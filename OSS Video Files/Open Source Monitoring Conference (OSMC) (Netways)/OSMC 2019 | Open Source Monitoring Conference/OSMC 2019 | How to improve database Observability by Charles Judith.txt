Title: OSMC 2019 | How to improve database Observability by Charles Judith
Publication date: 2019-11-18
Playlist: OSMC 2019 | Open Source Monitoring Conference
Description: 
	Delivering a database service is not a simple job but to ensure that everything is working correctly your platform needs to be observable. In this talk, I’ll talk about how we make the MySQL/MariaDB databases observable. We’ll talk about the RED, USE methods, and the golden signals. You’ll discover how we dealt with the following questions “We think the database is slow”. This talk will allow you to make your databases discoverable with open source solutions.


NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Musik: FRAMETRAXX
Captions: 
	00:00:12,930 --> 00:00:19,440
good afternoon everyone my name is

00:00:16,590 --> 00:00:22,470
chance so I'm working for a French

00:00:19,440 --> 00:00:27,119
company called acquittal supposed to add

00:00:22,470 --> 00:00:31,560
the next slide yes i working at twitter

00:00:27,119 --> 00:00:34,500
as a senior site for ability engineer so

00:00:31,560 --> 00:00:37,350
I used to work in the monitoring world

00:00:34,500 --> 00:00:43,170
the open-source monitoring one since few

00:00:37,350 --> 00:00:45,899
years I think it's Daniels at the

00:00:43,170 --> 00:00:48,540
beginning of my career at Crito we I was

00:00:45,899 --> 00:00:51,450
working in the observability team yes we

00:00:48,540 --> 00:00:53,640
added him calling observability so

00:00:51,450 --> 00:00:55,530
basically we were in charge of providing

00:00:53,640 --> 00:00:58,170
the observability stuck to our

00:00:55,530 --> 00:01:01,100
developers because our customers as a

00:00:58,170 --> 00:01:05,690
necessary is also as a reason developers

00:01:01,100 --> 00:01:09,750
which is something I think really good

00:01:05,690 --> 00:01:16,080
because we understand each other it's

00:01:09,750 --> 00:01:18,959
good and yes and now I'm working in a

00:01:16,080 --> 00:01:20,670
database service and providing the

00:01:18,959 --> 00:01:22,140
database service at widow she

00:01:20,670 --> 00:01:24,929
open-source database service because we

00:01:22,140 --> 00:01:28,319
have another database service which is

00:01:24,929 --> 00:01:30,360
not open source but we are providing an

00:01:28,319 --> 00:01:33,660
open source database service because

00:01:30,360 --> 00:01:36,390
some people need this kind of stuff

00:01:33,660 --> 00:01:41,569
within the company so we aren't out of

00:01:36,390 --> 00:01:48,200
this who is a gba here do we have DBS

00:01:41,569 --> 00:01:52,349
not with running my sequel amaya DB ok

00:01:48,200 --> 00:01:59,819
interesting I'm not a DBA sir oh it's

00:01:52,349 --> 00:02:03,149
fine yes ok so the agenda I'll give you

00:01:59,819 --> 00:02:04,950
I will give you the context what I'm

00:02:03,149 --> 00:02:09,060
doing because at the beginning it was

00:02:04,950 --> 00:02:11,790
just some tips for you to get your more

00:02:09,060 --> 00:02:15,780
visibility on your database service but

00:02:11,790 --> 00:02:17,370
the thing is that I received an email I

00:02:15,780 --> 00:02:19,739
think it was in August by the

00:02:17,370 --> 00:02:21,060
organization's I said ok you have more

00:02:19,739 --> 00:02:23,939
time if you want for tea or for your

00:02:21,060 --> 00:02:26,710
talk I was like oh ok I can make a

00:02:23,939 --> 00:02:29,020
feedback of what I did

00:02:26,710 --> 00:02:33,340
within my company so I will give you

00:02:29,020 --> 00:02:36,130
that in the context I will explain what

00:02:33,340 --> 00:02:37,810
we did so we have a first iteration we

00:02:36,130 --> 00:02:39,700
have a second iterations and I will

00:02:37,810 --> 00:02:42,160
explain to you the next steps and of

00:02:39,700 --> 00:02:43,870
course at the end I will share some

00:02:42,160 --> 00:02:47,860
resources with you because I created the

00:02:43,870 --> 00:02:50,290
github repository with few stuff I think

00:02:47,860 --> 00:02:53,770
and I hope this will be interesting for

00:02:50,290 --> 00:02:57,010
you as well so the context when you are

00:02:53,770 --> 00:02:59,640
providing a database service okay you

00:02:57,010 --> 00:03:02,920
have the client you have the application

00:02:59,640 --> 00:03:05,290
so basically you you are in charge of

00:03:02,920 --> 00:03:05,740
the database server and the database of

00:03:05,290 --> 00:03:08,440
course

00:03:05,740 --> 00:03:10,780
well the database you don't write the

00:03:08,440 --> 00:03:13,240
code that is within the database when

00:03:10,780 --> 00:03:15,850
you're just providing the service you

00:03:13,240 --> 00:03:17,530
are giving just the box and the guys are

00:03:15,850 --> 00:03:20,530
the applications with the database and

00:03:17,530 --> 00:03:24,520
they put it there just it's just simple

00:03:20,530 --> 00:03:26,020
on the paper most of the time you have

00:03:24,520 --> 00:03:28,450
the users the client they are

00:03:26,020 --> 00:03:30,220
complaining about yes the application is

00:03:28,450 --> 00:03:32,260
not working we are receiving some heroes

00:03:30,220 --> 00:03:35,290
and the application guys used to come to

00:03:32,260 --> 00:03:37,360
the guy behind the GPS server yes I

00:03:35,290 --> 00:03:39,760
think your database is slow the

00:03:37,360 --> 00:03:42,130
customers are not a PC users are not

00:03:39,760 --> 00:03:43,660
happy but look at this you have to

00:03:42,130 --> 00:03:44,980
network you have the application server

00:03:43,660 --> 00:03:48,430
you have the database server you have

00:03:44,980 --> 00:03:51,100
the database of course can be the

00:03:48,430 --> 00:03:53,470
network can miss the database can be the

00:03:51,100 --> 00:03:56,680
application and everyone the client-side

00:03:53,470 --> 00:03:58,570
can be anything so basically providing a

00:03:56,680 --> 00:04:02,650
database service is not something which

00:03:58,570 --> 00:04:04,600
is pretty easy you need to be very

00:04:02,650 --> 00:04:06,760
proactive and do monitoring you need to

00:04:04,600 --> 00:04:08,290
have a lot of statistics you need to

00:04:06,760 --> 00:04:10,380
have good monitoring with a latching

00:04:08,290 --> 00:04:15,550
system you have you need a lot of stuff

00:04:10,380 --> 00:04:17,980
okay so the context is the framing as I

00:04:15,550 --> 00:04:20,620
said this is the feedback we are running

00:04:17,980 --> 00:04:24,220
my sequel on bare metal servers really

00:04:20,620 --> 00:04:28,180
we don't have database in cloud and

00:04:24,220 --> 00:04:31,480
stuff like that so a real service we

00:04:28,180 --> 00:04:33,460
don't have any clusters we just have 11

00:04:31,480 --> 00:04:36,040
master replications and multiple data

00:04:33,460 --> 00:04:39,680
centers but this is a very basic stuff

00:04:36,040 --> 00:04:43,130
and when I joined the team

00:04:39,680 --> 00:04:45,919
last year so I'm in the gym since yeah

00:04:43,130 --> 00:04:50,270
now I think it's two months but who

00:04:45,919 --> 00:04:52,430
cares I joined the team because I was a

00:04:50,270 --> 00:04:54,860
customer of this team and at the

00:04:52,430 --> 00:04:58,910
beginning I need is just three databases

00:04:54,860 --> 00:05:00,770
for microphone setup and they said oh no

00:04:58,910 --> 00:05:03,500
you know we can't provide that because

00:05:00,770 --> 00:05:04,610
we are a bit busy right now I said okay

00:05:03,500 --> 00:05:06,710
I can help you

00:05:04,610 --> 00:05:10,970
what do you need I can help you on

00:05:06,710 --> 00:05:15,770
monitoring but I want my database so we

00:05:10,970 --> 00:05:19,460
made a deal and at the end they said can

00:05:15,770 --> 00:05:21,500
you stay in the team please because we

00:05:19,460 --> 00:05:24,560
had a lot of issues you know we had

00:05:21,500 --> 00:05:29,060
backup issues said an issue in

00:05:24,560 --> 00:05:31,220
pre-production fortunately there is you

00:05:29,060 --> 00:05:34,370
know we have the metal service we have

00:05:31,220 --> 00:05:37,699
chef chef white all the servers in per

00:05:34,370 --> 00:05:40,220
pod they said oh yes we have backup but

00:05:37,699 --> 00:05:42,560
there were no monitoring no latching no

00:05:40,220 --> 00:05:47,240
monitoring on backups backups were

00:05:42,560 --> 00:05:50,479
feeling since the beginning yes they

00:05:47,240 --> 00:05:52,789
said yes but we have metrics there the

00:05:50,479 --> 00:05:56,450
dashboards I worked with them two years

00:05:52,789 --> 00:05:59,900
ago on this dashboard but since then the

00:05:56,450 --> 00:06:01,700
platform has evolved but still oh we

00:05:59,900 --> 00:06:06,050
have this dashboard it's working keep it

00:06:01,700 --> 00:06:09,949
like that okay and you know the fun fact

00:06:06,050 --> 00:06:12,760
is that the open source database was

00:06:09,949 --> 00:06:17,030
managed by some people that used to do

00:06:12,760 --> 00:06:18,560
also a kind of database so they said oh

00:06:17,030 --> 00:06:20,270
yes we are just doing best effort on

00:06:18,560 --> 00:06:23,000
that other thing

00:06:20,270 --> 00:06:26,210
oh we have time for that the Edit tool

00:06:23,000 --> 00:06:28,280
called manioc a tool provided from my

00:06:26,210 --> 00:06:30,710
ODB you need to pay for this tool and

00:06:28,280 --> 00:06:34,120
said we have that but it's not working

00:06:30,710 --> 00:06:36,800
if you have something better feel free

00:06:34,120 --> 00:06:38,930
make some proposition and we'll see if

00:06:36,800 --> 00:06:43,669
we can do something so they were flying

00:06:38,930 --> 00:06:45,830
blind and just to give you a bit more

00:06:43,669 --> 00:06:47,330
details on the context so we have an

00:06:45,830 --> 00:06:49,940
asset management within the company

00:06:47,330 --> 00:06:52,370
every server set up because you have

00:06:49,940 --> 00:06:53,389
real servers every server set up saw the

00:06:52,370 --> 00:06:55,969
Commission

00:06:53,389 --> 00:06:57,319
are using this this application so if

00:06:55,969 --> 00:07:00,110
this application is not working

00:06:57,319 --> 00:07:01,610
basically the company is probably not

00:07:00,110 --> 00:07:03,199
good because we can't provide service

00:07:01,610 --> 00:07:06,319
weaken the Commission service and we are

00:07:03,199 --> 00:07:09,080
blocking a lot of people and at this

00:07:06,319 --> 00:07:11,000
time they were very blocking for a lot

00:07:09,080 --> 00:07:15,430
of people created a database that was a

00:07:11,000 --> 00:07:18,800
minor stuff every stuff was manual so

00:07:15,430 --> 00:07:23,090
not good at all and when I joined the

00:07:18,800 --> 00:07:25,580
team I said okay guys just we should

00:07:23,090 --> 00:07:29,060
discuss about our roadmap what do we

00:07:25,580 --> 00:07:32,960
need to do what should we improve what

00:07:29,060 --> 00:07:34,189
needs to be done to get to a reliable

00:07:32,960 --> 00:07:37,520
platform because the platform is not

00:07:34,189 --> 00:07:39,610
reliable at this time so we decided to

00:07:37,520 --> 00:07:42,409
put a rating

00:07:39,610 --> 00:07:44,419
we decided that if we have hidden stuff

00:07:42,409 --> 00:07:45,889
is an issues like the backup and also

00:07:44,419 --> 00:07:48,500
stuff because the backups were failing

00:07:45,889 --> 00:07:50,810
we had the log files with backup fail

00:07:48,500 --> 00:07:53,330
and also stuff but there were no

00:07:50,810 --> 00:07:55,669
monitoring and that basically if your

00:07:53,330 --> 00:07:58,699
backup is failing this is a scrape right

00:07:55,669 --> 00:07:59,900
you can have written status for this

00:07:58,699 --> 00:08:02,569
common of stuff like that so you can

00:07:59,900 --> 00:08:05,500
push the metric for that of course but

00:08:02,569 --> 00:08:08,389
the system was not designed like this

00:08:05,500 --> 00:08:10,819
which is fine and we did an observable

00:08:08,389 --> 00:08:14,180
platform because every issues since the

00:08:10,819 --> 00:08:16,159
beginning they were like oh we guess

00:08:14,180 --> 00:08:17,900
that the problem was due to the backup

00:08:16,159 --> 00:08:19,900
because it's happening during the night

00:08:17,900 --> 00:08:23,240
and during the night we have the backup

00:08:19,900 --> 00:08:25,279
but at the end I discovered that because

00:08:23,240 --> 00:08:29,839
I put some matrix if you are running

00:08:25,279 --> 00:08:32,209
maya gb 5.6 the system the unit file is

00:08:29,839 --> 00:08:35,390
not working as expected so basically

00:08:32,209 --> 00:08:37,969
your my sequel process is restarting

00:08:35,390 --> 00:08:40,490
randomly and four assists was during the

00:08:37,969 --> 00:08:45,500
night for some important applications

00:08:40,490 --> 00:08:46,820
like hana which is something really

00:08:45,500 --> 00:08:49,820
important for a company because

00:08:46,820 --> 00:08:51,740
basically if something is firing during

00:08:49,820 --> 00:08:53,570
the night the guys are they have

00:08:51,740 --> 00:08:56,269
primitives and subgraph Anna if graph

00:08:53,570 --> 00:08:57,800
Anna is not working problem of course we

00:08:56,269 --> 00:09:00,260
have graphite but I think the new

00:08:57,800 --> 00:09:03,980
members in the companies it don't even

00:09:00,260 --> 00:09:05,690
know that graphite web exists yes it's

00:09:03,980 --> 00:09:09,139
sad but true

00:09:05,690 --> 00:09:12,079
and of course the girl was we don't want

00:09:09,139 --> 00:09:15,199
to block to be a blocker for our users

00:09:12,079 --> 00:09:17,149
this should be available to work if I

00:09:15,199 --> 00:09:18,800
can I can you give me the log the slow

00:09:17,149 --> 00:09:20,139
query logs can you give me that can you

00:09:18,800 --> 00:09:23,180
give me that can you give me that oh

00:09:20,139 --> 00:09:26,480
just for your database okay so you are

00:09:23,180 --> 00:09:28,220
doing a gret ssh first yep

00:09:26,480 --> 00:09:29,690
okay you filter all the feelings the

00:09:28,220 --> 00:09:32,209
things you want if you have a lot of

00:09:29,690 --> 00:09:34,819
stuff you need to compress that get it

00:09:32,209 --> 00:09:37,579
in your laptop going on slack sending to

00:09:34,819 --> 00:09:39,290
the guy Oh next week he sandals again my

00:09:37,579 --> 00:09:41,209
team which is the entire guy so you need

00:09:39,290 --> 00:09:43,040
to transfer this fight to the other guy

00:09:41,209 --> 00:09:44,990
because I didn't have the time to take a

00:09:43,040 --> 00:09:47,810
look at that Wow okay

00:09:44,990 --> 00:09:53,029
this is crazy I wanted something really

00:09:47,810 --> 00:09:56,600
smooth and better okay so I said guys we

00:09:53,029 --> 00:09:57,889
need an observable platform like what I

00:09:56,600 --> 00:10:01,880
said

00:09:57,889 --> 00:10:03,319
what is observability okay so I don't

00:10:01,880 --> 00:10:05,360
know what is absolutely let's go and we

00:10:03,319 --> 00:10:08,660
keep a John check what about probability

00:10:05,360 --> 00:10:11,930
okay so observability regarding

00:10:08,660 --> 00:10:13,939
wikipedia it's a measure of our internal

00:10:11,930 --> 00:10:16,430
states of a system can be inferred from

00:10:13,939 --> 00:10:18,860
knowledge of its external outputs which

00:10:16,430 --> 00:10:20,720
is from wikipedia and people were like

00:10:18,860 --> 00:10:24,279
okay let's get more information about

00:10:20,720 --> 00:10:26,509
that I said oh yes we saw that

00:10:24,279 --> 00:10:28,310
observability has three pillars that's

00:10:26,509 --> 00:10:32,209
why you are flipping us here

00:10:28,310 --> 00:10:35,509
you should have monitoring logging and

00:10:32,209 --> 00:10:37,310
tracing I said yes but in our case you

00:10:35,509 --> 00:10:40,040
are providing a database service what

00:10:37,310 --> 00:10:42,350
kind of tracing you will have of course

00:10:40,040 --> 00:10:43,579
you can have your developers the

00:10:42,350 --> 00:10:45,620
application owners to addressing

00:10:43,579 --> 00:10:47,630
receives time to connect the data

00:10:45,620 --> 00:10:54,920
basically but we can we can work on that

00:10:47,630 --> 00:10:57,889
it so yes people were probably convinced

00:10:54,920 --> 00:11:00,980
about that so I decided to D to say okay

00:10:57,889 --> 00:11:04,699
guys the Wikipedia definition is a bit

00:11:00,980 --> 00:11:09,069
weird at some point so let's no either

00:11:04,699 --> 00:11:11,600
be okay what me I think about

00:11:09,069 --> 00:11:15,079
observability of stability is just not

00:11:11,600 --> 00:11:17,120
about the tools it's also it's not a

00:11:15,079 --> 00:11:19,250
fancy name to say monitoring because

00:11:17,120 --> 00:11:22,430
monitoring is a part of stability

00:11:19,250 --> 00:11:24,350
but yes we used to have some people

00:11:22,430 --> 00:11:26,389
within the company said oh we have grana

00:11:24,350 --> 00:11:29,120
we have observability I said no Graff

00:11:26,389 --> 00:11:31,610
Anna is not observability not in your

00:11:29,120 --> 00:11:32,959
case you just having some matrix with a

00:11:31,610 --> 00:11:34,910
graphite back-end you don't have

00:11:32,959 --> 00:11:35,180
observability you have monitoring come

00:11:34,910 --> 00:11:38,660
on

00:11:35,180 --> 00:11:42,829
and it's small but transparency

00:11:38,660 --> 00:11:44,240
transparency not just for us see the guy

00:11:42,829 --> 00:11:46,550
providing the application or the

00:11:44,240 --> 00:11:50,029
database service but also for our

00:11:46,550 --> 00:11:52,100
customers because if you need to have

00:11:50,029 --> 00:11:54,259
all information around the system

00:11:52,100 --> 00:11:56,329
because basically when stuff are not

00:11:54,259 --> 00:11:58,129
working its network and if you have a

00:11:56,329 --> 00:12:01,399
database if it's not a network it's a

00:11:58,129 --> 00:12:04,459
database of course and if you are using

00:12:01,399 --> 00:12:07,069
a JDBC driver stuff like that most of

00:12:04,459 --> 00:12:09,740
the time the error message is completely

00:12:07,069 --> 00:12:14,689
random and if you are using Django good

00:12:09,740 --> 00:12:16,490
luck yes this those assumption are based

00:12:14,689 --> 00:12:18,579
on my experience that creature because

00:12:16,490 --> 00:12:21,889
we have a lot of Django applications and

00:12:18,579 --> 00:12:24,290
we used to see some people oh we can't

00:12:21,889 --> 00:12:25,939
connect to the database yes but I can't

00:12:24,290 --> 00:12:28,370
see your connections in my servers so

00:12:25,939 --> 00:12:29,629
it's probably not my server so you need

00:12:28,370 --> 00:12:31,850
to handle these kind of stuffs that's

00:12:29,629 --> 00:12:34,699
why transparency and visibility is

00:12:31,850 --> 00:12:36,860
really important and also the access to

00:12:34,699 --> 00:12:40,250
the platform yesterday I saw it talked

00:12:36,860 --> 00:12:42,920
about log ingestion something like that

00:12:40,250 --> 00:12:44,990
and the guy said oh no you need to have

00:12:42,920 --> 00:12:47,180
access to the tool but the good news is

00:12:44,990 --> 00:12:48,649
that in my company we have metrics we

00:12:47,180 --> 00:12:50,930
have dashboards who have also stuff

00:12:48,649 --> 00:12:53,629
available for all these as a reason

00:12:50,930 --> 00:12:55,850
developer teams so we don't have any

00:12:53,629 --> 00:12:57,319
wars or stuff like that or you need to

00:12:55,850 --> 00:13:00,920
earn your access to the prod and stuff

00:12:57,319 --> 00:13:02,629
like that does not exist in our case

00:13:00,920 --> 00:13:06,079
because we are all in the same

00:13:02,629 --> 00:13:11,180
organization which is probably easier in

00:13:06,079 --> 00:13:15,079
that case okay so why a system needs to

00:13:11,180 --> 00:13:18,709
be observable because if your users are

00:13:15,079 --> 00:13:23,079
seeing facing issues before you see

00:13:18,709 --> 00:13:26,110
those issues you have some issues

00:13:23,079 --> 00:13:29,480
reputation issues oh those guys dislike

00:13:26,110 --> 00:13:31,900
the officials they don't even know we

00:13:29,480 --> 00:13:34,540
need to come at the desk to come

00:13:31,900 --> 00:13:37,589
yes they have metrics but they don't

00:13:34,540 --> 00:13:39,580
know how to read those metrics we want

00:13:37,589 --> 00:13:42,250
we want something that is really

00:13:39,580 --> 00:13:44,800
customer centric so we need to test the

00:13:42,250 --> 00:13:50,740
thing as the user in the time context

00:13:44,800 --> 00:13:54,070
basically and of course we need to

00:13:50,740 --> 00:13:57,490
verify few stuff and answer some basic

00:13:54,070 --> 00:13:59,560
questions about our platform like is the

00:13:57,490 --> 00:14:01,360
database flow is a database working

00:13:59,560 --> 00:14:04,660
yesterday was the database working or

00:14:01,360 --> 00:14:07,720
not because I didn't tell you but we

00:14:04,660 --> 00:14:09,640
have co-located databases on servers so

00:14:07,720 --> 00:14:12,490
you can have one database which is doing

00:14:09,640 --> 00:14:16,150
a lot of write right and one database

00:14:12,490 --> 00:14:17,680
which is doing a lot of read if they are

00:14:16,150 --> 00:14:21,570
all together on the same server you need

00:14:17,680 --> 00:14:24,100
to understand few stuff and you need to

00:14:21,570 --> 00:14:27,070
be smart when you are deploying the

00:14:24,100 --> 00:14:30,550
database on these servers and which is a

00:14:27,070 --> 00:14:32,860
busy most other part in this time you

00:14:30,550 --> 00:14:35,589
need long term long term trend analysis

00:14:32,860 --> 00:14:37,540
on your platform basically when we

00:14:35,589 --> 00:14:39,279
migrated from five point six to ten

00:14:37,540 --> 00:14:40,750
point three because we are running ten

00:14:39,279 --> 00:14:44,160
point three it's not the last question

00:14:40,750 --> 00:14:48,070
but we saw some differences in our case

00:14:44,160 --> 00:14:50,470
the matrix and other stuff and of course

00:14:48,070 --> 00:14:52,959
if you can't measure something you can

00:14:50,470 --> 00:14:54,970
say I'm managing this service I'm

00:14:52,959 --> 00:14:57,360
providing this to you and I not

00:14:54,970 --> 00:15:00,310
measuring in and not able to very fine

00:14:57,360 --> 00:15:02,709
if it's working as expected for the

00:15:00,310 --> 00:15:05,670
customer so yeah

00:15:02,709 --> 00:15:07,990
we have a lot of stuff so and of course

00:15:05,670 --> 00:15:11,440
the service was not reliable

00:15:07,990 --> 00:15:13,330
you need reliability and observability

00:15:11,440 --> 00:15:17,980
is really fundamental for the

00:15:13,330 --> 00:15:23,100
reliability if some of you know the

00:15:17,980 --> 00:15:25,660
Google a sorry book you can see this

00:15:23,100 --> 00:15:29,080
analogy to the mass flow here and see

00:15:25,660 --> 00:15:31,150
your ask is of needs basically you can

00:15:29,080 --> 00:15:33,820
see the first step is the monitoring how

00:15:31,150 --> 00:15:35,740
can you develop a tool maintainer tool

00:15:33,820 --> 00:15:37,089
and providing a tool without having

00:15:35,740 --> 00:15:41,320
monitoring to have the difference

00:15:37,089 --> 00:15:41,709
between each releases come on this is

00:15:41,320 --> 00:15:45,640
crazy

00:15:41,709 --> 00:15:47,680
I told before we don't want to fly blind

00:15:45,640 --> 00:15:51,070
so you need to add visibility so

00:15:47,680 --> 00:15:53,829
reliability is very important if you

00:15:51,070 --> 00:15:55,709
can't you don't have observability you

00:15:53,829 --> 00:15:58,480
can't automate things because you can't

00:15:55,709 --> 00:16:00,250
have exact information about the state

00:15:58,480 --> 00:16:04,019
of your service and also stuff so this

00:16:00,250 --> 00:16:06,100
is really really crazy so yeah

00:16:04,019 --> 00:16:08,050
observability is very important it's

00:16:06,100 --> 00:16:11,490
important but it's not something simple

00:16:08,050 --> 00:16:13,810
you know you can see this is in Spain

00:16:11,490 --> 00:16:15,790
dragon can I don't know if you try that

00:16:13,810 --> 00:16:19,480
we did that in team-building it's crazy

00:16:15,790 --> 00:16:23,890
you should try that it's in Barcelona so

00:16:19,480 --> 00:16:26,380
yeah this can describe my point of view

00:16:23,890 --> 00:16:28,839
of the observability effects okay

00:16:26,380 --> 00:16:31,980
because when I came in the team started

00:16:28,839 --> 00:16:35,740
with one topic in monitoring and I

00:16:31,980 --> 00:16:39,490
remember the first month our colleague

00:16:35,740 --> 00:16:44,350
he came at my desk he said stop it stop

00:16:39,490 --> 00:16:46,540
it because we felt that our platform was

00:16:44,350 --> 00:16:49,709
really good but we are discovering

00:16:46,540 --> 00:16:53,320
issues every week come on

00:16:49,709 --> 00:16:55,149
so yeah we had up and downs up and downs

00:16:53,320 --> 00:16:59,560
and up and downs and people get

00:16:55,149 --> 00:17:02,170
frustrated of course when I said guys we

00:16:59,560 --> 00:17:04,959
need that this is the process trust the

00:17:02,170 --> 00:17:07,780
process we need to go through that and

00:17:04,959 --> 00:17:10,209
then we should be able to have an

00:17:07,780 --> 00:17:12,069
interesting platform we will empower

00:17:10,209 --> 00:17:14,260
users because if you can provide

00:17:12,069 --> 00:17:16,870
interesting graph useful graph

00:17:14,260 --> 00:17:18,880
meaningful graph for you and for your

00:17:16,870 --> 00:17:22,089
users you can understand how the

00:17:18,880 --> 00:17:24,220
platform is working your users if you

00:17:22,089 --> 00:17:26,410
explain them all this thing is working

00:17:24,220 --> 00:17:28,569
they can also understand so this is

00:17:26,410 --> 00:17:30,580
really really important because giving

00:17:28,569 --> 00:17:32,500
superpowers because absorb which is

00:17:30,580 --> 00:17:36,090
giving superpowers to everyone to you

00:17:32,500 --> 00:17:41,350
and to your users of course

00:17:36,090 --> 00:17:45,690
basically after we started to revamp all

00:17:41,350 --> 00:17:48,250
the metric system we have some users

00:17:45,690 --> 00:17:51,820
they are releasing the codes application

00:17:48,250 --> 00:17:55,330
and sending some message and slack okay

00:17:51,820 --> 00:17:57,330
guys we released our app we think that

00:17:55,330 --> 00:17:59,210
we have something wrong we saw the graph

00:17:57,330 --> 00:18:01,340
our graph

00:17:59,210 --> 00:18:05,630
Susy that's a good reflexes to check the

00:18:01,340 --> 00:18:07,790
graph and we are providing a patch if

00:18:05,630 --> 00:18:11,000
there is something please contact us we

00:18:07,790 --> 00:18:14,690
will roll back if it's very urgent so

00:18:11,000 --> 00:18:17,060
this is really really important and of

00:18:14,690 --> 00:18:19,940
course you need to be patient because it

00:18:17,060 --> 00:18:23,000
took us like more than six months to put

00:18:19,940 --> 00:18:24,620
all of that in place because we had to

00:18:23,000 --> 00:18:26,360
prioritize all the tasks and all that

00:18:24,620 --> 00:18:28,910
stuff so that was not the main thing

00:18:26,360 --> 00:18:30,380
once we had the monitoring thing which

00:18:28,910 --> 00:18:33,680
is working in the gelatine so we said

00:18:30,380 --> 00:18:34,850
okay we need few other stuff but we can

00:18:33,680 --> 00:18:38,480
wait it's fine

00:18:34,850 --> 00:18:41,140
so yeah important but hard remember the

00:18:38,480 --> 00:18:45,440
roller coaster this is not an easy thing

00:18:41,140 --> 00:18:47,600
so we know what is observability we know

00:18:45,440 --> 00:18:50,300
what are the effects of the

00:18:47,600 --> 00:18:51,140
observability I think we are ready to go

00:18:50,300 --> 00:18:56,120
in this adventure

00:18:51,140 --> 00:18:57,920
so our first iteration was the matrix we

00:18:56,120 --> 00:19:00,020
had to work on the matrix because

00:18:57,920 --> 00:19:03,250
basically at the beginning we had graphs

00:19:00,020 --> 00:19:07,280
of course you have the replication lag

00:19:03,250 --> 00:19:10,310
weave which is delay in seconds on the

00:19:07,280 --> 00:19:13,280
same graph and the same panel then the

00:19:10,310 --> 00:19:14,810
relay load which is megabyte so can you

00:19:13,280 --> 00:19:17,150
read that graph can you understand that

00:19:14,810 --> 00:19:19,940
graph we have the number of connections

00:19:17,150 --> 00:19:23,000
also stuff the units were not correct so

00:19:19,940 --> 00:19:24,920
no one was about no one in the team was

00:19:23,000 --> 00:19:28,310
about to read the graphing to understand

00:19:24,920 --> 00:19:30,710
what's in this graph is it a percentage

00:19:28,310 --> 00:19:32,870
is it time to second is it a second is

00:19:30,710 --> 00:19:36,470
it a stuff like that so we have to fix

00:19:32,870 --> 00:19:40,880
this kind of stuff but yeah you have a

00:19:36,470 --> 00:19:45,200
lot of methods to start to gathering

00:19:40,880 --> 00:19:47,150
metrics but how to start we saw that you

00:19:45,200 --> 00:19:49,370
have use method you have ran methods you

00:19:47,150 --> 00:19:53,720
have CAD Mike as metal you have a lot of

00:19:49,370 --> 00:19:55,910
stuff what can we do okay first we have

00:19:53,720 --> 00:19:57,560
the use method use method I think this

00:19:55,910 --> 00:20:01,490
is a very famous method this was

00:19:57,560 --> 00:20:03,770
introduced by bandit Greg this is

00:20:01,490 --> 00:20:06,410
basically used for each realization

00:20:03,770 --> 00:20:09,590
saturation and heroes so this is

00:20:06,410 --> 00:20:12,950
basically all your system metrics you

00:20:09,590 --> 00:20:15,170
know if your Linux server is working a

00:20:12,950 --> 00:20:19,400
expected you can check the resources and

00:20:15,170 --> 00:20:24,980
also stuff so basically this is system

00:20:19,400 --> 00:20:27,500
metrics you have the four golden signals

00:20:24,980 --> 00:20:30,860
once again from the Google asari book

00:20:27,500 --> 00:20:32,990
which is a really good book I recommend

00:20:30,860 --> 00:20:36,830
you if you didn't read that book this is

00:20:32,990 --> 00:20:39,830
really interesting so the garden signals

00:20:36,830 --> 00:20:41,570
are latency the response time so cue

00:20:39,830 --> 00:20:45,560
wait time because we are providing a

00:20:41,570 --> 00:20:49,520
database what our user they want they

00:20:45,560 --> 00:20:52,040
want the database to be fast they want

00:20:49,520 --> 00:20:54,710
the courage to not be blocked by

00:20:52,040 --> 00:20:57,950
something else within the database even

00:20:54,710 --> 00:20:59,720
if sometimes their own database schema

00:20:57,950 --> 00:21:03,830
is blocking the Clarys because I don't

00:20:59,720 --> 00:21:06,080
use indexes and also stuff the traffic

00:21:03,830 --> 00:21:06,980
we need too much to measure how much the

00:21:06,080 --> 00:21:11,450
man

00:21:06,980 --> 00:21:13,190
our service is facing these are basic

00:21:11,450 --> 00:21:15,830
stuffs that we need to do you have the

00:21:13,190 --> 00:21:18,320
eros of course you have the saturation

00:21:15,830 --> 00:21:20,000
of full is your service and this is also

00:21:18,320 --> 00:21:22,480
interesting when you want to do some

00:21:20,000 --> 00:21:26,210
capacity planning and stuff like that

00:21:22,480 --> 00:21:29,000
you are the read method introduced by

00:21:26,210 --> 00:21:31,310
Tom wookie this is a subset of the four

00:21:29,000 --> 00:21:35,420
garden signals because of course Tom he

00:21:31,310 --> 00:21:36,980
worked at Google and when he started to

00:21:35,420 --> 00:21:39,890
work outside of Google he decided to

00:21:36,980 --> 00:21:43,160
create the zoo she read method rate for

00:21:39,890 --> 00:21:47,720
rate eros and durations so usually which

00:21:43,160 --> 00:21:50,270
is applied to micro service but you see

00:21:47,720 --> 00:21:55,070
we can have derivate of that for Hugh as

00:21:50,270 --> 00:21:57,950
a methods you have the seven golden

00:21:55,070 --> 00:22:01,310
signals this was introduced by Bower

00:21:57,950 --> 00:22:02,870
entrants this is a guy which is quite

00:22:01,310 --> 00:22:05,450
good in the database topic

00:22:02,870 --> 00:22:10,280
well databases because more than one

00:22:05,450 --> 00:22:13,550
database he introduced the seven golden

00:22:10,280 --> 00:22:16,550
signals which is the Celt and news we

00:22:13,550 --> 00:22:19,250
saw the use method now the Celt

00:22:16,550 --> 00:22:22,100
concurrency error rate latency and

00:22:19,250 --> 00:22:25,010
throughput which are very oriented to

00:22:22,100 --> 00:22:26,330
databases system which is interesting

00:22:25,010 --> 00:22:28,339
for us now

00:22:26,330 --> 00:22:31,909
in our case we'll pick something like

00:22:28,339 --> 00:22:35,659
that and you have the case method so the

00:22:31,909 --> 00:22:38,389
case method is inspired by the use

00:22:35,659 --> 00:22:41,509
method and the Tom Wilkie is rad method

00:22:38,389 --> 00:22:44,479
so this was introduced by your quarry

00:22:41,509 --> 00:22:47,389
Watson which is a guy also famous in the

00:22:44,479 --> 00:22:50,749
monitoring world see for context evie

00:22:47,389 --> 00:22:52,359
actionable symptom based and evaluated

00:22:50,749 --> 00:22:57,379
I will provide more details about that

00:22:52,359 --> 00:22:59,570
about that on github because I don't

00:22:57,379 --> 00:23:03,200
know very well this this method to be

00:22:59,570 --> 00:23:05,749
honest with you so wait we have a lot of

00:23:03,200 --> 00:23:07,309
information to ingest what what should

00:23:05,749 --> 00:23:11,469
we do okay

00:23:07,309 --> 00:23:15,079
we need we need a plan so in our case

00:23:11,469 --> 00:23:17,570
the preferred approach was to use the

00:23:15,079 --> 00:23:21,109
seven golden signals because this

00:23:17,570 --> 00:23:24,349
evangelism signals was database oriented

00:23:21,109 --> 00:23:26,599
and we didn't use the four golden

00:23:24,349 --> 00:23:29,450
signals because the focalin signals is

00:23:26,599 --> 00:23:32,119
more based on stuff like you have SLS

00:23:29,450 --> 00:23:34,579
and stuff like that at that time we

00:23:32,119 --> 00:23:36,739
didn't have SLS and few other stuff so

00:23:34,579 --> 00:23:39,079
we are not able to have some useful

00:23:36,739 --> 00:23:41,539
information from the user point of view

00:23:39,079 --> 00:23:44,329
like we didn't have a probe that will

00:23:41,539 --> 00:23:46,849
use the same DNS as the user and connect

00:23:44,329 --> 00:23:49,429
from outside of the DB so we decided to

00:23:46,849 --> 00:23:53,599
start with a simple method seven golden

00:23:49,429 --> 00:23:55,639
signals this is good to to measure the

00:23:53,599 --> 00:23:57,559
service quality in our case played to

00:23:55,639 --> 00:23:59,509
the database and you have the system and

00:23:57,559 --> 00:24:04,009
the application metrics which are

00:23:59,509 --> 00:24:07,639
interesting for us so how to collect the

00:24:04,009 --> 00:24:10,070
metrics we have the methods now we need

00:24:07,639 --> 00:24:12,289
to know how to collect the metrics so

00:24:10,070 --> 00:24:14,989
you have a lot of solutions in our case

00:24:12,289 --> 00:24:17,479
we are using collect G we are also using

00:24:14,989 --> 00:24:19,609
the node exporter but not for that

00:24:17,479 --> 00:24:23,109
specific case we are using the node

00:24:19,609 --> 00:24:27,079
exporter for our backup monitoring yes

00:24:23,109 --> 00:24:29,179
because back in the days I said guys we

00:24:27,079 --> 00:24:31,849
should not rely on the push get away the

00:24:29,179 --> 00:24:33,559
parameters put it away and I said yes we

00:24:31,849 --> 00:24:35,599
should use that and we had some issues

00:24:33,559 --> 00:24:38,450
because they push it away stateless and

00:24:35,599 --> 00:24:39,510
it's running on the container in my

00:24:38,450 --> 00:24:41,040
company

00:24:39,510 --> 00:24:43,770
when the container is restarting so you

00:24:41,040 --> 00:24:46,200
will lose everything so you can lose the

00:24:43,770 --> 00:24:49,020
state of your backups backups are inning

00:24:46,200 --> 00:24:50,760
twice a day so if it's restarted at the

00:24:49,020 --> 00:24:54,660
wrong time you don't have the status of

00:24:50,760 --> 00:24:56,040
your backups which is not good and we

00:24:54,660 --> 00:24:57,960
had to deal with that that's why we

00:24:56,040 --> 00:24:59,700
decided to have the nod exporter we are

00:24:57,960 --> 00:25:01,380
exporting all the time the last stat

00:24:59,700 --> 00:25:04,200
reason which is fine and she's the next

00:25:01,380 --> 00:25:07,520
one of the backup so we are using

00:25:04,200 --> 00:25:11,220
collect G and the my sequel G exporter

00:25:07,520 --> 00:25:12,600
which is a plugin for the Equality no we

00:25:11,220 --> 00:25:14,430
are not using the basically what we are

00:25:12,600 --> 00:25:17,430
is in the Python bicycle plug-in for

00:25:14,430 --> 00:25:19,200
quality we this project because

00:25:17,430 --> 00:25:20,820
we made some pull requests on the

00:25:19,200 --> 00:25:23,210
upstream project but I think the guy is

00:25:20,820 --> 00:25:26,820
not maintaining the project Nemo VCC

00:25:23,210 --> 00:25:29,160
open source world so we had a lot of

00:25:26,820 --> 00:25:30,570
patches we decided to use some stuff in

00:25:29,160 --> 00:25:32,730
performance schema and I know if you are

00:25:30,570 --> 00:25:35,040
familiar with performance schema to have

00:25:32,730 --> 00:25:37,290
more stats on you know DB and stuff like

00:25:35,040 --> 00:25:39,060
that so which is interesting

00:25:37,290 --> 00:25:41,820
those are clickable so you can click on

00:25:39,060 --> 00:25:44,850
that the slide will be available and you

00:25:41,820 --> 00:25:48,900
have few other methods so this is cool

00:25:44,850 --> 00:25:51,030
yes I met Hugh per request on that it

00:25:48,900 --> 00:25:53,160
was quite funny funny for me I like

00:25:51,030 --> 00:26:00,840
sometimes doing some stuff in Python

00:25:53,160 --> 00:26:05,640
it's cool ok we have what will be our

00:26:00,840 --> 00:26:11,820
approach what method should we use okay

00:26:05,640 --> 00:26:14,700
what kind of tool we can use but now we

00:26:11,820 --> 00:26:18,990
are measuring metrics we have also stuff

00:26:14,700 --> 00:26:22,020
what can we do as I said before we

00:26:18,990 --> 00:26:23,370
needed a legend to show to see if the

00:26:22,020 --> 00:26:26,910
service is working on it

00:26:23,370 --> 00:26:29,130
so you need a letting you need to put

00:26:26,910 --> 00:26:31,650
some useful indicators I don't like this

00:26:29,130 --> 00:26:34,200
word that's why it's in code you need to

00:26:31,650 --> 00:26:36,060
put some useful indicators to know if

00:26:34,200 --> 00:26:37,770
your service is working as expected on

00:26:36,060 --> 00:26:41,250
it so you have this read usage because

00:26:37,770 --> 00:26:44,490
database are collocated right so we need

00:26:41,250 --> 00:26:48,470
to know if one server is not overloaded

00:26:44,490 --> 00:26:50,820
so we can balance the database on

00:26:48,470 --> 00:26:52,490
another service and also stuff the

00:26:50,820 --> 00:26:54,919
service status

00:26:52,490 --> 00:26:58,369
if my Adibi is running or not because we

00:26:54,919 --> 00:27:00,830
saw before I told you we had some random

00:26:58,369 --> 00:27:04,490
restarts and I said it's the backup that

00:27:00,830 --> 00:27:08,509
was not the backup for information in my

00:27:04,490 --> 00:27:11,690
DB 5.6 the unit file has been converted

00:27:08,509 --> 00:27:16,490
by you tool which is in charge of

00:27:11,690 --> 00:27:17,450
converting any D scripts in system the

00:27:16,490 --> 00:27:19,519
unit file

00:27:17,450 --> 00:27:21,740
so basically when your service is

00:27:19,519 --> 00:27:25,879
started the status is not started but

00:27:21,740 --> 00:27:28,669
exceeded so and system D I think is

00:27:25,879 --> 00:27:30,950
system D is scanning this kind of status

00:27:28,669 --> 00:27:32,419
and when it's exceeded he said oh the

00:27:30,950 --> 00:27:34,850
service is probably not running so I

00:27:32,419 --> 00:27:37,159
retrieve a restart but we seized during

00:27:34,850 --> 00:27:38,720
the night and you're like this is the

00:27:37,159 --> 00:27:41,269
backups because he's scratching a lock

00:27:38,720 --> 00:27:43,879
and this is why the database was not

00:27:41,269 --> 00:27:46,279
available but we didn't admit weeks

00:27:43,879 --> 00:27:49,580
under logs and also stuff just a guess

00:27:46,279 --> 00:27:51,799
we don't have proof of that and with

00:27:49,580 --> 00:27:55,519
this kind of stuff we were able to see

00:27:51,799 --> 00:28:01,519
oh yes this was system D and not the

00:27:55,519 --> 00:28:04,039
backups because he had the logs also we

00:28:01,519 --> 00:28:07,159
had some documentation like yes we can

00:28:04,039 --> 00:28:09,379
restore a backup in less than 24 hours

00:28:07,159 --> 00:28:13,879
we have this kind of stuff

00:28:09,379 --> 00:28:17,899
we had some commitments about data loss

00:28:13,879 --> 00:28:20,869
and also stuff I said guys calm down you

00:28:17,899 --> 00:28:26,320
don't even know how many time it takes

00:28:20,869 --> 00:28:28,879
to do a backup what is your backup size

00:28:26,320 --> 00:28:32,480
what is the backup status we didn't edit

00:28:28,879 --> 00:28:34,700
information before we don't have restore

00:28:32,480 --> 00:28:36,559
how can you say we can restore your data

00:28:34,700 --> 00:28:38,869
if you don't test the restore those data

00:28:36,559 --> 00:28:40,519
and how many times I can restore this

00:28:38,869 --> 00:28:43,580
database this server and this kind of

00:28:40,519 --> 00:28:45,980
stuff I said no no this is crazy so we

00:28:43,580 --> 00:28:50,389
decided to pick some kind of stuff put

00:28:45,980 --> 00:28:53,809
some metrics on it as I said we have

00:28:50,389 --> 00:28:54,740
replication so we had some monitoring on

00:28:53,809 --> 00:28:57,799
the replication lag

00:28:54,740 --> 00:29:01,340
thanks to PTR bit another wonderful

00:28:57,799 --> 00:29:04,990
open-source tool and we decided to say

00:29:01,340 --> 00:29:09,500
ok if the thread usage is critical

00:29:04,990 --> 00:29:11,240
is this an important thing on earth yes

00:29:09,500 --> 00:29:13,940
so we decided to put some other things

00:29:11,240 --> 00:29:16,100
it's a very cheap page page someone

00:29:13,940 --> 00:29:21,340
during the night if these read usage is

00:29:16,100 --> 00:29:24,500
not is not in the with a lower number

00:29:21,340 --> 00:29:25,100
the service status is your service up or

00:29:24,500 --> 00:29:31,010
down

00:29:25,100 --> 00:29:34,790
okay page backup status back the backup

00:29:31,010 --> 00:29:36,890
has failed should I wake up during the

00:29:34,790 --> 00:29:39,740
night to fix the backup this can wait

00:29:36,890 --> 00:29:41,420
tomorrow ticket severity and we do this

00:29:39,740 --> 00:29:44,420
kind of stuff the replication lag the

00:29:41,420 --> 00:29:46,520
replication is just for us if the server

00:29:44,420 --> 00:29:48,680
is the master server is having an odd

00:29:46,520 --> 00:29:50,210
way issue because it's a receiver if you

00:29:48,680 --> 00:29:52,520
need to change the most of all the stuff

00:29:50,210 --> 00:29:56,120
like that you need to cut the 7 - you

00:29:52,520 --> 00:29:58,880
need a backup so what you said oh we had

00:29:56,120 --> 00:30:01,010
an issue wait the server is not working

00:29:58,880 --> 00:30:03,320
but the data was there we can take your

00:30:01,010 --> 00:30:05,540
backup from yesterday and hosted though

00:30:03,320 --> 00:30:07,910
we decided to use the replication but

00:30:05,540 --> 00:30:10,310
replication lag was not something very

00:30:07,910 --> 00:30:12,350
important for us so we decided to just

00:30:10,310 --> 00:30:16,850
use the tickets already for that we had

00:30:12,350 --> 00:30:18,500
a latching so in that time I remember we

00:30:16,850 --> 00:30:20,240
had a lot of issues about the service

00:30:18,500 --> 00:30:22,880
status during the night they said no no

00:30:20,240 --> 00:30:25,940
remove the page severity

00:30:22,880 --> 00:30:28,340
I said no should fix it we should

00:30:25,940 --> 00:30:31,010
understand why it's not working you

00:30:28,340 --> 00:30:34,120
can't say oh I get paged during the

00:30:31,010 --> 00:30:38,450
night delete that a lot is not useful

00:30:34,120 --> 00:30:41,000
yes it is and this is why you get page

00:30:38,450 --> 00:30:42,920
three times a night that means you need

00:30:41,000 --> 00:30:46,220
to fix that don't avoid this kind of

00:30:42,920 --> 00:30:48,380
stuff this is life but we have the

00:30:46,220 --> 00:30:50,690
matrix we have the Elliots out to shows

00:30:48,380 --> 00:30:53,330
us matrix unique we need to show those

00:30:50,690 --> 00:30:55,490
matrix through the users so of course we

00:30:53,330 --> 00:31:00,260
did some dashboards these are the new

00:30:55,490 --> 00:31:02,870
dashboards a tiny and I didn't create us

00:31:00,260 --> 00:31:05,390
dashboard I saw a guy on github he

00:31:02,870 --> 00:31:08,510
posted his dashboard and then I made few

00:31:05,390 --> 00:31:10,730
adjustments for us and of course he will

00:31:08,510 --> 00:31:12,410
add the link to those dashboards so we

00:31:10,730 --> 00:31:15,260
decided to have a global overview

00:31:12,410 --> 00:31:17,900
because we we had a previewed dashboard

00:31:15,260 --> 00:31:20,090
but when I knew

00:31:17,900 --> 00:31:22,790
the B matrix we have husted on that and

00:31:20,090 --> 00:31:25,100
it was not complete you have all the

00:31:22,790 --> 00:31:28,190
stuff on one single dashboard but it was

00:31:25,100 --> 00:31:31,820
not fully complete so we decided to to

00:31:28,190 --> 00:31:35,900
have something like a global a global

00:31:31,820 --> 00:31:37,760
view for only the simple stuff in the

00:31:35,900 --> 00:31:41,870
database service and you can see we have

00:31:37,760 --> 00:31:44,120
logs so we have the type of select

00:31:41,870 --> 00:31:47,810
delete and also stuff of course in there

00:31:44,120 --> 00:31:51,410
you have a lot of matrix specific

00:31:47,810 --> 00:31:53,660
dashboard for the in ODB matrix fun fact

00:31:51,410 --> 00:31:57,020
is that last week we had an issue and

00:31:53,660 --> 00:31:59,230
this dashboard I compared to the

00:31:57,020 --> 00:32:02,330
previous previous dashboard this - bond

00:31:59,230 --> 00:32:06,040
showed us some differences between two

00:32:02,330 --> 00:32:10,040
slaves and we didn't understand we had a

00:32:06,040 --> 00:32:11,810
replication lag of less than five

00:32:10,040 --> 00:32:14,990
minutes so we didn't get a ticket for

00:32:11,810 --> 00:32:17,810
that on one server and so if you

00:32:14,990 --> 00:32:20,000
remember we restarted the server I was

00:32:17,810 --> 00:32:23,930
like this is the disk I'm pretty sure

00:32:20,000 --> 00:32:25,790
the disk is dead test I told my

00:32:23,930 --> 00:32:27,800
colleague I said just to write something

00:32:25,790 --> 00:32:29,330
with ten megabytes and we should measure

00:32:27,800 --> 00:32:31,280
how many times he can write ten

00:32:29,330 --> 00:32:32,900
megabytes oh no it's not a disk it's not

00:32:31,280 --> 00:32:35,570
another issue come on

00:32:32,900 --> 00:32:37,370
I was desperate I said can you try an

00:32:35,570 --> 00:32:38,960
optimized table probably all the indexes

00:32:37,370 --> 00:32:41,330
but I don't understand this is just a

00:32:38,960 --> 00:32:43,220
slave why the master doesn't have this

00:32:41,330 --> 00:32:45,050
issue the other slave doesn't have this

00:32:43,220 --> 00:32:48,260
issue but this lab is having this issue

00:32:45,050 --> 00:32:52,730
and we were spotting the queries running

00:32:48,260 --> 00:32:55,280
a lot of like two three times this query

00:32:52,730 --> 00:32:58,280
per minute say probably the index so we

00:32:55,280 --> 00:32:59,990
run an optimized table and we saw big

00:32:58,280 --> 00:33:02,900
differences oh okay

00:32:59,990 --> 00:33:05,300
interesting but we had this information

00:33:02,900 --> 00:33:07,070
in the matrix and we also had the matrix

00:33:05,300 --> 00:33:08,720
on the replication lag but it was less

00:33:07,070 --> 00:33:10,910
than five minutes and we set for further

00:33:08,720 --> 00:33:13,340
five minutes for the replication but

00:33:10,910 --> 00:33:15,800
yeah we should improve that too and of

00:33:13,340 --> 00:33:19,040
course we created the simple view for

00:33:15,800 --> 00:33:23,120
our users so basically our customer

00:33:19,040 --> 00:33:24,770
graph on our you can see the latency we

00:33:23,120 --> 00:33:27,320
will open source of a new problem those

00:33:24,770 --> 00:33:29,750
are measured by a probe we have a probe

00:33:27,320 --> 00:33:31,130
which is querying the database because

00:33:29,750 --> 00:33:34,190
we are using console to

00:33:31,130 --> 00:33:37,160
they discover the database and people

00:33:34,190 --> 00:33:40,640
are using a consult Danis to know where

00:33:37,160 --> 00:33:43,400
the database is so if you are changing

00:33:40,640 --> 00:33:46,370
the master/slave servers they just have

00:33:43,400 --> 00:33:48,200
the same the same genus which is cool so

00:33:46,370 --> 00:33:50,539
we need to test the connection like the

00:33:48,200 --> 00:33:52,340
users from outside of the seven so this

00:33:50,539 --> 00:33:56,049
probe is doing that and we have a lot of

00:33:52,340 --> 00:34:01,760
simple stat for the users again database

00:33:56,049 --> 00:34:05,450
yes database size when we create a new

00:34:01,760 --> 00:34:08,379
database we are like how many what is

00:34:05,450 --> 00:34:12,429
the size of the database five gigs I

00:34:08,379 --> 00:34:16,550
took two hours to read all the pages

00:34:12,429 --> 00:34:22,060
about each database and there is a team

00:34:16,550 --> 00:34:25,040
they asked for ten gigs and add 100 gigs

00:34:22,060 --> 00:34:26,929
okay okay interesting

00:34:25,040 --> 00:34:30,530
this is also something that we had in

00:34:26,929 --> 00:34:32,389
the Python collective frigging and of

00:34:30,530 --> 00:34:35,480
course you have to use dashboard for

00:34:32,389 --> 00:34:39,500
your system because you know your disk

00:34:35,480 --> 00:34:45,830
can be full this can happens because of

00:34:39,500 --> 00:34:49,460
my sequel believe me yes look at this we

00:34:45,830 --> 00:34:51,800
had an issue fortunately and

00:34:49,460 --> 00:34:53,540
unfortunately for me I was the interweb

00:34:51,800 --> 00:34:55,369
guys the interweb guy is the guy and

00:34:53,540 --> 00:34:56,840
link the issues during the day so you

00:34:55,369 --> 00:34:58,250
have a dashboard you have the alerts and

00:34:56,840 --> 00:35:00,200
you have some simple tasks that you need

00:34:58,250 --> 00:35:02,450
to do and if people have questions about

00:35:00,200 --> 00:35:04,130
a I need to cut a database what I need

00:35:02,450 --> 00:35:06,350
to do a I have some questions about

00:35:04,130 --> 00:35:10,010
those metrics hey I have some you as a

00:35:06,350 --> 00:35:15,770
guy for that so we had an issues I was

00:35:10,010 --> 00:35:22,450
like okay 2.6 terabyte that was an issue

00:35:15,770 --> 00:35:27,260
which MP table table I was like okay

00:35:22,450 --> 00:35:31,340
that was stuff because I was getting

00:35:27,260 --> 00:35:35,150
very frustrated about that we have the

00:35:31,340 --> 00:35:38,990
matrix but I didn't have the context so

00:35:35,150 --> 00:35:43,550
I I don't know what is the issue and I'm

00:35:38,990 --> 00:35:44,990
like come on man you have and I was

00:35:43,550 --> 00:35:52,390
trying to read this file

00:35:44,990 --> 00:35:56,839
but 2.6 terabyte I said okay I give up

00:35:52,390 --> 00:35:59,359
we had some guys when you are requesting

00:35:56,839 --> 00:36:01,430
your database of course they are

00:35:59,359 --> 00:36:03,470
co-located so we put some security on

00:36:01,430 --> 00:36:05,800
that okay ominous image the news

00:36:03,470 --> 00:36:09,380
connection for your hub they said oh

00:36:05,800 --> 00:36:12,260
they put a random number okay fine so

00:36:09,380 --> 00:36:13,940
they launched the hub oh it's not

00:36:12,260 --> 00:36:16,520
working okay

00:36:13,940 --> 00:36:19,550
shutdown relaunched up oh he's not

00:36:16,520 --> 00:36:21,140
working okay shut down ranged up and

00:36:19,550 --> 00:36:23,690
then the guy he came at my desk he said

00:36:21,140 --> 00:36:26,359
oh your database is shitty it's not

00:36:23,690 --> 00:36:26,900
working I said oh come on what's your

00:36:26,359 --> 00:36:30,140
issue

00:36:26,900 --> 00:36:32,540
look I said okay and how many connection

00:36:30,140 --> 00:36:37,010
did you ask for this simultaneous

00:36:32,540 --> 00:36:39,500
connection I don't know okay you created

00:36:37,010 --> 00:36:44,060
this request right that was you yeah

00:36:39,500 --> 00:36:46,760
okay at the end we put the right number

00:36:44,060 --> 00:36:49,099
and it's fine it's fine but I told him

00:36:46,760 --> 00:36:51,080
you need also to to fix your code

00:36:49,099 --> 00:36:55,369
because I won't hold you to use all of

00:36:51,080 --> 00:37:00,470
that because the max is 2k come on

00:36:55,369 --> 00:37:03,980
and also we as you can see our metric

00:37:00,470 --> 00:37:07,480
system is working and interesting this

00:37:03,980 --> 00:37:10,820
is a database cleaning for fun hub

00:37:07,480 --> 00:37:12,800
internal hub and we run the optimized

00:37:10,820 --> 00:37:15,440
able to clean the whole indexes and

00:37:12,800 --> 00:37:23,359
other stuff look how many space that we

00:37:15,440 --> 00:37:25,820
saved good interesting so the database

00:37:23,359 --> 00:37:28,990
expose a lot of metrics about the

00:37:25,820 --> 00:37:32,240
statues but much less about the details

00:37:28,990 --> 00:37:34,520
details of their workload so we try to

00:37:32,240 --> 00:37:36,560
focus on that I'm still working on that

00:37:34,520 --> 00:37:38,990
because I need more and more information

00:37:36,560 --> 00:37:41,300
because the thing with the old index is

00:37:38,990 --> 00:37:42,369
when I run the optimized doubled I was

00:37:41,300 --> 00:37:44,780
like come on

00:37:42,369 --> 00:37:47,890
we have sis kima I don't know if you

00:37:44,780 --> 00:37:49,760
know what his sis kima I'm trying to

00:37:47,890 --> 00:37:52,609
spot this kind of stuff

00:37:49,760 --> 00:37:55,640
by using C schema so this is one of the

00:37:52,609 --> 00:37:57,080
next step for my stuff we have system

00:37:55,640 --> 00:37:58,830
and database matrix we have high ratings

00:37:57,080 --> 00:38:00,450
everything is fine we have the

00:37:58,830 --> 00:38:04,740
about matrix easily available for

00:38:00,450 --> 00:38:07,170
everyone so wait this is good good okay

00:38:04,740 --> 00:38:08,850
we had a guy who came out of a desk he

00:38:07,170 --> 00:38:11,040
said oh you know what

00:38:08,850 --> 00:38:13,280
last week we think that the database was

00:38:11,040 --> 00:38:18,210
slow really yes

00:38:13,280 --> 00:38:21,920
okay I'm looking at the graph oh yes

00:38:18,210 --> 00:38:27,690
once again no context I was like come on

00:38:21,920 --> 00:38:30,060
come on oh and we have a lot of guys are

00:38:27,690 --> 00:38:32,130
coming we think our database is slow so

00:38:30,060 --> 00:38:35,310
we can we can see some stuff on the

00:38:32,130 --> 00:38:38,400
matrix but we have no context but he

00:38:35,310 --> 00:38:39,840
said yes you have issues but as you

00:38:38,400 --> 00:38:40,130
don't have context you don't know what

00:38:39,840 --> 00:38:42,720
it is

00:38:40,130 --> 00:38:45,870
yes you want an observable platform but

00:38:42,720 --> 00:38:47,940
you're not good enough it's not good you

00:38:45,870 --> 00:38:52,770
need to improve that so we need it

00:38:47,940 --> 00:38:55,860
context okay I said guys okay we have we

00:38:52,770 --> 00:38:57,810
have an issue we need context cool let's

00:38:55,860 --> 00:39:00,360
look at the logs because you know you

00:38:57,810 --> 00:39:03,420
have monitoring logs how let's work on

00:39:00,360 --> 00:39:06,270
the logs good I was like oh this is

00:39:03,420 --> 00:39:08,250
simple really simple we should lock all

00:39:06,270 --> 00:39:10,350
the queries so basically you enable the

00:39:08,250 --> 00:39:14,220
general log okay we have a lot of

00:39:10,350 --> 00:39:16,380
queries I was like install an agent or

00:39:14,220 --> 00:39:20,940
ship the logs with custom fields to be

00:39:16,380 --> 00:39:22,830
able to make the stuff more interesting

00:39:20,940 --> 00:39:24,780
to our users to filter the users or

00:39:22,830 --> 00:39:25,920
database and also stuff and the log time

00:39:24,780 --> 00:39:28,140
and few stuff like that

00:39:25,920 --> 00:39:30,870
and I was like and we just make the lock

00:39:28,140 --> 00:39:32,940
available for the users this is really

00:39:30,870 --> 00:39:38,130
simple yes

00:39:32,940 --> 00:39:40,940
well I was thinking I was like yes no if

00:39:38,130 --> 00:39:45,660
I'm sending all the query log inside

00:39:40,940 --> 00:39:47,100
elasticsearch okay basically I think the

00:39:45,660 --> 00:39:49,440
team in charge of elasticsearch you will

00:39:47,100 --> 00:39:50,190
get contacting me and oh can you stop

00:39:49,440 --> 00:39:55,640
that please

00:39:50,190 --> 00:39:59,150
so I was like yes what do I need first

00:39:55,640 --> 00:40:01,950
what is the most important stuff when

00:39:59,150 --> 00:40:04,470
you are an application owner so you have

00:40:01,950 --> 00:40:05,910
issues basically when you have slow

00:40:04,470 --> 00:40:07,680
quarries and stuff like that this is

00:40:05,910 --> 00:40:09,690
what you need right you need to know if

00:40:07,680 --> 00:40:11,780
you have some queries that are slow and

00:40:09,690 --> 00:40:14,270
blocking applications

00:40:11,780 --> 00:40:16,340
I said oh this is cool so I check the

00:40:14,270 --> 00:40:19,010
documentation of my GP I said oh yes and

00:40:16,340 --> 00:40:20,780
of course you can SWAT all the slow

00:40:19,010 --> 00:40:23,690
queries if you have some issues so this

00:40:20,780 --> 00:40:25,910
is a good point and I can do that easily

00:40:23,690 --> 00:40:28,700
okay so then we decided to ship this

00:40:25,910 --> 00:40:30,530
locker is only and we said ok we start

00:40:28,700 --> 00:40:32,170
with the default value 10 seconds for a

00:40:30,530 --> 00:40:35,270
slacker ease which is a higher number

00:40:32,170 --> 00:40:39,580
because you're lower than that this is a

00:40:35,270 --> 00:40:42,320
girl for the next steps I was like ok

00:40:39,580 --> 00:40:43,940
I'm using chef we said if I need to

00:40:42,320 --> 00:40:46,700
install something like five bit or stuff

00:40:43,940 --> 00:40:51,410
like that ok no no we have a syslog I

00:40:46,700 --> 00:40:53,870
will use a sub ok because but I look at

00:40:51,410 --> 00:40:57,830
the log files for this locker is this is

00:40:53,870 --> 00:41:02,240
a multiple line logs I was like okay so

00:40:57,830 --> 00:41:04,670
I talked to a guy he helped me on that

00:41:02,240 --> 00:41:06,920
and we build a template to shitty local

00:41:04,670 --> 00:41:09,350
logs the stuff is available on github

00:41:06,920 --> 00:41:13,550
you see this guy is really good on that

00:41:09,350 --> 00:41:17,090
and of course we were able to send the

00:41:13,550 --> 00:41:21,380
logs in often in elasticsearch and then

00:41:17,090 --> 00:41:23,390
our users can now see them in Cubana so

00:41:21,380 --> 00:41:25,780
this is an example so you have the raw

00:41:23,390 --> 00:41:29,570
message here and you have the curvy this

00:41:25,780 --> 00:41:32,060
is our backup mechanism so we said that

00:41:29,570 --> 00:41:36,580
our backups suck and they said really I

00:41:32,060 --> 00:41:41,120
said look this is the time in seconds

00:41:36,580 --> 00:41:44,960
184 seconds this is my jumper so we had

00:41:41,120 --> 00:41:46,970
a lot of stuff like that like that we

00:41:44,960 --> 00:41:52,490
have put in place a new backup mechanism

00:41:46,970 --> 00:41:58,000
now yeah this is another stuff from one

00:41:52,490 --> 00:42:00,770
of our user 16 seconds it's fine

00:41:58,000 --> 00:42:05,780
and also example so yeah they can feel

00:42:00,770 --> 00:42:09,260
turn on the lock times they can filter

00:42:05,780 --> 00:42:12,770
on the schema which is the database this

00:42:09,260 --> 00:42:14,660
is a backup right I think this is a

00:42:12,770 --> 00:42:16,460
backup of the replication yes we see the

00:42:14,660 --> 00:42:18,560
backup to is there you can feel turn the

00:42:16,460 --> 00:42:21,050
user the key filter on a lot of stuff so

00:42:18,560 --> 00:42:23,210
I sent an email I waited two weeks

00:42:21,050 --> 00:42:24,520
before I communicate to the users

00:42:23,210 --> 00:42:28,390
because I was like

00:42:24,520 --> 00:42:29,890
really working no wait and I decided to

00:42:28,390 --> 00:42:31,870
communicate to the users and I received

00:42:29,890 --> 00:42:33,970
this image from my colleague he said

00:42:31,870 --> 00:42:35,920
very good already spots local reason mo

00:42:33,970 --> 00:42:39,190
Mac but because design and pushed a

00:42:35,920 --> 00:42:43,830
review by the leak is not visible but

00:42:39,190 --> 00:42:46,780
yes customers are happy about that and

00:42:43,830 --> 00:42:48,780
the benefit from that is that we are not

00:42:46,780 --> 00:42:51,520
- blocker because right now when the

00:42:48,780 --> 00:42:55,120
developers are releasing the hub's they

00:42:51,520 --> 00:42:58,030
can see they can read see graphics the

00:42:55,120 --> 00:43:01,030
graphs they can check the slow query

00:42:58,030 --> 00:43:04,090
logs in Cabana they're happy with that I

00:43:01,030 --> 00:43:06,130
said okay guys maybe we will use 10

00:43:04,090 --> 00:43:09,910
seconds for our slow queries to improve

00:43:06,130 --> 00:43:13,600
that step by step and we have happy

00:43:09,910 --> 00:43:18,190
customers developers users of course so

00:43:13,600 --> 00:43:21,520
the conclusion about that is that the

00:43:18,190 --> 00:43:24,190
visibility and the transparency and our

00:43:21,520 --> 00:43:27,910
platform is really really better because

00:43:24,190 --> 00:43:31,720
we had a lot of email feedbacks from

00:43:27,910 --> 00:43:36,790
users like guys honestly for Dibley team

00:43:31,720 --> 00:43:39,130
Iraq because say we had 40 asset

00:43:36,790 --> 00:43:40,720
management we had an issue and the guy

00:43:39,130 --> 00:43:44,590
said oh we have an issue with the

00:43:40,720 --> 00:43:46,810
database our API is not working I was

00:43:44,590 --> 00:43:48,610
like yes and this is the queries that is

00:43:46,810 --> 00:43:50,680
blocking your hub and ok

00:43:48,610 --> 00:43:55,150
he came at me I said how did you find

00:43:50,680 --> 00:43:58,210
that and I showed him and they sent an

00:43:55,150 --> 00:43:59,680
email to the team to say thank you we

00:43:58,210 --> 00:44:01,840
like the service that you are currently

00:43:59,680 --> 00:44:07,870
providing so shipping slow query logs is

00:44:01,840 --> 00:44:10,300
not easy important point and the combo

00:44:07,870 --> 00:44:13,390
of metrics and Logs with the slow

00:44:10,300 --> 00:44:15,940
queries is good but honestly I want more

00:44:13,390 --> 00:44:19,060
and I think our users they want more say

00:44:15,940 --> 00:44:21,940
ask to request for the blocks and for

00:44:19,060 --> 00:44:24,370
the number of connections and the next

00:44:21,940 --> 00:44:28,360
steps is to continue the SQL sequel

00:44:24,370 --> 00:44:31,300
logging of course leverage the usage of

00:44:28,360 --> 00:44:32,830
Sistema we want matrix predator base

00:44:31,300 --> 00:44:36,630
because now we have metrics per server

00:44:32,830 --> 00:44:37,800
but the debates are collocated and

00:44:36,630 --> 00:44:40,380
people

00:44:37,800 --> 00:44:42,630
our SLA is because we have SLO SLI SLI

00:44:40,380 --> 00:44:45,060
and also stuff if you want to know more

00:44:42,630 --> 00:44:47,450
but SLA and other stuff I will be

00:44:45,060 --> 00:44:51,390
available after this con Stacey stock

00:44:47,450 --> 00:44:54,270
opens was our new probe which is doing

00:44:51,390 --> 00:44:57,030
the connection and giving us some

00:44:54,270 --> 00:45:01,830
metrics to compute the SLS and also

00:44:57,030 --> 00:45:03,630
stuff and of course I told you about my

00:45:01,830 --> 00:45:08,110
repository on github it's working

00:45:03,630 --> 00:45:16,579
progress so yeah and thank you that's it

00:45:08,110 --> 00:45:16,579
[Applause]

00:45:19,370 --> 00:45:33,470
much thank you any questions oh yeah but

00:45:34,550 --> 00:45:37,820
I'll resume

00:45:43,880 --> 00:45:59,230
I will show you see I can show you see

00:45:52,700 --> 00:45:59,230
oh come here

00:46:04,750 --> 00:46:17,570
yes I don't know so basically look at

00:46:13,460 --> 00:46:24,590
that that's that's my colleague work yes

00:46:17,570 --> 00:46:30,050
yes yes it did that in two hours two

00:46:24,590 --> 00:46:32,120
hours it was like okay we discussed

00:46:30,050 --> 00:46:35,240
around the coffee and he get back to his

00:46:32,120 --> 00:46:37,220
desk and two hours later later he sent

00:46:35,240 --> 00:46:45,280
me that he said try that can you try

00:46:37,220 --> 00:46:45,280
that said what okay no this guy is good

00:46:46,540 --> 00:46:52,210
this is why I decided to create this

00:46:48,860 --> 00:46:52,210
repository to share some resources

00:46:58,460 --> 00:47:09,440
okay any more questions are you planning

00:47:05,670 --> 00:47:12,990
this also father databases like tb2

00:47:09,440 --> 00:47:16,440
MySQL only my server my secret and my ID

00:47:12,990 --> 00:47:19,080
be okay yes this is uh of course we have

00:47:16,440 --> 00:47:19,980
a team which is working in Microsoft

00:47:19,080 --> 00:47:23,520
sequel server

00:47:19,980 --> 00:47:25,680
oh my ID be was kind of the sandbox to

00:47:23,520 --> 00:47:28,860
try new things and to inspire us use a

00:47:25,680 --> 00:47:30,510
team to do the same so yeah basically

00:47:28,860 --> 00:47:33,480
when we are doing stuff like that they

00:47:30,510 --> 00:47:36,090
are like oh gosh we need to have this

00:47:33,480 --> 00:47:39,420
level of service but they are trying

00:47:36,090 --> 00:47:41,880
it's not as easy for them but yeah if

00:47:39,420 --> 00:47:44,870
tomorrow we have Postgres we can do the

00:47:41,880 --> 00:47:53,680
same I think we will work on that you

00:47:44,870 --> 00:47:57,920
need more advertising why thank you

00:47:53,680 --> 00:48:07,610
[Applause]

00:47:57,920 --> 00:48:07,610
[Music]

00:48:11,200 --> 00:48:13,950

YouTube URL: https://www.youtube.com/watch?v=Y4kbwNb9MHU


