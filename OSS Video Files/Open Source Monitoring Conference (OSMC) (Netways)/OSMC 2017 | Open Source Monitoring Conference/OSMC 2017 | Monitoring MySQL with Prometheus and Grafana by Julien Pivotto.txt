Title: OSMC 2017 | Monitoring MySQL with Prometheus and Grafana by Julien Pivotto
Publication date: 2017-12-05
Playlist: OSMC 2017 | Open Source Monitoring Conference
Description: 
	Databases monitoring is not a new topic, so what can we still improve? With Prometheus, you can collect a lot of data at a high frequency, and decide later which ones are useful. Grafana, with Percona graphs, offers a very efficient dashboard solution. We will see how to glue everything and get the best way to monitor your databases using open source tools only.
Captions: 
	00:00:11,480 --> 00:00:18,170
okay I think everybody is in I'm happy

00:00:16,009 --> 00:00:20,960
to have you back from the coffee break

00:00:18,170 --> 00:00:24,980
now and would like to introduce to you

00:00:20,960 --> 00:00:31,339
talk about monitoring my sequel with

00:00:24,980 --> 00:00:35,120
Julien pivot Oh everyone thank you for

00:00:31,339 --> 00:00:37,820
being there so a few words about myself

00:00:35,120 --> 00:00:40,640
I do a lot of open source things

00:00:37,820 --> 00:00:43,129
automation and mentoring that's what can

00:00:40,640 --> 00:00:45,770
define me I come from Belgium and I work

00:00:43,129 --> 00:00:50,239
at in with one of the major open source

00:00:45,770 --> 00:00:52,309
companies in Europe so let's talk about

00:00:50,239 --> 00:00:53,539
mentoring but you already know a lot

00:00:52,309 --> 00:00:57,710
about monitoring because you're out

00:00:53,539 --> 00:01:00,440
there so what is important in multi

00:00:57,710 --> 00:01:03,710
nowadays is that you collect a lot of

00:01:00,440 --> 00:01:06,289
data but that you don't only collect

00:01:03,710 --> 00:01:08,600
them to alert you when something is

00:01:06,289 --> 00:01:11,600
wrong but that you also collect them too

00:01:08,600 --> 00:01:13,759
and of them all your system reacts what

00:01:11,600 --> 00:01:15,350
your system is doing and what are the

00:01:13,759 --> 00:01:17,959
bottlenecks like that kind of thing so

00:01:15,350 --> 00:01:24,140
you should do monitoring for a lot more

00:01:17,959 --> 00:01:25,849
than just directing purpose and then the

00:01:24,140 --> 00:01:29,030
question is that what do you want to

00:01:25,849 --> 00:01:30,950
monitor do you want to like define in

00:01:29,030 --> 00:01:35,929
advance all the metrics that you want to

00:01:30,950 --> 00:01:38,989
collect do you want to look okay I need

00:01:35,929 --> 00:01:41,539
to know that my sequel global variable I

00:01:38,989 --> 00:01:44,149
need to know that specific thing or do

00:01:41,539 --> 00:01:46,729
you want to just take everything and

00:01:44,149 --> 00:01:49,099
just okay my sequel give me everything

00:01:46,729 --> 00:01:52,429
you want I will stir it if I need it one

00:01:49,099 --> 00:01:55,009
day okay we'll have the data so when you

00:01:52,429 --> 00:01:58,239
do a post-mortem it is difficult to do a

00:01:55,009 --> 00:02:01,369
post-mortem data that you don't have

00:01:58,239 --> 00:02:05,000
pure pool is also important in measuring

00:02:01,369 --> 00:02:08,270
so a lot of monitoring system proof base

00:02:05,000 --> 00:02:11,030
where the system push a matrix it means

00:02:08,270 --> 00:02:12,950
that if you have two three four ten

00:02:11,030 --> 00:02:15,590
monitoring servers how do you deal with

00:02:12,950 --> 00:02:17,480
the configuration of your own service if

00:02:15,590 --> 00:02:20,659
you change the IP of that singer server

00:02:17,480 --> 00:02:22,310
what do you do out to developers do do

00:02:20,659 --> 00:02:24,640
they need a full monitoring solution on

00:02:22,310 --> 00:02:27,340
the laptop and all the configurations

00:02:24,640 --> 00:02:29,920
sitting etcetera in the auto so it's

00:02:27,340 --> 00:02:32,440
quite complicated on the pool based

00:02:29,920 --> 00:02:36,310
models then it's really easier because

00:02:32,440 --> 00:02:40,450
it's a primitives that will just go and

00:02:36,310 --> 00:02:43,630
fetch anything in needs and to be able

00:02:40,450 --> 00:02:45,580
to do effective poling primitives also

00:02:43,630 --> 00:02:47,830
integrates with service discovery so

00:02:45,580 --> 00:02:49,240
like when you add a server and then it

00:02:47,830 --> 00:02:52,959
will know automatically and that kind of

00:02:49,240 --> 00:02:55,870
things I have abilities so monitoring is

00:02:52,959 --> 00:02:58,330
super important and you cannot sell to

00:02:55,870 --> 00:03:00,880
your customer ok the database was down

00:02:58,330 --> 00:03:03,489
because the monitoring system was down

00:03:00,880 --> 00:03:06,310
you can not tell your customer ok I

00:03:03,489 --> 00:03:08,350
didn't see what was going on so yeah we

00:03:06,310 --> 00:03:10,600
couldn't act we couldn't react on what

00:03:08,350 --> 00:03:13,360
was going on we took the wrong decision

00:03:10,600 --> 00:03:15,940
so it's very important to a5 ability on

00:03:13,360 --> 00:03:17,680
your monitoring it's important to

00:03:15,940 --> 00:03:20,230
monitor your mitering like meta

00:03:17,680 --> 00:03:22,600
measuring it's cold so it's important to

00:03:20,230 --> 00:03:25,660
have all of that but in a lot of

00:03:22,600 --> 00:03:28,209
monitoring systems that costs a lot that

00:03:25,660 --> 00:03:30,700
is very complex to set up and we'll see

00:03:28,209 --> 00:03:33,549
later that with primitive it's very easy

00:03:30,700 --> 00:03:37,209
to get I have ability on your monitoring

00:03:33,549 --> 00:03:39,580
attack so let's go lets me present you

00:03:37,209 --> 00:03:41,350
parameters parameters in one sentence

00:03:39,580 --> 00:03:43,989
would be like cloud native data centric

00:03:41,350 --> 00:03:45,700
open source performance simple matrix

00:03:43,989 --> 00:03:47,709
collection and arises an editing tool

00:03:45,700 --> 00:03:50,769
that's what primitives

00:03:47,709 --> 00:03:54,640
is and now we will see what was behind

00:03:50,769 --> 00:03:58,239
those words so when we say that it is

00:03:54,640 --> 00:04:00,250
cloud native it means that it is easy to

00:03:58,239 --> 00:04:03,580
configure easy to deploy easy to

00:04:00,250 --> 00:04:05,650
maintain it's one binary it is designed

00:04:03,580 --> 00:04:08,040
in multiple services so you don't have

00:04:05,650 --> 00:04:10,690
one big service that does all the things

00:04:08,040 --> 00:04:12,340
it is continuity you can read it in your

00:04:10,690 --> 00:04:15,670
communities infrastructure in your

00:04:12,340 --> 00:04:17,650
OpenShift anything and it can also talk

00:04:15,670 --> 00:04:20,680
to it with different orchestration

00:04:17,650 --> 00:04:22,720
layers like kubernetes console that kind

00:04:20,680 --> 00:04:25,390
of thing so you don't need to change

00:04:22,720 --> 00:04:27,100
everything and it refer every time that

00:04:25,390 --> 00:04:30,880
you change offing in your infrastructure

00:04:27,100 --> 00:04:33,039
that's very important so it's fully open

00:04:30,880 --> 00:04:35,999
source it's Apache 2.0 there is no

00:04:33,039 --> 00:04:38,189
company behind it well no

00:04:35,999 --> 00:04:41,279
the immutable companies that work

00:04:38,189 --> 00:04:43,469
together on that project it is part of

00:04:41,279 --> 00:04:48,119
the Linux Foundation cloud native

00:04:43,469 --> 00:04:50,759
computing foundation so it is in the

00:04:48,119 --> 00:04:52,619
same group of project like Cuba natives

00:04:50,759 --> 00:04:54,719
and that kind of things but it works

00:04:52,619 --> 00:04:56,429
very well outside of Cuba it is a non

00:04:54,719 --> 00:04:58,229
traditional data center an

00:04:56,429 --> 00:05:01,969
infrastructure is no problem with that

00:04:58,229 --> 00:05:05,909
returning go and you can have it on

00:05:01,969 --> 00:05:09,719
Linux FreeBSD Windows Mac anything you

00:05:05,909 --> 00:05:13,049
want and there are a lot of integrations

00:05:09,719 --> 00:05:16,279
for third party software that you can

00:05:13,049 --> 00:05:19,469
write or easily whisper images or

00:05:16,279 --> 00:05:24,029
writing more than 100 available out of

00:05:19,469 --> 00:05:27,029
the box when I speak about performance

00:05:24,029 --> 00:05:30,599
it is really designed to fetch a lot of

00:05:27,029 --> 00:05:33,569
data and not like every five minutes

00:05:30,599 --> 00:05:38,489
every time you know it's it's designed

00:05:33,569 --> 00:05:41,519
for of data very frequently and in the

00:05:38,489 --> 00:05:44,519
version 2.0 furmity that went out one of

00:05:41,519 --> 00:05:47,129
two weeks ago they they made it even

00:05:44,519 --> 00:05:49,519
better they we were they have their own

00:05:47,129 --> 00:05:53,009
storage and so I know for the database

00:05:49,519 --> 00:05:56,459
and now they can on the new use cases

00:05:53,009 --> 00:05:58,709
like even it is much much more efficient

00:05:56,459 --> 00:06:01,469
in the new release of primitives now so

00:05:58,709 --> 00:06:04,229
it's really getting a lot better and it

00:06:01,469 --> 00:06:07,409
doesn't take too much disk space for

00:06:04,229 --> 00:06:11,599
what it's stirring and CPU and memory

00:06:07,409 --> 00:06:15,719
also fine so this is really really great

00:06:11,599 --> 00:06:19,079
the data centric part means that unlike

00:06:15,719 --> 00:06:23,549
other system like graphite you have

00:06:19,079 --> 00:06:26,159
metadata in primitives so like in this

00:06:23,549 --> 00:06:29,009
case I have one metric with one metadata

00:06:26,159 --> 00:06:32,999
called Andrew which is the temp right

00:06:29,009 --> 00:06:35,819
and once you have all those metadata you

00:06:32,999 --> 00:06:37,349
can query them filter change you can do

00:06:35,819 --> 00:06:40,559
anything with that so you don't have

00:06:37,349 --> 00:06:42,029
just flat matrix you have matrix with an

00:06:40,559 --> 00:06:44,440
additional value

00:06:42,029 --> 00:06:48,500
metadata and then you can

00:06:44,440 --> 00:06:51,830
play with that a lot and do a lot of fun

00:06:48,500 --> 00:06:55,220
queries to your data so this is very

00:06:51,830 --> 00:06:59,360
important that primitives as a different

00:06:55,220 --> 00:07:02,030
way to play with all those metrics so

00:06:59,360 --> 00:07:05,000
you can what can you have as types

00:07:02,030 --> 00:07:09,230
infirmities metric types you can have

00:07:05,000 --> 00:07:12,170
contours go instagrams and summaries so

00:07:09,230 --> 00:07:14,750
basically a contrary always go help and

00:07:12,170 --> 00:07:17,890
when it goes to zero and primitives

00:07:14,750 --> 00:07:20,630
knows that okay it's it will just like

00:07:17,890 --> 00:07:23,090
don't consider zero and just like put it

00:07:20,630 --> 00:07:25,520
on the top of the previous value so that

00:07:23,090 --> 00:07:29,180
when you reset when you reboot your my

00:07:25,520 --> 00:07:32,540
sequel server exporter and the controls

00:07:29,180 --> 00:07:35,480
they they will just be a continuously

00:07:32,540 --> 00:07:37,010
growing you have cause you like the

00:07:35,480 --> 00:07:38,930
number of active connections that's

00:07:37,010 --> 00:07:43,010
something that could up and down all the

00:07:38,930 --> 00:07:45,980
time instagrams is when you have one

00:07:43,010 --> 00:07:48,320
value like the response time at a query

00:07:45,980 --> 00:07:50,870
time and then parameters will make

00:07:48,320 --> 00:07:54,140
multiple buckets like okay I have that

00:07:50,870 --> 00:07:56,240
many queries that are in less than one

00:07:54,140 --> 00:07:58,010
second that many queries in less than

00:07:56,240 --> 00:08:00,640
two seconds and so you can miss

00:07:58,010 --> 00:08:04,550
statistics and the last one summer is

00:08:00,640 --> 00:08:06,500
useless most of the time because it's a

00:08:04,550 --> 00:08:08,690
kind of metric that you can not zoom you

00:08:06,500 --> 00:08:10,520
can not make averages you cannot you

00:08:08,690 --> 00:08:12,890
cannot do anything about that so it's

00:08:10,520 --> 00:08:19,520
difficult to use don't just don't use

00:08:12,890 --> 00:08:21,020
the last one if some of you are new work

00:08:19,520 --> 00:08:23,120
right

00:08:21,020 --> 00:08:25,550
then I will say something about that

00:08:23,120 --> 00:08:28,700
that you can not use primitives like you

00:08:25,550 --> 00:08:31,310
use graphite it simply doesn't work it

00:08:28,700 --> 00:08:33,440
is not designed for it so in parameters

00:08:31,310 --> 00:08:37,220
when you have a metric the metric is

00:08:33,440 --> 00:08:40,490
living for a certain time so if you felt

00:08:37,220 --> 00:08:43,729
the data every 10 second and you have a

00:08:40,490 --> 00:08:45,680
metric then the metric will live for 10

00:08:43,729 --> 00:08:48,530
seconds so if you want to do stuff like

00:08:45,680 --> 00:08:51,140
you doing graph I like do your

00:08:48,530 --> 00:08:54,590
deployments and I kind of things in

00:08:51,140 --> 00:08:57,260
primitive this doesn't work so for that

00:08:54,590 --> 00:08:58,100
for when you want to store events nice

00:08:57,260 --> 00:09:02,060
better to go

00:08:58,100 --> 00:09:05,330
do something like elasticsearch okay so

00:09:02,060 --> 00:09:08,600
how does all of this actually work so

00:09:05,330 --> 00:09:10,370
this is very complicated so if you don't

00:09:08,600 --> 00:09:12,740
want to at age and maybe don't look at

00:09:10,370 --> 00:09:17,620
the next slide so permit this is using

00:09:12,740 --> 00:09:20,410
plain HTTP and plain text so that's what

00:09:17,620 --> 00:09:23,930
Primanti's is doing or you can do some

00:09:20,410 --> 00:09:27,140
compression but basically the way that

00:09:23,930 --> 00:09:32,180
primitives gets the matrix is using HTTP

00:09:27,140 --> 00:09:35,570
and plain text it can do HTTP but it

00:09:32,180 --> 00:09:38,780
cannot serve HTTP so primitives they say

00:09:35,570 --> 00:09:40,550
that HTTP is the job of the reverse

00:09:38,780 --> 00:09:43,640
proxy if you really want to have your

00:09:40,550 --> 00:09:45,260
primitives serve diversity TPS just put

00:09:43,640 --> 00:09:49,730
a small reverse proxy that will do the

00:09:45,260 --> 00:09:52,580
SSL thing but it can fetch exporters

00:09:49,730 --> 00:09:57,110
that are using HTTPS with the same

00:09:52,580 --> 00:09:59,960
problem so that's what you get so if you

00:09:57,110 --> 00:10:01,790
go to any primitives instance and you go

00:09:59,960 --> 00:10:04,250
to slash metrics in your browser

00:10:01,790 --> 00:10:07,850
that's what you see you see a big list

00:10:04,250 --> 00:10:11,270
of metrics with some help and the type

00:10:07,850 --> 00:10:12,860
of the metric and and of the metric

00:10:11,270 --> 00:10:15,290
teams are so like from it is

00:10:12,860 --> 00:10:18,260
notification queue length as a value of

00:10:15,290 --> 00:10:21,980
zero if you want if you look at this one

00:10:18,260 --> 00:10:24,890
the notification sent then you have that

00:10:21,980 --> 00:10:27,350
number and you also have one metadata so

00:10:24,890 --> 00:10:29,060
that's very simple any developer can why

00:10:27,350 --> 00:10:33,080
it's a small web server that will expose

00:10:29,060 --> 00:10:36,520
vomitus matrix is very easy so that's

00:10:33,080 --> 00:10:39,950
the actual matrix without help and type

00:10:36,520 --> 00:10:42,650
so if you have an application that

00:10:39,950 --> 00:10:45,500
already has a HTTP server is very easy

00:10:42,650 --> 00:10:47,560
if not just you can just add your CTP

00:10:45,500 --> 00:10:51,850
server that will just serve your matrix

00:10:47,560 --> 00:10:54,140
so it's very very very easy to do and

00:10:51,850 --> 00:10:56,150
some application already do that

00:10:54,140 --> 00:11:00,890
natively so like if you are using a

00:10:56,150 --> 00:11:02,750
kubernetes SEF it city guarna MGMT all

00:11:00,890 --> 00:11:05,120
those software they expose

00:11:02,750 --> 00:11:07,670
natively primitive matrix so you don't

00:11:05,120 --> 00:11:09,350
need to worry about that they can just

00:11:07,670 --> 00:11:10,640
export the matrix and properties will

00:11:09,350 --> 00:11:15,560
just fetch them automatic

00:11:10,640 --> 00:11:17,149
so they have HTTP server embedded but

00:11:15,560 --> 00:11:20,750
there are situation when you cannot have

00:11:17,149 --> 00:11:24,740
HTTP server like your Linux matrix or um

00:11:20,750 --> 00:11:26,890
a sequel or a software that you don't

00:11:24,740 --> 00:11:29,720
control which is proprietary or

00:11:26,890 --> 00:11:32,899
third-party service like a remote API

00:11:29,720 --> 00:11:37,040
that doesn't support formatives then

00:11:32,899 --> 00:11:39,920
permit uses a system of exporters so

00:11:37,040 --> 00:11:43,519
next to your service you have a smaller

00:11:39,920 --> 00:11:47,810
service that will just be there to serve

00:11:43,519 --> 00:11:50,540
you primitives matrix so there are small

00:11:47,810 --> 00:11:52,579
HTTP servers that will connect to the

00:11:50,540 --> 00:11:55,540
target like to the my sequel server to

00:11:52,579 --> 00:11:59,149
the to the network switch to the Apache

00:11:55,540 --> 00:12:01,100
anything you want and if you want to

00:11:59,149 --> 00:12:04,070
write you an exporter then you can write

00:12:01,100 --> 00:12:05,690
them in Python go traveler you have a

00:12:04,070 --> 00:12:09,769
lot of choices there are many many

00:12:05,690 --> 00:12:13,399
helpers to help you to do that so that's

00:12:09,769 --> 00:12:16,010
very very great also it's important to

00:12:13,399 --> 00:12:19,490
understand that exporter they should not

00:12:16,010 --> 00:12:22,279
cache the data they should not do act as

00:12:19,490 --> 00:12:25,250
proxy so you should see an exporter just

00:12:22,279 --> 00:12:28,940
like your my sequel service it is not

00:12:25,250 --> 00:12:30,800
there to like proven it will run the

00:12:28,940 --> 00:12:32,750
queries on the my sequel each time that

00:12:30,800 --> 00:12:34,910
you want the matrix for example it is

00:12:32,750 --> 00:12:37,310
not its role to do some caching and

00:12:34,910 --> 00:12:39,829
stuff like that so don't write exporters

00:12:37,310 --> 00:12:43,339
that will be too expensive and that will

00:12:39,829 --> 00:12:46,160
kill your services if you take a look at

00:12:43,339 --> 00:12:48,709
what which exporters are officially

00:12:46,160 --> 00:12:51,019
supported by the Prometheus project you

00:12:48,709 --> 00:12:53,420
have a bunch of them and that's just the

00:12:51,019 --> 00:12:57,140
official one so like memcache they my

00:12:53,420 --> 00:12:59,149
sequel it's a proxy connect D and all of

00:12:57,140 --> 00:13:01,820
them is three amazing the number of

00:12:59,149 --> 00:13:04,250
exporter that exist but those one are

00:13:01,820 --> 00:13:09,529
supported by primitives the two bridges

00:13:04,250 --> 00:13:13,040
core team as focus about two of three

00:13:09,529 --> 00:13:15,860
exporters before going to my sequel one

00:13:13,040 --> 00:13:17,540
so the the first and the more important

00:13:15,860 --> 00:13:20,839
one is the node exporter it will fetch

00:13:17,540 --> 00:13:23,029
your Linux matrix your UNIX matrix I

00:13:20,839 --> 00:13:24,260
think it's also work on Macs and that

00:13:23,029 --> 00:13:26,600
kind of things

00:13:24,260 --> 00:13:29,150
with that exporter you will actually

00:13:26,600 --> 00:13:32,000
have the matrix on your CPU your memory

00:13:29,150 --> 00:13:34,460
to disk space and network the load the

00:13:32,000 --> 00:13:40,340
time all of that is part of that

00:13:34,460 --> 00:13:42,860
exporter and then that exporter also has

00:13:40,340 --> 00:13:45,650
a text file exporters so if you have a

00:13:42,860 --> 00:13:47,930
bash script that can write matrix to a

00:13:45,650 --> 00:13:50,600
file you can use a note exporter and

00:13:47,930 --> 00:13:52,520
just okay say okay we'll just take that

00:13:50,600 --> 00:13:55,130
metric and expose it as well

00:13:52,520 --> 00:13:56,810
so in some cases when you don't want to

00:13:55,130 --> 00:14:00,620
write you an exporter you can use that

00:13:56,810 --> 00:14:01,460
that's very convenient I recommend you

00:14:00,620 --> 00:14:03,800
to still white

00:14:01,460 --> 00:14:06,680
and a proper exporter but that can help

00:14:03,800 --> 00:14:10,760
you and that's very easy and it comes

00:14:06,680 --> 00:14:12,650
for free with the node exporter another

00:14:10,760 --> 00:14:15,950
important exporter is the black box

00:14:12,650 --> 00:14:20,000
exporter so this allow you to test your

00:14:15,950 --> 00:14:25,280
HTTP endpoints DNS TCP sockets like is

00:14:20,000 --> 00:14:27,920
my data base socket open to learn ICMP

00:14:25,280 --> 00:14:31,010
tests I kind of things so you can have

00:14:27,920 --> 00:14:34,010
all of that also very easily one example

00:14:31,010 --> 00:14:38,750
is that you can have with the HTTP

00:14:34,010 --> 00:14:42,140
module the SSL certificate X private

00:14:38,750 --> 00:14:43,460
date so it's very curious because and

00:14:42,140 --> 00:14:48,020
you can do alerting on it and that kind

00:14:43,460 --> 00:14:51,470
of things so my sequel what about my

00:14:48,020 --> 00:14:55,250
sequel so my sequel has an exporter of

00:14:51,470 --> 00:14:57,080
course and the way that it works with my

00:14:55,250 --> 00:14:59,450
sequel is that you have your my sequel

00:14:57,080 --> 00:15:02,930
service and next to it you put your my

00:14:59,450 --> 00:15:06,950
sequel to exporter usually do it on the

00:15:02,930 --> 00:15:10,640
same node and then you go primitives

00:15:06,950 --> 00:15:13,370
will every 30 seconds to a query on the

00:15:10,640 --> 00:15:16,220
my sequel to exporter like okay give me

00:15:13,370 --> 00:15:18,500
the matrix the Mexican exporter will

00:15:16,220 --> 00:15:20,990
start running SQL queries on the my

00:15:18,500 --> 00:15:23,600
cycle service like okay give me the

00:15:20,990 --> 00:15:25,940
current status give me the variable that

00:15:23,600 --> 00:15:29,420
kind of things and then it will just

00:15:25,940 --> 00:15:32,240
give a plaintext answer to

00:15:29,420 --> 00:15:35,180
parameters that will stow that with

00:15:32,240 --> 00:15:38,720
additional data like which exporter was

00:15:35,180 --> 00:15:40,730
that Oh many matrix do I get what time

00:15:38,720 --> 00:15:46,610
did it take that kind of thing is stored

00:15:40,730 --> 00:15:49,310
into primitive use as well so the

00:15:46,610 --> 00:15:51,380
problem with that is that if you do that

00:15:49,310 --> 00:15:53,630
every 10 seconds you will kill your my

00:15:51,380 --> 00:15:56,000
sequel instance because some of the

00:15:53,630 --> 00:16:00,260
queries are very expensive and if you

00:15:56,000 --> 00:16:03,649
went we every query every 10 seconds it

00:16:00,260 --> 00:16:06,649
will more likely take more than 10

00:16:03,649 --> 00:16:09,019
seconds to render so it will timeout so

00:16:06,649 --> 00:16:11,839
you don't need a way to fetch some data

00:16:09,019 --> 00:16:14,600
every 1 minute order data every 10

00:16:11,839 --> 00:16:17,630
seconds and how do we do that

00:16:14,600 --> 00:16:20,149
well we will tell the exporter to like

00:16:17,630 --> 00:16:22,399
run some date every minute and some

00:16:20,149 --> 00:16:23,930
every 10 seconds but I've just told you

00:16:22,399 --> 00:16:25,310
that the export ID they don't do that

00:16:23,930 --> 00:16:27,620
kind of stupid things they don't do

00:16:25,310 --> 00:16:30,589
caching day you should be clear with

00:16:27,620 --> 00:16:33,829
what you ask them so that's why you can

00:16:30,589 --> 00:16:37,220
pass parameters to exporters like ok

00:16:33,829 --> 00:16:39,860
every 10 seconds I will collect the

00:16:37,220 --> 00:16:42,949
global stages because that's fast that's

00:16:39,860 --> 00:16:45,199
useful and I can elect on that more

00:16:42,949 --> 00:16:47,779
easily if I have the data I've written

00:16:45,199 --> 00:16:49,880
seconds and then if you look at the

00:16:47,779 --> 00:16:51,680
performance schema well maybe you don't

00:16:49,880 --> 00:16:53,269
want through and at every 10 seconds but

00:16:51,680 --> 00:16:56,300
every one minutes and so you can pass

00:16:53,269 --> 00:16:58,610
the parameter collect and then just

00:16:56,300 --> 00:17:00,949
collect those things so this is specific

00:16:58,610 --> 00:17:04,429
to the my sequel exporter order exporter

00:17:00,949 --> 00:17:07,480
F other parameters but this allows you

00:17:04,429 --> 00:17:11,209
to still get a very high frequency on

00:17:07,480 --> 00:17:14,120
some important metrics but on other

00:17:11,209 --> 00:17:15,919
metrics just one once every minute is

00:17:14,120 --> 00:17:20,390
fine enough then you can do this like

00:17:15,919 --> 00:17:22,459
this a word about my secure application

00:17:20,390 --> 00:17:24,799
so you can do my secure application in

00:17:22,459 --> 00:17:27,049
multiple way master master master slave

00:17:24,799 --> 00:17:30,590
master slave slave master slave safe

00:17:27,049 --> 00:17:33,470
safe safe you have lot of choices in my

00:17:30,590 --> 00:17:37,160
sequel and it can be very complex and a

00:17:33,470 --> 00:17:38,870
very weak chain and to measure that

00:17:37,160 --> 00:17:41,570
replication

00:17:38,870 --> 00:17:43,140
there is a tool that's called PT or B

00:17:41,570 --> 00:17:46,080
that allows you that

00:17:43,140 --> 00:17:50,040
even a chewin on your my sequel masters

00:17:46,080 --> 00:17:51,750
and every second or every interval to

00:17:50,040 --> 00:17:54,630
define it will update the table with the

00:17:51,750 --> 00:17:57,120
current timestamp and when you go to the

00:17:54,630 --> 00:18:02,130
slave then you can see okay does

00:17:57,120 --> 00:18:04,230
everyone is at that time stem no at my

00:18:02,130 --> 00:18:06,720
replication where I am in the

00:18:04,230 --> 00:18:08,040
replication so you know that if that is

00:18:06,720 --> 00:18:12,030
not the current date on the slave that

00:18:08,040 --> 00:18:15,720
the replication is lagging behind so

00:18:12,030 --> 00:18:17,490
that to pity Alby that does that is GPL

00:18:15,720 --> 00:18:21,000
written in Perl and part of the packin a

00:18:17,490 --> 00:18:23,820
toolkit and it's very great to just do

00:18:21,000 --> 00:18:26,940
this every second it will write in to of

00:18:23,820 --> 00:18:29,730
a table the current time so you know the

00:18:26,940 --> 00:18:33,990
replication status on the slave mice

00:18:29,730 --> 00:18:37,679
acknowledge that natively it is exported

00:18:33,990 --> 00:18:41,790
in the exporter that value but there are

00:18:37,679 --> 00:18:45,140
a bunch of situation where that native

00:18:41,790 --> 00:18:47,850
value of my sequel is not correct so

00:18:45,140 --> 00:18:52,110
some time is just not correct or

00:18:47,850 --> 00:18:58,940
sometimes just it's buggy so the end to

00:18:52,110 --> 00:19:01,350
and twist PTO bit is very important so

00:18:58,940 --> 00:19:03,600
the way it works in the exporter is that

00:19:01,350 --> 00:19:06,270
we look into the table and we don't you

00:19:03,600 --> 00:19:08,400
spit your bit on the slave and you can

00:19:06,270 --> 00:19:10,559
enable that with those command line

00:19:08,400 --> 00:19:14,280
flags so if you have mexico application

00:19:10,559 --> 00:19:16,080
i suggest you to actually use PT a bit

00:19:14,280 --> 00:19:19,710
because it's a great and then you have

00:19:16,080 --> 00:19:21,870
to matrix like the timestamp that is

00:19:19,710 --> 00:19:24,540
taught in the server when which fetcher

00:19:21,870 --> 00:19:27,240
matrix and the timestamp that server

00:19:24,540 --> 00:19:29,820
things it's no so you can do different

00:19:27,240 --> 00:19:36,059
between the two of them to know exactly

00:19:29,820 --> 00:19:39,419
the lag of the the replication so now

00:19:36,059 --> 00:19:41,490
that we have seen that my sequel expert

00:19:39,419 --> 00:19:45,630
or i suggest that we go back to

00:19:41,490 --> 00:19:49,500
primitives so this is the primitives web

00:19:45,630 --> 00:19:51,929
interface it is very simple you you have

00:19:49,500 --> 00:19:56,970
you don't have many things to see there

00:19:51,929 --> 00:20:00,090
it is just like you can put there

00:19:56,970 --> 00:20:04,799
expression and then have the values in

00:20:00,090 --> 00:20:06,419
the in the bottom so you can have the

00:20:04,799 --> 00:20:08,159
first thing that you have un the mod

00:20:06,419 --> 00:20:10,409
console which means that you just see

00:20:08,159 --> 00:20:12,840
the values and you also have a button

00:20:10,409 --> 00:20:14,909
graph to see the graph the reason why it

00:20:12,840 --> 00:20:18,750
is in console by default is that if you

00:20:14,909 --> 00:20:21,390
make a very big query with like hundreds

00:20:18,750 --> 00:20:23,309
of value and then you click on the

00:20:21,390 --> 00:20:25,230
grafting and then it might slow down

00:20:23,309 --> 00:20:27,450
your primitive server because it will

00:20:25,230 --> 00:20:29,850
fetch all the data for the last one or

00:20:27,450 --> 00:20:32,370
one day so you should try and tune your

00:20:29,850 --> 00:20:35,820
queries in console mode and then only

00:20:32,370 --> 00:20:40,169
click on the grafting you have also a

00:20:35,820 --> 00:20:43,799
drop-down with all the different all the

00:20:40,169 --> 00:20:46,559
different metrics and you see there an

00:20:43,799 --> 00:20:48,510
example of with my sequel so you have

00:20:46,559 --> 00:20:51,510
all the my sequel global status

00:20:48,510 --> 00:20:55,740
variables that are exposed as variables

00:20:51,510 --> 00:20:58,620
in primitives now so you can go back in

00:20:55,740 --> 00:21:02,549
time you can see which status has change

00:20:58,620 --> 00:21:05,190
that kind of things so if you just like

00:21:02,549 --> 00:21:08,130
press the button ok show me the global

00:21:05,190 --> 00:21:10,110
status connection and then you press

00:21:08,130 --> 00:21:12,900
execute you go to the graph and then you

00:21:10,110 --> 00:21:17,100
see a simple graph with the number of

00:21:12,900 --> 00:21:19,380
your MySQL connections the same if you

00:21:17,100 --> 00:21:21,809
go for a my sequel global status

00:21:19,380 --> 00:21:25,890
commands total for example then you see

00:21:21,809 --> 00:21:28,740
multiple values because ok do the screen

00:21:25,890 --> 00:21:32,340
is a bit cut at the bottom but basically

00:21:28,740 --> 00:21:35,130
you have multiple types of commands like

00:21:32,340 --> 00:21:39,059
select update delete and you have one

00:21:35,130 --> 00:21:42,960
line for each one of them you can select

00:21:39,059 --> 00:21:46,049
only some of them by using the metadata

00:21:42,960 --> 00:21:49,020
selection feature like this so that's

00:21:46,049 --> 00:21:51,780
really great as well and you can also

00:21:49,020 --> 00:21:55,049
use rex thing like i want all the select

00:21:51,780 --> 00:22:03,059
and all the set so that you have the two

00:21:55,049 --> 00:22:07,520
lines with select and set one other

00:22:03,059 --> 00:22:10,370
another one we select or set options

00:22:07,520 --> 00:22:13,309
and you can also at you also have

00:22:10,370 --> 00:22:16,700
functions like the reef

00:22:13,309 --> 00:22:18,860
you have rate you have Delta so you have

00:22:16,700 --> 00:22:20,450
lot of functions that you can apply so

00:22:18,860 --> 00:22:22,580
the Dirac function will show you the

00:22:20,450 --> 00:22:27,440
derivative over the last in this case

00:22:22,580 --> 00:22:30,350
five minutes for that value you can also

00:22:27,440 --> 00:22:33,559
do sting like I dislike my sequel up

00:22:30,350 --> 00:22:37,130
equal equals your so it will show you if

00:22:33,559 --> 00:22:39,350
the my sequel instance is down if it is

00:22:37,130 --> 00:22:41,419
up then you will have no data this is

00:22:39,350 --> 00:22:43,760
useful for lifting so we were selecting

00:22:41,419 --> 00:22:46,669
later but this is all you to editing in

00:22:43,760 --> 00:22:49,730
from QL so you basically put a value and

00:22:46,669 --> 00:22:54,140
then equal equal or acquittal and also

00:22:49,730 --> 00:22:56,600
and that's it you can also do some more

00:22:54,140 --> 00:22:59,779
complex queries like I want the sum of

00:22:56,600 --> 00:23:03,169
the average over time of that matrix

00:22:59,779 --> 00:23:08,990
about ten minute for each instance and I

00:23:03,169 --> 00:23:13,480
want to to remove the same thing but one

00:23:08,990 --> 00:23:15,679
day before so that shows you all your

00:23:13,480 --> 00:23:17,919
masculine fashion Madrid is evolving

00:23:15,679 --> 00:23:22,580
compared to yesterday at the same time

00:23:17,919 --> 00:23:24,890
so the offset command you can do it on

00:23:22,580 --> 00:23:27,679
any metric you can put one day one week

00:23:24,890 --> 00:23:30,529
one hour so is very very useful so you

00:23:27,679 --> 00:23:34,960
can see okay at this moment one hour ago

00:23:30,529 --> 00:23:38,590
this is what my or my system looks like

00:23:34,960 --> 00:23:42,320
a bunch of merging so the name of the

00:23:38,590 --> 00:23:44,240
metric is also a label label Conner

00:23:42,320 --> 00:23:47,179
underscore underscore name and this kind

00:23:44,240 --> 00:23:49,549
of score so it is a special label and

00:23:47,179 --> 00:23:53,179
you can do a back wax on it like if you

00:23:49,549 --> 00:23:57,049
want to have all the valuable within ODB

00:23:53,179 --> 00:23:58,880
and cash then you can run that query the

00:23:57,049 --> 00:24:01,220
resourceful function that's very useful

00:23:58,880 --> 00:24:04,700
in the case of replication that's

00:24:01,220 --> 00:24:07,309
project linear it's it parameters will

00:24:04,700 --> 00:24:10,880
try to tell you okay the replication

00:24:07,309 --> 00:24:13,429
like for in this case it will in two

00:24:10,880 --> 00:24:15,620
minutes it will look like this because

00:24:13,429 --> 00:24:17,450
it will look at the value of the last

00:24:15,620 --> 00:24:20,659
five minutes and you say okay I think it

00:24:17,450 --> 00:24:24,340
is evolving in that way so

00:24:20,659 --> 00:24:28,159
very very useful and then you also have

00:24:24,340 --> 00:24:30,259
like you can also just do the sum of all

00:24:28,159 --> 00:24:33,859
the commands committin wall backing and

00:24:30,259 --> 00:24:40,820
then you adjust f1 metric for both

00:24:33,859 --> 00:24:45,499
labels so let's speak about recording

00:24:40,820 --> 00:24:48,019
and writing rules so the goal is that on

00:24:45,499 --> 00:24:50,779
the exporter side you don't have a lot

00:24:48,019 --> 00:24:53,619
of logic like the exporter should not

00:24:50,779 --> 00:24:58,279
make the average he should not try to

00:24:53,619 --> 00:25:00,229
make the total make the sums and that

00:24:58,279 --> 00:25:03,109
kind of thing so you should move that

00:25:00,229 --> 00:25:05,809
intelligence somewhere else so

00:25:03,109 --> 00:25:09,519
primitives as a system that enables you

00:25:05,809 --> 00:25:12,259
to write some rules and it will actually

00:25:09,519 --> 00:25:15,769
instead of calculating the rate all the

00:25:12,259 --> 00:25:17,720
time you can say okay for that specific

00:25:15,769 --> 00:25:19,639
metric just calculate the rate and make

00:25:17,720 --> 00:25:21,830
a new metric with the value of the

00:25:19,639 --> 00:25:24,320
calculation so that you don't need to

00:25:21,830 --> 00:25:26,679
end the command every time especially if

00:25:24,320 --> 00:25:29,599
it's very expensive is very useful and

00:25:26,679 --> 00:25:31,820
then you also have a second kind of rule

00:25:29,599 --> 00:25:35,919
which is the alerting it is using the

00:25:31,820 --> 00:25:41,200
same syntax so that's what it looks like

00:25:35,919 --> 00:25:44,239
so you have a group of holes so and

00:25:41,200 --> 00:25:46,419
inside the group of holes all the rules

00:25:44,239 --> 00:25:51,139
are evaluated in the order of the file

00:25:46,419 --> 00:25:54,139
so I know that the first it will record

00:25:51,139 --> 00:25:57,940
that variable which is like in second of

00:25:54,139 --> 00:26:01,249
my heartbeat which I calculate by just

00:25:57,940 --> 00:26:04,700
putting the know timestamp - the store

00:26:01,249 --> 00:26:07,429
timestamp so I know the Oh far behind I

00:26:04,700 --> 00:26:10,159
am in my replication for example and I

00:26:07,429 --> 00:26:12,499
don't need to do that calculation every

00:26:10,159 --> 00:26:16,039
time because now I have a new metric as

00:26:12,499 --> 00:26:18,409
I can use then I have a hole that will

00:26:16,039 --> 00:26:22,720
alert me for example if the replication

00:26:18,409 --> 00:26:25,970
is not ready so if the my CQL state

00:26:22,720 --> 00:26:28,790
status levi you is not running i get to

00:26:25,970 --> 00:26:31,370
zero or the same for the other thread

00:26:28,790 --> 00:26:33,500
and I have an extra field for electing

00:26:31,370 --> 00:26:36,920
that it must last at least two minutes

00:26:33,500 --> 00:26:38,930
to get an alert so I know that okay if

00:26:36,920 --> 00:26:41,450
for some reason I reset the application

00:26:38,930 --> 00:26:43,760
and pointer sees that since that then I

00:26:41,450 --> 00:26:44,990
will not get an alert so the first

00:26:43,760 --> 00:26:48,110
minute is there okay

00:26:44,990 --> 00:26:50,000
I accept that my application is done for

00:26:48,110 --> 00:26:52,880
like one minute without being notified

00:26:50,000 --> 00:26:55,100
but after to miss please warn me and

00:26:52,880 --> 00:26:57,170
then you can have some annotation so

00:26:55,100 --> 00:26:58,940
that the people who received them a

00:26:57,170 --> 00:27:02,840
tweet I have some text and I know what

00:26:58,940 --> 00:27:06,470
is going on another a lot when I have a

00:27:02,840 --> 00:27:10,490
bit more complex expression when I reuse

00:27:06,470 --> 00:27:12,680
the okay it's not the same sure but it

00:27:10,490 --> 00:27:16,190
should be the same so when I use what I

00:27:12,680 --> 00:27:19,190
have recorded previously so if the

00:27:16,190 --> 00:27:22,820
slave-like is higher than 30 seconds and

00:27:19,190 --> 00:27:26,360
in two minutes I think that it will

00:27:22,820 --> 00:27:29,090
still be more than zero then please

00:27:26,360 --> 00:27:32,210
alert me and that for at least five

00:27:29,090 --> 00:27:33,800
minutes so it enables you to okay I have

00:27:32,210 --> 00:27:36,710
a five minute replication lag but

00:27:33,800 --> 00:27:41,030
actually it's going very well no and in

00:27:36,710 --> 00:27:42,590
two minutes it will be less than zero so

00:27:41,030 --> 00:27:45,200
I will not alert you because this will

00:27:42,590 --> 00:27:52,280
be fixed automatically so it allows you

00:27:45,200 --> 00:27:55,040
to have less noise on your alerting so

00:27:52,280 --> 00:27:57,560
know that we have when we have a value

00:27:55,040 --> 00:28:01,550
for that for example then parameters it

00:27:57,560 --> 00:28:03,860
will send an alert every minute by

00:28:01,550 --> 00:28:06,560
default so you can decide which

00:28:03,860 --> 00:28:08,180
interface evaluate the rules but I think

00:28:06,560 --> 00:28:10,850
the first one me so one minute it will

00:28:08,180 --> 00:28:13,400
send an arrest but not to you it will

00:28:10,850 --> 00:28:16,280
send her to another demand that's called

00:28:13,400 --> 00:28:18,190
the alert manager so that's a completely

00:28:16,280 --> 00:28:20,750
independent service from primitives and

00:28:18,190 --> 00:28:24,710
it will just wait to get arise from

00:28:20,750 --> 00:28:27,650
primitives so primitives is just very

00:28:24,710 --> 00:28:29,870
damp I haven't already i send it i send

00:28:27,650 --> 00:28:33,470
it i send it again you want more i ears

00:28:29,870 --> 00:28:37,280
more so this is how it works a night

00:28:33,470 --> 00:28:38,990
manager it will do beautiful things so

00:28:37,280 --> 00:28:42,300
the first thing that you will do is it

00:28:38,990 --> 00:28:45,630
will hope the alerts because you know

00:28:42,300 --> 00:28:47,460
u.s. 5 news at our own if you have 10 my

00:28:45,630 --> 00:28:50,550
secret server that are done do you want

00:28:47,460 --> 00:28:53,280
an emails no you don't want that so it

00:28:50,550 --> 00:28:56,520
can group okay it will say okay in the

00:28:53,280 --> 00:28:58,800
data center one I have five my secure

00:28:56,520 --> 00:29:02,780
server that's a good one for example so

00:28:58,800 --> 00:29:07,440
that's really great what it can also do

00:29:02,780 --> 00:29:12,030
is inhibition like okay I don't want to

00:29:07,440 --> 00:29:15,330
receive a mail because my data center is

00:29:12,030 --> 00:29:18,180
down and also I will receive like 10,000

00:29:15,330 --> 00:29:21,630
mayor's because the odds are down no

00:29:18,180 --> 00:29:24,510
that's not what you want so you can also

00:29:21,630 --> 00:29:28,260
say okay if there is an alert with that

00:29:24,510 --> 00:29:31,500
label then don't send me that total

00:29:28,260 --> 00:29:33,960
alert so that I knew that okay my data

00:29:31,500 --> 00:29:36,800
center is done but I won't get all the

00:29:33,960 --> 00:29:39,090
notification for all the services and

00:29:36,800 --> 00:29:41,940
then when you start working on something

00:29:39,090 --> 00:29:44,760
you can say okay I know it please stop

00:29:41,940 --> 00:29:48,210
sending notification or I know that I

00:29:44,760 --> 00:29:50,730
have an upgrade tomorrow at 3 p.m. so I

00:29:48,210 --> 00:29:53,220
will say okay permit is between 3 and 4

00:29:50,730 --> 00:29:56,160
please do not let me for that specific

00:29:53,220 --> 00:29:57,990
service so that's really that's another

00:29:56,160 --> 00:30:01,050
feature of the alert manager it will do

00:29:57,990 --> 00:30:03,210
the silence for you and then obviously

00:30:01,050 --> 00:30:05,670
at this at the moment when something is

00:30:03,210 --> 00:30:07,410
on fire you need to be notified and

00:30:05,670 --> 00:30:11,210
elect manager is the one that will

00:30:07,410 --> 00:30:14,940
notify you so it can send emails it can

00:30:11,210 --> 00:30:18,630
call a web service by using a web hook

00:30:14,940 --> 00:30:22,140
or it has some third-party integration

00:30:18,630 --> 00:30:24,300
like Victor Alves page or duty that kind

00:30:22,140 --> 00:30:27,780
of things and you also have third-party

00:30:24,300 --> 00:30:31,860
services that use the web hook like to

00:30:27,780 --> 00:30:34,650
send SMS that kind of things so that's

00:30:31,860 --> 00:30:37,050
most of the time you will want the to

00:30:34,650 --> 00:30:39,620
the mails and then the web who can write

00:30:37,050 --> 00:30:42,840
a small application that can do whatever

00:30:39,620 --> 00:30:46,740
you want with the LS that you will get

00:30:42,840 --> 00:30:49,500
in JSON on that web hook then you need

00:30:46,740 --> 00:30:54,499
to define some routes like the others

00:30:49,500 --> 00:30:57,960
they need to they need to go first to

00:30:54,499 --> 00:31:00,600
lock mailbox and if it's critical then

00:30:57,960 --> 00:31:02,970
send it to the network team if it's a

00:31:00,600 --> 00:31:05,489
network alert or to the service team if

00:31:02,970 --> 00:31:08,669
it's a service alert and if it's

00:31:05,489 --> 00:31:11,820
critical and send a SMS then you have

00:31:08,669 --> 00:31:14,609
the warnings and then ok for the whining

00:31:11,820 --> 00:31:16,859
ok just in the mail then and you create

00:31:14,609 --> 00:31:18,720
the route to 40 eleventeen you can it

00:31:16,859 --> 00:31:23,220
can be very complex and you can nest

00:31:18,720 --> 00:31:25,739
them as much as you want so you can make

00:31:23,220 --> 00:31:27,539
it very complex if you want there isn't

00:31:25,739 --> 00:31:29,609
yet measure an interface when you can

00:31:27,539 --> 00:31:34,739
pass your configuration that will show

00:31:29,609 --> 00:31:37,350
you a graph your routing tree so let's

00:31:34,739 --> 00:31:39,509
speak about high of ability because I've

00:31:37,350 --> 00:31:42,480
told you that ok I ever it is easy with

00:31:39,509 --> 00:31:45,299
4 meters it's easy with primitives

00:31:42,480 --> 00:31:48,389
because all you have to do is to run two

00:31:45,299 --> 00:31:50,460
primitive servers and that's done they

00:31:48,389 --> 00:31:52,710
have you put the same configuration of

00:31:50,460 --> 00:31:56,399
each one of them and you make them watch

00:31:52,710 --> 00:31:58,919
each other and they never talk to each

00:31:56,399 --> 00:32:01,169
other there is no protocol that will say

00:31:58,919 --> 00:32:05,039
ok the other one is on you you don't

00:32:01,169 --> 00:32:07,830
have that at that point just two

00:32:05,039 --> 00:32:09,539
different primitives they just all of

00:32:07,830 --> 00:32:11,489
they do is that one is monitoring to

00:32:09,539 --> 00:32:13,580
eight weeks of the other one so you know

00:32:11,489 --> 00:32:18,179
an it is own but there is no

00:32:13,580 --> 00:32:20,009
intelligence at that level the

00:32:18,179 --> 00:32:23,570
intelligence is at the alert manager

00:32:20,009 --> 00:32:26,279
level so when you have multiple monitors

00:32:23,570 --> 00:32:28,919
you make all the primitive server they

00:32:26,279 --> 00:32:30,629
send us to everyone like I send you to

00:32:28,919 --> 00:32:33,450
the first threat manager to the

00:32:30,629 --> 00:32:35,399
secondary manager and googoo googoo and

00:32:33,450 --> 00:32:37,889
so that everyone gets the alerts and

00:32:35,399 --> 00:32:40,649
then those one day to speak to each

00:32:37,889 --> 00:32:42,299
other so that they will say ok I instant

00:32:40,649 --> 00:32:44,249
notification so that the second one

00:32:42,299 --> 00:32:47,399
doesn't send a notification again and

00:32:44,249 --> 00:32:50,249
that's the way that you can have easy

00:32:47,399 --> 00:32:53,210
liability with a tape measure and if by

00:32:50,249 --> 00:32:55,679
accident they cannot speak to each other

00:32:53,210 --> 00:32:59,369
then you will get the same notification

00:32:55,679 --> 00:33:01,799
twice so that's kind of acceptable given

00:32:59,369 --> 00:33:05,519
that you have a network problem it's

00:33:01,799 --> 00:33:08,200
also important to note that those are at

00:33:05,519 --> 00:33:11,690
manager they shoot

00:33:08,200 --> 00:33:13,640
they shoot alert well the shootin

00:33:11,690 --> 00:33:15,890
civilize when primitives are down so you

00:33:13,640 --> 00:33:18,200
should make an alert on your operatives

00:33:15,890 --> 00:33:22,730
fools that okay if a bride is instance

00:33:18,200 --> 00:33:26,090
down the center so that you know it so

00:33:22,730 --> 00:33:29,180
we have seen from it use the my sequel

00:33:26,090 --> 00:33:32,450
exporter and our adventure so let's go

00:33:29,180 --> 00:33:37,100
on with qua fauna so so far we have seen

00:33:32,450 --> 00:33:38,690
a lot of tools day to one job coitus it

00:33:37,100 --> 00:33:41,090
will to the collection of the data

00:33:38,690 --> 00:33:43,910
I imagine send you the next occasions

00:33:41,090 --> 00:33:46,130
when is needed then you have the

00:33:43,910 --> 00:33:48,530
exporters and graph anna is the one that

00:33:46,130 --> 00:33:50,900
will show you the data I've shown you

00:33:48,530 --> 00:33:54,710
that when we use as a web interface it's

00:33:50,900 --> 00:33:58,760
a very very basic web interface and it's

00:33:54,710 --> 00:34:00,950
not nice it's not funny so to do the

00:33:58,760 --> 00:34:05,570
real graphing thing then just take

00:34:00,950 --> 00:34:09,500
Ravana so graph Anna open source it's a

00:34:05,570 --> 00:34:13,220
web app it is doing if there is Asian

00:34:09,500 --> 00:34:15,919
now it can also do our thing but I don't

00:34:13,220 --> 00:34:18,320
think that anyone is using that there

00:34:15,919 --> 00:34:21,200
are a lot of plugins so you can have

00:34:18,320 --> 00:34:24,290
plugins for extra data sources or a new

00:34:21,200 --> 00:34:26,389
way to visualize your data and you can

00:34:24,290 --> 00:34:29,000
break it to your primitive squad

00:34:26,389 --> 00:34:31,429
fighting flukes DB anything you want and

00:34:29,000 --> 00:34:34,909
you can play with an API as well so you

00:34:31,429 --> 00:34:38,780
can just automatically with aquifer as

00:34:34,909 --> 00:34:42,010
well one interesting point of graph Anna

00:34:38,780 --> 00:34:44,570
is that it was born out of cabinetry

00:34:42,010 --> 00:34:48,679
Havana which is the project of

00:34:44,570 --> 00:34:50,899
elasticsearch to the visualization and

00:34:48,679 --> 00:34:52,909
at the time that he was fully eg as

00:34:50,899 --> 00:34:57,440
driven so everything happen in the water

00:34:52,909 --> 00:35:00,320
and conference that is from that and the

00:34:57,440 --> 00:35:03,020
to project never got together again so

00:35:00,320 --> 00:35:06,080
it's kind of sad that now we have qua

00:35:03,020 --> 00:35:09,440
fauna on one side and keep on on the

00:35:06,080 --> 00:35:11,660
other side but it's it's like this and

00:35:09,440 --> 00:35:16,040
we cannot do anything about that so no

00:35:11,660 --> 00:35:18,980
it's two different projects but origin

00:35:16,040 --> 00:35:20,630
is array are on the same base but now

00:35:18,980 --> 00:35:24,110
they both have evolved

00:35:20,630 --> 00:35:26,750
so no wife Anna and Cabana de and Lauren

00:35:24,110 --> 00:35:30,200
garages javascript sting in the water no

00:35:26,750 --> 00:35:35,770
they're fully featured cooling programs

00:35:30,200 --> 00:35:40,070
I think I not sure if given is in going

00:35:35,770 --> 00:35:42,410
so the relationship between Waffen and

00:35:40,070 --> 00:35:45,410
primitives is very strong so primitives

00:35:42,410 --> 00:35:49,190
they have their own consoles you can do

00:35:45,410 --> 00:35:51,950
some stuff in parameters but they

00:35:49,190 --> 00:35:54,920
they're not recommending you to do that

00:35:51,950 --> 00:35:55,790
so they tell you clearly ok weeping for

00:35:54,920 --> 00:36:00,080
aqua fauna

00:35:55,790 --> 00:36:02,060
so please go and use go fauna and it's a

00:36:00,080 --> 00:36:04,700
very important relationship and require

00:36:02,060 --> 00:36:07,430
developers they put a lot of effort in

00:36:04,700 --> 00:36:11,300
primitives support Rockefeller so is

00:36:07,430 --> 00:36:14,690
very it's very great so what do you have

00:36:11,300 --> 00:36:16,910
in Gua fauna so you have anything that

00:36:14,690 --> 00:36:23,500
you can expect from a graphing solution

00:36:16,910 --> 00:36:26,660
like values bars

00:36:23,500 --> 00:36:31,430
grass like this you have everything that

00:36:26,660 --> 00:36:33,560
you need to visualize your data you can

00:36:31,430 --> 00:36:35,840
go back in time like I want to see dress

00:36:33,560 --> 00:36:39,350
two days rest seven days the last five

00:36:35,840 --> 00:36:41,870
years you can do this you can auto

00:36:39,350 --> 00:36:43,700
refresh so that if you have your graph

00:36:41,870 --> 00:36:46,160
on the world and it will refresh every

00:36:43,700 --> 00:36:49,010
minute so it's always up to date is very

00:36:46,160 --> 00:36:51,680
very impressive and it's very easy to as

00:36:49,010 --> 00:36:55,550
providing graph Anna you have multiple

00:36:51,680 --> 00:37:00,440
options so you can you can just have the

00:36:55,550 --> 00:37:02,870
URL with just plain HTTP proxy means

00:37:00,440 --> 00:37:05,590
that it is granted full access for

00:37:02,870 --> 00:37:08,450
meters and not your browser as a user

00:37:05,590 --> 00:37:11,240
then you have you can have HTTP

00:37:08,450 --> 00:37:13,490
authentication or even TLS client

00:37:11,240 --> 00:37:15,320
authentication so if you have Aquifer

00:37:13,490 --> 00:37:17,990
now that you want to be hosted outside

00:37:15,320 --> 00:37:20,690
of your data center then you can have a

00:37:17,990 --> 00:37:24,350
secure connection thank you mature SSL

00:37:20,690 --> 00:37:28,130
that kind of things and then okay you

00:37:24,350 --> 00:37:30,260
have your that you're promising - and

00:37:28,130 --> 00:37:32,330
then you you have a dashboard that's

00:37:30,260 --> 00:37:34,080
ready for it and when you click on the

00:37:32,330 --> 00:37:39,750
import button then you have a graph

00:37:34,080 --> 00:37:42,120
is your primitive matrix so that's one

00:37:39,750 --> 00:37:43,770
thing but as I told you when you have I

00:37:42,120 --> 00:37:46,740
have ability then you have multiple

00:37:43,770 --> 00:37:48,390
primitives instances and you can have

00:37:46,740 --> 00:37:50,940
that on grandfather so that's a feature

00:37:48,390 --> 00:37:54,630
of Ravana and you can even in at the top

00:37:50,940 --> 00:37:56,730
of your of your dashboard you can say

00:37:54,630 --> 00:38:00,480
okay I want to see the properties when

00:37:56,730 --> 00:38:02,040
the primitives - it's very easy and one

00:38:00,480 --> 00:38:05,160
of the use case is that so

00:38:02,040 --> 00:38:07,920
remember the access mode proxy so if you

00:38:05,160 --> 00:38:10,140
put access mode local and the address

00:38:07,920 --> 00:38:12,660
local of 1990 when you will go to the

00:38:10,140 --> 00:38:14,520
iguana then you will see what is in your

00:38:12,660 --> 00:38:17,580
current primitives on your development

00:38:14,520 --> 00:38:19,950
machine for example so it enables the

00:38:17,580 --> 00:38:23,340
developers to actually see okay what to

00:38:19,950 --> 00:38:25,110
the graph look like in microfauna by

00:38:23,340 --> 00:38:31,950
using my local data that I am developing

00:38:25,110 --> 00:38:34,680
now so that's very very cool so graphing

00:38:31,950 --> 00:38:37,980
is great but if you want to make

00:38:34,680 --> 00:38:40,140
dashboard it takes a lot of time and to

00:38:37,980 --> 00:38:42,930
get them right and to take the extra

00:38:40,140 --> 00:38:45,270
step of like I want the house in red I

00:38:42,930 --> 00:38:48,500
want all of that takes a lot of time and

00:38:45,270 --> 00:38:51,510
also you need to need a deep knowledge

00:38:48,500 --> 00:38:55,710
improve them a very large amount of time

00:38:51,510 --> 00:38:57,690
so it's very painful but once you have

00:38:55,710 --> 00:39:00,930
nice dashboard and you can share them

00:38:57,690 --> 00:39:05,750
and that's what a company did

00:39:00,930 --> 00:39:08,360
picanha they do my sequel

00:39:05,750 --> 00:39:10,970
consulting and they decided okay

00:39:08,360 --> 00:39:14,790
primitives is great we really like that

00:39:10,970 --> 00:39:16,920
we really like a fauna but our customers

00:39:14,790 --> 00:39:18,930
they want dashboards I don't want to

00:39:16,920 --> 00:39:20,730
make their own dashboard and all of

00:39:18,930 --> 00:39:23,250
customers they need the same dashboards

00:39:20,730 --> 00:39:26,490
because you know TV performance is the

00:39:23,250 --> 00:39:28,260
same on every customer right so what you

00:39:26,490 --> 00:39:30,630
need to watch is the same everywhere so

00:39:28,260 --> 00:39:34,110
let's make some dashboard and share them

00:39:30,630 --> 00:39:36,440
and that's why they did it's a GPL

00:39:34,110 --> 00:39:39,450
license so it's open source and

00:39:36,440 --> 00:39:42,600
basically you have a bunch of dashboards

00:39:39,450 --> 00:39:47,400
that you can use reuse ANSI and very

00:39:42,600 --> 00:39:48,920
awesome so to install the Parana the -

00:39:47,400 --> 00:39:51,150
browse and you

00:39:48,920 --> 00:39:54,059
you can you have multiple options you

00:39:51,150 --> 00:39:57,029
can just tell - okay in the directory

00:39:54,059 --> 00:39:59,479
with the JSON files and you put the

00:39:57,029 --> 00:40:02,789
Pfizer just by cloning the git

00:39:59,479 --> 00:40:05,219
repository or you can go for a more

00:40:02,789 --> 00:40:08,579
complete complex method internally use

00:40:05,219 --> 00:40:11,219
the API to upload the JSON files on the

00:40:08,579 --> 00:40:14,279
my sequel side the pack another go they

00:40:11,219 --> 00:40:18,119
require you my sequel the exporter my

00:40:14,279 --> 00:40:20,819
sequel and some other values and also

00:40:18,119 --> 00:40:23,759
with your node exporter they require you

00:40:20,819 --> 00:40:25,739
to have those different things in able

00:40:23,759 --> 00:40:28,920
to see everything is the curve that they

00:40:25,739 --> 00:40:32,939
prepare for you one last thing is that

00:40:28,920 --> 00:40:36,299
you need to have the same instance name

00:40:32,939 --> 00:40:39,119
of your node exporter and your my sequel

00:40:36,299 --> 00:40:42,719
exporter so very important that you have

00:40:39,119 --> 00:40:45,779
the same name and once you have all of

00:40:42,719 --> 00:40:50,459
that then you have you seen your graph

00:40:45,779 --> 00:40:53,009
and all those graphs like the Maya did

00:40:50,459 --> 00:40:55,829
my a typical have dispensed this

00:40:53,009 --> 00:40:58,859
performance then a bunch of my sequel

00:40:55,829 --> 00:41:00,599
graph like an overview replication the

00:40:58,859 --> 00:41:06,209
query response time to perform schema

00:41:00,599 --> 00:41:09,779
all of that and more and more and so

00:41:06,209 --> 00:41:11,789
it's very great but you have maybe too

00:41:09,779 --> 00:41:13,259
much of them so you maybe sometimes we

00:41:11,789 --> 00:41:15,599
just remove okay we remove all the

00:41:13,259 --> 00:41:17,429
MongoDB one because I I don't use

00:41:15,599 --> 00:41:19,589
but basically they are that so you can

00:41:17,429 --> 00:41:21,209
if one day you use you can just a

00:41:19,589 --> 00:41:23,670
them and it would be correct

00:41:21,209 --> 00:41:26,969
so what do they look like to graph

00:41:23,670 --> 00:41:30,150
another words so that's for example the

00:41:26,969 --> 00:41:32,099
my sequel overview so you have you can

00:41:30,150 --> 00:41:35,009
pick the cryptograph on the top and then

00:41:32,099 --> 00:41:38,009
you see a KD uptime the OTP buffer

00:41:35,009 --> 00:41:40,469
full-size the pool size compared to the

00:41:38,009 --> 00:41:43,380
amount of RAM I don't know why there's

00:41:40,469 --> 00:41:46,109
no value there but okay and then you can

00:41:43,380 --> 00:41:49,529
see a bunch of stuff and you see that

00:41:46,109 --> 00:41:52,410
they redid the polishing of like putting

00:41:49,529 --> 00:41:54,569
the right colors and like this one is

00:41:52,410 --> 00:41:56,849
filled this one is not fun that takes a

00:41:54,569 --> 00:41:59,670
lot of time and dated it so is free

00:41:56,849 --> 00:42:01,530
awesome my secret overview so

00:41:59,670 --> 00:42:05,250
you see all the commands that have been

00:42:01,530 --> 00:42:09,799
around the endures in ODB as I told you

00:42:05,250 --> 00:42:12,059
you have a lot of data about in OD being

00:42:09,799 --> 00:42:15,740
and actually when you have a problem

00:42:12,059 --> 00:42:20,220
sometimes well actually you need to be

00:42:15,740 --> 00:42:22,650
very good to us an autocross but you see

00:42:20,220 --> 00:42:25,049
still you have still some good in store

00:42:22,650 --> 00:42:27,119
what is going on even if you don't

00:42:25,049 --> 00:42:29,190
understand the class you can always take

00:42:27,119 --> 00:42:30,990
a look at okay that's a query they take

00:42:29,190 --> 00:42:34,770
that's what it means in my sequel and

00:42:30,990 --> 00:42:37,920
the kind of things and also that was for

00:42:34,770 --> 00:42:40,710
the replication like okay it is it is my

00:42:37,920 --> 00:42:44,040
replication delay and it the replication

00:42:40,710 --> 00:42:46,500
is running it's fine so with that kind

00:42:44,040 --> 00:42:49,260
of thing I can actually replace a tool

00:42:46,500 --> 00:42:53,839
like dashing with Quanah because you can

00:42:49,260 --> 00:42:57,000
have that kind of values free grade

00:42:53,839 --> 00:42:58,920
Agrafena they they also support

00:42:57,000 --> 00:43:02,700
multi-tenancy so that if you have

00:42:58,920 --> 00:43:05,549
multiple customers with multiple and you

00:43:02,700 --> 00:43:07,410
don't want to expose all the same - goes

00:43:05,549 --> 00:43:11,329
to all the customers you can have

00:43:07,410 --> 00:43:11,329
multiple organizations in your graph and

00:43:11,569 --> 00:43:17,880
you can also mark so you can also have

00:43:14,430 --> 00:43:19,740
annotations in the class so that if you

00:43:17,880 --> 00:43:21,180
have an elastic search and you push an

00:43:19,740 --> 00:43:23,730
event where as exception and you can

00:43:21,180 --> 00:43:27,089
have a vertical bar in your graph are

00:43:23,730 --> 00:43:30,359
now that's really nice and then what is

00:43:27,089 --> 00:43:32,339
going into next releases of asana is

00:43:30,359 --> 00:43:34,920
that you will be able to have the

00:43:32,339 --> 00:43:36,690
dashboards in different folders like in

00:43:34,920 --> 00:43:39,180
this case we would have a folder for the

00:43:36,690 --> 00:43:41,369
MongoDB a folder for to my sequel so

00:43:39,180 --> 00:43:44,099
that will be really awesome because the

00:43:41,369 --> 00:43:48,020
long flat list that you have no wind

00:43:44,099 --> 00:43:51,900
longer exist one last thing about karana

00:43:48,020 --> 00:43:56,630
is that all the dashboard are with an

00:43:51,900 --> 00:44:00,599
incision and I'm building a library

00:43:56,630 --> 00:44:04,410
based on chase on it to actually write

00:44:00,599 --> 00:44:06,059
that I've got more easily it's very

00:44:04,410 --> 00:44:07,650
brand-new but if you aren't arresting

00:44:06,059 --> 00:44:09,510
into writing or another world I

00:44:07,650 --> 00:44:12,940
encourage you to have a look

00:44:09,510 --> 00:44:14,890
who thinks what it looks like so I know

00:44:12,940 --> 00:44:17,349
you can retreat but basically with only

00:44:14,890 --> 00:44:19,569
three lines on the left and you can have

00:44:17,349 --> 00:44:21,130
all two default values on the right so

00:44:19,569 --> 00:44:23,289
this is a compiled version and this is

00:44:21,130 --> 00:44:28,900
the short version of the graph so it's

00:44:23,289 --> 00:44:32,500
very nice so properties and graph honor

00:44:28,900 --> 00:44:34,680
it's refactoring tools and you can do

00:44:32,500 --> 00:44:37,030
everything with that so you don't need

00:44:34,680 --> 00:44:39,430
an extra eye King guy you don't need an

00:44:37,030 --> 00:44:41,559
extra I don't know and next was a big

00:44:39,430 --> 00:44:44,079
sir now you can do everything with from

00:44:41,559 --> 00:44:45,460
eg Tsinghua fauna it takes time because

00:44:44,079 --> 00:44:47,079
there's still a lot of things that you

00:44:45,460 --> 00:44:49,930
need to do yourself like the arresting

00:44:47,079 --> 00:44:53,559
horse die cutting holes there is no

00:44:49,930 --> 00:44:56,530
you're stoned out with them the approach

00:44:53,559 --> 00:44:59,950
of primitives is completely different

00:44:56,530 --> 00:45:02,890
from any other tool around so but I

00:44:59,950 --> 00:45:05,319
really like that is very simple HTTP is

00:45:02,890 --> 00:45:07,480
easy to understand easy to debug so it's

00:45:05,319 --> 00:45:09,520
requite you can have that in your

00:45:07,480 --> 00:45:12,130
application and have your developers

00:45:09,520 --> 00:45:14,230
writing the matrix so you don't need to

00:45:12,130 --> 00:45:16,690
go into database to check that qua like

00:45:14,230 --> 00:45:18,579
you know you can do that directly at the

00:45:16,690 --> 00:45:20,410
application level okay tell me how many

00:45:18,579 --> 00:45:23,319
requests did you serve that kind of

00:45:20,410 --> 00:45:25,539
thing so you can engage your developers

00:45:23,319 --> 00:45:27,220
into the measuring system as well it's

00:45:25,539 --> 00:45:29,920
really nice and they can test it locally

00:45:27,220 --> 00:45:32,650
because Proteus runs on any OS that you

00:45:29,920 --> 00:45:36,460
would have so it's really nice and when

00:45:32,650 --> 00:45:38,740
you monitor my sequel with parameters

00:45:36,460 --> 00:45:41,520
and then I encourage you to look at the

00:45:38,740 --> 00:45:46,839
personal dashboards it's really great

00:45:41,520 --> 00:45:49,569
and you can get ready to use the to use

00:45:46,839 --> 00:45:53,529
them in only a few minutes so it's

00:45:49,569 --> 00:45:55,960
really great one thing I forgot to say

00:45:53,529 --> 00:45:58,539
about the dashboards is that there are

00:45:55,960 --> 00:46:00,910
part of Budo solution from bakkanna

00:45:58,539 --> 00:46:02,859
which is called pmm where they have

00:46:00,910 --> 00:46:06,819
another service and just promising -

00:46:02,859 --> 00:46:10,690
about this and for that pmm product that

00:46:06,819 --> 00:46:13,270
they have okay thank you

00:46:10,690 --> 00:46:14,950
so if you have any questions I'm just in

00:46:13,270 --> 00:46:16,750
time so you have plenty of time for

00:46:14,950 --> 00:46:18,840
questions about anything related

00:46:16,750 --> 00:46:29,250
properties go further my sequel

00:46:18,840 --> 00:46:31,440
thank you okay before anybody else can

00:46:29,250 --> 00:46:35,490
ask something I have a question is it

00:46:31,440 --> 00:46:39,690
possible to to use alerting module to

00:46:35,490 --> 00:46:44,580
aggregate alerts from monitoring

00:46:39,690 --> 00:46:47,370
solutions to do it in one place and so I

00:46:44,580 --> 00:46:51,480
know that I told you that graph and I

00:46:47,370 --> 00:46:53,940
can send alerts and there is the option

00:46:51,480 --> 00:46:54,810
inguinal for example to send the rest to

00:46:53,940 --> 00:46:58,230
alert manager

00:46:54,810 --> 00:47:01,710
so yes it's there is an HTTP API that

00:46:58,230 --> 00:47:04,620
you can use it's not stable yet so I

00:47:01,710 --> 00:47:06,840
don't think it's versioned but yes you

00:47:04,620 --> 00:47:08,820
can do it you it and I know that guava

00:47:06,840 --> 00:47:10,830
is doing it so it should be possible to

00:47:08,820 --> 00:47:12,840
do that with other things and I know how

00:47:10,830 --> 00:47:14,580
I don't know everything yet but I know

00:47:12,840 --> 00:47:18,570
that for nagios there is also a witch

00:47:14,580 --> 00:47:34,860
that can send I guess the rest to arrest

00:47:18,570 --> 00:47:39,210
manager as well thank you thank you for

00:47:34,860 --> 00:47:42,300
your very informative talk about

00:47:39,210 --> 00:47:50,760
prometheus - and some of the major

00:47:42,300 --> 00:47:53,610
things so permit is - there are a few

00:47:50,760 --> 00:47:57,000
major improvements the first of all is

00:47:53,610 --> 00:47:58,650
the new TSD be the new time cirrie

00:47:57,000 --> 00:48:02,190
database that is rewritten from scratch

00:47:58,650 --> 00:48:04,560
by people from coalesce it who does very

00:48:02,190 --> 00:48:07,260
efficient and that can scale a lot more

00:48:04,560 --> 00:48:09,360
than version one and then you also an

00:48:07,260 --> 00:48:11,850
improvement on stillness so infirmity is

00:48:09,360 --> 00:48:13,790
one when a metric is gone then it is

00:48:11,850 --> 00:48:16,230
still in primitives for five minutes in

00:48:13,790 --> 00:48:18,090
primitives - when a metric is gun is

00:48:16,230 --> 00:48:19,620
directly gone and you don't have it

00:48:18,090 --> 00:48:21,840
polluting your quest anymore

00:48:19,620 --> 00:48:26,520
so that's the main feature affirmative

00:48:21,840 --> 00:48:29,340
is - point is - has been in beta and for

00:48:26,520 --> 00:48:31,620
months and months and now it's out for

00:48:29,340 --> 00:48:32,790
already two weeks and I don't think that

00:48:31,620 --> 00:48:34,680
there are major perks

00:48:32,790 --> 00:48:38,340
and we are reducing that in projection

00:48:34,680 --> 00:48:40,260
and it works really well so you can if

00:48:38,340 --> 00:48:42,890
you are using prettiest one I equate you

00:48:40,260 --> 00:48:45,960
to just make the jump to Prince's to

00:48:42,890 --> 00:48:48,000
know when you want to acquit from one to

00:48:45,960 --> 00:48:51,270
two it's a big complex complicated

00:48:48,000 --> 00:48:53,940
because there is no not only a migration

00:48:51,270 --> 00:48:55,380
tool so the recommendation is that you

00:48:53,940 --> 00:48:59,040
wanna permit is to next to your

00:48:55,380 --> 00:49:00,960
primitives one and then you use the two

00:48:59,040 --> 00:49:01,620
to query the one while it's on the

00:49:00,960 --> 00:49:05,460
website

00:49:01,620 --> 00:49:09,300
yeah will will people who have

00:49:05,460 --> 00:49:11,670
implemented Prometheus metrics in their

00:49:09,300 --> 00:49:14,430
software like in MGMT well they have to

00:49:11,670 --> 00:49:19,320
port to support Prometheus - or the

00:49:14,430 --> 00:49:22,520
existing things compatible it's already

00:49:19,320 --> 00:49:25,950
working so there is no change in the API

00:49:22,520 --> 00:49:28,680
so the matrix that were made for grant

00:49:25,950 --> 00:49:34,050
is fund I work for priorities - oh thank

00:49:28,680 --> 00:49:37,080
you and so API wise because like for

00:49:34,050 --> 00:49:40,170
example primitives is version 2 F major

00:49:37,080 --> 00:49:43,320
did doesn't is still version the open 10

00:49:40,170 --> 00:49:46,440
and so the API between those services is

00:49:43,320 --> 00:49:50,100
also a version independent so they can

00:49:46,440 --> 00:50:02,810
talk to each other across major releases

00:49:50,100 --> 00:50:07,080
so that's also great in the promises 2.0

00:50:02,810 --> 00:50:09,840
and exporters is there any difference we

00:50:07,080 --> 00:50:16,710
know so with the same exporters that we

00:50:09,840 --> 00:50:20,940
have in the 8th yes yes yes there is no

00:50:16,710 --> 00:50:23,130
difference so it is really great

00:50:20,940 --> 00:50:25,320
well one of the things that this change

00:50:23,130 --> 00:50:27,090
for example is that when you're

00:50:25,320 --> 00:50:29,730
recording holes know they're in yellow

00:50:27,090 --> 00:50:32,430
before it was not yellow and some

00:50:29,730 --> 00:50:35,100
functions are gone like the previous

00:50:32,430 --> 00:50:37,740
teams I say ok that function is useless

00:50:35,100 --> 00:50:40,110
we remove it so you have like 3 of a

00:50:37,740 --> 00:50:42,630
fraction that you need to adapt to see

00:50:40,110 --> 00:50:44,760
super it is 2 if you have use them but

00:50:42,630 --> 00:50:46,260
that's all really for end user

00:50:44,760 --> 00:50:49,740
perspective is really

00:50:46,260 --> 00:50:52,619
really easy okay another question

00:50:49,740 --> 00:50:54,840
regarding to my school and does the

00:50:52,619 --> 00:50:59,600
exporter has to be deployed in the same

00:50:54,840 --> 00:51:03,090
machine that done is done my school or

00:50:59,600 --> 00:51:04,710
we we can deploy this exporters in a

00:51:03,090 --> 00:51:08,460
limit in that connection with my

00:51:04,710 --> 00:51:10,590
squirrel you can put the exporter

00:51:08,460 --> 00:51:12,840
whatever wherever you want and it can

00:51:10,590 --> 00:51:15,720
connect using an environment variable

00:51:12,840 --> 00:51:20,010
with the address of the database am I to

00:51:15,720 --> 00:51:22,290
CNF file like you want so you don't need

00:51:20,010 --> 00:51:27,630
to have it next to your my sequel

00:51:22,290 --> 00:51:29,430
instance not exports not notice ports

00:51:27,630 --> 00:51:32,280
yeah the note exporter needs to run on

00:51:29,430 --> 00:51:33,960
the same machine yes that one because it

00:51:32,280 --> 00:51:36,359
will read the file system in slash

00:51:33,960 --> 00:51:37,710
pocket will get the current time so if

00:51:36,359 --> 00:51:39,810
you put it in a machine determine that

00:51:37,710 --> 00:51:41,880
work but do my sequin exporter can run

00:51:39,810 --> 00:51:45,750
any any way you want but the node

00:51:41,880 --> 00:51:49,230
exporter but so before holding out a

00:51:45,750 --> 00:51:51,600
node exporter we did some performance

00:51:49,230 --> 00:51:53,450
tests and we couldn't see the impact of

00:51:51,600 --> 00:52:06,780
the expert on the machine so it's very

00:51:53,450 --> 00:52:10,160
low footprint okay thank you

00:52:06,780 --> 00:52:10,160
to have any more questions

00:52:10,510 --> 00:52:18,770
okay okay thank you I'm still a 1 oh

00:52:15,710 --> 00:52:20,570
there is no I'm still there until I see

00:52:18,770 --> 00:52:22,700
I wish to be there at the icater not for

00:52:20,570 --> 00:52:24,860
this why am I want all the time if you

00:52:22,700 --> 00:52:26,300
want to ask me more question about 4 it

00:52:24,860 --> 00:52:27,790
is graphing or anything like that

00:52:26,300 --> 00:52:33,650
thank you

00:52:27,790 --> 00:52:33,650

YouTube URL: https://www.youtube.com/watch?v=mTmzPnAj-iE


