Title: OSMC 2017 | How is Zabbix doing – an outside look by Rihards Olups
Publication date: 2017-12-05
Playlist: OSMC 2017 | Open Source Monitoring Conference
Description: 
	Zabbix is an opensource monitoring tool that has been rapidly evolving during the last few years. We will talk about the growth of the product and look at it from several perspectives :
- technical – how Zabbix has developed functionally, important decisions made
- project management – which processes help to improve the software quality and which ones help less
- community – how open is Zabbix and how that has changed over the years both towards more and less openness
The talk will illustrate points made with examples from the Zabbix community as well as from an extensive Zabbix use at Nokia.
Captions: 
	00:00:10,230 --> 00:00:16,410
okay so I would say welcome to the third

00:00:14,129 --> 00:00:19,740
talk all today and

00:00:16,410 --> 00:00:23,670
this is how is epic suing an outside

00:00:19,740 --> 00:00:26,009
look in English from rich rahat olives

00:00:23,670 --> 00:00:26,670
I hope it's pronounced correctly in that

00:00:26,009 --> 00:00:32,099
direction

00:00:26,670 --> 00:00:35,460
we had thank you so good

00:00:32,099 --> 00:00:39,680
I think noon at this time and my name is

00:00:35,460 --> 00:00:39,680
Lee Hertz and I'm a longtime zabbix user

00:00:39,800 --> 00:00:45,480
very briefly about me I had the honor to

00:00:42,750 --> 00:00:48,899
work at the zabbix company for some six

00:00:45,480 --> 00:00:50,340
years it's a great team and before and

00:00:48,899 --> 00:00:52,680
after that I put together a couple of

00:00:50,340 --> 00:00:54,390
books on zabbix I'm trying to find some

00:00:52,680 --> 00:00:57,629
time to write articles at zabbix

00:00:54,390 --> 00:00:59,250
book.com blog and I really like

00:00:57,629 --> 00:01:03,110
OpenStreetMap so I'm trying to improve

00:00:59,250 --> 00:01:06,090
the map every now and then and

00:01:03,110 --> 00:01:07,380
disclaimer right away as mentioned I

00:01:06,090 --> 00:01:08,820
moved away from his hobbies company a

00:01:07,380 --> 00:01:10,710
couple of years ago I'm still using

00:01:08,820 --> 00:01:13,110
zabbix I'm not affiliated with the

00:01:10,710 --> 00:01:16,470
company in any way so I'll try to give

00:01:13,110 --> 00:01:19,110
you a fairly honestly of how I see the

00:01:16,470 --> 00:01:23,630
product the the processes and everything

00:01:19,110 --> 00:01:26,190
else around zabbix and to start with

00:01:23,630 --> 00:01:28,590
some understanding what you think about

00:01:26,190 --> 00:01:31,530
zabbix who who has never heard about

00:01:28,590 --> 00:01:33,599
zabbix before there is one person he has

00:01:31,530 --> 00:01:36,990
never heard about anything I've seen him

00:01:33,599 --> 00:01:45,270
in other talks okay who is using zabbix

00:01:36,990 --> 00:01:46,649
currently there's a few ok so some

00:01:45,270 --> 00:01:48,899
people have installed it and others are

00:01:46,649 --> 00:01:51,420
using it and there's like four or five

00:01:48,899 --> 00:01:54,599
people actually using it so I'll try to

00:01:51,420 --> 00:01:57,179
more concentrate than just talk on new

00:01:54,599 --> 00:01:59,160
features in zabbix I will maybe less

00:01:57,179 --> 00:02:00,989
talk about the basis and functionality

00:01:59,160 --> 00:02:04,319
as such I'll try to have some

00:02:00,989 --> 00:02:06,539
introduction on that but if you get some

00:02:04,319 --> 00:02:08,670
unclear things during or after the talk

00:02:06,539 --> 00:02:10,709
still please catch me and ask me

00:02:08,670 --> 00:02:13,560
questions about this and we'll get

00:02:10,709 --> 00:02:15,300
everything cleared up and here's another

00:02:13,560 --> 00:02:22,940
question so which country does epochs

00:02:15,300 --> 00:02:22,940
come from not Germany

00:02:25,220 --> 00:02:33,380
France not Estonia not Russia who said

00:02:28,280 --> 00:02:36,380
Latvia okay you get a candy and it's

00:02:33,380 --> 00:02:41,380
Latvian candy and that's with Rick a

00:02:36,380 --> 00:02:41,380
black balls a minute so there you go

00:02:43,070 --> 00:02:48,500
so yeah I'll start talking about zabbix

00:02:45,910 --> 00:02:51,380
what has changed during the past two

00:02:48,500 --> 00:02:53,990
years not just one year and then I'll

00:02:51,380 --> 00:02:56,960
discuss potential concerns about the how

00:02:53,990 --> 00:02:59,150
open the processes are as again that's

00:02:56,960 --> 00:03:01,610
an outside look so that's what it looks

00:02:59,150 --> 00:03:04,610
like to me from the outside

00:03:01,610 --> 00:03:06,530
another question anybody has an idea or

00:03:04,610 --> 00:03:13,670
a guests in which year did the first

00:03:06,530 --> 00:03:17,150
public release of zabbix happen not 2002

00:03:13,670 --> 00:03:20,270
but that's pretty close okay who said

00:03:17,150 --> 00:03:21,890
that 2001 that's guys you're just

00:03:20,270 --> 00:03:27,280
sitting there next to one another you're

00:03:21,890 --> 00:03:31,300
just sharing all the candy then so

00:03:27,280 --> 00:03:31,300
please pass that thank you

00:03:32,750 --> 00:03:37,880
so the zabbix is very very rapidly

00:03:36,110 --> 00:03:39,950
developed and with the first release

00:03:37,880 --> 00:03:41,510
back in 2001 it's a pretty major

00:03:39,950 --> 00:03:44,810
solution

00:03:41,510 --> 00:03:46,220
so there's many features I will not be

00:03:44,810 --> 00:03:48,620
able even to cover all of the new

00:03:46,220 --> 00:03:51,019
features so just some highlights from my

00:03:48,620 --> 00:03:53,330
point of view on this why two years is

00:03:51,019 --> 00:03:55,580
because last time there was any subjects

00:03:53,330 --> 00:03:58,030
related talk at osm see this conference

00:03:55,580 --> 00:04:00,310
was in 2015 that's two years ago so

00:03:58,030 --> 00:04:03,620
let's cover whatever happened between

00:04:00,310 --> 00:04:05,510
then and now between then and now two

00:04:03,620 --> 00:04:08,030
major versions were released because

00:04:05,510 --> 00:04:11,110
that excuses to numbers as major version

00:04:08,030 --> 00:04:14,060
3 that two three that four got released

00:04:11,110 --> 00:04:15,350
and a major release means that there's a

00:04:14,060 --> 00:04:19,700
lot of new features lots of new

00:04:15,350 --> 00:04:22,520
improvements zabbix for me personally is

00:04:19,700 --> 00:04:25,040
not a very big part of my my daily

00:04:22,520 --> 00:04:27,350
duties anymore but as I'm still using it

00:04:25,040 --> 00:04:29,150
I'm trying to keep up with it and I hope

00:04:27,350 --> 00:04:32,270
that he'll will be able to give a good

00:04:29,150 --> 00:04:34,190
overview of these features first one

00:04:32,270 --> 00:04:37,340
non-technical feature and that is the

00:04:34,190 --> 00:04:38,700
support cycle lifecycle of zabbix you

00:04:37,340 --> 00:04:40,110
might know the concept from other

00:04:38,700 --> 00:04:41,850
product zabbix has also introduced

00:04:40,110 --> 00:04:45,840
something called long-term support

00:04:41,850 --> 00:04:48,870
releases or LTS releases so there's a

00:04:45,840 --> 00:04:50,610
release which is an LTS than two non LTS

00:04:48,870 --> 00:04:52,860
releases and then yet another release

00:04:50,610 --> 00:04:56,430
which is again LTS LTS releases get

00:04:52,860 --> 00:04:58,950
support for five years in in total and

00:04:56,430 --> 00:05:01,770
non LTS releases are supported more or

00:04:58,950 --> 00:05:04,470
less until the next release is out so

00:05:01,770 --> 00:05:06,840
it's like LTS release one to nine LTS

00:05:04,470 --> 00:05:08,820
releases LTS release again planned to be

00:05:06,840 --> 00:05:12,800
released every six months depending on

00:05:08,820 --> 00:05:15,180
any potentials delay potential delays

00:05:12,800 --> 00:05:17,400
visual overview of how the supported

00:05:15,180 --> 00:05:18,810
versions work so the red ones are LTS

00:05:17,400 --> 00:05:20,640
versions as you can see there's a pretty

00:05:18,810 --> 00:05:22,800
big overlap so if you're looking to get

00:05:20,640 --> 00:05:25,260
to use the supported version then you

00:05:22,800 --> 00:05:27,450
have a pretty big time window during

00:05:25,260 --> 00:05:30,690
which to migrate to the new LTS version

00:05:27,450 --> 00:05:32,940
that's released the non LTS versions you

00:05:30,690 --> 00:05:35,610
have a shorter time span to do this much

00:05:32,940 --> 00:05:37,140
shorter actually but then you get access

00:05:35,610 --> 00:05:42,270
to new features sooner so it's

00:05:37,140 --> 00:05:43,590
trade-offs and in both cases but the

00:05:42,270 --> 00:05:47,070
general functionality of course epic

00:05:43,590 --> 00:05:49,620
does month ring it does mom for

00:05:47,070 --> 00:05:51,000
everything there's just agentless native

00:05:49,620 --> 00:05:52,560
agent there's web monitoring then it

00:05:51,000 --> 00:05:56,430
stores the data and does the alerting

00:05:52,560 --> 00:05:58,530
and it sorry it provides a user

00:05:56,430 --> 00:06:04,260
interface for visual visualizing the

00:05:58,530 --> 00:06:06,840
monitoring data as well and let's try to

00:06:04,260 --> 00:06:10,860
get all of zabbix features in one slide

00:06:06,840 --> 00:06:12,180
so zabbix a is a true open source that's

00:06:10,860 --> 00:06:14,700
not you can call feature but it's a true

00:06:12,180 --> 00:06:17,700
open source or it doesn't have this open

00:06:14,700 --> 00:06:20,220
core concept everything you download all

00:06:17,700 --> 00:06:21,830
this old code that's the same that

00:06:20,220 --> 00:06:23,850
everybody else is using there is no

00:06:21,830 --> 00:06:27,150
Enterprise version no proprietary

00:06:23,850 --> 00:06:31,260
plugins because open core it's not good

00:06:27,150 --> 00:06:33,120
not like I'm being very polite here so

00:06:31,260 --> 00:06:36,240
there's also public promise to keep

00:06:33,120 --> 00:06:38,070
zabbix open source native agent zabbix

00:06:36,240 --> 00:06:39,690
offers a native agent so it's not Java

00:06:38,070 --> 00:06:42,900
or anything else it's very lightweight

00:06:39,690 --> 00:06:45,030
for example on 64-bit Linux system

00:06:42,900 --> 00:06:47,460
excluding the shared libraries zabbix

00:06:45,030 --> 00:06:49,230
agent uses around 700 kilobytes of

00:06:47,460 --> 00:06:52,380
memory

00:06:49,230 --> 00:06:54,780
it runs on nearly everything I think

00:06:52,380 --> 00:06:56,670
a s400 is not included in that list but

00:06:54,780 --> 00:06:58,560
everything else that most people are

00:06:56,670 --> 00:07:02,010
running is supported by these objects

00:06:58,560 --> 00:07:03,600
agent browser-based user interface both

00:07:02,010 --> 00:07:05,190
from monitoring and configuration pretty

00:07:03,600 --> 00:07:08,040
much all the configuration can be done

00:07:05,190 --> 00:07:10,530
through a user interface there's a

00:07:08,040 --> 00:07:12,690
really awesome product component of

00:07:10,530 --> 00:07:14,130
zabbix called zabbix proxy you can think

00:07:12,690 --> 00:07:15,720
of that as a remote data collector it

00:07:14,130 --> 00:07:19,500
can collect data for you from branch

00:07:15,720 --> 00:07:22,950
offices client sites from DMZ or just be

00:07:19,500 --> 00:07:26,760
used as softening layer for performance

00:07:22,950 --> 00:07:29,160
reasons native support for JMX for

00:07:26,760 --> 00:07:32,010
VMware for webpage monitoring all

00:07:29,160 --> 00:07:33,360
built-in agentless monitoring for the

00:07:32,010 --> 00:07:36,420
cases where you cannot install the

00:07:33,360 --> 00:07:38,340
zabbix agent so things like basic basic

00:07:36,420 --> 00:07:42,630
service checks TCP ports I simply paying

00:07:38,340 --> 00:07:45,210
and so on very very easy to extend in

00:07:42,630 --> 00:07:47,640
the most simple way by running scripts

00:07:45,210 --> 00:07:49,760
to collect data any language no language

00:07:47,640 --> 00:07:52,920
restrictions so Perl Ruby Python

00:07:49,760 --> 00:07:56,000
anything more exotic some people write

00:07:52,920 --> 00:07:59,130
them in Java anything it's up to you

00:07:56,000 --> 00:08:01,200
alerting email SMS jabber support comes

00:07:59,130 --> 00:08:03,540
out of the box and a few others also

00:08:01,200 --> 00:08:07,650
very easy to extend just send data to

00:08:03,540 --> 00:08:09,810
any SMS provider and so on and of course

00:08:07,650 --> 00:08:11,370
I lied that's not all of the zabbix

00:08:09,810 --> 00:08:14,040
features there's many many many more

00:08:11,370 --> 00:08:15,990
these are maybe just that the ones that

00:08:14,040 --> 00:08:18,390
I would highlight that's it

00:08:15,990 --> 00:08:19,890
there's API and there's lots of other

00:08:18,390 --> 00:08:25,680
things that we will not even talk today

00:08:19,890 --> 00:08:27,780
about at all so I'll jump over to the

00:08:25,680 --> 00:08:29,850
actual technical improvements and the

00:08:27,780 --> 00:08:32,520
shiny is the one that's most into the

00:08:29,850 --> 00:08:34,500
face of the users is the dashboard

00:08:32,520 --> 00:08:36,840
improvements in recent versions of

00:08:34,500 --> 00:08:38,700
zabbix and previously zabbix dashboards

00:08:36,840 --> 00:08:40,440
were rather inflexible they had useful

00:08:38,700 --> 00:08:42,539
information but there was a fixed number

00:08:40,440 --> 00:08:44,219
of widgets you could expand and collapse

00:08:42,539 --> 00:08:46,890
them and rearrange them a bit and that's

00:08:44,219 --> 00:08:48,840
that was pretty much it this has been

00:08:46,890 --> 00:08:51,480
completely reworked and now it's might

00:08:48,840 --> 00:08:53,490
be more similar to what people have come

00:08:51,480 --> 00:08:56,340
to expect from other products so the

00:08:53,490 --> 00:08:57,540
dashboards users now can configure the

00:08:56,340 --> 00:08:59,220
dashboards there's a huge number of

00:08:57,540 --> 00:09:01,770
widgets compared to the previous

00:08:59,220 --> 00:09:03,720
dashboard at least that can be added in

00:09:01,770 --> 00:09:05,820
the dashboard multiple dashboards can be

00:09:03,720 --> 00:09:06,180
created and these can also be shared

00:09:05,820 --> 00:09:09,780
without

00:09:06,180 --> 00:09:11,850
users this is a screenshot of the new

00:09:09,780 --> 00:09:13,080
dashboard which doesn't tell you that

00:09:11,850 --> 00:09:19,140
much but you'll have just have to

00:09:13,080 --> 00:09:20,790
believe me it's much better another user

00:09:19,140 --> 00:09:22,740
interface related improvements epics has

00:09:20,790 --> 00:09:25,560
something called Network Maps these are

00:09:22,740 --> 00:09:27,390
areas or images where you can put on

00:09:25,560 --> 00:09:29,520
elements and show real-time data like

00:09:27,390 --> 00:09:30,900
current load network traffic links

00:09:29,520 --> 00:09:33,540
between the elements can change color

00:09:30,900 --> 00:09:36,480
depending on problem state these

00:09:33,540 --> 00:09:38,730
previously were rendered PNG images so

00:09:36,480 --> 00:09:41,010
it's not a bitmap so they're not like

00:09:38,730 --> 00:09:43,830
terribly huge but on slow links that

00:09:41,010 --> 00:09:46,590
maybe wasn't always a very fast

00:09:43,830 --> 00:09:49,140
operation to view a map so the network

00:09:46,590 --> 00:09:53,220
maps have been improved now it's browser

00:09:49,140 --> 00:09:57,090
rendered SVG based on JSON data sent

00:09:53,220 --> 00:09:59,610
from the actual server and the editing

00:09:57,090 --> 00:10:01,560
also is much easier map editing has

00:09:59,610 --> 00:10:04,080
pretty much improved in every release of

00:10:01,560 --> 00:10:07,020
zabbix a little bit it started being

00:10:04,080 --> 00:10:11,490
rather inflexible now you can do things

00:10:07,020 --> 00:10:13,830
like copy-paste the elements you can add

00:10:11,490 --> 00:10:15,210
custom shapes previously you had to

00:10:13,830 --> 00:10:16,800
upload them as images now you can just

00:10:15,210 --> 00:10:19,410
draw a rectangle and put a current load

00:10:16,800 --> 00:10:21,840
in it or have current timing ellipses or

00:10:19,410 --> 00:10:23,430
any other fancy thing you would like to

00:10:21,840 --> 00:10:25,650
do there

00:10:23,430 --> 00:10:27,900
another map relate the new feature is

00:10:25,650 --> 00:10:33,000
something called map navigation tree or

00:10:27,900 --> 00:10:37,110
map tree you can put maps in for the

00:10:33,000 --> 00:10:39,480
caracal structure and then the data will

00:10:37,110 --> 00:10:41,940
be aggregated upstream so you will see

00:10:39,480 --> 00:10:44,130
the total number of problems of all the

00:10:41,940 --> 00:10:47,670
downstream Maps and there's a very easy

00:10:44,130 --> 00:10:51,510
navigation structure a tree available as

00:10:47,670 --> 00:10:54,000
well this was doable before but it was

00:10:51,510 --> 00:10:56,880
in rather hackish ways so now this is

00:10:54,000 --> 00:10:58,770
built in and very easy to do just add a

00:10:56,880 --> 00:11:00,390
couple of elements and and it just works

00:10:58,770 --> 00:11:02,490
that's it

00:11:00,390 --> 00:11:04,680
value pre-processing so badly

00:11:02,490 --> 00:11:07,140
pre-processing at least in in zabbix is

00:11:04,680 --> 00:11:09,300
the thing where a value that's received

00:11:07,140 --> 00:11:11,720
is manipulated in some way before

00:11:09,300 --> 00:11:15,000
storing this value in the database and

00:11:11,720 --> 00:11:17,970
in previous versions of zabbix there was

00:11:15,000 --> 00:11:19,270
already Delta calculation either basic

00:11:17,970 --> 00:11:21,430
Delta or

00:11:19,270 --> 00:11:23,610
change per second commonly used with

00:11:21,430 --> 00:11:26,320
Metro traffic and other things like that

00:11:23,610 --> 00:11:28,720
there was a custom multiplier so if you

00:11:26,320 --> 00:11:30,280
got data in bytes you needed bet you

00:11:28,720 --> 00:11:32,470
multiplied by eight or if you got

00:11:30,280 --> 00:11:34,960
something in kilobytes or megabytes from

00:11:32,470 --> 00:11:37,960
surgery you multiply that to get bytes

00:11:34,960 --> 00:11:39,790
as the base unit in the database and

00:11:37,960 --> 00:11:41,860
zabbix we also convert automatically hex

00:11:39,790 --> 00:11:44,800
octal values and also boolean things

00:11:41,860 --> 00:11:48,190
like true/false TF into number eight

00:11:44,800 --> 00:11:51,220
values into decimal values this has been

00:11:48,190 --> 00:11:52,870
massively extended and I would call it

00:11:51,220 --> 00:11:56,410
massively because now there are three

00:11:52,870 --> 00:11:58,180
new huge improvements first zabbix now

00:11:56,410 --> 00:12:01,590
can do regular expression parsing as

00:11:58,180 --> 00:12:04,540
pre-processing also XPath and JSON path

00:12:01,590 --> 00:12:07,270
so regular expressions as pre-processing

00:12:04,540 --> 00:12:09,070
this was available for log monitoring so

00:12:07,270 --> 00:12:11,770
we could extract the value from a log

00:12:09,070 --> 00:12:13,990
entry and put that in an item this has

00:12:11,770 --> 00:12:17,020
been now expanded to cover every item

00:12:13,990 --> 00:12:18,370
type that zabbix supports and the

00:12:17,020 --> 00:12:20,110
possibilities could start with something

00:12:18,370 --> 00:12:22,330
simple if you have a bad SNMP

00:12:20,110 --> 00:12:24,130
implementation and most of this nmp

00:12:22,330 --> 00:12:27,820
implementations somehow tend to be bad

00:12:24,130 --> 00:12:29,650
one way or another unfortunately then if

00:12:27,820 --> 00:12:32,650
this implementation has temperature

00:12:29,650 --> 00:12:34,210
space degree sign uppercase C because

00:12:32,650 --> 00:12:37,060
they just don't know how to put out a

00:12:34,210 --> 00:12:39,310
roll number previously you had to do

00:12:37,060 --> 00:12:41,290
some scripting to get the actual number

00:12:39,310 --> 00:12:45,430
in the zabbix database now this can be

00:12:41,290 --> 00:12:47,530
done natively and data from some basic

00:12:45,430 --> 00:12:49,000
Status pages like Apache or AG proxy it

00:12:47,530 --> 00:12:51,070
can also be extracted without any

00:12:49,000 --> 00:12:53,200
additional scripting that you just tell

00:12:51,070 --> 00:12:56,530
zabbix look for this red X take this and

00:12:53,200 --> 00:13:00,700
that's the value as a good example if we

00:12:56,530 --> 00:13:02,830
have this temperature with the unit

00:13:00,700 --> 00:13:04,450
attached and it's as a string and we

00:13:02,830 --> 00:13:06,160
want to have the number we have a

00:13:04,450 --> 00:13:08,280
regular expression we have capture group

00:13:06,160 --> 00:13:10,840
looking for numbers a second parameter

00:13:08,280 --> 00:13:13,270
tells just use the result of that

00:13:10,840 --> 00:13:15,910
capture group and in D database we have

00:13:13,270 --> 00:13:20,860
just the role temperature value so no

00:13:15,910 --> 00:13:25,750
scripting all built-in awesome XPath and

00:13:20,860 --> 00:13:28,750
JSON path this is very useful for more

00:13:25,750 --> 00:13:32,920
advanced satis pages or maybe some api

00:13:28,750 --> 00:13:35,260
output and so on that alone is

00:13:32,920 --> 00:13:38,260
very very useful but if you have a

00:13:35,260 --> 00:13:40,839
bigger Status page and if you use this

00:13:38,260 --> 00:13:43,329
extraction with either exposition path

00:13:40,839 --> 00:13:45,670
or ax then that would mean that every

00:13:43,329 --> 00:13:47,680
time you need one value from that bigger

00:13:45,670 --> 00:13:50,320
status page zabbix goes there and just

00:13:47,680 --> 00:13:54,820
reads that page or file or any other

00:13:50,320 --> 00:13:57,040
source this is not needed anymore

00:13:54,820 --> 00:13:58,839
because along with these pre-processing

00:13:57,040 --> 00:14:02,410
options a box also introduced something

00:13:58,839 --> 00:14:04,660
called master items a master item gets a

00:14:02,410 --> 00:14:07,709
value which is a total value for example

00:14:04,660 --> 00:14:10,600
the whole sales page which is then

00:14:07,709 --> 00:14:13,269
referenced by things called dependent

00:14:10,600 --> 00:14:15,760
items and these as any other item can

00:14:13,269 --> 00:14:17,470
use pre-processing so in this example we

00:14:15,760 --> 00:14:19,810
have a Jason which is collected in the

00:14:17,470 --> 00:14:22,510
master item then we have two dependent

00:14:19,810 --> 00:14:24,639
items which using Jason path are

00:14:22,510 --> 00:14:26,949
extracting the actual values from this

00:14:24,639 --> 00:14:30,430
Jason and these are values then are

00:14:26,949 --> 00:14:32,139
stored in the database so not only there

00:14:30,430 --> 00:14:34,180
is no scripting needed anymore the

00:14:32,139 --> 00:14:38,860
Status page is actually processed or

00:14:34,180 --> 00:14:40,120
requested only once in this example the

00:14:38,860 --> 00:14:41,529
great thing is also that this is

00:14:40,120 --> 00:14:43,300
extremely flexible because the

00:14:41,529 --> 00:14:45,370
pre-processing allows you to extract

00:14:43,300 --> 00:14:47,529
data in so many ways there is no

00:14:45,370 --> 00:14:49,690
standard format that you would have to

00:14:47,529 --> 00:14:51,760
send the data like special zabbix format

00:14:49,690 --> 00:14:53,170
into this master item any format that's

00:14:51,760 --> 00:14:56,019
possible with these pre-processing

00:14:53,170 --> 00:14:57,820
options that's usable and also the

00:14:56,019 --> 00:14:59,350
pre-processing options can be changed so

00:14:57,820 --> 00:15:01,480
you could extract something with Jason

00:14:59,350 --> 00:15:05,199
path and multiply that and do some other

00:15:01,480 --> 00:15:07,420
things on top of that so the

00:15:05,199 --> 00:15:10,240
pre-processing is extracting values and

00:15:07,420 --> 00:15:13,240
throwing them in database but another

00:15:10,240 --> 00:15:17,079
new feature allows to extract value is

00:15:13,240 --> 00:15:21,040
only for displaying purposes and so

00:15:17,079 --> 00:15:23,920
let's say here we have a laser so here

00:15:21,040 --> 00:15:26,769
we have an example of a logline which

00:15:23,920 --> 00:15:28,990
then if this is stored in zabbix we

00:15:26,769 --> 00:15:32,290
might want to only see the actual error

00:15:28,990 --> 00:15:35,290
message so if we have in wrapped in

00:15:32,290 --> 00:15:37,630
curly braces zabbix syntax for variables

00:15:35,290 --> 00:15:39,519
or macros something called item dot

00:15:37,630 --> 00:15:42,519
value which just grabs the latest value

00:15:39,519 --> 00:15:45,130
from the item then the new function reg

00:15:42,519 --> 00:15:46,870
sub and as parameters regular expression

00:15:45,130 --> 00:15:48,850
with to capture groups

00:15:46,870 --> 00:15:53,430
skipping the detail on what the capture

00:15:48,850 --> 00:15:55,510
group do but as the end result we have

00:15:53,430 --> 00:15:57,700
just the error message but only

00:15:55,510 --> 00:16:01,150
displayed in the database we still have

00:15:57,700 --> 00:16:07,690
the full log line for actually that that

00:16:01,150 --> 00:16:09,760
came in from the file another change in

00:16:07,690 --> 00:16:12,070
statics is that previously the polling

00:16:09,760 --> 00:16:14,050
frequency was specified as a number and

00:16:12,070 --> 00:16:16,060
that number was in seconds and that's

00:16:14,050 --> 00:16:18,100
you can only put numbers in there this

00:16:16,060 --> 00:16:20,800
has been extended so that time suffix

00:16:18,100 --> 00:16:24,220
like MH for minutes hours and so on are

00:16:20,800 --> 00:16:27,520
supported which alone seems like a very

00:16:24,220 --> 00:16:30,280
tiny change but first that was a rather

00:16:27,520 --> 00:16:33,790
big change in how zabbix internally

00:16:30,280 --> 00:16:37,000
structures the these frequencies how it

00:16:33,790 --> 00:16:39,430
caches them and so on and even bigger

00:16:37,000 --> 00:16:42,940
thing is that this also allows the use

00:16:39,430 --> 00:16:47,470
of variables or macros in the in the

00:16:42,940 --> 00:16:48,940
update frequency and zabbix has

00:16:47,470 --> 00:16:52,090
something called low-level discovery or

00:16:48,940 --> 00:16:54,460
lld which allowed to discover sub

00:16:52,090 --> 00:16:56,560
entities of hosts of servers for example

00:16:54,460 --> 00:16:58,510
zabbix comes with built and discovery

00:16:56,560 --> 00:17:01,240
for network interfaces for file systems

00:16:58,510 --> 00:17:03,220
and a few others and these discoveries

00:17:01,240 --> 00:17:07,150
if they would be extended they could

00:17:03,220 --> 00:17:08,470
give you the polling frequency for each

00:17:07,150 --> 00:17:10,449
of the individual items so you could

00:17:08,470 --> 00:17:12,070
pull one file system for example more

00:17:10,449 --> 00:17:13,600
frequently than the other and that would

00:17:12,070 --> 00:17:16,829
be completely automatic there's no

00:17:13,600 --> 00:17:20,290
customization needed any more even more

00:17:16,829 --> 00:17:22,089
it also supports thing called that

00:17:20,290 --> 00:17:25,570
zabbix calls user macros which are like

00:17:22,089 --> 00:17:27,610
user definable variables and this allows

00:17:25,570 --> 00:17:29,260
as an example there was one use case

00:17:27,610 --> 00:17:31,030
that was a bit of a problem over the

00:17:29,260 --> 00:17:34,270
years where let's say you have one

00:17:31,030 --> 00:17:36,250
template which is aggregating the checks

00:17:34,270 --> 00:17:38,350
and all the things that should be used

00:17:36,250 --> 00:17:41,820
and you apply that to many hosts server

00:17:38,350 --> 00:17:44,320
switches and so on and you could

00:17:41,820 --> 00:17:46,300
customize the alerting thresholds for

00:17:44,320 --> 00:17:49,120
example the time periods that should be

00:17:46,300 --> 00:17:51,400
alerted on but you could never customize

00:17:49,120 --> 00:17:53,230
at least in a reasonably maintainable

00:17:51,400 --> 00:17:54,880
way the update frequency the polling

00:17:53,230 --> 00:17:58,030
frequency you could override it manually

00:17:54,880 --> 00:17:59,770
but that was hard to manage afterwards

00:17:58,030 --> 00:18:01,840
so what can be done now this

00:17:59,770 --> 00:18:04,090
same template can be used on let's say

00:18:01,840 --> 00:18:06,850
core router on the edge router and on

00:18:04,090 --> 00:18:08,440
let's say some networked printer and all

00:18:06,850 --> 00:18:10,540
of these can have a variable that

00:18:08,440 --> 00:18:11,710
defines the polling frequency very

00:18:10,540 --> 00:18:13,420
easily the same template no

00:18:11,710 --> 00:18:15,640
customization or host level just the

00:18:13,420 --> 00:18:18,670
variable and and the polling frequency

00:18:15,640 --> 00:18:21,960
changes so the benefit is that you would

00:18:18,670 --> 00:18:25,690
detect that the core router is out first

00:18:21,960 --> 00:18:27,370
and you wouldn't get some first alert

00:18:25,690 --> 00:18:31,140
about the printer being in a unavailable

00:18:27,370 --> 00:18:31,140
or the edge router being unavailable

00:18:31,830 --> 00:18:36,550
I've already used terms like host item

00:18:34,690 --> 00:18:38,550
and so on and maybe a quick recap of

00:18:36,550 --> 00:18:40,690
what these are in Zadok so host is

00:18:38,550 --> 00:18:43,750
usually a network attached device like

00:18:40,690 --> 00:18:46,030
server switch and so on but a host alone

00:18:43,750 --> 00:18:49,120
does nothing to collect data zabbix has

00:18:46,030 --> 00:18:50,800
items items are attached to hosts think

00:18:49,120 --> 00:18:52,710
of them as metrics so CPU load that's

00:18:50,800 --> 00:18:55,690
one item free memory that's another item

00:18:52,710 --> 00:18:58,150
then a separate thing is a trigger which

00:18:55,690 --> 00:19:00,340
is a problem expression dish defines

00:18:58,150 --> 00:19:02,620
what a problem is why separate because

00:19:00,340 --> 00:19:04,240
the trigger can reference one item it

00:19:02,620 --> 00:19:05,920
can reference multiple items on the same

00:19:04,240 --> 00:19:10,150
host it can reference multiple items on

00:19:05,920 --> 00:19:13,600
different hosts it's really really

00:19:10,150 --> 00:19:16,750
flexible and the what triggers do they

00:19:13,600 --> 00:19:18,490
define what the problem is and then when

00:19:16,750 --> 00:19:19,600
actual thing happens an event is

00:19:18,490 --> 00:19:22,030
generated which is a timestamp

00:19:19,600 --> 00:19:26,560
occurrence of that a Civic problem

00:19:22,030 --> 00:19:29,050
condition evaluating to true and that

00:19:26,560 --> 00:19:32,440
leads us into another new feature which

00:19:29,050 --> 00:19:35,830
is called event tags so these are

00:19:32,440 --> 00:19:39,370
defined on triggers they have name and

00:19:35,830 --> 00:19:41,380
value and then they propagate today all

00:19:39,370 --> 00:19:47,350
the downstream events that are generated

00:19:41,380 --> 00:19:49,480
by this trigger one example where this

00:19:47,350 --> 00:19:51,520
is useful let's say you have a log file

00:19:49,480 --> 00:19:53,410
which has entries about multiple

00:19:51,520 --> 00:19:56,170
applications or sub applications and

00:19:53,410 --> 00:19:57,610
they are started and stopped and you

00:19:56,170 --> 00:19:59,800
would like to alert about each of the

00:19:57,610 --> 00:20:02,350
individual applications separately one

00:19:59,800 --> 00:20:03,850
option is to create separate triggers or

00:20:02,350 --> 00:20:05,470
these problem definitions that look for

00:20:03,850 --> 00:20:09,610
specific application started specific

00:20:05,470 --> 00:20:11,500
applications stopped these become hard

00:20:09,610 --> 00:20:13,510
to manage and especially if you have

00:20:11,500 --> 00:20:15,330
services that could be more dynamic

00:20:13,510 --> 00:20:18,610
and developers might be adding new ones

00:20:15,330 --> 00:20:20,500
frequently that that approach is not

00:20:18,610 --> 00:20:22,420
easy to manage having a single trigger

00:20:20,500 --> 00:20:24,160
that just checks for stopped and start

00:20:22,420 --> 00:20:26,230
doesn't work really really well because

00:20:24,160 --> 00:20:28,450
if you have one application that stopped

00:20:26,230 --> 00:20:29,830
it goes into problem state the second

00:20:28,450 --> 00:20:32,830
application getting stopped nothing

00:20:29,830 --> 00:20:34,810
happens and similarly when it's

00:20:32,830 --> 00:20:36,730
recovering any application recovering

00:20:34,810 --> 00:20:40,120
would result in the problem resolving

00:20:36,730 --> 00:20:46,440
and any application resolving the

00:20:40,120 --> 00:20:46,440
problem afterwards would get ignored and

00:20:47,070 --> 00:20:53,170
this is now possible to correlate with

00:20:50,800 --> 00:20:55,270
the tags with a single item single

00:20:53,170 --> 00:20:57,370
trigger so what happens is that we

00:20:55,270 --> 00:21:00,550
assign to this first problem when

00:20:57,370 --> 00:21:02,950
something is stopped we assign a tag of

00:21:00,550 --> 00:21:04,450
good name of application so we identify

00:21:02,950 --> 00:21:08,380
what that tag is and we had the

00:21:04,450 --> 00:21:10,540
application name in the tag then if

00:21:08,380 --> 00:21:12,370
another application gets stopped it gets

00:21:10,540 --> 00:21:14,110
another tag assigned as this is a

00:21:12,370 --> 00:21:16,300
different tag value that's a separate

00:21:14,110 --> 00:21:19,690
problem now it's not conflated with the

00:21:16,300 --> 00:21:22,240
previous one then when one of them is

00:21:19,690 --> 00:21:23,740
resolved the same tag is applied we

00:21:22,240 --> 00:21:25,830
extract the application name we know

00:21:23,740 --> 00:21:27,940
which application got started back up

00:21:25,830 --> 00:21:30,700
zabbix goes back and looks which

00:21:27,940 --> 00:21:33,370
problems had this tag name combination

00:21:30,700 --> 00:21:35,920
and resolves those problems only and

00:21:33,370 --> 00:21:37,540
similarly when the other application

00:21:35,920 --> 00:21:40,690
gets resolved in this specific problem

00:21:37,540 --> 00:21:42,250
is resolved there this can go even more

00:21:40,690 --> 00:21:44,520
advanced because it's not related to the

00:21:42,250 --> 00:21:46,930
it could be not related to this same

00:21:44,520 --> 00:21:50,050
single trigger the same single data

00:21:46,930 --> 00:21:52,660
source you can have any prob any data

00:21:50,050 --> 00:21:55,120
resolved any other problem depending on

00:21:52,660 --> 00:21:58,330
how how you decide to assign these tags

00:21:55,120 --> 00:22:00,160
how to you decide to extract them if

00:21:58,330 --> 00:22:01,960
this sounds a bit confusing that's

00:22:00,160 --> 00:22:04,960
rather normal because this feature is

00:22:01,960 --> 00:22:09,490
extremely powerful but it's maybe a bit

00:22:04,960 --> 00:22:11,680
not that's trivial in the zabbix manual

00:22:09,490 --> 00:22:13,660
page about this feature there's a big

00:22:11,680 --> 00:22:15,520
colored warning saying that hey this is

00:22:13,660 --> 00:22:18,100
kind of be careful with what you do with

00:22:15,520 --> 00:22:19,690
this actually that page has two warnings

00:22:18,100 --> 00:22:23,950
about this feature like be careful with

00:22:19,690 --> 00:22:25,380
this feature we looked at the we briefly

00:22:23,950 --> 00:22:26,710
talked about the dependencies before

00:22:25,380 --> 00:22:28,750
where

00:22:26,710 --> 00:22:30,070
the edge router would depend on the core

00:22:28,750 --> 00:22:31,870
router so that those are trigger

00:22:30,070 --> 00:22:33,610
dependencies these tags it's like

00:22:31,870 --> 00:22:35,559
dependencies dependencies on steroids

00:22:33,610 --> 00:22:39,250
you can have lots of things affect other

00:22:35,559 --> 00:22:40,960
things inside a modern environment two

00:22:39,250 --> 00:22:42,909
additional improvements relate to the

00:22:40,960 --> 00:22:46,000
problem handling and acknowledging and

00:22:42,909 --> 00:22:47,770
these have been requested by some users

00:22:46,000 --> 00:22:50,140
for quite some time and they have

00:22:47,770 --> 00:22:53,679
finally arrived problems can now be

00:22:50,140 --> 00:22:54,820
manually resolved by the operator so

00:22:53,679 --> 00:22:56,679
let's say if you have some data source

00:22:54,820 --> 00:22:59,140
that only sends problem values but never

00:22:56,679 --> 00:23:01,210
recovery values you can have your

00:22:59,140 --> 00:23:02,980
network operations center people who

00:23:01,210 --> 00:23:06,309
just resolve them manually once they

00:23:02,980 --> 00:23:08,110
have fixed the problem if the problem if

00:23:06,309 --> 00:23:09,760
new values would come in that would show

00:23:08,110 --> 00:23:11,409
that there's still a problem a new

00:23:09,760 --> 00:23:14,320
problem would be generated so you cannot

00:23:11,409 --> 00:23:16,240
just silence things this way but for

00:23:14,320 --> 00:23:18,190
things let's say like log files or SNMP

00:23:16,240 --> 00:23:21,039
traps this would work pretty wonderfully

00:23:18,190 --> 00:23:23,169
and another thing that also users were

00:23:21,039 --> 00:23:24,970
missing in zabbix was built-in

00:23:23,169 --> 00:23:27,909
acknowledge building alerting upon

00:23:24,970 --> 00:23:30,549
acknowledgment it was doable before with

00:23:27,909 --> 00:23:32,590
some scripting but built in very easy

00:23:30,549 --> 00:23:34,750
now you can send a message when somebody

00:23:32,590 --> 00:23:37,809
acknowledges a problem or you could even

00:23:34,750 --> 00:23:41,140
run a command and do something else

00:23:37,809 --> 00:23:46,179
gem X who here is monitoring Java

00:23:41,140 --> 00:23:48,669
applications like one third at least who

00:23:46,179 --> 00:23:51,159
is using JMX demand for those

00:23:48,669 --> 00:23:54,779
applications not even all of those who

00:23:51,159 --> 00:23:58,210
entered the Java applications before so

00:23:54,779 --> 00:24:00,789
JMX is built-in thing in Java available

00:23:58,210 --> 00:24:03,130
for nearly at least I haven't seen a

00:24:00,789 --> 00:24:07,679
java application that wouldn't have some

00:24:03,130 --> 00:24:11,020
beans possible to be made available and

00:24:07,679 --> 00:24:14,460
zabbix has a built-in jmx support using

00:24:11,020 --> 00:24:16,450
a separate component called Java EE the

00:24:14,460 --> 00:24:18,100
limitation that was there was that only

00:24:16,450 --> 00:24:20,140
the RMI endpoint was supported

00:24:18,100 --> 00:24:23,169
unfortunately JBoss a few versions ago

00:24:20,140 --> 00:24:25,330
already moved to remoting JMX WebLogic

00:24:23,169 --> 00:24:27,100
uses different end point so you had to

00:24:25,330 --> 00:24:30,250
patch the java gateway to actually be

00:24:27,100 --> 00:24:32,320
able month or anything besides RMI this

00:24:30,250 --> 00:24:34,720
has been now improved and now it's fully

00:24:32,320 --> 00:24:36,809
customizable our my endpoint sorry not

00:24:34,720 --> 00:24:39,730
just our mi but the jmx endpoint so

00:24:36,809 --> 00:24:40,390
things like web logic JBoss monitoring

00:24:39,730 --> 00:24:42,750
there's no path

00:24:40,390 --> 00:24:44,980
needed out-of-the-box things should work

00:24:42,750 --> 00:24:46,780
another the previously mentioned

00:24:44,980 --> 00:24:49,420
low-level discovery has been extended to

00:24:46,780 --> 00:24:50,710
cover jmx so it's now possible to

00:24:49,420 --> 00:24:54,130
automatically discover beings their

00:24:50,710 --> 00:24:55,690
properties in Montour all that for

00:24:54,130 --> 00:24:57,790
people monitoring job applications and

00:24:55,690 --> 00:24:59,880
in beginner prices there's usually at

00:24:57,790 --> 00:25:03,330
least a few if not all of them in Java

00:24:59,880 --> 00:25:06,370
both are extremely useful improvements

00:25:03,330 --> 00:25:07,870
then talking about remote environments

00:25:06,370 --> 00:25:08,860
let's say we have a zabbix server on the

00:25:07,870 --> 00:25:10,660
Left we have a bunch of devices

00:25:08,860 --> 00:25:12,850
monitored if that's all in the same

00:25:10,660 --> 00:25:15,070
network all is good if it's in remote

00:25:12,850 --> 00:25:18,970
network there's usually some problem in

00:25:15,070 --> 00:25:22,060
between there's some firewall some

00:25:18,970 --> 00:25:23,830
network topology problems the zabbix

00:25:22,060 --> 00:25:25,990
solution for that is the sub X proxy

00:25:23,830 --> 00:25:28,210
available for a very long time very

00:25:25,990 --> 00:25:30,430
awesome component very robust simple to

00:25:28,210 --> 00:25:32,440
setup think of it as a remote data

00:25:30,430 --> 00:25:34,890
collector it can do everything zabbix

00:25:32,440 --> 00:25:37,980
can it can work with zabbix agent SNMP

00:25:34,890 --> 00:25:40,960
JMX through the java gateway everything

00:25:37,980 --> 00:25:42,820
it connects with the zabbix server using

00:25:40,960 --> 00:25:44,110
a single TCP port you decide which

00:25:42,820 --> 00:25:45,790
direction the connection goes whether

00:25:44,110 --> 00:25:47,650
from the server to proxy or proxy the

00:25:45,790 --> 00:25:52,480
server very easy to configure firewalls

00:25:47,650 --> 00:25:53,980
a very great solution another feature

00:25:52,480 --> 00:25:58,540
that zabbix has is called remote

00:25:53,980 --> 00:26:01,180
commands and when an agent on the right

00:25:58,540 --> 00:26:03,580
hand side sends some data to the server

00:26:01,180 --> 00:26:05,950
zabbix server can decide to tell the

00:26:03,580 --> 00:26:07,420
agent to run some command it's not just

00:26:05,950 --> 00:26:10,900
the agent commands but let's take this

00:26:07,420 --> 00:26:13,480
as an example and that works pretty well

00:26:10,900 --> 00:26:15,310
too for some ad-hoc resolving of

00:26:13,480 --> 00:26:18,840
problems in software where you don't get

00:26:15,310 --> 00:26:24,070
the actual software fixed right away and

00:26:18,840 --> 00:26:26,170
if you use proxy this slightly breaks

00:26:24,070 --> 00:26:28,780
because what happens is that in previous

00:26:26,170 --> 00:26:30,790
versions the data comes from the agent

00:26:28,780 --> 00:26:32,980
to the proxy then to the server well it

00:26:30,790 --> 00:26:34,990
doesn't really go over the firewall but

00:26:32,980 --> 00:26:36,850
just to show the data flow right it

00:26:34,990 --> 00:26:38,710
doesn't still not let you circumvent

00:26:36,850 --> 00:26:40,660
firewalls let's be clear on that

00:26:38,710 --> 00:26:42,340
so what happened with the remote

00:26:40,660 --> 00:26:44,200
commands if the data indicates there's a

00:26:42,340 --> 00:26:46,360
problem and server goes oh I should tell

00:26:44,200 --> 00:26:48,430
the agent to fix something it would try

00:26:46,360 --> 00:26:51,250
to connect to the agent directly and of

00:26:48,430 --> 00:26:52,900
course in remote environments if there's

00:26:51,250 --> 00:26:53,740
actually a firewall in place that will

00:26:52,900 --> 00:26:57,610
do this it will blow

00:26:53,740 --> 00:26:59,679
that operation of the remote command and

00:26:57,610 --> 00:27:01,090
that has been improved now that when the

00:26:59,679 --> 00:27:03,100
data comes in that shows that there's a

00:27:01,090 --> 00:27:05,500
problem zabbix server tells the zabbix

00:27:03,100 --> 00:27:10,510
proxy you tell the zabbix agent to do

00:27:05,500 --> 00:27:12,550
that thing this was one of the top voted

00:27:10,510 --> 00:27:14,440
feature requests in zabbix so that's

00:27:12,550 --> 00:27:18,070
that's I'm really glad to see that one

00:27:14,440 --> 00:27:20,050
being implemented another big change is

00:27:18,070 --> 00:27:22,720
nested hose group support previously

00:27:20,050 --> 00:27:24,160
host grouping in zabbix was flat there

00:27:22,720 --> 00:27:28,059
was no nesting support now it's

00:27:24,160 --> 00:27:29,650
supported using this / separated syntax

00:27:28,059 --> 00:27:32,530
so you could do it geographically like

00:27:29,650 --> 00:27:35,679
europe latvia riga or functionally like

00:27:32,530 --> 00:27:36,910
in this case production DB my skill when

00:27:35,679 --> 00:27:39,040
this feature appeared first it was

00:27:36,910 --> 00:27:40,540
pretty rough it didn't support most of

00:27:39,040 --> 00:27:42,820
the things people wanted to use it for

00:27:40,540 --> 00:27:44,620
but luckily this got expanded in

00:27:42,820 --> 00:27:46,210
subsequent releases and now it's

00:27:44,620 --> 00:27:50,200
supporting all of these things I will

00:27:46,210 --> 00:27:55,110
not go over them in detail but it's now

00:27:50,200 --> 00:27:55,110
a majorly useable functionality

00:27:55,920 --> 00:28:01,030
another feature improvement is regard is

00:27:59,140 --> 00:28:02,650
it's related to the log file monitoring

00:28:01,030 --> 00:28:05,410
and zabbix support slot for the

00:28:02,650 --> 00:28:08,350
monitoring using the native agent there

00:28:05,410 --> 00:28:11,650
are two older item keys log log are key

00:28:08,350 --> 00:28:14,290
for ticket log files and they now have

00:28:11,650 --> 00:28:17,050
two new friends log count and log are

00:28:14,290 --> 00:28:19,360
key count instead of sending all of the

00:28:17,050 --> 00:28:22,059
lines in the log to zabbix they can

00:28:19,360 --> 00:28:25,000
count the lines that are matching the

00:28:22,059 --> 00:28:27,370
pattern or any lines or all of them and

00:28:25,000 --> 00:28:29,530
then only send the number to the server

00:28:27,370 --> 00:28:34,120
so that happens on agent side this thus

00:28:29,530 --> 00:28:36,670
calculation of the log lines given that

00:28:34,120 --> 00:28:39,400
zabbix does not really aim to be a log

00:28:36,670 --> 00:28:41,230
collection thing this is really great

00:28:39,400 --> 00:28:43,059
because you might have some cases where

00:28:41,230 --> 00:28:44,770
you don't really care you know what the

00:28:43,059 --> 00:28:47,620
error message is you don't need to see

00:28:44,770 --> 00:28:49,450
that error message like 20,000 times in

00:28:47,620 --> 00:28:51,429
your database in your log files you just

00:28:49,450 --> 00:28:54,420
do the count and just send one number

00:28:51,429 --> 00:28:56,770
per definable time period to the server

00:28:54,420 --> 00:28:58,390
this people are doing this previously

00:28:56,770 --> 00:29:02,470
with some scripting now it's built in

00:28:58,390 --> 00:29:04,660
much easier for me personally I've

00:29:02,470 --> 00:29:07,120
skipped actually monitoring the count in

00:29:04,660 --> 00:29:10,930
some cases and went through some log

00:29:07,120 --> 00:29:15,130
management tool these two will make such

00:29:10,930 --> 00:29:17,350
cases much simpler to monitor VMware

00:29:15,130 --> 00:29:20,440
monitoring who here is using or whose

00:29:17,350 --> 00:29:24,280
company is using VMware absolute

00:29:20,440 --> 00:29:26,950
majority and being Vermont's ring has

00:29:24,280 --> 00:29:30,370
been built into zabbix for quite a long

00:29:26,950 --> 00:29:32,710
time now it got improved with a few new

00:29:30,370 --> 00:29:36,400
items mostly regarding datacenter names

00:29:32,710 --> 00:29:38,800
some sensor states and data store items

00:29:36,400 --> 00:29:41,110
and there are also performance

00:29:38,800 --> 00:29:44,860
improvements so for reimbursements less

00:29:41,110 --> 00:29:48,429
these are very very useful again and now

00:29:44,860 --> 00:29:50,910
I'll go into maybe more lower level and

00:29:48,429 --> 00:29:53,380
smaller improvements I'll concentrate

00:29:50,910 --> 00:29:55,179
not just on these big features but also

00:29:53,380 --> 00:29:57,670
on things that make life easier for

00:29:55,179 --> 00:30:00,790
existing users and also for new years of

00:29:57,670 --> 00:30:03,760
course one change is that in zabbix

00:30:00,790 --> 00:30:05,260
daemons previously only POSIX extended

00:30:03,760 --> 00:30:08,230
 expressions were supported now

00:30:05,260 --> 00:30:09,970
that big steamin support piece pcre so

00:30:08,230 --> 00:30:11,700
for all of your records needs look

00:30:09,970 --> 00:30:16,090
Ahead's looking behind other things

00:30:11,700 --> 00:30:18,250
that's all supported finally zabbix also

00:30:16,090 --> 00:30:20,410
allow us to export configuration data

00:30:18,250 --> 00:30:23,950
XML and import it back so things like

00:30:20,410 --> 00:30:25,990
hosts templates these can be exported to

00:30:23,950 --> 00:30:28,240
excel now that also includes the web

00:30:25,990 --> 00:30:30,040
scenarios so it'sit's more everything

00:30:28,240 --> 00:30:32,500
that hosts contains previously webson

00:30:30,040 --> 00:30:35,620
Aereo's were excluded from this feature

00:30:32,500 --> 00:30:38,800
and one thing that is very minor but

00:30:35,620 --> 00:30:39,790
I've been personally very wanting to use

00:30:38,800 --> 00:30:42,730
something like that

00:30:39,790 --> 00:30:45,370
zabbix has a function count which allows

00:30:42,730 --> 00:30:47,890
you in the incoming values to count how

00:30:45,370 --> 00:30:50,080
many are either matching a string or

00:30:47,890 --> 00:30:52,630
matching a specific number or bigger

00:30:50,080 --> 00:30:55,000
than or less than a number and this has

00:30:52,630 --> 00:30:58,150
been extended and now it supports regex

00:30:55,000 --> 00:30:59,679
so that's something I really wanted to

00:30:58,150 --> 00:31:04,660
use quite a few times and that's

00:30:59,679 --> 00:31:08,020
available another area that I will raise

00:31:04,660 --> 00:31:10,179
that that maybe most people wouldn't and

00:31:08,020 --> 00:31:12,640
consider a big improvement but I

00:31:10,179 --> 00:31:16,960
consider things that make a product

00:31:12,640 --> 00:31:19,179
easier to use more stable and easier to

00:31:16,960 --> 00:31:20,830
debug problems to be very important in

00:31:19,179 --> 00:31:23,679
many cases even more important than

00:31:20,830 --> 00:31:25,090
the actual feature editions because if a

00:31:23,679 --> 00:31:28,480
project has lots of features but it's

00:31:25,090 --> 00:31:32,500
extremely to debug that's not of a big

00:31:28,480 --> 00:31:36,159
use so this show that having such an

00:31:32,500 --> 00:31:38,380
improvement such improvements shows that

00:31:36,159 --> 00:31:40,179
the developers are investing their time

00:31:38,380 --> 00:31:44,769
and non shiny things and things that

00:31:40,179 --> 00:31:46,779
matter for users and especially for

00:31:44,769 --> 00:31:48,220
things that are not happening every day

00:31:46,779 --> 00:31:49,929
when you have to debug something if

00:31:48,220 --> 00:31:53,260
there are messages are useless

00:31:49,929 --> 00:31:57,370
that's not very not the best case to be

00:31:53,260 --> 00:31:58,720
in so one miner saying previously you

00:31:57,370 --> 00:32:00,519
could delete the user that was used in

00:31:58,720 --> 00:32:02,110
alerting leaving some inconsistent

00:32:00,519 --> 00:32:04,090
configuration in place there's some

00:32:02,110 --> 00:32:07,600
validation in that area and some other

00:32:04,090 --> 00:32:09,429
validation in place there is more

00:32:07,600 --> 00:32:11,080
rotation in the protocols between

00:32:09,429 --> 00:32:12,519
different zabbix components there is a

00:32:11,080 --> 00:32:15,880
reduced number of connections between

00:32:12,519 --> 00:32:17,169
zabbix server and zabbix proxy the error

00:32:15,880 --> 00:32:18,940
messages have an improvement that's

00:32:17,169 --> 00:32:20,830
that's one of those things that makes me

00:32:18,940 --> 00:32:23,730
really really happy who here has never

00:32:20,830 --> 00:32:26,529
seen a misleading error message

00:32:23,730 --> 00:32:31,149
extremely happy people right there two

00:32:26,529 --> 00:32:32,679
of them so yeah one thing is of course

00:32:31,149 --> 00:32:35,769
that error messages sometimes are just

00:32:32,679 --> 00:32:39,100
not helpful and even worse they can give

00:32:35,769 --> 00:32:41,529
you totally wrong reason so zabbix was

00:32:39,100 --> 00:32:43,929
like that in very very old versions it

00:32:41,529 --> 00:32:49,230
has been very steadily improving in this

00:32:43,929 --> 00:32:49,230
area and the errors actually make sense

00:32:49,350 --> 00:32:52,240
resilience or stability of the product

00:32:51,429 --> 00:32:55,570
again

00:32:52,240 --> 00:32:57,850
you paid Tunes APICS to deal better with

00:32:55,570 --> 00:33:00,159
some miss configurations but now with

00:32:57,850 --> 00:33:02,350
does this out of the box by default it

00:33:00,159 --> 00:33:04,929
keeps unneeded events for a smaller

00:33:02,350 --> 00:33:07,149
period of time it even doesn't generate

00:33:04,929 --> 00:33:11,139
them in some cases if they would not be

00:33:07,149 --> 00:33:13,779
useful very minor thing but previously

00:33:11,139 --> 00:33:15,639
if you change resolve confuse are these

00:33:13,779 --> 00:33:17,289
objects daemon on that system now that's

00:33:15,639 --> 00:33:20,559
not needed anymore they follow the

00:33:17,289 --> 00:33:22,990
changes in this file automatically even

00:33:20,559 --> 00:33:24,789
more agents when they crash they will

00:33:22,990 --> 00:33:26,950
log more information which means that

00:33:24,789 --> 00:33:28,330
you will be able for more information to

00:33:26,950 --> 00:33:30,220
developers they will be able to fix it

00:33:28,330 --> 00:33:33,130
and hopefully agents will never crash

00:33:30,220 --> 00:33:35,440
them previously I

00:33:33,130 --> 00:33:38,110
my which is the intelligent platform

00:33:35,440 --> 00:33:42,550
management interface if I'm not mistaken

00:33:38,110 --> 00:33:46,600
the acronym each of the processes that

00:33:42,550 --> 00:33:49,420
would connect the IBM I admitted sorry

00:33:46,600 --> 00:33:51,700
they did their own connection this has

00:33:49,420 --> 00:33:53,110
now changed and there's only one process

00:33:51,700 --> 00:33:55,540
that it's connecting to IP of mine this

00:33:53,110 --> 00:33:58,680
is much better because BMC has got the

00:33:55,540 --> 00:34:00,790
IP my controllers were easy to overload

00:33:58,680 --> 00:34:03,250
alerting previously inside mix was

00:34:00,790 --> 00:34:06,010
sequential so if you had lots of alerts

00:34:03,250 --> 00:34:08,320
or there was a slow media the alerts

00:34:06,010 --> 00:34:11,530
could get backlogged and you wouldn't

00:34:08,320 --> 00:34:13,690
get timely notifications now alerting is

00:34:11,530 --> 00:34:21,460
parallel so you can get spammed much

00:34:13,690 --> 00:34:25,330
faster and one thing which is extremely

00:34:21,460 --> 00:34:27,879
important for zabbix users it's a very

00:34:25,330 --> 00:34:30,190
non shiny thing very very low level but

00:34:27,879 --> 00:34:32,110
previously if an item broke in a way for

00:34:30,190 --> 00:34:35,560
example if an America item got a string

00:34:32,110 --> 00:34:37,960
it became unsupported if you had a

00:34:35,560 --> 00:34:40,120
trigger on this item that told you that

00:34:37,960 --> 00:34:41,470
there's no data this would not work even

00:34:40,120 --> 00:34:44,440
on that item at that point because it's

00:34:41,470 --> 00:34:46,750
like not supported you could alert about

00:34:44,440 --> 00:34:49,030
these not supported items appearing but

00:34:46,750 --> 00:34:50,649
you could not easily direct those alerts

00:34:49,030 --> 00:34:52,419
to the team responsible for those

00:34:50,649 --> 00:34:55,750
systems and in big environments that was

00:34:52,419 --> 00:34:58,300
a problem so that's now improved and the

00:34:55,750 --> 00:35:00,460
zabbix can alert on any item no matter

00:34:58,300 --> 00:35:04,990
how broken it can may consider that item

00:35:00,460 --> 00:35:06,760
to be another usability area in the user

00:35:04,990 --> 00:35:08,110
interface lots of new filtering has been

00:35:06,760 --> 00:35:10,870
applied

00:35:08,110 --> 00:35:13,480
this makes the interface easier to use

00:35:10,870 --> 00:35:15,580
and again I really love to see such

00:35:13,480 --> 00:35:17,380
improvements because it shows that

00:35:15,580 --> 00:35:19,210
developers might even be using the

00:35:17,380 --> 00:35:22,000
product and seeing the missing filtering

00:35:19,210 --> 00:35:24,100
functionality so we talked about the

00:35:22,000 --> 00:35:26,080
upgrades a lot and new versions and so

00:35:24,100 --> 00:35:28,390
on and how does the a blur it actually

00:35:26,080 --> 00:35:32,020
happen and usually the answer is very

00:35:28,390 --> 00:35:33,880
easy you upgrade to the new version of

00:35:32,020 --> 00:35:35,860
the software you start the new zabbix

00:35:33,880 --> 00:35:38,590
server it automatically updates database

00:35:35,860 --> 00:35:41,410
it prints and the log filed the status

00:35:38,590 --> 00:35:43,210
the the progress and that's usually

00:35:41,410 --> 00:35:45,220
there are of course edge cases if you

00:35:43,210 --> 00:35:47,830
have very big environments things are

00:35:45,220 --> 00:35:50,599
not as easy but

00:35:47,830 --> 00:35:54,140
there's quite a lot of effort put into

00:35:50,599 --> 00:35:55,820
the upgrade process as well I'm not a

00:35:54,140 --> 00:35:57,950
question so people talk about the code

00:35:55,820 --> 00:35:59,840
about the API is about protocols and so

00:35:57,950 --> 00:36:04,670
on what is often overlooked in the

00:35:59,840 --> 00:36:08,410
software development process you're

00:36:04,670 --> 00:36:11,390
getting more candy I'll share it later

00:36:08,410 --> 00:36:13,340
but yes and that was also it has been

00:36:11,390 --> 00:36:15,440
mentioned in quite a few talks here as

00:36:13,340 --> 00:36:17,180
well the documentation is often

00:36:15,440 --> 00:36:18,590
overlooked and I would claim that zabbix

00:36:17,180 --> 00:36:20,720
has possibly one of the best

00:36:18,590 --> 00:36:23,530
documentation in the at least open

00:36:20,720 --> 00:36:26,840
source world and maybe even beyond that

00:36:23,530 --> 00:36:30,740
so the manual is great there's lots of

00:36:26,840 --> 00:36:33,230
information and it's really described in

00:36:30,740 --> 00:36:34,970
enough detail in most of the cases and

00:36:33,230 --> 00:36:37,730
there's also upgrade notes so you can

00:36:34,970 --> 00:36:41,480
see what possibly breaking changes the

00:36:37,730 --> 00:36:43,369
new version will introduce and you can

00:36:41,480 --> 00:36:45,200
see documentation for all of the

00:36:43,369 --> 00:36:47,510
versions of zabbix even like really old

00:36:45,200 --> 00:36:49,420
not supported anymore you can see the

00:36:47,510 --> 00:36:52,310
documentation for the upcoming versions

00:36:49,420 --> 00:36:56,869
really awesome a lot of great work going

00:36:52,310 --> 00:36:59,630
into the documentation of zabbix then

00:36:56,869 --> 00:37:03,650
moving on to zabbix 4 which is the

00:36:59,630 --> 00:37:06,440
upcoming release it's planned for the q1

00:37:03,650 --> 00:37:08,210
next year first quarter so sometime next

00:37:06,440 --> 00:37:11,320
year if there might be some delays maybe

00:37:08,210 --> 00:37:13,490
not but next year definitely

00:37:11,320 --> 00:37:15,080
unfortunately zabbix does not publish

00:37:13,490 --> 00:37:17,630
the roadmap anymore

00:37:15,080 --> 00:37:19,580
so if we would like to talk about what's

00:37:17,630 --> 00:37:21,470
coming we'd have to look at the code

00:37:19,580 --> 00:37:23,839
changes and then documentation changes

00:37:21,470 --> 00:37:27,410
possibly and and try to figure out

00:37:23,839 --> 00:37:30,290
what's happening that way so I will not

00:37:27,410 --> 00:37:33,050
even do that but that leads us to more

00:37:30,290 --> 00:37:35,900
sad possibly topic today in the second

00:37:33,050 --> 00:37:37,550
topic so what is the openness how you

00:37:35,900 --> 00:37:39,980
define that is that just the code is

00:37:37,550 --> 00:37:44,030
that the process is what like this the

00:37:39,980 --> 00:37:46,369
community how that all works and the

00:37:44,030 --> 00:37:49,160
details matter some people some details

00:37:46,369 --> 00:37:50,869
matter more than the than they matter to

00:37:49,160 --> 00:37:53,570
other people so what are those details

00:37:50,869 --> 00:37:56,000
and this is an open conference soulet

00:37:53,570 --> 00:38:01,090
let's be very open and I'll try to give

00:37:56,000 --> 00:38:04,070
very honest view on the openness so

00:38:01,090 --> 00:38:06,650
the code is fully open the development

00:38:04,070 --> 00:38:09,380
is fairly closed you can follow it but

00:38:06,650 --> 00:38:11,690
the external patches in zabbix are not

00:38:09,380 --> 00:38:12,740
accepted in general in most cases

00:38:11,690 --> 00:38:15,680
there's there are very good reasons

00:38:12,740 --> 00:38:17,390
because the patch only fixes the problem

00:38:15,680 --> 00:38:21,680
on one platform on breaks functionality

00:38:17,390 --> 00:38:25,910
on another platform or only fixes a

00:38:21,680 --> 00:38:27,620
specific problem but it actually makes

00:38:25,910 --> 00:38:30,170
the software so much slow in another

00:38:27,620 --> 00:38:31,370
environment that it's not useful so in

00:38:30,170 --> 00:38:34,340
those cases the patches have to be

00:38:31,370 --> 00:38:35,870
rewritten but even if the patch could be

00:38:34,340 --> 00:38:39,620
improved by the original submitter

00:38:35,870 --> 00:38:40,730
that's there is no this this feedback so

00:38:39,620 --> 00:38:45,320
a community is not engaged in the

00:38:40,730 --> 00:38:47,360
development process as much and they're

00:38:45,320 --> 00:38:49,550
talking about the process there might be

00:38:47,360 --> 00:38:51,320
a few things that actually look like

00:38:49,550 --> 00:38:54,230
cervix is closing up the processes

00:38:51,320 --> 00:38:56,630
somewhat and let's look at the very

00:38:54,230 --> 00:38:59,300
specific example specific specifications

00:38:56,630 --> 00:39:02,000
so zabbix was writing specifications

00:38:59,300 --> 00:39:04,400
detailed I would even say great

00:39:02,000 --> 00:39:06,350
specifications for features and they

00:39:04,400 --> 00:39:08,240
were freely shared before in many cases

00:39:06,350 --> 00:39:09,950
even in early draft states community

00:39:08,240 --> 00:39:12,410
could get involved and maybe point out

00:39:09,950 --> 00:39:14,360
some problems even before they got

00:39:12,410 --> 00:39:19,330
codified in the specification or

00:39:14,360 --> 00:39:22,580
implemented so yeah these got closed and

00:39:19,330 --> 00:39:24,560
what happened there one reason given was

00:39:22,580 --> 00:39:28,040
that there was not enough feedback so no

00:39:24,560 --> 00:39:29,090
point publishing them another reason

00:39:28,040 --> 00:39:30,590
given was that there was too much

00:39:29,090 --> 00:39:34,640
feedback so it took too much of the

00:39:30,590 --> 00:39:36,140
developers time and then later it turned

00:39:34,640 --> 00:39:39,110
out that these specifications are

00:39:36,140 --> 00:39:41,030
advertised to paying tech support

00:39:39,110 --> 00:39:44,080
customers as an extra feature as an

00:39:41,030 --> 00:39:48,860
extra data and that is perfectly fine

00:39:44,080 --> 00:39:52,570
because nobody can demand openness the

00:39:48,860 --> 00:39:56,120
biggest problem that I would see is that

00:39:52,570 --> 00:39:58,550
there may be more honesty and they're

00:39:56,120 --> 00:40:00,770
behind the reasons so zabbix gets more

00:39:58,550 --> 00:40:03,940
funding maybe that way maybe not that's

00:40:00,770 --> 00:40:07,400
that's very hard to measure I guess but

00:40:03,940 --> 00:40:09,200
it would be in my opinion helpful to be

00:40:07,400 --> 00:40:10,760
honest with the community and tell them

00:40:09,200 --> 00:40:12,710
hey yeah this petition we closed them

00:40:10,760 --> 00:40:14,000
because we would like to offer them as

00:40:12,710 --> 00:40:19,370
an extra benefit to the

00:40:14,000 --> 00:40:23,510
customers and in general again there's

00:40:19,370 --> 00:40:25,970
no demanding of openness even the

00:40:23,510 --> 00:40:27,830
forever open-source the public promise

00:40:25,970 --> 00:40:30,320
that's not legally binding that's just a

00:40:27,830 --> 00:40:35,720
promise to the users to the community to

00:40:30,320 --> 00:40:37,550
the customers as well and zabbix might

00:40:35,720 --> 00:40:40,880
be looking at other examples that that

00:40:37,550 --> 00:40:45,820
are worse even and they're not like bad

00:40:40,880 --> 00:40:48,910
or terrible but who's using puppet a few

00:40:45,820 --> 00:40:52,070
who's using a fully open source

00:40:48,910 --> 00:40:56,180
configuration management solution like

00:40:52,070 --> 00:40:58,550
no open core that's I'm gonna fool sure

00:40:56,180 --> 00:41:00,230
like 1 or 2 people so yeah puppet is

00:40:58,550 --> 00:41:02,930
actually open core and still it's

00:41:00,230 --> 00:41:06,380
considered open source and used by many

00:41:02,930 --> 00:41:08,150
similarly the elastic stack there are

00:41:06,380 --> 00:41:10,700
closed components it's not fully open

00:41:08,150 --> 00:41:13,400
source and I had this as a bad example

00:41:10,700 --> 00:41:15,890
it kind but I was very happy to see

00:41:13,400 --> 00:41:19,100
eight of the X open source earlier this

00:41:15,890 --> 00:41:21,680
year probably move faster than anybody

00:41:19,100 --> 00:41:25,550
expected that and so yeah good job Red

00:41:21,680 --> 00:41:27,770
Hat on that and I think this is a WX

00:41:25,550 --> 00:41:29,180
logo I'm not fully sure a mascot or

00:41:27,770 --> 00:41:31,100
something and that's also another cool

00:41:29,180 --> 00:41:33,230
thing about it but that's a side topic

00:41:31,100 --> 00:41:38,270
so talking about the openness and

00:41:33,230 --> 00:41:38,720
closeness who is using syslog-ng one two

00:41:38,270 --> 00:41:41,780
three

00:41:38,720 --> 00:41:45,530
who who remembers syslog and G from

00:41:41,780 --> 00:41:48,680
before more people so why I'm saying

00:41:45,530 --> 00:41:50,420
from before because nowadays when I talk

00:41:48,680 --> 00:41:53,120
to people about the log centralized

00:41:50,420 --> 00:41:55,400
solutions and so such things most people

00:41:53,120 --> 00:41:57,530
the first thing that they implement or

00:41:55,400 --> 00:42:00,980
think about or talk about it sources

00:41:57,530 --> 00:42:03,530
like and syslog-ng was and still is I

00:42:00,980 --> 00:42:08,530
guess open core it had closed components

00:42:03,530 --> 00:42:11,600
and what happened was that many platform

00:42:08,530 --> 00:42:13,310
vendors or at least several important

00:42:11,600 --> 00:42:15,260
platform render decided that it's not a

00:42:13,310 --> 00:42:18,500
good way forward so they went with

00:42:15,260 --> 00:42:20,000
Arce's log and nowadays at least from

00:42:18,500 --> 00:42:25,250
what I hear our source log is much much

00:42:20,000 --> 00:42:27,760
more popular so it's quite possible that

00:42:25,250 --> 00:42:29,260
this kind of maybe slightly more

00:42:27,760 --> 00:42:32,230
development is nothing to worry about

00:42:29,260 --> 00:42:35,800
and that the topics can still be

00:42:32,230 --> 00:42:38,020
universal solution the possible concern

00:42:35,800 --> 00:42:40,630
is that some users who would like to

00:42:38,020 --> 00:42:43,480
contribute more or some platform vendors

00:42:40,630 --> 00:42:46,540
specifically might turn away from zabbix

00:42:43,480 --> 00:42:51,820
or or might have a decreased preference

00:42:46,540 --> 00:42:53,680
for it and yeah but maybe that's not a

00:42:51,820 --> 00:42:57,670
concern because zabbix is still a really

00:42:53,680 --> 00:42:59,770
really great and it is this true open

00:42:57,670 --> 00:43:03,100
source thing it's free software there's

00:42:59,770 --> 00:43:05,500
again no closed component that is very

00:43:03,100 --> 00:43:07,090
very important because in many cases

00:43:05,500 --> 00:43:11,080
when you hear open source you have to

00:43:07,090 --> 00:43:12,340
think is that open core again and it has

00:43:11,080 --> 00:43:14,080
really great functionality it can mount

00:43:12,340 --> 00:43:16,420
for a lot of things lots of things are

00:43:14,080 --> 00:43:19,600
built-in listening for scripting let's

00:43:16,420 --> 00:43:21,940
lead for re-implementing things the team

00:43:19,600 --> 00:43:25,150
behind zabbix is really awesome they're

00:43:21,940 --> 00:43:29,560
all great developers and the community

00:43:25,150 --> 00:43:34,119
is wonderful and resilient and yeah so

00:43:29,560 --> 00:43:39,850
open core I would not put that as a good

00:43:34,119 --> 00:43:42,190
thing yeah and also zabbix I have this

00:43:39,850 --> 00:43:45,280
thing here which said keep your feet

00:43:42,190 --> 00:43:48,160
warm and servers cool with zabbix and

00:43:45,280 --> 00:43:51,730
that's what I'm doing here zabbix sucks

00:43:48,160 --> 00:43:54,250
so that big has joined the trend so yeah

00:43:51,730 --> 00:43:59,380
that is great I use it I love it I

00:43:54,250 --> 00:44:01,990
have these are big socks and if there's

00:43:59,380 --> 00:44:03,700
anything you'd like to tell me about

00:44:01,990 --> 00:44:06,450
zabbix or monitoring any questions

00:44:03,700 --> 00:44:09,850
afterwards then please find me on IRC

00:44:06,450 --> 00:44:11,590
zabbix channel on freenode it's probably

00:44:09,850 --> 00:44:14,740
still the biggest monitoring related IRC

00:44:11,590 --> 00:44:19,180
Channel very friendly very active

00:44:14,740 --> 00:44:20,920
awesome place on the blog there's a

00:44:19,180 --> 00:44:24,490
contact form if you don't know how to

00:44:20,920 --> 00:44:26,200
join IRC and offer later if you don't

00:44:24,490 --> 00:44:29,560
get your question in now then please

00:44:26,200 --> 00:44:33,250
come over and let me know what concerns

00:44:29,560 --> 00:44:36,730
you have and we're at the concussion

00:44:33,250 --> 00:44:41,430
time okay so we have 50 minutes of

00:44:36,730 --> 00:44:41,430
question time so any questions were

00:44:42,610 --> 00:44:48,050
nice presentation thank you I'm not

00:44:46,250 --> 00:44:51,140
personally using a zabbix but we have a

00:44:48,050 --> 00:44:55,040
team who is using it and I was wondering

00:44:51,140 --> 00:44:57,920
is there a way to integrate zabbix with

00:44:55,040 --> 00:44:59,870
any other CMDB like for instance like

00:44:57,920 --> 00:45:03,160
Papa TV because a singer can do this

00:44:59,870 --> 00:45:05,540
with director so could you share your

00:45:03,160 --> 00:45:07,640
experiences or impressions yeah I've

00:45:05,540 --> 00:45:11,150
never done through integration myself

00:45:07,640 --> 00:45:14,990
but there are solutions which use the

00:45:11,150 --> 00:45:17,450
zabbix API so when a change happens in a

00:45:14,990 --> 00:45:19,690
configuration like system gets deployed

00:45:17,450 --> 00:45:23,150
or decommissioned or changes the role

00:45:19,690 --> 00:45:24,890
this change goes to the zabbix API hosts

00:45:23,150 --> 00:45:27,950
are created templates linked unlinked

00:45:24,890 --> 00:45:29,570
host could be deleted or disabled to be

00:45:27,950 --> 00:45:32,030
more safe

00:45:29,570 --> 00:45:35,150
it's possible using these Avex api which

00:45:32,030 --> 00:45:38,420
we didn't talk about today so there's no

00:45:35,150 --> 00:45:41,350
like built-in thing yet or no built-in

00:45:38,420 --> 00:45:41,350
thing yet that's correct

00:45:41,560 --> 00:45:50,420
okay any more questions thank you a

00:45:49,400 --> 00:45:52,340
great presentation

00:45:50,420 --> 00:45:54,620
just following up a question maybe on

00:45:52,340 --> 00:45:56,570
that CMD began of integration afforded

00:45:54,620 --> 00:45:58,160
relationship maps and the dependencies

00:45:56,570 --> 00:45:59,960
which he was showing up is it possible

00:45:58,160 --> 00:46:01,400
to actually load them over the api's as

00:45:59,960 --> 00:46:03,530
well to actually say it's like if we

00:46:01,400 --> 00:46:05,090
maintain the dependencies and the kind

00:46:03,530 --> 00:46:06,920
of relationship between the object like

00:46:05,090 --> 00:46:08,990
this database hosted here and that's it

00:46:06,920 --> 00:46:10,790
Rob is it possible to load it into the

00:46:08,990 --> 00:46:13,700
maps as well

00:46:10,790 --> 00:46:16,370
you mean Network Maps yes not

00:46:13,700 --> 00:46:18,020
automatically it's fine not automatic

00:46:16,370 --> 00:46:20,600
about there is the possibility over the

00:46:18,020 --> 00:46:26,870
API 38 API supports all of the

00:46:20,600 --> 00:46:28,640
configuration fully okay okay yeah well

00:46:26,870 --> 00:46:31,550
actually I think API was extended to

00:46:28,640 --> 00:46:33,800
support the thing called value maps in

00:46:31,550 --> 00:46:35,360
zabbix so that was a missing thing but

00:46:33,800 --> 00:46:37,280
there yet that's that's was a good there

00:46:35,360 --> 00:46:38,540
was a when I said that API supports the

00:46:37,280 --> 00:46:42,050
configuration fully there was an

00:46:38,540 --> 00:46:44,180
exclamation there are still some global

00:46:42,050 --> 00:46:45,890
configuration things like for example if

00:46:44,180 --> 00:46:47,870
you'd like to customize the trigger

00:46:45,890 --> 00:46:50,840
names with zabbix calls warning high

00:46:47,870 --> 00:46:54,099
disaster you you can do that through API

00:46:50,840 --> 00:47:03,309
that level of things is not available in

00:46:54,099 --> 00:47:04,569
API yet more questions okay so yeah so

00:47:03,309 --> 00:47:07,779
thanks a lot and I think that means

00:47:04,569 --> 00:47:12,509
earlier lunch yep and you can exchange

00:47:07,779 --> 00:47:12,509
the candy so one warm applause please

00:47:13,490 --> 00:47:18,890

YouTube URL: https://www.youtube.com/watch?v=cpnb6Yyxv0c


