Title: OSMC 2017 | Troubleshooting Icinga 2 by Thomas Widhalm
Publication date: 2017-12-05
Playlist: OSMC 2017 | Open Source Monitoring Conference
Description: 
	What do I do if Icinga 2 stops working?
How can I find out whatâ€™s wrong and how do I fix it?
Where can I find help and what information should I provide?
And foremost how do I know *if* Icinga 2 is doing what I want?
If you ask yourself at least one of these questions regularly than this talk is for you.
Captions: 
	00:00:10,830 --> 00:00:18,140
and now we have the next talk about

00:00:13,740 --> 00:00:22,259
troubleshooting his singer - and it's

00:00:18,140 --> 00:00:26,730
will be held by a consultant of net

00:00:22,259 --> 00:00:37,769
waste and yeah his name is Thomas

00:00:26,730 --> 00:00:40,650
Wheaton that's welcome him thank you so

00:00:37,769 --> 00:00:42,750
about me my name is Thomas Vuitton as it

00:00:40,650 --> 00:00:46,800
just hurt but I like to hear my name's

00:00:42,750 --> 00:00:49,800
uh use double I'm senior consultant and

00:00:46,800 --> 00:00:52,620
lead Support Engineer at net waste so I

00:00:49,800 --> 00:00:56,760
have to deal a lot with troubleshooting

00:00:52,620 --> 00:01:00,120
hissing uh inducing a team I'm a team

00:00:56,760 --> 00:01:04,470
member for QA and talks in the talks

00:01:00,120 --> 00:01:07,410
team as Leonard said before in the talk

00:01:04,470 --> 00:01:10,800
before I'm the co-author of the icinga

00:01:07,410 --> 00:01:13,259
to book in German as burnt said

00:01:10,800 --> 00:01:15,030
yesterday German is easy to color in it

00:01:13,259 --> 00:01:18,900
and you can read it if you don't

00:01:15,030 --> 00:01:21,930
understand it but now yeah my twitter

00:01:18,900 --> 00:01:24,150
handle email addresses and most

00:01:21,930 --> 00:01:29,400
important for this talk I really don't

00:01:24,150 --> 00:01:32,549
like to make slides so don't expect too

00:01:29,400 --> 00:01:36,689
much but the talk itself I was very

00:01:32,549 --> 00:01:39,000
inspired about doing lots of real-life

00:01:36,689 --> 00:01:41,490
examples about troubleshooting what we

00:01:39,000 --> 00:01:44,490
see in support something like that then

00:01:41,490 --> 00:01:46,500
I got distracted a bit and that was

00:01:44,490 --> 00:01:48,540
about best practices and then about

00:01:46,500 --> 00:01:51,570
another bit and another bit so it might

00:01:48,540 --> 00:01:54,390
be a bit confusing so I hope you all

00:01:51,570 --> 00:01:58,290
have to you know find something you can

00:01:54,390 --> 00:02:01,020
take from it if not just go out there is

00:01:58,290 --> 00:02:06,659
food out there and yeah just tell me

00:02:01,020 --> 00:02:09,720
afterwards in the feedback okay so today

00:02:06,659 --> 00:02:13,739
I'm gonna tell you a lot of obvious

00:02:09,720 --> 00:02:16,049
things like read the documentation keep

00:02:13,739 --> 00:02:19,949
your accounts for web services and

00:02:16,049 --> 00:02:22,680
support portals at already do your

00:02:19,949 --> 00:02:23,370
testing to convict checks read your log

00:02:22,680 --> 00:02:29,730
files

00:02:23,370 --> 00:02:31,190
so your honor you'll all go like yeah oh

00:02:29,730 --> 00:02:35,060
please

00:02:31,190 --> 00:02:39,390
so if you all know how to do this then

00:02:35,060 --> 00:02:43,140
why do I have to tell you because as a

00:02:39,390 --> 00:02:46,500
consultant and in support we all see

00:02:43,140 --> 00:02:50,280
problems occurring all the time we're

00:02:46,500 --> 00:02:53,129
about a Ted let's be nice about 50% of

00:02:50,280 --> 00:03:00,079
them could be fixed when someone kept

00:02:53,129 --> 00:03:03,900
the to the things mentioned here so I

00:03:00,079 --> 00:03:07,109
concentrate a bit about that so what is

00:03:03,900 --> 00:03:10,709
all about easy single to doing what I

00:03:07,109 --> 00:03:15,359
wanted to do that's not that an easy

00:03:10,709 --> 00:03:19,230
question like many might think if it

00:03:15,359 --> 00:03:22,620
isn't doing what I wanted to do why then

00:03:19,230 --> 00:03:23,390
what can I do to make it work where can

00:03:22,620 --> 00:03:26,159
I get help

00:03:23,390 --> 00:03:28,230
yeah okay that's all the networks logo

00:03:26,159 --> 00:03:31,230
all about but that's not the only source

00:03:28,230 --> 00:03:35,069
of help for monitoring maybe it's the

00:03:31,230 --> 00:03:37,859
best source but okay so and what

00:03:35,069 --> 00:03:44,310
information can I provide if I need help

00:03:37,859 --> 00:03:45,769
so is it doing what I wanted to do the

00:03:44,310 --> 00:03:49,519
problem with the singer with many other

00:03:45,769 --> 00:03:53,239
mighty open source tools is like with

00:03:49,519 --> 00:03:58,349
other open source tools like the Phoenix

00:03:53,239 --> 00:04:00,419
it's not your next job to do our job we

00:03:58,349 --> 00:04:02,639
have to tell it what we wanted to do but

00:04:00,419 --> 00:04:06,030
it does what we tell it if you don't

00:04:02,639 --> 00:04:10,010
know what we want or if we tell it the

00:04:06,030 --> 00:04:14,609
right way what to do then it might break

00:04:10,010 --> 00:04:17,340
so think about what you really need what

00:04:14,609 --> 00:04:20,690
you really want and then learn how to

00:04:17,340 --> 00:04:23,780
tell your systems how to do this and

00:04:20,690 --> 00:04:28,080
don't expect it to come out of the box

00:04:23,780 --> 00:04:31,560
it's the flexibility is the real high

00:04:28,080 --> 00:04:34,560
level as the most of you might know but

00:04:31,560 --> 00:04:36,870
there's not so much coming out of the

00:04:34,560 --> 00:04:37,350
box working for everyone this basic

00:04:36,870 --> 00:04:39,450
country

00:04:37,350 --> 00:04:41,970
raishin coming with almost every

00:04:39,450 --> 00:04:44,190
open-source tool but this basic

00:04:41,970 --> 00:04:46,770
configuration might give you hints from

00:04:44,190 --> 00:04:51,000
where you can build on this is not the

00:04:46,770 --> 00:04:56,490
thing you might use from the first day

00:04:51,000 --> 00:05:00,210
in production check what you really want

00:04:56,490 --> 00:05:02,880
to check so it's pinging enough of some

00:05:00,210 --> 00:05:06,630
devices might be most of the time it

00:05:02,880 --> 00:05:09,120
isn't to do your basic us checks they

00:05:06,630 --> 00:05:13,020
are helpful most of the times so like

00:05:09,120 --> 00:05:15,800
load memory disk network something like

00:05:13,020 --> 00:05:18,600
that Hardware checks basic heart attacks

00:05:15,800 --> 00:05:20,610
then bit more sophisticated treatability

00:05:18,600 --> 00:05:22,800
of services is my webserver each of all

00:05:20,610 --> 00:05:25,140
is my database reachable all of that

00:05:22,800 --> 00:05:27,990
stuff but it might even not be enough

00:05:25,140 --> 00:05:32,820
then you have details how long is my

00:05:27,990 --> 00:05:36,000
recertification be valid what status

00:05:32,820 --> 00:05:39,420
code is my webserver delivering is there

00:05:36,000 --> 00:05:41,970
a string I'm expecting of on the website

00:05:39,420 --> 00:05:44,520
I'm checking and so on there are many

00:05:41,970 --> 00:05:47,520
things you can check in more detail and

00:05:44,520 --> 00:05:50,460
that might be a very good idea it's not

00:05:47,520 --> 00:05:52,080
always but most of the time and you can

00:05:50,460 --> 00:05:54,030
do end-to-end monitoring send an email

00:05:52,080 --> 00:05:57,360
receive an email check if you know

00:05:54,030 --> 00:05:59,790
really received it if yes okay your mail

00:05:57,360 --> 00:06:01,800
system might be working and you have the

00:05:59,790 --> 00:06:05,940
business processes the business process

00:06:01,800 --> 00:06:09,060
module to to aggregate those information

00:06:05,940 --> 00:06:11,940
in the one hand for you to see okay I

00:06:09,060 --> 00:06:15,000
have a problem I have some some outage

00:06:11,940 --> 00:06:18,030
but is it really affecting my my whole

00:06:15,000 --> 00:06:21,000
system or is it just that I lost a bit

00:06:18,030 --> 00:06:24,600
of redundancy and it's a good thing to

00:06:21,000 --> 00:06:27,420
show people that are not so familiar

00:06:24,600 --> 00:06:29,160
with technical things let's say most of

00:06:27,420 --> 00:06:34,230
them are running around in suits all the

00:06:29,160 --> 00:06:36,120
day many people who are not system

00:06:34,230 --> 00:06:39,360
administrators or systems engineers or

00:06:36,120 --> 00:06:42,180
what what have you don't know that

00:06:39,360 --> 00:06:43,440
technical things break and it's okay

00:06:42,180 --> 00:06:46,770
that they break because we have

00:06:43,440 --> 00:06:50,340
redundancy so just some sort of alert

00:06:46,770 --> 00:06:52,650
might really be totally ok

00:06:50,340 --> 00:06:54,600
but you have to inform the right people

00:06:52,650 --> 00:06:57,810
that they have to fix it to get the

00:06:54,600 --> 00:07:02,160
redundancy back but you might note not

00:06:57,810 --> 00:07:04,699
want to show an outage of just one disk

00:07:02,160 --> 00:07:11,250
drive in a bigger a system to everyone

00:07:04,699 --> 00:07:14,970
so this slide is about think about what

00:07:11,250 --> 00:07:16,860
you need I don't want to tell you it's

00:07:14,970 --> 00:07:20,910
not okay just to being a system

00:07:16,860 --> 00:07:23,520
sometimes it is but really rethink what

00:07:20,910 --> 00:07:26,430
you created we see a lot of setups where

00:07:23,520 --> 00:07:28,500
someone is just pinging a host under the

00:07:26,430 --> 00:07:31,320
Cape it's answering me so it has to be

00:07:28,500 --> 00:07:35,610
alive that's not always the case

00:07:31,320 --> 00:07:37,979
sometimes you can't do more yeah come on

00:07:35,610 --> 00:07:40,970
mistakes it's being able or just I can't

00:07:37,979 --> 00:07:46,910
connect to the port so it has to be okay

00:07:40,970 --> 00:07:49,470
rethink what can you do

00:07:46,910 --> 00:07:51,660
think about what you're monitoring think

00:07:49,470 --> 00:07:53,580
about if you're monitoring everything

00:07:51,660 --> 00:07:55,500
you need then think again and to think

00:07:53,580 --> 00:07:57,150
again and talk to people we heard that

00:07:55,500 --> 00:08:00,030
in a lot of talks today and yesterday

00:07:57,150 --> 00:08:01,889
talked to to the people in the teams

00:08:00,030 --> 00:08:04,050
they know best what they want to have

00:08:01,889 --> 00:08:06,539
monitored they don't know what your

00:08:04,050 --> 00:08:10,020
monitoring can do you cannot tell them

00:08:06,539 --> 00:08:12,389
and find a solution together that's a

00:08:10,020 --> 00:08:15,270
hard thing and no but it's maybe the

00:08:12,389 --> 00:08:18,660
only way you can really get a fully

00:08:15,270 --> 00:08:22,410
functioning monitoring system and do

00:08:18,660 --> 00:08:27,210
your tests and not just total blackout

00:08:22,410 --> 00:08:30,150
of your development environment but just

00:08:27,210 --> 00:08:32,729
turn off a bit of a thing turn off just

00:08:30,150 --> 00:08:34,830
the database block connections of the

00:08:32,729 --> 00:08:36,599
firewall delete parts of the

00:08:34,830 --> 00:08:40,140
configuration all the things that can

00:08:36,599 --> 00:08:43,310
happen if you have a good testing setup

00:08:40,140 --> 00:08:45,779
just fill around with the hardware just

00:08:43,310 --> 00:08:50,330
pull a disk or something like that and

00:08:45,779 --> 00:08:53,370
then test if you really got alarmed when

00:08:50,330 --> 00:08:56,190
when you broke something and if it

00:08:53,370 --> 00:08:58,470
didn't maybe testing but also in

00:08:56,190 --> 00:09:01,230
production use this as a chance to

00:08:58,470 --> 00:09:04,170
improve your monitoring if you had an

00:09:01,230 --> 00:09:07,050
outage and nobody recognized then

00:09:04,170 --> 00:09:10,380
rethink what you're monitoring what can

00:09:07,050 --> 00:09:14,400
we do as from experience I can tell you

00:09:10,380 --> 00:09:16,860
you will always be able to build and

00:09:14,400 --> 00:09:19,830
monitoring system that will inform you

00:09:16,860 --> 00:09:21,930
about the origins you need but that's a

00:09:19,830 --> 00:09:24,240
hard thing and it's an ongoing process

00:09:21,930 --> 00:09:27,030
it will never be done it will never be

00:09:24,240 --> 00:09:32,310
finished it will live with your whole

00:09:27,030 --> 00:09:34,890
environment but don't overdo it it's

00:09:32,310 --> 00:09:39,170
another thing we see a lot you have a

00:09:34,890 --> 00:09:42,630
big switch with say 64 ports or more and

00:09:39,170 --> 00:09:46,650
first thing is monitor every port for

00:09:42,630 --> 00:09:49,920
errors for connection for for what have

00:09:46,650 --> 00:09:53,010
you is it really what you need do you

00:09:49,920 --> 00:09:54,750
need to check if if something is

00:09:53,010 --> 00:09:56,330
connected to switch port when you

00:09:54,750 --> 00:10:01,980
monitor the server on the other end

00:09:56,330 --> 00:10:05,210
probably not so stay with monitoring

00:10:01,980 --> 00:10:08,730
those interfaces you really need and

00:10:05,210 --> 00:10:10,830
leave the others to another check if you

00:10:08,730 --> 00:10:14,490
check something that is dependent from

00:10:10,830 --> 00:10:19,050
the switch port then it might be okay to

00:10:14,490 --> 00:10:22,830
just monitor this host think a lot and

00:10:19,050 --> 00:10:25,500
really a lot about check intervals if

00:10:22,830 --> 00:10:27,570
you if you talk to to customers about

00:10:25,500 --> 00:10:32,610
check intervals it's a lot of the time

00:10:27,570 --> 00:10:35,400
okay I need close to real-time maybe two

00:10:32,610 --> 00:10:37,140
seconds between checks it's okay for a

00:10:35,400 --> 00:10:38,730
singer you can do that we have tested

00:10:37,140 --> 00:10:40,860
that with with Tammy Jackson so you can

00:10:38,730 --> 00:10:45,150
do a lot of objects within there's a

00:10:40,860 --> 00:10:48,110
various small time frame but you might

00:10:45,150 --> 00:10:51,540
not have any benefit from it but

00:10:48,110 --> 00:10:54,030
producing load you have your plugins to

00:10:51,540 --> 00:10:57,030
run on your hosts you have your systems

00:10:54,030 --> 00:10:59,340
that have to reply to your connections

00:10:57,030 --> 00:11:03,150
and so on you will produce a lot of load

00:10:59,340 --> 00:11:05,430
but you have no benefit because if you

00:11:03,150 --> 00:11:09,450
don't have some of you might have if you

00:11:05,430 --> 00:11:12,540
don't have a big big hole with support

00:11:09,450 --> 00:11:17,620
engineers who only look at monitors and

00:11:12,540 --> 00:11:20,050
waiting for this one bulb to go red then

00:11:17,620 --> 00:11:22,300
maybe being informed after one minute or

00:11:20,050 --> 00:11:24,730
two minutes is totally okay because no

00:11:22,300 --> 00:11:26,620
human can react in this time sometimes

00:11:24,730 --> 00:11:29,410
you need it and no there are special

00:11:26,620 --> 00:11:32,440
cases we need to get Informer really

00:11:29,410 --> 00:11:34,870
fast you might find the solution of this

00:11:32,440 --> 00:11:37,020
and just have check intervals for some

00:11:34,870 --> 00:11:38,650
special checks but not for everything

00:11:37,020 --> 00:11:46,240
it's no use

00:11:38,650 --> 00:11:49,290
checking updates every five minutes you

00:11:46,240 --> 00:11:52,600
can even kill hosts by over monitoring

00:11:49,290 --> 00:11:56,620
especially those answering with big API

00:11:52,600 --> 00:11:56,980
calls a lots of SNMP or something like

00:11:56,620 --> 00:11:59,350
that

00:11:56,980 --> 00:12:01,660
if you hammer down on those hosts with

00:11:59,350 --> 00:12:03,610
your checks you might really decorate

00:12:01,660 --> 00:12:07,300
the performance of the monitored systems

00:12:03,610 --> 00:12:09,430
so really go to reasonable intervals

00:12:07,300 --> 00:12:11,650
what's reasonable is really dependent on

00:12:09,430 --> 00:12:14,080
what you have there default in the

00:12:11,650 --> 00:12:16,510
singer you can use that for a start

00:12:14,080 --> 00:12:19,480
and then we think and think about that

00:12:16,510 --> 00:12:22,870
your graphing tools might have to be

00:12:19,480 --> 00:12:25,240
adjusted to that they expect your data

00:12:22,870 --> 00:12:31,540
coming in in several in a certain

00:12:25,240 --> 00:12:34,540
interval another thing I'll come back to

00:12:31,540 --> 00:12:37,990
that again and again monitor your

00:12:34,540 --> 00:12:39,970
monitoring believe it or not we see a

00:12:37,990 --> 00:12:42,760
lot of monitoring systems that are not

00:12:39,970 --> 00:12:46,300
being monitored at all not by itself and

00:12:42,760 --> 00:12:48,580
not by something else so monitoring

00:12:46,300 --> 00:12:51,190
hosts our production hosts treat them

00:12:48,580 --> 00:12:54,040
like they deserve and don't forget about

00:12:51,190 --> 00:12:58,080
satellites or something added that might

00:12:54,040 --> 00:12:58,080
lead to an outage in your monitoring

00:12:59,310 --> 00:13:11,770
yeah always about availability sometimes

00:13:09,730 --> 00:13:14,010
me okay I have highly available

00:13:11,770 --> 00:13:19,660
monitoring I don't need monitoring okay

00:13:14,010 --> 00:13:21,339
yeah you do I won't need monitoring to

00:13:19,660 --> 00:13:23,800
tell me that my whole VM affirmed went

00:13:21,339 --> 00:13:25,839
offline yeah that might be the format

00:13:23,800 --> 00:13:28,150
ringing before the monitoring will show

00:13:25,839 --> 00:13:29,800
that the whole farm went offline the

00:13:28,150 --> 00:13:30,560
whole datacenter went offline woke up

00:13:29,800 --> 00:13:33,950
burnt down

00:13:30,560 --> 00:13:36,890
something like that maybe not but you

00:13:33,950 --> 00:13:39,440
might really want your monitoring to

00:13:36,890 --> 00:13:42,590
show you what exactly went down in the

00:13:39,440 --> 00:13:46,730
first moment it was a systems engineer

00:13:42,590 --> 00:13:48,560
in former job and we had that that whole

00:13:46,730 --> 00:13:51,970
wreck just went down or something like

00:13:48,560 --> 00:13:51,970
that most of you might might have

00:13:52,390 --> 00:13:56,710
experiences as well

00:13:53,960 --> 00:14:00,410
and then the first thing is oh god

00:13:56,710 --> 00:14:02,690
there's broken a big thing but what

00:14:00,410 --> 00:14:05,300
exactly is problem monitoring helps

00:14:02,690 --> 00:14:06,310
helps you with finding what really is

00:14:05,300 --> 00:14:11,720
your problem

00:14:06,310 --> 00:14:15,770
it's the same with restarting during a

00:14:11,720 --> 00:14:17,570
restart of some major system your

00:14:15,770 --> 00:14:21,350
monitoring system might help to show you

00:14:17,570 --> 00:14:22,910
what is online again you know if you're

00:14:21,350 --> 00:14:24,920
if you restart the whole data center

00:14:22,910 --> 00:14:27,740
there's something you might have to

00:14:24,920 --> 00:14:31,339
start beforehand start your DNS servers

00:14:27,740 --> 00:14:34,580
start your directory services and so on

00:14:31,339 --> 00:14:36,920
and if this is online you can tell other

00:14:34,580 --> 00:14:38,660
people okay now you can start your hosts

00:14:36,920 --> 00:14:40,760
and this is exactly where your

00:14:38,660 --> 00:14:43,250
monitoring can help you with

00:14:40,760 --> 00:14:47,589
communicating between teams and showing

00:14:43,250 --> 00:14:47,589
what is really operational again

00:14:47,710 --> 00:14:57,589
- clustering as I said I'll tell you a

00:14:54,020 --> 00:15:00,620
lot of obvious things but we get it over

00:14:57,589 --> 00:15:07,010
and over again clustering or many high

00:15:00,620 --> 00:15:09,410
availability solutions don't they they

00:15:07,010 --> 00:15:11,390
they don't give you the means that you

00:15:09,410 --> 00:15:14,480
never have to bother about these things

00:15:11,390 --> 00:15:16,520
again it's the other way around high

00:15:14,480 --> 00:15:18,830
availability helps you during an outage

00:15:16,520 --> 00:15:20,810
of one of those hosts if he's breaking

00:15:18,830 --> 00:15:23,660
down or something like that but during

00:15:20,810 --> 00:15:26,959
the day you'll always have to monitor it

00:15:23,660 --> 00:15:28,520
to be nice to your clusters just check

00:15:26,959 --> 00:15:32,630
if they are doing well and so on if you

00:15:28,520 --> 00:15:35,839
leave most of the cluster tools or

00:15:32,630 --> 00:15:37,580
replication tools alone sometimes you go

00:15:35,839 --> 00:15:41,180
berserk or breakdown or something like

00:15:37,580 --> 00:15:44,630
that so high availability normally

00:15:41,180 --> 00:15:48,340
brings more work to do then

00:15:44,630 --> 00:15:53,150
it just helps you to keep altitude short

00:15:48,340 --> 00:15:55,160
and a thing we have from my experience

00:15:53,150 --> 00:16:01,540
consider about having monitoring ghosts

00:15:55,160 --> 00:16:05,420
really autonomous very a lot of

00:16:01,540 --> 00:16:07,760
companies and now having the the policy

00:16:05,420 --> 00:16:11,330
of monitor effect realizing everything

00:16:07,760 --> 00:16:13,820
they have but maybe you want an outside

00:16:11,330 --> 00:16:16,790
view what if your virtualization firm

00:16:13,820 --> 00:16:20,120
breaks down you might not be informed so

00:16:16,790 --> 00:16:25,360
have maybe have monitoring on hardware

00:16:20,120 --> 00:16:27,770
with extra ups with an extra SMS modem

00:16:25,360 --> 00:16:30,230
directly attached to your monitoring

00:16:27,770 --> 00:16:32,030
host you might not have all of your

00:16:30,230 --> 00:16:41,710
monitoring rules this way but at least

00:16:32,030 --> 00:16:46,370
one another thing we arguing a lot and

00:16:41,710 --> 00:16:50,630
there's no right way to do it as well as

00:16:46,370 --> 00:16:56,300
with the monitoring about how to be

00:16:50,630 --> 00:17:00,170
monitoring your things we see a lot that

00:16:56,300 --> 00:17:04,960
people want to separate the OS from the

00:17:00,170 --> 00:17:08,000
services running on us the the Ops guys

00:17:04,960 --> 00:17:10,610
just want to be informed if something

00:17:08,000 --> 00:17:12,530
breaks down on the service if a disk

00:17:10,610 --> 00:17:14,540
runs fall or something like that and the

00:17:12,530 --> 00:17:16,250
application team doesn't want to know

00:17:14,540 --> 00:17:19,070
about it at all and the other way around

00:17:16,250 --> 00:17:22,100
but if you have more information it

00:17:19,070 --> 00:17:24,260
might really help with identifying

00:17:22,100 --> 00:17:27,110
what's going wrong if you can just get a

00:17:24,260 --> 00:17:30,530
mail that your database just went down

00:17:27,110 --> 00:17:32,450
you might start searching but just

00:17:30,530 --> 00:17:34,910
because you weren't informed that the

00:17:32,450 --> 00:17:37,370
disk on the same host is full but if we

00:17:34,910 --> 00:17:40,520
have I would have gotten that you just

00:17:37,370 --> 00:17:44,840
didn't have to search so think about if

00:17:40,520 --> 00:17:48,110
a hard separation about informing one

00:17:44,840 --> 00:17:50,840
team and only the other team might is

00:17:48,110 --> 00:17:53,270
the real is the real thing for you it's

00:17:50,840 --> 00:17:56,270
the same with which states to notify I

00:17:53,270 --> 00:17:57,680
see I see users that say ok I really

00:17:56,270 --> 00:18:00,650
want only

00:17:57,680 --> 00:18:02,750
want to have a notification when when a

00:18:00,650 --> 00:18:09,770
service is critical then check your

00:18:02,750 --> 00:18:11,810
plugins if critical is the output in the

00:18:09,770 --> 00:18:13,370
event you want to monitor not all

00:18:11,810 --> 00:18:16,870
plugins are written the same they're all

00:18:13,370 --> 00:18:19,340
from different authors and there's a bit

00:18:16,870 --> 00:18:21,320
divergence in interpretation but

00:18:19,340 --> 00:18:25,250
critical and warning and unknown means

00:18:21,320 --> 00:18:27,410
even if it's in the guidelines and don't

00:18:25,250 --> 00:18:29,240
flood your users with alarms these

00:18:27,410 --> 00:18:36,620
dependencies don't let's collect

00:18:29,240 --> 00:18:39,230
everything passive data just don't rely

00:18:36,620 --> 00:18:40,820
only on passive data if you get SNMP

00:18:39,230 --> 00:18:42,800
traps or locks or something like that

00:18:40,820 --> 00:18:44,330
it's a cool thing you get more

00:18:42,800 --> 00:18:46,820
information about your systems what's

00:18:44,330 --> 00:18:48,530
going on but if you don't get any

00:18:46,820 --> 00:18:54,640
information it could mean all as well or

00:18:48,530 --> 00:18:57,770
all is dead so use active checks then

00:18:54,640 --> 00:19:00,350
okay you're using a broke down

00:18:57,770 --> 00:19:03,320
it's not working something is going

00:19:00,350 --> 00:19:08,290
wrong you don't get any any new

00:19:03,320 --> 00:19:08,290
notifications why is it not working

00:19:11,320 --> 00:19:15,950
first thing we're here ok you have back

00:19:14,000 --> 00:19:19,400
we have a back wave back something broke

00:19:15,950 --> 00:19:22,330
down the singers broken sing as bad nope

00:19:19,400 --> 00:19:24,740
not all the time sometimes it is bugs

00:19:22,330 --> 00:19:27,170
but most of the times its configuration

00:19:24,740 --> 00:19:30,020
errors or monitoring the wrong things

00:19:27,170 --> 00:19:31,820
just to set before or someone didn't

00:19:30,020 --> 00:19:36,050
monitor the monitoring system and

00:19:31,820 --> 00:19:41,480
there's some something else and there

00:19:36,050 --> 00:19:44,390
lots of reason in tener parks so what

00:19:41,480 --> 00:19:48,230
configuration errors who's running using

00:19:44,390 --> 00:19:54,620
a - demon - C or - see every time they

00:19:48,230 --> 00:19:58,400
change something in the configuration ok

00:19:54,620 --> 00:20:00,710
ok at least some I believe the other

00:19:58,400 --> 00:20:04,960
ones have automation and neftis

00:20:00,710 --> 00:20:04,960
automated ok yeah ok ok

00:20:06,250 --> 00:20:10,700
you have the easing a check to check the

00:20:08,840 --> 00:20:13,279
configuration satellites but

00:20:10,700 --> 00:20:14,690
because through the confusing mechanism

00:20:13,279 --> 00:20:16,609
sometimes you might even break the

00:20:14,690 --> 00:20:18,499
configuration on the satellites that's a

00:20:16,609 --> 00:20:21,109
hard thing to achieve to break this but

00:20:18,499 --> 00:20:23,059
it's possible so you really want to do

00:20:21,109 --> 00:20:27,379
this check again

00:20:23,059 --> 00:20:30,409
one thing I often see especially with

00:20:27,379 --> 00:20:32,889
new users is it's bit tricky to find out

00:20:30,409 --> 00:20:36,259
on what note you're plucking is running

00:20:32,889 --> 00:20:41,330
so it singer says ok I have to run check

00:20:36,259 --> 00:20:44,119
disk to find out the the filling levels

00:20:41,330 --> 00:20:47,389
of a disk runs it on the master node and

00:20:44,119 --> 00:20:49,279
just believes that this plug-in might

00:20:47,389 --> 00:20:55,549
magically get it data from the other

00:20:49,279 --> 00:21:00,789
node so if you're new to singer try to

00:20:55,549 --> 00:21:05,359
get to get used to how you can can

00:21:00,789 --> 00:21:08,239
direct Verdi plug-in is run and use a

00:21:05,359 --> 00:21:11,629
singer to object list a lot if you're

00:21:08,239 --> 00:21:14,149
apply to what you what you need if the

00:21:11,629 --> 00:21:18,970
if your objects are really created that

00:21:14,149 --> 00:21:18,970
you that you need this is really helpful

00:21:22,840 --> 00:21:29,899
yeah running packets on wrong host on

00:21:26,350 --> 00:21:33,649
running checks this is that before that

00:21:29,899 --> 00:21:36,799
don't go critical if even if there is a

00:21:33,649 --> 00:21:39,139
critical outage so check what the

00:21:36,799 --> 00:21:49,249
outputs of your blocking in different

00:21:39,139 --> 00:21:51,470
events are yeah and there are there are

00:21:49,249 --> 00:21:54,590
some metrics from services which still

00:21:51,470 --> 00:21:58,279
might be ok even if the service doesn't

00:21:54,590 --> 00:22:00,409
work anymore so best best example maybe

00:21:58,279 --> 00:22:01,970
it's the web server again you have some

00:22:00,409 --> 00:22:04,269
some content management system in the

00:22:01,970 --> 00:22:09,049
background but your web servers still

00:22:04,269 --> 00:22:17,149
giving you 200 codes because it does

00:22:09,049 --> 00:22:19,700
serve something common problems on a

00:22:17,149 --> 00:22:21,649
single hosts disk running full broke

00:22:19,700 --> 00:22:22,489
database connection protein database

00:22:21,649 --> 00:22:25,050
replication

00:22:22,489 --> 00:22:28,980
these are all things we see

00:22:25,050 --> 00:22:33,780
they can all be mitigated by monitoring

00:22:28,980 --> 00:22:37,860
the monitoring hosts fully so you can

00:22:33,780 --> 00:22:38,700
can react and don't have to search where

00:22:37,860 --> 00:22:41,120
the problem is

00:22:38,700 --> 00:22:46,320
it's the same with high availability

00:22:41,120 --> 00:22:49,800
solutions that satellite sometimes yes

00:22:46,320 --> 00:22:52,560
sometimes the notification system breaks

00:22:49,800 --> 00:22:55,560
so the the mail server or something like

00:22:52,560 --> 00:23:00,210
that which forwards your messages break

00:22:55,560 --> 00:23:02,640
so you will want to have a redundant way

00:23:00,210 --> 00:23:07,350
of sending your notifications and with

00:23:02,640 --> 00:23:10,500
almost every service time it's I think

00:23:07,350 --> 00:23:13,110
it's 2017 but it's still a thing to tell

00:23:10,500 --> 00:23:16,410
people run ntp and all yourselves and

00:23:13,110 --> 00:23:21,990
monitor ntp if it's still running and so

00:23:16,410 --> 00:23:26,670
a lot of broken ntp daemons and that's

00:23:21,990 --> 00:23:28,800
really hard to debug it's not that hard

00:23:26,670 --> 00:23:30,390
but you don't think about it so you've

00:23:28,800 --> 00:23:33,830
searched for although for all the

00:23:30,390 --> 00:23:39,090
problems but don't consider network and

00:23:33,830 --> 00:23:41,220
time so but monitoring singer use some

00:23:39,090 --> 00:23:43,200
basic checks like with any other Linux

00:23:41,220 --> 00:23:46,860
host but focus on i/o and disk usage

00:23:43,200 --> 00:23:49,770
this the main problems we see on a

00:23:46,860 --> 00:23:52,410
single use the internal checks is singer

00:23:49,770 --> 00:23:56,340
to bring some internal plugins you can

00:23:52,410 --> 00:23:59,310
run them really often really fast I come

00:23:56,340 --> 00:24:01,980
to that again later then monitor all the

00:23:59,310 --> 00:24:03,900
services singer uses to run monitor via

00:24:01,980 --> 00:24:06,060
database the ideal connection to the

00:24:03,900 --> 00:24:10,590
database monitor your ever your web

00:24:06,060 --> 00:24:13,440
server and so on and as I said you'll

00:24:10,590 --> 00:24:17,130
want to have redundant ways of alerting

00:24:13,440 --> 00:24:22,820
SMS some messenger duty telegram

00:24:17,130 --> 00:24:25,500
what have you the internal singer check

00:24:22,820 --> 00:24:28,920
helps your checking if the current

00:24:25,500 --> 00:24:30,860
configuration is correct if using a code

00:24:28,920 --> 00:24:34,320
reload the current configuration

00:24:30,860 --> 00:24:36,420
especially useful on satellites you get

00:24:34,320 --> 00:24:38,360
a lot of performance data which help

00:24:36,420 --> 00:24:40,760
with debugging

00:24:38,360 --> 00:24:42,560
and it shows you the version so if you

00:24:40,760 --> 00:24:46,040
don't have some sort of software

00:24:42,560 --> 00:24:48,980
management on your notes you can use the

00:24:46,040 --> 00:24:50,600
check to show you which host is running

00:24:48,980 --> 00:24:56,360
which version of is Zynga and which you

00:24:50,600 --> 00:25:00,350
still have to upgrade the cluster check

00:24:56,360 --> 00:25:02,930
is is there to check if all known

00:25:00,350 --> 00:25:05,330
endpoints are connected so don't run it

00:25:02,930 --> 00:25:07,040
on a master with thousands of nodes

00:25:05,330 --> 00:25:08,720
connected to it because it will always

00:25:07,040 --> 00:25:13,520
be critical but run it on small

00:25:08,720 --> 00:25:15,920
satellites which just have a few nodes

00:25:13,520 --> 00:25:20,120
connected to cluster zone use it on

00:25:15,920 --> 00:25:22,580
parent hosts if the the adjacent nodes

00:25:20,120 --> 00:25:24,470
are connected so you see if your

00:25:22,580 --> 00:25:27,430
connection breaks if something gets

00:25:24,470 --> 00:25:30,740
between it if if your firewall blocks or

00:25:27,430 --> 00:25:35,450
if you have an error with the the

00:25:30,740 --> 00:25:38,150
connection it's really helpful yeah I do

00:25:35,450 --> 00:25:40,250
database check run it on every host that

00:25:38,150 --> 00:25:41,960
has an audio connection obviously I'm

00:25:40,250 --> 00:25:44,780
telling you about the I do check because

00:25:41,960 --> 00:25:47,030
it's relatively new we have lots of

00:25:44,780 --> 00:25:51,530
setups that started with a singer two

00:25:47,030 --> 00:25:53,150
O's is a to one and the the idea track

00:25:51,530 --> 00:25:55,370
is new and if you don't check your

00:25:53,150 --> 00:25:59,840
documentation regularly and don't read

00:25:55,370 --> 00:26:01,730
the release notes but I assume you all

00:25:59,840 --> 00:26:04,970
reading all the release notes of using

00:26:01,730 --> 00:26:06,740
ever and ok ok

00:26:04,970 --> 00:26:12,080
then you will know all about the I do

00:26:06,740 --> 00:26:14,390
check this is especially helpful with

00:26:12,080 --> 00:26:16,760
the with the performance data of the

00:26:14,390 --> 00:26:19,370
check especially pending various you see

00:26:16,760 --> 00:26:23,060
if your database can't keep up it's a

00:26:19,370 --> 00:26:25,880
very common problem that you have a slow

00:26:23,060 --> 00:26:28,550
database this is what Byrne talked about

00:26:25,880 --> 00:26:31,100
with the single DB which might fix will

00:26:28,550 --> 00:26:33,650
have I really hope that this will fix

00:26:31,100 --> 00:26:36,920
the problem in big environments but we

00:26:33,650 --> 00:26:40,510
see medium it while environments where

00:26:36,920 --> 00:26:43,220
there's mysql or mariadb or Postgres

00:26:40,510 --> 00:26:47,540
installed with default values started

00:26:43,220 --> 00:26:49,970
with default this is really not the way

00:26:47,540 --> 00:26:51,870
you're going to run it on even a medium

00:26:49,970 --> 00:26:54,510
sized host singer as fast

00:26:51,870 --> 00:26:57,360
but your database has to keep up to do a

00:26:54,510 --> 00:27:00,059
bit of tuning for databases and at least

00:26:57,360 --> 00:27:04,919
run this I do check which shows you when

00:27:00,059 --> 00:27:07,500
the database isn't able to keep up and

00:27:04,919 --> 00:27:12,000
then check these services single users

00:27:07,500 --> 00:27:16,679
as I said before database there's two

00:27:12,000 --> 00:27:18,419
things you can check if you're a single

00:27:16,679 --> 00:27:21,360
host is able to connect to your database

00:27:18,419 --> 00:27:25,590
like with check MySQL a very basic check

00:27:21,360 --> 00:27:30,090
and then use another check to monitor

00:27:25,590 --> 00:27:31,730
all the internals of the database about

00:27:30,090 --> 00:27:34,230
bugs

00:27:31,730 --> 00:27:36,600
almost every time you see error messages

00:27:34,230 --> 00:27:39,029
you see log entries you see crash dumps

00:27:36,600 --> 00:27:43,529
you see using a failing or something

00:27:39,029 --> 00:27:46,770
like that it's just not bugs not that

00:27:43,529 --> 00:27:48,659
often occur just out of nothing you most

00:27:46,770 --> 00:27:52,260
of the time you have some hints that you

00:27:48,659 --> 00:27:55,649
hit the back so go to the the github to

00:27:52,260 --> 00:27:59,429
issues review if someone else hit this

00:27:55,649 --> 00:28:00,870
the same bug if not file a bug report

00:27:59,429 --> 00:28:05,760
try to reproduce this they have a

00:28:00,870 --> 00:28:07,230
current boxes and try to reproduce I've

00:28:05,760 --> 00:28:09,330
come to back back to that a little bit

00:28:07,230 --> 00:28:11,730
later and file a back report even have

00:28:09,330 --> 00:28:16,320
use even if you have a support contract

00:28:11,730 --> 00:28:23,730
why it's in a upcoming slide so but

00:28:16,320 --> 00:28:25,620
vagrant who knows background cool if you

00:28:23,730 --> 00:28:29,340
don't know it get to know it it's a

00:28:25,620 --> 00:28:31,799
really easy way to deploy the VMS just

00:28:29,340 --> 00:28:33,270
for testing and throw them away if you

00:28:31,799 --> 00:28:34,919
don't need them anymore and redeploy

00:28:33,270 --> 00:28:37,080
them and something like that you can

00:28:34,919 --> 00:28:42,570
very easily buy and build your own boxes

00:28:37,080 --> 00:28:46,440
and especially to DNS me he thanks he

00:28:42,570 --> 00:28:49,289
built he built in background boxes for

00:28:46,440 --> 00:28:52,440
different setups for for a singer

00:28:49,289 --> 00:28:55,289
singing note transfer Knowles other high

00:28:52,440 --> 00:28:57,659
availability things you can build you

00:28:55,289 --> 00:29:00,539
can just fire them up test something for

00:28:57,659 --> 00:29:04,020
them away so the most of the the

00:29:00,539 --> 00:29:05,760
problems are not OS specific the vector

00:29:04,020 --> 00:29:08,670
boxes are sent to as seven

00:29:05,760 --> 00:29:11,550
but if you run on TBN or a chain - or

00:29:08,670 --> 00:29:17,520
what have you you can use the boxes for

00:29:11,550 --> 00:29:20,600
most of the test as well then why is it

00:29:17,520 --> 00:29:24,570
not working one of the major things is

00:29:20,600 --> 00:29:27,300
sort out what sort of not working so you

00:29:24,570 --> 00:29:29,280
all know when someone tells you ok my

00:29:27,300 --> 00:29:31,380
system broke down so yeah what what did

00:29:29,280 --> 00:29:34,020
break down think about that before you

00:29:31,380 --> 00:29:36,150
before you try to get help to

00:29:34,020 --> 00:29:38,010
configuration checks to locks if using a

00:29:36,150 --> 00:29:40,230
- is not running if you have no no

00:29:38,010 --> 00:29:45,720
notification maybe the upstream tools

00:29:40,230 --> 00:29:47,520
are dead but locks collect them you will

00:29:45,720 --> 00:29:50,640
want to collect monitoring locks as well

00:29:47,520 --> 00:29:54,450
as others for elastics tech log stash

00:29:50,640 --> 00:29:56,070
rules are coming up if they are ready

00:29:54,450 --> 00:29:59,220
then we'll announce them in the net

00:29:56,070 --> 00:30:01,910
waste block maybe in using a block - for

00:29:59,220 --> 00:30:06,150
a log there are no rules but now but

00:30:01,910 --> 00:30:07,860
maybe the monetary locks just collect

00:30:06,150 --> 00:30:11,340
them button and check if there are any

00:30:07,860 --> 00:30:13,350
error messages in them you've seen in

00:30:11,340 --> 00:30:15,180
other talks some ways to integrate

00:30:13,350 --> 00:30:19,920
elastic stack and gray lock into a

00:30:15,180 --> 00:30:21,950
single use this use the debug clock very

00:30:19,920 --> 00:30:25,320
sparsely only if we really needed it

00:30:21,950 --> 00:30:25,860
produces a lot of i/o and fills your

00:30:25,320 --> 00:30:29,090
disk

00:30:25,860 --> 00:30:31,710
you see sing a bit for an even deeper

00:30:29,090 --> 00:30:38,000
look into a singer to see what's going

00:30:31,710 --> 00:30:44,010
on it helps your debugging and tuning

00:30:38,000 --> 00:30:46,740
but monitoring singer that's a really

00:30:44,010 --> 00:30:49,890
thorough article on the singer

00:30:46,740 --> 00:30:53,280
documentation you can click to it you

00:30:49,890 --> 00:30:55,530
don't have to write this link down there

00:30:53,280 --> 00:30:59,190
are lots of hints how to monitor using a

00:30:55,530 --> 00:31:02,880
host you might not have to implement all

00:30:59,190 --> 00:31:06,480
of them but at least the most important

00:31:02,880 --> 00:31:09,090
I just didn't want to type all the

00:31:06,480 --> 00:31:11,520
things on this website because it's it's

00:31:09,090 --> 00:31:16,020
really dynamic and it gets adapted a lot

00:31:11,520 --> 00:31:18,270
to newer versions so go there and go

00:31:16,020 --> 00:31:19,800
there back again after some updates

00:31:18,270 --> 00:31:24,480
maybe

00:31:19,800 --> 00:31:28,350
new things to consider prepare for

00:31:24,480 --> 00:31:30,809
complete loss of fissinger - so I have a

00:31:28,350 --> 00:31:34,860
way to inform you when a singer - is

00:31:30,809 --> 00:31:37,860
totally it down some users have people

00:31:34,860 --> 00:31:40,520
looking all the time at dashboards or

00:31:37,860 --> 00:31:45,270
using your web others use things like

00:31:40,520 --> 00:31:47,460
another monitoring tool or an extra

00:31:45,270 --> 00:31:50,790
using an instance running somewhere else

00:31:47,460 --> 00:31:54,630
or maybe on the network's web services

00:31:50,790 --> 00:31:57,030
or some SMS gateways they have a small

00:31:54,630 --> 00:32:01,040
monitoring solution which at least can

00:31:57,030 --> 00:32:01,040
tell you if a singer is still running

00:32:02,929 --> 00:32:09,780
very important we'd use oddities in your

00:32:06,450 --> 00:32:13,800
setup you know it's really flexible but

00:32:09,780 --> 00:32:16,080
don't stretch it so try to stick to

00:32:13,800 --> 00:32:18,120
standards as much as it gets

00:32:16,080 --> 00:32:21,210
you see official packages don't build

00:32:18,120 --> 00:32:24,630
your own it's possible to build your own

00:32:21,210 --> 00:32:26,580
packages but we see a lot of problems

00:32:24,630 --> 00:32:29,280
from that if you're busy only Europe

00:32:26,580 --> 00:32:30,750
might have the the correct versions of

00:32:29,280 --> 00:32:33,540
the libraries needed for building

00:32:30,750 --> 00:32:35,790
packages but vendors patch their

00:32:33,540 --> 00:32:37,950
libraries before they shape it and it

00:32:35,790 --> 00:32:39,840
might not be the same which was used

00:32:37,950 --> 00:32:44,490
when building on the build server so

00:32:39,840 --> 00:32:47,190
this is a thing hard to debug because

00:32:44,490 --> 00:32:49,830
you don't think about the the that

00:32:47,190 --> 00:32:53,420
someone replaced the packages and it

00:32:49,830 --> 00:32:56,820
might go well for months and then break

00:32:53,420 --> 00:32:59,550
so and use the certificates from reusing

00:32:56,820 --> 00:33:03,660
a CA or from a Papa CH as Leonard Taylor

00:32:59,550 --> 00:33:06,050
told us before but don't try to create

00:33:03,660 --> 00:33:08,820
certificates from your corporate

00:33:06,050 --> 00:33:11,400
certificate authority or something like

00:33:08,820 --> 00:33:13,590
that you don't have it don't really have

00:33:11,400 --> 00:33:17,070
any security benefit from that stick to

00:33:13,590 --> 00:33:24,240
those certificates and you'll save you a

00:33:17,070 --> 00:33:27,780
lot of trouble what can I do yeah if

00:33:24,240 --> 00:33:29,960
breakdowns but it breaks down you go

00:33:27,780 --> 00:33:32,880
normally like that

00:33:29,960 --> 00:33:35,160
trouble the shooting section of a singer

00:33:32,880 --> 00:33:37,590
I wanted to build it the whole talk

00:33:35,160 --> 00:33:40,470
about this but as you see came out a bit

00:33:37,590 --> 00:33:43,080
differently go to the documentation read

00:33:40,470 --> 00:33:46,440
the troubleshooting maybe before

00:33:43,080 --> 00:33:49,980
something breaks so you need so you know

00:33:46,440 --> 00:33:54,420
what where to look it's dynamic as well

00:33:49,980 --> 00:33:57,690
so review it from time to time as I said

00:33:54,420 --> 00:34:00,320
also run demon there see which I'm

00:33:57,690 --> 00:34:03,300
changing something use a version control

00:34:00,320 --> 00:34:06,900
for your configuration if you don't use

00:34:03,300 --> 00:34:13,410
something like director use get CVS or

00:34:06,900 --> 00:34:15,710
whatever then with your lock lock data

00:34:13,410 --> 00:34:19,260
if it breaks there are lots of

00:34:15,710 --> 00:34:20,790
meaningful lock entries in the singer

00:34:19,260 --> 00:34:26,190
when something breaks it tells you what

00:34:20,790 --> 00:34:28,860
to do and don't forget about the system

00:34:26,190 --> 00:34:30,720
locks so if a singer is not working it

00:34:28,860 --> 00:34:33,030
might not always be a problem with a

00:34:30,720 --> 00:34:37,050
singer but you might have a problem with

00:34:33,030 --> 00:34:38,420
your your discs or something with your

00:34:37,050 --> 00:34:41,610
network card or something like that

00:34:38,420 --> 00:34:44,880
review them I told you I'll tell you

00:34:41,610 --> 00:34:47,880
obvious things but it's thing we see a

00:34:44,880 --> 00:34:53,460
lot in in questions in different

00:34:47,880 --> 00:34:56,360
channels which can be fixed by this so

00:34:53,460 --> 00:34:59,760
said IO is the most common bottlenecks

00:34:56,360 --> 00:35:04,560
network might be an issue two out of

00:34:59,760 --> 00:35:06,540
memory is a thing misconfigured database

00:35:04,560 --> 00:35:09,630
host or something like that going out of

00:35:06,540 --> 00:35:17,460
memory and then the the service just

00:35:09,630 --> 00:35:21,270
dying with singing checks yeah test your

00:35:17,460 --> 00:35:25,070
plugins manually but running them on the

00:35:21,270 --> 00:35:29,760
on the command line if they really work

00:35:25,070 --> 00:35:33,480
but use the the e singer user run it as

00:35:29,760 --> 00:35:35,760
a single user because you're checking if

00:35:33,480 --> 00:35:37,500
using answer correct permissions but

00:35:35,760 --> 00:35:39,960
that's the obvious reason but there's

00:35:37,500 --> 00:35:41,760
another one some plugins it's very few

00:35:39,960 --> 00:35:43,320
plugins but some create log files

00:35:41,760 --> 00:35:45,570
temporary files and if you

00:35:43,320 --> 00:35:47,610
running from the wrong user you can't

00:35:45,570 --> 00:35:50,690
run it again as a single user because

00:35:47,610 --> 00:35:55,980
those files on write writable anymore

00:35:50,690 --> 00:36:02,160
and maybe you have a bit difference in

00:35:55,980 --> 00:36:03,750
in reality so check the configuration on

00:36:02,160 --> 00:36:09,180
your disk and check what is singer is

00:36:03,750 --> 00:36:11,280
seeing this is a very rare problem it

00:36:09,180 --> 00:36:12,770
has to do with with config reload

00:36:11,280 --> 00:36:18,210
problems or something

00:36:12,770 --> 00:36:20,430
there was once back long ago but if you

00:36:18,210 --> 00:36:23,460
really can't figure out what's going on

00:36:20,430 --> 00:36:25,890
try to check the configuration with the

00:36:23,460 --> 00:36:31,680
the check commands with object list and

00:36:25,890 --> 00:36:33,840
check the API question via the API for

00:36:31,680 --> 00:36:35,820
the current data because see the API

00:36:33,840 --> 00:36:37,620
knows what's really going on in the

00:36:35,820 --> 00:36:40,650
indie singer daemon and the

00:36:37,620 --> 00:36:48,330
configuration might not be the current

00:36:40,650 --> 00:36:52,530
version of of the configuration used for

00:36:48,330 --> 00:36:56,310
that create a color C file so you don't

00:36:52,530 --> 00:36:58,410
have to look for passwords or have to

00:36:56,310 --> 00:37:02,640
skip certificate authentic error

00:36:58,410 --> 00:37:06,150
authentication and so on I've never seen

00:37:02,640 --> 00:37:11,360
a color or C file at the customers does

00:37:06,150 --> 00:37:16,980
anyone use this ok hopefully you do

00:37:11,360 --> 00:37:22,110
after this so what can I get help if

00:37:16,980 --> 00:37:24,000
this is you when a singer breaks the

00:37:22,110 --> 00:37:26,370
discussion boards monocot monitoring

00:37:24,000 --> 00:37:29,640
portal there's mailing lists and their

00:37:26,370 --> 00:37:33,140
single partners of this channel can help

00:37:29,640 --> 00:37:36,620
most of them help really quickly so

00:37:33,140 --> 00:37:40,590
there's a lot of options and be prepared

00:37:36,620 --> 00:37:42,590
don't wait don't wait for for a singer

00:37:40,590 --> 00:37:46,140
to break down and then think about what

00:37:42,590 --> 00:37:50,820
where you can get help because commonly

00:37:46,140 --> 00:37:52,590
reactions is ok just headless chicken

00:37:50,820 --> 00:37:55,680
mode running around ok something is dead

00:37:52,590 --> 00:37:57,270
I don't know what to do fix this by

00:37:55,680 --> 00:37:59,760
having a disaster plans ready

00:37:57,270 --> 00:38:01,710
fix this but I have been rehearsing but

00:37:59,760 --> 00:38:03,840
doing tests by having all your account

00:38:01,710 --> 00:38:06,030
data where you need it it's the same

00:38:03,840 --> 00:38:07,800
what's my github account again you want

00:38:06,030 --> 00:38:09,540
to file any issue if I want to file a

00:38:07,800 --> 00:38:12,420
back report because you have a problem

00:38:09,540 --> 00:38:16,890
and you have to report it and then the

00:38:12,420 --> 00:38:20,850
search starts yeah it's again yes please

00:38:16,890 --> 00:38:22,700
yep but I've seen it a lot so keep your

00:38:20,850 --> 00:38:25,680
data where you need it

00:38:22,700 --> 00:38:27,900
another thing I hear a lot if I hit this

00:38:25,680 --> 00:38:29,850
problem then someone else went and the

00:38:27,900 --> 00:38:34,730
other one will surely file a bug report

00:38:29,850 --> 00:38:37,740
nope do it as quick as possible because

00:38:34,730 --> 00:38:41,060
you can help others and you get your

00:38:37,740 --> 00:38:44,790
help yourself as quick as possible and

00:38:41,060 --> 00:38:48,960
don't forget the singer team is always

00:38:44,790 --> 00:38:52,020
working to give users not too hard

00:38:48,960 --> 00:38:53,340
experience so if you say ok I didn't

00:38:52,020 --> 00:38:54,990
understand the documentation there's

00:38:53,340 --> 00:38:57,090
something wrong or them if you find a

00:38:54,990 --> 00:39:02,090
type or something like that you can file

00:38:57,090 --> 00:39:02,090
issues for changes in the documentation

00:39:04,130 --> 00:39:12,120
good thing is to get involved early

00:39:09,200 --> 00:39:13,830
become a regular reader and post on the

00:39:12,120 --> 00:39:16,020
boards and the lists become part of the

00:39:13,830 --> 00:39:19,050
community communicate with the people so

00:39:16,020 --> 00:39:21,000
you you get informed about parks when

00:39:19,050 --> 00:39:25,350
they come up you get informed about

00:39:21,000 --> 00:39:27,270
upcoming features and something like

00:39:25,350 --> 00:39:29,670
that you can help others you get really

00:39:27,270 --> 00:39:33,150
used to be using the support channels

00:39:29,670 --> 00:39:34,680
and you won't have to run around in

00:39:33,150 --> 00:39:37,950
headless chicken mode when something

00:39:34,680 --> 00:39:41,340
breaks you can contribute to a singer

00:39:37,950 --> 00:39:45,990
not only code but documentation what

00:39:41,340 --> 00:39:48,680
have you and this the next lever you can

00:39:45,990 --> 00:39:48,680
get on the team as well

00:39:50,190 --> 00:39:56,319
so if you can tribute it a lot and they

00:39:53,079 --> 00:39:58,719
said okay I want to be part of the team

00:39:56,319 --> 00:40:00,460
and you can ask for it you don't have to

00:39:58,719 --> 00:40:03,670
you can do all of the contributions even

00:40:00,460 --> 00:40:06,160
if you're not on the team and by far not

00:40:03,670 --> 00:40:08,380
every member of the team is a developer

00:40:06,160 --> 00:40:12,059
so we need all kinds of people who are

00:40:08,380 --> 00:40:15,849
really enthusiastic about it singer

00:40:12,059 --> 00:40:17,529
about support contract that's I think

00:40:15,849 --> 00:40:21,430
the only slide about it it's not a

00:40:17,529 --> 00:40:25,329
commercial a singer itself has no

00:40:21,430 --> 00:40:27,130
support contract it's it it's the

00:40:25,329 --> 00:40:30,119
partners who have that might be obvious

00:40:27,130 --> 00:40:32,950
to people around here in Germany but um

00:40:30,119 --> 00:40:35,650
we get a lot of requests on the singer

00:40:32,950 --> 00:40:37,809
team how can i buy and and support

00:40:35,650 --> 00:40:40,150
contract for a singer and then we refer

00:40:37,809 --> 00:40:43,119
to partners we have synchronized service

00:40:40,150 --> 00:40:50,950
levels so every partner has about a same

00:40:43,119 --> 00:40:53,170
SLA if you have to create if you find

00:40:50,950 --> 00:40:55,599
something that will need an issue create

00:40:53,170 --> 00:40:57,789
it yourself normally you can ask your

00:40:55,599 --> 00:40:59,259
partner to do it but I think it's a

00:40:57,789 --> 00:41:02,529
really good thing to do it yourself

00:40:59,259 --> 00:41:04,749
because the development in using a team

00:41:02,529 --> 00:41:07,059
always says if we have to call something

00:41:04,749 --> 00:41:09,940
we will need an issue for that if the

00:41:07,059 --> 00:41:14,259
user doesn't create it then someone else

00:41:09,940 --> 00:41:16,509
has so do it yourself and it's a good

00:41:14,259 --> 00:41:19,029
thing because you really get informed

00:41:16,509 --> 00:41:22,479
about changes in the in the issue early

00:41:19,029 --> 00:41:24,249
and you can provide more information the

00:41:22,479 --> 00:41:29,229
developers can ask you directly and it's

00:41:24,249 --> 00:41:33,249
not there's not the next drop you can

00:41:29,229 --> 00:41:35,259
get a reputation for filing for file for

00:41:33,249 --> 00:41:39,519
finding bugs and so on it's a cool thing

00:41:35,259 --> 00:41:43,420
to do then what information can operate

00:41:39,519 --> 00:41:45,910
beforehand when I have to file an issue

00:41:43,420 --> 00:41:48,239
or open a ticket with some support

00:41:45,910 --> 00:41:51,389
partners

00:41:48,239 --> 00:41:53,189
review the documentation again in the

00:41:51,389 --> 00:41:55,199
troubleshooting section there's a lot

00:41:53,189 --> 00:42:00,419
about what information you have to

00:41:55,199 --> 00:42:02,279
provide but here are the most important

00:42:00,419 --> 00:42:05,159
bits what did you expect explaining is

00:42:02,279 --> 00:42:11,039
singular - what did missing a - that's

00:42:05,159 --> 00:42:14,969
not always as obvious as it sounds so in

00:42:11,039 --> 00:42:17,009
support we often ask ok what tells you

00:42:14,969 --> 00:42:22,199
that is singing isn't working you say

00:42:17,009 --> 00:42:25,169
it's not working so why so this is a a

00:42:22,199 --> 00:42:28,079
crucial part to tell the people that

00:42:25,169 --> 00:42:30,779
should help you what you did you can

00:42:28,079 --> 00:42:32,599
expect to do then information about your

00:42:30,779 --> 00:42:36,179
setup do we have high availability

00:42:32,599 --> 00:42:38,429
cluster what features are activated what

00:42:36,179 --> 00:42:41,309
database is this highly available

00:42:38,429 --> 00:42:44,399
something like that configuration - you

00:42:41,309 --> 00:42:46,649
use director to use the API there's so

00:42:44,399 --> 00:42:49,739
many different leasing setups you might

00:42:46,649 --> 00:42:51,569
all think your setup is the only way to

00:42:49,739 --> 00:42:52,409
go but there are really really a lot of

00:42:51,569 --> 00:42:55,169
different setups

00:42:52,409 --> 00:42:55,979
do you have satellites how many are they

00:42:55,169 --> 00:42:58,709
highly available

00:42:55,979 --> 00:43:00,179
what agents do you use what operating

00:42:58,709 --> 00:43:02,789
systems are running the are they running

00:43:00,179 --> 00:43:06,449
which crevo we had some problems with

00:43:02,789 --> 00:43:08,819
crevice in - 7 when the connection got a

00:43:06,449 --> 00:43:14,089
bit slow so it was a really important

00:43:08,819 --> 00:43:16,259
hint for debugging the environment which

00:43:14,089 --> 00:43:18,179
operating systems are you running what

00:43:16,259 --> 00:43:20,279
software versus do you have ends on

00:43:18,179 --> 00:43:23,369
virtualization is it an out race it

00:43:20,279 --> 00:43:26,279
virtualized the obvious things but yeah

00:43:23,369 --> 00:43:30,029
we asked we have to ask them a lot do we

00:43:26,279 --> 00:43:31,619
have any oddities not no certificates

00:43:30,029 --> 00:43:34,139
from the singers here or something like

00:43:31,619 --> 00:43:38,819
that custom-built packages but there's

00:43:34,139 --> 00:43:43,759
help you can automate this maybe in the

00:43:38,819 --> 00:43:46,979
future not right now there's a script

00:43:43,759 --> 00:43:54,409
right now it's in my github account but

00:43:46,979 --> 00:43:54,409
I try to move it as soon as possible

00:43:54,829 --> 00:44:01,109
because this this was just a quick hack

00:43:57,599 --> 00:44:01,829
after some support session the idea was

00:44:01,109 --> 00:44:03,719
to have a screen

00:44:01,829 --> 00:44:06,150
that gave us all the the necessary

00:44:03,719 --> 00:44:09,209
information for someone who had to help

00:44:06,150 --> 00:44:11,459
you without overwhelming the people you

00:44:09,209 --> 00:44:14,999
could just give someone the whole

00:44:11,459 --> 00:44:17,400
configuration and it didn't even contain

00:44:14,999 --> 00:44:22,799
all the data needed and information

00:44:17,400 --> 00:44:25,289
there is hard to find so this is from

00:44:22,799 --> 00:44:27,479
preview version it's just running on a

00:44:25,289 --> 00:44:30,950
host it's telling you the basics what

00:44:27,479 --> 00:44:34,109
what operating system how much memory

00:44:30,950 --> 00:44:35,940
what packages are they signed by the

00:44:34,109 --> 00:44:39,450
singer key

00:44:35,940 --> 00:44:43,170
what words active ends one it's not

00:44:39,450 --> 00:44:44,609
production ready but we hope to get it

00:44:43,170 --> 00:44:55,229
out as soon as possible

00:44:44,609 --> 00:44:58,380
and because Mayhew dictates me to no no

00:44:55,229 --> 00:45:01,109
the pictures gone if you've been in the

00:44:58,380 --> 00:45:03,239
the previous talk there was a big nice

00:45:01,109 --> 00:45:07,099
picture of the new layout of ta singer

00:45:03,239 --> 00:45:11,249
to book that's coming in second edition

00:45:07,099 --> 00:45:14,969
which should include a troubleshooting

00:45:11,249 --> 00:45:18,959
section and we are still trying to get

00:45:14,969 --> 00:45:21,209
an English version so we get that a lot

00:45:18,959 --> 00:45:23,420
west English version okay with almost

00:45:21,209 --> 00:45:26,910
all people to learn German or Austrian

00:45:23,420 --> 00:45:29,989
it's a nice thing both the ball both

00:45:26,910 --> 00:45:34,039
playing interest works with the book but

00:45:29,989 --> 00:45:38,089
yeah there will be an English version

00:45:34,039 --> 00:45:43,369
maybe not for sure but very probably

00:45:38,089 --> 00:45:43,369
okay any questions

00:45:50,329 --> 00:45:56,069
so yeah I don't have a question actually

00:45:52,650 --> 00:45:57,509
I maybe I have an addition that came

00:45:56,069 --> 00:46:00,690
into my mind while listening to your

00:45:57,509 --> 00:46:02,849
talk file beat six that Oh was released

00:46:00,690 --> 00:46:06,599
currently and it has a

00:46:02,849 --> 00:46:10,529
Eisinger module built in which will read

00:46:06,599 --> 00:46:12,209
and parse the icinga log files so what

00:46:10,529 --> 00:46:15,779
you have to do is just start file beat

00:46:12,209 --> 00:46:17,759
and enable the icinga module and you

00:46:15,779 --> 00:46:20,400
will get parsed Eisinger log files into

00:46:17,759 --> 00:46:21,269
your elasticsearch and Cabana yes I

00:46:20,400 --> 00:46:35,339
forgot about that

00:46:21,269 --> 00:46:37,739
me too so no questions I tried to make

00:46:35,339 --> 00:46:39,869
it quick because it was the last talk on

00:46:37,739 --> 00:46:42,749
on the day and I'm very thankful that

00:46:39,869 --> 00:46:44,849
you all stayed here with me so maybe

00:46:42,749 --> 00:46:51,000
it's a good thing to release people

00:46:44,849 --> 00:46:58,980
early okay thank you

00:46:51,000 --> 00:46:58,980

YouTube URL: https://www.youtube.com/watch?v=L59FCcOXykE


