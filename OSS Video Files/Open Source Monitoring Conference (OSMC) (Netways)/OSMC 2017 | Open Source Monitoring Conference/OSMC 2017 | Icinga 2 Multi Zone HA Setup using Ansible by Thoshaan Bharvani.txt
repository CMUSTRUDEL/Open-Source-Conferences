Title: OSMC 2017 | Icinga 2 Multi Zone HA Setup using Ansible by Thoshaan Bharvani
Publication date: 2017-12-05
Playlist: OSMC 2017 | Open Source Monitoring Conference
Description: 
	This presentation demonstrates how to use Ansible to deploy Icinga2 in a Multi Zone, Distributed, High Available method.. The presentation demonstrates how to install a virtual machines as a HA master system. It will also show how to install Icinga2 as an zone master with all features available on the zone masters. The last step is to install Icinga2 as an agents on the end nodes. it needs to monitor.
Captions: 
	00:00:09,780 --> 00:00:15,750
welcome back from lunch I hope you had a

00:00:12,300 --> 00:00:18,900
great meal and we start with our evening

00:00:15,750 --> 00:00:22,349
afternoon drag now I'm our next speaker

00:00:18,900 --> 00:00:24,470
is from Antwerp in Belgium and he's

00:00:22,349 --> 00:00:29,039
involved in a lot of open source

00:00:24,470 --> 00:00:33,090
projects and communities he's talking

00:00:29,039 --> 00:00:35,820
about he tells us how to deploy a multi

00:00:33,090 --> 00:00:39,890
zone is singer H a setup with ansible

00:00:35,820 --> 00:00:43,730
um his name is Tasha and Bhavani and

00:00:39,890 --> 00:00:43,730
give him a warm welcome please

00:00:47,030 --> 00:00:53,879
so yeah I'll be talking today about

00:00:49,440 --> 00:00:58,050
deploying I singer to true ansible my

00:00:53,879 --> 00:01:01,829
setup is a multi zone mostly the H a

00:00:58,050 --> 00:01:04,250
part is recently been added the multi

00:01:01,829 --> 00:01:06,509
zone is because I'm a self-employed

00:01:04,250 --> 00:01:08,580
consultant so my customers want to see

00:01:06,509 --> 00:01:12,869
their own view but I need to see the

00:01:08,580 --> 00:01:16,890
view of multiple customers of course so

00:01:12,869 --> 00:01:21,330
yeah I'm from Antwerp Belgium I do some

00:01:16,890 --> 00:01:23,820
consulting I like to work on stuff that

00:01:21,330 --> 00:01:27,750
open source but I do also some of the

00:01:23,820 --> 00:01:30,210
non open source stuff I do windows also

00:01:27,750 --> 00:01:35,159
once in a while because we have to not

00:01:30,210 --> 00:01:37,140
because you want to I have been involved

00:01:35,159 --> 00:01:39,900
with configuration management for a

00:01:37,140 --> 00:01:43,860
while now I help run a few conferences

00:01:39,900 --> 00:01:48,930
about that I have a Twitter handle and a

00:01:43,860 --> 00:01:50,820
blog I don't do much with that so of

00:01:48,930 --> 00:01:54,180
course we'll talk about monitoring given

00:01:50,820 --> 00:01:56,130
that it's a monitoring conference I will

00:01:54,180 --> 00:01:59,490
be also talking about automation in this

00:01:56,130 --> 00:02:01,500
case ansible as a configuration

00:01:59,490 --> 00:02:04,140
management tool and as an orchestration

00:02:01,500 --> 00:02:06,210
tool so it depends if you already have

00:02:04,140 --> 00:02:08,700
another configuration management tool

00:02:06,210 --> 00:02:10,200
you can actually integrate with that so

00:02:08,700 --> 00:02:13,079
there are many people using puppet and

00:02:10,200 --> 00:02:17,000
announce table on top of that if you are

00:02:13,079 --> 00:02:20,430
very daring you might want to try MGMT

00:02:17,000 --> 00:02:21,930
but given that we run things in

00:02:20,430 --> 00:02:23,230
production we're not going to use that

00:02:21,930 --> 00:02:24,430
yet

00:02:23,230 --> 00:02:26,470
then I'll be going over the

00:02:24,430 --> 00:02:30,879
configurations normally I had a demo

00:02:26,470 --> 00:02:34,780
plant but given the very good internet I

00:02:30,879 --> 00:02:37,629
will not be daring myself on that I

00:02:34,780 --> 00:02:39,340
actually tried during the lunch break to

00:02:37,629 --> 00:02:45,010
see if I could get a better connection

00:02:39,340 --> 00:02:46,840
but it's now so I'll be using a few well

00:02:45,010 --> 00:02:49,989
I've taken out the demo slides and I've

00:02:46,840 --> 00:02:52,629
replaced them with the standard slides

00:02:49,989 --> 00:02:54,430
and I'll try to explain them if you have

00:02:52,629 --> 00:02:59,349
any questions in between just raise your

00:02:54,430 --> 00:03:01,540
hand or shout them out so monitoring a

00:02:59,349 --> 00:03:04,959
long time ago monitoring was very

00:03:01,540 --> 00:03:08,069
complicated if you had to monitor things

00:03:04,959 --> 00:03:13,180
you had to manually understand these

00:03:08,069 --> 00:03:15,640
devices and the tools have evolved

00:03:13,180 --> 00:03:16,900
machines have evolved nodes have evolved

00:03:15,640 --> 00:03:19,540
that we can actually monitor today

00:03:16,900 --> 00:03:21,459
everything like many people have said

00:03:19,540 --> 00:03:23,920
today you can actually monitor whether

00:03:21,459 --> 00:03:26,200
there's water still in that bottle or

00:03:23,920 --> 00:03:27,880
not because there are sensors that can

00:03:26,200 --> 00:03:31,269
actually tell you what the level of that

00:03:27,880 --> 00:03:33,099
water in the bottle is if you would have

00:03:31,269 --> 00:03:34,720
asked that about 10 years ago or 15

00:03:33,099 --> 00:03:40,120
years ago that would have been much more

00:03:34,720 --> 00:03:43,780
complicated I'll go through some of the

00:03:40,120 --> 00:03:45,970
history so we are in Germany I don't

00:03:43,780 --> 00:03:50,889
know if I'm allowed to say the word but

00:03:45,970 --> 00:03:52,299
anyway it's well known most people who

00:03:50,889 --> 00:03:58,389
have been a long time in the business

00:03:52,299 --> 00:04:01,690
have used this and if you still have to

00:03:58,389 --> 00:04:04,690
use it for some political reason yes it

00:04:01,690 --> 00:04:07,030
might be a solution then you have the

00:04:04,690 --> 00:04:10,959
fog I think I'm talking about I sing a

00:04:07,030 --> 00:04:14,310
one then which had actually fog but the

00:04:10,959 --> 00:04:17,919
graphical console was much better

00:04:14,310 --> 00:04:20,410
initially and towards the end they

00:04:17,919 --> 00:04:23,020
noticed that the scalability was not

00:04:20,410 --> 00:04:26,949
able to scale that well and then

00:04:23,020 --> 00:04:29,500
therefore I singer too came for those

00:04:26,949 --> 00:04:32,409
people who like Python there is a

00:04:29,500 --> 00:04:35,889
project called shinken I also use that

00:04:32,409 --> 00:04:38,949
for a while and it promises you the the

00:04:35,889 --> 00:04:41,919
the full solution its multi-zone

00:04:38,949 --> 00:04:46,379
distributed it's highly available so it

00:04:41,919 --> 00:04:49,210
claims and it can do everything about

00:04:46,379 --> 00:04:51,460
500,000 nodes they say so for a simple

00:04:49,210 --> 00:04:54,819
person like myself who only has 2000 I

00:04:51,460 --> 00:04:57,099
think okay that should be good but I'll

00:04:54,819 --> 00:05:02,159
go into detail why that doesn't work

00:04:57,099 --> 00:05:07,720
well I sing at 2 which is distributed

00:05:02,159 --> 00:05:10,360
scalable n hive highly available I gave

00:05:07,720 --> 00:05:13,240
a similar talk I think 2-3 years ago on

00:05:10,360 --> 00:05:16,449
I sing I camp Amsterdam and at that time

00:05:13,240 --> 00:05:17,949
I was still using n RPE and one of the

00:05:16,449 --> 00:05:20,199
net waste guys told me that why don't

00:05:17,949 --> 00:05:23,199
you change in RPE because it's not very

00:05:20,199 --> 00:05:27,190
secure it's not very flexible and use

00:05:23,199 --> 00:05:30,190
icing as a client and so at that point I

00:05:27,190 --> 00:05:32,590
moved to using icing a2 as the client

00:05:30,190 --> 00:05:35,409
and today you can have everything

00:05:32,590 --> 00:05:37,210
securely set up with SSL certificates

00:05:35,409 --> 00:05:39,280
which get distributed automatically even

00:05:37,210 --> 00:05:43,419
and which you can sign and get

00:05:39,280 --> 00:05:47,259
everything done properly so coming back

00:05:43,419 --> 00:05:51,669
to Shinken it's says there that you have

00:05:47,259 --> 00:05:54,250
a user and it works with this concept of

00:05:51,669 --> 00:05:55,930
an arbiter which is basically your

00:05:54,250 --> 00:05:58,029
management node where you will put all

00:05:55,930 --> 00:06:00,130
your configuration in and that arbiter

00:05:58,029 --> 00:06:05,620
will then distribute that over your

00:06:00,130 --> 00:06:09,810
whole setup now it's good if you need to

00:06:05,620 --> 00:06:12,550
let's say compiled about 20,000 services

00:06:09,810 --> 00:06:15,159
and it might even work if you have a

00:06:12,550 --> 00:06:21,039
little bit more but to do that it

00:06:15,159 --> 00:06:22,930
compiles it into a special binary format

00:06:21,039 --> 00:06:26,800
so that it can distribute that to all

00:06:22,930 --> 00:06:29,919
its hosts if you know python and trying

00:06:26,800 --> 00:06:33,599
to compile stuff in binary mode with

00:06:29,919 --> 00:06:38,259
multi-threading it's a big problem and

00:06:33,599 --> 00:06:39,879
so you had to actually subdivide or have

00:06:38,259 --> 00:06:42,659
multiple arbiters but then if you had

00:06:39,879 --> 00:06:46,509
multiple arbiters and you put a specific

00:06:42,659 --> 00:06:48,460
VM in two arbiters it would actually

00:06:46,509 --> 00:06:49,510
give you a conflict which means that

00:06:48,460 --> 00:06:52,360
you're not really highly

00:06:49,510 --> 00:06:53,800
available because the the product or the

00:06:52,360 --> 00:06:55,390
solution should be able to figure out

00:06:53,800 --> 00:06:57,400
that okay this node is already mentioned

00:06:55,390 --> 00:07:01,480
somewhere else I don't need to do that

00:06:57,400 --> 00:07:04,330
again then you had another problem that

00:07:01,480 --> 00:07:06,490
you have schedulers and Polar's Polar's

00:07:04,330 --> 00:07:09,460
are basically the ones which get the

00:07:06,490 --> 00:07:11,500
data from your notes and then send them

00:07:09,460 --> 00:07:13,150
to the schedulers which will then send

00:07:11,500 --> 00:07:16,900
them to the brokers and then you get

00:07:13,150 --> 00:07:19,180
your data back into the main system if

00:07:16,900 --> 00:07:22,720
one of these schedulers were out of

00:07:19,180 --> 00:07:25,690
order your poehler would still do

00:07:22,720 --> 00:07:28,240
whatever it was supposed to do for X

00:07:25,690 --> 00:07:29,770
amount of time and would then die then

00:07:28,240 --> 00:07:32,590
if the scheduler came back up you

00:07:29,770 --> 00:07:37,180
couldn't get the power back if you lost

00:07:32,590 --> 00:07:40,210
a broker for more than a day for

00:07:37,180 --> 00:07:43,150
instance it wouldn't be able to connect

00:07:40,210 --> 00:07:45,610
to any of them if you did any arbiter

00:07:43,150 --> 00:07:46,690
updates while brokers were down you

00:07:45,610 --> 00:07:49,750
could actually lose whole your

00:07:46,690 --> 00:07:52,990
infrastructure so while I was running

00:07:49,750 --> 00:07:54,970
this in testing it worked well once we

00:07:52,990 --> 00:07:57,340
went to pre-production not yet full

00:07:54,970 --> 00:08:00,910
production we actually experienced a lot

00:07:57,340 --> 00:08:03,190
of problems we lost data but of course

00:08:00,910 --> 00:08:06,640
it's monitoring data and metrics it's

00:08:03,190 --> 00:08:09,580
not that you lose your business but it's

00:08:06,640 --> 00:08:12,910
not something I would recommend however

00:08:09,580 --> 00:08:15,220
from this part I was able to set up what

00:08:12,910 --> 00:08:17,740
they call realms and I sing a - it's

00:08:15,220 --> 00:08:20,890
called zones and that concept is

00:08:17,740 --> 00:08:22,840
actually quite nice and it's similar to

00:08:20,890 --> 00:08:25,810
what I singer - does that you can

00:08:22,840 --> 00:08:30,820
actually create a zone and within that

00:08:25,810 --> 00:08:32,890
zone do the full monitoring independent

00:08:30,820 --> 00:08:37,000
from any other zone or from your master

00:08:32,890 --> 00:08:41,800
zone and you could even write to a

00:08:37,000 --> 00:08:44,200
global database or to a global realm and

00:08:41,800 --> 00:08:47,770
at that point you would be able to see

00:08:44,200 --> 00:08:50,080
all the the sub realms or you would be

00:08:47,770 --> 00:08:52,570
able to exclude specific things which

00:08:50,080 --> 00:08:55,360
when shinken came out I think I wasn't

00:08:52,570 --> 00:08:58,570
able to do that yet so it was a nice

00:08:55,360 --> 00:09:02,290
design and we learned a lot from from

00:08:58,570 --> 00:09:03,400
migrating to this but like I said there

00:09:02,290 --> 00:09:05,680
were too many problems

00:09:03,400 --> 00:09:08,710
so we were looking for well I was

00:09:05,680 --> 00:09:10,180
looking for something else and at that

00:09:08,710 --> 00:09:12,130
time Bernd had mentioned that they were

00:09:10,180 --> 00:09:13,450
working on my singer - which would

00:09:12,130 --> 00:09:15,910
actually be able to do everything that

00:09:13,450 --> 00:09:19,390
Shinken does and be fully highly

00:09:15,910 --> 00:09:22,900
available so I started looking at it and

00:09:19,390 --> 00:09:25,270
if you see the initial setup is if

00:09:22,900 --> 00:09:26,740
you're a single organization it would be

00:09:25,270 --> 00:09:28,720
something like this where you could

00:09:26,740 --> 00:09:32,040
actually subdivide all the components

00:09:28,720 --> 00:09:35,770
and by making all the components

00:09:32,040 --> 00:09:37,810
dividable you can actually change some

00:09:35,770 --> 00:09:40,380
of these components so there are people

00:09:37,810 --> 00:09:42,700
who will still be using PMP for nagios

00:09:40,380 --> 00:09:45,160
but there are better ways in the

00:09:42,700 --> 00:09:47,230
meanwhile to do that you can use carbon

00:09:45,160 --> 00:09:49,750
you can use Prometheus you can use in

00:09:47,230 --> 00:09:51,870
flux DB so depending on what you want

00:09:49,750 --> 00:09:54,760
you could actually use a different graph

00:09:51,870 --> 00:09:57,550
I have not seen many people use

00:09:54,760 --> 00:09:58,900
different checks but they if you write

00:09:57,550 --> 00:10:00,670
your own checking system you can

00:09:58,900 --> 00:10:04,029
actually do different types of checks

00:10:00,670 --> 00:10:05,589
you don't even need to run the icinga

00:10:04,029 --> 00:10:07,779
web if you don't need a web interface

00:10:05,589 --> 00:10:09,730
because many of the things are available

00:10:07,779 --> 00:10:12,339
on the command line also so if you

00:10:09,730 --> 00:10:14,709
execute the icinga to CLI you can

00:10:12,339 --> 00:10:18,630
actually get a lot of data from there so

00:10:14,709 --> 00:10:24,330
it made it more flexible in that sense

00:10:18,630 --> 00:10:24,330
now coming back to the zones and the

00:10:24,720 --> 00:10:30,190
customers we wanted to have each

00:10:27,490 --> 00:10:31,990
customer in a separate zone so that in

00:10:30,190 --> 00:10:34,510
that zone they would be able to have a

00:10:31,990 --> 00:10:37,060
specific icinga web for themselves

00:10:34,510 --> 00:10:38,740
you could even team it for that specific

00:10:37,060 --> 00:10:41,770
customer that he logs in and he sees his

00:10:38,740 --> 00:10:43,990
name and only his nodes in there

00:10:41,770 --> 00:10:46,150
but all that data can be also sent back

00:10:43,990 --> 00:10:48,820
to the master and on the master you can

00:10:46,150 --> 00:10:51,490
have all that data also so if one of the

00:10:48,820 --> 00:10:53,709
satellite zones goes out you would still

00:10:51,490 --> 00:10:56,020
be able to provide historical data from

00:10:53,709 --> 00:10:59,170
that it means of course that you're

00:10:56,020 --> 00:11:01,000
storing the same data twice also but

00:10:59,170 --> 00:11:03,520
that's a choice you need to make what

00:11:01,000 --> 00:11:06,010
you want if you don't start in the

00:11:03,520 --> 00:11:08,650
master zone then if the satellite zone

00:11:06,010 --> 00:11:11,110
goes out then yeah you lose that data

00:11:08,650 --> 00:11:13,270
also depends what you want but it meant

00:11:11,110 --> 00:11:17,360
that you had full flexibility and that

00:11:13,270 --> 00:11:19,910
it's really distributed now

00:11:17,360 --> 00:11:23,660
in this setup there's still one problem

00:11:19,910 --> 00:11:25,160
if your master goes out you still want

00:11:23,660 --> 00:11:28,220
to actually get data because you

00:11:25,160 --> 00:11:30,610
typically have enough machines to to put

00:11:28,220 --> 00:11:34,160
up a second node or even a third node

00:11:30,610 --> 00:11:36,290
and that's where the active active or

00:11:34,160 --> 00:11:38,230
the active failover comes in and so you

00:11:36,290 --> 00:11:42,769
could have multiple masters in a zone

00:11:38,230 --> 00:11:47,230
and each of these masters will delegate

00:11:42,769 --> 00:11:50,390
well no will elect a primary master

00:11:47,230 --> 00:11:52,160
which is active and then if that active

00:11:50,390 --> 00:11:54,320
master goes out it will actually allow

00:11:52,160 --> 00:11:58,370
one of the fail overs to be elected as a

00:11:54,320 --> 00:12:01,790
master and at this point you actually

00:11:58,370 --> 00:12:03,350
have a fully Heil available zone or a

00:12:01,790 --> 00:12:10,810
master zone depending on how you want to

00:12:03,350 --> 00:12:10,810
set it up are any questions

00:12:14,230 --> 00:12:21,320
so for automation I use ansible I don't

00:12:18,290 --> 00:12:22,610
know I will go over the basics given

00:12:21,320 --> 00:12:24,529
that I'm not sure if everybody knows

00:12:22,610 --> 00:12:26,870
what it is but it's basically

00:12:24,529 --> 00:12:30,829
configuration management / orchestration

00:12:26,870 --> 00:12:32,360
- if you want to be really lazy you can

00:12:30,829 --> 00:12:39,260
actually use it as a remote execution

00:12:32,360 --> 00:12:41,959
tool and it's based on Python - its

00:12:39,260 --> 00:12:45,260
server based as in you have a management

00:12:41,959 --> 00:12:47,060
node from which you will execute so it

00:12:45,260 --> 00:12:52,670
follows the orchestration type of

00:12:47,060 --> 00:12:54,890
network layout it uses SSH or if you

00:12:52,670 --> 00:12:59,930
really want to use Windows it uses win

00:12:54,890 --> 00:13:02,180
RM it's based on host information by

00:12:59,930 --> 00:13:06,380
default if you just download it it would

00:13:02,180 --> 00:13:08,360
use a flat file but if that host file is

00:13:06,380 --> 00:13:10,220
a script it will actually execute the

00:13:08,360 --> 00:13:15,279
script and as long as it gets some JSON

00:13:10,220 --> 00:13:18,230
it will be able to run those commands it

00:13:15,279 --> 00:13:20,180
it executes a specific task which is

00:13:18,230 --> 00:13:23,209
written in a playbook which is an app

00:13:20,180 --> 00:13:26,750
which can be abstracted in a role so

00:13:23,209 --> 00:13:30,420
I've written a few roles for I think are

00:13:26,750 --> 00:13:34,480
- the links will be at the end there

00:13:30,420 --> 00:13:36,190
now a roll is basically a set of tasks

00:13:34,480 --> 00:13:38,070
there are also some variables you can

00:13:36,190 --> 00:13:40,660
define within the role and handlers

00:13:38,070 --> 00:13:44,560
handlers is for instance you add a new

00:13:40,660 --> 00:13:46,840
note it's a change state because the

00:13:44,560 --> 00:13:49,420
note is new therefore it needs to add it

00:13:46,840 --> 00:13:52,240
to the master and it needs to restart if

00:13:49,420 --> 00:13:55,150
you would execute that again because

00:13:52,240 --> 00:13:57,160
ansible is idempotent it wouldn't do any

00:13:55,150 --> 00:13:59,290
changes it would just see that okay it

00:13:57,160 --> 00:14:02,650
already exists and won't do a restart of

00:13:59,290 --> 00:14:07,420
icing ever on that point of course you

00:14:02,650 --> 00:14:10,570
could use the API and dynamically add

00:14:07,420 --> 00:14:14,340
hosts I don't do that because I have

00:14:10,570 --> 00:14:17,710
files that get generated from my

00:14:14,340 --> 00:14:20,380
inventory and my inventory is how I

00:14:17,710 --> 00:14:22,930
create VMs so it depends if you create

00:14:20,380 --> 00:14:25,390
VMs through all your users great VMs

00:14:22,930 --> 00:14:26,650
through a management interface you

00:14:25,390 --> 00:14:28,540
wouldn't want that you could actually

00:14:26,650 --> 00:14:31,000
have the management interface talk to

00:14:28,540 --> 00:14:32,050
the API directly but that depends on

00:14:31,000 --> 00:14:34,600
what situation you are in

00:14:32,050 --> 00:14:39,100
I have their two remarks so you need to

00:14:34,600 --> 00:14:43,300
have SSH of nrm answer book can do API

00:14:39,100 --> 00:14:44,890
calls today also and to run the full

00:14:43,300 --> 00:14:47,980
ansible set you need to have peyten

00:14:44,890 --> 00:14:51,870
installed on the node you want to

00:14:47,980 --> 00:14:56,200
connect to to run the full modules

00:14:51,870 --> 00:14:58,300
that's a more graphical overview it

00:14:56,200 --> 00:15:00,450
comes with a specific set of module

00:14:58,300 --> 00:15:03,070
libraries which today are very extensive

00:15:00,450 --> 00:15:05,710
you can actually manage your cisco and

00:15:03,070 --> 00:15:09,580
your juniper switches with them you can

00:15:05,710 --> 00:15:14,020
manage most of the common ite hardware /

00:15:09,580 --> 00:15:16,090
software that is out there and if it

00:15:14,020 --> 00:15:17,650
doesn't exist you could in worst case

00:15:16,090 --> 00:15:23,110
write a small script that can actually

00:15:17,650 --> 00:15:25,690
do that so yeah it talks over SSH

00:15:23,110 --> 00:15:28,930
it runs in parallel by default so it

00:15:25,690 --> 00:15:29,700
will fork X amount of nodes and talk to

00:15:28,930 --> 00:15:33,490
them directly

00:15:29,700 --> 00:15:35,680
mostly it's like five nodes per time if

00:15:33,490 --> 00:15:39,190
you have larger or smaller setups you

00:15:35,680 --> 00:15:42,089
could change that and then the most

00:15:39,190 --> 00:15:44,570
important is something called delegation

00:15:42,089 --> 00:15:47,610
in the sense that if you want to be

00:15:44,570 --> 00:15:50,040
doing this for monitoring you will talk

00:15:47,610 --> 00:15:53,430
to your note but the note needs to be

00:15:50,040 --> 00:15:55,950
announced to your monitoring system and

00:15:53,430 --> 00:15:59,730
by using this delegation you could

00:15:55,950 --> 00:16:01,620
actually allow it to at the end of the

00:15:59,730 --> 00:16:04,440
set up tell the monitoring system that

00:16:01,620 --> 00:16:06,360
it is available and that it needs to

00:16:04,440 --> 00:16:08,310
start monitoring our the way around you

00:16:06,360 --> 00:16:10,560
could actually tell it that please put

00:16:08,310 --> 00:16:13,470
it in maintenance mode run your updates

00:16:10,560 --> 00:16:15,000
and then put it back in and based on

00:16:13,470 --> 00:16:24,540
that you can actually have events also

00:16:15,000 --> 00:16:27,779
triggered any questions because now the

00:16:24,540 --> 00:16:31,290
code will start and you will have to

00:16:27,779 --> 00:16:33,930
have better eyesight most probably so

00:16:31,290 --> 00:16:36,180
typically this is a host file it's just

00:16:33,930 --> 00:16:38,940
any so you have the square brackets

00:16:36,180 --> 00:16:42,120
which designates a group and then a

00:16:38,940 --> 00:16:45,120
bunch of names which refer to hosts that

00:16:42,120 --> 00:16:47,490
you have if you just have a name it will

00:16:45,120 --> 00:16:49,529
try to do standard DNS if it doesn't

00:16:47,490 --> 00:16:52,500
find that it will drop down to SSH and

00:16:49,529 --> 00:16:57,630
try to use your SSH connectivity to

00:16:52,500 --> 00:17:01,620
connect to that in my case I have

00:16:57,630 --> 00:17:04,380
everything defined per machine so which

00:17:01,620 --> 00:17:08,339
distribution it uses what architecture

00:17:04,380 --> 00:17:11,449
it is what networking connectivity and

00:17:08,339 --> 00:17:11,449
and so on

00:17:17,810 --> 00:17:28,710
so you have here a whole bunch of names

00:17:20,280 --> 00:17:30,500
and if you look down somewhere yeah

00:17:28,710 --> 00:17:33,150
monitoring systems you have your two

00:17:30,500 --> 00:17:40,620
machines which are the monitoring

00:17:33,150 --> 00:17:43,710
machines if you open these specific it

00:17:40,620 --> 00:17:45,810
will in my case it tells well where the

00:17:43,710 --> 00:17:48,420
machines are located

00:17:45,810 --> 00:17:50,370
it tells which private key it needs to

00:17:48,420 --> 00:17:53,790
use because I have separate private keys

00:17:50,370 --> 00:17:57,030
per machine it defines on how the

00:17:53,790 --> 00:17:59,520
machine will be created because I create

00:17:57,030 --> 00:18:04,740
the VMS from here and then at the bottom

00:17:59,520 --> 00:18:08,130
it has actually the icinga to definition

00:18:04,740 --> 00:18:10,890
so it's a master in this case and it has

00:18:08,130 --> 00:18:14,570
a quell it has connection to these nodes

00:18:10,890 --> 00:18:25,400
and sorry to these satellite zones and

00:18:14,570 --> 00:18:29,220
then yeah that's a little bit different

00:18:25,400 --> 00:18:32,220
so I use a playbook to install the VM

00:18:29,220 --> 00:18:35,430
the VM gets installed from here once

00:18:32,220 --> 00:18:38,370
it's it's active and at the end it will

00:18:35,430 --> 00:18:41,310
do something called fact-gathering so it

00:18:38,370 --> 00:18:43,530
will get all the information it can and

00:18:41,310 --> 00:18:47,240
with that information you can then add

00:18:43,530 --> 00:18:47,240
it to your monitoring system

00:18:58,510 --> 00:19:04,070
so then it will run this place so it

00:19:01,430 --> 00:19:07,070
will install icinga - as a client it

00:19:04,070 --> 00:19:10,700
will install all the plugins it will

00:19:07,070 --> 00:19:13,280
configure the client will add the the

00:19:10,700 --> 00:19:17,930
metrics that are interesting for a

00:19:13,280 --> 00:19:19,850
standard machine will then make sure

00:19:17,930 --> 00:19:22,400
that the icing a client daemon is

00:19:19,850 --> 00:19:28,520
connected and will add this to the

00:19:22,400 --> 00:19:30,560
icinga master and will also make sure

00:19:28,520 --> 00:19:33,980
that once the icing a master has this

00:19:30,560 --> 00:19:37,660
specific VM in there that the three

00:19:33,980 --> 00:19:41,390
starts and shows you that automatically

00:19:37,660 --> 00:19:43,760
now for a VM that's easy you can

00:19:41,390 --> 00:19:46,670
integrate this in your other roles that

00:19:43,760 --> 00:19:48,590
if you install a MariaDB cluster that it

00:19:46,670 --> 00:19:51,850
will automatically do the monitoring and

00:19:48,590 --> 00:19:56,210
add those scripts that you have defined

00:19:51,850 --> 00:19:58,460
like they've said if you want to know

00:19:56,210 --> 00:20:01,100
whether the part is open or not it's

00:19:58,460 --> 00:20:02,990
maybe not the most interesting thing but

00:20:01,100 --> 00:20:04,610
if you run a cluster you at least need

00:20:02,990 --> 00:20:06,260
to know that the parts are open and that

00:20:04,610 --> 00:20:08,780
each of the members can talk to each

00:20:06,260 --> 00:20:11,120
other if you really want to have the

00:20:08,780 --> 00:20:12,890
full value you would want to know that

00:20:11,120 --> 00:20:15,770
the tables are the same on each of them

00:20:12,890 --> 00:20:18,500
so you can actually have a script which

00:20:15,770 --> 00:20:20,270
checks that the tables are the same on

00:20:18,500 --> 00:20:31,700
all of them or that the last transaction

00:20:20,270 --> 00:20:38,420
was written successfully yeah this this

00:20:31,700 --> 00:20:40,660
is more about the VM role so it's it's

00:20:38,420 --> 00:20:42,350
[Music]

00:20:40,660 --> 00:20:46,059
it's

00:20:42,350 --> 00:20:49,789
a whole bunch of distributions

00:20:46,059 --> 00:20:53,419
Enterprise Linux 6-7 Debian's Ubuntu's

00:20:49,789 --> 00:20:54,799
open BSD s it used to support Windows

00:20:53,419 --> 00:20:58,870
because I had some customers with

00:20:54,799 --> 00:21:03,409
Windows but I have not maintained them

00:20:58,870 --> 00:21:06,919
and typically what what will happen then

00:21:03,409 --> 00:21:08,929
is in this you can actually then say

00:21:06,919 --> 00:21:11,330
which roles so the VM install will

00:21:08,929 --> 00:21:14,750
install the VM and then you could

00:21:11,330 --> 00:21:18,639
actually add here I senior to it will

00:21:14,750 --> 00:21:20,779
then add it as a client if it is a

00:21:18,639 --> 00:21:28,100
mariadb cluster you could actually add a

00:21:20,779 --> 00:21:31,009
role MariaDB and it will actually

00:21:28,100 --> 00:21:32,750
execute all these roles if you add in

00:21:31,009 --> 00:21:34,399
those roles that it needs to add this

00:21:32,750 --> 00:21:37,370
for the monitoring then you can actually

00:21:34,399 --> 00:21:46,610
have all that information come from your

00:21:37,370 --> 00:21:49,639
central system for a singer to this is

00:21:46,610 --> 00:21:52,460
mostly the definition it also the the

00:21:49,639 --> 00:21:54,559
standard role I have on github does the

00:21:52,460 --> 00:21:59,240
master the zone master and the client in

00:21:54,559 --> 00:22:03,250
one role it based on a variable that

00:21:59,240 --> 00:22:05,629
you've set in the VM definition itself

00:22:03,250 --> 00:22:08,120
so in this case it's basically only

00:22:05,629 --> 00:22:11,240
check is it a master or is it a zone

00:22:08,120 --> 00:22:13,600
master or is it a client so the zone

00:22:11,240 --> 00:22:16,190
master is actually the satellite's zone

00:22:13,600 --> 00:22:20,889
and the master is the master master

00:22:16,190 --> 00:22:26,200
means the main ones it will basically

00:22:20,889 --> 00:22:29,990
install I singer to install icing a2 web

00:22:26,200 --> 00:22:35,769
it will install also carbon which is

00:22:29,990 --> 00:22:35,769
graphite back-end and will then setup

00:22:49,419 --> 00:22:53,969
and we'll then set up no sorry that was

00:22:53,139 --> 00:22:58,299
wrong

00:22:53,969 --> 00:23:00,519
master it will then copy the master

00:22:58,299 --> 00:23:01,269
certificate so that the masters can talk

00:23:00,519 --> 00:23:04,599
to each other

00:23:01,269 --> 00:23:08,829
it will then set up the PKI this was

00:23:04,599 --> 00:23:12,549
written at well before 2.8 now there is

00:23:08,829 --> 00:23:14,559
a new module added which can do the

00:23:12,549 --> 00:23:17,709
certificate management automatically in

00:23:14,559 --> 00:23:19,869
this version it still does well you need

00:23:17,709 --> 00:23:23,229
to do your own certificate management so

00:23:19,869 --> 00:23:25,269
it's not foreseen for that yet but it

00:23:23,229 --> 00:23:29,499
basically sets it up it makes sure that

00:23:25,269 --> 00:23:32,889
it can talk to the services so that I

00:23:29,499 --> 00:23:34,479
sing and HTTP can talk to each other and

00:23:32,889 --> 00:23:40,359
that you can get all the information on

00:23:34,479 --> 00:23:44,889
your web console the old master does

00:23:40,359 --> 00:23:47,289
basically the same and it will run the

00:23:44,889 --> 00:23:49,779
same setup on each of these zone masters

00:23:47,289 --> 00:23:52,089
for you automatically it will exchange

00:23:49,779 --> 00:23:55,029
all the keys so that the master can talk

00:23:52,089 --> 00:23:57,309
to the zones and the zones can then

00:23:55,029 --> 00:24:02,409
amongst each other also delegate masters

00:23:57,309 --> 00:24:04,989
or multiple masters zone definition is

00:24:02,409 --> 00:24:11,529
created using a template so it will

00:24:04,989 --> 00:24:15,190
actually should be better readable it

00:24:11,529 --> 00:24:17,469
will actually do Jinja - and it will

00:24:15,190 --> 00:24:19,929
then basically go over all the zones it

00:24:17,469 --> 00:24:22,149
will create all the zone names and then

00:24:19,929 --> 00:24:30,879
that configuration gets written into the

00:24:22,149 --> 00:24:33,759
so by adding a new zone into the here at

00:24:30,879 --> 00:24:35,200
the end and running unstable again you

00:24:33,759 --> 00:24:37,719
will get that zone automatically in

00:24:35,200 --> 00:24:39,459
there and it will also set up all the

00:24:37,719 --> 00:24:42,339
zone masters and do all of that work for

00:24:39,459 --> 00:24:48,369
you so it's basically four or five lines

00:24:42,339 --> 00:24:51,429
of code and you have a new zone for the

00:24:48,369 --> 00:24:54,999
client it does the same thing it sets up

00:24:51,429 --> 00:24:57,309
icinga - as a client it defines which

00:24:54,999 --> 00:25:01,149
are the basics checks it does and then

00:24:57,309 --> 00:25:02,980
sends all of that back to the master so

00:25:01,149 --> 00:25:05,590
that the master can actually decide

00:25:02,980 --> 00:25:07,029
how the zoning is done I senior to does

00:25:05,590 --> 00:25:10,120
that automatically so you don't need to

00:25:07,029 --> 00:25:11,590
worry you send it to one of the masters

00:25:10,120 --> 00:25:14,799
and they will automatically distribute

00:25:11,590 --> 00:25:19,809
that and set up all the synchronization

00:25:14,799 --> 00:25:22,049
automatically yeah these are examples of

00:25:19,809 --> 00:25:24,669
how you pull a disc so you basically

00:25:22,049 --> 00:25:27,010
create your script the first time and

00:25:24,669 --> 00:25:29,710
then you add an abstraction layer by

00:25:27,010 --> 00:25:32,409
templating it in this case it will go

00:25:29,710 --> 00:25:34,529
over all the file systems we don't want

00:25:32,409 --> 00:25:36,610
mounted file systems or swamp systems

00:25:34,529 --> 00:25:40,750
and then you can monitor all your

00:25:36,610 --> 00:25:43,690
mounted systems in there for memory it

00:25:40,750 --> 00:25:46,779
will do the same for i/o statistics it

00:25:43,690 --> 00:25:50,529
does it and then it creates the host

00:25:46,779 --> 00:25:54,070
definition based on a file and that's

00:25:50,529 --> 00:25:56,289
again a big template based on the

00:25:54,070 --> 00:26:04,809
information you get back from the

00:25:56,289 --> 00:26:09,750
machine so in this case it will tell

00:26:04,809 --> 00:26:12,850
that I want to know what to swap usages

00:26:09,750 --> 00:26:15,610
it still refers to some of the NRP ease

00:26:12,850 --> 00:26:18,279
I have not changed everything yet but it

00:26:15,610 --> 00:26:23,080
basically because some customers might

00:26:18,279 --> 00:26:25,870
have a limitation on the parts you can

00:26:23,080 --> 00:26:28,690
define by default it uses five thousand

00:26:25,870 --> 00:26:33,820
666 but it depends on how its defined

00:26:28,690 --> 00:26:35,350
that if your internal leak connecting to

00:26:33,820 --> 00:26:37,960
machines which are behind the firewall

00:26:35,350 --> 00:26:39,760
you might not want to put SSL in there

00:26:37,960 --> 00:26:42,880
because these are maybe devices which

00:26:39,760 --> 00:26:45,039
are very low in CPU consumption or these

00:26:42,880 --> 00:26:47,409
are may may be specific sensors which do

00:26:45,039 --> 00:26:52,380
not support SSL you could disable it and

00:26:47,409 --> 00:26:54,880
then like let a higher level checker

00:26:52,380 --> 00:26:57,240
report that data securely back to the

00:26:54,880 --> 00:26:57,240
master

00:27:02,549 --> 00:27:09,669
yeah so by using automation it should be

00:27:06,490 --> 00:27:11,200
easy and once you have all these

00:27:09,669 --> 00:27:15,179
automation and you have everything in

00:27:11,200 --> 00:27:17,919
monitoring you should be fine and happy

00:27:15,179 --> 00:27:22,259
like I said I had a demo which would

00:27:17,919 --> 00:27:25,210
have shown this more interactively but

00:27:22,259 --> 00:27:31,509
it's it's not possible to show that for

00:27:25,210 --> 00:27:33,340
a moment so I'm done for people who

00:27:31,509 --> 00:27:37,889
haven't realized that's the website for

00:27:33,340 --> 00:27:41,580
icinga that's the website forceable and

00:27:37,889 --> 00:27:45,039
these are the two roles that are there

00:27:41,580 --> 00:27:50,409
the roles are like all bleeding edge

00:27:45,039 --> 00:27:53,049
stuff use at own risk if anything breaks

00:27:50,409 --> 00:27:59,320
you can send me a mail I'll see if I can

00:27:53,049 --> 00:28:02,799
help you thank you and are there

00:27:59,320 --> 00:28:05,519
questions so we have a lot of time for

00:28:02,799 --> 00:28:05,519
questions here

00:28:09,279 --> 00:28:17,070
did I get it right that you match your

00:28:12,970 --> 00:28:21,309
services locally on the client like you

00:28:17,070 --> 00:28:24,850
set up the check local oh yeah and then

00:28:21,309 --> 00:28:29,909
you have like the passive type of thing

00:28:24,850 --> 00:28:34,720
at the master and you get the results so

00:28:29,909 --> 00:28:37,809
the most of the checks are passive as in

00:28:34,720 --> 00:28:43,539
the node sends them back to the master

00:28:37,809 --> 00:28:45,580
yes mostly the ping and maybe like HTTP

00:28:43,539 --> 00:28:47,590
checking if your website is available is

00:28:45,580 --> 00:28:49,000
done from the master so there are some

00:28:47,590 --> 00:28:50,919
commands which are done on the master

00:28:49,000 --> 00:28:54,100
but the majority of the things I mean

00:28:50,919 --> 00:28:54,549
run on the node itself I want to know

00:28:54,100 --> 00:28:57,399
better

00:28:54,549 --> 00:28:59,559
mariadb is running so I'll query that on

00:28:57,399 --> 00:29:01,090
the node itself I want to know if nginx

00:28:59,559 --> 00:29:03,639
is running I will query that on the node

00:29:01,090 --> 00:29:05,860
itself whether people from outside can

00:29:03,639 --> 00:29:07,690
check that is what the master does and

00:29:05,860 --> 00:29:10,659
they will see the end result like yes

00:29:07,690 --> 00:29:13,179
the website is up I get a 200 status or

00:29:10,659 --> 00:29:14,889
you could even query by some of the

00:29:13,179 --> 00:29:15,160
customers we add the version number at

00:29:14,889 --> 00:29:17,020
about

00:29:15,160 --> 00:29:18,850
and we query the version number to make

00:29:17,020 --> 00:29:21,520
sure that the right version of the

00:29:18,850 --> 00:29:23,860
website is being displayed so there's a

00:29:21,520 --> 00:29:33,310
combination of the two but the basic

00:29:23,860 --> 00:29:36,520
stuff is done locally yes hey have you

00:29:33,310 --> 00:29:38,320
got a situation at all where you're have

00:29:36,520 --> 00:29:40,060
more than one level of you know you've

00:29:38,320 --> 00:29:41,380
got a satellite and then agents beneath

00:29:40,060 --> 00:29:43,420
that and you can figure that as well

00:29:41,380 --> 00:29:45,460
have you tried to address that at all in

00:29:43,420 --> 00:29:49,600
your playbooks it seems more challenging

00:29:45,460 --> 00:29:50,110
I've tried that manually not in the

00:29:49,600 --> 00:29:54,090
playbooks

00:29:50,110 --> 00:29:56,440
I've been able to get to the third level

00:29:54,090 --> 00:29:58,510
but it is indeed very challenging

00:29:56,440 --> 00:30:02,620
because you need to be able to set up

00:29:58,510 --> 00:30:04,900
the recursive nests correctly by default

00:30:02,620 --> 00:30:09,190
you could do that by creating a zone

00:30:04,900 --> 00:30:11,200
master and then sorry a master ozone

00:30:09,190 --> 00:30:13,750
master and then make that a master of

00:30:11,200 --> 00:30:16,270
another zone master so it works in the

00:30:13,750 --> 00:30:18,130
playbook I've I've not tried that in

00:30:16,270 --> 00:30:20,230
production I have not even tried and in

00:30:18,130 --> 00:30:22,180
test it should work I've tried it

00:30:20,230 --> 00:30:25,140
manually and it works so I think I can

00:30:22,180 --> 00:30:36,970
do it but the PlayBook is not 100%

00:30:25,140 --> 00:30:39,130
correcting that anymore so one question

00:30:36,970 --> 00:30:41,920
from us that maybe you mentioned

00:30:39,130 --> 00:30:43,780
amendable and Windows yeah um do you

00:30:41,920 --> 00:30:46,000
have any experience with that or what

00:30:43,780 --> 00:30:49,390
would you say are the challenges or the

00:30:46,000 --> 00:30:52,240
problems with Windows and ansible or is

00:30:49,390 --> 00:30:52,840
it comparable with Linux or what what is

00:30:52,240 --> 00:30:56,200
the problem

00:30:52,840 --> 00:30:59,650
so first disclaimer I have used it for

00:30:56,200 --> 00:31:03,640
2008 and 2012 because I had a customer

00:30:59,650 --> 00:31:05,710
Evan who had Windows by the time I get

00:31:03,640 --> 00:31:08,160
back I might have a customer who has

00:31:05,710 --> 00:31:11,410
Windows again if I read my mail correct

00:31:08,160 --> 00:31:16,060
they will be on 2016 I've heard that's

00:31:11,410 --> 00:31:17,980
different so in 2008 the pain is you

00:31:16,060 --> 00:31:19,540
need to set up PowerShell properly you

00:31:17,980 --> 00:31:21,430
need to have your certificates exchanged

00:31:19,540 --> 00:31:24,090
properly all you need to disable

00:31:21,430 --> 00:31:27,670
checking which is also not a good idea

00:31:24,090 --> 00:31:30,160
we used it for installing Microsoft

00:31:27,670 --> 00:31:32,750
sequel server

00:31:30,160 --> 00:31:34,550
because the application that the

00:31:32,750 --> 00:31:37,160
customer has is basically running on

00:31:34,550 --> 00:31:38,570
that so the only thing I've done is set

00:31:37,160 --> 00:31:41,450
up a Windows machine as a virtual

00:31:38,570 --> 00:31:43,940
machine install Microsoft sequel server

00:31:41,450 --> 00:31:47,720
and then said now it's your problem

00:31:43,940 --> 00:31:49,910
and for that it works well now if you if

00:31:47,720 --> 00:31:53,330
you want to do monitoring I heard this

00:31:49,910 --> 00:31:56,360
morning t-sql and and you know I've not

00:31:53,330 --> 00:31:57,920
looked at all those details yet the new

00:31:56,360 --> 00:31:59,990
customer have we will have to go more in

00:31:57,920 --> 00:32:02,210
depth and we all have to actually see so

00:31:59,990 --> 00:32:03,890
ask me this question of in a few months

00:32:02,210 --> 00:32:07,310
and I'll be able to answer better it

00:32:03,890 --> 00:32:08,990
works there are a lot of things which I

00:32:07,310 --> 00:32:12,650
find ridiculous in the sense that a

00:32:08,990 --> 00:32:17,950
command is like this long I mean but

00:32:12,650 --> 00:32:28,310
I've not gone in depth in yet thank you

00:32:17,950 --> 00:32:31,970
okay on your on your master are you able

00:32:28,310 --> 00:32:37,270
in the in single web to see the problems

00:32:31,970 --> 00:32:44,480
of the clients individually per client

00:32:37,270 --> 00:32:46,790
so per satellite zone no well they come

00:32:44,480 --> 00:32:50,720
up what I've done is you group them

00:32:46,790 --> 00:32:53,750
together but it's not that this the

00:32:50,720 --> 00:32:55,070
zoning is done automatically unless

00:32:53,750 --> 00:32:57,950
there is a better way I don't know of

00:32:55,070 --> 00:33:00,350
but as far as I have understood it just

00:32:57,950 --> 00:33:04,130
shows all host by me I've been able to

00:33:00,350 --> 00:33:05,960
group them together as a group but I had

00:33:04,130 --> 00:33:08,060
to do that manually but the PlayBook

00:33:05,960 --> 00:33:09,980
doesn't do that unless again there's a

00:33:08,060 --> 00:33:11,420
better way to do that I don't know but

00:33:09,980 --> 00:33:13,460
as far as I was reading the

00:33:11,420 --> 00:33:16,010
documentation I didn't find a way that

00:33:13,460 --> 00:33:18,590
you could save put on the top and filter

00:33:16,010 --> 00:33:20,120
only that in my case it's easy because

00:33:18,590 --> 00:33:23,380
most of the host name start with the

00:33:20,120 --> 00:33:27,200
customer name so you can just filter on

00:33:23,380 --> 00:33:28,730
trial ends and you'll get only the the

00:33:27,200 --> 00:33:30,740
machines with trials because they all

00:33:28,730 --> 00:33:35,290
start but there should be a better way I

00:33:30,740 --> 00:33:35,290
don't know of one thank you

00:33:41,730 --> 00:33:50,200
hello I think you may be a little bit

00:33:45,490 --> 00:33:54,570
off topic but I read that you deal with

00:33:50,200 --> 00:33:58,750
ix machines yes do you monitor them and

00:33:54,570 --> 00:34:03,040
yeah so the the AIX machines for the

00:33:58,750 --> 00:34:06,940
customers we I have are mostly ARX with

00:34:03,040 --> 00:34:09,130
Oracle databases on it we I have I think

00:34:06,940 --> 00:34:11,230
one cluster where they run a specific

00:34:09,130 --> 00:34:14,680
application server which was written by

00:34:11,230 --> 00:34:16,740
a company which wanted AI X so yes the

00:34:14,680 --> 00:34:21,100
the standard ones that are in there

00:34:16,740 --> 00:34:23,380
should work for AIX the AIX part hasn't

00:34:21,100 --> 00:34:25,780
been open sourced because the customer

00:34:23,380 --> 00:34:29,080
well the agreement with the customers I

00:34:25,780 --> 00:34:31,300
may not put them online if you send me a

00:34:29,080 --> 00:34:34,540
mail I can send it to you because it's

00:34:31,300 --> 00:34:35,350
not online then ok I mean that was my

00:34:34,540 --> 00:34:37,960
problem

00:34:35,350 --> 00:34:40,540
the other problem is we build specific

00:34:37,960 --> 00:34:41,560
packages for the customer which are not

00:34:40,540 --> 00:34:45,700
available on the internet the only

00:34:41,560 --> 00:34:46,240
available by them and so that has been a

00:34:45,700 --> 00:34:48,040
problem

00:34:46,240 --> 00:34:50,530
I've been talking to burn on how we can

00:34:48,040 --> 00:34:52,590
solve this I'm talking to another

00:34:50,530 --> 00:34:56,320
customer I have where X who is more

00:34:52,590 --> 00:34:58,240
inclined to open-source and maybe there

00:34:56,320 --> 00:35:01,060
will be able to build packages and build

00:34:58,240 --> 00:35:05,380
a full playbook that works for that also

00:35:01,060 --> 00:35:09,430
and watch what kind of protocol do you

00:35:05,380 --> 00:35:11,110
use this is SSA yeah only yeah you can

00:35:09,430 --> 00:35:13,210
use I think that too as a client which

00:35:11,110 --> 00:35:15,940
will then connect automatically or you

00:35:13,210 --> 00:35:19,000
can use SSH that's all I wouldn't

00:35:15,940 --> 00:35:22,900
suggest you to try anything else the NR

00:35:19,000 --> 00:35:27,660
PE that comes from bells is so old and

00:35:22,900 --> 00:35:31,540
ancient it isn't worth to look at okay

00:35:27,660 --> 00:35:34,150
so but you can build icing a to on it

00:35:31,540 --> 00:35:37,230
I've done it I've done it manually we

00:35:34,150 --> 00:35:39,820
try to create an RPM package it works

00:35:37,230 --> 00:35:42,730
but I need to have a little bit more

00:35:39,820 --> 00:35:46,560
time to find how to get that available

00:35:42,730 --> 00:35:46,560
to people okay thank you

00:35:47,190 --> 00:36:03,060
I have a question um how do you monitor

00:35:56,910 --> 00:36:07,140
your single solution itself however

00:36:03,060 --> 00:36:10,260
density so we use an external service

00:36:07,140 --> 00:36:14,340
called server density to monitor our two

00:36:10,260 --> 00:36:17,130
icinga masters okay it's the other idea

00:36:14,340 --> 00:36:19,590
I had is well I had the other thing that

00:36:17,130 --> 00:36:21,690
we will do is next year I will build a

00:36:19,590 --> 00:36:24,300
new data center so I have actually for

00:36:21,690 --> 00:36:26,460
the moment one big one and one small one

00:36:24,300 --> 00:36:28,080
which is basically a backup I'll be

00:36:26,460 --> 00:36:30,240
adding a third one and then we will use

00:36:28,080 --> 00:36:32,040
in the third one zabbix - monitor the

00:36:30,240 --> 00:36:36,810
icinga and I singer to monitor the

00:36:32,040 --> 00:36:38,850
zabbix for me the problem is you

00:36:36,810 --> 00:36:42,540
shouldn't be monitoring I singer with I

00:36:38,850 --> 00:36:44,640
singer well if you have a problem with

00:36:42,540 --> 00:36:46,830
it well if there is a technical problem

00:36:44,640 --> 00:36:49,110
in that version unless you're going to

00:36:46,830 --> 00:36:51,420
use different versions and using

00:36:49,110 --> 00:36:54,180
multiple versions is always a hell so

00:36:51,420 --> 00:36:57,600
and mostly what you want to know is that

00:36:54,180 --> 00:36:59,880
your I see your cluster is working and

00:36:57,600 --> 00:37:02,100
that it is doing the checks so zabbix is

00:36:59,880 --> 00:37:03,600
good enough I mean you just need to

00:37:02,100 --> 00:37:13,500
check a few things and see that it's

00:37:03,600 --> 00:37:16,270
alive that's all thank you thank you

00:37:13,500 --> 00:37:23,959
very much Tasha thank you

00:37:16,270 --> 00:37:23,959

YouTube URL: https://www.youtube.com/watch?v=7Hu2_fueBVQ


