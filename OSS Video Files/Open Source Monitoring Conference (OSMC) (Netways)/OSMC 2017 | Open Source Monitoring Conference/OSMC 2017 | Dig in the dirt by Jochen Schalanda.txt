Title: OSMC 2017 | Dig in the dirt by Jochen Schalanda
Publication date: 2017-12-05
Playlist: OSMC 2017 | Open Source Monitoring Conference
Description: 
	Now that you have your logs centralized within your IT Infrastructure, whatâ€™s next?
With an increased sophistication of cyber security attacks, itâ€™s imperative to have measures set in place to detect suspicious activity. In this talk, we will demonstrate how to analyze DNS data to build dashboards, streams, and alerts using Graylog, an open source log management tool, in unison with open source log shippers.
DNS, as one of the most unknown protocols, gives you deep insights about activities inside your network without the need of active agents on every device or deep package inspection.
Captions: 
	00:00:11,679 --> 00:00:18,700
all right welcome back I hope you

00:00:15,830 --> 00:00:24,020
enjoyed your coffee and the short break

00:00:18,700 --> 00:00:27,610
next up we have a developer from a

00:00:24,020 --> 00:00:31,009
fabulous team at Greylock he is also

00:00:27,610 --> 00:00:35,540
responsible for new features doing some

00:00:31,009 --> 00:00:38,870
work fixing bugs and I would like to

00:00:35,540 --> 00:00:39,320
give him a warm welcome and enjoy his

00:00:38,870 --> 00:00:44,410
talk

00:00:39,320 --> 00:00:44,410
it's Yahoo Shalonda please wake up

00:00:46,360 --> 00:00:51,290
yeah good morning everyone and thanks

00:00:49,190 --> 00:00:55,610
for joining my session about digging in

00:00:51,290 --> 00:00:57,710
the dirt let's start with a small

00:00:55,610 --> 00:01:00,380
informal poll so I guess you're all

00:00:57,710 --> 00:01:01,790
professionals here I'm sure you're all

00:01:00,380 --> 00:01:03,440
professionals here so you know what

00:01:01,790 --> 00:01:05,439
logging is and what the value of logging

00:01:03,440 --> 00:01:07,670
is and I'm sure you're already

00:01:05,439 --> 00:01:09,350
collecting all the log data of your

00:01:07,670 --> 00:01:11,180
environments of your applications of

00:01:09,350 --> 00:01:14,360
your network devices in your companies

00:01:11,180 --> 00:01:16,610
so you have to use something to collect

00:01:14,360 --> 00:01:19,790
those and I'd like to know what you're

00:01:16,610 --> 00:01:21,409
using so who's using the elastic stack

00:01:19,790 --> 00:01:25,340
like blocks that elastic search and

00:01:21,409 --> 00:01:33,140
stuff like that okay who's using Splunk

00:01:25,340 --> 00:01:35,270
oh you get money okay and some software

00:01:33,140 --> 00:01:37,909
service provider like blogging services

00:01:35,270 --> 00:01:42,619
okay not that many and who's using

00:01:37,909 --> 00:01:45,500
Greylock usually just one or two hands

00:01:42,619 --> 00:01:49,640
will go up so I'm glad that there are

00:01:45,500 --> 00:01:51,020
more people here using Greylock so why

00:01:49,640 --> 00:01:53,439
is centralized logging of course you all

00:01:51,020 --> 00:01:56,240
know that already but just a small recap

00:01:53,439 --> 00:01:58,549
first of all it helps you debugging your

00:01:56,240 --> 00:02:01,220
applications so that's fraught more from

00:01:58,549 --> 00:02:03,320
a developer point of view like you want

00:02:01,220 --> 00:02:05,810
to debug your problems with a

00:02:03,320 --> 00:02:07,640
distributed system and now you have to

00:02:05,810 --> 00:02:11,780
look at the locks and you realize you

00:02:07,640 --> 00:02:14,599
don't have locks so yeah it's a vicious

00:02:11,780 --> 00:02:16,569
circle but in the end is that helping

00:02:14,599 --> 00:02:19,340
developers finding problems in

00:02:16,569 --> 00:02:22,040
distributed systems also it helps you

00:02:19,340 --> 00:02:23,840
probably find why that single email

00:02:22,040 --> 00:02:27,340
wasn't sent out by your

00:02:23,840 --> 00:02:30,980
SMTP server to that one location so

00:02:27,340 --> 00:02:34,100
there's well you on debt and then in the

00:02:30,980 --> 00:02:37,180
last year's centralized logging came

00:02:34,100 --> 00:02:40,220
more into the spotlight as a part of a

00:02:37,180 --> 00:02:41,810
security strategy so there was this very

00:02:40,220 --> 00:02:43,580
nice blog post learning from a year of

00:02:41,810 --> 00:02:48,110
security preachers can everybody see

00:02:43,580 --> 00:02:53,300
this lights by the way great this great

00:02:48,110 --> 00:02:54,770
blog post there which was looking at all

00:02:53,300 --> 00:02:59,840
the security breaches that happened in

00:02:54,770 --> 00:03:03,410
the year 2016 and basically it turns out

00:02:59,840 --> 00:03:05,180
that the whole story about basically

00:03:03,410 --> 00:03:08,000
each security incident could have been

00:03:05,180 --> 00:03:10,430
either detected much earlier or even

00:03:08,000 --> 00:03:14,150
prevented if there was a good logging in

00:03:10,430 --> 00:03:16,790
place which had recorded the the

00:03:14,150 --> 00:03:19,220
preaches and the exfiltration attempts

00:03:16,790 --> 00:03:24,709
of the attackers so that's another quote

00:03:19,220 --> 00:03:27,799
from this article I won't read it out so

00:03:24,709 --> 00:03:30,410
you can check it in slides and just

00:03:27,799 --> 00:03:33,200
recently a thing it was end of last week

00:03:30,410 --> 00:03:36,230
or was even this week the new all wasp

00:03:33,200 --> 00:03:40,910
top 10 came out over is an organization

00:03:36,230 --> 00:03:44,650
dedicated to teaching developers and

00:03:40,910 --> 00:03:47,120
operations people about security

00:03:44,650 --> 00:03:49,010
breaches security problems in web

00:03:47,120 --> 00:03:52,730
applications and the top ten is just a

00:03:49,010 --> 00:03:54,079
list of basically bullet points that you

00:03:52,730 --> 00:03:56,530
have to check against your web

00:03:54,079 --> 00:04:00,230
applications to have basically a minimum

00:03:56,530 --> 00:04:03,140
protection against Attica attackers and

00:04:00,230 --> 00:04:05,630
new this year was one problem

00:04:03,140 --> 00:04:07,310
insufficient logging and monitoring it's

00:04:05,630 --> 00:04:11,870
way too late that they are at this but

00:04:07,310 --> 00:04:16,120
just to mention it here so what's our

00:04:11,870 --> 00:04:18,590
schedule for today it's a far plan

00:04:16,120 --> 00:04:20,660
basically I just want to give a very

00:04:18,590 --> 00:04:24,590
very short overview over Greylock and

00:04:20,660 --> 00:04:26,750
then jump into a live demo and in which

00:04:24,590 --> 00:04:30,890
we will capture DNS HTTP and ICMP

00:04:26,750 --> 00:04:35,720
packets from a well playground system

00:04:30,890 --> 00:04:37,249
running on my laptop here will sent the

00:04:35,720 --> 00:04:39,289
connection back and make it

00:04:37,249 --> 00:04:41,209
to Greylock and then we'll do fine

00:04:39,289 --> 00:04:43,039
things with that like cleaning up and

00:04:41,209 --> 00:04:45,979
consolidating the data so that we can

00:04:43,039 --> 00:04:48,769
actually make sense of it and throw away

00:04:45,979 --> 00:04:51,229
everything that we don't need

00:04:48,769 --> 00:04:54,379
we'll check against online threat

00:04:51,229 --> 00:04:58,749
databases like abuse dot CH we can check

00:04:54,379 --> 00:05:02,599
if there are tor nodes tor exit nodes

00:04:58,749 --> 00:05:05,689
among the destination addresses and

00:05:02,599 --> 00:05:07,489
stuff like that and we'll shall shine e

00:05:05,689 --> 00:05:10,069
stats on their ports because everyone

00:05:07,489 --> 00:05:13,089
wants dashboards right that's why using

00:05:10,069 --> 00:05:16,579
the elastic sub stack with qivana and

00:05:13,089 --> 00:05:18,679
then maybe if there's enough time left

00:05:16,579 --> 00:05:23,629
will alert on these threats but that's

00:05:18,679 --> 00:05:25,729
pretty fast so great luck a few of you

00:05:23,629 --> 00:05:28,159
have already been using Greylock if you

00:05:25,729 --> 00:05:30,169
haven't so I'll give just a very very

00:05:28,159 --> 00:05:31,759
rough overview Oh

00:05:30,169 --> 00:05:34,610
Greylock is an open source management

00:05:31,759 --> 00:05:41,209
platform lock management platform so

00:05:34,610 --> 00:05:44,149
it's basically in well in the same

00:05:41,209 --> 00:05:46,759
league or the same space as plunk and

00:05:44,149 --> 00:05:48,319
the elastic SEC is so you can ingest all

00:05:46,759 --> 00:05:51,139
the log data you have in your

00:05:48,319 --> 00:05:53,269
environments be it from network

00:05:51,139 --> 00:05:55,759
appliances from your custom applications

00:05:53,269 --> 00:06:01,549
or from standard applications into one

00:05:55,759 --> 00:06:04,789
place and then analyze that data it's

00:06:01,549 --> 00:06:07,039
built for security in operations so you

00:06:04,789 --> 00:06:10,249
get out of the box you get all the stuff

00:06:07,039 --> 00:06:11,869
that you need to consolidate your logs

00:06:10,249 --> 00:06:15,739
to check your locks against threat

00:06:11,869 --> 00:06:17,569
databases and to build your dashboards

00:06:15,739 --> 00:06:20,929
that you want to show on your big

00:06:17,569 --> 00:06:22,729
screens it's usually easy to set up and

00:06:20,929 --> 00:06:25,039
it has powerful features so easy to set

00:06:22,729 --> 00:06:27,889
up means we have so-called virtual

00:06:25,039 --> 00:06:32,539
appliances which you can deploy to your

00:06:27,889 --> 00:06:35,989
VM very your hyper-v clusters and then

00:06:32,539 --> 00:06:38,269
run it all in one and it's even cluster

00:06:35,989 --> 00:06:42,919
Abell and powerful features we see about

00:06:38,269 --> 00:06:46,369
those on the next few steps and it's

00:06:42,919 --> 00:06:49,480
extensible via plugin so you can extend

00:06:46,369 --> 00:06:51,550
it and then we also have a

00:06:49,480 --> 00:06:54,490
commercial offering and I promise this

00:06:51,550 --> 00:06:55,990
is the only and last slide about that so

00:06:54,490 --> 00:06:59,050
if you're using crellick or plan to use

00:06:55,990 --> 00:07:01,210
Greylock in a professional enterprise

00:06:59,050 --> 00:07:06,000
environment just talk to me afterwards

00:07:01,210 --> 00:07:07,780
or contact us over the website so

00:07:06,000 --> 00:07:10,150
Greylock is a central management

00:07:07,780 --> 00:07:13,960
platform it can collect lakhs from your

00:07:10,150 --> 00:07:16,570
typical syslog sources like most of the

00:07:13,960 --> 00:07:19,470
network appliances it also speaks CAF

00:07:16,570 --> 00:07:23,850
which stands for the common event format

00:07:19,470 --> 00:07:27,070
which is being used by ArcSight I think

00:07:23,850 --> 00:07:29,680
mainly and it also has a proprietary

00:07:27,070 --> 00:07:32,320
format named Gelf the Greylock extended

00:07:29,680 --> 00:07:35,680
lock format which is nowadays supported

00:07:32,320 --> 00:07:38,050
by most of the programming languages

00:07:35,680 --> 00:07:41,100
programming in environments around so

00:07:38,050 --> 00:07:44,770
your JavaScript and PHP and Java Scala

00:07:41,100 --> 00:07:47,230
applications can basically lock in a

00:07:44,770 --> 00:07:49,840
structured way to great log directly it

00:07:47,230 --> 00:07:52,780
also supports the beats protocol which

00:07:49,840 --> 00:07:54,820
is being used by all the nice small

00:07:52,780 --> 00:07:57,010
programs provided by elastic like file

00:07:54,820 --> 00:07:59,560
beat or metric beat or packet beat and

00:07:57,010 --> 00:08:04,060
in today's demo we will be using packet

00:07:59,560 --> 00:08:07,000
B to collect the network data from there

00:08:04,060 --> 00:08:09,880
it also supports net flow version 5 5

00:08:07,000 --> 00:08:13,150
and 9 so you can also send your network

00:08:09,880 --> 00:08:16,630
flows directly from your switches and

00:08:13,150 --> 00:08:18,520
routers into Greylock and just to be

00:08:16,630 --> 00:08:23,160
continued there are lots of other

00:08:18,520 --> 00:08:25,630
formats but I won't go into these so

00:08:23,160 --> 00:08:28,660
that's the Greylock marketplace with

00:08:25,630 --> 00:08:31,450
lots of useful plugins like the space

00:08:28,660 --> 00:08:37,290
weather plugin so you can check if Sun

00:08:31,450 --> 00:08:41,800
flares cost your outages it's important

00:08:37,290 --> 00:08:45,040
we also have a very vivid community

00:08:41,800 --> 00:08:46,960
where you can ask your questions also

00:08:45,040 --> 00:08:49,780
the developers take a look there so

00:08:46,960 --> 00:08:53,380
you'll probably get an answer from first

00:08:49,780 --> 00:08:55,990
hand and that's the first look at

00:08:53,380 --> 00:08:58,210
Greylock itself that's basically the

00:08:55,990 --> 00:09:01,720
starting screen it's called the the

00:08:58,210 --> 00:09:03,310
universal search in this case where you

00:09:01,720 --> 00:09:07,360
can see basically a nova

00:09:03,310 --> 00:09:09,010
you over your ingested LOC messages how

00:09:07,360 --> 00:09:12,490
many locked messages have been ingested

00:09:09,010 --> 00:09:14,200
over time and basically just start your

00:09:12,490 --> 00:09:19,180
search queries so it's not different

00:09:14,200 --> 00:09:22,080
from Splunk or from having yeah all

00:09:19,180 --> 00:09:22,080
versions of Cubana

00:09:22,510 --> 00:09:29,620
as mentioned before you can have a shiny

00:09:25,270 --> 00:09:31,900
colorful dashboards there so I just show

00:09:29,620 --> 00:09:35,710
it so do you have an idea of how

00:09:31,900 --> 00:09:39,820
Greylock does look like with the typical

00:09:35,710 --> 00:09:44,380
widgets like top end tables histograms

00:09:39,820 --> 00:09:45,670
and of course if in famous map widget

00:09:44,380 --> 00:09:47,770
which everybody

00:09:45,670 --> 00:09:53,260
everyone needs but which is not very

00:09:47,770 --> 00:09:56,170
informational okay and another one okay

00:09:53,260 --> 00:09:59,380
and another feature which I won't talk

00:09:56,170 --> 00:10:03,730
about today too much is the collectors

00:09:59,380 --> 00:10:06,610
so it's basically a sidecar program

00:10:03,730 --> 00:10:08,950
which you can use to set up other lock

00:10:06,610 --> 00:10:12,280
collectors like an X lock or file bead

00:10:08,950 --> 00:10:14,950
or Winlock bead on your client machines

00:10:12,280 --> 00:10:18,940
and manage them centrally in Greylock so

00:10:14,950 --> 00:10:21,640
it can be either an extension or an

00:10:18,940 --> 00:10:23,710
replacement for your usual configuration

00:10:21,640 --> 00:10:25,810
management programs you can see if they

00:10:23,710 --> 00:10:27,910
are live if they collect locks stuff

00:10:25,810 --> 00:10:29,800
like that you can configure them on the

00:10:27,910 --> 00:10:33,610
fly so that's useful if you have a large

00:10:29,800 --> 00:10:35,830
fleet of computers that you like to

00:10:33,610 --> 00:10:40,120
collect locks lock messages and events

00:10:35,830 --> 00:10:42,040
from and yeah let's start digging

00:10:40,120 --> 00:10:47,709
that's already where we go to the live

00:10:42,040 --> 00:10:52,120
demo wow that's fast ok so can everyone

00:10:47,709 --> 00:10:52,330
see this is it big enough should make it

00:10:52,120 --> 00:10:58,030
bigger

00:10:52,330 --> 00:11:02,240
just hand sign is it ok yeah no that was

00:10:58,030 --> 00:11:07,129
too much is that ok great

00:11:02,240 --> 00:11:10,369
so that's Greylock and for today's demo

00:11:07,129 --> 00:11:14,660
as i said i have a basically synthetic

00:11:10,369 --> 00:11:16,850
environment which is issuing HTTP dns

00:11:14,660 --> 00:11:20,300
and ICMP requests so basically running

00:11:16,850 --> 00:11:22,550
ping and curl in a loop against the list

00:11:20,300 --> 00:11:26,420
of domains and some of those domains and

00:11:22,550 --> 00:11:29,540
IP addresses are part of either botnets

00:11:26,420 --> 00:11:35,179
or bamas or something like that so that

00:11:29,540 --> 00:11:42,220
we have a base to check against I just

00:11:35,179 --> 00:11:45,050
show it quickly so basically this is

00:11:42,220 --> 00:11:48,649
these are lots of docker containers

00:11:45,050 --> 00:11:52,249
running on that machine and most of them

00:11:48,649 --> 00:11:54,410
here are just running ping against some

00:11:52,249 --> 00:11:58,459
addresses and I hope the hotel Wi-Fi

00:11:54,410 --> 00:12:03,079
will let me do that yeah well you never

00:11:58,459 --> 00:12:05,540
know yeah and then in one container

00:12:03,079 --> 00:12:07,459
there's running packet beat which with a

00:12:05,540 --> 00:12:10,129
very very simple configuration can

00:12:07,459 --> 00:12:14,059
everybody see this great so it's

00:12:10,129 --> 00:12:18,170
basically just collecting all the data

00:12:14,059 --> 00:12:19,339
on this interface so it's the only

00:12:18,170 --> 00:12:22,699
network interface in this container

00:12:19,339 --> 00:12:27,679
it'll collect ICMP packets so in other

00:12:22,699 --> 00:12:33,259
words pings and it will collect DNS

00:12:27,679 --> 00:12:35,629
requests so checking which clients issue

00:12:33,259 --> 00:12:41,319
again s requests to the DNS resolver and

00:12:35,629 --> 00:12:45,019
what their response was and it collects

00:12:41,319 --> 00:12:48,199
HTTP requests and all of that is being

00:12:45,019 --> 00:12:51,139
sent to this machine which is you

00:12:48,199 --> 00:12:55,369
guessed it Greylock just share the

00:12:51,139 --> 00:12:57,110
inputs so basically everything will get

00:12:55,369 --> 00:13:00,589
today will come in through the beats

00:12:57,110 --> 00:13:02,959
input which is this one there are also

00:13:00,589 --> 00:13:05,029
others but they are not as interesting

00:13:02,959 --> 00:13:10,299
so basically just one bit input where

00:13:05,029 --> 00:13:10,299
packet beat is sending all its data and

00:13:12,490 --> 00:13:22,110
let's take a look

00:13:15,620 --> 00:13:24,750
here so mmm okay

00:13:22,110 --> 00:13:28,020
does she okay so these are basically

00:13:24,750 --> 00:13:31,830
this is histogram which basically just

00:13:28,020 --> 00:13:34,070
shows in minute buckets so how many

00:13:31,830 --> 00:13:36,330
messages have been received each minute

00:13:34,070 --> 00:13:39,510
since it has been started and it has

00:13:36,330 --> 00:13:45,150
been started I think an hour ago

00:13:39,510 --> 00:13:49,170
something like that yes one can go so

00:13:45,150 --> 00:13:51,690
this one is just a basic view there we

00:13:49,170 --> 00:13:55,310
get the data collected by packet beat

00:13:51,690 --> 00:13:58,140
and if we take a look at one of these

00:13:55,310 --> 00:14:02,850
HTTP requests it shows the typical data

00:13:58,140 --> 00:14:05,340
like how big the request was the

00:14:02,850 --> 00:14:08,880
destination address where it was pointed

00:14:05,340 --> 00:14:12,090
the port is of course 80 because HTTP we

00:14:08,880 --> 00:14:13,890
get the response code we get the actual

00:14:12,090 --> 00:14:16,200
query so in this case it's only head

00:14:13,890 --> 00:14:22,320
queries so that I don't cause too much

00:14:16,200 --> 00:14:24,960
traffic and it also shows which client

00:14:22,320 --> 00:14:28,890
issued this request so in this case this

00:14:24,960 --> 00:14:30,390
is a little bit well simple because

00:14:28,890 --> 00:14:34,530
there's just one client issuing these

00:14:30,390 --> 00:14:38,670
requests but okay and if we take a look

00:14:34,530 --> 00:14:44,490
at a DNS request we get two typical DNS

00:14:38,670 --> 00:14:47,730
attributes like if the client requested

00:14:44,490 --> 00:14:52,650
recursion of the resolver and if it was

00:14:47,730 --> 00:14:55,200
granted we get the type of query in this

00:14:52,650 --> 00:14:58,320
case it was very foreign a record the a

00:14:55,200 --> 00:15:01,920
record is basically just a pointer to

00:14:58,320 --> 00:15:04,800
the IP address of a domain name so an

00:15:01,920 --> 00:15:10,890
eye record says for example that net

00:15:04,800 --> 00:15:14,100
waste dot de is whatever 30 7.35 to 1

00:15:10,890 --> 00:15:16,050
something like that we get the response

00:15:14,100 --> 00:15:18,570
code whether it was an error or not and

00:15:16,050 --> 00:15:21,920
also the typical addresses like

00:15:18,570 --> 00:15:21,920
destination address and destination port

00:15:22,130 --> 00:15:27,820
yeah basically just the typical AB

00:15:24,600 --> 00:15:32,260
attributes and the

00:15:27,820 --> 00:15:36,820
is that the data as it comes from packet

00:15:32,260 --> 00:15:39,940
beat itself is not looking that way so

00:15:36,820 --> 00:15:44,110
we have to rewrite it when it comes into

00:15:39,940 --> 00:15:46,930
the system and Greylock has several

00:15:44,110 --> 00:15:49,300
different unfortunately it still has

00:15:46,930 --> 00:15:52,030
different ways of doing that one of that

00:15:49,300 --> 00:15:55,060
is extractors which will be applied to

00:15:52,030 --> 00:15:58,360
every message that comes in on a

00:15:55,060 --> 00:16:01,030
specific input so in this case there are

00:15:58,360 --> 00:16:06,670
none here because I'm doing it in a

00:16:01,030 --> 00:16:10,900
different way yeah but what you could do

00:16:06,670 --> 00:16:17,470
here just load an example message what

00:16:10,900 --> 00:16:20,380
you could do here is for example check

00:16:17,470 --> 00:16:24,220
the IP address or a longer lock line

00:16:20,380 --> 00:16:27,280
against a croc pattern or extract it

00:16:24,220 --> 00:16:31,780
with a regular expression or simply just

00:16:27,280 --> 00:16:35,100
copy the value and convert it into a

00:16:31,780 --> 00:16:39,430
numeric data type something like that

00:16:35,100 --> 00:16:41,410
the way we are doing it today is using

00:16:39,430 --> 00:16:44,740
the pipeline features so if you've been

00:16:41,410 --> 00:16:46,450
using great lock for a longer time the

00:16:44,740 --> 00:16:48,390
pipeline features are relatively new I

00:16:46,450 --> 00:16:54,930
think they've been introduced with

00:16:48,390 --> 00:16:59,800
acrylic 2.2 like yeah almost a year ago

00:16:54,930 --> 00:17:03,839
and the pipeline's are basically a very

00:16:59,800 --> 00:17:06,130
flexible way of running filters and

00:17:03,839 --> 00:17:13,060
pipeline rules which we'll take a look

00:17:06,130 --> 00:17:14,980
at against messages so maybe first

00:17:13,060 --> 00:17:17,290
explain here so usually if you get lots

00:17:14,980 --> 00:17:20,589
of messages you want to categorize or

00:17:17,290 --> 00:17:24,030
sorting in a specific kind of way so

00:17:20,589 --> 00:17:26,949
that you that you can allow a certain

00:17:24,030 --> 00:17:28,750
group of people to for example to see

00:17:26,949 --> 00:17:30,970
just the locks of your web servers while

00:17:28,750 --> 00:17:34,060
other people want to see maybe the locks

00:17:30,970 --> 00:17:36,640
of all your network appliances so in

00:17:34,060 --> 00:17:40,840
gray lock the way of categorizing and

00:17:36,640 --> 00:17:41,830
sorting things is called streams which

00:17:40,840 --> 00:17:47,500
can be

00:17:41,830 --> 00:17:49,960
you find very simply by adding so-called

00:17:47,500 --> 00:17:53,610
stream rules and in this case we are

00:17:49,960 --> 00:17:57,760
collecting in a stream called DNS

00:17:53,610 --> 00:18:00,669
recollecting all messages which have the

00:17:57,760 --> 00:18:02,799
type DNS this is preset by packet beat

00:18:00,669 --> 00:18:06,700
or by the packet beat by the beats

00:18:02,799 --> 00:18:08,019
plug-in in Greylock and which I have to

00:18:06,700 --> 00:18:10,360
facility packet beat so we know that

00:18:08,019 --> 00:18:13,200
it's from packet beat and not from a

00:18:10,360 --> 00:18:16,559
windwalk beat or file bit or any other

00:18:13,200 --> 00:18:19,210
client that's sending stuff in there so

00:18:16,559 --> 00:18:22,419
if we go to the stream

00:18:19,210 --> 00:18:28,649
it also looks again like the search page

00:18:22,419 --> 00:18:32,110
in the first place if it loads to them

00:18:28,649 --> 00:18:35,940
so it will look the same like the search

00:18:32,110 --> 00:18:38,049
page I showed before just with the

00:18:35,940 --> 00:18:42,340
restriction that it will only contain

00:18:38,049 --> 00:18:45,610
messages which have been generated from

00:18:42,340 --> 00:18:51,809
DNS packets which have been captured by

00:18:45,610 --> 00:18:51,809
packet beat this one doesn't want okay

00:18:55,260 --> 00:19:00,820
that's too bad

00:18:56,970 --> 00:19:02,200
ok then let's go back to the pipelines

00:19:00,820 --> 00:19:09,070
as I said before that's a way of

00:19:02,200 --> 00:19:13,470
flexibly filtering and manipulating

00:19:09,070 --> 00:19:17,740
messages and now it hangs it's not good

00:19:13,470 --> 00:19:23,130
yeah live demo that's why there is this

00:19:17,740 --> 00:19:26,139
smiley there it is okay so we have

00:19:23,130 --> 00:19:26,559
pipelines which we can connect to

00:19:26,139 --> 00:19:30,100
streams

00:19:26,559 --> 00:19:33,149
so again streams are basically just a

00:19:30,100 --> 00:19:35,470
way of tagging messages so you can have

00:19:33,149 --> 00:19:38,980
messages of the same type or for the

00:19:35,470 --> 00:19:43,179
same application or whatever in the same

00:19:38,980 --> 00:19:47,679
place and you can allow your users to

00:19:43,179 --> 00:19:51,340
search in streams so for example if you

00:19:47,679 --> 00:19:52,929
have a group of dedicated name server

00:19:51,340 --> 00:19:55,299
administrators they probably want to

00:19:52,929 --> 00:19:57,519
have access to the DNS tree

00:19:55,299 --> 00:20:01,029
but not to the HTTP stream or to the

00:19:57,519 --> 00:20:03,539
application stream which will contain

00:20:01,029 --> 00:20:12,039
messages they are just not interested in

00:20:03,539 --> 00:20:16,139
so we have this OMC pipeline and

00:20:12,039 --> 00:20:16,139
hopefully it loads the next page

00:20:22,560 --> 00:20:33,840
I'm sorry about the wait yeah also

00:20:32,040 --> 00:20:44,400
it's docker so of course it will not

00:20:33,840 --> 00:20:45,960
work and if everything fails you can

00:20:44,400 --> 00:20:49,140
just reload hooray

00:20:45,960 --> 00:20:51,770
okay so you have this or we have this I

00:20:49,140 --> 00:20:57,180
was in C pipeline here which contains

00:20:51,770 --> 00:21:01,020
several stages so each stage contains a

00:20:57,180 --> 00:21:04,770
list or at least one rule and we can say

00:21:01,020 --> 00:21:07,110
ok if the messages match one of those

00:21:04,770 --> 00:21:09,780
rules here and we'll take a look at

00:21:07,110 --> 00:21:12,660
these rules in the next step if they

00:21:09,780 --> 00:21:14,670
match one of those rules then go to the

00:21:12,660 --> 00:21:17,520
next stage so basically we can have a

00:21:14,670 --> 00:21:21,060
cascading set of filters there so that

00:21:17,520 --> 00:21:22,950
not every single rule and not every

00:21:21,060 --> 00:21:24,480
single extractor is run against every

00:21:22,950 --> 00:21:28,440
message so you can filter out before

00:21:24,480 --> 00:21:31,530
that and so maybe just save some

00:21:28,440 --> 00:21:34,020
performance for more important tasks so

00:21:31,530 --> 00:21:39,390
we'll just take a look at the first rule

00:21:34,020 --> 00:21:45,480
which we'll clean up okay this is a bit

00:21:39,390 --> 00:21:48,420
small so we'll take just one so this is

00:21:45,480 --> 00:21:53,610
basically the same thing that's in here

00:21:48,420 --> 00:21:57,630
but the zoom doesn't work probably okay

00:21:53,610 --> 00:21:59,940
so everyone can read this okay so what

00:21:57,630 --> 00:22:02,220
we do here is we have a rule named clean

00:21:59,940 --> 00:22:03,780
packet beat generic in this case it just

00:22:02,220 --> 00:22:06,210
cleans up the generic packet beats

00:22:03,780 --> 00:22:10,560
fields that are part of every message

00:22:06,210 --> 00:22:17,910
current generated by packet beat so it

00:22:10,560 --> 00:22:24,030
probe it wouldn't I'll go back to a you

00:22:17,910 --> 00:22:27,120
know search so it don't come so it only

00:22:24,030 --> 00:22:30,330
cleans up the messages that are from

00:22:27,120 --> 00:22:33,929
that specific client program and none

00:22:30,330 --> 00:22:36,179
else and okay we're checking if it

00:22:33,929 --> 00:22:39,149
actually is from packet beats

00:22:36,179 --> 00:22:41,190
it has the field facility and this is

00:22:39,149 --> 00:22:44,159
set Pecha beat and if it has this field

00:22:41,190 --> 00:22:49,139
and it has this value then we are

00:22:44,159 --> 00:22:52,649
executing the rule so if a message does

00:22:49,139 --> 00:22:55,649
not match this condition then the rule

00:22:52,649 --> 00:22:59,600
is not executed and all following stages

00:22:55,649 --> 00:23:01,249
of the pipeline will not be executed

00:22:59,600 --> 00:23:06,950
[Music]

00:23:01,249 --> 00:23:06,950
okay just for

00:23:20,269 --> 00:23:29,450
this is new okay let's go back there and

00:23:25,820 --> 00:23:32,539
what we'll do here is just basically

00:23:29,450 --> 00:23:35,179
renaming the fields that are contained

00:23:32,539 --> 00:23:37,759
in a message so whatever can comes from

00:23:35,179 --> 00:23:39,649
the beats input has the field names

00:23:37,759 --> 00:23:43,669
prefixed with the name of the beat so in

00:23:39,649 --> 00:23:46,279
this case the field client IP received

00:23:43,669 --> 00:23:49,459
from a packet beat message would be in

00:23:46,279 --> 00:23:51,859
the Hecate beat dot client IP field of

00:23:49,459 --> 00:23:54,049
the graylek message and we want to have

00:23:51,859 --> 00:23:56,649
it in source address and destination

00:23:54,049 --> 00:23:59,119
address and stuff like that just to have

00:23:56,649 --> 00:24:02,869
consolidated view on all of these

00:23:59,119 --> 00:24:13,579
attributes so we can run later rules

00:24:02,869 --> 00:24:20,089
against these attributes so differently

00:24:13,579 --> 00:24:23,719
and hopefully loads so yeah so these are

00:24:20,089 --> 00:24:25,429
just internal log messages from Greylock

00:24:23,719 --> 00:24:27,589
itself feeding back into Greylock

00:24:25,429 --> 00:24:30,739
because dogfood hooray

00:24:27,589 --> 00:24:32,929
and these obviously have different

00:24:30,739 --> 00:24:36,379
attributes so in this case there's

00:24:32,929 --> 00:24:38,869
nothing resembling a source address or

00:24:36,379 --> 00:24:43,989
destination address and so all these

00:24:38,869 --> 00:24:52,579
messages would not be evaluated by the

00:24:43,989 --> 00:24:53,919
pipeline that i've shown before so going

00:24:52,579 --> 00:24:56,719
back there

00:24:53,919 --> 00:24:58,820
so this first rule is basically really

00:24:56,719 --> 00:25:00,440
just cleaning up the attributes of the

00:24:58,820 --> 00:25:03,859
field and removing everything that we

00:25:00,440 --> 00:25:08,959
are not interested in and then in the

00:25:03,859 --> 00:25:10,849
next stage here so this was just the

00:25:08,959 --> 00:25:14,509
first stage and then we are cleaning up

00:25:10,849 --> 00:25:17,570
everything which is protocol specific

00:25:14,509 --> 00:25:24,379
like the DNS fields we'll just take a

00:25:17,570 --> 00:25:27,649
quick look in there with in this one so

00:25:24,379 --> 00:25:30,049
these rules are relatively simple once

00:25:27,649 --> 00:25:34,089
you crop the syntax and there's

00:25:30,049 --> 00:25:34,089
documentation for that so no worries

00:25:35,110 --> 00:25:41,210
so this one would basically just check

00:25:37,669 --> 00:25:43,309
if the message is of the type DNS this

00:25:41,210 --> 00:25:45,320
is provided by packet beat so it says

00:25:43,309 --> 00:25:50,840
what kind of protocol was being recorded

00:25:45,320 --> 00:25:56,179
and this one is then just cleaning up

00:25:50,840 --> 00:25:58,340
all the other fields and okay can you

00:25:56,179 --> 00:26:01,850
read the thing at the bottom you're at

00:25:58,340 --> 00:26:11,750
the back or probably not then just do it

00:26:01,850 --> 00:26:14,809
differently lifehacks for example we are

00:26:11,750 --> 00:26:16,669
just modifying one of the values to not

00:26:14,809 --> 00:26:19,940
contain a trailing dot which is typical

00:26:16,669 --> 00:26:24,230
for DNS requests so usually contains a

00:26:19,940 --> 00:26:26,389
dot at the end too simple which is a

00:26:24,230 --> 00:26:27,919
symbol for the route and we're just

00:26:26,389 --> 00:26:34,490
removing that so that our queries are

00:26:27,919 --> 00:26:38,269
simpler so and then we're doing that for

00:26:34,490 --> 00:26:40,490
DNS HIV and ICMP packets which is the

00:26:38,269 --> 00:26:43,700
only thing that packet BT is recording

00:26:40,490 --> 00:26:46,519
at the moment and then we'll come to the

00:26:43,700 --> 00:26:50,179
interesting stuff Greylock 2.4 which

00:26:46,519 --> 00:26:53,960
will be released in one or two weeks so

00:26:50,179 --> 00:26:56,299
I hope at least will contain in the

00:26:53,960 --> 00:26:58,279
so-called threat intelligence plugin out

00:26:56,299 --> 00:27:02,929
of the box and the threat Intel plug-in

00:26:58,279 --> 00:27:05,360
is a plug-in providing functions and a

00:27:02,929 --> 00:27:06,789
lookup table so I'll just show look-up

00:27:05,360 --> 00:27:13,190
tables which is also a new feature

00:27:06,789 --> 00:27:15,950
introduced in 2.3 I think which will

00:27:13,190 --> 00:27:21,230
contain look-up tables pre-installed and

00:27:15,950 --> 00:27:25,759
pre-configured to check various block

00:27:21,230 --> 00:27:29,990
lists and threats horses and in this

00:27:25,759 --> 00:27:32,299
case this is just an overview so you can

00:27:29,990 --> 00:27:35,409
check against the abuse ch ransomware IP

00:27:32,299 --> 00:27:38,110
and for example check if one of your

00:27:35,409 --> 00:27:42,519
clients in your network environment is

00:27:38,110 --> 00:27:45,710
talking to one of those known ransomware

00:27:42,519 --> 00:27:47,120
domains or IPS so this is a good

00:27:45,710 --> 00:27:51,650
indicator that

00:27:47,120 --> 00:27:55,700
they call it a a Trojan or virus or

00:27:51,650 --> 00:27:59,000
whatever and that's just a list so you

00:27:55,700 --> 00:28:04,940
also have the spam house spam list so

00:27:59,000 --> 00:28:07,820
you can check your SMTP your mail server

00:28:04,940 --> 00:28:12,020
locks against spam house directly in

00:28:07,820 --> 00:28:14,930
gray lock and alert if you if either you

00:28:12,020 --> 00:28:17,330
are listed on on a spam house list or if

00:28:14,930 --> 00:28:21,970
one of your client computers is speaking

00:28:17,330 --> 00:28:25,490
to spam house if it's listed there so

00:28:21,970 --> 00:28:30,700
that's just an overview and in going

00:28:25,490 --> 00:28:40,309
back to the pipeline's that's in the

00:28:30,700 --> 00:28:43,700
third step we are in which we will check

00:28:40,309 --> 00:28:45,440
the destination address and the source

00:28:43,700 --> 00:28:50,480
address and stuff like that against

00:28:45,440 --> 00:28:57,910
these various lists so if you wanted to

00:28:50,480 --> 00:28:57,910
do that it's also one

00:29:06,000 --> 00:29:11,040
so this one is pretty simple rule so it

00:29:08,910 --> 00:29:14,250
would check if it if the message

00:29:11,040 --> 00:29:17,370
contains a destination address field and

00:29:14,250 --> 00:29:22,770
if that destination address is not in a

00:29:17,370 --> 00:29:30,890
private IP range like the ones defined

00:29:22,770 --> 00:29:36,840
in our C 1918 like 10.000 slash 24 or

00:29:30,890 --> 00:29:40,080
192 168 86 that one you know what I'm

00:29:36,840 --> 00:29:41,610
talking about you're professionals so it

00:29:40,080 --> 00:29:44,430
will check if these fields are there and

00:29:41,610 --> 00:29:48,060
if it's not in a private IP net and then

00:29:44,430 --> 00:29:53,510
it would just look that IP up in all

00:29:48,060 --> 00:29:59,030
these pre-configured threat intelligence

00:29:53,510 --> 00:30:08,670
look-up tables like the abuse CH list

00:29:59,030 --> 00:30:11,040
maybe that works yeah so this single

00:30:08,670 --> 00:30:15,330
function will look up if the IP address

00:30:11,040 --> 00:30:22,170
in the des terres field is listed in any

00:30:15,330 --> 00:30:25,230
of these lists here and if it was

00:30:22,170 --> 00:30:27,930
illicit and it has a attribute that's

00:30:25,230 --> 00:30:30,300
called thread indicated which is

00:30:27,930 --> 00:30:33,630
basically just a boolean value true or

00:30:30,300 --> 00:30:36,000
false and which can be added to the

00:30:33,630 --> 00:30:38,430
message with the search fields function

00:30:36,000 --> 00:30:46,290
so we take the result just edit to the

00:30:38,430 --> 00:30:47,640
message and if we take a look there so

00:30:46,290 --> 00:30:50,700
we're searching the last five minutes

00:30:47,640 --> 00:30:53,580
should be quite enough and we can check

00:30:50,700 --> 00:30:59,760
if there was anything with a threat

00:30:53,580 --> 00:31:04,860
indicated and yeah there are some so we

00:30:59,760 --> 00:31:07,290
have this HTTP request which is where a

00:31:04,860 --> 00:31:09,780
client is talking to an IP address which

00:31:07,290 --> 00:31:12,600
was listed in the abuse CH ransomware

00:31:09,780 --> 00:31:15,980
list so there's probably some client

00:31:12,600 --> 00:31:19,380
which has one of these Trojans which

00:31:15,980 --> 00:31:25,020
encrypt your hard disk and then at

00:31:19,380 --> 00:31:27,679
to get ransom for it we also have he

00:31:25,020 --> 00:31:31,320
also like a DNS query for one of those

00:31:27,679 --> 00:31:33,900
mmm that could be some botnet command

00:31:31,320 --> 00:31:36,809
control server whatever at least it

00:31:33,900 --> 00:31:40,919
looks suspicious already the domain so

00:31:36,809 --> 00:31:47,400
the DNS request was for this domain P

00:31:40,919 --> 00:31:48,750
27g okay you can read it and what

00:31:47,400 --> 00:31:53,490
Greylock detected there simply by

00:31:48,750 --> 00:31:56,250
querying the pre-configured block lists

00:31:53,490 --> 00:31:59,400
is that this might be a threat so we can

00:31:56,250 --> 00:32:02,669
also add additional details there but

00:31:59,400 --> 00:32:06,000
usually it's sufficient to know that

00:32:02,669 --> 00:32:08,669
there was a threat at all so that's it

00:32:06,000 --> 00:32:12,330
and now that we have all this

00:32:08,669 --> 00:32:15,000
information in our messages like this

00:32:12,330 --> 00:32:17,820
boolean flag if it was a threat and all

00:32:15,000 --> 00:32:21,240
the other protocol details we can add

00:32:17,820 --> 00:32:26,400
them to a dashboard so for example if we

00:32:21,240 --> 00:32:29,870
wanted to know all threads from the last

00:32:26,400 --> 00:32:32,760
30 minutes we can just run the query and

00:32:29,870 --> 00:32:37,140
now in the result field here are only

00:32:32,760 --> 00:32:40,559
messages which are basically suspicious

00:32:37,140 --> 00:32:44,070
so which have this attribute set and we

00:32:40,559 --> 00:32:51,120
can check in probably not big enough

00:32:44,070 --> 00:32:53,270
okay and we can check what the actual or

00:32:51,120 --> 00:32:59,130
the actual destination address has been

00:32:53,270 --> 00:33:03,890
so can take quickly values of the

00:32:59,130 --> 00:33:08,610
destination address and so we see okay

00:33:03,890 --> 00:33:11,370
this one is probably me this is this

00:33:08,610 --> 00:33:13,860
computer yes threat indicate indicated

00:33:11,370 --> 00:33:15,470
okay that's range but probably theirs

00:33:13,860 --> 00:33:21,450
[Music]

00:33:15,470 --> 00:33:23,580
okay now I got it it's this part is

00:33:21,450 --> 00:33:26,490
because we're now searching through all

00:33:23,580 --> 00:33:29,700
messages and not just the DNS or ICMP

00:33:26,490 --> 00:33:33,830
messages so there might also be a source

00:33:29,700 --> 00:33:36,169
address where a threat was indicated

00:33:33,830 --> 00:33:41,330
a DNS query for a domain where this was

00:33:36,169 --> 00:33:43,460
indicated so if we just want to know it

00:33:41,330 --> 00:33:47,510
for the destination address we can use

00:33:43,460 --> 00:33:51,169
this one so the threat indicated field

00:33:47,510 --> 00:33:54,020
is basically a consolidated field it's a

00:33:51,169 --> 00:33:56,659
flag that just becomes true if any of

00:33:54,020 --> 00:33:59,929
the other thread indicated fields was

00:33:56,659 --> 00:34:01,820
true so if the for example if there was

00:33:59,929 --> 00:34:06,380
a DNS request for one of those domains

00:34:01,820 --> 00:34:10,700
or if there was communication via HTTP

00:34:06,380 --> 00:34:12,320
or an ICP ICMP packet sent to one of

00:34:10,700 --> 00:34:14,510
these addresses which are listed on

00:34:12,320 --> 00:34:17,810
those lists then it will be consolidated

00:34:14,510 --> 00:34:26,300
in the thread indicated which is by the

00:34:17,810 --> 00:34:37,010
way what we're doing in this rule so get

00:34:26,300 --> 00:34:39,169
a bigger plate so here we just check if

00:34:37,010 --> 00:34:43,399
any of the other thread indicator

00:34:39,169 --> 00:34:47,000
attributes has been set and if it's the

00:34:43,399 --> 00:34:49,399
case then we just write it into this

00:34:47,000 --> 00:34:51,169
field to make lookups easier just like I

00:34:49,399 --> 00:34:53,540
did there and easier means of course

00:34:51,169 --> 00:34:56,720
that you can get false positive just

00:34:53,540 --> 00:34:58,640
like I just did so if you just check for

00:34:56,720 --> 00:35:00,800
the destination address and that again

00:34:58,640 --> 00:35:02,839
so that looks better so these are

00:35:00,800 --> 00:35:06,530
probably IP addresses which have been

00:35:02,839 --> 00:35:09,170
listed on any of those block list

00:35:06,530 --> 00:35:11,869
probably AB usage so that's just an

00:35:09,170 --> 00:35:14,690
overview of the top five in this case

00:35:11,869 --> 00:35:22,430
and then the long tail there we can also

00:35:14,690 --> 00:35:24,800
check how many messages have been have

00:35:22,430 --> 00:35:26,420
been found with this thread indicator

00:35:24,800 --> 00:35:28,970
which is basically just the histogram

00:35:26,420 --> 00:35:30,950
there and we can add that to a dashboard

00:35:28,970 --> 00:35:33,230
so for example for all connections or

00:35:30,950 --> 00:35:40,760
just for the NS and since I did that

00:35:33,230 --> 00:35:44,260
before would just take a look on that so

00:35:40,760 --> 00:35:46,740
I think I'll make that one smaller a bit

00:35:44,260 --> 00:35:49,050
so you can see more

00:35:46,740 --> 00:35:52,430
so the details aren't important there

00:35:49,050 --> 00:35:57,540
it's just that again we have here

00:35:52,430 --> 00:36:00,540
basically a breakdown of all the DNS

00:35:57,540 --> 00:36:04,589
requests which have been successful so

00:36:00,540 --> 00:36:09,599
and here we see to which destination

00:36:04,589 --> 00:36:11,450
stay where so clients try to resolve who

00:36:09,599 --> 00:36:13,890
is that our input but net so

00:36:11,450 --> 00:36:16,050
incidentally this is probably Greylock

00:36:13,890 --> 00:36:19,760
itself because I also have a who is

00:36:16,050 --> 00:36:23,220
looking up running on each message and

00:36:19,760 --> 00:36:25,500
so the next one Google Co the UK stuff

00:36:23,220 --> 00:36:27,390
like a Saudis one other tourist one real

00:36:25,500 --> 00:36:29,790
ones so we could probably filter that

00:36:27,390 --> 00:36:32,160
out right now and let's set up daytime

00:36:29,790 --> 00:36:35,280
running packet beat is just recording

00:36:32,160 --> 00:36:38,700
all the traffic inside that taco network

00:36:35,280 --> 00:36:42,720
so it's also where Greylock is running

00:36:38,700 --> 00:36:45,750
in yeah we see a number of successful

00:36:42,720 --> 00:36:48,210
requests and we can also just replay

00:36:45,750 --> 00:36:55,109
that search in the actual search

00:36:48,210 --> 00:36:58,680
interface once I'm offended and this was

00:36:55,109 --> 00:37:03,060
simply a query for status okay in the

00:36:58,680 --> 00:37:06,030
DNS stream and this is what this is

00:37:03,060 --> 00:37:08,910
based on and here we have possible

00:37:06,030 --> 00:37:11,760
threats where this DNS question threat

00:37:08,910 --> 00:37:15,240
until threat indicated attribute has

00:37:11,760 --> 00:37:19,440
been set so some client so probably my

00:37:15,240 --> 00:37:22,490
very sophisticated ping and curl docker

00:37:19,440 --> 00:37:25,710
containers have been trying to resolve

00:37:22,490 --> 00:37:32,130
one of these domains which look again

00:37:25,710 --> 00:37:34,020
very suspicious very often and which has

00:37:32,130 --> 00:37:39,950
been recalled here and also we can here

00:37:34,020 --> 00:37:39,950
replay in the original search query and

00:37:40,220 --> 00:37:46,950
yeah it's incognito mode that's why it's

00:37:43,130 --> 00:37:49,349
not saving that stuff and again here

00:37:46,950 --> 00:37:52,290
it's just threat indicated true so it's

00:37:49,349 --> 00:37:54,450
that flag that has been added via our

00:37:52,290 --> 00:37:59,870
pipeline rules to the messages in the

00:37:54,450 --> 00:38:02,840
DNS stream so

00:37:59,870 --> 00:38:04,670
I think okay that's in the other

00:38:02,840 --> 00:38:06,110
dashboard so we also have the usual

00:38:04,670 --> 00:38:10,070
metrics here like the response time of

00:38:06,110 --> 00:38:11,870
these DNS requests which might be

00:38:10,070 --> 00:38:13,670
interesting so if that goes up you know

00:38:11,870 --> 00:38:18,160
that something is wrong with your DNS

00:38:13,670 --> 00:38:20,270
resolvers and again we can here just see

00:38:18,160 --> 00:38:22,400
what it's based on so it's basically

00:38:20,270 --> 00:38:24,860
just an unqualified search so every

00:38:22,400 --> 00:38:28,880
message is in there from the DNS stream

00:38:24,860 --> 00:38:32,750
so every DNS request and we craft it

00:38:28,880 --> 00:38:39,320
there for the response time so we can

00:38:32,750 --> 00:38:41,810
also just show it here we have this

00:38:39,320 --> 00:38:44,630
response time field which has been named

00:38:41,810 --> 00:38:47,980
that way by our clean up rules and we

00:38:44,630 --> 00:38:54,890
can just generate a chart from that and

00:38:47,980 --> 00:38:58,430
add it to a an arbitrary dashboard that

00:38:54,890 --> 00:39:02,350
we already created so you can have the

00:38:58,430 --> 00:39:05,960
overview there and then of course

00:39:02,350 --> 00:39:09,410
something that must not be missing is of

00:39:05,960 --> 00:39:12,580
course also the map widget so we see

00:39:09,410 --> 00:39:14,960
where all the requests in this case the

00:39:12,580 --> 00:39:18,740
destination address where they are

00:39:14,960 --> 00:39:22,760
located and yeah it's mostly Europe and

00:39:18,740 --> 00:39:24,680
the US and some in Russia okay so as I

00:39:22,760 --> 00:39:27,320
said the informational value of the map

00:39:24,680 --> 00:39:32,260
widget in my opinion is not very high

00:39:27,320 --> 00:39:35,960
but it's a good eye catcher and then

00:39:32,260 --> 00:39:39,350
yeah basically we have here the stats

00:39:35,960 --> 00:39:41,930
generated from all the packets generated

00:39:39,350 --> 00:39:51,110
by packet beat for example the response

00:39:41,930 --> 00:39:53,630
time rate so we can have again and again

00:39:51,110 --> 00:39:57,740
it's an a qualified search so all

00:39:53,630 --> 00:40:00,530
messages from packet beat will be

00:39:57,740 --> 00:40:02,780
included in that search and we can check

00:40:00,530 --> 00:40:08,210
their response time again but this time

00:40:02,780 --> 00:40:10,580
we can just take a look at the typical

00:40:08,210 --> 00:40:13,670
statistics that might be interesting so

00:40:10,580 --> 00:40:17,550
the mean response time is very bad

00:40:13,670 --> 00:40:21,240
580 milliseconds which I blame the hotel

00:40:17,550 --> 00:40:22,890
Wi-Fi and also we can add that to other

00:40:21,240 --> 00:40:29,070
dashboards so that just as an overview

00:40:22,890 --> 00:40:33,119
and now to a interesting feature there

00:40:29,070 --> 00:40:34,940
so crellick supports alerting

00:40:33,119 --> 00:40:45,780
out-of-the-box also in the free version

00:40:34,940 --> 00:40:49,050
and we can add a a let's just delete

00:40:45,780 --> 00:40:51,000
that and make a new one we can make an

00:40:49,050 --> 00:40:55,530
alert condition there which will alert

00:40:51,000 --> 00:41:00,930
us if there is any message in ddns

00:40:55,530 --> 00:41:03,060
stream which has the field quality nice

00:41:00,930 --> 00:41:06,119
right which has the field threat

00:41:03,060 --> 00:41:13,280
indicated that's the one we had have

00:41:06,119 --> 00:41:15,599
been using before if that is true and so

00:41:13,280 --> 00:41:19,140
with all these pre-processing of the

00:41:15,599 --> 00:41:23,280
messages so basically consolidating the

00:41:19,140 --> 00:41:26,930
field names there from the specific fit

00:41:23,280 --> 00:41:30,030
names into a commonly used one like

00:41:26,930 --> 00:41:33,300
destination address and then running

00:41:30,030 --> 00:41:36,830
that destination address against a

00:41:33,300 --> 00:41:40,260
battery of our block list lookups and

00:41:36,830 --> 00:41:42,770
then again here setting that simple one

00:41:40,260 --> 00:41:45,869
that threat in threat indicated

00:41:42,770 --> 00:41:48,540
attribute we can just check it here in

00:41:45,869 --> 00:41:51,990
the alert condition check if that threat

00:41:48,540 --> 00:41:53,940
indicator thing is true and we want to

00:41:51,990 --> 00:42:02,390
include at least some messages in the

00:41:53,940 --> 00:42:07,290
backlog and criteria don't care so and

00:42:02,390 --> 00:42:11,580
there it is okay and now if we take a

00:42:07,290 --> 00:42:17,190
look at words it says there has been

00:42:11,580 --> 00:42:23,400
okay no alerts with that one let's check

00:42:17,190 --> 00:42:27,620
it true and typed yes I could also just

00:42:23,400 --> 00:42:33,600
check the DNS stream in this case but

00:42:27,620 --> 00:42:37,890
just to show combined one okay okay so

00:42:33,600 --> 00:42:39,930
there have been some and alerts yeah

00:42:37,890 --> 00:42:41,790
okay there it is so it takes some time

00:42:39,930 --> 00:42:44,490
because the alerting is basically based

00:42:41,790 --> 00:42:48,450
on recurring searches so it takes up to

00:42:44,490 --> 00:42:51,360
sixty seconds depending on your

00:42:48,450 --> 00:42:53,580
configuration can take some time until a

00:42:51,360 --> 00:42:57,690
alert is actually issued but in this

00:42:53,580 --> 00:43:04,080
case it found some messages which have

00:42:57,690 --> 00:43:08,610
been detected to contain threats and you

00:43:04,080 --> 00:43:12,090
can basically add notifications for that

00:43:08,610 --> 00:43:14,310
to your monitoring system you can just

00:43:12,090 --> 00:43:17,760
send emails so out of the box there's an

00:43:14,310 --> 00:43:18,750
HTTP callback which basically just sends

00:43:17,760 --> 00:43:21,150
an HTTP POST

00:43:18,750 --> 00:43:25,410
to a configured endpoint containing

00:43:21,150 --> 00:43:27,990
details about the alert or an email to

00:43:25,410 --> 00:43:31,140
you as the administrators but there are

00:43:27,990 --> 00:43:32,850
also integrations for off Streamy pager

00:43:31,140 --> 00:43:37,500
duty and all that stuff that you usually

00:43:32,850 --> 00:43:42,600
want to have and yeah so basically

00:43:37,500 --> 00:43:46,130
that's the whole process there so

00:43:42,600 --> 00:43:49,110
basically collecting the data with some

00:43:46,130 --> 00:43:53,940
clients such as packet beet in your

00:43:49,110 --> 00:43:56,430
environment and then cleaning up the

00:43:53,940 --> 00:44:00,660
data so you can make sensible searches

00:43:56,430 --> 00:44:05,750
on them and then basically creating

00:44:00,660 --> 00:44:10,670
alerts on these cleaned up messages so

00:44:05,750 --> 00:44:10,670
are there any questions up to now

00:44:15,920 --> 00:44:19,339
yes no maybe

00:44:30,369 --> 00:44:37,060
our pipelines the preferred way to

00:44:32,849 --> 00:44:40,420
enrich data or instructors not to be

00:44:37,060 --> 00:44:43,599
used any more preferable in a way that

00:44:40,420 --> 00:44:46,450
they are the most extensible and the

00:44:43,599 --> 00:44:48,910
most powerful feature to do that if you

00:44:46,450 --> 00:44:51,160
have in quotes simple messages and just

00:44:48,910 --> 00:44:53,859
want to enrich simple stuff you can

00:44:51,160 --> 00:44:56,230
still use the extractors so but our plan

00:44:53,859 --> 00:44:59,349
is to basically replace the extractors

00:44:56,230 --> 00:45:01,780
with the pipeline's but still have the

00:44:59,349 --> 00:45:04,450
nice UI and UX of the extractors because

00:45:01,780 --> 00:45:06,760
they are I could be very much very

00:45:04,450 --> 00:45:09,069
simple and pipeline rules are very

00:45:06,760 --> 00:45:11,770
complicated compared to extractors so

00:45:09,069 --> 00:45:13,000
we'd like to have a very nice UI and

00:45:11,770 --> 00:45:15,609
nice few weeks for that so basically

00:45:13,000 --> 00:45:18,339
that the old extractors will be auto

00:45:15,609 --> 00:45:21,339
generating pipeline rules for you but

00:45:18,339 --> 00:45:25,140
for now so if your needs are met by the

00:45:21,339 --> 00:45:25,140
extractors then just use the extractors

00:45:27,060 --> 00:45:32,700
some more questions please come up

00:45:45,290 --> 00:46:01,490
all right okay oh can you configure more

00:45:59,090 --> 00:46:03,950
look-up tables or is it just this set of

00:46:01,490 --> 00:46:07,220
hard-coded things no you can configure

00:46:03,950 --> 00:46:10,550
your own look-up tables right now we

00:46:07,220 --> 00:46:13,010
have well it's against multi stage

00:46:10,550 --> 00:46:14,840
system so we realize that if you have a

00:46:13,010 --> 00:46:16,400
look up against the remote source like a

00:46:14,840 --> 00:46:19,370
block list or something like that you

00:46:16,400 --> 00:46:21,740
want to cache that eventually so that

00:46:19,370 --> 00:46:23,930
not every request will just go out over

00:46:21,740 --> 00:46:26,480
the internet somewhere and so we have

00:46:23,930 --> 00:46:28,850
caches for that and data adapters and

00:46:26,480 --> 00:46:30,140
the combination of these data adapters

00:46:28,850 --> 00:46:33,440
and caches they're called look-up tables

00:46:30,140 --> 00:46:37,130
and right now we have data adapters for

00:46:33,440 --> 00:46:38,990
these block lists being delivered right

00:46:37,130 --> 00:46:40,850
after out of the box with the threat

00:46:38,990 --> 00:46:43,670
intelligence plugin which is also

00:46:40,850 --> 00:46:47,870
included in Greylock 2.4 out of the box

00:46:43,670 --> 00:46:51,350
and we have data adapters for flat files

00:46:47,870 --> 00:46:54,260
like CSV and so you can just add your

00:46:51,350 --> 00:46:57,530
CSV files and look up your don't know

00:46:54,260 --> 00:46:58,850
the room number where certain computer

00:46:57,530 --> 00:47:00,580
is being placed or something like that

00:46:58,850 --> 00:47:03,110
or whatever whatever you can think of

00:47:00,580 --> 00:47:06,410
you can add that and you can add

00:47:03,110 --> 00:47:09,110
additional data adapters via plugins so

00:47:06,410 --> 00:47:10,550
if you have another nice block list or

00:47:09,110 --> 00:47:12,110
if you have some other source of

00:47:10,550 --> 00:47:16,040
information like a relational database

00:47:12,110 --> 00:47:17,690
for example or your asset management

00:47:16,040 --> 00:47:19,550
system where you want to look up things

00:47:17,690 --> 00:47:21,980
you can just write an adapter for that

00:47:19,550 --> 00:47:24,190
and add basically an arbitrary number of

00:47:21,980 --> 00:47:24,190
gain

00:47:29,570 --> 00:47:37,940
all right thank you very much for the

00:47:33,630 --> 00:47:41,010
talk and if you have questions I'm

00:47:37,940 --> 00:47:43,140
around here in the conference and if you

00:47:41,010 --> 00:47:44,240
have questions just come to me okay

00:47:43,140 --> 00:47:51,360
thank you

00:47:44,240 --> 00:47:51,360

YouTube URL: https://www.youtube.com/watch?v=T7w9Gc2Rhrk


