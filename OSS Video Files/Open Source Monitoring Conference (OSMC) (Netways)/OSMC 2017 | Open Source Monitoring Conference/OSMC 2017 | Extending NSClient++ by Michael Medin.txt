Title: OSMC 2017 | Extending NSClient++ by Michael Medin
Publication date: 2017-12-05
Playlist: OSMC 2017 | Open Source Monitoring Conference
Description: 
	A beginners guide to extending the NSClient++ monitoring agent using the REST API and Python scripts (I really hate Lua so I wont cover that). Some basic python and REST knowledge is probably good but apart from that we will start at the basics. The goal is to have some audience live hacking during the presentation so please feel free to big your computer (with curl installed) along and some great ideas on how to botch my demos! Also please note that given the nature of demos this sessions might sadly end up with some Lego(TM) free sections but I will do my best to include as much Lego(TM) images as possible as backgrounds in terminal windows insteadâ€¦
Captions: 
	00:00:09,580 --> 00:00:16,420
okay thank you for having you back in

00:00:12,070 --> 00:00:19,180
the room Jacoby for next talk so the

00:00:16,420 --> 00:00:22,290
next speaker is working as a senior ash

00:00:19,180 --> 00:00:26,890
attacked and I'll source developer he is

00:00:22,290 --> 00:00:30,180
well known also for his work in Anna's

00:00:26,890 --> 00:00:34,510
client plus plus plus and for his

00:00:30,180 --> 00:00:36,220
obsession for Lego and he will told us

00:00:34,510 --> 00:00:39,880
today something about the Anna's client

00:00:36,220 --> 00:00:44,100
plus plus plus and the rest API so as I

00:00:39,880 --> 00:00:48,280
heard it will be very heavily curl

00:00:44,100 --> 00:00:50,870
obsessed so have a nice and one welcome

00:00:48,280 --> 00:00:56,610
for Michael million

00:00:50,870 --> 00:00:56,610
[Applause]

00:01:21,920 --> 00:01:27,690
sorry can you hear me now oh now I can

00:01:24,960 --> 00:01:30,510
hear me that's a good thing I think the

00:01:27,690 --> 00:01:31,770
word we're looking for is boring to

00:01:30,510 --> 00:01:34,530
describe what this presentation is gonna

00:01:31,770 --> 00:01:35,760
be like or as Michael Frederick's told

00:01:34,530 --> 00:01:37,530
me in the previous session you know

00:01:35,760 --> 00:01:41,570
nobody want to look at curl outputs

00:01:37,530 --> 00:01:43,200
that's what I got for 45 minutes so

00:01:41,570 --> 00:01:45,330
creative you two have you here I

00:01:43,200 --> 00:01:47,040
literally have nothing else so there's

00:01:45,330 --> 00:01:50,600
no introduction there's no nothing I'm

00:01:47,040 --> 00:01:54,930
just gonna show you curl yeah that's it

00:01:50,600 --> 00:01:57,539
I do have because this is apparently my

00:01:54,930 --> 00:02:01,190
10th years I do have some giveaways for

00:01:57,539 --> 00:02:05,100
you guys in the form of of Swedish candy

00:02:01,190 --> 00:02:06,660
so first question gets candy and and the

00:02:05,100 --> 00:02:08,640
interesting thing about these is they

00:02:06,660 --> 00:02:11,370
have this city in in Sweden where

00:02:08,640 --> 00:02:14,100
essentially they do this this candy so

00:02:11,370 --> 00:02:15,330
so people stop by and buy candy and then

00:02:14,100 --> 00:02:16,739
they sort of handmade them so you can

00:02:15,330 --> 00:02:18,000
sort of look at them when they're making

00:02:16,739 --> 00:02:21,930
them so we stopped there this summer

00:02:18,000 --> 00:02:24,000
with our kids and essentially you know

00:02:21,930 --> 00:02:25,890
they make the candy and the kids look at

00:02:24,000 --> 00:02:27,299
them and then you know they get to taste

00:02:25,890 --> 00:02:29,670
the candy and then they buy a lot of it

00:02:27,299 --> 00:02:32,579
and walk out the store so so the kids

00:02:29,670 --> 00:02:35,510
get the candy and they're like I was

00:02:32,579 --> 00:02:38,670
like shut up and eat it's free candy and

00:02:35,510 --> 00:02:42,930
and apparently it was strawberry

00:02:38,670 --> 00:02:44,100
champagne flavored candy and yeah that's

00:02:42,930 --> 00:02:45,540
sort of sorry that's why I brought you

00:02:44,100 --> 00:02:46,980
so that sort of brings us to this so

00:02:45,540 --> 00:02:50,090
what we have here is essentially gin

00:02:46,980 --> 00:02:53,370
tonic strawberry champagne

00:02:50,090 --> 00:02:56,970
we have vodka energy apparently redbull

00:02:53,370 --> 00:03:00,150
is trademarked and muji too as well as

00:02:56,970 --> 00:03:05,160
rum and coke so if you want to get drunk

00:03:00,150 --> 00:03:07,709
early ask a question and for those of

00:03:05,160 --> 00:03:10,170
you who feel that curl is boring you can

00:03:07,709 --> 00:03:13,470
always try to figure out the movie

00:03:10,170 --> 00:03:15,060
references there might be some and there

00:03:13,470 --> 00:03:17,850
might be some sort of context to

00:03:15,060 --> 00:03:19,590
depictions pictures somewhere in this

00:03:17,850 --> 00:03:22,890
but it's actually I'm gonna show you

00:03:19,590 --> 00:03:25,230
curl output so yeah that's that's all I

00:03:22,890 --> 00:03:27,560
have and if you want to play along I

00:03:25,230 --> 00:03:29,970
have some machines out in the Internet

00:03:27,560 --> 00:03:31,560
and if you have currently installed you

00:03:29,970 --> 00:03:33,390
can go to those machines and you can run

00:03:31,560 --> 00:03:35,190
the same command that I'm running if you

00:03:33,390 --> 00:03:35,850
want to play long so essentially if you

00:03:35,190 --> 00:03:38,160
go to Oh

00:03:35,850 --> 00:03:41,040
marrying that name you will have the

00:03:38,160 --> 00:03:43,500
same URLs and the well zip file with

00:03:41,040 --> 00:03:45,180
some stuff so if you want to hack along

00:03:43,500 --> 00:03:47,580
feel free to do that otherwise I'm gonna

00:03:45,180 --> 00:03:50,520
start off and we're gonna start by

00:03:47,580 --> 00:03:53,190
talking a little bit about how rest sort

00:03:50,520 --> 00:03:54,360
of works in general but more

00:03:53,190 --> 00:03:56,760
specifically how it works with an

00:03:54,360 --> 00:04:01,500
alliance so the first thing we're gonna

00:03:56,760 --> 00:04:03,380
do if I had a prompt what I mean oh yeah

00:04:01,500 --> 00:04:12,080
sorry

00:04:03,380 --> 00:04:12,080
demos my prompt is below my Start menu

00:04:15,260 --> 00:04:19,860
now my prompt is still below my Start

00:04:18,000 --> 00:04:24,690
menu that sucks

00:04:19,860 --> 00:04:31,440
yeah well can you get rid of the start

00:04:24,690 --> 00:04:34,110
bar somehow hide hide yeah now we've

00:04:31,440 --> 00:04:38,730
hidden it twice and it's still not

00:04:34,110 --> 00:04:39,690
hidden can we make it smaller move it

00:04:38,730 --> 00:04:42,900
somewhere yeah we can put at the top

00:04:39,690 --> 00:04:45,030
great thank you so the first thing we're

00:04:42,900 --> 00:04:46,740
going to do is start off by you know

00:04:45,030 --> 00:04:49,350
deleting our ini' file which I

00:04:46,740 --> 00:04:54,450
apparently already did and then we're

00:04:49,350 --> 00:04:57,080
gonna stop the NS client service and

00:04:54,450 --> 00:05:00,930
this is why this is gonna be fun

00:04:57,080 --> 00:05:02,520
let's stop NSEP great the next thing

00:05:00,930 --> 00:05:05,160
we're gonna do is enable the web server

00:05:02,520 --> 00:05:08,160
in an exponent with a password so we can

00:05:05,160 --> 00:05:10,530
access it and we do that by running

00:05:08,160 --> 00:05:15,270
let's do this by the way so it should be

00:05:10,530 --> 00:05:18,120
and a CP web install and we specify

00:05:15,270 --> 00:05:19,740
password and I'll go with hello

00:05:18,120 --> 00:05:20,700
otherwise I'll be confused and nothing

00:05:19,740 --> 00:05:23,460
will work for the rest of the

00:05:20,700 --> 00:05:25,020
presentation and essentially here we can

00:05:23,460 --> 00:05:27,710
you know specified things like allowed

00:05:25,020 --> 00:05:30,090
haast and you know whatever you fancy

00:05:27,710 --> 00:05:31,410
but we'll go with this and it will then

00:05:30,090 --> 00:05:34,590
tell us that we can point your browser

00:05:31,410 --> 00:05:36,930
to localhost 8 4 4 3 and that password

00:05:34,590 --> 00:05:38,670
is hello it's great so you remember what

00:05:36,930 --> 00:05:40,260
you just typed in and it we apparently

00:05:38,670 --> 00:05:42,660
created a new configuration file right

00:05:40,260 --> 00:05:44,550
and by default the access is only from

00:05:42,660 --> 00:05:46,950
localhost so that's not useful for you

00:05:44,550 --> 00:05:49,260
guys but the machines in the cloud they

00:05:46,950 --> 00:05:54,060
are allowed or accessed from

00:05:49,260 --> 00:05:57,630
anyway next up we're gonna starch and

00:05:54,060 --> 00:06:01,920
science and while we wait for that we

00:05:57,630 --> 00:06:05,330
can launch curl and we can enter some

00:06:01,920 --> 00:06:10,380
fancy curl commands right magic isn't it

00:06:05,330 --> 00:06:11,790
now this is this is true magic yeah

00:06:10,380 --> 00:06:14,520
and essentially what we have here is

00:06:11,790 --> 00:06:17,010
minus s is for not showing any output

00:06:14,520 --> 00:06:18,450
except the actual payload and that's

00:06:17,010 --> 00:06:19,950
quite important because we're going to

00:06:18,450 --> 00:06:22,410
deal with Jason and if we get a lot of

00:06:19,950 --> 00:06:24,630
debug output into Jason it's not going

00:06:22,410 --> 00:06:27,300
to be Jason so London the JSON parser is

00:06:24,630 --> 00:06:29,250
gonna mess things up and the case

00:06:27,300 --> 00:06:30,900
essentially I didn't advise certificate

00:06:29,250 --> 00:06:32,520
for localhost so we need to insert that

00:06:30,900 --> 00:06:35,040
to trust the certificate and then we

00:06:32,520 --> 00:06:37,710
specified username password so if we hit

00:06:35,040 --> 00:06:40,860
this URL we get the usual you know jason

00:06:37,710 --> 00:06:42,690
gibberish and and unfortunately this is

00:06:40,860 --> 00:06:43,980
usually how everything starts out so if

00:06:42,690 --> 00:06:45,720
you're gonna do something with rest you

00:06:43,980 --> 00:06:49,500
need something along lines or the python

00:06:45,720 --> 00:06:51,230
json format or thing right and hitting

00:06:49,500 --> 00:06:53,400
enter gives me nothing apparently yeah

00:06:51,230 --> 00:06:55,170
so super awesome

00:06:53,400 --> 00:06:57,210
and here's the first interesting thing

00:06:55,170 --> 00:07:00,150
about the rest api because the rest api

00:06:57,210 --> 00:07:01,860
if they're done well it's kind of self

00:07:00,150 --> 00:07:04,020
describing so this means that if we hit

00:07:01,860 --> 00:07:06,360
the root or api it would sort of tell us

00:07:04,020 --> 00:07:07,800
where we can find the rest of the api so

00:07:06,360 --> 00:07:09,270
we don't need to go to the documentation

00:07:07,800 --> 00:07:10,560
or anything like that we can just hit

00:07:09,270 --> 00:07:12,390
the root and it will tell us you know if

00:07:10,560 --> 00:07:13,050
you want the information logs modules

00:07:12,390 --> 00:07:18,900
whatever

00:07:13,050 --> 00:07:20,520
these are urls to go to and let's see i

00:07:18,900 --> 00:07:21,800
thought we were changing slides

00:07:20,520 --> 00:07:24,390
apparently not

00:07:21,800 --> 00:07:27,290
right so the first thing we're gonna do

00:07:24,390 --> 00:07:31,200
let's do the correct link so we can read

00:07:27,290 --> 00:07:32,580
its look at the info thing and that's

00:07:31,200 --> 00:07:33,840
not really funny because it tells us

00:07:32,580 --> 00:07:35,910
that is n is client and it tells us

00:07:33,840 --> 00:07:37,200
which version it is and you know that it

00:07:35,910 --> 00:07:40,590
but then we have another one of these

00:07:37,200 --> 00:07:42,960
magic URL things at the end right so it

00:07:40,590 --> 00:07:45,150
says version unscrew URL and apparently

00:07:42,960 --> 00:07:48,630
we can go elsewhere to get the version

00:07:45,150 --> 00:07:50,430
information so let's try that and you

00:07:48,630 --> 00:07:52,320
sort of get the idea here right that

00:07:50,430 --> 00:07:54,180
this is what we're gonna do for 45

00:07:52,320 --> 00:07:56,990
minutes so it's not too late to puff off

00:07:54,180 --> 00:07:56,990
do the other session

00:07:57,080 --> 00:08:00,470
and and there's a lot of these curl

00:07:59,000 --> 00:08:04,789
commands I'm going to show you

00:08:00,470 --> 00:08:06,800
awesome right so now we know how to sort

00:08:04,789 --> 00:08:08,630
of navigate the REST API the next thing

00:08:06,800 --> 00:08:10,759
we need to figure out is how pagination

00:08:08,630 --> 00:08:12,500
works because sometimes you get more

00:08:10,759 --> 00:08:13,669
than five lines or something like that

00:08:12,500 --> 00:08:17,330
and then you might want to sort of split

00:08:13,669 --> 00:08:18,979
them up into logical units but for this

00:08:17,330 --> 00:08:20,840
to make sense we need to add some sort

00:08:18,979 --> 00:08:22,190
of log messages to Anna's client because

00:08:20,840 --> 00:08:24,080
right now there is nothing

00:08:22,190 --> 00:08:26,120
hopefully unless it's broken and then

00:08:24,080 --> 00:08:28,310
it's gonna be a long session listen

00:08:26,120 --> 00:08:31,310
there's nothing we'll be working so I've

00:08:28,310 --> 00:08:33,500
done that where I prepared that with a

00:08:31,310 --> 00:08:36,349
bat file that will essentially run a

00:08:33,500 --> 00:08:37,729
couple of commands to do logging so

00:08:36,349 --> 00:08:39,169
essentially now we're sending log

00:08:37,729 --> 00:08:40,940
messages to you and it's client so

00:08:39,169 --> 00:08:42,709
technically it's a log server right so

00:08:40,940 --> 00:08:45,010
you know off you go with the Alex tack

00:08:42,709 --> 00:08:48,080
in you go with them as clients right

00:08:45,010 --> 00:08:51,110
perhaps not the best idea but what we're

00:08:48,080 --> 00:08:54,050
doing here is the same curl thing we

00:08:51,110 --> 00:08:57,140
just swap in the verb for post which

00:08:54,050 --> 00:08:58,880
means we're gonna create something and

00:08:57,140 --> 00:09:01,310
then we specify whatever we want to

00:08:58,880 --> 00:09:04,040
create here at the end and what we are

00:09:01,310 --> 00:09:05,899
creating in this case is a JSON thing so

00:09:04,040 --> 00:09:09,110
there's a lot of backslash quotes

00:09:05,899 --> 00:09:10,820
backslash quote backslash quote but if

00:09:09,110 --> 00:09:13,040
we sort of discard all of the backslash

00:09:10,820 --> 00:09:16,899
quotes what we have is level warning and

00:09:13,040 --> 00:09:19,550
message warning one two three four now

00:09:16,899 --> 00:09:25,190
what we can do here is go back to our

00:09:19,550 --> 00:09:27,880
REST API and we can hit locks and we'll

00:09:25,190 --> 00:09:30,620
get a really long list of log messages

00:09:27,880 --> 00:09:32,660
which in itself is not very useful but

00:09:30,620 --> 00:09:35,510
the question here is really pagination

00:09:32,660 --> 00:09:37,430
so how does that work and to find out

00:09:35,510 --> 00:09:39,620
how that works we need to drop the whole

00:09:37,430 --> 00:09:42,410
JSON stuff at the end because we can't

00:09:39,620 --> 00:09:44,959
parse JSON because we need to do some

00:09:42,410 --> 00:09:49,040
magic here and that's add the - I option

00:09:44,959 --> 00:09:52,070
I means show us the response headers so

00:09:49,040 --> 00:09:53,990
what we get now is beside the JSON

00:09:52,070 --> 00:09:56,570
gibberish at the end we get some stuff

00:09:53,990 --> 00:09:59,450
at the top right and that's the response

00:09:56,570 --> 00:10:00,760
we got from the server now most of this

00:09:59,450 --> 00:10:03,800
is not very interesting

00:10:00,760 --> 00:10:06,020
9:11 characters apparently we get a 200

00:10:03,800 --> 00:10:08,270
ok but we also get this link thing and

00:10:06,020 --> 00:10:10,430
the link thing is how pollination works

00:10:08,270 --> 00:10:12,080
in the NS fine trusty

00:10:10,430 --> 00:10:14,150
so essentially what it's telling us is

00:10:12,080 --> 00:10:15,830
you know you don't need to figure out op

00:10:14,150 --> 00:10:17,660
ignition work you can just grab the link

00:10:15,830 --> 00:10:20,000
you got in request to go to the next

00:10:17,660 --> 00:10:22,040
page so again we don't really need to do

00:10:20,000 --> 00:10:24,340
anything except copy paste that's good

00:10:22,040 --> 00:10:27,770
for me because that usually works better

00:10:24,340 --> 00:10:29,510
now unfortunately because we're working

00:10:27,770 --> 00:10:32,540
on a Windows machine we need to escape

00:10:29,510 --> 00:10:34,130
things and they've gone with the lizard

00:10:32,540 --> 00:10:37,880
control character for escaping things

00:10:34,130 --> 00:10:38,830
which confuses the hell out of me but

00:10:37,880 --> 00:10:41,800
who am I to argue

00:10:38,830 --> 00:10:44,690
so let's move to the whole screen and

00:10:41,800 --> 00:10:48,080
try this out so essentially now we're

00:10:44,690 --> 00:10:49,640
gonna do this per page equals two

00:10:48,080 --> 00:10:52,510
because otherwise it's gonna be too long

00:10:49,640 --> 00:10:56,270
and then we're gonna do ctrl ampersand

00:10:52,510 --> 00:10:58,940
page equals one and we get oh yeah sorry

00:10:56,270 --> 00:11:03,490
we're also gonna do this bit at the end

00:10:58,940 --> 00:11:09,380
oh yeah that's that's the drawback to

00:11:03,490 --> 00:11:10,790
macros yeah the header thing sorry it's

00:11:09,380 --> 00:11:11,570
really helpful that it just tells you

00:11:10,790 --> 00:11:13,730
that hey sorry

00:11:11,570 --> 00:11:15,110
can it parse it it doesn't tell you what

00:11:13,730 --> 00:11:17,840
it couldn't parse everything it's just

00:11:15,110 --> 00:11:19,220
you know you're out of luck so here we

00:11:17,840 --> 00:11:21,260
have the first two lines and then

00:11:19,220 --> 00:11:23,530
obviously by going to page two we can

00:11:21,260 --> 00:11:25,700
sort of step our way through the logs

00:11:23,530 --> 00:11:28,700
the last thing we're gonna look at

00:11:25,700 --> 00:11:30,380
before we end no not really but before

00:11:28,700 --> 00:11:33,320
we actually do something useful is

00:11:30,380 --> 00:11:34,460
authentication the way authentication

00:11:33,320 --> 00:11:35,750
works you know this client is

00:11:34,460 --> 00:11:37,520
essentially you have a bunch of these

00:11:35,750 --> 00:11:39,860
grants and in this case what we're

00:11:37,520 --> 00:11:43,370
saying is that the info endpoint we can

00:11:39,860 --> 00:11:45,230
get everything you can say you know info

00:11:43,370 --> 00:11:47,030
dot yet dot version and we will only be

00:11:45,230 --> 00:11:51,770
able to get the version from the info

00:11:47,030 --> 00:11:55,510
endpoint so let's try this lab let's do

00:11:51,770 --> 00:12:05,270
it like this first and this EP web and

00:11:55,510 --> 00:12:07,280
roll - - roll limit ad - - grant start

00:12:05,270 --> 00:12:10,010
right and feel free to proofread me

00:12:07,280 --> 00:12:11,990
because that's usually the problem the

00:12:10,010 --> 00:12:15,050
next thing we need is a user so let's

00:12:11,990 --> 00:12:17,480
add one of those as well and that's

00:12:15,050 --> 00:12:18,890
works pretty much expected and I told

00:12:17,480 --> 00:12:22,750
you to proofread me and you don't

00:12:18,890 --> 00:12:22,750
nothing that's not good

00:12:23,000 --> 00:12:28,949
password fool

00:12:25,319 --> 00:12:32,550
role limited interesting right you know

00:12:28,949 --> 00:12:36,209
you get to hear me type it's like magic

00:12:32,550 --> 00:12:40,589
let's also restart and less lines

00:12:36,209 --> 00:12:42,029
because yeah proofreading proofreading

00:12:40,589 --> 00:12:46,670
this is a team effort right you know

00:12:42,029 --> 00:12:46,670
open source community please help me out

00:12:47,029 --> 00:12:59,610
right no he's running that's really

00:12:55,170 --> 00:13:01,079
quickly let's let's redo this it takes a

00:12:59,610 --> 00:13:04,740
long time to stops it should presumably

00:13:01,079 --> 00:13:09,060
take a while to start right yeah that's

00:13:04,740 --> 00:13:12,480
that's better it's gonna be awesome

00:13:09,060 --> 00:13:13,829
anyway when we talk about pugneeshia

00:13:12,480 --> 00:13:16,860
or sorry we talk about the indication

00:13:13,829 --> 00:13:19,410
the stars are a good way to grant

00:13:16,860 --> 00:13:21,269
something but it's obviously insecure

00:13:19,410 --> 00:13:22,649
because in subsequent version we might

00:13:21,269 --> 00:13:24,569
have other information that you're

00:13:22,649 --> 00:13:26,160
accidentally granting so you sort of

00:13:24,569 --> 00:13:28,620
have to decide whether you know

00:13:26,160 --> 00:13:30,540
information might be insecure not but

00:13:28,620 --> 00:13:32,670
generally I think it's a good idea to do

00:13:30,540 --> 00:13:36,120
the sourcing advice you'd have to list a

00:13:32,670 --> 00:13:41,839
lot of privileges so what we're gonna do

00:13:36,120 --> 00:13:45,029
now is try this out by using a command

00:13:41,839 --> 00:13:48,300
and we're gonna hopefully remember to

00:13:45,029 --> 00:13:52,319
swap out the user otherwise it's not

00:13:48,300 --> 00:13:54,180
gonna work phoo phoo right yay

00:13:52,319 --> 00:13:57,899
works right but if we now go to

00:13:54,180 --> 00:14:01,019
something else except info it will not

00:13:57,899 --> 00:14:02,519
work and this is because now we're not

00:14:01,019 --> 00:14:05,759
getting Jason back because we get an

00:14:02,519 --> 00:14:09,420
HTTP error so 403 not allowed right

00:14:05,759 --> 00:14:11,579
great so with that we've pretty much

00:14:09,420 --> 00:14:13,529
covered the bases right so so let's do

00:14:11,579 --> 00:14:15,500
something I don't think it's more

00:14:13,529 --> 00:14:17,970
interesting so I'm not gonna mean try

00:14:15,500 --> 00:14:20,339
but essentially what we're gonna do now

00:14:17,970 --> 00:14:22,649
is sort of change the story a bit and go

00:14:20,339 --> 00:14:24,689
from the hilum stuff to more detailed

00:14:22,649 --> 00:14:27,500
stuff so this is when the black ops team

00:14:24,689 --> 00:14:31,649
is coming for you and things turn nasty

00:14:27,500 --> 00:14:33,870
right and what we're gonna start looking

00:14:31,649 --> 00:14:35,350
at is logs because we just did that so

00:14:33,870 --> 00:14:37,180
that's super awesome

00:14:35,350 --> 00:14:40,050
I don't have to type much except changed

00:14:37,180 --> 00:14:44,200
the user name ID mean what was it hello

00:14:40,050 --> 00:14:46,090
yeah thank you and I get nothing you

00:14:44,200 --> 00:14:46,810
yeah yeah when we started thank you for

00:14:46,090 --> 00:14:49,660
reminding me

00:14:46,810 --> 00:14:51,100
so did I have the command for adding

00:14:49,660 --> 00:14:55,390
long messages there we have it

00:14:51,100 --> 00:14:57,580
super yeah it's yeah we just get to

00:14:55,390 --> 00:15:00,730
watch my computer do magic stuff it's

00:14:57,580 --> 00:15:03,400
beautiful that way so right but what we

00:15:00,730 --> 00:15:05,380
can do with a log endpoint it's actually

00:15:03,400 --> 00:15:10,300
filter stuff so we can say hey let's

00:15:05,380 --> 00:15:13,450
just give me the errors and let's add

00:15:10,300 --> 00:15:15,610
one of those Jesus stuffs at the end and

00:15:13,450 --> 00:15:17,680
we will just get error messages magic

00:15:15,610 --> 00:15:20,680
right you can never imagine something so

00:15:17,680 --> 00:15:22,930
powerful right you know you just ask for

00:15:20,680 --> 00:15:28,750
error messages so you get them yeah I

00:15:22,930 --> 00:15:30,760
blown blown away myself to be honest the

00:15:28,750 --> 00:15:32,590
more interesting bit is modules because

00:15:30,760 --> 00:15:36,420
n is client consists of a lot of them

00:15:32,590 --> 00:15:39,610
and those are usually what provides the

00:15:36,420 --> 00:15:40,990
features of NS client and currently we

00:15:39,610 --> 00:15:42,190
just have the web server running so

00:15:40,990 --> 00:15:44,050
currently we can't really do anything

00:15:42,190 --> 00:15:46,300
with Anna's client right so the only

00:15:44,050 --> 00:15:51,820
thing we can do is ask for Lord masters

00:15:46,300 --> 00:15:55,420
which is not that funny but let's go

00:15:51,820 --> 00:15:57,430
here instead oh wait sorry work out no

00:15:55,420 --> 00:16:01,300
that's where we're gonna be sorry

00:15:57,430 --> 00:16:03,730
and what we can do is do this say all

00:16:01,300 --> 00:16:07,240
equals true and we will get a much

00:16:03,730 --> 00:16:08,650
longer list of modules and this is a bit

00:16:07,240 --> 00:16:11,200
too long so now we can use the fancy

00:16:08,650 --> 00:16:13,840
fine string command which is by the way

00:16:11,200 --> 00:16:16,510
the best command ever it's like grep but

00:16:13,840 --> 00:16:19,360
it works in Windows and you know blew my

00:16:16,510 --> 00:16:21,430
mind when I found it you know I've been

00:16:19,360 --> 00:16:23,430
looking for it for like decades almost

00:16:21,430 --> 00:16:26,200
like it was there all along

00:16:23,430 --> 00:16:28,420
it's just that they named it badly or

00:16:26,200 --> 00:16:33,310
arguably better because it's finding

00:16:28,420 --> 00:16:36,070
strings and not trapping people but but

00:16:33,310 --> 00:16:37,120
that's that's me for you so essentially

00:16:36,070 --> 00:16:39,550
here we have a list of all the modules

00:16:37,120 --> 00:16:41,320
rights and the interesting bit is that

00:16:39,550 --> 00:16:43,780
if we go to module which we haven't

00:16:41,320 --> 00:16:46,530
actually loaded let's remove the fine

00:16:43,780 --> 00:16:46,530
string while we're at it

00:16:48,250 --> 00:16:53,649
we'll see some really magic stuff you're

00:16:52,509 --> 00:16:55,750
gonna be blown away

00:16:53,649 --> 00:16:57,490
Perth it works when it's incorrectly

00:16:55,750 --> 00:16:59,800
spelled as well or incorrectly

00:16:57,490 --> 00:17:00,910
capitalizing yes this word but the

00:16:59,800 --> 00:17:02,709
interesting bit here's here we have

00:17:00,910 --> 00:17:06,579
again these URLs right so we have a load

00:17:02,709 --> 00:17:08,110
URL and we have an unload URL and if

00:17:06,579 --> 00:17:09,610
you're doing something on the online

00:17:08,110 --> 00:17:13,750
stuff please don't unload web server

00:17:09,610 --> 00:17:16,179
because then party is over because

00:17:13,750 --> 00:17:20,799
there's there's nothing so what we can

00:17:16,179 --> 00:17:23,799
do is we can go to commands slash load

00:17:20,799 --> 00:17:26,980
and now we hopefully have check system

00:17:23,799 --> 00:17:29,320
with a couple of H loaded so let's see

00:17:26,980 --> 00:17:32,860
if we have that so let's list loaded

00:17:29,320 --> 00:17:38,530
modules and yeh two modules life is good

00:17:32,860 --> 00:17:42,400
that's for no and yeah forgetting to

00:17:38,530 --> 00:17:44,380
move the slides so now we have a module

00:17:42,400 --> 00:17:46,630
so we can actually use something so we

00:17:44,380 --> 00:17:48,159
can you know have functionalities check

00:17:46,630 --> 00:17:51,179
system provides things like checking the

00:17:48,159 --> 00:17:55,659
CPU level the memory that kind of stuff

00:17:51,179 --> 00:17:57,250
system related things so let's sort of

00:17:55,659 --> 00:18:00,070
move on to the concept of checking

00:17:57,250 --> 00:18:02,020
things and that's long with queries so

00:18:00,070 --> 00:18:03,820
now we can list queries and you know we

00:18:02,020 --> 00:18:09,220
get the beautiful JSON output again it's

00:18:03,820 --> 00:18:11,020
like a page of gibberish and then Jason

00:18:09,220 --> 00:18:12,760
is really great to work with because

00:18:11,020 --> 00:18:15,039
it's so easy to read it's much better

00:18:12,760 --> 00:18:16,890
than XML for instance or something like

00:18:15,039 --> 00:18:21,280
that right

00:18:16,890 --> 00:18:24,909
and this will give us a list of well

00:18:21,280 --> 00:18:26,710
yeah queries we can run and this is

00:18:24,909 --> 00:18:28,450
probably the usual queries you've been

00:18:26,710 --> 00:18:29,830
using if we're using an alliance so

00:18:28,450 --> 00:18:31,929
essentially people tend to run checks

00:18:29,830 --> 00:18:35,020
CPU for some reason and they run check

00:18:31,929 --> 00:18:37,990
memory no one uses check Network

00:18:35,020 --> 00:18:39,340
some people use check pdh for checking

00:18:37,990 --> 00:18:42,340
weird performance counters that never

00:18:39,340 --> 00:18:46,150
works and that's pretty much it uptime

00:18:42,340 --> 00:18:48,700
is also used sometimes but that's

00:18:46,150 --> 00:18:49,990
windows for you if you monitoring Linux

00:18:48,700 --> 00:18:52,690
systems then you usually check a lot

00:18:49,990 --> 00:18:55,929
more but let's sort of move on to one of

00:18:52,690 --> 00:18:58,510
these checks and see what we find so we

00:18:55,929 --> 00:19:01,380
can again we have the URL for them down

00:18:58,510 --> 00:19:04,320
here so we can just go to check up

00:19:01,380 --> 00:19:07,920
for instance and I forgot the whole

00:19:04,320 --> 00:19:10,530
Jason saying is always which is why I

00:19:07,920 --> 00:19:13,200
have it Mac Road so let's do this it's

00:19:10,530 --> 00:19:15,870
slightly higher up on the screen so this

00:19:13,200 --> 00:19:17,430
will tell us that yeah what what the

00:19:15,870 --> 00:19:19,170
check does in this case it's check up

00:19:17,430 --> 00:19:20,370
time since last boot it tells the name

00:19:19,170 --> 00:19:22,290
and title they're essentially the same

00:19:20,370 --> 00:19:25,020
but more interesting thing is that we

00:19:22,290 --> 00:19:27,930
have executed Nagios and on the flight

00:19:25,020 --> 00:19:30,990
here I realized that they're gonna

00:19:27,930 --> 00:19:33,030
sue me I confused I check execute

00:19:30,990 --> 00:19:35,310
Nuggets so I'll have to execute Nagios

00:19:33,030 --> 00:19:38,220
parentheses trademark parentheses so I'm

00:19:35,310 --> 00:19:40,710
gonna patch that when I get back or

00:19:38,220 --> 00:19:41,970
maybe rename it check icing or something

00:19:40,710 --> 00:19:44,400
like that we'll see how that turns out

00:19:41,970 --> 00:19:46,890
but essentially we have checked Nagios

00:19:44,400 --> 00:19:48,420
and we have checked not Nagios and when

00:19:46,890 --> 00:19:50,940
you're checking Daniels would you get

00:19:48,420 --> 00:19:52,950
this the usual you know string back and

00:19:50,940 --> 00:19:55,020
when you're checking not noggins you get

00:19:52,950 --> 00:19:57,240
JSON back so you sort of get to pick

00:19:55,020 --> 00:19:59,700
what you prefer and generally if you

00:19:57,240 --> 00:20:04,380
want to parse it Jason is better if you

00:19:59,700 --> 00:20:05,340
want to read it Nagios is better so

00:20:04,380 --> 00:20:08,580
let's try that out

00:20:05,340 --> 00:20:12,540
and let me get slightly further down so

00:20:08,580 --> 00:20:18,510
I can actually read so we have commands

00:20:12,540 --> 00:20:19,440
and execute Nagios super awesome and

00:20:18,510 --> 00:20:21,210
you're probably all saying that hey

00:20:19,440 --> 00:20:24,660
that's not a string that's Jason you

00:20:21,210 --> 00:20:26,790
lied to me bastard right and I am a

00:20:24,660 --> 00:20:29,100
bastard but but not in this case the

00:20:26,790 --> 00:20:31,650
reason why we're getting Jason back is

00:20:29,100 --> 00:20:34,170
because we asked for it so we can but

00:20:31,650 --> 00:20:36,540
but we got it slightly parsed it's just

00:20:34,170 --> 00:20:39,690
bit messed up we can't actually tell us

00:20:36,540 --> 00:20:42,330
or tell the client that we want to have

00:20:39,690 --> 00:20:45,000
taxed back and the way you do that let

00:20:42,330 --> 00:20:49,490
me do this first so that we can read a

00:20:45,000 --> 00:20:57,150
bit is spy going here and add a header

00:20:49,490 --> 00:20:59,520
header and except text slash plain and

00:20:57,150 --> 00:21:02,520
this tells us that we want to get text

00:20:59,520 --> 00:21:04,140
back not Jason no Jason whatsoever and

00:21:02,520 --> 00:21:07,050
it essentially oh yeah exactly

00:21:04,140 --> 00:21:10,110
no Jason whatsoever hate it hate it

00:21:07,050 --> 00:21:12,270
every time gets me so essentially what

00:21:10,110 --> 00:21:14,460
we have is you know check an RBE over

00:21:12,270 --> 00:21:15,210
restaurants that's super awesome so now

00:21:14,460 --> 00:21:17,190
we can just

00:21:15,210 --> 00:21:20,730
a check on our P and everything is happy

00:21:17,190 --> 00:21:23,820
right yeah unfortunately we get to the

00:21:20,730 --> 00:21:26,700
next slide in a bit so what we can do

00:21:23,820 --> 00:21:29,640
now is move on to I now can't read

00:21:26,700 --> 00:21:31,830
anything because I have an overlay so

00:21:29,640 --> 00:21:34,260
I'm see what I'm actually gonna do I'm

00:21:31,830 --> 00:21:36,450
cheating as always so if we're on

00:21:34,260 --> 00:21:39,360
execute instead of executing aerials

00:21:36,450 --> 00:21:42,570
what we'll get is the former's data is

00:21:39,360 --> 00:21:43,890
split up and that's actually useful if

00:21:42,570 --> 00:21:46,049
you want to do something with this

00:21:43,890 --> 00:21:49,200
information because parsing performance

00:21:46,049 --> 00:21:50,880
data is actually complicated so I think

00:21:49,200 --> 00:21:52,649
if you want to automate this or bring it

00:21:50,880 --> 00:21:54,059
into some other system you probably want

00:21:52,649 --> 00:21:56,159
to go for this one because then you can

00:21:54,059 --> 00:21:57,980
grab your whatever json library have and

00:21:56,159 --> 00:22:00,740
just sort of walk your way through it

00:21:57,980 --> 00:22:03,390
but now we get to the not so pretty part

00:22:00,740 --> 00:22:05,250
the cost there is always the not so

00:22:03,390 --> 00:22:07,909
pretty part and that's the reason why

00:22:05,250 --> 00:22:11,130
this is not going to replace check NRP

00:22:07,909 --> 00:22:14,429
unfortunately because how do you enter

00:22:11,130 --> 00:22:17,100
query parameters on a you know curl

00:22:14,429 --> 00:22:20,100
command well you end up first of all we

00:22:17,100 --> 00:22:21,720
need to put quotes around it otherwise

00:22:20,100 --> 00:22:23,490
we need to escape pretty much everything

00:22:21,720 --> 00:22:28,350
but then you end up with things like you

00:22:23,490 --> 00:22:30,570
know warren equals load forty percent 25

00:22:28,350 --> 00:22:33,120
because that's how you encode the

00:22:30,570 --> 00:22:35,700
percentage sign where do we have a

00:22:33,120 --> 00:22:38,159
percentage sign oh it's there so and

00:22:35,700 --> 00:22:43,820
then you end up with you know all what

00:22:38,159 --> 00:22:47,610
do we have crits equals load above 20 oh

00:22:43,820 --> 00:22:50,970
yeah I get you thank you no no you're

00:22:47,610 --> 00:22:55,110
now you're at it let's see percent 25

00:22:50,970 --> 00:22:59,700
right and then we'll have show all I

00:22:55,110 --> 00:23:02,789
think show all and filter equals none

00:22:59,700 --> 00:23:05,340
and this is not funny to be honest I

00:23:02,789 --> 00:23:07,890
mean this sucks and that that's why

00:23:05,340 --> 00:23:12,179
we're gonna have a check rest command or

00:23:07,890 --> 00:23:13,830
something like that the quote oh you

00:23:12,179 --> 00:23:19,429
need a quote at the end as well it's

00:23:13,830 --> 00:23:23,039
kind of limited yeah super awesome

00:23:19,429 --> 00:23:25,740
I'll give it but two seconds for load oh

00:23:23,039 --> 00:23:27,539
yeah yeah yeah great that's the other

00:23:25,740 --> 00:23:28,830
one I was thinking when I was preparing

00:23:27,539 --> 00:23:30,220
this that I shouldn't have different

00:23:28,830 --> 00:23:33,820
come

00:23:30,220 --> 00:23:36,970
but yeah then I got to showcase that so

00:23:33,820 --> 00:23:38,499
here we have a whole bunch of stuff and

00:23:36,970 --> 00:23:39,879
if you're going to parse all of this and

00:23:38,499 --> 00:23:41,679
try to figure out through graph or

00:23:39,879 --> 00:23:44,320
something you're better off using two

00:23:41,679 --> 00:23:45,879
JSON output but you'll if you're gonna

00:23:44,320 --> 00:23:47,860
run this from something you're probably

00:23:45,879 --> 00:23:49,749
not gonna be wanna you know escape all

00:23:47,860 --> 00:23:51,759
your percentage signs and things like

00:23:49,749 --> 00:23:53,950
that so most likely you're probably

00:23:51,759 --> 00:23:57,700
gonna stick to check NRP or some check

00:23:53,950 --> 00:23:59,259
and a-c-p web or something like that the

00:23:57,700 --> 00:24:01,509
other thing that people tend to use and

00:23:59,259 --> 00:24:04,019
is fine for is scripts so let's hit the

00:24:01,509 --> 00:24:08,730
scripts and point and see what we get

00:24:04,019 --> 00:24:11,980
and let me just back up a bit

00:24:08,730 --> 00:24:14,259
scripts awesome we get nothing that's

00:24:11,980 --> 00:24:15,519
always a good thing right it's helpful

00:24:14,259 --> 00:24:18,489
ease because then we know what's wrong

00:24:15,519 --> 00:24:20,169
you know nothing and the reason we get

00:24:18,489 --> 00:24:21,789
nothing is because currently we have no

00:24:20,169 --> 00:24:23,470
one who's providing script support we

00:24:21,789 --> 00:24:25,509
have you know check system and we have

00:24:23,470 --> 00:24:27,639
the web server and those doesn't provide

00:24:25,509 --> 00:24:29,590
scripts so essentially what we need to

00:24:27,639 --> 00:24:33,220
do is use one of these fancy load

00:24:29,590 --> 00:24:36,779
commands again and I'm gonna see if I

00:24:33,220 --> 00:24:42,759
can type this up really quick modules

00:24:36,779 --> 00:24:48,100
check external scripts write commands

00:24:42,759 --> 00:24:51,009
smash load correct hopefully so let's go

00:24:48,100 --> 00:24:52,749
back to our scripts endpoint and all of

00:24:51,009 --> 00:24:55,629
a sudden we have something great right

00:24:52,749 --> 00:24:57,309
and now we get this you know URL where

00:24:55,629 --> 00:24:58,899
we can actually access these scripts and

00:24:57,309 --> 00:25:00,460
the reason why we need to have the

00:24:58,899 --> 00:25:01,899
little slash axe thing at the end is

00:25:00,460 --> 00:25:03,759
because we have Python scripts as well

00:25:01,899 --> 00:25:05,409
and there is no correlation between them

00:25:03,759 --> 00:25:07,090
they work the same from a rest

00:25:05,409 --> 00:25:08,409
perspective but they have different

00:25:07,090 --> 00:25:12,039
endpoints so if you wanna have the same

00:25:08,409 --> 00:25:16,029
scripts in the same place it will

00:25:12,039 --> 00:25:17,259
actually work if we prefix them right so

00:25:16,029 --> 00:25:20,289
let's see where are we

00:25:17,259 --> 00:25:22,090
scripts slash axed and again we get

00:25:20,289 --> 00:25:24,580
nothing and that's because there are no

00:25:22,090 --> 00:25:26,409
scripts right but we can remedy that as

00:25:24,580 --> 00:25:31,600
well but let's first just see what

00:25:26,409 --> 00:25:33,100
scripts we have all equals true and then

00:25:31,600 --> 00:25:34,570
we get a list of all the scripts we have

00:25:33,100 --> 00:25:36,730
in our file system we couldn't obviously

00:25:34,570 --> 00:25:38,679
have done you know just tear scripts and

00:25:36,730 --> 00:25:41,830
gotten the same list but it's more fun

00:25:38,679 --> 00:25:43,940
to use a restaurant and that's always a

00:25:41,830 --> 00:25:46,280
good thing

00:25:43,940 --> 00:25:50,120
right so what we're going to do now is

00:25:46,280 --> 00:25:53,690
actually try to upload the script yeah

00:25:50,120 --> 00:25:56,510
this is going to turn out great it's one

00:25:53,690 --> 00:25:58,190
of those where I get to type a lot so

00:25:56,510 --> 00:26:00,020
essentially we have scripts and then we

00:25:58,190 --> 00:26:01,520
specify where the script is going to be

00:26:00,020 --> 00:26:02,690
so that's why we have another scripts

00:26:01,520 --> 00:26:04,190
here because we're going to place the

00:26:02,690 --> 00:26:06,110
scripts inside the script folder right

00:26:04,190 --> 00:26:10,850
we don't want it in a root folder

00:26:06,110 --> 00:26:12,170
the script is check new dot but and then

00:26:10,850 --> 00:26:16,630
we need to put it so we need to change

00:26:12,170 --> 00:26:22,970
the verb and then we need this guy data

00:26:16,630 --> 00:26:29,440
binary apt and our seed folder oh yes

00:26:22,970 --> 00:26:34,510
and really isn't it

00:26:29,440 --> 00:26:37,670
so is MC this disturbs me bit seed check

00:26:34,510 --> 00:26:39,890
new path the worst thing is that if you

00:26:37,670 --> 00:26:41,270
upload and the file doesn't exist ker

00:26:39,890 --> 00:26:45,050
won't give you an error it will upload

00:26:41,270 --> 00:26:47,210
an empty file and that's no response

00:26:45,050 --> 00:27:01,250
from modules aha

00:26:47,210 --> 00:27:03,080
sorry my bad super yeah I think so

00:27:01,250 --> 00:27:04,640
because it shouldn't echo it that's oh

00:27:03,080 --> 00:27:08,120
yeah yeah that's probably why the whole

00:27:04,640 --> 00:27:10,430
time thing is not working and I have

00:27:08,120 --> 00:27:12,200
stuff in a way let me remove the quilt

00:27:10,430 --> 00:27:15,980
or I'll be confused for the rest of the

00:27:12,200 --> 00:27:17,290
splines and now we are the rock yeah

00:27:15,980 --> 00:27:22,640
this is awesome

00:27:17,290 --> 00:27:25,670
how are we doing for time so yeah check

00:27:22,640 --> 00:27:27,680
new odd ass checks grip buh buh buh yeah

00:27:25,670 --> 00:27:29,210
and what we have now if we move to our

00:27:27,680 --> 00:27:33,310
scripts folder is

00:27:29,210 --> 00:27:35,930
yeah we can't more folder steer scripts

00:27:33,310 --> 00:27:36,440
we hopefully have the script here

00:27:35,930 --> 00:27:38,540
somewhere

00:27:36,440 --> 00:27:41,800
yeah we have awesome and it's not zero

00:27:38,540 --> 00:27:44,090
bytes that's a good thing and

00:27:41,800 --> 00:27:46,580
essentially if we go back to our query

00:27:44,090 --> 00:27:48,320
thing we had before we can actually just

00:27:46,580 --> 00:27:49,820
start running it we don't need to do

00:27:48,320 --> 00:27:54,560
anything so we just upload it and it

00:27:49,820 --> 00:27:55,880
works but we need to check you instead

00:27:54,560 --> 00:27:56,720
of you know whatever we have awesome

00:27:55,880 --> 00:27:57,200
right

00:27:56,720 --> 00:28:01,279
ever

00:27:57,200 --> 00:28:06,409
thing is awesome let's just move on a

00:28:01,279 --> 00:28:09,470
bit yes so we can execute the script

00:28:06,409 --> 00:28:10,760
that we just uploaded magic right now is

00:28:09,470 --> 00:28:13,220
the part where I'm gonna demo the

00:28:10,760 --> 00:28:13,970
settings unfortunately I haven't really

00:28:13,220 --> 00:28:16,279
gotten there yet

00:28:13,970 --> 00:28:18,860
that's gonna be for the hackathon on

00:28:16,279 --> 00:28:21,289
Friday I guess there is actually

00:28:18,860 --> 00:28:23,539
settings API Isis that is buggy so I'm

00:28:21,289 --> 00:28:25,549
not gonna go there instead we're gonna

00:28:23,539 --> 00:28:27,320
go to Python scripts and this is again

00:28:25,549 --> 00:28:29,389
when the tour story turns slightly

00:28:27,320 --> 00:28:31,880
differently and we find the hero of the

00:28:29,389 --> 00:28:37,519
day right and everything just becomes

00:28:31,880 --> 00:28:44,419
happy and I'm actually not so bad on

00:28:37,519 --> 00:28:46,789
time which is scaring Lea good so we had

00:28:44,419 --> 00:28:48,350
a simple Python scripts here and I'm

00:28:46,789 --> 00:28:50,899
gonna do like that be slightly easier to

00:28:48,350 --> 00:28:53,269
read and the reason why we have this is

00:28:50,899 --> 00:28:54,799
sort of to demo the three main functions

00:28:53,269 --> 00:28:56,269
that you have in a script that's running

00:28:54,799 --> 00:28:57,950
inside Ana's client foss foss

00:28:56,269 --> 00:28:59,360
and the first thing we need to do is

00:28:57,950 --> 00:29:00,799
bring in the log function because we're

00:28:59,360 --> 00:29:02,029
gonna log some stuff then we log

00:29:00,799 --> 00:29:03,590
something in the root scope that's

00:29:02,029 --> 00:29:05,210
essentially you know when the script is

00:29:03,590 --> 00:29:07,880
diluting then we have a main function

00:29:05,210 --> 00:29:10,100
and we have an init function and we have

00:29:07,880 --> 00:29:11,600
a shutdown function the reason why we

00:29:10,100 --> 00:29:13,429
have three function is in it is when the

00:29:11,600 --> 00:29:15,860
script is starting shutdown is when it's

00:29:13,429 --> 00:29:18,260
stopping and the main function is when

00:29:15,860 --> 00:29:19,669
we're running it from command line and

00:29:18,260 --> 00:29:21,620
that's actually quite useful because

00:29:19,669 --> 00:29:25,880
that means that we can now go and do an

00:29:21,620 --> 00:29:31,090
SCP if I can spell pi because it's

00:29:25,880 --> 00:29:35,389
Python script execute - - script and

00:29:31,090 --> 00:29:37,309
let's see if I can find the script and

00:29:35,389 --> 00:29:38,840
what we'll get here is first of all the

00:29:37,309 --> 00:29:40,010
root scope you probably shouldn't put a

00:29:38,840 --> 00:29:42,320
lot of stuff there but you can if you

00:29:40,010 --> 00:29:44,330
will then we have the init function and

00:29:42,320 --> 00:29:45,919
it gives us a plug-in ID and this

00:29:44,330 --> 00:29:47,750
plug-in ID is actually important because

00:29:45,919 --> 00:29:49,669
whenever we want to talk to any client

00:29:47,750 --> 00:29:52,519
it's gonna know which plug-in is talking

00:29:49,669 --> 00:29:53,929
so we need to send that along the alias

00:29:52,519 --> 00:29:55,490
is essentially if you want to load the

00:29:53,929 --> 00:29:56,929
same script twice then you can have

00:29:55,490 --> 00:29:58,279
different aliases for them and you know

00:29:56,929 --> 00:30:00,440
different configuration and weird stuff

00:29:58,279 --> 00:30:02,720
like that then we get our main function

00:30:00,440 --> 00:30:05,120
which was sadly empty and we had shut

00:30:02,720 --> 00:30:08,360
down now what we can do here is you know

00:30:05,120 --> 00:30:09,679
if we had a script that monitors

00:30:08,360 --> 00:30:10,940
databases or something like that we

00:30:09,679 --> 00:30:14,270
could you know how to come and here

00:30:10,940 --> 00:30:16,430
you know add schema foo and those

00:30:14,270 --> 00:30:17,990
arguments are passed to your scripts so

00:30:16,430 --> 00:30:19,220
you can provide a nifty little installer

00:30:17,990 --> 00:30:21,230
for your script or a nifty little

00:30:19,220 --> 00:30:23,150
command-line interface and all these

00:30:21,230 --> 00:30:25,910
command can also be used by the REST API

00:30:23,150 --> 00:30:28,910
if you're so inclined if someone wants

00:30:25,910 --> 00:30:30,200
remove Lee to install your scripts so

00:30:28,910 --> 00:30:32,540
the next thing we're going to do is add

00:30:30,200 --> 00:30:35,540
the script so it's actually being being

00:30:32,540 --> 00:30:38,390
used by Ennis client and to do that we

00:30:35,540 --> 00:30:42,680
use the Python script module again but

00:30:38,390 --> 00:30:45,620
add if I remember correctly and now I

00:30:42,680 --> 00:30:48,500
should have not removed script so I

00:30:45,620 --> 00:30:53,000
wouldn't have to time great and we need

00:30:48,500 --> 00:30:55,610
yeah let's do an SCP test and what we

00:30:53,000 --> 00:30:57,320
have here again is the root scope when

00:30:55,610 --> 00:31:00,110
the script is being started the image

00:30:57,320 --> 00:31:01,580
function and now we have a script alias

00:31:00,110 --> 00:31:03,320
which is simple but that's just because

00:31:01,580 --> 00:31:06,290
the default alias is the name of the

00:31:03,320 --> 00:31:08,600
script and yet they will in init

00:31:06,290 --> 00:31:09,770
function or in it main function because

00:31:08,600 --> 00:31:11,420
we're not running it for the command

00:31:09,770 --> 00:31:13,130
line we also got no shutdown function

00:31:11,420 --> 00:31:14,330
and this is actually interesting because

00:31:13,130 --> 00:31:16,400
this means that the script is still

00:31:14,330 --> 00:31:18,500
running so you know whatever I want to

00:31:16,400 --> 00:31:20,810
do it will do it for the duration of the

00:31:18,500 --> 00:31:22,870
lifetime when it client if I exit and

00:31:20,810 --> 00:31:25,550
its clients plus plus yeah sorry

00:31:22,870 --> 00:31:27,170
then we get to shutdown function so the

00:31:25,550 --> 00:31:29,600
script is running from start to finish

00:31:27,170 --> 00:31:31,040
so if you want to keep state or do some

00:31:29,600 --> 00:31:36,800
background processing or something like

00:31:31,040 --> 00:31:39,080
that that's totally fine right so that's

00:31:36,800 --> 00:31:42,140
it so now we're going something slightly

00:31:39,080 --> 00:31:44,870
more interesting and this is one of

00:31:42,140 --> 00:31:46,490
those pretty pictures and since I'm not

00:31:44,870 --> 00:31:48,530
having slides I have the most background

00:31:46,490 --> 00:31:50,420
images instead and essentially what

00:31:48,530 --> 00:31:52,370
we're gonna do here is we're gonna do a

00:31:50,420 --> 00:31:54,410
script that allows us to check which

00:31:52,370 --> 00:31:56,390
users have logged into the system I'm

00:31:54,410 --> 00:31:58,910
gonna try to do that in you know as few

00:31:56,390 --> 00:32:01,160
lines as possible so essentially the way

00:31:58,910 --> 00:32:02,630
this is gonna work is that you know

00:32:01,160 --> 00:32:04,250
we're gonna have our Windows machine and

00:32:02,630 --> 00:32:05,990
we're gonna have our check event log

00:32:04,250 --> 00:32:08,060
module and we're gonna have the Python

00:32:05,990 --> 00:32:11,000
script module and the web server and as

00:32:08,060 --> 00:32:13,280
well as curve right so if we start off

00:32:11,000 --> 00:32:15,140
at this end and what's gonna happen is

00:32:13,280 --> 00:32:16,670
that whenever someone logs in Windows

00:32:15,140 --> 00:32:18,980
will send an event log to the event log

00:32:16,670 --> 00:32:20,360
or a log message to devant log we will

00:32:18,980 --> 00:32:22,310
pick that up in the form of our

00:32:20,360 --> 00:32:23,960
real-time filter called login that's

00:32:22,310 --> 00:32:24,830
going to be sent as an event down to our

00:32:23,960 --> 00:32:26,780
Python scripts

00:32:24,830 --> 00:32:29,510
on eventhandler and that's gonna update

00:32:26,780 --> 00:32:31,160
the user variable so it's gonna say that

00:32:29,510 --> 00:32:34,340
you know user acts has logged in once

00:32:31,160 --> 00:32:35,870
twice three times on the other end we're

00:32:34,340 --> 00:32:37,850
gonna have you know someone executing

00:32:35,870 --> 00:32:39,170
curl to run this check and then we're

00:32:37,850 --> 00:32:41,600
gonna run the check users check at the

00:32:39,170 --> 00:32:43,250
bottom it's gonna in turn run the check

00:32:41,600 --> 00:32:44,990
users function inside the Python script

00:32:43,250 --> 00:32:46,550
and it's gonna access the users variable

00:32:44,990 --> 00:32:47,900
so essentially you have an asynchronous

00:32:46,550 --> 00:32:49,460
communication right we have the event

00:32:47,900 --> 00:32:51,050
log writing to some to our Python

00:32:49,460 --> 00:32:54,620
scripts and we have the rest module

00:32:51,050 --> 00:32:57,500
accessing the Python scripts and all of

00:32:54,620 --> 00:33:00,110
this or for all of this to work we need

00:32:57,500 --> 00:33:03,200
to have the actual event data and this

00:33:00,110 --> 00:33:05,450
is how an XML version of an immense log

00:33:03,200 --> 00:33:08,020
event looks and what we're gonna do is

00:33:05,450 --> 00:33:10,460
look for this target username thing and

00:33:08,020 --> 00:33:11,630
once we find out where essentially it's

00:33:10,460 --> 00:33:14,050
gonna log it so this is gonna be the

00:33:11,630 --> 00:33:18,230
cheap version of the script

00:33:14,050 --> 00:33:22,820
so let's look how this script looks it

00:33:18,230 --> 00:33:25,130
was MC seed those MC dot PI and the

00:33:22,820 --> 00:33:26,630
first thing we have up here which I can

00:33:25,130 --> 00:33:29,030
see because I have my Start menu there

00:33:26,630 --> 00:33:31,550
is we're importing some stuff from the

00:33:29,030 --> 00:33:33,350
NS Wyant namespace settings is to be

00:33:31,550 --> 00:33:35,630
able to configure the event log module

00:33:33,350 --> 00:33:37,520
registry is to be able to say that we

00:33:35,630 --> 00:33:39,890
want to have notifications and we have

00:33:37,520 --> 00:33:42,470
functions and things like that and core

00:33:39,890 --> 00:33:44,780
is essentially for loading the event log

00:33:42,470 --> 00:33:47,420
but it's for talking to an alliance then

00:33:44,780 --> 00:33:49,970
we're loading pythons rather shitty XML

00:33:47,420 --> 00:33:52,700
parser to be able to parse the event log

00:33:49,970 --> 00:33:54,350
data from the Windows Event log then we

00:33:52,700 --> 00:33:56,450
have our users variable which is where

00:33:54,350 --> 00:33:58,520
we share the state right and then we

00:33:56,450 --> 00:34:00,200
have our event handler and event handler

00:33:58,520 --> 00:34:02,300
gets the name of the event and it's get

00:34:00,200 --> 00:34:05,240
metadata metadata is essentially a hash

00:34:02,300 --> 00:34:06,590
map right key value store and in the key

00:34:05,240 --> 00:34:08,900
value store report from things like

00:34:06,590 --> 00:34:11,720
event ID and message and things like

00:34:08,900 --> 00:34:14,030
that we also get the XML data so what we

00:34:11,720 --> 00:34:16,840
can do here is take the Python magic

00:34:14,030 --> 00:34:19,310
function to parse the XML for us and

00:34:16,840 --> 00:34:21,110
then we need to specify the namespace

00:34:19,310 --> 00:34:23,510
thing because it's XML right that's

00:34:21,110 --> 00:34:25,850
awesome and then we can essentially just

00:34:23,510 --> 00:34:28,370
enumerate all of the data items in the

00:34:25,850 --> 00:34:31,610
event log and whenever we find one that

00:34:28,370 --> 00:34:33,650
says target username or well whenever we

00:34:31,610 --> 00:34:35,630
don't find one we will just continue to

00:34:33,650 --> 00:34:37,550
the next one but when we do find one we

00:34:35,630 --> 00:34:38,730
will see do we have this user already

00:34:37,550 --> 00:34:40,290
login if so

00:34:38,730 --> 00:34:42,780
count to zero and then we increment

00:34:40,290 --> 00:34:44,520
account and this is pretty much all the

00:34:42,780 --> 00:34:46,200
code we need to parse read events log

00:34:44,520 --> 00:34:47,879
data and do some sort of structured

00:34:46,200 --> 00:34:49,560
processing with it obviously we might

00:34:47,879 --> 00:34:51,990
wanna do something slightly more fancy

00:34:49,560 --> 00:34:55,320
than just grep for the name but again

00:34:51,990 --> 00:34:56,669
this is a simple script the next thing

00:34:55,320 --> 00:34:59,310
we have is our function that is

00:34:56,669 --> 00:35:01,170
providing the check functionality and we

00:34:59,310 --> 00:35:03,060
just need to reset the for this data and

00:35:01,170 --> 00:35:05,369
then we enumerate all the users who's

00:35:03,060 --> 00:35:07,230
logged in and we append them in the form

00:35:05,369 --> 00:35:09,660
of performance data and then we just

00:35:07,230 --> 00:35:13,220
return that with a fancy little message

00:35:09,660 --> 00:35:15,750
and the zero response code which is okay

00:35:13,220 --> 00:35:17,579
last thing we have is the init function

00:35:15,750 --> 00:35:20,520
and this is where we sort of tie all of

00:35:17,579 --> 00:35:22,920
this together so in the init function we

00:35:20,520 --> 00:35:24,240
get an instance to the registry and this

00:35:22,920 --> 00:35:26,010
is again where we have to specify the

00:35:24,240 --> 00:35:28,619
plug-in ID to sort of say hey we are

00:35:26,010 --> 00:35:30,540
plug-in 25 and then we can say you know

00:35:28,619 --> 00:35:33,119
whenever event log is submitting an

00:35:30,540 --> 00:35:35,040
event called login send it to me or send

00:35:33,119 --> 00:35:36,329
it to my own event function and I can

00:35:35,040 --> 00:35:38,579
also say whenever someone is running

00:35:36,329 --> 00:35:40,320
check users send it to my check users

00:35:38,579 --> 00:35:42,839
function and then we provide a little

00:35:40,320 --> 00:35:44,730
fancy description for it the last thing

00:35:42,839 --> 00:35:47,280
we need to do is set up Windows Event

00:35:44,730 --> 00:35:49,890
log checker and to do that we need to

00:35:47,280 --> 00:35:51,210
use settings and then we essentially

00:35:49,890 --> 00:35:53,849
said that you know enable real-time

00:35:51,210 --> 00:35:56,310
event logging we add login or a filter

00:35:53,849 --> 00:35:58,079
called log in which log or reads the

00:35:56,310 --> 00:36:01,680
security log it looks for events for the

00:35:58,079 --> 00:36:04,109
6:24 and it's send that as an event to

00:36:01,680 --> 00:36:05,310
other systems and then we just load

00:36:04,109 --> 00:36:10,069
check and unplug and we're done

00:36:05,310 --> 00:36:17,630
right so let's see if this works so

00:36:10,069 --> 00:36:30,089
let's clear the screen and PI add script

00:36:17,630 --> 00:36:32,089
let's see point sorry thank you pair

00:36:30,089 --> 00:36:34,319
programming awesome right

00:36:32,089 --> 00:36:36,000
right so what else do we need to do yeah

00:36:34,319 --> 00:36:39,060
we need to reload on his client because

00:36:36,000 --> 00:36:41,010
it's running someday I'm gonna implement

00:36:39,060 --> 00:36:43,680
so you don't have to do that but not

00:36:41,010 --> 00:36:45,000
right now actually we're going to do

00:36:43,680 --> 00:36:46,349
that later in the presentation but

00:36:45,000 --> 00:36:52,349
that's not to get ahead of ourselves

00:36:46,349 --> 00:36:57,299
start and a-c-p so let's see

00:36:52,349 --> 00:37:01,529
sorry really that's weird

00:36:57,299 --> 00:37:02,279
why would it do that makes no sense that

00:37:01,529 --> 00:37:05,059
scares me

00:37:02,279 --> 00:37:05,059
never done that before

00:37:05,249 --> 00:37:12,989
right so what we're gonna do now is use

00:37:09,269 --> 00:37:17,460
net use command to log into my machine G

00:37:12,989 --> 00:37:18,539
file along JW let's delete it first

00:37:17,460 --> 00:37:21,029
because I've probably done this

00:37:18,539 --> 00:37:23,369
yesterday probably not

00:37:21,029 --> 00:37:28,819
oh I can't spell that's apparently

00:37:23,369 --> 00:37:36,079
what's not yeah well maybe I haven't

00:37:28,819 --> 00:37:44,279
user past user right and there's nothing

00:37:36,079 --> 00:37:46,279
that's about sign G 501 JW oh yeah yeah

00:37:44,279 --> 00:37:48,390
thank you

00:37:46,279 --> 00:37:51,119
so we're logging someone else machines

00:37:48,390 --> 00:37:51,930
that's great on this network yeah so I

00:37:51,119 --> 00:37:57,029
had done it before

00:37:51,930 --> 00:38:00,839
super yeah I've actually tried so this

00:37:57,029 --> 00:38:03,930
works or it worked this morning right so

00:38:00,839 --> 00:38:07,200
what we have now hopefully if we move on

00:38:03,930 --> 00:38:11,130
is the ability to rows sorry the ability

00:38:07,200 --> 00:38:12,719
to run our magical curl command and

00:38:11,130 --> 00:38:17,489
let's see if I can talk this really

00:38:12,719 --> 00:38:23,039
quickly and now all of a sudden it was

00:38:17,489 --> 00:38:30,630
really slowly typing queries checked

00:38:23,039 --> 00:38:34,799
users commands execute we probably want

00:38:30,630 --> 00:38:35,400
to Python this right damn it always too

00:38:34,799 --> 00:38:38,160
fast

00:38:35,400 --> 00:38:40,710
great so one user has logged in and that

00:38:38,160 --> 00:38:43,170
user was called test user super right so

00:38:40,710 --> 00:38:46,670
this seems to work and just sort of to

00:38:43,170 --> 00:38:50,059
prove that I'm not cheating here let's

00:38:46,670 --> 00:38:55,349
lead the session again and log in again

00:38:50,059 --> 00:38:58,020
with wrong the wrong hostname history in

00:38:55,349 --> 00:39:00,890
Windows is really up by the way

00:38:58,020 --> 00:39:05,700
it never goes to what you expected to

00:39:00,890 --> 00:39:07,320
write so let's see the query twice

00:39:05,700 --> 00:39:09,690
awesome right

00:39:07,320 --> 00:39:11,550
and the interesting thing here is it's

00:39:09,690 --> 00:39:13,350
not much code and we can sort of do a

00:39:11,550 --> 00:39:15,050
lot of processing we'd event log events

00:39:13,350 --> 00:39:19,490
to actually provide useful information

00:39:15,050 --> 00:39:19,490
instead of just sending it all somewhere

00:39:19,550 --> 00:39:26,760
now it's one user that has logged in but

00:39:22,170 --> 00:39:28,590
he has longing twice so but but you

00:39:26,760 --> 00:39:30,480
might might add that it should be not

00:39:28,590 --> 00:39:31,950
plural when it's just one so I agree

00:39:30,480 --> 00:39:37,350
with you it should said one user when

00:39:31,950 --> 00:39:39,240
it's one right so now it's time for the

00:39:37,350 --> 00:39:41,910
endgame right so now we're gonna sort of

00:39:39,240 --> 00:39:44,610
move on and the stories again gonna take

00:39:41,910 --> 00:39:45,870
a slightly different turn and what we're

00:39:44,610 --> 00:39:47,310
gonna do now is look at another new

00:39:45,870 --> 00:39:50,280
feature when it's lined that's called

00:39:47,310 --> 00:39:52,500
zip modules and essentially zip modules

00:39:50,280 --> 00:39:55,290
is just a way to package stuff in a zip

00:39:52,500 --> 00:39:59,100
file and have any client deal without as

00:39:55,290 --> 00:40:00,900
sort of a single unit so to do this

00:39:59,100 --> 00:40:05,190
we're gonna showcase what is it man

00:40:00,900 --> 00:40:10,110
you'll look like and hopefully Oh Manish

00:40:05,190 --> 00:40:11,760
this great so inside the zip module you

00:40:10,110 --> 00:40:13,440
will have besides you know scripts or

00:40:11,760 --> 00:40:15,780
whatever you want to provide for for

00:40:13,440 --> 00:40:17,700
artifacts resources you will also have a

00:40:15,780 --> 00:40:19,650
module of JSON file because Jason is

00:40:17,700 --> 00:40:21,990
awesome right I could have done module

00:40:19,650 --> 00:40:27,660
lot XML and everything like oh no not

00:40:21,990 --> 00:40:31,400
XML that's so 2010 so so now it's 2017

00:40:27,660 --> 00:40:33,660
and it's Jason I'm like ahead of myself

00:40:31,400 --> 00:40:35,070
you know next - it's gonna be Hamill

00:40:33,660 --> 00:40:36,900
that's gonna be awesome

00:40:35,070 --> 00:40:38,220
so we have a name for the module we have

00:40:36,900 --> 00:40:39,630
description for the module we have a

00:40:38,220 --> 00:40:41,610
version for the modules and these are

00:40:39,630 --> 00:40:44,160
essentially just metadata to be able to

00:40:41,610 --> 00:40:45,750
find modules then we have something

00:40:44,160 --> 00:40:47,670
slightly more interesting because this

00:40:45,750 --> 00:40:49,290
modules requires other modules to

00:40:47,670 --> 00:40:51,300
function in this case it requires check

00:40:49,290 --> 00:40:52,950
system and check event log so what

00:40:51,300 --> 00:40:55,830
happens is when we load this module

00:40:52,950 --> 00:40:58,170
those modules will load it as well which

00:40:55,830 --> 00:40:59,610
can sometimes be useful then we can also

00:40:58,170 --> 00:41:01,380
say that hey I have a bunch of scripts

00:40:59,610 --> 00:41:03,420
in my module and I want them to be added

00:41:01,380 --> 00:41:05,220
and there's two ways to do this the

00:41:03,420 --> 00:41:07,710
first one which is slightly more verbose

00:41:05,220 --> 00:41:10,110
is to tell it hey we have check external

00:41:07,710 --> 00:41:11,310
scripts it's gonna run my script it's

00:41:10,110 --> 00:41:11,850
going to give it an alias and we're

00:41:11,310 --> 00:41:14,370
gonna come

00:41:11,850 --> 00:41:16,590
line or you can just here's my script

00:41:14,370 --> 00:41:18,060
but then you'll get the default aliases

00:41:16,590 --> 00:41:20,460
and default command lines and default

00:41:18,060 --> 00:41:22,200
everything right we can also run the

00:41:20,460 --> 00:41:23,610
bunch of commands on start in this case

00:41:22,200 --> 00:41:25,560
we're adding a performance counter

00:41:23,610 --> 00:41:27,750
that's gonna be palled repeatedly so we

00:41:25,560 --> 00:41:29,910
can you know use it for something we're

00:41:27,750 --> 00:41:32,340
not gonna have time to use it so let's

00:41:29,910 --> 00:41:35,610
ignore that for now but we can do other

00:41:32,340 --> 00:41:39,690
stuff as well right

00:41:35,610 --> 00:41:48,930
so let's move on and delete RN is client

00:41:39,690 --> 00:41:50,730
any file and net stop and the CPE and

00:41:48,930 --> 00:41:52,560
let's essentially restart the whole

00:41:50,730 --> 00:41:53,850
presentation but do everything with

00:41:52,560 --> 00:42:01,050
modules and stats can be super awesome

00:41:53,850 --> 00:42:08,220
right I can't spell em SCP web install -

00:42:01,050 --> 00:42:11,600
- password hello s oh really

00:42:08,220 --> 00:42:14,250
have you changed spelling recently

00:42:11,600 --> 00:42:17,270
awesome right you know this is just as

00:42:14,250 --> 00:42:21,450
awesome it was the last time we saw it's

00:42:17,270 --> 00:42:27,690
sorry let's go here and run start

00:42:21,450 --> 00:42:28,890
instead right so now we're gonna get to

00:42:27,690 --> 00:42:32,480
the instituting bit because now we can

00:42:28,890 --> 00:42:36,000
use curl that's always fun

00:42:32,480 --> 00:42:38,310
and I'm gonna QuickStart my curl command

00:42:36,000 --> 00:42:41,550
a bit here and what we're gonna do is

00:42:38,310 --> 00:42:43,320
we're gonna go to our modules endpoint

00:42:41,550 --> 00:42:48,360
again and we're gonna create a new

00:42:43,320 --> 00:42:50,250
module we do this with post because post

00:42:48,360 --> 00:42:52,440
it's cooler and put I'm not really sure

00:42:50,250 --> 00:43:03,300
which one is which I are used to half

00:42:52,440 --> 00:43:10,380
the times backslash c top phone doesn't

00:43:03,300 --> 00:43:13,980
work Oh SMC seed Oh sudden C dot zip and

00:43:10,380 --> 00:43:14,610
let's these guys together right so let's

00:43:13,980 --> 00:43:19,500
see if this works

00:43:14,610 --> 00:43:21,710
I don't know we got nothing that's good

00:43:19,500 --> 00:43:21,710
thing

00:43:22,349 --> 00:43:29,579
we're not on kinda barcia partial I

00:43:25,529 --> 00:43:36,900
think this is it something it scares me

00:43:29,579 --> 00:43:49,140
but probably not working queries where

00:43:36,900 --> 00:43:54,989
is what was it check users execute yeah

00:43:49,140 --> 00:43:56,880
oh yeah it worked so let's try the whole

00:43:54,989 --> 00:43:58,499
login logout thing again and see if it

00:43:56,880 --> 00:43:58,859
actually works if I'm just messing with

00:43:58,499 --> 00:44:05,609
you

00:43:58,859 --> 00:44:08,039
was it 501 thank you delete it's kind of

00:44:05,609 --> 00:44:08,959
weird delete of the session but maybe

00:44:08,039 --> 00:44:18,749
that's just me

00:44:08,959 --> 00:44:20,789
wait user : test user right so let's

00:44:18,749 --> 00:44:25,019
rerun the command and do the whole point

00:44:20,789 --> 00:44:27,359
on thing at the end awesome it works

00:44:25,019 --> 00:44:29,880
one user is logged in once not twice I

00:44:27,359 --> 00:44:32,789
know it's confusing

00:44:29,880 --> 00:44:34,559
now comes the actual best part I don't

00:44:32,789 --> 00:44:36,539
know we're doing for time but I think

00:44:34,559 --> 00:44:40,140
we're spot-on actually now that's

00:44:36,539 --> 00:44:43,650
amazing yeah I am this is actually that

00:44:40,140 --> 00:44:46,079
we should be in awe because this is

00:44:43,650 --> 00:44:48,089
actually documented right now you can go

00:44:46,079 --> 00:44:51,239
to the documentation site and and what I

00:44:48,089 --> 00:44:55,019
just said is already there there's never

00:44:51,239 --> 00:44:56,549
happened before never you know I've been

00:44:55,019 --> 00:44:58,829
here for 10 years

00:44:56,549 --> 00:45:01,319
promising you know lots of stuff that

00:44:58,829 --> 00:45:05,099
never I mean the PI toe stuff has been

00:45:01,319 --> 00:45:08,579
there for 10 years it's been not been

00:45:05,099 --> 00:45:10,340
documented until now so please do visit

00:45:08,579 --> 00:45:13,700
the documentation

00:45:10,340 --> 00:45:18,859
[Applause]

00:45:13,700 --> 00:45:23,910
right and that's pretty much all I had I

00:45:18,859 --> 00:45:27,029
think or not so now's the time for

00:45:23,910 --> 00:45:28,559
questions and you get the candy so thank

00:45:27,029 --> 00:45:33,470
you go for it

00:45:28,559 --> 00:45:37,650
and any questions not he will be candy

00:45:33,470 --> 00:45:38,759
some requests for candy so a short

00:45:37,650 --> 00:45:41,009
question of mine

00:45:38,759 --> 00:45:44,099
you mentioned URL for the documentation

00:45:41,009 --> 00:45:45,390
yes you can also query yet by a curl or

00:45:44,099 --> 00:45:49,079
yeah absolutely

00:45:45,390 --> 00:45:50,059
yesterday okay that's actually a good

00:45:49,079 --> 00:45:52,200
thing I I

00:45:50,059 --> 00:45:53,970
commentation with curl okay and like I

00:45:52,200 --> 00:45:55,499
actually I can't do that here because

00:45:53,970 --> 00:46:01,279
the Wi-Fi is not working though actually

00:45:55,499 --> 00:46:09,359
right and work and yes

00:46:01,279 --> 00:46:13,529
what was it extending Python is that

00:46:09,359 --> 00:46:18,079
correct moved permanency oh yeah that's

00:46:13,529 --> 00:46:21,079
actually true because it's mood here

00:46:18,079 --> 00:46:23,219
Susie yeah exactly

00:46:21,079 --> 00:46:26,219
and if you see here there is actually

00:46:23,219 --> 00:46:28,440
you know here you have like yeah I don't

00:46:26,219 --> 00:46:30,390
read HTML very well but but settings not

00:46:28,440 --> 00:46:33,479
save and you know save the settings file

00:46:30,390 --> 00:46:38,789
to disk or yeah so yeah yeah it's it's

00:46:33,479 --> 00:46:39,839
totally documented why couldn't thank

00:46:38,789 --> 00:46:45,390
you thank you

00:46:39,839 --> 00:46:48,719
oh I would pass on the candy but thank

00:46:45,390 --> 00:46:51,539
you would you advise to use and his

00:46:48,719 --> 00:46:55,170
client on Linux I know you have

00:46:51,539 --> 00:46:59,309
presented it I think two years ago but I

00:46:55,170 --> 00:47:03,259
never tried it and I say I would say yes

00:46:59,309 --> 00:47:03,259
I thought you'd probably be the only one

00:47:04,170 --> 00:47:09,940
No but you shouldn't let that stand in

00:47:07,390 --> 00:47:13,050
the way of trying things out you know it

00:47:09,940 --> 00:47:15,520
might be awesome no I would say

00:47:13,050 --> 00:47:17,290
unfortunately the check system thing is

00:47:15,520 --> 00:47:19,960
not implemented a hundred percent

00:47:17,290 --> 00:47:21,339
currently so things like check CPU would

00:47:19,960 --> 00:47:25,270
have to be through external scripts and

00:47:21,339 --> 00:47:27,369
that kind of sucks so oh yeah that works

00:47:25,270 --> 00:47:31,810
and you know the REST API and the Python

00:47:27,369 --> 00:47:33,579
thing and that's totally cool and it

00:47:31,810 --> 00:47:37,359
works well on Linux in that regard the

00:47:33,579 --> 00:47:39,099
only bit is that check CPU is well

00:47:37,359 --> 00:47:43,390
that's something extra on script for

00:47:39,099 --> 00:47:45,460
that which i think is very shame so feel

00:47:43,390 --> 00:47:47,200
free to try it out and and the I'll give

00:47:45,460 --> 00:47:48,849
you any support you need because it will

00:47:47,200 --> 00:47:56,530
be awesome to get more people on Linux

00:47:48,849 --> 00:47:58,329
side and seriously ok if you want you

00:47:56,530 --> 00:48:05,200
can get one of these visual basic

00:47:58,329 --> 00:48:06,880
stickers that's actually the truth of

00:48:05,200 --> 00:48:08,890
the matter it said and it's client is I

00:48:06,880 --> 00:48:17,339
said written in Visual Basic not many

00:48:08,890 --> 00:48:19,990
people know this no questions oh no ok

00:48:17,339 --> 00:48:23,859
I'll have to eat all my gin tonic candy

00:48:19,990 --> 00:48:27,280
myself them yeah that's nice it burns

00:48:23,859 --> 00:48:32,740
like gin tonic III honest to God have

00:48:27,280 --> 00:48:35,230
gin tonic and II yeah gin tonic yeah you

00:48:32,740 --> 00:48:38,349
sure it won't be through it I'll it's

00:48:35,230 --> 00:48:41,140
Howard so I'll hit someone no I'll kill

00:48:38,349 --> 00:48:44,460
someone along I have a nasty throw but

00:48:41,140 --> 00:48:50,470
you can come up later and pick one yeah

00:48:44,460 --> 00:48:53,250
well thank you for your time that's all

00:48:50,470 --> 00:48:53,250
I have yeah

00:48:53,890 --> 00:49:02,290

YouTube URL: https://www.youtube.com/watch?v=5N8RHDB4X50


