Title: OSMC 2017 | SNMP explained by Rob Hassing
Publication date: 2017-12-05
Playlist: OSMC 2017 | Open Source Monitoring Conference
Description: 
	An in depth overview of the possibilities of SNMP. How to monitor your environment using SNMP.
Learn what you can do with SNMP and what SNMP can do for you within one hour. Most aspects of SNMP are addressed. Getting the information, setting values, but also how the information is presented and the difference between the OID and the MIBs.
In this presentation I’m trying to make SNMP “simple” again and understandable for everybody.
Captions: 
	00:00:11,130 --> 00:00:19,830
okay now now the the last talk in this

00:00:15,690 --> 00:00:21,869
trek for today the speaker is from the

00:00:19,830 --> 00:00:23,520
Netherlands and works as an IT

00:00:21,869 --> 00:00:27,300
consultant for deltax

00:00:23,520 --> 00:00:32,640
and the talk or the presentation is

00:00:27,300 --> 00:00:36,300
about SNMP and it explains us SNMP

00:00:32,640 --> 00:00:38,670
simple and understandable so that we're

00:00:36,300 --> 00:00:42,449
experts hopefully after that talk so

00:00:38,670 --> 00:00:47,449
speakers rob passing a warm welcome

00:00:42,449 --> 00:00:49,650
please thank you

00:00:47,449 --> 00:00:53,879
well first of all thank you all for

00:00:49,650 --> 00:00:54,960
joining my name is Rob hashing I am from

00:00:53,879 --> 00:00:58,379
the Netherlands I work for a company

00:00:54,960 --> 00:01:01,920
called deltax deltax is a system

00:00:58,379 --> 00:01:03,269
integrator we do a lot of IT stuff

00:01:01,920 --> 00:01:10,950
actually we do

00:01:03,269 --> 00:01:13,320
NetApp HPE Aruba VMware Microsoft almost

00:01:10,950 --> 00:01:18,000
everything you can imagine what you can

00:01:13,320 --> 00:01:21,479
do in IT we try to do it or we do it we

00:01:18,000 --> 00:01:25,039
also now use reseller so sure it's not

00:01:21,479 --> 00:01:33,570
too popular over here I've heard but

00:01:25,039 --> 00:01:36,030
okay oh yeah deltax 60 colleagues and

00:01:33,570 --> 00:01:37,700
we're based in the East and part of the

00:01:36,030 --> 00:01:40,259
Netherlands so near the German border

00:01:37,700 --> 00:01:41,789
I'll try not to mix up my language is

00:01:40,259 --> 00:01:44,310
because I'm still thinking Dutch

00:01:41,789 --> 00:01:46,890
speaking German all day and now doing my

00:01:44,310 --> 00:01:51,179
talk in English so it's maybe a bit

00:01:46,890 --> 00:01:54,899
difficult I'm an IT consultant at the

00:01:51,179 --> 00:01:58,189
deltax a hard working IT consultant I do

00:01:54,899 --> 00:02:02,549
monitoring and networking over there

00:01:58,189 --> 00:02:05,219
mostly wireless and for monitoring we we

00:02:02,549 --> 00:02:06,899
use Nagios it's at least 25 of our

00:02:05,219 --> 00:02:11,130
customers where we maintain the entire

00:02:06,899 --> 00:02:14,730
environment for them during the weekends

00:02:11,130 --> 00:02:18,440
like to drive my 2cv and go to meetings

00:02:14,730 --> 00:02:18,440
and looking for a bit more it finds you

00:02:19,360 --> 00:02:27,250
SNMP why should we use SNMP well one of

00:02:23,830 --> 00:02:30,070
the main things it's simple and it's a

00:02:27,250 --> 00:02:33,670
network management protocol it's highly

00:02:30,070 --> 00:02:37,630
available because a lot of vendors

00:02:33,670 --> 00:02:40,150
support it so if you want to look at

00:02:37,630 --> 00:02:43,480
switches or a Windows machine or a Linux

00:02:40,150 --> 00:02:47,040
machine or whatever you can use SNMP to

00:02:43,480 --> 00:02:53,500
to ask things from the system and see

00:02:47,040 --> 00:02:56,350
what the current status is so supported

00:02:53,500 --> 00:02:58,450
by most signers and most importantly for

00:02:56,350 --> 00:03:01,840
us it's there's no third-party software

00:02:58,450 --> 00:03:04,660
needed the problem is we maintain a lot

00:03:01,840 --> 00:03:06,580
of networks from our customers and the

00:03:04,660 --> 00:03:09,340
customers don't want us to install extra

00:03:06,580 --> 00:03:13,510
software on their machines but they

00:03:09,340 --> 00:03:16,030
still want to monitor it so our solution

00:03:13,510 --> 00:03:18,070
was to use SNMP so we can still look at

00:03:16,030 --> 00:03:19,330
the different things we need to know

00:03:18,070 --> 00:03:22,180
from the systems if they're still

00:03:19,330 --> 00:03:28,840
working ok or if a hard drive runs full

00:03:22,180 --> 00:03:30,970
or memory is overloaded so I'll get a

00:03:28,840 --> 00:03:36,510
more bit more technical and bit more

00:03:30,970 --> 00:03:40,239
into depth how it works it's using UDP

00:03:36,510 --> 00:03:43,810
port 161 for asking stuff from the

00:03:40,239 --> 00:03:47,410
system from the device and 162 for SNMP

00:03:43,810 --> 00:03:51,700
trapping SNP trapping I'll explain that

00:03:47,410 --> 00:03:54,700
later how it works it has an SNMP header

00:03:51,700 --> 00:03:58,420
and that contains the the SNMP version

00:03:54,700 --> 00:04:02,170
and a community at least in version 1

00:03:58,420 --> 00:04:04,900
and 2 C and a PD you type edu type is

00:04:02,170 --> 00:04:06,810
what do we want to know what what do we

00:04:04,900 --> 00:04:09,820
want to do to the system do we want to

00:04:06,810 --> 00:04:11,590
get one piece of information or a lot of

00:04:09,820 --> 00:04:14,110
information but I'll explain that later

00:04:11,590 --> 00:04:20,220
as well there are three versions

00:04:14,110 --> 00:04:25,750
available for SMTP SDP version 1 still

00:04:20,220 --> 00:04:27,729
usable but to see has a bit more well

00:04:25,750 --> 00:04:31,450
you can get more from from SDP version

00:04:27,729 --> 00:04:33,010
2c and first in 3 is also available

00:04:31,450 --> 00:04:34,780
it supports encryption

00:04:33,010 --> 00:04:38,200
which is for security reasons maybe a

00:04:34,780 --> 00:04:41,620
better choice but it also gives us some

00:04:38,200 --> 00:04:45,070
overhead and therefore harder to

00:04:41,620 --> 00:04:50,560
configure and and not very often used as

00:04:45,070 --> 00:04:52,870
far as I can see so we have a network

00:04:50,560 --> 00:04:57,250
monitoring system and we want to check

00:04:52,870 --> 00:04:58,390
an Ethernet port on a router so check

00:04:57,250 --> 00:05:01,650
the interface status

00:04:58,390 --> 00:05:04,480
we sent a get request to the router and

00:05:01,650 --> 00:05:08,320
get a reply back from the router saying

00:05:04,480 --> 00:05:13,000
that it's up this is just one very

00:05:08,320 --> 00:05:15,730
simple example on the other hand we can

00:05:13,000 --> 00:05:18,850
also configure the router to send an

00:05:15,730 --> 00:05:20,860
SNMP trap once Ethernet interface the

00:05:18,850 --> 00:05:22,540
Internet interface goes down it sends a

00:05:20,860 --> 00:05:25,170
trap to the network monitoring system

00:05:22,540 --> 00:05:26,800
and the network monitoring system then

00:05:25,170 --> 00:05:31,740
can handle it

00:05:26,800 --> 00:05:33,850
but I'll get into depth about that later

00:05:31,740 --> 00:05:44,020
now we're going to be a bit more

00:05:33,850 --> 00:05:48,040
in-depth for the protocol the SNMP

00:05:44,020 --> 00:05:50,020
protocol it has a community string which

00:05:48,040 --> 00:05:54,850
is actually there's some sort of

00:05:50,020 --> 00:05:57,000
password to to get the information from

00:05:54,850 --> 00:05:59,440
the system you can get a read-only

00:05:57,000 --> 00:06:02,860
community string or readwrite community

00:05:59,440 --> 00:06:06,460
string and then we've got these PDUs and

00:06:02,860 --> 00:06:08,500
there we can say what we want to get

00:06:06,460 --> 00:06:12,130
from the system so do we want to get

00:06:08,500 --> 00:06:16,300
just one piece of information and then -

00:06:12,130 --> 00:06:18,910
it sends a response but I'll show it in

00:06:16,300 --> 00:06:22,050
my wife shark I don't think this is

00:06:18,910 --> 00:06:25,480
readable but I've zoomed in a little bit

00:06:22,050 --> 00:06:27,760
here we see the the protocol this is

00:06:25,480 --> 00:06:29,950
version 2 see that it's used the

00:06:27,760 --> 00:06:33,370
community in this case is public not

00:06:29,950 --> 00:06:39,090
really secure but we said see that it's

00:06:33,370 --> 00:06:42,220
sending a get request and there's an OID

00:06:39,090 --> 00:06:44,270
over there and the OID I will explain

00:06:42,220 --> 00:06:48,710
later how that's build up and

00:06:44,270 --> 00:06:52,220
what it does in this case though ideas

00:06:48,710 --> 00:06:58,040
get me the I think the contacts from the

00:06:52,220 --> 00:07:00,950
system an answer is sent back we also

00:06:58,040 --> 00:07:05,350
see its again version to see its public

00:07:00,950 --> 00:07:09,980
it's the get response in this case and

00:07:05,350 --> 00:07:17,420
we see over there that it's my name for

00:07:09,980 --> 00:07:22,220
the contact person for this system the

00:07:17,420 --> 00:07:24,590
OID is a bunch of numbers but it's it's

00:07:22,220 --> 00:07:28,760
built up pretty good and I'll try to

00:07:24,590 --> 00:07:32,990
explain it all oh I D start with this

00:07:28,760 --> 00:07:37,880
sequence so 1 3 6 1 and after that it's

00:07:32,990 --> 00:07:40,730
split up into different in a different

00:07:37,880 --> 00:07:44,660
tree mostly used is the the management

00:07:40,730 --> 00:07:51,710
and private first I'll start with the

00:07:44,660 --> 00:07:54,080
management if something is really common

00:07:51,710 --> 00:08:01,700
it's always in the management map files

00:07:54,080 --> 00:08:04,250
and things like interfaces the most

00:08:01,700 --> 00:08:07,460
common things in contact persons is all

00:08:04,250 --> 00:08:12,770
in the management map files so the OID

00:08:07,460 --> 00:08:14,630
then would be 1 3 6 1 2 1 1 and then the

00:08:12,770 --> 00:08:18,800
next thing you want to ask there's an

00:08:14,630 --> 00:08:23,890
entire tree underneath it the private

00:08:18,800 --> 00:08:28,220
part this is for enterprises so all

00:08:23,890 --> 00:08:30,950
major enterprises can get their own o ID

00:08:28,220 --> 00:08:34,040
number I've put in some examples here

00:08:30,950 --> 00:08:38,660
like Cisco Microsoft Apple but most

00:08:34,040 --> 00:08:40,490
bigger companies have their own o ID so

00:08:38,660 --> 00:08:43,250
they can write their own net files and

00:08:40,490 --> 00:08:51,410
then therefore can get really specific

00:08:43,250 --> 00:08:54,850
information from their own systems well

00:08:51,410 --> 00:08:57,970
this is the of the path in the OID tree

00:08:54,850 --> 00:09:00,550
in this example we want to get this

00:08:57,970 --> 00:09:06,339
the contact like I did in my wife shark

00:09:00,550 --> 00:09:09,519
example and the OID is then the one

00:09:06,339 --> 00:09:13,660
three six one two one one four zero and

00:09:09,519 --> 00:09:19,029
if we go back we can see it goes up here

00:09:13,660 --> 00:09:21,430
one and then one for for the for the sis

00:09:19,029 --> 00:09:24,519
contact in the system name is the five

00:09:21,430 --> 00:09:26,470
and this location and so we can get the

00:09:24,519 --> 00:09:31,180
entire information from the remote

00:09:26,470 --> 00:09:34,720
system but we can also use a shorter

00:09:31,180 --> 00:09:37,600
method to to write it and then we just

00:09:34,720 --> 00:09:40,449
ask for sis contact so it knows that it

00:09:37,600 --> 00:09:43,329
needs all the stuff in front and we can

00:09:40,449 --> 00:09:45,759
just let me do an SNMP get we can just

00:09:43,329 --> 00:09:51,819
ask for sis contact and then it will get

00:09:45,759 --> 00:09:57,459
the information as well net files it's

00:09:51,819 --> 00:10:00,220
not the man in black it's actually the

00:09:57,459 --> 00:10:04,240
emit file it's like what bns is to an IP

00:10:00,220 --> 00:10:08,290
address these owe IDs are very hard to

00:10:04,240 --> 00:10:12,550
read you can't remember them so in the

00:10:08,290 --> 00:10:18,100
mid file they explain how the of what is

00:10:12,550 --> 00:10:21,100
available for a certain oh I D these Oh

00:10:18,100 --> 00:10:25,269
Eddie's explain what type of information

00:10:21,100 --> 00:10:29,800
of variables we can get so if we get for

00:10:25,269 --> 00:10:32,910
example the uptime it will be more like

00:10:29,800 --> 00:10:35,379
a timestamp and if we want to get the

00:10:32,910 --> 00:10:38,019
system contact it will be stirring a

00:10:35,379 --> 00:10:40,589
display string or a normal string so

00:10:38,019 --> 00:10:43,800
there are different types of information

00:10:40,589 --> 00:10:46,029
sorry can you move a little bit into the

00:10:43,800 --> 00:10:48,459
pictures just for the recording so

00:10:46,029 --> 00:10:54,040
you're okay you're on a video thank you

00:10:48,459 --> 00:10:58,779
sorry no problem it's standarized of

00:10:54,040 --> 00:11:03,250
course and then in the mid files also

00:10:58,779 --> 00:11:06,670
described the D axis some parts are not

00:11:03,250 --> 00:11:09,100
accessible there are tables and I'll

00:11:06,670 --> 00:11:12,519
explain them later and these are not

00:11:09,100 --> 00:11:14,740
directly accessible but the oids

00:11:12,519 --> 00:11:17,620
underneath these tables are accessible

00:11:14,740 --> 00:11:20,079
and it can be read only or read write a

00:11:17,620 --> 00:11:21,939
read only example would be a system

00:11:20,079 --> 00:11:24,490
uptime because you don't want to write

00:11:21,939 --> 00:11:28,059
your own system of time but the system

00:11:24,490 --> 00:11:32,050
contact of course is a read/write thing

00:11:28,059 --> 00:11:33,730
because you can change the your system

00:11:32,050 --> 00:11:36,309
contact just by putting an S in the

00:11:33,730 --> 00:11:38,709
p-set and without logging in and

00:11:36,309 --> 00:11:42,880
changing config files you can use as an

00:11:38,709 --> 00:11:51,730
ax B to change it animate phone also

00:11:42,880 --> 00:11:54,100
described a status most of all the oids

00:11:51,730 --> 00:11:58,240
have a current status it can be current

00:11:54,100 --> 00:12:00,699
absolute or deprecated deprecated means

00:11:58,240 --> 00:12:05,709
that it's in there just for backwards

00:12:00,699 --> 00:12:10,209
compatibility for example disk sizes

00:12:05,709 --> 00:12:12,129
could be written in counter 32 at first

00:12:10,209 --> 00:12:14,079
and later on they changed it to counter

00:12:12,129 --> 00:12:15,879
64 because the output was getting bigger

00:12:14,079 --> 00:12:18,759
and bigger and it didn't fit in the

00:12:15,879 --> 00:12:20,410
country 32 anymore so they left in the

00:12:18,759 --> 00:12:22,540
counter 32 just for backwards

00:12:20,410 --> 00:12:25,839
compatibility but they also added then

00:12:22,540 --> 00:12:30,660
the counter 64 and then in the Med file

00:12:25,839 --> 00:12:34,300
it's described as a deprecated o ID

00:12:30,660 --> 00:12:37,059
these can still be used but well maybe

00:12:34,300 --> 00:12:40,689
you should check if there's another ID

00:12:37,059 --> 00:12:44,709
which is better for for your what you

00:12:40,689 --> 00:12:47,019
want to ask in the mail files also

00:12:44,709 --> 00:12:52,720
description and description will tell

00:12:47,019 --> 00:12:54,879
you what the output can be and what it

00:12:52,720 --> 00:13:00,490
actually does so what are you asking for

00:12:54,879 --> 00:13:05,379
and it's well described this way this is

00:13:00,490 --> 00:13:07,269
an example for a med file we've here the

00:13:05,379 --> 00:13:11,850
system uptime which has the syntax in

00:13:07,269 --> 00:13:15,130
time takes as I said read only of course

00:13:11,850 --> 00:13:17,439
well start assess current and the

00:13:15,130 --> 00:13:18,339
description says the time in hundreds of

00:13:17,439 --> 00:13:19,930
seconds since then

00:13:18,339 --> 00:13:24,670
management portion of the system was

00:13:19,930 --> 00:13:27,399
lost be initialized so with this Oh ID

00:13:24,670 --> 00:13:31,930
you can ask for this time for the system

00:13:27,399 --> 00:13:33,790
and the Cisco act is a display string up

00:13:31,930 --> 00:13:36,430
to 255 characters

00:13:33,790 --> 00:13:38,980
it's readwrite of course and it gives

00:13:36,430 --> 00:13:41,499
you the contact information from the

00:13:38,980 --> 00:13:47,920
sysadmin or whatever you want to put in

00:13:41,499 --> 00:13:50,439
there and as you can see we have this

00:13:47,920 --> 00:13:53,350
has a description and all the

00:13:50,439 --> 00:13:57,610
information you need that that way you

00:13:53,350 --> 00:14:00,639
can check if the if that what you want

00:13:57,610 --> 00:14:03,339
to check is available and you can browse

00:14:00,639 --> 00:14:09,990
through the map files and I'll show you

00:14:03,339 --> 00:14:09,990
later how that's easily done I'm sorry

00:14:10,319 --> 00:14:21,490
these well that's just part of the of

00:14:17,980 --> 00:14:23,709
the map file so it's it's not something

00:14:21,490 --> 00:14:27,519
I've written it's how to make files is

00:14:23,709 --> 00:14:31,899
set up and this is the the the last part

00:14:27,519 --> 00:14:35,860
of the OID so if you have this 1 3 6 1

00:14:31,899 --> 00:14:39,790
rubber bung and then it ends with 3 so

00:14:35,860 --> 00:14:42,550
it's in the system well you remember

00:14:39,790 --> 00:14:44,709
they did the earth oh ID 3 then it goes

00:14:42,550 --> 00:14:50,170
to management and then system and then

00:14:44,709 --> 00:14:54,790
it's the number 3 from system we also

00:14:50,170 --> 00:14:59,649
have devices with multiple things like

00:14:54,790 --> 00:15:02,170
for this example this is a an us or in

00:14:59,649 --> 00:15:04,629
at least the storage device which has a

00:15:02,170 --> 00:15:08,679
lot of hard disks and if we want to

00:15:04,629 --> 00:15:12,029
check with SNMP how that's set up they

00:15:08,679 --> 00:15:14,800
don't have a single oh I D for every

00:15:12,029 --> 00:15:17,800
hard drive but they put up a table and

00:15:14,800 --> 00:15:21,899
this table is filled with information

00:15:17,800 --> 00:15:25,269
about all storage systems in this device

00:15:21,899 --> 00:15:29,960
so in this example I'll I'll show you

00:15:25,269 --> 00:15:33,380
about a storage device I do an SDP walk

00:15:29,960 --> 00:15:36,500
with my very secret community string to

00:15:33,380 --> 00:15:40,010
an IP address and I'll ask for all

00:15:36,500 --> 00:15:43,580
storage devices then instead of getting

00:15:40,010 --> 00:15:46,940
just one thing back I'll get a table

00:15:43,580 --> 00:15:51,890
back and this table is set up with an

00:15:46,940 --> 00:15:55,700
index and then what I'm all different

00:15:51,890 --> 00:15:58,010
kinds of information about this single

00:15:55,700 --> 00:16:00,410
device as you can imagine this is

00:15:58,010 --> 00:16:02,060
example for a storage but for Network

00:16:00,410 --> 00:16:04,550
device it's exactly the same for the

00:16:02,060 --> 00:16:06,860
interfaces you'll have an index with the

00:16:04,550 --> 00:16:10,399
number of interfaces and then you'll

00:16:06,860 --> 00:16:13,370
have speed and the admin status OPA

00:16:10,399 --> 00:16:16,990
status all different kinds of things you

00:16:13,370 --> 00:16:16,990
want to know about one single interface

00:16:20,649 --> 00:16:27,200
in this example we have five storage

00:16:23,360 --> 00:16:30,260
devices and it creates a unique index

00:16:27,200 --> 00:16:34,180
number for for each device so if we want

00:16:30,260 --> 00:16:34,180
to get information about just one device

00:16:34,270 --> 00:16:41,120
we can ask for just the information but

00:16:37,910 --> 00:16:43,730
ends with four and then we'll I'll show

00:16:41,120 --> 00:16:45,890
it in the next example one thing you

00:16:43,730 --> 00:16:48,650
have to notice is that it never ends

00:16:45,890 --> 00:16:51,200
with a zero because it's a table it ends

00:16:48,650 --> 00:16:53,060
always at the index number and in the

00:16:51,200 --> 00:16:57,100
example where we asked for the system

00:16:53,060 --> 00:16:59,870
uptime it ends with a null zero so it's

00:16:57,100 --> 00:17:02,990
this zero indicates that it's just one

00:16:59,870 --> 00:17:04,819
single piece of information and with a

00:17:02,990 --> 00:17:10,790
number at the end it indicates that it's

00:17:04,819 --> 00:17:15,620
a table well here I wanted to ask about

00:17:10,790 --> 00:17:18,650
the root petition there's a this device

00:17:15,620 --> 00:17:21,770
had a root petition and it had the index

00:17:18,650 --> 00:17:25,760
number four so the ball part is the the

00:17:21,770 --> 00:17:28,189
thing I really want to know so you see

00:17:25,760 --> 00:17:32,320
it's root and you see it's block size

00:17:28,189 --> 00:17:36,050
and it's storage size so if we want to

00:17:32,320 --> 00:17:39,400
ask the system what how much of how big

00:17:36,050 --> 00:17:43,450
the the harddrive is we end up with

00:17:39,400 --> 00:17:46,360
getting the size x box by

00:17:43,450 --> 00:17:49,420
blocks allocation units well block size

00:17:46,360 --> 00:17:51,760
and then divided a couple of times but

00:17:49,420 --> 00:17:55,810
thousand 24 and then we know how much

00:17:51,760 --> 00:18:00,690
gigabytes this hard drive is and we also

00:17:55,810 --> 00:18:03,850
know what the system's usage was because

00:18:00,690 --> 00:18:06,340
it also said it tells us here what how

00:18:03,850 --> 00:18:10,900
much is used and then you can subtract

00:18:06,340 --> 00:18:16,180
it and now how obviously over how much

00:18:10,900 --> 00:18:18,730
data is on this hard drive this is the

00:18:16,180 --> 00:18:25,000
part from a net file where it explains

00:18:18,730 --> 00:18:29,050
the table this is the the storage entry

00:18:25,000 --> 00:18:31,900
and as you can see it's not accessible

00:18:29,050 --> 00:18:34,150
because the table itself has no

00:18:31,900 --> 00:18:36,610
information it's a different oh i DS

00:18:34,150 --> 00:18:41,620
that that give us the information about

00:18:36,610 --> 00:18:46,780
the different devices in the system so

00:18:41,620 --> 00:18:49,630
clear okay

00:18:46,780 --> 00:18:52,990
tools we need tools to check what we

00:18:49,630 --> 00:18:55,900
well build our checks or check what our

00:18:52,990 --> 00:18:59,020
system is doing and we've got different

00:18:55,900 --> 00:19:02,800
things we've got the CLI we can do an

00:18:59,020 --> 00:19:05,290
SNMP get we tell it what version the

00:19:02,800 --> 00:19:08,050
community string the IP address and we

00:19:05,290 --> 00:19:10,150
want to get the SIS context but simple

00:19:08,050 --> 00:19:12,460
it gives us back the information what's

00:19:10,150 --> 00:19:16,990
in there in the example I gave him

00:19:12,460 --> 00:19:19,600
before it was my email address an SNMP

00:19:16,990 --> 00:19:23,200
walk then you get a bunch of information

00:19:19,600 --> 00:19:24,910
so you get well actually the entire tree

00:19:23,200 --> 00:19:29,190
what's available at that moment for this

00:19:24,910 --> 00:19:34,690
system which can be pretty pretty much

00:19:29,190 --> 00:19:36,790
an SNMP set as you can see I have

00:19:34,690 --> 00:19:40,000
written a different community string a

00:19:36,790 --> 00:19:41,830
very secret community string this is the

00:19:40,000 --> 00:19:45,550
readwrite community string and because

00:19:41,830 --> 00:19:47,200
we can make a differentiation between a

00:19:45,550 --> 00:19:50,320
read write and read write and a

00:19:47,200 --> 00:19:52,480
read-only community string and then we

00:19:50,320 --> 00:19:54,490
can set the information in this case we

00:19:52,480 --> 00:19:55,660
set this as contact we know it's a

00:19:54,490 --> 00:19:58,150
string and this

00:19:55,660 --> 00:20:00,490
is not Adele texture Tinnell instead of

00:19:58,150 --> 00:20:04,780
my personal name I prefer to have my

00:20:00,490 --> 00:20:08,950
colleagues also have a look another nice

00:20:04,780 --> 00:20:11,620
tool we can use is SNMP netstat which

00:20:08,950 --> 00:20:14,770
can be very handy if for example

00:20:11,620 --> 00:20:17,290
somebody with a Windows machine says

00:20:14,770 --> 00:20:19,570
well I've got this web server set up but

00:20:17,290 --> 00:20:22,120
it's not working you have to open a

00:20:19,570 --> 00:20:23,890
firewall and you do a net step and you

00:20:22,120 --> 00:20:27,610
see nothing is listening on port 80 or

00:20:23,890 --> 00:20:29,680
443 then you know ok is not correct the

00:20:27,610 --> 00:20:36,340
web server is not set up correctly and

00:20:29,680 --> 00:20:39,400
then you can go back to them another

00:20:36,340 --> 00:20:46,450
great tool I've been using a lot is the

00:20:39,400 --> 00:20:49,810
I reasoning web browser this is a bit

00:20:46,450 --> 00:20:53,530
zoomed in it's the the this part of the

00:20:49,810 --> 00:20:57,040
of the screen in this case I've chosen

00:20:53,530 --> 00:21:00,100
to look at the interfaces and as you can

00:20:57,040 --> 00:21:02,170
see the interfaces also have a table and

00:21:00,100 --> 00:21:04,450
in this table we have of course the

00:21:02,170 --> 00:21:07,360
index which is a unique number and then

00:21:04,450 --> 00:21:09,850
the description the type and size speed

00:21:07,360 --> 00:21:14,470
and there's a lot of information for

00:21:09,850 --> 00:21:18,100
every interface on the system and the

00:21:14,470 --> 00:21:21,220
fun part is if we check out the

00:21:18,100 --> 00:21:23,920
description and but the Sinemet file we

00:21:21,220 --> 00:21:26,110
can see the upper status which is

00:21:23,920 --> 00:21:31,300
actually the current status of this

00:21:26,110 --> 00:21:34,210
interface it has in its own row ID which

00:21:31,300 --> 00:21:35,560
then can end with a dot and then the

00:21:34,210 --> 00:21:38,470
number of the interface you want to know

00:21:35,560 --> 00:21:40,960
something about so for in with an

00:21:38,470 --> 00:21:45,010
Ethernet one this probably is a one for

00:21:40,960 --> 00:21:48,460
the first interface it sends back an

00:21:45,010 --> 00:21:51,120
integer so it actually doesn't send back

00:21:48,460 --> 00:21:55,360
it's up or down it sends back a one and

00:21:51,120 --> 00:21:57,930
this one is then represented for for up

00:21:55,360 --> 00:22:01,980
and so we have all these different

00:21:57,930 --> 00:22:04,720
things we can get back from the system

00:22:01,980 --> 00:22:08,160
in this case it's it's quite simple we

00:22:04,720 --> 00:22:10,050
have up and down but if you want to

00:22:08,160 --> 00:22:13,170
check for example the defense status

00:22:10,050 --> 00:22:15,330
from a switch it also sends back a 1 or

00:22:13,170 --> 00:22:17,400
2 and when it just gets back this

00:22:15,330 --> 00:22:20,460
integral you don't know what it is but

00:22:17,400 --> 00:22:23,100
in the mid file it explains what it is

00:22:20,460 --> 00:22:27,390
and with the MIT browser that I recently

00:22:23,100 --> 00:22:30,720
met rouser you can then actually see

00:22:27,390 --> 00:22:31,950
what what status you can get back and

00:22:30,720 --> 00:22:38,040
what then

00:22:31,950 --> 00:22:44,520
how your script would look like ok a bit

00:22:38,040 --> 00:22:48,260
more about trapping an SNMP trap is sent

00:22:44,520 --> 00:22:51,750
by a device when a status change occurs

00:22:48,260 --> 00:22:54,780
this can be for example a printer

00:22:51,750 --> 00:22:57,270
running out of paper it's very simple

00:22:54,780 --> 00:23:00,570
example maybe you don't want to monitor

00:22:57,270 --> 00:23:02,520
that but also the uplink status from

00:23:00,570 --> 00:23:06,990
from your switches from your routers

00:23:02,520 --> 00:23:11,010
which can be quite important it's a

00:23:06,990 --> 00:23:15,180
single UDP package sent on port 162 it's

00:23:11,010 --> 00:23:18,510
sent to the to the system to the network

00:23:15,180 --> 00:23:21,570
monitoring system the problem with that

00:23:18,510 --> 00:23:26,630
is it's just an OID so it's again this

00:23:21,570 --> 00:23:31,080
bunch of numbers are a really cryptic

00:23:26,630 --> 00:23:34,020
description what what is sent out and

00:23:31,080 --> 00:23:41,220
it's configured in the SNMP trap demon

00:23:34,020 --> 00:23:43,440
comes in a normal Linux system so on

00:23:41,220 --> 00:23:46,560
your network management system you'll

00:23:43,440 --> 00:23:49,950
have SNMP trap daemon configured you say

00:23:46,560 --> 00:23:52,890
it's authenticated by a community it

00:23:49,950 --> 00:23:57,540
locks everything and it executes a trap

00:23:52,890 --> 00:24:04,680
handle for some community strings it's

00:23:57,540 --> 00:24:07,080
also checking in this case the community

00:24:04,680 --> 00:24:10,560
string is public so the system sends out

00:24:07,080 --> 00:24:13,770
a SNMP trap and the trap handle by

00:24:10,560 --> 00:24:17,250
default is sending it to SNMP TT which

00:24:13,770 --> 00:24:19,500
is a trap translator but I'll get into

00:24:17,250 --> 00:24:22,220
depth about that because we need

00:24:19,500 --> 00:24:25,140
something to understand it

00:24:22,220 --> 00:24:28,500
I've chosen for the Babel Fish so it's

00:24:25,140 --> 00:24:32,540
like everything that talks to us we can

00:24:28,500 --> 00:24:32,540
understand it and we know what it means

00:24:32,570 --> 00:24:39,680
the SNMP trap translator

00:24:36,900 --> 00:24:44,370
it makes the traps more human readable

00:24:39,680 --> 00:24:47,330
so for example if an uplink goes down we

00:24:44,370 --> 00:24:51,030
can get this this big Oh ID string and

00:24:47,330 --> 00:24:53,760
as the PTT knows how to deal with it and

00:24:51,030 --> 00:24:56,250
then knows what oh I D means and then

00:24:53,760 --> 00:25:05,820
translates it for us to an human

00:24:56,250 --> 00:25:07,380
readable human readable thing or all the

00:25:05,820 --> 00:25:10,530
actions are defined in the config file

00:25:07,380 --> 00:25:13,380
and we can use this map files which I

00:25:10,530 --> 00:25:16,500
already give from the examples for to

00:25:13,380 --> 00:25:20,190
create this config files I'll give an

00:25:16,500 --> 00:25:23,610
example how that goes and we can use the

00:25:20,190 --> 00:25:30,990
SNMP TT convert map which then converts

00:25:23,610 --> 00:25:33,390
the map to a as an a PTT config file we

00:25:30,990 --> 00:25:36,810
can use as the PTT conferred map we put

00:25:33,390 --> 00:25:40,830
in a map file in this case I've chosen

00:25:36,810 --> 00:25:44,070
the Aruba trap net file which describes

00:25:40,830 --> 00:25:48,320
all the traps that can be sent by in

00:25:44,070 --> 00:25:53,310
this case it's the Aruba controller for

00:25:48,320 --> 00:25:59,460
wireless and we have an output file we

00:25:53,310 --> 00:26:04,040
call SNMP tt-that Aruba and we also give

00:25:59,460 --> 00:26:08,900
a execute with that I'll send all my

00:26:04,040 --> 00:26:14,280
information to a shelf an SNMP trap SH

00:26:08,900 --> 00:26:18,390
and then a lot of things come behind the

00:26:14,280 --> 00:26:20,640
dollar r r is for the host name so that

00:26:18,390 --> 00:26:24,810
the host name that sends out the trap is

00:26:20,640 --> 00:26:27,570
put in here by the dollar R this is my

00:26:24,810 --> 00:26:30,030
surface description this is the default

00:26:27,570 --> 00:26:33,850
status I'm giving to all of my asthma

00:26:30,030 --> 00:26:37,660
p-traps to start with because

00:26:33,850 --> 00:26:41,260
I prefer to make sure that I know what's

00:26:37,660 --> 00:26:44,580
for me critical and a warning state for

00:26:41,260 --> 00:26:49,360
example this gives the entire

00:26:44,580 --> 00:26:53,260
description so all the variables this is

00:26:49,360 --> 00:26:56,890
a timestamp and this is the description

00:26:53,260 --> 00:27:00,330
from the that is in the mid phone so the

00:26:56,890 --> 00:27:00,330
description I showed before

00:27:03,540 --> 00:27:10,720
so yeah this will convert all the traps

00:27:06,520 --> 00:27:14,290
defined in this map file and did this

00:27:10,720 --> 00:27:17,530
ethnicity Aruba file is put in the SNMP

00:27:14,290 --> 00:27:20,679
TT dot ini' file and then it's checked

00:27:17,530 --> 00:27:23,350
for the oids that it's receiving so for

00:27:20,679 --> 00:27:26,380
every OID it's receiving it will check

00:27:23,350 --> 00:27:29,740
all the config files defined in the SNMP

00:27:26,380 --> 00:27:33,400
TT conflict and if it's there then it

00:27:29,740 --> 00:27:41,110
will handle the well just start this

00:27:33,400 --> 00:27:42,940
script script is quite simple first we

00:27:41,110 --> 00:27:47,500
have to dollar one hostname because the

00:27:42,940 --> 00:27:50,770
dollar are was my host name and here it

00:27:47,500 --> 00:27:53,820
checks the the of the host name I've

00:27:50,770 --> 00:27:57,520
given a default description for the

00:27:53,820 --> 00:28:02,860
surface check in my case it was SNMP

00:27:57,520 --> 00:28:05,799
trap dollar three is the state string so

00:28:02,860 --> 00:28:10,419
it's okay warning critical or unknown

00:28:05,799 --> 00:28:12,010
and all this information I sent back to

00:28:10,419 --> 00:28:16,990
using NSCA

00:28:12,010 --> 00:28:19,809
to my Nagios environment but I'm sure it

00:28:16,990 --> 00:28:26,500
can be used in in sync as well or civics

00:28:19,809 --> 00:28:29,679
or every other tool then we can choose

00:28:26,500 --> 00:28:32,710
whether we want to get an alert or not

00:28:29,679 --> 00:28:37,419
so in my example all the SNMP traps are

00:28:32,710 --> 00:28:38,890
at first are okay and I'll check the

00:28:37,419 --> 00:28:41,679
lock files and see what's for me

00:28:38,890 --> 00:28:45,280
critical and where I want to be woken up

00:28:41,679 --> 00:28:46,420
in the at night for so for example in

00:28:45,280 --> 00:28:49,840
uplink ok

00:28:46,420 --> 00:28:52,270
I'm okay to to wake up for when the

00:28:49,840 --> 00:28:56,590
uplink goes down but I don't want to be

00:28:52,270 --> 00:28:59,440
awake for something very simple like my

00:28:56,590 --> 00:29:02,050
management's logging in with SSH to

00:28:59,440 --> 00:29:06,940
download a config file or stuff like

00:29:02,050 --> 00:29:10,000
that so how I set it up

00:29:06,940 --> 00:29:11,800
Ethernet interface goes down the SNMP

00:29:10,000 --> 00:29:16,630
trap is sent to the network monitoring

00:29:11,800 --> 00:29:20,470
system it gets a completely unreadable

00:29:16,630 --> 00:29:25,980
oh ID so I've got no idea what this

00:29:20,470 --> 00:29:29,230
means I send it to my shell script and

00:29:25,980 --> 00:29:32,770
what it does it says well this is for a

00:29:29,230 --> 00:29:34,690
network interface that goes down sending

00:29:32,770 --> 00:29:37,570
out the surface description network

00:29:34,690 --> 00:29:44,770
interface is critical and I sent the

00:29:37,570 --> 00:29:49,420
link is down mi s the p-trap shell i'll

00:29:44,770 --> 00:29:53,200
sent every everything fire NSEA to my

00:29:49,420 --> 00:29:57,010
Nagios environment and then in managua

00:29:53,200 --> 00:30:00,760
the fireman I get here the information

00:29:57,010 --> 00:30:03,510
about the traps I received in this case

00:30:00,760 --> 00:30:06,640
I've got two different passive checks

00:30:03,510 --> 00:30:09,520
one is the normal SNMP trap which

00:30:06,640 --> 00:30:14,170
receives all the traps from for this

00:30:09,520 --> 00:30:16,960
switch all the regular checks all other

00:30:14,170 --> 00:30:19,270
regular traps and I've differentiated

00:30:16,960 --> 00:30:23,620
the interface traps for the up/down

00:30:19,270 --> 00:30:27,400
status to a different check so I can see

00:30:23,620 --> 00:30:31,090
the differentiation the the thing was if

00:30:27,400 --> 00:30:34,870
a network interface goes down this check

00:30:31,090 --> 00:30:37,120
will be critical and if that's critical

00:30:34,870 --> 00:30:40,510
and you login with SSH which is also

00:30:37,120 --> 00:30:43,300
generates an SNMP trap it can be become

00:30:40,510 --> 00:30:45,610
okay again because you think as logging

00:30:43,300 --> 00:30:48,490
in with associates is ok or warning or

00:30:45,610 --> 00:30:51,490
at least not critical so I had

00:30:48,490 --> 00:30:54,700
colleagues logging in with SSH into the

00:30:51,490 --> 00:30:57,040
router checking the interface but then

00:30:54,700 --> 00:31:00,050
checking Nagios again and say well ok

00:30:57,040 --> 00:31:02,270
it's the alert is cleared so

00:31:00,050 --> 00:31:04,250
it's not critical anymore but the

00:31:02,270 --> 00:31:06,920
interface was still down because there's

00:31:04,250 --> 00:31:15,410
a new SNMP trap sent and it's overriding

00:31:06,920 --> 00:31:26,660
the the last status okay that's it for

00:31:15,410 --> 00:31:29,240
now are there any questions have you

00:31:26,660 --> 00:31:31,670
considered using an alternative tories

00:31:29,240 --> 00:31:34,610
in a p-trap demon like log stash

00:31:31,670 --> 00:31:41,680
something something else can collect

00:31:34,610 --> 00:31:46,850
SNMP traps I had a look at the Nagios

00:31:41,680 --> 00:31:50,620
thing and as it's an STI I think it's

00:31:46,850 --> 00:31:54,890
called but no I haven't used any lock

00:31:50,620 --> 00:31:57,880
thing what you mentioned no the SNMP

00:31:54,890 --> 00:32:00,710
trap translator works great for us

00:31:57,880 --> 00:32:05,480
because we have to demo files from our

00:32:00,710 --> 00:32:08,480
vendors and when we install a storage

00:32:05,480 --> 00:32:10,520
device it's 9 out of 10 our net up so I

00:32:08,480 --> 00:32:14,680
know exactly what I can expect from the

00:32:10,520 --> 00:32:17,780
systems and all our switches and

00:32:14,680 --> 00:32:20,600
wireless environments all HPER rubra so

00:32:17,780 --> 00:32:24,800
that makes it a bit more easy to reuse

00:32:20,600 --> 00:32:28,810
these mid files and reuse reuse the

00:32:24,800 --> 00:32:31,220
config files ok thank you

00:32:28,810 --> 00:32:34,100
I'm also using ansible then to

00:32:31,220 --> 00:32:37,790
distribute these config files and make

00:32:34,100 --> 00:32:40,750
sure it's maintained and it's for all

00:32:37,790 --> 00:32:40,750
the customers the same

00:32:46,160 --> 00:32:52,380
so if I buy any equipment like a switch

00:32:49,170 --> 00:32:55,230
how do I get in the mid file from the

00:32:52,380 --> 00:32:57,450
website of the event now most vendors

00:32:55,230 --> 00:33:01,679
have them on their websites yes and

00:32:57,450 --> 00:33:04,860
there are also a couple of nice webpages

00:33:01,679 --> 00:33:12,450
to to have a look at which show you the

00:33:04,860 --> 00:33:22,049
I can see if I can get it up sorry for

00:33:12,450 --> 00:33:23,010
my background I'll try to hide it as

00:33:22,049 --> 00:33:29,340
quickly as possible

00:33:23,010 --> 00:33:34,679
I have no internet

00:33:29,340 --> 00:33:42,030
of course okay yeah well the website is

00:33:34,679 --> 00:33:43,980
called oh I D whew calm and it gives an

00:33:42,030 --> 00:33:46,470
overview of all the metaphors available

00:33:43,980 --> 00:33:49,530
well they're not all along them on there

00:33:46,470 --> 00:33:52,950
but at least you can get an overview

00:33:49,530 --> 00:33:55,320
from the enterprise oh IDs and you can

00:33:52,950 --> 00:33:59,100
search by name and search by OID number

00:33:55,320 --> 00:34:01,350
so if you get information back with an S

00:33:59,100 --> 00:34:03,870
in the B string you can check the OID

00:34:01,350 --> 00:34:05,790
number for this enterprise and then you

00:34:03,870 --> 00:34:08,639
can see which vendor it comes from and

00:34:05,790 --> 00:34:14,159
see if there's a Nepal available then

00:34:08,639 --> 00:34:19,700
and and the community strings can you

00:34:14,159 --> 00:34:19,700
change them yes you are changing them

00:34:21,020 --> 00:34:25,859
yeah we've got all for all our customers

00:34:24,359 --> 00:34:29,270
we have a different community strings

00:34:25,859 --> 00:34:32,639
and I think this is something we should

00:34:29,270 --> 00:34:34,590
remember when coming back so looking for

00:34:32,639 --> 00:34:37,879
the community strings of our equipment

00:34:34,590 --> 00:34:42,629
and changing it perhaps because I I

00:34:37,879 --> 00:34:45,780
wouldn't like somebody grabbed my SNMP

00:34:42,629 --> 00:34:48,419
interface it's quite the interest then

00:34:45,780 --> 00:34:50,460
yeah if it's default switched on and

00:34:48,419 --> 00:34:52,740
it's still public then you can get a lot

00:34:50,460 --> 00:34:54,960
of information about the system so at

00:34:52,740 --> 00:34:56,049
least you know which bosses can listen

00:34:54,960 --> 00:34:58,720
you

00:34:56,049 --> 00:35:00,190
how its configured even if you only have

00:34:58,720 --> 00:35:01,660
to read only community string you can

00:35:00,190 --> 00:35:14,319
get a lot of information about the

00:35:01,660 --> 00:35:16,650
system okay so do you know any debug

00:35:14,319 --> 00:35:20,019
tools or anything else for broken lips

00:35:16,650 --> 00:35:23,369
because if they are not able to be

00:35:20,019 --> 00:35:28,000
translated especially like Avaya

00:35:23,369 --> 00:35:33,549
oftentimes the automate files broken

00:35:28,000 --> 00:35:38,309
then or right there with a SNMP converts

00:35:33,549 --> 00:35:38,309
they are not able to be translated okay

00:35:38,609 --> 00:35:45,609
normally you get some debug information

00:35:40,930 --> 00:35:48,430
from the comfortnet and then it's really

00:35:45,609 --> 00:35:51,700
hacking into this file and changing it

00:35:48,430 --> 00:35:53,319
by hand but it's it's not very easy to

00:35:51,700 --> 00:35:55,750
be done but I've I've done it before

00:35:53,319 --> 00:35:59,740
because we had one fender which he also

00:35:55,750 --> 00:36:02,859
had a broken map file and I knew which

00:35:59,740 --> 00:36:07,029
oh I DS I wanted to check so I've

00:36:02,859 --> 00:36:10,720
written the the mid valve just for them

00:36:07,029 --> 00:36:12,910
or for us actually and to use it and and

00:36:10,720 --> 00:36:15,700
be able to use the map file instead of

00:36:12,910 --> 00:36:18,339
just the OID but yet and you're really

00:36:15,700 --> 00:36:20,789
into hacking mid files which it's not

00:36:18,339 --> 00:36:20,789
fun okay

00:36:24,269 --> 00:36:29,710
all the times I like touched as an MP

00:36:27,309 --> 00:36:32,380
else I many times I had problems like

00:36:29,710 --> 00:36:35,230
where to put the map file because I

00:36:32,380 --> 00:36:37,150
always like followed how-to or something

00:36:35,230 --> 00:36:39,250
but still it didn't work so maybe you

00:36:37,150 --> 00:36:42,069
can share your experiences where you

00:36:39,250 --> 00:36:45,869
need to put a mid file to get those like

00:36:42,069 --> 00:36:49,809
easy names when you do like the snmpwalk

00:36:45,869 --> 00:36:53,650
you put them in a Linux system normally

00:36:49,809 --> 00:36:57,099
sent to us puts them in you share SNMP

00:36:53,650 --> 00:36:59,200
mips and actually you put the mid files

00:36:57,099 --> 00:37:01,089
on your network monitoring system so not

00:36:59,200 --> 00:37:03,329
on the remote device but on a device

00:37:01,089 --> 00:37:06,160
where you want to do the translation and

00:37:03,329 --> 00:37:09,080
if you think they're not picking up

00:37:06,160 --> 00:37:13,370
these map files you can put

00:37:09,080 --> 00:37:15,110
- M small M and then capital a ll that

00:37:13,370 --> 00:37:17,690
it reads all the MIT files that are

00:37:15,110 --> 00:37:19,850
available on that system and you can

00:37:17,690 --> 00:37:22,910
also put your med files in your home

00:37:19,850 --> 00:37:25,940
directory and in a certain path I'm not

00:37:22,910 --> 00:37:30,250
sure where that goes but that's also a

00:37:25,940 --> 00:37:35,090
possibility you told us about the

00:37:30,250 --> 00:37:37,370
different versions of SNMP v2c and three

00:37:35,090 --> 00:37:39,890
and have some customers who tell me they

00:37:37,370 --> 00:37:42,170
have the policy from the security guys

00:37:39,890 --> 00:37:48,890
they tell them they only allowed to use

00:37:42,170 --> 00:37:52,010
v3 so is that even doable by now or do

00:37:48,890 --> 00:37:54,520
you think it's doable but yeah like I

00:37:52,010 --> 00:37:58,270
said it's giving you extra overhead and

00:37:54,520 --> 00:38:00,230
it's pretty hard to configure sometimes

00:37:58,270 --> 00:38:02,710
and you still have user name password

00:38:00,230 --> 00:38:06,650
which is and of course encrypted but

00:38:02,710 --> 00:38:09,050
yeah I'm not a big fan and I don't see

00:38:06,650 --> 00:38:12,680
it used that much then I would prefer to

00:38:09,050 --> 00:38:16,880
put my information in a management

00:38:12,680 --> 00:38:19,790
network instead of just setting up a

00:38:16,880 --> 00:38:21,920
secure layer on my public network but

00:38:19,790 --> 00:38:26,990
yeah that's a choice you have to make

00:38:21,920 --> 00:38:29,840
and one other thing is if you set up

00:38:26,990 --> 00:38:32,840
SNMP you you can tell it only allows you

00:38:29,840 --> 00:38:34,910
to accept queries from the network

00:38:32,840 --> 00:38:37,160
management system which then also

00:38:34,910 --> 00:38:38,870
narrows it down then you'll have to do I

00:38:37,160 --> 00:38:43,670
be spoofing and stuff like that before

00:38:38,870 --> 00:38:45,140
you can misuse it so yeah I don't think

00:38:43,670 --> 00:38:47,330
it's that big a deal

00:38:45,140 --> 00:38:48,890
in a normal network environment because

00:38:47,330 --> 00:38:53,020
then somebody's already hacking your

00:38:48,890 --> 00:38:53,020
network okay thank you

00:39:00,400 --> 00:39:07,339
just about a note about SNMP v3 we are

00:39:05,150 --> 00:39:10,160
using that wherever it's possible but we

00:39:07,339 --> 00:39:13,220
also have headache with that mm-hmm

00:39:10,160 --> 00:39:17,150
the main headache we have is that in

00:39:13,220 --> 00:39:25,310
SNMP version 3 you have so-called engine

00:39:17,150 --> 00:39:27,650
IDs and the net as an MP driver which is

00:39:25,310 --> 00:39:30,740
our libraries which are in the Linux

00:39:27,650 --> 00:39:32,480
from the year 2012 or something like

00:39:30,740 --> 00:39:35,329
that

00:39:32,480 --> 00:39:39,470
there are missing really things for

00:39:35,329 --> 00:39:42,230
example if you reboot a system which is

00:39:39,470 --> 00:39:46,700
connected from a server with SNMP

00:39:42,230 --> 00:39:49,460
version 3 then the cache of the engine

00:39:46,700 --> 00:39:52,970
ID and the password and the hashes are

00:39:49,460 --> 00:39:59,119
still there and you are not able to

00:39:52,970 --> 00:40:02,810
connect to connect the device again

00:39:59,119 --> 00:40:08,240
until you empty the cache which is a

00:40:02,810 --> 00:40:09,609
command which is not available or you

00:40:08,240 --> 00:40:12,980
reboot the system

00:40:09,609 --> 00:40:17,060
the server ok this is for example one of

00:40:12,980 --> 00:40:22,300
the things we face quite often with as a

00:40:17,060 --> 00:40:33,170
problem with version 3 yeah ok thank you

00:40:22,300 --> 00:40:35,480
I think that was it thank you very much

00:40:33,170 --> 00:40:37,410
for your talk Rob thank you thank you

00:40:35,480 --> 00:40:39,470
all for joining

00:40:37,410 --> 00:40:39,470

YouTube URL: https://www.youtube.com/watch?v=JM5bXHpaUrE


