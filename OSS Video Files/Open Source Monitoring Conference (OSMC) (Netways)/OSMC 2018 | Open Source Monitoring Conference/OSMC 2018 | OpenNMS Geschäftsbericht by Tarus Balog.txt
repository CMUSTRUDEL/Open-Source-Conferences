Title: OSMC 2018 | OpenNMS Geschäftsbericht by Tarus Balog
Publication date: 2018-11-16
Playlist: OSMC 2018 | Open Source Monitoring Conference
Description: 
	Ha ha, fooled you. This talk will be in English, but I did learn a new German noun. Back in 2015 the OpenNMS Project split the code into two main branches: Horizon and Meridian. To compare it to Red Hat, think of Horizon as Fedora and Meridian as RHEL. Doing this allowed the team to greatly increase the release cycle of OpenNMS, as Horizon major releases occur once every three to four months. This presentation will cover the changes to OpenNMS introduced since the last OSMC, which includes releases Horizon 21, 22 and 23. The major new features include support for Minions (H21). No, not the little yellow guys shaped like medicine capsules, but a technology to both distribute OpenNMS functionality and make it redundant, perfect for large scale or IoT deployments. Another feature is “telemetryd” (H22) which adds the ability to collect and store “flow” data from protocols such as Netflow, JFlow and Sflow. And finally there is Project Sextant (H23) that adds high level alarm correlation to OpenNMS. Also new this year is support for the MQTT protocol that allows OpenNMS to talk to IoT gateways such Eclipse Kura. While it is hoped this talk with be informative, as an American and I assure you it will be loud (unless the organizers stick me as the first speaker on the second day, then it might be quieter).

NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

www.musicfox.com
Captions: 
	00:00:01,940 --> 00:00:15,630
[Music]

00:00:11,420 --> 00:00:21,869
Goodin table under velkommen to open an

00:00:15,630 --> 00:00:25,260
MS kasparek no that's it I said I know

00:00:21,869 --> 00:00:29,130
that phrase and I practiced ein grossest

00:00:25,260 --> 00:00:31,410
beer bitte Schwarz beer sauce we are

00:00:29,130 --> 00:00:33,300
like the black bear hi my name is farce

00:00:31,410 --> 00:00:36,510
Balog I'm one of the people who works on

00:00:33,300 --> 00:00:39,300
open an MS the very first OS MC I came

00:00:36,510 --> 00:00:43,079
to was in 2009 which was the first year

00:00:39,300 --> 00:00:44,820
this conference was called the OS MC and

00:00:43,079 --> 00:00:46,649
I love this conference it's great I

00:00:44,820 --> 00:00:50,700
appreciate you coming to hear me because

00:00:46,649 --> 00:00:52,680
I'm not a singer but today I wanted to

00:00:50,700 --> 00:00:55,110
do a discussion of the open and MS

00:00:52,680 --> 00:01:00,809
annual report so what have we done since

00:00:55,110 --> 00:01:02,789
the last OS MC back in 2017 before I get

00:01:00,809 --> 00:01:04,080
started to talk about open an MS I want

00:01:02,789 --> 00:01:05,729
to address something that's been

00:01:04,080 --> 00:01:12,270
bothering me

00:01:05,729 --> 00:01:14,280
monitoring sucks so around 2012 this

00:01:12,270 --> 00:01:16,500
hashtag started appearing monitoring

00:01:14,280 --> 00:01:18,240
sucks and I've been working on open an

00:01:16,500 --> 00:01:20,880
MS for about a decade at that point in

00:01:18,240 --> 00:01:22,650
time and I was like why this monitoring

00:01:20,880 --> 00:01:25,320
suck but everyone was saying monitoring

00:01:22,650 --> 00:01:29,009
sex monitoring sucks this slide here I

00:01:25,320 --> 00:01:31,950
think was from Chris boy tart at this

00:01:29,009 --> 00:01:33,479
conference so so I even put this up here

00:01:31,950 --> 00:01:37,020
and so I've been doing a lot of thinking

00:01:33,479 --> 00:01:39,360
about it and I've been doing I do many

00:01:37,020 --> 00:01:42,570
presentations about open an MS and so I

00:01:39,360 --> 00:01:45,270
was at a conference in Scotland and this

00:01:42,570 --> 00:01:48,390
guy named Neil from BT at the end of my

00:01:45,270 --> 00:01:51,600
my talk he said the purpose of network

00:01:48,390 --> 00:01:53,549
management is to get rid of people and I

00:01:51,600 --> 00:01:54,840
was kind of insulted about that I mean

00:01:53,549 --> 00:01:58,710
it's like he's saying well you can be

00:01:54,840 --> 00:02:01,740
replaced by a script and I'm like so I

00:01:58,710 --> 00:02:04,350
think part of monitoring sucks comes

00:02:01,740 --> 00:02:05,820
from people thinking that monitoring's

00:02:04,350 --> 00:02:07,979
unnecessary that you don't need

00:02:05,820 --> 00:02:10,709
monitoring and then monitoring ZnO fine

00:02:07,979 --> 00:02:12,840
and I have seen organizations where if

00:02:10,709 --> 00:02:14,519
they bring on more servers

00:02:12,840 --> 00:02:16,170
they have to bring on more people to

00:02:14,519 --> 00:02:19,080
manage them and that shouldn't be the

00:02:16,170 --> 00:02:21,180
case your solution should scale and I've

00:02:19,080 --> 00:02:23,660
been in situations as a consultant where

00:02:21,180 --> 00:02:26,550
people were doing very boring things

00:02:23,660 --> 00:02:28,379
every day because the same things would

00:02:26,550 --> 00:02:31,489
happen and I was like your network

00:02:28,379 --> 00:02:33,900
management platform should allow you to

00:02:31,489 --> 00:02:36,209
get rid of the boring things so you can

00:02:33,900 --> 00:02:38,489
focus on the new things I mean every

00:02:36,209 --> 00:02:41,760
single conference I go to I you learn

00:02:38,489 --> 00:02:44,280
about NFV and software-defined networks

00:02:41,760 --> 00:02:46,200
the technology just keeps growing and

00:02:44,280 --> 00:02:49,470
there's no way we could automate all of

00:02:46,200 --> 00:02:52,680
that so we want to create a monitoring

00:02:49,470 --> 00:02:56,940
platform in such a way that we can

00:02:52,680 --> 00:02:59,160
produce monitoring love so this is our

00:02:56,940 --> 00:03:00,590
mascot wolf he is actually with me today

00:02:59,160 --> 00:03:05,819
and let's see if I can find him

00:03:00,590 --> 00:03:09,329
my bad this is wolf so I will put him

00:03:05,819 --> 00:03:11,370
here he was given we had a conference

00:03:09,329 --> 00:03:13,049
for open NMS and we had people from

00:03:11,370 --> 00:03:15,510
Germany and we had a man from New

00:03:13,049 --> 00:03:17,790
Zealand and since the Germans had come

00:03:15,510 --> 00:03:19,980
the farthest distance west and he had

00:03:17,790 --> 00:03:23,280
come the farthest distance East he gave

00:03:19,980 --> 00:03:25,079
them this Kiwi and he's now off and he's

00:03:23,280 --> 00:03:27,980
our mascot which is great when I do this

00:03:25,079 --> 00:03:31,920
talk in New Zealand they love it so

00:03:27,980 --> 00:03:35,130
anyway so monitoring love now how many

00:03:31,920 --> 00:03:37,920
people have heard of open MS in for you

00:03:35,130 --> 00:03:40,769
how many people actually use it oh good

00:03:37,920 --> 00:03:44,130
good we have a few hands for those of

00:03:40,769 --> 00:03:47,220
you who don't know I the open MS project

00:03:44,130 --> 00:03:51,510
got started in 1999 and I got involved

00:03:47,220 --> 00:03:53,400
in 2001 and in 2002 the people who

00:03:51,510 --> 00:03:54,739
started open an MS decided they weren't

00:03:53,400 --> 00:03:56,940
going to work on it anymore

00:03:54,739 --> 00:03:58,919
they were investment funded the

00:03:56,940 --> 00:04:00,209
investors did not like open source and

00:03:58,919 --> 00:04:03,810
so they said we're not going to work on

00:04:00,209 --> 00:04:06,000
this anymore so I took it over and I was

00:04:03,810 --> 00:04:08,310
told when you start a business and you

00:04:06,000 --> 00:04:10,739
get into an elevator and someone sees

00:04:08,310 --> 00:04:12,900
opening a mess on your shirt this my

00:04:10,739 --> 00:04:14,819
luggage showed up an hour ago

00:04:12,900 --> 00:04:16,769
so I actually having a single shirt on

00:04:14,819 --> 00:04:19,109
underneath here but don't tell anybody

00:04:16,769 --> 00:04:20,880
but someone sees open and a mess on your

00:04:19,109 --> 00:04:23,789
shirt and they go what's open in a mess

00:04:20,880 --> 00:04:26,510
well you have about thirty seconds to

00:04:23,789 --> 00:04:28,400
tell them so I came up with this Oh

00:04:26,510 --> 00:04:31,010
is the world's first carrier-grade

00:04:28,400 --> 00:04:36,140
network monitoring platform built on the

00:04:31,010 --> 00:04:38,690
open-source model I'm a nerd I'm a geek

00:04:36,140 --> 00:04:40,970
I hate it when I get oh we are the

00:04:38,690 --> 00:04:42,560
paradigm shifting synergy building

00:04:40,970 --> 00:04:44,810
market leading solution for all your

00:04:42,560 --> 00:04:47,630
kubernetes doctor-doctor virtualization

00:04:44,810 --> 00:04:48,830
needs cloud I just hate that so I wanted

00:04:47,630 --> 00:04:51,050
to break down everything I've

00:04:48,830 --> 00:04:53,360
highlighted here when I say world's

00:04:51,050 --> 00:04:55,400
first we've been around since 1999 the

00:04:53,360 --> 00:04:58,730
only other project around at that time

00:04:55,400 --> 00:05:00,680
was Nagios Nagios put its code on

00:04:58,730 --> 00:05:03,440
SourceForge if you remember source words

00:05:00,680 --> 00:05:07,100
think of it as github for old people

00:05:03,440 --> 00:05:09,410
so on SourceForge in january of 2000 he

00:05:07,100 --> 00:05:11,870
posted a ethan gauss dead posted the

00:05:09,410 --> 00:05:15,680
first Nagios code and we posted our code

00:05:11,870 --> 00:05:18,260
in March of 2000 so world's first when I

00:05:15,680 --> 00:05:20,360
say carrier-grade we started out with

00:05:18,260 --> 00:05:24,050
this idea of monitoring hundreds of

00:05:20,360 --> 00:05:26,000
thousands if not unlimited devices now a

00:05:24,050 --> 00:05:27,530
lot of projects start out monitoring a

00:05:26,000 --> 00:05:30,320
few devices and then they have to grow

00:05:27,530 --> 00:05:33,280
we started out saying we want to monitor

00:05:30,320 --> 00:05:37,070
unlimited devices now the application

00:05:33,280 --> 00:05:38,600
platform piece is very important open MS

00:05:37,070 --> 00:05:39,950
is an application you can download it

00:05:38,600 --> 00:05:41,180
you can install it you can point it at

00:05:39,950 --> 00:05:43,730
your network and you will get some

00:05:41,180 --> 00:05:48,110
information but we're open and ms starts

00:05:43,730 --> 00:05:49,400
to shine is when you customize it and

00:05:48,110 --> 00:05:52,160
the way I like to describe this and my

00:05:49,400 --> 00:05:54,380
wife hates me for this but my wife is an

00:05:52,160 --> 00:05:57,050
accountant and she manages a two billion

00:05:54,380 --> 00:05:59,720
dollar budget and I joke she manages it

00:05:57,050 --> 00:06:01,550
with Excel now the truth of the matter

00:05:59,720 --> 00:06:03,890
is they have a lot of proprietary

00:06:01,550 --> 00:06:06,860
expensive software that creates the

00:06:03,890 --> 00:06:08,420
spreadsheets that she uses think of

00:06:06,860 --> 00:06:10,550
Excel as the accountants of grow fauna

00:06:08,420 --> 00:06:13,850
you know it's like all this data feeds

00:06:10,550 --> 00:06:15,980
into Excel and she uses that if I bought

00:06:13,850 --> 00:06:18,410
a copy of Excel and went to Microsoft

00:06:15,980 --> 00:06:20,270
and said hey where's my budget they'd

00:06:18,410 --> 00:06:22,160
laugh at me they go what do you mean you

00:06:20,270 --> 00:06:24,560
have to make it so what I try to tell

00:06:22,160 --> 00:06:26,510
people is go into open MS with the idea

00:06:24,560 --> 00:06:29,000
that you're going to customize it and

00:06:26,510 --> 00:06:31,070
then finally open source every piece of

00:06:29,000 --> 00:06:32,630
code that is called open NMS is

00:06:31,070 --> 00:06:34,910
available under an open-source license

00:06:32,630 --> 00:06:36,470
some of them are restrictive like the a

00:06:34,910 --> 00:06:38,150
GPL for the product but we have

00:06:36,470 --> 00:06:39,950
libraries and stuff that we license

00:06:38,150 --> 00:06:41,630
under Apache

00:06:39,950 --> 00:06:43,130
and other permissive licenses but it's

00:06:41,630 --> 00:06:45,140
open source there's not a piece that you

00:06:43,130 --> 00:06:48,650
have to you know pay for to get the

00:06:45,140 --> 00:06:52,310
extra features enough of that okay

00:06:48,650 --> 00:06:54,440
our goal millions of devices billions of

00:06:52,310 --> 00:06:56,420
metrics and this is a slide from one of

00:06:54,440 --> 00:06:59,540
our customers this is a six month period

00:06:56,420 --> 00:07:03,770
where they averaged twenty thousand data

00:06:59,540 --> 00:07:05,210
points stored every second so we are

00:07:03,770 --> 00:07:06,950
collecting twenty thousand data points

00:07:05,210 --> 00:07:12,010
and sticking them into a Cassandra

00:07:06,950 --> 00:07:14,840
cluster that's 1.75 billion metrics day

00:07:12,010 --> 00:07:17,570
so when you multiply that times 180

00:07:14,840 --> 00:07:21,710
roughly 180 days you're talking you know

00:07:17,570 --> 00:07:23,750
nearly 300 billion dimetric s-- so

00:07:21,710 --> 00:07:27,410
that's what we're going for we want to

00:07:23,750 --> 00:07:30,110
make this even bigger now I'm here to

00:07:27,410 --> 00:07:32,630
talk about our horizon so I love the

00:07:30,110 --> 00:07:35,150
fact that net weighs is advertising for

00:07:32,630 --> 00:07:37,130
us right here so why do your horizon

00:07:35,150 --> 00:07:39,890
it's even purple just like our purple

00:07:37,130 --> 00:07:40,280
horizon color here so that's what that

00:07:39,890 --> 00:07:41,870
means

00:07:40,280 --> 00:07:45,560
don't let burned or anyone tell you

00:07:41,870 --> 00:07:47,150
different so horizon is our rapid

00:07:45,560 --> 00:07:49,340
release we do between three and four

00:07:47,150 --> 00:07:51,740
releases a year of open and mess horizon

00:07:49,340 --> 00:07:55,130
and we've done for eight I wouldn't

00:07:51,740 --> 00:07:57,290
looked we've done three since the

00:07:55,130 --> 00:07:59,660
conference last year so I wanted to talk

00:07:57,290 --> 00:08:01,700
about the features of a horizon 21 which

00:07:59,660 --> 00:08:03,860
mainly concerns a visualization tool

00:08:01,700 --> 00:08:06,410
called open and MS helm it's an

00:08:03,860 --> 00:08:08,060
application that runs longer fana I want

00:08:06,410 --> 00:08:11,000
to talk about open and a message drift

00:08:08,060 --> 00:08:13,070
which manages flow data so telemetry

00:08:11,000 --> 00:08:15,890
data such as net flow and s flow and

00:08:13,070 --> 00:08:18,710
then the real exciting stuff is horizon

00:08:15,890 --> 00:08:20,960
23 which is two projects that have

00:08:18,710 --> 00:08:23,600
horizon 23 was just released maybe what

00:08:20,960 --> 00:08:25,610
two weeks ago it contains a project

00:08:23,600 --> 00:08:28,040
called Sentinel for distributing open

00:08:25,610 --> 00:08:32,660
and amass functionality and sextant

00:08:28,040 --> 00:08:35,030
which is our machine learning piece so

00:08:32,660 --> 00:08:36,470
monitoring sucks was basically started

00:08:35,030 --> 00:08:38,990
by this guy named John Vincent who wrote

00:08:36,470 --> 00:08:40,970
a blog post again I'm old back in 2012

00:08:38,990 --> 00:08:43,640
we had this thing called a blog where

00:08:40,970 --> 00:08:46,070
you would put stuff and he had this long

00:08:43,640 --> 00:08:47,990
post about why he hated monitoring and

00:08:46,070 --> 00:08:50,750
one of his things was having to choose

00:08:47,990 --> 00:08:52,640
between a poor he used a much stronger

00:08:50,750 --> 00:08:53,690
word but he says having to choose

00:08:52,640 --> 00:08:55,940
between a poor and

00:08:53,690 --> 00:08:58,130
faced in great monitoring or poor

00:08:55,940 --> 00:09:00,230
monitoring and a good interface we are

00:08:58,130 --> 00:09:01,910
definitely in the former I think open

00:09:00,230 --> 00:09:04,370
amidst as great monitoring and a lot of

00:09:01,910 --> 00:09:06,500
our big customers integrate with us via

00:09:04,370 --> 00:09:09,160
api's so they don't really use our

00:09:06,500 --> 00:09:11,750
interface but we want to improve it and

00:09:09,160 --> 00:09:13,310
when Griffin I came out everyone knows

00:09:11,750 --> 00:09:15,470
Griffin and everyone music Ravana you

00:09:13,310 --> 00:09:17,330
know I'm talking about so open animus

00:09:15,470 --> 00:09:20,720
was actually the first third-party data

00:09:17,330 --> 00:09:22,820
source for Griffin ax and for horizon 21

00:09:20,720 --> 00:09:24,800
we created an actual application called

00:09:22,820 --> 00:09:28,160
open in a mess helm so you can go to

00:09:24,800 --> 00:09:29,870
your refiner installation say install

00:09:28,160 --> 00:09:32,390
open a mess helm it'll download and

00:09:29,870 --> 00:09:34,550
install open a mess helm and this will

00:09:32,390 --> 00:09:36,410
give you two data sources there are two

00:09:34,550 --> 00:09:38,720
types of data sources there's one for

00:09:36,410 --> 00:09:41,030
performance data so this is your graphs

00:09:38,720 --> 00:09:43,250
so you have your graph data and there's

00:09:41,030 --> 00:09:45,890
one for alarms which is the fault data

00:09:43,250 --> 00:09:47,720
source now this one is set up for one

00:09:45,890 --> 00:09:49,640
instance of open and a mess but I can

00:09:47,720 --> 00:09:51,830
have multiple so if I had three or four

00:09:49,640 --> 00:09:54,410
open and a mess instances I could

00:09:51,830 --> 00:09:57,260
aggregate them all under one Griffin

00:09:54,410 --> 00:09:58,820
instance and this is kind of what helm

00:09:57,260 --> 00:10:02,330
looks like I took the screenshot this

00:09:58,820 --> 00:10:04,580
morning I do use open M as to monitor my

00:10:02,330 --> 00:10:06,380
soda machine I bought a soda machine a

00:10:04,580 --> 00:10:09,530
few years ago and put a computer in it

00:10:06,380 --> 00:10:12,740
so that I can monitor it and so if you

00:10:09,530 --> 00:10:15,740
look right here Diet Pepsi we are

00:10:12,740 --> 00:10:17,210
actually almost out I take the number of

00:10:15,740 --> 00:10:19,400
diet Pepsi's we put in the machine

00:10:17,210 --> 00:10:21,170
minus the number that we sold and that

00:10:19,400 --> 00:10:22,880
value is three which happens to be the

00:10:21,170 --> 00:10:25,520
threshold that tells me I need to go and

00:10:22,880 --> 00:10:27,140
put more Diet Pepsi in the machine no

00:10:25,520 --> 00:10:29,090
one likes Diet Pepsi so we're gonna put

00:10:27,140 --> 00:10:31,730
dr. pepper in there next so I'm just

00:10:29,090 --> 00:10:34,790
waiting for that to run out but you can

00:10:31,730 --> 00:10:37,190
have one of the features that was that

00:10:34,790 --> 00:10:39,380
we've already talked about at O SMC it's

00:10:37,190 --> 00:10:41,720
called the open MS minion and it is a

00:10:39,380 --> 00:10:43,730
little software application you can

00:10:41,720 --> 00:10:46,100
distribute open an MS functionality and

00:10:43,730 --> 00:10:47,750
so I have one at my house I have a farm

00:10:46,100 --> 00:10:49,130
I have an eight-and-a-half hectare farm

00:10:47,750 --> 00:10:52,400
in the middle of nowhere

00:10:49,130 --> 00:10:54,589
and it's called sort of a farm get it

00:10:52,400 --> 00:10:56,150
sort of a farm sort of a farm and so I

00:10:54,589 --> 00:10:58,280
have a minyan running at my farm

00:10:56,150 --> 00:11:00,410
monitoring my devices and then the

00:10:58,280 --> 00:11:02,420
default alarms are for the the main

00:11:00,410 --> 00:11:03,890
instance of open NMS at our office and

00:11:02,420 --> 00:11:05,660
so you can see there's a little

00:11:03,890 --> 00:11:07,530
histogram telling you what alarms are

00:11:05,660 --> 00:11:09,960
there then you can actually see the

00:11:07,530 --> 00:11:11,820
it's bi-directional so you can right

00:11:09,960 --> 00:11:14,520
mouse click and either bring up details

00:11:11,820 --> 00:11:16,380
you can acknowledge and well in this

00:11:14,520 --> 00:11:18,120
case unacknowledged escalate clear you

00:11:16,380 --> 00:11:20,970
can create trouble tickets all from

00:11:18,120 --> 00:11:24,510
Griffin ax and then you can actually add

00:11:20,970 --> 00:11:27,090
your data as well this is our circuit at

00:11:24,510 --> 00:11:29,460
the office we average about it looks

00:11:27,090 --> 00:11:32,370
like about 10 Meg in and 10 Meg out with

00:11:29,460 --> 00:11:35,580
some Peaks we integrate with our that

00:11:32,370 --> 00:11:37,560
allows you to do trending so this is

00:11:35,580 --> 00:11:40,890
actually you know I took the screenshot

00:11:37,560 --> 00:11:42,420
a last week so you can see that this is

00:11:40,890 --> 00:11:44,070
the trend for this actually took a

00:11:42,420 --> 00:11:47,250
screenshot this morning so there we are

00:11:44,070 --> 00:11:50,550
on 11th 6 11 is here and so you can see

00:11:47,250 --> 00:11:52,350
that over the next 4 weeks we expect our

00:11:50,550 --> 00:11:54,870
outbound bandwidth bandwidth to increase

00:11:52,350 --> 00:11:57,660
a little bit and our inbound bandwidth

00:11:54,870 --> 00:11:58,830
to increase a little bit so that's a way

00:11:57,660 --> 00:12:01,230
where we can get rid of the

00:11:58,830 --> 00:12:04,110
visualization sucks part of network

00:12:01,230 --> 00:12:07,530
monitoring now the next thing I want to

00:12:04,110 --> 00:12:09,600
talk about is in horizon 20 to open MS

00:12:07,530 --> 00:12:12,720
drift we were approached by a very large

00:12:09,600 --> 00:12:15,300
company to gather flow data which is

00:12:12,720 --> 00:12:16,589
basically who is talking to whom now

00:12:15,300 --> 00:12:18,420
don't know about the requirements in

00:12:16,589 --> 00:12:21,870
Germany but in New Zealand if you're an

00:12:18,420 --> 00:12:24,240
ISP you not only have to store the data

00:12:21,870 --> 00:12:26,130
you have to store the payload so if the

00:12:24,240 --> 00:12:28,170
police show up and say hey we want to

00:12:26,130 --> 00:12:30,630
know what this IP address was looking at

00:12:28,170 --> 00:12:31,140
three weeks ago which i think is

00:12:30,630 --> 00:12:33,600
ridiculous

00:12:31,140 --> 00:12:36,150
but a lot of companies are saying you

00:12:33,600 --> 00:12:38,010
have to store the metadata at least

00:12:36,150 --> 00:12:40,110
which IP address was talking to what IP

00:12:38,010 --> 00:12:42,089
address and this is one way to do it so

00:12:40,110 --> 00:12:43,290
you could send from all your routers you

00:12:42,089 --> 00:12:46,110
could actually send that information

00:12:43,290 --> 00:12:48,390
into open and MS which we collect it and

00:12:46,110 --> 00:12:50,130
store it in the last to search for

00:12:48,390 --> 00:12:52,440
scalability so we dumped all that into a

00:12:50,130 --> 00:12:54,570
lastest search now when I say telemetry

00:12:52,440 --> 00:12:56,430
data there's two types of telemetry data

00:12:54,570 --> 00:12:58,890
there's performance data so it's just

00:12:56,430 --> 00:13:01,560
like with SNMP everyone hates SMP I like

00:12:58,890 --> 00:13:03,900
us to be but this idea of CPU

00:13:01,560 --> 00:13:06,440
utilization memory utilization bandwidth

00:13:03,900 --> 00:13:12,240
that can come from protocols such as

00:13:06,440 --> 00:13:14,160
junipers jti or Cisco's and X OS then

00:13:12,240 --> 00:13:17,520
there's flow data so IP we support IP

00:13:14,160 --> 00:13:19,560
fix net flow v net flow 9 as well as s

00:13:17,520 --> 00:13:21,269
flow and s flow you can actually do a

00:13:19,560 --> 00:13:24,720
little bit of both you can get

00:13:21,269 --> 00:13:27,569
performance data as well as flow data so

00:13:24,720 --> 00:13:29,879
how does this work well the applications

00:13:27,569 --> 00:13:32,639
this is what's running net flow or s

00:13:29,879 --> 00:13:35,369
flow etc talk to a listener so they

00:13:32,639 --> 00:13:38,040
connect to a port on open and MS and or

00:13:35,369 --> 00:13:40,649
they connect to a listener and it's not

00:13:38,040 --> 00:13:44,089
necessarily portal open MS and that data

00:13:40,649 --> 00:13:46,769
is is stored and passed to an adapter

00:13:44,089 --> 00:13:48,449
now for each listener you can have more

00:13:46,769 --> 00:13:51,209
than one adapter well why would you need

00:13:48,449 --> 00:13:53,089
that well take s flow data one adapter

00:13:51,209 --> 00:13:55,679
might be I'm going to convert this into

00:13:53,089 --> 00:13:58,350
performance data and one maybe I want to

00:13:55,679 --> 00:13:59,850
convert this into flows now I've

00:13:58,350 --> 00:14:01,230
mentioned the minion the minion is this

00:13:59,850 --> 00:14:02,999
little piece of software you can run it

00:14:01,230 --> 00:14:05,670
on a small box you can run it on a big

00:14:02,999 --> 00:14:10,199
box you can actually use that as your

00:14:05,670 --> 00:14:11,639
listener as well come on there we go I

00:14:10,199 --> 00:14:13,079
don't know about the battery in this

00:14:11,639 --> 00:14:13,800
thing always worried that it's gonna run

00:14:13,079 --> 00:14:16,170
out right in the middle of the

00:14:13,800 --> 00:14:18,929
presentation and in this case what will

00:14:16,170 --> 00:14:21,300
happen is the minion will collect the

00:14:18,929 --> 00:14:24,389
flow data and then forward it on using a

00:14:21,300 --> 00:14:26,399
messaging bus the default messaging bus

00:14:24,389 --> 00:14:29,540
that comes shipped with open and MS is

00:14:26,399 --> 00:14:32,009
active in queue but most of our large

00:14:29,540 --> 00:14:34,709
installations use Kafka and we support

00:14:32,009 --> 00:14:36,720
both I don't know if these are familiar

00:14:34,709 --> 00:14:38,040
terms for you but just think of it this

00:14:36,720 --> 00:14:40,350
is the thing that just collects all the

00:14:38,040 --> 00:14:41,579
messages from the various pieces and I'm

00:14:40,350 --> 00:14:44,100
going to talk about that about two more

00:14:41,579 --> 00:14:45,899
slides so the minions can collect data

00:14:44,100 --> 00:14:48,209
so I can have them in remote offices I

00:14:45,899 --> 00:14:49,889
can have one at my house and then I

00:14:48,209 --> 00:14:52,230
could forward this data onto a central

00:14:49,889 --> 00:14:54,839
open in ms which would process it and

00:14:52,230 --> 00:14:57,179
store it now when I talk about

00:14:54,839 --> 00:14:58,379
processing it you some of you who've

00:14:57,179 --> 00:15:00,660
dealt with flow data and they go oh I

00:14:58,379 --> 00:15:02,339
can just use log stash I'm just in

00:15:00,660 --> 00:15:03,509
floated a log stash log stash will stick

00:15:02,339 --> 00:15:04,949
it and lastest search just like you're

00:15:03,509 --> 00:15:08,160
doing I don't need you you suck

00:15:04,949 --> 00:15:09,959
monitoring sucks and I'm like well one

00:15:08,160 --> 00:15:12,209
of the things that open an MS does that

00:15:09,959 --> 00:15:14,910
the default systems don't is we enrich

00:15:12,209 --> 00:15:17,369
the data so in a particular piece of

00:15:14,910 --> 00:15:18,959
data comes in we can look up SNMP stuff

00:15:17,369 --> 00:15:21,449
in our database and add information

00:15:18,959 --> 00:15:23,939
about the interfaces we can add a

00:15:21,449 --> 00:15:26,339
category information node information a

00:15:23,939 --> 00:15:28,679
bunch of other stuff and I believe we're

00:15:26,339 --> 00:15:30,899
one of the few that actually adds a when

00:15:28,679 --> 00:15:32,639
the net flow started and when it stopped

00:15:30,899 --> 00:15:34,829
so you can actually see how long the

00:15:32,639 --> 00:15:35,040
flow was some of these other places will

00:15:34,829 --> 00:15:37,980
just

00:15:35,040 --> 00:15:39,509
so you wouldn't stopped so the process

00:15:37,980 --> 00:15:42,570
is this we have this process called

00:15:39,509 --> 00:15:46,649
telemetry D now our app is written in

00:15:42,570 --> 00:15:48,750
Java okay no one audibly groaned I saw a

00:15:46,649 --> 00:15:50,339
few people roll their eyes but it's

00:15:48,750 --> 00:15:52,079
written in Java and it's made up of

00:15:50,339 --> 00:15:55,050
these processes we called demons

00:15:52,079 --> 00:15:57,420
so our Pollard our Pollard demons called

00:15:55,050 --> 00:16:00,000
Pollard D or collector demoness collecti

00:15:57,420 --> 00:16:02,279
this is telemetry D because it's our

00:16:00,000 --> 00:16:04,199
telemetry daemon so the telemetry team

00:16:02,279 --> 00:16:06,300
adapters take all these different data

00:16:04,199 --> 00:16:08,519
all these different flows and convert

00:16:06,300 --> 00:16:11,040
them into a canonical form so they

00:16:08,519 --> 00:16:13,319
basically create a message that makes

00:16:11,040 --> 00:16:16,430
the net flow flow and the IP fix flow

00:16:13,319 --> 00:16:18,959
look just like the S flow and vice versa

00:16:16,430 --> 00:16:21,120
then we attack them with an application

00:16:18,959 --> 00:16:23,459
name so it might be an HTTP flow it

00:16:21,120 --> 00:16:25,949
might be an SSH flow etc and then we

00:16:23,459 --> 00:16:27,630
enrich it we add this metadata and then

00:16:25,949 --> 00:16:30,600
that all gets dumped into elasticsearch

00:16:27,630 --> 00:16:34,079
and now we have an arrest API that you

00:16:30,600 --> 00:16:36,149
can use to query all this data and of

00:16:34,079 --> 00:16:39,860
course since helm is our visualization

00:16:36,149 --> 00:16:42,300
tool all this data can be sent to hell

00:16:39,860 --> 00:16:45,000
now why do we care about flow data we

00:16:42,300 --> 00:16:48,149
have SNMP that's all we need right well

00:16:45,000 --> 00:16:49,740
here's an example from a live system the

00:16:48,149 --> 00:16:54,089
distance between this graph even though

00:16:49,740 --> 00:16:55,560
it's about 2 meters here is 4 seconds so

00:16:54,089 --> 00:16:57,420
this is 4 seconds of data and as you can

00:16:55,560 --> 00:16:58,980
see there was a little tiny flow here

00:16:57,420 --> 00:17:01,410
it's probably bout a middle of second

00:16:58,980 --> 00:17:04,140
long slightly longer one here here's one

00:17:01,410 --> 00:17:06,569
that lasted almost looks about a quarter

00:17:04,140 --> 00:17:09,659
of a second so you can get a level of

00:17:06,569 --> 00:17:11,579
detail that you can't normally get I

00:17:09,659 --> 00:17:13,620
don't know about yeah I saw you look I

00:17:11,579 --> 00:17:15,750
don't know how useful this particular

00:17:13,620 --> 00:17:17,309
example is but I am telling you that you

00:17:15,750 --> 00:17:19,559
can get down to that kind of level of

00:17:17,309 --> 00:17:21,929
detail which is a lot of the reasons why

00:17:19,559 --> 00:17:24,959
people want this data now we are

00:17:21,929 --> 00:17:27,659
collecting in production around a

00:17:24,959 --> 00:17:28,919
hundred thousand flows a second we

00:17:27,659 --> 00:17:30,929
believe that with our existing

00:17:28,919 --> 00:17:33,390
technology we can easily do about 200

00:17:30,929 --> 00:17:36,600
250 slow flows a second but again our

00:17:33,390 --> 00:17:38,220
goal is millions of devices billions of

00:17:36,600 --> 00:17:41,340
metrics which could mean virtually

00:17:38,220 --> 00:17:44,940
unlimited flows so that brings in

00:17:41,340 --> 00:17:46,409
Sentinel so the idea of Sentinel is this

00:17:44,940 --> 00:17:48,210
I've got all these little demons I've

00:17:46,409 --> 00:17:48,870
got a demon that does service assurance

00:17:48,210 --> 00:17:51,450
like a

00:17:48,870 --> 00:17:53,670
a service check it's poverty I do a

00:17:51,450 --> 00:17:56,550
demon that collects data via jmx

00:17:53,670 --> 00:17:59,190
estimate SNMP etc call collecti and I

00:17:56,550 --> 00:18:01,500
manage traps and I manage sis logs and I

00:17:59,190 --> 00:18:04,860
want to be able to scale that so the

00:18:01,500 --> 00:18:06,809
idea is to create a stand-alone system

00:18:04,860 --> 00:18:08,790
which we call Sentinel it's a runtime

00:18:06,809 --> 00:18:11,700
environment that allows us to run

00:18:08,790 --> 00:18:14,430
portions of these processes which all

00:18:11,700 --> 00:18:17,280
used to live in one VM on open and MS

00:18:14,430 --> 00:18:18,750
out to different sites and the first one

00:18:17,280 --> 00:18:22,890
we're doing because that's what we got

00:18:18,750 --> 00:18:24,990
paid to do is telemetry D now so here's

00:18:22,890 --> 00:18:27,750
a kind of a busy slide it actually shows

00:18:24,990 --> 00:18:30,000
up really good on this Beamer so but I

00:18:27,750 --> 00:18:31,800
want to explain this slide remember I

00:18:30,000 --> 00:18:33,720
told you about the minion so minion is

00:18:31,800 --> 00:18:35,010
allows us to gather remote data well I

00:18:33,720 --> 00:18:37,410
have a remote office I can have a couple

00:18:35,010 --> 00:18:40,170
of minions so the minions automatically

00:18:37,410 --> 00:18:42,000
deal with failover so if one of if so

00:18:40,170 --> 00:18:43,470
you usually want to put two minions in a

00:18:42,000 --> 00:18:45,360
remote site in case one fails the other

00:18:43,470 --> 00:18:46,860
one will keep working so I have my

00:18:45,360 --> 00:18:48,120
remote office with a couple of minions I

00:18:46,860 --> 00:18:50,070
got another remote office with a couple

00:18:48,120 --> 00:18:53,520
of minions and I'm generating events

00:18:50,070 --> 00:18:55,380
data collection in flows and that all

00:18:53,520 --> 00:18:57,660
gets sent to the internet um you can run

00:18:55,380 --> 00:19:00,240
the minion on a phone I think it's only

00:18:57,660 --> 00:19:01,830
Android right now it might be i io s but

00:19:00,240 --> 00:19:03,929
so you can run the minion on the phone

00:19:01,830 --> 00:19:06,840
and this I'll get sent to a Kafka

00:19:03,929 --> 00:19:09,059
messaging bus so the collection of data

00:19:06,840 --> 00:19:10,260
can be can scale the more minions you

00:19:09,059 --> 00:19:12,960
need you can put minions in your data

00:19:10,260 --> 00:19:14,809
center so as many many minions as you

00:19:12,960 --> 00:19:19,770
need you put out there so that scales

00:19:14,809 --> 00:19:22,140
Kafka can be clustered so it scales

00:19:19,770 --> 00:19:24,750
I love problems that can be solved with

00:19:22,140 --> 00:19:26,130
money I don't know how many of you have

00:19:24,750 --> 00:19:28,470
ever done consulting but you'll go to

00:19:26,130 --> 00:19:29,700
your customer and they'll say like one

00:19:28,470 --> 00:19:31,500
of the things we used to use before

00:19:29,700 --> 00:19:33,980
Cassandra and we still support it is our

00:19:31,500 --> 00:19:37,050
detail rd2 was a great little storage

00:19:33,980 --> 00:19:38,910
protocol and I'd go in and I say well

00:19:37,050 --> 00:19:42,300
how much data do you want to store and

00:19:38,910 --> 00:19:44,970
they go everything and I'm like well we

00:19:42,300 --> 00:19:47,610
can't store everything ah you suck and

00:19:44,970 --> 00:19:49,380
now I go in and I say say what would you

00:19:47,610 --> 00:19:51,210
store everything I was like ok you'll

00:19:49,380 --> 00:19:52,950
need a Cassandra cluster you'll need 50

00:19:51,210 --> 00:19:56,070
nodes they'll run ten thousand dollars

00:19:52,950 --> 00:19:58,190
each and then they go all maybe I don't

00:19:56,070 --> 00:20:01,860
need everything and that's great

00:19:58,190 --> 00:20:02,550
so minion scale cosmic scales the point

00:20:01,860 --> 00:20:05,280
of Sentinel

00:20:02,550 --> 00:20:07,170
which is this here is to offload from

00:20:05,280 --> 00:20:09,990
your main open and ms a p-- all this

00:20:07,170 --> 00:20:12,150
functionality and then that gets sent to

00:20:09,990 --> 00:20:14,790
either post grass or last to search or

00:20:12,150 --> 00:20:18,750
sila slash cassandra and all three of

00:20:14,790 --> 00:20:20,910
these can be clustered and can scale and

00:20:18,750 --> 00:20:23,070
it just to use a buzzword you can even

00:20:20,910 --> 00:20:26,220
use kubernetes to spin-up and spin-down

00:20:23,070 --> 00:20:28,260
your sentinels so let's say for some

00:20:26,220 --> 00:20:30,720
reason your applications are getting

00:20:28,260 --> 00:20:32,940
slammed maybe it's a big sale day maybe

00:20:30,720 --> 00:20:35,010
you're doing some sports things and it's

00:20:32,940 --> 00:20:37,140
World Cup or something like that well

00:20:35,010 --> 00:20:38,790
you could scale up to twenty or thirty

00:20:37,140 --> 00:20:40,080
sentinels and then when they slow down

00:20:38,790 --> 00:20:44,600
you could scale back down to two or

00:20:40,080 --> 00:20:47,730
three so Sentinel is key to getting this

00:20:44,600 --> 00:20:51,210
unlimited data storage and that was

00:20:47,730 --> 00:20:52,800
introduced in the Latin horizon 23 just

00:20:51,210 --> 00:20:55,200
for telemetry D but we hope to add

00:20:52,800 --> 00:20:56,760
everything else later now the cool thing

00:20:55,200 --> 00:20:59,520
and I think I've got enough time to do

00:20:56,760 --> 00:21:01,650
this I'm known to I could sit here for

00:20:59,520 --> 00:21:03,420
the next seven hours and talk about - MS

00:21:01,650 --> 00:21:06,090
so I'm trying to trying to keep it

00:21:03,420 --> 00:21:08,640
within the time we've added another

00:21:06,090 --> 00:21:11,760
project called Sexton which is machine

00:21:08,640 --> 00:21:14,250
learning so if you have these millions

00:21:11,760 --> 00:21:15,600
of alarms how do you act on them how do

00:21:14,250 --> 00:21:17,550
you filter them how do you deal with

00:21:15,600 --> 00:21:19,860
them well we have to do something and

00:21:17,550 --> 00:21:23,490
we've decided we're going to implement

00:21:19,860 --> 00:21:26,580
machine learning so how does it work so

00:21:23,490 --> 00:21:29,340
what we end up doing is we analyze

00:21:26,580 --> 00:21:32,520
various sis logs and traps and events

00:21:29,340 --> 00:21:36,750
that come in to open an MS and based

00:21:32,520 --> 00:21:39,210
upon them we create a topology and then

00:21:36,750 --> 00:21:42,360
using that topology we can cluster

00:21:39,210 --> 00:21:44,490
alarms using a protocol called DB scan

00:21:42,360 --> 00:21:47,190
not a protocol I guess it's an algorithm

00:21:44,490 --> 00:21:48,480
using an algorithm called DB scan to

00:21:47,190 --> 00:21:51,270
cluster them together and something

00:21:48,480 --> 00:21:52,530
we're called situations so the idea is

00:21:51,270 --> 00:21:54,900
something goes wrong on your network you

00:21:52,530 --> 00:21:57,240
get flooded with events instead of being

00:21:54,900 --> 00:22:01,110
having to deal with a hundred alarms you

00:21:57,240 --> 00:22:05,550
deal with one situation now so how does

00:22:01,110 --> 00:22:07,500
that work so we collect these alarms and

00:22:05,550 --> 00:22:10,800
then we create models I'm just going to

00:22:07,500 --> 00:22:12,900
jump over here so we know what nodes are

00:22:10,800 --> 00:22:15,000
so let's say I get a syslog event that

00:22:12,900 --> 00:22:16,619
says there's a duplex mismatch between

00:22:15,000 --> 00:22:20,019
node a and node

00:22:16,619 --> 00:22:22,570
well I know there's a link between node

00:22:20,019 --> 00:22:24,070
a and OB so I'll store that and then I

00:22:22,570 --> 00:22:25,629
might get another message which

00:22:24,070 --> 00:22:28,509
indicates that there's a problem with a

00:22:25,629 --> 00:22:31,690
link at the interface level and so I can

00:22:28,509 --> 00:22:34,840
model the SNP interfaces that are

00:22:31,690 --> 00:22:37,240
associated with a node now we are this

00:22:34,840 --> 00:22:38,440
is something that you you can't do ad

00:22:37,240 --> 00:22:39,850
hoc as of yet

00:22:38,440 --> 00:22:43,149
I mean it's in the code we take specific

00:22:39,850 --> 00:22:45,610
events and we create this but we've done

00:22:43,149 --> 00:22:49,659
it for VPN tunnel events BGP pier events

00:22:45,610 --> 00:22:51,820
the entity mabh so you can get issues

00:22:49,659 --> 00:22:55,600
between cards and boards and things like

00:22:51,820 --> 00:22:59,980
that and don't freak out when you see

00:22:55,600 --> 00:23:03,070
this okay so this is part of our

00:22:59,980 --> 00:23:05,200
topology map but you won't see this in

00:23:03,070 --> 00:23:08,350
open and a mess the people I work with

00:23:05,200 --> 00:23:09,970
my one talent my superpower is getting

00:23:08,350 --> 00:23:12,519
amazing people to work with me on things

00:23:09,970 --> 00:23:14,379
that's all I do I run my mouth and I get

00:23:12,519 --> 00:23:16,960
really smart people to work with me well

00:23:14,379 --> 00:23:19,659
they're really smart people have created

00:23:16,960 --> 00:23:22,360
an integration with open and ms4 graph

00:23:19,659 --> 00:23:25,179
ml so you can define a graph using graph

00:23:22,360 --> 00:23:28,450
ml and load it into open and a mess well

00:23:25,179 --> 00:23:30,369
to diagnose issues with sextant they

00:23:28,450 --> 00:23:31,899
allow you to export it as graph ml and

00:23:30,369 --> 00:23:35,730
then you can load it into open and MS

00:23:31,899 --> 00:23:38,710
and so this is just a small section of a

00:23:35,730 --> 00:23:41,289
particular part of this map but this is

00:23:38,710 --> 00:23:43,619
a particular node so you have a node

00:23:41,289 --> 00:23:46,179
here and then these are interfaces and

00:23:43,619 --> 00:23:47,980
you can see these are alarms these two

00:23:46,179 --> 00:23:51,519
alarms are associated directly with this

00:23:47,980 --> 00:23:53,830
node and then these these alarms up here

00:23:51,519 --> 00:23:56,169
are all associated with this interface

00:23:53,830 --> 00:23:58,179
this gigabit interface and they are all

00:23:56,169 --> 00:24:00,820
coalesced into that thing called a

00:23:58,179 --> 00:24:03,429
situation we're working on better icons

00:24:00,820 --> 00:24:06,700
for this this is kind of horizon 24

00:24:03,429 --> 00:24:08,230
stuff and then over here similar thing

00:24:06,700 --> 00:24:10,269
we've gotten a bunch of we've gotten

00:24:08,230 --> 00:24:12,429
these three alarms that happen to deal

00:24:10,269 --> 00:24:16,210
with this interface and we've clustered

00:24:12,429 --> 00:24:17,830
those together into a situation so

00:24:16,210 --> 00:24:21,070
there's no magic one of the things I

00:24:17,830 --> 00:24:21,700
hate about IT is so many people it's

00:24:21,070 --> 00:24:23,529
magic

00:24:21,700 --> 00:24:26,980
have you ever hey I'm having a problem

00:24:23,529 --> 00:24:28,629
did you reboot why do I need to reboot I

00:24:26,980 --> 00:24:29,770
mean you need to reboot because that's

00:24:28,629 --> 00:24:31,720
magic you know

00:24:29,770 --> 00:24:33,160
if you put on a white robe and come in

00:24:31,720 --> 00:24:35,620
in midnight during a full moon and you

00:24:33,160 --> 00:24:37,900
sacrifice a chicken over the server

00:24:35,620 --> 00:24:39,400
it'll fix the problem and I'm like I

00:24:37,900 --> 00:24:42,610
don't want any magic I want to show you

00:24:39,400 --> 00:24:44,200
how we do this so leave this thing

00:24:42,610 --> 00:24:45,880
called DB scan which stands for density

00:24:44,200 --> 00:24:50,950
based spatial clustering applications

00:24:45,880 --> 00:24:52,600
with noise and it's it's basically it's

00:24:50,950 --> 00:24:54,940
math it's one of the most popular

00:24:52,600 --> 00:24:56,650
machine learning algorithms according to

00:24:54,940 --> 00:25:00,190
Wikipedia which is where I got this

00:24:56,650 --> 00:25:03,250
picture so the idea is okay I have this

00:25:00,190 --> 00:25:06,190
distribution of data and I want to group

00:25:03,250 --> 00:25:08,650
it together somehow so I'm like does

00:25:06,190 --> 00:25:10,360
this spot belong with this spot does

00:25:08,650 --> 00:25:12,460
this spot belong with this spot well

00:25:10,360 --> 00:25:15,220
these spots seem to belong together so

00:25:12,460 --> 00:25:18,310
maybe I'll do it on distance so I'll

00:25:15,220 --> 00:25:20,080
choose a number called Epsilon and if

00:25:18,310 --> 00:25:21,940
anything is within the distance of

00:25:20,080 --> 00:25:23,890
epsilon are clustered together so I

00:25:21,940 --> 00:25:27,430
might end up with this let's say I

00:25:23,890 --> 00:25:29,560
randomly chose epsilon equals 100 and so

00:25:27,430 --> 00:25:30,820
these are all within a hundred even

00:25:29,560 --> 00:25:32,890
though this guy's kind of farting he's

00:25:30,820 --> 00:25:34,750
just close enough to these guys to count

00:25:32,890 --> 00:25:36,340
in this cluster but this guy here and

00:25:34,750 --> 00:25:39,460
this guy here and this guy here they're

00:25:36,340 --> 00:25:41,980
noise and so I've created two clusters

00:25:39,460 --> 00:25:44,140
one of the reasons we chose DB scan is

00:25:41,980 --> 00:25:46,210
it's one of the few machine learning

00:25:44,140 --> 00:25:49,020
algorithms that doesn't require you to

00:25:46,210 --> 00:25:52,510
know the number of clusters in advance

00:25:49,020 --> 00:25:54,460
so you can set it it may find two

00:25:52,510 --> 00:25:55,720
clusters it may find a hundred where's a

00:25:54,460 --> 00:25:57,190
lot of the other ones you say I have

00:25:55,720 --> 00:26:00,250
this data set and I want to put it in

00:25:57,190 --> 00:26:01,240
ten clusters okay then it can do it but

00:26:00,250 --> 00:26:05,560
if you can't if you don't know the

00:26:01,240 --> 00:26:07,570
number so are you ready I heard you're

00:26:05,560 --> 00:26:10,090
all technical okay we got math ready

00:26:07,570 --> 00:26:12,100
this math so the way you read this

00:26:10,090 --> 00:26:15,850
function is we determine the distance

00:26:12,100 --> 00:26:19,570
between alarm a and alarm be based upon

00:26:15,850 --> 00:26:22,450
two terms the time between the alarms

00:26:19,570 --> 00:26:25,540
the time of a line a one minus the time

00:26:22,450 --> 00:26:29,590
of a two and the number of hops the

00:26:25,540 --> 00:26:33,010
distance between whatever caused a one

00:26:29,590 --> 00:26:37,690
and whatever caused a two now this beta

00:26:33,010 --> 00:26:41,400
is a weighting function how much do we

00:26:37,690 --> 00:26:43,750
want to care about time versus distance

00:26:41,400 --> 00:26:45,700
so as you can see for the

00:26:43,750 --> 00:26:47,950
this diesel bars mean absolute values so

00:26:45,700 --> 00:26:50,770
we take the absolute value of the time

00:26:47,950 --> 00:26:52,210
between the events divided by thousand

00:26:50,770 --> 00:26:54,160
this is in milliseconds so we divide by

00:26:52,210 --> 00:26:56,380
a thousand of exclusive seconds then we

00:26:54,160 --> 00:26:57,670
divide by 60 to get minutes I'm not sure

00:26:56,380 --> 00:27:00,010
where we have to get two minutes but

00:26:57,670 --> 00:27:03,190
that's what we do and then we multiply

00:27:00,010 --> 00:27:05,380
this times beta and then on the distance

00:27:03,190 --> 00:27:09,700
side we take the distance between a 1

00:27:05,380 --> 00:27:11,410
and a 2 times 1 minus beta so

00:27:09,700 --> 00:27:14,410
it'll-it'll average titta little sum to

00:27:11,410 --> 00:27:16,420
1 and then we multiply the whole thing

00:27:14,410 --> 00:27:21,570
by this coefficient called

00:27:16,420 --> 00:27:23,740
alpha and alpha happens to be 7/8 1.17

00:27:21,570 --> 00:27:27,130
and a random number doesn't this sound

00:27:23,740 --> 00:27:29,020
so we were actually hired to replace a

00:27:27,130 --> 00:27:32,110
product called Cisco prime network and

00:27:29,020 --> 00:27:34,750
when Cisco prime network does is alarm

00:27:32,110 --> 00:27:38,080
correlation so we had this huge corpus

00:27:34,750 --> 00:27:40,260
of syslog and trap data and so we shoved

00:27:38,080 --> 00:27:42,610
it into open and a mess the open MS

00:27:40,260 --> 00:27:44,740
correlation engine which is this the OCE

00:27:42,610 --> 00:27:48,940
we shoved it into the OCE

00:27:44,740 --> 00:27:52,150
and we kept fiddling with alpha and beta

00:27:48,940 --> 00:27:56,170
until we got the closest match to what

00:27:52,150 --> 00:27:57,970
cisco prime networks did so in your

00:27:56,170 --> 00:28:00,520
network this may change you can fiddle

00:27:57,970 --> 00:28:02,140
with these values alpha and epsilon are

00:28:00,520 --> 00:28:04,240
kind of related if you think about it so

00:28:02,140 --> 00:28:06,580
alpha is just an overall coefficient for

00:28:04,240 --> 00:28:08,680
distance epsilon is the distance itself

00:28:06,580 --> 00:28:10,030
so you want to keep one steady and

00:28:08,680 --> 00:28:11,260
fiddle with the other one you wouldn't

00:28:10,030 --> 00:28:12,910
want to play with both unless you're

00:28:11,260 --> 00:28:14,980
just super smart because I don't know

00:28:12,910 --> 00:28:18,280
how that work so let's bring this home

00:28:14,980 --> 00:28:21,550
with an example so let's say I got a

00:28:18,280 --> 00:28:23,560
node lost service event hcp and two

00:28:21,550 --> 00:28:24,610
seconds later I got a node lost service

00:28:23,560 --> 00:28:26,350
event ACPs

00:28:24,610 --> 00:28:29,050
and open in a mess this would be from

00:28:26,350 --> 00:28:32,050
service checks so I'm going out a check

00:28:29,050 --> 00:28:34,480
port 80 it fails I check port 443 it

00:28:32,050 --> 00:28:36,550
fails so I generate two alarms and

00:28:34,480 --> 00:28:38,650
they're two seconds apart 2,000

00:28:36,550 --> 00:28:41,860
milliseconds to seconds apart on the

00:28:38,650 --> 00:28:45,160
same device so let's plug that into our

00:28:41,860 --> 00:28:48,370
distance equation so this piece since

00:28:45,160 --> 00:28:49,810
the distance between a1 and a2 is 0 it's

00:28:48,370 --> 00:28:53,740
on the same node this whole term goes

00:28:49,810 --> 00:28:55,300
away and so if I take my two thousand

00:28:53,740 --> 00:28:57,159
divided by a thousand divided by 60

00:28:55,300 --> 00:29:00,129
multiplied it by beta which

00:28:57,159 --> 00:29:01,869
you remember is 0.53 I end up getting

00:29:00,129 --> 00:29:04,509
this number a fairly small number zero

00:29:01,869 --> 00:29:05,979
point zero one seven seven times one

00:29:04,509 --> 00:29:08,619
seven eight does I'm eight is thirteen

00:29:05,979 --> 00:29:12,009
point eight one which is less than our

00:29:08,619 --> 00:29:13,470
epsilon of a hundred so these two alarms

00:29:12,009 --> 00:29:16,330
would be correlated

00:29:13,470 --> 00:29:19,299
now what if they happened on two nodes

00:29:16,330 --> 00:29:22,989
one hop away if that happens then this

00:29:19,299 --> 00:29:25,059
term is no longer is is no longer zero

00:29:22,989 --> 00:29:27,460
so node a gets a node loss service in

00:29:25,059 --> 00:29:31,840
two seconds later I get node B what what

00:29:27,460 --> 00:29:34,450
ends up happening here is that this term

00:29:31,840 --> 00:29:36,099
actually plays a big role so when we get

00:29:34,450 --> 00:29:37,710
down here to the seven eight one seven

00:29:36,099 --> 00:29:41,289
eight you'll see that it's not

00:29:37,710 --> 00:29:43,149
correlated now if it happened in a very

00:29:41,289 --> 00:29:44,679
very short amount of time maybe it would

00:29:43,149 --> 00:29:47,080
be correlated I mean you could say

00:29:44,679 --> 00:29:48,549
that's kind of what it's saying and most

00:29:47,080 --> 00:29:51,190
of what we're dealing with in this

00:29:48,549 --> 00:29:53,019
scenario our sis logs and traps which

00:29:51,190 --> 00:29:54,820
are received asynchronously by open and

00:29:53,019 --> 00:29:57,070
a mess they just boom baboom so it's not

00:29:54,820 --> 00:29:58,989
like a pole so they do happen all at one

00:29:57,070 --> 00:30:00,009
time does everyone get that

00:29:58,989 --> 00:30:01,749
does everyone see how this we're

00:30:00,009 --> 00:30:03,190
basically just choosing a distance and

00:30:01,749 --> 00:30:05,379
if everything is within a certain

00:30:03,190 --> 00:30:06,789
distance we clustering them together now

00:30:05,379 --> 00:30:08,229
this is in production so I've got a

00:30:06,789 --> 00:30:10,989
slide of what it looks like an opening a

00:30:08,229 --> 00:30:14,529
mess and so basically we got a link down

00:30:10,989 --> 00:30:19,179
trap from SNMP and we got to sis logs

00:30:14,529 --> 00:30:21,509
all on the same note and so we got a

00:30:19,179 --> 00:30:24,009
line protocol down we got a link down

00:30:21,509 --> 00:30:28,090
syslog and then we got an agent down

00:30:24,009 --> 00:30:29,679
trap link down trap and what happened

00:30:28,090 --> 00:30:32,739
was those all got correlated together

00:30:29,679 --> 00:30:34,840
and there's a little piece here called

00:30:32,739 --> 00:30:36,249
the OCE Diagnostics as the alarms happen

00:30:34,840 --> 00:30:40,059
within one point seven eight seconds

00:30:36,249 --> 00:30:42,580
across one vertice or one note and so

00:30:40,059 --> 00:30:44,169
that's how we do correlation and the

00:30:42,580 --> 00:30:45,460
customer is actually using this now and

00:30:44,169 --> 00:30:48,639
they're no longer paying Cisco for a

00:30:45,460 --> 00:30:51,059
Cisco prime network so where do we go

00:30:48,639 --> 00:30:53,830
from here well we've got this is all

00:30:51,059 --> 00:30:56,259
unsupervised like you just start shoving

00:30:53,830 --> 00:30:59,289
at this one customer we're doing around

00:30:56,259 --> 00:31:01,149
10,000 syslog the second times a number

00:30:59,289 --> 00:31:02,830
of different devices and it's on a

00:31:01,149 --> 00:31:04,599
minion now this is minions not running

00:31:02,830 --> 00:31:06,729
on a Raspberry Pi it's actually running

00:31:04,599 --> 00:31:08,879
on a fairly large server but you can

00:31:06,729 --> 00:31:11,049
collect and process this kind of data

00:31:08,879 --> 00:31:14,799
what we want to do is

00:31:11,049 --> 00:31:18,999
some semi-supervised learning so we want

00:31:14,799 --> 00:31:22,029
to allow the operator to say hey these

00:31:18,999 --> 00:31:23,289
two things are not related and so we

00:31:22,029 --> 00:31:24,759
have a little GUI that pops up so you

00:31:23,289 --> 00:31:26,769
can hit these little X's and say these

00:31:24,759 --> 00:31:28,659
things aren't related or you can say

00:31:26,769 --> 00:31:30,759
eventually we'll have it so you can pick

00:31:28,659 --> 00:31:33,429
two alarms and say these are related and

00:31:30,759 --> 00:31:35,649
we need to deal with them and so I've

00:31:33,429 --> 00:31:38,860
modified our original equation to add

00:31:35,649 --> 00:31:41,559
this repulsion factor which will

00:31:38,860 --> 00:31:43,059
increase the distance so if these two

00:31:41,559 --> 00:31:46,330
things aren't related then we'll add

00:31:43,059 --> 00:31:48,340
some amount of distance to say hey these

00:31:46,330 --> 00:31:51,129
aren't related and then if they say they

00:31:48,340 --> 00:31:52,509
are we'll have an attraction factor that

00:31:51,129 --> 00:31:54,700
will say hey these things should be

00:31:52,509 --> 00:31:57,309
related so decrease the distance and

00:31:54,700 --> 00:32:00,220
then we use gamma I just threw that in

00:31:57,309 --> 00:32:02,559
there as a weight so we might want to

00:32:00,220 --> 00:32:03,789
rate weight the repulsion factor much

00:32:02,559 --> 00:32:06,970
greater than the attraction factor

00:32:03,789 --> 00:32:09,249
because we don't want this to we don't

00:32:06,970 --> 00:32:10,779
if these two things are related we

00:32:09,249 --> 00:32:12,429
definitely don't want them correlated

00:32:10,779 --> 00:32:14,320
and that may be more important than

00:32:12,429 --> 00:32:16,869
actually correlating things now of

00:32:14,320 --> 00:32:19,509
course the step after this is to make

00:32:16,869 --> 00:32:21,970
situations out of situations so can we

00:32:19,509 --> 00:32:24,039
correlate situations into meta

00:32:21,970 --> 00:32:26,259
situations but that's an integrator

00:32:24,039 --> 00:32:29,350
there but we believe by adding these

00:32:26,259 --> 00:32:32,590
tools network monitoring people can

00:32:29,350 --> 00:32:34,419
actually start to love their job again

00:32:32,590 --> 00:32:36,460
and they can get a lot of information

00:32:34,419 --> 00:32:40,029
and maybe we can get to the monitoring

00:32:36,460 --> 00:32:44,200
love now we have just a few minutes for

00:32:40,029 --> 00:32:44,859
questions if you look at my my little

00:32:44,200 --> 00:32:48,220
abstract

00:32:44,859 --> 00:32:48,609
I mentioned the MQTT open and m/s does

00:32:48,220 --> 00:32:51,940
support

00:32:48,609 --> 00:32:55,809
mqtt and here's the this is taken from

00:32:51,940 --> 00:32:57,519
the github page of the mqtt plugin we're

00:32:55,809 --> 00:32:59,799
here on Thursday for the hackathon and

00:32:57,519 --> 00:33:01,239
so if you have any interest in mqtt

00:32:59,799 --> 00:33:03,989
there's actually a presentation right

00:33:01,239 --> 00:33:06,489
after this on MQTT which I plan to go to

00:33:03,989 --> 00:33:09,549
we're going to be Ronnie farmer who

00:33:06,489 --> 00:33:11,080
works with us he's going to he and I are

00:33:09,549 --> 00:33:13,600
going to sit down on Thursday and start

00:33:11,080 --> 00:33:18,700
playing this using open had any

00:33:13,600 --> 00:33:20,580
questions was this useful enjoy it so

00:33:18,700 --> 00:33:29,309
yes sir

00:33:20,580 --> 00:33:31,440
oh I was I was really busy and and

00:33:29,309 --> 00:33:34,140
burned as like dude are you coming and I

00:33:31,440 --> 00:33:36,360
was like yeah and so I I just I didn't

00:33:34,140 --> 00:33:37,289
know what to talk about so tell

00:33:36,360 --> 00:33:39,149
everybody

00:33:37,289 --> 00:33:42,840
so wander around and tell everybody you

00:33:39,149 --> 00:33:44,130
missed it it was so good so you can

00:33:42,840 --> 00:33:46,380
watch it online so if you're watching

00:33:44,130 --> 00:33:50,100
this online afterwards see what you

00:33:46,380 --> 00:33:53,760
missed I'll be here next year so great

00:33:50,100 --> 00:33:57,630
anything else thank you very much yeah I

00:33:53,760 --> 00:34:00,929
have a question like like the injection

00:33:57,630 --> 00:34:04,889
factor and the repulsion factor what you

00:34:00,929 --> 00:34:08,700
talked about like this is store stand

00:34:04,889 --> 00:34:11,129
for later usage yeah the same event

00:34:08,700 --> 00:34:12,990
occurred and pardon our development

00:34:11,129 --> 00:34:15,330
office is actually in Canada and I went

00:34:12,990 --> 00:34:17,700
there to create the slide basically and

00:34:15,330 --> 00:34:20,159
I was talking with the team there this

00:34:17,700 --> 00:34:21,510
is something new this exists but we

00:34:20,159 --> 00:34:23,730
haven't figured out quite what we're

00:34:21,510 --> 00:34:25,710
doing with it yet so the first time that

00:34:23,730 --> 00:34:27,720
equation has been written down was like

00:34:25,710 --> 00:34:30,869
a week ago but yeah the idea is that we

00:34:27,720 --> 00:34:32,280
would store this somehow and I don't you

00:34:30,869 --> 00:34:34,139
know we get rid of time stamps but

00:34:32,280 --> 00:34:38,730
basically for these particular nodes and

00:34:34,139 --> 00:34:40,349
add this idea that hey this is a these

00:34:38,730 --> 00:34:41,669
things aren't related maybe they happen

00:34:40,349 --> 00:34:43,800
at the same time but for whatever reason

00:34:41,669 --> 00:34:46,200
they're they're not sympathetic and so

00:34:43,800 --> 00:34:50,220
we need to get rid of one of them but

00:34:46,200 --> 00:34:53,580
the idea is to allow you know any time I

00:34:50,220 --> 00:34:56,099
let a computer do it on its own it tends

00:34:53,580 --> 00:34:58,280
to work fine for about 80% of time and

00:34:56,099 --> 00:35:01,260
the other 20% is just horrible it like

00:34:58,280 --> 00:35:03,839
negates the other 80% so we wanted to

00:35:01,260 --> 00:35:05,220
add a method where operators could go in

00:35:03,839 --> 00:35:06,420
and say oh okay

00:35:05,220 --> 00:35:08,160
you know don't bother me with this

00:35:06,420 --> 00:35:09,619
anymore let's let's separate it and

00:35:08,160 --> 00:35:12,839
that's kind of the plan moving forward

00:35:09,619 --> 00:35:14,400
that's the self learning yeah and this

00:35:12,839 --> 00:35:17,010
is the supervised where someone could

00:35:14,400 --> 00:35:18,450
actually can-can I had and apparently

00:35:17,010 --> 00:35:21,599
the term the specific term is

00:35:18,450 --> 00:35:22,920
semi-supervised because I'm trying to

00:35:21,599 --> 00:35:25,890
make sure I know all my terms right so

00:35:22,920 --> 00:35:27,420
send me supervised machine learning but

00:35:25,890 --> 00:35:28,980
yet so the idea is yeah this would be

00:35:27,420 --> 00:35:30,330
stored somewhere and then as the things

00:35:28,980 --> 00:35:32,160
will process we would increase or

00:35:30,330 --> 00:35:34,640
decrease the distance of the alarms

00:35:32,160 --> 00:35:41,220
based upon this knowledge

00:35:34,640 --> 00:35:45,600
cool yeah next question hi thanks for

00:35:41,220 --> 00:35:48,660
the nice talk I'm I was using with open

00:35:45,600 --> 00:35:52,350
M&S some time ago no quite sophisticated

00:35:48,660 --> 00:35:55,050
environment at that time we install all

00:35:52,350 --> 00:35:57,410
manual now in my current role I'm

00:35:55,050 --> 00:36:00,180
looking for automation across-the-board

00:35:57,410 --> 00:36:03,210
now let's say I would like to use open

00:36:00,180 --> 00:36:06,900
an MS in projects what kind of

00:36:03,210 --> 00:36:09,690
methodologies are supported by deploying

00:36:06,900 --> 00:36:13,800
and rolling in out of all your options

00:36:09,690 --> 00:36:17,700
fully automatic so we do an incredible

00:36:13,800 --> 00:36:19,620
job of packaging so you can do we have a

00:36:17,700 --> 00:36:21,990
young repository so you type yum install

00:36:19,620 --> 00:36:26,850
open MS we've got a debian repository

00:36:21,990 --> 00:36:28,500
and we make rpms for every branch so if

00:36:26,850 --> 00:36:31,410
someone's if you wanted to follow this

00:36:28,500 --> 00:36:33,840
work you could go to our JIRA find out

00:36:31,410 --> 00:36:35,550
what the JIRA issue was look look that

00:36:33,840 --> 00:36:37,740
up to figure out what branch it was and

00:36:35,550 --> 00:36:39,960
then you could just update it every day

00:36:37,740 --> 00:36:42,960
that there was a change but we also

00:36:39,960 --> 00:36:45,180
there are there's a chef recipes there's

00:36:42,960 --> 00:36:47,730
a we use ansible so we use ansible to

00:36:45,180 --> 00:36:50,490
deploy open an MS or instead of getting

00:36:47,730 --> 00:36:52,650
their thumbs up friends'll and I believe

00:36:50,490 --> 00:36:55,230
there's also puppet what a puppet it's

00:36:52,650 --> 00:36:56,970
not recipes but you know how do you do

00:36:55,230 --> 00:37:00,450
the configuration with ansible you

00:36:56,970 --> 00:37:04,350
change configuration files oh or you use

00:37:00,450 --> 00:37:08,640
the API to connect yeah that's a good

00:37:04,350 --> 00:37:11,010
question um there isn't actually you can

00:37:08,640 --> 00:37:12,420
you can use ansible to change the change

00:37:11,010 --> 00:37:14,100
the configuration files what we're

00:37:12,420 --> 00:37:17,790
hoping with the minions and things like

00:37:14,100 --> 00:37:19,650
that so so to back up we have a lot of

00:37:17,790 --> 00:37:22,680
customers who will deploy who used to

00:37:19,650 --> 00:37:24,630
deploy maybe 20 open and a messes so how

00:37:22,680 --> 00:37:26,940
do you deal with that now all of the

00:37:24,630 --> 00:37:28,980
configuration of open MS is pretty much

00:37:26,940 --> 00:37:30,300
in a single directory so a lot of what

00:37:28,980 --> 00:37:32,700
they would do is they would set up some

00:37:30,300 --> 00:37:34,710
kind of our sink and restart to migrate

00:37:32,700 --> 00:37:37,050
so they add a new person to the team

00:37:34,710 --> 00:37:38,850
that gets updated in our users file and

00:37:37,050 --> 00:37:41,340
they have a notification path and they

00:37:38,850 --> 00:37:43,290
might add a new myth or a new alert that

00:37:41,340 --> 00:37:47,330
would just get all pushed out now with

00:37:43,290 --> 00:37:49,920
the minion the minion not only sends in

00:37:47,330 --> 00:37:52,410
collected data and alerts and traps and

00:37:49,920 --> 00:37:55,560
syslog the minion includes a location

00:37:52,410 --> 00:37:57,090
and so what you could do is instead of

00:37:55,560 --> 00:37:57,450
you could just have the one open in a

00:37:57,090 --> 00:37:59,250
mess

00:37:57,450 --> 00:38:01,830
so you install it you configure it in

00:37:59,250 --> 00:38:03,630
one location and then deploy minions and

00:38:01,830 --> 00:38:06,150
every other your remote environments

00:38:03,630 --> 00:38:07,830
could be a customer environment etc and

00:38:06,150 --> 00:38:09,270
have all that come to open a mess and

00:38:07,830 --> 00:38:10,260
then the configuration would only exist

00:38:09,270 --> 00:38:13,410
in one place and you wouldn't really

00:38:10,260 --> 00:38:16,560
have the need to you know spin it up on

00:38:13,410 --> 00:38:18,720
multiple instances that's I have a

00:38:16,560 --> 00:38:21,869
minion at my house which I love because

00:38:18,720 --> 00:38:23,010
the other day it's stuff working and had

00:38:21,869 --> 00:38:25,230
been working for like two months it's

00:38:23,010 --> 00:38:27,840
stopped working so I'm like I run on a

00:38:25,230 --> 00:38:30,060
little Intel nook so I've got sent all

00:38:27,840 --> 00:38:31,290
seven on it I this what's going on so I

00:38:30,060 --> 00:38:32,640
figured maybe it's something wrong with

00:38:31,290 --> 00:38:32,880
the operating system or something like

00:38:32,640 --> 00:38:35,040
that

00:38:32,880 --> 00:38:36,330
so after trying restarting and

00:38:35,040 --> 00:38:37,500
everything I copied the configure

00:38:36,330 --> 00:38:38,760
there's one little configuration

00:38:37,500 --> 00:38:41,990
directory I copied out of the way

00:38:38,760 --> 00:38:44,400
I completely base the Box I raced it

00:38:41,990 --> 00:38:47,010
reinstalled minion copied that directory

00:38:44,400 --> 00:38:49,470
back over still didn't work turned out I

00:38:47,010 --> 00:38:51,810
had a duplicate IP address so I had this

00:38:49,470 --> 00:38:54,480
this temperature sensor in my workshop

00:38:51,810 --> 00:38:56,430
and I guess it just didn't work for two

00:38:54,480 --> 00:38:57,990
months but it came on and it was

00:38:56,430 --> 00:38:59,340
interfering with the minions so once I

00:38:57,990 --> 00:39:01,920
changed the address but what I learned

00:38:59,340 --> 00:39:03,359
was in like open MS where you'd have to

00:39:01,920 --> 00:39:05,400
back up the configuration and back up

00:39:03,359 --> 00:39:07,320
the database and back up your or die's I

00:39:05,400 --> 00:39:09,450
just blew it away and put it right back

00:39:07,320 --> 00:39:10,950
and that's the idea is that these are

00:39:09,450 --> 00:39:13,740
kind of throw away things it uses this

00:39:10,950 --> 00:39:16,470
thing called a competitive consumer

00:39:13,740 --> 00:39:18,300
queue so your minions go to open MS and

00:39:16,470 --> 00:39:20,160
say what do I what work do I need to do

00:39:18,300 --> 00:39:21,810
what work do I need to do and then it

00:39:20,160 --> 00:39:25,200
will actually send the information back

00:39:21,810 --> 00:39:26,940
and say okay minion a you do this work

00:39:25,200 --> 00:39:29,070
minion B you did this work and if minion

00:39:26,940 --> 00:39:30,780
B goes away I mean uni you'll do all of

00:39:29,070 --> 00:39:32,310
minion a you'll do all the work which

00:39:30,780 --> 00:39:35,070
was funny we had a customer who had two

00:39:32,310 --> 00:39:37,020
minions and he said you it's saying my

00:39:35,070 --> 00:39:39,150
exchange server is down 50% of the time

00:39:37,020 --> 00:39:42,060
but it isn't turned out he had a bad

00:39:39,150 --> 00:39:45,869
firewall rule so minion two could not

00:39:42,060 --> 00:39:48,720
get to the server but minion the first

00:39:45,869 --> 00:39:50,490
minion could and so half the time it

00:39:48,720 --> 00:39:52,560
said oh yeah it's up and then half the

00:39:50,490 --> 00:39:54,480
time it said all it's down and once he

00:39:52,560 --> 00:39:58,290
fixed the rule so he had 50% of fail

00:39:54,480 --> 00:40:00,059
ability on that one server but so that's

00:39:58,290 --> 00:40:01,829
kind of what we're saying right now it's

00:40:00,059 --> 00:40:03,509
having to distribute it and again all of

00:40:01,829 --> 00:40:05,130
the sentinel and all the minions get

00:40:03,509 --> 00:40:07,049
their configuration and information from

00:40:05,130 --> 00:40:08,789
the central open and ms so you don't

00:40:07,049 --> 00:40:13,469
really have to do what you did in the

00:40:08,789 --> 00:40:16,019
past anything else thank you very much

00:40:13,469 --> 00:40:16,430
please enjoy o SMC come drink beer with

00:40:16,019 --> 00:40:18,050
me tonight

00:40:16,430 --> 00:40:29,889
[Applause]

00:40:18,050 --> 00:40:29,889

YouTube URL: https://www.youtube.com/watch?v=VqZ2eG0PrPc


