Title: OSMC 2016 | What's Happening with OpenNMS (EN) by David Hustace
Publication date: 2016-12-14
Playlist: OSMC 2016 | Open Source Monitoring Conference
Description: 
	We hoped the creation of the Horizon and Meridian distributions of OpenNMS would help accelerate innovation. How right we were!
Since altering the release and distribution model, the project and the company have been busy improving the user experience. For the newest users and ones just starting to explore their interest, we launched new websites for the project (opennms.org) and documentation (docs.opennms.org). For large-scale users pushing the boundaries of RRDTool for data storage, we shipped four releases with support for storing metrics in Newts (our Cassandra-based data store). For users needing to scale the whole solution horizontally, we made two releases incorporating the new Minion distributed architecture. The and ReST API has continued to see improvements, making OpenNMS an even better platform for integration. New northbound interfaces for events and alarms, and broadened support for third-party trouble ticket platforms, further strengthen the integration story. The platform's ability to speak many management protocols has grown with the addition of support for WS-Management (and by extension, WinRM). End user-facing enhancements include improvements to the web UI, a new Business Service Monitoring subsystem, and updates to the Topology UI. We also added evil usage statistics collection to help us better understand how people use OpenNMS (participation is opt-in only, and the data is published at stats.opennms.org).
Captions: 
	00:00:10,519 --> 00:00:19,550
our next talk is David hostas a former

00:00:16,039 --> 00:00:23,329
captain of the US Army and co-founder of

00:00:19,550 --> 00:00:24,890
open event opennms in 2004 and today you

00:00:23,329 --> 00:00:27,739
will be speaking about the current state

00:00:24,890 --> 00:00:32,950
of opennms and everything was happening

00:00:27,739 --> 00:00:36,980
opennms currently so enjoy thank you

00:00:32,950 --> 00:00:41,329
hello gutentag that's about the extent

00:00:36,980 --> 00:00:43,550
of my German for those who know me first

00:00:41,329 --> 00:00:46,730
a little housekeeping I'm not Jeff

00:00:43,550 --> 00:00:48,520
gehlbach Jeff originally submitted and

00:00:46,730 --> 00:00:51,350
was scheduled to give this talk but

00:00:48,520 --> 00:00:54,590
unfortunately couldn't make it Jeff is

00:00:51,350 --> 00:00:58,880
arguably the the newer version and

00:00:54,590 --> 00:01:04,489
better UI presenter and arguably a lot

00:00:58,880 --> 00:01:06,020
smarter so today rather than just stand

00:01:04,489 --> 00:01:07,939
up here and pretend that I'm that smart

00:01:06,020 --> 00:01:09,170
guy I thought could relax a little bit

00:01:07,939 --> 00:01:12,110
and talk about what's going on with

00:01:09,170 --> 00:01:14,479
opennms it's a matter of fact I'm

00:01:12,110 --> 00:01:23,840
pretending to be smart or these glasses

00:01:14,479 --> 00:01:26,299
they don't even have lenses a little bit

00:01:23,840 --> 00:01:31,130
about myself started this company with

00:01:26,299 --> 00:01:34,039
two other guys back in 2004 and we

00:01:31,130 --> 00:01:35,450
quickly realized that there are a lot of

00:01:34,039 --> 00:01:39,439
people interested in the project and

00:01:35,450 --> 00:01:42,380
started contributing and we were a small

00:01:39,439 --> 00:01:44,179
company mortgage our houses tried to

00:01:42,380 --> 00:01:48,049
figure out a way to fund this company

00:01:44,179 --> 00:01:49,849
and recognize that there are a few guys

00:01:48,049 --> 00:01:53,479
that were contributing that we couldn't

00:01:49,849 --> 00:01:55,999
really pay so we created this thing

00:01:53,479 --> 00:01:57,740
called the order of the green polo and

00:01:55,999 --> 00:02:00,139
some of those guys are in the room here

00:01:57,740 --> 00:02:03,169
today basically the order the green polo

00:02:00,139 --> 00:02:05,060
polo was invented based on the masters

00:02:03,169 --> 00:02:07,969
golf tournament and the order of the

00:02:05,060 --> 00:02:09,410
garter so if you win the masters golf

00:02:07,969 --> 00:02:11,540
tournament you get a hundred green

00:02:09,410 --> 00:02:14,030
jacket so we came up with green polo

00:02:11,540 --> 00:02:16,010
shirts if we could give out and every

00:02:14,030 --> 00:02:18,800
year we invite them to a developer's

00:02:16,010 --> 00:02:23,270
conference so it's been a great

00:02:18,800 --> 00:02:24,440
experience for us so it has been a busy

00:02:23,270 --> 00:02:27,740
couple of years last

00:02:24,440 --> 00:02:30,620
Taurus Balog my co-founder presented

00:02:27,740 --> 00:02:33,350
here I found this on his slides and like

00:02:30,620 --> 00:02:35,510
all good presenters weeks and weeks and

00:02:33,350 --> 00:02:39,800
weeks and weeks before this show I spent

00:02:35,510 --> 00:02:41,480
preparing for this talk actually most

00:02:39,800 --> 00:02:45,020
the last night that's why I didn't join

00:02:41,480 --> 00:02:47,270
the dinner last night but you can see

00:02:45,020 --> 00:02:50,150
here in the last year we've picked up

00:02:47,270 --> 00:02:54,010
nine new contributors we did almost 5000

00:02:50,150 --> 00:02:58,820
commits into the git repo and we've had

00:02:54,010 --> 00:03:00,020
742 pull requests in the last year now

00:02:58,820 --> 00:03:01,730
the way the development works in the

00:03:00,020 --> 00:03:03,740
open in the open and ms community is

00:03:01,730 --> 00:03:06,620
that we have a pretty rigorous process

00:03:03,740 --> 00:03:08,780
for any time that a new bug is created

00:03:06,620 --> 00:03:10,820
in the issue tracking system and the

00:03:08,780 --> 00:03:15,800
developer goes to fix it we create a

00:03:10,820 --> 00:03:18,230
branch in the git repo and then we merge

00:03:15,800 --> 00:03:20,150
that when the bug is fixed but we do

00:03:18,230 --> 00:03:22,460
that with a pull request and one of the

00:03:20,150 --> 00:03:24,680
other contributors then review the bug

00:03:22,460 --> 00:03:28,750
to make sure it's approved and then the

00:03:24,680 --> 00:03:34,040
developer merges it in we have about

00:03:28,750 --> 00:03:35,239
17,000 traps they come with opennms

00:03:34,040 --> 00:03:38,150
shipped out of the box already

00:03:35,239 --> 00:03:40,430
predefined as well as about 2500

00:03:38,150 --> 00:03:42,290
performance metrics so if you're opennms

00:03:40,430 --> 00:03:45,970
finds a note that supports those metrics

00:03:42,290 --> 00:03:45,970
you'll automatically get grass for those

00:03:46,120 --> 00:03:50,810
something we recently did in August when

00:03:49,220 --> 00:03:54,050
we released horizon 18 i'll talk more

00:03:50,810 --> 00:03:57,980
about horizon and meridian in it later

00:03:54,050 --> 00:04:00,800
in a presentation but we have an opt-in

00:03:57,980 --> 00:04:02,959
now in opennms so when you install start

00:04:00,800 --> 00:04:05,870
to web UI presents you with an option to

00:04:02,959 --> 00:04:07,459
opt in and send in some metrics you can

00:04:05,870 --> 00:04:08,870
view those metrics and basically it's

00:04:07,459 --> 00:04:12,250
just general summarized information

00:04:08,870 --> 00:04:14,989
about how many nodes you're monitoring

00:04:12,250 --> 00:04:17,810
you know what kind of nodes like system

00:04:14,989 --> 00:04:19,430
by system object ID as well as what

00:04:17,810 --> 00:04:21,650
operating system you're running open and

00:04:19,430 --> 00:04:23,150
a mess on now of course you're your

00:04:21,650 --> 00:04:25,100
instance has to have access to the

00:04:23,150 --> 00:04:27,050
Internet to report it so we're probably

00:04:25,100 --> 00:04:29,510
capturing a small percentage of the

00:04:27,050 --> 00:04:33,229
users that are actually running opennms

00:04:29,510 --> 00:04:36,470
but just in since august we've had five

00:04:33,229 --> 00:04:38,740
thousand unique installs of those

00:04:36,470 --> 00:04:42,680
installs are monitoring about

00:04:38,740 --> 00:04:45,080
360,000 nodes about the same number of

00:04:42,680 --> 00:04:48,680
IP interfaces which seems to be server

00:04:45,080 --> 00:04:50,990
centric in this case services on those

00:04:48,680 --> 00:04:55,849
interfaces about 700,000 that's like

00:04:50,990 --> 00:04:58,520
ICMP HTTP and then just switch ports I

00:04:55,849 --> 00:05:00,680
guess this is about three million switch

00:04:58,520 --> 00:05:07,660
physical ports of those on all those

00:05:00,680 --> 00:05:12,860
devices okay so kind of a timeline here

00:05:07,660 --> 00:05:15,440
we decided back in 2014 to change the

00:05:12,860 --> 00:05:18,560
way we release opennms and split that

00:05:15,440 --> 00:05:20,690
into two projects the way the opennms

00:05:18,560 --> 00:05:22,759
group actually sustains itself is

00:05:20,690 --> 00:05:26,570
through commercial services like support

00:05:22,759 --> 00:05:33,919
training sponsored features from our

00:05:26,570 --> 00:05:35,449
customers and perfect consulting what we

00:05:33,919 --> 00:05:37,520
were finding is that we were slowing

00:05:35,449 --> 00:05:39,289
down innovation in the project because

00:05:37,520 --> 00:05:43,550
the same code we were released into the

00:05:39,289 --> 00:05:45,889
community we were trying to support with

00:05:43,550 --> 00:05:48,340
our customers on an ongoing basis and

00:05:45,889 --> 00:05:50,930
give them a long term supported version

00:05:48,340 --> 00:05:52,669
so sometimes we would get contribution

00:05:50,930 --> 00:05:56,000
it would come in in the form of a patch

00:05:52,669 --> 00:05:58,250
we look at and we go I have no idea what

00:05:56,000 --> 00:06:00,020
this is going to do it's not unit tested

00:05:58,250 --> 00:06:01,849
I don't know what to do with it so it

00:06:00,020 --> 00:06:03,949
would sit there in our but issue

00:06:01,849 --> 00:06:06,110
tracking system forever and never get

00:06:03,949 --> 00:06:07,610
contributed we'd also be doing these

00:06:06,110 --> 00:06:09,590
sponsored projects that i told you about

00:06:07,610 --> 00:06:11,870
maybe two or three at a time for

00:06:09,590 --> 00:06:13,490
different customers and then we try to

00:06:11,870 --> 00:06:14,810
find a way to merge that make a stable

00:06:13,490 --> 00:06:17,479
release and then we tell all the

00:06:14,810 --> 00:06:20,169
customers we just really stable don't

00:06:17,479 --> 00:06:23,449
install it till we know that it's stable

00:06:20,169 --> 00:06:25,880
so I think this is the same problem that

00:06:23,449 --> 00:06:28,219
red had found and in the early days so

00:06:25,880 --> 00:06:30,020
that's why they split off fedora and and

00:06:28,219 --> 00:06:33,289
I guess at that time is called Red Hat

00:06:30,020 --> 00:06:36,050
advanced server now rel so horizon for

00:06:33,289 --> 00:06:38,120
us is like fedora and meridian is our

00:06:36,050 --> 00:06:39,800
long-term support reversion and what we

00:06:38,120 --> 00:06:41,719
do is we try to release as early as

00:06:39,800 --> 00:06:44,150
often like the open-source mantra it

00:06:41,719 --> 00:06:45,680
calls for with horizon as quickly as

00:06:44,150 --> 00:06:48,320
possible about once a quarter we have a

00:06:45,680 --> 00:06:51,590
new horizon release once a new horizon

00:06:48,320 --> 00:06:54,830
release is made so after four after 14

00:06:51,590 --> 00:06:58,160
we had 15 and to the N horizon 15 all

00:06:54,830 --> 00:07:00,410
new bug fixes go there 14 is done we

00:06:58,160 --> 00:07:02,330
don't we don't go back with meridian

00:07:00,410 --> 00:07:04,970
however we do have long-term support and

00:07:02,330 --> 00:07:07,280
by default it's three years so we

00:07:04,970 --> 00:07:10,460
created a foundation branch and anything

00:07:07,280 --> 00:07:12,680
that affects the current development

00:07:10,460 --> 00:07:14,300
release as well as Meridian we put we

00:07:12,680 --> 00:07:15,680
put those fixes in foundation and they

00:07:14,300 --> 00:07:20,900
percolate their way up into those

00:07:15,680 --> 00:07:22,250
releases I'm just going to kind of go

00:07:20,900 --> 00:07:24,380
through some of the major features that

00:07:22,250 --> 00:07:25,850
came with that in this timeline and

00:07:24,380 --> 00:07:27,770
probably not significant to you but

00:07:25,850 --> 00:07:30,470
significant to us was Java 8 there was a

00:07:27,770 --> 00:07:32,210
lot of improvements in Java 8 that we

00:07:30,470 --> 00:07:36,380
were able to take advantage of a lot of

00:07:32,210 --> 00:07:38,270
scripting framework stuff she'd I can't

00:07:36,380 --> 00:07:42,680
even think of him right now but some

00:07:38,270 --> 00:07:46,730
concurrency things but that it was

00:07:42,680 --> 00:07:49,670
significant for us we improved our link

00:07:46,730 --> 00:07:52,580
discovery so instead of simply looking

00:07:49,670 --> 00:07:57,170
at bridge tables we also look at CDP

00:07:52,580 --> 00:08:01,910
lldp ospf and is is forgetting

00:07:57,170 --> 00:08:03,380
relationships we also introduced a jmx

00:08:01,910 --> 00:08:06,560
configuration tool that runs from the

00:08:03,380 --> 00:08:08,000
command line that was interesting to me

00:08:06,560 --> 00:08:10,430
or ironic to me that for a long time

00:08:08,000 --> 00:08:13,130
opennms was a monitoring system that

00:08:10,430 --> 00:08:15,080
couldn't monitor itself that being a

00:08:13,130 --> 00:08:16,850
java application you need jmx for

00:08:15,080 --> 00:08:20,050
instrumentation and that's finally

00:08:16,850 --> 00:08:23,000
introduced in horizon 14 two years ago

00:08:20,050 --> 00:08:24,620
we also put these donut status charts on

00:08:23,000 --> 00:08:26,840
a geographical map looks something like

00:08:24,620 --> 00:08:28,550
this I was going to do a demo for you

00:08:26,840 --> 00:08:30,770
today as a matter of fact I'm trying to

00:08:28,550 --> 00:08:33,920
relax as much as possible i'm not going

00:08:30,770 --> 00:08:35,750
to do I'm not like Kelsey high tower

00:08:33,920 --> 00:08:37,400
with goober net he's going to get in

00:08:35,750 --> 00:08:38,840
there and do the live demo so I've just

00:08:37,400 --> 00:08:40,910
made a few videos that will show some

00:08:38,840 --> 00:08:43,420
things but I didn't make a presentation

00:08:40,910 --> 00:08:45,230
for I didn't make a demo for

00:08:43,420 --> 00:08:46,610
geographical maps but it looks something

00:08:45,230 --> 00:08:48,740
like this and I think you kind of get

00:08:46,610 --> 00:08:53,270
the idea you may see it in one of the

00:08:48,740 --> 00:08:55,240
videos as well we introduced in

00:08:53,270 --> 00:08:58,970
operations board so one of our customers

00:08:55,240 --> 00:09:02,120
came to us as a large pizza online pizza

00:08:58,970 --> 00:09:03,920
company in the United States and they

00:09:02,120 --> 00:09:05,089
had just redone their operations center

00:09:03,920 --> 00:09:07,879
and they put four

00:09:05,089 --> 00:09:09,860
huge screens up on their walls and what

00:09:07,879 --> 00:09:11,389
they wanted was opennms to be on those

00:09:09,860 --> 00:09:12,889
screens but they didn't want it to cover

00:09:11,389 --> 00:09:17,139
all four screens they had things they

00:09:12,889 --> 00:09:19,850
wanted to show so we wrote a rotating

00:09:17,139 --> 00:09:21,709
operations board that they could put up

00:09:19,850 --> 00:09:24,079
on one screen and they could select what

00:09:21,709 --> 00:09:26,959
they wanted to see rotate through on

00:09:24,079 --> 00:09:32,660
that operations board of course they can

00:09:26,959 --> 00:09:34,519
look at on their desktop as well the web

00:09:32,660 --> 00:09:37,430
app container we upgraded the jetty 8

00:09:34,519 --> 00:09:41,149
and that along with Java 8 also gave us

00:09:37,430 --> 00:09:44,899
some some better security we introduced

00:09:41,149 --> 00:09:47,149
bootstrap for theming the UI which helps

00:09:44,899 --> 00:09:51,139
separating the look and feel of Meridian

00:09:47,149 --> 00:09:52,579
from horizon and we introduced the

00:09:51,139 --> 00:09:56,509
measurements API which was very

00:09:52,579 --> 00:10:00,730
significant it's traditionally very

00:09:56,509 --> 00:10:03,379
difficult to get data out of our d files

00:10:00,730 --> 00:10:05,120
so the measurement API serve two

00:10:03,379 --> 00:10:07,850
purposes and you'll see those in some

00:10:05,120 --> 00:10:10,579
demos today the measurements API is

00:10:07,850 --> 00:10:12,800
rest-based and you can query opennms as

00:10:10,579 --> 00:10:16,399
rest interface to get the telemetry data

00:10:12,800 --> 00:10:18,499
out of the rrd repository you can also

00:10:16,399 --> 00:10:20,509
switch over to another persistent

00:10:18,499 --> 00:10:23,209
strategy as long as you're using the

00:10:20,509 --> 00:10:28,509
REST API you can get that same telemetry

00:10:23,209 --> 00:10:30,920
data that that measurements API became

00:10:28,509 --> 00:10:32,990
the foundation for being able to do

00:10:30,920 --> 00:10:35,300
other cool things like integration was

00:10:32,990 --> 00:10:39,069
with Ravana if you're not familiar with

00:10:35,300 --> 00:10:42,559
Griffin ogre fauna is an open-source

00:10:39,069 --> 00:10:44,420
dashboard that allows users to configure

00:10:42,559 --> 00:10:47,329
their own charts and put them to arrange

00:10:44,420 --> 00:10:49,160
them in their own way and we wrote a

00:10:47,329 --> 00:10:50,660
plug in the about a year and a half ago

00:10:49,160 --> 00:10:53,089
that integrates with your phone and it's

00:10:50,660 --> 00:10:55,429
a pretty significant thing for a lot of

00:10:53,089 --> 00:10:56,959
our customers and it was a the plugin is

00:10:55,429 --> 00:11:01,189
done and designed very well and I'll

00:10:56,959 --> 00:11:08,149
show you a demo on that here if I can

00:11:01,189 --> 00:11:11,660
let's see you think I had a hold on a

00:11:08,149 --> 00:11:13,990
second let's see it does say there's a

00:11:11,660 --> 00:11:13,990
link there

00:11:15,079 --> 00:11:30,240
let's try it again huh maybe you can't

00:11:22,800 --> 00:11:36,089
find the link let me see I'm going to

00:11:30,240 --> 00:11:39,690
put the real glasses on so just going to

00:11:36,089 --> 00:11:42,510
let that run so basically with Griffin I

00:11:39,690 --> 00:11:43,860
you can login create your own dashboard

00:11:42,510 --> 00:11:48,779
I'm going to create one here called Oh

00:11:43,860 --> 00:11:51,420
SMC can't see that heater sought to look

00:11:48,779 --> 00:11:52,589
up there and then add a graph panel and

00:11:51,420 --> 00:11:56,100
when you do that it automatically

00:11:52,589 --> 00:11:58,579
populates a graph with just fake data so

00:11:56,100 --> 00:12:00,600
I'm going to go in and redefine the

00:11:58,579 --> 00:12:02,459
definition of the graph give it its

00:12:00,600 --> 00:12:04,950
sizing and then I'm going to put some

00:12:02,459 --> 00:12:06,779
attributes on the graph so I'm going to

00:12:04,950 --> 00:12:09,930
switch to the open an MS data source

00:12:06,779 --> 00:12:12,180
plug-in add an attribute query the rest

00:12:09,930 --> 00:12:15,120
api look for a node this happens to be a

00:12:12,180 --> 00:12:18,300
router called mr Mackey in our in our in

00:12:15,120 --> 00:12:21,089
our office VLAN interface here for our

00:12:18,300 --> 00:12:22,649
land link go get an attribute like I

00:12:21,089 --> 00:12:25,709
afin octets I think you're probably

00:12:22,649 --> 00:12:27,870
familiar with that value of thumb if

00:12:25,709 --> 00:12:30,630
you've done SNMP in your network

00:12:27,870 --> 00:12:33,480
monitoring and then it automatically is

00:12:30,630 --> 00:12:36,750
populating the graph we also added

00:12:33,480 --> 00:12:39,779
support in our plug-in for filters and

00:12:36,750 --> 00:12:41,730
and filter one of these i just added

00:12:39,779 --> 00:12:44,459
here was a was an outlier filter so it

00:12:41,730 --> 00:12:47,810
would clean up the data before it sends

00:12:44,459 --> 00:12:50,279
it back to the UI we also have

00:12:47,810 --> 00:12:52,320
integration with the art project so we

00:12:50,279 --> 00:12:54,089
had a filter that we called trending so

00:12:52,320 --> 00:12:56,070
you can automatically add trend lines to

00:12:54,089 --> 00:12:59,130
the graphs so when you query the REST

00:12:56,070 --> 00:13:00,690
API you can ask for a trend and the

00:12:59,130 --> 00:13:02,610
trend and the current light and the

00:13:00,690 --> 00:13:05,190
query interface or the rest interface

00:13:02,610 --> 00:13:07,740
supports different attributes for those

00:13:05,190 --> 00:13:11,040
smoothing algorithms like seasonality

00:13:07,740 --> 00:13:12,690
and that kind of thing so now here I'm

00:13:11,040 --> 00:13:14,990
just kind of cleaning up the UI you can

00:13:12,690 --> 00:13:17,850
see there's a nice polynomial order

00:13:14,990 --> 00:13:23,329
driven drawn trend line on there and

00:13:17,850 --> 00:13:23,329
just going to add some things to the

00:13:23,390 --> 00:13:27,810
down at the bottom there to show a table

00:13:26,130 --> 00:13:31,410
of what the min Max and

00:13:27,810 --> 00:13:33,570
average values in the legend now Bafana

00:13:31,410 --> 00:13:35,820
has a pretty cool feature in it that you

00:13:33,570 --> 00:13:37,529
can just quickly duplicate so you can

00:13:35,820 --> 00:13:39,090
say oh I want to I want to duplicate

00:13:37,529 --> 00:13:40,500
this metric and then I'll as I did

00:13:39,090 --> 00:13:42,750
without doing any query I could just

00:13:40,500 --> 00:13:46,950
change the name of the of the attribute

00:13:42,750 --> 00:13:49,650
or the name of the the yeah the

00:13:46,950 --> 00:13:52,589
attribute of this particular resource to

00:13:49,650 --> 00:13:54,990
out octet and i'm going to change this

00:13:52,589 --> 00:13:57,270
filter to an expression our REST API

00:13:54,990 --> 00:13:58,950
allows you to put in a mathematical

00:13:57,270 --> 00:14:02,000
expression as well and here I'm just

00:13:58,950 --> 00:14:05,670
going to invert it by saying multiply x

00:14:02,000 --> 00:14:11,100
minus 1 sets a minus 1 or minus a that

00:14:05,670 --> 00:14:13,290
can notice one okay so that will draw

00:14:11,100 --> 00:14:15,330
that should put it on there and as a

00:14:13,290 --> 00:14:18,330
negative value you can also through

00:14:15,330 --> 00:14:20,970
grief onna put in some nice date ranges

00:14:18,330 --> 00:14:23,010
hit apply and there you go so you have

00:14:20,970 --> 00:14:25,770
trend lines for the in and out lock tets

00:14:23,010 --> 00:14:27,660
and completely integrated with core

00:14:25,770 --> 00:14:29,339
fauna now nice thing is is you can have

00:14:27,660 --> 00:14:34,560
multiple data sources on your dashboard

00:14:29,339 --> 00:14:37,440
so not only can you have data multiple

00:14:34,560 --> 00:14:39,630
opennms is running and putting metrics

00:14:37,440 --> 00:14:43,589
from them either on a graph or on in

00:14:39,630 --> 00:14:45,839
separate graphs you can also you can

00:14:43,589 --> 00:14:47,430
also use data sources in other places in

00:14:45,839 --> 00:14:50,190
the organization so graph from opennms

00:14:47,430 --> 00:14:52,140
graph from leasing or any other

00:14:50,190 --> 00:14:55,050
application that supports the graph on

00:14:52,140 --> 00:14:56,100
interface let's see if the link works

00:14:55,050 --> 00:14:58,880
well that's not going to work the

00:14:56,100 --> 00:15:03,890
backlinks not going to work because I

00:14:58,880 --> 00:15:03,890
didn't get there from there let's see

00:15:06,530 --> 00:15:13,539
sure that makes this more fun

00:15:10,270 --> 00:15:13,539
[Music]

00:15:20,390 --> 00:15:31,380
what's graphite just kidding interesting

00:15:27,810 --> 00:15:33,660
story about graphite a bit of network

00:15:31,380 --> 00:15:35,460
management a long time but one of our

00:15:33,660 --> 00:15:37,680
customers is sears holdings in the

00:15:35,460 --> 00:15:40,220
united states and a guy who wrote the

00:15:37,680 --> 00:15:43,640
guy who wrote graphite was working for

00:15:40,220 --> 00:15:46,110
sears at the time this is maybe 2006

00:15:43,640 --> 00:15:47,730
something like that and he called and

00:15:46,110 --> 00:15:49,350
said hey we want to use opennms because

00:15:47,730 --> 00:15:52,530
it has a powerful data collection engine

00:15:49,350 --> 00:15:54,420
but we think your graphing sucks so

00:15:52,530 --> 00:15:56,790
could you write something in opennms

00:15:54,420 --> 00:15:59,310
will sponsor it that will export the

00:15:56,790 --> 00:16:01,080
data as its collecting and I'll write a

00:15:59,310 --> 00:16:03,300
receiver so that's when we wrote at the

00:16:01,080 --> 00:16:05,790
Google protobuf integration with opennms

00:16:03,300 --> 00:16:09,810
that will stream the telemetry data to a

00:16:05,790 --> 00:16:11,790
receiver and then he did that took that

00:16:09,810 --> 00:16:14,370
data stored it in graphite and grafted

00:16:11,790 --> 00:16:16,800
in graphite we're not using graphite

00:16:14,370 --> 00:16:19,500
here we're still using rd right so the

00:16:16,800 --> 00:16:21,300
rest api just sits on top and so when

00:16:19,500 --> 00:16:23,970
you make queries we look either in the

00:16:21,300 --> 00:16:25,590
in the database for inventory and then

00:16:23,970 --> 00:16:27,000
when the inventory when you've picked

00:16:25,590 --> 00:16:29,640
your resource you want to graph then we

00:16:27,000 --> 00:16:32,190
go to the rrd and pull the data out for

00:16:29,640 --> 00:16:34,980
you using our dia tool integration and

00:16:32,190 --> 00:16:42,960
then we pop it back in as a JSON result

00:16:34,980 --> 00:16:45,210
in the REST API okay where was I okay so

00:16:42,960 --> 00:16:47,490
16 came and we introduced nutes now

00:16:45,210 --> 00:16:49,380
speaking of our rd one of the biggest

00:16:47,490 --> 00:16:51,060
problems we've had with opennms and

00:16:49,380 --> 00:16:54,270
probably spent way too much time on this

00:16:51,060 --> 00:16:57,480
is persistence of telemetry data when

00:16:54,270 --> 00:16:59,490
you're collecting millions of pieces of

00:16:57,480 --> 00:17:02,250
information from data all over a network

00:16:59,490 --> 00:17:04,200
I opennms has installs of up to thirty

00:17:02,250 --> 00:17:06,150
or forty thousand nodes right so it's

00:17:04,200 --> 00:17:09,050
trying to grab that data from all those

00:17:06,150 --> 00:17:12,360
nodes and get it into into a repository

00:17:09,050 --> 00:17:15,300
rrd is very disk intensive right so our

00:17:12,360 --> 00:17:18,180
TRD tool is designed for graphing not

00:17:15,300 --> 00:17:20,310
for high-performance persistence so once

00:17:18,180 --> 00:17:21,750
you get the data in rd it's very easy to

00:17:20,310 --> 00:17:24,990
get it back out on the screen quick

00:17:21,750 --> 00:17:27,120
right but we have written a lot of

00:17:24,990 --> 00:17:28,620
infrastructure to try to improve that so

00:17:27,120 --> 00:17:30,660
one of the things we did is we wrote a

00:17:28,620 --> 00:17:32,970
queuing mechanism so that we could

00:17:30,660 --> 00:17:34,890
optimize a right into our rd so if the

00:17:32,970 --> 00:17:36,660
persistence got behind the data

00:17:34,890 --> 00:17:39,660
collection it would store up all those

00:17:36,660 --> 00:17:41,520
operations and if I had 30 minutes of

00:17:39,660 --> 00:17:43,920
data to write it would write all that

00:17:41,520 --> 00:17:46,800
data at once to that Ardi rather than

00:17:43,920 --> 00:17:49,710
single transactions another thing we did

00:17:46,800 --> 00:17:52,110
with that queuing mechanism was about

00:17:49,710 --> 00:17:54,690
0.001% of the data you collect is

00:17:52,110 --> 00:17:56,550
actually what you graph but if somebody

00:17:54,690 --> 00:17:58,860
wanted to see the data that was sitting

00:17:56,550 --> 00:18:00,450
in a queue that's 30 minutes behind when

00:17:58,860 --> 00:18:02,520
somebody clicked the graph button it

00:18:00,450 --> 00:18:04,800
would send a message or an event into

00:18:02,520 --> 00:18:07,559
the persistence engine to say promote

00:18:04,800 --> 00:18:10,740
this data now and write it now so by the

00:18:07,559 --> 00:18:12,960
time the UI grafted it would be there so

00:18:10,740 --> 00:18:15,660
it was a lot of work that we were doing

00:18:12,960 --> 00:18:18,780
to try to overcome the obstacle getting

00:18:15,660 --> 00:18:20,580
data to disk now SSDs and and some

00:18:18,780 --> 00:18:23,580
storage technologies got a little better

00:18:20,580 --> 00:18:25,530
and our DS not an RD also self got

00:18:23,580 --> 00:18:29,030
multi-threaded so we could be so we

00:18:25,530 --> 00:18:31,170
updated our libraries for writing 2 r.d

00:18:29,030 --> 00:18:33,450
to be take advantage of multi-threading

00:18:31,170 --> 00:18:35,490
but still once you've bottle net the

00:18:33,450 --> 00:18:37,740
desk bottleneck to the disk there's

00:18:35,490 --> 00:18:39,870
nothing else you can do no matter how

00:18:37,740 --> 00:18:41,910
many threads you're saying to send data

00:18:39,870 --> 00:18:44,179
it's just going to it's going to stop

00:18:41,910 --> 00:18:44,179
there

00:18:59,840 --> 00:19:04,520
well that's cool I I'll talk to you

00:19:02,929 --> 00:19:07,070
about that after the after after the

00:19:04,520 --> 00:19:10,309
talk but one of the things we says it's

00:19:07,070 --> 00:19:12,620
still not linearly scalable right and we

00:19:10,309 --> 00:19:14,150
have a lot of customers with operations

00:19:12,620 --> 00:19:15,620
and data centers that we thought well we

00:19:14,150 --> 00:19:18,710
really need to take on a more data

00:19:15,620 --> 00:19:20,570
centric view so we invented a project

00:19:18,710 --> 00:19:23,690
called Newton go to new style and check

00:19:20,570 --> 00:19:26,900
this out nutes is a big data persistent

00:19:23,690 --> 00:19:29,059
storage built on apache cassandra that

00:19:26,900 --> 00:19:32,380
instead of writing 2 r.d we write it

00:19:29,059 --> 00:19:35,330
into cassandra we built our own schema

00:19:32,380 --> 00:19:37,630
I'm checking my time reboot our own

00:19:35,330 --> 00:19:41,149
schema so that you could get the data

00:19:37,630 --> 00:19:43,789
sorry we built our own schema and you

00:19:41,149 --> 00:19:46,100
can now scale your persistence linearly

00:19:43,789 --> 00:19:48,440
without having to worry about trying to

00:19:46,100 --> 00:19:51,799
get a server to write data as quickly as

00:19:48,440 --> 00:19:53,870
possible so if you get slow you can just

00:19:51,799 --> 00:19:55,580
install another Cassandra instance in

00:19:53,870 --> 00:19:59,480
your cluster and you've just increased

00:19:55,580 --> 00:20:04,750
your your storage capacity exponentially

00:19:59,480 --> 00:20:04,750
as well as you're getting a che right so

00:20:04,870 --> 00:20:09,260
you have a high availability in your

00:20:07,070 --> 00:20:11,419
storage now as well as being able to

00:20:09,260 --> 00:20:12,679
have multiple opennms as point to the

00:20:11,419 --> 00:20:17,659
same storage without having to use

00:20:12,679 --> 00:20:19,610
something like NFS for your rd's it

00:20:17,659 --> 00:20:24,260
replaces all ready to like I said here

00:20:19,610 --> 00:20:26,600
yeah thank you toby and we are we also

00:20:24,260 --> 00:20:29,360
had a java version of our ID that people

00:20:26,600 --> 00:20:30,980
would use if they didn't like a of the

00:20:29,360 --> 00:20:32,720
maybe one or two users in the world that

00:20:30,980 --> 00:20:35,870
run open unmess on windows we didn't

00:20:32,720 --> 00:20:38,899
have to do binaries with a for that

00:20:35,870 --> 00:20:40,460
platform so some of the challenges when

00:20:38,899 --> 00:20:42,710
you get rid of our addy tool or a

00:20:40,460 --> 00:20:44,899
detailed brings a lot to the table so

00:20:42,710 --> 00:20:48,200
obviously persistence right you need to

00:20:44,899 --> 00:20:49,909
be able to store graphing came with

00:20:48,200 --> 00:20:53,149
already tools so we had to get our own

00:20:49,909 --> 00:20:54,980
graphing drawing that's the the drawing

00:20:53,149 --> 00:20:56,299
part you need a query language for

00:20:54,980 --> 00:20:58,100
getting the data out so users can

00:20:56,299 --> 00:21:01,100
actually asks know how to define a graph

00:20:58,100 --> 00:21:03,470
and ask for for data and that is the

00:21:01,100 --> 00:21:05,690
graph definition language so a really

00:21:03,470 --> 00:21:07,580
cool thing we did with opennms is we

00:21:05,690 --> 00:21:10,070
said we want to abstract that away from

00:21:07,580 --> 00:21:13,220
the user so we continue to keep the same

00:21:10,070 --> 00:21:16,580
query and graph definition language

00:21:13,220 --> 00:21:18,110
rd tool uses and we support that going

00:21:16,580 --> 00:21:20,780
in to get the data out of Cassandra so

00:21:18,110 --> 00:21:23,419
you don't have to go redo all the graph

00:21:20,780 --> 00:21:25,220
definitions and opennms just keep using

00:21:23,419 --> 00:21:27,110
the same ones you have well just get the

00:21:25,220 --> 00:21:33,620
data out of Cassandra instead of the rrd

00:21:27,110 --> 00:21:36,799
store the the project we created for

00:21:33,620 --> 00:21:39,260
graphing are and we still use the same

00:21:36,799 --> 00:21:43,610
graph style as we created a java script

00:21:39,260 --> 00:21:46,730
tool for graphing rrd like graphs that

00:21:43,610 --> 00:21:49,010
are defined in the rd graph language i'm

00:21:46,730 --> 00:21:52,100
going to try this again it doesn't seem

00:21:49,010 --> 00:22:01,429
to want to work it's not working I don't

00:21:52,100 --> 00:22:09,020
know why I do have a demo of that there

00:22:01,429 --> 00:22:10,760
we go is it running yep there we go so

00:22:09,020 --> 00:22:13,340
that's the open MS home screen screen I

00:22:10,760 --> 00:22:19,159
queried for the same note that I showed

00:22:13,340 --> 00:22:21,830
you in ger fauna look at that cool video

00:22:19,159 --> 00:22:23,570
editing is I did pick the same interface

00:22:21,830 --> 00:22:25,280
pull it up on the open on the default

00:22:23,570 --> 00:22:30,230
opennms I think I sped this up a little

00:22:25,280 --> 00:22:32,480
too fast but um same interface same same

00:22:30,230 --> 00:22:37,520
data now here's the same graph but this

00:22:32,480 --> 00:22:39,409
time it's it's done drawing with back

00:22:37,520 --> 00:22:41,270
shift and you can see that it's more

00:22:39,409 --> 00:22:43,370
interactive right it's JavaScript so we

00:22:41,270 --> 00:22:45,919
can scroll right there inside it without

00:22:43,370 --> 00:22:49,340
having to you know just try to do crazy

00:22:45,919 --> 00:22:51,200
clever things with with an image and we

00:22:49,340 --> 00:22:53,750
also show you the data behind it so you

00:22:51,200 --> 00:22:55,250
can copy it copy it out and paste it

00:22:53,750 --> 00:22:57,860
into Excel or something like that right

00:22:55,250 --> 00:23:02,750
so we've automatically formatted so it

00:22:57,860 --> 00:23:04,700
will fit into a spreadsheet we also can

00:23:02,750 --> 00:23:05,870
do this graphing in real time so if

00:23:04,700 --> 00:23:07,700
you're trying to diagnose something

00:23:05,870 --> 00:23:09,620
while you're looking at a graph you can

00:23:07,700 --> 00:23:12,050
say show me in real time change instead

00:23:09,620 --> 00:23:13,850
of the default interval

00:23:12,050 --> 00:23:16,040
every five minutes if I changed it here

00:23:13,850 --> 00:23:18,200
25 seconds you can see it's collecting

00:23:16,040 --> 00:23:19,790
the data and it's compressing right now

00:23:18,200 --> 00:23:26,960
but once it gets to two minutes the data

00:23:19,790 --> 00:23:29,000
will start sliding off to the left there

00:23:26,960 --> 00:23:30,650
it goes and then you can also then go

00:23:29,000 --> 00:23:42,140
back and turn compression back on if you

00:23:30,650 --> 00:23:46,670
want and all that graphene is I'd done

00:23:42,140 --> 00:23:50,000
in JavaScript we also support the the

00:23:46,670 --> 00:23:52,760
trending and forecasting in the in the

00:23:50,000 --> 00:23:54,530
in the user interface so here I am I'm

00:23:52,760 --> 00:23:57,110
coming in picking a seasonality of a

00:23:54,530 --> 00:24:00,340
week and I said so that went pretty

00:23:57,110 --> 00:24:03,260
quick so what I did there was I said I

00:24:00,340 --> 00:24:05,320
want it this was a graph to show me for

00:24:03,260 --> 00:24:08,600
a week's worth of data but when you do

00:24:05,320 --> 00:24:12,980
trending you need a lot of data so I

00:24:08,600 --> 00:24:17,210
said go back 120 days get all that data

00:24:12,980 --> 00:24:19,940
and then I want to show up to the last

00:24:17,210 --> 00:24:22,580
30 days in this graph and then I want to

00:24:19,940 --> 00:24:25,310
predict its I think I put in there one

00:24:22,580 --> 00:24:27,530
season which was a week so I had seven

00:24:25,310 --> 00:24:29,780
days in the seasonality seems like in

00:24:27,530 --> 00:24:31,490
most of our customer sites that the

00:24:29,780 --> 00:24:33,380
seasonality of data Wednesday's look

00:24:31,490 --> 00:24:37,070
like wednesdays thursdays like thursdays

00:24:33,380 --> 00:24:39,950
saturdays look like Saturday's so and

00:24:37,070 --> 00:24:42,080
here I said I also want you to draw the

00:24:39,950 --> 00:24:45,110
trend line as if I would have predicted

00:24:42,080 --> 00:24:47,390
it 30 days ago right so I could see how

00:24:45,110 --> 00:24:49,400
well our prediction algorithm is

00:24:47,390 --> 00:24:51,410
actually working so that's the blue line

00:24:49,400 --> 00:24:53,420
there that prediction showing how we

00:24:51,410 --> 00:24:56,150
would have predicted it if you were

00:24:53,420 --> 00:24:57,830
looking back 30 days ago so I could know

00:24:56,150 --> 00:25:02,990
whether how much confidence I would have

00:24:57,830 --> 00:25:06,170
in this prediction line as well as as

00:25:02,990 --> 00:25:07,940
well as the trending they're looking out

00:25:06,170 --> 00:25:09,650
to the future so I can be confident and

00:25:07,940 --> 00:25:12,890
those red lines are confidence bounds

00:25:09,650 --> 00:25:16,280
but you can even see that the if the

00:25:12,890 --> 00:25:17,780
trend line shows that that the data

00:25:16,280 --> 00:25:21,950
utilization is going down on this

00:25:17,780 --> 00:25:23,210
interface I don't know why the clicking

00:25:21,950 --> 00:25:26,620
is not working I think it's got

00:25:23,210 --> 00:25:26,620
something to do with the two displays

00:25:27,310 --> 00:25:43,660
Lord we're going back to the real

00:25:30,140 --> 00:25:43,660
glasses yeah that's not it there we go

00:25:45,280 --> 00:25:51,800
okay so to get that analysis we

00:25:48,650 --> 00:25:53,570
integrated with the art project so we we

00:25:51,800 --> 00:25:56,420
wrote some Jane I code and that kind of

00:25:53,570 --> 00:25:58,970
thing to be able to call the algorithms

00:25:56,420 --> 00:26:02,090
that are contributed from statistics

00:25:58,970 --> 00:26:06,440
geeks into the ARP open source art

00:26:02,090 --> 00:26:08,660
project opennms also has a reporting

00:26:06,440 --> 00:26:10,010
engine so if you want to do like Crystal

00:26:08,660 --> 00:26:11,780
Reports style reporting there's a

00:26:10,010 --> 00:26:14,330
project called jasperreports we embedded

00:26:11,780 --> 00:26:17,750
the Jasper reporting engine in opennms

00:26:14,330 --> 00:26:20,120
you can use Jasper design studio and you

00:26:17,750 --> 00:26:21,950
can query our database and our

00:26:20,120 --> 00:26:24,110
measurements API through a Jasper data

00:26:21,950 --> 00:26:26,900
source that we provide and you can

00:26:24,110 --> 00:26:28,760
define your own PDF graphs HD HTML

00:26:26,900 --> 00:26:31,790
graphs whatever and have those run on

00:26:28,760 --> 00:26:33,470
the schedule and emailed to you but we

00:26:31,790 --> 00:26:36,650
updated in a horizon 17 to take

00:26:33,470 --> 00:26:38,690
advantage of newts also I have heat maps

00:26:36,650 --> 00:26:40,190
inside opennms I was going to do a demo

00:26:38,690 --> 00:26:42,260
of this but this is pretty simple you

00:26:40,190 --> 00:26:44,510
can you know with a heat map you can

00:26:42,260 --> 00:26:46,520
kind of find places you and roll through

00:26:44,510 --> 00:26:48,140
there that you weren't able to see just

00:26:46,520 --> 00:26:50,840
looking at like a list of events or

00:26:48,140 --> 00:26:53,240
something like that I put in single

00:26:50,840 --> 00:26:55,160
sign-on support in this version and we

00:26:53,240 --> 00:26:59,240
had four crew and for kerberos

00:26:55,160 --> 00:27:01,400
authentication or Kerberos tickets we

00:26:59,240 --> 00:27:07,400
now move jmx configuration from the

00:27:01,400 --> 00:27:09,470
command line to the web UI and we

00:27:07,400 --> 00:27:11,300
created northbound interfaces we had a

00:27:09,470 --> 00:27:13,490
project with Dell where they embedded

00:27:11,300 --> 00:27:16,010
opennms in their cloud in a box solution

00:27:13,490 --> 00:27:17,090
and they needed northbound api's for the

00:27:16,010 --> 00:27:21,590
customer and we went ahead and

00:27:17,090 --> 00:27:26,630
implemented those for them integration

00:27:21,590 --> 00:27:29,000
with otrs was upgraded 3.1 plus and we

00:27:26,630 --> 00:27:31,280
have a very nice ascii documentation

00:27:29,000 --> 00:27:34,010
from one of the Bane's of opennms and

00:27:31,280 --> 00:27:36,380
probably most this thing keeps falling

00:27:34,010 --> 00:27:39,280
off most open source projects is

00:27:36,380 --> 00:27:41,630
documentation but thanks to

00:27:39,280 --> 00:27:45,520
contributors like Ronnie charmer we now

00:27:41,630 --> 00:27:47,330
have a really nice esky doc based

00:27:45,520 --> 00:27:49,430
documentation project that runs right

00:27:47,330 --> 00:27:52,940
along side with the development part of

00:27:49,430 --> 00:27:55,040
the development process is to if it's a

00:27:52,940 --> 00:27:56,720
new feature before when a reviewer

00:27:55,040 --> 00:28:00,950
reviews your code you have to have

00:27:56,720 --> 00:28:02,360
documentation as well and the and the

00:28:00,950 --> 00:28:06,500
nice thing is the documentation is

00:28:02,360 --> 00:28:08,300
versioned with the project I an 18 we

00:28:06,500 --> 00:28:10,190
also updated to polycotton topology

00:28:08,300 --> 00:28:11,750
icons as well as user been able to right

00:28:10,190 --> 00:28:14,570
click on an icon and say I want to

00:28:11,750 --> 00:28:18,710
change this icon to some library of

00:28:14,570 --> 00:28:20,420
icons that are in opennms and we

00:28:18,710 --> 00:28:22,250
introduced business service monitoring

00:28:20,420 --> 00:28:24,260
this is another demo that's not going to

00:28:22,250 --> 00:28:25,580
click work when i click on it but i'll

00:28:24,260 --> 00:28:27,890
show it to you anyway but just to

00:28:25,580 --> 00:28:29,600
explain business service monitoring was

00:28:27,890 --> 00:28:31,340
sponsored by the united states patent

00:28:29,600 --> 00:28:33,800
and trade office they wanted they have

00:28:31,340 --> 00:28:35,510
an amazing amount of infrastructure that

00:28:33,800 --> 00:28:37,100
they they monitor they want to be able

00:28:35,510 --> 00:28:39,050
to look at things at a higher level of

00:28:37,100 --> 00:28:41,810
abstraction you want to be able to see

00:28:39,050 --> 00:28:43,880
things represented as services that the

00:28:41,810 --> 00:28:46,100
lines of business provide and only be

00:28:43,880 --> 00:28:50,270
notified when those things are those

00:28:46,100 --> 00:28:53,710
those services are impacted no this is

00:28:50,270 --> 00:28:53,710
not going to work I'm not even gonna try

00:28:55,420 --> 00:29:01,270
let's see there we go

00:29:07,800 --> 00:29:12,340
so the business service hierarchy is

00:29:10,330 --> 00:29:15,280
displayed in our topology framework so

00:29:12,340 --> 00:29:18,220
the topology implementation in opennms

00:29:15,280 --> 00:29:20,980
has a very nice set of api's for putting

00:29:18,220 --> 00:29:23,620
in any topology and in this case we put

00:29:20,980 --> 00:29:25,870
into business service topology the open

00:29:23,620 --> 00:29:27,490
nms topology interfaces focal point

00:29:25,870 --> 00:29:29,290
driven and when you navigate to it if

00:29:27,490 --> 00:29:31,240
you haven't specified like from another

00:29:29,290 --> 00:29:33,220
place in you I clicking on a link a

00:29:31,240 --> 00:29:34,840
focal point then it picks one

00:29:33,220 --> 00:29:37,120
automatically in that case it came up

00:29:34,840 --> 00:29:39,340
with one but i changed it by searching i

00:29:37,120 --> 00:29:41,380
searched for the blog business service

00:29:39,340 --> 00:29:44,980
business service icon looks like these

00:29:41,380 --> 00:29:47,650
little briefcases and we're now

00:29:44,980 --> 00:29:49,600
navigating there there was a saved

00:29:47,650 --> 00:29:51,429
version of the layout so when i clicked

00:29:49,600 --> 00:29:54,880
on that saved version it restored that

00:29:51,429 --> 00:29:57,250
layout i can now change it and like that

00:29:54,880 --> 00:30:01,270
alarm icon setting off there so i can

00:29:57,250 --> 00:30:03,100
move it over hit save and it will

00:30:01,270 --> 00:30:04,750
persist it that way now some of the

00:30:03,100 --> 00:30:06,910
semantics about the interface is that

00:30:04,750 --> 00:30:13,270
you can change the number of hops away

00:30:06,910 --> 00:30:15,370
from the focal point so i think did i do

00:30:13,270 --> 00:30:16,480
that no I I think I switch the layouts

00:30:15,370 --> 00:30:19,030
or something to show that I could

00:30:16,480 --> 00:30:22,150
restore the layout there so I can

00:30:19,030 --> 00:30:24,280
increase the the zoom so I zoomed out in

00:30:22,150 --> 00:30:27,670
terms of hops away from the focal point

00:30:24,280 --> 00:30:30,820
and I went to four hops away and it now

00:30:27,670 --> 00:30:32,890
showing all the alarms in the system I'm

00:30:30,820 --> 00:30:34,030
also able to zoom to the focal point

00:30:32,890 --> 00:30:36,610
over there and left has that little

00:30:34,030 --> 00:30:38,679
indicator to zoom to it I can hit the

00:30:36,610 --> 00:30:40,150
global view and it'll zoom back out and

00:30:38,679 --> 00:30:43,179
I can also hit this what i call the

00:30:40,150 --> 00:30:46,290
magic I button in a review reveal which

00:30:43,179 --> 00:30:49,950
icon is the focal point of this of this

00:30:46,290 --> 00:30:52,179
particular set of of this context we

00:30:49,950 --> 00:30:54,040
build a simulation mode so one of the

00:30:52,179 --> 00:30:56,980
things that we did is how do we

00:30:54,040 --> 00:30:58,330
represent status up the hierarchy when

00:30:56,980 --> 00:31:00,970
alarms are happening I need to be able

00:30:58,330 --> 00:31:02,860
to propagate that status up the

00:31:00,970 --> 00:31:05,230
hierarchy in a way that makes sense and

00:31:02,860 --> 00:31:07,990
give you some fine grained control and

00:31:05,230 --> 00:31:13,030
what we did is we introduced a MapReduce

00:31:07,990 --> 00:31:15,250
technology so when when when an alarm

00:31:13,030 --> 00:31:19,030
happens you can come over here you see

00:31:15,250 --> 00:31:21,460
I'm using a mapping function that says

00:31:19,030 --> 00:31:23,050
map identity so if this is a warning

00:31:21,460 --> 00:31:26,440
that's going to map it as a warning up

00:31:23,050 --> 00:31:28,600
into this service and that service has a

00:31:26,440 --> 00:31:31,420
reach a reduction function so if I'm

00:31:28,600 --> 00:31:33,610
getting multiple inputs what how do I

00:31:31,420 --> 00:31:37,480
decide which one of those inputs to use

00:31:33,610 --> 00:31:39,850
so it's a MapReduce algorithm and you

00:31:37,480 --> 00:31:44,740
can see that it did percolate up here

00:31:39,850 --> 00:31:47,470
and on this on that edge there is there

00:31:44,740 --> 00:31:49,990
is a mapping function that says if this

00:31:47,470 --> 00:31:52,570
is whatever alarm this is I don't care

00:31:49,990 --> 00:31:56,080
what it is I'm going to set it to critic

00:31:52,570 --> 00:31:58,030
or major so that's why it changed from

00:31:56,080 --> 00:31:59,950
learning here to major and that's why

00:31:58,030 --> 00:32:02,140
and this one says take the highest

00:31:59,950 --> 00:32:04,300
severity of all these and so it's major

00:32:02,140 --> 00:32:08,530
as well and propagated it up to the top

00:32:04,300 --> 00:32:12,040
now you get alarms every time a business

00:32:08,530 --> 00:32:14,560
service changes its state so instead of

00:32:12,040 --> 00:32:15,910
watching all these faults down here you

00:32:14,560 --> 00:32:17,950
can just be watching for business

00:32:15,910 --> 00:32:23,680
service alarms if you're the owner of

00:32:17,950 --> 00:32:25,330
that line of business so what I'm going

00:32:23,680 --> 00:32:28,330
to show you here we also implemented a

00:32:25,330 --> 00:32:35,230
root cause analysis and impact analysis

00:32:28,330 --> 00:32:37,120
in the UI so if I had navigated from an

00:32:35,230 --> 00:32:41,560
alarm to here to show that the blog

00:32:37,120 --> 00:32:43,270
service was in a in a severity state and

00:32:41,560 --> 00:32:45,640
I could right click on it I could say

00:32:43,270 --> 00:32:47,470
show me the root cause and it will drill

00:32:45,640 --> 00:32:50,170
down through that hierarchy however big

00:32:47,470 --> 00:32:52,710
it is and show you what alarm is causing

00:32:50,170 --> 00:32:55,990
this problem for this business service

00:32:52,710 --> 00:32:58,840
you can go the other direction so this

00:32:55,990 --> 00:33:00,460
is forward and backward chaining so what

00:32:58,840 --> 00:33:02,110
i did was i removed that made this the

00:33:00,460 --> 00:33:04,630
focal point i said if i come here from

00:33:02,110 --> 00:33:06,910
the alarm tell me what business services

00:33:04,630 --> 00:33:08,590
are impacted by this alarm so i can say

00:33:06,910 --> 00:33:11,650
do impact analysis and we'll go the

00:33:08,590 --> 00:33:18,070
other way what alarms are causing

00:33:11,650 --> 00:33:23,440
problems with my business service is

00:33:18,070 --> 00:33:25,470
that it that's it now back to where we

00:33:23,440 --> 00:33:25,470
were

00:33:27,750 --> 00:33:34,740
I think that's it yep so that was in

00:33:31,980 --> 00:33:37,620
horizon 18 we also have elasticsearch

00:33:34,740 --> 00:33:39,420
integration so alarms and events that

00:33:37,620 --> 00:33:41,460
are happening and opennms no matter

00:33:39,420 --> 00:33:44,660
where they're coming from also get

00:33:41,460 --> 00:33:48,060
pushed into elasticsearch and you can do

00:33:44,660 --> 00:33:50,730
forensics on your event alarm data which

00:33:48,060 --> 00:33:52,800
would be try apsis logs other logging

00:33:50,730 --> 00:33:54,780
data that are coming from the systems

00:33:52,800 --> 00:34:01,340
that are reporting into the nms as well

00:33:54,780 --> 00:34:03,750
as the alarms on top of that we have

00:34:01,340 --> 00:34:05,760
notification in an open engine and

00:34:03,750 --> 00:34:09,270
opennms it has fairly complex workflows

00:34:05,760 --> 00:34:11,490
so you know initial targets escalations

00:34:09,270 --> 00:34:13,560
all those kind of cool things we also do

00:34:11,490 --> 00:34:15,149
select and matter most notifications as

00:34:13,560 --> 00:34:19,950
this was a plug-in it was introduced in

00:34:15,149 --> 00:34:21,629
18 we have a third-party licensable

00:34:19,950 --> 00:34:23,879
plug-in manager so if you want to write

00:34:21,629 --> 00:34:25,200
something and open at a mess that you

00:34:23,879 --> 00:34:26,879
don't want to open source and you want

00:34:25,200 --> 00:34:29,370
to sell it and we have some vendors that

00:34:26,879 --> 00:34:31,470
embed opennms and they do this we have a

00:34:29,370 --> 00:34:32,850
licensing infrastructure of Licensing

00:34:31,470 --> 00:34:39,480
plug-in infrastructure and open and mess

00:34:32,850 --> 00:34:41,639
for doing that we have a scan report so

00:34:39,480 --> 00:34:43,919
this is something that a customer of

00:34:41,639 --> 00:34:45,629
ours that has a lot of branch offices

00:34:43,919 --> 00:34:48,450
needed to be able to give to sales

00:34:45,629 --> 00:34:50,820
people when they were out as well as

00:34:48,450 --> 00:34:55,080
technicians so they could go to a

00:34:50,820 --> 00:34:57,660
customer side go to the open MS web UI

00:34:55,080 --> 00:34:59,400
and say run a test from here to make

00:34:57,660 --> 00:35:01,830
sure the applications work from this

00:34:59,400 --> 00:35:03,330
customers network and it lets them i

00:35:01,830 --> 00:35:05,090
wish i had the demo but lets you pick

00:35:03,330 --> 00:35:07,230
what applications you want to test it

00:35:05,090 --> 00:35:10,530
runs through that test and it gives you

00:35:07,230 --> 00:35:11,940
a red x or a green checkmark you can

00:35:10,530 --> 00:35:13,410
also if you're a technician you can

00:35:11,940 --> 00:35:15,270
total and you can see what the problems

00:35:13,410 --> 00:35:16,980
were that and all the response times for

00:35:15,270 --> 00:35:19,290
all the things you were testing but at

00:35:16,980 --> 00:35:21,390
the same time publishes a report on the

00:35:19,290 --> 00:35:23,750
opennms server that the operation center

00:35:21,390 --> 00:35:26,520
can look at so this is a remote

00:35:23,750 --> 00:35:28,530
diagnostics tool without and it's all

00:35:26,520 --> 00:35:30,450
runs in the browser you don't have to

00:35:28,530 --> 00:35:31,890
all right yeah runs from the browser you

00:35:30,450 --> 00:35:35,100
don't have to really install anything or

00:35:31,890 --> 00:35:38,850
taking anything with you where you have

00:35:35,100 --> 00:35:40,500
a I bmt SRM integration the use of

00:35:38,850 --> 00:35:41,460
statistic plug-in I talked about a

00:35:40,500 --> 00:35:45,450
minute ago

00:35:41,460 --> 00:35:47,280
and we have another demo project atlas

00:35:45,450 --> 00:35:53,220
so one of our customers came to us and

00:35:47,280 --> 00:35:54,869
said you know lldp bridge myth is is all

00:35:53,220 --> 00:35:56,700
those technologies used to discover

00:35:54,869 --> 00:35:58,770
topology are great but we have a

00:35:56,700 --> 00:36:01,349
topology you can't discover but we know

00:35:58,770 --> 00:36:02,790
that topology it's a very large network

00:36:01,349 --> 00:36:05,790
and we don't want to sit there and draw

00:36:02,790 --> 00:36:08,400
things we have it in our cmdb we need an

00:36:05,790 --> 00:36:12,330
API for getting that in opennms that's

00:36:08,400 --> 00:36:19,970
what we call project Atlas and I have a

00:36:12,330 --> 00:36:26,580
demo same story different day ok see

00:36:19,970 --> 00:36:30,210
atlas there we go so Atlas again is

00:36:26,580 --> 00:36:36,270
integrated with the topology and let's

00:36:30,210 --> 00:36:37,920
see how did I do here so this is this is

00:36:36,270 --> 00:36:40,619
the default topology but I'm showing you

00:36:37,920 --> 00:36:42,390
here is that with open MS you have all

00:36:40,619 --> 00:36:44,790
these different topologies that you can

00:36:42,390 --> 00:36:46,890
look at but the Atlas or the or the one

00:36:44,790 --> 00:36:48,180
defined for an atlas project was not

00:36:46,890 --> 00:36:51,330
there I was going to show you how you

00:36:48,180 --> 00:36:55,710
can do this dynamically so the the graph

00:36:51,330 --> 00:36:59,400
is defined in XML and there's a REST API

00:36:55,710 --> 00:37:01,800
for getting that graph in opennms so you

00:36:59,400 --> 00:37:04,640
from your cmdb you can program this

00:37:01,800 --> 00:37:07,109
graph directly as changes are happening

00:37:04,640 --> 00:37:09,359
so I show you here i'm just using curl

00:37:07,109 --> 00:37:12,270
to push that in as one single document

00:37:09,359 --> 00:37:19,170
and then i go back to the open and msu I

00:37:12,270 --> 00:37:20,849
I think oh I've just going to show you

00:37:19,170 --> 00:37:22,980
that where that lives so once you push

00:37:20,849 --> 00:37:25,050
it in in the graph ml directory this

00:37:22,980 --> 00:37:27,119
graph ml is a spec for how to define

00:37:25,050 --> 00:37:29,910
graphs and XML that we used it was a

00:37:27,119 --> 00:37:34,290
standard so now when you go back to the

00:37:29,910 --> 00:37:37,410
UI and look for the you will see that

00:37:34,290 --> 00:37:40,200
there's a big net topology and when you

00:37:37,410 --> 00:37:42,359
click that it'll switch that to apology

00:37:40,200 --> 00:37:44,400
provider and then now it goes to this

00:37:42,359 --> 00:37:48,440
hierarchy based and Atlas lets you

00:37:44,400 --> 00:37:51,690
define hierarchies or layers of topology

00:37:48,440 --> 00:37:52,980
so when you click the little hamburger

00:37:51,690 --> 00:37:55,050
menu there you can see all the different

00:37:52,980 --> 00:37:57,090
layers so I had area

00:37:55,050 --> 00:38:02,580
bazaar's pops these are all just made up

00:37:57,090 --> 00:38:04,410
things but go to champagne and go into

00:38:02,580 --> 00:38:06,870
the pop and champagne go to the show me

00:38:04,410 --> 00:38:10,740
the Pops and champagne and then I can go

00:38:06,870 --> 00:38:15,240
to the opennms hundred percent very

00:38:10,740 --> 00:38:18,060
millennial and I have drill into their

00:38:15,240 --> 00:38:19,740
as you see as I'm clicking navigate to

00:38:18,060 --> 00:38:22,560
it's going down through the layers but

00:38:19,740 --> 00:38:28,140
only in the context of that location so

00:38:22,560 --> 00:38:30,600
now I'm in the racks a later and now i

00:38:28,140 --> 00:38:33,090
have a topology that was provisioned

00:38:30,600 --> 00:38:35,370
from atlas so here's this here's the

00:38:33,090 --> 00:38:38,100
source and here's the target so your

00:38:35,370 --> 00:38:42,630
your graph ml will allow you to define

00:38:38,100 --> 00:38:44,010
what topology looks like in your what

00:38:42,630 --> 00:38:47,280
you want it to look like now you can

00:38:44,010 --> 00:38:49,460
also manually change this so once if

00:38:47,280 --> 00:38:51,990
you're if the if the layout provider

00:38:49,460 --> 00:38:53,430
didn't pick a layout like you want it to

00:38:51,990 --> 00:38:57,750
see you can still move it around hit

00:38:53,430 --> 00:38:59,190
save and it'll save it the way that you

00:38:57,750 --> 00:39:04,910
want to see it next time you navigate

00:38:59,190 --> 00:39:25,110
here it'll be this way I think that's it

00:39:04,910 --> 00:39:27,780
yeah okay yep so that's still horizon 19

00:39:25,110 --> 00:39:29,880
so 19 I guess looking at that date there

00:39:27,780 --> 00:39:32,660
you can see was is scheduled to be

00:39:29,880 --> 00:39:35,370
released this month so right now we're

00:39:32,660 --> 00:39:37,110
quite busily working on the last minute

00:39:35,370 --> 00:39:38,790
bugs and there's a few little blockers

00:39:37,110 --> 00:39:41,550
if you go to the issue tracking system

00:39:38,790 --> 00:39:44,790
issues that opennms org you can go to

00:39:41,550 --> 00:39:46,380
project to horizon and you can see what

00:39:44,790 --> 00:39:48,030
blockers are left there is about there's

00:39:46,380 --> 00:39:51,930
two or three blockers left we're working

00:39:48,030 --> 00:39:53,970
on we also have a really exciting

00:39:51,930 --> 00:39:57,420
project open MS called open MS minion

00:39:53,970 --> 00:40:00,000
minion is a distributed framework for

00:39:57,420 --> 00:40:03,390
opennms it's a stateless little micro

00:40:00,000 --> 00:40:06,450
service piece of technology that you can

00:40:03,390 --> 00:40:10,400
put in branch offices locations that you

00:40:06,450 --> 00:40:10,400
can't see from your data center

00:40:10,560 --> 00:40:15,430
this thing keeps falling on so you put

00:40:13,840 --> 00:40:18,690
minion out in your branch office and

00:40:15,430 --> 00:40:22,030
then open at a mess when you decide to

00:40:18,690 --> 00:40:23,410
say I needed to run discovery it sends a

00:40:22,030 --> 00:40:25,030
message to that minion the minion

00:40:23,410 --> 00:40:26,800
actually logs in and checks to see if

00:40:25,030 --> 00:40:28,840
there's a message for it on an interval

00:40:26,800 --> 00:40:30,940
when it's when it sees that it needs to

00:40:28,840 --> 00:40:32,890
do a job it goes out does discovery in

00:40:30,940 --> 00:40:35,470
the branch office pushes that data back

00:40:32,890 --> 00:40:37,600
to opennms and it gets published just as

00:40:35,470 --> 00:40:39,730
if opennms had done in itself it's

00:40:37,600 --> 00:40:40,930
completely stateless and menus don't

00:40:39,730 --> 00:40:42,850
need to know about each other you could

00:40:40,930 --> 00:40:45,220
put two or three in that office and they

00:40:42,850 --> 00:40:48,760
all work off that competing consumer

00:40:45,220 --> 00:40:54,400
style q they if one falls off the others

00:40:48,760 --> 00:40:56,250
just keep working and I do have a little

00:40:54,400 --> 00:40:59,680
bit of a demo for that coming up

00:40:56,250 --> 00:41:01,210
histogram status boards these were style

00:40:59,680 --> 00:41:03,480
status words are introduced so now you

00:41:01,210 --> 00:41:06,640
can put your own little histograms up on

00:41:03,480 --> 00:41:10,270
opennms is UI and you can configure

00:41:06,640 --> 00:41:12,090
these yourself and the future is bright

00:41:10,270 --> 00:41:14,830
so I'm looking at horizon 20 which is

00:41:12,090 --> 00:41:16,180
sometime next year is a big project we

00:41:14,830 --> 00:41:18,670
have a couple of customers that are

00:41:16,180 --> 00:41:20,170
sponsoring things like netflow

00:41:18,670 --> 00:41:21,610
integrations now when you're looking at

00:41:20,170 --> 00:41:23,590
a bandwidth graph we have little

00:41:21,610 --> 00:41:25,150
prototype you look in the bandwidth

00:41:23,590 --> 00:41:27,910
graph you can click on that bandwidth

00:41:25,150 --> 00:41:30,490
graph that maybe had some threshold or a

00:41:27,910 --> 00:41:34,060
high utilization and ask for all the

00:41:30,490 --> 00:41:35,740
conversations what caused this bandwidth

00:41:34,060 --> 00:41:37,270
to go up right well who was talking on

00:41:35,740 --> 00:41:42,100
the network and what protocols are being

00:41:37,270 --> 00:41:44,260
used we're also right in a management

00:41:42,100 --> 00:41:46,920
console so a service layer on top of

00:41:44,260 --> 00:41:51,850
multiple NM esas with a console on top

00:41:46,920 --> 00:41:54,570
and we're making open an MSHA just to

00:41:51,850 --> 00:41:59,050
show you a quick timeline on meridian

00:41:54,570 --> 00:42:06,940
you can't really read that candy all

00:41:59,050 --> 00:42:10,120
this time I'm looking um so that is I'm

00:42:06,940 --> 00:42:13,030
going to use my glasses march of 2015

00:42:10,120 --> 00:42:16,150
and that was based on horizon 14 right

00:42:13,030 --> 00:42:18,100
Ronny was there horizon 14 so basically

00:42:16,150 --> 00:42:19,450
once horizons been out in the community

00:42:18,100 --> 00:42:21,730
for long enough for the features and

00:42:19,450 --> 00:42:22,390
that I have stabilized we backport those

00:42:21,730 --> 00:42:25,329
put

00:42:22,390 --> 00:42:30,039
meridiana lease for our customers then

00:42:25,329 --> 00:42:31,420
we had and we do that Oh once a year and

00:42:30,039 --> 00:42:34,690
then we do updates throughout the year

00:42:31,420 --> 00:42:36,220
on that release so reading 2016 was

00:42:34,690 --> 00:42:38,589
released somewhere around May June

00:42:36,220 --> 00:42:44,529
timeframe and that was based on horizon

00:42:38,589 --> 00:42:46,329
17 the next release will be in March and

00:42:44,529 --> 00:42:49,599
that will be based on horizon 19 which

00:42:46,329 --> 00:42:51,819
was out this month there's a few other

00:42:49,599 --> 00:42:54,670
features that I didn't have time to put

00:42:51,819 --> 00:42:57,339
a demo together but in the topology map

00:42:54,670 --> 00:43:00,400
we also have now plug-in on the side

00:42:57,339 --> 00:43:03,250
that lets you write your own plugins in

00:43:00,400 --> 00:43:05,500
the information panel so as a scripting

00:43:03,250 --> 00:43:08,349
language that lets you if you click on

00:43:05,500 --> 00:43:10,630
an edge or a vertice in the in the graph

00:43:08,349 --> 00:43:12,779
you can put your own information up on

00:43:10,630 --> 00:43:14,859
the info panel one of them that we

00:43:12,779 --> 00:43:17,799
included in the project if you click on

00:43:14,859 --> 00:43:19,799
a node that has latitude and longitude

00:43:17,799 --> 00:43:26,200
data or an address in it it'll put it on

00:43:19,799 --> 00:43:29,380
a little open street more open street

00:43:26,200 --> 00:43:32,470
maps image on the side there which is

00:43:29,380 --> 00:43:35,109
fully navigable inside there we also

00:43:32,470 --> 00:43:38,440
have support for open daylight as a as

00:43:35,109 --> 00:43:39,759
also as a proof of concept so we can

00:43:38,440 --> 00:43:41,289
talk to the opendaylight controller

00:43:39,759 --> 00:43:43,240
learn about all the virtual

00:43:41,289 --> 00:43:46,329
infrastructure in your opened a daylight

00:43:43,240 --> 00:43:50,470
a virtual network and pull that into

00:43:46,329 --> 00:43:53,140
opennms we also can talk to vmware and

00:43:50,470 --> 00:43:54,880
learn about your vmware systems pull

00:43:53,140 --> 00:43:56,859
those in and each of those are different

00:43:54,880 --> 00:43:59,579
topology providers in opennms with

00:43:56,859 --> 00:44:03,730
infrastructure for monitoring underneath

00:43:59,579 --> 00:44:07,599
and the future not not really bright

00:44:03,730 --> 00:44:08,950
it's actually a bit cloudy so the 90s

00:44:07,599 --> 00:44:12,130
called us and said they want their GUI

00:44:08,950 --> 00:44:14,170
framework back if you've ever used

00:44:12,130 --> 00:44:16,269
opennms i don't think that the GUI has

00:44:14,170 --> 00:44:21,730
changed much since two thousand other

00:44:16,269 --> 00:44:23,710
than restyling this was microsoft's you

00:44:21,730 --> 00:44:25,390
I back in nineteen ninety nine which

00:44:23,710 --> 00:44:27,609
isn't really too much different than are

00:44:25,390 --> 00:44:30,130
you high right little menu at the top

00:44:27,609 --> 00:44:32,049
kind of thing and you can see as of

00:44:30,130 --> 00:44:35,220
today Microsoft's website looks much

00:44:32,049 --> 00:44:35,220
different in socio DARS

00:44:35,650 --> 00:44:40,360
so we're also implemented a project

00:44:38,020 --> 00:44:42,460
called opennms as a service now this is

00:44:40,360 --> 00:44:43,720
a offering that the opennms group is

00:44:42,460 --> 00:44:46,660
going to have but it's going to be built

00:44:43,720 --> 00:44:48,550
on cloud infrastructure for opennms so

00:44:46,660 --> 00:44:50,290
if you're running your own cloud

00:44:48,550 --> 00:44:52,480
infrastructure in the data center such

00:44:50,290 --> 00:44:55,270
as OpenStack you'll be able to deploy

00:44:52,480 --> 00:44:58,090
opennms as a scalable microservice

00:44:55,270 --> 00:45:00,010
solution in your own data center we're

00:44:58,090 --> 00:45:01,810
going to do this also as a service for

00:45:00,010 --> 00:45:04,870
customers that don't have a data center

00:45:01,810 --> 00:45:06,880
or tired of running their own nms that

00:45:04,870 --> 00:45:08,380
little minion thing I talked about we're

00:45:06,880 --> 00:45:10,000
going to they'll either install a

00:45:08,380 --> 00:45:12,220
software version and we also have a

00:45:10,000 --> 00:45:15,340
hardware version that you can purchase

00:45:12,220 --> 00:45:18,370
and put inside your environment and then

00:45:15,340 --> 00:45:22,570
you just come to opennms as a service

00:45:18,370 --> 00:45:24,490
you I and you'll be able to look at all

00:45:22,570 --> 00:45:27,610
the monitoring data there without having

00:45:24,490 --> 00:45:31,270
to run your own nms and will maintain

00:45:27,610 --> 00:45:32,860
that for you so we use a micro service

00:45:31,270 --> 00:45:34,960
architecture that was vetted by the work

00:45:32,860 --> 00:45:37,480
we did in minion we're golf's moving

00:45:34,960 --> 00:45:40,330
that into open and a mess we orchestrate

00:45:37,480 --> 00:45:43,300
with Cooper Nettie's and we used our

00:45:40,330 --> 00:45:49,990
container technology as dr. and our

00:45:43,300 --> 00:45:51,580
public cloud offering is built on AWS so

00:45:49,990 --> 00:45:52,990
the menu communications look something

00:45:51,580 --> 00:45:54,070
like this I won't bore you too much with

00:45:52,990 --> 00:45:56,680
this cuz I'm gonna say the whole time if

00:45:54,070 --> 00:46:00,100
anybody has questions but the way it

00:45:56,680 --> 00:46:01,570
works is the minion sits out on the

00:46:00,100 --> 00:46:03,760
other side of say a firewall you just

00:46:01,570 --> 00:46:07,600
need to open a port so that they open it

00:46:03,760 --> 00:46:10,150
so the menu can talk JMS / / secure

00:46:07,600 --> 00:46:11,620
connection back to opennms and get its

00:46:10,150 --> 00:46:19,450
work to do and that's how it also

00:46:11,620 --> 00:46:21,400
publishes its data back our solution

00:46:19,450 --> 00:46:23,620
right now we have a little virtual

00:46:21,400 --> 00:46:25,030
private cloud because we haven't

00:46:23,620 --> 00:46:26,770
hardened the infrastructure so when I

00:46:25,030 --> 00:46:29,410
show you the demo you won't be able to

00:46:26,770 --> 00:46:30,610
go to that URL and try it without it

00:46:29,410 --> 00:46:34,480
without making the connection to the

00:46:30,610 --> 00:46:36,130
odds bpn but once we finish and we begin

00:46:34,480 --> 00:46:39,940
to offer it will remove the VPN so the

00:46:36,130 --> 00:46:43,000
public can get to it so that's the the

00:46:39,940 --> 00:46:46,000
VPN infrastructure and here's what odds

00:46:43,000 --> 00:46:48,640
looks like so the the graphs that are

00:46:46,000 --> 00:46:49,450
the vertices that have the little dots

00:46:48,640 --> 00:46:51,670
those are

00:46:49,450 --> 00:46:54,369
microservers space that they can scale

00:46:51,670 --> 00:46:56,770
on demand and you can see here that the

00:46:54,369 --> 00:46:59,260
one that's not right now in our

00:46:56,770 --> 00:47:02,800
prototype the arrow doesn't work maybe

00:46:59,260 --> 00:47:05,410
that's why the demo things network but

00:47:02,800 --> 00:47:09,339
is opennms in Postgres but we have taken

00:47:05,410 --> 00:47:13,509
activemq made some code changes there

00:47:09,339 --> 00:47:15,700
or make it run as a fully meshed cluster

00:47:13,509 --> 00:47:18,430
you can add and remove we can add and

00:47:15,700 --> 00:47:20,469
remove activemq brokers on demand and

00:47:18,430 --> 00:47:22,809
because we fully meshed it there's never

00:47:20,469 --> 00:47:28,349
more than one hop in that cluster from

00:47:22,809 --> 00:47:33,279
broker to broker and then as it scales

00:47:28,349 --> 00:47:37,299
for opennms instead of scaling literally

00:47:33,279 --> 00:47:39,099
as as a as a micro service we have

00:47:37,299 --> 00:47:41,079
another if another customer wants to

00:47:39,099 --> 00:47:44,890
create an instance then we create an

00:47:41,079 --> 00:47:46,809
entire new opennms container so and but

00:47:44,890 --> 00:47:48,969
in 20 of what we're working to do is

00:47:46,809 --> 00:47:51,309
make that fully micro serviced so that

00:47:48,969 --> 00:47:53,109
instead of saying opennms it's really

00:47:51,309 --> 00:47:55,029
open MS is more of a service layer where

00:47:53,109 --> 00:47:58,930
we'll have Polar's and data collectors

00:47:55,029 --> 00:48:03,489
and an all the infrastructure and open

00:47:58,930 --> 00:48:05,289
two meses microservices this slinger guy

00:48:03,489 --> 00:48:06,940
here now down here he's the guy who

00:48:05,289 --> 00:48:10,869
actually uses a cooper Nettie's api to

00:48:06,940 --> 00:48:12,219
spend all this stuff up and I know the

00:48:10,869 --> 00:48:17,019
demo is not going to work so I'll just

00:48:12,219 --> 00:48:25,299
go I'm getting close to the end if

00:48:17,019 --> 00:48:27,759
you're getting hungry so I also have my

00:48:25,299 --> 00:48:31,539
iphone connected here you can see I'm

00:48:27,759 --> 00:48:32,859
connected to the VPN now i had the

00:48:31,539 --> 00:48:37,509
iphone up so I could show you some

00:48:32,859 --> 00:48:38,829
pretty cool integration there while I'm

00:48:37,509 --> 00:48:41,200
thinking about that we also have a

00:48:38,829 --> 00:48:43,180
mobile app for open MS called compass

00:48:41,200 --> 00:48:46,029
that did make it into the slides for

00:48:43,180 --> 00:48:49,420
some reason so you can bring up compass

00:48:46,029 --> 00:48:51,539
and acknowledge alarms escalate alarms

00:48:49,420 --> 00:48:55,359
look at graphs all that kind of thing

00:48:51,539 --> 00:48:57,670
and so in the micro service or in in us

00:48:55,359 --> 00:48:59,410
what we're doing is here I've logged in

00:48:57,670 --> 00:49:01,269
its correct it's logged into an instance

00:48:59,410 --> 00:49:03,400
that was already existing using my

00:49:01,269 --> 00:49:05,349
account so it didn't have to create it

00:49:03,400 --> 00:49:09,130
but it does say hey do you want to start

00:49:05,349 --> 00:49:11,670
a minion on your phone now we call this

00:49:09,130 --> 00:49:15,729
project what do we call it running

00:49:11,670 --> 00:49:17,859
underling yep so underling is written in

00:49:15,729 --> 00:49:20,859
going and we've made it to run on

00:49:17,859 --> 00:49:23,290
Android as well as iOS and you can just

00:49:20,859 --> 00:49:25,930
point it at

00:49:23,290 --> 00:49:28,750
uh look it looks like a German or

00:49:25,930 --> 00:49:31,000
doesn't it underling so you can just

00:49:28,750 --> 00:49:34,660
point it at that scan code and it starts

00:49:31,000 --> 00:49:35,980
the the minion on your phone and you if

00:49:34,660 --> 00:49:37,810
you're connected to your network with

00:49:35,980 --> 00:49:39,160
your phone you can do all the discovery

00:49:37,810 --> 00:49:44,800
and polling and everything right there

00:49:39,160 --> 00:49:46,480
from your phone so again this is all

00:49:44,800 --> 00:49:48,640
prototype this is kind of mocked up

00:49:46,480 --> 00:49:51,760
stuff there's actually an instance that

00:49:48,640 --> 00:49:53,050
is running you can see that there's one

00:49:51,760 --> 00:49:54,280
alarm that we just made it a put an

00:49:53,050 --> 00:49:55,570
alarm in a database you can see you

00:49:54,280 --> 00:49:59,800
could browse from the higher-level

00:49:55,570 --> 00:50:01,720
console because of the introduction of

00:49:59,800 --> 00:50:04,330
minion we also had entered introduced

00:50:01,720 --> 00:50:06,310
locations into the model so alarms that

00:50:04,330 --> 00:50:09,600
are happening you can look at alarms or

00:50:06,310 --> 00:50:13,720
performance data specific to a location

00:50:09,600 --> 00:50:15,730
now this was some integration we did so

00:50:13,720 --> 00:50:18,960
that you can see that we're still using

00:50:15,730 --> 00:50:21,760
the same URL yeah if you could read that

00:50:18,960 --> 00:50:23,530
for everyone so it's just like if you

00:50:21,760 --> 00:50:26,140
went to salesforce com and logged in you

00:50:23,530 --> 00:50:27,880
get your customers if you go to oz that

00:50:26,140 --> 00:50:30,670
OpenStack com you get your instance of

00:50:27,880 --> 00:50:32,950
opennms based on your login and we're

00:50:30,670 --> 00:50:34,450
using off two or r 0 for the

00:50:32,950 --> 00:50:36,280
authentication I'll show you that here

00:50:34,450 --> 00:50:37,870
in a second on this demo did you see

00:50:36,280 --> 00:50:42,070
we've popped out your instance of

00:50:37,870 --> 00:50:44,050
opennms if you need to drill down below

00:50:42,070 --> 00:50:52,300
the the higher-level console you can

00:50:44,050 --> 00:50:53,470
still do that what are you doing here ok

00:50:52,300 --> 00:50:54,970
so it's just kind of work if you need to

00:50:53,470 --> 00:51:00,340
go to get the scan code yourself again

00:50:54,970 --> 00:51:02,050
and then log out so this time I'm going

00:51:00,340 --> 00:51:07,090
to log in by log in with a different

00:51:02,050 --> 00:51:09,390
account what am I do oh I was going to

00:51:07,090 --> 00:51:13,500
show the Cooper Nettie's integration so

00:51:09,390 --> 00:51:17,950
any Cooper Nettie's experts in here oh

00:51:13,500 --> 00:51:19,870
thank goodness my knowledge is very

00:51:17,950 --> 00:51:21,790
small anyway some commands that I've

00:51:19,870 --> 00:51:23,260
learned to go check on the status of

00:51:21,790 --> 00:51:26,200
things in the in the cloud

00:51:23,260 --> 00:51:27,670
infrastructure using uber Nettie's so

00:51:26,200 --> 00:51:30,070
again look at the deployments you can

00:51:27,670 --> 00:51:32,350
look at the services that are deployed

00:51:30,070 --> 00:51:34,600
and then one at some point here I show

00:51:32,350 --> 00:51:37,240
auto scaling which is probably just

00:51:34,600 --> 00:51:39,650
going to be way too hard to read

00:51:37,240 --> 00:51:41,859
if you want to take a look at this with

00:51:39,650 --> 00:51:47,480
me after after the talk I can show you

00:51:41,859 --> 00:51:49,730
personally how that works so I just

00:51:47,480 --> 00:51:51,920
started a coupe proxy there so it just

00:51:49,730 --> 00:51:54,619
going to localhost on port 8000 and one

00:51:51,920 --> 00:51:57,320
I can wrap browse right into the Cooper

00:51:54,619 --> 00:51:59,630
Nettie's infrastructure there and we can

00:51:57,320 --> 00:52:00,890
look and see all that that we were

00:51:59,630 --> 00:52:02,660
looking at the command line from the

00:52:00,890 --> 00:52:04,070
Cooper Nettie's console so coo coo

00:52:02,660 --> 00:52:07,730
pernetti's provides some very handy

00:52:04,070 --> 00:52:11,300
utilities for tunneling through without

00:52:07,730 --> 00:52:17,300
having to expose that console to the

00:52:11,300 --> 00:52:20,380
public let's see where do I go from here

00:52:17,300 --> 00:52:22,579
I'll just showing some some navigation

00:52:20,380 --> 00:52:24,740
within Cooper Nettie's there but you can

00:52:22,579 --> 00:52:26,570
see if you could read this you could can

00:52:24,740 --> 00:52:29,000
actually see the hostname and the IP

00:52:26,570 --> 00:52:38,560
address of this particular pod that's

00:52:29,000 --> 00:52:38,560
hosting this service inside AWS okay I

00:52:42,250 --> 00:52:46,609
think the one thing I wanted to show you

00:52:44,390 --> 00:52:53,720
was the auth sero integration I don't

00:52:46,609 --> 00:53:01,790
remember what I think this is the

00:52:53,720 --> 00:53:04,390
scaling of the deployment I wish even I

00:53:01,790 --> 00:53:04,390
could read that

00:53:10,990 --> 00:53:17,670
I bet you just can speed that up Oh

00:53:22,890 --> 00:53:28,300
while this is doing that I'm waiting to

00:53:24,940 --> 00:53:30,940
get the l0 demo I do have t-shirts if

00:53:28,300 --> 00:53:40,090
you want a t-shirt to stop buying grab

00:53:30,940 --> 00:53:42,010
t-shirt I have no idea what I'm doing

00:53:40,090 --> 00:53:48,160
there so probably done it at midnight

00:53:42,010 --> 00:53:51,250
last night let's uh it's kind of a play

00:53:48,160 --> 00:53:56,800
on the club mot logo open it a mess you

00:53:51,250 --> 00:54:05,830
get used to it kind of thing we get

00:53:56,800 --> 00:54:08,320
there oh there we go so I'm think I'm

00:54:05,830 --> 00:54:10,860
using my github account here so i need

00:54:08,320 --> 00:54:14,470
to i use two-factor authentication and

00:54:10,860 --> 00:54:18,160
you get to see how tired I was because I

00:54:14,470 --> 00:54:21,070
keep trying to use my google token and

00:54:18,160 --> 00:54:32,880
not my github token so finally I figure

00:54:21,070 --> 00:54:35,650
it out come on wake up try it again and

00:54:32,880 --> 00:54:40,090
so now it's creating that instance in

00:54:35,650 --> 00:54:41,619
the cloud for this new account and once

00:54:40,090 --> 00:54:44,740
that finishes you'll see that there's

00:54:41,619 --> 00:54:46,150
now no I have to refresh the Cooper

00:54:44,740 --> 00:54:48,070
Nettie's console but that now there's

00:54:46,150 --> 00:54:53,380
another instance of open MS they're

00:54:48,070 --> 00:54:54,730
running I think I'm going to stop it

00:54:53,380 --> 00:54:57,750
there because I hadn't it was late i

00:54:54,730 --> 00:54:57,750
have no idea what I did

00:55:02,130 --> 00:55:07,500
again back to Def Jam we do this once a

00:55:04,410 --> 00:55:11,279
year we pay for all the travel

00:55:07,500 --> 00:55:14,190
accommodations for all the green polo

00:55:11,279 --> 00:55:16,829
commit contributors to opennms we

00:55:14,190 --> 00:55:19,740
usually have about 30 guys show up our

00:55:16,829 --> 00:55:23,640
30 guys and gals now that we we have a

00:55:19,740 --> 00:55:26,369
gal that shows them and we hack on

00:55:23,640 --> 00:55:28,319
opennms for a week it's really one of

00:55:26,369 --> 00:55:29,549
the best times a year for me I just you

00:55:28,319 --> 00:55:30,630
know I get to see all these guys from

00:55:29,549 --> 00:55:32,880
all over the world you know we have

00:55:30,630 --> 00:55:35,970
people from Italy from obviously from

00:55:32,880 --> 00:55:38,519
Germany from the UK we've had people

00:55:35,970 --> 00:55:40,589
from New Zealand show up it's really

00:55:38,519 --> 00:55:45,049
really a great conference and I think we

00:55:40,589 --> 00:55:47,819
just had our what was it Ronnie 11 it I

00:55:45,049 --> 00:55:50,069
think the 11th conference maybe 10th or

00:55:47,819 --> 00:55:52,230
11th anyway but we always hopes hosted

00:55:50,069 --> 00:55:54,509
at the university of minnesota minnesota

00:55:52,230 --> 00:55:57,180
is one of these godforsaken places that

00:55:54,509 --> 00:55:59,609
in the summer it's about 40 degrees in

00:55:57,180 --> 00:56:03,779
the winter it's about minus 20 degrees

00:55:59,609 --> 00:56:04,859
so it's really not if you could get

00:56:03,779 --> 00:56:07,170
there in the spring or fall that would

00:56:04,859 --> 00:56:09,839
be great but we use the the university's

00:56:07,170 --> 00:56:11,369
dorms as a real nice normal structure we

00:56:09,839 --> 00:56:14,309
all stay in the same dorm we go down we

00:56:11,369 --> 00:56:17,930
have this giant club room and really has

00:56:14,309 --> 00:56:20,400
built a nice culture and opennms for me

00:56:17,930 --> 00:56:22,980
having done this for 12 years opennms

00:56:20,400 --> 00:56:24,690
really is at this most exciting time i

00:56:22,980 --> 00:56:26,250
think if we look at what's happening

00:56:24,690 --> 00:56:27,960
with technology today with micro

00:56:26,250 --> 00:56:30,900
services and cloud and things like that

00:56:27,960 --> 00:56:34,200
these are really cool interesting times

00:56:30,900 --> 00:56:36,750
to be in for for technologists and i

00:56:34,200 --> 00:56:38,339
think that that's just a we're hopefully

00:56:36,750 --> 00:56:40,170
exploiting that as well here at opennms

00:56:38,339 --> 00:56:42,180
but opening mess has kind of been the

00:56:40,170 --> 00:56:44,039
basis of my life's work for the last 12

00:56:42,180 --> 00:56:46,680
years and i can't remember a more fun

00:56:44,039 --> 00:56:49,650
time while i've been doing that one of

00:56:46,680 --> 00:56:53,039
our somebody snapped a quick photo at

00:56:49,650 --> 00:56:54,509
Def Jam couple years ago and in the dorm

00:56:53,039 --> 00:56:57,779
they have all these cool things for the

00:56:54,509 --> 00:57:00,539
students to try to keep their attitude

00:56:57,779 --> 00:57:01,829
up and things in David's link one of our

00:57:00,539 --> 00:57:03,839
contributors was there and somebody

00:57:01,829 --> 00:57:05,250
snapped a photo of them here believe in

00:57:03,839 --> 00:57:06,779
yourself and I think that's what we've

00:57:05,250 --> 00:57:08,490
had to do all these years with open own

00:57:06,779 --> 00:57:09,900
messes just believe in the project

00:57:08,490 --> 00:57:12,299
believe in the community believe in the

00:57:09,900 --> 00:57:16,310
open source and it seems to be paying

00:57:12,299 --> 00:57:28,290
off not necessarily financially

00:57:16,310 --> 00:57:30,600
that's it so thank you very much David I

00:57:28,290 --> 00:57:37,580
think we have one or two minutes for

00:57:30,600 --> 00:57:42,920
questions if we have any all right so

00:57:37,580 --> 00:57:42,920

YouTube URL: https://www.youtube.com/watch?v=t_pYce5JJrk


