Title: OSMC 2016 | NeDi update and more (EN) by Remo Rickli
Publication date: 2016-12-12
Playlist: OSMC 2016 | Open Source Monitoring Conference
Description: 
	After 2 years of making a living with NeDi, I can show you where it's at and talk about the challenges with managing multivendor networks...
Captions: 
	00:00:09,710 --> 00:00:13,880
okay so welcome back everyone from lunch

00:00:11,690 --> 00:00:16,250
hope you enjoyed it and it was enough

00:00:13,880 --> 00:00:18,410
we're now continuing with needy update

00:00:16,250 --> 00:00:25,460
and more presented by Reimer Italy enjoy

00:00:18,410 --> 00:00:27,710
oh thank you don't clap yet you don't

00:00:25,460 --> 00:00:31,210
know what's coming no I'm just kidding

00:00:27,710 --> 00:00:35,210
so we have an update the more part is

00:00:31,210 --> 00:00:38,000
stuff I've encountered while updating so

00:00:35,210 --> 00:00:42,680
to speak so we'll see anyhow

00:00:38,000 --> 00:00:44,989
so for those who know me already or

00:00:42,680 --> 00:00:47,780
known Eddie this might not be new but

00:00:44,989 --> 00:00:52,370
anyways so this is like Mike sing life

00:00:47,780 --> 00:00:55,820
or life in sing and the two important

00:00:52,370 --> 00:00:58,219
things are on the top so 2001 I went to

00:00:55,820 --> 00:00:59,750
the PAL share Institute that's where I

00:00:58,219 --> 00:01:02,480
invented and started Neddy

00:00:59,750 --> 00:01:06,470
I could make an open-source project out

00:01:02,480 --> 00:01:09,890
of it and yeah so that's where nadie

00:01:06,470 --> 00:01:12,890
originates this is a science lab if you

00:01:09,890 --> 00:01:14,900
will with particle accelerators it's

00:01:12,890 --> 00:01:18,520
kind of like the CERN but a lot smaller

00:01:14,900 --> 00:01:21,770
or and also less known for that matter

00:01:18,520 --> 00:01:23,690
after that I went to HP and you can

00:01:21,770 --> 00:01:25,670
imagine working for HP you cannot really

00:01:23,690 --> 00:01:29,150
promote your own tools because you have

00:01:25,670 --> 00:01:31,010
to sell those of your employer so nadie

00:01:29,150 --> 00:01:35,030
was bidding in the background it was a

00:01:31,010 --> 00:01:37,159
side project it was just pure hobby also

00:01:35,030 --> 00:01:39,979
you can see I did many certifications

00:01:37,159 --> 00:01:41,330
for HP and as I'm listing those here you

00:01:39,979 --> 00:01:47,869
might think they're really important for

00:01:41,330 --> 00:01:50,900
me right and this ended in 2014 so what

00:01:47,869 --> 00:01:51,350
happened after that was that I made my

00:01:50,900 --> 00:01:54,799
hobby

00:01:51,350 --> 00:01:58,130
Nady to my profession and yeah I'm

00:01:54,799 --> 00:02:00,320
living off of Neddie now and actually

00:01:58,130 --> 00:02:01,939
surprisingly quite successfully because

00:02:00,320 --> 00:02:03,799
obviously there is a need for an ad and

00:02:01,939 --> 00:02:06,079
I appreciate that a lot

00:02:03,799 --> 00:02:07,280
so going back to the certification so

00:02:06,079 --> 00:02:09,950
you think they're really important for

00:02:07,280 --> 00:02:13,700
me yes or to me yes I put them on a wall

00:02:09,950 --> 00:02:16,730
that's true but I had a customer while

00:02:13,700 --> 00:02:18,530
working for HP and that was CERN so the

00:02:16,730 --> 00:02:20,450
last time I was there I framed the

00:02:18,530 --> 00:02:23,130
visitor pass and put it on top of the

00:02:20,450 --> 00:02:28,980
certifications so you see I have

00:02:23,130 --> 00:02:31,380
my priorities the right way around so I

00:02:28,980 --> 00:02:35,070
mentioned the powerchair Institute which

00:02:31,380 --> 00:02:37,230
is interesting environment there's a lot

00:02:35,070 --> 00:02:40,590
of buildings and one of the reasons why

00:02:37,230 --> 00:02:42,150
I came up with Nettie was that from time

00:02:40,590 --> 00:02:44,460
to time you need to find a computer and

00:02:42,150 --> 00:02:47,220
when you work in an environment with

00:02:44,460 --> 00:02:48,630
many of those hurdles you really want to

00:02:47,220 --> 00:02:51,000
know where this computer is before you

00:02:48,630 --> 00:02:53,910
actually enter because it's yeah it's

00:02:51,000 --> 00:02:58,080
something that you know you you mind and

00:02:53,910 --> 00:03:01,230
you're aware of so Neddie stands for

00:02:58,080 --> 00:03:03,180
network discovery and that's exactly

00:03:01,230 --> 00:03:07,380
what it does it discovers the network it

00:03:03,180 --> 00:03:10,140
finds computers but also it started out

00:03:07,380 --> 00:03:12,180
having a small monitoring section more

00:03:10,140 --> 00:03:16,680
or less to check where the devices or

00:03:12,180 --> 00:03:18,780
switches and routers are alive and the

00:03:16,680 --> 00:03:21,330
monitoring in the past two years grew

00:03:18,780 --> 00:03:24,030
quite a bit so I can say that you

00:03:21,330 --> 00:03:27,960
actually can manage a network now with

00:03:24,030 --> 00:03:29,460
me with Nettie and actually monitor good

00:03:27,960 --> 00:03:31,890
parts of it not everything I mean I'm

00:03:29,460 --> 00:03:34,320
not keen on on creating yet another

00:03:31,890 --> 00:03:36,720
service monitoring tools there is enough

00:03:34,320 --> 00:03:38,550
with them out there but what networks

00:03:36,720 --> 00:03:41,820
are concerned I think I can cover a

00:03:38,550 --> 00:03:43,500
pretty good part of it and as I said you

00:03:41,820 --> 00:03:45,300
can locate and track computers that

00:03:43,500 --> 00:03:47,640
that's a feature that's also very

00:03:45,300 --> 00:03:50,130
interesting for the security people so

00:03:47,640 --> 00:03:54,330
it's not just networkers that can use an

00:03:50,130 --> 00:03:56,220
ad but also a range of other IT people

00:03:54,330 --> 00:03:58,890
even printer management is possible

00:03:56,220 --> 00:04:02,730
while working at HP I had a good chance

00:03:58,890 --> 00:04:04,590
to test that so yeah it works as well I

00:04:02,730 --> 00:04:06,840
mean printers talk SNMP and that's

00:04:04,590 --> 00:04:09,060
pretty much still what nerdy is about I

00:04:06,840 --> 00:04:11,160
have some news on that as well but yeah

00:04:09,060 --> 00:04:14,580
it's for now it's really SNMP devices

00:04:11,160 --> 00:04:16,109
and I said you can track computers which

00:04:14,580 --> 00:04:18,290
is interesting for the security people

00:04:16,109 --> 00:04:19,890
but there is other tasks like

00:04:18,290 --> 00:04:23,880
configuration backup configuration

00:04:19,890 --> 00:04:25,980
management and beyond actually because I

00:04:23,880 --> 00:04:27,810
have some interesting news as well here

00:04:25,980 --> 00:04:30,480
on the very last slide so I will get

00:04:27,810 --> 00:04:32,100
back to that one as well all right so

00:04:30,480 --> 00:04:34,020
this is pretty much what Nadi is and

00:04:32,100 --> 00:04:36,540
this is pretty much what I show two

00:04:34,020 --> 00:04:38,910
years ago last time I was here

00:04:36,540 --> 00:04:42,600
but I said two years ago I quit my job

00:04:38,910 --> 00:04:44,340
and actually started working on Eddie so

00:04:42,600 --> 00:04:47,420
now the last two years have been really

00:04:44,340 --> 00:04:50,670
exciting as to the progress of Noddy

00:04:47,420 --> 00:04:53,300
so what's new well this GUI is not I

00:04:50,670 --> 00:04:57,720
mean that's probably what you remember

00:04:53,300 --> 00:05:00,240
but yeah there's more than that but the

00:04:57,720 --> 00:05:02,610
discovery itself which is like the core

00:05:00,240 --> 00:05:05,250
of nerdy got a lot more flexible so now

00:05:02,610 --> 00:05:07,290
if you have different needs you want to

00:05:05,250 --> 00:05:09,600
cover with the discovery you can tell

00:05:07,290 --> 00:05:12,360
Maddie to do so by discovering certain

00:05:09,600 --> 00:05:14,370
things or skipping for certain things to

00:05:12,360 --> 00:05:16,710
make it faster and then when you

00:05:14,370 --> 00:05:20,100
discover something you can now define

00:05:16,710 --> 00:05:22,230
scripts or write scripts and define them

00:05:20,100 --> 00:05:25,440
as actions so if you find a new device

00:05:22,230 --> 00:05:30,270
you can throw it at that script and then

00:05:25,440 --> 00:05:31,740
react on newfound devices or or devices

00:05:30,270 --> 00:05:34,550
that are discovered and then you can

00:05:31,740 --> 00:05:39,030
trigger certain actions for that device

00:05:34,550 --> 00:05:41,610
also due to customer projects I could

00:05:39,030 --> 00:05:43,650
greatly improve the whole lifecycle

00:05:41,610 --> 00:05:47,130
management or asset management so this

00:05:43,650 --> 00:05:49,520
is mob probably not so much IT but I

00:05:47,130 --> 00:05:52,080
think a lot of people get more and more

00:05:49,520 --> 00:05:55,430
requests we'll dealing with this because

00:05:52,080 --> 00:05:58,980
you have maintenance contracts you have

00:05:55,430 --> 00:06:01,010
various reports people want cmdbs so

00:05:58,980 --> 00:06:04,430
this stuff is getting more and more

00:06:01,010 --> 00:06:08,180
predominant in a lot of the tasks in

00:06:04,430 --> 00:06:12,470
around networks or IT for that matter so

00:06:08,180 --> 00:06:15,150
in many cases Neddie serves as a tool to

00:06:12,470 --> 00:06:18,300
get what's out there and then feed other

00:06:15,150 --> 00:06:20,610
tools from it so with that also Nady has

00:06:18,300 --> 00:06:22,770
an API now which you can use you don't

00:06:20,610 --> 00:06:25,230
have to access the database directly you

00:06:22,770 --> 00:06:29,340
can use a REST API to extract

00:06:25,230 --> 00:06:32,900
information out of Neddie also and I'm

00:06:29,340 --> 00:06:35,340
naming it now for Cisco I have

00:06:32,900 --> 00:06:37,170
interesting features added like you can

00:06:35,340 --> 00:06:39,420
upload a spreadsheet with all the

00:06:37,170 --> 00:06:41,670
end-of-life information and then you can

00:06:39,420 --> 00:06:44,820
combine it with the devices you find in

00:06:41,670 --> 00:06:45,870
the network and you can compare what is

00:06:44,820 --> 00:06:47,760
the end of life what is the end of

00:06:45,870 --> 00:06:49,710
service what is the end of support and

00:06:47,760 --> 00:06:50,310
then you can create reports based on

00:06:49,710 --> 00:06:52,410
that

00:06:50,310 --> 00:06:55,650
I said Cisco because that's like the

00:06:52,410 --> 00:06:57,600
first vendor I could sort of combine it

00:06:55,650 --> 00:07:00,180
with I'm looking at other vendors too

00:06:57,600 --> 00:07:01,770
and I'm really interested into expanding

00:07:00,180 --> 00:07:03,660
this because Nettie still lays and

00:07:01,770 --> 00:07:07,620
hopefully we'll be a vendor independent

00:07:03,660 --> 00:07:11,070
tool yeah so many other improvements

00:07:07,620 --> 00:07:14,190
let's have a look at that so the looks I

00:07:11,070 --> 00:07:17,520
think improved quite a bit now so that's

00:07:14,190 --> 00:07:19,650
the new GUI that's a default theme it's

00:07:17,520 --> 00:07:21,389
still not like you know the whole

00:07:19,650 --> 00:07:24,780
responsive stuff but I will get to that

00:07:21,389 --> 00:07:29,250
in a minute but I could use the better

00:07:24,780 --> 00:07:32,040
half of 2014 to clean up all the CSS and

00:07:29,250 --> 00:07:35,340
quirks mode so its proper html5 it's

00:07:32,040 --> 00:07:39,960
using CSS and I think it improved quite

00:07:35,340 --> 00:07:42,210
a bit even under the hood so yeah I've

00:07:39,960 --> 00:07:45,479
added and I don't know how many of you

00:07:42,210 --> 00:07:50,070
worked with Mary but for example when

00:07:45,479 --> 00:07:52,800
you go to devices list you got this form

00:07:50,070 --> 00:07:56,340
and it's getting more and more boxes in

00:07:52,800 --> 00:07:57,720
it and stuff so first of all you didn't

00:07:56,340 --> 00:07:59,550
really know what to do or if you want to

00:07:57,720 --> 00:08:02,010
wanted to get something out of it you

00:07:59,550 --> 00:08:04,860
needed to know what you enter but now

00:08:02,010 --> 00:08:07,530
you get the kind of little reports

00:08:04,860 --> 00:08:09,030
underneath which give you an idea of

00:08:07,530 --> 00:08:10,919
what you could want and then you can

00:08:09,030 --> 00:08:13,950
click on a number and it will list all

00:08:10,919 --> 00:08:15,780
those devices matching this report this

00:08:13,950 --> 00:08:17,760
also works for interfaces as you can see

00:08:15,780 --> 00:08:19,919
on the right side so I've tried to make

00:08:17,760 --> 00:08:22,050
make life easier with Nettie and more

00:08:19,919 --> 00:08:24,600
intuitive so you should see a lot of

00:08:22,050 --> 00:08:29,789
minor improvements when when you look at

00:08:24,600 --> 00:08:32,430
a newer version of netting I'm I did

00:08:29,789 --> 00:08:34,140
rewrite the whole context help colleague

00:08:32,430 --> 00:08:36,089
is working on a translation now in

00:08:34,140 --> 00:08:39,839
German so we have English and German

00:08:36,089 --> 00:08:42,750
covered on translations by the way I

00:08:39,839 --> 00:08:46,050
managed to translate much more of the

00:08:42,750 --> 00:08:50,370
GUI so we get Nady in Russian now if you

00:08:46,050 --> 00:08:54,089
want or Spanish or French it's all on on

00:08:50,370 --> 00:08:58,050
the way so that's quite cool I think now

00:08:54,089 --> 00:09:00,270
um lack support how many of you know

00:08:58,050 --> 00:09:02,910
what Lac means link aggregation any

00:09:00,270 --> 00:09:04,050
networkers here yes um good so that

00:09:02,910 --> 00:09:06,300
that's another thing

00:09:04,050 --> 00:09:09,029
out of the box it's kind of hard to see

00:09:06,300 --> 00:09:11,310
where a trunk and depends on the terms

00:09:09,029 --> 00:09:15,660
you use or poor Channel Cisco uses poor

00:09:11,310 --> 00:09:18,180
channel everybody else uses trunks which

00:09:15,660 --> 00:09:20,940
interfaces belong to that trunk or poor

00:09:18,180 --> 00:09:23,279
channel so I added few things into

00:09:20,940 --> 00:09:25,709
nettie that out of the box for most

00:09:23,279 --> 00:09:28,589
devices it works that you can see if an

00:09:25,709 --> 00:09:33,260
interface belongs to a trunk you see in

00:09:28,589 --> 00:09:36,540
the description that lack trunk one is

00:09:33,260 --> 00:09:38,579
assigned to this interface so this makes

00:09:36,540 --> 00:09:40,920
troubleshooting a lot easier and if you

00:09:38,579 --> 00:09:42,779
see neighbors connected to that port you

00:09:40,920 --> 00:09:45,540
know exactly what to look for in the

00:09:42,779 --> 00:09:47,579
topology so that's like a one minor

00:09:45,540 --> 00:09:50,540
improvement but I think it can help a

00:09:47,579 --> 00:09:55,019
great deal to get to know your network

00:09:50,540 --> 00:09:58,110
another thing is events so Neddie has

00:09:55,019 --> 00:10:00,240
events they're generated from the

00:09:58,110 --> 00:10:02,600
discovery but you could also feed syslog

00:10:00,240 --> 00:10:05,550
and they will end up in the events table

00:10:02,600 --> 00:10:07,500
you can also send SNMP traps although

00:10:05,550 --> 00:10:09,930
not very well supported

00:10:07,500 --> 00:10:11,910
they will also end up in events and I

00:10:09,930 --> 00:10:14,399
got a use of around the states asking me

00:10:11,910 --> 00:10:15,990
whether events could be confirmed and I

00:10:14,399 --> 00:10:17,160
never thought about this and I'm

00:10:15,990 --> 00:10:18,600
mentioning this because it's really

00:10:17,160 --> 00:10:20,970
important that I get the feedback from

00:10:18,600 --> 00:10:24,959
the users with new ideas because I can

00:10:20,970 --> 00:10:28,640
possibly you know find out all yeah

00:10:24,959 --> 00:10:30,740
cases or use cases which could be useful

00:10:28,640 --> 00:10:32,700
so I've added a one-click

00:10:30,740 --> 00:10:35,399
acknowledgement so you click on the ID

00:10:32,700 --> 00:10:37,350
of the event and it will be degraded

00:10:35,399 --> 00:10:40,649
meaning it won't show up in the

00:10:37,350 --> 00:10:43,110
monitoring health page anymore or other

00:10:40,649 --> 00:10:43,980
important dashboards so this allows you

00:10:43,110 --> 00:10:45,750
to really

00:10:43,980 --> 00:10:47,370
oh I check this event I looked at it

00:10:45,750 --> 00:10:49,560
it's okay my colleagues don't have to

00:10:47,370 --> 00:10:52,680
worry about it very simple and that's

00:10:49,560 --> 00:10:55,589
the like the goal of meta keep it very

00:10:52,680 --> 00:11:02,579
simple but expand features and functions

00:10:55,589 --> 00:11:05,790
of course now some of you who know

00:11:02,579 --> 00:11:07,589
Neddie might remember that note stolen

00:11:05,790 --> 00:11:10,470
feature where you could mark a MAC

00:11:07,589 --> 00:11:12,740
address like a notebook and if it would

00:11:10,470 --> 00:11:17,100
reappear on the network you get an alert

00:11:12,740 --> 00:11:17,519
so that was sort of the first policy if

00:11:17,100 --> 00:11:19,740
you

00:11:17,519 --> 00:11:22,230
for network security and I got an

00:11:19,740 --> 00:11:24,480
interesting request from a university in

00:11:22,230 --> 00:11:27,990
Switzerland because they needed a

00:11:24,480 --> 00:11:30,389
feature to turn off power for devices

00:11:27,990 --> 00:11:32,879
they don't know about so they have their

00:11:30,389 --> 00:11:34,350
IP phones to have access points but

00:11:32,879 --> 00:11:36,029
everything else should not really get

00:11:34,350 --> 00:11:40,170
power because they're worried about the

00:11:36,029 --> 00:11:42,689
POV budget and at first I was like right

00:11:40,170 --> 00:11:46,110
I could develop this feature but I could

00:11:42,689 --> 00:11:48,569
develop broader policy feature and

00:11:46,110 --> 00:11:51,929
include this so I migrated that node

00:11:48,569 --> 00:11:56,100
stolen thing into a policy system and

00:11:51,929 --> 00:11:57,720
this policy system now persists of MAC

00:11:56,100 --> 00:12:00,029
address policies which is the node

00:11:57,720 --> 00:12:01,889
stolen is the replacement for it so you

00:12:00,029 --> 00:12:03,959
find this MAC address you do something

00:12:01,889 --> 00:12:06,720
you could even shut down the port but

00:12:03,959 --> 00:12:08,850
you can imagine this is a bit tricky you

00:12:06,720 --> 00:12:10,050
could also create policies and

00:12:08,850 --> 00:12:12,899
configurations so if you do a

00:12:10,050 --> 00:12:14,990
configuration back up and you find SNMP

00:12:12,899 --> 00:12:19,129
community public in it create an alert

00:12:14,990 --> 00:12:21,809
very simple and I've seen not so simple

00:12:19,129 --> 00:12:25,529
configuration policy things and I wanted

00:12:21,809 --> 00:12:28,769
to keep it simple so really in five

00:12:25,529 --> 00:12:32,040
clicks you have a new policy triggering

00:12:28,769 --> 00:12:35,850
stuff on configuration issues for

00:12:32,040 --> 00:12:37,110
example so that's one aspect another one

00:12:35,850 --> 00:12:39,809
is total number of Macs

00:12:37,110 --> 00:12:41,699
that's an interesting one because some

00:12:39,809 --> 00:12:44,249
switches to have problems when when the

00:12:41,699 --> 00:12:47,160
MAC address table grows too big like

00:12:44,249 --> 00:12:49,019
that they say well you can hold 10,000

00:12:47,160 --> 00:12:51,929
MAC addresses but it crops up after

00:12:49,019 --> 00:12:53,009
8,000 so you can have a policy counting

00:12:51,929 --> 00:12:56,240
the MAC addresses which I'm doing

00:12:53,009 --> 00:12:59,249
anyways and then create an alert if this

00:12:56,240 --> 00:13:01,679
threshold is exceeded but I could also

00:12:59,249 --> 00:13:05,149
create policies now for neighbors so

00:13:01,679 --> 00:13:06,809
neighbor types or neighbor names and

00:13:05,149 --> 00:13:09,240
here's an example

00:13:06,809 --> 00:13:11,790
and that's back with this project that

00:13:09,240 --> 00:13:14,850
had in in Switzerland so we have IP

00:13:11,790 --> 00:13:18,480
phones like there might be from unifying

00:13:14,850 --> 00:13:20,189
former Siemens VoIP phones which we do

00:13:18,480 --> 00:13:23,220
want to keep powered up especially that

00:13:20,189 --> 00:13:24,799
one of the big boss so if you turn that

00:13:23,220 --> 00:13:27,540
one down you're probably in trouble and

00:13:24,799 --> 00:13:29,669
also for example of i/o phones that

00:13:27,540 --> 00:13:30,840
could be right listed so nothing happens

00:13:29,669 --> 00:13:32,970
if you detect

00:13:30,840 --> 00:13:35,580
phone like that on the port but then you

00:13:32,970 --> 00:13:38,100
could create a policy if that's not the

00:13:35,580 --> 00:13:40,200
case and you have any other MAC address

00:13:38,100 --> 00:13:42,780
or something and you can add conditions

00:13:40,200 --> 00:13:44,970
like this one here it has to have p OE

00:13:42,780 --> 00:13:47,480
enabled in the previous discovery

00:13:44,970 --> 00:13:50,280
because if you think about it a phone

00:13:47,480 --> 00:13:53,340
connecting to a network right it boots

00:13:50,280 --> 00:13:56,580
up and it draws power and if I discover

00:13:53,340 --> 00:13:59,580
that port that very moment the phone has

00:13:56,580 --> 00:14:01,980
not sent the name via LD P to the switch

00:13:59,580 --> 00:14:05,430
yet so I don't want to shut down the

00:14:01,980 --> 00:14:07,980
port because ya wouldn't be right so you

00:14:05,430 --> 00:14:09,960
can add conditions to make sure this

00:14:07,980 --> 00:14:12,450
phone has been booted up and it's been

00:14:09,960 --> 00:14:14,190
there before and now we can sort of

00:14:12,450 --> 00:14:16,650
leverage the information from that port

00:14:14,190 --> 00:14:20,370
and here this policy defines well if

00:14:16,650 --> 00:14:22,740
it's powered up and it's matching this

00:14:20,370 --> 00:14:24,810
string or not matching this string then

00:14:22,740 --> 00:14:27,540
you create an event and the bell here is

00:14:24,810 --> 00:14:29,010
another symbol for my events table so we

00:14:27,540 --> 00:14:31,200
won't do anything with the port but it

00:14:29,010 --> 00:14:33,410
will create an event notifying you there

00:14:31,200 --> 00:14:37,350
is something connected to that port and

00:14:33,410 --> 00:14:39,180
yeah you should probably look at it now

00:14:37,350 --> 00:14:41,820
the policy system can be combined with

00:14:39,180 --> 00:14:44,430
the whole event handling and with the

00:14:41,820 --> 00:14:47,250
verge visualization of those events you

00:14:44,430 --> 00:14:49,950
can create nice graphs to see over time

00:14:47,250 --> 00:14:52,950
how many policies fired in your network

00:14:49,950 --> 00:14:54,870
so here we can see during the day the

00:14:52,950 --> 00:14:56,490
number of triggered events grows and

00:14:54,870 --> 00:15:00,090
then at night of course it goes back

00:14:56,490 --> 00:15:02,880
down again the second line is is the

00:15:00,090 --> 00:15:05,220
reset policy so if you fire a policy

00:15:02,880 --> 00:15:06,930
shutting down a port or turning off BOE

00:15:05,220 --> 00:15:10,320
on a switch that's what actually this

00:15:06,930 --> 00:15:11,670
thing can do you need another policy to

00:15:10,320 --> 00:15:13,890
reset this because you don't want to

00:15:11,670 --> 00:15:15,750
turn off POV on old switchboards because

00:15:13,890 --> 00:15:18,240
eventually you run out of switchboards

00:15:15,750 --> 00:15:20,760
because people keep changing the port so

00:15:18,240 --> 00:15:23,100
you want to rename POV again right so I

00:15:20,760 --> 00:15:26,220
have reset policies and the lower one is

00:15:23,100 --> 00:15:28,590
the reset policies that are turning

00:15:26,220 --> 00:15:30,660
power back on and then of course if the

00:15:28,590 --> 00:15:34,170
guys plugs in that thing again it will

00:15:30,660 --> 00:15:36,030
get down tor be turned down again but

00:15:34,170 --> 00:15:38,480
this is actually working quite well and

00:15:36,030 --> 00:15:41,910
it allows you to sort of dynamically

00:15:38,480 --> 00:15:43,640
adapt to to network conditions and it's

00:15:41,910 --> 00:15:46,580
I would say

00:15:43,640 --> 00:15:49,640
a small form of SDN already Software

00:15:46,580 --> 00:15:56,270
Defined Networking as the network reacts

00:15:49,640 --> 00:15:59,720
to things happening on the perimeter now

00:15:56,270 --> 00:16:04,460
for other features in native I have

00:15:59,720 --> 00:16:07,790
improved how modules are treated and let

00:16:04,460 --> 00:16:09,380
me sort of explain a little bit about

00:16:07,790 --> 00:16:11,480
network components I don't know how

00:16:09,380 --> 00:16:14,060
familiar you are with them so there is

00:16:11,480 --> 00:16:16,460
switches like a box and then there is

00:16:14,060 --> 00:16:19,340
bigger switches chassis with line cards

00:16:16,460 --> 00:16:21,520
in it so a line card usually is a module

00:16:19,340 --> 00:16:23,990
but a module can also be a power supply

00:16:21,520 --> 00:16:26,020
now will be interesting to see whether a

00:16:23,990 --> 00:16:28,700
power supply actually has power or not

00:16:26,020 --> 00:16:30,320
because what good does it do if you have

00:16:28,700 --> 00:16:34,280
two power supplies but one of them is

00:16:30,320 --> 00:16:35,750
not having any not powered up right so

00:16:34,280 --> 00:16:39,560
you'll notice when the second one fails

00:16:35,750 --> 00:16:42,350
as well so yeah you can get the power of

00:16:39,560 --> 00:16:44,390
modules and another issue is that you

00:16:42,350 --> 00:16:46,700
might have a stack so a stack of

00:16:44,390 --> 00:16:49,730
switches is several switches combined

00:16:46,700 --> 00:16:51,620
together to one logical device and it

00:16:49,730 --> 00:16:54,290
goes even further with fabric extenders

00:16:51,620 --> 00:16:58,370
where you have like two core devices if

00:16:54,290 --> 00:16:59,990
you will and a lot of ice a remote line

00:16:58,370 --> 00:17:02,780
cards which are actually switches

00:16:59,990 --> 00:17:04,790
connecting to those devices but that can

00:17:02,780 --> 00:17:08,839
be anywhere in your data center so you

00:17:04,790 --> 00:17:11,180
get this big logical object which is

00:17:08,839 --> 00:17:13,730
managed by one IP address but it can

00:17:11,180 --> 00:17:17,810
span a whole data center and this

00:17:13,730 --> 00:17:19,940
creates a whole set of new problems but

00:17:17,810 --> 00:17:21,800
it I mean it's they sell they sell it to

00:17:19,940 --> 00:17:23,709
you as it's much simpler because you

00:17:21,800 --> 00:17:26,780
only have to manage one IP address I

00:17:23,709 --> 00:17:28,490
agree to that it is in that respect it's

00:17:26,780 --> 00:17:29,780
simpler but it's also a lot more

00:17:28,490 --> 00:17:32,150
complicated because you move the

00:17:29,780 --> 00:17:34,610
troubleshooting inside that construct or

00:17:32,150 --> 00:17:37,160
inside that fabric because you suddenly

00:17:34,610 --> 00:17:40,160
don't have your regular port counters

00:17:37,160 --> 00:17:43,270
anymore necessarily to find errors or

00:17:40,160 --> 00:17:46,370
faulty cables and stuff like that so

00:17:43,270 --> 00:17:49,160
I've added a field to the modules it's

00:17:46,370 --> 00:17:51,740
called module location and in this case

00:17:49,160 --> 00:17:54,230
we're looking at a switch we have a line

00:17:51,740 --> 00:17:57,530
cord in a chassis switch and we have

00:17:54,230 --> 00:18:00,380
ports in this in this on this line card

00:17:57,530 --> 00:18:04,600
and those ports might be SFPs as we can

00:18:00,380 --> 00:18:08,690
actually see here 10 by 1 gig bass s6 so

00:18:04,600 --> 00:18:10,490
multimode fiber transceivers and with

00:18:08,690 --> 00:18:12,500
the module location I know which line

00:18:10,490 --> 00:18:14,330
card they're on but you can see that on

00:18:12,500 --> 00:18:17,240
the interface name as well so that's not

00:18:14,330 --> 00:18:20,210
that big of a deal right but if you have

00:18:17,240 --> 00:18:23,060
a fabric with a course which you could

00:18:20,210 --> 00:18:25,010
configure the fabric extenders with an

00:18:23,060 --> 00:18:26,840
actual location string and if you

00:18:25,010 --> 00:18:29,210
configure it in the native convention

00:18:26,840 --> 00:18:30,890
and I'm working on that still I will

00:18:29,210 --> 00:18:32,630
make it available for you to see in the

00:18:30,890 --> 00:18:35,840
rack view so you know which fabric

00:18:32,630 --> 00:18:39,350
extender is in which rack what works

00:18:35,840 --> 00:18:41,810
already that you get the port status of

00:18:39,350 --> 00:18:43,880
those fabric extenders and you have it

00:18:41,810 --> 00:18:45,410
at least in a list view that you know

00:18:43,880 --> 00:18:48,110
how many ports are available in a

00:18:45,410 --> 00:18:50,690
certain rack which is served by fabric

00:18:48,110 --> 00:18:52,190
extenders so that's not necessarily

00:18:50,690 --> 00:18:55,070
something you see in other management

00:18:52,190 --> 00:18:57,500
tools because yeah it's it's not easy to

00:18:55,070 --> 00:18:59,630
do and again I'm trying to keep this

00:18:57,500 --> 00:19:02,090
vendor independent right now this is

00:18:59,630 --> 00:19:04,610
actually again a Cisco product but there

00:19:02,090 --> 00:19:05,960
is others out there that of course use

00:19:04,610 --> 00:19:08,510
fabric extenders as well

00:19:05,960 --> 00:19:11,120
HP is working on that or has a solution

00:19:08,510 --> 00:19:16,070
which provides that as well I know a via

00:19:11,120 --> 00:19:18,410
and juniper with the Q fabric does that

00:19:16,070 --> 00:19:19,880
as well so I've been testing a few and

00:19:18,410 --> 00:19:22,160
and it seems to work quite well

00:19:19,880 --> 00:19:24,020
and it's important if you have big data

00:19:22,160 --> 00:19:27,640
centers with lots and lots of ports that

00:19:24,020 --> 00:19:30,920
you get something like this out of it

00:19:27,640 --> 00:19:33,530
another feature an interesting one is

00:19:30,920 --> 00:19:35,450
that Nettie has a number of reports

00:19:33,530 --> 00:19:37,460
already and I don't know if you're aware

00:19:35,450 --> 00:19:39,440
of that but Nettie does discovery it

00:19:37,460 --> 00:19:42,200
does monitoring and it does reporting

00:19:39,440 --> 00:19:44,540
and for me it's not clear where

00:19:42,200 --> 00:19:46,430
monitoring ends and reporting starts

00:19:44,540 --> 00:19:49,799
because that can be really it's a gray

00:19:46,430 --> 00:19:51,960
zone I mean some reports can really

00:19:49,799 --> 00:19:53,909
be used for monitoring as well because

00:19:51,960 --> 00:19:55,889
it depends on how you build it and

00:19:53,909 --> 00:19:57,570
Nettie's reports are really dynamic so

00:19:55,889 --> 00:20:00,779
you can have a report created every

00:19:57,570 --> 00:20:02,940
minute if you want to get a good

00:20:00,779 --> 00:20:05,519
overview of your network so I've added a

00:20:02,940 --> 00:20:10,679
new report which essentially lets you

00:20:05,519 --> 00:20:13,110
choose a table you want to join with in

00:20:10,679 --> 00:20:15,389
Eddy everything is about devices so you

00:20:13,110 --> 00:20:17,580
always join it with the devices table

00:20:15,389 --> 00:20:21,559
and then you can break down your network

00:20:17,580 --> 00:20:24,419
and this is an example of switch types

00:20:21,559 --> 00:20:25,799
broken down by locations so you see how

00:20:24,419 --> 00:20:28,109
many switches do you have in which

00:20:25,799 --> 00:20:30,119
location and this is very flexible

00:20:28,109 --> 00:20:32,070
because you could combine it with the

00:20:30,119 --> 00:20:35,279
interface table and then you see how

00:20:32,070 --> 00:20:38,190
many ports have lldp neighbors how many

00:20:35,279 --> 00:20:39,659
have CDP neighbors and so forth so in

00:20:38,190 --> 00:20:41,850
this case you could actually see how

00:20:39,659 --> 00:20:44,009
many phones you have connected to the

00:20:41,850 --> 00:20:46,980
network and how many access points which

00:20:44,009 --> 00:20:52,609
are managed yeah it can't read it that

00:20:46,980 --> 00:20:55,289
well but trust me okay so yeah that's a

00:20:52,609 --> 00:20:57,690
very flexible and I have found a lot of

00:20:55,289 --> 00:20:59,039
use cases already where people they were

00:20:57,690 --> 00:21:00,869
not really aware of what the network

00:20:59,039 --> 00:21:02,460
looks like or you know they needed to

00:21:00,869 --> 00:21:07,919
get some numbers out of it and I could

00:21:02,460 --> 00:21:10,169
provide that within a few clicks as I

00:21:07,919 --> 00:21:13,200
showed this one last time I was here

00:21:10,169 --> 00:21:15,960
nevertheless large scale is a big topic

00:21:13,200 --> 00:21:18,659
as I think networks get tend to get

00:21:15,960 --> 00:21:21,809
bigger and bigger and with that I also

00:21:18,659 --> 00:21:25,919
think that the demands of tools working

00:21:21,809 --> 00:21:28,169
on networks change and with that the

00:21:25,919 --> 00:21:31,619
demands for networking people or people

00:21:28,169 --> 00:21:38,070
working with networking people they get

00:21:31,619 --> 00:21:40,769
different demands as well like DevOps is

00:21:38,070 --> 00:21:43,080
a big topic and I'm sure not just in

00:21:40,769 --> 00:21:45,239
networking but people need to get tools

00:21:43,080 --> 00:21:49,590
and get data out of tools into other

00:21:45,239 --> 00:21:50,970
tools right so I think that's sort of an

00:21:49,590 --> 00:21:52,009
interesting development and we'll see

00:21:50,970 --> 00:21:54,869
where it goes

00:21:52,009 --> 00:21:57,090
large-scale in this case is the

00:21:54,869 --> 00:21:59,600
discovery bit so here we can see several

00:21:57,090 --> 00:22:03,630
Nady runs running in parallel

00:21:59,600 --> 00:22:05,610
discovering a network which right now

00:22:03,630 --> 00:22:11,730
it's in northern Germany it has about

00:22:05,610 --> 00:22:14,960
11,000 switches on it and it can break

00:22:11,730 --> 00:22:18,090
down the whole network into areas of

00:22:14,960 --> 00:22:20,640
cities and then you can break it further

00:22:18,090 --> 00:22:23,490
down into devices per area nodes per

00:22:20,640 --> 00:22:24,870
area and available switch ports and as

00:22:23,490 --> 00:22:27,030
you can see this is a service provider

00:22:24,870 --> 00:22:29,100
so we see how many Ethernet ports and

00:22:27,030 --> 00:22:32,419
DSL ports are available in a certain

00:22:29,100 --> 00:22:35,070
area also I'm monitoring this network

00:22:32,419 --> 00:22:36,929
you can see all those locations and then

00:22:35,070 --> 00:22:40,140
you see the buildings where we have a

00:22:36,929 --> 00:22:43,770
failure will show up very nicely and

00:22:40,140 --> 00:22:46,500
this particular customer was also the

00:22:43,770 --> 00:22:49,289
reason why I've added a feature where

00:22:46,500 --> 00:22:53,370
Neddie is now able to draw the network

00:22:49,289 --> 00:22:56,400
topology of quite big networks actually

00:22:53,370 --> 00:22:59,159
and it doesn't rely on discovery

00:22:56,400 --> 00:23:01,110
protocols anymore so this is derived

00:22:59,159 --> 00:23:03,990
from the MAC address forwarding table

00:23:01,110 --> 00:23:06,870
which was not easy to do but in the end

00:23:03,990 --> 00:23:09,179
we were quite surprised to see things

00:23:06,870 --> 00:23:12,450
like this where one leg of the network

00:23:09,179 --> 00:23:14,750
extends over a number of switches down

00:23:12,450 --> 00:23:16,919
the road obviously to remote locations

00:23:14,750 --> 00:23:21,840
but if you troubleshooting that's

00:23:16,919 --> 00:23:24,299
something that's really important so the

00:23:21,840 --> 00:23:26,159
information and the quality of the

00:23:24,299 --> 00:23:29,760
information within Eddy I would say

00:23:26,159 --> 00:23:35,400
improved a lot and it's still of course

00:23:29,760 --> 00:23:38,010
going further and further another

00:23:35,400 --> 00:23:39,690
request and that's our that ties in

00:23:38,010 --> 00:23:43,380
again with the DevOps thing I've said

00:23:39,690 --> 00:23:46,380
that you get more and more needs for

00:23:43,380 --> 00:23:48,390
customization so you don't want to have

00:23:46,380 --> 00:23:50,970
an off-the-shelf tool which you cannot

00:23:48,390 --> 00:23:54,750
modify to do anything else right so I've

00:23:50,970 --> 00:23:57,270
added a few things into Neddie and it's

00:23:54,750 --> 00:24:00,450
like a simple include where you can

00:23:57,270 --> 00:24:02,039
define your own PHP code to do something

00:24:00,450 --> 00:24:05,610
with stuff you have in an ID database

00:24:02,039 --> 00:24:08,400
and in this one in particular I got

00:24:05,610 --> 00:24:11,490
asked from a service provider in Sweden

00:24:08,400 --> 00:24:13,980
and Sweden is like the total opposite of

00:24:11,490 --> 00:24:15,450
Switzerland what density is concerned so

00:24:13,980 --> 00:24:17,230
in Switzerland you cannot drive 500

00:24:15,450 --> 00:24:19,600
meters without seeing a house

00:24:17,230 --> 00:24:21,490
in the mountains yes but yeah usually

00:24:19,600 --> 00:24:23,820
not in Sweden you can drive 50

00:24:21,490 --> 00:24:27,130
kilometers without seeing a house and

00:24:23,820 --> 00:24:29,640
the guy from up there said that they

00:24:27,130 --> 00:24:32,440
have switches on remote locations and

00:24:29,640 --> 00:24:34,990
sometimes they lose the CLI function

00:24:32,440 --> 00:24:37,660
they sort of crash halfway they still

00:24:34,990 --> 00:24:39,960
work but they're not accessible anymore

00:24:37,660 --> 00:24:43,410
so if he wants to reboot such a switch

00:24:39,960 --> 00:24:46,570
it can be done by sending an SNMP set

00:24:43,410 --> 00:24:48,730
request and I thought about it and I

00:24:46,570 --> 00:24:50,170
thought I wrote back to him well you can

00:24:48,730 --> 00:24:52,510
do it yourself and I gave him the

00:24:50,170 --> 00:24:54,370
example for that include file so you get

00:24:52,510 --> 00:24:57,190
the new button up there you can click

00:24:54,370 --> 00:25:00,970
SNMP reset and as soon as you click it

00:24:57,190 --> 00:25:02,820
the device will reboot and you can see

00:25:00,970 --> 00:25:05,950
that's in the process of doing so and

00:25:02,820 --> 00:25:09,520
this can be done even without me having

00:25:05,950 --> 00:25:11,350
adding a new feature internet II so it's

00:25:09,520 --> 00:25:14,740
quite interesting that this works out

00:25:11,350 --> 00:25:19,000
now that people can customize needed to

00:25:14,740 --> 00:25:21,250
fit their needs another one is that and

00:25:19,000 --> 00:25:24,730
again I'm saying this it's a Cisco

00:25:21,250 --> 00:25:27,670
switch I'm sorry networking is majority

00:25:24,730 --> 00:25:31,750
is Cisco switches I'm not trying to make

00:25:27,670 --> 00:25:34,030
or advertise this at all but this is got

00:25:31,750 --> 00:25:35,670
a nice feature and other vendors to have

00:25:34,030 --> 00:25:36,790
that too they have a built-in

00:25:35,670 --> 00:25:39,610
reflectometer

00:25:36,790 --> 00:25:41,950
so you can test a port and the cable

00:25:39,610 --> 00:25:46,240
attached to it and check whether it has

00:25:41,950 --> 00:25:47,800
a short or an open pair and you can

00:25:46,240 --> 00:25:50,110
check the length of the cable and stuff

00:25:47,800 --> 00:25:54,010
like that but this is all come online so

00:25:50,110 --> 00:25:56,410
I've added another it's like 10 lines of

00:25:54,010 --> 00:25:57,850
code where you can click a button it

00:25:56,410 --> 00:25:59,470
will warn you because it will take down

00:25:57,850 --> 00:26:02,830
the connection for a couple seconds and

00:25:59,470 --> 00:26:06,940
then it will send the commands to the

00:26:02,830 --> 00:26:09,070
switch to test that port sleep 3 seconds

00:26:06,940 --> 00:26:11,200
and then show the result and this is

00:26:09,070 --> 00:26:13,390
then what you get so you get the result

00:26:11,200 --> 00:26:15,910
of this real time check and you see

00:26:13,390 --> 00:26:18,700
whether the cable is a writer or not and

00:26:15,910 --> 00:26:22,030
again this is something everybody can

00:26:18,700 --> 00:26:25,330
build into native without me having to

00:26:22,030 --> 00:26:29,230
interact with you another thing and

00:26:25,330 --> 00:26:30,760
that's something I've added now so with

00:26:29,230 --> 00:26:33,790
the network you have

00:26:30,760 --> 00:26:39,390
by products like us vs and this is an

00:26:33,790 --> 00:26:42,460
interesting one a UPS sorry English

00:26:39,390 --> 00:26:44,500
uninterruptible power supplies so this

00:26:42,460 --> 00:26:48,040
is a good example where I just leverage

00:26:44,500 --> 00:26:50,049
some SNMP values from a UPS and you see

00:26:48,040 --> 00:26:53,080
we had a power outage at 6 o'clock and

00:26:50,049 --> 00:26:55,570
then the power came back actually we see

00:26:53,080 --> 00:26:57,640
that that in the input voltage so we had

00:26:55,570 --> 00:27:01,570
a power outage and then the UPS the

00:26:57,640 --> 00:27:04,510
battery appear the charge of course it

00:27:01,570 --> 00:27:07,179
did the yeah it drains to the battery

00:27:04,510 --> 00:27:09,250
and then power power came back so the

00:27:07,179 --> 00:27:10,780
batteries started charging again and the

00:27:09,250 --> 00:27:12,520
temperature rose while charging the

00:27:10,780 --> 00:27:14,919
battery so it kind of makes sense right

00:27:12,520 --> 00:27:16,510
but it's kind of cool to see that within

00:27:14,919 --> 00:27:21,480
Eddy and you don't really have to do

00:27:16,510 --> 00:27:21,480
much for that so it's just built in now

00:27:22,590 --> 00:27:30,640
now this is the plus small part so Ned

00:27:27,910 --> 00:27:32,590
II was a hobby till 2014 now I'm working

00:27:30,640 --> 00:27:36,010
on native full time and you can imagine

00:27:32,590 --> 00:27:38,049
that's why I made this much progress but

00:27:36,010 --> 00:27:40,210
also I encountered a lot of things and I

00:27:38,049 --> 00:27:44,169
did not just encounter this in the past

00:27:40,210 --> 00:27:46,990
two years but those are like some things

00:27:44,169 --> 00:27:48,820
that are sometimes annoying and I don't

00:27:46,990 --> 00:27:52,750
understand but that's my world and

00:27:48,820 --> 00:27:54,910
that's SNMP oh I DS so yeah for one

00:27:52,750 --> 00:27:56,410
that's big part of my world but I'm

00:27:54,910 --> 00:27:58,299
trying to get away from that as well

00:27:56,410 --> 00:28:00,669
so I'm aware that SNMP is a very old

00:27:58,299 --> 00:28:04,090
protocol but I'm not getting any younger

00:28:00,669 --> 00:28:09,010
either but I try to be open for new

00:28:04,090 --> 00:28:10,840
things and yes so as long as SNMP is

00:28:09,010 --> 00:28:15,309
there I guess I have to deal with those

00:28:10,840 --> 00:28:18,730
kind of things and one of which is so

00:28:15,309 --> 00:28:20,350
you have interface indexes right now it

00:28:18,730 --> 00:28:21,669
would be nice if they start at one and

00:28:20,350 --> 00:28:23,470
then go all the way down to the last

00:28:21,669 --> 00:28:26,799
interface but they don't a lot of

00:28:23,470 --> 00:28:29,380
vendors map it to a very much higher

00:28:26,799 --> 00:28:30,070
number don't know why maybe looks bigger

00:28:29,380 --> 00:28:32,980
I don't know

00:28:30,070 --> 00:28:34,720
but then the thing is you have to for

00:28:32,980 --> 00:28:37,150
certain things you have to index it back

00:28:34,720 --> 00:28:40,630
to that one through I don't know what

00:28:37,150 --> 00:28:42,580
and yeah it's it's one thing that I

00:28:40,630 --> 00:28:44,420
learned very early that I needed to do

00:28:42,580 --> 00:28:45,980
that so I'm

00:28:44,420 --> 00:28:50,420
that's not a big thing but you will see

00:28:45,980 --> 00:28:52,730
that on many switches but some started

00:28:50,420 --> 00:28:55,370
to index VLANs as well and I don't know

00:28:52,730 --> 00:28:59,000
if they just learned that at school that

00:28:55,370 --> 00:29:01,220
you have to abstract no matter what but

00:28:59,000 --> 00:29:03,320
it sometimes doesn't make any sense

00:29:01,220 --> 00:29:07,490
because the VLAN ID as you might know

00:29:03,320 --> 00:29:11,420
starts at one and ends at 4096 it's a

00:29:07,490 --> 00:29:14,210
12-page 12 bit number which is very easy

00:29:11,420 --> 00:29:16,670
to handle because it's even a small int

00:29:14,210 --> 00:29:19,520
is sufficient to store this value but

00:29:16,670 --> 00:29:22,460
they went ahead and indexed eight to one

00:29:19,520 --> 00:29:24,770
to two to fifty three to three so that

00:29:22,460 --> 00:29:27,080
just counting up the villains and I need

00:29:24,770 --> 00:29:30,050
to do another walk to index it back to

00:29:27,080 --> 00:29:31,640
the real villain IDs which sucks because

00:29:30,050 --> 00:29:34,010
I mean a discovery tool should be fast

00:29:31,640 --> 00:29:36,440
and if I have to walk many more or IDs

00:29:34,010 --> 00:29:38,510
to get to the original indexes it slows

00:29:36,440 --> 00:29:42,620
it down that's why I don't like this but

00:29:38,510 --> 00:29:44,660
yeah a few surprises I I've had last

00:29:42,620 --> 00:29:46,520
year in the last couple of years and

00:29:44,660 --> 00:29:50,000
then some when just take it even further

00:29:46,520 --> 00:29:53,390
so as you can see here this was a

00:29:50,000 --> 00:29:55,340
villain index and thing on that's the

00:29:53,390 --> 00:29:58,280
bridge table so that's a whole different

00:29:55,340 --> 00:30:00,710
story but here they even indexed it for

00:29:58,280 --> 00:30:04,550
the villain names so I needed to add a

00:30:00,710 --> 00:30:07,820
new feature to hold a new ID to reverse

00:30:04,550 --> 00:30:11,830
map this index back to the actual

00:30:07,820 --> 00:30:14,350
villain ID and that's another vendor

00:30:11,830 --> 00:30:17,740
yeah which I don't know they do

00:30:14,350 --> 00:30:22,220
interesting stuff let's put it that way

00:30:17,740 --> 00:30:23,870
but the best of it why would you index

00:30:22,220 --> 00:30:26,480
it to the same number I mean why even

00:30:23,870 --> 00:30:28,550
create this table if I wanted this

00:30:26,480 --> 00:30:30,950
number I needed this number it doesn't

00:30:28,550 --> 00:30:33,550
make any sense so sometimes I do wonder

00:30:30,950 --> 00:30:37,760
if they know what they're actually

00:30:33,550 --> 00:30:40,670
coding there so I don't know and of

00:30:37,760 --> 00:30:42,020
course I'm not I make mistakes everybody

00:30:40,670 --> 00:30:44,260
makes mistakes but I just don't

00:30:42,020 --> 00:30:48,620
understand what what this is about

00:30:44,260 --> 00:30:50,810
and speaking of coding and stuff and

00:30:48,620 --> 00:30:54,490
this is also a bit to get you guys

00:30:50,810 --> 00:30:58,280
interested in the dev ops thing because

00:30:54,490 --> 00:31:01,700
Nettie was created due to need

00:30:58,280 --> 00:31:03,890
because of needs I've had and my friends

00:31:01,700 --> 00:31:06,140
had so I wasn't really thinking about

00:31:03,890 --> 00:31:07,730
all the fancy stuff

00:31:06,140 --> 00:31:10,910
really I just wanted to solve a problem

00:31:07,730 --> 00:31:13,160
and today you have so many fancy things

00:31:10,910 --> 00:31:20,530
and and just look at that

00:31:13,160 --> 00:31:23,360
Ajax bootstrap responsive CSS yes

00:31:20,530 --> 00:31:26,330
so you can get lost in all those nice

00:31:23,360 --> 00:31:27,890
things right and maybe not solve the

00:31:26,330 --> 00:31:30,890
problem you originally wanted to solve

00:31:27,890 --> 00:31:35,240
so for me it's really important that I

00:31:30,890 --> 00:31:37,100
don't you know lose my time too much on

00:31:35,240 --> 00:31:38,810
all those things and I wanted to keep

00:31:37,100 --> 00:31:42,050
nerdy small so that's why I've pretty

00:31:38,810 --> 00:31:44,210
much been very very slow in adapting

00:31:42,050 --> 00:31:45,800
those new technologies and mind you when

00:31:44,210 --> 00:31:48,950
I started in nineteen fifteen years ago

00:31:45,800 --> 00:31:51,140
there wasn't anything of that around but

00:31:48,950 --> 00:31:53,030
I am aware of it and I know it's sexy

00:31:51,140 --> 00:31:54,530
it's kind of cool I mean HX is really

00:31:53,030 --> 00:31:59,510
cool because it makes the browser app

00:31:54,530 --> 00:32:01,220
like a fat up bootstrap or responsive

00:31:59,510 --> 00:32:03,860
CSS is really cool because it will adapt

00:32:01,220 --> 00:32:07,010
the layout to the screen size and stuff

00:32:03,860 --> 00:32:08,750
and of course the the whole thing you

00:32:07,010 --> 00:32:13,850
can do with the proper JavaScript

00:32:08,750 --> 00:32:16,880
frameworks is amazing and that's part of

00:32:13,850 --> 00:32:19,130
this topic so MVC the

00:32:16,880 --> 00:32:22,190
model-view-controller approach really

00:32:19,130 --> 00:32:26,030
cool because you pretty much have your

00:32:22,190 --> 00:32:28,700
data model and you have your controller

00:32:26,030 --> 00:32:30,260
in the browser with javascript talking

00:32:28,700 --> 00:32:33,020
to the database more or less and then

00:32:30,260 --> 00:32:37,370
displaying the information so Neddie is

00:32:33,020 --> 00:32:38,780
not yet yeah it's not there yet so you

00:32:37,370 --> 00:32:41,660
should still have more or less a webpage

00:32:38,780 --> 00:32:44,390
and then you pull data from the database

00:32:41,660 --> 00:32:46,700
and then display it as a table that's

00:32:44,390 --> 00:32:48,980
the way it has been working I've cleaned

00:32:46,700 --> 00:32:51,050
it up it looks much better now but it's

00:32:48,980 --> 00:32:54,260
not modern I wouldn't say it's modern

00:32:51,050 --> 00:32:56,510
but I did look at modern output and I

00:32:54,260 --> 00:32:59,270
looked at the source of it so if a table

00:32:56,510 --> 00:33:02,360
ends up looking like this in the source

00:32:59,270 --> 00:33:04,880
and we're talking about a table value

00:33:02,360 --> 00:33:09,410
here and in table row but you have like

00:33:04,880 --> 00:33:11,480
20 hierarchy levels above it and I

00:33:09,410 --> 00:33:12,380
figured now I don't want to go there

00:33:11,480 --> 00:33:14,659
just yet

00:33:12,380 --> 00:33:16,760
and that's another reason I wanted to

00:33:14,659 --> 00:33:22,880
keep everything really really small and

00:33:16,760 --> 00:33:25,700
responsive to ya for daily usage so I

00:33:22,880 --> 00:33:28,940
might look at other options I will look

00:33:25,700 --> 00:33:32,929
at HX and all that but also I think it's

00:33:28,940 --> 00:33:34,399
important that everybody keeps a bit

00:33:32,929 --> 00:33:37,820
up-to-date on what's out there because

00:33:34,399 --> 00:33:40,490
as I said I think the networker will be

00:33:37,820 --> 00:33:43,669
more and more a DevOps or some of us

00:33:40,490 --> 00:33:49,309
will be because the needs just simply

00:33:43,669 --> 00:33:54,080
change so my style yeah I'm an old fart

00:33:49,309 --> 00:33:58,669
I admit it getting gray oh well so I

00:33:54,080 --> 00:34:03,710
guess I'm also not at the bleeding edge

00:33:58,669 --> 00:34:05,809
of programming here so but there's a few

00:34:03,710 --> 00:34:07,700
simple things I I really when I add a

00:34:05,809 --> 00:34:10,339
new feature I try to keep the

00:34:07,700 --> 00:34:12,260
dependencies really low and when I see I

00:34:10,339 --> 00:34:14,330
can do it myself I will do it myself and

00:34:12,260 --> 00:34:15,919
add less dependencies so that's kind of

00:34:14,330 --> 00:34:17,450
what I'm trying to do doesn't work

00:34:15,919 --> 00:34:23,060
always and sometimes it just doesn't

00:34:17,450 --> 00:34:23,720
make sense but yeah I that's how I try

00:34:23,060 --> 00:34:26,810
it too

00:34:23,720 --> 00:34:28,580
yeah try to continue as well rather

00:34:26,810 --> 00:34:30,830
indexed and loop I don't like the

00:34:28,580 --> 00:34:33,200
looping things where you iterate over an

00:34:30,830 --> 00:34:36,619
array sometimes you have to do this but

00:34:33,200 --> 00:34:38,889
yeah I usually prefer hashes and still I

00:34:36,619 --> 00:34:41,510
try to keep the memory footprint low

00:34:38,889 --> 00:34:43,339
because that's what you end up you need

00:34:41,510 --> 00:34:45,080
memory when you create hashes but on the

00:34:43,339 --> 00:34:46,849
other end it's quite all right so are

00:34:45,080 --> 00:34:51,440
those big networks they're manageable

00:34:46,849 --> 00:34:54,619
with decent-sized machines and speaking

00:34:51,440 --> 00:34:56,599
of memory so Neddy has increased in size

00:34:54,619 --> 00:34:59,810
the archive is now four megabytes

00:34:56,599 --> 00:35:02,270
because it changed the icons but it's

00:34:59,810 --> 00:35:05,210
still quite manageable so to sum it up

00:35:02,270 --> 00:35:08,000
you can call me a seasoned programmer if

00:35:05,210 --> 00:35:10,010
you will but I can update Neddy on the

00:35:08,000 --> 00:35:12,680
browser by uploading the archive and

00:35:10,010 --> 00:35:15,290
then have another two clicks to update

00:35:12,680 --> 00:35:16,849
the database and done with it so you can

00:35:15,290 --> 00:35:20,859
still update an ad within five minutes

00:35:16,849 --> 00:35:20,859
and it's no big deal at all

00:35:22,220 --> 00:35:28,910
and even though I'm not using any

00:35:24,619 --> 00:35:32,690
responsive CSS yet it can still be used

00:35:28,910 --> 00:35:33,770
on tablets and even phones and I think

00:35:32,690 --> 00:35:36,920
that's a good thing too because you

00:35:33,770 --> 00:35:42,740
don't have to ya worry about it really

00:35:36,920 --> 00:35:46,010
and it's all really lightweight now if I

00:35:42,740 --> 00:35:46,700
add a new feature to Neddie after a day

00:35:46,010 --> 00:35:48,650
or so

00:35:46,700 --> 00:35:52,250
I have a pretty good idea whether I can

00:35:48,650 --> 00:35:54,859
do it and it's quite usable already I

00:35:52,250 --> 00:36:00,430
can spend another week on it to get to

00:35:54,859 --> 00:36:02,960
you know those 95 90 % usability things

00:36:00,430 --> 00:36:06,980
if I would spend another three weeks on

00:36:02,960 --> 00:36:08,839
it I might reach 100% but yeah usually I

00:36:06,980 --> 00:36:11,000
don't have the time for that so I I'm

00:36:08,839 --> 00:36:14,299
happy if it's 95 percent usable and

00:36:11,000 --> 00:36:17,900
maybe the rest will grow over time it

00:36:14,299 --> 00:36:19,730
will it will settle in and people will

00:36:17,900 --> 00:36:21,470
be happy with it but what I've often

00:36:19,730 --> 00:36:24,380
observed if you spend too much time

00:36:21,470 --> 00:36:26,210
developing on something yeah the

00:36:24,380 --> 00:36:28,880
usability goes back down again and I've

00:36:26,210 --> 00:36:31,579
seen this especially on big tools big

00:36:28,880 --> 00:36:32,779
expensive commercial tools but in the

00:36:31,579 --> 00:36:34,309
end nobody really likes to work with

00:36:32,779 --> 00:36:37,549
anymore because either they're getting

00:36:34,309 --> 00:36:40,609
slow sluggish or just don't do what they

00:36:37,549 --> 00:36:42,500
what you want them to do anymore so I

00:36:40,609 --> 00:36:45,020
try to stay away from that and I don't

00:36:42,500 --> 00:36:46,849
have the time to do this really so I

00:36:45,020 --> 00:36:52,609
need to get the stuff out and working

00:36:46,849 --> 00:36:56,270
quickly so last but not least if I add a

00:36:52,609 --> 00:36:57,890
new feature to Neddie and if you look at

00:36:56,270 --> 00:37:00,109
an ad when you if you know the GUI a

00:36:57,890 --> 00:37:02,450
little bit you have several modules you

00:37:00,109 --> 00:37:04,579
can work with so you have a list module

00:37:02,450 --> 00:37:06,470
maybe another list module and a report

00:37:04,579 --> 00:37:09,589
module and then there will be monitoring

00:37:06,470 --> 00:37:12,500
modules if I add a new feature you have

00:37:09,589 --> 00:37:14,960
a new module but I've seen big

00:37:12,500 --> 00:37:17,029
applications where a new module is like

00:37:14,960 --> 00:37:19,549
an application within the application

00:37:17,029 --> 00:37:21,559
and you can't do anything outside of

00:37:19,549 --> 00:37:23,750
this module with the rest of the

00:37:21,559 --> 00:37:26,390
application so this is kind of cheating

00:37:23,750 --> 00:37:28,880
right and with Neddie I'm trying if I'm

00:37:26,390 --> 00:37:32,990
adding a new feature I'm trying to keep

00:37:28,880 --> 00:37:35,359
that new feature swapping over to other

00:37:32,990 --> 00:37:36,130
modules and increase their functionality

00:37:35,359 --> 00:37:40,040
as well

00:37:36,130 --> 00:37:41,810
now I've talked a lot about development

00:37:40,040 --> 00:37:44,330
and new features and stuff why am I

00:37:41,810 --> 00:37:47,030
telling you all this well with Nettie

00:37:44,330 --> 00:37:49,610
1.6 we got a great new feature in which

00:37:47,030 --> 00:37:51,890
are meant to do for like 10 years but

00:37:49,610 --> 00:37:55,310
now finally I've added it and it's

00:37:51,890 --> 00:37:58,700
NetFlow support the basis of it is and

00:37:55,310 --> 00:38:01,400
if dumped from Peter Hawke it's really

00:37:58,700 --> 00:38:02,900
cool because it's very small it requires

00:38:01,400 --> 00:38:05,119
more or less two things

00:38:02,900 --> 00:38:08,270
it's the NF CAPTCHA demon which is the

00:38:05,119 --> 00:38:10,970
collector a mirror megabyte in size and

00:38:08,270 --> 00:38:12,800
then it requires an F dump which is the

00:38:10,970 --> 00:38:16,010
client service Peaks which allows you to

00:38:12,800 --> 00:38:19,070
view the net flow data in the CLI and

00:38:16,010 --> 00:38:21,320
all I'm doing is I'm running this in the

00:38:19,070 --> 00:38:23,390
background and then I'm using NF dum to

00:38:21,320 --> 00:38:25,220
display the data within Eddy and this is

00:38:23,390 --> 00:38:29,780
happening in notes traffic the new

00:38:25,220 --> 00:38:32,600
module but existing modules like devices

00:38:29,780 --> 00:38:36,140
graphs and node status receive new

00:38:32,600 --> 00:38:38,180
features to access this NetFlow

00:38:36,140 --> 00:38:40,250
information so for example you can play

00:38:38,180 --> 00:38:41,660
around with already's and looking at the

00:38:40,250 --> 00:38:47,060
different protocols you might be

00:38:41,660 --> 00:38:50,150
interested in to find a norm normalities

00:38:47,060 --> 00:38:52,760
or in node status you can click on an IP

00:38:50,150 --> 00:38:56,210
address and then check what this node is

00:38:52,760 --> 00:38:58,340
doing right now so we'll filter on this

00:38:56,210 --> 00:39:01,369
node and displaying all the outgoing

00:38:58,340 --> 00:39:07,070
traffic for this node and I think this

00:39:01,369 --> 00:39:09,230
is quite a very usable extension because

00:39:07,070 --> 00:39:10,730
Nettie now leverages the topology

00:39:09,230 --> 00:39:13,010
information and all the network

00:39:10,730 --> 00:39:16,460
information it got and it combines it

00:39:13,010 --> 00:39:20,630
now with built real time data of your

00:39:16,460 --> 00:39:22,850
traffic again this can be combined with

00:39:20,630 --> 00:39:26,330
the policies you know what policies now

00:39:22,850 --> 00:39:28,609
are are now and you can add policies

00:39:26,330 --> 00:39:31,640
based on traffic so if I have more

00:39:28,609 --> 00:39:33,230
traffic than this for this host or less

00:39:31,640 --> 00:39:35,900
I mean if you have a web server and

00:39:33,230 --> 00:39:37,850
you'll have any traffic something might

00:39:35,900 --> 00:39:39,980
be fishy as well right so you could

00:39:37,850 --> 00:39:43,450
create policies triggering on net flow

00:39:39,980 --> 00:39:48,140
information as well you can add this

00:39:43,450 --> 00:39:49,790
again to the events and then you can

00:39:48,140 --> 00:39:51,350
look at those events in

00:39:49,790 --> 00:39:53,480
the timeline table for example and

00:39:51,350 --> 00:39:56,570
create nice graphs check out when those

00:39:53,480 --> 00:40:01,420
policies fired so you can detect

00:39:56,570 --> 00:40:01,420
patterns maybe based on your traffic

00:40:02,170 --> 00:40:08,810
again notes traffic also allows you to

00:40:06,650 --> 00:40:11,090
play with what you see so we I can

00:40:08,810 --> 00:40:13,640
visualize the traffic simple pie chart

00:40:11,090 --> 00:40:16,370
is I think the standard but what I also

00:40:13,640 --> 00:40:18,020
do is I will fetch information from the

00:40:16,370 --> 00:40:21,230
internet if you're looking at external

00:40:18,020 --> 00:40:25,160
addresses like Google I will go to who

00:40:21,230 --> 00:40:27,710
is find out who this IP address belongs

00:40:25,160 --> 00:40:30,520
to and trying to fetch the favicon so

00:40:27,710 --> 00:40:33,170
you get a nice little icon for the

00:40:30,520 --> 00:40:36,740
external site which helps you really to

00:40:33,170 --> 00:40:39,590
identify the traffic I've also added

00:40:36,740 --> 00:40:42,260
sanke diagrams and this is really

00:40:39,590 --> 00:40:44,030
interesting because you can now choose

00:40:42,260 --> 00:40:45,710
for example source and destination IP

00:40:44,030 --> 00:40:48,560
address and then you can create those

00:40:45,710 --> 00:40:52,070
charts displaying the flows from source

00:40:48,560 --> 00:40:54,920
and destination and you can see if one

00:40:52,070 --> 00:40:57,740
source talks to several destinations and

00:40:54,920 --> 00:41:00,410
so forth but you could also use source

00:40:57,740 --> 00:41:04,670
IP and destination port for the same

00:41:00,410 --> 00:41:08,720
thing to simply check well who is

00:41:04,670 --> 00:41:10,820
talking HTTPS or HTTP or DNS and

00:41:08,720 --> 00:41:14,000
whatever and you see the relations of

00:41:10,820 --> 00:41:15,620
those hosts and the protocols as well so

00:41:14,000 --> 00:41:17,780
this is all dynamic you can use notes

00:41:15,620 --> 00:41:23,300
traffic to do all kind of reporting on

00:41:17,780 --> 00:41:27,230
that and even on the timeline you can

00:41:23,300 --> 00:41:31,040
stack the traffic charts and then look

00:41:27,230 --> 00:41:33,820
on the progress of your traffic and find

00:41:31,040 --> 00:41:37,880
out that somebody in your household is

00:41:33,820 --> 00:41:39,470
shopping again so those are kind of like

00:41:37,880 --> 00:41:47,420
the things that you can see with nary

00:41:39,470 --> 00:41:50,570
now a big area of nary or a big annoying

00:41:47,420 --> 00:41:53,240
thing maybe it depends on who you talk

00:41:50,570 --> 00:41:56,600
to where the maps and I tell you it's

00:41:53,240 --> 00:41:58,730
not easy to draw proper maps and still

00:41:56,600 --> 00:42:02,030
not is but I think I got a great deal

00:41:58,730 --> 00:42:03,650
ahead now and now you can draw maps

00:42:02,030 --> 00:42:07,370
based for example on the left

00:42:03,650 --> 00:42:08,990
on a device and you can tell how many

00:42:07,370 --> 00:42:12,830
hops away you want to have a network

00:42:08,990 --> 00:42:15,350
drawing of that root device and then it

00:42:12,830 --> 00:42:17,780
will draw that map it's now two hops or

00:42:15,350 --> 00:42:20,990
three hops away and you can increase and

00:42:17,780 --> 00:42:23,330
decrease this to see what you or find

00:42:20,990 --> 00:42:26,090
what you're looking for another way or

00:42:23,330 --> 00:42:29,150
another addition now here is a layer map

00:42:26,090 --> 00:42:30,460
it was inspired by a contribution from

00:42:29,150 --> 00:42:34,610
[Music]

00:42:30,460 --> 00:42:37,250
an ad user as well and I've added it so

00:42:34,610 --> 00:42:38,420
you can define the layers so in this

00:42:37,250 --> 00:42:40,640
example we have a core layer

00:42:38,420 --> 00:42:42,710
distribution access layer but you could

00:42:40,640 --> 00:42:45,770
also use inside/outside if you want to

00:42:42,710 --> 00:42:48,320
draw a DMC map and then draw your DMC

00:42:45,770 --> 00:42:51,230
devices and the beauty is that you

00:42:48,320 --> 00:42:53,030
define rules for each layer and if you

00:42:51,230 --> 00:42:55,400
add a new device in your network and

00:42:53,030 --> 00:42:56,990
this device matches those rules it will

00:42:55,400 --> 00:42:59,720
be automatically added you don't have to

00:42:56,990 --> 00:43:02,450
touch this map again it will just

00:42:59,720 --> 00:43:04,340
display the new device and that's it

00:43:02,450 --> 00:43:09,170
so it's pretty interesting also for

00:43:04,340 --> 00:43:11,210
documentation or as I said Neddie has

00:43:09,170 --> 00:43:13,970
some improvements on the monitoring side

00:43:11,210 --> 00:43:16,970
you can create those Maps and add it to

00:43:13,970 --> 00:43:19,430
a monitoring dashboard so this is a

00:43:16,970 --> 00:43:21,640
regular web page web page you could

00:43:19,430 --> 00:43:24,470
display on the big screen in your

00:43:21,640 --> 00:43:28,550
Operations Center and it will display

00:43:24,470 --> 00:43:31,120
all your zones all your security areas

00:43:28,550 --> 00:43:35,360
whatever even a core distribution

00:43:31,120 --> 00:43:37,520
network and the link load you see the

00:43:35,360 --> 00:43:39,950
links show different colors so that's

00:43:37,520 --> 00:43:42,410
the traffic on those links and the

00:43:39,950 --> 00:43:44,960
status of the devices you could also

00:43:42,410 --> 00:43:47,390
have a second map next to it with the

00:43:44,960 --> 00:43:48,890
latencies of the devices so you see if

00:43:47,390 --> 00:43:55,310
something is maybe not down but

00:43:48,890 --> 00:43:58,840
permanently high latency or has

00:43:55,310 --> 00:43:58,840
permanent highlighting the issues

00:43:59,069 --> 00:44:04,589
you will see these on those maps as well

00:44:02,150 --> 00:44:07,109
you get an editor with it so you can

00:44:04,589 --> 00:44:09,959
customize the looks of those maps either

00:44:07,109 --> 00:44:12,059
display a map one after another or all

00:44:09,959 --> 00:44:13,920
at the same time you can scale them you

00:44:12,059 --> 00:44:16,849
can sort them and then you have a nice

00:44:13,920 --> 00:44:19,289
dashboard this way it's again it's

00:44:16,849 --> 00:44:21,900
old-fashioned so you don't have drag and

00:44:19,289 --> 00:44:23,609
drop widgets but I will look at that

00:44:21,900 --> 00:44:25,170
maybe that's in the next version I don't

00:44:23,609 --> 00:44:32,180
know but for now you can at least

00:44:25,170 --> 00:44:36,869
customize your dashboards if the device

00:44:32,180 --> 00:44:40,199
dies and Neddy notices this it will

00:44:36,869 --> 00:44:43,380
create an incident an incident is like

00:44:40,199 --> 00:44:46,440
the a major event and an incident can be

00:44:43,380 --> 00:44:47,910
categorized so you can here you will see

00:44:46,440 --> 00:44:49,949
all the new incidents and you can

00:44:47,910 --> 00:44:51,269
categorize whether it was a power outage

00:44:49,949 --> 00:44:55,759
or something and then you can look back

00:44:51,269 --> 00:44:58,529
and make reports on that but this one is

00:44:55,759 --> 00:45:00,479
overhauled so you can display it also on

00:44:58,529 --> 00:45:05,509
your big dashboard and then see new

00:45:00,479 --> 00:45:05,509
upcoming incidents and react accordingly

00:45:05,630 --> 00:45:11,699
if you have a device which needs

00:45:09,420 --> 00:45:13,319
maintenance you probably don't want to

00:45:11,699 --> 00:45:15,269
create alerts so you can put it in

00:45:13,319 --> 00:45:19,170
maintenance mode it will turn up blue

00:45:15,269 --> 00:45:22,140
and will not be monitored until you put

00:45:19,170 --> 00:45:24,150
it back under active monitoring so this

00:45:22,140 --> 00:45:26,039
is also a new and little feature but

00:45:24,150 --> 00:45:28,799
it's really important if you have to do

00:45:26,039 --> 00:45:32,039
a lot of maintenance and don't want to

00:45:28,799 --> 00:45:34,410
disturb too many people another thing

00:45:32,039 --> 00:45:37,880
that I'm working on right now is tact

00:45:34,410 --> 00:45:41,249
VLANs so Nady was not able to discover

00:45:37,880 --> 00:45:44,219
tact VLANs on switch ports but the next

00:45:41,249 --> 00:45:46,880
version will be and I've already added a

00:45:44,219 --> 00:45:50,160
little report where you can see how many

00:45:46,880 --> 00:45:52,769
tact ports you have on a device for a

00:45:50,160 --> 00:45:57,900
certain VLAN so if you have two or more

00:45:52,769 --> 00:46:00,150
ports it's a green field if you have no

00:45:57,900 --> 00:46:03,779
access ports meaning the VLAN ISM is

00:46:00,150 --> 00:46:06,150
intact if you don't have any access

00:46:03,779 --> 00:46:10,559
ports you have a chip but if you do have

00:46:06,150 --> 00:46:12,900
untaek ports you get an interface plug

00:46:10,559 --> 00:46:14,730
if you have two you get a

00:46:12,900 --> 00:46:18,480
double plug if you have three or more

00:46:14,730 --> 00:46:20,580
you see the icon as well so this is to

00:46:18,480 --> 00:46:21,930
quickly show you how your VLANs are

00:46:20,580 --> 00:46:23,790
configured and whether you have

00:46:21,930 --> 00:46:26,280
inconsistencies and I think this is

00:46:23,790 --> 00:46:28,590
really it's getting really good that you

00:46:26,280 --> 00:46:30,150
can quickly see whether or why you have

00:46:28,590 --> 00:46:32,820
network problems or not reaching a

00:46:30,150 --> 00:46:35,430
certain network so again this is not

00:46:32,820 --> 00:46:41,430
quite finished yet but it's on a good

00:46:35,430 --> 00:46:43,680
course also little things time frame

00:46:41,430 --> 00:46:45,090
entry was a bit cumbersome in nettie

00:46:43,680 --> 00:46:48,270
because I didn't use any JavaScript

00:46:45,090 --> 00:46:51,500
frameworks JavaScript frameworks had

00:46:48,270 --> 00:46:54,780
sliders and nice widgets for years now

00:46:51,500 --> 00:46:57,510
I'm I was really reluctant to add this

00:46:54,780 --> 00:47:00,540
in the meantime browser support this

00:46:57,510 --> 00:47:02,340
natively and so I could add a slider

00:47:00,540 --> 00:47:05,010
widget for example and improve the whole

00:47:02,340 --> 00:47:06,770
time frame entry without any JavaScript

00:47:05,010 --> 00:47:09,450
frameworks that's kind of cool

00:47:06,770 --> 00:47:12,090
also the devices list got a new feature

00:47:09,450 --> 00:47:15,090
you can enter an OID and then quickly

00:47:12,090 --> 00:47:16,860
scan in real time a bunch of devices to

00:47:15,090 --> 00:47:21,990
check the results it can also be very

00:47:16,860 --> 00:47:25,290
helpful for troubleshooting as I said I

00:47:21,990 --> 00:47:27,450
knew I can set basically because I had

00:47:25,290 --> 00:47:30,030
to add all the country flags so I

00:47:27,450 --> 00:47:31,650
decided to new to use new icons those

00:47:30,030 --> 00:47:35,910
are from FatCow hosting they're pretty

00:47:31,650 --> 00:47:38,910
cool and very nice I could yeah improve

00:47:35,910 --> 00:47:42,720
the GUI with those again and also I've

00:47:38,910 --> 00:47:45,000
improved the RRD rendering no ugly

00:47:42,720 --> 00:47:46,890
frames anymore and transparent already

00:47:45,000 --> 00:47:51,180
is in the maps make it really

00:47:46,890 --> 00:47:53,370
interesting speaking of our IDs so that

00:47:51,180 --> 00:47:56,310
was the display that Network I mentioned

00:47:53,370 --> 00:47:58,320
with the 11000 switches being monitored

00:47:56,310 --> 00:48:00,150
but all the interesting stuff is

00:47:58,320 --> 00:48:03,390
happening on this pixel right that's not

00:48:00,150 --> 00:48:05,970
very nice so I changed it a bit so you

00:48:03,390 --> 00:48:07,530
can see actually now really what what's

00:48:05,970 --> 00:48:09,900
happening and you even see now here we

00:48:07,530 --> 00:48:12,680
had a few going down and we have a few

00:48:09,900 --> 00:48:18,840
slow devices as well so that's yeah

00:48:12,680 --> 00:48:25,950
getting much better now now last but not

00:48:18,840 --> 00:48:29,369
least this is also work in progress

00:48:25,950 --> 00:48:32,210
and it's been done like a week ago or so

00:48:29,369 --> 00:48:35,520
I actually added the slides just today

00:48:32,210 --> 00:48:39,030
so Peter hog and I were working on

00:48:35,520 --> 00:48:41,010
latency measurement 4nf dum sounds good

00:48:39,030 --> 00:48:43,950
right well actually he's working on it

00:48:41,010 --> 00:48:46,290
I was just nagging hing about it so but

00:48:43,950 --> 00:48:49,770
anyhow he did it and it's amazing so now

00:48:46,290 --> 00:48:54,210
if you have a capture probe with NFP cap

00:48:49,770 --> 00:48:56,849
D you can use this for measuring the

00:48:54,210 --> 00:48:58,950
latencies of client server and the

00:48:56,849 --> 00:49:00,540
application and for troubleshooting

00:48:58,950 --> 00:49:03,990
again this is going to be a big

00:49:00,540 --> 00:49:06,510
advantage and I've added a quick fix to

00:49:03,990 --> 00:49:08,210
the GUI already so you can see when when

00:49:06,510 --> 00:49:10,619
a latency exceeds a certain threshold

00:49:08,210 --> 00:49:13,140
that's the client latency and in this

00:49:10,619 --> 00:49:15,210
client I think is on the wireless LAN of

00:49:13,140 --> 00:49:18,000
course it will have a high latency and

00:49:15,210 --> 00:49:21,060
on wireless it's very inconsistent so

00:49:18,000 --> 00:49:23,700
you can easily see that and if this user

00:49:21,060 --> 00:49:25,079
would complain about a slow application

00:49:23,700 --> 00:49:26,849
you can tell them well it's it's your

00:49:25,079 --> 00:49:30,660
wireless network it's not the server

00:49:26,849 --> 00:49:33,450
side it's very interesting so that's a

00:49:30,660 --> 00:49:37,079
really cool thing and also I mentioned

00:49:33,450 --> 00:49:39,690
that yes SNMP is is a big part of my

00:49:37,079 --> 00:49:42,660
life but I'm looking at other things and

00:49:39,690 --> 00:49:45,450
it happens that I have a few partners

00:49:42,660 --> 00:49:48,869
which are very interested in nadie doing

00:49:45,450 --> 00:49:49,230
more than just network discovery so I've

00:49:48,869 --> 00:49:52,160
added

00:49:49,230 --> 00:49:55,170
wmii discovery for Windows hosts which

00:49:52,160 --> 00:49:58,079
shifts Neddie from a networking tool to

00:49:55,170 --> 00:50:00,329
an actual asset management or asset

00:49:58,079 --> 00:50:03,150
discovery tool and this works already

00:50:00,329 --> 00:50:06,119
you can discover Windows hosts even the

00:50:03,150 --> 00:50:08,430
connected monitors and CPUs and app

00:50:06,119 --> 00:50:09,750
installed applications and I've expanded

00:50:08,430 --> 00:50:13,260
it now to SSH

00:50:09,750 --> 00:50:16,410
so I can discover Linux hosts agentless

00:50:13,260 --> 00:50:18,720
so I just connect to the host login or

00:50:16,410 --> 00:50:21,690
use an SSH key so I don't have to log in

00:50:18,720 --> 00:50:23,790
and then I can do a VM stat I also get

00:50:21,690 --> 00:50:25,650
CPU memory and we're working on

00:50:23,790 --> 00:50:28,079
expanding this as well to get more

00:50:25,650 --> 00:50:30,300
information about the host itself which

00:50:28,079 --> 00:50:33,200
then can be fed again into a monitoring

00:50:30,300 --> 00:50:36,990
tool to add new targets for monitoring

00:50:33,200 --> 00:50:39,329
but as a byproduct really I managed to

00:50:36,990 --> 00:50:39,630
create graphs from it so you can see

00:50:39,329 --> 00:50:41,790
this

00:50:39,630 --> 00:50:43,890
a regular Linux host without SNMP

00:50:41,790 --> 00:50:47,250
installed and you see the CPU load

00:50:43,890 --> 00:50:49,830
memory temperature and disk i/o just

00:50:47,250 --> 00:50:54,870
like that and it's yeah it's it's not

00:50:49,830 --> 00:50:56,430
like it's not scaling beyond I don't

00:50:54,870 --> 00:50:58,440
know how many devices but it's it's not

00:50:56,430 --> 00:50:59,900
intended for scaling yet but I'm

00:50:58,440 --> 00:51:02,280
thinking about making this

00:50:59,900 --> 00:51:05,820
multi-threaded with that you could

00:51:02,280 --> 00:51:07,710
easily update the thousand hosts every

00:51:05,820 --> 00:51:10,500
five minutes or so we'll see I don't

00:51:07,710 --> 00:51:14,190
know where it's going but yeah it's it's

00:51:10,500 --> 00:51:16,470
a new thing that Nettie can do now and

00:51:14,190 --> 00:51:19,920
another thing I'm working on right now

00:51:16,470 --> 00:51:22,410
so imagine this customer with the eleven

00:51:19,920 --> 00:51:24,840
thousand switches he decided to move to

00:51:22,410 --> 00:51:29,430
another vendor meaning he has to replace

00:51:24,840 --> 00:51:32,610
like three thousand switches now to from

00:51:29,430 --> 00:51:34,020
vendor a to vendor B now do you really

00:51:32,610 --> 00:51:36,960
want to rewrite three thousand

00:51:34,020 --> 00:51:39,750
configurations it's kind of a boring job

00:51:36,960 --> 00:51:41,790
right well you could use conflict blocks

00:51:39,750 --> 00:51:43,950
and then piece them together but if you

00:51:41,790 --> 00:51:45,810
have rate limits configured on switch

00:51:43,950 --> 00:51:47,400
ports or different VLANs on different

00:51:45,810 --> 00:51:49,380
switch ports it's still very cumbersome

00:51:47,400 --> 00:51:51,510
so I'm working on it on a translator

00:51:49,380 --> 00:51:55,740
module where you can use regular

00:51:51,510 --> 00:51:59,700
expressions and a source type to match

00:51:55,740 --> 00:52:02,550
config parts and transform it into a new

00:51:59,700 --> 00:52:04,590
conflict part and then you can have an

00:52:02,550 --> 00:52:07,140
automatically pieced together into a new

00:52:04,590 --> 00:52:07,770
conflict so this again is work in

00:52:07,140 --> 00:52:10,290
progress

00:52:07,770 --> 00:52:12,510
but it should be available in the

00:52:10,290 --> 00:52:13,890
upcoming native version and it could be

00:52:12,510 --> 00:52:17,250
very interesting if you have big

00:52:13,890 --> 00:52:23,400
migrations and I'm not aware of many

00:52:17,250 --> 00:52:27,470
tools that can do this so I have one

00:52:23,400 --> 00:52:30,810
more sorry um networking is nice and

00:52:27,470 --> 00:52:33,240
fine in the enterprise but then often

00:52:30,810 --> 00:52:37,170
you have internet connections right to

00:52:33,240 --> 00:52:40,350
you do PB bgp peering to your provider

00:52:37,170 --> 00:52:41,820
and for now until now and Eddie wasn't

00:52:40,350 --> 00:52:44,730
able to do anything with it I mean you

00:52:41,820 --> 00:52:47,340
could ping the peers which doesn't help

00:52:44,730 --> 00:52:49,080
you if the peering goes down so you

00:52:47,340 --> 00:52:52,440
still want to know if it's the peering

00:52:49,080 --> 00:52:53,460
is active and you learn routes from your

00:52:52,440 --> 00:52:57,270
internet peer

00:52:53,460 --> 00:52:59,690
so with Nadia 1.7 you will have the

00:52:57,270 --> 00:53:02,730
option to monitor your edge rather and

00:52:59,690 --> 00:53:05,250
monitor the BGP peers which will be

00:53:02,730 --> 00:53:08,099
added as fake links and remote devices

00:53:05,250 --> 00:53:09,809
and I'm not touching the remote device

00:53:08,099 --> 00:53:12,059
I'm not pinging it or anything I'm just

00:53:09,809 --> 00:53:13,920
checking the BGP link if it's

00:53:12,059 --> 00:53:15,540
established and you will see events

00:53:13,920 --> 00:53:19,050
accordingly and on the map you will see

00:53:15,540 --> 00:53:21,270
the status of your BGP peers another

00:53:19,050 --> 00:53:22,740
interesting thing and this is also to

00:53:21,270 --> 00:53:25,859
prove that I am looking at new

00:53:22,740 --> 00:53:30,150
technologies I have added or replaced

00:53:25,859 --> 00:53:32,880
the old Google API stuff which was a bit

00:53:30,150 --> 00:53:36,540
iffy on on the licensing side anyways so

00:53:32,880 --> 00:53:39,119
it's all using leaflet now and open

00:53:36,540 --> 00:53:40,470
street maps and leaflet is really cool

00:53:39,119 --> 00:53:42,720
and really powerful

00:53:40,470 --> 00:53:45,240
I can recommend looking at that for

00:53:42,720 --> 00:53:48,119
everybody and it allows you to use

00:53:45,240 --> 00:53:49,800
plugins and then add heat maps and I

00:53:48,119 --> 00:53:52,290
don't know what heat maps I will add yet

00:53:49,800 --> 00:53:54,390
this is just an example but it can be

00:53:52,290 --> 00:53:57,839
very interesting to further analyze your

00:53:54,390 --> 00:54:00,900
network and we will see where it is

00:53:57,839 --> 00:54:06,510
going or how far I will get but yeah it

00:54:00,900 --> 00:54:10,710
looks very promising already so that's

00:54:06,510 --> 00:54:13,710
it update some more you wanted to hear

00:54:10,710 --> 00:54:16,859
I hope not but yeah if you have any

00:54:13,710 --> 00:54:23,700
questions feel free to ask them now or

00:54:16,859 --> 00:54:24,990
I'll stick around of course uh Krista

00:54:23,700 --> 00:54:28,920
Naga from the University of Pittsburgh

00:54:24,990 --> 00:54:31,230
networking department you talked about

00:54:28,920 --> 00:54:35,099
the maps that you're producing out of

00:54:31,230 --> 00:54:38,940
the forwarding table mm-hmm I using any

00:54:35,099 --> 00:54:42,359
CDP or CDP or lldp tip for it not on

00:54:38,940 --> 00:54:45,920
this one you just saw okay the whole

00:54:42,359 --> 00:54:48,059
network has a few LDP devices but it

00:54:45,920 --> 00:54:49,290
doesn't help me at all to draw those

00:54:48,059 --> 00:54:51,030
maps okay you're basically just

00:54:49,290 --> 00:54:56,940
calculating it from the forwarding table

00:54:51,030 --> 00:54:59,790
yes okay and the other one you're doing

00:54:56,940 --> 00:55:02,069
interface statistics with that flow so I

00:54:59,790 --> 00:55:06,869
could use it as a like a replacement for

00:55:02,069 --> 00:55:07,440
our cacti yeah well it's net flow is not

00:55:06,869 --> 00:55:12,240
per into

00:55:07,440 --> 00:55:14,730
face NetFlow is you have certain but I

00:55:12,240 --> 00:55:16,650
don't have let me rephrase that new

00:55:14,730 --> 00:55:18,810
switches can do NetFlow on the access

00:55:16,650 --> 00:55:20,280
but usually you have NetFlow capable

00:55:18,810 --> 00:55:22,740
devices in the corner in the

00:55:20,280 --> 00:55:24,690
distribution layer okay so each and

00:55:22,740 --> 00:55:28,170
every interface you still probably want

00:55:24,690 --> 00:55:31,980
to pull at least the important ones okay

00:55:28,170 --> 00:55:34,590
thank you only one question is it

00:55:31,980 --> 00:55:37,160
possible to change pots with Nidhi's

00:55:34,590 --> 00:55:39,750
depends on the device on the pot home

00:55:37,160 --> 00:55:41,850
change what change the villain for

00:55:39,750 --> 00:55:46,680
example there has been a contribution

00:55:41,850 --> 00:55:50,240
that can do that not natively there

00:55:46,680 --> 00:55:54,090
might be ways around it you can create

00:55:50,240 --> 00:55:56,580
with the minus X option I showed you you

00:55:54,090 --> 00:56:00,240
or you can also send commands to a

00:55:56,580 --> 00:56:03,570
device doing that so it's maybe not that

00:56:00,240 --> 00:56:04,640
intuitive but it can be done yes okay

00:56:03,570 --> 00:56:08,190
thanks

00:56:04,640 --> 00:56:10,560
it wasn't originally intended to do this

00:56:08,190 --> 00:56:20,100
but it's sort of moving in there now

00:56:10,560 --> 00:56:22,230
yeah anyone else one question from my

00:56:20,100 --> 00:56:26,010
side you said you can get a data out

00:56:22,230 --> 00:56:27,420
from the API no 1180 what kind of data

00:56:26,010 --> 00:56:30,240
will look it out for example like the

00:56:27,420 --> 00:56:32,220
entire configuration of of a switch or

00:56:30,240 --> 00:56:34,680
for example the Devender and so on yes

00:56:32,220 --> 00:56:40,260
you can be Dania and it's all really

00:56:34,680 --> 00:56:42,450
tied into the database topology so it's

00:56:40,260 --> 00:56:45,360
very simple I mean you have if you do a

00:56:42,450 --> 00:56:48,300
URL rewrite you can go to the native

00:56:45,360 --> 00:56:51,240
server slash API slash the table name

00:56:48,300 --> 00:56:53,610
devices and then you can add a query to

00:56:51,240 --> 00:56:56,400
filter certain devices and that's it you

00:56:53,610 --> 00:56:59,070
get a choice on back or CSV if you if

00:56:56,400 --> 00:57:01,650
you prefer ok and it's all it's on the

00:56:59,070 --> 00:57:08,370
webpage it's documented ok right thank

00:57:01,650 --> 00:57:11,100
you look do you do anything for

00:57:08,370 --> 00:57:13,830
overlay networks like the exelon and

00:57:11,100 --> 00:57:17,430
Yuri and such things yeah good question

00:57:13,830 --> 00:57:20,820
I mean there is unfortunately there's no

00:57:17,430 --> 00:57:22,710
real standard that's predominant right

00:57:20,820 --> 00:57:24,840
so it's not that easy to do and I

00:57:22,710 --> 00:57:28,590
haven't had the chance to look into this

00:57:24,840 --> 00:57:30,540
like on a real case but it's again it's

00:57:28,590 --> 00:57:32,280
something I'm open to and I'm interested

00:57:30,540 --> 00:57:34,950
as well to see what Nadi can get out of

00:57:32,280 --> 00:57:37,260
it and if it means I would have to

00:57:34,950 --> 00:57:41,700
analyze conflicts or do some enterprise

00:57:37,260 --> 00:57:45,060
map queries it does support vrf and in

00:57:41,700 --> 00:57:48,860
that case MPLS things so you see vrf

00:57:45,060 --> 00:57:56,070
sand and right distinguishers and stuff

00:57:48,860 --> 00:58:06,240
in that respect but not fabrics yet okay

00:57:56,070 --> 00:58:08,610
one more question or performance-wise

00:58:06,240 --> 00:58:10,410
have you had some performance have you

00:58:08,610 --> 00:58:13,200
done some performance testing and how

00:58:10,410 --> 00:58:14,880
many valley is can it collect for some

00:58:13,200 --> 00:58:17,280
time frame like per second or per minute

00:58:14,880 --> 00:58:19,610
or whatever your friend says so the

00:58:17,280 --> 00:58:22,620
discovery was designed to be quiet

00:58:19,610 --> 00:58:25,410
therefore it's also not like scaling or

00:58:22,620 --> 00:58:29,130
multi-threaded so it's it's rather quiet

00:58:25,410 --> 00:58:31,530
and unobtrusive but um I had a customer

00:58:29,130 --> 00:58:33,830
also in Germany that wanted to get

00:58:31,530 --> 00:58:37,770
information of his phones so he had a

00:58:33,830 --> 00:58:40,080
phone via phones can do SNMP so I did a

00:58:37,770 --> 00:58:44,160
custom discovery for him that is

00:58:40,080 --> 00:58:46,320
threaded and fetches a few values of

00:58:44,160 --> 00:58:50,880
each phone and it can do a couple

00:58:46,320 --> 00:58:54,030
thousand phones what was it in about I

00:58:50,880 --> 00:58:55,950
don't know ten minutes or so or a five I

00:58:54,030 --> 00:58:58,770
mean it's it's much faster than the

00:58:55,950 --> 00:59:00,990
actual discovery so net is not designed

00:58:58,770 --> 00:59:03,060
to for example replace cacti which can

00:59:00,990 --> 00:59:05,520
graph interface traffic every five

00:59:03,060 --> 00:59:09,210
minutes because it's not multi-threaded

00:59:05,520 --> 00:59:11,100
but if you tweak it a bit and you start

00:59:09,210 --> 00:59:13,140
several Maddie's in parallel you as you

00:59:11,100 --> 00:59:17,160
can see with this big network you can

00:59:13,140 --> 00:59:21,900
that get decent-sized networks securely

00:59:17,160 --> 00:59:24,000
discovered yeah all right and um we have

00:59:21,900 --> 00:59:25,950
a coffee break now so I think you're

00:59:24,000 --> 00:59:27,940
still here for questions afterwards so

00:59:25,950 --> 00:59:34,389
um thank you very much for the nice talk

00:59:27,940 --> 00:59:34,389

YouTube URL: https://www.youtube.com/watch?v=K5YuPGyQMmg


