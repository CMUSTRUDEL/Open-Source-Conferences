Title: OSMC 2016 | Automated monitoring with Icinga and NSClient++ (EN) by Michael Medin
Publication date: 2016-12-14
Playlist: OSMC 2016 | Open Source Monitoring Conference
Description: 
	A brief guide on how to create scripts to automate configuration management in Icinga from NSClient++. Not only will we setup the host when NSClient++ is installed we will also setup relevant service monitoring as well depending on what is running on the machine.
Captions: 
	00:00:09,500 --> 00:00:15,020
ok everyone welcome back and give please

00:00:13,520 --> 00:00:24,050
give a warm welcome to the man without

00:00:15,020 --> 00:00:26,570
choose Mike you met in this

00:00:24,050 --> 00:00:28,250
hello everyone can hear me now I can't

00:00:26,570 --> 00:00:31,160
hear myself that's always good

00:00:28,250 --> 00:00:33,050
this talk is sort of about automated

00:00:31,160 --> 00:00:34,760
monitoring we Dennis client but of

00:00:33,050 --> 00:00:36,680
course I had to throw a nice singer or

00:00:34,760 --> 00:00:38,750
something because otherwise it won't be

00:00:36,680 --> 00:00:40,190
relevant and I've been coming to this

00:00:38,750 --> 00:00:41,780
conference for quite some time and

00:00:40,190 --> 00:00:43,910
there's always this I sing a talk at the

00:00:41,780 --> 00:00:46,100
end where they have standing ovations

00:00:43,910 --> 00:00:47,810
and the room is full and I figured if I

00:00:46,100 --> 00:00:56,270
put icing in there I might get the same

00:00:47,810 --> 00:00:58,760
thing but yeah now you're getting it so

00:00:56,270 --> 00:01:00,350
it's paying off already but it will

00:00:58,760 --> 00:01:03,140
actually be but I think I have ten

00:01:00,350 --> 00:01:05,570
slides out of 116 that's about icing so

00:01:03,140 --> 00:01:08,600
a little bit but we're gonna start off

00:01:05,570 --> 00:01:10,820
with a couple of these things because I

00:01:08,600 --> 00:01:12,680
like to do presentations and I figured

00:01:10,820 --> 00:01:13,880
I'd teach people something and I don't

00:01:12,680 --> 00:01:15,560
know anything about monitoring really

00:01:13,880 --> 00:01:18,380
I'm just here because I know people and

00:01:15,560 --> 00:01:19,670
they let me come but I have been doing

00:01:18,380 --> 00:01:20,960
presentations for a while so I figured

00:01:19,670 --> 00:01:22,580
I'd share with you how you can actually

00:01:20,960 --> 00:01:24,020
do this successfully and and here we

00:01:22,580 --> 00:01:26,240
have a great tip if you're talking about

00:01:24,020 --> 00:01:28,040
your topic you can shave off three

00:01:26,240 --> 00:01:30,170
minutes of the 45 minute session you

00:01:28,040 --> 00:01:31,820
need to do so now we're just 42 minutes

00:01:30,170 --> 00:01:33,080
of content that we need so I'll give you

00:01:31,820 --> 00:01:34,790
a couple of these tips throughout the

00:01:33,080 --> 00:01:37,880
presentation and I'll show you how you

00:01:34,790 --> 00:01:39,140
can be a great presenter or at least do

00:01:37,880 --> 00:01:41,120
a presentation without actually having

00:01:39,140 --> 00:01:42,830
to prepare anything so my name is

00:01:41,120 --> 00:01:43,310
Michael Marian and I'm from Stockholm

00:01:42,830 --> 00:01:45,920
Sweden

00:01:43,310 --> 00:01:47,570
and I've been here for nine years so I

00:01:45,920 --> 00:01:50,299
assumed there would be a big cake next

00:01:47,570 --> 00:01:52,159
year yeah but we'll see if that happens

00:01:50,299 --> 00:01:53,810
and as I said I don't really do

00:01:52,159 --> 00:01:56,720
monitoring I don't work with monitoring

00:01:53,810 --> 00:01:59,030
I installed the graph on over graphite

00:01:56,720 --> 00:02:00,770
some darker image but a week back still

00:01:59,030 --> 00:02:03,890
haven't figured out how to make a rate

00:02:00,770 --> 00:02:05,420
out of my ever-increasing value but we

00:02:03,890 --> 00:02:07,640
quite quickly realized that if we took

00:02:05,420 --> 00:02:09,679
the monitor and tilted it sideways it

00:02:07,640 --> 00:02:12,319
turned into a rate so we've sort of

00:02:09,679 --> 00:02:14,360
solved that problem and that's sort of

00:02:12,319 --> 00:02:15,920
what I am I'm a problem solver or as I

00:02:14,360 --> 00:02:18,470
like to say I love to build things and

00:02:15,920 --> 00:02:20,390
doesn't matter if it's blue non Lego

00:02:18,470 --> 00:02:23,330
plastic pieces which apparently are hard

00:02:20,390 --> 00:02:25,460
as a kid or if it is the real deal

00:02:23,330 --> 00:02:26,660
which is LEGO pieces around his client

00:02:25,460 --> 00:02:29,390
or something like that but I love to

00:02:26,660 --> 00:02:31,040
build things so that's why I'm working

00:02:29,390 --> 00:02:32,990
with on his client and that's sort of

00:02:31,040 --> 00:02:34,940
really what drives me date my date and

00:02:32,990 --> 00:02:37,190
then a couple of years back you know

00:02:34,940 --> 00:02:40,970
I've tried to plan things ahead but I

00:02:37,190 --> 00:02:42,890
ended up with two girls and it's not so

00:02:40,970 --> 00:02:45,650
bad I'm not trying to diss the more

00:02:42,890 --> 00:02:49,280
thing but the initial reaction was a bit

00:02:45,650 --> 00:02:52,070
like this no because I want to play with

00:02:49,280 --> 00:02:53,930
Legos fortunately there is actually pink

00:02:52,070 --> 00:02:56,360
Legos so I'm fine

00:02:53,930 --> 00:02:58,550
so if you get girl don't be worried you

00:02:56,360 --> 00:03:02,030
know there's a lot of nice girl toys

00:02:58,550 --> 00:03:03,800
that are good for voice or for me and

00:03:02,030 --> 00:03:05,050
and here's another one of these tips you

00:03:03,800 --> 00:03:07,880
know if you if you talk about yourself

00:03:05,050 --> 00:03:09,470
shave off another five minutes and so

00:03:07,880 --> 00:03:12,770
we're quite quickly realize that you

00:03:09,470 --> 00:03:14,810
don't really need any content at all and

00:03:12,770 --> 00:03:16,850
now we're gonna move on to end its

00:03:14,810 --> 00:03:18,440
client and you probably asked you have

00:03:16,850 --> 00:03:20,900
what is this and it's client thing

00:03:18,440 --> 00:03:23,150
because no one is really using it and

00:03:20,900 --> 00:03:24,830
that's probably a good thing but I like

00:03:23,150 --> 00:03:27,709
to think of it as a general purpose

00:03:24,830 --> 00:03:29,540
agent suit supports protocols it support

00:03:27,709 --> 00:03:31,970
paradigms it's will Jackson is four

00:03:29,540 --> 00:03:35,780
scripts and that's pretty much it and

00:03:31,970 --> 00:03:38,030
the whole general purpose thing is

00:03:35,780 --> 00:03:40,760
something I tend to call in a sales

00:03:38,030 --> 00:03:43,850
manner that it is modular by design and

00:03:40,760 --> 00:03:45,739
highly extensible what customers or

00:03:43,850 --> 00:03:47,900
users usually say is that it is

00:03:45,739 --> 00:03:49,880
complicated and these are essentially

00:03:47,900 --> 00:03:52,910
the same thing but from this slightly

00:03:49,880 --> 00:03:55,010
different perspective so you get to pick

00:03:52,910 --> 00:03:57,470
which side you're on but but I'm of

00:03:55,010 --> 00:03:59,870
course for the more positive spin on it

00:03:57,470 --> 00:04:02,209
but it's quite old I usually say since

00:03:59,870 --> 00:04:04,220
2003 but I don't really know honestly

00:04:02,209 --> 00:04:05,769
because I wrote it at work and we used

00:04:04,220 --> 00:04:08,480
it for a while and then I throw it up on

00:04:05,769 --> 00:04:11,090
SourceForge which is the old version of

00:04:08,480 --> 00:04:13,580
github I guess the first commit is from

00:04:11,090 --> 00:04:16,880
2005 so it's it's obviously before then

00:04:13,580 --> 00:04:18,650
but no clue really it's also open source

00:04:16,880 --> 00:04:20,180
and not open core like a lot of the

00:04:18,650 --> 00:04:22,580
other tools that are presented here and

00:04:20,180 --> 00:04:24,650
and this means that you know it is the

00:04:22,580 --> 00:04:26,600
crappy version there is no fancy version

00:04:24,650 --> 00:04:29,290
that actually works even if you pay me

00:04:26,600 --> 00:04:31,490
money or something but but it's it's

00:04:29,290 --> 00:04:34,100
it's also good because it means that

00:04:31,490 --> 00:04:35,570
you're not missing out so feel free to

00:04:34,100 --> 00:04:37,960
not pay me any money and you get the

00:04:35,570 --> 00:04:40,790
same crappy product anyway

00:04:37,960 --> 00:04:42,140
it's also for Linux and windows and I

00:04:40,790 --> 00:04:45,380
don't think there is anyone who actually

00:04:42,140 --> 00:04:46,910
uses it on Linux apart from me but but

00:04:45,380 --> 00:04:49,280
it's there and you can use it on Linux

00:04:46,910 --> 00:04:51,230
and it sort of does the same thing and

00:04:49,280 --> 00:04:53,300
then I usually throw in one of these

00:04:51,230 --> 00:04:54,980
slides saying that you know five zero is

00:04:53,300 --> 00:04:57,770
the latest version you should be using

00:04:54,980 --> 00:05:01,490
and then I realized in the in the slide

00:04:57,770 --> 00:05:03,380
notes that it said oh four one is stable

00:05:01,490 --> 00:05:05,630
please use it so I've been using the

00:05:03,380 --> 00:05:06,950
exact same slide for the last you know

00:05:05,630 --> 00:05:09,920
10 years or something

00:05:06,950 --> 00:05:11,750
and that's another pro tip you know if

00:05:09,920 --> 00:05:13,250
you're reusing your slides from last

00:05:11,750 --> 00:05:15,940
year you know you can shave off another

00:05:13,250 --> 00:05:19,400
5 minutes without anyone noticing

00:05:15,940 --> 00:05:21,260
but that said oh 6 0 is gonna be out by

00:05:19,400 --> 00:05:23,990
year-end and this is one of those mental

00:05:21,260 --> 00:05:26,180
deadlines I set for myself it won't be

00:05:23,990 --> 00:05:28,340
out then but if I set myself a mental

00:05:26,180 --> 00:05:30,680
deadline I will at least work towards it

00:05:28,340 --> 00:05:34,070
and you know that June or something next

00:05:30,680 --> 00:05:36,260
year would probably be out for real and

00:05:34,070 --> 00:05:38,630
that sort of brings us to what is new

00:05:36,260 --> 00:05:40,460
because there is some new things and I

00:05:38,630 --> 00:05:42,470
thought I'll start with oh for one which

00:05:40,460 --> 00:05:45,740
is diversion I out of my slide deck

00:05:42,470 --> 00:05:46,910
there and this was a big change that's

00:05:45,740 --> 00:05:49,750
when essentially rewrote the entire

00:05:46,910 --> 00:05:51,920
program but it didn't really change

00:05:49,750 --> 00:05:53,990
externally so for people using it the

00:05:51,920 --> 00:05:57,320
only difference was that you could use a

00:05:53,990 --> 00:05:58,640
new config file syntax but internally

00:05:57,320 --> 00:06:01,670
everything was rewritten and changed

00:05:58,640 --> 00:06:03,500
quite a lot then we had oh for two which

00:06:01,670 --> 00:06:05,210
was the version where things actually

00:06:03,500 --> 00:06:06,590
changed for the end users because that's

00:06:05,210 --> 00:06:08,750
when we sort of embraced a whole modern

00:06:06,590 --> 00:06:10,490
Windows thing where everything that

00:06:08,750 --> 00:06:12,380
didn't work anymore on Windows Vista in

00:06:10,490 --> 00:06:14,840
2008 and things like that was starting

00:06:12,380 --> 00:06:16,700
to to adopted but it's also when I

00:06:14,840 --> 00:06:18,680
started to make or try to make things

00:06:16,700 --> 00:06:21,470
simpler so that instead of having to

00:06:18,680 --> 00:06:22,880
write check CPU with you know 4000

00:06:21,470 --> 00:06:24,920
command line options you could just do

00:06:22,880 --> 00:06:26,750
check CPU and it will do something if

00:06:24,920 --> 00:06:27,950
it's not what you want you obviously

00:06:26,750 --> 00:06:29,390
have to change it but at least you

00:06:27,950 --> 00:06:32,090
wouldn't have to change it before you

00:06:29,390 --> 00:06:33,500
know what it was so pretty much all the

00:06:32,090 --> 00:06:35,450
checks in and his client will do

00:06:33,500 --> 00:06:37,250
something sensible out of the box and

00:06:35,450 --> 00:06:40,430
then you can always tweak it if you want

00:06:37,250 --> 00:06:42,650
to and then we had over 4:3 and that was

00:06:40,430 --> 00:06:44,900
supposed to be a bug fix version and I

00:06:42,650 --> 00:06:46,220
just threw in a rest api for fun and

00:06:44,900 --> 00:06:48,830
then I discovered the whole concept of

00:06:46,220 --> 00:06:50,419
single page apps and I magically had a

00:06:48,830 --> 00:06:51,610
web interface for Anna's client which

00:06:50,419 --> 00:06:54,430
was awesome

00:06:51,610 --> 00:06:56,890
for me not so awesome for you guys

00:06:54,430 --> 00:06:59,860
because it was a bit buggy but you can't

00:06:56,890 --> 00:07:01,600
get everything right and the other thing

00:06:59,860 --> 00:07:03,670
was the whole performance data helpers

00:07:01,600 --> 00:07:05,200
if you haven't encountered problems with

00:07:03,670 --> 00:07:07,960
them you probably won't notice it but

00:07:05,200 --> 00:07:09,220
for the other half of the world that the

00:07:07,960 --> 00:07:11,980
performance data helpers are never

00:07:09,220 --> 00:07:13,540
working for these things started to work

00:07:11,980 --> 00:07:16,570
so it got a lot better for them so I

00:07:13,540 --> 00:07:18,520
think it's a good change but in essence

00:07:16,570 --> 00:07:20,080
not that much I mean there's always bug

00:07:18,520 --> 00:07:22,660
fixes and things like that but then we

00:07:20,080 --> 00:07:24,970
have o 4 4 which is a major new thing

00:07:22,660 --> 00:07:28,090
because that has a bug fixed installer

00:07:24,970 --> 00:07:30,880
and that's pretty much it and this year

00:07:28,090 --> 00:07:32,860
we have oh five zero which is one of

00:07:30,880 --> 00:07:35,710
those things where I've actually learned

00:07:32,860 --> 00:07:36,970
how to write web uisce so now I'm not

00:07:35,710 --> 00:07:38,440
just playing around

00:07:36,970 --> 00:07:40,270
unfortunately I should be working

00:07:38,440 --> 00:07:41,710
building some web UI so I need to

00:07:40,270 --> 00:07:43,900
rewrite it again because we realized

00:07:41,710 --> 00:07:45,580
that it's not very well written but we

00:07:43,900 --> 00:07:48,160
also got things like collecting support

00:07:45,580 --> 00:07:49,780
metrics and the infamous count bug has

00:07:48,160 --> 00:07:52,270
been fixed as well and there's a rest

00:07:49,780 --> 00:07:55,390
client if you want to go away from the

00:07:52,270 --> 00:07:57,550
whole NRP thing and that said we have oh

00:07:55,390 --> 00:07:59,410
six zero which is the next major version

00:07:57,550 --> 00:08:02,830
that's one it can come out soon but

00:07:59,410 --> 00:08:04,020
there is a beta version or what you want

00:08:02,830 --> 00:08:05,890
to call it night they build out

00:08:04,020 --> 00:08:08,260
yesterday I think this morning or

00:08:05,890 --> 00:08:10,000
something like that and hopefully there

00:08:08,260 --> 00:08:12,310
will be you know the version 3 of the

00:08:10,000 --> 00:08:14,980
web UI but that depends of if I have a

00:08:12,310 --> 00:08:17,560
boring Christmas or not but what will be

00:08:14,980 --> 00:08:19,420
for sure is an events support and we

00:08:17,560 --> 00:08:21,850
will also have some sort of storage so

00:08:19,420 --> 00:08:24,790
that your plugin can save its state

00:08:21,850 --> 00:08:27,070
across runs and here you have another

00:08:24,790 --> 00:08:29,020
one of those nice tips you know if you

00:08:27,070 --> 00:08:31,360
read and changelog out loud it takes

00:08:29,020 --> 00:08:32,740
about five minutes and if someone were

00:08:31,360 --> 00:08:34,360
interested in the changed or they would

00:08:32,740 --> 00:08:37,000
presumably already have read it but but

00:08:34,360 --> 00:08:39,010
it's a good way to kill time and this is

00:08:37,000 --> 00:08:40,840
usually when I inject this slide and

00:08:39,010 --> 00:08:42,970
this by the way it's the same slide I've

00:08:40,840 --> 00:08:46,120
been having for 10 years so the kids are

00:08:42,970 --> 00:08:48,220
much bigger now as they tend to grow but

00:08:46,120 --> 00:08:50,500
sometimes I'm not working on Anna's

00:08:48,220 --> 00:08:54,760
client and that's usually when I'm

00:08:50,500 --> 00:08:56,560
working on other things but I usually

00:08:54,760 --> 00:08:58,660
say that if I'm not responding you know

00:08:56,560 --> 00:09:01,360
send me another email because I probably

00:08:58,660 --> 00:09:03,760
forgot what happened last week and then

00:09:01,360 --> 00:09:04,720
if I didn't respond and it will never

00:09:03,760 --> 00:09:06,430
happen

00:09:04,720 --> 00:09:08,189
but I usually do try to you know

00:09:06,430 --> 00:09:10,870
interact with the community sometimes

00:09:08,189 --> 00:09:12,370
and I also usually throw this in that

00:09:10,870 --> 00:09:14,379
you know sponsoring donations support

00:09:12,370 --> 00:09:16,839
you know I've always want hit more money

00:09:14,379 --> 00:09:20,439
and fortunately it's not happening

00:09:16,839 --> 00:09:22,029
but I always try and and with that I

00:09:20,439 --> 00:09:24,069
want to say thank you to my actual

00:09:22,029 --> 00:09:25,540
sponsors these are actually the

00:09:24,069 --> 00:09:27,970
companies that make and it's quite

00:09:25,540 --> 00:09:29,709
possible because without them I couldn't

00:09:27,970 --> 00:09:32,050
tell my girlfriend that but I'm actually

00:09:29,709 --> 00:09:33,879
getting paid for this and the fact that

00:09:32,050 --> 00:09:36,639
it's the same money I'm getting paid

00:09:33,879 --> 00:09:38,199
every day she probably doesn't notice

00:09:36,639 --> 00:09:40,350
that but as long as I can at least say

00:09:38,199 --> 00:09:41,980
that hey you know we get money for this

00:09:40,350 --> 00:09:45,339
it's a good thing

00:09:41,980 --> 00:09:47,279
I also added icinga here as well briefly

00:09:45,339 --> 00:09:51,000
at lunch when I realized it was missing

00:09:47,279 --> 00:09:53,620
but I think they're sponsoring me ish

00:09:51,000 --> 00:09:54,699
now the clicker is not working but now

00:09:53,620 --> 00:09:56,350
we're gonna get down to the actual

00:09:54,699 --> 00:09:59,079
presentation so now we're gonna talk a

00:09:56,350 --> 00:10:00,550
bit about paradigms because when you're

00:09:59,079 --> 00:10:02,560
doing monitoring especially with with

00:10:00,550 --> 00:10:04,360
the legacy products like now yes and and

00:10:02,560 --> 00:10:05,560
icing and things like that you usually

00:10:04,360 --> 00:10:07,149
end up with you know the whole

00:10:05,560 --> 00:10:09,339
monitoring paradigm you know do you want

00:10:07,149 --> 00:10:11,529
to do active monitoring where

00:10:09,339 --> 00:10:14,769
essentially the server is asking you for

00:10:11,529 --> 00:10:16,360
status every X minutes and you will

00:10:14,769 --> 00:10:20,709
reply saying yes I'm fine

00:10:16,360 --> 00:10:22,360
every X minutes and this is a huge good

00:10:20,709 --> 00:10:24,250
thing when you're working with with the

00:10:22,360 --> 00:10:25,449
machines back in the 90s because then

00:10:24,250 --> 00:10:27,279
what you want to do is you want to send

00:10:25,449 --> 00:10:29,079
a ping and if you get response the

00:10:27,279 --> 00:10:30,819
machine is hot obviously working right

00:10:29,079 --> 00:10:32,709
but if you're working with modern

00:10:30,819 --> 00:10:34,089
machines today you probably want to make

00:10:32,709 --> 00:10:35,649
sure that your service is actually

00:10:34,089 --> 00:10:38,350
running and then you end up adding

00:10:35,649 --> 00:10:40,420
service tracks and usually we end up

00:10:38,350 --> 00:10:42,160
adding you know ten service check or a

00:10:40,420 --> 00:10:44,500
hundred service check or several hundred

00:10:42,160 --> 00:10:45,790
service checks and then this paradigm

00:10:44,500 --> 00:10:48,189
sort of falls apart quite quickly

00:10:45,790 --> 00:10:50,949
because if you're gonna send a hundred

00:10:48,189 --> 00:10:52,420
checks every X minute asking for status

00:10:50,949 --> 00:10:54,189
it's gonna be a lot of traffic and it's

00:10:52,420 --> 00:10:56,709
gonna be quite cumbersome for someone to

00:10:54,189 --> 00:10:58,600
process all that data and but

00:10:56,709 --> 00:11:00,550
fortunately there's this other paradigm

00:10:58,600 --> 00:11:03,309
as well and we have something called

00:11:00,550 --> 00:11:05,589
passive monitoring and and this is

00:11:03,309 --> 00:11:07,240
essentially the opposite because instead

00:11:05,589 --> 00:11:09,009
of the server asking you for status

00:11:07,240 --> 00:11:10,769
every five minutes you were telling the

00:11:09,009 --> 00:11:14,110
server your status every five minutes

00:11:10,769 --> 00:11:16,809
but it's not really a paradigm change as

00:11:14,110 --> 00:11:18,279
much as a firewall change so it sort of

00:11:16,809 --> 00:11:19,839
says do I want to open your file

00:11:18,279 --> 00:11:22,540
to your monitoring server or the other

00:11:19,839 --> 00:11:24,730
way around it's the same sort of

00:11:22,540 --> 00:11:27,040
paradigm we're still running things

00:11:24,730 --> 00:11:28,990
every X minutes and we're still sending

00:11:27,040 --> 00:11:30,339
the status results so what I've been

00:11:28,990 --> 00:11:31,839
trying to push for the last few years is

00:11:30,339 --> 00:11:33,699
something I'll tend to call real-time on

00:11:31,839 --> 00:11:35,860
the train and this is essentially

00:11:33,699 --> 00:11:37,839
notifications on the errors and no okay

00:11:35,860 --> 00:11:39,160
messages because as long as something is

00:11:37,839 --> 00:11:43,389
fine we don't really need to tell him

00:11:39,160 --> 00:11:45,160
every five minutes and I usually do this

00:11:43,389 --> 00:11:46,360
on of you about you know the doctor if

00:11:45,160 --> 00:11:48,399
he's calling you every five minutes

00:11:46,360 --> 00:11:49,839
asking have you broken your leg you

00:11:48,399 --> 00:11:52,569
would probably be annoyed and it would

00:11:49,839 --> 00:11:54,459
probably be astronomically expensive but

00:11:52,569 --> 00:11:56,199
but that's kind of how sensibility is

00:11:54,459 --> 00:11:57,999
it's probably much easier if you call

00:11:56,199 --> 00:11:59,860
your doctor when something happens and

00:11:57,999 --> 00:12:02,559
this is usually the way the world works

00:11:59,860 --> 00:12:04,300
because it's the easy way right but what

00:12:02,559 --> 00:12:05,740
does this actually mean when I say

00:12:04,300 --> 00:12:07,420
real-time monitoring what is it I'm

00:12:05,740 --> 00:12:09,370
actually saying I mean we still have

00:12:07,420 --> 00:12:11,259
these queries right when are you feeling

00:12:09,370 --> 00:12:15,670
okay we still need to ask that question

00:12:11,259 --> 00:12:17,860
ultimately but instead of your server

00:12:15,670 --> 00:12:20,019
asking you that question every X minute

00:12:17,860 --> 00:12:21,519
you can just run the same query

00:12:20,019 --> 00:12:24,160
internally and once you discover an

00:12:21,519 --> 00:12:26,319
anomaly we can tell him that but the

00:12:24,160 --> 00:12:27,879
good news about this is for if you do

00:12:26,319 --> 00:12:30,040
log monitoring or something like that

00:12:27,879 --> 00:12:31,930
you can actually fire off the event when

00:12:30,040 --> 00:12:33,910
there is an error in the log instead of

00:12:31,930 --> 00:12:35,709
checking it every X minutes which means

00:12:33,910 --> 00:12:38,980
that the error comes to you instantly

00:12:35,709 --> 00:12:40,779
instead of five minutes later and so

00:12:38,980 --> 00:12:42,339
this is obviously very good for log

00:12:40,779 --> 00:12:44,559
monitoring and so it comes from that

00:12:42,339 --> 00:12:46,029
domain but you can do this for all your

00:12:44,559 --> 00:12:48,009
monitoring so you can do this for your

00:12:46,029 --> 00:12:49,779
CPU matrix or your process checks or

00:12:48,009 --> 00:12:52,120
whatever so that you get the instant the

00:12:49,779 --> 00:12:54,370
results instantaneously or when they

00:12:52,120 --> 00:12:56,170
actually happen but then we have things

00:12:54,370 --> 00:12:57,879
like metrics and this is all the rave

00:12:56,170 --> 00:13:02,319
today right because graphing has become

00:12:57,879 --> 00:13:04,059
really popular and since the last

00:13:02,319 --> 00:13:05,649
version and his client supports metrics

00:13:04,059 --> 00:13:07,120
and we can of course send those to your

00:13:05,649 --> 00:13:08,740
graphing tool if you want to have your

00:13:07,120 --> 00:13:09,129
metrics and you know that's always a

00:13:08,740 --> 00:13:10,870
good thing

00:13:09,129 --> 00:13:12,459
but you can also do things like compound

00:13:10,870 --> 00:13:14,529
check you know what is dips values 45

00:13:12,459 --> 00:13:16,029
and that values 23 and that value 16

00:13:14,529 --> 00:13:19,089
what we're going to do something about

00:13:16,029 --> 00:13:22,870
that and this means that you can make

00:13:19,089 --> 00:13:24,850
checks that are compound or aggregating

00:13:22,870 --> 00:13:28,120
data much more easily than you could

00:13:24,850 --> 00:13:29,800
have before and now we're adding event

00:13:28,120 --> 00:13:31,870
support and events is essentially when

00:13:29,800 --> 00:13:32,140
things happen and this is also something

00:13:31,870 --> 00:13:34,240
to

00:13:32,140 --> 00:13:36,310
stems from the whole log thing I mean

00:13:34,240 --> 00:13:37,780
currently an NS client if you want to do

00:13:36,310 --> 00:13:39,160
log forwarding so you want to send your

00:13:37,780 --> 00:13:40,390
event log master these do sis long

00:13:39,160 --> 00:13:42,520
message you can do that with on this

00:13:40,390 --> 00:13:44,200
client but you have to set up a check

00:13:42,520 --> 00:13:46,120
that checks your event log and then

00:13:44,200 --> 00:13:49,060
create some virtual error which is send

00:13:46,120 --> 00:13:49,660
over to the syslog forwarder and it kind

00:13:49,060 --> 00:13:51,220
of clunky

00:13:49,660 --> 00:13:52,870
what you do now is just let's send an

00:13:51,220 --> 00:13:55,210
event and let's send all these metadata

00:13:52,870 --> 00:13:58,090
to someone and then that someone can

00:13:55,210 --> 00:13:59,650
interact with it but we can also use it

00:13:58,090 --> 00:14:01,060
for other things like if notepad is

00:13:59,650 --> 00:14:03,250
started and we want to know about that

00:14:01,060 --> 00:14:06,090
and here we come to quite interesting

00:14:03,250 --> 00:14:08,380
thing because usually when when someone

00:14:06,090 --> 00:14:10,420
installs a program they will start a

00:14:08,380 --> 00:14:12,010
number of processes and we can use those

00:14:10,420 --> 00:14:13,960
processes to figure out what is actually

00:14:12,010 --> 00:14:15,910
running on this server so if someone

00:14:13,960 --> 00:14:17,770
starts sequel server let's enable sequel

00:14:15,910 --> 00:14:19,360
server monitoring if someone starts

00:14:17,770 --> 00:14:21,160
exchange let's enable exchange

00:14:19,360 --> 00:14:23,230
monitoring and this is sort of where

00:14:21,160 --> 00:14:24,610
that sort of talk is about you know how

00:14:23,230 --> 00:14:26,770
we can do that and how we can utilize

00:14:24,610 --> 00:14:29,350
these features to build something like

00:14:26,770 --> 00:14:30,790
that quite easily so this is sort of

00:14:29,350 --> 00:14:33,130
when we get into the whole automation

00:14:30,790 --> 00:14:35,710
powertrains and the way we've been doing

00:14:33,130 --> 00:14:39,310
automation in pretty much any domain is

00:14:35,710 --> 00:14:40,990
by scripts so we have all these fancy

00:14:39,310 --> 00:14:42,910
scripts to test a lot of things and we

00:14:40,990 --> 00:14:44,080
have them in your monitoring solutions

00:14:42,910 --> 00:14:46,270
and we have them in our automation

00:14:44,080 --> 00:14:48,070
solution as well and the way it usually

00:14:46,270 --> 00:14:49,510
works in a monitoring domain is that you

00:14:48,070 --> 00:14:51,400
have your monitoring server over here

00:14:49,510 --> 00:14:52,600
and you have your script over here so

00:14:51,400 --> 00:14:54,100
you need some way for them to talk to

00:14:52,600 --> 00:14:56,050
each other right and you do that by

00:14:54,100 --> 00:14:57,730
having some sort of agent which will

00:14:56,050 --> 00:14:59,890
then you know somehow forward this

00:14:57,730 --> 00:15:01,900
request over so I think I can talk to

00:14:59,890 --> 00:15:03,580
the socket handler which will then be

00:15:01,900 --> 00:15:06,100
you know exiting your script and the

00:15:03,580 --> 00:15:08,590
result will go back works the same

00:15:06,100 --> 00:15:10,630
within its client so we have our agent

00:15:08,590 --> 00:15:12,370
and we have some sort of NRP Handler and

00:15:10,630 --> 00:15:14,950
then we have our check external scripts

00:15:12,370 --> 00:15:16,210
module and we run our scripts pretty

00:15:14,950 --> 00:15:17,800
much the exact same thing right I

00:15:16,210 --> 00:15:19,660
usually like to think of ennis client as

00:15:17,800 --> 00:15:21,250
two things the core is what I called a

00:15:19,660 --> 00:15:22,780
little bit but that's really the one

00:15:21,250 --> 00:15:25,930
that is forwarding the requests from the

00:15:22,780 --> 00:15:27,730
protocol to the actual script but the

00:15:25,930 --> 00:15:28,990
difference between Ana's client and a

00:15:27,730 --> 00:15:30,880
lot of the other things when you're

00:15:28,990 --> 00:15:33,400
using NRP or something like that is that

00:15:30,880 --> 00:15:35,380
we have a built-in checks so if you want

00:15:33,400 --> 00:15:37,390
to check your CPU or your memory your

00:15:35,380 --> 00:15:39,160
event log or v-mic wares or whatnot

00:15:37,390 --> 00:15:41,560
all--that's built-ins you really need a

00:15:39,160 --> 00:15:44,290
script for it but we also support a lot

00:15:41,560 --> 00:15:46,060
of protocols which means that if you

00:15:44,290 --> 00:15:47,770
want to talk something else than an or

00:15:46,060 --> 00:15:49,450
if you want to send off something to

00:15:47,770 --> 00:15:51,760
graphite or you want to use the REST API

00:15:49,450 --> 00:15:54,760
to fetch your queries or you're using

00:15:51,760 --> 00:15:56,380
check ante like most people then you can

00:15:54,760 --> 00:15:58,000
do that as well and it works sort of the

00:15:56,380 --> 00:15:59,290
same because it's just the request comes

00:15:58,000 --> 00:16:01,630
in this way and then somehow is

00:15:59,290 --> 00:16:04,390
forwarded and goes back but there is one

00:16:01,630 --> 00:16:05,890
fundamental problem with this model and

00:16:04,390 --> 00:16:08,230
that's the fact that these errors go one

00:16:05,890 --> 00:16:09,640
way or if we're using passive monitoring

00:16:08,230 --> 00:16:12,220
they go the other way but they still go

00:16:09,640 --> 00:16:14,500
one way right and so there's no way for

00:16:12,220 --> 00:16:17,260
our monitoring tool to talk to our

00:16:14,500 --> 00:16:19,090
script and find out something so if

00:16:17,260 --> 00:16:20,890
we're gonna monitor database what if we

00:16:19,090 --> 00:16:22,810
could just call our script and say hey

00:16:20,890 --> 00:16:25,720
which databases do we have let's add a

00:16:22,810 --> 00:16:27,250
check for each schema that's not well

00:16:25,720 --> 00:16:29,380
it's obviously possible but it's it's

00:16:27,250 --> 00:16:32,440
not easy to do when it's kind of clunky

00:16:29,380 --> 00:16:34,390
to do so we sort of have this limitation

00:16:32,440 --> 00:16:36,670
that a script is just something that

00:16:34,390 --> 00:16:38,350
returns to status there is no way to

00:16:36,670 --> 00:16:41,710
interact with it there's no way to do

00:16:38,350 --> 00:16:43,630
communication both ways and then

00:16:41,710 --> 00:16:45,010
something that is quite obvious is that

00:16:43,630 --> 00:16:47,290
you usually need some sort of

00:16:45,010 --> 00:16:49,090
configuration for your scripts and

00:16:47,290 --> 00:16:50,740
there's no way to do this you can

00:16:49,090 --> 00:16:52,720
obviously use something like you know

00:16:50,740 --> 00:16:54,790
pearl Kong for you know some other weird

00:16:52,720 --> 00:16:56,560
module to do the configuration thing but

00:16:54,790 --> 00:16:58,300
then each scripts ends up you know doing

00:16:56,560 --> 00:17:01,480
different configuration in different

00:16:58,300 --> 00:17:03,130
places in different ways right so it's

00:17:01,480 --> 00:17:05,610
it's kind of clunky and this is very

00:17:03,130 --> 00:17:08,199
obvious because if you go to some like

00:17:05,610 --> 00:17:09,400
monitor exchange or icing exchange or

00:17:08,199 --> 00:17:10,959
something you will usually find 10

00:17:09,400 --> 00:17:13,689
scripts that does the same thing

00:17:10,959 --> 00:17:16,209
slightly differently and why they do

00:17:13,689 --> 00:17:17,740
that is because there is no way to have

00:17:16,209 --> 00:17:20,170
a flag somewhere that says hey I want to

00:17:17,740 --> 00:17:21,490
have this this way and not that way so

00:17:20,170 --> 00:17:23,050
instead you end up having a clone of

00:17:21,490 --> 00:17:25,990
that script or a fork of that script

00:17:23,050 --> 00:17:27,939
right and then what if you have two

00:17:25,990 --> 00:17:29,890
scripts and you want them to communicate

00:17:27,939 --> 00:17:31,900
with each other again it's not really

00:17:29,890 --> 00:17:33,700
possible it's obviously possible but

00:17:31,900 --> 00:17:36,190
it's not sort of easy to do and there's

00:17:33,700 --> 00:17:38,020
no way to do that so if this scripts and

00:17:36,190 --> 00:17:40,300
this scripts are both checking worries

00:17:38,020 --> 00:17:42,220
or aspects of the same database if

00:17:40,300 --> 00:17:43,810
they're written by the same guy they

00:17:42,220 --> 00:17:45,250
might be able to somehow talk to each

00:17:43,810 --> 00:17:47,110
other but usually you end up having to

00:17:45,250 --> 00:17:49,570
do the same thing over here and the same

00:17:47,110 --> 00:17:51,370
thing over here and then somehow hoping

00:17:49,570 --> 00:17:54,990
that it's gonna be the same thing for

00:17:51,370 --> 00:17:57,670
both places in the end and then

00:17:54,990 --> 00:17:59,500
obviously we have the question of state

00:17:57,670 --> 00:17:59,940
right because all of these scripts are

00:17:59,500 --> 00:18:01,950
start

00:17:59,940 --> 00:18:03,509
and stopped and started and stopped so

00:18:01,950 --> 00:18:05,129
if you want to you know calculate the

00:18:03,509 --> 00:18:07,139
rate of something it's kind of difficult

00:18:05,129 --> 00:18:08,610
you can always put the old value new

00:18:07,139 --> 00:18:10,350
file somewhere and read it up then or

00:18:08,610 --> 00:18:13,019
something like that but it's kind of

00:18:10,350 --> 00:18:15,840
clunky right and so I usually tend to

00:18:13,019 --> 00:18:18,179
think of scripts as rather stupid and

00:18:15,840 --> 00:18:19,620
this is one of the reasons why I sort of

00:18:18,179 --> 00:18:22,649
abandon monitoring because it's kind of

00:18:19,620 --> 00:18:23,789
boring to have to download a script and

00:18:22,649 --> 00:18:25,019
you need to add it you know somewhere

00:18:23,789 --> 00:18:26,639
here and there because it's not really

00:18:25,019 --> 00:18:28,200
doing what you want it to and then you

00:18:26,639 --> 00:18:29,940
end up having to sort of maintain that

00:18:28,200 --> 00:18:33,149
piece of software whatever you want to

00:18:29,940 --> 00:18:35,039
call it so what I'm sort of thinking

00:18:33,149 --> 00:18:38,580
about is what if we took this script and

00:18:35,039 --> 00:18:41,399
moved it inside the agent what would

00:18:38,580 --> 00:18:43,379
that sort of change in how we do our

00:18:41,399 --> 00:18:44,639
monitoring and here just want to quickly

00:18:43,379 --> 00:18:46,679
point out that if you have a lot of

00:18:44,639 --> 00:18:48,600
animations you know slide things take

00:18:46,679 --> 00:18:50,100
much much longer and so that's a good

00:18:48,600 --> 00:18:53,639
way to kill another five minutes of your

00:18:50,100 --> 00:18:55,200
presentation time right fortunately for

00:18:53,639 --> 00:18:56,850
us there's something in and it's client

00:18:55,200 --> 00:18:58,679
called internal scripts and these can be

00:18:56,850 --> 00:19:00,750
written in various languages python and

00:18:58,679 --> 00:19:03,149
Lua currently but rest support will be

00:19:00,750 --> 00:19:05,279
added hopefully soon and essentially

00:19:03,149 --> 00:19:06,600
they work the same way that normal

00:19:05,279 --> 00:19:08,610
script does except that they are running

00:19:06,600 --> 00:19:11,909
inside the client they're not running

00:19:08,610 --> 00:19:14,610
outside so here we have an example of

00:19:11,909 --> 00:19:15,870
such a script fairly standard stuff you

00:19:14,610 --> 00:19:18,000
know we have an init function that's

00:19:15,870 --> 00:19:19,440
called when a script is started we have

00:19:18,000 --> 00:19:22,529
a shutdown function that is called when

00:19:19,440 --> 00:19:24,269
the script is exited or terminated and

00:19:22,529 --> 00:19:25,980
we can do some logging if we want to you

00:19:24,269 --> 00:19:30,330
know some dude a classical hello world

00:19:25,980 --> 00:19:32,309
example writes but we can also do things

00:19:30,330 --> 00:19:34,500
like provide checks in our scripts and

00:19:32,309 --> 00:19:36,149
this turns out slightly differently

00:19:34,500 --> 00:19:37,710
because here we write the function that

00:19:36,149 --> 00:19:39,149
does whatever it's gonna check the

00:19:37,710 --> 00:19:41,070
return or status and some sort of

00:19:39,149 --> 00:19:42,059
message and performance dates and you

00:19:41,070 --> 00:19:44,279
know whatever we want to do in our

00:19:42,059 --> 00:19:46,909
scripts but we also need some stuff down

00:19:44,279 --> 00:19:49,769
here oh sorry I usually have these guys

00:19:46,909 --> 00:19:51,450
down here where we need to register this

00:19:49,769 --> 00:19:52,860
function so here we're essentially

00:19:51,450 --> 00:19:54,179
telling n is fine that hey you know I

00:19:52,860 --> 00:19:56,129
have this function that I want to pay

00:19:54,179 --> 00:19:58,350
other people to be able to call and then

00:19:56,129 --> 00:19:59,610
I provide a description for it and this

00:19:58,350 --> 00:20:01,379
description bait is kind of interesting

00:19:59,610 --> 00:20:02,519
because it means that whomever is going

00:20:01,379 --> 00:20:05,190
to call your script will actually know

00:20:02,519 --> 00:20:08,039
what this function is doing or what this

00:20:05,190 --> 00:20:10,080
check is doing so this is how your

00:20:08,039 --> 00:20:11,399
regular monitoring script would look if

00:20:10,080 --> 00:20:13,080
you were to write this in the total

00:20:11,399 --> 00:20:13,770
script so it's not that different from

00:20:13,080 --> 00:20:15,810
writing it right

00:20:13,770 --> 00:20:16,980
scripts and then you're probably asking

00:20:15,810 --> 00:20:19,470
yourself you know what are the drawbacks

00:20:16,980 --> 00:20:21,780
to all of this and the obvious drawback

00:20:19,470 --> 00:20:25,010
is of course that up here we are

00:20:21,780 --> 00:20:27,120
importing some stuff from Ana's client

00:20:25,010 --> 00:20:28,860
which means not if you're using

00:20:27,120 --> 00:20:31,020
something else it obviously won't work

00:20:28,860 --> 00:20:32,550
now there's nothing n is client specific

00:20:31,020 --> 00:20:34,410
about the stuff we're using it's a log

00:20:32,550 --> 00:20:36,060
function and things like that so we

00:20:34,410 --> 00:20:37,470
could quite easily create this standard

00:20:36,060 --> 00:20:41,070
for it so it will you know work with

00:20:37,470 --> 00:20:42,870
other monitoring solutions as well but I

00:20:41,070 --> 00:20:44,790
think it would be interesting to have a

00:20:42,870 --> 00:20:46,560
such a standard so we could have these

00:20:44,790 --> 00:20:48,750
scripts the way you know working with

00:20:46,560 --> 00:20:51,060
other monitoring solutions or something

00:20:48,750 --> 00:20:52,440
similar anyway but currently this will

00:20:51,060 --> 00:20:55,170
obviously just work with Ana's coins

00:20:52,440 --> 00:20:56,550
passports but we had some challengers or

00:20:55,170 --> 00:20:58,140
at least I raised some challenge and

00:20:56,550 --> 00:21:00,390
what about configuration how does that

00:20:58,140 --> 00:21:02,010
work in this scenario and the way what

00:21:00,390 --> 00:21:03,300
we have it here is that you know we can

00:21:02,010 --> 00:21:04,830
get an instance or a configuration

00:21:03,300 --> 00:21:06,900
object and we can just get values from

00:21:04,830 --> 00:21:08,460
it this means that we have the same way

00:21:06,900 --> 00:21:11,310
of configuring a script as we do with

00:21:08,460 --> 00:21:13,830
our normal monitoring and this just

00:21:11,310 --> 00:21:15,870
works right I mean it's one-liner so

00:21:13,830 --> 00:21:17,190
it's not a lot of code and then you're

00:21:15,870 --> 00:21:18,900
probably thinking that hey you know but

00:21:17,190 --> 00:21:20,340
I write all my scripts in Perl and I can

00:21:18,900 --> 00:21:21,900
do the same thing with Perl because it's

00:21:20,340 --> 00:21:24,180
just reading my config file and reading

00:21:21,900 --> 00:21:27,600
it and yes you can but you don't get a

00:21:24,180 --> 00:21:29,010
web UI if you do that and you don't get

00:21:27,600 --> 00:21:30,450
the integration with the other

00:21:29,010 --> 00:21:32,310
monitoring tools and there's a lot of

00:21:30,450 --> 00:21:36,030
other benefits if we were to have a

00:21:32,310 --> 00:21:38,190
standard way of doing this and then I

00:21:36,030 --> 00:21:39,840
mentioned the thing about state and the

00:21:38,190 --> 00:21:41,790
good news is here is that these scripts

00:21:39,840 --> 00:21:44,490
are started and then they are running

00:21:41,790 --> 00:21:45,900
whenever you know they are running so

00:21:44,490 --> 00:21:47,610
there is no need to do anything about

00:21:45,900 --> 00:21:49,380
state it's just there you know if you

00:21:47,610 --> 00:21:52,230
have a global variable that will hold

00:21:49,380 --> 00:21:55,910
your state whenever you run it so the

00:21:52,230 --> 00:21:55,910
scripts are stateful by nature

00:21:56,059 --> 00:21:59,879
and then we have this issue

00:21:58,340 --> 00:22:01,830
communication you know how can our

00:21:59,879 --> 00:22:04,169
scripts talk with each other and there

00:22:01,830 --> 00:22:06,720
is a whole bunch of features in the

00:22:04,169 --> 00:22:08,039
Ennis client for that and here we have

00:22:06,720 --> 00:22:09,899
an example where we're just calling

00:22:08,039 --> 00:22:11,600
another check getting the results and

00:22:09,899 --> 00:22:13,889
somehow modifying it and returning back

00:22:11,600 --> 00:22:15,419
but we can also use a lot of other

00:22:13,889 --> 00:22:16,919
things like the whole metrics things and

00:22:15,419 --> 00:22:18,179
the events and all the work and stuff so

00:22:16,919 --> 00:22:23,159
there's a lot of infrastructure we can

00:22:18,179 --> 00:22:24,240
reuse for this so communication is there

00:22:23,159 --> 00:22:24,960
and we don't really need to do anything

00:22:24,240 --> 00:22:27,389
about it

00:22:24,960 --> 00:22:29,370
it just works and then I briefly

00:22:27,389 --> 00:22:31,860
mentioned metrics before which was new

00:22:29,370 --> 00:22:33,570
in the previous version and the way this

00:22:31,860 --> 00:22:35,190
works in our scripts is again we need to

00:22:33,570 --> 00:22:37,470
register a couple of functions down here

00:22:35,190 --> 00:22:39,330
one is for providing metrics to others

00:22:37,470 --> 00:22:41,580
and one is for fetching metrics if we

00:22:39,330 --> 00:22:43,679
want to compute them and the functions

00:22:41,580 --> 00:22:46,019
they just essentially get a hash map

00:22:43,679 --> 00:22:47,519
with all the values here and we can

00:22:46,019 --> 00:22:49,080
iterate them along then we form - and

00:22:47,519 --> 00:22:50,730
here we're just providing a hash map of

00:22:49,080 --> 00:22:53,279
the metrics we have for their rest of

00:22:50,730 --> 00:22:55,500
the world and essentially starting this

00:22:53,279 --> 00:22:57,600
script will mean that these metrics are

00:22:55,500 --> 00:22:59,399
instantly sent to graphite or collect D

00:22:57,600 --> 00:23:02,100
or your graphing solution you don't need

00:22:59,399 --> 00:23:04,110
to do anything it just works but you can

00:23:02,100 --> 00:23:05,789
also utilize these tracks if you want to

00:23:04,110 --> 00:23:07,289
do some calculations on them or if you

00:23:05,789 --> 00:23:10,039
want to check multiple values or things

00:23:07,289 --> 00:23:12,870
like that and again it just works

00:23:10,039 --> 00:23:14,279
and so metrics are sort of for free and

00:23:12,870 --> 00:23:19,350
then we have the whole events thing

00:23:14,279 --> 00:23:21,120
right so how does that look well again

00:23:19,350 --> 00:23:22,320
we need to register a function say hey

00:23:21,120 --> 00:23:24,120
you know I want to get all events from

00:23:22,320 --> 00:23:25,740
check systems and send them to my own

00:23:24,120 --> 00:23:27,240
event function and then here we're

00:23:25,740 --> 00:23:29,940
checking you know if the exit file is

00:23:27,240 --> 00:23:31,379
notepad let's start some monitoring for

00:23:29,940 --> 00:23:34,470
notepad or you know that whatever we

00:23:31,379 --> 00:23:36,659
want to do right so events it's also

00:23:34,470 --> 00:23:38,639
sort of free so I think that we could

00:23:36,659 --> 00:23:41,279
actually improve scripts quite a lot

00:23:38,639 --> 00:23:43,740
quite easily without having to you know

00:23:41,279 --> 00:23:46,919
do a lot of advanced stuff or or change

00:23:43,740 --> 00:23:47,720
the things things are working in a big

00:23:46,919 --> 00:23:51,419
way

00:23:47,720 --> 00:23:53,549
so with these magnificent internal

00:23:51,419 --> 00:23:54,990
scripts we need some way to install all

00:23:53,549 --> 00:23:57,629
of these scripts right and handle that

00:23:54,990 --> 00:24:00,029
bit and most people are using Ana's

00:23:57,629 --> 00:24:03,090
client they have some cool shell script

00:24:00,029 --> 00:24:04,919
uses px exec on Linux two copies and

00:24:03,090 --> 00:24:07,649
file somewhere and then unzip them and

00:24:04,919 --> 00:24:09,000
some other weird voodoo and I usually

00:24:07,649 --> 00:24:10,830
say that that's point

00:24:09,000 --> 00:24:12,780
and doesn't really add anything because

00:24:10,830 --> 00:24:14,790
there's something called a masonic sac

00:24:12,780 --> 00:24:17,240
where you can override configuration and

00:24:14,790 --> 00:24:19,770
you know change how you want your

00:24:17,240 --> 00:24:21,690
program to be installed and the beauty

00:24:19,770 --> 00:24:23,310
is if you're using a Masonic sac you can

00:24:21,690 --> 00:24:24,720
use this for pretty much anything if you

00:24:23,310 --> 00:24:26,760
have some sort of tools to push out your

00:24:24,720 --> 00:24:28,260
configuration or something like that or

00:24:26,760 --> 00:24:30,750
push out your applications and things

00:24:28,260 --> 00:24:31,830
like that but the big benefit of this is

00:24:30,750 --> 00:24:34,050
that there is a whole bunch of

00:24:31,830 --> 00:24:35,940
parameters you can set for Anna's client

00:24:34,050 --> 00:24:39,120
that will change how Anna's client is

00:24:35,940 --> 00:24:41,070
installed this is a bit of a snag before

00:24:39,120 --> 00:24:43,770
o 5:1 you need to set these two

00:24:41,070 --> 00:24:45,540
parameters otherwise it won't work but

00:24:43,770 --> 00:24:47,220
in the new version we just can do

00:24:45,540 --> 00:24:48,390
something like this you know let's grab

00:24:47,220 --> 00:24:50,940
our configuration from a web server

00:24:48,390 --> 00:24:52,650
somewhere and what we have done now is

00:24:50,940 --> 00:24:55,290
essentially created automatic

00:24:52,650 --> 00:24:56,820
configuration for our installations we

00:24:55,290 --> 00:24:58,770
just installed a nice client set this

00:24:56,820 --> 00:25:01,440
parameter to where a config file is and

00:24:58,770 --> 00:25:02,610
they will start with this config so we

00:25:01,440 --> 00:25:03,990
don't need anything to push the

00:25:02,610 --> 00:25:06,000
configuration to a service we just

00:25:03,990 --> 00:25:07,740
update the file on the web server and

00:25:06,000 --> 00:25:11,100
they will be pre-loaded with the new

00:25:07,740 --> 00:25:13,830
configuration and this is when we get to

00:25:11,100 --> 00:25:15,030
the whole I think a bit right because we

00:25:13,830 --> 00:25:19,290
were going to talk a little bit about

00:25:15,030 --> 00:25:21,360
icing up and I'm up to icing guys

00:25:19,290 --> 00:25:23,280
sitting here looking mean essentially

00:25:21,360 --> 00:25:26,340
I'm gonna give you know ten minutes of

00:25:23,280 --> 00:25:31,530
or ten minutes or ten slides of telling

00:25:26,340 --> 00:25:33,090
you how great icing guys so they don't

00:25:31,530 --> 00:25:34,830
have to be worried at all you know they

00:25:33,090 --> 00:25:38,340
have a REST API knitting and that's that

00:25:34,830 --> 00:25:41,160
is actually epic right that's the

00:25:38,340 --> 00:25:43,500
question of the day and I would like to

00:25:41,160 --> 00:25:44,790
say that it is epic but the first thing

00:25:43,500 --> 00:25:47,100
you realize is that there's a lot of

00:25:44,790 --> 00:25:49,830
unfriend scene icinga there is something

00:25:47,100 --> 00:25:52,230
called icing a director which can

00:25:49,830 --> 00:25:53,910
generate config for you sometimes never

00:25:52,230 --> 00:25:55,890
get it to work then there is something

00:25:53,910 --> 00:25:57,570
called config files that can generate

00:25:55,890 --> 00:25:59,400
configuration for you and then there is

00:25:57,570 --> 00:26:01,590
an API that can generate configuration

00:25:59,400 --> 00:26:03,270
for you but but there's nothing in

00:26:01,590 --> 00:26:04,620
between they don't like each other they

00:26:03,270 --> 00:26:07,140
don't talk to each other there's no way

00:26:04,620 --> 00:26:09,090
to somehow interact if you choose these

00:26:07,140 --> 00:26:11,390
different paradigms and that's not

00:26:09,090 --> 00:26:13,890
really a problem but it's slightly

00:26:11,390 --> 00:26:14,970
problematic when you're debugging things

00:26:13,890 --> 00:26:17,700
and you just want to change something

00:26:14,970 --> 00:26:19,200
and you can't do that again unless you

00:26:17,700 --> 00:26:21,060
have the REST API but you need to

00:26:19,200 --> 00:26:22,650
understand that if you're using config

00:26:21,060 --> 00:26:24,240
for some things there

00:26:22,650 --> 00:26:25,800
what you're doing with the rest API will

00:26:24,240 --> 00:26:28,590
be separate they will never be the same

00:26:25,800 --> 00:26:29,700
they will never be together and normally

00:26:28,590 --> 00:26:32,130
that's a good thing because if you're

00:26:29,700 --> 00:26:34,140
automating your configuration you

00:26:32,130 --> 00:26:35,820
probably don't want it to be somehow

00:26:34,140 --> 00:26:38,430
we'd you know your apply rules and all

00:26:35,820 --> 00:26:40,080
that kind of stuff but it's it's one

00:26:38,430 --> 00:26:41,580
thing you sometimes you actually want

00:26:40,080 --> 00:26:44,280
them to be but but you need to be aware

00:26:41,580 --> 00:26:46,110
of it and then there is this bug which

00:26:44,280 --> 00:26:49,770
I'm now filing officially there is no

00:26:46,110 --> 00:26:52,380
absurd support so feel free to add it to

00:26:49,770 --> 00:26:54,030
the bug tracker and again it's not

00:26:52,380 --> 00:26:57,930
really a big deal it's just that once

00:26:54,030 --> 00:27:00,480
you do a push or a post then you get a

00:26:57,930 --> 00:27:02,700
404 you need to do put instead so yeah

00:27:00,480 --> 00:27:05,790
twice enough with traffic but no big

00:27:02,700 --> 00:27:08,550
deal really and then the documentation

00:27:05,790 --> 00:27:10,440
for a thing is really good except that

00:27:08,550 --> 00:27:11,670
it's a bit fragmented so there's one

00:27:10,440 --> 00:27:13,800
documentation describing the

00:27:11,670 --> 00:27:17,070
configuration files where you can sort

00:27:13,800 --> 00:27:18,390
of understand how you would design your

00:27:17,070 --> 00:27:19,770
rest api and there's another

00:27:18,390 --> 00:27:21,960
documentation describing how you

00:27:19,770 --> 00:27:23,750
actually call the rest api but if you're

00:27:21,960 --> 00:27:26,100
let's say when i create a service check

00:27:23,750 --> 00:27:27,720
there is no documentation at all and you

00:27:26,100 --> 00:27:29,970
can sort of guess by looking at how the

00:27:27,720 --> 00:27:32,130
service check looks in the file but it's

00:27:29,970 --> 00:27:33,840
sort of guessing but you know again once

00:27:32,130 --> 00:27:36,210
you sort of understand it it's not a big

00:27:33,840 --> 00:27:37,440
deal but it's a bit of an uphill battle

00:27:36,210 --> 00:27:39,780
when you start to look at this

00:27:37,440 --> 00:27:42,720
especially when you start to do it three

00:27:39,780 --> 00:27:44,970
days before the presentation and then

00:27:42,720 --> 00:27:46,200
it's quite mysterious sometimes you know

00:27:44,970 --> 00:27:49,200
sometimes you need to set a parameter

00:27:46,200 --> 00:27:50,610
somewhere for no apparent reason service

00:27:49,200 --> 00:27:53,370
checks have to have specific names for

00:27:50,610 --> 00:27:55,890
no apparent reason and again you know

00:27:53,370 --> 00:27:57,810
once you sort of understand the Voodoo

00:27:55,890 --> 00:28:00,270
behind this mysteriousness it's not

00:27:57,810 --> 00:28:02,190
really a big deal unfortunately the

00:28:00,270 --> 00:28:03,690
error messages don't really help because

00:28:02,190 --> 00:28:06,360
they usually end up with Y a long stack

00:28:03,690 --> 00:28:08,610
trace which has nothing to do with what

00:28:06,360 --> 00:28:09,900
you're trying to do buddy but it's good

00:28:08,610 --> 00:28:12,210
for the developers because they know

00:28:09,900 --> 00:28:15,600
what's gone wrong but not so much for me

00:28:12,210 --> 00:28:17,850
and then it's actually very buggy and

00:28:15,600 --> 00:28:21,060
but the good news is here here is that

00:28:17,850 --> 00:28:22,740
that it's only buggy in the UI so what

00:28:21,060 --> 00:28:24,180
you quickly discover is that quite often

00:28:22,740 --> 00:28:25,830
when you add something through the REST

00:28:24,180 --> 00:28:27,810
API it's not visible in the user

00:28:25,830 --> 00:28:29,400
interface and you go like what you add

00:28:27,810 --> 00:28:31,680
it again and it's still not visible and

00:28:29,400 --> 00:28:33,240
then after while you sort of debug it's

00:28:31,680 --> 00:28:36,360
not a figure thing something else but

00:28:33,240 --> 00:28:37,620
it's being checked so it's ad

00:28:36,360 --> 00:28:39,360
and it's there and it's being checked

00:28:37,620 --> 00:28:41,549
it's just not visible anywhere and if

00:28:39,360 --> 00:28:43,679
you restart Ising its it will be visible

00:28:41,549 --> 00:28:45,330
so it sort of works and again if you

00:28:43,679 --> 00:28:47,970
don't want to see stuff in there in the

00:28:45,330 --> 00:28:49,169
UI it's not a problem at all but it's a

00:28:47,970 --> 00:28:52,019
bit of an uphill battle it's what I'm

00:28:49,169 --> 00:28:55,019
saying but that said you know it is

00:28:52,019 --> 00:28:56,640
actually quite epic and I think at least

00:28:55,019 --> 00:28:58,320
it's the first time I've encountered a

00:28:56,640 --> 00:29:00,390
web interface in a monitoring tool that

00:28:58,320 --> 00:29:03,950
actually works and does what it should

00:29:00,390 --> 00:29:06,240
most of the times it's not that bad and

00:29:03,950 --> 00:29:08,460
and you can actually accomplish quite

00:29:06,240 --> 00:29:11,730
cool things with it so I think it's it

00:29:08,460 --> 00:29:12,840
is epic really and here's not one of

00:29:11,730 --> 00:29:14,639
those tips you know if you're

00:29:12,840 --> 00:29:16,799
complaining about someone else's

00:29:14,639 --> 00:29:19,289
software for ten minutes you know ten

00:29:16,799 --> 00:29:21,000
minutes down and so when we're up to the

00:29:19,289 --> 00:29:23,250
whole 45 minutes right it's it's really

00:29:21,000 --> 00:29:24,960
easy to do presentation this is the way

00:29:23,250 --> 00:29:26,820
it looks from Python if you're trying to

00:29:24,960 --> 00:29:30,899
do something with the REST API nicing

00:29:26,820 --> 00:29:33,299
yeah and first of all you have your

00:29:30,899 --> 00:29:35,100
configuration thing here and this is the

00:29:33,299 --> 00:29:37,350
part that usually looks kind of like it

00:29:35,100 --> 00:29:39,210
does in the config files and there's no

00:29:37,350 --> 00:29:40,710
documentation for this but as long as it

00:29:39,210 --> 00:29:42,630
kind of looks like the config files

00:29:40,710 --> 00:29:44,669
you're good to go

00:29:42,630 --> 00:29:46,710
then we convert it to JSON string and

00:29:44,669 --> 00:29:48,450
this is essentially because it's more

00:29:46,710 --> 00:29:50,610
readable this way but that's what json

00:29:48,450 --> 00:29:52,710
dot dumps does then we need to set the

00:29:50,610 --> 00:29:54,960
header I don't really know why because

00:29:52,710 --> 00:29:57,149
there's no other application except

00:29:54,960 --> 00:29:58,309
Jason you can get the data in but but if

00:29:57,149 --> 00:30:01,110
you don't set it you will get nothing

00:29:58,309 --> 00:30:02,850
and then you just have the URL and you

00:30:01,110 --> 00:30:04,500
need to set verify false unless you're

00:30:02,850 --> 00:30:06,090
using real certificate obviously and

00:30:04,500 --> 00:30:08,610
then you just log in and that's pretty

00:30:06,090 --> 00:30:10,500
much it so it's not difficult and it's

00:30:08,610 --> 00:30:12,929
quite easy to use the REST API and it's

00:30:10,500 --> 00:30:15,899
it's kind of restful so it it works

00:30:12,929 --> 00:30:17,909
quite well actually and this is sort of

00:30:15,899 --> 00:30:20,460
when we get to the whole automatic part

00:30:17,909 --> 00:30:23,220
right because now we sort of learn how

00:30:20,460 --> 00:30:24,960
we can use these scripts running inside

00:30:23,220 --> 00:30:26,580
we know how we can create them in the

00:30:24,960 --> 00:30:28,169
icing and we know how we can install our

00:30:26,580 --> 00:30:30,269
monitoring tool to have these scripts

00:30:28,169 --> 00:30:32,100
provided so the first thing we need is

00:30:30,269 --> 00:30:34,710
to actually get our scripts and not just

00:30:32,100 --> 00:30:36,630
our configuration there and in NS client

00:30:34,710 --> 00:30:38,100
post pass there is AZ configuration

00:30:36,630 --> 00:30:40,529
error it's section in the config called

00:30:38,100 --> 00:30:41,940
attachment and there you can place files

00:30:40,529 --> 00:30:44,010
which you want and it's client to

00:30:41,940 --> 00:30:45,720
download and in this case we can just

00:30:44,010 --> 00:30:47,010
shoot horn in you know requests because

00:30:45,720 --> 00:30:48,149
we need that and then we have a couple

00:30:47,010 --> 00:30:50,130
of scripts which we want to get

00:30:48,149 --> 00:30:50,730
downloaded and essentially we just

00:30:50,130 --> 00:30:53,220
specify in

00:30:50,730 --> 00:30:55,440
take this file over here and put it in

00:30:53,220 --> 00:30:57,150
this file on the local file system so

00:30:55,440 --> 00:30:59,640
this is great way to distribute our

00:30:57,150 --> 00:31:02,040
plugins with the one line installer we

00:30:59,640 --> 00:31:03,900
had before right so by doing something

00:31:02,040 --> 00:31:05,760
like this we still get a whole bunch of

00:31:03,900 --> 00:31:08,850
script installed as well without doing

00:31:05,760 --> 00:31:10,860
anything really and as I said before if

00:31:08,850 --> 00:31:12,450
you change this configuration it will be

00:31:10,860 --> 00:31:14,580
updated the new scripts will be

00:31:12,450 --> 00:31:16,020
downloaded the old ones will not be

00:31:14,580 --> 00:31:18,120
deleted though that's not against its

00:31:16,020 --> 00:31:21,450
limitation but apart from that it works

00:31:18,120 --> 00:31:23,820
quite well and we can use a lot of these

00:31:21,450 --> 00:31:26,820
sort of built-in features or vendors

00:31:23,820 --> 00:31:28,350
client to make a lot of nifty things in

00:31:26,820 --> 00:31:30,570
this case what we're creating here is a

00:31:28,350 --> 00:31:32,610
real time filter that filters all

00:31:30,570 --> 00:31:34,830
processes and if they're new we will

00:31:32,610 --> 00:31:36,570
send them as an event let's pretty much

00:31:34,830 --> 00:31:38,520
it that's what this does so what happens

00:31:36,570 --> 00:31:40,620
is whenever new process is launched it

00:31:38,520 --> 00:31:43,230
will be send off an event to someone and

00:31:40,620 --> 00:31:46,710
that event can then be used so if we

00:31:43,230 --> 00:31:49,470
move over to our script oh wait sorry no

00:31:46,710 --> 00:31:51,090
this is the way the event will look so

00:31:49,470 --> 00:31:52,620
what we'll get is for it for each new

00:31:51,090 --> 00:31:54,720
process we will get you know a bunch of

00:31:52,620 --> 00:31:56,429
data you know the pretty much the

00:31:54,720 --> 00:32:01,200
standard stuff like memory command line

00:31:56,429 --> 00:32:02,940
all of those good things right and yes

00:32:01,200 --> 00:32:04,590
this is the script so what we can do is

00:32:02,940 --> 00:32:06,809
on our init function we can say that you

00:32:04,590 --> 00:32:08,520
know all these script events send them

00:32:06,809 --> 00:32:10,260
to this my function over here and then

00:32:08,520 --> 00:32:12,330
as I said before we can just say ok

00:32:10,260 --> 00:32:15,419
notepad is running let's add monitoring

00:32:12,330 --> 00:32:17,460
for notepad and this way we can

00:32:15,419 --> 00:32:19,020
automatically enable the correct modules

00:32:17,460 --> 00:32:22,679
for the correct server because we know

00:32:19,020 --> 00:32:24,720
what's actually running there so if we

00:32:22,679 --> 00:32:27,000
were to have nice scripts for pretty

00:32:24,720 --> 00:32:29,340
much that standard tools we are using

00:32:27,000 --> 00:32:31,260
out there we could just put them all in

00:32:29,340 --> 00:32:34,320
the script and have you know the right

00:32:31,260 --> 00:32:36,390
modules loaded and then we can also

00:32:34,320 --> 00:32:38,280
utilize metrics and here's another

00:32:36,390 --> 00:32:39,960
example of that in the metrics we will

00:32:38,280 --> 00:32:42,600
get a list of all our network cards from

00:32:39,960 --> 00:32:44,820
the machine and so in our script we can

00:32:42,600 --> 00:32:46,380
quite easily you know say hey send all

00:32:44,820 --> 00:32:48,120
metrics to this function over here and

00:32:46,380 --> 00:32:49,470
then we'll go through the list and say

00:32:48,120 --> 00:32:51,120
do we have a new metric starting with

00:32:49,470 --> 00:32:53,309
system not network ended with network

00:32:51,120 --> 00:32:56,130
connection yes has to be a new network

00:32:53,309 --> 00:32:58,110
card that's added and then in a script

00:32:56,130 --> 00:32:59,909
or not in this function over here we

00:32:58,110 --> 00:33:02,700
check have we seen this network card

00:32:59,909 --> 00:33:04,650
before no let's add it to icinga and

00:33:02,700 --> 00:33:06,240
then we can just fire off this

00:33:04,650 --> 00:33:09,930
check tracing a function which will then

00:33:06,240 --> 00:33:12,330
create the check now something I

00:33:09,930 --> 00:33:15,330
realized on the flight here is that this

00:33:12,330 --> 00:33:18,120
works handsomely well at home when my

00:33:15,330 --> 00:33:20,340
monitoring server can see my machine not

00:33:18,120 --> 00:33:22,410
so much in the airplane when my

00:33:20,340 --> 00:33:24,600
monitoring server no longer can see my

00:33:22,410 --> 00:33:27,090
machine so the whole active monetary

00:33:24,600 --> 00:33:29,100
thing didn't really pan out but

00:33:27,090 --> 00:33:31,350
fortunately enough there is quite easily

00:33:29,100 --> 00:33:33,960
support for adding passive monitoring as

00:33:31,350 --> 00:33:35,280
well so what we can do is in our init

00:33:33,960 --> 00:33:38,820
function say that hey you know whenever

00:33:35,280 --> 00:33:40,950
someone sends this alert passively let's

00:33:38,820 --> 00:33:43,020
send it my function here and I can just

00:33:40,950 --> 00:33:46,530
send it off to icing as a passive result

00:33:43,020 --> 00:33:48,360
and then somewhere in my init function

00:33:46,530 --> 00:33:50,880
again I can say you know let's add a

00:33:48,360 --> 00:33:52,290
couple of passive checks and then reload

00:33:50,880 --> 00:33:53,970
the schedule remodeler and all of a

00:33:52,290 --> 00:33:57,330
sudden we have passive monitoring

00:33:53,970 --> 00:33:59,910
sending two icing via the REST API again

00:33:57,330 --> 00:34:01,950
we're talking 1015 lines of code so we

00:33:59,910 --> 00:34:03,660
can utilize a lot of these features in

00:34:01,950 --> 00:34:06,750
Anna's client much like we would utilize

00:34:03,660 --> 00:34:09,630
LEGO pieces and create something that is

00:34:06,750 --> 00:34:10,919
hopefully kind of cool and this is when

00:34:09,630 --> 00:34:13,590
everything is gonna fall apart because

00:34:10,919 --> 00:34:16,020
now I'm gonna demo things and that's

00:34:13,590 --> 00:34:17,159
spectacularly good idea especially when

00:34:16,020 --> 00:34:21,140
you're going to demo things over a

00:34:17,159 --> 00:34:23,310
network that sometimes actually works

00:34:21,140 --> 00:34:29,130
but it did work this morning so I'm

00:34:23,310 --> 00:34:31,770
hopeful so let's see first of all the

00:34:29,130 --> 00:34:33,540
web browser if anyone want to follow

00:34:31,770 --> 00:34:35,220
along by the way you know it's

00:34:33,540 --> 00:34:38,250
flickering okay

00:34:35,220 --> 00:34:40,679
yeah I know that means gonna flick her

00:34:38,250 --> 00:34:42,570
afterwards anyway let's make this bigger

00:34:40,679 --> 00:34:45,419
if you want to follow along you can go

00:34:42,570 --> 00:34:46,980
to netting dot name slash Oh SMC and you

00:34:45,419 --> 00:34:50,460
can download this file and run this

00:34:46,980 --> 00:34:53,130
command and you will be monitored a bit

00:34:50,460 --> 00:34:55,950
from now but what we're gonna do is go

00:34:53,130 --> 00:34:57,330
to the icinga web interface and this is

00:34:55,950 --> 00:35:00,690
the way it looks out-of-the-box by the

00:34:57,330 --> 00:35:02,070
way I have no idea why why half the

00:35:00,690 --> 00:35:06,480
out-of-the-box checks are not working

00:35:02,070 --> 00:35:09,840
but it's probably a good thing and what

00:35:06,480 --> 00:35:15,010
we can do now is not go here hopefully

00:35:09,840 --> 00:35:20,710
we can go here instead and see if I can

00:35:15,010 --> 00:35:26,170
figure out how to login to my virtual

00:35:20,710 --> 00:35:30,210
machine and let's go to my II drive

00:35:26,170 --> 00:35:33,069
where I have a little readme file and

00:35:30,210 --> 00:35:36,970
then I can just copy the same thing you

00:35:33,069 --> 00:35:39,790
had on your webpage and install and it's

00:35:36,970 --> 00:35:43,270
client with our configuration from my

00:35:39,790 --> 00:35:45,849
web server and hopefully in a bit we

00:35:43,270 --> 00:35:47,410
will have a machine popping up here now

00:35:45,849 --> 00:35:49,839
this takes a while first of all we need

00:35:47,410 --> 00:35:53,740
to fetch stuff over the network and yeah

00:35:49,839 --> 00:35:55,809
it's work sometimes but also it needs to

00:35:53,740 --> 00:35:57,819
sort and some of the metrics and things

00:35:55,809 --> 00:36:00,339
like that comes ten seconds later

00:35:57,819 --> 00:36:03,220
but oh yeah here it is so let's just

00:36:00,339 --> 00:36:05,710
make this bigger not that big that thing

00:36:03,220 --> 00:36:09,369
so here we have the machine flickering

00:36:05,710 --> 00:36:11,380
and all and if we click it we will have

00:36:09,369 --> 00:36:13,240
a bunch of service checks which some

00:36:11,380 --> 00:36:14,770
will just turn green and there turn

00:36:13,240 --> 00:36:17,980
green because they're possibly monitored

00:36:14,770 --> 00:36:20,790
right so this is just a one line

00:36:17,980 --> 00:36:23,430
installer and it's monitoring things

00:36:20,790 --> 00:36:26,920
let's see what it is actually monitoring

00:36:23,430 --> 00:36:29,109
oh yeah this is checking that and his

00:36:26,920 --> 00:36:30,579
client is running this is an active

00:36:29,109 --> 00:36:32,920
checks that's not working out too well

00:36:30,579 --> 00:36:35,010
because we can't connect these to our

00:36:32,920 --> 00:36:37,599
passives they are actually working out

00:36:35,010 --> 00:36:39,040
then we have the network card check

00:36:37,599 --> 00:36:40,540
there's only one network card on this

00:36:39,040 --> 00:36:42,099
machine and then there's some ping thing

00:36:40,540 --> 00:36:44,470
which is not working at all for obvious

00:36:42,099 --> 00:36:46,410
reasons right but what we can do now is

00:36:44,470 --> 00:36:50,799
if we go to this guy and we start

00:36:46,410 --> 00:36:53,230
notepad you know if I can spell instead

00:36:50,799 --> 00:36:56,410
we will have our wonderous notepad thing

00:36:53,230 --> 00:36:57,790
kicking off hopefully in a bit again it

00:36:56,410 --> 00:37:00,420
takes a while for the metrics they come

00:36:57,790 --> 00:37:02,859
every ten seconds or something like that

00:37:00,420 --> 00:37:04,930
and I think I actually need to reload

00:37:02,859 --> 00:37:08,589
here because done sir oh yeah no it

00:37:04,930 --> 00:37:10,119
actually did reload sorry so here we

00:37:08,589 --> 00:37:11,920
have our notepad check which is again

00:37:10,119 --> 00:37:15,819
passive or active so that's not going to

00:37:11,920 --> 00:37:18,549
work out either so again here we can

00:37:15,819 --> 00:37:20,530
pretty much automatic infrastructure if

00:37:18,549 --> 00:37:23,099
we were so inclined and I'm gonna

00:37:20,530 --> 00:37:26,290
briefly walk you through the script

00:37:23,099 --> 00:37:28,260
maybe I shouldn't try to change this I

00:37:26,290 --> 00:37:30,720
don't know how we're doing on time

00:37:28,260 --> 00:37:33,630
but this flickering screen could be a

00:37:30,720 --> 00:37:41,100
godsend if I'm too fast because it'll

00:37:33,630 --> 00:37:43,800
take a while for me to fix this oh yeah

00:37:41,100 --> 00:37:49,820
well no they're weird because they're

00:37:43,800 --> 00:37:53,850
duplicated so what did we say 1280 1024

00:37:49,820 --> 00:37:55,740
this one awesome that's my secretary by

00:37:53,850 --> 00:37:56,580
the way from what I know him burn give

00:37:55,740 --> 00:38:03,030
her hands for burn

00:37:56,580 --> 00:38:04,410
oh sorry burned rune he's the one who

00:38:03,030 --> 00:38:07,830
fixed a flickering the last time by the

00:38:04,410 --> 00:38:09,270
way he kept telling me that you can

00:38:07,830 --> 00:38:11,400
change the refresh rate and I said no

00:38:09,270 --> 00:38:15,090
we've abandoned CRT monitors back in the

00:38:11,400 --> 00:38:19,670
80s but apparently he was right right so

00:38:15,090 --> 00:38:23,400
let's make this lightly bigger no oh

00:38:19,670 --> 00:38:25,290
something like that and click there so

00:38:23,400 --> 00:38:27,119
what we're doing here is first of all we

00:38:25,290 --> 00:38:29,210
need to import some stuff from the NS

00:38:27,119 --> 00:38:31,950
client settings registry core and log

00:38:29,210 --> 00:38:33,990
then we're using import Lib because this

00:38:31,950 --> 00:38:35,609
is a modular script so instead of having

00:38:33,990 --> 00:38:37,560
all the code in one script we can put

00:38:35,609 --> 00:38:40,800
the notepad specific stuff in a separate

00:38:37,560 --> 00:38:43,080
script requests is the Python framework

00:38:40,800 --> 00:38:44,100
for doing rust api's and Jason is the

00:38:43,080 --> 00:38:46,560
one we're using to do Jason

00:38:44,100 --> 00:38:49,080
communication and socket I'm using to

00:38:46,560 --> 00:38:50,490
get the host name these are some global

00:38:49,080 --> 00:38:52,710
variables which we're just going to

00:38:50,490 --> 00:38:54,600
leave as is and then we have our absurd

00:38:52,710 --> 00:38:56,490
function and this is pretty much what I

00:38:54,600 --> 00:38:58,200
showed you before so here we do a post

00:38:56,490 --> 00:39:00,450
to I think I forget it for for will you

00:38:58,200 --> 00:39:02,010
put instead so once they do that the

00:39:00,450 --> 00:39:04,380
absurd thing we can collapse this down

00:39:02,010 --> 00:39:05,580
to one-liner and if there's an error we

00:39:04,380 --> 00:39:08,280
just log it so we don't really care

00:39:05,580 --> 00:39:10,170
about it that's obviously bad code and

00:39:08,280 --> 00:39:12,210
then we have our post functions because

00:39:10,170 --> 00:39:15,540
we can't really do the whole post put

00:39:12,210 --> 00:39:17,820
thing for a service check or sorry

00:39:15,540 --> 00:39:19,170
passive service results and then there's

00:39:17,820 --> 00:39:20,550
a delete function for removing

00:39:19,170 --> 00:39:21,780
everything when we're done right because

00:39:20,550 --> 00:39:24,869
we don't want to leave the monitoring

00:39:21,780 --> 00:39:26,940
there once we're done and that's pretty

00:39:24,869 --> 00:39:28,350
much for it then to make my life easier

00:39:26,940 --> 00:39:30,150
I've done some wrappers for the actual

00:39:28,350 --> 00:39:32,640
icinga API I think so what I have is an

00:39:30,150 --> 00:39:34,380
ad host function where I quite simply

00:39:32,640 --> 00:39:35,970
just set up the payload we have so we

00:39:34,380 --> 00:39:37,890
need to set the address check command

00:39:35,970 --> 00:39:39,930
the bars and some stuff like that and

00:39:37,890 --> 00:39:41,940
then we essentially just do the absurds

00:39:39,930 --> 00:39:43,800
functions we had before

00:39:41,940 --> 00:39:46,290
and then we have this thing for adding

00:39:43,800 --> 00:39:48,030
an NRP service and here we do the same

00:39:46,290 --> 00:39:50,910
thing we have the payload for a service

00:39:48,030 --> 00:39:53,579
check and then we just do an ab cert on

00:39:50,910 --> 00:39:55,230
that one as well and that's pretty much

00:39:53,579 --> 00:39:57,480
it obviously if you want to tweak things

00:39:55,230 --> 00:39:58,619
like check interval retry interval and

00:39:57,480 --> 00:40:01,530
all that kind of stuff you can do that

00:39:58,619 --> 00:40:03,300
but in this case we're doing the simple

00:40:01,530 --> 00:40:07,050
route and just using some random default

00:40:03,300 --> 00:40:08,460
values here we have the whole module PUC

00:40:07,050 --> 00:40:09,930
thing so essentially what we're saying

00:40:08,460 --> 00:40:11,280
here is you know hey we're gonna install

00:40:09,930 --> 00:40:12,990
this module which would be you know

00:40:11,280 --> 00:40:15,480
check sequel server or something like

00:40:12,990 --> 00:40:17,599
that in our case it's check an SCP and

00:40:15,480 --> 00:40:19,619
check notepad because I was lazy and

00:40:17,599 --> 00:40:21,869
essentially we're just loading the

00:40:19,619 --> 00:40:23,400
module and setting the plugin ad and

00:40:21,869 --> 00:40:24,750
installing it and then we're adding all

00:40:23,400 --> 00:40:28,800
the services and that's pretty much it

00:40:24,750 --> 00:40:30,390
and our event handler which we will

00:40:28,800 --> 00:40:32,339
install a bit later we're checking if

00:40:30,390 --> 00:40:34,710
notepad is running then we installed a

00:40:32,339 --> 00:40:36,560
notepad module if an SCP is running then

00:40:34,710 --> 00:40:38,880
we're installing the NSEP module and

00:40:36,560 --> 00:40:40,710
obviously this list could be much longer

00:40:38,880 --> 00:40:43,290
if we had sequel server or exchange for

00:40:40,710 --> 00:40:46,589
things like that but that sort of the

00:40:43,290 --> 00:40:48,150
premise would be the same right then we

00:40:46,589 --> 00:40:50,190
have our network card function and this

00:40:48,150 --> 00:40:51,930
is pretty much the same as before so if

00:40:50,190 --> 00:40:53,640
we have a network card that's not in the

00:40:51,930 --> 00:40:56,339
list in other words is a new network

00:40:53,640 --> 00:40:57,930
card we will add an NRP service check

00:40:56,339 --> 00:41:01,200
for that where we're just running check

00:40:57,930 --> 00:41:02,640
Nick which is or sorry we're using check

00:41:01,200 --> 00:41:04,579
network we call it for check need which

00:41:02,640 --> 00:41:08,400
is a built-in and his client function

00:41:04,579 --> 00:41:10,859
for doing checks on network cards and

00:41:08,400 --> 00:41:12,240
for passive things no sorry this is the

00:41:10,859 --> 00:41:14,099
metrics handler so here's where we

00:41:12,240 --> 00:41:16,410
discover the networks and we get a list

00:41:14,099 --> 00:41:17,940
of all the metrics and we figure out all

00:41:16,410 --> 00:41:20,069
the ones starting with system Network

00:41:17,940 --> 00:41:21,900
and ending in network connection ID will

00:41:20,069 --> 00:41:23,460
probably be network interface so let's

00:41:21,900 --> 00:41:25,290
grab the stuff in between which will be

00:41:23,460 --> 00:41:29,130
the name of the network and add it as a

00:41:25,290 --> 00:41:31,680
new network card this is the icing a

00:41:29,130 --> 00:41:34,530
passive function so here is where we're

00:41:31,680 --> 00:41:36,150
getting a passive result from some check

00:41:34,530 --> 00:41:38,220
that's running inside and it's client

00:41:36,150 --> 00:41:39,810
and we don't have to build that logic

00:41:38,220 --> 00:41:41,849
because it's already built this all we

00:41:39,810 --> 00:41:43,800
have to do is when the passive result

00:41:41,849 --> 00:41:46,050
comes to us we need to send it off to a

00:41:43,800 --> 00:41:47,520
single so we just do the short route

00:41:46,050 --> 00:41:49,319
setting the exit code on the plug-in

00:41:47,520 --> 00:41:53,550
output and we just do post addressing

00:41:49,319 --> 00:41:55,020
API then we have our init function and

00:41:53,550 --> 00:41:55,890
here's where we do quite a lot of things

00:41:55,020 --> 00:41:57,150
right first of all

00:41:55,890 --> 00:41:58,980
we need to figure out what the server is

00:41:57,150 --> 00:42:01,380
called and so we're just using socket

00:41:58,980 --> 00:42:04,190
get haast by name and that will be you

00:42:01,380 --> 00:42:06,359
know the host name we can see in the

00:42:04,190 --> 00:42:11,099
interface down here so that one is

00:42:06,359 --> 00:42:12,779
called well something weird then we need

00:42:11,099 --> 00:42:14,700
to register our functions and in this

00:42:12,779 --> 00:42:16,230
case we register the events to submit

00:42:14,700 --> 00:42:18,839
matrix functions and a simple

00:42:16,230 --> 00:42:20,940
subscription and the simple subscription

00:42:18,839 --> 00:42:23,609
is essentially when when something

00:42:20,940 --> 00:42:25,260
happens it will be sent to mailbox this

00:42:23,609 --> 00:42:26,849
is us saying if something's sent it out

00:42:25,260 --> 00:42:30,809
mailbox we want to process it because

00:42:26,849 --> 00:42:32,279
we're gonna send it to icinga then we

00:42:30,809 --> 00:42:34,980
have the whole configuration thing and

00:42:32,279 --> 00:42:36,359
again we can just get the values but a

00:42:34,980 --> 00:42:38,490
nicer way of doing does is by

00:42:36,359 --> 00:42:40,380
registering the keys because then we can

00:42:38,490 --> 00:42:42,809
provide a description default values and

00:42:40,380 --> 00:42:44,519
help and things like that so that when

00:42:42,809 --> 00:42:46,500
someone goes to the n is client web UI

00:42:44,519 --> 00:42:48,660
it looks like this so we have like the

00:42:46,500 --> 00:42:50,339
acing password and descriptions and

00:42:48,660 --> 00:42:51,990
things like that and it make it much

00:42:50,339 --> 00:42:56,670
easier than if it would just be an a

00:42:51,990 --> 00:42:59,160
random key we can set but these are

00:42:56,670 --> 00:43:01,380
technically pointless apart from the

00:42:59,160 --> 00:43:03,180
fact that it makes life easier and then

00:43:01,380 --> 00:43:05,700
we just create our a single object based

00:43:03,180 --> 00:43:07,529
on the username and a password so if we

00:43:05,700 --> 00:43:09,390
were to change or want to change their I

00:43:07,529 --> 00:43:11,160
single password we can just do so in

00:43:09,390 --> 00:43:12,569
here in the user interface and we can

00:43:11,160 --> 00:43:14,910
save that and everything will you know

00:43:12,569 --> 00:43:16,859
be the new user interface or we can use

00:43:14,910 --> 00:43:18,180
the reload function which will mean that

00:43:16,859 --> 00:43:20,460
it will reload the configuration

00:43:18,180 --> 00:43:22,319
whenever we change it on the server and

00:43:20,460 --> 00:43:26,099
we can push the same values that way so

00:43:22,319 --> 00:43:28,289
we can do it both ways right then we

00:43:26,099 --> 00:43:29,940
have a bunch of service checks and here

00:43:28,289 --> 00:43:31,859
we're going to use the scheduler module

00:43:29,940 --> 00:43:35,190
and we can just add check memory and

00:43:31,859 --> 00:43:37,980
check CPU as internal service checks and

00:43:35,190 --> 00:43:40,019
we do that by adding a command on the

00:43:37,980 --> 00:43:42,269
channel and this is where the result is

00:43:40,019 --> 00:43:43,650
being sent which is again the one we're

00:43:42,269 --> 00:43:45,779
subscribing to and we're running them

00:43:43,650 --> 00:43:47,279
every 30 seconds and then we're really

00:43:45,779 --> 00:43:49,319
scheduler and that's pretty much it

00:43:47,279 --> 00:43:52,680
except for once we exit we need to

00:43:49,319 --> 00:43:56,130
remove everything so 155 lines of code

00:43:52,680 --> 00:43:57,990
something I added pretty much Sunday so

00:43:56,130 --> 00:43:59,849
it's not complicated it's not difficult

00:43:57,990 --> 00:44:02,369
it's fairly straightforward and simple

00:43:59,849 --> 00:44:03,930
and did this way we can just automate

00:44:02,369 --> 00:44:06,359
pretty much everything if we were so

00:44:03,930 --> 00:44:08,279
inclined and if we were to start writer

00:44:06,359 --> 00:44:09,840
scripts this way I think things would be

00:44:08,279 --> 00:44:11,400
much better

00:44:09,840 --> 00:44:13,020
because all of a sudden we could create

00:44:11,400 --> 00:44:18,210
intelligent scripts that would actually

00:44:13,020 --> 00:44:20,730
do intelligent things right I don't know

00:44:18,210 --> 00:44:23,850
how I'm doing on time usually not so

00:44:20,730 --> 00:44:24,960
well but we'll live with that let's see

00:44:23,850 --> 00:44:32,550
that's continued

00:44:24,960 --> 00:44:33,390
no it wasn't dammit I think it is shift

00:44:32,550 --> 00:44:36,480
have fun yeah

00:44:33,390 --> 00:44:39,390
so the demos seem to work out actually

00:44:36,480 --> 00:44:41,550
oh yeah I might actually do this by the

00:44:39,390 --> 00:44:45,750
way while I'm at it let's go to the

00:44:41,550 --> 00:44:47,420
virtual machine and do not stop and

00:44:45,750 --> 00:44:51,030
a-c-p

00:44:47,420 --> 00:44:52,740
and let's see if it goes away in the web

00:44:51,030 --> 00:44:55,190
interface that went away

00:44:52,740 --> 00:44:58,350
so hopefully the machine should go away

00:44:55,190 --> 00:45:00,120
here oh yeah it does but then this is

00:44:58,350 --> 00:45:05,670
the way and I think it tells you that

00:45:00,120 --> 00:45:08,730
it's gone away by the way right so with

00:45:05,670 --> 00:45:11,130
that I essentially want to say another

00:45:08,730 --> 00:45:14,430
tip you know if you talk about something

00:45:11,130 --> 00:45:16,380
and then demo it takes twice as long and

00:45:14,430 --> 00:45:18,540
so with that I want to say thank you for

00:45:16,380 --> 00:45:21,930
listening and sorry for being early as

00:45:18,540 --> 00:45:27,500
always but someone has to be that as

00:45:21,930 --> 00:45:29,580
well oh yeah by the way

00:45:27,500 --> 00:45:34,280
Cameron where did I put on though here

00:45:29,580 --> 00:45:34,280
you grab a soda

00:45:34,740 --> 00:45:49,020
you know I'll probably go stand over

00:45:38,550 --> 00:45:52,190
here Oh flash as well well yeah it's a

00:45:49,020 --> 00:45:52,190
second room full of dead people

00:45:56,620 --> 00:46:02,630
shall we try it again with someone being

00:45:59,480 --> 00:46:06,800
slightly alive what do you think is it

00:46:02,630 --> 00:46:08,240
possible no too late can we get up a

00:46:06,800 --> 00:46:09,770
couple of bull gene or something in here

00:46:08,240 --> 00:46:16,520
and you know paper people will you know

00:46:09,770 --> 00:46:23,270
lively up a bit so Tim look happy thank

00:46:16,520 --> 00:46:26,000
you well thank you and and again slides

00:46:23,270 --> 00:46:30,200
on SlideShare if you want to see them

00:46:26,000 --> 00:46:33,230
again I'm on the other bald links if you

00:46:30,200 --> 00:46:36,410
want to see me again you can just Google

00:46:33,230 --> 00:46:43,220
me if you want to do that or some other

00:46:36,410 --> 00:46:52,550
these are perverted hobby you have any

00:46:43,220 --> 00:46:53,390
questions maybe no no no oh there's a

00:46:52,550 --> 00:46:57,400
question awesome

00:46:53,390 --> 00:46:57,400
no it's like the the hired questioner

00:46:58,840 --> 00:47:07,340
the question was not so hard but what

00:47:03,350 --> 00:47:11,330
does happen when you stop notepad for

00:47:07,340 --> 00:47:15,830
example nothing like all right

00:47:11,330 --> 00:47:19,010
no notepad is altered so it will be an

00:47:15,830 --> 00:47:20,990
alert okay again it depends on what you

00:47:19,010 --> 00:47:22,640
do now we have an event saying that when

00:47:20,990 --> 00:47:25,010
something is started we want to monitor

00:47:22,640 --> 00:47:27,470
it and then presumably it should be

00:47:25,010 --> 00:47:28,820
started right it depends on you you

00:47:27,470 --> 00:47:30,230
could obviously have something if it's

00:47:28,820 --> 00:47:31,760
going away we don't want to monitor

00:47:30,230 --> 00:47:33,950
again but then what what why bother

00:47:31,760 --> 00:47:35,690
monitoring you're trying and so the

00:47:33,950 --> 00:47:37,250
thesis here if it's someone install

00:47:35,690 --> 00:47:39,380
sequel server they probably wanted

00:47:37,250 --> 00:47:40,970
monitor but you could obviously do it

00:47:39,380 --> 00:47:42,770
both ways yes for sure if you want to

00:47:40,970 --> 00:47:44,630
have an event killing all the monitoring

00:47:42,770 --> 00:47:46,780
when something dies yeah you're free to

00:47:44,630 --> 00:47:46,780
do that

00:47:48,370 --> 00:47:52,480
any other questions no no

00:47:56,660 --> 00:48:04,460
sorry oh sure yeah yeah this could be it

00:48:07,580 --> 00:48:21,060
no there is no further down oh really

00:48:14,180 --> 00:48:22,470
now that's my own computer yeah it

00:48:21,060 --> 00:48:23,700
should work apparently no one is doing

00:48:22,470 --> 00:48:28,460
otherwise would like hundreds in

00:48:23,700 --> 00:48:28,460
computers here but okay

00:48:30,620 --> 00:48:35,970
should being the key word oh yeah there

00:48:34,800 --> 00:48:38,250
it is awesome

00:48:35,970 --> 00:48:43,470
so someone join in all the fun you know

00:48:38,250 --> 00:48:45,000
let's have a party but thank you for

00:48:43,470 --> 00:48:47,190
listening if you don't have any

00:48:45,000 --> 00:48:49,080
questions I'll be around if you come up

00:48:47,190 --> 00:48:52,950
with questions later we're too shy to

00:48:49,080 --> 00:48:54,810
ask them now by the way we can see that

00:48:52,950 --> 00:48:56,160
he's running Windows 10 if you want to

00:48:54,810 --> 00:49:01,140
hack him or something you have the build

00:48:56,160 --> 00:49:03,090
number there yeah of course I have a

00:49:01,140 --> 00:49:07,770
button over here if you just wait a bit

00:49:03,090 --> 00:49:08,970
on that would be totally doable and how

00:49:07,770 --> 00:49:10,740
did it had there been like a Linux

00:49:08,970 --> 00:49:12,330
version of this people might actually

00:49:10,740 --> 00:49:14,610
have gone for it so then I probably have

00:49:12,330 --> 00:49:16,050
you know added the delete button and I

00:49:14,610 --> 00:49:17,850
would have been hated by the world and

00:49:16,050 --> 00:49:18,990
yes again we can see that this is a

00:49:17,850 --> 00:49:22,080
thing you're telling us that the server

00:49:18,990 --> 00:49:23,430
is no longer there it said this is by

00:49:22,080 --> 00:49:25,560
the way how old the error messages look

00:49:23,430 --> 00:49:28,160
well when you're using the rest a pair

00:49:25,560 --> 00:49:30,690
you go like all right thank you

00:49:28,160 --> 00:49:32,610
it could have said you know hast not

00:49:30,690 --> 00:49:37,050
found or you know something or it or

00:49:32,610 --> 00:49:39,990
this as well yeah either is fine well

00:49:37,050 --> 00:49:49,480
thank you again I'll sign off now

00:49:39,990 --> 00:49:49,480

YouTube URL: https://www.youtube.com/watch?v=oyeGJ6RWtvA


