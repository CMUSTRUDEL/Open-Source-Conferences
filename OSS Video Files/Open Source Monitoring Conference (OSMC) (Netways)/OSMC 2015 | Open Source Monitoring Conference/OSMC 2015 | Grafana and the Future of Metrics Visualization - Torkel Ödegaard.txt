Title: OSMC 2015 | Grafana and the Future of Metrics Visualization - Torkel Ã–degaard
Publication date: 2015-11-27
Playlist: OSMC 2015 | Open Source Monitoring Conference
Description: 
	An introduction to the open source software Grafana, a graph and dashboard composer with rich metric query builders and visualizations. Learn why Grafana has quickly become the leading frontend for time series databases like Graphite, InfluxDB and OpenTSDB. We then take a look at how we can improve the state of metric visualization, and how can we better integrate metrics with alerting.
Captions: 
	00:00:08,820 --> 00:00:14,010
okay so we're ready to start can you

00:00:11,040 --> 00:00:16,890
please close the doors and our first

00:00:14,010 --> 00:00:21,470
talk is from Tokyo regard is talking

00:00:16,890 --> 00:00:26,460
about Griffin and um future of matrix

00:00:21,470 --> 00:00:32,250
visualization your turn thank you hear

00:00:26,460 --> 00:00:36,180
me yes let's see sorry about that my vga

00:00:32,250 --> 00:00:38,910
to hdmi converter i forgot it attack

00:00:36,180 --> 00:00:42,500
conference out i was at last so i didn't

00:00:38,910 --> 00:00:46,260
have it so i have to do this on my mac

00:00:42,500 --> 00:00:50,940
so which means the demos has to be done

00:00:46,260 --> 00:00:53,730
on this live demo site so depending on

00:00:50,940 --> 00:00:58,039
the Wi-Fi the demos might be a little

00:00:53,730 --> 00:01:10,289
shaky so we'll see how that goes but I

00:00:58,039 --> 00:01:13,680
let's see a presentation mode so yeah

00:01:10,289 --> 00:01:16,140
I'm here to talk about rafal now and

00:01:13,680 --> 00:01:21,720
which is an open source tool that I

00:01:16,140 --> 00:01:24,119
created two years ago and and before we

00:01:21,720 --> 00:01:27,060
begin I'm gonna just introduce myself my

00:01:24,119 --> 00:01:30,630
name is torque killer the gourd and I'm

00:01:27,060 --> 00:01:34,439
from Sweden 11 work in Stockholm and my

00:01:30,630 --> 00:01:36,659
twitter handle is torkoal oh I will work

00:01:34,439 --> 00:01:40,380
for a company called rain tank and also

00:01:36,659 --> 00:01:42,930
the founder of rain tank or co founder /

00:01:40,380 --> 00:01:45,270
intake so this is a company behind

00:01:42,930 --> 00:01:50,450
Ravana we're trying to monetize this

00:01:45,270 --> 00:01:52,409
office or project building and SAS

00:01:50,450 --> 00:01:55,909
platform and SAS monitoring platform

00:01:52,409 --> 00:01:58,770
that is built on open source tools so

00:01:55,909 --> 00:02:00,600
yeah that's rain tank we're also trying

00:01:58,770 --> 00:02:03,149
to sort monetize kafana by sort of

00:02:00,600 --> 00:02:05,549
building support services around it but

00:02:03,149 --> 00:02:11,130
our main goal is building a SAS platform

00:02:05,549 --> 00:02:14,190
as well so what is go fauna I mr. would

00:02:11,130 --> 00:02:19,460
be interesting to know how many here

00:02:14,190 --> 00:02:22,700
uska fauna or well aquatic quite a few

00:02:19,460 --> 00:02:24,350
that's really really wait so the first

00:02:22,700 --> 00:02:27,320
part of this talk is just going to be a

00:02:24,350 --> 00:02:29,030
little my vision sort of why I built

00:02:27,320 --> 00:02:31,820
upon what kind of problem did it's all

00:02:29,030 --> 00:02:36,170
for me and and where it's heading in the

00:02:31,820 --> 00:02:38,210
future as well but I'm so for those who

00:02:36,170 --> 00:02:40,700
haven't used a phoner before or know of

00:02:38,210 --> 00:02:44,480
it it's it's a all about time series

00:02:40,700 --> 00:02:48,820
visualization so the main main use cases

00:02:44,480 --> 00:02:51,290
is of course sort of monitoring but a

00:02:48,820 --> 00:02:52,730
also application metrics yes gaining

00:02:51,290 --> 00:02:54,250
insight into so what what your

00:02:52,730 --> 00:02:56,990
application is doing in production

00:02:54,250 --> 00:02:59,740
business metrics everything like

00:02:56,990 --> 00:03:03,080
everything that is a time series or as

00:02:59,740 --> 00:03:04,250
so the main use cases maybe thirty

00:03:03,080 --> 00:03:06,380
percent twenty twenty percent

00:03:04,250 --> 00:03:07,700
infrastructure monitoring twenty thirty

00:03:06,380 --> 00:03:10,760
percent application metrics but then

00:03:07,700 --> 00:03:12,320
there's this really great usage where

00:03:10,760 --> 00:03:14,810
people use this for industrial centers

00:03:12,320 --> 00:03:18,560
home animation whether process control

00:03:14,810 --> 00:03:20,930
some guy built the site to monitor bike

00:03:18,560 --> 00:03:23,930
availability in Calgary force of public

00:03:20,930 --> 00:03:26,750
bikes and someone in Japan built aside

00:03:23,930 --> 00:03:31,610
to I'm public dashboards that shows how

00:03:26,750 --> 00:03:34,430
the cues for for hospitals in Japan so

00:03:31,610 --> 00:03:36,980
that's there's sort of a range of use

00:03:34,430 --> 00:03:39,490
cases and it kind of looks like this

00:03:36,980 --> 00:03:41,870
there you build this dashboard with

00:03:39,490 --> 00:03:44,450
panels and the range the panels in

00:03:41,870 --> 00:03:47,660
different configurations mainly graph

00:03:44,450 --> 00:03:49,790
there are a couple different panel types

00:03:47,660 --> 00:03:51,920
but the main panel is a graph panel that

00:03:49,790 --> 00:03:56,270
provides very rich support for four

00:03:51,920 --> 00:03:59,750
different graphing yeah options so why

00:03:56,270 --> 00:04:02,660
did I build this to answer why why what

00:03:59,750 --> 00:04:04,850
what were its did it scratch so I mean

00:04:02,660 --> 00:04:05,990
for me I'm a developer I come from this

00:04:04,850 --> 00:04:07,970
sort of agile and test driven

00:04:05,990 --> 00:04:10,490
development movement that that really

00:04:07,970 --> 00:04:12,470
passionate about quality code and sort

00:04:10,490 --> 00:04:15,980
of being productive in large development

00:04:12,470 --> 00:04:17,090
teams that later turned into a real

00:04:15,980 --> 00:04:19,180
passion about something I called

00:04:17,090 --> 00:04:24,470
continuous delivery and micro services

00:04:19,180 --> 00:04:26,600
and this was continuous deliveries all

00:04:24,470 --> 00:04:29,660
Autobots are being able to deploy to

00:04:26,600 --> 00:04:31,640
production so every time I so f as often

00:04:29,660 --> 00:04:33,100
as possible multiple times per day and

00:04:31,640 --> 00:04:35,560
two in order

00:04:33,100 --> 00:04:36,880
to do that one solution is to have micro

00:04:35,560 --> 00:04:40,000
services because that allows you to

00:04:36,880 --> 00:04:42,370
deploy to production multiple all the

00:04:40,000 --> 00:04:44,830
time without may be causing too much of

00:04:42,370 --> 00:04:46,060
a disturbance mark services are also

00:04:44,830 --> 00:04:50,140
great for so if you have a large

00:04:46,060 --> 00:04:52,540
development and many team you can split

00:04:50,140 --> 00:04:53,890
your development resources into small

00:04:52,540 --> 00:04:57,900
teams at all to work on different

00:04:53,890 --> 00:05:02,410
services but both of these things can

00:04:57,900 --> 00:05:06,640
create problems for monitoring and so

00:05:02,410 --> 00:05:09,100
one someone called the Adrian Cockroft

00:05:06,640 --> 00:05:11,410
correct term this phrase called Death

00:05:09,100 --> 00:05:14,020
Star architecture and this is

00:05:11,410 --> 00:05:17,410
architecture dependence diagram for

00:05:14,020 --> 00:05:19,810
Netflix there is an equal 10 this is for

00:05:17,410 --> 00:05:21,670
Twitter there's an equal one for Netflix

00:05:19,810 --> 00:05:24,790
that looks sort of like a Death Star and

00:05:21,670 --> 00:05:26,050
all the names on the circle is different

00:05:24,790 --> 00:05:27,850
services and all the lines or

00:05:26,050 --> 00:05:30,420
dependencies between different

00:05:27,850 --> 00:05:32,920
components and it sort of creates this

00:05:30,420 --> 00:05:34,960
enormously complex mess and you can

00:05:32,920 --> 00:05:36,310
imagine sort of monitoring a system

00:05:34,960 --> 00:05:38,050
where all these different services are

00:05:36,310 --> 00:05:41,710
constantly being deployed multiple times

00:05:38,050 --> 00:05:44,290
per day and there are changes so this

00:05:41,710 --> 00:05:46,300
trend so on on both creating more

00:05:44,290 --> 00:05:48,400
complexities root systems and deploying

00:05:46,300 --> 00:05:50,760
all the time creates of course a very

00:05:48,400 --> 00:05:54,280
sort of ever increasing need for

00:05:50,760 --> 00:05:56,560
observability observability and this is

00:05:54,280 --> 00:05:59,040
sort of the main key thing that drove me

00:05:56,560 --> 00:06:00,970
into this into the monitoring space I

00:05:59,040 --> 00:06:02,680
wanted to know what was going on in

00:06:00,970 --> 00:06:05,080
production with my applications and sort

00:06:02,680 --> 00:06:06,880
of not understanding how the what they

00:06:05,080 --> 00:06:08,530
were doing what the performance

00:06:06,880 --> 00:06:12,730
bottlenecks are and also what so the

00:06:08,530 --> 00:06:15,070
users of the system we're doing and one

00:06:12,730 --> 00:06:17,310
great thing so tool in order to gain

00:06:15,070 --> 00:06:20,380
observability is time series data bases

00:06:17,310 --> 00:06:21,610
and I mean I'm not might be preaching to

00:06:20,380 --> 00:06:24,400
the choir here at the monitoring

00:06:21,610 --> 00:06:26,290
conference so but time search databases

00:06:24,400 --> 00:06:29,560
are really great purpose built systems

00:06:26,290 --> 00:06:31,660
for for measuring things and they have a

00:06:29,560 --> 00:06:36,060
purpose built right and Corey API

00:06:31,660 --> 00:06:39,340
designed just for sort of measurements a

00:06:36,060 --> 00:06:41,530
popular another old project and in this

00:06:39,340 --> 00:06:45,010
space is graphite which is a project i

00:06:41,530 --> 00:06:46,449
really love but it really captures the

00:06:45,010 --> 00:06:50,189
idea around a purpose

00:06:46,449 --> 00:06:53,680
database because it has this very

00:06:50,189 --> 00:06:56,499
extremely simple right API where you

00:06:53,680 --> 00:06:59,830
only send it a metric key value and a

00:06:56,499 --> 00:07:03,039
timestamp this is this or you can open a

00:06:59,830 --> 00:07:05,710
TCP or UDP packet and Sons and this as a

00:07:03,039 --> 00:07:09,249
plain plain string and so incredibly

00:07:05,710 --> 00:07:12,400
simple right api and that sort of enable

00:07:09,249 --> 00:07:15,330
this a very large ecosystem of tools

00:07:12,400 --> 00:07:19,330
that can write metrics to graphite or

00:07:15,330 --> 00:07:21,310
other servers that have compatible sort

00:07:19,330 --> 00:07:26,499
of API is because since it's so simple

00:07:21,310 --> 00:07:30,370
many other databases also support this

00:07:26,499 --> 00:07:33,249
right API and but a graphite also so

00:07:30,370 --> 00:07:35,080
what's great about graphite and other

00:07:33,249 --> 00:07:36,939
time series data bases is that it allows

00:07:35,080 --> 00:07:40,930
you to them very easily correlate it and

00:07:36,939 --> 00:07:44,800
visualize it so you might specify the

00:07:40,930 --> 00:07:47,080
court the metric key and a wild card but

00:07:44,800 --> 00:07:49,930
you can also don't transform and do some

00:07:47,080 --> 00:07:52,060
complex motor metric analytics on those

00:07:49,930 --> 00:07:54,849
metric on those metric measurements

00:07:52,060 --> 00:07:57,399
wrapping the expression in functions or

00:07:54,849 --> 00:07:59,289
scaling them this is sort of scaling a

00:07:57,399 --> 00:08:01,389
number of series there's a wild-card

00:07:59,289 --> 00:08:04,839
scaling them seconds applying a moving

00:08:01,389 --> 00:08:06,159
average or five minutes so you can do

00:08:04,839 --> 00:08:08,889
all these kinds of transformations you

00:08:06,159 --> 00:08:10,240
can even divide a set of series against

00:08:08,889 --> 00:08:12,849
another set of series calculate

00:08:10,240 --> 00:08:16,240
percentages and sort of do more complex

00:08:12,849 --> 00:08:18,430
arithmetic which is great especially for

00:08:16,240 --> 00:08:22,360
business metrics and application metrics

00:08:18,430 --> 00:08:25,959
where you can maybe want to do more more

00:08:22,360 --> 00:08:27,759
transformations on them you can also

00:08:25,959 --> 00:08:31,029
time shift metrics which is really

00:08:27,759 --> 00:08:33,269
useful if you want to compare how things

00:08:31,029 --> 00:08:36,760
are looking right now to how it looked

00:08:33,269 --> 00:08:42,039
the same time yesterday or the same time

00:08:36,760 --> 00:08:44,319
last week um so yeah graph I love little

00:08:42,039 --> 00:08:50,769
I've graphite so that's sort of what we

00:08:44,319 --> 00:08:53,470
started using and this is a couple years

00:08:50,769 --> 00:08:55,630
ago etsu least stats d which also sort

00:08:53,470 --> 00:08:57,579
of bootstrap tour kicked off this

00:08:55,630 --> 00:08:59,990
metrics movement where you should

00:08:57,579 --> 00:09:01,700
measure everything and that made it

00:08:59,990 --> 00:09:03,529
this tool cause that's the which made it

00:09:01,700 --> 00:09:07,130
really really easy to instrument your

00:09:03,529 --> 00:09:09,110
applications for metrics so I'm in order

00:09:07,130 --> 00:09:11,899
in order to get those pretty dashboard

00:09:09,110 --> 00:09:14,839
yeah you have to sort of invest some

00:09:11,899 --> 00:09:16,430
time you have to build I have to install

00:09:14,839 --> 00:09:19,570
and time search database you have to

00:09:16,430 --> 00:09:23,089
install givanna or and you also have to

00:09:19,570 --> 00:09:25,970
instrument your application and so I

00:09:23,089 --> 00:09:28,820
mean to me this is a really important

00:09:25,970 --> 00:09:32,089
step because monitoring is not about yes

00:09:28,820 --> 00:09:33,920
through looking at CPU health or memory

00:09:32,089 --> 00:09:35,529
it's about knowing what's going on in

00:09:33,920 --> 00:09:38,600
your application and visualizing their

00:09:35,529 --> 00:09:40,580
internal state but also the performance

00:09:38,600 --> 00:09:43,910
bottlenecks and also use of behavior

00:09:40,580 --> 00:09:48,370
because the best thing to to monitor is

00:09:43,910 --> 00:09:51,980
user how users are using the system and

00:09:48,370 --> 00:09:54,589
revenue logins payments whatever your

00:09:51,980 --> 00:09:59,510
users are doing let's create critical

00:09:54,589 --> 00:10:01,220
thing to to visualize and monitor so but

00:09:59,510 --> 00:10:02,630
and that starts with instrumentation and

00:10:01,220 --> 00:10:06,250
that could be yes the thing that simple

00:10:02,630 --> 00:10:08,570
line like sort of increment the counter

00:10:06,250 --> 00:10:13,130
but then you cannot build a dashboard

00:10:08,570 --> 00:10:15,589
but the curtain estate of sort of metric

00:10:13,130 --> 00:10:18,079
visualization tools a couple of years

00:10:15,589 --> 00:10:20,899
ago was not that good a graphite was one

00:10:18,079 --> 00:10:23,079
of the better ones in terms of sort of

00:10:20,899 --> 00:10:25,550
both at unseres database and had

00:10:23,079 --> 00:10:28,810
features to build dashboards and Corey

00:10:25,550 --> 00:10:31,550
these metrics but the default dashboard

00:10:28,810 --> 00:10:34,220
build their own metric query editor was

00:10:31,550 --> 00:10:35,870
very very bare bones and very made it

00:10:34,220 --> 00:10:37,579
very hard to write these metric where's

00:10:35,870 --> 00:10:41,180
because you got this you get this very

00:10:37,579 --> 00:10:46,070
small a text field to tear the de

00:10:41,180 --> 00:10:47,899
cuisine and the graphs themselves

00:10:46,070 --> 00:10:49,910
weren't very interactive you consuming

00:10:47,899 --> 00:10:54,620
it was very clunky to build this

00:10:49,910 --> 00:10:57,920
dashboard so when we try to introduce

00:10:54,620 --> 00:10:59,779
graphite and instrumentation and in

00:10:57,920 --> 00:11:01,970
order to gain more observability we

00:10:59,779 --> 00:11:04,370
really struggled to get our different

00:11:01,970 --> 00:11:07,459
development teams to to use this because

00:11:04,370 --> 00:11:09,410
we was kind of low adoption people I had

00:11:07,459 --> 00:11:13,100
to push teams to to do this but they

00:11:09,410 --> 00:11:13,939
didn't really didn't feel like whether

00:11:13,100 --> 00:11:16,879
they had time to

00:11:13,939 --> 00:11:19,279
best to note to learn graphite or learn

00:11:16,879 --> 00:11:21,919
the query editor or learn how to build

00:11:19,279 --> 00:11:24,529
queries and dashboards so that was sort

00:11:21,919 --> 00:11:26,899
of the H I was I mean look there were a

00:11:24,529 --> 00:11:29,239
ton of different dashboards and tools

00:11:26,899 --> 00:11:32,599
that's can visualize data storing

00:11:29,239 --> 00:11:34,789
graphite but that was sort of there but

00:11:32,599 --> 00:11:37,059
none of them the alternative dashboard

00:11:34,789 --> 00:11:40,729
really solved the problem of his

00:11:37,059 --> 00:11:43,039
accessibility and ease of use so that

00:11:40,729 --> 00:11:45,259
was sort of the H I was scratching when

00:11:43,039 --> 00:11:47,599
I started working on the phone now and

00:11:45,259 --> 00:11:49,309
the core thing I wanted to do make was

00:11:47,599 --> 00:11:52,039
make a tool that it was more accessible

00:11:49,309 --> 00:11:56,569
and easier to use that made sort of the

00:11:52,039 --> 00:12:00,799
power of graphite more more more easier

00:11:56,569 --> 00:12:02,239
to use to understand the queries so they

00:12:00,799 --> 00:12:05,209
could one of the sort of things I'm most

00:12:02,239 --> 00:12:08,539
proud of in the phone I is this how it

00:12:05,209 --> 00:12:10,389
makes queries that are can be quite

00:12:08,539 --> 00:12:14,239
complex this is still a simple query and

00:12:10,389 --> 00:12:15,529
but it turns transform this query into a

00:12:14,239 --> 00:12:18,049
much more readable format and

00:12:15,529 --> 00:12:21,019
interactable so instead of having the

00:12:18,049 --> 00:12:22,459
small text box with an expression

00:12:21,019 --> 00:12:26,149
wrapped in a number of function

00:12:22,459 --> 00:12:31,929
parameters you get this interactable and

00:12:26,149 --> 00:12:37,599
see if this is a PDF so I had I had a

00:12:31,929 --> 00:12:40,159
there I moved the PDF from from my linux

00:12:37,599 --> 00:12:44,720
this is a animated gif but that in

00:12:40,159 --> 00:12:46,519
translate so this is the metric key and

00:12:44,720 --> 00:12:48,889
each other I'll show this in a demo

00:12:46,519 --> 00:12:50,539
later on if each segment of the metric

00:12:48,889 --> 00:12:52,399
is interactable so you can click and

00:12:50,539 --> 00:12:54,859
select get the drop-down you can add

00:12:52,399 --> 00:12:56,720
functions as transformations so the

00:12:54,859 --> 00:12:59,629
functions come off the new metric key as

00:12:56,720 --> 00:13:02,149
a series of as a chain of transformation

00:12:59,629 --> 00:13:04,249
functions so this is just a way to sort

00:13:02,149 --> 00:13:06,639
of wrote a graphic processor that can

00:13:04,249 --> 00:13:09,409
actually visualize the metric query in

00:13:06,639 --> 00:13:11,629
not just this way that actually sort of

00:13:09,409 --> 00:13:17,029
transforms and gets the functions after

00:13:11,629 --> 00:13:21,139
the metric key anyway what one waits you

00:13:17,029 --> 00:13:24,470
through a word we have coined that green

00:13:21,139 --> 00:13:26,990
tank is sort of a philosophy for for

00:13:24,470 --> 00:13:29,720
graph honest democratize metrics make

00:13:26,990 --> 00:13:34,190
make these tools more accessible and

00:13:29,720 --> 00:13:37,100
easier to use and also a one thing that

00:13:34,190 --> 00:13:40,190
I really like good UX and beautiful you

00:13:37,100 --> 00:13:42,670
eyes so that this is also sort of one

00:13:40,190 --> 00:13:46,040
thing I I have wanted to emphasize

00:13:42,670 --> 00:13:48,980
because it's it really gives if you have

00:13:46,040 --> 00:13:50,510
a good looking monitoring tool its acts

00:13:48,980 --> 00:13:51,890
like a carrot to people to actually

00:13:50,510 --> 00:13:53,839
invest the time and instrumental

00:13:51,890 --> 00:13:55,100
applications and build dashboard so it's

00:13:53,839 --> 00:13:58,100
a really important thing to have

00:13:55,100 --> 00:14:00,529
something that is a joy to use and that

00:13:58,100 --> 00:14:03,649
looks good and this is a when I look at

00:14:00,529 --> 00:14:05,360
sort of user surveys of graph on ax this

00:14:03,649 --> 00:14:07,550
is one of the top-rated things that they

00:14:05,360 --> 00:14:10,640
like about the phone is that it's it

00:14:07,550 --> 00:14:14,149
looks good and a quarter quarter this is

00:14:10,640 --> 00:14:16,130
another poster we have four and don't

00:14:14,149 --> 00:14:18,140
get in the way of the data and this was

00:14:16,130 --> 00:14:20,390
this is also core tenant sort of when I

00:14:18,140 --> 00:14:23,120
design the phone and is building a UI

00:14:20,390 --> 00:14:25,190
that that didn't get in the way of the

00:14:23,120 --> 00:14:29,029
data that was very very bare-bones in

00:14:25,190 --> 00:14:32,029
how it presented metrics so the panels

00:14:29,029 --> 00:14:34,790
don't have any sort of move button

00:14:32,029 --> 00:14:37,810
delete button edit buttons they're very

00:14:34,790 --> 00:14:42,020
stripped down so so there's just a graph

00:14:37,810 --> 00:14:45,410
type the title and in order to interact

00:14:42,020 --> 00:14:47,029
with and move panels and edit panels you

00:14:45,410 --> 00:14:49,670
have to click the title title which is

00:14:47,029 --> 00:14:53,450
very unintuitive to new users but once

00:14:49,670 --> 00:14:56,720
you learn that it kind of you get over

00:14:53,450 --> 00:15:00,410
it whether the focus is the into don't

00:14:56,720 --> 00:15:04,040
get anywhere of the data and make us

00:15:00,410 --> 00:15:07,520
beautiful and so all this looks really

00:15:04,040 --> 00:15:10,910
white to me there's a there's a white

00:15:07,520 --> 00:15:14,420
theme for non-technical people but so

00:15:10,910 --> 00:15:16,910
whatever they want so the grifone a

00:15:14,420 --> 00:15:19,370
product it's still quite young I mean

00:15:16,910 --> 00:15:21,860
the first list was in Los January so

00:15:19,370 --> 00:15:24,500
it's almost two years but in that time

00:15:21,860 --> 00:15:26,810
it's grown incredibly sort of its we had

00:15:24,500 --> 00:15:29,750
a 13 major releases a bunch of minor

00:15:26,810 --> 00:15:32,690
patch releases as well it has gained a

00:15:29,750 --> 00:15:35,329
lot of traction on github have a ton of

00:15:32,690 --> 00:15:40,070
sort of people that bring feedback help

00:15:35,329 --> 00:15:40,730
with issues and has been amazing sort of

00:15:40,070 --> 00:15:42,170
seeing the

00:15:40,730 --> 00:15:44,209
response from the monitoring convenient

00:15:42,170 --> 00:15:46,910
community to this project it feels like

00:15:44,209 --> 00:15:50,240
it was really sort of something that

00:15:46,910 --> 00:15:53,149
people had missing a good a good time

00:15:50,240 --> 00:15:55,040
series dashboard tool that really

00:15:53,149 --> 00:15:58,970
emphasized good UX it was something that

00:15:55,040 --> 00:16:02,120
people have been really waiting for so

00:15:58,970 --> 00:16:04,790
in when grifone was released it was

00:16:02,120 --> 00:16:07,760
originally targeting only graphite but

00:16:04,790 --> 00:16:11,810
since then i added a sort of plug-in

00:16:07,760 --> 00:16:13,940
abstraction and a number of other data

00:16:11,810 --> 00:16:16,100
sources has been added either ask or

00:16:13,940 --> 00:16:18,139
supported data sources that ship with

00:16:16,100 --> 00:16:20,510
Griffin whereas external plugins that

00:16:18,139 --> 00:16:23,930
other companies or other sort of

00:16:20,510 --> 00:16:26,389
contributors provide so in the latest

00:16:23,930 --> 00:16:29,839
release governor supports not only

00:16:26,389 --> 00:16:33,980
graphite the support so PTSD be elastic

00:16:29,839 --> 00:16:36,380
search cloud watch influx TB prometheus

00:16:33,980 --> 00:16:41,570
is a new one which is gaining a lot of

00:16:36,380 --> 00:16:45,350
popularity as well so yeah that's sort

00:16:41,570 --> 00:16:46,790
of the space for time series data bases

00:16:45,350 --> 00:16:49,010
is really blooming now there are sort of

00:16:46,790 --> 00:16:51,230
being announced new time series data

00:16:49,010 --> 00:16:53,899
bases almost every weekend seems like

00:16:51,230 --> 00:16:56,240
there's a lot of interest in in creating

00:16:53,899 --> 00:16:59,149
efficient ways to to measure as much as

00:16:56,240 --> 00:17:02,620
possible so yeah it's a really

00:16:59,149 --> 00:17:06,140
interesting interesting space to be in

00:17:02,620 --> 00:17:08,630
so yeah that was sort of the background

00:17:06,140 --> 00:17:11,900
all a bit about sagra fauna and why i

00:17:08,630 --> 00:17:14,270
created it and for those who haven't

00:17:11,900 --> 00:17:18,650
sort of used it i want to go through

00:17:14,270 --> 00:17:23,179
some some simple demos let's see if i

00:17:18,650 --> 00:17:25,880
have the place right here so as I said

00:17:23,179 --> 00:17:28,669
before sort of the you build this

00:17:25,880 --> 00:17:32,240
dashboard compulsive panels you can move

00:17:28,669 --> 00:17:34,910
panels around you can resize them but

00:17:32,240 --> 00:17:37,400
you can also serve you them in in full

00:17:34,910 --> 00:17:39,980
screen or edit them and all that

00:17:37,400 --> 00:17:47,620
interaction you go through a panel menu

00:17:39,980 --> 00:17:50,870
by clicking title so and can

00:17:47,620 --> 00:17:54,559
increase the font size so this is the

00:17:50,870 --> 00:17:56,419
the graphite co-editor so I mean as i

00:17:54,559 --> 00:18:00,529
said before your phone and supports many

00:17:56,419 --> 00:18:02,929
different data sources and you can sort

00:18:00,529 --> 00:18:04,940
of change different data sources down

00:18:02,929 --> 00:18:07,220
here and depending on what issues you

00:18:04,940 --> 00:18:08,480
get a different curve editor and i put a

00:18:07,220 --> 00:18:10,940
lot of effort into making these

00:18:08,480 --> 00:18:13,880
creditors as sort of easy to use and

00:18:10,940 --> 00:18:15,710
powerful to expose this the power of the

00:18:13,880 --> 00:18:21,230
time saves database in a sort of

00:18:15,710 --> 00:18:23,960
easy-to-use way as possible so in this

00:18:21,230 --> 00:18:26,630
case we have this is the metric key we

00:18:23,960 --> 00:18:31,039
can change change any part of the metric

00:18:26,630 --> 00:18:33,830
key maybe take it out that metric and

00:18:31,039 --> 00:18:40,340
this is the functions if we remove these

00:18:33,830 --> 00:18:43,240
functions we can add them again yes to

00:18:40,340 --> 00:18:46,130
see how that broaden moving average

00:18:43,240 --> 00:18:48,169
maybe we won't want to scare maybe this

00:18:46,130 --> 00:18:51,799
is a rate want to scale it scaled away

00:18:48,169 --> 00:18:55,669
two seconds maybe add a alias function

00:18:51,799 --> 00:18:58,190
and to me this is a so much more easy to

00:18:55,669 --> 00:19:00,919
work with to have the metric key and

00:18:58,190 --> 00:19:02,510
then see how the functions and the

00:19:00,919 --> 00:19:06,230
function parameters are being applied in

00:19:02,510 --> 00:19:07,940
a shame so compare that to the real

00:19:06,230 --> 00:19:11,500
query that is being sent to graphite

00:19:07,940 --> 00:19:13,730
where the parameters are sort of on

00:19:11,500 --> 00:19:17,809
opposite sides to the function which

00:19:13,730 --> 00:19:20,929
they correlate user so it's a it makes

00:19:17,809 --> 00:19:23,419
it a lot more pleasant to work and

00:19:20,929 --> 00:19:24,710
understands if you look at ash borer

00:19:23,419 --> 00:19:27,049
someone else's build you can actually

00:19:24,710 --> 00:19:32,390
understand what what what the graphs are

00:19:27,049 --> 00:19:34,299
showing so that is the graphic query

00:19:32,390 --> 00:19:37,220
editor and you also have a lot of

00:19:34,299 --> 00:19:39,890
flexibility for how how the legend

00:19:37,220 --> 00:19:44,020
should be shown what units on the axis

00:19:39,890 --> 00:19:47,950
and so it's a plethora of different

00:19:44,020 --> 00:19:51,440
display options as well and and grid

00:19:47,950 --> 00:19:53,210
options and the ear you can also

00:19:51,440 --> 00:19:55,340
override the time range so there is a

00:19:53,210 --> 00:19:59,960
dashboard time range like this dashboard

00:19:55,340 --> 00:20:00,890
is showing lost two hours but you can

00:19:59,960 --> 00:20:03,800
actually

00:20:00,890 --> 00:20:06,140
override different panels could override

00:20:03,800 --> 00:20:08,300
that time range so this you might want

00:20:06,140 --> 00:20:10,700
to have a dashboard that shows you the

00:20:08,300 --> 00:20:12,590
last hour or lost two hours but this

00:20:10,700 --> 00:20:15,380
panel should only showed show you the

00:20:12,590 --> 00:20:17,540
last day so we can have sort of a panel

00:20:15,380 --> 00:20:19,550
that shows you lost our last six hours

00:20:17,540 --> 00:20:21,140
and last day for the same metric if you

00:20:19,550 --> 00:20:25,190
want to compare different time ranges on

00:20:21,140 --> 00:20:28,640
the same dashboard of course there

00:20:25,190 --> 00:20:30,830
graphite test this really useful time

00:20:28,640 --> 00:20:33,380
shift function that you can also compare

00:20:30,830 --> 00:20:40,100
different time ranges on the same same

00:20:33,380 --> 00:20:41,840
graph so just to show you how it looks

00:20:40,100 --> 00:20:43,670
when you sort of change to a different

00:20:41,840 --> 00:20:46,820
data source so if i change the lat it

00:20:43,670 --> 00:20:54,950
elasticsearch we get a different query

00:20:46,820 --> 00:20:56,510
editor so in this case it's a for

00:20:54,950 --> 00:21:00,590
elastic search where you can select

00:20:56,510 --> 00:21:02,510
different kinds of it exposes the

00:21:00,590 --> 00:21:05,690
features for for how elastic search

00:21:02,510 --> 00:21:07,670
works I'm not sure if how the good wife

00:21:05,690 --> 00:21:09,380
is here so but you get to order

00:21:07,670 --> 00:21:11,540
completion for what fields are available

00:21:09,380 --> 00:21:15,950
in this elastic search index that you're

00:21:11,540 --> 00:21:18,050
defined grifone ax is actually sort of

00:21:15,950 --> 00:21:19,820
year most attended web application that

00:21:18,050 --> 00:21:21,500
you can install and run for yourself so

00:21:19,820 --> 00:21:24,950
you can have sign-ins and different

00:21:21,500 --> 00:21:28,990
authentication schemes and you add data

00:21:24,950 --> 00:21:28,990
sources through the UI or through an API

00:21:29,050 --> 00:21:44,990
so yeah let's see if this will work yes

00:21:40,460 --> 00:21:48,860
so one of the core things that were sort

00:21:44,990 --> 00:21:50,600
of the many missed in the default sort

00:21:48,860 --> 00:21:53,120
of graphite dashboard and another

00:21:50,600 --> 00:21:55,130
dashboard for for other time series data

00:21:53,120 --> 00:22:00,080
bases was a way to make you neric

00:21:55,130 --> 00:22:01,970
dashboard I mean with the sort of it's

00:22:00,080 --> 00:22:03,920
quite common that you add new servers or

00:22:01,970 --> 00:22:06,380
remove servers or new applications come

00:22:03,920 --> 00:22:08,300
along and and you have metrics that are

00:22:06,380 --> 00:22:09,680
very Sublette that follow are very sort

00:22:08,300 --> 00:22:12,110
of generic structure for all these

00:22:09,680 --> 00:22:14,360
applications and so you don't want to

00:22:12,110 --> 00:22:17,240
build a dashboard for each

00:22:14,360 --> 00:22:19,460
server for each application when you

00:22:17,240 --> 00:22:22,270
have some generic use case you know

00:22:19,460 --> 00:22:25,520
metrics that you want to visualize so

00:22:22,270 --> 00:22:27,560
for the default graphite dash dash poor

00:22:25,520 --> 00:22:29,800
you have to have to actually duplicate

00:22:27,560 --> 00:22:32,990
the dashboard for each in each instance

00:22:29,800 --> 00:22:35,920
but what you can do in grifoni is that

00:22:32,990 --> 00:22:42,200
you can actually define these variables

00:22:35,920 --> 00:22:44,150
that you can define them and specify so

00:22:42,200 --> 00:22:46,670
that they should be filled with values

00:22:44,150 --> 00:22:49,520
from the time series database so in this

00:22:46,670 --> 00:22:52,190
case you specified sort of a server

00:22:49,520 --> 00:22:56,120
variable that sort of specifies that it

00:22:52,190 --> 00:22:58,880
should be take all the metric all the

00:22:56,120 --> 00:23:00,650
parts of the metric names in this sort

00:22:58,880 --> 00:23:03,890
of apps that and it's using another

00:23:00,650 --> 00:23:09,740
variable in this case that's not wild

00:23:03,890 --> 00:23:11,660
card while so this will actually contain

00:23:09,740 --> 00:23:15,650
if you add a new server it will be added

00:23:11,660 --> 00:23:18,560
to this list and in the actual metric

00:23:15,650 --> 00:23:21,410
queries you can use these variables so

00:23:18,560 --> 00:23:24,650
you never have to sort of change instead

00:23:21,410 --> 00:23:28,180
of Harley specifying back in one in this

00:23:24,650 --> 00:23:35,150
case you can use the server variable and

00:23:28,180 --> 00:23:37,100
this allows you to then change and all

00:23:35,150 --> 00:23:39,020
the all the sort of graphs will change

00:23:37,100 --> 00:23:41,150
in this dashboard you can change in this

00:23:39,020 --> 00:23:44,690
case you have two linked variables so

00:23:41,150 --> 00:23:49,610
you can change to the site website and

00:23:44,690 --> 00:23:53,450
then you get another set of servers so

00:23:49,610 --> 00:23:55,310
there's one of the most complex but also

00:23:53,450 --> 00:23:58,280
very sort of popular features in graph

00:23:55,310 --> 00:23:59,990
on up because it allows users to sort of

00:23:58,280 --> 00:24:03,710
create generic dashboards that they can

00:23:59,990 --> 00:24:10,960
reuse for many use cases and there is an

00:24:03,710 --> 00:24:15,400
extension of this feature and ce4 maybe

00:24:10,960 --> 00:24:18,850
where where you can actually specify

00:24:15,400 --> 00:24:23,510
that a panel should be repeated for each

00:24:18,850 --> 00:24:28,160
so this says repeat panel based on the

00:24:23,510 --> 00:24:30,740
server's variable so if I pick

00:24:28,160 --> 00:24:34,070
other values in this server variable

00:24:30,740 --> 00:24:36,410
yeah this that tunnel will actually be

00:24:34,070 --> 00:24:41,960
repeated so you can sort of create a

00:24:36,410 --> 00:24:49,790
very dynamic dashboard that way let's

00:24:41,960 --> 00:24:53,330
see so another feature is annotations

00:24:49,790 --> 00:24:55,250
and of course when you have that just

00:24:53,330 --> 00:24:58,010
graphs and time-series you want might

00:24:55,250 --> 00:25:00,560
want to sort of augment that with more

00:24:58,010 --> 00:25:04,310
rich data more sort of log information

00:25:00,560 --> 00:25:08,600
or event data example might be so you

00:25:04,310 --> 00:25:10,760
want to visualize when you made if

00:25:08,600 --> 00:25:13,070
infrastructure changes or deployments

00:25:10,760 --> 00:25:15,800
and that's something you can do with

00:25:13,070 --> 00:25:17,540
annotations so you specify annotations

00:25:15,800 --> 00:25:19,730
and annotations can be sort of fetched

00:25:17,540 --> 00:25:23,960
from a multitude of data sources like

00:25:19,730 --> 00:25:27,320
graphite in flux DB elastic search and

00:25:23,960 --> 00:25:29,030
you will get these through and this is

00:25:27,320 --> 00:25:31,070
not showing much information but you can

00:25:29,030 --> 00:25:33,290
actually have more so rich text in these

00:25:31,070 --> 00:25:42,350
annotations that show you what exactly

00:25:33,290 --> 00:25:45,230
was deployed or another cool thing that

00:25:42,350 --> 00:25:48,350
I'm kind of proud of it so it's kind of

00:25:45,230 --> 00:25:51,620
unique is that you can actually create a

00:25:48,350 --> 00:25:56,870
snapshot of either a whole dashboard or

00:25:51,620 --> 00:25:58,820
a panel and share that with other people

00:25:56,870 --> 00:26:01,130
who don't have access to your graph on

00:25:58,820 --> 00:26:03,020
instance you can all you can all you can

00:26:01,130 --> 00:26:04,790
create a local snapchat as well and what

00:26:03,020 --> 00:26:07,730
this does is actually captures all the

00:26:04,790 --> 00:26:11,420
visible data in the dashboard and three

00:26:07,730 --> 00:26:14,090
embeds it into adjacent file let it sit

00:26:11,420 --> 00:26:18,350
then push to other to your local gov on

00:26:14,090 --> 00:26:21,800
a server or to a public snapshot server

00:26:18,350 --> 00:26:26,030
where people can actually interact with

00:26:21,800 --> 00:26:28,460
the with the dashboard or and the data

00:26:26,030 --> 00:26:32,480
but they cannot see any more than sort

00:26:28,460 --> 00:26:37,010
of what you saw in that so this is the

00:26:32,480 --> 00:26:39,920
snapshot if I then sort of sue mout you

00:26:37,010 --> 00:26:42,050
can see that there is no more data it's

00:26:39,920 --> 00:26:44,870
only the data that was sort of visible

00:26:42,050 --> 00:26:49,090
when I did that snapshot and you can do

00:26:44,870 --> 00:26:49,090
snapshot of a whole dash porch as well

00:26:50,110 --> 00:26:58,520
and you you can this is also kind of a

00:26:54,800 --> 00:27:04,670
cool feature I think in that year if you

00:26:58,520 --> 00:27:06,350
want to share some graph on hip shot or

00:27:04,670 --> 00:27:10,520
slack or some shot you can actually get

00:27:06,350 --> 00:27:13,220
an image of the enemy panel can be

00:27:10,520 --> 00:27:15,590
rendered to a PNG and there's an API for

00:27:13,220 --> 00:27:17,360
this and there's so integration with hip

00:27:15,590 --> 00:27:21,260
shot and slack via who bought if you

00:27:17,360 --> 00:27:24,170
don't know that tool so this is also as

00:27:21,260 --> 00:27:26,960
a this is rendered on the roof on a

00:27:24,170 --> 00:27:29,240
server using phantom Jas which makes it

00:27:26,960 --> 00:27:33,320
possible to sort of create a a graph

00:27:29,240 --> 00:27:35,060
that looks identical to to what it looks

00:27:33,320 --> 00:27:36,830
like in the browser because and efendim

00:27:35,060 --> 00:27:39,040
days will just open it on the server

00:27:36,830 --> 00:27:43,430
side and capture an image of the panel

00:27:39,040 --> 00:27:45,680
so that's really powerful as well and

00:27:43,430 --> 00:27:53,930
you can also embed iframe embed panels

00:27:45,680 --> 00:27:58,220
if you want to let's see if I miss any

00:27:53,930 --> 00:28:01,310
any fun things in flux DB is a popular

00:27:58,220 --> 00:28:04,550
Tyler one of the more popular time

00:28:01,310 --> 00:28:09,290
series data bases right now and there's

00:28:04,550 --> 00:28:11,270
a sort of custom build core editor for

00:28:09,290 --> 00:28:14,030
for influx DB as well where you can

00:28:11,270 --> 00:28:25,990
specify tag filters and grew and grew pi

00:28:14,030 --> 00:28:25,990
tags let's see if I can

00:28:33,780 --> 00:28:42,490
can go back to the slides I think they

00:28:37,840 --> 00:28:45,900
most of the important things and if you

00:28:42,490 --> 00:28:51,460
have any questions can sort of this

00:28:45,900 --> 00:28:54,970
shoot let's see yeah yeah so the core of

00:28:51,460 --> 00:28:59,080
go fauna is is power powerful graphing

00:28:54,970 --> 00:29:01,060
to and visualization tools so and I've

00:28:59,080 --> 00:29:04,060
spent a lot of time on sort of on making

00:29:01,060 --> 00:29:08,920
the editors so powerful and easy-to-use

00:29:04,060 --> 00:29:14,980
as well so when it comes to sort of

00:29:08,920 --> 00:29:16,870
where summarize go for nights is a tool

00:29:14,980 --> 00:29:18,970
to gain observability into your

00:29:16,870 --> 00:29:22,360
applications via metrics and time series

00:29:18,970 --> 00:29:27,040
and it does that's through power power

00:29:22,360 --> 00:29:28,870
power through UX and what's really funny

00:29:27,040 --> 00:29:32,910
when I talk to organizations that have

00:29:28,870 --> 00:29:35,410
started using graph ona is that I mean

00:29:32,910 --> 00:29:37,180
they're only on the topic of adoption

00:29:35,410 --> 00:29:40,500
they have sort of scene when they use

00:29:37,180 --> 00:29:42,700
start using this the adoption rate for

00:29:40,500 --> 00:29:46,750
instrumenting applications and billing

00:29:42,700 --> 00:29:49,180
dashboard is just skyrocketing before I

00:29:46,750 --> 00:29:51,640
had to really go two teams to push them

00:29:49,180 --> 00:29:53,980
to add instrumentation to build citizen

00:29:51,640 --> 00:29:56,860
to instrument wrap application and add

00:29:53,980 --> 00:29:59,680
metrics but off today sort of saw our

00:29:56,860 --> 00:30:01,390
team and so our dashboards they wanted

00:29:59,680 --> 00:30:05,080
the same and it just sort of grew like

00:30:01,390 --> 00:30:07,330
wildfire in this organization and soon

00:30:05,080 --> 00:30:09,640
everyone had two monitors up on the wall

00:30:07,330 --> 00:30:11,560
and was really passionate about metrics

00:30:09,640 --> 00:30:14,520
and visualization so it has this

00:30:11,560 --> 00:30:17,320
incredible effect of sort of really

00:30:14,520 --> 00:30:19,630
creating a great incentive into sir

00:30:17,320 --> 00:30:22,900
adding instrumentation and gaining

00:30:19,630 --> 00:30:24,940
better observability and i'm not sure

00:30:22,900 --> 00:30:27,130
what sort of what the core thing is but

00:30:24,940 --> 00:30:34,270
it just having that visual feedback is

00:30:27,130 --> 00:30:36,010
really important so and the future for

00:30:34,270 --> 00:30:38,400
going to perform project is kind of I

00:30:36,010 --> 00:30:41,830
mean I've been working on a project

00:30:38,400 --> 00:30:43,210
full-time for more than a year and it's

00:30:41,830 --> 00:30:44,860
mainly been me I've had

00:30:43,210 --> 00:30:46,600
help from others at rain thank but they

00:30:44,860 --> 00:30:50,830
are working be mainly working on the

00:30:46,600 --> 00:30:54,100
sass sass part of it but a starting in

00:30:50,830 --> 00:30:56,529
two weeks i'll be adding one more I've

00:30:54,100 --> 00:30:58,990
been hiring hang in stockholm so we're

00:30:56,529 --> 00:31:02,020
going to be have more resources to spend

00:30:58,990 --> 00:31:05,470
on your phone and we're going to be

00:31:02,020 --> 00:31:07,210
three next year so we're going to spend

00:31:05,470 --> 00:31:12,580
a lot on alerting because this is the

00:31:07,210 --> 00:31:15,130
top rated featuring a fan of that that

00:31:12,580 --> 00:31:19,029
there is no no integration with learning

00:31:15,130 --> 00:31:20,440
there's no features for learning and we

00:31:19,029 --> 00:31:23,200
are going sort of proof of cone making

00:31:20,440 --> 00:31:26,320
proof of concepts for a number of months

00:31:23,200 --> 00:31:29,850
on how to integrate alerting integral

00:31:26,320 --> 00:31:32,980
for now and there's a good youtube video

00:31:29,850 --> 00:31:35,200
from GAF an icon that will be happy in

00:31:32,980 --> 00:31:37,360
New York in October that goes into

00:31:35,200 --> 00:31:38,830
detail about our thought process our on

00:31:37,360 --> 00:31:43,510
how we're going to build alerting

00:31:38,830 --> 00:31:45,640
integra fauna and the main thing is

00:31:43,510 --> 00:31:49,000
you're going to be able to set

00:31:45,640 --> 00:31:51,820
thresholds visually within your store

00:31:49,000 --> 00:31:55,270
panels but that's going to be saved to

00:31:51,820 --> 00:31:57,370
an unloading sort definition and we're

00:31:55,270 --> 00:31:59,080
going to get the opportunity to have

00:31:57,370 --> 00:32:01,539
different alerting handler so you might

00:31:59,080 --> 00:32:04,990
be able to sort execute your alluring

00:32:01,539 --> 00:32:06,250
shakes via sensu or other handlers and

00:32:04,990 --> 00:32:08,980
there's going to be a grifone a handler

00:32:06,250 --> 00:32:11,620
as well that can execute checks or it

00:32:08,980 --> 00:32:13,899
might have something that bridges and so

00:32:11,620 --> 00:32:16,630
your alerting rules are executed by

00:32:13,899 --> 00:32:18,669
Prometheus or bosun so we're going to

00:32:16,630 --> 00:32:21,460
have where that's the vision we have at

00:32:18,669 --> 00:32:23,440
least that you can set your thresholds

00:32:21,460 --> 00:32:26,919
and learning rules in gahanna visually

00:32:23,440 --> 00:32:34,480
but have them executed for potentially

00:32:26,919 --> 00:32:37,990
at least by other systems so well the

00:32:34,480 --> 00:32:40,870
only other things that were I'm working

00:32:37,990 --> 00:32:42,789
on right now is a table panel and that's

00:32:40,870 --> 00:32:45,429
been also the top-rated thing to to

00:32:42,789 --> 00:32:47,730
visualize just raw logs and data and

00:32:45,429 --> 00:32:52,320
we're all sort of trying to add more

00:32:47,730 --> 00:32:52,320
more visualizations like histograms and

00:32:52,950 --> 00:32:57,159
pie charts is something that people have

00:32:55,960 --> 00:32:58,419
been requesting for ages and

00:32:57,159 --> 00:33:03,159
they don't know that pie shots are

00:32:58,419 --> 00:33:06,669
really bad yeah don't you spice up yeah

00:33:03,159 --> 00:33:10,749
so if you have any questions please

00:33:06,669 --> 00:33:16,989
shoot we've got a lot of time for

00:33:10,749 --> 00:33:30,580
questions about 30 minutes oh so odd

00:33:16,989 --> 00:33:32,799
moment hello one question I have is that

00:33:30,580 --> 00:33:38,590
graphite has a lot of advanced features

00:33:32,799 --> 00:33:43,029
like deviations and all that sorry

00:33:38,590 --> 00:33:46,809
better graphite test a lot lot of

00:33:43,029 --> 00:33:48,309
features like for example halt winters

00:33:46,809 --> 00:33:49,749
forecasting and all that the other

00:33:48,309 --> 00:33:52,629
backings don't have that at the moment

00:33:49,749 --> 00:33:54,999
you plan on adding up on features to

00:33:52,629 --> 00:33:58,210
transform the data inside of graph graph

00:33:54,999 --> 00:34:02,919
on so yeah this is a very good question

00:33:58,210 --> 00:34:04,570
and so one of the things that graph it

00:34:02,919 --> 00:34:11,529
has is all these transformation

00:34:04,570 --> 00:34:14,440
functions like cold winters and I mean

00:34:11,529 --> 00:34:16,240
it has like 40 or 50 functions or more

00:34:14,440 --> 00:34:19,210
and that this is the thing that I love

00:34:16,240 --> 00:34:20,799
about graphite in it makes the metric so

00:34:19,210 --> 00:34:23,589
much more useful when you can transform

00:34:20,799 --> 00:34:24,789
it in these many ways and this is

00:34:23,589 --> 00:34:26,889
something that's really lacking in

00:34:24,789 --> 00:34:29,700
almost all the other times use databases

00:34:26,889 --> 00:34:31,960
they have very limited ways of

00:34:29,700 --> 00:34:33,700
transforming series and dividing them by

00:34:31,960 --> 00:34:36,490
the shadow calculating calculating

00:34:33,700 --> 00:34:39,520
percentages and really doing sort of

00:34:36,490 --> 00:34:41,500
advanced analytics so that's the me

00:34:39,520 --> 00:34:43,899
almost the main thing that I just love

00:34:41,500 --> 00:34:45,669
about graphite is that my metrics are

00:34:43,899 --> 00:34:49,059
more so much more useful when I have

00:34:45,669 --> 00:34:54,039
them in graphite compared to open ttb or

00:34:49,059 --> 00:34:57,760
in flux DB and one thing that I didn't

00:34:54,039 --> 00:34:59,770
show you is this concept of you can

00:34:57,760 --> 00:35:02,859
actually combine different data sources

00:34:59,770 --> 00:35:05,740
on the same graph so you can switch to a

00:35:02,859 --> 00:35:08,319
mixed data source which allows you to in

00:35:05,740 --> 00:35:10,450
this case there's a graphite query but I

00:35:08,319 --> 00:35:10,970
could actually add an influx DB query

00:35:10,450 --> 00:35:17,530
here

00:35:10,970 --> 00:35:21,200
well and have in flux DB and and

00:35:17,530 --> 00:35:26,599
graphite live in the same graph so an

00:35:21,200 --> 00:35:29,630
idea I have is to the reason there are

00:35:26,599 --> 00:35:32,840
letters for the queries is that for for

00:35:29,630 --> 00:35:34,520
graphite you can actually use do some

00:35:32,840 --> 00:35:37,070
complex set of queries you can do sore

00:35:34,520 --> 00:35:39,980
ass you can add functions that reference

00:35:37,070 --> 00:35:43,190
another query so you can do sort of as

00:35:39,980 --> 00:35:45,710
percent and then specify query a this is

00:35:43,190 --> 00:35:50,869
not something so this is not a graphic

00:35:45,710 --> 00:35:53,030
feature per se it's actually just a way

00:35:50,869 --> 00:35:56,630
to do build complex queries in graph ona

00:35:53,030 --> 00:35:59,480
grifoni will just replace the bracket a

00:35:56,630 --> 00:36:01,640
with the the textual representation of

00:35:59,480 --> 00:36:08,090
of corey a but before it senses to

00:36:01,640 --> 00:36:09,500
graphite so it's a sort of but the great

00:36:08,090 --> 00:36:12,980
thing about having the coil letters

00:36:09,500 --> 00:36:14,990
there there is that the idea have is to

00:36:12,980 --> 00:36:18,980
add functions to other data sources as

00:36:14,990 --> 00:36:23,109
well so if you had let's say an influx

00:36:18,980 --> 00:36:25,609
deep in flux DB query and you wanted to

00:36:23,109 --> 00:36:27,710
transform that somehow you could

00:36:25,609 --> 00:36:29,240
actually add some like a graph on a

00:36:27,710 --> 00:36:33,109
query that you'd like you could then

00:36:29,240 --> 00:36:37,160
sort of reference the core a and then

00:36:33,109 --> 00:36:42,890
sort of maybe scale scale if on a scale

00:36:37,160 --> 00:36:44,540
query a by one or something and this

00:36:42,890 --> 00:36:45,980
would be executed by a microphone

00:36:44,540 --> 00:36:47,390
aquaria back-end that could sort of

00:36:45,980 --> 00:36:49,339
quarry in flux DB and then two

00:36:47,390 --> 00:36:53,599
transformations on whatever data source

00:36:49,339 --> 00:36:55,040
your you see so like a medic query and

00:36:53,599 --> 00:36:58,970
this would also allow you to sort of

00:36:55,040 --> 00:37:03,250
combined so summarized data from one

00:36:58,970 --> 00:37:05,060
server from on graphite server on a

00:37:03,250 --> 00:37:06,619
summarized data from another graph I

00:37:05,060 --> 00:37:09,880
server or take different data sources

00:37:06,619 --> 00:37:12,680
and do calculations on them so that's

00:37:09,880 --> 00:37:15,619
sort of an idea I have for for how to

00:37:12,680 --> 00:37:19,580
sew to add add these functions to data

00:37:15,619 --> 00:37:20,869
sources that don't have them thank you

00:37:19,580 --> 00:37:23,030
that actually i'm sure the first

00:37:20,869 --> 00:37:24,800
question I have another yeah yeah we

00:37:23,030 --> 00:37:27,270
have time so yeah

00:37:24,800 --> 00:37:30,300
the second question is built on the

00:37:27,270 --> 00:37:32,700
first one for Holt winters it has

00:37:30,300 --> 00:37:35,010
functions so you can example predict for

00:37:32,700 --> 00:37:37,890
the future based on the previous seven

00:37:35,010 --> 00:37:42,030
days how might the next seven days look

00:37:37,890 --> 00:37:43,770
like is there any process to allow us to

00:37:42,030 --> 00:37:46,340
see the future inside of graph alma

00:37:43,770 --> 00:37:51,200
because now it's shows now yeah and

00:37:46,340 --> 00:38:04,590
backwards so there's no easy way I think

00:37:51,200 --> 00:38:09,300
so let's see if we can in it so let's

00:38:04,590 --> 00:38:14,730
see if we can so if I specify two plus

00:38:09,300 --> 00:38:21,420
five hours I think it should work so

00:38:14,730 --> 00:38:23,340
yeah you can look at you check it and

00:38:21,420 --> 00:38:26,190
there is a there's a bug as it says

00:38:23,340 --> 00:38:31,080
still lost 12 hours but that's fixed in

00:38:26,190 --> 00:38:33,080
the in monster so there's no a super

00:38:31,080 --> 00:38:36,030
intuitive waiver or so a quick way to

00:38:33,080 --> 00:38:38,910
but that's also coming it's a way to add

00:38:36,030 --> 00:38:41,160
these add custom ranges it's something I

00:38:38,910 --> 00:38:45,000
removed in Las release because I added

00:38:41,160 --> 00:38:50,220
all these new ranges but you can specify

00:38:45,000 --> 00:38:52,590
now and add like five hours or 10 hours

00:38:50,220 --> 00:38:57,180
if you want to look at 10 hours into the

00:38:52,590 --> 00:38:59,130
future this is something that is a for

00:38:57,180 --> 00:39:02,520
people who use kafana now and might not

00:38:59,130 --> 00:39:05,310
have upgraded to the latest release the

00:39:02,520 --> 00:39:09,240
latest release adds a bunch of new time

00:39:05,310 --> 00:39:14,220
ranges like today which is midnight to

00:39:09,240 --> 00:39:19,230
midnight and the day so far which is

00:39:14,220 --> 00:39:22,200
sort of midnight to now and this week

00:39:19,230 --> 00:39:24,060
week to date this month this year none

00:39:22,200 --> 00:39:27,870
are more complex ranges like yesterday

00:39:24,060 --> 00:39:29,250
the day before yesterday and this this

00:39:27,870 --> 00:39:32,790
day last week which is kind of

00:39:29,250 --> 00:39:36,770
interesting if you want to compare today

00:39:32,790 --> 00:39:36,770
with the same day last week so yeah

00:39:37,080 --> 00:39:43,490
any more questions thank you one moment

00:39:53,100 --> 00:40:00,460
hi this is not a question this is more

00:39:56,140 --> 00:40:02,940
plea um currently I'm a male user

00:40:00,460 --> 00:40:05,830
speaking mutt something like that and

00:40:02,940 --> 00:40:08,430
currently I can't use your discussion

00:40:05,830 --> 00:40:11,320
mailing list because there's no threat

00:40:08,430 --> 00:40:13,090
no II real email threats i just can't

00:40:11,320 --> 00:40:16,000
use it i don't want to use the website

00:40:13,090 --> 00:40:18,430
because uh I already have so many

00:40:16,000 --> 00:40:20,260
websites I have to go to and so I want

00:40:18,430 --> 00:40:23,200
to use my email client so please make

00:40:20,260 --> 00:40:24,910
this thing happen make it work somehow

00:40:23,200 --> 00:40:28,030
what's the problem with the mailing list

00:40:24,910 --> 00:40:30,040
ah the mail IDs got mixed up and so you

00:40:28,030 --> 00:40:38,350
can you don't have a real threat view

00:40:30,040 --> 00:40:49,660
okay for the discussions that's all any

00:40:38,350 --> 00:40:53,410
other question the moment okay you spoke

00:40:49,660 --> 00:40:56,740
about a snapshot function and I have a

00:40:53,410 --> 00:41:00,400
question about this topic and can I and

00:40:56,740 --> 00:41:03,130
you spoke about our API and can I use

00:41:00,400 --> 00:41:08,020
this feature of writing monthly

00:41:03,130 --> 00:41:10,450
or daily snapshots and can send it via

00:41:08,020 --> 00:41:15,130
email through a bash script or something

00:41:10,450 --> 00:41:21,369
like this is it a dynamically method for

00:41:15,130 --> 00:41:28,450
creating these snapshots so yeah if I

00:41:21,369 --> 00:41:32,230
look at the the snapshots have that

00:41:28,450 --> 00:41:36,390
captured all the visible data and will

00:41:32,230 --> 00:41:36,390
give you a read-only view of the data

00:41:36,660 --> 00:41:47,650
currently that you have to sort of use a

00:41:41,830 --> 00:41:50,320
browser to do that because the logic for

00:41:47,650 --> 00:41:52,300
how a snapshot is built is in the

00:41:50,320 --> 00:41:54,880
browser because I all the panels will

00:41:52,300 --> 00:41:56,680
save their visible data and it will

00:41:54,880 --> 00:41:58,900
create a dashboard with the data

00:41:56,680 --> 00:42:01,630
embedded into it and that will be saved

00:41:58,900 --> 00:42:04,119
so but you could if you want to sort of

00:42:01,630 --> 00:42:04,900
build monthlies sort of captured all the

00:42:04,119 --> 00:42:10,420
data of the

00:42:04,900 --> 00:42:13,240
dashboard let's say and an autumn and do

00:42:10,420 --> 00:42:16,300
this monthly and because the snapchat

00:42:13,240 --> 00:42:20,110
you get is locked in time so it can be

00:42:16,300 --> 00:42:24,580
saved forever n equal forever look the

00:42:20,110 --> 00:42:26,440
same so if I like I said before if you

00:42:24,580 --> 00:42:32,050
assume out you see that there is no data

00:42:26,440 --> 00:42:33,940
outside the grid arranged so you will

00:42:32,050 --> 00:42:36,400
have to do this automate this you have

00:42:33,940 --> 00:42:39,430
to write some browser automation that's

00:42:36,400 --> 00:42:41,380
because all the snap shutting itself

00:42:39,430 --> 00:42:43,210
needs to do be done in the browser

00:42:41,380 --> 00:42:47,460
because all the panel's needs to do

00:42:43,210 --> 00:42:50,770
their thing and capture the data so

00:42:47,460 --> 00:42:55,510
there's no yes pure consort terminal

00:42:50,770 --> 00:42:58,000
line or console command line program way

00:42:55,510 --> 00:43:00,790
to do this yes via HTTP API you need a

00:42:58,000 --> 00:43:03,130
browser but if you have a browser and

00:43:00,790 --> 00:43:06,040
some browser automation you could could

00:43:03,130 --> 00:43:09,970
automate it okay also the image

00:43:06,040 --> 00:43:12,070
rendering engine I can't dynamically

00:43:09,970 --> 00:43:15,820
fill the dates or something like this

00:43:12,070 --> 00:43:18,990
well yes yeah yeah for there for the

00:43:15,820 --> 00:43:22,570
image generation you can everything is

00:43:18,990 --> 00:43:26,770
specified in the URL so if i zoom into a

00:43:22,570 --> 00:43:31,060
specific sort of region here and want to

00:43:26,770 --> 00:43:33,940
generate an image for this everything is

00:43:31,060 --> 00:43:38,680
specified in the URL it so it specified

00:43:33,940 --> 00:43:42,190
the time range and there's a room how

00:43:38,680 --> 00:43:44,200
how big the image should be okay okay

00:43:42,190 --> 00:43:46,630
thank you and and the image is not

00:43:44,200 --> 00:43:50,650
created in the browser its generated on

00:43:46,630 --> 00:43:52,090
your yeah so this is this this this is

00:43:50,650 --> 00:43:54,850
actually something you can use from the

00:43:52,090 --> 00:43:56,860
command line or I mean it's a it's just

00:43:54,850 --> 00:44:03,460
an HTP call and you will get an image

00:43:56,860 --> 00:44:09,090
back okay thank you very much so we've

00:44:03,460 --> 00:44:09,090
still got a lot of time so okay

00:44:14,470 --> 00:44:23,090
hello one amendment to his question I

00:44:18,880 --> 00:44:26,060
already built a some kind of spray

00:44:23,090 --> 00:44:29,180
script that uses the RP to build

00:44:26,060 --> 00:44:36,200
actually a snapshot if this is something

00:44:29,180 --> 00:44:46,030
that would be worth spreading then I can

00:44:36,200 --> 00:44:48,830
I can I have a look if I can oh yeah

00:44:46,030 --> 00:44:53,560
send some that you can email or tweet it

00:44:48,830 --> 00:44:53,560
and I can spread the link as well okay

00:44:56,230 --> 00:45:10,430
okay hi Thomas here i'm using revit a

00:45:08,420 --> 00:45:11,900
lot but i'm one of those still telling

00:45:10,430 --> 00:45:15,350
people please if you do not want to

00:45:11,900 --> 00:45:17,000
waste time user DS they work and I'm you

00:45:15,350 --> 00:45:19,040
know one of those old-school people that

00:45:17,000 --> 00:45:23,000
want to get a lot of information out of

00:45:19,040 --> 00:45:24,770
the grass and one of the well the

00:45:23,000 --> 00:45:26,780
greatest problems I have if Griffin is

00:45:24,770 --> 00:45:28,340
like I have I have a lot of of

00:45:26,780 --> 00:45:31,940
information I have a lot of let's say

00:45:28,340 --> 00:45:35,810
let's make a cpu in one single buger

00:45:31,940 --> 00:45:40,400
after one similar cpu i have like 11-12

00:45:35,810 --> 00:45:43,610
data sources and i have 96 cpus on a

00:45:40,400 --> 00:45:45,500
single note and it's pretty hard to get

00:45:43,610 --> 00:45:50,420
multiple instances of the same thing on

00:45:45,500 --> 00:45:51,740
the dashboard so that's what one of the

00:45:50,420 --> 00:45:55,300
biggest problems are still have before

00:45:51,740 --> 00:45:58,490
now but what's the solution for you

00:45:55,300 --> 00:46:00,200
honestly I am so using our defense but

00:45:58,490 --> 00:46:03,080
what's what do they provide that the

00:46:00,200 --> 00:46:04,940
graph analyst and fried well it's just

00:46:03,080 --> 00:46:06,560
like if you used to P&P or something

00:46:04,940 --> 00:46:08,530
like that or even something old school

00:46:06,560 --> 00:46:11,480
like cacti you have a template you have

00:46:08,530 --> 00:46:14,750
90 cpu and just you see you see all of

00:46:11,480 --> 00:46:17,180
them that says and you can make them

00:46:14,750 --> 00:46:20,390
very small and you have a lot of time on

00:46:17,180 --> 00:46:22,370
a single screen so now you cannot buy me

00:46:20,390 --> 00:46:22,799
with a black dashboard with a few of the

00:46:22,370 --> 00:46:24,569
fence

00:46:22,799 --> 00:46:26,729
I did your phone is beautiful it's

00:46:24,569 --> 00:46:29,039
actually people love it it's looking

00:46:26,729 --> 00:46:30,630
very good with them it's hard for me to

00:46:29,039 --> 00:46:32,699
get more information on sing the bass

00:46:30,630 --> 00:46:35,309
you know so you want to be able to have

00:46:32,699 --> 00:46:37,709
very small graphs now it's like just a

00:46:35,309 --> 00:46:39,929
feature just allowing me to I can also

00:46:37,709 --> 00:46:43,859
scroll it's just if you would allow me

00:46:39,929 --> 00:46:46,679
to say well I have kind of a template

00:46:43,859 --> 00:46:48,390
work you know I have I need 12 data

00:46:46,679 --> 00:46:52,519
searches for singing sepia graph and I

00:46:48,390 --> 00:46:54,599
want to see all my 96 views of this note

00:46:52,519 --> 00:46:58,109
people used to do something like this

00:46:54,599 --> 00:46:59,849
with javascript in Griffin III but but

00:46:58,109 --> 00:47:01,559
something like the templated where you

00:46:59,849 --> 00:47:06,269
can sort of select which servers you

00:47:01,559 --> 00:47:07,469
want to show and the course yeah yes but

00:47:06,269 --> 00:47:09,239
the problem is and I have all those

00:47:07,469 --> 00:47:10,829
graphs all those lines in a single graph

00:47:09,239 --> 00:47:13,109
and it does no longer help me I do not

00:47:10,829 --> 00:47:16,289
see that the first CPU is burning on

00:47:13,109 --> 00:47:18,900
soft air cues and euros or not but do

00:47:16,289 --> 00:47:21,839
you apply so we can apply sorta series

00:47:18,900 --> 00:47:23,670
by Max or I mean you can so you get I

00:47:21,839 --> 00:47:26,579
still want to see distinct graphs you

00:47:23,670 --> 00:47:28,829
know it's no problem if you with a lot

00:47:26,579 --> 00:47:30,630
of space i can scroll it's just I want

00:47:28,829 --> 00:47:33,599
to have a chance to say I want to have a

00:47:30,630 --> 00:47:36,660
cpu graph but four of them distinct

00:47:33,599 --> 00:47:37,859
graphs and same thing from memory and it

00:47:36,660 --> 00:47:39,539
doesn't help me to have all the data

00:47:37,859 --> 00:47:41,910
sources for just one information like

00:47:39,539 --> 00:47:46,789
memory or CPU in a single graph no but

00:47:41,910 --> 00:47:48,929
you can repeat for each selected

00:47:46,789 --> 00:47:52,920
selected variable you can repeat the

00:47:48,929 --> 00:47:55,799
graph it cool he'll buy by creating a

00:47:52,920 --> 00:47:57,479
variable so you can sort of specify for

00:47:55,799 --> 00:47:58,650
all so you can get a variable for all

00:47:57,479 --> 00:48:01,679
your servers and then you can select

00:47:58,650 --> 00:48:04,619
which one you want to show any angriff

00:48:01,679 --> 00:48:07,109
owner will repeat that panel so you can

00:48:04,619 --> 00:48:09,209
specify that a panel should be repeated

00:48:07,109 --> 00:48:12,029
for each variable where for each value

00:48:09,209 --> 00:48:14,869
in a variable so this is an ear

00:48:12,029 --> 00:48:17,609
something that was introduced into one

00:48:14,869 --> 00:48:21,269
that you can actually repeat the either

00:48:17,609 --> 00:48:25,709
a row or a panel for each value inn in a

00:48:21,269 --> 00:48:28,529
metric okay and if i want to have

00:48:25,709 --> 00:48:31,259
multiple you know rows in each of them

00:48:28,529 --> 00:48:34,259
this is possible yes so this is

00:48:31,259 --> 00:48:36,059
repeating this panel for each value so

00:48:34,259 --> 00:48:38,339
you could also instead of repeating

00:48:36,059 --> 00:48:40,229
you can't combine repeating a panel and

00:48:38,339 --> 00:48:43,229
repeating a row if you want sort of have

00:48:40,229 --> 00:48:46,259
a if you want to have a CPU memory and

00:48:43,229 --> 00:48:49,049
i/o and have that repeated for each sort

00:48:46,259 --> 00:48:51,959
of server so once in graph I would like

00:48:49,049 --> 00:48:55,799
to see the the memory used for let's say

00:48:51,959 --> 00:48:58,430
well cash and we use memory or CPU

00:48:55,799 --> 00:49:01,619
there's like soft Eric Hughes there is

00:48:58,430 --> 00:49:04,049
CPU spent in userspace ons and so on so

00:49:01,619 --> 00:49:08,160
I have a lot of lines in one single

00:49:04,049 --> 00:49:09,900
graph and I want to repeat that kind of

00:49:08,160 --> 00:49:12,150
graph just the single graph doesn't help

00:49:09,900 --> 00:49:15,059
me no no of course you can build you can

00:49:12,150 --> 00:49:18,479
repeat anything that you can build okay

00:49:15,059 --> 00:49:20,189
cool and of course you can if you really

00:49:18,479 --> 00:49:21,749
have a sort of specific use cases you

00:49:20,189 --> 00:49:23,369
can build this scripted dashboards we

00:49:21,749 --> 00:49:31,019
actually build the dashboard dynamically

00:49:23,369 --> 00:49:35,130
which is more advanced there was

00:49:31,019 --> 00:49:41,449
something i but i forgot idea good

00:49:35,130 --> 00:49:41,449
question though yeah anymore thank you

00:49:41,989 --> 00:49:48,029
okay so um no more questioned and maybe

00:49:46,769 --> 00:49:50,039
you can say something about

00:49:48,029 --> 00:49:53,910
authorization and permissions in graph

00:49:50,039 --> 00:49:57,209
on anit automation authorization

00:49:53,910 --> 00:50:02,130
authorization yes yeah I mean it's a

00:49:57,209 --> 00:50:04,229
it's a web app you can has a built-in

00:50:02,130 --> 00:50:07,170
database that where you can have users

00:50:04,229 --> 00:50:08,609
and it's also multi-talented so you can

00:50:07,170 --> 00:50:14,509
actually have multiple organizations

00:50:08,609 --> 00:50:14,509
that used to sing kafana instance so

00:50:15,079 --> 00:50:22,979
this is using the light thing so you can

00:50:20,249 --> 00:50:24,359
have in this case I have multiple

00:50:22,979 --> 00:50:26,189
organizations that you can switch

00:50:24,359 --> 00:50:30,959
between and you define these data

00:50:26,189 --> 00:50:33,150
sources and this is sort of everything

00:50:30,959 --> 00:50:36,449
you can do in your phone I can do via

00:50:33,150 --> 00:50:41,130
HTTP API so you can add dashboard data

00:50:36,449 --> 00:50:48,119
sources and yeah everything the UI is

00:50:41,130 --> 00:50:49,950
all only using the API so yeah and for

00:50:48,119 --> 00:50:52,859
the authentication you can also

00:50:49,950 --> 00:50:55,920
sort of use OAuth schemes like log in

00:50:52,859 --> 00:51:01,589
with google or with github but you can

00:50:55,920 --> 00:51:05,250
also use ldap Aleppo authentication you

00:51:01,589 --> 00:51:08,010
can use an OAuth proxy so if you want to

00:51:05,250 --> 00:51:09,839
have set up something sort of handled

00:51:08,010 --> 00:51:12,980
authentication outside cathanna like in

00:51:09,839 --> 00:51:17,520
a posh where you have some maybe some

00:51:12,980 --> 00:51:19,500
authentication modules you can just send

00:51:17,520 --> 00:51:23,430
go for now some authentication header

00:51:19,500 --> 00:51:41,820
and it will trust that header and and

00:51:23,430 --> 00:51:44,010
sign you in okay thank you I have a

00:51:41,820 --> 00:51:47,190
question is it possible tool you use an

00:51:44,010 --> 00:51:48,930
hour rrd files as a data source for

00:51:47,190 --> 00:51:51,390
example you can run our addy tool as a

00:51:48,930 --> 00:51:53,640
server and when you started you can

00:51:51,390 --> 00:51:55,859
navigate through and is it possible to

00:51:53,640 --> 00:51:58,680
use this as a back-end or is it only

00:51:55,859 --> 00:52:03,569
possible to have a real sequel server

00:51:58,680 --> 00:52:06,420
SQL server there is no support for SQL

00:52:03,569 --> 00:52:09,030
servers yeah I mean simply would you

00:52:06,420 --> 00:52:11,130
want you wrote a lot of SQL statements

00:52:09,030 --> 00:52:14,760
select from something exists yeah that

00:52:11,130 --> 00:52:18,810
was in flux DB it looks like is it a

00:52:14,760 --> 00:52:22,170
foxy me look like a sequel but it

00:52:18,810 --> 00:52:24,450
doesn't ever yeah there is no built-in

00:52:22,170 --> 00:52:26,730
support for our d tools I think there

00:52:24,450 --> 00:52:30,210
are sort of some tools out there cancel

00:52:26,730 --> 00:52:32,520
that have a graphite API over already or

00:52:30,210 --> 00:52:34,380
they have some plugins support for

00:52:32,520 --> 00:52:36,720
graphite that's graph i can read from rd

00:52:34,380 --> 00:52:42,200
files so that could be a solution i

00:52:36,720 --> 00:52:45,030
think and because there's no sort of a

00:52:42,200 --> 00:52:46,980
data source that i know of or plugin

00:52:45,030 --> 00:52:49,950
data source that sort of can speak

00:52:46,980 --> 00:52:52,310
directly with the already too okay

00:52:49,950 --> 00:52:52,310
thanks

00:52:53,830 --> 00:52:57,730
can you one more question

00:53:03,950 --> 00:53:09,540
hi and sorry it's no real response and

00:53:07,590 --> 00:53:12,690
all we question might assume or response

00:53:09,540 --> 00:53:16,950
to the form of questions to revive the

00:53:12,690 --> 00:53:20,430
rd question maybe you're aiming to

00:53:16,950 --> 00:53:25,200
replacing or using already from nagios

00:53:20,430 --> 00:53:27,320
and if you're welcome to come to my talk

00:53:25,200 --> 00:53:30,330
tomorrow morning I do something like

00:53:27,320 --> 00:53:33,720
replacing already with influx to be and

00:53:30,330 --> 00:53:38,310
grow fauna and on the same hand we have

00:53:33,720 --> 00:53:40,140
some reporting or reporting for own the

00:53:38,310 --> 00:53:44,160
reporting integrated reporting from

00:53:40,140 --> 00:53:47,609
truck so if you are interested in report

00:53:44,160 --> 00:53:51,119
since rockstar you could get Griffin

00:53:47,609 --> 00:53:53,369
estar chronographs and track reports so

00:53:51,119 --> 00:53:55,950
if you're familiar to that already it

00:53:53,369 --> 00:54:00,800
feels the same like being peaceful Nagas

00:53:55,950 --> 00:54:07,950
yeah so maybe yep two guys it helps you

00:54:00,800 --> 00:54:11,369
okay hi question about the permissions

00:54:07,950 --> 00:54:13,800
it's possible for me to configure

00:54:11,369 --> 00:54:15,990
different permissions for example for my

00:54:13,800 --> 00:54:19,160
customers to provide access and to

00:54:15,990 --> 00:54:23,089
restrict access to just part of the

00:54:19,160 --> 00:54:26,369
dashboards or parts of the graph thanks

00:54:23,089 --> 00:54:31,140
yeah well currently there are

00:54:26,369 --> 00:54:34,440
permissions for users so a user can can

00:54:31,140 --> 00:54:40,609
be a viewer and editor or a read-only

00:54:34,440 --> 00:54:42,990
editor but the main problem is that a

00:54:40,609 --> 00:54:45,869
the data sources themselves like

00:54:42,990 --> 00:54:47,820
graphite in plus DB or open TCB they

00:54:45,869 --> 00:54:50,400
don't have any concept of permissions on

00:54:47,820 --> 00:54:55,050
a parametric basis so if you have if you

00:54:50,400 --> 00:54:58,320
add a user as a viewer for graphite for

00:54:55,050 --> 00:55:01,140
example that viewer will be able to view

00:54:58,320 --> 00:55:04,830
all metrics so even though you can maybe

00:55:01,140 --> 00:55:08,310
segment sort of they will still be able

00:55:04,830 --> 00:55:09,960
to sort at least if they know HTTP they

00:55:08,310 --> 00:55:11,790
all sort of look at all the queries that

00:55:09,960 --> 00:55:13,260
are going they can change the queries so

00:55:11,790 --> 00:55:16,920
graph honor that doesn't sort of

00:55:13,260 --> 00:55:17,790
validate sort of that did this query it

00:55:16,920 --> 00:55:22,200
will provide

00:55:17,790 --> 00:55:25,260
security for if you use the data source

00:55:22,200 --> 00:55:27,600
proxy method so the data sources are

00:55:25,260 --> 00:55:29,310
actually going through go fauna the data

00:55:27,600 --> 00:55:31,590
queries are going through the phone it

00:55:29,310 --> 00:55:35,130
will check that the user have access to

00:55:31,590 --> 00:55:37,800
data source but there's no parametric or

00:55:35,130 --> 00:55:40,830
per query security so for that you have

00:55:37,800 --> 00:55:43,800
to actually use a data source or segment

00:55:40,830 --> 00:55:46,590
the data sources / and use different

00:55:43,800 --> 00:55:48,030
organizations so there's this constable

00:55:46,590 --> 00:55:51,300
of an organization in your phone line

00:55:48,030 --> 00:55:53,640
that sort of an organization owns the

00:55:51,300 --> 00:55:55,380
data sources and the dashboards so you

00:55:53,640 --> 00:55:57,510
have to create multiple data sources and

00:55:55,380 --> 00:56:01,950
multiple organizations and the data

00:55:57,510 --> 00:56:05,570
sources needs to be isolated but you can

00:56:01,950 --> 00:56:07,710
build if you have a data source that is

00:56:05,570 --> 00:56:09,600
moved attendant that you can both the

00:56:07,710 --> 00:56:13,530
move to tenor that's sort of system

00:56:09,600 --> 00:56:27,180
around go fauna but this is a problem

00:56:13,530 --> 00:56:29,280
that many are having ok one more yes can

00:56:27,180 --> 00:56:31,890
you say something about the sizing of

00:56:29,280 --> 00:56:35,010
krav on a server how many metrics can

00:56:31,890 --> 00:56:38,490
handle how many users can connect and

00:56:35,010 --> 00:56:42,860
something like that yeah so um refine

00:56:38,490 --> 00:56:46,590
itself should scale for the way I mean

00:56:42,860 --> 00:56:49,620
since it only proxy if you use the data

00:56:46,590 --> 00:56:51,990
source the data proxying so the the load

00:56:49,620 --> 00:56:55,740
on Griffin out the back end should be

00:56:51,990 --> 00:56:59,040
very very low so I mean there is no

00:56:55,740 --> 00:57:02,330
heavy computation going on in the in the

00:56:59,040 --> 00:57:06,090
back and it's just hosting the dashboard

00:57:02,330 --> 00:57:10,080
and the UI and HTML and JavaScript for

00:57:06,090 --> 00:57:12,330
DUI so the main scalability issue is

00:57:10,080 --> 00:57:17,250
around the data sources or the time

00:57:12,330 --> 00:57:19,740
series data base and graphite which is

00:57:17,250 --> 00:57:22,520
my favorite there has some challenges in

00:57:19,740 --> 00:57:25,590
scalability when you cut when you reach

00:57:22,520 --> 00:57:28,110
maybe two hundred five hundred thousand

00:57:25,590 --> 00:57:29,940
metrics per minute or something people

00:57:28,110 --> 00:57:30,980
then you start struggling with a single

00:57:29,940 --> 00:57:33,320
server you have to scale

00:57:30,980 --> 00:57:39,740
out to multiple servers and graph I

00:57:33,320 --> 00:57:43,040
cannot have sort of be it's I mean large

00:57:39,740 --> 00:57:44,960
organizations like Etsy github there are

00:57:43,040 --> 00:57:48,050
tons of big companies that scale

00:57:44,960 --> 00:57:51,530
graphite to two huge volumes but it

00:57:48,050 --> 00:57:55,190
requires some complicated setups but

00:57:51,530 --> 00:57:56,570
it's definitely possible but the end the

00:57:55,190 --> 00:58:00,490
scalability on graphite side is mostly

00:57:56,570 --> 00:58:03,320
on the right side not only read side but

00:58:00,490 --> 00:58:06,170
what I will probably be added to graph

00:58:03,320 --> 00:58:08,210
on in the future is its ways to see

00:58:06,170 --> 00:58:11,420
which dashboards in which panels maybe

00:58:08,210 --> 00:58:14,240
is causing a load because what would

00:58:11,420 --> 00:58:15,910
cook which which can sort of happen is

00:58:14,240 --> 00:58:18,109
that someone builds a very expensive

00:58:15,910 --> 00:58:21,109
metric query that sort of queries a

00:58:18,109 --> 00:58:23,540
thousand series or more and have that on

00:58:21,109 --> 00:58:27,290
a high refresh rate and some some TV and

00:58:23,540 --> 00:58:30,080
so hunting that down who who who who has

00:58:27,290 --> 00:58:32,690
that dashboard and who built it and sort

00:58:30,080 --> 00:58:36,590
of getting it to sort of change can be

00:58:32,690 --> 00:58:38,090
through and would be cool to have graph

00:58:36,590 --> 00:58:40,760
on a sort of time that and make it

00:58:38,090 --> 00:58:46,300
easier to through identify which is the

00:58:40,760 --> 00:58:48,740
which dashboard is the culprit so yeah

00:58:46,300 --> 00:58:53,060
but a microphone itself I haven't had

00:58:48,740 --> 00:58:56,030
anyone so the only reason to run to

00:58:53,060 --> 00:59:02,060
graph on our servers is for Cyril high

00:58:56,030 --> 00:59:04,970
availability and not scalability and but

00:59:02,060 --> 00:59:07,220
but a graph on itself when you stole it

00:59:04,970 --> 00:59:08,869
has very it has no dependencies you can

00:59:07,220 --> 00:59:10,280
sort of when you start when you download

00:59:08,869 --> 00:59:13,400
your phone and run it it will by default

00:59:10,280 --> 00:59:16,970
use a sequel light database so embedded

00:59:13,400 --> 00:59:19,550
database that's just sort of to have

00:59:16,970 --> 00:59:22,850
that serial dependency easy to try try

00:59:19,550 --> 00:59:24,350
experience but it also supports my

00:59:22,850 --> 00:59:28,609
sequel and plus quests if you want to

00:59:24,350 --> 00:59:30,200
have sort of some more more this video

00:59:28,609 --> 00:59:31,700
storage and if you want to especially if

00:59:30,200 --> 00:59:36,190
you want to run graph on a scale

00:59:31,700 --> 00:59:36,190
scalable story thank you

00:59:36,480 --> 00:59:44,670
and one last question hi you showed how

00:59:42,630 --> 00:59:46,140
to use variables inside of the airport

00:59:44,670 --> 00:59:48,540
that's a great feature but is it

00:59:46,140 --> 00:59:51,090
possible to generate a new dashboard

00:59:48,540 --> 00:59:53,460
let's say for every microservice Phi B

00:59:51,090 --> 00:59:59,460
new Microsoft's automatically standard

00:59:53,460 --> 01:00:01,920
dashboard for cpu usage etc and they had

00:59:59,460 --> 01:00:03,960
a in an old version of graph and i had

01:00:01,920 --> 01:00:07,530
an example of a scripted dashboard that

01:00:03,960 --> 01:00:09,450
sort of saved that generated a bunch of

01:00:07,530 --> 01:00:11,369
dashboards and then save them but

01:00:09,450 --> 01:00:14,160
currently there's no way to in a

01:00:11,369 --> 01:00:18,990
template a dashboard so what the only

01:00:14,160 --> 01:00:21,930
way to do it would be to sort of what

01:00:18,990 --> 01:00:24,090
Wi-Fi seem to be slow now don't wait it

01:00:21,930 --> 01:00:26,580
would be to save I mean manually say

01:00:24,090 --> 01:00:29,340
instances so go I'm not sure if I

01:00:26,580 --> 01:00:31,320
understood the question by so you might

01:00:29,340 --> 01:00:32,700
maybe create a variable with a bunch of

01:00:31,320 --> 01:00:36,270
values you want to create different

01:00:32,700 --> 01:00:37,980
dashboards which we release a new

01:00:36,270 --> 01:00:40,260
application and want to have a standard

01:00:37,980 --> 01:00:42,930
dashboard for the developers to have a

01:00:40,260 --> 01:00:45,810
look at okay okay acha manual creation

01:00:42,930 --> 01:00:50,940
so more like sort of a templated

01:00:45,810 --> 01:00:53,640
dashboard that is a can import and fill

01:00:50,940 --> 01:00:56,119
in some values and it will be through so

01:00:53,640 --> 01:00:58,380
this isn't really one of the questions I

01:00:56,119 --> 01:01:00,810
good to end on because one of the things

01:00:58,380 --> 01:01:04,080
that we want to build is sort of a

01:01:00,810 --> 01:01:07,080
dashboard repository site like sort of

01:01:04,080 --> 01:01:11,550
docker hub bore so where people can

01:01:07,080 --> 01:01:14,010
upload sort of template a dashboard so

01:01:11,550 --> 01:01:17,070
if you're just installed Cassandra

01:01:14,010 --> 01:01:19,770
already sore MongoDB and you want you

01:01:17,070 --> 01:01:21,540
have collecti and you have influx TV or

01:01:19,770 --> 01:01:24,750
we have graphite there already made

01:01:21,540 --> 01:01:28,619
dashboard or can play the dashboards

01:01:24,750 --> 01:01:30,180
that so that that showcase so that the

01:01:28,619 --> 01:01:33,390
the most important metrics for that

01:01:30,180 --> 01:01:36,420
infrastructure or that application is

01:01:33,390 --> 01:01:39,030
that but what people usually usually do

01:01:36,420 --> 01:01:40,440
now is invest a lot of time in building

01:01:39,030 --> 01:01:42,030
these dashboards and figuring out what's

01:01:40,440 --> 01:01:43,830
the most important metrics do you have a

01:01:42,030 --> 01:01:45,810
community site where people can share

01:01:43,830 --> 01:01:47,040
dashboard and have that integrating

01:01:45,810 --> 01:01:49,440
integral foreigner to make it easy to

01:01:47,040 --> 01:01:50,040
share and also maybe have a way for

01:01:49,440 --> 01:01:52,200
companies to

01:01:50,040 --> 01:01:54,600
to create those themselves and share

01:01:52,200 --> 01:01:56,040
them internally so yeah that that's

01:01:54,600 --> 01:01:57,300
something we are looking to build a sort

01:01:56,040 --> 01:02:03,210
of a graph on neural Nets sort of

01:01:57,300 --> 01:02:06,080
repository for dashboards okay thank you

01:02:03,210 --> 01:02:06,080

YouTube URL: https://www.youtube.com/watch?v=2MOu6IrCns4


