Title: OSMC 2015: collectdÂ´s threshold Plugin and Icinga - Florian Forster
Publication date: 2015-11-27
Playlist: OSMC 2015 | Open Source Monitoring Conference
Description: 
	Capacity planning and monitoring both use system and application performance data. Using the data sampled by collectd at a high frequency allows system engineers to define alerts with short windows while reducing overall system load.
This talk will give a brief introduction to collectd and its "threshold" plugin, including the concepts and configuration involved. It will then explore the different possibilities to combine collectd with Icinga / Nagios and discuss pro and contra of each approach.
Captions: 
	00:00:09,019 --> 00:00:13,849
next talk is from Florian foster and

00:00:11,539 --> 00:00:17,150
he's talking about the collecti

00:00:13,849 --> 00:00:19,789
threshold plugin Andy singer that's

00:00:17,150 --> 00:00:25,070
right welcome everyone thank you for

00:00:19,789 --> 00:00:26,689
coming to my talk today ah yes I've

00:00:25,070 --> 00:00:28,460
already been introduced my name is for

00:00:26,689 --> 00:00:31,160
enforcer many people know me by my

00:00:28,460 --> 00:00:33,350
nickname octo I've been doing

00:00:31,160 --> 00:00:35,780
open-source work if they since about two

00:00:33,350 --> 00:00:40,160
thousand one hour and I started their

00:00:35,780 --> 00:00:43,280
ecology project in 2005 I'm going to

00:00:40,160 --> 00:00:45,620
talk today about a very very brief

00:00:43,280 --> 00:00:47,180
introduction about Cody I just assumed

00:00:45,620 --> 00:00:50,030
that people were interested in the

00:00:47,180 --> 00:00:53,270
threshold plugin in particular I know

00:00:50,030 --> 00:00:57,170
what the demons doing roughly and then

00:00:53,270 --> 00:00:59,540
I'm going to talk about a not that

00:00:57,170 --> 00:01:03,950
well-known kind of a stepchild of

00:00:59,540 --> 00:01:06,619
collecti it's good enough for some use

00:01:03,950 --> 00:01:08,180
cases but i will point to more

00:01:06,619 --> 00:01:13,340
sophisticated solutions where that is

00:01:08,180 --> 00:01:16,429
appropriate these reptiles are vessels

00:01:13,340 --> 00:01:21,289
I'm kind of hearing myself now in

00:01:16,429 --> 00:01:25,029
alerting so with that let's dive into

00:01:21,289 --> 00:01:27,259
colicky colleague d is a demon that

00:01:25,029 --> 00:01:31,279
collects system and application level

00:01:27,259 --> 00:01:33,350
metrics it has facilities to kind of

00:01:31,279 --> 00:01:36,799
change these metrics mangle them in a

00:01:33,350 --> 00:01:40,099
way and then transport them to a central

00:01:36,799 --> 00:01:42,799
server and at the end of this process

00:01:40,099 --> 00:01:45,649
storage somewhere it doesn't usually

00:01:42,799 --> 00:01:48,109
read metrics from a database and do

00:01:45,649 --> 00:01:51,740
stuff with it that is left to other

00:01:48,109 --> 00:01:54,529
tools I just was in the other room at

00:01:51,740 --> 00:01:56,869
the Alex tag thought so Alex tag is

00:01:54,529 --> 00:02:00,380
usually a good candidate for this sort

00:01:56,869 --> 00:02:04,249
of stuff other options are graphite and

00:02:00,380 --> 00:02:07,609
in Flex be and so on so far it's open

00:02:04,249 --> 00:02:10,280
source the vast majority by now is a

00:02:07,609 --> 00:02:12,800
mighty licensed and the rest is still

00:02:10,280 --> 00:02:15,860
GPL license we're kind of in a license

00:02:12,800 --> 00:02:20,270
which that I doubt we'll ever complete

00:02:15,860 --> 00:02:22,130
completely but it's open source it is

00:02:20,270 --> 00:02:26,090
platform independent

00:02:22,130 --> 00:02:29,870
in the way that it tries to stick with

00:02:26,090 --> 00:02:31,820
POSIX for the core demon and only dive

00:02:29,870 --> 00:02:33,560
into operating system specific stuff

00:02:31,820 --> 00:02:37,240
where that's absolutely necessary to get

00:02:33,560 --> 00:02:40,250
operating system metrics it's not

00:02:37,240 --> 00:02:41,960
platform independent in the way that it

00:02:40,250 --> 00:02:45,040
would run on windows there's a

00:02:41,960 --> 00:02:47,530
commercial product that can do this

00:02:45,040 --> 00:02:54,110
colleague itself runs on plastics

00:02:47,530 --> 00:02:59,150
systems so dinner hilarious bsd AIX are

00:02:54,110 --> 00:03:02,810
all supported and work great colleague

00:02:59,150 --> 00:03:05,060
uses an each and based approach to to

00:03:02,810 --> 00:03:07,000
monitoring meaning that call it d is

00:03:05,060 --> 00:03:09,770
supposed to run on every single machine

00:03:07,000 --> 00:03:11,840
it's collecting metrics locally and then

00:03:09,770 --> 00:03:15,170
send them off to a centralized service

00:03:11,840 --> 00:03:18,640
if that is desired it doesn't have to

00:03:15,170 --> 00:03:22,130
but that's the most common common set up

00:03:18,640 --> 00:03:24,980
it has a plug-in infrastructure so that

00:03:22,130 --> 00:03:28,010
the core demon itself is very small very

00:03:24,980 --> 00:03:30,770
portable very lightweight and all the

00:03:28,010 --> 00:03:32,720
heavy lifting is done in plugins and the

00:03:30,770 --> 00:03:34,850
metrics you get and the performance and

00:03:32,720 --> 00:03:36,800
the behavior of the demon very much

00:03:34,850 --> 00:03:40,760
depends on the plugins you load and how

00:03:36,800 --> 00:03:43,100
you configure these plugins you can

00:03:40,760 --> 00:03:45,590
write your own plugins in a variety of

00:03:43,100 --> 00:03:48,530
languages the dimion sell for certain

00:03:45,590 --> 00:03:50,840
and see most of the plugins that come

00:03:48,530 --> 00:03:52,459
with the demon are written in c you

00:03:50,840 --> 00:03:55,640
don't have to write see if you don't

00:03:52,459 --> 00:03:57,140
like writing C and I assume that there

00:03:55,640 --> 00:04:00,110
are many segments in the audience

00:03:57,140 --> 00:04:02,720
disappointments tend to prefer scripting

00:04:00,110 --> 00:04:05,480
languages we have language bindings for

00:04:02,720 --> 00:04:09,370
parole tighten in Java if you want to

00:04:05,480 --> 00:04:09,370
call that a scripting language and I'm

00:04:10,209 --> 00:04:16,609
another huge kind of Java but um it has

00:04:14,510 --> 00:04:18,799
its uses and I'm currently in the

00:04:16,609 --> 00:04:22,730
process of implementing support for go

00:04:18,799 --> 00:04:24,650
so that you can compile go code and load

00:04:22,730 --> 00:04:28,400
that is he shared object natively

00:04:24,650 --> 00:04:31,280
intercalate d you can also execute shell

00:04:28,400 --> 00:04:35,129
scripts or any other executable binary

00:04:31,280 --> 00:04:37,949
that you might have via the exit plugin

00:04:35,129 --> 00:04:40,139
and that will then do whatever you

00:04:37,949 --> 00:04:42,569
wanted to do and we push back a very

00:04:40,139 --> 00:04:48,899
very simple line based protocol to the

00:04:42,569 --> 00:04:51,929
demon right now quality has close to 100

00:04:48,899 --> 00:04:55,319
read plugins that read everything from

00:04:51,929 --> 00:04:59,459
your garden-variety system metrics CPU

00:04:55,319 --> 00:05:04,789
memory disk load you name it over

00:04:59,459 --> 00:05:09,719
application metrics Apache my sequel

00:05:04,789 --> 00:05:13,259
zookeeper huge to of applications and

00:05:09,719 --> 00:05:16,379
then there the the other category weird

00:05:13,259 --> 00:05:20,779
one offs very generic plugins like the

00:05:16,379 --> 00:05:24,499
SNMP plugins interesting hardware

00:05:20,779 --> 00:05:29,729
communication plugins such as MQTT

00:05:24,499 --> 00:05:33,989
influence of us on the other hand their

00:05:29,729 --> 00:05:36,379
output plugins are that right data to

00:05:33,989 --> 00:05:39,509
somewhere again MQTT can be used to

00:05:36,379 --> 00:05:42,749
reach values from one host and then

00:05:39,509 --> 00:05:44,339
write it to another host more

00:05:42,749 --> 00:05:47,069
traditional output plugins would be our

00:05:44,339 --> 00:05:48,869
ified in our d tool writing to graphite

00:05:47,069 --> 00:05:52,409
in our digital respectively reman

00:05:48,869 --> 00:05:55,979
MongoDB at the HCP one is quite

00:05:52,409 --> 00:05:58,349
interesting down here because it's used

00:05:55,979 --> 00:06:01,499
by many of these third-party providers

00:05:58,349 --> 00:06:03,300
to provide metric storage for you so

00:06:01,499 --> 00:06:05,999
they provide an heb endpoint use and

00:06:03,300 --> 00:06:07,919
post requests to it and they do their

00:06:05,999 --> 00:06:12,169
magic and create graphs for you what not

00:06:07,919 --> 00:06:15,779
so that that has seen a lot of fluff

00:06:12,169 --> 00:06:19,379
this is a very very bare-bones simple

00:06:15,779 --> 00:06:22,079
configuration for colleague d on the

00:06:19,379 --> 00:06:25,199
left hand side you see two input plugins

00:06:22,079 --> 00:06:27,899
being loaded or theta actually sorry the

00:06:25,199 --> 00:06:32,129
CPU and memory plugins which don't need

00:06:27,899 --> 00:06:34,740
any additional of configuration and the

00:06:32,129 --> 00:06:36,929
DF plug-in which reads the amount of

00:06:34,740 --> 00:06:39,269
free and used disk space on one

00:06:36,929 --> 00:06:42,389
partitions on the right hand side we see

00:06:39,269 --> 00:06:45,719
an output plugin I've chosen their

00:06:42,389 --> 00:06:49,669
network plugin in this case which can

00:06:45,719 --> 00:06:49,669
send data over the network

00:06:50,039 --> 00:06:58,360
it's using a binary protocol on UDP it's

00:06:55,210 --> 00:07:03,250
quite efficient it's quite small packets

00:06:58,360 --> 00:07:06,069
hold a lot of data and there is a number

00:07:03,250 --> 00:07:10,240
of applications that implement support

00:07:06,069 --> 00:07:15,129
for this protocol one of them is in flux

00:07:10,240 --> 00:07:17,379
to be and there's a tag tomorrow at

00:07:15,129 --> 00:07:20,680
nine-thirty in this room that we'll talk

00:07:17,379 --> 00:07:23,169
about in flux being Ravana and the other

00:07:20,680 --> 00:07:26,050
one would be prometheus there's a lot

00:07:23,169 --> 00:07:28,720
later tomorrow that will talk about

00:07:26,050 --> 00:07:32,289
prometheus so both of these can ingest

00:07:28,720 --> 00:07:34,690
this network protocol and do more stuff

00:07:32,289 --> 00:07:39,669
with it and of course quality itself

00:07:34,690 --> 00:07:43,169
also can use the network plugin to treat

00:07:39,669 --> 00:07:47,860
values to form arbitrarily complex

00:07:43,169 --> 00:07:50,050
hierarchies so that's all I have on

00:07:47,860 --> 00:07:51,610
colleague d itself as I said a very

00:07:50,050 --> 00:07:54,810
brief introduction are there any

00:07:51,610 --> 00:07:54,810
questions to this point

00:08:01,229 --> 00:08:09,520
alright and let's talk about the

00:08:04,530 --> 00:08:12,310
threshold the thresholds and colleague

00:08:09,520 --> 00:08:14,229
dr implemented as a separate plugin as I

00:08:12,310 --> 00:08:16,840
said the vast amount of the heavy

00:08:14,229 --> 00:08:18,970
lifting is done in plugins the

00:08:16,840 --> 00:08:20,830
thresholds used to be implemented right

00:08:18,970 --> 00:08:22,919
in the core demon and eventually we

00:08:20,830 --> 00:08:25,780
pulled them out into a separate plug-in

00:08:22,919 --> 00:08:27,729
because we felt that the core demon

00:08:25,780 --> 00:08:30,070
should focus on what it's doing best

00:08:27,729 --> 00:08:36,700
which is collecting metrics and not

00:08:30,070 --> 00:08:39,279
doing doing special checking when when

00:08:36,700 --> 00:08:41,260
it determines based on these thresholds

00:08:39,279 --> 00:08:44,350
that's something noteworthy is happening

00:08:41,260 --> 00:08:46,810
this threshold plugin is credit rating

00:08:44,350 --> 00:08:50,770
what we call in notification but you

00:08:46,810 --> 00:08:52,360
might call it an alert but since this

00:08:50,770 --> 00:08:55,930
notification can also have faced every

00:08:52,360 --> 00:08:58,720
of okay I'll be renamed in notification

00:08:55,930 --> 00:09:01,540
back in the day there are three of these

00:08:58,720 --> 00:09:04,839
sororities are failure warning in okay

00:09:01,540 --> 00:09:08,020
which correspond to critical warning and

00:09:04,839 --> 00:09:13,330
okay I think and using a pretty straight

00:09:08,020 --> 00:09:16,990
forward to this point this is a

00:09:13,330 --> 00:09:19,270
schematic view of how this would be

00:09:16,990 --> 00:09:21,910
wired up within quality so you have the

00:09:19,270 --> 00:09:25,750
metric generation side on the left with

00:09:21,910 --> 00:09:27,700
cpu disk and memory are they all report

00:09:25,750 --> 00:09:30,700
their metrics to the core demon and the

00:09:27,700 --> 00:09:33,700
core demon then fans it these are these

00:09:30,700 --> 00:09:35,620
metrics out to a the network plugin up

00:09:33,700 --> 00:09:38,650
here which then sends it somewhere

00:09:35,620 --> 00:09:40,510
upstream and B to the threshold plugin

00:09:38,650 --> 00:09:42,400
which doesn't actually store the metric

00:09:40,510 --> 00:09:48,970
anywhere it's just during the checking

00:09:42,400 --> 00:09:51,850
and eventually creating an alert what

00:09:48,970 --> 00:09:53,860
you have to do to use the threshold

00:09:51,850 --> 00:09:56,290
plugin is a you have to load the plugin

00:09:53,860 --> 00:09:58,420
you have to configure your thresholds

00:09:56,290 --> 00:10:00,040
that's probably the bulk of the work you

00:09:58,420 --> 00:10:03,610
have to be doing do to get this going

00:10:00,040 --> 00:10:05,470
and then ensure that something

00:10:03,610 --> 00:10:07,540
meaningful happens with these generated

00:10:05,470 --> 00:10:10,070
modifications that's going to be the

00:10:07,540 --> 00:10:15,920
third part of this talk about

00:10:10,070 --> 00:10:18,110
arms ordering so to load the plug-in all

00:10:15,920 --> 00:10:22,940
you have to do is add this load plug in

00:10:18,110 --> 00:10:26,230
line to the configuration and afterwards

00:10:22,940 --> 00:10:29,390
you have to configure the the actual

00:10:26,230 --> 00:10:32,600
thresholds we're going to stick with a

00:10:29,390 --> 00:10:34,010
very simple example we are going to

00:10:32,600 --> 00:10:36,440
assume that there is a temperature

00:10:34,010 --> 00:10:38,630
whatever that might be let's say

00:10:36,440 --> 00:10:41,930
temperature inside Iraq in our data

00:10:38,630 --> 00:10:46,370
center and if that temperature exceeds

00:10:41,930 --> 00:10:50,030
40 degrees Celsius sonorities then we're

00:10:46,370 --> 00:10:53,690
going to generate a warning that's what

00:10:50,030 --> 00:10:57,050
this line is supposed to say metrics

00:10:53,690 --> 00:11:00,590
must be selected by a type so you can

00:10:57,050 --> 00:11:03,710
select metrics with essentially all the

00:11:00,590 --> 00:11:06,260
parts that make up the unique name of a

00:11:03,710 --> 00:11:08,840
metric and quality but the type has to

00:11:06,260 --> 00:11:11,420
be a part of this election the reasoning

00:11:08,840 --> 00:11:16,000
being that this way they look up is pass

00:11:11,420 --> 00:11:19,340
through or very implementation specific

00:11:16,000 --> 00:11:23,000
requirement but also without a type

00:11:19,340 --> 00:11:25,400
without knowing what what that value is

00:11:23,000 --> 00:11:27,770
that you have defining any sort of

00:11:25,400 --> 00:11:31,310
threshold doesn't make all that much

00:11:27,770 --> 00:11:33,050
sense so the one threshold you have for

00:11:31,310 --> 00:11:38,480
temperature does not necessarily apply

00:11:33,050 --> 00:11:40,030
to I don't fan speed for example you can

00:11:38,480 --> 00:11:43,730
use as I said the other identifying

00:11:40,030 --> 00:11:46,460
parts as well the host plug-in of plugin

00:11:43,730 --> 00:11:50,330
instance type in zones the type is

00:11:46,460 --> 00:11:52,130
required though to get this going so

00:11:50,330 --> 00:11:54,380
this is how this would look in a

00:11:52,130 --> 00:11:58,580
different scenario where you would

00:11:54,380 --> 00:12:02,690
select only the i/o weight percentage of

00:11:58,580 --> 00:12:05,390
the CPU of e federal database server for

00:12:02,690 --> 00:12:08,540
example if that would exceed forty

00:12:05,390 --> 00:12:10,880
percent in this case then also you

00:12:08,540 --> 00:12:14,750
warning would be generated but that's

00:12:10,880 --> 00:12:17,030
just to show how how you can select by

00:12:14,750 --> 00:12:20,540
host or you can select by a plug-in and

00:12:17,030 --> 00:12:22,300
then this is the type instance of the io

00:12:20,540 --> 00:12:27,870
wait metric that

00:12:22,300 --> 00:12:31,560
cpu plugin producers there are four

00:12:27,870 --> 00:12:35,230
thresholds that you can configure

00:12:31,560 --> 00:12:40,140
warning min and failure min specify the

00:12:35,230 --> 00:12:42,910
lower bound of the accepted range and

00:12:40,140 --> 00:12:46,510
warning max and failure max specify the

00:12:42,910 --> 00:12:50,200
upper bound so to visualize this a

00:12:46,510 --> 00:12:53,350
little bit assuming this is the range of

00:12:50,200 --> 00:12:55,810
all values you have and this it's

00:12:53,350 --> 00:12:58,330
supposed to be a green box but let's say

00:12:55,810 --> 00:13:00,460
this is a green box this is your

00:12:58,330 --> 00:13:03,790
acceptable range of values everything in

00:13:00,460 --> 00:13:05,830
here is fine and you would say warning

00:13:03,790 --> 00:13:08,800
min and warning max on the lower and

00:13:05,830 --> 00:13:12,750
upper bound of this values and as soon

00:13:08,800 --> 00:13:16,560
as your your metric exceeds this

00:13:12,750 --> 00:13:20,170
acceptable bound a warning is generated

00:13:16,560 --> 00:13:24,070
if you want to use failure in addition

00:13:20,170 --> 00:13:25,810
to warning you would set failure min and

00:13:24,070 --> 00:13:29,800
failure max on the lower and upper bound

00:13:25,810 --> 00:13:31,030
of this warning range and everything

00:13:29,800 --> 00:13:35,560
falling outside of that would be a

00:13:31,030 --> 00:13:37,720
failure as you've seen in the

00:13:35,560 --> 00:13:39,970
configuration example I only specified a

00:13:37,720 --> 00:13:43,780
single 1i only specified the warning max

00:13:39,970 --> 00:13:46,330
in my example if you don't specify the

00:13:43,780 --> 00:13:48,370
other ones that boundary simply doesn't

00:13:46,330 --> 00:13:50,640
exist so if you leave off morning mint

00:13:48,370 --> 00:13:52,810
for example and but specify failure min

00:13:50,640 --> 00:13:55,360
there would be a hard boundary between

00:13:52,810 --> 00:13:58,110
an okay value and a failure and nothing

00:13:55,360 --> 00:14:03,250
between so you can't leave anything off

00:13:58,110 --> 00:14:05,530
if you're not interested in this and in

00:14:03,250 --> 00:14:07,720
particular you often have values that

00:14:05,530 --> 00:14:09,430
exceeds a certain threshold at some

00:14:07,720 --> 00:14:13,180
point but you're not at all concerned

00:14:09,430 --> 00:14:16,300
about the the lower bond if it's zero

00:14:13,180 --> 00:14:19,590
and it can't be smaller than zero you

00:14:16,300 --> 00:14:19,590
don't really have to care about this

00:14:21,040 --> 00:14:28,940
so when we set up specials or a

00:14:26,390 --> 00:14:31,220
disciplinary set of officials this is

00:14:28,940 --> 00:14:35,840
usually what I have in mind you know a

00:14:31,220 --> 00:14:38,630
steady growing curve at some arbitrary

00:14:35,840 --> 00:14:41,300
point in time we are going to have a

00:14:38,630 --> 00:14:42,860
problem and I am very sorry this is hard

00:14:41,300 --> 00:14:47,180
to see but they're supposed to be a line

00:14:42,860 --> 00:14:49,790
between here and the one point is good

00:14:47,180 --> 00:14:53,470
and the next point is bad so at this

00:14:49,790 --> 00:14:57,410
point we are going to produce a warning

00:14:53,470 --> 00:15:01,420
depending on the tooling you have later

00:14:57,410 --> 00:15:04,760
on it might also make sense to oh sorry

00:15:01,420 --> 00:15:09,290
let's get the head of it so the way this

00:15:04,760 --> 00:15:11,930
works is as you have a supposedly

00:15:09,290 --> 00:15:14,390
Greenfield down here you have a yellow

00:15:11,930 --> 00:15:17,780
field in the middle which is supposed to

00:15:14,390 --> 00:15:18,980
be the warning range and a red field on

00:15:17,780 --> 00:15:24,980
the top which is supposed to be the

00:15:18,980 --> 00:15:27,760
failure range every time that the curve

00:15:24,980 --> 00:15:31,460
passes from one field into the other is

00:15:27,760 --> 00:15:34,990
every time a state change occurs ecology

00:15:31,460 --> 00:15:37,820
is going to produce a notification so

00:15:34,990 --> 00:15:40,550
here we are passing from okay into

00:15:37,820 --> 00:15:44,060
warning and collectible amid a warning

00:15:40,550 --> 00:15:46,910
notification here we're going back from

00:15:44,060 --> 00:15:49,720
the warning field warning range into the

00:15:46,910 --> 00:15:53,570
ok range which means an okay

00:15:49,720 --> 00:15:56,120
notification will be emitted then it

00:15:53,570 --> 00:15:58,370
rests again into warning and later into

00:15:56,120 --> 00:16:00,200
the failure range so you warning and

00:15:58,370 --> 00:16:03,200
later if failure notification will be

00:16:00,200 --> 00:16:05,270
emitted and then the way back most

00:16:03,200 --> 00:16:07,880
notably when when it used to be a

00:16:05,270 --> 00:16:09,740
failure and it's going back down this is

00:16:07,880 --> 00:16:13,640
where you will get another warning so

00:16:09,740 --> 00:16:17,270
there if if you always keep the latest

00:16:13,640 --> 00:16:22,040
server d in memory or wherever you will

00:16:17,270 --> 00:16:24,380
know that it is state so II if failure

00:16:22,040 --> 00:16:28,460
followed by warning means the failure

00:16:24,380 --> 00:16:31,730
scenarios no longer the case and it has

00:16:28,460 --> 00:16:33,000
degraded or it has improved into a mere

00:16:31,730 --> 00:16:34,800
warning

00:16:33,000 --> 00:16:38,640
and eventually hopefully an okay

00:16:34,800 --> 00:16:40,110
notification so depending on your

00:16:38,640 --> 00:16:43,740
touring this is what it was alluding to

00:16:40,110 --> 00:16:46,400
earlier it may be necessary to have a

00:16:43,740 --> 00:16:50,040
continuous stream of warnings coming in

00:16:46,400 --> 00:16:53,040
so instead of a warning at the state

00:16:50,040 --> 00:16:55,770
change you want to have a warning as

00:16:53,040 --> 00:16:58,380
long as your problem persists this

00:16:55,770 --> 00:17:02,430
persist Oh person's true setting is

00:16:58,380 --> 00:17:05,760
achieving exactly this so by setting it

00:17:02,430 --> 00:17:07,680
to true as soon as you wander into the

00:17:05,760 --> 00:17:09,569
warning range you will get a warning

00:17:07,680 --> 00:17:14,160
with every sample that exceeds your

00:17:09,569 --> 00:17:18,329
threshold yes this is very spammy you

00:17:14,160 --> 00:17:23,189
don't want to pass this on to pagers or

00:17:18,329 --> 00:17:25,589
emails or whatnot you can try but

00:17:23,189 --> 00:17:29,340
somebody will fix this very very soon I

00:17:25,589 --> 00:17:34,800
hope it worse yes it's it's a

00:17:29,340 --> 00:17:37,950
self-regulating system definitely also

00:17:34,800 --> 00:17:41,670
depending on your setup it might be

00:17:37,950 --> 00:17:44,970
useful to have the same behavior for the

00:17:41,670 --> 00:17:47,670
okay notifications that may mean that

00:17:44,970 --> 00:17:50,400
you will get a huge number of

00:17:47,670 --> 00:17:52,470
notifications if every single metric you

00:17:50,400 --> 00:17:55,170
have and the vast majority of them is

00:17:52,470 --> 00:17:57,420
hopefully okay produces an Okie

00:17:55,170 --> 00:17:59,610
notification you have to be aware that

00:17:57,420 --> 00:18:01,800
this is happening and your system has to

00:17:59,610 --> 00:18:06,150
cope with this but they're good reasons

00:18:01,800 --> 00:18:09,780
to do this so with persist okay this

00:18:06,150 --> 00:18:13,410
behavior is is expanded so that it

00:18:09,780 --> 00:18:15,810
covers okay cases so in this case every

00:18:13,410 --> 00:18:18,600
single check will result in a

00:18:15,810 --> 00:18:20,850
notification and you're tooling

00:18:18,600 --> 00:18:24,360
downstream can make use of this for

00:18:20,850 --> 00:18:29,330
example by warning you that something

00:18:24,360 --> 00:18:29,330
didn't show up in a while for instance

00:18:29,789 --> 00:18:35,519
in the real world however the data is

00:18:33,269 --> 00:18:38,789
not always as clean as the previous

00:18:35,519 --> 00:18:42,210
graph so what we've seen earlier might

00:18:38,789 --> 00:18:44,869
have been you know a rag exceeding its

00:18:42,210 --> 00:18:49,739
target temperature and that is like a

00:18:44,869 --> 00:18:51,899
exponential fitting curve and that is

00:18:49,739 --> 00:18:54,149
very nice and it's really heartwarming

00:18:51,899 --> 00:18:55,919
to see in a graph that something is

00:18:54,149 --> 00:18:59,100
really nice and slowly and steady and

00:18:55,919 --> 00:19:00,929
textbook but the vast majority of grass

00:18:59,100 --> 00:19:04,080
is not text both the vast majority of

00:19:00,929 --> 00:19:07,470
graphs something like this and s murphy

00:19:04,080 --> 00:19:12,029
has it your flesh hold is going to be

00:19:07,470 --> 00:19:15,989
there anybody here is never observed

00:19:12,029 --> 00:19:20,399
behavior like this where hey I got a

00:19:15,989 --> 00:19:24,840
warning ah never mind no warning I'll

00:19:20,399 --> 00:19:26,669
happening again who dodged a bullet but

00:19:24,840 --> 00:19:28,529
why does this keep happening and

00:19:26,669 --> 00:19:31,109
eventually unit losing interest right

00:19:28,529 --> 00:19:32,609
this is not a good good stay to be in

00:19:31,109 --> 00:19:37,259
this is not something you weren't

00:19:32,609 --> 00:19:40,379
happening I'm guessing this is happening

00:19:37,259 --> 00:19:43,320
a lot with a network people so I think

00:19:40,379 --> 00:19:46,769
they have the name flapping for this and

00:19:43,320 --> 00:19:50,820
I'm also thinking that a singer has some

00:19:46,769 --> 00:19:58,710
way to mitigate this the first approach

00:19:50,820 --> 00:20:02,460
we had uh is Ed hysteresis so instead of

00:19:58,710 --> 00:20:05,519
a hard threshold line you have kind of a

00:20:02,460 --> 00:20:08,159
okay this how'd you find it this is how

00:20:05,519 --> 00:20:11,279
you configure a hysteresis in qualities

00:20:08,159 --> 00:20:14,629
threshold plugin in in addition to

00:20:11,279 --> 00:20:19,129
warning max for you add hysteresis 5 and

00:20:14,629 --> 00:20:24,269
what that means is you now have a

00:20:19,129 --> 00:20:28,979
warning range up here in kind of a maybe

00:20:24,269 --> 00:20:32,669
warning range in the middle so the way

00:20:28,979 --> 00:20:34,679
this works is this maybe range behaves

00:20:32,669 --> 00:20:40,230
differently depending on the previous

00:20:34,679 --> 00:20:42,020
state if you are in a ok state you have

00:20:40,230 --> 00:20:46,070
to exceed

00:20:42,020 --> 00:20:50,240
the upper limit in order for your

00:20:46,070 --> 00:20:53,300
warning to be emitted and if you are any

00:20:50,240 --> 00:20:57,980
warning state you have to be below the

00:20:53,300 --> 00:21:02,360
lower limit for the ok notification to

00:20:57,980 --> 00:21:04,570
be emitted so in this example the 4d

00:21:02,360 --> 00:21:07,850
line would be right in the middle and

00:21:04,570 --> 00:21:11,030
this band would be 10 white 5 to the top

00:21:07,850 --> 00:21:15,770
and 5 to the bottom so you would have a

00:21:11,030 --> 00:21:18,860
10 degree temperature band in which if

00:21:15,770 --> 00:21:21,350
you're about 45 degrees you will get a

00:21:18,860 --> 00:21:24,650
warning and only if you're below 35

00:21:21,350 --> 00:21:29,210
degrees then the ok notification will

00:21:24,650 --> 00:21:32,180
happen and if it is kind of 4d and

00:21:29,210 --> 00:21:36,140
flapping around and never going above or

00:21:32,180 --> 00:21:38,990
below 40 really arm you're not going to

00:21:36,140 --> 00:21:40,520
get any notification whether you whether

00:21:38,990 --> 00:21:42,830
you're left in the warning state or the

00:21:40,520 --> 00:21:48,560
left-hander your k-state depends on what

00:21:42,830 --> 00:21:51,860
their temperature was previously however

00:21:48,560 --> 00:21:55,330
this solves the problem for some cases

00:21:51,860 --> 00:22:00,140
cases where you're close to the

00:21:55,330 --> 00:22:02,360
threshold and you may occasionally be

00:22:00,140 --> 00:22:05,050
very close and maybe even a little bit

00:22:02,360 --> 00:22:08,570
above but you don't really care but

00:22:05,050 --> 00:22:10,580
another common pattern is this and this

00:22:08,570 --> 00:22:13,490
cannot be helped with the hysteresis

00:22:10,580 --> 00:22:18,050
curve this is a very common pattern with

00:22:13,490 --> 00:22:19,940
latency it's fine it's fine fine then I

00:22:18,050 --> 00:22:23,530
don't know some backup is happening or

00:22:19,940 --> 00:22:26,950
an abusive user or something other bad

00:22:23,530 --> 00:22:29,240
you get a couple of bad samples and

00:22:26,950 --> 00:22:30,860
before somebody you can do anything

00:22:29,240 --> 00:22:34,340
meaningful it's back to normal and

00:22:30,860 --> 00:22:36,980
nobody should care anymore or at least

00:22:34,340 --> 00:22:39,950
nobody has to be paid for this and woken

00:22:36,980 --> 00:22:42,410
up because it's gone already and if it's

00:22:39,950 --> 00:22:45,260
a recurring pattern you have to work on

00:22:42,410 --> 00:22:47,210
this in your daytime job anyways and

00:22:45,260 --> 00:22:49,690
it's not something you will fix in four

00:22:47,210 --> 00:22:49,690
in the morning

00:22:50,489 --> 00:22:56,950
yeah so you you will still get a warning

00:22:53,919 --> 00:22:59,739
in this case or a notification in this

00:22:56,950 --> 00:23:01,869
case even though it probably shouldn't

00:22:59,739 --> 00:23:07,119
be you notification in the first place

00:23:01,869 --> 00:23:10,330
so the second approach we implement it

00:23:07,119 --> 00:23:12,720
is that it will only trigger a

00:23:10,330 --> 00:23:16,749
notification if the same state happens

00:23:12,720 --> 00:23:19,509
multiple times in a row the congregation

00:23:16,749 --> 00:23:22,450
option is it's not the best name in the

00:23:19,509 --> 00:23:26,279
world it's called hits so in this case

00:23:22,450 --> 00:23:31,720
if it's you morning six times in a row

00:23:26,279 --> 00:23:34,840
then we will actually send a warning so

00:23:31,720 --> 00:23:37,109
the way this works is everything is fine

00:23:34,840 --> 00:23:40,869
down here and then we get the first

00:23:37,109 --> 00:23:43,269
outlier up here in essentially it starts

00:23:40,869 --> 00:23:45,639
counting well one potato two potato

00:23:43,269 --> 00:23:47,859
three potato well that wasn't enough

00:23:45,639 --> 00:23:55,539
that wasn't sick so I'm going to stick

00:23:47,859 --> 00:23:59,399
with everything is alright so I'm

00:23:55,539 --> 00:24:02,049
guessing my point here is this is still

00:23:59,399 --> 00:24:03,629
probably not the best behavior of a

00:24:02,049 --> 00:24:07,539
system and this is probably something

00:24:03,629 --> 00:24:09,070
you want to look into eventually but

00:24:07,539 --> 00:24:13,480
this is not something to wake people up

00:24:09,070 --> 00:24:14,889
for the time delay between these dots by

00:24:13,480 --> 00:24:18,070
the way in ecology is typically ten

00:24:14,889 --> 00:24:19,690
seconds so having something break six

00:24:18,070 --> 00:24:23,129
times in a row means it's broken for a

00:24:19,690 --> 00:24:25,840
minute that's an okay time to wait

00:24:23,129 --> 00:24:30,549
actually one might argue that that's

00:24:25,840 --> 00:24:34,239
still way too trigger-happy so I was

00:24:30,549 --> 00:24:37,480
talking about crikey being more less

00:24:34,239 --> 00:24:39,220
stateless and if you start a new server

00:24:37,480 --> 00:24:41,169
somewhere and some metrics so the sinful

00:24:39,220 --> 00:24:43,419
circuit will happily accept that and if

00:24:41,169 --> 00:24:45,820
the server goes away again or the

00:24:43,419 --> 00:24:47,529
network breaks or something then the

00:24:45,820 --> 00:24:50,739
metrics will not arrive and that is ok

00:24:47,529 --> 00:24:56,169
too so colleague ed doesn't care but you

00:24:50,739 --> 00:25:00,789
might so in order to to work around this

00:24:56,169 --> 00:25:02,269
the threshold plug-in has a concert of

00:25:00,789 --> 00:25:04,459
interesting metrics

00:25:02,269 --> 00:25:07,129
you can define metrics that are

00:25:04,459 --> 00:25:09,259
interesting just by essentially said an

00:25:07,129 --> 00:25:11,809
interesting too true and what that means

00:25:09,259 --> 00:25:15,320
is I'm actually interested in this

00:25:11,809 --> 00:25:22,070
metric I need to know when this metric

00:25:15,320 --> 00:25:24,769
does not exist anymore and it when this

00:25:22,070 --> 00:25:29,149
metric goes away when this metric is not

00:25:24,769 --> 00:25:31,159
received for the heart at the time out

00:25:29,149 --> 00:25:35,149
there's a timeout setting that defines

00:25:31,159 --> 00:25:40,070
often a a metric has to that time

00:25:35,149 --> 00:25:42,700
between okay every metric has an

00:25:40,070 --> 00:25:44,719
interval which is the time between

00:25:42,700 --> 00:25:49,339
updates or the expected time between

00:25:44,719 --> 00:25:51,679
updates and it's in the default setting

00:25:49,339 --> 00:25:54,379
default settings it's expected that

00:25:51,679 --> 00:25:57,739
within twice this interval I will

00:25:54,379 --> 00:25:59,509
receive an update so instead of 10

00:25:57,739 --> 00:26:01,969
seconds 20 seconds and if I don't

00:25:59,509 --> 00:26:06,950
receive an update in 20 seconds then

00:26:01,969 --> 00:26:09,859
this interesting true will emit a the

00:26:06,950 --> 00:26:14,089
values missing a failure notification

00:26:09,859 --> 00:26:17,109
that you can subscribe to or that you

00:26:14,089 --> 00:26:17,109
can use in your scripts

00:26:20,220 --> 00:26:27,549
this is all I had about the threshold

00:26:24,149 --> 00:26:30,820
plugin yes dude we need we need a

00:26:27,549 --> 00:26:36,960
microphone i think if it's short i can

00:26:30,820 --> 00:26:36,960
also repeat your question do they please

00:26:41,759 --> 00:26:49,149
for the second type the bursty type we

00:26:46,299 --> 00:26:52,110
implemented a hits encounter that you

00:26:49,149 --> 00:26:58,450
think about doing it with moving

00:26:52,110 --> 00:27:02,230
weighted averages no we didn't think

00:26:58,450 --> 00:27:04,149
about weighted averages in retrospect

00:27:02,230 --> 00:27:06,970
what I probably would have implemented

00:27:04,149 --> 00:27:09,970
instead is something along the lines of

00:27:06,970 --> 00:27:13,980
six out of ten or so instead of

00:27:09,970 --> 00:27:17,289
requiring six consecutive failures that

00:27:13,980 --> 00:27:18,610
out of the ten last sample six must be

00:27:17,289 --> 00:27:20,049
fair that's exactly what I mean well

00:27:18,610 --> 00:27:21,850
that's what you mean it's called moving

00:27:20,049 --> 00:27:24,549
weighted averages not just wait a bit

00:27:21,850 --> 00:27:27,070
moving so you have like a bucket like 10

00:27:24,549 --> 00:27:28,990
measurements and then you the last ones

00:27:27,070 --> 00:27:32,769
are weighted higher than the earlier

00:27:28,990 --> 00:27:35,980
ones ok I think we're talking at

00:27:32,769 --> 00:27:38,590
cross-purposes still so the first step

00:27:35,980 --> 00:27:40,870
is to look at your threshold and

00:27:38,590 --> 00:27:43,240
determine if this ok or not essentially

00:27:40,870 --> 00:27:47,970
it's a yes or no question or twice lady

00:27:43,240 --> 00:27:51,279
Fiona say okay warning in failure and

00:27:47,970 --> 00:27:55,539
then you have a short history of the say

00:27:51,279 --> 00:27:58,379
ten ten states and a moving average

00:27:55,539 --> 00:28:02,919
Buddhist it should take the measured

00:27:58,379 --> 00:28:08,309
metric the measured value and say like

00:28:02,919 --> 00:28:13,059
in the last 20 samples I had an average

00:28:08,309 --> 00:28:16,659
cpu I oh wait of 37.5 percent or

00:28:13,059 --> 00:28:18,580
something like this there are some ways

00:28:16,659 --> 00:28:21,429
in that direction that you can do with

00:28:18,580 --> 00:28:26,110
the aggregation plugin for not time Wes

00:28:21,429 --> 00:28:29,169
don't forget what I said um now moving

00:28:26,110 --> 00:28:30,140
average over the actual metric values is

00:28:29,169 --> 00:28:33,260
not possible

00:28:30,140 --> 00:28:35,090
but you what in retrospect what I would

00:28:33,260 --> 00:28:38,350
have done probably what would have been

00:28:35,090 --> 00:28:41,720
better I guess is to have like a window

00:28:38,350 --> 00:28:45,920
in the past in the past 10 or so of my

00:28:41,720 --> 00:28:48,200
samples were bad and or sorry I'm

00:28:45,920 --> 00:28:50,720
looking at the last ten states and if

00:28:48,200 --> 00:28:55,460
six of the last ten were bad then I'm

00:28:50,720 --> 00:29:00,950
going to tell her it's it's similar but

00:28:55,460 --> 00:29:02,960
not quite the same just kind of make

00:29:00,950 --> 00:29:05,720
sense anybody understanding what i'm

00:29:02,960 --> 00:29:11,930
trying to say i'm bitter loss for words

00:29:05,720 --> 00:29:17,870
I'm afraid the from this recovery how do

00:29:11,930 --> 00:29:21,940
you mean this one moment if you look six

00:29:17,870 --> 00:29:27,350
of 10 states when do you do the recovery

00:29:21,940 --> 00:29:32,390
day okay so eventually you're going to

00:29:27,350 --> 00:29:34,640
have five out of ten or bad you have you

00:29:32,390 --> 00:29:37,130
have ten good states and then starts

00:29:34,640 --> 00:29:39,770
failing and this this last ten states

00:29:37,130 --> 00:29:42,350
start filling up it's moving forward and

00:29:39,770 --> 00:29:44,090
you have one bed out of ten and two and

00:29:42,350 --> 00:29:47,840
three and eventually six and then you

00:29:44,090 --> 00:29:50,510
start firing and that the normal

00:29:47,840 --> 00:29:53,150
progression the expected behavior would

00:29:50,510 --> 00:29:55,820
then be that it's still broken for four

00:29:53,150 --> 00:29:59,540
while longer then should have ten out of

00:29:55,820 --> 00:30:02,450
ten failing and eventually it's somebody

00:29:59,540 --> 00:30:04,940
gets run to fix it or it fixes itself or

00:30:02,450 --> 00:30:07,370
whatever happens and it's happy again

00:30:04,940 --> 00:30:12,020
and then the reverse process starts at

00:30:07,370 --> 00:30:14,270
first the first one is still it's okay

00:30:12,020 --> 00:30:16,490
but you saw have nine failing in the

00:30:14,270 --> 00:30:18,410
buffer and then it starts filling up

00:30:16,490 --> 00:30:21,200
with okay until eventually it goes

00:30:18,410 --> 00:30:27,290
underneath the six failing out of the 10

00:30:21,200 --> 00:30:29,240
it's good yes but the behavior that that

00:30:27,290 --> 00:30:31,220
you have something failing and ok and

00:30:29,240 --> 00:30:33,830
failing in okay and failing twice and

00:30:31,220 --> 00:30:39,299
then okay and so on that this is no

00:30:33,830 --> 00:30:41,860
longer as as jumpy as it used to be

00:30:39,299 --> 00:30:45,640
as I have the microphone i want to have

00:30:41,860 --> 00:30:50,320
not a question sure about you sending

00:30:45,640 --> 00:30:54,610
the only okays roll the fails and the

00:30:50,320 --> 00:31:03,760
one you you can set like say no not this

00:30:54,610 --> 00:31:07,210
one this one no no this one this one yes

00:31:03,760 --> 00:31:09,040
yes okay did you think about some sort

00:31:07,210 --> 00:31:12,190
of instead of sending all of them

00:31:09,040 --> 00:31:17,260
sending like a heartbeat just a

00:31:12,190 --> 00:31:21,280
heartbeat what would you set the

00:31:17,260 --> 00:31:24,280
heartbeat setting to some seconds some

00:31:21,280 --> 00:31:28,480
time limit but these metrics are coming

00:31:24,280 --> 00:31:33,370
every 10 seconds so instead of sending

00:31:28,480 --> 00:31:35,320
every every 10 seconds some some rhythm

00:31:33,370 --> 00:31:37,150
it's like heartbeat this one okay so

00:31:35,320 --> 00:31:39,520
you're sending over 10 seconds i say i

00:31:37,150 --> 00:31:41,200
don't want it over 10 seconds it's

00:31:39,520 --> 00:31:43,179
enough for me if you sign one time a

00:31:41,200 --> 00:31:45,730
minute to something like that so don't

00:31:43,179 --> 00:31:47,710
sampling this okay exactly if I could

00:31:45,730 --> 00:31:49,270
because um there's not a huge difference

00:31:47,710 --> 00:31:51,240
between a heartbeat and an okay

00:31:49,270 --> 00:31:54,100
notification there k notification I

00:31:51,240 --> 00:31:57,390
think so transports the current metric

00:31:54,100 --> 00:32:00,610
value in the payload in the actual text

00:31:57,390 --> 00:32:02,980
so it's a bit more useful for let's say

00:32:00,610 --> 00:32:05,530
a status display in a singer or

00:32:02,980 --> 00:32:07,179
something oh I think if someone is

00:32:05,530 --> 00:32:09,400
waiting for these messages behind

00:32:07,179 --> 00:32:11,169
otherwise it won't make sense if you

00:32:09,400 --> 00:32:14,919
send them if nothing is waiting for them

00:32:11,169 --> 00:32:16,450
okay and for them folder for the system

00:32:14,919 --> 00:32:19,290
waiting for them instead of sending

00:32:16,450 --> 00:32:22,179
every time you're already standing the

00:32:19,290 --> 00:32:25,720
status changes obviously and then you

00:32:22,179 --> 00:32:27,520
you some some heartbeat or sometimes

00:32:25,720 --> 00:32:29,740
because you just that I'm still here so

00:32:27,520 --> 00:32:31,660
I'm still sending are you mean a

00:32:29,740 --> 00:32:35,169
heartbeat of the college's demon itself

00:32:31,660 --> 00:32:37,120
exactly no we don't have that I it

00:32:35,169 --> 00:32:39,400
should be fairly easy to implement this

00:32:37,120 --> 00:32:41,190
if anybody anybody's interested sounds

00:32:39,400 --> 00:32:43,600
like a good starter project into the

00:32:41,190 --> 00:32:46,030
open source project so if anybody's

00:32:43,600 --> 00:32:50,160
interested I'm very happy to work with

00:32:46,030 --> 00:32:50,160
you but we don't have this right now

00:32:51,850 --> 00:33:02,809
are there any more questions regarding

00:32:54,260 --> 00:33:05,950
their thresholds I wasn't nearly

00:33:02,809 --> 00:33:05,950
confusing enough all right

00:33:15,120 --> 00:33:21,390
all right then let's dive into alerting

00:33:21,690 --> 00:33:26,440
alerting is essentially taking these

00:33:25,090 --> 00:33:31,330
notifications and doing something

00:33:26,440 --> 00:33:33,640
meaningful with it as I said in the

00:33:31,330 --> 00:33:37,900
introduction this is not the main focus

00:33:33,640 --> 00:33:40,540
of colleague d and there is some support

00:33:37,900 --> 00:33:42,880
but it's kind of like a and off

00:33:40,540 --> 00:33:44,800
stepchild and it's often implemented as

00:33:42,880 --> 00:33:48,370
an afterthought so many plugins that

00:33:44,800 --> 00:33:51,820
maybe should support the handling of

00:33:48,370 --> 00:33:53,500
notification stoned my best example is

00:33:51,820 --> 00:33:55,240
the right it should be plug-in that

00:33:53,500 --> 00:33:57,400
censored HTTP POST request should

00:33:55,240 --> 00:34:00,670
probably send out notifications to but

00:33:57,400 --> 00:34:05,340
currently doesn't again patches are very

00:34:00,670 --> 00:34:08,230
welcome plugins that do support

00:34:05,340 --> 00:34:11,290
notifications are most notably the exit

00:34:08,230 --> 00:34:14,860
plug in the exit plugin can execute an

00:34:11,290 --> 00:34:16,750
arbitrary script with the notification

00:34:14,860 --> 00:34:19,210
on its or net input and I'm going to

00:34:16,750 --> 00:34:22,180
show this on the next slide the network

00:34:19,210 --> 00:34:24,580
plugin can take notifications and sent

00:34:22,180 --> 00:34:27,160
these modifications to a central host

00:34:24,580 --> 00:34:28,990
for example so you can do a threshold

00:34:27,160 --> 00:34:31,120
checking which unfortunately in the

00:34:28,990 --> 00:34:34,870
current implementation is quite cpu

00:34:31,120 --> 00:34:38,350
intensive mostly they're looking up

00:34:34,870 --> 00:34:40,120
their configured threshold specials so

00:34:38,350 --> 00:34:42,670
you can do the threshold checking

00:34:40,120 --> 00:34:44,370
locally on every machine that the agents

00:34:42,670 --> 00:34:46,780
running on and then forward these

00:34:44,370 --> 00:34:50,170
generated notifications to your central

00:34:46,780 --> 00:34:51,670
server sorry can you please put the

00:34:50,170 --> 00:34:54,430
microphone a little bit nearer to your

00:34:51,670 --> 00:34:59,350
mouth so let's say it's louder I totally

00:34:54,430 --> 00:35:04,510
feel like a dork but better is it better

00:34:59,350 --> 00:35:06,580
better anybody okay thank you I see a

00:35:04,510 --> 00:35:09,150
thumbs up alright thank you ok let me

00:35:06,580 --> 00:35:09,150
all my voice

00:35:10,900 --> 00:35:16,450
all right the log file in syslog plugin

00:35:13,779 --> 00:35:18,970
can write notifications to their blog

00:35:16,450 --> 00:35:21,400
file and syslog respectively which is

00:35:18,970 --> 00:35:23,470
probably not that surprising the right

00:35:21,400 --> 00:35:25,690
Riemann and right sensor plugins can

00:35:23,470 --> 00:35:27,910
also forward notifications and I'm

00:35:25,690 --> 00:35:30,579
probably missing two Athy but it's not

00:35:27,910 --> 00:35:36,779
not an overwhelming number that can deal

00:35:30,579 --> 00:35:39,789
with this this is how the xik plug-in is

00:35:36,779 --> 00:35:42,430
configured it's very straightforward the

00:35:39,789 --> 00:35:45,089
only caveat I guess is that you have to

00:35:42,430 --> 00:35:49,240
provide a username here this is because

00:35:45,089 --> 00:35:53,799
to get some metrics colleague d

00:35:49,240 --> 00:35:56,200
sometimes or often runs as root and we

00:35:53,799 --> 00:36:00,279
simply download refuse to execute

00:35:56,200 --> 00:36:01,869
scripts s root s collecting so you have

00:36:00,279 --> 00:36:05,140
to provide a user here but apart from

00:36:01,869 --> 00:36:07,270
this you provide the path to something

00:36:05,140 --> 00:36:09,910
that is executable you can add

00:36:07,270 --> 00:36:13,059
additional arguments here strings so if

00:36:09,910 --> 00:36:14,650
if you require this and then whenever it

00:36:13,059 --> 00:36:19,329
receives a notification it just goes off

00:36:14,650 --> 00:36:21,930
and execute that script this is roughly

00:36:19,329 --> 00:36:25,690
what the script gets on standard input

00:36:21,930 --> 00:36:32,049
there's a birdie and a time the time is

00:36:25,690 --> 00:36:34,690
and unix epics you get the host plug-in

00:36:32,049 --> 00:36:38,549
type eventually type in instance

00:36:34,690 --> 00:36:41,950
information in the header that is

00:36:38,549 --> 00:36:46,690
similar to http oh we're not following

00:36:41,950 --> 00:36:49,029
any standard per se we expect people to

00:36:46,690 --> 00:36:54,309
just you know bright at a column or

00:36:49,029 --> 00:36:58,329
something so there's no fancy multi-line

00:36:54,309 --> 00:37:01,960
header fields and all that sort of rusty

00:36:58,329 --> 00:37:04,450
corners of hcp that serve no purpose

00:37:01,960 --> 00:37:08,829
except for exploit every two years or so

00:37:04,450 --> 00:37:11,890
now but it's a fairly straightforward

00:37:08,829 --> 00:37:13,960
simple header format to parse I hope and

00:37:11,890 --> 00:37:16,900
then eventually there's a blank line and

00:37:13,960 --> 00:37:20,589
then this is just human readable plain

00:37:16,900 --> 00:37:23,440
text in in case of the threshold plugin

00:37:20,589 --> 00:37:24,580
it looks somewhat like this so i will

00:37:23,440 --> 00:37:26,770
tell you that

00:37:24,580 --> 00:37:29,710
the value the metric value is currently

00:37:26,770 --> 00:37:34,680
42 and that this is above whatever

00:37:29,710 --> 00:37:38,080
threshold that shot is configured and if

00:37:34,680 --> 00:37:40,720
if you read this incorrectly you can

00:37:38,080 --> 00:37:44,770
forward this to whatever you need to

00:37:40,720 --> 00:37:47,470
forward this in addition to these more

00:37:44,770 --> 00:37:50,590
generic plugins I I showed on the

00:37:47,470 --> 00:37:52,900
previous slide they are also specialized

00:37:50,590 --> 00:37:56,500
notification plugins that do nothing

00:37:52,900 --> 00:37:58,630
except working with notifications the

00:37:56,500 --> 00:38:02,380
two that we have right now are nullified

00:37:58,630 --> 00:38:06,010
desktop which is using the desktop

00:38:02,380 --> 00:38:08,830
notifications specification to you know

00:38:06,010 --> 00:38:12,640
pop up these little balloons but say hey

00:38:08,830 --> 00:38:16,330
something's broken not the most useful

00:38:12,640 --> 00:38:19,690
for any serious setup I'm afraid but it

00:38:16,330 --> 00:38:22,510
was fun to implement at the time more

00:38:19,690 --> 00:38:25,210
interesting I guess is an RFI email

00:38:22,510 --> 00:38:27,940
which does exactly what you expect it to

00:38:25,210 --> 00:38:31,810
do it sends an email you configured

00:38:27,940 --> 00:38:36,540
something like this loaded you set a

00:38:31,810 --> 00:38:39,130
from address and one or more recipients

00:38:36,540 --> 00:38:41,830
maybe some some configuration is

00:38:39,130 --> 00:38:46,480
required to send email via an SMTP

00:38:41,830 --> 00:38:48,700
server and there you go that's all you

00:38:46,480 --> 00:38:55,060
need to send emails and pester your

00:38:48,700 --> 00:38:57,670
colleagues last year I ended my talk

00:38:55,060 --> 00:39:00,550
with a slide what's next and proposed

00:38:57,670 --> 00:39:04,930
that maybe for the future we could send

00:39:00,550 --> 00:39:09,580
notifications as passive checks to Singa

00:39:04,930 --> 00:39:12,490
and since I have written a new plug-in

00:39:09,580 --> 00:39:15,010
called modifying not yours which is

00:39:12,490 --> 00:39:16,750
currently in review and I hope that one

00:39:15,010 --> 00:39:21,880
day we'll be able to do exactly this

00:39:16,750 --> 00:39:25,920
it's currently writing service checks to

00:39:21,880 --> 00:39:28,450
using us what is called command file and

00:39:25,920 --> 00:39:31,210
hopefully eventually are you think i

00:39:28,450 --> 00:39:32,950
will pick it up from there and do stuff

00:39:31,210 --> 00:39:38,320
with these notifications

00:39:32,950 --> 00:39:40,150
um since I don't use singer personally I

00:39:38,320 --> 00:39:42,849
would be very happy if people would step

00:39:40,150 --> 00:39:45,550
forward and help me with this work I

00:39:42,849 --> 00:39:48,660
could for example see that host checks

00:39:45,550 --> 00:39:51,520
might be a valuable addition to this so

00:39:48,660 --> 00:39:53,619
that the code since she sees that i

00:39:51,520 --> 00:39:56,859
received a metric from this house so

00:39:53,619 --> 00:39:58,990
apparently it's up so every i know 60

00:39:56,859 --> 00:40:04,180
seconds or so I'm emitting a host check

00:39:58,990 --> 00:40:08,470
thing but just a thought either I've no

00:40:04,180 --> 00:40:11,859
idea I don't know what I'm doing that's

00:40:08,470 --> 00:40:22,089
all I have I'm happy to take any

00:40:11,859 --> 00:40:30,359
questions thank you we've got 20 minutes

00:40:22,089 --> 00:40:33,550
left for questions this one um

00:40:30,359 --> 00:40:36,790
consulting thresholds just taking a

00:40:33,550 --> 00:40:40,000
quick look at the documentation you've

00:40:36,790 --> 00:40:45,810
got a collecting neck nagas plugin for

00:40:40,000 --> 00:40:50,050
active pulling yes um the way this works

00:40:45,810 --> 00:40:52,480
you suck read the question aims for is

00:40:50,050 --> 00:40:56,470
this plugin aware of the thresholds you

00:40:52,480 --> 00:40:59,560
just talked about no no no okay the way

00:40:56,470 --> 00:41:01,210
this pregnant works is that it uses a

00:40:59,560 --> 00:41:06,040
unique remain socket that the demon

00:41:01,210 --> 00:41:09,400
opens to get the last metric value and

00:41:06,040 --> 00:41:12,329
then in as you do with many many other

00:41:09,400 --> 00:41:15,790
plugins it has a gash see in a dash W

00:41:12,329 --> 00:41:18,010
option where you specify the thresholds

00:41:15,790 --> 00:41:21,490
on the command line and then it will

00:41:18,010 --> 00:41:23,589
check that the last value it got against

00:41:21,490 --> 00:41:27,069
these thresholds and it said with the

00:41:23,589 --> 00:41:30,490
appropriate exit status okay am are

00:41:27,069 --> 00:41:34,050
there any plans to add this the

00:41:30,490 --> 00:41:39,190
awareness of the threshold plugin

00:41:34,050 --> 00:41:42,070
not really um no we don't have any plans

00:41:39,190 --> 00:41:43,840
ah I guess I jumped a step ahead and

00:41:42,070 --> 00:41:48,850
thought about how if it was possible

00:41:43,840 --> 00:41:50,950
with the current infrastructure it might

00:41:48,850 --> 00:41:53,050
not be that easy because there's no

00:41:50,950 --> 00:41:57,460
state capital notifications they just

00:41:53,050 --> 00:42:00,490
passed on and it's hard for an external

00:41:57,460 --> 00:42:03,340
tool such as the killeen not just binary

00:42:00,490 --> 00:42:08,470
to actually get any information about

00:42:03,340 --> 00:42:19,060
current or past notifications okay thank

00:42:08,470 --> 00:42:21,220
you if you do need another thing for

00:42:19,060 --> 00:42:25,840
next year using it too has a nice

00:42:21,220 --> 00:42:27,940
network RP and it's so perhaps notify is

00:42:25,840 --> 00:42:32,110
Inga to mrs. network out before

00:42:27,940 --> 00:42:33,790
clustered setup would be useful that's

00:42:32,110 --> 00:42:36,160
very valuable to know because right now

00:42:33,790 --> 00:42:38,200
it's not yet merged and backwards

00:42:36,160 --> 00:42:45,150
incompatible changes or easy to make at

00:42:38,200 --> 00:42:45,150
this point okay here

00:42:46,870 --> 00:42:55,300
I have a question if there are something

00:42:52,000 --> 00:42:58,140
regarding trending so for example you

00:42:55,300 --> 00:43:00,400
have let's just take disk space

00:42:58,140 --> 00:43:03,910
utilization over a period of time you

00:43:00,400 --> 00:43:06,630
have different samples let you say your

00:43:03,910 --> 00:43:10,510
trash hole your maximum threshold is I

00:43:06,630 --> 00:43:14,590
don't know tempers then present this

00:43:10,510 --> 00:43:16,960
space remaining but you kind of notice

00:43:14,590 --> 00:43:20,040
that between your samples all of a

00:43:16,960 --> 00:43:23,080
sudden there's a huge increase and the

00:43:20,040 --> 00:43:26,620
deviation is there something around that

00:43:23,080 --> 00:43:28,690
or to notify than that no there's

00:43:26,620 --> 00:43:31,210
nothing like this current in coil ID and

00:43:28,690 --> 00:43:33,180
I don't think that called you would be

00:43:31,210 --> 00:43:37,480
the right place to solve this issue

00:43:33,180 --> 00:43:40,120
there are other tools that can do is

00:43:37,480 --> 00:43:43,780
stuff like this very well women for

00:43:40,120 --> 00:43:45,730
example is probably not various for

00:43:43,780 --> 00:43:49,270
being hard to configure given that the

00:43:45,730 --> 00:43:50,920
configuration language is closure but it

00:43:49,270 --> 00:43:54,000
is very very powerful and you can

00:43:50,920 --> 00:43:57,250
certainly do this stuff like this

00:43:54,000 --> 00:44:00,670
another tool that's also maybe a bit

00:43:57,250 --> 00:44:02,980
more advanced to configure and set up

00:44:00,670 --> 00:44:05,490
correctly but which is certainly payable

00:44:02,980 --> 00:44:10,230
to do stuff like this would be a

00:44:05,490 --> 00:44:14,260
Prometheus so if you're interested in in

00:44:10,230 --> 00:44:16,630
more complex metric computations I would

00:44:14,260 --> 00:44:18,340
such as you see there talk tomorrow

00:44:16,630 --> 00:44:21,180
that's probably going to be very

00:44:18,340 --> 00:44:24,840
interesting in that regard I hope so I

00:44:21,180 --> 00:44:29,470
was front of someone yes this morning

00:44:24,840 --> 00:44:36,040
thank you sure any more questions this

00:44:29,470 --> 00:44:38,770
moment no I don't see any end so I think

00:44:36,040 --> 00:44:41,760
we're finished thank you for orion for

00:44:38,770 --> 00:44:41,760
your talk welcome

00:44:42,710 --> 00:44:44,770

YouTube URL: https://www.youtube.com/watch?v=I4lf5vkGN-o


