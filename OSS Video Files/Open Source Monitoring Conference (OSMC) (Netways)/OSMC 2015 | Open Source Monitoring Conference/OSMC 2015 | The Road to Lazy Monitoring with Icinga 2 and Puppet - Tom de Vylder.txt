Title: OSMC 2015 | The Road to Lazy Monitoring with Icinga 2 and Puppet - Tom de Vylder
Publication date: 2015-11-26
Playlist: OSMC 2015 | Open Source Monitoring Conference
Description: 
	Tom will show you how to leverage configuration management to increase your productivity.

Although he will use Puppet as an example, it should be easy to adapt these tips and tricks to your particular environment.
Captions: 
	00:00:08,860 --> 00:00:14,139
hello everybody I'm happy to introduce

00:00:12,010 --> 00:00:18,490
to you Tom de ville de who will give us

00:00:14,139 --> 00:00:18,820
a talk about singer two and puppet thank

00:00:18,490 --> 00:00:22,240
you

00:00:18,820 --> 00:00:26,410
hi welcome to the rotor lazy monitoring

00:00:22,240 --> 00:00:28,210
with singer - and puppets fair wording

00:00:26,410 --> 00:00:34,090
up front there's going to be some ugly

00:00:28,210 --> 00:00:36,550
code so be warned so I'm not sky I have

00:00:34,090 --> 00:00:39,480
a passion for operations automation

00:00:36,550 --> 00:00:44,320
especially and to resolve Arian cars

00:00:39,480 --> 00:00:46,870
I'm consulted in with Belgium I've

00:00:44,320 --> 00:00:48,970
recently joined the senior project as a

00:00:46,870 --> 00:00:52,120
member of their packages and tools team

00:00:48,970 --> 00:00:57,699
I focus on the a singer to puppet

00:00:52,120 --> 00:01:01,750
modules so enough about me let's talk

00:00:57,699 --> 00:01:04,659
about monitoring instead so what exactly

00:01:01,750 --> 00:01:07,689
is monitoring well given that we're at

00:01:04,659 --> 00:01:10,180
the third day of a monitoring conference

00:01:07,689 --> 00:01:14,290
I'm guessing you know a thing or two

00:01:10,180 --> 00:01:15,790
about monitoring already and it may come

00:01:14,290 --> 00:01:20,440
as a surprise to you but I hate

00:01:15,790 --> 00:01:21,430
monitoring and here's why it can be

00:01:20,440 --> 00:01:23,920
boring at times

00:01:21,430 --> 00:01:27,430
at first all those flashy dashing

00:01:23,920 --> 00:01:29,890
widgets and dashboards and graphs it's

00:01:27,430 --> 00:01:33,910
fun to watch but after a while you get

00:01:29,890 --> 00:01:36,690
bored of them some of those tools can be

00:01:33,910 --> 00:01:39,340
pretty tedious to configure and once

00:01:36,690 --> 00:01:42,280
you've managed to configure them just

00:01:39,340 --> 00:01:44,260
right you realize there's this tiny

00:01:42,280 --> 00:01:46,930
little mistake in your template and you

00:01:44,260 --> 00:01:49,690
have to start all over again for those

00:01:46,930 --> 00:01:54,310
guys who still remember cacti you guys

00:01:49,690 --> 00:01:56,860
know what I'm talking about um having to

00:01:54,310 --> 00:01:59,440
take the same steps over and over well

00:01:56,860 --> 00:02:01,510
practice makes perfect right but being a

00:01:59,440 --> 00:02:04,150
consultant having to do this on a daily

00:02:01,510 --> 00:02:06,420
basis over and over that gets old pretty

00:02:04,150 --> 00:02:10,330
fast

00:02:06,420 --> 00:02:11,890
so production is the equation of develop

00:02:10,330 --> 00:02:15,459
deployment I'm sorry

00:02:11,890 --> 00:02:18,280
plus monitoring plus backup but when you

00:02:15,459 --> 00:02:20,740
think about it when does box actually go

00:02:18,280 --> 00:02:22,090
into production is it when your boss has

00:02:20,740 --> 00:02:22,819
been breathing down your neck long

00:02:22,090 --> 00:02:25,849
enough so you

00:02:22,819 --> 00:02:29,950
promote your development machine or is

00:02:25,849 --> 00:02:29,950
it when the equation has been solved

00:02:30,730 --> 00:02:37,310
monitoring is also often neglected or

00:02:33,469 --> 00:02:42,260
even downplayed is it worth throwing

00:02:37,310 --> 00:02:44,900
money at this box still moved to

00:02:42,260 --> 00:02:51,019
production way too fast it happens all

00:02:44,900 --> 00:02:54,019
the time so if it's neglected what

00:02:51,019 --> 00:02:56,629
happened to our web servers cache it's

00:02:54,019 --> 00:02:59,299
there they have been declining but who

00:02:56,629 --> 00:03:03,799
knows how long we've neglected to

00:02:59,299 --> 00:03:05,269
monitor that specific metric and there

00:03:03,799 --> 00:03:07,790
could be a number of reasons for this

00:03:05,269 --> 00:03:11,540
and it often boils down to just basic

00:03:07,790 --> 00:03:14,829
human errors so why can't someone else

00:03:11,540 --> 00:03:18,530
do it if we don't like it

00:03:14,829 --> 00:03:20,780
well someone else sure but it's still

00:03:18,530 --> 00:03:23,180
the same tedious and repetitive job for

00:03:20,780 --> 00:03:25,400
someone else every once in a while

00:03:23,180 --> 00:03:30,379
people do make mistakes it's human

00:03:25,400 --> 00:03:39,709
nature we could keep an eye on our peers

00:03:30,379 --> 00:03:42,639
but nobody likes to be monitored what if

00:03:39,709 --> 00:03:47,180
we could have a single source of truth

00:03:42,639 --> 00:03:49,699
that way we could query our monitoring

00:03:47,180 --> 00:03:53,299
current monitoring configuration from

00:03:49,699 --> 00:03:55,370
central points of information we could

00:03:53,299 --> 00:03:57,349
just program our problems away

00:03:55,370 --> 00:04:01,299
instead of doing this manually over and

00:03:57,349 --> 00:04:05,239
over it wouldn't mean ending up with a

00:04:01,299 --> 00:04:10,340
lot less errors less false negatives

00:04:05,239 --> 00:04:15,379
less waking up at unholy hours only to

00:04:10,340 --> 00:04:21,019
get only to get to recovery alerts the

00:04:15,379 --> 00:04:23,120
very moment you log on to the VPN so we

00:04:21,019 --> 00:04:26,860
already have the technology available so

00:04:23,120 --> 00:04:33,050
why not use configuration management

00:04:26,860 --> 00:04:34,530
anyone using puppets already nice chef

00:04:33,050 --> 00:04:41,919
maybe

00:04:34,530 --> 00:04:45,789
just one ansible that's a few more stay

00:04:41,919 --> 00:04:49,810
tuned we have got you guys covered so

00:04:45,789 --> 00:04:53,710
puppets obviously for those who don't

00:04:49,810 --> 00:04:56,380
know puppets or haven't use it it's

00:04:53,710 --> 00:04:58,150
arguable arguably the single most

00:04:56,380 --> 00:05:01,900
awesome configuration management tool

00:04:58,150 --> 00:05:04,479
around I may be biased

00:05:01,900 --> 00:05:08,320
it has a concept of a central

00:05:04,479 --> 00:05:13,630
configuration management information

00:05:08,320 --> 00:05:15,930
store which is a service called puppet

00:05:13,630 --> 00:05:15,930
dB

00:05:16,289 --> 00:05:24,039
it also has a number of native resource

00:05:20,020 --> 00:05:27,970
types available among those the Maggio's

00:05:24,039 --> 00:05:30,880
resource types we can use those to to

00:05:27,970 --> 00:05:36,250
generate an Nagas configs and singer

00:05:30,880 --> 00:05:38,919
convicts those resource types are based

00:05:36,250 --> 00:05:42,010
on some old magnate er codes that was

00:05:38,919 --> 00:05:44,889
once written by Luc anis and CEO of

00:05:42,010 --> 00:05:46,979
Publius but it hasn't evolved over the

00:05:44,889 --> 00:05:46,979
years

00:05:51,690 --> 00:06:03,340
this one is a example of exporting a

00:05:56,229 --> 00:06:07,680
resource of a Nagios server with

00:06:03,340 --> 00:06:13,930
additional additionally a service

00:06:07,680 --> 00:06:20,159
checking in this case which is based on

00:06:13,930 --> 00:06:22,840
those native resource types on the

00:06:20,159 --> 00:06:24,789
monitoring server side we have to

00:06:22,840 --> 00:06:29,889
collect the information that has been

00:06:24,789 --> 00:06:32,259
exported by the server notes this is the

00:06:29,889 --> 00:06:36,599
part that triggers the nag nadir and

00:06:32,259 --> 00:06:36,599
fudou - to build you're using a convicts

00:06:39,060 --> 00:06:43,930
so when you're dealing with a with a

00:06:42,009 --> 00:06:46,479
cluster when you're scaling it up and

00:06:43,930 --> 00:06:50,289
down you still have to dig many

00:06:46,479 --> 00:06:53,139
decommission some of those notes dealing

00:06:50,289 --> 00:06:55,810
with that could be a pain you have to

00:06:53,139 --> 00:06:59,139
move remove some lingering artifacts and

00:06:55,810 --> 00:07:02,139
if you forgot to actually remove those

00:06:59,139 --> 00:07:05,500
in your config you have to do it

00:07:02,139 --> 00:07:10,509
manually from the database and it's not

00:07:05,500 --> 00:07:13,080
recommended it's really horrible could

00:07:10,509 --> 00:07:16,840
be you could be one of your colleagues

00:07:13,080 --> 00:07:19,080
forgot to do it but if it happens too

00:07:16,840 --> 00:07:19,080
bad

00:07:19,860 --> 00:07:26,229
and once the server has been the

00:07:22,060 --> 00:07:30,160
decommissioned it still have to run your

00:07:26,229 --> 00:07:32,889
agent on the single server again it

00:07:30,160 --> 00:07:35,820
needs to collect the exported data then

00:07:32,889 --> 00:07:40,630
that was exported by the by the note

00:07:35,820 --> 00:07:43,210
that was about to be commissioned so now

00:07:40,630 --> 00:07:50,169
it can be actually removed on the a

00:07:43,210 --> 00:07:53,099
single server doing this kind of puppet

00:07:50,169 --> 00:07:56,949
runs can take can take a quite a while

00:07:53,099 --> 00:08:04,930
I've seen some rare cases where this

00:07:56,949 --> 00:08:07,570
took up to an hour to complete one of

00:08:04,930 --> 00:08:12,639
the downsides of this noggin a turd

00:08:07,570 --> 00:08:14,800
library is that the configuration path

00:08:12,639 --> 00:08:19,449
can't be changed without altering the

00:08:14,800 --> 00:08:24,130
code it's not configured it's not

00:08:19,449 --> 00:08:29,949
configurable unless you make you make a

00:08:24,130 --> 00:08:33,159
patch sim linking may do the trick but

00:08:29,949 --> 00:08:35,620
with a single configuration residing in

00:08:33,159 --> 00:08:38,320
a different path and having a new

00:08:35,620 --> 00:08:40,800
configuration format this was no longer

00:08:38,320 --> 00:08:40,800
acceptable

00:08:42,990 --> 00:08:50,980
so it was time to move away from the old

00:08:46,870 --> 00:08:53,320
Maggie Elsa research sites and instead

00:08:50,980 --> 00:08:55,440
we have two puppet modules available for

00:08:53,320 --> 00:08:55,440
you guys

00:08:58,259 --> 00:09:05,380
the original puppet is in a two module

00:09:02,050 --> 00:09:07,209
was written by Nick Chappell without his

00:09:05,380 --> 00:09:13,120
efforts we wouldn't have this module

00:09:07,209 --> 00:09:15,370
available to us today for those guys

00:09:13,120 --> 00:09:18,940
using different configuration tools

00:09:15,370 --> 00:09:22,870
we've got you covered so patches are

00:09:18,940 --> 00:09:26,170
welcome please give give those give

00:09:22,870 --> 00:09:28,680
those repositories a try and feedback is

00:09:26,170 --> 00:09:28,680
always appreciated

00:09:32,430 --> 00:09:41,680
so having puppet as a central point of

00:09:37,029 --> 00:09:44,730
truth here is a basic example of one

00:09:41,680 --> 00:09:47,829
such infrastructure managed by puppets

00:09:44,730 --> 00:09:49,959
on the right we have a web server a

00:09:47,829 --> 00:09:53,649
database server and then is seeing a two

00:09:49,959 --> 00:09:57,130
server at the center we have a our

00:09:53,649 --> 00:10:00,130
puppet server with three services

00:09:57,130 --> 00:10:02,740
available being the puppet server the

00:10:00,130 --> 00:10:04,269
puppet DB and the Postgres being the

00:10:02,740 --> 00:10:13,839
backends for puppet

00:10:04,269 --> 00:10:16,360
DB when exporting some information on

00:10:13,839 --> 00:10:20,350
the web server we just run a puppet

00:10:16,360 --> 00:10:22,990
agent and it will send back some facts

00:10:20,350 --> 00:10:28,870
some note reports and stuff like that

00:10:22,990 --> 00:10:31,350
back to the is to the puppet server that

00:10:28,870 --> 00:10:38,709
information is being fed to Papa DB and

00:10:31,350 --> 00:10:42,100
it stores its in Postgres this

00:10:38,709 --> 00:10:44,860
information that is available in the

00:10:42,100 --> 00:10:47,949
puppet DB can afterwards ve collected on

00:10:44,860 --> 00:10:50,829
the single server and that information

00:10:47,949 --> 00:10:53,730
is being used to generate the singer

00:10:50,829 --> 00:10:53,730
config files

00:10:56,330 --> 00:11:01,710
so let's talk a little bit about a

00:10:59,130 --> 00:11:04,050
signature I'm going I'm not going to

00:11:01,710 --> 00:11:07,590
dive into all the new features and

00:11:04,050 --> 00:11:09,810
nitty-gritty but instead I do want to

00:11:07,590 --> 00:11:17,180
give a few things that could help us

00:11:09,810 --> 00:11:20,840
automate its configuration two of those

00:11:17,180 --> 00:11:25,590
the apply rules and the assign rules

00:11:20,840 --> 00:11:30,140
these are ones I usually use to

00:11:25,590 --> 00:11:34,920
configure missing so instead of

00:11:30,140 --> 00:11:41,150
repeating a block of of config I can use

00:11:34,920 --> 00:11:44,520
these to assign a surface or a downtime

00:11:41,150 --> 00:11:48,240
scheduled time time that is to a certain

00:11:44,520 --> 00:11:53,280
host or a range of hosts using just one

00:11:48,240 --> 00:11:58,080
simple little block of code so in this

00:11:53,280 --> 00:12:01,890
case I'm applying the ping for service

00:11:58,080 --> 00:12:05,990
to just about any host address known to

00:12:01,890 --> 00:12:12,150
the same server and the same goes for

00:12:05,990 --> 00:12:17,430
ping 6 which is being for ipv6 what add

00:12:12,150 --> 00:12:19,500
has the class that it's only going to be

00:12:17,430 --> 00:12:24,110
applied if the server has an IP address

00:12:19,500 --> 00:12:24,110
on ipv6 available

00:12:28,589 --> 00:12:36,279
in this little snippets I'm assigning

00:12:32,860 --> 00:12:38,620
the SSH service to every known host with

00:12:36,279 --> 00:12:43,690
the exception that they have to be here

00:12:38,620 --> 00:12:47,050
running Linux so this automatically

00:12:43,690 --> 00:12:56,380
detects every hosts available to a

00:12:47,050 --> 00:12:59,589
singer not just one group host group

00:12:56,380 --> 00:13:09,310
assignments same deal you can use some

00:12:59,589 --> 00:13:11,830
reg X so again instead of repeating over

00:13:09,310 --> 00:13:14,110
and over you have just one little

00:13:11,830 --> 00:13:17,529
compact config file that does all the

00:13:14,110 --> 00:13:21,180
magic for you it doesn't get much easier

00:13:17,529 --> 00:13:26,890
than this so let let's talk about

00:13:21,180 --> 00:13:30,040
exported resources again in this example

00:13:26,890 --> 00:13:36,700
I'm exporting the single host object on

00:13:30,040 --> 00:13:40,750
the web server nodes this has a hash

00:13:36,700 --> 00:13:42,850
table called VARs available which can be

00:13:40,750 --> 00:13:45,400
used to send some additional information

00:13:42,850 --> 00:13:51,540
to the puppet server which is going to

00:13:45,400 --> 00:13:55,890
be stored in the puppet dB those

00:13:51,540 --> 00:14:00,220
variables can be populated from factor

00:13:55,890 --> 00:14:06,520
so if we can fetch values from factor we

00:14:00,220 --> 00:14:09,130
can also use custom facts so how about

00:14:06,520 --> 00:14:12,750
these two I think these can be pretty

00:14:09,130 --> 00:14:17,550
interesting to work with we have a

00:14:12,750 --> 00:14:17,550
publicist and puppet modules available

00:14:20,730 --> 00:14:29,140
this is a hack it's ugly I know I'm well

00:14:25,060 --> 00:14:33,940
aware I've waited this helping wall a

00:14:29,140 --> 00:14:36,220
few minutes so yeah it's ugly but at

00:14:33,940 --> 00:14:39,930
least it works and it's it was better

00:14:36,220 --> 00:14:39,930
than doing this manually

00:14:46,389 --> 00:14:53,480
this is where the actual facts are being

00:14:50,019 --> 00:14:56,350
populated so from the text file that

00:14:53,480 --> 00:14:59,959
contains a list of classes we can

00:14:56,350 --> 00:15:05,389
retrieve the classes the subclasses and

00:14:59,959 --> 00:15:07,399
from that we can subtract the modules so

00:15:05,389 --> 00:15:10,040
what's in those facts as you can see

00:15:07,399 --> 00:15:11,660
this one contains a list of modules that

00:15:10,040 --> 00:15:18,199
have been applied on the peppered moths

00:15:11,660 --> 00:15:22,069
on the single server in this case same

00:15:18,199 --> 00:15:23,990
goes for the subclasses and classes this

00:15:22,069 --> 00:15:26,089
one has been trimmed down there's a lot

00:15:23,990 --> 00:15:33,529
more going on but it didn't fit on

00:15:26,089 --> 00:15:36,230
screen so so going back to our exported

00:15:33,529 --> 00:15:39,949
host object we can add those facts to

00:15:36,230 --> 00:15:43,370
the list well sadly with puppetry I have

00:15:39,949 --> 00:15:47,480
to do some extra massaging in order to

00:15:43,370 --> 00:15:53,810
get this information just right again

00:15:47,480 --> 00:15:55,790
another hack and now that our host has

00:15:53,810 --> 00:15:58,760
been exported we can collect it on

00:15:55,790 --> 00:16:01,100
leasing a new server and actually use

00:15:58,760 --> 00:16:06,170
that new information that has been made

00:16:01,100 --> 00:16:09,069
available in this case we're going to

00:16:06,170 --> 00:16:14,269
monitor every available MySQL server

00:16:09,069 --> 00:16:19,490
using just a search on the subclass

00:16:14,269 --> 00:16:22,010
MySQL server like before it doesn't

00:16:19,490 --> 00:16:25,100
matter if we have one node or a whole

00:16:22,010 --> 00:16:27,980
cluster of nodes they will all be

00:16:25,100 --> 00:16:33,260
detected and automatically monitored

00:16:27,980 --> 00:16:36,110
using the check TCP we could all you we

00:16:33,260 --> 00:16:37,670
could always use check MySQL as well but

00:16:36,110 --> 00:16:40,449
that requires some additional

00:16:37,670 --> 00:16:40,449
configuration

00:16:44,930 --> 00:16:52,680
again sadly this is just the dirty hack

00:16:47,990 --> 00:16:57,630
it needs workarounds it works but it's

00:16:52,680 --> 00:17:00,480
not pretty even more so it's actually

00:16:57,630 --> 00:17:03,720
duplicating information that is actually

00:17:00,480 --> 00:17:05,670
already available in Papa TV family B

00:17:03,720 --> 00:17:08,910
already knows what's running on the

00:17:05,670 --> 00:17:17,790
nodes so why not just use that

00:17:08,910 --> 00:17:22,470
information so there's a better way we

00:17:17,790 --> 00:17:25,980
can use Papa D B's RESTful API to query

00:17:22,470 --> 00:17:30,750
the information we actually need without

00:17:25,980 --> 00:17:34,340
having to duplicate that so here's a

00:17:30,750 --> 00:17:41,660
very simple query to list every node

00:17:34,340 --> 00:17:44,580
unknown to do puppets DB because the

00:17:41,660 --> 00:17:47,400
particular class settings is available

00:17:44,580 --> 00:17:51,960
on each and every node without even

00:17:47,400 --> 00:17:58,500
running a puppet agent so this way we

00:17:51,960 --> 00:18:02,240
are sure it's an actual server and lucky

00:17:58,500 --> 00:18:02,240
for us there's a puppet module for that

00:18:03,230 --> 00:18:12,030
it's written by Eric from Spotify and

00:18:08,970 --> 00:18:13,740
it's a pretty awesome module and it does

00:18:12,030 --> 00:18:21,360
just exactly what it says on the tin

00:18:13,740 --> 00:18:24,480
query the puppet DB so let's again start

00:18:21,360 --> 00:18:27,690
by listing all available nodes I think

00:18:24,480 --> 00:18:33,090
this is much much more readable than the

00:18:27,690 --> 00:18:38,610
current version so if we actually try

00:18:33,090 --> 00:18:41,160
this there we go those are the notes

00:18:38,610 --> 00:18:44,910
that were defined in our small little

00:18:41,160 --> 00:18:47,010
environments we have the web server we

00:18:44,910 --> 00:18:48,860
have the database server the kensic a

00:18:47,010 --> 00:18:52,790
king a server and the puppet server

00:18:48,860 --> 00:18:57,680
right there we can use this information

00:18:52,790 --> 00:18:57,680
throughout just about any pub manifest

00:19:00,400 --> 00:19:07,770
this also works fine for finding out

00:19:03,540 --> 00:19:12,400
which notes are running a particular

00:19:07,770 --> 00:19:14,320
class or a subclass or even a module in

00:19:12,400 --> 00:19:25,260
this case it's just one server the

00:19:14,320 --> 00:19:29,170
database server that is running MySQL so

00:19:25,260 --> 00:19:31,510
using puppet DB query there is no more

00:19:29,170 --> 00:19:36,100
need for exported resources at the cost

00:19:31,510 --> 00:19:39,730
of just one tiny little manifest which

00:19:36,100 --> 00:19:42,730
is only applied on the single server so

00:19:39,730 --> 00:19:46,270
if the note runs puppets it doesn't even

00:19:42,730 --> 00:19:50,290
need to be included it doesn't even need

00:19:46,270 --> 00:19:54,250
to include any King classes anymore

00:19:50,290 --> 00:19:57,040
compared to the previous solution we can

00:19:54,250 --> 00:20:04,540
instead just rely on the puppet DB to

00:19:57,040 --> 00:20:06,670
provide the information we need so in

00:20:04,540 --> 00:20:13,080
summary we no longer need to export it

00:20:06,670 --> 00:20:16,000
to resources which was a pain anyway and

00:20:13,080 --> 00:20:19,720
it's somewhat automatically works out of

00:20:16,000 --> 00:20:24,640
the box and at least it's one part of

00:20:19,720 --> 00:20:26,710
the equation that we solved also purging

00:20:24,640 --> 00:20:29,170
decommission notes there's no need for

00:20:26,710 --> 00:20:33,820
that because it always builds up a new

00:20:29,170 --> 00:20:41,710
list with a current number of notes that

00:20:33,820 --> 00:20:44,890
has been known to pop dB so in the end

00:20:41,710 --> 00:20:48,040
using puppets anything it - I've learned

00:20:44,890 --> 00:20:50,340
to learn I've learned to love monitoring

00:20:48,040 --> 00:20:50,340
again

00:20:55,630 --> 00:21:12,010
any questions no questions see the

00:21:08,980 --> 00:21:16,390
phlume through it pretty fast my

00:21:12,010 --> 00:21:19,230
apologies for that it's a very long

00:21:16,390 --> 00:21:19,230

YouTube URL: https://www.youtube.com/watch?v=j2kG8F7rixw


