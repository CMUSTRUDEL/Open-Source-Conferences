Title: OSMC 2013 | Rihards Olups: Zabbix: A Practical Demo (ENG)
Publication date: 2015-01-07
Playlist: OSMC 2013 | Open Source Monitoring Conference
Description: 
	While having a high level overview of how a system works is useful, nothing can explain better how system works than seeing it in action. This talk will be like a practical quick start, demonstrating actual basic configuration of Zabbix starting with data gathering and ending with receiving an alert.
Captions: 
	00:00:06,560 --> 00:00:11,719
and thanks to those who were able to

00:00:08,870 --> 00:00:15,469
wake up this morning I know that must

00:00:11,719 --> 00:00:17,330
have been a challenge and so yeah today

00:00:15,469 --> 00:00:18,619
I'll try to talk about zabbix and also

00:00:17,330 --> 00:00:23,330
give you a practical demonstration of

00:00:18,619 --> 00:00:24,769
what it looks like so this time I

00:00:23,330 --> 00:00:26,449
wouldn't ask how many people are using

00:00:24,769 --> 00:00:28,939
zabbix or how many know what it is

00:00:26,449 --> 00:00:30,410
usually it's that in this event people

00:00:28,939 --> 00:00:34,280
have heard about zabbix but they haven't

00:00:30,410 --> 00:00:37,040
really used it so this time I decided

00:00:34,280 --> 00:00:38,780
that it's time to risk it and try to

00:00:37,040 --> 00:00:43,070
show you how what's a bit actually looks

00:00:38,780 --> 00:00:45,110
like before we look at the zabbix itself

00:00:43,070 --> 00:00:48,530
let's talk about briefly what zabbix is

00:00:45,110 --> 00:00:50,420
and one thing which turned to be pretty

00:00:48,530 --> 00:00:52,730
important actually is that zabbix is a

00:00:50,420 --> 00:00:54,380
true open source solution so we don't

00:00:52,730 --> 00:00:56,270
have open cool we don't have Enterprise

00:00:54,380 --> 00:00:58,040
version everything you get that's the

00:00:56,270 --> 00:01:01,550
same version that everybody else is

00:00:58,040 --> 00:01:03,850
getting and engines recently went open

00:01:01,550 --> 00:01:06,530
core and already many users complained I

00:01:03,850 --> 00:01:09,020
think the and rest talk from yesterday

00:01:06,530 --> 00:01:11,240
was very enlightening on what can happen

00:01:09,020 --> 00:01:16,189
if you go open core it's a it's a risk

00:01:11,240 --> 00:01:20,810
always so we're not that and feel free

00:01:16,189 --> 00:01:23,299
to poplar eyes this opinion recently had

00:01:20,810 --> 00:01:26,090
as a box conference as well and there

00:01:23,299 --> 00:01:28,490
was one moment which seems to be very

00:01:26,090 --> 00:01:31,880
related so maybe we can have that audio

00:01:28,490 --> 00:01:40,729
at this point three let's let's see

00:01:31,880 --> 00:01:42,979
whether I can show you promised we we we

00:01:40,729 --> 00:01:47,859
have only one product and now promised

00:01:42,979 --> 00:01:50,689
our users is we are staying open source

00:01:47,859 --> 00:01:53,509
so that was the main person behind

00:01:50,689 --> 00:01:56,179
zabbix Alex a and that's our public

00:01:53,509 --> 00:02:01,749
promise so we're not going open core we

00:01:56,179 --> 00:02:04,700
don't like it zabbix is also scalable

00:02:01,749 --> 00:02:07,189
it's working in several really large

00:02:04,700 --> 00:02:08,479
environments and I'll talk about that a

00:02:07,189 --> 00:02:14,569
bit more later I'll try to give you some

00:02:08,479 --> 00:02:15,980
numbers as well it is providing all the

00:02:14,569 --> 00:02:17,629
functionality in a single piece of

00:02:15,980 --> 00:02:19,909
software so you don't have to piece

00:02:17,629 --> 00:02:20,660
different things together yourself but

00:02:19,909 --> 00:02:22,790
at the same time

00:02:20,660 --> 00:02:24,560
it's also very flexible you can push

00:02:22,790 --> 00:02:25,880
custom data is a box and you can get

00:02:24,560 --> 00:02:27,620
data out of zabbix in many different

00:02:25,880 --> 00:02:29,900
ways you can open tickets and ticketing

00:02:27,620 --> 00:02:32,120
system so all the normal customization

00:02:29,900 --> 00:02:37,880
and expanding options that most of you

00:02:32,120 --> 00:02:39,470
here are used another slide from these

00:02:37,880 --> 00:02:43,010
lobbies conference and this is about the

00:02:39,470 --> 00:02:45,200
the automating things in a way you might

00:02:43,010 --> 00:02:46,730
know that the Google on the YouTube on

00:02:45,200 --> 00:02:49,280
the videos they have a way to

00:02:46,730 --> 00:02:51,620
automatically give subtitles to videos

00:02:49,280 --> 00:02:54,050
where they try to speech recognize you

00:02:51,620 --> 00:02:56,660
this is person from Vienna and what they

00:02:54,050 --> 00:02:59,720
came up with was and find out what sex

00:02:56,660 --> 00:03:02,960
was actually well aware obviously he did

00:02:59,720 --> 00:03:09,230
not say that so sometimes the automatic

00:03:02,960 --> 00:03:11,500
thing might fail and he told me that his

00:03:09,230 --> 00:03:18,200
father was the one who found this this

00:03:11,500 --> 00:03:21,680
subtitle thingy zabbix is also becoming

00:03:18,200 --> 00:03:23,570
more popular and this is quite happening

00:03:21,680 --> 00:03:27,130
quite rapidly one thing is that it's

00:03:23,570 --> 00:03:30,200
pretty much the saturn solution in japan

00:03:27,130 --> 00:03:32,000
we have lots of large users there and

00:03:30,200 --> 00:03:34,760
it's fully translated to japanese and

00:03:32,000 --> 00:03:38,600
all that important things that are

00:03:34,760 --> 00:03:40,700
relevant for different markets it's used

00:03:38,600 --> 00:03:43,340
by several of the really biggest

00:03:40,700 --> 00:03:46,209
companies in the world and this does

00:03:43,340 --> 00:03:48,440
help push us to work on the scalability

00:03:46,209 --> 00:03:50,450
the bigger the environment that zabbix

00:03:48,440 --> 00:03:52,250
is being used to today the bigger it

00:03:50,450 --> 00:03:56,930
will be the one that will be able to be

00:03:52,250 --> 00:03:58,850
used more oh very very brief history so

00:03:56,930 --> 00:04:01,340
actually the solution is not new it's

00:03:58,850 --> 00:04:04,100
pretty mature so development officially

00:04:01,340 --> 00:04:06,440
started in nineteen ninety eight then it

00:04:04,100 --> 00:04:09,320
was provided publicly as an open source

00:04:06,440 --> 00:04:13,700
version in 2001 so that's like what more

00:04:09,320 --> 00:04:16,190
than 30 years ago in 2005 a company was

00:04:13,700 --> 00:04:18,320
founded to provide services for it it

00:04:16,190 --> 00:04:20,030
happened in Latvia or wetland for this

00:04:18,320 --> 00:04:22,040
region usually when I'm talking to

00:04:20,030 --> 00:04:24,410
people from Germany I say Latvia and

00:04:22,040 --> 00:04:26,810
then add Lakeland if I do this if I talk

00:04:24,410 --> 00:04:31,120
to people from France I had litany if I

00:04:26,810 --> 00:04:31,120
talk to people from the USA i add europe

00:04:33,020 --> 00:04:38,520
then last year we open at a branch in

00:04:36,330 --> 00:04:40,440
Japan which is slightly uncommon for

00:04:38,520 --> 00:04:42,000
companies from Latvia or probably we are

00:04:40,440 --> 00:04:44,700
the first company from Latvia which

00:04:42,000 --> 00:04:51,210
expands to Japan directly as mentioned

00:04:44,700 --> 00:04:55,020
hey Japanese like us and now on to the

00:04:51,210 --> 00:04:56,550
risky part but before I do that I'll

00:04:55,020 --> 00:04:59,420
have one question who came here to see

00:04:56,550 --> 00:05:02,370
how the practical demonstration fails

00:04:59,420 --> 00:05:04,430
one anybody else okay so we have one

00:05:02,370 --> 00:05:07,220
honest person in the room that's good

00:05:04,430 --> 00:05:10,140
pregnyl dense regions tend to fail and

00:05:07,220 --> 00:05:11,700
one on my list of not to do for

00:05:10,140 --> 00:05:13,910
presentations there's a like practical

00:05:11,700 --> 00:05:17,430
demonstration that's number one and

00:05:13,910 --> 00:05:21,300
before I go on there is another quick

00:05:17,430 --> 00:05:32,460
thing most of you probably have seen

00:05:21,300 --> 00:05:39,690
this one dear mama comma fix aunt to eat

00:05:32,460 --> 00:05:40,980
that delete that delete that I think

00:05:39,690 --> 00:05:44,810
it's picking up a little bit echo here

00:05:40,980 --> 00:05:44,810
delete select all

00:05:50,490 --> 00:05:55,539
so that was windows with the speech

00:05:52,720 --> 00:05:57,400
recognition demonstration I hope mine

00:05:55,539 --> 00:06:01,300
will not go as disastrously I wouldn't

00:05:57,400 --> 00:06:02,860
need any audio anymore thanks so let's

00:06:01,300 --> 00:06:05,500
see maybe mine goes will be the better

00:06:02,860 --> 00:06:09,780
but before we go on with the actual

00:06:05,500 --> 00:06:09,780
administration let's take a look at what

00:06:10,050 --> 00:06:15,039
the terms in zabbix mean also for a

00:06:13,569 --> 00:06:16,960
demonstration I wouldn't look at all the

00:06:15,039 --> 00:06:18,610
low-level stuff like installing it

00:06:16,960 --> 00:06:21,280
getting it running what the components

00:06:18,610 --> 00:06:23,159
are I'll try to look at the actual usage

00:06:21,280 --> 00:06:26,080
of zabbix from different aspects and

00:06:23,159 --> 00:06:28,270
before we go on with that so in subjects

00:06:26,080 --> 00:06:30,099
we have a term host a host usually is a

00:06:28,270 --> 00:06:34,360
single server single natural device or

00:06:30,099 --> 00:06:36,580
something similar then we have a term

00:06:34,360 --> 00:06:38,440
item an item is a single data source cpu

00:06:36,580 --> 00:06:41,229
load free memory in this example that

00:06:38,440 --> 00:06:43,090
will be CP load to begin with in

00:06:41,229 --> 00:06:44,680
subjects we have the threshold the

00:06:43,090 --> 00:06:47,229
problem conditions that we separated

00:06:44,680 --> 00:06:49,719
from the items which are the data

00:06:47,229 --> 00:06:51,310
sources and recall them triggers so a

00:06:49,719 --> 00:06:55,150
trigger would be the one defining what a

00:06:51,310 --> 00:06:57,370
problem is if the problem happens we

00:06:55,150 --> 00:06:59,409
generate invent and then a configuration

00:06:57,370 --> 00:07:02,110
entity called an action the green one

00:06:59,409 --> 00:07:04,150
has conditions the gray ones if the

00:07:02,110 --> 00:07:06,610
conditions match then we do we perform

00:07:04,150 --> 00:07:08,199
some operation when sending a message

00:07:06,610 --> 00:07:09,639
obviously we can easily include all kind

00:07:08,199 --> 00:07:11,949
of information like the latest value

00:07:09,639 --> 00:07:15,599
from the item or lots of other things

00:07:11,949 --> 00:07:15,599
that I will try to mention later as well

00:07:15,779 --> 00:07:20,080
there's also a concept of doing

00:07:18,340 --> 00:07:21,909
templates so you can create

00:07:20,080 --> 00:07:27,610
configuration once and then apply to a

00:07:21,909 --> 00:07:33,029
lot of hosts easily in one go and well

00:07:27,610 --> 00:07:33,029
let's see howdy how we could do that

00:07:33,960 --> 00:07:41,259
this is the zabbix front and rear face

00:07:37,000 --> 00:07:43,479
and what I'm running right now is a

00:07:41,259 --> 00:07:44,889
virtual appliance so that's easy to use

00:07:43,479 --> 00:07:47,590
yourself as well without installing it

00:07:44,889 --> 00:07:50,620
manually I will start by creating a new

00:07:47,590 --> 00:07:52,419
host so I will click around the

00:07:50,620 --> 00:07:56,259
interface at this point and creating a

00:07:52,419 --> 00:07:59,620
new host let's say i'll call it in a

00:07:56,259 --> 00:08:01,779
very innovative way group a membership

00:07:59,620 --> 00:08:03,910
here on the left-hand side are groups

00:08:01,779 --> 00:08:07,750
the host will be in so i will add this

00:08:03,910 --> 00:08:13,030
close to the Linux servers group and

00:08:07,750 --> 00:08:20,590
let's say I will use an IP address for

00:08:13,030 --> 00:08:22,360
this host as well so far that was easy I

00:08:20,590 --> 00:08:27,280
have a host but this host is completely

00:08:22,360 --> 00:08:28,900
empty so it's also fairly useless to

00:08:27,280 --> 00:08:30,820
gather any data on it i would need at

00:08:28,900 --> 00:08:33,700
least one item so that's what i'm going

00:08:30,820 --> 00:08:35,800
to create next an item was a data source

00:08:33,700 --> 00:08:40,090
so let's say i'll start with a simple

00:08:35,800 --> 00:08:41,890
thing again so that's cpu load for this

00:08:40,090 --> 00:08:43,750
item i will be using a native zabbix

00:08:41,890 --> 00:08:45,940
agent I'm not showing you how to install

00:08:43,750 --> 00:08:48,520
it how to run it how it works but we

00:08:45,940 --> 00:08:49,930
have we have native agents for many

00:08:48,520 --> 00:08:52,900
platforms for pretty much all of them

00:08:49,930 --> 00:08:54,910
and in this case native agent is already

00:08:52,900 --> 00:08:56,740
on this system so that's what this item

00:08:54,910 --> 00:09:01,540
will be using this is not a script or

00:08:56,740 --> 00:09:03,190
anything else that you have to run an

00:09:01,540 --> 00:09:05,620
item key is a unique identifier which

00:09:03,190 --> 00:09:08,890
tells the exact LD tells e zabbix agent

00:09:05,620 --> 00:09:10,660
how to obtain this data so in this case

00:09:08,890 --> 00:09:14,650
that system cpu load which is just an

00:09:10,660 --> 00:09:17,250
internal identifier there's a decimal

00:09:14,650 --> 00:09:20,310
part so i change the data type and

00:09:17,250 --> 00:09:22,600
that's about it i am creating an item

00:09:20,310 --> 00:09:24,040
I'll let the side and collect data for a

00:09:22,600 --> 00:09:27,300
while I will not look at it right now

00:09:24,040 --> 00:09:31,480
we'll return to that in a moment but

00:09:27,300 --> 00:09:33,820
instead I will also start using

00:09:31,480 --> 00:09:37,780
templating system right away which I'll

00:09:33,820 --> 00:09:39,520
benefit from a bit later so on the

00:09:37,780 --> 00:09:44,830
template suction I'm creating a template

00:09:39,520 --> 00:09:47,050
let's say again extremely innovative

00:09:44,830 --> 00:09:49,480
name I'm adding it to the templates

00:09:47,050 --> 00:09:51,760
group so the group's the template or

00:09:49,480 --> 00:09:53,200
host is in our on the left-hand side the

00:09:51,760 --> 00:09:55,320
available ones are on the right hand

00:09:53,200 --> 00:09:55,320
side

00:09:58,200 --> 00:10:02,700
this template is completely empty so I

00:10:00,450 --> 00:10:05,190
could manually create a cpu load item

00:10:02,700 --> 00:10:07,800
again but if I had lots of items like

00:10:05,190 --> 00:10:11,100
this that would be quite a task and also

00:10:07,800 --> 00:10:13,890
more error-prone so instead i can copy

00:10:11,100 --> 00:10:15,360
entities around so in this case i can

00:10:13,890 --> 00:10:20,250
take the cpu load item which i created

00:10:15,360 --> 00:10:22,680
on the host and i can copy it then i

00:10:20,250 --> 00:10:26,280
would choose the templates and the

00:10:22,680 --> 00:10:28,230
template that i just created this can be

00:10:26,280 --> 00:10:29,640
done between hose between template from

00:10:28,230 --> 00:10:31,050
host a template like I'm doing right now

00:10:29,640 --> 00:10:34,710
from template a host that's not

00:10:31,050 --> 00:10:36,510
restricted in any way so after copying

00:10:34,710 --> 00:10:38,250
it I can see details the item was

00:10:36,510 --> 00:10:45,300
created in this case was created on the

00:10:38,250 --> 00:10:46,860
template and now for this host I will

00:10:45,300 --> 00:10:48,420
change the template linkage so we'll

00:10:46,860 --> 00:10:53,270
make this host controlled by the

00:10:48,420 --> 00:10:56,850
template which was great initially and

00:10:53,270 --> 00:10:58,620
choosing the template which had the item

00:10:56,850 --> 00:11:02,520
also copied over from the same host

00:10:58,620 --> 00:11:04,650
after updating the host properties in

00:11:02,520 --> 00:11:08,310
the details I can see that the CPU load

00:11:04,650 --> 00:11:10,170
item on the server host was updated when

00:11:08,310 --> 00:11:12,150
items are updated this way they don't

00:11:10,170 --> 00:11:14,340
lose any data so anything that was

00:11:12,150 --> 00:11:15,930
collected before would be still

00:11:14,340 --> 00:11:19,710
available in database so available for

00:11:15,930 --> 00:11:21,720
viewing and everything else this allows

00:11:19,710 --> 00:11:24,150
to reconfigure template linkage easily

00:11:21,720 --> 00:11:25,650
you have to think a bit about how you do

00:11:24,150 --> 00:11:31,440
it obviously but you will not lose the

00:11:25,650 --> 00:11:33,960
date if you do it properly I have an

00:11:31,440 --> 00:11:37,770
item i have a template which is giving

00:11:33,960 --> 00:11:40,560
me this item and now i would like to

00:11:37,770 --> 00:11:43,410
create a trigger as well i will do this

00:11:40,560 --> 00:11:46,650
on the template level so a trigger was

00:11:43,410 --> 00:11:48,780
separate problem condition in zabbix

00:11:46,650 --> 00:11:51,120
items only collect data they don't care

00:11:48,780 --> 00:11:52,710
about what that data contains good bad

00:11:51,120 --> 00:11:56,520
doesn't matter it's some data it's some

00:11:52,710 --> 00:11:59,900
values and when creating a trigger have

00:11:56,520 --> 00:12:02,280
to give some name to it as well again so

00:11:59,900 --> 00:12:05,580
something very simple like CPU low to

00:12:02,280 --> 00:12:07,650
high then a couple of clicks later I can

00:12:05,580 --> 00:12:11,190
find the item that I want a reference in

00:12:07,650 --> 00:12:12,060
this trigger expression and I can decide

00:12:11,190 --> 00:12:14,700
that if the

00:12:12,060 --> 00:12:17,670
value exceeds 1 in this case then that

00:12:14,700 --> 00:12:19,620
will be a problem triggers ends up

00:12:17,670 --> 00:12:23,220
because they use this trigger expression

00:12:19,620 --> 00:12:27,450
language which in general is pretty

00:12:23,220 --> 00:12:29,070
simple but there's also a helper as you

00:12:27,450 --> 00:12:30,900
saw before where you can click around

00:12:29,070 --> 00:12:32,970
and it will generate the expression for

00:12:30,900 --> 00:12:34,320
you this is an extremely simple

00:12:32,970 --> 00:12:36,390
expression i'll try to mention later

00:12:34,320 --> 00:12:41,100
that there are some other more

00:12:36,390 --> 00:12:43,080
complicated options as well in zabbix we

00:12:41,100 --> 00:12:44,610
also have 670 levels available for

00:12:43,080 --> 00:12:46,560
triggers you don't have to use them all

00:12:44,610 --> 00:12:48,330
very often people I mean coming from

00:12:46,560 --> 00:12:50,190
different monitoring solutions say like

00:12:48,330 --> 00:12:52,590
to sorry level should be enough for

00:12:50,190 --> 00:12:53,910
everybody we have six you don't have to

00:12:52,590 --> 00:12:55,740
use them you can say that in your

00:12:53,910 --> 00:12:59,250
environment everything is only high and

00:12:55,740 --> 00:13:00,630
disaster but recently we had a one

00:12:59,250 --> 00:13:03,390
company come and say hey can we have

00:13:00,630 --> 00:13:05,940
more than 6 30 levels or like no not yet

00:13:03,390 --> 00:13:08,790
but we'll think about that so this one

00:13:05,940 --> 00:13:28,770
will be worrying CPU low to high nothing

00:13:08,790 --> 00:13:30,480
very critical yeah this one it's

00:13:28,770 --> 00:13:33,090
slightly specific and it's primarily

00:13:30,480 --> 00:13:34,980
meant for log file monitoring in normal

00:13:33,090 --> 00:13:36,690
monitoring if we receive values which

00:13:34,980 --> 00:13:39,330
are above our threshold like in this

00:13:36,690 --> 00:13:41,250
example if cpu load is above one we

00:13:39,330 --> 00:13:43,410
don't do anything after that if we would

00:13:41,250 --> 00:13:44,820
enable this any value arriving above the

00:13:43,410 --> 00:13:46,860
threshold of one would generate a new

00:13:44,820 --> 00:13:48,510
problem event with a CPL oh that's

00:13:46,860 --> 00:13:51,180
really down totally useless but not

00:13:48,510 --> 00:13:52,470
common to do where this is useful if

00:13:51,180 --> 00:13:54,150
you're monitoring a log fell and you are

00:13:52,470 --> 00:13:55,530
already filtering for problem injuries

00:13:54,150 --> 00:13:57,600
in the file so the only thing that you

00:13:55,530 --> 00:13:59,130
get is the problem records you would

00:13:57,600 --> 00:14:01,140
alert on the first one but then you

00:13:59,130 --> 00:14:02,640
would ignore the subsequent ones so

00:14:01,140 --> 00:14:04,770
solution is to mark this checkbox and

00:14:02,640 --> 00:14:08,280
then every new log Valley arriving would

00:14:04,770 --> 00:14:10,080
generate a new alert and actually I made

00:14:08,280 --> 00:14:12,270
a mistake here I accidentally created

00:14:10,080 --> 00:14:14,940
this trigger on the host again instead

00:14:12,270 --> 00:14:16,860
of the template as I intended so now

00:14:14,940 --> 00:14:20,180
I'll try to fix it the same way as I did

00:14:16,860 --> 00:14:23,580
with the item by taking this trigger and

00:14:20,180 --> 00:14:25,850
copying it to the template I hope that

00:14:23,580 --> 00:14:25,850
works

00:14:26,750 --> 00:14:31,770
it did seem to work and in this case the

00:14:29,850 --> 00:14:34,530
trigger was created on the template and

00:14:31,770 --> 00:14:37,370
now it was updated on the host so the

00:14:34,530 --> 00:14:39,870
host one was linked back to the template

00:14:37,370 --> 00:14:41,940
so totally okay to copy things around

00:14:39,870 --> 00:14:43,320
even if they would sort of overlap and

00:14:41,940 --> 00:14:45,000
in this case i copied something from a

00:14:43,320 --> 00:14:46,680
lower level to a higher level and the

00:14:45,000 --> 00:14:48,510
higher level than sort of started

00:14:46,680 --> 00:14:52,430
controlling the one I was copying from

00:14:48,510 --> 00:14:52,430
if that makes any sense in this morning

00:14:53,900 --> 00:14:58,410
zabbix also has user and user group

00:14:56,580 --> 00:15:01,050
concept which we will explore in a bit

00:14:58,410 --> 00:15:03,270
more detail later but for now what I

00:15:01,050 --> 00:15:05,400
want to do is I want to have a data

00:15:03,270 --> 00:15:07,680
collector I want to have an alert or

00:15:05,400 --> 00:15:09,750
event in zabbix terms and then I want to

00:15:07,680 --> 00:15:11,520
send an email to send an email I need

00:15:09,750 --> 00:15:14,940
some recipient so for that I need the

00:15:11,520 --> 00:15:18,510
user I would now go to the user

00:15:14,940 --> 00:15:27,420
management and create a new user again

00:15:18,510 --> 00:15:28,770
extremely innovative name i will add

00:15:27,420 --> 00:15:31,260
this user to the linux administrator

00:15:28,770 --> 00:15:34,760
group it's slightly related to the host

00:15:31,260 --> 00:15:37,620
being in the linux hose groups group and

00:15:34,760 --> 00:15:42,450
for this user I will also add media in

00:15:37,620 --> 00:15:44,310
zabbix media is a data source sorry that

00:15:42,450 --> 00:15:49,790
data source but a way to notify the user

00:15:44,310 --> 00:15:57,500
so in this case I will use an email and

00:15:49,790 --> 00:16:01,680
i hope i can type this morning as well

00:15:57,500 --> 00:16:03,300
so this user will receive an email on

00:16:01,680 --> 00:16:05,130
the media level I can filter by the

00:16:03,300 --> 00:16:06,960
severity I can filter by the time period

00:16:05,130 --> 00:16:09,030
i'm not doing this at this time at all

00:16:06,960 --> 00:16:15,870
this user will receive messages at least

00:16:09,030 --> 00:16:18,990
based on media settings always so will

00:16:15,870 --> 00:16:21,030
the user created this user currently has

00:16:18,990 --> 00:16:23,700
no permissions because permissions also

00:16:21,030 --> 00:16:28,050
have to be assigned and in this case for

00:16:23,700 --> 00:16:30,690
linux administrator's permissions have

00:16:28,050 --> 00:16:31,920
been set to Delino servers this is not

00:16:30,690 --> 00:16:34,140
the default this is something I have

00:16:31,920 --> 00:16:36,920
done before normally this user would not

00:16:34,140 --> 00:16:36,920
see anything at all

00:16:38,130 --> 00:16:42,750
and now that I have the host i have an

00:16:41,340 --> 00:16:44,730
item i have a trigger which will

00:16:42,750 --> 00:16:46,920
generate a problem event if something

00:16:44,730 --> 00:16:49,650
would happen I have a user with media

00:16:46,920 --> 00:16:52,590
with an email configured I need one last

00:16:49,650 --> 00:16:54,270
thing which controls how people are not

00:16:52,590 --> 00:16:56,190
ified and that is something we call an

00:16:54,270 --> 00:17:00,530
action which is just a configuration

00:16:56,190 --> 00:17:00,530
entity so I'm creating a new action here

00:17:01,490 --> 00:17:05,339
actions may have lots of different

00:17:03,810 --> 00:17:09,030
conditions this is something i will not

00:17:05,339 --> 00:17:10,500
do at this point i will only leave in

00:17:09,030 --> 00:17:13,250
the default one so if the host is it

00:17:10,500 --> 00:17:15,510
maintenance don't do anything at all

00:17:13,250 --> 00:17:17,160
there's lots of different possible

00:17:15,510 --> 00:17:18,839
conditions so i could limit this action

00:17:17,160 --> 00:17:20,640
based on the application which is a

00:17:18,839 --> 00:17:22,319
group of items i can limit on a host

00:17:20,640 --> 00:17:24,540
group on specific problem on the

00:17:22,319 --> 00:17:28,140
severity again on the time period and

00:17:24,540 --> 00:17:31,140
some other things none of that at this

00:17:28,140 --> 00:17:33,480
point in the operations again i'll do

00:17:31,140 --> 00:17:35,850
something very simple i will ignore all

00:17:33,480 --> 00:17:38,070
the advanced options i will just add the

00:17:35,850 --> 00:17:41,820
single user as the recipient of the

00:17:38,070 --> 00:17:43,920
messages message will be sent right away

00:17:41,820 --> 00:17:47,160
when the problem happens and i'm saving

00:17:43,920 --> 00:17:48,660
this action so now i should have a fully

00:17:47,160 --> 00:17:51,180
working monitoring environment

00:17:48,660 --> 00:17:52,770
monitoring one metric having an alert on

00:17:51,180 --> 00:17:56,370
that and hopefully also receiving

00:17:52,770 --> 00:17:58,110
messages on it and let's see whether i

00:17:56,370 --> 00:18:02,460
can actually make the system do

00:17:58,110 --> 00:18:05,070
something extremely useful which would

00:18:02,460 --> 00:18:10,580
generate a bit of flowed well yet

00:18:05,070 --> 00:18:16,100
nothing more useful than this so

00:18:10,580 --> 00:18:16,100
returning back to the slides a bit

00:18:22,090 --> 00:18:28,419
yeah I mentioned that in triggers you're

00:18:25,990 --> 00:18:30,850
not limited to checking just the last

00:18:28,419 --> 00:18:34,330
value and so on trigger expressions

00:18:30,850 --> 00:18:36,820
offer really a great flexibility and you

00:18:34,330 --> 00:18:38,500
can easily do things like average over

00:18:36,820 --> 00:18:40,299
last 10 minutes you can count the

00:18:38,500 --> 00:18:42,760
matching values of some time period you

00:18:40,299 --> 00:18:46,270
can do Delta's you can do matching of

00:18:42,760 --> 00:18:49,090
strings in the incoming values there's a

00:18:46,270 --> 00:18:50,650
large amount of what we call trigger

00:18:49,090 --> 00:18:53,110
functions which are the ones offering

00:18:50,650 --> 00:18:54,909
this functionality there's also a

00:18:53,110 --> 00:18:56,620
possibility to use relative threshold so

00:18:54,909 --> 00:18:58,480
instead of having an absolute value you

00:18:56,620 --> 00:19:00,730
could reference the previous item values

00:18:58,480 --> 00:19:02,409
for example I could get the average for

00:19:00,730 --> 00:19:04,510
the last hour then compare that to the

00:19:02,409 --> 00:19:08,140
same hour or day a week two days ago

00:19:04,510 --> 00:19:10,630
whatever you desire trigger may also

00:19:08,140 --> 00:19:12,669
check values from multiple items and

00:19:10,630 --> 00:19:14,919
also from multiple hosts so at the same

00:19:12,669 --> 00:19:17,529
time you can check things like the user

00:19:14,919 --> 00:19:19,570
account on the system and the cpu load

00:19:17,529 --> 00:19:20,890
if there's no user there if there are no

00:19:19,570 --> 00:19:25,149
users on the system then it's a problem

00:19:20,890 --> 00:19:27,220
if the cpu load is high and all that is

00:19:25,149 --> 00:19:29,320
included in the base zabbix distribution

00:19:27,220 --> 00:19:31,330
this is a core functionality well okay

00:19:29,320 --> 00:19:34,809
core might be a bad word in this region

00:19:31,330 --> 00:19:36,809
now so it's included in D zabbix server

00:19:34,809 --> 00:19:39,429
natively it's not something you have to

00:19:36,809 --> 00:19:44,770
separately install or configure in any

00:19:39,429 --> 00:19:46,330
way Dean applications i only added a

00:19:44,770 --> 00:19:49,330
single operation which was sending a

00:19:46,330 --> 00:19:51,299
notification to the user our recipient

00:19:49,330 --> 00:19:54,940
when the problem happened immediately

00:19:51,299 --> 00:19:56,350
but zabbix can do much much more it can

00:19:54,940 --> 00:19:57,760
escalate it desk light to different

00:19:56,350 --> 00:20:00,429
users the different user groups like

00:19:57,760 --> 00:20:02,049
management you can base this on the

00:20:00,429 --> 00:20:03,490
acknowledgment status so if the problem

00:20:02,049 --> 00:20:05,380
is not acknowledged management either

00:20:03,490 --> 00:20:09,730
does not get this collation message or

00:20:05,380 --> 00:20:12,640
it's delayed you may also run automated

00:20:09,730 --> 00:20:14,169
commands so if a service is down you can

00:20:12,640 --> 00:20:15,309
try to automatically restart it or you

00:20:14,169 --> 00:20:16,779
can gather information about the

00:20:15,309 --> 00:20:18,899
processes which are using the biggest

00:20:16,779 --> 00:20:22,809
amount of memory or anything like that

00:20:18,899 --> 00:20:24,399
and of course in the messages you can

00:20:22,809 --> 00:20:27,250
provide all kind of useful information

00:20:24,399 --> 00:20:31,179
like the last value from the item and so

00:20:27,250 --> 00:20:33,010
on and one thing which you can include

00:20:31,179 --> 00:20:34,600
in messages is the escalation history

00:20:33,010 --> 00:20:35,800
this is obviously not very interesting

00:20:34,600 --> 00:20:37,840
on the very first step

00:20:35,800 --> 00:20:39,880
in the escalation but later on you can

00:20:37,840 --> 00:20:42,280
see who was receiving messages before i

00:20:39,880 --> 00:20:43,690
got this message so this is something we

00:20:42,280 --> 00:20:45,940
usually suggest to configure for

00:20:43,690 --> 00:20:47,890
escalation to the management although

00:20:45,940 --> 00:20:49,660
when we show this functionality to the

00:20:47,890 --> 00:20:51,580
management type people they go like oh

00:20:49,660 --> 00:20:52,930
we absolutely have to use this when they

00:20:51,580 --> 00:20:54,280
showed that to more technical people

00:20:52,930 --> 00:20:57,100
they go like oh we should hide that from

00:20:54,280 --> 00:20:58,720
the management because then everybody

00:20:57,100 --> 00:21:00,130
can see that hey you get an email at

00:20:58,720 --> 00:21:03,370
three o'clock in the night right why

00:21:00,130 --> 00:21:07,720
didn't you react again completely

00:21:03,370 --> 00:21:09,310
included so nothing custom needed you

00:21:07,720 --> 00:21:10,990
just configure the same way from the

00:21:09,310 --> 00:21:14,010
zabbix front and or using any of the

00:21:10,990 --> 00:21:16,150
automated methods we will discuss later

00:21:14,010 --> 00:21:18,460
regarding descaling I promise to talk

00:21:16,150 --> 00:21:20,740
about that a bit more and onto zabbix

00:21:18,460 --> 00:21:24,100
blog there was recently an article which

00:21:20,740 --> 00:21:25,840
talked about scaling up and the person

00:21:24,100 --> 00:21:29,320
was describing their experiences in a

00:21:25,840 --> 00:21:34,300
broader large company so what they ended

00:21:29,320 --> 00:21:37,000
up doing in production is gathering 9400

00:21:34,300 --> 00:21:39,100
new values every second so like CPU load

00:21:37,000 --> 00:21:40,540
every new value that's that's one value

00:21:39,100 --> 00:21:42,460
like this and they are gathering more

00:21:40,540 --> 00:21:44,560
than 9,000 of them for each of these

00:21:42,460 --> 00:21:46,330
valleys we are evaluating triggers we're

00:21:44,560 --> 00:21:47,680
checking whether above any treshold we

00:21:46,330 --> 00:21:49,450
are generating trends which is long-term

00:21:47,680 --> 00:21:53,200
data storage for zabbix we're storing

00:21:49,450 --> 00:21:56,140
all that in database and more than 9,000

00:21:53,200 --> 00:21:58,510
times per second if you're more are

00:21:56,140 --> 00:22:01,320
customized customized to calculating per

00:21:58,510 --> 00:22:04,950
minute or per five minutes then that's

00:22:01,320 --> 00:22:07,000
564 thousand values every minute or

00:22:04,950 --> 00:22:11,830
something below three million values

00:22:07,000 --> 00:22:14,260
every five minutes so these numbers are

00:22:11,830 --> 00:22:17,920
pretty good i would say this is what

00:22:14,260 --> 00:22:19,690
zabbix version to the dough it's surf

00:22:17,920 --> 00:22:22,140
included obviously doing something like

00:22:19,690 --> 00:22:27,280
this is not I would do in my laptop here

00:22:22,140 --> 00:22:29,410
that would be impossible probably but

00:22:27,280 --> 00:22:31,470
with this in hardware with these fine

00:22:29,410 --> 00:22:39,040
tuning that is at least doable we have a

00:22:31,470 --> 00:22:40,990
example of this but yeah 40 back-end

00:22:39,040 --> 00:22:44,080
zabbix uses database we are supporting

00:22:40,990 --> 00:22:47,290
five databases but the most popular ones

00:22:44,080 --> 00:22:49,030
are my school and poster school this was

00:22:47,290 --> 00:22:49,720
specifically down on my skill but it

00:22:49,030 --> 00:22:52,240
should be possible

00:22:49,720 --> 00:23:02,710
do to achieve similar levels on PG skill

00:22:52,240 --> 00:23:04,540
as well we have unsupported but working

00:23:02,710 --> 00:23:06,880
branch of soaring historical values in

00:23:04,540 --> 00:23:08,680
Cassandra we plan to polish it and

00:23:06,880 --> 00:23:11,320
include it as a supported branch as well

00:23:08,680 --> 00:23:13,330
which should actually push this number

00:23:11,320 --> 00:23:16,150
way way up if you would use Cassandra

00:23:13,330 --> 00:23:18,070
for historical values but that's

00:23:16,150 --> 00:23:19,660
currently planned in the to the two

00:23:18,070 --> 00:23:22,210
branch we have to first finish it and

00:23:19,660 --> 00:23:27,550
then work on that Cassandra built-in

00:23:22,210 --> 00:23:28,870
support as well and even before

00:23:27,550 --> 00:23:31,090
Cassandra we actually have several

00:23:28,870 --> 00:23:32,740
feature several performance improvements

00:23:31,090 --> 00:23:33,940
into the upcoming two de two so the

00:23:32,740 --> 00:23:36,790
current branch is suited oh we are

00:23:33,940 --> 00:23:39,640
working on to the two very hard the

00:23:36,790 --> 00:23:41,410
person who did those 9000 something

00:23:39,640 --> 00:23:43,060
values per second with two ditto they

00:23:41,410 --> 00:23:44,830
did tests to the two already and they

00:23:43,060 --> 00:23:47,950
were able to go at least three times

00:23:44,830 --> 00:23:48,940
that may be a bit more but they said

00:23:47,950 --> 00:23:50,670
that they didn't have the time to

00:23:48,940 --> 00:23:59,100
investigate what happened after

00:23:50,670 --> 00:24:03,600
increasing it up to three times so um

00:23:59,100 --> 00:24:03,600
let's return to the zabbix front-end and

00:24:04,470 --> 00:24:11,320
now we can check the data that might be

00:24:08,050 --> 00:24:13,000
received in zabbix when I create an item

00:24:11,320 --> 00:24:14,350
I don't have to configure a graph for it

00:24:13,000 --> 00:24:16,660
or anything else that it's just

00:24:14,350 --> 00:24:19,870
automatically automatically available in

00:24:16,660 --> 00:24:21,430
this case i have only single item that's

00:24:19,870 --> 00:24:23,920
what i configured so i can look at the

00:24:21,430 --> 00:24:25,540
graph the graph is immediately rendered

00:24:23,920 --> 00:24:29,470
so i don't have to pre-render them

00:24:25,540 --> 00:24:31,180
either or wait for it and in this graph

00:24:29,470 --> 00:24:34,080
we can see that values were normal at

00:24:31,180 --> 00:24:37,630
first and then I started to do some

00:24:34,080 --> 00:24:40,600
performance affecting calculation on the

00:24:37,630 --> 00:24:42,040
host the cpu load jumped exceeded one

00:24:40,600 --> 00:24:45,480
which was our trigger level which is

00:24:42,040 --> 00:24:49,360
indicated by the line on the graph here

00:24:45,480 --> 00:24:51,810
and there's a bunch of controls on the

00:24:49,360 --> 00:24:54,610
graphs that i will look at a bit later

00:24:51,810 --> 00:24:56,730
but for now let's take a brief look at

00:24:54,610 --> 00:24:59,380
the event history so in this case

00:24:56,730 --> 00:25:01,120
there's only one event so the trigger

00:24:59,380 --> 00:25:03,220
went in the problem state the problem

00:25:01,120 --> 00:25:03,580
event was generated all the subsequent

00:25:03,220 --> 00:25:05,440
values

00:25:03,580 --> 00:25:09,820
about one they did not do anything at

00:25:05,440 --> 00:25:11,530
all and if I look at the list of

00:25:09,820 --> 00:25:13,240
triggers or this is a list of problems

00:25:11,530 --> 00:25:14,680
in my current environment that's one of

00:25:13,240 --> 00:25:15,910
my favorite views actually in zabbix

00:25:14,680 --> 00:25:17,560
because there's lots of filtering

00:25:15,910 --> 00:25:20,500
possible which I will not show right now

00:25:17,560 --> 00:25:21,790
I can see there's one problem it's not

00:25:20,500 --> 00:25:24,940
acknowledged I could do that from this

00:25:21,790 --> 00:25:28,990
screen as well but for now I'll leave it

00:25:24,940 --> 00:25:31,150
as is and let's see whether the last

00:25:28,990 --> 00:25:37,510
part of this also worked well it did I

00:25:31,150 --> 00:25:39,220
got an email so in this case it tells me

00:25:37,510 --> 00:25:41,920
that the cpu load is too high there's

00:25:39,220 --> 00:25:44,110
the trigger severity and bunch of things

00:25:41,920 --> 00:25:46,030
which I'm not included I have not

00:25:44,110 --> 00:25:48,070
included in this case for example

00:25:46,030 --> 00:25:49,950
trigger URL was not configured I didn't

00:25:48,070 --> 00:25:51,850
have multiple items in the trigger and

00:25:49,950 --> 00:25:58,170
obviously i don't have asked elation

00:25:51,850 --> 00:26:01,870
history either so this shows that

00:25:58,170 --> 00:26:03,670
getting up zabbix up and running just to

00:26:01,870 --> 00:26:05,560
have basic monitoring basic alerting on

00:26:03,670 --> 00:26:07,000
the email should be relatively easy well

00:26:05,560 --> 00:26:15,520
if you know where to collect at least on

00:26:07,000 --> 00:26:16,990
the front end now that we know with the

00:26:15,520 --> 00:26:18,340
basic things about how how things

00:26:16,990 --> 00:26:21,190
interact in zabbix how they work

00:26:18,340 --> 00:26:23,860
together a brief look at how you can

00:26:21,190 --> 00:26:26,620
gather network traffic very brief look

00:26:23,860 --> 00:26:28,750
at the SNMP monitoring a bit more about

00:26:26,620 --> 00:26:30,490
the access rights that are assigned to

00:26:28,750 --> 00:26:33,880
users something we looked at before and

00:26:30,490 --> 00:26:35,920
the from the configuration side and a

00:26:33,880 --> 00:26:38,230
bit about some feature which is called

00:26:35,920 --> 00:26:40,060
low-level discovering zabbix or lld so

00:26:38,230 --> 00:26:47,250
if you ever see LD in exotics context

00:26:40,060 --> 00:26:52,660
that means the low-level discovery and

00:26:47,250 --> 00:26:55,000
back to the zabbix interface the host I

00:26:52,660 --> 00:26:56,740
have I only have one of them right now I

00:26:55,000 --> 00:26:59,590
could obviously create the other one

00:26:56,740 --> 00:27:02,080
manually but I can also clone hosting

00:26:59,590 --> 00:27:04,240
zabbix so if I'd like to manually add

00:27:02,080 --> 00:27:06,100
another one I can just specify that it

00:27:04,240 --> 00:27:09,900
will have a different name and that's

00:27:06,100 --> 00:27:09,900
about it I have two hosts now

00:27:11,420 --> 00:27:15,920
additional benefit of the templates I

00:27:13,400 --> 00:27:19,540
will now work from the template and I

00:27:15,920 --> 00:27:24,280
will create here additional items and

00:27:19,540 --> 00:27:24,280
I'd like to monitor network traffic so I

00:27:25,900 --> 00:27:31,520
will use a dollar sign one

00:27:28,700 --> 00:27:34,400
representation here the indie item names

00:27:31,520 --> 00:27:38,990
dollar sign one in zabbix a expands to

00:27:34,400 --> 00:27:40,580
the item key parameters which is the

00:27:38,990 --> 00:27:42,650
ones that you may specify in square

00:27:40,580 --> 00:27:50,450
brackets and let's say here I will

00:27:42,650 --> 00:27:52,070
monitor eth1 interface this item I will

00:27:50,450 --> 00:27:53,210
not convert it to bits which would be

00:27:52,070 --> 00:27:56,120
easy but I'll leave it at bytes per

00:27:53,210 --> 00:27:59,090
second as the valleys we are getting

00:27:56,120 --> 00:28:01,220
originally from the data source they are

00:27:59,090 --> 00:28:03,230
counters so we would get something I

00:28:01,220 --> 00:28:05,270
personally call Hill graph which is only

00:28:03,230 --> 00:28:08,630
ever going up up up until the interface

00:28:05,270 --> 00:28:10,880
is restarted I will change this to store

00:28:08,630 --> 00:28:13,130
value and zabbix is able to compute the

00:28:10,880 --> 00:28:14,810
difference between two values how many

00:28:13,130 --> 00:28:21,650
seconds between them and then store the

00:28:14,810 --> 00:28:23,180
difference in the database and to make

00:28:21,650 --> 00:28:25,040
sure that we see the values a bit sooner

00:28:23,180 --> 00:28:26,900
i will also change interval to some low

00:28:25,040 --> 00:28:28,640
value which is something that personally

00:28:26,900 --> 00:28:33,160
do not normally suggest but for this

00:28:28,640 --> 00:28:35,480
demonstration should we just fine and i

00:28:33,160 --> 00:28:38,360
will obviously like to see the outgoing

00:28:35,480 --> 00:28:41,180
traffic as well so again i can also

00:28:38,360 --> 00:28:42,680
clone items not just host and in this

00:28:41,180 --> 00:28:47,510
case i have to change only two things

00:28:42,680 --> 00:28:50,540
here the name should be more relevant

00:28:47,510 --> 00:28:53,360
and that if n becomes net if out which

00:28:50,540 --> 00:28:56,300
is another item key which is natively

00:28:53,360 --> 00:28:59,120
supported by these a box agent so again

00:28:56,300 --> 00:29:01,670
this is all done by a sea agent on the

00:28:59,120 --> 00:29:04,780
target system agent is running on

00:29:01,670 --> 00:29:06,890
Windows Linux Solaris sykes hpx Bhd's

00:29:04,780 --> 00:29:10,370
probably pretty much anything you can

00:29:06,890 --> 00:29:12,170
any unix-like you can throw at it the

00:29:10,370 --> 00:29:14,300
support of these items it's all done

00:29:12,170 --> 00:29:16,130
without running commands so we are

00:29:14,300 --> 00:29:18,290
parsing proc on linux and doing some

00:29:16,130 --> 00:29:21,050
other magic on IX I don't even know what

00:29:18,290 --> 00:29:22,940
we exactly we doin IX for example so it

00:29:21,050 --> 00:29:24,460
should be pretty well performing on the

00:29:22,940 --> 00:29:27,760
Montford

00:29:24,460 --> 00:29:29,890
host side so I've cloned the item for

00:29:27,760 --> 00:29:32,830
the outgoing traffic now I have two of

00:29:29,890 --> 00:29:34,840
them I chose eth1 because this system

00:29:32,830 --> 00:29:36,220
has very little traffic on eth0 just to

00:29:34,840 --> 00:29:42,490
see that there's at least some value

00:29:36,220 --> 00:29:44,170
coming out of that interface so that's

00:29:42,490 --> 00:29:47,560
natural traffic information that I'll

00:29:44,170 --> 00:29:53,200
try to look at in a moment and now a bit

00:29:47,560 --> 00:29:58,890
about SNMP let's say I will have an SNMP

00:29:53,200 --> 00:29:58,890
host in the network device group

00:29:59,610 --> 00:30:04,120
checking the same interface again and in

00:30:02,650 --> 00:30:07,270
this case instead of creating items on

00:30:04,120 --> 00:30:09,430
it manually I will reuse pre-configure

00:30:07,270 --> 00:30:10,750
templates on zabbix side for this

00:30:09,430 --> 00:30:12,550
demonstration I actually have deleted

00:30:10,750 --> 00:30:17,380
most of them so they don't really mess

00:30:12,550 --> 00:30:18,880
up the view but we have maybe not a huge

00:30:17,380 --> 00:30:21,580
amount but some amount of pre-configured

00:30:18,880 --> 00:30:23,800
templates in this case I will link the

00:30:21,580 --> 00:30:25,510
the network device to a template which

00:30:23,800 --> 00:30:29,950
should automatically discover all the

00:30:25,510 --> 00:30:33,660
SNMP interfaces on it and obviously I

00:30:29,950 --> 00:30:44,260
made a mistake so for SNMP to work I

00:30:33,660 --> 00:30:45,790
need on it's an MP interface so zabbix

00:30:44,260 --> 00:30:47,620
also supports multiple interfaces /

00:30:45,790 --> 00:30:50,110
hosts you can monitor the same host

00:30:47,620 --> 00:30:52,960
using the zabbix agent using SNMP

00:30:50,110 --> 00:30:54,970
versions one to see and three you can

00:30:52,960 --> 00:30:57,190
add specific interfaces for jmx

00:30:54,970 --> 00:31:03,910
monitoring and also I p.m. i can be

00:30:57,190 --> 00:31:07,000
monitored on the same host so will the

00:31:03,910 --> 00:31:08,410
SNMP host added I will let it collect

00:31:07,000 --> 00:31:12,280
data for a while and we'll see whether

00:31:08,410 --> 00:31:14,890
that works but now i will log out use

00:31:12,280 --> 00:31:16,690
what i had logged in as was user account

00:31:14,890 --> 00:31:19,890
called admin this user account is

00:31:16,690 --> 00:31:23,860
similar to pretty much the root on the

00:31:19,890 --> 00:31:29,020
linux systems and now i will login as

00:31:23,860 --> 00:31:30,880
the user that i created before as you

00:31:29,020 --> 00:31:32,410
can see the theme is their friend so

00:31:30,880 --> 00:31:35,080
that it's front and support steaming as

00:31:32,410 --> 00:31:36,730
well for my super user account I had

00:31:35,080 --> 00:31:38,320
switched to the so-called classic theme

00:31:36,730 --> 00:31:40,419
which I personally think is a bit

00:31:38,320 --> 00:31:42,370
less shiny a pistol it's distracting

00:31:40,419 --> 00:31:48,549
this user has a default one which is

00:31:42,370 --> 00:31:51,940
more brighter and now if I look at the

00:31:48,549 --> 00:31:54,250
data collected I only see the Linux

00:31:51,940 --> 00:31:57,370
servers group I don't see the natural

00:31:54,250 --> 00:31:59,350
devices because that group is not add it

00:31:57,370 --> 00:32:03,100
as a either read only or read right

00:31:59,350 --> 00:32:04,389
group for linux administrators and we

00:32:03,100 --> 00:32:06,039
can see that the network interface

00:32:04,389 --> 00:32:07,630
monitoring seems to be working on both

00:32:06,039 --> 00:32:09,880
of the hosts added two items on the

00:32:07,630 --> 00:32:17,289
template and they were added on both of

00:32:09,880 --> 00:32:20,440
the hosts as well let's leave this user

00:32:17,289 --> 00:32:26,710
account and let's return as the super

00:32:20,440 --> 00:32:29,679
user account and I hope it works but let

00:32:26,710 --> 00:32:32,019
me check that so in this case the SNMP

00:32:29,679 --> 00:32:34,840
host I only linked it to the SNMP

00:32:32,019 --> 00:32:36,639
interface discovery template and the

00:32:34,840 --> 00:32:38,529
zabbix has already discovered all the

00:32:36,639 --> 00:32:41,289
interfaces on it eth0 eat each one and

00:32:38,529 --> 00:32:43,120
also ello for the loopback this

00:32:41,289 --> 00:32:45,490
discovery natively supported for any

00:32:43,120 --> 00:32:47,409
SNMP table it's also supported on the

00:32:45,490 --> 00:32:50,710
agent level for network interfaces and

00:32:47,409 --> 00:32:52,360
for file systems it can also be rather

00:32:50,710 --> 00:32:54,340
easily extended we have users

00:32:52,360 --> 00:32:57,850
discovering databases custom software

00:32:54,340 --> 00:32:59,649
components and lots of other things what

00:32:57,850 --> 00:33:01,509
I did here I just discovered all the

00:32:59,649 --> 00:33:03,309
interfaces I could have filtered them so

00:33:01,509 --> 00:33:05,200
loopback for example could be excluded

00:33:03,309 --> 00:33:15,309
based on based on a regular expressions

00:33:05,200 --> 00:33:17,049
as well so SNMP seemed to work lalo

00:33:15,309 --> 00:33:20,470
discovery seemed to work discovered all

00:33:17,049 --> 00:33:22,570
interfaces as epochs has several other

00:33:20,470 --> 00:33:24,820
built-in features that is monitoring web

00:33:22,570 --> 00:33:27,039
pages and we can also send any value to

00:33:24,820 --> 00:33:32,950
zabbix let´s take a look how that is

00:33:27,039 --> 00:33:35,169
configured and I could create the

00:33:32,950 --> 00:33:36,820
website called web scenario on any of

00:33:35,169 --> 00:33:38,950
the existing hosts but I will create a

00:33:36,820 --> 00:33:43,899
new host for this purpose so it's up to

00:33:38,950 --> 00:33:45,519
me how I want to arrange these chucks so

00:33:43,899 --> 00:33:47,950
let's say I will have a host call

00:33:45,519 --> 00:33:50,340
openstreetmap I will keep it in its own

00:33:47,950 --> 00:33:50,340
group

00:33:52,299 --> 00:33:57,950
nothing else required for this ghost at

00:33:54,559 --> 00:34:00,529
this point but now i will create

00:33:57,950 --> 00:34:02,389
something we call web scenario these

00:34:00,529 --> 00:34:09,139
scenarios consist of steps they can be

00:34:02,389 --> 00:34:10,819
more or less complicated and say here i

00:34:09,139 --> 00:34:15,980
will choose a more appropriate browser

00:34:10,819 --> 00:34:20,119
as well for this manually created

00:34:15,980 --> 00:34:26,240
website REO i will keep things simple so

00:34:20,119 --> 00:34:34,460
i will have only one step checking the

00:34:26,240 --> 00:34:36,260
first page that's about it we will take

00:34:34,460 --> 00:34:37,760
a look at the results of it later if the

00:34:36,260 --> 00:34:40,159
Wi-Fi works it this should actually

00:34:37,760 --> 00:34:44,619
monitor some data about the web page

00:34:40,159 --> 00:34:48,889
already before we look at the results a

00:34:44,619 --> 00:34:53,929
bit about sending custom value zabbix

00:34:48,889 --> 00:34:56,990
and and this is done by an item type so

00:34:53,929 --> 00:35:00,670
item types or like zabbix agent SNMP jmx

00:34:56,990 --> 00:35:03,200
as a ipmi the dimension Authority and

00:35:00,670 --> 00:35:07,040
there's another item type which is

00:35:03,200 --> 00:35:08,810
called zabbix trapper so on the template

00:35:07,040 --> 00:35:13,940
level so that I get this on both of my

00:35:08,810 --> 00:35:18,380
hosts I will create a new item which I

00:35:13,940 --> 00:35:20,240
will call customers in the shop so this

00:35:18,380 --> 00:35:22,670
is something that zabbix agent cannot

00:35:20,240 --> 00:35:24,200
monitor natively yet but there are

00:35:22,670 --> 00:35:25,640
sensors to monitor how many people are

00:35:24,200 --> 00:35:28,280
passing them so this could actually be

00:35:25,640 --> 00:35:30,800
implemented in zabbix the type must be a

00:35:28,280 --> 00:35:33,710
special zabbix trapper and key something

00:35:30,800 --> 00:35:40,400
I can't come up with myself so that's

00:35:33,710 --> 00:35:44,869
the customers key that seems to be about

00:35:40,400 --> 00:35:47,839
it although one small change I could

00:35:44,869 --> 00:35:49,280
also set an application for it so

00:35:47,839 --> 00:35:50,510
application is not a software

00:35:49,280 --> 00:35:52,220
application in zabbix it's a way to

00:35:50,510 --> 00:35:57,589
group items so in this case I will name

00:35:52,220 --> 00:35:59,900
my application shop with the trapper

00:35:57,589 --> 00:36:02,420
item created I can send custom values to

00:35:59,900 --> 00:36:04,760
it I can do that in several ways one way

00:36:02,420 --> 00:36:07,670
is to use a common line utility

00:36:04,760 --> 00:36:09,920
zabbix sender I don't know whether

00:36:07,670 --> 00:36:11,990
that's readable I hope it is and I'm

00:36:09,920 --> 00:36:16,580
sending that to a specific zabbix server

00:36:11,990 --> 00:36:19,610
and specifying a host then identifying

00:36:16,580 --> 00:36:23,630
the key and sending the actual value

00:36:19,610 --> 00:36:25,160
value it's that processed one failed

00:36:23,630 --> 00:36:27,380
zero so that seems to be successful

00:36:25,160 --> 00:36:31,340
returning to the zabbix front end if I

00:36:27,380 --> 00:36:33,410
check this item awesome the value I sent

00:36:31,340 --> 00:36:38,360
from the common line is in these objects

00:36:33,410 --> 00:36:41,540
already that is a way to send a single

00:36:38,360 --> 00:36:44,360
value I can also send multiple values to

00:36:41,540 --> 00:36:46,520
multiple hosts from a file from an input

00:36:44,360 --> 00:36:48,980
file so in this case I have in this file

00:36:46,520 --> 00:36:51,860
one item for each of the host or one

00:36:48,980 --> 00:36:56,420
value for each of the hosts in this case

00:36:51,860 --> 00:36:59,720
I still have to specify the server name

00:36:56,420 --> 00:37:02,540
or server IP but then I only have to

00:36:59,720 --> 00:37:05,150
specify the input file in this case

00:37:02,540 --> 00:37:07,490
process two values failed 0 again that's

00:37:05,150 --> 00:37:10,430
good returning to the latest data screen

00:37:07,490 --> 00:37:11,870
I can see that for both of the items on

00:37:10,430 --> 00:37:16,690
two different hosts the value has been

00:37:11,870 --> 00:37:19,100
updated there's another way to do this

00:37:16,690 --> 00:37:20,570
when i send the values like this they're

00:37:19,100 --> 00:37:26,000
time-stamped by these a big server

00:37:20,570 --> 00:37:27,980
whenever it receives them i can also

00:37:26,000 --> 00:37:29,780
send values from a file which are time

00:37:27,980 --> 00:37:31,760
Stan so for each of them a time stamp is

00:37:29,780 --> 00:37:33,320
included that can obviously be sent to a

00:37:31,760 --> 00:37:35,000
single host two different hosts in this

00:37:33,320 --> 00:37:38,570
example I will send a values to a single

00:37:35,000 --> 00:37:40,850
item they will be time stamped to do

00:37:38,570 --> 00:37:42,680
this I specify additional flag which

00:37:40,850 --> 00:37:44,690
tells a big that this is not just from

00:37:42,680 --> 00:37:46,670
the file but there's also timestamps in

00:37:44,690 --> 00:37:50,600
there there's quite a lot of them in

00:37:46,670 --> 00:37:52,850
this file actually and there you go we

00:37:50,600 --> 00:37:54,670
send a bunch of values so in what was it

00:37:52,850 --> 00:38:00,230
I don't know less than a second I send

00:37:54,670 --> 00:38:01,640
43,000 valley is a big server as this is

00:38:00,230 --> 00:38:03,320
running on a virtual machine right here

00:38:01,640 --> 00:38:06,050
on this laptop this is not the most

00:38:03,320 --> 00:38:08,270
powerful system in the world and if I

00:38:06,050 --> 00:38:11,930
look at the graph for the item for which

00:38:08,270 --> 00:38:14,690
I send these values to all the values

00:38:11,930 --> 00:38:16,340
are not there yet most likely but if I

00:38:14,690 --> 00:38:17,940
said this to show the whole period we

00:38:16,340 --> 00:38:20,819
can see that hey

00:38:17,940 --> 00:38:22,500
how many values of X has processed the

00:38:20,819 --> 00:38:24,750
other ones are still in the caching

00:38:22,500 --> 00:38:26,339
system they are being processed there be

00:38:24,750 --> 00:38:28,440
the trends are calculated everything

00:38:26,339 --> 00:38:30,089
else is being done and then there are

00:38:28,440 --> 00:38:32,880
stored in database if i refresh the

00:38:30,089 --> 00:38:35,099
graph I can see how the values are being

00:38:32,880 --> 00:38:36,569
put in the database xabec front and read

00:38:35,099 --> 00:38:38,160
the data from the database and zabbix

00:38:36,569 --> 00:38:41,880
server is putting them in the background

00:38:38,160 --> 00:38:44,369
right there well it's doing that I can

00:38:41,880 --> 00:38:47,339
briefly show that I can quickly switch

00:38:44,369 --> 00:38:50,760
from one time period displayed to

00:38:47,339 --> 00:38:53,760
another and in this case I have put

00:38:50,760 --> 00:38:56,640
there around one month of values in the

00:38:53,760 --> 00:38:58,890
item if I see some interesting peak or

00:38:56,640 --> 00:39:00,900
dip in the graph I can drill down very

00:38:58,890 --> 00:39:03,810
easily by just zooming into that

00:39:00,900 --> 00:39:08,240
specific period of time or switch back

00:39:03,810 --> 00:39:08,240
to whichever i was looking at before and

00:39:08,450 --> 00:39:14,329
while i was talking all the values seem

00:39:11,099 --> 00:39:14,329
to be finally stored in the database

00:39:20,359 --> 00:39:25,890
let's see whether the web monitoring

00:39:23,069 --> 00:39:28,380
worked at all so i have the single

00:39:25,890 --> 00:39:31,710
scenario here and it seems to be working

00:39:28,380 --> 00:39:33,900
so we are now collecting information

00:39:31,710 --> 00:39:37,460
just about the first page a single step

00:39:33,900 --> 00:39:39,690
on in this scenario these are pre-built

00:39:37,460 --> 00:39:40,950
included graphs you don't have to use

00:39:39,690 --> 00:39:43,079
them you can create your own graphs

00:39:40,950 --> 00:39:46,109
based on data received you can create

00:39:43,079 --> 00:39:47,460
triggers on this data and so on this is

00:39:46,109 --> 00:39:49,140
also not that interesting because we

00:39:47,460 --> 00:39:50,730
have only a single step if I had

00:39:49,140 --> 00:39:53,700
multiple steps that would be stacked

00:39:50,730 --> 00:39:55,530
graph I could see time I could see the

00:39:53,700 --> 00:39:57,510
delay for each of them and we could be

00:39:55,530 --> 00:40:02,040
able to tell that hey Dad step is really

00:39:57,510 --> 00:40:05,190
slow every now and then or if I look at

00:40:02,040 --> 00:40:08,310
the latest data I can see that there's

00:40:05,190 --> 00:40:09,750
not only one or two values added /

00:40:08,310 --> 00:40:11,760
scenario there's a bunch of them in this

00:40:09,750 --> 00:40:20,579
case they're filled step 0 so hey

00:40:11,760 --> 00:40:22,050
everything was great obviously clicking

00:40:20,579 --> 00:40:23,339
around for a large environment is not

00:40:22,050 --> 00:40:24,569
very feasible so there are several

00:40:23,339 --> 00:40:26,220
methods how you can automate the

00:40:24,569 --> 00:40:27,869
configuration management in zabbix two

00:40:26,220 --> 00:40:31,099
of them the most popular ones and

00:40:27,869 --> 00:40:32,630
probably suggested ones are XML and API

00:40:31,099 --> 00:40:34,849
support external import/export for some

00:40:32,630 --> 00:40:41,479
entities and API control for pretty much

00:40:34,849 --> 00:40:43,460
everything else and I have generated an

00:40:41,479 --> 00:40:45,499
XML file I could have exported it would

00:40:43,460 --> 00:40:51,890
but I generated that one from the

00:40:45,499 --> 00:40:55,309
scratch and now i can import it so this

00:40:51,890 --> 00:41:01,249
generated file and let's see how that

00:40:55,309 --> 00:41:04,479
goes that seems to have worked if i

00:41:01,249 --> 00:41:07,430
expand the details i can see that this

00:41:04,479 --> 00:41:09,140
xml file contained a bunch of hosts

00:41:07,430 --> 00:41:10,999
which were linked to the same template

00:41:09,140 --> 00:41:13,430
that i created initially so for each of

00:41:10,999 --> 00:41:15,519
them application items were created so

00:41:13,430 --> 00:41:18,259
everything was done they were numbered

00:41:15,519 --> 00:41:20,749
now if I look at the list of hosts and

00:41:18,259 --> 00:41:22,819
let's say a filter by the Linux servers

00:41:20,749 --> 00:41:26,599
which is what I was importing I can see

00:41:22,819 --> 00:41:30,039
that I have now well in total there's a

00:41:26,599 --> 00:41:31,970
hundred of hosts so that is one way to

00:41:30,039 --> 00:41:33,950
populate the configuration information

00:41:31,970 --> 00:41:43,069
in zabbix without clicking around for

00:41:33,950 --> 00:41:47,089
for a few months another way I mentioned

00:41:43,069 --> 00:41:50,539
is the API and zabbix offers json-rpc

00:41:47,089 --> 00:41:54,680
api it's been there for for quite a

00:41:50,539 --> 00:41:57,079
while now and there are several ways to

00:41:54,680 --> 00:41:58,609
use it there are a bunch of libraries

00:41:57,079 --> 00:42:00,650
for different languages we have like

00:41:58,609 --> 00:42:04,160
four for Ruby for for Python for for

00:42:00,650 --> 00:42:06,799
pearl so you can choose your own you can

00:42:04,160 --> 00:42:08,329
even use that with direct curls which is

00:42:06,799 --> 00:42:12,410
what exactly which is exactly what I

00:42:08,329 --> 00:42:15,859
will be doing so I have a script to do

00:42:12,410 --> 00:42:19,099
this and I hope it works it does seem to

00:42:15,859 --> 00:42:20,869
work and it's supposed to add the web

00:42:19,099 --> 00:42:22,849
scenario which is slightly more

00:42:20,869 --> 00:42:27,999
complicated the one I created manually

00:42:22,849 --> 00:42:30,890
so now if I look at the web scenarios

00:42:27,999 --> 00:42:32,599
for this host there is the OpenStreetMap

00:42:30,890 --> 00:42:34,579
this is the one I created manually with

00:42:32,599 --> 00:42:37,069
a single step checking one page very

00:42:34,579 --> 00:42:39,109
basic there's also the zabbix front and

00:42:37,069 --> 00:42:40,489
web scenario if I expand the details of

00:42:39,109 --> 00:42:43,839
this one I can see that it has five

00:42:40,489 --> 00:42:43,839
steps instead of one and

00:42:44,750 --> 00:42:49,760
so this was all created automatically

00:42:46,310 --> 00:42:52,550
without clicking around at all how it's

00:42:49,760 --> 00:42:54,980
done obviously I could show later to

00:42:52,550 --> 00:42:56,570
somebody interested more details but the

00:42:54,980 --> 00:42:58,040
basic thing is that we are sending the

00:42:56,570 --> 00:43:00,980
Jason requests than getting back their

00:42:58,040 --> 00:43:03,710
responses so we start by authenticating

00:43:00,980 --> 00:43:05,660
to the API because non authenticated

00:43:03,710 --> 00:43:07,280
users will not have at least by default

00:43:05,660 --> 00:43:10,850
any permissions to create anything at

00:43:07,280 --> 00:43:14,870
all then I'm sending an application

00:43:10,850 --> 00:43:16,700
crate request this is Seema optional but

00:43:14,870 --> 00:43:18,080
i decided that i will need a separate

00:43:16,700 --> 00:43:21,290
application called xabec fronting for

00:43:18,080 --> 00:43:24,560
this and then based on the application

00:43:21,290 --> 00:43:26,330
ID which i received back this is the big

00:43:24,560 --> 00:43:28,130
blob which is creating this scenario

00:43:26,330 --> 00:43:30,100
itself it's pretty unreadable at this

00:43:28,130 --> 00:43:32,840
point but if I would format it a

00:43:30,100 --> 00:43:35,390
properly it would be pretty readable and

00:43:32,840 --> 00:43:45,590
the result was successful I had a new

00:43:35,390 --> 00:43:48,980
web scenario added I cannot really skip

00:43:45,590 --> 00:43:50,660
this information so one thing to show is

00:43:48,980 --> 00:43:52,520
that zabbix is very flexible you can put

00:43:50,660 --> 00:43:54,530
any data in it and what we are putting

00:43:52,520 --> 00:43:56,750
in it is the information about how many

00:43:54,530 --> 00:43:59,900
users we have on the zabbix IRC channel

00:43:56,750 --> 00:44:01,940
on freenode and this shows a two-week

00:43:59,900 --> 00:44:04,550
period from from I don't know a week ago

00:44:01,940 --> 00:44:06,500
or so as you can see we have a daily

00:44:04,550 --> 00:44:08,930
fluctuations we're mostly European day

00:44:06,500 --> 00:44:13,880
although the USA day is also somewhat

00:44:08,930 --> 00:44:16,010
active weekends are less active and we

00:44:13,880 --> 00:44:19,430
recently reached a new record high of

00:44:16,010 --> 00:44:21,980
248 people in the channel and the

00:44:19,430 --> 00:44:23,930
average is pretty much hanging above 200

00:44:21,980 --> 00:44:29,030
constantly which is thats a pretty great

00:44:23,930 --> 00:44:31,520
and similar graph to show that zabbix

00:44:29,030 --> 00:44:33,860
can store and graph data for long period

00:44:31,520 --> 00:44:35,750
of time this is a graph showing almost

00:44:33,860 --> 00:44:37,340
and a half years of the same values that

00:44:35,750 --> 00:44:38,990
is the users in the IRC channel as you

00:44:37,340 --> 00:44:40,520
can see we started with a like what

00:44:38,990 --> 00:44:42,110
around well at least I have data from

00:44:40,520 --> 00:44:44,600
when the channel was around 20 people

00:44:42,110 --> 00:44:46,390
it's been going up and down up and down

00:44:44,600 --> 00:44:50,750
but the general trend seems to be very

00:44:46,390 --> 00:44:54,010
positively upwards one this graph was

00:44:50,750 --> 00:44:56,300
generated in 02 seconds right here so

00:44:54,010 --> 00:44:58,340
okay I was cheating a bit it's already

00:44:56,300 --> 00:45:00,320
in the database cash but still

00:44:58,340 --> 00:45:05,630
seven-year graph shouldn't pose a large

00:45:00,320 --> 00:45:07,610
problem to zabbix to generate that is

00:45:05,630 --> 00:45:09,410
actually only a very very small part of

00:45:07,610 --> 00:45:11,720
zabbix what zabbix can do there's a

00:45:09,410 --> 00:45:13,130
bunch of other features but when we have

00:45:11,720 --> 00:45:14,600
a training course we can't really fit

00:45:13,130 --> 00:45:16,460
all the features in one week that's

00:45:14,600 --> 00:45:19,070
that's how much you can do with zabbix

00:45:16,460 --> 00:45:20,420
without installing plugins so I would

00:45:19,070 --> 00:45:24,020
like to invite everybody to try that

00:45:20,420 --> 00:45:25,130
excel yourself it's very easy to do you

00:45:24,020 --> 00:45:27,050
can obviously install from distribution

00:45:25,130 --> 00:45:30,110
packages we have great packages on a

00:45:27,050 --> 00:45:33,320
pole for example and not just that on

00:45:30,110 --> 00:45:35,900
TBN and some other distros there's also

00:45:33,320 --> 00:45:37,850
a big virtual appliance so if you don't

00:45:35,900 --> 00:45:39,170
want to install the packages or you

00:45:37,850 --> 00:45:40,610
don't have a server to do that right now

00:45:39,170 --> 00:45:43,490
you can download the virtual appliance

00:45:40,610 --> 00:45:44,690
from the zabbix webpage personally I

00:45:43,490 --> 00:45:46,040
would suggest to wait a little bit

00:45:44,690 --> 00:45:47,720
because we have built the latest version

00:45:46,040 --> 00:45:49,730
for appliance we just haven't updated

00:45:47,720 --> 00:45:52,280
all the links in the web page so maybe

00:45:49,730 --> 00:45:54,980
wait till I don't know for for the end

00:45:52,280 --> 00:45:56,680
of today and then grab 209 which will be

00:45:54,980 --> 00:46:04,040
the latest version in the download page

00:45:56,680 --> 00:46:16,270
and right so if you have any questions

00:46:04,040 --> 00:46:16,270
at this point please one moment please

00:46:20,430 --> 00:46:26,769
you showed a command for sending the the

00:46:24,069 --> 00:46:30,069
values to tues epics and just out of

00:46:26,769 --> 00:46:34,119
curiosity you the options were minus

00:46:30,069 --> 00:46:37,900
that for the server minus K for the key

00:46:34,119 --> 00:46:39,700
a key okay yeah just dash S was for the

00:46:37,900 --> 00:46:41,619
host which identifies the server in this

00:46:39,700 --> 00:46:43,869
case and that show was for the value

00:46:41,619 --> 00:46:46,150
obviously we have a man page you can you

00:46:43,869 --> 00:46:51,430
dash dash help so it's all there to it

00:46:46,150 --> 00:46:52,599
if so just what I yeah gosh casings to

00:46:51,430 --> 00:46:55,390
be the most intuitive one I have a

00:46:52,599 --> 00:46:58,109
degree yes do that by the way you can

00:46:55,390 --> 00:47:00,430
use the common line qet but it uses a

00:46:58,109 --> 00:47:01,990
sort of special protocol to send the

00:47:00,430 --> 00:47:04,809
values but the protocol is extremely

00:47:01,990 --> 00:47:07,119
trivial it's also documented so we have

00:47:04,809 --> 00:47:09,460
users who are not using the command line

00:47:07,119 --> 00:47:11,440
utility either because they don't want

00:47:09,460 --> 00:47:13,299
to or because for because of performance

00:47:11,440 --> 00:47:15,099
concerns they implement a protocol and

00:47:13,299 --> 00:47:17,019
their customer a custom software and

00:47:15,099 --> 00:47:22,839
just eat send directly from their own

00:47:17,019 --> 00:47:25,180
software and maybe more seriously what I

00:47:22,839 --> 00:47:27,630
really want a house when spontaneously

00:47:25,180 --> 00:47:30,640
what I really like is that you that you

00:47:27,630 --> 00:47:33,609
distinguish between triggers and items

00:47:30,640 --> 00:47:38,499
so that you you can create events like

00:47:33,609 --> 00:47:40,869
this and that you have an API but what I

00:47:38,499 --> 00:47:44,200
really are interested in is a graphic or

00:47:40,869 --> 00:47:46,150
there's a database behind the

00:47:44,200 --> 00:47:49,930
performance information do you plan to

00:47:46,150 --> 00:47:52,960
to have an API or a way to feed this

00:47:49,930 --> 00:47:55,329
information to other backends as well

00:47:52,960 --> 00:47:58,660
and read out of other backends as well

00:47:55,329 --> 00:48:01,180
or is it more bundled with sevaks that

00:47:58,660 --> 00:48:03,069
it's very hard for you to change you

00:48:01,180 --> 00:48:06,279
mean Det collected values the historical

00:48:03,069 --> 00:48:09,849
data because I think 10,000 is nice but

00:48:06,279 --> 00:48:12,279
then at least for me 10,000 is per

00:48:09,849 --> 00:48:14,890
seconds is not what I targeted I

00:48:12,279 --> 00:48:17,589
targeted a lot more so so as I mentioned

00:48:14,890 --> 00:48:20,079
we are we have the proof of concept

00:48:17,589 --> 00:48:22,450
Cassandra branch we plan to not only

00:48:20,079 --> 00:48:25,930
make that one fully supported but we

00:48:22,450 --> 00:48:29,529
also plan to implement a plug-in

00:48:25,930 --> 00:48:31,239
structure for the storage backends so

00:48:29,529 --> 00:48:33,009
Cassandra will be just one plug-in like

00:48:31,239 --> 00:48:33,520
this we currently don't have other types

00:48:33,009 --> 00:48:34,810
plan

00:48:33,520 --> 00:48:37,150
although we have each request for them

00:48:34,810 --> 00:48:41,530
but I would assume they will come at

00:48:37,150 --> 00:48:50,050
some point so stay tuned a near future

00:48:41,530 --> 00:48:55,090
Cassandra should come any other

00:48:50,050 --> 00:48:59,140
questions it's a great chance to ask a

00:48:55,090 --> 00:49:06,190
question we've got a lot of time ten

00:48:59,140 --> 00:49:08,020
minutes one moment please I'm question

00:49:06,190 --> 00:49:10,330
to the to the dashboard or to the

00:49:08,020 --> 00:49:13,600
overview of the servers is it possible

00:49:10,330 --> 00:49:16,120
to generate some overviews that I can

00:49:13,600 --> 00:49:18,790
sort for maybe a group of product and

00:49:16,120 --> 00:49:20,830
server a group of stage server or maybe

00:49:18,790 --> 00:49:22,450
a group of web server group of

00:49:20,830 --> 00:49:26,080
application server that I can see this

00:49:22,450 --> 00:49:27,940
the problem is that group mm-hmm there

00:49:26,080 --> 00:49:30,280
are ways to show data and filter

00:49:27,940 --> 00:49:32,050
problems so I don't have that much

00:49:30,280 --> 00:49:35,830
problems in this that many problems in

00:49:32,050 --> 00:49:37,570
this system but one simple approach is

00:49:35,830 --> 00:49:39,040
to use this dashboard which itself is

00:49:37,570 --> 00:49:41,350
not highly customizable there are other

00:49:39,040 --> 00:49:44,140
views for this but there's a filter for

00:49:41,350 --> 00:49:46,810
it so let's say if I enable the filter I

00:49:44,140 --> 00:49:49,180
can choose until the day I only want to

00:49:46,810 --> 00:49:53,230
see the most important host group for my

00:49:49,180 --> 00:49:54,370
personal dashboard another way which I

00:49:53,230 --> 00:49:55,870
personally like because of its

00:49:54,370 --> 00:49:57,490
simplicity and the filtering

00:49:55,870 --> 00:50:00,220
capabilities as well is the monitoring

00:49:57,490 --> 00:50:01,720
triggers so in this page I can see the

00:50:00,220 --> 00:50:03,820
currently active triggers right now I

00:50:01,720 --> 00:50:05,410
have only two of them resolved so they

00:50:03,820 --> 00:50:08,280
will be shown here for a while then they

00:50:05,410 --> 00:50:12,220
will go away but I can filter it by a

00:50:08,280 --> 00:50:13,420
individual host or by host group so if i

00:50:12,220 --> 00:50:16,000
want to see all the problems and natural

00:50:13,420 --> 00:50:18,010
devices i can do that there's also a

00:50:16,000 --> 00:50:19,660
more advanced filter here so i can

00:50:18,010 --> 00:50:21,310
filter based on the acknowledgment

00:50:19,660 --> 00:50:23,080
status i can show events for all the

00:50:21,310 --> 00:50:25,750
problem i can filter by the minimum

00:50:23,080 --> 00:50:27,160
sorority so maybe I want to see all the

00:50:25,750 --> 00:50:30,310
problems that are not acknowledged which

00:50:27,160 --> 00:50:32,050
are more serious I can filter by the age

00:50:30,310 --> 00:50:35,470
this might seem a bit strange at first

00:50:32,050 --> 00:50:37,300
but we have some customers for whom the

00:50:35,470 --> 00:50:39,310
standard operating principle is that

00:50:37,300 --> 00:50:41,410
somebody is always looking at the zabbix

00:50:39,310 --> 00:50:44,500
interface if the problem happens there

00:50:41,410 --> 00:50:46,240
they work on it they if they cannot fix

00:50:44,500 --> 00:50:47,380
it in a couple of days it does not have

00:50:46,240 --> 00:50:48,670
to stay up there so they

00:50:47,380 --> 00:50:52,180
I problem which are older than some

00:50:48,670 --> 00:50:53,559
period of time and I can filter by name

00:50:52,180 --> 00:50:55,569
as well let's say if I only want to see

00:50:53,559 --> 00:50:59,470
all the CP low-to-high triggers in this

00:50:55,569 --> 00:51:01,119
specific host group this and similar

00:50:59,470 --> 00:51:03,549
views I can also include them in

00:51:01,119 --> 00:51:08,740
something called screens and the screen

00:51:03,549 --> 00:51:10,720
is a collection of different entities I

00:51:08,740 --> 00:51:13,839
probably should not go in this too much

00:51:10,720 --> 00:51:17,589
but to a screen i can add lots of

00:51:13,839 --> 00:51:20,170
different things so it's a cell-based

00:51:17,589 --> 00:51:22,329
configuration so it's a table and to

00:51:20,170 --> 00:51:25,960
each of the cells i can add lots of

00:51:22,329 --> 00:51:27,880
different elements so I could show let's

00:51:25,960 --> 00:51:29,829
say a bunch of graph showing router

00:51:27,880 --> 00:51:31,960
traffic at the top then I could show a

00:51:29,829 --> 00:51:34,180
list of the currently active problems

00:51:31,960 --> 00:51:37,750
for a specific host group or personal

00:51:34,180 --> 00:51:40,900
specific host or for all of them so

00:51:37,750 --> 00:51:42,670
there's a fair amount of customizability

00:51:40,900 --> 00:51:49,809
for how you want to show the problems

00:51:42,670 --> 00:51:59,650
and maybe filter them okay any more

00:51:49,809 --> 00:52:00,970
questions okay then so if no yeah that's

00:51:59,650 --> 00:52:03,910
just to get you woken up in the morning

00:52:00,970 --> 00:52:05,920
like running back and forth and the API

00:52:03,910 --> 00:52:09,160
you showed is not only for configuration

00:52:05,920 --> 00:52:11,619
I suppose it's also for getting values

00:52:09,160 --> 00:52:13,390
out of settings from the API you can get

00:52:11,619 --> 00:52:15,490
currently historical information event

00:52:13,390 --> 00:52:18,700
information acknowledge data and all

00:52:15,490 --> 00:52:20,559
that what one may be major thing you

00:52:18,700 --> 00:52:23,529
cannot get out currently is the trend

00:52:20,559 --> 00:52:25,150
data so for that you have to dive into

00:52:23,529 --> 00:52:27,579
the database at this point that one

00:52:25,150 --> 00:52:30,130
definitely will come I just cannot tell

00:52:27,579 --> 00:52:32,380
when exactly but history events and all

00:52:30,130 --> 00:52:33,910
that is possible right now so you one

00:52:32,380 --> 00:52:37,359
can script around that you do not have a

00:52:33,910 --> 00:52:40,390
plug in for other backends by using the

00:52:37,359 --> 00:52:42,309
API and read all the information dump it

00:52:40,390 --> 00:52:44,500
to another back end you could but

00:52:42,309 --> 00:52:46,569
probably if you want to do it on a large

00:52:44,500 --> 00:52:48,789
scale and date role database access will

00:52:46,569 --> 00:52:54,630
be faster because through the API that's

00:52:48,789 --> 00:52:59,259
another layer mm-hmm so okay thanks

00:52:54,630 --> 00:53:01,060
thank you I'm just curious to see if

00:52:59,259 --> 00:53:03,700
could you apply like

00:53:01,060 --> 00:53:05,500
if you install the agent on a host could

00:53:03,700 --> 00:53:08,950
you apply the older checks that are

00:53:05,500 --> 00:53:11,680
available for that specific host in the

00:53:08,950 --> 00:53:15,520
system without applying a template or

00:53:11,680 --> 00:53:19,570
something well it can all like check and

00:53:15,520 --> 00:53:21,700
K does it let's say if if you know this

00:53:19,570 --> 00:53:24,820
system checking k you're learning well

00:53:21,700 --> 00:53:27,430
Eliza so the whole idea is that you can

00:53:24,820 --> 00:53:31,380
just inventories the host and it will

00:53:27,430 --> 00:53:34,630
detect all the available services and

00:53:31,380 --> 00:53:37,810
type of checks that are that could be

00:53:34,630 --> 00:53:39,970
active in the system well personally I

00:53:37,810 --> 00:53:41,590
prefer more more strict approach where

00:53:39,970 --> 00:53:43,000
something like puppets chef or whatever

00:53:41,590 --> 00:53:44,560
would feed zabbix this information

00:53:43,000 --> 00:53:46,090
through the API because they know what

00:53:44,560 --> 00:53:47,200
is supposed to be running on the system

00:53:46,090 --> 00:53:49,540
not what current what's currently

00:53:47,200 --> 00:53:51,400
running but what you can do is use a

00:53:49,540 --> 00:53:53,440
feature we call active agent out

00:53:51,400 --> 00:53:54,490
registration so an agent which is going

00:53:53,440 --> 00:53:55,540
to conclude the server we call them

00:53:54,490 --> 00:53:57,580
active this is from the Asian

00:53:55,540 --> 00:53:59,260
perspective always so a passive agents

00:53:57,580 --> 00:54:00,880
its and wait for connections activation

00:53:59,260 --> 00:54:02,350
connects to the server when an

00:54:00,880 --> 00:54:03,940
activation connect to the server it

00:54:02,350 --> 00:54:07,600
sends a bunch of information and you can

00:54:03,940 --> 00:54:09,040
use a substring matching to link to

00:54:07,600 --> 00:54:13,780
template automatically on the zabbix

00:54:09,040 --> 00:54:16,660
side ok ok so and for puppet you

00:54:13,780 --> 00:54:20,290
mentioned puppet you just mean like

00:54:16,660 --> 00:54:22,840
puppet doing a configuration and setting

00:54:20,290 --> 00:54:25,120
up some nodes and that's how to deploy

00:54:22,840 --> 00:54:27,160
the agents and collaboration templates

00:54:25,120 --> 00:54:29,170
and yeah it seems to be fairly popular

00:54:27,160 --> 00:54:31,660
and I would say very very same approach

00:54:29,170 --> 00:54:32,920
where you have to be the configuration

00:54:31,660 --> 00:54:34,870
management system or system management

00:54:32,920 --> 00:54:36,400
tool deploy the system install whatever

00:54:34,870 --> 00:54:38,500
components are running there then it

00:54:36,400 --> 00:54:40,630
knows about that goes to the zabbix API

00:54:38,500 --> 00:54:43,090
create the host links to the templates

00:54:40,630 --> 00:54:44,800
later if the role changes it can unlink

00:54:43,090 --> 00:54:50,670
from some template link to other and so

00:54:44,800 --> 00:54:55,120
on ok and also to support something like

00:54:50,670 --> 00:54:58,690
naca and NLP and stuff to send to zabbix

00:54:55,120 --> 00:55:01,540
so we don't officially support that but

00:54:58,690 --> 00:55:03,250
there are the community contributed

00:55:01,540 --> 00:55:04,930
rapper script at least for some of those

00:55:03,250 --> 00:55:06,760
I can't really tell you for which ones

00:55:04,930 --> 00:55:08,320
exactly but at least one there is a

00:55:06,760 --> 00:55:12,970
rapper script so you can use some of

00:55:08,320 --> 00:55:14,050
those ok do support agents also for AIX

00:55:12,970 --> 00:55:16,630
or

00:55:14,050 --> 00:55:20,110
some days i mix agent it can natively

00:55:16,630 --> 00:55:24,820
run on IX on h PX Solarius Bhd's windows

00:55:20,110 --> 00:55:26,740
linux so pretty much any unix-like

00:55:24,820 --> 00:55:28,480
system should work on some more exotic

00:55:26,740 --> 00:55:30,310
ones there might be some slight issues

00:55:28,480 --> 00:55:31,900
getting it to compile but if so then we

00:55:30,310 --> 00:55:34,180
consider that a bug so let us know we

00:55:31,900 --> 00:55:37,210
will eventually fix it okay so there's a

00:55:34,180 --> 00:55:39,580
source so you can just compile or so of

00:55:37,210 --> 00:55:41,050
course we are GPL too so I mean it's

00:55:39,580 --> 00:55:42,580
full open source true opens where's no

00:55:41,050 --> 00:55:46,030
open core remember about that it's

00:55:42,580 --> 00:55:47,350
important okay thanks the problem just

00:55:46,030 --> 00:55:49,810
to mention that if you want to compile

00:55:47,350 --> 00:55:54,700
on something along on Ike's then that

00:55:49,810 --> 00:55:57,580
might be a bit of a challenge okay so he

00:55:54,700 --> 00:56:04,090
can stay here it's good and what was the

00:55:57,580 --> 00:56:06,400
question again well there the items you

00:56:04,090 --> 00:56:07,750
you collect graph performance data it's

00:56:06,400 --> 00:56:11,140
all about performance data for me and

00:56:07,750 --> 00:56:14,200
and the retention times and the storage

00:56:11,140 --> 00:56:16,810
durability is it configurable or do you

00:56:14,200 --> 00:56:18,340
it depends a pro prima she depends on

00:56:16,810 --> 00:56:20,140
the side of the system if the system is

00:56:18,340 --> 00:56:21,820
not huge then it's configurable per

00:56:20,140 --> 00:56:23,590
individual items I can keep this data

00:56:21,820 --> 00:56:25,750
for week this for one day this for a

00:56:23,590 --> 00:56:28,480
year whatever if the system is really

00:56:25,750 --> 00:56:31,120
large then you have to partition the

00:56:28,480 --> 00:56:33,520
tables otherwise the delete statements

00:56:31,120 --> 00:56:35,500
would really not be very quick in that

00:56:33,520 --> 00:56:38,230
case it all ends up being the same for

00:56:35,500 --> 00:56:42,250
all the items okay the bigger is get you

00:56:38,230 --> 00:56:44,170
get this the more well there are like

00:56:42,250 --> 00:56:46,630
two two levels at some point you're

00:56:44,170 --> 00:56:48,250
pushing so much 18 database that it

00:56:46,630 --> 00:56:50,140
cannot really keep up with removing old

00:56:48,250 --> 00:56:52,270
data so then you have the partitioning

00:56:50,140 --> 00:56:54,160
because dropping a partition is way

00:56:52,270 --> 00:56:57,820
cheaper operation than doing a delete of

00:56:54,160 --> 00:56:59,980
many many values okay but you can you

00:56:57,820 --> 00:57:03,100
say for one item that you do not want to

00:56:59,980 --> 00:57:05,010
collect the the historical data is it

00:57:03,100 --> 00:57:08,080
yes you can set that to zero as well

00:57:05,010 --> 00:57:09,240
sure you can do that although on the

00:57:08,080 --> 00:57:11,740
other hand and why would you do that

00:57:09,240 --> 00:57:13,570
maybe you don't care about the historic

00:57:11,740 --> 00:57:17,560
data because you only care about now

00:57:13,570 --> 00:57:21,160
let's say no no surgical you could do

00:57:17,560 --> 00:57:23,220
that yeah okay and for how many hosts do

00:57:21,160 --> 00:57:26,050
you think is it's saying to you civics

00:57:23,220 --> 00:57:27,880
1000 it's heavily depends on how many

00:57:26,050 --> 00:57:29,349
items you're monitoring on each of them

00:57:27,880 --> 00:57:31,690
what the intervals are what retention

00:57:29,349 --> 00:57:33,130
periods are we have some environments

00:57:31,690 --> 00:57:35,079
where they're monitoring somewhere

00:57:33,130 --> 00:57:36,220
around hundred thousand hosts obviously

00:57:35,079 --> 00:57:38,500
in those environments they are rather

00:57:36,220 --> 00:57:41,200
simple like maybe two items per host but

00:57:38,500 --> 00:57:44,769
still it does scale to that level okay

00:57:41,200 --> 00:57:51,759
okay and there's over there the last

00:57:44,769 --> 00:57:53,710
question thank you you mentioned having

00:57:51,759 --> 00:57:55,829
your own agent I've been aware generally

00:57:53,710 --> 00:57:59,619
of the fact that you have your own agent

00:57:55,829 --> 00:58:03,640
just a curiosity question development

00:57:59,619 --> 00:58:06,130
effort wise how much time does Abuk

00:58:03,640 --> 00:58:08,609
spend working on the agent versus

00:58:06,130 --> 00:58:11,650
working on the rest of the platform

00:58:08,609 --> 00:58:14,769
that's hard maybe not that much i would

00:58:11,650 --> 00:58:16,869
say because the agent is fairly capable

00:58:14,769 --> 00:58:18,339
already most of the time we have to

00:58:16,869 --> 00:58:20,380
spend on the agent is fixing something

00:58:18,339 --> 00:58:22,390
on solaris where there's like non tech

00:58:20,380 --> 00:58:25,269
non-continuous cpus and then that

00:58:22,390 --> 00:58:27,700
stranger that we didn't expect although

00:58:25,269 --> 00:58:29,140
we do have people coming in and saying

00:58:27,700 --> 00:58:32,410
that hey i want the agent to support

00:58:29,140 --> 00:58:33,910
this feature or that feature if i would

00:58:32,410 --> 00:58:39,779
have to make a wild guess i would

00:58:33,910 --> 00:58:42,789
probably say overall maybe ten percent

00:58:39,779 --> 00:58:45,400
but that obviously also changes a lot in

00:58:42,789 --> 00:58:46,960
some in some major releases we work on

00:58:45,400 --> 00:58:49,539
the agent a lot because there's like

00:58:46,960 --> 00:58:51,549
there was a company which wanted like 20

00:58:49,539 --> 00:58:54,789
new items in the agents and then we have

00:58:51,549 --> 00:58:58,599
to spend some time on that but overall i

00:58:54,789 --> 00:58:59,740
would estimate something like that so as

00:58:58,599 --> 00:59:01,539
you mentioned that's probably the last

00:58:59,740 --> 00:59:03,009
question then i'll just mention that if

00:59:01,539 --> 00:59:05,559
anybody has any additional questions

00:59:03,009 --> 00:59:08,500
feel free to catch me later i'll be

00:59:05,559 --> 00:59:10,480
hanging around for the rest of the day I

00:59:08,500 --> 00:59:11,890
definitely do come to the exotic channel

00:59:10,480 --> 00:59:13,569
on the fray node it's a really great

00:59:11,890 --> 00:59:15,369
place with the advance that accusers

00:59:13,569 --> 00:59:17,019
hanging out there even if you don't have

00:59:15,369 --> 00:59:19,089
the questions you can come to me I have

00:59:17,019 --> 00:59:25,089
some zabbix penzance a big stickers and

00:59:19,089 --> 00:59:27,250
and so on so yeah okay thank you very

00:59:25,089 --> 00:59:28,500
much for your presentation thanks for

00:59:27,250 --> 00:59:30,560
waking up

00:59:28,500 --> 00:59:30,560

YouTube URL: https://www.youtube.com/watch?v=DsHt4wciqtY


