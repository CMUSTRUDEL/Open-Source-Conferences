Title: Angular Vienna, ngUpgrade - From AngularJS to Angular, March 2018
Publication date: 2018-03-20
Playlist: Angular Vienna
Description: 
	by Stefan Kerschbaumer:

I will tell you something about Angular's ngUpgrade package und show you how to use it. In fact I will show you the steps needed for going from AngularJS to newer versions of Angular and give you a little example.
Captions: 
	00:00:00,030 --> 00:00:05,790
hey Stefan I'm a tuna developer from

00:00:03,090 --> 00:00:08,210
nincada's and today I'm going to talk a

00:00:05,790 --> 00:00:10,559
little bit about energy upgrade our

00:00:08,210 --> 00:00:12,809
energy downgrade like the two

00:00:10,559 --> 00:00:16,230
possibilities of using the upgrade

00:00:12,809 --> 00:00:17,789
module from angular you've got the

00:00:16,230 --> 00:00:20,550
upgrade way and downgrade way I would

00:00:17,789 --> 00:00:22,199
say the first thing why should I upgrade

00:00:20,550 --> 00:00:24,779
my angular application

00:00:22,199 --> 00:00:26,010
well I think a major reason is that

00:00:24,779 --> 00:00:28,920
you've got ahead of time compilation

00:00:26,010 --> 00:00:30,570
when using angular 2 instead of just in

00:00:28,920 --> 00:00:33,690
time compilation with which brings you

00:00:30,570 --> 00:00:36,480
better security since the HTML templates

00:00:33,690 --> 00:00:42,770
are just placed in the JavaScript files

00:00:36,480 --> 00:00:48,809
and everything they should is yeah sorry

00:00:42,770 --> 00:00:51,449
I'm a little bit nervous so like faster

00:00:48,809 --> 00:00:54,270
rendering and reduced code and better

00:00:51,449 --> 00:00:59,399
performance since change detection is

00:00:54,270 --> 00:01:02,280
different in angular 2 or above so like

00:00:59,399 --> 00:01:04,320
the next step I hope I'm not so fast but

00:01:02,280 --> 00:01:06,960
actually it's just a little step by step

00:01:04,320 --> 00:01:09,360
guide and things that I noticed when

00:01:06,960 --> 00:01:12,960
using angular app great so there are two

00:01:09,360 --> 00:01:14,280
ways of using angular upgrade but I just

00:01:12,960 --> 00:01:16,049
want to say at this point that it's not

00:01:14,280 --> 00:01:18,659
actually angular upgrade it's like

00:01:16,049 --> 00:01:20,939
angular upgrade slash aesthetic since

00:01:18,659 --> 00:01:22,439
since angular upgrade is the upgrade

00:01:20,939 --> 00:01:24,900
adapter which is deprecated so you

00:01:22,439 --> 00:01:29,070
shouldn't use it but the package me to

00:01:24,900 --> 00:01:30,960
install is still angular upgrade so the

00:01:29,070 --> 00:01:32,579
ways is the ways you can use this

00:01:30,960 --> 00:01:34,530
upgrade module or the Unkrich module

00:01:32,579 --> 00:01:39,210
what are the major differences between

00:01:34,530 --> 00:01:41,610
these two methods in upgrade measure

00:01:39,210 --> 00:01:45,030
module you have the same zone for

00:01:41,610 --> 00:01:46,890
angularjs and angular so when change

00:01:45,030 --> 00:01:49,409
detection is triggered it will be

00:01:46,890 --> 00:01:52,770
triggered in angularjs and angular 2 or

00:01:49,409 --> 00:01:55,670
above in downgrade module we have

00:01:52,770 --> 00:01:59,570
separate zones for angularjs and angular

00:01:55,670 --> 00:02:02,210
so yeah today I'm going to talk about

00:01:59,570 --> 00:02:06,299
downgrade module as I mentioned before

00:02:02,210 --> 00:02:08,459
so why the downgrade module we have been

00:02:06,299 --> 00:02:12,450
using the upgrade module in a bigger

00:02:08,459 --> 00:02:13,830
project and winter no ties because of

00:02:12,450 --> 00:02:18,750
the fact that angularjs and

00:02:13,830 --> 00:02:21,720
has the same Sun it can lead to major

00:02:18,750 --> 00:02:23,960
performance problems since the change

00:02:21,720 --> 00:02:28,230
detection is triggered in both of these

00:02:23,960 --> 00:02:30,780
angular applications you can also

00:02:28,230 --> 00:02:33,440
research research the problem you find

00:02:30,780 --> 00:02:35,400
really really many issues on this and

00:02:33,440 --> 00:02:42,090
yeah that's the reason why I'm talking

00:02:35,400 --> 00:02:44,310
about downgrade module today so yeah so

00:02:42,090 --> 00:02:47,040
the downgrade steps are actually really

00:02:44,310 --> 00:02:50,580
simple you just need to declare your

00:02:47,040 --> 00:02:54,120
angular 2 or angular 4 5 module for sure

00:02:50,580 --> 00:02:55,560
and its components you need to down

00:02:54,120 --> 00:02:58,530
create your angular modules and

00:02:55,560 --> 00:03:01,410
components to angular chairs after

00:02:58,530 --> 00:03:04,560
implementing them and after that you

00:03:01,410 --> 00:03:06,060
need to for sure refactor the components

00:03:04,560 --> 00:03:09,030
and directives from your angularjs

00:03:06,060 --> 00:03:12,090
applications and move them to your new

00:03:09,030 --> 00:03:14,660
angular 2 module to in later steps

00:03:12,090 --> 00:03:17,130
remove the old angularjs modules and

00:03:14,660 --> 00:03:18,959
remove also the angular upgrade package

00:03:17,130 --> 00:03:24,360
since it is not needed at this point

00:03:18,959 --> 00:03:26,180
anymore yeah the implementation for sure

00:03:24,360 --> 00:03:30,320
you need to install angular upgrade

00:03:26,180 --> 00:03:33,209
that's our main package we need and

00:03:30,320 --> 00:03:36,180
things we need from this angular angular

00:03:33,209 --> 00:03:37,950
upgrade static is down key components

00:03:36,180 --> 00:03:40,950
down quit module and downgrade

00:03:37,950 --> 00:03:43,620
injectable these free modern efforts for

00:03:40,950 --> 00:03:45,780
the components for the modules and also

00:03:43,620 --> 00:03:53,130
for the services which are used in the

00:03:45,780 --> 00:03:55,769
angular application so I will show a

00:03:53,130 --> 00:03:59,190
little example so we can define our

00:03:55,769 --> 00:04:02,420
angular 2 module like always this is

00:03:59,190 --> 00:04:06,209
just a little snippet from a base and

00:04:02,420 --> 00:04:09,209
after that we need to provide a function

00:04:06,209 --> 00:04:13,230
which takes one extra parameter this

00:04:09,209 --> 00:04:18,570
parameter is needed from from down crowd

00:04:13,230 --> 00:04:20,549
down crate modulator and the return

00:04:18,570 --> 00:04:22,660
value is the value from bootstrap made

00:04:20,549 --> 00:04:30,100
you module

00:04:22,660 --> 00:04:32,020
I think my okay and yeah so what we will

00:04:30,100 --> 00:04:34,630
get here when using downgrade module

00:04:32,020 --> 00:04:36,850
with this function defined above we will

00:04:34,630 --> 00:04:39,310
get actually angling one module which

00:04:36,850 --> 00:04:42,280
you can later use the bootstrapping and

00:04:39,310 --> 00:04:45,030
registered as angular 1 module so that's

00:04:42,280 --> 00:04:47,500
the first step we have our angular 2

00:04:45,030 --> 00:04:49,210
module is set up and down created so

00:04:47,500 --> 00:04:53,650
angular 1 so we can later move the

00:04:49,210 --> 00:04:56,790
components to our new module like it

00:04:53,650 --> 00:05:00,010
says sound create downgrade which is so

00:04:56,790 --> 00:05:01,480
well it's the same for the components

00:05:00,010 --> 00:05:04,930
it's really another complicated thing

00:05:01,480 --> 00:05:07,120
you just need to create a component and

00:05:04,930 --> 00:05:14,470
resist it as a directive with using the

00:05:07,120 --> 00:05:17,770
downgrade component function I'm so

00:05:14,470 --> 00:05:20,080
nervous I think my I have like two

00:05:17,770 --> 00:05:22,510
slides left and I talked like two

00:05:20,080 --> 00:05:28,570
minutes I don't know I'm so sorry it's a

00:05:22,510 --> 00:05:32,380
first jargon and yeah well the same for

00:05:28,570 --> 00:05:35,040
angular services you need as long with

00:05:32,380 --> 00:05:37,720
injectable is provided from angular

00:05:35,040 --> 00:05:40,050
upgrade slash aesthetic I see I forgets

00:05:37,720 --> 00:05:43,930
you a ten-part here I'm sorry for that

00:05:40,050 --> 00:05:45,070
but as I said before I you need to make

00:05:43,930 --> 00:05:46,660
sure that you import from angular

00:05:45,070 --> 00:05:48,250
upgrades that you get not from accurate

00:05:46,660 --> 00:05:55,990
because that's the deprecated upgrade

00:05:48,250 --> 00:05:59,680
adapter yeah it's it's it's really too

00:05:55,990 --> 00:06:02,560
fast and my content is too far

00:05:59,680 --> 00:06:04,480
yeah later the next steps are like

00:06:02,560 --> 00:06:07,510
removing the angular chest when you have

00:06:04,480 --> 00:06:10,210
finally refactor your angular 1

00:06:07,510 --> 00:06:12,550
directives and services into angular 2

00:06:10,210 --> 00:06:15,040
directives you can remove your old

00:06:12,550 --> 00:06:16,930
angularjs application can remove angular

00:06:15,040 --> 00:06:20,230
upgrade and direct run your angular 2 4

00:06:16,930 --> 00:06:23,560
or 5 model module on its own that's the

00:06:20,230 --> 00:06:27,880
simple simple steps on upgrading

00:06:23,560 --> 00:06:30,820
angularjs application so yeah I'm so

00:06:27,880 --> 00:06:32,700
sorry that they were third shot is

00:06:30,820 --> 00:06:35,630
anybody had some

00:06:32,700 --> 00:06:35,630

YouTube URL: https://www.youtube.com/watch?v=0Iy0tAmw3aM


