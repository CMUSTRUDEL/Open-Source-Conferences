Title: Angular Vienna, Angular Animations Introduction, September 2017
Publication date: 2018-01-24
Playlist: Angular Vienna
Description: 
	Animations allow us to better engage with our users and make our applications more fun to use and program.This talk will give an overview of Angular animations, compare them with other solutions and show some new features released with Angular 4.2.

Marko Jurišić is a full-stack software developer currently working on enterprise solutions at Bearingpoint.

Find Marko on Twitter:

Talk recorded at Angular Vienna: https://www.meetup.com/Angular-Vienna/
Captions: 
	00:00:00,000 --> 00:00:04,560
hello everybody my name is Marco yuriage

00:00:02,520 --> 00:00:06,379
I'm working as a full-stack developer

00:00:04,560 --> 00:00:09,660
for BearingPoint

00:00:06,379 --> 00:00:12,780
for the last 10 half years a big project

00:00:09,660 --> 00:00:15,780
for a big railroad company I'm not about

00:00:12,780 --> 00:00:22,890
to say which one I can just say it's not

00:00:15,780 --> 00:00:26,060
less fun and thanks for staying so long

00:00:22,890 --> 00:00:31,050
and for heaven here and I hope you will

00:00:26,060 --> 00:00:33,660
find it interesting so my topic today is

00:00:31,050 --> 00:00:37,920
introduction to an angular animations

00:00:33,660 --> 00:00:40,379
animations which all know allow us to

00:00:37,920 --> 00:00:42,480
engage with our users call it angel

00:00:40,379 --> 00:00:44,910
various need so when some new elements

00:00:42,480 --> 00:00:47,100
come to the screen we can a nicely fade

00:00:44,910 --> 00:00:50,250
them in or slide I mean so to call

00:00:47,100 --> 00:00:52,800
intention where is needed and there make

00:00:50,250 --> 00:00:56,730
our application more fun to use for our

00:00:52,800 --> 00:00:59,460
users and for us the program of course I

00:00:56,730 --> 00:01:02,809
had some projects where I developed only

00:00:59,460 --> 00:01:06,630
web services for a few months and it was

00:01:02,809 --> 00:01:09,150
boring painful etc and when I finally

00:01:06,630 --> 00:01:10,470
got to program some user interfaces I

00:01:09,150 --> 00:01:14,479
was so happy that I could use some young

00:01:10,470 --> 00:01:18,810
animations I see look at the jump etc so

00:01:14,479 --> 00:01:21,720
also for us as developers it's fun to

00:01:18,810 --> 00:01:24,479
see something moving on the screen we

00:01:21,720 --> 00:01:28,590
have several ways how we can introduce

00:01:24,479 --> 00:01:30,110
animations to our applications simple

00:01:28,590 --> 00:01:34,110
way is using css3

00:01:30,110 --> 00:01:37,979
but it's good only for simple effects

00:01:34,110 --> 00:01:40,890
for we use it by adding or removing

00:01:37,979 --> 00:01:43,740
classes so for simple fade in fade out

00:01:40,890 --> 00:01:46,409
and the bounces they are ok but for more

00:01:43,740 --> 00:01:48,840
complicated use cases we have to use

00:01:46,409 --> 00:01:51,390
something more powerful in your

00:01:48,840 --> 00:01:53,729
animations uses web animations which

00:01:51,390 --> 00:01:57,329
allows for fine grained animation

00:01:53,729 --> 00:01:59,759
controls so we have much more power how

00:01:57,329 --> 00:02:03,719
our animations be able to work out and

00:01:59,759 --> 00:02:06,030
how they our applications look ankle

00:02:03,719 --> 00:02:08,910
animations use web animations in

00:02:06,030 --> 00:02:11,340
foundation with the angularjs they still

00:02:08,910 --> 00:02:12,230
use the css3 animations I think and now

00:02:11,340 --> 00:02:14,030
they are using

00:02:12,230 --> 00:02:16,970
animations they are supported in all

00:02:14,030 --> 00:02:19,069
modern browsers and there is a polyfill

00:02:16,970 --> 00:02:32,299
available for others and modern idea I

00:02:19,069 --> 00:02:35,930
mean Firefox and Chrome can I use web

00:02:32,299 --> 00:02:38,810
animations two of them are green and

00:02:35,930 --> 00:02:41,120
also the end angle anyway thousand opera

00:02:38,810 --> 00:02:50,359
if there are so are there any opera

00:02:41,120 --> 00:02:55,730
users I have it on my mobile it has a

00:02:50,359 --> 00:02:58,640
great head water and some new animations

00:02:55,730 --> 00:03:00,739
use animation DSL using the state's

00:02:58,640 --> 00:03:03,349
transitions and transformations to

00:03:00,739 --> 00:03:06,859
achieve our desired effects and from

00:03:03,349 --> 00:03:09,769
version 4.2 there are some new features

00:03:06,859 --> 00:03:12,260
like router animations animation

00:03:09,769 --> 00:03:14,359
parameters we can pass some values to

00:03:12,260 --> 00:03:16,780
our animations and make them reusable

00:03:14,359 --> 00:03:20,440
and pack them in their own files

00:03:16,780 --> 00:03:24,769
animation scrubbing something which is

00:03:20,440 --> 00:03:27,769
not at all possible it css3 which means

00:03:24,769 --> 00:03:29,980
to have a slider and to finally control

00:03:27,769 --> 00:03:35,450
which frame will be displayed and to

00:03:29,980 --> 00:03:38,209
play for up a record etc I have to say

00:03:35,450 --> 00:03:40,329
most tutorials that I found looked like

00:03:38,209 --> 00:03:40,329
this

00:03:45,850 --> 00:03:53,030
but by angular animations they have

00:03:51,140 --> 00:03:56,300
quite a good guide it's a bit outdated

00:03:53,030 --> 00:03:58,430
it's for version 2 or something but you

00:03:56,300 --> 00:04:02,390
can get up and running using only this

00:03:58,430 --> 00:04:05,030
first link and guide animations and for

00:04:02,390 --> 00:04:08,200
the rest there is a great blog by Matias

00:04:05,030 --> 00:04:11,840
in Mela or whatever it's pronounced and

00:04:08,200 --> 00:04:15,290
he is the core developer on animation

00:04:11,840 --> 00:04:18,140
since angular 1 actually and best source

00:04:15,290 --> 00:04:20,329
for all things animations related he is

00:04:18,140 --> 00:04:23,030
also great conference speaker so you can

00:04:20,329 --> 00:04:26,960
check out some of these talks at youtube

00:04:23,030 --> 00:04:31,730
if you have some spare time this would

00:04:26,960 --> 00:04:33,940
be a minimal example of what we need to

00:04:31,730 --> 00:04:37,430
have something animated of on our page

00:04:33,940 --> 00:04:39,410
the first is to add angular animations

00:04:37,430 --> 00:04:41,690
dependencies to our package adjacent

00:04:39,410 --> 00:04:45,470
usually forget this and then I wonder if

00:04:41,690 --> 00:04:47,120
I have some errors so first step

00:04:45,470 --> 00:04:50,360
add the angle animations to dependencies

00:04:47,120 --> 00:04:52,340
to npm install afterwards and then we

00:04:50,360 --> 00:04:55,070
also have to import browser animations

00:04:52,340 --> 00:04:58,729
module to in our application module

00:04:55,070 --> 00:05:01,880
which will use animations and then we

00:04:58,729 --> 00:05:06,350
can actually add animations to our

00:05:01,880 --> 00:05:08,960
components for animations we have a few

00:05:06,350 --> 00:05:14,950
steps or concepts we have this add

00:05:08,960 --> 00:05:17,360
animation trigger which is connected to

00:05:14,950 --> 00:05:19,700
animation trigger in the component cells

00:05:17,360 --> 00:05:22,340
and animation state which controls in

00:05:19,700 --> 00:05:23,600
which state is our animated component so

00:05:22,340 --> 00:05:28,700
is it displayed not displayed is

00:05:23,600 --> 00:05:30,919
bouncing or whatever we use and in our

00:05:28,700 --> 00:05:33,460
component we have a few more lines so

00:05:30,919 --> 00:05:35,830
first we have to import import all

00:05:33,460 --> 00:05:40,370
animation elements that we want to use

00:05:35,830 --> 00:05:44,720
define this in animations array on our

00:05:40,370 --> 00:05:47,810
component decorator which what will be

00:05:44,720 --> 00:05:50,720
our trigger and then underneath can we

00:05:47,810 --> 00:05:53,630
can define all possible state

00:05:50,720 --> 00:05:56,960
transitions animations etc what do we

00:05:53,630 --> 00:05:58,430
need so in this example I have my

00:05:56,960 --> 00:06:00,920
animation trigger it

00:05:58,430 --> 00:06:03,620
only two states when something is

00:06:00,920 --> 00:06:06,290
enacted it has a style of opacity zero

00:06:03,620 --> 00:06:06,920
so it should not be displayed and then

00:06:06,290 --> 00:06:10,550
it's active

00:06:06,920 --> 00:06:13,420
it has opacity of one and when we do a

00:06:10,550 --> 00:06:18,680
transition between inactive and active

00:06:13,420 --> 00:06:30,700
we will animate it during one half

00:06:18,680 --> 00:06:33,170
seconds yes there there are all possible

00:06:30,700 --> 00:06:35,900
ease-in ease-out is which is a

00:06:33,170 --> 00:06:38,840
combination of ease-in and ease-out also

00:06:35,900 --> 00:06:42,790
bezier function you can define all

00:06:38,840 --> 00:06:46,130
different properties there are very

00:06:42,790 --> 00:06:59,540
there are many our example set this year

00:06:46,130 --> 00:07:03,020
of more block yes the name of the

00:06:59,540 --> 00:07:08,840
chicken so animation trigger is is bound

00:07:03,020 --> 00:07:10,760
to this time and this is the state

00:07:08,840 --> 00:07:13,910
variable it has to be a string variable

00:07:10,760 --> 00:07:16,280
on our component we can also use a

00:07:13,910 --> 00:07:20,120
getter but it has to return a string if

00:07:16,280 --> 00:07:22,970
it's boolean it won't work there are

00:07:20,120 --> 00:07:25,070
some examples which only call which may

00:07:22,970 --> 00:07:27,730
get her to convert between string and

00:07:25,070 --> 00:07:30,860
balloons but it's simple just to use

00:07:27,730 --> 00:07:34,970
control variable which is string on our

00:07:30,860 --> 00:07:39,350
component and in toggling we just set

00:07:34,970 --> 00:07:41,980
our control variable to whichever state

00:07:39,350 --> 00:07:45,880
you want and angular does it's magic and

00:07:41,980 --> 00:07:48,050
animates everything any more questions

00:07:45,880 --> 00:07:53,500
somebody said three slides already

00:07:48,050 --> 00:07:59,180
talking for sponsors I guess somewhere

00:07:53,500 --> 00:08:01,190
so now I should do a demo I wanted to do

00:07:59,180 --> 00:08:05,540
a live coding session and created a new

00:08:01,190 --> 00:08:10,270
empty CLI project that it sent away and

00:08:05,540 --> 00:08:10,270
died let's see if it's working

00:08:11,730 --> 00:08:21,250
host okay it's a more advanced example I

00:08:16,480 --> 00:08:35,090
will show you later I know I was right

00:08:21,250 --> 00:08:37,110
now behold made you dangle thank you I

00:08:35,090 --> 00:08:41,800
[Applause]

00:08:37,110 --> 00:08:44,140
never have this reaction let's just now

00:08:41,800 --> 00:08:46,890
make a new component I first have to

00:08:44,140 --> 00:08:46,890
find this thing

00:09:01,080 --> 00:09:13,520
tighten up this so let's create a new

00:09:06,150 --> 00:09:17,250
component to do our wonderful example I

00:09:13,520 --> 00:09:27,960
think I have a console somewhere hot

00:09:17,250 --> 00:09:33,870
area ng generate a component house we

00:09:27,960 --> 00:09:38,370
call this live demo what so I and

00:09:33,870 --> 00:09:42,210
reserved now I should have also a new

00:09:38,370 --> 00:09:45,240
component there live demo and it created

00:09:42,210 --> 00:09:48,420
some files for me component component

00:09:45,240 --> 00:09:50,670
component so let's check if I have my

00:09:48,420 --> 00:09:53,880
dependencies right I tend to forget it

00:09:50,670 --> 00:09:58,380
in package a Sonicare my angular

00:09:53,880 --> 00:10:04,950
animations so : good in my application

00:09:58,380 --> 00:10:12,500
module I also have my browser animations

00:10:04,950 --> 00:10:12,500
module shorts okay and now what do we do

00:10:24,260 --> 00:10:30,800
No

00:10:25,920 --> 00:10:30,800
so light no more like wedding

00:10:41,730 --> 00:10:58,290
yep live demo did not mention a Thomas

00:10:44,410 --> 00:10:58,290
why well demo component is there a sure

00:11:02,010 --> 00:11:07,300
okay let's go it away let's do it

00:11:04,780 --> 00:11:10,990
component and add our live demo

00:11:07,300 --> 00:11:14,890
component to my routine huh it should be

00:11:10,990 --> 00:11:22,090
my third example about my second live

00:11:14,890 --> 00:11:25,980
demo component live demo component to

00:11:22,090 --> 00:11:25,980
save and

00:11:32,330 --> 00:11:40,180
oh it is a life okay let us now do some

00:11:37,700 --> 00:11:40,180
live coding

00:11:40,270 --> 00:11:48,890
don't pretend you never had this that's

00:11:42,950 --> 00:11:53,870
work so let's try to do that retry

00:11:48,890 --> 00:11:58,360
showed a few seconds ago so div it has

00:11:53,870 --> 00:12:06,050
to make did it is happy and let's make a

00:11:58,360 --> 00:12:17,000
some contact the let's say my animation

00:12:06,050 --> 00:12:24,830
my animation is my anak state and let's

00:12:17,000 --> 00:12:26,930
say it works as I said another button

00:12:24,830 --> 00:12:32,450
just a button which will do something

00:12:26,930 --> 00:12:35,570
hopefully do something if it does

00:12:32,450 --> 00:12:38,900
something I'm happy I'm not very I don't

00:12:35,570 --> 00:12:46,660
have very many requests so that's the

00:12:38,900 --> 00:12:46,660
way click Handler and say run animation

00:12:47,800 --> 00:12:55,100
okay so far so good

00:12:51,320 --> 00:12:59,180
I also tend to forget to save my files

00:12:55,100 --> 00:13:04,340
in visual studio because I use IntelliJ

00:12:59,180 --> 00:13:07,700
or something like that so if I forget it

00:13:04,340 --> 00:13:12,890
please tell me so I need my own state in

00:13:07,700 --> 00:13:18,570
my component and let's say that it is in

00:13:12,890 --> 00:13:22,500
active inactive okay

00:13:18,570 --> 00:13:27,810
here we will just calculate it this my

00:13:22,500 --> 00:13:31,770
annum state is active let's now define

00:13:27,810 --> 00:13:35,910
some animations so as I already said we

00:13:31,770 --> 00:13:41,310
have animations which is an i1 array and

00:13:35,910 --> 00:13:43,350
this array we can use some triggers so

00:13:41,310 --> 00:13:51,120
we have to import all this stuff from

00:13:43,350 --> 00:13:53,280
animations we import things from angular

00:13:51,120 --> 00:13:54,210
animations totally already offered it so

00:13:53,280 --> 00:13:57,650
I don't need it

00:13:54,210 --> 00:14:01,700
I need a trigger I will also need

00:13:57,650 --> 00:14:10,530
animate and what was probably a style

00:14:01,700 --> 00:14:17,340
and a state for now so let's see if it

00:14:10,530 --> 00:14:27,270
works I will have a trigger with the

00:14:17,340 --> 00:14:32,160
following property so my animation and

00:14:27,270 --> 00:14:34,470
an array of things we can define our

00:14:32,160 --> 00:14:39,420
transition directly with inline States

00:14:34,470 --> 00:14:44,250
or we can define our States which we

00:14:39,420 --> 00:14:49,010
will use in the final transitions step

00:14:44,250 --> 00:14:51,870
the difference between inline States and

00:14:49,010 --> 00:14:53,550
predefined States is when you predefined

00:14:51,870 --> 00:14:56,970
state and your variable space in this

00:14:53,550 --> 00:14:59,700
state then this applied end step of

00:14:56,970 --> 00:15:01,730
animation stays there so if you use

00:14:59,700 --> 00:15:03,900
[Music]

00:15:01,730 --> 00:15:05,910
United States then it does form

00:15:03,900 --> 00:15:07,830
animation then jumps where it should be

00:15:05,910 --> 00:15:11,790
at the beginning I'll show it in a

00:15:07,830 --> 00:15:15,510
example later so we have this trigger

00:15:11,790 --> 00:15:22,280
and we will define some States one state

00:15:15,510 --> 00:15:22,280
we named inactive and

00:15:22,860 --> 00:15:39,930
with style let's say opacity zero and

00:15:36,990 --> 00:15:46,110
the same with opacity one but we will

00:15:39,930 --> 00:15:54,089
call it surprisingly active and now we

00:15:46,110 --> 00:16:00,050
can define our transitions captain

00:15:54,089 --> 00:16:00,050
transition we have an transition between

00:16:01,310 --> 00:16:15,740
state inactive to active and we want to

00:16:08,070 --> 00:16:15,740
do something we just animate it and say

00:16:18,170 --> 00:16:27,930
1010 Piron people see oh it works it

00:16:24,390 --> 00:16:30,390
doesn't work okay in active active

00:16:27,930 --> 00:16:34,320
animated style my annum state is

00:16:30,390 --> 00:16:37,410
inactive it's okay and here we have my

00:16:34,320 --> 00:16:38,100
own in states with my animation handler

00:16:37,410 --> 00:16:50,070
what did I do wrong

00:16:38,100 --> 00:16:57,720
drunk now does it by automatic opacity

00:16:50,070 --> 00:16:59,070
Zuria automatic ah maybe there isn't

00:16:57,720 --> 00:17:01,260
there are no bubbles there so it's

00:16:59,070 --> 00:17:05,419
safety huh it's wrong

00:17:01,260 --> 00:17:09,199
huh I just saved the father do something

00:17:05,419 --> 00:17:09,199
why it works

00:17:12,350 --> 00:17:18,120
so it looks easy but it's not that easy

00:17:16,230 --> 00:17:20,730
to set everything up and sometimes it

00:17:18,120 --> 00:17:23,660
will not work when you will at the end

00:17:20,730 --> 00:17:27,150
see today I spent about half an hour and

00:17:23,660 --> 00:17:30,390
so at the end I did there an active -

00:17:27,150 --> 00:17:48,780
Enoch inactive and my component is was

00:17:30,390 --> 00:17:51,929
in active states all along and it said

00:17:48,780 --> 00:17:56,250
sign just says this is an animation so

00:17:51,929 --> 00:17:59,010
it's a anythi has to be the same as this

00:17:56,250 --> 00:18:01,830
one in air controller and I also forgot

00:17:59,010 --> 00:18:03,840
to forgot to say so it will be picked up

00:18:01,830 --> 00:18:05,970
by the compiler and compiled in the best

00:18:03,840 --> 00:18:07,950
most performant JavaScript maintained

00:18:05,970 --> 00:18:10,700
ever seen so it was a promise from

00:18:07,950 --> 00:18:10,700
Mangalore creators

00:18:20,870 --> 00:19:09,080
poor Anisha I think so the directives I

00:18:25,039 --> 00:19:11,929
was just components with so if we wanted

00:19:09,080 --> 00:19:14,240
to use something simple like five events

00:19:11,929 --> 00:19:18,380
one animation start on the nation end we

00:19:14,240 --> 00:19:27,130
have something like these event handlers

00:19:18,380 --> 00:19:32,330
so at my animation start and we can do

00:19:27,130 --> 00:19:36,520
do something and we'll start let's see

00:19:32,330 --> 00:19:39,440
and also my animation and and we can

00:19:36,520 --> 00:19:42,110
check these events and if we need more

00:19:39,440 --> 00:19:44,630
fine-grained approach then we can use

00:19:42,110 --> 00:19:46,990
this new feature animation builder which

00:19:44,630 --> 00:19:52,600
gives us complete control of animations

00:19:46,990 --> 00:19:52,600
but it's only available from version 4.2

00:20:05,530 --> 00:20:15,190
I think that this start and end events

00:20:11,830 --> 00:20:18,670
sent a handle to animation let's check

00:20:15,190 --> 00:20:22,150
it I'd haven't tried it but I think I

00:20:18,670 --> 00:20:31,530
saw something like this and we will now

00:20:22,150 --> 00:20:35,800
make a handle start and say a animation

00:20:31,530 --> 00:20:43,110
start it and just output our event which

00:20:35,800 --> 00:20:46,110
we got saved yes rebuilt yet okay

00:20:43,110 --> 00:20:46,110
refresh

00:20:46,800 --> 00:20:57,910
probably you have multi-monitor setup at

00:20:52,750 --> 00:20:59,500
home and it's a bit cumbersome okay yeah

00:20:57,910 --> 00:21:01,690
animation started then we get some

00:20:59,500 --> 00:21:07,150
element and from state phase name etc so

00:21:01,690 --> 00:21:15,570
this is animation can seems like it any

00:21:07,150 --> 00:21:17,650
more questions yes actually I made the

00:21:15,570 --> 00:21:20,590
proof-of-concept project a few months

00:21:17,650 --> 00:21:24,910
ago and did some extensive SVG animating

00:21:20,590 --> 00:21:28,750
and it was a lot of fun I got some

00:21:24,910 --> 00:21:31,570
problems like with the changing scale it

00:21:28,750 --> 00:21:34,060
doesn't scale only the size but also X

00:21:31,570 --> 00:21:36,460
and epsilon coordinates from whatever

00:21:34,060 --> 00:21:39,220
reason and then I have some bubble and

00:21:36,460 --> 00:21:41,530
it jumped all over the screen and then

00:21:39,220 --> 00:21:43,150
grew so then when you will do some

00:21:41,530 --> 00:21:46,810
simple scaling Gong so of course you

00:21:43,150 --> 00:21:50,980
have to use a translation too so to keep

00:21:46,810 --> 00:21:57,420
it in place but it grows some tricks but

00:21:50,980 --> 00:22:04,450
it works with SVG two more questions

00:21:57,420 --> 00:22:06,760
then let's go on with next slide so I

00:22:04,450 --> 00:22:09,190
already explained what states are and

00:22:06,760 --> 00:22:11,830
they are in normal use case string

00:22:09,190 --> 00:22:13,600
values which are tied to our class

00:22:11,830 --> 00:22:16,170
properties and there are also a few

00:22:13,600 --> 00:22:20,010
special states like void

00:22:16,170 --> 00:22:23,640
and the star avoid means nothingness

00:22:20,010 --> 00:22:25,680
when our elements are created then they

00:22:23,640 --> 00:22:28,640
are they have void state and they come

00:22:25,680 --> 00:22:31,800
in from other state and the star is

00:22:28,640 --> 00:22:34,770
every state so we can define animations

00:22:31,800 --> 00:22:40,500
which are fired by transition between

00:22:34,770 --> 00:22:42,750
any two states using that transitions we

00:22:40,500 --> 00:22:45,600
can use predefined States which I showed

00:22:42,750 --> 00:22:50,420
so we can define our state's up front

00:22:45,600 --> 00:22:50,420
induce transitions and in this case our

00:22:50,660 --> 00:22:57,960
elements will have the properties after

00:22:54,840 --> 00:23:00,120
animation has ended they will keep those

00:22:57,960 --> 00:23:03,150
properties and with in mind transitions

00:23:00,120 --> 00:23:07,020
those properties will return to their

00:23:03,150 --> 00:23:10,160
initial state and there are also two

00:23:07,020 --> 00:23:15,510
special transitions on enter and only if

00:23:10,160 --> 00:23:20,400
which are aliases for entering from void

00:23:15,510 --> 00:23:23,960
and destroying this component now a few

00:23:20,400 --> 00:23:30,510
words about angular for to new features

00:23:23,960 --> 00:23:33,240
so we have a possibility to send options

00:23:30,510 --> 00:23:36,930
or input items to our animations so to

00:23:33,240 --> 00:23:38,700
parameterize them to export our

00:23:36,930 --> 00:23:41,580
animations and use them in some other

00:23:38,700 --> 00:23:43,050
components so to reuse animations which

00:23:41,580 --> 00:23:46,770
we are created

00:23:43,050 --> 00:23:50,060
Kurian stager clearly is according to

00:23:46,770 --> 00:23:52,560
matias the best thing that happened to

00:23:50,060 --> 00:23:55,170
animation since the beginning of angular

00:23:52,560 --> 00:23:57,420
which allows us to query for all the all

00:23:55,170 --> 00:23:59,400
children who for some element and check

00:23:57,420 --> 00:24:03,210
their animations inside their animations

00:23:59,400 --> 00:24:05,490
etc and stager which allows us to add

00:24:03,210 --> 00:24:08,190
some delay between animating different

00:24:05,490 --> 00:24:10,890
elements sub animations using enemy

00:24:08,190 --> 00:24:12,300
child the routing animations it was also

00:24:10,890 --> 00:24:15,690
possible in all their versions of

00:24:12,300 --> 00:24:17,910
angular with small hex and also

00:24:15,690 --> 00:24:20,610
programmatic animations with animation

00:24:17,910 --> 00:24:25,170
builder now a few words about each of

00:24:20,610 --> 00:24:27,510
them I wanted to make some nice examples

00:24:25,170 --> 00:24:29,740
but got carried away with building

00:24:27,510 --> 00:24:33,100
animations in my project so at the end

00:24:29,740 --> 00:24:35,440
I couldn't prepare it as good as I

00:24:33,100 --> 00:24:37,900
wanted but I took some animations

00:24:35,440 --> 00:24:42,520
shameless is stolen them from here of

00:24:37,900 --> 00:24:46,420
moo block and here we can see how we

00:24:42,520 --> 00:24:49,840
define the options for animation so we

00:24:46,420 --> 00:24:53,320
can send as many options as we want and

00:24:49,840 --> 00:24:55,030
then use them with using the already

00:24:53,320 --> 00:25:01,000
known mustache or double bracket

00:24:55,030 --> 00:25:03,429
notation in our animations animation we

00:25:01,000 --> 00:25:06,520
use using animation or use animation so

00:25:03,429 --> 00:25:11,260
we define some animations use export and

00:25:06,520 --> 00:25:13,330
then using use animation keyboard we can

00:25:11,260 --> 00:25:17,880
import them in some other components and

00:25:13,330 --> 00:25:21,070
then reuse them in so it's grazing

00:25:17,880 --> 00:25:24,940
Korean stagger week when we have some

00:25:21,070 --> 00:25:28,410
element with children let's show this

00:25:24,940 --> 00:25:28,410
actually it's quite cool

00:25:28,470 --> 00:25:35,620
we can then animate children separately

00:25:34,200 --> 00:25:38,260
what did I do

00:25:35,620 --> 00:25:41,700
I took the template I'll just throw it

00:25:38,260 --> 00:25:41,700
in our template and see what happens

00:25:43,410 --> 00:25:58,990
copy and let's also do the component

00:25:51,850 --> 00:26:01,770
sink damper and pepper if I do something

00:25:58,990 --> 00:26:07,660
wrong please collect correct me

00:26:01,770 --> 00:26:10,110
animations ha thank you very much

00:26:07,660 --> 00:26:10,110
you are good

00:26:11,570 --> 00:26:16,110
okay and well let's add another

00:26:13,559 --> 00:26:18,389
animation trigger it should be around

00:26:16,110 --> 00:26:23,220
here somewhere not this one animation so

00:26:18,389 --> 00:26:28,980
around here no good is gone let's add

00:26:23,220 --> 00:26:32,789
query and Steger use it to cope I'll

00:26:28,980 --> 00:26:35,190
ship it what am I missing here I need my

00:26:32,789 --> 00:26:38,789
list of course I prepared it so I don't

00:26:35,190 --> 00:26:44,629
have this wonderful list with items so I

00:26:38,789 --> 00:26:47,029
don't have to type all of this and so

00:26:44,629 --> 00:27:00,350
let's see what happens

00:26:47,029 --> 00:27:03,360
compiles perfect something's wrong

00:27:00,350 --> 00:27:14,399
it is my last example I'm not allowed to

00:27:03,360 --> 00:27:18,240
see that I'm shining it seems ah like

00:27:14,399 --> 00:27:29,999
damn thank you that's cold i refresh

00:27:18,240 --> 00:27:32,330
does the Refresh of fruit also it's so

00:27:29,999 --> 00:27:36,779
simple to animate items in our lists

00:27:32,330 --> 00:27:39,269
let's now go back to the code so what

00:27:36,779 --> 00:27:42,360
did I do here I created a simple list

00:27:39,269 --> 00:27:45,210
with the parent element in which I

00:27:42,360 --> 00:27:49,200
defined this animation list animation

00:27:45,210 --> 00:27:54,299
with items length as property and in a

00:27:49,200 --> 00:27:58,200
component itself there is some magic so

00:27:54,299 --> 00:28:02,179
at first each element is translated a

00:27:58,200 --> 00:28:05,460
hundred percent off screen and then

00:28:02,179 --> 00:28:09,960
animated during one second on screen and

00:28:05,460 --> 00:28:12,299
this stager says give me 200

00:28:09,960 --> 00:28:18,499
milliseconds between elements and it

00:28:12,299 --> 00:28:18,499
flow questions

00:28:20,910 --> 00:28:31,090
it's also possible to use redefine yeah

00:28:28,650 --> 00:28:34,570
to define sub animations you're using

00:28:31,090 --> 00:28:37,450
animate child so in this left case we

00:28:34,570 --> 00:28:42,040
have a animation child animation to it

00:28:37,450 --> 00:28:45,250
and then anim repent bins like in real

00:28:42,040 --> 00:28:50,380
world and child animation is not cold at

00:28:45,250 --> 00:28:54,549
all and in versions newer then 4.2 we

00:28:50,380 --> 00:28:57,760
can define this create child animate

00:28:54,549 --> 00:29:04,240
child syntax which will also execute our

00:28:57,760 --> 00:29:06,429
child animations there is also a

00:29:04,240 --> 00:29:11,290
possibility to add routing animations

00:29:06,429 --> 00:29:16,419
using this route animation prepare route

00:29:11,290 --> 00:29:19,270
state and giving the data which tells in

00:29:16,419 --> 00:29:21,669
which route are we right now and then

00:29:19,270 --> 00:29:23,830
defines from transition between pages so

00:29:21,669 --> 00:29:29,980
we can use some nice light life slide

00:29:23,830 --> 00:29:32,260
right etc whatever we want it works very

00:29:29,980 --> 00:29:34,600
nicely there was also a possibility to

00:29:32,260 --> 00:29:37,240
do something like this in Prior versions

00:29:34,600 --> 00:29:39,850
of angular I gave that example I will

00:29:37,240 --> 00:29:42,070
show it a bit later and also

00:29:39,850 --> 00:29:44,200
programmatic animations using animation

00:29:42,070 --> 00:29:46,660
builder we just include the animation

00:29:44,200 --> 00:29:49,929
builder in our constructor and then can

00:29:46,660 --> 00:29:54,700
use builder build to build animations

00:29:49,929 --> 00:29:57,610
and then have access to player and then

00:29:54,700 --> 00:30:01,980
we can switch between frames backward

00:29:57,610 --> 00:30:01,980
forward and do whatever we want

00:30:02,520 --> 00:30:13,200
questions and now let's go on other demo

00:30:07,080 --> 00:30:13,200
so I prepared this other demo

00:30:17,160 --> 00:30:24,910
you already saw it so behold you have

00:30:21,550 --> 00:30:28,030
username and password and if we enter

00:30:24,910 --> 00:30:30,730
wrong username password and it says and

00:30:28,030 --> 00:30:33,390
it is read for a second

00:30:30,730 --> 00:30:39,300
let's show cause for that so it is in my

00:30:33,390 --> 00:30:41,980
login component and the elements are

00:30:39,300 --> 00:30:43,840
already known I have my bubble animation

00:30:41,980 --> 00:30:49,630
and on trouble done I set it back to

00:30:43,840 --> 00:30:52,690
inactive and here I just translate this

00:30:49,630 --> 00:30:54,510
button left and right two times that's

00:30:52,690 --> 00:30:57,250
it actually

00:30:54,510 --> 00:31:01,180
now let's do a login and see what else

00:30:57,250 --> 00:31:02,500
do we have user password is one two

00:31:01,180 --> 00:31:04,890
three four five six

00:31:02,500 --> 00:31:07,120
it's the most secure password the

00:31:04,890 --> 00:31:10,740
statistics say that most you people in

00:31:07,120 --> 00:31:10,740
the world use it so it must be secure so

00:31:11,220 --> 00:31:19,720
this is an example of switching routes

00:31:15,250 --> 00:31:21,460
and animation so this is first well this

00:31:19,720 --> 00:31:26,740
is second route and I can show you in

00:31:21,460 --> 00:31:33,120
code how it is implemented in my

00:31:26,740 --> 00:31:33,120
application module so each of my

00:31:33,600 --> 00:31:40,210
components defines this host route of

00:31:38,080 --> 00:31:47,160
transition and animation router

00:31:40,210 --> 00:31:51,400
transition and inside I defined this

00:31:47,160 --> 00:31:56,680
trans transitions between components so

00:31:51,400 --> 00:31:58,750
on enter it translates from left on

00:31:56,680 --> 00:32:03,760
screen and to an exit it does the

00:31:58,750 --> 00:32:05,650
opposite and actually that was it

00:32:03,760 --> 00:32:07,510
and in my second I prepared another

00:32:05,650 --> 00:32:11,490
application yesterday there was a

00:32:07,510 --> 00:32:11,490
question which is better reactor angular

00:32:16,390 --> 00:32:24,320
yep and so you can here see here I use

00:32:21,620 --> 00:32:27,649
this inline version of animations so

00:32:24,320 --> 00:32:37,760
angular drops back it doesn't stay in

00:32:27,649 --> 00:32:38,940
this big state any questions that was

00:32:37,760 --> 00:32:43,339
all for today

00:32:38,940 --> 00:32:43,339

YouTube URL: https://www.youtube.com/watch?v=NC4SyGnrjPs


