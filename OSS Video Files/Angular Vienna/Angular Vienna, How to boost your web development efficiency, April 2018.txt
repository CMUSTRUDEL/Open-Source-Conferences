Title: Angular Vienna, How to boost your web development efficiency, April 2018
Publication date: 2018-04-13
Playlist: Angular Vienna
Description: 
	Talk by Markus Hatvan:

Markus will give you a brief introduction on how you can improve your workflow with git hooks for autoformatting HTML, CSS, JS and TS, how to remove unused css in your production bundle, how to speed up your terminal usage and even more tricks. Mainly targeted at beginners, but I am sure there is something to learn for everyone.
Captions: 
	00:00:00,030 --> 00:00:05,060
so welcome everyone to my talk about how

00:00:02,790 --> 00:00:08,120
to boost your web development efficiency

00:00:05,060 --> 00:00:10,769
some of the stuff was already set by

00:00:08,120 --> 00:00:12,480
Martin before because we have some

00:00:10,769 --> 00:00:15,150
overlapping topic called

00:00:12,480 --> 00:00:17,100
lint staged but as I'm sure you will

00:00:15,150 --> 00:00:19,710
still have some value out of this

00:00:17,100 --> 00:00:21,390
presentation what I did is I tried to

00:00:19,710 --> 00:00:24,840
compile all the most important tools

00:00:21,390 --> 00:00:26,880
that I use in my web development and I

00:00:24,840 --> 00:00:29,099
also have like my settings my

00:00:26,880 --> 00:00:30,929
configuration objects directly in the

00:00:29,099 --> 00:00:33,300
presentation and everything is linked to

00:00:30,929 --> 00:00:35,640
online so you can check out the slides

00:00:33,300 --> 00:00:38,460
after the talk and you can do the

00:00:35,640 --> 00:00:40,530
configurations yourself so the first

00:00:38,460 --> 00:00:42,180
topic is already lint staged so lean

00:00:40,530 --> 00:00:44,309
stage this basically a wrapper around

00:00:42,180 --> 00:00:47,370
get hooks so it makes it more easily

00:00:44,309 --> 00:00:49,379
usable for you and like a good hook you

00:00:47,370 --> 00:00:51,570
could imagine it like being an angular

00:00:49,379 --> 00:00:53,910
lifecycle hook so like engine in it and

00:00:51,570 --> 00:00:56,370
she on changes whatever and it's

00:00:53,910 --> 00:00:59,989
especially useful for doing a pre-commit

00:00:56,370 --> 00:01:02,219
hook so let's say you you and some

00:00:59,989 --> 00:01:03,750
colleagues of you fight over the code

00:01:02,219 --> 00:01:05,369
style and there's always like he leaves

00:01:03,750 --> 00:01:06,630
some white spaces in there and you

00:01:05,369 --> 00:01:09,540
remove them again and it's like a

00:01:06,630 --> 00:01:12,360
constant back and forth so with like a

00:01:09,540 --> 00:01:15,180
pre-commit hook where you say okay we

00:01:12,360 --> 00:01:16,650
use this tool to format our code and you

00:01:15,180 --> 00:01:19,590
can always be sure that you only have

00:01:16,650 --> 00:01:22,530
really clean code and only changes that

00:01:19,590 --> 00:01:24,990
are relevant another possibility would

00:01:22,530 --> 00:01:27,030
be to use a pre push hook so let's say

00:01:24,990 --> 00:01:29,490
you want to push something online and

00:01:27,030 --> 00:01:31,290
you want to push it to your CLI and you

00:01:29,490 --> 00:01:33,000
always fear that your pipeline gonna

00:01:31,290 --> 00:01:35,610
fail your pipeline gonna fail this would

00:01:33,000 --> 00:01:38,159
be one way of maybe avoiding it so you

00:01:35,610 --> 00:01:42,299
would let your unit test and your enter

00:01:38,159 --> 00:01:45,390
in test run before you push it yeah so

00:01:42,299 --> 00:01:47,700
this would actually be a package like I

00:01:45,390 --> 00:01:50,310
you can also make like a lean staged RC

00:01:47,700 --> 00:01:53,750
config file to have it encapsulated but

00:01:50,310 --> 00:01:56,579
I implemented here in the package Jason

00:01:53,750 --> 00:01:59,729
first settings I used here is concurrent

00:01:56,579 --> 00:02:02,250
for subtest concurrency one this is used

00:01:59,729 --> 00:02:04,979
because I had the problems that because

00:02:02,250 --> 00:02:07,680
this linters run at the same time that

00:02:04,979 --> 00:02:10,410
sometimes the format I went over it and

00:02:07,680 --> 00:02:12,540
changed files but it didn't add them to

00:02:10,410 --> 00:02:13,390
the to the actual commit so the commit

00:02:12,540 --> 00:02:14,680
went through

00:02:13,390 --> 00:02:18,190
and then there were some leftover

00:02:14,680 --> 00:02:21,460
changes in the in the actual branch

00:02:18,190 --> 00:02:23,410
so this refusing only suppress

00:02:21,460 --> 00:02:28,420
concurrency one it's a wallet that

00:02:23,410 --> 00:02:31,630
problem yeah for HTML files I use the

00:02:28,420 --> 00:02:35,290
auto format HTML script you can see it

00:02:31,630 --> 00:02:37,560
down here it's using TS lint with the

00:02:35,290 --> 00:02:40,630
fixed flag so the fixed flag already

00:02:37,560 --> 00:02:45,250
tries to fix as many issues as possible

00:02:40,630 --> 00:02:47,350
that it can do by itself and then also

00:02:45,250 --> 00:02:50,020
it takes the project white configuration

00:02:47,350 --> 00:02:54,580
that is convict a Singh and T is Lin

00:02:50,020 --> 00:02:56,800
chasin for the t's neutrals for CSS and

00:02:54,580 --> 00:02:58,840
chairs I just use prettier because that

00:02:56,800 --> 00:03:02,380
was seemed like the obvious and easy

00:02:58,840 --> 00:03:04,840
choice to make and for the typescript

00:03:02,380 --> 00:03:06,670
and I use something that is called clang

00:03:04,840 --> 00:03:08,680
format so this might not be the obvious

00:03:06,670 --> 00:03:10,900
choice like we heard before you can use

00:03:08,680 --> 00:03:13,989
prettier but for me it seemed that

00:03:10,900 --> 00:03:16,330
prettier like it a pretty also wants to

00:03:13,989 --> 00:03:18,370
be like easy and it doesn't give you

00:03:16,330 --> 00:03:20,950
many customization options on purpose

00:03:18,370 --> 00:03:23,100
but I was like okay with the typescript

00:03:20,950 --> 00:03:25,630
with the typescript project I want to be

00:03:23,100 --> 00:03:29,230
able to change everything to my own

00:03:25,630 --> 00:03:31,090
needs mm-hmm yeah and then it goes

00:03:29,230 --> 00:03:33,670
through and uses the lint script and

00:03:31,090 --> 00:03:36,070
yeah I already explained this and what's

00:03:33,670 --> 00:03:37,780
also there is like the ignore so for

00:03:36,070 --> 00:03:40,420
minified files of course you don't want

00:03:37,780 --> 00:03:44,200
it to be reformatted into an unmeaning

00:03:40,420 --> 00:03:45,910
fide version so yeah about Auto

00:03:44,200 --> 00:03:47,890
formatting type script like prettier

00:03:45,910 --> 00:03:50,799
typescript format clang format these are

00:03:47,890 --> 00:03:52,660
free could be free possible options I

00:03:50,799 --> 00:03:54,730
looked at them and for me it was obvious

00:03:52,660 --> 00:03:58,510
to use clang format it's actually used

00:03:54,730 --> 00:04:02,920
for C++ and C sharp formatting but it

00:03:58,510 --> 00:04:05,410
works perfectly fine for typescript what

00:04:02,920 --> 00:04:08,860
I did here is at first I started using

00:04:05,410 --> 00:04:11,230
Google style and that was the the base

00:04:08,860 --> 00:04:13,000
to work with but then step by step I

00:04:11,230 --> 00:04:15,730
started being not happy with it and I

00:04:13,000 --> 00:04:18,820
basically rewrote everything here so

00:04:15,730 --> 00:04:22,690
this is definitely oh I have this one

00:04:18,820 --> 00:04:24,180
this is definitely not necessary here so

00:04:22,690 --> 00:04:26,560
I could at some point I would probably

00:04:24,180 --> 00:04:26,860
clean this up a little bit to have only

00:04:26,560 --> 00:04:29,979
the

00:04:26,860 --> 00:04:32,469
Cerie rules what I also like about Clank

00:04:29,979 --> 00:04:34,659
form it is studied in sorts your imports

00:04:32,469 --> 00:04:38,110
by specific criteria what I mean with

00:04:34,659 --> 00:04:41,650
criteria here is that's going to be s

00:04:38,110 --> 00:04:42,370
code here in my main browser TS you can

00:04:41,650 --> 00:04:44,710
see it easily

00:04:42,370 --> 00:04:47,409
so what Clank format then does it's like

00:04:44,710 --> 00:04:49,150
when you have the four module import it

00:04:47,409 --> 00:04:51,610
puts them at the top of your file then

00:04:49,150 --> 00:04:54,520
it leaves a blank space then it imports

00:04:51,610 --> 00:04:57,610
your dependencies out of the package

00:04:54,520 --> 00:04:59,590
jason and then like down below here it

00:04:57,610 --> 00:05:01,479
would use your relative import you are

00:04:59,590 --> 00:05:03,400
so you can always be sure where your

00:05:01,479 --> 00:05:06,969
imports are or you can see it usually on

00:05:03,400 --> 00:05:11,740
with a single look and yeah i wrote your

00:05:06,969 --> 00:05:16,360
showcase time so i prepared already

00:05:11,740 --> 00:05:19,409
staged changes so I actually made my

00:05:16,360 --> 00:05:29,259
file it's this readable for your sugar

00:05:19,409 --> 00:05:34,690
yeah sure which one - no this one

00:05:29,259 --> 00:05:37,629
oh yeah much better ok so yeah you can

00:05:34,690 --> 00:05:42,940
see a factor it up pretty good I

00:05:37,629 --> 00:05:44,860
it up here I yeah the constructor stuff

00:05:42,940 --> 00:05:48,879
is an indented and here for example

00:05:44,860 --> 00:05:50,529
forces on the next line the the closing

00:05:48,879 --> 00:05:53,050
place of the if is on the same light of

00:05:50,529 --> 00:05:56,229
the line of the code stuff like that so

00:05:53,050 --> 00:06:01,300
it's quite horrible and whatever to now

00:05:56,229 --> 00:06:05,039
is like used actuals it's the actual

00:06:01,300 --> 00:06:09,009
script so I would say Auto format ts

00:06:05,039 --> 00:06:12,849
goes for the tree and the I flag is for

00:06:09,009 --> 00:06:15,520
interactive replacing it back in the

00:06:12,849 --> 00:06:18,129
editor you would see here I have now my

00:06:15,520 --> 00:06:20,409
changes here and if we're lucky it

00:06:18,129 --> 00:06:23,080
should be yeah it should be back in its

00:06:20,409 --> 00:06:25,810
place so nice and clean everything again

00:06:23,080 --> 00:06:28,569
and like stuff like this here for

00:06:25,810 --> 00:06:30,159
example to credit relief wrap aligned

00:06:28,569 --> 00:06:32,650
underneath which other was a pain in the

00:06:30,159 --> 00:06:34,479
ass so it was a work it was quite a work

00:06:32,650 --> 00:06:37,149
to go through this clang format and look

00:06:34,479 --> 00:06:39,789
at all the options that there are yeah

00:06:37,149 --> 00:06:40,770
same of course we can do for the like

00:06:39,789 --> 00:06:43,740
here we have a detail

00:06:40,770 --> 00:06:46,800
an HTML page and you see that the h3

00:06:43,740 --> 00:06:48,860
here is wrong and this one is just in

00:06:46,800 --> 00:06:52,849
the same line and also really horrible

00:06:48,860 --> 00:06:57,560
so therefore we have the HTML formatting

00:06:52,849 --> 00:06:59,879
yeah it outputs also unchanged files but

00:06:57,560 --> 00:07:07,310
it should have fixed this one yeah you

00:06:59,879 --> 00:07:09,720
see now the h3 is aligned on yeah sorry

00:07:07,310 --> 00:07:12,810
who I didn't try that out I'm not using

00:07:09,720 --> 00:07:23,159
any inland templates but that would be

00:07:12,810 --> 00:07:24,150
interesting yeah but I guess it probably

00:07:23,159 --> 00:07:27,090
won't work because you're looking for

00:07:24,150 --> 00:07:28,710
the wild card ts so probably not but

00:07:27,090 --> 00:07:29,460
here you see it's back to normal and

00:07:28,710 --> 00:07:32,880
should be fine

00:07:29,460 --> 00:07:36,719
and then also have here my shame CSS

00:07:32,880 --> 00:07:41,639
file and it also is you know what a

00:07:36,719 --> 00:07:44,250
shame CSS file is okay yeah so you have

00:07:41,639 --> 00:07:48,539
a lot of stuff here also have been wrong

00:07:44,250 --> 00:07:52,400
wrongly intended and stuff oh sorry so I

00:07:48,539 --> 00:07:55,620
would go back here again and do it with

00:07:52,400 --> 00:07:57,990
node modules been prettier right single

00:07:55,620 --> 00:08:04,319
quotes true print with hundred and then

00:07:57,990 --> 00:08:06,569
the path to the actual file and it

00:08:04,319 --> 00:08:08,840
should be everything else is also again

00:08:06,569 --> 00:08:14,430
back in its place where it should be

00:08:08,840 --> 00:08:18,270
nice and clean and oh sorry so what we

00:08:14,430 --> 00:08:20,130
can do now is I'm just gonna check out

00:08:18,270 --> 00:08:22,710
the changes here you see we still have

00:08:20,130 --> 00:08:24,599
this free modified files and now if I

00:08:22,710 --> 00:08:27,870
say git commit let's just call it test

00:08:24,599 --> 00:08:30,300
commit it starts running lint staged

00:08:27,870 --> 00:08:32,339
with husky and here you see auto format

00:08:30,300 --> 00:08:35,490
blah blah blah and it's also pretty fast

00:08:32,339 --> 00:08:39,890
except for the linting four of the TS

00:08:35,490 --> 00:08:39,890
files but other than that it should be

00:08:40,940 --> 00:08:46,589
result in a really nice clean commit

00:08:43,940 --> 00:08:48,300
here you see still it's the changes are

00:08:46,589 --> 00:08:51,600
still there because it's not yet added

00:08:48,300 --> 00:08:53,210
again to the stage changes let's see if

00:08:51,600 --> 00:08:56,330
it's true yet No

00:08:53,210 --> 00:08:59,210
okay now it's true so yeah everything is

00:08:56,330 --> 00:09:04,250
nice and clean now and we can verify

00:08:59,210 --> 00:09:06,140
this again to this page so yeah

00:09:04,250 --> 00:09:09,290
everything is nice and clean committed

00:09:06,140 --> 00:09:14,510
and that's what we want that's what we

00:09:09,290 --> 00:09:17,149
expect yeah so for the HTML I use Ches

00:09:14,510 --> 00:09:18,589
beautify it's called so I was like what

00:09:17,149 --> 00:09:20,029
the why is this library called

00:09:18,589 --> 00:09:23,180
sheís beautify when it does stuff with

00:09:20,029 --> 00:09:25,550
HTML but that's something that vias code

00:09:23,180 --> 00:09:26,990
is actually using on their own like when

00:09:25,550 --> 00:09:28,970
you format something to be a score it's

00:09:26,990 --> 00:09:31,730
using chess beautifier so I thought why

00:09:28,970 --> 00:09:33,320
not stick to that and yeah the most

00:09:31,730 --> 00:09:36,080
important feature that I like here stats

00:09:33,320 --> 00:09:42,770
is this force aligned here that leads to

00:09:36,080 --> 00:09:44,570
stuff being really clean being really

00:09:42,770 --> 00:09:46,190
clean like the properties and the eight

00:09:44,570 --> 00:09:48,320
attributes are always like a line like

00:09:46,190 --> 00:09:50,300
this so especially when you have a lot

00:09:48,320 --> 00:09:53,300
of stuff like that it's nice and easily

00:09:50,300 --> 00:09:56,959
readable still so that's what I like

00:09:53,300 --> 00:10:00,080
about this yeah and since we're talking

00:09:56,959 --> 00:10:02,360
about HTML there's also Emmet probably

00:10:00,080 --> 00:10:06,560
most of you know if you don't know about

00:10:02,360 --> 00:10:09,170
it it's already implemented by by via

00:10:06,560 --> 00:10:10,910
scope as a standard and the way you

00:10:09,170 --> 00:10:14,000
would use it is let's say I want to

00:10:10,910 --> 00:10:16,160
write a container like bootstrap stuff a

00:10:14,000 --> 00:10:18,680
container with row with three calls and

00:10:16,160 --> 00:10:20,750
then with the text hello angular meetup

00:10:18,680 --> 00:10:23,570
I would do it like this the dot is a

00:10:20,750 --> 00:10:26,029
class then I call the class container I

00:10:23,570 --> 00:10:29,089
would make another class called row and

00:10:26,029 --> 00:10:30,830
then I would say call four times free

00:10:29,089 --> 00:10:32,510
because we want to have like we're

00:10:30,830 --> 00:10:36,440
always thinking in twelve twelve steps

00:10:32,510 --> 00:10:39,370
and then in there I would have h2 with

00:10:36,440 --> 00:10:42,709
the content hello angular meetup and

00:10:39,370 --> 00:10:46,610
when I expand this now you see it nicely

00:10:42,709 --> 00:10:49,370
creates your HTML tags that you wanted

00:10:46,610 --> 00:10:51,110
and this is also really really nice when

00:10:49,370 --> 00:10:54,589
you let's say you want to have a lot of

00:10:51,110 --> 00:10:58,010
allies so you have a on of allies

00:10:54,589 --> 00:10:59,930
now so this is definitely something to

00:10:58,010 --> 00:11:05,900
keep in mind and to also work with it

00:10:59,930 --> 00:11:07,020
and use its power yeah the next topic is

00:11:05,900 --> 00:11:10,140
already

00:11:07,020 --> 00:11:12,500
autoprefixer in working together with

00:11:10,140 --> 00:11:14,550
browsers lists so here on the right side

00:11:12,500 --> 00:11:16,590
sorry on the right side we have an

00:11:14,550 --> 00:11:18,870
example of how it would look if you

00:11:16,590 --> 00:11:20,250
would need to respect all the vendor

00:11:18,870 --> 00:11:22,380
prefixes that there are and then

00:11:20,250 --> 00:11:24,150
sometimes you also don't know okay what

00:11:22,380 --> 00:11:26,190
what the hell actually what Prosser to

00:11:24,150 --> 00:11:27,570
our support and and since when is this

00:11:26,190 --> 00:11:29,130
flag required or since when is the

00:11:27,570 --> 00:11:32,640
vendor prefix required and since when

00:11:29,130 --> 00:11:34,230
not so what other prefix it does I used

00:11:32,640 --> 00:11:35,700
it here for the only for the production

00:11:34,230 --> 00:11:38,340
model because in the development panel

00:11:35,700 --> 00:11:40,440
you should not care what because you

00:11:38,340 --> 00:11:43,380
work in Chrome or something useful

00:11:40,440 --> 00:11:45,480
elsewise so here it's like loading the

00:11:43,380 --> 00:11:47,670
assess files then it's using

00:11:45,480 --> 00:11:52,530
autoprefixer on this and then it's

00:11:47,670 --> 00:11:54,930
converting everything to CSS and what is

00:11:52,530 --> 00:11:57,600
results with is is depending on what you

00:11:54,930 --> 00:11:59,400
have here in your browsers list array so

00:11:57,600 --> 00:12:01,110
this is not what you use here but it

00:11:59,400 --> 00:12:04,410
could be something like that so you say

00:12:01,110 --> 00:12:07,350
please add all the vendor prefixes for

00:12:04,410 --> 00:12:10,620
the last one meter per meter version of

00:12:07,350 --> 00:12:11,730
all browsers worldwide or here you could

00:12:10,620 --> 00:12:13,620
say okay

00:12:11,730 --> 00:12:16,830
only browsers please that that have a

00:12:13,620 --> 00:12:18,570
usage of 1% or more and here you could

00:12:16,830 --> 00:12:21,450
also even specify it for every browser

00:12:18,570 --> 00:12:23,370
individually and what we have at work is

00:12:21,450 --> 00:12:25,530
something like less to major versions to

00:12:23,370 --> 00:12:27,600
make sure in case someone has updated

00:12:25,530 --> 00:12:30,390
and with the rolling release browsers it

00:12:27,600 --> 00:12:32,400
should be no problem and then also add

00:12:30,390 --> 00:12:35,610
support for the list for Internet

00:12:32,400 --> 00:12:40,320
Explorer Explorer versions but that's

00:12:35,610 --> 00:12:44,070
not something to be proud of yeah next

00:12:40,320 --> 00:12:46,050
topic is cleaning out unused CSS out of

00:12:44,070 --> 00:12:47,970
your production bundle I think every one

00:12:46,050 --> 00:12:50,160
of you knows ok you use some kind of

00:12:47,970 --> 00:12:51,860
library like Foundation or bootstrap or

00:12:50,160 --> 00:12:54,000
something else and you get this big

00:12:51,860 --> 00:12:57,180
boilerplate code and you probably only

00:12:54,000 --> 00:12:59,820
need some of it so you will never really

00:12:57,180 --> 00:13:02,640
use all the capacities of all the

00:12:59,820 --> 00:13:04,920
already predefined CSS styles and the

00:13:02,640 --> 00:13:07,530
way you do it is you would have your

00:13:04,920 --> 00:13:09,450
main content hash bundle CSS so this is

00:13:07,530 --> 00:13:12,870
already basically you finished bundle

00:13:09,450 --> 00:13:15,420
and then you would let purify CSS run

00:13:12,870 --> 00:13:18,210
over all your HTML files look for

00:13:15,420 --> 00:13:19,490
classes or IDs if it finds it it keeps

00:13:18,210 --> 00:13:21,740
the classes in

00:13:19,490 --> 00:13:23,690
the actual bundle and if it doesn't find

00:13:21,740 --> 00:13:25,339
it it would clean it out and you can

00:13:23,690 --> 00:13:26,500
already think okay this is probably a

00:13:25,339 --> 00:13:30,649
problem when you have dynamic

00:13:26,500 --> 00:13:33,190
dynamically created content so here in

00:13:30,649 --> 00:13:36,950
the purifier options whitelist you could

00:13:33,190 --> 00:13:39,470
specify which classes to always ignore

00:13:36,950 --> 00:13:42,260
and in this case you see I have some

00:13:39,470 --> 00:13:43,880
routes of stuff here and so actually you

00:13:42,260 --> 00:13:45,680
have to go for your whole web

00:13:43,880 --> 00:13:48,680
application and see what pricks and what

00:13:45,680 --> 00:13:50,240
doesn't but with this with this couple

00:13:48,680 --> 00:13:53,660
classes I was already able to make

00:13:50,240 --> 00:13:55,399
everything runnable and be fine and here

00:13:53,660 --> 00:13:57,800
you can see that I commented it out it's

00:13:55,399 --> 00:13:59,660
a very boss true flag and this would

00:13:57,800 --> 00:14:02,029
actually tell you how much percent

00:13:59,660 --> 00:14:04,730
percentage of your bundle got cleaned

00:14:02,029 --> 00:14:06,470
out and in our case this was about 30 to

00:14:04,730 --> 00:14:09,320
40 percent so this is definitely

00:14:06,470 --> 00:14:11,240
something that you want to do and what's

00:14:09,320 --> 00:14:15,250
also very handy is that purifies users

00:14:11,240 --> 00:14:18,920
also is able to minify your CSS bundle

00:14:15,250 --> 00:14:20,810
are there any questions so far okay so

00:14:18,920 --> 00:14:22,130
what the terminal back workflow I see a

00:14:20,810 --> 00:14:26,149
lot of people just using the plain old

00:14:22,130 --> 00:14:28,430
fashioned it always pains me it always

00:14:26,149 --> 00:14:29,870
pains me when I see that you have to go

00:14:28,430 --> 00:14:31,520
through the history and you don't know

00:14:29,870 --> 00:14:32,959
maybe you'll find this command or maybe

00:14:31,520 --> 00:14:35,750
you will never find it because you typed

00:14:32,959 --> 00:14:38,060
it on some other laptop or something so

00:14:35,750 --> 00:14:42,680
I'm a big fan of the set shell some of

00:14:38,060 --> 00:14:46,810
you maybe know it it's quite popular it

00:14:42,680 --> 00:14:49,190
has like 68,000 stars and I put like the

00:14:46,810 --> 00:14:52,399
installation guide for you on there and

00:14:49,190 --> 00:14:55,180
also installing the Oh message framework

00:14:52,399 --> 00:14:57,920
what the framework actually does is it

00:14:55,180 --> 00:15:00,110
gives you the options to have different

00:14:57,920 --> 00:15:02,450
themes very easily and gives you the

00:15:00,110 --> 00:15:05,240
options to use a lot of custom plugins

00:15:02,450 --> 00:15:09,170
and for example you can see here what I

00:15:05,240 --> 00:15:11,180
use is the Moran theme and what I like

00:15:09,170 --> 00:15:13,579
is when I like for example I'm I really

00:15:11,180 --> 00:15:15,740
like to see the whole path of where I am

00:15:13,579 --> 00:15:18,140
actually right now and what I like of

00:15:15,740 --> 00:15:20,329
course is is that it shows me the git

00:15:18,140 --> 00:15:24,260
branch and it shows me if I have changes

00:15:20,329 --> 00:15:26,660
in my git branch and I'm just really I'm

00:15:24,260 --> 00:15:31,160
really quite happy with this and what I

00:15:26,660 --> 00:15:32,740
also did here is same with your bash RC

00:15:31,160 --> 00:15:36,730
you have here

00:15:32,740 --> 00:15:39,459
said she'll our sieve and again here my

00:15:36,730 --> 00:15:41,080
theme is it says here my phim and the

00:15:39,459 --> 00:15:43,390
link also goes to all themes that are

00:15:41,080 --> 00:15:45,940
out there and there's a on of them

00:15:43,390 --> 00:15:52,330
so you can definitely find something

00:15:45,940 --> 00:15:59,620
that you will enjoy I want a light one

00:15:52,330 --> 00:16:01,120
oh I think there's light ones oh yeah no

00:15:59,620 --> 00:16:03,570
I think there is no light one actually

00:16:01,120 --> 00:16:09,700
but this depends of well this trip

00:16:03,570 --> 00:16:11,620
distance well well it's feeling the

00:16:09,700 --> 00:16:13,570
functionality of it so I guess you would

00:16:11,620 --> 00:16:19,360
still like me I set it to background

00:16:13,570 --> 00:16:21,160
Ubuntu star so that's it and also here I

00:16:19,360 --> 00:16:22,779
have like some examples of the plugins

00:16:21,160 --> 00:16:23,950
that I use and their kind is linking to

00:16:22,779 --> 00:16:25,870
all the plugins that are out there

00:16:23,950 --> 00:16:28,720
there's also stuff for daca and get

00:16:25,870 --> 00:16:30,850
aliases crazy stuff and what I

00:16:28,720 --> 00:16:33,760
especially like is this called VD it's

00:16:30,850 --> 00:16:37,029
called buy warp directory and the way I

00:16:33,760 --> 00:16:39,880
use this would be I type VD and then a

00:16:37,029 --> 00:16:42,220
tab and I get all the possible war

00:16:39,880 --> 00:16:43,630
points that I saved myself so this will

00:16:42,220 --> 00:16:45,190
bring me to the desktop and let's say I

00:16:43,630 --> 00:16:47,200
want to go back into the project I would

00:16:45,190 --> 00:16:49,480
type via front end behavior front end

00:16:47,200 --> 00:16:52,600
and I'm back again on this on this one

00:16:49,480 --> 00:16:55,720
or like vs the back end so in this case

00:16:52,600 --> 00:16:57,610
I would go back to via and the other

00:16:55,720 --> 00:17:00,010
thing that's very convenient is called

00:16:57,610 --> 00:17:02,470
last working directory so when I make a

00:17:00,010 --> 00:17:05,309
new tab I'm always back into what is

00:17:02,470 --> 00:17:07,750
open in my other terminal window so

00:17:05,309 --> 00:17:10,350
these two things I really appreciate a

00:17:07,750 --> 00:17:13,030
lot and what I also have here is says

00:17:10,350 --> 00:17:15,819
set shell auto suggestions and syntax

00:17:13,030 --> 00:17:17,589
highlighting and the way you can see it

00:17:15,819 --> 00:17:20,079
here let's say I write get status it's

00:17:17,589 --> 00:17:22,179
fine it works but if a white get status

00:17:20,079 --> 00:17:24,100
it's already highlights it me in red and

00:17:22,179 --> 00:17:26,260
tells me you don't have a global library

00:17:24,100 --> 00:17:28,500
installed that's called get and then of

00:17:26,260 --> 00:17:30,820
course it flows to the command not found

00:17:28,500 --> 00:17:33,220
and what I also like is let's say you

00:17:30,820 --> 00:17:37,000
have this really long commands like this

00:17:33,220 --> 00:17:39,460
one so you already see in the like the

00:17:37,000 --> 00:17:42,880
history auto completion is in line

00:17:39,460 --> 00:17:45,520
basically so when I put the red arrow

00:17:42,880 --> 00:17:46,480
key down then you you have it expanded

00:17:45,520 --> 00:17:49,179
and you can use it

00:17:46,480 --> 00:17:52,000
so this enables me to really easily and

00:17:49,179 --> 00:17:54,190
fast firstly see what I have what I have

00:17:52,000 --> 00:17:56,380
written so far like you see here I can

00:17:54,190 --> 00:17:58,210
go basically to or my things easily and

00:17:56,380 --> 00:18:02,980
don't have to type in the history and

00:17:58,210 --> 00:18:05,679
look for it or whatever yeah and I set

00:18:02,980 --> 00:18:08,200
my like suggested style to yellow but

00:18:05,679 --> 00:18:10,149
this can already or this can depend on

00:18:08,200 --> 00:18:13,539
what kind of background color you have

00:18:10,149 --> 00:18:15,279
that is nicely for you yeah because I

00:18:13,539 --> 00:18:18,519
don't like typing dr. Campos up and

00:18:15,279 --> 00:18:21,700
built I wrote like this you and TCP into

00:18:18,519 --> 00:18:24,220
the CH RC so this is also something you

00:18:21,700 --> 00:18:26,289
could do like work a lot with aliases

00:18:24,220 --> 00:18:30,730
and make some commands easier that you

00:18:26,289 --> 00:18:32,380
use frequently yeah you probably saw by

00:18:30,730 --> 00:18:34,029
now I'm using dishes to decode and I'm a

00:18:32,380 --> 00:18:38,889
big fan and I don't know why there's

00:18:34,029 --> 00:18:41,260
webstorm licenses today what I like

00:18:38,889 --> 00:18:42,970
about vias code is that is really nice

00:18:41,260 --> 00:18:44,139
and transparent like you can find

00:18:42,970 --> 00:18:47,309
anything you want on the github

00:18:44,139 --> 00:18:51,190
repository and they release monthly

00:18:47,309 --> 00:18:53,889
iterations of updates to their vs code

00:18:51,190 --> 00:18:55,960
and here for example we could look into

00:18:53,889 --> 00:18:58,029
the one for April and it and you can see

00:18:55,960 --> 00:19:00,340
here what they have planned like all the

00:18:58,029 --> 00:19:02,679
check boxes here what they plan on

00:19:00,340 --> 00:19:03,880
adapting and improving and they always

00:19:02,679 --> 00:19:06,370
take a lot of feedback from the

00:19:03,880 --> 00:19:09,130
community and like for example if you

00:19:06,370 --> 00:19:11,080
notice when you do changes in in Adam

00:19:09,130 --> 00:19:12,850
you always get it higher when you save

00:19:11,080 --> 00:19:15,039
it you have it highlighted in yellow or

00:19:12,850 --> 00:19:17,799
when you add some stuff to quit ignore

00:19:15,039 --> 00:19:19,750
you have it in grey like rate out and

00:19:17,799 --> 00:19:22,269
this was not the Aaron vs code up until

00:19:19,750 --> 00:19:24,279
probably half a year and they said that

00:19:22,269 --> 00:19:26,350
the community said okay we want this

00:19:24,279 --> 00:19:28,539
definitely and they made it work so they

00:19:26,350 --> 00:19:31,120
really listened mm-hmm to what the

00:19:28,539 --> 00:19:32,889
people actually want and you can of

00:19:31,120 --> 00:19:34,450
course also look into the iteration plan

00:19:32,889 --> 00:19:35,649
always and see if there's something

00:19:34,450 --> 00:19:38,889
coming up that you're really interested

00:19:35,649 --> 00:19:40,840
in and in case you definitely don't want

00:19:38,889 --> 00:19:43,539
to wait there's the insiders version and

00:19:40,840 --> 00:19:45,370
basically you could always build a new

00:19:43,539 --> 00:19:47,169
version as soon as they push a new

00:19:45,370 --> 00:19:49,360
commit into the master branch of theirs

00:19:47,169 --> 00:19:50,740
so you could install the vs code

00:19:49,360 --> 00:19:52,539
insiders version and always be up to

00:19:50,740 --> 00:19:55,809
date but this could also lead to

00:19:52,539 --> 00:19:58,170
breaking breaking things so this I would

00:19:55,809 --> 00:20:00,450
only recommend if you want to

00:19:58,170 --> 00:20:02,850
file back reports for them if you want

00:20:00,450 --> 00:20:08,970
to contribute to to the via Skype or

00:20:02,850 --> 00:20:10,830
something like that yeah so these are my

00:20:08,970 --> 00:20:12,690
settings so far in visuals to decode so

00:20:10,830 --> 00:20:14,220
if you want to install it blank and you

00:20:12,690 --> 00:20:18,090
want to have something up and running

00:20:14,220 --> 00:20:20,340
already I would give this to you so I

00:20:18,090 --> 00:20:22,230
will suggest to you something that I

00:20:20,340 --> 00:20:24,720
like or that I think is necessary

00:20:22,230 --> 00:20:28,260
by default Visual Studio also gives you

00:20:24,720 --> 00:20:31,200
angular 1 suggestions in the HTML so I

00:20:28,260 --> 00:20:34,200
disabled this and also here like again

00:20:31,200 --> 00:20:37,799
it's the force aligned what else is

00:20:34,200 --> 00:20:40,380
there yeah for example what's also I

00:20:37,799 --> 00:20:42,350
think this is not very long into envious

00:20:40,380 --> 00:20:46,280
code yet but you can actually use your

00:20:42,350 --> 00:20:48,360
views code capabilities to type-check

00:20:46,280 --> 00:20:50,970
JavaScript so that's really convenient

00:20:48,360 --> 00:20:52,590
so it will tell you you have a string

00:20:50,970 --> 00:20:55,080
but you should use a number stuff like

00:20:52,590 --> 00:20:56,370
that that's also really nice when you

00:20:55,080 --> 00:20:59,010
work on a back-end project and you

00:20:56,370 --> 00:21:01,290
discover what errors they have in there

00:20:59,010 --> 00:21:03,120
and what I also like is for example

00:21:01,290 --> 00:21:04,650
let's say you're working that you have

00:21:03,120 --> 00:21:06,270
your development branch open or your

00:21:04,650 --> 00:21:08,760
master branch and then in the meantime

00:21:06,270 --> 00:21:10,830
they have there were a lot of changes so

00:21:08,760 --> 00:21:14,179
this one like it auto fetch it always

00:21:10,830 --> 00:21:16,650
gives you the newest version of it

00:21:14,179 --> 00:21:18,780
yeah and one thing to keep in mind if I

00:21:16,650 --> 00:21:23,250
brought like a hint here this files

00:21:18,780 --> 00:21:25,230
exclude on the top here so for me it was

00:21:23,250 --> 00:21:27,360
annoying to have some files to placate

00:21:25,230 --> 00:21:28,650
or you you only want to if you want to

00:21:27,360 --> 00:21:30,179
if you search for index at email you

00:21:28,650 --> 00:21:33,090
don't want to have the one in your

00:21:30,179 --> 00:21:35,370
compiled panda stuff like that so you

00:21:33,090 --> 00:21:37,200
only want to have the extra files that

00:21:35,370 --> 00:21:39,210
you want to work on but what this also

00:21:37,200 --> 00:21:41,429
does is it hides it in the file tree of

00:21:39,210 --> 00:21:42,870
years code so what the problem I had is

00:21:41,429 --> 00:21:44,400
there was a package lock that always got

00:21:42,870 --> 00:21:46,320
committed and I was like where is this

00:21:44,400 --> 00:21:49,020
package locked because I had it excluded

00:21:46,320 --> 00:21:52,740
here and so that is for something to

00:21:49,020 --> 00:21:54,660
keep in mind not to do yeah here also

00:21:52,740 --> 00:21:58,200
listed for you all the plugins that I

00:21:54,660 --> 00:22:00,000
have the extensions and yeah this is of

00:21:58,200 --> 00:22:02,580
course opinionated so maybe you don't

00:22:00,000 --> 00:22:04,559
need PostgreSQL or you don't need Apache

00:22:02,580 --> 00:22:06,679
something like that and the way you

00:22:04,559 --> 00:22:09,419
could install it is just write code

00:22:06,679 --> 00:22:11,100
install extension flag and then the

00:22:09,419 --> 00:22:11,760
author name and the extension or you can

00:22:11,100 --> 00:22:13,260
just do it

00:22:11,760 --> 00:22:16,920
with the offer name or the extension

00:22:13,260 --> 00:22:19,650
envious code itself yeah and one thing I

00:22:16,920 --> 00:22:22,050
like especially much is this setting

00:22:19,650 --> 00:22:23,880
stink it's called mmm so when you have a

00:22:22,050 --> 00:22:27,060
key topic count you can upload your

00:22:23,880 --> 00:22:29,100
local settings and this s let's say you

00:22:27,060 --> 00:22:31,050
work on your laptop here and then you go

00:22:29,100 --> 00:22:32,940
back at home and then you can easily

00:22:31,050 --> 00:22:34,890
download all the settings again so it

00:22:32,940 --> 00:22:36,870
has all your extensions or your settings

00:22:34,890 --> 00:22:41,090
or your key bindings and you have it

00:22:36,870 --> 00:22:43,170
nice and clean through a gist on github

00:22:41,090 --> 00:22:45,240
yeah some other resources that I have

00:22:43,170 --> 00:22:47,010
here for you is angular start the

00:22:45,240 --> 00:22:50,940
boilerplate so yeah I'm not we're not

00:22:47,010 --> 00:22:52,380
using the angular CLI what angular start

00:22:50,940 --> 00:22:55,590
the boilerplate this is it's like the

00:22:52,380 --> 00:22:57,570
most most supported I would say like ten

00:22:55,590 --> 00:22:59,790
thousand like there's a lot of angular

00:22:57,570 --> 00:23:01,770
repos that stopped putting out new

00:22:59,790 --> 00:23:04,050
content and updating them because of the

00:23:01,770 --> 00:23:06,900
angular CLI but this one is still quite

00:23:04,050 --> 00:23:09,390
popular I would say yeah eleven days ago

00:23:06,900 --> 00:23:11,130
so that's fine and now there right now

00:23:09,390 --> 00:23:13,320
working on upgrading it to angular six

00:23:11,130 --> 00:23:15,780
and web pick for this of course is like

00:23:13,320 --> 00:23:18,360
a big change again so if you want to

00:23:15,780 --> 00:23:20,310
depend on an external boilerplate

00:23:18,360 --> 00:23:23,250
template this would be a good one and

00:23:20,310 --> 00:23:25,590
you had a France app I saw actually at

00:23:23,250 --> 00:23:28,410
the door that the guy from France is

00:23:25,590 --> 00:23:33,810
working in the first in the upper floor

00:23:28,410 --> 00:23:36,590
so I'm a big fan of what it open it I'm

00:23:33,810 --> 00:23:39,000
actually a big fan of the France app

00:23:36,590 --> 00:23:41,190
what this gives you it's not really

00:23:39,000 --> 00:23:44,490
related to web development but you could

00:23:41,190 --> 00:23:46,500
definitely improve your workflow with

00:23:44,490 --> 00:23:48,240
all your social with the services you

00:23:46,500 --> 00:23:50,130
use so let's say you have a slack

00:23:48,240 --> 00:23:52,440
channel let's say you have a Trello

00:23:50,130 --> 00:23:53,910
board or your work email something like

00:23:52,440 --> 00:23:56,190
that you could have fit easily in one

00:23:53,910 --> 00:23:58,500
electron window and switch tabs on the

00:23:56,190 --> 00:24:00,150
on the left side here and always be up

00:23:58,500 --> 00:24:02,580
to date with something happened and you

00:24:00,150 --> 00:24:05,640
don't will not miss your emails or stuff

00:24:02,580 --> 00:24:08,400
like that because I always had to open

00:24:05,640 --> 00:24:09,930
my Gmail in a Chrome window and then in

00:24:08,400 --> 00:24:11,910
your chrome window in your chrome window

00:24:09,930 --> 00:24:13,830
we actually want to develop stuff and it

00:24:11,910 --> 00:24:16,320
always gets tangled up so this is a nice

00:24:13,830 --> 00:24:21,600
clean way of working or having it

00:24:16,320 --> 00:24:23,310
separately yeah that was my talk thank

00:24:21,600 --> 00:24:26,430
you for your attention

00:24:23,310 --> 00:24:26,430

YouTube URL: https://www.youtube.com/watch?v=708el7zgGfY


