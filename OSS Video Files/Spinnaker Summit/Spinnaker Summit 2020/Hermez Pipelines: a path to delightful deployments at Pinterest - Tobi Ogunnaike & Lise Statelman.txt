Title: Hermez Pipelines: a path to delightful deployments at Pinterest - Tobi Ogunnaike & Lise Statelman
Publication date: 2021-01-28
Playlist: Spinnaker Summit 2020
Description: 
	The world of deployments is a complex pool of pods, pipelines and platforms. At Pinterest, we have the added complexity of scale - hundreds of services working together to provide inspiring content for 400 million monthly active users. Recently, we've averaged around 800 daily deployments by Spinnaker. Since adopting Spinnaker, we've found that our engineers and service owners want the benefits of Spinnaker without the added complexity and overhead. So in this talk, Tobi & Lise will introduce Hermez Pipelines - a beautiful abstraction built on top of Spinnaker that brings canonical deploy pipelines to Pinterest. Come to this talk to learn why we picked this option, how Hermez Pipelines helps us reach our goals, why we donâ€™t expose Spinnaker UI to our engineers, why you should do the same, and why UX matters more than you might think.
Captions: 
	00:00:00,530 --> 00:00:03,629
[Music]

00:00:05,279 --> 00:00:08,880
hi everyone

00:00:06,319 --> 00:00:09,920
um my name is toby and today i'm joined

00:00:08,880 --> 00:00:12,880
with elise

00:00:09,920 --> 00:00:14,639
and together we're excited to talk today

00:00:12,880 --> 00:00:16,480
about hermes pipelines

00:00:14,639 --> 00:00:18,480
specifically we're going to talk about

00:00:16,480 --> 00:00:20,320
how we're forging the path

00:00:18,480 --> 00:00:22,800
to a delightful deployment experience at

00:00:20,320 --> 00:00:22,800
pinterest

00:00:23,199 --> 00:00:27,760
i can mention i'm toby and this is what

00:00:25,599 --> 00:00:29,840
i look like before the pandemic

00:00:27,760 --> 00:00:33,439
and this is leeds and together we work

00:00:29,840 --> 00:00:33,439
on the engineering productivity team

00:00:33,920 --> 00:00:38,879
all right so hopefully most people here

00:00:36,000 --> 00:00:40,640
have heard about pinterest before

00:00:38,879 --> 00:00:42,960
i like to think of pinterest as the

00:00:40,640 --> 00:00:45,200
positive corner of the internet

00:00:42,960 --> 00:00:46,000
people come to pinterest to find

00:00:45,200 --> 00:00:50,320
inspiration

00:00:46,000 --> 00:00:50,800
to pin recipes or get style inspiration

00:00:50,320 --> 00:00:54,000
home

00:00:50,800 --> 00:00:56,399
decoration inspiration or just do diy

00:00:54,000 --> 00:00:56,399
projects

00:00:56,800 --> 00:01:01,280
and pinterest to give you a bit of

00:00:58,239 --> 00:01:03,120
context about the scale of pinterest um

00:01:01,280 --> 00:01:05,680
every month we have more than 400

00:01:03,120 --> 00:01:08,000
million people coming to our site

00:01:05,680 --> 00:01:08,880
and each person is interacting with pins

00:01:08,000 --> 00:01:12,560
they're saving

00:01:08,880 --> 00:01:15,360
pins they're uh repeating things and

00:01:12,560 --> 00:01:16,799
you know all of this goes into creating

00:01:15,360 --> 00:01:19,520
one of the world's largest

00:01:16,799 --> 00:01:22,479
user-generated interest graphs that

00:01:19,520 --> 00:01:22,479
there is on the planet

00:01:23,200 --> 00:01:27,680
cool so i mentioned that we both work on

00:01:25,520 --> 00:01:29,680
the engineering productivity team

00:01:27,680 --> 00:01:31,280
and this is our mission our mission is

00:01:29,680 --> 00:01:34,400
to create

00:01:31,280 --> 00:01:36,479
a fast safe and delightful path

00:01:34,400 --> 00:01:38,000
from idea to production without worrying

00:01:36,479 --> 00:01:40,000
about infrastructure

00:01:38,000 --> 00:01:41,280
this is the child side that we kind of

00:01:40,000 --> 00:01:42,880
all

00:01:41,280 --> 00:01:44,479
aspire to this is what we're trying to

00:01:42,880 --> 00:01:45,119
do every day in all our meetings all our

00:01:44,479 --> 00:01:47,520
work

00:01:45,119 --> 00:01:48,560
is to provide this delightful experience

00:01:47,520 --> 00:01:52,640
for our

00:01:48,560 --> 00:01:52,640
our users who are other engineers of the

00:01:52,840 --> 00:01:58,240
company

00:01:55,200 --> 00:01:59,680
this sentiment um sometimes we've we've

00:01:58,240 --> 00:02:00,159
seen the sentiment sometimes where

00:01:59,680 --> 00:02:02,960
people

00:02:00,159 --> 00:02:05,840
feel like they're trying to do something

00:02:02,960 --> 00:02:08,640
somewhat simple like they want to deploy

00:02:05,840 --> 00:02:10,160
a tiny react app or they want to deploy

00:02:08,640 --> 00:02:11,520
a slack bot

00:02:10,160 --> 00:02:14,800
and they feel like they're bouncing

00:02:11,520 --> 00:02:16,720
around different uis and different tools

00:02:14,800 --> 00:02:18,000
and you know when someone has experience

00:02:16,720 --> 00:02:19,680
it's not a good experience and they

00:02:18,000 --> 00:02:20,239
wonder why is it so difficult why do i

00:02:19,680 --> 00:02:22,400
need to use

00:02:20,239 --> 00:02:24,000
so many different tools and here are

00:02:22,400 --> 00:02:24,959
different concepts and hear about

00:02:24,000 --> 00:02:27,280
different

00:02:24,959 --> 00:02:29,200
you know things that just kind of add to

00:02:27,280 --> 00:02:31,040
the battery of entry

00:02:29,200 --> 00:02:32,400
so this is something we're aware of and

00:02:31,040 --> 00:02:34,840
this is something that we're actively

00:02:32,400 --> 00:02:37,519
trying to combat to trying to fight

00:02:34,840 --> 00:02:40,000
complexity

00:02:37,519 --> 00:02:42,319
all right so now i'm going to give you a

00:02:40,000 --> 00:02:45,120
bit of context around ci cd

00:02:42,319 --> 00:02:45,120
at pinterest

00:02:46,400 --> 00:02:50,319
there was a world before spinnaker so

00:02:49,360 --> 00:02:52,480
most people

00:02:50,319 --> 00:02:54,879
here are familiar with the community

00:02:52,480 --> 00:02:57,599
spinach is about four or five years old

00:02:54,879 --> 00:02:59,360
um i know we see pinterest being about

00:02:57,599 --> 00:03:00,800
10 years old there was a

00:02:59,360 --> 00:03:02,800
we were doing deployments before

00:03:00,800 --> 00:03:04,560
spinnaker was around

00:03:02,800 --> 00:03:06,319
and i say it wasn't it wasn't pretty

00:03:04,560 --> 00:03:08,480
because uh there were some challenges

00:03:06,319 --> 00:03:10,800
that people faced in the pre-spinnaker

00:03:08,480 --> 00:03:10,800
world

00:03:12,159 --> 00:03:19,200
so if we think about a hypothetical um

00:03:15,440 --> 00:03:21,120
use case or hypothetical engineer

00:03:19,200 --> 00:03:24,159
we have amy amy is an engineer on the

00:03:21,120 --> 00:03:27,120
web team and amy's goal amy's desire

00:03:24,159 --> 00:03:28,720
is to ship features on our web app to

00:03:27,120 --> 00:03:31,280
basically help our users so that they

00:03:28,720 --> 00:03:33,920
can have a more delightful experience

00:03:31,280 --> 00:03:36,879
however in trying to do this amy could

00:03:33,920 --> 00:03:38,560
be frustrated by the deploy process

00:03:36,879 --> 00:03:40,319
and what do i mean by frustrated where

00:03:38,560 --> 00:03:43,440
is this frustration coming from

00:03:40,319 --> 00:03:45,200
well we know that before spinnaker uh we

00:03:43,440 --> 00:03:47,840
were using a custom tool

00:03:45,200 --> 00:03:48,319
so this custom tool had some limitations

00:03:47,840 --> 00:03:50,080
in

00:03:48,319 --> 00:03:52,319
in in what it could do in terms of

00:03:50,080 --> 00:03:54,720
orchestrating deployments

00:03:52,319 --> 00:03:55,360
there was also limited knowledge around

00:03:54,720 --> 00:03:58,640
how to

00:03:55,360 --> 00:03:59,280
maintain this tool how to develop this

00:03:58,640 --> 00:04:02,319
tool

00:03:59,280 --> 00:04:03,120
so it wasn't a good situation we also

00:04:02,319 --> 00:04:05,200
had

00:04:03,120 --> 00:04:06,799
only a few deployments a day these are

00:04:05,200 --> 00:04:09,439
actually scheduled deployments

00:04:06,799 --> 00:04:10,159
i think it was like 10 30 and 2 p.m

00:04:09,439 --> 00:04:13,280
every day

00:04:10,159 --> 00:04:16,320
for deployments for our user facing

00:04:13,280 --> 00:04:19,040
applications and because we had only two

00:04:16,320 --> 00:04:20,639
deployments we had a large change list

00:04:19,040 --> 00:04:22,079
so frequently there could be tens or

00:04:20,639 --> 00:04:25,199
hundreds of commits

00:04:22,079 --> 00:04:27,919
going into a single deployment in

00:04:25,199 --> 00:04:30,560
addition we had no canary analysis

00:04:27,919 --> 00:04:31,280
so we weren't learning some of the

00:04:30,560 --> 00:04:32,880
differences

00:04:31,280 --> 00:04:35,120
about the metrics what's going on

00:04:32,880 --> 00:04:37,600
between canary and prague

00:04:35,120 --> 00:04:40,160
and this kind of led to scenarios where

00:04:37,600 --> 00:04:42,639
we had a lot of failures in production

00:04:40,160 --> 00:04:44,560
and we had to do rollbacks and hot fixes

00:04:42,639 --> 00:04:46,560
to try and remediate the situation

00:04:44,560 --> 00:04:48,240
so it wasn't a great it wasn't a great

00:04:46,560 --> 00:04:50,800
um uh

00:04:48,240 --> 00:04:50,800
experience

00:04:51,440 --> 00:04:57,440
okay so this graph is

00:04:54,800 --> 00:04:59,040
a summary or combination of the work

00:04:57,440 --> 00:05:00,960
that was done by

00:04:59,040 --> 00:05:02,240
a cross-functional team of engineers at

00:05:00,960 --> 00:05:05,280
pinterest

00:05:02,240 --> 00:05:07,440
um basically they identified the

00:05:05,280 --> 00:05:10,320
problems which i just mentioned

00:05:07,440 --> 00:05:12,560
and their goal was to try and see how we

00:05:10,320 --> 00:05:14,720
could increase deployment of interest

00:05:12,560 --> 00:05:16,639
in order to increase velocity and also

00:05:14,720 --> 00:05:18,960
have you know a higher level

00:05:16,639 --> 00:05:20,560
of reliability in our in our software

00:05:18,960 --> 00:05:22,960
release process

00:05:20,560 --> 00:05:23,680
so in this graph you can literally see

00:05:22,960 --> 00:05:25,440
that

00:05:23,680 --> 00:05:27,520
there's sort of an inflection point

00:05:25,440 --> 00:05:29,520
where the number of deploys started

00:05:27,520 --> 00:05:32,000
drastically increasing

00:05:29,520 --> 00:05:33,919
and then the the land to deploy time so

00:05:32,000 --> 00:05:35,520
how much time it took

00:05:33,919 --> 00:05:38,240
you know for people's actual commits to

00:05:35,520 --> 00:05:39,759
get out started decreasing so this is

00:05:38,240 --> 00:05:42,400
essentially what we're trying to get at

00:05:39,759 --> 00:05:45,840
when we say ci cd this was essentially

00:05:42,400 --> 00:05:49,440
um the impact that this work

00:05:45,840 --> 00:05:52,880
resulted in so how did this happen

00:05:49,440 --> 00:05:55,199
how are we able to mitigate some of the

00:05:52,880 --> 00:05:56,960
ci cd challenges that we had

00:05:55,199 --> 00:05:58,880
well the first thing is we identified

00:05:56,960 --> 00:06:00,479
the core user problems

00:05:58,880 --> 00:06:02,240
there are a lot of different things you

00:06:00,479 --> 00:06:03,759
know this team could have chosen to

00:06:02,240 --> 00:06:06,479
focus on but

00:06:03,759 --> 00:06:06,880
for our use case it was two two major

00:06:06,479 --> 00:06:09,280
things

00:06:06,880 --> 00:06:10,319
velocity you know moving quickly that

00:06:09,280 --> 00:06:13,360
was actually one of our

00:06:10,319 --> 00:06:15,680
key um company

00:06:13,360 --> 00:06:17,120
uh pillars of values at the time and

00:06:15,680 --> 00:06:18,639
also reliability

00:06:17,120 --> 00:06:21,360
right so we know that failures are going

00:06:18,639 --> 00:06:23,759
to happen but how do we quickly recover

00:06:21,360 --> 00:06:25,680
from any of these failures

00:06:23,759 --> 00:06:27,759
second thing was the targeted services

00:06:25,680 --> 00:06:28,960
that were with the most to gain and most

00:06:27,759 --> 00:06:32,000
to learn from

00:06:28,960 --> 00:06:35,039
so for us this happened to be

00:06:32,000 --> 00:06:37,039
two of our user-facing services

00:06:35,039 --> 00:06:38,240
these had um hundreds of committers you

00:06:37,039 --> 00:06:40,560
know there's a lot of

00:06:38,240 --> 00:06:42,639
lots of um code there's a lot of

00:06:40,560 --> 00:06:44,880
interest so we could basically

00:06:42,639 --> 00:06:45,919
learn more and also we had a lot to gain

00:06:44,880 --> 00:06:48,639
because the

00:06:45,919 --> 00:06:50,639
land to deploy time was the largest here

00:06:48,639 --> 00:06:54,240
and another important thing was ident

00:06:50,639 --> 00:06:56,319
identifying that success metric so

00:06:54,240 --> 00:06:58,240
for this use case that was the p90 time

00:06:56,319 --> 00:07:00,960
for land to deploy

00:06:58,240 --> 00:07:03,120
and we obviously took advantage of you

00:07:00,960 --> 00:07:05,039
know standardizing the rollouts

00:07:03,120 --> 00:07:06,960
by leveraging some of these flexible

00:07:05,039 --> 00:07:08,080
building blocks that spinnaker allows us

00:07:06,960 --> 00:07:09,280
to have

00:07:08,080 --> 00:07:11,840
and i'll talk about some of these in

00:07:09,280 --> 00:07:11,840
more detail

00:07:12,400 --> 00:07:17,120
so this is an example of a canonical

00:07:15,280 --> 00:07:20,319
deploy pipeline

00:07:17,120 --> 00:07:22,000
in this case we have five stages

00:07:20,319 --> 00:07:23,599
each of the stages is actually a

00:07:22,000 --> 00:07:25,680
pipeline of its own

00:07:23,599 --> 00:07:27,039
but some of these are custom stages that

00:07:25,680 --> 00:07:29,199
we built so deploy

00:07:27,039 --> 00:07:30,560
for example we built a deploy to

00:07:29,199 --> 00:07:33,520
teletran stage

00:07:30,560 --> 00:07:34,400
teletrain is our in-house deployment

00:07:33,520 --> 00:07:37,440
engine

00:07:34,400 --> 00:07:39,599
and basically this kind of provided a

00:07:37,440 --> 00:07:40,720
template or standard for other service

00:07:39,599 --> 00:07:44,000
owners to

00:07:40,720 --> 00:07:47,520
learn from

00:07:44,000 --> 00:07:50,080
cool so how are we doing with amy

00:07:47,520 --> 00:07:51,440
um we've made a lot of progress in a lot

00:07:50,080 --> 00:07:54,160
of different areas

00:07:51,440 --> 00:07:56,960
today amy is able to ship her commits

00:07:54,160 --> 00:08:00,000
and her features more confidently

00:07:56,960 --> 00:08:00,800
and you know we do vastly more deploys a

00:08:00,000 --> 00:08:03,680
day

00:08:00,800 --> 00:08:05,520
um our change list is is vastly reduced

00:08:03,680 --> 00:08:07,680
it's just a few commits

00:08:05,520 --> 00:08:09,039
we still have failures but they've been

00:08:07,680 --> 00:08:11,440
we have fewer

00:08:09,039 --> 00:08:12,479
and you know failures are inevitable in

00:08:11,440 --> 00:08:14,720
software

00:08:12,479 --> 00:08:16,479
but one of the benefits is we have

00:08:14,720 --> 00:08:17,759
better recovery systems because we have

00:08:16,479 --> 00:08:20,879
canonical

00:08:17,759 --> 00:08:23,120
rollback pipelines that we can call on

00:08:20,879 --> 00:08:26,560
when we do have

00:08:23,120 --> 00:08:30,000
incidents and also we have implemented

00:08:26,560 --> 00:08:31,360
automatic canary uh analysis on some of

00:08:30,000 --> 00:08:32,959
our production services

00:08:31,360 --> 00:08:35,120
and this is providing a lot of value for

00:08:32,959 --> 00:08:35,120
us

00:08:36,320 --> 00:08:40,080
so while we've adopted spinnaker we've

00:08:38,159 --> 00:08:40,719
noticed a bunch of things about how our

00:08:40,080 --> 00:08:43,200
users

00:08:40,719 --> 00:08:45,120
like to interact with spinnaker our

00:08:43,200 --> 00:08:46,320
users definitely love the automation the

00:08:45,120 --> 00:08:48,480
predictability

00:08:46,320 --> 00:08:49,519
the fact that we get more deploys per

00:08:48,480 --> 00:08:51,680
day

00:08:49,519 --> 00:08:53,519
and some of our super users are also

00:08:51,680 --> 00:08:55,680
happy that they have these

00:08:53,519 --> 00:08:56,959
the flexibility to create these custom

00:08:55,680 --> 00:09:00,080
building blocks

00:08:56,959 --> 00:09:01,680
like custom deploy stages custom manual

00:09:00,080 --> 00:09:03,839
judgment stages for whatever the use

00:09:01,680 --> 00:09:05,440
case may be

00:09:03,839 --> 00:09:07,600
we've also found that our users have

00:09:05,440 --> 00:09:10,560
found it hard to debug and keep

00:09:07,600 --> 00:09:12,800
track of complex pipelines especially

00:09:10,560 --> 00:09:14,720
when these pipelines have sub pipelines

00:09:12,800 --> 00:09:16,160
and one of the most challenging things

00:09:14,720 --> 00:09:18,399
that users have said

00:09:16,160 --> 00:09:20,080
is it's difficult to have a sense for

00:09:18,399 --> 00:09:22,240
what is actually going on right now

00:09:20,080 --> 00:09:23,360
and where are we in that sort of flow of

00:09:22,240 --> 00:09:25,760
things

00:09:23,360 --> 00:09:26,720
another challenge is that people have

00:09:25,760 --> 00:09:30,480
felt that it's

00:09:26,720 --> 00:09:33,040
challenging to learn another tool

00:09:30,480 --> 00:09:35,120
that has a lot of complexity sort of in

00:09:33,040 --> 00:09:35,120
it

00:09:35,519 --> 00:09:39,839
so where are we today with all this so

00:09:38,320 --> 00:09:41,440
like i mentioned as i showed in the

00:09:39,839 --> 00:09:43,200
graph we've drastically

00:09:41,440 --> 00:09:45,600
increased deploy frequency so that's

00:09:43,200 --> 00:09:47,360
that velocity pillar

00:09:45,600 --> 00:09:49,120
we've improved the quality so

00:09:47,360 --> 00:09:50,720
reliability of our robots we have a lot

00:09:49,120 --> 00:09:52,320
more confidence when we do roll out

00:09:50,720 --> 00:09:54,640
changes

00:09:52,320 --> 00:09:55,440
but we think there's some way to go in

00:09:54,640 --> 00:09:57,839
providing

00:09:55,440 --> 00:09:59,120
a world-class deployment experience and

00:09:57,839 --> 00:09:59,760
this is something that elise is going to

00:09:59,120 --> 00:10:02,240
speak about

00:09:59,760 --> 00:10:02,240
in a minute

00:10:02,880 --> 00:10:08,720
hey thanks for that context toby this

00:10:05,519 --> 00:10:08,720
brings us to hermes

00:10:08,959 --> 00:10:12,800
so introducing hermes what is it it's

00:10:12,079 --> 00:10:15,920
our vision

00:10:12,800 --> 00:10:17,600
of a single pane of glass for a ci cd at

00:10:15,920 --> 00:10:19,440
pinterest

00:10:17,600 --> 00:10:21,200
we're not quite there yet but it's

00:10:19,440 --> 00:10:22,959
totally in line with our mission on

00:10:21,200 --> 00:10:25,680
engineering productivity

00:10:22,959 --> 00:10:26,880
with highlighting that fast safe and

00:10:25,680 --> 00:10:30,839
delightful path

00:10:26,880 --> 00:10:33,839
to production without the worrying of

00:10:30,839 --> 00:10:33,839
infrastructure

00:10:34,480 --> 00:10:38,640
so today hermes is more focused on that

00:10:37,360 --> 00:10:40,800
deployment side

00:10:38,640 --> 00:10:42,720
it's a one-stop shop for all things

00:10:40,800 --> 00:10:45,600
deployments we support

00:10:42,720 --> 00:10:46,640
kubernetes services cron jobs streaming

00:10:45,600 --> 00:10:48,720
jobs

00:10:46,640 --> 00:10:51,920
we're working to support more as we

00:10:48,720 --> 00:10:51,920
continue to scale up

00:10:52,000 --> 00:10:56,079
and it also provides a way for

00:10:53,839 --> 00:10:58,399
developers to

00:10:56,079 --> 00:10:59,279
at this one stop shop you can deploy

00:10:58,399 --> 00:11:02,800
your code

00:10:59,279 --> 00:11:04,079
monitor those deployments and then debug

00:11:02,800 --> 00:11:07,200
if anything goes wrong

00:11:04,079 --> 00:11:07,200
and look at those locks

00:11:08,399 --> 00:11:12,480
so hermes is a great example of how we

00:11:11,200 --> 00:11:16,720
focused on

00:11:12,480 --> 00:11:16,720
ux or user experience this year

00:11:17,120 --> 00:11:20,640
it's so i'll talk about some of those

00:11:19,760 --> 00:11:22,959
benefits

00:11:20,640 --> 00:11:24,240
so it's well understood in the product

00:11:22,959 --> 00:11:26,720
worlds that

00:11:24,240 --> 00:11:28,320
prioritizing your users needs and

00:11:26,720 --> 00:11:31,040
listening to

00:11:28,320 --> 00:11:33,200
that end user is key to setting your

00:11:31,040 --> 00:11:36,160
product up for success

00:11:33,200 --> 00:11:37,200
you can measure good ux through customer

00:11:36,160 --> 00:11:41,200
satisfaction

00:11:37,200 --> 00:11:44,160
among other metrics on the flip side

00:11:41,200 --> 00:11:45,279
a poor ux is really costly in our

00:11:44,160 --> 00:11:48,240
context

00:11:45,279 --> 00:11:48,880
of engineering tools this could

00:11:48,240 --> 00:11:52,880
translate

00:11:48,880 --> 00:11:55,040
into incidents and service disruptions

00:11:52,880 --> 00:11:56,160
every minute counts in those moments

00:11:55,040 --> 00:11:59,440
especially and

00:11:56,160 --> 00:12:02,399
time is money lastly

00:11:59,440 --> 00:12:03,360
we live in an attention economy we've

00:12:02,399 --> 00:12:06,480
all been there

00:12:03,360 --> 00:12:09,120
we're bombarded by notifications and

00:12:06,480 --> 00:12:10,160
things on our screens and it's even more

00:12:09,120 --> 00:12:12,480
relevant today

00:12:10,160 --> 00:12:13,279
where a lot of people have to had to

00:12:12,480 --> 00:12:17,040
shift to

00:12:13,279 --> 00:12:19,440
a remote and work from home culture

00:12:17,040 --> 00:12:20,480
we don't need to add more disruption and

00:12:19,440 --> 00:12:23,839
destruction

00:12:20,480 --> 00:12:26,399
to our employees our engineers so

00:12:23,839 --> 00:12:28,959
focusing on a good experience

00:12:26,399 --> 00:12:28,959
is key

00:12:29,519 --> 00:12:35,040
so naturally we ask the question

00:12:32,720 --> 00:12:36,240
can we roll up the greatness of

00:12:35,040 --> 00:12:39,519
spinnaker

00:12:36,240 --> 00:12:43,519
into the greatness of hermes

00:12:39,519 --> 00:12:43,519
a beautiful ui that's easy to use

00:12:43,760 --> 00:12:48,800
so we said yes but we need to talk with

00:12:45,839 --> 00:12:50,320
those customers first

00:12:48,800 --> 00:12:52,160
and i'll take you through a little

00:12:50,320 --> 00:12:55,279
sidebar on user research

00:12:52,160 --> 00:12:57,440
first to really

00:12:55,279 --> 00:13:00,000
show you guys how important this is so

00:12:57,440 --> 00:13:03,200
what is user research it's a form

00:13:00,000 --> 00:13:05,600
of data qualitative data

00:13:03,200 --> 00:13:07,120
that informs the why if quantitative

00:13:05,600 --> 00:13:08,959
data is the what

00:13:07,120 --> 00:13:11,600
qualitative is the y so it colors the

00:13:08,959 --> 00:13:14,000
full picture gives you more context

00:13:11,600 --> 00:13:15,120
around things like pain points and what

00:13:14,000 --> 00:13:19,120
users

00:13:15,120 --> 00:13:19,120
what things resonate with users

00:13:19,519 --> 00:13:26,240
it also builds empathy with those users

00:13:23,519 --> 00:13:28,240
so that sounds great right so talking

00:13:26,240 --> 00:13:31,440
with them directly having that

00:13:28,240 --> 00:13:36,000
direct line of feedback is

00:13:31,440 --> 00:13:39,760
is the most effective way to internalize

00:13:36,000 --> 00:13:41,360
feedback it might be great to get a user

00:13:39,760 --> 00:13:44,240
research report from

00:13:41,360 --> 00:13:45,680
a team of researchers but really study

00:13:44,240 --> 00:13:48,639
studies have shown that

00:13:45,680 --> 00:13:50,240
internalizing it helps you in your in

00:13:48,639 --> 00:13:53,839
your day to day of building something

00:13:50,240 --> 00:13:57,199
so even if you're not a designer

00:13:53,839 --> 00:13:59,199
a researcher you're building something

00:13:57,199 --> 00:14:02,000
for other people

00:13:59,199 --> 00:14:03,920
so focusing on their the user like

00:14:02,000 --> 00:14:08,720
having that open line of feedback

00:14:03,920 --> 00:14:12,079
back and forth is is critical

00:14:08,720 --> 00:14:14,480
so one tip here if you want to run

00:14:12,079 --> 00:14:15,360
some one-on-one interviews is that

00:14:14,480 --> 00:14:18,880
remain as

00:14:15,360 --> 00:14:20,240
neutral as possible don't ask leading

00:14:18,880 --> 00:14:22,480
questions you know you don't want to

00:14:20,240 --> 00:14:25,199
push your opinions on others

00:14:22,480 --> 00:14:25,680
um be a friendly sponge like spongebob

00:14:25,199 --> 00:14:30,000
here

00:14:25,680 --> 00:14:32,320
actively listen soak it up and then

00:14:30,000 --> 00:14:33,279
at the end when you come to analysis you

00:14:32,320 --> 00:14:37,360
filter

00:14:33,279 --> 00:14:39,600
your lens of expertise and guidance

00:14:37,360 --> 00:14:42,720
through the feedback so users might not

00:14:39,600 --> 00:14:42,720
always know what they need

00:14:43,120 --> 00:14:48,079
so we talked with our users and we

00:14:45,760 --> 00:14:48,079
learned

00:14:48,160 --> 00:14:52,720
here are some of the findings on this

00:14:50,240 --> 00:14:55,839
first page

00:14:52,720 --> 00:14:57,760
as toby told us before unsurprisingly

00:14:55,839 --> 00:14:59,519
the benefits of pipelines are understood

00:14:57,760 --> 00:15:01,920
things like automation

00:14:59,519 --> 00:15:04,240
templates and testing everyone's a fan

00:15:01,920 --> 00:15:06,720
of that

00:15:04,240 --> 00:15:07,600
a key finding was that a single source

00:15:06,720 --> 00:15:10,399
of truth

00:15:07,600 --> 00:15:12,480
is super important obviously in software

00:15:10,399 --> 00:15:14,399
that's that's critical um

00:15:12,480 --> 00:15:16,399
the less surfaces the better syncing

00:15:14,399 --> 00:15:17,040
between services if we're adding another

00:15:16,399 --> 00:15:20,000
service

00:15:17,040 --> 00:15:22,160
this could increase issues between

00:15:20,000 --> 00:15:25,440
syncing and

00:15:22,160 --> 00:15:28,800
also configuration as as code

00:15:25,440 --> 00:15:30,639
was sort of polarizing a bit and a good

00:15:28,800 --> 00:15:33,759
ui and user experience

00:15:30,639 --> 00:15:34,639
is great but then going back to the

00:15:33,759 --> 00:15:37,120
point about

00:15:34,639 --> 00:15:38,000
a single source of truth we decided

00:15:37,120 --> 00:15:40,639
ultimately

00:15:38,000 --> 00:15:41,519
configuration as code or pipelines as

00:15:40,639 --> 00:15:43,279
code is

00:15:41,519 --> 00:15:45,680
it's a good thing to move forward with

00:15:43,279 --> 00:15:48,639
less surfaces

00:15:45,680 --> 00:15:51,120
some other findings from this research

00:15:48,639 --> 00:15:54,240
and one-on-one interviews was that

00:15:51,120 --> 00:15:56,720
spinnaker had

00:15:54,240 --> 00:15:57,680
wasn't too much of a learning curve for

00:15:56,720 --> 00:16:00,959
these folks

00:15:57,680 --> 00:16:02,160
however some features were either

00:16:00,959 --> 00:16:05,440
miscible

00:16:02,160 --> 00:16:08,959
like rollbacks and revision history

00:16:05,440 --> 00:16:13,440
or actions like deleting was just

00:16:08,959 --> 00:16:15,839
too easy to do which we want to avoid

00:16:13,440 --> 00:16:17,040
and finally tracking down where code

00:16:15,839 --> 00:16:19,680
comes from was

00:16:17,040 --> 00:16:20,720
difficult we know it's a known issue at

00:16:19,680 --> 00:16:24,320
pinterest but

00:16:20,720 --> 00:16:27,040
we also know that this is more on the ci

00:16:24,320 --> 00:16:27,040
integration side

00:16:27,759 --> 00:16:33,920
so to bring us through the journey

00:16:31,040 --> 00:16:35,759
of tackling this on hermes we started

00:16:33,920 --> 00:16:38,880
with pipelines as code

00:16:35,759 --> 00:16:40,639
you configure pipeline in yaml which

00:16:38,880 --> 00:16:42,079
goes through the translation layer to

00:16:40,639 --> 00:16:45,120
json and then

00:16:42,079 --> 00:16:49,279
that mitigates those issues around

00:16:45,120 --> 00:16:52,079
syncing we also provide those canonical

00:16:49,279 --> 00:16:53,279
pipeline templates as a guide for our

00:16:52,079 --> 00:16:56,399
users

00:16:53,279 --> 00:16:58,880
so once the user creates

00:16:56,399 --> 00:16:59,519
a pipeline through code we had to give a

00:16:58,880 --> 00:17:04,799
way for

00:16:59,519 --> 00:17:08,640
users to discover it in the in the ui

00:17:04,799 --> 00:17:10,880
so here is a little prototype of

00:17:08,640 --> 00:17:12,240
some of the designs we came up with to

00:17:10,880 --> 00:17:15,280
surface pipelines

00:17:12,240 --> 00:17:16,079
on the front end hermes can call the

00:17:15,280 --> 00:17:19,280
spinnaker

00:17:16,079 --> 00:17:20,559
api and then surface it here so we have

00:17:19,280 --> 00:17:23,839
a way to sort by

00:17:20,559 --> 00:17:27,280
project for instance

00:17:23,839 --> 00:17:28,799
next we tackled and focused on critical

00:17:27,280 --> 00:17:31,600
actions

00:17:28,799 --> 00:17:32,960
first like manually running or executing

00:17:31,600 --> 00:17:35,919
a pipeline

00:17:32,960 --> 00:17:37,520
or rollbacks which are obviously really

00:17:35,919 --> 00:17:40,720
important

00:17:37,520 --> 00:17:43,440
when you encounter failures so here we

00:17:40,720 --> 00:17:46,559
see an example or prototype of

00:17:43,440 --> 00:17:47,440
a rollback flow where we ask the user

00:17:46,559 --> 00:17:50,400
for a reason

00:17:47,440 --> 00:17:51,039
we provide a little bit more friction so

00:17:50,400 --> 00:17:53,280
that it's

00:17:51,039 --> 00:17:54,880
it's less easy to make a mistake and we

00:17:53,280 --> 00:17:58,799
give more context around

00:17:54,880 --> 00:18:02,000
what this is what the consequences are

00:17:58,799 --> 00:18:03,840
and we gather data too around what sorts

00:18:02,000 --> 00:18:06,240
of incidents they might be coming

00:18:03,840 --> 00:18:06,240
across

00:18:07,600 --> 00:18:14,960
and then finally a preview of our

00:18:11,600 --> 00:18:17,039
future vision is

00:18:14,960 --> 00:18:19,039
is this so we have a pipeline

00:18:17,039 --> 00:18:22,880
visualization here

00:18:19,039 --> 00:18:25,200
showing that canonical pipeline template

00:18:22,880 --> 00:18:28,480
however we're definitely not at feature

00:18:25,200 --> 00:18:31,679
parody yet today it's a journey and

00:18:28,480 --> 00:18:33,679
we definitely see the complexity

00:18:31,679 --> 00:18:36,000
and the challenge and the complexity of

00:18:33,679 --> 00:18:39,120
representing sub pipelines

00:18:36,000 --> 00:18:39,760
within pipelines and that's where we

00:18:39,120 --> 00:18:42,880
stand

00:18:39,760 --> 00:18:46,000
today but so far it's been great

00:18:42,880 --> 00:18:48,880
getting feedback from our users

00:18:46,000 --> 00:18:49,360
so we've seen that folks have reached

00:18:48,880 --> 00:18:52,320
out to us

00:18:49,360 --> 00:18:54,720
to tell us that they're having i thought

00:18:52,320 --> 00:18:56,320
it's a joy to set up a crown job etc so

00:18:54,720 --> 00:18:57,919
we keep that direct line of feedback

00:18:56,320 --> 00:19:01,200
with our users

00:18:57,919 --> 00:19:01,200
on a normal cadence

00:19:02,080 --> 00:19:06,480
we also got some recent feedback from

00:19:04,320 --> 00:19:08,880
our ads api team

00:19:06,480 --> 00:19:10,320
that the velocity has drastically

00:19:08,880 --> 00:19:14,000
increased

00:19:10,320 --> 00:19:17,520
so going back to that pillar kr

00:19:14,000 --> 00:19:20,080
goal at pinterest we're

00:19:17,520 --> 00:19:20,960
working towards it it hits our mission

00:19:20,080 --> 00:19:23,280
of creating a

00:19:20,960 --> 00:19:24,880
fast safe and delightful path to

00:19:23,280 --> 00:19:26,880
production

00:19:24,880 --> 00:19:28,559
without the worry of infrastructure

00:19:26,880 --> 00:19:33,679
we're forging that path

00:19:28,559 --> 00:19:33,679
to a delightful deployment experience

00:19:35,840 --> 00:19:41,760
cool and uh hermes is currently

00:19:40,160 --> 00:19:44,240
in-house and in-house product but we

00:19:41,760 --> 00:19:44,880
definitely do have a desire to open

00:19:44,240 --> 00:19:47,600
source it

00:19:44,880 --> 00:19:49,120
um so if anyone here is interested in

00:19:47,600 --> 00:19:51,360
what we're building or would like to

00:19:49,120 --> 00:19:53,520
talk to us about open sourcing hermes

00:19:51,360 --> 00:19:55,760
if you're having so many challenges we'd

00:19:53,520 --> 00:19:57,760
love to connect with you

00:19:55,760 --> 00:19:59,440
feel free to reach out to us on linkedin

00:19:57,760 --> 00:20:01,440
and yeah we'll just love to

00:19:59,440 --> 00:20:07,840
hear what you're building and see how we

00:20:01,440 --> 00:20:07,840

YouTube URL: https://www.youtube.com/watch?v=0S8wrmp5YDE


