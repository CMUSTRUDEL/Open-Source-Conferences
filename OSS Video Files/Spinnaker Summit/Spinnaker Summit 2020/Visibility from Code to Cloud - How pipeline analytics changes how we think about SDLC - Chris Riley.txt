Title: Visibility from Code to Cloud - How pipeline analytics changes how we think about SDLC - Chris Riley
Publication date: 2021-01-12
Playlist: Spinnaker Summit 2020
Description: 
	Application development teams are no stranger too monitoring. But today monitoring is largely focused on managing applications in production. Enterprises are missing a huge opportunity to learn more about their development practices, measure success, align development to the business, and have more resilient delivery chains. Pipeline analytics is an amazing tool for enterprises to lead with their development practices. When organizations leverage telemetry from their tool chain they break down visibility silos and can better manage the SDLC base on real data. In this session we will talk about the power of pipeline analytics, and how organizations can leverage it to create visibility from code to cloud. - The tremendous gap in visibility for the SDLC - What is pipeline analytics - Business and technical benefits - Ways to approach pipeline visibility
Captions: 
	00:00:00,530 --> 00:00:03,629
[Music]

00:00:05,120 --> 00:00:08,320
well hello

00:00:06,240 --> 00:00:09,920
my name is chris riley and thanks for

00:00:08,320 --> 00:00:13,040
joining my session on

00:00:09,920 --> 00:00:13,519
code to cloud visibility before we talk

00:00:13,040 --> 00:00:16,560
shop

00:00:13,519 --> 00:00:18,880
and before we go over this who i am

00:00:16,560 --> 00:00:21,119
in more detail i wanted to first say

00:00:18,880 --> 00:00:22,160
thank you to all the organizers of the

00:00:21,119 --> 00:00:23,760
spinnaker summit

00:00:22,160 --> 00:00:25,199
it's a lot of effort to put these

00:00:23,760 --> 00:00:27,760
sessions together

00:00:25,199 --> 00:00:28,880
i've dabbled in it myself and i know how

00:00:27,760 --> 00:00:31,119
much work that is

00:00:28,880 --> 00:00:33,040
and also thank you to you for joining

00:00:31,119 --> 00:00:34,640
there's a lot of information out there i

00:00:33,040 --> 00:00:37,200
hope you've enjoyed the sessions you've

00:00:34,640 --> 00:00:41,040
seen so far and i'm happy that you

00:00:37,200 --> 00:00:44,079
decided to join mine as well

00:00:41,040 --> 00:00:47,840
so as i said my name is chris riley i am

00:00:44,079 --> 00:00:49,360
a devrel and devops advocate for splunk

00:00:47,840 --> 00:00:51,039
well what does that actually mean i

00:00:49,360 --> 00:00:53,600
think it's important for me

00:00:51,039 --> 00:00:55,360
to give you a chance to understand why i

00:00:53,600 --> 00:00:58,719
think i'm qualified to be up here

00:00:55,360 --> 00:00:59,760
and talk to you well turns out i'm not a

00:00:58,719 --> 00:01:02,160
very good coder

00:00:59,760 --> 00:01:04,000
so i started my career as a.net

00:01:02,160 --> 00:01:06,640
developer and i consider myself

00:01:04,000 --> 00:01:08,720
a bad coder turned advocate turns out

00:01:06,640 --> 00:01:10,320
all the details of building applications

00:01:08,720 --> 00:01:13,600
were something that

00:01:10,320 --> 00:01:16,159
was not my particular forte

00:01:13,600 --> 00:01:17,680
but this amazing role called devops

00:01:16,159 --> 00:01:19,680
advocate showed up

00:01:17,680 --> 00:01:21,360
and i've been doing it for the last 14

00:01:19,680 --> 00:01:23,200
years and basically it means i

00:01:21,360 --> 00:01:25,920
get to engage with the practitioner and

00:01:23,200 --> 00:01:27,439
talk about how technology is being used

00:01:25,920 --> 00:01:29,520
at events like this

00:01:27,439 --> 00:01:32,720
and when they were in person i got to

00:01:29,520 --> 00:01:34,560
have more casual conversations as well

00:01:32,720 --> 00:01:36,720
but also i get to bring that

00:01:34,560 --> 00:01:38,799
understanding back to the organization

00:01:36,720 --> 00:01:39,600
to make sure that the technologies we

00:01:38,799 --> 00:01:41,759
provide

00:01:39,600 --> 00:01:43,840
align with the use cases that our

00:01:41,759 --> 00:01:45,920
customers are using it for

00:01:43,840 --> 00:01:47,600
if you scan that qr code you will get

00:01:45,920 --> 00:01:50,640
access to

00:01:47,600 --> 00:01:52,000
my two podcasts and other information

00:01:50,640 --> 00:01:54,320
and like i said

00:01:52,000 --> 00:01:56,479
in the in physical events i was able to

00:01:54,320 --> 00:01:58,320
have one-on-one conversations and i try

00:01:56,479 --> 00:02:00,320
to get back to that so if you want to

00:01:58,320 --> 00:02:02,320
continue the conversation with me

00:02:00,320 --> 00:02:04,240
on linkedin i would love to hear from

00:02:02,320 --> 00:02:04,560
you or if you just want to tell me that

00:02:04,240 --> 00:02:06,479
you

00:02:04,560 --> 00:02:08,399
loved or hated this session please do

00:02:06,479 --> 00:02:10,479
that as well

00:02:08,399 --> 00:02:13,360
so what are we talking about today well

00:02:10,479 --> 00:02:16,000
the topic is code to cloud visibility

00:02:13,360 --> 00:02:17,760
and the path to code to cloud visibility

00:02:16,000 --> 00:02:20,400
or one part of that path

00:02:17,760 --> 00:02:22,400
is something called pipeline analytics

00:02:20,400 --> 00:02:24,720
so i want to make a pitch for you

00:02:22,400 --> 00:02:25,440
on why pipeline analytics is an

00:02:24,720 --> 00:02:28,160
important

00:02:25,440 --> 00:02:29,280
focus for development teams certainly

00:02:28,160 --> 00:02:31,920
there's organizations

00:02:29,280 --> 00:02:33,680
out there who are enabling pipeline

00:02:31,920 --> 00:02:36,959
analytics

00:02:33,680 --> 00:02:39,200
but it isn't a primary focus most focus

00:02:36,959 --> 00:02:41,519
around the area of devops has been

00:02:39,200 --> 00:02:43,200
around velocity and getting your

00:02:41,519 --> 00:02:45,840
application into production

00:02:43,200 --> 00:02:46,319
and then once it's in production making

00:02:45,840 --> 00:02:49,760
sure

00:02:46,319 --> 00:02:52,720
that you can monitor and support it

00:02:49,760 --> 00:02:54,959
before we dive in and some of these

00:02:52,720 --> 00:02:56,400
terms might just seem trivial to you

00:02:54,959 --> 00:02:57,840
i think it's really important to

00:02:56,400 --> 00:02:58,560
highlight the terms that i'm going to be

00:02:57,840 --> 00:03:01,120
using

00:02:58,560 --> 00:03:02,239
because we are in the tech space

00:03:01,120 --> 00:03:04,400
terminology

00:03:02,239 --> 00:03:06,879
can get very confusing and it's

00:03:04,400 --> 00:03:09,920
important to understand it in context

00:03:06,879 --> 00:03:11,440
so when i say sdlc i'm referring to the

00:03:09,920 --> 00:03:13,680
software delivery chain

00:03:11,440 --> 00:03:15,440
the software delivery chain is the

00:03:13,680 --> 00:03:18,239
people the strategy

00:03:15,440 --> 00:03:19,920
the tools and the automation used to

00:03:18,239 --> 00:03:22,080
build applications

00:03:19,920 --> 00:03:23,840
when i say pipeline analytics i'm

00:03:22,080 --> 00:03:25,360
talking about getting data from your

00:03:23,840 --> 00:03:28,640
software delivery chain

00:03:25,360 --> 00:03:29,680
and making use of that data when i talk

00:03:28,640 --> 00:03:32,000
about tools

00:03:29,680 --> 00:03:33,040
and tool chain may sound like it's all

00:03:32,000 --> 00:03:35,200
the same thing

00:03:33,040 --> 00:03:36,239
but i'm talking specifically about the

00:03:35,200 --> 00:03:38,959
tools you

00:03:36,239 --> 00:03:40,319
use in your software delivery chain and

00:03:38,959 --> 00:03:42,720
how you automate them

00:03:40,319 --> 00:03:43,599
and tie them together and finally

00:03:42,720 --> 00:03:46,400
telemetry

00:03:43,599 --> 00:03:47,680
is simply the data that comes out of

00:03:46,400 --> 00:03:51,120
those tools

00:03:47,680 --> 00:03:55,200
that builds pipeline analytics

00:03:51,120 --> 00:03:58,640
so to begin i need you to agree with me

00:03:55,200 --> 00:04:01,280
on one basic principle which is

00:03:58,640 --> 00:04:02,319
your software delivery chain is the

00:04:01,280 --> 00:04:05,439
application

00:04:02,319 --> 00:04:08,480
of applications it is

00:04:05,439 --> 00:04:09,599
an application whose users are the

00:04:08,480 --> 00:04:12,319
developers

00:04:09,599 --> 00:04:13,360
the quality assurance engineers and your

00:04:12,319 --> 00:04:15,680
sres

00:04:13,360 --> 00:04:17,280
on the production side and we are

00:04:15,680 --> 00:04:20,239
delivering it to them

00:04:17,280 --> 00:04:20,959
as we would any other application which

00:04:20,239 --> 00:04:24,639
means

00:04:20,959 --> 00:04:26,960
we should treat it as we would any other

00:04:24,639 --> 00:04:30,080
application

00:04:26,960 --> 00:04:33,280
now if you put it in that perspective it

00:04:30,080 --> 00:04:35,759
it seems kind of obvious where i'm going

00:04:33,280 --> 00:04:37,360
and i really like this graphic because i

00:04:35,759 --> 00:04:40,880
like to think of it in terms

00:04:37,360 --> 00:04:44,320
of mapping your route

00:04:40,880 --> 00:04:46,240
from a to b on your phone now today it's

00:04:44,320 --> 00:04:49,360
much easier than it used to be

00:04:46,240 --> 00:04:52,160
um when technology first got involved

00:04:49,360 --> 00:04:53,199
in finding your your route from point a

00:04:52,160 --> 00:04:55,199
to point b

00:04:53,199 --> 00:04:56,240
it was something called mapquest and you

00:04:55,199 --> 00:04:57,919
would print it out

00:04:56,240 --> 00:05:00,000
and you would try to drive and follow

00:04:57,919 --> 00:05:02,160
the instructions on a piece of paper

00:05:00,000 --> 00:05:04,400
much easier today pull it up in your

00:05:02,160 --> 00:05:04,800
phone enter an address where you want to

00:05:04,400 --> 00:05:07,280
go

00:05:04,800 --> 00:05:08,479
it already knows where you are and it

00:05:07,280 --> 00:05:10,560
gives you choices

00:05:08,479 --> 00:05:12,479
usually it gives you choices pick what

00:05:10,560 --> 00:05:15,120
route a pick route b

00:05:12,479 --> 00:05:16,880
depending on amount of time it also

00:05:15,120 --> 00:05:20,880
tells you about the roadblocks

00:05:16,880 --> 00:05:24,160
ahead and where you're going so

00:05:20,880 --> 00:05:27,280
the thing is if you didn't map it

00:05:24,160 --> 00:05:28,800
like you can today then

00:05:27,280 --> 00:05:30,160
you don't know what's going to happen on

00:05:28,800 --> 00:05:31,440
your route you may know how to get there

00:05:30,160 --> 00:05:33,120
but you don't really have a good

00:05:31,440 --> 00:05:35,039
understanding of the path

00:05:33,120 --> 00:05:37,280
of point a and point b and what's going

00:05:35,039 --> 00:05:39,199
to happen well that's similar to

00:05:37,280 --> 00:05:41,120
pipeline analytics

00:05:39,199 --> 00:05:43,039
you have to create that visibility you

00:05:41,120 --> 00:05:45,919
have to create that tool

00:05:43,039 --> 00:05:47,600
so that you can see as code moves

00:05:45,919 --> 00:05:51,600
through your delivery chain

00:05:47,600 --> 00:05:52,160
from plan to prod and all the way back

00:05:51,600 --> 00:05:53,680
again

00:05:52,160 --> 00:05:56,160
because it should there should be a

00:05:53,680 --> 00:05:58,319
feedback loop you want to know

00:05:56,160 --> 00:05:59,680
where the hang ups are where something

00:05:58,319 --> 00:06:03,120
is not working

00:05:59,680 --> 00:06:05,919
areas to improve ways to avoid

00:06:03,120 --> 00:06:07,199
charting a different route because your

00:06:05,919 --> 00:06:09,680
delivery chain

00:06:07,199 --> 00:06:11,520
again if you agree with me is the

00:06:09,680 --> 00:06:14,880
application of applications

00:06:11,520 --> 00:06:18,400
and in order to have pipeline analytics

00:06:14,880 --> 00:06:20,319
you need to have both depth and breadth

00:06:18,400 --> 00:06:22,400
now a lot of times when we talk about

00:06:20,319 --> 00:06:25,520
monitoring metrics

00:06:22,400 --> 00:06:26,800
we're talking about production it most

00:06:25,520 --> 00:06:28,880
often is production

00:06:26,800 --> 00:06:30,639
and that kind of makes sense right your

00:06:28,880 --> 00:06:31,759
applications in production is the most

00:06:30,639 --> 00:06:34,479
critical thing

00:06:31,759 --> 00:06:34,800
that you're supporting but you also need

00:06:34,479 --> 00:06:38,319
to

00:06:34,800 --> 00:06:39,360
get there and in order to treat your

00:06:38,319 --> 00:06:42,479
delivery chain

00:06:39,360 --> 00:06:45,600
as an application you should monitor it

00:06:42,479 --> 00:06:49,199
as you would any other application

00:06:45,600 --> 00:06:50,319
and you do that because by creating kpis

00:06:49,199 --> 00:06:53,360
and metrics

00:06:50,319 --> 00:06:54,560
in breadth across your delivery chain so

00:06:53,360 --> 00:06:57,039
if you think about it

00:06:54,560 --> 00:06:57,840
depth is observability and monitoring

00:06:57,039 --> 00:07:00,479
which includes

00:06:57,840 --> 00:07:03,280
incident response which includes extreme

00:07:00,479 --> 00:07:05,599
detail about how you do your testing

00:07:03,280 --> 00:07:06,319
breadth is all the analytics you can

00:07:05,599 --> 00:07:10,080
create

00:07:06,319 --> 00:07:12,400
that follows data telemetry

00:07:10,080 --> 00:07:14,080
from the point that a feature is planned

00:07:12,400 --> 00:07:17,919
all the way to production

00:07:14,080 --> 00:07:20,400
and then learn from it and back again

00:07:17,919 --> 00:07:22,160
the data is there and what we see in

00:07:20,400 --> 00:07:25,199
most organizations

00:07:22,160 --> 00:07:26,639
is these visibility silos developers

00:07:25,199 --> 00:07:29,440
tend to be really good

00:07:26,639 --> 00:07:30,000
at visualizing their component of the

00:07:29,440 --> 00:07:32,240
delivery

00:07:30,000 --> 00:07:33,599
chain devops engineers usually have a

00:07:32,240 --> 00:07:34,319
good understanding of what's going on

00:07:33,599 --> 00:07:36,240
with their

00:07:34,319 --> 00:07:38,080
component of the delivery chain

00:07:36,240 --> 00:07:41,759
automation spinnaker

00:07:38,080 --> 00:07:44,240
cicd but then you get into production

00:07:41,759 --> 00:07:45,599
and that's where we know a lot about

00:07:44,240 --> 00:07:48,400
what's going on with

00:07:45,599 --> 00:07:50,080
the application but you only know about

00:07:48,400 --> 00:07:52,720
what's happening in production

00:07:50,080 --> 00:07:53,680
there's a lot that led up to that and

00:07:52,720 --> 00:07:56,879
already

00:07:53,680 --> 00:08:01,039
the sres in the ops team

00:07:56,879 --> 00:08:03,759
and infosec already are

00:08:01,039 --> 00:08:05,039
limited in their visibility they only

00:08:03,759 --> 00:08:05,840
know what's happening with the

00:08:05,039 --> 00:08:09,039
application

00:08:05,840 --> 00:08:12,720
once it hits prod and so these

00:08:09,039 --> 00:08:15,520
silos of insights are disconnected

00:08:12,720 --> 00:08:17,360
and the communication then is broken not

00:08:15,520 --> 00:08:21,680
everybody is speaking

00:08:17,360 --> 00:08:24,160
the same language so that's where

00:08:21,680 --> 00:08:24,800
even though we are collecting metrics

00:08:24,160 --> 00:08:29,120
and data

00:08:24,800 --> 00:08:32,560
and information in a

00:08:29,120 --> 00:08:34,320
kind of broken way but very successful

00:08:32,560 --> 00:08:37,440
in a lot of organizations

00:08:34,320 --> 00:08:40,640
what we're missing and what makes it not

00:08:37,440 --> 00:08:43,760
yet pipeline analytics is

00:08:40,640 --> 00:08:45,120
correlating all of that together so

00:08:43,760 --> 00:08:48,240
again my pitch of

00:08:45,120 --> 00:08:50,320
why well it's pretty simple if you

00:08:48,240 --> 00:08:52,720
consider your software delivery chain to

00:08:50,320 --> 00:08:54,880
be the application of applications

00:08:52,720 --> 00:08:57,040
that your developers your quality

00:08:54,880 --> 00:08:57,920
engineers your devops engineers and your

00:08:57,040 --> 00:09:00,800
sres

00:08:57,920 --> 00:09:01,600
are using if that delivery chain goes

00:09:00,800 --> 00:09:05,040
down

00:09:01,600 --> 00:09:06,080
no code ships so instead of dealing with

00:09:05,040 --> 00:09:08,560
that

00:09:06,080 --> 00:09:09,680
outage or being down you should deal

00:09:08,560 --> 00:09:12,720
with it as you do

00:09:09,680 --> 00:09:14,959
with every other application

00:09:12,720 --> 00:09:16,080
also your software delivery chain is

00:09:14,959 --> 00:09:19,519
another

00:09:16,080 --> 00:09:22,560
is a part of your attack surface

00:09:19,519 --> 00:09:26,080
it is a part of where

00:09:22,560 --> 00:09:29,120
access to code and infrastructure

00:09:26,080 --> 00:09:31,839
can happen that guys want to get

00:09:29,120 --> 00:09:33,120
get access to your your code as much as

00:09:31,839 --> 00:09:35,120
they want to get access to your

00:09:33,120 --> 00:09:38,160
applications in production as well

00:09:35,120 --> 00:09:40,080
as a matter of fact getting access to

00:09:38,160 --> 00:09:42,399
secrets and components of your delivery

00:09:40,080 --> 00:09:44,399
chain might be exactly how

00:09:42,399 --> 00:09:46,959
they get access to your application in

00:09:44,399 --> 00:09:49,600
production

00:09:46,959 --> 00:09:50,080
and your teams are simply not speaking

00:09:49,600 --> 00:09:53,200
the same

00:09:50,080 --> 00:09:56,800
language if you do not correlate data

00:09:53,200 --> 00:09:58,000
from plan to prod then nobody's on the

00:09:56,800 --> 00:10:00,640
same page with your

00:09:58,000 --> 00:10:01,200
you're on the same page within silos but

00:10:00,640 --> 00:10:03,440
you're not

00:10:01,200 --> 00:10:04,959
on the same page across your entire

00:10:03,440 --> 00:10:08,160
delivery chain

00:10:04,959 --> 00:10:11,120
measuring business value so is

00:10:08,160 --> 00:10:12,320
your delivery chain actually providing

00:10:11,120 --> 00:10:15,360
value

00:10:12,320 --> 00:10:17,440
to your organization measuring that

00:10:15,360 --> 00:10:18,959
that is not something that you can do

00:10:17,440 --> 00:10:21,760
without correlating this

00:10:18,959 --> 00:10:23,440
data across your delivery chain

00:10:21,760 --> 00:10:26,480
measuring the success or

00:10:23,440 --> 00:10:27,600
failure of development is hard how do

00:10:26,480 --> 00:10:30,720
you know what good

00:10:27,600 --> 00:10:31,760
means if you're not correlating data

00:10:30,720 --> 00:10:33,839
across your

00:10:31,760 --> 00:10:35,519
delivery chain how do you reduce

00:10:33,839 --> 00:10:37,279
technical debt

00:10:35,519 --> 00:10:39,040
a lot of times technical debt is a

00:10:37,279 --> 00:10:40,160
project-based thing that you address

00:10:39,040 --> 00:10:42,000
periodically

00:10:40,160 --> 00:10:44,320
be great if it's something that you're

00:10:42,000 --> 00:10:46,640
addressing continually

00:10:44,320 --> 00:10:48,240
because yeah it's gonna happen no matter

00:10:46,640 --> 00:10:51,600
what you're gonna have technical debt

00:10:48,240 --> 00:10:52,720
eventually but visibility allows you to

00:10:51,600 --> 00:10:56,959
address that

00:10:52,720 --> 00:10:59,920
and finally as the shift left movement

00:10:56,959 --> 00:11:02,240
becomes more and more common and

00:10:59,920 --> 00:11:05,200
developers are more and more involved

00:11:02,240 --> 00:11:06,959
in what happens in production with

00:11:05,200 --> 00:11:10,320
applications which i guess

00:11:06,959 --> 00:11:12,399
is shift right then the visibility

00:11:10,320 --> 00:11:14,399
they need that visibility because they

00:11:12,399 --> 00:11:17,279
are going to be addressing code level

00:11:14,399 --> 00:11:19,440
issues in incidents and they need that

00:11:17,279 --> 00:11:22,320
context to be continuous

00:11:19,440 --> 00:11:23,200
throughout the delivery chain so that's

00:11:22,320 --> 00:11:26,000
why i think

00:11:23,200 --> 00:11:28,240
pipeline analytics is so important and

00:11:26,000 --> 00:11:31,120
hopefully you agree with me

00:11:28,240 --> 00:11:31,920
now the goals the outcomes what we're

00:11:31,120 --> 00:11:34,880
trying to

00:11:31,920 --> 00:11:36,160
get to with a good pipeline analytics

00:11:34,880 --> 00:11:38,079
strategy

00:11:36,160 --> 00:11:39,440
is being able to create measurements of

00:11:38,079 --> 00:11:41,680
success

00:11:39,440 --> 00:11:42,720
aligning your software delivery chain to

00:11:41,680 --> 00:11:45,440
business value

00:11:42,720 --> 00:11:46,800
and in the mecca here like the best case

00:11:45,440 --> 00:11:50,079
scenario

00:11:46,800 --> 00:11:51,600
is you can actually say did a new

00:11:50,079 --> 00:11:53,680
feature

00:11:51,600 --> 00:11:56,959
make our users happier our customers

00:11:53,680 --> 00:12:00,240
happier generate more revenue

00:11:56,959 --> 00:12:02,160
also simply because it is an application

00:12:00,240 --> 00:12:04,320
you need to meet your slos you need to

00:12:02,160 --> 00:12:06,480
make sure you're giving your developers

00:12:04,320 --> 00:12:08,399
something that is up and running and you

00:12:06,480 --> 00:12:10,959
have internal

00:12:08,399 --> 00:12:12,000
objectives you need to meet to prove

00:12:10,959 --> 00:12:14,000
that

00:12:12,000 --> 00:12:16,079
you want to create continuity between

00:12:14,000 --> 00:12:19,600
all of your teams i know

00:12:16,079 --> 00:12:22,240
that the culture portion of devops

00:12:19,600 --> 00:12:24,399
that's what it is about is communication

00:12:22,240 --> 00:12:25,360
but more tactically this happens in the

00:12:24,399 --> 00:12:27,760
delivery chain

00:12:25,360 --> 00:12:29,920
and we have to do that by eliminating

00:12:27,760 --> 00:12:31,360
those visibility silos

00:12:29,920 --> 00:12:32,959
and finally you need to protect your

00:12:31,360 --> 00:12:35,120
code and processes

00:12:32,959 --> 00:12:37,519
so that people don't get access to

00:12:35,120 --> 00:12:40,880
secrets that you've stored somewhere

00:12:37,519 --> 00:12:44,079
or get access to polka down code

00:12:40,880 --> 00:12:47,680
and get your intellectual property

00:12:44,079 --> 00:12:49,120
so this breaks down into three primary

00:12:47,680 --> 00:12:51,839
use cases

00:12:49,120 --> 00:12:52,959
the first is monitoring like you monitor

00:12:51,839 --> 00:12:56,240
any application

00:12:52,959 --> 00:12:59,600
you're operating it second is measure

00:12:56,240 --> 00:13:02,639
and third is auditing

00:12:59,600 --> 00:13:04,399
and in your tool chain this is an

00:13:02,639 --> 00:13:07,200
example how it breaks down

00:13:04,399 --> 00:13:08,240
you have the dev secops use case with

00:13:07,200 --> 00:13:11,680
tools like

00:13:08,240 --> 00:13:15,200
x-ray and nexus and hashi vault

00:13:11,680 --> 00:13:17,839
ci cd with spinnaker obviously

00:13:15,200 --> 00:13:19,519
but also artifactory for watching

00:13:17,839 --> 00:13:20,800
artifacts as they move across your

00:13:19,519 --> 00:13:23,839
delivery chain

00:13:20,800 --> 00:13:26,800
maybe testing with selenium

00:13:23,839 --> 00:13:29,120
or catchpoint or whatever testing pipe

00:13:26,800 --> 00:13:30,880
whatever testing tool you're using

00:13:29,120 --> 00:13:32,720
orchestration with the orchestration

00:13:30,880 --> 00:13:34,480
tools and then finally

00:13:32,720 --> 00:13:37,360
this matters as well your incident

00:13:34,480 --> 00:13:37,360
response tools

00:13:38,000 --> 00:13:41,760
now how you do this is fairly

00:13:39,519 --> 00:13:45,519
straightforward i won't call it simple

00:13:41,760 --> 00:13:48,959
but it is fairly straightforward

00:13:45,519 --> 00:13:51,279
how you build in pipeline analytics

00:13:48,959 --> 00:13:53,440
first thing is you gather metrics and

00:13:51,279 --> 00:13:56,720
logs from your tool chain

00:13:53,440 --> 00:13:57,600
most of the tools out there produce logs

00:13:56,720 --> 00:14:00,839
or have

00:13:57,600 --> 00:14:02,880
a way to get to your logs including

00:14:00,839 --> 00:14:05,839
spinnaker

00:14:02,880 --> 00:14:06,480
and you can metricize those logs so some

00:14:05,839 --> 00:14:08,800
tools you

00:14:06,480 --> 00:14:10,560
you just have metrics but if you have

00:14:08,800 --> 00:14:12,880
the logs you can start to build the

00:14:10,560 --> 00:14:16,160
metrics around that as well

00:14:12,880 --> 00:14:19,360
once you start to bring the data in then

00:14:16,160 --> 00:14:22,160
you need to correlate it across

00:14:19,360 --> 00:14:22,720
teams so it's not it may not just be one

00:14:22,160 --> 00:14:25,279
tool

00:14:22,720 --> 00:14:27,600
you know it'd be great if it was but it

00:14:25,279 --> 00:14:29,680
may not just be one tool you are

00:14:27,600 --> 00:14:30,639
correlating that log data and those

00:14:29,680 --> 00:14:33,680
metrics across

00:14:30,639 --> 00:14:34,160
multiple tools and teams now there's a

00:14:33,680 --> 00:14:36,800
big

00:14:34,160 --> 00:14:38,000
assumption baked into this you have to

00:14:36,800 --> 00:14:40,320
communicate

00:14:38,000 --> 00:14:42,079
uh and it's and it's not like you're all

00:14:40,320 --> 00:14:44,399
having stand-ups together

00:14:42,079 --> 00:14:46,800
you have to give access to this we do

00:14:44,399 --> 00:14:47,120
have a lot of platform hoarders out

00:14:46,800 --> 00:14:49,839
there

00:14:47,120 --> 00:14:51,760
people who set up a platform configure

00:14:49,839 --> 00:14:53,680
it the way they want to configure it

00:14:51,760 --> 00:14:55,600
and then do not share it with the rest

00:14:53,680 --> 00:14:57,760
of the organization

00:14:55,600 --> 00:14:59,360
not giving them access to the dashboards

00:14:57,760 --> 00:15:02,320
they need access to

00:14:59,360 --> 00:15:03,760
not creating that cross-team

00:15:02,320 --> 00:15:05,440
communication

00:15:03,760 --> 00:15:07,199
so you can't hoard your dashboards you

00:15:05,440 --> 00:15:09,519
can't hoard your platform

00:15:07,199 --> 00:15:11,199
you need to give access any visibility

00:15:09,519 --> 00:15:12,800
that's there you need to share it

00:15:11,199 --> 00:15:16,000
but it also means that you need to

00:15:12,800 --> 00:15:19,199
educate them on the use cases

00:15:16,000 --> 00:15:22,240
and you need to set up a strategy for

00:15:19,199 --> 00:15:23,839
auditing and compliance and security a

00:15:22,240 --> 00:15:25,279
lot of times this is an afterthought

00:15:23,839 --> 00:15:29,440
like i said earlier most

00:15:25,279 --> 00:15:33,199
conversations you have about devops

00:15:29,440 --> 00:15:37,120
tend to be about application velocity

00:15:33,199 --> 00:15:40,160
how can we release code faster

00:15:37,120 --> 00:15:42,480
the thing is you have to build a system

00:15:40,160 --> 00:15:44,560
to support that velocity because that

00:15:42,480 --> 00:15:46,399
velocity is meaningless if it only lasts

00:15:44,560 --> 00:15:48,800
for a few months

00:15:46,399 --> 00:15:51,040
so that's where you need to start to

00:15:48,800 --> 00:15:54,399
build strategies and think about it

00:15:51,040 --> 00:15:57,440
and that includes not just

00:15:54,399 --> 00:15:58,880
metrics in in creating kpis it includes

00:15:57,440 --> 00:16:00,959
compliance and security

00:15:58,880 --> 00:16:03,040
the things that a lot of us aren't

00:16:00,959 --> 00:16:05,920
aren't necessarily big fans of and

00:16:03,040 --> 00:16:06,880
a lot of times we think inhibit velocity

00:16:05,920 --> 00:16:09,839
but that's not

00:16:06,880 --> 00:16:10,480
always the case now let's look at the

00:16:09,839 --> 00:16:14,079
three

00:16:10,480 --> 00:16:16,079
use cases the first one operate

00:16:14,079 --> 00:16:18,320
again you already do this with your

00:16:16,079 --> 00:16:20,959
applications in production so why not do

00:16:18,320 --> 00:16:22,880
it with your delivery chain as well

00:16:20,959 --> 00:16:25,360
the biggest reason you're you're

00:16:22,880 --> 00:16:28,959
focusing on operate

00:16:25,360 --> 00:16:30,639
is you need to meet your slos so

00:16:28,959 --> 00:16:32,000
you need to make sure that spin occur is

00:16:30,639 --> 00:16:32,800
up and running you need to make sure

00:16:32,000 --> 00:16:35,040
that people have

00:16:32,800 --> 00:16:36,800
access to spinnaker and not getting

00:16:35,040 --> 00:16:39,120
errors you need to make sure

00:16:36,800 --> 00:16:40,160
that your hashi vault is running or

00:16:39,120 --> 00:16:42,160
artifactory

00:16:40,160 --> 00:16:43,680
is running because if they're not you

00:16:42,160 --> 00:16:47,040
can't ship code

00:16:43,680 --> 00:16:49,600
anyways the nice thing about operate

00:16:47,040 --> 00:16:50,880
is we already know how to do this so

00:16:49,600 --> 00:16:54,160
we're focusing on

00:16:50,880 --> 00:16:58,000
infrastructure metrics your compute cpu

00:16:54,160 --> 00:17:00,560
memory disk network io and

00:16:58,000 --> 00:17:02,480
getting a time series of that data and

00:17:00,560 --> 00:17:06,319
understanding what's going on

00:17:02,480 --> 00:17:09,520
the basic up or down red or green

00:17:06,319 --> 00:17:12,880
are my services running and then also

00:17:09,520 --> 00:17:14,240
it's good to look at red metrics rate

00:17:12,880 --> 00:17:16,400
error duration

00:17:14,240 --> 00:17:19,360
they have become kind of a de facto

00:17:16,400 --> 00:17:21,679
standard in the world of apm

00:17:19,360 --> 00:17:23,839
and metrics and it's something that you

00:17:21,679 --> 00:17:27,600
can apply to the tools

00:17:23,839 --> 00:17:29,600
in your software delivery chain as well

00:17:27,600 --> 00:17:31,280
now this is the one that most people get

00:17:29,600 --> 00:17:34,400
excited about

00:17:31,280 --> 00:17:37,840
and i admit so do i

00:17:34,400 --> 00:17:41,120
i think being able to talk about the key

00:17:37,840 --> 00:17:41,679
measures of success and measuring what

00:17:41,120 --> 00:17:44,080
is

00:17:41,679 --> 00:17:45,840
good mean in your software delivery

00:17:44,080 --> 00:17:48,240
chain

00:17:45,840 --> 00:17:50,559
so the first thing is we have these

00:17:48,240 --> 00:17:52,799
great dora metrics that came out in the

00:17:50,559 --> 00:17:55,200
last two years and you can look them up

00:17:52,799 --> 00:17:55,919
so there's some good de facto metrics

00:17:55,200 --> 00:17:59,039
out there

00:17:55,919 --> 00:18:02,799
i will caution you however that not

00:17:59,039 --> 00:18:04,960
all kpis and and metrics are the same

00:18:02,799 --> 00:18:06,480
for every organization you need to think

00:18:04,960 --> 00:18:08,240
about what matters to you

00:18:06,480 --> 00:18:09,679
it's not something that you can just

00:18:08,240 --> 00:18:11,760
slot in

00:18:09,679 --> 00:18:13,039
and say you're done and call it done

00:18:11,760 --> 00:18:14,080
because if you don't know how you're

00:18:13,039 --> 00:18:16,000
going to utilize

00:18:14,080 --> 00:18:17,600
these metrics they're not going to end

00:18:16,000 --> 00:18:20,960
up providing you value

00:18:17,600 --> 00:18:21,760
anyways so there's several ways to look

00:18:20,960 --> 00:18:23,760
at it

00:18:21,760 --> 00:18:24,799
there's also something called the flow

00:18:23,760 --> 00:18:27,039
framework

00:18:24,799 --> 00:18:28,160
and i tend to kind of bundle all of

00:18:27,039 --> 00:18:30,799
these together i

00:18:28,160 --> 00:18:32,799
i like to take the best of what i think

00:18:30,799 --> 00:18:34,559
is the best of all of these strategies

00:18:32,799 --> 00:18:36,559
and put them together

00:18:34,559 --> 00:18:37,679
but the flow framework is something else

00:18:36,559 --> 00:18:40,880
that you can look at

00:18:37,679 --> 00:18:42,320
and it it's its focus in its emphasis is

00:18:40,880 --> 00:18:46,000
finding ways to reduce

00:18:42,320 --> 00:18:48,720
technical debt so the first four

00:18:46,000 --> 00:18:49,919
that i've have there i've grouped into

00:18:48,720 --> 00:18:52,640
flow velocity

00:18:49,919 --> 00:18:53,760
so this is measuring the velocity of

00:18:52,640 --> 00:18:56,080
your delivery chain

00:18:53,760 --> 00:18:57,440
which is obviously very important we all

00:18:56,080 --> 00:19:01,039
want to deliver

00:18:57,440 --> 00:19:03,120
more code faster there's a lot of

00:19:01,039 --> 00:19:05,600
different things you can measure here

00:19:03,120 --> 00:19:06,320
you can look at your testing suite and

00:19:05,600 --> 00:19:09,600
how

00:19:06,320 --> 00:19:10,000
the the velocity of how fast tests are

00:19:09,600 --> 00:19:13,039
being

00:19:10,000 --> 00:19:16,400
run and how often

00:19:13,039 --> 00:19:18,320
tests fail basically you can look simply

00:19:16,400 --> 00:19:21,679
at your velocity how quickly

00:19:18,320 --> 00:19:24,400
does an artifact or code go from plan

00:19:21,679 --> 00:19:25,760
to production being in production i

00:19:24,400 --> 00:19:28,720
really like the say do

00:19:25,760 --> 00:19:30,400
ratio so when you do your product

00:19:28,720 --> 00:19:34,559
planning and this is all a part of

00:19:30,400 --> 00:19:37,280
agile what are your development teams

00:19:34,559 --> 00:19:38,160
committing to delivering and what is

00:19:37,280 --> 00:19:42,000
actually

00:19:38,160 --> 00:19:43,679
delivered now your flow velocity

00:19:42,000 --> 00:19:45,919
and this is going to be true for all of

00:19:43,679 --> 00:19:45,919
these

00:19:46,320 --> 00:19:50,640
you don't want to make this a challenge

00:19:49,120 --> 00:19:52,160
to your developers

00:19:50,640 --> 00:19:54,559
so you don't want to put out these

00:19:52,160 --> 00:19:56,640
metrics and say

00:19:54,559 --> 00:19:58,080
you're not doing well you don't

00:19:56,640 --> 00:20:00,400
leaderboards

00:19:58,080 --> 00:20:02,400
are fine but you don't want to run your

00:20:00,400 --> 00:20:03,760
team based on leaderboards it's a great

00:20:02,400 --> 00:20:07,280
way to burn out your team

00:20:03,760 --> 00:20:10,240
and lose key talent very quickly

00:20:07,280 --> 00:20:11,520
but velocity metrics and flow velocity

00:20:10,240 --> 00:20:13,840
is an important thing for

00:20:11,520 --> 00:20:15,520
everybody to understand the reason i

00:20:13,840 --> 00:20:18,640
call this out is it is

00:20:15,520 --> 00:20:21,280
very important to understand

00:20:18,640 --> 00:20:23,200
the impact of these metrics on the

00:20:21,280 --> 00:20:25,760
individuals

00:20:23,200 --> 00:20:27,600
their career objectives and how they are

00:20:25,760 --> 00:20:30,640
measured

00:20:27,600 --> 00:20:34,320
now we're talking about flow load

00:20:30,640 --> 00:20:35,039
so what this is kind of this is your

00:20:34,320 --> 00:20:37,840
throughput

00:20:35,039 --> 00:20:39,440
right or or your bandwidth or your

00:20:37,840 --> 00:20:42,480
capacity

00:20:39,440 --> 00:20:46,000
what is going through the system

00:20:42,480 --> 00:20:47,760
at volume starts at your backlog

00:20:46,000 --> 00:20:49,120
like how many tickets do you have in

00:20:47,760 --> 00:20:51,919
your backlog

00:20:49,120 --> 00:20:53,440
it also is looking at the number of

00:20:51,919 --> 00:20:56,400
artifacts

00:20:53,440 --> 00:20:58,480
and applications deployed over some

00:20:56,400 --> 00:21:00,640
window of time

00:20:58,480 --> 00:21:02,799
and then finally we get to the ones that

00:21:00,640 --> 00:21:05,520
we don't like but they're really

00:21:02,799 --> 00:21:07,120
important and i had to try hard not to

00:21:05,520 --> 00:21:08,640
use the word failure here because it

00:21:07,120 --> 00:21:10,720
seems so natural

00:21:08,640 --> 00:21:12,559
to talk about failure when you're

00:21:10,720 --> 00:21:14,159
talking about

00:21:12,559 --> 00:21:16,799
things breaking in production but

00:21:14,159 --> 00:21:19,360
failure is not really fair because in a

00:21:16,799 --> 00:21:21,039
true devops environment failure is

00:21:19,360 --> 00:21:22,080
inevitable failure is inevitable no

00:21:21,039 --> 00:21:23,919
matter what but

00:21:22,080 --> 00:21:25,840
you know in waterfall it just happens

00:21:23,919 --> 00:21:27,120
slower than it does in high velocity

00:21:25,840 --> 00:21:29,280
environments

00:21:27,120 --> 00:21:30,480
but the feedback loop is also slower so

00:21:29,280 --> 00:21:33,919
the ability to

00:21:30,480 --> 00:21:37,520
remediate and deal with issues takes

00:21:33,919 --> 00:21:40,559
longer so when you start to measure

00:21:37,520 --> 00:21:43,039
create metrics around technical debt and

00:21:40,559 --> 00:21:45,520
what happens in your incidents you are

00:21:43,039 --> 00:21:47,360
looking at the amount of unplanned work

00:21:45,520 --> 00:21:48,640
because if developers are on call for

00:21:47,360 --> 00:21:50,400
example

00:21:48,640 --> 00:21:51,760
the and they're dealing with incidents

00:21:50,400 --> 00:21:53,440
the amount of time they spend there is

00:21:51,760 --> 00:21:55,440
amount of time they're not building

00:21:53,440 --> 00:21:56,640
new functionality you want to look at

00:21:55,440 --> 00:21:59,280
your cost of downtime

00:21:56,640 --> 00:22:00,400
especially in e-commerce applications

00:21:59,280 --> 00:22:03,360
being down

00:22:00,400 --> 00:22:04,240
how much that costs is really important

00:22:03,360 --> 00:22:06,400
to understand

00:22:04,240 --> 00:22:07,360
and budget for you want to look at your

00:22:06,400 --> 00:22:09,280
mtta

00:22:07,360 --> 00:22:11,280
and your mttr mean time to

00:22:09,280 --> 00:22:14,480
acknowledgement and recovery

00:22:11,280 --> 00:22:17,360
all of these are opportunities

00:22:14,480 --> 00:22:18,320
to improve they're not failures of the

00:22:17,360 --> 00:22:20,960
team

00:22:18,320 --> 00:22:21,840
you have to know them so you know where

00:22:20,960 --> 00:22:24,159
to iterate

00:22:21,840 --> 00:22:27,200
and improve like you would on

00:22:24,159 --> 00:22:29,520
functionality of your application

00:22:27,200 --> 00:22:31,200
when features hit production and they

00:22:29,520 --> 00:22:34,640
don't behave with the user

00:22:31,200 --> 00:22:37,039
exactly as the user is intending

00:22:34,640 --> 00:22:37,840
you usually iterate on it you don't call

00:22:37,039 --> 00:22:40,799
it a failure

00:22:37,840 --> 00:22:42,799
and it's true here in the application of

00:22:40,799 --> 00:22:45,600
applications

00:22:42,799 --> 00:22:46,640
and then finally we talk about the audit

00:22:45,600 --> 00:22:49,840
use case

00:22:46,640 --> 00:22:53,360
so the particular use case that we

00:22:49,840 --> 00:22:56,480
we may not be the most fond of but it is

00:22:53,360 --> 00:22:58,000
absolutely critical to maintaining a

00:22:56,480 --> 00:23:00,400
healthy environment

00:22:58,000 --> 00:23:01,600
now in very large enterprises it's also

00:23:00,400 --> 00:23:04,960
critical

00:23:01,600 --> 00:23:06,720
to communicate

00:23:04,960 --> 00:23:08,240
with those who are responsible for

00:23:06,720 --> 00:23:10,960
compliance and auditing

00:23:08,240 --> 00:23:12,400
this is a way to communicate better and

00:23:10,960 --> 00:23:15,360
have a better relationship

00:23:12,400 --> 00:23:17,200
oftentimes with them because these are

00:23:15,360 --> 00:23:18,159
the things that they are looking at as

00:23:17,200 --> 00:23:20,640
well

00:23:18,159 --> 00:23:22,000
maybe not down to the technical detail

00:23:20,640 --> 00:23:25,440
but they want to know that the

00:23:22,000 --> 00:23:27,760
activity is happening so the purpose of

00:23:25,440 --> 00:23:28,640
the audit use case and usually who it is

00:23:27,760 --> 00:23:31,360
run by

00:23:28,640 --> 00:23:34,400
and i should go back and and say operate

00:23:31,360 --> 00:23:37,280
it tends to be run by devops engineers

00:23:34,400 --> 00:23:38,159
the metrics are usually surfaced and

00:23:37,280 --> 00:23:41,120
consumed by

00:23:38,159 --> 00:23:42,720
everybody it may be set up by sres or

00:23:41,120 --> 00:23:45,279
devops engineers but is

00:23:42,720 --> 00:23:46,240
leveraged by the entire team and

00:23:45,279 --> 00:23:48,240
auditing

00:23:46,240 --> 00:23:50,640
can be the devops engineers it could be

00:23:48,240 --> 00:23:52,720
security professionals as well

00:23:50,640 --> 00:23:53,919
very often is and that's where we have

00:23:52,720 --> 00:23:57,279
this exciting

00:23:53,919 --> 00:24:00,240
opportunity to join teams together

00:23:57,279 --> 00:24:02,480
and also get into the devsecops

00:24:00,240 --> 00:24:06,000
component of development

00:24:02,480 --> 00:24:09,279
so the point of this is stopping bad

00:24:06,000 --> 00:24:11,760
actors from getting access to your

00:24:09,279 --> 00:24:13,440
delivery chain it could be getting

00:24:11,760 --> 00:24:17,120
access to

00:24:13,440 --> 00:24:18,960
data that could open up the opportunity

00:24:17,120 --> 00:24:21,279
for them to attack the organization in

00:24:18,960 --> 00:24:24,159
the application in production

00:24:21,279 --> 00:24:25,520
but also access to your code this is

00:24:24,159 --> 00:24:28,640
intellectual property

00:24:25,520 --> 00:24:30,000
you need to protect that and the

00:24:28,640 --> 00:24:32,559
delivery chain is one

00:24:30,000 --> 00:24:33,200
one way to do that could be maybe an

00:24:32,559 --> 00:24:36,400
employee

00:24:33,200 --> 00:24:37,279
who is leaving on unfavorable terms and

00:24:36,400 --> 00:24:40,320
suddenly

00:24:37,279 --> 00:24:42,799
is trying to pull down a lot of code um

00:24:40,320 --> 00:24:43,840
in in strange behavior that's really

00:24:42,799 --> 00:24:46,000
what you're looking at

00:24:43,840 --> 00:24:47,279
is anomalous behavior behavior of your

00:24:46,000 --> 00:24:50,640
users behavior

00:24:47,279 --> 00:24:52,080
of access that is that is strange for

00:24:50,640 --> 00:24:54,159
example

00:24:52,080 --> 00:24:56,559
people trying to access infrastructure

00:24:54,159 --> 00:24:59,440
with a root policy

00:24:56,559 --> 00:25:00,320
that shouldn't happen very often you

00:24:59,440 --> 00:25:03,200
want to look at

00:25:00,320 --> 00:25:03,919
authentication methods by type and

00:25:03,200 --> 00:25:05,600
method

00:25:03,919 --> 00:25:07,360
you want to look at where requests are

00:25:05,600 --> 00:25:10,240
coming from ip addresses

00:25:07,360 --> 00:25:13,600
if they're internal external if suddenly

00:25:10,240 --> 00:25:13,600
you're getting a whole bunch of

00:25:13,760 --> 00:25:18,480
access to artifactory from

00:25:16,880 --> 00:25:20,640
out of the country that might be

00:25:18,480 --> 00:25:23,279
suspicious you want to look at it by

00:25:20,640 --> 00:25:24,880
path and artifact and you want to look

00:25:23,279 --> 00:25:27,120
at the denial rate

00:25:24,880 --> 00:25:29,679
so these are kind of de factos but again

00:25:27,120 --> 00:25:33,200
there is no one size fits all

00:25:29,679 --> 00:25:34,960
while we can take guidance from

00:25:33,200 --> 00:25:37,039
what other people have done and that's

00:25:34,960 --> 00:25:39,600
really where this is coming from

00:25:37,039 --> 00:25:42,559
we need to decide how we are going to

00:25:39,600 --> 00:25:45,360
leverage the data and

00:25:42,559 --> 00:25:47,200
start from that data and work backwards

00:25:45,360 --> 00:25:48,960
because we need to make sure

00:25:47,200 --> 00:25:50,960
that everything we visualize is

00:25:48,960 --> 00:25:52,960
meaningful and we are going to get some

00:25:50,960 --> 00:25:55,120
value from it

00:25:52,960 --> 00:25:56,480
so we are at the spinnaker summit

00:25:55,120 --> 00:25:59,279
obvious question comes up

00:25:56,480 --> 00:26:00,799
how do you do this with spinnaker and

00:25:59,279 --> 00:26:03,520
yeah there is a great

00:26:00,799 --> 00:26:05,120
opportunity and the nice thing about

00:26:03,520 --> 00:26:07,520
spinnaker is it does

00:26:05,120 --> 00:26:09,279
butter across many aspects of the

00:26:07,520 --> 00:26:11,440
software delivery chain

00:26:09,279 --> 00:26:12,559
spinnaker creates logs you need to

00:26:11,440 --> 00:26:15,440
collect those logs

00:26:12,559 --> 00:26:15,919
and store them into your log management

00:26:15,440 --> 00:26:18,640
tool

00:26:15,919 --> 00:26:21,120
in your monitoring tool next you need to

00:26:18,640 --> 00:26:23,760
work on metricizing that data

00:26:21,120 --> 00:26:25,520
so that we can start to build dashboards

00:26:23,760 --> 00:26:27,440
and visualizations

00:26:25,520 --> 00:26:29,600
and then you want to visualize that data

00:26:27,440 --> 00:26:31,360
based on those three use cases

00:26:29,600 --> 00:26:33,360
and what do i mean by based on those

00:26:31,360 --> 00:26:36,480
three use cases you don't want to

00:26:33,360 --> 00:26:38,000
lump your audit data with your kpis for

00:26:36,480 --> 00:26:40,400
the delivery chain

00:26:38,000 --> 00:26:42,080
you actually want to create usually

00:26:40,400 --> 00:26:44,559
individual dashboards but

00:26:42,080 --> 00:26:46,240
most of the time multiple dashboards in

00:26:44,559 --> 00:26:48,480
each of these use cases

00:26:46,240 --> 00:26:50,159
separated they're separate because it's

00:26:48,480 --> 00:26:51,679
different personas again

00:26:50,159 --> 00:26:54,640
devops engineers are going to be

00:26:51,679 --> 00:26:56,960
creating uh concerned about operate

00:26:54,640 --> 00:26:57,760
your security team and devops engineers

00:26:56,960 --> 00:27:00,240
are going to be

00:26:57,760 --> 00:27:02,159
concerned about compliance and auditing

00:27:00,240 --> 00:27:04,880
maybe sres

00:27:02,159 --> 00:27:08,960
and then developers and everybody is

00:27:04,880 --> 00:27:08,960
going to be concerned about the metrics

00:27:09,039 --> 00:27:14,240
and that's kind of how this breaks down

00:27:11,679 --> 00:27:17,520
into your stakeholders

00:27:14,240 --> 00:27:19,039
so we see that we have some stakeholders

00:27:17,520 --> 00:27:21,600
who butter across the all

00:27:19,039 --> 00:27:24,159
the entire organization and hopefully

00:27:21,600 --> 00:27:27,679
your engineering team

00:27:24,159 --> 00:27:30,320
everybody on the team is interested on

00:27:27,679 --> 00:27:31,200
the success of an application as it

00:27:30,320 --> 00:27:34,080
moves

00:27:31,200 --> 00:27:35,200
from your backlog into production and

00:27:34,080 --> 00:27:36,240
then back again

00:27:35,200 --> 00:27:39,279
because that's how you're going to

00:27:36,240 --> 00:27:42,159
iterate and learn and improve

00:27:39,279 --> 00:27:43,840
but we definitely have people broken up

00:27:42,159 --> 00:27:45,360
into these segments

00:27:43,840 --> 00:27:47,039
now what you're going to notice here is

00:27:45,360 --> 00:27:48,240
the biggest difference from my earlier

00:27:47,039 --> 00:27:50,799
graphic

00:27:48,240 --> 00:27:52,960
is there's no lines separating and

00:27:50,799 --> 00:27:54,320
distinguishing based on the different

00:27:52,960 --> 00:27:56,559
phases of development

00:27:54,320 --> 00:27:58,880
because there shouldn't be we should all

00:27:56,559 --> 00:28:00,880
be able to look at a dashboard

00:27:58,880 --> 00:28:03,279
and have an understanding of what's

00:28:00,880 --> 00:28:04,159
going on so if i'm a security

00:28:03,279 --> 00:28:06,320
professional

00:28:04,159 --> 00:28:07,760
dealing with a vulnerability in

00:28:06,320 --> 00:28:10,559
production

00:28:07,760 --> 00:28:11,919
i don't need to go and ask my developers

00:28:10,559 --> 00:28:14,240
a whole bunch of questions about

00:28:11,919 --> 00:28:16,159
how what they did for vulnerability

00:28:14,240 --> 00:28:19,440
scanning and how it works

00:28:16,159 --> 00:28:20,960
that data is at my fingertips if i'm an

00:28:19,440 --> 00:28:23,360
on-call developer

00:28:20,960 --> 00:28:24,399
and now i'm supporting the application

00:28:23,360 --> 00:28:27,039
in production

00:28:24,399 --> 00:28:27,840
i certainly care about the amount of

00:28:27,039 --> 00:28:30,399
context

00:28:27,840 --> 00:28:32,559
i'm going to get in an incident so i can

00:28:30,399 --> 00:28:35,679
resolve that incident faster

00:28:32,559 --> 00:28:38,720
if i'm an i.t person and my

00:28:35,679 --> 00:28:41,760
scope of responsibility is mostly around

00:28:38,720 --> 00:28:43,520
infrastructure but the the boundaries

00:28:41,760 --> 00:28:46,080
between infrastructure and code

00:28:43,520 --> 00:28:47,440
is blurring especially when we talk

00:28:46,080 --> 00:28:49,520
about microservices

00:28:47,440 --> 00:28:52,159
and serverless and functions in the

00:28:49,520 --> 00:28:54,399
cloud and so as that happens

00:28:52,159 --> 00:28:55,200
i need to understand those things too so

00:28:54,399 --> 00:28:56,640
i know

00:28:55,200 --> 00:28:58,960
is this actually a problem with

00:28:56,640 --> 00:29:00,000
infrastructure or is this an application

00:28:58,960 --> 00:29:03,360
problem

00:29:00,000 --> 00:29:06,640
all of this matters a lot and

00:29:03,360 --> 00:29:10,320
that is why this visibility needs to be

00:29:06,640 --> 00:29:12,080
across team so the title of the session

00:29:10,320 --> 00:29:14,240
was code to cloud visibility and

00:29:12,080 --> 00:29:17,360
hopefully already i've explained

00:29:14,240 --> 00:29:19,840
why pipeline analytics is important

00:29:17,360 --> 00:29:22,000
to creating the breadth and actually

00:29:19,840 --> 00:29:23,679
getting to that goal

00:29:22,000 --> 00:29:25,600
but another component of that is

00:29:23,679 --> 00:29:26,000
observability and that's something that

00:29:25,600 --> 00:29:28,559
most

00:29:26,000 --> 00:29:29,200
organizations have a really good handle

00:29:28,559 --> 00:29:32,080
on

00:29:29,200 --> 00:29:33,679
the two have to correlate together but

00:29:32,080 --> 00:29:35,520
when you do

00:29:33,679 --> 00:29:37,840
you are creating the most high

00:29:35,520 --> 00:29:40,480
performing software delivery chain

00:29:37,840 --> 00:29:42,159
and truly treating your delivery chain

00:29:40,480 --> 00:29:44,559
as the application of

00:29:42,159 --> 00:29:46,960
applications which is critical to

00:29:44,559 --> 00:29:49,679
sustainable development environments

00:29:46,960 --> 00:29:50,880
and being able to grow and learn from

00:29:49,679 --> 00:29:52,559
those environments

00:29:50,880 --> 00:29:54,799
because at the end of the day devops is

00:29:52,559 --> 00:29:56,960
not an end it's a journey

00:29:54,799 --> 00:29:58,159
and the only way to get there is by

00:29:56,960 --> 00:30:01,520
leveraging data

00:29:58,159 --> 00:30:02,240
as the connective tissue so thank you so

00:30:01,520 --> 00:30:04,720
much for

00:30:02,240 --> 00:30:06,000
joining my session i i really appreciate

00:30:04,720 --> 00:30:08,240
you taking the time

00:30:06,000 --> 00:30:09,679
i hope you enjoyed the rest of the

00:30:08,240 --> 00:30:11,679
summit and please

00:30:09,679 --> 00:30:13,120
let's continue the conversation here or

00:30:11,679 --> 00:30:16,159
connect with me

00:30:13,120 --> 00:30:16,880
afterwards on linkedin or whatever suits

00:30:16,159 --> 00:30:19,200
you

00:30:16,880 --> 00:30:20,480
and let me know what do you think are

00:30:19,200 --> 00:30:22,480
you embracing

00:30:20,480 --> 00:30:24,159
uh pipeline analytics are you getting

00:30:22,480 --> 00:30:27,039
stuck with pipeline analytics

00:30:24,159 --> 00:30:28,880
i always love having a broader

00:30:27,039 --> 00:30:35,440
conversation about the things that i

00:30:28,880 --> 00:30:35,440

YouTube URL: https://www.youtube.com/watch?v=Ke2_FNZqpt8


