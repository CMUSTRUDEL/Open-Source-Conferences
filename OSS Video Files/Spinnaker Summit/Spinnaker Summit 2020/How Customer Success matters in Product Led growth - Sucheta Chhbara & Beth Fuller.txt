Title: How Customer Success matters in Product Led growth - Sucheta Chhbara & Beth Fuller
Publication date: 2021-01-12
Playlist: Spinnaker Summit 2020
Description: 
	Sucheta & Beth walk you through the journey of why sharing your pain points, not solutions, with customer success is the best way for you to get the solution you need. Talking to customer success early and often provides the CS team with the signals needed to share themes and customer trends with the Product team. Doing so allows both groups to dive into problem areas, from user experience gaps, feature gaps, or best practice recommendations. The CS team is your advocate, they are the life line for how to influence the product. - We talk to how our partnership works between CS and PM - How your ideas become features - When we partner we create best practice for better guardrails. - How culture vs technology weigh into our decisions.
Captions: 
	00:00:00,530 --> 00:00:03,629
[Music]

00:00:05,200 --> 00:00:09,200
hello hello

00:00:07,440 --> 00:00:11,440
all righty guys so i'm very excited

00:00:09,200 --> 00:00:12,960
today because uh we're talking about

00:00:11,440 --> 00:00:16,400
some real

00:00:12,960 --> 00:00:18,560
challenges that we see around spinaker

00:00:16,400 --> 00:00:19,520
so at armory our you know the whole

00:00:18,560 --> 00:00:22,720
focus is around

00:00:19,520 --> 00:00:25,359
customers we want them to be successful

00:00:22,720 --> 00:00:26,320
we want them to progress in their

00:00:25,359 --> 00:00:27,760
journey

00:00:26,320 --> 00:00:29,760
you know where they are when they start

00:00:27,760 --> 00:00:30,320
with spinnaker how do we measure that

00:00:29,760 --> 00:00:32,559
journey

00:00:30,320 --> 00:00:33,840
how they are progressing are they really

00:00:32,559 --> 00:00:36,079
successful

00:00:33,840 --> 00:00:37,440
or are they struggling with the nuances

00:00:36,079 --> 00:00:41,040
here and there

00:00:37,440 --> 00:00:44,239
so today the talk our talk is focused on

00:00:41,040 --> 00:00:47,280
why customer success is important

00:00:44,239 --> 00:00:50,559
and why it matters in a company like

00:00:47,280 --> 00:00:51,280
us a company like ours where we talk

00:00:50,559 --> 00:00:54,079
about

00:00:51,280 --> 00:00:59,840
product it's a private company and how

00:00:54,079 --> 00:00:59,840
it is leading to the broad growth

00:00:59,920 --> 00:01:05,519
alrighty so here we are beth hello

00:01:03,600 --> 00:01:08,240
everyone i'm super excited to be here

00:01:05,519 --> 00:01:12,000
with sucheta thanks ucheta for having me

00:01:08,240 --> 00:01:13,760
um my name is beth i am a lover of puns

00:01:12,000 --> 00:01:15,920
movie quotes and making the lives of

00:01:13,760 --> 00:01:18,159
devops and security folks better

00:01:15,920 --> 00:01:19,280
in my past life i've worked at hashicorp

00:01:18,159 --> 00:01:21,600
and puppet

00:01:19,280 --> 00:01:24,240
uh both those places i was a product

00:01:21,600 --> 00:01:26,880
manager as well

00:01:24,240 --> 00:01:27,759
all right thank you beth hi guys i'm

00:01:26,880 --> 00:01:30,880
sucheta

00:01:27,759 --> 00:01:31,600
and i actually um i'm working with

00:01:30,880 --> 00:01:34,880
armory

00:01:31,600 --> 00:01:35,920
uh currently uh been here for over 18

00:01:34,880 --> 00:01:38,240
months

00:01:35,920 --> 00:01:40,079
came from cloudera was there at

00:01:38,240 --> 00:01:42,960
informatica so enterprise software

00:01:40,079 --> 00:01:44,240
through through and through um and i'm

00:01:42,960 --> 00:01:46,880
pretty excited to be here

00:01:44,240 --> 00:01:47,360
and pretty excited to present to all of

00:01:46,880 --> 00:01:48,960
you

00:01:47,360 --> 00:01:50,560
and talk about the challenges and

00:01:48,960 --> 00:01:54,240
opportunities that we have

00:01:50,560 --> 00:01:54,720
in the future all right so how do we

00:01:54,240 --> 00:01:56,399
measure

00:01:54,720 --> 00:01:58,000
why are we talking about customers all

00:01:56,399 --> 00:01:59,360
the time and how are we measuring their

00:01:58,000 --> 00:02:01,759
progress right

00:01:59,360 --> 00:02:03,759
so this is how we are actually measuring

00:02:01,759 --> 00:02:07,439
uh customer success

00:02:03,759 --> 00:02:09,280
our customer journey in house at armory

00:02:07,439 --> 00:02:12,160
when a customer signed a deal with us

00:02:09,280 --> 00:02:14,640
you know how are we thinking about

00:02:12,160 --> 00:02:15,200
making that customer successful or that

00:02:14,640 --> 00:02:17,280
customer

00:02:15,200 --> 00:02:19,360
is on their own figuring out ways to

00:02:17,280 --> 00:02:20,560
install spinnaker and on-board apps on

00:02:19,360 --> 00:02:22,160
both teams

00:02:20,560 --> 00:02:24,239
so how are we doing that how are we

00:02:22,160 --> 00:02:27,599
helping that one customer

00:02:24,239 --> 00:02:31,280
to go from commit to recommit

00:02:27,599 --> 00:02:33,360
and how do we do that a non-event

00:02:31,280 --> 00:02:34,879
of that kind will be like any will be

00:02:33,360 --> 00:02:37,440
very success

00:02:34,879 --> 00:02:38,800
criteria for any any company any private

00:02:37,440 --> 00:02:40,319
company where they say

00:02:38,800 --> 00:02:42,080
you know we want to recommit with you

00:02:40,319 --> 00:02:44,720
guys after we have seen a success

00:02:42,080 --> 00:02:45,280
with this product so when they commit to

00:02:44,720 --> 00:02:48,239
us

00:02:45,280 --> 00:02:50,000
we start talking to them we start

00:02:48,239 --> 00:02:51,440
getting engaged with them

00:02:50,000 --> 00:02:53,920
and trying to see what they're trying to

00:02:51,440 --> 00:02:55,519
do and what are the challenges are

00:02:53,920 --> 00:02:57,200
right spinning are the right platform

00:02:55,519 --> 00:02:59,760
for them do they understand what value

00:02:57,200 --> 00:03:01,360
spinnaker is going to bring to the table

00:02:59,760 --> 00:03:04,640
right so we start working with them we

00:03:01,360 --> 00:03:07,440
on board them and then we talk about

00:03:04,640 --> 00:03:09,760
the day zero experience how are they

00:03:07,440 --> 00:03:12,000
going to install spinaker

00:03:09,760 --> 00:03:12,879
is it really easy for them to install

00:03:12,000 --> 00:03:14,560
spin anchor

00:03:12,879 --> 00:03:16,319
or are they going to do gazillion

00:03:14,560 --> 00:03:18,319
circles around

00:03:16,319 --> 00:03:19,440
setting the right permission setting the

00:03:18,319 --> 00:03:22,800
right uh

00:03:19,440 --> 00:03:25,360
vpc load balancers where do we i install

00:03:22,800 --> 00:03:27,440
spinnaker how many communities account

00:03:25,360 --> 00:03:29,519
can i have hundreds of kubernetes

00:03:27,440 --> 00:03:30,879
account can it support it

00:03:29,519 --> 00:03:33,360
you know so all this discussion is

00:03:30,879 --> 00:03:36,000
happening while we are taking them

00:03:33,360 --> 00:03:37,040
in the next phase and while they are

00:03:36,000 --> 00:03:39,519
moving the next phase

00:03:37,040 --> 00:03:41,280
when they have this day one experience

00:03:39,519 --> 00:03:44,799
of onboarding that one

00:03:41,280 --> 00:03:48,480
app in production then their

00:03:44,799 --> 00:03:50,799
experience and then their

00:03:48,480 --> 00:03:50,799
you know

00:03:51,760 --> 00:03:55,760
the way they're thinking about adoption

00:03:53,680 --> 00:03:58,879
is is a different challenge then

00:03:55,760 --> 00:04:00,080
then we start thinking about okay now mr

00:03:58,879 --> 00:04:02,959
customer you are ready to

00:04:00,080 --> 00:04:04,159
onboard more more use cases more

00:04:02,959 --> 00:04:06,640
applications

00:04:04,159 --> 00:04:07,920
more teams so how do we take to a

00:04:06,640 --> 00:04:09,760
different level of journey

00:04:07,920 --> 00:04:11,439
how do we talk about different problems

00:04:09,760 --> 00:04:13,920
right now because

00:04:11,439 --> 00:04:15,280
you should think about scale right now

00:04:13,920 --> 00:04:16,079
you should think about production

00:04:15,280 --> 00:04:18,400
readiness

00:04:16,079 --> 00:04:19,199
you should think about policy security

00:04:18,400 --> 00:04:20,560
compliance

00:04:19,199 --> 00:04:23,680
and all these things before you start

00:04:20,560 --> 00:04:25,440
onboarding more teams because in future

00:04:23,680 --> 00:04:27,120
you want this platform to be stable

00:04:25,440 --> 00:04:28,560
enough for all your

00:04:27,120 --> 00:04:30,720
customers and you don't want to be the

00:04:28,560 --> 00:04:31,360
support person for all the teams on

00:04:30,720 --> 00:04:34,240
boarding

00:04:31,360 --> 00:04:34,880
on this platform and then once they see

00:04:34,240 --> 00:04:37,840
the value

00:04:34,880 --> 00:04:39,600
once they see how spinnaker is the

00:04:37,840 --> 00:04:41,680
platform of choice for them

00:04:39,600 --> 00:04:43,120
recommit happens and then we start the

00:04:41,680 --> 00:04:45,840
same thing again

00:04:43,120 --> 00:04:48,080
bigger use cases different journey

00:04:45,840 --> 00:04:49,759
different teams

00:04:48,080 --> 00:04:51,440
so yes we are thinking about customers

00:04:49,759 --> 00:04:53,600
all the time because that

00:04:51,440 --> 00:04:55,360
is actually defining the product

00:04:53,600 --> 00:04:59,040
milestones or the product journey

00:04:55,360 --> 00:05:00,400
for the next good so this is you know

00:04:59,040 --> 00:05:05,120
every customer

00:05:00,400 --> 00:05:07,440
why to be on the right on the topmost

00:05:05,120 --> 00:05:08,800
part of this quadrant high satisfaction

00:05:07,440 --> 00:05:11,919
and high success

00:05:08,800 --> 00:05:12,240
how do we measure it and is it a tool or

00:05:11,919 --> 00:05:14,639
is

00:05:12,240 --> 00:05:15,840
is there a point system where we can say

00:05:14,639 --> 00:05:18,080
oh this is a

00:05:15,840 --> 00:05:19,440
it's a very successful customer highly

00:05:18,080 --> 00:05:21,280
satisfied

00:05:19,440 --> 00:05:24,080
but how do you define the satisfaction

00:05:21,280 --> 00:05:26,560
and success criteria for every customer

00:05:24,080 --> 00:05:27,600
right maybe one app for them is a

00:05:26,560 --> 00:05:30,080
success

00:05:27,600 --> 00:05:30,880
and they are highly satisfied but are

00:05:30,080 --> 00:05:32,639
they growing

00:05:30,880 --> 00:05:35,199
are they moving further with this

00:05:32,639 --> 00:05:35,199
platform

00:05:35,759 --> 00:05:39,919
and we have beth you know our product

00:05:38,160 --> 00:05:41,600
lead from armory if you can talk more

00:05:39,919 --> 00:05:44,240
about how

00:05:41,600 --> 00:05:46,000
product is thinking about um these

00:05:44,240 --> 00:05:47,280
issues these challenges that customers

00:05:46,000 --> 00:05:50,240
are seeing

00:05:47,280 --> 00:05:52,080
and from the face of it i can i talk to

00:05:50,240 --> 00:05:53,120
customers all the time this is day in

00:05:52,080 --> 00:05:56,800
day out

00:05:53,120 --> 00:05:59,360
and so i see this flywheel actually

00:05:56,800 --> 00:06:00,240
moving with all the feedback or with the

00:05:59,360 --> 00:06:02,000
customer

00:06:00,240 --> 00:06:04,080
the journey where they are in their

00:06:02,000 --> 00:06:06,000
lifetime

00:06:04,080 --> 00:06:07,680
customers are driving this flywheel but

00:06:06,000 --> 00:06:10,319
internally we all know

00:06:07,680 --> 00:06:11,120
and i'm sure all of you here also know

00:06:10,319 --> 00:06:13,120
that

00:06:11,120 --> 00:06:14,160
this is not just customers this is our

00:06:13,120 --> 00:06:16,240
product

00:06:14,160 --> 00:06:18,080
how easy our product is to make sure

00:06:16,240 --> 00:06:20,400
that customers are moving fast

00:06:18,080 --> 00:06:21,199
from one stage to another and adopting

00:06:20,400 --> 00:06:24,400
really fast

00:06:21,199 --> 00:06:24,400
because this is what we want

00:06:25,120 --> 00:06:29,440
but we talked about like fragmented

00:06:28,240 --> 00:06:30,639
solution all the time with all the

00:06:29,440 --> 00:06:33,840
customers we are

00:06:30,639 --> 00:06:36,000
using chen kent we are using data dog

00:06:33,840 --> 00:06:36,800
for monitoring new relic for monitoring

00:06:36,000 --> 00:06:40,160
we have

00:06:36,800 --> 00:06:40,960
oppa open policy agent can we integrate

00:06:40,160 --> 00:06:43,680
with that

00:06:40,960 --> 00:06:44,319
can we talk to uh terraform can we talk

00:06:43,680 --> 00:06:46,400
to

00:06:44,319 --> 00:06:47,759
palumi and you know all these questions

00:06:46,400 --> 00:06:49,840
are like

00:06:47,759 --> 00:06:51,120
this okay one-off question because every

00:06:49,840 --> 00:06:53,280
customer journey is different

00:06:51,120 --> 00:06:54,800
every customer journey is fragmented so

00:06:53,280 --> 00:06:57,520
how do we make sure that we

00:06:54,800 --> 00:06:59,120
actually give them a comprehensive view

00:06:57,520 --> 00:07:00,840
of a platform

00:06:59,120 --> 00:07:02,160
maybe this is one shoe fit all kind of

00:07:00,840 --> 00:07:05,759
situation

00:07:02,160 --> 00:07:07,199
maybe there is some effort that requires

00:07:05,759 --> 00:07:10,319
to support this one

00:07:07,199 --> 00:07:12,000
particular use case but how do we codify

00:07:10,319 --> 00:07:14,160
that experience that each customer is

00:07:12,000 --> 00:07:17,120
talking about and make sure

00:07:14,160 --> 00:07:18,720
that we build a comprehensive solution

00:07:17,120 --> 00:07:23,440
to satisfy

00:07:18,720 --> 00:07:23,440
maybe 90 of our customers not if not 100

00:07:25,440 --> 00:07:28,880
and that's that's where we come in we

00:07:28,479 --> 00:07:31,599
get

00:07:28,880 --> 00:07:33,759
all the experience of every user out

00:07:31,599 --> 00:07:36,639
there of every customer out there

00:07:33,759 --> 00:07:37,440
to our product team so that they can

00:07:36,639 --> 00:07:39,199
simplify

00:07:37,440 --> 00:07:40,639
the experience around building the

00:07:39,199 --> 00:07:43,360
product

00:07:40,639 --> 00:07:45,759
it's a technology is very complex we

00:07:43,360 --> 00:07:48,879
have gazillion other platform

00:07:45,759 --> 00:07:51,680
doing the same thing uh talking about

00:07:48,879 --> 00:07:52,800
cd talking about delivery deployment is

00:07:51,680 --> 00:07:54,800
it same

00:07:52,800 --> 00:07:55,919
or is it different it's delivery save as

00:07:54,800 --> 00:07:59,280
deployment

00:07:55,919 --> 00:08:01,199
i don't know you guide us so these are

00:07:59,280 --> 00:08:03,360
the questions that every customer has

00:08:01,199 --> 00:08:04,319
when they're onboarding the journey with

00:08:03,360 --> 00:08:07,039
spinnaker

00:08:04,319 --> 00:08:09,039
and this is something where product team

00:08:07,039 --> 00:08:11,039
of armory has actually helped us

00:08:09,039 --> 00:08:13,120
define some of that experience in a very

00:08:11,039 --> 00:08:15,759
seamless way

00:08:13,120 --> 00:08:18,080
with us we have right now beth thank you

00:08:15,759 --> 00:08:20,240
so much beth for doing this with me

00:08:18,080 --> 00:08:22,160
uh you know and i don't think so we can

00:08:20,240 --> 00:08:23,360
make any customers successful without

00:08:22,160 --> 00:08:24,840
our product team

00:08:23,360 --> 00:08:27,199
thank you so much for joining the call

00:08:24,840 --> 00:08:29,520
today thank you for having me

00:08:27,199 --> 00:08:31,360
and really it is a team effort that's

00:08:29,520 --> 00:08:33,760
the wonderful thing about

00:08:31,360 --> 00:08:35,120
working at armory and just having such

00:08:33,760 --> 00:08:37,919
amazing partners

00:08:35,120 --> 00:08:40,080
i like our customer success and other

00:08:37,919 --> 00:08:41,519
other teams within the organization

00:08:40,080 --> 00:08:43,279
product doesn't work in a vacuum

00:08:41,519 --> 00:08:45,920
engineers shouldn't work in a vacuum

00:08:43,279 --> 00:08:47,519
as we can see they sometimes end up over

00:08:45,920 --> 00:08:51,120
engineering things so

00:08:47,519 --> 00:08:53,440
thank you so much sure

00:08:51,120 --> 00:08:54,959
so let's talk about challenges and i

00:08:53,440 --> 00:08:56,959
always talk about challenges

00:08:54,959 --> 00:08:58,959
you know beth always corrected me no no

00:08:56,959 --> 00:09:00,959
sachita they're not challenges

00:08:58,959 --> 00:09:02,399
these are the opportunities that we can

00:09:00,959 --> 00:09:05,440
actually

00:09:02,399 --> 00:09:06,640
that is actually opening a way for us to

00:09:05,440 --> 00:09:08,959
think bigger

00:09:06,640 --> 00:09:09,760
to improve our platform and there's so

00:09:08,959 --> 00:09:11,600
much scope

00:09:09,760 --> 00:09:14,560
there's so much opportunity here that we

00:09:11,600 --> 00:09:15,360
can do for each customer for each use

00:09:14,560 --> 00:09:16,959
case

00:09:15,360 --> 00:09:18,800
that this information that we are

00:09:16,959 --> 00:09:22,480
bringing to the table is actually

00:09:18,800 --> 00:09:24,399
very valuable but let me first define

00:09:22,480 --> 00:09:25,519
the themes right where we are seeing a

00:09:24,399 --> 00:09:29,040
lot of opportunities

00:09:25,519 --> 00:09:30,000
or challenges right so i have actually

00:09:29,040 --> 00:09:34,160
identified

00:09:30,000 --> 00:09:36,640
uh five pillars where we are seeing each

00:09:34,160 --> 00:09:36,640
customer

00:09:37,120 --> 00:09:40,959
is talking about they have their

00:09:38,800 --> 00:09:42,560
feedback for each of their speller

00:09:40,959 --> 00:09:44,640
they know what the issues that they are

00:09:42,560 --> 00:09:46,399
seeing and

00:09:44,640 --> 00:09:48,800
how we are converting that as an

00:09:46,399 --> 00:09:52,080
opportunity to improve the product

00:09:48,800 --> 00:09:52,560
so over the course of the next 10 to 15

00:09:52,080 --> 00:09:54,720
minutes

00:09:52,560 --> 00:09:55,680
uh we will talk about each of this

00:09:54,720 --> 00:09:57,279
pillow

00:09:55,680 --> 00:09:59,839
uh starting from insulation

00:09:57,279 --> 00:10:02,399
configuration and then

00:09:59,839 --> 00:10:05,600
the most interesting topic are security

00:10:02,399 --> 00:10:07,040
and compliance right every financial

00:10:05,600 --> 00:10:09,920
customer

00:10:07,040 --> 00:10:10,880
is talking is has uh security and

00:10:09,920 --> 00:10:14,079
compliance

00:10:10,880 --> 00:10:15,600
um on their mind on the day zero so

00:10:14,079 --> 00:10:18,240
this before the installation and

00:10:15,600 --> 00:10:19,920
configuration right it's not even like

00:10:18,240 --> 00:10:21,519
maybe they're negative right they're

00:10:19,920 --> 00:10:24,720
thinking about it uh

00:10:21,519 --> 00:10:28,079
how secure it is how compliant it is

00:10:24,720 --> 00:10:30,399
but let's see how we have identified

00:10:28,079 --> 00:10:33,200
these challenges and how

00:10:30,399 --> 00:10:34,160
uh armory product team is thinking about

00:10:33,200 --> 00:10:37,839
improving this

00:10:34,160 --> 00:10:39,839
in our experience around the product

00:10:37,839 --> 00:10:42,320
all right let's talk about insulation

00:10:39,839 --> 00:10:45,120
configuration and scalability

00:10:42,320 --> 00:10:47,360
i know most of you here are nodding yes

00:10:45,120 --> 00:10:49,600
yes this is the problem that i have

00:10:47,360 --> 00:10:50,959
i really can't install spinnaker in like

00:10:49,600 --> 00:10:53,920
one go

00:10:50,959 --> 00:10:54,320
i have to sit and configure and then go

00:10:53,920 --> 00:10:56,240
back

00:10:54,320 --> 00:10:58,240
and see what have worked what i have not

00:10:56,240 --> 00:11:00,720
worked and if i'm

00:10:58,240 --> 00:11:02,000
extending any microservice changing any

00:11:00,720 --> 00:11:04,800
configuration

00:11:02,000 --> 00:11:06,880
for any microservice where should i go

00:11:04,800 --> 00:11:09,120
where should i change the config

00:11:06,880 --> 00:11:10,959
should i go touch halide again or will

00:11:09,120 --> 00:11:13,279
it automatically detect it

00:11:10,959 --> 00:11:14,000
so how are we thinking about

00:11:13,279 --> 00:11:16,720
installation

00:11:14,000 --> 00:11:17,760
configuration that this is the problem

00:11:16,720 --> 00:11:20,320
that we have seen

00:11:17,760 --> 00:11:20,959
and do you think there's a way forward

00:11:20,320 --> 00:11:24,079
to it

00:11:20,959 --> 00:11:26,560
and how are thinking about that um

00:11:24,079 --> 00:11:28,000
i do and i think there's a you know

00:11:26,560 --> 00:11:31,040
installation configuration

00:11:28,000 --> 00:11:31,440
scalability it's a pretty um it's more

00:11:31,040 --> 00:11:34,800
of an

00:11:31,440 --> 00:11:37,519
art than a science in a lot of ways um

00:11:34,800 --> 00:11:39,360
and this industry is just so complex and

00:11:37,519 --> 00:11:40,399
people are so creative and how they set

00:11:39,360 --> 00:11:43,440
things up

00:11:40,399 --> 00:11:46,720
luckily we have uh some pretty amazing

00:11:43,440 --> 00:11:49,920
teams that are very creative as well

00:11:46,720 --> 00:11:53,279
so we have an operator that we have

00:11:49,920 --> 00:11:55,360
um built out and this is actually to

00:11:53,279 --> 00:11:58,000
address some of the challenges that

00:11:55,360 --> 00:12:01,519
halyard has so halyard does a great job

00:11:58,000 --> 00:12:04,480
in in its day and time um it is

00:12:01,519 --> 00:12:05,120
a little overly complex similar to the

00:12:04,480 --> 00:12:08,399
building

00:12:05,120 --> 00:12:11,760
that we saw in the previous slide

00:12:08,399 --> 00:12:15,040
so we are working with the operator to

00:12:11,760 --> 00:12:17,760
help to address that uh we're using um

00:12:15,040 --> 00:12:18,320
we're thinking about using cleat in

00:12:17,760 --> 00:12:21,680
terms

00:12:18,320 --> 00:12:24,480
of uh moving away from

00:12:21,680 --> 00:12:25,920
halyard and swapping that out that's

00:12:24,480 --> 00:12:29,200
more of a long-term

00:12:25,920 --> 00:12:29,760
thing that we're looking at the other

00:12:29,200 --> 00:12:32,160
thing

00:12:29,760 --> 00:12:32,959
is in terms of the micro services that

00:12:32,160 --> 00:12:35,360
you mentioned

00:12:32,959 --> 00:12:36,480
uh the operator is going to make it a

00:12:35,360 --> 00:12:37,839
lot easier

00:12:36,480 --> 00:12:40,800
whereas how your do you have to

00:12:37,839 --> 00:12:41,920
basically it creates a scenario where if

00:12:40,800 --> 00:12:44,399
you miss something

00:12:41,920 --> 00:12:45,519
uh you're in trouble the operator is

00:12:44,399 --> 00:12:48,880
going to help with

00:12:45,519 --> 00:12:51,279
any microservices that are changed

00:12:48,880 --> 00:12:52,800
that it will also change it'll it'll

00:12:51,279 --> 00:12:56,880
change everything

00:12:52,800 --> 00:12:58,959
so it simplifies that user experience

00:12:56,880 --> 00:13:00,720
the other thing that seems like kind of

00:12:58,959 --> 00:13:02,880
a simple solution

00:13:00,720 --> 00:13:04,399
uh and an obvious one when you mention

00:13:02,880 --> 00:13:07,440
it but is so critical

00:13:04,399 --> 00:13:10,800
is our documentation so it

00:13:07,440 --> 00:13:12,800
it is something that we are building out

00:13:10,800 --> 00:13:15,120
and continuing to build out and improve

00:13:12,800 --> 00:13:17,920
our documentation we've adjusted

00:13:15,120 --> 00:13:19,519
uh the platform in which we deliver our

00:13:17,920 --> 00:13:22,720
documentation

00:13:19,519 --> 00:13:26,079
there the team is working on

00:13:22,720 --> 00:13:27,920
the documentation sig uh with spinnaker

00:13:26,079 --> 00:13:29,279
so that we can start to create a level

00:13:27,920 --> 00:13:32,160
of continuity

00:13:29,279 --> 00:13:32,880
between open source spinnaker and armory

00:13:32,160 --> 00:13:34,880
um

00:13:32,880 --> 00:13:36,399
and so people don't have to always go to

00:13:34,880 --> 00:13:38,079
armory documentation and try to

00:13:36,399 --> 00:13:41,440
backtrack out

00:13:38,079 --> 00:13:42,240
the other one which is uh which is

00:13:41,440 --> 00:13:44,880
pretty cool

00:13:42,240 --> 00:13:45,760
is taking a look at just taking away

00:13:44,880 --> 00:13:48,639
some of those

00:13:45,760 --> 00:13:49,760
pain points by creating a sas offering

00:13:48,639 --> 00:13:53,040
or a pass

00:13:49,760 --> 00:13:56,480
offering so with that we become your

00:13:53,040 --> 00:13:59,839
um your as a service

00:13:56,480 --> 00:14:01,440
for your continuous delivery and for

00:13:59,839 --> 00:14:03,040
some of the other parts and pieces that

00:14:01,440 --> 00:14:04,000
we're talking about so platform as a

00:14:03,040 --> 00:14:08,240
service

00:14:04,000 --> 00:14:10,399
uh type of a scenario with that

00:14:08,240 --> 00:14:12,160
we we made it super simple so you're

00:14:10,399 --> 00:14:14,639
talking about the the one click

00:14:12,160 --> 00:14:15,680
and making everything change that is

00:14:14,639 --> 00:14:17,760
really the goal

00:14:15,680 --> 00:14:20,160
there is that we're going to take on the

00:14:17,760 --> 00:14:23,360
heavy lifting and the responsibility

00:14:20,160 --> 00:14:25,279
of managing and maintaining all of that

00:14:23,360 --> 00:14:27,199
so that our customers don't

00:14:25,279 --> 00:14:29,120
so i'm pretty excited to see where we go

00:14:27,199 --> 00:14:32,800
with that

00:14:29,120 --> 00:14:34,720
this is this is huge it is huge

00:14:32,800 --> 00:14:36,000
i'm actually i'm really excited i think

00:14:34,720 --> 00:14:38,240
it's gonna be

00:14:36,000 --> 00:14:39,839
um really beneficial to a lot of our

00:14:38,240 --> 00:14:41,519
customers and if you just think about

00:14:39,839 --> 00:14:44,079
the pain points

00:14:41,519 --> 00:14:45,440
you know you you see it all the time is

00:14:44,079 --> 00:14:46,880
trying to get people

00:14:45,440 --> 00:14:49,440
getting that installation and

00:14:46,880 --> 00:14:50,320
configuration if we can just remove some

00:14:49,440 --> 00:14:53,519
of those pains

00:14:50,320 --> 00:14:55,600
it's it's magic it is magic

00:14:53,519 --> 00:14:57,760
and how are you guys thinking about or

00:14:55,600 --> 00:15:00,800
how are we thinking about

00:14:57,760 --> 00:15:01,279
the scalability right because every now

00:15:00,800 --> 00:15:04,800
and then

00:15:01,279 --> 00:15:06,320
i get to talk to those big strategic

00:15:04,800 --> 00:15:08,079
customers right

00:15:06,320 --> 00:15:09,519
and they think they're talking about the

00:15:08,079 --> 00:15:11,040
next level of growth

00:15:09,519 --> 00:15:12,560
it's not about hundred or two hundred

00:15:11,040 --> 00:15:15,600
coordinates clusters

00:15:12,560 --> 00:15:18,880
we're talking about 700 900 how

00:15:15,600 --> 00:15:21,680
thousand kubernetes clusters

00:15:18,880 --> 00:15:23,440
what because then the question is can

00:15:21,680 --> 00:15:25,920
cloud driver perform

00:15:23,440 --> 00:15:27,279
we have seen once we increase the number

00:15:25,920 --> 00:15:30,000
of account

00:15:27,279 --> 00:15:30,480
caching takes forever if we add more

00:15:30,000 --> 00:15:33,440
account

00:15:30,480 --> 00:15:35,040
do we need to restart cloud driver right

00:15:33,440 --> 00:15:36,560
so are we thinking about

00:15:35,040 --> 00:15:39,120
you know a way to improve this

00:15:36,560 --> 00:15:42,399
experience or you know ease out this

00:15:39,120 --> 00:15:44,240
boarding for a newer account we are

00:15:42,399 --> 00:15:45,759
and that's where the armory agent comes

00:15:44,240 --> 00:15:48,800
in so we know that

00:15:45,759 --> 00:15:50,639
uh cloud driver using the cube ctl

00:15:48,800 --> 00:15:52,480
can cause a lot of performance issues

00:15:50,639 --> 00:15:55,120
for the large and the extra-large

00:15:52,480 --> 00:15:57,120
installations so having something like

00:15:55,120 --> 00:15:58,079
the armory agent is going to provide

00:15:57,120 --> 00:16:01,519
that connection

00:15:58,079 --> 00:16:02,639
into the cluster using a native cube ctl

00:16:01,519 --> 00:16:05,040
libraries

00:16:02,639 --> 00:16:07,600
so it's going to allow you to embed the

00:16:05,040 --> 00:16:10,079
agent into your remote clusters

00:16:07,600 --> 00:16:12,079
so i think some of those adjustments

00:16:10,079 --> 00:16:12,720
that we're making and having just that

00:16:12,079 --> 00:16:15,680
bridge

00:16:12,720 --> 00:16:18,079
in between is really the goal there is

00:16:15,680 --> 00:16:18,560
to address that scalability and some of

00:16:18,079 --> 00:16:21,279
those

00:16:18,560 --> 00:16:22,240
challenges that our customers are seeing

00:16:21,279 --> 00:16:25,440
no this is

00:16:22,240 --> 00:16:26,720
this is very valuable uh

00:16:25,440 --> 00:16:28,800
and i believe we have made an

00:16:26,720 --> 00:16:30,480
announcement around armory agent also

00:16:28,800 --> 00:16:34,160
the documents are already out

00:16:30,480 --> 00:16:37,759
yep absolutely that is ga

00:16:34,160 --> 00:16:40,800
as of uh perhaps last month

00:16:37,759 --> 00:16:42,800
yeah so it's awesome right and we have

00:16:40,800 --> 00:16:44,480
some early design partners also working

00:16:42,800 --> 00:16:47,040
uh with armory agent

00:16:44,480 --> 00:16:47,920
yep yeah this is this is good how about

00:16:47,040 --> 00:16:51,600
the pcf

00:16:47,920 --> 00:16:53,920
cloud foundry right so um i i don't have

00:16:51,600 --> 00:16:55,040
much experience on pcf cloud foundry but

00:16:53,920 --> 00:16:58,000
a lot of our customers

00:16:55,040 --> 00:17:00,800
do right so how are we thinking about

00:16:58,000 --> 00:17:03,199
the performance over there

00:17:00,800 --> 00:17:04,000
so with that one that's something that

00:17:03,199 --> 00:17:06,799
we took

00:17:04,000 --> 00:17:08,079
we took over pivotals uh we took that

00:17:06,799 --> 00:17:09,679
over from pivotal

00:17:08,079 --> 00:17:11,839
and so one of the things that we're

00:17:09,679 --> 00:17:13,600
doing is we're creating basically a v2

00:17:11,839 --> 00:17:16,720
or a second generation

00:17:13,600 --> 00:17:18,720
uh cloud driver that the goal

00:17:16,720 --> 00:17:19,760
is to solve some of the performance

00:17:18,720 --> 00:17:22,079
issues

00:17:19,760 --> 00:17:23,039
um and to make it a little more feature

00:17:22,079 --> 00:17:24,640
complete so

00:17:23,039 --> 00:17:26,400
we're going to kind of pick up pick up

00:17:24,640 --> 00:17:28,160
where pivotal left off

00:17:26,400 --> 00:17:29,760
in terms of building that out so we're

00:17:28,160 --> 00:17:31,200
working with some of our key design

00:17:29,760 --> 00:17:34,720
partners

00:17:31,200 --> 00:17:35,120
that are using cloud foundry so that we

00:17:34,720 --> 00:17:38,160
can

00:17:35,120 --> 00:17:41,600
and they're they're pretty heavy users

00:17:38,160 --> 00:17:43,679
so scalability performance issues

00:17:41,600 --> 00:17:45,039
all of that are coming into play as

00:17:43,679 --> 00:17:48,240
we're starting to

00:17:45,039 --> 00:17:49,679
build that out i don't have a lot of the

00:17:48,240 --> 00:17:52,400
specifics about

00:17:49,679 --> 00:17:53,919
the i don't have the details around how

00:17:52,400 --> 00:17:56,000
the code is going to work

00:17:53,919 --> 00:17:58,480
but that's definitely top of mind for

00:17:56,000 --> 00:18:01,600
the team that's working on it

00:17:58,480 --> 00:18:04,799
oh this is so helpful beth

00:18:01,600 --> 00:18:07,679
this is this is really helpful

00:18:04,799 --> 00:18:08,960
okay so another pillow that uh actually

00:18:07,679 --> 00:18:12,320
uh

00:18:08,960 --> 00:18:16,559
the theme that we are seeing um is

00:18:12,320 --> 00:18:19,360
you know it is so fragmented this whole

00:18:16,559 --> 00:18:21,120
space is so fragmented everybody is

00:18:19,360 --> 00:18:24,400
using the tool of their choice

00:18:21,120 --> 00:18:26,880
from monitoring should we use new relic

00:18:24,400 --> 00:18:27,600
data dog we use this can finicker

00:18:26,880 --> 00:18:31,360
support it

00:18:27,600 --> 00:18:34,640
can finicker integrate with it we use uh

00:18:31,360 --> 00:18:36,880
um you know and for uh like ci

00:18:34,640 --> 00:18:38,559
also right we use jenkins we use this

00:18:36,880 --> 00:18:40,640
can you guys work with this

00:18:38,559 --> 00:18:41,679
can spinnaker work with this these are

00:18:40,640 --> 00:18:43,360
the questions that we

00:18:41,679 --> 00:18:45,600
get into the discussion every now and

00:18:43,360 --> 00:18:47,120
then right so

00:18:45,600 --> 00:18:49,120
and and we have seen the experience

00:18:47,120 --> 00:18:51,600
before right

00:18:49,120 --> 00:18:52,880
but now like some how some customers are

00:18:51,600 --> 00:18:55,679
extending

00:18:52,880 --> 00:18:57,360
um if they want to have one particular

00:18:55,679 --> 00:18:58,480
custom functionality i have seen some

00:18:57,360 --> 00:19:00,480
customers doing that

00:18:58,480 --> 00:19:03,760
they will identify which micro service

00:19:00,480 --> 00:19:06,720
will be affected by this custom

00:19:03,760 --> 00:19:09,280
demand or custom stage that they want

00:19:06,720 --> 00:19:12,240
then they'll extend those micro services

00:19:09,280 --> 00:19:14,080
change everything and you know it is hit

00:19:12,240 --> 00:19:16,640
or miss kind of situation that

00:19:14,080 --> 00:19:18,960
many iteration uh they have to go

00:19:16,640 --> 00:19:22,320
through it to just develop a simple

00:19:18,960 --> 00:19:25,039
integration with spinaker yeah

00:19:22,320 --> 00:19:27,200
so how are we thinking about improving

00:19:25,039 --> 00:19:30,880
this whole experience that

00:19:27,200 --> 00:19:33,679
the user i just have to think about just

00:19:30,880 --> 00:19:35,600
a few extraction layer and not touch any

00:19:33,679 --> 00:19:38,240
of those micro services

00:19:35,600 --> 00:19:40,480
right and and that's something that we

00:19:38,240 --> 00:19:41,120
have one of our teams the extensibility

00:19:40,480 --> 00:19:43,520
team

00:19:41,120 --> 00:19:44,160
they've been putting an awful lot of

00:19:43,520 --> 00:19:46,240
thought

00:19:44,160 --> 00:19:47,840
um into this in fact i believe they're

00:19:46,240 --> 00:19:50,480
doing uh some

00:19:47,840 --> 00:19:52,960
gardening days type activities during

00:19:50,480 --> 00:19:55,120
spinnaker summit so i i would strongly

00:19:52,960 --> 00:19:56,960
encourage anyone who is interested in

00:19:55,120 --> 00:19:58,400
learning more about that to sit in on

00:19:56,960 --> 00:20:01,440
some of those sessions

00:19:58,400 --> 00:20:04,480
they're just like a top-notch team

00:20:01,440 --> 00:20:06,240
um so what we've done is

00:20:04,480 --> 00:20:09,039
that the team has built out an

00:20:06,240 --> 00:20:11,600
extensibility framework and open source

00:20:09,039 --> 00:20:12,159
so that anyone can start to build out

00:20:11,600 --> 00:20:15,520
their own

00:20:12,159 --> 00:20:17,039
plug-in for some uh for a

00:20:15,520 --> 00:20:18,720
feature functionality that they're

00:20:17,039 --> 00:20:22,159
interested in

00:20:18,720 --> 00:20:24,640
uh palumi is a great example of that

00:20:22,159 --> 00:20:26,640
so palumi actually partnered with us in

00:20:24,640 --> 00:20:28,080
terms of creating a plug-in

00:20:26,640 --> 00:20:30,480
which has helped to build out our

00:20:28,080 --> 00:20:33,039
provisioning management offering

00:20:30,480 --> 00:20:34,640
and so they own it they're the experts

00:20:33,039 --> 00:20:37,520
palumi is the experts

00:20:34,640 --> 00:20:39,280
in polumi we are not and so that means

00:20:37,520 --> 00:20:41,679
that any of our customers that are

00:20:39,280 --> 00:20:43,679
might be using pollumi terraform or

00:20:41,679 --> 00:20:46,159
anything else have the opportunity

00:20:43,679 --> 00:20:47,600
to use that vr plug-in we also have

00:20:46,159 --> 00:20:50,320
discoverability

00:20:47,600 --> 00:20:52,640
nomad and then we have policy engine but

00:20:50,320 --> 00:20:55,360
we also are working on a policy engine

00:20:52,640 --> 00:20:56,080
plugin so that means that anyone in open

00:20:55,360 --> 00:20:58,960
source

00:20:56,080 --> 00:20:59,440
can use any of these discrete plugins

00:20:58,960 --> 00:21:03,120
with the

00:20:59,440 --> 00:21:04,880
open source functionality or with armory

00:21:03,120 --> 00:21:06,159
obviously we would i would prefer that

00:21:04,880 --> 00:21:08,720
they use it with armory

00:21:06,159 --> 00:21:09,600
but they can also use those plug-ins

00:21:08,720 --> 00:21:12,000
individually

00:21:09,600 --> 00:21:13,039
so i think it's a great opportunity for

00:21:12,000 --> 00:21:16,400
folks that

00:21:13,039 --> 00:21:16,799
maybe care about maybe there's someone

00:21:16,400 --> 00:21:18,640
who

00:21:16,799 --> 00:21:20,799
really likes the observability tool of

00:21:18,640 --> 00:21:23,679
honeycomb they can work

00:21:20,799 --> 00:21:25,760
and build that out and have that as

00:21:23,679 --> 00:21:26,799
observability functionality and

00:21:25,760 --> 00:21:28,400
capability

00:21:26,799 --> 00:21:30,240
and they don't need us and they don't

00:21:28,400 --> 00:21:31,840
need to wait for us to

00:21:30,240 --> 00:21:35,360
add it to our roadmap that's something

00:21:31,840 --> 00:21:37,679
that they can just get going with it

00:21:35,360 --> 00:21:38,480
cool yeah so i'm i'm seeing a lot of

00:21:37,679 --> 00:21:41,600
this uh

00:21:38,480 --> 00:21:45,520
ask around observability right

00:21:41,600 --> 00:21:47,919
yep how do you look in

00:21:45,520 --> 00:21:50,000
at the spin hacker about the logs about

00:21:47,919 --> 00:21:51,760
the monitoring stats right

00:21:50,000 --> 00:21:53,440
and i have seen this the different

00:21:51,760 --> 00:21:55,600
customers trying to

00:21:53,440 --> 00:21:56,720
extend these micro services to cater

00:21:55,600 --> 00:21:58,640
their needs

00:21:56,720 --> 00:22:00,240
right will that be part of plugin too

00:21:58,640 --> 00:22:01,840
can that be a plugin

00:22:00,240 --> 00:22:03,360
uh my understanding with the

00:22:01,840 --> 00:22:06,799
discoverability is we

00:22:03,360 --> 00:22:07,520
are we have built out the beginnings of

00:22:06,799 --> 00:22:10,400
that i

00:22:07,520 --> 00:22:11,039
believe the discoverability plug-in is

00:22:10,400 --> 00:22:14,240
based on

00:22:11,039 --> 00:22:15,919
using splunk which is very like

00:22:14,240 --> 00:22:17,440
splunk you can i feel like you could do

00:22:15,919 --> 00:22:20,799
just about anything with this

00:22:17,440 --> 00:22:23,600
functionality so um yep that

00:22:20,799 --> 00:22:25,360
is the that is the goal with the

00:22:23,600 --> 00:22:26,960
extensibility framework that

00:22:25,360 --> 00:22:28,400
if you just need to send something off

00:22:26,960 --> 00:22:30,640
to your own tool set

00:22:28,400 --> 00:22:32,320
you get to do that and that is just part

00:22:30,640 --> 00:22:35,840
of the extensibility

00:22:32,320 --> 00:22:37,600
of the armory platform or

00:22:35,840 --> 00:22:40,320
or you can use it with spinnaker open

00:22:37,600 --> 00:22:42,559
source this is amazing because

00:22:40,320 --> 00:22:44,240
one thing that i'm thinking that with

00:22:42,559 --> 00:22:44,960
how customers are extending the micro

00:22:44,240 --> 00:22:48,400
services

00:22:44,960 --> 00:22:49,919
the upgrade used to fail yes right so

00:22:48,400 --> 00:22:52,080
they have to take care of all these

00:22:49,919 --> 00:22:54,799
things before they start to

00:22:52,080 --> 00:22:56,080
plan their upgrade and then i've seen

00:22:54,799 --> 00:22:58,880
that they'll be on a very

00:22:56,080 --> 00:22:59,200
uh older version of spinnaker because

00:22:58,880 --> 00:23:01,200
they

00:22:59,200 --> 00:23:02,880
are not very comfortable upgrading to

00:23:01,200 --> 00:23:04,960
the latest one and they miss out on all

00:23:02,880 --> 00:23:07,919
the features and enhancement

00:23:04,960 --> 00:23:10,159
absolutely and i i feel like that's a a

00:23:07,919 --> 00:23:10,640
tale as old as time if you will right

00:23:10,159 --> 00:23:13,520
and

00:23:10,640 --> 00:23:15,440
in this area it's really hard you have

00:23:13,520 --> 00:23:16,080
you have everything set up the way that

00:23:15,440 --> 00:23:18,080
you want

00:23:16,080 --> 00:23:20,480
and even though there might be a new

00:23:18,080 --> 00:23:23,039
feature that you're interested in

00:23:20,480 --> 00:23:25,280
you don't want to screw up the fact that

00:23:23,039 --> 00:23:27,280
everything just works right now

00:23:25,280 --> 00:23:29,520
so that is something that we're keeping

00:23:27,280 --> 00:23:31,679
in mind as we're starting to

00:23:29,520 --> 00:23:32,640
build out the extensibility and some of

00:23:31,679 --> 00:23:35,360
the other features

00:23:32,640 --> 00:23:36,240
is people just want things to just work

00:23:35,360 --> 00:23:39,760
every

00:23:36,240 --> 00:23:41,200
release or um yeah every version bump

00:23:39,760 --> 00:23:42,159
you don't want to have to recreate your

00:23:41,200 --> 00:23:43,919
infrastructure

00:23:42,159 --> 00:23:46,080
you don't want to have to then recreate

00:23:43,919 --> 00:23:47,679
your continuous delivery

00:23:46,080 --> 00:23:50,400
pipelines you don't want to have to do

00:23:47,679 --> 00:23:53,279
any of that so

00:23:50,400 --> 00:23:56,000
it's it's uh it's definitely uh it's

00:23:53,279 --> 00:23:59,039
definitely top of mind

00:23:56,000 --> 00:24:01,279
right so how about uh

00:23:59,039 --> 00:24:02,880
when we talking about spinnaker the

00:24:01,279 --> 00:24:05,840
extendability framework

00:24:02,880 --> 00:24:07,279
slash plugins right so there's so much

00:24:05,840 --> 00:24:09,919
fragmentation around

00:24:07,279 --> 00:24:12,159
infrastructure as a code right yeah

00:24:09,919 --> 00:24:15,520
we're using terraform you are using

00:24:12,159 --> 00:24:17,279
um bloomy we are using something else

00:24:15,520 --> 00:24:18,720
right and we get into the discussion

00:24:17,279 --> 00:24:20,799
again like

00:24:18,720 --> 00:24:22,159
what are your guidance on all these

00:24:20,799 --> 00:24:24,720
technologies should we have to

00:24:22,159 --> 00:24:26,080
crash them out or build something new to

00:24:24,720 --> 00:24:28,400
support spinaker

00:24:26,080 --> 00:24:31,120
or can we bring that along while we are

00:24:28,400 --> 00:24:35,120
exploring spinach

00:24:31,120 --> 00:24:38,640
yes and that is um

00:24:35,120 --> 00:24:41,760
that is definitely uh

00:24:38,640 --> 00:24:42,240
something that i i have spent a lot of

00:24:41,760 --> 00:24:44,080
time

00:24:42,240 --> 00:24:46,159
thinking about so just having worked at

00:24:44,080 --> 00:24:47,600
puppet working at hashicorp

00:24:46,159 --> 00:24:49,440
you have all these different

00:24:47,600 --> 00:24:53,039
infrastructures code tools

00:24:49,440 --> 00:24:56,159
and all the disparate tools that end up

00:24:53,039 --> 00:25:00,080
being in play at a different

00:24:56,159 --> 00:25:02,320
at an organization it could be massive

00:25:00,080 --> 00:25:04,000
and then if you think about it you have

00:25:02,320 --> 00:25:04,799
all those tools all those different ways

00:25:04,000 --> 00:25:07,360
of

00:25:04,799 --> 00:25:08,880
provisioning your infrastructure and

00:25:07,360 --> 00:25:12,640
your applications

00:25:08,880 --> 00:25:15,919
but then how do you create one standard

00:25:12,640 --> 00:25:19,279
in terms of delivering um

00:25:15,919 --> 00:25:22,000
delivering your your code safely

00:25:19,279 --> 00:25:22,400
so one of the things that we are looking

00:25:22,000 --> 00:25:25,520
at

00:25:22,400 --> 00:25:27,520
is creating that

00:25:25,520 --> 00:25:29,360
with our provisioning management is

00:25:27,520 --> 00:25:30,880
automating and templatizing that

00:25:29,360 --> 00:25:33,600
infrastructure

00:25:30,880 --> 00:25:34,320
and helping people to build out the

00:25:33,600 --> 00:25:36,400
policies

00:25:34,320 --> 00:25:38,080
into the infrastructure including the

00:25:36,400 --> 00:25:38,559
concept of lease privilege which is

00:25:38,080 --> 00:25:41,039
always

00:25:38,559 --> 00:25:42,480
important and then making sure that you

00:25:41,039 --> 00:25:45,760
can save and maintain

00:25:42,480 --> 00:25:48,480
the information um and

00:25:45,760 --> 00:25:50,480
that is all well and good that you have

00:25:48,480 --> 00:25:52,880
the ability to templatize your

00:25:50,480 --> 00:25:54,320
infrastructure and automate everything

00:25:52,880 --> 00:25:56,240
um

00:25:54,320 --> 00:25:57,440
but the other thing that we're looking

00:25:56,240 --> 00:26:00,159
at and why i like

00:25:57,440 --> 00:26:01,120
like to call it provisioning management

00:26:00,159 --> 00:26:03,440
is because

00:26:01,120 --> 00:26:04,960
it gives us what we're doing is we have

00:26:03,440 --> 00:26:06,320
the ability that if you're using

00:26:04,960 --> 00:26:08,159
terraform

00:26:06,320 --> 00:26:10,000
if you're using terraform open source

00:26:08,159 --> 00:26:10,880
you're using terraform enterprise or

00:26:10,000 --> 00:26:13,279
cloud

00:26:10,880 --> 00:26:13,919
or you're using right now paloomi you

00:26:13,279 --> 00:26:16,400
can

00:26:13,919 --> 00:26:17,760
continue to use all of those across your

00:26:16,400 --> 00:26:20,240
different teams

00:26:17,760 --> 00:26:21,520
without adjusting and then you can just

00:26:20,240 --> 00:26:24,559
use that

00:26:21,520 --> 00:26:27,919
to provision your

00:26:24,559 --> 00:26:31,120
s3 bucket kubernetes and

00:26:27,919 --> 00:26:34,000
everything else and it just ties

00:26:31,120 --> 00:26:34,960
into it's just going to work with

00:26:34,000 --> 00:26:38,159
spinnaker

00:26:34,960 --> 00:26:40,400
so you don't have to change that logic

00:26:38,159 --> 00:26:41,279
we've adjusted our logic to work with

00:26:40,400 --> 00:26:44,480
those

00:26:41,279 --> 00:26:48,159
different tooling which i think is

00:26:44,480 --> 00:26:49,600
incredibly powerful for organizations

00:26:48,159 --> 00:26:52,000
because you can do that

00:26:49,600 --> 00:26:53,600
one and done or create like a golden

00:26:52,000 --> 00:26:56,960
pipeline

00:26:53,600 --> 00:26:58,640
and just like feel really good about the

00:26:56,960 --> 00:27:00,320
fact that all those guard rails that

00:26:58,640 --> 00:27:02,720
you've set in place it doesn't matter

00:27:00,320 --> 00:27:04,799
how they're provisioning it

00:27:02,720 --> 00:27:07,520
and i think the extensibility if we tie

00:27:04,799 --> 00:27:11,120
back to the extensibility framework

00:27:07,520 --> 00:27:14,480
the amazing thing there is

00:27:11,120 --> 00:27:17,600
that if you have a puppet chef ansible

00:27:14,480 --> 00:27:19,200
you have your own homegrown system

00:27:17,600 --> 00:27:21,679
then you have the ability to create a

00:27:19,200 --> 00:27:24,799
plug-in with the extensibility

00:27:21,679 --> 00:27:28,080
platform the extensibility offering

00:27:24,799 --> 00:27:29,919
and you can incorporate that as well so

00:27:28,080 --> 00:27:32,559
then you can continue to expand

00:27:29,919 --> 00:27:34,000
out and will continue to expand out as

00:27:32,559 --> 00:27:36,480
well it's not that you have to do

00:27:34,000 --> 00:27:38,320
it all but because we have that

00:27:36,480 --> 00:27:39,120
framework if you have something that is

00:27:38,320 --> 00:27:42,159
custom to you

00:27:39,120 --> 00:27:46,399
you get to build that and

00:27:42,159 --> 00:27:49,760
have that common uh platform feel

00:27:46,399 --> 00:27:51,279
which got it now this is this is really

00:27:49,760 --> 00:27:52,559
good because then

00:27:51,279 --> 00:27:54,320
you're not running in like different

00:27:52,559 --> 00:27:56,960
places and trying to make sure that

00:27:54,320 --> 00:27:57,840
what i need to do now then do this you

00:27:56,960 --> 00:28:00,799
know it's like

00:27:57,840 --> 00:28:02,480
you are tying that infrastructure you're

00:28:00,799 --> 00:28:04,240
trying the plugins you're tying

00:28:02,480 --> 00:28:07,440
everything in this one platform

00:28:04,240 --> 00:28:09,360
yes right and how are you how are

00:28:07,440 --> 00:28:11,200
you thinking about improving the

00:28:09,360 --> 00:28:13,200
developer experience right

00:28:11,200 --> 00:28:15,120
because right now you have to get your

00:28:13,200 --> 00:28:16,880
smartest engineers believe me to work

00:28:15,120 --> 00:28:19,360
with finnecker

00:28:16,880 --> 00:28:20,880
right so many configuration required to

00:28:19,360 --> 00:28:23,360
set this one stage

00:28:20,880 --> 00:28:24,240
to create that first pipeline and to

00:28:23,360 --> 00:28:27,440
educate them

00:28:24,240 --> 00:28:30,720
why you need so many config

00:28:27,440 --> 00:28:34,000
for this one maybe deploy state or maybe

00:28:30,720 --> 00:28:35,679
uh run your jenkins web book or anything

00:28:34,000 --> 00:28:38,080
that you want to do

00:28:35,679 --> 00:28:39,440
with with spinnaker right now the ui is

00:28:38,080 --> 00:28:42,960
not very

00:28:39,440 --> 00:28:43,679
uh what do you call the user experience

00:28:42,960 --> 00:28:46,559
around ui

00:28:43,679 --> 00:28:47,200
is i think it could use it can be

00:28:46,559 --> 00:28:50,240
improved

00:28:47,200 --> 00:28:52,720
it can be improved right so yes

00:28:50,240 --> 00:28:53,919
right how and and there are so many uh

00:28:52,720 --> 00:28:56,159
things around that how

00:28:53,919 --> 00:28:58,159
do we reuse all these the effort that

00:28:56,159 --> 00:29:01,200
we're putting in right now right

00:28:58,159 --> 00:29:02,799
can we take this pipeline template can

00:29:01,200 --> 00:29:05,760
we define a master template out of

00:29:02,799 --> 00:29:06,480
it can we make it nested can we just

00:29:05,760 --> 00:29:08,960
have

00:29:06,480 --> 00:29:09,679
template for each stages can we reuse

00:29:08,960 --> 00:29:11,600
this

00:29:09,679 --> 00:29:13,600
so how are we thinking about improving

00:29:11,600 --> 00:29:16,399
that user experience for our customers

00:29:13,600 --> 00:29:18,240
and for our community also right right

00:29:16,399 --> 00:29:20,720
and so i think the answer is yes

00:29:18,240 --> 00:29:21,600
we are thinking about all those amazing

00:29:20,720 --> 00:29:23,520
things that you've

00:29:21,600 --> 00:29:24,720
uh talked about and in fact we have a

00:29:23,520 --> 00:29:28,240
lot of those

00:29:24,720 --> 00:29:30,000
so we are working on enabling

00:29:28,240 --> 00:29:32,320
what would be a traditional get ops

00:29:30,000 --> 00:29:34,480
workflow for your pipeline so you can do

00:29:32,320 --> 00:29:35,440
your version control you can do code

00:29:34,480 --> 00:29:38,799
reviews

00:29:35,440 --> 00:29:42,399
you can update uh automatically and

00:29:38,799 --> 00:29:46,320
update automatically applied uh

00:29:42,399 --> 00:29:47,520
when you merge we have the ability to

00:29:46,320 --> 00:29:49,760
templatize things

00:29:47,520 --> 00:29:52,080
so that it's easier for new developers

00:29:49,760 --> 00:29:54,240
that are onboarding

00:29:52,080 --> 00:29:55,919
it's always as you said it's sort of

00:29:54,240 --> 00:29:59,039
like this amazing

00:29:55,919 --> 00:29:59,679
exercise and mental gymnastics to create

00:29:59,039 --> 00:30:01,919
a

00:29:59,679 --> 00:30:03,200
pipeline as code so why would you have

00:30:01,919 --> 00:30:05,039
to recreate it

00:30:03,200 --> 00:30:06,320
if you have something that works for you

00:30:05,039 --> 00:30:08,159
we want to make sure that you can

00:30:06,320 --> 00:30:12,240
templatize that

00:30:08,159 --> 00:30:15,120
and then um so the ui around it

00:30:12,240 --> 00:30:17,360
my my this is my stuff because first i

00:30:15,120 --> 00:30:20,159
just you know have to see

00:30:17,360 --> 00:30:22,399
how easy it is for me to use that thing

00:30:20,159 --> 00:30:22,880
i was like okay is it a ui to edit that

00:30:22,399 --> 00:30:24,640
code

00:30:22,880 --> 00:30:26,960
is this something that i would do it on

00:30:24,640 --> 00:30:27,919
like with some fancy editor that i can

00:30:26,960 --> 00:30:31,279
use

00:30:27,919 --> 00:30:35,120
so they are working on a ui we have

00:30:31,279 --> 00:30:37,440
an amazing ux designer right now um

00:30:35,120 --> 00:30:38,240
and he's working with the team to come

00:30:37,440 --> 00:30:40,559
up with just

00:30:38,240 --> 00:30:41,679
overall in general that's where you can

00:30:40,559 --> 00:30:43,600
see some of

00:30:41,679 --> 00:30:45,200
like these i like to think of them as

00:30:43,600 --> 00:30:48,320
grace notes in terms of

00:30:45,200 --> 00:30:50,080
usability throughout this entire thread

00:30:48,320 --> 00:30:52,880
and a lot of that comes from having

00:30:50,080 --> 00:30:54,720
someone who's an expert in their sole

00:30:52,880 --> 00:30:56,480
job is to think about that user

00:30:54,720 --> 00:31:00,000
experience and

00:30:56,480 --> 00:31:02,559
so having that ui and developing the ui

00:31:00,000 --> 00:31:03,039
so that it does flow in a more natural

00:31:02,559 --> 00:31:04,799
way

00:31:03,039 --> 00:31:07,360
instead of creating a lot of context

00:31:04,799 --> 00:31:08,960
switching is one of the things that we

00:31:07,360 --> 00:31:11,200
are in fact working on

00:31:08,960 --> 00:31:12,480
um and i think the important thing with

00:31:11,200 --> 00:31:16,159
that is

00:31:12,480 --> 00:31:19,279
you know a ui can be as it can be

00:31:16,159 --> 00:31:21,279
just as distracting as the other

00:31:19,279 --> 00:31:23,440
means of kind of context switching that

00:31:21,279 --> 00:31:24,880
you have and so we want to make sure

00:31:23,440 --> 00:31:26,960
that as we're building this

00:31:24,880 --> 00:31:28,320
out and as we've we've added it i

00:31:26,960 --> 00:31:31,360
believe uh

00:31:28,320 --> 00:31:34,559
fernando did um

00:31:31,360 --> 00:31:37,600
he did a video for the our

00:31:34,559 --> 00:31:40,000
last uh release of that version

00:31:37,600 --> 00:31:41,760
of the ui so i think you know we're

00:31:40,000 --> 00:31:44,159
going to continue to iterate on it

00:31:41,760 --> 00:31:46,159
and we have some of the beginnings there

00:31:44,159 --> 00:31:46,640
and we just want to make sure that it

00:31:46,159 --> 00:31:48,960
really

00:31:46,640 --> 00:31:50,399
does address and make things does

00:31:48,960 --> 00:31:52,559
address the user needs

00:31:50,399 --> 00:31:54,640
and makes it easier so it is closer to

00:31:52,559 --> 00:31:57,039
that like one click and done

00:31:54,640 --> 00:31:59,120
type of a thing which it'll never just

00:31:57,039 --> 00:32:00,880
be one click but we're gonna reduce the

00:31:59,120 --> 00:32:04,240
number of clicks for sure

00:32:00,880 --> 00:32:07,279
no that ide integration right and

00:32:04,240 --> 00:32:09,600
hence while you are typing your template

00:32:07,279 --> 00:32:10,399
showing the hints and i think it will be

00:32:09,600 --> 00:32:12,480
very useful

00:32:10,399 --> 00:32:14,320
and i would love to see how this

00:32:12,480 --> 00:32:15,519
thinking is actually getting transformed

00:32:14,320 --> 00:32:18,320
into the code

00:32:15,519 --> 00:32:19,120
yes right and i'm seeing one more uh

00:32:18,320 --> 00:32:21,840
theme around

00:32:19,120 --> 00:32:23,919
all of our product areas okay to make it

00:32:21,840 --> 00:32:25,679
more kubernetes native right

00:32:23,919 --> 00:32:27,679
yeah i see another offering here as

00:32:25,679 --> 00:32:31,039
packard pipeline as

00:32:27,679 --> 00:32:33,679
crd yep right uh

00:32:31,039 --> 00:32:34,240
so uh these are like different offerings

00:32:33,679 --> 00:32:36,720
right

00:32:34,240 --> 00:32:37,519
these three are like different ways of

00:32:36,720 --> 00:32:40,720
codifying

00:32:37,519 --> 00:32:41,679
or uh defining absolutely yes they are

00:32:40,720 --> 00:32:45,279
so we have

00:32:41,679 --> 00:32:48,480
um people who've been using armory know

00:32:45,279 --> 00:32:51,039
it as dinghy uh we have it uh it dinghy

00:32:48,480 --> 00:32:53,200
is essentially the pipelines as code

00:32:51,039 --> 00:32:55,120
then you have uh the packard which is

00:32:53,200 --> 00:32:56,159
kubernetes native so people who are

00:32:55,120 --> 00:32:58,480
using kubernetes

00:32:56,159 --> 00:33:00,000
are used to crds so we wanted to make it

00:32:58,480 --> 00:33:02,720
so that it's a very

00:33:00,000 --> 00:33:03,840
it again reduces that context switching

00:33:02,720 --> 00:33:05,600
that people have to

00:33:03,840 --> 00:33:06,960
go through and as they're using

00:33:05,600 --> 00:33:08,720
disparate tools

00:33:06,960 --> 00:33:10,559
so we wanted to create a cohesive

00:33:08,720 --> 00:33:12,880
experience and then we have the

00:33:10,559 --> 00:33:14,559
manage pipeline templates and so the

00:33:12,880 --> 00:33:16,880
great thing with that is you mentioned

00:33:14,559 --> 00:33:18,960
uh nesting and so that's where you're

00:33:16,880 --> 00:33:22,399
going to see some of that

00:33:18,960 --> 00:33:25,279
so each of these adds a number

00:33:22,399 --> 00:33:27,200
uh adds additional features as well as

00:33:25,279 --> 00:33:29,279
like the templatization

00:33:27,200 --> 00:33:30,240
um which is a very difficult word to say

00:33:29,279 --> 00:33:33,600
sometimes

00:33:30,240 --> 00:33:36,320
uh so it provides all of that for our

00:33:33,600 --> 00:33:38,000
end users which means that new

00:33:36,320 --> 00:33:40,080
developers that are coming on

00:33:38,000 --> 00:33:42,080
don't have to reinvent the wheel that

00:33:40,080 --> 00:33:43,039
you have something that is a little more

00:33:42,080 --> 00:33:44,960
standardized

00:33:43,039 --> 00:33:47,279
it is something that you can come up

00:33:44,960 --> 00:33:50,880
with like that golden pipeline

00:33:47,279 --> 00:33:53,679
and all of these different tools allow

00:33:50,880 --> 00:33:55,519
depending on how your organization works

00:33:53,679 --> 00:33:57,200
makes it a little bit easier for you to

00:33:55,519 --> 00:33:59,840
do so

00:33:57,200 --> 00:34:02,399
this is this is this is very valuable

00:33:59,840 --> 00:34:06,240
thank you so much

00:34:02,399 --> 00:34:08,639
ah this next topic is

00:34:06,240 --> 00:34:11,440
is on the top of the head of like every

00:34:08,639 --> 00:34:14,399
customer that we talk to these days

00:34:11,440 --> 00:34:16,079
how are you thinking about security

00:34:14,399 --> 00:34:19,119
where are the vulnerabilities who are

00:34:16,079 --> 00:34:21,119
fixing it who is responsible for it

00:34:19,119 --> 00:34:22,480
right yeah and especially the financial

00:34:21,119 --> 00:34:25,359
customers how do we

00:34:22,480 --> 00:34:26,720
codify the policies right yep how do we

00:34:25,359 --> 00:34:29,440
make sure that they're part of

00:34:26,720 --> 00:34:30,240
whatever we're running in pre-prod those

00:34:29,440 --> 00:34:32,240
policies

00:34:30,240 --> 00:34:34,000
are catered to the production

00:34:32,240 --> 00:34:35,679
environment also

00:34:34,000 --> 00:34:37,760
how are we thinking about you know and

00:34:35,679 --> 00:34:40,159
i've i've seen some bizarre feedback

00:34:37,760 --> 00:34:42,240
and you know very direct feedback around

00:34:40,159 --> 00:34:44,480
that fiat is so difficult to work with

00:34:42,240 --> 00:34:46,399
you define have to define our back you

00:34:44,480 --> 00:34:49,040
have to do multiple different things

00:34:46,399 --> 00:34:50,079
in multiple areas go to halyard define

00:34:49,040 --> 00:34:52,720
your accounts there

00:34:50,079 --> 00:34:53,760
then define the you know your our back

00:34:52,720 --> 00:34:56,320
uh

00:34:53,760 --> 00:34:58,000
the permissions and all so it's the

00:34:56,320 --> 00:34:59,440
whole experience around is a kind of

00:34:58,000 --> 00:35:01,200
nightmare right now and it's very

00:34:59,440 --> 00:35:05,520
fragmented

00:35:01,200 --> 00:35:08,079
it it is and you know uh

00:35:05,520 --> 00:35:09,760
fix it again travis travis did an

00:35:08,079 --> 00:35:13,680
amazing job given

00:35:09,760 --> 00:35:16,880
uh the constraints that he had to

00:35:13,680 --> 00:35:18,880
to build fiat um but as we

00:35:16,880 --> 00:35:20,560
going back to the whole building and

00:35:18,880 --> 00:35:22,560
over engineering things

00:35:20,560 --> 00:35:24,720
i think the great thing about having

00:35:22,560 --> 00:35:26,720
customer success and product

00:35:24,720 --> 00:35:28,960
kind of coming at it from that user

00:35:26,720 --> 00:35:30,720
experience instead of just a straight

00:35:28,960 --> 00:35:32,320
engineering experience

00:35:30,720 --> 00:35:34,800
has allowed us to come up with some

00:35:32,320 --> 00:35:37,839
features like creating the

00:35:34,800 --> 00:35:42,160
terraform named profiles so that's

00:35:37,839 --> 00:35:45,920
an improvement in terms of permissioning

00:35:42,160 --> 00:35:48,640
as we worked on the cloud foundry um

00:35:45,920 --> 00:35:50,320
uh cloud driver we knew that the

00:35:48,640 --> 00:35:53,200
important thing with the cloud driver

00:35:50,320 --> 00:35:55,119
is to work with fiat as it is today so

00:35:53,200 --> 00:35:56,720
that it doesn't bypass things because

00:35:55,119 --> 00:35:57,280
until we build out that connective

00:35:56,720 --> 00:36:00,240
tissue

00:35:57,280 --> 00:36:01,040
it needs to work with it so as we built

00:36:00,240 --> 00:36:03,760
out cloud

00:36:01,040 --> 00:36:05,440
that we ensured that fiat was a part of

00:36:03,760 --> 00:36:08,400
it

00:36:05,440 --> 00:36:09,599
so i think there's um just a lot of

00:36:08,400 --> 00:36:12,320
parts and pieces

00:36:09,599 --> 00:36:13,280
that are associated with it i think the

00:36:12,320 --> 00:36:15,520
other

00:36:13,280 --> 00:36:16,560
aspect is policy engine helping with

00:36:15,520 --> 00:36:20,160
some of this our

00:36:16,560 --> 00:36:21,760
back piece so policy engine

00:36:20,160 --> 00:36:23,520
on the face of it you're probably like

00:36:21,760 --> 00:36:25,760
policies what does that have

00:36:23,520 --> 00:36:27,920
anything to do with permissions but it

00:36:25,760 --> 00:36:28,960
has everything to do with permissions

00:36:27,920 --> 00:36:32,079
because if you think

00:36:28,960 --> 00:36:34,400
a lot of if you think about um

00:36:32,079 --> 00:36:35,520
something like i i believe it's like pci

00:36:34,400 --> 00:36:37,359
dss

00:36:35,520 --> 00:36:39,119
uh you need to ensure that there's a

00:36:37,359 --> 00:36:41,760
second person that takes a look

00:36:39,119 --> 00:36:42,560
at your code before you deploy it

00:36:41,760 --> 00:36:44,560
there's

00:36:42,560 --> 00:36:47,119
other rules and regulations where the

00:36:44,560 --> 00:36:49,119
person who deploys the code can't be the

00:36:47,119 --> 00:36:51,200
uh the person who kicks off the pipeline

00:36:49,119 --> 00:36:54,320
can't be the person who approves it

00:36:51,200 --> 00:36:57,280
um which is i think the pci dss but

00:36:54,320 --> 00:36:58,880
there's um you you might have security

00:36:57,280 --> 00:37:00,400
scans that you need to do you have

00:36:58,880 --> 00:37:02,560
other things that are your best

00:37:00,400 --> 00:37:05,839
practices and just ensuring

00:37:02,560 --> 00:37:08,000
that bob who might be a junior dev

00:37:05,839 --> 00:37:09,760
doesn't have access to production and

00:37:08,000 --> 00:37:12,960
can take everything down

00:37:09,760 --> 00:37:15,280
all of those are permissions or policies

00:37:12,960 --> 00:37:16,400
so policies become part of your

00:37:15,280 --> 00:37:19,520
permissioning

00:37:16,400 --> 00:37:22,400
and we use open policy agent as

00:37:19,520 --> 00:37:23,920
the underpinning for our policy engine

00:37:22,400 --> 00:37:24,560
so that's one of the things that we're

00:37:23,920 --> 00:37:27,920
looking at

00:37:24,560 --> 00:37:31,680
continuing to build out um for

00:37:27,920 --> 00:37:33,599
our back with our uh policy engine

00:37:31,680 --> 00:37:35,119
and then you mentioned vulnerabilities

00:37:33,599 --> 00:37:38,320
my favorite

00:37:35,119 --> 00:37:42,160
so i did uh i did a talk on this

00:37:38,320 --> 00:37:44,880
that uh was uh go

00:37:42,160 --> 00:37:47,040
was two days ago well more than two days

00:37:44,880 --> 00:37:50,240
ago based on when i recorded it

00:37:47,040 --> 00:37:53,520
um and the important thing

00:37:50,240 --> 00:37:57,200
about uh vulnerabilities and

00:37:53,520 --> 00:38:00,480
the open source um open source projects

00:37:57,200 --> 00:38:03,839
is you need to ensure

00:38:00,480 --> 00:38:06,160
that uh you are handling those cves

00:38:03,839 --> 00:38:09,119
you're handling those vulnerabilities

00:38:06,160 --> 00:38:10,480
so we knew as we were taking a look at

00:38:09,119 --> 00:38:12,079
things and we're starting to get

00:38:10,480 --> 00:38:15,119
questions from

00:38:12,079 --> 00:38:19,440
some of our uh from financial services

00:38:15,119 --> 00:38:22,320
um people who are insurance uh

00:38:19,440 --> 00:38:23,280
that people who are in retail and other

00:38:22,320 --> 00:38:26,240
agencies

00:38:23,280 --> 00:38:28,480
that are highly regulated they care

00:38:26,240 --> 00:38:30,000
about vulnerability so we need to care

00:38:28,480 --> 00:38:31,920
about vulnerabilities

00:38:30,000 --> 00:38:33,119
and that means down to the open source

00:38:31,920 --> 00:38:36,240
project

00:38:33,119 --> 00:38:38,480
so we have uh via the security sig

00:38:36,240 --> 00:38:39,760
we have built out a vulnerability

00:38:38,480 --> 00:38:42,400
management process

00:38:39,760 --> 00:38:44,720
and the security sig owns that so i

00:38:42,400 --> 00:38:47,839
would say anyone who hasn't been to

00:38:44,720 --> 00:38:51,200
any of the other talks about this um

00:38:47,839 --> 00:38:55,280
know that the security sig we welcome

00:38:51,200 --> 00:38:58,400
you to come and participate in that um

00:38:55,280 --> 00:39:00,960
the other thing that we've done is

00:38:58,400 --> 00:39:02,240
not only do we have down at like the

00:39:00,960 --> 00:39:05,119
root or the core

00:39:02,240 --> 00:39:07,359
project for spinnaker open source we

00:39:05,119 --> 00:39:08,240
also have a vulnerability management

00:39:07,359 --> 00:39:11,440
process

00:39:08,240 --> 00:39:13,920
for armory so that way we are

00:39:11,440 --> 00:39:15,599
doubling down on the security posture

00:39:13,920 --> 00:39:18,800
that we have

00:39:15,599 --> 00:39:21,040
for our financial institutions because

00:39:18,800 --> 00:39:23,440
we understand that not only

00:39:21,040 --> 00:39:24,240
do we need to pay attention at the root

00:39:23,440 --> 00:39:26,800
or the core

00:39:24,240 --> 00:39:28,720
which is spinnaker open source but also

00:39:26,800 --> 00:39:29,440
everything else that we build on top of

00:39:28,720 --> 00:39:32,560
it that we

00:39:29,440 --> 00:39:34,000
offer as that platform for our customers

00:39:32,560 --> 00:39:35,119
so if you think about the provisioning

00:39:34,000 --> 00:39:36,320
management you think about the

00:39:35,119 --> 00:39:39,520
extensibility

00:39:36,320 --> 00:39:40,960
all of that stuff needs to be um vetted

00:39:39,520 --> 00:39:43,119
to make sure that it doesn't have

00:39:40,960 --> 00:39:43,599
vulnerabilities and vulnerabilities are

00:39:43,119 --> 00:39:46,400
found

00:39:43,599 --> 00:39:48,160
every day so it's something that you

00:39:46,400 --> 00:39:51,200
have to have this process

00:39:48,160 --> 00:39:51,760
that you look at on a regular basis got

00:39:51,200 --> 00:39:54,000
it

00:39:51,760 --> 00:39:55,520
so i believe then this should be part of

00:39:54,000 --> 00:39:59,440
our release process also right

00:39:55,520 --> 00:40:02,720
is it correct yep okay then how

00:39:59,440 --> 00:40:05,040
with every relief the cves that we

00:40:02,720 --> 00:40:06,480
find are going to be addressed as part

00:40:05,040 --> 00:40:09,440
of that various nodes

00:40:06,480 --> 00:40:09,839
and are not released right absolutely

00:40:09,440 --> 00:40:12,720
they

00:40:09,839 --> 00:40:14,720
are so if you think about any other kind

00:40:12,720 --> 00:40:16,000
of well-established organization we're

00:40:14,720 --> 00:40:17,839
going to start to do that for open

00:40:16,000 --> 00:40:18,880
source as well but armory's already

00:40:17,839 --> 00:40:21,839
doing it

00:40:18,880 --> 00:40:23,520
so if you look at for example atlassian

00:40:21,839 --> 00:40:24,319
i think everyone's used an atlassian

00:40:23,520 --> 00:40:27,359
tool

00:40:24,319 --> 00:40:30,400
um not i would guess 90

00:40:27,359 --> 00:40:31,440
of people um you can go to their website

00:40:30,400 --> 00:40:33,599
and you can see

00:40:31,440 --> 00:40:35,760
a security page and it talks about with

00:40:33,599 --> 00:40:38,160
every release the cve

00:40:35,760 --> 00:40:40,640
that was associate that is associated

00:40:38,160 --> 00:40:43,280
with the release and the fix

00:40:40,640 --> 00:40:43,920
and so we're starting to we do that very

00:40:43,280 --> 00:40:46,560
same thing

00:40:43,920 --> 00:40:47,440
so we are at the same level as an

00:40:46,560 --> 00:40:50,400
atlassian

00:40:47,440 --> 00:40:53,359
in terms of handling security and making

00:40:50,400 --> 00:40:55,200
sure that it is top of mind

00:40:53,359 --> 00:40:56,480
which i think is i think is really

00:40:55,200 --> 00:40:59,040
important um

00:40:56,480 --> 00:41:01,599
cons especially considering what we're

00:40:59,040 --> 00:41:04,880
doing we're helping companies to deploy

00:41:01,599 --> 00:41:08,240
manage and deploy code this

00:41:04,880 --> 00:41:10,000
is very important right the the largest

00:41:08,240 --> 00:41:13,119
banks the financial sector

00:41:10,000 --> 00:41:13,520
right uh right some of things are some

00:41:13,119 --> 00:41:15,520
of

00:41:13,520 --> 00:41:18,640
the some of these vulnerabilities are

00:41:15,520 --> 00:41:18,640
actually blocker for them

00:41:18,839 --> 00:41:22,319
absolutely

00:41:20,560 --> 00:41:23,920
and so it's like you know it's on

00:41:22,319 --> 00:41:27,040
everybody's radar

00:41:23,920 --> 00:41:30,240
and when we are very proactive around

00:41:27,040 --> 00:41:31,680
it how we are fixing it is it a process

00:41:30,240 --> 00:41:33,200
we are making this part of the release

00:41:31,680 --> 00:41:35,520
like how cloud riders or any other

00:41:33,200 --> 00:41:37,200
enterprise software company does right

00:41:35,520 --> 00:41:38,800
make it very open and then the dot

00:41:37,200 --> 00:41:40,720
releases will have

00:41:38,800 --> 00:41:41,839
all the uh you know the release notes

00:41:40,720 --> 00:41:45,119
around what uh

00:41:41,839 --> 00:41:47,680
cvs uh got fixed in and you know

00:41:45,119 --> 00:41:50,079
so it's out and open and it's very clear

00:41:47,680 --> 00:41:52,720
around what we are doing with all these

00:41:50,079 --> 00:41:53,760
security fixes that we are making in

00:41:52,720 --> 00:41:56,160
every release

00:41:53,760 --> 00:41:56,960
yep this is very important and uh i

00:41:56,160 --> 00:41:59,119
believe uh

00:41:56,960 --> 00:42:01,359
people who are listening to us uh for

00:41:59,119 --> 00:42:02,400
this talk they'd be super excited to see

00:42:01,359 --> 00:42:03,760
how we are

00:42:02,400 --> 00:42:06,000
being very proactive around some of

00:42:03,760 --> 00:42:07,680
these areas and not just security and

00:42:06,000 --> 00:42:10,160
compliance with as we have talked about

00:42:07,680 --> 00:42:12,800
the developer productivity right

00:42:10,160 --> 00:42:14,000
important areas right installation

00:42:12,800 --> 00:42:16,319
configuration

00:42:14,000 --> 00:42:17,280
do i have to get the smartest engineer

00:42:16,319 --> 00:42:19,680
on my team

00:42:17,280 --> 00:42:21,200
to manage vehicle to make sure that he

00:42:19,680 --> 00:42:22,800
can operational he or she can

00:42:21,200 --> 00:42:25,359
operationalize financial

00:42:22,800 --> 00:42:27,040
or should i talk to them about the next

00:42:25,359 --> 00:42:28,480
use cases

00:42:27,040 --> 00:42:30,960
right i know they're thinking about

00:42:28,480 --> 00:42:34,079
policy driven deployments also

00:42:30,960 --> 00:42:37,200
right yes absolutely policy driven

00:42:34,079 --> 00:42:38,720
deployment that is also an area that's

00:42:37,200 --> 00:42:40,720
near and dear to my heart

00:42:38,720 --> 00:42:43,440
so i think of policy driven deployment

00:42:40,720 --> 00:42:44,000
as it's this concept where it allows you

00:42:43,440 --> 00:42:46,640
to focus

00:42:44,000 --> 00:42:47,359
on pipeline creation and that pipeline

00:42:46,640 --> 00:42:50,400
creation

00:42:47,359 --> 00:42:53,680
is based on your um

00:42:50,400 --> 00:42:57,119
your policies and your

00:42:53,680 --> 00:42:58,720
the governance that you are required to

00:42:57,119 --> 00:43:00,640
follow so it's like your best practice

00:42:58,720 --> 00:43:02,640
your policies and your compliance

00:43:00,640 --> 00:43:04,560
so if you think about all the rules and

00:43:02,640 --> 00:43:05,839
regulations around that

00:43:04,560 --> 00:43:07,599
that's really what makes up your

00:43:05,839 --> 00:43:08,240
pipeline if you think about what a

00:43:07,599 --> 00:43:10,960
pipeline

00:43:08,240 --> 00:43:13,040
is so policy driven deployment is just

00:43:10,960 --> 00:43:15,760
kind of flipping the game a little bit

00:43:13,040 --> 00:43:16,960
so that that your focus is really on

00:43:15,760 --> 00:43:20,960
creating

00:43:16,960 --> 00:43:24,480
the most kind of protected secure

00:43:20,960 --> 00:43:27,680
way of delivering code

00:43:24,480 --> 00:43:28,000
yes and um you know i that's what we say

00:43:27,680 --> 00:43:31,359
that

00:43:28,000 --> 00:43:32,000
how customers are trending that flywheel

00:43:31,359 --> 00:43:34,480
right

00:43:32,000 --> 00:43:36,240
yep if we see customer trending faster

00:43:34,480 --> 00:43:37,920
from one stage to another

00:43:36,240 --> 00:43:40,319
and the re commit is happening at the

00:43:37,920 --> 00:43:42,720
non-event that's the big win for me

00:43:40,319 --> 00:43:44,960
so my department for everybody who is

00:43:42,720 --> 00:43:48,240
interacting with customers all

00:43:44,960 --> 00:43:50,160
uh through and through right and

00:43:48,240 --> 00:43:51,839
that is nothing without the product team

00:43:50,160 --> 00:43:54,079
helping us

00:43:51,839 --> 00:43:55,599
defining ovation taking that region to

00:43:54,079 --> 00:43:57,440
the next level

00:43:55,599 --> 00:43:58,800
and making sure that everybody is part

00:43:57,440 --> 00:44:01,440
of that story

00:43:58,800 --> 00:44:01,920
and the inputs are taken from every

00:44:01,440 --> 00:44:04,160
different

00:44:01,920 --> 00:44:05,280
field and how they are making decisions

00:44:04,160 --> 00:44:07,680
that normally

00:44:05,280 --> 00:44:08,960
and i thank you so much for you know

00:44:07,680 --> 00:44:12,079
listening to us

00:44:08,960 --> 00:44:15,200
making our feedback and making sure that

00:44:12,079 --> 00:44:15,760
uh customers are central to all our

00:44:15,200 --> 00:44:18,560
thinking

00:44:15,760 --> 00:44:18,960
that we are doing at armory absolutely

00:44:18,560 --> 00:44:21,280
to me

00:44:18,960 --> 00:44:22,160
that is a hundred percent what makes

00:44:21,280 --> 00:44:24,880
product fun

00:44:22,160 --> 00:44:26,800
and it isn't possible to be perfectly

00:44:24,880 --> 00:44:28,400
honest without a team where you have

00:44:26,800 --> 00:44:30,640
that collaboration

00:44:28,400 --> 00:44:31,839
and is willing to share that information

00:44:30,640 --> 00:44:34,319
and i know that

00:44:31,839 --> 00:44:36,640
you and other team members are always

00:44:34,319 --> 00:44:40,800
willing to bring product onto the call

00:44:36,640 --> 00:44:43,359
and do it in a really positive

00:44:40,800 --> 00:44:44,400
way for everyone so that everyone can be

00:44:43,359 --> 00:44:47,520
successful

00:44:44,400 --> 00:44:50,640
it it works it's amazing

00:44:47,520 --> 00:44:53,599
and i i find it absolutely delightful

00:44:50,640 --> 00:44:54,720
we are we're lucky to have you thank you

00:44:53,599 --> 00:44:58,640
so much and

00:44:54,720 --> 00:45:01,920
the feeling the feeling is mutual

00:44:58,640 --> 00:45:02,640
all righty so you know didn't want to

00:45:01,920 --> 00:45:06,960
end this

00:45:02,640 --> 00:45:09,359
presentation without uh

00:45:06,960 --> 00:45:10,720
we are talking about uh the ecosystem

00:45:09,359 --> 00:45:11,839
that we are in

00:45:10,720 --> 00:45:13,839
right we are still in the middle of

00:45:11,839 --> 00:45:16,160
pandemic i hope

00:45:13,839 --> 00:45:18,720
uh everybody all of you are listening to

00:45:16,160 --> 00:45:21,040
us are taking care of themselves

00:45:18,720 --> 00:45:22,480
not just their physical health but their

00:45:21,040 --> 00:45:24,480
mental health too

00:45:22,480 --> 00:45:26,960
absolutely just just keep doing your

00:45:24,480 --> 00:45:29,440
best we all are like

00:45:26,960 --> 00:45:31,119
trying to give 100 percent some days are

00:45:29,440 --> 00:45:32,960
bad some days are good but just take

00:45:31,119 --> 00:45:36,079
care of yourself

00:45:32,960 --> 00:45:37,359
and the business is running as usual we

00:45:36,079 --> 00:45:41,040
all know that

00:45:37,359 --> 00:45:47,839
yep all right thank you so much team

00:45:41,040 --> 00:45:47,839

YouTube URL: https://www.youtube.com/watch?v=9TPG4bD-KBY


