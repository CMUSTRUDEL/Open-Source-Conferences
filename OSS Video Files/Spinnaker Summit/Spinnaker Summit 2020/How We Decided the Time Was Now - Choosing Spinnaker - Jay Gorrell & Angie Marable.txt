Title: How We Decided the Time Was Now - Choosing Spinnaker - Jay Gorrell & Angie Marable
Publication date: 2021-01-12
Playlist: Spinnaker Summit 2020
Description: 
	The old adage “time is money” is more relevant now than it ever was. It’s as competitive within many of our market spaces. So, when that is the case, it’s important to move your products to market & release new features or fixes as fast as you can, while maintaining the integrity and quality of your product. CI/CD creates a way to do this; many of us had other deployment systems that worked just fine when we discovered Spinnaker. What do you do when your current solution isn’t flexible-, reliable-, or fast enough? How do you decide it's time for a major infrastructure change while remaining as un-disruptive to your engineers as possible? Join us as we facilitate a Fireside Chat to discuss just that: The inflection point where organizations made the call to overhaul their CI/CD pipeline and implement Spinnaker as a solution. You’ll hear various perspectives on: What were the pain-points of previous deployment strategies when looking for another solution? What were the concerns surrounding the implementation & rollout of Spinnaker as a solution? What is some key advice for other organizations who are just now starting to look at Spinnaker?
Captions: 
	00:00:00,530 --> 00:00:03,629
[Music]

00:00:09,840 --> 00:00:13,280
hi everyone

00:00:10,800 --> 00:00:14,320
and thanks for joining us today my name

00:00:13,280 --> 00:00:16,160
is angie maribel

00:00:14,320 --> 00:00:17,680
and i'm the director of engineering at

00:00:16,160 --> 00:00:19,840
upside business travel

00:00:17,680 --> 00:00:22,000
uh we're a small star uh tech startup

00:00:19,840 --> 00:00:23,439
based out of washington dc

00:00:22,000 --> 00:00:25,439
trying to shake things up and change the

00:00:23,439 --> 00:00:28,560
way that we do business travel

00:00:25,439 --> 00:00:31,039
um i have here with me jay guerrell our

00:00:28,560 --> 00:00:33,040
lead site reliability engineer

00:00:31,039 --> 00:00:34,719
from our infrastructure automation team

00:00:33,040 --> 00:00:38,239
here to talk to you today

00:00:34,719 --> 00:00:39,840
about uh the implementation of spinnaker

00:00:38,239 --> 00:00:42,960
at upside

00:00:39,840 --> 00:00:45,920
and uh the decision-making that

00:00:42,960 --> 00:00:46,480
went into deciding that the time was

00:00:45,920 --> 00:00:49,280
right

00:00:46,480 --> 00:00:49,760
for spinnaker so before we get started

00:00:49,280 --> 00:00:51,760
i'll just

00:00:49,760 --> 00:00:53,199
outline a little bit of what we're going

00:00:51,760 --> 00:00:55,039
to talk about uh

00:00:53,199 --> 00:00:57,440
first we'll sort of set the stage for

00:00:55,039 --> 00:01:00,239
you uh and give you some context

00:00:57,440 --> 00:01:03,039
to uh what we were working with uh

00:01:00,239 --> 00:01:05,600
before with our legacy deployment system

00:01:03,039 --> 00:01:06,159
then we'll dig into some details with

00:01:05,600 --> 00:01:08,799
jay

00:01:06,159 --> 00:01:09,920
on uh his thought process behind

00:01:08,799 --> 00:01:12,000
choosing spinnaker

00:01:09,920 --> 00:01:14,960
and coming up with an implementation

00:01:12,000 --> 00:01:18,000
plan and deciding that the time was now

00:01:14,960 --> 00:01:20,560
and then after that we will go uh

00:01:18,000 --> 00:01:22,799
and touch base on the progress of the

00:01:20,560 --> 00:01:25,520
spinnaker implementation at upside

00:01:22,799 --> 00:01:27,280
and then see if he has any advice to

00:01:25,520 --> 00:01:29,600
give to others who may be just starting

00:01:27,280 --> 00:01:32,640
out on their journey with spinnaker

00:01:29,600 --> 00:01:35,040
so without further ado i

00:01:32,640 --> 00:01:36,720
will like to say hello jay thanks for

00:01:35,040 --> 00:01:39,600
joining today

00:01:36,720 --> 00:01:40,079
why don't you go ahead and give folks a

00:01:39,600 --> 00:01:43,040
little bit

00:01:40,079 --> 00:01:45,040
of an idea about who you are and your

00:01:43,040 --> 00:01:46,960
role that outside

00:01:45,040 --> 00:01:48,320
sure thanks ange and thanks for putting

00:01:46,960 --> 00:01:50,960
this all together

00:01:48,320 --> 00:01:52,000
um so yeah my background i started in

00:01:50,960 --> 00:01:54,560
web development

00:01:52,000 --> 00:01:56,159
i realized the front end wasn't for me

00:01:54,560 --> 00:01:57,680
and quickly moved further and further

00:01:56,159 --> 00:01:59,200
down the stack

00:01:57,680 --> 00:02:01,439
until i started getting more into the

00:01:59,200 --> 00:02:03,360
infrastructure side of things i

00:02:01,439 --> 00:02:05,200
once there i kind of found the passion

00:02:03,360 --> 00:02:07,520
for containers and then that was around

00:02:05,200 --> 00:02:10,640
the time kubernetes was coming around

00:02:07,520 --> 00:02:11,599
uh so i developed a lot of interest in

00:02:10,640 --> 00:02:14,400
that so

00:02:11,599 --> 00:02:15,840
i upside started to become a company

00:02:14,400 --> 00:02:18,720
around that time and they wanted to do

00:02:15,840 --> 00:02:21,920
containers and probably on kubernetes

00:02:18,720 --> 00:02:23,440
uh so that was an opportunity for me to

00:02:21,920 --> 00:02:25,680
you know take a jump to a brand new

00:02:23,440 --> 00:02:28,319
startup and i try that out so

00:02:25,680 --> 00:02:30,080
joined upside about four years ago as

00:02:28,319 --> 00:02:32,480
lead for the sre team

00:02:30,080 --> 00:02:33,760
and since then i've been managing all

00:02:32,480 --> 00:02:36,800
things infrastructure

00:02:33,760 --> 00:02:38,319
ci cd pipelines things like that

00:02:36,800 --> 00:02:39,840
well great well let's just go ahead and

00:02:38,319 --> 00:02:42,959
jump right into it then

00:02:39,840 --> 00:02:45,840
um tell me a little bit about upside's

00:02:42,959 --> 00:02:48,879
previous deployment strategy

00:02:45,840 --> 00:02:50,640
yeah so i guess to talk a little bit

00:02:48,879 --> 00:02:53,200
about the environment first

00:02:50,640 --> 00:02:55,280
like i mentioned i upside had plans to

00:02:53,200 --> 00:02:57,519
do docker and kubernetes

00:02:55,280 --> 00:02:59,200
so we are talking about containerized

00:02:57,519 --> 00:03:00,720
environments

00:02:59,200 --> 00:03:03,440
so that's what our deployment targets

00:03:00,720 --> 00:03:04,319
are as far as our existing deployment

00:03:03,440 --> 00:03:08,640
pipeline

00:03:04,319 --> 00:03:10,720
um we used a ci tool like most people do

00:03:08,640 --> 00:03:12,720
in our case it was circle ci

00:03:10,720 --> 00:03:14,239
that was responsible for building the

00:03:12,720 --> 00:03:16,159
images and then pushing those to an

00:03:14,239 --> 00:03:18,080
artifact storage system

00:03:16,159 --> 00:03:19,920
uh and then circle would kick off a job

00:03:18,080 --> 00:03:21,440
and jenkins so jenkins was kind of that

00:03:19,920 --> 00:03:24,879
core piece that manages

00:03:21,440 --> 00:03:27,280
the deployments themselves uh so

00:03:24,879 --> 00:03:28,480
jenkins was responsible for running a

00:03:27,280 --> 00:03:30,480
pipeline that would

00:03:28,480 --> 00:03:31,920
you know deploy the container to our

00:03:30,480 --> 00:03:33,200
kubernetes cluster in our dev

00:03:31,920 --> 00:03:34,959
environment

00:03:33,200 --> 00:03:37,519
it would make sure the deployment comes

00:03:34,959 --> 00:03:40,159
up healthy it would publish metrics to

00:03:37,519 --> 00:03:41,680
datadog for stats um it would also

00:03:40,159 --> 00:03:43,920
publish a

00:03:41,680 --> 00:03:46,480
changelog information to slack so users

00:03:43,920 --> 00:03:50,080
would you know get some of that output

00:03:46,480 --> 00:03:51,680
um and then we also have one other piece

00:03:50,080 --> 00:03:54,080
which is a slack bot

00:03:51,680 --> 00:03:56,159
that kind of abstracted jenkins from the

00:03:54,080 --> 00:03:56,560
users so that's how people would deploy

00:03:56,159 --> 00:03:59,120
to

00:03:56,560 --> 00:04:00,799
stage or to production uh they didn't

00:03:59,120 --> 00:04:03,040
really interact directly with

00:04:00,799 --> 00:04:03,920
jenkins but that's kind of a high-level

00:04:03,040 --> 00:04:06,879
view of what our

00:04:03,920 --> 00:04:07,200
existing pipeline looked like okay and

00:04:06,879 --> 00:04:09,599
so

00:04:07,200 --> 00:04:11,280
with that pipeline what were some pain

00:04:09,599 --> 00:04:14,799
points that you had with that

00:04:11,280 --> 00:04:15,439
um that got you motivated to start

00:04:14,799 --> 00:04:18,639
looking for

00:04:15,439 --> 00:04:21,759
some alternatives or changes to make

00:04:18,639 --> 00:04:23,680
yeah um so jenkins is the core piece

00:04:21,759 --> 00:04:25,360
we're talking about here uh for the

00:04:23,680 --> 00:04:27,120
deployment pipeline where

00:04:25,360 --> 00:04:28,160
in the the new system with spinnaker

00:04:27,120 --> 00:04:29,759
we're still going to have circle

00:04:28,160 --> 00:04:33,120
building images

00:04:29,759 --> 00:04:35,199
um but for the jenkins system

00:04:33,120 --> 00:04:36,479
it does have a bit of a reputation i

00:04:35,199 --> 00:04:37,280
think most people know they've worked

00:04:36,479 --> 00:04:40,479
with it it's

00:04:37,280 --> 00:04:42,000
a a little cumbersome difficult maybe

00:04:40,479 --> 00:04:43,199
repetitive when you're writing your

00:04:42,000 --> 00:04:46,240
pipeline templates

00:04:43,199 --> 00:04:47,759
i they're largely in groovy but

00:04:46,240 --> 00:04:49,600
oftentimes depending on what you're

00:04:47,759 --> 00:04:51,280
doing you may write you know bash

00:04:49,600 --> 00:04:52,880
scripts or python scripts so you have a

00:04:51,280 --> 00:04:53,919
single file with maybe three different

00:04:52,880 --> 00:04:55,520
languages

00:04:53,919 --> 00:04:57,040
there's a lot of nuances in there and

00:04:55,520 --> 00:04:58,479
then you know there's overhead with

00:04:57,040 --> 00:05:00,000
managing spinnaker and the

00:04:58,479 --> 00:05:01,680
the plug-ins that come with or sorry not

00:05:00,000 --> 00:05:02,880
stacker with jenkins and the plug-ins

00:05:01,680 --> 00:05:05,199
that come with it

00:05:02,880 --> 00:05:06,479
um so i think it was just kind of the

00:05:05,199 --> 00:05:10,000
operational overhead

00:05:06,479 --> 00:05:12,080
uh that came with that okay and

00:05:10,000 --> 00:05:13,600
were there any complaints from the

00:05:12,080 --> 00:05:16,080
engineers that had to

00:05:13,600 --> 00:05:17,280
use that system that also um

00:05:16,080 --> 00:05:20,560
precipitated you

00:05:17,280 --> 00:05:22,720
looking into alternatives i

00:05:20,560 --> 00:05:24,800
you know on the engineering side not so

00:05:22,720 --> 00:05:25,120
much because like i mentioned we did

00:05:24,800 --> 00:05:27,120
have

00:05:25,120 --> 00:05:28,400
a slack bot that abstracted the usage

00:05:27,120 --> 00:05:30,479
away from them

00:05:28,400 --> 00:05:32,639
uh the biggest impact to engineers was

00:05:30,479 --> 00:05:35,600
when you know we broke something

00:05:32,639 --> 00:05:36,800
in the jenkins pipelines uh of course

00:05:35,600 --> 00:05:39,120
everyone notices that

00:05:36,800 --> 00:05:40,960
but uh the day-to-day usage no one

00:05:39,120 --> 00:05:43,039
actually logs into jenkins to execute

00:05:40,960 --> 00:05:46,320
pipelines or look at anything

00:05:43,039 --> 00:05:47,840
um if anything i would say maybe a lack

00:05:46,320 --> 00:05:49,919
of visibility into what it's doing

00:05:47,840 --> 00:05:51,440
because they use slack to interface with

00:05:49,919 --> 00:05:52,880
it they kick something off and it's

00:05:51,440 --> 00:05:55,199
you know a bit of a black box and they

00:05:52,880 --> 00:05:57,280
don't really have details or insight

00:05:55,199 --> 00:05:59,840
into what's going on there

00:05:57,280 --> 00:06:01,840
gotcha well so when you were then

00:05:59,840 --> 00:06:04,840
researching alternatives um

00:06:01,840 --> 00:06:07,360
to sort of the jenkins function in the

00:06:04,840 --> 00:06:08,240
pipeline uh what made spinnaker stand

00:06:07,360 --> 00:06:09,680
out to you over

00:06:08,240 --> 00:06:11,680
other alternatives that you were

00:06:09,680 --> 00:06:15,520
exploring

00:06:11,680 --> 00:06:16,800
yeah um so i think the big thing that

00:06:15,520 --> 00:06:19,680
stood out to us

00:06:16,800 --> 00:06:20,880
was uh this built-in knowledge that

00:06:19,680 --> 00:06:24,240
spinnaker has

00:06:20,880 --> 00:06:25,520
of kubernetes resources um so

00:06:24,240 --> 00:06:28,160
for example when we're doing a

00:06:25,520 --> 00:06:29,919
deployment on kubernetes uh spinnaker

00:06:28,160 --> 00:06:32,080
already has built-in knowledge to know

00:06:29,919 --> 00:06:34,479
if that deployment is healthy or not

00:06:32,080 --> 00:06:35,360
uh it's not just kubernetes but if

00:06:34,479 --> 00:06:37,919
you're doing like uh

00:06:35,360 --> 00:06:39,840
elb and aws uh spinnaker knows if the

00:06:37,919 --> 00:06:41,919
eob is healthy um so

00:06:39,840 --> 00:06:43,360
it's able to use that to determine if

00:06:41,919 --> 00:06:44,000
the current stage in your deployment

00:06:43,360 --> 00:06:45,840
pipeline

00:06:44,000 --> 00:06:47,360
is successful or not before continuing

00:06:45,840 --> 00:06:50,479
on to the next stage

00:06:47,360 --> 00:06:52,479
um let's see there's there

00:06:50,479 --> 00:06:53,599
are a lot of players in the space that

00:06:52,479 --> 00:06:57,360
we evaluated

00:06:53,599 --> 00:06:59,039
um they often are either very bare bones

00:06:57,360 --> 00:07:01,039
where you construct things from scratch

00:06:59,039 --> 00:07:02,479
which is kind of where jenkins is at

00:07:01,039 --> 00:07:04,560
techton is another one that's a little

00:07:02,479 --> 00:07:06,880
more cloud native

00:07:04,560 --> 00:07:07,680
then on the other side there's argo cd

00:07:06,880 --> 00:07:10,240
and things that are

00:07:07,680 --> 00:07:12,479
more batteries included and very

00:07:10,240 --> 00:07:15,280
opinionated with how you do things

00:07:12,479 --> 00:07:17,039
uh spinnaker just fit this really nice

00:07:15,280 --> 00:07:18,880
place in the middle where

00:07:17,039 --> 00:07:20,479
it had these pre-built stages and

00:07:18,880 --> 00:07:21,840
pre-built understanding of kubernetes

00:07:20,479 --> 00:07:24,000
resources

00:07:21,840 --> 00:07:25,680
but we didn't have to code things from

00:07:24,000 --> 00:07:27,759
scratch either it had the right size

00:07:25,680 --> 00:07:30,240
building blocks that we were looking for

00:07:27,759 --> 00:07:31,599
so it provided a good framework then

00:07:30,240 --> 00:07:34,560
that you could work with and

00:07:31,599 --> 00:07:36,160
and then customize yeah exactly it gave

00:07:34,560 --> 00:07:36,800
us the flexibility we needed without

00:07:36,160 --> 00:07:40,240
helping

00:07:36,800 --> 00:07:43,759
to low level gotcha well great

00:07:40,240 --> 00:07:46,800
um so you've done the analysis

00:07:43,759 --> 00:07:48,240
you've chosen spinnaker um as as the

00:07:46,800 --> 00:07:50,639
next step for the company

00:07:48,240 --> 00:07:52,400
um then you come up with an

00:07:50,639 --> 00:07:54,560
implementation strategy

00:07:52,400 --> 00:07:55,520
um what were some concerns that you had

00:07:54,560 --> 00:07:57,360
surrounding

00:07:55,520 --> 00:07:58,960
uh sort of the implementation of

00:07:57,360 --> 00:08:02,319
spinnaker um

00:07:58,960 --> 00:08:04,639
and starting off on that journey yeah

00:08:02,319 --> 00:08:05,919
so one thing i haven't really mentioned

00:08:04,639 --> 00:08:07,840
yet is i

00:08:05,919 --> 00:08:10,000
the primary driver for moving to

00:08:07,840 --> 00:08:11,599
spinnaker a new solution was to get to

00:08:10,000 --> 00:08:13,440
continuous deployment

00:08:11,599 --> 00:08:14,720
that was a company goal to solve some

00:08:13,440 --> 00:08:18,240
issues we had

00:08:14,720 --> 00:08:19,840
um but as we moved to spinnaker we

00:08:18,240 --> 00:08:20,879
didn't want to move straight into that

00:08:19,840 --> 00:08:23,599
right so

00:08:20,879 --> 00:08:25,440
the initial step was to basically mimic

00:08:23,599 --> 00:08:26,000
what our jenkins deployment pipelines

00:08:25,440 --> 00:08:29,440
looked like

00:08:26,000 --> 00:08:31,199
in spinnaker um so because jenkins was

00:08:29,440 --> 00:08:33,120
deploying to our dev environment first

00:08:31,199 --> 00:08:33,839
and then people would use a slackbot to

00:08:33,120 --> 00:08:36,640
promote to

00:08:33,839 --> 00:08:38,560
stage or production uh there's that kind

00:08:36,640 --> 00:08:40,159
of manual step in the middle to

00:08:38,560 --> 00:08:41,760
save for each service when it should go

00:08:40,159 --> 00:08:43,200
to the next environment so

00:08:41,760 --> 00:08:44,880
that's how we initially set up our

00:08:43,200 --> 00:08:46,240
spinnaker pipelines i

00:08:44,880 --> 00:08:48,480
they would deploy to dev and then it

00:08:46,240 --> 00:08:50,399
would essentially use a built-in stage

00:08:48,480 --> 00:08:52,160
and spinnaker to prompt the user for

00:08:50,399 --> 00:08:54,240
manual judgment if they want to continue

00:08:52,160 --> 00:08:56,320
on to stage or production

00:08:54,240 --> 00:08:58,640
um so that was kind of the first step we

00:08:56,320 --> 00:09:00,399
obviously did a poc service first

00:08:58,640 --> 00:09:03,200
and then some low touch services that

00:09:00,399 --> 00:09:05,360
don't really impact too much and then i

00:09:03,200 --> 00:09:06,880
i looked for a volunteer team so i

00:09:05,360 --> 00:09:10,399
wanted to get in early i

00:09:06,880 --> 00:09:13,920
then moved on to the villain told people

00:09:10,399 --> 00:09:17,600
oh yes what a process um

00:09:13,920 --> 00:09:20,880
with with that did you have any uh

00:09:17,600 --> 00:09:23,600
concerns around sort of

00:09:20,880 --> 00:09:24,000
getting engineers on board with changing

00:09:23,600 --> 00:09:27,040
their

00:09:24,000 --> 00:09:29,600
uh their method of deploying code did

00:09:27,040 --> 00:09:32,240
you get good buy-in

00:09:29,600 --> 00:09:32,720
yeah surprisingly it went well i think

00:09:32,240 --> 00:09:35,279
as

00:09:32,720 --> 00:09:36,000
the sre team we were a bit nervous about

00:09:35,279 --> 00:09:39,279
you know something

00:09:36,000 --> 00:09:42,560
new and getting everyone to change i

00:09:39,279 --> 00:09:44,160
you know we have about 160 microservices

00:09:42,560 --> 00:09:44,560
that are going through these pipelines

00:09:44,160 --> 00:09:47,360
and

00:09:44,560 --> 00:09:48,959
people are constantly you know pushing

00:09:47,360 --> 00:09:50,720
out new versions

00:09:48,959 --> 00:09:52,560
and they've been doing that with the

00:09:50,720 --> 00:09:54,240
slack bot for years and then now we're

00:09:52,560 --> 00:09:56,880
putting something new out and having

00:09:54,240 --> 00:09:59,600
them go to a web interface instead so

00:09:56,880 --> 00:10:00,080
just kind of a little bit of a shift in

00:09:59,600 --> 00:10:01,839
uh

00:10:00,080 --> 00:10:03,279
just the mentality of how how you do

00:10:01,839 --> 00:10:05,200
those things uh but

00:10:03,279 --> 00:10:07,040
it went over really well everyone seemed

00:10:05,200 --> 00:10:08,320
to adapt it and not really have any

00:10:07,040 --> 00:10:10,959
issues

00:10:08,320 --> 00:10:13,279
that's that's really great um so yeah i

00:10:10,959 --> 00:10:15,839
i do know we're at the stage now where

00:10:13,279 --> 00:10:17,360
we do have all of our services migrated

00:10:15,839 --> 00:10:20,959
over to spinnaker so

00:10:17,360 --> 00:10:24,000
what's next yeah so next i

00:10:20,959 --> 00:10:25,360
i guess revisiting that original goal of

00:10:24,000 --> 00:10:28,959
continuous deployment

00:10:25,360 --> 00:10:30,880
um we we did add a stage in our

00:10:28,959 --> 00:10:33,279
spinnaker pipeline to run

00:10:30,880 --> 00:10:35,040
some tests and we set it up in a nice

00:10:33,279 --> 00:10:37,200
way where um

00:10:35,040 --> 00:10:39,040
the tests actually dictate if something

00:10:37,200 --> 00:10:40,560
can go on out so initially like i said

00:10:39,040 --> 00:10:41,279
everything is kind of gated so it's

00:10:40,560 --> 00:10:43,200
manually

00:10:41,279 --> 00:10:45,279
you know promoted or manually signed off

00:10:43,200 --> 00:10:47,200
to go the next environment

00:10:45,279 --> 00:10:49,200
but things are set up so the test can

00:10:47,200 --> 00:10:50,079
give output that spinnaker can use in

00:10:49,200 --> 00:10:53,200
its logic

00:10:50,079 --> 00:10:56,480
and i so things are already in place

00:10:53,200 --> 00:10:58,079
um i think the biggest step

00:10:56,480 --> 00:10:59,600
is just getting more tests written that

00:10:58,079 --> 00:11:01,360
we're confident in

00:10:59,600 --> 00:11:02,640
the the technologies are either on the

00:11:01,360 --> 00:11:04,720
spinnaker side

00:11:02,640 --> 00:11:06,399
uh so the next steps is getting better

00:11:04,720 --> 00:11:08,000
test coverage getting more services

00:11:06,399 --> 00:11:09,760
automatically deploying

00:11:08,000 --> 00:11:11,040
and in the meantime there's some stuff

00:11:09,760 --> 00:11:14,720
we can do on our side too

00:11:11,040 --> 00:11:18,240
so a lot of times as the sre team we

00:11:14,720 --> 00:11:20,160
do you know security updates or maybe

00:11:18,240 --> 00:11:21,519
update versions in our docker files and

00:11:20,160 --> 00:11:23,920
things like that

00:11:21,519 --> 00:11:25,200
things that are very low risk and we can

00:11:23,920 --> 00:11:27,360
have spinnaker look at

00:11:25,200 --> 00:11:28,320
the get differences and see which files

00:11:27,360 --> 00:11:30,720
changed and

00:11:28,320 --> 00:11:32,399
you know if if it's low risk and not

00:11:30,720 --> 00:11:33,279
part of the actual application maybe

00:11:32,399 --> 00:11:36,480
those can be

00:11:33,279 --> 00:11:40,399
continuously deployed anyway so just

00:11:36,480 --> 00:11:43,519
trying to to get closer to that cd go

00:11:40,399 --> 00:11:45,680
it's really great so uh you know we're

00:11:43,519 --> 00:11:48,560
moving forward with spinnaker uh

00:11:45,680 --> 00:11:50,880
we've got all of our services there um

00:11:48,560 --> 00:11:52,639
and we are encouraging our engineers to

00:11:50,880 --> 00:11:56,160
to write more tests so we can move

00:11:52,639 --> 00:11:59,440
towards that uh continuous deployment

00:11:56,160 --> 00:12:00,000
kind of vision before we close out

00:11:59,440 --> 00:12:02,480
though

00:12:00,000 --> 00:12:04,320
do you have any advice that you share or

00:12:02,480 --> 00:12:06,560
lessons learned

00:12:04,320 --> 00:12:08,160
that you would share with maybe other

00:12:06,560 --> 00:12:10,320
organizations that may

00:12:08,160 --> 00:12:11,920
be just starting out on their spinnaker

00:12:10,320 --> 00:12:13,920
journey

00:12:11,920 --> 00:12:16,000
yeah so i had actually heard of

00:12:13,920 --> 00:12:18,399
spinnaker quite a while back

00:12:16,000 --> 00:12:20,079
before we ever considered it and it

00:12:18,399 --> 00:12:20,399
always had this reputation at least to

00:12:20,079 --> 00:12:23,200
me

00:12:20,399 --> 00:12:24,800
that it's very difficult to stand up but

00:12:23,200 --> 00:12:26,720
once you have it running it's very

00:12:24,800 --> 00:12:28,800
powerful and easy to use

00:12:26,720 --> 00:12:30,959
i would push back on that these days uh

00:12:28,800 --> 00:12:33,200
spinnaker has had a lot of development

00:12:30,959 --> 00:12:35,600
in the installation space

00:12:33,200 --> 00:12:37,120
particularly with halyard to manage your

00:12:35,600 --> 00:12:39,279
spinnaker deployments

00:12:37,120 --> 00:12:41,040
and these days it's really not that

00:12:39,279 --> 00:12:42,800
difficult to stand up so my

00:12:41,040 --> 00:12:44,639
advice would be don't be afraid to play

00:12:42,800 --> 00:12:46,000
with it you can even run mini cube or

00:12:44,639 --> 00:12:48,079
kind locally

00:12:46,000 --> 00:12:49,760
i get spinnaker up and running and play

00:12:48,079 --> 00:12:51,519
with it pretty easily in a local

00:12:49,760 --> 00:12:53,839
environment

00:12:51,519 --> 00:12:55,040
aside from that joined the uh spinnaker

00:12:53,839 --> 00:12:56,399
slack community

00:12:55,040 --> 00:12:58,480
it's a great group of folks they were

00:12:56,399 --> 00:13:00,800
very helpful to us getting started

00:12:58,480 --> 00:13:02,480
and maybe a special shout out to the the

00:13:00,800 --> 00:13:04,079
people over at armory uh who in

00:13:02,480 --> 00:13:06,480
particular was very hopeful for us

00:13:04,079 --> 00:13:08,480
but yeah just join the community and

00:13:06,480 --> 00:13:11,519
start playing with it

00:13:08,480 --> 00:13:13,519
well thanks so much jay uh for uh

00:13:11,519 --> 00:13:15,920
sharing your thoughts and your

00:13:13,519 --> 00:13:17,760
experience with getting us started with

00:13:15,920 --> 00:13:20,320
spinnaker at upside

00:13:17,760 --> 00:13:21,600
for everyone who's watching at home

00:13:20,320 --> 00:13:24,800
thank you for joining us

00:13:21,600 --> 00:13:27,440
um i think we are available for live

00:13:24,800 --> 00:13:30,000
chat um during this time so if you have

00:13:27,440 --> 00:13:32,240
any questions feel free to reach out to

00:13:30,000 --> 00:13:34,959
myself or jay the team at upside would

00:13:32,240 --> 00:13:37,839
be happy to talk to you and collaborate

00:13:34,959 --> 00:13:39,279
with that again thank you all and have a

00:13:37,839 --> 00:13:49,839
great rest of your day

00:13:39,279 --> 00:13:49,839

YouTube URL: https://www.youtube.com/watch?v=h1qApLwAeQ4


