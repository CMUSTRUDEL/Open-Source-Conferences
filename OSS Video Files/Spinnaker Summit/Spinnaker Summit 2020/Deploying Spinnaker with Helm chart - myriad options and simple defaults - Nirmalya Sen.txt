Title: Deploying Spinnaker with Helm chart - myriad options and simple defaults - Nirmalya Sen
Publication date: 2021-01-16
Playlist: Spinnaker Summit 2020
Description: 
	It's easy to get started with Spinnaker, especially if you already have access to a Kubernetes cluster. This session will show you how you can get up and running with Spinnaker in less than 10 mins using the published Spinnaker helm chart. We will also discuss all the customizations that you can do to allow you to use it for even complex deployment scenarios.
Captions: 
	00:00:00,530 --> 00:00:03,629
[Music]

00:00:05,359 --> 00:00:09,760
hello everyone

00:00:06,399 --> 00:00:11,280
uh welcome to the session today i'm

00:00:09,760 --> 00:00:14,080
going to talk about

00:00:11,280 --> 00:00:15,920
how you can deploy spinnaker using home

00:00:14,080 --> 00:00:18,640
charts

00:00:15,920 --> 00:00:20,720
there's a lot of ways you can deploy

00:00:18,640 --> 00:00:23,760
spinnaker

00:00:20,720 --> 00:00:25,359
and for production deployment it is

00:00:23,760 --> 00:00:28,720
recommended you deploy

00:00:25,359 --> 00:00:30,720
spinnaker in a kubernetes environment

00:00:28,720 --> 00:00:33,440
and you know there are operators

00:00:30,720 --> 00:00:36,480
available some people just install helm

00:00:33,440 --> 00:00:37,040
and then you know go through the process

00:00:36,480 --> 00:00:39,600
of

00:00:37,040 --> 00:00:40,879
installing all the spinnaker components

00:00:39,600 --> 00:00:43,280
but i'll show you how

00:00:40,879 --> 00:00:45,360
you know you can use help to very

00:00:43,280 --> 00:00:47,280
quickly install spinnaker like you know

00:00:45,360 --> 00:00:49,520
you can get a basic spinnaker up and

00:00:47,280 --> 00:00:51,960
running in less than 10 minutes

00:00:49,520 --> 00:00:53,120
and then we'll go through some of the

00:00:51,960 --> 00:00:57,039
customizations

00:00:53,120 --> 00:01:00,079
that you can do with spinnaker

00:00:57,039 --> 00:01:02,000
i'm nermalya sen uh i represent a

00:01:00,079 --> 00:01:04,239
company called ops mx i've been in the

00:01:02,000 --> 00:01:05,760
industry for quite a while uh 25 plus

00:01:04,239 --> 00:01:09,360
years uh

00:01:05,760 --> 00:01:12,880
and uh you know quite interested

00:01:09,360 --> 00:01:15,520
in the cloud adoption growth and how

00:01:12,880 --> 00:01:17,360
you know deploy deployment to cloud

00:01:15,520 --> 00:01:21,360
environments can be made more

00:01:17,360 --> 00:01:23,040
seamless smooth and at a faster velocity

00:01:21,360 --> 00:01:25,040
before i go into the session let me

00:01:23,040 --> 00:01:26,560
spend 30 minutes to talk a little bit

00:01:25,040 --> 00:01:30,560
about opsamex

00:01:26,560 --> 00:01:32,320
who we are we are an experienced team

00:01:30,560 --> 00:01:33,280
that have worked in the past and

00:01:32,320 --> 00:01:36,720
companies like

00:01:33,280 --> 00:01:42,880
netflix cisco oracle

00:01:36,720 --> 00:01:45,520
aws we have 90 plus employees worldwide

00:01:42,880 --> 00:01:48,079
uh and you know we provide services like

00:01:45,520 --> 00:01:51,200
you know 24x7 support of spinnaker

00:01:48,079 --> 00:01:54,720
managed spinnaker and then uh you know

00:01:51,200 --> 00:01:57,840
onboarding and design services

00:01:54,720 --> 00:02:02,240
around spinnaker

00:01:57,840 --> 00:02:05,439
we are very active in the community in

00:02:02,240 --> 00:02:08,319
spinnaker kubernetes jenkins

00:02:05,439 --> 00:02:09,200
we have active contributions committers

00:02:08,319 --> 00:02:13,440
and you know

00:02:09,200 --> 00:02:13,440
we love the open source community

00:02:13,680 --> 00:02:18,720
with that let's get on the agenda uh

00:02:16,640 --> 00:02:22,319
what we're going to talk about

00:02:18,720 --> 00:02:23,280
uh today um again not too much of slides

00:02:22,319 --> 00:02:26,000
um

00:02:23,280 --> 00:02:28,400
like uh this is a live workshop so i'll

00:02:26,000 --> 00:02:29,840
really uh do a show and tell mainly not

00:02:28,400 --> 00:02:31,680
slides

00:02:29,840 --> 00:02:33,120
uh so we will walk through like i

00:02:31,680 --> 00:02:36,000
mentioned earlier

00:02:33,120 --> 00:02:37,200
um how to do a default installation of

00:02:36,000 --> 00:02:40,959
spinnaker

00:02:37,200 --> 00:02:42,920
using help uh very quickly

00:02:40,959 --> 00:02:45,599
and then um you know look at all the

00:02:42,920 --> 00:02:48,720
customizations that are provided

00:02:45,599 --> 00:02:50,879
uh within the framework so that you can

00:02:48,720 --> 00:02:52,160
do a lot of the customizations that are

00:02:50,879 --> 00:02:55,920
needed

00:02:52,160 --> 00:02:58,239
for a production deployment of spinnaker

00:02:55,920 --> 00:02:59,840
you know including updating service and

00:02:58,239 --> 00:03:02,959
profile settings

00:02:59,840 --> 00:03:05,519
uh updating images that are used using

00:03:02,959 --> 00:03:07,840
custom images

00:03:05,519 --> 00:03:09,360
how you can scale it up custom size your

00:03:07,840 --> 00:03:11,280
images so

00:03:09,360 --> 00:03:12,720
basically and high value basically all

00:03:11,280 --> 00:03:15,599
the hal commands

00:03:12,720 --> 00:03:16,959
that you typically use to manage the

00:03:15,599 --> 00:03:20,000
component sizing

00:03:16,959 --> 00:03:22,480
and high availability of the components

00:03:20,000 --> 00:03:23,120
uh you can manage them through a

00:03:22,480 --> 00:03:25,280
spinnaker

00:03:23,120 --> 00:03:26,879
or through the health chart so i will

00:03:25,280 --> 00:03:28,959
show how you can do it

00:03:26,879 --> 00:03:30,720
and then you know any additional health

00:03:28,959 --> 00:03:34,319
configurations that you want to do

00:03:30,720 --> 00:03:37,360
that you can do from here so i'll

00:03:34,319 --> 00:03:39,760
show you some of those things and again

00:03:37,360 --> 00:03:41,840
a walk through all the a few other

00:03:39,760 --> 00:03:45,040
configuration items that are there like

00:03:41,840 --> 00:03:45,040
storage and all that

00:03:45,519 --> 00:03:49,840
uh working along um you know if you want

00:03:48,640 --> 00:03:52,319
to work along with me

00:03:49,840 --> 00:03:53,439
um if you have a kubernetes cluster

00:03:52,319 --> 00:03:56,239
readily available

00:03:53,439 --> 00:03:57,519
i think you can try that as i uh walk

00:03:56,239 --> 00:03:59,920
through it

00:03:57,519 --> 00:04:01,599
uh a requirement that is there is that

00:03:59,920 --> 00:04:02,319
you know it's good to have a persistent

00:04:01,599 --> 00:04:05,599
volume

00:04:02,319 --> 00:04:07,360
available because um you know as you

00:04:05,599 --> 00:04:09,360
prob i'm assuming all of you guys are

00:04:07,360 --> 00:04:11,439
familiar with the spinnaker architecture

00:04:09,360 --> 00:04:15,040
i'm not covering that um

00:04:11,439 --> 00:04:15,599
at all here um you know it uses some

00:04:15,040 --> 00:04:18,160
storage

00:04:15,599 --> 00:04:19,199
right to store the pipelines runtime

00:04:18,160 --> 00:04:21,280
data

00:04:19,199 --> 00:04:22,960
and all that so it uses a redis and a

00:04:21,280 --> 00:04:25,759
menu and both

00:04:22,960 --> 00:04:26,479
out of the box and and those require

00:04:25,759 --> 00:04:28,800
storage

00:04:26,479 --> 00:04:32,400
and it the sunshine by default uses

00:04:28,800 --> 00:04:32,400
persistent volume to store this

00:04:32,880 --> 00:04:36,960
to access it it's nice to also have a

00:04:35,199 --> 00:04:39,759
load balancer available

00:04:36,960 --> 00:04:42,000
if not like i'll show it to you also how

00:04:39,759 --> 00:04:43,440
you can just access it locally but you

00:04:42,000 --> 00:04:44,560
know if you want to make it available

00:04:43,440 --> 00:04:46,720
for others to see

00:04:44,560 --> 00:04:48,720
it's it's good that you have a load

00:04:46,720 --> 00:04:50,080
balancer available in your kubernetes

00:04:48,720 --> 00:04:52,080
cluster

00:04:50,080 --> 00:04:54,320
now if you use any of the publicly

00:04:52,080 --> 00:04:55,520
available kubernetes clusters like you

00:04:54,320 --> 00:05:00,800
know

00:04:55,520 --> 00:05:03,360
eks gke or you know azure aks

00:05:00,800 --> 00:05:05,039
they do provide support for these out of

00:05:03,360 --> 00:05:08,000
the box

00:05:05,039 --> 00:05:10,720
and today i'm going to use actually a

00:05:08,000 --> 00:05:14,720
kubernetes cluster in google cloud gke

00:05:10,720 --> 00:05:14,720
to to show and tell

00:05:14,880 --> 00:05:18,639
now um whatever code i'm going to use or

00:05:17,520 --> 00:05:22,320
samples of it

00:05:18,639 --> 00:05:24,320
are available in this git ripper and a

00:05:22,320 --> 00:05:27,919
little while ago i posted that

00:05:24,320 --> 00:05:31,440
link also um in the

00:05:27,919 --> 00:05:33,120
also in the uh chat so you know if you

00:05:31,440 --> 00:05:34,800
want to follow along you can just

00:05:33,120 --> 00:05:37,039
click on that link and it will take you

00:05:34,800 --> 00:05:37,039
there

00:05:37,520 --> 00:05:40,960
with that let's go to this um github

00:05:40,320 --> 00:05:42,880
link so

00:05:40,960 --> 00:05:44,240
you know if you go to spinnaker summit

00:05:42,880 --> 00:05:45,919
00:05:44,240 --> 00:05:47,360
there is the spinnaker um there are

00:05:45,919 --> 00:05:49,919
other stuff in there

00:05:47,360 --> 00:05:51,039
you can look at also in there which i

00:05:49,919 --> 00:05:54,080
use for

00:05:51,039 --> 00:05:55,520
some of my other sessions but

00:05:54,080 --> 00:05:59,120
you know today i'm going to you

00:05:55,520 --> 00:05:59,120
concentrate on the section

00:05:59,440 --> 00:06:03,600
where the content is in the spinnaker

00:06:01,120 --> 00:06:03,600
directory

00:06:04,240 --> 00:06:08,960
before going in there

00:06:07,280 --> 00:06:11,120
um there are a couple of things

00:06:08,960 --> 00:06:14,160
happening with help

00:06:11,120 --> 00:06:14,160
especially um

00:06:14,720 --> 00:06:19,440
repose publicly available ripples there

00:06:17,680 --> 00:06:21,360
was the stable ripper

00:06:19,440 --> 00:06:23,840
if you guys have been following or know

00:06:21,360 --> 00:06:23,840
about it

00:06:24,000 --> 00:06:29,039
that repo they're sort of not supporting

00:06:27,680 --> 00:06:32,080
and they're basically

00:06:29,039 --> 00:06:35,520
making it a distributed owner

00:06:32,080 --> 00:06:38,960
owned uh public reports right

00:06:35,520 --> 00:06:40,720
so um i checked yesterday this is still

00:06:38,960 --> 00:06:43,280
available

00:06:40,720 --> 00:06:44,720
where you can use the stable repo that's

00:06:43,280 --> 00:06:47,840
hosted in google cloud

00:06:44,720 --> 00:06:49,759
and so you can use that i believe

00:06:47,840 --> 00:06:50,800
november 13 they have been saying this

00:06:49,759 --> 00:06:53,039
will be

00:06:50,800 --> 00:06:54,240
you know discontinued and not available

00:06:53,039 --> 00:06:57,680
anymore

00:06:54,240 --> 00:07:00,000
and in fact what we did is we took it uh

00:06:57,680 --> 00:07:02,560
what were whatever was available in uh

00:07:00,000 --> 00:07:06,160
the public ripple and have

00:07:02,560 --> 00:07:08,960
replicated it in the

00:07:06,160 --> 00:07:10,560
official way to manage these repos going

00:07:08,960 --> 00:07:14,479
forward

00:07:10,560 --> 00:07:18,080
and we plan to work with the community

00:07:14,479 --> 00:07:21,520
to get uh this within the community role

00:07:18,080 --> 00:07:23,520
this really should be owned and hosted

00:07:21,520 --> 00:07:25,759
by the spinnaker community

00:07:23,520 --> 00:07:26,880
but till that happens and you want to

00:07:25,759 --> 00:07:30,160
play around

00:07:26,880 --> 00:07:31,680
you can use this together and i'll be

00:07:30,160 --> 00:07:33,759
using this one today to

00:07:31,680 --> 00:07:37,199
to run through it again this is exactly

00:07:33,759 --> 00:07:41,599
same replica of what's available

00:07:37,199 --> 00:07:41,599
as part of the stable spinnaker

00:07:43,280 --> 00:07:48,720
so let's go ahead and kick this off like

00:07:46,800 --> 00:07:51,599
i'm showing it to you here

00:07:48,720 --> 00:07:53,360
and what we'll do is that if you don't

00:07:51,599 --> 00:07:56,879
have um

00:07:53,360 --> 00:07:58,479
persistent volume and

00:07:56,879 --> 00:08:00,800
or our load balancer mainly the

00:07:58,479 --> 00:08:03,680
persistent volume i'll show you

00:08:00,800 --> 00:08:05,120
how you can turn it off and work without

00:08:03,680 --> 00:08:08,240
a persistent volume

00:08:05,120 --> 00:08:11,680
but let's first go ahead and

00:08:08,240 --> 00:08:12,479
run through this okay so if i go ahead

00:08:11,680 --> 00:08:16,400
here

00:08:12,479 --> 00:08:18,960
and look at how repo list

00:08:16,400 --> 00:08:21,360
you can see that i have added this repo

00:08:18,960 --> 00:08:24,319
already here

00:08:21,360 --> 00:08:24,879
uh so if you do this run this command

00:08:24,319 --> 00:08:28,160
help

00:08:24,879 --> 00:08:30,960
repo and give it a name you know i gave

00:08:28,160 --> 00:08:34,560
the name spinnaker and this url

00:08:30,960 --> 00:08:39,599
it's basically added as a repo available

00:08:34,560 --> 00:08:42,719
uh to help right over here right

00:08:39,599 --> 00:08:45,680
to install it with all the defaults

00:08:42,719 --> 00:08:47,360
nothing else just take the defaults and

00:08:45,680 --> 00:08:49,360
install it for me

00:08:47,360 --> 00:08:50,880
i'm going to basically run this command

00:08:49,360 --> 00:08:52,720
help install

00:08:50,880 --> 00:08:55,200
give it a name space i want to install

00:08:52,720 --> 00:08:58,640
it to give it a name

00:08:55,200 --> 00:09:00,320
and say use install the charge spinnaker

00:08:58,640 --> 00:09:02,560
in the repost spinnaker

00:09:00,320 --> 00:09:04,320
a lot of words spinnaker word in here

00:09:02,560 --> 00:09:07,680
right but just wanted to

00:09:04,320 --> 00:09:09,920
point out maybe i'll go and update this

00:09:07,680 --> 00:09:11,200
so that it's clear what each parameter

00:09:09,920 --> 00:09:12,800
are so

00:09:11,200 --> 00:09:15,120
this is the name space in which to

00:09:12,800 --> 00:09:16,160
deploy this is the name of your helm

00:09:15,120 --> 00:09:18,959
install

00:09:16,160 --> 00:09:20,720
uh this is the repo that you added and

00:09:18,959 --> 00:09:22,240
this is the name of the chart within

00:09:20,720 --> 00:09:23,839
variable right that's what we're going

00:09:22,240 --> 00:09:27,519
to install

00:09:23,839 --> 00:09:29,920
let's copy this in here

00:09:27,519 --> 00:09:29,920
oops

00:09:32,080 --> 00:09:39,680
okay there you go and

00:09:36,640 --> 00:09:45,600
let's look at our name space cube ctl

00:09:39,680 --> 00:09:45,600
get bars minus minus and spin occur

00:09:47,120 --> 00:09:50,560
and you know you don't see any spinnaker

00:09:49,760 --> 00:09:52,959
i mean uh

00:09:50,560 --> 00:09:54,240
running in there there's some remnants

00:09:52,959 --> 00:09:57,519
from my past

00:09:54,240 --> 00:09:58,320
installs um and you know trying things

00:09:57,519 --> 00:10:00,320
out

00:09:58,320 --> 00:10:02,800
before this session to make sure

00:10:00,320 --> 00:10:05,440
everything is working and all that

00:10:02,800 --> 00:10:06,079
so what i just did i just kicked it off

00:10:05,440 --> 00:10:09,440
right

00:10:06,079 --> 00:10:12,160
it's helm installed in the namespace

00:10:09,440 --> 00:10:12,720
spinnaker spinnaker right like i said it

00:10:12,160 --> 00:10:14,640
should

00:10:12,720 --> 00:10:16,959
take less than 10 minutes and we should

00:10:14,640 --> 00:10:20,480
have a running and a working spinnaker

00:10:16,959 --> 00:10:23,120
available with that

00:10:20,480 --> 00:10:24,320
uh let's go look at a few things while

00:10:23,120 --> 00:10:28,240
this is running

00:10:24,320 --> 00:10:31,120
like i said if you don't have um storage

00:10:28,240 --> 00:10:32,240
or if you don't have a load balancer

00:10:31,120 --> 00:10:36,079
mainly the storage

00:10:32,240 --> 00:10:39,440
uh what can you do i have lost my cursor

00:10:36,079 --> 00:10:39,440
and here i got it back

00:10:39,839 --> 00:10:46,000
so this is a local copy of

00:10:42,959 --> 00:10:48,000
that gate ripper that you just saw and

00:10:46,000 --> 00:10:52,320
this is that spinnaker directory

00:10:48,000 --> 00:10:52,320
and this is the values.yammer

00:10:52,959 --> 00:10:58,959
uh if you look at it um

00:10:56,880 --> 00:11:00,640
it is going to install a spinnaker

00:10:58,959 --> 00:11:04,160
version 122.

00:11:00,640 --> 00:11:05,040
doctor okay and it's going to pull in

00:11:04,160 --> 00:11:08,399
the images

00:11:05,040 --> 00:11:11,519
hallyard image from the public

00:11:08,399 --> 00:11:14,560
open source location where

00:11:11,519 --> 00:11:17,360
the hillyard image is available and it's

00:11:14,560 --> 00:11:20,000
going to use the version 132.

00:11:17,360 --> 00:11:20,640
i'm sure all of you guys already know if

00:11:20,000 --> 00:11:23,279
i go to

00:11:20,640 --> 00:11:23,279
spinnaker

00:11:25,040 --> 00:11:31,600
xpi versions

00:11:29,920 --> 00:11:33,760
it will tell you you know what are the

00:11:31,600 --> 00:11:36,240
versions that's available that you can

00:11:33,760 --> 00:11:37,360
use okay these are the current stable

00:11:36,240 --> 00:11:41,120
versions

00:11:37,360 --> 00:11:44,000
and also if i say hall yard

00:11:41,120 --> 00:11:44,000
versions

00:11:45,680 --> 00:11:49,920
i can go ahead here and i can look at

00:11:48,240 --> 00:11:52,959
the versions available so

00:11:49,920 --> 00:11:57,839
you know 13 days ago they release 140

00:11:52,959 --> 00:11:57,839
but i'm using 138.00

00:12:00,720 --> 00:12:06,560
now if you don't have persistent volume

00:12:04,320 --> 00:12:09,279
right and you want to try it out like

00:12:06,560 --> 00:12:11,600
you're using say local menu

00:12:09,279 --> 00:12:13,839
on your local laptop and you want to try

00:12:11,600 --> 00:12:16,720
this one out

00:12:13,839 --> 00:12:19,040
what you can do is ahead of time create

00:12:16,720 --> 00:12:22,560
some persistent volumes

00:12:19,040 --> 00:12:25,600
giving them around 10 gb each or

00:12:22,560 --> 00:12:27,680
you know you can turn persistence off uh

00:12:25,600 --> 00:12:30,240
set it to false then it will not try to

00:12:27,680 --> 00:12:33,279
create any persistent uh

00:12:30,240 --> 00:12:35,680
volumes for hallyard here

00:12:33,279 --> 00:12:37,360
uh you know i don't probably need to say

00:12:35,680 --> 00:12:42,160
uh that if you

00:12:37,360 --> 00:12:44,480
uh do not set the persistent to true

00:12:42,160 --> 00:12:46,480
you basically if the halyard part goes

00:12:44,480 --> 00:12:50,000
away all the config changes

00:12:46,480 --> 00:12:53,519
that you made would be lost right

00:12:50,000 --> 00:12:54,079
now the good thing about using helm and

00:12:53,519 --> 00:12:56,880
all that

00:12:54,079 --> 00:12:58,560
is that if you run it again you will get

00:12:56,880 --> 00:13:00,399
it back but you know if the helm part

00:12:58,560 --> 00:13:02,399
goes away and comes back up

00:13:00,399 --> 00:13:04,399
any of the changes made those are lost

00:13:02,399 --> 00:13:07,040
though so

00:13:04,399 --> 00:13:08,639
so that's the risk so you run into but

00:13:07,040 --> 00:13:10,480
if you want to just play around with

00:13:08,639 --> 00:13:12,240
that and see how it works and you don't

00:13:10,480 --> 00:13:13,600
have a persistent volume

00:13:12,240 --> 00:13:15,360
and you don't want to go ahead and

00:13:13,600 --> 00:13:18,720
create a persistent volume

00:13:15,360 --> 00:13:20,720
uh outside and make it available you can

00:13:18,720 --> 00:13:22,720
just turn it off

00:13:20,720 --> 00:13:23,920
the two other places where you need to

00:13:22,720 --> 00:13:27,600
turn persistence

00:13:23,920 --> 00:13:29,040
off in the default setup is if i go all

00:13:27,600 --> 00:13:35,760
the way down

00:13:29,040 --> 00:13:39,440
and let me search for mania

00:13:35,760 --> 00:13:41,760
uh it menu is where it's

00:13:39,440 --> 00:13:43,040
where spinnaker uses to store all the

00:13:41,760 --> 00:13:46,959
pipeline information

00:13:43,040 --> 00:13:50,720
right and there is this

00:13:46,959 --> 00:13:53,279
uh settings over here persistent enabled

00:13:50,720 --> 00:13:53,279
false

00:13:53,600 --> 00:13:58,240
so you can turn it up by default it is

00:13:56,560 --> 00:13:59,920
enabled true

00:13:58,240 --> 00:14:01,600
so you don't need to do it but if you

00:13:59,920 --> 00:14:02,720
don't want to use persistence with

00:14:01,600 --> 00:14:05,040
menial

00:14:02,720 --> 00:14:06,720
you can basically uncomment these lines

00:14:05,040 --> 00:14:07,519
basically these two lines if you're

00:14:06,720 --> 00:14:10,560
uncommon

00:14:07,519 --> 00:14:16,240
and run then menio will not

00:14:10,560 --> 00:14:18,720
use the persistence in there

00:14:16,240 --> 00:14:20,240
and the other place is redis which is

00:14:18,720 --> 00:14:23,440
right on top of this

00:14:20,240 --> 00:14:26,720
i believe it is right here uh

00:14:23,440 --> 00:14:27,120
redis again the same thing if you don't

00:14:26,720 --> 00:14:29,920
want

00:14:27,120 --> 00:14:32,399
persistence or don't have it you can

00:14:29,920 --> 00:14:36,240
just go ahead and turn it off right

00:14:32,399 --> 00:14:36,800
over here now while i was talking about

00:14:36,240 --> 00:14:42,000
this

00:14:36,800 --> 00:14:42,000
i noticed the hand chart came back

00:14:42,160 --> 00:14:47,279
now let's look at the pods that got

00:14:44,800 --> 00:14:49,360
created

00:14:47,279 --> 00:14:50,800
uh cube ctl get parts minus and

00:14:49,360 --> 00:14:52,720
spinnaker

00:14:50,800 --> 00:14:54,880
uh you can see the pods are coming up

00:14:52,720 --> 00:14:58,399
now all of them are not ready yet

00:14:54,880 --> 00:15:01,440
a few of them are still getting uh

00:14:58,399 --> 00:15:05,040
ready so uh once they are ready

00:15:01,440 --> 00:15:05,040
i will uh do it

00:15:10,839 --> 00:15:14,800
okay

00:15:12,399 --> 00:15:17,040
now once it finished you will see it

00:15:14,800 --> 00:15:19,360
gives you some information

00:15:17,040 --> 00:15:21,279
is to like you know how you can access

00:15:19,360 --> 00:15:23,440
uh the spinnaker

00:15:21,279 --> 00:15:24,800
uh locally basically and that's how

00:15:23,440 --> 00:15:29,360
we'll do it basically

00:15:24,800 --> 00:15:32,160
you expose the deck part and cue forward

00:15:29,360 --> 00:15:33,040
port forward to it and then you port

00:15:32,160 --> 00:15:35,519
forward

00:15:33,040 --> 00:15:36,639
uh to the gate part deck and gate and

00:15:35,519 --> 00:15:40,560
that's all you need

00:15:36,639 --> 00:15:42,240
uh to be able to access

00:15:40,560 --> 00:15:43,920
and like they say that you know if you

00:15:42,240 --> 00:15:47,600
want to customize it

00:15:43,920 --> 00:15:48,959
nothing stopping you from connecting to

00:15:47,600 --> 00:15:51,920
spinnaker

00:15:48,959 --> 00:15:53,199
uh hallyard pod and then run the hal

00:15:51,920 --> 00:15:56,399
commands if you have been

00:15:53,199 --> 00:15:58,560
used to running the hull commands but uh

00:15:56,399 --> 00:16:01,360
you know my recommendation always is

00:15:58,560 --> 00:16:03,759
that if you go run hal commands in there

00:16:01,360 --> 00:16:06,000
you lose them really uh if it goes away

00:16:03,759 --> 00:16:09,120
or you lose your persistent

00:16:06,000 --> 00:16:10,399
volume or anything like that best is to

00:16:09,120 --> 00:16:13,360
always come and

00:16:10,399 --> 00:16:15,440
edit this values.yaml and add them in

00:16:13,360 --> 00:16:15,920
this file right so they're persistent

00:16:15,440 --> 00:16:18,800
and

00:16:15,920 --> 00:16:19,440
all the commands that you can run

00:16:18,800 --> 00:16:22,160
through hal

00:16:19,440 --> 00:16:23,199
are i don't put up basically run them

00:16:22,160 --> 00:16:26,720
multiple times

00:16:23,199 --> 00:16:27,440
it doesn't have any uh side effects

00:16:26,720 --> 00:16:30,480
basically

00:16:27,440 --> 00:16:32,800
right so you can manage those

00:16:30,480 --> 00:16:34,800
values.yaml in your get

00:16:32,800 --> 00:16:36,639
source control it approval so you

00:16:34,800 --> 00:16:39,440
exactly know

00:16:36,639 --> 00:16:40,480
what's getting deployed and manage that

00:16:39,440 --> 00:16:43,759
deployment

00:16:40,480 --> 00:16:44,880
so my suggestion of a good practice is

00:16:43,759 --> 00:16:48,160
that

00:16:44,880 --> 00:16:49,040
don't go to hall yard and run the

00:16:48,160 --> 00:16:52,959
commands

00:16:49,040 --> 00:16:56,720
but update the values.yaml

00:16:52,959 --> 00:16:56,720
to make the changes right

00:16:57,040 --> 00:17:01,519
let's look at it if all the pods are

00:16:58,959 --> 00:17:04,240
ready or not

00:17:01,519 --> 00:17:05,039
they are ready and actually uh we did

00:17:04,240 --> 00:17:08,559
pretty good

00:17:05,039 --> 00:17:09,120
um less than five minutes or let me take

00:17:08,559 --> 00:17:12,000
the

00:17:09,120 --> 00:17:13,039
initial one when the hell yard came up

00:17:12,000 --> 00:17:15,839
um

00:17:13,039 --> 00:17:17,280
in about six and a half minutes we have

00:17:15,839 --> 00:17:20,880
our spinner cut up and running

00:17:17,280 --> 00:17:23,360
right uh it probably took a little

00:17:20,880 --> 00:17:24,240
less because the images were downloaded

00:17:23,360 --> 00:17:26,720
but you know

00:17:24,240 --> 00:17:27,760
you can probably give a minute maybe

00:17:26,720 --> 00:17:30,080
maximum

00:17:27,760 --> 00:17:32,160
to this for it to download the images

00:17:30,080 --> 00:17:35,039
otherwise you know

00:17:32,160 --> 00:17:37,360
seven and a half to eight minutes in a

00:17:35,039 --> 00:17:39,280
brand new cluster you can have spinnaker

00:17:37,360 --> 00:17:42,160
up and run

00:17:39,280 --> 00:17:45,200
let's access this like they say uh i'm

00:17:42,160 --> 00:17:46,799
going to just grab this thing

00:17:45,200 --> 00:17:48,960
and after i've done done this i will

00:17:46,799 --> 00:17:49,840
basically you know show you how you can

00:17:48,960 --> 00:17:53,360
expose this

00:17:49,840 --> 00:17:56,720
as a service uh

00:17:53,360 --> 00:18:01,840
so let's get the deckpod uh url

00:17:56,720 --> 00:18:01,840
and let's um put forward this thing

00:18:03,440 --> 00:18:06,640
let me run this in the background so

00:18:04,960 --> 00:18:09,600
that i can run multiple uh

00:18:06,640 --> 00:18:12,720
of these things over here so i have a

00:18:09,600 --> 00:18:15,200
deck being port forwarded locally

00:18:12,720 --> 00:18:17,440
and let me then do this with the gate

00:18:15,200 --> 00:18:21,280
pod

00:18:17,440 --> 00:18:23,840
so now i know what my gate board is

00:18:21,280 --> 00:18:29,840
and let's put forward the gate part to

00:18:23,840 --> 00:18:29,840
the localhost

00:18:30,240 --> 00:18:33,679
so i have both of the these being port

00:18:32,240 --> 00:18:36,799
forwarded right

00:18:33,679 --> 00:18:40,640
now let me go to the browser window and

00:18:36,799 --> 00:18:40,640
connect to localhost

00:18:41,440 --> 00:18:44,640
colon 9000

00:18:47,520 --> 00:18:51,600
there you go i have my spinnaker up and

00:18:50,400 --> 00:18:54,320
running

00:18:51,600 --> 00:18:55,840
uh in less than 10 minutes that i have a

00:18:54,320 --> 00:18:58,000
spinnaker up and running that i can

00:18:55,840 --> 00:19:02,200
start playing around with

00:18:58,000 --> 00:19:05,760
it has installed the version 122.2

00:19:02,200 --> 00:19:11,840
122.2 and i can start go ahead and

00:19:05,760 --> 00:19:11,840
create an application

00:19:19,679 --> 00:19:22,799
um you know i'll not do anything else

00:19:21,520 --> 00:19:25,600
just let it create

00:19:22,799 --> 00:19:27,360
um you know this is not about spinnaker

00:19:25,600 --> 00:19:29,039
i'm assuming you guys know spinnaker

00:19:27,360 --> 00:19:31,760
already or if not you know there are a

00:19:29,039 --> 00:19:34,320
lot of other sessions going around

00:19:31,760 --> 00:19:36,080
uh where you could actually go ahead and

00:19:34,320 --> 00:19:39,039
learn other features of spinnaker

00:19:36,080 --> 00:19:40,480
uh and um there are a couple of you know

00:19:39,039 --> 00:19:42,240
blogs i've done

00:19:40,480 --> 00:19:44,000
earlier on these things so you know you

00:19:42,240 --> 00:19:46,080
guys can find it but uh

00:19:44,000 --> 00:19:47,760
just to let you know that hey i have a

00:19:46,080 --> 00:19:51,120
spinnaker up and running

00:19:47,760 --> 00:19:53,760
that i can actually um uh

00:19:51,120 --> 00:19:54,559
use and run so let me create a uh

00:19:53,760 --> 00:19:57,440
pipeline here

00:19:54,559 --> 00:19:57,440
first pipeline

00:19:59,520 --> 00:20:06,159
you know i will just make it a simple uh

00:20:02,400 --> 00:20:08,880
pipeline where i have a wait stage

00:20:06,159 --> 00:20:10,559
uh let's wait it for five seconds you

00:20:08,880 --> 00:20:12,320
know traditional thing

00:20:10,559 --> 00:20:14,240
let's add one more stage which is a

00:20:12,320 --> 00:20:17,200
manual judgment easy it doesn't require

00:20:14,240 --> 00:20:17,200
much things in there

00:20:17,280 --> 00:20:22,720
which is triggered after the wait stage

00:20:19,360 --> 00:20:25,520
will ask for an input

00:20:22,720 --> 00:20:25,520
proceed

00:20:26,640 --> 00:20:30,480
whatever just some input that i can give

00:20:28,720 --> 00:20:32,240
right which i can use for downstream

00:20:30,480 --> 00:20:35,840
processing

00:20:32,240 --> 00:20:35,840
and let's save the changes

00:20:36,000 --> 00:20:39,120
so you have a pipeline ready over here

00:20:38,720 --> 00:20:43,039
uh

00:20:39,120 --> 00:20:43,039
let's try to run this manually

00:20:44,880 --> 00:20:48,640
right it triggered off it will wait for

00:20:46,640 --> 00:20:50,720
five seconds over here

00:20:48,640 --> 00:20:52,640
and then it's waiting for the manual

00:20:50,720 --> 00:20:55,679
judgment

00:20:52,640 --> 00:20:58,480
let's say proceed and i say continue

00:20:55,679 --> 00:21:00,320
and voila the pipeline is done so you

00:20:58,480 --> 00:21:02,320
know all within 10 minutes i have a

00:21:00,320 --> 00:21:05,360
spinnaker up and running uh

00:21:02,320 --> 00:21:06,320
created my first hello world type

00:21:05,360 --> 00:21:09,679
pipeline

00:21:06,320 --> 00:21:13,600
and you know it's ready

00:21:09,679 --> 00:21:15,679
okay let's uh get out of these things

00:21:13,600 --> 00:21:16,960
i had the other one running let me kill

00:21:15,679 --> 00:21:20,559
that thing

00:21:16,960 --> 00:21:21,600
so what you saw is how easily i was able

00:21:20,559 --> 00:21:26,640
to bring up

00:21:21,600 --> 00:21:29,360
a spinnaker instance using help

00:21:26,640 --> 00:21:31,840
all i needed was an available kubernetes

00:21:29,360 --> 00:21:31,840
instance

00:21:32,000 --> 00:21:35,200
let's uh talk about the next thing which

00:21:34,240 --> 00:21:38,880
a lot of people

00:21:35,200 --> 00:21:41,679
ask about and i'm going to go here is

00:21:38,880 --> 00:21:44,000
how do i make it available i i access

00:21:41,679 --> 00:21:45,840
accessed it from my local

00:21:44,000 --> 00:21:47,840
laptop right now i want to make it

00:21:45,840 --> 00:21:49,280
available to tom

00:21:47,840 --> 00:21:51,039
everyone's virtual these days right

00:21:49,280 --> 00:21:52,640
who's working from home and i want to

00:21:51,039 --> 00:21:56,080
make this available to tom

00:21:52,640 --> 00:21:56,640
how do i do that so what you can do is

00:21:56,080 --> 00:21:58,720
basically

00:21:56,640 --> 00:22:00,799
create services so if you go to that

00:21:58,720 --> 00:22:05,159
same

00:22:00,799 --> 00:22:06,559
github repo there's a file called

00:22:05,159 --> 00:22:09,600
spinservices.yaml

00:22:06,559 --> 00:22:13,120
right what it does is that we

00:22:09,600 --> 00:22:17,039
basically create two node ports

00:22:13,120 --> 00:22:20,000
uh for the spin gate service

00:22:17,039 --> 00:22:22,000
and then what we do is we create an

00:22:20,000 --> 00:22:26,159
ingress

00:22:22,000 --> 00:22:27,880
okay now oh

00:22:26,159 --> 00:22:30,799
if you are not looking for

00:22:27,880 --> 00:22:34,559
authentication

00:22:30,799 --> 00:22:37,840
you could always uh just create

00:22:34,559 --> 00:22:41,280
a load balancer service uh

00:22:37,840 --> 00:22:43,840
for spindex and it would work right

00:22:41,280 --> 00:22:44,720
like i'm here if i actually if you guys

00:22:43,840 --> 00:22:48,400
know this if i

00:22:44,720 --> 00:22:51,039
say gate slash applications

00:22:48,400 --> 00:22:52,640
it will return me my application i did

00:22:51,039 --> 00:22:56,000
something wrong here

00:22:52,640 --> 00:22:59,280
oh i did shut these both of these down

00:22:56,000 --> 00:23:03,120
so let's do the port forward to 9000

00:22:59,280 --> 00:23:04,480
all over again notice i just pulled

00:23:03,120 --> 00:23:08,000
forward it to 9000

00:23:04,480 --> 00:23:10,400
right i didn't do too bad

00:23:08,000 --> 00:23:11,360
um so you can see that it just found and

00:23:10,400 --> 00:23:14,000
returned

00:23:11,360 --> 00:23:16,720
the applications that are available i

00:23:14,000 --> 00:23:19,840
did not expose gate here

00:23:16,720 --> 00:23:23,440
so what it means is

00:23:19,840 --> 00:23:25,679
that the default uh spinnaker

00:23:23,440 --> 00:23:28,559
installation through helm charts what it

00:23:25,679 --> 00:23:28,559
does it it

00:23:29,600 --> 00:23:37,760
routes gate through this

00:23:32,720 --> 00:23:40,480
path gate and in halyard it's configured

00:23:37,760 --> 00:23:42,000
if you know the overrides it is

00:23:40,480 --> 00:23:45,120
configured

00:23:42,000 --> 00:23:48,720
to route a gate request through

00:23:45,120 --> 00:23:50,480
slash gate so it works

00:23:48,720 --> 00:23:52,720
so what it means is that if you don't

00:23:50,480 --> 00:23:56,799
care about authentication

00:23:52,720 --> 00:23:57,760
you could just create a load balancer

00:23:56,799 --> 00:24:01,039
service to

00:23:57,760 --> 00:24:02,159
deck and you are done but if you want to

00:24:01,039 --> 00:24:05,840
do authentication

00:24:02,159 --> 00:24:07,760
specifically if you want to use ldap

00:24:05,840 --> 00:24:08,960
what you should do is you need to create

00:24:07,760 --> 00:24:12,080
an ingress

00:24:08,960 --> 00:24:14,880
right so you create an ingress

00:24:12,080 --> 00:24:16,640
where everything is routed to deck

00:24:14,880 --> 00:24:19,520
except these two extra ones slash

00:24:16,640 --> 00:24:20,000
login slash auth which are routed to

00:24:19,520 --> 00:24:24,000
spin

00:24:20,000 --> 00:24:25,760
uh gate services which i have created as

00:24:24,000 --> 00:24:27,440
note port services because

00:24:25,760 --> 00:24:31,279
these are not exposed externally

00:24:27,440 --> 00:24:34,320
externally the access is through ingress

00:24:31,279 --> 00:24:36,559
so let's uh run this file

00:24:34,320 --> 00:24:38,799
and again if you have any questions what

00:24:36,559 --> 00:24:40,799
i'm talking about and you know any other

00:24:38,799 --> 00:24:44,240
comments uh feel free to

00:24:40,799 --> 00:24:46,799
um you know uh ask in the chat

00:24:44,240 --> 00:24:47,840
and i would be happy to answer them so

00:24:46,799 --> 00:24:50,880
cube ctl

00:24:47,840 --> 00:24:55,039
apply minus f

00:24:50,880 --> 00:24:57,840
uh is the spin services.tml and

00:24:55,039 --> 00:25:01,370
mine is in the namespace vinegar so it's

00:24:57,840 --> 00:25:02,799
in spanner

00:25:01,370 --> 00:25:04,559
[Music]

00:25:02,799 --> 00:25:06,559
looks like i had an ingress from an

00:25:04,559 --> 00:25:09,200
earlier time already in there

00:25:06,559 --> 00:25:11,039
so it's going to reuse that ingress so

00:25:09,200 --> 00:25:16,080
let's look at cube ctl

00:25:11,039 --> 00:25:16,080
get ingress minus n

00:25:16,400 --> 00:25:24,400
finicker there is an ip address

00:25:21,360 --> 00:25:24,799
and i think everything should be ready

00:25:24,400 --> 00:25:28,000
to

00:25:24,799 --> 00:25:30,720
go let's see if we can hit this or we

00:25:28,000 --> 00:25:30,720
need more time

00:25:31,840 --> 00:25:36,320
so that's the ip address and i go

00:25:37,679 --> 00:25:45,200
that ip address enter

00:25:40,960 --> 00:25:46,960
uh so the server is not yet ready yet uh

00:25:45,200 --> 00:25:48,880
it's probably because let's give it a

00:25:46,960 --> 00:25:49,520
few a few more minutes it's probably not

00:25:48,880 --> 00:25:52,240
yet

00:25:49,520 --> 00:25:53,360
ready so we'll come back and look at

00:25:52,240 --> 00:25:55,360
this let's talk about

00:25:53,360 --> 00:25:59,520
a few other things and then we'll see if

00:25:55,360 --> 00:25:59,520
the ingress stabilized over here

00:26:04,080 --> 00:26:12,080
so we talked about what all

00:26:08,159 --> 00:26:14,080
enhancements or what we can do

00:26:12,080 --> 00:26:15,919
so if you go look at that same uh gate

00:26:14,080 --> 00:26:18,240
triple i have this

00:26:15,919 --> 00:26:18,960
thing called values advanced dot yama

00:26:18,240 --> 00:26:21,039
that shows

00:26:18,960 --> 00:26:23,120
all the other enhancements that you can

00:26:21,039 --> 00:26:25,679
do right

00:26:23,120 --> 00:26:26,240
uh first thing which i'm going to talk

00:26:25,679 --> 00:26:28,640
about

00:26:26,240 --> 00:26:29,360
uh is not this section but other

00:26:28,640 --> 00:26:33,120
sections

00:26:29,360 --> 00:26:36,080
uh here uh

00:26:33,120 --> 00:26:37,760
if you have been making changes to your

00:26:36,080 --> 00:26:40,400
configurations

00:26:37,760 --> 00:26:43,840
to your profile configs like updating

00:26:40,400 --> 00:26:46,080
gate local or cloud driver local

00:26:43,840 --> 00:26:47,360
you can basically make them available

00:26:46,080 --> 00:26:50,559
right here

00:26:47,360 --> 00:26:51,360
right additional profile config maps and

00:26:50,559 --> 00:26:53,919
you just

00:26:51,360 --> 00:26:54,880
put them in here now you don't need to

00:26:53,919 --> 00:26:56,880
do this actually

00:26:54,880 --> 00:26:59,039
right in this file if you know what it

00:26:56,880 --> 00:27:02,400
is you can go ahead and create config

00:26:59,039 --> 00:27:03,279
maps and uh just see what that config

00:27:02,400 --> 00:27:07,039
map is

00:27:03,279 --> 00:27:07,919
right you could do that but otherwise

00:27:07,039 --> 00:27:11,520
you can just

00:27:07,919 --> 00:27:14,240
define them right over here so

00:27:11,520 --> 00:27:16,000
this is where you define the profiles

00:27:14,240 --> 00:27:17,120
and this is where you define the service

00:27:16,000 --> 00:27:20,240
settings

00:27:17,120 --> 00:27:23,279
now this thing is quite um

00:27:20,240 --> 00:27:26,159
confusing sometimes um as to you know

00:27:23,279 --> 00:27:29,760
what stuff i put in profile configs

00:27:26,159 --> 00:27:32,559
and what i put it in service settings

00:27:29,760 --> 00:27:34,000
the way i basically try to look at this

00:27:32,559 --> 00:27:37,919
is things that are needed

00:27:34,000 --> 00:27:41,919
by halyard to bring up the service

00:27:37,919 --> 00:27:41,919
goes into additional service settings

00:27:42,000 --> 00:27:45,919
things that are used by the service at

00:27:44,880 --> 00:27:49,600
runtime

00:27:45,919 --> 00:27:52,559
goes into profile config maps right

00:27:49,600 --> 00:27:54,320
so gate local if you want to make

00:27:52,559 --> 00:27:57,919
changes to gate local

00:27:54,320 --> 00:28:01,279
uh to uh say enable this

00:27:57,919 --> 00:28:04,240
um you know uh crop

00:28:01,279 --> 00:28:06,320
to enable basically this remote protocol

00:28:04,240 --> 00:28:09,120
header http server port mainly

00:28:06,320 --> 00:28:10,320
needed for course uh you just basically

00:28:09,120 --> 00:28:11,919
put this in

00:28:10,320 --> 00:28:13,679
or you want to enable logging at the

00:28:11,919 --> 00:28:16,480
cloud driver local

00:28:13,679 --> 00:28:17,200
uh so you can basically set the logging

00:28:16,480 --> 00:28:18,799
level

00:28:17,200 --> 00:28:21,039
so anything that you would set in a

00:28:18,799 --> 00:28:23,440
service you can just set it over here

00:28:21,039 --> 00:28:25,919
and then do and how uh deploy that will

00:28:23,440 --> 00:28:25,919
take care of

00:28:26,000 --> 00:28:30,080
things that you do at a at a service

00:28:28,159 --> 00:28:32,480
level which halyard uses

00:28:30,080 --> 00:28:35,200
like providing the image to be used

00:28:32,480 --> 00:28:38,320
right you can provide that here

00:28:35,200 --> 00:28:40,880
again these are samples that you can use

00:28:38,320 --> 00:28:41,520
to and edit it one thing which i've seen

00:28:40,880 --> 00:28:43,840
i

00:28:41,520 --> 00:28:45,679
need quite often is this environment

00:28:43,840 --> 00:28:47,840
variable to define

00:28:45,679 --> 00:28:48,960
the menial access keys in some

00:28:47,840 --> 00:28:51,120
environments um

00:28:48,960 --> 00:28:52,720
these are not set by halyard correctly

00:28:51,120 --> 00:28:56,399
and so you have to inject those

00:28:52,720 --> 00:28:58,799
uh in into the front 50 pod

00:28:56,399 --> 00:29:00,480
so you could do that so that's where you

00:28:58,799 --> 00:29:03,440
control the service settings and the

00:29:00,480 --> 00:29:03,440
profile settings

00:29:03,840 --> 00:29:09,200
if you want to use custom bom

00:29:07,120 --> 00:29:10,880
how do you do that you basically define

00:29:09,200 --> 00:29:12,640
it over here

00:29:10,880 --> 00:29:14,480
otherwise you'd be going and creating

00:29:12,640 --> 00:29:15,520
these files in the file system in

00:29:14,480 --> 00:29:18,320
hallyard

00:29:15,520 --> 00:29:19,440
and halyard would pick it up right but

00:29:18,320 --> 00:29:21,440
you don't want to do that

00:29:19,440 --> 00:29:22,480
in this case you want to maintain all of

00:29:21,440 --> 00:29:25,360
these in

00:29:22,480 --> 00:29:27,200
sort of source control and manager this

00:29:25,360 --> 00:29:31,600
is where you define it in

00:29:27,200 --> 00:29:33,919
in the values.yaml in the bom sections

00:29:31,600 --> 00:29:34,960
or if you have specific service related

00:29:33,919 --> 00:29:38,840
configurations

00:29:34,960 --> 00:29:42,559
you add them in the service configs here

00:29:38,840 --> 00:29:45,039
okay um you can control the hallyard

00:29:42,559 --> 00:29:46,399
pod how much memory cpu it needs by

00:29:45,039 --> 00:29:48,960
default you know it's

00:29:46,399 --> 00:29:50,240
uh not limited but if you want to

00:29:48,960 --> 00:29:53,039
control the memory

00:29:50,240 --> 00:29:55,840
uh and cpu you specify the address

00:29:53,039 --> 00:29:55,840
limits over here

00:29:56,640 --> 00:30:01,200
if you want to use the custom search for

00:29:59,200 --> 00:30:03,520
the halyard part

00:30:01,200 --> 00:30:05,360
that's you that's what you defined here

00:30:03,520 --> 00:30:08,559
now if you want to use this for

00:30:05,360 --> 00:30:10,159
other parts you basically run hell

00:30:08,559 --> 00:30:11,679
commands to do it and that you would

00:30:10,159 --> 00:30:16,960
introduce in the

00:30:11,679 --> 00:30:19,679
um up there and i'll talk about it here

00:30:16,960 --> 00:30:22,080
out of the box you can also provide

00:30:19,679 --> 00:30:24,799
docker registry that your

00:30:22,080 --> 00:30:25,200
account should be using like if you have

00:30:24,799 --> 00:30:28,640
a

00:30:25,200 --> 00:30:30,640
custom or private docker registries

00:30:28,640 --> 00:30:32,000
you can basically define them right over

00:30:30,640 --> 00:30:35,760
here like say

00:30:32,000 --> 00:30:38,640
if you have a private gcr repo you

00:30:35,760 --> 00:30:39,440
here the username which should be json

00:30:38,640 --> 00:30:41,520
key

00:30:39,440 --> 00:30:44,960
and your service account like the json

00:30:41,520 --> 00:30:47,600
file that you download when you

00:30:44,960 --> 00:30:49,200
authenticate against a gcr repo you add

00:30:47,600 --> 00:30:51,360
that over here so

00:30:49,200 --> 00:30:54,720
you can actually configure docker

00:30:51,360 --> 00:30:54,720
registries right over here

00:30:54,799 --> 00:31:00,240
um kubernetes uh two things here

00:30:58,399 --> 00:31:01,760
you know when i installed it i installed

00:31:00,240 --> 00:31:04,960
spinnaker in the same

00:31:01,760 --> 00:31:07,120
uh kubernetes from which i'm

00:31:04,960 --> 00:31:08,399
basically running it but nothing

00:31:07,120 --> 00:31:11,600
stopping you

00:31:08,399 --> 00:31:14,880
from uh installing um spinnaker in

00:31:11,600 --> 00:31:15,760
another kubernetes right or let me put

00:31:14,880 --> 00:31:19,039
it differently

00:31:15,760 --> 00:31:21,519
uh have your uh spinnaker deployed to a

00:31:19,039 --> 00:31:24,720
different kubernetes so you can

00:31:21,519 --> 00:31:28,000
define that right over here right

00:31:24,720 --> 00:31:28,880
uh what you provide is the cube config

00:31:28,000 --> 00:31:31,360
file

00:31:28,880 --> 00:31:34,320
uh it's either in you basically load the

00:31:31,360 --> 00:31:37,840
cube config file in a secret

00:31:34,320 --> 00:31:39,360
and uh what secret it is and in the cube

00:31:37,840 --> 00:31:42,399
config file you say what

00:31:39,360 --> 00:31:44,159
context to use and uh what should be the

00:31:42,399 --> 00:31:45,200
deployment context in which spinnaker

00:31:44,159 --> 00:31:49,200
would be deployed

00:31:45,200 --> 00:31:49,200
and what's the context used by uh

00:31:50,000 --> 00:31:53,760
for deployment by spinach and you can

00:31:52,880 --> 00:31:55,840
have all these

00:31:53,760 --> 00:31:57,600
other settings that you typically do

00:31:55,840 --> 00:32:00,000
when you add a kubernetes

00:31:57,600 --> 00:32:01,679
account in cloud driver you can define

00:32:00,000 --> 00:32:04,799
the name spaces

00:32:01,679 --> 00:32:05,360
or the omit name spaces and even like

00:32:04,799 --> 00:32:07,360
you know

00:32:05,360 --> 00:32:09,760
does it should it show only the

00:32:07,360 --> 00:32:12,480
kubernetes managed systems or

00:32:09,760 --> 00:32:12,480
everything else

00:32:12,880 --> 00:32:17,120
again like you know that either name

00:32:14,799 --> 00:32:19,360
spaces or amit name spaces

00:32:17,120 --> 00:32:21,120
can be provided you cannot provide both

00:32:19,360 --> 00:32:24,799
so if you want namespaces

00:32:21,120 --> 00:32:26,640
you should uh enable uh uncomment these

00:32:24,799 --> 00:32:28,799
and comment this out or if you want to

00:32:26,640 --> 00:32:31,360
amid name spaces just list out the ones

00:32:28,799 --> 00:32:31,360
that you want

00:32:34,480 --> 00:32:38,320
you can also define ingress um i i used

00:32:37,519 --> 00:32:41,279
a file

00:32:38,320 --> 00:32:43,200
outside of it to do it but if you have a

00:32:41,279 --> 00:32:45,840
host name and all that available

00:32:43,200 --> 00:32:46,240
already what host name to use you can

00:32:45,840 --> 00:32:48,640
use

00:32:46,240 --> 00:32:50,159
ingress right over here um basically

00:32:48,640 --> 00:32:52,159
your ingress should be

00:32:50,159 --> 00:32:54,000
uh or your host name that you want to

00:32:52,159 --> 00:32:57,840
use for the ingress is set up then you

00:32:54,000 --> 00:32:57,840
can use this to set it up

00:32:58,720 --> 00:33:02,159
when you're deploying if you want to

00:33:00,320 --> 00:33:03,760
deploy like especially in kubernetes

00:33:02,159 --> 00:33:05,440
right you want to have node selectors

00:33:03,760 --> 00:33:08,399
you want to specify

00:33:05,440 --> 00:33:10,640
where the spinnaker is deployed or some

00:33:08,399 --> 00:33:13,600
tolerance you want to define

00:33:10,640 --> 00:33:15,919
you can basically define them here right

00:33:13,600 --> 00:33:19,760
again these are kubernetes

00:33:15,919 --> 00:33:19,760
definitions that you include over here

00:33:20,080 --> 00:33:25,200
so so like you can

00:33:23,279 --> 00:33:27,279
and then we walk through the redis uh

00:33:25,200 --> 00:33:29,200
you can also use an external redis

00:33:27,279 --> 00:33:30,320
we did not give an external redis so it

00:33:29,200 --> 00:33:33,760
just installed a

00:33:30,320 --> 00:33:36,640
redis by itself same thing with menu uh

00:33:33,760 --> 00:33:38,399
we asked it to use menu over here and

00:33:36,640 --> 00:33:39,200
you know you just don't need to use menu

00:33:38,399 --> 00:33:42,640
if you want to use

00:33:39,200 --> 00:33:46,080
s3 google cloud storage

00:33:42,640 --> 00:33:47,120
uh azure storage all that you can define

00:33:46,080 --> 00:33:49,760
right over here

00:33:47,120 --> 00:33:50,159
to be used right so you can see this

00:33:49,760 --> 00:33:54,399
helm

00:33:50,159 --> 00:33:56,960
chart provides you a lot of flexibility

00:33:54,399 --> 00:33:58,240
in setting up your uh production uh

00:33:56,960 --> 00:34:00,480
spent

00:33:58,240 --> 00:34:00,480
okay

00:34:01,360 --> 00:34:07,600
let's see we i want to run through this

00:34:03,440 --> 00:34:10,480
and see if this one actually came back

00:34:07,600 --> 00:34:11,200
there you go right so it's stabilized it

00:34:10,480 --> 00:34:14,000
came back

00:34:11,200 --> 00:34:17,599
and here we have our applications this

00:34:14,000 --> 00:34:21,200
is my spinnaker summit 2020 application

00:34:17,599 --> 00:34:25,839
uh with my pipeline that i created right

00:34:21,200 --> 00:34:25,839
so this is available as

00:34:26,000 --> 00:34:30,800
uh i wanted wanted to go to the

00:34:27,760 --> 00:34:35,839
pipelines yeah this is the

00:34:30,800 --> 00:34:35,839
spinnaker summit applications

00:34:37,760 --> 00:34:44,000
did i lose my pipeline maybe i did

00:34:41,839 --> 00:34:45,520
again i'm not going to debug this here

00:34:44,000 --> 00:34:48,720
just trying to show you

00:34:45,520 --> 00:34:49,919
how it works and all that um but this is

00:34:48,720 --> 00:34:53,040
how you basically

00:34:49,919 --> 00:34:56,639
bring up a spinnaker now let's uh show

00:34:53,040 --> 00:34:59,599
something that we can see quickly is uh

00:34:56,639 --> 00:35:01,520
talk about a few other things here uh if

00:34:59,599 --> 00:35:04,400
you are in a restricted environment

00:35:01,520 --> 00:35:07,680
where you need to use service accounts

00:35:04,400 --> 00:35:09,440
to run spinnaker and all that you can

00:35:07,680 --> 00:35:09,960
define them right over here in the in

00:35:09,440 --> 00:35:13,280
the

00:35:09,960 --> 00:35:13,280
values.yaml file

00:35:13,760 --> 00:35:18,079
if you have any questions on on the

00:35:15,520 --> 00:35:19,520
values.yaml what i can do or hey can i

00:35:18,079 --> 00:35:22,880
do this or can i do that

00:35:19,520 --> 00:35:25,119
feel free to ask me what i did is really

00:35:22,880 --> 00:35:28,480
walk through the values.tml

00:35:25,119 --> 00:35:29,440
um you know so yes you could have always

00:35:28,480 --> 00:35:32,000
gone through

00:35:29,440 --> 00:35:34,320
the values.yaml but you know sometimes

00:35:32,000 --> 00:35:37,680
you know trying to relate it

00:35:34,320 --> 00:35:40,079
uh to spinnaker is what i think is

00:35:37,680 --> 00:35:41,440
missing in values.tml that's what i try

00:35:40,079 --> 00:35:45,040
to do provide that

00:35:41,440 --> 00:35:48,720
input to you uh

00:35:45,040 --> 00:35:49,119
now now let's come to the final thing

00:35:48,720 --> 00:35:51,760
what

00:35:49,119 --> 00:35:54,160
if i want to run some commands that is

00:35:51,760 --> 00:35:55,760
not available in values.yaml right

00:35:54,160 --> 00:35:58,800
i want to run a bunch of highly out

00:35:55,760 --> 00:36:01,040
commands you can do that actually

00:35:58,800 --> 00:36:02,079
so it will actually run these halyard

00:36:01,040 --> 00:36:04,720
commands before

00:36:02,079 --> 00:36:06,160
it will do a hal deploy apply and all

00:36:04,720 --> 00:36:08,240
the helium commands

00:36:06,160 --> 00:36:10,960
that you want to run you can just type

00:36:08,240 --> 00:36:12,640
it in here as part of additional scripts

00:36:10,960 --> 00:36:14,640
again the syntax i'll not go through

00:36:12,640 --> 00:36:16,000
exactly there's some new answers in how

00:36:14,640 --> 00:36:17,760
you set this up

00:36:16,000 --> 00:36:19,280
you can always go look at values

00:36:17,760 --> 00:36:21,359
advanced and look at it

00:36:19,280 --> 00:36:23,040
but main thing is that you can give that

00:36:21,359 --> 00:36:26,240
this a command in this way help

00:36:23,040 --> 00:36:28,560
config deploy component sizing

00:36:26,240 --> 00:36:30,000
deck edit so basically i'm saying that

00:36:28,560 --> 00:36:32,079
run two instances of deck

00:36:30,000 --> 00:36:33,440
run two instances of front fifty that's

00:36:32,079 --> 00:36:36,720
what i'm saying here right

00:36:33,440 --> 00:36:39,599
and i can add whatever any any how

00:36:36,720 --> 00:36:40,000
config commands right over here and they

00:36:39,599 --> 00:36:43,359
would be

00:36:40,000 --> 00:36:44,160
applied right let's run deployment with

00:36:43,359 --> 00:36:46,720
this one and

00:36:44,160 --> 00:36:48,240
you know see if we have multiple deck

00:36:46,720 --> 00:36:51,760
modes running or not

00:36:48,240 --> 00:36:52,839
so if i go look at it cube ctl get parts

00:36:51,760 --> 00:36:56,560
minus

00:36:52,839 --> 00:36:56,560
n spin occur

00:36:57,359 --> 00:37:03,280
so we have actually it probably ran that

00:37:01,599 --> 00:37:05,839
file i have two decks already so i

00:37:03,280 --> 00:37:09,119
probably ran that already

00:37:05,839 --> 00:37:12,480
so let's do something else here

00:37:09,119 --> 00:37:15,839
i'm going to remove this one out

00:37:12,480 --> 00:37:18,880
now and reduce

00:37:15,839 --> 00:37:23,119
this to let's say three

00:37:18,880 --> 00:37:26,400
instances from that

00:37:23,119 --> 00:37:31,760
and i do what do i do is held list

00:37:26,400 --> 00:37:31,760
minus and spinnaker

00:37:31,839 --> 00:37:41,280
and this is my spinnaker running so

00:37:35,839 --> 00:37:45,119
upgrade uh in the namespace spinnaker

00:37:41,280 --> 00:37:45,119
uh the release pinnacle

00:37:45,440 --> 00:37:52,640
sbi spinnaker uh

00:37:49,280 --> 00:37:54,480
from the repo spinnaker uh the charts

00:37:52,640 --> 00:37:58,000
can occur lots of spinnaker here

00:37:54,480 --> 00:38:02,400
um and i want to use that uh advanced

00:37:58,000 --> 00:38:06,000
right values advanced.yaml

00:38:02,400 --> 00:38:07,920
and let me trigger this off

00:38:06,000 --> 00:38:09,200
what i'm expecting to see is that once

00:38:07,920 --> 00:38:12,400
it finishes and comes

00:38:09,200 --> 00:38:14,000
back i expect to see there are three uh

00:38:12,400 --> 00:38:15,520
deck parts running over here right

00:38:14,000 --> 00:38:18,880
that's the change that i made

00:38:15,520 --> 00:38:21,920
over here let's wait for that

00:38:18,880 --> 00:38:24,400
while it is doing uh let me

00:38:21,920 --> 00:38:25,200
talk a little bit about another thing

00:38:24,400 --> 00:38:29,200
that

00:38:25,200 --> 00:38:33,839
i hear people talk about quite a lot

00:38:29,200 --> 00:38:33,839
uh is this uh

00:38:34,240 --> 00:38:40,400
um how do i uh any configure ldap

00:38:37,760 --> 00:38:41,440
right i know where my ldap is again like

00:38:40,400 --> 00:38:44,079
i talked about

00:38:41,440 --> 00:38:46,160
you can always include this in this

00:38:44,079 --> 00:38:49,359
section right here

00:38:46,160 --> 00:38:52,480
over here so to enable

00:38:49,359 --> 00:38:54,640
ldap what you do is you configure

00:38:52,480 --> 00:38:59,040
security

00:38:54,640 --> 00:39:01,200
and you basically enable ldap

00:38:59,040 --> 00:39:02,560
and then configure ldap right so you

00:39:01,200 --> 00:39:05,040
need to give the

00:39:02,560 --> 00:39:08,160
user the end pattern you need to know

00:39:05,040 --> 00:39:10,160
and the url to your ldap right

00:39:08,160 --> 00:39:12,240
and there are a lot of other parameters

00:39:10,160 --> 00:39:13,920
specifically like if your ldap needs

00:39:12,240 --> 00:39:16,079
authentication to connect to it like you

00:39:13,920 --> 00:39:17,440
can give the manager dn and all that

00:39:16,079 --> 00:39:20,320
also as parameters

00:39:17,440 --> 00:39:21,440
in there you can look at the hal config

00:39:20,320 --> 00:39:26,240
security authen

00:39:21,440 --> 00:39:29,760
um authena

00:39:26,240 --> 00:39:33,359
command to see how that works

00:39:29,760 --> 00:39:37,680
and then you have to override it

00:39:33,359 --> 00:39:39,520
the base url for for your ui

00:39:37,680 --> 00:39:40,960
and what would be your deck host name

00:39:39,520 --> 00:39:42,880
here it would be the same

00:39:40,960 --> 00:39:45,119
ingress that we provided right it will

00:39:42,880 --> 00:39:47,200
be the same ingress ip address

00:39:45,119 --> 00:39:49,920
or if you have a host name for there you

00:39:47,200 --> 00:39:52,560
can use that

00:39:49,920 --> 00:39:53,200
and once you do that you do a hal deploy

00:39:52,560 --> 00:39:55,520
apply

00:39:53,200 --> 00:39:57,359
now if you're doing it through this file

00:39:55,520 --> 00:39:59,200
here you don't need to do the hal diplo

00:39:57,359 --> 00:40:00,480
apply right you just do these three

00:39:59,200 --> 00:40:03,920
commands

00:40:00,480 --> 00:40:04,400
uh right over here and it's it would do

00:40:03,920 --> 00:40:07,359
it

00:40:04,400 --> 00:40:08,839
actually enable authentication with your

00:40:07,359 --> 00:40:12,240
halyard

00:40:08,839 --> 00:40:14,160
uh it's running over there so let me

00:40:12,240 --> 00:40:16,079
just add this over here and you know if

00:40:14,160 --> 00:40:19,440
you have a little bit of a time

00:40:16,079 --> 00:40:24,480
uh we will try to uh see this

00:40:19,440 --> 00:40:39,839
uh over here

00:40:24,480 --> 00:40:39,839
this should be see

00:40:50,839 --> 00:40:53,839
and

00:40:56,000 --> 00:41:01,040
and like i said that you are a little

00:40:57,839 --> 00:41:01,040
bit this guy here

00:41:05,200 --> 00:41:09,200
i didn't do not need an extra level of

00:41:07,599 --> 00:41:11,599
http

00:41:09,200 --> 00:41:12,480
uh but that's about it so let me save

00:41:11,599 --> 00:41:16,240
this thing here

00:41:12,480 --> 00:41:18,880
and see if we can enable um

00:41:16,240 --> 00:41:21,119
authentication to my uh environment

00:41:18,880 --> 00:41:21,920
right from here now i'm using an open

00:41:21,119 --> 00:41:24,000
ldap

00:41:21,920 --> 00:41:25,359
that's running in the same name space

00:41:24,000 --> 00:41:28,640
it's not in default

00:41:25,359 --> 00:41:31,599
it's in main space finicker

00:41:28,640 --> 00:41:33,839
that's the dn pattern uh basically a

00:41:31,599 --> 00:41:35,760
vanilla install of an open ldap um

00:41:33,839 --> 00:41:38,400
that's what i don't give it to you

00:41:35,760 --> 00:41:39,760
so let me save that and i notice that

00:41:38,400 --> 00:41:41,839
this is finished over here

00:41:39,760 --> 00:41:44,640
right so let's look at the number of

00:41:41,839 --> 00:41:48,800
pods running over here

00:41:44,640 --> 00:41:50,800
uh there you go um you can see there are

00:41:48,800 --> 00:41:53,839
five deck running but you would notice

00:41:50,800 --> 00:41:58,000
that two of them are terminating right

00:41:53,839 --> 00:41:58,720
so i increase the number of deck parts

00:41:58,000 --> 00:42:02,720
running

00:41:58,720 --> 00:42:04,079
to three so let me just trigger off

00:42:02,720 --> 00:42:07,359
another one

00:42:04,079 --> 00:42:09,599
over here and um you know and see if it

00:42:07,359 --> 00:42:12,079
gets enabled with um

00:42:09,599 --> 00:42:13,040
open ldap so i've again uh saved that

00:42:12,079 --> 00:42:16,160
file run

00:42:13,040 --> 00:42:18,640
ran it uh i don't have anything else up

00:42:16,160 --> 00:42:20,640
to show uh if there any questions i

00:42:18,640 --> 00:42:25,760
would be happy to take it

00:42:20,640 --> 00:42:28,960
and this takes about um how much time uh

00:42:25,760 --> 00:42:30,400
a hundred or or maybe seconds so which

00:42:28,960 --> 00:42:32,800
is about like two minutes

00:42:30,400 --> 00:42:34,640
two and a half minutes i'll hang around

00:42:32,800 --> 00:42:35,520
for another two two and a half minutes

00:42:34,640 --> 00:42:38,079
and see

00:42:35,520 --> 00:42:39,440
we were able to enable authentication

00:42:38,079 --> 00:42:43,119
with our

00:42:39,440 --> 00:42:45,680
uh spinnaker and um

00:42:43,119 --> 00:42:48,319
i'd be happy to answer any questions if

00:42:45,680 --> 00:42:48,319
you have any

00:42:51,440 --> 00:42:56,079
while doing that let me just summarize

00:42:53,359 --> 00:43:00,319
it again if you have any questions

00:42:56,079 --> 00:43:04,000
i'm available and reachable at uh

00:43:00,319 --> 00:43:06,000
on my email nirmalia opsamex dot io

00:43:04,000 --> 00:43:08,720
i'm also in the spinnaker slack channel

00:43:06,000 --> 00:43:11,040
at nermaliasen

00:43:08,720 --> 00:43:12,960
and if you have any questions feel free

00:43:11,040 --> 00:43:14,880
to reach out if you have any questions

00:43:12,960 --> 00:43:16,880
now i'd be happy to answer it and just

00:43:14,880 --> 00:43:20,560
to recap we saw

00:43:16,880 --> 00:43:23,359
how you can using home within 10 minutes

00:43:20,560 --> 00:43:25,200
bring up a spinnaker instance and start

00:43:23,359 --> 00:43:28,960
playing around with it

00:43:25,200 --> 00:43:31,680
uh in in in

00:43:28,960 --> 00:43:32,160
google in a kubernetes environment and

00:43:31,680 --> 00:43:35,319
then

00:43:32,160 --> 00:43:38,640
all the additional uh

00:43:35,319 --> 00:43:41,760
configurations that you can do through

00:43:38,640 --> 00:43:44,960
through helm that helm exposes

00:43:41,760 --> 00:43:47,920
and anything that help doesn't expose

00:43:44,960 --> 00:43:50,640
you can actually just run those held

00:43:47,920 --> 00:43:52,640
commands and helm will actually

00:43:50,640 --> 00:43:54,880
run those halyard commands and help

00:43:52,640 --> 00:43:57,839
won't actually run those

00:43:54,880 --> 00:43:57,839
commands through

00:43:58,000 --> 00:44:03,520
so um let's see over here

00:44:01,839 --> 00:44:05,599
this is still running sometimes while

00:44:03,520 --> 00:44:07,280
it's still running this gets done let me

00:44:05,599 --> 00:44:09,760
try to reload and see if

00:44:07,280 --> 00:44:12,000
authentication is enabled or not yet not

00:44:09,760 --> 00:44:12,000
yet

00:44:13,760 --> 00:44:17,280
we'll give it a minute or so here

00:44:19,839 --> 00:44:24,480
i'm impatient here so let me just um

00:44:26,560 --> 00:44:33,200
command t uh let's do smaller window

00:44:30,800 --> 00:44:33,200
command

00:44:35,599 --> 00:44:41,200
actually i think i lost my other window

00:44:39,440 --> 00:44:41,520
i don't want to do that let me go back

00:44:41,200 --> 00:44:51,839
here

00:44:41,520 --> 00:44:51,839
let's let it finish

00:44:57,760 --> 00:45:05,839
again like i said if you have any

00:44:59,280 --> 00:45:05,839
questions i'd be happy to answer them

00:45:14,640 --> 00:45:18,880
now one thing that can happen if i did

00:45:16,720 --> 00:45:20,319
not given the values correctly it will

00:45:18,880 --> 00:45:23,440
wait for it

00:45:20,319 --> 00:45:33,839
and then let me time out but um

00:45:23,440 --> 00:45:33,839
i'm thinking it should be good

00:45:34,480 --> 00:45:47,839
authentication not enabled it's standard

00:45:37,839 --> 00:45:47,839
hopefully it's not your demo blues

00:45:56,960 --> 00:46:00,640
let's see while this is finishing if

00:45:58,640 --> 00:46:02,319
there's anything else i'd like to point

00:46:00,640 --> 00:46:05,520
out here

00:46:02,319 --> 00:46:06,640
uh that would be useful uh yeah the

00:46:05,520 --> 00:46:08,240
other thing is that

00:46:06,640 --> 00:46:11,359
you know you don't need to type it in

00:46:08,240 --> 00:46:12,720
here you can create a config this what

00:46:11,359 --> 00:46:14,720
it would do is it would go ahead and

00:46:12,720 --> 00:46:19,359
create a config map

00:46:14,720 --> 00:46:22,480
uh in in the kubernetes and pass it on

00:46:19,359 --> 00:46:24,880
to halyard and halyard would use that so

00:46:22,480 --> 00:46:26,000
you know you could actually just create

00:46:24,880 --> 00:46:28,880
that config map

00:46:26,000 --> 00:46:30,720
outside of this and give the config map

00:46:28,880 --> 00:46:34,160
name

00:46:30,720 --> 00:46:37,440
and and use that right

00:46:34,160 --> 00:46:37,440
you could do that also

00:46:37,839 --> 00:46:44,560
uh and and have it use that config

00:46:41,839 --> 00:46:44,560
map uh

00:46:44,960 --> 00:46:48,240
you don't need to actually type it in

00:46:46,800 --> 00:46:50,720
here and then that's a

00:46:48,240 --> 00:46:51,520
pattern used at a lot of places also

00:46:50,720 --> 00:46:53,440
where

00:46:51,520 --> 00:46:55,040
you know you can actually just give it a

00:46:53,440 --> 00:46:58,880
config map where you have actually

00:46:55,040 --> 00:46:58,880
created the values ahead of time

00:46:59,440 --> 00:47:05,280
okay um let's see it hasn't finished it

00:47:02,880 --> 00:47:06,319
yet and i think it is more than the two

00:47:05,280 --> 00:47:11,839
minutes

00:47:06,319 --> 00:47:11,839
it took in the earlier case

00:47:18,880 --> 00:47:23,520
okay definitely it timed out it took

00:47:21,760 --> 00:47:26,960
more than it should have taken

00:47:23,520 --> 00:47:26,960
and something did not work

00:47:31,280 --> 00:47:39,440
and gate did not restart and

00:47:34,640 --> 00:47:41,839
we'll just look at uh

00:47:39,440 --> 00:47:42,480
want quickly try to look at look at what

00:47:41,839 --> 00:47:44,880
went wrong

00:47:42,480 --> 00:47:46,079
this is the task that runs it that is

00:47:44,880 --> 00:47:52,559
still running

00:47:46,079 --> 00:48:07,839
cube ctrl

00:47:52,559 --> 00:48:07,839
let's do the minus p minus

00:48:08,880 --> 00:48:13,520
um some some parameter i provided

00:48:11,839 --> 00:48:15,599
probably was incorrect and that's

00:48:13,520 --> 00:48:19,520
basically failing on that one

00:48:15,599 --> 00:48:23,119
uh let me not do an

00:48:19,520 --> 00:48:23,119
n o minus b

00:48:26,640 --> 00:48:33,599
uh so there was an entry uh

00:48:31,119 --> 00:48:34,319
oh i probably made a mistake i just said

00:48:33,599 --> 00:48:36,319
how

00:48:34,319 --> 00:48:39,599
i did not give a command something went

00:48:36,319 --> 00:48:43,119
wrong over there it tells me over there

00:48:39,599 --> 00:48:45,359
i missed out the hal config

00:48:43,119 --> 00:48:46,480
that's why it failed in there but you

00:48:45,359 --> 00:48:48,160
know

00:48:46,480 --> 00:48:49,920
again that probably brings up a very

00:48:48,160 --> 00:48:52,559
good point uh

00:48:49,920 --> 00:48:54,079
what happens if it doesn't go wrong so

00:48:52,559 --> 00:48:55,599
that's actually sometimes it's a good

00:48:54,079 --> 00:48:56,720
thing and that's where i'm going to end

00:48:55,599 --> 00:48:58,960
today

00:48:56,720 --> 00:49:00,160
is if you look at the parts there would

00:48:58,960 --> 00:49:03,359
be a part that's

00:49:00,160 --> 00:49:05,599
called install using have what it

00:49:03,359 --> 00:49:07,040
does is does all the prep work on your

00:49:05,599 --> 00:49:09,200
behalf

00:49:07,040 --> 00:49:10,319
and so if something doesn't work

00:49:09,200 --> 00:49:13,200
correctly like you know

00:49:10,319 --> 00:49:13,760
this is not completed like you saw see

00:49:13,200 --> 00:49:15,280
over here

00:49:13,760 --> 00:49:17,520
it's still running that means something

00:49:15,280 --> 00:49:19,520
went wrong in the configuration

00:49:17,520 --> 00:49:21,839
and if you can if you look at the logs

00:49:19,520 --> 00:49:23,599
of this it will tell you what went wrong

00:49:21,839 --> 00:49:25,280
so that's what we did we looked at the

00:49:23,599 --> 00:49:28,400
logs of this one

00:49:25,280 --> 00:49:31,359
and it clearly tells me that you know

00:49:28,400 --> 00:49:32,319
it expected a command here uh and it got

00:49:31,359 --> 00:49:34,319
security

00:49:32,319 --> 00:49:36,160
um so i did not tell it that how

00:49:34,319 --> 00:49:39,200
conflict security

00:49:36,160 --> 00:49:40,800
and so that's why this failed right so

00:49:39,200 --> 00:49:42,319
you know although i was not planning uh

00:49:40,800 --> 00:49:44,319
to talk about how to debug

00:49:42,319 --> 00:49:45,520
but because of the mistake i made over

00:49:44,319 --> 00:49:48,559
here not

00:49:45,520 --> 00:49:51,839
giving the config it actually gave me an

00:49:48,559 --> 00:49:55,359
error as to what went wrong

00:49:51,839 --> 00:49:58,240
with that i see no questions

00:49:55,359 --> 00:49:58,720
uh i'd like to thank you uh for your

00:49:58,240 --> 00:50:00,480
time

00:49:58,720 --> 00:50:02,800
uh thank you for listening to me if you

00:50:00,480 --> 00:50:03,520
have any suggestions how i can improve

00:50:02,800 --> 00:50:06,240
this

00:50:03,520 --> 00:50:08,839
or if you have any questions um feel

00:50:06,240 --> 00:50:11,200
free to reach out to me at

00:50:08,839 --> 00:50:19,359
nermalia.opsamix.io or i'm on the

00:50:11,200 --> 00:50:19,359

YouTube URL: https://www.youtube.com/watch?v=tCbfBUv27yg


