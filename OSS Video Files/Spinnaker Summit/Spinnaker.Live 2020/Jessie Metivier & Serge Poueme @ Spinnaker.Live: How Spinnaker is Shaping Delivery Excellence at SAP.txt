Title: Jessie Metivier & Serge Poueme @ Spinnaker.Live: How Spinnaker is Shaping Delivery Excellence at SAP
Publication date: 2020-06-18
Playlist: Spinnaker.Live 2020
Description: 
	Serge Poueme, a Site Reliability Engineer, along with his colleague, Jessie Metivier, a User Assistance Developer, share how they’re leveraging Spinnaker at SAP. Listen to them uncover why they chose Spinnaker as their CI/CD hero, the architecture they’ve designed, and of course, how it’s allowed their company to push projects quickly to the cloud!
Captions: 
	00:00:13,009 --> 00:00:17,670
thank you for joining spinnaker live

00:00:15,509 --> 00:00:19,740
today we hope that you enjoyed the main

00:00:17,670 --> 00:00:21,420
stage presentations and also hope that

00:00:19,740 --> 00:00:23,220
you enjoy our breakout session today

00:00:21,420 --> 00:00:24,960
we're will be talking about how

00:00:23,220 --> 00:00:28,380
spinnaker is shaping and delivery

00:00:24,960 --> 00:00:29,760
excellence at SAT and also just one

00:00:28,380 --> 00:00:33,300
important housekeeping note before we

00:00:29,760 --> 00:00:36,930
begin if you have any questions feel

00:00:33,300 --> 00:00:38,129
free to post them to the chats where

00:00:36,930 --> 00:00:42,390
we'll be responding throughout the

00:00:38,129 --> 00:00:45,539
session so let's get the introductions

00:00:42,390 --> 00:00:47,820
out of the way my name is Jesse and I'm

00:00:45,539 --> 00:00:50,489
currently interning at sa P as a user

00:00:47,820 --> 00:00:52,110
assistance developer where I work with

00:00:50,489 --> 00:00:55,110
search and site reliability engineering

00:00:52,110 --> 00:00:58,140
I write articles about tech I organize

00:00:55,110 --> 00:01:01,980
documentation work on design projects as

00:00:58,140 --> 00:01:05,820
well as support the head of asari which

00:01:01,980 --> 00:01:07,890
is very cool and also I do freelance

00:01:05,820 --> 00:01:11,400
work on the side where I help startups

00:01:07,890 --> 00:01:13,110
to tell their brand stories hello I'm

00:01:11,400 --> 00:01:15,150
Sir John part of the delivery and

00:01:13,110 --> 00:01:18,390
operation excellence team in the Essery

00:01:15,150 --> 00:01:20,520
unit and I work with JC on spinnaker

00:01:18,390 --> 00:01:23,340
adoption within the team and our team

00:01:20,520 --> 00:01:26,100
provides develop tools automation

00:01:23,340 --> 00:01:28,110
services guidance and consensus for SRA

00:01:26,100 --> 00:01:29,820
best practices outside of work

00:01:28,110 --> 00:01:31,079
contribute to software development

00:01:29,820 --> 00:01:33,090
projects that can solve social

00:01:31,079 --> 00:01:35,670
challenges and I also have my community

00:01:33,090 --> 00:01:38,970
I'll tell you a bit more about appgini

00:01:35,670 --> 00:01:42,930
to see ICD and our we came to adopt

00:01:38,970 --> 00:01:45,869
spinnaker so a couple of years ago we

00:01:42,930 --> 00:01:48,180
were tasked to build standard blueprints

00:01:45,869 --> 00:01:51,299
for delivery the goal was to simplify

00:01:48,180 --> 00:01:53,369
and speed up ability process make sure

00:01:51,299 --> 00:01:56,070
that we efficient and consolidate all

00:01:53,369 --> 00:01:58,140
our tooling so our team which is a sari

00:01:56,070 --> 00:02:00,149
team became a global team with no

00:01:58,140 --> 00:02:00,750
typical spirits working on several

00:02:00,149 --> 00:02:04,829
continents

00:02:00,750 --> 00:02:06,149
and we put together a new unit called

00:02:04,829 --> 00:02:08,489
the Avery and operational excellence

00:02:06,149 --> 00:02:10,470
which on pathos which used to work on

00:02:08,489 --> 00:02:12,900
standards and processes for the commerce

00:02:10,470 --> 00:02:15,079
platforms so we've to experience that

00:02:12,900 --> 00:02:18,090
that team are working on standardization

00:02:15,079 --> 00:02:21,060
we started working on the CSE if I find

00:02:18,090 --> 00:02:24,060
a book print went through several rounds

00:02:21,060 --> 00:02:26,760
of assistance solutions yeah putting

00:02:24,060 --> 00:02:28,890
four concepts and when we started

00:02:26,760 --> 00:02:30,599
working with spinnaker the comparison

00:02:28,890 --> 00:02:34,019
between spinnaker and those solutions

00:02:30,599 --> 00:02:36,870
was we decided to use it because it was

00:02:34,019 --> 00:02:38,640
outperforming them all and we continue

00:02:36,870 --> 00:02:41,250
that journey and I would wave and from

00:02:38,640 --> 00:02:43,650
that point so now let's just like you

00:02:41,250 --> 00:02:47,069
about tell you more about the benefits

00:02:43,650 --> 00:02:49,319
of seasons thicker and so you might be

00:02:47,069 --> 00:02:52,799
wondering why they beat you spinnaker

00:02:49,319 --> 00:02:56,909
and I will tell you in six main reasons

00:02:52,799 --> 00:03:00,120
so firstly its native which means three

00:02:56,909 --> 00:03:04,680
great things it's it's available its

00:03:00,120 --> 00:03:06,689
scalable and reliable so because mainly

00:03:04,680 --> 00:03:10,019
because it runs on kubernetes so you can

00:03:06,689 --> 00:03:12,000
apply kubernetes best practices if you

00:03:10,019 --> 00:03:13,530
want to scale its spinnaker it's easy

00:03:12,000 --> 00:03:17,220
because that's literally what kubernetes

00:03:13,530 --> 00:03:19,260
is designed to do scale and also because

00:03:17,220 --> 00:03:21,000
spinnaker is a set of micro services so

00:03:19,260 --> 00:03:23,099
each of those micro services can be

00:03:21,000 --> 00:03:25,500
scaled independently and without

00:03:23,099 --> 00:03:27,180
interfering each other they're

00:03:25,500 --> 00:03:28,260
self-healing which means that if

00:03:27,180 --> 00:03:30,629
something goes wrong in one of the

00:03:28,260 --> 00:03:33,389
clusters kubernetes can probe the health

00:03:30,629 --> 00:03:37,290
in one of the pods and restart them if

00:03:33,389 --> 00:03:41,099
needed and also we use dynaTrace as a

00:03:37,290 --> 00:03:43,229
monitor monitoring solution and it can

00:03:41,099 --> 00:03:46,819
catch the issues happening in real time

00:03:43,229 --> 00:03:48,810
so it can notify the teams on slack and

00:03:46,819 --> 00:03:50,940
make sure that it doesn't affect the

00:03:48,810 --> 00:03:56,209
service or impact the customers which is

00:03:50,940 --> 00:04:00,540
our main goal and s re also pipeline

00:03:56,209 --> 00:04:02,549
flexibility so we can create pipelines

00:04:00,540 --> 00:04:03,750
we can of course we can create five

00:04:02,549 --> 00:04:06,239
lines in centigrade we can create

00:04:03,750 --> 00:04:08,250
templates in spinnaker so you can define

00:04:06,239 --> 00:04:09,599
templates for a spender for the

00:04:08,250 --> 00:04:11,940
pipelines and distribute them to

00:04:09,599 --> 00:04:14,459
different teams which is a huge focus

00:04:11,940 --> 00:04:16,530
for us here in Sree

00:04:14,459 --> 00:04:18,000
and art and our templates help teams

00:04:16,530 --> 00:04:20,549
create pipelines without the need to

00:04:18,000 --> 00:04:22,320
start from scratch so the key benefit

00:04:20,549 --> 00:04:24,750
here is that they're usable we start

00:04:22,320 --> 00:04:26,020
pipelines of github so we have an

00:04:24,750 --> 00:04:28,539
automation I can read the pie

00:04:26,020 --> 00:04:30,789
code and it calls the spinnaker API

00:04:28,539 --> 00:04:33,879
which creates the pipeline's on

00:04:30,789 --> 00:04:35,319
spinnaker the added value here is that

00:04:33,879 --> 00:04:38,169
the teams can manage their pipelines

00:04:35,319 --> 00:04:40,360
along with our product using the same

00:04:38,169 --> 00:04:41,860
development process so if you're making

00:04:40,360 --> 00:04:43,210
a change in the product it can be

00:04:41,860 --> 00:04:45,639
reflected in the pipeline as well

00:04:43,210 --> 00:04:50,050
through a single commit and your git

00:04:45,639 --> 00:04:52,870
repository and also you can isolate your

00:04:50,050 --> 00:04:57,159
users so each client has their own space

00:04:52,870 --> 00:04:59,620
to manage their pipelines and we don't

00:04:57,159 --> 00:05:01,990
have to maintain mol closes let's

00:04:59,620 --> 00:05:04,090
vinegar just one is enough it's also

00:05:01,990 --> 00:05:06,789
easy to operate so it comes with an API

00:05:04,090 --> 00:05:08,889
and CLI the API allows us to speak to

00:05:06,789 --> 00:05:10,330
spinnaker from other systems and the CLI

00:05:08,889 --> 00:05:13,380
is useful when it comes such as

00:05:10,330 --> 00:05:15,880
automating and managing spinnaker

00:05:13,380 --> 00:05:17,680
another great thing is it's secure so it

00:05:15,880 --> 00:05:21,580
supports authentication and

00:05:17,680 --> 00:05:23,409
authorization and it can integrate very

00:05:21,580 --> 00:05:27,099
well with popular security providers

00:05:23,409 --> 00:05:29,349
that we use internally ASAP and that

00:05:27,099 --> 00:05:31,569
actually flows nicely into the next one

00:05:29,349 --> 00:05:34,539
which it is highly integrated also it

00:05:31,569 --> 00:05:38,440
integrates with third-party tools tools

00:05:34,539 --> 00:05:41,650
like Jenkins artifactory helm 10 a very

00:05:38,440 --> 00:05:43,900
popular few as well slack so it

00:05:41,650 --> 00:05:46,300
integrates seamlessly with slack which

00:05:43,900 --> 00:05:47,590
helps with team collaboration which is

00:05:46,300 --> 00:05:51,310
another important thing for us and I

00:05:47,590 --> 00:05:54,580
imagine every company out there

00:05:51,310 --> 00:05:56,400
and lastly extensibility so obviously we

00:05:54,580 --> 00:05:59,590
want to extend a third-party tools

00:05:56,400 --> 00:06:02,500
because we want to we want to support

00:05:59,590 --> 00:06:04,389
multiple scenarios and workflows but the

00:06:02,500 --> 00:06:07,630
cool thing about spinnaker is that we

00:06:04,389 --> 00:06:08,830
can create custom pipeline stages so

00:06:07,630 --> 00:06:11,560
stages that are not coming out of the

00:06:08,830 --> 00:06:12,969
box with spinnaker a good example is

00:06:11,560 --> 00:06:16,000
what we've done with vaults another

00:06:12,969 --> 00:06:17,469
great security tool and as you might

00:06:16,000 --> 00:06:21,610
have guessed right now we're pretty big

00:06:17,469 --> 00:06:23,680
on security at sa P but yeah so we built

00:06:21,610 --> 00:06:26,349
pipeline stages so that we can integrate

00:06:23,680 --> 00:06:28,930
spinnaker deployment with in-house vault

00:06:26,349 --> 00:06:32,289
solution and it was very easy to do so

00:06:28,930 --> 00:06:33,490
those were just a few main reasons why

00:06:32,289 --> 00:06:37,120
we went with spinnaker in the first

00:06:33,490 --> 00:06:39,620
place but Alexa tell you how we leverage

00:06:37,120 --> 00:06:43,080
vinegar in SRM

00:06:39,620 --> 00:06:45,419
what our team has done is running in

00:06:43,080 --> 00:06:47,759
Econ kubernetes we have two spinnaker

00:06:45,419 --> 00:06:50,069
landscapes one for development purposes

00:06:47,759 --> 00:06:52,319
we use it to test the new releases of

00:06:50,069 --> 00:06:55,440
scenario we also use it to test features

00:06:52,319 --> 00:06:58,500
or sometimes to design complex pipelines

00:06:55,440 --> 00:07:01,139
and that we just want to assess before

00:06:58,500 --> 00:07:03,690
we start using them in production and

00:07:01,139 --> 00:07:06,240
our production landscape is used by

00:07:03,690 --> 00:07:10,800
product delivery teams to push their

00:07:06,240 --> 00:07:12,960
product to the cloud so we start the

00:07:10,800 --> 00:07:15,330
speaker earlier configuration in a git

00:07:12,960 --> 00:07:17,490
repository it allows us to centralize

00:07:15,330 --> 00:07:20,219
the management of spinnaker and also

00:07:17,490 --> 00:07:22,349
have multiple contributors are working

00:07:20,219 --> 00:07:24,690
on the configuration and every time they

00:07:22,349 --> 00:07:27,240
make changes to the landscapes we have

00:07:24,690 --> 00:07:29,400
an automation that burns and we

00:07:27,240 --> 00:07:32,490
configure a spinnaker automatically

00:07:29,400 --> 00:07:35,250
first this also allows us to deploy a

00:07:32,490 --> 00:07:37,710
standard spinnaker setup on painting to

00:07:35,250 --> 00:07:39,900
bonitas faster we helped making our

00:07:37,710 --> 00:07:41,879
implementation resilient and we can

00:07:39,900 --> 00:07:44,610
recover it in case of disaster happens

00:07:41,879 --> 00:07:47,279
all of us pinnacle pipelines I figured

00:07:44,610 --> 00:07:50,039
by Jenkins we use this particular API

00:07:47,279 --> 00:07:53,279
and only a few projects rely on

00:07:50,039 --> 00:07:55,400
automated triggers this comes from the

00:07:53,279 --> 00:07:58,110
historical fact that Jenkins friends

00:07:55,400 --> 00:08:01,789
almost all the CF stages for the PI for

00:07:58,110 --> 00:08:04,169
announced including security scans and

00:08:01,789 --> 00:08:06,300
with rigorous can occur only when the

00:08:04,169 --> 00:08:09,419
build has met all the criteria to be met

00:08:06,300 --> 00:08:12,840
for he met to has met all the criteria

00:08:09,419 --> 00:08:15,509
to be promoted to production spinnaker

00:08:12,840 --> 00:08:17,639
is also monitored using profile from

00:08:15,509 --> 00:08:20,430
from a tourism monetarists and we

00:08:17,639 --> 00:08:23,129
leverage elk for logging purposes and to

00:08:20,430 --> 00:08:25,889
audit a platform we are constantly

00:08:23,129 --> 00:08:27,750
reviewing the architecture it became one

00:08:25,889 --> 00:08:30,539
of the favorite platforms in the team

00:08:27,750 --> 00:08:35,399
and we are able to serve multiple

00:08:30,539 --> 00:08:36,949
customers so one of the main way our

00:08:35,399 --> 00:08:40,289
teams are leveraging

00:08:36,949 --> 00:08:43,949
customer leveraging a spinnaker

00:08:40,289 --> 00:08:48,120
wagering fraud projects is when they

00:08:43,949 --> 00:08:49,800
embed in developed nation so they work

00:08:48,120 --> 00:08:52,800
with development teams from the early

00:08:49,800 --> 00:08:56,100
beginning to contribute to cloudy

00:08:52,800 --> 00:08:58,080
free the the yields awesomes api 3

00:08:56,100 --> 00:08:59,970
destroy those projects and manage

00:08:58,080 --> 00:09:01,850
providers or artifacts accounts that I

00:08:59,970 --> 00:09:04,769
required just when I go to appearance

00:09:01,850 --> 00:09:07,260
the API we build requires authentication

00:09:04,769 --> 00:09:10,110
and can enforce certain aspects of these

00:09:07,260 --> 00:09:13,560
configurations for example when a

00:09:10,110 --> 00:09:17,279
necessary wants to submit a Cabana cos

00:09:13,560 --> 00:09:18,450
cluster into the configuration the API

00:09:17,279 --> 00:09:21,420
can actually assign the right

00:09:18,450 --> 00:09:25,170
permissions right away the subsidies API

00:09:21,420 --> 00:09:28,380
is also used to maintain the central

00:09:25,170 --> 00:09:31,829
management of spinnaker in place and we

00:09:28,380 --> 00:09:35,130
can easily have all the team

00:09:31,829 --> 00:09:37,230
contributing to the API or contributing

00:09:35,130 --> 00:09:42,120
to the management of snicker using that

00:09:37,230 --> 00:09:44,430
process after the teams have unloaded

00:09:42,120 --> 00:09:47,550
using the source service API next up is

00:09:44,430 --> 00:09:49,560
usually to use the starter kits so

00:09:47,550 --> 00:09:52,260
starter kits are based on the spinnaker

00:09:49,560 --> 00:09:55,620
management breaks and it's a way first

00:09:52,260 --> 00:09:57,300
to the rubbish bin CLI or area these are

00:09:55,620 --> 00:10:00,959
two common mines that can interact with

00:09:57,300 --> 00:10:02,550
the snake API and easy to use when you

00:10:00,959 --> 00:10:04,740
want to manipulate PI points

00:10:02,550 --> 00:10:06,630
so this talker it is a way for us to

00:10:04,740 --> 00:10:09,870
reduce the learning curve and it allows

00:10:06,630 --> 00:10:11,550
us to also enjoy best practices in our

00:10:09,870 --> 00:10:13,470
deployments

00:10:11,550 --> 00:10:15,990
so all these services and tools I

00:10:13,470 --> 00:10:17,550
constantly documented the team can find

00:10:15,990 --> 00:10:19,950
useful guides and troubleshooting

00:10:17,550 --> 00:10:21,540
information in our own books and we are

00:10:19,950 --> 00:10:24,630
always available to provide coaching

00:10:21,540 --> 00:10:26,610
technically we help each other and we

00:10:24,630 --> 00:10:29,399
welcome complex pipelines together and

00:10:26,610 --> 00:10:31,860
we support to product development teams

00:10:29,399 --> 00:10:33,420
from downloading on spinnaker throughout

00:10:31,860 --> 00:10:37,399
the life cycle of the product and

00:10:33,420 --> 00:10:40,320
services so using all those tools

00:10:37,399 --> 00:10:45,180
services to other kids as being very

00:10:40,320 --> 00:10:49,620
important for us on a journey to

00:10:45,180 --> 00:10:51,180
adopting spinnaker one of the main - one

00:10:49,620 --> 00:10:53,190
of the strong focus of a team and

00:10:51,180 --> 00:10:55,050
actually starter kit so starter kits as

00:10:53,190 --> 00:10:57,750
we said are an easy way for us to

00:10:55,050 --> 00:11:00,480
consume spinnaker pipelines the starter

00:10:57,750 --> 00:11:02,510
kit is composed of several parts so file

00:11:00,480 --> 00:11:04,920
defining the spinnaker application

00:11:02,510 --> 00:11:07,829
directory containing spinnaker pipeline

00:11:04,920 --> 00:11:10,709
templates another one that also contains

00:11:07,829 --> 00:11:14,040
the pipeline configurations and file

00:11:10,709 --> 00:11:16,380
that specifies which pipeline should be

00:11:14,040 --> 00:11:19,529
which configuration should be merged in

00:11:16,380 --> 00:11:22,200
a template to render a pipeline we

00:11:19,529 --> 00:11:24,270
orchestrate all that with the jenkins

00:11:22,200 --> 00:11:27,870
file which defines all the steps that

00:11:24,270 --> 00:11:30,959
the automation ship take from the time

00:11:27,870 --> 00:11:31,920
the starter kit is pushed through the

00:11:30,959 --> 00:11:34,529
repository

00:11:31,920 --> 00:11:36,930
until it's actually deployed or mean to

00:11:34,529 --> 00:11:39,660
sneak a landscape so this has helped in

00:11:36,930 --> 00:11:42,570
creating pipeline very easily safely as

00:11:39,660 --> 00:11:47,070
well and all embedded Esselstyn packaged

00:11:42,570 --> 00:11:53,700
applications very quickly so using all

00:11:47,070 --> 00:11:56,160
those tools services other kids made a

00:11:53,700 --> 00:12:00,149
major impact on us to make our

00:11:56,160 --> 00:12:02,699
deployments we able to have to to

00:12:00,149 --> 00:12:04,560
measure performance metrics so we tried

00:12:02,699 --> 00:12:07,980
the other hundred and sixty-five users

00:12:04,560 --> 00:12:09,720
using spinnaker introduction these users

00:12:07,980 --> 00:12:11,880
as Fred at first it seemed evolved in

00:12:09,720 --> 00:12:15,420
teams and able to deploy to multiple

00:12:11,880 --> 00:12:18,300
cloud providers so mainly SAT cloud

00:12:15,420 --> 00:12:22,790
head of the u.s. Microsoft Azure and GCD

00:12:18,300 --> 00:12:25,700
a set up is is used for

00:12:22,790 --> 00:12:27,740
several projects and we have a lot of

00:12:25,700 --> 00:12:30,590
performance metrics that we are able to

00:12:27,740 --> 00:12:32,900
collect from these pipelines we

00:12:30,590 --> 00:12:35,300
currently have a very complex project

00:12:32,900 --> 00:12:38,450
that has been running for the last year

00:12:35,300 --> 00:12:40,490
and has taught in micro services that I

00:12:38,450 --> 00:12:43,610
currently deployed with the same sinico

00:12:40,490 --> 00:12:46,970
pipeline and these micro services are

00:12:43,610 --> 00:12:49,400
deployed within 20 28 minutes from the

00:12:46,970 --> 00:12:51,290
time the developer push the source code

00:12:49,400 --> 00:12:54,020
through it repository until it reaches

00:12:51,290 --> 00:12:57,770
production so all the benefits that we

00:12:54,020 --> 00:13:01,420
make work as help us scale in a pipeline

00:12:57,770 --> 00:13:05,690
education over the last year we ran over

00:13:01,420 --> 00:13:08,480
44,000 pipelines and the longest time

00:13:05,690 --> 00:13:10,420
that one of our transitions can take is

00:13:08,480 --> 00:13:14,630
actually 37 minutes

00:13:10,420 --> 00:13:16,360
now let JC tell you about what is coming

00:13:14,630 --> 00:13:19,580
next

00:13:16,360 --> 00:13:20,870
yes so actually before we end off with

00:13:19,580 --> 00:13:23,900
the performance we should definitely

00:13:20,870 --> 00:13:26,240
mention when I bar success stories we

00:13:23,900 --> 00:13:27,380
have quite a few success stories but

00:13:26,240 --> 00:13:30,400
here's one that we can actually talk

00:13:27,380 --> 00:13:33,970
about since it just went live this month

00:13:30,400 --> 00:13:37,190
which is sa P cloud extension Factory

00:13:33,970 --> 00:13:40,490
kima runtime which is kind of a mouthful

00:13:37,190 --> 00:13:43,400
but we call it sa P camera run time or

00:13:40,490 --> 00:13:46,130
just kima and it's an open source

00:13:43,400 --> 00:13:48,170
project that offers customers and

00:13:46,130 --> 00:13:50,690
partners an environment that allows them

00:13:48,170 --> 00:13:52,550
to build extensions by using both

00:13:50,690 --> 00:13:56,360
microservices and serve it lists

00:13:52,550 --> 00:13:58,340
functions and it also offers not only

00:13:56,360 --> 00:14:01,370
the possibility to extend one SVP

00:13:58,340 --> 00:14:04,070
solution but it also allows combining

00:14:01,370 --> 00:14:07,490
existing IT IT solutions to create new

00:14:04,070 --> 00:14:10,220
capabilities so kima is pretty cool

00:14:07,490 --> 00:14:12,410
and it's another example of how it's

00:14:10,220 --> 00:14:16,100
been a cranky quickly push products to

00:14:12,410 --> 00:14:18,500
the cloud because it started in January

00:14:16,100 --> 00:14:22,270
right so that was just a few months back

00:14:18,500 --> 00:14:24,680
and it built they built their first

00:14:22,270 --> 00:14:29,000
spinnaker pipeline back in January

00:14:24,680 --> 00:14:30,740
within a week which is very quick and so

00:14:29,000 --> 00:14:34,070
so they were pushing to the cloud very

00:14:30,740 --> 00:14:36,140
early on right now it's running fully in

00:14:34,070 --> 00:14:36,769
production and there's no issues with

00:14:36,140 --> 00:14:39,679
the pipeline

00:14:36,769 --> 00:14:40,459
so it's it's really it's extremely

00:14:39,679 --> 00:14:45,559
reliable

00:14:40,459 --> 00:14:46,069
thanks to spinnaker and yeah so what's

00:14:45,559 --> 00:14:48,199
next

00:14:46,069 --> 00:14:49,970
I'll let Alex tell you a little bit more

00:14:48,199 --> 00:14:53,420
about the technical improvements that

00:14:49,970 --> 00:14:55,459
we'd like to work on yes so we want to

00:14:53,420 --> 00:14:57,170
improve the current architecture we want

00:14:55,459 --> 00:14:59,839
to enforce policies in our spinnaker

00:14:57,170 --> 00:15:01,819
pipelines what we want also to manage or

00:14:59,839 --> 00:15:03,499
service mesh and be able to leverage

00:15:01,819 --> 00:15:05,749
primary analysis to improve performance

00:15:03,499 --> 00:15:07,809
so we really believe that spinnaker can

00:15:05,749 --> 00:15:10,429
bring all those technical improvements

00:15:07,809 --> 00:15:16,249
and that we can achieve them very

00:15:10,429 --> 00:15:18,739
quickly and also we want to increase

00:15:16,249 --> 00:15:22,850
adoption so we want to share articles

00:15:18,739 --> 00:15:24,499
about spinnaker and we want to to share

00:15:22,850 --> 00:15:28,369
our love for it through the power of

00:15:24,499 --> 00:15:29,720
storytelling so yes so the Articles that

00:15:28,369 --> 00:15:32,179
means also writing friendly

00:15:29,720 --> 00:15:36,290
documentation so that others can quickly

00:15:32,179 --> 00:15:39,350
onboard to using the CR CIC CD solution

00:15:36,290 --> 00:15:41,209
as well as hosting internal events where

00:15:39,350 --> 00:15:44,959
we encourage others to adopt the

00:15:41,209 --> 00:15:47,779
platform so that actually wraps up our

00:15:44,959 --> 00:15:51,860
session for today we obviously encourage

00:15:47,779 --> 00:15:54,259
you to to ask us questions not only in

00:15:51,860 --> 00:15:55,850
you know in the Q&A but also to connect

00:15:54,259 --> 00:16:00,410
with us through spinnaker slack channel

00:15:55,850 --> 00:16:02,269
or linkedin we're always available to to

00:16:00,410 --> 00:16:04,790
connect so we thank you very much for

00:16:02,269 --> 00:16:08,709
joining us today and hope that you also

00:16:04,790 --> 00:16:08,709
enjoy the next breakout sessions as well

00:16:14,440 --> 00:16:16,500

YouTube URL: https://www.youtube.com/watch?v=vOHbiDK3tGU


