Title: Dave Farley @ Spinnaker.Live: Software Development in 100 Years Time & Continuous Delivery
Publication date: 2020-06-22
Playlist: Spinnaker.Live 2020
Description: 
	If we were to more clearly define our discipline what would that look like? If “Software Engineering” is real “Engineering” then wouldn't we expect the principles to be long-lasting, durable and probably unsurprising. What sort of ideas will be as true of “Software Engineering” in 100 years time as they are today? What are the foundations on which we could begin to build a true Engineering discipline for our profession? This talk explores some of those ideas and describes why Continuous Delivery may be the best starting point that we have for that.
Captions: 
	00:00:02,739 --> 00:00:09,080
hello everybody so I've been talking

00:00:06,920 --> 00:00:13,670
about software engineering and software

00:00:09,080 --> 00:00:15,440
development for a while now and I got

00:00:13,670 --> 00:00:18,739
involved in the conversation on Twitter

00:00:15,440 --> 00:00:22,819
a little while ago and we were talking

00:00:18,739 --> 00:00:25,819
about the ideas what really makes

00:00:22,819 --> 00:00:28,669
software engineering an engineering

00:00:25,819 --> 00:00:31,189
discipline and somebody said in that

00:00:28,669 --> 00:00:33,500
conversation to me that they thought

00:00:31,189 --> 00:00:35,750
that if we could identify the principles

00:00:33,500 --> 00:00:39,470
the deep principles that represented

00:00:35,750 --> 00:00:41,240
engineering in our discipline then they

00:00:39,470 --> 00:00:44,330
would be durable and they would be as

00:00:41,240 --> 00:00:46,610
true now as they would be in a year's

00:00:44,330 --> 00:00:49,070
time and that got me thinking and that's

00:00:46,610 --> 00:00:51,350
really the one idea that's kind of

00:00:49,070 --> 00:00:54,170
that's behind my presentation tonight I

00:00:51,350 --> 00:00:55,730
want to talk about what software is

00:00:54,170 --> 00:00:57,050
going to look like in the future because

00:00:55,730 --> 00:01:00,260
I think we've learned some lessons about

00:00:57,050 --> 00:01:02,150
what works so one of the way of getting

00:01:00,260 --> 00:01:03,320
into the essence to think about well you

00:01:02,150 --> 00:01:08,479
know if we want to think about was

00:01:03,320 --> 00:01:09,740
durable what some ideas did and what's

00:01:08,479 --> 00:01:12,200
going to be true in a hundred years time

00:01:09,740 --> 00:01:14,420
what was true of software development

00:01:12,200 --> 00:01:16,609
200 years ago and if you're anything

00:01:14,420 --> 00:01:18,079
like me that he kind of first thought is

00:01:16,609 --> 00:01:20,679
that there was nothing at all there was

00:01:18,079 --> 00:01:24,939
nothing I'd read years ago and that's

00:01:20,679 --> 00:01:27,710
merely true but it's not quite true

00:01:24,939 --> 00:01:29,359
there was this this was a Hollerith

00:01:27,710 --> 00:01:33,109
machine this was a computing device

00:01:29,359 --> 00:01:36,679
where I'm used in the US Census in the

00:01:33,109 --> 00:01:42,200
early nineteen something Carothers and

00:01:36,679 --> 00:01:44,929
this was used to calculate crunch

00:01:42,200 --> 00:01:48,439
numbers for the census this here is a

00:01:44,929 --> 00:01:50,630
picture of a computer this was a person

00:01:48,439 --> 00:01:53,149
who was doing computing they didn't call

00:01:50,630 --> 00:01:54,950
the machine a computer in those days the

00:01:53,149 --> 00:01:58,189
person doing it was the computer and

00:01:54,950 --> 00:02:01,490
this is what the computer was creating a

00:01:58,189 --> 00:02:03,469
little program on a punched card that

00:02:01,490 --> 00:02:06,639
the Hollerith machine would read in

00:02:03,469 --> 00:02:09,050
order to execute its algorithm

00:02:06,639 --> 00:02:11,900
interestingly you can kind of capture

00:02:09,050 --> 00:02:14,240
that algorithm as a sequel like

00:02:11,900 --> 00:02:17,860
statement and this is this is the

00:02:14,240 --> 00:02:21,230
algorithm that it was trying to imply

00:02:17,860 --> 00:02:23,930
and that's that's kind of interesting to

00:02:21,230 --> 00:02:26,030
me because what this is saying is that I

00:02:23,930 --> 00:02:28,370
think we would recognize these I think

00:02:26,030 --> 00:02:30,440
we would imagine writing a piece of code

00:02:28,370 --> 00:02:32,930
like this if we were trying to solve a

00:02:30,440 --> 00:02:36,200
problem so there's something about the

00:02:32,930 --> 00:02:40,880
granularity of expression of coding

00:02:36,200 --> 00:02:42,620
ideas that seems to be durable over a

00:02:40,880 --> 00:02:45,680
span of technology that's hard to

00:02:42,620 --> 00:02:48,110
imagine going from a really crude

00:02:45,680 --> 00:02:50,300
machine like this to the modern

00:02:48,110 --> 00:02:54,230
high-tech devices that we operate so

00:02:50,300 --> 00:02:56,570
there's something going on here the next

00:02:54,230 --> 00:02:57,709
thing that we should think about if

00:02:56,570 --> 00:03:01,250
we're thinking about what's going to

00:02:57,709 --> 00:03:04,850
happen in a hundred years time is that

00:03:01,250 --> 00:03:08,420
it's us and not these things that are

00:03:04,850 --> 00:03:09,920
doing writing the computer programs if

00:03:08,420 --> 00:03:11,870
they're doing all of the programming

00:03:09,920 --> 00:03:13,820
there's some of my assumptions what you

00:03:11,870 --> 00:03:16,600
know might be a little bit off work but

00:03:13,820 --> 00:03:19,970
we'll explore that as we going forward

00:03:16,600 --> 00:03:21,769
so let's assume for the sake of this

00:03:19,970 --> 00:03:24,440
talk that what we're thinking about

00:03:21,769 --> 00:03:26,570
still has you know the part of the

00:03:24,440 --> 00:03:28,160
difficulty of writing software it's

00:03:26,570 --> 00:03:31,340
there it still needs to fit inside a

00:03:28,160 --> 00:03:33,620
human head and that's a feature of what

00:03:31,340 --> 00:03:37,670
it is that we need to get right if we're

00:03:33,620 --> 00:03:39,769
going to achieve this so what sort of

00:03:37,670 --> 00:03:41,570
ideas are kind of durable on this kind

00:03:39,769 --> 00:03:43,700
of scale so we could think about

00:03:41,570 --> 00:03:46,100
programming languages our programming

00:03:43,700 --> 00:03:49,190
language is durable over a hundred years

00:03:46,100 --> 00:03:52,549
time well probably not I think what

00:03:49,190 --> 00:03:54,140
about programming frameworks those two

00:03:52,549 --> 00:03:56,570
I'm not really sure that they are likely

00:03:54,140 --> 00:03:58,610
to be certainly frameworks and often

00:03:56,570 --> 00:04:00,700
languages I'm sure that there will still

00:03:58,610 --> 00:04:03,440
be Java around in hundred years time

00:04:00,700 --> 00:04:05,269
equally sure that there will be a

00:04:03,440 --> 00:04:06,860
hundred or affairs and other new

00:04:05,269 --> 00:04:11,269
languages that have sprung up between

00:04:06,860 --> 00:04:12,650
now and May why why is it that the

00:04:11,269 --> 00:04:14,690
languages aren't the things that are

00:04:12,650 --> 00:04:16,640
going to make the big change I think

00:04:14,690 --> 00:04:18,530
people like writing languages and

00:04:16,640 --> 00:04:20,390
frameworks and so will that we create

00:04:18,530 --> 00:04:23,990
those and you have a lot of those sorts

00:04:20,390 --> 00:04:26,660
of things if I'm honest I think mostly

00:04:23,990 --> 00:04:28,790
it's about fashion if you look at the

00:04:26,660 --> 00:04:31,580
kind of key ideas in

00:04:28,790 --> 00:04:34,460
software-development terms there haven't

00:04:31,580 --> 00:04:37,100
been that many big steps in terms of the

00:04:34,460 --> 00:04:39,800
things that we can do and with the

00:04:37,100 --> 00:04:43,930
languages functional programming was was

00:04:39,800 --> 00:04:46,040
it created many decades again ago

00:04:43,930 --> 00:04:48,650
object-oriented programming similar

00:04:46,040 --> 00:04:50,360
procedural programming similar the kinds

00:04:48,650 --> 00:04:51,890
of approaches that the techniques that

00:04:50,360 --> 00:04:55,070
we have at our fingertips were

00:04:51,890 --> 00:04:56,960
established in the 1960s for the large

00:04:55,070 --> 00:04:58,700
part and all we've done since then is

00:04:56,960 --> 00:05:00,290
kind of refine them that me in terms of

00:04:58,700 --> 00:05:02,060
in terms of the tools that we've used

00:05:00,290 --> 00:05:05,480
and built on top of them so I'm not I'm

00:05:02,060 --> 00:05:07,190
not dissing the the languages that are

00:05:05,480 --> 00:05:10,670
available there were some nice languages

00:05:07,190 --> 00:05:13,070
but my argument is my prediction is that

00:05:10,670 --> 00:05:15,620
there are going to be no big leaps in

00:05:13,070 --> 00:05:19,370
terms of productivity down to language

00:05:15,620 --> 00:05:20,870
or framework and and that's largely to

00:05:19,370 --> 00:05:23,140
do with this kind of granularity of

00:05:20,870 --> 00:05:26,450
information we have to specify

00:05:23,140 --> 00:05:28,730
information a specific resolution and

00:05:26,450 --> 00:05:32,110
resolution detail in order to be able to

00:05:28,730 --> 00:05:34,730
encode it so that a computer can operate

00:05:32,110 --> 00:05:37,460
there's not going to be a massive change

00:05:34,730 --> 00:05:39,590
in the level of abstraction to my mind

00:05:37,460 --> 00:05:41,690
that kind of winds us a huge advantage

00:05:39,590 --> 00:05:43,790
there are going to be some special cases

00:05:41,690 --> 00:05:48,320
as there are today we can go and do

00:05:43,790 --> 00:05:50,960
certain kinds of you know very narrowly

00:05:48,320 --> 00:05:55,100
scoped kinds of programming you know

00:05:50,960 --> 00:05:57,680
programming a web page in WordPress or

00:05:55,100 --> 00:06:00,740
something like that versus you know

00:05:57,680 --> 00:06:05,090
writing you know writing a a programming

00:06:00,740 --> 00:06:07,040
in in a more conventional programming

00:06:05,090 --> 00:06:08,390
language but there's not going to be a

00:06:07,040 --> 00:06:11,600
big change in the level of abstraction

00:06:08,390 --> 00:06:12,830
to my mind unless we can expand the

00:06:11,600 --> 00:06:15,920
capacity of our heads

00:06:12,830 --> 00:06:17,630
which we might well do we may well you

00:06:15,920 --> 00:06:22,550
know enhance our ability to retain

00:06:17,630 --> 00:06:24,410
things what about programming paradigms

00:06:22,550 --> 00:06:26,030
what about things like object

00:06:24,410 --> 00:06:27,650
orientation functional programming

00:06:26,030 --> 00:06:30,200
procedural programming those sorts of

00:06:27,650 --> 00:06:32,750
ideas I think that there's there's

00:06:30,200 --> 00:06:38,240
there's a limited degree to which these

00:06:32,750 --> 00:06:40,580
things may have an impact and but again

00:06:38,240 --> 00:06:43,939
I think the huge steps

00:06:40,580 --> 00:06:46,699
probably not so why do I think that's

00:06:43,939 --> 00:06:48,289
the case to me there seems to be

00:06:46,699 --> 00:06:50,060
something fundamental about this level

00:06:48,289 --> 00:06:52,099
of detail that we need to specify to the

00:06:50,060 --> 00:06:53,900
right code and this is a very risky

00:06:52,099 --> 00:06:55,610
prediction but my prediction for a

00:06:53,900 --> 00:06:57,530
hundred years time is that a pro

00:06:55,610 --> 00:06:59,479
programming will still be procedure or

00:06:57,530 --> 00:07:01,129
it was still income in cumbersome budget

00:06:59,479 --> 00:07:03,979
orientation and it will still be

00:07:01,129 --> 00:07:06,229
functional in parts these techniques are

00:07:03,979 --> 00:07:09,889
useful in different contexts and they

00:07:06,229 --> 00:07:12,469
offer us different advantages new

00:07:09,889 --> 00:07:14,659
programming paradigms may be added and

00:07:12,469 --> 00:07:17,419
one of the gaps that seems to me is that

00:07:14,659 --> 00:07:20,139
most of the systems that I see enemy

00:07:17,419 --> 00:07:23,539
involved with you know have the idea of

00:07:20,139 --> 00:07:26,210
services as part of those and those are

00:07:23,539 --> 00:07:29,169
not those are not ideas that surface at

00:07:26,210 --> 00:07:32,210
the level of programming languages and I

00:07:29,169 --> 00:07:35,029
expect that in terms of programming

00:07:32,210 --> 00:07:37,099
paradigm people will invent something

00:07:35,029 --> 00:07:40,159
that kind of allows us to talk about

00:07:37,099 --> 00:07:42,020
services and in Co services more than we

00:07:40,159 --> 00:07:44,300
do today as a common part of our

00:07:42,020 --> 00:07:45,710
development practice we're currently

00:07:44,300 --> 00:07:48,169
missing that kind of level of

00:07:45,710 --> 00:07:50,680
abstraction and I want to do a little

00:07:48,169 --> 00:07:53,569
bit of cider but I'm an old school OOW

00:07:50,680 --> 00:07:55,550
practitioner I make no bones of that and

00:07:53,569 --> 00:07:58,009
it's a bit of a current fashion to day

00:07:55,550 --> 00:07:59,900
and play the value and impact of object

00:07:58,009 --> 00:08:02,690
orientation on the industry I've heard

00:07:59,900 --> 00:08:04,699
people say things like oo failed and I

00:08:02,690 --> 00:08:07,490
think that's just because they don't

00:08:04,699 --> 00:08:09,500
recognize what really happened object

00:08:07,490 --> 00:08:12,080
orientation was an enabling step in

00:08:09,500 --> 00:08:14,330
creating bigger more complex systems the

00:08:12,080 --> 00:08:16,550
reasons that we have the operating

00:08:14,330 --> 00:08:19,250
systems that we have and the kind of the

00:08:16,550 --> 00:08:21,550
approach to hiding information between

00:08:19,250 --> 00:08:24,110
parts of the system is largely down to

00:08:21,550 --> 00:08:25,789
object-oriented thinking and I think it

00:08:24,110 --> 00:08:27,039
also gives us kind of an organizational

00:08:25,789 --> 00:08:30,289
approach that allows us to navigate

00:08:27,039 --> 00:08:33,079
complex problems or spaces that that are

00:08:30,289 --> 00:08:35,269
lacking in other approaches to my view

00:08:33,079 --> 00:08:36,560
and so I think it has it has a place I

00:08:35,269 --> 00:08:38,570
don't think you I don't think it should

00:08:36,560 --> 00:08:43,699
replace any of the others but I think

00:08:38,570 --> 00:08:46,730
you'll it's alongside one idea that

00:08:43,699 --> 00:08:48,500
that's very close to my heart I'm a long

00:08:46,730 --> 00:08:49,790
time practitioner of test-driven

00:08:48,500 --> 00:08:51,740
development so do I think that

00:08:49,790 --> 00:08:53,449
test-driven development will be you know

00:08:51,740 --> 00:08:53,810
still around in a hundred years time and

00:08:53,449 --> 00:08:56,900
dry

00:08:53,810 --> 00:09:00,200
development's well again I can't encode

00:08:56,900 --> 00:09:05,779
this is orange rather than read in the I

00:09:00,200 --> 00:09:07,340
hope so I hope that is I think it's is

00:09:05,779 --> 00:09:09,860
important I believe that test-driven

00:09:07,340 --> 00:09:11,390
development is one of the few genuine

00:09:09,860 --> 00:09:13,550
disciplines that we can genuinely

00:09:11,390 --> 00:09:14,870
consider to be an engineering discipline

00:09:13,550 --> 00:09:17,810
in the way in which we approach solving

00:09:14,870 --> 00:09:19,580
problems in software we use the tests as

00:09:17,810 --> 00:09:21,440
the executable specification to

00:09:19,580 --> 00:09:23,450
cross-check the work that we're doing

00:09:21,440 --> 00:09:24,440
without that we're kind of guessing and

00:09:23,450 --> 00:09:27,410
we're just kind of crossing our fingers

00:09:24,440 --> 00:09:30,140
and hoping that the software works and

00:09:27,410 --> 00:09:32,029
so my very very risky prediction is that

00:09:30,140 --> 00:09:34,490
when a kindergarten child learns to

00:09:32,029 --> 00:09:36,110
write her first line of code in her

00:09:34,490 --> 00:09:37,310
moodiest time it will be done in the

00:09:36,110 --> 00:09:39,529
context of the test-driven development

00:09:37,310 --> 00:09:41,150
at least that's what I hope is the case

00:09:39,529 --> 00:09:44,779
because I think that's a better would be

00:09:41,150 --> 00:09:47,240
a better way of teaching you some other

00:09:44,779 --> 00:09:50,060
ideas that are kind that other are I

00:09:47,240 --> 00:09:52,430
think to my mind much more durable and

00:09:50,060 --> 00:09:55,820
more profound I think that software is

00:09:52,430 --> 00:09:58,190
deeply about learning it's one of the

00:09:55,820 --> 00:09:59,839
mistakes that we have made is to try and

00:09:58,190 --> 00:10:02,690
think of software development as an

00:09:59,839 --> 00:10:04,970
exercise in production engineering it is

00:10:02,690 --> 00:10:07,339
not we never have a production problem

00:10:04,970 --> 00:10:09,140
but we always have a learning problem so

00:10:07,339 --> 00:10:12,200
we should be focusing on becoming

00:10:09,140 --> 00:10:14,570
world-class practitioners at learning

00:10:12,200 --> 00:10:17,600
and if you want to do that we need to

00:10:14,570 --> 00:10:19,580
take iterations seriously I think this

00:10:17,600 --> 00:10:22,130
is all I do that is not going to go away

00:10:19,580 --> 00:10:24,050
we need to take a feedback seriously we

00:10:22,130 --> 00:10:26,270
need to gather their information back to

00:10:24,050 --> 00:10:27,800
where we finally so that we can inspect

00:10:26,270 --> 00:10:29,900
and adapt we need to work incrementally

00:10:27,800 --> 00:10:32,060
thinking in terms of modularity of

00:10:29,900 --> 00:10:34,250
systems and being able to build up

00:10:32,060 --> 00:10:35,990
systems piece by piece and step by step

00:10:34,250 --> 00:10:37,670
over time we need to be working

00:10:35,990 --> 00:10:39,500
experimentally because that's how do you

00:10:37,670 --> 00:10:41,300
do real learning in the real world

00:10:39,500 --> 00:10:43,160
rather than just guessing what the

00:10:41,300 --> 00:10:44,690
answer is to something we carry out

00:10:43,160 --> 00:10:46,700
little experiments and we need to be

00:10:44,690 --> 00:10:49,850
empirical we need to be measuring things

00:10:46,700 --> 00:10:53,240
in the context of the real world so that

00:10:49,850 --> 00:10:54,920
we can understand how they land in the

00:10:53,240 --> 00:10:58,279
world and how they and how they really

00:10:54,920 --> 00:11:01,820
work so I think that these five things

00:10:58,279 --> 00:11:04,040
for me are keys to become becoming you

00:11:01,820 --> 00:11:07,269
know much much better at learning and

00:11:04,040 --> 00:11:09,920
for me this is really talking about

00:11:07,269 --> 00:11:12,769
scientific style reasoning and thinking

00:11:09,920 --> 00:11:14,720
to software development so why do I

00:11:12,769 --> 00:11:16,970
think this is the case these are

00:11:14,720 --> 00:11:18,709
foundational concepts to me they're that

00:11:16,970 --> 00:11:20,839
grounded in I need to learn and deepen

00:11:18,709 --> 00:11:23,149
our understanding even if the machines

00:11:20,839 --> 00:11:24,829
are writing the code my belief is that

00:11:23,149 --> 00:11:26,360
these things will still be true they

00:11:24,829 --> 00:11:28,670
will still be applying these techniques

00:11:26,360 --> 00:11:32,889
because this is how you apply this is

00:11:28,670 --> 00:11:36,769
the best way that we understand of

00:11:32,889 --> 00:11:40,790
learning and and creating more complex

00:11:36,769 --> 00:11:45,320
understanding in complex systems this is

00:11:40,790 --> 00:11:46,910
how science works the little part of

00:11:45,320 --> 00:11:48,949
software development that's interesting

00:11:46,910 --> 00:11:51,110
is managing the complexity of the

00:11:48,949 --> 00:11:53,120
problem so that it fits inside a human

00:11:51,110 --> 00:11:55,459
beings head and for that we need a

00:11:53,120 --> 00:11:56,930
different kind of properties we need to

00:11:55,459 --> 00:11:59,500
think in terms of modularity

00:11:56,930 --> 00:12:02,540
I think this too is a durable idea

00:11:59,500 --> 00:12:05,959
separation of concerns being able to

00:12:02,540 --> 00:12:08,240
isolate the system functionally entering

00:12:05,959 --> 00:12:10,880
into pieces that are focused on doing

00:12:08,240 --> 00:12:12,230
one thing well information hiding making

00:12:10,880 --> 00:12:13,910
sure the information doesn't leak

00:12:12,230 --> 00:12:18,350
between different parts of the system

00:12:13,910 --> 00:12:21,079
and abstraction and so that so that we

00:12:18,350 --> 00:12:24,319
can again layer the system and unhide

00:12:21,079 --> 00:12:25,819
hide leakages between different parts of

00:12:24,319 --> 00:12:27,949
the system and think about them in

00:12:25,819 --> 00:12:31,010
pieces and cohesion keeping the things

00:12:27,949 --> 00:12:32,779
that are that are related close together

00:12:31,010 --> 00:12:37,610
keeping the things that are unrelated

00:12:32,779 --> 00:12:39,560
far apart these ideas that are based on

00:12:37,610 --> 00:12:41,480
I need to compose ideas into pieces that

00:12:39,560 --> 00:12:44,750
are small enough to fit into a human

00:12:41,480 --> 00:12:46,910
head so my prediction is even if we are

00:12:44,750 --> 00:12:49,310
mechanically extending our cognitive

00:12:46,910 --> 00:12:51,230
function we will still need to partition

00:12:49,310 --> 00:12:53,870
the problems to fit into our new

00:12:51,230 --> 00:12:55,430
expanded heads so these two are going to

00:12:53,870 --> 00:13:01,550
be the kinds of ideas that are going to

00:12:55,430 --> 00:13:03,380
be durable in 100 years time I'm fed on

00:13:01,550 --> 00:13:04,970
my name is associative continuous

00:13:03,380 --> 00:13:07,940
delivery I was one of the authors of the

00:13:04,970 --> 00:13:09,769
continuous delivery book and and I

00:13:07,940 --> 00:13:12,260
believe that continuous delivery is

00:13:09,769 --> 00:13:14,389
probably in this space because I think

00:13:12,260 --> 00:13:15,890
it's the application of a lot of the

00:13:14,389 --> 00:13:16,279
ideas that I've already just talked

00:13:15,890 --> 00:13:18,410
about

00:13:16,279 --> 00:13:20,930
I think the continuous delivery will be

00:13:18,410 --> 00:13:23,689
a long lasting idea so why do I believe

00:13:20,930 --> 00:13:24,680
to be true continues to deliveries based

00:13:23,689 --> 00:13:26,449
on the application of the scientific

00:13:24,680 --> 00:13:28,519
method to software development it's

00:13:26,449 --> 00:13:31,459
about establishing fast efficient

00:13:28,519 --> 00:13:36,740
feedback loops so that we can learn it

00:13:31,459 --> 00:13:41,059
rests on iteration feedback incremental

00:13:36,740 --> 00:13:43,309
development experiment an empirical

00:13:41,059 --> 00:13:46,670
discovery so the foundations for

00:13:43,309 --> 00:13:48,139
learning are there so my prediction is

00:13:46,670 --> 00:13:50,240
even if the machines are right in the

00:13:48,139 --> 00:13:53,240
cupboard they're gonna adopt continuous

00:13:50,240 --> 00:13:55,939
delivery that's the one talk thank you

00:13:53,240 --> 00:13:58,720
very much Dave can you take a question

00:13:55,939 --> 00:14:01,819
from the audience

00:13:58,720 --> 00:14:04,100
of course yeah so what would be a good

00:14:01,819 --> 00:14:06,410
way to archive information for the

00:14:04,100 --> 00:14:08,480
future so it doesn't get lost durables

00:14:06,410 --> 00:14:13,999
data storage today and plans to pervert

00:14:08,480 --> 00:14:19,999
preserve info so what that's a good

00:14:13,999 --> 00:14:21,649
question I said edging it on stone seems

00:14:19,999 --> 00:14:26,300
to have been the one that's worked quite

00:14:21,649 --> 00:14:28,610
well I I honestly don't know what the

00:14:26,300 --> 00:14:31,600
answer is in terms of these I think the

00:14:28,610 --> 00:14:34,850
I think where we are at the moment as

00:14:31,600 --> 00:14:36,019
long as our high-tech civilization lasts

00:14:34,850 --> 00:14:37,610
which if we're still going to be

00:14:36,019 --> 00:14:39,139
programming in you know hundred years

00:14:37,610 --> 00:14:41,089
time then then putting stuff in the

00:14:39,139 --> 00:14:43,279
cloud on the Internet is probably a good

00:14:41,089 --> 00:14:45,649
idea because we're going to keep riffing

00:14:43,279 --> 00:14:47,990
revving there and changing that works

00:14:45,649 --> 00:14:49,879
and the storage one of the things that's

00:14:47,990 --> 00:14:51,649
kind of interesting to me exhibit a

00:14:49,879 --> 00:14:52,639
long-term storage changes and the

00:14:51,649 --> 00:14:54,949
impacts can have on the software

00:14:52,639 --> 00:14:57,290
development slightly off topic slightly

00:14:54,949 --> 00:14:59,689
not answering the question is the idea

00:14:57,290 --> 00:15:01,189
of a massive scale non-volatile Ram

00:14:59,689 --> 00:15:03,079
because that's really going to change

00:15:01,189 --> 00:15:04,309
the game it's going to really change the

00:15:03,079 --> 00:15:06,350
way that we think about in practice

00:15:04,309 --> 00:15:11,209
software development I think so that's

00:15:06,350 --> 00:15:13,790
kind of exciting an exciting idea oh but

00:15:11,209 --> 00:15:15,199
now I go yeah I think if you really want

00:15:13,790 --> 00:15:18,619
if you want to really want to cover your

00:15:15,199 --> 00:15:20,029
bets then carving into stone is is the

00:15:18,619 --> 00:15:24,829
most durable thing that we found as a

00:15:20,029 --> 00:15:26,889
species so far are there any more

00:15:24,829 --> 00:15:26,889
questions

00:15:27,670 --> 00:15:36,110
so far we we have a few seconds left I

00:15:32,959 --> 00:15:37,670
think oh yeah and it's questioner so I

00:15:36,110 --> 00:15:40,130
think no I think we don't have time for

00:15:37,670 --> 00:15:43,399
any more questions Dave but thank you so

00:15:40,130 --> 00:15:45,170
much for your talk and for sharing that

00:15:43,399 --> 00:15:45,920
with us and maybe if you have more

00:15:45,170 --> 00:15:48,350
questions

00:15:45,920 --> 00:15:51,560
since do do you like to take questions

00:15:48,350 --> 00:15:55,880
on Twitter sure by all means contacts on

00:15:51,560 --> 00:15:58,339
Twitter sign up for YouTube channel yeah

00:15:55,880 --> 00:16:00,470
check them out and and keep the

00:15:58,339 --> 00:16:01,910
conversation going and hashtag spinnaker

00:16:00,470 --> 00:16:04,370
live so we all know is part of this

00:16:01,910 --> 00:16:06,760
conversation thank you so much thank you

00:16:04,370 --> 00:16:06,760

YouTube URL: https://www.youtube.com/watch?v=3NoC07lmTcE


