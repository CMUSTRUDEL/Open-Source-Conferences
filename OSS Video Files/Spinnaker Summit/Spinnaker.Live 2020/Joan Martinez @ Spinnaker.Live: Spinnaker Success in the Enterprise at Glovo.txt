Title: Joan Martinez @ Spinnaker.Live: Spinnaker Success in the Enterprise at Glovo
Publication date: 2020-06-18
Playlist: Spinnaker.Live 2020
Description: 
	As our Tech team was growing a lot we saw that our manual deployment was becoming a productivity killer. We decided to start our journey towards Continuous deployment. During this talk, we go through the different steps, lessons learned and outcome of that effort.
Captions: 
	00:00:06,200 --> 00:00:12,980
okay and thank you everyone from for

00:00:10,280 --> 00:00:16,279
joining this talk I'm extremely happy to

00:00:12,980 --> 00:00:20,390
be in the spinnaker life and this is my

00:00:16,279 --> 00:00:23,810
first time my speaking at public events

00:00:20,390 --> 00:00:26,869
so I hope it goes good so today we're

00:00:23,810 --> 00:00:29,810
going to talk about over journey and how

00:00:26,869 --> 00:00:31,760
we went how would move our monolithic

00:00:29,810 --> 00:00:35,449
application to to continuous deployment

00:00:31,760 --> 00:00:38,510
and this is not going to be like a super

00:00:35,449 --> 00:00:40,190
technical and talk it just basically

00:00:38,510 --> 00:00:41,989
we're going to go through the key

00:00:40,190 --> 00:00:45,650
learnings and under journey we went

00:00:41,989 --> 00:00:48,530
through and doing this this project so a

00:00:45,650 --> 00:00:52,010
little bit about me my name is John and

00:00:48,530 --> 00:00:53,690
I'm from Barcelona and I'm the

00:00:52,010 --> 00:00:57,409
engineering manager for infrastructure

00:00:53,690 --> 00:01:00,799
at at global as part of my hobbies I

00:00:57,409 --> 00:01:05,269
like to make bread and play tennis and I

00:01:00,799 --> 00:01:08,540
am really bad at both of them so yeah

00:01:05,269 --> 00:01:10,579
and so a little bit about global just to

00:01:08,540 --> 00:01:14,000
get a little bit of context of our

00:01:10,579 --> 00:01:16,460
domain so global is basically an app

00:01:14,000 --> 00:01:18,109
that what we want to accomplish or the

00:01:16,460 --> 00:01:20,390
vision we have is to make everything

00:01:18,109 --> 00:01:23,000
that it's in your city instantly

00:01:20,390 --> 00:01:26,210
available so our main category right now

00:01:23,000 --> 00:01:30,009
is is deliver food but we have a lot

00:01:26,210 --> 00:01:33,520
more things right you groceries gifs and

00:01:30,009 --> 00:01:36,020
pharmacy items and you can even ask

00:01:33,520 --> 00:01:41,240
couriers to go and pick up your case

00:01:36,020 --> 00:01:44,240
from somewhere so and it's a three sided

00:01:41,240 --> 00:01:47,630
marketplace so we have users clubs and

00:01:44,240 --> 00:01:50,390
partners and it's really important like

00:01:47,630 --> 00:01:53,030
the reliability of our system not only

00:01:50,390 --> 00:01:56,270
because of the user that they wouldn't

00:01:53,030 --> 00:01:58,729
be able to order but um every minute the

00:01:56,270 --> 00:02:03,109
way down blow over some partners at

00:01:58,729 --> 00:02:04,280
losing in revenue and yeah just to put a

00:02:03,109 --> 00:02:06,859
little bit of the growth we've had

00:02:04,280 --> 00:02:09,020
during the last two years so we went

00:02:06,859 --> 00:02:11,960
from three countries and eight cities to

00:02:09,020 --> 00:02:15,560
more than 22 countries and more than 300

00:02:11,960 --> 00:02:17,720
cities at the moment so that's a little

00:02:15,560 --> 00:02:21,410
bit the context about the

00:02:17,720 --> 00:02:25,790
our company global and now I'm going to

00:02:21,410 --> 00:02:27,590
put their context on em how did the the

00:02:25,790 --> 00:02:32,540
engineering team was at the moment and

00:02:27,590 --> 00:02:34,870
the process of deploying so we have we

00:02:32,540 --> 00:02:37,400
had and we have a monolith so all

00:02:34,870 --> 00:02:41,030
back-end developers are contributing to

00:02:37,400 --> 00:02:42,860
that one area and we happen to grow a

00:02:41,030 --> 00:02:45,260
lot in terms of people in the

00:02:42,860 --> 00:02:48,980
engineering team so we blew from 40

00:02:45,260 --> 00:02:52,700
people to more than 200 and the release

00:02:48,980 --> 00:02:54,680
process was manual but really manual

00:02:52,700 --> 00:02:58,209
there were a lot of manual intervention

00:02:54,680 --> 00:03:01,790
and a lot of manual steps here I put a

00:02:58,209 --> 00:03:06,080
tweet from charity saying that that for

00:03:01,790 --> 00:03:07,730
a57 engineering team and it's good that

00:03:06,080 --> 00:03:11,630
you automate everything after you match

00:03:07,730 --> 00:03:14,690
code to get at least one full day per

00:03:11,630 --> 00:03:17,840
week so for us it was a lot worse were

00:03:14,690 --> 00:03:19,580
more than a 5 7 person engineering team

00:03:17,840 --> 00:03:23,420
and therefore we're losing a lot more

00:03:19,580 --> 00:03:26,840
than one full day per week and just on

00:03:23,420 --> 00:03:28,400
deploying so just to put some context on

00:03:26,840 --> 00:03:31,100
how bad things were

00:03:28,400 --> 00:03:35,360
so this is our deployment schedule at

00:03:31,100 --> 00:03:38,120
the time six months ago so Friday's no

00:03:35,360 --> 00:03:39,739
way we're not going to deploy it we you

00:03:38,120 --> 00:03:45,230
know we're not going to risk over

00:03:39,739 --> 00:03:48,049
weekend afternoon again no way we were

00:03:45,230 --> 00:03:49,940
afraid that that would impact minute

00:03:48,049 --> 00:03:53,260
time then it's part of the big time and

00:03:49,940 --> 00:03:56,959
we want to go home at a reasonable time

00:03:53,260 --> 00:04:00,260
ninth time same big time we don't want

00:03:56,959 --> 00:04:02,950
to risk it finally Monday morning we

00:04:00,260 --> 00:04:06,830
have a company meeting every Monday and

00:04:02,950 --> 00:04:08,630
so just looking at this at this it's

00:04:06,830 --> 00:04:11,180
like you really see that the confidence

00:04:08,630 --> 00:04:12,709
on releasing it was not great and we

00:04:11,180 --> 00:04:16,220
were trying to avoid it as much as

00:04:12,709 --> 00:04:19,340
possible and as I said this was a manual

00:04:16,220 --> 00:04:23,090
process so whenever you had to release

00:04:19,340 --> 00:04:26,150
this day after several days of not

00:04:23,090 --> 00:04:27,680
releasing and cumulating changes this

00:04:26,150 --> 00:04:31,750
was just chaotic

00:04:27,680 --> 00:04:34,000
so we even had a rotation and and for

00:04:31,750 --> 00:04:36,100
people that were going to do that

00:04:34,000 --> 00:04:38,590
release and that rotation was called

00:04:36,100 --> 00:04:40,570
like that release commander already the

00:04:38,590 --> 00:04:43,510
name suggests that you will not have a

00:04:40,570 --> 00:04:45,550
lot of fun while doing it and it was

00:04:43,510 --> 00:04:48,810
actually super stressing for for

00:04:45,550 --> 00:04:54,400
engineers to be able to be in charge of

00:04:48,810 --> 00:04:56,770
the releases so just to sum up and these

00:04:54,400 --> 00:04:59,410
were the deployment pain points that we

00:04:56,770 --> 00:05:02,620
had at the moment so the deployment was

00:04:59,410 --> 00:05:07,270
extremely manual the the tool were using

00:05:02,620 --> 00:05:10,480
to deploy and it was it was not great

00:05:07,270 --> 00:05:13,030
and intends to tend to recover we took

00:05:10,480 --> 00:05:16,480
about fifteen to thirty minutes once we

00:05:13,030 --> 00:05:18,610
identified there was an error and this

00:05:16,480 --> 00:05:20,950
was not great and the visual ability it

00:05:18,610 --> 00:05:23,800
gave us on what was happening at every

00:05:20,950 --> 00:05:28,240
one moment of the deployment pipeline it

00:05:23,800 --> 00:05:31,930
was not great but when you were in an

00:05:28,240 --> 00:05:36,490
incident right and the the think failure

00:05:31,930 --> 00:05:39,330
rate it was super super high again this

00:05:36,490 --> 00:05:45,190
is related to the lack of ownership and

00:05:39,330 --> 00:05:47,920
the code of the code so developers were

00:05:45,190 --> 00:05:50,890
just worried until they match the goat

00:05:47,920 --> 00:05:54,820
and after the point everything relied on

00:05:50,890 --> 00:05:57,490
the on the release commander so

00:05:54,820 --> 00:05:58,930
validating that there were no spike of

00:05:57,490 --> 00:06:01,660
error or there were no religions

00:05:58,930 --> 00:06:03,790
increase everything relied on top of the

00:06:01,660 --> 00:06:07,000
same person so there was really no

00:06:03,790 --> 00:06:09,940
ownership people were merging at seven

00:06:07,000 --> 00:06:14,050
the living just because they knew and we

00:06:09,940 --> 00:06:16,480
were not going to release so now I'm

00:06:14,050 --> 00:06:18,850
going to explain a little bit the the

00:06:16,480 --> 00:06:23,440
lessons learned and during this this

00:06:18,850 --> 00:06:26,280
process and so the first one it's about

00:06:23,440 --> 00:06:29,350
the objectives it's important that that

00:06:26,280 --> 00:06:32,740
we take time putting clear objectives

00:06:29,350 --> 00:06:36,790
and that make sense and for us it really

00:06:32,740 --> 00:06:39,340
helped this talk from from Troy and lies

00:06:36,790 --> 00:06:41,830
damn lies and add metrics what he

00:06:39,340 --> 00:06:45,430
specified like leaving and

00:06:41,830 --> 00:06:48,370
indicators and we try to follow that and

00:06:45,430 --> 00:06:50,440
try to improve our light indicators and

00:06:48,370 --> 00:06:52,660
decrease for example failure rate and

00:06:50,440 --> 00:06:54,850
not have objective like increased

00:06:52,660 --> 00:06:57,130
coverage which you could potentially do

00:06:54,850 --> 00:06:59,560
and not affect your friendly rate in

00:06:57,130 --> 00:07:01,360
production also in that talk he

00:06:59,560 --> 00:07:04,570
mentioned for example that that your

00:07:01,360 --> 00:07:06,310
goal should encourage change so mean

00:07:04,570 --> 00:07:08,500
time between failures and decrease mean

00:07:06,310 --> 00:07:11,290
time to recovery they look like the same

00:07:08,500 --> 00:07:14,380
thing but one encourages changes and

00:07:11,290 --> 00:07:17,110
what it tries to and embraces that that

00:07:14,380 --> 00:07:19,930
it will eventually things will fail and

00:07:17,110 --> 00:07:23,980
what you want to optimize is that

00:07:19,930 --> 00:07:26,860
process of recovering and the last part

00:07:23,980 --> 00:07:30,310
of it it's keep the scope clear and

00:07:26,860 --> 00:07:32,200
reduced I don't know if this happens in

00:07:30,310 --> 00:07:34,510
all the companies but it really easy for

00:07:32,200 --> 00:07:38,050
this big project that you're going to

00:07:34,510 --> 00:07:41,560
change quite a lot of things that people

00:07:38,050 --> 00:07:44,170
try to put a lot of more scope in here

00:07:41,560 --> 00:07:46,060
so they try to change to no sequel that

00:07:44,170 --> 00:07:48,880
the ways they try to change to another

00:07:46,060 --> 00:07:52,960
cloud provider or they try to do

00:07:48,880 --> 00:07:55,180
motivation or whatever and idea I think

00:07:52,960 --> 00:07:57,640
it's good that that those have tackled

00:07:55,180 --> 00:08:01,060
if necessary in other projects but they

00:07:57,640 --> 00:08:02,220
have not tried to to fit into into this

00:08:01,060 --> 00:08:04,300
project

00:08:02,220 --> 00:08:07,630
another thing that worked really good

00:08:04,300 --> 00:08:09,730
for us it was teamwork and for this

00:08:07,630 --> 00:08:12,610
project we actually created a temporary

00:08:09,730 --> 00:08:14,200
team for one quarter made of six people

00:08:12,610 --> 00:08:16,840
from from different teams

00:08:14,200 --> 00:08:20,170
I think this worked pretty well and we

00:08:16,840 --> 00:08:23,350
are starting to do it more often at at

00:08:20,170 --> 00:08:25,150
global the the good thing for this is

00:08:23,350 --> 00:08:27,400
the dual leverage a lot the knowledge of

00:08:25,150 --> 00:08:30,430
the different people in the team in our

00:08:27,400 --> 00:08:33,970
case it was important and to get people

00:08:30,430 --> 00:08:35,860
from other areas that they had domain

00:08:33,970 --> 00:08:40,090
knowledge and that would help us a lot

00:08:35,860 --> 00:08:42,280
in creating a better interest rate or to

00:08:40,090 --> 00:08:45,460
make sure that the critical path is not

00:08:42,280 --> 00:08:48,790
broken every time you released also I

00:08:45,460 --> 00:08:53,020
think it's a good opportunity and for

00:08:48,790 --> 00:08:55,980
for the for your employees to be able to

00:08:53,020 --> 00:08:59,049
get out of their comfort zone and

00:08:55,980 --> 00:09:01,299
participate in a project that that it's

00:08:59,049 --> 00:09:03,879
not day-to-day and it's a little bit

00:09:01,299 --> 00:09:06,279
different and finally I think it's good

00:09:03,879 --> 00:09:08,170
that whenever you change these things

00:09:06,279 --> 00:09:09,970
that affect the whole organization you

00:09:08,170 --> 00:09:12,610
get input from everyone in the company

00:09:09,970 --> 00:09:13,360
it's not some platform team just doing

00:09:12,610 --> 00:09:16,420
their own thing

00:09:13,360 --> 00:09:20,499
so with this temporary teams we

00:09:16,420 --> 00:09:22,689
accomplished of that another thing is

00:09:20,499 --> 00:09:24,970
that decisions take time this was this

00:09:22,689 --> 00:09:27,819
was something that initially we didn't

00:09:24,970 --> 00:09:30,790
plan for it but it took longer than we

00:09:27,819 --> 00:09:33,549
expected and there were two main

00:09:30,790 --> 00:09:36,389
decisions that took took us more time so

00:09:33,549 --> 00:09:38,709
one was the employment who we used and

00:09:36,389 --> 00:09:43,029
there were several options here either

00:09:38,709 --> 00:09:45,879
we used the one were using but as we

00:09:43,029 --> 00:09:48,939
said there were several several problems

00:09:45,879 --> 00:09:51,819
here and time to recording was was

00:09:48,939 --> 00:09:56,049
really high and the visibility we had it

00:09:51,819 --> 00:09:59,829
was not great so then we analyzed sp-

00:09:56,049 --> 00:10:01,569
together with alternatives and how we

00:09:59,829 --> 00:10:03,399
beat the decision process was to

00:10:01,569 --> 00:10:06,129
actually create simple deployment

00:10:03,399 --> 00:10:08,860
pipelines with both both tools and see

00:10:06,129 --> 00:10:11,619
which one would fit more over to escape

00:10:08,860 --> 00:10:13,929
so because we had the time to take

00:10:11,619 --> 00:10:15,970
actually those decisions we could really

00:10:13,929 --> 00:10:19,239
see that it's been okay in some areas

00:10:15,970 --> 00:10:21,639
were superior and for us for example the

00:10:19,239 --> 00:10:23,829
ease of usability of a spinnaker and the

00:10:21,639 --> 00:10:26,679
infrastructure tab where we can really

00:10:23,829 --> 00:10:29,169
see what's going on and in our

00:10:26,679 --> 00:10:31,540
infrastructure were instances are filthy

00:10:29,169 --> 00:10:33,879
which ones are and he'll feel and every

00:10:31,540 --> 00:10:37,629
step in the deployment process that for

00:10:33,879 --> 00:10:39,669
us was the the selling point and the

00:10:37,629 --> 00:10:43,350
other decision that we do quite out of

00:10:39,669 --> 00:10:46,959
time it was in deciding the the

00:10:43,350 --> 00:10:49,959
deployment strategy that would follow we

00:10:46,959 --> 00:10:52,809
investigated automatic canary analysis

00:10:49,959 --> 00:10:56,350
and things like that but at the end we

00:10:52,809 --> 00:10:59,619
chose to go for for red black or blue

00:10:56,350 --> 00:11:01,629
green and it's important to get that

00:10:59,619 --> 00:11:04,149
knowledge also because right now we are

00:11:01,629 --> 00:11:06,789
also moving towards and services and

00:11:04,149 --> 00:11:08,709
micro services and maybe those services

00:11:06,789 --> 00:11:09,010
really want to use canary so we are

00:11:08,709 --> 00:11:13,450
ready

00:11:09,010 --> 00:11:15,190
has the knowledge for that so whatever

00:11:13,450 --> 00:11:17,050
are the decisions it's important that

00:11:15,190 --> 00:11:18,130
you document and you communicate those

00:11:17,050 --> 00:11:20,890
decisions to the rest of the

00:11:18,130 --> 00:11:24,130
organization so they can also add

00:11:20,890 --> 00:11:27,760
comments or give their point of view

00:11:24,130 --> 00:11:29,950
whether things are important or not and

00:11:27,760 --> 00:11:32,890
I don't think that we learned and

00:11:29,950 --> 00:11:35,950
probably a third way and so continuous

00:11:32,890 --> 00:11:38,580
deployment is not just automating your

00:11:35,950 --> 00:11:42,100
deployment process so we could have just

00:11:38,580 --> 00:11:44,980
automated what we had but that would not

00:11:42,100 --> 00:11:48,400
have solved all the problems we had so

00:11:44,980 --> 00:11:50,950
we had problems with the build system we

00:11:48,400 --> 00:11:53,890
had problems that they was missing

00:11:50,950 --> 00:11:58,150
tooling and there was missing testing

00:11:53,890 --> 00:12:00,520
infrastructure so for example and in

00:11:58,150 --> 00:12:02,710
order to for us to automate all the

00:12:00,520 --> 00:12:06,040
migration process to do changes in the

00:12:02,710 --> 00:12:09,430
database we could just automate it but

00:12:06,040 --> 00:12:12,760
in a way to get confidence and that it's

00:12:09,430 --> 00:12:14,920
safe to be continuously deploying we

00:12:12,760 --> 00:12:17,440
created some tooling around it to make

00:12:14,920 --> 00:12:20,890
sure that the migrations are safe and

00:12:17,440 --> 00:12:23,350
I'm not going to block and for testing

00:12:20,890 --> 00:12:27,700
it was the same we added end-to-end

00:12:23,350 --> 00:12:31,810
testing and we added a test for the

00:12:27,700 --> 00:12:34,510
critical paths to make sure that not or

00:12:31,810 --> 00:12:37,960
to make sure that all the releases and

00:12:34,510 --> 00:12:41,290
would be working and after after the

00:12:37,960 --> 00:12:46,090
changes and those those those imports

00:12:41,290 --> 00:12:49,570
were not broken and again all this it's

00:12:46,090 --> 00:12:52,390
important to get more confidence on the

00:12:49,570 --> 00:12:54,190
programming process right and apart from

00:12:52,390 --> 00:12:56,710
that there are also infrastructure

00:12:54,190 --> 00:12:59,500
changes that you need to tackle and

00:12:56,710 --> 00:13:02,080
we're moving from a super automated and

00:12:59,500 --> 00:13:05,080
managed deployment tool to something

00:13:02,080 --> 00:13:07,690
like a spinnaker where we had to create

00:13:05,080 --> 00:13:10,960
some of the infrastructure and we took

00:13:07,690 --> 00:13:13,240
advantage of this change to move towards

00:13:10,960 --> 00:13:15,040
immutable infrastructure and taking

00:13:13,240 --> 00:13:19,270
advantage of the big functionality of a

00:13:15,040 --> 00:13:21,870
spinnaker so um at the end there are a

00:13:19,270 --> 00:13:24,240
lot more challenges than

00:13:21,870 --> 00:13:25,980
would describe that the chest and you

00:13:24,240 --> 00:13:27,420
know ultimate deployment there are a lot

00:13:25,980 --> 00:13:29,820
more things that you need to put in

00:13:27,420 --> 00:13:33,270
place in order to get confidence on the

00:13:29,820 --> 00:13:36,480
whole process and another thing is like

00:13:33,270 --> 00:13:38,610
incremental updates I know it's it's a

00:13:36,480 --> 00:13:41,040
cliche and everyone says yeah try to

00:13:38,610 --> 00:13:44,670
provide increment a bit for us

00:13:41,040 --> 00:13:46,950
actually it was I would say one of the

00:13:44,670 --> 00:13:49,260
things that made us succeed in this

00:13:46,950 --> 00:13:51,780
project it really is it when you have

00:13:49,260 --> 00:13:54,720
one of one project like this to actually

00:13:51,780 --> 00:13:56,580
get into your room and for three months

00:13:54,720 --> 00:13:59,520
work there and out of the sudden get out

00:13:56,580 --> 00:14:02,790
of it and say now and I have this and

00:13:59,520 --> 00:14:05,790
for us it wasn't like that we tried to

00:14:02,790 --> 00:14:07,350
gather feedback from developers we try

00:14:05,790 --> 00:14:09,750
to gather feedback from release

00:14:07,350 --> 00:14:13,470
commanders and try to automate as much

00:14:09,750 --> 00:14:15,480
as possible so first thing we we did for

00:14:13,470 --> 00:14:17,970
example there was a lot of work involved

00:14:15,480 --> 00:14:20,730
in creating branches and branching a

00:14:17,970 --> 00:14:22,380
strategy we move towards a more simple

00:14:20,730 --> 00:14:25,260
approach like like from basic

00:14:22,380 --> 00:14:30,510
development that already felt a lot in

00:14:25,260 --> 00:14:34,080
in the released we also added automation

00:14:30,510 --> 00:14:37,170
around database migrations being able to

00:14:34,080 --> 00:14:40,710
validate them being able to run them

00:14:37,170 --> 00:14:43,140
through through CI it really felt and we

00:14:40,710 --> 00:14:45,330
kept gathering feedback for example we

00:14:43,140 --> 00:14:47,730
had problems that the CI was not a

00:14:45,330 --> 00:14:51,200
stable or we were even using different

00:14:47,730 --> 00:14:55,500
build systems between development and

00:14:51,200 --> 00:14:59,730
production to you know the big system to

00:14:55,500 --> 00:15:01,800
when when you have PR and the build

00:14:59,730 --> 00:15:03,690
system when you want to generate the the

00:15:01,800 --> 00:15:05,820
production artifact were different all

00:15:03,690 --> 00:15:08,190
these was causing some problems for

00:15:05,820 --> 00:15:12,900
developers something fast in PRS but

00:15:08,190 --> 00:15:16,380
didn't passing in production and bills

00:15:12,900 --> 00:15:18,720
so at the end and we gathered all that

00:15:16,380 --> 00:15:21,390
feedback and that was what we were

00:15:18,720 --> 00:15:23,040
trying to prove but I'm trying to also

00:15:21,390 --> 00:15:25,320
say here is that you don't really need

00:15:23,040 --> 00:15:27,030
to go and change your deployment there

00:15:25,320 --> 00:15:29,970
are a lot of things along your process

00:15:27,030 --> 00:15:32,079
that you can actually change like like

00:15:29,970 --> 00:15:34,300
yeah I said all the

00:15:32,079 --> 00:15:37,089
debranching a strategy of the applying

00:15:34,300 --> 00:15:39,459
migrations whatever is causing problems

00:15:37,089 --> 00:15:44,139
and to your developers you can't really

00:15:39,459 --> 00:15:46,959
focus on that I don't think that that we

00:15:44,139 --> 00:15:48,910
discovered is that it really it was hard

00:15:46,959 --> 00:15:52,389
at the beginning and to change how

00:15:48,910 --> 00:15:54,610
people were working so people weren't

00:15:52,389 --> 00:15:58,239
really used to deploy at 7:00

00:15:54,610 --> 00:16:00,519
I'm sorry to match at 7:00 and home

00:15:58,239 --> 00:16:05,170
because they they knew we're not going

00:16:00,519 --> 00:16:07,540
to to remix and change thing and also

00:16:05,170 --> 00:16:10,769
they knew we're not going to release on

00:16:07,540 --> 00:16:14,350
pink on big time and all these things so

00:16:10,769 --> 00:16:16,389
changing to a more another way of

00:16:14,350 --> 00:16:19,059
working where you are more responsible

00:16:16,389 --> 00:16:21,309
for things and that you know it's you

00:16:19,059 --> 00:16:24,129
that you need to judge whether it's

00:16:21,309 --> 00:16:28,420
worth it to risk or it's worth it to

00:16:24,129 --> 00:16:31,749
deploy on Friday at night or not so

00:16:28,420 --> 00:16:33,639
having that flexibility at first it cost

00:16:31,749 --> 00:16:35,949
some problems but I would say that the

00:16:33,639 --> 00:16:39,339
whole organization at the super super

00:16:35,949 --> 00:16:42,399
fast and in order to that I think it was

00:16:39,339 --> 00:16:45,670
quite good to do workshops and create

00:16:42,399 --> 00:16:48,939
documentation on how to for example how

00:16:45,670 --> 00:16:50,679
did a new CI CD works what to do when

00:16:48,939 --> 00:16:52,299
you want to provide what to do when do

00:16:50,679 --> 00:16:55,779
you want to put the change as fast as

00:16:52,299 --> 00:16:58,449
possible in production and also and the

00:16:55,779 --> 00:17:00,819
tooling we created tooling and for

00:16:58,449 --> 00:17:04,299
example as you can see in this picture

00:17:00,819 --> 00:17:06,370
that it sends you well it says like bot

00:17:04,299 --> 00:17:09,730
that notifies you when when changes are

00:17:06,370 --> 00:17:12,189
going through the CI and this also

00:17:09,730 --> 00:17:15,789
helped a lot of people getting ownership

00:17:12,189 --> 00:17:18,130
or undead changes and taking care of

00:17:15,789 --> 00:17:20,199
that releases putting it in a for

00:17:18,130 --> 00:17:24,639
example general channel it didn't work

00:17:20,199 --> 00:17:30,389
but like individual notifications it

00:17:24,639 --> 00:17:34,360
works really great and really good so

00:17:30,389 --> 00:17:36,970
another thing that that the DT important

00:17:34,360 --> 00:17:41,529
is that you need to observe your your CI

00:17:36,970 --> 00:17:44,470
CD sometimes I think CIC B doesn't get

00:17:41,529 --> 00:17:45,220
enough loss and it's a critical system

00:17:44,470 --> 00:17:47,830
right

00:17:45,220 --> 00:17:49,900
system that it's between your develop

00:17:47,830 --> 00:17:53,890
well your code and your production

00:17:49,900 --> 00:17:57,100
system and it's a tool that can make

00:17:53,890 --> 00:17:59,679
your development team a lot more

00:17:57,100 --> 00:18:03,340
productive right so whatever you improve

00:17:59,679 --> 00:18:05,590
in your CI CV as as your organization

00:18:03,340 --> 00:18:07,840
keeps growing it will have more and more

00:18:05,590 --> 00:18:11,380
impact so for that you need to treat it

00:18:07,840 --> 00:18:14,049
as a critical system like any other

00:18:11,380 --> 00:18:16,179
critical system you observability to

00:18:14,049 --> 00:18:17,770
actually know what is going on in each

00:18:16,179 --> 00:18:20,559
of the steps what do you want to

00:18:17,770 --> 00:18:23,260
optimize what do you want to to improve

00:18:20,559 --> 00:18:27,340
and in order to focus on on the on the

00:18:23,260 --> 00:18:30,940
right things so what was the outcome so

00:18:27,340 --> 00:18:32,289
the outcome was great I mean I was

00:18:30,940 --> 00:18:35,440
extremely happy and the whole

00:18:32,289 --> 00:18:37,870
organization was extremely happy so we

00:18:35,440 --> 00:18:40,270
managed to automate all the process so

00:18:37,870 --> 00:18:43,510
right now there's no more relief

00:18:40,270 --> 00:18:46,419
commander and that already as I said

00:18:43,510 --> 00:18:49,630
we're losing a lot of time per per week

00:18:46,419 --> 00:18:52,059
on manual deploy so that's already a big

00:18:49,630 --> 00:18:54,340
advantage we increased a lot or

00:18:52,059 --> 00:19:00,730
deployments per day and we were

00:18:54,340 --> 00:19:02,200
releasing on Fridays in the afternoon we

00:19:00,730 --> 00:19:05,890
had no problem we got a lot of

00:19:02,200 --> 00:19:08,830
confidence in the process and the more

00:19:05,890 --> 00:19:11,169
you develop you you see it really the

00:19:08,830 --> 00:19:12,789
benefits of this so we had for example

00:19:11,169 --> 00:19:15,909
to optimize some things in the other

00:19:12,789 --> 00:19:18,490
ways being able to actually test things

00:19:15,909 --> 00:19:21,429
put some something to see if that

00:19:18,490 --> 00:19:23,530
improved and get feedback quite fast and

00:19:21,429 --> 00:19:25,120
not wait for three days it really made

00:19:23,530 --> 00:19:28,480
the process of improving things a lot

00:19:25,120 --> 00:19:30,610
faster again the feature turnaround is

00:19:28,480 --> 00:19:34,090
one hour to one hour and a half which is

00:19:30,610 --> 00:19:36,580
still something that can be improved but

00:19:34,090 --> 00:19:39,580
a lot better than what we had and that's

00:19:36,580 --> 00:19:44,440
why we need to still and get more

00:19:39,580 --> 00:19:45,070
insights on how our CI CI works and time

00:19:44,440 --> 00:19:48,730
to recover

00:19:45,070 --> 00:19:52,320
it was drastically dropped to one to two

00:19:48,730 --> 00:19:56,230
minutes by using a different tool and

00:19:52,320 --> 00:19:58,520
the insights we get on the Pro Mini it's

00:19:56,230 --> 00:20:00,470
great and what

00:19:58,520 --> 00:20:03,260
it was more surprising for us it was a

00:20:00,470 --> 00:20:06,740
change failure great and we're expecting

00:20:03,260 --> 00:20:09,500
a drop but not the big of a drop so to

00:20:06,740 --> 00:20:11,540
be to be honest week we added some some

00:20:09,500 --> 00:20:15,550
tooling around to detect as early as

00:20:11,540 --> 00:20:17,570
possible the problems and we we added

00:20:15,550 --> 00:20:20,480
end-to-end testing but we're not

00:20:17,570 --> 00:20:25,150
expecting to have this significant drop

00:20:20,480 --> 00:20:29,360
and but if you correlate these two and

00:20:25,150 --> 00:20:32,960
the ownership of or giving ownership of

00:20:29,360 --> 00:20:35,180
the code to developers we saw an

00:20:32,960 --> 00:20:39,130
increase for example on the usage of

00:20:35,180 --> 00:20:43,460
feature flags and we saw an increase of

00:20:39,130 --> 00:20:46,910
usage or adding more observability a

00:20:43,460 --> 00:20:48,110
mormon and monitoring to to the to the

00:20:46,910 --> 00:20:51,650
features they were released

00:20:48,110 --> 00:20:53,420
so even testing locally people were

00:20:51,650 --> 00:20:55,250
testing more locally and adding more

00:20:53,420 --> 00:20:58,610
tests just because that sense of

00:20:55,250 --> 00:21:00,560
ownership so I think that really really

00:20:58,610 --> 00:21:05,150
really nice thing that change in the

00:21:00,560 --> 00:21:09,710
culture for for over company so what's

00:21:05,150 --> 00:21:11,720
the future for us and after this so the

00:21:09,710 --> 00:21:15,530
process is great we improved a lot but

00:21:11,720 --> 00:21:17,900
we still need to to optimize and to

00:21:15,530 --> 00:21:21,770
scale to more than 300 engineers as I

00:21:17,900 --> 00:21:23,960
said we would have like around one hour

00:21:21,770 --> 00:21:25,970
and a half and from the moment you met

00:21:23,960 --> 00:21:29,030
to the moment you see your coding

00:21:25,970 --> 00:21:32,810
production so we need to get more

00:21:29,030 --> 00:21:36,020
insights on our CI and try to bring that

00:21:32,810 --> 00:21:37,820
number down we also need to leverage all

00:21:36,020 --> 00:21:40,220
the with what we learned about

00:21:37,820 --> 00:21:42,740
continuous deployment and CI a and C B

00:21:40,220 --> 00:21:47,720
and in our transition to micro services

00:21:42,740 --> 00:21:49,790
and how to get the same behavior for the

00:21:47,720 --> 00:21:53,450
new services that we are trying to to

00:21:49,790 --> 00:21:57,110
put and yeah and finally trying to adapt

00:21:53,450 --> 00:21:59,570
and continue the Liberty practices for

00:21:57,110 --> 00:22:02,240
machine learning models that that we are

00:21:59,570 --> 00:22:05,000
doing and expand the continuous delivery

00:22:02,240 --> 00:22:08,540
and deployment as much as possible

00:22:05,000 --> 00:22:12,510
across the whole organization so that

00:22:08,540 --> 00:22:15,750
was an all from from my side and

00:22:12,510 --> 00:22:18,360
explain more or less the day journey and

00:22:15,750 --> 00:22:22,790
takeaways of the whole project so thank

00:22:18,360 --> 00:22:22,790
you a lot for for joining and listening

00:22:28,559 --> 00:22:30,620

YouTube URL: https://www.youtube.com/watch?v=gfPPsQ2lg4I


