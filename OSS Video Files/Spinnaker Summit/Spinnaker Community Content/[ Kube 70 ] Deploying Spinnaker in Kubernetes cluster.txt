Title: [ Kube 70 ] Deploying Spinnaker in Kubernetes cluster
Publication date: 2020-06-26
Playlist: Spinnaker Community Content
Description: 
	In this video I will show you how to deploy Spinnaker in your Kubernetes cluster using Halyard.
Spinnaker is an open-source, multi-cloud continuous delivery platform that helps you release software changes with high velocity and confidence.

Spinnaker Install Doc:
https://github.com/justmeandopensource/kubernetes/blob/master/docs/setup-spinnaker.md

Spinnaker Concepts:
https://www.spinnaker.io/concepts/

Spinnaker Installation Steps:
https://www.spinnaker.io/setup/install/

Learn Kubernetes Playlist:
https://www.youtube.com/playlist?list=PL34sAs7_26wNBRWM6BDhnonoA5FMERax0

Hope you enjoyed this video. Please share it with your friends and don't forget to subscribe to my channel. For any questions/issues/feedback, please leave me a comment and I will be happy to help.

Thanks for watching.


If you wish to support me:
https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=F8FN37PAD629Y&source=url


#kubernetes #spinnaker #learnkubernetes #justmekubernetes
Captions: 
	00:00:00,310 --> 00:00:04,049
[Music]

00:00:05,779 --> 00:00:11,040
hello we was welcome to this video right

00:00:09,030 --> 00:00:14,460
in this video let's see how to deploy

00:00:11,040 --> 00:00:16,770
spinnaker in kubernetes cluster so many

00:00:14,460 --> 00:00:19,020
viewers asked me how to deploy spinnaker

00:00:16,770 --> 00:00:20,730
in a kubernetes environment so that's

00:00:19,020 --> 00:00:24,300
what we're gonna be seeing in this video

00:00:20,730 --> 00:00:26,580
and probably in next few videos we will

00:00:24,300 --> 00:00:30,300
see if I've got some time I'll also show

00:00:26,580 --> 00:00:33,510
you how to use spinnaker for your CI CD

00:00:30,300 --> 00:00:35,370
environment so spinnaker is a continuous

00:00:33,510 --> 00:00:38,129
delivery in continuous deployment

00:00:35,370 --> 00:00:41,030
platform you can use spinnaker to deploy

00:00:38,129 --> 00:00:44,309
resources deploy your application to

00:00:41,030 --> 00:00:47,850
kubernetes to multiple clouds like as

00:00:44,309 --> 00:00:50,250
your AWS GCP and in this video let's see

00:00:47,850 --> 00:00:52,800
how to deploy how to yea how to deploy

00:00:50,250 --> 00:00:55,440
spinnaker in a couple areas environment

00:00:52,800 --> 00:00:57,120
and probably in the next few videos I

00:00:55,440 --> 00:01:01,440
will show you a continuous deployment

00:00:57,120 --> 00:01:04,769
example to show how to deploy your apps

00:01:01,440 --> 00:01:06,600
to kubernetes using spinnaker all right

00:01:04,769 --> 00:01:09,979
so I'm gonna head to the spinnaker

00:01:06,600 --> 00:01:11,970
architecture now spinnaker architecture

00:01:09,979 --> 00:01:14,460
just to show you what are all the

00:01:11,970 --> 00:01:17,280
components involved in spinnaker so

00:01:14,460 --> 00:01:20,780
spinnaker consists of several micro

00:01:17,280 --> 00:01:24,750
services like deck gate or card driver

00:01:20,780 --> 00:01:28,380
front 50 roscoe and few others so down

00:01:24,750 --> 00:01:30,570
below so this is the spinnaker

00:01:28,380 --> 00:01:33,900
architecture so the components involved

00:01:30,570 --> 00:01:35,880
in spinnaker deck is the web UI so when

00:01:33,900 --> 00:01:38,310
you go to spinnaker web dashboard so

00:01:35,880 --> 00:01:41,939
that's the the web UI part of it and

00:01:38,310 --> 00:01:45,030
gate is the API gateway like kubernetes

00:01:41,939 --> 00:01:46,770
api server so all the interactions from

00:01:45,030 --> 00:01:48,329
the deck from the web UI all the

00:01:46,770 --> 00:01:51,420
operations you do will have to go

00:01:48,329 --> 00:01:53,189
through this the gate API and there are

00:01:51,420 --> 00:01:54,509
other servers so there's this cloud

00:01:53,189 --> 00:01:56,969
driver that takes care of the

00:01:54,509 --> 00:01:59,369
abstraction so whenever you deploy your

00:01:56,969 --> 00:02:01,469
resources to any cloud the cloud driver

00:01:59,369 --> 00:02:05,130
component will take care of the actual

00:02:01,469 --> 00:02:07,979
deployment and so on and Holly art so we

00:02:05,130 --> 00:02:08,610
will be using whole yard to deploy and

00:02:07,979 --> 00:02:11,160
manage

00:02:08,610 --> 00:02:13,080
spinnaker so you can deploy spinnaker in

00:02:11,160 --> 00:02:13,540
your cuba in its application using a

00:02:13,080 --> 00:02:16,560
health

00:02:13,540 --> 00:02:18,969
we can do helm install spinnaker but the

00:02:16,560 --> 00:02:20,140
recommended way the best practice is to

00:02:18,969 --> 00:02:23,650
use halyard

00:02:20,140 --> 00:02:25,930
to deploy and manage spinnaker so when

00:02:23,650 --> 00:02:28,689
it comes to upgrading your spinnaker if

00:02:25,930 --> 00:02:30,010
you are using Holley are so it it will

00:02:28,689 --> 00:02:32,530
be a lot easier to upgrade your

00:02:30,010 --> 00:02:34,420
spinnaker with zero downtime so the

00:02:32,530 --> 00:02:37,720
recommended approach is to use Hummer

00:02:34,420 --> 00:02:39,579
and down below you've also got some port

00:02:37,720 --> 00:02:42,069
mappings what are all the services and

00:02:39,579 --> 00:02:44,019
what force they use the only two things

00:02:42,069 --> 00:02:46,810
that we are interested in is the deck

00:02:44,019 --> 00:02:50,019
the web UI which runs on port 9000 and

00:02:46,810 --> 00:02:53,379
the Gate API server which runs on port

00:02:50,019 --> 00:02:55,989
8080 for all right so how to install

00:02:53,379 --> 00:02:58,780
spinnaker in your kubernetes cluster so

00:02:55,989 --> 00:03:01,150
let's look at the documentation install

00:02:58,780 --> 00:03:04,750
spinnaker there are few steps to install

00:03:01,150 --> 00:03:07,180
spinnaker so these are the basic steps

00:03:04,750 --> 00:03:11,530
so in this video we'll be covering the

00:03:07,180 --> 00:03:14,560
first five steps here up to the deploy

00:03:11,530 --> 00:03:15,879
spinnaker so install holley our choose

00:03:14,560 --> 00:03:17,889
your cloud provider or just an

00:03:15,879 --> 00:03:20,099
environment choose a storage service and

00:03:17,889 --> 00:03:22,540
deploy spinnaker so the first five

00:03:20,099 --> 00:03:25,930
process will be following in this video

00:03:22,540 --> 00:03:28,319
alright so there are different pages

00:03:25,930 --> 00:03:30,669
that you you need to navigate to install

00:03:28,319 --> 00:03:33,699
spinnaker you have to basically follow

00:03:30,669 --> 00:03:35,709
these processes but I've also got my own

00:03:33,699 --> 00:03:38,319
documentation so I've followed this many

00:03:35,709 --> 00:03:40,540
times I have try and run I've tested

00:03:38,319 --> 00:03:42,849
this spinnaker deployment many times and

00:03:40,540 --> 00:03:46,120
I've got my own documentation on how to

00:03:42,849 --> 00:03:49,959
do that so let's go to my github

00:03:46,120 --> 00:03:54,190
kubernetes repository github.com just me

00:03:49,959 --> 00:03:58,510
an open source and if I go to kubernetes

00:03:54,190 --> 00:04:01,510
and inside the dogs data tree setup

00:03:58,510 --> 00:04:02,979
spinnaker all right so that's this

00:04:01,510 --> 00:04:05,290
documentation which we'll be following

00:04:02,979 --> 00:04:07,840
in this video but at a high level I'm

00:04:05,290 --> 00:04:09,759
gonna show you I'm gonna explain what it

00:04:07,840 --> 00:04:11,519
takes to install spinnaker in your

00:04:09,759 --> 00:04:15,340
kubernetes cluster so the first thing is

00:04:11,519 --> 00:04:17,560
install Holly yard and if I open that

00:04:15,340 --> 00:04:19,690
you can either install halyard directly

00:04:17,560 --> 00:04:22,150
on your machine or you can use a docker

00:04:19,690 --> 00:04:23,590
container but if you want to install it

00:04:22,150 --> 00:04:26,560
on a machine the only supported

00:04:23,590 --> 00:04:29,800
operating system are Debian Ubuntu

00:04:26,560 --> 00:04:32,020
or Mac OS so you can see here you grab

00:04:29,800 --> 00:04:33,280
the installation script and if you read

00:04:32,020 --> 00:04:35,200
through the installation script it

00:04:33,280 --> 00:04:38,560
applies for the Debian or Ubuntu based

00:04:35,200 --> 00:04:40,210
distribution but I'm running Manjaro

00:04:38,560 --> 00:04:42,790
which is arch based which is not

00:04:40,210 --> 00:04:46,810
supported by this method so I'll be

00:04:42,790 --> 00:04:49,419
looking at the docker option so running

00:04:46,810 --> 00:04:50,950
hard as the docker container and he can

00:04:49,419 --> 00:04:53,169
run docker container in any platform

00:04:50,950 --> 00:04:56,410
cross-platform so I will pick up that

00:04:53,169 --> 00:04:58,000
option so that's the whole yard that the

00:04:56,410 --> 00:05:00,400
first important step is to install

00:04:58,000 --> 00:05:02,830
Holley our next is to choose a cloud

00:05:00,400 --> 00:05:04,210
provider so why do you want to maybe

00:05:02,830 --> 00:05:06,250
want spinnaker to deploy your

00:05:04,210 --> 00:05:10,960
applications to whether it's kubernetes

00:05:06,250 --> 00:05:13,030
or AWS or as your GCP or OpenShift or

00:05:10,960 --> 00:05:14,650
anything so you'll be choosing the cloud

00:05:13,030 --> 00:05:16,780
provider and then you will choose an

00:05:14,650 --> 00:05:18,940
environment which means in which

00:05:16,780 --> 00:05:21,460
environment you will be deploying the

00:05:18,940 --> 00:05:23,500
spinnaker application itself so we'll be

00:05:21,460 --> 00:05:25,690
using kubernetes environment to deploy

00:05:23,500 --> 00:05:28,120
our spinnaker and then choose a storage

00:05:25,690 --> 00:05:30,040
service that's very important the

00:05:28,120 --> 00:05:32,110
spinnaker when it deploys application to

00:05:30,040 --> 00:05:34,810
your kubernetes or any cloud provider

00:05:32,110 --> 00:05:38,260
it needs a persistent storage to store

00:05:34,810 --> 00:05:40,510
the information about the applications

00:05:38,260 --> 00:05:42,820
that it has deployed so we need to have

00:05:40,510 --> 00:05:45,490
an object based storage like Amazon s3

00:05:42,820 --> 00:05:48,400
or something but since I'm using bare

00:05:45,490 --> 00:05:50,800
metal I can't use the s3 but I'm gonna

00:05:48,400 --> 00:05:53,860
go for the mini Oh some menial is an

00:05:50,800 --> 00:05:55,539
object storage for cloud environment so

00:05:53,860 --> 00:05:57,880
you can run mini as a docker container

00:05:55,539 --> 00:06:00,190
and you can run mini on your kubernetes

00:05:57,880 --> 00:06:02,680
cluster which I will show you when we go

00:06:00,190 --> 00:06:05,139
through the process and then finally we

00:06:02,680 --> 00:06:07,600
will be deploying spinnaker all right so

00:06:05,139 --> 00:06:11,950
that's the theory part of it so now

00:06:07,600 --> 00:06:13,840
let's head to the actual hands-on so the

00:06:11,950 --> 00:06:15,720
joy of installing spinnaker in

00:06:13,840 --> 00:06:18,340
kubernetes cluster I really enjoyed

00:06:15,720 --> 00:06:21,010
deploying spinnaker lots of moving parts

00:06:18,340 --> 00:06:22,840
lots of steps to follow but if you

00:06:21,010 --> 00:06:25,419
follow these steps carefully you will be

00:06:22,840 --> 00:06:28,690
able to run spinnaker in your kubernetes

00:06:25,419 --> 00:06:30,220
cluster so one thing to notice I don't

00:06:28,690 --> 00:06:32,860
need this documentation anymore because

00:06:30,220 --> 00:06:36,430
I've got my own documentation here but

00:06:32,860 --> 00:06:39,540
one thing to remember is spinnaker

00:06:36,430 --> 00:06:41,610
involves a lot of micro services

00:06:39,540 --> 00:06:44,280
your cluster needs to have at least four

00:06:41,610 --> 00:06:47,970
cores and eight gig of memory all right

00:06:44,280 --> 00:06:51,650
so my kubernetes cluster if I show you

00:06:47,970 --> 00:06:54,900
cubes CDL yet not so I'm running version

00:06:51,650 --> 00:06:57,210
1.16 kubernetes with one master node and

00:06:54,900 --> 00:06:59,460
two worker nodes and the two worker

00:06:57,210 --> 00:07:03,060
nodes each of them have two CPUs and

00:06:59,460 --> 00:07:05,600
four gig of memory so in total between

00:07:03,060 --> 00:07:08,550
the worker nodes I've got four CPU and

00:07:05,600 --> 00:07:11,400
eight gig of memory so if you allocate

00:07:08,550 --> 00:07:13,710
anything less than that when you deploy

00:07:11,400 --> 00:07:15,560
spinnaker all your micro services will

00:07:13,710 --> 00:07:18,990
be in the pending state it will be

00:07:15,560 --> 00:07:20,790
waiting there for resources so bear that

00:07:18,990 --> 00:07:22,980
in mind you need to have at least four

00:07:20,790 --> 00:07:25,320
CPU and eight gig of memory otherwise

00:07:22,980 --> 00:07:28,620
spinnaker you won't be able to deploy

00:07:25,320 --> 00:07:34,650
spinnaker so if I show cube CD I'll

00:07:28,620 --> 00:07:37,830
describe node K worker and down here if

00:07:34,650 --> 00:07:42,450
you see the capacity CPU is two memory

00:07:37,830 --> 00:07:44,250
is four gigs so similarly in K worker to

00:07:42,450 --> 00:07:46,050
the other worker node I've got two CPU

00:07:44,250 --> 00:07:49,290
and four gig of memory so in total I've

00:07:46,050 --> 00:07:52,410
got four CPU on a gig of memory all

00:07:49,290 --> 00:07:55,380
right so I've also deployed metal lb as

00:07:52,410 --> 00:07:57,150
the load balancer and dynamic NFS

00:07:55,380 --> 00:07:58,530
provisioning for dynamic volume

00:07:57,150 --> 00:08:01,260
provisioning so those are the other two

00:07:58,530 --> 00:08:04,290
things that I've done alright let's

00:08:01,260 --> 00:08:06,210
follow the first thing is to start your

00:08:04,290 --> 00:08:09,330
whole yard container so for that I'm

00:08:06,210 --> 00:08:12,530
going to create a directory make

00:08:09,330 --> 00:08:15,690
directory under your home directory dot

00:08:12,530 --> 00:08:17,580
JL Hall and we'll be binding this

00:08:15,690 --> 00:08:20,100
directory inside the Kuban inside the

00:08:17,580 --> 00:08:21,990
whole yard so when you stop and restart

00:08:20,100 --> 00:08:24,960
your whole yard container there is this

00:08:21,990 --> 00:08:26,910
data that is persisted otherwise if you

00:08:24,960 --> 00:08:28,640
don't do this when you restart your

00:08:26,910 --> 00:08:31,050
whole yard it won't have any of your

00:08:28,640 --> 00:08:33,470
configurations all right the next step

00:08:31,050 --> 00:08:39,479
is to run the actual docker run command

00:08:33,470 --> 00:08:41,400
docker run - - name Holly yard and we

00:08:39,479 --> 00:08:43,650
are binding the dot home directory from

00:08:41,400 --> 00:08:46,590
our host machine inside the container

00:08:43,650 --> 00:08:49,140
under home spinnaker and the other thing

00:08:46,590 --> 00:08:51,720
is we are also mounting the cube

00:08:49,140 --> 00:08:53,130
configuration file so under my home

00:08:51,720 --> 00:08:54,990
directory dot cube that

00:08:53,130 --> 00:08:57,990
there is this config file that's the

00:08:54,990 --> 00:09:00,960
cube config file and I'm also mounting

00:08:57,990 --> 00:09:03,870
this under home spinnaker dot cube slash

00:09:00,960 --> 00:09:07,530
config inside the container all right so

00:09:03,870 --> 00:09:12,390
let's run that and that's the whole yard

00:09:07,530 --> 00:09:15,030
container image darker logs - f whole

00:09:12,390 --> 00:09:17,160
yard yeah let's give it a few seconds

00:09:15,030 --> 00:09:19,950
and it should be ready and once it's

00:09:17,160 --> 00:09:23,250
ready we need to log into that log into

00:09:19,950 --> 00:09:25,110
this container alright so it should be

00:09:23,250 --> 00:09:28,620
ready in few seconds yep that's ready

00:09:25,110 --> 00:09:30,720
started main seconds JVM is running okay

00:09:28,620 --> 00:09:36,990
so now let's log into the whole yard

00:09:30,720 --> 00:09:39,690
container darker exec - I T whole yard -

00:09:36,990 --> 00:09:43,320
cool we are inside the whole yard

00:09:39,690 --> 00:09:46,020
container if I do which cube CTL it

00:09:43,320 --> 00:09:48,800
comes with cube serial installed and we

00:09:46,020 --> 00:09:51,180
have mounted our cube config file under

00:09:48,800 --> 00:09:52,770
dot cube directory so that is this

00:09:51,180 --> 00:09:55,260
config so we should be able to connect

00:09:52,770 --> 00:09:57,570
to our kubernetes cluster from inside

00:09:55,260 --> 00:10:02,100
this whole yard container so if I do

00:09:57,570 --> 00:10:04,980
cube Cydia cluster info yeah cube CD

00:10:02,100 --> 00:10:06,930
I'll get notes cool so we can connect to

00:10:04,980 --> 00:10:09,870
our kubernetes cluster from inside the

00:10:06,930 --> 00:10:12,470
whole yard container that's something we

00:10:09,870 --> 00:10:15,420
need to verify before we proceed further

00:10:12,470 --> 00:10:18,810
ok we have done that cube CDL clustering

00:10:15,420 --> 00:10:21,420
fill okay send now set kubernetes has

00:10:18,810 --> 00:10:24,480
the cloud provider so we want spinnaker

00:10:21,420 --> 00:10:28,490
to use kubernetes to deploy our app so

00:10:24,480 --> 00:10:34,830
that's what we are doing here Oh config

00:10:28,490 --> 00:10:36,720
provider kubernetes enable so how

00:10:34,830 --> 00:10:39,560
conflict provider coumarin is enabled we

00:10:36,720 --> 00:10:42,240
are enabling the kubernetes provider

00:10:39,560 --> 00:10:43,890
right kubernetes providers enable but no

00:10:42,240 --> 00:10:47,580
accounts have been configured so

00:10:43,890 --> 00:10:49,740
kubernetes is enabled so spinnaker needs

00:10:47,580 --> 00:10:52,470
to deploy applications to a kubernetes

00:10:49,740 --> 00:10:54,540
cluster so which kubernetes cluster so

00:10:52,470 --> 00:10:57,260
that's what we are going to do next

00:10:54,540 --> 00:11:01,890
we're going to add a kubernetes account

00:10:57,260 --> 00:11:05,640
how config provider kubernetes

00:11:01,890 --> 00:11:06,430
account and give it a name let's call it

00:11:05,640 --> 00:11:09,640
my cake

00:11:06,430 --> 00:11:15,339
the account name is my Gators - -

00:11:09,640 --> 00:11:19,330
provider version is v2 - - context is

00:11:15,339 --> 00:11:26,170
let's use the current context cube

00:11:19,330 --> 00:11:28,420
serial config current context okay so

00:11:26,170 --> 00:11:31,060
that's tan and we also need to enable

00:11:28,420 --> 00:11:37,510
the artifacts Hulk

00:11:31,060 --> 00:11:39,149
config features edit - - artifacts set

00:11:37,510 --> 00:11:41,500
that to true

00:11:39,149 --> 00:11:43,420
alright so choose where to install

00:11:41,500 --> 00:11:47,440
spinnaker this is the step where we

00:11:43,420 --> 00:11:49,000
choose the environment where we want to

00:11:47,440 --> 00:11:52,149
install spinnaker we want to install

00:11:49,000 --> 00:11:53,700
spinnaker in a kubernetes cluster all

00:11:52,149 --> 00:12:00,600
right so let's do that

00:11:53,700 --> 00:12:07,690
how config deploy edit - - type is

00:12:00,600 --> 00:12:11,010
distributed - - account name is the

00:12:07,690 --> 00:12:14,230
account that we created which is my k8s

00:12:11,010 --> 00:12:16,360
that's done and the next command is

00:12:14,230 --> 00:12:18,760
below commands needs to be run on your

00:12:16,360 --> 00:12:22,690
local machine where you have helm binary

00:12:18,760 --> 00:12:24,700
installed ok so we are inside the whole

00:12:22,690 --> 00:12:29,290
yard container I'm gonna go to my host

00:12:24,700 --> 00:12:32,320
machine now and which helm helm version

00:12:29,290 --> 00:12:34,209
- - shot I'm using helm version 3 I've

00:12:32,320 --> 00:12:36,310
done videos on helm version 3 if you've

00:12:34,209 --> 00:12:37,959
got helm version 2 it's it should still

00:12:36,310 --> 00:12:40,450
work but the commands might be slightly

00:12:37,959 --> 00:12:42,670
different now we are going to install

00:12:40,450 --> 00:12:45,420
Minear mini as the object storage

00:12:42,670 --> 00:12:48,730
spinnaker needs object storage to store

00:12:45,420 --> 00:12:52,540
the application data alright so now

00:12:48,730 --> 00:12:54,430
let's install the minion in our

00:12:52,540 --> 00:12:56,230
kubernetes cluster so we'll be

00:12:54,430 --> 00:12:58,930
installing Mineo in the same namespace

00:12:56,230 --> 00:13:01,240
as spinnaker so spinnaker will be

00:12:58,930 --> 00:13:03,850
installed in the spinnaker namespace so

00:13:01,240 --> 00:13:05,950
we need to deploy Mineo in the spinnaker

00:13:03,850 --> 00:13:08,230
namespace I don't know why it's not why

00:13:05,950 --> 00:13:10,120
it's like that but I'm trying to plying

00:13:08,230 --> 00:13:12,760
Minnie on a different name space but

00:13:10,120 --> 00:13:13,720
that didn't actually work so let's

00:13:12,760 --> 00:13:17,079
create a namespace

00:13:13,720 --> 00:13:19,570
QCD I'll create namespace spinnaker and

00:13:17,079 --> 00:13:21,020
then now we are good to install Minnie

00:13:19,570 --> 00:13:25,770
OH

00:13:21,020 --> 00:13:28,590
install Minear and the command is here -

00:13:25,770 --> 00:13:30,900
- namespace spinnaker - set we need to

00:13:28,590 --> 00:13:34,380
pass an access key and a secret key

00:13:30,900 --> 00:13:37,080
- for the mini Oh and then set

00:13:34,380 --> 00:13:38,820
persistent start enabled equals false so

00:13:37,080 --> 00:13:41,520
if you don't have a dynamic volume

00:13:38,820 --> 00:13:44,100
provisioning set this to false but I do

00:13:41,520 --> 00:13:45,750
have a dynamic volume provisioning

00:13:44,100 --> 00:13:48,300
enables so I'm not going to pass this

00:13:45,750 --> 00:13:49,350
option but if you are just learning if

00:13:48,300 --> 00:13:51,150
you just want to see how it actually

00:13:49,350 --> 00:13:53,460
works and you don't have a dynamic

00:13:51,150 --> 00:13:57,300
volume provisioning you can set that

00:13:53,460 --> 00:13:58,800
option which is - - set persistent store

00:13:57,300 --> 00:14:01,950
enabled equals false

00:13:58,800 --> 00:14:04,140
but in production use cases don't make

00:14:01,950 --> 00:14:07,410
that choice please enable persistence

00:14:04,140 --> 00:14:09,930
because Mineo when the port gets crashed

00:14:07,410 --> 00:14:13,529
or part restarts we need to have some

00:14:09,930 --> 00:14:16,520
form of persistence all right so let's

00:14:13,529 --> 00:14:23,130
deploy menial in our kubernetes cluster

00:14:16,520 --> 00:14:26,550
so once that's done helm list - - all

00:14:23,130 --> 00:14:32,460
namespaces okay that's spinnaker cube

00:14:26,550 --> 00:14:34,110
CDL - in spinnaker get all okay so

00:14:32,460 --> 00:14:36,290
that's our mini or container that's

00:14:34,110 --> 00:14:40,800
running it's not ready yet

00:14:36,290 --> 00:14:42,660
let's wait for it to become ready okay

00:14:40,800 --> 00:14:45,660
let's check again

00:14:42,660 --> 00:14:47,550
yeah so our mini old container is

00:14:45,660 --> 00:14:51,089
running fine we've deployed mini oh

00:14:47,550 --> 00:14:52,890
that's fine and now there's one hack

00:14:51,089 --> 00:14:54,870
that we need to do back inside the whole

00:14:52,890 --> 00:14:57,750
yard container so let's go back to the

00:14:54,870 --> 00:15:03,360
halyard container and make this

00:14:57,750 --> 00:15:06,600
directory copy and paste it and there's

00:15:03,360 --> 00:15:09,630
a file called front 50 - local llamo and

00:15:06,600 --> 00:15:12,150
we need to set the content of that file

00:15:09,630 --> 00:15:15,750
to be this one spinnaker dot s3 dot

00:15:12,150 --> 00:15:17,850
versioning : false we need to disable s3

00:15:15,750 --> 00:15:20,580
version because this is not actually s3

00:15:17,850 --> 00:15:22,890
this is just Minear many others like yes

00:15:20,580 --> 00:15:26,190
three based it uses the same protocol

00:15:22,890 --> 00:15:28,980
but it's not the actual AWS ds3 so we

00:15:26,190 --> 00:15:32,520
need to disable versioning so for that

00:15:28,980 --> 00:15:34,170
let's copy that command copy that and

00:15:32,520 --> 00:15:37,330
paste it here

00:15:34,170 --> 00:15:38,140
that's done now set the storage type to

00:15:37,330 --> 00:15:44,200
Minnie OH

00:15:38,140 --> 00:15:46,690
I'm gonna copy that copy and paste it so

00:15:44,200 --> 00:15:50,290
how config storage is three edit and the

00:15:46,690 --> 00:15:52,270
endpoint is hasti DB menial : 9000

00:15:50,290 --> 00:15:54,640
so since spinnaker will be deployed

00:15:52,270 --> 00:15:59,290
inside the kubernetes cluster spinnaker

00:15:54,640 --> 00:16:03,100
can talk to Mineo using this URL HTTP

00:15:59,290 --> 00:16:05,470
colon slash slash Mineo : 9000 Mineo is

00:16:03,100 --> 00:16:10,060
running on port 9000 let's check cube

00:16:05,470 --> 00:16:13,390
serial - n spinnaker gets serviced yep

00:16:10,060 --> 00:16:15,610
mini I was running on port 9000 and the

00:16:13,390 --> 00:16:18,700
access key is my access key secret

00:16:15,610 --> 00:16:20,950
access key is my secret key the access

00:16:18,700 --> 00:16:25,720
key and the secret key which we passed

00:16:20,950 --> 00:16:28,800
when we deployed mini oh alright so next

00:16:25,720 --> 00:16:34,630
command is this is also required for

00:16:28,800 --> 00:16:38,589
minium whole config storage copy that

00:16:34,630 --> 00:16:44,730
and paste it and finally we need to

00:16:38,589 --> 00:16:50,050
enable the es3 hole config storage edit

00:16:44,730 --> 00:16:51,580
- type s3 ok cool so that's done and

00:16:50,050 --> 00:16:53,440
finally we are going to choose which

00:16:51,580 --> 00:16:56,020
version of spinnaker we are going to

00:16:53,440 --> 00:16:58,390
deploy so for that if you do whole

00:16:56,020 --> 00:17:01,000
version list it's going to show you the

00:16:58,390 --> 00:17:05,829
list of available spinnaker versions so

00:17:01,000 --> 00:17:09,069
we have one dot 15.6 one dot 16.5 1.17

00:17:05,829 --> 00:17:12,189
dot to go with the latest version 1.17

00:17:09,069 --> 00:17:15,069
dot - but i'm going to deploy 1.16 dot

00:17:12,189 --> 00:17:17,500
file because i'm gonna show you how to

00:17:15,069 --> 00:17:21,730
upgrade spinnaker with zero downtime so

00:17:17,500 --> 00:17:27,270
I'm gonna choose one dot 16.5 hull

00:17:21,730 --> 00:17:32,410
config version edit - - version 1 dot

00:17:27,270 --> 00:17:34,210
16.5 ok so once that's done we are good

00:17:32,410 --> 00:17:36,760
to go that's it we can't deploy

00:17:34,210 --> 00:17:41,710
spinnaker now Hall deploy apply that's

00:17:36,760 --> 00:17:43,900
all it's needed hold deploy apply all

00:17:41,710 --> 00:17:49,350
right so

00:17:43,900 --> 00:17:52,600
let's do this command watch cube CDL - n

00:17:49,350 --> 00:17:54,850
spinnaker and get parts so now you will

00:17:52,600 --> 00:17:56,620
see lots of different micro services

00:17:54,850 --> 00:18:00,070
getting deployed to the spinnaker

00:17:56,620 --> 00:18:03,190
namespace basically the different micro

00:18:00,070 --> 00:18:06,039
services that spinnaker has will be

00:18:03,190 --> 00:18:09,820
deployed in this namespace like deck

00:18:06,039 --> 00:18:11,980
gate Orca front 50 Rosco Eiger echo

00:18:09,820 --> 00:18:14,409
there are lots of confidence and in a

00:18:11,980 --> 00:18:16,770
short while you will see yep it's

00:18:14,409 --> 00:18:20,470
deploying all this and he can see here

00:18:16,770 --> 00:18:22,649
deck echo get our car ready Roscoe and

00:18:20,470 --> 00:18:25,870
it's gonna take like 5 to 10 minutes

00:18:22,649 --> 00:18:28,210
when I tested like I think it took about

00:18:25,870 --> 00:18:31,090
7 to 8 minutes you need to wait for all

00:18:28,210 --> 00:18:34,419
the containers to become ready before

00:18:31,090 --> 00:18:36,549
going to the further steps ok so what

00:18:34,419 --> 00:18:38,320
I'm going to do now is I'm going to

00:18:36,549 --> 00:18:39,970
pause the video and come back when all

00:18:38,320 --> 00:18:42,909
these containers already it's going to

00:18:39,970 --> 00:18:45,820
take like 7 to 8 minutes and then the

00:18:42,909 --> 00:18:48,039
next step is to edit the service so how

00:18:45,820 --> 00:18:50,500
you are going to access the spinnaker

00:18:48,039 --> 00:18:52,870
dashboard for that you need to edit the

00:18:50,500 --> 00:18:54,250
service the deck service and the gate

00:18:52,870 --> 00:18:57,279
service and the change the type to

00:18:54,250 --> 00:19:00,460
Northport on load balancer and then we

00:18:57,279 --> 00:19:03,460
need a final hull configuration to make

00:19:00,460 --> 00:19:05,169
it available alright so let me pause the

00:19:03,460 --> 00:19:07,510
video here and come back when it's ready

00:19:05,169 --> 00:19:09,130
alright so now we can see all the

00:19:07,510 --> 00:19:10,990
components have been installed and

00:19:09,130 --> 00:19:13,090
they're all in the ready States and now

00:19:10,990 --> 00:19:15,510
what we're gonna do is we need to edit

00:19:13,090 --> 00:19:20,049
the deck and the gate service change the

00:19:15,510 --> 00:19:23,100
service time from cluster IP to North

00:19:20,049 --> 00:19:26,890
port so if I do cube serial - n

00:19:23,100 --> 00:19:29,440
spinnaker get service so the moment the

00:19:26,890 --> 00:19:31,720
spin deck and spin gate are all cluster

00:19:29,440 --> 00:19:33,549
IP service so if we want to access this

00:19:31,720 --> 00:19:36,880
from outside the cluster we need to

00:19:33,549 --> 00:19:40,029
change the service type from cluster IP

00:19:36,880 --> 00:19:42,220
to either load balancer or node port so

00:19:40,029 --> 00:19:44,110
if you haven't got a metal lb load

00:19:42,220 --> 00:19:47,350
balancer installed on your cluster you

00:19:44,110 --> 00:19:52,230
can go with north port let's edit the

00:19:47,350 --> 00:19:56,260
service cube CDL - n the spinnaker Edit

00:19:52,230 --> 00:19:57,170
service spin deck let's edit the web UI

00:19:56,260 --> 00:19:58,760
service for

00:19:57,170 --> 00:20:01,640
and then we will go to the the gate

00:19:58,760 --> 00:20:06,620
which is the API service so edits pin

00:20:01,640 --> 00:20:12,620
deck and change the type from cluster IP

00:20:06,620 --> 00:20:16,280
to North port and under target northward

00:20:12,620 --> 00:20:18,320
let's change that to North Port let's

00:20:16,280 --> 00:20:22,130
add North Port and we want to make it a

00:20:18,320 --> 00:20:24,170
fixed port so 3 - 3 - 3 for example or

00:20:22,130 --> 00:20:26,660
if you want to can use the load balancer

00:20:24,170 --> 00:20:30,650
service type as north port change that

00:20:26,660 --> 00:20:34,360
to load balancer and you don't need

00:20:30,650 --> 00:20:36,800
sorry and you don't need the North port

00:20:34,360 --> 00:20:38,510
alright so if it's just a load balancer

00:20:36,800 --> 00:20:41,570
time because I have got metal it'll be

00:20:38,510 --> 00:20:44,030
installed and I'm gonna go with the type

00:20:41,570 --> 00:20:45,770
load balancer service or I should

00:20:44,030 --> 00:20:47,660
actually show you because most of you

00:20:45,770 --> 00:20:49,570
guys won't have metal lb install so

00:20:47,660 --> 00:20:52,730
let's go with the North Fork service but

00:20:49,570 --> 00:20:54,110
it's the same if you want to use load

00:20:52,730 --> 00:20:56,060
balancers I would suggest you to use

00:20:54,110 --> 00:20:59,300
load balancer instead of north port

00:20:56,060 --> 00:21:02,150
because we need to specify the base URL

00:20:59,300 --> 00:21:05,090
and if you want to use North Pole you

00:21:02,150 --> 00:21:06,800
need to specify the worker node IP but

00:21:05,090 --> 00:21:08,390
if your work or not crashes then you

00:21:06,800 --> 00:21:10,670
won't be able to access your spinnaker

00:21:08,390 --> 00:21:12,980
dashboard so it's better to go with load

00:21:10,670 --> 00:21:16,370
balancer but I will show you note port

00:21:12,980 --> 00:21:22,370
in this video we'll also need a north

00:21:16,370 --> 00:21:26,120
port North Port is 3 to 3 to 3 and let's

00:21:22,370 --> 00:21:33,280
also edit the gets this spinnaker Edit

00:21:26,120 --> 00:21:33,280
service spin gate and change this to

00:21:33,340 --> 00:21:41,810
node port and let's add the node port

00:21:38,560 --> 00:21:44,690
node for the case is very important so

00:21:41,810 --> 00:21:49,940
it's a camel case location in an

00:21:44,690 --> 00:21:54,940
uppercase P note port 3 - 3 - 4 let's

00:21:49,940 --> 00:22:01,040
choose the next port okay cube CDL - n

00:21:54,940 --> 00:22:02,840
spinnaker get service code so now we can

00:22:01,040 --> 00:22:05,300
see the deck and the gate service has

00:22:02,840 --> 00:22:07,900
typed note port and they are accessible

00:22:05,300 --> 00:22:10,540
from any of your worker nodes worker

00:22:07,900 --> 00:22:12,430
or work of two and the port is three two

00:22:10,540 --> 00:22:16,750
three two three four the deck and three

00:22:12,430 --> 00:22:18,610
to three to four for the gate API server

00:22:16,750 --> 00:22:22,030
alright so back in our Holly our

00:22:18,610 --> 00:22:29,980
container we need to run these commands

00:22:22,030 --> 00:22:33,610
hall config how config security UI edit

00:22:29,980 --> 00:22:36,360
so u UI is the the deck service spin

00:22:33,610 --> 00:22:43,240
deck service we need to set the base URL

00:22:36,360 --> 00:22:47,410
so - - overwrite base URL which is going

00:22:43,240 --> 00:22:50,230
to be hots GDP one of your worker node

00:22:47,410 --> 00:22:53,560
IP address so I've got worker 1 and

00:22:50,230 --> 00:23:00,010
worker - the IP address for worker 1 is

00:22:53,560 --> 00:23:03,010
1 7 2.4 2.4 2.1 o1 column 3 2 3 2 3

00:23:00,010 --> 00:23:07,720
because this is the the spin deck

00:23:03,010 --> 00:23:13,480
service and let's do again for the gate

00:23:07,720 --> 00:23:20,310
service called config security this time

00:23:13,480 --> 00:23:28,390
api edit - - overwrite base URL is

00:23:20,310 --> 00:23:31,810
huckster TP 1 72.4 2.4 2.1 o 1 colon 3 2

00:23:28,390 --> 00:23:35,170
3 2 4 so that's the the spin gate

00:23:31,810 --> 00:23:39,130
service alright so now we are ready to

00:23:35,170 --> 00:23:43,450
haul deploy apply and in here or what

00:23:39,130 --> 00:23:46,570
i'm going to do is watch cube CDL - in

00:23:43,450 --> 00:23:50,470
spinnaker get pods and as I run Hall

00:23:46,570 --> 00:23:52,600
deploy apply you will see some of the

00:23:50,470 --> 00:23:54,640
parts getting created and the wall parts

00:23:52,600 --> 00:23:56,290
will get terminated so once all the

00:23:54,640 --> 00:23:57,430
parts are again running then we should

00:23:56,290 --> 00:24:00,160
be able to access the spinnaker

00:23:57,430 --> 00:24:02,730
dashboard let's wait for it and see what

00:24:00,160 --> 00:24:06,160
it's going to change in our cluster

00:24:02,730 --> 00:24:08,050
right so as you can see here there are

00:24:06,160 --> 00:24:10,950
new containers that are getting created

00:24:08,050 --> 00:24:14,890
because of the changes that we made and

00:24:10,950 --> 00:24:17,770
so 0 of 1 0 of 1 so for example if you

00:24:14,890 --> 00:24:19,990
take the cloud driver so once this new

00:24:17,770 --> 00:24:21,460
container is ready the old container

00:24:19,990 --> 00:24:23,860
will be terminated

00:24:21,460 --> 00:24:26,890
similarly for the deck service yaeko

00:24:23,860 --> 00:24:29,560
front gate orca Roscoe for everything

00:24:26,890 --> 00:24:32,050
once the new container you can see the

00:24:29,560 --> 00:24:34,390
age here 25 seconds so that's the one

00:24:32,050 --> 00:24:36,340
that was recently started so once they

00:24:34,390 --> 00:24:38,830
are all running the old one will get

00:24:36,340 --> 00:24:40,120
terminated as you can see here the old

00:24:38,830 --> 00:24:43,330
deck service is getting terminated

00:24:40,120 --> 00:24:46,270
because the new deck service is ready

00:24:43,330 --> 00:24:49,860
and I will pause the video here and come

00:24:46,270 --> 00:24:52,390
back when they're all in the new version

00:24:49,860 --> 00:24:53,920
alright so all the new versions of the

00:24:52,390 --> 00:24:55,390
parts are running fine they're all in

00:24:53,920 --> 00:24:58,330
the ready status so now we should be

00:24:55,390 --> 00:25:01,540
able to access our spinnaker dashboards

00:24:58,330 --> 00:25:03,190
so since we have set it to type note

00:25:01,540 --> 00:25:05,580
port so we should be able to access it

00:25:03,190 --> 00:25:13,240
from any of our work of notes IP address

00:25:05,580 --> 00:25:15,370
okay so one 72.4 2.4 2.1 o1 : 3 2 3 2 3

00:25:13,240 --> 00:25:18,730
so that's the port north port for the

00:25:15,370 --> 00:25:21,250
web UI service cool so that's all your

00:25:18,730 --> 00:25:24,870
spinnaker dashboard it looks very simple

00:25:21,250 --> 00:25:28,780
it's a very simple plain dashboard

00:25:24,870 --> 00:25:30,550
applications list of composites already

00:25:28,780 --> 00:25:32,530
installed in our cluster but don't worry

00:25:30,550 --> 00:25:34,510
about it don't worry about these we will

00:25:32,530 --> 00:25:37,690
create new applications in the next

00:25:34,510 --> 00:25:40,210
video or so and if I click this one here

00:25:37,690 --> 00:25:43,420
you can see spinnaker is version 1 dot

00:25:40,210 --> 00:25:46,360
16.5 let's see how to upgrade it to 1.17

00:25:43,420 --> 00:25:49,690
dot 2 applications if you only can

00:25:46,360 --> 00:25:51,970
create an application and create

00:25:49,690 --> 00:25:53,620
projects and so on which will be

00:25:51,970 --> 00:25:57,460
covering if I've got some time I will

00:25:53,620 --> 00:26:00,670
try and do some C ICD videos around

00:25:57,460 --> 00:26:04,720
spinnaker but now let's try and upgrade

00:26:00,670 --> 00:26:07,230
this so that is one dot 16.5 and back in

00:26:04,720 --> 00:26:13,300
the whole yard container if I do halt

00:26:07,230 --> 00:26:15,180
version list the version is 1.17 oh so

00:26:13,300 --> 00:26:19,900
that's what we're going to upgrade to

00:26:15,180 --> 00:26:24,370
let's still have config version edit - -

00:26:19,900 --> 00:26:26,530
version set that to 1 dot 17.2 so once

00:26:24,370 --> 00:26:30,610
that's done you're going to run hull

00:26:26,530 --> 00:26:34,550
deploy apply call deploy apply and

00:26:30,610 --> 00:26:36,260
that's going to change all these pods

00:26:34,550 --> 00:26:37,970
all these sports all new versions of the

00:26:36,260 --> 00:26:39,740
fonts will be deployed and once they're

00:26:37,970 --> 00:26:43,940
all ready the old version of the fonts

00:26:39,740 --> 00:26:45,320
will be deleted and while all these are

00:26:43,940 --> 00:26:46,820
happening you can still use your

00:26:45,320 --> 00:26:49,460
spinnaker dashboard so that's the

00:26:46,820 --> 00:26:52,940
advantage of deploying in a kubernetes

00:26:49,460 --> 00:26:55,760
cluster using holly art so if you used

00:26:52,940 --> 00:26:57,980
any other method of deploying spinnaker

00:26:55,760 --> 00:26:59,390
and your cuban artists cluster and when

00:26:57,980 --> 00:27:01,370
it comes to upgrading your spinnaker

00:26:59,390 --> 00:27:03,740
cluster that will be some downtime but

00:27:01,370 --> 00:27:07,490
if you use the holly yard like I've

00:27:03,740 --> 00:27:08,720
shown in this video you will have zero

00:27:07,490 --> 00:27:11,090
downtime so at the moment you can see

00:27:08,720 --> 00:27:13,370
the parts are getting upgraded some new

00:27:11,090 --> 00:27:15,410
versions of the parts are being started

00:27:13,370 --> 00:27:17,150
and the old versions are still running

00:27:15,410 --> 00:27:18,950
so still you are you can interact with

00:27:17,150 --> 00:27:22,820
your spinnaker dashboard create

00:27:18,950 --> 00:27:24,890
application projects so you can look at

00:27:22,820 --> 00:27:30,190
everything and still be are in version 1

00:27:24,890 --> 00:27:33,050
dot 16.5 and let's refresh this page

00:27:30,190 --> 00:27:35,990
still you'll be able to access it and we

00:27:33,050 --> 00:27:38,720
are on one dot 16.5 while the upgrade is

00:27:35,990 --> 00:27:41,720
going on and if you look at the spin

00:27:38,720 --> 00:27:44,500
deck that's running but that's the old

00:27:41,720 --> 00:27:46,760
version the new version is also running

00:27:44,500 --> 00:27:49,520
yeah new watching us running on the

00:27:46,760 --> 00:27:51,200
world version is being terminated so now

00:27:49,520 --> 00:27:54,980
I think we should be able to look at the

00:27:51,200 --> 00:27:59,630
new version 1.16 dot v if i refresh this

00:27:54,980 --> 00:28:02,360
page spinnaker and there you go so we

00:27:59,630 --> 00:28:04,340
are now on spinnaker one dot 17.2 so

00:28:02,360 --> 00:28:05,930
that's how easy it is to upgrade your

00:28:04,340 --> 00:28:08,150
spinnaker with zero downtime

00:28:05,930 --> 00:28:10,190
all right cool so this will take again

00:28:08,150 --> 00:28:12,530
another five or six minutes for all the

00:28:10,190 --> 00:28:14,900
parts to be in the ready state but

00:28:12,530 --> 00:28:16,370
that's spinnaker dashboard so that's how

00:28:14,900 --> 00:28:19,100
you install spinnaker in your cue

00:28:16,370 --> 00:28:21,530
bananas cluster how to upgrade your

00:28:19,100 --> 00:28:25,040
spinnaker and if you want to delete

00:28:21,530 --> 00:28:26,690
everything you can just do inside your

00:28:25,040 --> 00:28:29,480
hull container you can do the whole

00:28:26,690 --> 00:28:32,390
deploy clean so that's going to delete

00:28:29,480 --> 00:28:33,920
everything all the resources that it has

00:28:32,390 --> 00:28:35,930
deployed in your cuban artists cluster

00:28:33,920 --> 00:28:38,780
so this says this command cannot be

00:28:35,930 --> 00:28:42,410
undone do you want to continue yes so

00:28:38,780 --> 00:28:44,450
that will delete all the containers that

00:28:42,410 --> 00:28:48,080
it has created in your Cuban s cluster

00:28:44,450 --> 00:28:50,419
so let's close this one

00:28:48,080 --> 00:28:52,929
leading all servers deployments secrets

00:28:50,419 --> 00:28:56,320
with labels as you can see here

00:28:52,929 --> 00:29:03,590
everything is being terminated

00:28:56,320 --> 00:29:07,940
all right so cube CD l - n spinnaker get

00:29:03,590 --> 00:29:09,230
service cool so that's the the mini o is

00:29:07,940 --> 00:29:12,679
the only service that we deployed

00:29:09,230 --> 00:29:14,529
everything else got terminated and there

00:29:12,679 --> 00:29:18,860
are the last three parts to be

00:29:14,529 --> 00:29:22,549
terminated cube Cydia - n spinnaker I'll

00:29:18,860 --> 00:29:24,470
get all yep all of them have been

00:29:22,549 --> 00:29:26,299
terminated except these three parts they

00:29:24,470 --> 00:29:28,130
are terminating it will take few more

00:29:26,299 --> 00:29:29,620
seconds yeah they're all getting

00:29:28,130 --> 00:29:32,779
terminated so that's how you deploy

00:29:29,620 --> 00:29:34,460
upgrade and uninstall spinnaker from

00:29:32,779 --> 00:29:35,029
your QRS cluster hope you found this

00:29:34,460 --> 00:29:37,279
useful

00:29:35,029 --> 00:29:39,260
and please follow this if you've got any

00:29:37,279 --> 00:29:41,990
questions or any comments or any issues

00:29:39,260 --> 00:29:44,149
let me know I should be able to help you

00:29:41,990 --> 00:29:45,620
the only thing to remember is your cue

00:29:44,149 --> 00:29:49,399
bananas cluster needs to have at least

00:29:45,620 --> 00:29:51,470
four CPU on a gig of ram and you need to

00:29:49,399 --> 00:29:54,740
have dynamic volume provisioning if

00:29:51,470 --> 00:29:58,610
you're on a managed kubernetes cluster

00:29:54,740 --> 00:30:00,289
like eks aks gke then you don't have to

00:29:58,610 --> 00:30:02,169
worry about it you can use their load

00:30:00,289 --> 00:30:04,250
balancer service you can use their

00:30:02,169 --> 00:30:05,750
dynamic volume provisioning but if

00:30:04,250 --> 00:30:07,340
you're on bare metal

00:30:05,750 --> 00:30:10,789
you need to have dynamic NFS

00:30:07,340 --> 00:30:13,460
provisioning and metal lb for a proper

00:30:10,789 --> 00:30:15,200
production use case alright thank you so

00:30:13,460 --> 00:30:17,450
much for your time watching this video I

00:30:15,200 --> 00:30:19,190
will see you all in my next video bye

00:30:17,450 --> 00:30:26,720
bye

00:30:19,190 --> 00:30:26,720

YouTube URL: https://www.youtube.com/watch?v=9EUyMjR6jSc


