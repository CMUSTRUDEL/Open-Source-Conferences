Title: Antonio Vivanco - Head of Cloud Engineering - Amplitude
Publication date: 2018-11-28
Playlist: Spinnaker Customer Stories
Description: 
	
Captions: 
	00:00:01,170 --> 00:00:05,420
[Music]

00:00:02,770 --> 00:00:06,800
hey it's Jody on the CEO at armory and

00:00:05,420 --> 00:00:09,620
I'm here with Antonio all that you

00:00:06,800 --> 00:00:11,090
introduce yourself hi I'm Antonio I am

00:00:09,620 --> 00:00:15,170
the head of cloud engineering at

00:00:11,090 --> 00:00:16,519
amplitude okay so you are a lot of ways

00:00:15,170 --> 00:00:19,519
into your spinnaker journey it's been

00:00:16,519 --> 00:00:24,109
what six months or so oh how long have

00:00:19,519 --> 00:00:27,169
you been involved a spinnaker so I mean

00:00:24,109 --> 00:00:29,529
I'm amplitude for about eight months the

00:00:27,169 --> 00:00:32,840
first few months we did a POC with

00:00:29,529 --> 00:00:34,160
spinnaker and now for the last few

00:00:32,840 --> 00:00:35,960
months would be more carefully

00:00:34,160 --> 00:00:39,429
considering it and the last month or so

00:00:35,960 --> 00:00:42,590
if you actually started implementing

00:00:39,429 --> 00:00:44,179
moving some of your services to the

00:00:42,590 --> 00:00:46,219
spinnaker okay alright so that's great

00:00:44,179 --> 00:00:48,890
so somebody who might be watching this

00:00:46,219 --> 00:00:50,809
might be a cloud architect at you know a

00:00:48,890 --> 00:00:53,149
venture-backed company or even a global

00:00:50,809 --> 00:00:57,109
2000 trying to understand how spinnaker

00:00:53,149 --> 00:00:58,789
is used how is it that you decided to

00:00:57,109 --> 00:01:00,199
give spinnaker tribe what was it that

00:00:58,789 --> 00:01:03,499
attracted you to spinnaker in the first

00:01:00,199 --> 00:01:06,620
place so the main thing is to have a

00:01:03,499 --> 00:01:13,370
very good and clear deployment story

00:01:06,620 --> 00:01:16,580
right before we used Jenkins in in

00:01:13,370 --> 00:01:19,220
collaboration with sold and opinion

00:01:16,580 --> 00:01:21,620
resistances to deploy or docker

00:01:19,220 --> 00:01:24,440
containers we have already had our core

00:01:21,620 --> 00:01:26,450
systems docker eyes and we've been just

00:01:24,440 --> 00:01:28,280
deploying them using salt to replace the

00:01:26,450 --> 00:01:31,340
container that is running them these

00:01:28,280 --> 00:01:32,750
sometimes led to have deployed systems

00:01:31,340 --> 00:01:35,360
where there were multiple versions

00:01:32,750 --> 00:01:36,890
running at the same time its salt didn't

00:01:35,360 --> 00:01:37,970
didn't go through properly it was hard

00:01:36,890 --> 00:01:41,120
to tell which version of the application

00:01:37,970 --> 00:01:45,080
is running the scripts that manage these

00:01:41,120 --> 00:01:47,690
were coming go with other of the CI part

00:01:45,080 --> 00:01:49,820
of the of the pipeline so with the

00:01:47,690 --> 00:01:51,710
spinnaker what we wanted to get is a

00:01:49,820 --> 00:01:54,380
clear deployment by plan to clear the

00:01:51,710 --> 00:01:58,220
blood ministery and a good place to

00:01:54,380 --> 00:02:00,200
visualize that that one glass pane to

00:01:58,220 --> 00:02:02,299
see what version of replication

00:02:00,200 --> 00:02:04,159
is running how many senses we have above

00:02:02,299 --> 00:02:05,450
this application and what is this time

00:02:04,159 --> 00:02:07,340
supposed to perform on those instances

00:02:05,450 --> 00:02:08,840
so we hear about the slot so it's really

00:02:07,340 --> 00:02:10,970
interesting to hear you talk through

00:02:08,840 --> 00:02:13,430
this use case you know I'm using Jenkins

00:02:10,970 --> 00:02:14,959
plus something else solved in this case

00:02:13,430 --> 00:02:16,160
and a lot of people who don't know

00:02:14,959 --> 00:02:18,140
spinnaker quite as well

00:02:16,160 --> 00:02:20,030
don't don't understand it's not

00:02:18,140 --> 00:02:21,349
immediately obvious well why not just

00:02:20,030 --> 00:02:23,420
use Jenkins you can make Jenkins do

00:02:21,349 --> 00:02:25,220
anything so keep talking a little bit

00:02:23,420 --> 00:02:27,140
more about that single pane of glass the

00:02:25,220 --> 00:02:29,660
visualization the separation

00:02:27,140 --> 00:02:31,819
what what what kind of specifically was

00:02:29,660 --> 00:02:33,290
it that you were looking for any more

00:02:31,819 --> 00:02:35,330
detail that you have there and then also

00:02:33,290 --> 00:02:39,410
has it delivered on what you had hoped

00:02:35,330 --> 00:02:41,630
in that specific way so for the the

00:02:39,410 --> 00:02:45,519
separation side of things

00:02:41,630 --> 00:02:47,959
Jenkins is great at taking your commits

00:02:45,519 --> 00:02:49,760
running you need to build an artifact

00:02:47,959 --> 00:02:54,470
testing this artifact making sure that

00:02:49,760 --> 00:02:58,700
the artifact is good and and providing a

00:02:54,470 --> 00:03:01,190
good visualization into how this article

00:02:58,700 --> 00:03:06,079
for how this artifact it where did you

00:03:01,190 --> 00:03:07,100
fail and how to to and basically give

00:03:06,079 --> 00:03:08,829
you confidence that this artifact is

00:03:07,100 --> 00:03:11,660
good to be the problem right now

00:03:08,829 --> 00:03:13,910
actually getting this artifact into

00:03:11,660 --> 00:03:16,280
production is what Jenkins is not so

00:03:13,910 --> 00:03:18,290
great on there are some efforts for

00:03:16,280 --> 00:03:20,690
building pipelines and I think now there

00:03:18,290 --> 00:03:22,630
is the Jenkins X but it just it's just

00:03:20,690 --> 00:03:25,480
not there right like there's you have to

00:03:22,630 --> 00:03:28,069
write all of these deployment strategies

00:03:25,480 --> 00:03:31,549
yourself and then just orchestrate them

00:03:28,069 --> 00:03:33,799
through three Jenkins also like I

00:03:31,549 --> 00:03:36,049
mentioned for the glass pane in addition

00:03:33,799 --> 00:03:39,620
easy to visualize what has been deployed

00:03:36,049 --> 00:03:42,109
what has not you just have two series of

00:03:39,620 --> 00:03:45,920
logs look to your logs to see what the

00:03:42,109 --> 00:03:50,329
deployments jobs up to us and again it's

00:03:45,920 --> 00:03:53,180
not easy to see right so on the on the

00:03:50,329 --> 00:03:55,310
spinnaker side you can clearly see the

00:03:53,180 --> 00:03:59,299
entry point for your deployment Batman

00:03:55,310 --> 00:04:00,990
in our case the finish of a successful

00:03:59,299 --> 00:04:03,210
CIO

00:04:00,990 --> 00:04:06,180
in Jenkins and then you can see it

00:04:03,210 --> 00:04:07,770
grabbing the the artifact that you have

00:04:06,180 --> 00:04:10,970
created in their case a docker container

00:04:07,770 --> 00:04:14,600
deploying into different stages and

00:04:10,970 --> 00:04:19,400
after each deployment of stage running a

00:04:14,600 --> 00:04:22,200
series of tests then when it passes

00:04:19,400 --> 00:04:23,940
moving to the next stage and like that

00:04:22,200 --> 00:04:27,540
continue promoting it automatically to

00:04:23,940 --> 00:04:33,410
stages it lets you do more advanced

00:04:27,540 --> 00:04:37,680
things like cannoli deployments manual

00:04:33,410 --> 00:04:39,180
manual checks and other interactions to

00:04:37,680 --> 00:04:42,330
have more confidence in your deployment

00:04:39,180 --> 00:04:44,970
pipeline it also lets you automate the

00:04:42,330 --> 00:04:47,760
rollback in case things fail for example

00:04:44,970 --> 00:04:49,350
if the economy deployment fails is able

00:04:47,760 --> 00:04:50,700
to roll back and destroy those tanneries

00:04:49,350 --> 00:04:52,380
and is the older version of your

00:04:50,700 --> 00:04:55,740
application running and notify your

00:04:52,380 --> 00:04:58,440
developers right so in all of these

00:04:55,740 --> 00:05:01,050
things combined what you could do them

00:04:58,440 --> 00:05:02,610
in Jenkins by writing all of the code

00:05:01,050 --> 00:05:06,390
and all of the logic to get this time

00:05:02,610 --> 00:05:08,430
with spinnaker you already can either

00:05:06,390 --> 00:05:10,740
get automatic black-bean into this

00:05:08,430 --> 00:05:13,440
ecosystem that is focusing on the

00:05:10,740 --> 00:05:15,180
deployment strategy and this one place

00:05:13,440 --> 00:05:17,820
where many companies are working on

00:05:15,180 --> 00:05:19,950
improving this deployment pipeline right

00:05:17,820 --> 00:05:22,950
and you can you just have to implement

00:05:19,950 --> 00:05:25,470
the details of of the of the checks of

00:05:22,950 --> 00:05:27,300
the tests of the smoke tears of what you

00:05:25,470 --> 00:05:29,670
wanna evaluate for the cannery but the

00:05:27,300 --> 00:05:31,530
piping all of the the deployment

00:05:29,670 --> 00:05:33,780
strategy is already coded for you so

00:05:31,530 --> 00:05:35,780
you're getting the codification of the

00:05:33,780 --> 00:05:39,080
best practices from a broader community

00:05:35,780 --> 00:05:41,240
you're getting visualization

00:05:39,080 --> 00:05:43,129
glass and you're just you're getting

00:05:41,240 --> 00:05:44,509
this functionality out of the box versus

00:05:43,129 --> 00:05:45,590
having to build it yourself and

00:05:44,509 --> 00:05:46,729
everyone's building it differently and

00:05:45,590 --> 00:05:48,949
there's no consistency you can't

00:05:46,729 --> 00:05:50,509
innovate on top of that so it sounds

00:05:48,949 --> 00:05:53,360
like that's all valuable that's what you

00:05:50,509 --> 00:05:54,650
came to spinnaker for you you mentioned

00:05:53,360 --> 00:05:56,750
you're just now starting to put some

00:05:54,650 --> 00:05:59,569
services into production with spinnaker

00:05:56,750 --> 00:06:00,590
how has that journey been and what some

00:05:59,569 --> 00:06:01,939
of the learning that you've had is

00:06:00,590 --> 00:06:03,620
you've done a POC and you've been

00:06:01,939 --> 00:06:05,900
testing this out somebody else who's

00:06:03,620 --> 00:06:08,030
thinking about doing a POC this vinegar

00:06:05,900 --> 00:06:10,690
what what do you have any tips for them

00:06:08,030 --> 00:06:15,560
things to definitely do things to not do

00:06:10,690 --> 00:06:16,909
whatever you might suggest so one of the

00:06:15,560 --> 00:06:20,330
pain points and one of the reasons that

00:06:16,909 --> 00:06:23,060
we that drove or desire for a better the

00:06:20,330 --> 00:06:26,599
prime minister at te was the woman who

00:06:23,060 --> 00:06:28,069
we were deploying some web services we

00:06:26,599 --> 00:06:31,159
were getting a lot of five hundreds

00:06:28,069 --> 00:06:36,259
doing the deployment we had a one VM one

00:06:31,159 --> 00:06:40,029
container per VM deployment strategy so

00:06:36,259 --> 00:06:44,120
we will switch the the de container and

00:06:40,029 --> 00:06:45,319
and then we use the same VM to put a new

00:06:44,120 --> 00:06:47,629
container with a new version of the

00:06:45,319 --> 00:06:50,210
application the health checks were not

00:06:47,629 --> 00:06:52,610
fast enough to actually realize that the

00:06:50,210 --> 00:06:54,289
this machine had a dumb VM so the load

00:06:52,610 --> 00:06:55,849
balancer kept sending requests to it

00:06:54,289 --> 00:06:57,650
resulting in five hundreds because there

00:06:55,849 --> 00:07:00,650
was no no application container to

00:06:57,650 --> 00:07:03,349
handle the requests this happened every

00:07:00,650 --> 00:07:05,120
time we we deployed when deployments

00:07:03,349 --> 00:07:07,580
were not very common it was not a big

00:07:05,120 --> 00:07:09,409
problem as now are trying to move faster

00:07:07,580 --> 00:07:11,569
and faster mr. Perlmutter happening more

00:07:09,409 --> 00:07:13,969
often is actually becoming a problem so

00:07:11,569 --> 00:07:16,099
we want to avoid that we we go to the

00:07:13,969 --> 00:07:18,440
point where we either decide do we want

00:07:16,099 --> 00:07:20,569
to actually write a logic to handle

00:07:18,440 --> 00:07:22,310
these called these containers going away

00:07:20,569 --> 00:07:24,139
removing them from there after scaling

00:07:22,310 --> 00:07:25,370
group and then handling all of the

00:07:24,139 --> 00:07:27,060
details of how this thing is gonna

00:07:25,370 --> 00:07:30,300
manage or do we want to go to

00:07:27,060 --> 00:07:34,380
to a more diplomatic yeah right so this

00:07:30,300 --> 00:07:36,919
is that's how we just spin a car and -

00:07:34,380 --> 00:07:42,150
as far as learning some of things we -

00:07:36,919 --> 00:07:48,570
one of the hurdles of going to spinnaker

00:07:42,150 --> 00:07:51,960
is that when we first did our POC we

00:07:48,570 --> 00:07:53,910
just decided to go the Amazon route for

00:07:51,960 --> 00:07:56,250
the deploying with the spinnaker just

00:07:53,910 --> 00:08:00,870
directly with Amazon instances name I

00:07:56,250 --> 00:08:03,630
built with or or Curt strategy we can

00:08:00,870 --> 00:08:05,580
deploy in the order of seconds because

00:08:03,630 --> 00:08:09,750
that's how long it takes you to swap out

00:08:05,580 --> 00:08:12,600
an image for for a docker container so

00:08:09,750 --> 00:08:16,260
when we went to - - Amazon instances

00:08:12,600 --> 00:08:19,350
these turned out to extend or deployment

00:08:16,260 --> 00:08:20,760
time into the tens of minutes this was a

00:08:19,350 --> 00:08:23,280
big pain point this is something that we

00:08:20,760 --> 00:08:27,810
did not want to do and it was not a very

00:08:23,280 --> 00:08:30,300
desirable side-effect now we are also

00:08:27,810 --> 00:08:32,789
using a spinnaker in combination with

00:08:30,300 --> 00:08:38,030
kubernetes now kubernetes gives us the

00:08:32,789 --> 00:08:38,030
ability to reuse those resources we

00:08:38,180 --> 00:08:45,870
change the the containers that are

00:08:42,900 --> 00:08:48,990
running on them and get all of the

00:08:45,870 --> 00:08:54,089
benefits of using a spinnaker without

00:08:48,990 --> 00:08:55,860
getting the cone the problem of having

00:08:54,089 --> 00:08:57,870
to wait for those that progress to go so

00:08:55,860 --> 00:09:00,450
now we get fast deployments and at the

00:08:57,870 --> 00:09:02,190
same time we get no faculties yeah okay

00:09:00,450 --> 00:09:03,750
well I'll be very curious to hear

00:09:02,190 --> 00:09:05,970
hopefully we can do another one of these

00:09:03,750 --> 00:09:07,890
talks in another six months or a year

00:09:05,970 --> 00:09:10,080
and I'll be very curious to hear once

00:09:07,890 --> 00:09:11,520
you've moved more services over maybe

00:09:10,080 --> 00:09:13,200
even all services I don't exactly know

00:09:11,520 --> 00:09:14,889
what your migration plans but it'd be

00:09:13,200 --> 00:09:17,470
really great to get a

00:09:14,889 --> 00:09:19,059
you know in next time we get the chance

00:09:17,470 --> 00:09:21,429
to sit down said thank you so much for

00:09:19,059 --> 00:09:23,350
sharing your story if you are thinking

00:09:21,429 --> 00:09:25,689
about adopting spinnaker there's a very

00:09:23,350 --> 00:09:27,850
vibrant community over 5,000 people in

00:09:25,689 --> 00:09:29,619
this vinegar slot team so and lots of

00:09:27,850 --> 00:09:31,149
people like Ann Antonio that are just

00:09:29,619 --> 00:09:32,499
happy to help and share knowledge so it

00:09:31,149 --> 00:09:35,109
definitely might be a little

00:09:32,499 --> 00:09:37,359
intimidating to join that for the first

00:09:35,109 --> 00:09:39,669
time but it's a very friendly group and

00:09:37,359 --> 00:09:42,429
you should definitely you know not be

00:09:39,669 --> 00:09:45,600
shy to say hello when you join alright

00:09:42,429 --> 00:09:45,600
thank you so much man

00:09:46,830 --> 00:09:50,039

YouTube URL: https://www.youtube.com/watch?v=EdT-bG0e6Pk


