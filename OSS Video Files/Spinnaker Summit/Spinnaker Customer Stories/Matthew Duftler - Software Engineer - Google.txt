Title: Matthew Duftler - Software Engineer - Google
Publication date: 2018-11-15
Playlist: Spinnaker Customer Stories
Description: 
	Discusses the origin story of Spinnaker.
Captions: 
	00:00:01,689 --> 00:00:05,720
hey it's Jody with armory I'm here with

00:00:03,979 --> 00:00:07,430
duh Fleur now you may not recognize him

00:00:05,720 --> 00:00:09,290
because usually he has a handlebar

00:00:07,430 --> 00:00:11,540
mustache they completely completely

00:00:09,290 --> 00:00:12,710
obscures his face so if you can get a

00:00:11,540 --> 00:00:15,230
good look at you right now why don't you

00:00:12,710 --> 00:00:17,240
guys introduce yourself Thanks yeah I'm

00:00:15,230 --> 00:00:18,920
Matt Guf I work for Google out of New

00:00:17,240 --> 00:00:20,540
York City I'm a software engineer on the

00:00:18,920 --> 00:00:21,890
spinnaker project so if you're just

00:00:20,540 --> 00:00:23,960
getting involved in spinning gear you're

00:00:21,890 --> 00:00:26,119
not super familiar with it you may think

00:00:23,960 --> 00:00:26,990
of spinnaker as a Netflix and Google

00:00:26,119 --> 00:00:29,119
project there's a really interesting

00:00:26,990 --> 00:00:30,710
origin story about how it originally

00:00:29,119 --> 00:00:33,200
came out of Netflix and then Matt's the

00:00:30,710 --> 00:00:35,480
guy who actually started tinkering on it

00:00:33,200 --> 00:00:37,550
at Google so tell us about that yeah so

00:00:35,480 --> 00:00:40,040
uh wait a guy Erik Johnson at Google who

00:00:37,550 --> 00:00:42,290
was think his mandate was like make sure

00:00:40,040 --> 00:00:44,030
that like top tier open-source projects

00:00:42,290 --> 00:00:47,660
work well on Google infrastructure and

00:00:44,030 --> 00:00:49,130
Google cloud offerings so he had talked

00:00:47,660 --> 00:00:51,710
to several of us about the spinnaker

00:00:49,130 --> 00:00:53,239
project we were familiar with Asgard

00:00:51,710 --> 00:00:54,969
which was a precursor along with some

00:00:53,239 --> 00:00:57,410
other projects to spinnaker and then

00:00:54,969 --> 00:00:58,670
just asked us to take a look and see if

00:00:57,410 --> 00:01:00,739
we could get involved somehow and it

00:00:58,670 --> 00:01:02,930
started really is like a 20% project

00:01:00,739 --> 00:01:04,489
doing some small kind of commits on the

00:01:02,930 --> 00:01:06,170
side and just figuring out what it was

00:01:04,489 --> 00:01:08,149
all about and then it grew from there

00:01:06,170 --> 00:01:09,770
and you know Google's like cloud

00:01:08,149 --> 00:01:11,810
offerings have continued to grow so we

00:01:09,770 --> 00:01:12,920
figured out over time it actually looks

00:01:11,810 --> 00:01:15,259
like this thing has a potential to

00:01:12,920 --> 00:01:17,240
really make all of this continuous

00:01:15,259 --> 00:01:19,490
delivery stuff kind of possible and easy

00:01:17,240 --> 00:01:21,560
and consumable for for all of our cloud

00:01:19,490 --> 00:01:23,659
offerings so we just continued to grow

00:01:21,560 --> 00:01:25,840
and we basically like steadily added

00:01:23,659 --> 00:01:27,679
people became a full-time project

00:01:25,840 --> 00:01:29,959
essentially a full team of people

00:01:27,679 --> 00:01:32,270
working on this I think we have 15

00:01:29,959 --> 00:01:34,759
people now working full-time was amazing

00:01:32,270 --> 00:01:36,319
that's amazing and so what what year was

00:01:34,759 --> 00:01:38,990
that where you started doing it as a 20%

00:01:36,319 --> 00:01:42,189
project I think late summer and I was

00:01:38,990 --> 00:01:47,959
either late summer or early fall 2014

00:01:42,189 --> 00:01:49,459
later it was I think November 2015 we

00:01:47,959 --> 00:01:51,859
open sourced at the beginning it was a

00:01:49,459 --> 00:01:54,409
Gandhian camera and adam jordan's and

00:01:51,859 --> 00:01:58,909
Chris berry and Dan woods yeah and then

00:01:54,409 --> 00:02:01,099
we just continued to grow so so you know

00:01:58,909 --> 00:02:04,249
we we are starting to see spinnaker

00:02:01,099 --> 00:02:05,929
become this this standard for CD where

00:02:04,249 --> 00:02:07,429
no standard could exist before as

00:02:05,929 --> 00:02:09,170
companies do out of data centers and

00:02:07,429 --> 00:02:11,510
into the cloud how would you describe

00:02:09,170 --> 00:02:12,530
Google's interest in motivation and the

00:02:11,510 --> 00:02:14,810
project and how

00:02:12,530 --> 00:02:16,370
would like to see it grow and and what

00:02:14,810 --> 00:02:17,990
does success look like for spinnaker

00:02:16,370 --> 00:02:20,410
from your either your personal Android

00:02:17,990 --> 00:02:23,180
Google's particular yeah Google's been

00:02:20,410 --> 00:02:27,020
like in terms of our team's relationship

00:02:23,180 --> 00:02:28,310
with with Google as a like a company

00:02:27,020 --> 00:02:30,050
they've been really good about it in

00:02:28,310 --> 00:02:32,690
that they've they've really not

00:02:30,050 --> 00:02:34,400
pressured us much to define at each step

00:02:32,690 --> 00:02:36,920
what what success means like they've

00:02:34,400 --> 00:02:39,200
basically left us to experiment and try

00:02:36,920 --> 00:02:41,180
to make spinnaker and the whole idea of

00:02:39,200 --> 00:02:43,550
continuous delivery like a viable

00:02:41,180 --> 00:02:46,010
concept and they haven't really focused

00:02:43,550 --> 00:02:47,780
so much on making sure that it really

00:02:46,010 --> 00:02:50,000
works and really delivers customers on

00:02:47,780 --> 00:02:51,680
this platform these numbers of these you

00:02:50,000 --> 00:02:53,660
know this point in time I haven't pushed

00:02:51,680 --> 00:02:55,340
us much on that they really want us to

00:02:53,660 --> 00:02:58,069
kind of push a state-of the-art and make

00:02:55,340 --> 00:03:00,739
spinnaker successful as a standalone

00:02:58,069 --> 00:03:02,269
offering and they haven't pushed us too

00:03:00,739 --> 00:03:04,400
much which is good now lately

00:03:02,269 --> 00:03:05,540
the team's big now yeah sure you know

00:03:04,400 --> 00:03:08,480
we're doing a lot of customer

00:03:05,540 --> 00:03:10,430
engagements where you know they're

00:03:08,480 --> 00:03:12,110
they're more interested now when they

00:03:10,430 --> 00:03:14,300
were early days when it was just a

00:03:12,110 --> 00:03:17,120
couple of people yeah so but for us

00:03:14,300 --> 00:03:20,030
success just looks like customers having

00:03:17,120 --> 00:03:24,470
a much easier time of building ci and CD

00:03:20,030 --> 00:03:26,989
workflows you know remove friction make

00:03:24,470 --> 00:03:29,239
the stuff kind of obvious yeah make

00:03:26,989 --> 00:03:30,739
deployments boring yeah all this stuff

00:03:29,239 --> 00:03:32,540
you hear a lot of I mean that is that's

00:03:30,739 --> 00:03:34,670
all success looks like for us it's not a

00:03:32,540 --> 00:03:36,950
it certainly isn't a certain number of

00:03:34,670 --> 00:03:39,049
customers or a certain market share it's

00:03:36,950 --> 00:03:40,940
nothing like that it's just keep pushing

00:03:39,049 --> 00:03:42,859
the state-of-the-art forward make Google

00:03:40,940 --> 00:03:44,480
Cloud obviously a nice place to to

00:03:42,859 --> 00:03:46,190
pursue these things but really just make

00:03:44,480 --> 00:03:48,260
it easy and kind of boring it's an

00:03:46,190 --> 00:03:50,019
amazing long game so if I'm a cloud

00:03:48,260 --> 00:03:52,130
architect and I'm responsible for

00:03:50,019 --> 00:03:54,890
shepherding my company into the cloud

00:03:52,130 --> 00:03:57,620
and and figuring out how to really be

00:03:54,890 --> 00:03:59,870
effective it at this cloud journey what

00:03:57,620 --> 00:04:02,480
are some of the best practices or or not

00:03:59,870 --> 00:04:03,350
the traps you see companies falling into

00:04:02,480 --> 00:04:05,329
as they're starting to think about

00:04:03,350 --> 00:04:07,489
spinnaker and adopted how should I

00:04:05,329 --> 00:04:09,230
really think about spinnaker from my

00:04:07,489 --> 00:04:11,260
organization what are what are some pro

00:04:09,230 --> 00:04:11,260
tips

00:04:11,680 --> 00:04:17,120
all right so we've certainly seen less

00:04:15,680 --> 00:04:18,530
so lately but pain points and getting

00:04:17,120 --> 00:04:20,900
everything up and running I mean this is

00:04:18,530 --> 00:04:23,150
not a surprise right it's a big sort of

00:04:20,900 --> 00:04:24,020
bear of a project so it's good that

00:04:23,150 --> 00:04:26,300
there other companies that are really

00:04:24,020 --> 00:04:28,280
experts at doing this but we do hear a

00:04:26,300 --> 00:04:31,910
lot of pain from customers and trying to

00:04:28,280 --> 00:04:33,710
stand things up so I think like we see

00:04:31,910 --> 00:04:34,700
people who go off and and struggle on

00:04:33,710 --> 00:04:35,900
their own for a long period of time

00:04:34,700 --> 00:04:38,360
without asking for help

00:04:35,900 --> 00:04:41,000
so certainly find folks who are experts

00:04:38,360 --> 00:04:44,120
and running this don't try to solve

00:04:41,000 --> 00:04:46,280
every problem on your own out there are

00:04:44,120 --> 00:04:47,990
a number of like well-defined paths to

00:04:46,280 --> 00:04:50,060
get everything up and running kind of

00:04:47,990 --> 00:04:52,460
give it a quick try as a proof of

00:04:50,060 --> 00:04:55,730
concept and I would pursue those like

00:04:52,460 --> 00:04:57,080
QuickStart tags without like staffing up

00:04:55,730 --> 00:04:58,490
a team and saying we're committing to

00:04:57,080 --> 00:05:00,680
this whole thing and this is our future

00:04:58,490 --> 00:05:02,810
if to see what it's all about first and

00:05:00,680 --> 00:05:04,220
it does it's a it's a bunch of stuff to

00:05:02,810 --> 00:05:06,530
set up and operate so it feels a bit

00:05:04,220 --> 00:05:07,940
painful at first so it'd be good to take

00:05:06,530 --> 00:05:11,390
the shortest path to get it up and

00:05:07,940 --> 00:05:13,100
running try it out try to manage a few

00:05:11,390 --> 00:05:15,260
services a few applications this way and

00:05:13,100 --> 00:05:17,540
see if it's really for you and we always

00:05:15,260 --> 00:05:19,040
say to everybody you know if something

00:05:17,540 --> 00:05:20,810
much simpler works where you use that

00:05:19,040 --> 00:05:23,480
thing I mean it's not one-size-fits-all

00:05:20,810 --> 00:05:26,480
it really is I think the sweet spot is

00:05:23,480 --> 00:05:30,530
really a more complex deployments often

00:05:26,480 --> 00:05:33,140
multiple clouds often one team operating

00:05:30,530 --> 00:05:34,970
this thing for a large organization that

00:05:33,140 --> 00:05:37,810
has a bunch of individual developers

00:05:34,970 --> 00:05:40,010
yeah yeah it seems like the the more

00:05:37,810 --> 00:05:41,690
sophisticated a company is enlarged and

00:05:40,010 --> 00:05:42,890
and the more they've acquired a number

00:05:41,690 --> 00:05:44,060
of other companies but all deploy in

00:05:42,890 --> 00:05:44,900
different ways they have application

00:05:44,060 --> 00:05:45,919
teams they're all going off the

00:05:44,900 --> 00:05:47,060
reservation doing their own thing the

00:05:45,919 --> 00:05:48,530
more spinnaker can help actually

00:05:47,060 --> 00:05:49,820
standardize a golden path feels like

00:05:48,530 --> 00:05:51,500
something you grow into is the

00:05:49,820 --> 00:05:53,900
organization matures as your policies

00:05:51,500 --> 00:05:56,000
witcher this is a way to code and

00:05:53,900 --> 00:05:57,320
enforce them okay so let's talk a little

00:05:56,000 --> 00:05:59,120
bit about what your priorities are now

00:05:57,320 --> 00:06:00,080
and how the project's evolving what are

00:05:59,120 --> 00:06:02,270
some of the things you're working on

00:06:00,080 --> 00:06:03,800
some things that you hope to see others

00:06:02,270 --> 00:06:07,280
come in and start to contribute in as

00:06:03,800 --> 00:06:09,470
the project grows yeah absolutely so we

00:06:07,280 --> 00:06:11,870
have a bunch of folks at Google but

00:06:09,470 --> 00:06:14,030
really in the entire span occur

00:06:11,870 --> 00:06:16,250
community working on things to make like

00:06:14,030 --> 00:06:17,780
the v2 provider for kubernetes let's

00:06:16,250 --> 00:06:19,850
talk about what that is v1 versus V to

00:06:17,780 --> 00:06:21,289
keep hearing that everywhere right we'll

00:06:19,850 --> 00:06:23,110
go back a tiny bit so early days

00:06:21,289 --> 00:06:25,599
everything was really VM oriented

00:06:23,110 --> 00:06:28,150
so we had GC vm's you see two of vm's

00:06:25,599 --> 00:06:29,889
their support for for oracle their

00:06:28,150 --> 00:06:31,990
support for there's Cloud Foundry

00:06:29,889 --> 00:06:33,400
support all of these different things

00:06:31,990 --> 00:06:35,409
had a particular approach where we

00:06:33,400 --> 00:06:36,819
talked about server groups a server

00:06:35,409 --> 00:06:40,090
group it would have replicas or

00:06:36,819 --> 00:06:41,800
homogeneous instances and that was the

00:06:40,090 --> 00:06:43,509
prime unit that you deployed and that

00:06:41,800 --> 00:06:45,520
you operate on and all the like

00:06:43,509 --> 00:06:47,349
context-dependent operations concern

00:06:45,520 --> 00:06:48,699
themselves with server groups then we

00:06:47,349 --> 00:06:50,560
added support for container based

00:06:48,699 --> 00:06:53,020
platforms started with kubernetes

00:06:50,560 --> 00:06:54,610
netflix has support for kaitos but these

00:06:53,020 --> 00:06:56,800
things are manifest oriented you don't

00:06:54,610 --> 00:07:00,159
really have just a strict server group

00:06:56,800 --> 00:07:03,520
concept that you pointed the first pass

00:07:00,159 --> 00:07:07,240
of the provider for kubernetes was

00:07:03,520 --> 00:07:09,219
really like a mapping from all of the vm

00:07:07,240 --> 00:07:10,810
based providers on the kubernetes and as

00:07:09,219 --> 00:07:11,919
a wizard approach you fill in a bunch of

00:07:10,810 --> 00:07:14,889
forms you don't need to be an expert

00:07:11,919 --> 00:07:16,180
it's a big constraint people liked it

00:07:14,889 --> 00:07:18,370
but there was a kind of interesting

00:07:16,180 --> 00:07:19,900
thing where the early adopters are

00:07:18,370 --> 00:07:21,639
really the people who like to look under

00:07:19,900 --> 00:07:22,900
the covers and turn all the knobs they

00:07:21,639 --> 00:07:25,389
wanted everything and they wanted their

00:07:22,900 --> 00:07:26,710
manifest checked in somewhere one source

00:07:25,389 --> 00:07:28,900
control all of these things that you

00:07:26,710 --> 00:07:31,389
would expect to be there so we revisited

00:07:28,900 --> 00:07:33,430
it we built what we call the v2 provider

00:07:31,389 --> 00:07:34,659
which is a pure manifest oriented

00:07:33,430 --> 00:07:35,740
approach where things are checked in

00:07:34,659 --> 00:07:38,199
somewhere and you're triggered off

00:07:35,740 --> 00:07:41,319
events based on pushing changes to your

00:07:38,199 --> 00:07:43,150
persistent artifacts so we built that v2

00:07:41,319 --> 00:07:45,129
provider it does what we want it's quite

00:07:43,150 --> 00:07:46,930
pure like conceptually the model makes

00:07:45,129 --> 00:07:48,940
sense and now we hear a lot of feedback

00:07:46,930 --> 00:07:52,029
that people really do like that sort of

00:07:48,940 --> 00:07:53,710
wizard the kind of guided you know path

00:07:52,029 --> 00:07:55,659
through the environment so we're trying

00:07:53,710 --> 00:07:56,919
to figure out how can we now take some

00:07:55,659 --> 00:07:59,949
of the things that we did really well in

00:07:56,919 --> 00:08:02,440
terms of UX back in the v1 provider days

00:07:59,949 --> 00:08:04,539
and map that onto the bt per set I think

00:08:02,440 --> 00:08:06,940
that's the biggest thing that's going to

00:08:04,539 --> 00:08:08,680
be very like user facing that we're

00:08:06,940 --> 00:08:10,270
focusing on now for so that's a big

00:08:08,680 --> 00:08:11,979
priority maybe you can also touch on

00:08:10,270 --> 00:08:14,560
Kayenta and the work that you did there

00:08:11,979 --> 00:08:16,360
absolutely so earlier this year we open

00:08:14,560 --> 00:08:18,310
sourced kento which is an automatic

00:08:16,360 --> 00:08:20,949
canary analysis service we did this

00:08:18,310 --> 00:08:23,169
again in partnership with Netflix it was

00:08:20,949 --> 00:08:24,670
really like a reimagining of a service

00:08:23,169 --> 00:08:26,350
called automated canary and Alice

00:08:24,670 --> 00:08:28,360
sir ACA that Netflix has been running

00:08:26,350 --> 00:08:30,430
for years also inspired by several

00:08:28,360 --> 00:08:32,860
internal services we have at Google the

00:08:30,430 --> 00:08:34,840
primary one is Cash's canary analysis

00:08:32,860 --> 00:08:36,880
service but that is it's another

00:08:34,840 --> 00:08:38,500
spinnaker micro service it's tightly

00:08:36,880 --> 00:08:40,780
integrated with the rest of spinnaker

00:08:38,500 --> 00:08:43,540
and it the goal is that once you have

00:08:40,780 --> 00:08:44,920
your release workflow up and running and

00:08:43,540 --> 00:08:46,330
you get to this point where you're

00:08:44,920 --> 00:08:48,250
pushing changes out into production

00:08:46,330 --> 00:08:50,620
whether they're config or binaries

00:08:48,250 --> 00:08:51,970
infrastructure changes whatever that you

00:08:50,620 --> 00:08:53,800
want to gain more confidence in those

00:08:51,970 --> 00:08:55,450
changes as you push them out so we

00:08:53,800 --> 00:08:58,660
created the service that tries to take

00:08:55,450 --> 00:09:00,790
the sort of tedious manual human driven

00:08:58,660 --> 00:09:03,190
error-prone thing where you push it out

00:09:00,790 --> 00:09:05,050
and then you go find a dashboard

00:09:03,190 --> 00:09:07,420
you know Gehenna looks the same so we

00:09:05,050 --> 00:09:09,460
said how can we apply statistics to this

00:09:07,420 --> 00:09:10,690
take the human error out of it take the

00:09:09,460 --> 00:09:12,850
boredom out of it

00:09:10,690 --> 00:09:15,160
can't do it hundreds of times a day as

00:09:12,850 --> 00:09:18,250
humans so make it scale make it

00:09:15,160 --> 00:09:19,630
repeatable so it it's basically a

00:09:18,250 --> 00:09:22,180
service to do that

00:09:19,630 --> 00:09:24,220
it's not magic you need to have your

00:09:22,180 --> 00:09:26,470
application is properly instrumented you

00:09:24,220 --> 00:09:28,000
need to know what to look for it sort of

00:09:26,470 --> 00:09:29,770
forces you to think in terms of

00:09:28,000 --> 00:09:31,690
different versions of your service and

00:09:29,770 --> 00:09:34,210
how do you tease apart the metrics that

00:09:31,690 --> 00:09:35,800
you've recorded but it's a tightly

00:09:34,210 --> 00:09:38,470
integrated mechanism for doing that

00:09:35,800 --> 00:09:41,650
including full UI support scales very

00:09:38,470 --> 00:09:43,060
well completely modular a bunch of

00:09:41,650 --> 00:09:46,450
community members you guys added the

00:09:43,060 --> 00:09:48,970
data dog support several other services

00:09:46,450 --> 00:09:50,910
have been added since serving us like

00:09:48,970 --> 00:09:53,040
back-end

00:09:50,910 --> 00:09:54,870
so it's pluggable modular easy to work

00:09:53,040 --> 00:09:57,000
on and now it's really a community

00:09:54,870 --> 00:09:58,769
effort so that's that's one of the

00:09:57,000 --> 00:10:01,560
latest services that we worked on this

00:09:58,769 --> 00:10:03,810
it has like a pretty big uptake like

00:10:01,560 --> 00:10:05,850
we're sort of we knew is going to be big

00:10:03,810 --> 00:10:09,269
but we were we are surprised by the

00:10:05,850 --> 00:10:11,069
excitement it's so awesome to see a

00:10:09,269 --> 00:10:13,920
platform emerge where never existed

00:10:11,069 --> 00:10:15,389
before and then all these additional

00:10:13,920 --> 00:10:17,459
services that allow for quality to be

00:10:15,389 --> 00:10:19,290
built into CD instead of dealing with

00:10:17,459 --> 00:10:20,790
the aftermath later we joke it's like

00:10:19,290 --> 00:10:22,949
clean-up on aisle three when you deploy

00:10:20,790 --> 00:10:24,660
it's like now both really nice we have

00:10:22,949 --> 00:10:26,790
all these like foundational pieces

00:10:24,660 --> 00:10:29,339
finally in place yeah where you can have

00:10:26,790 --> 00:10:32,339
a really a small team at a large company

00:10:29,339 --> 00:10:34,110
say this is our defines path we create

00:10:32,339 --> 00:10:36,269
these managed pipeline templates it

00:10:34,110 --> 00:10:38,130
involves canary release details and this

00:10:36,269 --> 00:10:39,839
is how we recommend our team student do

00:10:38,130 --> 00:10:42,240
it but you are free to customize and

00:10:39,839 --> 00:10:45,269
that was basically impossible before and

00:10:42,240 --> 00:10:46,560
now it's pretty doable yes and the bar

00:10:45,269 --> 00:10:48,480
keeps getting lower it keeps getting

00:10:46,560 --> 00:10:49,139
easier to run everything it's turned on

00:10:48,480 --> 00:10:51,269
the right direction

00:10:49,139 --> 00:10:53,339
it's cool well if you are a cloud

00:10:51,269 --> 00:10:54,600
architect looking at bringing spinnaker

00:10:53,339 --> 00:10:56,399
into your company there's people like

00:10:54,600 --> 00:10:58,260
buffler in the community that are just

00:10:56,399 --> 00:11:00,329
incredibly helpful also if you're

00:10:58,260 --> 00:11:01,290
thinking about contributing and actually

00:11:00,329 --> 00:11:03,000
getting involved there's now a

00:11:01,290 --> 00:11:04,290
governance policy in place to really

00:11:03,000 --> 00:11:06,480
formalize that it can be a little

00:11:04,290 --> 00:11:07,860
intimidating to go into a slack team

00:11:06,480 --> 00:11:09,180
with 5,000 people and all seem to know

00:11:07,860 --> 00:11:11,190
each other but it's a very friendly

00:11:09,180 --> 00:11:13,470
group a lot of help we'd love to have

00:11:11,190 --> 00:11:16,730
you get involved so thanks for believing

00:11:13,470 --> 00:11:21,019
so early in this execute it's awesome

00:11:16,730 --> 00:11:21,019

YouTube URL: https://www.youtube.com/watch?v=seBmIpiRi5g


