Title: Andrew Phillips "Where Are We Going? The Future of Continuous Delivery" - Spinnaker Summit 2019
Publication date: 2019-12-03
Playlist: Spinnaker Summit 2019
Description: 
	The third annual Spinnaker Summit (Diamond Sponsors: Netflix, Google and Armory) was held at the Hard Rock Hotel in San Diego, CA from November 15-17, 2019 and welcomed over 500 members of the rapidly growing Spinnaker open source community.
Captions: 
	00:00:06,330 --> 00:00:10,980
[Laughter]

00:00:14,900 --> 00:00:19,130
thanks to everyone for coming out here

00:00:16,940 --> 00:00:20,750
thanks to all the work that goes in from

00:00:19,130 --> 00:00:23,840
the sponsors and organizers but

00:00:20,750 --> 00:00:25,130
especially over a weekend I I have mixed

00:00:23,840 --> 00:00:27,260
feelings about weekend conferences I'm

00:00:25,130 --> 00:00:28,670
really really pleased and proud to see

00:00:27,260 --> 00:00:30,980
that so many people have made the effort

00:00:28,670 --> 00:00:33,559
to go here alright enough let's continue

00:00:30,980 --> 00:00:35,660
with this the future of continuous

00:00:33,559 --> 00:00:38,390
delivery before we can talk about that

00:00:35,660 --> 00:00:39,770
in a lot of detail let's spend a few

00:00:38,390 --> 00:00:43,100
minutes reminiscences

00:00:39,770 --> 00:00:46,550
in the glories of the past to figure out

00:00:43,100 --> 00:00:48,680
how we got to where we are today so in

00:00:46,550 --> 00:00:52,070
the beginning there was primordial ooze

00:00:48,680 --> 00:00:55,940
of deployment there were you know rivers

00:00:52,070 --> 00:00:58,610
of molten bash there were endless works

00:00:55,940 --> 00:01:00,430
you know endless Word documents

00:00:58,610 --> 00:01:02,750
describing how to do things there were

00:01:00,430 --> 00:01:04,550
you know not dip drives because they

00:01:02,750 --> 00:01:06,560
hardly existed back then handed around

00:01:04,550 --> 00:01:09,140
with instructions on how to do things I

00:01:06,560 --> 00:01:10,580
have personally experienced it somebody

00:01:09,140 --> 00:01:13,520
probably remembers as well things like

00:01:10,580 --> 00:01:16,280
FTP inform your laptop into a production

00:01:13,520 --> 00:01:18,200
website server and live updating that

00:01:16,280 --> 00:01:20,360
kind of stuff you know the days when

00:01:18,200 --> 00:01:22,580
production mobile apps were deployed

00:01:20,360 --> 00:01:25,580
from a developer's IDE because that was

00:01:22,580 --> 00:01:28,459
the only way you could do it in fact you

00:01:25,580 --> 00:01:30,349
know data science models deployed

00:01:28,459 --> 00:01:32,000
straight from some Jupiter notebook into

00:01:30,349 --> 00:01:34,399
production to make credit score's you

00:01:32,000 --> 00:01:36,020
know we've all kind of been there I hear

00:01:34,399 --> 00:01:38,349
some chuckles like there's a long long

00:01:36,020 --> 00:01:41,119
list of the kind of primordial ooze of

00:01:38,349 --> 00:01:44,060
development and deployment and then of

00:01:41,119 --> 00:01:47,240
course that uh the Sun rises we discover

00:01:44,060 --> 00:01:49,729
CIN CD and wonderful things happen and

00:01:47,240 --> 00:01:52,069
are we all super happy and the world is

00:01:49,729 --> 00:01:53,780
in a great place and well of course the

00:01:52,069 --> 00:01:56,179
answer inevitably initially is kind of

00:01:53,780 --> 00:01:59,509
no because where we end up is a place a

00:01:56,179 --> 00:02:01,610
bit like this CIN CD are kind of

00:01:59,509 --> 00:02:05,330
discovered by different parts of your

00:02:01,610 --> 00:02:06,890
organization different teams and they

00:02:05,330 --> 00:02:08,509
discover that you need lots of little

00:02:06,890 --> 00:02:10,099
pieces to glue together to make this

00:02:08,509 --> 00:02:12,860
kind of thing work and so everybody

00:02:10,099 --> 00:02:16,190
invents their own little Rube Goldberg

00:02:12,860 --> 00:02:17,750
device and of course the reason for the

00:02:16,190 --> 00:02:19,849
white space in this diagram is because

00:02:17,750 --> 00:02:21,260
there are still plenty of places in your

00:02:19,849 --> 00:02:23,420
organization where there is not even a

00:02:21,260 --> 00:02:26,510
Rube Goldberg device there is still you

00:02:23,420 --> 00:02:27,560
know manuals and worksheets and all

00:02:26,510 --> 00:02:30,640
kinds of things that

00:02:27,560 --> 00:02:33,319
I used to do all these deployment things

00:02:30,640 --> 00:02:35,540
so that's obviously not a great state to

00:02:33,319 --> 00:02:38,180
be in like random amounts of Rube

00:02:35,540 --> 00:02:40,580
Goldberg love everywhere lots of duct

00:02:38,180 --> 00:02:42,200
tape and there's an industry I think we

00:02:40,580 --> 00:02:45,050
obviously recognize this and they were

00:02:42,200 --> 00:02:47,780
I'd say two main approaches that were

00:02:45,050 --> 00:02:50,180
taken to try to solve this problem one

00:02:47,780 --> 00:02:52,700
of them looked a bit like this

00:02:50,180 --> 00:02:54,590
you know I'll leave you a bit of time to

00:02:52,700 --> 00:02:55,880
look at it and spot the joke in one of

00:02:54,590 --> 00:02:58,480
the lines and then the bottom there but

00:02:55,880 --> 00:03:01,250
you know the idea that if you can

00:02:58,480 --> 00:03:04,489
somebody spawned the joke very good the

00:03:01,250 --> 00:03:06,980
idea that if you can make the run time

00:03:04,489 --> 00:03:08,750
just really simple and just you know

00:03:06,980 --> 00:03:10,400
take care of all the problems for the

00:03:08,750 --> 00:03:13,190
developer then then all these kind of

00:03:10,400 --> 00:03:14,690
root bulb arises go away because you

00:03:13,190 --> 00:03:17,750
just have a bit of code to worry about

00:03:14,690 --> 00:03:20,239
and like everything else is handled and

00:03:17,750 --> 00:03:22,459
it's true this was a very nice and

00:03:20,239 --> 00:03:24,200
compelling experience for a lot of use

00:03:22,459 --> 00:03:27,170
cases but of course the challenge was

00:03:24,200 --> 00:03:28,880
that it was only for some of those use

00:03:27,170 --> 00:03:30,860
cases that you need in a company so you

00:03:28,880 --> 00:03:34,160
had a bit of this stuff but in the past

00:03:30,860 --> 00:03:35,799
wonderful pass this around and then you

00:03:34,160 --> 00:03:37,790
had all these areas where it didn't fit

00:03:35,799 --> 00:03:40,459
and so you ended up with the situation

00:03:37,790 --> 00:03:42,650
that wasn't hugely better from the other

00:03:40,459 --> 00:03:45,290
one and of course this could be an

00:03:42,650 --> 00:03:47,540
entire other talk like pass communities

00:03:45,290 --> 00:03:48,920
and vendors and we have our community

00:03:47,540 --> 00:03:50,230
colleagues from pivotal here they can

00:03:48,920 --> 00:03:52,370
talk about this in much more detail

00:03:50,230 --> 00:03:53,810
recognize this and there was lots of

00:03:52,370 --> 00:03:55,640
work to try and make them more

00:03:53,810 --> 00:03:58,220
extensible and more pluggable and more

00:03:55,640 --> 00:03:59,299
complicated well that's not that wasn't

00:03:58,220 --> 00:04:01,519
the point but that's of course where

00:03:59,299 --> 00:04:04,790
they ended up so I think it's fair to

00:04:01,519 --> 00:04:07,370
say that isn't the sort of the solution

00:04:04,790 --> 00:04:11,150
that we found that really solved all the

00:04:07,370 --> 00:04:14,150
problems so what we ended up is

00:04:11,150 --> 00:04:17,660
basically the other option that we tried

00:04:14,150 --> 00:04:19,579
in the community where are we now or at

00:04:17,660 --> 00:04:24,080
a place that I think looks a little bit

00:04:19,579 --> 00:04:27,280
like this like this like this there is

00:04:24,080 --> 00:04:29,960
one centralised Rube Goldberg device

00:04:27,280 --> 00:04:33,860
typically called the standardized or the

00:04:29,960 --> 00:04:38,180
platform Rube Goldberg device and you

00:04:33,860 --> 00:04:39,710
know aspirationally that covers 85% of

00:04:38,180 --> 00:04:40,360
the use cases that you want to cover in

00:04:39,710 --> 00:04:42,460
your organized

00:04:40,360 --> 00:04:44,259
and then there is some because we know

00:04:42,460 --> 00:04:46,000
Fiat doesn't work and we can't force

00:04:44,259 --> 00:04:48,159
everyone to use this there is this

00:04:46,000 --> 00:04:49,210
exception process that you can ask for

00:04:48,159 --> 00:04:51,939
and then you can build your own Rube

00:04:49,210 --> 00:04:53,710
Goldberg device and so there's still

00:04:51,939 --> 00:04:55,479
this like layer of crazy Rube Goldberg

00:04:53,710 --> 00:04:58,479
devices I think I was speaking to a

00:04:55,479 --> 00:05:00,400
Gartner analyst a while back they were

00:04:58,479 --> 00:05:03,759
talking about progress in this space

00:05:00,400 --> 00:05:05,259
they were interviewing I think two years

00:05:03,759 --> 00:05:07,539
ago they interviewed like heads of

00:05:05,259 --> 00:05:09,879
engineering or heads of whatever or

00:05:07,539 --> 00:05:11,349
whatever that title is and asking them

00:05:09,879 --> 00:05:12,639
about the number of tool chains that

00:05:11,349 --> 00:05:14,020
they thought they had in their company

00:05:12,639 --> 00:05:15,520
and it used to be about five and then

00:05:14,020 --> 00:05:18,159
they asked them last year again it's now

00:05:15,520 --> 00:05:20,319
25 and they conclude that it's not that

00:05:18,159 --> 00:05:21,400
you know they actually have more now

00:05:20,319 --> 00:05:23,349
that they actually at least know that

00:05:21,400 --> 00:05:26,319
they have 25 now or two years ago they

00:05:23,349 --> 00:05:29,530
didn't even know and TLDR there's just a

00:05:26,319 --> 00:05:31,240
lot of stuff going on but now you know

00:05:29,530 --> 00:05:32,529
if we compare it back few slides back we

00:05:31,240 --> 00:05:34,840
had lots of white space no more white

00:05:32,529 --> 00:05:39,610
space great right all covered in Rube

00:05:34,840 --> 00:05:41,830
Goldberg devices so we done yeah no of

00:05:39,610 --> 00:05:45,069
course we're not like this is this is

00:05:41,830 --> 00:05:47,800
probably not the endgame that we want to

00:05:45,069 --> 00:05:51,039
reach and I guess the question is why

00:05:47,800 --> 00:05:55,440
why is this a problem looks pretty nice

00:05:51,039 --> 00:05:57,759
right well no I mean this is still

00:05:55,440 --> 00:05:59,080
incredibly complicated like this is some

00:05:57,759 --> 00:06:01,089
screenshot of some there's an

00:05:59,080 --> 00:06:02,770
interesting blog where somebody's

00:06:01,089 --> 00:06:04,870
collecting real world examples of see

00:06:02,770 --> 00:06:06,099
ICD and you know I think for most of

00:06:04,870 --> 00:06:07,870
most people in this room there are

00:06:06,099 --> 00:06:10,870
experts in this space it's like sure

00:06:07,870 --> 00:06:13,449
yeah we makes total sense look if you

00:06:10,870 --> 00:06:15,550
show this to like an average I don't

00:06:13,449 --> 00:06:20,469
know developer personal this is a head

00:06:15,550 --> 00:06:21,699
exploding picture of complexity so as I

00:06:20,469 --> 00:06:22,900
said why is this a problem

00:06:21,699 --> 00:06:25,839
well it's problem because it's still

00:06:22,900 --> 00:06:27,909
really complicated but there are some

00:06:25,839 --> 00:06:31,089
more subtle problems when we're more

00:06:27,909 --> 00:06:33,990
challenging problems here as well one of

00:06:31,089 --> 00:06:37,029
them is Oh does this thing have a back

00:06:33,990 --> 00:06:40,300
maybe it does doesn't really matter one

00:06:37,029 --> 00:06:42,099
of them is that it is pretty difficult

00:06:40,300 --> 00:06:43,629
in with most of the tools that are

00:06:42,099 --> 00:06:46,270
collected together in a picture like

00:06:43,629 --> 00:06:48,370
that to give teams progressive layers of

00:06:46,270 --> 00:06:50,800
control so you typically have a very

00:06:48,370 --> 00:06:52,030
binary choice as a platform team or a

00:06:50,800 --> 00:06:53,560
DevOps team or an

00:06:52,030 --> 00:06:55,900
reteam whatever you want to call it you

00:06:53,560 --> 00:06:58,270
have a choice between well we own the

00:06:55,900 --> 00:07:00,700
whole thing and you just get our

00:06:58,270 --> 00:07:02,530
guardrails or you have the choice of

00:07:00,700 --> 00:07:05,890
like yay configures code we'll put it

00:07:02,530 --> 00:07:07,620
all on the repo but it's very hard then

00:07:05,890 --> 00:07:11,470
to sort of say well we'll give you like

00:07:07,620 --> 00:07:13,480
60% control or 20% control or we'll give

00:07:11,470 --> 00:07:16,660
you control over these little areas of

00:07:13,480 --> 00:07:18,370
the problem space it's pretty much of an

00:07:16,660 --> 00:07:20,680
all-or-nothing thing and in a large

00:07:18,370 --> 00:07:22,630
organization where you inevitably need

00:07:20,680 --> 00:07:25,540
you know to have more control in some

00:07:22,630 --> 00:07:27,730
areas but less than others that's a

00:07:25,540 --> 00:07:30,010
challenge and then the other big

00:07:27,730 --> 00:07:32,320
challenge of course is that there's a

00:07:30,010 --> 00:07:34,270
huge amount of operational toil involved

00:07:32,320 --> 00:07:35,710
in running all these systems because by

00:07:34,270 --> 00:07:37,540
and large if we were to pick some

00:07:35,710 --> 00:07:39,670
quote-unquote industry standards in this

00:07:37,540 --> 00:07:42,450
space so stuff you got to figure out how

00:07:39,670 --> 00:07:44,830
to install how to run how to maintain

00:07:42,450 --> 00:07:45,310
some of the famous examples don't scale

00:07:44,830 --> 00:07:48,880
very well

00:07:45,310 --> 00:07:51,190
etc etc etc so we're the kind of point

00:07:48,880 --> 00:07:53,950
where this were a rat we've got the

00:07:51,190 --> 00:07:59,220
centralized Rube Goldberg device but

00:07:53,950 --> 00:08:01,840
they're still I think a way to go so

00:07:59,220 --> 00:08:03,910
we're you know what's one of the main

00:08:01,840 --> 00:08:07,240
challenges that we think we're facing

00:08:03,910 --> 00:08:09,040
today I would say that there are sort of

00:08:07,240 --> 00:08:12,240
three main challenges the teams working

00:08:09,040 --> 00:08:15,310
in these areas are facing the first one

00:08:12,240 --> 00:08:18,580
how do we make it sufficiently simple

00:08:15,310 --> 00:08:21,820
for 80% of our developers to do their

00:08:18,580 --> 00:08:24,130
work whilst at the same time focusing on

00:08:21,820 --> 00:08:26,980
that second problem allowing us to give

00:08:24,130 --> 00:08:30,280
progressively more control to those

00:08:26,980 --> 00:08:31,900
teams that need it so in other words how

00:08:30,280 --> 00:08:33,730
do we avoid the lesson from the first

00:08:31,900 --> 00:08:35,830
generation of past approaches where we

00:08:33,730 --> 00:08:37,720
could make it easy for 80% but there was

00:08:35,830 --> 00:08:41,500
no sort of progressive trapdoor

00:08:37,720 --> 00:08:42,970
capability and then the third part is

00:08:41,500 --> 00:08:45,250
how do I manage to solve that problem

00:08:42,970 --> 00:08:49,570
without having to build my own full

00:08:45,250 --> 00:08:51,250
platform ground up from scratch because

00:08:49,570 --> 00:08:53,020
yes you can certainly solve this problem

00:08:51,250 --> 00:08:55,600
but by the building a custom in-house

00:08:53,020 --> 00:08:59,830
platform but that's kind of a lot of

00:08:55,600 --> 00:09:01,990
work so I think if we look at the market

00:08:59,830 --> 00:09:04,470
today if we look at this space today and

00:09:01,990 --> 00:09:08,130
there are kind of three trends

00:09:04,470 --> 00:09:11,040
that are being picked up to to try to

00:09:08,130 --> 00:09:13,560
solve this particular problem treating

00:09:11,040 --> 00:09:16,230
you know app delivery rather than CD is

00:09:13,560 --> 00:09:19,050
the problem to solve using commodity

00:09:16,230 --> 00:09:21,360
components as a way to run and maintain

00:09:19,050 --> 00:09:24,510
this thing and moving towards a

00:09:21,360 --> 00:09:26,790
declarative approach now this isn't

00:09:24,510 --> 00:09:28,760
really super new I mean there's a bunch

00:09:26,790 --> 00:09:30,540
of quote-unquote DevOps elite

00:09:28,760 --> 00:09:32,970
organizations represented in the

00:09:30,540 --> 00:09:37,350
audience here today and so for most of

00:09:32,970 --> 00:09:39,480
them certainly one and two or one and

00:09:37,350 --> 00:09:41,310
partially three maybe well maybe one and

00:09:39,480 --> 00:09:45,810
partially three and partially two aren't

00:09:41,310 --> 00:09:47,820
anything new I think two is a sort of

00:09:45,810 --> 00:09:49,200
continuous delivery foundation type

00:09:47,820 --> 00:09:51,090
discussion that I'll talk about a little

00:09:49,200 --> 00:09:53,850
bit it's still generally a challenge to

00:09:51,090 --> 00:09:55,260
find good commodity components but TLDR

00:09:53,850 --> 00:09:56,520
is like there are certainly people who

00:09:55,260 --> 00:09:58,560
are already doing this successfully

00:09:56,520 --> 00:10:00,000
today and before it talks in today's

00:09:58,560 --> 00:10:01,680
program about things like managed

00:10:00,000 --> 00:10:04,020
delivery let me come back to that in a

00:10:01,680 --> 00:10:07,710
second we probably know what these

00:10:04,020 --> 00:10:09,900
things are but we still need to tackle

00:10:07,710 --> 00:10:12,990
them at the large so the first point

00:10:09,900 --> 00:10:16,680
here is no we've thought about maybe CI

00:10:12,990 --> 00:10:19,230
or CD years individual problems but it

00:10:16,680 --> 00:10:23,520
pays to zoom out a bit right that was

00:10:19,230 --> 00:10:24,810
the ear what we're really recognizing is

00:10:23,520 --> 00:10:26,520
that the problem we're trying to solve

00:10:24,810 --> 00:10:29,010
if we go back to that crazy overall

00:10:26,520 --> 00:10:31,140
diagram is not like each individual box

00:10:29,010 --> 00:10:33,720
on its own just kind of I think our

00:10:31,140 --> 00:10:35,040
prior approach the real issue we're all

00:10:33,720 --> 00:10:37,620
trying to solve is how to make our

00:10:35,040 --> 00:10:39,540
developers productive and the

00:10:37,620 --> 00:10:42,510
recognition in that space is that you

00:10:39,540 --> 00:10:45,260
can't do that just by picking one tool

00:10:42,510 --> 00:10:47,760
in each specialized niche and sort of

00:10:45,260 --> 00:10:50,130
wrapping them up in a ball of duct tape

00:10:47,760 --> 00:10:51,810
and then handing them to developers you

00:10:50,130 --> 00:10:54,410
really have to start thinking through

00:10:51,810 --> 00:10:58,740
the entire software delivery process

00:10:54,410 --> 00:11:01,140
with this or the past like fit but

00:10:58,740 --> 00:11:02,970
tailor to your own organization and your

00:11:01,140 --> 00:11:05,970
own tooling and your own services and

00:11:02,970 --> 00:11:08,100
your own applications and one of the

00:11:05,970 --> 00:11:11,190
corollaries of that in some sense is

00:11:08,100 --> 00:11:13,080
that it's not just about running the

00:11:11,190 --> 00:11:15,720
Rube Goldberg device that's the little

00:11:13,080 --> 00:11:19,070
video on the right it's also about

00:11:15,720 --> 00:11:21,470
setting it up it's the one on the left

00:11:19,070 --> 00:11:23,899
where previously a lot of the focus was

00:11:21,470 --> 00:11:25,699
on like okay well you know people will

00:11:23,899 --> 00:11:28,370
follow whatever click-through 10,000,000

00:11:25,699 --> 00:11:30,410
UI is to set things up I think the focus

00:11:28,370 --> 00:11:32,149
is pretty clear now that what we're

00:11:30,410 --> 00:11:33,350
trying to solve for is everything from

00:11:32,149 --> 00:11:35,209
the moment that the development team

00:11:33,350 --> 00:11:36,680
gets started how do they set up their

00:11:35,209 --> 00:11:38,449
issue tracking how do they set up their

00:11:36,680 --> 00:11:41,420
repos how do they set up their projects

00:11:38,449 --> 00:11:44,480
how can I make that an easy experience

00:11:41,420 --> 00:11:45,740
and then of course how do i wire up all

00:11:44,480 --> 00:11:48,350
the things that the team will need to

00:11:45,740 --> 00:11:49,819
use hopefully under the covers so that

00:11:48,350 --> 00:11:53,360
the when they're they start actually

00:11:49,819 --> 00:11:55,190
doing work they have this you know chat

00:11:53,360 --> 00:11:57,319
ops and all that kind of good stuff just

00:11:55,190 --> 00:11:58,399
working for them and again going back to

00:11:57,319 --> 00:12:00,230
the diagram there's lots of components

00:11:58,399 --> 00:12:01,670
here there's like you know that we

00:12:00,230 --> 00:12:03,440
talked about CI we talked about artifact

00:12:01,670 --> 00:12:06,259
management secure software supply chain

00:12:03,440 --> 00:12:10,550
all the digital signing blah blah blah

00:12:06,259 --> 00:12:12,709
all that kind of stuff so a corollary to

00:12:10,550 --> 00:12:14,959
this I want to make it easy as a

00:12:12,709 --> 00:12:19,130
centralized team for my dev teams to set

00:12:14,959 --> 00:12:20,600
up this entire bag of tools I want to

00:12:19,130 --> 00:12:23,480
give them a pass like experience and I

00:12:20,600 --> 00:12:24,920
wanted to run smoothly but I don't want

00:12:23,480 --> 00:12:26,029
to have to assemble millions and

00:12:24,920 --> 00:12:28,430
millions of different things and have

00:12:26,029 --> 00:12:29,600
lots of toil my favourite example here

00:12:28,430 --> 00:12:30,050
of course we all know where this comes

00:12:29,600 --> 00:12:32,029
from

00:12:30,050 --> 00:12:34,100
I can almost furnish an entire house

00:12:32,029 --> 00:12:37,100
with one tool it's pretty nice that's a

00:12:34,100 --> 00:12:39,290
pretty sort of commodity way of thinking

00:12:37,100 --> 00:12:41,269
about this problem and I think what

00:12:39,290 --> 00:12:42,829
we're seeing in this particular space on

00:12:41,269 --> 00:12:45,079
the continuous delivery side is that

00:12:42,829 --> 00:12:48,079
that centralized team wants to create a

00:12:45,079 --> 00:12:50,089
nice simple experience but it also wants

00:12:48,079 --> 00:12:52,279
to reduce the amount of balls they have

00:12:50,089 --> 00:12:57,050
to juggle in order to make that work and

00:12:52,279 --> 00:12:59,600
so you know having a more standardized

00:12:57,050 --> 00:13:01,250
more centralized approach to the actual

00:12:59,600 --> 00:13:04,339
technology the components that are

00:13:01,250 --> 00:13:06,500
needed to build an app delivery stack or

00:13:04,339 --> 00:13:09,260
an app delivery suite I think is a clear

00:13:06,500 --> 00:13:11,269
trend in the market I think obviously no

00:13:09,260 --> 00:13:13,310
surprise kubernetes is emerging as the

00:13:11,269 --> 00:13:15,589
kind of de-facto this is going to be our

00:13:13,310 --> 00:13:17,569
DevOps control plane our monitoring

00:13:15,589 --> 00:13:19,040
should run in there our CI should run in

00:13:17,569 --> 00:13:20,630
there our CD should run in there our and

00:13:19,040 --> 00:13:23,480
so on and so forth

00:13:20,630 --> 00:13:25,009
that is it's still a long way to go in

00:13:23,480 --> 00:13:26,240
this market but I think that is kind of

00:13:25,009 --> 00:13:28,370
where we're heading right now

00:13:26,240 --> 00:13:30,199
and of course what's also critical is

00:13:28,370 --> 00:13:32,170
that the components that you end up

00:13:30,199 --> 00:13:34,900
using are portable and

00:13:32,170 --> 00:13:37,270
because everybody knows the multi-cloud

00:13:34,900 --> 00:13:39,190
story nobody wants to have massive

00:13:37,270 --> 00:13:41,380
lock-in in the sector and so on it's

00:13:39,190 --> 00:13:43,029
nice if you can reduce your toll by

00:13:41,380 --> 00:13:44,560
having hosted versions of these

00:13:43,029 --> 00:13:48,730
components as well that's of course a

00:13:44,560 --> 00:13:50,170
benefit but I guess the key point here

00:13:48,730 --> 00:13:51,970
is that as far as these underlying

00:13:50,170 --> 00:13:53,800
components of your systems are concerned

00:13:51,970 --> 00:13:55,360
you're not that interested in the whole

00:13:53,800 --> 00:13:56,680
shrink-wrapped end-to-end product

00:13:55,360 --> 00:13:58,540
experience you're interested in the

00:13:56,680 --> 00:14:00,279
api's and the ability to

00:13:58,540 --> 00:14:02,080
programmatically control them and so on

00:14:00,279 --> 00:14:04,120
but I think what is pretty clear if you

00:14:02,080 --> 00:14:05,950
look at whether it's the the door

00:14:04,120 --> 00:14:07,779
reports the state of DevOps reports or

00:14:05,950 --> 00:14:09,220
these kind of things or if you look at

00:14:07,779 --> 00:14:11,730
some examples from a lot of the

00:14:09,220 --> 00:14:15,160
companies here if you truly want to go

00:14:11,730 --> 00:14:17,500
to this sort of extremes of productivity

00:14:15,160 --> 00:14:19,300
and and security and all these kind of

00:14:17,500 --> 00:14:23,410
things if you want to do the DevOps

00:14:19,300 --> 00:14:26,140
elite thing then you have to have some

00:14:23,410 --> 00:14:28,330
amount of your own kind of I don't know

00:14:26,140 --> 00:14:32,350
your your own what am I looking for the

00:14:28,330 --> 00:14:33,760
word your own opinions and your own

00:14:32,350 --> 00:14:35,140
tailored approach and having a

00:14:33,760 --> 00:14:38,860
shrink-wrap product isn't really going

00:14:35,140 --> 00:14:40,330
to solve this for you so we talked about

00:14:38,860 --> 00:14:42,430
two things we talked about like the

00:14:40,330 --> 00:14:44,589
end-to-end app delivery experience we

00:14:42,430 --> 00:14:47,160
talked about commodity components as a

00:14:44,589 --> 00:14:49,360
runtime and the third one is declared

00:14:47,160 --> 00:14:51,279
what do I mean by that against nothing

00:14:49,360 --> 00:14:53,080
new the word today means all kinds of

00:14:51,279 --> 00:14:55,180
things it sort of has been conflated

00:14:53,080 --> 00:14:56,860
with configures code then the word

00:14:55,180 --> 00:14:59,250
get-ups comes in the mix which also

00:14:56,860 --> 00:15:02,290
means everything to everyone just a

00:14:59,250 --> 00:15:03,760
unfortunate tendency of every successful

00:15:02,290 --> 00:15:06,370
phrase I think the thing about

00:15:03,760 --> 00:15:08,770
declarative and for me yes as a sort of

00:15:06,370 --> 00:15:10,690
API style we can wax lyrically about how

00:15:08,770 --> 00:15:13,540
important it is and how useful it is but

00:15:10,690 --> 00:15:16,690
I think that the really interesting part

00:15:13,540 --> 00:15:19,600
of declarative and and the real benefit

00:15:16,690 --> 00:15:21,459
to it is that it allows us to give

00:15:19,600 --> 00:15:23,410
developers that progressive degree of

00:15:21,459 --> 00:15:25,510
freedom that I was talking about what do

00:15:23,410 --> 00:15:28,870
I mean by that what I mean by that is I

00:15:25,510 --> 00:15:32,020
can you know if I want to impose a

00:15:28,870 --> 00:15:34,510
policy say that I don't want to drive on

00:15:32,020 --> 00:15:36,070
highways and but I don't want the

00:15:34,510 --> 00:15:38,410
developers to be able to choose that I

00:15:36,070 --> 00:15:41,740
can give them this kind of thing and I

00:15:38,410 --> 00:15:43,809
can centrally lock down the don't use

00:15:41,740 --> 00:15:46,059
highways button

00:15:43,809 --> 00:15:48,759
and then I can do the route planning I

00:15:46,059 --> 00:15:50,319
can do the the the yeah Mille generation

00:15:48,759 --> 00:15:53,319
would be the more technical example but

00:15:50,319 --> 00:15:55,509
I can do the route planning without them

00:15:53,319 --> 00:15:56,829
having to be able to influence that and

00:15:55,509 --> 00:15:59,829
I can do that for many more of these

00:15:56,829 --> 00:16:01,329
attributes compare this approach to to

00:15:59,829 --> 00:16:03,279
getting to your location with this

00:16:01,329 --> 00:16:05,980
approach which is a rally drivers

00:16:03,279 --> 00:16:08,889
co-drivers note sheet right it means go

00:16:05,980 --> 00:16:11,049
left five degrees whatever fast slow try

00:16:08,889 --> 00:16:13,139
and impose a policy when your

00:16:11,049 --> 00:16:15,489
instructions are at this kind of level

00:16:13,139 --> 00:16:17,829
can you look at this thing

00:16:15,489 --> 00:16:19,839
a jenkins file for example this is the

00:16:17,829 --> 00:16:21,489
equivalent and can you look at this

00:16:19,839 --> 00:16:24,129
thing and impose a high level policy

00:16:21,489 --> 00:16:26,079
such as don't go on highways well it's

00:16:24,129 --> 00:16:29,499
possible but it's really hard because

00:16:26,079 --> 00:16:32,410
you have to basically parse code and try

00:16:29,499 --> 00:16:34,839
to inject policy at that level and that

00:16:32,410 --> 00:16:36,999
makes it very very difficult to make any

00:16:34,839 --> 00:16:39,189
kind of meaningful high-level statements

00:16:36,999 --> 00:16:41,319
so when we're working in imperative

00:16:39,189 --> 00:16:42,790
deployment modes that's where I think a

00:16:41,319 --> 00:16:44,859
lot of this all-or-nothing comes from

00:16:42,790 --> 00:16:46,600
once you get the ability to basically

00:16:44,859 --> 00:16:49,449
put arbitrary commands in the sequence

00:16:46,600 --> 00:16:51,459
it's very difficult to reason abstractly

00:16:49,449 --> 00:16:54,609
about what these arbitrary commands mean

00:16:51,459 --> 00:16:57,789
and giving developers degrees of freedom

00:16:54,609 --> 00:17:00,809
is exactly related to the ability of the

00:16:57,789 --> 00:17:04,149
central team to reason and impose

00:17:00,809 --> 00:17:07,169
requirements or constraints about what

00:17:04,149 --> 00:17:10,480
you can do so again if you have a

00:17:07,169 --> 00:17:12,339
declarative delivery file say which says

00:17:10,480 --> 00:17:13,990
no these are the constraints so these

00:17:12,339 --> 00:17:15,730
are the conditions under which I want to

00:17:13,990 --> 00:17:18,279
deploy that's a much higher level

00:17:15,730 --> 00:17:20,319
statement than looking at your CI CD

00:17:18,279 --> 00:17:22,899
pipeline tooling and looking at the

00:17:20,319 --> 00:17:24,809
individual configuration steps and that

00:17:22,899 --> 00:17:27,669
I think is one of the key reasons why

00:17:24,809 --> 00:17:30,429
declarative is going to be very

00:17:27,669 --> 00:17:32,919
important and powerful I mean to be

00:17:30,429 --> 00:17:34,779
clear ya mole template generation is not

00:17:32,919 --> 00:17:37,149
the ideal user experience in order to

00:17:34,779 --> 00:17:38,679
make this work but the general approach

00:17:37,149 --> 00:17:41,440
that we should be thinking in the water

00:17:38,679 --> 00:17:43,090
and not in the how gives us a very

00:17:41,440 --> 00:17:47,350
powerful mechanism of these low-level

00:17:43,090 --> 00:17:48,940
degrees of control okay so three themes

00:17:47,350 --> 00:17:50,529
that I think we were just talking about

00:17:48,940 --> 00:17:52,330
we were talking about looking at you

00:17:50,529 --> 00:17:54,100
know app delivery is the big picture

00:17:52,330 --> 00:17:56,900
looking at customized or rather

00:17:54,100 --> 00:18:01,430
commodity components and

00:17:56,900 --> 00:18:03,950
yet looking at yes the declarative

00:18:01,430 --> 00:18:06,190
approach to this entire thing where the

00:18:03,950 --> 00:18:08,210
spinnaker fitted here fit in here so

00:18:06,190 --> 00:18:09,559
first of all if we look at the first one

00:18:08,210 --> 00:18:12,140
solving fat delivery I don't think

00:18:09,559 --> 00:18:14,930
spinnaker legitimately can or should

00:18:12,140 --> 00:18:16,430
expand its scope to try to become a geek

00:18:14,930 --> 00:18:19,040
lab like solution I don't think that's

00:18:16,430 --> 00:18:21,320
necessary but what I think we see if we

00:18:19,040 --> 00:18:23,750
look at how how in fact some of the the

00:18:21,320 --> 00:18:26,630
leading spinnaker users and how many

00:18:23,750 --> 00:18:28,309
companies think about it and you know

00:18:26,630 --> 00:18:30,320
you are looking at it as part of your

00:18:28,309 --> 00:18:32,300
platform and in order to make it part of

00:18:30,320 --> 00:18:34,400
your platform has to have very good

00:18:32,300 --> 00:18:38,290
support for programmatic management API

00:18:34,400 --> 00:18:41,270
interactions you know as code ability

00:18:38,290 --> 00:18:43,790
you know we can do more in the area and

00:18:41,270 --> 00:18:45,050
to be clear I'm not like prescribing a

00:18:43,790 --> 00:18:46,520
road map here some of these are my

00:18:45,050 --> 00:18:49,429
thoughts some of these things already in

00:18:46,520 --> 00:18:50,870
the road map as on the side it was

00:18:49,429 --> 00:18:53,690
published and I'll call it out again

00:18:50,870 --> 00:18:55,400
it's on the spinnaker io page there's a

00:18:53,690 --> 00:18:56,990
road map update for the next year so

00:18:55,400 --> 00:18:59,420
please feel free to have a look there

00:18:56,990 --> 00:19:00,980
tomorrow there's a ask me anything panel

00:18:59,420 --> 00:19:02,590
on that subject as well so we're very

00:19:00,980 --> 00:19:05,270
keen to hear your thoughts about this

00:19:02,590 --> 00:19:06,380
but I think if we think about this you

00:19:05,270 --> 00:19:08,540
know app delivery is an end-to-end

00:19:06,380 --> 00:19:11,059
process that starts with issues or bugs

00:19:08,540 --> 00:19:14,330
and ends with those bugs hopefully being

00:19:11,059 --> 00:19:15,740
resolved spinnaker already has some

00:19:14,330 --> 00:19:17,900
capabilities to do things like

00:19:15,740 --> 00:19:19,760
understanding test failures and so on

00:19:17,900 --> 00:19:21,200
and so forth but we can do more to

00:19:19,760 --> 00:19:22,880
integrate understanding of the

00:19:21,200 --> 00:19:25,340
end-to-end metadata flowing through the

00:19:22,880 --> 00:19:27,050
system and then and this is an entire

00:19:25,340 --> 00:19:29,960
question mark for me just to sort of

00:19:27,050 --> 00:19:31,490
random off the top of my head's idea if

00:19:29,960 --> 00:19:32,929
you're gonna use spinnaker as a

00:19:31,490 --> 00:19:34,460
component and it brought a platform

00:19:32,929 --> 00:19:36,260
maybe you don't want to consume the UI

00:19:34,460 --> 00:19:38,150
is one entire thing but maybe you want

00:19:36,260 --> 00:19:39,740
to consume bits of it so that might be

00:19:38,150 --> 00:19:41,630
an interesting and I know there's work

00:19:39,740 --> 00:19:44,240
obviously going on around plug ability

00:19:41,630 --> 00:19:47,240
in the UI as well might be an

00:19:44,240 --> 00:19:49,700
interesting angle here we've talked

00:19:47,240 --> 00:19:51,980
about commodity components well I think

00:19:49,700 --> 00:19:53,660
one obvious angle that is already being

00:19:51,980 --> 00:19:56,510
looked at and is already started with

00:19:53,660 --> 00:19:58,190
things like the the custom stage based

00:19:56,510 --> 00:20:00,470
on the run job stage and kubernetes and

00:19:58,190 --> 00:20:02,150
so on is to have more plug ability

00:20:00,470 --> 00:20:03,350
through containers there's a lot of work

00:20:02,150 --> 00:20:05,179
in the community right now some

00:20:03,350 --> 00:20:06,920
interesting RFC's around plug ability in

00:20:05,179 --> 00:20:08,840
general I think when we're seeing

00:20:06,920 --> 00:20:10,730
especially given that kubernetes is

00:20:08,840 --> 00:20:13,430
becoming the de facto runtime of

00:20:10,730 --> 00:20:15,530
for DevOps tools is the plug ability at

00:20:13,430 --> 00:20:19,640
the container level is an obvious thing

00:20:15,530 --> 00:20:21,800
that we should be moving towards there's

00:20:19,640 --> 00:20:23,420
the CDF and we again that's if you look

00:20:21,800 --> 00:20:25,490
at the interest in in projects like

00:20:23,420 --> 00:20:27,710
Tecton which are very unashamedly not

00:20:25,490 --> 00:20:30,470
product focused very much focused around

00:20:27,710 --> 00:20:33,340
low level components that you can use in

00:20:30,470 --> 00:20:35,510
other products that's a very interesting

00:20:33,340 --> 00:20:37,280
kind of direction we're seeing

00:20:35,510 --> 00:20:39,020
interesting in the community and the

00:20:37,280 --> 00:20:40,700
irony is that spinnaker in some sense

00:20:39,020 --> 00:20:43,340
was way ahead of the game as well in

00:20:40,700 --> 00:20:46,370
this case spinnaker is really a bag of

00:20:43,340 --> 00:20:48,110
components in some ways to you know

00:20:46,370 --> 00:20:49,880
compared to other tools in the space

00:20:48,110 --> 00:20:52,150
that we're very strongly monolithic and

00:20:49,880 --> 00:20:54,860
kind of everything is in one process

00:20:52,150 --> 00:20:56,770
spinnaker has been from very early on a

00:20:54,860 --> 00:20:59,330
collection of components that are pretty

00:20:56,770 --> 00:21:01,580
specialized in their own tasks and if

00:20:59,330 --> 00:21:02,990
you ask sophisticated users of

00:21:01,580 --> 00:21:04,850
Spinnaker's that's kind of also often

00:21:02,990 --> 00:21:06,530
how they think of spinnaker as a set of

00:21:04,850 --> 00:21:09,260
components that they can use in their

00:21:06,530 --> 00:21:10,970
broader platforms and so I think as the

00:21:09,260 --> 00:21:12,470
industry interest in this area comes up

00:21:10,970 --> 00:21:15,340
there's definite work we can do in the

00:21:12,470 --> 00:21:18,800
spinnaker community to explore potential

00:21:15,340 --> 00:21:20,570
combinations here you know david classic

00:21:18,800 --> 00:21:22,190
example you could run a Tecton task in

00:21:20,570 --> 00:21:23,660
the spinnaker pipeline I don't have the

00:21:22,190 --> 00:21:25,460
answers for what the right approach here

00:21:23,660 --> 00:21:26,900
is but there's definitely a way we can

00:21:25,460 --> 00:21:27,380
we can think about this and it goes the

00:21:26,900 --> 00:21:29,360
other way too

00:21:27,380 --> 00:21:31,670
and we just finished a workshop on

00:21:29,360 --> 00:21:34,160
canary analysis Kayenta is one of those

00:21:31,670 --> 00:21:36,140
classic examples of a component that can

00:21:34,160 --> 00:21:38,330
and in fact already is there's a talk

00:21:36,140 --> 00:21:40,880
tomorrow about that from Nike are used

00:21:38,330 --> 00:21:42,650
outside of the context of spinnaker so I

00:21:40,880 --> 00:21:45,500
think that is another great example of a

00:21:42,650 --> 00:21:46,880
relatively standalone potentially

00:21:45,500 --> 00:21:49,250
component that can be used in broader

00:21:46,880 --> 00:21:50,750
contacts and that's basically what I'm

00:21:49,250 --> 00:21:53,510
saying with this third bullet point here

00:21:50,750 --> 00:21:55,130
just think about spinner craft not just

00:21:53,510 --> 00:21:57,350
as this shrink-wrap thing that you can

00:21:55,130 --> 00:21:59,510
install and then it's already a shiny UI

00:21:57,350 --> 00:22:01,880
and you can get started from there but

00:21:59,510 --> 00:22:03,560
actually as a set of components and I

00:22:01,880 --> 00:22:05,480
think you know we can do more from the

00:22:03,560 --> 00:22:06,650
community side to actually explain how

00:22:05,480 --> 00:22:08,690
these components could be used

00:22:06,650 --> 00:22:10,550
individually give them a little bit more

00:22:08,690 --> 00:22:13,070
of their own individual identity if you

00:22:10,550 --> 00:22:15,200
like and in some cases also make it

00:22:13,070 --> 00:22:19,730
easier to run and use them in their own

00:22:15,200 --> 00:22:21,260
right and then of course coming to the

00:22:19,730 --> 00:22:24,290
third point about declarative

00:22:21,260 --> 00:22:24,659
abstractions I think one level of

00:22:24,290 --> 00:22:26,279
abstraction

00:22:24,659 --> 00:22:28,950
and this is kind of us challenging

00:22:26,279 --> 00:22:30,929
ourselves to have a declarative or a

00:22:28,950 --> 00:22:33,539
more declarative approach especially for

00:22:30,929 --> 00:22:35,279
kubernetes deployments how can we

00:22:33,539 --> 00:22:37,019
provide an out-of-the-box extraction

00:22:35,279 --> 00:22:37,950
where you just want to say I want this

00:22:37,019 --> 00:22:40,080
to run over there

00:22:37,950 --> 00:22:43,289
give me some strategy to apply we will

00:22:40,080 --> 00:22:45,119
make it happen I think it's legitimate

00:22:43,289 --> 00:22:47,129
to say that kubernetes given them still

00:22:45,119 --> 00:22:48,809
arose of the early days people want

00:22:47,129 --> 00:22:51,149
quite a low level of fine-grained

00:22:48,809 --> 00:22:52,619
control but we're getting to the point

00:22:51,149 --> 00:22:53,519
where people are starting to adopt it

00:22:52,619 --> 00:22:55,409
and they don't want to have to think

00:22:53,519 --> 00:22:58,289
about all the gory details or the gory

00:22:55,409 --> 00:23:00,470
amyl and we can do something here to

00:22:58,289 --> 00:23:03,509
provide a higher level abstraction

00:23:00,470 --> 00:23:06,090
obviously in some ways pipeline

00:23:03,509 --> 00:23:07,919
templates given the way that they allow

00:23:06,090 --> 00:23:10,649
for multiple inheritance and things like

00:23:07,919 --> 00:23:12,720
that and the way you can express more

00:23:10,649 --> 00:23:14,249
declarative approaches to your pipelines

00:23:12,720 --> 00:23:15,960
I wouldn't say fully declarative a

00:23:14,249 --> 00:23:18,989
pipeline inherently is still a

00:23:15,960 --> 00:23:20,609
relatively imperative construct but I

00:23:18,989 --> 00:23:23,009
think some of the work going on in there

00:23:20,609 --> 00:23:25,549
supports the idea of having fine-grained

00:23:23,009 --> 00:23:27,840
control which I think ultimately is what

00:23:25,549 --> 00:23:29,249
between rather the centralized team and

00:23:27,840 --> 00:23:31,349
the developer teams I think that's

00:23:29,249 --> 00:23:33,330
largely what declarative is a lot of a

00:23:31,349 --> 00:23:35,340
lot of the benefit there and then of

00:23:33,330 --> 00:23:37,200
course manage delivery those of you who

00:23:35,340 --> 00:23:38,549
came to the talk earlier today you know

00:23:37,200 --> 00:23:41,429
an effort at Netflix that I think is

00:23:38,549 --> 00:23:45,989
very much in line with these kind of

00:23:41,429 --> 00:23:48,690
ideas and thoughts okay so moving

00:23:45,989 --> 00:23:50,190
forward wrap up with this one I think is

00:23:48,690 --> 00:23:51,989
an industry where you know we've been

00:23:50,190 --> 00:23:56,129
struggling kind of with a standardized

00:23:51,989 --> 00:23:57,479
Rube Goldberg approach as the pattern

00:23:56,129 --> 00:23:59,940
that we've been living with for a while

00:23:57,479 --> 00:24:01,679
but we are definitely starting to move

00:23:59,940 --> 00:24:05,099
or to move past that to leave that

00:24:01,679 --> 00:24:07,649
behind we're thinking about you know app

00:24:05,099 --> 00:24:11,700
delivery platforms is a broader problem

00:24:07,649 --> 00:24:13,950
space which you know has a the job of it

00:24:11,700 --> 00:24:16,529
is to create a smooth developer

00:24:13,950 --> 00:24:18,479
experience all the way from setup to

00:24:16,529 --> 00:24:19,729
deployment and monitoring and runtime

00:24:18,479 --> 00:24:22,919
troubleshooting

00:24:19,729 --> 00:24:24,749
using commodity components with

00:24:22,919 --> 00:24:26,729
declarative abstractions and very often

00:24:24,749 --> 00:24:28,259
brokered by platform teams or

00:24:26,729 --> 00:24:30,389
centralized teams or develops teams

00:24:28,259 --> 00:24:32,700
whose job it is to create the

00:24:30,389 --> 00:24:35,549
appropriate abstractions for their own

00:24:32,700 --> 00:24:36,899
organizations and I think for me the key

00:24:35,549 --> 00:24:38,950
the interesting point is of course

00:24:36,899 --> 00:24:41,080
there's lots of work going on in the

00:24:38,950 --> 00:24:44,259
a spinnaker community that ties into all

00:24:41,080 --> 00:24:47,049
these particular trends and of course

00:24:44,259 --> 00:24:49,029
it's a community there's way more work

00:24:47,049 --> 00:24:50,739
on the plate and in the ID or sphere

00:24:49,029 --> 00:24:54,009
than we could possibly do the main

00:24:50,739 --> 00:24:56,230
contributors so we're here to welcome

00:24:54,009 --> 00:24:57,850
any new contributors with with as open

00:24:56,230 --> 00:25:00,009
arms as we possibly can and if you have

00:24:57,850 --> 00:25:02,259
any questions about how you can do that

00:25:00,009 --> 00:25:04,119
then of course please come to see me or

00:25:02,259 --> 00:25:05,710
anyone from the spinnaker steering

00:25:04,119 --> 00:25:09,789
committee of a TOC or any one of the

00:25:05,710 --> 00:25:12,220
contributors here today so third time

00:25:09,789 --> 00:25:15,489
around can we get there I certainly hope

00:25:12,220 --> 00:25:16,150
so I hope you will help us do so thank

00:25:15,489 --> 00:25:21,170
you very much

00:25:16,150 --> 00:25:24,529
[Applause]

00:25:21,170 --> 00:25:24,529
[Music]

00:25:25,720 --> 00:25:31,920

YouTube URL: https://www.youtube.com/watch?v=Y2ZDA7TfmyU


