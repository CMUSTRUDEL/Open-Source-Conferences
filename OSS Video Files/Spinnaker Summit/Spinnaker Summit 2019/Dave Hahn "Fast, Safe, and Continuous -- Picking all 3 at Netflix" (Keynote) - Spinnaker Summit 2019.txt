Title: Dave Hahn "Fast, Safe, and Continuous -- Picking all 3 at Netflix" (Keynote) - Spinnaker Summit 2019
Publication date: 2019-12-03
Playlist: Spinnaker Summit 2019
Description: 
	The third annual Spinnaker Summit (Diamond Sponsors: Netflix, Google and Armory) was held at the Hard Rock Hotel in San Diego, CA from November 15-17, 2019 and welcomed over 500 members of the rapidly growing Spinnaker open source community.
Captions: 
	00:00:06,330 --> 00:00:10,980
[Laughter]

00:00:16,039 --> 00:00:23,849
thank you thank you I love it when

00:00:22,500 --> 00:00:25,800
people give a better introduction that I

00:00:23,849 --> 00:00:27,750
could do myself so this is the

00:00:25,800 --> 00:00:28,890
introductory slide that was the

00:00:27,750 --> 00:00:31,830
introduction we're gonna go ahead and

00:00:28,890 --> 00:00:34,500
move on there we go

00:00:31,830 --> 00:00:36,750
so the value triangle has something

00:00:34,500 --> 00:00:38,879
that's been used as a thinking model for

00:00:36,750 --> 00:00:41,460
quite a while and the idea of the value

00:00:38,879 --> 00:00:43,530
triangle is it's to teach you balance in

00:00:41,460 --> 00:00:46,710
choices and this is one of the classic

00:00:43,530 --> 00:00:48,720
models the good fast cheap triangle and

00:00:46,710 --> 00:00:51,150
the model invites you to feel free to

00:00:48,720 --> 00:00:52,619
pick any two you can pick something this

00:00:51,150 --> 00:00:55,290
good and cheap that will not be fast

00:00:52,619 --> 00:00:58,470
good and fast will not be cheap and fast

00:00:55,290 --> 00:01:00,150
and cheap will not be good similar

00:00:58,470 --> 00:01:01,920
models exist in what we do there's this

00:01:00,150 --> 00:01:03,479
cap theorem thing some of you may have

00:01:01,920 --> 00:01:05,790
heard of that says that any you know

00:01:03,479 --> 00:01:08,240
networked data storage kind of system

00:01:05,790 --> 00:01:11,369
you can pick any two of consistency

00:01:08,240 --> 00:01:13,140
availability or partition tolerance but

00:01:11,369 --> 00:01:14,909
again you get a pick any two right we

00:01:13,140 --> 00:01:16,890
have consistency and partition tolerance

00:01:14,909 --> 00:01:17,960
but your availability may suffer if you

00:01:16,890 --> 00:01:19,859
like availability and consistency

00:01:17,960 --> 00:01:23,189
partition tolerances are going to be a

00:01:19,859 --> 00:01:26,060
problem for you this is my own personal

00:01:23,189 --> 00:01:26,060
value triangle

00:01:26,439 --> 00:01:32,570
nice dinner extended family and

00:01:29,540 --> 00:01:35,210
political discussions and trust me you

00:01:32,570 --> 00:01:39,350
cannot pick all three there are times I

00:01:35,210 --> 00:01:40,520
do not want to pick two but what we're

00:01:39,350 --> 00:01:43,070
up against

00:01:40,520 --> 00:01:44,869
in building reliable and quickly moving

00:01:43,070 --> 00:01:47,299
systems is that we need to be able to

00:01:44,869 --> 00:01:49,399
pick fast we need to be able to pick

00:01:47,299 --> 00:01:51,770
safe and we need to be able to do this

00:01:49,399 --> 00:01:53,420
continuously so we have to break our

00:01:51,770 --> 00:01:56,000
model this is something where we have to

00:01:53,420 --> 00:01:58,039
be able to pick all three so what I want

00:01:56,000 --> 00:02:00,380
to explore with you is how we do that at

00:01:58,039 --> 00:02:01,970
Netflix because you see what we're

00:02:00,380 --> 00:02:04,729
asking for is that we need to have both

00:02:01,970 --> 00:02:07,569
a cake having and a cake eating kind of

00:02:04,729 --> 00:02:10,940
situation in order to meet our goals so

00:02:07,569 --> 00:02:14,090
this triangle represents those ideas go

00:02:10,940 --> 00:02:15,739
fast be safe and do it all the time it's

00:02:14,090 --> 00:02:18,170
kind of bumper-sticker level wisdom

00:02:15,739 --> 00:02:20,209
right now the world would be probably a

00:02:18,170 --> 00:02:21,799
much better place if we could achieve a

00:02:20,209 --> 00:02:23,209
lot of the wisdom that's written on the

00:02:21,799 --> 00:02:25,760
tail end of cars so that's we're gonna

00:02:23,209 --> 00:02:27,530
try to do here today so how we talk

00:02:25,760 --> 00:02:30,200
about how Netflix picks between these

00:02:27,530 --> 00:02:33,110
things now what I have to do in order

00:02:30,200 --> 00:02:34,549
for you to understand my choices is help

00:02:33,110 --> 00:02:37,459
you understand my goals or what's

00:02:34,549 --> 00:02:40,040
important to Netflix so Netflix has a

00:02:37,459 --> 00:02:42,500
singular goal we call this winning

00:02:40,040 --> 00:02:44,239
moments of truth now that moment of

00:02:42,500 --> 00:02:46,820
truth is when you or your family sit

00:02:44,239 --> 00:02:48,910
down on your lovely green couch and you

00:02:46,820 --> 00:02:51,410
have some entertainment time available

00:02:48,910 --> 00:02:54,320
what do you pick when you have that time

00:02:51,410 --> 00:02:56,690
well there's Netflix there's books

00:02:54,320 --> 00:02:59,709
there's video games right I hear some

00:02:56,690 --> 00:03:02,870
people go outside on purpose

00:02:59,709 --> 00:03:05,120
but you have that choice to make and

00:03:02,870 --> 00:03:07,880
when you pick Netflix we consider it

00:03:05,120 --> 00:03:09,530
winning that moment of truth so this is

00:03:07,880 --> 00:03:11,660
our singular goal this is what we're

00:03:09,530 --> 00:03:13,820
after so the decisions that we make

00:03:11,660 --> 00:03:15,920
whether they're technology decisions

00:03:13,820 --> 00:03:18,290
hiring decisions software decisions

00:03:15,920 --> 00:03:21,170
development decisions content decisions

00:03:18,290 --> 00:03:23,560
are all in service of this one singular

00:03:21,170 --> 00:03:25,430
idea of winning those moments of truth

00:03:23,560 --> 00:03:26,690
something else to know about those

00:03:25,430 --> 00:03:29,480
moments of truth is that they're

00:03:26,690 --> 00:03:31,040
fleeting they come and go quickly so

00:03:29,480 --> 00:03:34,010
that also has to be a factor in the

00:03:31,040 --> 00:03:35,840
decisions that we're making so some of

00:03:34,010 --> 00:03:37,640
the things that we have to have in order

00:03:35,840 --> 00:03:39,200
to win those moments of truth

00:03:37,640 --> 00:03:41,210
I have to have compelling and

00:03:39,200 --> 00:03:44,090
interesting content that is compelling

00:03:41,210 --> 00:03:47,570
and interesting to at least hundreds of

00:03:44,090 --> 00:03:49,910
millions of people that's not a short

00:03:47,570 --> 00:03:53,750
order how many of you ever have taken a

00:03:49,910 --> 00:03:56,420
family out for dinner thank you for

00:03:53,750 --> 00:03:58,220
participating I appreciate I have a

00:03:56,420 --> 00:04:00,800
family of six at home and I've gone

00:03:58,220 --> 00:04:03,190
through this exercise myself we often

00:04:00,800 --> 00:04:07,460
spend more time discussing controlling

00:04:03,190 --> 00:04:08,740
negotiating figuring arguing than we do

00:04:07,460 --> 00:04:11,330
actually enjoying a nice dinner

00:04:08,740 --> 00:04:13,610
interestingly enough content is the same

00:04:11,330 --> 00:04:15,680
way many different people have many

00:04:13,610 --> 00:04:17,299
different desires and choices in that

00:04:15,680 --> 00:04:19,480
moment that I want to win so I have to

00:04:17,299 --> 00:04:21,859
have a breadth of content available I

00:04:19,480 --> 00:04:23,650
also need to make sure that my service

00:04:21,859 --> 00:04:26,480
is available on a myriad of devices

00:04:23,650 --> 00:04:29,330
Netflix currently is available on a few

00:04:26,480 --> 00:04:31,040
thousand different models of devices why

00:04:29,330 --> 00:04:33,140
is that important well when that

00:04:31,040 --> 00:04:35,570
fleeting moment becomes available I

00:04:33,140 --> 00:04:37,250
don't want to lose it because you happen

00:04:35,570 --> 00:04:38,750
to have a phone in your hand instead of

00:04:37,250 --> 00:04:40,640
sitting in front of your television or

00:04:38,750 --> 00:04:43,460
you have a game controller instead of a

00:04:40,640 --> 00:04:44,660
tablet so we need to have Netflix

00:04:43,460 --> 00:04:48,380
available on all of these different

00:04:44,660 --> 00:04:51,980
devices entertainment itself is also

00:04:48,380 --> 00:04:54,830
highly variable there's a local element

00:04:51,980 --> 00:04:58,190
to entertainment now you can take some

00:04:54,830 --> 00:05:00,380
of these global blockbusters and do some

00:04:58,190 --> 00:05:02,360
subs and dubs for them and send them out

00:05:00,380 --> 00:05:06,050
and you'll win some of those moments of

00:05:02,360 --> 00:05:08,000
truth but because storytelling is so

00:05:06,050 --> 00:05:09,950
local it's such a part of where we are

00:05:08,000 --> 00:05:12,200
that we need to make sure we're also

00:05:09,950 --> 00:05:14,240
producing content that's made locally

00:05:12,200 --> 00:05:16,160
and written locally and produced locally

00:05:14,240 --> 00:05:18,610
so that we win more of those moments of

00:05:16,160 --> 00:05:20,960
truth for more of our customer base

00:05:18,610 --> 00:05:23,450
there's also this idea maybe you've

00:05:20,960 --> 00:05:24,950
heard of systems availability if my

00:05:23,450 --> 00:05:28,250
systems aren't up people don't get to

00:05:24,950 --> 00:05:31,669
press play either those are some of the

00:05:28,250 --> 00:05:33,470
evident kinds of things that we have to

00:05:31,669 --> 00:05:35,780
have available to us right anyone who's

00:05:33,470 --> 00:05:37,100
not a part of Netflix are not a part of

00:05:35,780 --> 00:05:39,050
the entertainment industry could

00:05:37,100 --> 00:05:42,410
understand those kinds of things and why

00:05:39,050 --> 00:05:44,419
we need to have them available but

00:05:42,410 --> 00:05:47,000
behind the scenes is where a lot of the

00:05:44,419 --> 00:05:49,360
difficult decisions are made making

00:05:47,000 --> 00:05:51,580
things simple and easy is often hard

00:05:49,360 --> 00:05:53,289
and much like the iceberg model that

00:05:51,580 --> 00:05:55,930
evidence stuff is what's above the

00:05:53,289 --> 00:05:57,490
waterline are hard decisions the things

00:05:55,930 --> 00:05:59,379
we have to do the work we have to

00:05:57,490 --> 00:06:01,000
develop the things that exist so our

00:05:59,379 --> 00:06:06,250
customers don't notice that's what

00:06:01,000 --> 00:06:07,719
happens below the waterline so if we

00:06:06,250 --> 00:06:09,759
think about these being difficult

00:06:07,719 --> 00:06:12,129
choices that we need to make sure we

00:06:09,759 --> 00:06:14,050
hide from our customers our value

00:06:12,129 --> 00:06:16,120
triangle now takes on a different layer

00:06:14,050 --> 00:06:20,110
of complexity so I'll start diving into

00:06:16,120 --> 00:06:22,240
that if we look at fast fast is an

00:06:20,110 --> 00:06:25,389
important component for Netflix and we

00:06:22,240 --> 00:06:27,219
prize that velocity of innovation we

00:06:25,389 --> 00:06:29,620
have lots of things going on lots of

00:06:27,219 --> 00:06:31,539
changes that we need to make if we go

00:06:29,620 --> 00:06:33,370
back to that content idea Netflix has

00:06:31,539 --> 00:06:36,610
released thousands of pieces of content

00:06:33,370 --> 00:06:38,529
and last year alone now some of you

00:06:36,610 --> 00:06:41,020
might be thinking Dave how hard could it

00:06:38,529 --> 00:06:43,029
be you have the content we've heard

00:06:41,020 --> 00:06:44,590
people talk about encoding video that's

00:06:43,029 --> 00:06:47,259
a bit of a solved problem and there's

00:06:44,590 --> 00:06:49,150
that CDN thing that you have you push

00:06:47,259 --> 00:06:51,159
them out there and now they're available

00:06:49,150 --> 00:06:53,050
to people in they can press play so

00:06:51,159 --> 00:06:56,259
what's the difficulty that sounds pretty

00:06:53,050 --> 00:06:58,180
simple and pretty fast what you need to

00:06:56,259 --> 00:07:00,430
understand is that ability to allow our

00:06:58,180 --> 00:07:02,500
customers to press play and stream those

00:07:00,430 --> 00:07:06,310
video bits to their eyeballs is the end

00:07:02,500 --> 00:07:07,599
of a very long pipeline that pipeline is

00:07:06,310 --> 00:07:10,419
where we need to make sure that we're

00:07:07,599 --> 00:07:12,789
moving quickly so that velocity of

00:07:10,419 --> 00:07:15,430
innovation is important so developer

00:07:12,789 --> 00:07:17,289
velocity is key in what we do we have a

00:07:15,430 --> 00:07:19,210
very fast-moving business the

00:07:17,289 --> 00:07:22,180
entertainment and media business itself

00:07:19,210 --> 00:07:24,219
moves very quickly all the time and from

00:07:22,180 --> 00:07:25,659
different directions so we have to

00:07:24,219 --> 00:07:27,279
ensure that the developers that we've

00:07:25,659 --> 00:07:29,560
entrusted with making these decisions

00:07:27,279 --> 00:07:33,039
and making this product are able to move

00:07:29,560 --> 00:07:34,719
quickly we also have some other

00:07:33,039 --> 00:07:37,270
challenges maybe that are on that line

00:07:34,719 --> 00:07:40,300
of evident or not evident our content is

00:07:37,270 --> 00:07:42,789
changing it used to be when Netflix

00:07:40,300 --> 00:07:45,789
streaming started we'd get the content

00:07:42,789 --> 00:07:48,610
we stream the content right well there's

00:07:45,789 --> 00:07:51,819
new things going on there was a an idea

00:07:48,610 --> 00:07:53,349
cut we call branching narratives started

00:07:51,819 --> 00:07:56,110
with some kids shows there's one called

00:07:53,349 --> 00:07:58,779
puss in books that allowed young viewers

00:07:56,110 --> 00:08:01,060
to participate by making decisions as

00:07:58,779 --> 00:08:03,070
the story went along black mare

00:08:01,060 --> 00:08:05,140
Bandersnatch was the same kind of thing

00:08:03,070 --> 00:08:07,870
for an older audience where you're able

00:08:05,140 --> 00:08:09,430
to make those kinds of decisions if

00:08:07,870 --> 00:08:11,170
you're a comedy fan there's Seth Meyers

00:08:09,430 --> 00:08:12,370
latest little bit on Netflix that

00:08:11,170 --> 00:08:13,990
actually has a little button in the

00:08:12,370 --> 00:08:15,250
corner that allows you to skip politics

00:08:13,990 --> 00:08:17,830
if you don't want to hear those parts of

00:08:15,250 --> 00:08:19,150
the bed right but now it's a little bit

00:08:17,830 --> 00:08:21,550
more than streaming it's much more

00:08:19,150 --> 00:08:23,680
interactive and that requires that my

00:08:21,550 --> 00:08:25,780
front-end teams my back-end teams my

00:08:23,680 --> 00:08:29,440
data teams everyone involved has to

00:08:25,780 --> 00:08:31,570
continue to move quickly so what does

00:08:29,440 --> 00:08:33,910
Netflix need in order to maintain that

00:08:31,570 --> 00:08:36,760
velocity of a varied set of engineer

00:08:33,910 --> 00:08:39,930
solving different problems we found an

00:08:36,760 --> 00:08:42,760
answer mechanical keyboards for everyone

00:08:39,930 --> 00:08:44,530
we've determined if developers are given

00:08:42,760 --> 00:08:46,420
up to seven different mechanical

00:08:44,530 --> 00:08:48,190
keyboards that they can use to solve any

00:08:46,420 --> 00:08:52,020
potential problem that comes in front of

00:08:48,190 --> 00:08:53,950
them developer velocity is ensured I

00:08:52,020 --> 00:08:55,780
made a little bit of a mechanical

00:08:53,950 --> 00:08:58,180
keyboard problem myself so this is even

00:08:55,780 --> 00:09:02,830
funnier to me and less funny to my wife

00:08:58,180 --> 00:09:04,900
out so one of those first things was

00:09:02,830 --> 00:09:06,490
this micro-services choice that idea is

00:09:04,900 --> 00:09:09,340
when you have a large engineering

00:09:06,490 --> 00:09:10,570
organization you want to separate what

00:09:09,340 --> 00:09:12,790
they're working on a little bit and

00:09:10,570 --> 00:09:15,310
microservices gives you some of that

00:09:12,790 --> 00:09:16,900
answer as you can see this is a map of

00:09:15,310 --> 00:09:19,090
some of the micro services that make up

00:09:16,900 --> 00:09:20,530
your Netflix experience I'll give those

00:09:19,090 --> 00:09:25,350
of you taking notes a minute to scribble

00:09:20,530 --> 00:09:25,350
this down that was funny

00:09:25,379 --> 00:09:29,800
so microservices they do certain things

00:09:28,240 --> 00:09:33,100
they're a component right but they

00:09:29,800 --> 00:09:35,800
aren't the entire answer so imagine for

00:09:33,100 --> 00:09:37,720
you know if you will for a moment that

00:09:35,800 --> 00:09:39,339
we have these hundreds of microservices

00:09:37,720 --> 00:09:40,810
but maybe there's one micro service

00:09:39,339 --> 00:09:42,610
there that does kind of some work of

00:09:40,810 --> 00:09:45,009
coordinating or communicating for other

00:09:42,610 --> 00:09:47,829
micro services or they have to call in

00:09:45,009 --> 00:09:51,550
to this service to to gather some data

00:09:47,829 --> 00:09:53,379
so this becomes a key micro service now

00:09:51,550 --> 00:09:55,029
imagine if you will that is also very

00:09:53,379 --> 00:09:56,319
important that this service operates for

00:09:55,029 --> 00:09:59,649
our customers to be able to do things

00:09:56,319 --> 00:10:01,990
like login enjoy the service make

00:09:59,649 --> 00:10:06,009
selections now also imagine if you will

00:10:01,990 --> 00:10:07,389
that it has a creative name like API at

00:10:06,009 --> 00:10:10,269
this point you can stop imagining that's

00:10:07,389 --> 00:10:13,660
absolutely what we have so what we had

00:10:10,269 --> 00:10:15,430
is we had an API team and that API team

00:10:13,660 --> 00:10:18,279
ran this very important service and

00:10:15,430 --> 00:10:21,069
they're very careful considered talented

00:10:18,279 --> 00:10:23,259
capable engineering team and they would

00:10:21,069 --> 00:10:25,300
deploy their service every two weeks and

00:10:23,259 --> 00:10:27,670
during that time they're testing code

00:10:25,300 --> 00:10:29,680
they're integrating with their with

00:10:27,670 --> 00:10:31,750
their partners and dependents working on

00:10:29,680 --> 00:10:34,120
things making sure that the tests are

00:10:31,750 --> 00:10:35,319
passing and agreements have been met and

00:10:34,120 --> 00:10:37,000
if there's any other things that need to

00:10:35,319 --> 00:10:40,509
be adjusted that that kind of work

00:10:37,000 --> 00:10:42,850
happens so there we're running a

00:10:40,509 --> 00:10:45,910
relatively safe operation right there

00:10:42,850 --> 00:10:47,139
were being very careful however there's

00:10:45,910 --> 00:10:49,209
an effect from this kind of safe

00:10:47,139 --> 00:10:51,699
operation you can consider ripple

00:10:49,209 --> 00:10:54,939
effects right there were a lot of teams

00:10:51,699 --> 00:10:56,529
running not as complex a system that

00:10:54,939 --> 00:10:58,809
we're dependent on that two-week

00:10:56,529 --> 00:11:02,949
schedule is set by this centralized API

00:10:58,809 --> 00:11:05,379
team so what happened those smaller

00:11:02,949 --> 00:11:07,480
teams ended up managing lots of multiple

00:11:05,379 --> 00:11:08,829
code sets right they had the the current

00:11:07,480 --> 00:11:10,329
version that's out there running now

00:11:08,829 --> 00:11:11,620
that we're doing hot fixes and patches

00:11:10,329 --> 00:11:12,970
against and then we have this new

00:11:11,620 --> 00:11:14,620
version here that's gonna be coming out

00:11:12,970 --> 00:11:17,110
as soon as this API team manages to

00:11:14,620 --> 00:11:19,569
deploy and then we have the effect of

00:11:17,110 --> 00:11:20,889
all this available free time so what are

00:11:19,569 --> 00:11:22,629
we doing we're building new features and

00:11:20,889 --> 00:11:24,250
they're off out here in the future right

00:11:22,629 --> 00:11:26,199
and now we have multiple change sets

00:11:24,250 --> 00:11:28,809
that work that they're trying to manage

00:11:26,199 --> 00:11:30,670
so it means some of that creative time

00:11:28,809 --> 00:11:33,670
some of that development time that we

00:11:30,670 --> 00:11:36,160
use to keep up with the velocity of our

00:11:33,670 --> 00:11:38,800
particular industry went into managing

00:11:36,160 --> 00:11:40,810
lots of change it also created a problem

00:11:38,800 --> 00:11:42,160
for the API team as well rights they

00:11:40,810 --> 00:11:44,110
have these different teams that they're

00:11:42,160 --> 00:11:45,430
coordinating with and they know that

00:11:44,110 --> 00:11:46,660
there's work going on there that they

00:11:45,430 --> 00:11:49,779
have to be careful of and they have to

00:11:46,660 --> 00:11:51,970
manage so while we had a micro services

00:11:49,779 --> 00:11:54,730
technology some ways in behavior we had

00:11:51,970 --> 00:11:56,680
a bit of a distributed monolith and my

00:11:54,730 --> 00:11:58,420
my pretty ripple picture really looks a

00:11:56,680 --> 00:12:00,700
bit more like this because as those

00:11:58,420 --> 00:12:02,560
people made changes to different parts

00:12:00,700 --> 00:12:04,870
of the system they created their own

00:12:02,560 --> 00:12:06,640
ripple effects and those ripple effects

00:12:04,870 --> 00:12:08,680
start crashing into each other and

00:12:06,640 --> 00:12:10,570
creating an entirely new set of problems

00:12:08,680 --> 00:12:12,579
now that needs to be managed and takes

00:12:10,570 --> 00:12:15,850
away from time and developing new

00:12:12,579 --> 00:12:17,800
features this is pretty costly right we

00:12:15,850 --> 00:12:19,750
had a really high coordination cost as

00:12:17,800 --> 00:12:21,850
plans were on hold and schedules were

00:12:19,750 --> 00:12:23,980
negotiated and things had to work

00:12:21,850 --> 00:12:26,260
together and heaven forbid something

00:12:23,980 --> 00:12:27,940
happen and we couldn't keep to that

00:12:26,260 --> 00:12:30,880
schedule or something broke and we had

00:12:27,940 --> 00:12:32,980
to move backwards that reduces a lot of

00:12:30,880 --> 00:12:34,600
flexibility for these teams that are

00:12:32,980 --> 00:12:37,540
charged with keeping up with a quickly

00:12:34,600 --> 00:12:39,399
moving environment those coordination

00:12:37,540 --> 00:12:41,940
costless coordinated changes those

00:12:39,399 --> 00:12:44,380
meetings resulted in a lot of slow down

00:12:41,940 --> 00:12:45,790
slow down for quickly moving industry

00:12:44,380 --> 00:12:47,440
isn't healthy it's not good it doesn't

00:12:45,790 --> 00:12:49,240
meet those goals of winning moments of

00:12:47,440 --> 00:12:53,520
truth if I can't get these new features

00:12:49,240 --> 00:12:56,290
out there and available so how does

00:12:53,520 --> 00:12:58,120
spinnaker enable fast for these kinds of

00:12:56,290 --> 00:12:59,829
teams well if you think about some of

00:12:58,120 --> 00:13:02,140
those basic tools that we're all

00:12:59,829 --> 00:13:04,870
familiar with whether it's the pipelines

00:13:02,140 --> 00:13:06,670
or the automated canary analysis right

00:13:04,870 --> 00:13:08,700
what did it do it allowed teams to move

00:13:06,670 --> 00:13:11,290
more quickly and with higher confidence

00:13:08,700 --> 00:13:13,300
so now if we go back to that imaginary

00:13:11,290 --> 00:13:15,520
real API team that was developing the

00:13:13,300 --> 00:13:16,990
software once they adopted the

00:13:15,520 --> 00:13:19,120
deployment technologies and

00:13:16,990 --> 00:13:21,279
methodologies they went from deploying

00:13:19,120 --> 00:13:25,270
once every two weeks to a nightly canary

00:13:21,279 --> 00:13:26,500
and a daily deploy of a major service so

00:13:25,270 --> 00:13:30,610
as to be doing the math at home that's

00:13:26,500 --> 00:13:32,800
approximately 14 times faster the team

00:13:30,610 --> 00:13:35,290
then also gained trust in Spinnaker's

00:13:32,800 --> 00:13:36,970
behaviors right we no longer had to have

00:13:35,290 --> 00:13:39,550
one of these grand ceremonies where we

00:13:36,970 --> 00:13:41,440
call everyone together and we disturbed

00:13:39,550 --> 00:13:42,790
their focus and everyone looks at their

00:13:41,440 --> 00:13:44,709
own little bit of the system and someone

00:13:42,790 --> 00:13:46,390
runs whatever magical bash script

00:13:44,709 --> 00:13:47,450
happens to deploy things everyone holds

00:13:46,390 --> 00:13:50,530
their breath and we hope nothing

00:13:47,450 --> 00:13:52,610
brakes right we didn't have that anymore

00:13:50,530 --> 00:13:54,170
also that route that released some of

00:13:52,610 --> 00:13:56,090
that back pressure right now I have

00:13:54,170 --> 00:13:57,950
multiple teams that are no longer gated

00:13:56,090 --> 00:14:01,640
by a two-week deploy they're moving more

00:13:57,950 --> 00:14:03,980
quickly they're deploying one every day

00:14:01,640 --> 00:14:05,240
two or three it's also gives us the

00:14:03,980 --> 00:14:07,310
added benefit that they're playing

00:14:05,240 --> 00:14:09,350
smaller code sets which means that when

00:14:07,310 --> 00:14:11,240
something doesn't go as expected they're

00:14:09,350 --> 00:14:13,210
able to more easily logic about the

00:14:11,240 --> 00:14:16,910
changes that they've made to the system

00:14:13,210 --> 00:14:21,140
so by adopting this everyone moved much

00:14:16,910 --> 00:14:22,850
much more quickly so now if we move on

00:14:21,140 --> 00:14:26,300
to the next point of our of our value

00:14:22,850 --> 00:14:29,210
triangle we have safe now reliability

00:14:26,300 --> 00:14:31,280
and availability are deep and complex

00:14:29,210 --> 00:14:32,930
topics and I want to take a moment to

00:14:31,280 --> 00:14:35,000
thank the conference organizers for

00:14:32,930 --> 00:14:36,740
giving me your next six hours so that we

00:14:35,000 --> 00:14:38,990
could dive deeply into these particular

00:14:36,740 --> 00:14:40,610
topics of course I'm kidding they only

00:14:38,990 --> 00:14:42,410
gave me four hours

00:14:40,610 --> 00:14:44,720
how does Netflix think about

00:14:42,410 --> 00:14:50,720
availability and reliability now that we

00:14:44,720 --> 00:14:52,580
have people moving very quickly so this

00:14:50,720 --> 00:14:54,590
is a reliability tactic never change

00:14:52,580 --> 00:14:57,560
anything right once we get the system up

00:14:54,590 --> 00:14:58,040
and working its stable now we just don't

00:14:57,560 --> 00:15:00,980
touch it

00:14:58,040 --> 00:15:03,290
right it's okay we got everything going

00:15:00,980 --> 00:15:04,310
our failures aren't being seen by any

00:15:03,290 --> 00:15:06,950
one customers are getting what they

00:15:04,310 --> 00:15:08,330
expect nobody touch anything right it's

00:15:06,950 --> 00:15:09,830
not possible of course because any kind

00:15:08,330 --> 00:15:11,960
of running system experiences some

00:15:09,830 --> 00:15:14,690
amount of fluctuations but we also have

00:15:11,960 --> 00:15:19,490
that quickly moving environment the only

00:15:14,690 --> 00:15:21,590
option is that we have is change we

00:15:19,490 --> 00:15:24,770
don't get to stand still we don't get to

00:15:21,590 --> 00:15:27,590
hold steady so so the question for us is

00:15:24,770 --> 00:15:29,570
not if we get to change that question is

00:15:27,590 --> 00:15:31,070
answered for us with our business and

00:15:29,570 --> 00:15:32,810
our environment and the goals that we

00:15:31,070 --> 00:15:34,910
have we have to change that is not a

00:15:32,810 --> 00:15:40,670
choice for us so the question becomes

00:15:34,910 --> 00:15:42,380
how do we change safely prevention is a

00:15:40,670 --> 00:15:47,030
reasonable way to spend some of your

00:15:42,380 --> 00:15:49,940
reliability cycles now that's reasonable

00:15:47,030 --> 00:15:51,620
prevention now what do I mean by

00:15:49,940 --> 00:15:53,060
reasonable prevention there are certain

00:15:51,620 --> 00:15:54,700
things we know are coming at us and

00:15:53,060 --> 00:15:57,440
certain problems that we can understand

00:15:54,700 --> 00:15:59,670
for instance years ago when Netflix

00:15:57,440 --> 00:16:01,530
moved from being in the data center

00:15:59,670 --> 00:16:02,850
being in the cloud our cloud provider

00:16:01,530 --> 00:16:05,400
made us some promises

00:16:02,850 --> 00:16:07,110
one of the first promises was that those

00:16:05,400 --> 00:16:09,090
instances you're using those virtual

00:16:07,110 --> 00:16:09,450
instances will disappear out from under

00:16:09,090 --> 00:16:12,180
you

00:16:09,450 --> 00:16:14,670
first promise so we know we had to find

00:16:12,180 --> 00:16:16,380
a way to design systems so that that

00:16:14,670 --> 00:16:17,730
loss of an individual instance wasn't

00:16:16,380 --> 00:16:20,190
going to take down our running

00:16:17,730 --> 00:16:21,750
applications as Andy mentioned last

00:16:20,190 --> 00:16:23,970
night chaos monkey was the beginning of

00:16:21,750 --> 00:16:26,370
that story and chaos monkey still runs

00:16:23,970 --> 00:16:29,970
around today randomly killing instances

00:16:26,370 --> 00:16:32,580
inside of Netflix second promise you'll

00:16:29,970 --> 00:16:34,470
have little control or view over the

00:16:32,580 --> 00:16:36,750
hardware software and networking upon

00:16:34,470 --> 00:16:38,760
which your system relies therefore you

00:16:36,750 --> 00:16:41,610
cannot design your software in such a

00:16:38,760 --> 00:16:43,890
way that you're encasing or encoding

00:16:41,610 --> 00:16:45,270
assumptions about certain things because

00:16:43,890 --> 00:16:47,220
that's going to change out from

00:16:45,270 --> 00:16:48,390
underneath you and most the time when

00:16:47,220 --> 00:16:50,250
those things go well you won't even

00:16:48,390 --> 00:16:51,390
notice that those changes are happening

00:16:50,250 --> 00:16:53,370
so that was our second promise

00:16:51,390 --> 00:16:55,080
the third promise we received is that

00:16:53,370 --> 00:16:58,410
your bill will show up on time and your

00:16:55,080 --> 00:17:00,330
payment better to some other things we

00:16:58,410 --> 00:17:01,530
think about in reasonable prevention you

00:17:00,330 --> 00:17:03,270
know in the operation side of the world

00:17:01,530 --> 00:17:04,320
we have monitoring we have metrics we

00:17:03,270 --> 00:17:06,210
have measure ability and we have

00:17:04,320 --> 00:17:07,350
observability of our systems so that we

00:17:06,210 --> 00:17:10,080
know what they're doing and how they're

00:17:07,350 --> 00:17:12,120
reacting in this environment delivery is

00:17:10,080 --> 00:17:13,590
a portion of that as well it's very

00:17:12,120 --> 00:17:15,300
important that we're able to use tools

00:17:13,590 --> 00:17:17,670
like Kayenta that automated canary

00:17:15,300 --> 00:17:19,400
analysis to make sure that this new code

00:17:17,670 --> 00:17:21,810
as we bring it out there into the world

00:17:19,400 --> 00:17:23,670
behaves the way we think it does when it

00:17:21,810 --> 00:17:25,080
actually crashes into that reality of a

00:17:23,670 --> 00:17:27,000
you know turbulent production

00:17:25,080 --> 00:17:29,250
environment able to do things like

00:17:27,000 --> 00:17:30,930
environmental verification make sure

00:17:29,250 --> 00:17:32,570
that the world is as we expect it to be

00:17:30,930 --> 00:17:35,010
before we send that new code out there

00:17:32,570 --> 00:17:36,540
we also know that using the pipelines we

00:17:35,010 --> 00:17:38,640
get the same bits constructed the same

00:17:36,540 --> 00:17:39,920
way tested the same way deployed the

00:17:38,640 --> 00:17:42,600
same way every time

00:17:39,920 --> 00:17:43,590
but that reasonable prevention only goes

00:17:42,600 --> 00:17:46,130
so far

00:17:43,590 --> 00:17:49,320
there's a key challenge with prevention

00:17:46,130 --> 00:17:52,440
you have to be able to understand the

00:17:49,320 --> 00:17:54,270
problem state you have to be able to

00:17:52,440 --> 00:17:55,950
understand those rough edges of it now

00:17:54,270 --> 00:17:57,930
again this happens easily in certain

00:17:55,950 --> 00:17:59,430
ways right I think probably all of us

00:17:57,930 --> 00:18:00,540
here have experienced two retries we

00:17:59,430 --> 00:18:02,760
didn't get what we expected the first

00:18:00,540 --> 00:18:04,350
time how about you try it again this is

00:18:02,760 --> 00:18:06,420
encoded not only in our software but in

00:18:04,350 --> 00:18:09,150
the operating systems and tcp/ip stacks

00:18:06,420 --> 00:18:10,470
and things like that that we rely on but

00:18:09,150 --> 00:18:12,780
that only covers a certain amount of

00:18:10,470 --> 00:18:13,639
problems I know that for instance

00:18:12,780 --> 00:18:15,559
Netflix

00:18:13,639 --> 00:18:17,479
experience problems where the only way

00:18:15,559 --> 00:18:19,999
this problem was going to show up as if

00:18:17,479 --> 00:18:22,279
these you know 197 variables had these

00:18:19,999 --> 00:18:24,289
values in this particular order with

00:18:22,279 --> 00:18:25,969
this phase of the moon for this

00:18:24,289 --> 00:18:28,519
particular problem to come up that we

00:18:25,969 --> 00:18:30,019
could never envision so that's the

00:18:28,519 --> 00:18:31,909
problem with prevention as part of your

00:18:30,019 --> 00:18:33,320
strategy is that you have to be able to

00:18:31,909 --> 00:18:36,799
understand and envision the entire

00:18:33,320 --> 00:18:38,539
problem space in order to do it so

00:18:36,799 --> 00:18:40,909
that's where I'd argue that your ability

00:18:38,539 --> 00:18:43,149
to recover from problems is greater than

00:18:40,909 --> 00:18:46,339
your ability to prevent those problems

00:18:43,149 --> 00:18:47,629
reasonable prevention is a start for a

00:18:46,339 --> 00:18:51,529
lot of places this is where their

00:18:47,629 --> 00:18:53,779
reliability efforts end because failures

00:18:51,529 --> 00:18:55,999
will happen no matter the skills or

00:18:53,779 --> 00:18:57,709
expertise levels or experience levels of

00:18:55,999 --> 00:18:59,599
your team whether you choose latest and

00:18:57,709 --> 00:19:01,629
greatest technologies or you're more a

00:18:59,599 --> 00:19:03,799
fan of choose boring technologies

00:19:01,629 --> 00:19:05,359
whether you live in the cloud or you're

00:19:03,799 --> 00:19:06,799
surrounded by that pleasant hum of the

00:19:05,359 --> 00:19:09,049
data center those failures are gonna

00:19:06,799 --> 00:19:10,549
happen so your question here is whether

00:19:09,049 --> 00:19:14,089
or not your customers get to experience

00:19:10,549 --> 00:19:15,440
those failures along with you so with

00:19:14,089 --> 00:19:18,339
that in mind how do we talk about

00:19:15,440 --> 00:19:20,509
recovery being greater than prevention

00:19:18,339 --> 00:19:22,690
so one of the first things that we look

00:19:20,509 --> 00:19:25,969
at is this idea of graceful degradation

00:19:22,690 --> 00:19:28,879
the idea here is that something for our

00:19:25,969 --> 00:19:31,159
customers is better than nothing now

00:19:28,879 --> 00:19:33,469
we'll go back into imagination imagine

00:19:31,159 --> 00:19:35,509
that one of those microservices creates

00:19:33,469 --> 00:19:36,529
that UI that you've seen for those of

00:19:35,509 --> 00:19:38,690
you that are familiar with the Netflix

00:19:36,529 --> 00:19:41,479
service there's a list of movies right

00:19:38,690 --> 00:19:43,639
now that list of movies is personalized

00:19:41,479 --> 00:19:46,609
for every account for every profile

00:19:43,639 --> 00:19:48,349
every day so imagine that there's a

00:19:46,609 --> 00:19:49,969
micro service building out that UI and

00:19:48,349 --> 00:19:51,619
there's another micro service there that

00:19:49,969 --> 00:19:53,089
handles that personalization information

00:19:51,619 --> 00:19:55,849
and the UI service calls into a

00:19:53,089 --> 00:19:57,669
personalization service and nothing

00:19:55,849 --> 00:19:59,809
comes back it's screaming into the void

00:19:57,669 --> 00:20:03,019
we have two options for how to answer

00:19:59,809 --> 00:20:05,179
that right number one we display what I

00:20:03,019 --> 00:20:06,739
call our most unpopular popular Netflix

00:20:05,179 --> 00:20:10,039
series it says cannot connect to netflix

00:20:06,739 --> 00:20:11,299
please try again later it's an option

00:20:10,039 --> 00:20:13,969
and we've occasionally chosen that

00:20:11,299 --> 00:20:15,799
option but what if imagine this we can

00:20:13,969 --> 00:20:17,989
teach that UI service that in the case

00:20:15,799 --> 00:20:19,609
that it cannot get Dave's personalized

00:20:17,989 --> 00:20:22,339
recommendations that maybe it shows me

00:20:19,609 --> 00:20:24,739
yesterday's or something you may be

00:20:22,339 --> 00:20:26,630
locally relevant or even a static list

00:20:24,739 --> 00:20:29,270
right something is better than nothing

00:20:26,630 --> 00:20:31,179
so by designing the systems that way

00:20:29,270 --> 00:20:34,520
I've taught that you I service how to

00:20:31,179 --> 00:20:36,890
recover within milliseconds no humans

00:20:34,520 --> 00:20:39,320
had to get involved no one was paged no

00:20:36,890 --> 00:20:41,000
alerts went off no grafts fell off the

00:20:39,320 --> 00:20:44,539
system behaved on its own and performed

00:20:41,000 --> 00:20:46,400
that recovery another idea that we use

00:20:44,539 --> 00:20:50,330
regional evacuation

00:20:46,400 --> 00:20:52,549
so Netflix operates in three of Amazon's

00:20:50,330 --> 00:20:54,320
regions and we mentioned earlier chaos

00:20:52,549 --> 00:20:57,049
monkey goes around shooting instances in

00:20:54,320 --> 00:21:01,880
the head we took this a little bit

00:20:57,049 --> 00:21:04,179
further imagine if a region is now your

00:21:01,880 --> 00:21:06,760
container for a particular problem

00:21:04,179 --> 00:21:09,500
something is affecting that entire area

00:21:06,760 --> 00:21:11,270
again we have the question of do I allow

00:21:09,500 --> 00:21:13,850
my customers to come on that ride along

00:21:11,270 --> 00:21:15,260
with me right remember we have hundreds

00:21:13,850 --> 00:21:17,059
of micro services running across

00:21:15,260 --> 00:21:19,250
thousands and thousands and thousands of

00:21:17,059 --> 00:21:21,470
instances on top of a framework of

00:21:19,250 --> 00:21:23,200
network systems machines and hardware

00:21:21,470 --> 00:21:26,360
that we cannot control or we cannot see

00:21:23,200 --> 00:21:27,919
that's a complex problem to debug even

00:21:26,360 --> 00:21:31,010
if we have the most qualified people in

00:21:27,919 --> 00:21:32,299
the world available so again our

00:21:31,010 --> 00:21:32,770
question do the customers come along

00:21:32,299 --> 00:21:35,870
with us

00:21:32,770 --> 00:21:38,150
so we developed a system called chaos

00:21:35,870 --> 00:21:39,919
Kong at the time and what it allowed us

00:21:38,150 --> 00:21:41,570
to do is completely evacuate customer

00:21:39,919 --> 00:21:43,490
traffic from any one of those Amazon

00:21:41,570 --> 00:21:45,590
regions and move all of our customers

00:21:43,490 --> 00:21:47,780
out to other parts of the world most the

00:21:45,590 --> 00:21:49,400
time without them even noticing we

00:21:47,780 --> 00:21:55,340
literally built a system that allows us

00:21:49,400 --> 00:21:57,669
to run away from our problems spinnaker

00:21:55,340 --> 00:22:00,409
is also an important part of this a

00:21:57,669 --> 00:22:01,850
common reliability question that s our

00:22:00,409 --> 00:22:05,510
ease deal with whenever there's an issue

00:22:01,850 --> 00:22:06,950
is what changed we have a large complex

00:22:05,510 --> 00:22:08,900
system with lots of people making

00:22:06,950 --> 00:22:11,030
changes there are thousands and

00:22:08,900 --> 00:22:14,390
thousands of changes to our production

00:22:11,030 --> 00:22:16,820
systems every day so we built a system

00:22:14,390 --> 00:22:18,860
that records all of those changes in our

00:22:16,820 --> 00:22:21,320
production environment now that's great

00:22:18,860 --> 00:22:22,760
right I know exactly what changed when I

00:22:21,320 --> 00:22:24,370
know when the problem happened now I can

00:22:22,760 --> 00:22:27,530
put my finger at it and said this did it

00:22:24,370 --> 00:22:29,659
it's a challenge there right knowing

00:22:27,530 --> 00:22:33,500
what broke things does not fix my

00:22:29,659 --> 00:22:35,390
customers experience so using things

00:22:33,500 --> 00:22:39,680
like this you know single action

00:22:35,390 --> 00:22:41,870
rollback feature allows my individual

00:22:39,680 --> 00:22:43,730
software teams that have that same data

00:22:41,870 --> 00:22:45,710
and information to make changes to

00:22:43,730 --> 00:22:47,720
recover the system on its own when it

00:22:45,710 --> 00:22:50,960
cannot recover on its when it can't

00:22:47,720 --> 00:22:53,990
recover itself again without involving a

00:22:50,960 --> 00:22:56,540
lot of people there's no hopefully call

00:22:53,990 --> 00:22:59,150
out to the centralized SRE team right

00:22:56,540 --> 00:23:01,220
we've now given those teams the tools

00:22:59,150 --> 00:23:03,920
that they need to recover the system on

00:23:01,220 --> 00:23:06,890
their own we've had some fabulous wins

00:23:03,920 --> 00:23:08,630
from it now it's it's hard to kind of

00:23:06,890 --> 00:23:09,950
codify some of those because really what

00:23:08,630 --> 00:23:11,450
I would need to be able to give you

00:23:09,950 --> 00:23:14,360
would be a list of all of the outages

00:23:11,450 --> 00:23:17,510
that never happened but we call this

00:23:14,360 --> 00:23:20,630
idea distributed reliability a lot of us

00:23:17,510 --> 00:23:22,760
invest in distributed systems because we

00:23:20,630 --> 00:23:24,980
understand some of the benefits that we

00:23:22,760 --> 00:23:26,480
get there by also distributing the

00:23:24,980 --> 00:23:28,670
capability throughout our engineering

00:23:26,480 --> 00:23:30,470
teams for people to recover and handle

00:23:28,670 --> 00:23:32,270
these things on their own we distribute

00:23:30,470 --> 00:23:36,410
the reliability also through the socio

00:23:32,270 --> 00:23:38,540
side of our socio technical system so

00:23:36,410 --> 00:23:41,300
that's how spinnaker enables safe for us

00:23:38,540 --> 00:23:43,760
at Netflix because leaving the system as

00:23:41,300 --> 00:23:45,200
it is is not an option for us we have a

00:23:43,760 --> 00:23:48,190
quickly moving environment that we have

00:23:45,200 --> 00:23:50,420
to we have to respond to

00:23:48,190 --> 00:23:51,950
we know that reasonable prevention is

00:23:50,420 --> 00:23:54,470
where we start our reliability work and

00:23:51,950 --> 00:23:56,390
not where we end and that by giving our

00:23:54,470 --> 00:23:58,130
engineering teams the capability to do

00:23:56,390 --> 00:23:59,630
these kinds of things on their own as

00:23:58,130 --> 00:24:01,880
well as teaching our systems how to

00:23:59,630 --> 00:24:04,040
recover on their own we get more safety

00:24:01,880 --> 00:24:08,270
for our customers we get an environment

00:24:04,040 --> 00:24:10,490
that for them always just works now we

00:24:08,270 --> 00:24:13,130
have the third and more elusive point of

00:24:10,490 --> 00:24:16,580
our triangle to talk about we have the

00:24:13,130 --> 00:24:20,090
continuous part I have seen teams

00:24:16,580 --> 00:24:23,240
achieve fast and safe deployments you

00:24:20,090 --> 00:24:25,610
know oftentimes ones right and we do

00:24:23,240 --> 00:24:26,960
that through that big ritual we get

00:24:25,610 --> 00:24:28,370
everyone involved we pull everyone

00:24:26,960 --> 00:24:29,630
together we distract them from what

00:24:28,370 --> 00:24:31,130
they're doing everyone takes a different

00:24:29,630 --> 00:24:33,020
part of the system to be concerned about

00:24:31,130 --> 00:24:34,550
and we step through the deployment

00:24:33,020 --> 00:24:36,350
together and if it all goes well we do

00:24:34,550 --> 00:24:39,010
it fast we've done it safely everyone

00:24:36,350 --> 00:24:42,470
wins and it's a really really high cost

00:24:39,010 --> 00:24:43,550
so you can do that once maybe twice but

00:24:42,470 --> 00:24:46,130
our goal here is to be able to do this

00:24:43,550 --> 00:24:47,750
continuously remember we have those

00:24:46,130 --> 00:24:49,040
thousands of changes in that production

00:24:47,750 --> 00:24:50,270
environment all the time we can't do

00:24:49,040 --> 00:24:53,600
that if we have to call everyone

00:24:50,270 --> 00:24:55,790
together for some form of ceremony

00:24:53,600 --> 00:24:59,370
so one of the things that enables

00:24:55,790 --> 00:25:01,590
continuous for us is consistency that

00:24:59,370 --> 00:25:02,970
ensures that whatever packages our

00:25:01,590 --> 00:25:05,280
engineering teams are putting together

00:25:02,970 --> 00:25:06,690
go through the same steps using the same

00:25:05,280 --> 00:25:09,570
source in the same way with the same

00:25:06,690 --> 00:25:12,420
tests and the same verifications every

00:25:09,570 --> 00:25:13,980
time those pipelines provide another

00:25:12,420 --> 00:25:15,930
thing that's kind of nice especially

00:25:13,980 --> 00:25:17,790
from a reliability standpoint is they

00:25:15,930 --> 00:25:19,470
provide a nice set of documentation for

00:25:17,790 --> 00:25:21,210
the intentions of the team that designed

00:25:19,470 --> 00:25:23,460
it for what they wanted their system to

00:25:21,210 --> 00:25:24,930
go through we've also seen some teams

00:25:23,460 --> 00:25:26,760
use their pipelines not only as

00:25:24,930 --> 00:25:28,200
documentation but training material for

00:25:26,760 --> 00:25:30,390
new team members to help educate them

00:25:28,200 --> 00:25:32,100
about the behavior of the system we've

00:25:30,390 --> 00:25:36,000
used this quite a bit we leverage it to

00:25:32,100 --> 00:25:39,750
tremendous benefit however there are

00:25:36,000 --> 00:25:41,790
still a lot of details to manage as it

00:25:39,750 --> 00:25:43,140
stands now teams deploying software not

00:25:41,790 --> 00:25:45,120
only need to know everything about their

00:25:43,140 --> 00:25:46,260
application how it behaves how they want

00:25:45,120 --> 00:25:48,450
it to behave how it needs to be

00:25:46,260 --> 00:25:50,580
distributed they also have to know the

00:25:48,450 --> 00:25:53,100
details of the infrastructure and the

00:25:50,580 --> 00:25:54,420
environment that's going on on top of it

00:25:53,100 --> 00:25:56,750
they have to understand all of those

00:25:54,420 --> 00:26:00,720
wiring and those pieces that go together

00:25:56,750 --> 00:26:02,460
that's a lot to manage now this the

00:26:00,720 --> 00:26:04,050
teams that do this they're very capable

00:26:02,460 --> 00:26:05,760
they understand these things they're

00:26:04,050 --> 00:26:07,680
it's possible for them to do this but

00:26:05,760 --> 00:26:10,530
that's quite a bit of cognitive load to

00:26:07,680 --> 00:26:15,060
continually manage when this is a

00:26:10,530 --> 00:26:17,730
perhaps daily kind of thing deployment

00:26:15,060 --> 00:26:19,500
templates canari analysis regularity and

00:26:17,730 --> 00:26:21,810
consistency cover some of those sharp

00:26:19,500 --> 00:26:24,390
edges but there's still that tight

00:26:21,810 --> 00:26:25,890
coupling with the infrastructure that's

00:26:24,390 --> 00:26:28,440
required in order for these teams to be

00:26:25,890 --> 00:26:31,260
successful so I think there's a better

00:26:28,440 --> 00:26:34,200
way for these teams to be successful and

00:26:31,260 --> 00:26:36,480
reduce the cognitive load and we call

00:26:34,200 --> 00:26:39,330
that managed delivery there are some

00:26:36,480 --> 00:26:41,280
great benefits through and from managed

00:26:39,330 --> 00:26:42,630
delivery that people much more capable

00:26:41,280 --> 00:26:44,760
and knowledgeable on the topic we'll be

00:26:42,630 --> 00:26:46,170
talking about them myself but from a

00:26:44,760 --> 00:26:48,180
reliability and infrastructure

00:26:46,170 --> 00:26:50,970
standpoint this does something very very

00:26:48,180 --> 00:26:53,460
nice not only does it reduce the

00:26:50,970 --> 00:26:55,110
cognitive load on those teams by making

00:26:53,460 --> 00:26:57,390
it easier for them to describe what they

00:26:55,110 --> 00:26:59,760
want to have happen it breaks that tight

00:26:57,390 --> 00:27:01,890
tie that currently exists with their

00:26:59,760 --> 00:27:04,470
knowledge in the infrastructure it

00:27:01,890 --> 00:27:06,180
allows us to break those apart so by

00:27:04,470 --> 00:27:06,730
describing what I want is my in state in

00:27:06,180 --> 00:27:10,330
the require

00:27:06,730 --> 00:27:12,340
of my application I now free myself to

00:27:10,330 --> 00:27:14,110
do my application work and I free my

00:27:12,340 --> 00:27:16,150
infrastructure teams to make the changes

00:27:14,110 --> 00:27:18,160
they need to make it's no longer a

00:27:16,150 --> 00:27:20,679
highly coupled difficult kind of thing

00:27:18,160 --> 00:27:22,690
earlier like we saw the decoupling with

00:27:20,679 --> 00:27:24,429
the API service and the smaller services

00:27:22,690 --> 00:27:26,200
behind them we have this similar kind of

00:27:24,429 --> 00:27:28,390
coupling now between application teams

00:27:26,200 --> 00:27:29,770
and infrastructure teams if your

00:27:28,390 --> 00:27:31,059
infrastructure teams ever have to do

00:27:29,770 --> 00:27:33,690
some kind of hardware and network

00:27:31,059 --> 00:27:35,740
migration it's really really complex

00:27:33,690 --> 00:27:37,299
they have to spend a lot of time with

00:27:35,740 --> 00:27:39,340
application teams going through all of

00:27:37,299 --> 00:27:40,750
these bits and designs and pieces now

00:27:39,340 --> 00:27:42,130
with managed delivery that's no longer

00:27:40,750 --> 00:27:43,480
required I already know their

00:27:42,130 --> 00:27:44,860
requirements already know their desired

00:27:43,480 --> 00:27:46,150
end state and I have the freedom to move

00:27:44,860 --> 00:27:49,090
on my own while still meeting their

00:27:46,150 --> 00:27:52,330
needs so that's an idea some of how we

00:27:49,090 --> 00:27:54,340
enable continuous fast safe continuous

00:27:52,330 --> 00:27:56,880
consistent through managed delivery

00:27:54,340 --> 00:28:00,130
we're now breaking more coupling

00:27:56,880 --> 00:28:01,750
reliability is enhanced because the

00:28:00,130 --> 00:28:03,400
deployment teams that are working on

00:28:01,750 --> 00:28:05,049
their applications now have less to

00:28:03,400 --> 00:28:06,250
worry about the infrastructure teams can

00:28:05,049 --> 00:28:09,160
make changes with the knowledge that

00:28:06,250 --> 00:28:12,309
they need and again all of these things

00:28:09,160 --> 00:28:14,830
happening thousands of times a day while

00:28:12,309 --> 00:28:16,299
my customer experience is ordinary I

00:28:14,830 --> 00:28:18,010
want to be able to make all of these

00:28:16,299 --> 00:28:21,340
changes be able to move these parts

00:28:18,010 --> 00:28:22,720
around without my customers noticing and

00:28:21,340 --> 00:28:25,690
that's one of the most important things

00:28:22,720 --> 00:28:27,669
for us in picking this you know picking

00:28:25,690 --> 00:28:30,400
all three points of our of our value

00:28:27,669 --> 00:28:31,179
triangle those combination of smaller

00:28:30,400 --> 00:28:33,970
code sets

00:28:31,179 --> 00:28:37,660
knightly Canaries enable teams to move

00:28:33,970 --> 00:28:39,280
much more quickly safety is enhanced

00:28:37,660 --> 00:28:41,200
when it's easier for teams to logic

00:28:39,280 --> 00:28:43,960
about how their changes to the system

00:28:41,200 --> 00:28:46,360
have affected things or how to decouple

00:28:43,960 --> 00:28:48,040
from infrastructure and we're able to do

00:28:46,360 --> 00:28:50,860
that continuously by allowing everyone

00:28:48,040 --> 00:28:52,900
to move independently have those smaller

00:28:50,860 --> 00:28:54,669
code sets that less to manage for

00:28:52,900 --> 00:28:57,280
infrastructure application teams to be

00:28:54,669 --> 00:28:59,740
able to move independently so that's how

00:28:57,280 --> 00:29:01,510
we pick fast safe and continuous all

00:28:59,740 --> 00:29:04,179
three points in the value triangle at

00:29:01,510 --> 00:29:06,800
Netflix my name is Dave Haun this is

00:29:04,179 --> 00:29:17,960
where you can find me on the Internet

00:29:06,800 --> 00:29:17,960
[Applause]

00:29:19,620 --> 00:29:25,820

YouTube URL: https://www.youtube.com/watch?v=Xk2UHmKYISg


