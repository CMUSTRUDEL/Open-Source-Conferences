Title: Lorin Hochstein "Oops! Learning From Surprise at Netflix" - Spinnaker Summit 2019
Publication date: 2019-12-03
Playlist: Spinnaker Summit 2019
Description: 
	The third annual Spinnaker Summit (Diamond Sponsors: Netflix, Google and Armory) was held at the Hard Rock Hotel in San Diego, CA from November 15-17, 2019 and welcomed over 500 members of the rapidly growing Spinnaker open source community.
Captions: 
	00:00:06,330 --> 00:00:10,980
[Laughter]

00:00:15,010 --> 00:00:22,130
alright let's talk about outages so at

00:00:19,430 --> 00:00:23,450
Netflix we use the term incident to

00:00:22,130 --> 00:00:24,980
refer to outage but it's basically a

00:00:23,450 --> 00:00:27,170
service interruption right for us that

00:00:24,980 --> 00:00:28,730
means you know many many people are not

00:00:27,170 --> 00:00:31,720
able to use the service they can't watch

00:00:28,730 --> 00:00:34,850
a Netflix that's that's a bad thing

00:00:31,720 --> 00:00:37,940
so incidents are scary things when they

00:00:34,850 --> 00:00:40,130
happen right sure many people here are

00:00:37,940 --> 00:00:41,720
involved you know with some sort of you

00:00:40,130 --> 00:00:43,100
know technical system that goes down

00:00:41,720 --> 00:00:46,430
sometimes and when an incident happens

00:00:43,100 --> 00:00:48,470
people don't like that and particularly

00:00:46,430 --> 00:00:49,790
what happens is the system has behaved

00:00:48,470 --> 00:00:52,190
in some way we didn't expect it to

00:00:49,790 --> 00:00:54,410
behave it did something that we didn't

00:00:52,190 --> 00:00:56,750
think it was going to do and and what's

00:00:54,410 --> 00:00:58,690
worse than that is that not only did it

00:00:56,750 --> 00:01:02,180
do something bad but it did something

00:00:58,690 --> 00:01:04,970
bad that had a negative impact to the

00:01:02,180 --> 00:01:06,680
business right so we had some impact to

00:01:04,970 --> 00:01:09,890
the customer or some business impactor

00:01:06,680 --> 00:01:12,290
or something like that so so when these

00:01:09,890 --> 00:01:14,450
sorts of things happen people get

00:01:12,290 --> 00:01:15,829
nervous right like we built this system

00:01:14,450 --> 00:01:17,869
we think we know what it's supposed to

00:01:15,829 --> 00:01:21,229
do and it behaved in a way that we

00:01:17,869 --> 00:01:23,390
didn't expect and what they want

00:01:21,229 --> 00:01:25,070
after that sort of thing happens is they

00:01:23,390 --> 00:01:28,220
want some form of closure right I want

00:01:25,070 --> 00:01:29,600
to feel safe again I want to feel that

00:01:28,220 --> 00:01:33,200
the system is not going to do these

00:01:29,600 --> 00:01:34,729
sorts of things in the future and so the

00:01:33,200 --> 00:01:36,950
question people ask is like well going

00:01:34,729 --> 00:01:39,170
forward you know how can we build

00:01:36,950 --> 00:01:40,700
confidence how can we feel like this

00:01:39,170 --> 00:01:44,810
kind of thing is not going to happen to

00:01:40,700 --> 00:01:47,750
us again and so what do we do right what

00:01:44,810 --> 00:01:49,670
do we do in our in our industry after an

00:01:47,750 --> 00:01:51,229
incident happens we'll do you know

00:01:49,670 --> 00:01:53,860
Netflix we call them incident reviews

00:01:51,229 --> 00:01:56,600
many places call these post mortems

00:01:53,860 --> 00:01:59,420
generally people don't don't die in them

00:01:56,600 --> 00:02:00,799
so I'm not a huge fan of using that term

00:01:59,420 --> 00:02:02,510
post mortem but it's the term many

00:02:00,799 --> 00:02:04,790
people use in the industry and

00:02:02,510 --> 00:02:06,409
ultimately when when people you know do

00:02:04,790 --> 00:02:07,909
these sorts of interviews or post

00:02:06,409 --> 00:02:10,459
mortems what they're trying to get out

00:02:07,909 --> 00:02:14,569
is like why did this happen why did the

00:02:10,459 --> 00:02:15,739
system fail in the way that it did and

00:02:14,569 --> 00:02:17,870
so what do people do in our industry

00:02:15,739 --> 00:02:20,030
right they do a root cause analysis to

00:02:17,870 --> 00:02:22,790
figure out what it was like why it was

00:02:20,030 --> 00:02:25,579
that the system broke in the way that it

00:02:22,790 --> 00:02:27,030
did and then after they do that root

00:02:25,579 --> 00:02:28,860
cause analysis

00:02:27,030 --> 00:02:30,540
but what do we do we generate action

00:02:28,860 --> 00:02:33,150
items right what are all the things that

00:02:30,540 --> 00:02:34,170
we need to do to make sure that this is

00:02:33,150 --> 00:02:36,960
never gonna happen again

00:02:34,170 --> 00:02:38,910
right and so once we've identified what

00:02:36,960 --> 00:02:40,860
those action items are and once we have

00:02:38,910 --> 00:02:42,120
some confidence that people are going to

00:02:40,860 --> 00:02:45,570
follow up on those that those action

00:02:42,120 --> 00:02:47,310
items will actually get done then we

00:02:45,570 --> 00:02:49,440
feel like okay we can move past this now

00:02:47,310 --> 00:02:51,750
right I feel like safe again I have

00:02:49,440 --> 00:02:54,080
closure it did something unexpected but

00:02:51,750 --> 00:02:57,150
we know it's not going to happen again

00:02:54,080 --> 00:03:01,020
until what happens that you know the

00:02:57,150 --> 00:03:02,459
next time this happens but the next time

00:03:01,020 --> 00:03:04,890
it's a completely different issue right

00:03:02,459 --> 00:03:06,660
the next time we haven't have an outage

00:03:04,890 --> 00:03:09,780
we have an incident it's not the same as

00:03:06,660 --> 00:03:11,070
the last one if we you know did our work

00:03:09,780 --> 00:03:12,660
properly last time we got the action

00:03:11,070 --> 00:03:17,180
items it's a completely different kind

00:03:12,660 --> 00:03:20,700
of failure and so the the claim that I'm

00:03:17,180 --> 00:03:23,130
trying to make in this talk is that we

00:03:20,700 --> 00:03:25,200
can actually get more out of our

00:03:23,130 --> 00:03:27,090
incidents than just the work that we

00:03:25,200 --> 00:03:27,780
need to do to prevent it from happening

00:03:27,090 --> 00:03:29,760
again

00:03:27,780 --> 00:03:32,550
so we can get more out of them than just

00:03:29,760 --> 00:03:35,970
a revenger reoccurrence of an incident

00:03:32,550 --> 00:03:38,070
from happening and I really like this

00:03:35,970 --> 00:03:40,620
this phrase from John all Squa he's the

00:03:38,070 --> 00:03:42,750
CTO XD CEO of Etsy

00:03:40,620 --> 00:03:45,030
he describes incidents as unplanned

00:03:42,750 --> 00:03:47,340
investments right your organization has

00:03:45,030 --> 00:03:48,870
now you know it unwillingly spent a lot

00:03:47,340 --> 00:03:50,070
of money here right because you've lost

00:03:48,870 --> 00:03:52,680
money because you had us some sort of

00:03:50,070 --> 00:03:54,330
service interruption so you should

00:03:52,680 --> 00:03:56,400
leverage that as much as you can to get

00:03:54,330 --> 00:04:00,450
as much out of it and you can get more

00:03:56,400 --> 00:04:02,610
out of it than just action items and so

00:04:00,450 --> 00:04:04,200
another claim that I would make here is

00:04:02,610 --> 00:04:06,480
that that what you can get out of it of

00:04:04,200 --> 00:04:08,730
an incident what you can learn from when

00:04:06,480 --> 00:04:11,250
an incident happens is not proportional

00:04:08,730 --> 00:04:13,560
to the severity to how bad the incident

00:04:11,250 --> 00:04:15,000
was right now generally speaking the

00:04:13,560 --> 00:04:17,160
attention that an incident will get

00:04:15,000 --> 00:04:19,049
within an organization is proportional

00:04:17,160 --> 00:04:21,239
right like if a really bad thing happens

00:04:19,049 --> 00:04:22,860
the organization's gonna you know focus

00:04:21,239 --> 00:04:25,770
a lot more if it's efforts on on that

00:04:22,860 --> 00:04:27,900
root cause analysis but in general it's

00:04:25,770 --> 00:04:30,450
not necessarily the case that you know

00:04:27,900 --> 00:04:31,950
larger severity incidents we learn more

00:04:30,450 --> 00:04:36,330
from them than ones that are sort of

00:04:31,950 --> 00:04:39,180
milder in particular

00:04:36,330 --> 00:04:42,150
what I'd like to convince you of today

00:04:39,180 --> 00:04:44,430
is that we can actually learn just as

00:04:42,150 --> 00:04:46,020
much from from an incident where there's

00:04:44,430 --> 00:04:47,970
actually no impact at all to the

00:04:46,020 --> 00:04:48,930
business or to the customer than from an

00:04:47,970 --> 00:04:51,630
incident where there's some you know

00:04:48,930 --> 00:04:53,640
significant significant impact and so in

00:04:51,630 --> 00:04:54,780
this case it's not really an incident in

00:04:53,640 --> 00:04:56,720
the way that we think of it because we

00:04:54,780 --> 00:04:59,990
define incidences things that have

00:04:56,720 --> 00:05:02,520
significant business or customer impact

00:04:59,990 --> 00:05:04,350
so we call these you know I like the

00:05:02,520 --> 00:05:07,290
term operational surprise right like the

00:05:04,350 --> 00:05:08,820
system did something in production that

00:05:07,290 --> 00:05:13,280
surprised us that we didn't think it was

00:05:08,820 --> 00:05:18,090
going to do and so we call these oopsies

00:05:13,280 --> 00:05:18,390
inside of Netflix and the singular is an

00:05:18,090 --> 00:05:20,520
oops

00:05:18,390 --> 00:05:24,000
so one operational surprise is it's

00:05:20,520 --> 00:05:24,480
called an oops and it's literally called

00:05:24,000 --> 00:05:26,340
an oops

00:05:24,480 --> 00:05:29,220
so there is a JIRA project inside of

00:05:26,340 --> 00:05:31,410
Netflix and it's called oops and here's

00:05:29,220 --> 00:05:33,930
an example a spinnaker example called

00:05:31,410 --> 00:05:35,910
you know oops 170 where there's a new

00:05:33,930 --> 00:05:38,640
spinnaker Brazilians feature cause too

00:05:35,910 --> 00:05:40,800
much pressure on Titus Titus's our you

00:05:38,640 --> 00:05:42,300
know container management system and and

00:05:40,800 --> 00:05:43,950
I really love these kinds of failure

00:05:42,300 --> 00:05:45,450
modes where you know we built something

00:05:43,950 --> 00:05:47,340
into the system to make it more reliable

00:05:45,450 --> 00:05:49,260
and it has introduced some you know new

00:05:47,340 --> 00:05:51,690
unforeseen failure mode and the system

00:05:49,260 --> 00:05:53,900
behaves in a way we didn't expect that

00:05:51,690 --> 00:05:55,530
happens more often than you might think

00:05:53,900 --> 00:05:58,050
one of the things that's really

00:05:55,530 --> 00:05:59,940
interesting about looking at spinnaker

00:05:58,050 --> 00:06:01,980
oopsies is that because the development

00:05:59,940 --> 00:06:03,840
happens you know in the open it's on

00:06:01,980 --> 00:06:05,640
github it's open source you can actually

00:06:03,840 --> 00:06:07,470
sort of see like breadcrumbs you can see

00:06:05,640 --> 00:06:09,090
like hints of things that have happened

00:06:07,470 --> 00:06:12,000
inside of Netflix by looking at at some

00:06:09,090 --> 00:06:13,440
of the the PRS so so here's a PR that

00:06:12,000 --> 00:06:15,420
was in response to that that particular

00:06:13,440 --> 00:06:18,330
hoops that was filed there's some some

00:06:15,420 --> 00:06:20,310
change in configuration of you know back

00:06:18,330 --> 00:06:22,320
off logic because the retries were

00:06:20,310 --> 00:06:27,000
happening too intensely in that

00:06:22,320 --> 00:06:28,800
particular oops she's another example of

00:06:27,000 --> 00:06:30,810
a you can see sort of evidence of the

00:06:28,800 --> 00:06:33,150
noops that happen inside of Netflix you

00:06:30,810 --> 00:06:35,340
can see that there's a reddish slide

00:06:33,150 --> 00:06:37,860
Java library called Jettas and the

00:06:35,340 --> 00:06:41,280
version number was bumped right in one

00:06:37,860 --> 00:06:44,070
of the spinnaker ops app called Fiat and

00:06:41,280 --> 00:06:45,450
so why was it bumped well you know it

00:06:44,070 --> 00:06:47,669
was bumped because an earlier version of

00:06:45,450 --> 00:06:50,009
that library had a bug in it

00:06:47,669 --> 00:06:52,439
which could lead to a connection pool

00:06:50,009 --> 00:06:55,139
leaf when the Java Java client was

00:06:52,439 --> 00:06:57,240
talking to to the Redis server and so in

00:06:55,139 --> 00:06:58,590
the connection pool you know when the

00:06:57,240 --> 00:06:59,759
potential leaks happen eventually you no

00:06:58,590 --> 00:07:01,800
longer have any connections you can't

00:06:59,759 --> 00:07:03,389
talk to the Redis server anymore and

00:07:01,800 --> 00:07:05,430
that was one of the contributors to one

00:07:03,389 --> 00:07:10,529
of the oopsies that we saw in inside of

00:07:05,430 --> 00:07:11,699
Netflix another one so one of the

00:07:10,529 --> 00:07:14,129
members of the spinnaker team Daniel

00:07:11,699 --> 00:07:15,300
Renault actually one day tweeted out you

00:07:14,129 --> 00:07:16,919
know a whole bunch of details about a

00:07:15,300 --> 00:07:19,080
particular oops that happened if you

00:07:16,919 --> 00:07:21,060
wanted to go read up about it this is a

00:07:19,080 --> 00:07:22,529
case where you know in inverter we ended

00:07:21,060 --> 00:07:23,969
up pinning a lot of our clusters too

00:07:22,529 --> 00:07:26,219
high so the cluster has had too much

00:07:23,969 --> 00:07:27,750
capacity now there was no customer

00:07:26,219 --> 00:07:28,919
impact at all if you're running too many

00:07:27,750 --> 00:07:31,080
instances you're just sort of running

00:07:28,919 --> 00:07:33,689
them colder but we were we were running

00:07:31,080 --> 00:07:35,189
them larger than we needed to and I'd

00:07:33,689 --> 00:07:38,699
encourage you to go check that out it's

00:07:35,189 --> 00:07:42,240
kind of an interesting story and then

00:07:38,699 --> 00:07:43,560
you can see you know in in the PRS that

00:07:42,240 --> 00:07:44,879
a particular change was reverted in

00:07:43,560 --> 00:07:46,800
response to that like that made that

00:07:44,879 --> 00:07:48,180
change one of the results was that the

00:07:46,800 --> 00:07:50,159
you know some instances some clusters

00:07:48,180 --> 00:07:52,229
were pinned to hi and then those revert

00:07:50,159 --> 00:07:53,849
back and you can see you know a comment

00:07:52,229 --> 00:07:57,439
that Adam Jordans made turns out it's

00:07:53,849 --> 00:07:57,439
caused a couple of problems internally

00:07:57,529 --> 00:08:01,919
all right so the the way the rest of

00:07:59,819 --> 00:08:04,020
this talk is structured is in three

00:08:01,919 --> 00:08:05,610
parts so in the first part I'm going to

00:08:04,020 --> 00:08:07,080
talk about what you know a little bit

00:08:05,610 --> 00:08:09,539
more detail what are the kinds of things

00:08:07,080 --> 00:08:11,699
we hope to learn by by looking into up

00:08:09,539 --> 00:08:13,800
seas by asking people to teams to

00:08:11,699 --> 00:08:15,689
examine their operational surprises and

00:08:13,800 --> 00:08:17,669
report on them to the to the main part

00:08:15,689 --> 00:08:20,219
of the organization and the second part

00:08:17,669 --> 00:08:21,449
I'm going to talk about what's what

00:08:20,219 --> 00:08:24,120
kinds of questions we encourage people

00:08:21,449 --> 00:08:25,889
to ask when they are looking into a

00:08:24,120 --> 00:08:27,089
noobs and then the last part I'm going

00:08:25,889 --> 00:08:28,139
to talk about like how we encourage

00:08:27,089 --> 00:08:30,659
people to write them up because

00:08:28,139 --> 00:08:32,940
ultimately you know you you look at an

00:08:30,659 --> 00:08:34,229
operational surprise you you ask some

00:08:32,940 --> 00:08:35,789
questions you write up a document and

00:08:34,229 --> 00:08:38,250
then you share that document out with

00:08:35,789 --> 00:08:39,390
the rest of the company and you know

00:08:38,250 --> 00:08:43,800
depending on how you write it people

00:08:39,390 --> 00:08:45,269
will get more or less out of it all

00:08:43,800 --> 00:08:47,160
right so let's talk about what the kinds

00:08:45,269 --> 00:08:49,230
of things that we you know we hope

00:08:47,160 --> 00:08:51,209
people will learn by looking at

00:08:49,230 --> 00:08:55,470
operational surprises beyond just action

00:08:51,209 --> 00:08:56,940
items so this is a quote that's

00:08:55,470 --> 00:08:59,279
attributed to otto von bismarck that I

00:08:56,940 --> 00:09:01,500
really like it says fools learn from

00:08:59,279 --> 00:09:03,480
experience I prefer to learn from the

00:09:01,500 --> 00:09:05,580
experience of others and we know that

00:09:03,480 --> 00:09:07,080
you know engineers learn from their

00:09:05,580 --> 00:09:09,450
direct experiences right that's why

00:09:07,080 --> 00:09:11,790
seniors command higher you know salaries

00:09:09,450 --> 00:09:13,830
than juniors you know that the challenge

00:09:11,790 --> 00:09:15,540
is that I know when an incident or an

00:09:13,830 --> 00:09:16,920
operational surprise happens the people

00:09:15,540 --> 00:09:19,730
directly involved are going to learn a

00:09:16,920 --> 00:09:21,840
lot from that the question is how do we

00:09:19,730 --> 00:09:24,000
transfer those learnings to other people

00:09:21,840 --> 00:09:26,130
who are not directly involved right like

00:09:24,000 --> 00:09:27,900
I know like when I touch the stove and I

00:09:26,130 --> 00:09:29,400
burn myself I have learned the stove is

00:09:27,900 --> 00:09:32,670
hot I shouldn't do it how do you teach

00:09:29,400 --> 00:09:34,080
other people not to touch the stove all

00:09:32,670 --> 00:09:38,430
of them having to go and touch it and

00:09:34,080 --> 00:09:39,480
burn themselves all right so so one of

00:09:38,430 --> 00:09:41,490
the things we try to get out of

00:09:39,480 --> 00:09:43,680
operational surprises is to identify

00:09:41,490 --> 00:09:47,100
some kind of gap that exists inside of

00:09:43,680 --> 00:09:49,410
the organization so one example of a gap

00:09:47,100 --> 00:09:51,450
is a tooling gap there's some some issue

00:09:49,410 --> 00:09:54,990
some like the typical UI issue with an

00:09:51,450 --> 00:09:56,580
operational tool that is sort of it's

00:09:54,990 --> 00:09:58,080
difficult to use or it's confusing it's

00:09:56,580 --> 00:10:00,420
not showing you information that you

00:09:58,080 --> 00:10:03,630
need or it's sort of too easy to do and

00:10:00,420 --> 00:10:06,060
unsafe the wrong thing and then you know

00:10:03,630 --> 00:10:07,830
it someone falls into that trap and gets

00:10:06,060 --> 00:10:10,020
hurt by it now spinnaker is a

00:10:07,830 --> 00:10:12,120
significant operational tool inside of

00:10:10,020 --> 00:10:14,730
Netflix you know we use it for a lot of

00:10:12,120 --> 00:10:16,350
a lot of operational changes now I think

00:10:14,730 --> 00:10:18,330
you know overall the industry is

00:10:16,350 --> 00:10:20,220
probably best at identifying these from

00:10:18,330 --> 00:10:22,410
from incidents already from finding out

00:10:20,220 --> 00:10:24,210
you know UI issues when an incident

00:10:22,410 --> 00:10:28,500
happens I'll give this particular

00:10:24,210 --> 00:10:29,880
example so this is a screenshot of you

00:10:28,500 --> 00:10:32,820
know recent version of Spinnaker's UI

00:10:29,880 --> 00:10:34,680
when you want to adjust the size of a

00:10:32,820 --> 00:10:36,810
server group that has auto scaling

00:10:34,680 --> 00:10:39,180
enabled and you can see you can set the

00:10:36,810 --> 00:10:40,590
min and you can set the max but it

00:10:39,180 --> 00:10:42,570
doesn't let you set the desire that's

00:10:40,590 --> 00:10:44,820
grayed out and there's some yellow text

00:10:42,570 --> 00:10:46,110
there that gives you some guidance on

00:10:44,820 --> 00:10:48,900
what to do if you want to scale a

00:10:46,110 --> 00:10:51,240
cluster up or down so so that like

00:10:48,900 --> 00:10:53,250
grayed out that field was not always

00:10:51,240 --> 00:10:57,510
grayed out and that yellow text was not

00:10:53,250 --> 00:11:01,140
always there so here's the story of how

00:10:57,510 --> 00:11:02,850
those those that UI changed right so so

00:11:01,140 --> 00:11:05,370
imagine you have a server group right a

00:11:02,850 --> 00:11:09,240
cluster of instances they're all the

00:11:05,370 --> 00:11:11,760
same so you can configure this right so

00:11:09,240 --> 00:11:14,590
we're on ec2 on ec2 basically there's

00:11:11,760 --> 00:11:16,240
like a desired field on a server group

00:11:14,590 --> 00:11:17,530
you know let's say you know you have it

00:11:16,240 --> 00:11:19,270
set 228 you've got a hundred

00:11:17,530 --> 00:11:21,310
twenty-eight instances you want to make

00:11:19,270 --> 00:11:23,590
it bigger you set it to 130 you see two

00:11:21,310 --> 00:11:26,550
will say okay it's currently 128 you

00:11:23,590 --> 00:11:30,640
want 130 I'll add a couple of instances

00:11:26,550 --> 00:11:33,580
now for Netflix are the demand on our

00:11:30,640 --> 00:11:35,530
service bill changes over time people

00:11:33,580 --> 00:11:37,300
watch more TV in the evening than they

00:11:35,530 --> 00:11:39,250
do in the morning and so we have this

00:11:37,300 --> 00:11:41,440
this is a graph of what's called SPS

00:11:39,250 --> 00:11:43,360
this is stream starts per second at a

00:11:41,440 --> 00:11:44,800
number of times every second you know

00:11:43,360 --> 00:11:46,660
someone hits the play button in this

00:11:44,800 --> 00:11:48,670
successful able to stream video so

00:11:46,660 --> 00:11:50,080
because our load changes over over the

00:11:48,670 --> 00:11:51,550
question of a day we're a good candidate

00:11:50,080 --> 00:11:53,350
for using auto scaling right so we use

00:11:51,550 --> 00:11:55,060
use auto scaling so that our clusters

00:11:53,350 --> 00:11:56,320
get bigger and smaller throughout the

00:11:55,060 --> 00:11:58,960
course of the day based on the load that

00:11:56,320 --> 00:12:00,700
they're seeing and so the way the

00:11:58,960 --> 00:12:02,860
autoscaler works basically so we use you

00:12:00,700 --> 00:12:04,390
know we're running on top of AWS so the

00:12:02,860 --> 00:12:06,160
autoscaler takes in metrics from the

00:12:04,390 --> 00:12:08,350
server group you know maybe like you

00:12:06,160 --> 00:12:10,570
know what the CPU utilization is or how

00:12:08,350 --> 00:12:13,060
many you know RPS each each node is

00:12:10,570 --> 00:12:15,100
getting and then based on some policy it

00:12:13,060 --> 00:12:17,710
fiddles with the desired right so if the

00:12:15,100 --> 00:12:19,210
loads going up it'll make that cluster

00:12:17,710 --> 00:12:21,130
larger it's going down and it'll make it

00:12:19,210 --> 00:12:23,590
smaller and then you can set min and max

00:12:21,130 --> 00:12:25,180
right I never wanted to go below 20

00:12:23,590 --> 00:12:30,190
instances or I never wanted to go above

00:12:25,180 --> 00:12:32,950
a thousand instances so one day so one

00:12:30,190 --> 00:12:34,510
day there was a team and they got an

00:12:32,950 --> 00:12:37,450
alert because their disks were filling

00:12:34,510 --> 00:12:39,730
up right that was like around 80% 80%

00:12:37,450 --> 00:12:41,170
distribution now why the disks are

00:12:39,730 --> 00:12:43,360
filling up is a story for another day

00:12:41,170 --> 00:12:44,980
but it is an interesting story and so

00:12:43,360 --> 00:12:48,130
what this team decided to do initially

00:12:44,980 --> 00:12:49,510
was well we need you know before we you

00:12:48,130 --> 00:12:51,130
know really diagnose this thing we want

00:12:49,510 --> 00:12:53,350
some more Headroom so we're gonna launch

00:12:51,130 --> 00:12:54,460
more instances so we have more so new

00:12:53,350 --> 00:12:56,230
instances will come up and they'll be

00:12:54,460 --> 00:12:58,420
empty so they'll have you know no disk

00:12:56,230 --> 00:13:01,870
usage and then you know we'll be fine

00:12:58,420 --> 00:13:03,100
initially and so the UI sort of looked

00:13:01,870 --> 00:13:06,040
like this right you can you can change

00:13:03,100 --> 00:13:09,250
min max or desired for a particular

00:13:06,040 --> 00:13:10,840
server group and so what that team did

00:13:09,250 --> 00:13:12,280
which is you know a reasonable thing is

00:13:10,840 --> 00:13:14,110
that they change desired right so our

00:13:12,280 --> 00:13:15,370
currently we're at 128 we want to make

00:13:14,110 --> 00:13:19,450
it bigger we're just gonna change that

00:13:15,370 --> 00:13:21,880
value to 256 so what happens so they

00:13:19,450 --> 00:13:25,750
they changed the the desired size of the

00:13:21,880 --> 00:13:27,790
server group to 256 then a c2 said okay

00:13:25,750 --> 00:13:28,529
this is a server group which got 128

00:13:27,790 --> 00:13:30,749
instances in it

00:13:28,529 --> 00:13:33,300
you want 256 I'm gonna start giving you

00:13:30,749 --> 00:13:34,740
128 new instances right now listen

00:13:33,300 --> 00:13:36,749
census takes some time to come up right

00:13:34,740 --> 00:13:39,240
it takes some time for a server to come

00:13:36,749 --> 00:13:42,389
up for the applications to do its you

00:13:39,240 --> 00:13:43,980
know yeah initialization logic in the

00:13:42,389 --> 00:13:46,470
meantime well those servers are coming

00:13:43,980 --> 00:13:49,079
out the autoscaler fires and says hey

00:13:46,470 --> 00:13:51,209
this cluster has got 256 instances in it

00:13:49,079 --> 00:13:53,579
but based on the load you only need 128

00:13:51,209 --> 00:13:58,350
so I'm gonna change your size back down

00:13:53,579 --> 00:14:00,569
to 128 so the new c2 says okay there's

00:13:58,350 --> 00:14:02,069
200 there's 20 56 instances in this in

00:14:00,569 --> 00:14:04,439
this cluster

00:14:02,069 --> 00:14:07,110
you only need 128 I'm gonna terminate

00:14:04,439 --> 00:14:09,689
128 instances based on the policy that

00:14:07,110 --> 00:14:12,509
was on there it terminated the 128 that

00:14:09,689 --> 00:14:13,620
were active and taking traffic and it

00:14:12,509 --> 00:14:15,420
didn't touch any of the ones that were

00:14:13,620 --> 00:14:17,160
coming up and not taking any traffic

00:14:15,420 --> 00:14:18,480
so basically terminated all the healthy

00:14:17,160 --> 00:14:21,389
instances and left the ones that were

00:14:18,480 --> 00:14:23,610
still coming up and so from the users

00:14:21,389 --> 00:14:25,170
perspective what's happened they've set

00:14:23,610 --> 00:14:27,629
the size that they've set the size of

00:14:25,170 --> 00:14:29,009
their cluster and then all the sudden

00:14:27,629 --> 00:14:30,600
their instances went from green to gray

00:14:29,009 --> 00:14:32,279
they didn't see that it got bigger and

00:14:30,600 --> 00:14:33,480
smaller it happened too quickly and so

00:14:32,279 --> 00:14:35,309
from their perspective all of a sudden

00:14:33,480 --> 00:14:37,079
spinnaker is disabled there their

00:14:35,309 --> 00:14:40,500
cluster right so they're trying to like

00:14:37,079 --> 00:14:43,199
rien a bêlit and so as a consequence of

00:14:40,500 --> 00:14:44,459
this this in said this was really an

00:14:43,199 --> 00:14:46,139
incident that happened that server group

00:14:44,459 --> 00:14:47,519
happened to be you know taking customer

00:14:46,139 --> 00:14:50,339
traffic and it was you know down for a

00:14:47,519 --> 00:14:53,189
little bit as a response the spinnaker

00:14:50,339 --> 00:14:54,899
team basically disallowed people from

00:14:53,189 --> 00:14:56,579
setting desire when auto-scaling was

00:14:54,899 --> 00:14:57,689
enabled to prevent this sort of thing

00:14:56,579 --> 00:14:59,790
from happening to prevent the user

00:14:57,689 --> 00:15:01,199
fighting the autoscaler so if you set

00:14:59,790 --> 00:15:06,089
the men up then the autoscaler will

00:15:01,199 --> 00:15:07,889
never go below that min so we also look

00:15:06,089 --> 00:15:11,009
for operational expertise gaps right so

00:15:07,889 --> 00:15:12,569
that is a case where there is some you

00:15:11,009 --> 00:15:14,879
know operational knowledge that teams

00:15:12,569 --> 00:15:16,620
don't have that's revealed through you

00:15:14,879 --> 00:15:18,360
know looking at an operational surprise

00:15:16,620 --> 00:15:19,889
in more detail and we can use the same

00:15:18,360 --> 00:15:21,720
example here right you could say well

00:15:19,889 --> 00:15:23,309
you know the tool is unsafe and so in

00:15:21,720 --> 00:15:24,929
some way we don't want to let people set

00:15:23,309 --> 00:15:26,490
desired but there's also a gap in

00:15:24,929 --> 00:15:28,829
understanding how it is that the

00:15:26,490 --> 00:15:30,449
autoscaler works right and if one team

00:15:28,829 --> 00:15:32,100
has that gap then that means that other

00:15:30,449 --> 00:15:33,929
people other teams you know we're gonna

00:15:32,100 --> 00:15:35,160
have that gap as well and people had

00:15:33,929 --> 00:15:36,809
team said well you know the reason we

00:15:35,160 --> 00:15:39,389
set desire is we've always set desired

00:15:36,809 --> 00:15:40,679
and it's always worked right so so their

00:15:39,389 --> 00:15:41,690
mental model was this thing worked it

00:15:40,679 --> 00:15:44,240
had never heard them

00:15:41,690 --> 00:15:45,800
pass and so identifying these sorts of

00:15:44,240 --> 00:15:47,990
problems where people don't actually

00:15:45,800 --> 00:15:50,720
understand enough of how the system

00:15:47,990 --> 00:15:53,060
works to use it safely is something

00:15:50,720 --> 00:15:53,840
that's really useful to reveal in the

00:15:53,060 --> 00:15:57,700
you know when you're looking at

00:15:53,840 --> 00:16:00,680
operational surprises I know there are

00:15:57,700 --> 00:16:02,030
resource gaps and to me I'm thinking in

00:16:00,680 --> 00:16:03,680
terms of like human resources in terms

00:16:02,030 --> 00:16:05,810
of teams that maybe you know

00:16:03,680 --> 00:16:11,690
understaffed overload it they're doing

00:16:05,810 --> 00:16:13,400
too much and so that creates a risk so

00:16:11,690 --> 00:16:16,070
so one of the reasons that that resource

00:16:13,400 --> 00:16:18,110
gaps are pernicious that it's dangerous

00:16:16,070 --> 00:16:18,980
when people get overloaded so one of

00:16:18,110 --> 00:16:22,130
them there's this thing called the law

00:16:18,980 --> 00:16:24,050
of strech systems and lost stress system

00:16:22,130 --> 00:16:25,370
says that basically whatever system you

00:16:24,050 --> 00:16:26,780
have and here I'm thinking of like

00:16:25,370 --> 00:16:28,760
socio-technical systems that include

00:16:26,780 --> 00:16:30,530
like like teams of people right so if

00:16:28,760 --> 00:16:32,690
you ever have like a team and it's like

00:16:30,530 --> 00:16:34,010
running at capacity even if you give it

00:16:32,690 --> 00:16:35,600
more capacity so if you have a team

00:16:34,010 --> 00:16:36,560
that's like over has too much work is

00:16:35,600 --> 00:16:38,330
overloaded you give them additional

00:16:36,560 --> 00:16:39,920
headcount and they have some slack

00:16:38,330 --> 00:16:41,510
they're eventually gonna be asked to

00:16:39,920 --> 00:16:43,670
take on more and more work until they're

00:16:41,510 --> 00:16:45,110
running at capacity again right and so

00:16:43,670 --> 00:16:46,130
all the incentives and organizations

00:16:45,110 --> 00:16:47,960
always push that way

00:16:46,130 --> 00:16:52,310
so all of us are always being pushed to

00:16:47,960 --> 00:16:54,350
run at capacity the other problem is

00:16:52,310 --> 00:16:55,910
this thing called the law of fluency all

00:16:54,350 --> 00:16:59,030
right and what the law of fluency says

00:16:55,910 --> 00:17:00,380
is that if you take someone who is

00:16:59,030 --> 00:17:02,450
skilled like a skilled engineer a

00:17:00,380 --> 00:17:05,000
skilled operator and you you keep giving

00:17:02,450 --> 00:17:06,319
them more work they seem like they can

00:17:05,000 --> 00:17:07,850
handle it right they don't give you any

00:17:06,319 --> 00:17:08,930
evidence that they are starting to get

00:17:07,850 --> 00:17:10,010
overloaded right there's there's this

00:17:08,930 --> 00:17:11,720
phrase that like if you want something

00:17:10,010 --> 00:17:13,010
done give it to a busy person right

00:17:11,720 --> 00:17:14,420
because basically people seem like they

00:17:13,010 --> 00:17:16,610
can keep handling more and more stuff

00:17:14,420 --> 00:17:18,319
and so you don't actually get a signal

00:17:16,610 --> 00:17:19,790
at any point in time that you're giving

00:17:18,319 --> 00:17:21,199
someone too much work so they and the

00:17:19,790 --> 00:17:21,740
people who are good or like yeah I can

00:17:21,199 --> 00:17:23,329
handle it

00:17:21,740 --> 00:17:24,709
right so you give them more and more and

00:17:23,329 --> 00:17:27,319
then eventually they just sort of fall

00:17:24,709 --> 00:17:29,870
over because it's too much so you'll see

00:17:27,319 --> 00:17:31,280
for example in operational surprises or

00:17:29,870 --> 00:17:33,110
incidents where people have the tasks

00:17:31,280 --> 00:17:35,150
which a lot they're like managing maybe

00:17:33,110 --> 00:17:36,560
too many deployments and it's a manual

00:17:35,150 --> 00:17:38,450
thing and so they've got to switch back

00:17:36,560 --> 00:17:40,040
and forth and and you know maybe they

00:17:38,450 --> 00:17:41,570
made an error in the switching but but

00:17:40,040 --> 00:17:42,890
one of the the contributors there is

00:17:41,570 --> 00:17:44,870
they actually have too many things to do

00:17:42,890 --> 00:17:46,610
and so it's increased their cognitive

00:17:44,870 --> 00:17:47,900
load it just increased the chances that

00:17:46,610 --> 00:17:50,260
someone is going to make a mistake and

00:17:47,900 --> 00:17:53,240
something bad is going to happen

00:17:50,260 --> 00:17:55,130
another thing we try to get out of up

00:17:53,240 --> 00:17:56,630
sees is building

00:17:55,130 --> 00:17:58,940
better understanding of how the system

00:17:56,630 --> 00:18:01,880
behaves right anytime an operational

00:17:58,940 --> 00:18:03,200
surprise occurs by definition the system

00:18:01,880 --> 00:18:04,970
has done something that we did not

00:18:03,200 --> 00:18:07,010
expect it to do there was something we

00:18:04,970 --> 00:18:08,960
didn't know about our system and so if

00:18:07,010 --> 00:18:10,789
we look at these in more detail we can

00:18:08,960 --> 00:18:12,080
get some better understanding of some

00:18:10,789 --> 00:18:15,799
piece of the system it's sort of like

00:18:12,080 --> 00:18:17,630
shining a light into your system so for

00:18:15,799 --> 00:18:18,950
example from one of the one of the oops

00:18:17,630 --> 00:18:21,289
write-ups that the spinnaker team did at

00:18:18,950 --> 00:18:22,910
one point you know one of the results

00:18:21,289 --> 00:18:24,440
was like it came as a surprise that

00:18:22,910 --> 00:18:26,330
service acts called service wise end

00:18:24,440 --> 00:18:27,559
point there's some behavior of spinnaker

00:18:26,330 --> 00:18:31,460
that the team didn't actually know at

00:18:27,559 --> 00:18:32,570
the time and the last thing I'm going to

00:18:31,460 --> 00:18:34,580
talk about in terms of like getting

00:18:32,570 --> 00:18:35,980
things out of boob sees that I'm

00:18:34,580 --> 00:18:38,780
actually the most interested in is this

00:18:35,980 --> 00:18:41,780
facilitating skill transfer is trying to

00:18:38,780 --> 00:18:42,980
figure out how to learn from the people

00:18:41,780 --> 00:18:46,190
inside your organization that are really

00:18:42,980 --> 00:18:49,309
really good at stuff so the challenge is

00:18:46,190 --> 00:18:50,840
that like people are really good the

00:18:49,309 --> 00:18:52,850
best way to really learn from them is to

00:18:50,840 --> 00:18:53,929
watch them right so if you are on if you

00:18:52,850 --> 00:18:55,789
ever been on a team with someone is

00:18:53,929 --> 00:18:56,960
really good it's it's very very

00:18:55,789 --> 00:18:58,520
educational because you're sort of

00:18:56,960 --> 00:19:01,370
working next to them you're seeing them

00:18:58,520 --> 00:19:04,280
in action solving real problems now the

00:19:01,370 --> 00:19:06,650
what we want to try to do is when we

00:19:04,280 --> 00:19:08,000
have people in our org who have to deal

00:19:06,650 --> 00:19:09,620
with operational surprises as they come

00:19:08,000 --> 00:19:11,600
up and troubleshoot them how can we

00:19:09,620 --> 00:19:13,429
capture how they solve that problem in

00:19:11,600 --> 00:19:15,110
context so we can learn you know what

00:19:13,429 --> 00:19:17,450
tools they use where do they look how do

00:19:15,110 --> 00:19:20,600
they know you know that signal meant you

00:19:17,450 --> 00:19:21,950
know this particular problem and that

00:19:20,600 --> 00:19:26,539
way we can sort of start to transfer

00:19:21,950 --> 00:19:28,039
expertise across the org all right so

00:19:26,539 --> 00:19:29,600
those are the sorts of things we want to

00:19:28,039 --> 00:19:31,370
learn so now you know an operational

00:19:29,600 --> 00:19:33,140
surprise has happened the question is

00:19:31,370 --> 00:19:35,090
like what do you what do you ask people

00:19:33,140 --> 00:19:38,330
who were involved to try to get this

00:19:35,090 --> 00:19:39,679
information out of them right and so so

00:19:38,330 --> 00:19:40,669
one of the things that we do we try to

00:19:39,679 --> 00:19:42,380
encourage if there's an interesting

00:19:40,669 --> 00:19:44,000
operational surprises to do some kind of

00:19:42,380 --> 00:19:46,070
investigation afterwards to go in and

00:19:44,000 --> 00:19:48,590
ask people questions about what's

00:19:46,070 --> 00:19:50,870
happened but don't call it an

00:19:48,590 --> 00:19:52,730
investigation because like an

00:19:50,870 --> 00:19:54,380
investigation sounds sort of

00:19:52,730 --> 00:19:55,789
intimidating right we have like criminal

00:19:54,380 --> 00:19:58,580
investigations we don't we're not

00:19:55,789 --> 00:19:59,929
looking for someone you know who did

00:19:58,580 --> 00:20:02,659
something wrong or we're looking for

00:19:59,929 --> 00:20:04,309
what happened and so we try not to be

00:20:02,659 --> 00:20:06,230
too heavy-handed there so we don't like

00:20:04,309 --> 00:20:09,250
interview people we we like have chats

00:20:06,230 --> 00:20:10,570
with them and the answer the

00:20:09,250 --> 00:20:12,220
the question we're always trying to

00:20:10,570 --> 00:20:13,539
answer whenever we look into an

00:20:12,220 --> 00:20:15,220
operational surprise is to answer the

00:20:13,539 --> 00:20:16,450
question like how did we get here

00:20:15,220 --> 00:20:18,700
right what were the series of events

00:20:16,450 --> 00:20:21,640
that that happened that led us to this

00:20:18,700 --> 00:20:23,530
point where the system did that in

00:20:21,640 --> 00:20:24,850
particular what's gonna happen when you

00:20:23,530 --> 00:20:26,230
look at operational surprises you're

00:20:24,850 --> 00:20:27,640
gonna see things like you know

00:20:26,230 --> 00:20:29,440
particular code was committed and

00:20:27,640 --> 00:20:31,210
deployed or a particular config change

00:20:29,440 --> 00:20:33,460
happened where someone was interacting

00:20:31,210 --> 00:20:34,690
with a UI in a certain way and like in

00:20:33,460 --> 00:20:35,830
hindsight looking back you might say

00:20:34,690 --> 00:20:37,030
well that was dangerous that they did

00:20:35,830 --> 00:20:38,740
that or you know they should have tested

00:20:37,030 --> 00:20:41,020
more or something but but what you

00:20:38,740 --> 00:20:42,970
really want to ask is you know how did

00:20:41,020 --> 00:20:44,650
it seem reasonable to that person in the

00:20:42,970 --> 00:20:46,720
moment to do that to you know do that

00:20:44,650 --> 00:20:49,510
push on you know Friday at 5:00 p.m. or

00:20:46,720 --> 00:20:51,490
you know deploy that code without

00:20:49,510 --> 00:20:52,690
testing it because it had to be

00:20:51,490 --> 00:20:54,039
reasonable to them in the moment right

00:20:52,690 --> 00:20:55,659
otherwise they wouldn't have done it and

00:20:54,039 --> 00:20:57,460
so the challenge is if you want to

00:20:55,659 --> 00:20:58,780
understand how it happened you have to

00:20:57,460 --> 00:21:00,669
try to get in their head as much as

00:20:58,780 --> 00:21:04,179
possible and figure out how it made

00:21:00,669 --> 00:21:05,950
sense to them to take those actions the

00:21:04,179 --> 00:21:07,510
other thing we try to do is not just

00:21:05,950 --> 00:21:09,850
look it's sort of like a single chain

00:21:07,510 --> 00:21:12,549
back but look at all what are all the

00:21:09,850 --> 00:21:14,919
different things that had to happen for

00:21:12,549 --> 00:21:16,299
the operational Surprise to occur so so

00:21:14,919 --> 00:21:18,130
almost always in complex systems it's

00:21:16,299 --> 00:21:19,419
not just one simple thing that happened

00:21:18,130 --> 00:21:20,650
there's usually a combination of things

00:21:19,419 --> 00:21:22,690
that are all sort of intersecting in

00:21:20,650 --> 00:21:23,860
time and I'm going to give some examples

00:21:22,690 --> 00:21:26,350
a little bit later on in the talk from

00:21:23,860 --> 00:21:28,210
spinnaker oopsies about different kinds

00:21:26,350 --> 00:21:32,890
of contributors that all have to be true

00:21:28,210 --> 00:21:34,330
for an operational surprise to occur the

00:21:32,890 --> 00:21:36,460
last thing I'll talk about on this this

00:21:34,330 --> 00:21:38,500
topic is you want to try to talk to

00:21:36,460 --> 00:21:40,539
multiple people that are involved so one

00:21:38,500 --> 00:21:42,669
of the challenges traditionally is that

00:21:40,539 --> 00:21:44,830
you know a person who goes and does you

00:21:42,669 --> 00:21:46,390
know looks into an investment incident

00:21:44,830 --> 00:21:48,220
or an operational surprise was directly

00:21:46,390 --> 00:21:49,480
involved in some way right they were the

00:21:48,220 --> 00:21:50,830
one who made the change or they happened

00:21:49,480 --> 00:21:53,350
to be on call at the time so they were

00:21:50,830 --> 00:21:54,250
like the incident commander but but the

00:21:53,350 --> 00:21:55,929
challenge is that there is multiple

00:21:54,250 --> 00:21:56,559
people that are interacting and each of

00:21:55,929 --> 00:21:59,020
them is going to have their own

00:21:56,559 --> 00:22:00,340
perspective and so the best way to

00:21:59,020 --> 00:22:01,929
capture those perspectives is to have

00:22:00,340 --> 00:22:04,360
someone who was not directly involved

00:22:01,929 --> 00:22:07,960
though and talked to multiple people and

00:22:04,360 --> 00:22:08,260
try to get their stories out of this all

00:22:07,960 --> 00:22:10,059
right

00:22:08,260 --> 00:22:11,770
so let's say the surprise has happened

00:22:10,059 --> 00:22:13,270
you believe that you can learn something

00:22:11,770 --> 00:22:15,220
you've gone in and you've talked to a

00:22:13,270 --> 00:22:16,720
bunch of people now the question is how

00:22:15,220 --> 00:22:18,520
do you capture this in a way that's

00:22:16,720 --> 00:22:19,750
useful for the organization right if

00:22:18,520 --> 00:22:21,070
you've been in the investigator you've

00:22:19,750 --> 00:22:22,700
actually learned a lot but you want

00:22:21,070 --> 00:22:25,860
other people to learn from it

00:22:22,700 --> 00:22:29,120
so you know we have a template but like

00:22:25,860 --> 00:22:32,460
if you only did one thing if you if you

00:22:29,120 --> 00:22:33,660
investigated an operational surprise the

00:22:32,460 --> 00:22:35,010
most important thing to try to capture

00:22:33,660 --> 00:22:37,440
is what we call a narrative description

00:22:35,010 --> 00:22:39,780
a narrative description is basically a

00:22:37,440 --> 00:22:42,390
story of what happened like in order of

00:22:39,780 --> 00:22:44,460
time not like bullet points but actually

00:22:42,390 --> 00:22:45,930
telling a story and it's sort of like

00:22:44,460 --> 00:22:49,700
multiple stories does multiple people

00:22:45,930 --> 00:22:52,050
were involved but the challenge is that

00:22:49,700 --> 00:22:53,940
people love stories right people are

00:22:52,050 --> 00:22:56,550
most receptive to information that's

00:22:53,940 --> 00:22:58,680
transferred that way like every single

00:22:56,550 --> 00:23:01,230
human culture there's ever been story

00:22:58,680 --> 00:23:03,720
then studied use a storytelling and if

00:23:01,230 --> 00:23:05,490
you like go to the bar here and talk to

00:23:03,720 --> 00:23:07,260
people who are in operations they will

00:23:05,490 --> 00:23:09,030
just tell you you know incident stories

00:23:07,260 --> 00:23:12,750
on their own right we like to talk about

00:23:09,030 --> 00:23:14,820
this and so it's a great way to get the

00:23:12,750 --> 00:23:18,720
surprise learnings to stick in people's

00:23:14,820 --> 00:23:21,180
minds if you can frame it as a story in

00:23:18,720 --> 00:23:23,940
terms of the like the level of content

00:23:21,180 --> 00:23:25,260
we we aim for like how much to explain

00:23:23,940 --> 00:23:26,910
because there's you know you're talking

00:23:25,260 --> 00:23:28,200
about a failure of an internal system

00:23:26,910 --> 00:23:31,860
there's lots of internal systems that

00:23:28,200 --> 00:23:33,360
are involved in terms of like who who's

00:23:31,860 --> 00:23:36,060
the audience that you're aiming for what

00:23:33,360 --> 00:23:37,560
we tell people is imagine you're writing

00:23:36,060 --> 00:23:39,780
this for someone who just recently got

00:23:37,560 --> 00:23:41,520
hired onto the team and you're trying to

00:23:39,780 --> 00:23:44,250
bring them up to speed on how the system

00:23:41,520 --> 00:23:46,380
works right and so if you give them some

00:23:44,250 --> 00:23:48,300
of these write ups and you write it as

00:23:46,380 --> 00:23:49,710
if that you know the person just join

00:23:48,300 --> 00:23:50,970
they sort of know a little bit but not

00:23:49,710 --> 00:23:52,410
too much you'll you'll get the right

00:23:50,970 --> 00:23:53,850
you'll hit sort of the right mark in

00:23:52,410 --> 00:23:55,290
terms of how much you need to explain

00:23:53,850 --> 00:23:57,000
about you know what what these internal

00:23:55,290 --> 00:23:58,590
systems are what they do they'll link

00:23:57,000 --> 00:24:03,120
out to explanations and other Doc's and

00:23:58,590 --> 00:24:05,970
things like that all right so then we

00:24:03,120 --> 00:24:06,960
also talked about in addition to having

00:24:05,970 --> 00:24:08,970
a narrative description we try to

00:24:06,960 --> 00:24:10,980
capture contributing factors we try to

00:24:08,970 --> 00:24:13,440
capture you know what were what were all

00:24:10,980 --> 00:24:16,290
of the things that had to be true for an

00:24:13,440 --> 00:24:17,700
operational surprise to occur so here

00:24:16,290 --> 00:24:20,250
are some examples of contributing

00:24:17,700 --> 00:24:22,980
factors that we pulled from oopsies that

00:24:20,250 --> 00:24:25,620
were done by the spanker team so one of

00:24:22,980 --> 00:24:28,080
them is about front fifty front fifty is

00:24:25,620 --> 00:24:30,240
this like service that provides like

00:24:28,080 --> 00:24:31,770
application metadata information but all

00:24:30,240 --> 00:24:33,300
the so basically metadata information

00:24:31,770 --> 00:24:35,820
for all the applications that are that

00:24:33,300 --> 00:24:38,760
are managed by spinnaker and there was a

00:24:35,820 --> 00:24:40,620
situation where application metadata for

00:24:38,760 --> 00:24:43,110
some of the apps in front 50 was

00:24:40,620 --> 00:24:45,420
inconsistent in a weird way so if you

00:24:43,110 --> 00:24:47,730
tried to write it to change the metadata

00:24:45,420 --> 00:24:49,380
for an app it would say okay I wrote it

00:24:47,730 --> 00:24:50,760
and then you read it back and it hadn't

00:24:49,380 --> 00:24:52,290
changed and so there was this other

00:24:50,760 --> 00:24:54,030
system out there there was a declarative

00:24:52,290 --> 00:24:55,230
thing that was like trying to modify the

00:24:54,030 --> 00:24:56,550
metadata for an app and they would try

00:24:55,230 --> 00:24:57,900
to write it and would say ok and we read

00:24:56,550 --> 00:24:59,370
it back and say no it hasn't changed yet

00:24:57,900 --> 00:25:04,980
and it just do that over and over and

00:24:59,370 --> 00:25:07,320
over again so another example of a kind

00:25:04,980 --> 00:25:10,410
of contributing factor that we talked

00:25:07,320 --> 00:25:12,330
about so this one is really great I

00:25:10,410 --> 00:25:15,090
Kristen there's a similar this one has

00:25:12,330 --> 00:25:16,620
to do with the operational surprise that

00:25:15,090 --> 00:25:18,090
I referenced earlier in like that tweet

00:25:16,620 --> 00:25:20,700
where we they ended up accidentally

00:25:18,090 --> 00:25:22,050
running clusters too big so similar

00:25:20,700 --> 00:25:23,850
feature was already in use had already

00:25:22,050 --> 00:25:25,890
been deployed for a different use case

00:25:23,850 --> 00:25:28,380
so enabling it in this case seemed to be

00:25:25,890 --> 00:25:29,250
low risk right and so this is really

00:25:28,380 --> 00:25:31,500
interesting because there's a

00:25:29,250 --> 00:25:33,510
distinction between when we we take a

00:25:31,500 --> 00:25:35,250
risk and when we run a risk so when we

00:25:33,510 --> 00:25:37,410
take a risk we're doing something that's

00:25:35,250 --> 00:25:38,760
deliberately risky right so let's say

00:25:37,410 --> 00:25:40,200
like a Netflix if you did like a

00:25:38,760 --> 00:25:41,880
deployment to all three regions at the

00:25:40,200 --> 00:25:44,400
same time like we would say that you're

00:25:41,880 --> 00:25:46,860
deliberately being risky or if you you

00:25:44,400 --> 00:25:48,690
know deploy a change without testing it

00:25:46,860 --> 00:25:51,840
at all we say you're deliberately being

00:25:48,690 --> 00:25:53,670
risky on the other hand if you if you

00:25:51,840 --> 00:25:55,560
make a change and you don't know that

00:25:53,670 --> 00:25:57,510
it's risky but it is then you're running

00:25:55,560 --> 00:26:00,030
a risk right you you you don't have that

00:25:57,510 --> 00:26:02,130
knowledge and so there's no amount of

00:26:00,030 --> 00:26:04,710
telling people to be more careful that

00:26:02,130 --> 00:26:06,150
will prevent you from having issues when

00:26:04,710 --> 00:26:07,590
you're running a risk when the risk is

00:26:06,150 --> 00:26:09,540
not known to the people who are making

00:26:07,590 --> 00:26:10,680
those changes and and it's very often

00:26:09,540 --> 00:26:12,210
the case that they didn't know that

00:26:10,680 --> 00:26:16,560
changeless particular change was risky

00:26:12,210 --> 00:26:19,320
in the moment another one I really like

00:26:16,560 --> 00:26:21,690
a person was out sick when the feature

00:26:19,320 --> 00:26:24,180
was deployed right so here is a case

00:26:21,690 --> 00:26:25,980
where a particular service was sort of

00:26:24,180 --> 00:26:27,210
behaving in an expected way and the

00:26:25,980 --> 00:26:29,850
person that had the most knowledge about

00:26:27,210 --> 00:26:32,250
the way that service behaved happened to

00:26:29,850 --> 00:26:33,870
be out that day right this typically

00:26:32,250 --> 00:26:35,790
doesn't show up in like a traditional

00:26:33,870 --> 00:26:37,680
root cause analysis right up but it's

00:26:35,790 --> 00:26:39,210
really important right and one of the

00:26:37,680 --> 00:26:40,860
challenges for us because of law of

00:26:39,210 --> 00:26:42,660
strech systems is that people tend to

00:26:40,860 --> 00:26:43,770
partition their knowledge about the way

00:26:42,660 --> 00:26:45,600
the system works right we're all really

00:26:43,770 --> 00:26:46,890
busy I take you know this is the part of

00:26:45,600 --> 00:26:48,930
the system that I sort of worked on the

00:26:46,890 --> 00:26:50,520
most I know this part the best you know

00:26:48,930 --> 00:26:52,230
part the best it sort of reduces

00:26:50,520 --> 00:26:54,240
cognitive load if we do that that

00:26:52,230 --> 00:26:55,920
separation that way but it introduces

00:26:54,240 --> 00:26:57,000
risk because then only you know one

00:26:55,920 --> 00:26:59,670
person or a small number of people

00:26:57,000 --> 00:27:01,350
really know that that well and so it's

00:26:59,670 --> 00:27:04,080
nice to be able to call that explicitly

00:27:01,350 --> 00:27:05,520
say hey there's actually a risk here you

00:27:04,080 --> 00:27:07,290
know this person gets sick then

00:27:05,520 --> 00:27:08,580
something bad really bad could happen if

00:27:07,290 --> 00:27:10,980
something happens to that part of the

00:27:08,580 --> 00:27:11,910
system so in addition to looking at

00:27:10,980 --> 00:27:14,220
contributors we also talked about

00:27:11,910 --> 00:27:15,540
mitigators we also talked about what are

00:27:14,220 --> 00:27:17,130
the things that if they weren't present

00:27:15,540 --> 00:27:21,870
things would have been even worse than

00:27:17,130 --> 00:27:25,470
they were so one example from it from a

00:27:21,870 --> 00:27:27,480
spinnaker oops is that they said there

00:27:25,470 --> 00:27:29,370
was there was a change and that the main

00:27:27,480 --> 00:27:31,020
spinnaker deployment you know got into

00:27:29,370 --> 00:27:33,090
trouble but there was his other

00:27:31,020 --> 00:27:35,430
spinnaker deployment in staging which

00:27:33,090 --> 00:27:37,290
was not actually designed to be used for

00:27:35,430 --> 00:27:38,700
recovery but happened to be there and

00:27:37,290 --> 00:27:42,390
the spinnaker team was able to improvise

00:27:38,700 --> 00:27:45,840
and to leverage that staging stack to

00:27:42,390 --> 00:27:47,670
get in and you know basically use it to

00:27:45,840 --> 00:27:50,190
fix the main the main production

00:27:47,670 --> 00:27:51,300
environment right and this is

00:27:50,190 --> 00:27:53,250
interesting because what you'll see

00:27:51,300 --> 00:27:54,630
sometimes in some cases you'll see well

00:27:53,250 --> 00:27:56,580
there's this legacy thing we never

00:27:54,630 --> 00:27:57,750
retired and it bit us and then sometimes

00:27:56,580 --> 00:27:58,860
just say well there's this legacy thing

00:27:57,750 --> 00:28:00,780
that we never retired and then we

00:27:58,860 --> 00:28:02,520
actually ended up having to use it to

00:28:00,780 --> 00:28:04,500
save us in some other case here wasn't

00:28:02,520 --> 00:28:06,660
legacy which is staging but like it's

00:28:04,500 --> 00:28:08,070
not it's never sort of black and white

00:28:06,660 --> 00:28:09,270
that you should you should do X I get

00:28:08,070 --> 00:28:10,590
rid of the legacy thing or get rid of

00:28:09,270 --> 00:28:11,640
the staging things sometimes these

00:28:10,590 --> 00:28:13,650
things that are still around actually

00:28:11,640 --> 00:28:15,720
you're able to leverage them to to help

00:28:13,650 --> 00:28:17,100
you out this is more of a example of

00:28:15,720 --> 00:28:18,180
sort of I would say like improvisation

00:28:17,100 --> 00:28:21,270
what they're able to use something that

00:28:18,180 --> 00:28:24,150
was around to save them another one

00:28:21,270 --> 00:28:27,930
another example of a mitigator was

00:28:24,150 --> 00:28:29,870
another so in the case where a several

00:28:27,930 --> 00:28:31,890
clusters were basically size too large

00:28:29,870 --> 00:28:33,360
there's another team at Netflix called

00:28:31,890 --> 00:28:35,730
the demand engineering team that's

00:28:33,360 --> 00:28:37,020
involved in doing our fail overs so when

00:28:35,730 --> 00:28:38,750
we redirect traffic to different regions

00:28:37,020 --> 00:28:41,280
they have a bunch of tooling around

00:28:38,750 --> 00:28:42,750
sizing many many clusters because they

00:28:41,280 --> 00:28:44,190
need to do that when we when we failover

00:28:42,750 --> 00:28:46,230
to a different region we have to resize

00:28:44,190 --> 00:28:47,910
many clusters at once and so when we

00:28:46,230 --> 00:28:49,800
accidentally scaled up too many clusters

00:28:47,910 --> 00:28:53,160
we're able to leverage the expertise of

00:28:49,800 --> 00:28:54,450
that particular team to be able to you

00:28:53,160 --> 00:28:57,230
know bring the clusters back down to

00:28:54,450 --> 00:28:57,230
regular size

00:28:58,340 --> 00:29:02,270
contributors are sort of very specific

00:29:00,169 --> 00:29:04,010
to a particular operational surprise

00:29:02,270 --> 00:29:06,049
risks are like a little bit higher level

00:29:04,010 --> 00:29:09,860
they're a little bit more generalizable

00:29:06,049 --> 00:29:12,350
knowledge that we've acquired from from

00:29:09,860 --> 00:29:14,320
a surprise so here's another one there's

00:29:12,350 --> 00:29:16,460
one kind of thing that I really like so

00:29:14,320 --> 00:29:17,960
this is one risk the regression occurred

00:29:16,460 --> 00:29:20,150
in an area spinnaker that is difficult

00:29:17,960 --> 00:29:24,409
to test right so this is a great example

00:29:20,150 --> 00:29:25,429
of a risk where you know the the parts

00:29:24,409 --> 00:29:27,500
of code that are hard to test or risky

00:29:25,429 --> 00:29:29,360
because they're less likely to be you

00:29:27,500 --> 00:29:34,220
know tested well right because they're

00:29:29,360 --> 00:29:37,340
they're harder another one some some

00:29:34,220 --> 00:29:38,809
pools and cues were misconfigured and

00:29:37,340 --> 00:29:41,809
this is also sort of a scary risk

00:29:38,809 --> 00:29:43,549
because it's really hard to evaluate

00:29:41,809 --> 00:29:45,679
whether your your things like

00:29:43,549 --> 00:29:47,149
operational configuration like like pool

00:29:45,679 --> 00:29:49,279
like you know thread pools or connection

00:29:47,149 --> 00:29:51,230
pools are configured correctly you you

00:29:49,279 --> 00:29:52,460
can't unit test that you can't

00:29:51,230 --> 00:29:53,929
integration test it because these are

00:29:52,460 --> 00:29:56,149
sorts of things that happen like the

00:29:53,929 --> 00:29:59,240
these sorts of operational configuration

00:29:56,149 --> 00:30:00,740
parameters are things that hurt you when

00:29:59,240 --> 00:30:02,779
load hits a certain you know when you

00:30:00,740 --> 00:30:05,240
get a certain certain load pattern right

00:30:02,779 --> 00:30:07,820
not just like one thing going in and so

00:30:05,240 --> 00:30:09,110
they're harder to evaluate a priori

00:30:07,820 --> 00:30:12,470
before you push them out into into

00:30:09,110 --> 00:30:14,299
production and the last part I'll talk

00:30:12,470 --> 00:30:15,890
about the last sort of template thing

00:30:14,299 --> 00:30:18,830
I'll talk about is is that we put in our

00:30:15,890 --> 00:30:20,480
write-ups our difficulties in handling

00:30:18,830 --> 00:30:23,450
what are some examples of things that

00:30:20,480 --> 00:30:25,460
were particularly hard to deal with in

00:30:23,450 --> 00:30:30,230
the moment when they when they surprise

00:30:25,460 --> 00:30:33,950
was occurring so one example they had

00:30:30,230 --> 00:30:35,899
was observability blind spots so in a

00:30:33,950 --> 00:30:37,580
particular case where they had a problem

00:30:35,899 --> 00:30:39,679
with Redis with a connection pool leak

00:30:37,580 --> 00:30:41,659
and they didn't have metrics around that

00:30:39,679 --> 00:30:43,010
and so because they didn't have metrics

00:30:41,659 --> 00:30:44,750
around that it was hard to figure out in

00:30:43,010 --> 00:30:47,510
the moment what what exactly was

00:30:44,750 --> 00:30:49,220
happening with Redis what did Chen what

00:30:47,510 --> 00:30:51,770
had changed right so we often use

00:30:49,220 --> 00:30:53,090
temporal information to see you know

00:30:51,770 --> 00:30:55,429
well how is it behaving now versus how

00:30:53,090 --> 00:30:56,450
is it behaving you know a day ago or

00:30:55,429 --> 00:30:58,039
whatever when it seemed to be normal

00:30:56,450 --> 00:31:02,029
they didn't have those metrics in that

00:30:58,039 --> 00:31:04,100
case and once again you can see you know

00:31:02,029 --> 00:31:06,230
in in the pull requests in the open

00:31:04,100 --> 00:31:09,880
source as a response to that they added

00:31:06,230 --> 00:31:13,600
instrumentation to the the Jettas client

00:31:09,880 --> 00:31:17,169
and finally last one I'll talk about in

00:31:13,600 --> 00:31:18,400
terms of difficulty in handling is so

00:31:17,169 --> 00:31:19,990
they made a change to the cloud drivers

00:31:18,400 --> 00:31:22,240
service that got pushed out at 3 p.m.

00:31:19,990 --> 00:31:24,910
and they didn't get paged for a problem

00:31:22,240 --> 00:31:27,190
until 5:30 right and so often what we

00:31:24,910 --> 00:31:29,110
will do is when you know we hit an issue

00:31:27,190 --> 00:31:30,039
in production we will ask what were the

00:31:29,110 --> 00:31:31,390
one of the changes that happened

00:31:30,039 --> 00:31:34,090
immediately beforehand right and

00:31:31,390 --> 00:31:35,830
typically that's a pretty good good clue

00:31:34,090 --> 00:31:37,450
a guide about like what are the

00:31:35,830 --> 00:31:39,610
candidates but when there's a like a

00:31:37,450 --> 00:31:42,220
latency period when there's a lag time

00:31:39,610 --> 00:31:44,890
between when we made that change and

00:31:42,220 --> 00:31:48,309
when we saw impact then it's much harder

00:31:44,890 --> 00:31:50,799
to diagnose what's going on all right so

00:31:48,309 --> 00:31:52,809
so if you only take away some of three

00:31:50,799 --> 00:31:55,600
things from from this talk what I hope

00:31:52,809 --> 00:31:56,950
you'll take away is one anytime an

00:31:55,600 --> 00:31:58,990
operational surprise happens in

00:31:56,950 --> 00:32:00,669
production even if there's no business

00:31:58,990 --> 00:32:02,230
impact at all there's there's a

00:32:00,669 --> 00:32:04,360
potential opportunity there for learning

00:32:02,230 --> 00:32:07,390
so we can learn something by digging in

00:32:04,360 --> 00:32:09,100
more if you're gonna dig in the kinds of

00:32:07,390 --> 00:32:11,559
questions you want to ask are the ones

00:32:09,100 --> 00:32:13,330
that answer like how did we get here

00:32:11,559 --> 00:32:14,860
not like what should have we done but

00:32:13,330 --> 00:32:17,110
like how like how did we get to that

00:32:14,860 --> 00:32:19,539
point what's what's the history of that

00:32:17,110 --> 00:32:21,280
led us to this position and the last one

00:32:19,539 --> 00:32:22,900
is once you've done that what you want

00:32:21,280 --> 00:32:25,480
to do is you want to tell a good story

00:32:22,900 --> 00:32:26,620
about what happened his stories are the

00:32:25,480 --> 00:32:31,870
kinds of things that stick in people's

00:32:26,620 --> 00:32:33,309
minds so finally if you are interested

00:32:31,870 --> 00:32:34,330
in this sort of thing and want to learn

00:32:33,309 --> 00:32:36,010
more about you know what kinds of

00:32:34,330 --> 00:32:37,840
questions can I ask you know how do I do

00:32:36,010 --> 00:32:41,010
this this kind of investigation anything

00:32:37,840 --> 00:32:44,559
so two good sources I'd recommend is the

00:32:41,010 --> 00:32:45,730
NC debriefing facilitation guide is one

00:32:44,559 --> 00:32:48,520
that has a lot of good guidance on

00:32:45,730 --> 00:32:49,780
questions to ask a book-length level

00:32:48,520 --> 00:32:51,880
there's the field guide to understanding

00:32:49,780 --> 00:32:53,770
human error there's actually written by

00:32:51,880 --> 00:32:55,720
someone with an aviation background but

00:32:53,770 --> 00:32:57,190
all of the principles that are used for

00:32:55,720 --> 00:32:58,570
investigating like airplane crashes

00:32:57,190 --> 00:33:00,159
still apply in our world

00:32:58,570 --> 00:33:01,809
and finally if you're interested in

00:33:00,159 --> 00:33:03,610
reading more sort of academic papers on

00:33:01,809 --> 00:33:06,400
this there's a bibliography at lick

00:33:03,610 --> 00:33:08,200
resilience papers Club and and that

00:33:06,400 --> 00:33:09,549
they're all you know and this talk and

00:33:08,200 --> 00:33:11,789
I'm happy to take any questions people

00:33:09,549 --> 00:33:11,789
have

00:33:13,710 --> 00:33:22,329
[Applause]

00:33:31,580 --> 00:33:37,139
all question you can ask what's that

00:33:35,820 --> 00:33:38,820
follow-up question you can kind of ask

00:33:37,139 --> 00:33:40,080
when people kind of pause when they're

00:33:38,820 --> 00:33:41,850
telling these stories they give you just

00:33:40,080 --> 00:33:47,429
like a little bit and like what can you

00:33:41,850 --> 00:33:49,470
do to kind of get more out yeah so what

00:33:47,429 --> 00:33:50,669
we ask well such a question so one I

00:33:49,470 --> 00:33:51,929
mean one easy question in like when

00:33:50,669 --> 00:33:54,240
you're asking what happens you can say

00:33:51,929 --> 00:33:55,679
you know we'll add um one it's like well

00:33:54,240 --> 00:33:57,389
what did you net acts like say you so

00:33:55,679 --> 00:33:58,950
I'll start by asking like okay like how

00:33:57,389 --> 00:34:00,960
did you get pulled into this and they'll

00:33:58,950 --> 00:34:02,009
they'll say bull they'll talk and then

00:34:00,960 --> 00:34:03,059
they'll tell you they did something and

00:34:02,009 --> 00:34:04,230
you might ask well how did you know to

00:34:03,059 --> 00:34:05,970
do that or like where did you look next

00:34:04,230 --> 00:34:07,049
you know what did you often are

00:34:05,970 --> 00:34:08,579
prompting like what did you do next

00:34:07,049 --> 00:34:10,950
after that you're sort of walking them

00:34:08,579 --> 00:34:13,069
these are trying to what what we try to

00:34:10,950 --> 00:34:15,510
do is like walk them through what

00:34:13,069 --> 00:34:16,980
happened like moment by moment sort of

00:34:15,510 --> 00:34:18,149
thing that they remember and so you're

00:34:16,980 --> 00:34:21,119
trying to get them to reconstruct in

00:34:18,149 --> 00:34:21,990
their mind what happened and and often

00:34:21,119 --> 00:34:24,030
though they'll tell you they did

00:34:21,990 --> 00:34:25,169
something and you may ask like how did

00:34:24,030 --> 00:34:27,599
you know to do that or you asked like

00:34:25,169 --> 00:34:28,770
where did you look boy I often ask is

00:34:27,599 --> 00:34:31,169
there anything like confusing or

00:34:28,770 --> 00:34:32,970
uncertain in the moment but yeah there's

00:34:31,169 --> 00:34:41,280
like a ton of like question prompts that

00:34:32,970 --> 00:34:44,790
are in those in those dogs yeah mark

00:34:41,280 --> 00:34:47,220
here so once it's documented how do you

00:34:44,790 --> 00:34:49,230
distribute it in a way that it makes its

00:34:47,220 --> 00:34:52,530
way out to the parties who are most

00:34:49,230 --> 00:34:54,599
interested in it it just seems like

00:34:52,530 --> 00:34:57,210
every case has something that somebody

00:34:54,599 --> 00:34:59,730
can learn from yeah so that's a very

00:34:57,210 --> 00:35:02,460
good question so we have an internal

00:34:59,730 --> 00:35:04,560
google group where people who are

00:35:02,460 --> 00:35:07,680
interested subscribe and we announce

00:35:04,560 --> 00:35:08,940
them out there there's a newsletter like

00:35:07,680 --> 00:35:10,650
there's an availability newsletter we

00:35:08,940 --> 00:35:12,569
have internally that goes out once a

00:35:10,650 --> 00:35:14,300
month that we collect the most

00:35:12,569 --> 00:35:17,280
interesting looking ones and link to

00:35:14,300 --> 00:35:19,650
there is an oopsie channel inside of

00:35:17,280 --> 00:35:21,750
slack which I will sometimes post sort

00:35:19,650 --> 00:35:25,349
of like interesting nuggets of things

00:35:21,750 --> 00:35:26,819
and like to encourage people to read but

00:35:25,349 --> 00:35:29,910
we're still exploring like what are

00:35:26,819 --> 00:35:32,299
effective channels for getting the word

00:35:29,910 --> 00:35:32,299
out on these

00:35:39,250 --> 00:35:44,290
[Laughter]

00:35:42,230 --> 00:35:44,290

YouTube URL: https://www.youtube.com/watch?v=uR0jsd0Xfpk


