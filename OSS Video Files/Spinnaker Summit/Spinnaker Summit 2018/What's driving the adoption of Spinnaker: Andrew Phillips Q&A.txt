Title: What's driving the adoption of Spinnaker: Andrew Phillips Q&A
Publication date: 2018-10-18
Playlist: Spinnaker Summit 2018
Description: 
	In this interview Andrew Phillips talks about trends around Spinnaker, what's driving its adoption and the symbiotic relationship between Spinnaker and Kubernetes.
Captions: 
	00:00:00,730 --> 00:00:12,370
[Music]

00:00:09,750 --> 00:00:15,580
hi this of navarre and we are here this

00:00:12,370 --> 00:00:19,510
pinnacle summit in Seattle and today we

00:00:15,580 --> 00:00:21,070
have with us Andrew from Google before

00:00:19,510 --> 00:00:22,869
we deep dive into this interview can you

00:00:21,070 --> 00:00:25,390
just tell us a bit about yourself what

00:00:22,869 --> 00:00:27,550
do you do at Google sure so my name is

00:00:25,390 --> 00:00:30,849
Andrew Phillips I'm a product manager in

00:00:27,550 --> 00:00:32,800
Google cloud working in the area of CI

00:00:30,849 --> 00:00:34,780
CD and releases and rollouts in general

00:00:32,800 --> 00:00:36,910
and that means that I work very closely

00:00:34,780 --> 00:00:39,550
with the Google team that works on

00:00:36,910 --> 00:00:40,690
spinnaker and so as a short form you

00:00:39,550 --> 00:00:42,850
might say that I'm the product manager

00:00:40,690 --> 00:00:44,140
for Google spinnaker after was there a

00:00:42,850 --> 00:00:45,519
challenge in terms of continuous

00:00:44,140 --> 00:00:47,679
delivery or people were just doing their

00:00:45,519 --> 00:00:49,989
own you know do yourself thingy or there

00:00:47,679 --> 00:00:51,579
were solutions so what I want to

00:00:49,989 --> 00:00:53,140
understand is we have the spinnaker fit

00:00:51,579 --> 00:00:54,999
you know that suddenly it's becoming

00:00:53,140 --> 00:00:57,999
gaining adoption and it's becoming

00:00:54,999 --> 00:01:00,429
popular yeah I think I mean the irony is

00:00:57,999 --> 00:01:03,249
that so software delivery is always both

00:01:00,429 --> 00:01:05,290
solved and unsolved at the same time it

00:01:03,249 --> 00:01:08,020
solved because over time we build up an

00:01:05,290 --> 00:01:10,540
increasingly large set of best practices

00:01:08,020 --> 00:01:12,580
that we try to achieve but it's also

00:01:10,540 --> 00:01:14,590
unsolved because every five minutes we

00:01:12,580 --> 00:01:17,530
seem to invent some new runtime platform

00:01:14,590 --> 00:01:19,479
to which we want to deploy so spinnaker

00:01:17,530 --> 00:01:22,240
obviously you know was originally

00:01:19,479 --> 00:01:24,820
designed if you like as the solution for

00:01:22,240 --> 00:01:26,380
the problem of deployment of virtual

00:01:24,820 --> 00:01:29,049
machine based groups as company we're

00:01:26,380 --> 00:01:30,729
trying to move to the cloud and you

00:01:29,049 --> 00:01:33,189
could argue that that's almost a solve

00:01:30,729 --> 00:01:35,170
problem now but of course as an industry

00:01:33,189 --> 00:01:37,030
we've unsolved that problem by now

00:01:35,170 --> 00:01:39,969
looking at other runtime technologies

00:01:37,030 --> 00:01:41,469
such as say kubernetes where once again

00:01:39,969 --> 00:01:43,689
everything is up in the air and once

00:01:41,469 --> 00:01:45,490
again everybody is trying to find out

00:01:43,689 --> 00:01:47,320
how they're supposed to do things and so

00:01:45,490 --> 00:01:49,750
I think one of the unique advantages of

00:01:47,320 --> 00:01:52,180
a tool like spinnaker is that it can

00:01:49,750 --> 00:01:54,520
bring experience of you know the

00:01:52,180 --> 00:01:56,229
incorporated best practices but also

00:01:54,520 --> 00:01:59,079
figure out how to apply them in a new

00:01:56,229 --> 00:02:01,450
space and to be clear I think my whilst

00:01:59,079 --> 00:02:04,060
it might be kubernetes today in three

00:02:01,450 --> 00:02:06,369
months 3 years 3 whatever it could be

00:02:04,060 --> 00:02:09,490
something totally different again and so

00:02:06,369 --> 00:02:11,080
you know over time the benefits that the

00:02:09,490 --> 00:02:12,880
tool like spinnaker has in terms of what

00:02:11,080 --> 00:02:14,680
it provides out of the box are just

00:02:12,880 --> 00:02:16,450
going to increase because we will always

00:02:14,680 --> 00:02:18,520
try to take some of the lessons that

00:02:16,450 --> 00:02:19,130
we've learned and apply them next time

00:02:18,520 --> 00:02:21,400
around

00:02:19,130 --> 00:02:24,440
so while you're talking about lessons

00:02:21,400 --> 00:02:27,020
what lessons have you seen the eat

00:02:24,440 --> 00:02:28,430
customers or users have learned or you

00:02:27,020 --> 00:02:30,590
yourself you know as part of your

00:02:28,430 --> 00:02:31,700
community have learned so I think

00:02:30,590 --> 00:02:34,220
there's a couple of really interesting

00:02:31,700 --> 00:02:36,140
things worth bearing in mind one is that

00:02:34,220 --> 00:02:38,540
spinnaker as a tool is very clearly

00:02:36,140 --> 00:02:40,520
focused on what most people perceive is

00:02:38,540 --> 00:02:43,520
that the back end of the sea icd

00:02:40,520 --> 00:02:44,540
pipeline most people think of CIT D is

00:02:43,520 --> 00:02:46,130
you know you've got code at the

00:02:44,540 --> 00:02:49,880
beginning and then you put lots of stuff

00:02:46,130 --> 00:02:51,440
in and then data production but the

00:02:49,880 --> 00:02:53,090
reality if you look at most large

00:02:51,440 --> 00:02:55,220
companies and in many different

00:02:53,090 --> 00:02:56,780
situations is that you have the

00:02:55,220 --> 00:02:58,970
developer feedback cycle at the

00:02:56,780 --> 00:03:00,650
beginning which is about you know I'm

00:02:58,970 --> 00:03:03,500
about to push a code change tell me

00:03:00,650 --> 00:03:05,780
something about it and then you have the

00:03:03,500 --> 00:03:08,720
rollout to production cycle at the back

00:03:05,780 --> 00:03:11,210
which is I have a release candidate make

00:03:08,720 --> 00:03:14,150
it get to production safely and those

00:03:11,210 --> 00:03:15,410
are very different processes and I think

00:03:14,150 --> 00:03:16,940
one of the valuable lessons and

00:03:15,410 --> 00:03:19,850
spinnaker is that it definitely makes

00:03:16,940 --> 00:03:21,800
sense certainly at a large scale to have

00:03:19,850 --> 00:03:23,390
a tool that is dedicated to the back end

00:03:21,800 --> 00:03:25,340
of the pipeline and that is really

00:03:23,390 --> 00:03:28,430
focused on solving the kind of problems

00:03:25,340 --> 00:03:30,080
that happen in that area such as you

00:03:28,430 --> 00:03:31,640
know safe rollouts

00:03:30,080 --> 00:03:33,350
what are the times of day in which I can

00:03:31,640 --> 00:03:37,040
do rollouts how can I put in safeguards

00:03:33,350 --> 00:03:38,870
to prevent teams accidentally shutting

00:03:37,040 --> 00:03:40,850
off all applications so that there's

00:03:38,870 --> 00:03:43,100
nothing serving user traffic how do I

00:03:40,850 --> 00:03:45,490
ensure standardization and compliance

00:03:43,100 --> 00:03:47,600
how do I even do proper access control

00:03:45,490 --> 00:03:49,940
because if you look at the front of the

00:03:47,600 --> 00:03:51,740
pipeline that's typically where

00:03:49,940 --> 00:03:53,780
developers have to have a lot of control

00:03:51,740 --> 00:03:55,850
because they have to determine how their

00:03:53,780 --> 00:03:57,320
code gets built how they want to run

00:03:55,850 --> 00:04:00,230
their unit tests all these kind of

00:03:57,320 --> 00:04:01,850
things so they have one tool that tries

00:04:00,230 --> 00:04:05,150
to be both incredibly developer

00:04:01,850 --> 00:04:07,700
accessible and also standardized and

00:04:05,150 --> 00:04:09,230
compliant is very very difficult so I

00:04:07,700 --> 00:04:11,210
think one of the main lessons indeed is

00:04:09,230 --> 00:04:13,880
that spinnaker it makes sense to have a

00:04:11,210 --> 00:04:15,740
tool for the rollout part and a tool for

00:04:13,880 --> 00:04:17,680
the developer part I think there's other

00:04:15,740 --> 00:04:20,780
important lessons in spinnaker which we

00:04:17,680 --> 00:04:23,720
we keep relearning as an organization as

00:04:20,780 --> 00:04:25,640
an industry which is that in order to do

00:04:23,720 --> 00:04:28,100
deployments at scale you need some level

00:04:25,640 --> 00:04:29,680
of abstraction below what the base

00:04:28,100 --> 00:04:31,150
framework is

00:04:29,680 --> 00:04:33,130
there's always going to be some people

00:04:31,150 --> 00:04:35,199
in your organization that understand all

00:04:33,130 --> 00:04:37,210
the details you know from the chip to

00:04:35,199 --> 00:04:39,250
the hypervisor to kubernetes and all the

00:04:37,210 --> 00:04:41,080
way up but if you're an application

00:04:39,250 --> 00:04:43,539
developer in most companies you want to

00:04:41,080 --> 00:04:46,000
write some code you want to hit save and

00:04:43,539 --> 00:04:48,460
you just want things to work and

00:04:46,000 --> 00:04:50,770
spinnaker has a very interesting and

00:04:48,460 --> 00:04:53,020
nice abstractions in how it describes

00:04:50,770 --> 00:04:55,360
applications so that you can reason

00:04:53,020 --> 00:04:58,300
about them in some sense independent of

00:04:55,360 --> 00:04:59,350
the underlying runtime right and while

00:04:58,300 --> 00:05:02,050
you're talking about you know some of

00:04:59,350 --> 00:05:03,430
these lessons learned personally what

00:05:02,050 --> 00:05:04,630
are the key areas you know that you're

00:05:03,430 --> 00:05:05,800
like oh these are the ideas I'm

00:05:04,630 --> 00:05:08,949
interested I want to solve these

00:05:05,800 --> 00:05:10,479
problems for the community I mean I hope

00:05:08,949 --> 00:05:13,030
I would like to solve the problems that

00:05:10,479 --> 00:05:15,010
I see customers facing and also

00:05:13,030 --> 00:05:16,690
challenges that aren't well solved yet

00:05:15,010 --> 00:05:18,880
so I think at this present moment in

00:05:16,690 --> 00:05:20,949
time one of the big challenges we're

00:05:18,880 --> 00:05:22,889
seeing is what is the right abstraction

00:05:20,949 --> 00:05:25,030
layer for something like kubernetes

00:05:22,889 --> 00:05:26,650
given that that's the runtime most

00:05:25,030 --> 00:05:29,919
people are trying to work with right now

00:05:26,650 --> 00:05:33,130
and also how do we incorporate some new

00:05:29,919 --> 00:05:34,870
ideas that aren't that new but that have

00:05:33,130 --> 00:05:36,970
been brought into the mainstream if you

00:05:34,870 --> 00:05:39,760
like with kubernetes or specifically

00:05:36,970 --> 00:05:41,680
what I only call environments is code so

00:05:39,760 --> 00:05:43,780
the idea that rather than just having a

00:05:41,680 --> 00:05:45,699
pipeline that does arbitrary things and

00:05:43,780 --> 00:05:48,099
then at the end of the pipeline your

00:05:45,699 --> 00:05:50,050
production environment has changed we

00:05:48,099 --> 00:05:52,180
actually keep track of the changes we

00:05:50,050 --> 00:05:55,599
want to make by storing them in a

00:05:52,180 --> 00:05:57,370
repository but if you have to do that by

00:05:55,599 --> 00:05:58,900
hand as a lot of people are trying to do

00:05:57,370 --> 00:06:01,659
there's lots of things that can go wrong

00:05:58,900 --> 00:06:03,340
there's lots of you know very few

00:06:01,659 --> 00:06:05,800
fail-safes people need to know very

00:06:03,340 --> 00:06:07,419
low-level details and I think a tool

00:06:05,800 --> 00:06:10,120
like spinnaker can do an excellent job

00:06:07,419 --> 00:06:13,120
of both managing this underlying new

00:06:10,120 --> 00:06:16,599
idea and providing the right level of

00:06:13,120 --> 00:06:18,250
higher value information to a team so

00:06:16,599 --> 00:06:20,080
that for instance if you look at a pull

00:06:18,250 --> 00:06:23,260
request or if you look at an approval

00:06:20,080 --> 00:06:25,479
should we deploy the staging rather than

00:06:23,260 --> 00:06:26,979
just looking at a diff between two text

00:06:25,479 --> 00:06:27,870
files and trying to understand what that

00:06:26,979 --> 00:06:30,690
means

00:06:27,870 --> 00:06:32,340
you are told well what the team is

00:06:30,690 --> 00:06:34,200
trying to do it's trying to go from

00:06:32,340 --> 00:06:36,510
version X of the application to version

00:06:34,200 --> 00:06:38,790
y these are the code dips that are in

00:06:36,510 --> 00:06:41,190
that deployment these are the test

00:06:38,790 --> 00:06:42,660
results that have been passed etc etc so

00:06:41,190 --> 00:06:44,940
that's the kind of value a tool like

00:06:42,660 --> 00:06:46,350
spinnaker can provide one thing that is

00:06:44,940 --> 00:06:49,560
unique about spinnaker and I'm sure

00:06:46,350 --> 00:06:52,650
they're open source product share the

00:06:49,560 --> 00:06:53,970
same is that it's yes the balance

00:06:52,650 --> 00:06:55,440
between the users versus vendor is

00:06:53,970 --> 00:06:57,540
totally non different there are more

00:06:55,440 --> 00:06:59,970
users than vendors I think right now

00:06:57,540 --> 00:07:02,900
Google and Plex they are too big you

00:06:59,970 --> 00:07:06,150
know players which are like putting in

00:07:02,900 --> 00:07:08,040
so how does it really affect because if

00:07:06,150 --> 00:07:09,960
you even if you look at kubernetes it

00:07:08,040 --> 00:07:12,210
was something that was already been used

00:07:09,960 --> 00:07:13,890
in turning then open source so it has

00:07:12,210 --> 00:07:15,780
only proved itself and same as that came

00:07:13,890 --> 00:07:18,090
in spinnaker so when it comes to the

00:07:15,780 --> 00:07:19,950
confidence that users have how much

00:07:18,090 --> 00:07:21,480
troll does it pay or what is your real

00:07:19,950 --> 00:07:23,490
know kind of you know inside note that

00:07:21,480 --> 00:07:24,060
users are confident about this

00:07:23,490 --> 00:07:26,460
technology

00:07:24,060 --> 00:07:28,020
yeah I mean I think an excellent point

00:07:26,460 --> 00:07:30,420
and and to be clear I think you mean

00:07:28,020 --> 00:07:32,190
contributors and not just vendors so

00:07:30,420 --> 00:07:34,130
spinnaker is interesting in that yes you

00:07:32,190 --> 00:07:36,630
know if you look at the evolution of

00:07:34,130 --> 00:07:38,400
maturity of most open source projects

00:07:36,630 --> 00:07:40,470
there's indeed the background where does

00:07:38,400 --> 00:07:42,690
it come from and then there is the

00:07:40,470 --> 00:07:45,180
growth when you see not just the

00:07:42,690 --> 00:07:46,910
original creator but other companies and

00:07:45,180 --> 00:07:48,750
teams working and contributing and

00:07:46,910 --> 00:07:50,820
spinnaker is definitely being through

00:07:48,750 --> 00:07:52,410
that phase but then you have the that

00:07:50,820 --> 00:07:55,170
the next step which is typically that

00:07:52,410 --> 00:07:57,150
successful projects start attracting a

00:07:55,170 --> 00:08:00,270
level of commercial interest and

00:07:57,150 --> 00:08:01,830
involvement where you know typically VCS

00:08:00,270 --> 00:08:04,200
or investors are willing to put money on

00:08:01,830 --> 00:08:06,780
the line to fund a commercial ecosystem

00:08:04,200 --> 00:08:08,100
around a tool and I'm pleased to say

00:08:06,780 --> 00:08:09,720
that that's essentially where we are

00:08:08,100 --> 00:08:13,880
today with the spinnaker community as

00:08:09,720 --> 00:08:16,080
you see both the major cloud providers

00:08:13,880 --> 00:08:18,720
contributing actively to the user base

00:08:16,080 --> 00:08:20,520
but also you start to see a growth of a

00:08:18,720 --> 00:08:22,590
sort of little commercial ecosystem of

00:08:20,520 --> 00:08:24,450
vendors to help companies with their own

00:08:22,590 --> 00:08:28,230
premise needs for instance on-premises

00:08:24,450 --> 00:08:31,380
needs I think confidence is ultimately a

00:08:28,230 --> 00:08:33,810
matter of two things one is is the code

00:08:31,380 --> 00:08:36,540
itself good enough can I use it will it

00:08:33,810 --> 00:08:37,830
fall over at any point in time and I

00:08:36,540 --> 00:08:40,469
think spinnaker has been battle tested

00:08:37,830 --> 00:08:41,580
long enough that that really shouldn't

00:08:40,469 --> 00:08:43,919
be the point I think there are

00:08:41,580 --> 00:08:46,320
definitely still challenges around how

00:08:43,919 --> 00:08:49,170
much deep knowledge and expertise you

00:08:46,320 --> 00:08:51,360
need to have to run spinnaker well and

00:08:49,170 --> 00:08:54,360
we have work to do to make that easier

00:08:51,360 --> 00:08:55,890
but I personally I'm always more

00:08:54,360 --> 00:08:58,589
confident if I know that the thing that

00:08:55,890 --> 00:09:00,050
is a friction point for me right now is

00:08:58,589 --> 00:09:02,460
just that I don't have enough knowledge

00:09:00,050 --> 00:09:05,060
versus the feeling that the tool itself

00:09:02,460 --> 00:09:08,089
can't actually support what I want to do

00:09:05,060 --> 00:09:10,770
and then of course the other part is

00:09:08,089 --> 00:09:13,290
robustness of the tool of the code but

00:09:10,770 --> 00:09:15,150
also how long will it survive how long

00:09:13,290 --> 00:09:17,970
will it be around can I have confidence

00:09:15,150 --> 00:09:20,339
that in four or five years time I can

00:09:17,970 --> 00:09:21,900
still get support for this tool that it

00:09:20,339 --> 00:09:24,089
still will be maintained and so on and

00:09:21,900 --> 00:09:25,950
so forth and that is largely a function

00:09:24,089 --> 00:09:28,589
of both the contributor ecosystem and

00:09:25,950 --> 00:09:31,230
the vendor ecosystem and I think in in

00:09:28,589 --> 00:09:34,470
in both areas it's legitimate to say

00:09:31,230 --> 00:09:36,360
that spinnaker has great support in both

00:09:34,470 --> 00:09:38,339
directions and so people should not be

00:09:36,360 --> 00:09:40,890
concerned that spinnaker is going to be

00:09:38,339 --> 00:09:42,480
gone any time soon in fact on the

00:09:40,890 --> 00:09:45,420
opposite I own the country I think that

00:09:42,480 --> 00:09:48,089
as the kubernetes ecosystem kind of

00:09:45,420 --> 00:09:49,800
settles down and as more large companies

00:09:48,089 --> 00:09:52,260
start figuring out how they can deploy

00:09:49,800 --> 00:09:55,470
to kubernetes at scale we will see yet

00:09:52,260 --> 00:09:57,240
another uptick in spinnaker adoption and

00:09:55,470 --> 00:09:59,970
more interesting companies supporting

00:09:57,240 --> 00:10:01,500
spinnaker yeah while you're talking

00:09:59,970 --> 00:10:04,740
about it you know uptake in the adoption

00:10:01,500 --> 00:10:06,210
we are this is its second spinnaker

00:10:04,740 --> 00:10:08,820
summit but it's like kind of the first

00:10:06,210 --> 00:10:11,190
one so what are the trends that you have

00:10:08,820 --> 00:10:13,950
seen in the last one year so yeah I mean

00:10:11,190 --> 00:10:16,589
well I think if we look at the last year

00:10:13,950 --> 00:10:19,380
was definitely still you know a bunch of

00:10:16,589 --> 00:10:21,990
not met well friends but also a bunch of

00:10:19,380 --> 00:10:24,390
people who all in the know coming

00:10:21,990 --> 00:10:26,820
together you know at Netflix to have a

00:10:24,390 --> 00:10:28,230
sort of fun session this year indeed as

00:10:26,820 --> 00:10:30,510
you said it's a it's a proper

00:10:28,230 --> 00:10:32,580
quote/unquote grown-up conference we're

00:10:30,510 --> 00:10:35,040
at a very nice venue we have lots and

00:10:32,580 --> 00:10:37,950
lots of visitors and attendees from lots

00:10:35,040 --> 00:10:39,839
of different places I think a very

00:10:37,950 --> 00:10:42,050
healthy sign is that we have a bunch of

00:10:39,839 --> 00:10:44,520
people attending who are not necessarily

00:10:42,050 --> 00:10:45,870
that knowledgeable about spinnaker they

00:10:44,520 --> 00:10:48,990
are still investigating it they are

00:10:45,870 --> 00:10:50,310
considering it and that is a sign of a

00:10:48,990 --> 00:10:52,750
growing ecosystem

00:10:50,310 --> 00:10:56,050
I think there's also

00:10:52,750 --> 00:10:58,420
a bunch of large companies involved who

00:10:56,050 --> 00:11:01,030
are starting to share their experience

00:10:58,420 --> 00:11:02,470
but are looking to expand I mean I think

00:11:01,030 --> 00:11:04,750
if you look at and I've been through a

00:11:02,470 --> 00:11:07,330
bunch of these kind of ecosystem growth

00:11:04,750 --> 00:11:08,950
phases the beginning ones always the

00:11:07,330 --> 00:11:11,650
ones where everyone knows everyone and

00:11:08,950 --> 00:11:13,600
everyone is an expert and I think this

00:11:11,650 --> 00:11:15,850
year were very much seen there are a

00:11:13,600 --> 00:11:17,470
bunch of core experts a bunch of

00:11:15,850 --> 00:11:19,270
long-standing users who want to learn

00:11:17,470 --> 00:11:20,970
more and then a bunch of other people

00:11:19,270 --> 00:11:23,890
who are coming and who are interested

00:11:20,970 --> 00:11:25,390
and of course that means that we have to

00:11:23,890 --> 00:11:27,520
rethink how you know what kind of

00:11:25,390 --> 00:11:29,530
content we presented these events but

00:11:27,520 --> 00:11:32,350
that's a great sign for the growth of

00:11:29,530 --> 00:11:33,730
the ecosystem in general and what is I

00:11:32,350 --> 00:11:35,710
mean we have talked touched upon that

00:11:33,730 --> 00:11:37,780
but what is driving this you know growth

00:11:35,710 --> 00:11:39,190
and adoption so I think there's a

00:11:37,780 --> 00:11:40,330
there's a couple of things one I've

00:11:39,190 --> 00:11:42,490
mentioned this a few times already

00:11:40,330 --> 00:11:44,860
obviously it's this sort of the maturity

00:11:42,490 --> 00:11:48,190
curve of a tool like kubernetes I mean

00:11:44,860 --> 00:11:50,050
spinnaker I think very clearly is aimed

00:11:48,190 --> 00:11:51,580
at the you know the end of the

00:11:50,050 --> 00:11:53,800
deployment spectrum we're more

00:11:51,580 --> 00:11:55,180
complicated use cases sit if you're a

00:11:53,800 --> 00:11:57,550
small team or if you're running through

00:11:55,180 --> 00:12:00,430
a code lab or if you're five or ten

00:11:57,550 --> 00:12:02,140
people in a start-up spinnaker probably

00:12:00,430 --> 00:12:03,880
isn't the tool for you right now not

00:12:02,140 --> 00:12:06,460
because it's not usable or because it

00:12:03,880 --> 00:12:09,010
can't do what you want but because it

00:12:06,460 --> 00:12:11,260
brings a bunch of abstractions a bunch

00:12:09,010 --> 00:12:13,839
of you know concepts that you have to

00:12:11,260 --> 00:12:15,790
learn and if you're a small team more

00:12:13,839 --> 00:12:18,400
tools is always worse in some sense you

00:12:15,790 --> 00:12:20,670
try to use the smallest amount of

00:12:18,400 --> 00:12:24,850
automation necessary to get things done

00:12:20,670 --> 00:12:26,800
and so I think as kubernetes was or ever

00:12:24,850 --> 00:12:29,290
any new runtime as it's still young and

00:12:26,800 --> 00:12:31,450
is growing that first wave of initial

00:12:29,290 --> 00:12:32,830
adopters are people who are just messing

00:12:31,450 --> 00:12:34,360
around they're trying to make things

00:12:32,830 --> 00:12:36,100
work and they're not looking for any

00:12:34,360 --> 00:12:38,770
additional complexity if they can avoid

00:12:36,100 --> 00:12:41,110
it what we're seeing right now is that

00:12:38,770 --> 00:12:44,200
that wave is giving way to you know

00:12:41,110 --> 00:12:46,420
fortune 500 companies making big bets on

00:12:44,200 --> 00:12:49,000
something like kubernetes and then they

00:12:46,420 --> 00:12:51,250
start to asking themselves ok now we

00:12:49,000 --> 00:12:52,960
need some serious tooling so that we can

00:12:51,250 --> 00:12:55,089
support thousands of developers and

00:12:52,960 --> 00:12:57,130
maybe we can also support our hybrid or

00:12:55,089 --> 00:12:58,780
multi cloud set up so that we can

00:12:57,130 --> 00:13:01,839
migrate effectively to something like

00:12:58,780 --> 00:13:03,550
kubernetes etc etc so I think you know

00:13:01,839 --> 00:13:04,810
what I basically said is we're seeing

00:13:03,550 --> 00:13:06,880
adoption

00:13:04,810 --> 00:13:09,160
that sort of cross the chasm of a new

00:13:06,880 --> 00:13:11,350
runtime pushing the enterprise use-case

00:13:09,160 --> 00:13:13,540
we're seeing a lot of resurgence and

00:13:11,350 --> 00:13:15,670
ongoing interest on multi cloud and

00:13:13,540 --> 00:13:18,130
migration strategies now we're getting

00:13:15,670 --> 00:13:20,650
to a point where companies made their

00:13:18,130 --> 00:13:22,150
initial move to one cloud now they have

00:13:20,650 --> 00:13:23,620
a little bit of an understanding what it

00:13:22,150 --> 00:13:25,180
means to be a cloud

00:13:23,620 --> 00:13:27,279
I wouldn't say cloud native but a

00:13:25,180 --> 00:13:29,710
company that runs in the cloud now

00:13:27,279 --> 00:13:31,480
they're starting to ask themselves how

00:13:29,710 --> 00:13:33,820
many clouds do I need which cloud is

00:13:31,480 --> 00:13:34,930
best for my choice and so we're seeing a

00:13:33,820 --> 00:13:37,570
whole bunch of people looking at

00:13:34,930 --> 00:13:40,150
spinnaker because they like the idea of

00:13:37,570 --> 00:13:42,790
being able to move from one platform to

00:13:40,150 --> 00:13:44,680
another platform without necessarily

00:13:42,790 --> 00:13:46,960
having to redo all their surrounding

00:13:44,680 --> 00:13:48,240
tooling so I think that's another big

00:13:46,960 --> 00:13:51,040
second driver

00:13:48,240 --> 00:13:53,050
we have mentioned communities and today

00:13:51,040 --> 00:13:57,010
the question is not who is using it like

00:13:53,050 --> 00:13:59,050
who is not using it why not so what kind

00:13:57,010 --> 00:14:00,730
of symbiotic relationship is going to be

00:13:59,050 --> 00:14:03,370
there between Cubana t-then spinnaker

00:14:00,730 --> 00:14:04,839
going forward I think that depends a

00:14:03,370 --> 00:14:07,680
little bit on how far the kubernetes

00:14:04,839 --> 00:14:10,480
community wants to go in supporting

00:14:07,680 --> 00:14:13,900
deployment I think we see you know some

00:14:10,480 --> 00:14:15,640
questions people when they look at

00:14:13,900 --> 00:14:17,110
something like a spinnaker or indeed any

00:14:15,640 --> 00:14:18,580
deployment tool they say wait but

00:14:17,110 --> 00:14:21,460
kubernetes already has a deployment

00:14:18,580 --> 00:14:24,490
object and you need to have some deeper

00:14:21,460 --> 00:14:27,010
understanding of what the use cases are

00:14:24,490 --> 00:14:30,070
that are supported by both to understand

00:14:27,010 --> 00:14:32,380
when you need each so I think the

00:14:30,070 --> 00:14:33,910
symbiotic relationship and largely one

00:14:32,380 --> 00:14:36,430
of the questions will be defining that

00:14:33,910 --> 00:14:37,960
handover point kubernetes is a runtime

00:14:36,430 --> 00:14:40,030
like any runtime whether it was

00:14:37,960 --> 00:14:42,490
openshift or pivotal or Heroku or

00:14:40,030 --> 00:14:45,070
whatever will need to support some level

00:14:42,490 --> 00:14:47,050
of deployment out-of-the-box and but I

00:14:45,070 --> 00:14:49,209
think as of now they are being very

00:14:47,050 --> 00:14:50,620
smart and saying we're not going to try

00:14:49,209 --> 00:14:52,300
and support every type of deployment

00:14:50,620 --> 00:14:54,670
out-of-the-box because that's a very

00:14:52,300 --> 00:14:57,220
hard and complex problem and if you open

00:14:54,670 --> 00:14:59,580
that trap door you end up rebuilding a

00:14:57,220 --> 00:15:02,200
lot of functionality so I think as

00:14:59,580 --> 00:15:04,089
companies start to work on more complex

00:15:02,200 --> 00:15:06,070
deployment scenarios as they try to

00:15:04,089 --> 00:15:09,070
support you know I don't know we have a

00:15:06,070 --> 00:15:11,170
target one very very big user spoke

00:15:09,070 --> 00:15:13,540
publicly at a cloud next Google cloud

00:15:11,170 --> 00:15:14,950
next recently at San Francisco about how

00:15:13,540 --> 00:15:16,970
they deploy to a thousand eight hundred

00:15:14,950 --> 00:15:18,350
kubernetes clusters

00:15:16,970 --> 00:15:19,759
that kind of rollout pattern is

00:15:18,350 --> 00:15:22,160
something that you will need to control

00:15:19,759 --> 00:15:24,920
out of the box I think at the same time

00:15:22,160 --> 00:15:27,290
we will see that as projects like Sto

00:15:24,920 --> 00:15:29,959
try to figure out how they can support

00:15:27,290 --> 00:15:31,490
application roll out as a spinnaker

00:15:29,959 --> 00:15:33,740
community we have a lot of knowledge to

00:15:31,490 --> 00:15:35,870
give back to help them understand what

00:15:33,740 --> 00:15:37,670
users are actually trying to do when

00:15:35,870 --> 00:15:39,199
they want traffic manipulation is part

00:15:37,670 --> 00:15:42,949
of a roll out pattern and in fact we're

00:15:39,199 --> 00:15:44,959
engaged with the sto team right now to

00:15:42,949 --> 00:15:46,490
figure out work on missing features or

00:15:44,959 --> 00:15:48,769
missing functionality that would allow

00:15:46,490 --> 00:15:51,410
such a rollout pattern to work really

00:15:48,769 --> 00:15:55,490
smoothly so that also makes me wonder

00:15:51,410 --> 00:15:57,319
that because whether you proper multi

00:15:55,490 --> 00:16:00,259
cloud or cloud it depends on what you

00:15:57,319 --> 00:16:01,759
are there is so much cross-pollination

00:16:00,259 --> 00:16:04,670
or interaction happening between

00:16:01,759 --> 00:16:07,519
different among different projects so

00:16:04,670 --> 00:16:09,110
from speakers perspective you know right

00:16:07,519 --> 00:16:11,990
now it's kind of still on a standalone

00:16:09,110 --> 00:16:13,610
project it is becoming you know you are

00:16:11,990 --> 00:16:15,470
coming up with a cornice model around it

00:16:13,610 --> 00:16:18,920
but do you think it will also make sense

00:16:15,470 --> 00:16:20,569
for it to be part of a foundation or

00:16:18,920 --> 00:16:23,029
organization so that there is better

00:16:20,569 --> 00:16:24,709
pollination so yeah I think I mean I

00:16:23,029 --> 00:16:27,910
think in some sense these two questions

00:16:24,709 --> 00:16:30,500
are a little bit distinct I think

00:16:27,910 --> 00:16:33,259
cross-pollination or bringing in the new

00:16:30,500 --> 00:16:35,360
ideas is largely a factor of a how

00:16:33,259 --> 00:16:37,220
integrated a tool is in the surrounding

00:16:35,360 --> 00:16:39,319
communities and of course how easy it is

00:16:37,220 --> 00:16:41,059
for people in surrounding communities to

00:16:39,319 --> 00:16:42,740
contribute and as you mentioned and I

00:16:41,059 --> 00:16:44,360
think there'll be much more to be said

00:16:42,740 --> 00:16:47,899
about this topic governance is a very

00:16:44,360 --> 00:16:51,050
important step in that direction what a

00:16:47,899 --> 00:16:53,449
commuter what a foundation does or does

00:16:51,050 --> 00:16:55,850
not add to this is a slightly different

00:16:53,449 --> 00:16:57,290
discussion in the sense that yes you

00:16:55,850 --> 00:16:58,790
know this is a branding there's some

00:16:57,290 --> 00:17:00,949
legal there's some marketing assistance

00:16:58,790 --> 00:17:02,660
and so on but I think from the

00:17:00,949 --> 00:17:05,390
perspective of figuring out Spinnaker's

00:17:02,660 --> 00:17:07,189
place in the continuous delivery world

00:17:05,390 --> 00:17:09,650
I think governance is maybe a more

00:17:07,189 --> 00:17:12,199
important step in terms of actually

00:17:09,650 --> 00:17:15,350
making things happen and I think there's

00:17:12,199 --> 00:17:16,880
an interesting subtlety here around you

00:17:15,350 --> 00:17:20,360
know Spinnaker's already highly

00:17:16,880 --> 00:17:21,530
integrated with other tools so for

00:17:20,360 --> 00:17:23,809
instance you know we see either the

00:17:21,530 --> 00:17:25,789
ongoing work right now to make a better

00:17:23,809 --> 00:17:27,709
end-to-end artifact tracing story

00:17:25,789 --> 00:17:29,390
between Jenkins and spin

00:17:27,709 --> 00:17:31,159
for instance there's commercial

00:17:29,390 --> 00:17:32,690
offerings that pre bundle things like

00:17:31,159 --> 00:17:35,510
spinnaker and Jenkins and a bunch of

00:17:32,690 --> 00:17:37,789
other things together so spinnaker

00:17:35,510 --> 00:17:39,770
always has been a tool that has rich

00:17:37,789 --> 00:17:41,149
integrations into surrounding tools I

00:17:39,770 --> 00:17:43,549
think there is definitely an interesting

00:17:41,149 --> 00:17:44,750
question going forward especially as we

00:17:43,549 --> 00:17:47,419
consider things like you know

00:17:44,750 --> 00:17:50,059
environments as code or describing the

00:17:47,419 --> 00:17:52,190
state of an environment whether there

00:17:50,059 --> 00:17:54,860
are things we can use that the sort of

00:17:52,190 --> 00:17:56,390
de facto industry standard as a way of

00:17:54,860 --> 00:17:58,789
describing these which spinnaker could

00:17:56,390 --> 00:18:00,289
then consume where the spinnaker uses

00:17:58,789 --> 00:18:03,169
other tools as part of what it does

00:18:00,289 --> 00:18:05,720
itself I think these are all fascinating

00:18:03,169 --> 00:18:07,460
questions that we as a community will

00:18:05,720 --> 00:18:09,799
want to figure out and of course the

00:18:07,460 --> 00:18:12,020
more users and the more contributors we

00:18:09,799 --> 00:18:14,270
have that have experience of these other

00:18:12,020 --> 00:18:17,960
tools the more interesting the joint

00:18:14,270 --> 00:18:19,220
work is that we can do in this area one

00:18:17,960 --> 00:18:20,750
that does something about kubernetes and

00:18:19,220 --> 00:18:22,789
that I like about it that they have a

00:18:20,750 --> 00:18:24,169
very tight focus mostly we have seen

00:18:22,789 --> 00:18:26,539
with a lot of open source projects I

00:18:24,169 --> 00:18:28,250
don't want to name them that they get so

00:18:26,539 --> 00:18:30,049
overwhelmed with adoption and users that

00:18:28,250 --> 00:18:31,820
they lose focus of where they were

00:18:30,049 --> 00:18:34,850
heading and they get bloated and they

00:18:31,820 --> 00:18:38,210
have to fix so what lesson is clinical

00:18:34,850 --> 00:18:40,700
community I mean not lesson because too

00:18:38,210 --> 00:18:42,950
early phase but what is your kind of

00:18:40,700 --> 00:18:45,230
strategy going forward that you know you

00:18:42,950 --> 00:18:47,120
are going to have this either type focus

00:18:45,230 --> 00:18:49,159
or what is going to be your focus as you

00:18:47,120 --> 00:18:51,230
know if you look at it one or two years

00:18:49,159 --> 00:18:52,970
from now yeah that the breadth versus

00:18:51,230 --> 00:18:54,820
depth question is of course a very very

00:18:52,970 --> 00:18:57,890
interesting one and then there you know

00:18:54,820 --> 00:18:59,990
even even kubernetes which is keeping a

00:18:57,890 --> 00:19:01,700
relatively narrow focus of course has

00:18:59,990 --> 00:19:04,429
added a whole bunch of extension points

00:19:01,700 --> 00:19:06,110
because you know you have to have some

00:19:04,429 --> 00:19:07,669
answer typically to all the questions

00:19:06,110 --> 00:19:09,500
that people the crazy things that people

00:19:07,669 --> 00:19:13,220
want to do like can I get my cluster to

00:19:09,500 --> 00:19:16,640
make an espresso I think for spinnaker I

00:19:13,220 --> 00:19:19,940
think we well my personal view is that

00:19:16,640 --> 00:19:22,360
breath is a breath meaning chute

00:19:19,940 --> 00:19:24,590
spinnaker cover the entire pipe line

00:19:22,360 --> 00:19:26,870
it's going to be difficult because as I

00:19:24,590 --> 00:19:29,120
said earlier I think it makes sense to

00:19:26,870 --> 00:19:32,240
focus on the delivery part separately

00:19:29,120 --> 00:19:33,740
from the code automation part and in

00:19:32,240 --> 00:19:35,570
some sense of course spinnaker has the

00:19:33,740 --> 00:19:37,460
same answer that kubernetes or other

00:19:35,570 --> 00:19:39,320
tools have is because it supports

00:19:37,460 --> 00:19:40,250
arbitrary automation you can do anything

00:19:39,320 --> 00:19:42,620
with spinnaker

00:19:40,250 --> 00:19:45,680
I think where its value lies is in

00:19:42,620 --> 00:19:47,480
supporting specific challenges around

00:19:45,680 --> 00:19:49,880
you know understanding what is in your

00:19:47,480 --> 00:19:51,500
runtime environment remediating

00:19:49,880 --> 00:19:54,710
differences if they actually show up

00:19:51,500 --> 00:19:56,900
allowing you to enforce policy allowing

00:19:54,710 --> 00:19:59,390
you to have a a rich way of defining the

00:19:56,900 --> 00:20:01,340
rollout process but also controlling it

00:19:59,390 --> 00:20:03,560
so the teams don't necessarily get to do

00:20:01,340 --> 00:20:06,800
everything and so I think in that sense

00:20:03,560 --> 00:20:08,900
if there are the depth that we are

00:20:06,800 --> 00:20:10,910
looking for is around manageability

00:20:08,900 --> 00:20:13,280
scalability integrations with other

00:20:10,910 --> 00:20:15,560
DevOps tools in this ecosystem as

00:20:13,280 --> 00:20:18,980
opposed to trying to make spinnaker you

00:20:15,560 --> 00:20:20,390
know the DevOps in a box tool because I

00:20:18,980 --> 00:20:21,860
think if you look at the spinnaker user

00:20:20,390 --> 00:20:23,720
base who are by and large pretty

00:20:21,860 --> 00:20:25,460
experienced your platform engineers

00:20:23,720 --> 00:20:27,800
release engineers those kind of people

00:20:25,460 --> 00:20:31,760
and they all know that DevOps in a box

00:20:27,800 --> 00:20:33,560
doesn't actually exist and so I don't

00:20:31,760 --> 00:20:35,540
think we would have a credible story if

00:20:33,560 --> 00:20:36,740
we try to do that so let's to stop

00:20:35,540 --> 00:20:38,720
talking about technology for a while and

00:20:36,740 --> 00:20:40,730
talk about you when you're not you know

00:20:38,720 --> 00:20:41,330
doing the spinnaker what do you do in

00:20:40,730 --> 00:20:44,390
your free time

00:20:41,330 --> 00:20:46,600
ha what do my free time well I try to

00:20:44,390 --> 00:20:50,030
look at a computer as little as possible

00:20:46,600 --> 00:20:51,740
because I spent I know when I'm not that

00:20:50,030 --> 00:20:53,540
I do a little bit of open-source pull

00:20:51,740 --> 00:20:55,430
request previewing which just about

00:20:53,540 --> 00:20:57,980
works because my wife is also in tech

00:20:55,430 --> 00:21:00,440
and so she understands but by and large

00:20:57,980 --> 00:21:02,660
I try to do I try to cook I try to go

00:21:00,440 --> 00:21:04,790
skydiving I try to play squash I try to

00:21:02,660 --> 00:21:08,390
do things that take me a little bit away

00:21:04,790 --> 00:21:11,360
from a little bit away from tech I have

00:21:08,390 --> 00:21:13,460
an ongoing project that I probably won't

00:21:11,360 --> 00:21:15,680
get round to soon which is to try to

00:21:13,460 --> 00:21:17,360
explain what it is that I actually do in

00:21:15,680 --> 00:21:19,370
such a way that my parents can

00:21:17,360 --> 00:21:20,990
understand because I think one of the

00:21:19,370 --> 00:21:22,970
funny things about working in tech of

00:21:20,990 --> 00:21:24,800
course is that if you typically speak to

00:21:22,970 --> 00:21:25,250
anyone of your relatives or people like

00:21:24,800 --> 00:21:26,990
that

00:21:25,250 --> 00:21:28,430
most of them have no idea what it is

00:21:26,990 --> 00:21:30,910
that we do certainly when we talk about

00:21:28,430 --> 00:21:34,250
deployment or delivery and I think

00:21:30,910 --> 00:21:36,440
that's very ironic because actually if

00:21:34,250 --> 00:21:37,970
you think about delivering t-shirts or

00:21:36,440 --> 00:21:40,790
if you think about delivering food or if

00:21:37,970 --> 00:21:43,970
you think about any other and delivery

00:21:40,790 --> 00:21:45,740
process most people understand all the

00:21:43,970 --> 00:21:47,930
details of what goes on or a lot of the

00:21:45,740 --> 00:21:49,640
complexities of these processes and we

00:21:47,930 --> 00:21:52,050
kind of make things very special and

00:21:49,640 --> 00:21:54,540
hard for ourselves by talking about

00:21:52,050 --> 00:21:56,220
manifests and compilation and testing

00:21:54,540 --> 00:21:58,200
and repositories and all this kind of

00:21:56,220 --> 00:21:59,520
stuff so I think there's a there's a lot

00:21:58,200 --> 00:22:01,260
we can do to make what we do more

00:21:59,520 --> 00:22:02,910
accessible and more approachable and

00:22:01,260 --> 00:22:04,170
hopefully we will also learn a little

00:22:02,910 --> 00:22:06,750
bit from other industries that have

00:22:04,170 --> 00:22:08,070
solved very similar problems already so

00:22:06,750 --> 00:22:09,150
have you ever tried to explain it to

00:22:08,070 --> 00:22:12,060
your president that what do you do or

00:22:09,150 --> 00:22:13,800
know I've heard a few times we're

00:22:12,060 --> 00:22:15,930
getting better every single time so can

00:22:13,800 --> 00:22:17,820
you like I pry them from from end users

00:22:15,930 --> 00:22:19,110
point of view like in case I spinning or

00:22:17,820 --> 00:22:21,120
you can just simply oh you're watching

00:22:19,110 --> 00:22:22,500
in that fix movie no and you move it

00:22:21,120 --> 00:22:24,720
never it goes down or you know you're

00:22:22,500 --> 00:22:26,100
whether you're traveling or whatever so

00:22:24,720 --> 00:22:27,270
you can approach from different

00:22:26,100 --> 00:22:30,030
perspective all together and they're

00:22:27,270 --> 00:22:31,950
what they understand and then it like

00:22:30,030 --> 00:22:33,330
sometimes when people ask me I said okay

00:22:31,950 --> 00:22:35,700
so we are in the lyft or uber you know

00:22:33,330 --> 00:22:37,260
so when I call a ruber it is like so I

00:22:35,700 --> 00:22:38,760
try to explain the very basics that they

00:22:37,260 --> 00:22:42,420
understand like computer when you open a

00:22:38,760 --> 00:22:43,140
word processor you can so and then oh so

00:22:42,420 --> 00:22:44,700
that's what it is

00:22:43,140 --> 00:22:46,140
every time somebody asks okay your tech

00:22:44,700 --> 00:22:48,120
journalists but what do you do so I

00:22:46,140 --> 00:22:50,790
explained on that and sometimes I

00:22:48,120 --> 00:22:53,160
understand no exactly I think and I

00:22:50,790 --> 00:22:54,540
think the interesting is so I mean this

00:22:53,160 --> 00:22:56,460
could be a very long conversation is

00:22:54,540 --> 00:23:00,120
very fun one for me but I think one of

00:22:56,460 --> 00:23:01,650
the biggest challenges I always I always

00:23:00,120 --> 00:23:03,750
have is to explain the concept of

00:23:01,650 --> 00:23:05,400
server-side software like most people

00:23:03,750 --> 00:23:07,110
have a decent understanding because they

00:23:05,400 --> 00:23:09,990
know what it is to have a device of your

00:23:07,110 --> 00:23:11,520
own and to have stuff running on it but

00:23:09,990 --> 00:23:13,500
to understand this idea that there is

00:23:11,520 --> 00:23:15,570
you know you have this sort of strange

00:23:13,500 --> 00:23:18,090
window into software called a browser

00:23:15,570 --> 00:23:20,550
and it is looking at things that happen

00:23:18,090 --> 00:23:22,200
elsewhere and it's very strange for

00:23:20,550 --> 00:23:23,250
people finding good analogies for that

00:23:22,200 --> 00:23:25,650
and of course if we talk about

00:23:23,250 --> 00:23:27,360
especially spinnaker that is tends to be

00:23:25,650 --> 00:23:30,180
focused on delivering server-side

00:23:27,360 --> 00:23:32,430
software although and going back to our

00:23:30,180 --> 00:23:34,800
earlier discussion what areas that

00:23:32,430 --> 00:23:36,270
spinnaker can grow into I think the idea

00:23:34,800 --> 00:23:39,120
of delivering different types of

00:23:36,270 --> 00:23:42,870
software such as you know phone apps or

00:23:39,120 --> 00:23:44,580
our CDN type applications are both very

00:23:42,870 --> 00:23:46,890
interesting angles because they change

00:23:44,580 --> 00:23:49,800
slightly change what deployment actually

00:23:46,890 --> 00:23:51,510
means that's an interesting and

00:23:49,800 --> 00:23:53,250
challenging one to get across so I'm

00:23:51,510 --> 00:23:55,200
still trying I'll get there eventually

00:23:53,250 --> 00:23:56,520
and you talked about server server side

00:23:55,200 --> 00:23:58,140
actually we but we are back to

00:23:56,520 --> 00:23:59,730
technology we're talking about don't

00:23:58,140 --> 00:24:01,289
worry it's hard to

00:23:59,730 --> 00:24:04,080
like if somebody asks you what is Cyril

00:24:01,289 --> 00:24:06,149
less than it's even bigger yes it's sort

00:24:04,080 --> 00:24:08,880
of server-side software without a server

00:24:06,149 --> 00:24:10,440
er now exactly very difficult so thank

00:24:08,880 --> 00:24:12,210
you Andy a lot of talking to today and

00:24:10,440 --> 00:24:14,340
hopefully we'll see you again at you

00:24:12,210 --> 00:24:16,110
know other open source events we'll keep

00:24:14,340 --> 00:24:18,030
in touch thank you so much great thanks

00:24:16,110 --> 00:24:22,849
a lot

00:24:18,030 --> 00:24:22,849
[Music]

00:24:24,370 --> 00:24:26,430

YouTube URL: https://www.youtube.com/watch?v=QaGu5oU_LQc


