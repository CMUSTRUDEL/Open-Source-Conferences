Title: GraphQL + Audi = Yes! (Jeff Titus)
Publication date: 2018-12-05
Playlist: GraphQL Summit 2018
Description: 
	Talk from GraphQL Summit 2018 - Nov 7, 2018

Audi's Director of IT Digital Tech Solutions and Strategy, Jeff Titus, shares his GraphQL journey and lessons learned along the way.

Learn more:  https://summit.graphql.com
Captions: 
	00:00:03,259 --> 00:00:10,709
so this may be a slightly unconventional

00:00:07,080 --> 00:00:14,940
talk hopefully we can meet in the middle

00:00:10,709 --> 00:00:15,990
somewhere understand each other first

00:00:14,940 --> 00:00:17,939
thing I want to say is thanks to

00:00:15,990 --> 00:00:20,669
everybody here for setting up this event

00:00:17,939 --> 00:00:22,590
I think it's great and maybe it was

00:00:20,669 --> 00:00:24,000
already mentioned before I arrived but I

00:00:22,590 --> 00:00:27,029
think it's great news that the Linux

00:00:24,000 --> 00:00:31,829
Foundation adopted graph QL pretty good

00:00:27,029 --> 00:00:34,440
stuff so let me just tell you really

00:00:31,829 --> 00:00:35,640
quickly about what my team does and

00:00:34,440 --> 00:00:39,540
where we are and stuff and then we'll

00:00:35,640 --> 00:00:41,610
move on so first of all the team that I

00:00:39,540 --> 00:00:43,260
run here in San Francisco it's an

00:00:41,610 --> 00:00:45,240
innovation team so to speak it's called

00:00:43,260 --> 00:00:46,280
the code team named it the code team

00:00:45,240 --> 00:00:48,420
kind of tongue-in-cheek

00:00:46,280 --> 00:00:51,510
continuous optimization and digital

00:00:48,420 --> 00:00:54,000
engineering sometimes you're forced by

00:00:51,510 --> 00:00:56,100
executives to come up with a title for

00:00:54,000 --> 00:00:58,310
your team and so first I came up with

00:00:56,100 --> 00:01:01,530
code and then I figured out the acronym

00:00:58,310 --> 00:01:02,820
but as you can see we do a bunch of

00:01:01,530 --> 00:01:05,579
different things in the office

00:01:02,820 --> 00:01:08,430
everything from cloud automation and

00:01:05,579 --> 00:01:11,270
DevOps so to speak to advanced

00:01:08,430 --> 00:01:13,560
application architecture agile practices

00:01:11,270 --> 00:01:18,500
we're even doing quantum computing we

00:01:13,560 --> 00:01:22,320
just completed a traffic optimization

00:01:18,500 --> 00:01:23,640
you know effort in Barcelona also we did

00:01:22,320 --> 00:01:26,400
another one previously with the d-wave

00:01:23,640 --> 00:01:29,729
machine in Beijing cutting traffic by

00:01:26,400 --> 00:01:30,870
28% so there's a lot of really

00:01:29,729 --> 00:01:33,840
interesting things going on at the

00:01:30,870 --> 00:01:37,229
office it's kind of a start-up and and

00:01:33,840 --> 00:01:41,100
we like to relax and have fun but it's

00:01:37,229 --> 00:01:42,900
very small team what I want to talk

00:01:41,100 --> 00:01:46,320
about is our challenge that we got from

00:01:42,900 --> 00:01:49,890
the Audi business we needed to launch a

00:01:46,320 --> 00:01:53,880
worldwide reservations platform for the

00:01:49,890 --> 00:01:57,030
e-tron and as we all know as developers

00:01:53,880 --> 00:01:58,740
or as technical professionals when you

00:01:57,030 --> 00:02:00,150
get these challenges often they don't

00:01:58,740 --> 00:02:03,470
come with timelines that necessarily

00:02:00,150 --> 00:02:07,619
match up to what you'd like in this case

00:02:03,470 --> 00:02:10,769
we at least had enough advanced warning

00:02:07,619 --> 00:02:12,870
and enough collaboration to understand

00:02:10,769 --> 00:02:14,459
that building this was going to be a

00:02:12,870 --> 00:02:15,330
challenge but there was an opportunity

00:02:14,459 --> 00:02:18,860
for us as well

00:02:15,330 --> 00:02:21,030
as many other challenges tend to be and

00:02:18,860 --> 00:02:23,400
what we needed to do was build a

00:02:21,030 --> 00:02:25,320
transactional reservation platform we

00:02:23,400 --> 00:02:27,270
needed to make sure that it was scalable

00:02:25,320 --> 00:02:31,320
we had a very specific date to launch

00:02:27,270 --> 00:02:34,260
this on the the system that we were

00:02:31,320 --> 00:02:37,110
building for this reservation platform

00:02:34,260 --> 00:02:40,020
needed to be something that didn't

00:02:37,110 --> 00:02:41,430
require a lot of maintenance so to speak

00:02:40,020 --> 00:02:43,940
that it could actually launch and hold

00:02:41,430 --> 00:02:46,410
up to the robust robust capabilities of

00:02:43,940 --> 00:02:48,480
any reservation platform we were facing

00:02:46,410 --> 00:02:53,310
the public and taking these transactions

00:02:48,480 --> 00:02:55,170
so in this initial definition we

00:02:53,310 --> 00:02:56,550
understood what we needed to do we

00:02:55,170 --> 00:02:58,290
didn't necessarily know exactly how we

00:02:56,550 --> 00:03:00,950
would approach this at the time and

00:02:58,290 --> 00:03:05,280
prior to this we had never utilized

00:03:00,950 --> 00:03:06,750
graph QL or any other graph databases or

00:03:05,280 --> 00:03:08,280
any technologies like that we'd played

00:03:06,750 --> 00:03:10,260
around with them but we hadn't really

00:03:08,280 --> 00:03:15,330
implemented anything in production so

00:03:10,260 --> 00:03:19,050
this was our first first take to design

00:03:15,330 --> 00:03:22,590
the solution it was really something

00:03:19,050 --> 00:03:25,230
where we had existing services rest

00:03:22,590 --> 00:03:27,030
based services that were already

00:03:25,230 --> 00:03:30,050
underlying a lot of how someone might

00:03:27,030 --> 00:03:32,250
purchase a vehicle we had a lot of other

00:03:30,050 --> 00:03:34,680
technologies to accommodate as well we

00:03:32,250 --> 00:03:37,489
had an existing monolithic pipeline we

00:03:34,680 --> 00:03:39,959
had just recently established a

00:03:37,489 --> 00:03:42,480
container based pipeline with kubernetes

00:03:39,959 --> 00:03:43,830
and docker and so on not that we had not

00:03:42,480 --> 00:03:45,330
been working on it for a long time

00:03:43,830 --> 00:03:49,950
because we've been doing continuous

00:03:45,330 --> 00:03:54,060
delivery in now D of America since 2012

00:03:49,950 --> 00:03:55,980
and we did that initially with VM

00:03:54,060 --> 00:03:57,810
instances and the pipeline and so on but

00:03:55,980 --> 00:03:59,430
moving on to containers was something we

00:03:57,810 --> 00:04:01,350
really wanted to do the right way and

00:03:59,430 --> 00:04:05,760
make sure it was fit the purpose for

00:04:01,350 --> 00:04:08,640
something we actually needed so really

00:04:05,760 --> 00:04:10,920
the key to actually doing this and the

00:04:08,640 --> 00:04:13,590
the solution was designed around a lot

00:04:10,920 --> 00:04:16,650
of principles you know making sure that

00:04:13,590 --> 00:04:18,570
we reduce the amount of confusion when

00:04:16,650 --> 00:04:21,690
trying to like consume data from these

00:04:18,570 --> 00:04:25,110
services and so on making sure that the

00:04:21,690 --> 00:04:27,180
front-end could drive a lot of how that

00:04:25,110 --> 00:04:31,139
data was presented and

00:04:27,180 --> 00:04:32,880
not rely on this deep collaboration or a

00:04:31,139 --> 00:04:34,979
necessity or dependency between

00:04:32,880 --> 00:04:37,650
front-end and back-end so this was

00:04:34,979 --> 00:04:38,370
really set up in a as you can see it's a

00:04:37,650 --> 00:04:41,030
playing field

00:04:38,370 --> 00:04:42,840
this was set up as an autonomous

00:04:41,030 --> 00:04:44,430
experience that we were going to launch

00:04:42,840 --> 00:04:46,500
so we could define the technology but we

00:04:44,430 --> 00:04:49,800
also have these opportunities to do this

00:04:46,500 --> 00:04:52,440
in a really great way whenever we design

00:04:49,800 --> 00:04:54,810
a solution we always start with some of

00:04:52,440 --> 00:04:56,160
the most important things that I think

00:04:54,810 --> 00:04:58,050
they're even more important with graph

00:04:56,160 --> 00:05:01,740
cueball but they're very important to

00:04:58,050 --> 00:05:03,300
any application design BDD is a core of

00:05:01,740 --> 00:05:05,360
how we define requirements and refine

00:05:03,300 --> 00:05:08,490
those with our business stakeholders

00:05:05,360 --> 00:05:09,990
you've seen Spotify model and you know

00:05:08,490 --> 00:05:13,380
product owners and so on what we've

00:05:09,990 --> 00:05:15,000
we've done with BDD is we've taken it so

00:05:13,380 --> 00:05:16,169
we have a very clear common language

00:05:15,000 --> 00:05:19,139
established with our business

00:05:16,169 --> 00:05:20,610
stakeholders and/or product owners and

00:05:19,139 --> 00:05:22,259
if you don't start with that common

00:05:20,610 --> 00:05:25,139
language it's really hard to refactor

00:05:22,259 --> 00:05:26,550
later and it may not seem like something

00:05:25,139 --> 00:05:28,410
that at a development conference you

00:05:26,550 --> 00:05:30,330
really want to talk about that much it

00:05:28,410 --> 00:05:34,740
is refining requirements but the truth

00:05:30,330 --> 00:05:36,479
is you're gonna get a lot more of the

00:05:34,740 --> 00:05:38,039
structure that you want as a developer

00:05:36,479 --> 00:05:40,470
and a lot more on the ground when you're

00:05:38,039 --> 00:05:42,690
actually pushing these changes out and

00:05:40,470 --> 00:05:44,250
be able to deliver with a lot more

00:05:42,690 --> 00:05:47,639
predictability when you start building

00:05:44,250 --> 00:05:51,000
this way domain driven design is a great

00:05:47,639 --> 00:05:53,430
way to model the business objectives the

00:05:51,000 --> 00:05:57,659
the second component of how we tend to

00:05:53,430 --> 00:05:59,520
approach things is to take that domain

00:05:57,659 --> 00:06:00,060
driven design those that modeling and

00:05:59,520 --> 00:06:02,009
the BDD

00:06:00,060 --> 00:06:05,820
together and to start to plan out

00:06:02,009 --> 00:06:08,220
exactly how we're going to realize the

00:06:05,820 --> 00:06:10,880
separation of concerns how we're going

00:06:08,220 --> 00:06:12,990
to make sure that things as they evolve

00:06:10,880 --> 00:06:15,570
can scale and that we don't have to

00:06:12,990 --> 00:06:19,289
again go back and refactor so much and

00:06:15,570 --> 00:06:23,009
CQRS I don't know if you guys know CQRS

00:06:19,289 --> 00:06:25,280
but this is basically a simple concept

00:06:23,009 --> 00:06:28,320
you have commands you have queries

00:06:25,280 --> 00:06:31,740
pretty straightforward except you want

00:06:28,320 --> 00:06:34,020
to make sure that any you know component

00:06:31,740 --> 00:06:36,450
on your application has both of those

00:06:34,020 --> 00:06:39,790
capabilities and the way you design your

00:06:36,450 --> 00:06:43,390
application around that is key now

00:06:39,790 --> 00:06:45,550
at the code team we we have a bunch of

00:06:43,390 --> 00:06:47,800
architects and their hands on we don't

00:06:45,550 --> 00:06:49,990
you know we're not going to serve up

00:06:47,800 --> 00:06:52,330
anything that couldn't necessarily be

00:06:49,990 --> 00:06:55,810
delivered by a development team and we

00:06:52,330 --> 00:06:59,890
have a very large at Audi capability

00:06:55,810 --> 00:07:03,100
both in Germany as well as in the United

00:06:59,890 --> 00:07:05,350
States with our agency partners but one

00:07:03,100 --> 00:07:07,030
of these guys Sam huh tune you may know

00:07:05,350 --> 00:07:08,410
him from meteor if you know anything

00:07:07,030 --> 00:07:11,320
about meteor testing you've probably

00:07:08,410 --> 00:07:12,940
read his his works he's someone who's

00:07:11,320 --> 00:07:14,410
been a partner of mine and almost

00:07:12,940 --> 00:07:17,650
everything we do for a number of years

00:07:14,410 --> 00:07:19,270
going back to the original continuous

00:07:17,650 --> 00:07:22,030
delivery pipeline that we set up and

00:07:19,270 --> 00:07:24,100
launch for Audi usa.com and Sam was

00:07:22,030 --> 00:07:25,660
there in the office with us and Sam

00:07:24,100 --> 00:07:28,510
looking at all this stuff we were doing

00:07:25,660 --> 00:07:31,210
had this killer idea at least he said it

00:07:28,510 --> 00:07:33,370
was a killer idea and that was you know

00:07:31,210 --> 00:07:34,990
graph QL let's bring it in this is

00:07:33,370 --> 00:07:36,100
well-suited in the way you're designing

00:07:34,990 --> 00:07:37,960
applications the way you're setting

00:07:36,100 --> 00:07:40,540
things up so we can translate this

00:07:37,960 --> 00:07:42,160
perfectly into something that will

00:07:40,540 --> 00:07:44,200
utilize graph QL to its fullest

00:07:42,160 --> 00:07:47,020
capability and that'll also set the

00:07:44,200 --> 00:07:48,990
model and set down the basis for how you

00:07:47,020 --> 00:07:51,670
might build applications going forward

00:07:48,990 --> 00:07:53,140
and that's great I was hey this is a

00:07:51,670 --> 00:07:55,720
great idea like many of the ideas that

00:07:53,140 --> 00:07:56,950
we come up with we follow a lot of the

00:07:55,720 --> 00:07:58,270
same principles you may find in

00:07:56,950 --> 00:08:01,420
continuous delivery like data Trump's

00:07:58,270 --> 00:08:02,890
opinion so that's why we're so hands-on

00:08:01,420 --> 00:08:04,120
if you have an opinion you have

00:08:02,890 --> 00:08:05,590
something you want to offer up to the

00:08:04,120 --> 00:08:08,890
team you need to defend it by actually

00:08:05,590 --> 00:08:10,870
showing how it'll work but also you know

00:08:08,890 --> 00:08:14,080
Sam's a demanding character on his own

00:08:10,870 --> 00:08:15,790
he's a consultant he's not an a full

00:08:14,080 --> 00:08:16,990
time part of my team but he's a

00:08:15,790 --> 00:08:19,180
consultant that's been with us long

00:08:16,990 --> 00:08:20,710
enough he might as well be and I asked

00:08:19,180 --> 00:08:23,590
him so all right you came up with this

00:08:20,710 --> 00:08:24,970
idea you know how are you gonna get

00:08:23,590 --> 00:08:27,430
involved and what's it gonna take to get

00:08:24,970 --> 00:08:31,090
you to deliver this and you know say I'm

00:08:27,430 --> 00:08:34,360
had ideas he's like hey how about an r8

00:08:31,090 --> 00:08:36,160
you know like that's great everybody

00:08:34,360 --> 00:08:38,050
wants an r8 whenever they I talked to

00:08:36,160 --> 00:08:39,610
anybody in public and they know I work

00:08:38,050 --> 00:08:41,560
for Audi and they always say hey how

00:08:39,610 --> 00:08:44,380
about that r8 you drive one of those of

00:08:41,560 --> 00:08:46,540
course I've driven those but to give

00:08:44,380 --> 00:08:47,740
them away and to have them available to

00:08:46,540 --> 00:08:50,170
anybody just because they're doing

00:08:47,740 --> 00:08:52,310
something cool for me yeah you know I'll

00:08:50,170 --> 00:08:54,950
think about it but anyway I

00:08:52,310 --> 00:08:57,160
I agreed that was something that if you

00:08:54,950 --> 00:09:01,880
deliver this on time with the team

00:08:57,160 --> 00:09:05,360
absolutely man no worries so when we

00:09:01,880 --> 00:09:08,900
talk about that juxtaposition of how we

00:09:05,360 --> 00:09:11,990
were doing the initial design with CQRS

00:09:08,900 --> 00:09:13,940
you can see our development team or

00:09:11,990 --> 00:09:16,370
delivery team as we call them because we

00:09:13,940 --> 00:09:18,110
have the solutions and design team we

00:09:16,370 --> 00:09:20,420
have the delivery teams the delivery

00:09:18,110 --> 00:09:22,460
teams at AKQA is our digital agency of

00:09:20,420 --> 00:09:24,530
record richard had a great quote here

00:09:22,460 --> 00:09:26,210
and i think it's a pretty well

00:09:24,530 --> 00:09:28,340
established observation for those who

00:09:26,210 --> 00:09:29,660
started working in graph QL is that the

00:09:28,340 --> 00:09:32,690
mapping between CQRS

00:09:29,660 --> 00:09:34,640
and the mutations and queries in graph

00:09:32,690 --> 00:09:36,500
cueball it's just really a one-to-one

00:09:34,640 --> 00:09:38,710
match it's it's cohesive and it's

00:09:36,500 --> 00:09:40,910
seamless

00:09:38,710 --> 00:09:44,600
let's look at the stack that we ended up

00:09:40,910 --> 00:09:46,190
with so all of these technologies are

00:09:44,600 --> 00:09:47,690
familiar to you guys in the audience I'm

00:09:46,190 --> 00:09:50,590
sure if if they're not familiar I'd

00:09:47,690 --> 00:09:53,000
certainly recommend you take a look

00:09:50,590 --> 00:09:54,980
there's a lot more going on around this

00:09:53,000 --> 00:09:58,490
and pipelines and so on but this is the

00:09:54,980 --> 00:10:00,290
basic collection of technologies that we

00:09:58,490 --> 00:10:03,140
ended up with I think one of the most

00:10:00,290 --> 00:10:05,900
interesting ones here is that we have a

00:10:03,140 --> 00:10:07,760
lot of Java going on in our or stack we

00:10:05,900 --> 00:10:10,010
develop most of our applications on that

00:10:07,760 --> 00:10:12,550
basis and we ended up with having to

00:10:10,010 --> 00:10:15,680
take advantage of spring boot graph QL

00:10:12,550 --> 00:10:18,650
to try to make some of this work I'm

00:10:15,680 --> 00:10:20,450
going to show you what we ended up with

00:10:18,650 --> 00:10:23,960
from an architectural perspective and

00:10:20,450 --> 00:10:26,050
what decisions we made how they came to

00:10:23,960 --> 00:10:29,120
fruition once we got through all this

00:10:26,050 --> 00:10:31,660
and I think that's going to be an

00:10:29,120 --> 00:10:34,520
interesting concept but when you look at

00:10:31,660 --> 00:10:37,040
all of these things especially when you

00:10:34,520 --> 00:10:38,240
look at the container capability of the

00:10:37,040 --> 00:10:40,360
pipelines that we had done all the

00:10:38,240 --> 00:10:42,590
research on and we're ready to to launch

00:10:40,360 --> 00:10:44,150
having these clusters of containers

00:10:42,590 --> 00:10:45,950
running in production

00:10:44,150 --> 00:10:48,710
we'd only launched a few services on

00:10:45,950 --> 00:10:52,220
that up to this point taking that into

00:10:48,710 --> 00:10:54,140
the the delivery of this product was

00:10:52,220 --> 00:10:55,760
sort of taking a big chance in a way

00:10:54,140 --> 00:10:58,220
because of well everything that was

00:10:55,760 --> 00:11:01,970
riding on this delivery the fixed date

00:10:58,220 --> 00:11:03,560
the actual the the fact that this was

00:11:01,970 --> 00:11:05,240
the first reservation platform being

00:11:03,560 --> 00:11:07,700
launched by the company worldwide

00:11:05,240 --> 00:11:09,709
there was a lot riding on this so we had

00:11:07,700 --> 00:11:11,959
to get this right and we did a lot of

00:11:09,709 --> 00:11:13,279
trial and error to really understand and

00:11:11,959 --> 00:11:16,570
then they said the first thing with

00:11:13,279 --> 00:11:18,680
graph QL that we'd ever done so

00:11:16,570 --> 00:11:21,230
understanding how to implement that and

00:11:18,680 --> 00:11:24,770
what the challenges might be that was a

00:11:21,230 --> 00:11:25,970
daunting daunting task for us I think as

00:11:24,770 --> 00:11:28,279
you'll see we came up with a pretty good

00:11:25,970 --> 00:11:30,680
model it was through it's still evolving

00:11:28,279 --> 00:11:34,490
in fact we continually evolve and

00:11:30,680 --> 00:11:36,890
continuously refine what we do but I

00:11:34,490 --> 00:11:38,660
think you'll see that what we ended up

00:11:36,890 --> 00:11:41,149
with I think it's not such a bad pattern

00:11:38,660 --> 00:11:44,060
or a bad reference for someone that's

00:11:41,149 --> 00:11:45,230
working in an enterprise like we are you

00:11:44,060 --> 00:11:46,610
know in the enterprise you can't just do

00:11:45,230 --> 00:11:49,220
whatever you want you always have to

00:11:46,610 --> 00:11:52,520
work with some legacy systems legacy

00:11:49,220 --> 00:11:55,610
software legacy services and frankly

00:11:52,520 --> 00:11:57,500
sometimes legacy thinking there's this

00:11:55,610 --> 00:12:00,110
statement I love it by Simon Wardley who

00:11:57,500 --> 00:12:01,370
is a great proponent of mapping Wardley

00:12:00,110 --> 00:12:02,990
Maps if you haven't seen that it's a

00:12:01,370 --> 00:12:06,620
great way to model your business and

00:12:02,990 --> 00:12:10,730
understand it but one of the statements

00:12:06,620 --> 00:12:16,600
he he brings up pretty often that I love

00:12:10,730 --> 00:12:19,100
is that past success breeds inertia and

00:12:16,600 --> 00:12:21,620
at the code team were able to really

00:12:19,100 --> 00:12:25,160
push towards the edge and do things in a

00:12:21,620 --> 00:12:28,399
different way for an enterprise you know

00:12:25,160 --> 00:12:30,320
that sort of oxymoron of lean enterprise

00:12:28,399 --> 00:12:31,730
it's a big challenge actually takes a

00:12:30,320 --> 00:12:34,010
lot of work on the ground and you have

00:12:31,730 --> 00:12:35,839
to build confidence even in establishing

00:12:34,010 --> 00:12:40,279
that office or establishing any of these

00:12:35,839 --> 00:12:41,540
technologies you know I I have to get

00:12:40,279 --> 00:12:43,399
that executive authority from the

00:12:41,540 --> 00:12:45,079
beginning I have to make sure I have a

00:12:43,399 --> 00:12:46,550
cohesive relationship a strong

00:12:45,079 --> 00:12:47,589
relationship with my business partners

00:12:46,550 --> 00:12:50,420
that were working hand in hand

00:12:47,589 --> 00:12:52,250
flattening out the the org structure to

00:12:50,420 --> 00:12:54,589
make sure that we're all accountable for

00:12:52,250 --> 00:12:55,940
what goes to production and following

00:12:54,589 --> 00:12:57,079
all these principles were able to take

00:12:55,940 --> 00:13:00,709
these chances to start to build

00:12:57,079 --> 00:13:03,800
something that really works so what did

00:13:00,709 --> 00:13:05,149
we build we started with our UI's the

00:13:03,800 --> 00:13:07,270
two things that we needed to deliver

00:13:05,149 --> 00:13:11,360
were basically a reservation

00:13:07,270 --> 00:13:15,020
customer-facing reservation interface to

00:13:11,360 --> 00:13:16,800
take reservations from customers it had

00:13:15,020 --> 00:13:20,580
to be unified with the

00:13:16,800 --> 00:13:22,170
profile the when we were unifying with a

00:13:20,580 --> 00:13:24,149
profile that basically means that every

00:13:22,170 --> 00:13:26,820
single person that came through to put a

00:13:24,149 --> 00:13:30,800
reservation in and drop their deposit of

00:13:26,820 --> 00:13:33,269
$1,000 they had to make sure that they

00:13:30,800 --> 00:13:34,440
either registered for a new profile or

00:13:33,269 --> 00:13:37,050
that there was one established for them

00:13:34,440 --> 00:13:38,730
as an owner of the vehicle the other

00:13:37,050 --> 00:13:40,410
side of it was the corporate side the

00:13:38,730 --> 00:13:42,149
customer service side and in the dealers

00:13:40,410 --> 00:13:44,100
to establish a reservations

00:13:42,149 --> 00:13:46,019
administrative portal that they could

00:13:44,100 --> 00:13:48,089
come in and actually manage them cancel

00:13:46,019 --> 00:13:50,310
reservations refunding the money all of

00:13:48,089 --> 00:13:52,110
those things you can imagine if you're

00:13:50,310 --> 00:13:54,000
approaching that there's a lot of

00:13:52,110 --> 00:13:55,829
challenges because established owners

00:13:54,000 --> 00:13:57,420
who have a vehicle might have a certain

00:13:55,829 --> 00:13:59,760
profile a number of vehicles involved

00:13:57,420 --> 00:14:03,300
and product data in the vehicle in the

00:13:59,760 --> 00:14:07,410
in the OEM level car industry it's

00:14:03,300 --> 00:14:09,120
actually a pretty challenging set of

00:14:07,410 --> 00:14:11,399
data to work with when you go to

00:14:09,120 --> 00:14:14,930
configure it a car on how to us stay

00:14:11,399 --> 00:14:17,760
calm or any other OAM automotive website

00:14:14,930 --> 00:14:19,649
you go to do that and you think well

00:14:17,760 --> 00:14:22,920
I'll just add a wheel or I'll add a

00:14:19,649 --> 00:14:24,329
different paint color or a different you

00:14:22,920 --> 00:14:26,760
know feature a different type of

00:14:24,329 --> 00:14:29,130
interior material for my seats or

00:14:26,760 --> 00:14:31,950
whatever every one of those has an

00:14:29,130 --> 00:14:32,279
incredible combinatorial problem to

00:14:31,950 --> 00:14:34,290
solve

00:14:32,279 --> 00:14:36,149
because it has to be buildable you have

00:14:34,290 --> 00:14:38,370
to come up with a price all of those

00:14:36,149 --> 00:14:40,290
things so in the action of actually

00:14:38,370 --> 00:14:43,200
making a deposit on this taking a

00:14:40,290 --> 00:14:44,820
thousand dollars from somebody we have

00:14:43,200 --> 00:14:47,100
to reference that vehicle data and their

00:14:44,820 --> 00:14:48,779
preferences as well as take their money

00:14:47,100 --> 00:14:51,300
make sure it's associated with a profile

00:14:48,779 --> 00:14:54,060
so many things to do that have to be

00:14:51,300 --> 00:14:55,320
just right it have to be performing on

00:14:54,060 --> 00:14:57,630
the other side of it managing that

00:14:55,320 --> 00:14:59,100
becomes an incredible admit the

00:14:57,630 --> 00:15:00,959
administrative tasks associated with

00:14:59,100 --> 00:15:03,180
that or many and varied and they have to

00:15:00,959 --> 00:15:07,140
follow a lot of regulations and so on as

00:15:03,180 --> 00:15:09,660
well so compliance for instance we use a

00:15:07,140 --> 00:15:11,640
third-party gateway for payments as you

00:15:09,660 --> 00:15:13,560
might expect you don't want to have to

00:15:11,640 --> 00:15:15,329
like refactor your entire architecture

00:15:13,560 --> 00:15:16,829
to be PCI compliant at the last minute

00:15:15,329 --> 00:15:18,800
we had never done that type of thing

00:15:16,829 --> 00:15:22,490
online before us as an automotive

00:15:18,800 --> 00:15:25,560
industry participant in the typical

00:15:22,490 --> 00:15:27,180
dealer world the dealers are the ones

00:15:25,560 --> 00:15:29,410
that sell things the dealers are the one

00:15:27,180 --> 00:15:31,360
that offer up the vehicle so doing this

00:15:29,410 --> 00:15:34,600
nationally and globally was a big

00:15:31,360 --> 00:15:37,660
challenge so like I said all these other

00:15:34,600 --> 00:15:40,089
these existing services that we had many

00:15:37,660 --> 00:15:42,600
of them were arrests and what we did was

00:15:40,089 --> 00:15:48,120
we put a wrapper around those rest

00:15:42,600 --> 00:15:51,490
services graph QL API so that we could

00:15:48,120 --> 00:15:53,439
essentially make that ubiquitous and

00:15:51,490 --> 00:15:55,959
unified in the way we actually accessed

00:15:53,439 --> 00:15:57,819
the graph access to the data making it

00:15:55,959 --> 00:16:00,089
as lightweight as possible making sure

00:15:57,819 --> 00:16:02,050
that we could push through the types of

00:16:00,089 --> 00:16:03,730
changes on the front end that we needed

00:16:02,050 --> 00:16:07,899
to without having to refactor all those

00:16:03,730 --> 00:16:10,259
services probably the biggest learning

00:16:07,899 --> 00:16:11,680
for us in all of this was that we

00:16:10,259 --> 00:16:15,459
established what we were initially

00:16:11,680 --> 00:16:17,410
called the data aggregator but the data

00:16:15,459 --> 00:16:21,279
aggregator really is just a service bus

00:16:17,410 --> 00:16:23,860
and we brought Apollo in at this level

00:16:21,279 --> 00:16:26,110
because Apollo allowed us to do schema

00:16:23,860 --> 00:16:27,819
stitching a lot of things come out of

00:16:26,110 --> 00:16:30,430
the box with that which I'll reference

00:16:27,819 --> 00:16:33,250
on another slide but that ended up being

00:16:30,430 --> 00:16:34,360
incredibly valuable to us stitching

00:16:33,250 --> 00:16:37,810
these schemas together that have been

00:16:34,360 --> 00:16:40,660
agreed on uh you know before you start

00:16:37,810 --> 00:16:44,170
development from all these disparate

00:16:40,660 --> 00:16:47,439
services allows us to bring to the front

00:16:44,170 --> 00:16:49,180
end the types of small objects that you

00:16:47,439 --> 00:16:51,100
might need with all of the different

00:16:49,180 --> 00:16:52,779
data points together it's not so easy

00:16:51,100 --> 00:16:54,009
when you turn this over to someone on

00:16:52,779 --> 00:16:56,019
the front end if they don't have this

00:16:54,009 --> 00:16:57,399
type of a layer and there's a lot of

00:16:56,019 --> 00:16:59,829
other things that you don't get it's

00:16:57,399 --> 00:17:02,050
really hard to trace requests and

00:16:59,829 --> 00:17:04,959
responses it's really difficult to debug

00:17:02,050 --> 00:17:06,850
an issue if you don't have one transport

00:17:04,959 --> 00:17:08,470
layer that this is all going through so

00:17:06,850 --> 00:17:10,449
it's really important to establish

00:17:08,470 --> 00:17:12,490
something like this and to make sure you

00:17:10,449 --> 00:17:14,020
have monitoring and and logging and all

00:17:12,490 --> 00:17:19,360
the things that you need in order to get

00:17:14,020 --> 00:17:21,010
through that so you know a simple

00:17:19,360 --> 00:17:24,370
example of schema stitching in this case

00:17:21,010 --> 00:17:28,510
at a really high level is if I pulled

00:17:24,370 --> 00:17:30,669
together vehicle profile dealer and the

00:17:28,510 --> 00:17:32,890
reservation transactional data all

00:17:30,669 --> 00:17:35,260
together I need to present that into

00:17:32,890 --> 00:17:37,990
that interface for the admin portal all

00:17:35,260 --> 00:17:39,100
in one view so that we get all this data

00:17:37,990 --> 00:17:40,780
together but we don't need everything

00:17:39,100 --> 00:17:42,550
obviously we need we have a reference to

00:17:40,780 --> 00:17:44,530
the reservation ID

00:17:42,550 --> 00:17:46,630
we have a reference to from the User

00:17:44,530 --> 00:17:49,270
Profile Service getting back what the

00:17:46,630 --> 00:17:51,430
individual account profile data is as

00:17:49,270 --> 00:17:54,400
well as anything else associated with

00:17:51,430 --> 00:17:55,420
them what type of a status they have so

00:17:54,400 --> 00:17:57,310
there's a lot of things we pulled

00:17:55,420 --> 00:17:59,920
together and that that stitching

00:17:57,310 --> 00:18:03,700
allows us to take two schemas and stitch

00:17:59,920 --> 00:18:05,470
them together as the same component

00:18:03,700 --> 00:18:07,540
reference so that when we go to that we

00:18:05,470 --> 00:18:11,500
have one API to hit and it gets back

00:18:07,540 --> 00:18:13,930
everything that we request so the the

00:18:11,500 --> 00:18:16,930
next layer that we added which i think

00:18:13,930 --> 00:18:18,010
is another really important thing you

00:18:16,930 --> 00:18:21,070
know how many people here have heard of

00:18:18,010 --> 00:18:24,700
back-end for front-end so yeah

00:18:21,070 --> 00:18:27,370
BFF the this is that orchestration layer

00:18:24,700 --> 00:18:30,040
here is something that's really

00:18:27,370 --> 00:18:31,720
important for us because if you think

00:18:30,040 --> 00:18:35,140
about domain driven design and bounded

00:18:31,720 --> 00:18:36,550
context if you get into what's offered

00:18:35,140 --> 00:18:38,860
up on the front end and how that's

00:18:36,550 --> 00:18:41,440
controlled and maintained aggregating

00:18:38,860 --> 00:18:44,680
that data together takes a lot of custom

00:18:41,440 --> 00:18:46,480
sort of object manipulation custom

00:18:44,680 --> 00:18:47,980
fields have to be pulled together all

00:18:46,480 --> 00:18:50,770
into one

00:18:47,980 --> 00:18:52,570
you know delivery package but all of our

00:18:50,770 --> 00:18:55,480
you know one of the most important

00:18:52,570 --> 00:18:57,220
things in this whole pattern here is

00:18:55,480 --> 00:18:59,590
that through these layers whenever

00:18:57,220 --> 00:19:01,870
there's a request from the client it's

00:18:59,590 --> 00:19:04,780
never going directly to a service it's

00:19:01,870 --> 00:19:08,680
never going directly to any of the

00:19:04,780 --> 00:19:11,890
bottom services here and yet when it

00:19:08,680 --> 00:19:13,690
goes through that service bus it's also

00:19:11,890 --> 00:19:15,430
got to communicate about the

00:19:13,690 --> 00:19:16,870
orchestration of that data and how it

00:19:15,430 --> 00:19:18,940
actually is going to be delivered and

00:19:16,870 --> 00:19:20,770
served up and so that's what the

00:19:18,940 --> 00:19:22,450
orchestration layer is for and by

00:19:20,770 --> 00:19:24,820
bounded context when we refer to that

00:19:22,450 --> 00:19:27,340
you can actually get into very specific

00:19:24,820 --> 00:19:29,530
business concerns you know the customer

00:19:27,340 --> 00:19:31,900
reservation object that's delivered

00:19:29,530 --> 00:19:33,160
versus just the user profile reference

00:19:31,900 --> 00:19:35,020
that's made if we're going to actually

00:19:33,160 --> 00:19:39,040
register a new user or bring up their

00:19:35,020 --> 00:19:41,650
existing profile data so that allows us

00:19:39,040 --> 00:19:43,690
a lot of freedom to make changes to how

00:19:41,650 --> 00:19:45,850
the data is pulled up without having

00:19:43,690 --> 00:19:48,820
again make changes to those underlying

00:19:45,850 --> 00:19:50,680
services past the service bus but all of

00:19:48,820 --> 00:19:52,540
the requests and all of the responses

00:19:50,680 --> 00:19:55,330
goes through that transport layer so

00:19:52,540 --> 00:19:56,440
that has to be very robust and that has

00:19:55,330 --> 00:19:57,730
to make sure you have to make sure

00:19:56,440 --> 00:19:59,980
that is going to flow and be from the

00:19:57,730 --> 00:20:01,780
formant and so on but it's really

00:19:59,980 --> 00:20:04,210
important that you have that because

00:20:01,780 --> 00:20:05,590
again imagine trying to debug all of the

00:20:04,210 --> 00:20:09,190
things going on here when there's one

00:20:05,590 --> 00:20:10,570
issue with one particular request if you

00:20:09,190 --> 00:20:15,520
don't have a common place where

00:20:10,570 --> 00:20:16,990
everything's coming together one last

00:20:15,520 --> 00:20:19,000
thing on this we had to secure

00:20:16,990 --> 00:20:24,460
everything so of course we're utilizing

00:20:19,000 --> 00:20:27,330
JWT s putting a token in front of every

00:20:24,460 --> 00:20:29,500
send point every reference that we make

00:20:27,330 --> 00:20:31,210
allows us to secure this and there's a

00:20:29,500 --> 00:20:33,430
lot that can be done with this to scale

00:20:31,210 --> 00:20:35,650
out later if you know anything about IDP

00:20:33,430 --> 00:20:38,320
and authorization servers if you

00:20:35,650 --> 00:20:40,420
establish an ID and you put that into a

00:20:38,320 --> 00:20:41,920
token and then you hand that off to an

00:20:40,420 --> 00:20:44,080
authorization server which is where you

00:20:41,920 --> 00:20:47,380
drop all of the attributes and policies

00:20:44,080 --> 00:20:50,230
for access control in your systems and

00:20:47,380 --> 00:20:53,530
in to your services you need some sort

00:20:50,230 --> 00:20:56,410
of a capability to pull that ID across

00:20:53,530 --> 00:20:58,420
and so starting with JW T's is a good

00:20:56,410 --> 00:21:00,520
idea just because then you've got these

00:20:58,420 --> 00:21:01,870
tokens and you can set down the initial

00:21:00,520 --> 00:21:03,970
policies even if you don't have an

00:21:01,870 --> 00:21:05,980
authorization server involved yet you

00:21:03,970 --> 00:21:08,950
can set those down within those tokens

00:21:05,980 --> 00:21:13,090
and it starts to let you break down who

00:21:08,950 --> 00:21:14,740
has access to what who can see what and

00:21:13,090 --> 00:21:16,660
so when we have a reservations admin

00:21:14,740 --> 00:21:18,940
portal for instance and we have a dealer

00:21:16,660 --> 00:21:21,370
user coming in versus like a corporate

00:21:18,940 --> 00:21:23,200
customer service user those are

00:21:21,370 --> 00:21:25,060
completely different views the customer

00:21:23,200 --> 00:21:26,920
service might look at it regionally or

00:21:25,060 --> 00:21:28,810
nationally and have to serve the needs

00:21:26,920 --> 00:21:32,050
of a customer get deep into the

00:21:28,810 --> 00:21:34,660
transaction or the status of that the

00:21:32,050 --> 00:21:36,100
the vehicle showing where it is is it

00:21:34,660 --> 00:21:38,740
going to be delivered when will it be

00:21:36,100 --> 00:21:40,480
delivered all of those things and the

00:21:38,740 --> 00:21:42,130
dealer only has a reference into their

00:21:40,480 --> 00:21:44,920
dealership or even their group of

00:21:42,130 --> 00:21:46,450
dealers so that's a really important

00:21:44,920 --> 00:21:48,970
component here is to be able to control

00:21:46,450 --> 00:21:50,230
that level of access so that instead of

00:21:48,970 --> 00:21:52,030
having to do all of that in the front

00:21:50,230 --> 00:21:54,760
end or do that somewhere else you can

00:21:52,030 --> 00:21:57,130
control that through policies and how

00:21:54,760 --> 00:21:59,260
those tokens are issued and when they

00:21:57,130 --> 00:22:00,760
actually come into play if you do have

00:21:59,260 --> 00:22:02,140
an authorization server something like

00:22:00,760 --> 00:22:05,520
an office zero or whatever it might be

00:22:02,140 --> 00:22:07,899
that may that gives you a huge advantage

00:22:05,520 --> 00:22:10,129
so

00:22:07,899 --> 00:22:13,519
one other thing here which is a pollo

00:22:10,129 --> 00:22:16,580
engine at the very end the tail end of

00:22:13,519 --> 00:22:19,129
our delivery we had implemented a pollo

00:22:16,580 --> 00:22:21,559
server we have this running but Apollo

00:22:19,129 --> 00:22:24,039
engine when you buy into Apollo engine

00:22:21,559 --> 00:22:26,149
you get all kinds of stuff for free so

00:22:24,039 --> 00:22:27,200
front-end and back-end teams all of a

00:22:26,149 --> 00:22:29,539
sudden we're talking to each other

00:22:27,200 --> 00:22:31,070
whenever we were looking at defects all

00:22:29,539 --> 00:22:31,999
of a sudden we were looking at

00:22:31,070 --> 00:22:33,710
everything that was coming through that

00:22:31,999 --> 00:22:35,659
transport layer together where are the

00:22:33,710 --> 00:22:37,399
errors where do they come from some of

00:22:35,659 --> 00:22:39,259
the complications here that you may be

00:22:37,399 --> 00:22:42,019
aware of if you know about graph QL so

00:22:39,259 --> 00:22:45,099
far or things like that when you get a

00:22:42,019 --> 00:22:47,239
response it might it's not an HTTP

00:22:45,099 --> 00:22:49,039
response you're necessarily getting back

00:22:47,239 --> 00:22:50,450
so everything might come back into 200

00:22:49,039 --> 00:22:52,489
and you might have to interpret the

00:22:50,450 --> 00:22:53,059
error messaging underneath that so

00:22:52,489 --> 00:22:55,669
there's some really interesting

00:22:53,059 --> 00:22:57,589
challenges here to deal with but but

00:22:55,669 --> 00:22:59,809
really in general tracing and all the

00:22:57,589 --> 00:23:02,869
references through this type of software

00:22:59,809 --> 00:23:04,940
were made very easy and even you know

00:23:02,869 --> 00:23:06,309
somebody at my level wasn't involved in

00:23:04,940 --> 00:23:08,809
every line of code that was written

00:23:06,309 --> 00:23:11,570
could dive in and debug and help the

00:23:08,809 --> 00:23:15,559
team when it was really crucial and

00:23:11,570 --> 00:23:20,149
understand what was going on so the

00:23:15,559 --> 00:23:23,960
results we we launched on time we we

00:23:20,149 --> 00:23:26,210
made it work and it we had tested it we

00:23:23,960 --> 00:23:27,559
performance tested of course we ran we

00:23:26,210 --> 00:23:29,749
we built out this whole performance

00:23:27,559 --> 00:23:31,700
testing framework and lambda2 hit it

00:23:29,749 --> 00:23:34,609
from the outside from Amazon because

00:23:31,700 --> 00:23:38,299
we're running everything in TCP and

00:23:34,609 --> 00:23:40,059
Google and we we ran this so that we

00:23:38,299 --> 00:23:43,399
could test it out and we got up to like

00:23:40,059 --> 00:23:45,799
30 and to end reservations per second

00:23:43,399 --> 00:23:48,469
that seemed pretty good to us we thought

00:23:45,799 --> 00:23:49,849
okay in case we get flooded like Elon

00:23:48,469 --> 00:23:51,519
Musk did with a hundred thousand

00:23:49,849 --> 00:23:54,259
reservations day one we can handle this

00:23:51,519 --> 00:23:56,450
that was our goal and we we got this

00:23:54,259 --> 00:23:57,679
working but really the big benefit is we

00:23:56,450 --> 00:23:59,929
learned a ton and we're going to be

00:23:57,679 --> 00:24:02,389
using graph QL to transform our entire

00:23:59,929 --> 00:24:03,859
architecture moving forward so really

00:24:02,389 --> 00:24:05,809
does anything else matter do we got it

00:24:03,859 --> 00:24:07,759
done we got it launched everybody feels

00:24:05,809 --> 00:24:09,049
great and then we can move on and sort

00:24:07,759 --> 00:24:10,879
of start to clean up a bunch of other

00:24:09,049 --> 00:24:15,619
things and refactor and and keep

00:24:10,879 --> 00:24:17,719
evolving so big team involved you know

00:24:15,619 --> 00:24:20,179
this was not just a few developers in

00:24:17,719 --> 00:24:21,010
fact it was more than this

00:24:20,179 --> 00:24:23,380
the

00:24:21,010 --> 00:24:25,530
the guys that were working on this from

00:24:23,380 --> 00:24:29,320
AKQA our digital agency record

00:24:25,530 --> 00:24:30,940
incredible effort there we also had our

00:24:29,320 --> 00:24:33,400
colleagues in Germany working with us we

00:24:30,940 --> 00:24:34,720
had on so many things happening behind

00:24:33,400 --> 00:24:36,670
the scenes all at once and all these

00:24:34,720 --> 00:24:38,860
people working together as I said early

00:24:36,670 --> 00:24:41,200
on if you're not utilizing bdd if you're

00:24:38,860 --> 00:24:44,080
not designing things in a way that

00:24:41,200 --> 00:24:46,030
translates really well into a graph it's

00:24:44,080 --> 00:24:47,560
really hard to break down all the

00:24:46,030 --> 00:24:49,120
requirements later and refactor

00:24:47,560 --> 00:24:52,180
everything you can't go back and do that

00:24:49,120 --> 00:24:53,620
so that foundational work ahead of time

00:24:52,180 --> 00:24:55,750
made it possible for us to not only

00:24:53,620 --> 00:24:57,670
launch this but we kept pushing changes

00:24:55,750 --> 00:24:59,440
up many times a day through these

00:24:57,670 --> 00:25:01,840
container pipelines you know it took us

00:24:59,440 --> 00:25:04,600
20 minutes and an to get a developer to

00:25:01,840 --> 00:25:06,100
commit get a pull request through and

00:25:04,600 --> 00:25:08,050
get that pushed up into production and

00:25:06,100 --> 00:25:10,110
that was just happening and constant

00:25:08,050 --> 00:25:12,340
cycles against each service because each

00:25:10,110 --> 00:25:15,690
service back here that we referred to

00:25:12,340 --> 00:25:17,440
before each one of these is

00:25:15,690 --> 00:25:20,980
independently deployable on that

00:25:17,440 --> 00:25:23,560
pipeline and so we could deploy any of

00:25:20,980 --> 00:25:25,060
those grafts QL api's without having to

00:25:23,560 --> 00:25:27,940
like worry about all these contract

00:25:25,060 --> 00:25:30,990
integration issues and so on we do have

00:25:27,940 --> 00:25:33,790
a lot of automated testing involved so

00:25:30,990 --> 00:25:34,960
lastly whatever happened as Sams r8 in

00:25:33,790 --> 00:25:38,380
this whole thing we delivered on time

00:25:34,960 --> 00:25:40,060
right so I don't know if you know but

00:25:38,380 --> 00:25:44,620
there's a movie coming up with this

00:25:40,060 --> 00:25:46,090
amazing eat Ron RSQ coming up Will Smith

00:25:44,620 --> 00:25:47,800
is the voice of this character here I

00:25:46,090 --> 00:25:50,830
have no idea what the movies gonna be

00:25:47,800 --> 00:25:53,080
about my name's gonna be pretty cool but

00:25:50,830 --> 00:25:55,570
yeah so I wanted to make sure Sam got

00:25:53,080 --> 00:25:57,550
his r8 because he delivered he got this

00:25:55,570 --> 00:25:58,600
done we have a whole new basis for how

00:25:57,550 --> 00:26:00,100
we're gonna be building the team's

00:25:58,600 --> 00:26:02,740
working cohesively together in ways we

00:26:00,100 --> 00:26:05,950
haven't before so you know christmas is

00:26:02,740 --> 00:26:07,660
coming I got it for him and I I'll

00:26:05,950 --> 00:26:10,300
remind him when I deliver this to him

00:26:07,660 --> 00:26:13,360
that you know we're all about Minimum

00:26:10,300 --> 00:26:16,020
Viable Product right so dude it's cool

00:26:13,360 --> 00:26:19,440
you know I hope you like your r8 enjoy

00:26:16,020 --> 00:26:19,440
thank you very much

00:26:19,870 --> 00:26:24,070

YouTube URL: https://www.youtube.com/watch?v=UBCKJZe6-kA


