Title: Building the Case for GraphQL (Jon Wong)
Publication date: 2018-12-05
Playlist: GraphQL Summit 2018
Description: 
	Talk from GraphQL Summit 2018 - Nov 7, 2018

Jon Wong, Staff Software Engineer at Coursera, is part of the frontend infrastructure team responsible for pulling our engineering organization to the cutting edge, one migration at a time. You love GraphQL â€” you want to use it where you work! But either you don't own your backend, or you think there might be some political hurdles to getting it productionized; follow this easy process to get GraphQL working in _any_ ecosystem, even yours!

Learn more:  https://summit.graphql.com
Captions: 
	00:00:02,760 --> 00:00:08,700
so all five of you who showed up to my

00:00:05,069 --> 00:00:11,040
talk thank you for showing up this is

00:00:08,700 --> 00:00:12,390
probably because everyone else at this

00:00:11,040 --> 00:00:14,400
conference has already figured out how

00:00:12,390 --> 00:00:15,510
to make the case for graft well they've

00:00:14,400 --> 00:00:17,130
already convinced their entire

00:00:15,510 --> 00:00:18,780
organization that they need graft you

00:00:17,130 --> 00:00:20,760
out and they're already using it so I'm

00:00:18,780 --> 00:00:21,539
assuming that graph fuel is good all

00:00:20,760 --> 00:00:23,280
those people

00:00:21,539 --> 00:00:25,830
this is recorded you can see it later

00:00:23,280 --> 00:00:26,910
online my name is John I work on the

00:00:25,830 --> 00:00:28,500
front end infrastructure team at

00:00:26,910 --> 00:00:30,119
Coursera I feel not familiar with

00:00:28,500 --> 00:00:31,529
Coursera we're helping transform

00:00:30,119 --> 00:00:33,449
people's lives through access to the

00:00:31,529 --> 00:00:35,550
world's best education we do that

00:00:33,449 --> 00:00:37,620
through building product and in the case

00:00:35,550 --> 00:00:39,379
of our team we help figure out the tools

00:00:37,620 --> 00:00:41,489
workflows and processes that our

00:00:39,379 --> 00:00:43,229
front-end engineers and our web

00:00:41,489 --> 00:00:46,979
engineers use to actually build that

00:00:43,229 --> 00:00:49,649
product and our team we are we love

00:00:46,979 --> 00:00:51,899
graph - oh like I talk about it all the

00:00:49,649 --> 00:00:53,219
time every time there's a question that

00:00:51,899 --> 00:00:56,249
comes up I say but what if there was

00:00:53,219 --> 00:00:56,519
graph - well someone asks me what's for

00:00:56,249 --> 00:00:58,620
lunch

00:00:56,519 --> 00:01:00,929
what about graph QL graph cool sounds

00:00:58,620 --> 00:01:03,449
like a good thing to have for lunch but

00:01:00,929 --> 00:01:05,159
to be serious graph chill is incredible

00:01:03,449 --> 00:01:07,980
we find that it changes a lot of how you

00:01:05,159 --> 00:01:10,530
build things and we want people all over

00:01:07,980 --> 00:01:15,510
the place to use this as well especially

00:01:10,530 --> 00:01:18,270
within our organization but this talk is

00:01:15,510 --> 00:01:20,130
not about the basics of graph - oh I'm

00:01:18,270 --> 00:01:22,380
not gonna sit here and teaches syntax

00:01:20,130 --> 00:01:23,940
and show you how arguments work or maybe

00:01:22,380 --> 00:01:26,640
show you you know all these other things

00:01:23,940 --> 00:01:28,260
I'm not covering that because everyone

00:01:26,640 --> 00:01:30,240
has else's at this Crump's has done a

00:01:28,260 --> 00:01:31,800
great job of doing that what I'm gonna

00:01:30,240 --> 00:01:33,750
be here to talk to you all about is

00:01:31,800 --> 00:01:35,570
figuring out how you can get your graph

00:01:33,750 --> 00:01:37,770
QL working throughout your organization

00:01:35,570 --> 00:01:39,810
I'm gonna give you the questions the

00:01:37,770 --> 00:01:41,220
vocabulary and all the things that you

00:01:39,810 --> 00:01:45,590
need to know to talk to people

00:01:41,220 --> 00:01:47,970
throughout the rest of your team so

00:01:45,590 --> 00:01:49,950
who's here is everyone here familiar

00:01:47,970 --> 00:01:52,170
with Lord of the Rings anyone not

00:01:49,950 --> 00:01:54,330
familiar with Lord of the Rings too bad

00:01:52,170 --> 00:01:56,220
I don't have time to cover it so in Lord

00:01:54,330 --> 00:01:58,290
of the Rings you have this ring this one

00:01:56,220 --> 00:02:00,090
ring to rule them all and it's somewhat

00:01:58,290 --> 00:02:02,310
evil and they kind of cast it as this

00:02:00,090 --> 00:02:04,680
villainous thing which yeah actually

00:02:02,310 --> 00:02:06,930
true it's probably villainous but for

00:02:04,680 --> 00:02:09,690
the sake of this talk let's say that the

00:02:06,930 --> 00:02:11,969
One Ring was actually good and we

00:02:09,690 --> 00:02:13,650
actually wanted the One Ring but we need

00:02:11,969 --> 00:02:15,569
the One Ring to get to Mount Doom in

00:02:13,650 --> 00:02:16,210
order for it to actually work so in this

00:02:15,569 --> 00:02:18,310
case graph

00:02:16,210 --> 00:02:19,720
- L is the one ring it's the one API to

00:02:18,310 --> 00:02:22,000
rule them all we think that graph kill

00:02:19,720 --> 00:02:23,770
is the one API that all developers will

00:02:22,000 --> 00:02:26,680
need to know and something that your

00:02:23,770 --> 00:02:30,100
entire organization will need to know so

00:02:26,680 --> 00:02:31,930
the journey to getting this graph QL to

00:02:30,100 --> 00:02:34,330
be successful at your organization is

00:02:31,930 --> 00:02:36,130
going to be super super tough it's not

00:02:34,330 --> 00:02:37,990
going to be straightforward and and and

00:02:36,130 --> 00:02:40,660
to be honest the people that you need to

00:02:37,990 --> 00:02:42,130
convince are not here the people who you

00:02:40,660 --> 00:02:44,140
need to convince are the people who are

00:02:42,130 --> 00:02:48,130
at work today or doing whatever they're

00:02:44,140 --> 00:02:50,080
doing and not being here so the first

00:02:48,130 --> 00:02:50,830
step is you're going to want to build

00:02:50,080 --> 00:02:52,780
your fellowship

00:02:50,830 --> 00:02:54,910
are there any copyright lawyers in the

00:02:52,780 --> 00:02:56,830
audience there's some slight copyright

00:02:54,910 --> 00:02:58,300
infringement happening so what we're

00:02:56,830 --> 00:02:59,770
gonna ignore that for now but you're

00:02:58,300 --> 00:03:02,200
gonna start building your fellowship you

00:02:59,770 --> 00:03:06,040
need a crew of people to come and help

00:03:02,200 --> 00:03:07,360
you make graph QL is success so who you

00:03:06,040 --> 00:03:09,790
going to recruit you're gonna look for

00:03:07,360 --> 00:03:12,430
right you can't just ask people to help

00:03:09,790 --> 00:03:14,830
maybe you want to find specific people

00:03:12,430 --> 00:03:16,630
to help people who may not originally

00:03:14,830 --> 00:03:19,540
think that they want to help you figure

00:03:16,630 --> 00:03:21,550
out what graph Choa looks like so the

00:03:19,540 --> 00:03:23,770
first set of people that you might look

00:03:21,550 --> 00:03:27,100
for are people who have a lot of

00:03:23,770 --> 00:03:29,410
experience building api's people with a

00:03:27,100 --> 00:03:32,350
lot of experience storing lots and lots

00:03:29,410 --> 00:03:35,350
of data I'm talking about back-end

00:03:32,350 --> 00:03:37,990
engineers so I'm not generalizing that

00:03:35,350 --> 00:03:39,640
back-end engineers look like dwarves and

00:03:37,990 --> 00:03:41,650
have beards and stuff like that I'm

00:03:39,640 --> 00:03:44,620
saying that they're good at storing

00:03:41,650 --> 00:03:48,640
treasure and data like dwarves not that

00:03:44,620 --> 00:03:49,570
they are dwarves just to be clear so the

00:03:48,640 --> 00:03:52,720
first thing that you're gonna want to

00:03:49,570 --> 00:03:54,610
tell your back-end engineers is is we've

00:03:52,720 --> 00:03:56,890
covered this before earlier is graph GL

00:03:54,610 --> 00:04:01,690
can serve as a dynamic presentation

00:03:56,890 --> 00:04:03,370
service now what does this mean when we

00:04:01,690 --> 00:04:05,890
think about our applications that are

00:04:03,370 --> 00:04:08,680
joining all this complex sets of data

00:04:05,890 --> 00:04:12,280
from all different kinds of places that

00:04:08,680 --> 00:04:15,550
whole process is a is a result of how

00:04:12,280 --> 00:04:17,470
rest works rest has resources or

00:04:15,550 --> 00:04:19,210
whatever API system you're using has

00:04:17,470 --> 00:04:21,160
specific endpoints that have different

00:04:19,210 --> 00:04:24,040
concerns and that makes sense for

00:04:21,160 --> 00:04:25,960
back-end the thing is that you are

00:04:24,040 --> 00:04:27,850
pulling all these things into one place

00:04:25,960 --> 00:04:29,550
and they're likely from different places

00:04:27,850 --> 00:04:31,740
and domain

00:04:29,550 --> 00:04:33,180
so this is happening already

00:04:31,740 --> 00:04:35,009
either you're doing it in your client

00:04:33,180 --> 00:04:36,419
when you're making three fetch calls and

00:04:35,009 --> 00:04:38,880
in your pulling them in one place and

00:04:36,419 --> 00:04:41,069
you're joining them on some JSON object

00:04:38,880 --> 00:04:44,069
or maybe you have these presentation

00:04:41,069 --> 00:04:46,919
services that the backend engineers have

00:04:44,069 --> 00:04:48,650
created that uniquely identify the exact

00:04:46,919 --> 00:04:53,610
data that you need for a particular view

00:04:48,650 --> 00:04:56,610
now that's kind of that's a little

00:04:53,610 --> 00:04:58,740
frustrating right like do do back-end

00:04:56,610 --> 00:05:00,900
engineers really want to spend a lot of

00:04:58,740 --> 00:05:03,330
time doing one-off presentation services

00:05:00,900 --> 00:05:04,770
maybe they do maybe you ask them and

00:05:03,330 --> 00:05:07,349
they're like yeah I love this is my job

00:05:04,770 --> 00:05:09,780
I love doing this I love just adding

00:05:07,349 --> 00:05:12,419
individual fields on this JSON object

00:05:09,780 --> 00:05:14,759
and this is the the purpose of my life

00:05:12,419 --> 00:05:17,669
ask them though I would expect that

00:05:14,759 --> 00:05:19,800
they'd probably say no that that time

00:05:17,669 --> 00:05:21,090
that they spend doing all that work they

00:05:19,800 --> 00:05:23,069
could probably spend doing something

00:05:21,090 --> 00:05:23,909
more interesting I expected there's a

00:05:23,069 --> 00:05:26,940
lot of other things that they might

00:05:23,909 --> 00:05:29,099
wanted to do another thing that you

00:05:26,940 --> 00:05:32,130
might want to tell them is you can let

00:05:29,099 --> 00:05:34,080
the product define the API so a lot of

00:05:32,130 --> 00:05:36,570
times back in engineers are defining an

00:05:34,080 --> 00:05:38,729
API because that's sort of the domain of

00:05:36,570 --> 00:05:40,440
the storage like it's like alright this

00:05:38,729 --> 00:05:42,060
storage thing makes more sense as an

00:05:40,440 --> 00:05:44,460
array so I'm gonna expose it as an array

00:05:42,060 --> 00:05:47,099
but ultimately what are we here to do

00:05:44,460 --> 00:05:50,370
right we're here to build product and

00:05:47,099 --> 00:05:52,560
for back-end engineers it can be there's

00:05:50,370 --> 00:05:54,150
a lot of layers of indirection from the

00:05:52,560 --> 00:05:56,550
thing that they're working with and the

00:05:54,150 --> 00:05:59,610
thing that your end user is going to see

00:05:56,550 --> 00:06:02,310
so why does the API that they're

00:05:59,610 --> 00:06:04,380
exposing directly you know why is that

00:06:02,310 --> 00:06:06,270
the API that our front-end engineers use

00:06:04,380 --> 00:06:10,080
or our web engineers have to use to

00:06:06,270 --> 00:06:12,240
build our products so what's what's nice

00:06:10,080 --> 00:06:15,750
is we're basically saying if we care

00:06:12,240 --> 00:06:18,900
about building our product let's let the

00:06:15,750 --> 00:06:21,150
product define the API the other thing

00:06:18,900 --> 00:06:23,280
that's beneficial here is communication

00:06:21,150 --> 00:06:26,130
through this really strict contract this

00:06:23,280 --> 00:06:28,139
graph kale contract makes it a clear

00:06:26,130 --> 00:06:30,389
source of truth as to what you're

00:06:28,139 --> 00:06:32,250
building against so instead of arguing

00:06:30,389 --> 00:06:33,750
about okay I'm gonna build this thing

00:06:32,250 --> 00:06:35,639
and I'm gonna add this field turns out

00:06:33,750 --> 00:06:37,169
it doesn't integrate this way or you

00:06:35,639 --> 00:06:38,880
know all this this back and forth all

00:06:37,169 --> 00:06:40,380
the sorts of stuff you can get to a

00:06:38,880 --> 00:06:42,630
place where you can completely paralyze

00:06:40,380 --> 00:06:44,130
your communication you

00:06:42,630 --> 00:06:45,540
figure out what the schema is that makes

00:06:44,130 --> 00:06:47,370
sense for your product and then you can

00:06:45,540 --> 00:06:48,750
go off and work on your own things come

00:06:47,370 --> 00:06:49,170
back in and see okay does this make

00:06:48,750 --> 00:06:51,600
sense

00:06:49,170 --> 00:06:55,290
and it's nice it's a really really great

00:06:51,600 --> 00:06:56,880
process so there's a few questions that

00:06:55,290 --> 00:06:59,670
your back-end engineers are definitely

00:06:56,880 --> 00:07:00,930
going to ask you and that's a big part

00:06:59,670 --> 00:07:02,340
of what I want to expose here is that

00:07:00,930 --> 00:07:04,710
these questions are important to

00:07:02,340 --> 00:07:05,880
understand and understand why they come

00:07:04,710 --> 00:07:09,150
from different perspectives

00:07:05,880 --> 00:07:11,580
so first is is it secure and in this

00:07:09,150 --> 00:07:13,620
case I'm gonna call security as like is

00:07:11,580 --> 00:07:15,210
this a vector for attack is this

00:07:13,620 --> 00:07:17,550
something that could potentially break

00:07:15,210 --> 00:07:19,740
the site or harm our business in any way

00:07:17,550 --> 00:07:22,290
I don't know if it's like yeah that's

00:07:19,740 --> 00:07:24,060
the definition we'll go with here so one

00:07:22,290 --> 00:07:26,880
piece that you might not be thinking

00:07:24,060 --> 00:07:28,470
about a lot is your schema if you are

00:07:26,880 --> 00:07:29,880
launching new features and you're

00:07:28,470 --> 00:07:32,040
creating new types in your graph QL

00:07:29,880 --> 00:07:34,590
schema you might be leaking some extra

00:07:32,040 --> 00:07:36,210
stuff through that schema so you can

00:07:34,590 --> 00:07:37,350
definitely and what you definitely

00:07:36,210 --> 00:07:39,750
should do here is you can block

00:07:37,350 --> 00:07:41,610
introspection queries you can even use

00:07:39,750 --> 00:07:44,010
different schemas based on different

00:07:41,610 --> 00:07:46,230
authorization schemes or just different

00:07:44,010 --> 00:07:48,960
clients but definitely something to

00:07:46,230 --> 00:07:52,230
think about and a good answer for this

00:07:48,960 --> 00:07:53,820
particular problem the other thing that

00:07:52,230 --> 00:07:56,100
you have to think about too is request

00:07:53,820 --> 00:07:58,440
fan-out based on you know this sort of

00:07:56,100 --> 00:07:59,820
naive implementation of graph tool you

00:07:58,440 --> 00:08:02,160
might find that it makes a ton of

00:07:59,820 --> 00:08:04,200
requests if that's sort of how you

00:08:02,160 --> 00:08:05,880
designed your graph ul server and you've

00:08:04,200 --> 00:08:07,920
really got it you got to understand that

00:08:05,880 --> 00:08:09,720
that's that might happen right there

00:08:07,920 --> 00:08:11,460
might be a lot of circular calls right

00:08:09,720 --> 00:08:13,620
so you have to think about how you cash

00:08:11,460 --> 00:08:16,320
your data your data calls your API calls

00:08:13,620 --> 00:08:17,850
and I will tell you that batch calls are

00:08:16,320 --> 00:08:19,860
your friend basically everything that

00:08:17,850 --> 00:08:21,840
you can batch you should and it'll make

00:08:19,860 --> 00:08:23,210
things a lot easier for you as you move

00:08:21,840 --> 00:08:25,050
forward

00:08:23,210 --> 00:08:26,760
another question that your back-end

00:08:25,050 --> 00:08:27,690
engineer might ask you is is it

00:08:26,760 --> 00:08:30,210
performant

00:08:27,690 --> 00:08:33,630
right and for some definition of

00:08:30,210 --> 00:08:34,770
performance I would also say that the

00:08:33,630 --> 00:08:36,539
things that you want to bring up here

00:08:34,770 --> 00:08:39,390
are around how we think about

00:08:36,539 --> 00:08:41,550
performance so in this case graph QL

00:08:39,390 --> 00:08:43,680
gives us the ability to understand

00:08:41,550 --> 00:08:46,380
performance in a way that's very

00:08:43,680 --> 00:08:49,020
different than in the past if we can

00:08:46,380 --> 00:08:50,970
track metadata about the resolution of a

00:08:49,020 --> 00:08:53,070
particular field we can actually figure

00:08:50,970 --> 00:08:55,440
out how expensive a particular product

00:08:53,070 --> 00:08:58,020
is we can figure out how much

00:08:55,440 --> 00:09:00,360
what things that we need to take care of

00:08:58,020 --> 00:09:03,510
and we can think about the usage of

00:09:00,360 --> 00:09:06,030
those fields for example if you have a

00:09:03,510 --> 00:09:08,580
really really slow field or resolver but

00:09:06,030 --> 00:09:10,650
you never use it do you even care right

00:09:08,580 --> 00:09:13,040
do you even care if this thing is slow

00:09:10,650 --> 00:09:15,150
if you're not going to be actually using

00:09:13,040 --> 00:09:17,700
the other thing that I think is a really

00:09:15,150 --> 00:09:20,760
great benefit here for graph QL and the

00:09:17,700 --> 00:09:22,920
performance conversation is caching now

00:09:20,760 --> 00:09:24,600
with caching with rest it can be a

00:09:22,920 --> 00:09:26,850
little difficult right if you have a

00:09:24,600 --> 00:09:29,820
field that has I don't know if you have

00:09:26,850 --> 00:09:32,220
some REST API that surfaces a gigantic

00:09:29,820 --> 00:09:34,410
JSON object and nine out of the ten

00:09:32,220 --> 00:09:36,390
fields are cacheable but the last one is

00:09:34,410 --> 00:09:39,000
not you can't cash it right you always

00:09:36,390 --> 00:09:40,470
the the the server doesn't know which

00:09:39,000 --> 00:09:42,750
things you need and so it just says I

00:09:40,470 --> 00:09:45,090
can't cash any of this but with field

00:09:42,750 --> 00:09:47,100
selection we can actually say if you're

00:09:45,090 --> 00:09:49,020
not even using that thing that you can't

00:09:47,100 --> 00:09:52,140
cash we can actually cash the rest of it

00:09:49,020 --> 00:09:55,080
so now your queries define the cash

00:09:52,140 --> 00:09:57,210
ability of of the data that you're

00:09:55,080 --> 00:10:02,040
retrieving rather than just arbitrary

00:09:57,210 --> 00:10:04,550
the thing that the API exposes so you

00:10:02,040 --> 00:10:06,690
have your dwarves door of like you know

00:10:04,550 --> 00:10:09,120
personas that are helping you with your

00:10:06,690 --> 00:10:11,070
data who else are you gonna need on this

00:10:09,120 --> 00:10:12,930
journey so the next set of people that

00:10:11,070 --> 00:10:15,630
you're gonna need they've lived for a

00:10:12,930 --> 00:10:18,510
very long time they've seen everything

00:10:15,630 --> 00:10:20,220
go down they always happen to have an

00:10:18,510 --> 00:10:22,020
answer they have you know they're very

00:10:20,220 --> 00:10:24,690
high and mighty and all those stuff

00:10:22,020 --> 00:10:25,350
mobile engineers so again I'm not saying

00:10:24,690 --> 00:10:27,540
that you're an elf

00:10:25,350 --> 00:10:30,300
but elves live for a long time and they

00:10:27,540 --> 00:10:32,520
never forget so this is important

00:10:30,300 --> 00:10:34,440
because for mobile engineers the things

00:10:32,520 --> 00:10:38,760
that they think about are breaking

00:10:34,440 --> 00:10:41,160
changes right the the lifecycle of an

00:10:38,760 --> 00:10:44,310
application is much much much much much

00:10:41,160 --> 00:10:48,030
longer than your typical web client so

00:10:44,310 --> 00:10:50,760
if you break an API tomorrow it's gonna

00:10:48,030 --> 00:10:52,410
break all of them previously deployed

00:10:50,760 --> 00:10:54,890
mobile applications for all the people

00:10:52,410 --> 00:10:57,990
who have not updated their applications

00:10:54,890 --> 00:11:00,690
and what so why does how does graph kill

00:10:57,990 --> 00:11:03,510
fit into that so what's nice is that you

00:11:00,690 --> 00:11:05,820
know in the past we kind of unknowingly

00:11:03,510 --> 00:11:07,890
broke mobile clients but with graph 2l

00:11:05,820 --> 00:11:08,850
we can actually just do it on purpose so

00:11:07,890 --> 00:11:10,620
now that we have

00:11:08,850 --> 00:11:12,779
information about the usage of our

00:11:10,620 --> 00:11:14,880
schemas and the schema types themselves

00:11:12,779 --> 00:11:16,529
we'll know if we're doing something and

00:11:14,880 --> 00:11:18,690
we can figure out what the ramifications

00:11:16,529 --> 00:11:21,750
are we're making the implicit explicit

00:11:18,690 --> 00:11:23,459
and graph fuel also gives us a much

00:11:21,750 --> 00:11:27,300
deeper understanding of what a breaking

00:11:23,459 --> 00:11:30,690
change actually is for example if you

00:11:27,300 --> 00:11:33,209
break an entire schema and you remove a

00:11:30,690 --> 00:11:35,790
field like maybe in the github API that

00:11:33,209 --> 00:11:38,009
you mentioned that we saw earlier if no

00:11:35,790 --> 00:11:40,800
one is using that field is it actually a

00:11:38,009 --> 00:11:42,509
breaking change no I mean it breaks the

00:11:40,800 --> 00:11:43,920
contract that you had but if no one's

00:11:42,509 --> 00:11:46,759
actually using it it doesn't matter

00:11:43,920 --> 00:11:49,050
let's actually just send that through

00:11:46,759 --> 00:11:50,430
the other thing that's nice is that you

00:11:49,050 --> 00:11:52,680
know with graph QL you can get these

00:11:50,430 --> 00:11:53,040
perfect payloads nothing more nothing

00:11:52,680 --> 00:11:56,160
less

00:11:53,040 --> 00:11:58,769
and again this makes it's a really good

00:11:56,160 --> 00:12:00,149
a really good thing for mobile engineers

00:11:58,769 --> 00:12:03,329
and and the mobile apps that they're

00:12:00,149 --> 00:12:04,889
shipping some questions that they may

00:12:03,329 --> 00:12:09,029
ask they might ask a little bit about

00:12:04,889 --> 00:12:11,040
how to use graph kill in their cache one

00:12:09,029 --> 00:12:13,439
thing that I've heard up to talk into a

00:12:11,040 --> 00:12:15,480
couple of mobile teams of course you

00:12:13,439 --> 00:12:17,009
want to try and serve stale data where

00:12:15,480 --> 00:12:18,839
possible so you can take advantage of

00:12:17,009 --> 00:12:20,790
some of the cache normalization this is

00:12:18,839 --> 00:12:23,130
really dependent on the next piece which

00:12:20,790 --> 00:12:25,380
is how does this interface with existing

00:12:23,130 --> 00:12:27,990
data models prototypically you're gonna

00:12:25,380 --> 00:12:29,880
see that for any application or all the

00:12:27,990 --> 00:12:32,040
things that you're working on it's hard

00:12:29,880 --> 00:12:34,800
to get a fresh start you're working in

00:12:32,040 --> 00:12:36,750
an existing application you're working

00:12:34,800 --> 00:12:39,540
with existing constraints you're working

00:12:36,750 --> 00:12:41,130
with existing tools for all the things

00:12:39,540 --> 00:12:43,019
that are not web or you know you're

00:12:41,130 --> 00:12:44,910
gonna have a lot of different interfaces

00:12:43,019 --> 00:12:46,319
for how you deal with data already right

00:12:44,910 --> 00:12:48,540
so you don't want to just replace that

00:12:46,319 --> 00:12:51,930
thing you want to try and integrate so

00:12:48,540 --> 00:12:54,990
how can you address that problem in this

00:12:51,930 --> 00:12:57,509
case code generation is your your

00:12:54,990 --> 00:13:00,779
closest friend code generation means

00:12:57,509 --> 00:13:03,089
that you can just make those data models

00:13:00,779 --> 00:13:04,949
that the mobile applications are using

00:13:03,089 --> 00:13:06,509
and you can use and they can just use it

00:13:04,949 --> 00:13:08,880
like they use it and they can use

00:13:06,509 --> 00:13:10,620
graphical to query things so you still

00:13:08,880 --> 00:13:13,110
get the power of the payloads of graph

00:13:10,620 --> 00:13:15,600
QL but you get the you get this this

00:13:13,110 --> 00:13:18,120
nice flexibility of using the type data

00:13:15,600 --> 00:13:22,499
models that those applications are using

00:13:18,120 --> 00:13:26,069
already all right so you got you

00:13:22,499 --> 00:13:27,929
dwarves got your elves and you need a

00:13:26,069 --> 00:13:29,249
little bit more you need some more help

00:13:27,929 --> 00:13:30,149
you can't just do that you need you need

00:13:29,249 --> 00:13:33,389
how you have more people in your

00:13:30,149 --> 00:13:36,779
organization so who knows a lot about

00:13:33,389 --> 00:13:38,789
change and who is easily swayed by new

00:13:36,779 --> 00:13:41,489
technologies and trends this might be

00:13:38,789 --> 00:13:42,719
useful you never know okay web engineers

00:13:41,489 --> 00:13:44,939
so your web engineers that your your

00:13:42,719 --> 00:13:47,939
humans easily swayed by the power of

00:13:44,939 --> 00:13:49,319
things like graph QL and this is

00:13:47,939 --> 00:13:51,179
important too you need champions

00:13:49,319 --> 00:13:52,799
throughout your organization you need to

00:13:51,179 --> 00:13:55,619
convince other people that graph you'll

00:13:52,799 --> 00:13:58,619
make sense for the particular problems

00:13:55,619 --> 00:14:00,899
that you're facing so one thing that I

00:13:58,619 --> 00:14:04,049
found is as I'm talking to other web

00:14:00,899 --> 00:14:06,839
engineers is that it's well there is

00:14:04,049 --> 00:14:09,779
certainly a lot of value in making these

00:14:06,839 --> 00:14:11,639
expressive api's from our backends it's

00:14:09,779 --> 00:14:13,679
actually a really good way of taking all

00:14:11,639 --> 00:14:16,559
this junk that we have in our client

00:14:13,679 --> 00:14:18,029
side and pushing that to the back end so

00:14:16,559 --> 00:14:20,429
you can kind of hit it from both sides

00:14:18,029 --> 00:14:22,439
and that's great because we all know

00:14:20,429 --> 00:14:25,589
that our JavaScript applications are

00:14:22,439 --> 00:14:26,970
doing all sorts of weird stuff with JSON

00:14:25,589 --> 00:14:29,629
and all of the stuff that we're fetching

00:14:26,970 --> 00:14:29,629
from these APs

00:14:29,849 --> 00:14:35,009
and this is important because for web

00:14:31,739 --> 00:14:37,289
engineers particularly with such complex

00:14:35,009 --> 00:14:39,119
applications there's a lot of times

00:14:37,289 --> 00:14:41,279
where you're doing little computations

00:14:39,119 --> 00:14:42,539
the example that we have at Coursera is

00:14:41,279 --> 00:14:44,849
that we always want to display a

00:14:42,539 --> 00:14:46,949
professor's full name and it'll be like

00:14:44,849 --> 00:14:49,019
title title title title title first name

00:14:46,949 --> 00:14:51,359
last name but on mobile it might just be

00:14:49,019 --> 00:14:53,999
title first name last name and it's like

00:14:51,359 --> 00:14:56,220
very you know inconsistent right but

00:14:53,999 --> 00:14:59,309
that derived data doesn't make it to our

00:14:56,220 --> 00:15:01,079
API it's a hard thing to talk about okay

00:14:59,309 --> 00:15:02,399
you know you're designing this storage

00:15:01,079 --> 00:15:03,689
layer for instructors you should

00:15:02,399 --> 00:15:05,339
definitely expose this field where

00:15:03,689 --> 00:15:07,349
you're gonna you know display different

00:15:05,339 --> 00:15:09,389
things in different ways they're really

00:15:07,349 --> 00:15:10,679
related to use case how much space you

00:15:09,389 --> 00:15:13,289
have on the screen all that sort of

00:15:10,679 --> 00:15:14,549
stuff right and so those are the things

00:15:13,289 --> 00:15:15,539
that we don't take into account and

00:15:14,549 --> 00:15:17,429
those are the things that we end up

00:15:15,539 --> 00:15:20,999
coding into our clients rather than

00:15:17,429 --> 00:15:22,409
putting into the API and like again

00:15:20,999 --> 00:15:25,349
other talks that we've heard about today

00:15:22,409 --> 00:15:27,719
graph QL can pave over some of these

00:15:25,349 --> 00:15:30,239
state management solutions like Redux

00:15:27,719 --> 00:15:32,159
now this is huge this means that you

00:15:30,239 --> 00:15:33,569
again have one single API that you can

00:15:32,159 --> 00:15:34,230
use for all of your data

00:15:33,569 --> 00:15:38,010
no matter

00:15:34,230 --> 00:15:40,650
where it is one thing to tell your web

00:15:38,010 --> 00:15:41,970
engineers about this one is that tell

00:15:40,650 --> 00:15:44,490
them that type safety is cool

00:15:41,970 --> 00:15:46,020
it's hip it's it's fresh it will make

00:15:44,490 --> 00:15:48,060
sure that they are the most popular kids

00:15:46,020 --> 00:15:50,160
on the block and this is actually true

00:15:48,060 --> 00:15:51,090
because type safety is actually really

00:15:50,160 --> 00:15:53,880
awesome

00:15:51,090 --> 00:15:56,700
being able to do things like validating

00:15:53,880 --> 00:15:59,760
what api's you're accessing at compile

00:15:56,700 --> 00:16:01,460
time is like mind-blowing graph QL

00:15:59,760 --> 00:16:03,840
schemas give us the power to do

00:16:01,460 --> 00:16:06,300
incredible things that you're not even

00:16:03,840 --> 00:16:07,800
aware of right now I saw this library

00:16:06,300 --> 00:16:10,110
that I have to tell you all about it I

00:16:07,800 --> 00:16:12,870
saw this library called babel blade and

00:16:10,110 --> 00:16:14,550
it's it's written by shawn wang and what

00:16:12,870 --> 00:16:17,190
it does is that instead of you writing

00:16:14,550 --> 00:16:19,530
your graph QL queries it parses your

00:16:17,190 --> 00:16:22,140
java script and sees which objects you

00:16:19,530 --> 00:16:23,570
access on a data object and generates a

00:16:22,140 --> 00:16:25,800
graph QL query for you

00:16:23,570 --> 00:16:27,360
Wow mind-blowing you don't even have to

00:16:25,800 --> 00:16:30,420
write graph 12 queries anymore you just

00:16:27,360 --> 00:16:32,160
use JavaScript anyway schemas power that

00:16:30,420 --> 00:16:33,750
sort of tooling and we couldn't get that

00:16:32,160 --> 00:16:37,590
before if we didn't have types if we

00:16:33,750 --> 00:16:39,030
didn't have schemas another some of the

00:16:37,590 --> 00:16:40,500
questions that your front-end engineers

00:16:39,030 --> 00:16:41,970
might ask they Google a couple of things

00:16:40,500 --> 00:16:44,130
and say okay which one should I use

00:16:41,970 --> 00:16:46,650
which graph can show that you should use

00:16:44,130 --> 00:16:48,390
Apollo should I use relay the first

00:16:46,650 --> 00:16:50,790
answer is you might not actually need a

00:16:48,390 --> 00:16:52,680
client you don't need a client to use

00:16:50,790 --> 00:16:55,170
graph QL servers or you graph gel

00:16:52,680 --> 00:16:56,790
backends you could just use fetch if you

00:16:55,170 --> 00:16:58,800
really need it to so definitely make

00:16:56,790 --> 00:17:01,080
sure that you need a lot of the benefits

00:16:58,800 --> 00:17:02,160
that Apollo gives you and as you seen

00:17:01,080 --> 00:17:04,140
before there's a lot of great features

00:17:02,160 --> 00:17:06,600
make sure that you understand the

00:17:04,140 --> 00:17:08,730
complexities that it brings with regards

00:17:06,600 --> 00:17:12,540
to bundle size developer velocity all

00:17:08,730 --> 00:17:13,350
that sort of stuff so underneath all of

00:17:12,540 --> 00:17:14,760
this you want to make sure that you're

00:17:13,350 --> 00:17:17,790
actually solving problems that your

00:17:14,760 --> 00:17:19,380
organization has another question that

00:17:17,790 --> 00:17:21,390
they're gonna ask too is that they see

00:17:19,380 --> 00:17:24,150
schemas they see types they see api's

00:17:21,390 --> 00:17:26,340
they start asking how does this actually

00:17:24,150 --> 00:17:29,010
change how we build products and

00:17:26,340 --> 00:17:31,050
absolutely it does if you take graph

00:17:29,010 --> 00:17:32,940
fuel to the extreme and you are using

00:17:31,050 --> 00:17:35,250
this idea of schema first development

00:17:32,940 --> 00:17:36,390
it's gonna be really weird because you

00:17:35,250 --> 00:17:38,840
know you might have always thought about

00:17:36,390 --> 00:17:41,730
just building UI but now you're also

00:17:38,840 --> 00:17:44,100
building the API you're also creating

00:17:41,730 --> 00:17:45,450
types but it's so much more expressive

00:17:44,100 --> 00:17:47,070
and I think there's a lot of benefits to

00:17:45,450 --> 00:17:47,850
that so you have to acknowledge that

00:17:47,070 --> 00:17:49,470
it's a little bit

00:17:47,850 --> 00:17:53,580
strange but they have to buy into it

00:17:49,470 --> 00:17:54,900
otherwise it'll just not work out so

00:17:53,580 --> 00:17:57,330
other people that you need to convince

00:17:54,900 --> 00:17:58,410
in the organization one is some people

00:17:57,330 --> 00:18:00,830
who want to be able to move a little

00:17:58,410 --> 00:18:03,240
faster who want to try some new things

00:18:00,830 --> 00:18:05,309
these are your ends these are your

00:18:03,240 --> 00:18:06,539
product people they were just trees in

00:18:05,309 --> 00:18:08,669
the forest but now that they hear about

00:18:06,539 --> 00:18:10,169
graft well they start moving and they

00:18:08,669 --> 00:18:12,809
start gathering together and they start

00:18:10,169 --> 00:18:15,150
taking down giant towers and this is

00:18:12,809 --> 00:18:17,010
really important because that's what

00:18:15,150 --> 00:18:18,990
that's what we're trying to sell is that

00:18:17,010 --> 00:18:21,179
with graft - well we can increase the

00:18:18,990 --> 00:18:23,039
velocity of our developers we can give

00:18:21,179 --> 00:18:26,159
them an ability to express their anger

00:18:23,039 --> 00:18:27,630
against Saruman or whatever and the

00:18:26,159 --> 00:18:29,490
other piece to here is that your graph

00:18:27,630 --> 00:18:31,650
fuel API is inevitably can be human

00:18:29,490 --> 00:18:32,490
readable so they can explore the api's

00:18:31,650 --> 00:18:34,140
and they don't need to have a

00:18:32,490 --> 00:18:36,270
fundamental knowledge of how your system

00:18:34,140 --> 00:18:41,010
works in order to be able to explore and

00:18:36,270 --> 00:18:43,200
add to what it's capable of doing and

00:18:41,010 --> 00:18:44,280
there's two words really important

00:18:43,200 --> 00:18:46,230
companions here and we've got to make

00:18:44,280 --> 00:18:48,419
sure that we talk about them both one is

00:18:46,230 --> 00:18:51,120
someone who can be a champion for you

00:18:48,419 --> 00:18:52,919
across the organization someone who

00:18:51,120 --> 00:18:55,200
makes who works behind the scenes to

00:18:52,919 --> 00:18:57,419
make you a successful engineer or

00:18:55,200 --> 00:19:00,270
whatever role you're in someone who

00:18:57,419 --> 00:19:01,770
definitely has Eagles and could have

00:19:00,270 --> 00:19:03,780
flown you to Mount Doom from the

00:19:01,770 --> 00:19:06,900
beginning and chooses not to do it

00:19:03,780 --> 00:19:09,000
Gandalf your manager has been trying to

00:19:06,900 --> 00:19:13,470
get you to do all these things to grow

00:19:09,000 --> 00:19:15,090
as as a human and he's trying to you

00:19:13,470 --> 00:19:17,190
know make sure that he's opening the

00:19:15,090 --> 00:19:18,450
right doors to get you to Mount Doom see

00:19:17,190 --> 00:19:21,780
that you can get this great graph killed

00:19:18,450 --> 00:19:24,030
goodness they're definitely gonna ask

00:19:21,780 --> 00:19:25,380
you how can I help because they don't

00:19:24,030 --> 00:19:27,480
know anything about Graff - oh they're

00:19:25,380 --> 00:19:29,850
not here they are depending on you to

00:19:27,480 --> 00:19:31,500
tell them how to help and as I've

00:19:29,850 --> 00:19:32,970
mentioned before there's a few ways and

00:19:31,500 --> 00:19:35,100
a few people that they're gonna need to

00:19:32,970 --> 00:19:38,190
reach out and really be a champion for

00:19:35,100 --> 00:19:40,380
graph QL at your organization the last

00:19:38,190 --> 00:19:42,570
person that you need on this journey is

00:19:40,380 --> 00:19:44,640
someone who makes developers lives

00:19:42,570 --> 00:19:47,429
easier and someone who wants to work

00:19:44,640 --> 00:19:50,580
better with others graph QL by itself

00:19:47,429 --> 00:19:51,929
with one person it's okay it could be

00:19:50,580 --> 00:19:54,299
much better but if your entire

00:19:51,929 --> 00:19:57,659
organization in the entire team speaks

00:19:54,299 --> 00:19:59,400
graph QL it's great it's this this one

00:19:57,659 --> 00:20:01,410
language that you can can can all use

00:19:59,400 --> 00:20:03,390
together and that's you right

00:20:01,410 --> 00:20:05,460
this journey this is you this is your

00:20:03,390 --> 00:20:08,250
the best resource that your organization

00:20:05,460 --> 00:20:09,990
has to make graph kills successful and I

00:20:08,250 --> 00:20:11,880
don't know which of these to you are you

00:20:09,990 --> 00:20:13,020
can be Sam you can be Frodo you could be

00:20:11,880 --> 00:20:15,060
their backpacks you could be whatever

00:20:13,020 --> 00:20:17,910
but what you need to know here is that

00:20:15,060 --> 00:20:19,620
again you're their best resource and you

00:20:17,910 --> 00:20:22,350
need to understand what the problems are

00:20:19,620 --> 00:20:24,420
and what graph QL solves don't just add

00:20:22,350 --> 00:20:25,740
graphical because you got to go to this

00:20:24,420 --> 00:20:27,150
conference and you here to me talk and

00:20:25,740 --> 00:20:28,890
you said that sounds great

00:20:27,150 --> 00:20:31,530
make sure that it solves the problems

00:20:28,890 --> 00:20:34,620
and I think it'll be easy to convince

00:20:31,530 --> 00:20:36,390
others the second piece you have your

00:20:34,620 --> 00:20:37,500
fellowship you've figured out all the

00:20:36,390 --> 00:20:38,850
people that are going to go on this

00:20:37,500 --> 00:20:40,710
journey with you

00:20:38,850 --> 00:20:42,420
the second piece here is figuring out

00:20:40,710 --> 00:20:44,520
what your architecture looks like and

00:20:42,420 --> 00:20:47,160
this is your map this is figuring out

00:20:44,520 --> 00:20:48,840
this is figuring out where am I going

00:20:47,160 --> 00:20:52,050
where where are we going to try and go

00:20:48,840 --> 00:20:54,200
with this there are three main sort of

00:20:52,050 --> 00:20:57,420
architectures that I've heard of or seen

00:20:54,200 --> 00:20:59,040
and of course every every organization

00:20:57,420 --> 00:21:00,300
is going to have some flavor or some

00:20:59,040 --> 00:21:02,550
combination of these things

00:21:00,300 --> 00:21:04,680
the first one is graph tool native this

00:21:02,550 --> 00:21:06,780
is graph QL is your end-all-be-all

00:21:04,680 --> 00:21:07,860
you loved it so much that you put

00:21:06,780 --> 00:21:09,900
everything in graphical your

00:21:07,860 --> 00:21:12,060
authentication your authorization it

00:21:09,900 --> 00:21:14,460
accesses all your databases your schemas

00:21:12,060 --> 00:21:16,590
their your resolvers are there and this

00:21:14,460 --> 00:21:18,900
is typical for maybe some new new

00:21:16,590 --> 00:21:20,970
applications or people trying things out

00:21:18,900 --> 00:21:23,270
and this is great this is a great

00:21:20,970 --> 00:21:25,860
solution especially for getting started

00:21:23,270 --> 00:21:28,350
another strategy that might be a good

00:21:25,860 --> 00:21:31,380
destination to get to is the API gateway

00:21:28,350 --> 00:21:33,960
the API gateway B means that graph QL

00:21:31,380 --> 00:21:35,520
just becomes a router it says for these

00:21:33,960 --> 00:21:37,590
particular requests we're going to go

00:21:35,520 --> 00:21:38,850
here and proxy this request here for

00:21:37,590 --> 00:21:42,060
these requests over here let's go over

00:21:38,850 --> 00:21:44,670
here and in this case the graph qo layer

00:21:42,060 --> 00:21:46,770
is super thin and this thin graph to a

00:21:44,670 --> 00:21:49,650
layer just ends up proxying all this

00:21:46,770 --> 00:21:50,700
data to the underlying services on the

00:21:49,650 --> 00:21:52,740
left there

00:21:50,700 --> 00:21:55,350
your schemas likely come from somewhere

00:21:52,740 --> 00:21:57,690
else and your resolvers likely are just

00:21:55,350 --> 00:22:00,870
the execution of this particular API in

00:21:57,690 --> 00:22:02,370
that server itself the last one and this

00:22:00,870 --> 00:22:04,950
one is the one that I'm seeing a lot

00:22:02,370 --> 00:22:06,440
more often is the the hybrid

00:22:04,950 --> 00:22:09,090
architecture the layered architecture

00:22:06,440 --> 00:22:10,800
and this is interesting because what

00:22:09,090 --> 00:22:13,650
this does is that this adds graph to you

00:22:10,800 --> 00:22:15,000
all at every layer so in your claim you

00:22:13,650 --> 00:22:17,250
have your client-side schema

00:22:15,000 --> 00:22:20,010
we heard from Apollo earlier you have

00:22:17,250 --> 00:22:21,570
your graph QL schema that's happening at

00:22:20,010 --> 00:22:23,430
the graphical server layer you might

00:22:21,570 --> 00:22:25,110
have some business logic in a resolver

00:22:23,430 --> 00:22:27,570
on a graph QL in the graph QL layer

00:22:25,110 --> 00:22:29,610
there and the schemas might come from

00:22:27,570 --> 00:22:31,980
this backing service that is a normal

00:22:29,610 --> 00:22:34,080
REST API it might be the middle layer it

00:22:31,980 --> 00:22:35,940
might be the top layer but ultimately

00:22:34,080 --> 00:22:37,890
your source of truth becomes the

00:22:35,940 --> 00:22:39,810
aggregation of all of those things and I

00:22:37,890 --> 00:22:43,020
think that's the most flexible and the

00:22:39,810 --> 00:22:44,400
one that's also the most complex all

00:22:43,020 --> 00:22:46,020
right you've figured out where you need

00:22:44,400 --> 00:22:47,580
to go you're trying to figure out how

00:22:46,020 --> 00:22:49,530
are you gonna get there of course you

00:22:47,580 --> 00:22:51,120
could have used the eagles but Gandalf

00:22:49,530 --> 00:22:52,740
said no we're not gonna use the eagles

00:22:51,120 --> 00:22:55,020
someone in the backs like oh there's a

00:22:52,740 --> 00:22:56,370
good reason why it's like okay no the

00:22:55,020 --> 00:22:59,190
eagles could have solved a lot of

00:22:56,370 --> 00:23:00,660
problems really early on first off you

00:22:59,190 --> 00:23:02,190
need schemas schemas are really

00:23:00,660 --> 00:23:04,110
important if you don't have these on

00:23:02,190 --> 00:23:05,820
your REST API if you don't have this on

00:23:04,110 --> 00:23:07,770
any part of your service you're gonna

00:23:05,820 --> 00:23:09,420
have some issues you want to get that

00:23:07,770 --> 00:23:11,700
figure out how you do it you might be

00:23:09,420 --> 00:23:14,490
able to mock your HTTP requests and

00:23:11,700 --> 00:23:16,050
guess at what the schema is but unless

00:23:14,490 --> 00:23:19,680
you have a schema you're gonna have a

00:23:16,050 --> 00:23:21,600
hard time adopting graph QL the other

00:23:19,680 --> 00:23:23,670
another strategy here that's going to be

00:23:21,600 --> 00:23:25,470
important for getting to graph QL across

00:23:23,670 --> 00:23:27,180
your organization is figuring out how

00:23:25,470 --> 00:23:28,620
you're actually going to adopt it how

00:23:27,180 --> 00:23:31,860
you're gonna actually insert this into

00:23:28,620 --> 00:23:33,030
your runtime and there's a couple of

00:23:31,860 --> 00:23:34,410
different ways that I find that are

00:23:33,030 --> 00:23:37,860
really interesting for incremental

00:23:34,410 --> 00:23:39,780
adoption one way might be to say we have

00:23:37,860 --> 00:23:42,090
this huge product let's take this one

00:23:39,780 --> 00:23:43,620
piece let's make that all in graph QL

00:23:42,090 --> 00:23:45,390
will build the server we'll build all

00:23:43,620 --> 00:23:47,010
that sort of stuff and that's a great

00:23:45,390 --> 00:23:49,200
strategy you figure out the whole sort

00:23:47,010 --> 00:23:51,510
of cut of graph to L to figure out how

00:23:49,200 --> 00:23:53,820
the tooling works how the workflows work

00:23:51,510 --> 00:23:54,930
all that sort of stuff another one that

00:23:53,820 --> 00:23:58,290
I'm hearing that's really interesting

00:23:54,930 --> 00:24:01,080
too is to move your entire client to

00:23:58,290 --> 00:24:02,940
100% graph to L now you might be saying

00:24:01,080 --> 00:24:04,170
John that doesn't sound like incremental

00:24:02,940 --> 00:24:07,710
adoption that's the thing we're trying

00:24:04,170 --> 00:24:10,170
not to do well in this case your client

00:24:07,710 --> 00:24:11,790
is actually still making the same rest

00:24:10,170 --> 00:24:15,000
calls and the same calls that it was

00:24:11,790 --> 00:24:17,430
making before but your UI is using graph

00:24:15,000 --> 00:24:19,350
QL to make those declarations and so now

00:24:17,430 --> 00:24:21,390
you can actually see which data you need

00:24:19,350 --> 00:24:24,300
and which data you need to replace

00:24:21,390 --> 00:24:26,400
underneath that graph QL schema two to

00:24:24,300 --> 00:24:28,179
create the graph QL server and so you

00:24:26,400 --> 00:24:30,669
can actually test out graft

00:24:28,179 --> 00:24:33,210
without even using a server at all you

00:24:30,669 --> 00:24:35,970
can just have everything in the clients

00:24:33,210 --> 00:24:38,889
another point to make here is that

00:24:35,970 --> 00:24:40,840
definitely invest in tooling we saw that

00:24:38,889 --> 00:24:42,700
incredible demo by Adam where he added

00:24:40,840 --> 00:24:45,700
this thing and shipped some stuff the

00:24:42,700 --> 00:24:47,080
only reason that that's available is

00:24:45,700 --> 00:24:49,629
that there was a lot of investment in

00:24:47,080 --> 00:24:50,980
tooling right without the tools he he's

00:24:49,629 --> 00:24:53,679
just guessing that a lot of these things

00:24:50,980 --> 00:24:55,450
so a small amount of investment really

00:24:53,679 --> 00:24:58,210
pays off whether it's with validation

00:24:55,450 --> 00:25:00,070
whether it's cogeneration all of these

00:24:58,210 --> 00:25:02,019
things matter and you want to make the

00:25:00,070 --> 00:25:03,639
developer experience really really good

00:25:02,019 --> 00:25:07,389
ultimately that's one of the biggest

00:25:03,639 --> 00:25:08,499
sales for graph QL another thing that

00:25:07,389 --> 00:25:11,289
you will definitely need to figure out

00:25:08,499 --> 00:25:12,970
is what your metric of success is and a

00:25:11,289 --> 00:25:14,799
lot of people get caught up they see

00:25:12,970 --> 00:25:16,629
they see graph QL they say okay we have

00:25:14,799 --> 00:25:19,179
a giant query we think this will make

00:25:16,629 --> 00:25:21,309
things faster let's use that well what

00:25:19,179 --> 00:25:23,110
happens if it's not faster what happens

00:25:21,309 --> 00:25:25,149
if for whatever reason the api's are

00:25:23,110 --> 00:25:27,190
slow or the resolution strategy is weird

00:25:25,149 --> 00:25:28,659
or you're building a graphical server

00:25:27,190 --> 00:25:31,210
for the first time and you make some

00:25:28,659 --> 00:25:33,369
rookie mistakes suddenly your project is

00:25:31,210 --> 00:25:34,899
not doing well right but if we want to

00:25:33,369 --> 00:25:36,220
back up and think about there are lots

00:25:34,899 --> 00:25:38,049
of other things that you can use to

00:25:36,220 --> 00:25:40,299
measure the success of an adoption of a

00:25:38,049 --> 00:25:41,909
technology like graph QL developer

00:25:40,299 --> 00:25:45,159
velocity really really important

00:25:41,909 --> 00:25:47,200
consistency really important type safety

00:25:45,159 --> 00:25:49,210
like I mentioned really important all of

00:25:47,200 --> 00:25:51,159
these things are really great cuts to

00:25:49,210 --> 00:25:53,259
justify some of the work that you're

00:25:51,159 --> 00:25:54,700
doing here and inevitably these are all

00:25:53,259 --> 00:25:58,350
really great improvements for the

00:25:54,700 --> 00:26:01,419
developer experience of your engineers

00:25:58,350 --> 00:26:03,730
so this one was really cool

00:26:01,419 --> 00:26:04,809
so you fear doubt your fellowship you

00:26:03,730 --> 00:26:06,190
figured out where you're going you

00:26:04,809 --> 00:26:07,659
figured out how are you gonna get there

00:26:06,190 --> 00:26:09,549
but what do you do when you get there

00:26:07,659 --> 00:26:12,129
you're like great we have graph you all

00:26:09,549 --> 00:26:14,110
now what and these are the questions

00:26:12,129 --> 00:26:16,389
that are important to because you don't

00:26:14,110 --> 00:26:17,919
want to get blindsided by this as soon

00:26:16,389 --> 00:26:19,240
as you get that graphic you'll thing in

00:26:17,919 --> 00:26:21,850
production you have everything running

00:26:19,240 --> 00:26:24,309
someone is gonna ask you who owns this

00:26:21,850 --> 00:26:26,590
graph QL server this server that runs

00:26:24,309 --> 00:26:27,700
between your entire organization who's

00:26:26,590 --> 00:26:30,309
responsible for this

00:26:27,700 --> 00:26:32,860
who deploys this how do you make changes

00:26:30,309 --> 00:26:35,019
to it right what happens if this is

00:26:32,860 --> 00:26:36,730
being backed by some data store and that

00:26:35,019 --> 00:26:38,980
thing changes how do you coordinate

00:26:36,730 --> 00:26:40,720
schema changes these are the important

00:26:38,980 --> 00:26:42,010
questions that you only get to after

00:26:40,720 --> 00:26:43,990
you've deployed everything and you

00:26:42,010 --> 00:26:45,280
that you're the one responsible and

00:26:43,990 --> 00:26:46,780
you're the one staying up late and

00:26:45,280 --> 00:26:49,510
you're the one whose fault it is that

00:26:46,780 --> 00:26:51,190
the entire site broke right so making

00:26:49,510 --> 00:26:53,260
sure that you understand what this the

00:26:51,190 --> 00:26:56,760
answer to this early on will give you a

00:26:53,260 --> 00:26:59,530
lot more sleep at night hopefully and

00:26:56,760 --> 00:27:02,200
definitely Evangelization how do you

00:26:59,530 --> 00:27:04,810
even use graph you oh this is not a talk

00:27:02,200 --> 00:27:06,640
about you know how do you use the syntax

00:27:04,810 --> 00:27:08,380
for graph tool but this is a talk about

00:27:06,640 --> 00:27:10,930
what are the conventions around how we

00:27:08,380 --> 00:27:12,520
use graph tool for example do we make a

00:27:10,930 --> 00:27:14,800
lot of little queries do we use

00:27:12,520 --> 00:27:16,390
fragments do we name our fragments do we

00:27:14,800 --> 00:27:19,120
have to use IDs do we have to capture

00:27:16,390 --> 00:27:21,550
all this extra information and how do we

00:27:19,120 --> 00:27:24,520
use the more advanced parts of graph QL

00:27:21,550 --> 00:27:26,110
deferred queries live queries all these

00:27:24,520 --> 00:27:27,850
things that are really really powerful

00:27:26,110 --> 00:27:31,800
you're going to need to teach people to

00:27:27,850 --> 00:27:35,110
have that kind of discussion all right

00:27:31,800 --> 00:27:37,030
okay cool we are coming up to the end so

00:27:35,110 --> 00:27:38,650
right here we're gonna wrap up I said

00:27:37,030 --> 00:27:39,670
the big piece here we have four main

00:27:38,650 --> 00:27:42,010
things that you're gonna have to think

00:27:39,670 --> 00:27:44,440
about as you're building this case for

00:27:42,010 --> 00:27:47,230
graph you'll first build your fellowship

00:27:44,440 --> 00:27:49,690
figure out who amongst your organization

00:27:47,230 --> 00:27:51,190
you need to convince it cannot be just

00:27:49,690 --> 00:27:53,080
yourself it's not going to happen it's

00:27:51,190 --> 00:27:54,820
gonna be really tough find other people

00:27:53,080 --> 00:27:57,100
convince them figure out what they need

00:27:54,820 --> 00:27:59,860
and figure out how graph gel solves that

00:27:57,100 --> 00:28:02,260
need second is figure out what your

00:27:59,860 --> 00:28:04,330
destination is you're gonna need to

00:28:02,260 --> 00:28:06,370
orchestrate a lot of things a lot of

00:28:04,330 --> 00:28:07,990
changes are gonna happen figure out that

00:28:06,370 --> 00:28:12,160
first so that you can work together to

00:28:07,990 --> 00:28:14,320
get there third is get a lift get an

00:28:12,160 --> 00:28:18,760
eagle get something find a way to get

00:28:14,320 --> 00:28:20,650
there that makes sense for you and in

00:28:18,760 --> 00:28:23,740
the end you'll make developers lives

00:28:20,650 --> 00:28:27,100
better I want to have a quick shout out

00:28:23,740 --> 00:28:29,650
to Eve Sascha Frederic Gago thank you so

00:28:27,100 --> 00:28:32,500
much for helping provide a lot of the

00:28:29,650 --> 00:28:33,830
meat of this talk for me and thank you

00:28:32,500 --> 00:28:39,000
all for showing up

00:28:33,830 --> 00:28:39,000

YouTube URL: https://www.youtube.com/watch?v=713PlUnZKx0


