Title: Shipping 'Belonging' with GraphQL & Apollo at Airbnb (Adam Neary)
Publication date: 2018-12-05
Playlist: GraphQL Summit 2018
Description: 
	Talk from GraphQL Summit 2018 - Nov 7, 2018

GraphQL and Apollo Platform sit at the center of a portfolio of tools engineers at Airbnb are using to ship faster, and Adam (Tech Lead at Airbnb) does live coding to demonstrate how fast and easy it is to build product when these tools are all working together.

Airbnb's mission is to create a world where anyone can Belong Anywhere. But we can only deliver on that vision by executing!

Resources:
Learn more about Summit - https://summit.graphql.com/
Explore the GraphQL FAQs - https://www.apollographql.com/docs/resources/faq
Checkout the Apollo docs - https://www.apollographql.com/docs/
Captions: 
	00:00:03,290 --> 00:00:09,240
so I'm Adam Neary I'm a JavaScript

00:00:05,880 --> 00:00:11,309
engineer at Airbnb and we are making a

00:00:09,240 --> 00:00:12,840
massive investment in graph QL you know

00:00:11,309 --> 00:00:15,809
putting it at the center of our API

00:00:12,840 --> 00:00:17,759
strategy for our product for our

00:00:15,809 --> 00:00:20,550
customer support tools for our internal

00:00:17,759 --> 00:00:23,340
tooling across web iOS and Android like

00:00:20,550 --> 00:00:25,110
graph QL for us is the answer you just

00:00:23,340 --> 00:00:26,399
heard from Jeff and might have seen the

00:00:25,110 --> 00:00:27,960
announcement yesterday about the graph

00:00:26,399 --> 00:00:29,700
to elf foundation I'm really excited

00:00:27,960 --> 00:00:32,489
that Airbnb has been invited to be a

00:00:29,700 --> 00:00:34,710
founding member I think I've mentioned

00:00:32,489 --> 00:00:36,960
in the past that Airbnb is strategy

00:00:34,710 --> 00:00:38,580
philosophy around service-oriented

00:00:36,960 --> 00:00:41,250
architectures a bit different from face

00:00:38,580 --> 00:00:43,530
books and so sort of by definition our

00:00:41,250 --> 00:00:44,940
strategy around graph QL is a little bit

00:00:43,530 --> 00:00:46,140
different so it's really exciting to be

00:00:44,940 --> 00:00:47,610
part of this foundation where we're

00:00:46,140 --> 00:00:48,690
bringing together a lot of different

00:00:47,610 --> 00:00:50,700
companies with some different world

00:00:48,690 --> 00:00:52,170
views about back-end and front-end to

00:00:50,700 --> 00:00:54,390
make sure that graph QL is really the

00:00:52,170 --> 00:00:56,070
dominant protocol for API communication

00:00:54,390 --> 00:00:59,760
going forward I think so you know it's

00:00:56,070 --> 00:01:01,530
really exciting so what else should we

00:00:59,760 --> 00:01:03,899
talk about I don't want to think that's

00:01:01,530 --> 00:01:05,700
the news story actually the differences

00:01:03,899 --> 00:01:07,620
in our strategy is I really think the

00:01:05,700 --> 00:01:09,540
news story and we might be burying the

00:01:07,620 --> 00:01:11,610
lede I want to talk to you about kind of

00:01:09,540 --> 00:01:13,380
the magic of building with graph QL like

00:01:11,610 --> 00:01:15,300
it's actually a lot of fun frankly to be

00:01:13,380 --> 00:01:16,890
building products with graph QL and I

00:01:15,300 --> 00:01:18,180
think we can move a lot faster so I

00:01:16,890 --> 00:01:20,130
thought rather than talking about our

00:01:18,180 --> 00:01:22,020
strategy we would actually show you and

00:01:20,130 --> 00:01:23,040
do a little bit of live coding together

00:01:22,020 --> 00:01:25,229
what do you think

00:01:23,040 --> 00:01:26,549
so it might be a reasonable way to start

00:01:25,229 --> 00:01:28,650
that's a good way to kick-off graph QL

00:01:26,549 --> 00:01:30,360
summit but first I wanted to set the

00:01:28,650 --> 00:01:32,280
context like why does this even matter

00:01:30,360 --> 00:01:33,960
and why not just take a month to build

00:01:32,280 --> 00:01:35,460
that feature instead of a week why don't

00:01:33,960 --> 00:01:38,460
we just relax take our foot off the gas

00:01:35,460 --> 00:01:40,470
and do what we've been doing and I think

00:01:38,460 --> 00:01:43,200
the answer for me really lies at the

00:01:40,470 --> 00:01:44,970
heart why I choose to be at Airbnb and

00:01:43,200 --> 00:01:46,470
so I hope you'll indulge me I'll keep it

00:01:44,970 --> 00:01:47,850
to two minutes tops I promise and I

00:01:46,470 --> 00:01:49,770
believe we will bring it back to graph

00:01:47,850 --> 00:01:51,270
table in the end but I want to give you

00:01:49,770 --> 00:01:52,560
some insight into why I'm passionate

00:01:51,270 --> 00:01:54,900
about this and why I'm spending my time

00:01:52,560 --> 00:01:57,210
doing stuff like this and not other

00:01:54,900 --> 00:02:00,030
things the two reasons the first is the

00:01:57,210 --> 00:02:02,520
mission the team at Airbnb from the

00:02:00,030 --> 00:02:04,860
founders founders on down earnestly

00:02:02,520 --> 00:02:09,060
believe in this mission of creating a

00:02:04,860 --> 00:02:11,099
world where you can belong anywhere and

00:02:09,060 --> 00:02:12,599
it's not just talk we actually believe

00:02:11,099 --> 00:02:15,500
this in fact I've experienced it

00:02:12,599 --> 00:02:17,239
firsthand this experience of host

00:02:15,500 --> 00:02:18,349
you know making a guest feel so

00:02:17,239 --> 00:02:19,849
comfortable bringing you into the

00:02:18,349 --> 00:02:22,099
community helping you find places to eat

00:02:19,849 --> 00:02:23,540
and places to go things to do you know

00:02:22,099 --> 00:02:25,939
it really creates a big difference I've

00:02:23,540 --> 00:02:28,069
also experienced it as a host actually

00:02:25,939 --> 00:02:29,540
it hosts myself and you wouldn't believe

00:02:28,069 --> 00:02:31,579
the incredible questions you know my

00:02:29,540 --> 00:02:33,319
kids asked guests visiting from

00:02:31,579 --> 00:02:34,430
Australia and from Turkey you know

00:02:33,319 --> 00:02:36,700
really makes me feel like this is a

00:02:34,430 --> 00:02:39,439
special thing that's going on here and

00:02:36,700 --> 00:02:40,639
it's not just welcoming people into your

00:02:39,439 --> 00:02:42,709
home and community anymore

00:02:40,639 --> 00:02:44,389
increasingly it's about experiences and

00:02:42,709 --> 00:02:45,709
people are taking people out and showing

00:02:44,389 --> 00:02:48,530
them the things in their community and

00:02:45,709 --> 00:02:51,470
indeed teaching them their craft I was

00:02:48,530 --> 00:02:53,599
floored to hear about this woman 81

00:02:51,470 --> 00:02:55,659
years young and they a village about an

00:02:53,599 --> 00:02:57,919
hour outside of outside of Rome

00:02:55,659 --> 00:02:59,689
tragically she lost her husband found a

00:02:57,919 --> 00:03:01,849
renewed purpose teaching people from all

00:02:59,689 --> 00:03:04,700
over the world how to make pasta as only

00:03:01,849 --> 00:03:05,959
an Italian Nonna can and the thing kind

00:03:04,700 --> 00:03:07,430
of snowballed other people in the

00:03:05,959 --> 00:03:08,480
community started to get involved and

00:03:07,430 --> 00:03:10,099
other people started coming to

00:03:08,480 --> 00:03:11,900
collaborated together people started

00:03:10,099 --> 00:03:13,189
listing their homes and what they found

00:03:11,900 --> 00:03:14,629
was that people were cleaning up the

00:03:13,189 --> 00:03:17,629
streets a little bit more I saw some

00:03:14,629 --> 00:03:19,129
fresh faces around and began to take

00:03:17,629 --> 00:03:20,840
pride in their community again a village

00:03:19,129 --> 00:03:23,000
that many people had I certainly hadn't

00:03:20,840 --> 00:03:24,500
heard of and people in the community are

00:03:23,000 --> 00:03:25,849
not just speaking in Italian they're

00:03:24,500 --> 00:03:27,260
learning how to say hello not just in

00:03:25,849 --> 00:03:29,510
English but also in Japanese and

00:03:27,260 --> 00:03:31,699
Mandarin Hindi and Telugu it's kind of

00:03:29,510 --> 00:03:32,870
cool this thing is going on so the

00:03:31,699 --> 00:03:34,370
mission for me is a really exciting

00:03:32,870 --> 00:03:36,220
reason to be good at what we're doing

00:03:34,370 --> 00:03:38,269
because I want to ship not just

00:03:36,220 --> 00:03:39,500
javascript but also the belonging that

00:03:38,269 --> 00:03:41,150
comes with it you write a couple lines

00:03:39,500 --> 00:03:44,079
of JavaScript and real human beings are

00:03:41,150 --> 00:03:47,120
meeting in person and building empathy

00:03:44,079 --> 00:03:49,909
second reason is the team who Falls like

00:03:47,120 --> 00:03:52,459
these both the gregarious and also the

00:03:49,909 --> 00:03:53,930
introverted engineers and also designers

00:03:52,459 --> 00:03:55,909
you know the founders of their being be

00:03:53,930 --> 00:03:57,379
able met at design school and have

00:03:55,909 --> 00:04:00,769
nurtured a culture of design at Airbnb

00:03:57,379 --> 00:04:03,139
and I've noticed and I think you'll see

00:04:00,769 --> 00:04:04,280
where I'm going with this when a

00:04:03,139 --> 00:04:06,139
designer hands you one of these

00:04:04,280 --> 00:04:08,870
turtledoves these beautifully crafted

00:04:06,139 --> 00:04:11,299
designs and you look at it and go oh

00:04:08,870 --> 00:04:12,919
ma'am it's going to take a month or that

00:04:11,299 --> 00:04:15,259
rare you know grumpy ass engineering

00:04:12,919 --> 00:04:17,959
manager saunters over this is going to

00:04:15,259 --> 00:04:19,039
be hard you know and says you know can

00:04:17,959 --> 00:04:20,489
we do it more minimal version of this

00:04:19,039 --> 00:04:22,710
not like a hard

00:04:20,489 --> 00:04:24,690
minimalist version but like we just do

00:04:22,710 --> 00:04:26,370
less or like minimal changes actually

00:04:24,690 --> 00:04:28,319
could we just keep the page the same as

00:04:26,370 --> 00:04:30,150
it was and not do anything you know I'm

00:04:28,319 --> 00:04:33,509
really tired my arms are tired I'm gonna

00:04:30,150 --> 00:04:35,220
go sit down when an engineering manager

00:04:33,509 --> 00:04:36,509
or an engineer responds to a designer in

00:04:35,220 --> 00:04:38,990
that way the engineer feels deflated

00:04:36,509 --> 00:04:41,460
right and damn frustrated disengaged

00:04:38,990 --> 00:04:44,400
might go stress by some really expensive

00:04:41,460 --> 00:04:45,389
moustache wax worse I don't know I can

00:04:44,400 --> 00:04:50,190
tell I don't know what designers

00:04:45,389 --> 00:04:52,740
actually do and if in contrast to that

00:04:50,190 --> 00:04:55,830
imagine the engineer instead says yeah

00:04:52,740 --> 00:04:57,180
yeah you know or says damn Meredith I'm

00:04:55,830 --> 00:04:58,229
gonna build the out of that I'll

00:04:57,180 --> 00:04:59,940
have it ready for you tomorrow

00:04:58,229 --> 00:05:01,080
we'll take it for a test drive you know

00:04:59,940 --> 00:05:03,300
that's a totally different response from

00:05:01,080 --> 00:05:04,889
an engineering team and it inspires a

00:05:03,300 --> 00:05:07,139
designer to do better work it inspires

00:05:04,889 --> 00:05:09,599
them to take explorations they wouldn't

00:05:07,139 --> 00:05:11,160
normally take and downstream effects and

00:05:09,599 --> 00:05:12,509
product managers start to feel like they

00:05:11,160 --> 00:05:15,599
can explore UX in a way they couldn't

00:05:12,509 --> 00:05:17,130
before and so this whole process is

00:05:15,599 --> 00:05:18,599
really in the hands of engineers

00:05:17,130 --> 00:05:20,340
engineers are on the hands on the

00:05:18,599 --> 00:05:23,159
throttle and juniors deciding the tempo

00:05:20,340 --> 00:05:25,500
for the teams and so I think when I

00:05:23,159 --> 00:05:27,000
think about where graph QL fits in at

00:05:25,500 --> 00:05:28,530
Airbnb it's really about making sure

00:05:27,000 --> 00:05:29,940
that we can set a tempo that inspires

00:05:28,530 --> 00:05:32,340
people to do the best work of their

00:05:29,940 --> 00:05:34,530
careers this matters right and it's not

00:05:32,340 --> 00:05:36,750
about working nights and weekends you

00:05:34,530 --> 00:05:39,750
know I have dinner with my family every

00:05:36,750 --> 00:05:41,669
night you know with my wife and kids and

00:05:39,750 --> 00:05:42,930
so I'm not working crazy hours but when

00:05:41,669 --> 00:05:45,599
I am working I want to make sure that my

00:05:42,930 --> 00:05:47,039
tools on my craft are awesome that

00:05:45,599 --> 00:05:48,509
they're sharp so that we can all be a

00:05:47,039 --> 00:05:50,520
little Spartan JavaScript warriors we

00:05:48,509 --> 00:05:52,740
want to be and that our users deserve

00:05:50,520 --> 00:05:56,159
quite frankly and so that's why that's

00:05:52,740 --> 00:05:57,509
why graph QL and so thank you for

00:05:56,159 --> 00:06:00,270
indulging me that felt good to say out

00:05:57,509 --> 00:06:01,560
loud I think the tone of my talks has

00:06:00,270 --> 00:06:04,080
changed since I started coaching my

00:06:01,560 --> 00:06:06,780
son's soccer and that's enough that's

00:06:04,080 --> 00:06:09,330
enough keynote for today what I wanted

00:06:06,780 --> 00:06:11,310
to show you in the spirit of this sort

00:06:09,330 --> 00:06:14,009
of exploration is a product so welcome

00:06:11,310 --> 00:06:17,190
friends to the luxury journey this is a

00:06:14,009 --> 00:06:18,210
design that was an exploration that we

00:06:17,190 --> 00:06:20,460
never would have even considered

00:06:18,210 --> 00:06:22,800
designing or building if we didn't have

00:06:20,460 --> 00:06:24,120
a bunch of nasty-ass JavaScript dragons

00:06:22,800 --> 00:06:25,889
on the ground spittin hot fire

00:06:24,120 --> 00:06:28,199
everywhere we just wouldn't had time

00:06:25,889 --> 00:06:29,710
with everything going on this is a

00:06:28,199 --> 00:06:31,840
luxury journey

00:06:29,710 --> 00:06:33,789
zoom it in a little bit and the big idea

00:06:31,840 --> 00:06:36,550
here a lot of people think of Airbnb and

00:06:33,789 --> 00:06:38,080
they think of you know crashing on a

00:06:36,550 --> 00:06:38,770
dudes couch or getting a vacation home

00:06:38,080 --> 00:06:40,000
for the weekend

00:06:38,770 --> 00:06:41,380
they don't necessarily think about

00:06:40,000 --> 00:06:43,570
renting out an island for the weekend

00:06:41,380 --> 00:06:45,970
but Airbnb is moving into this luxury

00:06:43,570 --> 00:06:47,979
space considering not just homes but

00:06:45,970 --> 00:06:50,229
also luxury experiences and concierge in

00:06:47,979 --> 00:06:53,020
the market to help you plan and design

00:06:50,229 --> 00:06:54,520
your trip and so we wanted to be able to

00:06:53,020 --> 00:06:55,600
step people through what it's like in

00:06:54,520 --> 00:06:56,979
this case what if you're in the Swiss

00:06:55,600 --> 00:06:59,289
Alps you might work with this trip

00:06:56,979 --> 00:07:00,490
designer named Laurent and we'll take

00:06:59,289 --> 00:07:02,050
you through this really immersive

00:07:00,490 --> 00:07:03,940
experience this is really nothing like

00:07:02,050 --> 00:07:06,250
our search results or listing details

00:07:03,940 --> 00:07:09,759
page this is much more sort of editorial

00:07:06,250 --> 00:07:11,500
experience in fact the design lead on

00:07:09,759 --> 00:07:13,270
this vertical came to us from Conde Nast

00:07:11,500 --> 00:07:15,990
so you could say she knows a few things

00:07:13,270 --> 00:07:19,120
about this and so from a design

00:07:15,990 --> 00:07:20,349
standpoint for a product like this what

00:07:19,120 --> 00:07:22,990
we really wanted was a really flexible

00:07:20,349 --> 00:07:24,580
system where you could push new content

00:07:22,990 --> 00:07:27,220
the API itself could adjust the layout

00:07:24,580 --> 00:07:28,930
you really push any variety of these

00:07:27,220 --> 00:07:31,330
components and so instead of having a

00:07:28,930 --> 00:07:33,789
field attributes like you know listing

00:07:31,330 --> 00:07:35,530
title or address you know you'd really

00:07:33,789 --> 00:07:38,440
just have components with fields like

00:07:35,530 --> 00:07:41,050
title and subtitle button copy you know

00:07:38,440 --> 00:07:42,880
things like that and so initially it was

00:07:41,050 --> 00:07:45,880
asserted when we started proposing

00:07:42,880 --> 00:07:47,050
something like this it was asserted that

00:07:45,880 --> 00:07:48,849
graph QL wasn't a good fit for this

00:07:47,050 --> 00:07:50,409
right I'm just gonna put together an API

00:07:48,849 --> 00:07:52,810
responsible to be a JSON blob we'll just

00:07:50,409 --> 00:07:54,250
push from the backend the clients web

00:07:52,810 --> 00:07:56,320
iOS and Android will just render what

00:07:54,250 --> 00:07:58,539
they're told and I disagreed we looked

00:07:56,320 --> 00:08:01,210
at it for quite a while it turns out

00:07:58,539 --> 00:08:02,590
that graph QL unions are a really good

00:08:01,210 --> 00:08:05,289
use case for this because if you had a

00:08:02,590 --> 00:08:06,970
rest response version in each of these

00:08:05,289 --> 00:08:08,949
sections individually becomes quite

00:08:06,970 --> 00:08:10,870
cumbersome we deploy a native apps that

00:08:08,949 --> 00:08:13,690
are in the field for a year two years at

00:08:10,870 --> 00:08:14,860
a time and so graph QL unions were

00:08:13,690 --> 00:08:16,570
really good match for this so let's look

00:08:14,860 --> 00:08:20,229
at the query that would deliver

00:08:16,570 --> 00:08:22,300
something like this hope everyone can

00:08:20,229 --> 00:08:24,490
see zoom it in just a little bit more

00:08:22,300 --> 00:08:25,960
and so what you have is at the top of

00:08:24,490 --> 00:08:27,340
the query you've got something that the

00:08:25,960 --> 00:08:29,199
route would handle it would cast on a

00:08:27,340 --> 00:08:31,210
journey ID as part of the request and

00:08:29,199 --> 00:08:32,890
some basic top-level details around the

00:08:31,210 --> 00:08:34,599
journey but then you instantly get into

00:08:32,890 --> 00:08:36,700
this notion of an editorial content and

00:08:34,599 --> 00:08:38,320
so here you know many different types of

00:08:36,700 --> 00:08:40,959
sections like the carousel that's

00:08:38,320 --> 00:08:41,630
portrait with titles or image with

00:08:40,959 --> 00:08:43,729
titles

00:08:41,630 --> 00:08:45,140
the wine just puts a vertical line in

00:08:43,729 --> 00:08:47,540
right and so for each of those you just

00:08:45,140 --> 00:08:49,040
have fragments so as we add new sections

00:08:47,540 --> 00:08:50,480
in the future you're just adding new

00:08:49,040 --> 00:08:53,420
fragments we're gonna do this today

00:08:50,480 --> 00:08:54,890
and as you update these over time you

00:08:53,420 --> 00:08:56,870
know the API is really requested in the

00:08:54,890 --> 00:08:59,540
fields that it knows how to render and

00:08:56,870 --> 00:09:00,860
so if you have a mix of iOS and Android

00:08:59,540 --> 00:09:02,450
apps out in the field that have been

00:09:00,860 --> 00:09:04,760
deployed over the last 18 months you

00:09:02,450 --> 00:09:07,010
have a lot of flexibility in terms of

00:09:04,760 --> 00:09:08,600
what you respond because the API is

00:09:07,010 --> 00:09:12,080
really describing for you what the

00:09:08,600 --> 00:09:14,720
client is capable of rendering okay so

00:09:12,080 --> 00:09:22,880
what you would expect in the code if I

00:09:14,720 --> 00:09:24,680
pull up one of those components what we

00:09:22,880 --> 00:09:26,810
see here is the query fragment

00:09:24,680 --> 00:09:28,400
co-located with the component and so you

00:09:26,810 --> 00:09:31,430
see the trip designer bio needs an

00:09:28,400 --> 00:09:32,960
avatar name and a bio which is just a

00:09:31,430 --> 00:09:34,670
string description you can see by

00:09:32,960 --> 00:09:38,420
hovering over it that it's a string and

00:09:34,670 --> 00:09:39,560
that it's required thanks James and then

00:09:38,420 --> 00:09:41,030
you see how the components rendered and

00:09:39,560 --> 00:09:44,030
then you see our CSS you know these are

00:09:41,030 --> 00:09:45,860
very very small components and then all

00:09:44,030 --> 00:09:47,990
of these components are then aggregated

00:09:45,860 --> 00:09:51,260
up at the route level so if you have the

00:09:47,990 --> 00:09:53,000
journey route just what you would expect

00:09:51,260 --> 00:09:55,000
we have a simple mechanism to pull

00:09:53,000 --> 00:09:57,860
variables out of the URL we just rip the

00:09:55,000 --> 00:09:59,960
URL out parse the ant pass it in to the

00:09:57,860 --> 00:10:01,460
request and everything just happens sort

00:09:59,960 --> 00:10:02,720
of automatically you know it's the

00:10:01,460 --> 00:10:04,640
tooling that takes care of all the work

00:10:02,720 --> 00:10:06,170
there's no stores there are no actions

00:10:04,640 --> 00:10:08,450
or actually creators there's no reducers

00:10:06,170 --> 00:10:10,580
there's no Ajax dot you know get there's

00:10:08,450 --> 00:10:12,650
no fetch none of this imperative stuff

00:10:10,580 --> 00:10:14,830
really just define the query pull the

00:10:12,650 --> 00:10:17,300
variables out where they're required and

00:10:14,830 --> 00:10:18,590
you know define your query wherever your

00:10:17,300 --> 00:10:19,120
components are and everything takes care

00:10:18,590 --> 00:10:23,690
of the rest

00:10:19,120 --> 00:10:26,630
so this is the resultant product and a

00:10:23,690 --> 00:10:29,000
nice little parallax effect not too not

00:10:26,630 --> 00:10:30,770
too obnoxious and of course the server

00:10:29,000 --> 00:10:34,520
renders as well if i refresh the page on

00:10:30,770 --> 00:10:36,710
my head at work backstage you know it

00:10:34,520 --> 00:10:38,660
loads the image sort of preview and goes

00:10:36,710 --> 00:10:41,240
right in so actually if you open up the

00:10:38,660 --> 00:10:43,550
network request there's no API request

00:10:41,240 --> 00:10:45,700
going out for the content it's all

00:10:43,550 --> 00:10:47,720
server rendered stashed in the dom and

00:10:45,700 --> 00:10:49,310
available on the client so it's super

00:10:47,720 --> 00:10:51,980
fast with CDN cache it when we need to

00:10:49,310 --> 00:10:53,990
really really quick but awesome so what

00:10:51,980 --> 00:10:54,830
does this look like to update let's take

00:10:53,990 --> 00:10:56,450
the update

00:10:54,830 --> 00:10:58,490
use-case first if we wanted to change

00:10:56,450 --> 00:11:01,550
something and I'll take the simplest use

00:10:58,490 --> 00:11:02,810
case if the API is already it's already

00:11:01,550 --> 00:11:05,750
present right if the back-end teams got

00:11:02,810 --> 00:11:08,209
out ahead of you let's look at that so

00:11:05,750 --> 00:11:10,910
this case we've got this title/subtitle

00:11:08,209 --> 00:11:13,730
row here so as exceptional Holmes and in

00:11:10,910 --> 00:11:14,930
the design there's this kicker as the

00:11:13,730 --> 00:11:16,640
term we used for it as part of our

00:11:14,930 --> 00:11:19,490
design language system it's just a small

00:11:16,640 --> 00:11:22,250
upper case string and in this design

00:11:19,490 --> 00:11:24,380
that's just a number and it sort of

00:11:22,250 --> 00:11:26,180
gives the user a sense of where they are

00:11:24,380 --> 00:11:27,200
on the page and I saw another design

00:11:26,180 --> 00:11:29,510
when they were using this for an

00:11:27,200 --> 00:11:30,890
itinerary and it was like kind of the 12

00:11:29,510 --> 00:11:32,660
o'clock you're gonna be you know cliff

00:11:30,890 --> 00:11:33,800
diving with Tom Cruise and then at noon

00:11:32,660 --> 00:11:36,260
you're gonna be with the Michelin star

00:11:33,800 --> 00:11:38,209
chef you know luxury experiences right

00:11:36,260 --> 00:11:40,160
let's get after it so if we wanted to

00:11:38,209 --> 00:11:44,029
add this kicker first thing I would ask

00:11:40,160 --> 00:11:46,760
is it will is it in the API so if I come

00:11:44,029 --> 00:11:50,899
to playground right I would just find

00:11:46,760 --> 00:11:53,450
the journey title subtitle right here

00:11:50,899 --> 00:11:55,279
and I type K and it immediately

00:11:53,450 --> 00:11:56,690
autocompletes for me it knows the schema

00:11:55,279 --> 00:12:00,279
this is not a surprise and when I run

00:11:56,690 --> 00:12:03,050
this query I can see in the API response

00:12:00,279 --> 00:12:05,510
the kicker's present so we know this

00:12:03,050 --> 00:12:06,980
works it's fine if you wanted to explore

00:12:05,510 --> 00:12:08,510
the schema you're like that's pretty

00:12:06,980 --> 00:12:09,529
good from a discoverability standpoint

00:12:08,510 --> 00:12:12,800
but if you actually want to explore the

00:12:09,529 --> 00:12:14,720
schema you can do that now at Airbnb for

00:12:12,800 --> 00:12:16,910
reasons I have described in the past all

00:12:14,720 --> 00:12:18,620
of our data is namespaced against the

00:12:16,910 --> 00:12:20,149
service that delivers it which of course

00:12:18,620 --> 00:12:21,980
is absurd something you have to say all

00:12:20,149 --> 00:12:23,959
right is this Applebee's or Horcrux and

00:12:21,980 --> 00:12:26,329
pumpernickel no in our case it's

00:12:23,959 --> 00:12:28,190
Berserker great and that's where you

00:12:26,329 --> 00:12:30,200
find all of your data obviously this

00:12:28,190 --> 00:12:33,020
doesn't make a lot of sense I wish we

00:12:30,200 --> 00:12:35,180
had schema composition I think you'll be

00:12:33,020 --> 00:12:36,350
in Martin wall Ravens talk later later

00:12:35,180 --> 00:12:37,040
this conference and we'll see a little

00:12:36,350 --> 00:12:38,240
bit about that

00:12:37,040 --> 00:12:40,700
I think schema composition is going to

00:12:38,240 --> 00:12:42,350
solve this problem for us but in the

00:12:40,700 --> 00:12:43,970
absence of that you know you can kind of

00:12:42,350 --> 00:12:45,200
navigate through here and see the types

00:12:43,970 --> 00:12:47,870
and whether they're nullable or not etc

00:12:45,200 --> 00:12:49,700
it's really super useful all right so we

00:12:47,870 --> 00:12:52,300
we know we have a kicker let's go to the

00:12:49,700 --> 00:12:52,300
component itself

00:12:55,840 --> 00:13:00,610
same thing here if I was looking at this

00:12:58,340 --> 00:13:02,660
in the code and I didn't happen to have

00:13:00,610 --> 00:13:04,520
playground open in a browser you know I

00:13:02,660 --> 00:13:07,190
can peek at the definition here right

00:13:04,520 --> 00:13:09,080
because we have the Apollo obvious code

00:13:07,190 --> 00:13:11,540
extension I can see right away that

00:13:09,080 --> 00:13:12,950
title and subtitle are required that

00:13:11,540 --> 00:13:16,250
kickers a string that's not required

00:13:12,950 --> 00:13:20,840
right and then of course if I type it in

00:13:16,250 --> 00:13:22,790
here and save I'm sure everything will

00:13:20,840 --> 00:13:24,470
work fine what we should see is actually

00:13:22,790 --> 00:13:25,520
a number of files change and this is

00:13:24,470 --> 00:13:26,720
going to be a dominant theme for the

00:13:25,520 --> 00:13:28,430
remaining time that we have today

00:13:26,720 --> 00:13:29,660
every time I save a file if it's like

00:13:28,430 --> 00:13:31,130
one line of code that's changing

00:13:29,660 --> 00:13:32,510
actually we've got code gen running

00:13:31,130 --> 00:13:34,850
that's going to change like fifteen or

00:13:32,510 --> 00:13:37,130
thirty things right or in this case yes

00:13:34,850 --> 00:13:39,290
five and so what we see is in the git

00:13:37,130 --> 00:13:40,940
diff oh and by the way if you're not

00:13:39,290 --> 00:13:42,590
using vs code vs code it's great you can

00:13:40,940 --> 00:13:45,890
get to get diffs right in the screen you

00:13:42,590 --> 00:13:48,380
can get all of your you know terminal

00:13:45,890 --> 00:13:49,850
sessions this for a presentation has the

00:13:48,380 --> 00:13:51,460
screen quite small and zoomed in if

00:13:49,850 --> 00:13:54,980
you're in a cinema display you're like

00:13:51,460 --> 00:13:57,650
king of the castle so the journey title

00:13:54,980 --> 00:13:59,450
subtitle you see the kicker and then if

00:13:57,650 --> 00:14:01,310
you look we've also updated the type

00:13:59,450 --> 00:14:03,380
script types so typescript is looked up

00:14:01,310 --> 00:14:05,690
against our production schema and said

00:14:03,380 --> 00:14:09,070
the kicker is string ordinal Freight now

00:14:05,690 --> 00:14:13,340
that is imported into that same file

00:14:09,070 --> 00:14:15,110
thing so when I add it here it knows

00:14:13,340 --> 00:14:19,070
what it is it can tell me instantly that

00:14:15,110 --> 00:14:22,010
it's a string okay and now if I were to

00:14:19,070 --> 00:14:23,780
add this to the component of course it's

00:14:22,010 --> 00:14:30,700
vias code so I just auto import it like

00:14:23,780 --> 00:14:34,790
an adult content equals kicker right and

00:14:30,700 --> 00:14:38,990
no problem right wait it turns out that

00:14:34,790 --> 00:14:42,170
kicker dot CSX has required content the

00:14:38,990 --> 00:14:43,460
content prop is required because the

00:14:42,170 --> 00:14:45,440
kicker includes a bit of spacing

00:14:43,460 --> 00:14:47,900
automatically and so if you just pass in

00:14:45,440 --> 00:14:50,500
an empty string or nothing you know set

00:14:47,900 --> 00:14:52,910
the spacing off so here's a null check

00:14:50,500 --> 00:14:58,130
super useful so I'll just do a simple

00:14:52,910 --> 00:15:00,440
kicker and bang and we're done and so

00:14:58,130 --> 00:15:03,800
this is how quick it is to make these

00:15:00,440 --> 00:15:07,230
updates now the problem is if I want to

00:15:03,800 --> 00:15:09,150
look at this component in storybook well

00:15:07,230 --> 00:15:11,220
shonali I would now have to go in and

00:15:09,150 --> 00:15:12,780
add the mock data everywhere and go into

00:15:11,220 --> 00:15:14,670
the unit test and add the mock data that

00:15:12,780 --> 00:15:17,460
seems like a nightmare so we made it a

00:15:14,670 --> 00:15:19,890
lot simpler we just run a task in vs

00:15:17,460 --> 00:15:21,300
code that generates the mocks and it

00:15:19,890 --> 00:15:24,420
actually takes the updated query

00:15:21,300 --> 00:15:26,430
definition which is extracted via the

00:15:24,420 --> 00:15:29,180
Apollo tooling so you're sitting here

00:15:26,430 --> 00:15:31,680
bathing in these green checkmarks and

00:15:29,180 --> 00:15:34,020
instantly you see a couple things change

00:15:31,680 --> 00:15:36,060
you see all of the sample data we've got

00:15:34,020 --> 00:15:37,110
three journeys that we use as sample

00:15:36,060 --> 00:15:39,150
data in the shared development

00:15:37,110 --> 00:15:41,370
environment and all the data is updated

00:15:39,150 --> 00:15:43,260
there in addition you see this Apollo

00:15:41,370 --> 00:15:45,240
manifest updated so this is kind of a

00:15:43,260 --> 00:15:48,480
nuanced feature the manifest will give

00:15:45,240 --> 00:15:49,920
you a clean list of all the of all the

00:15:48,480 --> 00:15:52,650
graph QL queries within scope which

00:15:49,920 --> 00:15:54,270
working on which is useful in a PR but

00:15:52,650 --> 00:15:55,860
it's also useful for operation

00:15:54,270 --> 00:15:58,230
registries so we're using it in a way

00:15:55,860 --> 00:16:00,720
that we can then extract all these

00:15:58,230 --> 00:16:02,280
queries register them through CI so that

00:16:00,720 --> 00:16:03,660
in production you can only run and

00:16:02,280 --> 00:16:04,980
approve query against production you

00:16:03,660 --> 00:16:07,530
can't have you know bros just

00:16:04,980 --> 00:16:08,610
arbitrarily query in our data set and so

00:16:07,530 --> 00:16:09,990
this is all built into the Apollo

00:16:08,610 --> 00:16:13,620
tooling automatically it's dead simple

00:16:09,990 --> 00:16:15,930
so now I would expect you go back to

00:16:13,620 --> 00:16:17,790
storybook and what's happened here and

00:16:15,930 --> 00:16:19,590
it's a bit nuanced because it happened

00:16:17,790 --> 00:16:21,840
very quickly we've got the actual data

00:16:19,590 --> 00:16:24,120
from our API flowing through the

00:16:21,840 --> 00:16:26,160
storybook so that the first three are

00:16:24,120 --> 00:16:28,230
one two three and the last one has

00:16:26,160 --> 00:16:30,090
nothing I can see because we've got a

00:16:28,230 --> 00:16:31,950
framed at the top that the spacing isn't

00:16:30,090 --> 00:16:34,410
off if the kicker is missing dead simple

00:16:31,950 --> 00:16:35,700
okay you go back into the product and

00:16:34,410 --> 00:16:37,950
obviously because of hot module

00:16:35,700 --> 00:16:40,500
reloading it's already present we wrote

00:16:37,950 --> 00:16:41,940
like three lines of code we've got 12

00:16:40,500 --> 00:16:43,440
files that are updated mock data is

00:16:41,940 --> 00:16:45,570
updated and the product is updated

00:16:43,440 --> 00:16:47,190
without even being fresh and at first

00:16:45,570 --> 00:16:48,210
this was counterintuitive to me because

00:16:47,190 --> 00:16:49,860
I thought well we haven't even run the

00:16:48,210 --> 00:16:51,000
query but it turns out that the Apollo

00:16:49,860 --> 00:16:52,710
clients actually smart enough to

00:16:51,000 --> 00:16:54,750
recognize when it rear Enders that we're

00:16:52,710 --> 00:16:56,310
missing part of the query so it is Shi

00:16:54,750 --> 00:16:57,570
AIT's a request for the rest comes back

00:16:56,310 --> 00:17:00,860
in and by the time I can get to the

00:16:57,570 --> 00:17:00,860
browser it's already there

00:17:04,600 --> 00:17:09,669
I don't know he's pretty dope so that's

00:17:08,289 --> 00:17:13,510
a use case dead-simple

00:17:09,669 --> 00:17:17,520
I'm gonna put in here you know add this

00:17:13,510 --> 00:17:21,459
is my get commit so we'll add journey

00:17:17,520 --> 00:17:24,309
title subtitle all right pardon me add

00:17:21,459 --> 00:17:25,179
kicker because this is a commit I can do

00:17:24,309 --> 00:17:33,580
whatever I want

00:17:25,179 --> 00:17:36,490
James Baxley is great ship it so this is

00:17:33,580 --> 00:17:38,620
a good use case for if the data's

00:17:36,490 --> 00:17:40,929
already available in the API and what I

00:17:38,620 --> 00:17:42,460
want to show you as well last last sort

00:17:40,929 --> 00:17:44,919
of point on this is when you push the PR

00:17:42,460 --> 00:17:46,780
up you know you link to the design you

00:17:44,919 --> 00:17:48,070
can say listen the API is validated via

00:17:46,780 --> 00:17:50,380
Apollo's CI

00:17:48,070 --> 00:17:52,210
sorted out their visual treatments are

00:17:50,380 --> 00:17:53,860
updated in storybook and Happo and then

00:17:52,210 --> 00:17:55,150
we confirmed it in localhost no services

00:17:53,860 --> 00:17:57,730
are affected this is just a front-end

00:17:55,150 --> 00:17:59,559
change the user who's reviewing this do

00:17:57,730 --> 00:18:01,059
you need to build this in two minutes

00:17:59,559 --> 00:18:02,590
you've got this change out but the

00:18:01,059 --> 00:18:04,000
person reviewing it has the same

00:18:02,590 --> 00:18:06,130
experience they can see the Apollo

00:18:04,000 --> 00:18:08,140
manifest if they want to they can see

00:18:06,130 --> 00:18:09,820
that the kicker's become string or no

00:18:08,140 --> 00:18:11,169
you can look at the couple places where

00:18:09,820 --> 00:18:13,809
it appears in the in the request

00:18:11,169 --> 00:18:16,210
hierarchy look at the mock data if you

00:18:13,809 --> 00:18:17,500
want how that's updated and then within

00:18:16,210 --> 00:18:19,090
the component itself you see the kicker

00:18:17,500 --> 00:18:20,830
imported you see it added to the query

00:18:19,090 --> 00:18:23,080
fragment you see where it's used in the

00:18:20,830 --> 00:18:25,120
component and how the types are updated

00:18:23,080 --> 00:18:26,409
you know as a reviewer you have all the

00:18:25,120 --> 00:18:27,850
information you need to make an informed

00:18:26,409 --> 00:18:28,630
decision about whether this makes sense

00:18:27,850 --> 00:18:30,880
or not right

00:18:28,630 --> 00:18:32,830
this isn't like competing framework

00:18:30,880 --> 00:18:34,419
called rails that I happen to not like

00:18:32,830 --> 00:18:35,830
as much where it seems like a lot of

00:18:34,419 --> 00:18:37,750
these things happen a lot more magically

00:18:35,830 --> 00:18:39,850
in this case it's very explicit you know

00:18:37,750 --> 00:18:42,880
and a lot of this generated code is then

00:18:39,850 --> 00:18:44,110
checked into source control and say why

00:18:42,880 --> 00:18:46,510
are you doing that well this is really

00:18:44,110 --> 00:18:48,010
why because now with typescript you can

00:18:46,510 --> 00:18:50,110
kind of have all the connections you

00:18:48,010 --> 00:18:52,419
need but it's also very easy to review

00:18:50,110 --> 00:18:55,480
similarly in Happo which is a visual

00:18:52,419 --> 00:18:56,950
dipping tool that we use it's very easy

00:18:55,480 --> 00:18:58,240
to take this automatically takes

00:18:56,950 --> 00:19:00,490
screenshots and there I'm doing like a

00:18:58,240 --> 00:19:03,789
left you know versus right comparison

00:19:00,490 --> 00:19:05,409
you know as a user review it pardon me

00:19:03,789 --> 00:19:09,280
as an engineer reviewing this you know I

00:19:05,409 --> 00:19:11,020
can see the diff so I visualize Phil I

00:19:09,280 --> 00:19:14,350
don't just take screenshots it's dead

00:19:11,020 --> 00:19:15,480
fast so let's take a second now to look

00:19:14,350 --> 00:19:16,440
at what

00:19:15,480 --> 00:19:17,970
happens if we want to build something

00:19:16,440 --> 00:19:20,880
entirely new this is a little bit more

00:19:17,970 --> 00:19:22,080
tricky one of the key things that you

00:19:20,880 --> 00:19:23,850
know mentioned sort of automating some

00:19:22,080 --> 00:19:25,500
of the process but one of the other key

00:19:23,850 --> 00:19:27,690
ideas here is that we always want to be

00:19:25,500 --> 00:19:28,950
unblocked as front-end engineers we love

00:19:27,690 --> 00:19:30,900
our back-end engineers

00:19:28,950 --> 00:19:32,280
fact but it's a lot easier to love them

00:19:30,900 --> 00:19:35,130
when you don't depend on them I promise

00:19:32,280 --> 00:19:36,330
and so what I want to make sure is if we

00:19:35,130 --> 00:19:38,730
want to launch something new that I'm

00:19:36,330 --> 00:19:40,790
not waiting on them ever and so let's

00:19:38,730 --> 00:19:43,980
look at this design you see this massive

00:19:40,790 --> 00:19:46,800
beautiful image and we just call this

00:19:43,980 --> 00:19:48,210
single media and there are several of

00:19:46,800 --> 00:19:49,530
them some of them are full bleed they go

00:19:48,210 --> 00:19:51,210
to the edge of the screen some of them

00:19:49,530 --> 00:19:53,100
are inside the page container all of

00:19:51,210 --> 00:19:55,770
them are responsive and maintain a 16 by

00:19:53,100 --> 00:19:57,750
9 aspect ratio and so if I wanted to add

00:19:55,770 --> 00:20:00,210
this first thing I would do of course I

00:19:57,750 --> 00:20:02,610
would check Berzerker to see if such a

00:20:00,210 --> 00:20:05,160
thing exists and it doesn't there's no

00:20:02,610 --> 00:20:08,640
notion in the schema of single media now

00:20:05,160 --> 00:20:09,900
the trick my friends is that the schema

00:20:08,640 --> 00:20:11,220
comes from this service called berserker

00:20:09,900 --> 00:20:13,050
which I don't own it's written in Java

00:20:11,220 --> 00:20:14,940
which is like a magical voodoo language

00:20:13,050 --> 00:20:16,320
I don't understand and so I'm never

00:20:14,940 --> 00:20:19,020
going to be able to put a PR into this

00:20:16,320 --> 00:20:21,960
into the service the younger engineers

00:20:19,020 --> 00:20:23,670
are I just it's really my problem

00:20:21,960 --> 00:20:24,510
but what I want to be able to do and

00:20:23,670 --> 00:20:26,040
this is something we've spent a little

00:20:24,510 --> 00:20:27,810
bit of time thinking about is how do we

00:20:26,040 --> 00:20:29,010
fiddle with the schema in a way that

00:20:27,810 --> 00:20:31,110
doesn't totally put the company in

00:20:29,010 --> 00:20:32,580
product risk because we want everything

00:20:31,110 --> 00:20:33,540
to fail if you try to create a quarry

00:20:32,580 --> 00:20:35,820
that doesn't exist

00:20:33,540 --> 00:20:37,080
ci should should kill it immediately but

00:20:35,820 --> 00:20:40,650
we also want to be able to fiddle with

00:20:37,080 --> 00:20:41,790
the schema and sort of explore and

00:20:40,650 --> 00:20:43,860
navigate and sort of iterate with

00:20:41,790 --> 00:20:45,510
designers before the thing ships because

00:20:43,860 --> 00:20:47,220
once you ship the new schema natives

00:20:45,510 --> 00:20:48,390
gonna build against it you know as soon

00:20:47,220 --> 00:20:49,890
as that schema goes live you need to

00:20:48,390 --> 00:20:53,010
support it for two years so you want to

00:20:49,890 --> 00:20:54,750
have a little bit of confidence and so

00:20:53,010 --> 00:20:56,790
the mechanism we came up with as a as a

00:20:54,750 --> 00:21:00,270
nice compromise I'm gonna switch over to

00:20:56,790 --> 00:21:04,560
a server we called Niobe Niobe a fun

00:21:00,270 --> 00:21:06,540
fact is a Greek character she's got to

00:21:04,560 --> 00:21:08,730
fight with the other Greek god named

00:21:06,540 --> 00:21:10,230
Apollo and he murdered all of her

00:21:08,730 --> 00:21:12,420
children with bow and arrow as you do

00:21:10,230 --> 00:21:14,370
and she wept endlessly until she turned

00:21:12,420 --> 00:21:15,780
to stone we figured this is how our

00:21:14,370 --> 00:21:18,650
experience with Apollo might go so we

00:21:15,780 --> 00:21:22,360
named our server Niobe

00:21:18,650 --> 00:21:24,220
just kidding Geoff that's great

00:21:22,360 --> 00:21:25,750
so what i'm doing here is i'm basically

00:21:24,220 --> 00:21:28,690
hijacking the berserker schema so you

00:21:25,750 --> 00:21:32,350
see this berserker schema ts right and

00:21:28,690 --> 00:21:34,390
what I'm doing is I'm just going in I'm

00:21:32,350 --> 00:21:36,480
at in a type called single media which

00:21:34,390 --> 00:21:39,070
is has an array of captions and Anna

00:21:36,480 --> 00:21:40,630
which is our luxury media we just have

00:21:39,070 --> 00:21:42,970
this one object that can handle a

00:21:40,630 --> 00:21:45,130
portrait or landscape image or video and

00:21:42,970 --> 00:21:45,940
runs through our pipeline which we'll

00:21:45,130 --> 00:21:47,620
get to in a second

00:21:45,940 --> 00:21:49,510
and a boolean as to whether or not it's

00:21:47,620 --> 00:21:52,000
full bleed and then I want to be able to

00:21:49,510 --> 00:21:53,799
mark that it's part of this Union as an

00:21:52,000 --> 00:21:55,330
editorial section so when an editorial

00:21:53,799 --> 00:21:57,460
section comes in it's going to check the

00:21:55,330 --> 00:22:01,500
type name to validate which type it is

00:21:57,460 --> 00:22:05,860
and you're good so I save it zero errors

00:22:01,500 --> 00:22:07,870
bingo and then you know the schema

00:22:05,860 --> 00:22:09,940
without data is like a water slide

00:22:07,870 --> 00:22:11,889
without water so we probably need some

00:22:09,940 --> 00:22:14,230
mock data as well so we want to stay

00:22:11,889 --> 00:22:17,169
unblocked what does that look like well

00:22:14,230 --> 00:22:19,149
we've got this design we use figma and

00:22:17,169 --> 00:22:21,190
we use Epling at Airbnb great design

00:22:19,149 --> 00:22:22,809
tools they're great because they keep us

00:22:21,190 --> 00:22:25,450
unblocked because I can jump in here and

00:22:22,809 --> 00:22:29,559
grab this image and download it

00:22:25,450 --> 00:22:31,330
instantly and then normally all of our

00:22:29,559 --> 00:22:32,320
api's are coming through or pardon me

00:22:31,330 --> 00:22:35,610
all of our images were coming through

00:22:32,320 --> 00:22:35,610
the API they go through extensive

00:22:35,669 --> 00:22:40,269
pipeline called Fourier service named

00:22:38,710 --> 00:22:41,950
after the mathematician where we're

00:22:40,269 --> 00:22:43,990
doing everything from determining the

00:22:41,950 --> 00:22:45,820
preview that we can inline before the

00:22:43,990 --> 00:22:47,409
image downloads it determines dominant

00:22:45,820 --> 00:22:49,929
saturated color if we want to do an

00:22:47,409 --> 00:22:51,490
overlay on it determines whether the top

00:22:49,929 --> 00:22:52,929
is actually dark enough that we can put

00:22:51,490 --> 00:22:54,399
white text on it like a lot of stuff

00:22:52,929 --> 00:22:57,480
like that it's being done automatically

00:22:54,399 --> 00:22:59,590
for us it also trans transcribed it to

00:22:57,480 --> 00:23:02,289
multiple sizes so that we can handle

00:22:59,590 --> 00:23:05,289
multiple sized images via source set and

00:23:02,289 --> 00:23:06,789
so this is automatic again harping on

00:23:05,289 --> 00:23:08,169
this idea today if you're gonna do

00:23:06,789 --> 00:23:10,360
anything more than two or three times

00:23:08,169 --> 00:23:12,820
you should automate it and so this is

00:23:10,360 --> 00:23:14,169
called media squirrel and this was

00:23:12,820 --> 00:23:15,760
created by an engineer Davey and being

00:23:14,169 --> 00:23:18,639
named Bri bunch was amazing I think

00:23:15,760 --> 00:23:24,460
she's here tonight I breathe yeah what's

00:23:18,639 --> 00:23:26,110
up media squirrel yeah you're famous so

00:23:24,460 --> 00:23:27,880
all this does it's fabulous you just

00:23:26,110 --> 00:23:29,019
drop a thing in and gives you some

00:23:27,880 --> 00:23:30,520
loading spinners this is an internal

00:23:29,019 --> 00:23:32,559
tool obviously this is not user facing

00:23:30,520 --> 00:23:34,240
and boom it just runs everything through

00:23:32,559 --> 00:23:35,020
all of the pipeline and then all you

00:23:34,240 --> 00:23:36,970
need to do you

00:23:35,020 --> 00:23:39,460
they're here now you cop the JSON drop

00:23:36,970 --> 00:23:41,650
back into your code and you know you can

00:23:39,460 --> 00:23:43,210
boom you can put it in here so if you

00:23:41,650 --> 00:23:45,490
are busy and you want to get this thing

00:23:43,210 --> 00:23:46,960
out in an hour after you get the design

00:23:45,490 --> 00:23:48,429
you just go strip all the images out

00:23:46,960 --> 00:23:50,200
upload them through media squirrel grab

00:23:48,429 --> 00:23:52,210
the JSON objects drop them into mock

00:23:50,200 --> 00:23:54,610
code and you're done this is a lot

00:23:52,210 --> 00:23:56,980
easier than asking people for you know a

00:23:54,610 --> 00:23:59,200
zip file or a drop link and all this all

00:23:56,980 --> 00:24:00,309
this mess right and so I did this ahead

00:23:59,200 --> 00:24:01,420
of time because I didn't want everyone

00:24:00,309 --> 00:24:04,179
to have to sit here and wait while I

00:24:01,420 --> 00:24:06,760
copy JSON blobs around so then now we

00:24:04,179 --> 00:24:08,650
have the schema and we have the mocks

00:24:06,760 --> 00:24:10,030
but we need a way to intercept the

00:24:08,650 --> 00:24:11,230
remote response because member we're

00:24:10,030 --> 00:24:12,610
getting a response from the server so I

00:24:11,230 --> 00:24:14,890
don't want to have to copy that over and

00:24:12,610 --> 00:24:16,990
so we're working very closely with the

00:24:14,890 --> 00:24:18,610
palo team just fabulous team to work

00:24:16,990 --> 00:24:20,500
with they're always listening to our

00:24:18,610 --> 00:24:22,660
ridiculous requests and we came up with

00:24:20,500 --> 00:24:24,880
this mechanism for mocking and this only

00:24:22,660 --> 00:24:26,050
works sort of in development and for

00:24:24,880 --> 00:24:27,550
admins this is something we don't do in

00:24:26,050 --> 00:24:30,010
production so it's safe in that respect

00:24:27,550 --> 00:24:32,050
I just copied commented it out for what

00:24:30,010 --> 00:24:33,760
we were looking at before all it does

00:24:32,050 --> 00:24:36,490
I'm sorry if you're not familiar with

00:24:33,760 --> 00:24:38,050
the es6 sort of syntax all it's really

00:24:36,490 --> 00:24:40,450
doing here is it's saying listen

00:24:38,050 --> 00:24:42,730
anywhere in the response tree if you see

00:24:40,450 --> 00:24:44,679
a type journey as what you're getting

00:24:42,730 --> 00:24:46,780
back pass in what you get from the

00:24:44,679 --> 00:24:49,510
server as an argument and then screw

00:24:46,780 --> 00:24:51,010
with it in this case just spread the

00:24:49,510 --> 00:24:53,080
existing journey on and then take the

00:24:51,010 --> 00:24:55,600
editorial content field and rode me to

00:24:53,080 --> 00:24:57,730
do them to take these four objects and

00:24:55,600 --> 00:25:01,090
I'm going to kind of insert them in

00:24:57,730 --> 00:25:05,260
their corresponding place and so boom we

00:25:01,090 --> 00:25:07,420
saved them there are no errors Peggy's

00:25:05,260 --> 00:25:09,370
sacrificed an Apple watch you know in

00:25:07,420 --> 00:25:12,670
the name of the demo gods so far

00:25:09,370 --> 00:25:14,140
everything's going great so now what I

00:25:12,670 --> 00:25:16,570
want to do here I'm just gonna refresh

00:25:14,140 --> 00:25:21,390
playground and if all is going well what

00:25:16,570 --> 00:25:21,390
I should be able to do is type fragment

00:25:24,299 --> 00:25:28,859
so single media already shows up dope if

00:25:27,119 --> 00:25:32,580
I go into the schema which I was going

00:25:28,859 --> 00:25:33,959
to do I see it right there single media

00:25:32,580 --> 00:25:36,479
is present and has the fields we just

00:25:33,959 --> 00:25:38,219
created three seconds ago great so now

00:25:36,479 --> 00:25:40,549
the fragment that I want initially is

00:25:38,219 --> 00:25:43,950
always exactly what we said so captions

00:25:40,549 --> 00:25:46,409
full bleed and media and for media I'm

00:25:43,950 --> 00:25:49,169
just gonna spread the existing luxury

00:25:46,409 --> 00:25:55,019
media fields okay now single media I

00:25:49,169 --> 00:25:56,940
need to include in our query and right

00:25:55,019 --> 00:26:00,119
you're already getting a live response

00:25:56,940 --> 00:26:03,119
from another service with actual mock

00:26:00,119 --> 00:26:10,619
data that you just created it's pretty

00:26:03,119 --> 00:26:12,749
sweet I think okay so now obviously we

00:26:10,619 --> 00:26:14,519
only have five minutes there's no way we

00:26:12,749 --> 00:26:18,479
could actually build this UI the hell we

00:26:14,519 --> 00:26:20,249
can't we're going to come in here and I

00:26:18,479 --> 00:26:21,209
think I think I've mentioned seven or

00:26:20,249 --> 00:26:23,129
eight times we want to automate

00:26:21,209 --> 00:26:24,539
everything so we're gonna run a task

00:26:23,129 --> 00:26:25,799
it's a yeoman generator if you're a

00:26:24,539 --> 00:26:27,749
junior engineer and you're looking for

00:26:25,799 --> 00:26:29,399
one like magical tool to get really good

00:26:27,749 --> 00:26:31,200
at to make your life easier for the next

00:26:29,399 --> 00:26:33,239
you know 15 years until the computers

00:26:31,200 --> 00:26:35,519
take over I highly recommend learning

00:26:33,239 --> 00:26:37,709
AST transformations it will save your

00:26:35,519 --> 00:26:39,119
life and that's what we're doing here so

00:26:37,709 --> 00:26:40,469
we've just got a yeoman generator it's

00:26:39,119 --> 00:26:43,200
going to run at the bottom and it's

00:26:40,469 --> 00:26:44,929
going to say yo what does the section

00:26:43,200 --> 00:26:47,129
component name is going to be Superfly

00:26:44,929 --> 00:26:50,509
full-bleed or three images with fries

00:26:47,129 --> 00:26:52,469
nope ours is called single media and

00:26:50,509 --> 00:26:53,729
what's doing here it's generating a

00:26:52,469 --> 00:26:55,049
couple files based on the templates we

00:26:53,729 --> 00:26:56,879
created but then it's actually asking

00:26:55,049 --> 00:26:59,039
you if you want to go in and edit other

00:26:56,879 --> 00:27:01,889
files and of course we do yes we do

00:26:59,039 --> 00:27:03,749
what does that look like so instantly

00:27:01,889 --> 00:27:05,579
now we've got a mapping file where we

00:27:03,749 --> 00:27:07,440
name what the constants are then we've

00:27:05,579 --> 00:27:09,809
got the sections that actually does the

00:27:07,440 --> 00:27:11,489
importing of the file puts it into a

00:27:09,809 --> 00:27:12,719
mapping then we can use when we're sort

00:27:11,489 --> 00:27:14,429
of iterating over that array and

00:27:12,719 --> 00:27:17,039
rendering the components passing in the

00:27:14,429 --> 00:27:18,809
props that make sense right it adds it

00:27:17,039 --> 00:27:22,109
to the query just like you saw in

00:27:18,809 --> 00:27:26,070
playground right adds the fragment boom

00:27:22,109 --> 00:27:29,429
we're done so then it creates the file

00:27:26,070 --> 00:27:32,249
and it creates the test it creates the

00:27:29,429 --> 00:27:35,730
storybook file right what you notice

00:27:32,249 --> 00:27:37,799
here is that the types are not working

00:27:35,730 --> 00:27:40,230
why do we not have them generated types

00:27:37,799 --> 00:27:42,139
well this may be obvious if we look over

00:27:40,230 --> 00:27:44,340
at coach Jim we should see an error

00:27:42,139 --> 00:27:45,929
right this is the code GM that's running

00:27:44,340 --> 00:27:48,480
it's ezzio bro I don't know anything

00:27:45,929 --> 00:27:49,620
about single media why is that well it's

00:27:48,480 --> 00:27:51,059
because we just created it and it's

00:27:49,620 --> 00:27:52,500
looking against our production schema so

00:27:51,059 --> 00:27:54,720
you can't develop against something you

00:27:52,500 --> 00:27:57,029
just created it to actually pretend so

00:27:54,720 --> 00:27:58,440
the solution for this short term I

00:27:57,029 --> 00:27:59,909
believe there's already a fix out for

00:27:58,440 --> 00:28:02,970
this you can actually just specify the

00:27:59,909 --> 00:28:04,889
tag but we actually want to do I should

00:28:02,970 --> 00:28:06,480
have published this earlier we go back

00:28:04,889 --> 00:28:09,059
to Niobe I'm sorry if I'm moving fast

00:28:06,480 --> 00:28:11,940
just gets so excited what I actually

00:28:09,059 --> 00:28:13,019
want to do is publish the dev schema so

00:28:11,940 --> 00:28:14,309
we have away from here to publish the

00:28:13,019 --> 00:28:16,440
production schema that's generally done

00:28:14,309 --> 00:28:20,010
via CI what I'm gonna do instead is

00:28:16,440 --> 00:28:23,010
publish under the tag called dev bang so

00:28:20,010 --> 00:28:26,460
if we are in Engine which I know you all

00:28:23,010 --> 00:28:29,840
are using or will be what you see here

00:28:26,460 --> 00:28:31,590
is a way to review the schema just like

00:28:29,840 --> 00:28:32,490
you know if you were looking at

00:28:31,590 --> 00:28:33,419
production data if you just like if

00:28:32,490 --> 00:28:35,669
you're looking to playground a

00:28:33,419 --> 00:28:36,990
playground but also gives you all your

00:28:35,669 --> 00:28:39,990
metrics and a bunch of other tooling

00:28:36,990 --> 00:28:42,240
what's cool here is that you see the sha

00:28:39,990 --> 00:28:45,539
of the schema that's in production you

00:28:42,240 --> 00:28:47,220
can switch over to the dev tag and now I

00:28:45,539 --> 00:28:49,500
should have shown you if you're in the

00:28:47,220 --> 00:28:51,440
current schema you should not see single

00:28:49,500 --> 00:28:54,960
media right because it doesn't exist

00:28:51,440 --> 00:28:57,299
sorry we're in dev if you're in current

00:28:54,960 --> 00:28:59,760
right you don't see single media but if

00:28:57,299 --> 00:29:00,600
you're in dev you do right and so this

00:28:59,760 --> 00:29:03,450
is the key difference

00:29:00,600 --> 00:29:08,610
similarly when I'm now coding I need to

00:29:03,450 --> 00:29:10,440
be able to point I need to be able to

00:29:08,610 --> 00:29:12,090
point code Jen at that new schema so

00:29:10,440 --> 00:29:15,510
we'll do a couple things first of all an

00:29:12,090 --> 00:29:17,010
Apollo will select the dev tag done so

00:29:15,510 --> 00:29:19,260
now it sort of refresh the schema

00:29:17,010 --> 00:29:20,940
against what we just pushed up and I'm

00:29:19,260 --> 00:29:26,909
gonna go into my Apollo config again

00:29:20,940 --> 00:29:28,620
this is a short term need in our kampala

00:29:26,909 --> 00:29:31,679
config we're going to say graph QL

00:29:28,620 --> 00:29:34,260
summit at dev right and it's gonna go

00:29:31,679 --> 00:29:36,659
pull that instead and when I now run

00:29:34,260 --> 00:29:39,960
code gen it's actually looking at the

00:29:36,659 --> 00:29:42,899
thing we just created so just set a lot

00:29:39,960 --> 00:29:45,090
of words and used a lot of tools the key

00:29:42,899 --> 00:29:45,350
thing here the salient point I want to

00:29:45,090 --> 00:29:47,360
make

00:29:45,350 --> 00:29:49,280
is the schema the source of truth for it

00:29:47,360 --> 00:29:51,380
is the service you might have your you

00:29:49,280 --> 00:29:53,419
know Fantasia version that you're

00:29:51,380 --> 00:29:56,840
running in dev and you want to be able

00:29:53,419 --> 00:29:58,820
to edit against that but it's never

00:29:56,840 --> 00:30:01,010
really the sort of source of truth until

00:29:58,820 --> 00:30:02,960
the PR goes into the downstream service

00:30:01,010 --> 00:30:04,940
and so we have this mechanism that

00:30:02,960 --> 00:30:06,200
automatically code gems against this

00:30:04,940 --> 00:30:07,970
sort of playground that you're working

00:30:06,200 --> 00:30:09,799
with but as soon as you were iterating

00:30:07,970 --> 00:30:11,450
with iOS and Android you figured out a

00:30:09,799 --> 00:30:13,970
scheme that makes sense you open the pr2

00:30:11,450 --> 00:30:15,470
the downstream service and remove all of

00:30:13,970 --> 00:30:19,100
these mocks you go back to current and

00:30:15,470 --> 00:30:22,039
everything will work none of that made

00:30:19,100 --> 00:30:24,530
sense catch me afterwards what we're

00:30:22,039 --> 00:30:27,260
seeing here now super exciting now

00:30:24,530 --> 00:30:29,539
you're in single media and it does find

00:30:27,260 --> 00:30:31,490
the code gen it was able to look it up

00:30:29,539 --> 00:30:34,789
so now you have this idea of single

00:30:31,490 --> 00:30:37,190
media you have all the other places in

00:30:34,789 --> 00:30:38,059
the query where that thing is used so

00:30:37,190 --> 00:30:42,039
what I'm going to do is I'm going to

00:30:38,059 --> 00:30:49,640
commit this yo and maybe I'll just write

00:30:42,039 --> 00:30:51,470
Jessie is from Finland but likes swedish

00:30:49,640 --> 00:30:52,549
fish this is what you can do with commit

00:30:51,470 --> 00:30:57,470
messages when it's all going away

00:30:52,549 --> 00:30:59,960
afterwards so what we want to do now

00:30:57,470 --> 00:31:03,140
we're getting to work here right is I'm

00:30:59,960 --> 00:31:04,700
not just going to pull in the generic

00:31:03,140 --> 00:31:06,890
like placeholder type name I actually

00:31:04,700 --> 00:31:08,150
want to get to work so step one I know I

00:31:06,890 --> 00:31:09,350
need log three media so I'm going to

00:31:08,150 --> 00:31:11,210
pull that in from a component we've

00:31:09,350 --> 00:31:13,070
already created called luxury media auto

00:31:11,210 --> 00:31:15,679
imports again and I took I don't have to

00:31:13,070 --> 00:31:18,380
write any code at all anymore

00:31:15,679 --> 00:31:20,929
and now we have this real fragment and

00:31:18,380 --> 00:31:28,370
so what I'll do is I'll say for media I

00:31:20,929 --> 00:31:31,309
want the luxury media fields and I want

00:31:28,370 --> 00:31:33,770
full bleed autocomplete and captions and

00:31:31,309 --> 00:31:35,179
we're done right and if I wanted to peek

00:31:33,770 --> 00:31:37,370
into the definition here if I forgot

00:31:35,179 --> 00:31:38,570
what all those things were you know

00:31:37,370 --> 00:31:39,950
that's right there this has come from

00:31:38,570 --> 00:31:41,960
the schema we just created we've created

00:31:39,950 --> 00:31:45,169
this like four seconds ago it's amazing

00:31:41,960 --> 00:31:46,880
the tools are amazing and so now I save

00:31:45,169 --> 00:31:53,929
this and I'm just going to jump the gun

00:31:46,880 --> 00:31:56,780
and refresh our mock data and now the s

00:31:53,929 --> 00:31:58,080
code is querying the newly created

00:31:56,780 --> 00:31:59,580
schema and getting all

00:31:58,080 --> 00:32:01,440
newly created mock data that we created

00:31:59,580 --> 00:32:03,929
and it's all here and it's ready for you

00:32:01,440 --> 00:32:05,700
in front of God and everyone and all of

00:32:03,929 --> 00:32:07,649
the typescript types are populated with

00:32:05,700 --> 00:32:10,500
all the content you need the Apollo

00:32:07,649 --> 00:32:12,240
manifest is updated the new request is

00:32:10,500 --> 00:32:16,350
dead simple dead clear where all this

00:32:12,240 --> 00:32:20,100
information is coming from and to save

00:32:16,350 --> 00:32:21,720
you the arduous journey of me writing

00:32:20,100 --> 00:32:23,279
this component out I actually just saved

00:32:21,720 --> 00:32:26,059
it it's pretty small components so

00:32:23,279 --> 00:32:27,870
you'll forgive me

00:32:26,059 --> 00:32:29,309
what I'm going to do is I'm just going

00:32:27,870 --> 00:32:30,809
to paste the component definition over

00:32:29,309 --> 00:32:32,549
the top so what we have here is single

00:32:30,809 --> 00:32:34,380
media you see it brings in captions full

00:32:32,549 --> 00:32:36,929
bleed media does a couple healthy

00:32:34,380 --> 00:32:39,690
responsible null checks and then renders

00:32:36,929 --> 00:32:42,419
luxury media with the 4ea aspect ratio

00:32:39,690 --> 00:32:44,850
of sixteen by nine landscape if there

00:32:42,419 --> 00:32:48,260
are captions renders the captions and

00:32:44,850 --> 00:32:50,970
we're done we're out of here in

00:32:48,260 --> 00:32:53,399
storybook right this was not here a

00:32:50,970 --> 00:32:55,799
minute ago it has Auto refreshed here we

00:32:53,399 --> 00:32:57,149
are this is live data from the mocks

00:32:55,799 --> 00:32:59,820
that you just pulled out of your design

00:32:57,149 --> 00:33:02,010
like four minutes ago right contained at

00:32:59,820 --> 00:33:04,740
page container in one case full bleed in

00:33:02,010 --> 00:33:06,360
another case like this is something that

00:33:04,740 --> 00:33:09,029
used to take a week we just did it in

00:33:06,360 --> 00:33:12,690
like 30 minutes right and you look at

00:33:09,029 --> 00:33:14,070
the product here we go that's the

00:33:12,690 --> 00:33:20,190
placeholder I was intending to show you

00:33:14,070 --> 00:33:23,730
but we were drifting on time right now

00:33:20,190 --> 00:33:29,210
we are server rendering this product on

00:33:23,730 --> 00:33:32,070
the superfast Wi-Fi that I've got and

00:33:29,210 --> 00:33:35,429
here's a full bleed image in the product

00:33:32,070 --> 00:33:37,740
right here's the one in the page

00:33:35,429 --> 00:33:39,539
container etc we just built this entire

00:33:37,740 --> 00:33:40,710
product and like said no time at all

00:33:39,539 --> 00:33:42,539
this and this is what it should feel

00:33:40,710 --> 00:33:44,460
like right and so this is what I wanted

00:33:42,539 --> 00:33:47,039
to share with you you know it's exciting

00:33:44,460 --> 00:33:48,870
for me that you know different points in

00:33:47,039 --> 00:33:49,919
time front-end engineering never felt

00:33:48,870 --> 00:33:51,929
like this right we're like waiting on

00:33:49,919 --> 00:33:53,580
back-end we're waiting on design our own

00:33:51,929 --> 00:33:55,529
tools are getting on our own way all of

00:33:53,580 --> 00:33:57,299
a sudden now fully unblocked you know we

00:33:55,529 --> 00:33:58,799
push this into production and the mock

00:33:57,299 --> 00:34:01,380
datas are available for admins I can

00:33:58,799 --> 00:34:03,389
show I'm writing Chesky you know what

00:34:01,380 --> 00:34:04,889
we're up to everything looks great

00:34:03,389 --> 00:34:06,510
when the schema is available we pull out

00:34:04,889 --> 00:34:08,099
the schema mock I'm good to go when the

00:34:06,510 --> 00:34:11,730
data starts coming through back-end in

00:34:08,099 --> 00:34:12,899
1516 weeks later four days later you

00:34:11,730 --> 00:34:14,010
know all of that flows through and you

00:34:12,899 --> 00:34:15,899
pull out the mocks and you're good to go

00:34:14,010 --> 00:34:17,460
right we're out of this so that's what

00:34:15,899 --> 00:34:19,319
front-end engineering should feel like

00:34:17,460 --> 00:34:22,409
and I think it's exciting for me that

00:34:19,319 --> 00:34:25,889
tools like you know graph QL Apollo

00:34:22,409 --> 00:34:28,679
platform react yeoman you know storybook

00:34:25,889 --> 00:34:29,819
figma Zeppelin vs code typescript all of

00:34:28,679 --> 00:34:31,980
these things work really well together

00:34:29,819 --> 00:34:32,609
gatsby my homies from gatsby are here

00:34:31,980 --> 00:34:34,349
today

00:34:32,609 --> 00:34:35,970
super exciting tool set I'm really

00:34:34,349 --> 00:34:37,290
excited that I got a chance to show you

00:34:35,970 --> 00:34:39,810
a little bit of it I'm more excited that

00:34:37,290 --> 00:34:41,460
nothing broke and if you have questions

00:34:39,810 --> 00:34:43,139
about how we're doing this quite a few

00:34:41,460 --> 00:34:44,609
people from Airbnb here today so breeze

00:34:43,139 --> 00:34:46,409
here Adam asked a and a handful of

00:34:44,609 --> 00:34:48,030
people from our Portland office so we're

00:34:46,409 --> 00:34:49,889
happy to answer questions super excited

00:34:48,030 --> 00:34:52,200
about this we started with some live

00:34:49,889 --> 00:34:53,210
coding so have some fun this uh the next

00:34:52,200 --> 00:34:58,409
few days

00:34:53,210 --> 00:34:58,409

YouTube URL: https://www.youtube.com/watch?v=JsvElHDuqoA


