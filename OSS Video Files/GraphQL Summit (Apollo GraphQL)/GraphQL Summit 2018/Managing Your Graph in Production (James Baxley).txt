Title: Managing Your Graph in Production (James Baxley)
Publication date: 2018-12-05
Playlist: GraphQL Summit 2018
Description: 
	Talk from GraphQL Summit 2018 - Nov 8, 2018

James Baxley, an Engineering Manager at Apollo, shows how to tie schema change validation and operation safelisting into your CI workflow so you can go into production safely and with confidence.

Learn more about Apollo:  https://www.apollographql.com/

Join Apollo's community Slack group:  https://www.apollographql.com/slack/

Learn more:  https://summit.graphql.com
Captions: 
	00:00:05,390 --> 00:00:09,260
good morning everybody my name is James

00:00:07,640 --> 00:00:12,530
Baxley and I am a member of the Apollo

00:00:09,260 --> 00:00:15,920
team I've been working on graph QL for a

00:00:12,530 --> 00:00:17,570
few years now working with teams of all

00:00:15,920 --> 00:00:20,660
shapes and sizes working with our

00:00:17,570 --> 00:00:21,770
community I've been able to see just a

00:00:20,660 --> 00:00:23,300
lot of things that have gone really

00:00:21,770 --> 00:00:25,400
really well and a few things that have

00:00:23,300 --> 00:00:27,710
gone not so great

00:00:25,400 --> 00:00:29,720
and today I want to talk to you a little

00:00:27,710 --> 00:00:31,130
bit about what I have seen in the

00:00:29,720 --> 00:00:33,410
industry as we've seen companies adopt

00:00:31,130 --> 00:00:35,420
graph QL and then talk really in depth

00:00:33,410 --> 00:00:37,340
about how we think with the Apollo

00:00:35,420 --> 00:00:39,710
graphical platform we can help to make

00:00:37,340 --> 00:00:41,570
your lives of building things easier and

00:00:39,710 --> 00:00:43,010
better and honestly just more fun like I

00:00:41,570 --> 00:00:44,720
like building things who in here is like

00:00:43,010 --> 00:00:48,260
an actual engineer who gets to build

00:00:44,720 --> 00:00:50,000
like apps day in and day out all right

00:00:48,260 --> 00:00:51,500
it's a good no more people so I want to

00:00:50,000 --> 00:00:53,600
make your lives more fun and that you

00:00:51,500 --> 00:00:56,059
can enjoy your work and just do things

00:00:53,600 --> 00:00:58,280
better so I'm gonna talk about what it

00:00:56,059 --> 00:00:59,630
takes to manage a graph graphs in this

00:00:58,280 --> 00:01:01,430
case is just your graphical application

00:00:59,630 --> 00:01:02,180
but it's a little bit more than that

00:01:01,430 --> 00:01:04,089
the graph that we're going to talk about

00:01:02,180 --> 00:01:06,649
is just how your company manages data

00:01:04,089 --> 00:01:08,750
the benefit here of graph QL is that you

00:01:06,649 --> 00:01:10,280
get a single source of truth and your

00:01:08,750 --> 00:01:12,079
clients can come in and consume it that

00:01:10,280 --> 00:01:13,490
can build on top of it and really what

00:01:12,079 --> 00:01:15,740
you want to talk about is how do we

00:01:13,490 --> 00:01:17,209
manage that interaction how do we make

00:01:15,740 --> 00:01:19,520
sure that our client apps and our

00:01:17,209 --> 00:01:21,429
servers all work together and that graph

00:01:19,520 --> 00:01:23,779
is kind of the core center part of it

00:01:21,429 --> 00:01:24,619
and I'm gonna show you really in-depth

00:01:23,779 --> 00:01:27,139
we're gonna get a little bit technical

00:01:24,619 --> 00:01:27,829
here they're kind of showing and walking

00:01:27,139 --> 00:01:28,969
through some of the stuff that we've

00:01:27,829 --> 00:01:31,039
seen earlier in the conference and

00:01:28,969 --> 00:01:33,439
yesterday I hope you'll enjoy the ride

00:01:31,039 --> 00:01:36,170
with me so yeah what it was it take to

00:01:33,439 --> 00:01:37,939
get the most out of your graph you have

00:01:36,170 --> 00:01:39,740
a graph to a lap it's up and running you

00:01:37,939 --> 00:01:40,969
can like go to graphical or got fuel

00:01:39,740 --> 00:01:41,630
playground you can see your schema it's

00:01:40,969 --> 00:01:43,369
really exciting

00:01:41,630 --> 00:01:45,499
your clients are starting to build on it

00:01:43,369 --> 00:01:46,819
you're in production beings seem really

00:01:45,499 --> 00:01:49,130
cool really great you've been able to

00:01:46,819 --> 00:01:51,020
build some great things but then as

00:01:49,130 --> 00:01:52,729
we've talked about earlier today with

00:01:51,020 --> 00:01:54,560
Jarrett's great talk as well as

00:01:52,729 --> 00:01:56,450
yesterday you want to be able to keep

00:01:54,560 --> 00:01:57,740
building on that like it's like okay I'd

00:01:56,450 --> 00:01:59,569
really quickly get something out but how

00:01:57,740 --> 00:02:02,270
do I maintain that how do I keep going

00:01:59,569 --> 00:02:03,200
how do I keep building and how do I make

00:02:02,270 --> 00:02:05,179
sure that what I'm gonna build is going

00:02:03,200 --> 00:02:08,690
to work really well ultimately we're how

00:02:05,179 --> 00:02:10,069
do you do graph fuel right when we talk

00:02:08,690 --> 00:02:11,900
about building a product there's really

00:02:10,069 --> 00:02:13,580
kind of three core phases of a feature

00:02:11,900 --> 00:02:15,320
right this is this is not rocket science

00:02:13,580 --> 00:02:16,550
this isn't anything new you have local

00:02:15,320 --> 00:02:17,580
development you know I've gotten the

00:02:16,550 --> 00:02:18,960
specs hopefully

00:02:17,580 --> 00:02:20,640
something as magical as what Adam showed

00:02:18,960 --> 00:02:21,900
yesterday with this whole like crazy

00:02:20,640 --> 00:02:23,550
infrastructure that makes it we don't

00:02:21,900 --> 00:02:25,350
have to really do work to build

00:02:23,550 --> 00:02:26,430
something but if you don't you open your

00:02:25,350 --> 00:02:28,590
editor up and you start writing some

00:02:26,430 --> 00:02:30,570
code you test it locally make sure it's

00:02:28,590 --> 00:02:31,740
working and after that you want to go

00:02:30,570 --> 00:02:33,120
into production right you have a feature

00:02:31,740 --> 00:02:35,130
you want to ship it test it out make

00:02:33,120 --> 00:02:37,590
sure it doesn't just say works on my

00:02:35,130 --> 00:02:38,640
machine kind of situation so you have

00:02:37,590 --> 00:02:40,500
like a nice continuous integration

00:02:38,640 --> 00:02:43,470
continuous delivery pipeline right now

00:02:40,500 --> 00:02:44,730
this is brand-new stuff and then when it

00:02:43,470 --> 00:02:46,350
goes into production you want to make

00:02:44,730 --> 00:02:48,210
sure that it works and that you're

00:02:46,350 --> 00:02:50,340
monitoring it and that you can safely

00:02:48,210 --> 00:02:52,620
move on to the next feature you don't

00:02:50,340 --> 00:02:54,120
have a really reliable production system

00:02:52,620 --> 00:02:55,410
that way you're not like putting out

00:02:54,120 --> 00:02:56,880
fires instead of enjoying your coffee

00:02:55,410 --> 00:02:58,800
the first thing in the office or you

00:02:56,880 --> 00:03:00,330
know there's 3 a.m. page duty calls

00:02:58,800 --> 00:03:01,770
that we all are aware of is just

00:03:00,330 --> 00:03:03,630
something you don't want to have happen

00:03:01,770 --> 00:03:04,890
especially with a graph QL app because

00:03:03,630 --> 00:03:08,100
it's the core part of how your whole

00:03:04,890 --> 00:03:09,120
product line works so let me show you a

00:03:08,100 --> 00:03:12,480
little bit we're gonna be talking about

00:03:09,120 --> 00:03:14,040
today so this is our new full sec

00:03:12,480 --> 00:03:15,990
tutorial app so if you have colleagues

00:03:14,040 --> 00:03:18,240
or team members who are just now getting

00:03:15,990 --> 00:03:19,980
started with graph QL I really recommend

00:03:18,240 --> 00:03:22,650
checking out this resource it's a great

00:03:19,980 --> 00:03:24,720
little app it's not too complex what's

00:03:22,650 --> 00:03:27,510
cool is this is built on top of existing

00:03:24,720 --> 00:03:29,459
REST API so I work for Apollo we like

00:03:27,510 --> 00:03:31,200
space themed things so we have space

00:03:29,459 --> 00:03:34,170
Explorer this is built on top of the

00:03:31,200 --> 00:03:35,910
space X REST API so we have a nice

00:03:34,170 --> 00:03:37,440
little app we've got some local state we

00:03:35,910 --> 00:03:39,600
can add something to a car before we

00:03:37,440 --> 00:03:40,530
check out go in and check out and book

00:03:39,600 --> 00:03:44,190
it

00:03:40,530 --> 00:03:46,920
and sure enough it is just a little

00:03:44,190 --> 00:03:48,360
craft cool API running locally on our

00:03:46,920 --> 00:03:51,120
machine right now so this is just

00:03:48,360 --> 00:03:52,260
pulling from space X rest endpoint so

00:03:51,120 --> 00:03:53,790
this very well could be just how your

00:03:52,260 --> 00:03:55,620
app is built like you have your existing

00:03:53,790 --> 00:03:56,550
services like era is talking about you

00:03:55,620 --> 00:03:57,930
don't want to throw all this stuff away

00:03:56,550 --> 00:03:59,880
you're gonna be able to like build it

00:03:57,930 --> 00:04:01,080
early on top of what you have so there's

00:03:59,880 --> 00:04:02,400
a good chance that what your graph looks

00:04:01,080 --> 00:04:05,700
like in production right now is gonna be

00:04:02,400 --> 00:04:07,350
something similar alright so how do you

00:04:05,700 --> 00:04:09,750
add a new feature how to actually go and

00:04:07,350 --> 00:04:10,620
start building something really what we

00:04:09,750 --> 00:04:11,880
want to be able to do is going to take

00:04:10,620 --> 00:04:13,680
that graph I'm gonna take this

00:04:11,880 --> 00:04:15,330
information we have and ideally we want

00:04:13,680 --> 00:04:16,560
to bring it into our day to day work we

00:04:15,330 --> 00:04:18,540
don't want to keep context switching

00:04:16,560 --> 00:04:20,250
back and forth like whoever has gone

00:04:18,540 --> 00:04:22,049
from their editor to open up graphical

00:04:20,250 --> 00:04:23,850
or some other like documentation system

00:04:22,049 --> 00:04:26,160
and like ended up in a 30 minute Twitter

00:04:23,850 --> 00:04:27,720
like bypass right is it just me or does

00:04:26,160 --> 00:04:29,430
everyone else here do that right like

00:04:27,720 --> 00:04:30,900
they're good breaks but ideally you can

00:04:29,430 --> 00:04:32,729
kind of stay live at one fork it

00:04:30,900 --> 00:04:35,639
focused especially if it's an enjoyable

00:04:32,729 --> 00:04:38,070
development experience so we're asking

00:04:35,639 --> 00:04:40,440
for here is I want that insight I want

00:04:38,070 --> 00:04:43,199
that information at my fingertips as I'm

00:04:40,440 --> 00:04:44,910
like the time from me having a thought

00:04:43,199 --> 00:04:46,380
about how I want to build something to

00:04:44,910 --> 00:04:49,320
having the information I need to build

00:04:46,380 --> 00:04:50,520
it is a very critical time and anything

00:04:49,320 --> 00:04:52,199
that we can do day in and day out to

00:04:50,520 --> 00:04:53,699
shorten that time it's just gonna make

00:04:52,199 --> 00:04:55,620
things better not only we're gonna be

00:04:53,699 --> 00:04:57,120
able to build products faster so our

00:04:55,620 --> 00:04:58,800
team is gonna be happy our users are

00:04:57,120 --> 00:05:01,020
gonna be more happy but honestly just

00:04:58,800 --> 00:05:03,389
leaves us less unsure in our day-to-day

00:05:01,020 --> 00:05:05,460
life it makes building things more fun

00:05:03,389 --> 00:05:07,740
and it's like one I think the reason why

00:05:05,460 --> 00:05:09,660
I tripped adoption has grown so much is

00:05:07,740 --> 00:05:11,460
it because everyone's like I love static

00:05:09,660 --> 00:05:13,020
typing and it's like I get type ahead

00:05:11,460 --> 00:05:14,940
like great this is cool I can build

00:05:13,020 --> 00:05:16,740
things faster this is really nice I

00:05:14,940 --> 00:05:18,479
think that she really need that for your

00:05:16,740 --> 00:05:19,889
whole data graph you needed to build me

00:05:18,479 --> 00:05:21,330
up to understand what's going on and how

00:05:19,889 --> 00:05:23,070
you can actually work with the data and

00:05:21,330 --> 00:05:26,370
your apps this isn't just static typing

00:05:23,070 --> 00:05:28,380
this is real-world typing and all this

00:05:26,370 --> 00:05:28,919
is powered by a schema this is not

00:05:28,380 --> 00:05:30,750
something new

00:05:28,919 --> 00:05:33,509
who in here is actually in production

00:05:30,750 --> 00:05:35,430
with the graphical app right now see

00:05:33,509 --> 00:05:37,560
every year those numbers grow and it

00:05:35,430 --> 00:05:38,639
makes my heart sing because I want to

00:05:37,560 --> 00:05:40,860
make sure you're successful that's what

00:05:38,639 --> 00:05:42,270
I do but so you have a schema at this

00:05:40,860 --> 00:05:44,130
point you've got a schema in production

00:05:42,270 --> 00:05:46,169
that's really really great get that to

00:05:44,130 --> 00:05:47,280
your team get that into their editor

00:05:46,169 --> 00:05:48,870
make sure that they can use it make sure

00:05:47,280 --> 00:05:50,610
they can understand it and that's why

00:05:48,870 --> 00:05:52,320
with the Apollo graphical platform the

00:05:50,610 --> 00:05:53,729
schema registry and schema awareness is

00:05:52,320 --> 00:05:55,500
just part of what you get there is no

00:05:53,729 --> 00:05:57,030
cost to it it's something that we want

00:05:55,500 --> 00:05:58,979
for everyone who's building on graph QL

00:05:57,030 --> 00:06:01,229
to have because it just makes it better

00:05:58,979 --> 00:06:03,599
you already have the schema it's part of

00:06:01,229 --> 00:06:06,090
the design of graph QL so why limit that

00:06:03,599 --> 00:06:09,030
to graphical or to some other kind of

00:06:06,090 --> 00:06:10,349
like documentation system so let's um

00:06:09,030 --> 00:06:15,090
let's go build something it's just

00:06:10,349 --> 00:06:16,470
hopalong over here all right so let's

00:06:15,090 --> 00:06:19,680
see when we make this three can actually

00:06:16,470 --> 00:06:21,030
see it all right how's the size look

00:06:19,680 --> 00:06:21,810
very one in the back and back in the

00:06:21,030 --> 00:06:24,599
bathroom you can see it's okay

00:06:21,810 --> 00:06:26,580
thumbs up great yeah Lex let's just yeah

00:06:24,599 --> 00:06:28,530
I'll be doing some live typing today my

00:06:26,580 --> 00:06:30,120
fingers are very nervous so probably

00:06:28,530 --> 00:06:31,650
typos a lot plus I can't really spell so

00:06:30,120 --> 00:06:34,169
I won't be as sharp as Adam but I'm

00:06:31,650 --> 00:06:35,340
still pretty excited so you may have

00:06:34,169 --> 00:06:38,340
seen this yesterday whether it was in

00:06:35,340 --> 00:06:39,360
Jeff's talk or Adams talk or Peggy we're

00:06:38,340 --> 00:06:41,729
very excited about it so we've been

00:06:39,360 --> 00:06:43,430
showing it a lot this is BS code and

00:06:41,729 --> 00:06:45,970
this is

00:06:43,430 --> 00:06:48,680
the Apollo graph QL plugin for obs code

00:06:45,970 --> 00:06:50,570
so you get some really nice things out

00:06:48,680 --> 00:06:52,220
of the box that is just again the design

00:06:50,570 --> 00:06:53,720
point of graph 12 it's how graph kill

00:06:52,220 --> 00:06:54,919
was designed to work is I think one of

00:06:53,720 --> 00:06:58,070
the reasons why the adoption has been so

00:06:54,919 --> 00:07:00,740
strong I can know the type I can come in

00:06:58,070 --> 00:07:02,990
in like see the response types and get

00:07:00,740 --> 00:07:05,150
this really nice type ahead where I know

00:07:02,990 --> 00:07:06,770
what I need to type in my editor I don't

00:07:05,150 --> 00:07:08,630
have to contact switch back and forth I

00:07:06,770 --> 00:07:11,680
know the return types like email is

00:07:08,630 --> 00:07:14,600
gonna be a string that's really great

00:07:11,680 --> 00:07:17,330
that's it's also right like Amelie this

00:07:14,600 --> 00:07:18,919
is so much better than a rest endpoint

00:07:17,330 --> 00:07:21,199
or even graph collapse just today where

00:07:18,919 --> 00:07:22,880
you have to go back and forth being able

00:07:21,199 --> 00:07:25,460
to come in and actually see things like

00:07:22,880 --> 00:07:26,810
I'm referencing a fragment what fields

00:07:25,460 --> 00:07:28,490
are actually on that fragment it'd be

00:07:26,810 --> 00:07:29,810
great to just know instead of me having

00:07:28,490 --> 00:07:31,280
to go back and forth and know like what

00:07:29,810 --> 00:07:33,199
fields am I actually bringing in here I

00:07:31,280 --> 00:07:37,639
like don't jump around your codebase

00:07:33,199 --> 00:07:44,289
just use the code base and then beyond

00:07:37,639 --> 00:07:44,289
that so that's a query see you click no

00:07:46,270 --> 00:07:50,750
gonna work so I had a mutation here

00:07:49,250 --> 00:07:52,310
mutations have arguments want to make

00:07:50,750 --> 00:07:54,289
sure that the variable that I'm sitting

00:07:52,310 --> 00:07:56,210
in are gonna be the right thing so with

00:07:54,289 --> 00:07:57,860
the schema awareness again you have all

00:07:56,210 --> 00:07:59,720
the information you need to know at your

00:07:57,860 --> 00:08:02,930
fingertips about the requirements of

00:07:59,720 --> 00:08:04,910
these types but this may not actually be

00:08:02,930 --> 00:08:06,530
the mutation that I want to see I really

00:08:04,910 --> 00:08:07,849
would love to actually see the schema

00:08:06,530 --> 00:08:10,070
while I'm writing things to know what

00:08:07,849 --> 00:08:12,470
other fields are so I can just peek into

00:08:10,070 --> 00:08:14,479
it this is like it's an in-memory copy

00:08:12,470 --> 00:08:16,610
of my entire schema I can jump around it

00:08:14,479 --> 00:08:18,680
all I want to I can go from operation

00:08:16,610 --> 00:08:20,060
into the scheme at any point in time and

00:08:18,680 --> 00:08:22,070
again it just it makes it that much more

00:08:20,060 --> 00:08:24,169
fun I'm right here I'm in my editor I

00:08:22,070 --> 00:08:25,699
know all of my options it makes me feel

00:08:24,169 --> 00:08:26,720
smarter at least makes me feel smarter

00:08:25,699 --> 00:08:27,860
because I'm not that's more in the first

00:08:26,720 --> 00:08:30,979
place but the tooling makes me feel

00:08:27,860 --> 00:08:37,219
strong so and I'll switch into the

00:08:30,979 --> 00:08:39,020
launches one alright so this gets really

00:08:37,219 --> 00:08:40,190
exciting this is really cool but then

00:08:39,020 --> 00:08:41,599
there's there's more to that right it

00:08:40,190 --> 00:08:43,159
isn't just your graph it isn't just the

00:08:41,599 --> 00:08:45,160
shape of your graph if you're in

00:08:43,159 --> 00:08:47,779
production you have usage of that graph

00:08:45,160 --> 00:08:49,010
so you're gonna be able to see like how

00:08:47,779 --> 00:08:51,170
is this thing actually performing what

00:08:49,010 --> 00:08:52,940
does it look like to add fields in and

00:08:51,170 --> 00:08:55,370
so you can get these annotations and

00:08:52,940 --> 00:08:56,250
please excuse the crazy long number that

00:08:55,370 --> 00:08:58,320
was just some testing

00:08:56,250 --> 00:09:01,080
doing this morning and it it was six

00:08:58,320 --> 00:09:02,490
minutes long - I've seen how long - but

00:09:01,080 --> 00:09:04,980
it works like he brings this information

00:09:02,490 --> 00:09:06,720
to you so as you add fields into yours

00:09:04,980 --> 00:09:08,310
into your queries you actually get to

00:09:06,720 --> 00:09:09,900
know like how long is this gonna take

00:09:08,310 --> 00:09:11,400
and just just think about that for a

00:09:09,900 --> 00:09:14,250
second you're building you a component

00:09:11,400 --> 00:09:16,470
you're rendering a list of items and you

00:09:14,250 --> 00:09:17,850
write the list how often do you think

00:09:16,470 --> 00:09:18,990
about loading States you're like okay

00:09:17,850 --> 00:09:20,490
well just put like a loading spinner in

00:09:18,990 --> 00:09:22,230
there well if you actually know the

00:09:20,490 --> 00:09:23,520
performance metrics of what that is

00:09:22,230 --> 00:09:25,440
gonna look like it can radically change

00:09:23,520 --> 00:09:26,970
how you design even just your loading

00:09:25,440 --> 00:09:29,070
States or your interactive States

00:09:26,970 --> 00:09:31,020
because if your sub you know 200

00:09:29,070 --> 00:09:32,790
milliseconds or sub 100 millisecond

00:09:31,020 --> 00:09:34,050
threshold it drastically changes what

00:09:32,790 --> 00:09:37,950
you need to show to the user to make the

00:09:34,050 --> 00:09:41,790
app feel fast and snappy beyond that as

00:09:37,950 --> 00:09:43,590
you add fields it's not always very

00:09:41,790 --> 00:09:45,060
clear what a field is going to do like

00:09:43,590 --> 00:09:46,560
the beauty of craft QL is that data can

00:09:45,060 --> 00:09:48,720
kind of come from anywhere and be all

00:09:46,560 --> 00:09:50,340
merging together but there's no way for

00:09:48,720 --> 00:09:52,170
me to know looking at the shape of the

00:09:50,340 --> 00:09:54,450
graph that is booked is going to go to a

00:09:52,170 --> 00:09:55,710
whole nother data system because it

00:09:54,450 --> 00:09:57,480
doesn't need to for my product my

00:09:55,710 --> 00:09:58,950
product wants it all is one thing but

00:09:57,480 --> 00:10:00,090
the reality is that the workload is that

00:09:58,950 --> 00:10:01,710
adding that field is going to make my

00:10:00,090 --> 00:10:03,240
app a little bit slower here not a ton

00:10:01,710 --> 00:10:05,070
but a little bit something that it's a

00:10:03,240 --> 00:10:06,690
question of do I actually need this here

00:10:05,070 --> 00:10:09,089
am i over fetching am i early fetching

00:10:06,690 --> 00:10:11,670
it should I come in here and you know

00:10:09,089 --> 00:10:13,050
defer this one directive that way or

00:10:11,670 --> 00:10:15,960
defer this one field though I'm not like

00:10:13,050 --> 00:10:17,730
adding extra cost to it then you see

00:10:15,960 --> 00:10:19,770
this client directive you wanna be able

00:10:17,730 --> 00:10:21,089
to do the same thing for local state so

00:10:19,770 --> 00:10:23,610
what we're gonna do here is I'm gonna

00:10:21,089 --> 00:10:25,560
show you that we actually know what the

00:10:23,610 --> 00:10:27,300
return type of this field is this is

00:10:25,560 --> 00:10:28,860
taking our remote schema right the graph

00:10:27,300 --> 00:10:30,750
that our service providing and it's

00:10:28,860 --> 00:10:33,500
merging it directly with our client side

00:10:30,750 --> 00:10:35,670
schema so we talked about one data graph

00:10:33,500 --> 00:10:38,070
like the hidden thing is it's not just

00:10:35,670 --> 00:10:39,570
one data graph you have one server data

00:10:38,070 --> 00:10:41,910
graph but every application may have its

00:10:39,570 --> 00:10:43,980
own unique view of that data graph and

00:10:41,910 --> 00:10:45,270
may its own unique extension points of

00:10:43,980 --> 00:10:46,530
that data graph and you want your

00:10:45,270 --> 00:10:48,420
tooling to be able to respond to that

00:10:46,530 --> 00:10:49,890
and know that so sure enough I could

00:10:48,420 --> 00:10:51,300
come in here and see that like my local

00:10:49,890 --> 00:10:54,450
state I know exactly what the types of

00:10:51,300 --> 00:10:56,400
that are and how do I do that well I can

00:10:54,450 --> 00:10:58,920
just write my graph kill schema for my

00:10:56,400 --> 00:11:00,150
client I can extend the remote types and

00:10:58,920 --> 00:11:02,850
I know exactly what I'm gonna be able to

00:11:00,150 --> 00:11:04,560
get like I said I'd typo a lot but I

00:11:02,850 --> 00:11:06,720
also get hungry a lot and I type launch

00:11:04,560 --> 00:11:08,170
as lunch like every time I've ever

00:11:06,720 --> 00:11:09,879
worked on this app

00:11:08,170 --> 00:11:11,829
and I always end up like saving it and I

00:11:09,879 --> 00:11:12,850
get a bug and it's really mad I mean but

00:11:11,829 --> 00:11:14,860
I don't do that anymore because that's

00:11:12,850 --> 00:11:16,300
type lunch and then it says like hey I

00:11:14,860 --> 00:11:17,740
can't find it and it really needs to say

00:11:16,300 --> 00:11:19,810
go get a snack and then come back and

00:11:17,740 --> 00:11:22,389
keep working but we haven't quite gotten

00:11:19,810 --> 00:11:24,699
that smart yet we're working on it

00:11:22,389 --> 00:11:26,050
but you know you have big teams right

00:11:24,699 --> 00:11:27,850
and teams grow and you have all these

00:11:26,050 --> 00:11:29,829
different features if you've ever gone

00:11:27,850 --> 00:11:31,269
through and tried to debug a Redux

00:11:29,829 --> 00:11:32,439
reducer and actually created should I

00:11:31,269 --> 00:11:35,110
forgot like what was this thing trying

00:11:32,439 --> 00:11:36,129
to do it's written two years ago what in

00:11:35,110 --> 00:11:37,990
the world is this thing supposed to

00:11:36,129 --> 00:11:42,069
happen you can write documentation in

00:11:37,990 --> 00:11:47,079
here so I'm gonna write Adam Neary did

00:11:42,069 --> 00:11:47,980
this blame him okay so now like you know

00:11:47,079 --> 00:11:48,879
when someone comes back to this code

00:11:47,980 --> 00:11:50,559
base you're going to know exactly what

00:11:48,879 --> 00:11:51,910
they need to do here but it'd be really

00:11:50,559 --> 00:11:53,740
great if I could actually just find

00:11:51,910 --> 00:11:56,259
everywhere in my code base that is using

00:11:53,740 --> 00:11:58,149
this field and sure enough I can I can

00:11:56,259 --> 00:11:59,889
find all the references so anywhere that

00:11:58,149 --> 00:12:01,990
a component is using a local state I now

00:11:59,889 --> 00:12:03,399
could just jump to them and find all the

00:12:01,990 --> 00:12:04,540
uses of them and I can see that

00:12:03,399 --> 00:12:06,699
someone's using it wrong

00:12:04,540 --> 00:12:09,519
and again like hey I didn't hear you did

00:12:06,699 --> 00:12:12,040
this blame him it's kind of one of my

00:12:09,519 --> 00:12:13,420
rules in life but I can fix it right

00:12:12,040 --> 00:12:15,189
this returns a launch type that's sort

00:12:13,420 --> 00:12:16,809
of telling me here it says you're

00:12:15,189 --> 00:12:18,790
returning back an ID like that's that's

00:12:16,809 --> 00:12:19,870
not right you need a selection set so I

00:12:18,790 --> 00:12:22,029
can come in here and now I know

00:12:19,870 --> 00:12:24,129
immediately what I have I haven't saved

00:12:22,029 --> 00:12:25,809
a file I haven't opened this file I'm

00:12:24,129 --> 00:12:27,430
doing it in line while I'm designing my

00:12:25,809 --> 00:12:29,439
schema and I can come in and make these

00:12:27,430 --> 00:12:31,509
changes here a war I could actually jump

00:12:29,439 --> 00:12:35,230
to it and again I haven't clicked saved

00:12:31,509 --> 00:12:36,490
at all this is all just working and

00:12:35,230 --> 00:12:40,209
that's really great for my one graph

00:12:36,490 --> 00:12:44,259
idea but my craft changes and let's see

00:12:40,209 --> 00:12:45,910
launches so what I do when it changes I

00:12:44,259 --> 00:12:48,160
wanna be able to see the new version of

00:12:45,910 --> 00:12:50,050
the graph immediately as I work in so

00:12:48,160 --> 00:12:52,329
I'm gonna be able to select a new schema

00:12:50,050 --> 00:12:53,500
tag and again I don't know why the let's

00:12:52,329 --> 00:12:54,970
see if I got that right I did

00:12:53,500 --> 00:12:56,470
sorry about the vs code not showing

00:12:54,970 --> 00:12:58,389
fully but what I just did is I switched

00:12:56,470 --> 00:12:59,860
to a new published schema tag this is an

00:12:58,389 --> 00:13:01,809
upcoming version of my schema and

00:12:59,860 --> 00:13:03,670
immediately I see that I have an issue

00:13:01,809 --> 00:13:05,529
coming up that this field has been

00:13:03,670 --> 00:13:07,149
deprecated right so every day when I

00:13:05,529 --> 00:13:08,199
open my editor I know that the data that

00:13:07,149 --> 00:13:09,759
I'm working with is going to be the

00:13:08,199 --> 00:13:11,279
latest and greatest of what my

00:13:09,759 --> 00:13:13,360
application is actually going to run on

00:13:11,279 --> 00:13:16,179
including things like beta branches or

00:13:13,360 --> 00:13:18,069
new ideas so sure enough there's a full

00:13:16,179 --> 00:13:19,220
name here because it's craft well I can

00:13:18,069 --> 00:13:21,110
alias it and back

00:13:19,220 --> 00:13:22,670
doing my job back in teams really happy

00:13:21,110 --> 00:13:24,290
we're not supporting old legacy code and

00:13:22,670 --> 00:13:26,779
as a developer I don't have to maintain

00:13:24,290 --> 00:13:28,100
an email thread or a slack channel or

00:13:26,779 --> 00:13:31,360
talk to the back-end team or front-end

00:13:28,100 --> 00:13:33,139
team it all is just connected together

00:13:31,360 --> 00:13:34,910
so that's the kind of front-end world

00:13:33,139 --> 00:13:37,160
that I want to work in it takes the idea

00:13:34,910 --> 00:13:38,899
of building a feature from days down to

00:13:37,160 --> 00:13:40,699
hours because you have all that

00:13:38,899 --> 00:13:42,110
information ready for you and now that

00:13:40,699 --> 00:13:43,430
you're building things so much faster

00:13:42,110 --> 00:13:44,600
you want to be able to actually deploy

00:13:43,430 --> 00:13:46,069
them faster you wanna be able to get

00:13:44,600 --> 00:13:50,300
them out of the production because your

00:13:46,069 --> 00:13:51,620
product cycles gonna be sped up so a lot

00:13:50,300 --> 00:13:53,389
of people here say that they have a

00:13:51,620 --> 00:13:55,279
great field production who actually

00:13:53,389 --> 00:13:57,459
manages the schema who in here like is

00:13:55,279 --> 00:14:00,529
not fronting actually builds the schema

00:13:57,459 --> 00:14:01,759
great awesome have you ever looked into

00:14:00,529 --> 00:14:03,740
your client code base to figure out how

00:14:01,759 --> 00:14:05,000
that's using your schema just like done

00:14:03,740 --> 00:14:06,949
a big grep and say like what what

00:14:05,000 --> 00:14:08,870
operations are being used right it's the

00:14:06,949 --> 00:14:10,279
only way really to know how the thing is

00:14:08,870 --> 00:14:12,680
going to use so I can know about I can

00:14:10,279 --> 00:14:15,350
do to change it or I'm left only adding

00:14:12,680 --> 00:14:17,449
and I get this like indefinitely growing

00:14:15,350 --> 00:14:18,740
large schema and that sucks that's hard

00:14:17,449 --> 00:14:20,660
to maintain my codebase is littered with

00:14:18,740 --> 00:14:22,189
old stuff I don't want to support

00:14:20,660 --> 00:14:23,600
anymore that's not the world that we

00:14:22,189 --> 00:14:26,050
should be building in that's it's not

00:14:23,600 --> 00:14:27,889
maintainable it's not scalable as a team

00:14:26,050 --> 00:14:29,779
so what you wanna be able to do is say

00:14:27,889 --> 00:14:31,189
hey I'm gonna change my schema what is

00:14:29,779 --> 00:14:32,930
that going to look like what is the diff

00:14:31,189 --> 00:14:35,449
between that schema we're all very

00:14:32,930 --> 00:14:37,939
comfortable with the idea of a diff in

00:14:35,449 --> 00:14:39,050
our day to day life of as engineers so

00:14:37,939 --> 00:14:40,550
we want to be able to apply that to our

00:14:39,050 --> 00:14:43,459
graph we want to know what is actually

00:14:40,550 --> 00:14:44,480
being changed but the reality is it

00:14:43,459 --> 00:14:46,009
doesn't actually really matter what's

00:14:44,480 --> 00:14:48,740
being changed it matters who's is going

00:14:46,009 --> 00:14:49,759
to impact we build apps for users so we

00:14:48,740 --> 00:14:51,319
want to make sure that whenever we do

00:14:49,759 --> 00:14:52,550
make a change we're not breaking our

00:14:51,319 --> 00:14:54,110
users experience we're keeping our

00:14:52,550 --> 00:14:56,089
product moving forward we're keeping our

00:14:54,110 --> 00:14:57,500
customers happy and we're keeping our

00:14:56,089 --> 00:14:59,569
engineering manager in our bosses and

00:14:57,500 --> 00:15:00,889
our whole company happy because they're

00:14:59,569 --> 00:15:02,839
not getting support tickets of like hey

00:15:00,889 --> 00:15:04,519
the app just broke what happens oh yeah

00:15:02,839 --> 00:15:06,470
I removed the field shoot didn't think

00:15:04,519 --> 00:15:07,370
anyone who's using it well now you'd

00:15:06,470 --> 00:15:09,589
have to worry about that anymore to

00:15:07,370 --> 00:15:11,449
craft a platform and the way that this

00:15:09,589 --> 00:15:14,059
works is that with a polygraph field

00:15:11,449 --> 00:15:15,980
platform you'll be able to log traces

00:15:14,059 --> 00:15:17,990
and a trace is just a unit of work on

00:15:15,980 --> 00:15:19,850
the graph it says I have a client they

00:15:17,990 --> 00:15:21,259
want some data trace it and figure out

00:15:19,850 --> 00:15:24,050
what's happening what fields are they

00:15:21,259 --> 00:15:26,120
using what clients are coming from what

00:15:24,050 --> 00:15:27,410
was the timing look like and with that

00:15:26,120 --> 00:15:29,600
with this giant collection of data

00:15:27,410 --> 00:15:31,130
whenever you go to make a change when

00:15:29,600 --> 00:15:32,600
go to dip this field so you see we

00:15:31,130 --> 00:15:35,060
removed like average duration

00:15:32,600 --> 00:15:36,079
millisecond here in this example what

00:15:35,060 --> 00:15:38,180
we're gonna do is we're going to take

00:15:36,079 --> 00:15:39,800
all those traces based off of whatever

00:15:38,180 --> 00:15:42,440
window of time your support window is

00:15:39,800 --> 00:15:43,699
like one month two years it doesn't

00:15:42,440 --> 00:15:45,110
matter we'll take all of that and you

00:15:43,699 --> 00:15:47,300
make a change and we'll take the past

00:15:45,110 --> 00:15:49,310
two years of data and we'll run it

00:15:47,300 --> 00:15:51,860
through and see if you use that field by

00:15:49,310 --> 00:15:53,360
any client if you did it'll tell you and

00:15:51,860 --> 00:15:56,600
show up right nice and here and say hey

00:15:53,360 --> 00:15:57,889
the 1.3 version of your iOS app is still

00:15:56,600 --> 00:15:58,490
using that field so if you want to

00:15:57,889 --> 00:15:59,839
support it

00:15:58,490 --> 00:16:02,449
then you need to not change this field

00:15:59,839 --> 00:16:04,790
anymore this just takes the time to

00:16:02,449 --> 00:16:06,110
reviewing and cue this is like QA in

00:16:04,790 --> 00:16:09,410
your pull request right like come on

00:16:06,110 --> 00:16:11,329
that's that's pretty amazing and it's

00:16:09,410 --> 00:16:12,709
built into your system right this can't

00:16:11,329 --> 00:16:14,660
work if you have to go open some other

00:16:12,709 --> 00:16:15,769
process to go into some other browser

00:16:14,660 --> 00:16:17,149
and try and figure out what's going on

00:16:15,769 --> 00:16:18,889
this need to be part of your get process

00:16:17,149 --> 00:16:20,540
so you want to open up rust and github

00:16:18,889 --> 00:16:22,190
where you already have your continuous

00:16:20,540 --> 00:16:23,569
integration stuff reporting back you

00:16:22,190 --> 00:16:26,050
want to know how that impact is going to

00:16:23,569 --> 00:16:28,160
come to your schema as well with the

00:16:26,050 --> 00:16:30,290
schema validation system with Apollo

00:16:28,160 --> 00:16:31,759
graphical platform it's ready to go turn

00:16:30,290 --> 00:16:33,560
on the github app you start sending the

00:16:31,759 --> 00:16:35,810
data and now you have this amazing tool

00:16:33,560 --> 00:16:41,089
to keep you from breaking things so

00:16:35,810 --> 00:16:42,500
let's see what this looks like all right

00:16:41,089 --> 00:16:44,750
so here's a pull request that I made

00:16:42,500 --> 00:16:46,310
this is again this is that same full

00:16:44,750 --> 00:16:49,100
site tutorial app you can check out this

00:16:46,310 --> 00:16:51,170
on our polygraph gala org and you can

00:16:49,100 --> 00:16:53,269
see this pull request and you can see

00:16:51,170 --> 00:16:56,329
that I have a couple red arrows here a

00:16:53,269 --> 00:16:57,980
red X's and what happened is and I'll

00:16:56,329 --> 00:16:59,990
show you the actual tip is I removed a

00:16:57,980 --> 00:17:01,730
field that was being used and so I got

00:16:59,990 --> 00:17:04,069
all my github status came back and it

00:17:01,730 --> 00:17:07,459
said that the service check for the

00:17:04,069 --> 00:17:09,350
space Explorer it failed it didn't work

00:17:07,459 --> 00:17:10,579
and there's actually a details link and

00:17:09,350 --> 00:17:12,319
I'll click on that in a second it shows

00:17:10,579 --> 00:17:14,569
you that's where you can go and actually

00:17:12,319 --> 00:17:16,549
see the full information there and then

00:17:14,569 --> 00:17:17,990
I was able to take that information know

00:17:16,549 --> 00:17:19,850
what changed and come back and make a

00:17:17,990 --> 00:17:20,900
different change and now everything is

00:17:19,850 --> 00:17:22,490
green I can merge the pull request

00:17:20,900 --> 00:17:24,949
should we merge it on stage - anybody

00:17:22,490 --> 00:17:26,900
want me to merge this for quest know a

00:17:24,949 --> 00:17:28,490
little bit emerge one last year that was

00:17:26,900 --> 00:17:30,409
like actually exciting because it was a

00:17:28,490 --> 00:17:33,200
Paula clients 2.0 but I'm excited about

00:17:30,409 --> 00:17:34,429
this one so there we go so what that

00:17:33,200 --> 00:17:36,230
where were those links have actually

00:17:34,429 --> 00:17:38,390
taken you well they were taking you to

00:17:36,230 --> 00:17:39,710
schemas checks page and engine and this

00:17:38,390 --> 00:17:40,750
was that initial publish that initial

00:17:39,710 --> 00:17:42,490
like run up

00:17:40,750 --> 00:17:45,190
check and sure enough I would have

00:17:42,490 --> 00:17:49,090
broken five queries across multiple

00:17:45,190 --> 00:17:51,040
clients so my iOS app my android app and

00:17:49,090 --> 00:17:53,050
my web app all would have been broken if

00:17:51,040 --> 00:17:54,550
I would have made that change and I can

00:17:53,050 --> 00:17:55,600
actually know exactly what change was

00:17:54,550 --> 00:17:57,130
gonna happen here right I was gonna

00:17:55,600 --> 00:17:58,630
remove the name field in the ID field

00:17:57,130 --> 00:18:00,910
and there's something about that that

00:17:58,630 --> 00:18:02,230
would have broken these queries so I can

00:18:00,910 --> 00:18:03,820
look at these queries and determine like

00:18:02,230 --> 00:18:06,190
exactly what field it is and I can know

00:18:03,820 --> 00:18:07,780
what's going on and because of that I

00:18:06,190 --> 00:18:09,910
was able to come back and say okay well

00:18:07,780 --> 00:18:11,680
let me just deprecated the name field

00:18:09,910 --> 00:18:13,990
I'll make a new one that's called full

00:18:11,680 --> 00:18:15,550
name and I can trust them I my team is

00:18:13,990 --> 00:18:17,050
gonna get that information tomorrow or

00:18:15,550 --> 00:18:18,400
today when they open their editor for

00:18:17,050 --> 00:18:20,350
the next time and they'll make the

00:18:18,400 --> 00:18:23,080
change over time and we can we can face

00:18:20,350 --> 00:18:24,820
it out but I still remove the ID field

00:18:23,080 --> 00:18:27,100
it's like that statically is a breaking

00:18:24,820 --> 00:18:28,630
change but no one was using it so it

00:18:27,100 --> 00:18:30,520
doesn't really matter we keep our schema

00:18:28,630 --> 00:18:32,020
clean we keep it tight and where it's

00:18:30,520 --> 00:18:35,740
easy for us to maintain and make for

00:18:32,020 --> 00:18:37,300
more reliable systems and with that

00:18:35,740 --> 00:18:38,770
we're in production congratulations we

00:18:37,300 --> 00:18:41,020
did it we shipped a feature it's really

00:18:38,770 --> 00:18:42,340
exciting took no time at all not as

00:18:41,020 --> 00:18:44,800
quite as fast as Airbnb does it but

00:18:42,340 --> 00:18:46,570
we're getting there so now we're in

00:18:44,800 --> 00:18:48,760
production we have a graphical op in

00:18:46,570 --> 00:18:50,530
production we have clients right that's

00:18:48,760 --> 00:18:51,490
again a graph isn't really useful if

00:18:50,530 --> 00:18:53,860
it's just sitting up there nice and

00:18:51,490 --> 00:18:56,710
pristine any people using it and a

00:18:53,860 --> 00:18:58,990
client is an app it's your iOS app your

00:18:56,710 --> 00:19:00,880
Android app and it works the contract it

00:18:58,990 --> 00:19:02,530
has with your graphic you'll server is

00:19:00,880 --> 00:19:04,060
these operations right like this is

00:19:02,530 --> 00:19:06,550
that's the contract schema plus

00:19:04,060 --> 00:19:07,750
operations is how we work so you need to

00:19:06,550 --> 00:19:09,760
be able to understand not just the

00:19:07,750 --> 00:19:11,050
operations but who owns them what

00:19:09,760 --> 00:19:14,230
version the app owns and what does it

00:19:11,050 --> 00:19:15,940
look like to monitor a client so you're

00:19:14,230 --> 00:19:18,250
in production you may be able to see

00:19:15,940 --> 00:19:20,620
things like what clients are using my

00:19:18,250 --> 00:19:22,420
app are they the iOS app the Android app

00:19:20,620 --> 00:19:24,280
how much are they being used

00:19:22,420 --> 00:19:25,510
do I have unauthorized access or

00:19:24,280 --> 00:19:27,340
somebody that I don't know is something

00:19:25,510 --> 00:19:28,840
like Rando on the Internet using my

00:19:27,340 --> 00:19:31,360
graph QL I should probably know about

00:19:28,840 --> 00:19:32,920
that right ultimately these production

00:19:31,360 --> 00:19:35,620
tools are help or meant to help you make

00:19:32,920 --> 00:19:37,840
your graph QL app more predictable more

00:19:35,620 --> 00:19:39,340
reliable and more secure and that

00:19:37,840 --> 00:19:41,320
predictability part is a really key

00:19:39,340 --> 00:19:44,380
thing because it has a huge impact on

00:19:41,320 --> 00:19:46,660
how your all your services work if you

00:19:44,380 --> 00:19:48,010
can know ahead of time what the shape of

00:19:46,660 --> 00:19:49,510
my operations are going to look like and

00:19:48,010 --> 00:19:51,070
what clients are gonna be related to it

00:19:49,510 --> 00:19:52,690
helps you to do really important things

00:19:51,070 --> 00:19:53,710
like make sure you have the right scale

00:19:52,690 --> 00:19:56,440
for your database system

00:19:53,710 --> 00:19:57,909
or the right cashing in place and really

00:19:56,440 --> 00:19:59,049
it's that you know what your days gonna

00:19:57,909 --> 00:20:00,279
look like right you're not gonna get the

00:19:59,049 --> 00:20:01,539
page Beauty caucus someone added a

00:20:00,279 --> 00:20:03,149
random field that you didn't know was

00:20:01,539 --> 00:20:05,020
gonna happen

00:20:03,149 --> 00:20:06,370
and you also gonna be able to secure

00:20:05,020 --> 00:20:08,679
your graph your lap you wanna be able to

00:20:06,370 --> 00:20:10,419
say hey we're in production only my

00:20:08,679 --> 00:20:12,130
product teams can use this app I don't

00:20:10,419 --> 00:20:13,750
want it to expose my graph to the

00:20:12,130 --> 00:20:14,649
Internet I don't to have introspection

00:20:13,750 --> 00:20:16,390
turned on I don't want to allow

00:20:14,649 --> 00:20:17,860
arbitrary queries I want to come in and

00:20:16,390 --> 00:20:19,750
say like all right my team you can use

00:20:17,860 --> 00:20:21,700
whatever you want to I trust you but

00:20:19,750 --> 00:20:23,559
anyone else you you can't do it we want

00:20:21,700 --> 00:20:24,880
to keep this nice and secure and with

00:20:23,559 --> 00:20:26,380
the operation registries part of the

00:20:24,880 --> 00:20:29,049
Apollo graphical platform you can just

00:20:26,380 --> 00:20:30,669
do that all right so what does that look

00:20:29,049 --> 00:20:32,169
like so this is probably gonna be the

00:20:30,669 --> 00:20:32,409
riskiest demo so we'll see what happens

00:20:32,169 --> 00:20:35,620
here

00:20:32,409 --> 00:20:37,809
because I'm gonna try and ship a bug

00:20:35,620 --> 00:20:39,970
we'll see what happens here all right so

00:20:37,809 --> 00:20:41,830
I've got engine reporting coming up I'm

00:20:39,970 --> 00:20:44,770
no traffic right now because it's a

00:20:41,830 --> 00:20:47,620
sample app so what I've got here is I

00:20:44,770 --> 00:20:51,460
have my server and then I'm getting

00:20:47,620 --> 00:20:53,500
ready to ship a buggy build okay so I

00:20:51,460 --> 00:20:55,600
forgot to close a while loop in this

00:20:53,500 --> 00:20:59,289
code base and now my Android app is just

00:20:55,600 --> 00:21:01,510
like hammering my endpoint this isn't an

00:20:59,289 --> 00:21:02,740
app I need support anymore I don't know

00:21:01,510 --> 00:21:04,059
what to do about it but it's got all

00:21:02,740 --> 00:21:06,220
these operations right it's just like

00:21:04,059 --> 00:21:08,200
coming in hit my app and hit my

00:21:06,220 --> 00:21:09,669
downstream services and this is a

00:21:08,200 --> 00:21:11,110
surprise ultimately it's not even this

00:21:09,669 --> 00:21:13,299
is a bad thing this isn't an attacker

00:21:11,110 --> 00:21:14,649
although it could be it's this is a

00:21:13,299 --> 00:21:16,690
surprise this is something that I wasn't

00:21:14,649 --> 00:21:18,220
expecting it's a shape of an operation

00:21:16,690 --> 00:21:20,860
that I didn't know about and I really

00:21:18,220 --> 00:21:22,240
don't want it to happen so as a back-end

00:21:20,860 --> 00:21:24,159
engineer or as a team that maintains the

00:21:22,240 --> 00:21:25,899
schema I want to be able to control this

00:21:24,159 --> 00:21:28,330
I want to be able to connect my server

00:21:25,899 --> 00:21:30,309
to have full knowledge of all of my

00:21:28,330 --> 00:21:32,230
client apps and all the operations that

00:21:30,309 --> 00:21:33,909
they work with and that's why we have

00:21:32,230 --> 00:21:35,620
the operation registry as part of the

00:21:33,909 --> 00:21:37,779
graph QL platform is that you can plumb

00:21:35,620 --> 00:21:41,440
these things together and you can see it

00:21:37,779 --> 00:21:43,510
work so you can see on the left here the

00:21:41,440 --> 00:21:46,020
the only change I'm gonna make this

00:21:43,510 --> 00:21:48,909
entire service is this three line change

00:21:46,020 --> 00:21:50,740
that's gonna say hey when you start up I

00:21:48,909 --> 00:21:52,539
want you to get all the operations that

00:21:50,740 --> 00:21:54,429
you would expect from my company now

00:21:52,539 --> 00:21:55,659
once you pull them down and then I want

00:21:54,429 --> 00:21:56,799
you to use that information for a lot of

00:21:55,659 --> 00:21:58,899
good benefits and what here I'm going to

00:21:56,799 --> 00:22:00,220
turn on is owner forbid people from

00:21:58,899 --> 00:22:03,340
using anything except for what I tell

00:22:00,220 --> 00:22:04,750
them to use so I'm gonna save this and

00:22:03,340 --> 00:22:06,669
you're gonna see this buggy build is

00:22:04,750 --> 00:22:08,350
gonna go it's gonna get some

00:22:06,669 --> 00:22:11,590
no connection timeouts for a second as

00:22:08,350 --> 00:22:13,299
the app reboots up all right there they

00:22:11,590 --> 00:22:16,359
are so app just restart we rolled out

00:22:13,299 --> 00:22:17,320
our new container and prod and you know

00:22:16,359 --> 00:22:18,580
actually it wouldn't really happen

00:22:17,320 --> 00:22:19,629
progress be really amazing tools these

00:22:18,580 --> 00:22:21,129
days so that doesn't happen

00:22:19,629 --> 00:22:22,149
but the buggy build is still trying to

00:22:21,129 --> 00:22:24,730
send stuff but now we're getting five

00:22:22,149 --> 00:22:26,259
hundreds over here sorry all right it

00:22:24,730 --> 00:22:28,690
should move up because those things in

00:22:26,259 --> 00:22:30,940
the way but that app is like not

00:22:28,690 --> 00:22:32,619
actually hitting our downstream data

00:22:30,940 --> 00:22:34,600
sources anymore we've made its queries

00:22:32,619 --> 00:22:35,980
invalid just with that one command

00:22:34,600 --> 00:22:38,739
because it's not part of our client

00:22:35,980 --> 00:22:47,230
registry and so you can see we move this

00:22:38,739 --> 00:22:49,269
to the last hours of the last day all

00:22:47,230 --> 00:22:51,070
right so I had a spike I see that

00:22:49,269 --> 00:22:52,690
initial spike of requests and then I

00:22:51,070 --> 00:22:53,799
turned on the operation registry and now

00:22:52,690 --> 00:22:55,869
it starting to go back down so

00:22:53,799 --> 00:22:57,850
immediately down here you can see it was

00:22:55,869 --> 00:22:59,499
hitting my back-end data sources and now

00:22:57,850 --> 00:23:00,730
it's not anymore we still know it's

00:22:59,499 --> 00:23:02,619
coming in we don't want to like close

00:23:00,730 --> 00:23:04,840
our eyes to these clients we want to

00:23:02,619 --> 00:23:06,669
tell them no no no no you can't do this

00:23:04,840 --> 00:23:08,440
this won't work for me but there's so

00:23:06,669 --> 00:23:10,299
much more than this the predictability

00:23:08,440 --> 00:23:13,210
of knowing the operations lets me do

00:23:10,299 --> 00:23:14,590
things like optimize my queries and

00:23:13,210 --> 00:23:16,389
split them apart so I know what's going

00:23:14,590 --> 00:23:17,769
to go on lets me know how much I can

00:23:16,389 --> 00:23:19,899
scale my database clusters to make sure

00:23:17,769 --> 00:23:21,909
that I have the right size to support my

00:23:19,899 --> 00:23:23,529
teams and really as a backing engineer

00:23:21,909 --> 00:23:26,559
this kind of system just makes things

00:23:23,529 --> 00:23:29,080
safer for me and beyond that I know

00:23:26,559 --> 00:23:30,609
who's using my app I know the shape of

00:23:29,080 --> 00:23:32,830
it I know as a team member I build the

00:23:30,609 --> 00:23:35,200
iOS app that's really all I care about

00:23:32,830 --> 00:23:37,960
like if your support app is being buggy

00:23:35,200 --> 00:23:39,639
it's not my problem and really it's not

00:23:37,960 --> 00:23:41,980
that big of a deal from a business value

00:23:39,639 --> 00:23:43,779
standpoint but if the iOS app starts

00:23:41,980 --> 00:23:45,249
getting a whole bunch of errors that's a

00:23:43,779 --> 00:23:46,749
big deal I want to be able to see that I

00:23:45,249 --> 00:23:48,519
want to surface it I want to understand

00:23:46,749 --> 00:23:50,499
it and that's how I can manage my app

00:23:48,519 --> 00:23:51,970
better manage my graph better because I

00:23:50,499 --> 00:23:53,799
need that insight and that information

00:23:51,970 --> 00:23:57,299
and I wanna be able to take that and do

00:23:53,799 --> 00:23:57,299
things with it I wanted to be actionable

00:24:00,120 --> 00:24:05,640
ultimately none of this stuff is crazy

00:24:03,630 --> 00:24:07,140
mad scientist changes to graft well

00:24:05,640 --> 00:24:09,419
graph QL is really really well designed

00:24:07,140 --> 00:24:11,580
it has a lot of amazing things that make

00:24:09,419 --> 00:24:13,470
it really well-suited for how we build

00:24:11,580 --> 00:24:15,000
applications what we want to do at

00:24:13,470 --> 00:24:16,470
Apollo and the reason why we announced

00:24:15,000 --> 00:24:18,390
the graphic platform that you can start

00:24:16,470 --> 00:24:20,610
using today you can go in and get the vs

00:24:18,390 --> 00:24:22,409
code right now if you just go to an

00:24:20,610 --> 00:24:24,240
integration is because we want to take

00:24:22,409 --> 00:24:26,340
those things that make graph kill really

00:24:24,240 --> 00:24:28,679
nice we want to scale it the size of

00:24:26,340 --> 00:24:29,820
your company Garrett did a great talk or

00:24:28,679 --> 00:24:31,380
this morning to talk about the real

00:24:29,820 --> 00:24:33,539
value of graph kill isn't just the

00:24:31,380 --> 00:24:36,120
technology it's how your teams can work

00:24:33,539 --> 00:24:38,669
to bet work together better so with this

00:24:36,120 --> 00:24:40,470
kind of platform it's taking the micro

00:24:38,669 --> 00:24:41,880
benefits of graft well knowing the

00:24:40,470 --> 00:24:43,710
validation knowing an operation in

00:24:41,880 --> 00:24:46,320
schemas and supplying that across an

00:24:43,710 --> 00:24:48,330
entire organization and even beyond

00:24:46,320 --> 00:24:50,309
organizations as I consume the github

00:24:48,330 --> 00:24:52,200
graph QL endpoint and link it together

00:24:50,309 --> 00:24:54,000
for my own product I want to be able to

00:24:52,200 --> 00:24:55,260
know when github deprecates a field I

00:24:54,000 --> 00:24:57,210
want to be able to know it in my editor

00:24:55,260 --> 00:24:58,260
I want to work on the global graph of

00:24:57,210 --> 00:24:59,730
how data works and all these

00:24:58,260 --> 00:25:01,230
applications and that's what the graph

00:24:59,730 --> 00:25:03,240
field platform is here to do is here to

00:25:01,230 --> 00:25:05,010
help scale your entire company as you

00:25:03,240 --> 00:25:06,510
manage your graph let's take that

00:25:05,010 --> 00:25:08,159
central point of knowledge that schema

00:25:06,510 --> 00:25:09,840
for everybody and put it into their

00:25:08,159 --> 00:25:11,370
tools help them know what's going on

00:25:09,840 --> 00:25:13,409
help them to see and evolve that and

00:25:11,370 --> 00:25:16,289
keep that productive and clean and

00:25:13,409 --> 00:25:18,360
effective and it's helping you to make

00:25:16,289 --> 00:25:19,799
sure that you can always change your

00:25:18,360 --> 00:25:22,350
system you know Jeff talked yesterday

00:25:19,799 --> 00:25:23,640
about the ten values of doing graph QL

00:25:22,350 --> 00:25:26,279
right and one of those was don't

00:25:23,640 --> 00:25:28,529
prematurely build your schema out and

00:25:26,279 --> 00:25:30,570
that is a really strong key principle

00:25:28,529 --> 00:25:32,760
but ultimately you need to you need to

00:25:30,570 --> 00:25:34,409
be able to control how your schema grows

00:25:32,760 --> 00:25:36,240
and how your operations change against

00:25:34,409 --> 00:25:37,159
that thing if you're locked down into

00:25:36,240 --> 00:25:39,570
every decision you've ever made

00:25:37,159 --> 00:25:41,279
indefinitely supporting it forever then

00:25:39,570 --> 00:25:43,440
graph kill is gonna become a big risk

00:25:41,279 --> 00:25:44,970
factor in your organization you may be

00:25:43,440 --> 00:25:46,950
able to say like hey we have stuff from

00:25:44,970 --> 00:25:48,240
two years ago it just doesn't work

00:25:46,950 --> 00:25:49,350
anymore but there's no way for us to

00:25:48,240 --> 00:25:52,049
take it off because we don't know who is

00:25:49,350 --> 00:25:54,120
going to impact and now with Apollo you

00:25:52,049 --> 00:25:58,140
do know you can feel really safe really

00:25:54,120 --> 00:25:59,309
comfortable with making this changes so

00:25:58,140 --> 00:26:00,690
there's three new things we're kind of

00:25:59,309 --> 00:26:02,309
announcing rolling out so the initial

00:26:00,690 --> 00:26:04,919
launch of the platform today there's the

00:26:02,309 --> 00:26:06,690
apollo vs code editor extension there's

00:26:04,919 --> 00:26:08,429
starting with vs code we're bringing

00:26:06,690 --> 00:26:09,810
more later this year I personally use

00:26:08,429 --> 00:26:11,700
them so we working on

00:26:09,810 --> 00:26:16,110
later this week hopefully so any of them

00:26:11,700 --> 00:26:17,880
users in the crowd hey my people we also

00:26:16,110 --> 00:26:19,350
have github integration in this schema

00:26:17,880 --> 00:26:21,750
validation so the schema validation

00:26:19,350 --> 00:26:22,920
works on your CI environment so if you

00:26:21,750 --> 00:26:24,450
don't use github you'll still get these

00:26:22,920 --> 00:26:26,010
nice exit code just don't get the link

00:26:24,450 --> 00:26:27,420
to engine we can go and view it but if

00:26:26,010 --> 00:26:28,530
you do use github and you get even a

00:26:27,420 --> 00:26:30,390
better experience where it's right

00:26:28,530 --> 00:26:32,550
involved and right in line and your pull

00:26:30,390 --> 00:26:33,720
request support for things like get lab

00:26:32,550 --> 00:26:35,190
and bitbucket are in the works so that

00:26:33,720 --> 00:26:36,720
no matter where you maintain your source

00:26:35,190 --> 00:26:38,310
code we can be there to help you make

00:26:36,720 --> 00:26:41,010
sure that the changes you're making are

00:26:38,310 --> 00:26:42,660
the right changes and then there's also

00:26:41,010 --> 00:26:44,280
the operation registry and client

00:26:42,660 --> 00:26:46,110
identity so starting today you can

00:26:44,280 --> 00:26:47,730
actually know who's using your graph how

00:26:46,110 --> 00:26:49,470
they're using it what fields what

00:26:47,730 --> 00:26:51,210
versions and you can support those

00:26:49,470 --> 00:26:55,860
things indefinitely as long as you need

00:26:51,210 --> 00:26:57,090
to the reason we do this is because we

00:26:55,860 --> 00:26:59,130
really think there's a magical moment

00:26:57,090 --> 00:27:02,250
here for teams we think there's a point

00:26:59,130 --> 00:27:03,930
where you're no longer in this constant

00:27:02,250 --> 00:27:06,120
state of conflict or flux about what is

00:27:03,930 --> 00:27:09,060
happening with my product what is

00:27:06,120 --> 00:27:10,470
support view as a Netflix title versus

00:27:09,060 --> 00:27:13,350
the engineering team that's building out

00:27:10,470 --> 00:27:15,090
Netflix com what you want to be able to

00:27:13,350 --> 00:27:17,250
have is just one graph for your company

00:27:15,090 --> 00:27:19,560
and with that idea this idea of a common

00:27:17,250 --> 00:27:21,630
language teams can work together better

00:27:19,560 --> 00:27:23,040
they can work together faster and they

00:27:21,630 --> 00:27:25,320
can build better things for their end

00:27:23,040 --> 00:27:27,390
users so we really believe at Apollo

00:27:25,320 --> 00:27:29,610
that craft well and this platform we're

00:27:27,390 --> 00:27:30,960
building is going to empower you to be

00:27:29,610 --> 00:27:32,550
able to do that better at your company

00:27:30,960 --> 00:27:34,230
and build better products for your users

00:27:32,550 --> 00:27:36,510
and we want to make sure that you can do

00:27:34,230 --> 00:27:39,150
craft kill right at any scale from

00:27:36,510 --> 00:27:42,360
starting with that tutorial to a team of

00:27:39,150 --> 00:27:44,100
an enterprise team of like 30 different

00:27:42,360 --> 00:27:45,990
org or teams within the organization

00:27:44,100 --> 00:27:47,070
that coordination that skill set we

00:27:45,990 --> 00:27:49,320
don't want there to be any drop-off

00:27:47,070 --> 00:27:51,120
between hey I did this this weekend it

00:27:49,320 --> 00:27:53,640
was really exciting it's really cool too

00:27:51,120 --> 00:27:55,740
we have five million users hitting our

00:27:53,640 --> 00:27:57,210
app every day how do we maintain how we

00:27:55,740 --> 00:28:00,780
control that Apollo wants to be there

00:27:57,210 --> 00:28:02,490
for you every step of the way so I

00:28:00,780 --> 00:28:04,170
really appreciate the time to be able to

00:28:02,490 --> 00:28:05,490
talk to you here I've had the honor of

00:28:04,170 --> 00:28:07,460
working with a number of you over the

00:28:05,490 --> 00:28:09,840
past two years I hope that I'll get the

00:28:07,460 --> 00:28:11,640
opportunity to work with you going

00:28:09,840 --> 00:28:13,170
forward one of the things that my team

00:28:11,640 --> 00:28:15,060
does at Apollo is we work with companies

00:28:13,170 --> 00:28:16,800
who are adopting graphs well we've had

00:28:15,060 --> 00:28:20,370
the benefit of working with companies

00:28:16,800 --> 00:28:22,500
like Airbnb or brand heroes or Survey

00:28:20,370 --> 00:28:23,850
Monkey or a number of teams who are

00:28:22,500 --> 00:28:25,380
adopting graph QL and there are the ones

00:28:23,850 --> 00:28:27,240
who helped to build these features these

00:28:25,380 --> 00:28:28,470
weren't like ivory tower things that we

00:28:27,240 --> 00:28:30,780
said this would be great for graph QL

00:28:28,470 --> 00:28:33,240
this was hey we deployed a bug into our

00:28:30,780 --> 00:28:34,860
production app ah what do we do how can

00:28:33,240 --> 00:28:35,970
we fix that then we come back and said

00:28:34,860 --> 00:28:37,260
you know what we could probably make

00:28:35,970 --> 00:28:39,179
that better we can work with you to make

00:28:37,260 --> 00:28:40,770
that safer so if your company is

00:28:39,179 --> 00:28:42,360
investing in graph QL and it's making

00:28:40,770 --> 00:28:43,770
that adoption we would love the

00:28:42,360 --> 00:28:45,809
opportunity to talk with you and to work

00:28:43,770 --> 00:28:47,010
with you so we can build what you need

00:28:45,809 --> 00:28:47,789
to feel comfortable going into

00:28:47,010 --> 00:28:49,620
production and maintaining your

00:28:47,789 --> 00:28:51,020
application so I appreciate the time

00:28:49,620 --> 00:28:56,859
thank you

00:28:51,020 --> 00:28:56,859

YouTube URL: https://www.youtube.com/watch?v=pmcjl4WCDwY


