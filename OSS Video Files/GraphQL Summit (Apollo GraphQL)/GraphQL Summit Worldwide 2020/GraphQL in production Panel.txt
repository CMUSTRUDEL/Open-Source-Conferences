Title: GraphQL in production Panel
Publication date: 2020-08-11
Playlist: GraphQL Summit Worldwide 2020
Description: 
	Featuring: Matt DeBergalis, CTO at Apollo (Moderator)
Marc-Andre Giroux, Senior Platform Engineer at GitHub
Andy Vajda, Tech Lead at American Airlines
Mike Byrnes, Principal Software Engineer at Priceline
Shruti Kapoor, Senior Software Engineer at PayPal
Captions: 
	00:00:00,050 --> 00:00:03,409
[Music]

00:00:06,080 --> 00:00:10,639
all right welcome everyone to our

00:00:07,839 --> 00:00:12,160
graphql and production panel uh my name

00:00:10,639 --> 00:00:15,200
is matt debergalas i'm

00:00:12,160 --> 00:00:17,199
founder and cto of apollo and we're

00:00:15,200 --> 00:00:18,880
really excited to have had a chance to

00:00:17,199 --> 00:00:20,640
have this conversation last week and

00:00:18,880 --> 00:00:22,960
again this week

00:00:20,640 --> 00:00:24,320
a lot of it's been about some really

00:00:22,960 --> 00:00:26,960
interesting questions about

00:00:24,320 --> 00:00:27,920
the technology uh we just saw the talk

00:00:26,960 --> 00:00:29,279
from ashi on

00:00:27,920 --> 00:00:31,199
the future of federation we've been

00:00:29,279 --> 00:00:32,079
talking about caching and performance

00:00:31,199 --> 00:00:35,200
and security

00:00:32,079 --> 00:00:35,920
different languages what i was hoping to

00:00:35,200 --> 00:00:38,480
do

00:00:35,920 --> 00:00:39,920
with this conversation is bring together

00:00:38,480 --> 00:00:42,640
four experts

00:00:39,920 --> 00:00:43,520
that have put all those pieces together

00:00:42,640 --> 00:00:45,440
and

00:00:43,520 --> 00:00:46,559
as you'll see in four very different

00:00:45,440 --> 00:00:49,520
settings

00:00:46,559 --> 00:00:50,160
to roll out a significant graphql api

00:00:49,520 --> 00:00:53,840
for their

00:00:50,160 --> 00:00:56,840
organizations at scale and behind some

00:00:53,840 --> 00:00:59,199
really important business critical

00:00:56,840 --> 00:01:00,879
software and so i wanted to welcome

00:00:59,199 --> 00:01:02,719
our four panelists here and have a

00:01:00,879 --> 00:01:05,360
conversation about that

00:01:02,719 --> 00:01:06,640
uh we've got uh shruti kapoor from

00:01:05,360 --> 00:01:11,119
paypal

00:01:06,640 --> 00:01:14,000
we've got uh mike burns from priceline

00:01:11,119 --> 00:01:16,640
and andy vaja i hope i pronounced that

00:01:14,000 --> 00:01:19,920
right forgive me from american airlines

00:01:16,640 --> 00:01:21,840
and marc-andre giro of github

00:01:19,920 --> 00:01:26,320
so welcome all four of you and thanks

00:01:21,840 --> 00:01:28,320
for taking the time to join us

00:01:26,320 --> 00:01:30,000
mark maybe i can start with you uh you

00:01:28,320 --> 00:01:33,040
literally wrote the book on

00:01:30,000 --> 00:01:34,079
production graphql and and just to start

00:01:33,040 --> 00:01:37,360
us off

00:01:34,079 --> 00:01:40,240
uh what's your

00:01:37,360 --> 00:01:41,360
what's your advice on teams that are

00:01:40,240 --> 00:01:43,360
going down this path

00:01:41,360 --> 00:01:45,119
what have you learned that you'd want to

00:01:43,360 --> 00:01:46,159
communicate to anyone who's maybe at the

00:01:45,119 --> 00:01:48,000
point where

00:01:46,159 --> 00:01:49,600
they've got a first graphql investment

00:01:48,000 --> 00:01:52,399
up and running they probably have a lot

00:01:49,600 --> 00:01:53,759
of questions a lot of them have been

00:01:52,399 --> 00:01:55,600
discussed here in the conference but

00:01:53,759 --> 00:01:56,079
more broadly what's next and what would

00:01:55,600 --> 00:01:59,439
you

00:01:56,079 --> 00:02:01,360
uh point them toward right i think

00:01:59,439 --> 00:02:02,799
the the first thing i will say start

00:02:01,360 --> 00:02:06,799
slow um

00:02:02,799 --> 00:02:10,319
it's definitely a big investment and

00:02:06,799 --> 00:02:13,520
going all in without the proper tooling

00:02:10,319 --> 00:02:15,520
and developer experience and visibility

00:02:13,520 --> 00:02:18,319
into what's happening in production

00:02:15,520 --> 00:02:20,080
um it's it's quite a challenge it has

00:02:18,319 --> 00:02:22,640
huge benefits that we

00:02:20,080 --> 00:02:23,599
talk a lot about during conference and

00:02:22,640 --> 00:02:26,000
we see a lot but

00:02:23,599 --> 00:02:28,480
i would definitely be saying start slow

00:02:26,000 --> 00:02:31,519
and invest in proper tooling

00:02:28,480 --> 00:02:33,200
invest especially in visibility into

00:02:31,519 --> 00:02:35,200
what's happening during execution of

00:02:33,200 --> 00:02:38,400
graphql queries

00:02:35,200 --> 00:02:40,480
so if you have a good a good way to see

00:02:38,400 --> 00:02:41,519
what happens when that query hits your

00:02:40,480 --> 00:02:43,360
servers what

00:02:41,519 --> 00:02:45,120
downstream services are getting hit what

00:02:43,360 --> 00:02:48,080
data sources are getting hit

00:02:45,120 --> 00:02:50,400
in what ways this has been the most

00:02:48,080 --> 00:02:53,200
challenging aspect i've seen so far

00:02:50,400 --> 00:02:55,599
and also the one that's solved the least

00:02:53,200 --> 00:02:57,120
i feel

00:02:55,599 --> 00:02:58,720
there are solutions to monitoring

00:02:57,120 --> 00:03:01,360
resolver timings

00:02:58,720 --> 00:03:03,920
uh measuring timings in general but

00:03:01,360 --> 00:03:04,720
having like a complete visibility and

00:03:03,920 --> 00:03:06,560
having

00:03:04,720 --> 00:03:08,560
that peace of mind that you know if a

00:03:06,560 --> 00:03:10,159
query is going slow you know why

00:03:08,560 --> 00:03:12,800
has been the most crucial thing i've

00:03:10,159 --> 00:03:12,800
seen so far

00:03:14,560 --> 00:03:18,560
and i think in your case with excuse me

00:03:16,800 --> 00:03:21,200
with github there's a

00:03:18,560 --> 00:03:22,560
um such a prominent public api and for

00:03:21,200 --> 00:03:23,440
those who don't know marc andre was also

00:03:22,560 --> 00:03:25,120
at

00:03:23,440 --> 00:03:27,040
shopify where there's another prominent

00:03:25,120 --> 00:03:30,080
public graphql api so

00:03:27,040 --> 00:03:33,280
maybe one angle on this is

00:03:30,080 --> 00:03:36,959
to ask and i'll start with you and then

00:03:33,280 --> 00:03:39,599
um go around here to what degree

00:03:36,959 --> 00:03:42,319
was this planned out and was there a a

00:03:39,599 --> 00:03:44,159
concept of how that may all tie together

00:03:42,319 --> 00:03:46,239
and to what degree was this more of a

00:03:44,159 --> 00:03:48,400
bottom-up or an agile

00:03:46,239 --> 00:03:50,080
one thing at a time approach i'm curious

00:03:48,400 --> 00:03:52,159
how those two fit together in your

00:03:50,080 --> 00:03:54,959
experience

00:03:52,159 --> 00:03:56,080
right um for me especially at github i

00:03:54,959 --> 00:03:58,159
came a bit after this

00:03:56,080 --> 00:04:00,720
these kind of initial decisions to go

00:03:58,159 --> 00:04:02,879
with graphql is and i think the reasons

00:04:00,720 --> 00:04:04,239
why we use graphql have evolved as well

00:04:02,879 --> 00:04:07,519
over time

00:04:04,239 --> 00:04:07,920
uh which is uh i see that often a lot

00:04:07,519 --> 00:04:10,640
too

00:04:07,920 --> 00:04:12,319
at first people use graphql for uh for

00:04:10,640 --> 00:04:13,120
for almost everything for us it's been

00:04:12,319 --> 00:04:17,199
kind of like

00:04:13,120 --> 00:04:19,680
more and more targeted as we go on um we

00:04:17,199 --> 00:04:20,400
having a public graphql api makes like

00:04:19,680 --> 00:04:21,840
all the

00:04:20,400 --> 00:04:24,160
the hard things about graphql even

00:04:21,840 --> 00:04:25,520
harder but all the beautiful things

00:04:24,160 --> 00:04:27,280
about graphql

00:04:25,520 --> 00:04:29,280
are really beautiful in the in terms of

00:04:27,280 --> 00:04:31,120
public api as well

00:04:29,280 --> 00:04:33,680
our integrators have been asking for

00:04:31,120 --> 00:04:34,639
ways to customize our rest endpoints for

00:04:33,680 --> 00:04:37,040
years

00:04:34,639 --> 00:04:39,520
um and with graphql we can offer that so

00:04:37,040 --> 00:04:42,880
well but on the other side

00:04:39,520 --> 00:04:44,800
all these performance visibility and

00:04:42,880 --> 00:04:48,080
complexity of our servers

00:04:44,800 --> 00:04:51,360
also uh is quite a challenge so yeah

00:04:48,080 --> 00:04:53,759
for us the the public api part is

00:04:51,360 --> 00:04:55,040
is awesome to give to our clients and

00:04:53,759 --> 00:04:56,960
just yeah there's

00:04:55,040 --> 00:04:59,199
things to watch out for which we we can

00:04:56,960 --> 00:05:02,400
probably talk about once we

00:04:59,199 --> 00:05:04,720
see what others have to say yeah

00:05:02,400 --> 00:05:06,160
we can circle back to public apis uh

00:05:04,720 --> 00:05:09,280
toward the end

00:05:06,160 --> 00:05:10,639
trudy at paypal my understanding is

00:05:09,280 --> 00:05:11,600
there's dozens of teams that have

00:05:10,639 --> 00:05:13,360
adopted this

00:05:11,600 --> 00:05:15,199
and i wonder if you might speak about

00:05:13,360 --> 00:05:18,320
what that journey's been like and

00:05:15,199 --> 00:05:18,960
how it's spread and what the the path

00:05:18,320 --> 00:05:20,880
from

00:05:18,960 --> 00:05:22,479
um the beginning to where you are now

00:05:20,880 --> 00:05:24,960
has been like

00:05:22,479 --> 00:05:27,280
yeah so when we started uh when i

00:05:24,960 --> 00:05:29,840
actually started with graphql at paypal

00:05:27,280 --> 00:05:31,919
uh we only had a handful of teams that

00:05:29,840 --> 00:05:32,560
were using graphql there was team that

00:05:31,919 --> 00:05:34,320
was

00:05:32,560 --> 00:05:36,479
pioneering the use of craft keyword at

00:05:34,320 --> 00:05:39,680
paypal and that kind of became like

00:05:36,479 --> 00:05:41,600
our mentor team to go ask for help

00:05:39,680 --> 00:05:43,440
and that and that's kind of how our

00:05:41,600 --> 00:05:45,520
journey started so there was one team

00:05:43,440 --> 00:05:47,520
that started experimenting with graphql

00:05:45,520 --> 00:05:49,600
figuring out what needs to be done

00:05:47,520 --> 00:05:51,600
um and then other teams at paypal

00:05:49,600 --> 00:05:52,160
started adopting graphql slowly and

00:05:51,600 --> 00:05:54,880
that's

00:05:52,160 --> 00:05:56,400
kind of where we are right now uh a lot

00:05:54,880 --> 00:05:58,560
more teams are starting to adopt now

00:05:56,400 --> 00:06:02,080
there's a lot more tooling at paypal now

00:05:58,560 --> 00:06:03,039
for graphql um and the journey has been

00:06:02,080 --> 00:06:05,199
that

00:06:03,039 --> 00:06:06,880
slow like mark was playing like slowly

00:06:05,199 --> 00:06:08,319
teams will start adopting we'll figure

00:06:06,880 --> 00:06:09,919
out what other hurdles

00:06:08,319 --> 00:06:12,319
and then we'll build tooling around it

00:06:09,919 --> 00:06:14,800
to kind of uh solve that

00:06:12,319 --> 00:06:15,759
um one thing that has helped us in our

00:06:14,800 --> 00:06:18,560
journey so far

00:06:15,759 --> 00:06:21,120
is having like sample apps so the first

00:06:18,560 --> 00:06:22,479
few teams that built craft qr the client

00:06:21,120 --> 00:06:23,120
side and the server side they built

00:06:22,479 --> 00:06:25,680
sample

00:06:23,120 --> 00:06:27,680
client side and server side apps so now

00:06:25,680 --> 00:06:28,800
any new team that wants to adopt graphql

00:06:27,680 --> 00:06:30,240
will kind of point them to that

00:06:28,800 --> 00:06:35,600
direction

00:06:30,240 --> 00:06:36,639
and that has been really helpful

00:06:35,600 --> 00:06:38,960
mike what's your experience bennett

00:06:36,639 --> 00:06:41,199
priceline so

00:06:38,960 --> 00:06:43,600
at uh at priceline we kind of started i

00:06:41,199 --> 00:06:45,840
guess a grassroots movement when it

00:06:43,600 --> 00:06:46,639
graphql was first announced we had one

00:06:45,840 --> 00:06:48,000
team that

00:06:46,639 --> 00:06:49,919
thought it was really cool and could

00:06:48,000 --> 00:06:51,280
help us out so they uh kind of took it

00:06:49,919 --> 00:06:53,840
on as a pet project and

00:06:51,280 --> 00:06:54,800
implemented it uh and then we got other

00:06:53,840 --> 00:06:56,479
teams looking at it

00:06:54,800 --> 00:06:58,560
hey this is really cool and this could

00:06:56,479 --> 00:06:59,919
help us out so it kind of snowballed

00:06:58,560 --> 00:07:02,400
from there until we got

00:06:59,919 --> 00:07:03,199
all of our front end teams implemented

00:07:02,400 --> 00:07:06,160
their own uh

00:07:03,199 --> 00:07:08,240
their own graphical services as kind of

00:07:06,160 --> 00:07:11,680
translation layers or uh back-end

00:07:08,240 --> 00:07:13,360
front-end type implementations um

00:07:11,680 --> 00:07:14,720
so it got to the point that we had you

00:07:13,360 --> 00:07:16,639
know all of our teams

00:07:14,720 --> 00:07:18,319
had their own graph and we were sharing

00:07:16,639 --> 00:07:20,479
some knowledge but it was uh

00:07:18,319 --> 00:07:21,919
kind of fragmented um everyone kind of

00:07:20,479 --> 00:07:23,840
managed their own thing

00:07:21,919 --> 00:07:25,440
uh with the introduction of apollo

00:07:23,840 --> 00:07:26,960
federation and the gateway we're

00:07:25,440 --> 00:07:29,520
starting to come together and we've got

00:07:26,960 --> 00:07:31,280
a center for graphql knowledge

00:07:29,520 --> 00:07:32,960
and we're going to start to merge some

00:07:31,280 --> 00:07:36,400
of these graphs and reduce some of the

00:07:32,960 --> 00:07:36,400
duplications that we've got there

00:07:38,080 --> 00:07:41,360
and andy i think for american there's

00:07:40,319 --> 00:07:44,800
been

00:07:41,360 --> 00:07:47,440
maybe a bit more of a multi-team

00:07:44,800 --> 00:07:50,160
coordination effort from the beginning

00:07:47,440 --> 00:07:51,520
i wonder if you can speak about how how

00:07:50,160 --> 00:07:52,960
american this has been

00:07:51,520 --> 00:07:55,360
different anyway from from what we've

00:07:52,960 --> 00:07:57,840
heard so far

00:07:55,360 --> 00:07:58,800
um actually a lot of the same patterns

00:07:57,840 --> 00:08:01,759
and

00:07:58,800 --> 00:08:03,599
and issues have come up um fragmented

00:08:01,759 --> 00:08:05,520
initially

00:08:03,599 --> 00:08:06,879
federation has kind of brought all that

00:08:05,520 --> 00:08:09,919
together

00:08:06,879 --> 00:08:12,400
um so my team at this point is

00:08:09,919 --> 00:08:13,360
leading the the charge in federation and

00:08:12,400 --> 00:08:16,160
it's a

00:08:13,360 --> 00:08:18,080
really a snowball type situation right

00:08:16,160 --> 00:08:18,560
now where it started off slow and it's

00:08:18,080 --> 00:08:21,599
just

00:08:18,560 --> 00:08:23,360
going downhill full steam with teams

00:08:21,599 --> 00:08:26,720
wanting to be onboarded and

00:08:23,360 --> 00:08:27,919
take part in it so exciting times lots

00:08:26,720 --> 00:08:31,599
of work to do

00:08:27,919 --> 00:08:34,719
but we have a very uh fragmented

00:08:31,599 --> 00:08:36,080
um siloed structure in

00:08:34,719 --> 00:08:38,399
you know every team is doing their own

00:08:36,080 --> 00:08:38,959
thing and we're trying to change that

00:08:38,399 --> 00:08:41,120
culture

00:08:38,959 --> 00:08:43,440
so that's that's really been the

00:08:41,120 --> 00:08:43,440
challenge

00:08:43,839 --> 00:08:47,600
i'd love to spend some time on that

00:08:45,440 --> 00:08:48,880
topic and how it spreads from team to

00:08:47,600 --> 00:08:51,279
team

00:08:48,880 --> 00:08:52,959
and and i'll just say um and and those

00:08:51,279 --> 00:08:54,640
of you who just heard ashi's talk will

00:08:52,959 --> 00:08:56,880
have picked up on some of this

00:08:54,640 --> 00:08:58,399
in her comments too when we first

00:08:56,880 --> 00:09:00,160
started thinking about federation we

00:08:58,399 --> 00:09:03,519
were really thinking about more of a

00:09:00,160 --> 00:09:05,839
maybe a top-down or a coordinated design

00:09:03,519 --> 00:09:07,680
and what we're finding is i think

00:09:05,839 --> 00:09:08,000
marc-andre's guidance is exactly what

00:09:07,680 --> 00:09:10,640
we've

00:09:08,000 --> 00:09:12,560
seen many teams doing it's been our own

00:09:10,640 --> 00:09:13,360
journey we have a graphical api to no

00:09:12,560 --> 00:09:16,080
one's surprise

00:09:13,360 --> 00:09:17,040
and it ends up being a lot more agile

00:09:16,080 --> 00:09:18,800
and ad hoc

00:09:17,040 --> 00:09:20,240
and what we're finding is a lot of teams

00:09:18,800 --> 00:09:21,600
that are adopting federation are doing

00:09:20,240 --> 00:09:23,360
it

00:09:21,600 --> 00:09:25,040
not so much from first principles but to

00:09:23,360 --> 00:09:26,640
bring together a lot of what's already

00:09:25,040 --> 00:09:28,720
emerged

00:09:26,640 --> 00:09:30,560
and we're interested in tools and and

00:09:28,720 --> 00:09:31,920
extensions to that concept that help

00:09:30,560 --> 00:09:34,399
teams

00:09:31,920 --> 00:09:36,080
uh come at this more from the the bottom

00:09:34,399 --> 00:09:38,880
up perspective

00:09:36,080 --> 00:09:41,120
so let's talk about how it spreads and

00:09:38,880 --> 00:09:44,720
and truly maybe i can ask you

00:09:41,120 --> 00:09:46,240
you know you've got some graphql you see

00:09:44,720 --> 00:09:47,600
adjacent teams that are interested in

00:09:46,240 --> 00:09:48,800
using the same thing you talked about

00:09:47,600 --> 00:09:51,839
example apps

00:09:48,800 --> 00:09:54,320
what have you found

00:09:51,839 --> 00:09:56,160
works best to help teams or what have

00:09:54,320 --> 00:09:56,959
you found would help if there were more

00:09:56,160 --> 00:10:00,160
of

00:09:56,959 --> 00:10:00,160
to accelerate that spread

00:10:00,320 --> 00:10:04,480
yeah so i think for us the biggest thing

00:10:03,040 --> 00:10:07,040
that helps is talking about

00:10:04,480 --> 00:10:08,079
numbers which i think works for any

00:10:07,040 --> 00:10:11,120
enterprise

00:10:08,079 --> 00:10:13,360
um so for example um at paypal we have a

00:10:11,120 --> 00:10:15,600
bunch of rest apis right so

00:10:13,360 --> 00:10:16,720
um a team that is integrating with like

00:10:15,600 --> 00:10:19,040
six or seven different

00:10:16,720 --> 00:10:20,720
rest apis needs to go and call these

00:10:19,040 --> 00:10:21,600
apis every time they need to make a

00:10:20,720 --> 00:10:24,480
query

00:10:21,600 --> 00:10:26,959
um or or get some data and then we talk

00:10:24,480 --> 00:10:28,399
about the rest payload that we get so

00:10:26,959 --> 00:10:30,000
all of the data that we're getting out

00:10:28,399 --> 00:10:30,880
of that we're only picking up a few

00:10:30,000 --> 00:10:32,079
fields

00:10:30,880 --> 00:10:34,240
and how much of that data are we

00:10:32,079 --> 00:10:35,920
throwing out so for us what has helped

00:10:34,240 --> 00:10:37,760
us is like showing those numbers like

00:10:35,920 --> 00:10:38,240
showing this data that has been throwing

00:10:37,760 --> 00:10:40,240
out

00:10:38,240 --> 00:10:41,920
and how graphql has been helping us in

00:10:40,240 --> 00:10:42,640
kind of like cleaning up that data that

00:10:41,920 --> 00:10:45,519
we send to

00:10:42,640 --> 00:10:47,279
our uh front-end applications that has

00:10:45,519 --> 00:10:49,200
kind of been the driving factor we do a

00:10:47,279 --> 00:10:51,200
lot of tech talks around it showing

00:10:49,200 --> 00:10:54,000
our fellow engineers how that's been

00:10:51,200 --> 00:10:56,320
working how easy it is to adopt graphql

00:10:54,000 --> 00:10:58,480
um how you establish a contract and then

00:10:56,320 --> 00:11:01,519
the front end and backend teams kind of

00:10:58,480 --> 00:11:02,240
work off independently um that's how

00:11:01,519 --> 00:11:06,959
we've been

00:11:02,240 --> 00:11:06,959
uh motivating our teams to get on board

00:11:08,640 --> 00:11:11,839
let me just ask everybody to jump in

00:11:10,000 --> 00:11:14,240
here what other what other thoughts or

00:11:11,839 --> 00:11:16,480
experiences people had

00:11:14,240 --> 00:11:17,360
i i can definitely feel the the snowball

00:11:16,480 --> 00:11:19,600
effect

00:11:17,360 --> 00:11:20,640
andy was talking about here especially

00:11:19,600 --> 00:11:22,480
for us if team

00:11:20,640 --> 00:11:24,079
if teams want their their new feature to

00:11:22,480 --> 00:11:26,880
be exposed in

00:11:24,079 --> 00:11:28,320
github's public graph well the more

00:11:26,880 --> 00:11:29,519
feature there are there the bigger our

00:11:28,320 --> 00:11:31,920
graph becomes

00:11:29,519 --> 00:11:33,120
um it it really is that snowball effect

00:11:31,920 --> 00:11:36,000
and i think

00:11:33,120 --> 00:11:37,440
on on the technical side of things what

00:11:36,000 --> 00:11:40,240
we've noticed is

00:11:37,440 --> 00:11:42,480
if you if you make the developer

00:11:40,240 --> 00:11:44,720
experience of adding things to the graph

00:11:42,480 --> 00:11:46,640
great and if you make it in the right

00:11:44,720 --> 00:11:49,600
abstractions that developers are used to

00:11:46,640 --> 00:11:52,720
it's going to be way easier than coming

00:11:49,600 --> 00:11:53,440
all in with maybe graphql concerns that

00:11:52,720 --> 00:11:55,200
they've never

00:11:53,440 --> 00:11:56,880
seen before and trying to sell them on

00:11:55,200 --> 00:11:58,880
graphql for us it was kind of a

00:11:56,880 --> 00:12:00,399
we took a different approach where we we

00:11:58,880 --> 00:12:02,560
kept it to

00:12:00,399 --> 00:12:04,480
abstractions that were used to on the

00:12:02,560 --> 00:12:05,200
ruby side of things like active record

00:12:04,480 --> 00:12:07,360
and we

00:12:05,200 --> 00:12:08,560
we built our graph in ways that they

00:12:07,360 --> 00:12:10,079
were used

00:12:08,560 --> 00:12:12,480
they were used to for other things like

00:12:10,079 --> 00:12:13,200
building uh database records for example

00:12:12,480 --> 00:12:14,480
so

00:12:13,200 --> 00:12:16,240
um i think building the right

00:12:14,480 --> 00:12:18,480
abstractions and having

00:12:16,240 --> 00:12:19,920
a great developer experience will just

00:12:18,480 --> 00:12:22,320
make that so much easier

00:12:19,920 --> 00:12:24,079
than coming up with a bunch of new ways

00:12:22,320 --> 00:12:25,760
of doing things of course there's there

00:12:24,079 --> 00:12:26,399
isn't that adaptation that needs to be

00:12:25,760 --> 00:12:28,639
made but

00:12:26,399 --> 00:12:30,320
we've tried making that transition as

00:12:28,639 --> 00:12:33,360
smooth as possible from what

00:12:30,320 --> 00:12:33,360
developers were used to

00:12:34,560 --> 00:12:37,680
i would echo that sentiment we've done a

00:12:36,480 --> 00:12:40,240
lot of work to

00:12:37,680 --> 00:12:41,839
make the developer experience better

00:12:40,240 --> 00:12:43,440
especially trying to standardize some of

00:12:41,839 --> 00:12:46,160
the way that we've been implementing

00:12:43,440 --> 00:12:46,560
fql services um like i said before we

00:12:46,160 --> 00:12:49,680
were

00:12:46,560 --> 00:12:50,240
very fragmented so it took a little bit

00:12:49,680 --> 00:12:51,920
of

00:12:50,240 --> 00:12:53,279
education to go from one graph to

00:12:51,920 --> 00:12:55,360
another or

00:12:53,279 --> 00:12:56,639
make changes in one service or make

00:12:55,360 --> 00:12:59,839
changes in another

00:12:56,639 --> 00:13:00,160
um another thing we've done a lot of is

00:12:59,839 --> 00:13:03,680
just

00:13:00,160 --> 00:13:05,760
graphql education um we haven't

00:13:03,680 --> 00:13:07,920
don't have a lot of rfql experts we have

00:13:05,760 --> 00:13:09,519
people that have worked on graphs

00:13:07,920 --> 00:13:11,519
and know the way that their service

00:13:09,519 --> 00:13:14,160
works but there are a lot of people also

00:13:11,519 --> 00:13:16,320
that just know of graphql but not of

00:13:14,160 --> 00:13:17,519
all the features of the power that we

00:13:16,320 --> 00:13:19,360
get from graphql

00:13:17,519 --> 00:13:21,600
especially from federation of the

00:13:19,360 --> 00:13:23,600
gateway so we've put together some

00:13:21,600 --> 00:13:24,800
comprehensive education programs that

00:13:23,600 --> 00:13:27,040
we've rolled out to

00:13:24,800 --> 00:13:29,920
both development and product teams to

00:13:27,040 --> 00:13:29,920
educate everybody

00:13:31,040 --> 00:13:34,079
i feel like i'm just going to repeat

00:13:32,880 --> 00:13:37,040
what everybody else is saying

00:13:34,079 --> 00:13:38,320
um we're doing the same things we're

00:13:37,040 --> 00:13:41,760
we're working on training

00:13:38,320 --> 00:13:43,360
for onboarding teams we're building uh

00:13:41,760 --> 00:13:46,639
terraform scripts to

00:13:43,360 --> 00:13:49,120
onboard teams into uh

00:13:46,639 --> 00:13:49,839
cloud deployments because that's also uh

00:13:49,120 --> 00:13:53,519
new for

00:13:49,839 --> 00:13:56,800
our organization um the

00:13:53,519 --> 00:13:59,839
evangelizing of graphql we have a

00:13:56,800 --> 00:14:03,279
large polyglot ecosystem that's very

00:13:59,839 --> 00:14:04,639
uh segmented so trying to make sure that

00:14:03,279 --> 00:14:08,000
everybody's

00:14:04,639 --> 00:14:09,839
desires are met as far as capabilities

00:14:08,000 --> 00:14:11,120
you know some teams want to work in java

00:14:09,839 --> 00:14:13,199
someone work in

00:14:11,120 --> 00:14:14,720
net others in node so we have to be able

00:14:13,199 --> 00:14:18,399
to support all that

00:14:14,720 --> 00:14:22,880
um and making that developer experience

00:14:18,399 --> 00:14:22,880
seamless and painless is really our goal

00:14:23,760 --> 00:14:27,360
and maybe i can turn it around what

00:14:25,600 --> 00:14:30,160
hasn't worked or any any

00:14:27,360 --> 00:14:32,560
cautionary tales or missteps that we

00:14:30,160 --> 00:14:35,120
could share for

00:14:32,560 --> 00:14:35,120
those watching

00:14:37,440 --> 00:14:41,040
i would say one of the biggest things

00:14:39,519 --> 00:14:43,360
that

00:14:41,040 --> 00:14:44,079
we want to look at is scheme of design

00:14:43,360 --> 00:14:46,240
um

00:14:44,079 --> 00:14:47,199
so thinking about what you what data you

00:14:46,240 --> 00:14:49,440
actually want

00:14:47,199 --> 00:14:51,040
before implementing a schema i would

00:14:49,440 --> 00:14:53,040
think is very helpful

00:14:51,040 --> 00:14:55,600
we find ourselves in a lot of positions

00:14:53,040 --> 00:14:56,639
where we uh just graft existing rest

00:14:55,600 --> 00:14:58,560
endpoints

00:14:56,639 --> 00:15:00,720
so the data doesn't really look like

00:14:58,560 --> 00:15:02,480
anything that the front end or

00:15:00,720 --> 00:15:04,079
apps teams may need it just looks like

00:15:02,480 --> 00:15:05,680
the same data that we had before with a

00:15:04,079 --> 00:15:07,440
different way to request it

00:15:05,680 --> 00:15:09,519
um as we've grown we've gotten a little

00:15:07,440 --> 00:15:11,680
better at that in implementing

00:15:09,519 --> 00:15:13,279
oui components and then building the

00:15:11,680 --> 00:15:14,880
schema based on what those components

00:15:13,279 --> 00:15:16,639
need and nothing more

00:15:14,880 --> 00:15:18,399
but i would say if you're just starting

00:15:16,639 --> 00:15:20,800
out think about the schema that you want

00:15:18,399 --> 00:15:20,800
to produce

00:15:23,760 --> 00:15:27,600
for us one of the challenges has been

00:15:26,560 --> 00:15:30,160
error handling

00:15:27,600 --> 00:15:32,880
and mapping the 200 error that we get

00:15:30,160 --> 00:15:36,240
from graphql into something meaningful

00:15:32,880 --> 00:15:38,560
especially because our errors need to be

00:15:36,240 --> 00:15:40,240
are like very minute so we have like for

00:15:38,560 --> 00:15:41,680
400 we might have so many different

00:15:40,240 --> 00:15:43,120
errors that we might be showing for like

00:15:41,680 --> 00:15:45,360
a validation error

00:15:43,120 --> 00:15:47,199
um at paypal we have the specification

00:15:45,360 --> 00:15:49,759
for how we throw errors so kind of

00:15:47,199 --> 00:15:51,920
mapping graphql's 200 errors to

00:15:49,759 --> 00:15:55,839
that specification has been a challenge

00:15:51,920 --> 00:15:55,839
um and we've been working on that

00:15:59,040 --> 00:16:02,560
i can definitely relate oh god the air

00:16:01,199 --> 00:16:03,440
is from sorry do you want to go ahead

00:16:02,560 --> 00:16:06,240
matt

00:16:03,440 --> 00:16:07,360
no no no okay yeah i can definitely

00:16:06,240 --> 00:16:09,839
relate to errors for

00:16:07,360 --> 00:16:11,440
for us is especially going from a public

00:16:09,839 --> 00:16:14,639
api perspective

00:16:11,440 --> 00:16:17,279
um trying to see let's say

00:16:14,639 --> 00:16:17,839
we have a timeout on certain queries to

00:16:17,279 --> 00:16:19,920
kind of

00:16:17,839 --> 00:16:21,680
stop a query if it's taking too long

00:16:19,920 --> 00:16:23,920
trying to see if that

00:16:21,680 --> 00:16:25,759
query was actually let's say malicious

00:16:23,920 --> 00:16:28,320
or just asking for too much data

00:16:25,759 --> 00:16:29,040
or is it our system just too slow kind

00:16:28,320 --> 00:16:31,839
of getting that

00:16:29,040 --> 00:16:33,279
visibility into is something going wrong

00:16:31,839 --> 00:16:36,320
or is the person simply

00:16:33,279 --> 00:16:38,079
asking for too much data and those

00:16:36,320 --> 00:16:40,639
problems like are very different

00:16:38,079 --> 00:16:42,079
and have different consequences so

00:16:40,639 --> 00:16:43,040
definitely getting visibility into

00:16:42,079 --> 00:16:46,079
what's happening

00:16:43,040 --> 00:16:46,079
uh error-wise

00:16:46,800 --> 00:16:51,680
yeah i've read mark's book um so we're

00:16:49,360 --> 00:16:54,399
we're going with the error handling as

00:16:51,680 --> 00:16:56,000
our errors as data concept that seems to

00:16:54,399 --> 00:16:59,279
be working out pretty well

00:16:56,000 --> 00:17:02,720
um i would say that uh

00:16:59,279 --> 00:17:04,160
caching has been a a not a

00:17:02,720 --> 00:17:06,799
just a challenge it's been a challenge

00:17:04,160 --> 00:17:08,799
each microservice presents its own

00:17:06,799 --> 00:17:09,919
needs and requirements so we've been

00:17:08,799 --> 00:17:11,039
spending a lot of time talking about

00:17:09,919 --> 00:17:14,079
caching

00:17:11,039 --> 00:17:14,079
and strategies around that

00:17:15,280 --> 00:17:19,839
what's the the people side of this so

00:17:17,919 --> 00:17:23,280
sometimes i think about

00:17:19,839 --> 00:17:23,839
maybe one of the real special things

00:17:23,280 --> 00:17:26,400
about

00:17:23,839 --> 00:17:28,000
graphql is how it lets multiple teams

00:17:26,400 --> 00:17:29,840
work side by side without

00:17:28,000 --> 00:17:31,679
stepping on each other's toes quite as

00:17:29,840 --> 00:17:33,440
much where

00:17:31,679 --> 00:17:35,039
you know i own my piece of the schema

00:17:33,440 --> 00:17:38,160
you and your piece of the schema are you

00:17:35,039 --> 00:17:40,160
have your graph and i have my graph and

00:17:38,160 --> 00:17:41,679
the the code isn't so entangled it's

00:17:40,160 --> 00:17:42,559
it's plausible to bring those things

00:17:41,679 --> 00:17:43,840
together

00:17:42,559 --> 00:17:45,600
uh the way you can bring react

00:17:43,840 --> 00:17:46,080
components or docker containers together

00:17:45,600 --> 00:17:48,400
without

00:17:46,080 --> 00:17:49,679
really being inside each other's stuff

00:17:48,400 --> 00:17:52,720
and it makes me

00:17:49,679 --> 00:17:53,600
feel like there's a a people or or a

00:17:52,720 --> 00:17:55,280
social

00:17:53,600 --> 00:17:56,720
impact that this has as it spreads

00:17:55,280 --> 00:17:58,240
across the org

00:17:56,720 --> 00:18:00,000
i know that's a pretty vague topic but

00:17:58,240 --> 00:18:01,679
i'm just curious

00:18:00,000 --> 00:18:03,120
if anyone can talk about what they've

00:18:01,679 --> 00:18:04,880
seen in terms of

00:18:03,120 --> 00:18:06,559
how graphql has changed the way teams

00:18:04,880 --> 00:18:09,120
work together or

00:18:06,559 --> 00:18:10,240
build applications or user experiences

00:18:09,120 --> 00:18:12,799
together that

00:18:10,240 --> 00:18:14,480
you might point at as a thing to watch

00:18:12,799 --> 00:18:16,720
for for for others as they go down this

00:18:14,480 --> 00:18:16,720
path

00:18:20,320 --> 00:18:23,919
i'll go ahead and start i guess um at aa

00:18:23,280 --> 00:18:27,120
we're really

00:18:23,919 --> 00:18:30,320
working on developing a governance uh

00:18:27,120 --> 00:18:33,919
standard and fine-tuning that to handle

00:18:30,320 --> 00:18:34,799
conflict resolution um making sure that

00:18:33,919 --> 00:18:36,480
we're always

00:18:34,799 --> 00:18:38,720
hitting the authoritative source and

00:18:36,480 --> 00:18:40,559
really trying to reduce silos because

00:18:38,720 --> 00:18:42,000
i keep mentioning that but we're very

00:18:40,559 --> 00:18:43,919
segmented and fractured

00:18:42,000 --> 00:18:45,360
and everybody has copies of the same

00:18:43,919 --> 00:18:48,320
data that sort of thing so

00:18:45,360 --> 00:18:49,840
defining who's the owner providence day

00:18:48,320 --> 00:18:53,520
lineage

00:18:49,840 --> 00:18:53,520
and doing that in a structured

00:18:54,240 --> 00:18:58,080
collaborative way so it's been a that's

00:18:57,679 --> 00:18:59,360
been a

00:18:58,080 --> 00:19:01,840
challenge for us but we're working

00:18:59,360 --> 00:19:01,840
towards that

00:19:02,720 --> 00:19:05,919
a lot of the same stuff that we're

00:19:04,240 --> 00:19:07,440
working towards as well trying to get a

00:19:05,919 --> 00:19:10,400
collaboration between

00:19:07,440 --> 00:19:11,600
um product front end back-end developers

00:19:10,400 --> 00:19:13,600
to understand

00:19:11,600 --> 00:19:14,960
the needs of the customer the needs of

00:19:13,600 --> 00:19:17,520
the feature

00:19:14,960 --> 00:19:19,200
and to to build out that way with

00:19:17,520 --> 00:19:21,039
communication so

00:19:19,200 --> 00:19:22,480
well everybody may have their own piece

00:19:21,039 --> 00:19:24,000
of the graph to

00:19:22,480 --> 00:19:26,240
administer or work on we have to

00:19:24,000 --> 00:19:27,840
understand where those pieces are you

00:19:26,240 --> 00:19:29,200
know where each piece of data lies and

00:19:27,840 --> 00:19:31,280
who the actual owner is

00:19:29,200 --> 00:19:32,960
uh and what pieces may just be

00:19:31,280 --> 00:19:34,720
extensions that are needed for

00:19:32,960 --> 00:19:37,039
one offer you know only for this app

00:19:34,720 --> 00:19:39,520
only for this page of the site

00:19:37,039 --> 00:19:40,640
and trying to pull that apart um while

00:19:39,520 --> 00:19:43,280
keeping a

00:19:40,640 --> 00:19:44,480
cohesive definition of what what each

00:19:43,280 --> 00:19:47,039
domain object is and

00:19:44,480 --> 00:19:47,679
who's the owner of it so we've seen a

00:19:47,039 --> 00:19:49,679
lot more

00:19:47,679 --> 00:19:51,200
communication especially with our our

00:19:49,679 --> 00:19:53,840
bigger initiatives that are thinking

00:19:51,200 --> 00:19:53,840
graph first

00:19:54,080 --> 00:19:57,760
and i'm curious just to dive into that

00:19:55,679 --> 00:19:59,840
how do you do that it feels like a new

00:19:57,760 --> 00:20:01,919
kind of discipline how do you decide

00:19:59,840 --> 00:20:03,440
in a world with a bunch of duplicated

00:20:01,919 --> 00:20:03,840
data and silos where that's going to

00:20:03,440 --> 00:20:06,880
live

00:20:03,840 --> 00:20:09,200
and and how that the teams resolve those

00:20:06,880 --> 00:20:09,200
questions

00:20:09,600 --> 00:20:13,280
uh it's it's been a little tough for us

00:20:11,840 --> 00:20:14,880
right now because we have

00:20:13,280 --> 00:20:16,480
so many pieces of data that are

00:20:14,880 --> 00:20:19,039
duplicated across our

00:20:16,480 --> 00:20:21,280
our products we've got hotels flights

00:20:19,039 --> 00:20:23,120
rental cars all on their piece but then

00:20:21,280 --> 00:20:25,760
you know checkout has a copy of those

00:20:23,120 --> 00:20:27,840
and post booking has a copy of those

00:20:25,760 --> 00:20:29,679
so we're we're still working on who's

00:20:27,840 --> 00:20:32,240
the owner um

00:20:29,679 --> 00:20:34,400
and it may come down to you know who

00:20:32,240 --> 00:20:35,679
owns the actual the inventory versus who

00:20:34,400 --> 00:20:38,559
owns the content

00:20:35,679 --> 00:20:38,559
and that kind of stuff

00:20:42,960 --> 00:20:47,200
judy i know i know paypal there's oh

00:20:45,200 --> 00:20:50,320
sorry go ahead

00:20:47,200 --> 00:20:51,919
uh sure as i think for us what um

00:20:50,320 --> 00:20:53,440
what's funny on that on that part is

00:20:51,919 --> 00:20:55,280
that

00:20:53,440 --> 00:20:56,880
as far as finding an owner for a certain

00:20:55,280 --> 00:20:58,000
feature we're we're lucky enough that

00:20:56,880 --> 00:21:00,320
there's probably already an

00:20:58,000 --> 00:21:01,679
owner because github's domain can be

00:21:00,320 --> 00:21:02,159
accessed from so many different ways

00:21:01,679 --> 00:21:04,559
already

00:21:02,159 --> 00:21:05,600
right the rest api the graphql api the

00:21:04,559 --> 00:21:08,159
ui itself

00:21:05,600 --> 00:21:10,000
so generally a certain feature has a

00:21:08,159 --> 00:21:12,880
certain owner already and we try

00:21:10,000 --> 00:21:14,080
not to change that with graphql so we

00:21:12,880 --> 00:21:16,159
really want

00:21:14,080 --> 00:21:17,919
the feature team the the specialist of

00:21:16,159 --> 00:21:19,840
that feature to own

00:21:17,919 --> 00:21:21,919
all the ways you can access that feature

00:21:19,840 --> 00:21:23,679
including graphql so i i think that that

00:21:21,919 --> 00:21:26,480
would be something very important

00:21:23,679 --> 00:21:27,280
where sometimes you have a an api team

00:21:26,480 --> 00:21:30,320
like we do or

00:21:27,280 --> 00:21:31,440
graphql team um and that team is really

00:21:30,320 --> 00:21:34,640
useful as well

00:21:31,440 --> 00:21:36,400
but being careful and

00:21:34,640 --> 00:21:38,080
having the people that know the features

00:21:36,400 --> 00:21:40,400
best work and own

00:21:38,080 --> 00:21:42,559
parts of the schema and i think for us

00:21:40,400 --> 00:21:43,280
the the the sdl the power of the schema

00:21:42,559 --> 00:21:46,400
makes that

00:21:43,280 --> 00:21:47,840
much easier than in other areas so as

00:21:46,400 --> 00:21:49,039
others were saying we can annotate

00:21:47,840 --> 00:21:51,120
certain types

00:21:49,039 --> 00:21:52,720
with an area of responsibility and

00:21:51,120 --> 00:21:55,280
ownership

00:21:52,720 --> 00:21:56,720
code owners for example so if i change a

00:21:55,280 --> 00:21:59,200
certain type

00:21:56,720 --> 00:22:00,720
the feature team will be uh required for

00:21:59,200 --> 00:22:04,400
a review for example so

00:22:00,720 --> 00:22:04,400
this has all really been useful

00:22:08,400 --> 00:22:12,400
sure you want to go or you want me to i

00:22:10,960 --> 00:22:13,520
think i was just going to add to what

00:22:12,400 --> 00:22:15,360
you were saying andy

00:22:13,520 --> 00:22:16,640
we kind of have this fragmented approach

00:22:15,360 --> 00:22:18,400
as well and

00:22:16,640 --> 00:22:20,159
with graphql of the things that we've

00:22:18,400 --> 00:22:22,080
seen work really well in terms of our

00:22:20,159 --> 00:22:22,880
social impact is breaking the styles of

00:22:22,080 --> 00:22:24,320
teams

00:22:22,880 --> 00:22:26,159
because we're all building like this

00:22:24,320 --> 00:22:28,400
graphical endpoint uh

00:22:26,159 --> 00:22:29,760
we have kind of started working closely

00:22:28,400 --> 00:22:31,600
with other teams together that have

00:22:29,760 --> 00:22:32,720
already built graphql or our building

00:22:31,600 --> 00:22:35,280
graphql so

00:22:32,720 --> 00:22:37,360
adopting those best practices across the

00:22:35,280 --> 00:22:39,200
organization this size

00:22:37,360 --> 00:22:40,880
has been something that graphql is

00:22:39,200 --> 00:22:42,640
helping us like we're communicating with

00:22:40,880 --> 00:22:44,640
these teams a lot more we're

00:22:42,640 --> 00:22:47,200
taking their help we're reaching out to

00:22:44,640 --> 00:22:48,320
the the specifications team and the web

00:22:47,200 --> 00:22:50,400
platform team so

00:22:48,320 --> 00:22:52,480
bringing that the entire organization

00:22:50,400 --> 00:22:55,840
closer i think graphql has helped us a

00:22:52,480 --> 00:22:58,880
lot in that

00:22:55,840 --> 00:23:02,240
okay from uh from my team sorry

00:22:58,880 --> 00:23:02,240
all right please

00:23:02,720 --> 00:23:09,520
um in our world's current climate

00:23:06,480 --> 00:23:11,039
uh i think cost reduction in savings is

00:23:09,520 --> 00:23:13,760
really a

00:23:11,039 --> 00:23:14,240
key thing that everybody is trying to do

00:23:13,760 --> 00:23:16,640
so

00:23:14,240 --> 00:23:17,280
convincing product teams that they need

00:23:16,640 --> 00:23:20,240
to

00:23:17,280 --> 00:23:21,600
you know start using graphql to break

00:23:20,240 --> 00:23:22,720
down these silos is

00:23:21,600 --> 00:23:25,039
really one of the things that we're

00:23:22,720 --> 00:23:28,159
trying to do so if we can

00:23:25,039 --> 00:23:29,840
reduce their the impact to their product

00:23:28,159 --> 00:23:31,440
you know that they have to maintain

00:23:29,840 --> 00:23:33,600
infrastructure or

00:23:31,440 --> 00:23:35,600
sets of data that's duplicates of

00:23:33,600 --> 00:23:37,200
existing things that they don't own

00:23:35,600 --> 00:23:38,720
if we can sell them on that as a cost

00:23:37,200 --> 00:23:40,320
reduction then

00:23:38,720 --> 00:23:41,840
that's that's really kind of how we're

00:23:40,320 --> 00:23:44,000
trying to target that is

00:23:41,840 --> 00:23:45,679
let's become smaller more efficient and

00:23:44,000 --> 00:23:46,240
optimize what we have do things the

00:23:45,679 --> 00:23:49,760
right way

00:23:46,240 --> 00:23:50,720
and we can break down those uh do silos

00:23:49,760 --> 00:23:55,360
and

00:23:50,720 --> 00:23:55,360
keep using that word and get it tattooed

00:23:57,520 --> 00:24:00,640
yeah and i think something we've seen

00:23:59,039 --> 00:24:02,640
this pattern is so interesting to me

00:24:00,640 --> 00:24:04,000
where most apis i think historically

00:24:02,640 --> 00:24:07,440
have come from the

00:24:04,000 --> 00:24:08,640
the data side or the back inside and

00:24:07,440 --> 00:24:11,760
some of these questions just don't

00:24:08,640 --> 00:24:14,400
emerge in that pattern but with graphql

00:24:11,760 --> 00:24:16,559
we often see it begins with the product

00:24:14,400 --> 00:24:18,080
team or the ui team

00:24:16,559 --> 00:24:19,919
and so for the first part of the journey

00:24:18,080 --> 00:24:21,679
there's there's actually more stuff

00:24:19,919 --> 00:24:24,080
rather than less stuff because you still

00:24:21,679 --> 00:24:25,760
got all the original rest apis or bffs

00:24:24,080 --> 00:24:28,880
or whatever you started with

00:24:25,760 --> 00:24:30,480
and you've layered on these um

00:24:28,880 --> 00:24:32,720
these graphql apis to help the

00:24:30,480 --> 00:24:34,799
individual teams and

00:24:32,720 --> 00:24:37,120
the prize is when you start either

00:24:34,799 --> 00:24:40,159
connecting them together or

00:24:37,120 --> 00:24:41,919
having a common view of all of that and

00:24:40,159 --> 00:24:43,919
you start measuring success and how many

00:24:41,919 --> 00:24:45,360
of those bffs could i retire or how much

00:24:43,919 --> 00:24:47,360
code could i eliminate or how much

00:24:45,360 --> 00:24:48,640
consolidation could we do and

00:24:47,360 --> 00:24:51,279
i feel like that's something that we

00:24:48,640 --> 00:24:51,919
could um i i like the earlier point

00:24:51,279 --> 00:24:54,480
about

00:24:51,919 --> 00:24:55,840
numbers and measurements and let's let's

00:24:54,480 --> 00:24:58,159
put something

00:24:55,840 --> 00:25:00,080
quantitative behind this maybe that's

00:24:58,159 --> 00:25:02,720
one of the big takeaways

00:25:00,080 --> 00:25:04,080
we have a few minutes left and and uh

00:25:02,720 --> 00:25:04,960
you know mark andre you started by

00:25:04,080 --> 00:25:07,440
talking about

00:25:04,960 --> 00:25:08,640
the public api um at github and maybe i

00:25:07,440 --> 00:25:11,520
can just broaden this and

00:25:08,640 --> 00:25:13,360
ask everybody to to just talk about

00:25:11,520 --> 00:25:14,400
what's next for you and and how do you

00:25:13,360 --> 00:25:16,159
see

00:25:14,400 --> 00:25:19,360
the path forward for the next year or so

00:25:16,159 --> 00:25:21,760
and what's your goal or aspiration

00:25:19,360 --> 00:25:25,360
that maybe others can can come away with

00:25:21,760 --> 00:25:25,360
and think about for their organization

00:25:27,679 --> 00:25:31,919
um sure i can i can talk about a few

00:25:30,960 --> 00:25:34,159
things i think

00:25:31,919 --> 00:25:34,960
one thing i'm really excited about and i

00:25:34,159 --> 00:25:37,440
don't think

00:25:34,960 --> 00:25:39,520
uh we'll solve that but i'm excited in

00:25:37,440 --> 00:25:40,480
general about graphql is finding new

00:25:39,520 --> 00:25:43,520
ways

00:25:40,480 --> 00:25:45,520
new new execution schemes and new ways

00:25:43,520 --> 00:25:48,880
to execute a graphql query

00:25:45,520 --> 00:25:49,679
um because the the way graphql's

00:25:48,880 --> 00:25:52,400
execution

00:25:49,679 --> 00:25:52,880
is really powerful it allows it's what

00:25:52,400 --> 00:25:54,960
it allows

00:25:52,880 --> 00:25:56,320
clients to really like select what they

00:25:54,960 --> 00:25:57,919
need and graphql

00:25:56,320 --> 00:25:59,840
to give that write up so that that's

00:25:57,919 --> 00:26:02,320
great um but it does

00:25:59,840 --> 00:26:05,200
it's so powerful i find that it shapes a

00:26:02,320 --> 00:26:06,880
code base with graphql execution in mind

00:26:05,200 --> 00:26:09,039
something you don't necessarily always

00:26:06,880 --> 00:26:10,480
want um so

00:26:09,039 --> 00:26:13,600
what i'm really excited about is if we

00:26:10,480 --> 00:26:16,080
can find a way where you can

00:26:13,600 --> 00:26:17,039
have people write business logic in a

00:26:16,080 --> 00:26:19,360
way that's kind of

00:26:17,039 --> 00:26:20,799
graphical agnostic so they can be reused

00:26:19,360 --> 00:26:23,919
different places

00:26:20,799 --> 00:26:25,039
and especially in terms of data loading

00:26:23,919 --> 00:26:26,640
having a way where

00:26:25,039 --> 00:26:28,720
i can write simple code for what i want

00:26:26,640 --> 00:26:30,240
in my resolver and

00:26:28,720 --> 00:26:32,480
graphql execution is going to make that

00:26:30,240 --> 00:26:34,480
efficient somehow um i think

00:26:32,480 --> 00:26:35,760
data data loader approach is great but

00:26:34,480 --> 00:26:38,320
it does impose

00:26:35,760 --> 00:26:40,240
a shape to a code base where everything

00:26:38,320 --> 00:26:42,480
is in terms of data alerters now

00:26:40,240 --> 00:26:43,919
everything is asynchronous so i'd love

00:26:42,480 --> 00:26:46,159
i'd love to find a way

00:26:43,919 --> 00:26:47,120
around that on the public api side of

00:26:46,159 --> 00:26:50,880
things

00:26:47,120 --> 00:26:52,000
i would say just more more tooling for

00:26:50,880 --> 00:26:53,520
visibility

00:26:52,000 --> 00:26:56,000
really being able to see what's going on

00:26:53,520 --> 00:26:58,080
in our system uh finding out

00:26:56,000 --> 00:27:00,080
if a client's having issues with slow

00:26:58,080 --> 00:27:01,840
queries before they reach out to us

00:27:00,080 --> 00:27:03,200
has been the real challenge because with

00:27:01,840 --> 00:27:06,559
graphql we're

00:27:03,200 --> 00:27:07,679
we're dealing with like millions of

00:27:06,559 --> 00:27:09,120
different queries which

00:27:07,679 --> 00:27:10,880
if you think about it is almost like

00:27:09,120 --> 00:27:12,400
maintaining millions of rest end points

00:27:10,880 --> 00:27:12,880
because everybody's selecting their own

00:27:12,400 --> 00:27:14,720
thing

00:27:12,880 --> 00:27:16,000
so monitoring that is a huge challenge

00:27:14,720 --> 00:27:21,840
so this is something i'm really

00:27:16,000 --> 00:27:21,840
interested in

00:27:22,320 --> 00:27:26,559
all right from our side at priceline

00:27:24,399 --> 00:27:29,039
we're looking over the next year to

00:27:26,559 --> 00:27:30,559
uh consolidate some of our our current

00:27:29,039 --> 00:27:31,760
graph schemas and reduce some of the

00:27:30,559 --> 00:27:34,000
redundancy that we have

00:27:31,760 --> 00:27:36,720
uh kind of collapse that down into

00:27:34,000 --> 00:27:39,760
single domain objects with single owners

00:27:36,720 --> 00:27:40,399
um get rid of uh some of the no longer

00:27:39,760 --> 00:27:42,000
needed

00:27:40,399 --> 00:27:43,679
uh back-end for front-end services that

00:27:42,000 --> 00:27:46,000
we have or at least uh transferring

00:27:43,679 --> 00:27:48,559
ownership of that code to

00:27:46,000 --> 00:27:49,760
a back-end service uh we're really

00:27:48,559 --> 00:27:51,520
excited to get

00:27:49,760 --> 00:27:53,039
all of our front end and our mobile apps

00:27:51,520 --> 00:27:54,799
teams calling

00:27:53,039 --> 00:27:56,960
our graph through a single endpoint i

00:27:54,799 --> 00:27:57,440
think that'll be a really powerful thing

00:27:56,960 --> 00:28:00,080
for us

00:27:57,440 --> 00:28:00,720
uh be able to monitor all that from a

00:28:00,080 --> 00:28:02,399
single

00:28:00,720 --> 00:28:03,840
single point instead of having a monitor

00:28:02,399 --> 00:28:07,440
you know seven

00:28:03,840 --> 00:28:07,440
ten twelve different applications

00:28:08,880 --> 00:28:12,320
yeah for us we're pretty excited about

00:28:10,559 --> 00:28:14,840
that single endpoint as well and having

00:28:12,320 --> 00:28:16,000
a unified graphql api across all of our

00:28:14,840 --> 00:28:19,360
applications

00:28:16,000 --> 00:28:19,840
um uh one thing that i'm super excited

00:28:19,360 --> 00:28:21,360
about

00:28:19,840 --> 00:28:24,080
is or looking forward to is

00:28:21,360 --> 00:28:26,320
authenticated or a graphql api

00:28:24,080 --> 00:28:27,760
that is seamless so an authenticated and

00:28:26,320 --> 00:28:30,960
unauthenticated flow

00:28:27,760 --> 00:28:32,960
uh with graphql api should become as

00:28:30,960 --> 00:28:34,000
easy as like switching between or like

00:28:32,960 --> 00:28:35,760
adding a directive

00:28:34,000 --> 00:28:37,039
so i'm i'm really looking forward to

00:28:35,760 --> 00:28:39,919
that solution

00:28:37,039 --> 00:28:44,960
hopefully soon um and dev tooling as

00:28:39,919 --> 00:28:47,279
well around graphql

00:28:44,960 --> 00:28:48,240
yeah reduction in in our footprint our

00:28:47,279 --> 00:28:51,679
infrastructure

00:28:48,240 --> 00:28:55,120
is one of our key driving metrics um

00:28:51,679 --> 00:28:57,760
it's a cost savings and uh

00:28:55,120 --> 00:28:59,120
i need to go back and watch ashy's talk

00:28:57,760 --> 00:29:00,799
from before this

00:28:59,120 --> 00:29:03,039
because the the federation and what's

00:29:00,799 --> 00:29:06,720
coming next is very very interesting

00:29:03,039 --> 00:29:09,600
very cool um especially around the

00:29:06,720 --> 00:29:10,320
the streaming the live the defer all of

00:29:09,600 --> 00:29:13,679
that stuff

00:29:10,320 --> 00:29:14,080
is is uh it's like candy to me i just

00:29:13,679 --> 00:29:17,039
want to

00:29:14,080 --> 00:29:17,039
eat it all up so

00:29:19,520 --> 00:29:24,559
yeah i think uh

00:29:22,559 --> 00:29:26,080
the way i look at this is is about

00:29:24,559 --> 00:29:29,120
empowering teams to do better

00:29:26,080 --> 00:29:30,880
work and it what i'm hearing in all of

00:29:29,120 --> 00:29:32,960
these examples is

00:29:30,880 --> 00:29:35,200
let us focus on the stuff that actually

00:29:32,960 --> 00:29:38,559
brings value to our users and

00:29:35,200 --> 00:29:41,360
that we came here to do and um

00:29:38,559 --> 00:29:42,559
i think the graph is a good example of

00:29:41,360 --> 00:29:44,000
you know we've seen other things like

00:29:42,559 --> 00:29:46,080
you know i mentioned docker earlier

00:29:44,000 --> 00:29:47,919
containerization empowered teams to

00:29:46,080 --> 00:29:49,360
write services

00:29:47,919 --> 00:29:51,360
and you didn't you didn't have to bring

00:29:49,360 --> 00:29:52,799
all that particular expertise anymore

00:29:51,360 --> 00:29:55,919
just to have a

00:29:52,799 --> 00:29:58,399
api endpoint your environment i'm

00:29:55,919 --> 00:30:00,000
i'm very hopeful that what we see over

00:29:58,399 --> 00:30:00,799
the next couple years is just this

00:30:00,000 --> 00:30:02,880
spread

00:30:00,799 --> 00:30:04,320
it really is a network effect and it

00:30:02,880 --> 00:30:06,159
means that

00:30:04,320 --> 00:30:08,159
as graphql spreads in the organization

00:30:06,159 --> 00:30:09,520
team after team can

00:30:08,159 --> 00:30:11,520
you know hey i came to work to make a

00:30:09,520 --> 00:30:12,720
great user experience not to shovel data

00:30:11,520 --> 00:30:14,159
around and

00:30:12,720 --> 00:30:15,840
i think being able to do that at scale

00:30:14,159 --> 00:30:18,640
across all the data in the organization

00:30:15,840 --> 00:30:18,640
is such a prize

00:30:20,080 --> 00:30:23,200
i want to thank everyone any last

00:30:21,360 --> 00:30:26,799
thoughts from from anyone here

00:30:23,200 --> 00:30:26,799
um for our audience

00:30:31,840 --> 00:30:36,159
echo the point that mark said earlier

00:30:34,240 --> 00:30:39,919
don't be scared of uh graphql

00:30:36,159 --> 00:30:39,919
just get in uh little by little

00:30:40,799 --> 00:30:45,360
i would say be patient when trying to

00:30:42,640 --> 00:30:45,360
evangelize

00:30:46,000 --> 00:30:52,480
some teams yeah

00:30:51,039 --> 00:30:54,720
thanks everyone i have a friend here at

00:30:52,480 --> 00:30:58,000
apollo that says start small think big

00:30:54,720 --> 00:30:58,640
um so that's the way to do it i think

00:30:58,000 --> 00:31:00,159
we're hearing

00:30:58,640 --> 00:31:01,840
across the board thanks so much to all

00:31:00,159 --> 00:31:04,480
of you and um

00:31:01,840 --> 00:31:05,840
i hope you're all safe and healthy and i

00:31:04,480 --> 00:31:08,320
really enjoyed doing this i

00:31:05,840 --> 00:31:09,440
i hope we can see each other in person

00:31:08,320 --> 00:31:11,519
soon but

00:31:09,440 --> 00:31:13,679
having a chance to bring this message to

00:31:11,519 --> 00:31:15,519
people just around the globe and

00:31:13,679 --> 00:31:17,039
um who are doing this in all kinds of

00:31:15,519 --> 00:31:19,600
companies large and small i think is

00:31:17,039 --> 00:31:20,159
is a real privilege so appreciate it and

00:31:19,600 --> 00:31:25,210
be well

00:31:20,159 --> 00:31:30,840
thanks thank you thank you thanks

00:31:25,210 --> 00:31:33,840
[Music]

00:31:30,840 --> 00:31:33,840
everyone

00:31:34,080 --> 00:31:36,159

YouTube URL: https://www.youtube.com/watch?v=Nh8lPL0pKVM


