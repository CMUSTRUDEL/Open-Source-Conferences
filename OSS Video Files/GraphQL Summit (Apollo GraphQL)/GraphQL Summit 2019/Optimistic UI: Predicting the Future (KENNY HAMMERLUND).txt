Title: Optimistic UI: Predicting the Future (KENNY HAMMERLUND)
Publication date: 2019-11-02
Playlist: GraphQL Summit 2019
Description: 
	Optimistic UI is a powerful tool to help your UI respond to expected changes without the need for a page refresh or loading component.
Captions: 
	00:00:01,520 --> 00:00:06,350
I think shake how's everybody doing

00:00:03,799 --> 00:00:08,690
today good a lot of good information

00:00:06,350 --> 00:00:10,700
between these walls and there's a lot of

00:00:08,690 --> 00:00:12,170
great things it's exciting to be around

00:00:10,700 --> 00:00:14,629
graph QL you know the emerging

00:00:12,170 --> 00:00:16,970
technology every year it grows it gets

00:00:14,629 --> 00:00:18,980
better I'm here to share with you a

00:00:16,970 --> 00:00:20,570
little bit about optimistic UI if you

00:00:18,980 --> 00:00:26,630
haven't heard of it it's baked in to

00:00:20,570 --> 00:00:28,910
react client so moving on so the

00:00:26,630 --> 00:00:30,770
original problem we had this is a basic

00:00:28,910 --> 00:00:32,960
PDF upload screen that I was tasked to

00:00:30,770 --> 00:00:34,730
build about a year ago

00:00:32,960 --> 00:00:36,109
I think everybody's built something like

00:00:34,730 --> 00:00:39,320
this at one point time or another you're

00:00:36,109 --> 00:00:41,030
just kind of dragging a PDF and it drops

00:00:39,320 --> 00:00:43,460
in and goes from there so I was talking

00:00:41,030 --> 00:00:44,809
to a colleague and he says hey Apollo

00:00:43,460 --> 00:00:46,460
has this thing built in called

00:00:44,809 --> 00:00:49,249
optimistic UI why don't you try to get

00:00:46,460 --> 00:00:51,050
that to work said all right now you're

00:00:49,249 --> 00:00:54,559
later Here I am talking to you guys

00:00:51,050 --> 00:00:56,659
about how to get it to work so the

00:00:54,559 --> 00:00:59,979
normal workflow on a page like this you

00:00:56,659 --> 00:01:02,539
drop a PDF on the thing and you get

00:00:59,979 --> 00:01:05,600
loading I mean I don't know about you

00:01:02,539 --> 00:01:07,550
guys I really hate loading screens it

00:01:05,600 --> 00:01:09,890
decreases usability increases your

00:01:07,550 --> 00:01:13,280
bounce rate it's really not a great user

00:01:09,890 --> 00:01:20,060
experience so what can we do to improve

00:01:13,280 --> 00:01:23,720
our user experience optimistic UI what

00:01:20,060 --> 00:01:27,290
is optimistic UI optimistic UI is a UI

00:01:23,720 --> 00:01:30,230
that thinks it's glass is half-full the

00:01:27,290 --> 00:01:32,750
idea is when you send off in operation

00:01:30,230 --> 00:01:34,550
the you I will update before the

00:01:32,750 --> 00:01:37,070
operation returns it's basically trying

00:01:34,550 --> 00:01:41,450
to predict the future to produce an

00:01:37,070 --> 00:01:43,370
output on your UI all right now let's

00:01:41,450 --> 00:01:45,650
play a little game I built an app in

00:01:43,370 --> 00:01:47,300
native if you would like to download it

00:01:45,650 --> 00:01:51,890
take a snapshot of the screen and play

00:01:47,300 --> 00:01:56,630
along we call it a palo graphic well

00:01:51,890 --> 00:02:02,480
ball it's a pretty basic app that didn't

00:01:56,630 --> 00:02:05,750
want to start it's a pretty basic app

00:02:02,480 --> 00:02:08,119
for the most part so what we do we have

00:02:05,750 --> 00:02:10,399
to set our name and then we're going to

00:02:08,119 --> 00:02:13,040
set us server delay this delay is going

00:02:10,399 --> 00:02:14,870
to simulate a poor Wi-Fi network dropped

00:02:13,040 --> 00:02:16,280
coverage things like that

00:02:14,870 --> 00:02:17,870
things you generally run into the real

00:02:16,280 --> 00:02:21,409
world when we're not developing locally

00:02:17,870 --> 00:02:24,769
on our machines all right now it's time

00:02:21,409 --> 00:02:26,989
to play bow is gonna be scoring a few

00:02:24,769 --> 00:02:28,819
touchdowns here on the left you see the

00:02:26,989 --> 00:02:30,980
UI score the UI is in blue and that's

00:02:28,819 --> 00:02:33,049
optimistically being updated as the

00:02:30,980 --> 00:02:35,150
server returns its values its gonna be

00:02:33,049 --> 00:02:37,760
updating on the right and in the bottom

00:02:35,150 --> 00:02:39,170
you will see as they come back so we're

00:02:37,760 --> 00:02:40,700
gonna move around a little bit we're

00:02:39,170 --> 00:02:43,310
gonna be able to continue to play our

00:02:40,700 --> 00:02:45,890
game while we're waiting for the server

00:02:43,310 --> 00:02:47,629
to respond you can imagine if we had to

00:02:45,890 --> 00:02:49,760
wait for them server responses we'd

00:02:47,629 --> 00:02:51,890
still be on touch down to sitting around

00:02:49,760 --> 00:02:59,810
waiting kind of hanging out but in this

00:02:51,890 --> 00:03:01,609
case we're almost done with our game so

00:02:59,810 --> 00:03:02,840
how do we make this work we have a

00:03:01,609 --> 00:03:05,150
couple of different options that we

00:03:02,840 --> 00:03:07,340
could use we could store our object in

00:03:05,150 --> 00:03:08,870
local state and we can update it when

00:03:07,340 --> 00:03:11,930
our server response comes back but that

00:03:08,870 --> 00:03:13,519
yeah it doesn't work the greatest you

00:03:11,930 --> 00:03:15,980
would almost have to lift it up if you

00:03:13,519 --> 00:03:17,900
wanted to use it multiple components so

00:03:15,980 --> 00:03:20,840
you could move it into a context which

00:03:17,900 --> 00:03:22,760
works you could use redux yeah it's not

00:03:20,840 --> 00:03:26,090
the greatest it adds a lot of extra code

00:03:22,760 --> 00:03:28,130
that you don't want to mess with Apollo

00:03:26,090 --> 00:03:30,829
client makes this operation very easy

00:03:28,130 --> 00:03:31,970
with a few lines of code you can turn

00:03:30,829 --> 00:03:34,090
your frown upside down

00:03:31,970 --> 00:03:38,269
and improve user experience

00:03:34,090 --> 00:03:40,940
significantly so let's take a look at

00:03:38,269 --> 00:03:43,459
our schema for our app it's a very basic

00:03:40,940 --> 00:03:46,069
viewer query we have a name the server

00:03:43,459 --> 00:03:47,900
delay a list of actions this is going to

00:03:46,069 --> 00:03:50,269
be our main focus our touchdowns our

00:03:47,900 --> 00:03:53,090
extra points field goals things like

00:03:50,269 --> 00:03:56,989
that I also added an optimistic field

00:03:53,090 --> 00:03:59,150
that is this is not a tit client but

00:03:56,989 --> 00:04:05,269
more for me to determine between what's

00:03:59,150 --> 00:04:07,190
optimistic and what's not looking at our

00:04:05,269 --> 00:04:10,430
mutation this is the add game action

00:04:07,190 --> 00:04:12,049
mutation so when we kick a touchdown we

00:04:10,430 --> 00:04:13,699
are going to send off our mutation it's

00:04:12,049 --> 00:04:16,220
only going to have the value the

00:04:13,699 --> 00:04:17,720
timestamp and the type we are not going

00:04:16,220 --> 00:04:20,150
to be returning an ID because that's

00:04:17,720 --> 00:04:23,270
server generated so we won't know our ID

00:04:20,150 --> 00:04:25,099
when we send off our original mutation

00:04:23,270 --> 00:04:27,409
that's important because Apollo cache

00:04:25,099 --> 00:04:28,490
uses ID to determine what object is

00:04:27,409 --> 00:04:31,130
aware

00:04:28,490 --> 00:04:33,289
so let's talk about the optimistic UI

00:04:31,130 --> 00:04:35,600
workflow we're gonna send off a mutation

00:04:33,289 --> 00:04:37,370
to the server then the optimistic

00:04:35,600 --> 00:04:39,259
function is going to be called inside

00:04:37,370 --> 00:04:40,819
this optimistic function we're going to

00:04:39,259 --> 00:04:42,590
predict what we want to see from our

00:04:40,819 --> 00:04:45,080
response and we're going to return that

00:04:42,590 --> 00:04:47,419
object that object is then pumped into

00:04:45,080 --> 00:04:49,880
the update function and when the

00:04:47,419 --> 00:04:51,860
mutation responds the update function is

00:04:49,880 --> 00:04:54,410
called again with the actual server

00:04:51,860 --> 00:04:56,090
response inside this update function

00:04:54,410 --> 00:04:57,860
generally you might manipulate the cache

00:04:56,090 --> 00:05:01,190
a little bit change of query things like

00:04:57,860 --> 00:05:03,229
that it's important to note that the

00:05:01,190 --> 00:05:05,960
update function runs twice with both

00:05:03,229 --> 00:05:08,380
objects so sometimes you end up with

00:05:05,960 --> 00:05:10,849
duplicates that you need to watch for

00:05:08,380 --> 00:05:12,380
now both scores a touchdown because

00:05:10,849 --> 00:05:15,530
let's be honest postcard merge so the

00:05:12,380 --> 00:05:17,720
touch challenge back then but starting

00:05:15,530 --> 00:05:19,789
out we have the input to our game action

00:05:17,720 --> 00:05:23,060
mutation that is the variables that go

00:05:19,789 --> 00:05:25,220
into our mutation again back to a basic

00:05:23,060 --> 00:05:27,139
type touch down the value six points

00:05:25,220 --> 00:05:30,020
that's pumped into our optimistic

00:05:27,139 --> 00:05:32,330
response in there we create an ID that

00:05:30,020 --> 00:05:34,849
we know will be unique to the rest of

00:05:32,330 --> 00:05:37,460
the cache if you get multiple IDs you're

00:05:34,849 --> 00:05:40,550
going to end up with some improper

00:05:37,460 --> 00:05:42,800
values for the most part we also have to

00:05:40,550 --> 00:05:44,539
set our type name to game action without

00:05:42,800 --> 00:05:47,599
that value the cache is going to get

00:05:44,539 --> 00:05:49,430
confused and not know what to do the

00:05:47,599 --> 00:05:51,710
response from this optimistic response

00:05:49,430 --> 00:05:54,560
function is then pumped into the update

00:05:51,710 --> 00:05:56,659
function where the optimistic response

00:05:54,560 --> 00:06:01,070
decides what we're going to do with our

00:05:56,659 --> 00:06:02,330
local cache the viewer query response is

00:06:01,070 --> 00:06:04,699
that list of actions we talked about

00:06:02,330 --> 00:06:06,889
earlier that is going to be updated as

00:06:04,699 --> 00:06:11,630
we add a value to our database that

00:06:06,889 --> 00:06:13,099
would be returned in this list so now

00:06:11,630 --> 00:06:14,479
what we're going to do is we're gonna

00:06:13,099 --> 00:06:17,630
read the cache and we're going to pull

00:06:14,479 --> 00:06:19,370
that viewer query the first time we go

00:06:17,630 --> 00:06:21,979
through with their optimistic response

00:06:19,370 --> 00:06:24,620
we don't really care about cleaning our

00:06:21,979 --> 00:06:26,810
array but it's kind of done for

00:06:24,620 --> 00:06:28,099
redundancy in the second time when we

00:06:26,810 --> 00:06:29,599
come through with our server response

00:06:28,099 --> 00:06:31,849
that array is going to have our

00:06:29,599 --> 00:06:33,229
optimistic object so now we need to pull

00:06:31,849 --> 00:06:35,840
that out so we don't end up with

00:06:33,229 --> 00:06:37,039
duplicates in our cache and then we're

00:06:35,840 --> 00:06:41,180
all set and done we write it back to our

00:06:37,039 --> 00:06:42,230
cache this is the implementation using

00:06:41,180 --> 00:06:44,780
the old high

00:06:42,230 --> 00:06:46,880
component you import your graphic you

00:06:44,780 --> 00:06:49,940
all you wrap your component mutates

00:06:46,880 --> 00:06:51,590
imported now to add the optimistic

00:06:49,940 --> 00:06:53,750
response you add it to the config object

00:06:51,590 --> 00:06:57,110
that is passing as a parameter on the

00:06:53,750 --> 00:06:59,540
mutate function and then also the result

00:06:57,110 --> 00:07:02,630
is pumped in here as a prop as well with

00:06:59,540 --> 00:07:04,790
your loading state hooks if you guys not

00:07:02,630 --> 00:07:06,890
use them yet I definitely recommend go

00:07:04,790 --> 00:07:09,020
home put your jammies on type NPM

00:07:06,890 --> 00:07:10,910
install Apollo hooks you're gonna thank

00:07:09,020 --> 00:07:15,260
me in the morning it's totally worth it

00:07:10,910 --> 00:07:18,440
and that is about all I have to say if

00:07:15,260 --> 00:07:20,810
you'd like to download the app go for it

00:07:18,440 --> 00:07:23,360
any questions feel free to open an issue

00:07:20,810 --> 00:07:28,360
on one of my repos some emails send me a

00:07:23,360 --> 00:07:32,339
tweet be happy to help me to respond

00:07:28,360 --> 00:07:32,339

YouTube URL: https://www.youtube.com/watch?v=465bHdrcU7s


