Title: The Do’s and Don’ts for your schema and GraphQL operations
Publication date: 2019-11-02
Playlist: GraphQL Summit 2019
Description: 
	Learn best practices for GraphQL schema and client operations from someone who works with enterprises every day to optimize their GraphQL infrastructure — Michael Watson, an Apollo Customer Success Engineer. 

Start with common do's and don'ts for building a schema that will help clients more easily consume your graph. Then look at common pitfalls Michael sees in GraphQL operations and how some small changes can bring a lot of clarity to a data graph. Micheal also covers Apollo tooling, like Graph Manager, to enable these best practices.

Resources:
Checkout the Apollo docs - https://www.apollographql.com/docs/
Explore the schema docs - https://www.apollographql.com/docs/apollo-server/schema/schema/
Explore the GraphQL FAQs - https://www.apollographql.com/docs/resources/faq
Captions: 
	00:00:01,980 --> 00:00:06,250
as I walked up and got my mic on I saw

00:00:04,600 --> 00:00:07,120
Jesse's costume I was like oh my gosh

00:00:06,250 --> 00:00:08,200
this is great

00:00:07,120 --> 00:00:11,260
can't believe you weren't wearing that

00:00:08,200 --> 00:00:12,820
all day long so thank you everyone so

00:00:11,260 --> 00:00:14,679
today we're gonna be talking about the

00:00:12,820 --> 00:00:17,740
do's and don'ts for your scheming

00:00:14,679 --> 00:00:19,000
operations but before we get into it how

00:00:17,740 --> 00:00:22,420
many people think the title is kind of

00:00:19,000 --> 00:00:24,100
weirder it looks weird oh this is great

00:00:22,420 --> 00:00:26,230
all right so there was a lot of

00:00:24,100 --> 00:00:27,760
discussion at Apollo like wait is the

00:00:26,230 --> 00:00:30,099
apostrophes in the right place and I'm

00:00:27,760 --> 00:00:32,260
definitely not good at English so it was

00:00:30,099 --> 00:00:36,309
like you know we started doing the

00:00:32,260 --> 00:00:37,480
research and you know what is the you

00:00:36,309 --> 00:00:42,760
know I guess I have to just click on

00:00:37,480 --> 00:00:44,920
this screen no oh okay just delays so

00:00:42,760 --> 00:00:46,989
do's and don'ts should there be the

00:00:44,920 --> 00:00:50,170
possibly in the dues the don'ts should

00:00:46,989 --> 00:00:51,760
be do's don'ts and even Matt got into

00:00:50,170 --> 00:00:54,879
the discussion was like hey like what

00:00:51,760 --> 00:00:57,280
should it actually be and it turns out

00:00:54,879 --> 00:00:58,629
that like there's a lot of discussion on

00:00:57,280 --> 00:00:59,739
this so I thought you know it's a great

00:00:58,629 --> 00:01:01,899
thing to start out with because we're

00:00:59,739 --> 00:01:04,449
gonna talk about schemas and operations

00:01:01,899 --> 00:01:05,799
right let's be a little opinionated but

00:01:04,449 --> 00:01:07,270
for this we're just gonna call it the

00:01:05,799 --> 00:01:09,430
best practices right like it's just

00:01:07,270 --> 00:01:13,450
scratch the title best practice for your

00:01:09,430 --> 00:01:15,100
scheming operations so like Jesse said

00:01:13,450 --> 00:01:18,220
my name is Michael Watson I'm a

00:01:15,100 --> 00:01:20,500
Solutions Architect at Apollo and really

00:01:18,220 --> 00:01:21,790
you know my role at Apollo is working

00:01:20,500 --> 00:01:23,830
with various companies on their

00:01:21,790 --> 00:01:26,560
graphical initiatives and really just

00:01:23,830 --> 00:01:27,909
their overall adoption you know I was

00:01:26,560 --> 00:01:29,560
really lucky to talk at last year's

00:01:27,909 --> 00:01:32,500
summit and ever since then I've been

00:01:29,560 --> 00:01:34,420
working with various companies reviewing

00:01:32,500 --> 00:01:36,610
hundreds of different schemas and just

00:01:34,420 --> 00:01:38,890
listening and learning really from the

00:01:36,610 --> 00:01:40,299
community and it's been a really

00:01:38,890 --> 00:01:42,670
fortunate experience for me to learn

00:01:40,299 --> 00:01:43,930
from those opportunities and working

00:01:42,670 --> 00:01:45,640
with these teams what I've tried to do

00:01:43,930 --> 00:01:48,220
is I've tried to sum up a lot of what

00:01:45,640 --> 00:01:50,860
I've seen what I've learned and really

00:01:48,220 --> 00:01:53,170
bring that back to the community so in

00:01:50,860 --> 00:01:55,600
today's talk you're gonna hear you know

00:01:53,170 --> 00:01:57,130
a lot of great really practical things

00:01:55,600 --> 00:01:59,380
that you're gonna be able to bring back

00:01:57,130 --> 00:02:03,369
to your team and start to implement the

00:01:59,380 --> 00:02:06,850
day you get back alright so let's start

00:02:03,369 --> 00:02:08,530
jumping into this so first of all why

00:02:06,850 --> 00:02:11,200
should you really care about your schema

00:02:08,530 --> 00:02:12,459
in your operations first of all we

00:02:11,200 --> 00:02:14,410
should all care about our schema because

00:02:12,459 --> 00:02:16,030
it's our product right like we all

00:02:14,410 --> 00:02:17,830
started doing Graff kill because we want

00:02:16,030 --> 00:02:20,350
to build our product faster I wanted to

00:02:17,830 --> 00:02:22,660
deliver value faster so our schema is a

00:02:20,350 --> 00:02:24,460
representation of our product that's

00:02:22,660 --> 00:02:27,040
really why we should be caring about it

00:02:24,460 --> 00:02:29,020
but you know today you might be some

00:02:27,040 --> 00:02:30,910
single teams with maybe one client

00:02:29,020 --> 00:02:33,460
application and maybe it's really easy

00:02:30,910 --> 00:02:34,720
for you to delete fields or change your

00:02:33,460 --> 00:02:38,470
schema but when you have multiple

00:02:34,720 --> 00:02:40,300
clients it's just not that simple same

00:02:38,470 --> 00:02:42,400
thing with your operations right you are

00:02:40,300 --> 00:02:44,320
your schema you may have one team

00:02:42,400 --> 00:02:46,270
contributing to the schema but you may

00:02:44,320 --> 00:02:48,850
get into a world where multiple people

00:02:46,270 --> 00:02:50,320
own the schema and you know how are you

00:02:48,850 --> 00:02:53,020
going to make sure you have a consistent

00:02:50,320 --> 00:02:55,750
experience across all of those different

00:02:53,020 --> 00:02:57,040
owners of their schemas and when it

00:02:55,750 --> 00:02:59,560
really comes down to is we all own our

00:02:57,040 --> 00:03:01,840
schema we all own the operations we're

00:02:59,560 --> 00:03:04,330
writing and you know consuming the data

00:03:01,840 --> 00:03:05,910
on the graph so we can all do something

00:03:04,330 --> 00:03:08,740
to make things just a little bit better

00:03:05,910 --> 00:03:10,840
but like why do I personally want to

00:03:08,740 --> 00:03:13,150
make my graph better I mean that's kind

00:03:10,840 --> 00:03:15,250
of like a weird loaded question but you

00:03:13,150 --> 00:03:17,680
know Matt had mentioned this I be a data

00:03:15,250 --> 00:03:19,870
graph champion and I think what's really

00:03:17,680 --> 00:03:21,610
important about this portion is almost

00:03:19,870 --> 00:03:23,380
every single company I've worked with

00:03:21,610 --> 00:03:26,140
since I've started at Apollo that's a

00:03:23,380 --> 00:03:28,450
lot every single one of them started out

00:03:26,140 --> 00:03:30,430
with like one or two or handful

00:03:28,450 --> 00:03:32,890
developers maybe they started things out

00:03:30,430 --> 00:03:34,990
with a 20% project then maybe they

00:03:32,890 --> 00:03:36,610
presented data and it got some notice

00:03:34,990 --> 00:03:38,650
from other people in the team and it

00:03:36,610 --> 00:03:40,450
became a POC and you know it became this

00:03:38,650 --> 00:03:42,070
next thing and next thing you know

00:03:40,450 --> 00:03:44,640
they're really becoming leaders of graph

00:03:42,070 --> 00:03:47,050
kill in their organization right and so

00:03:44,640 --> 00:03:48,489
with this and with today's talks

00:03:47,050 --> 00:03:50,080
everything we're going to talk about I

00:03:48,489 --> 00:03:52,420
want everyone in this room to feel

00:03:50,080 --> 00:03:54,670
empowered to go back be a data graph

00:03:52,420 --> 00:03:57,400
champion and be honest like I love

00:03:54,670 --> 00:03:59,410
talking with any team any person that

00:03:57,400 --> 00:04:01,989
tells me about how they got a promotion

00:03:59,410 --> 00:04:03,910
from the graph QL stack they implemented

00:04:01,989 --> 00:04:06,370
I think that's really cool we're all

00:04:03,910 --> 00:04:08,590
trying to modernize things so let's all

00:04:06,370 --> 00:04:11,440
try and get a promotion right so let's

00:04:08,590 --> 00:04:13,630
jump into it right so we talked about

00:04:11,440 --> 00:04:16,150
your schemas really a representation of

00:04:13,630 --> 00:04:18,040
your product so you might be doing a BFF

00:04:16,150 --> 00:04:20,650
or you know some other pattern right now

00:04:18,040 --> 00:04:24,010
but graphical is really this opportunity

00:04:20,650 --> 00:04:26,889
to have a representation of the product

00:04:24,010 --> 00:04:29,169
experience you're trying to deliver

00:04:26,889 --> 00:04:31,719
so starting out like the centerpoint

00:04:29,169 --> 00:04:35,139
identity right so a lot of times we

00:04:31,719 --> 00:04:37,360
think about kind of identity and like

00:04:35,139 --> 00:04:38,770
our authenticated users one of the best

00:04:37,360 --> 00:04:41,020
practices is it's great to actually

00:04:38,770 --> 00:04:43,180
create a entry point for authenticated

00:04:41,020 --> 00:04:45,759
users like these are the things I can

00:04:43,180 --> 00:04:48,610
query or I can do as a logged in user of

00:04:45,759 --> 00:04:49,840
my product right and this now experience

00:04:48,610 --> 00:04:52,689
is something that can be delivered and

00:04:49,840 --> 00:04:54,699
shared across the iOS the Android the

00:04:52,689 --> 00:04:58,150
web teams and various new client

00:04:54,699 --> 00:05:00,129
applications your graph really should

00:04:58,150 --> 00:05:02,469
evolve based off of those client use

00:05:00,129 --> 00:05:04,300
cases right so you're gonna have a new

00:05:02,469 --> 00:05:06,219
feature you might need to add new fields

00:05:04,300 --> 00:05:07,930
to your graph does that mean should we

00:05:06,219 --> 00:05:11,340
should add like the whole model from our

00:05:07,930 --> 00:05:13,840
database to the graph probably not right

00:05:11,340 --> 00:05:16,090
we should also be providing a schema

00:05:13,840 --> 00:05:19,539
that really conforms the needs of our

00:05:16,090 --> 00:05:21,430
consumers so again our schema is this

00:05:19,539 --> 00:05:23,409
opportunity to provide a rich product

00:05:21,430 --> 00:05:25,449
experience so we really want to be

00:05:23,409 --> 00:05:27,819
providing a schema that allows our

00:05:25,449 --> 00:05:30,310
clients to consume data without heavily

00:05:27,819 --> 00:05:30,669
manipulating that data big thing about

00:05:30,310 --> 00:05:34,839
that

00:05:30,669 --> 00:05:36,190
like think of filtering of lists and

00:05:34,839 --> 00:05:38,680
lastly we really should be turning off

00:05:36,190 --> 00:05:41,139
introspection in production this is a

00:05:38,680 --> 00:05:42,759
best practice and something that's

00:05:41,139 --> 00:05:44,560
usually enabled by a team having

00:05:42,759 --> 00:05:46,569
something like a centralized place for

00:05:44,560 --> 00:05:49,060
their schema and that centralized scheme

00:05:46,569 --> 00:05:51,969
powers their tooling pieces of their

00:05:49,060 --> 00:05:53,710
infrastructure and of course there are

00:05:51,969 --> 00:05:56,159
some use cases where like if you have

00:05:53,710 --> 00:05:58,509
public partner usage you may need to use

00:05:56,159 --> 00:06:00,339
introspection for those but if you only

00:05:58,509 --> 00:06:03,580
have internal usage definitely want to

00:06:00,339 --> 00:06:05,289
have that off in production so let's

00:06:03,580 --> 00:06:08,379
start out and dive into this and start

00:06:05,289 --> 00:06:11,319
with that identity piece so it's really

00:06:08,379 --> 00:06:12,370
not anything different to graph QL we're

00:06:11,319 --> 00:06:14,830
going to be using a lot of the same

00:06:12,370 --> 00:06:17,169
things from the past right we don't want

00:06:14,830 --> 00:06:19,300
to necessarily have our clients

00:06:17,169 --> 00:06:22,089
providing the identity of the user as

00:06:19,300 --> 00:06:24,639
inputs into our graph we really want to

00:06:22,089 --> 00:06:26,560
be having that come from a central

00:06:24,639 --> 00:06:27,879
authorization token right you have an

00:06:26,560 --> 00:06:29,529
access token that's going to come in

00:06:27,879 --> 00:06:33,129
that should get the identity of the user

00:06:29,529 --> 00:06:34,959
and if we have a user entry point it's

00:06:33,129 --> 00:06:36,520
really nice because now that access

00:06:34,959 --> 00:06:38,949
token scopes the identity of the user

00:06:36,520 --> 00:06:39,560
now we have scoped what a logged in

00:06:38,949 --> 00:06:41,510
authenticate

00:06:39,560 --> 00:06:43,220
user can do so this is a common pattern

00:06:41,510 --> 00:06:49,010
we see a lot of different organizations

00:06:43,220 --> 00:06:50,870
use now another thing as we're adding to

00:06:49,010 --> 00:06:54,139
our schema I mentioned do you want to

00:06:50,870 --> 00:06:56,330
add potentially half our room just one

00:06:54,139 --> 00:07:00,110
out I don't know if that's a thing but

00:06:56,330 --> 00:07:01,780
okay cool yeah so you don't want to

00:07:00,110 --> 00:07:04,550
prematurely add things to your schema

00:07:01,780 --> 00:07:06,440
you know if this room was graphical

00:07:04,550 --> 00:07:07,820
right now obviously that part of the

00:07:06,440 --> 00:07:09,740
schema wasn't ready for consumption

00:07:07,820 --> 00:07:12,740
right so you know want just prematurely

00:07:09,740 --> 00:07:14,000
add digs but I think a really good

00:07:12,740 --> 00:07:16,040
example is you may have a new feature

00:07:14,000 --> 00:07:17,630
right and that it started out with we

00:07:16,040 --> 00:07:19,580
had to add this new table to our

00:07:17,630 --> 00:07:21,560
database or our datasource

00:07:19,580 --> 00:07:23,450
right and then when we hooked that

00:07:21,560 --> 00:07:24,979
datasource into our graph layer we have

00:07:23,450 --> 00:07:27,020
the tendency to maybe take that whole

00:07:24,979 --> 00:07:28,880
model put that whole model on the graph

00:07:27,020 --> 00:07:31,190
and you really want to avoid that

00:07:28,880 --> 00:07:33,350
because like for example a reference to

00:07:31,190 --> 00:07:34,820
an ID of like another thing is never

00:07:33,350 --> 00:07:36,650
actually gonna be used by the clients

00:07:34,820 --> 00:07:40,370
it's only gonna be used for another

00:07:36,650 --> 00:07:43,220
round-trip request so for example at

00:07:40,370 --> 00:07:45,229
Apollo we have Apollo organizations we

00:07:43,220 --> 00:07:48,500
just recently introduced and we had this

00:07:45,229 --> 00:07:51,200
feature of inviting a member right so as

00:07:48,500 --> 00:07:53,240
we added that into our product we really

00:07:51,200 --> 00:07:55,820
had to add that into our graph so what

00:07:53,240 --> 00:07:58,280
was the mutation we had to add the

00:07:55,820 --> 00:08:00,770
invite field onto our account mutation

00:07:58,280 --> 00:08:02,810
type and that allowed us to really

00:08:00,770 --> 00:08:04,850
evolve our graph along with that feature

00:08:02,810 --> 00:08:08,870
so we really want to evolve our graph

00:08:04,850 --> 00:08:10,010
with our use cases and our features now

00:08:08,870 --> 00:08:12,470
the other thing is we don't want to use

00:08:10,010 --> 00:08:13,639
introspection a powered organization how

00:08:12,470 --> 00:08:15,530
many people in this room use

00:08:13,639 --> 00:08:18,190
introspection to power their tooling and

00:08:15,530 --> 00:08:18,190
in some way

00:08:19,630 --> 00:08:25,670
brave souls brave souls I think there's

00:08:23,900 --> 00:08:28,040
a lot more people that are doing some

00:08:25,670 --> 00:08:30,260
introspection I find it's pretty common

00:08:28,040 --> 00:08:31,490
and it's a great thing that you start

00:08:30,260 --> 00:08:33,590
out with but once you move into

00:08:31,490 --> 00:08:36,349
production you want to be thinking about

00:08:33,590 --> 00:08:37,550
things a little bit differently and so

00:08:36,349 --> 00:08:40,520
really this is where you want to have

00:08:37,550 --> 00:08:42,950
some central place to have your schema

00:08:40,520 --> 00:08:44,120
maybe you're using schema stitching well

00:08:42,950 --> 00:08:45,890
when you're seeing the stitching gateway

00:08:44,120 --> 00:08:48,800
starts up what happens if one of those

00:08:45,890 --> 00:08:49,940
downstream services is down his respect

00:08:48,800 --> 00:08:51,950
is gonna work you're gonna have your

00:08:49,940 --> 00:08:53,270
Gateway fall over right so no matter

00:08:51,950 --> 00:08:54,830
what you're gonna need this central

00:08:53,270 --> 00:08:57,050
place to have everything in your

00:08:54,830 --> 00:08:58,670
organization point for where your schema

00:08:57,050 --> 00:09:05,060
is right the schema that powers your

00:08:58,670 --> 00:09:06,440
organization and of course if you're

00:09:05,060 --> 00:09:07,700
using Apollo server a lot of people

00:09:06,440 --> 00:09:09,140
don't know this but if you set node

00:09:07,700 --> 00:09:11,570
environment variables to production

00:09:09,140 --> 00:09:14,210
it'll actually disable introspection and

00:09:11,570 --> 00:09:15,560
graph kill playground by default so some

00:09:14,210 --> 00:09:19,760
little things build and Apollo server to

00:09:15,560 --> 00:09:21,200
automatically do that for you now one of

00:09:19,760 --> 00:09:23,450
the other things that's available in our

00:09:21,200 --> 00:09:25,339
platform we saw a lot of different

00:09:23,450 --> 00:09:28,010
organizations building out different

00:09:25,339 --> 00:09:29,420
pieces of their infrastructure really to

00:09:28,010 --> 00:09:31,790
support being able to turn off

00:09:29,420 --> 00:09:32,810
introspection in production and you know

00:09:31,790 --> 00:09:34,700
I mentioned some of things around

00:09:32,810 --> 00:09:36,920
whether it's a schema stitch gateway or

00:09:34,700 --> 00:09:41,089
just trying to have more teams consume

00:09:36,920 --> 00:09:42,980
the graph so with Apollo graph manager

00:09:41,089 --> 00:09:45,589
we have a schema registry built into it

00:09:42,980 --> 00:09:48,020
you can use the Apollo CLI to actually

00:09:45,589 --> 00:09:50,540
interact with that so Apollo service

00:09:48,020 --> 00:09:53,240
push actually takes any graph QL spec

00:09:50,540 --> 00:09:55,520
compliant schema pushes that into the

00:09:53,240 --> 00:09:58,430
registry and we even have a way to

00:09:55,520 --> 00:10:01,850
manage various environments so maybe

00:09:58,430 --> 00:10:04,460
like development QA production all of

00:10:01,850 --> 00:10:07,640
that can be in there and what's really

00:10:04,460 --> 00:10:09,920
cool is we also have a polygraph manager

00:10:07,640 --> 00:10:11,540
as a dashboard and we have a schema

00:10:09,920 --> 00:10:15,080
Explorer which is like a visual

00:10:11,540 --> 00:10:16,339
representation of that schema and this

00:10:15,080 --> 00:10:18,110
is where we can start seeing really

00:10:16,339 --> 00:10:20,120
interesting information like maybe

00:10:18,110 --> 00:10:22,160
deprecated fields how they're actually

00:10:20,120 --> 00:10:24,890
being used by our client applications

00:10:22,160 --> 00:10:27,380
and this should also power our tooling

00:10:24,890 --> 00:10:29,209
so we have an Apollo vs code extension

00:10:27,380 --> 00:10:30,760
that actually can hook up to the central

00:10:29,209 --> 00:10:31,980
schema registry you

00:10:30,760 --> 00:10:34,660
notice that you're getting things like

00:10:31,980 --> 00:10:37,270
intellisense type completion you can see

00:10:34,660 --> 00:10:39,970
on the screen we get instant feedback

00:10:37,270 --> 00:10:41,560
whether that's validation errors or even

00:10:39,970 --> 00:10:44,560
just there's a deprecated field I'm

00:10:41,560 --> 00:10:48,040
using and we even get timing data on

00:10:44,560 --> 00:10:51,070
fields and types of queries that valid

00:10:48,040 --> 00:10:52,720
traces within a polygraph manager so a

00:10:51,070 --> 00:10:54,460
lot of really rich cool stuff and I

00:10:52,720 --> 00:10:56,200
really think this is part of the

00:10:54,460 --> 00:10:57,790
developer experience we want to be

00:10:56,200 --> 00:11:00,580
delivering with graphic UL to our

00:10:57,790 --> 00:11:02,230
developers if you really like what

00:11:00,580 --> 00:11:03,070
you're seeing here if you didn't get a

00:11:02,230 --> 00:11:05,110
chance to talk

00:11:03,070 --> 00:11:06,550
check out daniel man's talk she goes

00:11:05,110 --> 00:11:08,050
into a lot more detail of really also

00:11:06,550 --> 00:11:09,610
you can just like this client developer

00:11:08,050 --> 00:11:15,010
experience i would check out that

00:11:09,610 --> 00:11:17,380
recording when it comes out now we

00:11:15,010 --> 00:11:19,510
talked about like making your clients do

00:11:17,380 --> 00:11:22,260
extra work and i think one of the big

00:11:19,510 --> 00:11:25,180
things here i've seen a lot of teams

00:11:22,260 --> 00:11:27,100
build out a lot of client code of how to

00:11:25,180 --> 00:11:29,040
like handling this filtering or

00:11:27,100 --> 00:11:31,990
manipulation of data on the client and

00:11:29,040 --> 00:11:34,000
graph QL is really this opportunity for

00:11:31,990 --> 00:11:36,340
us to move our business logic up in the

00:11:34,000 --> 00:11:38,860
server and really start giving our

00:11:36,340 --> 00:11:40,840
clients exactly the experience that they

00:11:38,860 --> 00:11:43,030
want so like here's something

00:11:40,840 --> 00:11:45,070
everybody's seen right building a

00:11:43,030 --> 00:11:46,780
filtering list on my website right

00:11:45,070 --> 00:11:48,550
you're gonna have all these different

00:11:46,780 --> 00:11:50,680
criterias and you don't want to

00:11:48,550 --> 00:11:51,910
necessarily be building client code so

00:11:50,680 --> 00:11:53,860
like every time one of these filters

00:11:51,910 --> 00:11:56,020
gets checked it's doing something on the

00:11:53,860 --> 00:11:58,540
client because if we do that for our

00:11:56,020 --> 00:12:00,940
website then the iOS team does it and

00:11:58,540 --> 00:12:02,530
then the android team does it and then

00:12:00,940 --> 00:12:04,210
the next team has another client app

00:12:02,530 --> 00:12:05,620
that crosses over some of the same data

00:12:04,210 --> 00:12:07,540
sets and then they're building their own

00:12:05,620 --> 00:12:08,800
solution and now we have this technical

00:12:07,540 --> 00:12:11,950
debt that everyone just start building

00:12:08,800 --> 00:12:14,410
up so really what we should be doing is

00:12:11,950 --> 00:12:16,900
we should be having some input variables

00:12:14,410 --> 00:12:18,910
that provide filtering criteria that

00:12:16,900 --> 00:12:21,730
provides our clients exactly what they

00:12:18,910 --> 00:12:24,040
need right that doesn't mean we build a

00:12:21,730 --> 00:12:25,870
arbitrary set of you know filtering

00:12:24,040 --> 00:12:27,580
criteria and we just put it all on the

00:12:25,870 --> 00:12:29,560
graph we should really be working with

00:12:27,580 --> 00:12:31,330
our client teams and finding out what

00:12:29,560 --> 00:12:33,430
exactly are we trying to deliver as a

00:12:31,330 --> 00:12:35,200
product experience how do we give the

00:12:33,430 --> 00:12:38,260
client team that exact data so they

00:12:35,200 --> 00:12:40,840
don't have to manipulate it right this

00:12:38,260 --> 00:12:43,640
gives a consistent experience across our

00:12:40,840 --> 00:12:45,019
graph to all the client teams developing

00:12:43,640 --> 00:12:47,120
all right so this is where we start

00:12:45,019 --> 00:12:50,660
getting even more and more power with

00:12:47,120 --> 00:12:52,250
our graph now let's quickly review all

00:12:50,660 --> 00:12:54,260
those things again for the schema right

00:12:52,250 --> 00:12:55,880
so we talked about creating a user entry

00:12:54,260 --> 00:12:59,149
point all right what can I do as an

00:12:55,880 --> 00:13:01,640
authenticated scoped user we want to

00:12:59,149 --> 00:13:03,860
evolve our graph based off of how our

00:13:01,640 --> 00:13:05,420
use cases and really I think about how's

00:13:03,860 --> 00:13:06,680
your product evolving that's how your

00:13:05,420 --> 00:13:09,230
scheme and your graph should evolve it

00:13:06,680 --> 00:13:11,240
should be very fluid you also want to

00:13:09,230 --> 00:13:12,980
provide a schema that really doesn't

00:13:11,240 --> 00:13:14,990
cause your clients to manipulate that

00:13:12,980 --> 00:13:17,420
data give them exactly what they need

00:13:14,990 --> 00:13:19,550
what they want that's what we really got

00:13:17,420 --> 00:13:21,170
in a graphical about and make sure

00:13:19,550 --> 00:13:22,700
you're turning off introspection in

00:13:21,170 --> 00:13:26,060
production especially if you're only

00:13:22,700 --> 00:13:28,579
have internal client usage right we want

00:13:26,060 --> 00:13:30,529
to really see who's using our graph how

00:13:28,579 --> 00:13:32,269
they're using our graph and make sure we

00:13:30,529 --> 00:13:34,399
just don't give the whole world our

00:13:32,269 --> 00:13:39,500
whole graph if there's not a need for

00:13:34,399 --> 00:13:44,029
that now we kind of covered schema best

00:13:39,500 --> 00:13:45,920
practices but what about operations how

00:13:44,029 --> 00:13:48,709
many people in the room have some sort

00:13:45,920 --> 00:13:52,880
of standards around operations at their

00:13:48,709 --> 00:13:54,740
organization team project whatever yeah

00:13:52,880 --> 00:13:57,019
that's that's the number I was thinking

00:13:54,740 --> 00:13:59,290
it's not that many and what I find is

00:13:57,019 --> 00:14:01,370
operations typically is a thing that

00:13:59,290 --> 00:14:02,990
becomes a thought later on in the

00:14:01,370 --> 00:14:04,910
project right you're doing this kind of

00:14:02,990 --> 00:14:07,600
fast proof of concept you're moving fast

00:14:04,910 --> 00:14:10,430
and things just kind of get ahead of you

00:14:07,600 --> 00:14:12,949
and then it starts to become a little

00:14:10,430 --> 00:14:14,240
bit like the Wild West right and one of

00:14:12,949 --> 00:14:17,060
the things I think as big as graph gals

00:14:14,240 --> 00:14:19,070
that network effect so one story I

00:14:17,060 --> 00:14:21,589
always like to tell you know at Apollo

00:14:19,070 --> 00:14:24,620
when I first started like a year and a

00:14:21,589 --> 00:14:27,170
half or more ago I started out working

00:14:24,620 --> 00:14:28,459
with a lot of our customers and I had to

00:14:27,170 --> 00:14:29,810
really understand how they were using

00:14:28,459 --> 00:14:32,060
our product and all this stuff and we

00:14:29,810 --> 00:14:34,220
had this graph of all this data so I

00:14:32,060 --> 00:14:35,420
started writing scripts of like I don't

00:14:34,220 --> 00:14:37,070
know I need to figure out what's going

00:14:35,420 --> 00:14:38,839
on so my customers and what's going on

00:14:37,070 --> 00:14:40,190
and like after about a week of doing

00:14:38,839 --> 00:14:42,110
that all sudden the engineering team was

00:14:40,190 --> 00:14:44,890
like what's this unidentified client

00:14:42,110 --> 00:14:47,690
that's naming all their operations CES -

00:14:44,890 --> 00:14:49,490
right and you're gonna have people that

00:14:47,690 --> 00:14:50,959
just start consuming your graph in ways

00:14:49,490 --> 00:14:53,420
just because they found out about it and

00:14:50,959 --> 00:14:54,890
you might not know that and really by

00:14:53,420 --> 00:14:56,149
setting these standards of for

00:14:54,890 --> 00:14:57,589
operations in the beginning

00:14:56,149 --> 00:15:00,999
you're gonna start to see that and know

00:14:57,589 --> 00:15:02,870
about that right from the get-go so

00:15:00,999 --> 00:15:04,970
operations are really about

00:15:02,870 --> 00:15:07,730
understanding and identifying the

00:15:04,970 --> 00:15:09,829
dependencies of your graph right they

00:15:07,730 --> 00:15:11,899
help you understand those dynamic use

00:15:09,829 --> 00:15:14,660
cases and even how something like

00:15:11,899 --> 00:15:16,839
potentially a user evolves over time

00:15:14,660 --> 00:15:19,040
right those operations you have

00:15:16,839 --> 00:15:20,689
typically are growing and evolving over

00:15:19,040 --> 00:15:22,970
time as you're adding in more features

00:15:20,689 --> 00:15:25,790
more fields more information onto your

00:15:22,970 --> 00:15:27,920
graph so you want to create consistency

00:15:25,790 --> 00:15:29,660
across your graph right and that means

00:15:27,920 --> 00:15:31,579
we need to create some type of standard

00:15:29,660 --> 00:15:33,889
for naming our operations and it could

00:15:31,579 --> 00:15:36,379
be really simple really really simple it

00:15:33,889 --> 00:15:37,730
doesn't need to be anything crazy

00:15:36,379 --> 00:15:39,829
we should really make sure our

00:15:37,730 --> 00:15:42,199
operations work before we ship anything

00:15:39,829 --> 00:15:43,819
to production it's kind of like you know

00:15:42,199 --> 00:15:47,149
we do that with everything else we

00:15:43,819 --> 00:15:48,529
should do that with graph Gail - um we

00:15:47,149 --> 00:15:51,230
also need to make sure we understand

00:15:48,529 --> 00:15:52,850
who's consuming our graph you know I

00:15:51,230 --> 00:15:55,550
think one of the most common things I

00:15:52,850 --> 00:15:57,230
see is like a team builds a graph Gill

00:15:55,550 --> 00:15:58,519
server because they want to you know

00:15:57,230 --> 00:16:00,199
move faster on the client development

00:15:58,519 --> 00:16:01,999
team and it just starts out with them

00:16:00,199 --> 00:16:04,129
consuming it but once you move to more

00:16:01,999 --> 00:16:05,720
client applications consuming it you

00:16:04,129 --> 00:16:07,519
really want to be attaching the name and

00:16:05,720 --> 00:16:09,910
version of those clients to the trace

00:16:07,519 --> 00:16:12,290
operations for your observability stack

00:16:09,910 --> 00:16:14,120
and you know that's really important

00:16:12,290 --> 00:16:16,129
because I mentioned those operations are

00:16:14,120 --> 00:16:17,629
gonna evolve and grow over time and

00:16:16,129 --> 00:16:19,759
you're gonna wanna understand from

00:16:17,629 --> 00:16:22,069
version one to version two how the

00:16:19,759 --> 00:16:24,379
addition of three new fields into that

00:16:22,069 --> 00:16:26,029
operation impacted the performance so

00:16:24,379 --> 00:16:29,360
our graph evolved some changes we

00:16:26,029 --> 00:16:31,790
understand what's going on right now

00:16:29,360 --> 00:16:34,819
when it comes to naming operations don't

00:16:31,790 --> 00:16:37,100
do nothing right and that seems a little

00:16:34,819 --> 00:16:38,689
weird you know don't do nothing but you

00:16:37,100 --> 00:16:39,860
know the main point there is you're

00:16:38,689 --> 00:16:40,939
gonna have just the Wild West if you

00:16:39,860 --> 00:16:44,360
don't do anything you have to do

00:16:40,939 --> 00:16:47,360
something right and I think at its core

00:16:44,360 --> 00:16:48,860
fundamental level right at least name

00:16:47,360 --> 00:16:50,269
your operations because if we don't name

00:16:48,860 --> 00:16:51,620
our operations you're gonna have some

00:16:50,269 --> 00:16:53,420
people that don't name their operations

00:16:51,620 --> 00:16:55,939
and others that do and you're gonna have

00:16:53,420 --> 00:16:58,790
this kind of weird view and your

00:16:55,939 --> 00:17:01,639
observability stack right so we want to

00:16:58,790 --> 00:17:03,379
create some standard and we also want to

00:17:01,639 --> 00:17:05,240
just make that simple and selling it

00:17:03,379 --> 00:17:07,010
make sense of the organization so for

00:17:05,240 --> 00:17:08,799
example at Apollo we essentially have

00:17:07,010 --> 00:17:10,199
two types of consumptions of the graph

00:17:08,799 --> 00:17:12,299
services that have

00:17:10,199 --> 00:17:14,639
you eye aspect to it services that don't

00:17:12,299 --> 00:17:16,980
write like a CLI maybe some other

00:17:14,639 --> 00:17:19,799
internal tooling things like that so we

00:17:16,980 --> 00:17:21,209
just prefix UI - on the front of our

00:17:19,799 --> 00:17:24,029
query operations that's coming from our

00:17:21,209 --> 00:17:26,339
UI super simple and everything has to be

00:17:24,029 --> 00:17:29,700
named there are also other organizations

00:17:26,339 --> 00:17:31,679
like Airbnb where the base tooling they

00:17:29,700 --> 00:17:34,470
provide to new developers everything

00:17:31,679 --> 00:17:36,570
requires everything is named operations

00:17:34,470 --> 00:17:38,250
so your tooling will actually fail to

00:17:36,570 --> 00:17:40,889
build if you don't have your operations

00:17:38,250 --> 00:17:42,960
named I think is a good thing that's

00:17:40,889 --> 00:17:44,309
maybe a step further but you can at

00:17:42,960 --> 00:17:48,929
least start out as a minimum with just

00:17:44,309 --> 00:17:51,690
these standards now we don't want a shot

00:17:48,929 --> 00:17:54,269
at ship any operations of production

00:17:51,690 --> 00:17:56,370
blind right how many people have tests

00:17:54,269 --> 00:18:00,539
written for all their operations inside

00:17:56,370 --> 00:18:04,860
of their client project I hate writing

00:18:00,539 --> 00:18:06,090
tests - so you know one of the big

00:18:04,860 --> 00:18:07,320
things about this is you're probably

00:18:06,090 --> 00:18:09,630
gonna need something that's gonna auto

00:18:07,320 --> 00:18:12,000
automate that and really if you're gonna

00:18:09,630 --> 00:18:13,919
have that centralised schema registry

00:18:12,000 --> 00:18:15,179
you want to really be validating against

00:18:13,919 --> 00:18:16,200
that right we just talked about how

00:18:15,179 --> 00:18:19,799
we're going to be moving off of

00:18:16,200 --> 00:18:21,450
introspection if you're using the Apollo

00:18:19,799 --> 00:18:24,299
platform and that centralized schema

00:18:21,450 --> 00:18:26,580
registry our CLI tooling allows you to

00:18:24,299 --> 00:18:28,169
for example use Apollo client check I'll

00:18:26,580 --> 00:18:31,139
extract out all the query operations

00:18:28,169 --> 00:18:33,389
whether it's a mobile project or a web

00:18:31,139 --> 00:18:36,029
client project and then it will validate

00:18:33,389 --> 00:18:37,950
that against that registry so just a

00:18:36,029 --> 00:18:39,870
nice way to have in your CI CD pipeline

00:18:37,950 --> 00:18:43,200
a way to validate all of those things

00:18:39,870 --> 00:18:45,149
out and what's also cool is if you're

00:18:43,200 --> 00:18:46,710
using like typescript Daniel talks even

00:18:45,149 --> 00:18:48,659
a little bit more about this in her talk

00:18:46,710 --> 00:18:50,429
but you can also generate out your type

00:18:48,659 --> 00:18:52,320
stuff that centralized schema registry

00:18:50,429 --> 00:18:54,809
right so you can kind of start to see

00:18:52,320 --> 00:18:57,570
where the metadata of our schema our

00:18:54,809 --> 00:18:58,769
graph starting to power or tooling and

00:18:57,570 --> 00:19:02,970
that's what we really want to start

00:18:58,769 --> 00:19:04,590
achieving now the next thing is we don't

00:19:02,970 --> 00:19:06,870
want to lose visibility of who's

00:19:04,590 --> 00:19:09,600
consuming our graph right so I mentioned

00:19:06,870 --> 00:19:11,399
it might be that one team first use case

00:19:09,600 --> 00:19:13,230
might have hundreds of clients right now

00:19:11,399 --> 00:19:15,080
it's a really important understanding

00:19:13,230 --> 00:19:16,769
you know who's using our graph why

00:19:15,080 --> 00:19:19,559
because like when are we gonna

00:19:16,769 --> 00:19:21,020
deprecated fields on our graph like when

00:19:19,559 --> 00:19:24,440
can we actually delete the DEF

00:19:21,020 --> 00:19:25,790
kated field how many people use like are

00:19:24,440 --> 00:19:27,830
actually deprecated fields on their

00:19:25,790 --> 00:19:29,809
graph okay

00:19:27,830 --> 00:19:31,190
good amount of people how many people

00:19:29,809 --> 00:19:32,870
feel super confident when they're

00:19:31,190 --> 00:19:36,380
deleting that deprecated field off their

00:19:32,870 --> 00:19:38,150
graph that's like very few people right

00:19:36,380 --> 00:19:39,410
and a lot of times the people that feel

00:19:38,150 --> 00:19:41,840
comfortable they're like yeah we're a

00:19:39,410 --> 00:19:44,660
full-stack team in a monolith it's like

00:19:41,840 --> 00:19:46,160
yeah okay yeah that that makes sense

00:19:44,660 --> 00:19:47,570
right but when you have like a

00:19:46,160 --> 00:19:49,280
distributed architecture you have

00:19:47,570 --> 00:19:51,740
multiple teams with multiple client

00:19:49,280 --> 00:19:53,900
applications just gets a little bit more

00:19:51,740 --> 00:19:56,660
than that right and this is why we want

00:19:53,900 --> 00:19:58,400
to attach client identity to every

00:19:56,660 --> 00:20:00,559
single one of those trace operations

00:19:58,400 --> 00:20:02,179
right so we can really understand when

00:20:00,559 --> 00:20:06,620
we can start deprecating those fields

00:20:02,179 --> 00:20:08,390
who's using our graph how if you're

00:20:06,620 --> 00:20:09,830
using Apollo client one of the things

00:20:08,390 --> 00:20:11,420
that automatically happens is we have a

00:20:09,830 --> 00:20:13,460
name inversion in the Apollo client

00:20:11,420 --> 00:20:15,500
constructor that'll automatically

00:20:13,460 --> 00:20:18,320
translate to to known header values

00:20:15,500 --> 00:20:20,740
that'll be set as with every graphical

00:20:18,320 --> 00:20:22,880
operation right so this is a way in your

00:20:20,740 --> 00:20:24,950
observability stack you're now going to

00:20:22,880 --> 00:20:28,280
have the client identity coming in

00:20:24,950 --> 00:20:30,230
through the headers of every request and

00:20:28,280 --> 00:20:31,640
if you use Apollo server it looks for

00:20:30,230 --> 00:20:33,620
those known header values and it

00:20:31,640 --> 00:20:37,010
actually attaches that client in you to

00:20:33,620 --> 00:20:38,690
every trace operation so you can see how

00:20:37,010 --> 00:20:40,190
these things work together but the main

00:20:38,690 --> 00:20:41,420
point is you should really be

00:20:40,190 --> 00:20:43,309
understanding the clients that are

00:20:41,420 --> 00:20:47,870
consuming your graph and having on your

00:20:43,309 --> 00:20:48,980
observer ability stack all right so

00:20:47,870 --> 00:20:50,570
let's quickly review all those

00:20:48,980 --> 00:20:52,760
operations best practices because I

00:20:50,570 --> 00:20:55,100
think I really really think operations

00:20:52,760 --> 00:20:56,690
is one of the places where every single

00:20:55,100 --> 00:20:59,210
person in this room can take one or two

00:20:56,690 --> 00:21:01,220
things from this go back to the office

00:20:59,210 --> 00:21:03,200
on Friday or Monday and implement it and

00:21:01,220 --> 00:21:05,360
have your graph be better you can all be

00:21:03,200 --> 00:21:06,559
champions of this right so create a

00:21:05,360 --> 00:21:08,360
naming standard if you don't have a

00:21:06,559 --> 00:21:10,250
naming standard you literally just have

00:21:08,360 --> 00:21:11,720
to write a doc that's like creates a

00:21:10,250 --> 00:21:13,970
standard and give it to your boss and

00:21:11,720 --> 00:21:16,010
you're gonna be like oh man it's taking

00:21:13,970 --> 00:21:18,110
initiative right so like if you don't

00:21:16,010 --> 00:21:19,370
have that does just do that all right

00:21:18,110 --> 00:21:21,350
start with something simple like you can

00:21:19,370 --> 00:21:24,230
even just take what Apollo did write put

00:21:21,350 --> 00:21:26,510
UI in front of it and call it a day

00:21:24,230 --> 00:21:28,070
validate your graph kill operations and

00:21:26,510 --> 00:21:30,020
have a strategy to where that's in your

00:21:28,070 --> 00:21:31,940
CI CD pipeline right I mentioned like

00:21:30,020 --> 00:21:33,639
writing tests you know if you're gonna

00:21:31,940 --> 00:21:34,929
write a test for every query that you

00:21:33,639 --> 00:21:36,969
right like that's not gonna work you

00:21:34,929 --> 00:21:39,779
need to do some static analysis you need

00:21:36,969 --> 00:21:42,249
to have that inside your CI CD pipeline

00:21:39,779 --> 00:21:45,159
you want to attach the client name and

00:21:42,249 --> 00:21:46,899
version every operation right and that's

00:21:45,159 --> 00:21:49,869
really important for observability stack

00:21:46,899 --> 00:21:51,459
to understand how things evolve right to

00:21:49,869 --> 00:21:54,309
give you an idea of what it looks like

00:21:51,459 --> 00:21:58,119
you know when you're in this world this

00:21:54,309 --> 00:22:00,999
is an example of an operation so when we

00:21:58,119 --> 00:22:03,009
introduce Federation we introduced

00:22:00,999 --> 00:22:05,049
managed Federation we introduced the

00:22:03,009 --> 00:22:08,409
ability to do schema validation on

00:22:05,049 --> 00:22:10,599
pieces of your schema so partial schema

00:22:08,409 --> 00:22:12,820
validation and these are actually the

00:22:10,599 --> 00:22:15,309
operations inside of our code base that

00:22:12,820 --> 00:22:18,329
would do all that so I pulled these from

00:22:15,309 --> 00:22:22,119
holograph manager and you can see from

00:22:18,329 --> 00:22:24,429
2.18 to 2.20 how that operation changed

00:22:22,119 --> 00:22:25,989
now if you don't attach and client name

00:22:24,429 --> 00:22:28,119
inversion to your observability stack

00:22:25,989 --> 00:22:30,249
everything looks the same and someone's

00:22:28,119 --> 00:22:32,349
probably looking into a problem in

00:22:30,249 --> 00:22:34,179
performance when really it was oh the

00:22:32,349 --> 00:22:36,579
operation just grew right so even if

00:22:34,179 --> 00:22:38,259
that person spent five minutes looking

00:22:36,579 --> 00:22:40,419
at the operations to go figure all of

00:22:38,259 --> 00:22:42,249
that out that's something that we should

00:22:40,419 --> 00:22:44,379
be able to find out much quicker by just

00:22:42,249 --> 00:22:45,940
having that client identity naming our

00:22:44,379 --> 00:22:50,379
operations and understanding who's

00:22:45,940 --> 00:22:53,969
consuming our graph now to kind of sum

00:22:50,379 --> 00:22:56,079
everything up and put it on the screen I

00:22:53,969 --> 00:22:57,429
was gonna ask this at the end but I

00:22:56,079 --> 00:22:58,690
think off of some of the other hazards

00:22:57,429 --> 00:23:00,099
say how many people think they have all

00:22:58,690 --> 00:23:03,459
of these things implemented in their

00:23:00,099 --> 00:23:06,099
graph today and I see a lot of pictures

00:23:03,459 --> 00:23:07,749
so I don't think any one right so

00:23:06,099 --> 00:23:09,729
there's eight things on the screen right

00:23:07,749 --> 00:23:11,979
you can take one or two of those eight

00:23:09,729 --> 00:23:14,709
things and go back to the office on

00:23:11,979 --> 00:23:17,289
Friday or Monday put them in place be

00:23:14,709 --> 00:23:19,179
that data graph champion right let's all

00:23:17,289 --> 00:23:22,690
go back you got the practical do's and

00:23:19,179 --> 00:23:24,719
don'ts or best practices and let's all

00:23:22,690 --> 00:23:29,709
go back be data graph champions and

00:23:24,719 --> 00:23:31,539
let's all get a promotion right yeah now

00:23:29,709 --> 00:23:32,979
I want to thank everyone that I've had

00:23:31,539 --> 00:23:35,889
the opportunity to just work with and

00:23:32,979 --> 00:23:38,139
learn over my time just at Apollo and

00:23:35,889 --> 00:23:39,489
with the community you know and a big

00:23:38,139 --> 00:23:40,030
thanks to the community an everyone here

00:23:39,489 --> 00:23:42,040
I mean

00:23:40,030 --> 00:23:43,780
there all the learnings everything I'm

00:23:42,040 --> 00:23:45,280
summing you know I even see a lot of

00:23:43,780 --> 00:23:47,110
like the customers faces I've I've

00:23:45,280 --> 00:23:49,360
talked with over at the time in this

00:23:47,110 --> 00:23:51,070
room and we can all learn something from

00:23:49,360 --> 00:23:53,050
each other so another thing I'd really

00:23:51,070 --> 00:23:55,240
recommend talk to the person sitting

00:23:53,050 --> 00:23:56,920
next to you after this session talk with

00:23:55,240 --> 00:23:58,540
the people around you you're gonna learn

00:23:56,920 --> 00:23:59,020
a lot we all can learn a lot from each

00:23:58,540 --> 00:24:02,050
other

00:23:59,020 --> 00:24:03,370
mature graph QL more and really just

00:24:02,050 --> 00:24:06,940
thank you everyone for sharing your

00:24:03,370 --> 00:24:09,250
efforts I did this last year also I want

00:24:06,940 --> 00:24:11,770
to give a big thank you to my loving and

00:24:09,250 --> 00:24:14,470
supporting wife who is here to watch me

00:24:11,770 --> 00:24:16,840
she enables me to be able to make a talk

00:24:14,470 --> 00:24:19,690
like this by making sure I eat and

00:24:16,840 --> 00:24:22,870
giving me dinner and things like that so

00:24:19,690 --> 00:24:24,460
thank you as always and lastly we have a

00:24:22,870 --> 00:24:27,400
survey in the back feedback is really

00:24:24,460 --> 00:24:29,650
really important to Apollo I consider

00:24:27,400 --> 00:24:30,790
and we all consider Apollo the feedback

00:24:29,650 --> 00:24:33,670
from the community a gift

00:24:30,790 --> 00:24:36,160
so any comments about anything Apollo

00:24:33,670 --> 00:24:39,760
this talk me I was annoying whatever

00:24:36,160 --> 00:24:41,470
please would love to hear about it thank

00:24:39,760 --> 00:24:43,260
you everyone and let's go grab a beer a

00:24:41,470 --> 00:24:46,650
you know this Halloween party right

00:24:43,260 --> 00:24:46,650

YouTube URL: https://www.youtube.com/watch?v=fG8zy1OROp4


