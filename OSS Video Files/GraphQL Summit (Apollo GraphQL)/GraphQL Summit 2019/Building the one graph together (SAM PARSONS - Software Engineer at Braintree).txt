Title: Building the one graph together (SAM PARSONS - Software Engineer at Braintree)
Publication date: 2019-11-02
Playlist: GraphQL Summit 2019
Description: 
	SAP Concur is moving from multiple graphs to a unified graph and one of the greatest challenges we faced is the coordination needed between dozens of teams and product areas. I'll share the practices we used to strike a balance between creating a coherent graph and moving quickly.
Captions: 
	00:00:02,560 --> 00:00:09,080
all right can you all hear me loud and

00:00:06,559 --> 00:00:10,519
clear cool so hello I'm Sam Parsons

00:00:09,080 --> 00:00:12,889
really glad to be here thank you for

00:00:10,519 --> 00:00:14,749
coming and listening to my talk I'm a

00:00:12,889 --> 00:00:17,420
software engineer at Braintree and

00:00:14,749 --> 00:00:22,070
previously I led a team sa P concurred

00:00:17,420 --> 00:00:24,590
where we were working on graph QL so

00:00:22,070 --> 00:00:28,010
it's just a little bit about me

00:00:24,590 --> 00:00:29,630
so yeah let's build a one graph so what

00:00:28,010 --> 00:00:31,280
I want to do is kind of tell you a story

00:00:29,630 --> 00:00:33,440
about how he's involved in leading a

00:00:31,280 --> 00:00:37,250
team that was contributing to a 1 graph

00:00:33,440 --> 00:00:38,780
at a fairly large organization so most

00:00:37,250 --> 00:00:41,390
of you are aware and if you came to the

00:00:38,780 --> 00:00:43,340
big keynote first thing you know what a

00:00:41,390 --> 00:00:45,380
1 graph is it's actually the first

00:00:43,340 --> 00:00:47,300
principle from the principled graph so

00:00:45,380 --> 00:00:52,340
your company should have a 1 a unified

00:00:47,300 --> 00:00:54,050
graph instead of multiple graphs so this

00:00:52,340 --> 00:00:56,810
isn't really very unique as a this

00:00:54,050 --> 00:01:01,640
principle isn't unique to concur pretty

00:00:56,810 --> 00:01:03,860
common in our graph QL space so why you

00:01:01,640 --> 00:01:05,329
might ask have a 1 graph there's a lot

00:01:03,860 --> 00:01:06,740
of a lot of people writing about this

00:01:05,329 --> 00:01:10,100
but here's a couple of things that stand

00:01:06,740 --> 00:01:11,749
out to me and why they're useful so for

00:01:10,100 --> 00:01:14,319
one thing the schema and the resolvers

00:01:11,749 --> 00:01:16,969
are built once rather than being built

00:01:14,319 --> 00:01:19,100
repetitively throughout multiple graphs

00:01:16,969 --> 00:01:21,619
throughout an organization so if you

00:01:19,100 --> 00:01:23,539
imagine like say someone has requesting

00:01:21,619 --> 00:01:25,249
currency you don't have to build that in

00:01:23,539 --> 00:01:27,530
each of the graph supporting each of the

00:01:25,249 --> 00:01:30,200
apps supporting it you can bill at once

00:01:27,530 --> 00:01:31,729
and the other thing is the benefit on

00:01:30,200 --> 00:01:34,539
the client side you can access

00:01:31,729 --> 00:01:38,209
everything you need from one location so

00:01:34,539 --> 00:01:39,799
it seems to make sense right now there

00:01:38,209 --> 00:01:42,380
are a number of challenges in building a

00:01:39,799 --> 00:01:45,020
1 graph so I kind of think of these in

00:01:42,380 --> 00:01:48,200
two different groups one of the groups

00:01:45,020 --> 00:01:50,840
is if we think about like the technical

00:01:48,200 --> 00:01:53,259
side so do we have servers that we can

00:01:50,840 --> 00:01:55,249
scale up to build a big unified graph

00:01:53,259 --> 00:01:57,649
infrastructure around that scaling

00:01:55,249 --> 00:01:59,119
there's also a very big thing we talked

00:01:57,649 --> 00:02:02,779
about today earlier you've heard about

00:01:59,119 --> 00:02:04,669
Federation so how do we manage to gather

00:02:02,779 --> 00:02:07,609
all of those different parts of the

00:02:04,669 --> 00:02:09,259
graph and put them together and another

00:02:07,609 --> 00:02:10,579
nice thing that's kind of technical is a

00:02:09,259 --> 00:02:13,459
dev tool how do we make this nice and

00:02:10,579 --> 00:02:15,190
easy to use but there's another side of

00:02:13,459 --> 00:02:17,020
things

00:02:15,190 --> 00:02:18,850
for lack of a better term let's think

00:02:17,020 --> 00:02:21,550
about as the schema side of things so

00:02:18,850 --> 00:02:25,600
let's think about how do we map the

00:02:21,550 --> 00:02:28,720
business model into this unified graph

00:02:25,600 --> 00:02:30,430
QL schema how do we design that in a

00:02:28,720 --> 00:02:33,400
unified way that can represent the

00:02:30,430 --> 00:02:35,500
entire business not just one silo of it

00:02:33,400 --> 00:02:38,740
how do we construct the types that they

00:02:35,500 --> 00:02:42,250
can evolve over time and represent the

00:02:38,740 --> 00:02:43,360
business as a whole so there's a lot of

00:02:42,250 --> 00:02:46,630
tools for solving the technical

00:02:43,360 --> 00:02:49,660
challenges Paulo Federation some people

00:02:46,630 --> 00:02:51,340
just have like a monolith org-wide repo

00:02:49,660 --> 00:02:54,100
right if you're small enough maybe that

00:02:51,340 --> 00:02:55,300
makes sense what were you doing si be

00:02:54,100 --> 00:02:56,560
concurs we actually had something

00:02:55,300 --> 00:02:59,350
bespoke they combine multiple

00:02:56,560 --> 00:03:01,270
independent packages of types and

00:02:59,350 --> 00:03:04,180
resolvers together into one unified

00:03:01,270 --> 00:03:06,310
graph and again these are some some

00:03:04,180 --> 00:03:09,730
tools depending on your use case you may

00:03:06,310 --> 00:03:11,560
use something like those and I think as

00:03:09,730 --> 00:03:15,100
a community we've made some really great

00:03:11,560 --> 00:03:17,410
progress on the technical challenges but

00:03:15,100 --> 00:03:19,480
I think that's only half the problem the

00:03:17,410 --> 00:03:25,090
other part of the problem is still still

00:03:19,480 --> 00:03:26,790
out there so just to kind of paint the

00:03:25,090 --> 00:03:29,350
background a little bit for you so

00:03:26,790 --> 00:03:31,390
situation here sa pekin curve we have an

00:03:29,350 --> 00:03:33,760
organization-wide graph QL platform

00:03:31,390 --> 00:03:35,410
that's being built our vision of

00:03:33,760 --> 00:03:37,600
migrating all the existing graph QL

00:03:35,410 --> 00:03:39,220
already we had some different graphical

00:03:37,600 --> 00:03:44,680
services we want to migrate them all

00:03:39,220 --> 00:03:46,720
into one unified graph and that meant if

00:03:44,680 --> 00:03:49,180
we wanted to migrate those existing ones

00:03:46,720 --> 00:03:50,799
in there we actually can't begin from

00:03:49,180 --> 00:03:52,750
scratch we're actually gonna have some

00:03:50,799 --> 00:03:56,230
legacy graph QL so that's a constraint

00:03:52,750 --> 00:03:59,230
that we had we also have lots of teams

00:03:56,230 --> 00:04:01,510
and contributors so that means that you

00:03:59,230 --> 00:04:02,680
have to find some way to get to the same

00:04:01,510 --> 00:04:06,459
consensus about how you're going to

00:04:02,680 --> 00:04:08,140
build that for us we were not building a

00:04:06,459 --> 00:04:11,410
public graph we were building a private

00:04:08,140 --> 00:04:15,549
graph for our own internal or for our

00:04:11,410 --> 00:04:17,229
own public web and mobile clients so the

00:04:15,549 --> 00:04:19,959
addition of the mobile clients means

00:04:17,229 --> 00:04:22,570
that we have to have care around the

00:04:19,959 --> 00:04:24,250
non-additive changes to that graph so

00:04:22,570 --> 00:04:26,320
for example we don't want to break

00:04:24,250 --> 00:04:28,050
existing mobile apps when we change

00:04:26,320 --> 00:04:30,100
something to the graph

00:04:28,050 --> 00:04:35,670
so additive changes are fine

00:04:30,100 --> 00:04:38,410
non-additive ones can cause problems so

00:04:35,670 --> 00:04:42,730
what I'm gonna try and do now is kind of

00:04:38,410 --> 00:04:44,080
just talk through some of the some of

00:04:42,730 --> 00:04:48,010
the story about like what we actually

00:04:44,080 --> 00:04:49,480
did so early on when I was tasked with

00:04:48,010 --> 00:04:54,160
starting to contribute to this graph my

00:04:49,480 --> 00:04:56,260
team I realized that the most important

00:04:54,160 --> 00:04:58,810
thing is actually going to be the people

00:04:56,260 --> 00:05:00,460
and the connections with the people it's

00:04:58,810 --> 00:05:01,570
how we're the only way that we can

00:05:00,460 --> 00:05:03,190
possibly succeed

00:05:01,570 --> 00:05:05,380
we can't just solve this with a

00:05:03,190 --> 00:05:08,320
technical problem it's actually it's a

00:05:05,380 --> 00:05:11,260
people problem or people solution that

00:05:08,320 --> 00:05:13,150
we need so we have to build

00:05:11,260 --> 00:05:18,040
relationships we have to build a

00:05:13,150 --> 00:05:19,360
community and it may seem obvious but I

00:05:18,040 --> 00:05:22,810
think it's really important to realize

00:05:19,360 --> 00:05:25,060
that if you want to build a big unified

00:05:22,810 --> 00:05:27,370
graph for your organization it actually

00:05:25,060 --> 00:05:34,900
matters the people and the approach to

00:05:27,370 --> 00:05:36,010
building community so actually one of

00:05:34,900 --> 00:05:40,060
the things I wanted to mention quickly

00:05:36,010 --> 00:05:42,550
is like many big companies our domain is

00:05:40,060 --> 00:05:45,430
too big really for one person to

00:05:42,550 --> 00:05:47,530
understand it's too big for even one

00:05:45,430 --> 00:05:50,080
team to understand completely the domain

00:05:47,530 --> 00:05:52,510
it the business model takes

00:05:50,080 --> 00:05:54,250
understanding from a wide set of people

00:05:52,510 --> 00:05:56,830
so you need that community for that and

00:05:54,250 --> 00:05:58,150
you also have to think about the side

00:05:56,830 --> 00:06:00,460
effects to other people as you

00:05:58,150 --> 00:06:03,040
contribute to the graph and you have to

00:06:00,460 --> 00:06:04,380
think about looking into the future how

00:06:03,040 --> 00:06:07,090
can we build this in such a way that

00:06:04,380 --> 00:06:08,740
this is going to evolve well and that

00:06:07,090 --> 00:06:11,680
takes insight beyond your team so that's

00:06:08,740 --> 00:06:14,980
really some of the ways why it's

00:06:11,680 --> 00:06:17,140
important to take this approach so some

00:06:14,980 --> 00:06:18,520
of the steps that we took in building a

00:06:17,140 --> 00:06:19,690
community is gathering the community

00:06:18,520 --> 00:06:23,920
finding the other people at your

00:06:19,690 --> 00:06:25,540
organization that are going to be

00:06:23,920 --> 00:06:27,070
contributing to this graph and connect

00:06:25,540 --> 00:06:31,510
with them build the relationships that

00:06:27,070 --> 00:06:34,810
you need in order to start that start

00:06:31,510 --> 00:06:38,430
that community so this happened really

00:06:34,810 --> 00:06:41,500
pretty fluidly for us as if we concur we

00:06:38,430 --> 00:06:42,940
the early adopters of this unified graph

00:06:41,500 --> 00:06:45,430
to just meet we got to know each other

00:06:42,940 --> 00:06:49,450
video conversations and then we started

00:06:45,430 --> 00:06:52,420
meeting regularly and when you meet

00:06:49,450 --> 00:06:55,030
regularly what these are some things

00:06:52,420 --> 00:06:56,950
that I think really help us succeed so

00:06:55,030 --> 00:06:58,240
we always would allow anyone to

00:06:56,950 --> 00:07:00,460
contribute to the agenda

00:06:58,240 --> 00:07:03,400
we'd invite anybody to come we were

00:07:00,460 --> 00:07:05,230
meeting across not only time zones but

00:07:03,400 --> 00:07:07,780
multiple nations so we had people from

00:07:05,230 --> 00:07:09,070
Europe people from the US so we wanted

00:07:07,780 --> 00:07:11,460
to make this really easy for anybody

00:07:09,070 --> 00:07:14,020
anywhere we think encouraged to join and

00:07:11,460 --> 00:07:15,430
we tried to keep notes of what what was

00:07:14,020 --> 00:07:19,780
decided what was talked about and shared

00:07:15,430 --> 00:07:22,060
those with the wider community in

00:07:19,780 --> 00:07:24,070
addition to that you also want to create

00:07:22,060 --> 00:07:25,570
a space where that can take place so

00:07:24,070 --> 00:07:28,090
these are some of the things that we did

00:07:25,570 --> 00:07:31,000
is use slack you could use something

00:07:28,090 --> 00:07:33,540
like that to have that up-to-date sort

00:07:31,000 --> 00:07:36,790
of communication that you may want to do

00:07:33,540 --> 00:07:39,040
but also you want to keep track of

00:07:36,790 --> 00:07:40,510
things that are they last longer

00:07:39,040 --> 00:07:42,820
right so slack is not a great way to

00:07:40,510 --> 00:07:44,680
keep track of documentation so we also

00:07:42,820 --> 00:07:47,200
created a repository that we could use

00:07:44,680 --> 00:07:52,870
for keeping that the documentation and

00:07:47,200 --> 00:07:54,280
from the community so this was in

00:07:52,870 --> 00:07:59,290
general sort of our approach to

00:07:54,280 --> 00:08:01,990
community one things I haven't talked

00:07:59,290 --> 00:08:03,760
about yet is this this idea of breakout

00:08:01,990 --> 00:08:07,180
meetings for specific areas of the graph

00:08:03,760 --> 00:08:09,430
so in our area we had multiple products

00:08:07,180 --> 00:08:11,410
and those products would go across both

00:08:09,430 --> 00:08:14,680
web and mobile and so we gathered

00:08:11,410 --> 00:08:17,140
developers for individual product areas

00:08:14,680 --> 00:08:19,620
together across web and mobile across

00:08:17,140 --> 00:08:23,080
multiple teams and we were able then to

00:08:19,620 --> 00:08:25,710
focus really quite detailed on actually

00:08:23,080 --> 00:08:27,790
designing areas of that graph and

00:08:25,710 --> 00:08:30,160
discussing the challenges that were

00:08:27,790 --> 00:08:32,169
coming up and another thing we did was

00:08:30,160 --> 00:08:35,200
take workshops so we would take our team

00:08:32,169 --> 00:08:37,000
aside anybody could join and we would

00:08:35,200 --> 00:08:38,140
work on building consensus around

00:08:37,000 --> 00:08:41,229
different topics whether they were

00:08:38,140 --> 00:08:43,530
schema design topics or solving

00:08:41,229 --> 00:08:47,490
different problems that had come up on

00:08:43,530 --> 00:08:47,490
in building our graph together

00:08:48,800 --> 00:08:54,029
so the second thing I'm going to talk

00:08:52,170 --> 00:08:56,310
about is this idea of creating a shared

00:08:54,029 --> 00:08:58,949
vision and it's really almost as

00:08:56,310 --> 00:09:01,139
important as the approach to that people

00:08:58,949 --> 00:09:04,350
are the core of this is also

00:09:01,139 --> 00:09:07,980
understanding that we have we have to go

00:09:04,350 --> 00:09:09,990
in the same direction so we can drive

00:09:07,980 --> 00:09:11,699
towards the same goal only when we can

00:09:09,990 --> 00:09:14,149
understand describe that goal in the

00:09:11,699 --> 00:09:14,149
same way

00:09:21,410 --> 00:09:27,019
so for us a couple of the things that

00:09:24,949 --> 00:09:29,989
was really important was to try to

00:09:27,019 --> 00:09:33,859
remove the business logic that we had

00:09:29,989 --> 00:09:36,259
put inside of that ended up really

00:09:33,859 --> 00:09:38,720
inside of web clients or ended up inside

00:09:36,259 --> 00:09:40,909
of mobile clients and one of our goals

00:09:38,720 --> 00:09:43,609
why we were trying to do this was to

00:09:40,909 --> 00:09:46,429
push that down a layer get back so that

00:09:43,609 --> 00:09:48,799
that's consistent across all of our

00:09:46,429 --> 00:09:50,239
clients and another thing we wanted to

00:09:48,799 --> 00:09:52,759
do was to find a way that we can

00:09:50,239 --> 00:09:55,639
increase efficiency so how can we share

00:09:52,759 --> 00:09:57,679
this this business logic between

00:09:55,639 --> 00:10:01,489
multiple places how can we share them

00:09:57,679 --> 00:10:03,529
between web and mobile together so that

00:10:01,489 --> 00:10:05,689
was kind of a high level vision and that

00:10:03,529 --> 00:10:08,239
vision was cast to the community as a

00:10:05,689 --> 00:10:10,549
whole but I think there's a further

00:10:08,239 --> 00:10:13,009
question that also relates to vision and

00:10:10,549 --> 00:10:16,549
is that's can we create a shared vision

00:10:13,009 --> 00:10:20,659
of how we're going to do this so for us

00:10:16,549 --> 00:10:22,849
that that led to the evolution of work

00:10:20,659 --> 00:10:24,529
on some schema design guidelines to

00:10:22,849 --> 00:10:26,059
workshops on trying to get to the same

00:10:24,529 --> 00:10:28,879
place as far as how are we going to

00:10:26,059 --> 00:10:32,899
approach building this and working

00:10:28,879 --> 00:10:35,389
agreements between different teams so in

00:10:32,899 --> 00:10:38,720
our work so far on schema design

00:10:35,389 --> 00:10:41,629
guidelines these are some things that

00:10:38,720 --> 00:10:43,789
I've found are really helpful so you

00:10:41,629 --> 00:10:45,139
know you're on the right path if these

00:10:43,789 --> 00:10:47,119
things are in place so you're following

00:10:45,139 --> 00:10:48,619
the best practices of the wider

00:10:47,119 --> 00:10:50,929
graticule community so you don't want to

00:10:48,619 --> 00:10:53,059
be going down a different direction then

00:10:50,929 --> 00:10:55,519
there's there's some group wisdom that

00:10:53,059 --> 00:10:56,929
we're gathering together in graph QL you

00:10:55,519 --> 00:10:59,089
want to stay in tune with that and

00:10:56,929 --> 00:11:01,129
reflect that in your guidelines also

00:10:59,089 --> 00:11:02,839
though you want to be detailed enough to

00:11:01,129 --> 00:11:05,479
answer the questions of your

00:11:02,839 --> 00:11:09,229
contributors and they may come from non

00:11:05,479 --> 00:11:10,579
graph to L backgrounds and that may be a

00:11:09,229 --> 00:11:12,859
challenge there so you want to make sure

00:11:10,579 --> 00:11:15,019
that you're giving enough detail enough

00:11:12,859 --> 00:11:18,949
information that you can answer those

00:11:15,019 --> 00:11:20,299
questions and high level is this goal of

00:11:18,949 --> 00:11:23,239
trying to create a schema that is

00:11:20,299 --> 00:11:25,249
evolvable over time because the goal

00:11:23,239 --> 00:11:28,309
here is to get all of the clients on to

00:11:25,249 --> 00:11:31,069
this one unified graph we're going to

00:11:28,309 --> 00:11:33,829
need a way to evolve into change over

00:11:31,069 --> 00:11:36,370
time so that's another principle I think

00:11:33,829 --> 00:11:38,810
for success

00:11:36,370 --> 00:11:41,050
so I just kind of mentioned a couple of

00:11:38,810 --> 00:11:44,030
high-level guidelines and things that

00:11:41,050 --> 00:11:45,140
that we came to I'm not gonna get super

00:11:44,030 --> 00:11:47,420
in-depth because I think there's a lot

00:11:45,140 --> 00:11:51,830
of written documentation about this that

00:11:47,420 --> 00:11:53,510
I think could be useful for you but one

00:11:51,830 --> 00:11:55,460
of the high ones is preferring object

00:11:53,510 --> 00:11:59,120
types over simpler primitive built-in

00:11:55,460 --> 00:12:00,530
graphic UL types and that allows if

00:11:59,120 --> 00:12:04,370
you're using it for both input and

00:12:00,530 --> 00:12:06,170
response types it allows you to extend

00:12:04,370 --> 00:12:08,710
over time and so it's one of these

00:12:06,170 --> 00:12:11,390
principles of making it evolvable is to

00:12:08,710 --> 00:12:13,820
when you're kind of choosing early on to

00:12:11,390 --> 00:12:16,640
use respond with a string maybe it'd be

00:12:13,820 --> 00:12:18,620
better to respond with a an object that

00:12:16,640 --> 00:12:21,080
includes that a string and then if

00:12:18,620 --> 00:12:24,950
someone else also needs to extend that

00:12:21,080 --> 00:12:26,290
in the future they can do that and then

00:12:24,950 --> 00:12:28,610
there's another counterintuitive

00:12:26,290 --> 00:12:32,090
principle and that's sometimes it's

00:12:28,610 --> 00:12:34,670
better to create more higher quantity of

00:12:32,090 --> 00:12:38,270
specific mutations or queries rather

00:12:34,670 --> 00:12:41,360
than one or several multi-purpose ones

00:12:38,270 --> 00:12:42,830
and by breaking that apart you can make

00:12:41,360 --> 00:12:45,830
it easier to evolve things you can add

00:12:42,830 --> 00:12:50,390
new things without breaking existing use

00:12:45,830 --> 00:12:52,520
cases and I think congruent with that is

00:12:50,390 --> 00:12:54,770
also to not be afraid to name things

00:12:52,520 --> 00:12:56,810
really specifically in your types that's

00:12:54,770 --> 00:13:00,320
okay in fact it's encouraged the more

00:12:56,810 --> 00:13:01,700
specific you are that's better and if

00:13:00,320 --> 00:13:03,320
you're using a generic name for

00:13:01,700 --> 00:13:05,870
something that actually is fairly

00:13:03,320 --> 00:13:07,580
specific you're kind of like land

00:13:05,870 --> 00:13:09,290
grabbing and sitting on something that's

00:13:07,580 --> 00:13:11,810
actually prime real estate for something

00:13:09,290 --> 00:13:13,940
else and this there's a limited finite

00:13:11,810 --> 00:13:17,330
set of possible names for types within

00:13:13,940 --> 00:13:20,320
your unified graph and so thinking about

00:13:17,330 --> 00:13:23,300
that early on is important I think and

00:13:20,320 --> 00:13:25,100
as a high-level principle kind of coming

00:13:23,300 --> 00:13:27,650
to your schema definition from the

00:13:25,100 --> 00:13:31,400
business domain not just reflecting out

00:13:27,650 --> 00:13:33,770
of your data api's not just reflecting

00:13:31,400 --> 00:13:35,870
it blindly too much from your you eyes I

00:13:33,770 --> 00:13:38,660
think you should begin with that design

00:13:35,870 --> 00:13:39,820
phase of the schema joining both the

00:13:38,660 --> 00:13:42,170
back end in the front end together

00:13:39,820 --> 00:13:43,880
create that schema and then you have a

00:13:42,170 --> 00:13:45,920
contract you can both build out from

00:13:43,880 --> 00:13:48,769
there

00:13:45,920 --> 00:13:50,389
and finally enough delaying defining

00:13:48,769 --> 00:13:53,269
things like interfaces until you

00:13:50,389 --> 00:13:55,220
understand domain fully sometimes the

00:13:53,269 --> 00:13:58,010
best thing to do is to delay and I think

00:13:55,220 --> 00:14:00,649
this goes along with the idea of demand

00:13:58,010 --> 00:14:02,029
driven graph QL development sometimes

00:14:00,649 --> 00:14:03,680
it's better just to push back and say

00:14:02,029 --> 00:14:05,360
let's not implement something yet until

00:14:03,680 --> 00:14:07,959
we understand it fully or let's

00:14:05,360 --> 00:14:10,639
implement something specific like a type

00:14:07,959 --> 00:14:12,470
rather than the interface yet until we

00:14:10,639 --> 00:14:15,339
can abstract away from multiple

00:14:12,470 --> 00:14:17,300
situations that inform that decision so

00:14:15,339 --> 00:14:20,029
there's a lot of resources out there

00:14:17,300 --> 00:14:22,190
just link to them here and you'll be

00:14:20,029 --> 00:14:24,800
able to get my slides from that link

00:14:22,190 --> 00:14:28,519
below if you're interested in some more

00:14:24,800 --> 00:14:31,540
details on that and the third thing I

00:14:28,519 --> 00:14:41,660
want to talk about is managing change

00:14:31,540 --> 00:14:43,269
appropriately now some of this is

00:14:41,660 --> 00:14:46,630
present within the idea of having

00:14:43,269 --> 00:14:49,699
guidelines in place that shared vision

00:14:46,630 --> 00:14:54,380
but there's also at the heart of this a

00:14:49,699 --> 00:14:57,079
process for how we manage change so this

00:14:54,380 --> 00:15:01,010
is a another common phrase at concur I

00:14:57,079 --> 00:15:03,620
hope is not a plan and we don't just

00:15:01,010 --> 00:15:06,140
want to hope that our schema will evolve

00:15:03,620 --> 00:15:06,620
and we can manage change in the long

00:15:06,140 --> 00:15:09,320
term

00:15:06,620 --> 00:15:11,029
we need to have a plan in place we need

00:15:09,320 --> 00:15:14,750
to think about that early on how we're

00:15:11,029 --> 00:15:17,690
going to do that so I think when you

00:15:14,750 --> 00:15:20,600
think about controlling how change

00:15:17,690 --> 00:15:23,959
occurs within your graph there's a

00:15:20,600 --> 00:15:25,970
continuum and on one side of the

00:15:23,959 --> 00:15:29,500
continuum is something freeform where

00:15:25,970 --> 00:15:29,500
you just allow everyone to just kind of

00:15:29,890 --> 00:15:35,810
contribution on in a project when you

00:15:34,190 --> 00:15:38,510
have few participants whether they're

00:15:35,810 --> 00:15:41,420
consumers or contributors to DeGraaf

00:15:38,510 --> 00:15:44,029
that could make sense when you're trying

00:15:41,420 --> 00:15:48,440
out things proof of concept that's great

00:15:44,029 --> 00:15:50,990
but as you go further along and so you

00:15:48,440 --> 00:15:54,230
want to include more participants or

00:15:50,990 --> 00:15:56,569
more contributors you find that you want

00:15:54,230 --> 00:15:59,720
to have a bit more control around how

00:15:56,569 --> 00:16:00,290
that schema is generated and you want to

00:15:59,720 --> 00:16:03,320
have more

00:16:00,290 --> 00:16:06,680
review processes in place as far as the

00:16:03,320 --> 00:16:08,839
schema has changed is this a good change

00:16:06,680 --> 00:16:11,079
to the schema is this going to cause

00:16:08,839 --> 00:16:15,320
other problems in other parts of the

00:16:11,079 --> 00:16:16,970
graph but the challenge and this is why

00:16:15,320 --> 00:16:18,889
it's a trade-off is that as soon as you

00:16:16,970 --> 00:16:24,589
do that you reduce the velocity and

00:16:18,889 --> 00:16:28,430
sometimes very quickly and extremely so

00:16:24,589 --> 00:16:30,560
our approach to this was to kind of hit

00:16:28,430 --> 00:16:32,680
somewhere in the middle along that graph

00:16:30,560 --> 00:16:34,670
so we didn't want it completely chaotic

00:16:32,680 --> 00:16:36,019
we knew that we had to get a lot of

00:16:34,670 --> 00:16:39,050
things in so we didn't want to slow down

00:16:36,019 --> 00:16:41,569
the velocity incredibly but we wanted to

00:16:39,050 --> 00:16:45,649
have at least some process around that

00:16:41,569 --> 00:16:47,899
so for us it kind of evolves organically

00:16:45,649 --> 00:16:49,730
really but we had a lot of informal

00:16:47,899 --> 00:16:51,350
communication in our slack channels and

00:16:49,730 --> 00:16:53,509
in the breakout groups for different

00:16:51,350 --> 00:16:55,250
areas of the graph and that's where a

00:16:53,509 --> 00:16:56,839
lot of the conversation would go around

00:16:55,250 --> 00:16:59,120
here's some upcoming changes that we're

00:16:56,839 --> 00:17:00,259
planning to make to the graph is this

00:16:59,120 --> 00:17:01,550
going to cause problems how can we

00:17:00,259 --> 00:17:04,760
design this in a way that makes sense

00:17:01,550 --> 00:17:06,850
long term so we have a lot of review but

00:17:04,760 --> 00:17:09,860
there wasn't a there is there wasn't a

00:17:06,850 --> 00:17:12,110
arbiter who decided yes or no for every

00:17:09,860 --> 00:17:14,270
change we trusted people to contribute

00:17:12,110 --> 00:17:16,189
changes and to reach out if they needed

00:17:14,270 --> 00:17:23,720
input and advice from the rest of the

00:17:16,189 --> 00:17:25,880
community so some of the things kind of

00:17:23,720 --> 00:17:26,929
going forward for ideas that we could

00:17:25,880 --> 00:17:29,000
put in place

00:17:26,929 --> 00:17:30,740
so getting analytics on the use of your

00:17:29,000 --> 00:17:32,480
graph is really helpful if you want to

00:17:30,740 --> 00:17:34,340
know whether you can deprecated fields

00:17:32,480 --> 00:17:36,559
whether you can remove them and there's

00:17:34,340 --> 00:17:37,970
a lot of tools out there for that but no

00:17:36,559 --> 00:17:39,950
matter what you're using I think you

00:17:37,970 --> 00:17:42,320
need to find ways to get at the heart of

00:17:39,950 --> 00:17:45,290
that data what how is your graph being

00:17:42,320 --> 00:17:49,549
used and there's a potential also to use

00:17:45,290 --> 00:17:51,260
CI tools to post on your PRS or changes

00:17:49,549 --> 00:17:52,820
how they schema change at this

00:17:51,260 --> 00:17:54,350
particular PR how it's going to impact

00:17:52,820 --> 00:17:56,990
the overall schema is it going to break

00:17:54,350 --> 00:18:00,830
things and integration with CI and

00:17:56,990 --> 00:18:02,540
github PRS is really helpful and I think

00:18:00,830 --> 00:18:05,480
another thing that's really useful is to

00:18:02,540 --> 00:18:07,580
understand we actually need to approach

00:18:05,480 --> 00:18:10,010
deprecation early it's not something you

00:18:07,580 --> 00:18:12,409
can push down the road you need to start

00:18:10,010 --> 00:18:13,909
thinking early on how do we deprecated

00:18:12,409 --> 00:18:14,090
things out of this because we're going

00:18:13,909 --> 00:18:15,679
to

00:18:14,090 --> 00:18:18,260
have to do that and if you have mobile

00:18:15,679 --> 00:18:20,210
clients no one really wants to do that

00:18:18,260 --> 00:18:24,289
right it's going to break some clients

00:18:20,210 --> 00:18:25,760
so I think approaching it where you need

00:18:24,289 --> 00:18:27,320
to have that policy you need to start

00:18:25,760 --> 00:18:29,150
having the conversations how are we

00:18:27,320 --> 00:18:33,380
going to do this when are we going to do

00:18:29,150 --> 00:18:36,770
it is really helpful github for example

00:18:33,380 --> 00:18:38,330
has you can look at how they communicate

00:18:36,770 --> 00:18:40,340
their breaking changes as a public API

00:18:38,330 --> 00:18:42,020
so they have even more concerns right

00:18:40,340 --> 00:18:44,659
it's not just their own internal clients

00:18:42,020 --> 00:18:45,799
they also have a public API that maybe

00:18:44,659 --> 00:18:48,020
people can use so how do they

00:18:45,799 --> 00:18:53,809
communicate those changes so it github

00:18:48,020 --> 00:18:56,870
is a great example of that so just kind

00:18:53,809 --> 00:18:59,270
of in summary here it's kind of the

00:18:56,870 --> 00:19:01,520
three principles I think of when solving

00:18:59,270 --> 00:19:03,679
the schema side of that is building that

00:19:01,520 --> 00:19:05,350
community and establishing the shared

00:19:03,679 --> 00:19:08,240
vision and managing the change

00:19:05,350 --> 00:19:14,929
appropriate for where you're at as an

00:19:08,240 --> 00:19:17,390
organization so thank you very much for

00:19:14,929 --> 00:19:20,419
listening I'm gonna be hosting a table

00:19:17,390 --> 00:19:22,580
talk tomorrow lunchtime and I'd really

00:19:20,419 --> 00:19:24,799
like to make that a place where people

00:19:22,580 --> 00:19:26,240
can share their experiences and the

00:19:24,799 --> 00:19:28,010
things that they are trying to do in

00:19:26,240 --> 00:19:30,890
this space because I think there's a lot

00:19:28,010 --> 00:19:33,230
of space for collaboration across our

00:19:30,890 --> 00:19:41,440
wider graphical community about these

00:19:33,230 --> 00:19:41,440
topics so any questions yeah

00:19:56,180 --> 00:20:01,520
a lot of them were migrated into the one

00:19:59,000 --> 00:20:02,840
graph without changes at all in order to

00:20:01,520 --> 00:20:06,740
support mobile clients who are using

00:20:02,840 --> 00:20:08,870
them so I think that caused challenges

00:20:06,740 --> 00:20:11,150
and that we may not want to keep those

00:20:08,870 --> 00:20:13,790
designs along terms so that causes the

00:20:11,150 --> 00:20:24,500
questions of how do we change existing

00:20:13,790 --> 00:20:28,970
on ideal types did you have a mono repo

00:20:24,500 --> 00:20:31,010
or you know where the PR is going in

00:20:28,970 --> 00:20:32,720
that sort of thing yeah so your question

00:20:31,010 --> 00:20:35,060
is how do we match the artifacts so

00:20:32,720 --> 00:20:38,980
things like the types and resolvers and

00:20:35,060 --> 00:20:43,580
so forth right this schema yep

00:20:38,980 --> 00:20:46,100
so for us we had a set of different

00:20:43,580 --> 00:20:49,310
packages NPM packages that are combined

00:20:46,100 --> 00:20:51,980
together to build a unified graph as

00:20:49,310 --> 00:20:55,250
part of a CI process so anytime any

00:20:51,980 --> 00:20:58,430
particular person updates or contributes

00:20:55,250 --> 00:21:01,940
a package then that will change the

00:20:58,430 --> 00:21:05,920
graph as a whole so it kind of exists

00:21:01,940 --> 00:21:05,920
separately not in one place at one time

00:21:07,240 --> 00:21:11,710
by going to your server yeah exactly

00:21:15,580 --> 00:21:26,270
any more questions all right thank you

00:21:24,290 --> 00:21:29,110
very much big round of applause for Sam

00:21:26,270 --> 00:21:29,110

YouTube URL: https://www.youtube.com/watch?v=s5AjgjCAtj4


