Title: Consuming GraphQL in C# (BRANDON MINNICK - Developer Advocate at Microsoft)
Publication date: 2019-11-03
Playlist: GraphQL Summit 2019
Description: 
	GraphQL has become a staple technology in the JavaScript community, but it is still relatively new and unknown in the C# world. Join me as we explore the GraphQL tools available for .NET developers, learn how to create our first GraphQL endpoint in C# and then interact with it from a C# client!

Resources:
Learn more about Summit - https://summit.graphql.com/
Explore the GraphQL FAQs - https://www.apollographql.com/docs/resources/faq
Checkout the Apollo docs - https://www.apollographql.com/docs/
Learn GraphQL using Apollo's Tutorials: https://odyssey.apollographql.com/
Captions: 
	00:00:02,480 --> 00:00:06,960
well thanks so much for joining me today

00:00:04,560 --> 00:00:08,760
everybody I like Jake much my name is

00:00:06,960 --> 00:00:11,400
Brandon Minich I work as a developer

00:00:08,760 --> 00:00:13,169
advocate at Microsoft and in today's

00:00:11,400 --> 00:00:17,039
session we'll be talking about consuming

00:00:13,169 --> 00:00:19,740
crack ql in c-sharp this is a really

00:00:17,039 --> 00:00:21,450
exciting topic for me because i first

00:00:19,740 --> 00:00:24,870
learned about graph QL a couple years

00:00:21,450 --> 00:00:27,510
ago and as a mobile developer I I make

00:00:24,870 --> 00:00:29,850
iOS and Android apps in c-sharp using

00:00:27,510 --> 00:00:30,930
xamarin but when I first heard about

00:00:29,850 --> 00:00:33,090
crack you I was like this is amazing

00:00:30,930 --> 00:00:36,839
it's finally a technology that's

00:00:33,090 --> 00:00:39,780
literally made for mobile but everything

00:00:36,839 --> 00:00:42,600
was in JavaScript so luckily over the

00:00:39,780 --> 00:00:44,579
past couple years we've had some c-sharp

00:00:42,600 --> 00:00:45,870
libraries come about so that's what

00:00:44,579 --> 00:00:48,569
we'll be showing off today we'll be

00:00:45,870 --> 00:00:50,670
showing off how to create our backend in

00:00:48,569 --> 00:00:53,069
c-sharp and then we'll also show how to

00:00:50,670 --> 00:00:59,390
take our client which I'll be using as

00:00:53,069 --> 00:00:59,390
Amram today to concern in c-sharp Oh

00:00:59,399 --> 00:01:06,960
or a couple dotnet graph QL SD these are

00:01:03,629 --> 00:01:20,039
to the most dealer so there is graphical

00:01:06,960 --> 00:01:22,240
net this one end of the earth I've cut

00:01:20,039 --> 00:01:23,770
out here but

00:01:22,240 --> 00:01:25,299
this is the one we'll be we'll be

00:01:23,770 --> 00:01:27,400
demoing today like I said it's the most

00:01:25,299 --> 00:01:29,920
popular it still

00:01:27,400 --> 00:01:32,290
in my opinion has has a little bit wait

00:01:29,920 --> 00:01:33,310
a little bit more to go a little farther

00:01:32,290 --> 00:01:37,119
to go

00:01:33,310 --> 00:01:39,400
but it's about 85 95 85 95 percent there

00:01:37,119 --> 00:01:41,130
and then there's another one called hot

00:01:39,400 --> 00:01:44,380
chocolate this one is kind of a

00:01:41,130 --> 00:01:47,649
up-and-comer in the dotnet graph QL seen

00:01:44,380 --> 00:01:51,970
a couple of the shortcomings with graph

00:01:47,649 --> 00:01:53,590
QL net they promised to fill now we're

00:01:51,970 --> 00:01:55,420
not showing this one today just because

00:01:53,590 --> 00:01:57,280
the client-side library for it is still

00:01:55,420 --> 00:01:59,170
in preview but I'm excited to see what

00:01:57,280 --> 00:02:01,030
they come out with and now before I

00:01:59,170 --> 00:02:03,789
forget there are two links at the bottom

00:02:01,030 --> 00:02:06,130
of the slides today on the left that is

00:02:03,789 --> 00:02:08,800
my Twitter handle this is the best way

00:02:06,130 --> 00:02:10,239
to reach me I hate email the best way to

00:02:08,800 --> 00:02:12,400
reach me shoot me a direct message on

00:02:10,239 --> 00:02:14,080
Twitter so if you have any questions if

00:02:12,400 --> 00:02:16,180
you want to chat about xamarin or graph

00:02:14,080 --> 00:02:17,920
QL those are kind of my bat signals so

00:02:16,180 --> 00:02:21,100
if you send me a message and say let's

00:02:17,920 --> 00:02:23,110
talk about graph QL I'm there and on the

00:02:21,100 --> 00:02:25,300
right side of the slides this is a web

00:02:23,110 --> 00:02:26,620
page I put together just for us just for

00:02:25,300 --> 00:02:28,690
today and this is where you can find

00:02:26,620 --> 00:02:30,519
everything that we're going to cover so

00:02:28,690 --> 00:02:32,530
this is where you'll be able to find the

00:02:30,519 --> 00:02:34,390
slides and the code that we're about to

00:02:32,530 --> 00:02:37,090
dive into is all open source and I've

00:02:34,390 --> 00:02:39,310
saved that repo up on github for us and

00:02:37,090 --> 00:02:40,989
so don't worry about memorizing anything

00:02:39,310 --> 00:02:43,720
today because it's all available on

00:02:40,989 --> 00:02:44,920
github on Monday when you get back to

00:02:43,720 --> 00:02:46,420
work you can share that with your

00:02:44,920 --> 00:02:47,799
friends and colleagues and go oh yeah

00:02:46,420 --> 00:02:50,650
that's that's right that's how this guy

00:02:47,799 --> 00:02:53,940
did it during his talk so that being

00:02:50,650 --> 00:02:58,930
said let's dive straight into the code

00:02:53,940 --> 00:03:03,340
now I have here a mobile app so let's go

00:02:58,930 --> 00:03:06,130
ahead and relaunch this here there we go

00:03:03,340 --> 00:03:09,730
so this is apt I put together to view a

00:03:06,130 --> 00:03:11,950
list of my favorite dogs I add a goner I

00:03:09,730 --> 00:03:14,730
love dogs and so why not have an app

00:03:11,950 --> 00:03:16,900
where it's nothing but my favorites and

00:03:14,730 --> 00:03:18,609
you'll notice right now it's just it's

00:03:16,900 --> 00:03:21,760
just empty and it's empty because we

00:03:18,609 --> 00:03:26,859
haven't completed our graph QL backend

00:03:21,760 --> 00:03:29,019
yet so let's check out what we do have

00:03:26,859 --> 00:03:31,239
and I'll go ahead and run the API now

00:03:29,019 --> 00:03:33,669
because I've gone ahead and done a lot

00:03:31,239 --> 00:03:35,530
of the boilerplate code for us already

00:03:33,669 --> 00:03:39,750
so

00:03:35,530 --> 00:03:42,670
first things first we are using the.net

00:03:39,750 --> 00:03:44,260
graph QL library so this is just a

00:03:42,670 --> 00:03:46,660
nougat package and it's just called

00:03:44,260 --> 00:03:49,030
graph QL so pretty easy to remember and

00:03:46,660 --> 00:03:50,950
this is also the same creator it's just

00:03:49,030 --> 00:03:54,490
got some extra common libraries in it

00:03:50,950 --> 00:03:59,140
and what we have so far is we've created

00:03:54,490 --> 00:04:01,450
a graph QL back end that has queries but

00:03:59,140 --> 00:04:04,810
just one query and we can query for a

00:04:01,450 --> 00:04:07,000
specific dog and so here on the Left

00:04:04,810 --> 00:04:10,209
I've typed in my dog's name my dog's

00:04:07,000 --> 00:04:10,630
name is Kirby and when we click go there

00:04:10,209 --> 00:04:12,730
we go

00:04:10,630 --> 00:04:15,910
so we'll see all the information that

00:04:12,730 --> 00:04:18,940
comes back now there's something I don't

00:04:15,910 --> 00:04:21,340
like here and that is we're using reason

00:04:18,940 --> 00:04:24,270
the word title you know it's my dog's

00:04:21,340 --> 00:04:26,680
name is Kirby's it's not its title and

00:04:24,270 --> 00:04:29,710
the reason this is like this is because

00:04:26,680 --> 00:04:31,360
both the code I kind of copy and pasted

00:04:29,710 --> 00:04:33,400
from a different library that is meant

00:04:31,360 --> 00:04:35,470
to show all kinds of images it could

00:04:33,400 --> 00:04:38,590
show images of scenery it could show

00:04:35,470 --> 00:04:41,110
images of technology and we're using it

00:04:38,590 --> 00:04:42,820
for images of dogs and so let's let's

00:04:41,110 --> 00:04:55,300
fix that first let's jump into our code

00:04:42,820 --> 00:04:58,300
and let's jump into our graph type so so

00:04:55,300 --> 00:05:01,240
what we see here is the object that

00:04:58,300 --> 00:05:07,900
we've created to return from our graph

00:05:01,240 --> 00:05:09,729
QL API all done in c-sharp now what

00:05:07,900 --> 00:05:11,919
we've done is we've actually referenced

00:05:09,729 --> 00:05:15,610
our c-sharp model so this dog images

00:05:11,919 --> 00:05:18,130
model if we go to that declaration look

00:05:15,610 --> 00:05:19,540
at it side-by-side this is just a just a

00:05:18,130 --> 00:05:23,140
c-sharp bottle it's just a plain old

00:05:19,540 --> 00:05:25,960
c-sharp object that has some of the

00:05:23,140 --> 00:05:28,210
properties that our dogs will return so

00:05:25,960 --> 00:05:31,060
we have our breed the dog's birthday

00:05:28,210 --> 00:05:36,940
coat color and it also inherits from

00:05:31,060 --> 00:05:39,810
image model and let's make sure that's

00:05:36,940 --> 00:05:39,810
in the project

00:05:40,950 --> 00:05:46,170
there we go so and then images model

00:05:44,640 --> 00:05:47,790
this is kind of that base library I was

00:05:46,170 --> 00:05:49,890
talking about where it could be any kind

00:05:47,790 --> 00:05:54,840
of image between scenery or whatnot and

00:05:49,890 --> 00:05:57,630
and so here is where we also have values

00:05:54,840 --> 00:06:00,540
like it's avatar URL the website and

00:05:57,630 --> 00:06:02,970
then there's that title so back here on

00:06:00,540 --> 00:06:05,280
our graph QL server we have our dog

00:06:02,970 --> 00:06:08,550
images graph type that also inherits

00:06:05,280 --> 00:06:11,640
from this images graph tab and if we

00:06:08,550 --> 00:06:14,760
jump into that we'll also see the same

00:06:11,640 --> 00:06:18,780
fields here so what we do in the dotnet

00:06:14,760 --> 00:06:21,420
graph QL SDK to create a graph QL object

00:06:18,780 --> 00:06:23,790
we inherit from this object graph type

00:06:21,420 --> 00:06:27,000
this is included in the dotnet graph QL

00:06:23,790 --> 00:06:30,120
SDK and what we do we just pass in a

00:06:27,000 --> 00:06:32,130
specific type and so in this case we're

00:06:30,120 --> 00:06:34,650
using a little fancy c-sharp inheritance

00:06:32,130 --> 00:06:36,720
here to say that that type will always

00:06:34,650 --> 00:06:38,970
be an images model like we see here on

00:06:36,720 --> 00:06:42,150
the right and then we can choose what

00:06:38,970 --> 00:06:45,090
fields we want to expose for our graph

00:06:42,150 --> 00:06:47,610
QL back end and what's really neat about

00:06:45,090 --> 00:06:49,050
this is we are able to reference this

00:06:47,610 --> 00:06:52,470
model we're able to keep everything

00:06:49,050 --> 00:06:56,280
strongly typed and so to expose the

00:06:52,470 --> 00:06:59,190
field like for example Avatar URL I just

00:06:56,280 --> 00:07:02,070
use I just say X goes to X dot avatar

00:06:59,190 --> 00:07:03,180
URL and the graph QL SDK takes care of

00:07:02,070 --> 00:07:06,600
the rest for me it figures out that

00:07:03,180 --> 00:07:09,900
Avatar URL is a string and so what we

00:07:06,600 --> 00:07:12,510
see here is that Avatar URL returns a

00:07:09,900 --> 00:07:17,340
string and when in this case Avatar URL

00:07:12,510 --> 00:07:19,380
is also non nullable so the way we've

00:07:17,340 --> 00:07:21,900
done that is just by saying false if we

00:07:19,380 --> 00:07:26,250
had put true here then this string could

00:07:21,900 --> 00:07:28,230
be no so pretty cool pretty easy I like

00:07:26,250 --> 00:07:30,390
the fact that it takes advantage of

00:07:28,230 --> 00:07:32,160
these strongly typed objects and does

00:07:30,390 --> 00:07:33,390
this for us but what we're saying

00:07:32,160 --> 00:07:36,090
earlier we want we don't want that to be

00:07:33,390 --> 00:07:40,230
title anymore we want this to be let

00:07:36,090 --> 00:07:42,180
this be name cuz I said Kirby is my

00:07:40,230 --> 00:07:44,520
dog's name it's not really as title so

00:07:42,180 --> 00:07:47,510
let's change that's a name and run this

00:07:44,520 --> 00:07:47,510
again and see what we get

00:07:57,180 --> 00:08:13,470
and got a bill dari so let's fix that

00:08:03,240 --> 00:08:15,060
real quick images query is there you

00:08:13,470 --> 00:08:17,130
know what sometimes just got to turn it

00:08:15,060 --> 00:08:24,330
off turn it back on let's go ahead and

00:08:17,130 --> 00:08:26,450
close everything down clean it wash it

00:08:24,330 --> 00:08:26,450
again

00:08:36,969 --> 00:08:45,860
give that a minute to update grab all

00:08:40,729 --> 00:08:49,450
those nougat packages looks like a red

00:08:45,860 --> 00:08:53,839
squiggles are gone now so that's good

00:08:49,450 --> 00:08:56,230
know where it's real still they know

00:08:53,839 --> 00:08:56,230
okay

00:08:56,589 --> 00:09:10,540
build it ship it and headboard builders

00:09:11,770 --> 00:09:20,990
died little dog motto good old refactor

00:09:18,399 --> 00:09:25,630
gotcha okay so that one's an easy one we

00:09:20,990 --> 00:09:29,170
changed the name didn't pick it up here

00:09:25,630 --> 00:09:29,170
how we doing now

00:09:29,290 --> 00:09:41,350
still getting yelled at should be good

00:09:50,360 --> 00:10:01,079
name-o that one right there all right

00:09:56,209 --> 00:10:03,750
refactoring on the fly we did it so now

00:10:01,079 --> 00:10:04,889
we launch it we should get yelled at

00:10:03,750 --> 00:10:07,560
there we go so now we're getting yelled

00:10:04,889 --> 00:10:09,480
at because our query now shows that dogs

00:10:07,560 --> 00:10:11,730
don't have titles they have name so

00:10:09,480 --> 00:10:15,899
let's go ahead and fix that and now we

00:10:11,730 --> 00:10:19,230
should see Kirby's name all right we did

00:10:15,899 --> 00:10:20,790
it so now what we could do we could take

00:10:19,230 --> 00:10:24,540
this and we could connect this directly

00:10:20,790 --> 00:10:27,120
to our mobile app now but to be honest

00:10:24,540 --> 00:10:28,410
it's not best practices for graph QL

00:10:27,120 --> 00:10:30,300
because what would our mobile app have

00:10:28,410 --> 00:10:32,459
to do if we want to get a list of dogs

00:10:30,300 --> 00:10:34,529
we would have to make multiple dog

00:10:32,459 --> 00:10:36,779
queries back and forth between our graph

00:10:34,529 --> 00:10:39,329
QL API and that kind of kills the point

00:10:36,779 --> 00:10:43,139
of graph QL so let's add in another

00:10:39,329 --> 00:10:48,089
query that allows us to return all of

00:10:43,139 --> 00:10:50,459
the dogs so let's jump into let's go

00:10:48,089 --> 00:10:56,189
ahead and close some of these close some

00:10:50,459 --> 00:10:59,160
of these there we go okay so this is our

00:10:56,189 --> 00:11:01,319
existing query and again the way this

00:10:59,160 --> 00:11:04,410
the way we create our queries with the

00:11:01,319 --> 00:11:06,990
dotnet graph QL SDK is we define the

00:11:04,410 --> 00:11:10,380
fields that will return so this is this

00:11:06,990 --> 00:11:11,850
dog images graph type this is the graph

00:11:10,380 --> 00:11:15,089
type we were just looking at so this is

00:11:11,850 --> 00:11:18,209
the type that we defined that graph QL

00:11:15,089 --> 00:11:22,680
will be able to return and what we've

00:11:18,209 --> 00:11:26,850
done we've given it a name and so if we

00:11:22,680 --> 00:11:30,329
look side-by-side we can see that this

00:11:26,850 --> 00:11:32,790
existing type has a name called dogs and

00:11:30,329 --> 00:11:34,529
that's because or dog singular and

00:11:32,790 --> 00:11:36,660
that's cuz we passed that in here we

00:11:34,529 --> 00:11:38,160
create the description to query for a

00:11:36,660 --> 00:11:41,490
specific dog and that's why we see it

00:11:38,160 --> 00:11:44,310
here on the right and then because we

00:11:41,490 --> 00:11:46,439
are querying for a specific dog the user

00:11:44,310 --> 00:11:48,240
has to be able to pass in an argument

00:11:46,439 --> 00:11:50,670
and in this case we're passing in the

00:11:48,240 --> 00:11:54,540
dog's name and the way we do that in the

00:11:50,670 --> 00:11:57,120
graph QL SDK is we create a new query

00:11:54,540 --> 00:11:59,459
argument now this query argument I said

00:11:57,120 --> 00:12:02,100
I want it to be a non null graph type so

00:11:59,459 --> 00:12:03,690
I want to make it required and in this

00:12:02,100 --> 00:12:07,500
case it'll be a string

00:12:03,690 --> 00:12:10,320
and what we've done we've given it the

00:12:07,500 --> 00:12:11,940
name name since this is the dog's name

00:12:10,320 --> 00:12:14,880
for the agrement that we're passing in

00:12:11,940 --> 00:12:16,920
and the description to let to help out

00:12:14,880 --> 00:12:18,990
the user and let them know is dog name

00:12:16,920 --> 00:12:23,670
so just like we expect that's why we see

00:12:18,990 --> 00:12:25,560
name here and in graphical as that user

00:12:23,670 --> 00:12:26,280
is typing out and they see some

00:12:25,560 --> 00:12:29,160
intellisense

00:12:26,280 --> 00:12:33,060
that's why they get dog name here to

00:12:29,160 --> 00:12:36,660
help them out now lastly because we are

00:12:33,060 --> 00:12:39,930
having the user pass in a variable or

00:12:36,660 --> 00:12:42,600
pass in a argument we have to then grab

00:12:39,930 --> 00:12:44,790
that argument and handle it for when we

00:12:42,600 --> 00:12:47,370
pull our data so I've got all my data in

00:12:44,790 --> 00:12:50,370
this dog images property right here and

00:12:47,370 --> 00:12:54,060
so all I'm going to do is query and use

00:12:50,370 --> 00:12:57,030
link for a single dog so using link I'm

00:12:54,060 --> 00:13:03,200
just going to say where that the dog's

00:12:57,030 --> 00:13:06,510
name equals and then this is how I grab

00:13:03,200 --> 00:13:09,480
the string that the user passed in so I

00:13:06,510 --> 00:13:11,490
just say context that get argument it'll

00:13:09,480 --> 00:13:13,650
cast it for me automatically as a string

00:13:11,490 --> 00:13:15,480
type and I tell it that the argument I'm

00:13:13,650 --> 00:13:18,720
looking for is name so it's the same

00:13:15,480 --> 00:13:20,460
name that we defined here this is how

00:13:18,720 --> 00:13:23,760
it'll pull it from the query and so that

00:13:20,460 --> 00:13:26,010
will return the single dog for us so

00:13:23,760 --> 00:13:28,320
great but what we want we want to be

00:13:26,010 --> 00:13:31,950
able to return all the dogs so let's

00:13:28,320 --> 00:13:34,860
create another field here and this field

00:13:31,950 --> 00:13:38,040
will be a list graft ID because we're

00:13:34,860 --> 00:13:41,310
gonna have a list of dogs and we'll use

00:13:38,040 --> 00:13:44,300
the same dog images graft ID and so for

00:13:41,310 --> 00:13:48,060
this one let's give it the name dogs and

00:13:44,300 --> 00:13:52,860
the description will say query for all

00:13:48,060 --> 00:13:53,880
dogs and now this one this is where it

00:13:52,860 --> 00:13:55,890
gets a little different from the last

00:13:53,880 --> 00:13:58,620
one because we're not going to require

00:13:55,890 --> 00:13:59,970
any query arguments RAK gonna require

00:13:58,620 --> 00:14:01,350
the user to pass in anything because

00:13:59,970 --> 00:14:03,720
we're just going to return all the dogs

00:14:01,350 --> 00:14:06,780
so we can skip over those query

00:14:03,720 --> 00:14:09,390
arguments and jump straight down here to

00:14:06,780 --> 00:14:10,980
the resolver so to define that resolver

00:14:09,390 --> 00:14:16,140
it'll be similar to what we did above

00:14:10,980 --> 00:14:17,190
will say context goes to and in this

00:14:16,140 --> 00:14:19,980
case I'm just going to

00:14:17,190 --> 00:14:22,320
they return all the dog images returned

00:14:19,980 --> 00:14:27,060
all I want them all so let's go ahead

00:14:22,320 --> 00:14:30,780
and run this make sure that back-end

00:14:27,060 --> 00:14:32,250
still working alright so now we have our

00:14:30,780 --> 00:14:35,130
query and there it is

00:14:32,250 --> 00:14:37,980
so there's our our dogs field or our

00:14:35,130 --> 00:14:39,360
dog's query rather that returns a list

00:14:37,980 --> 00:14:40,860
of dogs that's what those square

00:14:39,360 --> 00:14:43,470
brackets mean is that it'll return a

00:14:40,860 --> 00:14:45,390
list and so instead of having to find a

00:14:43,470 --> 00:14:47,370
single dog here I should be able to say

00:14:45,390 --> 00:14:50,010
dogs and look at that it still says

00:14:47,370 --> 00:14:52,380
title so let's make sure we use name and

00:14:50,010 --> 00:14:56,270
there we go now we get a list of all the

00:14:52,380 --> 00:14:58,800
dogs in our in our dog database so now

00:14:56,270 --> 00:15:02,550
we can go and jump into our mobile app

00:14:58,800 --> 00:15:06,030
and connect this up so in the project

00:15:02,550 --> 00:15:08,520
here we have three solution folders we

00:15:06,030 --> 00:15:11,070
have the backend so this is where all of

00:15:08,520 --> 00:15:13,650
our graph QL code lives this is this all

00:15:11,070 --> 00:15:16,110
of our back-end logic we have our mobile

00:15:13,650 --> 00:15:17,610
so this is this is my R my ILS and my

00:15:16,110 --> 00:15:20,070
Android app lives with some of the

00:15:17,610 --> 00:15:22,710
shared code between them but we also

00:15:20,070 --> 00:15:24,330
have this common folder and this is kind

00:15:22,710 --> 00:15:26,340
of cool about being able to do all this

00:15:24,330 --> 00:15:28,260
in dotnet is we're doing it all in the

00:15:26,340 --> 00:15:30,720
same language so we can do it all in the

00:15:28,260 --> 00:15:34,890
same repository and we can share code so

00:15:30,720 --> 00:15:36,690
this common folder this is where my dog

00:15:34,890 --> 00:15:40,590
images model lives is where my images

00:15:36,690 --> 00:15:43,650
model lives so the same models these

00:15:40,590 --> 00:15:45,300
these files these same C sharp objects

00:15:43,650 --> 00:15:48,780
we're going to be using for our mobile

00:15:45,300 --> 00:15:51,300
app so jumping into that mobile app

00:15:48,780 --> 00:15:57,720
let's stop the backend and let's kick it

00:15:51,300 --> 00:16:01,710
off manually down here and just make

00:15:57,720 --> 00:16:05,820
sure that's still running great alright

00:16:01,710 --> 00:16:09,510
so jumping into our code I have a method

00:16:05,820 --> 00:16:11,820
down here called execute refresh dog

00:16:09,510 --> 00:16:13,320
collection command now that's it's a lot

00:16:11,820 --> 00:16:15,180
of words but all that means is this is

00:16:13,320 --> 00:16:16,860
the method that executes anytime user

00:16:15,180 --> 00:16:18,990
does a pull to refresh or anytime the

00:16:16,860 --> 00:16:20,760
user launches the app so this is what's

00:16:18,990 --> 00:16:24,540
going to be querying our graph QL

00:16:20,760 --> 00:16:28,290
backend now on the client side we're

00:16:24,540 --> 00:16:30,940
still using that graph QL SDK but just a

00:16:28,290 --> 00:16:33,730
little different we're using

00:16:30,940 --> 00:16:35,200
graph QL dot client so it's still part

00:16:33,730 --> 00:16:37,920
of the same library but this one is

00:16:35,200 --> 00:16:41,050
specifically for client-side usage and

00:16:37,920 --> 00:16:42,640
the cool thing that it does is it takes

00:16:41,050 --> 00:16:47,080
care of a lot of boilerplate code for us

00:16:42,640 --> 00:16:49,240
so for example normally in c-sharp we

00:16:47,080 --> 00:16:51,610
would create a new HTTP client and to

00:16:49,240 --> 00:16:53,860
make graph QL requests we would say post

00:16:51,610 --> 00:16:55,270
async and we would do all do all of that

00:16:53,860 --> 00:16:59,080
and pass in our queries that way but

00:16:55,270 --> 00:17:02,110
with this library it comes with a new we

00:16:59,080 --> 00:17:06,160
can say new graph QL HTTP client and

00:17:02,110 --> 00:17:08,830
this is just using HTTP client under the

00:17:06,160 --> 00:17:10,690
hood but it's taken care of on that

00:17:08,830 --> 00:17:14,890
boilerplate code so what we can do is

00:17:10,690 --> 00:17:16,270
pass in our graph QL options and this is

00:17:14,890 --> 00:17:19,210
where we'll set the endpoint so I've

00:17:16,270 --> 00:17:20,680
already I've already grabbed the URL for

00:17:19,210 --> 00:17:24,330
this I mean it's just my localhost

00:17:20,680 --> 00:17:28,960
so let's grab that constant there it is

00:17:24,330 --> 00:17:30,250
and quick caveat yes this is gonna be

00:17:28,960 --> 00:17:32,680
quick and dirty code today if we're

00:17:30,250 --> 00:17:34,750
doing it all in one method if you're

00:17:32,680 --> 00:17:35,920
familiar with creating a Seabee client

00:17:34,750 --> 00:17:39,160
and c-sharp you know you should be

00:17:35,920 --> 00:17:40,930
reusing it all of the good best

00:17:39,160 --> 00:17:43,300
practices code that's all been finished

00:17:40,930 --> 00:17:44,590
that's all up on github so stick with me

00:17:43,300 --> 00:17:46,990
this is gonna be quick and dirty today

00:17:44,590 --> 00:17:49,090
but if you want to check out the more

00:17:46,990 --> 00:17:50,530
robust completed sample it's all

00:17:49,090 --> 00:17:52,060
available on github and I'll make sure

00:17:50,530 --> 00:17:55,330
to give you guys a chance to grab that

00:17:52,060 --> 00:17:57,880
link again before we finish so we've got

00:17:55,330 --> 00:18:01,930
our client and now that we have our

00:17:57,880 --> 00:18:07,420
client we can get our graph QL response

00:18:01,930 --> 00:18:09,070
by just saying a wait client dot send

00:18:07,420 --> 00:18:11,140
query async and you'll see there's also

00:18:09,070 --> 00:18:13,020
send mutations and subscribe so does a

00:18:11,140 --> 00:18:16,560
lot of that boilerplate code

00:18:13,020 --> 00:18:23,160
automatically for us and to send a query

00:18:16,560 --> 00:18:26,650
we create a new graph QL request and

00:18:23,160 --> 00:18:28,390
this graph QL request contains a couple

00:18:26,650 --> 00:18:30,430
properties so this is where we'll pass

00:18:28,390 --> 00:18:32,950
in we could pass in variables if we had

00:18:30,430 --> 00:18:36,130
any but for this example we're just

00:18:32,950 --> 00:18:39,450
going to pass in our query and this

00:18:36,130 --> 00:18:42,220
query is just gonna be the same query we

00:18:39,450 --> 00:18:43,570
created or discovered using graphical

00:18:42,220 --> 00:18:44,410
here so I'm just going to copy and paste

00:18:43,570 --> 00:18:48,880
this

00:18:44,410 --> 00:18:54,940
and let's do this the patient is a

00:18:48,880 --> 00:18:56,470
string and tap out all over just so it

00:18:54,940 --> 00:19:02,280
looks nice let's see if I spelled this

00:18:56,470 --> 00:19:02,280
wrong graph QL response there we go

00:19:02,520 --> 00:19:09,640
forgot to give it a variable name all

00:19:04,510 --> 00:19:11,020
right so that's our response and so so

00:19:09,640 --> 00:19:13,150
now we've got the response back but that

00:19:11,020 --> 00:19:14,740
response just comes back there's a JSON

00:19:13,150 --> 00:19:16,540
payload you know maybe it's got data

00:19:14,740 --> 00:19:19,590
maybe it's got errors what do we do with

00:19:16,540 --> 00:19:22,540
it now well we can actually cast it or

00:19:19,590 --> 00:19:25,420
rather deserialize it straight into a

00:19:22,540 --> 00:19:30,160
list of our dog images so the way this

00:19:25,420 --> 00:19:33,730
works let's call this dog images yeah

00:19:30,160 --> 00:19:36,220
there we go we can take that response

00:19:33,730 --> 00:19:40,510
and it has a method called get data

00:19:36,220 --> 00:19:43,270
field as now this is a little kind of a

00:19:40,510 --> 00:19:44,890
funky way of saying it cuz like what

00:19:43,270 --> 00:19:48,190
does that mean what is a data field well

00:19:44,890 --> 00:19:50,650
if you remember with graph QL whenever

00:19:48,190 --> 00:19:52,930
this JSON response comes back the first

00:19:50,650 --> 00:19:55,960
object is always data and then it's

00:19:52,930 --> 00:19:57,760
inside of that data object is where the

00:19:55,960 --> 00:20:01,630
fields we want are the fields we've

00:19:57,760 --> 00:20:04,090
requested are so inside of data is this

00:20:01,630 --> 00:20:06,600
dogs field which is our list of dogs so

00:20:04,090 --> 00:20:11,230
for this what it's actually asking for

00:20:06,600 --> 00:20:13,720
is what is that field inside of data so

00:20:11,230 --> 00:20:19,050
in our case it's dogs and we'll pass in

00:20:13,720 --> 00:20:24,760
the type as our list of dog images model

00:20:19,050 --> 00:20:26,740
and one more bracket there and that's

00:20:24,760 --> 00:20:29,170
basically it so now we've gotten our dog

00:20:26,740 --> 00:20:31,930
images back from our graph QL back end

00:20:29,170 --> 00:20:35,910
and now we can just add it to the UI so

00:20:31,930 --> 00:20:38,370
we'll say for each dog in dog images

00:20:35,910 --> 00:20:43,710
we'll go ahead and add that into our

00:20:38,370 --> 00:20:48,400
collection say collection dot add and

00:20:43,710 --> 00:20:54,240
pass in our dog all right so let's run

00:20:48,400 --> 00:20:57,970
the mobile app now and see how it looks

00:20:54,240 --> 00:21:03,190
more compiler errors way to go net

00:20:57,970 --> 00:21:05,860
catching all my typos today so let's

00:21:03,190 --> 00:21:09,060
give this a minute to build there it

00:21:05,860 --> 00:21:12,550
goes and so now our app should launch

00:21:09,060 --> 00:21:13,600
connect to our graph QL API and we have

00:21:12,550 --> 00:21:16,630
our list of Docs

00:21:13,600 --> 00:21:18,010
and and we can click on any of the dog

00:21:16,630 --> 00:21:20,710
if we wanted to see a little bit bigger

00:21:18,010 --> 00:21:22,840
the profile picture maybe we'll well

00:21:20,710 --> 00:21:24,360
take a list of the more images that come

00:21:22,840 --> 00:21:26,380
back and we can do more with this but

00:21:24,360 --> 00:21:28,240
what we've seen here is just with a

00:21:26,380 --> 00:21:32,260
couple lines of code and thanks to these

00:21:28,240 --> 00:21:34,150
graph QL SDKs we can easily create our

00:21:32,260 --> 00:21:36,610
graph QL client we can easily create

00:21:34,150 --> 00:21:39,100
graph QL queries get graph QL responses

00:21:36,610 --> 00:21:41,290
now the reason I say it's they're about

00:21:39,100 --> 00:21:43,060
85 95 percent of the way there is

00:21:41,290 --> 00:21:45,640
there's things I don't love I don't love

00:21:43,060 --> 00:21:47,860
this this hard-coded string yeah I'm a

00:21:45,640 --> 00:21:50,620
c-sharp developer I like I like strongly

00:21:47,860 --> 00:21:52,450
typed objects I wish you know maybe this

00:21:50,620 --> 00:21:55,930
someday could be a linked query maybe I

00:21:52,450 --> 00:21:58,630
could just say select and then list the

00:21:55,930 --> 00:22:00,190
properties I want back but the project's

00:21:58,630 --> 00:22:01,240
come a long way in just a couple years

00:22:00,190 --> 00:22:02,800
so I'm excited to see where they're

00:22:01,240 --> 00:22:06,850
going and like we mentioned there's a

00:22:02,800 --> 00:22:11,320
lot new SDKs also coming out so excited

00:22:06,850 --> 00:22:13,540
to see where everything goes all right I

00:22:11,320 --> 00:22:15,130
told I give you one more chance so if

00:22:13,540 --> 00:22:16,540
you haven't already now is your chance

00:22:15,130 --> 00:22:17,950
to take out your phones grab a picture

00:22:16,540 --> 00:22:19,630
of this slide because this is where

00:22:17,950 --> 00:22:21,640
you'll find everything that we covered

00:22:19,630 --> 00:22:23,440
today this is where you'll find these

00:22:21,640 --> 00:22:24,910
slides even though there's about five of

00:22:23,440 --> 00:22:26,890
them you can share those with your

00:22:24,910 --> 00:22:29,890
friends and coworkers the code is all

00:22:26,890 --> 00:22:31,810
available so we have the completed demo

00:22:29,890 --> 00:22:33,460
that we just put together here live in

00:22:31,810 --> 00:22:35,610
the session and then I also have a

00:22:33,460 --> 00:22:38,620
couple other xamarin apps that are

00:22:35,610 --> 00:22:40,390
consuming graph QL ap is that you can

00:22:38,620 --> 00:22:43,030
check out and see how we've implemented

00:22:40,390 --> 00:22:44,320
those and I've also included a bunch of

00:22:43,030 --> 00:22:47,230
links down at the bottom of this slide

00:22:44,320 --> 00:22:49,330
you know when I was learning graph QL it

00:22:47,230 --> 00:22:50,920
was kind of tough finding helpful

00:22:49,330 --> 00:22:52,540
resources there's a lot of stuff out

00:22:50,920 --> 00:22:54,880
there some of its helpful some of its

00:22:52,540 --> 00:22:57,130
not so if I included a list of all the

00:22:54,880 --> 00:22:59,050
resources that were helpful to me when I

00:22:57,130 --> 00:23:00,910
was learning about xamarin and graph QL

00:22:59,050 --> 00:23:05,100
and I know they'll be helpful for you

00:23:00,910 --> 00:23:05,100

YouTube URL: https://www.youtube.com/watch?v=kEWov9JHCjk


