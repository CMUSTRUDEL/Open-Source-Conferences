Title: I heart GraphQL and Kotlin (ROHIT BASU - Architect at PayPal)
Publication date: 2019-11-03
Playlist: GraphQL Summit 2019
Description: 
	In this talk, you'll hear from a Kotlin fanboy who wants to show you how he built his GraphQL APIs.
Captions: 
	00:00:01,089 --> 00:00:07,180
so as I was saying I had a grand vision

00:00:03,580 --> 00:00:10,090
for the stock when I submitted my

00:00:07,180 --> 00:00:13,840
proposal I thought of a lot of things

00:00:10,090 --> 00:00:18,609
and and then I finished my slides at

00:00:13,840 --> 00:00:20,769
around 3:30 a.m. last night so so yeah

00:00:18,609 --> 00:00:24,880
please there might be some spelling

00:00:20,769 --> 00:00:26,980
mistakes and stuff but but in the stock

00:00:24,880 --> 00:00:28,480
I'll be doing a lot of blah blah I'll

00:00:26,980 --> 00:00:31,509
talk about graphical a bit in between

00:00:28,480 --> 00:00:34,240
then bit more blah blah and Kotla and

00:00:31,509 --> 00:00:35,770
blah blah again and then the meat of the

00:00:34,240 --> 00:00:38,470
talk which are the four lines how to

00:00:35,770 --> 00:00:40,450
implement a graph QL Kotlin server while

00:00:38,470 --> 00:00:41,980
waiting at the sunny whale in an hour

00:00:40,450 --> 00:00:43,450
drive through mind you I lived in

00:00:41,980 --> 00:00:45,640
Sunnyvale for a long time and the

00:00:43,450 --> 00:00:47,170
in-and-out drive-thru was like it would

00:00:45,640 --> 00:00:49,000
take you 10 15 minutes to get your stuff

00:00:47,170 --> 00:00:51,850
but then that's the time I'm looking at

00:00:49,000 --> 00:00:53,710
to do to kind of get going with your

00:00:51,850 --> 00:00:56,080
server the mind you I'm talking about

00:00:53,710 --> 00:00:58,180
the graphical Gotland server and not the

00:00:56,080 --> 00:00:59,140
graph QL Kotlin library because for that

00:00:58,180 --> 00:01:02,650
you have to be at the chick-fil-a

00:00:59,140 --> 00:01:04,239
drive-thru so and that like takes

00:01:02,650 --> 00:01:07,810
forever like you're the traffic is stuck

00:01:04,239 --> 00:01:09,399
and I don't know like I love and then

00:01:07,810 --> 00:01:12,460
there will be some self-promotion

00:01:09,399 --> 00:01:14,079
shameless blogs etc etc I don't know if

00:01:12,460 --> 00:01:15,969
you can see it at the very bottom I have

00:01:14,079 --> 00:01:17,619
what I've mentioned here is all the

00:01:15,969 --> 00:01:20,049
shameless plugs will be highlighted in

00:01:17,619 --> 00:01:22,780
the eggplant color you have it in the

00:01:20,049 --> 00:01:27,429
MacBook whatever the color schemes you

00:01:22,780 --> 00:01:29,229
have and then yeah so that you you know

00:01:27,429 --> 00:01:32,429
when I'm trying to kind of promote

00:01:29,229 --> 00:01:36,009
myself or you know showing stuff which I

00:01:32,429 --> 00:01:41,920
which I'm good at and then so why

00:01:36,009 --> 00:01:44,380
Cortland okay I mentioned I've been

00:01:41,920 --> 00:01:47,319
coding for many years now and mostly

00:01:44,380 --> 00:01:49,899
Java but then again you know the world

00:01:47,319 --> 00:01:51,969
is JavaScript these days Bay Area if

00:01:49,899 --> 00:01:53,740
you're in Bay Area you need I mean my

00:01:51,969 --> 00:01:55,509
motivation was to put stickers on my

00:01:53,740 --> 00:01:56,679
laptop and I couldn't do that if I'm not

00:01:55,509 --> 00:01:59,319
a JavaScript developer

00:01:56,679 --> 00:02:01,420
I mean JavaScript developers are cool

00:01:59,319 --> 00:02:04,359
and our developers are like all like me

00:02:01,420 --> 00:02:06,369
so I'm trying my best to be cool and

00:02:04,359 --> 00:02:09,009
then it's not that I'm not coding in

00:02:06,369 --> 00:02:11,409
JavaScript I and my team like we have a

00:02:09,009 --> 00:02:14,230
lot of projects at PayPal in JavaScript

00:02:11,409 --> 00:02:14,980
and III code in JavaScript but then deep

00:02:14,230 --> 00:02:18,849
down inside

00:02:14,980 --> 00:02:22,120
I'm a JVM guy and and I think that Java

00:02:18,849 --> 00:02:25,030
and then then Kotlin which is like the

00:02:22,120 --> 00:02:28,090
next next version of the JVM awesome

00:02:25,030 --> 00:02:30,099
language has a lot to offer when you're

00:02:28,090 --> 00:02:32,410
building or writing services are back in

00:02:30,099 --> 00:02:34,569
court when it comes to front-end code

00:02:32,410 --> 00:02:36,849
okay javascript rules you know there's a

00:02:34,569 --> 00:02:38,790
there's a big gap between JavaScript and

00:02:36,849 --> 00:02:41,349
all the other languages but when you are

00:02:38,790 --> 00:02:44,590
you're basically trying to replace your

00:02:41,349 --> 00:02:45,640
REST API is with graph QL and and and

00:02:44,590 --> 00:02:47,470
yeah there was a time when I thought

00:02:45,640 --> 00:02:49,599
like why do I need graphical I'm like I

00:02:47,470 --> 00:02:51,940
know all this red stuff I know all the

00:02:49,599 --> 00:02:54,640
the methods very well I can I can write

00:02:51,940 --> 00:02:57,310
whatever I can in rest but then but in

00:02:54,640 --> 00:02:58,930
my project we had these graphical stuff

00:02:57,310 --> 00:03:02,079
and I saw it and I was like wow this is

00:02:58,930 --> 00:03:03,910
good and then and then if I have to

00:03:02,079 --> 00:03:07,810
implement a lot of lot of fancy

00:03:03,910 --> 00:03:10,060
complicated stuff scalable robust all

00:03:07,810 --> 00:03:11,980
those usual buzzwords I I need a

00:03:10,060 --> 00:03:14,319
language which which I can trust which I

00:03:11,980 --> 00:03:17,470
which I can tweak and and do a lot of

00:03:14,319 --> 00:03:20,049
things with so that's why Cortland is

00:03:17,470 --> 00:03:22,419
one of those languages because it is

00:03:20,049 --> 00:03:27,669
awesome in itself and B when it fails it

00:03:22,419 --> 00:03:29,650
just picks a picture of from Java so I I

00:03:27,669 --> 00:03:32,169
do not want to talk about Cortland here

00:03:29,650 --> 00:03:32,500
and and by the way the something I

00:03:32,169 --> 00:03:34,870
missed

00:03:32,500 --> 00:03:37,690
initially the the inspiration for my

00:03:34,870 --> 00:03:39,730
talk was there's this other guy from

00:03:37,690 --> 00:03:40,569
Robin Hood I guess who spoke yesterday

00:03:39,730 --> 00:03:44,079
at 2:00 p.m.

00:03:40,569 --> 00:03:46,329
about how rust and and Kotlin are a

00:03:44,079 --> 00:03:48,030
match made in heaven I for a moment last

00:03:46,329 --> 00:03:52,389
night I thought like I should rename my

00:03:48,030 --> 00:03:54,250
my my-my-my talk to Cortland and and and

00:03:52,389 --> 00:03:56,049
and craft kill another match made in

00:03:54,250 --> 00:03:59,200
heaven but but then I was like it won't

00:03:56,049 --> 00:04:01,540
look good so but then he actually spoke

00:03:59,200 --> 00:04:04,660
about how rust could be leveraged to

00:04:01,540 --> 00:04:06,220
build powerful graphical servers and I'm

00:04:04,660 --> 00:04:08,230
just talking about graphical servers and

00:04:06,220 --> 00:04:10,150
and with Kotlin you you write like

00:04:08,230 --> 00:04:11,799
really concise code I mean it's actually

00:04:10,150 --> 00:04:14,220
even more concise than JavaScript

00:04:11,799 --> 00:04:16,479
compared with Java it's like apples and

00:04:14,220 --> 00:04:21,400
let's think of a bigger fruit

00:04:16,479 --> 00:04:23,710
watermelons and grapes so so yeah so you

00:04:21,400 --> 00:04:26,349
you you have a lot of you write concise

00:04:23,710 --> 00:04:26,979
like very little code and Kotlin and get

00:04:26,349 --> 00:04:28,730
a lot done

00:04:26,979 --> 00:04:31,880
it's interoperable with

00:04:28,730 --> 00:04:33,650
so you you if you can just you know

00:04:31,880 --> 00:04:36,890
start crying Courtland code in your Java

00:04:33,650 --> 00:04:40,280
projects null safety is a big deal you

00:04:36,890 --> 00:04:43,640
know the billion dollar mistake I forget

00:04:40,280 --> 00:04:45,620
his name the guy who he he he was the

00:04:43,640 --> 00:04:46,310
one who invented the the quicksort of

00:04:45,620 --> 00:04:48,620
the merge sort

00:04:46,310 --> 00:04:49,760
I forget his name but but then yeah he

00:04:48,620 --> 00:04:52,570
said that it was a billion dollar

00:04:49,760 --> 00:04:55,100
mistake and Carlin handles now safety

00:04:52,570 --> 00:04:57,140
extensions another awesome feature so

00:04:55,100 --> 00:04:58,880
and co-routines again so these are all

00:04:57,140 --> 00:05:00,560
cotton features which I'm pretty sure

00:04:58,880 --> 00:05:02,660
that the small group we have here today

00:05:00,560 --> 00:05:03,950
in this room they must be interested and

00:05:02,660 --> 00:05:05,840
you guys must be interested in Gatlin

00:05:03,950 --> 00:05:08,360
and that's why you are here so but then

00:05:05,840 --> 00:05:11,270
you guys probably know it or can can

00:05:08,360 --> 00:05:12,830
look you know search you know Google at

00:05:11,270 --> 00:05:14,810
on internet or read some cotton

00:05:12,830 --> 00:05:16,430
documentation and then I have this again

00:05:14,810 --> 00:05:18,560
you know the color says at all it's a

00:05:16,430 --> 00:05:21,620
medium post where and I have created a

00:05:18,560 --> 00:05:24,970
small API for in Kotlin and it basically

00:05:21,620 --> 00:05:29,560
captures all the best things in Cortland

00:05:24,970 --> 00:05:33,230
okay so yeah so I I of course I started

00:05:29,560 --> 00:05:35,690
looking into graph kill and then and I

00:05:33,230 --> 00:05:37,760
wanted to write us our creator server in

00:05:35,690 --> 00:05:40,580
Kotlin and then I I go to graph guild or

00:05:37,760 --> 00:05:42,500
github dot is lash code and then they

00:05:40,580 --> 00:05:44,510
they have all these server libraries and

00:05:42,500 --> 00:05:46,150
I don't see Kotlin here and I'm like

00:05:44,510 --> 00:05:49,130
what I mean

00:05:46,150 --> 00:05:51,620
Gatlin is big I mean in 2017 Google made

00:05:49,130 --> 00:05:53,120
it the official language of Android so I

00:05:51,620 --> 00:05:55,130
thought like there should have been an

00:05:53,120 --> 00:05:57,230
entry for Kotlin in this list but there

00:05:55,130 --> 00:05:58,850
isn't and and I took the screen shot

00:05:57,230 --> 00:06:00,860
last night so it's still not there I

00:05:58,850 --> 00:06:03,140
mean there's not like old so I can

00:06:00,860 --> 00:06:04,520
assure you that unless they decided to

00:06:03,140 --> 00:06:08,450
put something on Halloween Day today

00:06:04,520 --> 00:06:10,610
early in the morning but and then so I

00:06:08,450 --> 00:06:12,860
was looking for a Cortland library you

00:06:10,610 --> 00:06:15,770
know which just like the Apollo library

00:06:12,860 --> 00:06:18,350
I mean all you do is one import or a

00:06:15,770 --> 00:06:21,050
statement and then you're good to go I

00:06:18,350 --> 00:06:22,760
want to write the Cortland server and so

00:06:21,050 --> 00:06:24,740
for to do that I wanted something which

00:06:22,760 --> 00:06:27,230
will understand the the Cortland oh

00:06:24,740 --> 00:06:30,230
sorry the graphical spec and let me

00:06:27,230 --> 00:06:35,180
write graphical code the graphical spec

00:06:30,230 --> 00:06:38,360
is 170 pages 85 pages front and back

00:06:35,180 --> 00:06:40,010
like you remember friends like Ross Ross

00:06:38,360 --> 00:06:41,999
was very upset with the fact that it was

00:06:40,010 --> 00:06:44,219
18 pages front and back so

00:06:41,999 --> 00:06:45,449
it's 85 pages front and back and it's

00:06:44,219 --> 00:06:47,699
not that difficult it's not that

00:06:45,449 --> 00:06:50,429
complicated I have I have read like much

00:06:47,699 --> 00:06:53,639
more complicated and and like more

00:06:50,429 --> 00:06:57,019
detailed specs but this this is like in

00:06:53,639 --> 00:06:57,019
graphical you are talking about types

00:06:58,999 --> 00:07:05,699
you're talking about types and query

00:07:03,179 --> 00:07:07,139
mutation subscription and that's about

00:07:05,699 --> 00:07:08,639
it if you understand these four five

00:07:07,139 --> 00:07:11,159
words you are good to go there is

00:07:08,639 --> 00:07:13,019
nothing much in it it's it's it's a form

00:07:11,159 --> 00:07:14,969
of object-oriented programming where

00:07:13,019 --> 00:07:16,319
your objects are your types and then

00:07:14,969 --> 00:07:18,149
you'll get our setters are your queries

00:07:16,319 --> 00:07:20,249
and mutations sorry I'm I'm kind of

00:07:18,149 --> 00:07:21,809
really diluting it but but it's more or

00:07:20,249 --> 00:07:23,369
less the same thing like people who have

00:07:21,809 --> 00:07:27,809
been calling for a long would understand

00:07:23,369 --> 00:07:29,519
that the it is what it is so I so the

00:07:27,809 --> 00:07:32,069
thing is that should I write my own

00:07:29,519 --> 00:07:36,059
library I mean I mean I I can I have the

00:07:32,069 --> 00:07:39,209
skills the color eggplant I mean I I can

00:07:36,059 --> 00:07:41,039
I can but then but then I'm a busy man

00:07:39,209 --> 00:07:43,409
I'm an architect at PayPal I do so many

00:07:41,039 --> 00:07:45,629
things Monday to Friday and then I work

00:07:43,409 --> 00:07:47,849
in San Jose 11 South City I travel like

00:07:45,629 --> 00:07:49,139
two hours one way so I have so many

00:07:47,849 --> 00:07:50,729
things to do Monday to Friday and

00:07:49,139 --> 00:07:52,110
weekends I'm like really super busy I

00:07:50,729 --> 00:07:54,269
get up at 4 a.m. in the morning to watch

00:07:52,110 --> 00:07:56,550
Premier League the soccer in England I'm

00:07:54,269 --> 00:07:58,050
a big fan of Liverpool Tarot o'clock

00:07:56,550 --> 00:07:58,969
generally the 49ers are playing so I

00:07:58,050 --> 00:08:01,289
have to watch football

00:07:58,969 --> 00:08:02,849
then there's baseball thankfully that's

00:08:01,289 --> 00:08:03,329
over yesterday my wife is very happy

00:08:02,849 --> 00:08:04,860
about it

00:08:03,329 --> 00:08:07,169
there's baseball and then the Warriors

00:08:04,860 --> 00:08:09,529
are started playing again so I have a

00:08:07,169 --> 00:08:13,469
busy Sunday right you know I have to

00:08:09,529 --> 00:08:15,809
yeah you know so so yeah I will i I

00:08:13,469 --> 00:08:17,999
decided not to write my own library it's

00:08:15,809 --> 00:08:20,009
just too much I mean it would be

00:08:17,999 --> 00:08:21,689
straightforward but yeah why why would I

00:08:20,009 --> 00:08:24,179
write my own library so when I have

00:08:21,689 --> 00:08:26,249
Google I'll google it and yes I did

00:08:24,179 --> 00:08:29,909
Google and and I did Google a lot I'll

00:08:26,249 --> 00:08:31,289
get googling for four years and then not

00:08:29,909 --> 00:08:33,629
years actually a few days and I'm not

00:08:31,289 --> 00:08:35,789
even few few hours maybe and then and

00:08:33,629 --> 00:08:37,889
then I found this this thing I mean it

00:08:35,789 --> 00:08:40,439
was like a saving grace graph QL Kotlin

00:08:37,889 --> 00:08:43,559
Springs over it's by it's an open-source

00:08:40,439 --> 00:08:46,860
project from the Expedia group and yeah

00:08:43,559 --> 00:08:49,740
that's it I was set for life and with

00:08:46,860 --> 00:08:52,889
that I don't know how much time I have I

00:08:49,740 --> 00:08:55,560
will let's quickly build this over so

00:08:52,889 --> 00:08:58,200
now so what is it again

00:08:55,560 --> 00:09:01,560
graphical Cartland spring/summer is a

00:08:58,200 --> 00:09:03,930
spring boot auto-configuration library

00:09:01,560 --> 00:09:05,610
so again I'm assuming that folks are who

00:09:03,930 --> 00:09:07,200
are here who work with Java Kotlin know

00:09:05,610 --> 00:09:08,720
what spring boot is and what spring is

00:09:07,200 --> 00:09:12,630
and they would probably know what

00:09:08,720 --> 00:09:14,339
auto-configuration is it's basically it

00:09:12,630 --> 00:09:16,080
automatically configures your spring

00:09:14,339 --> 00:09:18,210
application based on the dependencies

00:09:16,080 --> 00:09:19,830
and blah blah blah the bottom line is

00:09:18,210 --> 00:09:22,529
you don't have to do anything you you

00:09:19,830 --> 00:09:25,040
get your your skeleton project add this

00:09:22,529 --> 00:09:28,470
library to it and you're good to go

00:09:25,040 --> 00:09:29,690
again I have put a link to to the spring

00:09:28,470 --> 00:09:32,700
boot auto-configuration

00:09:29,690 --> 00:09:34,860
literature and then shall we build this

00:09:32,700 --> 00:09:36,810
hour then yes yes yes that's what we are

00:09:34,860 --> 00:09:38,610
here for that's what I have been like

00:09:36,810 --> 00:09:40,170
tweeting like I have just like few

00:09:38,610 --> 00:09:40,589
followers 50 once with you being one of

00:09:40,170 --> 00:09:43,350
them

00:09:40,589 --> 00:09:45,270
max being another but but yeah I I told

00:09:43,350 --> 00:09:48,510
them that yes I'm here to build a 20

00:09:45,270 --> 00:09:50,490
minute server so what do you see here is

00:09:48,510 --> 00:09:51,990
is what you need to do to have your

00:09:50,490 --> 00:09:53,700
graphical server ready and after the

00:09:51,990 --> 00:09:55,290
stock you can go out and spend 15-20

00:09:53,700 --> 00:09:56,880
minutes and have your quadrants all

00:09:55,290 --> 00:09:59,220
ready and like you can start shipping

00:09:56,880 --> 00:10:02,540
code so the first thing you have to do

00:09:59,220 --> 00:10:05,100
is go to start spring dot IO it's uh

00:10:02,540 --> 00:10:06,450
it's it's a spring initializer it

00:10:05,100 --> 00:10:09,420
everybody would probably know it whoever

00:10:06,450 --> 00:10:12,300
has worked with spring it it basically

00:10:09,420 --> 00:10:14,700
helps you bootstrap your project so the

00:10:12,300 --> 00:10:16,560
my project has a maven project I could

00:10:14,700 --> 00:10:18,930
have chosen gradall but then I like

00:10:16,560 --> 00:10:21,780
maven and then the language is Scotland

00:10:18,930 --> 00:10:24,180
spring boot version as 22.0 which is the

00:10:21,780 --> 00:10:29,339
latest version right now and then the

00:10:24,180 --> 00:10:31,500
hell is calling me right my my social

00:10:29,339 --> 00:10:33,240
security is has been compromised so I

00:10:31,500 --> 00:10:33,480
don't want I won't talk to them right

00:10:33,240 --> 00:10:37,950
now

00:10:33,480 --> 00:10:41,490
so so so yeah the project the metadata

00:10:37,950 --> 00:10:43,800
which is my my package etc and then I'm

00:10:41,490 --> 00:10:46,170
actually creating a spring reactive verb

00:10:43,800 --> 00:10:47,910
and that's all I do it it takes like

00:10:46,170 --> 00:10:49,320
maybe a minute to to fill this up maybe

00:10:47,910 --> 00:10:51,060
less than a minute depending on your

00:10:49,320 --> 00:10:52,650
typing speed if you're good on if you're

00:10:51,060 --> 00:10:56,760
chatting a lot with your friends you do

00:10:52,650 --> 00:10:58,650
it faster and then you hit and then it

00:10:56,760 --> 00:11:01,560
will basically create a zip file of your

00:10:58,650 --> 00:11:03,930
project and it will download it in your

00:11:01,560 --> 00:11:06,270
downloads folder once you have that you

00:11:03,930 --> 00:11:09,329
you pull it you open IntelliJ IntelliJ

00:11:06,270 --> 00:11:11,160
is the de-facto ID for me I mean

00:11:09,329 --> 00:11:14,369
and intelligence is built by the same

00:11:11,160 --> 00:11:18,420
guys who built Kotlin so this is this is

00:11:14,369 --> 00:11:20,249
an awesome awesome ide for java for

00:11:18,420 --> 00:11:22,949
javascript of course it's good there vs

00:11:20,249 --> 00:11:25,350
code there's another option but for java

00:11:22,949 --> 00:11:27,029
Cortland I use IntelliJ so when you when

00:11:25,350 --> 00:11:30,089
you pull your code you you'd see a photo

00:11:27,029 --> 00:11:33,179
structure like this it has nothing it

00:11:30,089 --> 00:11:34,860
has it has your Kotlin folder under

00:11:33,179 --> 00:11:37,949
which you have a package called comm

00:11:34,860 --> 00:11:40,470
door graphical summit demo and there's

00:11:37,949 --> 00:11:42,749
the the demo dot application which is

00:11:40,470 --> 00:11:44,279
the root application of your spring boot

00:11:42,749 --> 00:11:49,350
project and then you have an application

00:11:44,279 --> 00:11:52,110
property and then this is all you do to

00:11:49,350 --> 00:11:54,779
have your Kotlin server ready that's it

00:11:52,110 --> 00:11:58,290
like you add a dependency which is your

00:11:54,779 --> 00:12:00,540
graph kilcullen spring so and then in

00:11:58,290 --> 00:12:03,809
your application properties you give the

00:12:00,540 --> 00:12:05,970
the location of of the package where you

00:12:03,809 --> 00:12:07,829
have all your classes or you will have

00:12:05,970 --> 00:12:12,299
your classes which you want to convert

00:12:07,829 --> 00:12:15,689
it into graph Cal so this is it this is

00:12:12,299 --> 00:12:17,189
this is your your your Kotlin graphical

00:12:15,689 --> 00:12:20,279
server is ready now you have to add code

00:12:17,189 --> 00:12:22,499
to it but then this is what it is so and

00:12:20,279 --> 00:12:26,429
actually when you when you do a clean

00:12:22,499 --> 00:12:28,769
install you will see that your you see

00:12:26,429 --> 00:12:30,329
the schema and type query it's all it's

00:12:28,769 --> 00:12:32,489
all ready it's all set it's all good to

00:12:30,329 --> 00:12:35,189
go there's nothing in it but but it's

00:12:32,489 --> 00:12:38,309
all there the next thing is you you

00:12:35,189 --> 00:12:40,919
start by creating a your models and then

00:12:38,309 --> 00:12:43,110
I'll keep it very simple because you

00:12:40,919 --> 00:12:44,730
know I could have gone crazy with it but

00:12:43,110 --> 00:12:47,669
it was late in the night and I wanted to

00:12:44,730 --> 00:12:49,799
keep it simple I'm a speaker so my model

00:12:47,669 --> 00:12:53,489
would be a speaker a couple of fields on

00:12:49,799 --> 00:12:56,699
it and again I mean for some of you this

00:12:53,489 --> 00:12:58,470
might be very trivial I'm assuming most

00:12:56,699 --> 00:12:59,939
of you have been working on in graphical

00:12:58,470 --> 00:13:04,709
for a long time and you don't need to

00:12:59,939 --> 00:13:06,239
know this but then but then what I'm

00:13:04,709 --> 00:13:09,269
trying to do here is trying to show you

00:13:06,239 --> 00:13:11,399
how you do it in Kotlin so so pardon me

00:13:09,269 --> 00:13:12,869
if if it looks very very easy and

00:13:11,399 --> 00:13:15,269
trivial to you

00:13:12,869 --> 00:13:16,889
so I create a model which is a speaker

00:13:15,269 --> 00:13:19,169
and again if you see and those who have

00:13:16,889 --> 00:13:20,819
worked with in Java before to write a

00:13:19,169 --> 00:13:22,769
class like this you would have you would

00:13:20,819 --> 00:13:26,100
have had to write a lot of code you

00:13:22,769 --> 00:13:28,709
- right the getters the setters the the

00:13:26,100 --> 00:13:30,989
the equals the rehash and everything but

00:13:28,709 --> 00:13:33,499
Godwin is just one line so your model is

00:13:30,989 --> 00:13:35,910
ready which is actually your type and

00:13:33,499 --> 00:13:38,189
then then then you write your first

00:13:35,910 --> 00:13:42,360
query and and the good thing about the

00:13:38,189 --> 00:13:45,360
library is that it will give you a few

00:13:42,360 --> 00:13:47,549
marker interfaces and all you have to do

00:13:45,360 --> 00:13:50,040
is implement those marker interfaces if

00:13:47,549 --> 00:13:52,529
you want to if you want to you know have

00:13:50,040 --> 00:13:55,679
your graphical queries and mutations so

00:13:52,529 --> 00:13:57,600
I create a component called speaker

00:13:55,679 --> 00:13:59,910
query which will basically have all my

00:13:57,600 --> 00:14:02,369
queries I have a function called get

00:13:59,910 --> 00:14:06,029
speaker it's taking a string and

00:14:02,369 --> 00:14:08,069
returning a speaker it's very simple

00:14:06,029 --> 00:14:11,850
there's nothing in it the thing to note

00:14:08,069 --> 00:14:13,799
here in this this file is the query

00:14:11,850 --> 00:14:16,470
marker interface which I am I am

00:14:13,799 --> 00:14:18,869
implementing so marker interfaces are

00:14:16,470 --> 00:14:21,239
nothing but like just just an interface

00:14:18,869 --> 00:14:23,790
which is mark to be a marker interface

00:14:21,239 --> 00:14:25,559
you you implement it and it'll bring in

00:14:23,790 --> 00:14:28,049
some some functionality along with it

00:14:25,559 --> 00:14:29,610
and and that's what kind of tells the

00:14:28,049 --> 00:14:32,730
whole auto-configuration

00:14:29,610 --> 00:14:35,970
that hey this class is supposed to be a

00:14:32,730 --> 00:14:37,799
query and then you do this and then when

00:14:35,970 --> 00:14:40,559
you clean install again clean installers

00:14:37,799 --> 00:14:43,559
the the clean install is NPM install

00:14:40,559 --> 00:14:47,249
kind of thing so in the JavaScript world

00:14:43,559 --> 00:14:49,529
so you see that now my schema has query

00:14:47,249 --> 00:14:52,769
and I have a type query called get

00:14:49,529 --> 00:14:54,299
speaker it returns the speaker the

00:14:52,769 --> 00:14:56,519
exclamation marks a is that yeah it

00:14:54,299 --> 00:14:58,170
cannot be now and then I also have my

00:14:56,519 --> 00:15:02,209
type speaker which has a name and the

00:14:58,170 --> 00:15:06,089
title so if I run it you see that

00:15:02,209 --> 00:15:10,649
voila I have my graph Kotlin so already

00:15:06,089 --> 00:15:13,110
serving its first query so you're done

00:15:10,649 --> 00:15:14,759
actually I mean I mean I I will since I

00:15:13,110 --> 00:15:16,470
have to fill the next 30 minutes or

00:15:14,759 --> 00:15:18,329
whatever time I have I'll show you some

00:15:16,470 --> 00:15:21,480
more slides but then your server is

00:15:18,329 --> 00:15:24,179
ready so and and and so is your is your

00:15:21,480 --> 00:15:27,149
double meat double cheese at in-n-out

00:15:24,179 --> 00:15:28,919
burger so without the tomatoes I don't

00:15:27,149 --> 00:15:30,959
like the man himself yeah so that's

00:15:28,919 --> 00:15:32,790
that's that and let me show you a few

00:15:30,959 --> 00:15:35,549
more things which actually matter when

00:15:32,790 --> 00:15:36,750
you're brilliant graph QL so uh as I

00:15:35,549 --> 00:15:40,560
said the the graphic

00:15:36,750 --> 00:15:41,850
speckies very it's not that complicated

00:15:40,560 --> 00:15:43,050
there are a few things which you need to

00:15:41,850 --> 00:15:47,310
know and you need to know how to

00:15:43,050 --> 00:15:50,130
implement them so let's let's use some

00:15:47,310 --> 00:15:52,050
annotations graph kill is all about

00:15:50,130 --> 00:15:55,110
introspection and and you you should be

00:15:52,050 --> 00:15:57,000
able to read the the descriptions and

00:15:55,110 --> 00:16:00,060
stuff which comes with your types and

00:15:57,000 --> 00:16:02,940
Maurice so there is an annotation called

00:16:00,060 --> 00:16:05,310
graphical description and you you put

00:16:02,940 --> 00:16:06,840
these on your on your class and on your

00:16:05,310 --> 00:16:09,480
function and and write whatever you want

00:16:06,840 --> 00:16:12,780
and then what you see in your in your

00:16:09,480 --> 00:16:14,850
Docs is the same description so it's as

00:16:12,780 --> 00:16:17,520
simple as that I mean it's it's nothing

00:16:14,850 --> 00:16:18,900
like I think it takes more time to do it

00:16:17,520 --> 00:16:21,120
in JavaScript because you have to type

00:16:18,900 --> 00:16:22,890
the quotation three times in the

00:16:21,120 --> 00:16:24,750
beginning and three times at the end so

00:16:22,890 --> 00:16:27,300
and here you're just copy pasting it so

00:16:24,750 --> 00:16:28,950
I mean again I'm nothing against

00:16:27,300 --> 00:16:31,020
JavaScript folks but then I'm a

00:16:28,950 --> 00:16:34,770
JavaScript guy so the stickers say so

00:16:31,020 --> 00:16:37,380
so yeah that's your description and then

00:16:34,770 --> 00:16:40,850
you want to deprecate your your stuff

00:16:37,380 --> 00:16:44,850
simple add deprecated is the annotation

00:16:40,850 --> 00:16:47,670
mark your deprecated API or the query

00:16:44,850 --> 00:16:49,860
with a deprecated you put a message

00:16:47,670 --> 00:16:51,300
saying that forget this one and then

00:16:49,860 --> 00:16:53,390
replace it with whatever you want to

00:16:51,300 --> 00:16:57,860
replace it with creating one more

00:16:53,390 --> 00:16:59,970
function called latest and greatest I

00:16:57,860 --> 00:17:03,060
can't a term which I don't like but I

00:16:59,970 --> 00:17:06,900
love to use it but yeah you have your

00:17:03,060 --> 00:17:09,600
new query ready and then when you when

00:17:06,900 --> 00:17:12,750
you run yourself you see that it'll tell

00:17:09,600 --> 00:17:14,699
you too that the field where he has been

00:17:12,750 --> 00:17:16,970
deprecated and forget this one and

00:17:14,699 --> 00:17:19,319
relays replace it with something else so

00:17:16,970 --> 00:17:21,930
if you see like I've been talking for

00:17:19,319 --> 00:17:24,420
like 10-15 minutes now and you're more

00:17:21,930 --> 00:17:27,060
or less kind of you've already started

00:17:24,420 --> 00:17:29,370
writing your graphical server next thing

00:17:27,060 --> 00:17:31,560
I'm going to talk about is yeah you want

00:17:29,370 --> 00:17:33,510
to name your name your queries in a

00:17:31,560 --> 00:17:34,890
certain way I won't name my queries if I

00:17:33,510 --> 00:17:38,040
if give it a chance I'll name all my

00:17:34,890 --> 00:17:40,200
queries Rohit because I love my name but

00:17:38,040 --> 00:17:42,120
then you would not you would not do that

00:17:40,200 --> 00:17:45,360
so graphical name is another annotation

00:17:42,120 --> 00:17:47,220
you you you you name your queries in

00:17:45,360 --> 00:17:48,650
this case I'm I'm naming it some random

00:17:47,220 --> 00:17:51,740
name

00:17:48,650 --> 00:17:54,050
and if you go back to your graphical

00:17:51,740 --> 00:17:56,630
server you'll see that you are fetching

00:17:54,050 --> 00:17:58,850
it with that name so some random name is

00:17:56,630 --> 00:18:00,559
the name of your query instead of latest

00:17:58,850 --> 00:18:03,770
and greatest which I as I've told you I

00:18:00,559 --> 00:18:05,510
don't like it a few more things these

00:18:03,770 --> 00:18:07,970
are these are all like tricks Halloween

00:18:05,510 --> 00:18:09,650
trick-or-treat the treat would be the

00:18:07,970 --> 00:18:12,080
the way I'm showing you how to build a

00:18:09,650 --> 00:18:14,270
server and these are the tricks so graph

00:18:12,080 --> 00:18:17,180
Gale ignore again you want to ignore the

00:18:14,270 --> 00:18:19,220
the query which you just wrote so you

00:18:17,180 --> 00:18:20,929
deprecated one you you're going to

00:18:19,220 --> 00:18:22,640
ignore this one with a graphical ignore

00:18:20,929 --> 00:18:24,830
and you'll create one more call it

00:18:22,640 --> 00:18:29,620
speakers and then when you go back to

00:18:24,830 --> 00:18:32,720
your so where you see that you see that

00:18:29,620 --> 00:18:36,230
you you don't see that anymore I mean

00:18:32,720 --> 00:18:38,870
that's gone it's ignored so so I I put

00:18:36,230 --> 00:18:40,850
an ignore on the some random name and

00:18:38,870 --> 00:18:44,360
you don't see it anymore because I have

00:18:40,850 --> 00:18:45,860
ignored it and then let's a few more

00:18:44,360 --> 00:18:48,260
things which we do like that and this is

00:18:45,860 --> 00:18:49,550
all mostly I have seen in the graphical

00:18:48,260 --> 00:18:52,400
JavaScript servers these are the things

00:18:49,550 --> 00:18:53,960
which we do so you you have enums you

00:18:52,400 --> 00:18:55,670
don't you don't want to write like title

00:18:53,960 --> 00:18:57,800
every time so you create an enum with

00:18:55,670 --> 00:18:59,690
with like architects office in our

00:18:57,800 --> 00:19:02,510
slacker whatever you want to be and then

00:18:59,690 --> 00:19:05,960
and then you you basically replace your

00:19:02,510 --> 00:19:09,620
model the type instead of string you you

00:19:05,960 --> 00:19:11,600
use the enum title and then you update

00:19:09,620 --> 00:19:14,179
your your query and then when you run it

00:19:11,600 --> 00:19:17,870
you see that your enum is also showing

00:19:14,179 --> 00:19:20,179
up in your schema so and and and yeah I

00:19:17,870 --> 00:19:22,760
mean it's all fast it's it's it's that's

00:19:20,179 --> 00:19:24,820
the beauty of of Kotlin and graph kill

00:19:22,760 --> 00:19:27,730
that you you do things very fast i mean

00:19:24,820 --> 00:19:31,250
the rate at which your code is very fast

00:19:27,730 --> 00:19:33,080
and then one more thing I wanted to

00:19:31,250 --> 00:19:35,660
mention this is something we we use we

00:19:33,080 --> 00:19:39,020
all use so the context so for example

00:19:35,660 --> 00:19:41,270
I'm querying a graphical server but the

00:19:39,020 --> 00:19:44,330
server wants to know something about me

00:19:41,270 --> 00:19:45,860
or something about in general but that

00:19:44,330 --> 00:19:48,830
should not be part of the query I mean I

00:19:45,860 --> 00:19:51,080
don't have to pass it so what I do is I

00:19:48,830 --> 00:19:53,570
create a custom context and it's very

00:19:51,080 --> 00:19:55,850
easy to do that with this library so you

00:19:53,570 --> 00:19:57,770
you basically create your your custom

00:19:55,850 --> 00:19:59,360
context in this case it's custom context

00:19:57,770 --> 00:20:01,640
and it takes a

00:19:59,360 --> 00:20:05,000
a value called custom which is a string

00:20:01,640 --> 00:20:06,920
and then you do this which is create

00:20:05,000 --> 00:20:09,910
your custom graphical context Factory

00:20:06,920 --> 00:20:12,800
you're basically implementing the

00:20:09,910 --> 00:20:15,440
graphical context Factory with your

00:20:12,800 --> 00:20:17,030
custom context and and that's it and

00:20:15,440 --> 00:20:20,060
then you come back to your query and

00:20:17,030 --> 00:20:22,940
then add this custom context in your

00:20:20,060 --> 00:20:24,650
query so so what happens is and again

00:20:22,940 --> 00:20:26,300
this is not something I'm not returning

00:20:24,650 --> 00:20:27,710
anything and if you see I've added a

00:20:26,300 --> 00:20:31,780
question mark at the end of the speaker

00:20:27,710 --> 00:20:35,630
this is Scotland's way of null to make

00:20:31,780 --> 00:20:37,130
an object null and no safety is as I

00:20:35,630 --> 00:20:38,600
said as big in Cortland so you just put

00:20:37,130 --> 00:20:41,750
a question mark and you you can now

00:20:38,600 --> 00:20:43,430
return null from your methods so I'm

00:20:41,750 --> 00:20:46,100
returning a null but then I'm printing

00:20:43,430 --> 00:20:49,040
the the custom context so when I run the

00:20:46,100 --> 00:20:50,420
this this query yeah I'm not passing it

00:20:49,040 --> 00:20:52,550
the custom context in the query itself

00:20:50,420 --> 00:20:54,800
but if I look at my console you will see

00:20:52,550 --> 00:20:58,370
that just some random random context

00:20:54,800 --> 00:21:01,100
which was set in the the custom factory

00:20:58,370 --> 00:21:04,340
context factory is showing up so you can

00:21:01,100 --> 00:21:05,930
add as many custom variables as you want

00:21:04,340 --> 00:21:14,180
and and you collect information about

00:21:05,930 --> 00:21:16,340
your client and and whatnot so a formas

00:21:14,180 --> 00:21:20,510
ok ok ok fine anyways I'm at the end of

00:21:16,340 --> 00:21:22,190
it like so so then ok we did some

00:21:20,510 --> 00:21:25,010
queries let's do some mutation again

00:21:22,190 --> 00:21:27,200
it's it's like very simple like you

00:21:25,010 --> 00:21:28,640
don't have to do anything like make sure

00:21:27,200 --> 00:21:30,770
that you you create a new folder called

00:21:28,640 --> 00:21:33,080
mutations that way you keep everything

00:21:30,770 --> 00:21:35,750
in one place create a class called

00:21:33,080 --> 00:21:37,820
speaker mutation Kotlin class not a Java

00:21:35,750 --> 00:21:39,830
class and then and then again you

00:21:37,820 --> 00:21:42,170
implement the marker interface mutation

00:21:39,830 --> 00:21:43,820
the moment you you implement mutation

00:21:42,170 --> 00:21:45,920
the marker interface the auto

00:21:43,820 --> 00:21:48,470
configuration will know that you want

00:21:45,920 --> 00:21:50,750
this class to be a mutation and it'll

00:21:48,470 --> 00:21:52,970
take care of the rest so I create a

00:21:50,750 --> 00:21:55,190
function called at speaker I put a

00:21:52,970 --> 00:21:57,770
description I collect a few things

00:21:55,190 --> 00:21:59,810
that's the name and the title and then

00:21:57,770 --> 00:22:01,250
yeah that's it I print both of them

00:21:59,810 --> 00:22:01,790
because I'm not connected to a database

00:22:01,250 --> 00:22:03,770
yet

00:22:01,790 --> 00:22:06,080
so I'm gonna print it on the console and

00:22:03,770 --> 00:22:08,930
then I return the speaker so I run my

00:22:06,080 --> 00:22:12,620
server and you see that now I am running

00:22:08,930 --> 00:22:15,110
my mutation which is a speaker

00:22:12,620 --> 00:22:18,220
I named it the goat greatest of all time

00:22:15,110 --> 00:22:20,990
and then the title would be anything so

00:22:18,220 --> 00:22:23,050
yeah and when I run the server I get the

00:22:20,990 --> 00:22:26,750
response back and if I look at the the

00:22:23,050 --> 00:22:28,970
console output you see that it prints

00:22:26,750 --> 00:22:30,650
whatever you pass so your mutation is

00:22:28,970 --> 00:22:35,860
working you can take this data and put

00:22:30,650 --> 00:22:39,350
it in some some database and then so

00:22:35,860 --> 00:22:41,000
that's it that's that's what I want to

00:22:39,350 --> 00:22:42,500
talk about because because you actually

00:22:41,000 --> 00:22:45,320
have yourself ready and now you can go

00:22:42,500 --> 00:22:48,500
crazy with it but but you are you have

00:22:45,320 --> 00:22:51,140
something up and running and then I'm at

00:22:48,500 --> 00:22:54,050
PayPal we are hiring we have max and

00:22:51,140 --> 00:22:55,490
Shorty and others from PayPal we're

00:22:54,050 --> 00:22:58,280
hiring so yeah you could connect with

00:22:55,490 --> 00:22:59,960
all of any one of us and then Mark

00:22:58,280 --> 00:23:02,660
Stewart who is our graphic a leader at

00:22:59,960 --> 00:23:05,150
PayPal he wrote an awesome blog about

00:23:02,660 --> 00:23:07,490
how we scaled graph kill at PayPal so

00:23:05,150 --> 00:23:09,410
you may want to read about this and then

00:23:07,490 --> 00:23:11,930
yeah again some more self-promotion

00:23:09,410 --> 00:23:13,430
shameless plugs etc etc this is the git

00:23:11,930 --> 00:23:15,230
repository where you'll find all this

00:23:13,430 --> 00:23:17,240
code it's you could actually just clone

00:23:15,230 --> 00:23:18,500
it and start working with it and then

00:23:17,240 --> 00:23:20,720
that's me

00:23:18,500 --> 00:23:23,690
Roy at D Basu as I said I have 51

00:23:20,720 --> 00:23:25,700
followers is this 2005 again when I had

00:23:23,690 --> 00:23:28,670
created my first account and Orkut Orkut

00:23:25,700 --> 00:23:29,900
was life before Facebook and I used to

00:23:28,670 --> 00:23:32,240
compete with my friends to have more

00:23:29,900 --> 00:23:33,290
friends so now I'm competing with truthy

00:23:32,240 --> 00:23:34,730
Kapoor who has five thousand followers

00:23:33,290 --> 00:23:37,460
and I have 51 so yeah

00:23:34,730 --> 00:23:39,740
please and then and that this is how see

00:23:37,460 --> 00:23:41,390
co-host eco is the cat eye he's very

00:23:39,740 --> 00:23:42,890
popular he has a million followers like

00:23:41,390 --> 00:23:43,880
just imagine like I have 51 he has a

00:23:42,890 --> 00:23:46,040
million

00:23:43,880 --> 00:23:49,220
even though he's a spot cat and then

00:23:46,040 --> 00:23:52,190
thank you that's all I have

00:23:49,220 --> 00:23:52,190

YouTube URL: https://www.youtube.com/watch?v=qOFUYxinkbk


