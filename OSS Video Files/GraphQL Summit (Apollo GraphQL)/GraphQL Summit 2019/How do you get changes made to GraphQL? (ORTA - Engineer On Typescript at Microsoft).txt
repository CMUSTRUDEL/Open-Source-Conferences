Title: How do you get changes made to GraphQL? (ORTA - Engineer On Typescript at Microsoft)
Publication date: 2019-11-03
Playlist: GraphQL Summit 2019
Description: 
	In this talk, you'll learn how to pitch for a change to the GraphQL specs, or first-party projects.
Captions: 
	00:00:01,710 --> 00:00:10,600
all right Mic Check yeah perfect

00:00:04,600 --> 00:00:14,020
hello everybody pardon thank you

00:00:10,600 --> 00:00:16,359
all right so folks everyone in this room

00:00:14,020 --> 00:00:18,640
has heard of graph QL we saw that at the

00:00:16,359 --> 00:00:21,699
keynote and they said about 50% of

00:00:18,640 --> 00:00:25,390
people and the entire conference have

00:00:21,699 --> 00:00:27,519
got graph QL in production I would be

00:00:25,390 --> 00:00:30,400
surprised to find if in this entire

00:00:27,519 --> 00:00:32,110
conference about 5% of the audience have

00:00:30,400 --> 00:00:34,500
actually contributed to graph QL the

00:00:32,110 --> 00:00:37,390
language or some of its larger ecosystem

00:00:34,500 --> 00:00:39,700
and so what I'd like to try and do is

00:00:37,390 --> 00:00:41,200
sort of pull the curtains back on what

00:00:39,700 --> 00:00:43,810
it looks like to be contributing at that

00:00:41,200 --> 00:00:45,190
level and try and understand how all the

00:00:43,810 --> 00:00:48,700
systems come together and help you

00:00:45,190 --> 00:00:50,590
actually you know do it yourself so to

00:00:48,700 --> 00:00:53,500
do that we're gonna split it into three

00:00:50,590 --> 00:00:55,750
major sections there is how is graph QL

00:00:53,500 --> 00:00:59,080
structured like organizational and

00:00:55,750 --> 00:01:01,120
bureaucratically you know what the

00:00:59,080 --> 00:01:04,930
process for change looks like inside

00:01:01,120 --> 00:01:07,270
graph QL and then finally how can you

00:01:04,930 --> 00:01:09,429
get involved and you know a lot of the

00:01:07,270 --> 00:01:11,710
way in which we think of graph QL is you

00:01:09,429 --> 00:01:13,450
know this sort of language entity but

00:01:11,710 --> 00:01:15,039
the vast majority of it is about the

00:01:13,450 --> 00:01:16,270
spec and I'm sure you'll have heard

00:01:15,039 --> 00:01:18,579
about the spec in a few different places

00:01:16,270 --> 00:01:22,119
but we're gonna talk it about it in

00:01:18,579 --> 00:01:23,950
quite a depth here so to get started

00:01:22,119 --> 00:01:26,439
this is me you've already heard my intro

00:01:23,950 --> 00:01:28,600
I did indeed work on the prettier

00:01:26,439 --> 00:01:31,149
redesign the react native redesign and

00:01:28,600 --> 00:01:33,460
the jest redesigned quite recently and

00:01:31,149 --> 00:01:35,499
I've been pitching to the Babel team

00:01:33,460 --> 00:01:40,840
that this should be the new Babel logo I

00:01:35,499 --> 00:01:43,240
know right it smoked you this year I

00:01:40,840 --> 00:01:45,039
managed to ship a really like popular

00:01:43,240 --> 00:01:47,530
game 20 million games were played on

00:01:45,039 --> 00:01:48,880
this it's like flappy Royale meets flat

00:01:47,530 --> 00:01:52,179
flips like flappy bird meets a battle

00:01:48,880 --> 00:01:53,649
royale but in the open source world I've

00:01:52,179 --> 00:01:56,560
been doing things like running a

00:01:53,649 --> 00:01:59,049
dependency manager for iOS

00:01:56,560 --> 00:02:01,119
I built a tool called danger which makes

00:01:59,049 --> 00:02:02,859
it easy for you to start making sort of

00:02:01,119 --> 00:02:05,950
unit test rules for your pull requests

00:02:02,859 --> 00:02:09,909
so let's say you always have to oh one

00:02:05,950 --> 00:02:11,590
of the one rules we had was at artsy

00:02:09,909 --> 00:02:14,500
whenever we made a change to a graphical

00:02:11,590 --> 00:02:16,630
schema you had to also make sure that a

00:02:14,500 --> 00:02:19,480
a graph QL schema file it was in the

00:02:16,630 --> 00:02:21,280
root of every single repo and so danger

00:02:19,480 --> 00:02:23,590
would check that any PR that made

00:02:21,280 --> 00:02:25,870
changes to the schema also included a

00:02:23,590 --> 00:02:27,990
text change to the SDL at the bottom

00:02:25,870 --> 00:02:32,230
because we were kind of a code first

00:02:27,990 --> 00:02:34,390
schema at the time and now I work on

00:02:32,230 --> 00:02:35,860
typescript which is something that has

00:02:34,390 --> 00:02:38,170
come up in almost every single talk

00:02:35,860 --> 00:02:39,820
because I've attended here and it seems

00:02:38,170 --> 00:02:41,140
like lots of people love it and use it

00:02:39,820 --> 00:02:43,209
over in the graphic UL community and

00:02:41,140 --> 00:02:45,010
that makes tons of sense you know types

00:02:43,209 --> 00:02:46,209
on one side types on the other side you

00:02:45,010 --> 00:02:49,380
get a really nice tight connection

00:02:46,209 --> 00:02:52,150
between how all the pieces come together

00:02:49,380 --> 00:02:53,709
so I work on typescript as a compiler

00:02:52,150 --> 00:02:56,290
engineer but I'm here at a graph QL

00:02:53,709 --> 00:02:58,600
conference and you'd be shocked to learn

00:02:56,290 --> 00:03:01,300
that we don't actually use graph QL in

00:02:58,600 --> 00:03:03,100
typescript at all a lot of my

00:03:01,300 --> 00:03:04,450
experiences for how for what we're gonna

00:03:03,100 --> 00:03:06,340
be talking about actually come from the

00:03:04,450 --> 00:03:09,580
place I used to look at and that was a

00:03:06,340 --> 00:03:11,770
place called artsy and the goal of artsy

00:03:09,580 --> 00:03:13,090
was to make it easy to buy and sell find

00:03:11,770 --> 00:03:15,070
out on the Internet

00:03:13,090 --> 00:03:17,650
and it's pretty much achieved that in

00:03:15,070 --> 00:03:20,799
the past seven or eight years I was

00:03:17,650 --> 00:03:23,290
working there and we had like this one

00:03:20,799 --> 00:03:26,470
single graph QL instance that we started

00:03:23,290 --> 00:03:28,980
back in 2015 and this graph QL instance

00:03:26,470 --> 00:03:31,269
really made it easy for us to start

00:03:28,980 --> 00:03:34,570
adopting graph QL at quite a large scale

00:03:31,269 --> 00:03:38,560
on both a react native app and a web app

00:03:34,570 --> 00:03:40,299
and we ended up doing the sort of we

00:03:38,560 --> 00:03:43,660
ended up making a sort of API gateway

00:03:40,299 --> 00:03:46,209
which worked out really well for us we

00:03:43,660 --> 00:03:48,010
also explored stitching you can see here

00:03:46,209 --> 00:03:49,329
this is like some custom developer

00:03:48,010 --> 00:03:51,880
tooling that we used in the sort of

00:03:49,329 --> 00:03:53,470
extensions part of the JSON it would

00:03:51,880 --> 00:03:56,410
tell you every single request that was

00:03:53,470 --> 00:03:58,360
made for your API this one is our main

00:03:56,410 --> 00:04:00,579
artists database and then this one is

00:03:58,360 --> 00:04:02,500
our main articles database you could see

00:04:00,579 --> 00:04:05,110
which ones take longest or did different

00:04:02,500 --> 00:04:08,530
parts of the system and we use graph QL

00:04:05,110 --> 00:04:10,269
to provide both like a single entry

00:04:08,530 --> 00:04:12,190
point to all of our different API is but

00:04:10,269 --> 00:04:15,700
as well as to provide derive data on top

00:04:12,190 --> 00:04:18,250
of the sort of raw data that we get back

00:04:15,700 --> 00:04:20,470
from a database and so this is a sort of

00:04:18,250 --> 00:04:23,530
place where we were over the over the

00:04:20,470 --> 00:04:25,419
course of a few years we we as artsy

00:04:23,530 --> 00:04:28,190
were start trying to like contribute

00:04:25,419 --> 00:04:29,660
back to the graph QL ecosystem bye-bye

00:04:28,190 --> 00:04:31,520
helping to improve tooling or trying to

00:04:29,660 --> 00:04:33,440
persuade people to support certain

00:04:31,520 --> 00:04:35,150
things we were trying to figure out

00:04:33,440 --> 00:04:37,280
graph QL subscriptions at the same time

00:04:35,150 --> 00:04:38,870
as everybody else was and had our own

00:04:37,280 --> 00:04:40,400
stabbed and attempt at what that looked

00:04:38,870 --> 00:04:42,890
like but it didn't turn into the actual

00:04:40,400 --> 00:04:44,780
spec version so now my version of

00:04:42,890 --> 00:04:48,080
subscriptions is like in my mind is very

00:04:44,780 --> 00:04:49,880
different from actually reality so we

00:04:48,080 --> 00:04:53,540
ended up contributing to graph QL a few

00:04:49,880 --> 00:04:56,270
times and in the process of that we

00:04:53,540 --> 00:04:57,860
really felt like to understand how to

00:04:56,270 --> 00:04:59,180
contribute to graph gorilla and

00:04:57,860 --> 00:05:01,310
ecosystem level you really had to

00:04:59,180 --> 00:05:04,490
understand how graph QL is structured

00:05:01,310 --> 00:05:06,620
and one way to really really learn this

00:05:04,490 --> 00:05:08,780
is to have a tiny bit of history from me

00:05:06,620 --> 00:05:11,660
but you should actually go and watch

00:05:08,780 --> 00:05:13,250
this documentary and this year around

00:05:11,660 --> 00:05:15,440
June there was a graph QL the

00:05:13,250 --> 00:05:17,630
documentary video that came out on

00:05:15,440 --> 00:05:19,460
YouTube it's solid I would strongly

00:05:17,630 --> 00:05:23,150
recommend it it's like half an hour and

00:05:19,460 --> 00:05:26,270
it really describes like from 0 to 20

00:05:23,150 --> 00:05:28,250
min to maybe the end of 2018 like the

00:05:26,270 --> 00:05:30,260
history of half of grass QL how it was

00:05:28,250 --> 00:05:33,770
created why it was created and what

00:05:30,260 --> 00:05:38,750
motivations they see going forwards

00:05:33,770 --> 00:05:41,630
so roughly created in 2012 by Dan

00:05:38,750 --> 00:05:42,800
Schafer Nick rock and Lee Byron and they

00:05:41,630 --> 00:05:47,330
were trying to adjust data handling

00:05:42,800 --> 00:05:49,960
within a native app and then in 2015 it

00:05:47,330 --> 00:05:52,160
was sort of released to the public and

00:05:49,960 --> 00:05:55,040
it was released to the public in a way

00:05:52,160 --> 00:05:57,740
that was was a little bit unique at the

00:05:55,040 --> 00:05:59,720
time which is instead of releasing you

00:05:57,740 --> 00:06:01,190
know a reference implementation and

00:05:59,720 --> 00:06:03,440
saying this is how this is what it is

00:06:01,190 --> 00:06:06,800
the instead say this is a specification

00:06:03,440 --> 00:06:08,570
for graph QL line a query language and

00:06:06,800 --> 00:06:13,310
here is how responses work and here's

00:06:08,570 --> 00:06:15,919
our requests and generally work so by

00:06:13,310 --> 00:06:17,390
shipping a query by shipping a

00:06:15,919 --> 00:06:20,600
specification that gave them the ability

00:06:17,390 --> 00:06:23,330
to actually start saying we only care

00:06:20,600 --> 00:06:25,550
about this this aspect of a query

00:06:23,330 --> 00:06:27,140
language and the way in which data can

00:06:25,550 --> 00:06:29,570
be transformed between these two things

00:06:27,140 --> 00:06:31,610
the actual implementations of it is

00:06:29,570 --> 00:06:33,530
something that we as like Facebook

00:06:31,610 --> 00:06:36,020
engineers at the time are not actually

00:06:33,530 --> 00:06:37,490
going to be providing for you we're

00:06:36,020 --> 00:06:39,890
trying to provide a way for people to

00:06:37,490 --> 00:06:41,420
build this thing in the future but not

00:06:39,890 --> 00:06:44,060
necessarily to be the ones to

00:06:41,420 --> 00:06:46,880
the exact implementation at the time the

00:06:44,060 --> 00:06:49,820
the version is now graphed q LJ s was

00:06:46,880 --> 00:06:53,900
was effectively a way to prove that the

00:06:49,820 --> 00:06:55,520
spec was like doable and that it was

00:06:53,900 --> 00:06:57,350
expected that the community would find

00:06:55,520 --> 00:06:59,000
its own implementations and you know

00:06:57,350 --> 00:07:00,710
there are now many implementations of

00:06:59,000 --> 00:07:04,010
graph QL there were some talks on like

00:07:00,710 --> 00:07:06,470
the c-sharp one the rust one and you

00:07:04,010 --> 00:07:08,960
know the Java or whatever there's a lot

00:07:06,470 --> 00:07:10,910
of them and like all these people tend

00:07:08,960 --> 00:07:13,190
to come together and sort of band around

00:07:10,910 --> 00:07:14,510
what the spec looks like and see that

00:07:13,190 --> 00:07:17,870
evolve over time

00:07:14,510 --> 00:07:22,010
so this actually echoes JavaScript quite

00:07:17,870 --> 00:07:23,720
a lot there is a JavaScript spec that

00:07:22,010 --> 00:07:26,600
many different language implementers

00:07:23,720 --> 00:07:29,030
also sort of conform to and they all

00:07:26,600 --> 00:07:30,500
agree on what JavaScript looks like and

00:07:29,030 --> 00:07:33,410
then each one implements their own

00:07:30,500 --> 00:07:36,260
version of the jobs the JavaScript spec

00:07:33,410 --> 00:07:38,270
and you know in the case of JavaScript

00:07:36,260 --> 00:07:41,930
not everyone conforms to the exact same

00:07:38,270 --> 00:07:44,000
spec but in in graph QL almost every

00:07:41,930 --> 00:07:48,160
language has almost every single feature

00:07:44,000 --> 00:07:50,540
that comes inside the spec so from

00:07:48,160 --> 00:07:53,150
shipping the spec over the cost of the

00:07:50,540 --> 00:07:55,340
last few years there's a great quote in

00:07:53,150 --> 00:07:58,340
the documentary that from Lee that says

00:07:55,340 --> 00:07:59,990
like you know we saw graph QL go from

00:07:58,340 --> 00:08:01,910
being used by a few hobbyists to being

00:07:59,990 --> 00:08:04,550
used by companies to being used as an

00:08:01,910 --> 00:08:07,550
industry standard and each one of those

00:08:04,550 --> 00:08:10,040
has sort of different levels of sort of

00:08:07,550 --> 00:08:13,220
process required to actually make

00:08:10,040 --> 00:08:15,110
changes work and also like they have

00:08:13,220 --> 00:08:18,890
different areas of sort of political

00:08:15,110 --> 00:08:20,780
friction and to start thinking of graph

00:08:18,890 --> 00:08:24,080
QL as an industry standard they really

00:08:20,780 --> 00:08:26,000
had to start changing what graph QL the

00:08:24,080 --> 00:08:29,780
sort of organizational structure looked

00:08:26,000 --> 00:08:31,520
like and you know back when it was just

00:08:29,780 --> 00:08:33,229
a few companies and hobbyists it was

00:08:31,520 --> 00:08:35,420
okay for Facebook to be in control of

00:08:33,229 --> 00:08:38,600
almost all of the spec and have like

00:08:35,420 --> 00:08:41,210
very tight rigid control over it but in

00:08:38,600 --> 00:08:43,280
order to be you know a collaborative

00:08:41,210 --> 00:08:45,140
environment where many people could feel

00:08:43,280 --> 00:08:47,420
like they felt some ownership over the

00:08:45,140 --> 00:08:49,070
process and in order to actually be an

00:08:47,420 --> 00:08:50,570
industry standard you real Facebook

00:08:49,070 --> 00:08:53,720
needed to find a way to decouple

00:08:50,570 --> 00:08:54,420
themselves from being the owners of

00:08:53,720 --> 00:08:56,370
crack you

00:08:54,420 --> 00:08:58,290
- moving it into a sort of industry

00:08:56,370 --> 00:09:00,720
standard that is not like directly tied

00:08:58,290 --> 00:09:04,380
to Facebook so the process in which they

00:09:00,720 --> 00:09:07,889
did that happened in 2008 and it was

00:09:04,380 --> 00:09:10,320
done by sort of first moving graph QL

00:09:07,889 --> 00:09:13,380
into the Linux Foundation and then

00:09:10,320 --> 00:09:17,310
secretin secondly starting to work with

00:09:13,380 --> 00:09:20,130
the joint development foundation so what

00:09:17,310 --> 00:09:23,399
is the Linux Foundation it is roughly a

00:09:20,130 --> 00:09:25,829
builder foundation as a service though

00:09:23,399 --> 00:09:27,540
the people that built Linux in fact

00:09:25,829 --> 00:09:28,860
really wanted to sort of make sure that

00:09:27,540 --> 00:09:32,310
many people could be involved in the

00:09:28,860 --> 00:09:34,050
Linux process and could sort of

00:09:32,310 --> 00:09:35,670
centralized funding and try and find

00:09:34,050 --> 00:09:38,250
ways to get people paid to work on Linux

00:09:35,670 --> 00:09:41,010
correctly and then the same sort of

00:09:38,250 --> 00:09:42,600
problem meant that other communities

00:09:41,010 --> 00:09:46,709
would need that same sort of

00:09:42,600 --> 00:09:49,079
infrastructure so what's quite common in

00:09:46,709 --> 00:09:51,810
javascript is that there is an open J's

00:09:49,079 --> 00:09:55,500
foundation and come and like projects

00:09:51,810 --> 00:09:57,750
like jQuery or dojo or grunt or node all

00:09:55,500 --> 00:09:59,459
live inside this foundation not

00:09:57,750 --> 00:10:01,199
necessarily owned by any one single

00:09:59,459 --> 00:10:03,390
company but owned by a collection of

00:10:01,199 --> 00:10:04,980
companies that pay membership fees that

00:10:03,390 --> 00:10:07,079
helps to go towards the maintenance of

00:10:04,980 --> 00:10:11,160
all of these kind of core libraries and

00:10:07,079 --> 00:10:13,079
tools and quite reasonably you know the

00:10:11,160 --> 00:10:15,180
creators of graph QL wanted that for

00:10:13,079 --> 00:10:16,620
graph QL like to make it an industry

00:10:15,180 --> 00:10:18,750
standard you need a lot of people to

00:10:16,620 --> 00:10:21,089
feel involved in the process and by

00:10:18,750 --> 00:10:22,920
doing that and everybody could feel like

00:10:21,089 --> 00:10:26,910
it wasn't just a singular Facebook

00:10:22,920 --> 00:10:29,430
project so after the Linux Foundation

00:10:26,910 --> 00:10:30,660
got started with graph QL they created

00:10:29,430 --> 00:10:34,290
what is now called the graph QL

00:10:30,660 --> 00:10:36,000
foundation and that is sort of

00:10:34,290 --> 00:10:38,010
effectively the service that Linux

00:10:36,000 --> 00:10:41,970
Foundation provided for the for graph QL

00:10:38,010 --> 00:10:44,550
this sort of data language and that has

00:10:41,970 --> 00:10:46,500
to people effectively on the the board

00:10:44,550 --> 00:10:49,079
which is lee byron one of the original

00:10:46,500 --> 00:10:51,300
creators and Brian Warner who comes from

00:10:49,079 --> 00:10:54,120
the Linux Foundation to sort of provide

00:10:51,300 --> 00:10:56,730
like experience and sort of provide a

00:10:54,120 --> 00:11:00,029
bunch of useful advice as the program

00:10:56,730 --> 00:11:02,339
director they do things like trying to

00:11:00,029 --> 00:11:05,040
map the graph QL landscape this came out

00:11:02,339 --> 00:11:06,460
this week and it's a sort of work in

00:11:05,040 --> 00:11:08,290
progress tool that

00:11:06,460 --> 00:11:09,580
view almost everyone that's actually

00:11:08,290 --> 00:11:11,800
involved in the sort of graphical

00:11:09,580 --> 00:11:14,110
ecosystem and tries to give you an

00:11:11,800 --> 00:11:16,120
understanding at a high level how all

00:11:14,110 --> 00:11:19,600
these pieces and people come together to

00:11:16,120 --> 00:11:22,720
actually make graph QL a successful

00:11:19,600 --> 00:11:24,670
thing and this is like still a work in

00:11:22,720 --> 00:11:25,899
progress so if you actually go and check

00:11:24,670 --> 00:11:27,310
this out and you find that your

00:11:25,899 --> 00:11:29,790
company's not on there they're

00:11:27,310 --> 00:11:32,320
definitely accept pull requests with new

00:11:29,790 --> 00:11:34,779
new people that should be an added to it

00:11:32,320 --> 00:11:37,180
and because the graph girl foundation is

00:11:34,779 --> 00:11:39,250
a true foundation with many members

00:11:37,180 --> 00:11:41,200
paying members fees it actually means

00:11:39,250 --> 00:11:42,760
that we're starting to see as of like

00:11:41,200 --> 00:11:45,310
this month people starting to actually

00:11:42,760 --> 00:11:47,830
get paid to do maintenance work for like

00:11:45,310 --> 00:11:48,760
graph QL s related repos and this is

00:11:47,830 --> 00:11:51,130
awesome

00:11:48,760 --> 00:11:53,980
effectively you have these membership

00:11:51,130 --> 00:11:56,230
fees give you access to being on the

00:11:53,980 --> 00:11:59,320
foundation and the foundation has extra

00:11:56,230 --> 00:12:00,970
sort of meetings that give people the

00:11:59,320 --> 00:12:02,890
chance to sort of have very high-level

00:12:00,970 --> 00:12:04,839
discussions separate from the working

00:12:02,890 --> 00:12:06,730
groups that we'll get to and as well

00:12:04,839 --> 00:12:11,830
they get to choose where the budget goes

00:12:06,730 --> 00:12:14,650
to every single month so with a

00:12:11,830 --> 00:12:16,600
foundation set up that allows like sort

00:12:14,650 --> 00:12:18,010
of the political power of graph QL to be

00:12:16,600 --> 00:12:21,040
split across many different sort of

00:12:18,010 --> 00:12:22,420
companies and organizations then there

00:12:21,040 --> 00:12:24,310
needed to be a way to sort of handle a

00:12:22,420 --> 00:12:26,529
lot of the legal and bureaucratic

00:12:24,310 --> 00:12:27,250
problems problems it's not the right

00:12:26,529 --> 00:12:29,380
word

00:12:27,250 --> 00:12:30,700
just you needed some way to handle

00:12:29,380 --> 00:12:32,650
bureaucracy when you're trying to deal

00:12:30,700 --> 00:12:35,290
with this many like contracts for

00:12:32,650 --> 00:12:37,870
members fees and things like that and so

00:12:35,290 --> 00:12:40,120
the Linux Foundation works with the

00:12:37,870 --> 00:12:43,860
joint development foundation which again

00:12:40,120 --> 00:12:46,270
is a service now for bureaucracy so

00:12:43,860 --> 00:12:47,740
effectively they make it easier for you

00:12:46,270 --> 00:12:50,620
to have to handle all the legalese

00:12:47,740 --> 00:12:55,980
necessary to run a five hour free C so a

00:12:50,620 --> 00:12:58,390
non-profit legally and so this is a yeah

00:12:55,980 --> 00:13:02,670
bureaucracy as a service kind of tool

00:12:58,390 --> 00:13:05,920
the graph QL team use I know right

00:13:02,670 --> 00:13:08,440
okay so that is roughly all of the

00:13:05,920 --> 00:13:10,240
different organizations that live at

00:13:08,440 --> 00:13:12,160
like the highest level of the graph QL

00:13:10,240 --> 00:13:16,089
ecosystem so that's how all this this

00:13:12,160 --> 00:13:18,930
stuff comes together so from there how

00:13:16,089 --> 00:13:20,879
does a change

00:13:18,930 --> 00:13:23,459
so one way to think about it is like

00:13:20,879 --> 00:13:25,769
what is owned by graph QL the sort of

00:13:23,459 --> 00:13:28,040
organizational structure and like how

00:13:25,769 --> 00:13:31,800
the changes happen within that ecosystem

00:13:28,040 --> 00:13:33,509
the graph QL org runs a few things we

00:13:31,800 --> 00:13:35,160
talked about the spec already there's

00:13:33,509 --> 00:13:37,709
the reference implementations for date

00:13:35,160 --> 00:13:39,329
loader and graft ulj s and then there's

00:13:37,709 --> 00:13:41,129
graphic ul and then there's also the

00:13:39,329 --> 00:13:43,399
branding and the websites and the

00:13:41,129 --> 00:13:47,220
landscape documents that we saw earlier

00:13:43,399 --> 00:13:49,889
there's also two working groups a graph

00:13:47,220 --> 00:13:51,809
QL working group and a graph meet QL

00:13:49,889 --> 00:13:55,709
working group or graphical I'll probably

00:13:51,809 --> 00:13:59,129
call it both and each of those have

00:13:55,709 --> 00:14:01,079
working group agendas so every every

00:13:59,129 --> 00:14:03,839
month roughly there is a working group

00:14:01,079 --> 00:14:05,399
for graph QL and every two months

00:14:03,839 --> 00:14:09,389
roughly there's a working group for

00:14:05,399 --> 00:14:12,059
graphic QL and this is like a very low

00:14:09,389 --> 00:14:14,759
process setup for a working group

00:14:12,059 --> 00:14:17,279
it's basically a github repo that you

00:14:14,759 --> 00:14:18,809
can follow you just like follow it watch

00:14:17,279 --> 00:14:20,399
the repo and you'll always get up to

00:14:18,809 --> 00:14:22,829
date with what's going on at like high

00:14:20,399 --> 00:14:24,749
levels of graph QL and it's all very

00:14:22,829 --> 00:14:27,509
readable understandable markdown that's

00:14:24,749 --> 00:14:29,399
very free of like jargon that you might

00:14:27,509 --> 00:14:32,279
not understand because of the layers of

00:14:29,399 --> 00:14:33,360
bureaucracy that should exist well the

00:14:32,279 --> 00:14:35,339
good things about these working groups

00:14:33,360 --> 00:14:37,920
is that they have like guidelines on how

00:14:35,339 --> 00:14:39,660
to participate I know the first time I

00:14:37,920 --> 00:14:41,459
attended I was really glad to be able to

00:14:39,660 --> 00:14:43,920
know that I could just I was I was

00:14:41,459 --> 00:14:46,230
actively encouraged to not not talk too

00:14:43,920 --> 00:14:48,120
much you come in you have you put

00:14:46,230 --> 00:14:49,649
yourself on the agenda and you wait

00:14:48,120 --> 00:14:50,759
until it's that time unless you have

00:14:49,649 --> 00:14:52,800
some very strong feedback

00:14:50,759 --> 00:14:54,300
yeah the participation guidelines are

00:14:52,800 --> 00:14:56,699
definitely worth a read

00:14:54,300 --> 00:14:58,079
I'll leave those as these for now but

00:14:56,699 --> 00:15:00,839
they're there in more in-depth on the

00:14:58,079 --> 00:15:03,929
actual website and then there's an RFC

00:15:00,839 --> 00:15:08,069
process which feels very close to how

00:15:03,929 --> 00:15:09,990
tc39 works in JavaScript so you may have

00:15:08,069 --> 00:15:11,040
heard for example one of the one of the

00:15:09,990 --> 00:15:12,749
things we're very excited on the

00:15:11,040 --> 00:15:14,639
typescript team is that the question

00:15:12,749 --> 00:15:17,730
mark dot operator managed to make it in

00:15:14,639 --> 00:15:19,439
two stage free and what that means is

00:15:17,730 --> 00:15:23,040
that it's gone through enough stages of

00:15:19,439 --> 00:15:25,529
proposals towards getting into the spec

00:15:23,040 --> 00:15:27,269
the the same system actually works quite

00:15:25,529 --> 00:15:29,879
well here although there are a few

00:15:27,269 --> 00:15:30,449
differences because of like the size of

00:15:29,879 --> 00:15:34,679
the

00:15:30,449 --> 00:15:37,139
projects so the four main ones are the

00:15:34,679 --> 00:15:39,149
straw person so that's the idea that you

00:15:37,139 --> 00:15:40,859
know you're going to pitch something and

00:15:39,149 --> 00:15:43,199
at this point you just expect people to

00:15:40,859 --> 00:15:45,059
be knocking it down and trying it up

00:15:43,199 --> 00:15:46,679
again and trying to get a new idea out

00:15:45,059 --> 00:15:49,499
so this really could just be as simple

00:15:46,679 --> 00:15:50,879
as like a github issue or tweet or

00:15:49,499 --> 00:15:53,220
something like that that just sort of

00:15:50,879 --> 00:15:55,859
gets it and it gets the idea out to

00:15:53,220 --> 00:15:58,499
people from there you go to a proposal

00:15:55,859 --> 00:15:59,759
and this is where like you have a little

00:15:58,499 --> 00:16:01,230
bit of process you have to decide

00:15:59,759 --> 00:16:04,529
someone that's going to champion it and

00:16:01,230 --> 00:16:06,660
it must be they must have a compelling

00:16:04,529 --> 00:16:08,669
case that must be well thought out by

00:16:06,660 --> 00:16:09,509
this point that you know people have

00:16:08,669 --> 00:16:12,179
tried to look at it from different

00:16:09,509 --> 00:16:13,679
perspectives and ideally you should

00:16:12,179 --> 00:16:15,359
start thinking about making pull

00:16:13,679 --> 00:16:17,999
requests to like I for the reference

00:16:15,359 --> 00:16:19,889
implementation or maybe the spec then

00:16:17,999 --> 00:16:22,049
there's the draft where it's like you're

00:16:19,889 --> 00:16:23,999
gonna be using the correct syntax and

00:16:22,049 --> 00:16:26,609
the correct formalization inside the

00:16:23,999 --> 00:16:28,139
spec because the spec is a language spec

00:16:26,609 --> 00:16:30,269
so there are parts of it that are very

00:16:28,139 --> 00:16:31,559
like human readable but then there are

00:16:30,269 --> 00:16:34,139
parts of it that are literally meant to

00:16:31,559 --> 00:16:35,639
be sort of machine readable as well - so

00:16:34,139 --> 00:16:37,019
you would learn to do that and maybe you

00:16:35,639 --> 00:16:39,779
would have your own Falke of graphical

00:16:37,019 --> 00:16:42,209
something to try it out with and then

00:16:39,779 --> 00:16:44,279
accepted means what it means which means

00:16:42,209 --> 00:16:46,369
that it will go into the spec and will

00:16:44,279 --> 00:16:49,350
be released on the next spec release

00:16:46,369 --> 00:16:52,619
there's talk of moving spec releases to

00:16:49,350 --> 00:16:55,139
be an annual release so once a year then

00:16:52,619 --> 00:16:56,519
all of the accepted RFC's will get put

00:16:55,139 --> 00:16:58,980
into a single spec and then that will

00:16:56,519 --> 00:17:02,789
move on and so you'll you will say that

00:16:58,980 --> 00:17:07,260
the graph QL for JavaScript library

00:17:02,789 --> 00:17:10,289
supports you know 20 2012 version 2020

00:17:07,260 --> 00:17:15,720
of the spec whereas you know the the

00:17:10,289 --> 00:17:18,510
unmaintained version of the oh the oh

00:17:15,720 --> 00:17:20,549
camel graph QL only supports version

00:17:18,510 --> 00:17:21,750
2019 version of the spec so you can have

00:17:20,549 --> 00:17:23,490
an understanding of what language

00:17:21,750 --> 00:17:25,760
features will be supported by knowing

00:17:23,490 --> 00:17:29,639
which versions of the specs it supports

00:17:25,760 --> 00:17:31,620
so there's also being rejected which you

00:17:29,639 --> 00:17:35,010
know not every idea gets true and that's

00:17:31,620 --> 00:17:36,960
totally okay so from there there are a

00:17:35,010 --> 00:17:38,850
set of guiding principles I mean if

00:17:36,960 --> 00:17:40,320
something gets rejected you kind of want

00:17:38,850 --> 00:17:41,220
to know upfront whether something's

00:17:40,320 --> 00:17:42,700
gonna actually make it through the

00:17:41,220 --> 00:17:44,410
process

00:17:42,700 --> 00:17:47,800
these are the guiding principles of

00:17:44,410 --> 00:17:50,530
graph QL . so you know backwards

00:17:47,800 --> 00:17:52,870
compatibility is a pretty solid one you

00:17:50,530 --> 00:17:54,130
make a query you expect that query to

00:17:52,870 --> 00:17:56,220
continue to work in the future

00:17:54,130 --> 00:17:58,750
even though the spec has changed

00:17:56,220 --> 00:18:03,160
performance is a feature is like you

00:17:58,750 --> 00:18:04,600
know don't make graph QL slower by

00:18:03,160 --> 00:18:07,360
ancient introducing new language

00:18:04,600 --> 00:18:12,130
features are things that are very hard

00:18:07,360 --> 00:18:14,260
to pass up to say no in terms of changes

00:18:12,130 --> 00:18:15,820
because you know just like with

00:18:14,260 --> 00:18:17,440
JavaScript graph QL has a ton of

00:18:15,820 --> 00:18:20,050
implementations in a ton of different

00:18:17,440 --> 00:18:22,240
languages and if you can't agree on a

00:18:20,050 --> 00:18:24,730
specific like choice you should not

00:18:22,240 --> 00:18:26,860
agree you should not make that in the

00:18:24,730 --> 00:18:29,530
spec until it's 100% certain on every

00:18:26,860 --> 00:18:33,730
single person's mind in the working

00:18:29,530 --> 00:18:35,800
groups enable new capabilities motivated

00:18:33,730 --> 00:18:37,810
by new cases is like actually you know

00:18:35,800 --> 00:18:40,000
you have to not just say this

00:18:37,810 --> 00:18:43,420
conceptually is a good idea you need to

00:18:40,000 --> 00:18:45,520
come to these create RFC's with with

00:18:43,420 --> 00:18:48,340
real use cases in mind and try and use

00:18:45,520 --> 00:18:51,070
those to say like I do this and I can

00:18:48,340 --> 00:18:53,800
use this feature and if I do that then

00:18:51,070 --> 00:18:55,420
this can happen and putting these in

00:18:53,800 --> 00:18:56,830
terms of real world use cases makes

00:18:55,420 --> 00:19:00,640
things a lot easier for everybody to

00:18:56,830 --> 00:19:02,980
reason about simplicity and consistency

00:19:00,640 --> 00:19:04,870
over expressiveness and testers like

00:19:02,980 --> 00:19:06,910
this is a lot like when you talk about

00:19:04,870 --> 00:19:08,920
code you know most of the time code is

00:19:06,910 --> 00:19:11,080
read and not wrote so you should spend

00:19:08,920 --> 00:19:14,140
your time making the graphical language

00:19:11,080 --> 00:19:16,810
favor simplicity of like very fancy

00:19:14,140 --> 00:19:19,810
syntax that allows for additional like

00:19:16,810 --> 00:19:23,770
the many different behaviors and then

00:19:19,810 --> 00:19:25,660
preserve option values is like we a nice

00:19:23,770 --> 00:19:28,870
way of saying make graph QL easy to

00:19:25,660 --> 00:19:30,610
change in the future like you don't want

00:19:28,870 --> 00:19:33,520
to be making language decisions that

00:19:30,610 --> 00:19:36,940
force a particular sort of syntax down

00:19:33,520 --> 00:19:38,380
the line or a particular type of

00:19:36,940 --> 00:19:40,720
response down the line when you want to

00:19:38,380 --> 00:19:42,580
make it easy to change and then finally

00:19:40,720 --> 00:19:44,770
understand ability is important this

00:19:42,580 --> 00:19:47,380
correctness so this is actually about

00:19:44,770 --> 00:19:49,570
the spec and in terms of writing the

00:19:47,380 --> 00:19:51,910
details about in the spec you should try

00:19:49,570 --> 00:19:54,010
and favor human readability of like

00:19:51,910 --> 00:19:55,660
perfect technical correctness because

00:19:54,010 --> 00:19:56,140
ideally a lot of people should be able

00:19:55,660 --> 00:19:58,240
to read

00:19:56,140 --> 00:20:01,900
back and understand what gradual is a

00:19:58,240 --> 00:20:05,410
fundamental level okay

00:20:01,900 --> 00:20:07,300
so how can you get involved a lot of

00:20:05,410 --> 00:20:08,890
open source is generally you know I make

00:20:07,300 --> 00:20:11,500
a pull request eventually someone merges

00:20:08,890 --> 00:20:13,690
it and that's great life because there's

00:20:11,500 --> 00:20:15,730
a bit more process here the it's worth

00:20:13,690 --> 00:20:18,610
like going over this process but it's

00:20:15,730 --> 00:20:21,040
not considerably different so we're

00:20:18,610 --> 00:20:24,580
going to use my most recent example from

00:20:21,040 --> 00:20:28,900
this year which was I had an idea and I

00:20:24,580 --> 00:20:31,060
thought you know what I don't think it's

00:20:28,900 --> 00:20:34,150
a great idea that we the people keep

00:20:31,060 --> 00:20:36,100
having to fork graphic UL or using a

00:20:34,150 --> 00:20:38,110
different implementation of graph QL

00:20:36,100 --> 00:20:40,870
like I'll tear or I craft grilled

00:20:38,110 --> 00:20:44,170
playgrounds when graphic well is a great

00:20:40,870 --> 00:20:48,190
base for building things on so I pitched

00:20:44,170 --> 00:20:50,170
in a tweet that we should actually start

00:20:48,190 --> 00:20:51,730
thinking about graphic UL to and that

00:20:50,170 --> 00:20:53,320
the graph girl too should be a plug-in

00:20:51,730 --> 00:20:56,020
infrastructure so that people that want

00:20:53,320 --> 00:20:57,880
to innovate can innovate but the rest of

00:20:56,020 --> 00:21:02,320
us all get sort of shared infrastructure

00:20:57,880 --> 00:21:04,840
that everyone works on and so I used

00:21:02,320 --> 00:21:06,430
that for my straw man and had people

00:21:04,840 --> 00:21:07,840
back-and-forth thing and what that looks

00:21:06,430 --> 00:21:10,930
like I tried to provide a very low

00:21:07,840 --> 00:21:12,490
fidelity image so people wouldn't start

00:21:10,930 --> 00:21:15,760
fighting about whether it should be pink

00:21:12,490 --> 00:21:18,580
or green or whatever and then I took it

00:21:15,760 --> 00:21:20,470
to a working group and so I sent a pull

00:21:18,580 --> 00:21:23,290
request to a work an existing working

00:21:20,470 --> 00:21:26,170
group like I have done a few times

00:21:23,290 --> 00:21:29,860
before you just send it in and you just

00:21:26,170 --> 00:21:32,500
write my name the agenda item how long

00:21:29,860 --> 00:21:36,040
you think it should take and then you

00:21:32,500 --> 00:21:42,780
should ideally be there to pitch it in

00:21:36,040 --> 00:21:45,910
this case I actually forgot to go so

00:21:42,780 --> 00:21:47,920
luckily for me there were other people

00:21:45,910 --> 00:21:51,100
at that meeting that were like this is a

00:21:47,920 --> 00:21:54,550
good idea and I will take that up and

00:21:51,100 --> 00:21:59,170
champion it and so in my case I looked

00:21:54,550 --> 00:22:00,820
out and Ricky Ricky Ricky shoot shout

00:21:59,170 --> 00:22:03,100
out if you're watching and it's been

00:22:00,820 --> 00:22:05,590
doing a lot of great work on sort of

00:22:03,100 --> 00:22:07,150
bringing graphic UL up to a point where

00:22:05,590 --> 00:22:08,400
it can start thinking about some of

00:22:07,150 --> 00:22:10,830
these redesigns and plugging

00:22:08,400 --> 00:22:13,410
the structure but now there is a

00:22:10,830 --> 00:22:16,590
champion for the idea and it is starting

00:22:13,410 --> 00:22:19,620
to starting to get get there so from

00:22:16,590 --> 00:22:23,880
there we effectively achieved consensus

00:22:19,620 --> 00:22:25,650
that graphic UL should first of all just

00:22:23,880 --> 00:22:27,270
have its own working group and that's

00:22:25,650 --> 00:22:29,070
actually the first action item that came

00:22:27,270 --> 00:22:30,600
from that was to start allowing graphic

00:22:29,070 --> 00:22:32,310
L to have its own working group though

00:22:30,600 --> 00:22:34,380
an infrastructure to start talking about

00:22:32,310 --> 00:22:36,990
these problems and so from there we

00:22:34,380 --> 00:22:39,650
started building out issues and

00:22:36,990 --> 00:22:42,210
discussed it on the graph QL

00:22:39,650 --> 00:22:44,340
infrastructure like the graph trail repo

00:22:42,210 --> 00:22:45,540
and started just trying to figure out

00:22:44,340 --> 00:22:46,680
what that could both look like

00:22:45,540 --> 00:22:50,880
technically and what it could like

00:22:46,680 --> 00:22:52,710
aesthetically so effectively what you

00:22:50,880 --> 00:22:54,750
see here is this this period where

00:22:52,710 --> 00:22:56,730
nothing was happening on graphic UL for

00:22:54,750 --> 00:22:58,500
like multiple years and then you can see

00:22:56,730 --> 00:23:00,810
us just starting to pick up pace towards

00:22:58,500 --> 00:23:03,150
the end and that was like entirely

00:23:00,810 --> 00:23:08,640
formed from that one working group I

00:23:03,150 --> 00:23:10,140
completely missed yes so you know if

00:23:08,640 --> 00:23:12,420
you're interested in contributing to

00:23:10,140 --> 00:23:16,830
graph QL at some of these like ecosystem

00:23:12,420 --> 00:23:19,020
level problems then first of all you can

00:23:16,830 --> 00:23:21,900
you can cheat and you can just like help

00:23:19,020 --> 00:23:24,300
us out on graph eql like you can just

00:23:21,900 --> 00:23:26,670
start doing that today if you want to do

00:23:24,300 --> 00:23:28,050
that the there is a current there's a

00:23:26,670 --> 00:23:30,000
big roadmap right now that sort of

00:23:28,050 --> 00:23:31,920
teaches you where we want to take it and

00:23:30,000 --> 00:23:34,260
what all the pieces are if you have

00:23:31,920 --> 00:23:36,030
react and JavaScript experience which I

00:23:34,260 --> 00:23:38,160
bet the majority of the people in this

00:23:36,030 --> 00:23:40,650
room do then all you really need to do

00:23:38,160 --> 00:23:45,150
is look at the roadmap and come join us

00:23:40,650 --> 00:23:47,370
in graphic UL slack we'd love to see

00:23:45,150 --> 00:23:50,910
graphic UL be the sort of foundation for

00:23:47,370 --> 00:23:53,960
tools like the one graph explorer that

00:23:50,910 --> 00:23:56,430
will hopefully see later the playground

00:23:53,960 --> 00:23:58,920
sort of tools that everybody wants to

00:23:56,430 --> 00:24:00,690
see in different places and the idea is

00:23:58,920 --> 00:24:02,880
by splitting it out then you can build

00:24:00,690 --> 00:24:06,390
that and we can just focus on building a

00:24:02,880 --> 00:24:12,390
really solid id like experience for via

00:24:06,390 --> 00:24:14,880
graph QL queries and realistically the

00:24:12,390 --> 00:24:16,950
final one is actually persevere I have

00:24:14,880 --> 00:24:18,540
I've attended free working groups and

00:24:16,950 --> 00:24:21,850
got consensus on three separate things

00:24:18,540 --> 00:24:23,740
are agreed and done the trade

00:24:21,850 --> 00:24:25,600
has been that not one of these things

00:24:23,740 --> 00:24:28,710
has been merged yet so I've managed to

00:24:25,600 --> 00:24:31,179
get all the way to the code and agreed

00:24:28,710 --> 00:24:33,039
but I'd still not managed to actually

00:24:31,179 --> 00:24:35,590
get some of these things in and that's

00:24:33,039 --> 00:24:37,809
actually okay in my opinion as like a

00:24:35,590 --> 00:24:40,450
high-level Oh applesauce contributor I

00:24:37,809 --> 00:24:42,460
really want to stress the idea that

00:24:40,450 --> 00:24:44,440
everybody involved at the high levels

00:24:42,460 --> 00:24:46,870
doesn't is I've been doing it in their

00:24:44,440 --> 00:24:49,419
spare time and shouldn't feel pressure

00:24:46,870 --> 00:24:52,600
to actually keep doing some of this work

00:24:49,419 --> 00:24:54,580
but the you know people care and you

00:24:52,600 --> 00:24:56,380
know Lee who's probably out there in the

00:24:54,580 --> 00:24:58,090
audience still knows that he owes me an

00:24:56,380 --> 00:25:00,880
action I am adding me to the graph to

00:24:58,090 --> 00:25:04,870
our website but maybe they'll get done

00:25:00,880 --> 00:25:06,190
one day but you know it's all about

00:25:04,870 --> 00:25:08,289
trying to help each other and

00:25:06,190 --> 00:25:11,250
perseverance and reminding people about

00:25:08,289 --> 00:25:13,659
these things is also a very big positive

00:25:11,250 --> 00:25:15,490
so that was me I tried to give you an

00:25:13,659 --> 00:25:17,679
overview of like the different parts of

00:25:15,490 --> 00:25:19,330
the graph QL organization the sort of

00:25:17,679 --> 00:25:21,340
process that is required to actually

00:25:19,330 --> 00:25:22,720
contribute and then some of the sort of

00:25:21,340 --> 00:25:23,380
projects that you could contribute if

00:25:22,720 --> 00:25:24,940
you don't want to go through that

00:25:23,380 --> 00:25:26,830
process because we're writing up through

00:25:24,940 --> 00:25:29,230
that process there's a lot of constant

00:25:26,830 --> 00:25:31,150
evolution in the graph QL ecosystem and

00:25:29,230 --> 00:25:33,070
if you just follow the graphical working

00:25:31,150 --> 00:25:35,350
group repo you'll you'll keep on top of

00:25:33,070 --> 00:25:36,789
a lot of it too and that makes your life

00:25:35,350 --> 00:25:38,710
easier and it makes everyone else's

00:25:36,789 --> 00:25:41,980
lives easier and I'd love to see more

00:25:38,710 --> 00:25:43,539
people contribute to graph QL because I

00:25:41,980 --> 00:25:45,100
think it's a really cool industry

00:25:43,539 --> 00:25:47,730
standard and I want to see it I want to

00:25:45,100 --> 00:25:50,200
see it one so thank you everyone

00:25:47,730 --> 00:25:50,200

YouTube URL: https://www.youtube.com/watch?v=STk8eWQL1ns


