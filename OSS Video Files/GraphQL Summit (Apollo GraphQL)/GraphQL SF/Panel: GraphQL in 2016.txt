Title: Panel: GraphQL in 2016
Publication date: 2017-11-16
Playlist: GraphQL SF
Description: 
	Panel discussion from GraphQL SF's first meetup with Lee Byron (GraphQL/Facebook), Sashko Stubailo (Apollo Stack), Joe Savona (Relay/Facebook), and Syrus Akbary (Graphene/Affirm). 

Join GraphQL San Francisco for updates on future events: http://www.meetup.com/GraphQL-SF
Read our event summary on Medium: https://medium.com/apollo-stack/graphql-in-2016-a-growing-ecosystem-89846d9bb29e#.tis6c7a0r
Captions: 
	00:00:01,930 --> 00:00:06,009
we have a really great lineup here for

00:00:04,120 --> 00:00:08,050
our panel if you've already met three

00:00:06,009 --> 00:00:10,420
other people on the panel the fourth

00:00:08,050 --> 00:00:13,780
person is Lee Byron he is the maintainer

00:00:10,420 --> 00:00:21,250
of graph QL and also immutable J s at

00:00:13,780 --> 00:00:24,250
Facebook anything else so many things

00:00:21,250 --> 00:00:25,420
Nosa may my two major projects I also

00:00:24,250 --> 00:00:27,580
maintain a project called data loader

00:00:25,420 --> 00:00:31,720
which is often using the graphical good

00:00:27,580 --> 00:00:34,629
one ok so to get this panel started I

00:00:31,720 --> 00:00:37,089
want to ask a question actually for you

00:00:34,629 --> 00:00:39,519
Lee which is a question that we often

00:00:37,089 --> 00:00:41,999
get is like ok so what's like what's

00:00:39,519 --> 00:00:46,149
next for graph QL what's your vision

00:00:41,999 --> 00:00:48,749
there's a lot to do next I can kind of

00:00:46,149 --> 00:00:52,089
like chop it into two buckets one is

00:00:48,749 --> 00:00:53,710
kind of where like the kinds of problems

00:00:52,089 --> 00:00:54,940
that graph Cal can help us solve so

00:00:53,710 --> 00:00:57,519
graph Co is already really good at

00:00:54,940 --> 00:01:00,249
solving I have a question I get that

00:00:57,519 --> 00:01:01,719
data and I get it back I can do it in

00:01:00,249 --> 00:01:03,609
this few network requests as possible

00:01:01,719 --> 00:01:06,340
and I can chop that up and co-locate

00:01:03,609 --> 00:01:07,710
what did I need with the views that end

00:01:06,340 --> 00:01:09,990
up rendering it so I can already do that

00:01:07,710 --> 00:01:14,260
but what it's not good at yet is

00:01:09,990 --> 00:01:16,840
managing real time data managing data

00:01:14,260 --> 00:01:18,670
that's like the time to the most

00:01:16,840 --> 00:01:20,410
important piece of data in your query so

00:01:18,670 --> 00:01:22,030
we often like chop our stuff up into

00:01:20,410 --> 00:01:23,320
different graphical queries where our

00:01:22,030 --> 00:01:25,270
important stuff is here and then

00:01:23,320 --> 00:01:27,280
everything else is over here so I think

00:01:25,270 --> 00:01:29,800
we can probably do more to improve on

00:01:27,280 --> 00:01:30,940
those but then the other bucket is stuff

00:01:29,800 --> 00:01:32,740
that I actually think is even more

00:01:30,940 --> 00:01:35,350
important is all the different tools

00:01:32,740 --> 00:01:37,000
that we need so grackles you know we

00:01:35,350 --> 00:01:38,440
really suspect and release the reference

00:01:37,000 --> 00:01:40,390
implementation and a lot of the work

00:01:38,440 --> 00:01:41,770
that's happened so far has been kind of

00:01:40,390 --> 00:01:43,620
filling in the blanks on the server so

00:01:41,770 --> 00:01:46,210
we can actually build graphical services

00:01:43,620 --> 00:01:48,910
and now I think like the big next step

00:01:46,210 --> 00:01:50,710
is building good client tools and you

00:01:48,910 --> 00:01:52,930
guys have been really beneficial with

00:01:50,710 --> 00:01:54,370
Apollo but most of the work we've seen

00:01:52,930 --> 00:01:58,030
so far has been in JavaScript in for the

00:01:54,370 --> 00:01:59,500
web and the reality is that most of

00:01:58,030 --> 00:02:01,510
application development right now is

00:01:59,500 --> 00:02:03,910
happening for mobile specifically like

00:02:01,510 --> 00:02:05,890
native apps and there just hasn't been a

00:02:03,910 --> 00:02:08,410
lot of experimentation with graphical

00:02:05,890 --> 00:02:09,580
clients for iOS or Android apps yet so

00:02:08,410 --> 00:02:11,829
I'm really excited to see that kind of

00:02:09,580 --> 00:02:13,810
thing happen it's really great to see

00:02:11,829 --> 00:02:15,850
that even though even though graphical

00:02:13,810 --> 00:02:19,330
is like relatively new

00:02:15,850 --> 00:02:20,740
like hasn't been released as open source

00:02:19,330 --> 00:02:21,880
for very long there's already a lot of

00:02:20,740 --> 00:02:23,920
excitement out there and people are

00:02:21,880 --> 00:02:26,020
using it and the tools are kind of

00:02:23,920 --> 00:02:27,820
maturing and that kind of brings us to

00:02:26,020 --> 00:02:30,370
the next question that I wanted to ask

00:02:27,820 --> 00:02:32,260
and that's kind of for everyone is you

00:02:30,370 --> 00:02:33,940
know everyone has kind of a different

00:02:32,260 --> 00:02:35,530
story of what brought them to graph QL

00:02:33,940 --> 00:02:36,880
and what they're most excited about so

00:02:35,530 --> 00:02:38,800
I'm kind of curious to know you know

00:02:36,880 --> 00:02:40,330
what what was the thing that you really

00:02:38,800 --> 00:02:43,050
thought about graphic yo that's so

00:02:40,330 --> 00:02:46,870
amazing like I want to start using that

00:02:43,050 --> 00:02:51,040
maybe maybe this one's for Cyrus at the

00:02:46,870 --> 00:02:53,350
beginning hello at the beginning I was

00:02:51,040 --> 00:02:55,420
invited like in to a fake facebook

00:02:53,350 --> 00:02:59,020
offices and they were releasing kind of

00:02:55,420 --> 00:03:00,970
like or they were like saying that they

00:02:59,020 --> 00:03:03,510
will release graph girl soon and what

00:03:00,970 --> 00:03:06,040
was cool about and at the beginning I

00:03:03,510 --> 00:03:08,170
was not believing Rothko I was like

00:03:06,040 --> 00:03:12,910
that's not for me that's gonna work for

00:03:08,170 --> 00:03:15,910
Facebook but I don't know like it's it's

00:03:12,910 --> 00:03:18,370
not gonna work in my kind of structure

00:03:15,910 --> 00:03:20,830
of back-end but actually when they open

00:03:18,370 --> 00:03:22,690
source them geographically LJ's

00:03:20,830 --> 00:03:24,730
implementation I start seeing like the

00:03:22,690 --> 00:03:26,500
value because I started I could play

00:03:24,730 --> 00:03:28,780
with it and when I start playing with it

00:03:26,500 --> 00:03:31,600
I could see like all the value on graph

00:03:28,780 --> 00:03:35,620
cool and not just like one fetching in

00:03:31,600 --> 00:03:38,799
just one response in one HTTP response

00:03:35,620 --> 00:03:41,230
but more than that like the way the

00:03:38,799 --> 00:03:44,080
types were defined like all so that we

00:03:41,230 --> 00:03:46,120
avoid versioning API version or normal

00:03:44,080 --> 00:03:48,220
API versioning so there are a lot of

00:03:46,120 --> 00:03:50,049
cool things and more than that for me

00:03:48,220 --> 00:03:52,810
the introspection was like the main

00:03:50,049 --> 00:03:54,549
thing because with introspection you can

00:03:52,810 --> 00:03:56,890
have validation you can have like

00:03:54,549 --> 00:03:58,840
graphic UL or whatever other tools you

00:03:56,890 --> 00:04:07,540
want to build on top of that and that's

00:03:58,840 --> 00:04:10,930
very big so I've been working at meteor

00:04:07,540 --> 00:04:12,730
for about two years now almost and we

00:04:10,930 --> 00:04:14,110
actually took kind of funny detour to

00:04:12,730 --> 00:04:15,160
get to graph QL because I think a lot of

00:04:14,110 --> 00:04:17,380
people are coming to graphic you all

00:04:15,160 --> 00:04:19,630
from rest are from something like that

00:04:17,380 --> 00:04:22,870
like a GP request the meteor has a

00:04:19,630 --> 00:04:25,210
totally reactive completely you know

00:04:22,870 --> 00:04:26,110
real-time web socket based pub/sub

00:04:25,210 --> 00:04:28,569
system

00:04:26,110 --> 00:04:30,039
and how we got here was we were actually

00:04:28,569 --> 00:04:32,340
thinking about like how can we bring the

00:04:30,039 --> 00:04:34,930
experience of using a real-time

00:04:32,340 --> 00:04:38,050
WebSocket system that relies on live

00:04:34,930 --> 00:04:40,389
Queen database but to every back-end and

00:04:38,050 --> 00:04:42,430
it's funny because we also ended up at

00:04:40,389 --> 00:04:44,379
graph QL we started thinking we're like

00:04:42,430 --> 00:04:45,550
okay we need to be able to aggregate

00:04:44,379 --> 00:04:46,750
data requirements from different

00:04:45,550 --> 00:04:48,849
components we need to be able to have a

00:04:46,750 --> 00:04:52,090
Gnostic language to query from different

00:04:48,849 --> 00:04:54,129
databases and even though graph QL at

00:04:52,090 --> 00:04:55,389
the time and still doesn't really have

00:04:54,129 --> 00:04:57,550
too many first-class primitives for

00:04:55,389 --> 00:04:59,500
reactivity or real-time built in we

00:04:57,550 --> 00:05:00,699
figured it gave a very similar

00:04:59,500 --> 00:05:02,469
experience to what you got with meteor

00:05:00,699 --> 00:05:03,940
which is the core of the experience new

00:05:02,469 --> 00:05:06,159
was just you asked for data and then you

00:05:03,940 --> 00:05:07,810
got it and graph kill is just like the

00:05:06,159 --> 00:05:13,240
best way of asking for data that I can

00:05:07,810 --> 00:05:16,840
think of right now so I was building

00:05:13,240 --> 00:05:19,389
react apps about two years ago at a

00:05:16,840 --> 00:05:20,740
company and we were just constantly

00:05:19,389 --> 00:05:22,599
faced with a question of how do we get

00:05:20,740 --> 00:05:25,990
data into our apps and I went to a Tech

00:05:22,599 --> 00:05:29,080
Talk at Facebook and and heard the the

00:05:25,990 --> 00:05:30,879
very vague you know what you can sit you

00:05:29,080 --> 00:05:32,710
know what we could talk about publicly

00:05:30,879 --> 00:05:34,180
at that point description of like we

00:05:32,710 --> 00:05:38,759
have this thing that lets us magically

00:05:34,180 --> 00:05:40,750
get data and and and I saw and enough

00:05:38,759 --> 00:05:42,729
enough that I was like yeah that's

00:05:40,750 --> 00:05:45,849
pretty cool I want to work there

00:05:42,729 --> 00:05:50,229
and so naturally when I joined yeah I

00:05:45,849 --> 00:05:53,589
work on relay now how about you lis you

00:05:50,229 --> 00:05:56,229
kind of were around when I think yeah so

00:05:53,589 --> 00:05:58,659
graph QL just recently had its fourth

00:05:56,229 --> 00:06:00,039
birthday its first birthday as an open

00:05:58,659 --> 00:06:01,900
source project but it's actually been

00:06:00,039 --> 00:06:02,159
being used at Facebook for quite some

00:06:01,900 --> 00:06:06,520
time

00:06:02,159 --> 00:06:09,580
before that and I was part of the small

00:06:06,520 --> 00:06:10,960
team that co-created graph QL and Nick

00:06:09,580 --> 00:06:13,029
rocks in the audience who is also on

00:06:10,960 --> 00:06:15,009
that team and then Dan Schafer who isn't

00:06:13,029 --> 00:06:17,169
here today was the third member of our

00:06:15,009 --> 00:06:19,060
team and what we are really trying to do

00:06:17,169 --> 00:06:21,940
I think all three of us came kind of

00:06:19,060 --> 00:06:25,719
with different goals and intentions and

00:06:21,940 --> 00:06:28,000
my intention was to rebuild our iOS app

00:06:25,719 --> 00:06:30,580
and specifically rebuild the newsfeed

00:06:28,000 --> 00:06:32,650
part of that app and this was four years

00:06:30,580 --> 00:06:34,419
ago 2012 and in I don't know if you

00:06:32,650 --> 00:06:39,080
remember what the Facebook app felt like

00:06:34,419 --> 00:06:41,450
in 2012 it was pretty awful and

00:06:39,080 --> 00:06:43,010
the we had a lot of problems to solve

00:06:41,450 --> 00:06:44,510
and one of the big problems to solve was

00:06:43,010 --> 00:06:46,730
making sure that we could get all of the

00:06:44,510 --> 00:06:48,650
information down the pipe quickly and

00:06:46,730 --> 00:06:50,620
before that we had use kind of a

00:06:48,650 --> 00:06:54,040
hodgepodge of different technologies

00:06:50,620 --> 00:06:56,990
including our Facebook restful api

00:06:54,040 --> 00:06:59,030
including another Facebook platform

00:06:56,990 --> 00:07:00,830
technology called fql which is kind of

00:06:59,030 --> 00:07:03,680
like an sql-like syntax lets you query

00:07:00,830 --> 00:07:06,770
Facebook data and all of those had kind

00:07:03,680 --> 00:07:09,410
of their own problems and Nick actually

00:07:06,770 --> 00:07:12,860
came with the idea of like the early

00:07:09,410 --> 00:07:14,330
idea for graph QL as the evolution of

00:07:12,860 --> 00:07:16,160
all the work that he had been doing for

00:07:14,330 --> 00:07:19,070
like his previous years at the company

00:07:16,160 --> 00:07:22,400
which was like getting a strong hold on

00:07:19,070 --> 00:07:24,500
the data in our actual server and then

00:07:22,400 --> 00:07:26,090
the next step was like okay like we we

00:07:24,500 --> 00:07:28,940
have a really good way to represent data

00:07:26,090 --> 00:07:31,340
in PHP but clearly development is

00:07:28,940 --> 00:07:36,170
happening outside of that now and how do

00:07:31,340 --> 00:07:38,480
we bring the strong types and the kind

00:07:36,170 --> 00:07:40,970
of like async nature of fetching data

00:07:38,480 --> 00:07:43,610
and bring that outside of page beef so

00:07:40,970 --> 00:07:46,880
schrock came up with the first version

00:07:43,610 --> 00:07:49,580
of graph QL that did that and another

00:07:46,880 --> 00:07:51,080
member of our iOS team kind of like saw

00:07:49,580 --> 00:07:53,570
these two things happening connected the

00:07:51,080 --> 00:07:55,970
dots and so he introduced Nick and

00:07:53,570 --> 00:07:57,260
myself together and then Dan who's

00:07:55,970 --> 00:07:58,220
working on the newsfeed team at the time

00:07:57,260 --> 00:08:00,710
we were working close with him because

00:07:58,220 --> 00:08:02,180
you're doing newsfeed and like all all

00:08:00,710 --> 00:08:04,190
of a sudden like our three minds like

00:08:02,180 --> 00:08:06,020
exploded we're like holy crap like this

00:08:04,190 --> 00:08:08,390
is gonna work and we just kind of like

00:08:06,020 --> 00:08:09,710
didn't sleep for a good three weeks and

00:08:08,390 --> 00:08:18,830
eventually the graph kale came out of

00:08:09,710 --> 00:08:26,300
that we slept after relationships were

00:08:18,830 --> 00:08:30,410
lost yeah I think I think that's kind of

00:08:26,300 --> 00:08:32,540
that's a I meant three weeks until we

00:08:30,410 --> 00:08:35,510
slept not gonna say we didn't stop

00:08:32,540 --> 00:08:37,400
working after that okay so it seems like

00:08:35,510 --> 00:08:39,440
you experienced like a very extreme form

00:08:37,400 --> 00:08:41,000
of what everyone experiences when they

00:08:39,440 --> 00:08:42,890
discover graphic you all that they're

00:08:41,000 --> 00:08:44,480
really excited about it yeah except that

00:08:42,890 --> 00:08:45,890
like usually people you know each

00:08:44,480 --> 00:08:47,360
feature that they said like oh and it

00:08:45,890 --> 00:08:49,070
does it that's really cool except that

00:08:47,360 --> 00:08:50,360
we were discovering that via like code

00:08:49,070 --> 00:08:52,370
review where someone would come up with

00:08:50,360 --> 00:08:53,630
a cool idea and then put up the code and

00:08:52,370 --> 00:08:56,900
then the other two of us would be like

00:08:53,630 --> 00:08:59,240
whoa yes like this is gonna be amazing

00:08:56,900 --> 00:09:02,090
and it's like graphic hills started kind

00:08:59,240 --> 00:09:04,760
of as like a much simpler version of

00:09:02,090 --> 00:09:07,310
what it is now or at least like fewer of

00:09:04,760 --> 00:09:08,330
their like core ideas the the primary

00:09:07,310 --> 00:09:10,850
core idea that was there from the very

00:09:08,330 --> 00:09:12,950
beginning that Nick brought was this

00:09:10,850 --> 00:09:14,240
like hierarchical fetching of data so

00:09:12,950 --> 00:09:15,860
that was there but then we started

00:09:14,240 --> 00:09:18,050
introduced the type system we started

00:09:15,860 --> 00:09:19,820
introduced features like fragments to

00:09:18,050 --> 00:09:21,200
break things apart and like each one of

00:09:19,820 --> 00:09:23,780
these features got introduced kind of

00:09:21,200 --> 00:09:25,880
over time and that first kind of year of

00:09:23,780 --> 00:09:28,340
graphical coming together and every time

00:09:25,880 --> 00:09:30,110
it landed like our iOS and Android teams

00:09:28,340 --> 00:09:31,940
would take it and run with it and build

00:09:30,110 --> 00:09:34,010
all kinds of cool stuff on the client so

00:09:31,940 --> 00:09:37,130
yeah we had like we got to have those

00:09:34,010 --> 00:09:42,110
mind-blowing movements good but spread

00:09:37,130 --> 00:09:44,690
out over time actually really cool about

00:09:42,110 --> 00:09:46,760
graph QL is like it's one of those

00:09:44,690 --> 00:09:47,570
things where there's so many different

00:09:46,760 --> 00:09:48,800
things that could be separate

00:09:47,570 --> 00:09:51,230
technologies like you could have just

00:09:48,800 --> 00:09:52,820
rests with typed api's or you could have

00:09:51,230 --> 00:09:54,650
just nested data fetching but without

00:09:52,820 --> 00:09:56,360
typing or you could have all of that but

00:09:54,650 --> 00:09:57,650
without a query language but I feel like

00:09:56,360 --> 00:09:59,000
when it all comes together that's when

00:09:57,650 --> 00:10:00,230
the magic happens like each of those

00:09:59,000 --> 00:10:05,960
things by themselves are not that

00:10:00,230 --> 00:10:09,600
exciting by themself super cool yeah

00:10:05,960 --> 00:10:10,980
one thing that's always very interesting

00:10:09,600 --> 00:10:13,770
in you know open source projects that

00:10:10,980 --> 00:10:15,630
kind of take off and become very popular

00:10:13,770 --> 00:10:17,820
that people a lot of people want to

00:10:15,630 --> 00:10:20,010
contribute but it's not always easy to

00:10:17,820 --> 00:10:23,490
kind of manage all these contributors or

00:10:20,010 --> 00:10:24,690
sometimes you feel like okay yeah people

00:10:23,490 --> 00:10:26,670
want to contribute but they don't

00:10:24,690 --> 00:10:28,650
actually make good pull requests or they

00:10:26,670 --> 00:10:30,960
don't file issues the way that we'd like

00:10:28,650 --> 00:10:32,430
to or actually you're doing an open

00:10:30,960 --> 00:10:33,840
source project and you want people to

00:10:32,430 --> 00:10:35,760
contribute but somehow nobody's showing

00:10:33,840 --> 00:10:37,710
up so I'm kind of curious to know from

00:10:35,760 --> 00:10:39,600
all four of you like what's your

00:10:37,710 --> 00:10:41,010
experience and kind of how do you how do

00:10:39,600 --> 00:10:46,470
you manage that and how would you like

00:10:41,010 --> 00:10:48,750
it to be so with graphene I just started

00:10:46,470 --> 00:10:50,700
along as like all open source projects

00:10:48,750 --> 00:10:53,430
yeah but I was believing that graph QL

00:10:50,700 --> 00:10:58,500
was like the next big thing after peanut

00:10:53,430 --> 00:10:59,970
butter having the website so I believe

00:10:58,500 --> 00:11:01,770
that that was like the next big thing

00:10:59,970 --> 00:11:04,410
and I just want to invest my time in

00:11:01,770 --> 00:11:06,570
something that I believe on um the

00:11:04,410 --> 00:11:08,670
beginning I was alone like I was like oh

00:11:06,570 --> 00:11:10,500
you can use my framework actually thanks

00:11:08,670 --> 00:11:12,630
for the slack channel I start like

00:11:10,500 --> 00:11:16,200
spreading a little bit and people

00:11:12,630 --> 00:11:18,390
actually start buying the idea of craft

00:11:16,200 --> 00:11:21,840
cool and of these people there were some

00:11:18,390 --> 00:11:24,000
people on Python so it was difficult the

00:11:21,840 --> 00:11:26,570
beginning like the first hundred stars

00:11:24,000 --> 00:11:29,190
was like very difficult but after that

00:11:26,570 --> 00:11:31,050
do you get some traction and some people

00:11:29,190 --> 00:11:34,110
like get involved in the process and

00:11:31,050 --> 00:11:38,220
actually there was some point I was

00:11:34,110 --> 00:11:40,050
working like from 9 a.m. to 6 p.m. in my

00:11:38,220 --> 00:11:42,870
work and then go back to my home and

00:11:40,050 --> 00:11:45,330
work until 2 a.m. like for 3 months this

00:11:42,870 --> 00:11:48,810
I mean it was exciting because I was

00:11:45,330 --> 00:11:51,960
creating my baby and was very good but

00:11:48,810 --> 00:11:54,510
actually until one point like probably

00:11:51,960 --> 00:11:56,250
like few months ago a lot of people

00:11:54,510 --> 00:11:57,900
start contributing I'm from these people

00:11:56,250 --> 00:12:00,090
like there are people that are kind of

00:11:57,900 --> 00:12:01,650
have more idea about like what is raffia

00:12:00,090 --> 00:12:04,560
and all these things and you can start

00:12:01,650 --> 00:12:09,540
delegating so that's like tango what I'm

00:12:04,560 --> 00:12:10,950
doing more right now handful of

00:12:09,540 --> 00:12:12,240
open-source projects - this one hits

00:12:10,950 --> 00:12:17,340
home

00:12:12,240 --> 00:12:18,630
I try to keep this so I think it's

00:12:17,340 --> 00:12:20,880
really important for any open-source

00:12:18,630 --> 00:12:23,820
project to have a philosophy of what

00:12:20,880 --> 00:12:25,980
that project is for and then that

00:12:23,820 --> 00:12:27,510
philosophy should guide how that project

00:12:25,980 --> 00:12:29,610
develops forward and should also guide

00:12:27,510 --> 00:12:31,500
how to evaluate flow requests because a

00:12:29,610 --> 00:12:33,210
lot of the times when it gets tricky as

00:12:31,500 --> 00:12:34,800
somebody comes up with a really good

00:12:33,210 --> 00:12:36,240
idea and they have a pull request stop

00:12:34,800 --> 00:12:37,590
and they're implementing it and you're

00:12:36,240 --> 00:12:39,870
trying to kind of like noodle through

00:12:37,590 --> 00:12:41,490
what kind of feedback can I give should

00:12:39,870 --> 00:12:43,710
this be better does it live here should

00:12:41,490 --> 00:12:47,010
it be its own package and if you have

00:12:43,710 --> 00:12:48,360
like a good solid philosophy on what

00:12:47,010 --> 00:12:49,950
this package is for and what did you

00:12:48,360 --> 00:12:51,900
like what things go in it what things go

00:12:49,950 --> 00:12:53,790
out of it where they live then I found

00:12:51,900 --> 00:12:56,750
that helps quite a lot and leading

00:12:53,790 --> 00:13:01,350
people to do the right thing and also

00:12:56,750 --> 00:13:03,150
it's it's hard for one project to main

00:13:01,350 --> 00:13:07,350
to be like a focal point for lots of

00:13:03,150 --> 00:13:08,610
development and you know I've kind of

00:13:07,350 --> 00:13:10,740
seen that happen on a handful of

00:13:08,610 --> 00:13:11,880
different projects before and the core

00:13:10,740 --> 00:13:13,470
maintainer is end up just kind of

00:13:11,880 --> 00:13:15,240
getting burnt out and wanting to run

00:13:13,470 --> 00:13:18,000
away and I don't want to have that

00:13:15,240 --> 00:13:19,170
happen to me so typically most the

00:13:18,000 --> 00:13:21,300
projects that I maintain have a

00:13:19,170 --> 00:13:22,860
philosophy you know like kind of like

00:13:21,300 --> 00:13:24,420
the UNIX philosophy like do one thing

00:13:22,860 --> 00:13:26,430
and do it well and then have a pluggable

00:13:24,420 --> 00:13:28,260
model so that other people can do things

00:13:26,430 --> 00:13:29,760
that work really well with it and in the

00:13:28,260 --> 00:13:32,880
cases where it doesn't the solution is

00:13:29,760 --> 00:13:35,760
almost never oh but you can't do this

00:13:32,880 --> 00:13:37,710
feature via like a modular way so we

00:13:35,760 --> 00:13:39,120
have to add it into the core and it's

00:13:37,710 --> 00:13:41,940
like no actually what you want is to

00:13:39,120 --> 00:13:44,460
figure out how to expose a new way to do

00:13:41,940 --> 00:13:45,720
your thing module II and that can

00:13:44,460 --> 00:13:47,490
sometimes be a little bit tricky

00:13:45,720 --> 00:13:49,170
especially when someone's coming in with

00:13:47,490 --> 00:13:51,210
an agenda to get their feature built and

00:13:49,170 --> 00:13:52,440
they feel like they're getting kind of

00:13:51,210 --> 00:13:54,120
the runaround it's like you're making me

00:13:52,440 --> 00:13:56,520
do this extra work to make my future

00:13:54,120 --> 00:13:58,320
work but it's ultimately beneficial in

00:13:56,520 --> 00:14:00,270
the long run because that initial work

00:13:58,320 --> 00:14:03,060
unlocks not only their one feature but

00:14:00,270 --> 00:14:05,430
opens up an avenue to have like more of

00:14:03,060 --> 00:14:07,410
an ecosystem of that same kind of thing

00:14:05,430 --> 00:14:09,660
so we tried to do that very

00:14:07,410 --> 00:14:11,430
intentionally with graphic ljs as a

00:14:09,660 --> 00:14:13,560
reference implementation and we hoped

00:14:11,430 --> 00:14:15,420
that that would be copied as people

00:14:13,560 --> 00:14:17,430
built graphical in other languages as

00:14:15,420 --> 00:14:18,839
well so like the fact that the like

00:14:17,430 --> 00:14:20,510
middleware pattern is catching on to

00:14:18,839 --> 00:14:22,920
resolvers I'm pretty excited about

00:14:20,510 --> 00:14:23,960
there's more things that we can do to

00:14:22,920 --> 00:14:26,450
make it more modular

00:14:23,960 --> 00:14:27,740
but making sure that we can have you

00:14:26,450 --> 00:14:29,270
know if you're trying to do something

00:14:27,740 --> 00:14:31,310
and the and there aren't existing

00:14:29,270 --> 00:14:34,070
graphical tools that let you do that you

00:14:31,310 --> 00:14:35,930
should feel like you have the available

00:14:34,070 --> 00:14:37,340
tools and support to build something

00:14:35,930 --> 00:14:39,200
that does it the way that you want to

00:14:37,340 --> 00:14:41,830
see it done and it still works with

00:14:39,200 --> 00:14:43,970
everything else that's out there yeah

00:14:41,830 --> 00:14:46,330
yeah I think that's super super

00:14:43,970 --> 00:14:48,350
important I think like the ability to

00:14:46,330 --> 00:14:50,960
let people do what they want with your

00:14:48,350 --> 00:14:53,090
tool instead of having to rebuild from

00:14:50,960 --> 00:14:54,260
the ground up I think is always the best

00:14:53,090 --> 00:14:58,070
like for example people can implement

00:14:54,260 --> 00:14:59,870
custom types for for graph QL so now I'm

00:14:58,070 --> 00:15:01,460
you know I'm also running to a situation

00:14:59,870 --> 00:15:03,350
where there's a ton of people out there

00:15:01,460 --> 00:15:04,850
who are building client graph kill

00:15:03,350 --> 00:15:07,370
clients with redux and so now I'm like

00:15:04,850 --> 00:15:09,260
guys can we all maybe like work together

00:15:07,370 --> 00:15:11,200
a factor out some libraries so we're not

00:15:09,260 --> 00:15:13,220
all have 10 million versions same thing

00:15:11,200 --> 00:15:16,460
going back to the original question the

00:15:13,220 --> 00:15:18,200
really cool thing for me was we after we

00:15:16,460 --> 00:15:21,200
decided the graph Gil was like the best

00:15:18,200 --> 00:15:23,450
thing ever we went and talked to a bunch

00:15:21,200 --> 00:15:25,010
of people like probably dozens of

00:15:23,450 --> 00:15:26,390
different people who were using in

00:15:25,010 --> 00:15:28,250
production wanting something like that

00:15:26,390 --> 00:15:30,530
in production and the best part was we

00:15:28,250 --> 00:15:32,000
came across somebody who actually

00:15:30,530 --> 00:15:34,130
already did the same thing that we were

00:15:32,000 --> 00:15:34,910
planning to do which was these guys at

00:15:34,130 --> 00:15:36,500
NewSpring church that we're

00:15:34,910 --> 00:15:38,420
collaborating with on Apollo client so

00:15:36,500 --> 00:15:40,370
essentially from from the very first day

00:15:38,420 --> 00:15:42,260
there were like two halves to the

00:15:40,370 --> 00:15:43,580
development team we're like developing

00:15:42,260 --> 00:15:44,840
would never sleep like I would come in

00:15:43,580 --> 00:15:46,730
and I had some ideas that were like

00:15:44,840 --> 00:15:48,050
mostly philosophical and then James

00:15:46,730 --> 00:15:49,580
would come in and be like okay we tried

00:15:48,050 --> 00:15:50,720
this inter actual app and like it didn't

00:15:49,580 --> 00:15:53,030
work so here's like a pull request to

00:15:50,720 --> 00:15:57,740
fix that and so that was super exciting

00:15:53,030 --> 00:16:01,310
like just having I think having more

00:15:57,740 --> 00:16:03,200
than one person on the project which can

00:16:01,310 --> 00:16:04,850
unique easy just have one person for a

00:16:03,200 --> 00:16:08,440
long time it was just super empowering

00:16:04,850 --> 00:16:08,440
to see like other people's ideas come in

00:16:09,430 --> 00:16:14,510
I don't know this is my first big open

00:16:13,070 --> 00:16:16,880
source project that I've worked on so

00:16:14,510 --> 00:16:18,500
and I think for the like the relay team

00:16:16,880 --> 00:16:20,690
as a whole we're still kind of figuring

00:16:18,500 --> 00:16:22,910
it out and you know getting good advice

00:16:20,690 --> 00:16:25,160
from Lee and Christopher shadow and

00:16:22,910 --> 00:16:27,890
others at Facebook who have had a lot of

00:16:25,160 --> 00:16:30,470
experience but I think the what you kind

00:16:27,890 --> 00:16:32,690
of touched on of trying to make the

00:16:30,470 --> 00:16:35,240
framework more modular that have you

00:16:32,690 --> 00:16:37,070
know that UNIX philosophy of keep it

00:16:35,240 --> 00:16:37,760
simple that's something that really

00:16:37,070 --> 00:16:39,949
doesn't do too

00:16:37,760 --> 00:16:42,290
we've definitely seen over time that

00:16:39,949 --> 00:16:44,149
there's this very like clear tendency in

00:16:42,290 --> 00:16:46,010
pull requests to just like add things

00:16:44,149 --> 00:16:47,449
into the framework and I think we

00:16:46,010 --> 00:16:49,279
initially kind of got sucked into that

00:16:47,449 --> 00:16:51,980
of like oh well alright how do we make

00:16:49,279 --> 00:16:53,480
this work and then kind of once that hit

00:16:51,980 --> 00:16:55,190
a certain critical mass was like okay we

00:16:53,480 --> 00:16:56,870
got to step back and figure out how to

00:16:55,190 --> 00:16:59,240
make this more modular so that people

00:16:56,870 --> 00:17:05,209
can just do what they need to do yeah so

00:16:59,240 --> 00:17:08,079
don't have too much dad but yes I think

00:17:05,209 --> 00:17:10,610
it's important one of the philosophies

00:17:08,079 --> 00:17:12,679
that Facebook has for its open-source

00:17:10,610 --> 00:17:14,600
program in general is that we only

00:17:12,679 --> 00:17:17,900
open-source the stuff that we're

00:17:14,600 --> 00:17:19,130
actually using at Facebook and I don't

00:17:17,900 --> 00:17:20,720
know if like if you guys have ever open

00:17:19,130 --> 00:17:22,130
sourced something that's just totally

00:17:20,720 --> 00:17:23,600
unrelated to your day job you've

00:17:22,130 --> 00:17:25,790
instantly created a second day job for

00:17:23,600 --> 00:17:28,910
yourself and then you just like have

00:17:25,790 --> 00:17:30,919
this this guilt because either you're

00:17:28,910 --> 00:17:32,120
like doing your day job well and then

00:17:30,919 --> 00:17:34,340
you're abandoning your open-source

00:17:32,120 --> 00:17:35,090
project and you feel bad or you're

00:17:34,340 --> 00:17:36,290
spending all your time on your

00:17:35,090 --> 00:17:37,970
open-source project and you're

00:17:36,290 --> 00:17:40,820
abandoning your day job and you feel bad

00:17:37,970 --> 00:17:42,919
and this is you know not a good thing

00:17:40,820 --> 00:17:45,140
and if you open-source the stuff that

00:17:42,919 --> 00:17:45,860
you're using day to day then your day to

00:17:45,140 --> 00:17:48,140
day work

00:17:45,860 --> 00:17:49,549
influences not just your own work but it

00:17:48,140 --> 00:17:51,049
influences people in the open-source

00:17:49,549 --> 00:17:52,850
community as well and then there's

00:17:51,049 --> 00:17:54,980
actually an incentive for when like

00:17:52,850 --> 00:17:57,290
people have issues or pull requests they

00:17:54,980 --> 00:17:59,150
might have found a problem that you will

00:17:57,290 --> 00:18:00,770
find in the future and just haven't yet

00:17:59,150 --> 00:18:02,210
and they're like oh this broke and

00:18:00,770 --> 00:18:04,730
you're like sweet thanks for finding

00:18:02,210 --> 00:18:06,890
that bug before I did let me merge that

00:18:04,730 --> 00:18:09,020
in great one less thing for me to worry

00:18:06,890 --> 00:18:11,179
about in the coming weeks so I've tried

00:18:09,020 --> 00:18:13,640
to make sure that as we've like guided

00:18:11,179 --> 00:18:15,320
the tools that we release around graph

00:18:13,640 --> 00:18:16,820
QL at Facebook that were only open

00:18:15,320 --> 00:18:18,740
sourcing the stuff that we're actually

00:18:16,820 --> 00:18:19,700
going to use at Facebook and for all the

00:18:18,740 --> 00:18:22,610
other stuff we're like this would be a

00:18:19,700 --> 00:18:24,590
great idea but it's not our place to do

00:18:22,610 --> 00:18:26,000
it and we'll kind of like seed it out

00:18:24,590 --> 00:18:27,700
there and talk to people and try to get

00:18:26,000 --> 00:18:30,320
other folks excited about building stuff

00:18:27,700 --> 00:18:32,960
you ever your fuel attention I wonder

00:18:30,320 --> 00:18:35,210
about like stuff that you like if

00:18:32,960 --> 00:18:36,980
somebody submits a pull request that you

00:18:35,210 --> 00:18:38,480
know you will never need somehow like if

00:18:36,980 --> 00:18:39,950
someone came down and told you we'll

00:18:38,480 --> 00:18:41,720
never need this feature how do you

00:18:39,950 --> 00:18:44,960
prioritize supporting that verse not

00:18:41,720 --> 00:18:46,850
yeah I mean it's it's like taking it at

00:18:44,960 --> 00:18:49,770
face value it's a pretty brutal but

00:18:46,850 --> 00:18:52,350
efficient like way to filter things

00:18:49,770 --> 00:18:53,910
and sometimes that makes some pull

00:18:52,350 --> 00:18:56,250
requests get filtered to the top before

00:18:53,910 --> 00:18:57,390
others I don't know like at the end of

00:18:56,250 --> 00:18:58,710
the day I think it's a good thing

00:18:57,390 --> 00:19:00,360
because I have a limited amount of time

00:18:58,710 --> 00:19:01,620
that I can spend dealing with issues and

00:19:00,360 --> 00:19:03,510
pull requests and if I flip through the

00:19:01,620 --> 00:19:04,920
pole aircrafts I'm like yes like I've

00:19:03,510 --> 00:19:06,420
been wanting to do that for a while and

00:19:04,920 --> 00:19:08,010
someone finally put up a pull request to

00:19:06,420 --> 00:19:09,720
do that thing I wanted to do I'm gonna

00:19:08,010 --> 00:19:11,640
focus on that one first before some

00:19:09,720 --> 00:19:14,040
other ones but obviously like anything

00:19:11,640 --> 00:19:15,750
it's like I found a bug I'm like oh crap

00:19:14,040 --> 00:19:17,940
great like I gotta make sure that that's

00:19:15,750 --> 00:19:19,290
fixing something because we probably

00:19:17,940 --> 00:19:23,790
have the same bug and just didn't

00:19:19,290 --> 00:19:25,950
realize it yet so we're all like pretty

00:19:23,790 --> 00:19:28,950
hyped about crafty all I think but no

00:19:25,950 --> 00:19:30,630
technology is perfect so I'm curious to

00:19:28,950 --> 00:19:32,310
know from you guys like what are the

00:19:30,630 --> 00:19:34,530
things that you think graph y'all

00:19:32,310 --> 00:19:40,470
doesn't do well and how could that be

00:19:34,530 --> 00:19:42,930
improved I think one thing that I mean

00:19:40,470 --> 00:19:44,670
for graph QL you have to control the

00:19:42,930 --> 00:19:46,950
client because it's a client who decides

00:19:44,670 --> 00:19:48,720
the data we want and before you have

00:19:46,950 --> 00:19:50,580
this logic on the server and when you

00:19:48,720 --> 00:19:53,060
switch the responsibility to the client

00:19:50,580 --> 00:19:56,100
you have to trust the client so actually

00:19:53,060 --> 00:19:58,080
kind of like making a tool like open

00:19:56,100 --> 00:19:59,730
sourcing like all your API is through

00:19:58,080 --> 00:20:03,180
graph you could be a little bit

00:19:59,730 --> 00:20:04,740
dangerous for like just your business or

00:20:03,180 --> 00:20:06,450
things like that so

00:20:04,740 --> 00:20:08,280
or maybe just like they are gonna do

00:20:06,450 --> 00:20:10,470
like harmful queries that you don't want

00:20:08,280 --> 00:20:12,720
to run or all these kind of things that

00:20:10,470 --> 00:20:14,370
you have to trust the clients that they

00:20:12,720 --> 00:20:16,770
are like wearing your data and that's

00:20:14,370 --> 00:20:19,470
important but there is no solution for

00:20:16,770 --> 00:20:22,970
that I was just gonna ask like how does

00:20:19,470 --> 00:20:22,970
Facebook actually solve that problem

00:20:24,170 --> 00:20:31,320
yeah so people so first of all our graph

00:20:28,740 --> 00:20:34,110
QL server is an internal server right we

00:20:31,320 --> 00:20:36,000
don't like third-party applications

00:20:34,110 --> 00:20:38,700
can't query Facebook's craftwell server

00:20:36,000 --> 00:20:41,640
so that's kind of like one possible

00:20:38,700 --> 00:20:43,650
attack vector kind of cleared the second

00:20:41,640 --> 00:20:44,730
is we build good tools for client

00:20:43,650 --> 00:20:46,590
developers to get a good understanding

00:20:44,730 --> 00:20:48,120
of what they're doing and so they don't

00:20:46,590 --> 00:20:50,640
have to worry too much so like one of

00:20:48,120 --> 00:20:52,710
those things is that we validate queries

00:20:50,640 --> 00:20:55,080
on the client before they're even

00:20:52,710 --> 00:20:56,610
checked in as like a lint rule so bad

00:20:55,080 --> 00:20:58,200
queries can't even make it into the

00:20:56,610 --> 00:21:01,320
client code bases let alone to the

00:20:58,200 --> 00:21:02,190
server the other thing that is pretty

00:21:01,320 --> 00:21:05,549
important about

00:21:02,190 --> 00:21:08,490
how graph CalWORKs is that you only

00:21:05,549 --> 00:21:10,799
expose through graph QL what you know to

00:21:08,490 --> 00:21:13,139
be possible to make fast on the server

00:21:10,799 --> 00:21:15,330
right and this is why graph keel doesn't

00:21:13,139 --> 00:21:18,690
have like a first-class notion of order

00:21:15,330 --> 00:21:21,090
buys or sort by field or or something

00:21:18,690 --> 00:21:22,950
like that where you would have to build

00:21:21,090 --> 00:21:24,840
an index for every you know you can

00:21:22,950 --> 00:21:27,090
write a sequel query that's just like

00:21:24,840 --> 00:21:29,730
insanely slow runs N squared on the size

00:21:27,090 --> 00:21:31,529
of your table and there's just no way to

00:21:29,730 --> 00:21:33,809
stop that except having like some poor

00:21:31,529 --> 00:21:35,669
DBA who sits somewhere and like sees a

00:21:33,809 --> 00:21:36,899
crane it's like up that one again and

00:21:35,669 --> 00:21:39,570
like figures out who to whack on the

00:21:36,899 --> 00:21:40,950
head and like we don't have that role

00:21:39,570 --> 00:21:43,379
because we don't have to have that role

00:21:40,950 --> 00:21:44,970
because we just don't expose the

00:21:43,379 --> 00:21:48,000
possibility to write a query that's slow

00:21:44,970 --> 00:21:50,970
so we large really kind of escape it

00:21:48,000 --> 00:21:54,480
both you can't write bad queries and we

00:21:50,970 --> 00:21:58,309
like evade the attack vector of like the

00:21:54,480 --> 00:21:58,309
general public sending us random queries

00:22:01,399 --> 00:22:06,210
but opening your graph QL endpoint to

00:22:05,220 --> 00:22:11,070
like the world

00:22:06,210 --> 00:22:13,379
yes ish the so the hard part is the just

00:22:11,070 --> 00:22:16,340
the details of how to do permissions and

00:22:13,379 --> 00:22:18,539
privacy checking and all of that

00:22:16,340 --> 00:22:20,610
Facebook has a really sophisticated

00:22:18,539 --> 00:22:22,409
system for doing privacy checking of

00:22:20,610 --> 00:22:26,009
data and there's kind of two sides to

00:22:22,409 --> 00:22:28,320
the coin one side is who you are using

00:22:26,009 --> 00:22:31,139
the service so like I'm me and I can see

00:22:28,320 --> 00:22:32,700
my own data and I can see some I can see

00:22:31,139 --> 00:22:35,159
Nick's data because we're friends but

00:22:32,700 --> 00:22:37,169
only some of it and you know I can't see

00:22:35,159 --> 00:22:38,970
Mark Zuckerberg data because I'm not

00:22:37,169 --> 00:22:41,909
friends with him right and so when I

00:22:38,970 --> 00:22:43,350
load data from graph QL because graph

00:22:41,909 --> 00:22:45,720
kill is just kind of a thin layer on top

00:22:43,350 --> 00:22:47,519
of our existing systems all that's taken

00:22:45,720 --> 00:22:49,679
care of for me but then there's the

00:22:47,519 --> 00:22:52,470
second side of it which is what

00:22:49,679 --> 00:22:56,490
application am I using to like do these

00:22:52,470 --> 00:22:58,470
crazy half of and right now the

00:22:56,490 --> 00:22:59,730
assumption with the graph Cal server is

00:22:58,470 --> 00:23:01,409
you're just using one in the graph or

00:22:59,730 --> 00:23:02,399
one of the Facebook apps and if using

00:23:01,409 --> 00:23:04,379
one of the Facebook apps and we're like

00:23:02,399 --> 00:23:07,230
great you can do everyone but if you

00:23:04,379 --> 00:23:08,879
were using a random third-party app you

00:23:07,230 --> 00:23:10,830
know if you ever used an app through

00:23:08,879 --> 00:23:12,010
Facebook you have to like give it

00:23:10,830 --> 00:23:14,290
permission to do things

00:23:12,010 --> 00:23:16,830
right and so those permissions also

00:23:14,290 --> 00:23:20,320
factored into this privacy rules and

00:23:16,830 --> 00:23:21,880
they for kind of historical reasons live

00:23:20,320 --> 00:23:23,200
in a slightly different system that

00:23:21,880 --> 00:23:24,760
isn't integrated into the thing that

00:23:23,200 --> 00:23:26,950
sits under graph QL and so it'd be kind

00:23:24,760 --> 00:23:29,860
of a major effort to do that and another

00:23:26,950 --> 00:23:31,540
reason is the the way people use the

00:23:29,860 --> 00:23:34,420
Facebook API is pretty different from

00:23:31,540 --> 00:23:36,730
the way that we use the Facebook API we

00:23:34,420 --> 00:23:38,680
actually originally like back in 2012 we

00:23:36,730 --> 00:23:41,530
were really thinking about this should

00:23:38,680 --> 00:23:42,910
just be the public Facebook API and then

00:23:41,530 --> 00:23:45,130
we will use it right like eat your own

00:23:42,910 --> 00:23:46,300
dog food and it was actually the

00:23:45,130 --> 00:23:49,360
platform team that convinced us that

00:23:46,300 --> 00:23:51,760
this was wrong because the only people

00:23:49,360 --> 00:23:54,490
building newsfeed is Facebook so it is

00:23:51,760 --> 00:23:57,520
actually not a good idea to expose like

00:23:54,490 --> 00:23:59,470
a full-featured Facebook newsfeed API to

00:23:57,520 --> 00:24:00,970
anyone except our own developers because

00:23:59,470 --> 00:24:02,890
as soon as you do they're gonna use it

00:24:00,970 --> 00:24:04,630
for some like insane other idea and

00:24:02,890 --> 00:24:06,100
they're gonna rely on it and then as we

00:24:04,630 --> 00:24:08,230
need to iterate our product quickly will

00:24:06,100 --> 00:24:10,060
actually accidentally break some 3d app

00:24:08,230 --> 00:24:12,640
so we just avoid all that stuff by

00:24:10,060 --> 00:24:14,490
having it being an internal API so apart

00:24:12,640 --> 00:24:17,260
from the concern of like clients making

00:24:14,490 --> 00:24:19,570
dangerous queries what other other

00:24:17,260 --> 00:24:23,470
things are there that you know that you

00:24:19,570 --> 00:24:26,440
think graph QL doesn't do very well so I

00:24:23,470 --> 00:24:28,990
think any technology is it's not about

00:24:26,440 --> 00:24:31,060
it doing something well or not well it's

00:24:28,990 --> 00:24:32,530
about strengths and weaknesses all right

00:24:31,060 --> 00:24:36,790
any technology is kind of like a point

00:24:32,530 --> 00:24:38,530
on the trade-off continuum and if we

00:24:36,790 --> 00:24:40,120
just want to like compare graphical to

00:24:38,530 --> 00:24:42,880
rest for example just because that's

00:24:40,120 --> 00:24:45,460
almost typical comparison what rest is

00:24:42,880 --> 00:24:48,910
really good at is mapping directly to an

00:24:45,460 --> 00:24:50,710
HTTP surface and then reusing all the

00:24:48,910 --> 00:24:52,410
tools that you get when you use HTTP

00:24:50,710 --> 00:24:55,570
right you can use a browser cache

00:24:52,410 --> 00:24:57,250
anytime some like new HTTP / like htv-2

00:24:55,570 --> 00:24:58,510
comes out with new features just like

00:24:57,250 --> 00:25:00,850
all the sudden every REST API

00:24:58,510 --> 00:25:02,350
automatically got an upgrade right so

00:25:00,850 --> 00:25:04,390
graph kill like picked a different point

00:25:02,350 --> 00:25:06,100
on that trade-off continuum because for

00:25:04,390 --> 00:25:07,690
we often talk about like here are the

00:25:06,100 --> 00:25:09,430
problems with rest here's how they're

00:25:07,690 --> 00:25:11,110
solved in graph QL and we're like yeah

00:25:09,430 --> 00:25:14,560
graph kill is better but to its credit

00:25:11,110 --> 00:25:16,690
rest can do a much simpler caching model

00:25:14,560 --> 00:25:18,460
than graphical can right so you have a

00:25:16,690 --> 00:25:20,830
different kind of point on that curve

00:25:18,460 --> 00:25:22,510
and actually to to say like alright

00:25:20,830 --> 00:25:23,570
great well then let's use the caching

00:25:22,510 --> 00:25:25,850
mechanism that

00:25:23,570 --> 00:25:27,230
uses we would have to give up a lot of

00:25:25,850 --> 00:25:29,990
the stuff that we find valuable about

00:25:27,230 --> 00:25:32,570
graph QL so I think we end up kind of at

00:25:29,990 --> 00:25:33,830
like a crossroads between what things we

00:25:32,570 --> 00:25:36,530
care about and what things we don't care

00:25:33,830 --> 00:25:38,270
about and it ended up being the case

00:25:36,530 --> 00:25:39,890
that we cared far more about the speed

00:25:38,270 --> 00:25:42,050
over mobile networks and the ability to

00:25:39,890 --> 00:25:44,330
express the data that you wanted more so

00:25:42,050 --> 00:25:45,590
than like a very simple caching

00:25:44,330 --> 00:25:47,740
mechanism and so we ended up building

00:25:45,590 --> 00:25:50,180
complicated caching mechanisms instead

00:25:47,740 --> 00:25:52,460
what kind of limitations of like graph

00:25:50,180 --> 00:25:57,080
Gayle did you run into my building

00:25:52,460 --> 00:25:59,510
really so yeah it's a good question

00:25:57,080 --> 00:26:02,840
I think you can kind of see that in the

00:25:59,510 --> 00:26:04,670
relay API so places where there are

00:26:02,840 --> 00:26:07,550
things like we have a defer feature

00:26:04,670 --> 00:26:08,780
that's available internally we haven't

00:26:07,550 --> 00:26:10,130
brought that yet so open source although

00:26:08,780 --> 00:26:13,460
somebody's in the community is working

00:26:10,130 --> 00:26:15,320
on it but that's the ability to say part

00:26:13,460 --> 00:26:17,270
of this this sub query this sub fragment

00:26:15,320 --> 00:26:19,760
we don't need it right away so actually

00:26:17,270 --> 00:26:21,800
fetch everything but this render and

00:26:19,760 --> 00:26:24,200
then go get this data and then render

00:26:21,800 --> 00:26:26,300
with that extra information and so this

00:26:24,200 --> 00:26:27,380
idea of deferred like obviously that

00:26:26,300 --> 00:26:29,060
could become a directive and I think

00:26:27,380 --> 00:26:32,540
we're we're talking and exploring that

00:26:29,060 --> 00:26:35,300
idea things like so list views where

00:26:32,540 --> 00:26:38,060
right now if you fetch 10 items you get

00:26:35,300 --> 00:26:39,800
10 items back you're naturally going to

00:26:38,060 --> 00:26:42,050
write all 10 into your store and then

00:26:39,800 --> 00:26:44,000
render 10 items but if you could for

00:26:42,050 --> 00:26:45,860
example get one item at a time back from

00:26:44,000 --> 00:26:46,970
the server render the first item render

00:26:45,860 --> 00:26:48,350
the second item render the third item

00:26:46,970 --> 00:26:50,030
you just get a lot better

00:26:48,350 --> 00:26:52,820
you know buffering and throughout the

00:26:50,030 --> 00:26:55,540
entire process so that is something that

00:26:52,820 --> 00:26:58,790
we are iterating on internally right now

00:26:55,540 --> 00:27:00,650
again just for performance reasons so I

00:26:58,790 --> 00:27:03,200
think it's kind of mainly things that

00:27:00,650 --> 00:27:05,720
are already like kind of in the

00:27:03,200 --> 00:27:09,170
graphical future like spec and I get

00:27:05,720 --> 00:27:12,860
kind of you're thinking about another

00:27:09,170 --> 00:27:15,380
big one would be so with react we have

00:27:12,860 --> 00:27:17,570
you know kind of you're used to the idea

00:27:15,380 --> 00:27:19,310
of like I pass in props and that

00:27:17,570 --> 00:27:20,990
configures the component right so I can

00:27:19,310 --> 00:27:23,390
have a button and I can choose whether

00:27:20,990 --> 00:27:25,550
to have it be toggled or not toggled or

00:27:23,390 --> 00:27:28,190
maybe I have a a profile picture

00:27:25,550 --> 00:27:30,170
component that has a size and we want to

00:27:28,190 --> 00:27:32,000
build configure that size and so

00:27:30,170 --> 00:27:32,990
depending on what your UI patterns are

00:27:32,000 --> 00:27:35,960
you may have these very very

00:27:32,990 --> 00:27:36,120
configurable components and yet you have

00:27:35,960 --> 00:27:39,750
a

00:27:36,120 --> 00:27:42,060
static query and so right now fragments

00:27:39,750 --> 00:27:45,390
don't take arguments which has a lot of

00:27:42,060 --> 00:27:47,610
benefits because it means that the the

00:27:45,390 --> 00:27:48,600
response shape is predictable the thing

00:27:47,610 --> 00:27:50,520
is that if you're building tooling on

00:27:48,600 --> 00:27:52,770
top of it you can kind of do more

00:27:50,520 --> 00:27:54,240
complex dynamic things and so in relay

00:27:52,770 --> 00:27:55,410
we are able to say well actually that

00:27:54,240 --> 00:27:57,210
restriction doesn't make sense for us

00:27:55,410 --> 00:28:00,270
because we're doing it making a dynamic

00:27:57,210 --> 00:28:02,880
query and so I think that's one area

00:28:00,270 --> 00:28:05,670
where if you if you have this dynamic

00:28:02,880 --> 00:28:07,020
client then you like it becomes natural

00:28:05,670 --> 00:28:08,430
to want to express certain things and so

00:28:07,020 --> 00:28:10,380
we're kind of still sorting out that

00:28:08,430 --> 00:28:13,860
that tension yeah there's kind of an

00:28:10,380 --> 00:28:14,180
interesting the historical path of graph

00:28:13,860 --> 00:28:16,440
QL

00:28:14,180 --> 00:28:18,960
because our iOS app was the very first

00:28:16,440 --> 00:28:20,580
client that used graph QL so we kind of

00:28:18,960 --> 00:28:22,650
developed in lockstep where the things

00:28:20,580 --> 00:28:24,570
that made the most sense for how our iOS

00:28:22,650 --> 00:28:26,970
app would work were the things that we

00:28:24,570 --> 00:28:28,770
prioritized first in graph QL and that

00:28:26,970 --> 00:28:31,200
ended up actually making kind of like a

00:28:28,770 --> 00:28:32,910
very happy outcome because all the

00:28:31,200 --> 00:28:35,850
concerns that you face building like a

00:28:32,910 --> 00:28:36,960
performant and good data rich mobile

00:28:35,850 --> 00:28:39,480
application that needs to live on a

00:28:36,960 --> 00:28:42,960
crappy mobile network kind of happened

00:28:39,480 --> 00:28:44,310
and then much later relay tried to bring

00:28:42,960 --> 00:28:45,660
those ideas back to the web and

00:28:44,310 --> 00:28:47,640
introduce a lot of really cool ideas

00:28:45,660 --> 00:28:50,520
that we hadn't been doing yet like

00:28:47,640 --> 00:28:52,440
actually co-locating the bits of your

00:28:50,520 --> 00:28:53,550
query right next to the views that's

00:28:52,440 --> 00:28:54,960
gonna render them that's like really

00:28:53,550 --> 00:28:56,370
innovation and now we're like trying to

00:28:54,960 --> 00:28:58,470
figure out how to bring that back to our

00:28:56,370 --> 00:29:01,260
iOS and our Android apps but at the same

00:28:58,470 --> 00:29:02,820
time the real a living in JavaScript

00:29:01,260 --> 00:29:04,410
which is a much more dynamic programming

00:29:02,820 --> 00:29:06,660
environment wanted to introduce more of

00:29:04,410 --> 00:29:07,980
this dynamicism that like maybe if the

00:29:06,660 --> 00:29:09,840
ordering of these had been reversed

00:29:07,980 --> 00:29:12,060
where the first thing we tried to do was

00:29:09,840 --> 00:29:13,710
build stuff for the desktop web and then

00:29:12,060 --> 00:29:16,290
later trying to build stuff for the iOS

00:29:13,710 --> 00:29:18,510
apps we might have ended up with

00:29:16,290 --> 00:29:20,460
different decisions you know that's

00:29:18,510 --> 00:29:23,190
that's really interesting so we're

00:29:20,460 --> 00:29:25,290
almost out of time so we have to wrap up

00:29:23,190 --> 00:29:27,030
pretty soon but I just want to ask like

00:29:25,290 --> 00:29:29,550
one last question for each one of you

00:29:27,030 --> 00:29:31,290
and and that's if someone wanted to

00:29:29,550 --> 00:29:33,530
learn graph Q or wanted to try out graph

00:29:31,290 --> 00:29:36,780
Q all you know where should they go

00:29:33,530 --> 00:29:41,070
maybe sashko you can take this ha well I

00:29:36,780 --> 00:29:42,530
guess our respective sources for

00:29:41,070 --> 00:29:47,210
learning graph QL

00:29:42,530 --> 00:29:49,580
they read their blog yes so that's one

00:29:47,210 --> 00:29:51,500
thing we have been focusing a lot since

00:29:49,580 --> 00:29:53,390
we got started is learning about graphic

00:29:51,500 --> 00:29:55,580
UL in depth and writing about what we've

00:29:53,390 --> 00:29:57,710
been learning about also in depth so we

00:29:55,580 --> 00:29:59,600
do have a blog where we post a lot of

00:29:57,710 --> 00:30:01,250
that stuff but I think the blog is not

00:29:59,600 --> 00:30:02,390
necessarily like a lot of those posts

00:30:01,250 --> 00:30:05,810
are quite in-depth and maybe not a good

00:30:02,390 --> 00:30:08,120
place to get started but I think some of

00:30:05,810 --> 00:30:09,950
these things like a talk that Steve

00:30:08,120 --> 00:30:13,220
Luscher gave recently about zero to

00:30:09,950 --> 00:30:14,660
graph QL in 30 30 minutes was the most

00:30:13,220 --> 00:30:15,590
stellar display of live coding I've ever

00:30:14,660 --> 00:30:17,210
experienced I've been trying to

00:30:15,590 --> 00:30:21,410
reproduce it ever since in my bedroom

00:30:17,210 --> 00:30:25,310
right but then you know Jonas has also a

00:30:21,410 --> 00:30:26,690
great tutorial that you know takes takes

00:30:25,310 --> 00:30:28,040
you through loading data from lots of

00:30:26,690 --> 00:30:29,840
multiple data sources which i think is

00:30:28,040 --> 00:30:31,820
the best feature of graph QL actually

00:30:29,840 --> 00:30:33,260
the ability to like his tutorial has it

00:30:31,820 --> 00:30:35,570
to a thing where you can load for

00:30:33,260 --> 00:30:39,320
sequel and the REST API to get fortune

00:30:35,570 --> 00:30:42,110
cookie strings yeah for me I will say

00:30:39,320 --> 00:30:44,360
like go and play with it and play with

00:30:42,110 --> 00:30:46,310
it like you have the Star Wars API for

00:30:44,360 --> 00:30:48,950
playing like either in JavaScript Python

00:30:46,310 --> 00:30:50,330
I don't know if in this collab but you

00:30:48,950 --> 00:30:52,130
have these things and you're gonna start

00:30:50,330 --> 00:30:54,350
playing with it and see like how we

00:30:52,130 --> 00:30:56,300
could fit in your current architecture

00:30:54,350 --> 00:30:59,000
I'm from that like probably you will

00:30:56,300 --> 00:31:01,550
find the resources to accomplish what

00:30:59,000 --> 00:31:04,760
you want but actually seen it the real

00:31:01,550 --> 00:31:08,720
thing it's quite valuable so like your

00:31:04,760 --> 00:31:11,330
blog or your post like the website learn

00:31:08,720 --> 00:31:14,510
profitable I think it's also good but

00:31:11,330 --> 00:31:15,920
they were all play with it I mean all

00:31:14,510 --> 00:31:18,710
the suggestions so far

00:31:15,920 --> 00:31:21,800
definitely call out Steven leechers talk

00:31:18,710 --> 00:31:24,590
the yeah 0 de Graaff kill in 30 minutes

00:31:21,800 --> 00:31:27,350
and then also there's he has a github

00:31:24,590 --> 00:31:29,060
repo up that has the examples from that

00:31:27,350 --> 00:31:31,250
and I think there's been a pull request

00:31:29,060 --> 00:31:33,830
to add a different language I think it

00:31:31,250 --> 00:31:35,300
might have been Scala example as well so

00:31:33,830 --> 00:31:38,870
you can actually see like the all the

00:31:35,300 --> 00:31:40,700
examples actual code and run it there's

00:31:38,870 --> 00:31:42,620
a website learn graph QL that one's

00:31:40,700 --> 00:31:44,810
pretty great everything those guys just

00:31:42,620 --> 00:31:46,970
said is great there's also a site called

00:31:44,810 --> 00:31:48,920
make it open comm which is a little bit

00:31:46,970 --> 00:31:51,740
more than just graph kill it but it may

00:31:48,920 --> 00:31:55,040
be useful to see like what does a real

00:31:51,740 --> 00:31:56,190
app look like if you're using graph QL

00:31:55,040 --> 00:31:58,440
relay

00:31:56,190 --> 00:32:01,860
native and it like ties all the pieces

00:31:58,440 --> 00:32:04,230
together and it is not only all the code

00:32:01,860 --> 00:32:05,789
that's required it's the app from the f8

00:32:04,230 --> 00:32:07,679
conference so one of the Facebook

00:32:05,789 --> 00:32:09,179
engineers built kind of like top to

00:32:07,679 --> 00:32:12,149
bottom everything like from the server

00:32:09,179 --> 00:32:13,529
the iOS Android app the website for f8

00:32:12,149 --> 00:32:16,019
and then he wrote a bunch of articles

00:32:13,529 --> 00:32:18,419
like explaining how the different like

00:32:16,019 --> 00:32:20,309
technologies he used played out and

00:32:18,419 --> 00:32:23,250
they're really excellent so that's a

00:32:20,309 --> 00:32:26,759
good resource as well and then I would

00:32:23,250 --> 00:32:28,230
just kind of end with there's needs to

00:32:26,759 --> 00:32:30,629
be more of this stuff so like if you

00:32:28,230 --> 00:32:31,980
dive in and say like oh man I needed to

00:32:30,629 --> 00:32:33,779
learn this thing it was a relatively

00:32:31,980 --> 00:32:35,570
like intermediate to advanced topic and

00:32:33,779 --> 00:32:39,299
I just like couldn't find a really good

00:32:35,570 --> 00:32:41,700
article on this write one post on medium

00:32:39,299 --> 00:32:43,259
posted somewhere or just like message me

00:32:41,700 --> 00:32:45,029
because we're always taking kind of

00:32:43,259 --> 00:32:47,159
guest contributors to the graph Kaltura

00:32:45,029 --> 00:32:48,929
blog there's also got filled out work

00:32:47,159 --> 00:32:50,100
although the content there is not as

00:32:48,929 --> 00:32:51,559
good as it could be so let's make it

00:32:50,100 --> 00:32:54,269
better

00:32:51,559 --> 00:32:56,909
beyond that which is I think the best

00:32:54,269 --> 00:32:59,480
way to learn exactly how it works is to

00:32:56,909 --> 00:33:01,980
implement your own library or your own

00:32:59,480 --> 00:33:04,289
tool around it if you go and you find

00:33:01,980 --> 00:33:06,059
that oh look yeah I love graph QL but

00:33:04,289 --> 00:33:07,679
like it doesn't do this thing just try

00:33:06,059 --> 00:33:10,200
making that thing work and I think I

00:33:07,679 --> 00:33:11,820
learned like way more by just trying to

00:33:10,200 --> 00:33:14,809
implement some stuff in JavaScript then

00:33:11,820 --> 00:33:16,980
from reading any amount of blog posts

00:33:14,809 --> 00:33:19,950
well thank you very much those are all

00:33:16,980 --> 00:33:24,840
really great tips and I think we had a

00:33:19,950 --> 00:33:26,759
really nice discussion so thanks to

00:33:24,840 --> 00:33:29,220
everyone in the audience for coming and

00:33:26,759 --> 00:33:29,700
if you like this we'll be doing more of

00:33:29,220 --> 00:33:31,409
this

00:33:29,700 --> 00:33:32,850
well we'll be doing more of this even if

00:33:31,409 --> 00:33:35,669
you don't like it because we're having a

00:33:32,850 --> 00:33:38,429
great time but yeah so make sure to

00:33:35,669 --> 00:33:39,240
check out our meetup online on

00:33:38,429 --> 00:33:41,970
meetup.com

00:33:39,240 --> 00:33:44,129
and if you like if you missed some of

00:33:41,970 --> 00:33:46,019
the talks or didn't catch everything

00:33:44,129 --> 00:33:48,480
we'll be uploading the videos on our

00:33:46,019 --> 00:33:51,179
apollo stack youtube channel so you can

00:33:48,480 --> 00:33:53,279
go check them out there and also ask

00:33:51,179 --> 00:33:54,720
like the speakers for links to the

00:33:53,279 --> 00:33:56,850
things that are recommended so we'll put

00:33:54,720 --> 00:33:59,020
them there as well alright that's it for

00:33:56,850 --> 00:34:01,080
today and thanks for coming

00:33:59,020 --> 00:34:01,080

YouTube URL: https://www.youtube.com/watch?v=bPygoeZVL5g


