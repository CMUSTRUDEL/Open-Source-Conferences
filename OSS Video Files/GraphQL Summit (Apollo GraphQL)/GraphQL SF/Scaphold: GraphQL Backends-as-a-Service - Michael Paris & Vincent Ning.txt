Title: Scaphold: GraphQL Backends-as-a-Service - Michael Paris & Vincent Ning
Publication date: 2017-11-16
Playlist: GraphQL SF
Description: 
	Scaphold.io founders Michael Paris and Vincent Ning present at our GraphQL in Production meetup on 8/25/16.

We're organizing the first-ever GraphQL conf! Register to attend GraphQL Summit in SF this October: http://graphqlsummit.com/

Join GraphQL San Francisco for updates on future events: http://www.meetup.com/GraphQL-SF/
Captions: 
	00:00:01,240 --> 00:00:07,149
our next speakers are Michael and Vince

00:00:04,149 --> 00:00:09,429
from scaffold I oh they're the founders

00:00:07,149 --> 00:00:11,769
of scaffold I oh and they're building a

00:00:09,429 --> 00:00:16,270
graphic you all back end as a service

00:00:11,769 --> 00:00:17,769
Thanks awesome hey I'm Michael this is

00:00:16,270 --> 00:00:18,970
Vince as I said thanks for having us

00:00:17,769 --> 00:00:21,310
we're excited to talk and yeah we're the

00:00:18,970 --> 00:00:23,500
founders of scaffold do we're building a

00:00:21,310 --> 00:00:24,970
graph ql as a service platform we

00:00:23,500 --> 00:00:26,320
actually just graduated from Y

00:00:24,970 --> 00:00:29,710
Combinator's fellowship class about a

00:00:26,320 --> 00:00:32,410
month ago thank you thank you but yeah

00:00:29,710 --> 00:00:33,880
we're just gonna get started so why are

00:00:32,410 --> 00:00:36,550
we building a graph jail as a service

00:00:33,880 --> 00:00:38,050
platform we think it's timely we think

00:00:36,550 --> 00:00:39,700
Rafiel is the future the way that we

00:00:38,050 --> 00:00:42,100
kind of think about it is that graph ql

00:00:39,700 --> 00:00:44,020
is to rest what rest was to soap back in

00:00:42,100 --> 00:00:45,430
like the 90s and no one you just show up

00:00:44,020 --> 00:00:47,620
anymore so that's kind of where we think

00:00:45,430 --> 00:00:49,210
things are going it's kind of a simple

00:00:47,620 --> 00:00:51,010
litmus test we use and this is the

00:00:49,210 --> 00:00:52,630
google trends chart for graph ql and it

00:00:51,010 --> 00:00:54,400
looks like a looks like straight like

00:00:52,630 --> 00:00:58,090
slack so we're you know real excited

00:00:54,400 --> 00:01:00,160
about perhaps ql yeah another thing so

00:00:58,090 --> 00:01:01,540
who's building with graph UL um as you

00:01:00,160 --> 00:01:03,790
heard and i'm sure the Facebook guys can

00:01:01,540 --> 00:01:05,649
tell you better they use it a lot from

00:01:03,790 --> 00:01:07,990
our understanding the story kind of goes

00:01:05,649 --> 00:01:09,640
that Facebook was running into a series

00:01:07,990 --> 00:01:11,200
of scaling problems where they had a ton

00:01:09,640 --> 00:01:12,670
of back-end services and they had a ton

00:01:11,200 --> 00:01:14,079
of mobile apps and it's really hard to

00:01:12,670 --> 00:01:15,939
get rest to scale across that many

00:01:14,079 --> 00:01:17,380
different things so they kind of created

00:01:15,939 --> 00:01:19,899
this graph ql language as a way to

00:01:17,380 --> 00:01:22,030
really seamlessly interact these these

00:01:19,899 --> 00:01:24,450
you know disparate data sources into a

00:01:22,030 --> 00:01:26,890
single consolidated and standardized API

00:01:24,450 --> 00:01:28,600
we also know that Twitter uses it we've

00:01:26,890 --> 00:01:31,450
had a number of YC companies approached

00:01:28,600 --> 00:01:33,340
us about it into it uses it as you heard

00:01:31,450 --> 00:01:34,899
Credit Karma the new york times and just

00:01:33,340 --> 00:01:36,999
more and more so we think it's going to

00:01:34,899 --> 00:01:38,319
be come even more important part in the

00:01:36,999 --> 00:01:40,450
industry it's an important skill to

00:01:38,319 --> 00:01:44,170
learn and if you're not building with it

00:01:40,450 --> 00:01:47,189
it's a great time to start so and as we

00:01:44,170 --> 00:01:49,810
might have guessed we use graph ql a lot

00:01:47,189 --> 00:01:52,810
actually a lot of our services that we

00:01:49,810 --> 00:01:54,549
use to manage our service are very

00:01:52,810 --> 00:01:56,859
similar to the services that we expose

00:01:54,549 --> 00:01:59,579
to you when you create an app so we'll

00:01:56,859 --> 00:02:02,350
kind of talk about that a little bit so

00:01:59,579 --> 00:02:04,569
how does it work on our service so one

00:02:02,350 --> 00:02:08,259
difference between us and the previous

00:02:04,569 --> 00:02:10,240
speakers is previously when you know the

00:02:08,259 --> 00:02:11,980
structure of your api it's really nice

00:02:10,240 --> 00:02:13,960
and you can kind of you know encode that

00:02:11,980 --> 00:02:15,040
into graph ql language and then kind of

00:02:13,960 --> 00:02:16,810
keep that stored as differ

00:02:15,040 --> 00:02:19,269
modules on NPM and however it is an

00:02:16,810 --> 00:02:21,700
import them as you want we actually

00:02:19,269 --> 00:02:24,129
don't have that we because we're kind of

00:02:21,700 --> 00:02:27,280
a generalist solution here we let you

00:02:24,129 --> 00:02:29,859
structure your own graph ql api and we

00:02:27,280 --> 00:02:33,220
essentially generate your schema and

00:02:29,859 --> 00:02:34,780
cash it of course in essentially what is

00:02:33,220 --> 00:02:36,069
a series of middleware so it's kind of

00:02:34,780 --> 00:02:37,689
interesting we kind of think of our

00:02:36,069 --> 00:02:39,670
graph ql schema as a series of

00:02:37,689 --> 00:02:42,040
isomorphic middleware functions that

00:02:39,670 --> 00:02:44,769
flow unidirectionally and we start with

00:02:42,040 --> 00:02:46,450
essentially a representation that we

00:02:44,769 --> 00:02:48,639
keep internally of the structure of your

00:02:46,450 --> 00:02:50,439
api essentially it's a JSON encoding of

00:02:48,639 --> 00:02:52,510
your type system and then we kind of

00:02:50,439 --> 00:02:54,819
over time as you as you add more and

00:02:52,510 --> 00:02:58,780
more features that will kind of get into

00:02:54,819 --> 00:03:01,540
in a demo later we attacked them on as a

00:02:58,780 --> 00:03:03,129
you know iteratively as little pieces

00:03:01,540 --> 00:03:04,620
you know essentially we're just built

00:03:03,129 --> 00:03:06,549
we're taking a graph GL schema

00:03:04,620 --> 00:03:08,230
augmenting it in some way and then

00:03:06,549 --> 00:03:11,019
passing it forward down this pipeline of

00:03:08,230 --> 00:03:12,489
middleware you also have a you'll see we

00:03:11,019 --> 00:03:15,579
have a permission system a validation

00:03:12,489 --> 00:03:17,109
system series of resolvers if you've

00:03:15,579 --> 00:03:19,629
experienced graph ql you know what those

00:03:17,109 --> 00:03:21,479
are talk to our models and hooks hooks

00:03:19,629 --> 00:03:23,829
allow us to do things like like

00:03:21,479 --> 00:03:25,540
essentially bind events to certain

00:03:23,829 --> 00:03:27,579
things in your api and then we have a

00:03:25,540 --> 00:03:29,620
series of data stores and services that

00:03:27,579 --> 00:03:32,620
we support so we're going to keep going

00:03:29,620 --> 00:03:34,690
so the point of our service is we want

00:03:32,620 --> 00:03:36,370
it to make really easy for you guys to

00:03:34,690 --> 00:03:39,099
build applications quickly and

00:03:36,370 --> 00:03:41,620
powerfully with graph ql so what does

00:03:39,099 --> 00:03:43,359
that mean modern applications they use a

00:03:41,620 --> 00:03:46,870
lot of different cloud services to kind

00:03:43,359 --> 00:03:48,280
of reinventing the wheel in addition to

00:03:46,870 --> 00:03:49,540
the core data store you're going to need

00:03:48,280 --> 00:03:51,340
something like payments you could use

00:03:49,540 --> 00:03:52,569
stripe or a Braintree you're going to

00:03:51,340 --> 00:03:54,340
need some sort of social authentication

00:03:52,569 --> 00:03:55,599
or other social features you're going to

00:03:54,340 --> 00:03:57,939
need notifications and you're going to

00:03:55,599 --> 00:03:59,769
need messaging the problem is that each

00:03:57,939 --> 00:04:01,599
of these services are written their own

00:03:59,769 --> 00:04:03,760
way and a you know different REST API

00:04:01,599 --> 00:04:05,079
this the facebook REST API looks

00:04:03,760 --> 00:04:07,659
different than the stripe REST API looks

00:04:05,079 --> 00:04:10,269
different than the iOS API and what we

00:04:07,659 --> 00:04:11,949
can do is actually really easily allow

00:04:10,269 --> 00:04:14,079
you to bind all of these different

00:04:11,949 --> 00:04:17,620
services as well as a hosted data store

00:04:14,079 --> 00:04:19,479
that we host kind of behind a graph ql

00:04:17,620 --> 00:04:21,820
server and then build different

00:04:19,479 --> 00:04:23,770
applications against it part of our

00:04:21,820 --> 00:04:25,300
value prop is that we can let you do it

00:04:23,770 --> 00:04:26,070
in a matter of minutes instead of a

00:04:25,300 --> 00:04:28,620
matter of month

00:04:26,070 --> 00:04:29,910
and we've actually really specialized in

00:04:28,620 --> 00:04:31,740
this and think we have a pretty good

00:04:29,910 --> 00:04:34,830
handle on how to craft your API works

00:04:31,740 --> 00:04:36,240
now so we're going to go into a demo

00:04:34,830 --> 00:04:40,410
demos are bad but we're going to do one

00:04:36,240 --> 00:04:42,690
anyway so here's our portal this is

00:04:40,410 --> 00:04:45,750
scaffold that I owe essentially what you

00:04:42,690 --> 00:04:48,480
can see here is you have a number of

00:04:45,750 --> 00:04:51,090
apps you can go on and make and make

00:04:48,480 --> 00:04:53,370
apps and for different purposes and then

00:04:51,090 --> 00:04:54,930
you kind of go and create an app and the

00:04:53,370 --> 00:04:56,280
first thing you see is your scheme and

00:04:54,930 --> 00:04:57,840
designer so this is essentially an

00:04:56,280 --> 00:05:00,000
interface that we created that allows it

00:04:57,840 --> 00:05:01,560
it makes it really easy for you guys to

00:05:00,000 --> 00:05:02,910
create your schema to structure the

00:05:01,560 --> 00:05:04,110
schema without actually having to worry

00:05:02,910 --> 00:05:05,670
about the nitty-gritty of writing

00:05:04,110 --> 00:05:07,590
JavaScript or anything else to get that

00:05:05,670 --> 00:05:09,690
schema to work so kind of how you can

00:05:07,590 --> 00:05:11,610
see is wit by default we give you a user

00:05:09,690 --> 00:05:13,260
model we allow you to do things like

00:05:11,610 --> 00:05:14,730
user authentication we can tie in really

00:05:13,260 --> 00:05:16,410
easily to social off providers and

00:05:14,730 --> 00:05:17,940
things like that for you you can also

00:05:16,410 --> 00:05:19,650
extend it so you know feel free to

00:05:17,940 --> 00:05:21,570
extend it so here's here's one that we

00:05:19,650 --> 00:05:23,670
use for one of our tutorials that we've

00:05:21,570 --> 00:05:25,200
written kind of a really basic schema

00:05:23,670 --> 00:05:27,330
with a message board and a user and a

00:05:25,200 --> 00:05:28,590
message so you can see kind of you can

00:05:27,330 --> 00:05:30,900
go in here and if we wanted to add a new

00:05:28,590 --> 00:05:33,840
type you can go in here and we can add

00:05:30,900 --> 00:05:36,480
one some type click Add and then you get

00:05:33,840 --> 00:05:38,670
this and in the background we actually

00:05:36,480 --> 00:05:39,840
just allocated storage for you and

00:05:38,670 --> 00:05:41,430
everything was set up to work really

00:05:39,840 --> 00:05:43,650
seamlessly you can do the same thing for

00:05:41,430 --> 00:05:45,480
fields if you if you're familiar with

00:05:43,650 --> 00:05:48,150
graph ql you probably familiar with the

00:05:45,480 --> 00:05:51,270
concept of connections so if you needed

00:05:48,150 --> 00:05:54,030
to for example make a say some type had

00:05:51,270 --> 00:05:56,820
a series of messages then you can go in

00:05:54,030 --> 00:05:58,230
and denote that as a connection say it's

00:05:56,820 --> 00:06:01,770
a message and then this is kind of how

00:05:58,230 --> 00:06:03,720
you do your the the hierarchical

00:06:01,770 --> 00:06:05,280
structure is how you create the

00:06:03,720 --> 00:06:07,440
relations between the types and your

00:06:05,280 --> 00:06:08,730
schema so that's kind of an example so

00:06:07,440 --> 00:06:10,350
this is a tool that is really helpful

00:06:08,730 --> 00:06:11,400
and a lot of a lot of our customers have

00:06:10,350 --> 00:06:12,840
been really excited about this tool

00:06:11,400 --> 00:06:14,460
because it really gets rid of a lot of

00:06:12,840 --> 00:06:17,340
the nitty gritty when it comes to

00:06:14,460 --> 00:06:19,440
building graft you a few guys quickly so

00:06:17,340 --> 00:06:20,910
we'll keep going delete that and then

00:06:19,440 --> 00:06:22,830
kind of what you see here so once you've

00:06:20,910 --> 00:06:24,480
defined your data model that's step one

00:06:22,830 --> 00:06:25,770
is figure out what are this what are the

00:06:24,480 --> 00:06:27,810
types i need how do they relate to each

00:06:25,770 --> 00:06:30,030
other and and kind of get that

00:06:27,810 --> 00:06:31,860
conceptual model at a high level what is

00:06:30,030 --> 00:06:33,510
the data that you're going to need once

00:06:31,860 --> 00:06:36,030
you do that you can actually start

00:06:33,510 --> 00:06:38,340
issuing queries so we have a graphical

00:06:36,030 --> 00:06:40,159
tab this is one that we built ourselves

00:06:38,340 --> 00:06:43,710
not to

00:06:40,159 --> 00:06:45,389
discredit their graphics um but yeah you

00:06:43,710 --> 00:06:50,550
can go in here and start issuing queries

00:06:45,389 --> 00:06:53,639
and let's see oh I think it's

00:06:50,550 --> 00:06:56,009
downloading the schema right now I don't

00:06:53,639 --> 00:06:59,599
have a dot dot dot it's common though I

00:06:56,009 --> 00:07:03,349
think our internet is slow or not oh

00:06:59,599 --> 00:07:06,779
where are you okay well it'll come back

00:07:03,349 --> 00:07:09,539
we'll keep going the other thing is and

00:07:06,779 --> 00:07:13,650
I'm should have cash this I think it's

00:07:09,539 --> 00:07:20,490
just being slow let's see sorry about

00:07:13,650 --> 00:07:24,689
that okay what's going on here um I

00:07:20,490 --> 00:07:31,169
think our internet is hurting here let's

00:07:24,689 --> 00:07:33,990
go back classic technical demo not going

00:07:31,169 --> 00:07:36,899
as planned let's see if we have another

00:07:33,990 --> 00:07:39,240
one on board that's one working there we

00:07:36,899 --> 00:07:40,949
go yeah okay okay so another thing you

00:07:39,240 --> 00:07:42,779
can see here so in addition to your

00:07:40,949 --> 00:07:45,029
schema designer where you define the

00:07:42,779 --> 00:07:46,949
structure your API you have a series of

00:07:45,029 --> 00:07:49,199
integrations these are things that we

00:07:46,949 --> 00:07:51,419
allow you to really seamlessly add these

00:07:49,199 --> 00:07:54,149
services to your API so this one is

00:07:51,419 --> 00:07:57,209
actually the data set for our give

00:07:54,149 --> 00:07:59,459
scaffold I oh so we like amazon has a

00:07:57,209 --> 00:08:00,749
smile amazoncom we have one that's give

00:07:59,459 --> 00:08:02,909
dot scaffold that I oh and it actually

00:08:00,749 --> 00:08:05,909
is a angular 2 application built with

00:08:02,909 --> 00:08:07,229
Apollo client that uses scaffold and our

00:08:05,909 --> 00:08:09,419
striped integration in our mail gun

00:08:07,229 --> 00:08:10,680
integration to create a live charity

00:08:09,419 --> 00:08:13,080
site so you can actually give money

00:08:10,680 --> 00:08:14,399
through that URL and we will get it in

00:08:13,080 --> 00:08:15,749
our stripe account and will donate it to

00:08:14,399 --> 00:08:17,639
the charity of your choice that you pick

00:08:15,749 --> 00:08:19,499
in the in the URL are in that on the

00:08:17,639 --> 00:08:22,770
website we also have things like Twitter

00:08:19,499 --> 00:08:25,649
integration iOS push stripe custom is

00:08:22,770 --> 00:08:28,289
actually a way to add web hooks with

00:08:25,649 --> 00:08:31,499
events to your API so one example we did

00:08:28,289 --> 00:08:34,079
is we built a Pokemon go clone using our

00:08:31,499 --> 00:08:36,300
location services and AWS lambda you can

00:08:34,079 --> 00:08:37,469
see a tutorial for that on our blog and

00:08:36,300 --> 00:08:39,510
see how you can kind of like really

00:08:37,469 --> 00:08:41,159
extend your own functionality around

00:08:39,510 --> 00:08:44,190
server-side code using something like

00:08:41,159 --> 00:08:46,980
AWS lambda or google functions algo leah

00:08:44,190 --> 00:08:48,600
is a really powerful search tool it's a

00:08:46,980 --> 00:08:49,769
service that does consumer search super

00:08:48,600 --> 00:08:51,839
well and it actually integrates really

00:08:49,769 --> 00:08:52,950
seamlessly with our data sets and we

00:08:51,839 --> 00:08:53,970
will automatically indexed

00:08:52,950 --> 00:08:55,800
data and presented to you in a

00:08:53,970 --> 00:08:57,240
searchable fashion which is really cool

00:08:55,800 --> 00:09:00,450
digits is a password that's

00:08:57,240 --> 00:09:02,760
authentication toolchain all 0 is social

00:09:00,450 --> 00:09:05,310
off and slack so these are all ways to

00:09:02,760 --> 00:09:07,170
basically extend your graph ql api with

00:09:05,310 --> 00:09:09,720
these really powerful service providers

00:09:07,170 --> 00:09:12,270
that already exist in addition we have

00:09:09,720 --> 00:09:13,290
an analytics portal and in a number of

00:09:12,270 --> 00:09:15,390
other things that you can kind of poke

00:09:13,290 --> 00:09:16,890
around one thing that I'll point to is

00:09:15,390 --> 00:09:19,500
our blog if we have a lot of tutorials

00:09:16,890 --> 00:09:21,600
on how to get started using not only

00:09:19,500 --> 00:09:24,330
just our service but just graph ql in

00:09:21,600 --> 00:09:27,000
addition to react and relay react native

00:09:24,330 --> 00:09:29,070
angular to apollo client all kinds of

00:09:27,000 --> 00:09:31,740
things that you can feel free to take a

00:09:29,070 --> 00:09:32,610
look at if you are interested so yeah

00:09:31,740 --> 00:09:34,230
we're going to go ahead i'm going to

00:09:32,610 --> 00:09:35,670
hand it over to Vince and he's going to

00:09:34,230 --> 00:09:38,510
show you some of the recent work we've

00:09:35,670 --> 00:09:41,640
been doing with real-time data cool good

00:09:38,510 --> 00:09:44,190
thanks Michael so I'm gonna go back here

00:09:41,640 --> 00:09:46,170
I'll just show you guys the schema for

00:09:44,190 --> 00:09:47,820
mesh for as we call it again it's

00:09:46,170 --> 00:09:49,530
basically just a messaging dashboarding

00:09:47,820 --> 00:09:50,880
app to demonstrate all the different

00:09:49,530 --> 00:09:52,230
things you could do with graphical

00:09:50,880 --> 00:09:54,870
subscriptions of you guys might have

00:09:52,230 --> 00:09:57,420
heard so for those of you have in graph

00:09:54,870 --> 00:09:58,830
gel subscriptions is like a pub sub

00:09:57,420 --> 00:10:00,660
system that allows you to like real-time

00:09:58,830 --> 00:10:03,360
functionality so you can do messaging

00:10:00,660 --> 00:10:04,860
dashboarding like real-time games things

00:10:03,360 --> 00:10:06,930
like that where you establish like a

00:10:04,860 --> 00:10:09,090
persistent tcp connection as opposed to

00:10:06,930 --> 00:10:11,490
normal like HTTP requests so its data

00:10:09,090 --> 00:10:13,620
coming from the server side you know not

00:10:11,490 --> 00:10:15,870
just from the client side so here's our

00:10:13,620 --> 00:10:18,150
schema for this app there's a user model

00:10:15,870 --> 00:10:19,740
and I broke down a couple of these like

00:10:18,150 --> 00:10:22,200
you know created that time so we can do

00:10:19,740 --> 00:10:25,470
aggregations on them you know a message

00:10:22,200 --> 00:10:27,390
board that contains your messages and so

00:10:25,470 --> 00:10:29,910
yeah it's a pretty simple schema here

00:10:27,390 --> 00:10:35,310
and each one of these is typed as you

00:10:29,910 --> 00:10:37,470
can see here in this fashion so what i

00:10:35,310 --> 00:10:40,260
will do is so here is our github its

00:10:37,470 --> 00:10:42,240
github com / scaffold I oh and the most

00:10:40,260 --> 00:10:45,480
recent one we published is the graphical

00:10:42,240 --> 00:10:47,040
subscription starter kit so you know I

00:10:45,480 --> 00:10:50,190
won't download this because I already

00:10:47,040 --> 00:10:53,370
have but yeah so basically scaffold

00:10:50,190 --> 00:10:55,200
graph he'll meet up so you know you all

00:10:53,370 --> 00:10:57,510
you have to do is just NPM install which

00:10:55,200 --> 00:11:02,660
I've already done and then start it so

00:10:57,510 --> 00:11:05,089
once this starts yeah

00:11:02,660 --> 00:11:17,980
you know this is just your quick and

00:11:05,089 --> 00:11:30,079
dirty way to get started oh I thought

00:11:17,980 --> 00:11:37,360
okay what's going on mmm oh yeah but let

00:11:30,079 --> 00:11:37,360
me see think

00:11:41,089 --> 00:11:52,189
okay that's our lesson for trying to do

00:11:43,910 --> 00:11:55,610
a technical demo cool yeah so I think

00:11:52,189 --> 00:11:58,100
yeah sure yeah so I have the yeah okay

00:11:55,610 --> 00:11:59,300
I'll shown that so the idea is like I

00:11:58,100 --> 00:12:01,970
was going to show you like actually

00:11:59,300 --> 00:12:05,240
posting messages and stuff but basically

00:12:01,970 --> 00:12:06,910
like this is recording of the app

00:12:05,240 --> 00:12:08,839
running so I kind of just set up two

00:12:06,910 --> 00:12:11,240
different applications running side by

00:12:08,839 --> 00:12:13,160
side of the same instance and then you

00:12:11,240 --> 00:12:16,100
know it's just kind of like the Olympics

00:12:13,160 --> 00:12:17,540
you can talk about it and so here you

00:12:16,100 --> 00:12:19,069
know you're sending a message and it

00:12:17,540 --> 00:12:21,259
shows up in both screens so they're both

00:12:19,069 --> 00:12:24,230
like when they log onto the page you're

00:12:21,259 --> 00:12:27,050
kind of subscribed to your scaffold API

00:12:24,230 --> 00:12:28,490
and as soon as you do that it'll start

00:12:27,050 --> 00:12:30,740
pushing changes down so what actually

00:12:28,490 --> 00:12:32,899
happens is you know there's queries of

00:12:30,740 --> 00:12:34,999
mutations and subscriptions and for

00:12:32,899 --> 00:12:38,089
subscriptions the way we implemented it

00:12:34,999 --> 00:12:40,730
is with socket i/o so that was just one

00:12:38,089 --> 00:12:42,259
that a lot of users saw you know we're

00:12:40,730 --> 00:12:45,230
familiar with so we decided to use that

00:12:42,259 --> 00:12:46,579
as our you know Transfer Protocol and so

00:12:45,230 --> 00:12:48,829
what happens is once you issue a

00:12:46,579 --> 00:12:50,839
graphical subscription it goes to our

00:12:48,829 --> 00:12:53,179
graph gel server we wrap that talking

00:12:50,839 --> 00:12:55,519
enclosure with a change feed that comes

00:12:53,179 --> 00:12:57,709
from our database so we use rethink

00:12:55,519 --> 00:12:58,939
database which allows us to do a lot of

00:12:57,709 --> 00:13:01,339
the real-time functionality with their

00:12:58,939 --> 00:13:04,040
change feed functions and so every

00:13:01,339 --> 00:13:06,290
single time a new change happens on the

00:13:04,040 --> 00:13:08,059
on the server on the database for

00:13:06,290 --> 00:13:10,100
instance on the user's you know one of

00:13:08,059 --> 00:13:12,259
these numbers will pop up and you know

00:13:10,100 --> 00:13:13,999
every time a new message comes up one of

00:13:12,259 --> 00:13:15,230
these little dots will you know start

00:13:13,999 --> 00:13:18,589
moving up and down as you might have

00:13:15,230 --> 00:13:21,889
seen in this jiff earlier so just to

00:13:18,589 --> 00:13:24,589
show you a little bit about what the

00:13:21,889 --> 00:13:28,240
code looks like so this is basically a

00:13:24,589 --> 00:13:31,819
subscription call so you know it's

00:13:28,240 --> 00:13:36,829
basically using Sakai oh that's just

00:13:31,819 --> 00:13:40,429
bigger oh sorry that better more okay

00:13:36,829 --> 00:13:42,620
cool so you know as soon as you log on

00:13:40,429 --> 00:13:44,839
or as soon as you like open the app you

00:13:42,620 --> 00:13:47,360
may establish a socket i/o connection

00:13:44,839 --> 00:13:48,679
with your API key that we issue and then

00:13:47,360 --> 00:13:51,199
you know your token for authentication

00:13:48,679 --> 00:13:51,830
and then you know as soon as that

00:13:51,199 --> 00:13:53,570
happens it

00:13:51,830 --> 00:13:56,060
necks and it subscribes to these users

00:13:53,570 --> 00:13:57,620
and the messages so the way they're a

00:13:56,060 --> 00:13:59,270
little different so you know every

00:13:57,620 --> 00:14:01,070
single type the way we implemented it

00:13:59,270 --> 00:14:02,240
was every single type will have a

00:14:01,070 --> 00:14:04,010
subscription so you can subscribe to

00:14:02,240 --> 00:14:06,500
users or messages but what you can also

00:14:04,010 --> 00:14:09,530
do is you can filter on transaction

00:14:06,500 --> 00:14:11,630
types and also subfields so you know you

00:14:09,530 --> 00:14:14,900
can listen on a specific chat room for

00:14:11,630 --> 00:14:17,060
instance or you can subscribe to just

00:14:14,900 --> 00:14:19,340
the creates or just the deletes so you

00:14:17,060 --> 00:14:21,560
know depending on your use case you know

00:14:19,340 --> 00:14:23,000
you can you can kind of tweak the

00:14:21,560 --> 00:14:25,460
filters and transaction types based on

00:14:23,000 --> 00:14:26,870
that so that's kind of like RV one of

00:14:25,460 --> 00:14:29,210
our implementation of subscriptions

00:14:26,870 --> 00:14:30,770
we've been talking to Apollo about like

00:14:29,210 --> 00:14:33,200
trying to implement other different

00:14:30,770 --> 00:14:35,180
protocols for this you know for crafty

00:14:33,200 --> 00:14:36,410
all subscriptions so or you know if you

00:14:35,180 --> 00:14:38,960
guys have any ideas we're happy to hear

00:14:36,410 --> 00:14:42,770
them out as well so yeah that's kind of

00:14:38,960 --> 00:14:45,560
our short little demo of graph ql and

00:14:42,770 --> 00:14:47,510
also like you know back to the starter

00:14:45,560 --> 00:14:48,980
kit page this is our github so we have

00:14:47,510 --> 00:14:51,350
not only just graphed y el subscriptions

00:14:48,980 --> 00:14:53,300
but also other little like playgrounds

00:14:51,350 --> 00:14:54,560
and test kits that we have that you can

00:14:53,300 --> 00:14:56,810
just get started with and if you need

00:14:54,560 --> 00:14:59,110
anything else you know feel free to also

00:14:56,810 --> 00:15:02,780
just message us we have a slack channel

00:14:59,110 --> 00:15:07,000
to you know provide suggestions so back

00:15:02,780 --> 00:15:14,770
to the presentation what was it again I

00:15:07,000 --> 00:15:14,770
think I'm gonna close it yeah cool

00:15:17,130 --> 00:15:22,200
yeah so yeah we have our scaffold I'll

00:15:20,250 --> 00:15:24,780
blog for you to get started resources

00:15:22,200 --> 00:15:26,550
get started as well as you know starter

00:15:24,780 --> 00:15:27,780
kits help you get started I know a lot

00:15:26,550 --> 00:15:29,100
of you guys are building react apps

00:15:27,780 --> 00:15:30,720
we're actually currently in the process

00:15:29,100 --> 00:15:33,030
of rewriting or front end in react

00:15:30,720 --> 00:15:34,890
because it works really well with you

00:15:33,030 --> 00:15:37,950
know with graph ql and apollo thanks to

00:15:34,890 --> 00:15:39,180
you guys so yeah this is us if you want

00:15:37,950 --> 00:15:42,500
to learn more feel free to check us out

00:15:39,180 --> 00:15:54,030
starter kits slack or ask questions now

00:15:42,500 --> 00:16:02,310
thanks guys what do we do have any

00:15:54,030 --> 00:16:05,220
questions good I'm curious about the

00:16:02,310 --> 00:16:07,380
subscriptions thing is you know do you

00:16:05,220 --> 00:16:08,910
guys do any deduplication of the

00:16:07,380 --> 00:16:10,440
subscriptions across different users

00:16:08,910 --> 00:16:13,050
right like if different users subscribe

00:16:10,440 --> 00:16:14,850
to the same stream of messages does that

00:16:13,050 --> 00:16:15,930
result in like two different queries on

00:16:14,850 --> 00:16:17,640
the database or is it somehow

00:16:15,930 --> 00:16:19,260
multiplexed into one I'm just curious

00:16:17,640 --> 00:16:21,900
about the implementation currently

00:16:19,260 --> 00:16:23,580
there's a socket / subscription so it

00:16:21,900 --> 00:16:25,530
doesn't currently do any deduplicate

00:16:23,580 --> 00:16:28,560
duplication but we're actually thinking

00:16:25,530 --> 00:16:30,960
of a lot of ways to enrich the

00:16:28,560 --> 00:16:32,670
subscription system that we've had kind

00:16:30,960 --> 00:16:35,270
of like a v2 as well so that would be

00:16:32,670 --> 00:16:35,270
part of that

00:16:43,320 --> 00:16:46,320
hmm

00:16:47,840 --> 00:16:53,480
not a technical question but I'm really

00:16:50,490 --> 00:16:56,730
curious how did you explain to investors

00:16:53,480 --> 00:16:59,610
graph cool and what's changing I'm not

00:16:56,730 --> 00:17:02,250
irias so i guess like we kind of just

00:16:59,610 --> 00:17:03,480
start out by saying we are one API for

00:17:02,250 --> 00:17:04,709
all your cloud services we don't start

00:17:03,480 --> 00:17:06,780
talking about graph ql unless they're

00:17:04,709 --> 00:17:09,750
super technical you know because the

00:17:06,780 --> 00:17:11,339
benefit of graph ql is you know not not

00:17:09,750 --> 00:17:13,260
the brand or the name itself but like

00:17:11,339 --> 00:17:14,190
what it enables us to do which is to be

00:17:13,260 --> 00:17:16,199
able to integrate with all these

00:17:14,190 --> 00:17:17,970
different cloud services all your dated

00:17:16,199 --> 00:17:19,589
across the web so we start out by saying

00:17:17,970 --> 00:17:21,930
that and that's the value prop and then

00:17:19,589 --> 00:17:23,940
from there we talk about you know their

00:17:21,930 --> 00:17:26,370
interest is peaked and then they ask how

00:17:23,940 --> 00:17:28,740
it's done and you know then comes the

00:17:26,370 --> 00:17:30,270
idea of graph ql and you know how that

00:17:28,740 --> 00:17:31,770
enables us to provide all these

00:17:30,270 --> 00:17:33,570
different services that you should not

00:17:31,770 --> 00:17:35,250
be possible about a year ago yet another

00:17:33,570 --> 00:17:37,950
piece of that is it's actually becoming

00:17:35,250 --> 00:17:39,690
easier it's something that when we first

00:17:37,950 --> 00:17:43,530
started this project we had to do a lot

00:17:39,690 --> 00:17:45,360
of fighting for you know basically do a

00:17:43,530 --> 00:17:46,920
lot of Education we had to to help

00:17:45,360 --> 00:17:48,810
people understand what this technology

00:17:46,920 --> 00:17:50,670
was and I think something that's really

00:17:48,810 --> 00:17:52,200
cool is that the community of graph ql

00:17:50,670 --> 00:17:54,540
is really growing and people are really

00:17:52,200 --> 00:17:55,830
getting their they're coming across

00:17:54,540 --> 00:17:58,440
graph to all themselves and then they

00:17:55,830 --> 00:17:59,910
come to us with questions instead of us

00:17:58,440 --> 00:18:01,470
being like here's graph ql you should

00:17:59,910 --> 00:18:02,610
use it it's more of the opposite

00:18:01,470 --> 00:18:03,630
direction so it's that's something

00:18:02,610 --> 00:18:05,340
that's nice it's a community is

00:18:03,630 --> 00:18:14,440
definitely growing and people are coming

00:18:05,340 --> 00:18:16,820
to know it a lot more cool anything else

00:18:14,440 --> 00:18:18,890
no if there are no more questions then

00:18:16,820 --> 00:18:20,600
actually I have a question so you

00:18:18,890 --> 00:18:23,690
quickly mention rethink to be was that

00:18:20,600 --> 00:18:25,640
just for the subscriptions or is that

00:18:23,690 --> 00:18:29,179
actually the database that powers your

00:18:25,640 --> 00:18:31,909
whole like service so we're actually in

00:18:29,179 --> 00:18:34,130
the middle of migration we currently run

00:18:31,909 --> 00:18:36,559
most of our services on rethink we're

00:18:34,130 --> 00:18:38,990
moving it to have rethink will be our

00:18:36,559 --> 00:18:40,850
event store essentially and then we're

00:18:38,990 --> 00:18:42,769
moving on to we're going to have sequel

00:18:40,850 --> 00:18:45,740
in a couple other stores as well that

00:18:42,769 --> 00:18:48,260
that you will be able to use so so

00:18:45,740 --> 00:18:51,380
people actually choose which database is

00:18:48,260 --> 00:18:53,720
backing their I guess graph cool model

00:18:51,380 --> 00:18:58,940
in the case of the goal yeah eventually

00:18:53,720 --> 00:19:02,320
yeah right let's thank Michael and Vince

00:18:58,940 --> 00:19:02,320

YouTube URL: https://www.youtube.com/watch?v=U2NKoStGBvE


