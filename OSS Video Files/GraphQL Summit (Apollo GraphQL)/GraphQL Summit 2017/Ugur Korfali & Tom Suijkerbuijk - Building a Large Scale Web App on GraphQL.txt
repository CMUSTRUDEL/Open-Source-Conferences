Title: Ugur Korfali & Tom Suijkerbuijk - Building a Large Scale Web App on GraphQL
Publication date: 2017-11-08
Playlist: GraphQL Summit 2017
Description: 
	Ugur Korfali & Tom Suijkerbuijk, Frontend Developers at KLM, gave this talk at GraphQL Summit 2017. Learn more: summit.graphql.com

In this talk we will share insights from the leading edge in building a large scale app with Angular / GraphQL for Air France-KLM. Air France-KLM is one of the largest airline holdings in the world with close to 100 million passengers each year.
Captions: 
	00:00:03,370 --> 00:00:08,780
okay cool welcome to your talk KLM's

00:00:06,439 --> 00:00:11,330
talk about how we introduce graph QL in

00:00:08,780 --> 00:00:12,890
our actually our new application that

00:00:11,330 --> 00:00:14,600
we're building right now the application

00:00:12,890 --> 00:00:16,939
that we're building is rolled out in

00:00:14,600 --> 00:00:18,769
several markets already but as we add

00:00:16,939 --> 00:00:20,210
more functionalities to our application

00:00:18,769 --> 00:00:22,430
we are planning to roll it out in more

00:00:20,210 --> 00:00:24,380
markets we will dive a bit deeper into

00:00:22,430 --> 00:00:26,690
that later what we want to tell you guys

00:00:24,380 --> 00:00:28,369
today is like not we're not like trying

00:00:26,690 --> 00:00:30,470
to be graphical experts and telling you

00:00:28,369 --> 00:00:32,359
how to use graph QL we're actually like

00:00:30,470 --> 00:00:34,760
telling you how we use it like where we

00:00:32,359 --> 00:00:36,499
started about Inglis last summer was

00:00:34,760 --> 00:00:38,839
July of 2016 when we started this

00:00:36,499 --> 00:00:40,819
project where we actually started and

00:00:38,839 --> 00:00:42,319
where we are right now and like the

00:00:40,819 --> 00:00:44,899
mistakes we made actually it's also a

00:00:42,319 --> 00:00:46,159
big important part we want to prevent

00:00:44,899 --> 00:00:48,769
you guys from making the same mistakes

00:00:46,159 --> 00:00:50,329
that we did so before we continue we'd

00:00:48,769 --> 00:00:52,460
like to introduce ourselves

00:00:50,329 --> 00:00:54,829
my name is Tom Sacco buck I'm a

00:00:52,460 --> 00:00:57,620
front-end engineer at KLM for about

00:00:54,829 --> 00:00:59,239
almost two years now this is my Twitter

00:00:57,620 --> 00:01:01,069
account I'm not really active on Twitter

00:00:59,239 --> 00:01:05,030
but you can always DME and I'll probably

00:01:01,069 --> 00:01:07,040
try to apply and my name is Luke or

00:01:05,030 --> 00:01:10,310
fella I've been I've been working for

00:01:07,040 --> 00:01:12,920
KLM for almost one-and-a-half year as a

00:01:10,310 --> 00:01:16,460
front-end engineer good to see you here

00:01:12,920 --> 00:01:18,890
cool so the next slide is actually about

00:01:16,460 --> 00:01:20,990
introducing air france-klm I'll dive a

00:01:18,890 --> 00:01:24,070
bit deeper into why it's Air France and

00:01:20,990 --> 00:01:26,240
KLM and not just air france or kalyan

00:01:24,070 --> 00:01:28,370
but actually I want to see some hands

00:01:26,240 --> 00:01:31,160
like we've heard of KLM before they saw

00:01:28,370 --> 00:01:33,020
the lineup of this talk whoo oh wow

00:01:31,160 --> 00:01:35,780
that's actually yeah who's ever like

00:01:33,020 --> 00:01:40,760
flown KLM or Efron's ever before you

00:01:35,780 --> 00:01:41,840
liked it can't say no right okay for the

00:01:40,760 --> 00:01:43,910
ones of you that didn't raise their

00:01:41,840 --> 00:01:45,770
hands or don't really know is I got some

00:01:43,910 --> 00:01:48,409
numbers like some facts and figures to

00:01:45,770 --> 00:01:51,020
kind of show you guys how big we are or

00:01:48,409 --> 00:01:52,040
how small whatever you it's your your

00:01:51,020 --> 00:01:54,110
opinion

00:01:52,040 --> 00:01:56,690
we almost fly 100 million passengers a

00:01:54,110 --> 00:01:59,479
year about 35% of these passengers

00:01:56,690 --> 00:02:02,990
actually use KLM or Air France comm to

00:01:59,479 --> 00:02:05,450
to book their ticket and to to pay for

00:02:02,990 --> 00:02:08,360
it I guess so we have 36,000 payments on

00:02:05,450 --> 00:02:10,670
a daily basis about 110,000 passengers

00:02:08,360 --> 00:02:13,010
check in using our website on a daily

00:02:10,670 --> 00:02:15,709
basis and about half a million customers

00:02:13,010 --> 00:02:17,030
they look for a flight and why is this

00:02:15,709 --> 00:02:19,520
number higher than actually

00:02:17,030 --> 00:02:20,930
that fly is it's probably the same for

00:02:19,520 --> 00:02:23,209
you guys like when I'm going on holiday

00:02:20,930 --> 00:02:24,709
I usually look for flights like for

00:02:23,209 --> 00:02:26,060
weeks already and it tried to find the

00:02:24,709 --> 00:02:28,160
cheapest fare and and looking at a

00:02:26,060 --> 00:02:29,480
flight and it didn't decide it yeah and

00:02:28,160 --> 00:02:32,120
then we actually want to book it you end

00:02:29,480 --> 00:02:35,540
up with a more expensive fare anyways so

00:02:32,120 --> 00:02:37,970
that's usually it goes so we both work

00:02:35,540 --> 00:02:39,709
at KLM as we mentioned but more

00:02:37,970 --> 00:02:42,739
specifically we're working on the Bluett

00:02:39,709 --> 00:02:44,870
project the blue but blue web project

00:02:42,739 --> 00:02:48,160
will actually replace both KLM and our

00:02:44,870 --> 00:02:50,750
funds that come in the main near future

00:02:48,160 --> 00:02:52,610
we're rolled out now in some markets I

00:02:50,750 --> 00:02:55,820
think like Arabic Emirates greece turkey

00:02:52,610 --> 00:02:57,320
Ukraine 2d Arabia right now and next

00:02:55,820 --> 00:03:00,680
week we'll also go to Indonesia and

00:02:57,320 --> 00:03:02,690
Serbia right now as you can see here

00:03:00,680 --> 00:03:06,019
actually this is our search application

00:03:02,690 --> 00:03:07,850
as it's gonna be in a new website you

00:03:06,019 --> 00:03:10,459
can see both Air France and KLM why is

00:03:07,850 --> 00:03:12,860
that everyone's the KLM are two separate

00:03:10,459 --> 00:03:13,370
Airlines but they merged back in 2004 I

00:03:12,860 --> 00:03:15,920
think

00:03:13,370 --> 00:03:18,500
well technically Air France kind of

00:03:15,920 --> 00:03:21,530
acquired KLM but that's details I guess

00:03:18,500 --> 00:03:23,239
right yeah so what we're building right

00:03:21,530 --> 00:03:25,370
now in blue app is one angular

00:03:23,239 --> 00:03:28,250
application and when I say angular I'm

00:03:25,370 --> 00:03:30,590
not saying angularjs I'm saying angular

00:03:28,250 --> 00:03:33,500
latest so right now we're like on four

00:03:30,590 --> 00:03:35,510
three two 4.3 I guess yeah is all the

00:03:33,500 --> 00:03:38,060
way this week or next week till launch

00:03:35,510 --> 00:03:40,340
angular 5 so we'll migrate to that one

00:03:38,060 --> 00:03:43,010
as soon as possible

00:03:40,340 --> 00:03:44,480
so this is one angular application but

00:03:43,010 --> 00:03:46,489
you can see the resemblance between the

00:03:44,480 --> 00:03:49,750
two but one is like dark blue and Air

00:03:46,489 --> 00:03:51,980
France ish and one is light blue and KLM

00:03:49,750 --> 00:03:54,380
but other than that it's just like the

00:03:51,980 --> 00:03:56,690
exact same application so what they did

00:03:54,380 --> 00:03:59,720
after they merged in 2004 like as you

00:03:56,690 --> 00:04:01,940
can imagine like our airline exists 98

00:03:59,720 --> 00:04:03,950
years now KLM and the backends are

00:04:01,940 --> 00:04:05,900
really old they're not really fun to

00:04:03,950 --> 00:04:07,760
work with so what they've been working

00:04:05,900 --> 00:04:11,109
on is they've been converging the API is

00:04:07,760 --> 00:04:14,090
like restful api is on top of this all

00:04:11,109 --> 00:04:16,310
airline products I guess so that's what

00:04:14,090 --> 00:04:19,070
we're consuming now is blue app but

00:04:16,310 --> 00:04:21,169
you're like okay we maybe like we wanted

00:04:19,070 --> 00:04:22,640
new stuff on the front end as well so we

00:04:21,169 --> 00:04:24,430
will explain what we have on the front

00:04:22,640 --> 00:04:26,599
end actually and how we work with this

00:04:24,430 --> 00:04:29,750
okay let's have a look how we are

00:04:26,599 --> 00:04:30,590
building blue web project on client side

00:04:29,750 --> 00:04:32,270
we are building

00:04:30,590 --> 00:04:36,950
our application with angular and angular

00:04:32,270 --> 00:04:39,590
material using typescript where a stone

00:04:36,950 --> 00:04:43,490
said we are using angular the newest not

00:04:39,590 --> 00:04:46,430
the angularjs one our styles are written

00:04:43,490 --> 00:04:49,820
in sass and we are using IT CSS as our

00:04:46,430 --> 00:04:53,120
CSS architecture Apollo is our graphical

00:04:49,820 --> 00:04:57,970
client and we are bundling all of them

00:04:53,120 --> 00:05:00,440
together using angular CLI on

00:04:57,970 --> 00:05:02,780
server-side we are using node with

00:05:00,440 --> 00:05:05,420
typescript and our graphical servers and

00:05:02,780 --> 00:05:08,390
application are served on Express and

00:05:05,420 --> 00:05:12,950
are deployed on different separate

00:05:08,390 --> 00:05:15,260
Booker containers and on our server side

00:05:12,950 --> 00:05:18,650
we are also leveraging graphical tools

00:05:15,260 --> 00:05:21,560
greatly as a helper we are using

00:05:18,650 --> 00:05:24,980
graphical plug-in on our IDs and if you

00:05:21,560 --> 00:05:27,380
are people using webstorm or vs code or

00:05:24,980 --> 00:05:30,950
I don't know if they are having a plugin

00:05:27,380 --> 00:05:33,590
for item I strongly recommend it it int

00:05:30,950 --> 00:05:35,720
respects your schema it nerves your type

00:05:33,590 --> 00:05:38,600
so when you are building your queries on

00:05:35,720 --> 00:05:42,830
your IDE it helps you with Auto

00:05:38,600 --> 00:05:45,050
completing your types one last thing on

00:05:42,830 --> 00:05:48,560
to link we are also planning on using

00:05:45,050 --> 00:05:51,320
Apollo optics or engine when we are

00:05:48,560 --> 00:05:54,710
rolled up for bigger markets as to

00:05:51,320 --> 00:05:57,530
explain we are currently live on smaller

00:05:54,710 --> 00:06:00,230
markets and the data coming from Apollo

00:05:57,530 --> 00:06:03,790
optics will be much more precious when

00:06:00,230 --> 00:06:08,290
we are out for a larger customer group

00:06:03,790 --> 00:06:12,940
ok this is our architectural schema

00:06:08,290 --> 00:06:16,700
let's have a look a bit I think it's

00:06:12,940 --> 00:06:18,650
pretty clear and self-explanatory so I'm

00:06:16,700 --> 00:06:21,050
trusting on you people to remember this

00:06:18,650 --> 00:06:24,400
thing on my upcoming slides because I'm

00:06:21,050 --> 00:06:28,100
gonna use this one so please have a look

00:06:24,400 --> 00:06:32,570
ok no that won't be fair okay let me

00:06:28,100 --> 00:06:35,900
just split it down and visualize it for

00:06:32,570 --> 00:06:38,440
you currently we have 4 main business

00:06:35,900 --> 00:06:43,650
functionality is implemented these are

00:06:38,440 --> 00:06:48,880
search taken

00:06:43,650 --> 00:06:51,490
check out this is our team yay em

00:06:48,880 --> 00:06:54,010
profile okay

00:06:51,490 --> 00:06:56,470
each of these are developed by a

00:06:54,010 --> 00:06:58,450
separate group of people seperate teams

00:06:56,470 --> 00:07:01,030
and each of these has their own

00:06:58,450 --> 00:07:04,090
repository and their own release cycles

00:07:01,030 --> 00:07:08,170
we are calling these unique business

00:07:04,090 --> 00:07:11,080
components ubc for short and UBC is a

00:07:08,170 --> 00:07:13,660
module which has a set of flows on a

00:07:11,080 --> 00:07:16,810
very specific context for example our

00:07:13,660 --> 00:07:18,970
check out UBC is responsible for

00:07:16,810 --> 00:07:21,940
collecting your personal information

00:07:18,970 --> 00:07:23,710
contact details let you select your

00:07:21,940 --> 00:07:29,070
payment method and then finalize your

00:07:23,710 --> 00:07:32,230
purchase our UBC's are consisting of

00:07:29,070 --> 00:07:35,560
client and server parts the client part

00:07:32,230 --> 00:07:37,810
is not that very complicated as I

00:07:35,560 --> 00:07:40,660
already told you we are using angular

00:07:37,810 --> 00:07:42,520
angular material and Apollo stack we are

00:07:40,660 --> 00:07:44,700
trying to stay close to angular guides

00:07:42,520 --> 00:07:46,840
and best practices as much as possible

00:07:44,700 --> 00:07:49,510
this helps us to maintain the

00:07:46,840 --> 00:07:52,000
consistency between our teams and also

00:07:49,510 --> 00:07:55,480
its moutains the framework upgrade

00:07:52,000 --> 00:07:58,000
process when it is necessary on server

00:07:55,480 --> 00:08:01,060
part we are using typescript graphical

00:07:58,000 --> 00:08:04,930
Xpress graphical server Apollo server

00:08:01,060 --> 00:08:07,180
and graphical tools however we have a

00:08:04,930 --> 00:08:10,360
different setup than actually graphical

00:08:07,180 --> 00:08:13,930
recommences we don't have a single big

00:08:10,360 --> 00:08:17,650
schema we have a schema for each of our

00:08:13,930 --> 00:08:20,320
UBC's because this is coming from our

00:08:17,650 --> 00:08:23,050
architecture it's a requirement and they

00:08:20,320 --> 00:08:25,690
want us to separate the deploy our

00:08:23,050 --> 00:08:29,590
graphical servers on different on

00:08:25,690 --> 00:08:33,700
separate token docker containers the

00:08:29,590 --> 00:08:35,650
reason behind this one is by this way

00:08:33,700 --> 00:08:36,430
we're going to scale our graphical

00:08:35,650 --> 00:08:40,500
servers

00:08:36,430 --> 00:08:44,200
according to their expected load because

00:08:40,500 --> 00:08:47,050
our search graphical server expects much

00:08:44,200 --> 00:08:49,420
more load than our checkout server

00:08:47,050 --> 00:08:52,330
because everyone is searching for a

00:08:49,420 --> 00:08:55,750
flight but none of them not not many of

00:08:52,330 --> 00:08:59,300
them returning them to take

00:08:55,750 --> 00:09:01,880
so yeah handling load is really really

00:08:59,300 --> 00:09:03,680
important for us let's say if our

00:09:01,880 --> 00:09:06,890
checking system goes down for more than

00:09:03,680 --> 00:09:09,980
a couple of hours then security forces

00:09:06,890 --> 00:09:12,680
really should act on it and close the

00:09:09,980 --> 00:09:15,110
roads to the airport to prevent any kale

00:09:12,680 --> 00:09:22,610
so we really wouldn't want to make such

00:09:15,110 --> 00:09:26,899
a mess there okay yeah this site should

00:09:22,610 --> 00:09:30,050
be come before ok I explained to you BCS

00:09:26,899 --> 00:09:33,500
what is a UBC what part it has and how

00:09:30,050 --> 00:09:35,990
we are using this UPC UBC's we have a

00:09:33,500 --> 00:09:38,450
shell application and this shell

00:09:35,990 --> 00:09:40,459
application has shared functionalities

00:09:38,450 --> 00:09:43,700
shared services and shared

00:09:40,459 --> 00:09:46,390
configurations it is also responsible to

00:09:43,700 --> 00:09:51,910
laser load the client part of this UBC's

00:09:46,390 --> 00:09:54,500
when it is when it is requested it also

00:09:51,910 --> 00:09:56,270
it also maintains the dependencies

00:09:54,500 --> 00:10:01,339
across the UBC is the common ones

00:09:56,270 --> 00:10:03,920
because if any UBC if requires a certain

00:10:01,339 --> 00:10:07,310
dependency it should handle it on on its

00:10:03,920 --> 00:10:12,350
own to prevent our main application to

00:10:07,310 --> 00:10:15,650
get bigger and as I mentioned we have

00:10:12,350 --> 00:10:18,040
this graphical servers which are in

00:10:15,650 --> 00:10:21,560
communication with our graphical api's

00:10:18,040 --> 00:10:24,709
first of all we thought that we can

00:10:21,560 --> 00:10:26,750
stitch this graphical servers the

00:10:24,709 --> 00:10:29,570
separate graphical service under a

00:10:26,750 --> 00:10:33,130
middleware and we can reach it from

00:10:29,570 --> 00:10:36,890
there as a single big schema as

00:10:33,130 --> 00:10:39,589
graphical already recommends but however

00:10:36,890 --> 00:10:42,320
the this marked as a single point of

00:10:39,589 --> 00:10:46,490
failure by our architects so we needed

00:10:42,320 --> 00:10:49,220
to remove the implementation the second

00:10:46,490 --> 00:10:51,200
question was what happens if one

00:10:49,220 --> 00:10:54,920
graphical server needs to communicate

00:10:51,200 --> 00:10:58,279
with multiple api's should we duplicate

00:10:54,920 --> 00:11:01,970
our types and resolvers in each of our

00:10:58,279 --> 00:11:04,670
UBC servers no we came up with the idea

00:11:01,970 --> 00:11:07,310
of separation of the types so we plucked

00:11:04,670 --> 00:11:10,790
our types out of our graphical servers

00:11:07,310 --> 00:11:13,810
put them into a separate repository we

00:11:10,790 --> 00:11:17,570
categorize them we named them after our

00:11:13,810 --> 00:11:20,750
conversed api's and we served them as a

00:11:17,570 --> 00:11:24,410
NPM packages so each of you BC you see

00:11:20,750 --> 00:11:26,300
there can use these NPM packages as

00:11:24,410 --> 00:11:33,650
building blocks to form their own

00:11:26,300 --> 00:11:35,779
schemas yeah basically this is how we

00:11:33,650 --> 00:11:39,290
proceed with our architectural

00:11:35,779 --> 00:11:43,880
guidelines and some of you people might

00:11:39,290 --> 00:11:47,000
realize that our application via shell

00:11:43,880 --> 00:11:50,450
application we named this aviato aviato

00:11:47,000 --> 00:11:52,790
shell the story behind this one actually

00:11:50,450 --> 00:11:54,680
our architect came to us and said ok

00:11:52,790 --> 00:11:57,260
what will be our internal project name

00:11:54,680 --> 00:11:59,810
and we were so hooked up with the

00:11:57,260 --> 00:12:03,020
Silicon Valley back then and we jokingly

00:11:59,810 --> 00:12:07,870
said what about aviato and then he

00:12:03,020 --> 00:12:09,230
thought a second he said ok oh yeah -

00:12:07,870 --> 00:12:15,160
makes sense

00:12:09,230 --> 00:12:21,740
it resembles the name aviation right yes

00:12:15,160 --> 00:12:24,880
he had no clue and here we are and yes

00:12:21,740 --> 00:12:30,950
actually there is now another aviato

00:12:24,880 --> 00:12:32,690
which is us ok cool so we're just

00:12:30,950 --> 00:12:34,460
explained like what we got from our

00:12:32,690 --> 00:12:37,010
architects but we had to work with kind

00:12:34,460 --> 00:12:41,270
of but when we started last year July

00:12:37,010 --> 00:12:43,280
that was not where we started kind of so

00:12:41,270 --> 00:12:44,780
angular was a given actually in Baghdad

00:12:43,280 --> 00:12:47,570
and was still in beta or in release

00:12:44,780 --> 00:12:49,040
candidates I think and it was kind of a

00:12:47,570 --> 00:12:50,510
pain to work with in the beginning and

00:12:49,040 --> 00:12:52,760
it was like it was new for all of us

00:12:50,510 --> 00:12:54,410
because it was a new framework so

00:12:52,760 --> 00:12:56,089
actually business gave us some kind of

00:12:54,410 --> 00:12:58,930
time to like play with it like to try it

00:12:56,089 --> 00:13:01,370
to make work and we decided to actually

00:12:58,930 --> 00:13:03,230
make something useful we decided to go

00:13:01,370 --> 00:13:05,779
like to create a small proof proof of

00:13:03,230 --> 00:13:07,130
concept with it so we built basic

00:13:05,779 --> 00:13:09,110
check-in functionalities so not

00:13:07,130 --> 00:13:11,450
selecting a seed not adding any bags

00:13:09,110 --> 00:13:13,370
just give your PNR your booking code and

00:13:11,450 --> 00:13:14,480
your last name hit check-in and we'll

00:13:13,370 --> 00:13:17,150
send you an email with your boarding

00:13:14,480 --> 00:13:19,339
pass on the server side back then we

00:13:17,150 --> 00:13:21,350
still just had like a simple no GS

00:13:19,339 --> 00:13:23,240
middleware

00:13:21,350 --> 00:13:25,070
but we did some kind of mappings and

00:13:23,240 --> 00:13:27,140
like we just mapped the data that we

00:13:25,070 --> 00:13:29,180
want it so it was just like a nice start

00:13:27,140 --> 00:13:31,370
but like after a while we were like okay

00:13:29,180 --> 00:13:35,030
we need some kind of application state

00:13:31,370 --> 00:13:36,770
so Redux was a good it was a good

00:13:35,030 --> 00:13:39,260
example because it's a-you chooser base

00:13:36,770 --> 00:13:40,880
and a lot of people use it but I think

00:13:39,260 --> 00:13:43,220
it was last year October we were at

00:13:40,880 --> 00:13:44,420
angular connect in London and actually

00:13:43,220 --> 00:13:46,910
brought warm up from the angular core

00:13:44,420 --> 00:13:48,350
team he like gave a talk about anger X

00:13:46,910 --> 00:13:51,080
which is basically like Redux with

00:13:48,350 --> 00:13:52,430
ArcGIS so it looked really good and we

00:13:51,080 --> 00:13:56,050
were like okay we should roll with this

00:13:52,430 --> 00:13:58,760
and we added it to our application

00:13:56,050 --> 00:14:00,350
we're just sure so then actually this

00:13:58,760 --> 00:14:01,820
guy next to me or he came up to it it's

00:14:00,350 --> 00:14:03,320
like yeah like we were still like in

00:14:01,820 --> 00:14:05,750
this proof of concept phase a little bit

00:14:03,320 --> 00:14:07,340
and he was like okay I saw this new cool

00:14:05,750 --> 00:14:08,990
teen graph girl like it sounds really

00:14:07,340 --> 00:14:11,570
nice we should like add it to a proof of

00:14:08,990 --> 00:14:13,310
concept but see if it works so we're all

00:14:11,570 --> 00:14:15,020
kind of like I mean I was kind of

00:14:13,310 --> 00:14:16,820
excited but it's like okay like it's the

00:14:15,020 --> 00:14:18,620
Facebook thing right I heard about it

00:14:16,820 --> 00:14:20,330
but it didn't really know what it was so

00:14:18,620 --> 00:14:22,100
I looked into it a little bit but some

00:14:20,330 --> 00:14:25,400
other people were like a little bit more

00:14:22,100 --> 00:14:28,130
like like why is this any good like

00:14:25,400 --> 00:14:30,620
should we use it so or came like with

00:14:28,130 --> 00:14:32,140
the standard you know like we all saw DS

00:14:30,620 --> 00:14:34,280
I don't think I need to go over them

00:14:32,140 --> 00:14:36,500
especially not in this crowd you all

00:14:34,280 --> 00:14:38,240
know why graph girl is nice but a lot of

00:14:36,500 --> 00:14:39,770
people were also like R&B you'd like we

00:14:38,240 --> 00:14:41,090
just started with angular like aren't we

00:14:39,770 --> 00:14:44,120
already holding too many things in our

00:14:41,090 --> 00:14:45,650
stack and our architect was just happy

00:14:44,120 --> 00:14:49,040
this guy actually looks like or if you'd

00:14:45,650 --> 00:14:51,050
look very good without glasses but like

00:14:49,040 --> 00:14:53,930
and we were just like barely managing I

00:14:51,050 --> 00:14:55,580
was but we tried it in a proof of

00:14:53,930 --> 00:15:00,290
concept and it actually worked we made

00:14:55,580 --> 00:15:02,060
it working so awesome like let's go so

00:15:00,290 --> 00:15:04,460
we had it and we had graph goo all on

00:15:02,060 --> 00:15:06,320
our server and but we still like the

00:15:04,460 --> 00:15:09,920
vanilla J s type constructor is kind of

00:15:06,320 --> 00:15:12,470
so they look like this they might look

00:15:09,920 --> 00:15:14,810
familiar to some of you guys but after a

00:15:12,470 --> 00:15:16,520
while like some of our other developers

00:15:14,810 --> 00:15:18,320
started to complain like okay there's a

00:15:16,520 --> 00:15:19,730
lot of copy-paste saying like there's a

00:15:18,320 --> 00:15:22,490
lot of things in here that we shouldn't

00:15:19,730 --> 00:15:24,260
like put in there every time so actually

00:15:22,490 --> 00:15:25,910
we went back to or like isn't there like

00:15:24,260 --> 00:15:27,710
some better thing that we can add or

00:15:25,910 --> 00:15:28,820
like can we do this better because

00:15:27,710 --> 00:15:30,280
people started to complain and that's

00:15:28,820 --> 00:15:32,190
not what you want

00:15:30,280 --> 00:15:34,290
yeah and

00:15:32,190 --> 00:15:38,540
there Apolo entered the narrator

00:15:34,290 --> 00:15:43,080
actually on server site we implemented

00:15:38,540 --> 00:15:46,740
Apollo in it immediately relieved us on

00:15:43,080 --> 00:15:49,140
this type type declaration issue and it

00:15:46,740 --> 00:15:52,710
also helped us to serve our graphical

00:15:49,140 --> 00:15:56,130
schemas with graphical express the other

00:15:52,710 --> 00:15:58,290
good part was it has a middleware for

00:15:56,130 --> 00:16:00,540
graphical so it is really easy to

00:15:58,290 --> 00:16:05,520
implement on your endpoint and you can

00:16:00,540 --> 00:16:10,440
just traverse your schema so yeah we

00:16:05,520 --> 00:16:14,660
added Apollo on our server side and let

00:16:10,440 --> 00:16:18,360
me demonstrate how it is eased our pain

00:16:14,660 --> 00:16:21,630
okay we saw already this declaration and

00:16:18,360 --> 00:16:23,970
now it becomes this it's much more

00:16:21,630 --> 00:16:27,150
readable and requires less less typing

00:16:23,970 --> 00:16:29,820
and graphical tools takes this string

00:16:27,150 --> 00:16:33,140
and make it an executable schema so you

00:16:29,820 --> 00:16:37,040
can pass it to your graphical servers

00:16:33,140 --> 00:16:42,510
after integrating Apollo on our servers

00:16:37,040 --> 00:16:44,910
we implemented it on client also and as

00:16:42,510 --> 00:16:49,200
you can easily see it sits together with

00:16:44,910 --> 00:16:52,490
engineer X and then it started we

00:16:49,200 --> 00:16:56,370
started to hit some bumps on the road

00:16:52,490 --> 00:16:58,530
okay what are these bumps first it the

00:16:56,370 --> 00:17:02,250
first bump is multiple suitors issue

00:16:58,530 --> 00:17:04,530
because ngr X and Apollo are both

00:17:02,250 --> 00:17:07,770
providing us with stores to put our

00:17:04,530 --> 00:17:12,000
state's in and now we have two of these

00:17:07,770 --> 00:17:14,160
and we said okay why not keep both just

00:17:12,000 --> 00:17:18,780
we need to combine them and sync them

00:17:14,160 --> 00:17:20,550
because you know syncing data and cache

00:17:18,780 --> 00:17:25,020
eviction is the trivial things of

00:17:20,550 --> 00:17:27,030
software engineering so yeah we need to

00:17:25,020 --> 00:17:29,700
we needed to somehow combine them and

00:17:27,030 --> 00:17:33,450
sync them and we dived into the depth of

00:17:29,700 --> 00:17:35,430
the internet and we saw that a quite of

00:17:33,450 --> 00:17:37,910
number people a quite number of people

00:17:35,430 --> 00:17:41,670
actually having the same issue and

00:17:37,910 --> 00:17:44,220
already some people created github

00:17:41,670 --> 00:17:45,370
repositories to demonstrate how we can

00:17:44,220 --> 00:17:48,700
solve this

00:17:45,370 --> 00:17:51,370
issue oh and we researched them and

00:17:48,700 --> 00:17:55,420
somehow we manage to work them together

00:17:51,370 --> 00:17:58,270
but after combining the stores still we

00:17:55,420 --> 00:18:03,820
getting some data synchronization issues

00:17:58,270 --> 00:18:06,760
and we asked Goldstein to help us out we

00:18:03,820 --> 00:18:11,760
send him a cute little droid recorded

00:18:06,760 --> 00:18:16,000
help us only one you are our only hope

00:18:11,760 --> 00:18:21,970
so he actually did help and he tell told

00:18:16,000 --> 00:18:23,770
us to that ditch and grx at all its he

00:18:21,970 --> 00:18:27,510
said the Apollo client would be

00:18:23,770 --> 00:18:31,690
sufficient enough for handling a store

00:18:27,510 --> 00:18:38,070
and we finally decided to ditch and your

00:18:31,690 --> 00:18:41,470
ex yeah and Rob or mult actually with

00:18:38,070 --> 00:18:44,800
was with us when I was removing the coat

00:18:41,470 --> 00:18:46,360
from her codebase and he actually agreed

00:18:44,800 --> 00:18:48,760
somehow he said ok

00:18:46,360 --> 00:18:51,330
in your case actually having a second

00:18:48,760 --> 00:18:53,650
store doesn't make any sense and

00:18:51,330 --> 00:18:56,230
removing and your ex will help you to

00:18:53,650 --> 00:19:01,170
simplify your code base moving his baby

00:18:56,230 --> 00:19:01,170
yeah yeah I didn't in front of his eyes

00:19:01,500 --> 00:19:07,720
so we did and thanks to that we realized

00:19:05,410 --> 00:19:11,800
that we are did we were using apollo

00:19:07,720 --> 00:19:13,780
wrong all along oh yeah for example we

00:19:11,800 --> 00:19:16,600
have this multiple currency selection

00:19:13,780 --> 00:19:18,760
functionality so you can select your

00:19:16,600 --> 00:19:22,230
currency and it will update all the

00:19:18,760 --> 00:19:24,700
price related parts of your payment page

00:19:22,230 --> 00:19:27,010
what you would why you want to do that

00:19:24,700 --> 00:19:29,230
because if you want to pay in a

00:19:27,010 --> 00:19:31,540
different currency than your local

00:19:29,230 --> 00:19:34,090
currency your bank might charge you some

00:19:31,540 --> 00:19:41,260
fees so selecting your local currency

00:19:34,090 --> 00:19:47,440
here might minimize your extra cost so

00:19:41,260 --> 00:19:51,850
how we did achieve this first we used a

00:19:47,440 --> 00:19:54,490
polo query to get our order and then we

00:19:51,850 --> 00:19:57,490
used a mutation and get the updated

00:19:54,490 --> 00:19:59,250
order and replaced it entirely so this

00:19:57,490 --> 00:20:04,030
is not proper way to do this

00:19:59,250 --> 00:20:06,880
how you can do this properly you can

00:20:04,030 --> 00:20:09,970
just use Apollo watch query to get your

00:20:06,880 --> 00:20:13,299
order and have an eye on it and then

00:20:09,970 --> 00:20:15,520
with your mutation you will just change

00:20:13,299 --> 00:20:17,350
the necessary part of this order and it

00:20:15,520 --> 00:20:26,140
will be reflected to the reflectivity of

00:20:17,350 --> 00:20:30,429
your UI and this time was a great moment

00:20:26,140 --> 00:20:34,260
to refactor our code and expand our

00:20:30,429 --> 00:20:34,260
understandings on how things should be

00:20:34,440 --> 00:20:40,720
we completed our refactor and then we

00:20:38,710 --> 00:20:44,500
were like okay now we are cool because

00:20:40,720 --> 00:20:48,299
we can use all the great rxjs operators

00:20:44,500 --> 00:20:53,200
we can reactively code our rest of

00:20:48,299 --> 00:20:56,590
application and we were smart enough to

00:20:53,200 --> 00:20:59,410
use do operators of our X J's to apply

00:20:56,590 --> 00:21:03,850
our side effects but we realized our

00:20:59,410 --> 00:21:07,059
side effects trigger twice and after a

00:21:03,850 --> 00:21:10,570
long investigation it took me a while to

00:21:07,059 --> 00:21:13,120
understand what's happening we

00:21:10,570 --> 00:21:17,410
understand that we are also lazy enough

00:21:13,120 --> 00:21:20,290
to copy/paste everything that we see the

00:21:17,410 --> 00:21:23,290
problem was in our queries we were

00:21:20,290 --> 00:21:26,910
requesting the field itself and the

00:21:23,290 --> 00:21:30,460
fragment also together with it so this

00:21:26,910 --> 00:21:35,410
makes Apollo to emit the same data twice

00:21:30,460 --> 00:21:37,780
and from the pipeline the do operator

00:21:35,410 --> 00:21:40,140
triggered twice and what would happen

00:21:37,780 --> 00:21:42,790
what inverse case actually it

00:21:40,140 --> 00:21:46,870
side-effect rigueur twice because we

00:21:42,790 --> 00:21:49,059
have a warning caching mechanism we are

00:21:46,870 --> 00:21:51,610
catching warnings out of our order and

00:21:49,059 --> 00:21:54,040
we are pushing them into another stream

00:21:51,610 --> 00:21:57,309
so if it is triggered twice then the

00:21:54,040 --> 00:22:01,960
ordered pushed on the string twice and

00:21:57,309 --> 00:22:04,179
this gave is a big headache actually so

00:22:01,960 --> 00:22:08,049
this is how we achieved so far so far

00:22:04,179 --> 00:22:09,640
and there's a lot more to improve Oh

00:22:08,049 --> 00:22:12,429
so yeah the things that are still in a

00:22:09,640 --> 00:22:13,180
roadmap as we just explained like right

00:22:12,429 --> 00:22:14,650
now every

00:22:13,180 --> 00:22:16,510
you see the unique business components

00:22:14,650 --> 00:22:19,270
that we have they all have their own

00:22:16,510 --> 00:22:20,980
Apollo client but what we actually want

00:22:19,270 --> 00:22:24,550
to do is we want to move this Apollo

00:22:20,980 --> 00:22:27,100
client to to our offer yacht to shell

00:22:24,550 --> 00:22:29,470
and have it in here so that we have one

00:22:27,100 --> 00:22:31,330
big store we can use all the cools that

00:22:29,470 --> 00:22:33,400
like we heard stuff about schema stating

00:22:31,330 --> 00:22:35,560
we heard stuff about actually I'm not

00:22:33,400 --> 00:22:37,780
sure if it was mentioned but multiple

00:22:35,560 --> 00:22:39,730
clients really like just looking right

00:22:37,780 --> 00:22:41,860
now to what's the right thing to do for

00:22:39,730 --> 00:22:43,510
us but this is our idea right now I like

00:22:41,860 --> 00:22:45,130
if any of you have any idea about this

00:22:43,510 --> 00:22:48,670
or like things he has a good idea that

00:22:45,130 --> 00:22:51,580
it wants to tell us like please do like

00:22:48,670 --> 00:22:53,470
come to us after after our talk another

00:22:51,580 --> 00:22:55,720
big thing that we want to do I think

00:22:53,470 --> 00:22:57,660
it's big for everyone is performance

00:22:55,720 --> 00:23:00,070
we're always working on it

00:22:57,660 --> 00:23:01,840
actually with angular like I think it

00:23:00,070 --> 00:23:04,870
comes out of the box now but it's called

00:23:01,840 --> 00:23:06,730
IOT it's something we implemented I

00:23:04,870 --> 00:23:08,980
think a couple months ago now it's ahead

00:23:06,730 --> 00:23:11,110
of time compilation what I basically do

00:23:08,980 --> 00:23:12,880
is does is like it compiles your app and

00:23:11,110 --> 00:23:14,230
angular application on build time and

00:23:12,880 --> 00:23:16,540
then it just shipped it to the browser

00:23:14,230 --> 00:23:17,860
so that means two things we don't have

00:23:16,540 --> 00:23:20,230
to do it on the fly in your browser

00:23:17,860 --> 00:23:22,300
which makes your application faster and

00:23:20,230 --> 00:23:24,760
also in the angular core bundle they

00:23:22,300 --> 00:23:26,950
don't ship the compiler like in the

00:23:24,760 --> 00:23:28,750
bundle to your browser that's a lot of

00:23:26,950 --> 00:23:32,530
data saving like for the client

00:23:28,750 --> 00:23:34,170
I don't know the exact amount that have

00:23:32,530 --> 00:23:36,340
to change but it was it was a big change

00:23:34,170 --> 00:23:38,980
another thing we want to do quickly is

00:23:36,340 --> 00:23:41,140
move to Apollo client 2.0 I think

00:23:38,980 --> 00:23:42,310
yesterday and James's talk we already

00:23:41,140 --> 00:23:44,260
heard like all the cool things so you

00:23:42,310 --> 00:23:46,780
can do with it that's so that's one it

00:23:44,260 --> 00:23:49,090
was five times faster I think that's not

00:23:46,780 --> 00:23:51,700
a good thing anything they yeah half the

00:23:49,090 --> 00:23:53,620
size of the bundle another thing is

00:23:51,700 --> 00:23:55,630
progressive web apps that we we

00:23:53,620 --> 00:23:57,160
investigated it a lot I think it's kind

00:23:55,630 --> 00:23:58,540
of sounds familiar to you some of you

00:23:57,160 --> 00:24:00,310
guys if you travel a lot it's like

00:23:58,540 --> 00:24:01,690
you're in your hotel you go to the

00:24:00,310 --> 00:24:03,250
airline website because you only fly

00:24:01,690 --> 00:24:04,690
once a year with that airline so you

00:24:03,250 --> 00:24:06,940
don't want to download like the 90

00:24:04,690 --> 00:24:08,770
megabytes app so you go to the website

00:24:06,940 --> 00:24:10,240
you check and you get your boarding pass

00:24:08,770 --> 00:24:12,790
nice close your browser go to the

00:24:10,240 --> 00:24:15,670
airport then airport Wi-Fi sucks you

00:24:12,790 --> 00:24:18,160
don't have Wi-Fi 4G bundled just expired

00:24:15,670 --> 00:24:20,200
and you want your boarding pass you're

00:24:18,160 --> 00:24:22,210
like at customs like and you can't

00:24:20,200 --> 00:24:23,740
pull it off and then like if we could

00:24:22,210 --> 00:24:25,270
serve it to you like from a service

00:24:23,740 --> 00:24:26,659
worker or something or a polo link

00:24:25,270 --> 00:24:28,309
offline or whatever like

00:24:26,659 --> 00:24:30,229
just like oh here's your gate and your

00:24:28,309 --> 00:24:31,190
boarding pass go ahead that would be

00:24:30,229 --> 00:24:33,349
something really nice at the end

00:24:31,190 --> 00:24:34,970
convenient I think for our customers and

00:24:33,349 --> 00:24:36,739
another thing that we want to implement

00:24:34,970 --> 00:24:39,369
soon is persistent queries and in the

00:24:36,739 --> 00:24:42,440
next slide I'll try to explain a bit why

00:24:39,369 --> 00:24:45,440
as you can see in the next slide

00:24:42,440 --> 00:24:47,389
yeah as you can see here for example in

00:24:45,440 --> 00:24:49,190
India you would pay like three dollars

00:24:47,389 --> 00:24:52,639
and 81 cents for one gigabyte of data

00:24:49,190 --> 00:24:53,809
and the minimum wage there is $31 cents

00:24:52,639 --> 00:24:55,759
so that would mean you have to work 12

00:24:53,809 --> 00:24:58,879
hours and 17 minutes just to buy one

00:24:55,759 --> 00:25:00,259
gigabyte of data so with LTE with Apollo

00:24:58,879 --> 00:25:02,950
client with everything that I just

00:25:00,259 --> 00:25:05,090
mentioned like if we can reduce the like

00:25:02,950 --> 00:25:07,669
the amount of data that we sent over the

00:25:05,090 --> 00:25:10,009
line like even with kilobytes like

00:25:07,669 --> 00:25:11,899
because as KLM we fly to India we fly to

00:25:10,009 --> 00:25:14,479
China we fly to Indonesia everywhere

00:25:11,899 --> 00:25:18,470
where data can be like a big part if

00:25:14,479 --> 00:25:20,509
your monthly like monthly salary even so

00:25:18,470 --> 00:25:21,919
another thing besides saving bandwidth

00:25:20,509 --> 00:25:24,169
for customers is whitelist the Krays

00:25:21,919 --> 00:25:27,440
thing that makes sense and not showing

00:25:24,169 --> 00:25:29,479
sensitive data to our client but these

00:25:27,440 --> 00:25:31,159
are mentioned before don't quote me on

00:25:29,479 --> 00:25:35,179
these numbers I got them from the site

00:25:31,159 --> 00:25:37,279
at the bottom so ok cool before we close

00:25:35,179 --> 00:25:39,649
this I want to give a special thanks to

00:25:37,279 --> 00:25:41,899
we're gold see in a row promote the

00:25:39,649 --> 00:25:43,729
boats visited us in Amsterdam which is

00:25:41,899 --> 00:25:44,929
really nice they always helped us out

00:25:43,729 --> 00:25:47,749
the role is there for us it was really

00:25:44,929 --> 00:25:48,889
cool and you might have seen it you see

00:25:47,749 --> 00:25:50,419
it on the back of this one already a

00:25:48,889 --> 00:25:53,119
little bit there's the beautiful city of

00:25:50,419 --> 00:25:55,429
Amsterdam so I encourage you guys to

00:25:53,119 --> 00:25:58,220
when we rolled out in the US market -

00:25:55,429 --> 00:26:00,049
co2 co2 KLM that come and look for a

00:25:58,220 --> 00:26:02,210
flight and make sure you make it all the

00:26:00,049 --> 00:26:03,979
way to the confirmation page just they

00:26:02,210 --> 00:26:06,019
have to full experience right so you

00:26:03,979 --> 00:26:08,119
have your booking code and actually now

00:26:06,019 --> 00:26:10,009
like it's only thirty five dollars to

00:26:08,119 --> 00:26:12,950
fly to Amsterdam with free beer coffee

00:26:10,009 --> 00:26:14,899
and food that's the hourly price for the

00:26:12,950 --> 00:26:17,649
flight there's only twenty two hours so

00:26:14,899 --> 00:26:17,649
it's not that bad

00:26:18,480 --> 00:26:22,660
cool so make sure to do that if there's

00:26:21,160 --> 00:26:23,230
any questions we'll be around the rest

00:26:22,660 --> 00:26:25,090
of the day

00:26:23,230 --> 00:26:28,060
I already mentioned our Twitter accounts

00:26:25,090 --> 00:26:29,800
in the first slide I will try to respond

00:26:28,060 --> 00:26:31,570
and for now

00:26:29,800 --> 00:26:32,340
thanks a lot and goodbye from the flight

00:26:31,570 --> 00:26:37,849
deck

00:26:32,340 --> 00:26:37,849

YouTube URL: https://www.youtube.com/watch?v=T2njjXHdKqw


