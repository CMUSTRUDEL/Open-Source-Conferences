Title: Jon Wong - Supercharge Your GraphQL Development
Publication date: 2017-11-07
Playlist: GraphQL Summit 2017
Description: 
	Jon Wong, Software Engineer at Coursera, gave this talk at GraphQL Summit 2017. Learn more: summit.graphql.com

Rolling out GraphQL across your organization comes with its own set of hurdles, especially for those getting started for the first time. Every developer might have their own code style, differing awareness for the various options and conventions, and their own approaches to verifying that their code will work — all of these differences can slow down your organization’s adoption of GraphQL. 

In this talk, I’ll introduce the tools we’ve embraced at Coursera to make writing clean, consistent, and correct GraphQL a delightful process. From linting and formatting all the way to static analysis, these tools have saved our organization time and frustration and given us the confidence that our code is going to work the way we expect.
Captions: 
	00:00:03,440 --> 00:00:07,830
my name is John today I'm gonna talk to

00:00:05,670 --> 00:00:10,830
you guys about super charging your graph

00:00:07,830 --> 00:00:12,809
fuel development yes you sitting in

00:00:10,830 --> 00:00:16,349
those tight seats shoulders touching

00:00:12,809 --> 00:00:18,570
your friends this is for you and in fact

00:00:16,349 --> 00:00:20,520
I'm so on about making this a lightning

00:00:18,570 --> 00:00:23,430
talk I'm actually gonna supercharge this

00:00:20,520 --> 00:00:26,430
talk so I'm gonna get you I'm gonna

00:00:23,430 --> 00:00:28,619
teach you something so quickly that it

00:00:26,430 --> 00:00:30,900
will be faster than Lee Byron tying his

00:00:28,619 --> 00:00:32,850
bow ties so if you want to take out if

00:00:30,900 --> 00:00:34,680
you are able to take out your phone and

00:00:32,850 --> 00:00:35,640
you have a camera on you once you go

00:00:34,680 --> 00:00:37,649
ahead and pull that out because I'm

00:00:35,640 --> 00:00:39,480
gonna show you everything all up front

00:00:37,649 --> 00:00:41,219
while you're doing that I'm gonna talk a

00:00:39,480 --> 00:00:44,040
little bit by myself my name is John I

00:00:41,219 --> 00:00:45,329
work at a company called Coursera you

00:00:44,040 --> 00:00:48,210
might have heard of it from the last

00:00:45,329 --> 00:00:49,350
talk that was two minutes ago I also

00:00:48,210 --> 00:00:51,059
work on the front end infrastructure

00:00:49,350 --> 00:00:52,620
team you heard about that two minutes

00:00:51,059 --> 00:00:55,559
ago and we think a lot about

00:00:52,620 --> 00:00:56,670
productivity of our developers and one

00:00:55,559 --> 00:00:59,190
of the things that I like to think about

00:00:56,670 --> 00:01:03,809
is how people use graph QL actually

00:00:59,190 --> 00:01:06,539
writing it both on in Scala or on our

00:01:03,809 --> 00:01:09,389
native clients as well as in web and so

00:01:06,539 --> 00:01:10,859
in fact here's the slide I'm gonna put

00:01:09,389 --> 00:01:14,069
everything up front these are the three

00:01:10,859 --> 00:01:16,259
things I want to talk about and take the

00:01:14,069 --> 00:01:18,920
picture of that someone took a picture

00:01:16,259 --> 00:01:22,649
of me that's weird

00:01:18,920 --> 00:01:25,170
slides over there and now I'm gonna tell

00:01:22,649 --> 00:01:30,060
you why these three tools are so

00:01:25,170 --> 00:01:31,829
important to the developer workflow for

00:01:30,060 --> 00:01:34,740
anyone using graph QL so first off

00:01:31,829 --> 00:01:37,109
they're super simple to set up the the

00:01:34,740 --> 00:01:38,189
easiest one takes 30 seconds and you

00:01:37,109 --> 00:01:40,229
know if you're in the back and you're on

00:01:38,189 --> 00:01:42,240
a laptop you could probably get this

00:01:40,229 --> 00:01:43,770
finished by the time I finished this

00:01:42,240 --> 00:01:45,389
talk some of them are a little more

00:01:43,770 --> 00:01:48,270
complicated code gen might take a little

00:01:45,389 --> 00:01:50,459
bit longer but they're very very easy to

00:01:48,270 --> 00:01:52,679
set up the second is that there's a

00:01:50,459 --> 00:01:55,770
really really big impact on developer

00:01:52,679 --> 00:01:57,929
experience these things are pretty

00:01:55,770 --> 00:01:59,279
automatic once they're set up and once

00:01:57,929 --> 00:02:00,599
they're set up you can kind of forget

00:01:59,279 --> 00:02:03,270
about them but they give you really

00:02:00,599 --> 00:02:05,849
really a lot of confident confidence in

00:02:03,270 --> 00:02:07,889
your graph QL as well as using your

00:02:05,849 --> 00:02:11,489
actual graph QL data back from the

00:02:07,889 --> 00:02:13,579
server third it actually helps you scale

00:02:11,489 --> 00:02:16,590
graph QL across your organization

00:02:13,579 --> 00:02:17,940
ultimately this is a new language

00:02:16,590 --> 00:02:19,349
there are people that are coming to

00:02:17,940 --> 00:02:21,420
graff jail for the first time they're

00:02:19,349 --> 00:02:23,340
going to make mistakes so if the tools

00:02:21,420 --> 00:02:25,470
tell them that there was a mistake

00:02:23,340 --> 00:02:29,910
then they won't feel as scared trying to

00:02:25,470 --> 00:02:32,940
use graph QL before we begin I need to

00:02:29,910 --> 00:02:35,220
talk about this particular set of things

00:02:32,940 --> 00:02:36,510
here so if you are trying to get if

00:02:35,220 --> 00:02:38,549
you're trying to use any of these tools

00:02:36,510 --> 00:02:41,519
here you're gonna need your schema graph

00:02:38,549 --> 00:02:44,849
cool has created this incredible CLI

00:02:41,519 --> 00:02:46,620
here graph QL CLI and with two simple

00:02:44,849 --> 00:02:49,769
commands it'll get you set up with a

00:02:46,620 --> 00:02:52,290
dark graph QL config file which points

00:02:49,769 --> 00:02:54,750
to your schema for development and

00:02:52,290 --> 00:02:56,970
production purposes and a function

00:02:54,750 --> 00:02:59,250
called graph QL get schema which I

00:02:56,970 --> 00:03:02,280
should have told Lewis about for his

00:02:59,250 --> 00:03:03,450
talk because he did that too once you

00:03:02,280 --> 00:03:05,459
have your schema you can actually get

00:03:03,450 --> 00:03:08,519
started but started installing some of

00:03:05,459 --> 00:03:11,400
these tools so the first one is es lint

00:03:08,519 --> 00:03:13,079
plugin graph QL you may have heard of es

00:03:11,400 --> 00:03:14,640
lint you're probably using it for your

00:03:13,079 --> 00:03:16,860
JavaScript to make sure that your

00:03:14,640 --> 00:03:19,860
JavaScript is correct well in fact you

00:03:16,860 --> 00:03:22,410
can actually use es lint to check graph

00:03:19,860 --> 00:03:27,329
QL queries as well let's take a quick

00:03:22,410 --> 00:03:29,130
look at a demo so we can see here I'm

00:03:27,329 --> 00:03:31,319
gonna add a field called foo ID I don't

00:03:29,130 --> 00:03:33,239
know why this would ever exist but it

00:03:31,319 --> 00:03:35,069
would tell you right then and there as

00:03:33,239 --> 00:03:38,160
you're typing in in your editor that

00:03:35,069 --> 00:03:39,569
this field indeed does not exist right

00:03:38,160 --> 00:03:41,730
you know right there you can tell is

00:03:39,569 --> 00:03:43,470
this gonna work and this is pretty

00:03:41,730 --> 00:03:45,630
simple you add the graph QL slash

00:03:43,470 --> 00:03:47,940
template string Struhl it's gonna read

00:03:45,630 --> 00:03:50,579
from your graph Q file graphical config

00:03:47,940 --> 00:03:52,079
file to get your schema and just gonna

00:03:50,579 --> 00:03:56,130
validate it just make sure it does this

00:03:52,079 --> 00:03:58,470
even parse there's a little more

00:03:56,130 --> 00:04:01,019
advanced rules - there's one role called

00:03:58,470 --> 00:04:03,569
named operations in fact you know you

00:04:01,019 --> 00:04:05,760
can make anonymous queries subscriptions

00:04:03,569 --> 00:04:07,769
mutations in graph QL but they're hard

00:04:05,760 --> 00:04:10,470
to debug they're hard to trace in all of

00:04:07,769 --> 00:04:12,569
your Apollo engines or what other things

00:04:10,470 --> 00:04:14,849
you have tracking your queries so you

00:04:12,569 --> 00:04:17,329
can actually enforce that they are named

00:04:14,849 --> 00:04:19,889
makes things a lot a lot easier to use

00:04:17,329 --> 00:04:22,169
and if you're using graph kill with a

00:04:19,889 --> 00:04:24,000
caching client like Apollo or relay

00:04:22,169 --> 00:04:26,610
sometimes they require that you have

00:04:24,000 --> 00:04:28,860
extra fields for example in Apollo

00:04:26,610 --> 00:04:29,969
client it requires an ID field

00:04:28,860 --> 00:04:31,649
sometimes if you

00:04:29,969 --> 00:04:34,139
you if you say that's the thing you need

00:04:31,649 --> 00:04:36,059
and so you will actually want that field

00:04:34,139 --> 00:04:39,989
declared wherever you're using

00:04:36,059 --> 00:04:42,059
particular types and another use case

00:04:39,989 --> 00:04:44,039
here is that for back end engineers if

00:04:42,059 --> 00:04:46,169
they want to go see where we're

00:04:44,039 --> 00:04:48,119
particular things are being used if

00:04:46,169 --> 00:04:51,179
they're making some breaking schema

00:04:48,119 --> 00:04:52,739
changes they can actually recreate a new

00:04:51,179 --> 00:04:54,299
schema with their break and change and

00:04:52,739 --> 00:04:56,459
they can run it against our product code

00:04:54,299 --> 00:04:58,199
and say here are the five places where

00:04:56,459 --> 00:04:59,969
it's going to break the product can we

00:04:58,199 --> 00:05:01,649
go and fix that which is particularly

00:04:59,969 --> 00:05:05,309
helpful for web when we don't have to

00:05:01,649 --> 00:05:08,849
deal with the long tail of installs the

00:05:05,309 --> 00:05:10,529
second tool Apollo cogent so you heard

00:05:08,849 --> 00:05:11,519
about this you may have heard about it

00:05:10,529 --> 00:05:12,029
because it you heard about it five

00:05:11,519 --> 00:05:13,499
minutes ago

00:05:12,029 --> 00:05:16,649
but Apollo code gen is a tool to

00:05:13,499 --> 00:05:18,919
generate API code type annotations based

00:05:16,649 --> 00:05:21,419
on a graph QL schema it does flow

00:05:18,919 --> 00:05:24,389
typescript it even does Swift it even

00:05:21,419 --> 00:05:26,639
does Scala so it's not limited to just

00:05:24,389 --> 00:05:28,529
JavaScript clients but this is a really

00:05:26,639 --> 00:05:31,379
really useful tool for making sure that

00:05:28,529 --> 00:05:33,360
the thing that you wrote can be used the

00:05:31,379 --> 00:05:35,909
data that you get back from the server

00:05:33,360 --> 00:05:37,949
can be used and here's a demo right here

00:05:35,909 --> 00:05:40,469
we'll see you know through flow this

00:05:37,949 --> 00:05:41,550
user ID does not exist and if we look at

00:05:40,469 --> 00:05:43,469
the flow type for this particular

00:05:41,550 --> 00:05:45,509
element it also does not exist there I'm

00:05:43,469 --> 00:05:47,969
going to go ahead and add it to my query

00:05:45,509 --> 00:05:50,159
and this is all in using a react Apollo

00:05:47,969 --> 00:05:52,319
I'm gonna go back to this element and

00:05:50,159 --> 00:05:54,209
I'm gonna check my flow type oh there it

00:05:52,319 --> 00:05:56,729
is user ID it's a number and then I'm

00:05:54,209 --> 00:05:57,749
gonna go reset this thing up and user ID

00:05:56,729 --> 00:05:59,610
is a number

00:05:57,749 --> 00:06:02,489
great so that was all automatic and

00:05:59,610 --> 00:06:03,899
really really easy to do so this makes

00:06:02,489 --> 00:06:06,209
sure that you're using your API data

00:06:03,899 --> 00:06:08,099
correctly if the server returns an array

00:06:06,209 --> 00:06:10,679
you use it as an array if it's a string

00:06:08,099 --> 00:06:12,839
use it as a string you know it just

00:06:10,679 --> 00:06:16,319
simplifies the whole process of using

00:06:12,839 --> 00:06:18,119
all of this great type definition and

00:06:16,319 --> 00:06:19,409
what's also nice about using Apollo code

00:06:18,119 --> 00:06:21,329
gen is that you won't have to manually

00:06:19,409 --> 00:06:23,999
type your queries we heard about some of

00:06:21,329 --> 00:06:25,529
those benefits before but again you know

00:06:23,999 --> 00:06:28,229
there's a lot of valuable information

00:06:25,529 --> 00:06:31,409
that you can lose if you are just trying

00:06:28,229 --> 00:06:33,959
to manually do it like null ability

00:06:31,409 --> 00:06:35,459
things like that and you can also use it

00:06:33,959 --> 00:06:36,989
with queries and fragments I think the

00:06:35,459 --> 00:06:39,569
big thing here is that with something

00:06:36,989 --> 00:06:41,039
like es lint plug-in graft UL it'll tell

00:06:39,569 --> 00:06:43,560
you okay this thing will or will not

00:06:41,039 --> 00:06:45,990
compile but something

00:06:43,560 --> 00:06:48,720
like not declaring a particular field in

00:06:45,990 --> 00:06:50,580
your fragment that's something that

00:06:48,720 --> 00:06:52,860
Apollo koujun could tell you immediately

00:06:50,580 --> 00:06:57,510
that you don't have all the required

00:06:52,860 --> 00:06:59,280
fields the last tool that I have here is

00:06:57,510 --> 00:07:00,630
prettier and you might wonder okay

00:06:59,280 --> 00:07:03,330
prettier I've heard about this for

00:07:00,630 --> 00:07:06,570
JavaScript but you know what

00:07:03,330 --> 00:07:08,610
it actually has graph QL support too and

00:07:06,570 --> 00:07:10,770
the big thing here is that prettier is

00:07:08,610 --> 00:07:12,540
an opinionated code formatter it has a

00:07:10,770 --> 00:07:15,000
really strong opinion and it has it and

00:07:12,540 --> 00:07:16,710
it has an opinion about graph to l2 you

00:07:15,000 --> 00:07:19,200
can use this for regular da craft UL

00:07:16,710 --> 00:07:22,080
files as well as graphical embedded in

00:07:19,200 --> 00:07:25,410
JavaScript and here's a quick demo of

00:07:22,080 --> 00:07:27,120
that so I'm gonna just stream of

00:07:25,410 --> 00:07:29,520
consciousness consciousness write some

00:07:27,120 --> 00:07:31,350
query thing here instructors get some

00:07:29,520 --> 00:07:35,700
stuff here I'm gonna get a first name

00:07:31,350 --> 00:07:38,910
and then boom pretty and the thing that

00:07:35,700 --> 00:07:41,430
I want to emphasize here is that you're

00:07:38,910 --> 00:07:45,990
wasting a lot of time arguing about how

00:07:41,430 --> 00:07:47,580
your graph QL looks in fact the 37 to 45

00:07:45,990 --> 00:07:51,030
seconds that it took me to talk about

00:07:47,580 --> 00:07:53,460
this was 37 to 45 seconds too long to

00:07:51,030 --> 00:07:56,370
argue about how your graph looks just

00:07:53,460 --> 00:07:57,930
let focus on the harder problems here

00:07:56,370 --> 00:07:59,910
like authentication or authorization

00:07:57,930 --> 00:08:02,640
those things sound a lot more

00:07:59,910 --> 00:08:05,310
complicated than adding whitespace to

00:08:02,640 --> 00:08:06,900
your graph QL and my guarantee here is

00:08:05,310 --> 00:08:08,400
that you will save yourself time and

00:08:06,900 --> 00:08:13,530
your friends will like you for it

00:08:08,400 --> 00:08:18,270
okay so as a wrap up yes limp plugin

00:08:13,530 --> 00:08:20,320
graph QL Apollo code gen and prettier

00:08:18,270 --> 00:08:26,459
okay thank you

00:08:20,320 --> 00:08:26,459

YouTube URL: https://www.youtube.com/watch?v=bQUYWYuVCP0


