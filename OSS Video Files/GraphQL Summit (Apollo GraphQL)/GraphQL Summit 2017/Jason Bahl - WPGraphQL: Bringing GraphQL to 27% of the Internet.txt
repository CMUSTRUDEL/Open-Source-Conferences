Title: Jason Bahl - WPGraphQL: Bringing GraphQL to 27% of the Internet
Publication date: 2017-11-08
Playlist: GraphQL Summit 2017
Description: 
	Jason Bahl, Senior WordPress Engineer at Digital First Media, gave this talk at GraphQL Summit 2017. Learn more: summit.graphql.com

WordPress is the most popular CMS in the world, powering more than 27% of the entire internet. WPGraphQL is an open source WordPress plugin that brings the power of GraphQL to WordPress. This talk will cover why WordPress and GraphQL are a perfect match and detail my experience building the plugin.

See the slides: http://slides.com/jasonbahl-1/graphql-summit-2017-wpgraphql#/
Captions: 
	00:00:03,250 --> 00:00:09,650
all right yeah my name is Jason ball

00:00:06,759 --> 00:00:12,530
talking about WP graph QL which is a

00:00:09,650 --> 00:00:15,770
wordpress plugin that brings graphical

00:00:12,530 --> 00:00:18,740
API to WordPress slides link is there on

00:00:15,770 --> 00:00:24,220
Twitter at WP graph kill WP graph feel

00:00:18,740 --> 00:00:25,850
calm and on github of course WP graph QL

00:00:24,220 --> 00:00:27,680
so Who am I

00:00:25,850 --> 00:00:29,600
senior WordPress engineer digital first

00:00:27,680 --> 00:00:31,700
media in Denver Colorado I've been

00:00:29,600 --> 00:00:33,020
developing on WordPress for about nine

00:00:31,700 --> 00:00:35,390
years

00:00:33,020 --> 00:00:38,000
graph QL developer now for about a year

00:00:35,390 --> 00:00:40,040
and a half Denver native and of course

00:00:38,000 --> 00:00:42,800
the Creator maintainer of WP graph QL

00:00:40,040 --> 00:00:45,500
plugin so what I want to talk about

00:00:42,800 --> 00:00:47,000
today first why does a wordpress in

00:00:45,500 --> 00:00:49,360
graph hero make sense in the first place

00:00:47,000 --> 00:00:51,800
I want to look at this from my business

00:00:49,360 --> 00:00:53,720
business perspective where I work what

00:00:51,800 --> 00:00:55,579
does it solve for us specifically and

00:00:53,720 --> 00:00:58,489
then what can graph kale solve for the

00:00:55,579 --> 00:01:00,530
Greater WordPress community and then

00:00:58,489 --> 00:01:02,690
I'll do a quick WordPress overview for

00:01:00,530 --> 00:01:04,219
those of you that have never used a

00:01:02,690 --> 00:01:05,530
WordPress or maybe haven't used it in a

00:01:04,219 --> 00:01:07,369
long time

00:01:05,530 --> 00:01:09,229
usually I'm talking to WordPress

00:01:07,369 --> 00:01:10,490
community about graph QL now I'm talking

00:01:09,229 --> 00:01:14,329
about graphical community about

00:01:10,490 --> 00:01:17,569
WordPress so and then we'll actually

00:01:14,329 --> 00:01:18,859
look at what it take to install activate

00:01:17,569 --> 00:01:20,299
and start using the graphical plugin

00:01:18,859 --> 00:01:22,100
then I'll do a couple quick demos and

00:01:20,299 --> 00:01:23,209
then I want to talk about a couple

00:01:22,100 --> 00:01:26,359
things I've learned while building and

00:01:23,209 --> 00:01:27,889
maintaining the plugin so first off why

00:01:26,359 --> 00:01:30,499
WordPress Plus graph kill so in the

00:01:27,889 --> 00:01:33,079
first place at digital first media where

00:01:30,499 --> 00:01:34,880
I work we have we're publishing company

00:01:33,079 --> 00:01:37,849
we have like 106 newspapers across

00:01:34,880 --> 00:01:42,219
country we published lots of content on

00:01:37,849 --> 00:01:45,979
the web native apps and print so we have

00:01:42,219 --> 00:01:47,779
106 distributed websites that operate

00:01:45,979 --> 00:01:50,979
independently but need to be able to

00:01:47,779 --> 00:01:53,689
syndicate content to and from each other

00:01:50,979 --> 00:01:55,969
so yeah we have distributed WordPress

00:01:53,689 --> 00:01:58,039
installs we need to manage them one at a

00:01:55,969 --> 00:02:00,259
time but also from a higher level view

00:01:58,039 --> 00:02:03,109
so like my team that has our hands in

00:02:00,259 --> 00:02:05,389
106 installs needs to be able to somehow

00:02:03,109 --> 00:02:08,270
look at that data without having to go

00:02:05,389 --> 00:02:09,530
to 106 separate sites content

00:02:08,270 --> 00:02:12,050
syndication so when you publish an

00:02:09,530 --> 00:02:14,020
article on let's say San Jose Mercury

00:02:12,050 --> 00:02:16,430
News

00:02:14,020 --> 00:02:17,510
maybe Los Angeles Dodgers

00:02:16,430 --> 00:02:18,950
in the World Series or whatever right

00:02:17,510 --> 00:02:20,060
you published that maybe you want that

00:02:18,950 --> 00:02:22,879
to be published on three other

00:02:20,060 --> 00:02:26,030
newspapers Marc Mercury News as the

00:02:22,879 --> 00:02:29,569
canonical so we're sending data from one

00:02:26,030 --> 00:02:31,340
side to another and we were doing that

00:02:29,569 --> 00:02:34,310
with rest for a while but graph KO made

00:02:31,340 --> 00:02:35,750
sense for us and I'll explain why

00:02:34,310 --> 00:02:37,700
and then my crops like I mentioned we

00:02:35,750 --> 00:02:39,439
have hundreds excites our team needs to

00:02:37,700 --> 00:02:41,750
interact with those and it's hard to do

00:02:39,439 --> 00:02:45,019
that one at time so be able to access

00:02:41,750 --> 00:02:46,670
data from multiple different WordPress

00:02:45,019 --> 00:02:51,190
installs and be able to see what's going

00:02:46,670 --> 00:02:53,420
on graph kill makes sense for that so

00:02:51,190 --> 00:02:54,950
what WordPress kind of looks like if you

00:02:53,420 --> 00:02:57,879
just install it right you have WordPress

00:02:54,950 --> 00:03:00,530
you have a dashboard you publish content

00:02:57,879 --> 00:03:01,609
goes on your theme right in our case

00:03:00,530 --> 00:03:06,200
it's the news theme it could be a

00:03:01,609 --> 00:03:08,209
marketing thing can can be whatever we

00:03:06,200 --> 00:03:10,189
also use WordPress to populate our

00:03:08,209 --> 00:03:12,470
native apps so we have ios and android

00:03:10,189 --> 00:03:14,599
same content coming from the same

00:03:12,470 --> 00:03:16,579
wordpress install presented differently

00:03:14,599 --> 00:03:20,209
in some cases different content

00:03:16,579 --> 00:03:21,650
altogether makes it to those sources we

00:03:20,209 --> 00:03:24,199
also use the wordpress as a source for

00:03:21,650 --> 00:03:25,940
print so if you're reading San Jose

00:03:24,199 --> 00:03:28,160
Mercury News for example the print

00:03:25,940 --> 00:03:31,669
edition got populated from content that

00:03:28,160 --> 00:03:33,829
was entered initially in WordPress as

00:03:31,669 --> 00:03:36,019
time has gone on the WordPress dashboard

00:03:33,829 --> 00:03:37,609
isn't the only entry point for entering

00:03:36,019 --> 00:03:39,980
content there's decoupled applications

00:03:37,609 --> 00:03:41,799
Calypso is a popular project in the

00:03:39,980 --> 00:03:46,659
WordPress community it's WordPress coms

00:03:41,799 --> 00:03:48,560
react based JavaScript application that

00:03:46,659 --> 00:03:50,780
communicates over rest as well so you

00:03:48,560 --> 00:03:53,930
can you can communicate with WordPress

00:03:50,780 --> 00:03:57,680
outside of the WordPress PHP dashboard

00:03:53,930 --> 00:03:59,359
and again they have mobile and yet

00:03:57,680 --> 00:04:00,530
native mobile clients to communicate as

00:03:59,359 --> 00:04:02,599
well so you have different sources

00:04:00,530 --> 00:04:07,030
creating content different sources

00:04:02,599 --> 00:04:10,430
rendering content so for a long time in

00:04:07,030 --> 00:04:13,340
tech time 15 months or so we've been

00:04:10,430 --> 00:04:16,909
using the REST API very heavily to do

00:04:13,340 --> 00:04:18,260
these things but we don't have just one

00:04:16,909 --> 00:04:21,019
site like I said we have a hundred six

00:04:18,260 --> 00:04:23,000
sites so we have at the center we have a

00:04:21,019 --> 00:04:25,729
site that communicates with all these

00:04:23,000 --> 00:04:29,210
sites but we have lots and lots and lots

00:04:25,729 --> 00:04:30,260
of sites so we have to manage them each

00:04:29,210 --> 00:04:32,660
on their own but also

00:04:30,260 --> 00:04:35,120
as a cluster because we also divest

00:04:32,660 --> 00:04:37,130
properties everyone smile so they need

00:04:35,120 --> 00:04:40,580
to be able to operate on their own if

00:04:37,130 --> 00:04:43,130
they got bought by another company so so

00:04:40,580 --> 00:04:45,170
yeah pretty common story in the graph QL

00:04:43,130 --> 00:04:47,960
community we've been doing that with

00:04:45,170 --> 00:04:49,370
doing a lot of syndication of content

00:04:47,960 --> 00:04:52,130
with the rest so some frustrations we

00:04:49,370 --> 00:04:55,070
ran into the implicit request just seen

00:04:52,130 --> 00:04:56,810
an endpoint in a codebase when the

00:04:55,070 --> 00:04:58,640
developers writing the code cool they're

00:04:56,810 --> 00:05:00,590
familiar with the docs rest request

00:04:58,640 --> 00:05:03,710
makes sense six months a year down the

00:05:00,590 --> 00:05:05,420
road what was that person expecting to

00:05:03,710 --> 00:05:07,010
get from this endpoint gets a little

00:05:05,420 --> 00:05:08,780
frustrating we're an explicit graphical

00:05:07,010 --> 00:05:13,190
request makes a lot easier to understand

00:05:08,780 --> 00:05:15,530
the original intent we're sending data

00:05:13,190 --> 00:05:17,300
all across the web right we have a

00:05:15,530 --> 00:05:19,430
hundred six sites like I said we're

00:05:17,300 --> 00:05:21,760
syndicating data across the board so to

00:05:19,430 --> 00:05:24,290
get one article from one site to another

00:05:21,760 --> 00:05:26,330
we have the article content we have the

00:05:24,290 --> 00:05:29,690
author we have the author's image we

00:05:26,330 --> 00:05:31,550
have the authors you know maybe top

00:05:29,690 --> 00:05:33,080
recent posts or whatever we have all

00:05:31,550 --> 00:05:35,290
sorts of related content so to get one

00:05:33,080 --> 00:05:38,060
full article from one side to the next

00:05:35,290 --> 00:05:40,910
we're making tons and tons of rest

00:05:38,060 --> 00:05:46,400
requests to get that data which gives

00:05:40,910 --> 00:05:49,070
troublesome to maintain over time yes so

00:05:46,400 --> 00:05:52,100
so what we thought was let's take the

00:05:49,070 --> 00:05:53,750
same structure we have right WordPress

00:05:52,100 --> 00:05:58,940
in the centre different things creating

00:05:53,750 --> 00:06:01,670
content same output but do what we've

00:05:58,940 --> 00:06:04,130
heard today let's take let's have

00:06:01,670 --> 00:06:08,270
everything talked to graph QL and just

00:06:04,130 --> 00:06:10,310
wrap the WordPress REST API okay so we

00:06:08,270 --> 00:06:13,940
did that I I created kind of a wrapper

00:06:10,310 --> 00:06:16,280
in node using I think Apollo server just

00:06:13,940 --> 00:06:17,990
as a mock to kind of sell it to my team

00:06:16,280 --> 00:06:19,640
like graph kill makes sense right we can

00:06:17,990 --> 00:06:21,200
make these explicit queries it's gonna

00:06:19,640 --> 00:06:24,730
save us a lot of headaches understanding

00:06:21,200 --> 00:06:27,380
what data is going where but over time

00:06:24,730 --> 00:06:30,140
because we were supporting all these

00:06:27,380 --> 00:06:33,380
different use cases our REST API had

00:06:30,140 --> 00:06:35,150
grown to be this behemoth endpoint like

00:06:33,380 --> 00:06:39,080
an article endpoint has anything you

00:06:35,150 --> 00:06:40,940
could possibly want about an article so

00:06:39,080 --> 00:06:43,190
you get just for a list of ten posts you

00:06:40,940 --> 00:06:44,090
get 6,000 lines of JSON back when all

00:06:43,190 --> 00:06:46,430
you needed

00:06:44,090 --> 00:06:50,180
for your particular case was maybe the

00:06:46,430 --> 00:06:53,169
title and the link and ID but we're

00:06:50,180 --> 00:06:55,520
giving you 10,000 lines of JSON to parse

00:06:53,169 --> 00:06:57,290
and we have to go collect that and give

00:06:55,520 --> 00:06:59,780
it to you so this is actually a

00:06:57,290 --> 00:07:03,500
screenshot I took today from one of our

00:06:59,780 --> 00:07:07,490
production REST API s just to throw

00:07:03,500 --> 00:07:09,050
ourselves under the bus here so almost

00:07:07,490 --> 00:07:13,430
two and a half seconds just to get ten

00:07:09,050 --> 00:07:17,840
posts from our WordPress REST API it's

00:07:13,430 --> 00:07:20,330
interesting it's crazy so wrapping rest

00:07:17,840 --> 00:07:22,310
with graph QL in our case still led to

00:07:20,330 --> 00:07:23,510
frustrations with the rest because at

00:07:22,310 --> 00:07:25,970
the end of the day we're still dealing

00:07:23,510 --> 00:07:28,460
with rest it just brought to light

00:07:25,970 --> 00:07:32,120
another problem which was the poor

00:07:28,460 --> 00:07:33,470
performance right so yeah we got to that

00:07:32,120 --> 00:07:37,070
point where we want addressed to provide

00:07:33,470 --> 00:07:39,740
everything and so yeah endpoints are

00:07:37,070 --> 00:07:42,680
just crazy and wrapping rest with graph

00:07:39,740 --> 00:07:47,510
QL if it's a non performer REST API it's

00:07:42,680 --> 00:07:50,960
a non performing graphic you led I put

00:07:47,510 --> 00:07:52,460
them for the most part yeah so so the

00:07:50,960 --> 00:07:54,770
next approach we thought okay how could

00:07:52,460 --> 00:07:57,650
we solve this we really like graph QL we

00:07:54,770 --> 00:08:02,599
don't want to wrap the REST API so let's

00:07:57,650 --> 00:08:05,000
just make WordPress a graph QL server so

00:08:02,599 --> 00:08:06,740
we could have approached this and just

00:08:05,000 --> 00:08:08,990
solved this for our company internally

00:08:06,740 --> 00:08:11,630
made a private github repo go to town on

00:08:08,990 --> 00:08:13,430
graph QL but we started thinking hey if

00:08:11,630 --> 00:08:14,330
if this makes sense for us it might make

00:08:13,430 --> 00:08:16,700
sense for the rest of the WordPress

00:08:14,330 --> 00:08:18,830
community if we're if graph kills nice

00:08:16,700 --> 00:08:22,760
experience to develop with WordPress

00:08:18,830 --> 00:08:24,349
let's make an open source so word person

00:08:22,760 --> 00:08:27,710
graph key o makes sense together they

00:08:24,349 --> 00:08:30,289
both have similar goals of both open

00:08:27,710 --> 00:08:35,000
source software WordPress currently

00:08:30,289 --> 00:08:37,219
powers 20% of the web there's a stated

00:08:35,000 --> 00:08:41,750
goal in the wordpress of reaching 51% of

00:08:37,219 --> 00:08:44,180
the web graph QL lebaron in graph killer

00:08:41,750 --> 00:08:46,430
Europe's stated that he wants to see you

00:08:44,180 --> 00:08:48,589
BIC watir a graph QL everywhere within

00:08:46,430 --> 00:08:50,660
four to five years right so they can

00:08:48,589 --> 00:08:52,250
help each other right if graph QL comes

00:08:50,660 --> 00:08:55,160
to WordPress which already has this

00:08:52,250 --> 00:08:56,990
massive footprint on the web WordPress

00:08:55,160 --> 00:08:57,800
can help push graph to go forward graph

00:08:56,990 --> 00:09:00,050
QL can output

00:08:57,800 --> 00:09:02,089
a wordpress for it they're both open

00:09:00,050 --> 00:09:05,589
source community centric both solve

00:09:02,089 --> 00:09:09,470
general problems for the web so

00:09:05,589 --> 00:09:13,010
graphical org suggests this is a way to

00:09:09,470 --> 00:09:14,360
build good graphical servers so you at

00:09:13,010 --> 00:09:16,459
the at the bottom you have a persistence

00:09:14,360 --> 00:09:20,480
layer then you have business logic layer

00:09:16,459 --> 00:09:22,790
with authorization rest RPC and in the

00:09:20,480 --> 00:09:25,730
middle graph QL that's the missing piece

00:09:22,790 --> 00:09:28,399
in WordPress WP graph kill brings that

00:09:25,730 --> 00:09:29,899
missing piece so WP graph kill is a free

00:09:28,399 --> 00:09:32,269
open-source WordPress plug-in that

00:09:29,899 --> 00:09:35,690
provides an extendable graph QL schema

00:09:32,269 --> 00:09:37,100
an API for any WordPress site for those

00:09:35,690 --> 00:09:40,160
who aren't familiar with WordPress I'll

00:09:37,100 --> 00:09:41,870
give a quick rundown so WordPress when

00:09:40,160 --> 00:09:44,180
you install it you get a dashboard right

00:09:41,870 --> 00:09:48,350
you can log in has authentication both

00:09:44,180 --> 00:09:50,860
then in this case I have posts populated

00:09:48,350 --> 00:09:55,220
with movie data from the movie database

00:09:50,860 --> 00:09:56,570
so you have interface to edit posts you

00:09:55,220 --> 00:10:00,500
can search for posts you can filter

00:09:56,570 --> 00:10:04,279
posts you can edit post you can add a

00:10:00,500 --> 00:10:07,370
title add content add custom fields meta

00:10:04,279 --> 00:10:11,060
fields you can tag it categorize your

00:10:07,370 --> 00:10:12,890
content and do all sorts of stuff you

00:10:11,060 --> 00:10:14,480
have tags and categories which are

00:10:12,890 --> 00:10:17,170
taxonomy terms that help you relate

00:10:14,480 --> 00:10:20,510
content across your WordPress install

00:10:17,170 --> 00:10:23,270
you have media library built in where

00:10:20,510 --> 00:10:26,990
you can edit edit media items videos

00:10:23,270 --> 00:10:29,660
images whatnot there's a user system

00:10:26,990 --> 00:10:33,350
with roles and capabilities so you can

00:10:29,660 --> 00:10:34,760
assign what roles users can can have and

00:10:33,350 --> 00:10:38,720
what capabilities those roles are

00:10:34,760 --> 00:10:40,370
assigned you have a commenting system

00:10:38,720 --> 00:10:43,550
right you can write comments on posts

00:10:40,370 --> 00:10:44,959
and whatnot then you have themes which

00:10:43,550 --> 00:10:47,209
is the front end of the site and you

00:10:44,959 --> 00:10:48,620
have plugins plugins are similar to like

00:10:47,209 --> 00:10:51,410
JavaScript middleware or whatnot right

00:10:48,620 --> 00:10:55,760
so you can add a plug-in it adds some

00:10:51,410 --> 00:11:00,050
sort of functionality toward press so WP

00:10:55,760 --> 00:11:01,490
graph kill is a plug-in so to add the WP

00:11:00,050 --> 00:11:04,040
graph hill plug-in to WordPress you

00:11:01,490 --> 00:11:06,980
visit github you start the repo of

00:11:04,040 --> 00:11:10,130
course you tweet about how awesome it is

00:11:06,980 --> 00:11:11,600
to use graph QL with WordPress then you

00:11:10,130 --> 00:11:14,930
clone or download the plugin

00:11:11,600 --> 00:11:16,550
and then you install and activate it so

00:11:14,930 --> 00:11:18,170
did not install and activate it right

00:11:16,550 --> 00:11:20,779
it'll show up in your panel you'll have

00:11:18,170 --> 00:11:23,120
WP graph kill listed in in your admin

00:11:20,779 --> 00:11:25,579
just click activate in this case I'm

00:11:23,120 --> 00:11:28,490
activating two plugins of WP graph QL

00:11:25,579 --> 00:11:31,160
and a separate WP graphical which adds

00:11:28,490 --> 00:11:35,509
graphical as an admin pain in your

00:11:31,160 --> 00:11:38,329
WordPress install so once you have that

00:11:35,509 --> 00:11:40,880
active you have the full puzzle together

00:11:38,329 --> 00:11:43,100
right we have REST API we have our PC

00:11:40,880 --> 00:11:44,870
now we have graph QL and/or depress and

00:11:43,100 --> 00:11:46,250
we have the authorization and business

00:11:44,870 --> 00:11:50,180
logic layer that you already have

00:11:46,250 --> 00:11:51,889
implemented for your WordPress site so

00:11:50,180 --> 00:11:54,050
what the plug-in does it treats your

00:11:51,889 --> 00:11:55,579
data like a graph so what does WordPress

00:11:54,050 --> 00:11:58,160
look like as an application data graph

00:11:55,579 --> 00:12:02,569
you have posts you have users you have

00:11:58,160 --> 00:12:04,160
comments pages terms media and they all

00:12:02,569 --> 00:12:08,540
have connections with each other to some

00:12:04,160 --> 00:12:12,740
degree so a plug-in just turns WordPress

00:12:08,540 --> 00:12:27,620
into a graph so I'm going to do some

00:12:12,740 --> 00:12:31,600
demos now all right that look ok alright

00:12:27,620 --> 00:12:35,120
so just to get let's say a list of posts

00:12:31,600 --> 00:12:43,630
we can get a list of posts and of course

00:12:35,120 --> 00:12:43,630
it's going to go slow hello

00:12:49,250 --> 00:12:51,879
or not

00:13:07,080 --> 00:13:12,360
alright I'll switch the local install so

00:13:08,870 --> 00:13:15,990
we can get a list of posts uses recent

00:13:12,360 --> 00:13:17,790
relay style edges in node shape so we

00:13:15,990 --> 00:13:19,410
can specify what we want to get from

00:13:17,790 --> 00:13:21,120
that and by default it's gonna have a

00:13:19,410 --> 00:13:23,450
schema built for you that matches the

00:13:21,120 --> 00:13:30,510
WordPress schema so if we want to get

00:13:23,450 --> 00:13:33,240
nested data like an author we can do

00:13:30,510 --> 00:13:35,610
that and get that just like any

00:13:33,240 --> 00:13:39,090
wordpress or a graph QL api we can use

00:13:35,610 --> 00:13:48,360
variables right I'll change this to

00:13:39,090 --> 00:13:50,580
local two so yeah we can get we can pass

00:13:48,360 --> 00:13:55,680
variables we can paginate so I can take

00:13:50,580 --> 00:13:58,110
a cursor get the post before or after

00:13:55,680 --> 00:13:59,400
that cursor and that's something if

00:13:58,110 --> 00:14:00,840
you're familiar with WordPress there's

00:13:59,400 --> 00:14:03,110
not really any way to do cursor based

00:14:00,840 --> 00:14:07,200
pagination in WordPress so this plugin

00:14:03,110 --> 00:14:08,550
activates cursor based pagination so we

00:14:07,200 --> 00:14:10,770
can say we want to get the post after

00:14:08,550 --> 00:14:17,610
that cursor and we'll get the posts

00:14:10,770 --> 00:14:20,490
after that cursor so same thing we can

00:14:17,610 --> 00:14:23,220
get deeply nested data as well in in

00:14:20,490 --> 00:14:25,890
WordPress now without having to make you

00:14:23,220 --> 00:14:29,760
know several REST API API requests like

00:14:25,890 --> 00:14:31,590
we would have had to before so I want to

00:14:29,760 --> 00:14:34,620
look at what it takes to extend the

00:14:31,590 --> 00:14:36,660
schema so WordPress has a easy to use

00:14:34,620 --> 00:14:39,060
hook and filter system so it's easy to

00:14:36,660 --> 00:14:41,730
extend things in WordPress so I want to

00:14:39,060 --> 00:14:44,460
take a look at what it takes to extend

00:14:41,730 --> 00:14:46,250
WP graph QL so a common thing you can do

00:14:44,460 --> 00:14:50,280
in WordPress is to register a post type

00:14:46,250 --> 00:14:52,140
post type of is just a new content type

00:14:50,280 --> 00:14:55,080
write a place to store content so let's

00:14:52,140 --> 00:14:57,600
say we're creating a bookstore for graph

00:14:55,080 --> 00:14:59,760
QL summit we might register a post type

00:14:57,600 --> 00:15:02,460
what is this eight nine lines of code

00:14:59,760 --> 00:15:03,750
so we hook in we say hey WordPress I

00:15:02,460 --> 00:15:06,450
want to register a post type called

00:15:03,750 --> 00:15:09,630
books I want to have fields title editor

00:15:06,450 --> 00:15:12,210
and custom fields and then I say I

00:15:09,630 --> 00:15:14,400
wanted to show my graph QL schema and in

00:15:12,210 --> 00:15:17,370
graph QL I wanted to be called book and

00:15:14,400 --> 00:15:19,200
books for plural and then I can add a

00:15:17,370 --> 00:15:20,730
custom taxonomy a taxonomy is going to

00:15:19,200 --> 00:15:22,949
be a way to group these books so we can

00:15:20,730 --> 00:15:25,980
out of genre tux on me again just a tour

00:15:22,949 --> 00:15:28,230
cell lines of code and then we have an

00:15:25,980 --> 00:15:29,490
interface in WordPress and a graph kill

00:15:28,230 --> 00:15:32,190
schema and I'll show you what this looks

00:15:29,490 --> 00:15:34,730
like in a second and then books also

00:15:32,190 --> 00:15:38,670
have maybe other properties like a price

00:15:34,730 --> 00:15:40,920
so you can add a custom field to the

00:15:38,670 --> 00:15:43,350
book schema with just a few lines code

00:15:40,920 --> 00:15:45,089
as well so here we're adding to the

00:15:43,350 --> 00:15:47,399
graph QL book fields we're adding a

00:15:45,089 --> 00:15:50,940
field price and then we set how to

00:15:47,399 --> 00:15:53,430
resolve that from the post meta so what

00:15:50,940 --> 00:15:55,170
you get with just what was that 16 20

00:15:53,430 --> 00:15:59,310
lines of code you get an interface in

00:15:55,170 --> 00:16:01,620
WordPress I'll zoom that in a little bit

00:15:59,310 --> 00:16:04,380
so you get an interface in WordPress now

00:16:01,620 --> 00:16:07,230
to manage books and then to manage

00:16:04,380 --> 00:16:12,380
genres for those books and then we can

00:16:07,230 --> 00:16:12,380
query those with graph QL

00:16:25,400 --> 00:16:28,029
maybe

00:16:45,390 --> 00:16:48,570
sorry about that I don't know what's

00:16:46,620 --> 00:16:51,800
going on with that end point I'll switch

00:16:48,570 --> 00:16:51,800
that once local as well

00:17:07,410 --> 00:17:15,780
come on sorry about that

00:17:13,260 --> 00:17:18,360
so yeah I'll do this locally real quick

00:17:15,780 --> 00:17:20,220
then so I have a demo plug-in I created

00:17:18,360 --> 00:17:23,040
just for this so I'll install that here

00:17:20,220 --> 00:17:26,280
so we'll do a little bit extra demo so

00:17:23,040 --> 00:17:35,880
add new upload a plug-in so if we have a

00:17:26,280 --> 00:17:37,590
plug-in let's see when I saw a few

00:17:35,880 --> 00:17:39,030
plugins I had for this demo real quick

00:17:37,590 --> 00:17:40,770
so this is how easy it is to install

00:17:39,030 --> 00:17:43,980
plug-in though in WordPress so you

00:17:40,770 --> 00:17:48,380
upload a plug-in if you have a zip you

00:17:43,980 --> 00:17:48,380
upload it and you're good to go

00:18:04,110 --> 00:18:07,410
all right so this plugin is just these

00:18:05,700 --> 00:18:10,020
code snippets I have in the slides so

00:18:07,410 --> 00:18:18,090
I'm gonna activate that plugin make sure

00:18:10,020 --> 00:18:21,170
it's active so sit summon demo so now I

00:18:18,090 --> 00:18:21,170
can query this locally

00:18:29,620 --> 00:18:32,620
maybe

00:18:39,170 --> 00:18:44,190
they always say live demos are not a

00:18:41,640 --> 00:18:52,710
good idea and I'm learning out why that

00:18:44,190 --> 00:18:56,210
is sorry about that so we'll do some

00:18:52,710 --> 00:18:56,210
actual live coding

00:19:33,880 --> 00:19:40,660
all right sorry about that all right so

00:19:38,770 --> 00:19:43,290
I don't have any data in my local site

00:19:40,660 --> 00:19:46,090
for this but you can query now genres

00:19:43,290 --> 00:19:48,010
edges a node one thing I do have local

00:19:46,090 --> 00:19:50,980
though that I want to show is a plug-in

00:19:48,010 --> 00:19:55,180
called WP graph QL insights which are

00:19:50,980 --> 00:19:56,950
ads Apollo tracing - WP graph QL so

00:19:55,180 --> 00:19:59,740
Apollo tracing is aspect that Apollo has

00:19:56,950 --> 00:20:02,140
on collecting trace data for your

00:19:59,740 --> 00:20:05,410
resolvers execution time and whatnot and

00:20:02,140 --> 00:20:07,690
then I also apply something called query

00:20:05,410 --> 00:20:09,520
log as well so when you execute a query

00:20:07,690 --> 00:20:13,900
you can see what queries are being a run

00:20:09,520 --> 00:20:15,940
so let's run this again to get posts if

00:20:13,900 --> 00:20:18,160
we look here under extensions we get

00:20:15,940 --> 00:20:20,620
query log we can see how many queries

00:20:18,160 --> 00:20:22,270
will run what specific queries we run

00:20:20,620 --> 00:20:25,110
and then we can use that as a way to

00:20:22,270 --> 00:20:32,850
troubleshoot how to optimize things

00:20:25,110 --> 00:20:32,850
internally and then there's also tracing

00:20:33,210 --> 00:20:38,760
which I'm gonna have to change real

00:20:36,130 --> 00:20:38,760
quick as well

00:20:54,240 --> 00:21:00,660
all right so I have right now filtered

00:20:56,790 --> 00:21:04,680
to not show trace data and I can filter

00:21:00,660 --> 00:21:06,540
it to show trace data so now when I just

00:21:04,680 --> 00:21:08,970
two lines of code I change to show trace

00:21:06,540 --> 00:21:12,600
data so now I've traced data with my

00:21:08,970 --> 00:21:14,010
resolvers so I can resolve data resolve

00:21:12,600 --> 00:21:15,660
tracing I get the start time the end

00:21:14,010 --> 00:21:18,270
time the duration of the entire query

00:21:15,660 --> 00:21:20,580
the duration of each resolver the path

00:21:18,270 --> 00:21:22,920
to the resolver so this is this what

00:21:20,580 --> 00:21:25,860
Paulo optics are Apollo engine I'm sorry

00:21:22,920 --> 00:21:28,590
uses now to click data so we can send

00:21:25,860 --> 00:21:31,170
this data to a service like optics so WP

00:21:28,590 --> 00:21:37,710
graph QL has that extension for you

00:21:31,170 --> 00:21:40,170
already and then so another common thing

00:21:37,710 --> 00:21:42,750
to so WordPress you're gonna get

00:21:40,170 --> 00:21:44,720
WordPress schema for WordPress data out

00:21:42,750 --> 00:21:46,740
of the box so post pages comments

00:21:44,720 --> 00:21:48,420
anything that WordPress does you're

00:21:46,740 --> 00:21:51,690
gonna have a schema for you can browse

00:21:48,420 --> 00:22:00,870
the docs you can you can query for it

00:21:51,690 --> 00:22:02,850
you can mutate data as well but

00:22:00,870 --> 00:22:05,070
WordPress doesn't have to be the data

00:22:02,850 --> 00:22:10,620
source right so this is an example of

00:22:05,070 --> 00:22:13,920
querying for a dad joke if you have the

00:22:10,620 --> 00:22:16,530
dad joke extension of course another dad

00:22:13,920 --> 00:22:18,840
joke plugin so WP graph killed dad jokes

00:22:16,530 --> 00:22:21,450
I built this just as a demonstration to

00:22:18,840 --> 00:22:24,720
show that WordPress doesn't have to be

00:22:21,450 --> 00:22:26,280
the data source for your data so I just

00:22:24,720 --> 00:22:28,590
activated that plug-in and now I can

00:22:26,280 --> 00:22:31,740
query for a dad joke in this case I'm

00:22:28,590 --> 00:22:34,260
getting back why was 10 scared of 7

00:22:31,740 --> 00:22:35,820
because 7 8 9 right

00:22:34,260 --> 00:22:37,500
so every time I execute a graphical

00:22:35,820 --> 00:22:39,720
query with the dad joke I get a random

00:22:37,500 --> 00:22:44,250
bad joke and this is resolving to I

00:22:39,720 --> 00:22:46,650
can't has dad jokes so just to show so

00:22:44,250 --> 00:22:48,780
WordPress can provide your schema it can

00:22:46,650 --> 00:22:56,670
provide your resolvers but it doesn't

00:22:48,780 --> 00:23:00,150
have to provide the data so let's take a

00:22:56,670 --> 00:23:02,070
look I want to show I mentioned that

00:23:00,150 --> 00:23:04,170
WordPress has this authorization layer

00:23:02,070 --> 00:23:06,480
and business logic layer so I want to

00:23:04,170 --> 00:23:07,980
showcase what that looks like with graph

00:23:06,480 --> 00:23:09,960
QL so we can make

00:23:07,980 --> 00:23:12,450
certain fields private or certain types

00:23:09,960 --> 00:23:14,809
private for example we can assign or

00:23:12,450 --> 00:23:16,770
resolvers a certain role so only

00:23:14,809 --> 00:23:19,500
administrators can see data for that

00:23:16,770 --> 00:23:26,760
field perhaps so I want to show what

00:23:19,500 --> 00:23:28,860
that might look like so we'll just do

00:23:26,760 --> 00:23:34,580
that real quick with the dad jokes as an

00:23:28,860 --> 00:23:38,400
example and say only only certain roles

00:23:34,580 --> 00:23:39,929
can resolve dad joke so in WordPress

00:23:38,400 --> 00:23:41,760
like I said there's a business there's

00:23:39,929 --> 00:23:44,520
business rules already built in so we

00:23:41,760 --> 00:23:50,130
can do something like in the resolver

00:23:44,520 --> 00:23:53,250
for getting the dad joke all we have to

00:23:50,130 --> 00:24:03,510
do is say can the current user do this

00:23:53,250 --> 00:24:05,280
so just a few lines of code we can say

00:24:03,510 --> 00:24:14,549
if current user can and we'll just make

00:24:05,280 --> 00:24:24,090
up something do something crazy which is

00:24:14,549 --> 00:24:26,090
not a capability anybody has if the

00:24:24,090 --> 00:24:29,160
current user cannot do something crazy

00:24:26,090 --> 00:24:31,770
don't return don't don't do the

00:24:29,160 --> 00:24:34,350
execution right so let's do that again

00:24:31,770 --> 00:24:36,570
dad jokes gonna return all right but the

00:24:34,350 --> 00:24:39,540
rest the post that I do have access to

00:24:36,570 --> 00:24:40,980
do resolve right or I can throw an error

00:24:39,540 --> 00:24:42,660
or I could throw an exception or

00:24:40,980 --> 00:24:44,250
whatever I want to do so we have

00:24:42,660 --> 00:24:47,400
granular control and WordPress to

00:24:44,250 --> 00:24:51,620
resolve what you want for your users

00:24:47,400 --> 00:24:56,280
needs use an existing WordPress

00:24:51,620 --> 00:25:02,390
foundation so then I also want to

00:24:56,280 --> 00:25:02,390
demonstrate let's see if this can work

00:25:04,820 --> 00:25:08,240
of course not

00:25:10,730 --> 00:25:14,970
so I did want to demonstrate what the

00:25:13,710 --> 00:25:16,260
power of graph kill looks like with

00:25:14,970 --> 00:25:20,820
building potential real-time

00:25:16,260 --> 00:25:22,500
applications with WordPress as well so

00:25:20,820 --> 00:25:23,909
this is this is not actually

00:25:22,500 --> 00:25:26,039
subscription so it's pseudo real-time

00:25:23,909 --> 00:25:28,500
but super simple we got 50 lines of

00:25:26,039 --> 00:25:30,600
Apollo code right that's making a graph

00:25:28,500 --> 00:25:33,500
QL query I'm gonna change this endpoint

00:25:30,600 --> 00:25:33,500
to my local endpoint

00:25:45,280 --> 00:25:50,330
all right so here we have just super

00:25:48,470 --> 00:25:53,240
simple 50 lines of react code with

00:25:50,330 --> 00:25:55,910
Apollo listing stuff from WordPress if I

00:25:53,240 --> 00:26:00,980
go into WordPress and actually edit

00:25:55,910 --> 00:26:03,230
content you'll actually see it in my

00:26:00,980 --> 00:26:05,090
react app faster than you see it in my

00:26:03,230 --> 00:26:15,410
WordPress admin that's creating the

00:26:05,090 --> 00:26:17,120
content so let's see so let's go ahead

00:26:15,410 --> 00:26:25,640
and add a new post we'll just call this

00:26:17,120 --> 00:26:29,150
graph QL summit test whatever publish

00:26:25,640 --> 00:26:33,170
that and in near-real-time

00:26:29,150 --> 00:26:35,210
you have it here what if I trash that so

00:26:33,170 --> 00:26:37,700
I can move this to the trash and you'll

00:26:35,210 --> 00:26:39,350
see that update faster in my Apollo

00:26:37,700 --> 00:26:43,580
application than in my WordPress

00:26:39,350 --> 00:26:46,220
application so this this opens up a lot

00:26:43,580 --> 00:26:50,059
of power right WordPress is 28% of the

00:26:46,220 --> 00:26:52,790
web graph QL is trying to get to

00:26:50,059 --> 00:26:56,090
ubiquity and I think the parity of them

00:26:52,790 --> 00:26:57,590
working together can help us get there

00:26:56,090 --> 00:26:59,179
so I want to talk about my journey a

00:26:57,590 --> 00:27:01,880
little bit so I just have a few minutes

00:26:59,179 --> 00:27:03,679
left so I want to talk about how the

00:27:01,880 --> 00:27:05,510
project has evolved what some things

00:27:03,679 --> 00:27:08,809
I've learned and some production

00:27:05,510 --> 00:27:11,750
examples so the evolution timeline about

00:27:08,809 --> 00:27:13,040
a year ago initial commit I was getting

00:27:11,750 --> 00:27:15,860
frustrated with the rest stuff we were

00:27:13,040 --> 00:27:17,660
doing at work said yeah let's let's go

00:27:15,860 --> 00:27:19,429
forward so started work on in about a

00:27:17,660 --> 00:27:21,230
year ago found out there's another

00:27:19,429 --> 00:27:23,240
project one of the guys that worked on

00:27:21,230 --> 00:27:24,500
the core WordPress REST API was also

00:27:23,240 --> 00:27:26,900
frustrated with the rest and started

00:27:24,500 --> 00:27:28,340
working on graphical API as well found

00:27:26,900 --> 00:27:30,110
his project on github we joined forces

00:27:28,340 --> 00:27:33,260
in January this year he's been

00:27:30,110 --> 00:27:38,450
contributing to my repo now in February

00:27:33,260 --> 00:27:39,620
2008 I refactor to make use of the relay

00:27:38,450 --> 00:27:42,260
schema

00:27:39,620 --> 00:27:43,760
conventions the edges node and I could

00:27:42,260 --> 00:27:46,420
talk about that more later if you have

00:27:43,760 --> 00:27:49,429
questions I won't get to it right now

00:27:46,420 --> 00:27:52,190
we host with WordPress VIP which is an

00:27:49,429 --> 00:27:55,640
enterprise host for WordPress in April

00:27:52,190 --> 00:27:57,200
of this year they approved

00:27:55,640 --> 00:28:00,080
the first version that we submitted to

00:27:57,200 --> 00:28:03,110
them which opens up the doors for other

00:28:00,080 --> 00:28:05,720
large publishers such as quartz calm

00:28:03,110 --> 00:28:08,030
timing People magazine other other folks

00:28:05,720 --> 00:28:10,790
that host with WordPress VIP to start

00:28:08,030 --> 00:28:14,570
using graph QL as well so that's a big

00:28:10,790 --> 00:28:16,280
milestone for WP wrath go in May 20th

00:28:14,570 --> 00:28:17,930
I've I heard about the first public

00:28:16,280 --> 00:28:20,480
graph kill extent WP graph kill

00:28:17,930 --> 00:28:23,660
extension that somebody built June 20 or

00:28:20,480 --> 00:28:27,260
in June the graph Q elephant was born I

00:28:23,660 --> 00:28:29,270
do have stickers and currently we're at

00:28:27,260 --> 00:28:31,850
we're at our 20th release we're still

00:28:29,270 --> 00:28:33,350
considered beta it's a pretty 1.0 there

00:28:31,850 --> 00:28:35,270
will be potential breaking changes

00:28:33,350 --> 00:28:38,690
before we hit 1.0 where we're trying to

00:28:35,270 --> 00:28:40,340
target a December first 1.0 stable and

00:28:38,690 --> 00:28:44,170
try not to make any breaking changes

00:28:40,340 --> 00:28:46,310
after that unless we absolutely have to

00:28:44,170 --> 00:28:48,110
when I wrote the slides we had 13

00:28:46,310 --> 00:28:49,820
contributors since the conference

00:28:48,110 --> 00:28:52,430
started with 15 contributors so that's

00:28:49,820 --> 00:28:54,290
cool just want to shout out to the

00:28:52,430 --> 00:28:57,230
people that have been contributing and

00:28:54,290 --> 00:28:59,240
then yeah I mentioned 1.0 stable release

00:28:57,230 --> 00:29:01,190
we're targeting December first trying to

00:28:59,240 --> 00:29:02,300
get it on the wordpress.org repo so it's

00:29:01,190 --> 00:29:04,670
not only on github

00:29:02,300 --> 00:29:06,440
maybe one day March decor which would

00:29:04,670 --> 00:29:10,010
effectively bring graph QL to 28 percent

00:29:06,440 --> 00:29:11,510
or more of the Internet so a couple

00:29:10,010 --> 00:29:13,220
things I learned I only have a few

00:29:11,510 --> 00:29:15,050
minutes I'll make this quick but schema

00:29:13,220 --> 00:29:17,630
design is very difficult it's especially

00:29:15,050 --> 00:29:19,760
difficult when you don't know what the

00:29:17,630 --> 00:29:21,680
end product is which in WordPress case I

00:29:19,760 --> 00:29:23,240
don't know what it is you could be

00:29:21,680 --> 00:29:24,710
building a car dealership you could be

00:29:23,240 --> 00:29:28,490
building a newspaper site you could be

00:29:24,710 --> 00:29:31,070
building who knows real a schema spec is

00:29:28,490 --> 00:29:33,110
fantastic and that's helped quite a bit

00:29:31,070 --> 00:29:34,970
we have data like plugins and themes

00:29:33,110 --> 00:29:37,460
that don't have a way to paginate that

00:29:34,970 --> 00:29:39,170
data in WordPress internals real a spec

00:29:37,460 --> 00:29:40,880
provides that way to paginate

00:29:39,170 --> 00:29:45,020
regardless of the data you could

00:29:40,880 --> 00:29:46,910
paginate dad jokes if you wanted to so

00:29:45,020 --> 00:29:48,740
graph QL WordPress communities are

00:29:46,910 --> 00:29:50,090
amazing I've talked to probably dozens

00:29:48,740 --> 00:29:51,710
of people in this room on slack or

00:29:50,090 --> 00:29:54,980
Twitter trying to brainstorm schema

00:29:51,710 --> 00:29:56,870
design things like that performance

00:29:54,980 --> 00:29:58,340
issues tools that have been helpful if

00:29:56,870 --> 00:30:00,440
you didn't know already graphical of

00:29:58,340 --> 00:30:02,810
course graph doc cool I actually use a

00:30:00,440 --> 00:30:05,660
lot to prototype schema ideas right I'll

00:30:02,810 --> 00:30:07,430
build a schema and say this this looks

00:30:05,660 --> 00:30:09,170
comfortable to use right this might be

00:30:07,430 --> 00:30:10,730
how we could go

00:30:09,170 --> 00:30:12,530
launchpad has also been helpful I've

00:30:10,730 --> 00:30:14,060
I've had issues with things create

00:30:12,530 --> 00:30:14,570
Launchpad send it to somebody to check

00:30:14,060 --> 00:30:16,550
it out

00:30:14,570 --> 00:30:18,410
want to want to shout out to two

00:30:16,550 --> 00:30:20,270
projects that are using WP graph kill

00:30:18,410 --> 00:30:21,860
and production quartz comm large

00:30:20,270 --> 00:30:24,310
publisher they launched a site just a

00:30:21,860 --> 00:30:26,840
few weeks ago work quartz Calm it's

00:30:24,310 --> 00:30:29,000
running Apollo you can actually open it

00:30:26,840 --> 00:30:32,870
up and play with Apollo dev tools they

00:30:29,000 --> 00:30:36,800
use WP graph QL from their parent site

00:30:32,870 --> 00:30:39,440
qz comm serves up API work quartz comm

00:30:36,800 --> 00:30:43,550
queries that API and you have this

00:30:39,440 --> 00:30:45,500
single page pretty snappy interface of

00:30:43,550 --> 00:30:49,430
course with a big add because their

00:30:45,500 --> 00:30:51,050
publisher but yeah it's a single page

00:30:49,430 --> 00:30:51,710
app you can open up like I said check

00:30:51,050 --> 00:30:54,650
out

00:30:51,710 --> 00:30:56,630
Apollo dev tools on here they they

00:30:54,650 --> 00:30:58,940
actually use Pacific persist graph QL as

00:30:56,630 --> 00:31:01,910
well so they have a white list on there

00:30:58,940 --> 00:31:04,580
WP graphical server paulo generates a

00:31:01,910 --> 00:31:08,780
list of allowed queries that they can

00:31:04,580 --> 00:31:10,760
execute anything else is not allowed so

00:31:08,780 --> 00:31:12,770
they have a semi-public semi-private

00:31:10,760 --> 00:31:15,910
graph QL end point but it's powered by

00:31:12,770 --> 00:31:20,540
WP graph QL hope lab is also another one

00:31:15,910 --> 00:31:22,600
this is just a small company or the

00:31:20,540 --> 00:31:26,360
agency that made it is just small agency

00:31:22,600 --> 00:31:28,280
that wanted to build a more modern

00:31:26,360 --> 00:31:30,800
interface and didn't want to use rest so

00:31:28,280 --> 00:31:32,720
they turn to the graph QL and again

00:31:30,800 --> 00:31:36,080
excusing reactant Apollo as well so I

00:31:32,720 --> 00:31:39,440
just want to shout those out and I think

00:31:36,080 --> 00:31:41,840
my time is up so slides for future

00:31:39,440 --> 00:31:43,280
reference Twitter at WP graph kill them

00:31:41,840 --> 00:31:46,390
if you graphical common of course on

00:31:43,280 --> 00:31:46,390
github thanks

00:31:48,840 --> 00:31:50,900

YouTube URL: https://www.youtube.com/watch?v=v3xY-rCsUYM


