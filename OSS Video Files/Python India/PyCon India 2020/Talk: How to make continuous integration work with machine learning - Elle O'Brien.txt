Title: Talk: How to make continuous integration work with machine learning - Elle O'Brien
Publication date: 2020-12-03
Playlist: PyCon India 2020
Description: 
	This talk was presented at PyCon India 2020 Online.

PyCon India is the largest gathering of Pythonistas in India for the Python programming language. The 12th edition of PyCon India took place online from 2nd October to 5th October 2020.

Talk Detail: https://in.pycon.org/cfp/2020/proposals/how-to-make-continuous-integration-work-with-machine-learning~avK5b/

Click here to subscribe to the PyCon India channel: https://www.youtube.com/user/inpycon?sub_confirmation=1
Follow PyCon India on Twitter: https://twitter.com/pyconindia
Follow PyCon India on Facebook: https://www.facebook.com/PyConIndia/
Captions: 
	                              hello folks uh welcome to the second day                               of python india                               uh hope you all enjoyed your day                               yesterday                               and hope you all had a great rest                               [Music]                               she's a data scientist                               integration with machine learning                               hi everyone um i'm really happy to be                                here                                um it's actually past midnight for me                                it's almost one in the morning for me                                and i'm i'm really thrilled to be with                                you all                                um so i'm just gonna get started so my                                talk is how to make continuous                                integration work with machine learning                                all right so um thanks to that intro you                                know by now a bit about me that i used                                to be an academic researcher and now i                                work on data science at dvc and we are                                an organization                                that makes tools for machine learning                                and data science based on engineering                                principles                                um so a little bit about the machine                                learning workflow                                first um so i want to start with a                                diagram                                um and this is a really powerful figure                                um that's all about the machine learning                                workflow this was a survey from                                uh teams all across microsoft and that                                um                                you know finding that they all tended to                                follow a pretty similar workflow once                                machine learning was involved                                um there's kind of nine steps here going                                from gathering your data and engineering                                it to monitoring your model                                in production this is really consistent                                across teams                                and there's a lot of folks working on                                this we've got data engineers so people                                whose job is                                engineering you know all of all of data                                management we've got data scientists                                people who are modeling data um                                you know creating great models from it                                and we've got software engineers who are                                going to be helping us deploy models                                monitor them                                um you know and keep all the operations                                running                                and you know this process has a lot of                                feedback right so data scientists might                                need you know                                be asked by software engineers hey can                                we check out you know how this model is                                going                                oh you know what i'm sorry i have to                                pause for one moment because of my                                it turns out my laptop is unplugged and                                i'm going to be right back                                so sorry                                okay we're back and we can go for the                                rest of it thanks for your patience                                okay so data scientists and software                                engineers are going to have quite a bit                                of back and forth because of um you know                                finding the best model is going to be a                                you know an iterative process right so                                and it's going to depend quite a lot on                                what the environment is                                at you know that we can actually deploy                                and so there's going to have to be quite                                a bit of feeding back and forth to make                                sure all the data says scientist ideas                                will actually work in production                                and everybody is going to need to know                                you know what data set was our current                                model                                trained on and how may you know how                                might the data that's actually being                                received by the system now that it's in                                production                                be drifting far from what the training                                data is and so all of this back and                                forth can get pretty confusing                                pretty quickly but we have some                                inspiration for maybe a way out of this                                confusion                                and that's devops so devops if you're                                unfamiliar                                is a combination of the words                                development and operations and so                                it refers to this kind of coming                                together of these two                                potentially opposing forces development                                 people that want to create new features                                 experiment a lot and operations people                                 who want to keep our systems stable                                 and always running and finding some                                 shared practices so that they can work                                 together and you know machine learning                                 and the software development around                                 machine learning doesn't quite have                                 yet an analogous set of practices and                                 philosophies but                                 we might be able to learn something from                                 the way that devops has really                                 transformed software development in the                                 last decade                                 or so so i want to talk now about one of                                 the most important ideas in devops                                 and that's continuous integration and                                 delivery                                 so the principles of continuous                                 integration i'm just going to abbreviate                                 it                                 the big idea is that whenever you change                                 your code                                 you will build your software and then                                 you'll run some tests and you'll get                                 feedback okay did we pass or fail my                                 tests                                 and if you failed then you'll keep                                 iterating on this cycle and if you pass                                 then you have a candidate for release                                 now let's think about what's different                                 when we're doing this with machine                                 learning instead of                                 traditional software development so it's                                 not enough to change mod                                 like to be monitoring just did my code                                 change we also have to check did my data                                 set change                                 um because of if our if our data set                                 changed                                 that will also affect our model you know                                 potentially in a very profound way and                                 potentially in ways that are difficult                                 to measure                                 or to predict from the outset so we                                 really need to monitor if data sets are                                 changing                                 um another difference is that instead of                                 building software we're training models                                 and training models can be quite simple                                 this might be something you can do on                                 your laptop or it might be something                                 that you need hours and hours of gpu                                 time to do                                 another difference is that instead of                                 just running past failed tests we're                                 going to be evaluating our model                                 and model evaluation is you know it's                                 it's quite interesting and even you know                                 the practices about how to evaluate                                 models is still emerging                                 but it's pretty clear that a lot of pass                                 fail kind of check marks are not going                                 to be                                 enough for us we need a report because                                 if it's possible for like the overall                                 accuracy                                 of a model to improve over some baseline                                 and yet                                 do worse in certain categories or                                 subsets of your data and that can have                                 dramatic consequences for                                 you know its real world implications so                                 we need detailed reporting and it needs                                 to be something that a domain expert                                 like a data scientist can come in                                 and examine quite quickly so why don't                                 we have this yet if it's such a great                                 idea                                 so first of all version control can't                                 always track changes in data sets and                                 one of the big problems here is that                                 when you keep                                 a data set you know in version control                                 sometimes they're simply too large to be                                 efficiently versioned                                 so everything i showed you in                                 traditional ci systems is mediated by                                 usually get version control and that's                                 very difficult with                                 you know certain data sets another                                 difference is that training models isn't                                 like building software and a lot of the                                 hardware that we use for building                                 software or ci with you know typical                                 systems is                                 is not going to cut it for machine                                 learning models they're simply too big                                 and too resource intensive and another                                 difference is that evaluating metrics is                                 more complicated we need something                                 more than pass fail checks and that's                                 not built into                                 a lot of typical ci systems so                                 we think what's needed here and you know                                 to kind of improve                                 the rigor and the sustainability in the                                 long term of machine learning projects                                 is to build                                 tools that extend ci cd practices from                                 software engineering to                                 ml and at dvc or iterative that's what                                 we do                                 um so you might know our you know our                                 kind of flagship project is called data                                 version control it's an open source                                 project i saw a lot of people in the                                 keynote were asking like oh what kind of                                 open source projects can i get and we                                 have a lot of first-time contributors so                                 it's worth checking out if you're                                 if you're interested in trying out a                                 contribution um                                 but we make tools that use you know                                 extend software engineering practices                                 to machine learning and we're also a                                 totally python project for the most part                                 which is also really cool so okay our                                 thoughts about how to reimagine                                 ci cd this is kind of our game plan                                 going into the problem                                 we want to be able to version data like                                 code so that data sets can trigger                                 you know a ci a ci feedback loop we want                                 to let our ci system allocate whatever                                 cloud resources are needed to train                                 models                                 and we want to be able to provide                                 feedback about our tests in the form of                                 metric reports and that could include                                 data vis                                 so here's how we're approaching this and                                 here's the team that i'm working with                                 um dimitri petrov who's the dvc creator                                 is also working with us on our new                                 project david ortega is a developer and                                 me i'm a data scientist um and so                                 here's kind of our big inspiration                                 lately there have been some some really                                 neat developments in the git ecosystem                                 and if you're not familiar with either                                 github actions or gitlab ci                                 cd i would totally recommend checking                                 them out they're a lot of fun                                 and these are ci systems that you know                                 basically                                 github action set is is a pretty                                 powerful                                 kit where like whenever you have a                                 change                                 in your that's detected in your github                                 project github                                 actions will spin off a computer that is                                 managed by a github                                 to do a workflow that you've defined so                                 they're actually providing you with                                 computing resources and same for gitlab                                 ci                                 um so in this talk i'm i'm going to                                 stick to talking about github actions                                 but actually everything here                                 is equally applicable to gitlab ci and                                 these two systems are very comparable                                 so our project is a new open source                                 project called continuous machine                                 learning                                 and the basic idea is to adopt these two                                 very popular                                 git centric ci systems github actions                                 and ci cd                                 to work better with machine learning and                                 data heavy projects                                 so two ways to keep track of our project                                 we've got a website cml.dev and we have                                 a github repo where you are always                                 welcome to open an issue and try to                                 solve a pull request you know                                 it's it's a cool place to visit i think                                 so here's where those these systems fit                                 so github actions or gitlab ci fits into                                 this this part                                 of the ci feedback loop um using github                                 actions you can automatically train a                                 model                                 run some tests on it and get an you know                                 and then get an answer about how did the                                 model do                                 on those tests so we can automate the                                 training part                                 and then the testing part and the                                 reporting part                                 um and we're going to be doing that on                                 computers that are run                                 by github so the first priority                                 um i'm just kind of going to step                                 through some of those three priorities                                 we've laid out and how                                 we're addressing those and you know                                 using the github actions get lab ci                                 system as the basis and then building                                 some tools on top of those                                 that beat these priorities so the first                                 thing we wanted was to be able to                                 provide feedback in the form of metric                                 reports                                 and so kind of you know so the basic                                 unit                                 of a github action is that you create a                                 yaml file that's in a special                                 directory github workflows um and then                                 it's just a you know                                 some pretty ordinary format it's a yaml                                 um                                 and then you describe a workflow that                                 you want and then                                 every time github detects a change to                                 your project repository it will run the                                 workflow                                 and report the answer back to you um                                 and usually it will just report you know                                 kind of in like console logs                                 um but what we have here is our                                 kind of our setup so you put this                                 special yaml file                                 in the special directory you set a                                 trigger so you say okay whenever a push                                 is detected                                 this one we're going to run the workflow                                 you can pick a docker container                                 the operating system of your of the                                 runner                                 um we're just using a ubuntu machine and                                 we're using                                 our docker container that we've created                                 that has a library of some functions we                                 wrote                                 and then we've got our workflow and so                                 in this workflow here i'm saying let's                                 run                                 pythontrain.pi so let's train a model                                 and then we're going to use some special                                 functions that we wrote these cml                                 functions                                 um for continuous machine learning to                                 write a markdown report and it's an                                 ordinary markdown file                                 but it's going to have some text data                                 and some image                                 an image here and then we're going to                                 send that to github                                 and here's what happens so when you make                                 a pull request                                 computers managed by github will run                                 this train.pi                                 kind of kind of workflow and then it                                 will give you                                 this data vis and report on your pull                                 request                                 um so you get like a new level of                                 you know visibility to what's going on                                 under the hood what you know what your                                 model is doing                                 um and now it's in github so i i think                                 that                                 is cool um and then the value of having                                 this kind of reporting                                 in the pull request is that now you and                                 your team can have a discussion and you                                 can decide when to merge something into                                 like you know the main branch of your                                 project maybe the production branch                                 um together and decide you know if it's                                 up to muster with maybe                                 more transparency about how the model                                 performs than you would get if you had                                 done this testing                                 locally and you can do so just let's                                 take a closer look at the workflow i did                                 um this is this is the code that i had                                 and this is the figure that it generated                                 this is                                 an ordinary confusion matrix.png file                                 generated by scikit-learn you can use                                 whatever kind of                                 you know visualization tools you like                                 just save into a standard image format                                 we also created um you can use dvc with                                 this so                                 um you can you can use dvc and this is                                 actually um if you're familiar with it                                 we have some plots and the plots are                                 really good for comparing                                 metrics about your models or data sets                                 across                                 git branches so when you use them in                                 you know a github project that means                                 that your pull request will display                                 how does the model on this branch differ                                 from the model on the main branch of                                 your project so that can be useful for                                 making comparisons                                 and we we added a tensorboard wrapper so                                 that you can get a link to a tensorboard                                 in your github pull request                                 and this will help you follow how your                                 model is training in real time                                 even though it's training on a runner                                 that is managed by github                                 so reports are basically just                                 customizable markdown documents you can                                 actually put                                 whatever you want in it and so a couple                                 ways to use this in these reports in                                 particular                                 you can report about how the model                                 training went on remote machines so                                 you know tensorboard is an example of                                 that um you can get                                 transparent and totally reproducible and                                 detailed test results so                                 you can put whatever test results you                                 want here um                                 whatever is going to be useful for your                                 project um                                 and kind of another value of this is                                 being able to review                                 your data and your models like code so                                 we have a lot of great practices for                                 code review                                 maybe not so much for like oh i've                                 changed the data set or                                 my model has really changed um you know                                 how does that compare to what's on the                                 main branch of the project                                 is this something that we want to merge                                 and so you know using kind of the code                                 review                                 standards created by you know the git                                 flow                                 maybe we can extend that here to these                                 these aspects of machine learning                                 project development                                 um and so we've been creating this                                 youtube video series that has                                 um kind of goes into each of these use                                 cases and ways of using it                                 um and we're always expanding it and                                 it's been pretty successful so far                                 we've had it up for a little over a                                 month and we've gotten like                                              so people seem to generally                                 be interested in it um so i feel like                                 we're hitting something that people                                 are responding to or think is cool but                                 you know we're still kind of                                 learning all the use cases and learning                                 what what people want to use this for                                 where it provides them the most value so                                 any feedback about that is very                                 very welcome at this point um so the                                 second priority that we had was about                                 data management we wanted to be able to                                 do ci while working with larger                                 data sets um and actually this goes                                 back to what data version control or dvc                                 does um                                 so dvc is a tool for extending                                 git version control to data sets and                                 models and so dvc is not a replacement                                 for git you use dvc with git                                 and it helps you you know link with your                                 whatever's in your git repository to                                 data sets and models that might be in                                 cloud storage so you can version them                                 like you version code even though you                                 don't have to                                 keep them with your code so you can use                                 this kind of it like syntax to be                                 tracking data sets and models                                 and so you can do things like dvc add                                 and push                                 data sets from your local machine to                                 cloud storage                                 and so that when you do that dvc is                                 going to create this kind of meta file                                 so                                 a little you know just a little                                 lightweight text file that you can                                 version like code                                 and that text file actually will help                                 you                                 you know points to where your data is in                                 cloud storage                                 so something that we did in cml was that                                 we we created a way to give github                                 actions                                 access to your dvc remote and that's                                 your cloud storage that's where                                 dvc tracked files reside um so you can                                 pass some credentials to your github                                 action                                 and then that means that the machine                                 that is running these tests                                 automatically                                 can pull your data set from cloud                                 storage do some transformations on it                                 some modeling whatever workflow you want                                 and then you know maybe if you created a                                 bottle at the end of that push that                                 model back into your cloud storage so                                 you can really start pushing and pulling                                 lots of things to and from cloud storage                                 using this high level syntax                                 um and that avoids you having to try to                                 cram things into your github repository                                 or use git lfs you can use whatever                                 storage you like                                 and that includes google drive s                                      bucket                                 as your blobs it's pretty flexible so                                 when you pull data you're grabbing data                                 from the cloud and when you're pushing                                 you're pushing things from the runner to                                 the cloud so a few consequences for                                 continuous integration                                 this means that changes in your data set                                 can now trigger your github action                                 even though the data set isn't part of                                 your github                                 project repository the data is dv is in                                 dvc storage or cloud storage but it can                                 still trigger                                 a round of the ci feedback another                                 difference is that your github actions                                 can now push and pull                                 big artifacts to and from cloud storage                                 and finally                                 you have data set and model versions                                 linked to every model training run                                 um so you can you can know precisely                                 what version of your data was used                                 at the time that a certain model was run                                 and then you'll also know                                 you know okay and what was the code what                                 was the environment what was the                                 infrastructure because you did it all                                 in this github actions system                                 so the third priority is how can we let                                 our ci system                                 allocate cloud resources to train models                                 um and this is the coolest one to me i'm                                 actually going to talk the least about                                 it because if we're currently revamping                                 it                                 um but you know our first approach has                                 been using docker machine                                 which is actually a deprecated project                                 but it's really cool                                 it gives you a way to deploy                                 you know just turn on basically an                                 instance on like ec                                  or you know there's a google cloud                                 engine and there's an azure engine                                 um but you can type a command from your                                 terminal and it will                                 launch turn on your your machine for you                                 um                                 with whatever docker container you chose                                 and also                                 you know a command to run um and so                                 we we pair that up with github actions                                 and essentially what that means is you                                 can push                                 to your github repository and that will                                 trigger it will turn on                                 your ec                                                                and when the job is done turn it off for                                 you um                                 which which to me is the coolest thing                                 and we're actually                                 revamping this right now we've decided                                 to use                                 something called terraform to do this so                                 i won't go too into the implementation                                 because it's going to change probably                                 within the month                                 um although the usage won't um so for                                 example something that you can do here                                 is like this is i had a style transfer                                 neural network and i was able to anytime                                 i would change the code essentially                                 that would trigger an ec                                                the gpu turning on                                 running the training and then turning                                 itself off at the end and i get the                                 result of the style                                 transfer reported back to me in my                                 github pull request                                 um and so here i'm showing a comparison                                 of the model on the main branch of the                                 project compared to the model                                 in um you know my experimental branch                                 um so something cool about this is that                                 because of                                 your your you're automatically working                                 with these                                 ec                                                                      you choose                                 um you don't have to remember to turn on                                 and off your                                 your resources so you don't have to                                 engage with them interactively like you                                 don't have to log on                                 you know to to your instance and then                                 remember to turn it off                                 github actions will actually automate                                 that so we've got this really cool                                 resource orchestration and                                 it feels tremendously powerful to be                                 able to do that so                                 i'm very excited about about this aspect                                 so                                 to summarize what we have so far we                                 wanted to                                 reimagine how continuous integration                                 could                                 work for machine learning going from you                                 know it's really well entrenched and                                 there's a lot of                                 excellent practices in traditional                                 software development how can we bring                                 them closer                                 to machine learning so we wanted to be                                 able to                                 version data like code and for this                                 we had already established that data                                 version control was                                 a good tool or the tool that we have                                 worked really hard on developing with a                                 really incredible community                                 to extend git version control to data                                 sets so that data can now be part                                 of your ci system we also needed our ci                                 system to be able to allocate cloud                                 resources to train model                                 and we've we've kind of crafted one                                 approach and we're working on another                                 so that you can deploy your cloud                                 resources from your github action                                 um so that kind of makes it and it and                                 also just to note this also works on                                 non-cloud resources um you can deploy                                 a gpu that's like you know wherever you                                 have a gpu it could be in your house and                                 your github action can trigger it and                                 it's it's not too hard to set up                                 actually it's                                 you know and that's because of the                                 github docs are great um but it's pretty                                 easy to set that up and                                 quite fun um and finally we wanted to be                                 able to provide feedback in the form of                                 metric reports and so                                 we created this library of helper                                 functions for                                 writing reports in your pr um and so you                                 can write                                 basically a markdown document with                                 whatever kind of                                 reporting you want about your model and                                 it will appear in the pull request                                 just like a regular comment so                                 um you know i think that there's a lot                                 of value in                                 in doing cicd with machine learning and                                 i think you know some of it is just that                                 it's cool it's cool to automate things                                 it's cool to                                 move off of using your own computer and                                 your own resources to                                 putting you know you can almost be                                 serverless in a way like github actions                                 is not truly serverless but                                 it is like you don't have to be                                 the administrator of the computer                                 resources that you're                                 using for testing and training and                                 that's pretty cool                                 um so all of these these aspects of                                 automation                                 you know it gives you a lot of power                                 flexibility and also                                 transparency and reproducibility like                                 you can always go back to the commit                                 that generated you know a certain model                                 performance and you will have                                 everything in that ci system to                                 completely recreate                                 that experiment um so                                 you know those are a couple of reasons                                 why i think this is it's a lot of fun                                 um and so you know another value of this                                 is that a ci system is a good way to                                 take                                 all the parts of your project from your                                 data set your code                                 your models um you know and put                                 all of this all your results all of the                                 computing resources that were used for                                 this from                                 what is what is the actual                                 infrastructure that ran your tests                                 and what were the docker containers what                                 were the environments and put all of                                 this                                 into one system and that makes it so                                 that                                 everyone on your team has access um to                                 the entire history of your project                                 all of the history of your tests in a                                 way that's easy to revisit                                 recreate and search um so                                 i think that that that can be pretty                                 powerful um                                 so thank you for listening                                 and so you know our project's ongoing                                 and it's still kind of                                 a baby it's it's i think it's maybe two                                 months old                                 since we've launched creative machine                                 launch continuous machine learning                                 um and so you know we're very much still                                 developing it and                                 looking forward to any feedback about                                 you know what might be missing what                                 doesn't work for you                                 um where do you see this fitting into                                 your                                 actual day-to-day machine learning                                 workflows                                 um and so you know any of that feedback                                 is                                 is very useful um and so there's plenty                                 of project updates ongoing these are                                 social channels and we also have this                                 video channel that's going which is                                 tutorials and use cases and a lot of                                 these are inspired by                                 people asking us questions and letting                                 us know what kind of use cases they'd                                 like to see                                 so you can also check us out on our dvc                                 youtube channel all right um                                 any questions i think i think that's it                                 um                                 so yeah so the first question is an                                 important feature                                 that you can check out uh                                 at any given time and so how do how does                                 that translate                                 yeah um so you can do checkouts                                 um and so it will depend there is a                                 cache there's a cache and dvc                                 so that if you've basically if a version                                 is in your cache you should be able to                                 do a checkout without accessing the                                 remote                                 um and if it has never been on your                                 local workspace then it wouldn't be in                                 your cache and you would have to go to                                 the remote so basically if you have                                 if you've like cloned or the whole                                 project is in your repository in your                                 local workspace sorry                                 um then you should be able to check out                                 very easily no remote needed                                 um but if you've like copied someone                                 else's project                                 to your machine you would need to do                                 like a dvc pull                                 from their remote um but it's it's                                 pretty straightforward i mean as long as                                 you have access to the remote it's like                                 one command it's like dvc pull                                 um so i i hope that answers that                                 question but                                 um with regard to how checkout works                                 that it's                                 very similar to get it's modeled off git                                 so                                 it should be as identical as possible                                 another question is what size of data                                 can be                                 that data                                 yeah actually there is not there's no                                 technical limit                                 um you can go as big as you want i would                                 say that by the time                                 you're hitting a terabyte you might want                                 to explore some other systems                                 um you know tools like desk maybe um                                 so dvc is really optimal for data that's                                 in the range of like                                                                                                    gigabytes                                 um i mean you can do whatever you want                                 it's just limited by what kind of data                                 transfer                                 speeds you can live with                                 uh another question we can see before                                 these prevented                                 data science problems or can it also be                                 useful                                 yeah uh so i mean again you can do it in                                 any kind of ci cd pipeline                                 so if you use the the cml                                 library that we're showing here we                                 created basically some                                 authentication methods so that you can                                 you can hook up                                 your dvc remote storage to your github                                 actions or gitlab ci workflow                                 and so anytime that you need to access                                 like data sets or models that are in                                 cloud storage                                 this is one way to do it that offers the                                 high level syntax and some versioning                                 um so it's pretty flexible and even                                 though we've focused on machine learning                                 here i do think that                                 some of these tools are are quite                                 flexible for non-machine learning                                 type projects                                 yeah so this is something that right now                                 um there's not like snapshots                                 so that you are like deltas you know so                                 that you can like recreate                                 based on like oh it's just this old                                 version of data plus a little thing                                 every change will be stored as a new                                 version um entirely because of the way                                 that we do it with                                 content addressable addressable                                 versioning but um                                 you know so that's that's a feature that                                 we'd like to build in                                 um possibly in the future but yes right                                 now                                 you will it is not it's not super                                 storage efficient um                                 so yeah if you have a huge data set                                 anytime you change it it would give you                                 another copy                                 most people don't run into any problems                                 with that but i could imagine if you had                                 absolutely                                 very huge data that could get i could                                 get into something                                 [Music]                                 thanks everyone
YouTube URL: https://www.youtube.com/watch?v=bvbNOCtPfdQ


