Title: Talk: Going serverless with Django on AWS Lambda - Siddharth Goyal | extend()
Publication date: 2020-12-03
Playlist: PyCon India 2020
Description: 
	This talk was presented at PyCon India 2020 Online.

PyCon India is the largest gathering of Pythonistas in India for the Python programming language. The 12th edition of PyCon India took place online from 2nd October to 5th October 2020.

Talk Details: https://in.pycon.org/cfp/2020/proposals/going-serverless-with-django-on-aws-lambda~bqwpe/

Click here to subscribe to the PyCon India channel: https://www.youtube.com/user/inpycon?sub_confirmation=1
Follow PyCon India on Twitter: https://twitter.com/pyconindia
Follow PyCon India on Facebook: https://www.facebook.com/PyConIndia/
Captions: 
	                              i'm just waiting for                               yeah i think i think maybe we can start                               so uh siddharth goel is gonna                               talk about going serverless with django                               on aws lambda                               so over to you siddharth thank you                               so hello everyone uh as uh explained i'm                               siddharth and                               this the topic for our today's talk is                                going serverless with django on aws                                lambda                                so uh what you will see in this talk                                i'll be briefly talking about serverless                                computing why is it for you                                and the benefits disadvantages of it                                then we'll                                talk about deploying a web application                                in a serverless computing platform                                the things to look out for we'll have a                                live code demo for the same                                and to conclude i'll talk in brief about                                api gateways and their role in                                serverless deployments                                so let's get started serverless                                computing what is it                                so serverless computing platforms are a                                type of service offered by major cloud                                vendors like aws azure etc                                wherein the cloud provider manages the                                machine resources this is in contrast to                                a traditional service like say ec                                 server wherein we pre-provision the                                resources                                ourselves so why                                as we all know a lot of work in it has                                gone into                                ensuring that operating system hardware                                is abstracted so that developers can                                focus on writing                                business logic code serverless computing                                platforms are a manifestation of this                                and as we can see in this as we move                                from                                infrastructure as a service to say                                function as a service which                                we are talking right now more and more                                components of the stack                                are abstracted to the vendor and                                the serverless platforms today are                                mostly function as a service offerings                                wherein                                we as a developer only have to focus on                                writing the business logic code                                now one of the biggest points to note in                                serverless platforms is they are even                                event driven so unless uh                                only when they are requested an event is                                generated through which the serverless                                computing                                platform runs and it in theory                                downscales                                uh to zero so it has a lot of                                differences when we think of deploying a                                traditional web application like                                a web service or an api on a serverless                                platform we will be discussing                                these differences in this session later                                on now                                you might be wondering why should i                                bother with it like i'm fine with my                                docker containers                                so one of the biggest advantages of                                serverless computing is                                since more layers are abstracted the                                less you have to manage                                the only thing that we manage here is                                our business logic                                and secondly if your application                                has a lot of variance in terms of uses                                like it needs to upscale down scale                                a lot then again serverless computing                                platforms                                uh are very cost effective because we                                only pay for                                our current usage we do not p provision                                future                                uh usage right now but this is                                not always completely true for example                                uh like say if you have a very high                                usage without a lot of variance                                uh sustained uses then a traditional uh                                computing platform will be much cheaper                                than a serverless option                                so uh in today's talk                                we i'll be mostly demoing it the                                things on aws lambda but a lot of                                advantages disadvantages                                things to look out for are common across                                most of the offerings by different                                 major vendors so you should be able to                                 take learnings from here and                                 work with vendor of your choice                                 now what are differences in a                                 traditional or a serverless deployment                                 so                                 first difference is that you do not have                                 configs compute resources now                                 since you do not have fixed compute                                 resources your code has to be                                 has to ensure that it does not rely on                                 any of these for example                                 uh memory caching a lot of us                                 sometimes use memory cache in our web                                 services or                                 or in our apis because traditional                                 deployment the                                 service continuously runs but in a                                 serverless                                 computing environment the application                                 has the potential to completely                                 downscale and in that case                                 you will lose the memory's cache                                 similarly                                 a file system so since the                                 components are so abstracted by the                                 vendor we do not have access to like a                                 typical file system that we might have                                 in a                                 say a containerized deployment and                                 another difference which i think is                                 a big disadvantage of serverless                                 deployment would be                                 that the deployment strategy is a little                                 vendor specific                                 so what does what do i mean by that                                 again like say                                 for example i have a web application and                                 i have containerized it in docker                                 if i make a docker container i can                                 pretty much deploy two                                 kubernetes kubernetes offerings of any                                 major vendor without any issues                                 but in a serverless platform since                                 again the so many components are                                 abstracted by the vendor                                 each vendor has its own methodology                                 of how it takes that application and                                 runs it so deployment strategies have to                                 be tweaked for each vendor                                 now uh things to look out when                                 specifically making a web application so                                 as an example i'm using django but since                                 most python common web frameworks follow                                 wsj request response flow                                 you should be able to again use this                                 thing for say a flask application so                                 again the biggest disadvantage in my                                 view is that                                 traditional serverless platforms that                                 mostly do not provide the web service                                 gateway interface request response                                 object flow                                 as we all know uh like in a traditional                                 web application so                                 like when i say run i i make a django                                 web application and i say run server so                                 the endpoint that is exposed from from                                 the                                 browser or say your client to your web                                 service the                                 request is converted to a wsj request                                 and the                                 application returns a wsga response                                 the gateway acts like as a bridge                                 between your client                                 and the application so in a                                 django application on serverless                                 platform you will have to add another                                 layer between like the client                                 and your wsgi wrapper                                 uh another thing since again the                                 application has the potential to                                 downscale completely                                 so latency is a big issue here                                 you have to ensure that your application                                 starts as quickly as possible again this                                 is not an issue in traditional                                 deployment even if my                                 web app takes a minute to start it won't                                 be much of an issue                                 for this point also we have an example                                 coming up later in the session                                 uh a sample example so things you can do                                 to make it faster third point would be                                 uh linking to external services since                                 the again the platform has the                                 serverless platform deployment has the                                 ability to upscale and downscale rapidly                                 so if you have an external service like                                 say a database                                 those applications will make individual                                 connections a lot of individual                                 connections to that database and it                                 might                                 lead to performance issues there so you                                 need                                 and it's a good practice to have a proxy                                 between the                                 application and the database so that                                 proxy can manage the collection pooling                                 and                                 your database doesn't get clogged up                                 okay so now uh we'll start with the                                 code demo so                                 guys uh i have a simple web application                                 here uh it just has                                 it it has a single web page and it                                 displays data from                                 the nasa data api uh the                                 this one it's a free public api                                 so i'll just quickly walk you through                                 this application uh                                 anyone who is even a little familiar                                 should be at home with this                                 so uh we have two app modules the the                                 source folder has all the code by the                                 way                                 and we have two app modules sample and                                 stars                                 the sample app module uh contains                                 standard django files asgi.wha                                 file uh these files are wsji app                                 initializers                                 uh the urls.pi this is the base router                                 for the whole application and this if as                                 you can see i have just routed every                                 route to the stars app                                 uh the settings dot pi uh as xango                                 standard dictates this file contains all                                 the configuration                                 for the whole application this custom                                 storage.pi file this                                 is uh this is not a standard uh django                                 file and we'll look into it later why is                                 it here                                 now coming on to the stars application                                 so in here again uh pretty simple just a                                 single url                                 path the slash path reader                                 redirecting to the home page view                                 function                                 single view function home page view                                 function which just                                 uses this helper file to fetch data                                 to fetch data from nasa apis and                                 renders the home page html page with the                                 context data of that                                 so pretty straightforward and for a demo                                 purpose only                                 i have a single static file which is                                 just a logo                                 for the application now this is a very                                 simple and straightforward application                                 uh                                 i do not use any database etc and                                 if you see and i run it                                 so this is our application this is                                 uh astronomy picture of the day as told                                 by nasa one of their most popular apis                                 and this is just a windows plot                                 for the mars inside station for the last                                 available salt data which is sol                                     yesterday so as you can see a simple                                 django application i can run it very                                 simply                                 as you would any other django                                 application                                 okay                                 now we will uh go                                 and check aws console                                 okay so first i'll introduce you to what                                 is a simple lambda function                                 then we will connect it to an ava                                 gateway and then we'll                                 see what is that even thing that we have                                 been talking about from                                 the start so let's create a lambda                                 function say                                 icon live demo                                 run time is what language runtime you                                 want to run it in                                 let's select                                                            you are completely unfamiliar with aws                                 so                                 each service object like say this lambda                                 function                                 inherits a role and role has proper                                 permissions attached to it                                 permissions can be simply like ability                                 to access                                 s                                                                     permissions                                 so as you can see it gives a standard                                 boilerplate code for us                                 it's a simple lambda function.pi file                                 and                                 here we have the function which has two                                 variables taking event and context                                 let's log this event and see for                                 ourselves what is it                                 so i'll just save this                                 and we have successfully saved it                                 now let's connect it to an api gateway                                 uh for uh people who have not heard of                                 it                                 api gateway is simply as the name                                 suggests a gateway                                 through which you can link your external                                 environment say the internet                                 to your internal services like say a                                 lambda function                                 or you can use it to proxy pass to                                 another http endpoint etc                                 i'll again                                 name it icon live demo                                 we shall create it so as you would say                                 in                                 uh an nginx you would uh give routes                                 like for example                                 what to do when you get a slash route                                 you can specify                                 routes methods etc so let's create                                 any method like any method all out and                                 the integration type so as i was talking                                 it allows you to connect the external                                 environment                                 internet to an integra to a internal                                 service so you can have a lambda                                 function which we                                 use in our case an http endpoint an                                 internal vpc link etc                                 so let's select the live demo that we                                 just created                                 save it                                 and there we have it we have integrated                                 it                                 with that lambda function so thankfully                                 aws provides a console internally                                 to check out to like test this api                                 so i'll just make a simple get request                                 and we get a response hello from lambda                                 if we see here the code here is also                                 hello from lambda                                 now let's see what is this event that we                                 just logged                                 so this is these are the logs for this                                 lambda                                 we didn't                                 log it i think                                 okay yeah                                 okay so we have it i think it didn't                                 load it the first time i was scared                                 yeah so yeah so here we have the event                                 let me copy it                                 and prettify it for everyone's so that                                 everyone can see it easily                                 if i can just get it copy correctly yes                                 and that                                 so here we have it as you can see                                 it contains a lot of keys but                                 the things to note so it has a request                                 context key which has the path                                 and it has the method through which we                                 have called and if you were to make a                                 post request it would even have the body                                 and correspondingly if you see so it has                                 pretty much                                 every standard information that you have                                 in a http request                                 and it has all of these so what we have                                 to do to deploy our simple web                                 application to lambda as i told                                 we have to convert this event to a wsi                                 request                                 and then take a wsi response and return                                 it back                                 in a format that this understand which                                 would be this kind of format                                 so this is one of the trickiest part in                                 deploying a web application to lambda                                 properly converting this event to the                                 wsj request                                 again if you can do this you can deploy                                 like a flask application also because                                 that also uses the same standard                                 so now let's see here so                                 there's a thing called handler in a                                 lambda function this is basically what                                 file name you are                                 calling and what function in it it will                                 call                                 so as we can see here the file name is                                 lambda function and the                                 function name is lambda handler so on a                                 similar note                                 uh we have another file a lambda handler                                 file in                                 it the function name is also lambda                                 handler so what i do here is                                 i take the wsgi app                                 object import it from the django                                 application that we have                                 this is standard django application then                                 we create our own function which takes                                 this application the event that we get                                 from                                 lambda and returned the proper response                                 so now let's look at this function                                 so we come in here and                                 uh for those who are completely                                 unfamiliar with like                                 a wsj app let me go ahead quickly and                                 show you guys                                 yeah so what this function does it it                                 returns a wsj handler class                                 and if we just go here and check                                 so basically what it does is it                                 it has this properties for                                 the handler which loads your whole code                                 and takes this over                                 that class and returns the wsj response                                 so basically                                 what this will expect as a                                 parameter you can say is this environ                                 which represents like the request                                 information and the start response                                 which represents the response                                 information                                 so taking this knowledge again                                 here also we create our own response                                 object                                 and we generate the environment from the                                 event                                 this part is basically converting what i                                 told converting that even to whj request                                 format                                 and this part represents converting the                                 wsga response to                                 the standard response expected by lambda                                 this api gateway first let's look at                                 response this is very simple                                 so we have a start response class                                 therein we have this response function                                 which just                                 takes this output uh                                 as a variable as a parameter                                 this output would be what the wsj                                 response object                                 it passes it and converts it into a                                 format which is suitable for api gateway                                 and this again can be used like say a                                 flask application                                 now for the environ part so                                 here we have a function and in this                                 function we basically convert                                 we take that event body and convert it                                 into this format this is the standard                                 environment format or the request data                                 you can say in layman terms                                 which the wsji application expects                                 so herein i parse the headers                                 the path the body etc etc                                 so this is the code that basically                                 enables                                 us to run this application to a                                 lambda function and now deploying it to                                 lambda so                                 as i told the deployment is a little                                 tricky vendor specific                                 so how would you deploy so lambda expect                                 self-contained code block so what do i                                 mean by self-contained                                 code block is that you have your                                 requirements you have every file in                                 there                                 so this is a simple shell script which                                 allows us to deploy to lambda so                                 again very simple we go into the source                                 folder                                 we install the requirements in the                                 target                                 dot and target dot would entail that all                                 the requirements are installed in the                                 source folder itself                                 so that it can become self contained                                 block                                 we will look into later what this line                                 is for we make a zip file and we                                 upload it to the function                                 the function is icon demo test and                                 suppose                                 i run this                                 uh in the meanwhile we can check out so                                 in my repository i have                                 added a continuous deployment step using                                 github actions which does the same thing                                 so this                                 would be the configuration file for this                                 in here also if you see                                 it's quite simple we check out all the                                 code                                 we set up python                                                 a simple script which does what it again                                 installs                                 like updates with goes into that folder                                 installs requirements in that folder for                                 a self-contained package                                 we look into this line makes a zip                                 then there is this action which                                 basically takes that zip                                 and uploads it to the lambda function                                 so let's see if uh                                 is done yeah                                 so this was successfully updated                                 now let's see                                 yes that's updated                                                similarly uh i have made an api just                                 like we                                 uh saw right now this does what this                                 also                                 uh links to that api                                 here it is and it is deployed                                 live on the internet with the specific                                 stage                                 we should go here                                 and here it is so pretty straightforward                                 again                                 it's just converting that even to this                                 now another thing that we                                 saw that i talked about is reducing the                                 latency                                 so for you i have an example so                                 uh people who are familiar with content                                 hashing                                 so we will be doing that in django                                 so quickly if i can just tell what's                                 content hash is basically                                 uh suppose i open this url                                 and let me download it                                 yeah so this fetches some css jss files                                 and                                 if we see here this is the star image                                 that i showed you guys here in the                                 static files                                 this is that state same star image this                                 logo thing                                 but if we see the path the path has this                                 string like between the star image and                                 png                                 so this is content hashing it it is                                 basically a way                                 to invalidate static assets cache                                 now django has the ability uh to do this                                 by itself                                 there is this mixin which is called                                 manifest file mixing with django                                 storages                                 static files app itself has and                                 uh like say if we couple that with s                                  portal                                                    from the django storages package                                 what this does this allows us to                                 create a way through which we push                                 our static files to aws and serve them                                 through that place and as we see here                                 the                                 yeah sorry                                 so as we saw here this is from                                 s                                                                       when we                                 do this collect static command that we                                 saw this                                 saw here so what this does it takes all                                 the static files collects them to a                                 place                                 takes the content of those files makes a                                 hash out of it so if you change the file                                 the hash will be different and the                                 application will fetch the new file                                 itself                                 and makes this json file which is like                                 the manifest file                                 so django uses this file to                                 fetch to know like for suppose this path                                 i have to fetch                                 this api from the static file source                                 so traditionally what will happen this                                 file will also be pushed to actually                                 say that sorry to interrupt uh just a                                 time check                                 we just have about five minutes yeah                                 so however uh what i have done i have                                 overloaded these two                                 functions which are basically for                                 reading and writing the manifest file                                 and they write it into the local file                                 itself                                 so this manifest file becomes a part of                                 the package so                                 in a traditional deployment loading this                                 file won't be an issue when you start                                 the application but this reduces latency                                 by                                 a lot when we                                 make this file a part of the whole                                 package itself                                 so these are small small things that one                                 can do to                                 reduce the latency and it's very crucial                                 you do that in                                 uh serverless deployment next                                 i'll just conclude with a little bit                                 about api gateways so                                 as we saw the demo and the created we                                 the created gateway also api gateways                                 are just                                 the initiators of the event of a                                 serverless function                                 so there are of course multiple                                 available gateways from different                                 vendors some of them are even uh                                 open source like part of them are open                                 source like say kong                                 but the crux remains the same they all                                 have                                 the ability to call the static                                 to call the serverless functions but the                                 differences                                 arise in the events so unfortunately i                                 cannot show you the                                 event like a live demo of kong but                                 uh i have an event of it                                 i think somewhere                                 yeah so this is like the json of a kong                                 event                                 as you can see again we have similar                                 we have all the information for request                                 we just have to convert this one also to                                 a white request object                                 and our app will be able to run                                 so guys that's all from my site today uh                                 the code is available for publicly on                                 this                                 on my github and feel free to connect                                 with me on this you live chat or                                 through any of my social contacts thank                                 you                                 uh do we have any questions                                 yeah thanks that was a great session                                 yeah we do we do have questions                                 so there's one about lambda so                                 hey can we get access to the git repo                                 for this django aws lambda                                 i mean yeah experiment i guess here we                                 uh guys i'll shared it on julip uh for                                 everyone the repository is open                                 and the deployment pull request is also                                 open                                 anything else i guess there are a lot                                 more questions but probably you could                                 take them on zulip meanwhile ask you a                                 general question so                                 uh why did you go with aws why not you                                 know gcp or                                 azure                                 uh the basic difference is that uh                                 aws i thought was uh more familiar to me                                 but i have tried as your especially                                 azure has as your http functions                                 which make this converting or even json                                 to request                                 object a lot easier so there are of                                 course plus and minus of different                                 vendors                                 whatever you are comfortable with the                                 basics remain the same                                 that's that's nice to know and uh lambda                                 can in general be used for                                 any any kind of real time or near                                 real-time compute right                                 is that right yeah yeah so that also                                 again has a                                 whole new topic in itself like uh hot                                 scaling downscaling but                                 yeah you can                                 i see that's nice it was nice talking to                                 you uh siddharth and                                 uh i'm sure the audience really enjoyed                                 your talk uh very interesting                                 thanks a lot thank you everyone
YouTube URL: https://www.youtube.com/watch?v=t4P8tr6m0ns


