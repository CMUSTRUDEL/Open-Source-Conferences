Title: Talk: Revolutionize the Web with Python - Brython - Antriksh Verma
Publication date: 2020-12-03
Playlist: PyCon India 2020
Description: 
	This talk was presented at PyCon India 2020 Online.

PyCon India is the largest gathering of Pythonistas in India for the Python programming language. The 12th edition of PyCon India took place online from 2nd October to 5th October 2020.

Talk Detail: https://in.pycon.org/cfp/2020/proposals/revolutionize-the-web-with-python-brython~elYYg/

Click here to subscribe to the PyCon India channel: https://www.youtube.com/user/inpycon?sub_confirmation=1
Follow PyCon India on Twitter: https://twitter.com/pyconindia
Follow PyCon India on Facebook: https://www.facebook.com/PyConIndia/
Captions: 
	                              good morning everyone                               next thought is by anthrax the stage is                               yours                               um thanks um vipul                               um so                               good afternoon my fellow python easters                               and i'm assuming everyone can hear me                               um so good afternoon my fellow bison                               easters                                welcome to my presentation on                                revolutionizing the web with python                                bryson so the agenda for this talk                                includes an introduction to bryson                                an example of bryson in the browser and                                of course                                bryson under the hood and lastly                                comparing and contrasting javascript in                                python                                and then we can have a small q and a                                session if you guys have questions                                so who am i i'm a passionate tech                                enthusiast who loves                                software and enjoys learning new                                technologies                                i'm a professional full stack django                                developer with over two years                                of experience in python                                so let's take a look at an introduction                                to bryson                                so first of all what is bryton so                                bryson is this javascript library and                                yes it's a javascript library                                right it's a javascript library which                                um transcompiles your python source code                                which you write right and it is                                this implementation of python                                         browser                                now most of you would have questions                                that how do you actually write this code                                where do you write this code and how do                                you transcompile it like is there a cli                                tool                                or is it built in the browser well i'm                                going to answer all that questions um                                later in the presentation so but now it                                is this                                javascript library which runs bison                                allows you to write python code and                                transcompile it                                and run it in the browser                                so why bryson you know why don't you                                just use javascript                                well bryson because first of all                                you have access to python and its                                friendly syntax and who doesn't love                                python                                right and of course to use bison for                                numerical computations right                                and then of course for uh many                                javascript problems can be avoided                                like global variables function scopes i                                mean                                who likes where keyword like you've got                                let keyword cons keyword wire keyboard                                what's the difference between all of                                them                                and the most annoying thing in                                javascript is the difference between                                triple equals and double equals i mean                                what does it mean                                right if you're writing an if statement                                it's just impossible to work with triple                                equals and double equals                                and i know many javascript developers                                out there agree with me                                so let's take a look at some previous                                attempts at python in the browser                                right for those of you who are thinking                                well maybe bryson is the only one                                no there are many more but i'm just                                highlighting                                four of them here so the first on our                                list                                is biodiet by mozilla so pio died                                is i think the best known                                attempt out of these four because it was                                an experimental project by mozilla                                to create a full data science stack in                                the browser                                yes i repeat in the browser full data                                science stack                                for python and of course                                then there was sculpt right which is a                                javascript implementation of python                                     the browser                                and yeah python                                                        and then there was pipe.js which is                                basically                                a javascript library which runs pi pi                                 source code for those of you who don't                                 know what piper is                                 it's this bison implementation aimed at                                 making python faster so it's basically                                 python                                 but much faster and then there's                                 transcript                                 which is a cli tool which allows you to                                 run                                 and compile python to javascript                                 now this is a graph of um                                 uh of an insight into python in the                                 browser right it                                 shows you all the different things we                                 talked about here                                 right let me get the pointer so all                                 these which we talked here                                 so this graph shows you basically all                                 those                                 based on their compile time and how they                                 work so                                 the first thing which comes to mind is                                 this is one group                                 this is another group where's bryson                                 alone                                 well this alone this uniquely less                                 unique uniqueness in bryson is what                                 makes                                 it i think the most successful python                                 attempt at python in the browser yeah so                                 as you can see um these are ahead of                                 time this                                 uh compiles on page load and this                                 compiles after page load                                 so bryson we're gonna see how this on                                 page load compilation time                                 affects bryson and its effectiveness in                                 python in the browser but for now                                 um it does not mean right this graph                                 shows                                 you different compile times and                                 different                                 um python in the browser's attention                                 python in the browser but this                                 this does not mean that sculpt or pi                                 hydrogens or pyro died                                 were failures no this shows you that                                 biodiet was                                 um it shows you that these are not that                                 effective                                 in the browser but in a general case                                 scenario bryson is                                 um i'd say i'd my preference but bryson                                 would be my preference at                                 an attempt at python in the browser but                                 if you of course want to use something                                 for                                 data science then biodiet would be your                                 go-to if you want to run pi                                 pi then pipette or js would be your go                                 to so this does not mean all these                                 attempts at                                 python in the browser do not mean that                                 um                                 transcript sculpt all these were                                 failures no they just mean that they                                 are useful in some other scenarios right                                 so let's                                 talk more on verizon right let's get                                 back to bryson so                                 to get started with verizon you can use                                 the cdn right                                 or you can install it on your local                                 machine using npm                                 or pip but for the purposes of this talk                                 i am gonna use the cdn for those of you                                 who                                 want to use npm or pip you can refer to                                 the                                 bryson documentation the bryson official                                 website is                                 bryson dot info                                 so let's take a look at an example of                                 bryson in the browser now this                                 i think is the most awaited um                                 this is the most awaited most                                 awaited thing of the talk so here as you                                 can see i have the small website                                 web application small web                                 thingy so as you can see                                 i've got these buttons i've got the save                                 jokes right                                 so what this does is that this is the                                 random programming jokes generator so i                                 can click on this button                                 and it's gonna generate a joke for me                                 yeah so it did so as you can see it                                 takes some time in the first time                                 and it generated that joke for me i can                                 save that joke now it does not save it                                 and show you in real time but i can                                 reload my jokes                                 to see it still there right it's the                                 same thing why did the                                 javascript heap close shop it ran out of                                 memory i don't get it but it's still the                                 same thing                                 so now i can generate another joke and                                 you'll see this nice loading effect                                 right                                 you see that in for those of you who                                 know what ajax is you see that in                                 asynchronous javascript and xml                                 applications ajax applications                                 for those of you who don't know there's                                 no necess you don't need to necessarily                                 know it                                 right but it's good so um again you know                                 i cannot say                                 you know if i don't want i can't i can                                 also not save this joke and generate                                 another joke                                 so this is basically doing something                                 called as ajax right                                 which i told you about so i like to call                                 it abax because this is                                 asynchronous bryson and xml right                                 because all this is bryson core                                 and to show you what i actually mean by                                 that                                 i can go to elements as you can see                                 i've got a bunch of code here like these                                 are this is html code                                 but here in body if you'll see there's                                 this onload is equal to brighton so                                 the first thing that's going to catch                                 your attention is what is this on load                                 is equal to bryson                                 right so this is the bryton function                                 right which we're going to take a look                                 at what does this mean                                 right what does this represent what does                                 this actually allow you to do you want                                 to take a look at that later but                                 for now what you need to really see is                                 this                                 right now now i know what you're                                 thinking there's a script tag                                 and first of all that script tag has a                                 type of text python                                 second of all this code is not                                 javascript because                                 what goes inside a script tag is                                 javascript i know that                                 but since i'm using bryton i need to                                 specify                                 type of text python and i can write and                                 i can                                 then write this javascript code that's                                 it's that simple i can                                 create a script tag write type is equal                                 to text slash python                                 and write in all my code so you can see                                 it's python code it's pure python i've                                 got the python import statement                                 python def keyword functions right                                 now i know some of you would be amazed                                 some of you will be like okay this is                                 cool                                 so as you can see i've got cdn so as i                                 told you in the                                 bryson introduction slide that this um                                 how you actually write by bryson code is                                 by                                 writing it in your normal code editor as                                 you would do                                 um and then you copy the cdn links                                 right you can get this from the bryson                                 info bryson website as i told you                                 bryson.info                                 and from there you can copy and paste                                 these cdns                                 right and what you can do is specify                                 this onload function                                 of bryson and we're gonna see its                                 significance in our code                                 and then you can write your normal html                                 and go ahead and make a script tag                                 with type of text python right and write                                 in your python code so we're gonna take                                 a look at how                                 do we write this code what does this                                 code mean what are the pricing functions                                 what is this browser module right um                                 and then of course we've got this file                                 here local storage.bri                                 i know many of you are thinking what                                 does this                                 file is what this file is what is this                                 file what is this dot braai extension                                 well some of you may have known um may                                 have got the answer dot braai                                 represents bryson and on the bryson um                                 info website it says that the official                                 bryson                                 um extension is dot bry right so for                                 those of you who had that question                                 it's a dot drive file and i can simply                                 say script                                 again type text python and                                 make source local storage or dry                                 and you know i can i can actually                                 convert this to a js file                                 you know i can just do that                                 it's that simple it will still work i i                                 already                                 tried that it worked right um                                 but let's come back here now another                                 thing i want to show you                                 is quickly is this                                 you might think that okay this this                                 saved you know this saved my joke but                                 what if i'll refresh my website you know                                 or close my window                                 close my tab what will happen then well                                 this is your answer it will still                                 save your jokes how does that happen                                 well some of you would know the answer                                 some of you want                                 for those of you who know this yes we                                 are using local storage                                 right those of you don't we are using                                 local storage                                 so if you run a chromium based browser                                 go ahead open                                 your dev tools you know go ahead and go                                 to any website                                 um open your dev tools and then go to                                 application tab                                 you know application it would be                                 somewhere here and then you'll see                                 something like                                 this page click on this drop down get                                 this and you'll see this                                 beautiful key value pairs table kind of                                 thing                                 right so this is the local storage local                                 storage is simply                                 um you're in browser storage which                                 allows you to save                                 some key information in your browser                                 right and this allows you to                                 save some important information which                                 you'd want to reference                                 in your websites so i'm using local                                 storage and                                 local storage saves those information in                                 key value pairs                                 right so what i'm doing here is saving                                 it in the key of id                                 and value of the joke right and then i'm                                 referencing it over here                                 we're going to look at how do we do how                                 we work with                                 local storage right but for now you just                                 need to know we use local storage here                                 i can delete an item also i just press                                 the delete key for those of you who are                                 wondering what did i do                                 reload that boom gone it's that simple                                 now i can also do something like                                 why did the icing keep closed shop                                 i don't understand that let's reload                                 that boom                                 it's python now so this is basically                                 local storage right it's some local                                 storage stuff                                 um i am not going to go too deep into                                 local storage but                                 um most of you may have made the                                 connection between local storage and                                 dictionaries and yes                                 they have a connection we're gonna look                                 at that connection and look at                                 look at its significance in verizon but                                 for now                                 let's go back to our slides let's go                                 back to the code that we're gonna write                                 right                                 right so let's take                                 a look at the code we're gonna write                                 woohoo                                 so selecting elements now for those of                                 you who know what the dom                                 is great for those of you don't document                                 object model or dom you guys can                                 research it                                 dom is simply just um this                                 your html document right that in                                 um in a nutshell is the document object                                 model right                                 all of your the tree right the html tree                                 you have                                 that is the document object model and                                 there are there's a lot of things that                                 comes under this concept of dom so you                                 can research it                                 but um let's take a look at some dom                                 operations we can do with                                 python so the first one is of course                                 um selecting elements for those of you                                 who work with javascript or                                 in the client side you know that                                 selecting elements is the most basic dom                                 operation                                 so i've got two code snapshots here                                 right                                 this one right here so                                 this one right here is uh the bryson                                 um the bryson code and this one is how                                 you would do the same thing but in                                 javascript right                                 because i'm just comparing and                                 contrasting javascript right here                                 so i've run this python import statement                                 you know it's very pythonic you all know                                 this code                                 then i say data is equal to document in                                 square brackets plus the id of the                                 element                                 right id of the element refers to the                                 html element you want to select                                 the id attribute of that html element                                 right                                 and then this code here the javascript                                 part                                 is basically how you would do the same                                 thing in javascript using the get                                 element by id function right so this is                                 essentially how you would select an                                 element                                 let's move on and talk about some more                                 selectors because                                 it would be a hassle if you can only                                 select                                 an element by the id because what if you                                 want to select all the elements with the                                 tag of form                                 right then you'd have to give each form                                 an id                                 and in large scale web applications it                                 would be very tough                                 so um we can use a select function which                                 again                                 from browser import document and we can                                 just say document.select                                 save it in a variable we just select an                                 element so you can pass in any selector                                 you want                                 like dot foo hashtag container                                 a square brackets title right pass in                                 any selector                                 um css selector jquery select normal                                 html selectors which you have you know                                 adding and removing classes now this is                                 um a very um useful um                                 useful dom operation adding and removing                                 classes                                 so what we can do here is this is how                                 you do                                 how you would add and remove classes in                                 javascript and for those of you who know                                 javascript                                 this is how you would do that                                 now can you guess how you could do this                                 uh the same thing in bryson now                                 for those of you who don't know just                                 take a guess                                 com put it uh in the chat because i                                 can't read the chat                                 but go ahead put it right um                                 and this is how you do it in bryson                                 it's exactly the same there's no                                 difference you know there's no                                 difference                                 when i got to know about this i was not                                 shocked but i was intrigued                                 at how um how excellent                                 bryson is because it's exactly the same                                 and in fact i just                                 copied this code snapshot and just                                 mirrored it and put it down here you                                 know i didn't have to do much work                                 and it's exactly the same so                                 you know yeah it's exactly the same so                                 we have an element and then we have a                                 class list and then we can say add                                 remove so add and remove functions um                                 they are a part of the class list which                                 is basically just                                 um a list of all the classes on this                                 element                                 and remember this element is um                                 this right this data this when we                                 selected this                                 um element right this element refers to                                 that                                 and then we can just say dot class list                                 dot add and the class name which we want                                 to add                                 in the class name we want to remove                                 right                                 then um we can move on to creating and                                 pending dom elements this is                                 another very important dom operation                                 which you would do                                 right so again we want to run our handy                                 import statement from browser                                 import html right and then                                 we can just say new development or                                 whatever you want to name the variable                                 is equal to html                                 which is the we what we have                                 imported right now we can say dot div                                 and                                 note here note notice this div                                 right this function day first of all the                                 first thing to note here is that                                 the tag we want is in capitals                                 the second thing is that the tag we want                                 to create the                                 element we want to create is being                                 referenced as a function                                 and yes we have to reference it as a                                 function                                 and then we have to pass in the um                                 attributes we want in that element                                 as arguments right so if you want this                                 new div element which i want                                 if i want to pass in a class of new div                                 so i can just                                 pass an argument of new div and say                                 class is equal to neutral                                 right i can do the same with id pass in                                 id                                 is equal to unique neutral and appending                                 an element                                 is super simple html dot li i just                                 create an                                 element because i need two elements or                                 two participants in appending an element                                 so i use this less than equal to sign                                 and i put my new development                                 so this less than equal to sign just                                 means that we are adding content because                                 many people get confused                                 what this actually about what this                                 actually means because                                 you know i myself have seen have seen                                 many                                 google groups many telegram groups                                 and many people discussing about                                 what does this less than equal to sign                                 really mean                                 right and really it's it's it's a hassle                                 people are like                                 why why do they use this                                 thing well they use this and um                                 we can't negotiate we just have to use                                 this so we just say less than equal to                                 and our element which we just created                                 boom                                 we appended the element next                                 the html module tags this is the html                                 module                                 right so these are the html                                     the html                                                                a tag and you don't need to remember all                                 of them right these are the normal tags                                 which you would have in an                                 html document most of these you won't                                 even use                                 like q or s or samp                                 i haven't even heard of them so                                 that's that you can find these on the hd                                 on the bryson documentation bryson.info                                 and the html module tags for html                                        are the html                                       there are also html                                          and if anyone is asking this question                                 that is this                                 talk sponsored no it's not i'm just                                 making this talk because i want to                                 it's not sponsored so adding and                                 deleting items from local storage now                                 this is                                 what we talked about now here i'm going                                 to first of all point out the                                 significance between                                 local storage and dictionary and how                                 that actually                                 you know works with bryton and secondly                                 i'm also going to talk about                                 the importance of local storage right                                 local storage is really important                                 because                                 you know if you're on facebook or any                                 website and there's                                 dark and light board right or different                                 themes                                 you know you click on that moon button                                 and it becomes dark                                 right that that works because of local                                 storage                                 right when you go to your facebook                                 account you know try this out                                 if you haven't already go to your                                 facebook account click on your dark mode                                 or light mode then go to your                                 dev tools check it out in local storage                                 boom                                 it would be there right that theme there                                 would be like a key of theme and then a                                 value of dark or light right                                 do this then you'll understand how local                                 storage is used in                                 what context it is used in what projects                                 it's used                                 so um again we want to run our                                 handy import statement from                                 browser.local underscore storage import                                 storage                                 then we can just storage and in                                 square brackets pass the item                                 key key foo write the item key                                 which is for here and give it a value of                                 bar for those of you who know how                                 dictionary                                 dictionaries work you know that passing                                 in that this item                                 right this key our dictionary is going                                 to check                                 our storage and storage is basically our                                 local storage and it's the dictionary so                                 you can see how it connects                                 how easy it is for working with local                                 storage so this is the                                 relation i was pointing out to the                                 helpfulness and the ease                                 of working with local storage so storage                                 um square brackets                                 full is equal to bar so for those of you                                 who know how dictionaries work you know                                 that                                 um it's gonna check if there's an item                                 if there's a key by the name of foo and                                 if it's not it's gonna create                                 and give it this value of bar                                 and then we can just use the dell                                 keyword and say storage square brackets                                 foo it's that simple we just                                 learned how to add and delete items from                                 local storage                                 you literally created half of what i did                                 in my pres in my random programming                                 jokes generator right it's that simple                                 now another alternative for people who                                 don't want to                                 use this super easy method                                 somehow no problem bryson has got you                                 covered                                 again from browser.local underscore                                 storage just run that import statement                                 and then storage dot set item set items                                 up function                                 it takes in two arguments foo and bar                                 and it says okay set item foo bar                                 who here is the key bar is the value and                                 it sets that item creates that item                                 and deleting that item from storage is                                 super simple storage                                 dot remove item foo now foo again                                 is the key here and boom that's it you                                 remove the item so                                 that's that um so let's move on to                                 next to the next part of this                                 presentation                                 bryson under the hood so this is                                 probably                                 not the most compulsory part right the                                 most                                 important part but um                                 but this is i'm i think vital to                                 understand                                 because how bryson works right many                                 people would have this question                                 of such a tech for such a technology so                                 it's quite simple                                 um there's this transpiler or this trans                                 compiler                                 called py                                                  javascript library which converts python                                 to javascript                                 right and python uses this transpiler to                                 actually transpile the python code we                                 write sorry                                 yeah now it's                                 now to outline to sum everything up in a                                 nutshell bryson works in three steps                                 right and i'm not gonna end my                                 presentation here i'm going to explain                                 um these steps but the first step is the                                 starter function bryton                                 so we oops                                 we looked at that bryson function here                                 so this                                 is compulsory this is like                                 compulsory so as you can see as resource                                 and its dependent resources                                 have finished loading right this thing                                 so this basically means when your page                                 loads when everything is loaded                                 then we need to run the bryson function                                 right and what does this python function                                 do it it                                 looks at everything in this html page it                                 looks if                                 everything in this html page has a                                 script tag                                 in the script tag it checks if it has a                                 type and then it checks if the type is                                 text                                 python right                                 we have four minutes remaining oh okay                                 so just check that text                                 python great this is the python source                                 code right                                 we just looked at this code great now                                 let's move on                                 then we've got uh then it reads the                                 python source code inside that                                 um script tag and then it runs an eval                                 function which                                 executes the javascript now                                 i've written in parentheses avoids                                 memory leaks in some browsers yes it                                 does                                 so when it executes the javascript on                                 page load                                 now i was talking about some benefits so                                 i meant avoiding memory leaks and some                                 browsers                                 so this is vital because um a memory                                 leak                                 is basically when you don't collect all                                 the                                 uh unused variables which are now                                 garbage                                 right all the unused variables and they                                 just take all that memory they just                                 soak it all in and because of that                                 there's there are memory leaks                                 browsers can experience memory leaks so                                 let's continue so let's talk about this                                 second step in detail                                 right so first of all there's this main                                 script                                 pi                                                    which basically um has this pi to js                                 function which                                 translates your source code and then                                 there's this function                                 which calls the tokenizer this function                                 tokenize is inside the pi                                               and what this tokenized function does is                                 that it tokenizes everything so for                                 those of you don't know what a token is                                 a token is the most basic representation                                 of a source code                                 so it can be something like an                                 identifier a keyword                                 a plus an equal to sign anything                                 now this tokenizer builds a tree an                                 abstract syntax free and abstract syntax                                 tree or                                 asd is just a syntactic representation                                 of the source code a tree representation                                 of the source code sorry                                 so this tree is made of instances of the                                 class node forget about this                                 little dollar sign here it's just it has                                 different nodes                                 right and um each instance of node is                                 created for each statement this                                 basically means                                 that each statement we have here of code                                 right each node is built for each                                 statement                                 that's what it means and for each                                 statement or for each node in this case                                 is a context right and                                 then translation to javascript now this                                 is                                 basically this part but in                                 a bit more explanatory manner so                                 two minutes okay it's basically the same                                 thing                                 a tokenizer reads the tokens in the                                 source code it passes them to the                                 abstract syntax tree                                 for the code and then based on the code                                 it raises the syntax error                                 or an indentation error and yes you do                                 get those errors                                 and then the tree is modified based on                                 your line number and script name                                 and then you know additional nodes are                                 added based on that um                                 and then the transform tree supports a                                 method                                            returns the javascript code now i'm not                                 gonna go into the comparison of just                                 within bryson                                 like i was talking about the code here                                 you know i had the code here but                                 let's just dis uh talk about some                                 features of writing and limitations so                                 bryson has an excellent dom api we                                 looked at the dom api                                 it has support for core python packages                                 and modules for those of you who don't                                 know uh who                                 don't know here we also imported json                                 here                                 and it also has support for javascript                                 libraries like jquery and vue.js                                 and phasor.js and                                                     you can                                 go to the bryson documentation it                                 compiles the python code right there in                                 the browser as soon as the body loads                                 which executes javascript and it                                 increases its                                 efficiency and of course it is still a                                 developing library                                 no one knows what can happen to it right                                 no one knows what the output will be                                 what it will result in in a few years                                 and the main limitation which i feel                                 the only limitation for bryson is that                                 um                                 bryson is very very slow right it has                                 some performance issues but                                 that those performance issues are                                 covered by the fact that                                 um it executes javascript right there in                                 the browser                                 and it increases its efficiency                                 right so that in a nutshell is all about                                 bryson                                 right um there aren't many limitations                                 but                                 javascript is a much better language is                                 a is                                 a much better technology than bryson                                 which i can still say because                                 javascript has a lot of support a ton of                                 support and it has                                 a lot of libraries which basically just                                 increases                                 uh over overlooks bryson and it's not                                 that gryson is bad                                 it's just that javascript has at a                                 really high bar for the client side                                 for client-side scripting but bryson is                                 excellent for small                                 scale applications for small level                                 applications                                 and uh that's it citations                                 um thank you um
YouTube URL: https://www.youtube.com/watch?v=0iTVJGgXGio


