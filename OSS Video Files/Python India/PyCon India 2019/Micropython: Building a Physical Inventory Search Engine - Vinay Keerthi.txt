Title: Micropython: Building a Physical Inventory Search Engine - Vinay Keerthi
Publication date: 2019-11-16
Playlist: PyCon India 2019
Description: 
	This talk was presented at PyCon India 2019, on Oct 12th - 13th, at the Chennai Trade Centre.
Website: https://in.pycon.org/2019
Captions: 
	00:00:04,600 --> 00:00:10,900
hi can everyone hear me great

00:00:08,830 --> 00:00:12,700
my name is Vinay Keerthi and I'm going

00:00:10,900 --> 00:00:15,190
to talk well I'm going to talk about

00:00:12,700 --> 00:00:16,960
micro Python then I'm going to talk

00:00:15,190 --> 00:00:20,980
about a project I did for myself I call

00:00:16,960 --> 00:00:24,429
it shelfie and long story short I have a

00:00:20,980 --> 00:00:25,689
bookshelf and it runs on Python there

00:00:24,429 --> 00:00:27,789
are two kinds of reactions I get

00:00:25,689 --> 00:00:29,109
whenever I tell people this usually they

00:00:27,789 --> 00:00:31,210
mean they say what do you mean your

00:00:29,109 --> 00:00:32,800
bookshelf rants Python they ask if I

00:00:31,210 --> 00:00:34,210
have way too much time whether my

00:00:32,800 --> 00:00:36,640
company is paying me for doing my own

00:00:34,210 --> 00:00:38,950
personal work or if I'm working all ik I

00:00:36,640 --> 00:00:40,870
am but that's a different point

00:00:38,950 --> 00:00:43,210
some of them say oh and then they go buy

00:00:40,870 --> 00:00:44,770
their own way trust me I've had even

00:00:43,210 --> 00:00:46,469
interviewers ask me what the hell I mean

00:00:44,770 --> 00:00:50,020
when I say my bookshelf runs Python I

00:00:46,469 --> 00:00:51,640
own over 1,000 books logistically

00:00:50,020 --> 00:00:55,510
speaking this is a very big problem for

00:00:51,640 --> 00:00:57,460
me it's really hard to keep count once I

00:00:55,510 --> 00:00:58,989
cross 250 I knew that I had a problem a

00:00:57,460 --> 00:01:01,300
problem that was not really easy to

00:00:58,989 --> 00:01:03,850
solve and it doesn't help that I'm not

00:01:01,300 --> 00:01:06,490
really that organized people have told

00:01:03,850 --> 00:01:08,050
me several things they said could you

00:01:06,490 --> 00:01:10,119
not use physical notebooks to track what

00:01:08,050 --> 00:01:13,240
books you have I don't want to carry

00:01:10,119 --> 00:01:15,460
them around they said do you want don't

00:01:13,240 --> 00:01:18,220
you have spreadsheets and I said boo I

00:01:15,460 --> 00:01:20,470
don't want to use Excel or and Google

00:01:18,220 --> 00:01:23,290
sheets on the phone is a nightmare then

00:01:20,470 --> 00:01:24,850
there is Goodreads honestly I will have

00:01:23,290 --> 00:01:26,350
I have a few choice words I would like

00:01:24,850 --> 00:01:27,850
to say to Amazon about the Goodreads API

00:01:26,350 --> 00:01:29,380
it's really horrible

00:01:27,850 --> 00:01:31,180
there is library thing which is really

00:01:29,380 --> 00:01:33,970
good but you have to pay once you hit

00:01:31,180 --> 00:01:37,240
the 250 books limit I've tried them all

00:01:33,970 --> 00:01:39,880
and I also own a lot of tech I own

00:01:37,240 --> 00:01:42,610
several raspberry PI's several of these

00:01:39,880 --> 00:01:46,509
tips which I'll be talking about a lot

00:01:42,610 --> 00:01:47,680
of LEDs and more as berry pies I don't

00:01:46,509 --> 00:01:49,090
know what to do with them I keep

00:01:47,680 --> 00:01:52,570
ordering a lot of electronics I have a

00:01:49,090 --> 00:01:55,000
hoarding problem so I ended up with a

00:01:52,570 --> 00:01:56,680
slightly over engineered problem not

00:01:55,000 --> 00:02:00,040
exactly the kind you would you would

00:01:56,680 --> 00:02:02,439
find at someone's house but then there

00:02:00,040 --> 00:02:04,770
is this my bookshelf runs this entire

00:02:02,439 --> 00:02:04,770
stack

00:02:05,310 --> 00:02:27,690
so what did I do very simple terms let

00:02:12,720 --> 00:02:30,800
me show you this I mean when I asked it

00:02:27,690 --> 00:02:37,260
for a book it tells me where the book is

00:02:30,800 --> 00:02:39,870
how this way I points a book or series

00:02:37,260 --> 00:02:47,100
of books and it tells me where my books

00:02:39,870 --> 00:02:49,680
are how did I do this well it was one

00:02:47,100 --> 00:02:54,600
part easy and two parts insane where's

00:02:49,680 --> 00:02:56,190
my mouse again yeah Micro Python if you

00:02:54,600 --> 00:02:59,570
listen to Jake wander classes keynote he

00:02:56,190 --> 00:03:02,070
said this is era of a zoom on Titan I

00:02:59,570 --> 00:03:04,739
have another point to make this is the

00:03:02,070 --> 00:03:06,570
era of Python on embedded devices until

00:03:04,739 --> 00:03:11,760
now if you wanted to program on a tiny

00:03:06,570 --> 00:03:13,590
chip you have to use C see I have a

00:03:11,760 --> 00:03:15,720
friend who likes to say C is the only

00:03:13,590 --> 00:03:18,180
real programming language I say boohoo

00:03:15,720 --> 00:03:19,650
we applied the NIST s I want to quote PI

00:03:18,180 --> 00:03:22,590
that even on our tiny I want to call

00:03:19,650 --> 00:03:25,140
Python on my washing machine so what is

00:03:22,590 --> 00:03:27,720
micro Python micro Python is Python for

00:03:25,140 --> 00:03:30,900
microcontrollers seriously you can code

00:03:27,720 --> 00:03:32,940
Python on a very tiny chip how tiny it's

00:03:30,900 --> 00:03:35,160
so tiny that I can carry two of them

00:03:32,940 --> 00:03:37,860
with me everywhere I go I never leave

00:03:35,160 --> 00:03:40,760
home without my micro Python chips and

00:03:37,860 --> 00:03:43,799
the subset of micro Python that runs

00:03:40,760 --> 00:03:46,290
includes most of the C Python libraries

00:03:43,799 --> 00:03:47,579
it is syntactically similar there's a

00:03:46,290 --> 00:03:49,769
little more than electronics knowledge

00:03:47,579 --> 00:03:50,220
that you would need so how do you get

00:03:49,769 --> 00:03:54,510
started

00:03:50,220 --> 00:03:56,400
you buy one of these ships all the links

00:03:54,510 --> 00:03:58,140
will be available later to you you flash

00:03:56,400 --> 00:04:01,230
the microphone by thand firmware on them

00:03:58,140 --> 00:04:02,760
and what do you do there is this thing

00:04:01,230 --> 00:04:05,459
I've noticed about people who have own

00:04:02,760 --> 00:04:07,079
raspberry PI's a lot of developers own a

00:04:05,459 --> 00:04:08,190
Raspberry Pi and you ask them what are

00:04:07,079 --> 00:04:10,010
they doing with it it's probably

00:04:08,190 --> 00:04:12,269
gathering dust on their shelves

00:04:10,010 --> 00:04:14,280
similarly with micro Python a lot of

00:04:12,269 --> 00:04:16,080
people buy the micro Python boards and

00:04:14,280 --> 00:04:18,660
they don't really use them for anything

00:04:16,080 --> 00:04:20,340
they use them once or twice and then

00:04:18,660 --> 00:04:22,289
they're like ha this was a fun side

00:04:20,340 --> 00:04:24,750
project how do i productionize this they

00:04:22,289 --> 00:04:27,960
have no clue this is how the production

00:04:24,750 --> 00:04:30,960
is the entire thing step 1 the node MCU

00:04:27,960 --> 00:04:32,789
the node MCU is the easiest micro Python

00:04:30,960 --> 00:04:35,190
board you can you can get anywhere in

00:04:32,789 --> 00:04:37,320
the world you can go to

00:04:35,190 --> 00:04:40,590
Aliexpress or you can go to Amazon and

00:04:37,320 --> 00:04:42,600
buy them they cost less than 4 euros you

00:04:40,590 --> 00:04:45,240
can get them for anywhere from 140

00:04:42,600 --> 00:04:49,290
rupees to 500 rupees depending upon your

00:04:45,240 --> 00:04:50,700
luck let's sale the chip has many pins

00:04:49,290 --> 00:04:51,600
which you can use if you are coded on

00:04:50,700 --> 00:04:54,660
the Raspberry Pi

00:04:51,600 --> 00:04:56,400
you've heard of GPIO pins the GPIO pins

00:04:54,660 --> 00:04:58,890
are the pins which you can control you

00:04:56,400 --> 00:05:05,700
can do a lot with these pins and well

00:04:58,890 --> 00:05:09,330
I'll show you what I do then the node

00:05:05,700 --> 00:05:13,110
MCU this is the spec esp8266 is a Wi-Fi

00:05:09,330 --> 00:05:14,580
socket on chip what it does is it

00:05:13,110 --> 00:05:16,290
basically gives you something very

00:05:14,580 --> 00:05:18,270
similar to a nod you know with Wi-Fi

00:05:16,290 --> 00:05:19,800
inbuilt into it it runs low

00:05:18,270 --> 00:05:21,510
out-of-the-box Lua is a very nice

00:05:19,800 --> 00:05:23,490
scripting language which is mostly

00:05:21,510 --> 00:05:26,160
familiar to people who have been hacking

00:05:23,490 --> 00:05:27,630
around Civilization 6 you can install

00:05:26,160 --> 00:05:30,180
micro Python as I've been touting for

00:05:27,630 --> 00:05:32,790
the last few minutes and it supports the

00:05:30,180 --> 00:05:35,610
two gigahertz Wi-Fi band it has 128

00:05:32,790 --> 00:05:37,050
kilobytes of RAM and 4 mb of ROM trust

00:05:35,610 --> 00:05:39,870
me that makes a huge difference when

00:05:37,050 --> 00:05:42,140
you're coding Python and it uses a USB

00:05:39,870 --> 00:05:44,910
interface the biggest problem with

00:05:42,140 --> 00:05:46,680
coding on embedded devices is learning

00:05:44,910 --> 00:05:48,840
to deal with the serial port but this

00:05:46,680 --> 00:05:51,660
board solves the problem for you it uses

00:05:48,840 --> 00:05:55,650
the USB port and like I said it's

00:05:51,660 --> 00:05:58,110
extremely cheap so how long does it take

00:05:55,650 --> 00:06:00,750
to actually run micro Python or install

00:05:58,110 --> 00:06:02,820
micro Python it doesn't take very long

00:06:00,750 --> 00:06:05,010
you think it to take few minutes

00:06:02,820 --> 00:06:07,620
it's lesser than that at 60 seconds it's

00:06:05,010 --> 00:06:08,850
so easy to install micro Python that all

00:06:07,620 --> 00:06:12,420
you need to do is create a virtual

00:06:08,850 --> 00:06:15,240
environment pip install ESP tool then

00:06:12,420 --> 00:06:18,330
source your virtual environment I use

00:06:15,240 --> 00:06:21,210
the ESP tool command to fluff to format

00:06:18,330 --> 00:06:23,100
your micro Python bold flash the micro

00:06:21,210 --> 00:06:25,620
Python firmware onto it using a very

00:06:23,100 --> 00:06:26,850
simple command and within a few seconds

00:06:25,620 --> 00:06:28,890
you have the micro version ripple

00:06:26,850 --> 00:06:30,960
available to you and it's the ripple we

00:06:28,890 --> 00:06:33,920
all know and love the same Python ripple

00:06:30,960 --> 00:06:36,750
it is syntactically similar to Python 3

00:06:33,920 --> 00:06:39,780
thankfully Python 3.4 but it does not

00:06:36,750 --> 00:06:40,680
have F strings it does not have the

00:06:39,780 --> 00:06:42,180
walrus operator

00:06:40,680 --> 00:06:44,520
and it does not have many other things

00:06:42,180 --> 00:06:47,220
but we can live with it it is really

00:06:44,520 --> 00:06:48,540
really easy to use and as you are even

00:06:47,220 --> 00:06:50,490
watching this Jeff that's

00:06:48,540 --> 00:06:53,310
flashing a flashing one of the board's

00:06:50,490 --> 00:06:57,660
right now alright I'm not gonna wait for

00:06:53,310 --> 00:06:58,800
this entire Jeff to finish now until now

00:06:57,660 --> 00:07:00,450
you've been seeing the terminal you've

00:06:58,800 --> 00:07:01,740
been using a terminal to get into micro

00:07:00,450 --> 00:07:05,070
Python but what if you don't want to do

00:07:01,740 --> 00:07:06,630
that I'm um I'm an OG s guy I don't like

00:07:05,070 --> 00:07:08,280
terminus I like browsers I live in

00:07:06,630 --> 00:07:09,510
JavaScript you're showing me a terminal

00:07:08,280 --> 00:07:11,190
I'm not gonna code in your boring old

00:07:09,510 --> 00:07:13,170
terminal I'm fine with that

00:07:11,190 --> 00:07:15,090
I'll give you the web refer you can open

00:07:13,170 --> 00:07:16,650
up your browser access micro Python on

00:07:15,090 --> 00:07:18,540
it almost very similar to the Jupiter

00:07:16,650 --> 00:07:20,070
terminal and it is extremely easy

00:07:18,540 --> 00:07:23,070
because the board runs a Wi-Fi access

00:07:20,070 --> 00:07:25,680
point which can use so how do you

00:07:23,070 --> 00:07:27,600
activate it again fairly simple you just

00:07:25,680 --> 00:07:29,880
import a module called web ripple

00:07:27,600 --> 00:07:31,410
underscore setup and it enables the

00:07:29,880 --> 00:07:34,410
entire thing it asks you for password

00:07:31,410 --> 00:07:35,790
and it does not really secure since it

00:07:34,410 --> 00:07:38,120
shows you what my password is right on

00:07:35,790 --> 00:07:40,980
the screen so once you're done with that

00:07:38,120 --> 00:07:42,840
you get this clear you get in your

00:07:40,980 --> 00:07:44,910
browser you get a web page where you can

00:07:42,840 --> 00:07:47,070
actually start using a micro Python

00:07:44,910 --> 00:07:50,520
Drupal or you can upload and download

00:07:47,070 --> 00:07:52,710
files directly into it but honestly

00:07:50,520 --> 00:07:55,440
speaking this is not deployment friendly

00:07:52,710 --> 00:07:57,090
instead I would rather use a CLI tool I

00:07:55,440 --> 00:08:00,090
would use a CLI tool which would push

00:07:57,090 --> 00:08:03,090
files into my micro Python boots fairly

00:08:00,090 --> 00:08:05,010
easy to do what is a micro Python

00:08:03,090 --> 00:08:06,900
program it's it's not as simple as

00:08:05,010 --> 00:08:08,790
having a simple scrap dot pi and running

00:08:06,900 --> 00:08:10,710
it no it's very similar to how hard you

00:08:08,790 --> 00:08:12,600
know does it you have a boot dot pi a

00:08:10,710 --> 00:08:15,120
boot dot buy sets up your entire micro

00:08:12,600 --> 00:08:16,380
Python you can pass it a config you have

00:08:15,120 --> 00:08:18,300
an optional file which you don't need to

00:08:16,380 --> 00:08:19,980
worry about and the main dot pi if you

00:08:18,300 --> 00:08:22,500
have ever used I'd you know before the

00:08:19,980 --> 00:08:23,160
main dot PI runs on a loop so whatever

00:08:22,500 --> 00:08:24,510
you put on it

00:08:23,160 --> 00:08:27,180
usually you have a while true loop

00:08:24,510 --> 00:08:29,010
sitting inside it and to save power you

00:08:27,180 --> 00:08:31,560
also have options where you can turn the

00:08:29,010 --> 00:08:36,660
you can put the node MCU onto a sleep

00:08:31,560 --> 00:08:38,760
mode so what is shelfie shelfie is me

00:08:36,660 --> 00:08:40,110
taking three of these boards five

00:08:38,760 --> 00:08:42,450
raspberry PI's and putting them on my

00:08:40,110 --> 00:08:45,090
bookshelf I have snakes on my bookshelf

00:08:42,450 --> 00:08:48,060
the hardware I need is like I said three

00:08:45,090 --> 00:08:50,430
esp8266 boards the node MCU the

00:08:48,060 --> 00:08:54,180
Raspberry Pi three plus four Raspberry

00:08:50,430 --> 00:08:57,360
Pi zero zeros a cluster hat and an LED

00:08:54,180 --> 00:09:00,760
strip the way my application works is

00:08:57,360 --> 00:09:02,320
fairly simple you have a flask API

00:09:00,760 --> 00:09:06,400
you have a post-christian you have a

00:09:02,320 --> 00:09:08,560
Postgres database you have a Postgres

00:09:06,400 --> 00:09:10,870
database you have something called

00:09:08,560 --> 00:09:15,370
mosquito and qtt I'll explain more about

00:09:10,870 --> 00:09:19,750
that later and you have three node emcee

00:09:15,370 --> 00:09:22,930
use which are listening for commands so

00:09:19,750 --> 00:09:25,510
what does mqtt mqtt is a pub/sub model

00:09:22,930 --> 00:09:27,670
if you ever use RabbitMQ fairly similar

00:09:25,510 --> 00:09:31,620
but it's much more lightweight it is

00:09:27,670 --> 00:09:33,760
ideal for IOT it was made in 1999 and

00:09:31,620 --> 00:09:34,990
the Eclipse Foundation released

00:09:33,760 --> 00:09:36,640
something called the Eclipse mosquito

00:09:34,990 --> 00:09:39,160
which is one of the best and qdt trial

00:09:36,640 --> 00:09:40,690
servers out there and it is fairly easy

00:09:39,160 --> 00:09:43,030
to use documentation is available

00:09:40,690 --> 00:09:44,890
everywhere so what is what is my

00:09:43,030 --> 00:09:45,730
bookshelf really do what it does is I

00:09:44,890 --> 00:09:49,780
have a queue

00:09:45,730 --> 00:09:53,260
I'd write to write to a topic I give it

00:09:49,780 --> 00:09:54,730
a position and inside it reacts inside

00:09:53,260 --> 00:09:58,660
my macro path and ship it reacts that's

00:09:54,730 --> 00:10:00,730
all it does it's fairly simple but the

00:09:58,660 --> 00:10:04,060
LED strips now what are these LED strips

00:10:00,730 --> 00:10:06,820
the ws2812 B strips are addressable

00:10:04,060 --> 00:10:08,950
strips you can pass it an integer and

00:10:06,820 --> 00:10:10,870
you can say I want to light this place

00:10:08,950 --> 00:10:12,490
up with this RGB value you can

00:10:10,870 --> 00:10:16,570
individually connect each and every one

00:10:12,490 --> 00:10:19,030
of the LED points you'll see what I've

00:10:16,570 --> 00:10:20,740
done fairly here soon enough so I use

00:10:19,030 --> 00:10:22,930
flasks for this Y flask classic is

00:10:20,740 --> 00:10:27,070
lightweight and it has modules for

00:10:22,930 --> 00:10:29,050
everything my entire database is just

00:10:27,070 --> 00:10:31,210
one table it's a very very simple table

00:10:29,050 --> 00:10:34,870
it has a list of books and it knows

00:10:31,210 --> 00:10:38,470
where every book is I have flask admin

00:10:34,870 --> 00:10:40,840
set up so that I have a UI I don't need

00:10:38,470 --> 00:10:42,430
to write CSS or HTML I have a UI set up

00:10:40,840 --> 00:10:44,860
already for me this is like Django admin

00:10:42,430 --> 00:10:47,560
much more lightweight and I can also

00:10:44,860 --> 00:10:51,550
enter books into it now if you see this

00:10:47,560 --> 00:10:55,750
field this field slots has a value of 1

00:10:51,550 --> 00:10:57,970
is to 6.5 what that means is if you have

00:10:55,750 --> 00:10:59,830
a position called m/s to n point X it

00:10:57,970 --> 00:11:02,650
means that my books it's at LED number M

00:10:59,830 --> 00:11:06,400
and goes to LED number N and it is at

00:11:02,650 --> 00:11:08,770
row number X I'll explain soon enough so

00:11:06,400 --> 00:11:11,920
the idea behind my entire project is

00:11:08,770 --> 00:11:13,660
this I am not organized but I want my

00:11:11,920 --> 00:11:14,890
bookshelf to be organized for me I want

00:11:13,660 --> 00:11:16,480
to be able to take a book from

00:11:14,890 --> 00:11:18,070
and my bookshelf put and ask my

00:11:16,480 --> 00:11:20,050
bookshelf where I want to put it back I

00:11:18,070 --> 00:11:21,640
don't want to bother about remembering

00:11:20,050 --> 00:11:23,980
where my book was I don't need to put

00:11:21,640 --> 00:11:26,080
all my books in one spot I can just say

00:11:23,980 --> 00:11:27,790
I can just tell my bookshelf that I put

00:11:26,080 --> 00:11:31,090
it at this egg location and it will

00:11:27,790 --> 00:11:35,320
remember it enables my lack of

00:11:31,090 --> 00:11:36,940
organization so to speak so what are the

00:11:35,320 --> 00:11:38,710
phases the phases were fairly simple

00:11:36,940 --> 00:11:54,040
again I'm not playing a youtube video

00:11:38,710 --> 00:11:55,780
but so never stays one I just made

00:11:54,040 --> 00:11:58,000
something blink that made me really

00:11:55,780 --> 00:12:01,210
happy but then I instantly ran into

00:11:58,000 --> 00:12:03,070
problems I instantly ran into problems I

00:12:01,210 --> 00:12:05,080
have no idea what the hell a capacitor

00:12:03,070 --> 00:12:06,430
is I'm not an electronics to that I

00:12:05,080 --> 00:12:09,730
don't know why you would use one in a

00:12:06,430 --> 00:12:14,920
circuit like this so instantly I ran

00:12:09,730 --> 00:12:18,550
into this problem milady you would like

00:12:14,920 --> 00:12:22,570
up and partially it would stop it would

00:12:18,550 --> 00:12:30,250
stop randomly at something capacitor for

00:12:22,570 --> 00:12:36,460
this I have no clue then I made a little

00:12:30,250 --> 00:12:43,770
more progress I had better control the

00:12:36,460 --> 00:12:43,770
control I'm talking about is this sort

00:12:46,640 --> 00:12:50,260
while I'm ahead of this

00:12:55,040 --> 00:12:57,760
oh yeah

00:12:58,600 --> 00:13:03,040
so have a progress bar every time

00:13:01,060 --> 00:13:05,410
something is happening around my house

00:13:03,040 --> 00:13:07,180
on my desktop this thing has a progress

00:13:05,410 --> 00:13:09,640
bar I set it up that worked really fine

00:13:07,180 --> 00:13:11,380
I solved all my voltage problems I

00:13:09,640 --> 00:13:15,610
solved all the other problems that I had

00:13:11,380 --> 00:13:17,350
fairly simple but soon I had another

00:13:15,610 --> 00:13:22,120
problem how do I start indexing I have

00:13:17,350 --> 00:13:23,950
to manually count things I have to have

00:13:22,120 --> 00:13:25,180
to count my books how do I count them

00:13:23,950 --> 00:13:27,610
this is how I counted them

00:13:25,180 --> 00:13:29,170
I highlight every tenth led and I have

00:13:27,610 --> 00:13:32,020
an easy way of counting things I can

00:13:29,170 --> 00:13:34,330
just say okay this is at 1 2 3 sorry 10

00:13:32,020 --> 00:13:38,050
20 30 and I can say it's at LED number

00:13:34,330 --> 00:13:38,830
30 fairly simple and then the video I

00:13:38,050 --> 00:13:48,150
showed you earlier

00:13:38,830 --> 00:13:53,530
oh maybe add Bendis now still closer oh

00:13:48,150 --> 00:13:54,850
okay sorry so the first video I showed

00:13:53,530 --> 00:14:01,130
you I'll tell you I'll explain what

00:13:54,850 --> 00:14:03,410
happened in that video so

00:14:01,130 --> 00:14:06,259
my bookshelf database knows that these

00:14:03,410 --> 00:14:09,079
books these books are here I'm asking

00:14:06,259 --> 00:14:11,269
for this boxset these this boxset and

00:14:09,079 --> 00:14:13,220
once it knows that it highlights it it

00:14:11,269 --> 00:14:16,029
tells me that this is here but how long

00:14:13,220 --> 00:14:19,519
how am I asking my bookshop this well

00:14:16,029 --> 00:14:21,949
sort of boring I'm using cold um I have

00:14:19,519 --> 00:14:23,540
no interface I'm using curl and I'm

00:14:21,949 --> 00:14:25,370
sending a request I'm giving it a title

00:14:23,540 --> 00:14:28,610
of a book and it says okay fine

00:14:25,370 --> 00:14:30,709
this is this is where your book is and

00:14:28,610 --> 00:14:33,579
to be honest with you I've had friends

00:14:30,709 --> 00:14:36,410
told me that is such a boring thing like

00:14:33,579 --> 00:14:37,639
really are you curling for books who's

00:14:36,410 --> 00:14:38,720
gonna do every time you're going to you

00:14:37,639 --> 00:14:40,610
need your book you're gonna open a

00:14:38,720 --> 00:14:43,160
terminal and curl instead can t just

00:14:40,610 --> 00:14:44,420
remember where your books are well from

00:14:43,160 --> 00:14:46,069
the beginning I've been saying something

00:14:44,420 --> 00:14:48,319
I've been saying I wanted to ask my

00:14:46,069 --> 00:14:52,190
bookshelf and my books are not curl

00:14:48,319 --> 00:14:57,380
where my books are so I hooked it up

00:14:52,190 --> 00:14:59,480
with a voiceover Oh Alexa my idea was

00:14:57,380 --> 00:15:01,699
fairly simple I wanted to ask Alexa

00:14:59,480 --> 00:15:04,130
where my books were I wanted Alex to

00:15:01,699 --> 00:15:05,690
show me where my books were whether that

00:15:04,130 --> 00:15:10,819
would be possible as a totally different

00:15:05,690 --> 00:15:12,769
thing so flask ask is a very nice it's a

00:15:10,819 --> 00:15:15,260
very nice module for working with Alexa

00:15:12,769 --> 00:15:17,839
so the final missing part of my

00:15:15,260 --> 00:15:19,730
architecture was an Alexa scale I wanted

00:15:17,839 --> 00:15:22,699
to say Alex I asked my bookshelf AB

00:15:19,730 --> 00:15:25,819
where X book is and it would say how I

00:15:22,699 --> 00:15:27,230
know where that is all code samples are

00:15:25,819 --> 00:15:28,370
online on github so you don't need to

00:15:27,230 --> 00:15:31,190
worry about any of this you don't need

00:15:28,370 --> 00:15:32,899
to take photos or anything so the thing

00:15:31,190 --> 00:15:35,480
about Alex is you are to configure your

00:15:32,899 --> 00:15:38,600
skill online on the a double Alexa page

00:15:35,480 --> 00:15:40,069
on Amazon developer and you have to

00:15:38,600 --> 00:15:42,680
configure every phrase that you're going

00:15:40,069 --> 00:15:44,569
to enter and the main part of this is

00:15:42,680 --> 00:15:47,300
you have to ask it to give you the raw

00:15:44,569 --> 00:15:49,339
query string once you do that you're

00:15:47,300 --> 00:15:52,100
able to access the raw query string in

00:15:49,339 --> 00:15:53,990
your app so in your flask view it comes

00:15:52,100 --> 00:15:56,949
as the first argument it comes as the

00:15:53,990 --> 00:16:00,579
first named argument and what that does

00:15:56,949 --> 00:16:00,579
that's fairly simple

00:16:03,009 --> 00:16:09,920
okay hopefully Alexa asked my bookshelf

00:16:08,389 --> 00:16:11,420
to show me where did I keep my Alex I

00:16:09,920 --> 00:16:15,019
need ask my bookshelf to show me where

00:16:11,420 --> 00:16:28,670
did I keep one Neil Gaiman collection

00:16:15,019 --> 00:16:30,230
coming right up Alexa asked my bookshelf

00:16:28,670 --> 00:16:32,660
to show me where did I keep my books by

00:16:30,230 --> 00:16:35,629
Neil Gaiman the phrase which I entered

00:16:32,660 --> 00:16:38,990
wasn't actively into collection looks us

00:16:35,629 --> 00:16:41,000
coming right up the Alex Haskell sits on

00:16:38,990 --> 00:16:42,949
my Raspberry Pi it knows where my book

00:16:41,000 --> 00:16:46,639
is and it highlights where my books are

00:16:42,949 --> 00:16:49,850
I don't need to do any curls that's step

00:16:46,639 --> 00:16:54,379
one step two I had different problems my

00:16:49,850 --> 00:16:55,970
book chef did end on Alexa asked my

00:16:54,379 --> 00:16:57,529
bookshelf to tell me where my Hemingway

00:16:55,970 --> 00:17:00,920
books how do i structure the other

00:16:57,529 --> 00:17:05,480
bookshelves like I saw ha I found books

00:17:00,920 --> 00:17:06,829
by Hemingway let me show you I have

00:17:05,480 --> 00:17:09,039
bookshelves which are you in structure

00:17:06,829 --> 00:17:12,589
vertically how do how do I show that

00:17:09,039 --> 00:17:13,939
fairly simplistic and am I sure that it

00:17:12,589 --> 00:17:18,049
is exactly showing me the right book

00:17:13,939 --> 00:17:20,140
until then look at the LEDs that it has

00:17:18,049 --> 00:17:22,490
highlighted it is highlighted from

00:17:20,140 --> 00:17:26,419
position X to position Y where these

00:17:22,490 --> 00:17:28,339
books specifically are then how do I

00:17:26,419 --> 00:17:31,780
highlight a single book sometimes I'm

00:17:28,339 --> 00:17:31,780
going to ask it just for one single book

00:17:31,990 --> 00:17:37,039
Alexa asked my bookshelf to find a

00:17:34,370 --> 00:17:39,440
Christmas Carol your copy of Charles

00:17:37,039 --> 00:17:40,110
Dickens is a Christmas carol it's right

00:17:39,440 --> 00:17:43,390
here

00:17:40,110 --> 00:17:43,390
[Applause]

00:17:44,610 --> 00:17:51,010
lights up it has the accuracy of one led

00:17:48,280 --> 00:17:53,290
which is specifically well I have to

00:17:51,010 --> 00:17:56,920
index my books and say my book is X LEDs

00:17:53,290 --> 00:17:59,200
thick sometimes that helps it's a little

00:17:56,920 --> 00:18:02,500
hard and that that part is actually a

00:17:59,200 --> 00:18:05,260
little annoying but then the Alex IEP I

00:18:02,500 --> 00:18:07,000
allows you to do so much more as since

00:18:05,260 --> 00:18:09,100
this is a flask app I can tie it up with

00:18:07,000 --> 00:18:11,380
my same Postgres database and because of

00:18:09,100 --> 00:18:13,450
that all like all I need to do if I had

00:18:11,380 --> 00:18:15,010
to ask for a specific book and get more

00:18:13,450 --> 00:18:17,800
data out of it

00:18:15,010 --> 00:18:20,020
I could even channel an additional

00:18:17,800 --> 00:18:21,520
behavior for a specific book suppose you

00:18:20,020 --> 00:18:23,740
have a book for which you want a

00:18:21,520 --> 00:18:25,180
specific response you want it you want

00:18:23,740 --> 00:18:28,800
to add an easter-egg you want to add a

00:18:25,180 --> 00:18:31,960
joke fairly simple all you have to do

00:18:28,800 --> 00:18:34,300
this code it alexa ask my bookshelf are

00:18:31,960 --> 00:18:36,430
my Harry Potter books your Harry Potter

00:18:34,300 --> 00:18:38,860
collection you are lucky I'm your

00:18:36,430 --> 00:18:41,800
marauders map say it with me

00:18:38,860 --> 00:18:45,390
mischief managed there's something

00:18:41,800 --> 00:18:48,760
interesting in this problem I have books

00:18:45,390 --> 00:18:51,070
behind books how do I index how do I

00:18:48,760 --> 00:18:54,340
find them I control the color of the

00:18:51,070 --> 00:18:56,500
LEDs the LEDs are pink when it is the

00:18:54,340 --> 00:18:58,510
first row they're orange for the third

00:18:56,500 --> 00:19:00,610
row they're blue for the second row and

00:18:58,510 --> 00:19:03,460
I think they're right for the fourth row

00:19:00,610 --> 00:19:04,660
so I can index books no matter where

00:19:03,460 --> 00:19:06,430
they are whether they're horizontally

00:19:04,660 --> 00:19:08,650
stacked horizontally is not sleeping

00:19:06,430 --> 00:19:10,510
whether I place them vertically I can

00:19:08,650 --> 00:19:12,130
even index books which are at an angle I

00:19:10,510 --> 00:19:16,660
can say they start at this point and at

00:19:12,130 --> 00:19:19,590
that point so what is what is this show

00:19:16,660 --> 00:19:22,510
us this entire application has

00:19:19,590 --> 00:19:24,430
deployment scripts it has scripts for

00:19:22,510 --> 00:19:27,610
pushing code into micro Python chips

00:19:24,430 --> 00:19:30,610
it has Unicorn script unicorn

00:19:27,610 --> 00:19:33,190
based nginx configurations so that this

00:19:30,610 --> 00:19:34,630
is load balanced so even if all of you

00:19:33,190 --> 00:19:36,880
started connecting to my Alex are

00:19:34,630 --> 00:19:38,920
skilled right now and try to spam or

00:19:36,880 --> 00:19:40,960
DDoS my bookshelf it would be able to

00:19:38,920 --> 00:19:44,790
take it I turned off my skill before I

00:19:40,960 --> 00:19:47,800
came here by the way don't try it so and

00:19:44,790 --> 00:19:49,510
this is this is the thing when you get

00:19:47,800 --> 00:19:51,640
started with micro fighting the

00:19:49,510 --> 00:19:53,650
possibilities are endless you have so

00:19:51,640 --> 00:19:56,500
many things you can do but it ends up

00:19:53,650 --> 00:19:57,910
such that you have very little examples

00:19:56,500 --> 00:20:00,850
of anything beyond us

00:19:57,910 --> 00:20:03,910
the blinking LED or some weather

00:20:00,850 --> 00:20:06,790
stations or a nice hat or some shirt

00:20:03,910 --> 00:20:08,170
they are all amazing projects but what

00:20:06,790 --> 00:20:10,180
if you wanted to push micro Python into

00:20:08,170 --> 00:20:12,250
project into production what if you

00:20:10,180 --> 00:20:14,050
wanted to take a micro Python board and

00:20:12,250 --> 00:20:15,750
actually start how to start up around

00:20:14,050 --> 00:20:18,070
the entire thing how would you do that

00:20:15,750 --> 00:20:20,410
partially this is how I'm not saying

00:20:18,070 --> 00:20:22,600
this is completely production grade but

00:20:20,410 --> 00:20:25,090
I have I have a pipeline I have

00:20:22,600 --> 00:20:26,860
documentation it it helps it helps

00:20:25,090 --> 00:20:28,600
because you will not remember what code

00:20:26,860 --> 00:20:31,650
you wrote six months later the first

00:20:28,600 --> 00:20:38,740
person you document for is yourself so

00:20:31,650 --> 00:20:41,500
at the end what did I want to do later I

00:20:38,740 --> 00:20:43,030
want to build a web UI there are modules

00:20:41,500 --> 00:20:45,520
for building it without writing an inch

00:20:43,030 --> 00:20:47,530
of java a line of JavaScript I want to

00:20:45,520 --> 00:20:50,740
write a telegram what much easier than

00:20:47,530 --> 00:20:53,470
Alexa and I wanted metrics I want to say

00:20:50,740 --> 00:20:54,820
Alexa show me all the books I have show

00:20:53,470 --> 00:20:56,800
me all the books I have not read in the

00:20:54,820 --> 00:20:58,330
last six months show me all the books I

00:20:56,800 --> 00:21:00,760
have purchased and I've never read I

00:20:58,330 --> 00:21:04,150
wanted to be able to do all of this and

00:21:00,760 --> 00:21:06,370
I want connected dialogue flow for Alexa

00:21:04,150 --> 00:21:08,200
I want to be able to have constructed

00:21:06,370 --> 00:21:09,940
dialogue so that I can say Alex are do I

00:21:08,200 --> 00:21:11,530
have this book it says no but do you

00:21:09,940 --> 00:21:14,410
want me to order it for you from from

00:21:11,530 --> 00:21:15,570
Amazon I want to say not right now but

00:21:14,410 --> 00:21:18,700
order it when the price has dropped

00:21:15,570 --> 00:21:20,350
that's what I want eventually I'll get

00:21:18,700 --> 00:21:22,900
there eventually I'll get to a point

00:21:20,350 --> 00:21:24,070
where Alexa tells me that hey that book

00:21:22,900 --> 00:21:26,140
which is on your wish list is actually

00:21:24,070 --> 00:21:27,970
on sale and you don't seem to have it do

00:21:26,140 --> 00:21:31,060
you want me to order one's copy for you

00:21:27,970 --> 00:21:33,820
I say yes and it orders and finally I

00:21:31,060 --> 00:21:35,620
want to use Spacey for the NLP part it's

00:21:33,820 --> 00:21:36,910
there are two three modules which I've

00:21:35,620 --> 00:21:41,860
considered and Spacey seems the easiest

00:21:36,910 --> 00:21:44,170
to use so Who am I I've saved my

00:21:41,860 --> 00:21:47,020
introduction for last my name is Vinay

00:21:44,170 --> 00:21:48,370
Keerthi I am a mechanical engineer I'm

00:21:47,020 --> 00:21:49,930
not a developer I'm not a software

00:21:48,370 --> 00:21:53,980
developer I learned programming on my

00:21:49,930 --> 00:21:56,050
own and I work at visa incorporated I'm

00:21:53,980 --> 00:21:58,570
a senior software engineer there I work

00:21:56,050 --> 00:21:59,560
on Python a little bit of nodejs and a

00:21:58,570 --> 00:22:02,560
little bit of HTML

00:21:59,560 --> 00:22:04,900
I am stone charioteer everywhere online

00:22:02,560 --> 00:22:08,350
you can find me on any web site and my

00:22:04,900 --> 00:22:10,480
website is Stone charity or calm the

00:22:08,350 --> 00:22:11,410
entire source code for shell fee is that

00:22:10,480 --> 00:22:13,900
github coms

00:22:11,410 --> 00:22:15,700
bookshelf II that's an organization so

00:22:13,900 --> 00:22:18,010
there are four projects under it you can

00:22:15,700 --> 00:22:19,390
find the entire source code there and if

00:22:18,010 --> 00:22:23,020
you have any questions related to it

00:22:19,390 --> 00:22:25,810
please raise an issue these are links

00:22:23,020 --> 00:22:27,480
for everything on this page so you don't

00:22:25,810 --> 00:22:31,660
really need to take a photo of this

00:22:27,480 --> 00:22:33,910
because the entire site is online you

00:22:31,660 --> 00:22:36,370
can just go to bookshelf e dot github do

00:22:33,910 --> 00:22:45,400
and the central these slides are online

00:22:36,370 --> 00:22:49,690
huh all right thank you so much do we

00:22:45,400 --> 00:22:52,170
have time for questions two minutes now

00:22:49,690 --> 00:22:52,170
I can take questions

00:23:03,080 --> 00:23:09,570
okay it gives me you mentioned the MQTT

00:23:06,570 --> 00:23:12,030
right yeah and you what do you say I'm

00:23:09,570 --> 00:23:13,410
qtt for mqtt is a message queue hydrant

00:23:12,030 --> 00:23:15,810
I was running out of time so I skipped

00:23:13,410 --> 00:23:18,000
over that part M TT m QT t is a message

00:23:15,810 --> 00:23:20,520
queue so have four topics each of the

00:23:18,000 --> 00:23:22,800
node MCU chips subscribes to a topic so

00:23:20,520 --> 00:23:25,200
I have shelf one a shelf a shelf B shelf

00:23:22,800 --> 00:23:27,060
see all three of those subscribe all the

00:23:25,200 --> 00:23:29,400
shelves subscribe to those topics and

00:23:27,060 --> 00:23:32,010
once they get I actually did show you a

00:23:29,400 --> 00:23:34,080
slide there where MQTT was working and

00:23:32,010 --> 00:23:35,370
it wireless yes it is Wireless all of

00:23:34,080 --> 00:23:37,130
this is Wireless the only ways there

00:23:35,370 --> 00:23:39,660
otherwise which I soldered very poorly

00:23:37,130 --> 00:23:44,820
okay I burnt my hand the first time I

00:23:39,660 --> 00:23:46,920
soldered hey it's a really nice project

00:23:44,820 --> 00:23:50,430
an interesting one being an electronics

00:23:46,920 --> 00:23:52,830
background it I found out like what I

00:23:50,430 --> 00:23:55,260
can do with all different electronic

00:23:52,830 --> 00:23:57,990
users out there so my question is like

00:23:55,260 --> 00:24:00,770
can we is it possible to code micro

00:23:57,990 --> 00:24:04,830
Python directly into a edge poor like

00:24:00,770 --> 00:24:06,630
tx2 or Raspberry Pi or you don't need

00:24:04,830 --> 00:24:08,490
micro Python for the Raspberry Pi okay

00:24:06,630 --> 00:24:09,750
if you're going to write anything

00:24:08,490 --> 00:24:12,120
directly into the Raspberry Pi you'll

00:24:09,750 --> 00:24:13,950
have to write an OS okay so you don't

00:24:12,120 --> 00:24:15,660
need that just use raspbian and use

00:24:13,950 --> 00:24:17,190
normal Python okay please stay away from

00:24:15,660 --> 00:24:19,560
micro Python for us be a Raspberry Pi

00:24:17,190 --> 00:24:22,380
because it micro Python is for when you

00:24:19,560 --> 00:24:24,270
actually have to worry about okay so one

00:24:22,380 --> 00:24:25,440
of the one of the problems I had during

00:24:24,270 --> 00:24:28,710
this entire presentation

00:24:25,440 --> 00:24:30,780
sorry during this entire project was i i

00:24:28,710 --> 00:24:33,300
would import a library that i wrote and

00:24:30,780 --> 00:24:34,890
it would say monocular i've never heard

00:24:33,300 --> 00:24:37,560
of a memory allocation error in python

00:24:34,890 --> 00:24:38,400
i'm like what on earth is this so you

00:24:37,560 --> 00:24:40,290
understand what i mean

00:24:38,400 --> 00:24:42,120
micro python is for chips where you have

00:24:40,290 --> 00:24:44,700
very little memory and very little if

00:24:42,120 --> 00:24:46,740
this thing for my tiny footprint you can

00:24:44,700 --> 00:24:48,780
compile so i want i'm been trying to get

00:24:46,740 --> 00:24:51,120
into micro python source development so

00:24:48,780 --> 00:24:52,710
you can compile micro python for any

00:24:51,120 --> 00:24:54,720
laptop that you have and run it on your

00:24:52,710 --> 00:24:56,340
laptop just to test it out but i would

00:24:54,720 --> 00:24:58,650
recommend getting a board you can order

00:24:56,340 --> 00:25:01,980
one it's very very cheap cool thank you

00:24:58,650 --> 00:25:04,050
thank you any more yeah catch me later

00:25:01,980 --> 00:25:06,260
and I'll be in the hall thank you so

00:25:04,050 --> 00:25:06,260

YouTube URL: https://www.youtube.com/watch?v=aEYftBZz6ag


