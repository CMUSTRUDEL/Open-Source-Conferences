Title: Visual Studio Code + Python = Awesomeness ! - Ashish Sahu & Sagar Bhanudas Josh
Publication date: 2019-11-16
Playlist: PyCon India 2019
Description: 
	This talk was presented at PyCon India 2019, on Oct 12th - 13th, at the Chennai Trade Centre.
Website: https://in.pycon.org/2019
Captions: 
	00:00:04,640 --> 00:00:10,460
so good afternoon and welcome my name is

00:00:07,640 --> 00:00:13,070
Sagar and me and Ashish will be

00:00:10,460 --> 00:00:15,139
presenting this topic on how is Visual

00:00:13,070 --> 00:00:17,510
Studio code and the combination of

00:00:15,139 --> 00:00:20,720
Python is the next level of Awesomeness

00:00:17,510 --> 00:00:22,430
right we all want developers here and we

00:00:20,720 --> 00:00:23,720
basically are from Microsoft we work

00:00:22,430 --> 00:00:26,150
with the partner team and we have both

00:00:23,720 --> 00:00:28,580
solution architects we have a special

00:00:26,150 --> 00:00:30,230
liking for AI and machine learning as

00:00:28,580 --> 00:00:32,930
well and that's why we are here amongst

00:00:30,230 --> 00:00:34,610
you guys so let's get started so if you

00:00:32,930 --> 00:00:38,390
just see those are our twitter handles

00:00:34,610 --> 00:00:40,340
our she's a underscore and sagar JMS

00:00:38,390 --> 00:00:43,880
that's auditor handles if you'd like to

00:00:40,340 --> 00:00:46,160
do it to us after the session so let's

00:00:43,880 --> 00:00:48,950
see you know what has been Microsoft's

00:00:46,160 --> 00:00:52,040
OSS journey to today right I mean which

00:00:48,950 --> 00:00:54,020
drastically changed after 2014 dotnet

00:00:52,040 --> 00:00:55,850
framework is to be a core product and we

00:00:54,020 --> 00:00:57,680
also out shows that sorry open source

00:00:55,850 --> 00:00:59,960
that into something called as dotnet

00:00:57,680 --> 00:01:01,640
core right and if you see that is where

00:00:59,960 --> 00:01:03,950
our journey actually started when we put

00:01:01,640 --> 00:01:08,360
dotnet core on the open source platform

00:01:03,950 --> 00:01:10,400
which is on github and then we 2015 we

00:01:08,360 --> 00:01:12,830
realize that since the advent of the

00:01:10,400 --> 00:01:14,240
cloud which is Microsoft Azure we all

00:01:12,830 --> 00:01:16,159
also realize that people are not going

00:01:14,240 --> 00:01:17,270
to only write dotnet code they're going

00:01:16,159 --> 00:01:19,370
to write Python code they are going to

00:01:17,270 --> 00:01:21,250
write rust codes they're going to write

00:01:19,370 --> 00:01:24,380
go code they're going to write node.js

00:01:21,250 --> 00:01:26,390
typescript JavaScript everything so we

00:01:24,380 --> 00:01:28,580
wanted a IDE which would which would be

00:01:26,390 --> 00:01:31,450
number one class cross-platform lie to

00:01:28,580 --> 00:01:33,979
it and also extends the capability

00:01:31,450 --> 00:01:37,760
rather than just began development

00:01:33,979 --> 00:01:39,680
editor to a debugger or you know an

00:01:37,760 --> 00:01:41,180
ecosystem of sorts that is where we

00:01:39,680 --> 00:01:42,890
thought about vs code and then you know

00:01:41,180 --> 00:01:44,630
you the ecosystem has grown so much

00:01:42,890 --> 00:01:46,850
because of extensions of the

00:01:44,630 --> 00:01:49,159
contributions it's really touching new

00:01:46,850 --> 00:01:51,110
heights and then in 2016 we realized

00:01:49,159 --> 00:01:53,479
release the first version of our dotnet

00:01:51,110 --> 00:01:55,340
code product and you know we also on on

00:01:53,479 --> 00:01:56,240
sequencer on Linux you know a lot of

00:01:55,340 --> 00:01:59,299
cool things going on

00:01:56,240 --> 00:02:01,070
fast forward to 2018 which was last year

00:01:59,299 --> 00:02:03,079
you know half of our we're trending

00:02:01,070 --> 00:02:05,960
towards lot of our virtual machines on

00:02:03,079 --> 00:02:09,229
Azure running Linux you know we acquired

00:02:05,960 --> 00:02:11,480
github too and then we also have a lot

00:02:09,229 --> 00:02:13,550
of cool thing going on with vs code just

00:02:11,480 --> 00:02:16,459
in a matter of three to four years it

00:02:13,550 --> 00:02:18,140
has reached as a number 1 ID in the

00:02:16,459 --> 00:02:18,470
market right for all the developer

00:02:18,140 --> 00:02:20,690
solution

00:02:18,470 --> 00:02:22,730
a certain set of developers but all the

00:02:20,690 --> 00:02:24,200
developers so this is our open source

00:02:22,730 --> 00:02:25,700
journey started because Python be an

00:02:24,200 --> 00:02:27,950
open source it's really important for us

00:02:25,700 --> 00:02:31,370
to come and tell you what our journey

00:02:27,950 --> 00:02:33,710
has been and if you see I was looking at

00:02:31,370 --> 00:02:37,850
the stock or flow insights from last

00:02:33,710 --> 00:02:41,240
year 2018 and over 34% of of the

00:02:37,850 --> 00:02:43,250
developer community had said that

00:02:41,240 --> 00:02:45,890
readers to the code was their number one

00:02:43,250 --> 00:02:48,440
idea of choice and then I happened to

00:02:45,890 --> 00:02:51,350
look up to 2019 survey which actually

00:02:48,440 --> 00:02:54,050
came out already and 50% of you the

00:02:51,350 --> 00:02:56,300
developers actually said they will just

00:02:54,050 --> 00:02:58,700
real core is their favorite ID of choice

00:02:56,300 --> 00:03:00,460
so thanks for that and the ecosystem

00:02:58,700 --> 00:03:03,380
keeps growing on so that is the reason

00:03:00,460 --> 00:03:06,380
if you're a Python developer with

00:03:03,380 --> 00:03:08,810
combination of vs code and our cloud

00:03:06,380 --> 00:03:10,940
platform you can do really cool things

00:03:08,810 --> 00:03:13,160
you know the number of problems which

00:03:10,940 --> 00:03:15,110
Python developers face not from a

00:03:13,160 --> 00:03:16,670
capability perspective but everything

00:03:15,110 --> 00:03:22,340
outside of the amel model right

00:03:16,670 --> 00:03:24,500
versioning hosting scaling DevOps

00:03:22,340 --> 00:03:27,709
now called as emma loves that is where

00:03:24,500 --> 00:03:29,300
we with our ide and our platform

00:03:27,709 --> 00:03:31,310
come in and really help you guys out

00:03:29,300 --> 00:03:33,739
right and we also have a booth outside

00:03:31,310 --> 00:03:39,230
if you want to come chat with us about

00:03:33,739 --> 00:03:42,739
your scenario so just you know just a

00:03:39,230 --> 00:03:44,390
minute about why is Isis machine

00:03:42,739 --> 00:03:47,060
learning really helpful for developers

00:03:44,390 --> 00:03:51,620
right if you see we on the first line we

00:03:47,060 --> 00:03:53,870
have a lot of api's as you will to make

00:03:51,620 --> 00:03:56,900
ready-made pre-built API calls right to

00:03:53,870 --> 00:03:58,610
cognitive services which are our ai ai

00:03:56,900 --> 00:04:01,640
services so you don't need to really

00:03:58,610 --> 00:04:03,500
write code but you can leverage our API

00:04:01,640 --> 00:04:06,140
as if you are in the region and you want

00:04:03,500 --> 00:04:07,940
to do that with development then we have

00:04:06,140 --> 00:04:10,820
lot of tools which are very familiar to

00:04:07,940 --> 00:04:14,060
you like now you can use your of Jupiter

00:04:10,820 --> 00:04:15,620
notebooks with IDE which is vs code and

00:04:14,060 --> 00:04:17,930
you can bring it to Azure and will give

00:04:15,620 --> 00:04:20,390
you an environment tool to to let you

00:04:17,930 --> 00:04:22,190
not first maybe install the Jupiter

00:04:20,390 --> 00:04:23,660
server and you know do all the plumbing

00:04:22,190 --> 00:04:24,860
and managing will just give you a

00:04:23,660 --> 00:04:26,870
ready-made Jupiter

00:04:24,860 --> 00:04:29,289
you know server out of the box and then

00:04:26,870 --> 00:04:31,520
you can use your environment right there

00:04:29,289 --> 00:04:32,510
obviously we chose to do code will see a

00:04:31,520 --> 00:04:34,400
lot of

00:04:32,510 --> 00:04:36,800
and and trust me this is my last slide

00:04:34,400 --> 00:04:38,480
and after that we'll jump right into the

00:04:36,800 --> 00:04:40,400
demos which me and Ashish will take over

00:04:38,480 --> 00:04:41,510
and we do so put a lot of popular

00:04:40,400 --> 00:04:43,220
frameworks you know being on the cloud

00:04:41,510 --> 00:04:45,380
it's imperative that people are doing

00:04:43,220 --> 00:04:47,600
different things some of you might be

00:04:45,380 --> 00:04:50,540
developing for tensorflow some of you

00:04:47,600 --> 00:04:52,400
might be developing for pi toge and and

00:04:50,540 --> 00:04:54,830
you might have heard about onyx socially

00:04:52,400 --> 00:04:57,140
important that you as developers we be

00:04:54,830 --> 00:04:58,520
really successful on the cloud while

00:04:57,140 --> 00:05:01,330
using our platform

00:04:58,520 --> 00:05:03,860
hence we support the plethora of these

00:05:01,330 --> 00:05:06,140
host of services which really makes your

00:05:03,860 --> 00:05:08,390
life really easier you guys are the best

00:05:06,140 --> 00:05:10,760
in writing Python code and what we bring

00:05:08,390 --> 00:05:11,620
to the table is to help you become more

00:05:10,760 --> 00:05:14,360
productive

00:05:11,620 --> 00:05:17,960
how can your platform how can your code

00:05:14,360 --> 00:05:21,230
or how can your model be scalable

00:05:17,960 --> 00:05:23,630
how can your model be versioned right

00:05:21,230 --> 00:05:25,520
how can your model be you know let's say

00:05:23,630 --> 00:05:26,720
the different versions can be hosted on

00:05:25,520 --> 00:05:29,300
to the cloud without you having to

00:05:26,720 --> 00:05:31,040
really learn some of the technologies

00:05:29,300 --> 00:05:33,530
which are around and go deep like for

00:05:31,040 --> 00:05:35,300
example how much of how much of docker

00:05:33,530 --> 00:05:37,700
do you need to learn right maybe a

00:05:35,300 --> 00:05:39,410
little bit but not all of it because you

00:05:37,700 --> 00:05:40,730
know hey it's a world where micro

00:05:39,410 --> 00:05:44,510
services are becoming really really

00:05:40,730 --> 00:05:47,030
mainstream and the next two lines are

00:05:44,510 --> 00:05:49,280
you know the hardware and what what is

00:05:47,030 --> 00:05:50,390
the ecosystem of services that we have

00:05:49,280 --> 00:05:52,400
today on the cloud

00:05:50,390 --> 00:05:54,290
which really helps you to run your

00:05:52,400 --> 00:05:56,630
models very efficiently and the biggest

00:05:54,290 --> 00:05:58,340
thing is is in the bottom right the

00:05:56,630 --> 00:06:00,080
capabilities are very similar to

00:05:58,340 --> 00:06:02,840
whatever you would try to run on the

00:06:00,080 --> 00:06:04,970
edge like your mobile is an edge my

00:06:02,840 --> 00:06:08,360
mobile is an edge and a raspberry pi is

00:06:04,970 --> 00:06:10,070
an edge to the super-powerful cloud if

00:06:08,360 --> 00:06:11,780
we're sort of trying to streamline the

00:06:10,070 --> 00:06:14,390
capability across right so you being a

00:06:11,780 --> 00:06:15,770
Python developer you will come across a

00:06:14,390 --> 00:06:18,080
scenario whether you're working for a

00:06:15,770 --> 00:06:19,970
company or your individual that some

00:06:18,080 --> 00:06:22,010
time you wanted to need a you know your

00:06:19,970 --> 00:06:24,470
let's say your inference model on a

00:06:22,010 --> 00:06:26,780
mobile the very limited resources right

00:06:24,470 --> 00:06:28,880
so how do we enable you to do that with

00:06:26,780 --> 00:06:30,320
our SDK and obviously you can run the

00:06:28,880 --> 00:06:33,590
training on the cloud which requires a

00:06:30,320 --> 00:06:35,570
lot of GPUs CPUs and FPGA but the

00:06:33,590 --> 00:06:37,100
similar capabilities are available to

00:06:35,570 --> 00:06:39,880
you on the cloud so we were trying to

00:06:37,100 --> 00:06:42,410
cover end to end spectrum of that right

00:06:39,880 --> 00:06:44,720
so demo time as a promise that was my

00:06:42,410 --> 00:06:45,740
last light I won't bore you with a lot

00:06:44,720 --> 00:06:47,479
of site so

00:06:45,740 --> 00:06:50,590
let's see what do we have here right so

00:06:47,479 --> 00:06:52,520
basically you know this is vyas code and

00:06:50,590 --> 00:06:54,919
there are some cool features that I'm

00:06:52,520 --> 00:06:56,569
going to display to you right here so

00:06:54,919 --> 00:06:57,949
for example this is a very simple file

00:06:56,569 --> 00:07:00,620
right it it doesn't have anything I'm

00:06:57,949 --> 00:07:02,180
just trying to print a number but one

00:07:00,620 --> 00:07:04,550
good thing I wanted to show you is the

00:07:02,180 --> 00:07:06,710
intelligence capabilities we invested a

00:07:04,550 --> 00:07:09,080
lot of a lot of energy into something

00:07:06,710 --> 00:07:12,289
called as a Python server and when you

00:07:09,080 --> 00:07:13,639
go to the output of vs code you can see

00:07:12,289 --> 00:07:15,740
there's a Python language server which

00:07:13,639 --> 00:07:18,560
the extension is installed so you know

00:07:15,740 --> 00:07:20,150
when you use vs col we give you a python

00:07:18,560 --> 00:07:22,099
language server you know which which is

00:07:20,150 --> 00:07:23,569
in the backend and then it actually

00:07:22,099 --> 00:07:25,159
tries to give you intelligence like what

00:07:23,569 --> 00:07:29,659
kind of intelligence right for example

00:07:25,159 --> 00:07:31,430
i'll move here a is just number here and

00:07:29,659 --> 00:07:34,550
then i say you know a dot something it

00:07:31,430 --> 00:07:36,979
gives me an integer specific properties

00:07:34,550 --> 00:07:39,740
right and maybe i just initialize a

00:07:36,979 --> 00:07:41,210
later to you know it says something

00:07:39,740 --> 00:07:44,990
called as a string right and it just

00:07:41,210 --> 00:07:47,720
says other so without even saving the

00:07:44,990 --> 00:07:49,669
file it's going to you know give me an

00:07:47,720 --> 00:07:52,550
interesting saying that you actually

00:07:49,669 --> 00:07:54,620
changed something and then the jupiter

00:07:52,550 --> 00:07:56,810
server tries to run some modeling so

00:07:54,620 --> 00:07:57,680
it's an AI within nai and then tries to

00:07:56,810 --> 00:07:59,750
give you very specific recommendations

00:07:57,680 --> 00:08:01,849
to with respect to your code so this is

00:07:59,750 --> 00:08:03,229
where you know this is a tip of the

00:08:01,849 --> 00:08:04,490
iceberg where do you get good

00:08:03,229 --> 00:08:06,500
intelligence so that you can write code

00:08:04,490 --> 00:08:09,500
faster if you write your own functions

00:08:06,500 --> 00:08:11,330
you hit f12 it will go traverse and go

00:08:09,500 --> 00:08:14,240
take you to the function as well all

00:08:11,330 --> 00:08:16,639
right so that was one part now the other

00:08:14,240 --> 00:08:17,930
part of the story is how do you run this

00:08:16,639 --> 00:08:19,639
you know I can come here write Python

00:08:17,930 --> 00:08:21,860
and then you know this is the integrated

00:08:19,639 --> 00:08:23,030
terminal and run or what I can do since

00:08:21,860 --> 00:08:26,389
it's already detected I have a Python

00:08:23,030 --> 00:08:27,710
code I can just right click and say run

00:08:26,389 --> 00:08:29,539
in the Python code and you know that's

00:08:27,710 --> 00:08:31,460
my output right here right that's the

00:08:29,539 --> 00:08:33,200
number that is trying to print so very

00:08:31,460 --> 00:08:34,459
simple for you to go and you know we

00:08:33,200 --> 00:08:37,039
also have debugging capabilities so if

00:08:34,459 --> 00:08:39,289
you see I have a I have a breakpoint

00:08:37,039 --> 00:08:40,789
here I can go and start debugging so

00:08:39,289 --> 00:08:43,159
it's actually going to ask me ok what

00:08:40,789 --> 00:08:45,230
configuration do you want right and it's

00:08:43,159 --> 00:08:47,300
going to immediately go and start

00:08:45,230 --> 00:08:49,940
debugging for you right there in the ID

00:08:47,300 --> 00:08:52,339
so it's more more than just an editor

00:08:49,940 --> 00:08:54,020
it's it's an ecosystem now let us go

00:08:52,339 --> 00:08:56,240
further and try to see some other things

00:08:54,020 --> 00:08:59,720
that I have done now this was this is

00:08:56,240 --> 00:09:02,720
Python 3.7 running on my own machine

00:08:59,720 --> 00:09:04,100
you know directly at the root now I went

00:09:02,720 --> 00:09:08,810
ahead and sort of took the liberty of

00:09:04,100 --> 00:09:10,850
installing a virtual environment and in

00:09:08,810 --> 00:09:12,650
that virtual environment I sort of went

00:09:10,850 --> 00:09:15,230
ahead and you know I'm trying to go to

00:09:12,650 --> 00:09:18,950
Jupiter notebooks right so if I come

00:09:15,230 --> 00:09:22,670
here okay perfect now what I'm going to

00:09:18,950 --> 00:09:24,350
try to do here is show you a little bit

00:09:22,670 --> 00:09:26,390
more advanced capability of the Python

00:09:24,350 --> 00:09:29,750
extension for Visual Studio code right

00:09:26,390 --> 00:09:31,460
this is simple you know it will try to

00:09:29,750 --> 00:09:34,370
print what are the path variables

00:09:31,460 --> 00:09:35,900
available to my code what I'm going to

00:09:34,370 --> 00:09:38,030
also show you now how does how can I

00:09:35,900 --> 00:09:39,020
make it into a notebook right

00:09:38,030 --> 00:09:41,030
and you put a notebook is more

00:09:39,020 --> 00:09:43,850
interactive so what I'm going to do is

00:09:41,030 --> 00:09:48,880
just insert a code snippet here I which

00:09:43,850 --> 00:09:51,350
actually you know shows your matplotlib

00:09:48,880 --> 00:09:53,630
you know graph so I if I just run this

00:09:51,350 --> 00:09:55,280
you will see that you know on the screen

00:09:53,630 --> 00:09:58,360
this is a graph that I see right very

00:09:55,280 --> 00:10:00,170
simple file line of code but you know

00:09:58,360 --> 00:10:02,180
real world programs are much more

00:10:00,170 --> 00:10:04,250
complex and you require continuous sync

00:10:02,180 --> 00:10:05,720
between let's the graphs because you

00:10:04,250 --> 00:10:08,000
know you'll use complex things like data

00:10:05,720 --> 00:10:09,770
frames and you know in pandas frame and

00:10:08,000 --> 00:10:11,090
stuff like that so what we thought was

00:10:09,770 --> 00:10:13,310
you know why not give you something cool

00:10:11,090 --> 00:10:16,340
so if I want to change this again to

00:10:13,310 --> 00:10:24,500
let's say 20 I have to you know maybe

00:10:16,340 --> 00:10:30,230
save this file I have to I have to save

00:10:24,500 --> 00:10:32,180
this file and run again right and then

00:10:30,230 --> 00:10:34,520
it will show me ok this is now how my

00:10:32,180 --> 00:10:38,620
new graphs is going to look like right I

00:10:34,520 --> 00:10:38,620
think I did a typo maybe

00:10:50,100 --> 00:10:59,160
okay let me go back a little bit so this

00:10:56,790 --> 00:11:04,380
was my original slip I tried and then if

00:10:59,160 --> 00:11:05,910
I just try to do you know 20 Wow

00:11:04,380 --> 00:11:08,330
something's funny happening with my

00:11:05,910 --> 00:11:08,330
mouse here

00:11:12,120 --> 00:11:18,390
okay let me go back I think there's some

00:11:15,900 --> 00:11:20,130
problem so let's say the capability I

00:11:18,390 --> 00:11:21,720
wanted to show is you keep changing that

00:11:20,130 --> 00:11:24,150
and then you know you have to pop up the

00:11:21,720 --> 00:11:26,340
output again what I wanted to show you

00:11:24,150 --> 00:11:28,470
is you know how you can instantly bring

00:11:26,340 --> 00:11:30,360
up a jupiter notebook kind of

00:11:28,470 --> 00:11:32,580
environment here by just typing a hash

00:11:30,360 --> 00:11:33,810
and double percent and then it gives you

00:11:32,580 --> 00:11:35,880
an option to say you know run the cell

00:11:33,810 --> 00:11:37,440
so what happens is in the same window on

00:11:35,880 --> 00:11:40,140
the right-hand side you get an

00:11:37,440 --> 00:11:42,450
interactive Python window running right

00:11:40,140 --> 00:11:44,340
and if you see right here oh yes this is

00:11:42,450 --> 00:11:46,110
this is how I can now toggle between the

00:11:44,340 --> 00:11:48,600
two windows I can just close this and

00:11:46,110 --> 00:11:50,100
then see in the side saying that this is

00:11:48,600 --> 00:11:53,340
how I can actually work together and

00:11:50,100 --> 00:11:55,350
then convert my plain Python code into

00:11:53,340 --> 00:11:57,930
an interactive Python code right and

00:11:55,350 --> 00:11:59,490
then you are you're free to sort of you

00:11:57,930 --> 00:12:01,350
know toggle between these two things as

00:11:59,490 --> 00:12:03,030
you go along at any point in time you

00:12:01,350 --> 00:12:04,980
want to write more code or if you want

00:12:03,030 --> 00:12:08,160
to you know not do these things you can

00:12:04,980 --> 00:12:10,110
just remove this you know and the shell

00:12:08,160 --> 00:12:12,090
goes away right because it says okay no

00:12:10,110 --> 00:12:13,800
you're not you know you're not using the

00:12:12,090 --> 00:12:15,510
interactive shell anymore and then you

00:12:13,800 --> 00:12:18,740
don't need it the other way of

00:12:15,510 --> 00:12:21,450
converting something to a to a

00:12:18,740 --> 00:12:23,820
interactive Python notebook is you can

00:12:21,450 --> 00:12:25,560
actually run the current file an

00:12:23,820 --> 00:12:28,050
interactive window so again it will go

00:12:25,560 --> 00:12:30,630
and pop up the same way in the previous

00:12:28,050 --> 00:12:32,730
versions of our Python tooling we didn't

00:12:30,630 --> 00:12:34,290
have this option but today we do have

00:12:32,730 --> 00:12:37,040
this option so if you see first it will

00:12:34,290 --> 00:12:39,660
try to print the path and then it will

00:12:37,040 --> 00:12:41,910
also try to show the graph so it's very

00:12:39,660 --> 00:12:45,060
easy for you to toggle between you know

00:12:41,910 --> 00:12:47,310
back and forth right so that was another

00:12:45,060 --> 00:12:48,750
demo of you know how you how you do

00:12:47,310 --> 00:12:50,880
stuff with we just to do code if you

00:12:48,750 --> 00:12:53,700
haven't actually list it and the last

00:12:50,880 --> 00:12:57,120
thing I wanted to show you is you know

00:12:53,700 --> 00:12:58,800
the last thing is how do you run you

00:12:57,120 --> 00:13:00,960
know Python in a server less fashion

00:12:58,800 --> 00:13:02,070
right when you write a Python code you

00:13:00,960 --> 00:13:04,650
need to have some machine somewhere

00:13:02,070 --> 00:13:06,720
right but service is the new new mantra

00:13:04,650 --> 00:13:08,820
and the microservices foil so what we

00:13:06,720 --> 00:13:11,280
actually give you is a way to run this

00:13:08,820 --> 00:13:15,750
in a server lester if you see I have a

00:13:11,280 --> 00:13:17,670
Python code right here in the in the

00:13:15,750 --> 00:13:20,370
trigger function and this is just going

00:13:17,670 --> 00:13:22,830
to take you know it's not flask it's not

00:13:20,370 --> 00:13:24,570
any of the frameworks it's Microsoft as

00:13:22,830 --> 00:13:25,620
your functions it's just trying to do

00:13:24,570 --> 00:13:27,690
something and again this

00:13:25,620 --> 00:13:29,670
teachers up put it on the cloud without

00:13:27,690 --> 00:13:34,110
having to create a machine so what this

00:13:29,670 --> 00:13:35,970
actually does is helps me you know run

00:13:34,110 --> 00:13:37,680
Python code in a soulless fashion

00:13:35,970 --> 00:13:39,270
without having to install anything and

00:13:37,680 --> 00:13:42,800
this is the local emulator that I'm

00:13:39,270 --> 00:13:45,510
running right so if you see so much of

00:13:42,800 --> 00:13:46,020
so much of inbuilt tooling that you get

00:13:45,510 --> 00:13:48,330
right here

00:13:46,020 --> 00:13:50,010
right and on top of it I can just go and

00:13:48,330 --> 00:13:52,590
start browsing the API right so I can

00:13:50,010 --> 00:13:53,790
just click this it goes into the eye it

00:13:52,590 --> 00:13:56,190
will give an error because I haven't

00:13:53,790 --> 00:14:02,640
passed a parameter yet so if I go to the

00:13:56,190 --> 00:14:05,790
end if I go to the end and say name

00:14:02,640 --> 00:14:08,220
equal to SJ it will start printing it

00:14:05,790 --> 00:14:10,560
out you know all running locally and a

00:14:08,220 --> 00:14:14,580
great debugging support because once you

00:14:10,560 --> 00:14:18,090
come back to the vs code you see all the

00:14:14,580 --> 00:14:21,240
logging right here so python plus plus

00:14:18,090 --> 00:14:23,460
vs code plus serverless will make you do

00:14:21,240 --> 00:14:25,140
awesome things so I'll be hanging around

00:14:23,460 --> 00:14:26,910
this is end of my part of the demo nah

00:14:25,140 --> 00:14:30,300
she should comments tell you more about

00:14:26,910 --> 00:14:33,270
how the ML side of things looks much

00:14:30,300 --> 00:14:39,540
more better on on the tooling side with

00:14:33,270 --> 00:14:44,670
regis code and microsoft azure so so

00:14:39,540 --> 00:14:46,770
good morning everyone so good morning my

00:14:44,670 --> 00:14:49,290
name is artists I do the same stuff you

00:14:46,770 --> 00:14:51,420
know a saga does and one thing that I'm

00:14:49,290 --> 00:14:53,700
not going to do today is show you any

00:14:51,420 --> 00:14:55,890
slides so we will directly get into the

00:14:53,700 --> 00:14:57,420
demos here right so this is a function

00:14:55,890 --> 00:14:59,310
app that we just created right the

00:14:57,420 --> 00:15:01,200
socket talked about it so what you can

00:14:59,310 --> 00:15:03,900
do is you can simply press f5 Envy is

00:15:01,200 --> 00:15:06,510
cold and start running it and you know

00:15:03,900 --> 00:15:08,190
it does the usual stuff it basically so

00:15:06,510 --> 00:15:10,050
I have the functions runtime and the

00:15:08,190 --> 00:15:12,420
functions extensions you know installed

00:15:10,050 --> 00:15:14,070
in my via scored and that's what is

00:15:12,420 --> 00:15:16,200
actually making all this magic happen

00:15:14,070 --> 00:15:17,520
so my codes are running locally and you

00:15:16,200 --> 00:15:18,930
know you can test it out you can do

00:15:17,520 --> 00:15:21,720
whatever you want to do with your

00:15:18,930 --> 00:15:23,220
functions it like you know he showed it

00:15:21,720 --> 00:15:26,880
you know it's a pretty basic function

00:15:23,220 --> 00:15:28,950
HTTP trigger so that what you can do is

00:15:26,880 --> 00:15:31,320
you can call it you know in your

00:15:28,950 --> 00:15:34,980
applications using the HTTP client that

00:15:31,320 --> 00:15:37,500
simple is that right and how do you run

00:15:34,980 --> 00:15:38,700
it you do the control click and you get

00:15:37,500 --> 00:15:41,710
this

00:15:38,700 --> 00:15:44,410
option here and it's expecting the name

00:15:41,710 --> 00:15:46,030
parameter so let me I'll just do this

00:15:44,410 --> 00:15:48,070
right we have already seen this demo

00:15:46,030 --> 00:15:51,220
right what we are going to do next is we

00:15:48,070 --> 00:15:51,670
are just going to extend a little bit

00:15:51,220 --> 00:15:53,890
right

00:15:51,670 --> 00:15:56,380
so when sagar was going through the

00:15:53,890 --> 00:15:58,660
slides he talked about the services like

00:15:56,380 --> 00:16:01,510
you know pre-built ai models and as well

00:15:58,660 --> 00:16:02,770
as the ml services right so what we are

00:16:01,510 --> 00:16:04,690
going to do is you know we are going to

00:16:02,770 --> 00:16:06,760
take a look at that how do you take a

00:16:04,690 --> 00:16:09,310
plain vanilla function and try to infuse

00:16:06,760 --> 00:16:10,870
you know a little bit of pre pre trained

00:16:09,310 --> 00:16:12,400
a eyes into the function and you know

00:16:10,870 --> 00:16:14,410
get something more interesting going

00:16:12,400 --> 00:16:17,050
right so what I'm going to do is I'm

00:16:14,410 --> 00:16:21,520
just going to change all my name

00:16:17,050 --> 00:16:23,800
parameters so to say our text right and

00:16:21,520 --> 00:16:25,960
then what I'm going to do is I'm just

00:16:23,800 --> 00:16:30,190
going to take a little bit of technical

00:16:25,960 --> 00:16:31,630
Liberty here and there's the snippet

00:16:30,190 --> 00:16:37,000
which is already there in the keyboard

00:16:31,630 --> 00:16:39,790
in my clipboard right and then what I'm

00:16:37,000 --> 00:16:41,700
going to do is I am just going to print

00:16:39,790 --> 00:16:44,860
the output that I'm going to get from

00:16:41,700 --> 00:16:47,920
the API calls so what's happening here

00:16:44,860 --> 00:16:49,510
is that I already have the as your

00:16:47,920 --> 00:16:51,220
cognitive service called techniques

00:16:49,510 --> 00:16:53,260
analytics provision you know right so

00:16:51,220 --> 00:16:57,010
what I'm doing is I'm just creating a

00:16:53,260 --> 00:16:58,600
endpoint here I have my key mentioned

00:16:57,010 --> 00:17:00,550
right here and I'm going to change it

00:16:58,600 --> 00:17:02,590
authorization so that you know you don't

00:17:00,550 --> 00:17:05,410
make a note of it I get billed you know

00:17:02,590 --> 00:17:06,790
for that so so that's what is happening

00:17:05,410 --> 00:17:08,319
and I'm just printing out different this

00:17:06,790 --> 00:17:12,579
function here right so I'm just going to

00:17:08,319 --> 00:17:14,560
change this takes two sentiments because

00:17:12,579 --> 00:17:21,430
that's what my output is right and I'm

00:17:14,560 --> 00:17:23,290
just going to run it right here and then

00:17:21,430 --> 00:17:26,829
the function that I was just running you

00:17:23,290 --> 00:17:28,840
know a few seconds ago is going to be

00:17:26,829 --> 00:17:30,400
doing some additional stuff and which is

00:17:28,840 --> 00:17:33,940
to basically make a call to the text

00:17:30,400 --> 00:17:35,830
neurotics and do the you know bunch of

00:17:33,940 --> 00:17:39,130
the AI stuff on it and shows the output

00:17:35,830 --> 00:17:42,280
so let's try that let me launch it in my

00:17:39,130 --> 00:17:45,040
browser right so right now it doesn't

00:17:42,280 --> 00:17:48,210
have anything so I'm going to do this

00:17:45,040 --> 00:17:48,210
and say

00:17:50,760 --> 00:17:59,040
right then what happens is it's actually

00:17:56,080 --> 00:18:03,580
making a call to the technologies API

00:17:59,040 --> 00:18:06,070
which you can come here and also see

00:18:03,580 --> 00:18:09,580
here and I did not get an output here

00:18:06,070 --> 00:18:11,560
well okay so I see one error here right

00:18:09,580 --> 00:18:13,120
so the name request is not defined here

00:18:11,560 --> 00:18:16,210
so what did I miss here is that I have

00:18:13,120 --> 00:18:19,090
not installed the requests module here

00:18:16,210 --> 00:18:23,410
so what I need to do is either I can

00:18:19,090 --> 00:18:26,410
come back here and add it to my

00:18:23,410 --> 00:18:31,270
requirements file right which is going

00:18:26,410 --> 00:18:33,310
to be as simple as this or I come back

00:18:31,270 --> 00:18:36,010
here and I show you the function that I

00:18:33,310 --> 00:18:38,080
have already put anything and everything

00:18:36,010 --> 00:18:43,420
is running so let me run that function

00:18:38,080 --> 00:18:45,310
and show you how it works right same

00:18:43,420 --> 00:18:47,650
stuff it passes through the requirements

00:18:45,310 --> 00:18:52,290
dot txt installs all my modules

00:18:47,650 --> 00:18:54,670
libraries and then everything is ready

00:18:52,290 --> 00:18:56,680
right so I've got two functions in this

00:18:54,670 --> 00:19:00,160
particular project and I'm just going to

00:18:56,680 --> 00:19:03,870
run this one and before it shows me an

00:19:00,160 --> 00:19:07,240
error I'm just going to type something

00:19:03,870 --> 00:19:10,150
which looks like review for a hotel room

00:19:07,240 --> 00:19:12,450
kind of thing right and this time

00:19:10,150 --> 00:19:14,500
that should work right so this is my

00:19:12,450 --> 00:19:15,760
output that is coming from the text

00:19:14,500 --> 00:19:17,740
analytics API and I'm just printing

00:19:15,760 --> 00:19:20,020
printing it wrong so just to make it you

00:19:17,740 --> 00:19:22,180
know a little bit more easier to the

00:19:20,020 --> 00:19:27,070
eyes I'm going to go to Jason Lane comm

00:19:22,180 --> 00:19:29,320
and put it here and validate now what's

00:19:27,070 --> 00:19:30,730
happening here is you see the output

00:19:29,320 --> 00:19:34,440
here right so the ten sentiment in this

00:19:30,730 --> 00:19:38,850
particular takes that I had which was

00:19:34,440 --> 00:19:38,850
this one I would recommend this place

00:19:38,910 --> 00:19:43,060
and this is the one I didn't want to

00:19:41,080 --> 00:19:45,850
show only for my enemies you know yeah

00:19:43,060 --> 00:19:47,650
it was a fun we were actually not doing

00:19:45,850 --> 00:19:49,390
sorry to do that but now since we have

00:19:47,650 --> 00:19:50,620
the output let's go through that so if

00:19:49,390 --> 00:19:51,820
you take a look at the sentiment here

00:19:50,620 --> 00:19:54,550
right it shows you know it's a mixed

00:19:51,820 --> 00:19:57,040
sentiment thing right so I've gotten 50%

00:19:54,550 --> 00:20:00,040
of the document which is basically the

00:19:57,040 --> 00:20:02,880
entire review towards the positive side

00:20:00,040 --> 00:20:04,960
and the 49% of this text was actually

00:20:02,880 --> 00:20:06,700
negative side right that's what we see

00:20:04,960 --> 00:20:07,000
if there were any neutral sentences we

00:20:06,700 --> 00:20:09,039
would

00:20:07,000 --> 00:20:10,600
seen that as well and what is happening

00:20:09,039 --> 00:20:13,210
furthermore is that you know it's

00:20:10,600 --> 00:20:15,880
actually breaking down the text that I

00:20:13,210 --> 00:20:18,940
gave gave to the API in two sentences

00:20:15,880 --> 00:20:20,409
and then it's giving me the score of the

00:20:18,940 --> 00:20:23,049
positivity and negativity here right so

00:20:20,409 --> 00:20:25,630
you can see the first sentence is 99%

00:20:23,049 --> 00:20:28,659
positive and the second one is actually

00:20:25,630 --> 00:20:30,940
98% negative so that's what the making

00:20:28,659 --> 00:20:32,919
the entire complete document score as

00:20:30,940 --> 00:20:34,870
something you know which is 50% positive

00:20:32,919 --> 00:20:35,289
and 50% negative right so that's what it

00:20:34,870 --> 00:20:37,539
did

00:20:35,289 --> 00:20:41,559
now that's one example what we should

00:20:37,539 --> 00:20:43,450
also do is let's take a look at another

00:20:41,559 --> 00:20:46,120
function that I already have running and

00:20:43,450 --> 00:20:49,659
let me just show you the cord here so

00:20:46,120 --> 00:20:51,580
let me close this one and what I'm doing

00:20:49,659 --> 00:20:54,370
in this one is that I am calling another

00:20:51,580 --> 00:20:56,409
pre-built AI service called computer

00:20:54,370 --> 00:20:58,360
vision here right and what I'm going to

00:20:56,409 --> 00:21:03,039
do here is I'm just going to take this

00:20:58,360 --> 00:21:08,049
URL which is basically an image and I'm

00:21:03,039 --> 00:21:09,370
going to do the same stuff and this is

00:21:08,049 --> 00:21:12,909
already running so I'm just going to

00:21:09,370 --> 00:21:20,830
change this to the second function and

00:21:12,909 --> 00:21:23,080
change the parameter to URL and give the

00:21:20,830 --> 00:21:25,270
path to that image URL which I have

00:21:23,080 --> 00:21:27,490
already copied in you know from my code

00:21:25,270 --> 00:21:28,750
so what it is doing this time is

00:21:27,490 --> 00:21:30,549
actually making call to the computer

00:21:28,750 --> 00:21:33,070
vision API and trying to analyze the

00:21:30,549 --> 00:21:36,250
image to fetch the you know information

00:21:33,070 --> 00:21:38,980
that we can have you know and let's take

00:21:36,250 --> 00:21:44,620
a look at that also so again same stuff

00:21:38,980 --> 00:21:45,700
just in Lent and right so here that is

00:21:44,620 --> 00:21:47,830
doing a bunch of things you know it's

00:21:45,700 --> 00:21:49,240
trying to detect the that mean you know

00:21:47,830 --> 00:21:55,929
walk you through the code a little bit

00:21:49,240 --> 00:21:57,130
here right so these are the four or four

00:21:55,929 --> 00:21:58,450
or five you know different kinds of

00:21:57,130 --> 00:21:59,710
analysis that we are doing we are trying

00:21:58,450 --> 00:22:01,900
to you know describe the image we're

00:21:59,710 --> 00:22:03,940
trying to extract the categories of the

00:22:01,900 --> 00:22:06,400
contents that we have in the image then

00:22:03,940 --> 00:22:08,970
colors brands faces and objects right so

00:22:06,400 --> 00:22:12,970
if you take a look at the output here

00:22:08,970 --> 00:22:16,980
right we have categories people because

00:22:12,970 --> 00:22:16,980
in that photo which is this one

00:22:17,380 --> 00:22:23,210
right this is Brandon burns and then he

00:22:21,440 --> 00:22:24,380
is obviously talking in a conference so

00:22:23,210 --> 00:22:26,210
we see that you know that is were

00:22:24,380 --> 00:22:30,320
actually able to categorize this image

00:22:26,210 --> 00:22:31,910
as people then it did the color stuff it

00:22:30,320 --> 00:22:33,740
also trying to you know it also built a

00:22:31,910 --> 00:22:35,510
description for us and then we have the

00:22:33,740 --> 00:22:37,190
faces so we also did the face detection

00:22:35,510 --> 00:22:38,750
and that is the location and you know

00:22:37,190 --> 00:22:40,790
the gender of the person that we

00:22:38,750 --> 00:22:42,430
detected there and then we also have the

00:22:40,790 --> 00:22:46,340
objects right so there's a bottle

00:22:42,430 --> 00:22:48,380
there's a laptop and there's a person

00:22:46,340 --> 00:22:50,540
here right so that we all you know can

00:22:48,380 --> 00:22:52,040
have definitely see here what is also

00:22:50,540 --> 00:22:54,140
doing additionally is that it also

00:22:52,040 --> 00:22:56,450
detected a brand there in the image you

00:22:54,140 --> 00:22:59,390
know which is Apple should have taken a

00:22:56,450 --> 00:23:01,280
different image but yeah you have an

00:22:59,390 --> 00:23:05,840
Apple MacBook here right so that you see

00:23:01,280 --> 00:23:11,030
here now let's try this and let me take

00:23:05,840 --> 00:23:12,620
another image because what ideas did is

00:23:11,030 --> 00:23:14,060
you know that I want to show you the

00:23:12,620 --> 00:23:15,650
cell ability recognition that we do from

00:23:14,060 --> 00:23:18,410
this API right so what I'm going to do

00:23:15,650 --> 00:23:20,450
is I'm just going to take this same API

00:23:18,410 --> 00:23:22,630
call and give it a different image right

00:23:20,450 --> 00:23:22,630
now

00:23:26,310 --> 00:23:37,020
right this is the output let's do the

00:23:29,940 --> 00:23:39,240
same stuff here right we have everything

00:23:37,020 --> 00:23:42,150
you know things like that and then we

00:23:39,240 --> 00:23:44,190
have got the description right you can

00:23:42,150 --> 00:23:45,870
all read that no and then there's also

00:23:44,190 --> 00:23:51,000
celebrated recognition so we have this

00:23:45,870 --> 00:23:53,400
and then let's go and try to look at the

00:23:51,000 --> 00:23:58,140
image that I actually gave it and that's

00:23:53,400 --> 00:23:59,690
this one right and then it also does

00:23:58,140 --> 00:24:04,100
based on this photo I mean we all know

00:23:59,690 --> 00:24:08,450
about him right but let's do this thing

00:24:04,100 --> 00:24:08,450
where is that out part

00:24:12,220 --> 00:24:15,940
so we did this elaborate recognition

00:24:13,930 --> 00:24:17,740
anyway right but what we did also in the

00:24:15,940 --> 00:24:19,540
we were also trying to analyze the faces

00:24:17,740 --> 00:24:21,670
that we did detect in the image right so

00:24:19,540 --> 00:24:23,530
that's what we read and if you come here

00:24:21,670 --> 00:24:24,730
and take a look at this you know this

00:24:23,530 --> 00:24:26,860
will come as a surprising but if you

00:24:24,730 --> 00:24:28,810
look at the photo right it doesn't look

00:24:26,860 --> 00:24:31,120
you know very far face right so that's

00:24:28,810 --> 00:24:33,220
what it is doing now that was the pre

00:24:31,120 --> 00:24:35,890
built AI is that we did right and then

00:24:33,220 --> 00:24:37,420
the other thing that we also do I mean

00:24:35,890 --> 00:24:39,130
you can also do with the vs code is

00:24:37,420 --> 00:24:42,480
actually not take it a step further and

00:24:39,130 --> 00:24:44,620
start utilizing it when you are you know

00:24:42,480 --> 00:24:47,110
actually building the custom models

00:24:44,620 --> 00:24:49,000
right so unfortunately we are you know

00:24:47,110 --> 00:24:50,830
slightly out of time so I think it's

00:24:49,000 --> 00:24:53,940
time for a question and answer but one

00:24:50,830 --> 00:25:02,580
thing I would like to show you is the

00:24:53,940 --> 00:25:05,740
okay I have to change my resolution okay

00:25:02,580 --> 00:25:08,380
that's the one so what you can do is you

00:25:05,740 --> 00:25:09,550
can actually use the vs code also vs

00:25:08,380 --> 00:25:11,050
code along with the age of machine

00:25:09,550 --> 00:25:12,520
learning service to also do your team

00:25:11,050 --> 00:25:15,040
data science projects which actually is

00:25:12,520 --> 00:25:16,840
you know your complete life cycle of

00:25:15,040 --> 00:25:18,310
data science project you know like you

00:25:16,840 --> 00:25:19,570
do the application lifecycle management

00:25:18,310 --> 00:25:21,820
you can also do the data science

00:25:19,570 --> 00:25:24,520
lifecycle management using the vs code

00:25:21,820 --> 00:25:25,720
and we're out of time so I couldn't show

00:25:24,520 --> 00:25:27,610
you the demo but you can do things like

00:25:25,720 --> 00:25:29,440
you know training your models locally or

00:25:27,610 --> 00:25:30,580
in the cloud register your models with

00:25:29,440 --> 00:25:32,410
the service you know most written

00:25:30,580 --> 00:25:34,260
there's a new place analyze how your

00:25:32,410 --> 00:25:37,030
models are performing across you know

00:25:34,260 --> 00:25:38,740
everybody is you know data science

00:25:37,030 --> 00:25:40,630
environment in a single place to

00:25:38,740 --> 00:25:43,330
understand which model books you know

00:25:40,630 --> 00:25:46,300
better or not and all that stuff so with

00:25:43,330 --> 00:25:47,950
that thanks any questions if you have

00:25:46,300 --> 00:25:51,250
the time for please go ahead you know

00:25:47,950 --> 00:25:53,290
pick the mic and let us know and then we

00:25:51,250 --> 00:25:54,970
also have a booth outside the mics of

00:25:53,290 --> 00:26:01,150
booth so you don't you can always come

00:25:54,970 --> 00:26:04,810
and talk to us there as well do you have

00:26:01,150 --> 00:26:06,220
any extensions that you'd recommend so

00:26:04,810 --> 00:26:08,230
what kind of development do you do I

00:26:06,220 --> 00:26:10,030
mean python python right so there's a

00:26:08,230 --> 00:26:11,530
python extension so if you other than

00:26:10,030 --> 00:26:14,140
the main python extension and the

00:26:11,530 --> 00:26:18,670
language server I mean as a developer do

00:26:14,140 --> 00:26:19,990
you recommend anything okay so these are

00:26:18,670 --> 00:26:21,490
the two things that we have used so far

00:26:19,990 --> 00:26:23,050
so we haven't you know needed anything

00:26:21,490 --> 00:26:25,159
else but if you go there and you don't

00:26:23,050 --> 00:26:26,330
search for Python you know you have

00:26:25,159 --> 00:26:29,419
of these things to know that you can

00:26:26,330 --> 00:26:32,779
possibly find useful basically you can

00:26:29,419 --> 00:26:34,460
use the as your functions extension as

00:26:32,779 --> 00:26:36,710
well and here's your extension as well

00:26:34,460 --> 00:26:39,409
so those are two things that will do a

00:26:36,710 --> 00:26:41,179
lot of work for you already official

00:26:39,409 --> 00:26:43,580
ones that we have and we highly

00:26:41,179 --> 00:26:45,769
recommend that not the only official

00:26:43,580 --> 00:26:50,749
ones these are also the community built

00:26:45,769 --> 00:26:52,849
ones yeah hey um so whatever you should

00:26:50,749 --> 00:26:54,710
or means I actually use vs code for a

00:26:52,849 --> 00:26:56,299
lot of things but the second part that

00:26:54,710 --> 00:26:57,769
you showed it's just a REST API right I

00:26:56,299 --> 00:27:00,919
can do it in pycharm I can do it in

00:26:57,769 --> 00:27:02,389
anything anyway so what like how do you

00:27:00,919 --> 00:27:04,129
think of leveraging vs code would help

00:27:02,389 --> 00:27:05,149
in that case so in this case you know

00:27:04,129 --> 00:27:06,799
what you saw

00:27:05,149 --> 00:27:09,169
using the functions extensions I was

00:27:06,799 --> 00:27:11,509
actually running that code locally right

00:27:09,169 --> 00:27:12,710
so you can do that in Python uh but you

00:27:11,509 --> 00:27:13,700
know if you want to push it you know you

00:27:12,710 --> 00:27:15,440
will have to basically use any

00:27:13,700 --> 00:27:17,509
additional tool so you know to do that

00:27:15,440 --> 00:27:18,769
they web stuff there right so what I can

00:27:17,509 --> 00:27:20,809
do is you know I can come back to this

00:27:18,769 --> 00:27:22,789
code right here right now right here and

00:27:20,809 --> 00:27:23,690
push it to my function that so it kind

00:27:22,789 --> 00:27:25,999
of gives you an end-to-end experience

00:27:23,690 --> 00:27:27,019
you know developing locally testing

00:27:25,999 --> 00:27:31,009
locally and applying it to your

00:27:27,019 --> 00:27:32,809
production also the as your ml deep

00:27:31,009 --> 00:27:36,109
learning SDK and you know the Python SDK

00:27:32,809 --> 00:27:37,700
for vs code that actually gives you a

00:27:36,109 --> 00:27:39,349
lot of flexibility where you know you're

00:27:37,700 --> 00:27:41,210
the you are the boss of the code anyways

00:27:39,349 --> 00:27:43,190
but the peripheral thing so it makes

00:27:41,210 --> 00:27:43,519
super easy for you to interact with the

00:27:43,190 --> 00:27:45,200
code

00:27:43,519 --> 00:27:49,629
he was about to show that but but I'm

00:27:45,200 --> 00:27:49,629
happy to run you through on the booth

00:27:55,419 --> 00:27:59,909
thanks everyone you have been wonderful

00:27:57,249 --> 00:27:59,909

YouTube URL: https://www.youtube.com/watch?v=TD5V-ivlSV0


