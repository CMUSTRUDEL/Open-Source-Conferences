Title: REST APIs - What, Why and How - PyCon India 2015
Publication date: 2015-10-12
Playlist: PyCon India 2015
Description: 
	Speaker: Devi ASL

Details: https://in.pycon.org/cfp/pycon-india-2015/proposals/rest-apis-what-why-and-how/
Captions: 
	00:00:06,750 --> 00:00:13,100
ap has what why and how for this session

00:00:10,080 --> 00:00:15,240
we have a with us speaker Devi ma'am and

00:00:13,100 --> 00:00:18,119
she is a freelancer programmer

00:00:15,240 --> 00:00:20,520
consultant and a trainer she has done

00:00:18,119 --> 00:00:22,259
her mtech in computers and computational

00:00:20,520 --> 00:00:24,960
science from indian institute of science

00:00:22,259 --> 00:00:27,260
she is currently working as an architect

00:00:24,960 --> 00:00:30,560
lead developer for power to fly I

00:00:27,260 --> 00:00:33,750
request ma'am to start the session

00:00:30,560 --> 00:00:36,030
thanks for the introduction for me good

00:00:33,750 --> 00:00:39,180
morning one and all I hope you had a

00:00:36,030 --> 00:00:42,630
wonderful keynote session and the house

00:00:39,180 --> 00:00:46,320
is full here and I hope I'll satisfy all

00:00:42,630 --> 00:00:49,020
of you at least a bit yeah let's start

00:00:46,320 --> 00:00:52,280
decision so I am we are going to talk

00:00:49,020 --> 00:00:55,800
about recipe ice and why they useful

00:00:52,280 --> 00:00:58,879
what are they and how do you go about

00:00:55,800 --> 00:01:02,160
designing a one and what are the choices

00:00:58,879 --> 00:01:07,920
one should make while choosing a library

00:01:02,160 --> 00:01:11,840
to make a one right so I work of a

00:01:07,920 --> 00:01:15,960
powder flight which connects women to

00:01:11,840 --> 00:01:19,920
remote or part-time George our platform

00:01:15,960 --> 00:01:23,490
is such that it's a it's a web it's a

00:01:19,920 --> 00:01:26,850
website like LinkedIn for women wherein

00:01:23,490 --> 00:01:30,150
we had to develop in-house ap is for

00:01:26,850 --> 00:01:33,330
adults for our size that's where all

00:01:30,150 --> 00:01:36,720
this understanding or diving into rest

00:01:33,330 --> 00:01:42,390
APIs has come into picture let me share

00:01:36,720 --> 00:01:45,290
that with you so what is an API so api's

00:01:42,390 --> 00:01:48,060
are basically a programmable interface

00:01:45,290 --> 00:01:50,990
all the context of this talk i am going

00:01:48,060 --> 00:01:53,670
to be only with web services right I'm

00:01:50,990 --> 00:01:56,159
receive gays are possible with in other

00:01:53,670 --> 00:01:58,860
contexts is but we are going to stick

00:01:56,159 --> 00:02:02,790
only for web services what is an epi is

00:01:58,860 --> 00:02:05,100
a programmable interface as we are being

00:02:02,790 --> 00:02:09,509
humans we interact with computers or

00:02:05,100 --> 00:02:12,390
websites by I mean manually rained but

00:02:09,509 --> 00:02:15,060
if we want to make those web services be

00:02:12,390 --> 00:02:18,900
interacted to the program's how do we do

00:02:15,060 --> 00:02:20,610
that it is via API is so for computer

00:02:18,900 --> 00:02:25,710
programs to communicate with each other

00:02:20,610 --> 00:02:27,900
that is where ap ice so what is what

00:02:25,710 --> 00:02:31,370
does it mean by designing an API or

00:02:27,900 --> 00:02:34,800
having an API it is designing a format

00:02:31,370 --> 00:02:37,770
for the client to communicate with the

00:02:34,800 --> 00:02:43,470
server so a server is offering an API a

00:02:37,770 --> 00:02:46,800
service as an epi and it has to have a

00:02:43,470 --> 00:02:50,340
format on how to request for something

00:02:46,800 --> 00:02:53,790
to be done and in return what to expect

00:02:50,340 --> 00:02:56,010
as a response how does it respond like

00:02:53,790 --> 00:02:57,840
like our languages or the programming

00:02:56,010 --> 00:03:00,320
languages they have certain rules or

00:02:57,840 --> 00:03:03,480
specification every language straight

00:03:00,320 --> 00:03:05,730
whether we use it in communication

00:03:03,480 --> 00:03:08,580
manually or through programs so

00:03:05,730 --> 00:03:14,910
similarly API is have set of rules and

00:03:08,580 --> 00:03:18,330
specifications so why are they useful

00:03:14,910 --> 00:03:22,470
why our API is useful you might have

00:03:18,330 --> 00:03:25,739
seen that if you are a developer and if

00:03:22,470 --> 00:03:28,410
you are doing a core of let's say we are

00:03:25,739 --> 00:03:30,030
developing a product not everything we

00:03:28,410 --> 00:03:32,519
can build from the scratch when we use

00:03:30,030 --> 00:03:34,799
third party services like Amazon Web

00:03:32,519 --> 00:03:37,680
Services or stripe payments or elastic

00:03:34,799 --> 00:03:39,480
search or solar anything we have lots of

00:03:37,680 --> 00:03:42,660
software which is already been written

00:03:39,480 --> 00:03:45,810
in different technology stacks so they

00:03:42,660 --> 00:03:49,100
are offered as services to AP ice for us

00:03:45,810 --> 00:03:53,060
to use so that we do not need to

00:03:49,100 --> 00:03:56,340
reinvent the wheel from the scratch or

00:03:53,060 --> 00:03:59,730
the best part of the AP ice is that we

00:03:56,340 --> 00:04:03,239
do not need a bother of what the

00:03:59,730 --> 00:04:06,950
technology stack is for AWS if you are

00:04:03,239 --> 00:04:09,630
using AWS as storied storage for storage

00:04:06,950 --> 00:04:11,190
you don't need to bother about what is

00:04:09,630 --> 00:04:12,750
the technology stack they are using or

00:04:11,190 --> 00:04:15,150
which programming languages it is

00:04:12,750 --> 00:04:18,419
written you don't bother about it you

00:04:15,150 --> 00:04:20,790
just think of what is the API and how

00:04:18,419 --> 00:04:23,820
should you request I just want to dump

00:04:20,790 --> 00:04:26,130
all my images onto AWS and I'll just

00:04:23,820 --> 00:04:28,410
look at the API nothing else I am not

00:04:26,130 --> 00:04:32,880
bothered about about the technology

00:04:28,410 --> 00:04:33,740
stack or anything else so a public API

00:04:32,880 --> 00:04:36,860
is

00:04:33,740 --> 00:04:42,759
it lets you glue in different technology

00:04:36,860 --> 00:04:48,710
stacks or languages of choices right and

00:04:42,759 --> 00:04:51,289
not all API is need to be public we won

00:04:48,710 --> 00:04:53,120
can have a company inside they can have

00:04:51,289 --> 00:04:55,430
private api's they are not exposed to

00:04:53,120 --> 00:04:59,210
the public it is not for the outside

00:04:55,430 --> 00:05:02,120
world to be used to use the am but it is

00:04:59,210 --> 00:05:04,669
just for them you might have used slack

00:05:02,120 --> 00:05:07,159
for communication or almost all of you

00:05:04,669 --> 00:05:11,900
use facebook you have got my mobile app

00:05:07,159 --> 00:05:14,720
on your mobile and a website right but

00:05:11,900 --> 00:05:18,259
not both of them are separate in their

00:05:14,720 --> 00:05:20,870
UI not the whole technical slack there

00:05:18,259 --> 00:05:22,280
wouldn't be the application the

00:05:20,870 --> 00:05:24,110
application totally wouldn't be

00:05:22,280 --> 00:05:27,139
separately written for mobile app and

00:05:24,110 --> 00:05:30,740
separately written for the website right

00:05:27,139 --> 00:05:34,130
there is lot of common thing the code on

00:05:30,740 --> 00:05:36,530
which there is a layer the UI layer is

00:05:34,130 --> 00:05:40,039
separate so the they expose the other

00:05:36,530 --> 00:05:43,909
the the core facebook is exposed as an

00:05:40,039 --> 00:05:47,199
API on which the UI talks to them right

00:05:43,909 --> 00:05:51,740
we'll see what how API is look like and

00:05:47,199 --> 00:05:54,729
so now that we know a bit of what API

00:05:51,740 --> 00:05:59,479
means we will see what is it rest api

00:05:54,729 --> 00:06:02,690
what is rest there so our EST there as

00:05:59,479 --> 00:06:06,050
an acronym it's representational state

00:06:02,690 --> 00:06:10,940
transfer it is all about a style of

00:06:06,050 --> 00:06:12,250
architecture of how do you model the

00:06:10,940 --> 00:06:15,440
entities that you have an

00:06:12,250 --> 00:06:19,849
object-oriented world or oops world we

00:06:15,440 --> 00:06:22,130
we talk about entities as objects right

00:06:19,849 --> 00:06:25,340
we call the entities that you play with

00:06:22,130 --> 00:06:29,330
or deal with as objects whether does

00:06:25,340 --> 00:06:31,250
customers or orders or jobs or talents

00:06:29,330 --> 00:06:34,490
or whatever you are dealing with they

00:06:31,250 --> 00:06:38,180
are all called as objects but here in

00:06:34,490 --> 00:06:42,169
rest world are called as resources so

00:06:38,180 --> 00:06:47,030
the primary focus of the design is on

00:06:42,169 --> 00:06:49,220
resources in designing rest epa's so

00:06:47,030 --> 00:06:50,870
when you think of your application you

00:06:49,220 --> 00:06:53,810
should think of the resources what all

00:06:50,870 --> 00:06:59,720
what are the resources that I have while

00:06:53,810 --> 00:07:04,370
designing a rest rest api and then the

00:06:59,720 --> 00:07:08,140
urls so rest api is in rest api is the

00:07:04,370 --> 00:07:10,550
resources are identified by urls each

00:07:08,140 --> 00:07:14,060
resource is a uniquely identified by

00:07:10,550 --> 00:07:18,350
urls i will come to come to their and

00:07:14,060 --> 00:07:21,980
the best part of rest api s is that it

00:07:18,350 --> 00:07:24,740
takes the full advantage of HTTP HTTP as

00:07:21,980 --> 00:07:29,330
a protocol it's so sophisticated that it

00:07:24,740 --> 00:07:31,280
has got its own methods get post put

00:07:29,330 --> 00:07:35,270
delete you might have heard we will get

00:07:31,280 --> 00:07:38,450
into them and the response codes along

00:07:35,270 --> 00:07:41,570
with the status right wrist takes full

00:07:38,450 --> 00:07:46,040
advantage of them we'll see how right

00:07:41,570 --> 00:07:49,190
when I say each resource is identified

00:07:46,040 --> 00:07:53,120
by a unique URL I mean this so let us

00:07:49,190 --> 00:07:54,800
take is as a as an example let's take a

00:07:53,120 --> 00:07:59,090
commerce site or something like that

00:07:54,800 --> 00:08:02,000
wherein we have customers and orders

00:07:59,090 --> 00:08:04,400
orders placed by them so what are my

00:08:02,000 --> 00:08:07,580
resources in my e-commerce site i have

00:08:04,400 --> 00:08:10,190
got products i have got customers I've

00:08:07,580 --> 00:08:15,070
got orders and I have got maybe items

00:08:10,190 --> 00:08:18,820
right in the in order so they are my

00:08:15,070 --> 00:08:23,360
primary resource primary resources and

00:08:18,820 --> 00:08:26,150
what are the actions one customer one

00:08:23,360 --> 00:08:29,360
customer can place a new order or edit

00:08:26,150 --> 00:08:32,600
an order or delete an order or things

00:08:29,360 --> 00:08:38,090
like that they're all actions right in a

00:08:32,600 --> 00:08:42,410
non rest word you would say / a customer

00:08:38,090 --> 00:08:46,040
/ add / odd or / customer / order / add

00:08:42,410 --> 00:08:50,000
that ad comes into the URL in non rest

00:08:46,040 --> 00:08:54,410
word we will see how rest world takes

00:08:50,000 --> 00:08:56,780
care of it so what are the urs here a /

00:08:54,410 --> 00:08:58,940
customers it represents the collection

00:08:56,780 --> 00:09:00,769
of all the customers that you have in

00:08:58,940 --> 00:09:04,629
your

00:09:00,769 --> 00:09:09,139
in your web service if when I say

00:09:04,629 --> 00:09:13,129
customer / 5 this is going to identify a

00:09:09,139 --> 00:09:15,220
particular customer with ID five okay

00:09:13,129 --> 00:09:21,980
how it is stored whether it is a DB or

00:09:15,220 --> 00:09:24,589
whether it is a whether it is a a DBMS

00:09:21,980 --> 00:09:27,860
or an on our dms stuff I do not care

00:09:24,589 --> 00:09:30,799
right we are designed in the API for our

00:09:27,860 --> 00:09:33,379
e-commerce site let us say that so

00:09:30,799 --> 00:09:38,509
customers / fire us is going to

00:09:33,379 --> 00:09:42,759
represent a customer with ID 5 and all

00:09:38,509 --> 00:09:46,429
his orders are going to going to sit at

00:09:42,759 --> 00:09:52,730
customer / 5 / orders and a particular

00:09:46,429 --> 00:09:56,329
order can be affected by a where its ID

00:09:52,730 --> 00:10:00,049
and so on we will come into the details

00:09:56,329 --> 00:10:03,559
of it later but the the main point here

00:10:00,049 --> 00:10:07,040
is you do not have the actions in the

00:10:03,559 --> 00:10:11,389
urs so you do not have orders / edit

00:10:07,040 --> 00:10:15,319
order / delete or something like that

00:10:11,389 --> 00:10:17,720
order / create in the URLs because it is

00:10:15,319 --> 00:10:20,240
a rest world and haytch TT we will rely

00:10:17,720 --> 00:10:27,529
on HTTP verbs rather than putting the

00:10:20,240 --> 00:10:29,929
actions in the URLs so what are the HTTP

00:10:27,529 --> 00:10:34,639
verbs that I have been talking about so

00:10:29,929 --> 00:10:39,019
HTTP as a protocol it has got many many

00:10:34,639 --> 00:10:42,019
many methods get the most important

00:10:39,019 --> 00:10:46,579
things and most popular ones are get

00:10:42,019 --> 00:10:50,779
post and put and delete so which one of

00:10:46,579 --> 00:10:55,129
them is used where it is get is used for

00:10:50,779 --> 00:10:56,720
retrieving a resource so you just want

00:10:55,129 --> 00:10:59,509
to get the information you don't want to

00:10:56,720 --> 00:11:01,519
change the state of anything in the

00:10:59,509 --> 00:11:03,169
server but you just want to get the

00:11:01,519 --> 00:11:06,829
information let us say you want to see

00:11:03,169 --> 00:11:09,079
the orders of a customer who has placed

00:11:06,829 --> 00:11:11,419
few so you are not changing anything on

00:11:09,079 --> 00:11:14,480
the servant you're just retrieving then

00:11:11,419 --> 00:11:18,019
you use get post

00:11:14,480 --> 00:11:20,690
is from creating resources and so let us

00:11:18,019 --> 00:11:23,570
say when an order is placed a new order

00:11:20,690 --> 00:11:27,230
a resource is going to be created at the

00:11:23,570 --> 00:11:29,959
server right then HTTP post is being

00:11:27,230 --> 00:11:31,970
used and let us say if you want to

00:11:29,959 --> 00:11:33,980
update an order let us say you want to

00:11:31,970 --> 00:11:36,620
change the quantity of something or you

00:11:33,980 --> 00:11:38,660
want to modify an order then the HTTP

00:11:36,620 --> 00:11:43,730
verb that you will be using is put and

00:11:38,660 --> 00:11:45,440
for delete it delete here you can see

00:11:43,730 --> 00:11:49,550
that there is a slight overlap between

00:11:45,440 --> 00:11:52,550
post and put both can be used for

00:11:49,550 --> 00:11:55,430
creating all sorts but the choice comes

00:11:52,550 --> 00:11:57,589
from this so get put and delete our

00:11:55,430 --> 00:12:04,120
idempotent or do you mean by item

00:11:57,589 --> 00:12:07,459
potency is so how many ever times you

00:12:04,120 --> 00:12:10,610
you do that action getting or putting or

00:12:07,459 --> 00:12:14,920
deleting it's the same it does not

00:12:10,610 --> 00:12:18,230
change the server state but if you post

00:12:14,920 --> 00:12:20,000
the same thing to a server the state

00:12:18,230 --> 00:12:23,930
will change we will see that as an

00:12:20,000 --> 00:12:29,440
example okay this is a slightly blurred

00:12:23,930 --> 00:12:31,610
sorry for that so this is what is our

00:12:29,440 --> 00:12:35,269
example we have got customers we have

00:12:31,610 --> 00:12:37,190
got our orders and items and products so

00:12:35,269 --> 00:12:43,250
this is the documentation that i am

00:12:37,190 --> 00:12:47,060
going to give to my to my api uses what

00:12:43,250 --> 00:12:49,940
is it the customers endpoint meaning the

00:12:47,060 --> 00:12:54,709
customers URL is going to support get

00:12:49,940 --> 00:12:58,010
and post what is it expect what is it

00:12:54,709 --> 00:13:01,880
expect it expects a name which is a

00:12:58,010 --> 00:13:04,459
string as an input in the request and it

00:13:01,880 --> 00:13:08,440
replies back with a name and the self

00:13:04,459 --> 00:13:12,920
URL and orders orders you are in the

00:13:08,440 --> 00:13:18,610
response let's see let's see how it

00:13:12,920 --> 00:13:22,069
behaves before going into the example I

00:13:18,610 --> 00:13:25,010
want to just say that how should a REST

00:13:22,069 --> 00:13:27,939
API be it should be simple it should be

00:13:25,010 --> 00:13:30,599
simple for us as humans to read

00:13:27,939 --> 00:13:35,379
and understand or comprehend what it

00:13:30,599 --> 00:13:38,529
means so jason jason is a kind of

00:13:35,379 --> 00:13:43,479
default standard or xml and HTML or can

00:13:38,529 --> 00:13:46,329
also be used as as the language between

00:13:43,479 --> 00:13:49,809
client and server but Jason is the most

00:13:46,329 --> 00:13:52,599
predominant one so that the program is

00:13:49,809 --> 00:13:55,329
the developers also can read it the

00:13:52,599 --> 00:13:58,470
api's should be consistent across what

00:13:55,329 --> 00:14:02,349
does it mean so when I say the URLs here

00:13:58,470 --> 00:14:04,899
here I do not say / customer at one

00:14:02,349 --> 00:14:08,289
place and customers at another place so

00:14:04,899 --> 00:14:10,809
the API should be consistent across it

00:14:08,289 --> 00:14:13,329
should have the the URL should be

00:14:10,809 --> 00:14:16,299
guessable whenever I say a customer / 5

00:14:13,329 --> 00:14:18,339
I should be able to guess that the

00:14:16,299 --> 00:14:20,529
orders you are we would be / order /

00:14:18,339 --> 00:14:24,220
something with I day I have your ID

00:14:20,529 --> 00:14:27,789
there so much once you work with arrest

00:14:24,220 --> 00:14:31,809
API the working with any other rest APIs

00:14:27,789 --> 00:14:35,139
vez unguessable and backward compatible

00:14:31,809 --> 00:14:40,389
what does it mean let's say AWS you are

00:14:35,139 --> 00:14:43,299
using AWS for your project and yeah and

00:14:40,389 --> 00:14:45,279
you're you have gone life things are

00:14:43,299 --> 00:14:47,949
fantastic and your website is getting

00:14:45,279 --> 00:14:51,279
also fits yes showing all your assets

00:14:47,949 --> 00:14:53,499
and images or we use in your in amazon

00:14:51,279 --> 00:14:57,879
web services and suddenly let's say

00:14:53,499 --> 00:14:59,829
amazon changes its api what happens your

00:14:57,879 --> 00:15:02,589
product will be i mean your website will

00:14:59,829 --> 00:15:05,709
be down because they have changed their

00:15:02,589 --> 00:15:09,389
api and the next time you do not rely on

00:15:05,709 --> 00:15:12,669
AWS anymore you won't use them right why

00:15:09,389 --> 00:15:16,929
because it will cause you as a user the

00:15:12,669 --> 00:15:20,229
downtime so AP is whenever one designs

00:15:16,929 --> 00:15:22,929
an API a public API especially it should

00:15:20,229 --> 00:15:24,819
the the designers or creators of APA

00:15:22,929 --> 00:15:27,970
should think of backward compatibility

00:15:24,819 --> 00:15:30,819
in mind so if I am going to add a new

00:15:27,970 --> 00:15:33,009
feature to my API how should it be in

00:15:30,819 --> 00:15:36,039
the future how can it support few other

00:15:33,009 --> 00:15:37,809
things in future and if something is

00:15:36,039 --> 00:15:40,569
going to change at the core how am I

00:15:37,809 --> 00:15:41,470
going to take care of it in future so

00:15:40,569 --> 00:15:44,730
that

00:15:41,470 --> 00:15:47,970
for four sides should be there in

00:15:44,730 --> 00:15:51,850
designing while designing the API and

00:15:47,970 --> 00:15:55,390
actually maintaining version also makes

00:15:51,850 --> 00:15:57,550
makes it easy for maintaining the

00:15:55,390 --> 00:16:01,690
backward compatibility we'll see how

00:15:57,550 --> 00:16:05,080
versions are there and hat yours will

00:16:01,690 --> 00:16:08,200
get into a hat yours also a bit later so

00:16:05,080 --> 00:16:11,740
we will see example of ordering orders

00:16:08,200 --> 00:16:13,810
epi so in the starting my database is

00:16:11,740 --> 00:16:20,410
empty and I do not have any customers

00:16:13,810 --> 00:16:22,740
right I'm assuming curl most of you

00:16:20,410 --> 00:16:27,370
might have used curl is a HTTP client

00:16:22,740 --> 00:16:30,580
and which you can use on unix and it

00:16:27,370 --> 00:16:33,760
takes a an argument the method HTTP

00:16:30,580 --> 00:16:37,030
method with minus x option and i am

00:16:33,760 --> 00:16:40,540
assuming that my api server is sitting

00:16:37,030 --> 00:16:44,620
here api e dot XCOM is my api server

00:16:40,540 --> 00:16:46,120
right and / customers / v 1 is to

00:16:44,620 --> 00:16:48,340
maintaining the backward compatibility

00:16:46,120 --> 00:16:50,410
the version has come into picture now

00:16:48,340 --> 00:16:54,340
let us say if i want to change the API a

00:16:50,410 --> 00:16:57,430
later then I put v2 we do that so that

00:16:54,340 --> 00:17:00,940
the users that are that are reliant on

00:16:57,430 --> 00:17:04,840
me wouldn't drop their I mean their

00:17:00,940 --> 00:17:09,520
websites will not be done because my API

00:17:04,840 --> 00:17:12,700
has changed so when I request for it for

00:17:09,520 --> 00:17:17,920
this URL what am I getting I am getting

00:17:12,700 --> 00:17:21,930
I am getting HTTP one dot one these are

00:17:17,920 --> 00:17:26,200
all HTTP headers with a state as 200

00:17:21,930 --> 00:17:29,080
status code okay what does it mean a

00:17:26,200 --> 00:17:31,450
status code 200 means everything went

00:17:29,080 --> 00:17:33,520
well and here is the response that you

00:17:31,450 --> 00:17:36,910
have asked for because I do not have

00:17:33,520 --> 00:17:39,340
anything in my database yet what is the

00:17:36,910 --> 00:17:42,670
response that I have got it is an

00:17:39,340 --> 00:17:44,650
interest I do not have any customers the

00:17:42,670 --> 00:17:47,260
server has replied that I do not have

00:17:44,650 --> 00:17:50,710
any customers what is the content type

00:17:47,260 --> 00:17:54,460
here it's Jason so the the client the

00:17:50,710 --> 00:17:54,720
client is asking the server through this

00:17:54,460 --> 00:17:59,159
you

00:17:54,720 --> 00:18:03,299
r / customers and the server has

00:17:59,159 --> 00:18:05,669
responded with with a status code and a

00:18:03,299 --> 00:18:09,179
content type and this is the response

00:18:05,669 --> 00:18:12,500
this dictionary that you can see eva is

00:18:09,179 --> 00:18:16,289
the response now let us create a

00:18:12,500 --> 00:18:18,870
customer to see right what do we which

00:18:16,289 --> 00:18:24,210
HTTP verb or do we use for creating a

00:18:18,870 --> 00:18:27,630
resource it is forced right so in the

00:18:24,210 --> 00:18:29,640
documentation in the documentation we

00:18:27,630 --> 00:18:32,280
have seen that it expects a name to

00:18:29,640 --> 00:18:35,520
create a customer what is the name type

00:18:32,280 --> 00:18:40,620
as a string of length 64 of max length

00:18:35,520 --> 00:18:44,159
64 so let's let us use post my endpoint

00:18:40,620 --> 00:18:48,179
is still / customers because I am trying

00:18:44,159 --> 00:18:52,919
to create a customer right customer

00:18:48,179 --> 00:18:55,260
resource so with the name Alice so the

00:18:52,919 --> 00:18:57,929
client is just the client is

00:18:55,260 --> 00:19:00,539
knowledgeable only about the API URLs

00:18:57,929 --> 00:19:04,049
nothing else how the server is adding

00:19:00,539 --> 00:19:06,990
the customers where the server is adding

00:19:04,049 --> 00:19:09,570
the data whether it is maintaining in

00:19:06,990 --> 00:19:12,150
the our dbms or no sequel database or a

00:19:09,570 --> 00:19:14,340
flat file system I do not care the coin

00:19:12,150 --> 00:19:18,000
doesn't care it just knows the URL

00:19:14,340 --> 00:19:21,150
nothing else so what did it respond with

00:19:18,000 --> 00:19:24,360
the server has responded with i mean i

00:19:21,150 --> 00:19:27,120
have omitted the few headers here which

00:19:24,360 --> 00:19:29,970
are redundant in this context the the

00:19:27,120 --> 00:19:33,630
server has responded with 201 as a

00:19:29,970 --> 00:19:35,480
status code and created as the status so

00:19:33,630 --> 00:19:38,960
the server says that ok i have created

00:19:35,480 --> 00:19:41,760
the resource that you have asked for and

00:19:38,960 --> 00:19:45,120
where did I create how you can access it

00:19:41,760 --> 00:19:50,820
it is a location header so I have

00:19:45,120 --> 00:19:52,860
created a customer with ID one with the

00:19:50,820 --> 00:19:55,919
data that you have given that is the

00:19:52,860 --> 00:19:59,100
server response so if I want to see the

00:19:55,919 --> 00:20:02,309
customer one I can go and see now how do

00:19:59,100 --> 00:20:05,630
i see i have to ask for the so asking

00:20:02,309 --> 00:20:08,840
survey again what will the HTTP verb be

00:20:05,630 --> 00:20:15,570
it is again get

00:20:08,840 --> 00:20:19,799
right sorry here gate is always useful

00:20:15,570 --> 00:20:22,980
retrieving a source so I want to get and

00:20:19,799 --> 00:20:25,789
see how the customers / one is how is

00:20:22,980 --> 00:20:30,379
the first resource so what do I get I

00:20:25,789 --> 00:20:34,230
get back from the server named Alice and

00:20:30,379 --> 00:20:41,129
few links we will see what those links

00:20:34,230 --> 00:20:42,990
mean in a in a bit so we we started with

00:20:41,129 --> 00:20:46,379
an empty database where we didn't have

00:20:42,990 --> 00:20:49,139
any customers and we have got we have

00:20:46,379 --> 00:20:51,480
created a customer with a with a

00:20:49,139 --> 00:20:53,629
particular name and we could see the

00:20:51,480 --> 00:20:56,129
details we could get back those resorts

00:20:53,629 --> 00:20:58,350
now let's say I want to change the name

00:20:56,129 --> 00:21:01,110
of the customer how do i change

00:20:58,350 --> 00:21:04,529
something once once i have created a

00:21:01,110 --> 00:21:06,090
resource many range it is not just the

00:21:04,529 --> 00:21:08,820
same right we want to change it or

00:21:06,090 --> 00:21:13,080
update it how do we do it in the AP is

00:21:08,820 --> 00:21:18,179
it is through put method put method of

00:21:13,080 --> 00:21:23,009
HTTP so it was named Alice before and I

00:21:18,179 --> 00:21:28,320
am changing the name as Bob ok so so

00:21:23,009 --> 00:21:31,049
ever again responds with 200 ok right

00:21:28,320 --> 00:21:35,909
meaning what you have requested for is

00:21:31,049 --> 00:21:39,779
done that the name has changed now if we

00:21:35,909 --> 00:21:42,809
request for / customer / 1 it would give

00:21:39,779 --> 00:21:46,289
back the response is named Bob all right

00:21:42,809 --> 00:21:51,809
how do we did it sorry I should have

00:21:46,289 --> 00:21:55,350
kept here curl minus X it was a typo so

00:21:51,809 --> 00:21:58,350
curl minus X delete I can delete it like

00:21:55,350 --> 00:22:02,669
this so any resource you can create it

00:21:58,350 --> 00:22:05,159
you can update it you can delete it what

00:22:02,669 --> 00:22:07,590
else you can do I mean any resource or

00:22:05,159 --> 00:22:10,320
any object the actions that you can do

00:22:07,590 --> 00:22:15,779
is adding editing bleeding nothing else

00:22:10,320 --> 00:22:21,299
right so rest is based upon HTTP to take

00:22:15,779 --> 00:22:23,730
these actions yeah so we

00:22:21,299 --> 00:22:26,759
let's let us go back and see what these

00:22:23,730 --> 00:22:30,869
links mean here so in browser by web

00:22:26,759 --> 00:22:33,210
when we open our browser and bra open a

00:22:30,869 --> 00:22:36,840
website we do not need to be taught

00:22:33,210 --> 00:22:38,309
where to go go on how to go on we just

00:22:36,840 --> 00:22:40,710
see a link which is interesting to us

00:22:38,309 --> 00:22:43,019
and we see all the available links where

00:22:40,710 --> 00:22:46,889
we can go and just click the link right

00:22:43,019 --> 00:22:51,029
and we it will take us further that is

00:22:46,889 --> 00:22:54,359
the way we navigate as human beings in

00:22:51,029 --> 00:22:57,419
AP is how does the program know what is

00:22:54,359 --> 00:23:00,239
available as a next step or how does the

00:22:57,419 --> 00:23:02,850
program know what it can do at this

00:23:00,239 --> 00:23:07,830
particular state it is through hat yours

00:23:02,850 --> 00:23:10,919
so let us say you open the facebook site

00:23:07,830 --> 00:23:13,139
you can see Sign In button or sign in

00:23:10,919 --> 00:23:15,179
link or if you have signed and already

00:23:13,139 --> 00:23:18,389
you would say postmessage something like

00:23:15,179 --> 00:23:24,330
that right so if it is through restful

00:23:18,389 --> 00:23:26,549
rest api and the state is that and if it

00:23:24,330 --> 00:23:31,739
as if i am asking for if i am requesting

00:23:26,549 --> 00:23:34,710
for the home page through rest then i

00:23:31,739 --> 00:23:37,710
should have the links of what all can i

00:23:34,710 --> 00:23:39,960
do how do i post a message through api

00:23:37,710 --> 00:23:42,960
how do i add a friend through api

00:23:39,960 --> 00:23:46,109
etcetera etcetera so that is called that

00:23:42,960 --> 00:23:51,019
is that is what is meant by hat yours it

00:23:46,109 --> 00:23:51,019
is how you navigate through the API

00:23:51,350 --> 00:23:57,629
programatically so here when we asked

00:23:55,350 --> 00:24:01,590
for customers when we requested for

00:23:57,629 --> 00:24:06,570
customers with an ID one we have got the

00:24:01,590 --> 00:24:08,879
orders link also see you have asked for

00:24:06,570 --> 00:24:10,739
customer right now and you would be you

00:24:08,879 --> 00:24:13,799
could be interested in the orders that

00:24:10,739 --> 00:24:15,480
he has placed already so you have the

00:24:13,799 --> 00:24:18,929
orders information you can get the

00:24:15,480 --> 00:24:24,320
orders information here by requesting

00:24:18,929 --> 00:24:29,970
that you are the sort is meant by hat us

00:24:24,320 --> 00:24:34,200
we will see examples of Hatteras as the

00:24:29,970 --> 00:24:35,040
orders link so from the customers from

00:24:34,200 --> 00:24:37,320
the first customer

00:24:35,040 --> 00:24:41,970
we have got all the orders let us see

00:24:37,320 --> 00:24:46,890
let us requests for this URL what do I

00:24:41,970 --> 00:24:49,740
get what do I get I'm asking I am

00:24:46,890 --> 00:24:53,400
requesting for a particular order I want

00:24:49,740 --> 00:24:57,570
to see all the details then I have got a

00:24:53,400 --> 00:25:02,220
self URL which means that it is just the

00:24:57,570 --> 00:25:07,050
same sorry here there is a type of self

00:25:02,220 --> 00:25:10,350
is wrong here sorry the customer the

00:25:07,050 --> 00:25:14,490
customer for this order is customer / 1

00:25:10,350 --> 00:25:18,240
and what is the order actually it has

00:25:14,490 --> 00:25:24,600
got some date and items what are the

00:25:18,240 --> 00:25:27,630
products that that were in the order so

00:25:24,600 --> 00:25:31,560
patios actually adds so much of richness

00:25:27,630 --> 00:25:34,920
to rest through rest because it lets the

00:25:31,560 --> 00:25:36,780
program intelligently handle on how to

00:25:34,920 --> 00:25:40,170
navigate or what are all the possible

00:25:36,780 --> 00:25:43,890
actions as a next step rather than

00:25:40,170 --> 00:25:51,180
asking the server every time what is the

00:25:43,890 --> 00:25:54,570
possible action right now yes now that

00:25:51,180 --> 00:25:58,470
we know a bit of rest api is how they

00:25:54,570 --> 00:26:01,230
should be let us see how to choose a

00:25:58,470 --> 00:26:04,410
library so let's let's say you are using

00:26:01,230 --> 00:26:06,750
django or flask to build your websites

00:26:04,410 --> 00:26:08,970
how do you choose a library you won't

00:26:06,750 --> 00:26:16,200
start with scratch right start from

00:26:08,970 --> 00:26:20,310
scratch when our data comes in here here

00:26:16,200 --> 00:26:23,130
how did you how did we add a customer by

00:26:20,310 --> 00:26:25,320
a by posting this data right name is

00:26:23,130 --> 00:26:28,380
equal to Alice but the library should

00:26:25,320 --> 00:26:32,670
make sure that the name is a string type

00:26:28,380 --> 00:26:35,340
and below length 64 as the API

00:26:32,670 --> 00:26:38,100
documentation sees here we have

00:26:35,340 --> 00:26:40,920
documented that the name is a string

00:26:38,100 --> 00:26:44,400
type and it should it should not be more

00:26:40,920 --> 00:26:48,680
than 64 who takes care of that so there

00:26:44,400 --> 00:26:48,680
should be a data waiter validation layer

00:26:50,150 --> 00:26:55,400
before the API in the in the

00:26:53,940 --> 00:26:58,920
implementation of the API and

00:26:55,400 --> 00:27:01,830
authentication authorization is a most

00:26:58,920 --> 00:27:05,010
important thing that you do not want

00:27:01,830 --> 00:27:07,350
everybody to create customers in your

00:27:05,010 --> 00:27:09,690
website right not anybody can post any

00:27:07,350 --> 00:27:12,090
data to your website to your API and

00:27:09,690 --> 00:27:15,630
create customers in your database it's

00:27:12,090 --> 00:27:18,350
not what you intend to to do so there

00:27:15,630 --> 00:27:22,260
has to be an authorization and

00:27:18,350 --> 00:27:24,450
authentication layer for your API so

00:27:22,260 --> 00:27:26,790
that so that not everybody can do

00:27:24,450 --> 00:27:33,390
whatever they want whether the user is

00:27:26,790 --> 00:27:35,610
your service user or not and the so

00:27:33,390 --> 00:27:37,500
there are n number of libraries even for

00:27:35,610 --> 00:27:40,470
Django or flask or anything actually any

00:27:37,500 --> 00:27:43,200
framework that you can choose but almost

00:27:40,470 --> 00:27:46,080
all of them are very tightly coupled

00:27:43,200 --> 00:27:47,880
with the orrans of the databases so what

00:27:46,080 --> 00:27:52,350
is wrong with that once you have

00:27:47,880 --> 00:27:54,300
designed your database the the libraries

00:27:52,350 --> 00:27:57,330
which are tightly coupled with our ORM s

00:27:54,300 --> 00:27:58,740
will generate the APA's on the fly you

00:27:57,330 --> 00:28:00,900
do not need to do anything as a

00:27:58,740 --> 00:28:05,090
developer you just put in the library

00:28:00,900 --> 00:28:07,800
and maybe do a few metas metal stuff and

00:28:05,090 --> 00:28:10,710
it generates the whole API for you

00:28:07,800 --> 00:28:12,630
without you taking care of it what is

00:28:10,710 --> 00:28:15,840
the problem with that whenever you

00:28:12,630 --> 00:28:17,940
change your database structure or do a

00:28:15,840 --> 00:28:21,180
migration you can do a migration inside

00:28:17,940 --> 00:28:22,830
but what happens to the API and what

00:28:21,180 --> 00:28:26,220
happens to the clients which are relying

00:28:22,830 --> 00:28:29,820
on the API they're all lost right they

00:28:26,220 --> 00:28:32,550
won't work anymore so it is not a good

00:28:29,820 --> 00:28:38,450
idea to have a very tight coupling

00:28:32,550 --> 00:28:41,040
between our databases and the AP ice

00:28:38,450 --> 00:28:42,660
because the databases are in inner stuff

00:28:41,040 --> 00:28:45,480
you can take care of them through

00:28:42,660 --> 00:28:49,400
migrations or anything else but API is

00:28:45,480 --> 00:28:54,990
our public facing they should never be a

00:28:49,400 --> 00:29:00,960
non backward compatible yeah and the

00:28:54,990 --> 00:29:02,190
libraries it should should support page

00:29:00,960 --> 00:29:03,720
nation

00:29:02,190 --> 00:29:06,210
like you don't want to show all the

00:29:03,720 --> 00:29:09,269
customers on one single page right I

00:29:06,210 --> 00:29:12,539
just want 50 of them to show on my first

00:29:09,269 --> 00:29:16,759
page or etcetera etcetera so the API

00:29:12,539 --> 00:29:19,769
library should be able to support

00:29:16,759 --> 00:29:23,039
pagination what do you mean by rate

00:29:19,769 --> 00:29:27,649
limits there you might have seen with

00:29:23,039 --> 00:29:31,620
Twitter or Google API is or any any any

00:29:27,649 --> 00:29:35,039
good AP ice they will have rate limit

00:29:31,620 --> 00:29:38,669
that you as a user cannot request more

00:29:35,039 --> 00:29:41,909
than 300 requests per maybe are let us

00:29:38,669 --> 00:29:44,399
say so that their servers are not too

00:29:41,909 --> 00:29:47,309
overloaded they will decide that number

00:29:44,399 --> 00:29:49,350
the API writer or the API creator order

00:29:47,309 --> 00:29:51,029
the designer will decide that number

00:29:49,350 --> 00:29:54,450
based on their architecture and the

00:29:51,029 --> 00:29:56,429
servers what how much load can they take

00:29:54,450 --> 00:29:59,759
based on that number they will give you

00:29:56,429 --> 00:30:01,620
a rate limit to use so if it if it

00:29:59,759 --> 00:30:04,200
crosses that they'll say sorry we cannot

00:30:01,620 --> 00:30:07,110
handle the request because they need to

00:30:04,200 --> 00:30:10,019
have a resource estimation so rate

00:30:07,110 --> 00:30:17,549
limits are also are also one thing to be

00:30:10,019 --> 00:30:20,039
taken care of and obviously filters yeah

00:30:17,549 --> 00:30:23,990
so I'd like to talk about a bit more

00:30:20,039 --> 00:30:23,990
about authentication authorization here

00:30:24,289 --> 00:30:33,889
okay so filters is here here in the

00:30:29,009 --> 00:30:37,019
example see I want to see all the

00:30:33,889 --> 00:30:38,610
completed orders right I want I do not

00:30:37,019 --> 00:30:40,950
want I am NOT interested in all the

00:30:38,610 --> 00:30:43,049
orders at the same time I am NOT in I do

00:30:40,950 --> 00:30:45,029
not have the ID specific ID I am NOT

00:30:43,049 --> 00:30:47,700
interested in just viewing a particular

00:30:45,029 --> 00:30:52,049
order I just want to see see all the

00:30:47,700 --> 00:30:53,399
completed orders so the API library that

00:30:52,049 --> 00:30:56,879
you are relying on should have the

00:30:53,399 --> 00:31:00,299
support of filtering right completed

00:30:56,879 --> 00:31:04,190
equal to true or all the orders of a

00:31:00,299 --> 00:31:06,419
particular user something like that so

00:31:04,190 --> 00:31:09,350
filters is an important thing to be

00:31:06,419 --> 00:31:09,350
taken care of

00:31:13,000 --> 00:31:21,740
yep so authentic asian and authorization

00:31:18,970 --> 00:31:24,500
authentication and authorization there

00:31:21,740 --> 00:31:27,560
are different levels of doing them one

00:31:24,500 --> 00:31:29,750
thing one simple thing is that a glow

00:31:27,560 --> 00:31:32,240
global authentication what do you mean

00:31:29,750 --> 00:31:35,180
why a global authentication let us say I

00:31:32,240 --> 00:31:38,750
have a service to offered as an API I'll

00:31:35,180 --> 00:31:41,960
just give you a secret token whoever has

00:31:38,750 --> 00:31:45,740
that secret token in their request I

00:31:41,960 --> 00:31:51,410
will allow them to use my API nothing

00:31:45,740 --> 00:31:54,770
else I am done with that but how do you

00:31:51,410 --> 00:31:56,840
manage otter ization or how what are all

00:31:54,770 --> 00:31:58,850
the resources that the user has access

00:31:56,840 --> 00:32:01,400
to and what are all the resources that

00:31:58,850 --> 00:32:07,310
the user does not have access to with it

00:32:01,400 --> 00:32:11,210
etc have to be figured out most of you

00:32:07,310 --> 00:32:13,400
might have used s3 Amazon's s3 or any AP

00:32:11,210 --> 00:32:16,430
is what do they do how do you how do

00:32:13,400 --> 00:32:20,450
they give a user token then you have a

00:32:16,430 --> 00:32:22,610
public token and a secret key up public

00:32:20,450 --> 00:32:26,780
key and a power private key through

00:32:22,610 --> 00:32:29,240
which through which the API talks so I

00:32:26,780 --> 00:32:31,430
will not go into the details for

00:32:29,240 --> 00:32:34,250
token-based and itch mark waves it's

00:32:31,430 --> 00:32:36,040
just to give you a glimpse of what are

00:32:34,250 --> 00:32:40,100
all the available options of

00:32:36,040 --> 00:32:42,020
authentication that you can do actually

00:32:40,100 --> 00:32:44,900
each one of them is suitable in

00:32:42,020 --> 00:32:46,850
different contexts and because if the

00:32:44,900 --> 00:32:52,100
time I am NOT going to go into the

00:32:46,850 --> 00:32:54,620
details yep that's it I I wanted to just

00:32:52,100 --> 00:32:58,540
share that information with you if you

00:32:54,620 --> 00:33:02,750
have any questions are we on time yep

00:32:58,540 --> 00:33:06,200
questions yes aunt equations yeah if you

00:33:02,750 --> 00:33:09,800
have n equations yeah hi my name is

00:33:06,200 --> 00:33:12,260
messenger I was just wondering since you

00:33:09,800 --> 00:33:13,970
have all these data validation with all

00:33:12,260 --> 00:33:16,480
these would you recommend having a

00:33:13,970 --> 00:33:21,600
service layer between your ORM and

00:33:16,480 --> 00:33:24,960
controllers this means yes absolutely so

00:33:21,600 --> 00:33:28,360
the the libraries which are out there

00:33:24,960 --> 00:33:31,150
which does the automatic job of handling

00:33:28,360 --> 00:33:32,770
things they do not have a year I mean

00:33:31,150 --> 00:33:35,470
they will handle the layer but it's not

00:33:32,770 --> 00:33:38,700
anger under a totally under your control

00:33:35,470 --> 00:33:41,830
so i suggest to have earlier in between

00:33:38,700 --> 00:33:46,240
yep just a follow-up question with a lot

00:33:41,830 --> 00:33:49,419
of a lot of products right now there are

00:33:46,240 --> 00:33:52,330
lot of them do dashboarding so how would

00:33:49,419 --> 00:33:54,700
you handle that with eps would you

00:33:52,330 --> 00:33:56,799
dashboarding yeah would you again the

00:33:54,700 --> 00:34:00,460
analytics analytics type of i know you

00:33:56,799 --> 00:34:02,559
use the dashboard a so for example you

00:34:00,460 --> 00:34:04,480
have an e-commerce website yep someone's

00:34:02,559 --> 00:34:06,669
coming using your e-commerce website now

00:34:04,480 --> 00:34:09,010
the thing is that users typically even

00:34:06,669 --> 00:34:10,600
if you use a mobile app or web app the

00:34:09,010 --> 00:34:12,550
first page that you usually shoot the

00:34:10,600 --> 00:34:14,470
user is a dashboard saying that okay you

00:34:12,550 --> 00:34:16,990
use these many you play these many

00:34:14,470 --> 00:34:18,940
orders yeah these are the products I

00:34:16,990 --> 00:34:21,040
read it yes all those who all that

00:34:18,940 --> 00:34:23,230
information gets aggregated in once yes

00:34:21,040 --> 00:34:25,929
what although you have to thread models

00:34:23,230 --> 00:34:28,780
for them yes yes yes so it's it's a way

00:34:25,929 --> 00:34:30,909
I Jax so you can show different pieces

00:34:28,780 --> 00:34:33,609
of the same page why are different

00:34:30,909 --> 00:34:35,889
requests right so you can show the

00:34:33,609 --> 00:34:39,490
aggregations of I mean just the orders

00:34:35,889 --> 00:34:41,260
via one request one URL and other to

00:34:39,490 --> 00:34:43,270
show the aggregation so on other to show

00:34:41,260 --> 00:34:46,659
their recommendations they thought they

00:34:43,270 --> 00:34:48,730
actually it's one page but sending n

00:34:46,659 --> 00:34:52,590
requests it's not just one single they

00:34:48,730 --> 00:34:52,590
would not recommend have enough once no

00:34:53,129 --> 00:35:01,230
one single endpoint should do one single

00:34:56,409 --> 00:35:01,230
thing yep

00:35:03,340 --> 00:35:10,220
mention what will be prepare the

00:35:06,920 --> 00:35:13,280
propeller by the way for the the driving

00:35:10,220 --> 00:35:17,570
or multiple customers specified ID with

00:35:13,280 --> 00:35:20,960
my specific ID for example I want a 5

00:35:17,570 --> 00:35:23,060
customer with specific ID five customers

00:35:20,960 --> 00:35:26,000
yeah see the idea is not a primary key

00:35:23,060 --> 00:35:29,090
there it's not a unique ID no but I want

00:35:26,000 --> 00:35:32,030
a specific ID for an example customer

00:35:29,090 --> 00:35:36,710
one customer to customer 3 and customer

00:35:32,030 --> 00:35:39,830
for ya so that is bulk bulk getting or

00:35:36,710 --> 00:35:42,560
bulk bulk posting I didn't go into that

00:35:39,830 --> 00:35:50,540
but you should be able to handle that

00:35:42,560 --> 00:35:53,060
with maybe you can say customers ID is

00:35:50,540 --> 00:35:55,460
equal to 1 2 3 4 5 it depends on you are

00:35:53,060 --> 00:35:57,260
usage so the API designer should take a

00:35:55,460 --> 00:35:59,840
call on whether it should be a list or

00:35:57,260 --> 00:36:02,750
comma separated values or how it should

00:35:59,840 --> 00:36:05,660
be what what will be preferable very

00:36:02,750 --> 00:36:07,850
easy to coma or any separators like oh

00:36:05,660 --> 00:36:09,770
yeah it was up to the designer API

00:36:07,850 --> 00:36:24,280
designer to be using I mean Cal commas

00:36:09,770 --> 00:36:24,280
are fine oh yeah thanks Mike hi yeah

00:36:26,440 --> 00:36:38,020
so like I'm little bit confused like get

00:36:31,420 --> 00:36:41,619
post and Iran where yet so i am using

00:36:38,020 --> 00:36:44,710
get post and all these methods like when

00:36:41,619 --> 00:36:46,450
i did in new rest api also so when I'm

00:36:44,710 --> 00:36:49,150
designing an application that means that

00:36:46,450 --> 00:36:52,390
the rest was existed existing that time

00:36:49,150 --> 00:36:55,569
also like everything that we do like

00:36:52,390 --> 00:36:59,290
whenever we are creating a web app get

00:36:55,569 --> 00:37:02,920
post and that is HTTP yes so that is

00:36:59,290 --> 00:37:05,619
HTTP GET post port and patch they are

00:37:02,920 --> 00:37:07,960
all HTTP verbs that existed before you

00:37:05,619 --> 00:37:11,710
knew what is restraint but the point

00:37:07,960 --> 00:37:15,400
here is the the URLs would have order /

00:37:11,710 --> 00:37:18,220
edit order / add or something like that

00:37:15,400 --> 00:37:20,859
so the action what you want to do is

00:37:18,220 --> 00:37:24,250
going through the URL rather than using

00:37:20,859 --> 00:37:27,069
the HTTP verb HTTP is so rich that it it

00:37:24,250 --> 00:37:30,130
offers the verbs to do different actions

00:37:27,069 --> 00:37:33,609
so rest is the part of HTTP it comes

00:37:30,130 --> 00:37:36,220
under that tree no no HTTP has the verbs

00:37:33,609 --> 00:37:39,880
and the status codes which are

00:37:36,220 --> 00:37:42,130
sophisticated enough to to a web service

00:37:39,880 --> 00:37:47,130
to be offered as an API meaning rest is

00:37:42,130 --> 00:37:50,170
sitting on top of the HTTP so like the

00:37:47,130 --> 00:37:52,630
example you should like to filter you

00:37:50,170 --> 00:37:54,579
worry be amusing complete an equal to

00:37:52,630 --> 00:37:57,150
anything we can use like page ID equal

00:37:54,579 --> 00:38:00,880
to one yeah yeah extract that yes so

00:37:57,150 --> 00:38:03,520
that that is a simple get get request

00:38:00,880 --> 00:38:05,920
yes can also retrieve the same thing so

00:38:03,520 --> 00:38:08,290
what is yeah it is a good Christina get

00:38:05,920 --> 00:38:12,250
requests and STD we get requests and a

00:38:08,290 --> 00:38:15,010
REST API so so we are talking about web

00:38:12,250 --> 00:38:17,890
services right and exposing them as rest

00:38:15,010 --> 00:38:21,490
api's finally HTTP layer is there there

00:38:17,890 --> 00:38:26,079
we are not rest is not an alternative to

00:38:21,490 --> 00:38:29,319
HTTP rest is built on top of HTTP it

00:38:26,079 --> 00:38:33,339
uses the protocol HTTP verbs it uses the

00:38:29,319 --> 00:38:36,250
HTTP status codes nothing else so we are

00:38:33,339 --> 00:38:38,400
using HTTP but the difference is the

00:38:36,250 --> 00:38:40,180
architecture when you think of the API

00:38:38,400 --> 00:38:43,770
you think of the reso

00:38:40,180 --> 00:38:47,470
versus first the actions second and

00:38:43,770 --> 00:38:50,140
modal your application in terms of that

00:38:47,470 --> 00:38:52,089
so it is not the actions which take over

00:38:50,140 --> 00:38:53,650
in the first place the resource is what

00:38:52,089 --> 00:38:55,780
are all the resources you have in your

00:38:53,650 --> 00:38:58,329
application that is the primary focus

00:38:55,780 --> 00:39:01,510
and once you identify the resources then

00:38:58,329 --> 00:39:04,869
you will go on to actions what can I do

00:39:01,510 --> 00:39:07,540
for each order or what can I do with the

00:39:04,869 --> 00:39:13,020
customer resource what all he can do etc

00:39:07,540 --> 00:39:16,300
right yes we have a question in the back

00:39:13,020 --> 00:39:18,880
suppose we are having two platforms one

00:39:16,300 --> 00:39:21,220
is raised and another is non it is now

00:39:18,880 --> 00:39:22,990
if suppose we are working in a

00:39:21,220 --> 00:39:25,599
distributed environment or whatever you

00:39:22,990 --> 00:39:28,630
if the format is different suppose in

00:39:25,599 --> 00:39:33,160
one format is Jason and one is in XML

00:39:28,630 --> 00:39:35,650
now the two applications should have

00:39:33,160 --> 00:39:38,109
something common some 1111 to share a

00:39:35,650 --> 00:39:40,089
common API between Everest and non risk

00:39:38,109 --> 00:39:42,160
yeah so there would be a layer sitting

00:39:40,089 --> 00:39:46,720
in between which can comprehend Jason

00:39:42,160 --> 00:39:48,430
and XML maybe what is that layer one

00:39:46,720 --> 00:39:50,049
should develop that clear maybe if you

00:39:48,430 --> 00:39:51,369
are writing in Python you wanna use gsm

00:39:50,049 --> 00:39:53,829
laboratory and something to pass the

00:39:51,369 --> 00:39:56,410
exam ends until up doing together okay

00:39:53,829 --> 00:39:59,440
if they are not if they're both rest

00:39:56,410 --> 00:40:01,540
then even then actually as a user you

00:39:59,440 --> 00:40:04,030
would have a lower rate you won't

00:40:01,540 --> 00:40:05,829
directly consumed the jasons you would

00:40:04,030 --> 00:40:08,319
have a UI or something like that which

00:40:05,829 --> 00:40:10,630
will consume that so the there would be

00:40:08,319 --> 00:40:12,760
earlier finally then the OEM and

00:40:10,630 --> 00:40:14,440
everything should be same or it would be

00:40:12,760 --> 00:40:17,170
different it could be different it could

00:40:14,440 --> 00:40:19,030
be different 11 maybe MongoDB or one

00:40:17,170 --> 00:40:21,700
maybe yes something else yes that's the

00:40:19,030 --> 00:40:24,670
best part of having a pee Ice it will

00:40:21,700 --> 00:40:27,250
let the let the client and server

00:40:24,670 --> 00:40:28,660
evolved independently of all the

00:40:27,250 --> 00:40:31,299
architectural decisions this can be

00:40:28,660 --> 00:40:34,359
totally in C or legacy or whatever it is

00:40:31,299 --> 00:40:36,339
and this could be in very very new

00:40:34,359 --> 00:40:39,760
technology this could be using new

00:40:36,339 --> 00:40:43,799
technology thanks a lot so the links

00:40:39,760 --> 00:40:48,069
will let you navigate further the safe

00:40:43,799 --> 00:40:51,400
self is identifying which resource that

00:40:48,069 --> 00:40:52,930
you have asked for yeah you have all the

00:40:51,400 --> 00:40:55,720
information let's say you

00:40:52,930 --> 00:40:57,520
asking for an orders orders a particular

00:40:55,720 --> 00:40:59,950
order you got all the information the

00:40:57,520 --> 00:41:02,230
data which product that you have ordered

00:40:59,950 --> 00:41:05,230
and with which quantity and what date

00:41:02,230 --> 00:41:08,650
you have ordered for but in the UI you

00:41:05,230 --> 00:41:10,599
done you might need the order ID also

00:41:08,650 --> 00:41:12,640
where would you get it from it's better

00:41:10,599 --> 00:41:16,300
to have a trade so the self is by

00:41:12,640 --> 00:41:18,670
default included in the links in Python

00:41:16,300 --> 00:41:21,250
it depends on what framework that you

00:41:18,670 --> 00:41:23,380
are using so Django has a set of

00:41:21,250 --> 00:41:27,010
libraries and class has its own set of

00:41:23,380 --> 00:41:28,839
libraries there are libraries which are

00:41:27,010 --> 00:41:32,829
independent of the frameworks like

00:41:28,839 --> 00:41:35,290
Python Eve there are many actually but

00:41:32,829 --> 00:41:37,000
it depends primarily on your use case

00:41:35,290 --> 00:41:39,940
whether it is a public API or a private

00:41:37,000 --> 00:41:42,760
epi as you when you are thinking of a

00:41:39,940 --> 00:41:45,040
public API then the design is a bit

00:41:42,760 --> 00:41:47,559
different van up private or an in-house

00:41:45,040 --> 00:41:49,420
API you you not care for the

00:41:47,559 --> 00:41:53,440
authentication and etc I said I put us

00:41:49,420 --> 00:41:56,290
in private EPA right hello ma'am hello

00:41:53,440 --> 00:41:59,440
here this is this is desingu plan mmm

00:41:56,290 --> 00:42:02,530
recently I was in the condition that

00:41:59,440 --> 00:42:05,349
where I have to use a almost too much

00:42:02,530 --> 00:42:06,910
filter for getting the list at that time

00:42:05,349 --> 00:42:08,470
we have to use the post request for

00:42:06,910 --> 00:42:10,690
getting the list of the thing so is it

00:42:08,470 --> 00:42:12,940
derails a URL is too long yes so it is

00:42:10,690 --> 00:42:16,299
the rest friendly thing or is there any

00:42:12,940 --> 00:42:19,059
solution for me it's readable unless

00:42:16,299 --> 00:42:21,010
it's not using the post request because

00:42:19,059 --> 00:42:23,559
we have to use post curse which is it

00:42:21,010 --> 00:42:25,510
not because it is not meant for getting

00:42:23,559 --> 00:42:27,970
the resources order you you should not

00:42:25,510 --> 00:42:31,390
use post unless you are modifying

00:42:27,970 --> 00:42:33,400
something in the server state is and is

00:42:31,390 --> 00:42:35,589
there any particular standard for the

00:42:33,400 --> 00:42:37,750
rest or is it the common type of

00:42:35,589 --> 00:42:41,980
practice follow oddly there's no

00:42:37,750 --> 00:42:43,900
standard for rest so there is something

00:42:41,980 --> 00:42:48,819
a very good site that we have come

00:42:43,900 --> 00:42:51,099
across Jason API daughter are g which

00:42:48,819 --> 00:42:52,750
are which is trying to lay down a few

00:42:51,099 --> 00:42:54,069
set of standards but it's not actually

00:42:52,750 --> 00:42:58,150
standardized it's an ongoing process

00:42:54,069 --> 00:42:59,530
that the suggests the urls could be like

00:42:58,150 --> 00:43:01,960
this the error handling could be like

00:42:59,530 --> 00:43:05,619
this and stuff it's better for you to

00:43:01,960 --> 00:43:06,770
just go through Jason API Toto rg1

00:43:05,619 --> 00:43:08,900
lasting for

00:43:06,770 --> 00:43:10,790
updating the record put is you have

00:43:08,900 --> 00:43:13,490
suggested post is I think also can be

00:43:10,790 --> 00:43:16,430
used is it good practice to use a post

00:43:13,490 --> 00:43:18,530
for application it depends on how you

00:43:16,430 --> 00:43:25,120
are creating actually so you can see

00:43:18,530 --> 00:43:29,930
here right here we are we are not

00:43:25,120 --> 00:43:33,260
keeping / one here it is the end point /

00:43:29,930 --> 00:43:36,080
customers yes and if I do the same thing

00:43:33,260 --> 00:43:39,170
again yes / customer / 2 will be created

00:43:36,080 --> 00:43:41,870
so paused for a specific customize it

00:43:39,170 --> 00:43:44,060
the ID be provided right thanks / IE

00:43:41,870 --> 00:43:46,520
it's going to be idempotent yes then you

00:43:44,060 --> 00:43:51,170
should use pudding oh thank so if you're

00:43:46,520 --> 00:43:52,820
on its it should be post yep a quick

00:43:51,170 --> 00:43:54,770
announcement then we'll take two large

00:43:52,820 --> 00:43:56,360
questions so anyone who hasn't gotten

00:43:54,770 --> 00:44:03,080
the feedback form can take it from our

00:43:56,360 --> 00:44:07,390
volunteers so okay and one last question

00:44:03,080 --> 00:44:10,220
I want to yeah yeah yeah will do lot of

00:44:07,390 --> 00:44:12,080
requests and you get the response so my

00:44:10,220 --> 00:44:13,940
question is like are there any package

00:44:12,080 --> 00:44:15,920
will be able to advise because and

00:44:13,940 --> 00:44:17,780
thereby basically looking for automation

00:44:15,920 --> 00:44:20,120
perspective for example if i do request

00:44:17,780 --> 00:44:22,040
for vm in case of cloud one hundred or

00:44:20,120 --> 00:44:24,640
thousand VMS will be there i mentioned

00:44:22,040 --> 00:44:27,260
for particular kind of p.m. as you shown

00:44:24,640 --> 00:44:28,490
customer name or whatever Keysha for

00:44:27,260 --> 00:44:30,380
automation perspective automation

00:44:28,490 --> 00:44:32,180
framework allows other said we come big

00:44:30,380 --> 00:44:34,850
are they any package in case of python

00:44:32,180 --> 00:44:36,950
moody suggest the libraries exactly that

00:44:34,850 --> 00:44:40,040
will helpful for automation perspective

00:44:36,950 --> 00:44:43,220
that's what i vary greatly yeah i can we

00:44:40,040 --> 00:44:44,690
take this off so that it can be retained

00:44:43,220 --> 00:44:47,210
at the auditorium position then he'll

00:44:44,690 --> 00:44:51,470
come sure yep yeah other cell mail yours

00:44:47,210 --> 00:44:53,210
here here thanks patiently for me all

00:44:51,470 --> 00:44:55,340
that where you look all you people over

00:44:53,210 --> 00:44:57,080
here i would like to give ma'am a small

00:44:55,340 --> 00:44:59,710
gift from pike on india for giving a

00:44:57,080 --> 00:44:59,710

YouTube URL: https://www.youtube.com/watch?v=-W5GVW4Vwlw


