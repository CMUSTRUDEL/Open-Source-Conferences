Title: Lightning Talk - Django deployment with git push - PyCon India 2015
Publication date: 2015-10-12
Playlist: PyCon India 2015
Description: 
	Speaker: Prityush
Captions: 
	00:00:00,290 --> 00:00:10,320
seriously I mean looking at you I do not

00:00:02,820 --> 00:00:12,889
feel like you had lunch or yes or oh yes

00:00:10,320 --> 00:00:15,480
I got the deserts I got the desert yes

00:00:12,889 --> 00:00:23,609
no no no no it was I don't know some

00:00:15,480 --> 00:00:25,590
other thing but I hate ok so we are

00:00:23,609 --> 00:00:27,090
starting with the lightning talks we

00:00:25,590 --> 00:00:29,820
have got total eight lightning talks

00:00:27,090 --> 00:00:39,690
right now the first one is harsh gupta

00:00:29,820 --> 00:00:47,930
is he your harsh gupta ok Amit Kumar is

00:00:39,690 --> 00:00:47,930
here amit kumar ok

00:00:48,010 --> 00:00:53,500
yes Mehrotra yeah

00:00:57,560 --> 00:01:05,030
oh yeah coral is here yes gran okay so

00:01:02,390 --> 00:01:08,540
corral who is the one whose topic is

00:01:05,030 --> 00:01:13,970
analytics with Dia with then okay so

00:01:08,540 --> 00:01:17,960
there are two kunal's okay good okay

00:01:13,970 --> 00:01:21,910
ticketing and deployment right so

00:01:17,960 --> 00:01:24,290
prostitutions here okay good yeah yeah

00:01:21,910 --> 00:01:27,290
okay so we are having our first landing

00:01:24,290 --> 00:01:32,930
talk and it's topic is Django deployment

00:01:27,290 --> 00:01:35,690
using git push as the topic is deploying

00:01:32,930 --> 00:01:37,550
Jenga projects using git push so hero

00:01:35,690 --> 00:01:39,440
who has this cool feature the bear we

00:01:37,550 --> 00:01:41,660
just get pushed the code and it gets

00:01:39,440 --> 00:01:43,340
deployed migrating the app and

00:01:41,660 --> 00:01:47,360
connecting static and all those things

00:01:43,340 --> 00:01:49,009
so this is about that thing and the

00:01:47,360 --> 00:01:53,210
concept is basically that we use the

00:01:49,009 --> 00:01:56,210
gates post to see book it is based on

00:01:53,210 --> 00:01:59,960
this talk by Harry Percival the blog

00:01:56,210 --> 00:02:03,289
post the link is given here and the

00:01:59,960 --> 00:02:06,860
implementation I like to demonstrate is

00:02:03,289 --> 00:02:09,050
the using in Sybil using ansible we can

00:02:06,860 --> 00:02:11,000
get this post see file insider source

00:02:09,050 --> 00:02:14,120
code and weaken version control it so

00:02:11,000 --> 00:02:16,480
that's the advantage of using ansible

00:02:14,120 --> 00:02:20,690
with with this post to see book

00:02:16,480 --> 00:02:22,640
implementation so here is the instable

00:02:20,690 --> 00:02:25,370
task what ence ability does is that

00:02:22,640 --> 00:02:28,850
ansible maintains the state of a look of

00:02:25,370 --> 00:02:31,730
the remote machine just as we specified

00:02:28,850 --> 00:02:34,610
so if we say that we need some some

00:02:31,730 --> 00:02:37,220
libraries then the ansible ensures that

00:02:34,610 --> 00:02:38,600
remote server has those libraries or if

00:02:37,220 --> 00:02:40,040
we say that create this folder then

00:02:38,600 --> 00:02:43,370
cybelline shows that this folder is

00:02:40,040 --> 00:02:45,230
created on a remote machine so what we

00:02:43,370 --> 00:02:48,350
are doing in the first task is we are

00:02:45,230 --> 00:02:51,620
initializing a simple get a git

00:02:48,350 --> 00:02:53,660
repository on a remote server and in

00:02:51,620 --> 00:02:57,730
this second task we are just popping the

00:02:53,660 --> 00:03:01,340
post to see file into the hooks folder

00:02:57,730 --> 00:03:04,100
which will be executed as when when the

00:03:01,340 --> 00:03:07,040
code is when the code is available on

00:03:04,100 --> 00:03:09,470
the remote server so we need to ensure

00:03:07,040 --> 00:03:10,650
that this file is executables and that

00:03:09,470 --> 00:03:16,700
is why we

00:03:10,650 --> 00:03:20,970
the mode 2755 this is the post see file

00:03:16,700 --> 00:03:23,849
which is executed by by the gate gate

00:03:20,970 --> 00:03:28,140
post receive oak I will go through some

00:03:23,849 --> 00:03:30,569
of the main lines like SETI's to ensure

00:03:28,140 --> 00:03:34,470
that the script stops running once once

00:03:30,569 --> 00:03:35,879
any of the command fails this is simple

00:03:34,470 --> 00:03:38,310
like we are switching to the virtual

00:03:35,879 --> 00:03:40,019
environment and we are installing the

00:03:38,310 --> 00:03:41,430
required requirements file then we are

00:03:40,019 --> 00:03:44,310
collecting the static and we are

00:03:41,430 --> 00:03:46,409
migrating the app just exactly as we do

00:03:44,310 --> 00:03:49,260
on Hiroko so we just get pushed and it

00:03:46,409 --> 00:03:54,480
executes all these all these commands

00:03:49,260 --> 00:03:56,790
and that's it the like that we restart

00:03:54,480 --> 00:04:01,799
the deployment server and the ending

00:03:56,790 --> 00:04:04,739
server and the code is live on server so

00:04:01,799 --> 00:04:08,220
the mold more details are available on

00:04:04,739 --> 00:04:10,950
this link I picked up much of it from

00:04:08,220 --> 00:04:13,650
this talk another alternative approach

00:04:10,950 --> 00:04:16,320
is to use fabric and five file the

00:04:13,650 --> 00:04:18,599
advantage in fab file is that we can do

00:04:16,320 --> 00:04:21,299
other stuff also like running local test

00:04:18,599 --> 00:04:23,760
before deployment and those things but

00:04:21,299 --> 00:04:26,039
in case of git push like in this

00:04:23,760 --> 00:04:29,180
approach we do not need to like the the

00:04:26,039 --> 00:04:31,710
script is very purpose so we can just

00:04:29,180 --> 00:04:33,659
know all the lines of code that we need

00:04:31,710 --> 00:04:36,780
to all the command lines with that we

00:04:33,659 --> 00:04:38,699
need to execute so that's it and use it

00:04:36,780 --> 00:04:41,460
on my website screener dot n it's a

00:04:38,699 --> 00:04:45,470
finance website and you can ask me

00:04:41,460 --> 00:04:45,470

YouTube URL: https://www.youtube.com/watch?v=qwv4zcRy-6E


