Title: Lightning Talk - SymPy - PyCon India 2015
Publication date: 2015-10-11
Playlist: PyCon India 2015
Description: 
	Speaker: Shivam

Url: http://www.sympy.org/en/index.html
Captions: 
	00:00:00,000 --> 00:00:04,680
alright so I have had too many glitches

00:00:01,979 --> 00:00:07,680
and I'm afraid I won't really be able to

00:00:04,680 --> 00:00:09,480
give a proper demo anyway so I am Shivan

00:00:07,680 --> 00:00:12,630
but I'm a third year student at iit

00:00:09,480 --> 00:00:14,969
kharagpur and I'm a developer at simple

00:00:12,630 --> 00:00:16,680
so simple is a symbolic mathematics

00:00:14,969 --> 00:00:21,810
library so how many of you attended this

00:00:16,680 --> 00:00:23,670
Empire workshop a nice so right so those

00:00:21,810 --> 00:00:25,800
of you who did attend symp is a symbolic

00:00:23,670 --> 00:00:27,539
mathematics library and the difference

00:00:25,800 --> 00:00:29,939
between symbolic mathematics is the

00:00:27,539 --> 00:00:32,550
difference between P I pie and 3.14 the

00:00:29,939 --> 00:00:35,160
value of pi so symbolic mathematics is

00:00:32,550 --> 00:00:36,750
everywhere right so any time you're

00:00:35,160 --> 00:00:37,950
actually doing the calculation the first

00:00:36,750 --> 00:00:42,629
initial first steps are actually

00:00:37,950 --> 00:00:44,910
symbolic so the idea of some pie is that

00:00:42,629 --> 00:00:47,700
you write the whole library in Python

00:00:44,910 --> 00:00:49,559
now obviously the first drawback that

00:00:47,700 --> 00:00:51,890
every that comes to that comes first to

00:00:49,559 --> 00:00:54,329
a- python is slow and you're writing a

00:00:51,890 --> 00:00:58,350
library that calculates things in Python

00:00:54,329 --> 00:01:00,989
and as it turned out that python is not

00:00:58,350 --> 00:01:03,000
slow the data structures i am the code

00:01:00,989 --> 00:01:06,420
that you are writing that makes it slow

00:01:03,000 --> 00:01:08,400
so despite using Python you can actually

00:01:06,420 --> 00:01:10,830
write pretty cool and pretty fast code

00:01:08,400 --> 00:01:13,350
so i did a g-shock this summer on

00:01:10,830 --> 00:01:15,330
something called series expansion so i

00:01:13,350 --> 00:01:17,130
hope it everybody knows that Taylor

00:01:15,330 --> 00:01:18,900
expansion you know like sine X can be

00:01:17,130 --> 00:01:21,210
approximated by a series that it's

00:01:18,900 --> 00:01:24,360
series expansion and it turns out that

00:01:21,210 --> 00:01:26,490
see his expansions are used a lot I mean

00:01:24,360 --> 00:01:29,340
in any application where you are using

00:01:26,490 --> 00:01:31,049
angles sine of that angle cause of the

00:01:29,340 --> 00:01:34,500
tangle you're actually using series

00:01:31,049 --> 00:01:36,930
expansion so the series expansion module

00:01:34,500 --> 00:01:39,270
of simple is actually quite slow I mean

00:01:36,930 --> 00:01:41,970
for simple things like sine X if you're

00:01:39,270 --> 00:01:44,369
calculating five terms okay but if you

00:01:41,970 --> 00:01:46,350
are calculating 500 terms or like 100

00:01:44,369 --> 00:01:49,259
terms you will be waiting for it for

00:01:46,350 --> 00:01:52,200
like 10 seconds so the plan was to give

00:01:49,259 --> 00:01:54,000
you a demo but my laptop is like a stool

00:01:52,200 --> 00:02:00,689
so it could not handle the new

00:01:54,000 --> 00:02:02,579
technology but let's see so okay so this

00:02:00,689 --> 00:02:04,570
is supposedly sine X you have to trust

00:02:02,579 --> 00:02:09,099
me

00:02:04,570 --> 00:02:13,010
so I am calculating the series ya series

00:02:09,099 --> 00:02:19,400
with respect to X for about 04 I said 10

00:02:13,010 --> 00:02:23,599
terms and i am going to time it right so

00:02:19,400 --> 00:02:26,450
trust me on this one all right and this

00:02:23,599 --> 00:02:29,269
is using the standards expansion of

00:02:26,450 --> 00:02:32,269
series right so this took around 114

00:02:29,269 --> 00:02:38,110
millisecond that's fine now let us try

00:02:32,269 --> 00:02:40,700
the same thing Oh screw it so it's

00:02:38,110 --> 00:02:46,190
anyway the idea I should and trust me I

00:02:40,700 --> 00:02:49,280
tried this is my laptop that I don't

00:02:46,190 --> 00:02:51,170
know let's get that there's a problem

00:02:49,280 --> 00:02:53,030
with the screen so the idea is that if

00:02:51,170 --> 00:02:55,459
you try this for 500 series it's going

00:02:53,030 --> 00:02:57,049
to take you 12 seconds and if you are

00:02:55,459 --> 00:02:59,060
using an application that does this

00:02:57,049 --> 00:03:02,569
that's done this piece of code for let's

00:02:59,060 --> 00:03:05,030
say 100 times you're screwed so what I

00:03:02,569 --> 00:03:07,580
did was I made it run in eight

00:03:05,030 --> 00:03:11,510
milliseconds using Python pure python

00:03:07,580 --> 00:03:13,519
code so the right thank you so the

00:03:11,510 --> 00:03:15,260
question is how do I do this so it's

00:03:13,519 --> 00:03:17,900
pure python code what it actually

00:03:15,260 --> 00:03:19,430
changed was the representation of the

00:03:17,900 --> 00:03:22,430
series and the alga was using to

00:03:19,430 --> 00:03:25,549
calculate the series so like okay there

00:03:22,430 --> 00:03:27,650
was a bo Derek going so a series in

00:03:25,549 --> 00:03:29,840
simple used to be represented and still

00:03:27,650 --> 00:03:31,700
represented as in as a syntax tree so

00:03:29,840 --> 00:03:33,799
like you have it you want to represent X

00:03:31,700 --> 00:03:35,239
plus y it's a dove X comma Y all right

00:03:33,799 --> 00:03:37,730
if you have a long series it's like

00:03:35,239 --> 00:03:39,650
multiple ads and multiplication of

00:03:37,730 --> 00:03:41,090
things so if you are storing it that way

00:03:39,650 --> 00:03:43,750
every time you have to do a calculation

00:03:41,090 --> 00:03:46,040
you have to you know pass the whole

00:03:43,750 --> 00:03:49,160
expression and then do things with it

00:03:46,040 --> 00:03:51,920
what we the idea we used was that they

00:03:49,160 --> 00:03:54,319
present a series with simple tuples so

00:03:51,920 --> 00:03:55,940
if I i say i'm going to only only use x

00:03:54,319 --> 00:03:58,730
and y all right those are my only

00:03:55,940 --> 00:04:01,250
variables and if I have to use X plus y

00:03:58,730 --> 00:04:04,400
I'll say 1 comma 1 that is my X plus y

00:04:01,250 --> 00:04:07,190
right and if I want to give the powers

00:04:04,400 --> 00:04:09,709
of that soup example I would say X so i

00:04:07,190 --> 00:04:13,820
will say X 1 comma 1 stands for X to the

00:04:09,709 --> 00:04:16,400
power 1 all right comma 1 comma 1 stands

00:04:13,820 --> 00:04:18,260
for y to the power one that is my rule

00:04:16,400 --> 00:04:20,600
right I'll agree with the

00:04:18,260 --> 00:04:23,090
beforehand and then if you have to risk

00:04:20,600 --> 00:04:26,180
raise the x to the power of 2 you simply

00:04:23,090 --> 00:04:28,190
say one comma to write the X was raised

00:04:26,180 --> 00:04:30,620
to the power of 2 by simply incrementing

00:04:28,190 --> 00:04:32,690
one number whereas in the oil Deborah

00:04:30,620 --> 00:04:34,940
representation you had to pass the whole

00:04:32,690 --> 00:04:37,790
string and then do weird things with

00:04:34,940 --> 00:04:39,950
whether to arrive at any calculation so

00:04:37,790 --> 00:04:41,570
the whole point is if you are stuck at

00:04:39,950 --> 00:04:43,250
some particular point in your

00:04:41,570 --> 00:04:46,160
application and if you are blaming

00:04:43,250 --> 00:04:48,920
Python for being too slow well one

00:04:46,160 --> 00:04:50,930
problem solution is that the algorithm

00:04:48,920 --> 00:04:54,200
and data structure that you are using is

00:04:50,930 --> 00:04:56,570
not correct or maybe you are to blame

00:04:54,200 --> 00:04:59,150
right so do not blame Python all the

00:04:56,570 --> 00:05:02,660
time for being slow try to be a bit

00:04:59,150 --> 00:05:05,810
smarter that is it by the way if anybody

00:05:02,660 --> 00:05:07,820
wants to look at it actually and right

00:05:05,810 --> 00:05:10,310
to run it you can go to the website up

00:05:07,820 --> 00:05:12,050
some pipe all right and just try to

00:05:10,310 --> 00:05:13,910
learn about the Rings series all right

00:05:12,050 --> 00:05:15,590
so it's called ring series I won't talk

00:05:13,910 --> 00:05:18,290
about why it is curving series try to

00:05:15,590 --> 00:05:20,000
read about it and ping me if you want to

00:05:18,290 --> 00:05:26,530
know the details so I am Shiva much

00:05:20,000 --> 00:05:26,530

YouTube URL: https://www.youtube.com/watch?v=E5hSvojqBzU


