Title: Building flexible filesystems with FUSE-Python - PyCon India 2015
Publication date: 2015-10-12
Playlist: PyCon India 2015
Description: 
	Speaker: Anurag

FUSE is a powerful library to implement a fully functional filesystem via user space programs. FUSE-Python makes it easier to implement and prototype new filesystem ideas in Python.

Details: https://in.pycon.org/cfp/pycon-india-2015/proposals/building-flexible-filesystems-with-fuse-python/
Captions: 
	00:00:00,000 --> 00:00:05,609
my name is Anurag and I'm going to speak

00:00:02,700 --> 00:00:08,639
about writing flexible file systems with

00:00:05,609 --> 00:00:11,519
fuse Python just a small survey before I

00:00:08,639 --> 00:00:18,060
start how many of us here file system

00:00:11,519 --> 00:00:19,740
ingenious a one ok so if I say anything

00:00:18,060 --> 00:00:25,769
wrong anything just correct me that ok I

00:00:19,740 --> 00:00:29,340
they'll be fine so I'm a Python beginner

00:00:25,769 --> 00:00:30,660
and I wanted to do know how the always

00:00:29,340 --> 00:00:33,719
works how the file system works this is

00:00:30,660 --> 00:00:36,719
this was a a month-long project to

00:00:33,719 --> 00:00:39,629
understand the file system and see how

00:00:36,719 --> 00:00:42,870
to make a working file system so there's

00:00:39,629 --> 00:00:44,700
this amazing library called fuse which

00:00:42,870 --> 00:00:47,370
allows you to write your own file

00:00:44,700 --> 00:00:50,820
systems in a high-level language Python

00:00:47,370 --> 00:00:53,160
was a language choice because by then is

00:00:50,820 --> 00:00:54,809
good so this light is also edible at

00:00:53,160 --> 00:00:56,969
this URL if you are following in the

00:00:54,809 --> 00:00:59,420
laptop just open this in the browser so

00:00:56,969 --> 00:01:03,000
you can follow along at your own pace

00:00:59,420 --> 00:01:05,280
ok so talk overview what I will are I'm

00:01:03,000 --> 00:01:07,830
segregating the talk into four or five

00:01:05,280 --> 00:01:10,710
parts one is the UNIX Dex file systems

00:01:07,830 --> 00:01:14,189
we'll see about file systems are how how

00:01:10,710 --> 00:01:16,049
they are they work ok what are the basic

00:01:14,189 --> 00:01:18,540
components of a file system what are the

00:01:16,049 --> 00:01:21,780
attributes that you need to define next

00:01:18,540 --> 00:01:23,490
is what is fuse so given the file system

00:01:21,780 --> 00:01:25,680
which we already have in the oasis where

00:01:23,490 --> 00:01:29,640
does fuse fit in okay why would you use

00:01:25,680 --> 00:01:31,829
fuse then fuse API overview we will see

00:01:29,640 --> 00:01:33,630
what are the basic functions that you

00:01:31,829 --> 00:01:36,180
need to implement what's the class that

00:01:33,630 --> 00:01:38,490
you need a subclass and how to get a

00:01:36,180 --> 00:01:42,360
basic file system which displays are

00:01:38,490 --> 00:01:44,549
directly going ok then this small demo

00:01:42,360 --> 00:01:48,030
about toy FS it's a toy file system just

00:01:44,549 --> 00:01:49,470
to learn so there are two there's a

00:01:48,030 --> 00:01:52,710
controller in it and there are two

00:01:49,470 --> 00:01:55,049
modules a one creates a file system with

00:01:52,710 --> 00:01:57,149
directories and there's another model

00:01:55,049 --> 00:01:58,649
which creates a file system with

00:01:57,149 --> 00:02:00,810
directories and files which you can read

00:01:58,649 --> 00:02:03,450
and display some output on the screen

00:02:00,810 --> 00:02:06,210
the very small toy file system just to

00:02:03,450 --> 00:02:12,840
learn ok next will be question answer in

00:02:06,210 --> 00:02:14,020
the end this is a very interesting

00:02:12,840 --> 00:02:16,630
comment by

00:02:14,020 --> 00:02:20,290
our Professor Joseph Pfeiffer from New

00:02:16,630 --> 00:02:22,720
Mexico State University he this is very

00:02:20,290 --> 00:02:26,160
true right one of the real contributions

00:02:22,720 --> 00:02:28,030
of the UNIX operating was the idea that

00:02:26,160 --> 00:02:30,130
everything is a file you look at

00:02:28,030 --> 00:02:34,270
everything as a file so for example a

00:02:30,130 --> 00:02:38,200
keyboard or your USB Drive or your

00:02:34,270 --> 00:02:40,120
display everything is is a fine okay so

00:02:38,200 --> 00:02:42,070
you read something from a file and you

00:02:40,120 --> 00:02:51,640
write something file so it could be your

00:02:42,070 --> 00:02:53,500
printer or your hard disk or anything so

00:02:51,640 --> 00:02:57,250
what are the common file systems which

00:02:53,500 --> 00:03:04,390
we already have vfat is there for

00:02:57,250 --> 00:03:07,990
windows hfs+ OS X you have ext4 on Linux

00:03:04,390 --> 00:03:10,540
you have except s so this NFS infuse

00:03:07,990 --> 00:03:12,070
which is mentioned with an asterisk so

00:03:10,540 --> 00:03:14,320
these are not on disk files and these

00:03:12,070 --> 00:03:17,620
are you can say the virtual file system

00:03:14,320 --> 00:03:18,760
they are based on a on disk file system

00:03:17,620 --> 00:03:21,550
they are based on top of it in they

00:03:18,760 --> 00:03:23,590
provide extra extra functionalities so

00:03:21,550 --> 00:03:28,000
NFS for example it's not NATO file

00:03:23,590 --> 00:03:31,200
system ok a fuse is a very peculiar file

00:03:28,000 --> 00:03:34,720
system which allows you to make very

00:03:31,200 --> 00:03:37,060
interesting file so for example you can

00:03:34,720 --> 00:03:40,600
make a physician which reads into a zip

00:03:37,060 --> 00:03:42,370
file and shows the contents in a

00:03:40,600 --> 00:03:43,840
directory format and which normal

00:03:42,370 --> 00:03:49,660
applications in a normal file explorer

00:03:43,840 --> 00:03:51,280
can view if you do this scat profile

00:03:49,660 --> 00:03:53,110
systems it will tell you which file

00:03:51,280 --> 00:03:58,450
systems is which file systems are

00:03:53,110 --> 00:04:01,150
currently supported by your kernel ok ok

00:03:58,450 --> 00:04:04,590
so it it supports among the other files

00:04:01,150 --> 00:04:07,330
so it's suppose X 2 3 X 2 2 X t4

00:04:04,590 --> 00:04:09,100
so the kernel is compiled for your x FS

00:04:07,330 --> 00:04:12,760
also but I don't see it here so you can

00:04:09,100 --> 00:04:14,890
simply load it by a modprobe ok that

00:04:12,760 --> 00:04:17,320
will load it when you do CAD profiles

00:04:14,890 --> 00:04:19,480
and again you will see XF is over there

00:04:17,320 --> 00:04:22,090
so this way you can load new files in

00:04:19,480 --> 00:04:25,000
which are compiled with the kernel and

00:04:22,090 --> 00:04:26,440
now this is I am sure many American

00:04:25,000 --> 00:04:27,699
familiar with this this these are the

00:04:26,440 --> 00:04:29,889
file system

00:04:27,699 --> 00:04:32,139
file some type attributes so when you do

00:04:29,889 --> 00:04:33,580
a directory listing in a long mode - L

00:04:32,139 --> 00:04:35,590
the first character that you see

00:04:33,580 --> 00:04:38,349
signifies what type of file it is okay

00:04:35,590 --> 00:04:40,629
so with the D it's a directory or

00:04:38,349 --> 00:04:41,919
anything else it's a it's a file so

00:04:40,629 --> 00:04:45,999
directly the special file which contains

00:04:41,919 --> 00:04:49,779
files including directories light the

00:04:45,999 --> 00:04:51,909
fuse fuse the full form is filesystem in

00:04:49,779 --> 00:04:54,400
user space so F comes from there and you

00:04:51,909 --> 00:04:56,889
AC comes from there

00:04:54,400 --> 00:05:00,849
so this is see how the virtual memory is

00:04:56,889 --> 00:05:04,060
segregated so the first box that you see

00:05:00,849 --> 00:05:06,610
over there is the user mode and second

00:05:04,060 --> 00:05:08,680
box is the kernel mode so user mode

00:05:06,610 --> 00:05:11,590
means all the applications that are

00:05:08,680 --> 00:05:15,969
running in with the users permissions

00:05:11,590 --> 00:05:19,449
okay so things like your demons okay or

00:05:15,969 --> 00:05:20,949
the Windows system or the browser or

00:05:19,449 --> 00:05:23,139
editor which is running on top of the

00:05:20,949 --> 00:05:25,779
windows system or any of the libraries

00:05:23,139 --> 00:05:27,999
they all run on the user space okay they

00:05:25,779 --> 00:05:30,759
run with your unprivileged uses

00:05:27,999 --> 00:05:32,860
permissions so they all talk to the

00:05:30,759 --> 00:05:37,210
gilepsy api which provides you a set of

00:05:32,860 --> 00:05:38,889
maybe about 2,000 function calls so they

00:05:37,210 --> 00:05:42,009
all talk why are the G Lib C standard C

00:05:38,889 --> 00:05:44,460
API and which in turn connects to the

00:05:42,009 --> 00:05:47,800
system calls provided by the kernel and

00:05:44,460 --> 00:05:50,349
gives you the ability to access the

00:05:47,800 --> 00:05:51,759
underlying process scheduling or the

00:05:50,349 --> 00:05:54,339
interpersonal communication or the

00:05:51,759 --> 00:05:55,539
virtual file system in this case that's

00:05:54,339 --> 00:05:58,180
something that you're going to see or

00:05:55,539 --> 00:06:00,659
the network so this way the memory is

00:05:58,180 --> 00:06:02,259
segregated so you cannot directly access

00:06:00,659 --> 00:06:04,120
anything

00:06:02,259 --> 00:06:06,639
mmm management or virtual fivesome

00:06:04,120 --> 00:06:07,500
directly you need to go via the kernel

00:06:06,639 --> 00:06:12,819
system calls

00:06:07,500 --> 00:06:15,279
so what fuse does is it is usable by

00:06:12,819 --> 00:06:18,430
unprivileged users what that means is as

00:06:15,279 --> 00:06:21,759
a normal user you can create the program

00:06:18,430 --> 00:06:24,159
which uses if you use library and make

00:06:21,759 --> 00:06:26,800
it behave the way you want okay so for

00:06:24,159 --> 00:06:28,479
example I mentioned the zip file system

00:06:26,800 --> 00:06:30,789
so you can make something like a get

00:06:28,479 --> 00:06:32,649
file system okay so you can try to

00:06:30,789 --> 00:06:36,669
program in Python any other language

00:06:32,649 --> 00:06:38,979
which does a get sure F or get LS and

00:06:36,669 --> 00:06:41,470
the output that you get it translates

00:06:38,979 --> 00:06:43,660
that into a directory listing

00:06:41,470 --> 00:06:45,400
see that into directory listing which is

00:06:43,660 --> 00:06:47,710
passed on to the colonel white kerchief

00:06:45,400 --> 00:06:49,800
I system which goes back while it's

00:06:47,710 --> 00:06:51,850
consistent calls to BG Lipsy API and

00:06:49,800 --> 00:06:55,000
goes out to the LS command

00:06:51,850 --> 00:06:56,530
so when Ellis runs it requests we were

00:06:55,000 --> 00:06:58,570
suffice him for the listing of the

00:06:56,530 --> 00:07:00,940
directory where it is in okay or the

00:06:58,570 --> 00:07:02,110
parameter so this travels phone the way

00:07:00,940 --> 00:07:03,490
back from the colonel back to the

00:07:02,110 --> 00:07:05,890
application which is running in the user

00:07:03,490 --> 00:07:07,660
space which responds with get a list or

00:07:05,890 --> 00:07:10,230
get sure if i whatever you want right

00:07:07,660 --> 00:07:14,140
so it's usable by the unprivileged users

00:07:10,230 --> 00:07:17,320
so the most important point here is the

00:07:14,140 --> 00:07:18,970
development cycle is slower because it's

00:07:17,320 --> 00:07:20,650
user mode program right you don't have

00:07:18,970 --> 00:07:24,060
to compile to be compile the kernel and

00:07:20,650 --> 00:07:27,190
add a support for X APIs or any other

00:07:24,060 --> 00:07:30,190
latest leading-edge file system see if

00:07:27,190 --> 00:07:32,890
you install for example sshfs another

00:07:30,190 --> 00:07:35,290
interesting file system can simply be

00:07:32,890 --> 00:07:39,840
installed via app get install or yum

00:07:35,290 --> 00:07:42,310
install sshfs what this does isn't is it

00:07:39,840 --> 00:07:43,930
using your username password it says

00:07:42,310 --> 00:07:46,570
username password you can connect to a

00:07:43,930 --> 00:07:49,960
remote server and it gets a listing and

00:07:46,570 --> 00:07:51,820
transfers back so you don't need NFS or

00:07:49,960 --> 00:07:54,220
anything simply an ssh connection to the

00:07:51,820 --> 00:07:57,790
remote server can get you or usable file

00:07:54,220 --> 00:07:59,979
system in your local machine ok multiple

00:07:57,790 --> 00:08:02,440
language bindings we gonna see Python

00:07:59,979 --> 00:08:04,900
here and reported to other operating

00:08:02,440 --> 00:08:07,750
service well yeah so this is what I was

00:08:04,900 --> 00:08:10,600
talking about how the calls go via the

00:08:07,750 --> 00:08:13,260
VFS back to the application so on the

00:08:10,600 --> 00:08:16,870
top box you have your program running LS

00:08:13,260 --> 00:08:20,860
- L and uh directory where your fuse

00:08:16,870 --> 00:08:23,320
file some is mounted okay then that just

00:08:20,860 --> 00:08:25,060
uses space so whenever you say LS you

00:08:23,320 --> 00:08:26,860
want to know the directory contents of

00:08:25,060 --> 00:08:28,600
that directive

00:08:26,860 --> 00:08:31,270
TMP fuse or whatever the mount point is

00:08:28,600 --> 00:08:34,030
so it the control goes back to G lives

00:08:31,270 --> 00:08:35,320
the API gillece the API translate back

00:08:34,030 --> 00:08:38,710
to the VFS why are the kernel system

00:08:35,320 --> 00:08:42,909
calls and VFS knows that this directed

00:08:38,710 --> 00:08:44,770
TMP fuse is mounted over fuse okay some

00:08:42,909 --> 00:08:46,600
other directory I'm in t / NFS could be

00:08:44,770 --> 00:08:49,290
bound over NFS or ext3 whatever it is

00:08:46,600 --> 00:08:53,920
devfs knows that so it goes to fuse and

00:08:49,290 --> 00:08:54,880
it transfers transmits back up to the

00:08:53,920 --> 00:08:56,080
lip fuse and by

00:08:54,880 --> 00:08:58,210
to the program which is running so dot

00:08:56,080 --> 00:09:01,810
slash hello is the program and it's

00:08:58,210 --> 00:09:02,380
mounted over PNP fuse so the control

00:09:01,810 --> 00:09:03,850
goes here

00:09:02,380 --> 00:09:06,040
TMP fuse and it goes at the hello

00:09:03,850 --> 00:09:07,660
program and hello program will do

00:09:06,040 --> 00:09:09,910
whatever it wants to do right if it's a

00:09:07,660 --> 00:09:12,460
zip of sshfs it will take action on the

00:09:09,910 --> 00:09:13,960
parameter TMP fuse and we'll give the

00:09:12,460 --> 00:09:16,300
listing back it'll come back to the

00:09:13,960 --> 00:09:18,580
program LS then LS will display the

00:09:16,300 --> 00:09:21,520
contents okay so that's the diagram

00:09:18,580 --> 00:09:24,480
we'll see how it works actually on a a

00:09:21,520 --> 00:09:27,580
working simple file system right

00:09:24,480 --> 00:09:30,760
inserted two terminals one is where I

00:09:27,580 --> 00:09:39,510
will mount the file system and the

00:09:30,760 --> 00:09:45,550
second one I'll show the the logs right

00:09:39,510 --> 00:09:47,830
LS /tmp empty so we want to make a

00:09:45,550 --> 00:09:55,980
directory called TMP slash fuse

00:09:47,830 --> 00:09:58,270
they will mount the fuse filesystem okay

00:09:55,980 --> 00:10:00,610
this is empty directory because it's

00:09:58,270 --> 00:10:04,540
just an ordinary directory now we'll go

00:10:00,610 --> 00:10:07,690
to the toy FS file system now you have a

00:10:04,540 --> 00:10:09,190
main controller toy episode PI will see

00:10:07,690 --> 00:10:11,890
that what was inside it in the latest

00:10:09,190 --> 00:10:16,360
lines so to mount a file system you

00:10:11,890 --> 00:10:22,990
simply have to do - toy this third PI

00:10:16,360 --> 00:10:25,480
and the mount point okay I'll openly

00:10:22,990 --> 00:10:32,860
long here a new log file has been

00:10:25,480 --> 00:10:34,150
created okay it's empty because we are

00:10:32,860 --> 00:10:41,070
not running your pressure on that

00:10:34,150 --> 00:10:44,980
directory now when you see LS TMP fuse

00:10:41,070 --> 00:10:47,380
you'll see it's no longer empty so it

00:10:44,980 --> 00:10:50,410
contains some two directories a11 world

00:10:47,380 --> 00:10:52,510
and on the log you'll see the program is

00:10:50,410 --> 00:10:56,230
emitting gate attr

00:10:52,510 --> 00:10:59,260
read di a-- on slash so for the mounted

00:10:56,230 --> 00:11:01,330
filesystem a program called LS somehow

00:10:59,260 --> 00:11:03,480
wants to know what's inside slash right

00:11:01,330 --> 00:11:06,000
so it responds with some what some

00:11:03,480 --> 00:11:09,220
directory listing it's a dictionary and

00:11:06,000 --> 00:11:12,700
then you get get a TDR on hello and get

00:11:09,220 --> 00:11:14,440
it a own word so the directory the

00:11:12,700 --> 00:11:16,690
directory contents is hello in world and

00:11:14,440 --> 00:11:18,490
it needs to know what kind of what kind

00:11:16,690 --> 00:11:20,770
of file it is it is a directory or what

00:11:18,490 --> 00:11:22,750
permissions are there so because of

00:11:20,770 --> 00:11:27,190
which to get it here extra al-fayed over

00:11:22,750 --> 00:11:31,870
there right let's see what's inside

00:11:27,190 --> 00:11:35,890
hello okay there's another ready to call

00:11:31,870 --> 00:11:37,750
bed now notice here the gate idiot I get

00:11:35,890 --> 00:11:41,140
it here come on has changed and now

00:11:37,750 --> 00:11:45,850
you'll see three dir hello and hello

00:11:41,140 --> 00:11:49,360
Would so it's getting contents from fuse

00:11:45,850 --> 00:11:51,370
hello well so same we can go recursing

00:11:49,360 --> 00:11:57,400
into a directory and get it directory

00:11:51,370 --> 00:12:01,900
contents I learned mount this directory

00:11:57,400 --> 00:12:04,330
for now so how do I install fuse you

00:12:01,900 --> 00:12:08,460
need to install fuse - python or if it's

00:12:04,330 --> 00:12:08,460
a one two or Debian fighter - fuse

00:12:08,769 --> 00:12:15,339
loading fuse same way modprobe that will

00:12:11,980 --> 00:12:23,069
load the kernel module the way we did

00:12:15,339 --> 00:12:31,420
for XMS you can simply do sudo mod fuse

00:12:23,069 --> 00:12:36,819
and that should show the you kernel

00:12:31,420 --> 00:12:38,740
module loaded okay so the first thing

00:12:36,819 --> 00:12:41,759
you need to do to implement a few file

00:12:38,740 --> 00:12:45,009
system in python is create a subclass of

00:12:41,759 --> 00:12:46,990
fuse or fuse gloves and implement a

00:12:45,009 --> 00:12:48,639
number of methods okay so we saw in the

00:12:46,990 --> 00:12:51,999
log there are two function are two

00:12:48,639 --> 00:12:53,769
methods call one is a great idea and one

00:12:51,999 --> 00:13:01,660
is read di yeah okay we'll see what that

00:12:53,769 --> 00:13:04,269
is so as I mentioned this file system

00:13:01,660 --> 00:13:05,559
contains two two major components one is

00:13:04,269 --> 00:13:07,480
the toy has read PI that's the

00:13:05,559 --> 00:13:10,360
controller and the actual implementation

00:13:07,480 --> 00:13:14,499
is inside thyroid PI or toy readwrite

00:13:10,360 --> 00:13:18,069
dot pi ok so this is a glue code it can

00:13:14,499 --> 00:13:20,649
simply follow along you have to import

00:13:18,069 --> 00:13:24,220
fuse time if you want to use it I just

00:13:20,649 --> 00:13:25,629
imported setup logging a toy F is what

00:13:24,220 --> 00:13:29,319
log is where all the log is being

00:13:25,629 --> 00:13:31,870
printed then you have to subclass this

00:13:29,319 --> 00:13:33,819
fuse or fuse class okay

00:13:31,870 --> 00:13:35,920
I've imported toy as toy because I want

00:13:33,819 --> 00:13:37,569
to change this on the fly make it I read

00:13:35,920 --> 00:13:41,290
write as toy so that the rest of the

00:13:37,569 --> 00:13:44,379
code doesn't change okay then you have

00:13:41,290 --> 00:13:46,449
to implement these two methods gate attr

00:13:44,379 --> 00:13:48,579
is getting the attributes of the files

00:13:46,449 --> 00:13:50,319
and reader is reading the directory

00:13:48,579 --> 00:13:51,999
contents ok these are two basic

00:13:50,319 --> 00:13:55,949
functions that you need to implement to

00:13:51,999 --> 00:13:55,949
get a working file system

00:13:58,130 --> 00:14:04,040
so what I'm doing here is a get it here

00:14:01,040 --> 00:14:06,140
it's printing the log message and it's

00:14:04,040 --> 00:14:10,520
getting the start it start

00:14:06,140 --> 00:14:13,370
object from FS so FS is over here we'll

00:14:10,520 --> 00:14:14,840
see next what what FS does and it calls

00:14:13,370 --> 00:14:16,700
the FS dot get it yeah it's a mirror

00:14:14,840 --> 00:14:18,740
function just does the same thing over

00:14:16,700 --> 00:14:20,600
there and the actual implementation is

00:14:18,740 --> 00:14:25,400
inside the FS store get eighty

00:14:20,600 --> 00:14:28,070
definition ok I will do any two more

00:14:25,400 --> 00:14:31,010
functions I will see that later and in

00:14:28,070 --> 00:14:35,270
the end you have to this is for pending

00:14:31,010 --> 00:14:37,100
the when you give the Python and toy FS

00:14:35,270 --> 00:14:40,970
goodbye command without any mount point

00:14:37,100 --> 00:14:42,620
then it prints the help message in the

00:14:40,970 --> 00:14:45,050
end you have to set all these attributes

00:14:42,620 --> 00:14:49,310
and say toy episode me that will mount

00:14:45,050 --> 00:14:51,860
the filesystem and this when you say

00:14:49,310 --> 00:14:53,570
Python and then program name and mount

00:14:51,860 --> 00:14:56,210
point it will the program will quit and

00:14:53,570 --> 00:14:58,700
then later when you want to unmount it

00:14:56,210 --> 00:15:01,820
you can say F user mount and then - cube

00:14:58,700 --> 00:15:04,190
that will unmount affine system yeah

00:15:01,820 --> 00:15:06,560
recover this to mount filesystem here to

00:15:04,190 --> 00:15:09,250
instantiate the function class and just

00:15:06,560 --> 00:15:12,170
call the mean what we call in the end

00:15:09,250 --> 00:15:13,850
yeah this is how you mount it our Python

00:15:12,170 --> 00:15:16,370
and then program name which implements

00:15:13,850 --> 00:15:20,960
all this and then a mount point okay TMP

00:15:16,370 --> 00:15:24,800
slash views or toy whatever it is now

00:15:20,960 --> 00:15:27,170
get it here this function defining this

00:15:24,800 --> 00:15:30,920
is mandatory without this a final system

00:15:27,170 --> 00:15:33,590
will not work okay because a file

00:15:30,920 --> 00:15:35,840
contains many attributes right it the

00:15:33,590 --> 00:15:40,130
files from file type what permissions

00:15:35,840 --> 00:15:42,320
are there who is the owner okay and what

00:15:40,130 --> 00:15:44,630
was the time stamp create time all this

00:15:42,320 --> 00:15:48,010
is mandatory so you need to implement

00:15:44,630 --> 00:15:48,010
this for a working file system

00:15:51,209 --> 00:16:02,149
a start structure so these are the these

00:15:57,990 --> 00:16:02,149
are the various attribute that unit set

00:16:08,750 --> 00:16:15,769
so over here you'll see that this is a

00:16:13,670 --> 00:16:19,970
mirror function when you call get etdr

00:16:15,769 --> 00:16:22,399
it will make an object of s toy stat so

00:16:19,970 --> 00:16:26,540
tall stack contains these attributes so

00:16:22,399 --> 00:16:28,399
st mode mode means the the permission

00:16:26,540 --> 00:16:32,089
it's combination of the permissions and

00:16:28,399 --> 00:16:33,410
the file type okay inode number rest of

00:16:32,089 --> 00:16:36,709
it is mandatory you need to set the user

00:16:33,410 --> 00:16:38,480
ID GID for this this particular system I

00:16:36,709 --> 00:16:41,360
have set is 500 you can set any user ID

00:16:38,480 --> 00:16:43,040
j ID you want or you can set this

00:16:41,360 --> 00:16:45,170
permission inside your file and then

00:16:43,040 --> 00:16:48,050
retrieve it and then set it okay this is

00:16:45,170 --> 00:16:50,540
static for this case SD size unity set

00:16:48,050 --> 00:16:54,220
what size the file is okay and then the

00:16:50,540 --> 00:16:54,220
access time modified time creation time

00:17:00,320 --> 00:17:08,150
okay so these are just explanation for

00:17:02,930 --> 00:17:08,990
all those bits how do you view the start

00:17:08,150 --> 00:17:12,520
of a file okay

00:17:08,990 --> 00:17:12,520
we had run this command start

00:17:20,510 --> 00:17:24,740
okay when you do start on the file it

00:17:23,270 --> 00:17:28,580
will tell you everything about the file

00:17:24,740 --> 00:17:31,070
so permission bits okay sighs okay file

00:17:28,580 --> 00:17:34,419
name or access time and everything so

00:17:31,070 --> 00:17:44,720
all this comes from the STM's coast at

00:17:34,419 --> 00:17:48,220
member how the mode actually works

00:17:44,720 --> 00:17:51,380
so instead module if you see the

00:17:48,220 --> 00:17:54,650
documentation Python start module so

00:17:51,380 --> 00:17:57,110
there are there are the variables s and

00:17:54,650 --> 00:17:59,330
so if dir and then you bitwise or it

00:17:57,110 --> 00:18:00,500
with the permissions 7/5 has the

00:17:59,330 --> 00:18:03,350
permission that I want to give to this

00:18:00,500 --> 00:18:06,140
file and do a bitwise or and set it to

00:18:03,350 --> 00:18:10,840
st mode so that will set the file file

00:18:06,140 --> 00:18:10,840
file type and the permission bits okay

00:18:11,679 --> 00:18:18,830
st mode can take these parameters you if

00:18:16,880 --> 00:18:21,679
it you want to create a directory then

00:18:18,830 --> 00:18:24,049
you can simply say if dir or link or

00:18:21,679 --> 00:18:27,380
anything else and bitwise or with the

00:18:24,049 --> 00:18:28,820
permission that you want this this

00:18:27,380 --> 00:18:34,510
explanation is there in the Python start

00:18:28,820 --> 00:18:36,860
module and simply open this link next

00:18:34,510 --> 00:18:38,780
important function is VD AIA these two

00:18:36,860 --> 00:18:41,210
functions are required Reidy ir will

00:18:38,780 --> 00:18:43,160
give you the directory contents okay

00:18:41,210 --> 00:18:45,440
first you need to get the permissions of

00:18:43,160 --> 00:18:47,270
a file and then the directory contents

00:18:45,440 --> 00:18:49,360
to be able to display the contents of a

00:18:47,270 --> 00:18:49,360
directory

00:18:55,410 --> 00:19:00,690
okay so in this case I have made a very

00:18:57,720 --> 00:19:02,280
simple function read dir and the path so

00:19:00,690 --> 00:19:04,440
the hello and world

00:19:02,280 --> 00:19:06,720
directories that you saw earlier it's

00:19:04,440 --> 00:19:08,850
coming from here so there is a content

00:19:06,720 --> 00:19:13,470
dictionary and if you query for a slash

00:19:08,850 --> 00:19:18,240
okay when you do LS on the TMP fuse its

00:19:13,470 --> 00:19:21,720
quitting for slash so you get this this

00:19:18,240 --> 00:19:23,370
has the response hello and void or if

00:19:21,720 --> 00:19:25,710
you query for slash hello you get vent

00:19:23,370 --> 00:19:28,410
okay so that's why it's coming from and

00:19:25,710 --> 00:19:30,150
then you need to add this to dot and dot

00:19:28,410 --> 00:19:32,430
dot which is the current and previous

00:19:30,150 --> 00:19:35,580
directory combine it and return back

00:19:32,430 --> 00:19:37,560
okay that's the directory contents so

00:19:35,580 --> 00:19:39,090
you can this is very simple if I use

00:19:37,560 --> 00:19:42,210
some which in which the directory

00:19:39,090 --> 00:19:45,600
containing is insider it's a dictionary

00:19:42,210 --> 00:19:47,760
dictionary or you can modify this you

00:19:45,600 --> 00:19:49,830
can make it a SH file system or HTTP

00:19:47,760 --> 00:19:52,710
file system where you can do this lookup

00:19:49,830 --> 00:19:54,300
part and make a let's say a call to an

00:19:52,710 --> 00:19:57,420
FTP server or get the direct relation

00:19:54,300 --> 00:19:59,040
from there and then append with dot N Da

00:19:57,420 --> 00:20:08,280
dot n return back you can do all kind of

00:19:59,040 --> 00:20:11,040
fancy stuff over there reading files if

00:20:08,280 --> 00:20:12,930
you want to read files so the first two

00:20:11,040 --> 00:20:14,790
function get a TD R and radius for

00:20:12,930 --> 00:20:17,040
simply getting a directory listing and

00:20:14,790 --> 00:20:18,360
the gate getting the directory tree if

00:20:17,040 --> 00:20:20,010
you want to actually read files unity

00:20:18,360 --> 00:20:28,230
implement additional functions open and

00:20:20,010 --> 00:20:31,470
read okay and this demonstrates a small

00:20:28,230 --> 00:20:37,560
modification to the toy but PI files

00:20:31,470 --> 00:20:44,190
some implementation so I've made another

00:20:37,560 --> 00:20:48,180
program in this case what I'm doing is

00:20:44,190 --> 00:20:51,570
first look at the read the ayah so in

00:20:48,180 --> 00:20:53,490
slash I'm adding a couple of more

00:20:51,570 --> 00:20:56,970
directories and files so if you notice

00:20:53,490 --> 00:20:59,460
there is a Doc's directory in dogs it's

00:20:56,970 --> 00:21:02,820
returning a file or or whatever this is

00:20:59,460 --> 00:21:05,040
string called a readme dot txt okay so

00:21:02,820 --> 00:21:06,720
when you do a listing on slash dogs it

00:21:05,040 --> 00:21:09,330
will return read mean dot txt as a

00:21:06,720 --> 00:21:12,330
content now in the gate

00:21:09,330 --> 00:21:13,230
here I just modified it if the path ends

00:21:12,330 --> 00:21:16,730
with dot txt

00:21:13,230 --> 00:21:20,370
then set the ST mode as a regular file

00:21:16,730 --> 00:21:22,860
okay or if it's a directory now if it's

00:21:20,370 --> 00:21:24,600
anything else then set it as a dia with

00:21:22,860 --> 00:21:26,700
the permissions bitwise odd okay and

00:21:24,600 --> 00:21:28,680
then return this T so what happens is

00:21:26,700 --> 00:21:30,600
whenever I go and do a listing on a

00:21:28,680 --> 00:21:33,030
directory which contains about txt file

00:21:30,600 --> 00:21:34,620
it will set the permission mode as a

00:21:33,030 --> 00:21:35,970
regular file between or with the

00:21:34,620 --> 00:21:40,110
permissions there is a small

00:21:35,970 --> 00:21:42,930
modification and in this read method if

00:21:40,110 --> 00:21:45,120
you do a read on a file it has to be

00:21:42,930 --> 00:21:46,380
file it can't be directly on a file it

00:21:45,120 --> 00:21:49,860
will return cell the data

00:21:46,380 --> 00:21:53,610
salary data is there in a in it if this

00:21:49,860 --> 00:21:55,470
is lorem ipsum string okay so what

00:21:53,610 --> 00:21:57,630
should happen is when I go to the

00:21:55,470 --> 00:22:00,330
directory mount is again and I go to

00:21:57,630 --> 00:22:02,460
doubt Doc's directly I'll get readme.txt

00:22:00,330 --> 00:22:06,480
as a listing and when I try to read it I

00:22:02,460 --> 00:22:07,980
will get that string okay it can be

00:22:06,480 --> 00:22:10,020
binary so it doesn't matter for this so

00:22:07,980 --> 00:22:13,290
you need to write a program which can

00:22:10,020 --> 00:22:15,240
transfer binary files to the underlying

00:22:13,290 --> 00:22:16,830
LS program so in this case I've just a

00:22:15,240 --> 00:22:18,990
different string I could make a binary

00:22:16,830 --> 00:22:22,320
and make sure the function parameter

00:22:18,990 --> 00:22:24,870
calls and everything handles binary yeah

00:22:22,320 --> 00:22:27,930
so I'll import instruct toy import toy

00:22:24,870 --> 00:22:29,520
he bright dot retry retry theis toy so

00:22:27,930 --> 00:22:34,860
that I don't have to change anything

00:22:29,520 --> 00:22:39,390
else just notice whoa so what function

00:22:34,860 --> 00:22:45,060
calls are being executed okay I go to

00:22:39,390 --> 00:22:47,310
dogs I have a readable txt okay so

00:22:45,060 --> 00:22:50,610
they've conditioned over there it tells

00:22:47,310 --> 00:22:53,310
that whenever you see a string which

00:22:50,610 --> 00:23:00,450
ends with dot txt set the mode as a

00:22:53,310 --> 00:23:02,490
frame when I try to cat it okay I get

00:23:00,450 --> 00:23:04,860
the low room some string back so the

00:23:02,490 --> 00:23:07,440
condition what what is there is whenever

00:23:04,860 --> 00:23:08,910
you try to read on an ordinary file it

00:23:07,440 --> 00:23:11,460
should just retrieve

00:23:08,910 --> 00:23:13,650
cell door data and return it back okay

00:23:11,460 --> 00:23:14,940
so if I create any other you know txt

00:23:13,650 --> 00:23:16,230
file over there it will return this

00:23:14,940 --> 00:23:22,200
thing because they'll do data remains

00:23:16,230 --> 00:23:23,340
the same so to make add more features of

00:23:22,200 --> 00:23:26,250
file some you can implement

00:23:23,340 --> 00:23:28,800
rest of these functions there more so

00:23:26,250 --> 00:23:31,680
you can focus on building symbolic link

00:23:28,800 --> 00:23:34,110
for example you can have like a link and

00:23:31,680 --> 00:23:36,900
unlink function you for making anything

00:23:34,110 --> 00:23:38,370
ending as like a character device or a

00:23:36,900 --> 00:23:41,160
block device you can implement the MK an

00:23:38,370 --> 00:23:45,390
odd function it takes the major and

00:23:41,160 --> 00:23:47,340
minor modes and the paths or for

00:23:45,390 --> 00:23:50,190
managing the external attributes there

00:23:47,340 --> 00:23:51,510
are X attr functions available so you

00:23:50,190 --> 00:23:54,980
can go through the documentation and

00:23:51,510 --> 00:23:54,980
make your file some more feature

00:23:55,700 --> 00:24:01,950
so these are some file systems out there

00:23:58,380 --> 00:24:05,220
which are very popular there is a my

00:24:01,950 --> 00:24:07,320
sequel FS so it just queries your

00:24:05,220 --> 00:24:09,570
database right you write a program which

00:24:07,320 --> 00:24:12,120
queries the database and saves all the

00:24:09,570 --> 00:24:14,730
files over there or there is SSA page

00:24:12,120 --> 00:24:17,910
which is very very popular there is

00:24:14,730 --> 00:24:21,410
Gmail FS which was one of the highlights

00:24:17,910 --> 00:24:23,910
of fuse back then so what it did was it

00:24:21,410 --> 00:24:26,940
uses username and password and logs into

00:24:23,910 --> 00:24:29,700
the IMAP server and gets the list of

00:24:26,940 --> 00:24:32,310
labels and the emails and exposes the

00:24:29,700 --> 00:24:34,620
entire Gmail as a folder inside your

00:24:32,310 --> 00:24:37,650
file in your computer so you can simply

00:24:34,620 --> 00:24:39,930
do a CD to a directory and you see all

00:24:37,650 --> 00:24:43,350
the labels as folders you see all the

00:24:39,930 --> 00:24:45,360
emails as files right so it just depends

00:24:43,350 --> 00:24:48,450
on what what program you can write right

00:24:45,360 --> 00:24:51,210
so it's in user space you are free to

00:24:48,450 --> 00:24:54,840
write or modify your program and LS will

00:24:51,210 --> 00:24:56,310
simply pass the file the location to

00:24:54,840 --> 00:24:58,740
your program and it's for you to

00:24:56,310 --> 00:25:01,980
implement how you want to implement so

00:24:58,740 --> 00:25:06,000
that's the end of the talk and I'd like

00:25:01,980 --> 00:25:08,280
take some questions so when you mount

00:25:06,000 --> 00:25:10,380
other types you can actually do it when

00:25:08,280 --> 00:25:12,570
I mount by specifying the type by - T

00:25:10,380 --> 00:25:14,760
option so I believe it's some sort of

00:25:12,570 --> 00:25:17,220
alias so how do I do it for this or any

00:25:14,760 --> 00:25:19,710
file system that I implement myself so I

00:25:17,220 --> 00:25:23,070
I remember doing this once you put it

00:25:19,710 --> 00:25:25,890
inside your 80 CFS tab and you specify

00:25:23,070 --> 00:25:28,380
those mount point and the sauce I'm sure

00:25:25,890 --> 00:25:29,700
documentation will have it I've done it

00:25:28,380 --> 00:25:31,320
exactly one so I don't recollect the

00:25:29,700 --> 00:25:34,289
exact center but you can put in et CFS

00:25:31,320 --> 00:25:36,840
tab and you can make make it autumn and

00:25:34,289 --> 00:25:38,760
and so does fuse have support for

00:25:36,840 --> 00:25:39,840
asynchronous i/o or something that

00:25:38,760 --> 00:25:42,780
something like today try what I will

00:25:39,840 --> 00:25:44,700
have to implement in sort of so since

00:25:42,780 --> 00:25:48,000
this APA that was shown here was

00:25:44,700 --> 00:25:50,309
synchronous if I want to implement an AP

00:25:48,000 --> 00:25:51,750
that is asynchronous in nature so does

00:25:50,309 --> 00:25:55,590
Linux have that sort of abstraction

00:25:51,750 --> 00:25:57,480
available that users could use it does

00:25:55,590 --> 00:25:59,340
but I'm not sure if Python does so

00:25:57,480 --> 00:26:01,470
mostly if you want to make like a

00:25:59,340 --> 00:26:03,090
real-world file system you would use you

00:26:01,470 --> 00:26:07,350
would really want to use a c c driver

00:26:03,090 --> 00:26:10,140
which would support all this sorry it

00:26:07,350 --> 00:26:13,080
does but the python driver has or not

00:26:10,140 --> 00:26:14,909
i'm not very sure about it so the Python

00:26:13,080 --> 00:26:20,450
is just calls the C its bindings to the

00:26:14,909 --> 00:26:20,450
C API yes okay thank you

00:26:29,730 --> 00:26:32,990
any more questions

00:26:35,850 --> 00:26:38,600
okay

00:26:41,149 --> 00:26:47,289
there any limitation on the size of a

00:26:44,629 --> 00:26:50,629
fire of the volume that you mounted or

00:26:47,289 --> 00:26:52,839
the partition table or anything like

00:26:50,629 --> 00:26:55,129
that so as far as I understand with fuse

00:26:52,839 --> 00:26:56,869
there is no concept of size limitation

00:26:55,129 --> 00:26:58,909
right it so it's for your program to

00:26:56,869 --> 00:27:01,429
implement size limitation there is

00:26:58,909 --> 00:27:03,589
however limitation on the number of the

00:27:01,429 --> 00:27:04,940
I know what's called block size

00:27:03,589 --> 00:27:08,659
something which you can provide at a

00:27:04,940 --> 00:27:10,789
time so it's 32 KB or something it's 8

00:27:08,659 --> 00:27:13,820
KB or you can pass the option for big

00:27:10,789 --> 00:27:17,479
big writes or large reads which makes it

00:27:13,820 --> 00:27:22,479
32 KB n larger size so that's the

00:27:17,479 --> 00:27:22,479
limitation which is there in that volume

00:27:23,109 --> 00:27:49,339
in the size of files there's this huge

00:27:46,249 --> 00:27:50,989
module kernel module okay means you know

00:27:49,339 --> 00:27:52,489
like I drag or I allow this kind of

00:27:50,989 --> 00:28:05,839
things they will have the very tiny ways

00:27:52,489 --> 00:28:07,580
yeah I want to see the yeah the

00:28:05,839 --> 00:28:11,059
footprint I don't have the figures for

00:28:07,580 --> 00:28:12,139
the footprint but I'm sure the C library

00:28:11,059 --> 00:28:14,989
would be very small

00:28:12,139 --> 00:28:17,960
there is fuse fuse module that you need

00:28:14,989 --> 00:28:19,820
to install in the kernel that would be a

00:28:17,960 --> 00:28:22,419
standard sign own size but I don't have

00:28:19,820 --> 00:28:22,419
the figures right now

00:28:28,910 --> 00:28:32,510
you can use Mike

00:28:36,130 --> 00:28:47,710
we use enough I can use so you want to

00:28:44,020 --> 00:28:50,919
mount an NFS file system over fuse or

00:28:47,710 --> 00:28:53,710
NFS so the backend file system is

00:28:50,919 --> 00:28:54,970
actually an NFS partition that I don't

00:28:53,710 --> 00:28:58,059
think that should be problem you need to

00:28:54,970 --> 00:28:59,830
so probably you need to implement an

00:28:58,059 --> 00:29:04,360
actual file system reads over there

00:28:59,830 --> 00:29:07,150
maybe I don't know the use case for it

00:29:04,360 --> 00:29:09,400
why would you do that but it's possible

00:29:07,150 --> 00:29:10,900
right you have a back end program or

00:29:09,400 --> 00:29:14,289
maybe in C your Python whatever it is

00:29:10,900 --> 00:29:15,820
and you get a read dir now get it here

00:29:14,289 --> 00:29:17,860
and you do actually get it here on the

00:29:15,820 --> 00:29:19,929
file system and get it back so NFS

00:29:17,860 --> 00:29:24,250
implements I think all the it's it's

00:29:19,929 --> 00:29:28,570
POSIX compliant so fuse would run simply

00:29:24,250 --> 00:29:30,880
I don't see if I return a problem hello

00:29:28,570 --> 00:29:33,850
is there a process which is running and

00:29:30,880 --> 00:29:35,500
what if that so you said you did Python

00:29:33,850 --> 00:29:37,390
something and then you had the amount

00:29:35,500 --> 00:29:39,159
point yes is there some kind of process

00:29:37,390 --> 00:29:41,640
which is yes let's see the interesting

00:29:39,159 --> 00:29:41,640
question

00:29:48,110 --> 00:29:54,649
okay so there's a Python in command

00:29:50,990 --> 00:29:57,340
which takes pilus parameter and the

00:29:54,649 --> 00:29:57,340
bound point right

00:30:04,150 --> 00:30:08,679
so there you have it what if I kill this

00:30:06,909 --> 00:30:12,029
and still read access the mount point

00:30:08,679 --> 00:30:12,029
let's die there

00:30:21,740 --> 00:30:26,419
it's gone

00:30:23,730 --> 00:30:26,419
thank you

00:30:35,160 --> 00:30:41,030
okay thanks for attending let's head for

00:30:38,730 --> 00:30:41,030
lunch

00:30:47,930 --> 00:30:54,050
jokes then so all those fed up I mean

00:30:50,750 --> 00:30:55,130
not fed up as an you fed yourself up not

00:30:54,050 --> 00:30:56,840
fed up with the conference that's not

00:30:55,130 --> 00:31:05,150
what I meant to say I mean you've had

00:30:56,840 --> 00:31:12,050
your food okay so how did you find the

00:31:05,150 --> 00:31:13,490
conference it's just good it was better

00:31:12,050 --> 00:31:15,640
the last couple of years why do you feel

00:31:13,490 --> 00:31:15,640
so

00:31:19,490 --> 00:31:23,960
to basic do you think you have expanded

00:31:22,070 --> 00:31:25,160
you you've raised your expectation if

00:31:23,960 --> 00:31:28,970
you learned a lot of thought over the

00:31:25,160 --> 00:31:31,630
few years probably sort of expectation

00:31:28,970 --> 00:31:31,630
good good

00:31:33,720 --> 00:31:38,669
it's always been increasing and this

00:31:35,250 --> 00:31:43,400
year it has been it's a dip okay that's

00:31:38,669 --> 00:31:43,400
a harsh thing to say still I would

00:31:45,260 --> 00:31:52,040
it's always a mixed reaction you know no

00:31:47,030 --> 00:31:53,000
you need you have a support okay so how

00:31:52,040 --> 00:31:55,730
do you think you can improve it would

00:31:53,000 --> 00:31:57,230
you like to share experience now would

00:31:55,730 --> 00:31:58,580
you like to share some share some of

00:31:57,230 --> 00:31:59,990
yours and maybe maybe share how would

00:31:58,580 --> 00:32:03,520
you like to you would like to improve it

00:31:59,990 --> 00:32:07,520
upon it okay

00:32:03,520 --> 00:32:08,540
that's excellent that's excellent so is

00:32:07,520 --> 00:32:09,950
there anyone who would like to share an

00:32:08,540 --> 00:32:11,480
experience right here I mean about

00:32:09,950 --> 00:32:14,030
anything about PyCon about your

00:32:11,480 --> 00:32:15,500
experience using Python something

00:32:14,030 --> 00:32:19,310
because well we've got this room

00:32:15,500 --> 00:32:26,560
nothing's going on and approximately for

00:32:19,310 --> 00:32:26,560
next 45 minutes people something

00:32:27,009 --> 00:32:37,840
Tommy did that's something to say no

00:32:31,169 --> 00:32:43,859
okay so I can tell about myself

00:32:37,840 --> 00:32:43,859
definitely I mean I've been doing yes

00:32:44,830 --> 00:32:48,549
summary of what

00:32:47,080 --> 00:32:52,799
summary of what I was saying I was just

00:32:48,549 --> 00:32:55,510
trying good it was already in a summary

00:32:52,799 --> 00:32:57,429
so we were just trying to find out I

00:32:55,510 --> 00:33:00,010
mean how people like the conference and

00:32:57,429 --> 00:33:08,500
what's going on and what's going on over

00:33:00,010 --> 00:33:10,270
here so we got one feedback that it's

00:33:08,500 --> 00:33:11,830
it's the performance has dipped compared

00:33:10,270 --> 00:33:14,320
to last time so just trying to find out

00:33:11,830 --> 00:33:17,580
why any more views on on on whether you

00:33:14,320 --> 00:33:22,600
liked it how much you liked it no views

00:33:17,580 --> 00:33:24,490
like ice sue need we are Kakeru soon

00:33:22,600 --> 00:33:29,620
either we are Sony I have a CAG a rubber

00:33:24,490 --> 00:33:31,830
buckaroo it's neutral I mean compared to

00:33:29,620 --> 00:33:31,830
what

00:33:40,309 --> 00:33:44,000
we have already had that discussion one

00:33:42,110 --> 00:33:46,240
point of view we have I'm trying to get

00:33:44,000 --> 00:33:46,240
to work

00:33:47,710 --> 00:33:53,270
speak of people it's a general

00:33:49,549 --> 00:33:55,490
discussion it's I was just sitting over

00:33:53,270 --> 00:33:58,309
there getting bored I thought let's

00:33:55,490 --> 00:33:59,990
let's have a discussion so how many

00:33:58,309 --> 00:34:02,419
people are associated with some sort of

00:33:59,990 --> 00:34:05,830
Python user group or community in their

00:34:02,419 --> 00:34:13,250
own cities villages schools colleges

00:34:05,830 --> 00:34:16,909
companies okay one two three four okay

00:34:13,250 --> 00:34:18,440
so you guys is it your first conference

00:34:16,909 --> 00:34:22,480
by any chance how many people have come

00:34:18,440 --> 00:34:25,220
to a conference for the first time okay

00:34:22,480 --> 00:34:26,450
why can't first time any sort of like oh

00:34:25,220 --> 00:34:28,340
this this kind of a conference where

00:34:26,450 --> 00:34:29,960
where where things are where things are

00:34:28,340 --> 00:34:35,000
completely managed by volunteers no

00:34:29,960 --> 00:34:37,340
corporation involved like quite a few

00:34:35,000 --> 00:34:40,609
hands so let me tell you one thing like

00:34:37,340 --> 00:34:43,250
like he said that I mean the quality of

00:34:40,609 --> 00:34:44,570
talks has dipped right but what do you

00:34:43,250 --> 00:34:46,940
expect from a conference when you come

00:34:44,570 --> 00:34:48,169
to one like what are you expectations

00:34:46,940 --> 00:34:49,879
when you when you show up women when you

00:34:48,169 --> 00:34:53,619
showed up yesterday in the morning what

00:34:49,879 --> 00:34:53,619
were you expecting from the talks

00:34:54,580 --> 00:34:57,920
definitely not tutorial talk type talks

00:34:56,869 --> 00:35:00,170
what are you expecting from the

00:34:57,920 --> 00:35:02,119
conference in general the whole thing

00:35:00,170 --> 00:35:03,830
what what do you think the conference is

00:35:02,119 --> 00:35:07,420
all about about I mean it's it's talks

00:35:03,830 --> 00:35:09,650
and it's workshops and its sponsors for

00:35:07,420 --> 00:35:13,570
sure but what else is there in the

00:35:09,650 --> 00:35:17,060
conference sharing experience with whom

00:35:13,570 --> 00:35:18,500
the audience so that's one person

00:35:17,060 --> 00:35:20,859
sharing his experience with the audience

00:35:18,500 --> 00:35:20,859
right

00:35:21,190 --> 00:35:23,750
basically networking in amongst the

00:35:23,060 --> 00:35:26,290
Python community

00:35:23,750 --> 00:35:26,290
exactly

00:35:27,990 --> 00:35:32,350
collaborate with people you reach will

00:35:29,950 --> 00:35:34,230
meet virtually only however like we are

00:35:32,350 --> 00:35:37,840
a bunch of people who are sitting here

00:35:34,230 --> 00:35:42,040
trying to sleep while there are thousand

00:35:37,840 --> 00:35:44,290
people out there who are there who have

00:35:42,040 --> 00:35:46,240
done possibly most of them have done

00:35:44,290 --> 00:35:49,360
amazing things and we are here trying to

00:35:46,240 --> 00:35:50,560
get charged up wasting our time I mean

00:35:49,360 --> 00:35:54,580
and I'm not accusing you of anything but

00:35:50,560 --> 00:35:56,080
however that's sort of bugs me like I

00:35:54,580 --> 00:35:57,700
mean we can sit here and we can call

00:35:56,080 --> 00:35:59,410
that a cell of our conference to you

00:35:57,700 --> 00:36:00,880
talks by a car to you but like what is

00:35:59,410 --> 00:36:04,620
the effort that we are putting in to

00:36:00,880 --> 00:36:04,620
make it awesome ourselves

00:36:10,130 --> 00:36:15,860
good excellent but that's the only

00:36:12,500 --> 00:36:17,000
participant I mean I'm like just trying

00:36:15,860 --> 00:36:19,910
to have a conversation here guys

00:36:17,000 --> 00:36:27,020
I mean if you're too bored just walk out

00:36:19,910 --> 00:36:28,970
silently so just one general request as

00:36:27,020 --> 00:36:31,280
in from somebody who's been attending

00:36:28,970 --> 00:36:33,470
Python for a very long time the best

00:36:31,280 --> 00:36:35,480
experience is in talking to people I

00:36:33,470 --> 00:36:38,150
have related this experience to

00:36:35,480 --> 00:36:39,560
everybody I have met and trust me the

00:36:38,150 --> 00:36:41,270
people I have met they have helped me

00:36:39,560 --> 00:36:44,620
not only personally and professionally

00:36:41,270 --> 00:36:47,210
on on in you know they had developed me

00:36:44,620 --> 00:36:50,660
increase my intellectual level like

00:36:47,210 --> 00:36:52,160
trying trying to understand and help me

00:36:50,660 --> 00:36:54,620
get out of technical difficulties and

00:36:52,160 --> 00:36:57,020
I've made good amount of friends over

00:36:54,620 --> 00:36:59,000
here so that is what PyCon is as far as

00:36:57,020 --> 00:37:02,300
I'm concerned and I hope you'll find

00:36:59,000 --> 00:37:06,580
good people to you know network with and

00:37:02,300 --> 00:37:09,230
I mean next couple of hours you won't

00:37:06,580 --> 00:37:13,600
spend sitting alone just trying to slack

00:37:09,230 --> 00:37:13,600

YouTube URL: https://www.youtube.com/watch?v=C2FuPxyip2A


