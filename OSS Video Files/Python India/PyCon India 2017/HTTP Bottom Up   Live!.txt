Title: HTTP Bottom Up   Live!
Publication date: 2017-12-27
Playlist: PyCon India 2017
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:04,380
will better programs so this stuff is

00:00:02,669 --> 00:00:06,150
about understanding everything that

00:00:04,380 --> 00:00:11,330
happens behind the scenes of your web

00:00:06,150 --> 00:00:11,330
framework so let me start with

00:00:11,929 --> 00:00:16,519
discussing between the Internet and the

00:00:14,190 --> 00:00:16,519
World Wide Web

00:00:17,390 --> 00:00:27,449
so is any difference between Internet

00:00:20,970 --> 00:00:28,349
and web app re so can someone answer me

00:00:27,449 --> 00:00:31,160
what's the difference between the

00:00:28,349 --> 00:00:31,160
internet and worldwide web

00:00:34,190 --> 00:00:47,780
thank you so much think about a world

00:00:41,760 --> 00:00:47,780
the verb is URLs okay so what make

00:00:47,870 --> 00:00:53,250
whatever really unique is real powerful

00:00:50,670 --> 00:00:55,710
is identify any resource anywhere in the

00:00:53,250 --> 00:00:58,020
world in the world with this symbol

00:00:55,710 --> 00:00:59,430
unique string okay everything in the

00:00:58,020 --> 00:01:00,989
world can get a unique string that you

00:00:59,430 --> 00:01:02,100
can represent with okay you have an

00:01:00,989 --> 00:01:03,690
image you have a document you have

00:01:02,100 --> 00:01:06,780
anything okay you can just represent up

00:01:03,690 --> 00:01:11,850
with a unique a string that's called a

00:01:06,780 --> 00:01:15,180
unit URL Uniform Resource locator okay

00:01:11,850 --> 00:01:19,650
so so that's a URL ok so now how it

00:01:15,180 --> 00:01:22,290
works is so curl is a program that

00:01:19,650 --> 00:01:23,610
actually used to request something just

00:01:22,290 --> 00:01:25,320
like it's like just like your browser

00:01:23,610 --> 00:01:28,229
but what you're using from the command

00:01:25,320 --> 00:01:30,540
line to request something lets me into

00:01:28,229 --> 00:01:40,740
at all so you're making the HTTP request

00:01:30,540 --> 00:01:47,970
to think web page so that responds back

00:01:40,740 --> 00:01:50,030
with some response here okay now so

00:01:47,970 --> 00:01:55,100
let's try to actually understand what

00:01:50,030 --> 00:01:55,100
goes how actually response works

00:01:59,250 --> 00:02:03,550
so with the refactor shows what actually

00:02:01,960 --> 00:02:06,070
going behind the scene so you've making

00:02:03,550 --> 00:02:09,700
a request to exceed we've been slashed

00:02:06,070 --> 00:02:12,130
yet so what happens is just like we've

00:02:09,700 --> 00:02:14,320
seen the email protocol what it does is

00:02:12,130 --> 00:02:25,270
it actually sends a request so it

00:02:14,320 --> 00:02:27,640
connects to so we said girl let me yeah

00:02:25,270 --> 00:02:30,340
so you're trying to connect to achieve

00:02:27,640 --> 00:02:32,830
install slash get so trying to make a

00:02:30,340 --> 00:02:37,030
request to that URL so what it does it

00:02:32,830 --> 00:02:38,860
first identify stripy edits by resolving

00:02:37,030 --> 00:02:41,170
that and then it connects to that on

00:02:38,860 --> 00:02:43,630
port 80 port 80 is 80 is a pot that's

00:02:41,170 --> 00:02:45,250
used for HTTP by default and then it

00:02:43,630 --> 00:02:46,930
sends all those texts that we have seen

00:02:45,250 --> 00:02:51,040
above there and then gets this response

00:02:46,930 --> 00:02:52,960
back so if you see an HTTP and that's

00:02:51,040 --> 00:02:54,430
all that happens it is nothing more that

00:02:52,960 --> 00:02:56,620
happens when you send any request okay

00:02:54,430 --> 00:03:00,130
so you type something in a browser on

00:02:56,620 --> 00:03:02,140
this all that happens so it writes those

00:03:00,130 --> 00:03:04,810
four lines to the server and server

00:03:02,140 --> 00:03:06,280
responds with these 10 lines and the

00:03:04,810 --> 00:03:08,500
browser displace it what is that

00:03:06,280 --> 00:03:11,500
so if you see what is the client is

00:03:08,500 --> 00:03:13,930
anywhere the first line they get that's

00:03:11,500 --> 00:03:16,780
HTTP method followed by the URL that you

00:03:13,930 --> 00:03:19,300
are trying to request followed by HTTP

00:03:16,780 --> 00:03:21,160
version and a set of key value pairs

00:03:19,300 --> 00:03:23,080
name value pairs indicating the high

00:03:21,160 --> 00:03:24,550
debts so what's the host user agent and

00:03:23,080 --> 00:03:26,050
then what all it accepts and all that

00:03:24,550 --> 00:03:28,480
and the server responds not saying that

00:03:26,050 --> 00:03:34,780
to our okay that means success and these

00:03:28,480 --> 00:03:37,480
are all the headers that are there so so

00:03:34,780 --> 00:03:41,650
let me so now can you actually send a

00:03:37,480 --> 00:03:44,400
request by hand okay just to get a feel

00:03:41,650 --> 00:03:49,090
of what goes behind the scenes okay so

00:03:44,400 --> 00:03:51,610
let's do one thing what I'm going to do

00:03:49,090 --> 00:03:54,310
is let catch- see basically sends

00:03:51,610 --> 00:03:55,840
carriage return line feed so slash are

00:03:54,310 --> 00:03:59,709
slash in character or forgiving a new

00:03:55,840 --> 00:04:01,600
line so that is good so HDPE Bendall is

00:03:59,709 --> 00:04:03,150
the site that want to connect and port

00:04:01,600 --> 00:04:09,120
80 okay

00:04:03,150 --> 00:04:13,150
want to get slash get

00:04:09,120 --> 00:04:15,160
HTTP what okay

00:04:13,150 --> 00:04:21,579
and you'd say host what hosts you learn

00:04:15,160 --> 00:04:23,910
to connect to you can give any headers

00:04:21,579 --> 00:04:26,919
that you want but when some cells have

00:04:23,910 --> 00:04:29,370
meaning for example I want the

00:04:26,919 --> 00:04:33,910
connection to be closed after this is

00:04:29,370 --> 00:04:35,800
its typo but let's see here that okay if

00:04:33,910 --> 00:04:37,840
the condition close that close the

00:04:35,800 --> 00:04:40,919
connection cell response back saying

00:04:37,840 --> 00:04:40,919
that too hard okay

00:04:44,680 --> 00:04:51,430
see it responds back with all this

00:04:46,690 --> 00:05:00,900
information okay I started eleven ten I

00:04:51,430 --> 00:05:09,070
started 11th and it's 11:30 so anyway so

00:05:00,900 --> 00:05:10,930
so that's how that's how this thing work

00:05:09,070 --> 00:05:12,460
okay now let's try to understand how the

00:05:10,930 --> 00:05:14,289
actual browser work right so we've seen

00:05:12,460 --> 00:05:16,450
how to send a request to a server but

00:05:14,289 --> 00:05:20,620
can you actually so we try to play a

00:05:16,450 --> 00:05:22,150
role of a client here right so time see

00:05:20,620 --> 00:05:24,340
connect to a server and see how this our

00:05:22,150 --> 00:05:26,350
response back now can you actually play

00:05:24,340 --> 00:05:27,850
the role of a server okay so the nice

00:05:26,350 --> 00:05:31,570
thing about NC is the connection isn't

00:05:27,850 --> 00:05:34,510
at any port okay so let's listen at port

00:05:31,570 --> 00:05:36,430
8000 here and now what's happening is

00:05:34,510 --> 00:05:39,870
that the program here is actually the

00:05:36,430 --> 00:05:44,440
server now let's go to our browser and

00:05:39,870 --> 00:05:45,880
say 8,000 let's connect to 8,000 so

00:05:44,440 --> 00:05:48,479
browser actually sends a request to us

00:05:45,880 --> 00:05:52,000
so browser send a request to our server

00:05:48,479 --> 00:05:54,190
okay can you see that so now we run a

00:05:52,000 --> 00:05:57,070
program and see is a basically vs.

00:05:54,190 --> 00:05:58,750
program that takes your input and then

00:05:57,070 --> 00:06:00,640
you basically puts you in the loop so

00:05:58,750 --> 00:06:03,010
that you can respond back at the server

00:06:00,640 --> 00:06:05,260
as okay now you won't respond back

00:06:03,010 --> 00:06:07,750
saying that hello world

00:06:05,260 --> 00:06:10,630
okay so what you need to do is the

00:06:07,750 --> 00:06:14,669
server responds back with that this

00:06:10,630 --> 00:06:20,979
version number status code followed by

00:06:14,669 --> 00:06:25,620
you can have content type

00:06:20,979 --> 00:06:31,120
text slash play okay and then just

00:06:25,620 --> 00:06:33,430
followed by hello world okay let's see

00:06:31,120 --> 00:06:37,330
what the browser is doing cause it's got

00:06:33,430 --> 00:06:38,620
the hello world you see that so what

00:06:37,330 --> 00:06:40,060
we're doing is basically playing the

00:06:38,620 --> 00:06:42,639
role of a server trying to see what

00:06:40,060 --> 00:06:44,469
happens when a browser requests it so

00:06:42,639 --> 00:06:49,779
browser sends a request to a program

00:06:44,469 --> 00:06:51,669
which happened to be NC and it sent all

00:06:49,779 --> 00:06:54,069
the headers here okay so if you look at

00:06:51,669 --> 00:06:55,509
the headers

00:06:54,069 --> 00:06:57,219
that's a hostname and then the

00:06:55,509 --> 00:06:58,779
connection keep alive user agent what's

00:06:57,219 --> 00:07:01,539
a browser that's actually sending as a

00:06:58,779 --> 00:07:03,340
request and then it can accept HT HTML

00:07:01,539 --> 00:07:04,479
ID blah blah blah all the other things

00:07:03,340 --> 00:07:08,400
etcetera etcetera

00:07:04,479 --> 00:07:11,289
okay so the only communication between

00:07:08,400 --> 00:07:15,330
the browser and the server is just

00:07:11,289 --> 00:07:15,330
through there'sthere's nothing more okay

00:07:18,389 --> 00:07:25,089
okay this is so it's actually says HTTP

00:07:21,789 --> 00:07:41,610
1.1 so it says client says that it can

00:07:25,089 --> 00:07:44,020
understand its TP 1.1 yes is that yeah

00:07:41,610 --> 00:07:45,639
No so you know and she doesn't

00:07:44,020 --> 00:07:48,279
understand that and she's basically a

00:07:45,639 --> 00:07:50,229
program that is socket program

00:07:48,279 --> 00:07:51,610
now it gets whatever it gets it

00:07:50,229 --> 00:07:55,659
disrespects it it doesn't do anything

00:07:51,610 --> 00:07:57,249
more it's up to us to scratch this

00:07:55,659 --> 00:08:31,629
hardened email program there as well

00:07:57,249 --> 00:08:33,310
okay no so at the server so when you

00:08:31,629 --> 00:08:35,669
write in the socket program socket the

00:08:33,310 --> 00:08:41,919
program listens at any port okay

00:08:35,669 --> 00:08:43,410
so what happens is any requests come

00:08:41,919 --> 00:08:48,100
into that port is given to that program

00:08:43,410 --> 00:08:53,079
okay I'm taking questions in line so can

00:08:48,100 --> 00:08:56,529
you like to take all the time yeah sure

00:08:53,079 --> 00:08:58,120
so that's how that works okay so in send

00:08:56,529 --> 00:09:00,430
a browser that's all really happens okay

00:08:58,120 --> 00:09:01,660
is that clear right there's nothing

00:09:00,430 --> 00:09:04,300
fancy happening the browser sends is

00:09:01,660 --> 00:09:05,709
like for ten lines of text and makes our

00:09:04,300 --> 00:09:07,149
response work with those 10 mins effects

00:09:05,709 --> 00:09:09,010
back and then the browser interprets

00:09:07,149 --> 00:09:11,139
that based on the head and cutter bear

00:09:09,010 --> 00:09:15,040
okay I said content typist text slash

00:09:11,139 --> 00:09:17,290
plane so it has fired back as as a plain

00:09:15,040 --> 00:09:21,120
text if I say text as HTML or actually

00:09:17,290 --> 00:09:23,680
show it as bold okay for example if I

00:09:21,120 --> 00:09:24,639
reload the page again so that won't work

00:09:23,680 --> 00:09:30,630
okay

00:09:24,639 --> 00:09:30,630
I reload the page again so sorry

00:09:31,390 --> 00:09:37,300
that were sent here now so it's HTTP

00:09:34,600 --> 00:09:43,540
flash 1.1 200 okay

00:09:37,300 --> 00:09:47,730
and then say content type text slash

00:09:43,540 --> 00:09:47,730
HTML here if I say

00:09:52,810 --> 00:09:57,700
they actually show that as a stimulus

00:09:55,630 --> 00:09:59,860
board so it looks at the content type

00:09:57,700 --> 00:10:02,260
basically looks at all the headers and

00:09:59,860 --> 00:10:04,510
then decides how to represent that and

00:10:02,260 --> 00:10:07,930
what to do in the data so HTTP is really

00:10:04,510 --> 00:10:09,750
very simple protocol the beauty of the

00:10:07,930 --> 00:10:14,350
world wide web is in the simple protocol

00:10:09,750 --> 00:10:16,360
so all information that it needs to send

00:10:14,350 --> 00:10:17,980
is it's either part of the request

00:10:16,360 --> 00:10:18,550
headers are the response headers nothing

00:10:17,980 --> 00:10:20,970
more okay

00:10:18,550 --> 00:10:23,440
HDPE stateless what does it mean is

00:10:20,970 --> 00:10:25,630
cirno doesn't really remember who you

00:10:23,440 --> 00:10:27,970
are every time you come and saying shake

00:10:25,630 --> 00:10:30,310
hand and say hey I'm so-and-so you can't

00:10:27,970 --> 00:10:31,510
say hey I seen you like ten days ago so

00:10:30,310 --> 00:10:32,529
doesn't really remember anything doesn't

00:10:31,510 --> 00:10:34,210
have any memory okay

00:10:32,529 --> 00:10:36,130
so all the requests in HTTP are

00:10:34,210 --> 00:10:37,089
stateless so you send a request and all

00:10:36,130 --> 00:10:38,770
the information that you need to send

00:10:37,089 --> 00:10:39,910
along with it you have to actually send

00:10:38,770 --> 00:10:42,130
as part of your request headers and

00:10:39,910 --> 00:10:43,839
server responds back and it gives all

00:10:42,130 --> 00:10:45,880
the information in the response headers

00:10:43,839 --> 00:10:47,380
okay so that that simplicity really

00:10:45,880 --> 00:10:48,580
makes it actually be more powerful okay

00:10:47,380 --> 00:10:49,960
a lot of frame when you use the

00:10:48,580 --> 00:10:51,130
frameworks a lot of hide all these

00:10:49,960 --> 00:10:53,700
details and you really don't really

00:10:51,130 --> 00:10:57,190
understand for example if you look at

00:10:53,700 --> 00:10:59,710
the headers there is a request I'm

00:10:57,190 --> 00:11:00,940
saying that except encoding a zip that

00:10:59,710 --> 00:11:04,050
means the client is telling this arrow

00:11:00,940 --> 00:11:07,060
that hey I am capable of understanding

00:11:04,050 --> 00:11:08,560
data that's encoding sees it so if you

00:11:07,060 --> 00:11:10,630
can please compress the data and send it

00:11:08,560 --> 00:11:13,600
to me so that I don't have to wait for

00:11:10,630 --> 00:11:15,160
too long to receive all the things okay

00:11:13,600 --> 00:11:19,690
all these also saying that I should

00:11:15,160 --> 00:11:21,430
language this is trying to also tell the

00:11:19,690 --> 00:11:23,800
server that it can actually accept the

00:11:21,430 --> 00:11:24,310
different languages for example it can

00:11:23,800 --> 00:11:30,520
accept

00:11:24,310 --> 00:11:32,620
English with 0.8 wait English GB is

00:11:30,520 --> 00:11:37,330
basically British English with 0.6

00:11:32,620 --> 00:11:41,500
Telugu at the rate of 0.4 okay so if it

00:11:37,330 --> 00:11:44,410
only has Hindi Indian Telugu not English

00:11:41,500 --> 00:11:46,209
then the actual respond back with Telugu

00:11:44,410 --> 00:11:48,940
because that's the most preferred option

00:11:46,209 --> 00:11:49,930
for the time that I have okay so it can

00:11:48,940 --> 00:11:52,510
actually do this kind of content

00:11:49,930 --> 00:11:53,980
negotiation so all these things when you

00:11:52,510 --> 00:11:55,000
look at internationalization of anything

00:11:53,980 --> 00:11:58,120
like that all these things actually

00:11:55,000 --> 00:12:01,780
happen through these things okay is that

00:11:58,120 --> 00:12:04,600
clear so there's nothing else in HTTP

00:12:01,780 --> 00:12:05,720
other than just this plain name value

00:12:04,600 --> 00:12:07,790
pairs

00:12:05,720 --> 00:12:09,560
that part of a request and then the part

00:12:07,790 --> 00:12:13,819
the things that are part of the response

00:12:09,560 --> 00:12:17,360
okay now let me quickly so that's how

00:12:13,819 --> 00:12:19,970
things work okay but now how do you

00:12:17,360 --> 00:12:27,680
write my programs okay sorry

00:12:19,970 --> 00:12:28,670
so when you write a program so you can

00:12:27,680 --> 00:12:32,259
write us how to program that will

00:12:28,670 --> 00:12:34,519
actually read the response read the

00:12:32,259 --> 00:12:36,980
request and then respond back but that'd

00:12:34,519 --> 00:12:41,089
be too cumbersome okay so what people

00:12:36,980 --> 00:12:42,470
have done is people have have different

00:12:41,089 --> 00:12:45,259
ways of writing these programs you write

00:12:42,470 --> 00:12:46,519
an CJ program or fast see here the

00:12:45,259 --> 00:12:47,839
different ways of writing these programs

00:12:46,519 --> 00:12:49,850
you thought really worrying about and

00:12:47,839 --> 00:12:51,019
networking parts of it but then there

00:12:49,850 --> 00:12:53,529
are multiple ways you can actually run

00:12:51,019 --> 00:12:55,930
these things so what people have done is

00:12:53,529 --> 00:12:58,759
created something called WSGI

00:12:55,930 --> 00:13:01,160
which is a python standard for writing

00:12:58,759 --> 00:13:05,319
web applications okay so let's look at

00:13:01,160 --> 00:13:05,319
what WACA looks like

00:13:14,880 --> 00:13:28,420
so so this is a sample program

00:13:24,310 --> 00:13:30,339
so what it does is in Python waz a

00:13:28,420 --> 00:13:31,899
simple Python function that takes in

00:13:30,339 --> 00:13:34,149
environment and destroyed response that

00:13:31,899 --> 00:13:36,970
explain what that is okay so the

00:13:34,149 --> 00:13:39,579
protocol is in WSGI you call start

00:13:36,970 --> 00:13:41,560
response with the headers and the status

00:13:39,579 --> 00:13:44,290
code as soon as it is ready and then you

00:13:41,560 --> 00:13:45,339
send that spawns back as a list or a

00:13:44,290 --> 00:13:47,680
terrible

00:13:45,339 --> 00:13:50,699
so guys without really worrying about

00:13:47,680 --> 00:13:53,649
the socket networking

00:13:50,699 --> 00:13:55,990
it lets you focus on building your

00:13:53,649 --> 00:13:57,730
application so then on n1 will actually

00:13:55,990 --> 00:14:00,699
have all the headers that are part of

00:13:57,730 --> 00:14:02,410
the request and then start response is

00:14:00,699 --> 00:14:07,750
basically start sending their response

00:14:02,410 --> 00:14:09,190
ok now I basically used a built-in HCB

00:14:07,750 --> 00:14:13,269
said well part of thread library to run

00:14:09,190 --> 00:14:14,440
this ok but if you see that's how it's

00:14:13,269 --> 00:14:15,610
actually required to run anywhere

00:14:14,440 --> 00:14:18,990
program in Python

00:14:15,610 --> 00:14:21,040
now things becomes complicated because

00:14:18,990 --> 00:14:24,040
let's say I want to write a simple add

00:14:21,040 --> 00:14:30,579
program which has two URLs slash which

00:14:24,040 --> 00:14:34,480
is a home page and then a home page and

00:14:30,579 --> 00:14:39,160
a place to add two numbers ok now I

00:14:34,480 --> 00:14:41,829
actually have two two URLs how do you

00:14:39,160 --> 00:14:48,820
actually achieve that here so what you

00:14:41,829 --> 00:14:50,709
can do is so you end up doing is you

00:14:48,820 --> 00:14:53,110
take the environment from the

00:14:50,709 --> 00:14:55,390
environment you take the path ok that's

00:14:53,110 --> 00:14:57,760
how it's available and then read slash

00:14:55,390 --> 00:15:02,649
do this if it's a slash add then do it

00:14:57,760 --> 00:15:05,769
if not say it's 4.4.4 is that ok so if

00:15:02,649 --> 00:15:08,050
you look at the bare-bones WACA what you

00:15:05,769 --> 00:15:09,069
do is you look at the path variable and

00:15:08,050 --> 00:15:10,329
then basically make a decision about

00:15:09,069 --> 00:15:14,139
what to do about it

00:15:10,329 --> 00:15:17,889
ok but that can get cumbersome because

00:15:14,139 --> 00:15:23,019
you can have too many URLs and so it is

00:15:17,889 --> 00:15:26,790
that vehicle in Turkey ok right you but

00:15:23,019 --> 00:15:29,220
if you actually see that's how if

00:15:26,790 --> 00:15:30,960
start from Bayer wci that circle

00:15:29,220 --> 00:15:35,550
actually write these kind of our

00:15:30,960 --> 00:15:38,760
programs now this is where the web

00:15:35,550 --> 00:15:42,810
frameworks come Heidi so what you can do

00:15:38,760 --> 00:15:47,340
is can you actually kind of write some

00:15:42,810 --> 00:15:50,070
tools to simplify this for us okay for

00:15:47,340 --> 00:15:58,020
example lack of time I thought I'd

00:15:50,070 --> 00:16:01,880
actually do it right away here but so so

00:15:58,020 --> 00:16:01,880
what I'll do is I'm sorry

00:16:02,750 --> 00:16:20,610
so let's look at the whe I had to so so

00:16:17,010 --> 00:16:23,700
here to see what's happening is it has

00:16:20,610 --> 00:16:25,800
multiple conditions etc so instead of

00:16:23,700 --> 00:16:27,870
doing that what web films really help us

00:16:25,800 --> 00:16:31,320
doing it as a report some kind of tools

00:16:27,870 --> 00:16:36,810
to make the job easier often what they

00:16:31,320 --> 00:16:51,500
do is kind of hidden from us okay so let

00:16:36,810 --> 00:16:51,500
me say add what Frank okay so so

00:16:53,490 --> 00:17:00,240
so what I'm doing is keeping a global

00:16:56,160 --> 00:17:04,470
routes okay and then a drought what it

00:17:00,240 --> 00:17:06,480
does it keeps the mapping from path to

00:17:04,470 --> 00:17:15,390
the function in a global variable and

00:17:06,480 --> 00:17:20,060
you can actually have a dispatch part so

00:17:15,390 --> 00:17:26,030
what you do is for P gamma funk and

00:17:20,060 --> 00:17:26,030
routes being equal to part

00:17:29,830 --> 00:17:36,340
so what you're trying to do here is

00:17:33,300 --> 00:17:37,960
trying to dispatch based on the part

00:17:36,340 --> 00:17:41,590
that you're getting so instead of doing

00:17:37,960 --> 00:17:57,610
all of it here you say dispatch the part

00:17:41,590 --> 00:18:02,710
okay now let me explain what I'm doing

00:17:57,610 --> 00:18:04,510
here so what I'm trying to do here is uh

00:18:02,710 --> 00:18:05,260
if you actually find the part that

00:18:04,510 --> 00:18:07,750
you're looking for

00:18:05,260 --> 00:18:09,130
you send a dog to hold okay and then

00:18:07,750 --> 00:18:11,500
call that function otherwise you say is

00:18:09,130 --> 00:18:13,990
heart fun and then you have all these

00:18:11,500 --> 00:18:23,880
URLs here the two URLs here so you can

00:18:13,990 --> 00:18:33,900
what you can do is a route slash will be

00:18:23,880 --> 00:18:36,910
rendered home and a drought to slash ad

00:18:33,900 --> 00:18:38,170
will actually go to so what you're doing

00:18:36,910 --> 00:18:42,340
is instead of actually having that kind

00:18:38,170 --> 00:18:45,010
of conditions there in basically I did

00:18:42,340 --> 00:18:49,660
functions and then some have the kind of

00:18:45,010 --> 00:18:51,070
routing specified so that Li we can take

00:18:49,660 --> 00:18:52,720
care of those things that's what they

00:18:51,070 --> 00:18:54,430
typically aware of that use would

00:18:52,720 --> 00:18:58,600
actually help you doing it okay so let's

00:18:54,430 --> 00:19:03,060
try running this now oops I didn't

00:18:58,600 --> 00:19:03,060
actually add the other one select me

00:19:05,809 --> 00:19:16,700
let me add so not calling the sorry so

00:19:15,469 --> 00:19:18,950
what we're doing is basically starting

00:19:16,700 --> 00:19:21,849
an HTTP server at the end of it let me

00:19:18,950 --> 00:19:21,849
run this

00:19:32,190 --> 00:19:36,980
oops

00:19:34,140 --> 00:19:36,980
I guess

00:19:38,150 --> 00:19:40,870
okay

00:19:43,480 --> 00:19:53,289
so let me run with jewnicorn so that's

00:19:45,850 --> 00:19:54,850
under running and activating my

00:19:53,289 --> 00:20:01,029
virtually any which actually has that

00:19:54,850 --> 00:20:02,649
okay jewnicorn yes yeah I had that's a

00:20:01,029 --> 00:20:06,700
web server that actually runs that okay

00:20:02,649 --> 00:20:11,950
so let's starts running on this port so

00:20:06,700 --> 00:20:13,409
if I look at your curl oops something

00:20:11,950 --> 00:20:16,870
went wrong

00:20:13,409 --> 00:20:20,169
sorry I guess some missed something here

00:20:16,870 --> 00:20:29,279
this patch should actually need the

00:20:20,169 --> 00:20:29,279
start response sorry for that okay

00:20:32,540 --> 00:20:36,830
I guess let's pass the functions

00:20:35,030 --> 00:20:38,000
actually here so what I'm trying to do

00:20:36,830 --> 00:20:40,670
here is see if can actually build a

00:20:38,000 --> 00:20:45,070
simple web framework that we could

00:20:40,670 --> 00:20:45,070
actually use in that application okay

00:20:47,500 --> 00:20:59,630
sorry guess this we're almost done

00:20:53,960 --> 00:21:04,010
okay the function actually gets anyone

00:20:59,630 --> 00:21:06,380
okay let me explain what I did so what

00:21:04,010 --> 00:21:10,550
I'm trying to do is instead of really

00:21:06,380 --> 00:21:13,010
worrying about how to do if conditions

00:21:10,550 --> 00:21:13,910
and all that dispatching manually so

00:21:13,010 --> 00:21:15,080
this is let's say this is your

00:21:13,910 --> 00:21:18,170
application program you write your

00:21:15,080 --> 00:21:19,820
functions and then specify the routes

00:21:18,170 --> 00:21:30,860
and then that should take care of

00:21:19,820 --> 00:21:35,170
routing it appropriately so when

00:21:30,860 --> 00:21:35,170
something wrong I guess

00:21:38,450 --> 00:21:42,000
sorry I'm returning it here right

00:21:41,640 --> 00:21:52,620
already

00:21:42,000 --> 00:21:55,620
oh I'm sorry yeah thanks for that yeah

00:21:52,620 --> 00:21:57,960
so home base is from will come here when

00:21:55,620 --> 00:22:04,170
you look at the add function here what

00:21:57,960 --> 00:22:07,500
we are doing is it is it gives the

00:22:04,170 --> 00:22:09,930
result so slash add that says the result

00:22:07,500 --> 00:22:13,200
is what hit okay so basically have some

00:22:09,930 --> 00:22:15,660
kind of web framework which you specify

00:22:13,200 --> 00:22:19,170
the routes like that and then that takes

00:22:15,660 --> 00:22:26,760
care of running it okay so if you just

00:22:19,170 --> 00:22:30,330
for completeness sake example start so

00:22:26,760 --> 00:22:32,160
you could actually have so I have a

00:22:30,330 --> 00:22:34,770
small simple web framework which is

00:22:32,160 --> 00:22:36,630
written just to show how that thing

00:22:34,770 --> 00:22:38,790
actually works and the examples

00:22:36,630 --> 00:22:45,150
repository and actually bottom up okay

00:22:38,790 --> 00:22:47,010
so that's how yeah so that's how things

00:22:45,150 --> 00:22:51,510
work behind the scenes okay so let me

00:22:47,010 --> 00:22:52,980
summarize what have said so so the

00:22:51,510 --> 00:22:56,000
internet and water if they're completely

00:22:52,980 --> 00:22:58,530
different things but the world wide web

00:22:56,000 --> 00:22:59,970
internet talks about that working on the

00:22:58,530 --> 00:23:02,160
sockets and what did when he talks about

00:22:59,970 --> 00:23:03,480
the HTTP protocol URLs and all that and

00:23:02,160 --> 00:23:04,980
you have seen how to how that actually

00:23:03,480 --> 00:23:07,740
works behind the scenes the important

00:23:04,980 --> 00:23:10,110
thing to remember is HTTP everything is

00:23:07,740 --> 00:23:11,790
plaintext protocol and server the client

00:23:10,110 --> 00:23:12,990
sends everything as part of hydras and

00:23:11,790 --> 00:23:16,440
server responds back as part of the

00:23:12,990 --> 00:23:19,740
response headers and play around it play

00:23:16,440 --> 00:23:21,930
around with it look at the hazards by

00:23:19,740 --> 00:23:23,460
sending request by hand and see how what

00:23:21,930 --> 00:23:26,130
happened behind scenes hope that gives

00:23:23,460 --> 00:23:27,630
that given insights about what happens

00:23:26,130 --> 00:23:30,710
behind the scenes of your everweb

00:23:27,630 --> 00:23:30,710
framework thank you

00:23:31,960 --> 00:23:44,320
I guess I was shot by a couple of medics

00:23:34,980 --> 00:23:46,840
are you okay in time all right thank you

00:23:44,320 --> 00:23:51,780
hundred for the exciting talk now we

00:23:46,840 --> 00:23:51,780

YouTube URL: https://www.youtube.com/watch?v=Gzvn1Zwj9Sk


