Title: Python for Humans - Remix! by Kenneth Reitz
Publication date: 2013-09-05
Playlist: PyCon India 2013
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:04,799
money sorry for the delay yes there were

00:00:03,179 --> 00:00:10,349
some audio issues how is everybody doing

00:00:04,799 --> 00:00:12,000
today excellent so this is a kind of a

00:00:10,349 --> 00:00:13,830
blend of a lot of talks that I usually

00:00:12,000 --> 00:00:15,240
give because I flew all the way out here

00:00:13,830 --> 00:00:17,010
and I don't get to see all you lovely

00:00:15,240 --> 00:00:19,439
people are often i decided to try to

00:00:17,010 --> 00:00:22,500
smash as much content as possible into

00:00:19,439 --> 00:00:26,160
one talk so this is Python for humans

00:00:22,500 --> 00:00:28,560
the remix basically so hello my name is

00:00:26,160 --> 00:00:30,000
Kenneth rights I work for a company

00:00:28,560 --> 00:00:32,040
called Heroku who is sponsoring the

00:00:30,000 --> 00:00:33,960
conference and we are a really great web

00:00:32,040 --> 00:00:35,730
application company for hosting your web

00:00:33,960 --> 00:00:36,870
application so if you want to learn more

00:00:35,730 --> 00:00:38,520
about that and come talk to me

00:00:36,870 --> 00:00:41,070
afterwards and all I think I'm doing a

00:00:38,520 --> 00:00:43,230
demo in open spaces later if you want to

00:00:41,070 --> 00:00:46,079
learn more I'm also a member of the

00:00:43,230 --> 00:00:48,680
Python Software Foundation and we're

00:00:46,079 --> 00:00:51,629
going to be switching our membership

00:00:48,680 --> 00:00:53,820
design soon so in the future you'll be

00:00:51,629 --> 00:00:55,289
able to join anybody will be able to

00:00:53,820 --> 00:00:56,820
join the psf which will be really

00:00:55,289 --> 00:00:59,309
exciting so keep your eyes out for that

00:00:56,820 --> 00:01:00,989
in your future if you know who i am is

00:00:59,309 --> 00:01:03,149
probably from the open source code that

00:01:00,989 --> 00:01:05,100
i've written if you go to my github page

00:01:03,149 --> 00:01:08,369
which is at github.com / kamath rights

00:01:05,100 --> 00:01:11,720
you'll see about a 18 serious projects a

00:01:08,369 --> 00:01:14,369
lot of experimentations that i've made

00:01:11,720 --> 00:01:16,350
requests in OSX GCC installer or my two

00:01:14,369 --> 00:01:18,930
most popular projects but we're gonna

00:01:16,350 --> 00:01:23,430
get into those more in a moment so who

00:01:18,930 --> 00:01:24,689
here uses Python all right excellent so

00:01:23,430 --> 00:01:26,520
python is a really great language

00:01:24,689 --> 00:01:28,020
compared to a lot of other languages at

00:01:26,520 --> 00:01:31,110
least I believe because of the

00:01:28,020 --> 00:01:33,540
philosophy is that Python kind of under

00:01:31,110 --> 00:01:35,670
goes and takes we all share this really

00:01:33,540 --> 00:01:38,759
dark path often if Python was in that

00:01:35,670 --> 00:01:41,610
first language we've used pole we use

00:01:38,759 --> 00:01:44,310
Java PHP ColdFusion classic asp all

00:01:41,610 --> 00:01:46,500
these horrible dark evil languages and

00:01:44,310 --> 00:01:49,170
python has a lot of philosophies that we

00:01:46,500 --> 00:01:50,820
think are a lot better than that and

00:01:49,170 --> 00:01:53,130
that a lot of these other languages

00:01:50,820 --> 00:01:53,680
don't do and if you go to into a Python

00:01:53,130 --> 00:01:57,370
interpreter

00:01:53,680 --> 00:01:59,130
type import this you will see a the Zen

00:01:57,370 --> 00:02:01,930
of Python which is basically a short

00:01:59,130 --> 00:02:05,470
collection of phrases that explains what

00:02:01,930 --> 00:02:07,590
the philosophy of Python is some of the

00:02:05,470 --> 00:02:10,360
best things that are in this document

00:02:07,590 --> 00:02:11,530
beautiful is better than ugly a lot of

00:02:10,360 --> 00:02:13,750
languages don't really care about the

00:02:11,530 --> 00:02:15,310
aesthetics of the code or the API is

00:02:13,750 --> 00:02:16,900
that people build and Python makes it

00:02:15,310 --> 00:02:20,020
really easy to make very elegant simple

00:02:16,900 --> 00:02:21,190
code it has a very simple syntax and you

00:02:20,020 --> 00:02:25,140
know tries to avoid things like

00:02:21,190 --> 00:02:27,670
unnecessary brackets by using whitespace

00:02:25,140 --> 00:02:29,800
explicit is better than implicit a lot

00:02:27,670 --> 00:02:33,220
of languages like Ruby will put a lot of

00:02:29,800 --> 00:02:34,570
emphasis on you you know like certain

00:02:33,220 --> 00:02:36,070
variables just kind of being globally

00:02:34,570 --> 00:02:38,080
available that you've never imported and

00:02:36,070 --> 00:02:39,610
things like that and it creates a lot of

00:02:38,080 --> 00:02:41,350
confusion in your writing code and

00:02:39,610 --> 00:02:44,440
Python everything that you should be

00:02:41,350 --> 00:02:47,380
imported explicitly and it had kind of

00:02:44,440 --> 00:02:48,700
extension language you can and do some

00:02:47,380 --> 00:02:51,870
magic things in Python like you can

00:02:48,700 --> 00:02:53,770
modify the Global's and the locals

00:02:51,870 --> 00:02:55,810
dictionaries but you're not supposed to

00:02:53,770 --> 00:02:58,840
do that so it's definitely it's

00:02:55,810 --> 00:03:01,239
similarly powerful but uh constraints

00:02:58,840 --> 00:03:04,709
are good simple is better than complex

00:03:01,239 --> 00:03:07,510
and complex is better than complicated

00:03:04,709 --> 00:03:09,790
if the implementation is hard to explain

00:03:07,510 --> 00:03:12,519
then it's a bad idea unless of course

00:03:09,790 --> 00:03:14,739
you r pi PI because in pi pi is

00:03:12,519 --> 00:03:16,420
impossible to understand but it's a

00:03:14,739 --> 00:03:17,470
great idea and this is the most

00:03:16,420 --> 00:03:19,480
important one that we're in touch today

00:03:17,470 --> 00:03:21,910
and it is that there should be one and

00:03:19,480 --> 00:03:24,340
preferably only one obvious way to do it

00:03:21,910 --> 00:03:25,440
to do anything a lot of languages like

00:03:24,340 --> 00:03:29,010
pearl

00:03:25,440 --> 00:03:31,320
Ben will be kind of pride themselves on

00:03:29,010 --> 00:03:35,100
expressiveness the expressiveness of

00:03:31,320 --> 00:03:36,390
language instead of the I'm having it be

00:03:35,100 --> 00:03:38,160
both simple and have there been one way

00:03:36,390 --> 00:03:40,500
to do things and that kind of extends

00:03:38,160 --> 00:03:42,630
throughout the entire language and

00:03:40,500 --> 00:03:44,790
really basically if you will go and work

00:03:42,630 --> 00:03:46,440
on the team you have to learn those the

00:03:44,790 --> 00:03:47,970
way that team works every single time

00:03:46,440 --> 00:03:49,200
you go to do a project because there's

00:03:47,970 --> 00:03:52,380
so many different ways to do simple

00:03:49,200 --> 00:03:54,360
tasks and a Python we always try to have

00:03:52,380 --> 00:03:57,900
there be a single way and that really

00:03:54,360 --> 00:03:59,130
gives us a lot of benefits so you

00:03:57,900 --> 00:04:01,260
decided that you want to learn Python

00:03:59,130 --> 00:04:03,000
the new language you're really excited

00:04:01,260 --> 00:04:04,170
welcome to paradise you finally found a

00:04:03,000 --> 00:04:07,530
language it is going to be really

00:04:04,170 --> 00:04:09,120
exciting and will you know the

00:04:07,530 --> 00:04:10,890
philosophy is kind of resonate with you

00:04:09,120 --> 00:04:12,930
these are people who really like the

00:04:10,890 --> 00:04:14,460
things that you like it turns out that's

00:04:12,930 --> 00:04:17,519
not actually true at all and it's really

00:04:14,460 --> 00:04:18,750
disappointing so let's pretend that we

00:04:17,519 --> 00:04:20,549
know Ruby I'm going to take a little

00:04:18,750 --> 00:04:21,959
piece of example code that is written in

00:04:20,549 --> 00:04:24,210
Ruby we're going to convert it to python

00:04:21,959 --> 00:04:26,760
and we're going to see what it's like so

00:04:24,210 --> 00:04:30,810
here movie first thing we do is you

00:04:26,760 --> 00:04:33,810
import the HTTP library net / HTTP and a

00:04:30,810 --> 00:04:35,310
URI module then you take your API we're

00:04:33,810 --> 00:04:37,560
going to hit the github API it with your

00:04:35,310 --> 00:04:40,980
username pretty pretty simple standard

00:04:37,560 --> 00:04:42,720
stuff so you take the URI you parse it

00:04:40,980 --> 00:04:44,460
and then you create a new HTTP

00:04:42,720 --> 00:04:48,210
connection from the host and the port

00:04:44,460 --> 00:04:50,160
from that you I that you parsed you're

00:04:48,210 --> 00:04:52,380
going to tell the connection to use SSL

00:04:50,160 --> 00:04:55,740
and then you're going to make a new get

00:04:52,380 --> 00:04:58,230
request and add basic authentication to

00:04:55,740 --> 00:04:59,850
it and then you get your response it's

00:04:58,230 --> 00:05:01,320
not the most straightforward thing in

00:04:59,850 --> 00:05:03,060
the world but there's nothing in here

00:05:01,320 --> 00:05:05,580
that's unexpected everything in here is

00:05:03,060 --> 00:05:08,730
very explicit there's nothing here that

00:05:05,580 --> 00:05:10,140
is unsurprising so the first thing you

00:05:08,730 --> 00:05:12,360
ask yourself when you're trying to write

00:05:10,140 --> 00:05:15,240
this in python is what is pythons

00:05:12,360 --> 00:05:16,860
version of the net HTTP library when you

00:05:15,240 --> 00:05:18,690
search online you'll find a multitude of

00:05:16,860 --> 00:05:21,139
answers for this you'll see HTTP lab

00:05:18,690 --> 00:05:23,840
your lab URL up to HD

00:05:21,139 --> 00:05:26,270
to you are a lip three there are many

00:05:23,840 --> 00:05:29,210
many answers and it's a little confusing

00:05:26,270 --> 00:05:30,919
so several hours later you'll find that

00:05:29,210 --> 00:05:32,449
your lip too is the most common answer

00:05:30,919 --> 00:05:33,860
to people recommend on the internet and

00:05:32,449 --> 00:05:35,870
that's recommended instead of library

00:05:33,860 --> 00:05:37,069
documentation and this is the car that

00:05:35,870 --> 00:05:38,210
you're going to have to write to do the

00:05:37,069 --> 00:05:40,999
same thing that we just didn't will be

00:05:38,210 --> 00:05:44,150
in Python we have to input you learn to

00:05:40,999 --> 00:05:46,400
you have is URL you create a request

00:05:44,150 --> 00:05:49,099
from that URL and then you creates a

00:05:46,400 --> 00:05:52,189
HTTP password manager with your default

00:05:49,099 --> 00:05:53,990
home called the password manager and the

00:05:52,189 --> 00:05:55,419
password to it with you using any

00:05:53,990 --> 00:05:58,430
password create an authentication

00:05:55,419 --> 00:06:00,050
manager from an HTTP basic

00:05:58,430 --> 00:06:02,979
authentication handle are you passing

00:06:00,050 --> 00:06:05,389
the off manager into the basic manager

00:06:02,979 --> 00:06:08,000
building open air with the auth manager

00:06:05,389 --> 00:06:09,800
then you install the opener and then we

00:06:08,000 --> 00:06:12,439
can create a handle it and then you can

00:06:09,800 --> 00:06:14,629
read the response what the hell this is

00:06:12,439 --> 00:06:16,009
ridiculous this is this complicated

00:06:14,629 --> 00:06:18,080
thing I've ever seen in my life and this

00:06:16,009 --> 00:06:21,050
took hours and hours of work it

00:06:18,080 --> 00:06:22,819
shouldn't be that hard so admit it if

00:06:21,050 --> 00:06:24,560
this was you you would probably leave

00:06:22,819 --> 00:06:26,120
Python and never come back yeah this is

00:06:24,560 --> 00:06:27,110
a language and a community that says if

00:06:26,120 --> 00:06:28,909
they're about all these really great

00:06:27,110 --> 00:06:31,159
things but then we go and look at the

00:06:28,909 --> 00:06:32,810
code like this it appears as though it's

00:06:31,159 --> 00:06:34,189
actually the opposite that is true and

00:06:32,810 --> 00:06:35,870
it's very disappointing you know because

00:06:34,189 --> 00:06:38,149
you have so much hope in this language

00:06:35,870 --> 00:06:41,839
in this community and it was so exciting

00:06:38,149 --> 00:06:44,539
and you know why there's just a bunch of

00:06:41,839 --> 00:06:45,919
hypocrites right the problem here is

00:06:44,539 --> 00:06:47,439
that it's unclear which module you're

00:06:45,919 --> 00:06:49,669
supposed to be using in the first place

00:06:47,439 --> 00:06:51,830
everyone in line seems to recommend your

00:06:49,669 --> 00:06:53,120
lib too but the docs are really bad you

00:06:51,830 --> 00:06:54,469
have to go find blog posts and stuff

00:06:53,120 --> 00:06:56,870
like that to figure out how to use the

00:06:54,469 --> 00:06:59,870
module and once you do figure it out it

00:06:56,870 --> 00:07:02,389
has a really bad API so this is a really

00:06:59,870 --> 00:07:04,159
serious problem HTTP should be as simple

00:07:02,389 --> 00:07:05,539
as a print statement the whole internet

00:07:04,159 --> 00:07:07,819
that we use today and everything that we

00:07:05,539 --> 00:07:09,190
bill is usually based around HTTP and

00:07:07,819 --> 00:07:11,440
when we have

00:07:09,190 --> 00:07:13,990
a simple way of interacting with such a

00:07:11,440 --> 00:07:16,300
common layer bit of application

00:07:13,990 --> 00:07:18,880
interaction like it causes a real

00:07:16,300 --> 00:07:21,090
problem for developers so the solution

00:07:18,880 --> 00:07:23,920
to this problem is relatively simple

00:07:21,090 --> 00:07:25,540
basically it's really important to build

00:07:23,920 --> 00:07:27,070
elegant tools to perform these tasks

00:07:25,540 --> 00:07:28,480
this is something that every developer

00:07:27,070 --> 00:07:30,040
probably has to do at some point or

00:07:28,480 --> 00:07:31,510
another there's no reason it should be

00:07:30,040 --> 00:07:34,450
so difficult for ninety percent of the

00:07:31,510 --> 00:07:37,650
users to have to do this Python needs

00:07:34,450 --> 00:07:39,940
more pragmatic packages so pragmatic

00:07:37,650 --> 00:07:42,100
means the only things sensibly and

00:07:39,940 --> 00:07:43,540
realistically in a way that is based on

00:07:42,100 --> 00:07:47,110
practical rather than theoretical

00:07:43,540 --> 00:07:49,840
considerations let's call this Python

00:07:47,110 --> 00:07:52,990
for humans so let's break it down what

00:07:49,840 --> 00:07:55,120
is HTTP a task or basically it's a

00:07:52,990 --> 00:07:57,130
fairly simple system we have a set

00:07:55,120 --> 00:07:58,930
number of methods with consistent

00:07:57,130 --> 00:08:00,850
parameters I have a couple different

00:07:58,930 --> 00:08:02,650
levels here you have had yet post page

00:08:00,850 --> 00:08:04,090
to eat stuff like that further

00:08:02,650 --> 00:08:06,490
straightforward and the all except two

00:08:04,090 --> 00:08:09,700
headers URL parameters body and from

00:08:06,490 --> 00:08:11,440
data you look to is the opposite of that

00:08:09,700 --> 00:08:13,060
it doesn't expose any of these things

00:08:11,440 --> 00:08:14,080
built in by default it doesn't have any

00:08:13,060 --> 00:08:15,910
of the different methods it doesn't

00:08:14,080 --> 00:08:17,440
support form data very well it just kind

00:08:15,910 --> 00:08:19,510
of automatically does all this stuff

00:08:17,440 --> 00:08:22,060
that you don't expect it to it's very

00:08:19,510 --> 00:08:24,120
over engineered it ignores most Apep 20

00:08:22,060 --> 00:08:28,240
the docs are honest impossible to read

00:08:24,120 --> 00:08:30,190
HTTP is actually really simple and it's

00:08:28,240 --> 00:08:33,250
just the opposite of what it should be

00:08:30,190 --> 00:08:34,780
basically I don't like this so I with

00:08:33,250 --> 00:08:36,820
the side break all requests which a lot

00:08:34,780 --> 00:08:40,060
of people like and it is supposed to be

00:08:36,820 --> 00:08:42,099
HTTP for humans so to do this exact same

00:08:40,060 --> 00:08:43,840
code with requests you just input

00:08:42,099 --> 00:08:46,480
requests with your user name password

00:08:43,840 --> 00:08:56,220
you make your get request and hit

00:08:46,480 --> 00:08:56,220
response and that's it yes thank you

00:08:56,680 --> 00:09:01,100
achievement unlocked we have a small set

00:08:59,089 --> 00:09:03,620
of methods with consistent parameters we

00:09:01,100 --> 00:09:05,930
have a get up ahead a post approach to

00:09:03,620 --> 00:09:09,139
delete and they all accept headers URL

00:09:05,930 --> 00:09:11,810
parameters in form data do this do this

00:09:09,139 --> 00:09:13,490
for everything you ever need to do the

00:09:11,810 --> 00:09:15,079
limits test is if you ever have to refer

00:09:13,490 --> 00:09:17,149
to the documentation every time I use a

00:09:15,079 --> 00:09:19,070
module then you need to either go find a

00:09:17,149 --> 00:09:20,810
new module will build a new module it

00:09:19,070 --> 00:09:23,149
makes it easier for you and other people

00:09:20,810 --> 00:09:24,440
to do the same thing and to do this I

00:09:23,149 --> 00:09:26,449
think it's really important to fit that

00:09:24,440 --> 00:09:29,870
ninety percent use case if you look at

00:09:26,449 --> 00:09:31,699
the oil to API it's really cumbersome

00:09:29,870 --> 00:09:33,680
and hard to use because they're trying

00:09:31,699 --> 00:09:36,320
to fit in every possible use case that

00:09:33,680 --> 00:09:38,240
anyone could ever have into the API and

00:09:36,320 --> 00:09:39,889
by doing that they make ninety percent

00:09:38,240 --> 00:09:42,170
of the users who just want to do simple

00:09:39,889 --> 00:09:43,910
HTTP requests and I make their lives

00:09:42,170 --> 00:09:45,320
miserable trying to sort of your bend

00:09:43,910 --> 00:09:49,760
over backwards for the other ten percent

00:09:45,320 --> 00:09:51,709
of the people an API is really all that

00:09:49,760 --> 00:09:53,449
matters in my bro's like this all the

00:09:51,709 --> 00:09:57,139
other things are secondary and I mean

00:09:53,449 --> 00:09:58,730
like performance is to security all

00:09:57,139 --> 00:10:00,920
these things are all very important but

00:09:58,730 --> 00:10:02,930
they're not nearly as important as the

00:10:00,920 --> 00:10:06,560
API itself because that's what all of

00:10:02,930 --> 00:10:08,120
your developers interact with so this is

00:10:06,560 --> 00:10:10,490
really great quote by steve jobs that i

00:10:08,120 --> 00:10:12,769
found a couple months ago he had but

00:10:10,490 --> 00:10:14,120
before he passed away but right after he

00:10:12,769 --> 00:10:16,010
passed away there were these tapes that

00:10:14,120 --> 00:10:17,779
were leaked on the internet that was

00:10:16,010 --> 00:10:19,220
like a it's a secret interview with him

00:10:17,779 --> 00:10:22,250
basically that was several hours form

00:10:19,220 --> 00:10:25,310
from 1983 before apple was really that

00:10:22,250 --> 00:10:27,560
popular and there's still a coating

00:10:25,310 --> 00:10:30,620
there so does like this Steve Jobs

00:10:27,560 --> 00:10:31,970
talking about the apple computer which

00:10:30,620 --> 00:10:33,680
again was not it was kind of like his

00:10:31,970 --> 00:10:36,139
new idea people having personal

00:10:33,680 --> 00:10:38,300
computers in their homes and his buddy

00:10:36,139 --> 00:10:39,649
said people are going to be spending two

00:10:38,300 --> 00:10:42,170
or three hours a day with these machines

00:10:39,649 --> 00:10:44,540
with these computers which is more time

00:10:42,170 --> 00:10:46,040
they spend in their car every day so

00:10:44,540 --> 00:10:47,430
software design must be given at least

00:10:46,040 --> 00:10:49,290
as much consideration

00:10:47,430 --> 00:10:51,089
that we give automobiles today if not a

00:10:49,290 --> 00:10:52,920
whole lot more I think is really

00:10:51,089 --> 00:10:54,779
important I think that really worked

00:10:52,920 --> 00:10:56,550
well for Apple they put a lot of work

00:10:54,779 --> 00:10:59,220
into all the design the software and the

00:10:56,550 --> 00:11:01,980
hardware that they built and that really

00:10:59,220 --> 00:11:03,420
worked well that's responsible for all

00:11:01,980 --> 00:11:05,490
the design cisions they've made and

00:11:03,420 --> 00:11:06,870
that's for people who spend two or three

00:11:05,490 --> 00:11:08,339
hours a day with these machines if your

00:11:06,870 --> 00:11:10,830
developer you can be spending eight

00:11:08,339 --> 00:11:12,720
hours a day with api's at people builds

00:11:10,830 --> 00:11:15,000
or the other people will be spending

00:11:12,720 --> 00:11:16,890
that much time with API is you build so

00:11:15,000 --> 00:11:18,959
you need to build things with this much

00:11:16,890 --> 00:11:21,510
care and dedication that people you know

00:11:18,959 --> 00:11:23,760
put into automobiles and cars that into

00:11:21,510 --> 00:11:25,800
your API is and you should build it for

00:11:23,760 --> 00:11:27,930
yourself a developer don't think about

00:11:25,800 --> 00:11:29,940
don't build the code for the code you

00:11:27,930 --> 00:11:32,580
build the code for you and try to make

00:11:29,940 --> 00:11:34,290
it easy for you it is a really difficult

00:11:32,580 --> 00:11:37,380
thing to do and I find it really useful

00:11:34,290 --> 00:11:41,040
to write the documentation first in

00:11:37,380 --> 00:11:42,420
order to do this so before any code is

00:11:41,040 --> 00:11:44,220
written at all in on one of my projects

00:11:42,420 --> 00:11:45,930
what i'll do is i have a new idea i want

00:11:44,220 --> 00:11:47,790
to build i'll sit down and I'll actually

00:11:45,930 --> 00:11:49,260
like the readme for the project before I

00:11:47,790 --> 00:11:51,240
actually write any code at all let's sit

00:11:49,260 --> 00:11:52,740
down and I'll just write some examples

00:11:51,240 --> 00:11:54,180
of what the code it looked like and how

00:11:52,740 --> 00:11:56,339
to use it and then you go through all

00:11:54,180 --> 00:11:57,480
the different steps and you show some

00:11:56,339 --> 00:11:59,190
examples of this is what you're going to

00:11:57,480 --> 00:12:00,630
call this is what the knows what the

00:11:59,190 --> 00:12:03,600
results for this function call will be

00:12:00,630 --> 00:12:05,490
and then you know write some pretend

00:12:03,600 --> 00:12:06,839
code with that if you actually use it

00:12:05,490 --> 00:12:08,779
before there's any code written at all

00:12:06,839 --> 00:12:11,160
and it makes things a whole lot easier

00:12:08,779 --> 00:12:12,240
and this kind of shifts the whole way

00:12:11,160 --> 00:12:14,400
you think about the problem that you're

00:12:12,240 --> 00:12:16,110
trying to solve instead of engineering

00:12:14,400 --> 00:12:17,610
something to get the job done you

00:12:16,110 --> 00:12:20,040
interact with the problem itself in the

00:12:17,610 --> 00:12:22,230
builder interface that reacts to it is

00:12:20,040 --> 00:12:24,209
basically like responsive design we're

00:12:22,230 --> 00:12:26,310
working on a website and you gave it a

00:12:24,209 --> 00:12:27,750
responsive design then I work well on a

00:12:26,310 --> 00:12:29,670
phone that will work well on a tablet

00:12:27,750 --> 00:12:30,959
it'll look ball on a computer it's not

00:12:29,670 --> 00:12:32,760
about that though it's about making

00:12:30,959 --> 00:12:35,100
something that understands itself enough

00:12:32,760 --> 00:12:37,770
to to fit the problem space you have to

00:12:35,100 --> 00:12:40,500
put a lot of work into making the

00:12:37,770 --> 00:12:42,209
website that you're working on just just

00:12:40,500 --> 00:12:43,770
work for the users and you have to do

00:12:42,209 --> 00:12:45,870
the same thing with your API to make it

00:12:43,770 --> 00:12:47,370
really simple for the users and there's

00:12:45,870 --> 00:12:47,910
a lot of complicated steps that are

00:12:47,370 --> 00:12:49,470
involved in

00:12:47,910 --> 00:12:50,490
between those two things and you need to

00:12:49,470 --> 00:12:54,390
make all that work happen on the

00:12:50,490 --> 00:12:57,210
background so sculpture is kind of like

00:12:54,390 --> 00:12:58,440
the same way scope if you have like a

00:12:57,210 --> 00:13:00,420
really great artist who's making a

00:12:58,440 --> 00:13:02,550
really great sculpture they aren't like

00:13:00,420 --> 00:13:03,840
engineered and manufactured they don't

00:13:02,550 --> 00:13:05,400
just go away to know exactly what they

00:13:03,840 --> 00:13:07,590
want to build and just go find a piece

00:13:05,400 --> 00:13:09,600
of stone and do it and they study a

00:13:07,590 --> 00:13:11,070
piece of marble you know but go and

00:13:09,600 --> 00:13:12,480
they'll get a piece of marble and try to

00:13:11,070 --> 00:13:15,960
study it and learn about it and try to

00:13:12,480 --> 00:13:18,420
understand what is inside of it and then

00:13:15,960 --> 00:13:19,950
he responds he tries to set free the

00:13:18,420 --> 00:13:22,410
sculpture that was hidden inside of this

00:13:19,950 --> 00:13:24,330
of the stone all along and it's the same

00:13:22,410 --> 00:13:25,560
thing with API is if you go through and

00:13:24,330 --> 00:13:26,880
you try to actually interact with the

00:13:25,560 --> 00:13:29,100
problem at hand instead of just kind of

00:13:26,880 --> 00:13:30,870
forcing it out you can build a really

00:13:29,100 --> 00:13:33,240
nice API that people like and it will

00:13:30,870 --> 00:13:34,830
save a lot of people a lot of time and

00:13:33,240 --> 00:13:37,140
when you do this you should open source

00:13:34,830 --> 00:13:38,970
it because open source is awesome who

00:13:37,140 --> 00:13:40,680
thinks that open source is awesome all

00:13:38,970 --> 00:13:43,230
right everybody yes that source is

00:13:40,680 --> 00:13:44,730
amazing and it's changing the world but

00:13:43,230 --> 00:13:46,080
it is open source right there's a lot of

00:13:44,730 --> 00:13:47,430
different ways to describe open source

00:13:46,080 --> 00:13:49,290
sometimes you just hear it's things with

00:13:47,430 --> 00:13:51,600
the MIT license or the you know get new

00:13:49,290 --> 00:13:53,040
license and stuff like that really what

00:13:51,600 --> 00:13:54,900
open source is it's like a world

00:13:53,040 --> 00:13:57,540
movement it's a transparent group of

00:13:54,900 --> 00:13:59,910
distributed developers are working

00:13:57,540 --> 00:14:01,950
together to make software and projects

00:13:59,910 --> 00:14:03,240
that make the world a better place and

00:14:01,950 --> 00:14:05,610
if you look at the things that are

00:14:03,240 --> 00:14:06,630
happening in the world some of the most

00:14:05,610 --> 00:14:09,210
important things that are happening

00:14:06,630 --> 00:14:12,420
right now on planet Earth or result of

00:14:09,210 --> 00:14:13,890
open-source software if you look at all

00:14:12,420 --> 00:14:15,900
these different social media things that

00:14:13,890 --> 00:14:18,360
people build an HTTP and just like

00:14:15,900 --> 00:14:20,160
social media different elections

00:14:18,360 --> 00:14:21,810
happening you see like tweets happening

00:14:20,160 --> 00:14:23,850
constantly an election you can like

00:14:21,810 --> 00:14:25,620
determine who's going to win an election

00:14:23,850 --> 00:14:27,930
before it actually happens based on the

00:14:25,620 --> 00:14:29,760
tweets alone you have journalism tools

00:14:27,930 --> 00:14:31,410
things like WikiLeaks wars are being

00:14:29,760 --> 00:14:33,270
started all of these things are all a

00:14:31,410 --> 00:14:35,130
result of the tools that people are

00:14:33,270 --> 00:14:36,960
building with open source and it's

00:14:35,130 --> 00:14:39,600
incredible thing to see the whole world

00:14:36,960 --> 00:14:41,160
changed because of developers this is a

00:14:39,600 --> 00:14:44,250
phrase that developers into the new king

00:14:41,160 --> 00:14:45,870
makers and I really think that's true so

00:14:44,250 --> 00:14:47,370
we have a really unique opportunity to

00:14:45,870 --> 00:14:48,200
take part of this powerful social

00:14:47,370 --> 00:14:50,300
movement

00:14:48,200 --> 00:14:51,440
and create a part of these tools that

00:14:50,300 --> 00:14:53,000
are changing the world and it's pretty

00:14:51,440 --> 00:14:54,230
pretty exciting to be able to do that I

00:14:53,000 --> 00:14:56,420
don't think there's any other time in

00:14:54,230 --> 00:14:58,430
human history where any person can just

00:14:56,420 --> 00:15:00,260
sit in the corner in their house you

00:14:58,430 --> 00:15:01,880
know on the other side of the world and

00:15:00,260 --> 00:15:04,190
just right type on the computer for a

00:15:01,880 --> 00:15:06,440
while and then that that inadvertently

00:15:04,190 --> 00:15:09,440
end up changing the world you know Mark

00:15:06,440 --> 00:15:11,090
Zuckerberg sitting in his uh his dorm

00:15:09,440 --> 00:15:13,100
room at college but I had no idea the

00:15:11,090 --> 00:15:16,190
effect that he'd have unknown you know

00:15:13,100 --> 00:15:19,580
society at large but he did and it was

00:15:16,190 --> 00:15:21,380
based on open source tools but open

00:15:19,580 --> 00:15:24,050
source by itself isn't very useful if

00:15:21,380 --> 00:15:25,520
you don't document it documentation is

00:15:24,050 --> 00:15:27,290
really the glue that makes open source

00:15:25,520 --> 00:15:29,480
possible and it's really important if

00:15:27,290 --> 00:15:30,980
you're going to make a library or make

00:15:29,480 --> 00:15:32,360
something that tries to make developers

00:15:30,980 --> 00:15:34,310
lives easier or make people's lives

00:15:32,360 --> 00:15:36,170
easier that you communicate what it's

00:15:34,310 --> 00:15:38,150
for what it's about and how to use it in

00:15:36,170 --> 00:15:41,930
a really good way and that's all about

00:15:38,150 --> 00:15:44,540
documentation so there's some examples

00:15:41,930 --> 00:15:46,760
of good open source and there's examples

00:15:44,540 --> 00:15:48,610
of bad open source look at that open

00:15:46,760 --> 00:15:52,010
source there's some projects that are

00:15:48,610 --> 00:15:53,090
not the not the best there's get X which

00:15:52,010 --> 00:15:55,880
is kind of confusing because it's

00:15:53,090 --> 00:15:58,520
appears to be unmaintained and there's

00:15:55,880 --> 00:16:02,420
like 20 different forks of it yeah the

00:15:58,520 --> 00:16:04,340
facebook sdk HTTP lib to hub cap Oh auth

00:16:02,420 --> 00:16:06,200
to these are libraries at one time

00:16:04,340 --> 00:16:07,850
people liked and are really good but

00:16:06,200 --> 00:16:10,640
today they're very stagnant it's unclear

00:16:07,850 --> 00:16:12,560
what the what's happening they fail to

00:16:10,640 --> 00:16:15,020
solve a core problem and have unclear

00:16:12,560 --> 00:16:17,690
expectations if you look at really great

00:16:15,020 --> 00:16:20,870
open source projects like Jenkins python

00:16:17,690 --> 00:16:23,050
django pip bundler all these projects

00:16:20,870 --> 00:16:25,160
that you know thousands of people use

00:16:23,050 --> 00:16:26,960
their really great because they solve a

00:16:25,160 --> 00:16:28,580
clear problem they communicate well with

00:16:26,960 --> 00:16:31,220
the users and they manage their

00:16:28,580 --> 00:16:32,780
expectations are realistic Lee and this

00:16:31,220 --> 00:16:35,030
is a direct result of them having really

00:16:32,780 --> 00:16:37,430
great documentation and communicating

00:16:35,030 --> 00:16:40,600
their intent and their purpose to their

00:16:37,430 --> 00:16:44,900
users so write more documentation

00:16:40,600 --> 00:16:48,579
document everything is really really

00:16:44,900 --> 00:16:50,410
important we're similar yet to

00:16:48,579 --> 00:16:52,720
us for writing documentation you can

00:16:50,410 --> 00:16:55,509
there's a great service called read the

00:16:52,720 --> 00:16:57,790
docs that you can go to and it lets you

00:16:55,509 --> 00:16:59,980
host Sphinx projects without having to

00:16:57,790 --> 00:17:01,420
do any work at all basically makes makes

00:16:59,980 --> 00:17:03,970
it as easy as throwing a project up on

00:17:01,420 --> 00:17:05,380
github and I think just that tool alone

00:17:03,970 --> 00:17:06,850
makes it really really easy to write

00:17:05,380 --> 00:17:09,100
documentation and I recommend everyone

00:17:06,850 --> 00:17:11,289
check it out Eric culture the guy who

00:17:09,100 --> 00:17:13,539
runs the project actually has this repo

00:17:11,289 --> 00:17:15,250
rate rise to document his entire life on

00:17:13,539 --> 00:17:16,539
read the dogs it's pretty cool so

00:17:15,250 --> 00:17:18,159
they're like you know right all over

00:17:16,539 --> 00:17:19,630
like journal every day and like his

00:17:18,159 --> 00:17:21,730
thoughts and feelings i think his blog

00:17:19,630 --> 00:17:26,829
is hosted on it too it's ridiculous but

00:17:21,730 --> 00:17:28,149
it's pretty cool so I've maintained him

00:17:26,829 --> 00:17:29,799
quite a few projects and I've learned

00:17:28,149 --> 00:17:31,210
quite a few things while I've been doing

00:17:29,799 --> 00:17:32,830
that and I'm going to go over some of

00:17:31,210 --> 00:17:34,929
those things for when you will leave

00:17:32,830 --> 00:17:36,730
soon x project and the most important

00:17:34,929 --> 00:17:40,149
thing that I've learned is to be cordial

00:17:36,730 --> 00:17:42,130
or be on your way so if you're a

00:17:40,149 --> 00:17:42,970
contributor to a project it's really

00:17:42,130 --> 00:17:44,500
important to keep all of your

00:17:42,970 --> 00:17:48,340
interactions with the maintainer as

00:17:44,500 --> 00:17:50,260
respectful as possible you think about

00:17:48,340 --> 00:17:52,149
the person who is maintaining the

00:17:50,260 --> 00:17:53,980
project that you're interacting with has

00:17:52,149 --> 00:17:55,299
probably sacrificed a tremendous amount

00:17:53,980 --> 00:17:57,610
of their time to make that code

00:17:55,299 --> 00:17:59,919
available to maintaining it to

00:17:57,610 --> 00:18:01,990
responding to their users so if you act

00:17:59,919 --> 00:18:04,720
towards the maintainer like they owe you

00:18:01,990 --> 00:18:07,720
their time that can be really draining

00:18:04,720 --> 00:18:09,220
on them and so we're they don't know you

00:18:07,720 --> 00:18:10,659
need to act as though they don't know

00:18:09,220 --> 00:18:12,159
you moment of your time you know and

00:18:10,659 --> 00:18:15,279
that's really important because it can

00:18:12,159 --> 00:18:16,450
be really stressful to have thousands of

00:18:15,279 --> 00:18:17,820
people using your software and

00:18:16,450 --> 00:18:20,440
complaining about it and stuff like that

00:18:17,820 --> 00:18:23,289
if you're a maintainer you should do the

00:18:20,440 --> 00:18:24,549
opposite if you maintain a project that

00:18:23,289 --> 00:18:26,200
you released out there you know in the

00:18:24,549 --> 00:18:27,970
world is using it then you have a

00:18:26,200 --> 00:18:29,500
crucial responsibility of being

00:18:27,970 --> 00:18:32,019
immensely thankful to all of your

00:18:29,500 --> 00:18:33,610
contributors the lifeblood of your

00:18:32,019 --> 00:18:35,470
project or the reason your project

00:18:33,610 --> 00:18:36,350
exists the reason it's useful to anybody

00:18:35,470 --> 00:18:39,140
and then

00:18:36,350 --> 00:18:42,289
reason that you know your code is is

00:18:39,140 --> 00:18:44,120
worthwhile so you should ignore non

00:18:42,289 --> 00:18:45,679
constructive feedback and that's the

00:18:44,120 --> 00:18:47,059
most important thing a lot of people

00:18:45,679 --> 00:18:50,210
complain about things that they don't

00:18:47,059 --> 00:18:51,350
like about the project or they'll you

00:18:50,210 --> 00:18:53,360
know when that can be a really good

00:18:51,350 --> 00:18:54,620
thing if they're being constructive you

00:18:53,360 --> 00:18:56,570
can have negative constructive feedback

00:18:54,620 --> 00:18:58,940
and that's really great but a lot of

00:18:56,570 --> 00:19:00,770
people will just kind of whine and

00:18:58,940 --> 00:19:01,970
complain and it will be unconstructive

00:19:00,770 --> 00:19:04,280
and it's really important to learn to

00:19:01,970 --> 00:19:06,440
just ignore those people completely that

00:19:04,280 --> 00:19:08,750
really helps maintaining projects quite

00:19:06,440 --> 00:19:09,919
a bit and it's really important to also

00:19:08,750 --> 00:19:12,020
remember that some people just take

00:19:09,919 --> 00:19:13,370
things way too seriously you'll you know

00:19:12,020 --> 00:19:15,289
we like to make one little change to a

00:19:13,370 --> 00:19:17,929
project and go like ruin they'll cause

00:19:15,289 --> 00:19:19,220
one guy five minutes pain and he'll go

00:19:17,929 --> 00:19:20,570
on a big Twitter rat to write some blog

00:19:19,220 --> 00:19:23,539
posts and we'll be number one on hacker

00:19:20,570 --> 00:19:24,679
news and you know just really important

00:19:23,539 --> 00:19:25,789
to just remember that you know this is

00:19:24,679 --> 00:19:27,830
we're supposed to be writing software

00:19:25,789 --> 00:19:30,140
because it's fun right we where hackers

00:19:27,830 --> 00:19:31,490
and we like to build things and we're

00:19:30,140 --> 00:19:33,650
tinkerers and we're trying to change the

00:19:31,490 --> 00:19:37,070
world we're not trying to make everyone

00:19:33,650 --> 00:19:38,240
have a bad day and it's really important

00:19:37,070 --> 00:19:40,190
if you're maintaining a project that a

00:19:38,240 --> 00:19:42,380
lot of people use to be very cordial

00:19:40,190 --> 00:19:44,419
towards the people that are using your

00:19:42,380 --> 00:19:45,710
software and that are contributing so

00:19:44,419 --> 00:19:47,570
you need to really careful with the

00:19:45,710 --> 00:19:49,460
words that you choose a lot of projects

00:19:47,570 --> 00:19:51,080
will operate in a way where if someone

00:19:49,460 --> 00:19:53,720
sends pull requests that doesn't have

00:19:51,080 --> 00:19:55,610
any tests or dessaline to disagree with

00:19:53,720 --> 00:19:57,200
we'll just kind of close it without

00:19:55,610 --> 00:20:00,370
saying anything or they'll just kind of

00:19:57,200 --> 00:20:02,330
rudely be like no that's all they say

00:20:00,370 --> 00:20:04,370
it's really important that if you're

00:20:02,330 --> 00:20:06,950
maintaining your project and responding

00:20:04,370 --> 00:20:08,390
to something like that that on you

00:20:06,950 --> 00:20:10,909
remember the contributors can take what

00:20:08,390 --> 00:20:12,559
you say really really personally I you'd

00:20:10,909 --> 00:20:14,510
be shocked at how many times I've done a

00:20:12,559 --> 00:20:16,800
pro request and I've kind of helped the

00:20:14,510 --> 00:20:18,900
posted along trying to make it better or

00:20:16,800 --> 00:20:20,910
wine be very appreciative of the work

00:20:18,900 --> 00:20:22,860
they've done and let's say that that is

00:20:20,910 --> 00:20:24,360
the very first interaction with open

00:20:22,860 --> 00:20:26,130
source they've ever had and a lot of

00:20:24,360 --> 00:20:27,390
times it happens is someone has a

00:20:26,130 --> 00:20:28,620
project they like they'll try to

00:20:27,390 --> 00:20:30,360
contribute to it they don't really know

00:20:28,620 --> 00:20:32,160
what they're doing it haha end of

00:20:30,360 --> 00:20:34,170
pushing this code out there and the

00:20:32,160 --> 00:20:36,210
criticism that could happen and that

00:20:34,170 --> 00:20:37,950
they could face and if someone is

00:20:36,210 --> 00:20:39,840
negative towards them on the first

00:20:37,950 --> 00:20:41,700
interaction they made never code an open

00:20:39,840 --> 00:20:43,110
source again that's horrible no that's

00:20:41,700 --> 00:20:45,360
that's the opposite of what we should be

00:20:43,110 --> 00:20:47,820
trying to do you know all of a lot of

00:20:45,360 --> 00:20:49,500
our careers are both around open source

00:20:47,820 --> 00:20:52,740
and we should always be trying to extend

00:20:49,500 --> 00:20:54,090
that and as many ways as possible so if

00:20:52,740 --> 00:20:55,430
someone has a pro request they send you

00:20:54,090 --> 00:20:57,510
or an issue and it doesn't make sense

00:20:55,430 --> 00:20:59,670
instead of just kind of brushing it off

00:20:57,510 --> 00:21:02,460
you should try very hard to educate the

00:20:59,670 --> 00:21:05,430
user to try to make available better and

00:21:02,460 --> 00:21:06,450
yours and it's really important to

00:21:05,430 --> 00:21:09,810
remember that a little bit of kindness

00:21:06,450 --> 00:21:11,280
goes a long way so when I get a request

00:21:09,810 --> 00:21:13,710
basically no matter what it is no matter

00:21:11,280 --> 00:21:15,630
how small I always try to add the person

00:21:13,710 --> 00:21:18,630
to the author's file afterwards even if

00:21:15,630 --> 00:21:20,010
it was a simple type of a fix and you

00:21:18,630 --> 00:21:22,170
know I'm always very thankful to the

00:21:20,010 --> 00:21:23,640
person no matter what and that really

00:21:22,170 --> 00:21:25,170
helps a lot you'd be shocked at how

00:21:23,640 --> 00:21:27,900
often you send a pro request to another

00:21:25,170 --> 00:21:29,520
project and the people will be rude

00:21:27,900 --> 00:21:33,000
about it Alto just merge it without

00:21:29,520 --> 00:21:35,700
saying anything so yeah be kind to your

00:21:33,000 --> 00:21:37,130
users it's really important also to

00:21:35,700 --> 00:21:39,570
avoid burnout in a project

00:21:37,130 --> 00:21:42,270
sustainability is the most important

00:21:39,570 --> 00:21:43,080
part of any open source project and it's

00:21:42,270 --> 00:21:45,810
really important to remember that

00:21:43,080 --> 00:21:46,920
everyone has a limited amount of time so

00:21:45,810 --> 00:21:48,780
it's easy to become the bottleneck of

00:21:46,920 --> 00:21:50,640
your own projects which really sucks you

00:21:48,780 --> 00:21:52,500
know if you having a bad week you know

00:21:50,640 --> 00:21:55,670
all the issues will start to pile up on

00:21:52,500 --> 00:21:58,350
your projects it'll be this big stress

00:21:55,670 --> 00:22:00,330
since critic of mining wes is really

00:21:58,350 --> 00:22:02,790
great he maintains a library for Ruby

00:22:00,330 --> 00:22:04,380
called fog which is quite popular it's

00:22:02,790 --> 00:22:07,940
kind of like a norm for different cloud

00:22:04,380 --> 00:22:07,940
services and infrastructure providers

00:22:08,659 --> 00:22:12,659
and he says that our open source

00:22:10,830 --> 00:22:15,179
provides a unique opportunity for the

00:22:12,659 --> 00:22:17,279
trifecta of purpose mastery and autonomy

00:22:15,179 --> 00:22:19,979
by recognizing the power of these

00:22:17,279 --> 00:22:22,769
factors we can keep ourselves motivated

00:22:19,979 --> 00:22:23,999
and continue to increase our impact it's

00:22:22,769 --> 00:22:26,070
really important to keep in mind all

00:22:23,999 --> 00:22:27,450
these separate things what at all times

00:22:26,070 --> 00:22:29,429
in your maintaining a project and

00:22:27,450 --> 00:22:31,049
working with other people it's important

00:22:29,429 --> 00:22:32,159
to make sure that all the users and all

00:22:31,049 --> 00:22:33,629
the people that are contributing and

00:22:32,159 --> 00:22:36,690
using your project feel like they have a

00:22:33,629 --> 00:22:38,309
purpose in the project it's important to

00:22:36,690 --> 00:22:40,499
reward people that have done a good job

00:22:38,309 --> 00:22:41,340
and it's important to automate it so

00:22:40,499 --> 00:22:44,340
that you don't have to do a lot of

00:22:41,340 --> 00:22:46,470
monotonous work of great service for

00:22:44,340 --> 00:22:48,029
this is called Travis CI so whenever a

00:22:46,470 --> 00:22:50,340
poll requests come in to any of my

00:22:48,029 --> 00:22:53,099
projects the unit tests will

00:22:50,340 --> 00:22:54,720
automatically get run and github will

00:22:53,099 --> 00:22:56,220
know if they pass or not so I never have

00:22:54,720 --> 00:22:58,470
to go and pull the code myself in check

00:22:56,220 --> 00:23:00,960
it always happens automatically which

00:22:58,470 --> 00:23:04,529
saves me hundreds of hours of time and

00:23:00,960 --> 00:23:08,369
it's really great so these are two

00:23:04,529 --> 00:23:09,720
people that I met also help with the

00:23:08,369 --> 00:23:12,059
sustainability problem quite a bit

00:23:09,720 --> 00:23:13,769
learning your quarry in ian's and these

00:23:12,059 --> 00:23:16,349
guys are like the best people in the

00:23:13,769 --> 00:23:17,940
world basically what happens is when the

00:23:16,349 --> 00:23:20,149
pull request comes in two requests or

00:23:17,940 --> 00:23:23,429
what a lot of other projects that I run

00:23:20,149 --> 00:23:24,869
these guys will triage it so like oh we

00:23:23,429 --> 00:23:27,989
had a plane all be in India for example

00:23:24,869 --> 00:23:29,999
at a conference and you know usually

00:23:27,989 --> 00:23:32,609
what used to happen was i get really

00:23:29,999 --> 00:23:34,229
behind on my open source work can I just

00:23:32,609 --> 00:23:35,519
have his big backlog of issues that were

00:23:34,229 --> 00:23:37,739
like two weeks old that I couldn't

00:23:35,519 --> 00:23:39,989
respond to so these guys just one day

00:23:37,739 --> 00:23:41,099
started like commenting on issues and

00:23:39,989 --> 00:23:42,659
telling me which ones needed to be

00:23:41,099 --> 00:23:45,200
closed they would respond to people and

00:23:42,659 --> 00:23:47,369
help them out so one day I just started

00:23:45,200 --> 00:23:49,409
collaborating them added them as

00:23:47,369 --> 00:23:51,059
collaborators on the repo with commit

00:23:49,409 --> 00:23:53,849
access and they've been tremendously

00:23:51,059 --> 00:23:55,320
helpful in maintaining the project and

00:23:53,849 --> 00:23:56,909
it's another thing that Wes says a lot

00:23:55,320 --> 00:23:59,489
is that it's really important to learn

00:23:56,909 --> 00:24:00,960
how to do less in open source to let it

00:23:59,489 --> 00:24:02,399
be more sustainable let other people

00:24:00,960 --> 00:24:05,539
just kind of get out of their way and

00:24:02,399 --> 00:24:07,040
allow them to help you run the project

00:24:05,539 --> 00:24:08,330
and they say

00:24:07,040 --> 00:24:11,030
like a tremendous amount of time it's

00:24:08,330 --> 00:24:13,450
been very very valuable so it allows me

00:24:11,030 --> 00:24:15,470
to focus my time on larger issues and

00:24:13,450 --> 00:24:17,930
help contributors make the best time of

00:24:15,470 --> 00:24:19,820
their efforts so like usually within an

00:24:17,930 --> 00:24:21,830
hour of opening a tissue someone will

00:24:19,820 --> 00:24:23,990
have responded to the issue and that's

00:24:21,830 --> 00:24:25,940
fantastic because these guys you know if

00:24:23,990 --> 00:24:27,260
you have to wait a week for an issue or

00:24:25,940 --> 00:24:28,850
something like that that you open like

00:24:27,260 --> 00:24:30,200
it's a good chance that you're not

00:24:28,850 --> 00:24:32,240
interested in fixing the problem anymore

00:24:30,200 --> 00:24:36,260
and so reducing that amount of

00:24:32,240 --> 00:24:38,840
turnaround time is fantastic quite

00:24:36,260 --> 00:24:40,580
tweeted this couple weeks ago he said as

00:24:38,840 --> 00:24:42,080
I folk another one of his projects it

00:24:40,580 --> 00:24:44,420
occurred to me that I don't program in

00:24:42,080 --> 00:24:46,490
the Python ecosystem I program in

00:24:44,420 --> 00:24:48,230
Kenneth's rights ecosystem and this is a

00:24:46,490 --> 00:24:50,420
kind of ridiculous thing that he said

00:24:48,230 --> 00:24:52,280
but it's really valuable so if you take

00:24:50,420 --> 00:24:54,260
if you have a project and you let other

00:24:52,280 --> 00:24:55,820
people kind of get involved and you

00:24:54,260 --> 00:24:57,260
encourage them to do these things it's

00:24:55,820 --> 00:24:58,340
rewarding for everybody it's great for

00:24:57,260 --> 00:25:00,710
you because you get to save a lot of

00:24:58,340 --> 00:25:02,150
time the script for you because then

00:25:00,710 --> 00:25:03,650
they get more involved in your other

00:25:02,150 --> 00:25:04,910
projects that you're running and if you

00:25:03,650 --> 00:25:07,760
start a new project they can help you

00:25:04,910 --> 00:25:08,600
maintain it and share the burden it's

00:25:07,760 --> 00:25:10,400
really great for him because then

00:25:08,600 --> 00:25:11,630
everyone knows this guy's name from all

00:25:10,400 --> 00:25:17,150
the projects that it that he's always

00:25:11,630 --> 00:25:18,170
responding to and it's helped lock this

00:25:17,150 --> 00:25:19,370
is the most important one that I've

00:25:18,170 --> 00:25:21,230
learned and it's kind of the most

00:25:19,370 --> 00:25:25,370
difficult one with money any project if

00:25:21,230 --> 00:25:26,630
learning how to say no basically people

00:25:25,370 --> 00:25:28,310
who are going to ask for the most

00:25:26,630 --> 00:25:32,330
ridiculous features that you can imagine

00:25:28,310 --> 00:25:35,150
and send a request that kind of seemed

00:25:32,330 --> 00:25:36,890
harmless right they'll they'll add this

00:25:35,150 --> 00:25:38,570
feature that they need for their for

00:25:36,890 --> 00:25:41,510
their thing they're doing it work or

00:25:38,570 --> 00:25:43,190
whatever and you know they're really

00:25:41,510 --> 00:25:44,930
trying to make the project better they

00:25:43,190 --> 00:25:47,300
have good intentions but it's really

00:25:44,930 --> 00:25:49,100
important to say no to a lot of those

00:25:47,300 --> 00:25:50,870
features because if you keep maintaining

00:25:49,100 --> 00:25:53,180
these projects and you keep adding all

00:25:50,870 --> 00:25:56,150
these features that people are are

00:25:53,180 --> 00:25:58,210
sending to you without really keeping in

00:25:56,150 --> 00:26:01,250
mind how simple the product needs to be

00:25:58,210 --> 00:26:03,320
your project will soon be ruined has all

00:26:01,250 --> 00:26:05,149
the tragedy of the Commons if you let

00:26:03,320 --> 00:26:06,259
everyone rule over

00:26:05,149 --> 00:26:09,649
the decisions that your project makes

00:26:06,259 --> 00:26:11,629
then it will turn pretty nastily pretty

00:26:09,649 --> 00:26:14,299
quickly and it's not very fun and it

00:26:11,629 --> 00:26:16,969
makes it really hard to maintain so this

00:26:14,299 --> 00:26:19,639
is a peter hitchens had a great quote

00:26:16,969 --> 00:26:22,429
he's the CEO of the company behind

00:26:19,639 --> 00:26:24,320
zeromq and he says that simplicity is

00:26:22,429 --> 00:26:25,789
always better than functionality and I

00:26:24,320 --> 00:26:27,710
think this is really important in most

00:26:25,789 --> 00:26:30,349
things in life but specifically for open

00:26:27,710 --> 00:26:32,029
source so open source is great because

00:26:30,349 --> 00:26:34,219
it's small it's distributed and it's

00:26:32,029 --> 00:26:36,919
focused on small problems that are

00:26:34,219 --> 00:26:40,489
easily solvable things that have a

00:26:36,919 --> 00:26:42,229
separation of concerns so if a new poll

00:26:40,489 --> 00:26:44,210
request comes into one my projects now

00:26:42,229 --> 00:26:46,039
if it adds some complexity to the

00:26:44,210 --> 00:26:49,309
project or in a new feature that isn't

00:26:46,039 --> 00:26:51,499
needed by most people I say no to it

00:26:49,309 --> 00:26:53,359
basically and I feel like that's kind of

00:26:51,499 --> 00:26:54,799
its really very hard to do that and

00:26:53,359 --> 00:26:56,269
we'll head you know at first I used to

00:26:54,799 --> 00:26:58,399
launch basically anything in that

00:26:56,269 --> 00:27:01,129
someone sent I feel really bad if I

00:26:58,399 --> 00:27:03,229
didn't but now after years of doing that

00:27:01,129 --> 00:27:05,509
I realized that how what a bad decision

00:27:03,229 --> 00:27:07,999
that is and it makes so much of a

00:27:05,509 --> 00:27:09,320
headache for you and if you learn how to

00:27:07,999 --> 00:27:11,330
say no like this all the time it helps

00:27:09,320 --> 00:27:13,849
you learn how to build more composable

00:27:11,330 --> 00:27:15,679
code so for example requests used to

00:27:13,849 --> 00:27:18,529
have socks support built into it for

00:27:15,679 --> 00:27:21,019
socks proxies as well as G event and

00:27:18,529 --> 00:27:23,509
couple other things like that and it was

00:27:21,019 --> 00:27:25,059
really great but I could I didn't know

00:27:23,509 --> 00:27:27,559
like I don't know anything about socks

00:27:25,059 --> 00:27:28,759
it also support Kerberos at one time I

00:27:27,559 --> 00:27:30,049
don't know anything about Kerberos

00:27:28,759 --> 00:27:32,659
neither did any of the maintainer 'he's

00:27:30,049 --> 00:27:34,099
so having that piece of code be in the

00:27:32,659 --> 00:27:35,269
code base didn't make any sense because

00:27:34,099 --> 00:27:37,190
we couldn't maintain it we didn't

00:27:35,269 --> 00:27:38,779
understand it we didn't test it and

00:27:37,190 --> 00:27:41,389
would it broke we had no idea how to fix

00:27:38,779 --> 00:27:44,299
it so learning how to say no taught us

00:27:41,389 --> 00:27:45,320
to react take the code base so that

00:27:44,299 --> 00:27:47,440
someone else could provide that

00:27:45,320 --> 00:27:51,499
functionality in another library and

00:27:47,440 --> 00:27:52,820
that helped the project tremendously so

00:27:51,499 --> 00:27:55,820
basically it's always a good design

00:27:52,820 --> 00:27:57,710
decision to try to figure out how to add

00:27:55,820 --> 00:28:00,830
the fewest lines of code possible in any

00:27:57,710 --> 00:28:03,679
project simple code is always better

00:28:00,830 --> 00:28:05,659
than in complex code codes helps

00:28:03,679 --> 00:28:06,979
problems that are created by humans so

00:28:05,659 --> 00:28:09,529
the less code there is the less code

00:28:06,979 --> 00:28:10,789
there is to maintain negative diffs are

00:28:09,529 --> 00:28:11,440
always the best if the pull request

00:28:10,789 --> 00:28:13,659
comes

00:28:11,440 --> 00:28:15,789
now I see a green lines and no red lines

00:28:13,659 --> 00:28:18,129
and I you it's really good idea really

00:28:15,789 --> 00:28:20,379
consider if that's necessary for your

00:28:18,129 --> 00:28:22,570
project or not and this allows you to

00:28:20,379 --> 00:28:24,759
build really sharp small things that are

00:28:22,570 --> 00:28:28,750
focused on sip closed problems that make

00:28:24,759 --> 00:28:30,730
it easier to sustain complex code I

00:28:28,750 --> 00:28:34,240
believe everyone can agree is a horrible

00:28:30,730 --> 00:28:36,519
thing tight coupling model with the data

00:28:34,240 --> 00:28:39,580
bit code bases these are all things that

00:28:36,519 --> 00:28:41,169
we hate to maintain all the banging of a

00:28:39,580 --> 00:28:42,580
lot of our existence is a lot of

00:28:41,169 --> 00:28:44,679
companies hire people to just go

00:28:42,580 --> 00:28:46,299
maintain these crazy data you know these

00:28:44,679 --> 00:28:48,850
crazy old code bases that no one wants

00:28:46,299 --> 00:28:50,559
to touch and when that happens it's

00:28:48,850 --> 00:28:52,870
really easy to have this like lurking

00:28:50,559 --> 00:28:55,870
growing a technical debt in the project

00:28:52,870 --> 00:28:56,980
and it's it's never a fun thing so if

00:28:55,870 --> 00:28:59,559
you keep it simply to keep your

00:28:56,980 --> 00:29:01,629
maintenance burden down and the code

00:28:59,559 --> 00:29:03,179
will become problem solving instead of

00:29:01,629 --> 00:29:08,500
self-serving which is always a bad thing

00:29:03,179 --> 00:29:11,019
so sing out all the things so that's

00:29:08,500 --> 00:29:13,419
most of the talk the manifesto for the

00:29:11,019 --> 00:29:15,820
takeaway is open source makes the world

00:29:13,419 --> 00:29:26,620
a better place please don't make it

00:29:15,820 --> 00:29:28,600
complicated that's up 10 minutes ago we

00:29:26,620 --> 00:29:31,450
have time for questions so anyone have

00:29:28,600 --> 00:29:33,100
any questions I don't know if we have

00:29:31,450 --> 00:29:35,730
them like to pass around to do

00:29:33,100 --> 00:29:35,730
excellence

00:29:44,679 --> 00:29:58,330
any questions at all hey like you

00:29:53,769 --> 00:30:00,700
mentioned about you a trip to so like if

00:29:58,330 --> 00:30:02,440
you want to store the state you have you

00:30:00,700 --> 00:30:05,019
wanna have a stateful session are you

00:30:02,440 --> 00:30:07,749
want to store cookies so can you use you

00:30:05,019 --> 00:30:11,080
are a lip to or the quests or do we need

00:30:07,749 --> 00:30:12,639
some sort of a browser emulator like

00:30:11,080 --> 00:30:15,549
mechanize or something and can request

00:30:12,639 --> 00:30:18,309
do it yes so graphic design requests in

00:30:15,549 --> 00:30:20,710
a way where it can it has a session and

00:30:18,309 --> 00:30:22,119
it will persist cookies automatically it

00:30:20,710 --> 00:30:24,190
doesn't exactly behave exactly like a

00:30:22,119 --> 00:30:26,470
browser but it will do most of the rings

00:30:24,190 --> 00:30:28,419
that you want it all store cookies that

00:30:26,470 --> 00:30:29,919
are sent by the server I'd allow you to

00:30:28,419 --> 00:30:31,360
set them and helper system just like a

00:30:29,919 --> 00:30:33,909
browser would and then it will also do

00:30:31,360 --> 00:30:34,899
connection pooling automatically and

00:30:33,909 --> 00:30:36,549
that works really well if you're doing

00:30:34,899 --> 00:30:38,590
it with you can deal with your all into

00:30:36,549 --> 00:30:39,909
but it's kind of ugly have to mess with

00:30:38,590 --> 00:30:42,070
these cookie jars and stuff and it

00:30:39,909 --> 00:30:45,369
doesn't really make much sense and in

00:30:42,070 --> 00:30:47,710
request it's automatic so yeah that's a

00:30:45,369 --> 00:30:48,820
intentional design decision and I think

00:30:47,710 --> 00:30:50,889
I would like to add more browser

00:30:48,820 --> 00:30:52,029
functionality eventually because I think

00:30:50,889 --> 00:30:54,759
it's really useful and it's what people

00:30:52,029 --> 00:30:56,409
expect and the Holy compared with make a

00:30:54,759 --> 00:30:58,659
nice like request with mechanized if you

00:30:56,409 --> 00:31:01,929
order to make a nice i have used

00:30:58,659 --> 00:31:05,950
mechanize on myself I know a lot of

00:31:01,929 --> 00:31:07,480
people have found request to be better

00:31:05,950 --> 00:31:08,889
for them and I've seen some people write

00:31:07,480 --> 00:31:11,259
some adapters that kind of make them

00:31:08,889 --> 00:31:14,379
play nicely together there was one app

00:31:11,259 --> 00:31:16,539
icon a camera what it was called but you

00:31:14,379 --> 00:31:18,279
can use like a headless browser with

00:31:16,539 --> 00:31:20,320
requests so I wrote these things called

00:31:18,279 --> 00:31:21,669
connection adapters which allows you to

00:31:20,320 --> 00:31:24,869
just kind of define the entire

00:31:21,669 --> 00:31:26,980
application or socket sending logic and

00:31:24,869 --> 00:31:29,710
if you really wanted to you could

00:31:26,980 --> 00:31:31,720
actually have a request API connect to

00:31:29,710 --> 00:31:33,460
mechanize and do it that way if you

00:31:31,720 --> 00:31:35,049
really wanted to so ideally maybe they

00:31:33,460 --> 00:31:36,610
both play nicely together

00:31:35,049 --> 00:31:50,230
I think it really depends on on the use

00:31:36,610 --> 00:31:52,419
case thank you thank you yeah hi um so

00:31:50,230 --> 00:31:55,570
you know let's say you have a great idea

00:31:52,419 --> 00:31:57,970
like you did with requests and you start

00:31:55,570 --> 00:31:59,289
writing code so obviously you need a lot

00:31:57,970 --> 00:32:01,090
of people to help you out you know

00:31:59,289 --> 00:32:02,830
that's the idea of open source yeah

00:32:01,090 --> 00:32:04,840
could you talk a little bit about how

00:32:02,830 --> 00:32:07,059
you got requests to where it is right

00:32:04,840 --> 00:32:09,460
now because I'm pretty sure a lot of us

00:32:07,059 --> 00:32:12,100
here have great ideas but we just don't

00:32:09,460 --> 00:32:13,809
know how to you know get started and you

00:32:12,100 --> 00:32:15,369
know get the traction that it really

00:32:13,809 --> 00:32:17,320
needs for it to become something like

00:32:15,369 --> 00:32:19,690
request TSA's I think the most important

00:32:17,320 --> 00:32:21,100
thing is documentation really i think a

00:32:19,690 --> 00:32:22,389
lot of projects state there have really

00:32:21,100 --> 00:32:24,249
great ideas but when you go to the

00:32:22,389 --> 00:32:27,070
repository it doesn't actually explain

00:32:24,249 --> 00:32:29,379
what the project is or how to use it or

00:32:27,070 --> 00:32:31,210
how to install it so i think this to

00:32:29,379 --> 00:32:33,340
think is making the barrier to entry

00:32:31,210 --> 00:32:35,289
very low so it's very easy for someone

00:32:33,340 --> 00:32:36,669
to try it right away to sell if it's

00:32:35,289 --> 00:32:37,929
good or not because if it if it's not

00:32:36,669 --> 00:32:40,960
obvious how to use it they'll just go

00:32:37,929 --> 00:32:42,600
look at something else and then if there

00:32:40,960 --> 00:32:44,679
if you want to learn more about it

00:32:42,600 --> 00:32:46,179
sometimes people just will have them go

00:32:44,679 --> 00:32:47,710
look at the source code and ideally you

00:32:46,179 --> 00:32:50,409
should have great documentation that

00:32:47,710 --> 00:32:51,970
explains all the philosophies and the

00:32:50,409 --> 00:32:53,559
design decisions behind the project and

00:32:51,970 --> 00:32:55,779
I think that really goes a long long way

00:32:53,559 --> 00:32:58,119
and if that you know if it's a good idea

00:32:55,779 --> 00:32:59,889
then there's its communicated well and

00:32:58,119 --> 00:33:01,629
if it resonates with people it'll just

00:32:59,889 --> 00:33:02,769
naturally take off and it's kind of what

00:33:01,629 --> 00:33:04,749
happened with me I wrote a bunch of

00:33:02,769 --> 00:33:06,820
projects I had one in particular called

00:33:04,749 --> 00:33:10,090
tab lab which a lot of people use but

00:33:06,820 --> 00:33:12,039
not nearly as many as use requests and

00:33:10,090 --> 00:33:14,049
if i had the same type of documentation

00:33:12,039 --> 00:33:15,489
stuff and it wasn't nearly as popular

00:33:14,049 --> 00:33:18,190
just because it wasn't as good of an

00:33:15,489 --> 00:33:20,409
idea basically so it's kind of a

00:33:18,190 --> 00:33:24,489
combination of all those things and I

00:33:20,409 --> 00:33:27,970
think that really goes a long way hey yo

00:33:24,489 --> 00:33:29,080
yo I have no questions but just wanted

00:33:27,970 --> 00:33:31,149
to say a thank you for an awesome

00:33:29,080 --> 00:33:34,259
keynote I hope everybody agrees here

00:33:31,149 --> 00:33:34,259
thank you thank you

00:33:44,840 --> 00:33:52,110
hi thanks for a great talk was very

00:33:47,880 --> 00:33:53,910
inspiring so in terms of like TTD driven

00:33:52,110 --> 00:33:56,220
development this is the like

00:33:53,910 --> 00:33:57,780
documentation driven or ridden a driven

00:33:56,220 --> 00:34:00,990
development that you're saying yes

00:33:57,780 --> 00:34:03,120
what's your take on that okay oh go

00:34:00,990 --> 00:34:05,580
ahead I personally like like reading

00:34:03,120 --> 00:34:08,070
tests that are I know that are working

00:34:05,580 --> 00:34:11,250
yes and reading the implementation from

00:34:08,070 --> 00:34:13,260
that so it's interesting because I think

00:34:11,250 --> 00:34:15,419
we need Riven development is actually a

00:34:13,260 --> 00:34:18,780
form of test-driven development it's

00:34:15,419 --> 00:34:20,129
just not usually tour driven so this

00:34:18,780 --> 00:34:21,690
thing you're doing in writing the readme

00:34:20,129 --> 00:34:24,720
is you're basically writing an

00:34:21,690 --> 00:34:26,850
integration test that you're just

00:34:24,720 --> 00:34:28,470
checking annually and there's some tools

00:34:26,850 --> 00:34:29,940
to do this you can use doc test and have

00:34:28,470 --> 00:34:32,970
it be automated so they'll actually test

00:34:29,940 --> 00:34:34,409
that as you write it but i think the pie

00:34:32,970 --> 00:34:36,300
the best practice thing to do is to

00:34:34,409 --> 00:34:37,649
write the readme get to get it started

00:34:36,300 --> 00:34:39,600
and then you start writing tests for all

00:34:37,649 --> 00:34:41,040
those components you might have much

00:34:39,600 --> 00:34:42,540
integration tests and then once you get

00:34:41,040 --> 00:34:45,030
the idea formed you go and you can write

00:34:42,540 --> 00:34:46,500
a bunch of unit tests unfortunately I

00:34:45,030 --> 00:34:49,649
usually never get around to the unit

00:34:46,500 --> 00:34:51,179
test part at all and I usually when I'm

00:34:49,649 --> 00:34:53,550
actually starting development i

00:34:51,179 --> 00:34:55,260
personally don't even like the

00:34:53,550 --> 00:34:57,149
integration test until I'm done I know

00:34:55,260 --> 00:34:59,220
that's something that a lot of people

00:34:57,149 --> 00:35:01,380
recommend and do so I think it's kind of

00:34:59,220 --> 00:35:05,790
a personal decision but I think that

00:35:01,380 --> 00:35:08,670
they both fit together really well yes

00:35:05,790 --> 00:35:10,440
great dog konopka question how do you

00:35:08,670 --> 00:35:13,410
gain insights into how people are using

00:35:10,440 --> 00:35:16,500
your API libraries hmm what do you mean

00:35:13,410 --> 00:35:18,119
exactly so once it's out there and

00:35:16,500 --> 00:35:19,710
people are using it this is going to be

00:35:18,119 --> 00:35:20,910
a certain population that's interacting

00:35:19,710 --> 00:35:23,490
with you coming back to you with pull

00:35:20,910 --> 00:35:24,630
requests and feedback yeah but to sort

00:35:23,490 --> 00:35:26,250
of have an understanding of which

00:35:24,630 --> 00:35:28,230
portions of your library up are being

00:35:26,250 --> 00:35:30,119
used for various people and to make

00:35:28,230 --> 00:35:32,310
decisions about refactoring what to take

00:35:30,119 --> 00:35:33,780
out what to keep or to tune further what

00:35:32,310 --> 00:35:35,820
sort of the thought process it drives

00:35:33,780 --> 00:35:38,580
that that's a really hard thing to

00:35:35,820 --> 00:35:40,200
determine for me it's kind of watching

00:35:38,580 --> 00:35:42,080
all the github issues come in is a

00:35:40,200 --> 00:35:43,430
really great place to start

00:35:42,080 --> 00:35:45,080
if there's some parts of your code base

00:35:43,430 --> 00:35:46,490
that are tricky and unstable I think

00:35:45,080 --> 00:35:47,630
it'll be pretty obvious if a lot of

00:35:46,490 --> 00:35:51,320
people are using it because they'll be

00:35:47,630 --> 00:35:52,820
complaining about it a lot unfortunately

00:35:51,320 --> 00:35:56,090
i don't know i've made a couple bad

00:35:52,820 --> 00:35:57,830
calls myself for example there was a

00:35:56,090 --> 00:35:59,120
couple there was a very vocal minority

00:35:57,830 --> 00:36:01,430
of people that were complaining about

00:35:59,120 --> 00:36:04,220
the json api and requests so i changed

00:36:01,430 --> 00:36:06,890
it so before it was a property to get

00:36:04,220 --> 00:36:08,210
the json deserialized version of a

00:36:06,890 --> 00:36:11,930
response and then i changed it to a

00:36:08,210 --> 00:36:14,450
method call specifically because the

00:36:11,930 --> 00:36:18,560
facebook api doesn't doesn't care about

00:36:14,450 --> 00:36:20,420
status codes in the return so there was

00:36:18,560 --> 00:36:22,250
no way to determine if the value was

00:36:20,420 --> 00:36:24,230
none because there was no JSON or none

00:36:22,250 --> 00:36:25,850
because there was an error so i made it

00:36:24,230 --> 00:36:27,260
actually raise exceptions properly

00:36:25,850 --> 00:36:30,530
because you don't expect exceptions when

00:36:27,260 --> 00:36:31,820
you're accessing a property and I I mean

00:36:30,530 --> 00:36:33,290
looking back at it up I wouldn't do that

00:36:31,820 --> 00:36:36,500
again because it's kind of inconsistent

00:36:33,290 --> 00:36:39,470
if I was to do that now I probably make

00:36:36,500 --> 00:36:41,030
all of the all of the methods or all of

00:36:39,470 --> 00:36:42,800
them properties instead of kind of

00:36:41,030 --> 00:36:45,650
switching them around and I feel like I

00:36:42,800 --> 00:36:46,850
don't know I feel like I just had to if

00:36:45,650 --> 00:36:47,840
you just sit around and think about it

00:36:46,850 --> 00:36:49,730
for a while I'm going to go with your

00:36:47,840 --> 00:36:51,680
gut I think that helps a lot too like if

00:36:49,730 --> 00:36:52,790
I were to go with my gut with that all

00:36:51,680 --> 00:36:54,500
right because I was against it for a

00:36:52,790 --> 00:36:57,020
long time and I kind of cave to peer

00:36:54,500 --> 00:36:59,570
pressure and I really regret it so I

00:36:57,020 --> 00:37:00,980
think I don't know it's it's a really

00:36:59,570 --> 00:37:04,760
tricky thing I think it's different for

00:37:00,980 --> 00:37:06,290
every project and it's is definitely the

00:37:04,760 --> 00:37:11,860
hardest part of maintaining a project in

00:37:06,290 --> 00:37:11,860
my opinion continual learning process

00:37:12,850 --> 00:37:37,940
any more questions so when you are

00:37:34,550 --> 00:37:39,950
starting to write a project usually in a

00:37:37,940 --> 00:37:43,310
dilemma like what features to include

00:37:39,950 --> 00:37:45,650
initially what to exclude so how do you

00:37:43,310 --> 00:37:47,210
how do you decide on those like some are

00:37:45,650 --> 00:37:49,580
really are some features but might take

00:37:47,210 --> 00:37:51,740
time to code but some are very basic

00:37:49,580 --> 00:37:52,869
which a lot of people might use so how

00:37:51,740 --> 00:37:55,210
do you

00:37:52,869 --> 00:37:57,759
how do you decide on which feature to

00:37:55,210 --> 00:38:00,130
include whether I I think it depends on

00:37:57,759 --> 00:38:02,019
the audience you're going for for me I

00:38:00,130 --> 00:38:04,329
always try to just make everything fit

00:38:02,019 --> 00:38:06,190
the ninety percent of users and ignore

00:38:04,329 --> 00:38:08,380
that other ten percent and I think that

00:38:06,190 --> 00:38:10,630
really goes a long way for me so like

00:38:08,380 --> 00:38:11,980
Kerberos is a good example I mean how

00:38:10,630 --> 00:38:15,940
many people in this room interact with

00:38:11,980 --> 00:38:18,339
kerberos on a daily basis like four so

00:38:15,940 --> 00:38:20,529
it doesn't make sense to to include that

00:38:18,339 --> 00:38:22,690
in the main code base especially because

00:38:20,529 --> 00:38:24,730
the maintenance Burton is so high but

00:38:22,690 --> 00:38:26,920
some simpler things like streaming

00:38:24,730 --> 00:38:28,299
responses I bet very few people also use

00:38:26,920 --> 00:38:30,190
those but they're pretty simple to

00:38:28,299 --> 00:38:33,099
implement and they're very powerful so I

00:38:30,190 --> 00:38:34,599
kind of make a balance between things I

00:38:33,099 --> 00:38:36,369
want to see people using more like I'd

00:38:34,599 --> 00:38:38,499
like to see people using stream lemoore

00:38:36,369 --> 00:38:41,470
so i'll put the time into that to make

00:38:38,499 --> 00:38:44,170
it proper and make an elegant nice to

00:38:41,470 --> 00:38:46,059
try the kind of insight change and then

00:38:44,170 --> 00:38:47,410
for other things that you know like i

00:38:46,059 --> 00:38:49,599
don't think people need to use kerberos

00:38:47,410 --> 00:38:50,920
all the time I'll exclude that and I'll

00:38:49,599 --> 00:38:54,329
try to make it so other people can do

00:38:50,920 --> 00:38:56,440
that instead and I feel like having that

00:38:54,329 --> 00:38:59,170
just kind of keeping in mind what your

00:38:56,440 --> 00:39:01,529
goals are and who you want to use your

00:38:59,170 --> 00:39:07,109
library and what makes sense for them

00:39:01,529 --> 00:39:07,109
kind of helps a lot with that thank you

00:39:14,670 --> 00:39:20,140
okay thanks BP thank you know just who I

00:39:18,339 --> 00:39:23,559
do that is what do what he was just

00:39:20,140 --> 00:39:26,440
asking something that I have seen and I

00:39:23,559 --> 00:39:28,660
often adopted in my code is it put the

00:39:26,440 --> 00:39:30,900
cool features in my library and provide

00:39:28,660 --> 00:39:33,160
a kind of epi so that people can

00:39:30,900 --> 00:39:35,049
develop probably stuff like the kabosh

00:39:33,160 --> 00:39:37,150
thing is a stock node yes in their own

00:39:35,049 --> 00:39:38,739
time and it it doesn't come in the code

00:39:37,150 --> 00:39:41,319
code base but comes with contribs

00:39:38,739 --> 00:39:43,530
absolutely think this is a nice model

00:39:41,319 --> 00:39:45,510
for a note why do they too young

00:39:43,530 --> 00:39:47,160
we're getting a new function absolutely

00:39:45,510 --> 00:39:48,480
i think that that's a I mean you think

00:39:47,160 --> 00:39:49,920
it's a good thing for them to write

00:39:48,480 --> 00:39:52,800
plugins or you mean it's good if you

00:39:49,920 --> 00:39:55,050
make a modeling fluoro and I wrote it

00:39:52,800 --> 00:39:56,970
just awesome yeah a lot of features like

00:39:55,050 --> 00:39:58,470
Indian corn but provider plugging a kind

00:39:56,970 --> 00:40:00,780
of architecture yeah I think that's the

00:39:58,470 --> 00:40:02,520
most valuable part of saying no to

00:40:00,780 --> 00:40:05,070
features is in addition to keeping the

00:40:02,520 --> 00:40:08,580
code simple is it kind of forces you to

00:40:05,070 --> 00:40:10,410
make things composable and and have

00:40:08,580 --> 00:40:12,360
plugins and things like that and it's a

00:40:10,410 --> 00:40:13,440
you know it's really easy to just try to

00:40:12,360 --> 00:40:15,270
support everything and that's how you

00:40:13,440 --> 00:40:17,730
have crazy code bases that get out of

00:40:15,270 --> 00:40:19,590
hand and I think that if you have the

00:40:17,730 --> 00:40:21,300
pluggable you know the plug-in system

00:40:19,590 --> 00:40:23,730
and the way to compose things together

00:40:21,300 --> 00:40:26,940
makes the maintenance bird a lot easier

00:40:23,730 --> 00:40:29,820
it makes users it gives them a lot of

00:40:26,940 --> 00:40:31,650
power as users and if you can keep the

00:40:29,820 --> 00:40:33,330
API simple for the plugin system then

00:40:31,650 --> 00:40:35,430
it's definitely good idea that's

00:40:33,330 --> 00:40:37,770
unfortunately a tricky part it's very

00:40:35,430 --> 00:40:39,750
easy to have like the URL lib to handler

00:40:37,770 --> 00:40:42,780
system which who knows how that works

00:40:39,750 --> 00:40:44,130
but uh you know if you can find a really

00:40:42,780 --> 00:40:45,600
elegant way to try to give it all that

00:40:44,130 --> 00:40:47,790
functionality I think it makes the

00:40:45,600 --> 00:40:49,350
entire library a lot better and it makes

00:40:47,790 --> 00:40:50,900
everyone's experience better I don't

00:40:49,350 --> 00:40:55,920
think of any downsides from it at all

00:40:50,900 --> 00:40:58,580
thanks I think that's it thank you very

00:40:55,920 --> 00:40:58,580

YouTube URL: https://www.youtube.com/watch?v=ri_gJ-Q9GlM


