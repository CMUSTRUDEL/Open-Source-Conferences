Title: Dockerization in the land of Ruby by Amr Abdelwahab | #NoRuKo 2020
Publication date: 2020-09-11
Playlist: #NoRuKo 2020
Description: 
	Whether you have never seen a dockerfile in your life or you have been working on a daily basis with docker in different environments, join this talk to learn some tips and tricks on improving your docker setup all the way from development to live environments passing through continuous integration. 

Amr's is an African Egyptian native who crossed continents to work with his passion in digital environments.  His interests span technology, tech-communities, politics and politics in tech, all enriched through various software engineering roles in Egypt, Hungary and Germany. In Berlin he's a co-organiser of RUG::B and code curious (Formerly known as Rails Girls Berlin)

Welcome to the #NoRuKo conference. A virtual unconference organized by Stichting Ruby NL.

#NoRuKo playlist with all talks and panels: https://www.youtube.com/playlist?list=PL9_A7olkztLlmJIAc567KQgKcMi7-qnjg

Recorded 21th of August, 2020.
NoRuKo website: https://noruko.org/
Stichting Ruby NL website: https://rubynl.org/
Captions: 
	00:00:00,320 --> 00:00:07,759
uh this is a talk by uh by by amer

00:00:03,760 --> 00:00:09,840
i am i was in um what was it

00:00:07,759 --> 00:00:11,599
i don't even know where it was but i saw

00:00:09,840 --> 00:00:15,280
him uh deliver a talk

00:00:11,599 --> 00:00:16,400
and it was i mean it was as if i was on

00:00:15,280 --> 00:00:19,920
a spacecraft

00:00:16,400 --> 00:00:22,560
going many many millions miles per hour

00:00:19,920 --> 00:00:24,720
he is so so fast in his presentation it

00:00:22,560 --> 00:00:27,840
was it was amazing

00:00:24,720 --> 00:00:30,080
he's in a um egyptian native who

00:00:27,840 --> 00:00:31,439
continents uh to work with especially in

00:00:30,080 --> 00:00:33,840
digital environments he

00:00:31,439 --> 00:00:35,200
his interests spanned from technology to

00:00:33,840 --> 00:00:38,239
tech communities to

00:00:35,200 --> 00:00:42,160
politics to politics and text in tech

00:00:38,239 --> 00:00:44,000
and um well that all

00:00:42,160 --> 00:00:45,360
enriched through some various software

00:00:44,000 --> 00:00:49,039
engineering rules in egypt

00:00:45,360 --> 00:00:50,079
uh hungary and uh germany currently he's

00:00:49,039 --> 00:00:52,800
uh he's

00:00:50,079 --> 00:00:54,879
living in germany where he's in berlin a

00:00:52,800 --> 00:00:57,920
co-op

00:00:54,879 --> 00:00:58,960
and uh curious the thing formerly known

00:00:57,920 --> 00:01:02,399
as rails girls

00:00:58,960 --> 00:01:06,479
berlin human

00:01:02,399 --> 00:01:09,040
go for it so i hope everyone can hear me

00:01:06,479 --> 00:01:10,240
and i have to admit this is quite an

00:01:09,040 --> 00:01:13,040
interesting setup

00:01:10,240 --> 00:01:13,920
to be talking to a computer but i hope

00:01:13,040 --> 00:01:16,960
my voice will be

00:01:13,920 --> 00:01:19,520
clear so

00:01:16,960 --> 00:01:20,400
let's start by this uh i as arnold was

00:01:19,520 --> 00:01:22,880
mentioning and thank you

00:01:20,400 --> 00:01:24,400
for the introduction i usually speak

00:01:22,880 --> 00:01:25,520
about different topics and things that

00:01:24,400 --> 00:01:26,960
relate to politics

00:01:25,520 --> 00:01:29,600
things that relate to communities and

00:01:26,960 --> 00:01:32,400
stuff but every topic that i speak about

00:01:29,600 --> 00:01:32,960
usually uh have this slide so this slide

00:01:32,400 --> 00:01:36,320
exists

00:01:32,960 --> 00:01:39,920
in almost any presentation i ever gave

00:01:36,320 --> 00:01:40,640
one question yes you're a bit hard to

00:01:39,920 --> 00:01:43,200
hear

00:01:40,640 --> 00:01:44,479
can you make sure that you're yeah you

00:01:43,200 --> 00:01:47,759
don't have to hold it but

00:01:44,479 --> 00:01:52,640
it was as if you were talking off mike

00:01:47,759 --> 00:01:52,640
okay then let me try this sorry

00:01:52,720 --> 00:01:56,320
is it better now i think it is better

00:01:55,439 --> 00:01:57,600
now yeah

00:01:56,320 --> 00:02:00,320
i hope you don't have to hold it all the

00:01:57,600 --> 00:02:02,079
time no i mean i hope now it's

00:02:00,320 --> 00:02:04,320
it's working properly please tell me

00:02:02,079 --> 00:02:07,280
okay that's good

00:02:04,320 --> 00:02:09,840
sorry for interrupting yes it's okay i

00:02:07,280 --> 00:02:09,840
was never here

00:02:10,080 --> 00:02:15,920
so sorry for this interruption i think

00:02:13,520 --> 00:02:17,599
um like this slide i really have it in

00:02:15,920 --> 00:02:20,879
almost any presentation i ever give

00:02:17,599 --> 00:02:22,640
um technical excellence and technical

00:02:20,879 --> 00:02:24,239
skills are really important like there

00:02:22,640 --> 00:02:26,160
is no doubt about that but i think all

00:02:24,239 --> 00:02:27,520
of us need to always remember

00:02:26,160 --> 00:02:29,840
um that communities are the things that

00:02:27,520 --> 00:02:31,599
matter the most and that when we write

00:02:29,840 --> 00:02:32,239
software we write it with other people

00:02:31,599 --> 00:02:34,239
so we don't

00:02:32,239 --> 00:02:36,160
usually write software alone and we also

00:02:34,239 --> 00:02:37,840
write it for other people to use right

00:02:36,160 --> 00:02:39,680
so a software that is just the software

00:02:37,840 --> 00:02:41,680
that is the best software on earth

00:02:39,680 --> 00:02:43,120
if it's not used by other people if it

00:02:41,680 --> 00:02:45,599
doesn't involve a community it's not

00:02:43,120 --> 00:02:47,440
really an important software

00:02:45,599 --> 00:02:50,160
so i will start by telling a story of to

00:02:47,440 --> 00:02:52,640
my my closest friends alejandra anuri

00:02:50,160 --> 00:02:55,200
and this story goes back i think like

00:02:52,640 --> 00:02:57,519
one month before the corona times where

00:02:55,200 --> 00:02:59,280
i got this call and so they are partners

00:02:57,519 --> 00:03:00,720
and i got this call like a few months

00:02:59,280 --> 00:03:02,560
ago where you already said hey

00:03:00,720 --> 00:03:04,640
i bought the ring and i went like yay

00:03:02,560 --> 00:03:07,120
congrats man that's awesome

00:03:04,640 --> 00:03:08,000
and he said it is ruby and and i was

00:03:07,120 --> 00:03:09,840
like what

00:03:08,000 --> 00:03:11,440
what is this guy talking about there is

00:03:09,840 --> 00:03:12,959
like the gem is ruby it's like

00:03:11,440 --> 00:03:14,480
now i'm even more confused what are you

00:03:12,959 --> 00:03:16,000
talking about and then he's like you

00:03:14,480 --> 00:03:18,159
know the ring the ring this ring has

00:03:16,000 --> 00:03:18,720
this gem that determinate is ruby and he

00:03:18,159 --> 00:03:20,959
said like

00:03:18,720 --> 00:03:22,560
i think it is ruby that got us together

00:03:20,959 --> 00:03:25,360
and i thought the ring should have be

00:03:22,560 --> 00:03:26,799
should have a ruby for that and honestly

00:03:25,360 --> 00:03:28,560
at this moment i remember like sitting

00:03:26,799 --> 00:03:29,680
down and reflecting to myself that like

00:03:28,560 --> 00:03:31,440
we complain a lot

00:03:29,680 --> 00:03:33,280
i specifically complain a lot so if you

00:03:31,440 --> 00:03:34,879
watched other talks of mine like

00:03:33,280 --> 00:03:36,799
my last talk that i delivered is called

00:03:34,879 --> 00:03:38,080
what's wrong with ruby so i complain a

00:03:36,799 --> 00:03:39,280
lot about things

00:03:38,080 --> 00:03:40,879
about the language right like i could

00:03:39,280 --> 00:03:41,519
play a lot about things in the language

00:03:40,879 --> 00:03:44,239
itself

00:03:41,519 --> 00:03:46,159
in the frameworks around ruby about the

00:03:44,239 --> 00:03:46,959
community of ruby sometimes in in many

00:03:46,159 --> 00:03:48,720
cases

00:03:46,959 --> 00:03:50,000
but i just wanted to start this

00:03:48,720 --> 00:03:51,840
presentation by

00:03:50,000 --> 00:03:53,280
saying how grateful i am for belonging

00:03:51,840 --> 00:03:55,360
to this to this community right

00:03:53,280 --> 00:03:56,879
how grateful because the ruby community

00:03:55,360 --> 00:03:59,439
is the community that i learned

00:03:56,879 --> 00:04:01,200
the most from in the past few years and

00:03:59,439 --> 00:04:03,120
also wanted to congratulate my two

00:04:01,200 --> 00:04:05,760
friends here and alejandro

00:04:03,120 --> 00:04:07,599
and give thanks to everyone in this talk

00:04:05,760 --> 00:04:09,200
or who will watch this talk later or

00:04:07,599 --> 00:04:11,840
like anyone from my ruby friends in the

00:04:09,200 --> 00:04:11,840
last few years

00:04:12,480 --> 00:04:18,400
so um who am i my name is amr abdullahab

00:04:16,560 --> 00:04:21,280
i know how hard this name is

00:04:18,400 --> 00:04:22,720
just ignore it it's fine i'm a tech lead

00:04:21,280 --> 00:04:25,520
at a company

00:04:22,720 --> 00:04:27,040
startup based in berlin called turlin if

00:04:25,520 --> 00:04:29,520
you want to know more about it ask me

00:04:27,040 --> 00:04:32,479
later but mostly we do travel tech

00:04:29,520 --> 00:04:34,080
um as arnold i think thankfully

00:04:32,479 --> 00:04:35,520
mentioned i'm a very active member of

00:04:34,080 --> 00:04:37,360
the ruby community in the past few years

00:04:35,520 --> 00:04:39,120
especially in europe so

00:04:37,360 --> 00:04:40,400
i work with code curious which is the

00:04:39,120 --> 00:04:43,280
rails girls berlin

00:04:40,400 --> 00:04:45,680
a chapter the ruby user group in berlin

00:04:43,280 --> 00:04:46,479
i was the chair organizer of yoroku 2017

00:04:45,680 --> 00:04:49,360
in budapest

00:04:46,479 --> 00:04:50,560
um and i was born and raised in in cairo

00:04:49,360 --> 00:04:52,880
in egypt

00:04:50,560 --> 00:04:54,240
and then moved to budapest in 2013 and

00:04:52,880 --> 00:04:57,680
then i moved to germany

00:04:54,240 --> 00:04:59,600
to to berlin in 2017 and

00:04:57,680 --> 00:05:01,280
here comes the question that i always

00:04:59,600 --> 00:05:02,800
ask myself when i have a new idea for a

00:05:01,280 --> 00:05:04,080
new talk why do you think this talk

00:05:02,800 --> 00:05:04,479
should be interesting why do you think

00:05:04,080 --> 00:05:07,600
this

00:05:04,479 --> 00:05:09,600
this talk is relevant and i think

00:05:07,600 --> 00:05:11,199
it is no secret that now we are living

00:05:09,600 --> 00:05:12,479
in this era of distributed systems

00:05:11,199 --> 00:05:14,160
architecture i wouldn't even call it

00:05:12,479 --> 00:05:15,120
microservices even though everyone likes

00:05:14,160 --> 00:05:18,560
to call it like that

00:05:15,120 --> 00:05:20,320
but at least it's a very uncommon thing

00:05:18,560 --> 00:05:21,680
to find a company nowadays that just

00:05:20,320 --> 00:05:23,360
builds a monolith right

00:05:21,680 --> 00:05:25,440
there are some but it's a very uncommon

00:05:23,360 --> 00:05:27,199
thing and this introduces a lot of

00:05:25,440 --> 00:05:29,199
benefits but also introduces a new

00:05:27,199 --> 00:05:31,520
layers of some complexity right

00:05:29,199 --> 00:05:34,160
because in the past you used to need to

00:05:31,520 --> 00:05:36,080
only bootstrap a service once

00:05:34,160 --> 00:05:37,199
twice maybe in the whole company

00:05:36,080 --> 00:05:38,720
lifetime but now

00:05:37,199 --> 00:05:40,479
you're bootstrapping your services

00:05:38,720 --> 00:05:44,240
almost every couple of weeks

00:05:40,479 --> 00:05:45,600
at least and you're also in this era

00:05:44,240 --> 00:05:46,639
where companies grow and and the

00:05:45,600 --> 00:05:49,199
turnover rate in

00:05:46,639 --> 00:05:49,919
in developer companies is really high

00:05:49,199 --> 00:05:52,000
usually

00:05:49,919 --> 00:05:53,600
so you always have a lot of new people

00:05:52,000 --> 00:05:55,360
joining teams a lot of people

00:05:53,600 --> 00:05:57,199
trying to get this new repo and wanting

00:05:55,360 --> 00:05:58,960
to set it up quickly so you need to have

00:05:57,199 --> 00:06:01,680
a much easier development

00:05:58,960 --> 00:06:03,120
setup and we need to kind of stay

00:06:01,680 --> 00:06:04,720
consistent especially in

00:06:03,120 --> 00:06:06,479
such a technical diverse sphere like

00:06:04,720 --> 00:06:08,080
technology is changing super fast

00:06:06,479 --> 00:06:09,280
you want to try out new technologies

00:06:08,080 --> 00:06:10,560
here and there there is this new

00:06:09,280 --> 00:06:11,280
framework this new language that you

00:06:10,560 --> 00:06:12,960
want to try out

00:06:11,280 --> 00:06:15,680
and you need to kind of keep people

00:06:12,960 --> 00:06:18,880
consistent within the same sphere

00:06:15,680 --> 00:06:20,960
and honestly like it's kind of too late

00:06:18,880 --> 00:06:22,400
now to still have such problems as it

00:06:20,960 --> 00:06:24,479
works on my machine but it doesn't work

00:06:22,400 --> 00:06:27,120
on staging like this is kind of a very

00:06:24,479 --> 00:06:28,880
old problem but then the question i

00:06:27,120 --> 00:06:30,319
second after this is like yes this is an

00:06:28,880 --> 00:06:31,360
interesting topic i think people want to

00:06:30,319 --> 00:06:33,199
hear about but

00:06:31,360 --> 00:06:35,840
why me i mean why do i think i will have

00:06:33,199 --> 00:06:37,280
an extra bit to add to this topic

00:06:35,840 --> 00:06:39,600
and i think it's important to start by

00:06:37,280 --> 00:06:41,520
saying like i'm i wasn't on the upside

00:06:39,600 --> 00:06:43,120
of things most of my experience is

00:06:41,520 --> 00:06:45,120
like most of the people i i think in

00:06:43,120 --> 00:06:46,639
this room is is a ruby developer on the

00:06:45,120 --> 00:06:47,840
back end side of things

00:06:46,639 --> 00:06:50,240
so i'm mostly on the application

00:06:47,840 --> 00:06:52,080
development side of things however since

00:06:50,240 --> 00:06:52,400
the very beginning of docker i am a huge

00:06:52,080 --> 00:06:55,360
fan

00:06:52,400 --> 00:06:56,880
of the idea and for me i'm actually a

00:06:55,360 --> 00:06:58,560
huge fan of containerization tools

00:06:56,880 --> 00:07:00,319
because just like ruby

00:06:58,560 --> 00:07:02,240
both of them are about the idea of

00:07:00,319 --> 00:07:03,440
developer happiness i'm making a tool

00:07:02,240 --> 00:07:06,160
that makes you as a developer

00:07:03,440 --> 00:07:08,639
comfortable so we can actually

00:07:06,160 --> 00:07:10,240
produce better better quality and

00:07:08,639 --> 00:07:13,039
because of the rise of the

00:07:10,240 --> 00:07:14,240
developed culture in that past few years

00:07:13,039 --> 00:07:15,919
i think i was

00:07:14,240 --> 00:07:17,599
for some reason really it was a lucky

00:07:15,919 --> 00:07:19,360
thing that i was always the guy

00:07:17,599 --> 00:07:21,039
in the team that people would say like

00:07:19,360 --> 00:07:21,520
yeah we would like to do christ things

00:07:21,039 --> 00:07:24,240
like

00:07:21,520 --> 00:07:25,199
just you know lead such project and i

00:07:24,240 --> 00:07:27,520
have had this in

00:07:25,199 --> 00:07:30,000
several companies in the past few years

00:07:27,520 --> 00:07:31,840
and it's important to say like i did and

00:07:30,000 --> 00:07:33,440
i am still doing probably i might even

00:07:31,840 --> 00:07:34,720
show you things that can be better in

00:07:33,440 --> 00:07:35,840
the tips and tricks that i will show you

00:07:34,720 --> 00:07:38,400
today

00:07:35,840 --> 00:07:39,520
however i think i have one success that

00:07:38,400 --> 00:07:42,639
i'm really proud of

00:07:39,520 --> 00:07:45,039
so i think the people who are usually

00:07:42,639 --> 00:07:46,400
labeled senior engineers right like i

00:07:45,039 --> 00:07:48,240
insist on this label right

00:07:46,400 --> 00:07:50,560
are usually harder to let go of their

00:07:48,240 --> 00:07:52,879
opinions because it's a long experience

00:07:50,560 --> 00:07:55,520
and changing habits is not that easy

00:07:52,879 --> 00:07:56,160
um and i i remember changing someone's

00:07:55,520 --> 00:07:58,160
opinion

00:07:56,160 --> 00:07:59,440
in before changing the locker setup

00:07:58,160 --> 00:08:00,240
because at the beginning he was saying

00:07:59,440 --> 00:08:02,800
things like

00:08:00,240 --> 00:08:04,400
no i i don't like docker i think yeah

00:08:02,800 --> 00:08:05,840
docker can exist but it's a personal

00:08:04,400 --> 00:08:06,720
preference if you want to use it or not

00:08:05,840 --> 00:08:09,199
or whatever

00:08:06,720 --> 00:08:10,319
to then later after changing the setup

00:08:09,199 --> 00:08:12,240
and putting these

00:08:10,319 --> 00:08:13,840
tips and tricks when he went back to one

00:08:12,240 --> 00:08:15,280
of the older projects that didn't have

00:08:13,840 --> 00:08:18,400
docker set up properly

00:08:15,280 --> 00:08:19,919
he said that yeah it took a while and i

00:08:18,400 --> 00:08:21,759
will never ever do anything without

00:08:19,919 --> 00:08:23,360
docker containers again and i feel like

00:08:21,759 --> 00:08:25,039
a dinosaur and stuff like that

00:08:23,360 --> 00:08:26,800
so for me that is the real success is

00:08:25,039 --> 00:08:29,199
making people really pleased with the

00:08:26,800 --> 00:08:31,840
docker setup

00:08:29,199 --> 00:08:33,519
so a bit of theory right like

00:08:31,840 --> 00:08:34,959
containerization in general not just

00:08:33,519 --> 00:08:37,839
docker all these tools

00:08:34,959 --> 00:08:39,120
what what is it about it is simply you

00:08:37,839 --> 00:08:40,719
have your application that has

00:08:39,120 --> 00:08:42,560
some requirements and you are taking it

00:08:40,719 --> 00:08:45,200
in an isolated space

00:08:42,560 --> 00:08:46,320
outside your main machine outside where

00:08:45,200 --> 00:08:47,360
it's running so regardless of the

00:08:46,320 --> 00:08:49,680
machine it's running on

00:08:47,360 --> 00:08:52,000
it has everything it requires to run in

00:08:49,680 --> 00:08:53,760
its this isolated space

00:08:52,000 --> 00:08:55,760
and of course this should guarantee that

00:08:53,760 --> 00:08:57,200
regardless of where which machine it's

00:08:55,760 --> 00:08:58,560
working on it will work the same

00:08:57,200 --> 00:09:00,399
everywhere

00:08:58,560 --> 00:09:02,000
and these are the promises they usually

00:09:00,399 --> 00:09:02,959
promise like this actually comes from

00:09:02,000 --> 00:09:05,519
the

00:09:02,959 --> 00:09:07,920
website of docker i think that you are

00:09:05,519 --> 00:09:10,000
able to onboard faster and you're going

00:09:07,920 --> 00:09:11,680
to stop wasting hours trying to set up

00:09:10,000 --> 00:09:13,440
development environments

00:09:11,680 --> 00:09:14,800
and that you are able to spin up new

00:09:13,440 --> 00:09:17,279
instances and make copies of your

00:09:14,800 --> 00:09:20,160
production in your local machine

00:09:17,279 --> 00:09:22,080
and that supposedly it enables you to

00:09:20,160 --> 00:09:23,920
have polyglot development because you

00:09:22,080 --> 00:09:24,720
know you have the same abstraction over

00:09:23,920 --> 00:09:27,600
the same

00:09:24,720 --> 00:09:28,880
different tools and they also talk about

00:09:27,600 --> 00:09:30,000
eliminating the environment

00:09:28,880 --> 00:09:32,000
inconsistencies

00:09:30,000 --> 00:09:34,160
the whole work on my machine thing and

00:09:32,000 --> 00:09:37,279
even elevating concerns over application

00:09:34,160 --> 00:09:37,839
security in my opinion these are great

00:09:37,279 --> 00:09:39,680
like this

00:09:37,839 --> 00:09:41,120
this basically matches the exact layers

00:09:39,680 --> 00:09:43,200
of complexity that i was mentioning in

00:09:41,120 --> 00:09:44,640
the in the rise of of the street systems

00:09:43,200 --> 00:09:47,760
architectures

00:09:44,640 --> 00:09:49,600
but and docker sincerely is conceptually

00:09:47,760 --> 00:09:50,080
a very easy tool if you think about it

00:09:49,600 --> 00:09:53,360
it is

00:09:50,080 --> 00:09:55,600
docker files have around 12

00:09:53,360 --> 00:09:57,600
commands and mostly people use six of

00:09:55,600 --> 00:09:59,680
them so it's not about the syntax it's

00:09:57,600 --> 00:10:00,640
not about like how hard or complex the

00:09:59,680 --> 00:10:02,880
tool is

00:10:00,640 --> 00:10:04,880
however it again boils down to people

00:10:02,880 --> 00:10:06,480
and communities like people

00:10:04,880 --> 00:10:07,920
it's not just about how easy the tool is

00:10:06,480 --> 00:10:10,160
but the people and the communities and

00:10:07,920 --> 00:10:12,560
how communities deal with this tool

00:10:10,160 --> 00:10:14,160
and i still honestly believe that there

00:10:12,560 --> 00:10:16,160
is a steep learning curve

00:10:14,160 --> 00:10:18,160
especially for application developers

00:10:16,160 --> 00:10:20,000
that have been there for a while before

00:10:18,160 --> 00:10:20,880
docker and have their own setup and have

00:10:20,000 --> 00:10:22,880
their own

00:10:20,880 --> 00:10:25,120
way how their habits how the thing is

00:10:22,880 --> 00:10:28,480
going on as i said

00:10:25,120 --> 00:10:30,720
changing a habit is never an easy thing

00:10:28,480 --> 00:10:32,480
and honestly especially in the ruby

00:10:30,720 --> 00:10:35,600
sphere this problem exists

00:10:32,480 --> 00:10:37,519
we have a massive massive massive amount

00:10:35,600 --> 00:10:38,640
of outdated and wrong resources about

00:10:37,519 --> 00:10:41,040
docker setups

00:10:38,640 --> 00:10:42,720
like so many times i have read articles

00:10:41,040 --> 00:10:43,600
blog posts even talks in huge

00:10:42,720 --> 00:10:45,600
conferences

00:10:43,600 --> 00:10:47,760
where the where where the tips that were

00:10:45,600 --> 00:10:49,360
shared maybe were good but they were

00:10:47,760 --> 00:10:50,880
good maybe a few years ago and there are

00:10:49,360 --> 00:10:52,880
already features in docker that gets

00:10:50,880 --> 00:10:55,120
over this

00:10:52,880 --> 00:10:56,640
finally and i think this is the most the

00:10:55,120 --> 00:10:58,800
biggest problem i see

00:10:56,640 --> 00:11:00,000
with with locker uh in the in the past

00:10:58,800 --> 00:11:02,320
few years especially in the

00:11:00,000 --> 00:11:03,360
ruby sphere is that docker offers some

00:11:02,320 --> 00:11:05,440
things and

00:11:03,360 --> 00:11:06,399
we have some requirements as application

00:11:05,440 --> 00:11:09,839
developers

00:11:06,399 --> 00:11:11,519
right and honestly these things were

00:11:09,839 --> 00:11:13,440
never connected correctly so in my

00:11:11,519 --> 00:11:15,120
opinion what people usually did was

00:11:13,440 --> 00:11:17,600
uh we would like to try out this new

00:11:15,120 --> 00:11:20,000
docker thing so let's dockerize the

00:11:17,600 --> 00:11:21,839
the project and they just never thought

00:11:20,000 --> 00:11:22,800
about how they really want to use it and

00:11:21,839 --> 00:11:25,680
how can they use

00:11:22,800 --> 00:11:27,120
docker as a tool to fulfill our own

00:11:25,680 --> 00:11:29,279
requirements

00:11:27,120 --> 00:11:31,279
so i think i thought again like what are

00:11:29,279 --> 00:11:33,120
our usual requirements nowadays

00:11:31,279 --> 00:11:34,480
our usual requirements is as i said that

00:11:33,120 --> 00:11:35,760
this is the third time i have a slide

00:11:34,480 --> 00:11:38,240
that mentions this right

00:11:35,760 --> 00:11:38,800
and easy to set up and use setup is one

00:11:38,240 --> 00:11:40,720
thing so

00:11:38,800 --> 00:11:42,160
yes easy to set up so i just got a new

00:11:40,720 --> 00:11:44,240
computer i press one link

00:11:42,160 --> 00:11:45,200
but use on daily basis is a very

00:11:44,240 --> 00:11:47,519
important thing

00:11:45,200 --> 00:11:48,399
so it's not just about having an easy

00:11:47,519 --> 00:11:51,040
starting up

00:11:48,399 --> 00:11:52,959
the server but being able to run daily

00:11:51,040 --> 00:11:54,320
commands being able to do everything you

00:11:52,959 --> 00:11:56,959
are usually used to do on the

00:11:54,320 --> 00:11:58,480
development environment in an easy way

00:11:56,959 --> 00:12:00,320
and of course we need to have like a

00:11:58,480 --> 00:12:01,200
build server like a ci right that will

00:12:00,320 --> 00:12:03,519
run the tests

00:12:01,200 --> 00:12:05,360
and lint for every commit usually you

00:12:03,519 --> 00:12:05,839
want to have the same build server able

00:12:05,360 --> 00:12:08,959
to

00:12:05,839 --> 00:12:11,120
build the live you know

00:12:08,959 --> 00:12:12,240
image and then push it to to deploy it

00:12:11,120 --> 00:12:14,320
on on mergers

00:12:12,240 --> 00:12:16,480
and you have a live stage that can scale

00:12:14,320 --> 00:12:17,920
easily so it has one thing you can make

00:12:16,480 --> 00:12:18,320
it you can make a two you can make it

00:12:17,920 --> 00:12:19,839
three

00:12:18,320 --> 00:12:22,000
i think these are really our four

00:12:19,839 --> 00:12:23,519
requirements in every uh company

00:12:22,000 --> 00:12:25,200
and i think as i mentioned we need to

00:12:23,519 --> 00:12:26,399
make connections we need to remember

00:12:25,200 --> 00:12:28,160
what are our requirements

00:12:26,399 --> 00:12:29,839
and then see what docker offers to

00:12:28,160 --> 00:12:32,240
fulfill these requirements not the

00:12:29,839 --> 00:12:32,240
opposite

00:12:32,720 --> 00:12:36,720
so let's get a bit to some technical

00:12:35,920 --> 00:12:38,800
side right like

00:12:36,720 --> 00:12:39,920
i will speak about a development setup

00:12:38,800 --> 00:12:41,600
of what i call a

00:12:39,920 --> 00:12:43,040
simple rails application and by simple

00:12:41,600 --> 00:12:44,079
here i don't mean like to oversimplify

00:12:43,040 --> 00:12:45,440
but like

00:12:44,079 --> 00:12:47,040
one of the most common rails

00:12:45,440 --> 00:12:47,600
applications you will have nowadays

00:12:47,040 --> 00:12:49,920
which is

00:12:47,600 --> 00:12:51,040
simply a an application that has at

00:12:49,920 --> 00:12:52,880
least

00:12:51,040 --> 00:12:54,079
four processes usually running if you

00:12:52,880 --> 00:12:54,399
want to have it running right like you

00:12:54,079 --> 00:12:56,639
have

00:12:54,399 --> 00:12:58,399
a web server you have a puma server that

00:12:56,639 --> 00:13:01,760
is serving your your requests

00:12:58,399 --> 00:13:03,600
respond and you have usually a database

00:13:01,760 --> 00:13:06,160
server running like say postgres

00:13:03,600 --> 00:13:07,519
or nosql database or mysql or whatsoever

00:13:06,160 --> 00:13:09,120
database you choose but you still have a

00:13:07,519 --> 00:13:11,279
process that's running and

00:13:09,120 --> 00:13:13,200
your web server needs to have access to

00:13:11,279 --> 00:13:15,200
this process somehow

00:13:13,200 --> 00:13:16,560
you also most of the applications now

00:13:15,200 --> 00:13:18,160
they would have a background

00:13:16,560 --> 00:13:19,760
worker process like the other talk now

00:13:18,160 --> 00:13:22,079
is talking about sidekiq for example so

00:13:19,760 --> 00:13:23,920
yeah you would have a sidekick there

00:13:22,079 --> 00:13:25,680
uh process running and you will always

00:13:23,920 --> 00:13:26,639
have a queue right like red is let's say

00:13:25,680 --> 00:13:29,440
for example where

00:13:26,639 --> 00:13:30,399
you're dumping the web server is dumping

00:13:29,440 --> 00:13:33,200
the

00:13:30,399 --> 00:13:34,000
the job there in the queue and then the

00:13:33,200 --> 00:13:36,639
background job

00:13:34,000 --> 00:13:37,120
is processing this from that queue so

00:13:36,639 --> 00:13:39,360
this is

00:13:37,120 --> 00:13:41,279
really nowadays kind of the most common

00:13:39,360 --> 00:13:43,519
or most common race applications would

00:13:41,279 --> 00:13:45,360
have at least those four components

00:13:43,519 --> 00:13:47,040
and as i mentioned what are the

00:13:45,360 --> 00:13:48,240
day-to-day commands like this is this

00:13:47,040 --> 00:13:50,000
sounds uh

00:13:48,240 --> 00:13:52,320
like weird that they have to repeat this

00:13:50,000 --> 00:13:54,160
but honestly people often forget that

00:13:52,320 --> 00:13:55,839
we run tests right like when we are in

00:13:54,160 --> 00:13:57,519
development i need to have an easy way

00:13:55,839 --> 00:13:59,199
to run tests without docker setup

00:13:57,519 --> 00:14:02,320
without any other setup you just run

00:13:59,199 --> 00:14:03,680
rspec or mini test or whatever you just

00:14:02,320 --> 00:14:05,120
have one command and you're running

00:14:03,680 --> 00:14:06,720
tests

00:14:05,120 --> 00:14:08,480
you are running linters so let's say

00:14:06,720 --> 00:14:10,480
robocop right you're running rake tasks

00:14:08,480 --> 00:14:12,880
you're running rail generators

00:14:10,480 --> 00:14:14,240
you are updating dependencies so usually

00:14:12,880 --> 00:14:15,120
in the workflow you are just changing

00:14:14,240 --> 00:14:17,440
the gem file

00:14:15,120 --> 00:14:19,279
and you are basically running bundle

00:14:17,440 --> 00:14:20,959
install and it updates

00:14:19,279 --> 00:14:22,639
you have the migration management so you

00:14:20,959 --> 00:14:24,399
create a new migration you run the

00:14:22,639 --> 00:14:26,800
migration you're all backup migration

00:14:24,399 --> 00:14:28,320
all these kind of things the simple one

00:14:26,800 --> 00:14:29,760
is starting a development server and

00:14:28,320 --> 00:14:31,519
here i'm not just talking about starting

00:14:29,760 --> 00:14:32,800
the web server but starting the whole

00:14:31,519 --> 00:14:34,399
thing right like starting the four

00:14:32,800 --> 00:14:35,600
processes at the same time making sure

00:14:34,399 --> 00:14:37,440
that the whole application is running in

00:14:35,600 --> 00:14:39,760
your development environment

00:14:37,440 --> 00:14:41,199
and you are sometimes also firing up the

00:14:39,760 --> 00:14:42,560
development console because you want to

00:14:41,199 --> 00:14:44,639
try something out and you want to load

00:14:42,560 --> 00:14:47,440
your environment in there

00:14:44,639 --> 00:14:49,279
so for me my setup has two constraints

00:14:47,440 --> 00:14:51,760
and two main constraints

00:14:49,279 --> 00:14:53,040
first one is i am minimizing the changes

00:14:51,760 --> 00:14:55,279
in your day-to-day commands

00:14:53,040 --> 00:14:57,199
so what you are used to should still

00:14:55,279 --> 00:14:58,320
more or less work without you realizing

00:14:57,199 --> 00:15:00,480
without you caring

00:14:58,320 --> 00:15:02,720
if this is docker or no docker setup it

00:15:00,480 --> 00:15:04,639
should still feel the same

00:15:02,720 --> 00:15:07,360
the second thing is honestly hiding the

00:15:04,639 --> 00:15:09,040
setup complexity because

00:15:07,360 --> 00:15:10,880
i don't i don't want junior junior

00:15:09,040 --> 00:15:12,000
developer to care if this is running on

00:15:10,880 --> 00:15:13,600
docker or this is running

00:15:12,000 --> 00:15:15,519
in your local machine or whatever i just

00:15:13,600 --> 00:15:18,240
want them to be able to

00:15:15,519 --> 00:15:18,880
set up the application quickly develop

00:15:18,240 --> 00:15:20,560
something

00:15:18,880 --> 00:15:22,160
push code i don't want them to every

00:15:20,560 --> 00:15:23,760
single time need to learn about docker

00:15:22,160 --> 00:15:25,279
and understand the docker commands and

00:15:23,760 --> 00:15:27,760
everything like that

00:15:25,279 --> 00:15:29,440
so for that for development you need to

00:15:27,760 --> 00:15:31,600
rely on the three important tools you

00:15:29,440 --> 00:15:33,680
cannot just rely on having a docker file

00:15:31,600 --> 00:15:35,440
and this is one of the biggest

00:15:33,680 --> 00:15:37,120
in my opinion biggest mistakes in most

00:15:35,440 --> 00:15:37,680
of tutorials is that it's trying to

00:15:37,120 --> 00:15:40,880
build

00:15:37,680 --> 00:15:43,120
a docker container that will just run

00:15:40,880 --> 00:15:44,800
naturally in development and that's

00:15:43,120 --> 00:15:46,639
that's not really necessary

00:15:44,800 --> 00:15:48,639
so docker file will enable you to set up

00:15:46,639 --> 00:15:50,079
this docker image this docker template

00:15:48,639 --> 00:15:52,480
right the template that every time you

00:15:50,079 --> 00:15:55,279
are creating a container from

00:15:52,480 --> 00:15:56,560
uh will run your application in the

00:15:55,279 --> 00:15:58,959
second thing that we will use

00:15:56,560 --> 00:16:00,720
is docker compose docker compose is this

00:15:58,959 --> 00:16:02,399
tool that comes from with docker

00:16:00,720 --> 00:16:04,639
installed with locker so it's nothing

00:16:02,399 --> 00:16:06,480
different or nothing extra that enables

00:16:04,639 --> 00:16:08,639
you to orchestrate how this container

00:16:06,480 --> 00:16:10,320
that you will build out of this image

00:16:08,639 --> 00:16:12,639
deal with the host machine right how

00:16:10,320 --> 00:16:13,839
will it react with the machine it's

00:16:12,639 --> 00:16:16,000
running in

00:16:13,839 --> 00:16:18,079
also it enables you to orchestrate how

00:16:16,000 --> 00:16:19,680
it deals with other docker containers

00:16:18,079 --> 00:16:21,199
right so this is this is really cool

00:16:19,680 --> 00:16:22,800
because you have the ability to

00:16:21,199 --> 00:16:25,199
use things from your machine like the

00:16:22,800 --> 00:16:26,240
file system or the http ports

00:16:25,199 --> 00:16:28,160
and you also have the ability to

00:16:26,240 --> 00:16:29,440
communicate between processes like i

00:16:28,160 --> 00:16:31,600
mentioned the web server needs to

00:16:29,440 --> 00:16:34,079
communicate to

00:16:31,600 --> 00:16:35,360
the database and so on finally and i

00:16:34,079 --> 00:16:37,839
think

00:16:35,360 --> 00:16:39,279
often like lately started to become more

00:16:37,839 --> 00:16:41,040
common but in the past

00:16:39,279 --> 00:16:43,120
ruby developers didn't really make use

00:16:41,040 --> 00:16:44,959
of make files but i believe that we need

00:16:43,120 --> 00:16:46,800
to have abstractions

00:16:44,959 --> 00:16:48,480
on the top of any setup we have because

00:16:46,800 --> 00:16:50,240
today docker is the thing who knows what

00:16:48,480 --> 00:16:51,920
can be the thing in two three years from

00:16:50,240 --> 00:16:55,839
now

00:16:51,920 --> 00:16:57,440
so let's start by the docker file

00:16:55,839 --> 00:16:59,279
i believe this is the one as i mentioned

00:16:57,440 --> 00:17:00,160
that has a lot of wrong examples on the

00:16:59,279 --> 00:17:02,639
internet

00:17:00,160 --> 00:17:04,959
especially that a lot of them say that

00:17:02,639 --> 00:17:08,400
this is tips and tricks that focuses on

00:17:04,959 --> 00:17:10,000
security or performance in development

00:17:08,400 --> 00:17:12,079
this is not what development is really

00:17:10,000 --> 00:17:14,799
about i haven't

00:17:12,079 --> 00:17:16,319
seen much focusing on making it better

00:17:14,799 --> 00:17:17,919
for a developer i haven't seen much

00:17:16,319 --> 00:17:18,880
focusing on developer happiness or

00:17:17,919 --> 00:17:22,319
usability

00:17:18,880 --> 00:17:23,600
in development environment and honestly

00:17:22,319 --> 00:17:25,360
a lot of

00:17:23,600 --> 00:17:27,039
ninety percent of the examples i usually

00:17:25,360 --> 00:17:28,480
see are from the era before what's

00:17:27,039 --> 00:17:31,039
called the multi-stage

00:17:28,480 --> 00:17:32,160
docker files and that's why i'm pretty

00:17:31,039 --> 00:17:34,880
sure many of you

00:17:32,160 --> 00:17:36,559
in in your companies i can even bet have

00:17:34,880 --> 00:17:38,000
two docker files one docker file for

00:17:36,559 --> 00:17:38,640
development and one docker file for

00:17:38,000 --> 00:17:41,760
production

00:17:38,640 --> 00:17:42,960
which used to be the builder pattern i

00:17:41,760 --> 00:17:44,880
don't think you need that anymore

00:17:42,960 --> 00:17:46,559
because there is such thing as the

00:17:44,880 --> 00:17:49,039
multi-stage builds multi-stage locker

00:17:46,559 --> 00:17:50,320
file which goes like this right at the

00:17:49,039 --> 00:17:52,240
beginning you can say that

00:17:50,320 --> 00:17:53,840
this stage that i'm starting to define

00:17:52,240 --> 00:17:55,520
is going to be the development stage

00:17:53,840 --> 00:17:57,280
and as i will later on show you in this

00:17:55,520 --> 00:17:58,799
talk you can take from

00:17:57,280 --> 00:18:00,880
this development stage and go in a

00:17:58,799 --> 00:18:01,280
branch for let's say ci and then you can

00:18:00,880 --> 00:18:02,880
take

00:18:01,280 --> 00:18:04,799
and go to another branch for like

00:18:02,880 --> 00:18:06,480
production this is something that you

00:18:04,799 --> 00:18:09,120
can do with docker files around nowadays

00:18:06,480 --> 00:18:11,840
naming stages

00:18:09,120 --> 00:18:12,480
um as i said the development stage in my

00:18:11,840 --> 00:18:14,559
opinion

00:18:12,480 --> 00:18:16,160
should build an image that enables you

00:18:14,559 --> 00:18:17,760
to run this day-to-day commands it

00:18:16,160 --> 00:18:18,480
should not build an image that will run

00:18:17,760 --> 00:18:21,120
on its own

00:18:18,480 --> 00:18:22,480
no with the ability of having another

00:18:21,120 --> 00:18:24,480
make file and having

00:18:22,480 --> 00:18:26,000
another docker compose file it should

00:18:24,480 --> 00:18:27,600
enable you to run all these day-to-day

00:18:26,000 --> 00:18:28,960
commands without needing to install

00:18:27,600 --> 00:18:32,080
anything else on your machine

00:18:28,960 --> 00:18:33,520
docker second thing i want to talk about

00:18:32,080 --> 00:18:35,200
is this base image right

00:18:33,520 --> 00:18:37,280
in docker for for people who don't know

00:18:35,200 --> 00:18:39,520
docker at all you can start from

00:18:37,280 --> 00:18:41,360
a base image something that is already

00:18:39,520 --> 00:18:44,000
have some stuff installed on it

00:18:41,360 --> 00:18:45,760
and docker docker hub which is like a

00:18:44,000 --> 00:18:47,039
repository with a lot of

00:18:45,760 --> 00:18:48,880
an online episode there's a lot of

00:18:47,039 --> 00:18:49,840
images that are available there has a

00:18:48,880 --> 00:18:52,160
lot of them

00:18:49,840 --> 00:18:52,960
however i would like to give my first

00:18:52,160 --> 00:18:55,039
tip here

00:18:52,960 --> 00:18:56,000
make sure to not use public images for

00:18:55,039 --> 00:18:58,720
critical projects

00:18:56,000 --> 00:18:59,200
even if you put a tag a specific tag

00:18:58,720 --> 00:19:01,280
because

00:18:59,200 --> 00:19:03,520
docker hub enables the author of the

00:19:01,280 --> 00:19:05,120
repo to actually override this tag

00:19:03,520 --> 00:19:06,799
a problem that i have seen multiple

00:19:05,120 --> 00:19:09,120
times even in the ruby

00:19:06,799 --> 00:19:12,160
base image that sometimes i think a year

00:19:09,120 --> 00:19:12,960
ago ruby base image of 2.6.3 got broken

00:19:12,160 --> 00:19:14,160
in production

00:19:12,960 --> 00:19:15,919
and then you know everyone that was

00:19:14,160 --> 00:19:16,480
using the public image was wasn't a

00:19:15,919 --> 00:19:18,640
problem

00:19:16,480 --> 00:19:19,600
what i would recommend is have your own

00:19:18,640 --> 00:19:21,360
repository

00:19:19,600 --> 00:19:23,520
where you basically copy the base image

00:19:21,360 --> 00:19:25,200
and then update it every once in a while

00:19:23,520 --> 00:19:26,799
and then maybe even you can add more

00:19:25,200 --> 00:19:29,919
layers because you have it in your

00:19:26,799 --> 00:19:32,320
organization always with this

00:19:29,919 --> 00:19:33,200
the second thing is this is also a very

00:19:32,320 --> 00:19:34,880
important

00:19:33,200 --> 00:19:36,640
thing a lot of the tutorials would ask

00:19:34,880 --> 00:19:38,080
you for a normal rails application to

00:19:36,640 --> 00:19:40,240
just use a

00:19:38,080 --> 00:19:41,679
normal ruby based image so what's a base

00:19:40,240 --> 00:19:42,160
image a base image as i mentioned is

00:19:41,679 --> 00:19:45,280
just

00:19:42,160 --> 00:19:47,600
a container that has already

00:19:45,280 --> 00:19:50,240
linux distro installed in it and then it

00:19:47,600 --> 00:19:50,240
has also

00:19:50,400 --> 00:19:53,760
like ruby installed in it and bundler

00:19:51,840 --> 00:19:55,280
has told it and few things the alpine

00:19:53,760 --> 00:19:57,120
images uses a

00:19:55,280 --> 00:19:58,480
linux distro which is really small and

00:19:57,120 --> 00:19:59,760
you want your docker

00:19:58,480 --> 00:20:01,280
image to be really small because of

00:19:59,760 --> 00:20:01,840
security reasons because of performance

00:20:01,280 --> 00:20:03,600
reasons

00:20:01,840 --> 00:20:06,320
because of even coast reasons if you are

00:20:03,600 --> 00:20:09,200
uploading your application somewhere

00:20:06,320 --> 00:20:10,480
so in at least in my experience most of

00:20:09,200 --> 00:20:12,080
the times an alpine image

00:20:10,480 --> 00:20:14,240
is more than enough you need to install

00:20:12,080 --> 00:20:16,080
few more things but that's it most of

00:20:14,240 --> 00:20:17,840
the times an alpine image would work

00:20:16,080 --> 00:20:19,600
of course there are exceptional cases

00:20:17,840 --> 00:20:22,559
but try at least to go for an alpine

00:20:19,600 --> 00:20:25,200
image as much as you can

00:20:22,559 --> 00:20:26,400
so yes now we have the linux distro that

00:20:25,200 --> 00:20:28,480
has the

00:20:26,400 --> 00:20:30,559
ruby installed on the top of it right

00:20:28,480 --> 00:20:32,320
and it has some

00:20:30,559 --> 00:20:34,480
the bundler installed on it and now you

00:20:32,320 --> 00:20:36,480
want to install your gems

00:20:34,480 --> 00:20:38,000
usually your gems requires specific

00:20:36,480 --> 00:20:40,320
dependencies to install

00:20:38,000 --> 00:20:41,919
themselves right for example uh you need

00:20:40,320 --> 00:20:45,200
lib xml

00:20:41,919 --> 00:20:46,960
for local gear to install right or you

00:20:45,200 --> 00:20:50,159
need a pg client for

00:20:46,960 --> 00:20:52,000
uh for postgres uh jam to install so you

00:20:50,159 --> 00:20:53,760
need sometimes some native extensions

00:20:52,000 --> 00:20:56,080
installed on this machine

00:20:53,760 --> 00:20:57,760
so usually the docker file second line

00:20:56,080 --> 00:20:58,880
would usually look something around like

00:20:57,760 --> 00:21:01,360
this right so you are

00:20:58,880 --> 00:21:02,960
adding these libraries that you need and

00:21:01,360 --> 00:21:04,320
here is another tip that i would

00:21:02,960 --> 00:21:06,799
recommend

00:21:04,320 --> 00:21:08,559
hide the underlying setup don't make

00:21:06,799 --> 00:21:09,600
developers need to change the docker

00:21:08,559 --> 00:21:11,760
file often because

00:21:09,600 --> 00:21:13,360
developers when they especially someone

00:21:11,760 --> 00:21:14,640
who's not familiar with docker when they

00:21:13,360 --> 00:21:15,919
want to

00:21:14,640 --> 00:21:18,159
like change the docker file they get a

00:21:15,919 --> 00:21:19,120
bit confused so what i usually do is

00:21:18,159 --> 00:21:21,039
create a file

00:21:19,120 --> 00:21:22,880
called dot build dependencies or dot

00:21:21,039 --> 00:21:24,480
build depths and this file

00:21:22,880 --> 00:21:26,480
lives in your project and it has all

00:21:24,480 --> 00:21:28,000
these dependencies that you need to have

00:21:26,480 --> 00:21:29,520
and then in this case you don't need to

00:21:28,000 --> 00:21:31,039
change the docker file and you just have

00:21:29,520 --> 00:21:33,200
those two lines the first line will

00:21:31,039 --> 00:21:35,679
basically copy this into your container

00:21:33,200 --> 00:21:37,120
so that in so that it will cache it

00:21:35,679 --> 00:21:38,559
unless it changes if it changes it

00:21:37,120 --> 00:21:40,799
invalidates the cache

00:21:38,559 --> 00:21:42,840
and then it runs the installation of

00:21:40,799 --> 00:21:44,640
every dependency in this build that's

00:21:42,840 --> 00:21:46,960
fine

00:21:44,640 --> 00:21:48,960
and then comes the for me honestly the

00:21:46,960 --> 00:21:50,559
biggest mistake in every

00:21:48,960 --> 00:21:53,200
almost every tutorial including some of

00:21:50,559 --> 00:21:56,240
the official stories that comes from doc

00:21:53,200 --> 00:21:57,840
and as i said most of the dockerfiles

00:21:56,240 --> 00:22:00,159
setups i have seen in development

00:21:57,840 --> 00:22:02,159
environment right usually start by

00:22:00,159 --> 00:22:04,799
trying to install the bundle

00:22:02,159 --> 00:22:06,559
in the docker cache by that i mean you

00:22:04,799 --> 00:22:08,880
will often see those two lines in your

00:22:06,559 --> 00:22:10,320
docker file for development environment

00:22:08,880 --> 00:22:12,159
those two lines does the following the

00:22:10,320 --> 00:22:13,679
first line is basically copying the gem

00:22:12,159 --> 00:22:16,799
files from your host machine

00:22:13,679 --> 00:22:18,240
to your your container or to your image

00:22:16,799 --> 00:22:20,799
and then they are basically running

00:22:18,240 --> 00:22:22,720
bundle install so what will happen in

00:22:20,799 --> 00:22:25,360
this case is that every single time

00:22:22,720 --> 00:22:26,799
you are changing the gem file you will

00:22:25,360 --> 00:22:28,159
have to rebuild the image

00:22:26,799 --> 00:22:29,840
right so you have to rebuild the

00:22:28,159 --> 00:22:30,960
template where your container starts

00:22:29,840 --> 00:22:32,960
from

00:22:30,960 --> 00:22:34,400
and what will happen also is that when

00:22:32,960 --> 00:22:35,520
you are rebuilding this time it will

00:22:34,400 --> 00:22:38,559
invalidate the cache

00:22:35,520 --> 00:22:40,000
so it will remove the gem file copy the

00:22:38,559 --> 00:22:41,840
new gem file and then remove the whole

00:22:40,000 --> 00:22:43,760
bundle that you just installed and then

00:22:41,840 --> 00:22:45,120
recopy reinstall the whole bundle from

00:22:43,760 --> 00:22:47,840
scratch this

00:22:45,120 --> 00:22:48,720
honestly has always been the thing that

00:22:47,840 --> 00:22:50,000
developers

00:22:48,720 --> 00:22:51,600
complained about when they when they

00:22:50,000 --> 00:22:54,640
tried docker and development especially

00:22:51,600 --> 00:22:56,720
in the ruby sphere so

00:22:54,640 --> 00:22:57,760
my recommendation is to install in

00:22:56,720 --> 00:22:59,679
development right in

00:22:57,760 --> 00:23:01,200
to install the bundle in container

00:22:59,679 --> 00:23:03,200
runtime so you have the image right the

00:23:01,200 --> 00:23:05,600
template that will not have a bundle at

00:23:03,200 --> 00:23:07,200
all and then every time you are starting

00:23:05,600 --> 00:23:08,000
a new container you are installing the

00:23:07,200 --> 00:23:10,000
bun builder

00:23:08,000 --> 00:23:11,280
and then you are using a cache which i

00:23:10,000 --> 00:23:13,200
will show you later

00:23:11,280 --> 00:23:15,280
so that it is it caches it in your file

00:23:13,200 --> 00:23:17,600
system how to do that

00:23:15,280 --> 00:23:19,120
that goes through two steps first step

00:23:17,600 --> 00:23:20,000
is in your docker file

00:23:19,120 --> 00:23:21,760
you are going to set up some

00:23:20,000 --> 00:23:23,360
environmental variables that's it you

00:23:21,760 --> 00:23:25,520
are going to say that the bundle path

00:23:23,360 --> 00:23:26,880
should be slash bundle bundle bin should

00:23:25,520 --> 00:23:28,720
be this gem home should be this and

00:23:26,880 --> 00:23:31,039
attach this to your path

00:23:28,720 --> 00:23:32,559
what this is doing is telling to your

00:23:31,039 --> 00:23:34,320
your machine to your container any

00:23:32,559 --> 00:23:35,919
container that starts out of this image

00:23:34,320 --> 00:23:37,760
whenever you run bundle install it will

00:23:35,919 --> 00:23:38,240
try to install your bundle in slash

00:23:37,760 --> 00:23:40,799
bundle

00:23:38,240 --> 00:23:42,320
and that's it right so okay this doesn't

00:23:40,799 --> 00:23:43,120
change anything because then every time

00:23:42,320 --> 00:23:44,640
i

00:23:43,120 --> 00:23:46,240
delete that container every time i stop

00:23:44,640 --> 00:23:47,919
that container i lose the bundle and

00:23:46,240 --> 00:23:50,080
then i'm starting over

00:23:47,919 --> 00:23:52,559
so here comes the second step in docker

00:23:50,080 --> 00:23:55,200
compose you have the ability to

00:23:52,559 --> 00:23:56,159
mount volumes by mounting volumes you

00:23:55,200 --> 00:23:58,320
are saying that

00:23:56,159 --> 00:24:00,000
everything inside that container that is

00:23:58,320 --> 00:24:02,240
going to slash bundle

00:24:00,000 --> 00:24:03,919
should be installed to a docker volume

00:24:02,240 --> 00:24:05,120
which what is a docker volume a docker

00:24:03,919 --> 00:24:06,799
volume is some

00:24:05,120 --> 00:24:08,480
some place in your file system managed

00:24:06,799 --> 00:24:10,080
by docker damien you don't even need to

00:24:08,480 --> 00:24:11,520
care about all you need to do is just

00:24:10,080 --> 00:24:14,080
tell it that i need a new

00:24:11,520 --> 00:24:15,679
volume called bundle and you are saying

00:24:14,080 --> 00:24:17,200
that anything inside this container

00:24:15,679 --> 00:24:19,440
should go to this bundle

00:24:17,200 --> 00:24:21,279
this way every single time you are

00:24:19,440 --> 00:24:21,760
deleting the containers you are starting

00:24:21,279 --> 00:24:23,600
over

00:24:21,760 --> 00:24:25,039
you have your bundle cached in your file

00:24:23,600 --> 00:24:27,200
system of your computer

00:24:25,039 --> 00:24:28,320
and all you need to do every single time

00:24:27,200 --> 00:24:29,600
you have a new

00:24:28,320 --> 00:24:31,440
change in the gem file is really

00:24:29,600 --> 00:24:33,360
changing the gem file running bundle

00:24:31,440 --> 00:24:36,559
installed in the container and it will

00:24:33,360 --> 00:24:36,559
use the cache and that's it

00:24:36,799 --> 00:24:41,360
so this is really how the docker file

00:24:39,679 --> 00:24:43,440
setup should look in development for

00:24:41,360 --> 00:24:45,120
ruby projects in my opinion

00:24:43,440 --> 00:24:47,120
as i mentioned docker compose and i will

00:24:45,120 --> 00:24:48,799
not spend much time on it right

00:24:47,120 --> 00:24:51,760
docker compose is this thing that

00:24:48,799 --> 00:24:54,559
enables you to define multiple services

00:24:51,760 --> 00:24:55,760
if this is in my opinion should be the

00:24:54,559 --> 00:24:58,000
the way you define this

00:24:55,760 --> 00:24:59,679
right so if you look it has the only

00:24:58,000 --> 00:25:02,240
different the interesting thing is that

00:24:59,679 --> 00:25:03,760
i have a uh file to start the

00:25:02,240 --> 00:25:05,279
development server just for the

00:25:03,760 --> 00:25:07,520
web server in this case so this is just

00:25:05,279 --> 00:25:08,559
the web server and that i am saying that

00:25:07,520 --> 00:25:10,080
the target

00:25:08,559 --> 00:25:12,480
target here needs to have the name of

00:25:10,080 --> 00:25:15,520
the stage so if your docker file have ci

00:25:12,480 --> 00:25:17,840
or live you should just specify here dev

00:25:15,520 --> 00:25:19,120
you're also using n files so that comes

00:25:17,840 --> 00:25:20,320
from docker compose so you don't need to

00:25:19,120 --> 00:25:22,000
install the dot engine

00:25:20,320 --> 00:25:23,520
or anything else you're just saying

00:25:22,000 --> 00:25:24,480
anything in this file should be

00:25:23,520 --> 00:25:27,039
available in the

00:25:24,480 --> 00:25:28,480
development environment and you are

00:25:27,039 --> 00:25:30,720
defining other services

00:25:28,480 --> 00:25:32,159
for example postgres you can get it from

00:25:30,720 --> 00:25:32,559
an image from docker hub you don't need

00:25:32,159 --> 00:25:34,159
to

00:25:32,559 --> 00:25:35,600
to do anything or build anything in your

00:25:34,159 --> 00:25:38,480
machine the

00:25:35,600 --> 00:25:40,240
the worker is almost exactly the same as

00:25:38,480 --> 00:25:42,080
the the web server right because it

00:25:40,240 --> 00:25:43,919
needs the same bundle installed it needs

00:25:42,080 --> 00:25:45,200
every the same image and everything

00:25:43,919 --> 00:25:46,720
the only difference is that this time

00:25:45,200 --> 00:25:49,120
the command is not starting the web

00:25:46,720 --> 00:25:51,360
server but starting sidekick

00:25:49,120 --> 00:25:52,240
and redis is again an image from docker

00:25:51,360 --> 00:25:54,240
hub

00:25:52,240 --> 00:25:56,480
to point out something especially here

00:25:54,240 --> 00:25:59,200
you have this concept of depends on

00:25:56,480 --> 00:26:00,960
right which means that once this

00:25:59,200 --> 00:26:03,200
container started it needs to have those

00:26:00,960 --> 00:26:05,360
two other containers started however

00:26:03,200 --> 00:26:07,120
that does not mean that the process

00:26:05,360 --> 00:26:08,960
inside this container is started

00:26:07,120 --> 00:26:10,480
so for example if your application

00:26:08,960 --> 00:26:12,400
depends on the database

00:26:10,480 --> 00:26:14,320
this this here does not guarantee that

00:26:12,400 --> 00:26:15,840
postgres that this the process

00:26:14,320 --> 00:26:17,840
inside the container is started it just

00:26:15,840 --> 00:26:18,720
guarantees that the container itself

00:26:17,840 --> 00:26:21,120
started

00:26:18,720 --> 00:26:22,640
so if you face this problem that usually

00:26:21,120 --> 00:26:25,200
for the first few seconds

00:26:22,640 --> 00:26:26,159
you cannot reach the database you need

00:26:25,200 --> 00:26:29,360
to change your

00:26:26,159 --> 00:26:30,080
start to dev server bash script to keep

00:26:29,360 --> 00:26:32,240
pinging

00:26:30,080 --> 00:26:34,480
until the database is ready and then

00:26:32,240 --> 00:26:36,559
start to do that

00:26:34,480 --> 00:26:38,240
finally and i think this is the most

00:26:36,559 --> 00:26:39,600
important piece out of this talk is the

00:26:38,240 --> 00:26:41,919
make file

00:26:39,600 --> 00:26:42,960
what i do is usually have a make dev uh

00:26:41,919 --> 00:26:45,360
command and

00:26:42,960 --> 00:26:46,080
what this will do is basically start a

00:26:45,360 --> 00:26:49,039
shell

00:26:46,080 --> 00:26:49,600
in the web container so it will spin off

00:26:49,039 --> 00:26:51,919
a new

00:26:49,600 --> 00:26:53,279
a new container out of the image that i

00:26:51,919 --> 00:26:55,200
said in the dev environment

00:26:53,279 --> 00:26:56,960
and it will open a shell for you and in

00:26:55,200 --> 00:26:57,840
this shell you can type everything as

00:26:56,960 --> 00:27:01,360
you are used to

00:26:57,840 --> 00:27:02,799
in your usual shell also a small

00:27:01,360 --> 00:27:04,720
tweak that i do in the docker in the

00:27:02,799 --> 00:27:06,159
make file is have this aliases so that i

00:27:04,720 --> 00:27:07,919
don't need to type every time docker

00:27:06,159 --> 00:27:09,760
compose run or whatever

00:27:07,919 --> 00:27:11,120
and then i have the dev as i mentioned

00:27:09,760 --> 00:27:13,039
which will look like this

00:27:11,120 --> 00:27:14,640
and they usually have those those few

00:27:13,039 --> 00:27:16,640
commands the first one is build

00:27:14,640 --> 00:27:19,200
development so this will basically build

00:27:16,640 --> 00:27:20,240
the images the bundle which will run the

00:27:19,200 --> 00:27:22,240
bundle install

00:27:20,240 --> 00:27:24,320
the db create that starts the database

00:27:22,240 --> 00:27:26,640
migrate and whatsoever

00:27:24,320 --> 00:27:28,000
this enables us to have a command which

00:27:26,640 --> 00:27:31,279
is make setup

00:27:28,000 --> 00:27:33,120
so in this case every single project in

00:27:31,279 --> 00:27:34,559
my organization where i work now every

00:27:33,120 --> 00:27:36,320
organization i did this project

00:27:34,559 --> 00:27:38,240
have this command make setup where you

00:27:36,320 --> 00:27:40,240
just pull it and you

00:27:38,240 --> 00:27:42,640
right make setup and everything starts

00:27:40,240 --> 00:27:45,520
and becomes in place

00:27:42,640 --> 00:27:47,039
okay so this is it with the development

00:27:45,520 --> 00:27:49,360
environment

00:27:47,039 --> 00:27:51,440
what to do in the ci i just want to show

00:27:49,360 --> 00:27:53,120
here like this is how cool

00:27:51,440 --> 00:27:54,559
the multi-stage build is because you

00:27:53,120 --> 00:27:56,799
start from dev

00:27:54,559 --> 00:27:58,399
and you do another stage which is ci in

00:27:56,799 --> 00:28:00,240
this case because you will not change

00:27:58,399 --> 00:28:02,960
the gem file in the ci anyways

00:28:00,240 --> 00:28:04,000
you can rely on the docker cache right

00:28:02,960 --> 00:28:05,360
and you can do this

00:28:04,000 --> 00:28:07,520
and you're copying your whole project

00:28:05,360 --> 00:28:10,559
and you're starting the thing

00:28:07,520 --> 00:28:12,640
also um if you want

00:28:10,559 --> 00:28:14,399
or i think you should use docker compose

00:28:12,640 --> 00:28:16,559
or even use whatever provided

00:28:14,399 --> 00:28:18,320
my current suggestion is to always rely

00:28:16,559 --> 00:28:19,840
on things that are not specific to a

00:28:18,320 --> 00:28:20,960
specific ci because if you want to

00:28:19,840 --> 00:28:22,559
change the ci

00:28:20,960 --> 00:28:24,159
from one platform to the other you are

00:28:22,559 --> 00:28:26,000
always relying on things like docker

00:28:24,159 --> 00:28:29,120
docker compose and make file

00:28:26,000 --> 00:28:30,799
so i will also use another docker ci uh

00:28:29,120 --> 00:28:32,399
another docker compose file with this

00:28:30,799 --> 00:28:34,399
time a different target

00:28:32,399 --> 00:28:35,679
right you can even do things like

00:28:34,399 --> 00:28:37,760
stateless web where you

00:28:35,679 --> 00:28:39,520
have the same exact service it just does

00:28:37,760 --> 00:28:41,760
not depend on the database

00:28:39,520 --> 00:28:43,200
because you just want to run the linter

00:28:41,760 --> 00:28:44,240
and still use makefile or some

00:28:43,200 --> 00:28:46,720
alternative

00:28:44,240 --> 00:28:47,360
and for live stages i start again from

00:28:46,720 --> 00:28:48,960
dev

00:28:47,360 --> 00:28:50,559
and this time i'm installing the bundle

00:28:48,960 --> 00:28:52,559
but deployment without the test and

00:28:50,559 --> 00:28:54,799
development because it's different

00:28:52,559 --> 00:28:56,159
or say for example i just want to set up

00:28:54,799 --> 00:28:58,000
the rails environment

00:28:56,159 --> 00:28:59,600
environment variable to staging from

00:28:58,000 --> 00:29:01,520
life

00:28:59,600 --> 00:29:03,200
enormous possibility starts when you

00:29:01,520 --> 00:29:05,679
start to talk about multi-stage builds

00:29:03,200 --> 00:29:07,360
let's say it like this

00:29:05,679 --> 00:29:09,200
so in a nutshell like what i have been

00:29:07,360 --> 00:29:09,520
trying to say during this this talk is

00:29:09,200 --> 00:29:11,120
not

00:29:09,520 --> 00:29:13,200
is nothing about like the specific tips

00:29:11,120 --> 00:29:14,960
and tricks but always reminding people

00:29:13,200 --> 00:29:17,520
that we are optimizing

00:29:14,960 --> 00:29:19,919
for our usage for the people not because

00:29:17,520 --> 00:29:23,039
we want to use this new cool tool

00:29:19,919 --> 00:29:23,600
we need to always question what we copy

00:29:23,039 --> 00:29:25,360
and paste

00:29:23,600 --> 00:29:26,799
because it doesn't necessarily mean it's

00:29:25,360 --> 00:29:29,520
good and

00:29:26,799 --> 00:29:30,960
honestly in my opinion having docker in

00:29:29,520 --> 00:29:32,480
development or any containerization

00:29:30,960 --> 00:29:34,000
development is no longer a personal

00:29:32,480 --> 00:29:35,919
preference but it is a business

00:29:34,000 --> 00:29:38,480
requirement without it the business is

00:29:35,919 --> 00:29:40,240
in danger to lose a lot of money and to

00:29:38,480 --> 00:29:42,080
remind ourselves that we need to use the

00:29:40,240 --> 00:29:43,679
tools to fulfill our requirements not

00:29:42,080 --> 00:29:46,080
the opposite way

00:29:43,679 --> 00:29:47,600
and if you would like to take a look at

00:29:46,080 --> 00:29:49,200
this code i mean i have this boiler

00:29:47,600 --> 00:29:50,640
plate somewhere in my github

00:29:49,200 --> 00:29:52,000
maybe need some tweaks or you want to

00:29:50,640 --> 00:29:52,320
suggest or have some discussion there

00:29:52,000 --> 00:29:55,600
please

00:29:52,320 --> 00:29:57,360
check it and please stay connected with

00:29:55,600 --> 00:30:09,840
me that's my twitter handle

00:29:57,360 --> 00:30:09,840
and that's it thank you so much

00:30:11,200 --> 00:30:14,559
and as far as far as i know that means

00:30:13,919 --> 00:30:18,399
we are

00:30:14,559 --> 00:30:20,720
here as well it's nice by the way

00:30:18,399 --> 00:30:23,120
um the trick with the make file

00:30:20,720 --> 00:30:26,159
especially is something that made me

00:30:23,120 --> 00:30:27,120
very happy um i want to thank you for

00:30:26,159 --> 00:30:28,080
your talk

00:30:27,120 --> 00:30:30,320
we're going to have a look at the

00:30:28,080 --> 00:30:32,399
developer dilemmas right now and then

00:30:30,320 --> 00:30:36,320
we'll come back with some questions and

00:30:32,399 --> 00:30:38,640
hopefully answers so those developer

00:30:36,320 --> 00:30:41,520
dilemmas

00:30:38,640 --> 00:30:42,880
so especially fitting for this talk is

00:30:41,520 --> 00:30:48,240
going to be

00:30:42,880 --> 00:30:51,760
uh monolith microservices

00:30:48,240 --> 00:30:54,799
i'm choosing monolith i am very happy to

00:30:51,760 --> 00:30:56,000
host it under docker but the monolith

00:30:54,799 --> 00:30:59,279
usually tells me

00:30:56,000 --> 00:31:00,000
that i have a team and i can get to know

00:30:59,279 --> 00:31:02,320
everyone

00:31:00,000 --> 00:31:03,440
if you just have a horde hordes and

00:31:02,320 --> 00:31:05,679
hordes and hordes

00:31:03,440 --> 00:31:07,360
of monuments then usually you don't know

00:31:05,679 --> 00:31:10,000
all your colleagues and i really i

00:31:07,360 --> 00:31:13,279
really like to know all my colleagues

00:31:10,000 --> 00:31:13,919
um so first question that i see is i've

00:31:13,279 --> 00:31:16,559
seen

00:31:13,919 --> 00:31:18,080
some people use docker compose 2.4 to

00:31:16,559 --> 00:31:22,080
wait for a health check for

00:31:18,080 --> 00:31:24,320
depends on anyone else do that so

00:31:22,080 --> 00:31:25,519
can you share something about it yes i i

00:31:24,320 --> 00:31:28,080
don't use

00:31:25,519 --> 00:31:29,840
i use the 3.7 normally and there is a

00:31:28,080 --> 00:31:32,080
bash script you can find on github

00:31:29,840 --> 00:31:34,000
called wait for it or wait for

00:31:32,080 --> 00:31:35,919
and i think that's pretty pretty fine

00:31:34,000 --> 00:31:37,519
right so this bash script what it will

00:31:35,919 --> 00:31:38,080
do is exactly what i said it will just

00:31:37,519 --> 00:31:40,720
keep

00:31:38,080 --> 00:31:42,320
pinging the port until the health check

00:31:40,720 --> 00:31:42,960
of the other thing is there and then you

00:31:42,320 --> 00:31:45,360
can just

00:31:42,960 --> 00:31:46,000
move on with the bash script or just

00:31:45,360 --> 00:31:47,519
write your own

00:31:46,000 --> 00:31:49,279
i honestly don't think you should block

00:31:47,519 --> 00:31:50,799
yourself from an older version of docker

00:31:49,279 --> 00:31:52,559
compose because you want to

00:31:50,799 --> 00:31:54,559
make sure make use of one feature that

00:31:52,559 --> 00:31:57,519
you can replace that simply

00:31:54,559 --> 00:31:57,519
i hope that matters

00:31:57,600 --> 00:32:02,559
i think it answers the question um i

00:32:00,960 --> 00:32:04,320
i have another question because well

00:32:02,559 --> 00:32:06,880
what you're what you're saying is well

00:32:04,320 --> 00:32:09,360
you should focus on usage you shouldn't

00:32:06,880 --> 00:32:11,279
focus on we're going to use that new new

00:32:09,360 --> 00:32:15,279
brand spanking tool that we that we get

00:32:11,279 --> 00:32:17,440
to use just because we can use it

00:32:15,279 --> 00:32:19,200
how how would you deal with with

00:32:17,440 --> 00:32:20,720
colleagues that are just going for the

00:32:19,200 --> 00:32:22,480
most shiny tool and in this

00:32:20,720 --> 00:32:24,159
specific thing how would that work out

00:32:22,480 --> 00:32:26,159
for you in a team uh

00:32:24,159 --> 00:32:27,760
uh that that says well we just want to

00:32:26,159 --> 00:32:31,679
use docker compost

00:32:27,760 --> 00:32:33,600
because we can honestly i think

00:32:31,679 --> 00:32:35,440
like at least with me and the team we

00:32:33,600 --> 00:32:36,240
have this this exercise where we really

00:32:35,440 --> 00:32:38,399
want to question

00:32:36,240 --> 00:32:40,159
every thing we are doing right so with

00:32:38,399 --> 00:32:42,159
my team what we usually do

00:32:40,159 --> 00:32:44,080
is that we have a session usually called

00:32:42,159 --> 00:32:46,880
the pre-grooming where we go through

00:32:44,080 --> 00:32:48,559
every single task we need to do and we

00:32:46,880 --> 00:32:49,919
need to justify to ourselves not just

00:32:48,559 --> 00:32:50,559
the product really because usually

00:32:49,919 --> 00:32:52,480
people say

00:32:50,559 --> 00:32:54,240
i will justify this to product but for

00:32:52,480 --> 00:32:55,120
me i believe that we as techies need to

00:32:54,240 --> 00:32:57,279
be aware of that

00:32:55,120 --> 00:32:58,960
like is this something that is really

00:32:57,279 --> 00:33:00,640
useful is this something that

00:32:58,960 --> 00:33:02,159
will really bring money to this company

00:33:00,640 --> 00:33:02,799
or at least make us you know make our

00:33:02,159 --> 00:33:04,640
time

00:33:02,799 --> 00:33:06,880
usage much better i think we as

00:33:04,640 --> 00:33:09,360
developers need to start to be aware

00:33:06,880 --> 00:33:10,000
of how our time is and i don't know i

00:33:09,360 --> 00:33:11,760
think it comes

00:33:10,000 --> 00:33:13,919
from just talking to the team and doing

00:33:11,760 --> 00:33:15,679
it more often doing it more often

00:33:13,919 --> 00:33:17,679
until it becomes really an exercise at

00:33:15,679 --> 00:33:19,279
the moment i think

00:33:17,679 --> 00:33:21,039
unlike what usually people say that

00:33:19,279 --> 00:33:21,360
developers are trying to push product to

00:33:21,039 --> 00:33:23,279
do

00:33:21,360 --> 00:33:24,960
things i think it's usually us even

00:33:23,279 --> 00:33:27,440
pushing back against product and that

00:33:24,960 --> 00:33:30,480
happened by practice

00:33:27,440 --> 00:33:32,080
look okay uh i have another question

00:33:30,480 --> 00:33:34,240
that is what do you think about

00:33:32,080 --> 00:33:38,320
pre-built stack images like

00:33:34,240 --> 00:33:40,000
messenger ruby and such

00:33:38,320 --> 00:33:41,679
i don't i didn't have any personal

00:33:40,000 --> 00:33:42,399
experience so i cannot really give like

00:33:41,679 --> 00:33:45,120
uh

00:33:42,399 --> 00:33:45,120
feedback on this

00:33:46,080 --> 00:33:49,440
but more in general i mean not

00:33:48,399 --> 00:33:52,320
specifically this

00:33:49,440 --> 00:33:54,559
image in general i would have a problem

00:33:52,320 --> 00:33:55,279
i i prefer things when i understand

00:33:54,559 --> 00:33:57,519
what's going

00:33:55,279 --> 00:33:58,960
you know inside this package so if i

00:33:57,519 --> 00:34:00,960
have a pre-built image i

00:33:58,960 --> 00:34:02,799
i wouldn't be so comfortable i have to

00:34:00,960 --> 00:34:04,640
admit right like as i said i'm even not

00:34:02,799 --> 00:34:05,600
comfortable with base images that are

00:34:04,640 --> 00:34:08,399
official

00:34:05,600 --> 00:34:10,480
from ruby because even that can break so

00:34:08,399 --> 00:34:12,720
you are adding more and more layers of

00:34:10,480 --> 00:34:14,240
on the top of that i'm not really sure

00:34:12,720 --> 00:34:16,639
that's what you need honestly like

00:34:14,240 --> 00:34:18,000
i would never do something like this but

00:34:16,639 --> 00:34:19,119
i don't know maybe it works for other

00:34:18,000 --> 00:34:22,240
people

00:34:19,119 --> 00:34:23,280
i know i understand but for i mean from

00:34:22,240 --> 00:34:25,839
time to time

00:34:23,280 --> 00:34:28,320
you just want to use a specific library

00:34:25,839 --> 00:34:29,520
or a gem in in ruby terminology that you

00:34:28,320 --> 00:34:30,960
think is going to solve all your

00:34:29,520 --> 00:34:32,240
problems but you're going to inspect our

00:34:30,960 --> 00:34:34,159
code anyway before

00:34:32,240 --> 00:34:35,520
well depending on it and this is just

00:34:34,159 --> 00:34:37,839
well not very

00:34:35,520 --> 00:34:39,839
much different than a library depending

00:34:37,839 --> 00:34:41,040
on except it's just sitting underneath a

00:34:39,839 --> 00:34:44,079
lot of things

00:34:41,040 --> 00:34:45,679
what's your opinion about that then

00:34:44,079 --> 00:34:47,440
i think that's a very good question i

00:34:45,679 --> 00:34:49,919
honestly maybe

00:34:47,440 --> 00:34:51,679
maybe we are still in an era where where

00:34:49,919 --> 00:34:55,679
my trust in

00:34:51,679 --> 00:34:57,200
in docker-based images is not as

00:34:55,679 --> 00:34:59,119
let's be honest about that like there

00:34:57,200 --> 00:35:00,960
was even this incident a couple of years

00:34:59,119 --> 00:35:03,839
ago where like even the my sequel

00:35:00,960 --> 00:35:05,280
locker-based image was doing uh like

00:35:03,839 --> 00:35:05,920
fishing and stuff like that so i

00:35:05,280 --> 00:35:08,880
wouldn't

00:35:05,920 --> 00:35:10,800
yeah but i'm still not in that era yet

00:35:08,880 --> 00:35:12,800
but of course i mean yes if you have the

00:35:10,800 --> 00:35:14,240
time to inspect the code of the

00:35:12,800 --> 00:35:16,079
base image and keep track of what's

00:35:14,240 --> 00:35:17,760
going on go for it

00:35:16,079 --> 00:35:19,280
i personally just feel it's quite

00:35:17,760 --> 00:35:21,280
straightforward to add those couple of

00:35:19,280 --> 00:35:24,880
few lines more so

00:35:21,280 --> 00:35:26,880
yeah yeah i remember being

00:35:24,880 --> 00:35:28,800
at a bigger corporation they said well

00:35:26,880 --> 00:35:30,960
we can only use our own bills

00:35:28,800 --> 00:35:31,839
docker images because well we can't use

00:35:30,960 --> 00:35:33,760
it on on

00:35:31,839 --> 00:35:35,280
well we can't run our systems on

00:35:33,760 --> 00:35:38,000
anything that we didn't build our

00:35:35,280 --> 00:35:38,480
ourselves which well you may or may not

00:35:38,000 --> 00:35:41,119
uh

00:35:38,480 --> 00:35:42,640
see as an advantage but yeah with with

00:35:41,119 --> 00:35:46,000
rubygems you have the same

00:35:42,640 --> 00:35:47,839
kinds of problems so yeah i i

00:35:46,000 --> 00:35:50,560
i think i understand what you mean with

00:35:47,839 --> 00:35:52,160
this if you can't inspect it or if you

00:35:50,560 --> 00:35:54,079
don't have the time to inspect it you

00:35:52,160 --> 00:35:56,720
probably don't want to build everything

00:35:54,079 --> 00:35:58,000
on top of it i'm just looking at my

00:35:56,720 --> 00:36:01,040
colleagues if we have any

00:35:58,000 --> 00:36:02,560
more questions coming up no that we

00:36:01,040 --> 00:36:03,280
don't have any questions that i want to

00:36:02,560 --> 00:36:06,800
ask you

00:36:03,280 --> 00:36:08,320
at the time um so this is where i get to

00:36:06,800 --> 00:36:12,560
thank you

00:36:08,320 --> 00:36:14,640
thank you so much and

00:36:12,560 --> 00:36:16,560
you were in that rocket again you were

00:36:14,640 --> 00:36:19,520
going very fast

00:36:16,560 --> 00:36:20,000
but it was well it was very good to

00:36:19,520 --> 00:36:24,240
follow

00:36:20,000 --> 00:36:27,440
so thank you thank you so much arno and

00:36:24,240 --> 00:36:30,640
have a good evening ciao

00:36:27,440 --> 00:36:30,640

YouTube URL: https://www.youtube.com/watch?v=ua6tJ9d8pE8


