Title: Shared Virtual Addressing in KVM by Yi Liu & Jacob Pan
Publication date: 2018-11-17
Playlist: KVM Forum 2018
Description: 
	Shared Virtual Addressing in KVM (Liu Yi, Intel) - Shared Virtual Addressing (SVA) is a hardware extension to allow device directly accessing CPU virtual address, thus enables efficient workload submission on accelerators. SVA requires support in PCI bus, endpoint device and IOMMU, which has been made available by major hardware vendors (Intel, AMD, ARM, etc.). Then it becomes a hot area in cloud and data center, where same level of efficiency is expected when those accelerators are assigned to VMs.

This talk will first provide an overview of SVA and then the envisioned architecture of virtualizing SVA in KVM. Following that will be a deep dive of main SVA working flow cross multiple kernel/user components (Qemu, VFIO, IOMMU, etc.), especially about how to design neutral kernel APIs to work with different IOMMU vendors and also different vIOMMU models (emulated or para-virtualized).

---

Yi Liu
Senior Software Engineer
Intel Corporation

Yi is a senior software engineer from OTC, Intel Corp. He focuses on I/O virtualization(IntelÂ® VT-d) and new I/O technology researching and enabling. He is currently working on virtual IOMMU upstreaming within Intel OTC VMM enabling team. As a well-recognized contributor, he was invited to attend and give presentation at Linux Plumbers Conference 2017, Xen Summit 2017 and Linux Conference Beijing 2018. Prior to Intel, Yi works for Hewlett-Packard Company, in where he gained deep understanding on x86 based computing system.

Jacob Pan
Linux Kernel Developer
Intel Corp

Jacob is a Linux kernel developer at Intel since 2005. He worked on PowerPC at Freescale prior to joining Intel.

He has worked in many areas around Linux kernel, including arch/x86, device drivers (USB, I2C, PMIC, sensors, timers). His recent interest and work is on power management, scheduler, IOMMU.
YouTube URL: https://www.youtube.com/watch?v=Kq_nfGK5MwQ


