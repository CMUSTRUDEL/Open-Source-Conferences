Title: Arm Timers; and Fire! by Christoffer Dall
Publication date: 2018-11-17
Playlist: KVM Forum 2018
Description: 
	A key feature that is missing in KVM/ARM compared to x86 is the support for stolen time reporting to virtual CPUs. Stolen time allows a virtual CPU to make more informed scheduling decisions on oversubscribed systems by factoring in CPU time used by the hypervisor for other tasks instead of running the virtual CPU. The Arm architecture defines two separate timers: The virtual and physical timers, which are both available to the OS, and further provides separate timers for the hypervisor. While the intention behind these architecture features is to provide OSes a mechanism for telling physical and virtual time apart, this does not work in practice. This talk explains why we cannot easily use the architected mechanism to provide stolen time on Arm, and why we must instead use a paravirtualized solution based on a shared page and how this approach differs slightly from the one used on x86.

---

Christoffer Dall
Principal Engineer
Arm

Christoffer Dall is principal engineer in Arm's architecture and technology group. Christoffer is a long-time open source contributor, and original author of KVM/ARM. Christoffer has a PhD in computer science from Columbia
University, specializing in operating systems and virtualization, and has presented at numerous academic as well as community conferences.
YouTube URL: https://www.youtube.com/watch?v=fCEgG5p_23c


