Title: SPDK vhost Target: A Practical Solution to Accelerate Storage I Os by Ziye Yang & Changpeng Liu
Publication date: 2018-11-17
Playlist: KVM Forum 2018
Description: 
	Full name: SPDK vhost Target: A Practical Solution to Accelerate Storage I/Os Inside VMs

In this presentation, we would like to introduce SPDK’s user space vhost* solution (including vhost-scsi/blk/NVMe), which can collaborate with QEMU & KVM to accelerate virtio-scsi, virtio-blk and even emulated NVMe controller inside guest OS. Relying on SPDK vhost* solution, the performance of I/Os inside VMs can be greatly improved compared (e.g., with I/O IOPS increasing, I/O latency decreasing) compared with the existing solutions (e.g., original QEMU emulation solution, kernel vhost* solution). Moreover, we compare our SPDK vhost-scsi/blk/NVMe with other approaches like other solutions (e.g., direct device pass-through solution, SR-IOV solution, Zheng’s VFIO based solution in KVM 2017, FPGA acceleration solution, etc). Generally, our solution is much more scalable and practical. Currently, SPDK vhost* solution is adopted by many cloud service providers (e.g., Alibaba).

---

Changpeng Liu
Senior software Engineer
Intel

Changpeng liu is a senior software engineer in Intel and involved in SPDK (storage performance development kit) development work.

Ziye Yang
Senior Software Engineer
Intel

Ziye Yang is a senior software engineer in Intel and involved in SPDK (storage performance development kit) development work. Before that, Ziye worked in EMC for 4 and half years. Ziye is interested in system virtualization, file system and storage related research and development work. Ziye currently has 12 issued patents in US and 4 issued patents in PRC. Ziye holds a master degree in computer science from Fudan University in 2009.
Captions: 
	00:00:01,040 --> 00:00:09,059
[Music]

00:00:05,359 --> 00:00:13,170
so come on Arawa Week has started Dexter

00:00:09,059 --> 00:00:15,809
she thank you my name is Tia and there

00:00:13,170 --> 00:00:19,289
today my colleague at home polio here

00:00:15,809 --> 00:00:21,359
and I will talk about their SDK we host

00:00:19,289 --> 00:00:24,630
a practical solution to accelerate

00:00:21,359 --> 00:00:29,730
asteroid IOC Serbians actually this

00:00:24,630 --> 00:00:33,239
presentation we were toxic IDEs of SDK

00:00:29,730 --> 00:00:36,800
viho solution they are especially hosts

00:00:33,239 --> 00:00:40,649
Kazi broke and there be any and we were

00:00:36,800 --> 00:00:46,350
talking about their improve initiative

00:00:40,649 --> 00:00:49,350
vobis so this is the the today's agenda

00:00:46,350 --> 00:00:52,079
we will have a brief introduction and

00:00:49,350 --> 00:00:55,079
mainly we were paying attention on the V

00:00:52,079 --> 00:00:58,309
Xhosa and we an implementation SDK and

00:00:55,079 --> 00:01:02,120
then we will have some performance

00:00:58,309 --> 00:01:04,769
comparisons most several kinds of

00:01:02,120 --> 00:01:08,520
implementations and finally we will talk

00:01:04,769 --> 00:01:14,930
about some future work such as there may

00:01:08,520 --> 00:01:19,310
be some patch work in Qumu browsers so

00:01:14,930 --> 00:01:22,700
this page adjuster let let's review the

00:01:19,310 --> 00:01:26,250
reholster idea to accelerate the

00:01:22,700 --> 00:01:29,520
vertical we know the idea is very clear

00:01:26,250 --> 00:01:32,340
we just ER the vhosts idea is that we

00:01:29,520 --> 00:01:34,979
have a separate process for the i/o

00:01:32,340 --> 00:01:37,890
processing and the way was we host a

00:01:34,979 --> 00:01:41,490
protocol to communicate communicating

00:01:37,890 --> 00:01:44,189
the guest gaster parameters between

00:01:41,490 --> 00:01:46,890
human and the separate process and we

00:01:44,189 --> 00:01:49,229
can negotiate is there such if ability

00:01:46,890 --> 00:01:52,500
of the vertical protocol for example the

00:01:49,229 --> 00:01:54,299
memory the number of what I accuse other

00:01:52,500 --> 00:01:58,469
what i oq Lucretia's

00:01:54,299 --> 00:01:59,909
and there and definitely we can have

00:01:58,469 --> 00:02:03,719
their reholster

00:01:59,909 --> 00:02:06,899
kernel TARDIS whooshing or also the user

00:02:03,719 --> 00:02:11,150
space is Russia and the easiest in our

00:02:06,899 --> 00:02:13,569
topic we were talking about user space

00:02:11,150 --> 00:02:16,980
implementation

00:02:13,569 --> 00:02:19,629
so this page is just as their sdk

00:02:16,980 --> 00:02:23,079
introduction introduction I will not

00:02:19,629 --> 00:02:26,349
share information here but their

00:02:23,079 --> 00:02:30,849
emphasis is that since we build

00:02:26,349 --> 00:02:34,390
sdk-based user space we host our target

00:02:30,849 --> 00:02:39,900
US Russia and our purpose to use limited

00:02:34,390 --> 00:02:43,389
CPU cores to maximize their the aisle

00:02:39,900 --> 00:02:47,379
the aisles for different events it means

00:02:43,389 --> 00:02:51,700
that our going to use vhosts target to

00:02:47,379 --> 00:02:54,250
serve so many virtual machines with good

00:02:51,700 --> 00:02:57,970
performance but with limited as impure

00:02:54,250 --> 00:03:01,720
resources or the simple resource you can

00:02:57,970 --> 00:03:04,840
conclude and the let's review their SDK

00:03:01,720 --> 00:03:08,230
so we hoster target architecture to

00:03:04,840 --> 00:03:11,439
accelerate their various Cassio brock we

00:03:08,230 --> 00:03:15,189
just use reholster protocol and we

00:03:11,439 --> 00:03:20,440
leverage typical TB case a TV host

00:03:15,189 --> 00:03:24,340
library and the transfer request france

00:03:20,440 --> 00:03:30,250
Cascio broke protocol to educate Bedelia

00:03:24,340 --> 00:03:34,449
and finally we can pass this iOS to RIA

00:03:30,250 --> 00:03:38,169
many devices or emulated devices or CF

00:03:34,449 --> 00:03:44,069
RBD devices or sort of party devices

00:03:38,169 --> 00:03:47,949
which implements the SDK PDFs semantics

00:03:44,069 --> 00:03:51,489
so the question is that whereas dkv

00:03:47,949 --> 00:03:54,459
holster only for Scottie broke enough I

00:03:51,489 --> 00:03:57,970
think there a question here is not since

00:03:54,459 --> 00:04:00,970
currently we have there a viene protocol

00:03:57,970 --> 00:04:03,129
it defines the period and the high

00:04:00,970 --> 00:04:06,489
performance interface which is a

00:04:03,129 --> 00:04:09,010
designer for other non varietal memory

00:04:06,489 --> 00:04:12,909
back end especially actually the PCIe

00:04:09,010 --> 00:04:16,810
SSD and this is a trend actually it can

00:04:12,909 --> 00:04:19,289
have for multiple submission queues and

00:04:16,810 --> 00:04:22,930
the competing hues and all this

00:04:19,289 --> 00:04:26,230
submission completion cues can be used

00:04:22,930 --> 00:04:30,070
to some mature iOS

00:04:26,230 --> 00:04:33,820
concurrently so compared with the Scaasi

00:04:30,070 --> 00:04:36,510
protocol deftly is there any protocol is

00:04:33,820 --> 00:04:39,580
a much more lighter widget so it can

00:04:36,510 --> 00:04:42,880
finally increase decrease the latency

00:04:39,580 --> 00:04:47,020
for each i/o submission and also the

00:04:42,880 --> 00:04:50,650
completion thus in the gaster virtual

00:04:47,020 --> 00:04:54,400
virtual machines from the other side we

00:04:50,650 --> 00:04:59,050
can see two different of controllers if

00:04:54,400 --> 00:05:02,620
you user verticals Cassio broke the

00:04:59,050 --> 00:05:05,260
caster who has series controllers and if

00:05:02,620 --> 00:05:07,960
you user and we need to have actually

00:05:05,260 --> 00:05:11,170
you you can see there are many

00:05:07,960 --> 00:05:14,770
controllers and definitely we hope to

00:05:11,170 --> 00:05:17,170
provide a transparent allusion to the

00:05:14,770 --> 00:05:20,110
custodians it means that the guest of

00:05:17,170 --> 00:05:23,470
ears can still use their native Colonel

00:05:20,110 --> 00:05:27,430
amang Java and it can see the any

00:05:23,470 --> 00:05:29,890
controller this is our ago and so we

00:05:27,430 --> 00:05:33,280
provided their SDK we hosted various

00:05:29,890 --> 00:05:36,310
Russia actually from this diagram you

00:05:33,280 --> 00:05:39,730
can see the actual we compared eight

00:05:36,310 --> 00:05:45,400
kinds of different as Rushing's to

00:05:39,730 --> 00:05:49,510
accelerate a different extremities are

00:05:45,400 --> 00:05:54,010
three different protocols in the gate

00:05:49,510 --> 00:05:57,010
via the various Kazi with hello Prague

00:05:54,010 --> 00:06:01,480
at the MVN interface and the front left

00:05:57,010 --> 00:06:03,640
side it's other software as Russia the

00:06:01,480 --> 00:06:08,910
in the right right side there are four

00:06:03,640 --> 00:06:12,850
they are hardware based assisted

00:06:08,910 --> 00:06:15,760
solution with just a comparator guest OS

00:06:12,850 --> 00:06:17,500
interface back in the device surely and

00:06:15,760 --> 00:06:20,500
there's a life by crushing support and

00:06:17,500 --> 00:06:23,130
the cream support and finally the very

00:06:20,500 --> 00:06:26,320
hardware are required and it is

00:06:23,130 --> 00:06:29,200
diagramming sir the features can be

00:06:26,320 --> 00:06:32,860
either support you know it depends on

00:06:29,200 --> 00:06:36,790
its own implementation so we can see

00:06:32,860 --> 00:06:39,510
that I think there are most important to

00:06:36,790 --> 00:06:43,890
imposing is about there

00:06:39,510 --> 00:06:47,310
the backend device surely whether we can

00:06:43,890 --> 00:06:49,560
share if the idea is only one MB any SSD

00:06:47,310 --> 00:06:52,830
whether we can share their devices a

00:06:49,560 --> 00:06:56,100
monster VN and the second is a life by

00:06:52,830 --> 00:06:59,730
bridging support so we can see that with

00:06:56,100 --> 00:07:03,090
weather radical as I am in the column

00:06:59,730 --> 00:07:06,690
means that it is not supported but the

00:07:03,090 --> 00:07:10,470
ideas are still AM SDK be Jose ve she's

00:07:06,690 --> 00:07:13,080
currently the Camille support is not

00:07:10,470 --> 00:07:15,270
merged it means yet but we already have

00:07:13,080 --> 00:07:18,120
patches and we would like to discuss

00:07:15,270 --> 00:07:21,780
with community guys like Red Hat and

00:07:18,120 --> 00:07:28,850
others and the two negotiator post was

00:07:21,780 --> 00:07:31,530
rushing to make make their SDK V hoster

00:07:28,850 --> 00:07:36,780
and the any acceleration solutions can

00:07:31,530 --> 00:07:41,090
be accept acceptable by users so while

00:07:36,780 --> 00:07:44,040
we need as precursor as Russia since

00:07:41,090 --> 00:07:46,680
these are not issues really with the

00:07:44,040 --> 00:07:49,080
hardware so the first issue is richly

00:07:46,680 --> 00:07:51,390
with the naming space if you are

00:07:49,080 --> 00:07:54,840
familiar with a me any protocol you can

00:07:51,390 --> 00:07:57,660
see that if you use I accuse to submit a

00:07:54,840 --> 00:08:01,370
request so you need to ideal and get for

00:07:57,660 --> 00:08:04,460
the naming space ID but if the currently

00:08:01,370 --> 00:08:07,950
the hardware solution you can use

00:08:04,460 --> 00:08:12,210
surprising i/o queues to provide their

00:08:07,950 --> 00:08:16,220
iock you said to to be shared among the

00:08:12,210 --> 00:08:19,680
vs however the name in space ID

00:08:16,220 --> 00:08:22,320
isolation virtualized it it is still not

00:08:19,680 --> 00:08:25,250
solved it means that every virtual

00:08:22,320 --> 00:08:27,930
machine should see it's all naming space

00:08:25,250 --> 00:08:32,130
for each of year maybe the name in space

00:08:27,930 --> 00:08:33,990
it also starts from 0 1 2 3 but if you

00:08:32,130 --> 00:08:36,330
use a hardware solution you can not

00:08:33,990 --> 00:08:40,919
achieve that and a certainly is about a

00:08:36,330 --> 00:08:44,820
live migration support currently there

00:08:40,919 --> 00:08:47,970
is no mature master to Tracking's or 30

00:08:44,820 --> 00:08:51,020
iOS or pages if you use the hardware as

00:08:47,970 --> 00:08:53,310
rouging either you can just rising her

00:08:51,020 --> 00:08:57,060
during migration

00:08:53,310 --> 00:08:58,970
my grades are hardware state to the

00:08:57,060 --> 00:09:03,329
software wasted and adjust the user

00:08:58,970 --> 00:09:05,370
emulation software emerging methods to

00:09:03,329 --> 00:09:08,639
do the iOS during my equation but it

00:09:05,370 --> 00:09:12,089
were some performance where we don't

00:09:08,639 --> 00:09:15,389
were being created so I think at the

00:09:12,089 --> 00:09:18,809
eyes are still issues original with

00:09:15,389 --> 00:09:22,559
hardware and there a sudden it is really

00:09:18,809 --> 00:09:24,990
about their son ever wanted are the

00:09:22,559 --> 00:09:28,850
walls the features such as cotija of

00:09:24,990 --> 00:09:33,149
service country SDK is purely software

00:09:28,850 --> 00:09:38,939
solution can be fine grained to achieve

00:09:33,149 --> 00:09:42,809
with this purpose thus there are the

00:09:38,939 --> 00:09:47,339
quality of the services among viens of

00:09:42,809 --> 00:09:49,470
the other thing I mean SSDs as a clue as

00:09:47,339 --> 00:09:53,550
can be covered but for the others

00:09:49,470 --> 00:09:56,459
routine cities do not not consider such

00:09:53,550 --> 00:10:02,519
as situation but as he may consider I

00:09:56,459 --> 00:10:07,620
delete so with this with this we combine

00:10:02,519 --> 00:10:10,639
our there we can compare compares as the

00:10:07,620 --> 00:10:16,199
case previous kasi Brooks rulings with

00:10:10,639 --> 00:10:21,660
there we host a ministro she actually we

00:10:16,199 --> 00:10:26,309
will use will use something for the we

00:10:21,660 --> 00:10:29,069
host the protocol the initial eulogy is

00:10:26,309 --> 00:10:33,120
only for accelerating of Ohio but we can

00:10:29,069 --> 00:10:39,589
extend a reholster protocol to support

00:10:33,120 --> 00:10:44,639
their MBA which reliably she inside the

00:10:39,589 --> 00:10:48,000
guest OS and the second is that we can

00:10:44,639 --> 00:10:49,040
see that in the left type well for the

00:10:48,000 --> 00:10:52,499
vote I Oh

00:10:49,040 --> 00:10:54,990
we host acceleration we wish as avataric

00:10:52,499 --> 00:11:00,480
use a difference is that for the ambien

00:10:54,990 --> 00:11:02,309
II virtualization we we share the ambien

00:11:00,480 --> 00:11:04,620
ease submission Hughes and the

00:11:02,309 --> 00:11:06,340
completing queues so it is a slightly

00:11:04,620 --> 00:11:09,830
different

00:11:06,340 --> 00:11:13,010
so next part will be the implementing

00:11:09,830 --> 00:11:21,650
details it is time for my colleague tom

00:11:13,010 --> 00:11:27,760
hollie was thank you implementation

00:11:21,650 --> 00:11:30,710
details so this diagram shows that SPG

00:11:27,760 --> 00:11:34,880
used tucky the can stop how the post yes

00:11:30,710 --> 00:11:36,950
I think notice the three interface the

00:11:34,880 --> 00:11:39,320
first one is what how's Kathy and the

00:11:36,950 --> 00:11:41,720
second one is what her block and the

00:11:39,320 --> 00:11:44,720
server in the memory controller you can

00:11:41,720 --> 00:11:47,830
just start one i spaced a little target

00:11:44,720 --> 00:11:51,830
and to stop Hodel those different

00:11:47,830 --> 00:11:54,410
interfaces and for the kimi part you can

00:11:51,830 --> 00:11:56,900
use inbox kimi driver for the way host a

00:11:54,410 --> 00:11:59,120
user and the way host block and about a

00:11:56,900 --> 00:12:01,870
for the mme part away maintainer

00:11:59,120 --> 00:12:05,840
separated apache in our own incurred hub

00:12:01,870 --> 00:12:11,660
repertory and you can you open apply the

00:12:05,840 --> 00:12:13,580
patch and test over this for the slave

00:12:11,660 --> 00:12:16,660
target partner we have used three

00:12:13,580 --> 00:12:19,940
different components and below that

00:12:16,660 --> 00:12:23,600
components we have our block the rest

00:12:19,940 --> 00:12:26,810
layer which can be used for the physical

00:12:23,600 --> 00:12:33,350
amin device and al device and the server

00:12:26,810 --> 00:12:35,960
baby islam etcetera so as you know we

00:12:33,350 --> 00:12:39,460
host the users the ruching is basically

00:12:35,960 --> 00:12:42,500
the katya is that to share the different

00:12:39,460 --> 00:12:44,000
IQs between the guest and the rest live

00:12:42,500 --> 00:12:46,780
target here

00:12:44,000 --> 00:12:50,690
the circular message is used to set up a

00:12:46,780 --> 00:12:53,450
communication channel and for the mm is

00:12:50,690 --> 00:12:56,870
the lucien we reused a logical existing

00:12:53,450 --> 00:12:58,790
we host code to set up as a community

00:12:56,870 --> 00:12:59,720
channel between the gas and the dust

00:12:58,790 --> 00:13:02,450
delivered Huggett

00:12:59,720 --> 00:13:06,370
the first one is set event another fire

00:13:02,450 --> 00:13:09,440
it used to check the asynchronous event

00:13:06,370 --> 00:13:12,710
report a feature in in the back in the

00:13:09,440 --> 00:13:15,920
slave target and the second one is that

00:13:12,710 --> 00:13:19,540
gas notifier this message is used to set

00:13:15,920 --> 00:13:22,990
the complexion cues i qfd

00:13:19,540 --> 00:13:25,240
sided against and the the most important

00:13:22,990 --> 00:13:27,220
one I think is the centimeter boys used

00:13:25,240 --> 00:13:30,579
to share that share the memory between

00:13:27,220 --> 00:13:32,680
the chemo and adversely with Hoggett so

00:13:30,579 --> 00:13:38,680
that is a speech delivered Haggadah Kang

00:13:32,680 --> 00:13:41,259
converted I was sent from the guest to

00:13:38,680 --> 00:13:45,540
implement a zero copy that I uploaded

00:13:41,259 --> 00:13:48,550
and we added two extra such a message to

00:13:45,540 --> 00:13:50,139
implemented the Mme and protocol the

00:13:48,550 --> 00:13:53,440
first one is a demain pass through

00:13:50,139 --> 00:13:55,209
command so this this command is used the

00:13:53,440 --> 00:13:59,319
photos the little pass in the enemy's

00:13:55,209 --> 00:14:01,120
back and we embedded some monetary and

00:13:59,319 --> 00:14:04,240
the mink amounts in this at the main

00:14:01,120 --> 00:14:06,370
pass through stock in a message and that

00:14:04,240 --> 00:14:09,250
who implemented the the software

00:14:06,370 --> 00:14:11,829
solution and the other ones we call the

00:14:09,250 --> 00:14:15,370
set or get controller configurations

00:14:11,829 --> 00:14:18,430
used to kick and start the Mme device

00:14:15,370 --> 00:14:24,040
and the disabled is a memory device so

00:14:18,430 --> 00:14:25,029
this is for the existing implementation

00:14:24,040 --> 00:14:31,209
for the future

00:14:25,029 --> 00:14:34,329
I think it's not it's not quite accurate

00:14:31,209 --> 00:14:36,339
at who adds the two we host the messages

00:14:34,329 --> 00:14:38,560
into the existing we host the library

00:14:36,339 --> 00:14:41,760
it's done I mean it may not make sense

00:14:38,560 --> 00:14:45,089
so in future we may drop the two

00:14:41,760 --> 00:14:50,170
messages based on different is

00:14:45,089 --> 00:14:53,589
implementation so further for this one

00:14:50,170 --> 00:14:56,529
is already just said for the state

00:14:53,589 --> 00:14:59,589
memory table use that who maple the

00:14:56,529 --> 00:15:01,750
share the memory in the Kim you and the

00:14:59,589 --> 00:15:05,019
guest and I said the notifier we can

00:15:01,750 --> 00:15:08,589
reuse the existing we host the message

00:15:05,019 --> 00:15:10,689
center in call to set up the argue and

00:15:08,589 --> 00:15:13,839
for the other part of the survey and

00:15:10,689 --> 00:15:17,949
said occur config it can be used to set

00:15:13,839 --> 00:15:20,470
kettle the PC a past basis registers so

00:15:17,949 --> 00:15:21,430
one proposal from us is to extend

00:15:20,470 --> 00:15:23,709
existing

00:15:21,430 --> 00:15:25,509
Kimmy we host the library and make it

00:15:23,709 --> 00:15:27,639
can be used and for the name without

00:15:25,509 --> 00:15:30,730
devices such as and me

00:15:27,639 --> 00:15:33,089
maybe we can rename there every host the

00:15:30,730 --> 00:15:37,259
user library maybe would

00:15:33,089 --> 00:15:43,259
made it to PCI user maybe it will make

00:15:37,259 --> 00:15:46,230
more sense so this is that example to

00:15:43,259 --> 00:15:48,660
show how we can shed happens a share

00:15:46,230 --> 00:15:53,040
that I accused between the guest and the

00:15:48,660 --> 00:15:55,410
seller would hug it so the guests that

00:15:53,040 --> 00:15:58,649
whilst in the crate I was the Machine

00:15:55,410 --> 00:16:01,589
kook amount of risk and this is the spec

00:15:58,649 --> 00:16:06,930
a different definition for the critic

00:16:01,589 --> 00:16:10,410
you and the PRP PRP is a pointer to

00:16:06,930 --> 00:16:14,160
point to the submission kills physical

00:16:10,410 --> 00:16:15,990
address inside the guest and when some

00:16:14,160 --> 00:16:18,420
idiot with Adam in Q and a they will

00:16:15,990 --> 00:16:22,829
write in the PCR edited as a doorbell

00:16:18,420 --> 00:16:25,379
and the Kim you will capture this Ed

00:16:22,829 --> 00:16:28,170
McMahon and stainless commander for

00:16:25,379 --> 00:16:30,720
weather we host the usage and to my sake

00:16:28,170 --> 00:16:36,930
that to the delivered Huggett and the

00:16:30,720 --> 00:16:39,509
SPL and got this mount and make memory

00:16:36,930 --> 00:16:44,699
translation here the memory translations

00:16:39,509 --> 00:16:46,439
from GPA to each way gets the physical

00:16:44,699 --> 00:16:50,639
memory address to host the virtual

00:16:46,439 --> 00:16:52,589
address so after this step both a speedy

00:16:50,639 --> 00:16:56,670
key and the kim you can see the shim

00:16:52,589 --> 00:17:01,550
summation cue now so this is the same

00:16:56,670 --> 00:17:04,919
for the compressing Q so let's see when

00:17:01,550 --> 00:17:07,799
did past opening message and for the our

00:17:04,919 --> 00:17:10,649
command submission so mm e 1.3

00:17:07,799 --> 00:17:13,579
introduced a new feature we call shadow

00:17:10,649 --> 00:17:18,319
table above config with this feature

00:17:13,579 --> 00:17:22,679
when submitting the command from the

00:17:18,319 --> 00:17:25,980
guest the guest that will not write the

00:17:22,679 --> 00:17:28,860
shadow Dobel sorry will not write the

00:17:25,980 --> 00:17:31,350
pcr editors and will write into the

00:17:28,860 --> 00:17:35,700
shadow double instead of the PC already

00:17:31,350 --> 00:17:40,140
set this feature is enabled from Linux

00:17:35,700 --> 00:17:42,690
photo 12 so some new Linux kernel will

00:17:40,140 --> 00:17:46,530
are already in enable this feature by

00:17:42,690 --> 00:17:49,230
default from SP side

00:17:46,530 --> 00:17:54,150
we can post about the shadowed opera

00:17:49,230 --> 00:17:57,180
buffa and there's a traditional oda

00:17:54,150 --> 00:18:00,480
linux kernel's we can pull the shadowed

00:17:57,180 --> 00:18:03,930
opera buffa and the pca party our own

00:18:00,480 --> 00:18:06,200
double registers at the same time it

00:18:03,930 --> 00:18:09,120
depends on the users choice

00:18:06,200 --> 00:18:14,450
so what cost performance is improved

00:18:09,120 --> 00:18:23,090
when the shader double is enabled so

00:18:14,450 --> 00:18:26,670
this is the shows how this feature work

00:18:23,090 --> 00:18:29,940
to submit a new i/o and the right to -

00:18:26,670 --> 00:18:33,600
submitting humans doorbell and if this

00:18:29,940 --> 00:18:38,010
rents in the guest OS it will cost them

00:18:33,600 --> 00:18:40,790
and we max it right and so with this new

00:18:38,010 --> 00:18:45,960
feature it will write to the shaded of L

00:18:40,790 --> 00:18:48,450
so after this enabled so Mme protocol B

00:18:45,960 --> 00:18:55,290
becomes the grid parallel and

00:18:48,450 --> 00:18:59,960
paravirtualized the protocol so this is

00:18:55,290 --> 00:19:03,420
one example for the Iowa curing process

00:18:59,960 --> 00:19:07,260
guess they will send this new i/o to the

00:19:03,420 --> 00:19:09,510
summation queue and as people start a

00:19:07,260 --> 00:19:13,980
polar just polling this summation queue

00:19:09,510 --> 00:19:18,380
and it will pick up this new request and

00:19:13,980 --> 00:19:22,470
send it to the back end devices and

00:19:18,380 --> 00:19:24,780
after the back end completed this i/o it

00:19:22,470 --> 00:19:29,010
will post the compression entry into the

00:19:24,780 --> 00:19:33,810
compression queue and will inject our

00:19:29,010 --> 00:19:35,780
view into the guest here there is maybe

00:19:33,810 --> 00:19:39,240
[Music]

00:19:35,780 --> 00:19:43,410
there is one thing for here for the

00:19:39,240 --> 00:19:45,810
completion path they will have user to

00:19:43,410 --> 00:19:49,650
Colonel contacts which for the IQ

00:19:45,810 --> 00:19:52,710
injection and at asked the colonel guest

00:19:49,650 --> 00:19:56,070
will get this response and finish this

00:19:52,710 --> 00:19:59,480
i/o so for nest we will see some

00:19:56,070 --> 00:19:59,480
performance based markers

00:19:59,540 --> 00:20:06,600
this is one example we just started one

00:20:02,820 --> 00:20:09,420
lamb with Mme SSDs the purpose is to

00:20:06,600 --> 00:20:13,260
want to get the keebum events to email

00:20:09,420 --> 00:20:18,450
you it is a efficiency for this new

00:20:13,260 --> 00:20:21,240
solution the the yellow one is Kim you

00:20:18,450 --> 00:20:24,000
and Remy solution it's his impulse

00:20:21,240 --> 00:20:26,460
commune solution and the other three

00:20:24,000 --> 00:20:28,230
partner will host the users solutions

00:20:26,460 --> 00:20:32,250
you can see that for the way host your

00:20:28,230 --> 00:20:34,440
solutions as our UPS is very high we use

00:20:32,250 --> 00:20:36,810
the way and Remy Phillip controller the

00:20:34,440 --> 00:20:41,820
hardware limitation for this controller

00:20:36,810 --> 00:20:44,580
is the part of 1850 and 550 ups for

00:20:41,820 --> 00:20:47,670
random read ups you can see the folder

00:20:44,580 --> 00:20:51,150
we host the Mme solution in almost the

00:20:47,670 --> 00:20:55,230
Hayden's a hardware limitation and we

00:20:51,150 --> 00:20:58,560
also see for the CPU utilization level

00:20:55,230 --> 00:21:01,590
you can see that as we can see not too

00:20:58,560 --> 00:21:04,230
much different from the we host Mme a

00:21:01,590 --> 00:21:13,530
true compared with we host the block and

00:21:04,230 --> 00:21:18,210
ask us in solution and the otherwise we

00:21:13,530 --> 00:21:23,910
started h-vamps with for Mme as the DS

00:21:18,210 --> 00:21:27,980
this this is kind of some common used

00:21:23,910 --> 00:21:31,110
scenarios I usually make one who want to

00:21:27,980 --> 00:21:35,990
share when Mme as it is with different

00:21:31,110 --> 00:21:39,330
events so this is another test scenarios

00:21:35,990 --> 00:21:41,910
so we can see for the we host the Mme

00:21:39,330 --> 00:21:46,050
solution anywhere can better for the

00:21:41,910 --> 00:21:53,490
apps and and for the latest party will

00:21:46,050 --> 00:21:57,810
have lower latency so one question here

00:21:53,490 --> 00:22:00,450
is because Linux Mme driver will pull

00:21:57,810 --> 00:22:02,820
completion queue while submitting a new

00:22:00,450 --> 00:22:06,840
request to the summation cause it shows

00:22:02,820 --> 00:22:11,190
with this with this optimization which

00:22:06,840 --> 00:22:17,760
help to decrease some interrupt numbers

00:22:11,190 --> 00:22:20,180
and we will help with some I mean the

00:22:17,760 --> 00:22:24,180
ladies they part because from the

00:22:20,180 --> 00:22:26,130
implement the implementation of EU we

00:22:24,180 --> 00:22:28,470
host the Mme and we host the blog

00:22:26,130 --> 00:22:31,560
through the hardest at the same levels

00:22:28,470 --> 00:22:34,730
performance normal it will have too much

00:22:31,560 --> 00:22:39,210
difference just because mmm it's back is

00:22:34,730 --> 00:22:42,840
more common compared with what her blog

00:22:39,210 --> 00:22:44,610
or what her Barker is so simple that it

00:22:42,840 --> 00:22:51,780
carries the probably the rights the

00:22:44,610 --> 00:22:54,540
simple commands so it's summary so for

00:22:51,780 --> 00:22:57,300
this solution need human driver can be

00:22:54,540 --> 00:22:59,930
used inside the guest and we do not need

00:22:57,300 --> 00:23:02,970
actual paravirtualized the driver and

00:22:59,930 --> 00:23:06,810
for the automation paths the way do not

00:23:02,970 --> 00:23:12,060
have where maksud and way to have our

00:23:06,810 --> 00:23:14,220
cue compassion when the instances we

00:23:12,060 --> 00:23:16,800
inject the actual to the guest event

00:23:14,220 --> 00:23:20,310
there's a user to kernel context

00:23:16,800 --> 00:23:22,890
switching and all the way host the use

00:23:20,310 --> 00:23:26,670
of solutions as they're copied for our

00:23:22,890 --> 00:23:29,370
commands and for this solution can also

00:23:26,670 --> 00:23:32,360
benefit from linux block driver which

00:23:29,370 --> 00:23:36,470
enabled a multi cue features and

00:23:32,360 --> 00:23:40,280
compared with what has got a protocol

00:23:36,470 --> 00:23:44,660
mme is back has fixed 60 bytes for

00:23:40,280 --> 00:23:48,900
commands and 16 bytes for the response

00:23:44,660 --> 00:23:51,540
when uses damage our vectors and

00:23:48,900 --> 00:23:53,940
commands it is more efficient compared

00:23:51,540 --> 00:23:56,580
with what how scotty protocol and our

00:23:53,940 --> 00:23:59,670
cost was for existing we host your

00:23:56,580 --> 00:24:04,790
solution for the purpose to implement

00:23:59,670 --> 00:24:10,050
their copy and who TiVo is required to

00:24:04,790 --> 00:24:14,010
to use this solution and in some future

00:24:10,050 --> 00:24:16,200
work our first one with is that way we

00:24:14,010 --> 00:24:17,270
all resell for the hardware systems

00:24:16,200 --> 00:24:22,470
solutions

00:24:17,270 --> 00:24:24,330
migration had who had so this is 100% a

00:24:22,470 --> 00:24:24,750
software solution so for the magazine

00:24:24,330 --> 00:24:27,680
party

00:24:24,750 --> 00:24:32,910
I add to this feature support very

00:24:27,680 --> 00:24:33,900
easily and next part maybe we won't have

00:24:32,910 --> 00:24:37,080
dreaming

00:24:33,900 --> 00:24:39,690
such an idea to the Kim you in a

00:24:37,080 --> 00:24:42,840
repertory and to make morosely can

00:24:39,690 --> 00:24:45,270
benefit from a solution and thus living

00:24:42,840 --> 00:24:51,590
with me in future we want to edit

00:24:45,270 --> 00:25:00,870
container support for for this idea okay

00:24:51,590 --> 00:25:04,650
Q&A I thanks for the presentation I

00:25:00,870 --> 00:25:07,770
think this shows how promising the

00:25:04,650 --> 00:25:11,460
results are in terms of using a single

00:25:07,770 --> 00:25:12,840
process that can pull everywhere and the

00:25:11,460 --> 00:25:15,240
results speak for themselves

00:25:12,840 --> 00:25:16,590
I wanted to ask a question around the

00:25:15,240 --> 00:25:20,940
choice to use vhosts

00:25:16,590 --> 00:25:22,560
for the offloading process as you would

00:25:20,940 --> 00:25:25,170
appear that he host is more meant for

00:25:22,560 --> 00:25:26,760
Verdi o based devices and I was

00:25:25,170 --> 00:25:29,610
wondering if you could comment on the

00:25:26,760 --> 00:25:32,220
choice of using V host versus perhaps

00:25:29,610 --> 00:25:34,890
proposing a Verdejo and vme protocol

00:25:32,220 --> 00:25:37,860
where nvme comments can be passed over

00:25:34,890 --> 00:25:40,860
very own and then we host just naturally

00:25:37,860 --> 00:25:43,530
words or maybe trying to use something

00:25:40,860 --> 00:25:48,480
like vfi or perhaps within dev or

00:25:43,530 --> 00:25:51,360
something else for that purpose I think

00:25:48,480 --> 00:25:55,050
both those ideas can work but we

00:25:51,360 --> 00:25:58,620
definitely needed to figure out when the

00:25:55,050 --> 00:26:04,170
solution that can get by the CPU

00:25:58,620 --> 00:26:06,600
utilization and get better helps with

00:26:04,170 --> 00:26:10,020
their lower our CPU utilization so

00:26:06,600 --> 00:26:13,320
polling is a great idea compared with

00:26:10,020 --> 00:26:16,560
some other solutions and I'm deaf

00:26:13,320 --> 00:26:19,200
solution I Audrey and mentioned in the

00:26:16,560 --> 00:26:21,000
pre the already machine in free we are

00:26:19,200 --> 00:26:24,000
so nice for the stealable

00:26:21,000 --> 00:26:26,250
our way and i'm debrah me say for the

00:26:24,000 --> 00:26:29,190
memory interface that will require a lot

00:26:26,250 --> 00:26:31,560
our coach and scalable our way is

00:26:29,190 --> 00:26:34,020
definitely cannot work with Mme device

00:26:31,560 --> 00:26:37,170
because the name is based issue and you

00:26:34,020 --> 00:26:38,700
must a figure out the namespace issue to

00:26:37,170 --> 00:26:40,850
use killable

00:26:38,700 --> 00:26:44,220
and the fall time damn HUD says you must

00:26:40,850 --> 00:26:47,309
implement the totally immunity I meant

00:26:44,220 --> 00:26:50,700
the rise in the kernel side to benefit

00:26:47,309 --> 00:26:52,859
from a hardware solution so we evaluated

00:26:50,700 --> 00:26:57,269
all those different solutions and the

00:26:52,859 --> 00:27:10,950
waste using this kind of idea is and not

00:26:57,269 --> 00:27:15,419
too bad yeah how do you think migration

00:27:10,950 --> 00:27:18,029
will work with SP t care do you think

00:27:15,419 --> 00:27:22,159
you'll be able to use any of the

00:27:18,029 --> 00:27:26,129
existing my block migration schemes

00:27:22,159 --> 00:27:30,899
no no so for the migration party we can

00:27:26,129 --> 00:27:33,809
only support to Margaret another maybe

00:27:30,899 --> 00:27:37,619
another rule we can just make hate can

00:27:33,809 --> 00:27:40,769
work and the further block magazine it

00:27:37,619 --> 00:27:43,409
cannot support it because we do not have

00:27:40,769 --> 00:27:45,809
a us-based file system and we cannot

00:27:43,409 --> 00:27:54,119
track which block is used and which

00:27:45,809 --> 00:27:55,710
block is as is empty so we are out of

00:27:54,119 --> 00:27:59,070
the time so if you have any questions we

00:27:55,710 --> 00:28:00,480
can discuss it during the break so thank

00:27:59,070 --> 00:28:03,480
you

00:28:00,480 --> 00:28:09,259
[Applause]

00:28:03,480 --> 00:28:09,259

YouTube URL: https://www.youtube.com/watch?v=paTvtJ6JdAc


