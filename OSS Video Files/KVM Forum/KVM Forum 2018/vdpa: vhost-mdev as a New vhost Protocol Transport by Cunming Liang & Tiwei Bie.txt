Title: vdpa: vhost-mdev as a New vhost Protocol Transport by Cunming Liang & Tiwei Bie
Publication date: 2018-11-17
Playlist: KVM Forum 2018
Description: 
	vdpa is introduced to vhost so as to hookup with a virtio compatible DMA controller. It allows whatever HW device being represented as emulated virtio device being able to DMA buffers to guest directly.
vhost-mdev constructs a new transport carrying vhost protocol message, which leverages mdev framework to expose virtio compatible portion from its parent device. Qemu vhost takes vhost-mdev instances as general VFIO devices.
The talk is going to introduce all building blocks including qemu vhost-vfio adapter, kernel vhost-mdev helpers and a driver provider. Meanwhile, it will touch some points relevant to the new feature bits in virtio spec.

---

Tiwei Bie
Software Engineer
Intel

Tiwei is DPDK virtio/vhost maintainer. The major effort recently is on qemu/kernel vdpa enabling and virtio 1.1 kernel driver.

Cunming Liang
Architect
Intel

Cunming is architect of data plane software, spending years on high performance network I/O of general purpose CPU and its virtualization includes para-virtualization and SR-IOV. One of the recent effort is to drive NFV grade virtual network device towards higher performance, smaller granularity and better cloudification.
Captions: 
	00:00:01,040 --> 00:00:10,500
[Music]

00:00:06,420 --> 00:00:12,540
hello everyone Lea I start to my topic

00:00:10,500 --> 00:00:15,839
so firstly introduce myself

00:00:12,540 --> 00:00:18,359
I'm Steve from Intel works for Intel and

00:00:15,839 --> 00:00:20,970
now have a network platform group which

00:00:18,359 --> 00:00:25,109
blasts tutor data center group so today

00:00:20,970 --> 00:00:28,050
my topic is about me DBA some of some of

00:00:25,109 --> 00:00:30,689
you might know that but and I think most

00:00:28,050 --> 00:00:32,820
of them don't so I think so the topic is

00:00:30,689 --> 00:00:35,070
probably you know each of the word but

00:00:32,820 --> 00:00:36,750
you don't know actually remover a to me

00:00:35,070 --> 00:00:37,950
so today I want to start from the

00:00:36,750 --> 00:00:40,079
beginning so I'll start from my

00:00:37,950 --> 00:00:43,260
background what's the background around

00:00:40,079 --> 00:00:45,539
that so okay you know that I'm working

00:00:43,260 --> 00:00:48,270
from the narrow platform so the program

00:00:45,539 --> 00:00:51,090
actually on the interface is that so we

00:00:48,270 --> 00:00:53,610
are good to use just her like a partial

00:00:51,090 --> 00:00:56,090
device so you can easily get the native

00:00:53,610 --> 00:00:58,379
performance like the unique provider so

00:00:56,090 --> 00:00:59,340
plus word device to the ghast and the

00:00:58,379 --> 00:01:01,590
katadyn virtualized

00:00:59,340 --> 00:01:04,979
but essentially the the challenge is

00:01:01,590 --> 00:01:06,780
that towards the cloud this is not cloud

00:01:04,979 --> 00:01:09,330
this is just a virtualized so the

00:01:06,780 --> 00:01:13,229
problem is that interfaces are hard to

00:01:09,330 --> 00:01:14,820
either online migration or hard to do

00:01:13,229 --> 00:01:17,790
technical resource allocation or

00:01:14,820 --> 00:01:21,360
provision etc so that's the problem for

00:01:17,790 --> 00:01:24,000
like partial device facing tutor cloud

00:01:21,360 --> 00:01:26,909
running so that's our that's problem and

00:01:24,000 --> 00:01:28,740
either that their water now appliance

00:01:26,909 --> 00:01:30,810
actually can choose another choice if we

00:01:28,740 --> 00:01:33,210
choose the like world IO device so the

00:01:30,810 --> 00:01:35,220
things is that so you hypervisor

00:01:33,210 --> 00:01:37,110
emulator device the end on the backhand

00:01:35,220 --> 00:01:39,450
side that the virtuous region is run by

00:01:37,110 --> 00:01:42,689
your software software on the core and

00:01:39,450 --> 00:01:45,079
we can scale out of the core count

00:01:42,689 --> 00:01:48,329
actually to provide a higher performers

00:01:45,079 --> 00:01:50,070
titter to the v enough but situation

00:01:48,329 --> 00:01:53,070
happens is that okay that is quite good

00:01:50,070 --> 00:01:55,439
maybe for 10 gigabits switch capability

00:01:53,070 --> 00:01:58,740
but what about for the future like we

00:01:55,439 --> 00:02:01,680
want to run more more pairwise workloads

00:01:58,740 --> 00:02:04,049
on their guests for their like tanky 25

00:02:01,680 --> 00:02:05,850
even 100 how about that if we

00:02:04,049 --> 00:02:07,649
infrastructure is being a more coarse to

00:02:05,850 --> 00:02:13,680
do that how about the course for the

00:02:07,649 --> 00:02:16,170
workloads so how so we start yeah we

00:02:13,680 --> 00:02:17,879
we are looking at both sides for the

00:02:16,170 --> 00:02:20,519
possible device order paravirtualized

00:02:17,879 --> 00:02:23,189
device but the topic today our Iowa

00:02:20,519 --> 00:02:25,530
mainly focus on the paravirtualized so

00:02:23,189 --> 00:02:28,739
the way we have optimized the parable

00:02:25,530 --> 00:02:32,819
choice days that we we we are working on

00:02:28,739 --> 00:02:36,420
like provider DDK so using communicate

00:02:32,819 --> 00:02:39,659
to accelerate the endpoint so like that

00:02:36,420 --> 00:02:41,849
here actually further for the which

00:02:39,659 --> 00:02:42,959
software switch we have our PMD for the

00:02:41,849 --> 00:02:44,909
water we host

00:02:42,959 --> 00:02:47,760
so actually we run that in user space

00:02:44,909 --> 00:02:50,780
and actually that that just works fine

00:02:47,760 --> 00:02:53,879
so if we look at the parse that data

00:02:50,780 --> 00:02:56,879
that device control actually we use

00:02:53,879 --> 00:02:58,530
vhosts to user to that to talk with

00:02:56,879 --> 00:03:01,319
screaming you to get to the device talib

00:02:58,530 --> 00:03:04,769
and on the data path actually it's a

00:03:01,319 --> 00:03:07,319
share memory so dbgap promo driver talk

00:03:04,769 --> 00:03:09,709
we store gas driver based on Russian

00:03:07,319 --> 00:03:13,769
memory this is the way how we work and

00:03:09,709 --> 00:03:17,419
then what about that you connect with

00:03:13,769 --> 00:03:19,949
your hardware device the actually here

00:03:17,419 --> 00:03:22,739
here is that like you have a small neck

00:03:19,949 --> 00:03:24,680
so if that you get a small neck how's

00:03:22,739 --> 00:03:27,690
the way to connect with that interface

00:03:24,680 --> 00:03:31,049
let's say if this is a hardware device

00:03:27,690 --> 00:03:34,500
what's the way so we this is the vision

00:03:31,049 --> 00:03:36,840
we want to see is that so for for the

00:03:34,500 --> 00:03:39,349
next generation virtual endpoints

00:03:36,840 --> 00:03:42,419
further be enough we want this to be our

00:03:39,349 --> 00:03:44,790
interface which is cloud ready but in

00:03:42,419 --> 00:03:47,970
terms of performers we were like that io

00:03:44,790 --> 00:03:50,310
can directly talk to their VM to

00:03:47,970 --> 00:03:52,799
workloads in the VM so that basically on

00:03:50,310 --> 00:03:55,109
the data pass we actually I owe to CPU

00:03:52,799 --> 00:03:57,269
that's our device to CPU communication

00:03:55,109 --> 00:04:00,090
meanwhile that on device side it's to be

00:03:57,269 --> 00:04:02,250
emulates that we can use even well

00:04:00,090 --> 00:04:03,780
support the software pack and so you can

00:04:02,250 --> 00:04:05,790
easily switch over from a software

00:04:03,780 --> 00:04:07,530
package to a hard word back-end and even

00:04:05,790 --> 00:04:09,900
that to remote i/o in the lab migration

00:04:07,530 --> 00:04:13,769
so that's the background vision about

00:04:09,900 --> 00:04:15,840
that and so that's ways the how to

00:04:13,769 --> 00:04:19,620
figure out a way to convert in both of

00:04:15,840 --> 00:04:21,930
them and then I will give a little bit

00:04:19,620 --> 00:04:24,120
of introduce about me DPA so what is

00:04:21,930 --> 00:04:27,300
maybe a that's a V host or data paths

00:04:24,120 --> 00:04:29,520
acceleration so two key points so

00:04:27,300 --> 00:04:31,139
remain the device being emulated in Kiev

00:04:29,520 --> 00:04:34,289
natively nothing changed and modified

00:04:31,139 --> 00:04:36,449
and only that further its back-end for

00:04:34,289 --> 00:04:39,419
the B house channel we introduce the

00:04:36,449 --> 00:04:41,280
director IO so make it the real hardware

00:04:39,419 --> 00:04:43,919
device can talk with your caster VM

00:04:41,280 --> 00:04:46,770
author Utley so what's the benefit the

00:04:43,919 --> 00:04:49,470
benefit is firstly that so under de plan

00:04:46,770 --> 00:04:51,960
past performance perspective it can

00:04:49,470 --> 00:04:54,870
provide our equivalents packet rate so

00:04:51,960 --> 00:04:57,840
nothing changes on a data plan so it's

00:04:54,870 --> 00:05:00,650
direct dial through like iommu talk mr.

00:04:57,840 --> 00:05:03,120
gasner memory directly so then under

00:05:00,650 --> 00:05:05,669
migration style i'm reversion side so

00:05:03,120 --> 00:05:08,039
basically we will not introduce any of

00:05:05,669 --> 00:05:09,599
the new interface even under backin we

00:05:08,039 --> 00:05:11,969
host back inside all the things that

00:05:09,599 --> 00:05:14,099
leverage is existing on the v host so

00:05:11,969 --> 00:05:17,460
like we hosted to trigger when to start

00:05:14,099 --> 00:05:19,800
login at the age when to start to save

00:05:17,460 --> 00:05:21,840
their mirroring base and the restore the

00:05:19,800 --> 00:05:24,919
viewer base this interface are remains

00:05:21,840 --> 00:05:27,389
the same nothing changed and there in

00:05:24,919 --> 00:05:30,300
the last piece is the most important

00:05:27,389 --> 00:05:32,099
piece is that we were like to to make

00:05:30,300 --> 00:05:35,789
the unmodified what I have driver just

00:05:32,099 --> 00:05:39,060
work so not just only for the like 1.0

00:05:35,789 --> 00:05:42,779
but 0.95 because the one major change

00:05:39,060 --> 00:05:46,650
about them is there the i/o access like

00:05:42,779 --> 00:05:48,870
one is mio another is polio so that's

00:05:46,650 --> 00:05:53,699
where things are trying to be a served

00:05:48,870 --> 00:05:56,879
reserved in there there V dpi so we we

00:05:53,699 --> 00:06:01,440
start destroy our actually around DB D K

00:05:56,879 --> 00:06:03,779
so we got code upstream on 18.5 which is

00:06:01,440 --> 00:06:06,419
their main release and also commute

00:06:03,779 --> 00:06:11,060
support like sort of the extension on

00:06:06,419 --> 00:06:14,159
the B host message point 3.0 so that the

00:06:11,060 --> 00:06:16,680
grameen efforts for that is to getting

00:06:14,159 --> 00:06:19,740
both of em you support the same working

00:06:16,680 --> 00:06:22,020
progress so this is the patch so working

00:06:19,740 --> 00:06:24,810
programs patch and I also attach their

00:06:22,020 --> 00:06:27,180
links to other talks around our beanie

00:06:24,810 --> 00:06:30,060
PA support in DB D K so this is their

00:06:27,180 --> 00:06:32,400
backgrounds and then give her a quick

00:06:30,060 --> 00:06:34,650
introduce as how it works in DB D K so

00:06:32,400 --> 00:06:37,589
basically in the decay we add our select

00:06:34,650 --> 00:06:40,520
T data path support for the V host user

00:06:37,589 --> 00:06:44,669
library so DB k has our

00:06:40,520 --> 00:06:47,760
Tbk has her viho shoes our library so

00:06:44,669 --> 00:06:50,430
now we are extended to support not only

00:06:47,760 --> 00:06:52,949
the software back-end the dbgap MD but

00:06:50,430 --> 00:06:54,990
also to support like a driver so the

00:06:52,949 --> 00:06:57,360
driver gets the same message from the

00:06:54,990 --> 00:07:00,750
front end from the Rijos user library

00:06:57,360 --> 00:07:03,000
and then as well associates that we just

00:07:00,750 --> 00:07:05,550
ocular with sorry

00:07:03,000 --> 00:07:08,070
the first Sascha associated with Reese

00:07:05,550 --> 00:07:10,530
how sake to get all the message from V

00:07:08,070 --> 00:07:12,600
host from Kim you and then program that

00:07:10,530 --> 00:07:14,550
about device to start up the contacts so

00:07:12,600 --> 00:07:16,650
once the data past contacts being SATA

00:07:14,550 --> 00:07:23,520
set up the device can talk with the

00:07:16,650 --> 00:07:26,790
fernanda memory directly and then we we

00:07:23,520 --> 00:07:28,530
expose these device to our presenter so

00:07:26,790 --> 00:07:31,440
that person represent or can connect

00:07:28,530 --> 00:07:33,360
with every switch lock logic so under we

00:07:31,440 --> 00:07:37,520
switch pipeline perspective it is our

00:07:33,360 --> 00:07:39,720
still have single V ports but you can

00:07:37,520 --> 00:07:41,639
turn ative lady choose that is a

00:07:39,720 --> 00:07:44,190
portable presenter which have no traffic

00:07:41,639 --> 00:07:46,350
no fast pass traffic go into the

00:07:44,190 --> 00:07:49,350
pipeline or you can choose our real a

00:07:46,350 --> 00:07:52,770
PMD which order a traffic will go to

00:07:49,350 --> 00:07:55,740
their software a plan so finally that we

00:07:52,770 --> 00:07:58,650
we are looking at to limit your hardware

00:07:55,740 --> 00:08:01,050
dependency like that if asked hardware

00:07:58,650 --> 00:08:03,240
to always log into the page so that's

00:08:01,050 --> 00:08:05,039
the hardware effort to do that so we are

00:08:03,240 --> 00:08:07,620
looking also on duplicate side we're

00:08:05,039 --> 00:08:09,450
looking under the way so even hardware

00:08:07,620 --> 00:08:11,280
don't have the capability to log that

00:08:09,450 --> 00:08:13,620
daily page we can fall back to the

00:08:11,280 --> 00:08:18,900
software data paths so that on that time

00:08:13,620 --> 00:08:21,090
you you can switch over to the software

00:08:18,900 --> 00:08:23,250
data plan and then generate a

00:08:21,090 --> 00:08:28,050
micronation so that's the effort

00:08:23,250 --> 00:08:29,760
TDK and then people may ask so you

00:08:28,050 --> 00:08:32,669
already have our like hardware without

00:08:29,760 --> 00:08:36,930
interface endpoints why not just pass

00:08:32,669 --> 00:08:40,529
rule right so that's a few conservation

00:08:36,930 --> 00:08:42,659
the first one is that so we are we need

00:08:40,529 --> 00:08:44,970
to support our version but that is not

00:08:42,659 --> 00:08:47,970
just a hardware what i'll migrate to

00:08:44,970 --> 00:08:52,000
another Holliman i/o we also aim to

00:08:47,970 --> 00:08:55,300
support like how you migrate stock be

00:08:52,000 --> 00:08:59,350
software they plan to our Hardware Mirai

00:08:55,300 --> 00:09:01,390
oh so what vice worse so from different

00:08:59,350 --> 00:09:04,180
back-end from different we host back-end

00:09:01,390 --> 00:09:07,090
to can be capable I'm reparation each

00:09:04,180 --> 00:09:10,690
other so and then we need to address the

00:09:07,090 --> 00:09:14,050
stock BM issues to that model most

00:09:10,690 --> 00:09:17,200
widely used a is 0.95 we support which

00:09:14,050 --> 00:09:20,920
always cause the exception and there

00:09:17,200 --> 00:09:24,490
then the rest of them is under hardware

00:09:20,920 --> 00:09:27,820
design consideration so it's still

00:09:24,490 --> 00:09:32,140
software's back it's really that you

00:09:27,820 --> 00:09:36,520
have a spec but still not so stable

00:09:32,140 --> 00:09:39,100
because however it's iteration is hard

00:09:36,520 --> 00:09:41,980
it's slower much slower that's all for

00:09:39,100 --> 00:09:44,890
right we try to reduce the impact to the

00:09:41,980 --> 00:09:47,410
hardware design so we the ways to do

00:09:44,890 --> 00:09:50,170
that is reduce the surface reduce the

00:09:47,410 --> 00:09:52,480
hardware interface with software so we

00:09:50,170 --> 00:09:54,400
are not asking to support a full a

00:09:52,480 --> 00:09:57,040
function like what I've defined that

00:09:54,400 --> 00:10:00,730
hardware we limited so what's the

00:09:57,040 --> 00:10:04,690
minimal proquest so who you limit it

00:10:00,730 --> 00:10:07,210
just for automation later in next few

00:10:04,690 --> 00:10:10,089
slices and also that from hardware

00:10:07,210 --> 00:10:12,160
perspective so holster the features for

00:10:10,089 --> 00:10:14,890
the cast or end point actually is not

00:10:12,160 --> 00:10:17,140
equivalent it not equal to the end point

00:10:14,890 --> 00:10:20,050
on host that means are hosted in

00:10:17,140 --> 00:10:22,300
interface how more functional actually

00:10:20,050 --> 00:10:24,190
it's not belongs to their guests so we

00:10:22,300 --> 00:10:27,339
are not necessary that plus to our

00:10:24,190 --> 00:10:30,790
device then you you you just to use the

00:10:27,339 --> 00:10:34,210
gas to function as a host function okay

00:10:30,790 --> 00:10:36,400
and and it's also there are tough for

00:10:34,210 --> 00:10:39,250
that order harbor and vendor just

00:10:36,400 --> 00:10:40,980
provide like a bowtie advice so then you

00:10:39,250 --> 00:10:43,810
lose all the difference between

00:10:40,980 --> 00:10:45,430
different kind of hardware so you just

00:10:43,810 --> 00:10:48,450
have a single hard over so how to

00:10:45,430 --> 00:10:52,540
support different functions for you and

00:10:48,450 --> 00:10:55,750
so so definitely we are not going to

00:10:52,540 --> 00:10:58,210
talking for Vienna specific so we won't

00:10:55,750 --> 00:11:00,430
have multi vendor support so we are

00:10:58,210 --> 00:11:03,370
trying to limit the hardware dependency

00:11:00,430 --> 00:11:05,020
so so the minimal proquest is that so of

00:11:03,370 --> 00:11:08,740
course your DMA controller

00:11:05,020 --> 00:11:10,420
to our uprights on the v-ray so that is

00:11:08,740 --> 00:11:12,460
the minimum of things otherwise you can

00:11:10,420 --> 00:11:15,150
not talk reserve or suffer right so

00:11:12,460 --> 00:11:17,410
others are options so you can optimize

00:11:15,150 --> 00:11:19,750
optimize there like a doorbell you can

00:11:17,410 --> 00:11:23,260
map your top out to the cast of being

00:11:19,750 --> 00:11:25,840
let it be impossible so like that paqu

00:11:23,260 --> 00:11:33,150
can have a separate page for that of

00:11:25,840 --> 00:11:37,900
course you can even design other yeah so

00:11:33,150 --> 00:11:39,580
so so so back-end under backend design

00:11:37,900 --> 00:11:42,010
you can own your back indesign not

00:11:39,580 --> 00:11:48,660
relevant to always follow the voters

00:11:42,010 --> 00:11:50,950
back and ok so so there's a lot of other

00:11:48,660 --> 00:11:52,660
consideration about data box like how we

00:11:50,950 --> 00:11:55,180
make it a faster and a piece of ass

00:11:52,660 --> 00:11:58,570
efficient that is not in today's agenda

00:11:55,180 --> 00:12:01,180
because we are like duplicate what I

00:11:58,570 --> 00:12:03,250
almost meaning we can talk about more

00:12:01,180 --> 00:12:06,040
about so today's my talk is more and

00:12:03,250 --> 00:12:08,470
many folks on the way to construct on

00:12:06,040 --> 00:12:08,860
the data pass so ok so what's the

00:12:08,470 --> 00:12:11,260
problem

00:12:08,860 --> 00:12:13,390
so we already do that indicate why we

00:12:11,260 --> 00:12:16,780
are going to prevent another things

00:12:13,390 --> 00:12:19,270
today so that's about program so we have

00:12:16,780 --> 00:12:21,910
tailed plan under user space by doing by

00:12:19,270 --> 00:12:25,450
software what about all these things can

00:12:21,910 --> 00:12:27,400
so why it happens is because that so

00:12:25,450 --> 00:12:29,770
when there are small country and so

00:12:27,400 --> 00:12:32,140
people even don't want to have their day

00:12:29,770 --> 00:12:35,680
plan on the house to minimal minimize or

00:12:32,140 --> 00:12:37,660
reduce their we hypervisor so ever so

00:12:35,680 --> 00:12:40,180
like order I always go to the separatist

00:12:37,660 --> 00:12:41,920
subsystem and also that under house that

00:12:40,180 --> 00:12:44,230
you may have there however that just

00:12:41,920 --> 00:12:46,870
take off their device management but no

00:12:44,230 --> 00:12:50,740
longer supply the i/o so then what

00:12:46,870 --> 00:12:52,990
happen is needs in the middle right so

00:12:50,740 --> 00:12:56,020
we still need our intermediate to

00:12:52,990 --> 00:12:58,180
connect or top back end with a real hard

00:12:56,020 --> 00:13:00,820
driver so what's the connection

00:12:58,180 --> 00:13:03,060
how what's the proposal of that so

00:13:00,820 --> 00:13:06,040
that's the topic for whom I talk today

00:13:03,060 --> 00:13:08,020
so there are we back to revisit the

00:13:06,040 --> 00:13:10,060
things we are going to have so first of

00:13:08,020 --> 00:13:12,250
all that we have our different type of

00:13:10,060 --> 00:13:14,980
devices from different vendor the device

00:13:12,250 --> 00:13:16,670
interface are quite different so you can

00:13:14,980 --> 00:13:18,620
have multiple vendors

00:13:16,670 --> 00:13:20,780
interface so basically we need our

00:13:18,620 --> 00:13:23,060
abstraction so on top of them so I can

00:13:20,780 --> 00:13:23,900
support multi vendor so what's the idea

00:13:23,060 --> 00:13:26,180
in the face

00:13:23,900 --> 00:13:28,420
so like that under what I perspective

00:13:26,180 --> 00:13:31,220
the V host already be the natural

00:13:28,420 --> 00:13:33,410
obstruction for the backend device and

00:13:31,220 --> 00:13:35,900
for the device driver what is their

00:13:33,410 --> 00:13:38,780
natural a a user space driver

00:13:35,900 --> 00:13:42,140
that's a via file so that that's why we

00:13:38,780 --> 00:13:45,230
proposed this we host plus VF IO that is

00:13:42,140 --> 00:13:49,010
V house that we fi all right and so we

00:13:45,230 --> 00:13:51,950
consider unconcern to direct silver dial

00:13:49,010 --> 00:13:55,520
to the cast but that's building around

00:13:51,950 --> 00:13:58,100
we host so we were like that packin

00:13:55,520 --> 00:14:02,780
twice the interface you being around V

00:13:58,100 --> 00:14:06,320
host so here's the scene so here's the

00:14:02,780 --> 00:14:08,930
proposal so we can do that in a few ways

00:14:06,320 --> 00:14:11,500
like that we can do that in commune with

00:14:08,930 --> 00:14:15,260
some pork but we are not choose that

00:14:11,500 --> 00:14:18,260
beakers so we have other device

00:14:15,260 --> 00:14:20,150
interface not just like one bottle

00:14:18,260 --> 00:14:22,880
device so we can do that like in a

00:14:20,150 --> 00:14:24,770
commune we can introduce a but I Drive

00:14:22,880 --> 00:14:27,620
er then add some quicks for other things

00:14:24,770 --> 00:14:30,530
I mentioned but what about other device

00:14:27,620 --> 00:14:32,900
totally basically I'm not just about a

00:14:30,530 --> 00:14:35,150
device I have a device vendor ID that is

00:14:32,900 --> 00:14:37,070
Intel or plus plus and other features

00:14:35,150 --> 00:14:40,550
what about that so you have a lot of

00:14:37,070 --> 00:14:42,110
bender and that another is that if you

00:14:40,550 --> 00:14:44,450
take that what about the controls

00:14:42,110 --> 00:14:46,280
operation so like that we I need you

00:14:44,450 --> 00:14:48,680
need to leverage the kernel functions TT

00:14:46,280 --> 00:14:51,380
floors to configure that presenter how

00:14:48,680 --> 00:14:53,990
that comes from and also host features

00:14:51,380 --> 00:14:55,790
as I mention is much more than the

00:14:53,990 --> 00:14:57,860
front-end functions we can reduce

00:14:55,790 --> 00:15:01,580
functions on the cast and making it

00:14:57,860 --> 00:15:04,340
simple enough and to support but what

00:15:01,580 --> 00:15:07,370
about a host in the base so that's why

00:15:04,340 --> 00:15:11,180
we focus on the kernel like that we ask

00:15:07,370 --> 00:15:13,160
we introduce a new channel to to be

00:15:11,180 --> 00:15:16,580
possible to deliver the V host message

00:15:13,160 --> 00:15:18,590
and there it's over VF i/o interface so

00:15:16,580 --> 00:15:20,720
nothing changed on the VF i/o user API

00:15:18,590 --> 00:15:22,430
nothing changed on a B host message

00:15:20,720 --> 00:15:26,540
definition all things that here just

00:15:22,430 --> 00:15:29,330
introduced a new channel yeah

00:15:26,540 --> 00:15:30,560
so here it works so like that okay for

00:15:29,330 --> 00:15:34,100
things is that we

00:15:30,560 --> 00:15:37,400
allows to create that media create a

00:15:34,100 --> 00:15:40,820
media device by that by give our UUID

00:15:37,400 --> 00:15:42,950
and there then give that you id2q and

00:15:40,820 --> 00:15:45,470
acute gesture and add a new adapter

00:15:42,950 --> 00:15:49,400
which Carnaby house reify Oh to drive

00:15:45,470 --> 00:15:51,320
down function then for our IO trap and

00:15:49,400 --> 00:15:54,800
emulation as to happens so or things

00:15:51,320 --> 00:15:56,960
back back to Derby host and tends to be

00:15:54,800 --> 00:16:01,580
our V host message and the Schroder

00:15:56,960 --> 00:16:05,420
rewrites I will control to the kernel

00:16:01,580 --> 00:16:08,120
kernel be house and dad and then folder

00:16:05,420 --> 00:16:11,120
for if that we are going to optimize the

00:16:08,120 --> 00:16:13,400
functions that we actually get to with

00:16:11,120 --> 00:16:14,990
just a memory slots - gasps - nap okay

00:16:13,400 --> 00:16:18,589
here's the doorbell I can't director

00:16:14,990 --> 00:16:20,990
right and then folder DMA and intro

00:16:18,589 --> 00:16:23,660
mapping as dual average order remaining

00:16:20,990 --> 00:16:28,610
things in vfi or to make that happens so

00:16:23,660 --> 00:16:31,850
all these things are wrong so what is

00:16:28,610 --> 00:16:33,620
the device looks like so you because VF

00:16:31,850 --> 00:16:35,270
IPC is just are using a hardware layout

00:16:33,620 --> 00:16:37,040
so we can now change that so that's why

00:16:35,270 --> 00:16:38,390
we leverage a media device the good

00:16:37,040 --> 00:16:40,190
things is MIDI device give us the

00:16:38,390 --> 00:16:43,010
ability to define the software layout

00:16:40,190 --> 00:16:47,089
here's the device looks like we will use

00:16:43,010 --> 00:16:50,510
two bars and a three marrow region one a

00:16:47,089 --> 00:16:52,670
configuration 1 bar 1 and 1 bar 0 so

00:16:50,510 --> 00:16:55,339
 flex pay CSR it's quite easy just

00:16:52,670 --> 00:16:58,040
identify I'm the V host and that and for

00:16:55,339 --> 00:17:00,170
ball one we provide ability for you to

00:16:58,040 --> 00:17:03,080
map the table well you can do that I

00:17:00,170 --> 00:17:04,490
sure that bar and bar 0 is quite easy

00:17:03,080 --> 00:17:06,290
just to give you your channel to

00:17:04,490 --> 00:17:08,420
delivery host message that message

00:17:06,290 --> 00:17:11,179
already defined like a request or a

00:17:08,420 --> 00:17:13,699
requester reused or current the command

00:17:11,179 --> 00:17:15,920
for IO control for a be host at so we

00:17:13,699 --> 00:17:18,530
were not event invent any new messages

00:17:15,920 --> 00:17:20,750
so all the message goes to really write

00:17:18,530 --> 00:17:23,300
function calls escort so for that we

00:17:20,750 --> 00:17:27,350
just write that right for cat that we

00:17:23,300 --> 00:17:29,630
write the request and then get for

00:17:27,350 --> 00:17:32,810
Farida for the response so that's a

00:17:29,630 --> 00:17:34,730
simple device layout then what we

00:17:32,810 --> 00:17:36,590
provide is our helper function so in a

00:17:34,730 --> 00:17:38,600
helper function we provide like media PA

00:17:36,590 --> 00:17:40,429
device which provide a basic function to

00:17:38,600 --> 00:17:42,730
pass all the V host message we provide

00:17:40,429 --> 00:17:44,290
our you control rewrites a map

00:17:42,730 --> 00:17:47,799
open and close you don't need to

00:17:44,290 --> 00:17:52,000
approach developed by individual device

00:17:47,799 --> 00:17:54,580
so then so what you do for a parent

00:17:52,000 --> 00:17:55,990
device for new vendor so if you are new

00:17:54,580 --> 00:17:59,080
vendor you just to implement like

00:17:55,990 --> 00:18:01,360
they're two of the parent apps create

00:17:59,080 --> 00:18:04,720
and remove when you I'm doing the crates

00:18:01,360 --> 00:18:06,669
you can allocate VDP a device and then

00:18:04,720 --> 00:18:09,010
it should give you a point to that

00:18:06,669 --> 00:18:11,559
device and there you can use their

00:18:09,010 --> 00:18:13,090
helper functions functions to adjust as

00:18:11,559 --> 00:18:16,720
some current device ops that's all

00:18:13,090 --> 00:18:19,330
provided for you and then and then that

00:18:16,720 --> 00:18:22,299
so you need to implement in your own

00:18:19,330 --> 00:18:24,760
driver that function is being provided

00:18:22,299 --> 00:18:27,970
you need to provide a function like

00:18:24,760 --> 00:18:30,070
start/stop your device and to like to

00:18:27,970 --> 00:18:33,790
tell what's feature you are going to

00:18:30,070 --> 00:18:35,290
support and to set up the table l like

00:18:33,790 --> 00:18:38,650
the base based address if you're going

00:18:35,290 --> 00:18:40,780
to expose to the guests and then that's

00:18:38,650 --> 00:18:41,770
all the things you need to do so quite

00:18:40,780 --> 00:18:44,710
simple right

00:18:41,770 --> 00:18:46,960
and then what about for DMA interrupt

00:18:44,710 --> 00:18:50,559
we're not inventing new things at all on

00:18:46,960 --> 00:18:54,340
this in this part so for T me setup will

00:18:50,559 --> 00:18:56,890
average via file user API so basically

00:18:54,340 --> 00:18:59,140
just call map DMA and a map that being

00:18:56,890 --> 00:19:01,809
handled on a chemically introduced for

00:18:59,140 --> 00:19:03,460
the B host PCI so we have one

00:19:01,809 --> 00:19:06,370
dependencies that you get the media

00:19:03,460 --> 00:19:08,799
device to get aware of the MMU and get

00:19:06,370 --> 00:19:12,760
that support and for interrupt at the

00:19:08,799 --> 00:19:16,000
same we're using the V FIU API so so

00:19:12,760 --> 00:19:19,510
that we of course that we support like

00:19:16,000 --> 00:19:21,250
IRP puzzle so that that's by our plus

00:19:19,510 --> 00:19:25,000
room manager also being covered by the

00:19:21,250 --> 00:19:27,280
VF i/o so ran out our first RC justice

00:19:25,000 --> 00:19:30,179
for Emma's likes but in future we were a

00:19:27,280 --> 00:19:34,630
support order interrupts

00:19:30,179 --> 00:19:36,820
states so we have two key developer on

00:19:34,630 --> 00:19:39,460
that T way and Osho is working either on

00:19:36,820 --> 00:19:42,130
the kernel patch and also document watch

00:19:39,460 --> 00:19:44,530
yeah we we sin or RC patch dear so

00:19:42,130 --> 00:19:47,650
welcome for any comments so looking at

00:19:44,530 --> 00:19:49,870
this common infrastructure for device

00:19:47,650 --> 00:19:52,150
vendor and the next step is we are going

00:19:49,870 --> 00:19:54,520
to provide a driver the driver we are

00:19:52,150 --> 00:19:57,010
going to appear around is using our

00:19:54,520 --> 00:19:59,860
we what I'm not divided speakers Aaron

00:19:57,010 --> 00:20:02,470
can get that you can use kim yu-na

00:19:59,860 --> 00:20:04,030
device for that to enable that function

00:20:02,470 --> 00:20:06,820
so that's what we are simple device

00:20:04,030 --> 00:20:09,010
driver for that and also we track this

00:20:06,820 --> 00:20:11,590
and discuss really pay stubs in our

00:20:09,010 --> 00:20:15,690
monthly meeting which is DK but our

00:20:11,590 --> 00:20:15,690
monthly meeting and any comments and

00:20:15,809 --> 00:20:22,840
suggestion you can join the meeting and

00:20:17,980 --> 00:20:25,320
we can talk yeah that's all content and

00:20:22,840 --> 00:20:25,320
questions

00:20:38,279 --> 00:20:44,519
Heights oh great presentation so what I

00:20:42,809 --> 00:20:46,799
didn't understand is that the gas is

00:20:44,519 --> 00:20:49,799
supposed to coordinate the address of

00:20:46,799 --> 00:20:52,139
its ring a with this virtual M depth

00:20:49,799 --> 00:20:54,929
device but the format of the descriptors

00:20:52,139 --> 00:20:57,690
inside this ring is specific to what the

00:20:54,929 --> 00:21:01,200
huddle is the wave of right yes it is so

00:20:57,690 --> 00:21:04,590
it does assume that it still it only

00:21:01,200 --> 00:21:06,749
works in case the both the guests and

00:21:04,590 --> 00:21:11,460
the horse walk for example with will

00:21:06,749 --> 00:21:13,440
tire of with another okay yeah it is so

00:21:11,460 --> 00:21:15,539
the ring layouts actually for the data

00:21:13,440 --> 00:21:18,089
pass the ring layout need to follow the

00:21:15,539 --> 00:21:20,279
SPAC because we have a modified gas

00:21:18,089 --> 00:21:22,019
driver so the only way hardware or

00:21:20,279 --> 00:21:25,080
software to talk with this fund is

00:21:22,019 --> 00:21:27,690
follow the same exact layouts operations

00:21:25,080 --> 00:21:29,549
either either either the but I own a

00:21:27,690 --> 00:21:32,279
header so all that should be there

00:21:29,549 --> 00:21:34,320
follows us packets so that yeah so this

00:21:32,279 --> 00:21:36,359
leads me to the next person of what is

00:21:34,320 --> 00:21:39,149
the advantage of using this solution in

00:21:36,359 --> 00:21:42,059
case if I just used Vallejo I compelled

00:21:39,149 --> 00:21:44,489
to the solution presented by Intel M and

00:21:42,059 --> 00:21:48,899
the previous lecture of having a NIC

00:21:44,489 --> 00:21:51,719
that knows how to do Delta tracking okay

00:21:48,899 --> 00:21:54,659
there was a paper presented here and NIC

00:21:51,719 --> 00:21:56,489
that from Intel that is FPGA based I

00:21:54,659 --> 00:21:58,499
implements the virtual interface but

00:21:56,489 --> 00:22:03,210
also has the ability to dirty track

00:21:58,499 --> 00:22:05,700
TMA's yes so so whether being capable to

00:22:03,210 --> 00:22:09,629
track dirty or not it's up to hardware

00:22:05,700 --> 00:22:12,119
device so you can if they can track it

00:22:09,629 --> 00:22:14,639
that's cute but so on the software

00:22:12,119 --> 00:22:17,969
perspective we need a common interface

00:22:14,639 --> 00:22:19,889
to Hardware whatever it can support or

00:22:17,969 --> 00:22:22,019
not support so even for the hardware not

00:22:19,889 --> 00:22:23,849
support we are going to support so as to

00:22:22,019 --> 00:22:25,349
use it may yes you've seen that in DVD K

00:22:23,849 --> 00:22:28,049
actually we can fall back to a software

00:22:25,349 --> 00:22:30,659
dead parts so for a hardware is no

00:22:28,049 --> 00:22:33,419
longer to support but eventually if you

00:22:30,659 --> 00:22:35,849
like that using the kernel driver so you

00:22:33,419 --> 00:22:38,129
don't give our fullback parts actually

00:22:35,849 --> 00:22:40,830
you have to ask your hardware to support

00:22:38,129 --> 00:22:43,200
us but the framework today we are going

00:22:40,830 --> 00:22:46,529
to introduce is not limit that so give

00:22:43,200 --> 00:22:48,960
either like a log base giving you the we

00:22:46,529 --> 00:22:49,809
like we host already I'll give you the

00:22:48,960 --> 00:22:52,929
memory to

00:22:49,809 --> 00:22:55,719
like that's bitmap it Matlock bitmap so

00:22:52,929 --> 00:22:57,519
we use that so get that information from

00:22:55,719 --> 00:23:01,419
queue from the infrastructure and

00:22:57,519 --> 00:23:03,879
they're up to driver to decide either

00:23:01,419 --> 00:23:07,119
it's being handled by the hardware or

00:23:03,879 --> 00:23:13,659
need a software assistant I say thank

00:23:07,119 --> 00:23:16,179
you yeah hi so and they build up of lots

00:23:13,659 --> 00:23:17,710
of people for some people felt that it

00:23:16,179 --> 00:23:20,889
might be beneficial to like have a

00:23:17,710 --> 00:23:23,469
periodic meeting and I welcomed people

00:23:20,889 --> 00:23:25,389
to join that and a slide so I wonder

00:23:23,469 --> 00:23:27,339
what you build palatable to kind of just

00:23:25,389 --> 00:23:28,989
renaming it to just your type of meeting

00:23:27,339 --> 00:23:30,849
and then I can write it in everyone who

00:23:28,989 --> 00:23:33,849
wants to talk about it are not

00:23:30,849 --> 00:23:37,299
necessarily DP decay do you think oh

00:23:33,849 --> 00:23:40,419
yeah yeah that's a that's good Russian

00:23:37,299 --> 00:23:42,609
style so here you today's my topic is

00:23:40,419 --> 00:23:44,950
foreign and implicit version right so

00:23:42,609 --> 00:23:47,349
right now we have a few kind of

00:23:44,950 --> 00:23:50,649
separation the one of the separations

00:23:47,349 --> 00:23:53,529
like I separates the day plan with all

00:23:50,649 --> 00:23:55,509
the rural yourself things like okay are

00:23:53,529 --> 00:23:58,089
there plans running on the car right and

00:23:55,509 --> 00:24:00,429
there and there's another separation is

00:23:58,089 --> 00:24:02,499
separation all infrastructure like it to

00:24:00,429 --> 00:24:05,739
support parameter so on that time even

00:24:02,499 --> 00:24:08,259
there VM is not there so but there's

00:24:05,739 --> 00:24:12,009
another like separation so you still

00:24:08,259 --> 00:24:14,289
have their sort of their tail plan on a

00:24:12,009 --> 00:24:17,259
house I'll use do you have DVD K so

00:24:14,289 --> 00:24:20,320
that's why because of that I said so for

00:24:17,259 --> 00:24:22,839
the 25 or or more pen wise for Iran wise

00:24:20,320 --> 00:24:24,700
so the one VM we want to consume that

00:24:22,839 --> 00:24:27,789
but a lot of BN actually is the

00:24:24,700 --> 00:24:29,469
paralyzer less than one one gig so

00:24:27,789 --> 00:24:31,659
actually the skew can sure the

00:24:29,469 --> 00:24:34,239
share a panelist with others how to

00:24:31,659 --> 00:24:36,460
share that so it's very a low cost

00:24:34,239 --> 00:24:38,289
actually you just spend one one car to

00:24:36,460 --> 00:24:41,589
do the bay pass in the kinder give their

00:24:38,289 --> 00:24:44,589
memory once that you have a higher like

00:24:41,589 --> 00:24:46,299
SLA so you need a hike but penalize are

00:24:44,589 --> 00:24:48,460
quality you can easily switch over to

00:24:46,299 --> 00:24:50,349
that that give you a way clean very

00:24:48,460 --> 00:24:53,499
clean which upgrade your traffic on the

00:24:50,349 --> 00:24:55,989
amount so that's my personal sort of us

00:24:53,499 --> 00:24:57,580
so that's why we still keeping doing -

00:24:55,989 --> 00:25:00,119
deep decayed support post or software

00:24:57,580 --> 00:25:00,119
and the hardware

00:25:01,720 --> 00:25:10,539
please and you aware of them okay

00:25:05,720 --> 00:25:10,539

YouTube URL: https://www.youtube.com/watch?v=69ve_TYcDAQ


