Title: Contributor Q&A Panel
Publication date: 2018-11-14
Playlist: KVM Forum 2018
Description: 
	A technical Q&A panel discussion ranging on various KVM and QEMU-related topics. The discussion will be for about an hour. Topics will be chosen on the spot from a prepared list. And audience (live or remote) can add questions in the live Etherpad during the discussion.

Discussion of Christian Borntraeger, Peter Feiner, Cornelia Huck, Wanpeng Li and Peter Maydell moderated by Stefan Hajnoczi

---

Christian Borntraeger
KVM maintainer for IBM Z
IBM

Christian Borntraeger is a software engineer at IBM Germany and is the IBM z (s390) maintainer for KVM and QEMU/KVM. He has been active in KVM since 2007.

Peter Feiner
Software Engineer
Google

Peter has worked on virtualization at Google since 2014, focusing on memory management, performance and scaling.

Stefan Hajnoczi
Principle Software Engineer
Red Hat

Stefan has been active in QEMU since 2010 and works in Red Hat's virtualization team with a focus on storage. He helps maintain the block layer and tracing in QEMU. He also organizes and mentors in the Google Summer of Code and Outreachy internship programs, and participates in the VIRTIO Technical Committee.
Current projects include the virtio-vsock communications device, file sharing, and lightweight virtual machines.
Stefan has presented at previous KVM Forums, as well as FOSDEM, LinuxCon, and Linux Plumbers.

Cornelia Huck
Senior Software Engineer
Red Hat

Cornelia is a Senior Software Engineer at Red Hat, working mainly on virtualization and s390x related topics in QEMU and the Linux kernel. She has been acting as a maintainer for s390x virtualization topics in QEMU and the Linux kernel for several years.
Previously, she has given talks about s390x virtualization and its specialities.


Wanpeng Li
Linux Kernel Contributor
Tencent Cloud

Wanpeng Li is a 6 years experienced Linux kernel/virtualization developer who works in Tencent Cloud currently. He mainly focus on KVM, scheduler and memory management. In KVM, he contributes a lot of features to improve performance and stability. He has experience worked in IBM LTC kernel team and INTEL OTC virtualization team before.

Peter Maydell
Emulation Specialist
Linaro

Peter has been handling all things Arm in QEMU since 2010, including CPU architecture emulation, support for KVM virtualization and herding an ever-increasing number of board, SoC and device models
Captions: 
	00:00:01,040 --> 00:00:08,429
[Music]

00:00:06,080 --> 00:00:13,980
okay everyone thanks for coming to the

00:00:08,429 --> 00:00:16,910
contributor QA session so this panel is

00:00:13,980 --> 00:00:20,490
basically about development topics

00:00:16,910 --> 00:00:23,519
around the virtualization stack KVM Hugh

00:00:20,490 --> 00:00:25,289
EMU and we have people that work on

00:00:23,519 --> 00:00:29,369
various layers of stack and are

00:00:25,289 --> 00:00:30,869
contributors and or maintained errs but

00:00:29,369 --> 00:00:33,180
I've I have to admit this session is

00:00:30,869 --> 00:00:35,700
gonna suck if you don't post questions

00:00:33,180 --> 00:00:37,770
we have some questions to get us started

00:00:35,700 --> 00:00:41,210
but we're really relying on you guys

00:00:37,770 --> 00:00:44,940
to post things that you want to know so

00:00:41,210 --> 00:00:46,920
we'll get started but please keep keep

00:00:44,940 --> 00:00:49,020
just go to this URL and you can post any

00:00:46,920 --> 00:00:55,350
questions you want and then this will be

00:00:49,020 --> 00:00:58,230
fun so yeah let's get I'll get started

00:00:55,350 --> 00:00:59,670
with with with introducing everyone so

00:00:58,230 --> 00:01:03,270
can we please go around for the

00:00:59,670 --> 00:01:04,680
panelists just say your name the company

00:01:03,270 --> 00:01:07,770
you work for and maybe the components

00:01:04,680 --> 00:01:12,470
that you're involved in sure my name is

00:01:07,770 --> 00:01:16,080
Peter finer I work for Google and I'm

00:01:12,470 --> 00:01:19,890
involved at least upstream with KVM

00:01:16,080 --> 00:01:23,250
proper on x86 mostly with the the MMU

00:01:19,890 --> 00:01:25,290
code and the rest of the stack Google

00:01:23,250 --> 00:01:27,600
kind of has its in-house version so we

00:01:25,290 --> 00:01:34,020
don't use qui nous or OpenStack and all

00:01:27,600 --> 00:01:38,310
that my name is the the wampum I work

00:01:34,020 --> 00:01:42,049
from I work for $0.10 cloud I contribute

00:01:38,310 --> 00:01:45,649
to something like a tab day of hot Polly

00:01:42,049 --> 00:01:52,560
peril virtual lights the TLP shooter

00:01:45,649 --> 00:01:55,740
actually the last API and we are under I

00:01:52,560 --> 00:01:56,340
will also optimize the latency something

00:01:55,740 --> 00:02:00,630
like that

00:01:56,340 --> 00:02:04,650
thank you hello my name is Peter I do I

00:02:00,630 --> 00:02:06,420
work for all Act also the Nara and

00:02:04,650 --> 00:02:08,310
work on Crimea basically they do

00:02:06,420 --> 00:02:09,899
maintenance of all the armpits of

00:02:08,310 --> 00:02:12,150
Quentin you had also some of the general

00:02:09,899 --> 00:02:13,620
projects maintenance and I've been stuff

00:02:12,150 --> 00:02:17,880
like merging everybody else's pull

00:02:13,620 --> 00:02:19,890
requests I am my name is Cornelia Luke I

00:02:17,880 --> 00:02:23,040
work for my dad

00:02:19,890 --> 00:02:26,550
I am the overall s/390 kmu maintainer

00:02:23,040 --> 00:02:29,850
but I'm also doing sv 90 buck for KBM

00:02:26,550 --> 00:02:33,480
and I'm also looking into but I would be

00:02:29,850 --> 00:02:35,850
a fellow stuff you know I'm Christa

00:02:33,480 --> 00:02:37,380
Monica and you probably just saw me in

00:02:35,850 --> 00:02:40,320
the presentation before I also work for

00:02:37,380 --> 00:02:44,550
Astra 90 more on the kernel side of

00:02:40,320 --> 00:02:47,580
things and okay so thanks for

00:02:44,550 --> 00:02:49,230
introducing yourselves by the way this

00:02:47,580 --> 00:02:50,490
is this is just their personal opinion

00:02:49,230 --> 00:02:51,780
so they're not representing their

00:02:50,490 --> 00:02:56,160
company here and the free to say

00:02:51,780 --> 00:02:57,900
whatever they want to say okay

00:02:56,160 --> 00:03:00,930
Emacs versus VI is gonna be at the end

00:02:57,900 --> 00:03:05,040
you're not going to start with that the

00:03:00,930 --> 00:03:10,350
answers clear obviously Amex okay use VI

00:03:05,040 --> 00:03:12,420
of course okay so let's get started

00:03:10,350 --> 00:03:17,220
within your experiences what are the

00:03:12,420 --> 00:03:19,470
biggest challenges with the KVM api not

00:03:17,220 --> 00:03:23,250
everyone has to answer we can just go

00:03:19,470 --> 00:03:25,800
around whoever had thought on this maybe

00:03:23,250 --> 00:03:28,110
some of the legacy stuff that is still

00:03:25,800 --> 00:03:31,560
around sometimes stuff was introduced

00:03:28,110 --> 00:03:33,000
for example with x x86 in mind and then

00:03:31,560 --> 00:03:35,370
you try to extend it to other

00:03:33,000 --> 00:03:39,030
architectures and it does not quite fit

00:03:35,370 --> 00:03:40,950
that is sometimes it working but not

00:03:39,030 --> 00:03:45,720
always when you are AP eyes are usually

00:03:40,950 --> 00:03:48,810
quite nice yeah we have several api's in

00:03:45,720 --> 00:03:50,790
KVM that grew over time we have really a

00:03:48,810 --> 00:03:53,040
lot of new i'll controls from home

00:03:50,790 --> 00:03:54,989
released or not a lot but you have a

00:03:53,040 --> 00:03:55,709
steady flow of new i/o controls over

00:03:54,989 --> 00:03:57,989
time

00:03:55,709 --> 00:04:01,590
Alex draft did actually quite good job

00:03:57,989 --> 00:04:03,209
to to try things that that try to

00:04:01,590 --> 00:04:06,959
minimize that so we have for example the

00:04:03,209 --> 00:04:09,209
e1 rec interface or we have the device

00:04:06,959 --> 00:04:10,890
interface and that actually helps to

00:04:09,209 --> 00:04:12,420
reduce the number of new i/o controls

00:04:10,890 --> 00:04:14,820
but this is still something that is

00:04:12,420 --> 00:04:15,500
growing over time drawing more is lots

00:04:14,820 --> 00:04:18,230
of arc

00:04:15,500 --> 00:04:20,269
of specific things and there is a danger

00:04:18,230 --> 00:04:25,310
that this these interfaces are not very

00:04:20,269 --> 00:04:28,490
well reviewed I guess I can call it a

00:04:25,310 --> 00:04:30,830
challenge I'd say success of the the mmm

00:04:28,490 --> 00:04:33,380
API the kind of asset memory region and

00:04:30,830 --> 00:04:35,690
the mapping of the the user space

00:04:33,380 --> 00:04:37,190
mappings to to guess physical address

00:04:35,690 --> 00:04:38,840
says that that's been very robust I've

00:04:37,190 --> 00:04:40,850
been using that to implement all kinds

00:04:38,840 --> 00:04:44,720
of crazy memory management whether it's

00:04:40,850 --> 00:04:46,880
on the host side or about host sites up

00:04:44,720 --> 00:04:48,590
to my migration post copy before any

00:04:46,880 --> 00:04:51,110
kind of post copy was supported and it's

00:04:48,590 --> 00:04:55,160
it's a that's a brilliant ap I really

00:04:51,110 --> 00:04:57,770
love it okay thank you

00:04:55,160 --> 00:04:59,990
I guess a related question is that there

00:04:57,770 --> 00:05:02,720
have been there have been attempts to do

00:04:59,990 --> 00:05:05,540
something that's not an ioctl API and to

00:05:02,720 --> 00:05:08,450
expose things in Sisyphus and so on what

00:05:05,540 --> 00:05:11,900
are your thoughts about about the

00:05:08,450 --> 00:05:14,419
evolution of the KVM and api so one one

00:05:11,900 --> 00:05:17,440
part of the KPM api will leave leaving

00:05:14,419 --> 00:05:20,360
Google have have forked and we ought to

00:05:17,440 --> 00:05:24,050
we ought to converge and contribute back

00:05:20,360 --> 00:05:26,660
is is exporting statistics from KVM so

00:05:24,050 --> 00:05:28,970
we we've implemented just like a binary

00:05:26,660 --> 00:05:31,720
you know here here's the the key and get

00:05:28,970 --> 00:05:33,860
the value because we were spending

00:05:31,720 --> 00:05:35,750
single-digit percentage times sometimes

00:05:33,860 --> 00:05:37,100
polling and getting getting high

00:05:35,750 --> 00:05:39,050
frequency stats and that's something

00:05:37,100 --> 00:05:43,669
silly that you shouldn't be doing so so

00:05:39,050 --> 00:05:45,530
parsing text that's not good so yeah

00:05:43,669 --> 00:05:49,160
actually we we took something that

00:05:45,530 --> 00:05:51,740
that's that's upstream is a like nice

00:05:49,160 --> 00:05:53,750
easy human consumable non I octal thing

00:05:51,740 --> 00:05:57,260
and turned into a dirty binary I off

00:05:53,750 --> 00:05:59,470
told to make it more efficient opposite

00:05:57,260 --> 00:05:59,470
direction

00:05:59,720 --> 00:06:05,310
we have actually interfaces in KVM for

00:06:03,450 --> 00:06:07,800
example the KTM stuff interfaces is

00:06:05,310 --> 00:06:09,600
exposed by a debugger fastened I don't

00:06:07,800 --> 00:06:12,540
know who of you actually follow the the

00:06:09,600 --> 00:06:14,220
K summit to discuss meaning this is

00:06:12,540 --> 00:06:16,470
basically proposing topics for the

00:06:14,220 --> 00:06:20,580
kernel summit and there was a discussion

00:06:16,470 --> 00:06:22,740
about actually not mounting debug a test

00:06:20,580 --> 00:06:24,720
at all because it could not be there in

00:06:22,740 --> 00:06:27,600
a production environment and we are

00:06:24,720 --> 00:06:29,790
exposing our already our statistics why

00:06:27,600 --> 00:06:31,290
the interface so we might have to

00:06:29,790 --> 00:06:34,130
actually get rid of that or at least

00:06:31,290 --> 00:06:38,760
find a better solution for that so it's

00:06:34,130 --> 00:06:42,150
the turns of actors are working pretty

00:06:38,760 --> 00:06:44,640
well I know that they have been tries to

00:06:42,150 --> 00:06:46,680
remove these some years ago but it's

00:06:44,640 --> 00:06:49,100
it's not that easy to replace it with

00:06:46,680 --> 00:06:49,100
something better

00:06:49,310 --> 00:06:54,120
okay thank you

00:06:50,910 --> 00:06:55,650
I know one more comment I live in the so

00:06:54,120 --> 00:06:58,080
a big part of my job is kind of just

00:06:55,650 --> 00:06:59,820
talking to people about KVM or mentoring

00:06:58,080 --> 00:07:01,380
junior engineers and I've gotten to the

00:06:59,820 --> 00:07:03,240
point where I just call the I octal

00:07:01,380 --> 00:07:05,250
system calls it's just like we have a

00:07:03,240 --> 00:07:09,419
whole big family of KVM system calls

00:07:05,250 --> 00:07:12,660
that's basically what they are all right

00:07:09,419 --> 00:07:14,280
thank you so let's shift gears I think

00:07:12,660 --> 00:07:18,810
there's gonna be a cluster of questions

00:07:14,280 --> 00:07:20,940
about how to do with emails how to you

00:07:18,810 --> 00:07:23,370
know how do you keep saying reviewing

00:07:20,940 --> 00:07:26,970
patches maybe what what tools do you use

00:07:23,370 --> 00:07:28,410
do you do you have like a very scripted

00:07:26,970 --> 00:07:31,050
environment where you have custom

00:07:28,410 --> 00:07:36,930
scripts how do you keep up with the KVM

00:07:31,050 --> 00:07:44,970
mailing list with a theme you mail in ml

00:07:36,930 --> 00:07:47,550
but basically I'm using clothes that's

00:07:44,970 --> 00:07:50,690
my email client and then I have

00:07:47,550 --> 00:07:53,160
something incoming I always rely on

00:07:50,690 --> 00:07:55,110
patches that are important to me that

00:07:53,160 --> 00:07:57,210
I'm being sewn cc'd on them so I have

00:07:55,110 --> 00:07:59,790
them actually in my inbox I can mark

00:07:57,210 --> 00:08:02,070
them I see the follow-ups and I'm

00:07:59,790 --> 00:08:03,870
usually waiting a bit if there's a

00:08:02,070 --> 00:08:07,860
discussion around it if there's already

00:08:03,870 --> 00:08:08,990
where you and I only jump in if it's

00:08:07,860 --> 00:08:11,000
really something

00:08:08,990 --> 00:08:13,040
feel I need to do so that's one way of

00:08:11,000 --> 00:08:16,430
keeping saying just keep on the

00:08:13,040 --> 00:08:21,260
sidelines rely on the usual suspects

00:08:16,430 --> 00:08:24,010
already flashing out the big problems

00:08:21,260 --> 00:08:26,480
and so on that's quite helpful but

00:08:24,010 --> 00:08:32,930
basically living on my email client

00:08:26,480 --> 00:08:34,940
before much of the time so I use Gmail

00:08:32,930 --> 00:08:37,010
for my email which is like an absolutely

00:08:34,940 --> 00:08:38,330
terrible the email client for dealing

00:08:37,010 --> 00:08:39,890
with open source mailing this but you

00:08:38,330 --> 00:08:41,570
can just about make it work it's like a

00:08:39,890 --> 00:08:43,880
degree smokey script so you can get

00:08:41,570 --> 00:08:45,470
fixed with fonts which is why people

00:08:43,880 --> 00:08:46,970
have been griping at Google for not

00:08:45,470 --> 00:08:49,310
providing this feature for like a decade

00:08:46,970 --> 00:08:51,830
now but you can't work around it and

00:08:49,310 --> 00:08:53,930
then I just sort of scan through at the

00:08:51,830 --> 00:08:56,450
fires of stuff to find the stuff I care

00:08:53,930 --> 00:08:57,860
about I don't think I'd recommend it as

00:08:56,450 --> 00:09:01,130
an approach unless you are actually

00:08:57,860 --> 00:09:04,460
doing this like your your job the whole

00:09:01,130 --> 00:09:06,380
week because if you're just trying to

00:09:04,460 --> 00:09:09,050
dip in and out then it's not going to

00:09:06,380 --> 00:09:12,350
work but if you need to look at most of

00:09:09,050 --> 00:09:14,890
this stuff anyway it kind of works for

00:09:12,350 --> 00:09:18,460
actually applying patches there is the

00:09:14,890 --> 00:09:22,880
patch U is quite good the patchwork

00:09:18,460 --> 00:09:24,260
website is also quite useful if for this

00:09:22,880 --> 00:09:26,420
sort of thing and there's a tool called

00:09:24,260 --> 00:09:29,110
patches which is a thing that was

00:09:26,420 --> 00:09:31,220
originally written by Anthony Liguria

00:09:29,110 --> 00:09:35,090
basically allows you to from the command

00:09:31,220 --> 00:09:36,770
line say apply this patch you give it a

00:09:35,090 --> 00:09:39,560
message ID or you can search for stuff

00:09:36,770 --> 00:09:41,450
with it so you can kind of even if your

00:09:39,560 --> 00:09:43,460
email client is not so good at the sort

00:09:41,450 --> 00:09:44,960
of apply this thing from my email client

00:09:43,460 --> 00:09:46,430
you can still there's some useful

00:09:44,960 --> 00:09:48,920
command line tools and websites out

00:09:46,430 --> 00:09:52,100
there for being able to work with this

00:09:48,920 --> 00:09:54,860
stuff it's not great but it's kind of

00:09:52,100 --> 00:09:56,980
functional just like me second the

00:09:54,860 --> 00:10:00,200
usefulness of pesci oh that's very

00:09:56,980 --> 00:10:03,020
helpful to just keep track of things and

00:10:00,200 --> 00:10:06,580
see if something not even applies or if

00:10:03,020 --> 00:10:06,580
they are already reviews and so on

00:10:07,410 --> 00:10:17,800
email I will create a filter in my email

00:10:13,180 --> 00:10:20,230
client to filter the email from LK ml as

00:10:17,800 --> 00:10:24,160
you know there are tons of email there

00:10:20,230 --> 00:10:30,339
but for QM mailing list I will go

00:10:24,160 --> 00:10:34,950
through the just the x86 package and the

00:10:30,339 --> 00:10:38,380
review and the cable comments yeah I may

00:10:34,950 --> 00:10:40,269
not uh I don't stay appraised of what's

00:10:38,380 --> 00:10:42,670
going on the mailing list day to day or

00:10:40,269 --> 00:10:44,589
even week by week I rely on stuff

00:10:42,670 --> 00:10:46,120
getting CC to me directly or my

00:10:44,589 --> 00:10:48,279
colleagues telling me hey you should

00:10:46,120 --> 00:10:49,779
look at this and I pray for the day that

00:10:48,279 --> 00:10:51,550
you all drink the kool-aid and start

00:10:49,779 --> 00:10:55,769
using something other than email for

00:10:51,550 --> 00:10:55,769
patches Google+ maybe

00:11:01,050 --> 00:11:06,100
to be honest I think the difficulty was

00:11:04,120 --> 00:11:08,649
moving away from eval is the transition

00:11:06,100 --> 00:11:10,600
basically so if something comes up with

00:11:08,649 --> 00:11:14,230
a website that looks a bit like I've

00:11:10,600 --> 00:11:16,120
know any one of these tools for doing

00:11:14,230 --> 00:11:18,070
code review on a website that can

00:11:16,120 --> 00:11:19,570
interact with the stop patch email

00:11:18,070 --> 00:11:21,579
workflow so that people can say if I

00:11:19,570 --> 00:11:23,350
like the website I'll use the website if

00:11:21,579 --> 00:11:25,000
I want to use eBay or teachers email

00:11:23,350 --> 00:11:26,950
have these two groups of people still

00:11:25,000 --> 00:11:29,350
manage to interact relatively seamlessly

00:11:26,950 --> 00:11:30,820
that's a much easier sell then we're

00:11:29,350 --> 00:11:33,760
going to start brick the whole community

00:11:30,820 --> 00:11:36,029
and move them forcibly to github or move

00:11:33,760 --> 00:11:38,380
them forcibly to fabricator or inhibit

00:11:36,029 --> 00:11:39,790
you can do that if you really want to do

00:11:38,380 --> 00:11:41,760
that but you've got to be really really

00:11:39,790 --> 00:11:43,540
sure that the tool you're moving to is

00:11:41,760 --> 00:11:46,060
sufficiently good that you can actually

00:11:43,540 --> 00:11:46,959
say to this enormous community yeah

00:11:46,060 --> 00:11:48,160
we're going to up through all your

00:11:46,959 --> 00:11:51,610
workflows and we gotta make me do

00:11:48,160 --> 00:11:53,079
something different okay

00:11:51,610 --> 00:11:55,870
yeah I mean I think one thing I would

00:11:53,079 --> 00:11:58,870
add is it depends on whether you want to

00:11:55,870 --> 00:12:00,190
work offline or not because some of

00:11:58,870 --> 00:12:02,079
these tools that have been mentioned

00:12:00,190 --> 00:12:04,240
they can actually pull down all the

00:12:02,079 --> 00:12:05,949
emails all the patches and you can then

00:12:04,240 --> 00:12:08,350
just work without internet connectivity

00:12:05,949 --> 00:12:10,959
if you're traveling or or whatever so

00:12:08,350 --> 00:12:12,610
that's one of the conveniences of some

00:12:10,959 --> 00:12:14,350
of these tools and that can be quite

00:12:12,610 --> 00:12:18,040
useful for getting through a lot of work

00:12:14,350 --> 00:12:20,829
without constantly being online I think

00:12:18,040 --> 00:12:22,839
of some comments and Peters opinion

00:12:20,829 --> 00:12:24,610
regarding the transition involving

00:12:22,839 --> 00:12:26,320
alright there's a similar discussion

00:12:24,610 --> 00:12:29,980
always going on also for the internal

00:12:26,320 --> 00:12:31,570
community and and they actually made a

00:12:29,980 --> 00:12:34,810
statement it might be actually possible

00:12:31,570 --> 00:12:37,209
to use something else but it has always

00:12:34,810 --> 00:12:39,730
been it must be still be possible to

00:12:37,209 --> 00:12:42,250
accept changes via email so as long as

00:12:39,730 --> 00:12:44,829
the email way is still possible as a

00:12:42,250 --> 00:12:47,620
fallback then it's actually easier to

00:12:44,829 --> 00:12:49,810
try new things but a some kind of hard

00:12:47,620 --> 00:12:51,750
transition will be really hard and in

00:12:49,810 --> 00:12:54,339
particularly if you do a hard transition

00:12:51,750 --> 00:12:55,720
then it's quite hard to go back again

00:12:54,339 --> 00:12:57,610
because you think of another hard

00:12:55,720 --> 00:12:59,050
transition so even if you if you switch

00:12:57,610 --> 00:13:01,329
over to something else and it turns out

00:12:59,050 --> 00:13:03,100
well it's got some problems they didn't

00:13:01,329 --> 00:13:05,250
you also kind of stuck with where you

00:13:03,100 --> 00:13:05,250
are

00:13:14,600 --> 00:13:18,540
okay so the comment was that Garrett is

00:13:16,950 --> 00:13:21,170
also email based so there are other

00:13:18,540 --> 00:13:22,710
systems out there that are email based

00:13:21,170 --> 00:13:24,930
so Hollow

00:13:22,710 --> 00:13:25,920
posted a follow-up question to this you

00:13:24,930 --> 00:13:28,800
said what are the advantages and

00:13:25,920 --> 00:13:33,450
disadvantages of the patch management

00:13:28,800 --> 00:13:38,100
tools do you guys want to do want to

00:13:33,450 --> 00:13:40,890
talk about that or yeah maybe poly be

00:13:38,100 --> 00:13:43,410
mean compared to non email stuff are we

00:13:40,890 --> 00:13:48,300
gonna are we gonna yeah I think that's

00:13:43,410 --> 00:13:50,550
an interesting topic um the kool-aid

00:13:48,300 --> 00:13:53,670
well I mean it has a lower much lower

00:13:50,550 --> 00:13:56,370
barrier to entry even for people like me

00:13:53,670 --> 00:13:58,620
who everytime I want to do some serious

00:13:56,370 --> 00:14:00,870
interaction I've got a I got a reread a

00:13:58,620 --> 00:14:03,480
tutorial on might and it's just a pain

00:14:00,870 --> 00:14:05,820
in the ass and I do more I would do more

00:14:03,480 --> 00:14:08,220
kind of drive-by contribution if there

00:14:05,820 --> 00:14:11,760
were some more WYSIWYG kind of tools so

00:14:08,220 --> 00:14:14,190
that's the that's my big difference yeah

00:14:11,760 --> 00:14:16,440
so this is a common pain point for email

00:14:14,190 --> 00:14:19,740
is that as a first-time contributor the

00:14:16,440 --> 00:14:21,390
set up is usually not that easy

00:14:19,740 --> 00:14:22,740
you send out your email and it comes out

00:14:21,390 --> 00:14:25,470
in the wrong format on the mailing list

00:14:22,740 --> 00:14:28,710
and you have to send it again so this

00:14:25,470 --> 00:14:31,440
can often be a problem I do think that

00:14:28,710 --> 00:14:32,730
potentially there is scope for making

00:14:31,440 --> 00:14:36,410
that better and for instance you could

00:14:32,730 --> 00:14:38,520
have a sort of a dummy contribution

00:14:36,410 --> 00:14:40,410
email address various like this like

00:14:38,520 --> 00:14:41,850
this is my first contribution so let's

00:14:40,410 --> 00:14:45,090
not send it to comb you develop let's

00:14:41,850 --> 00:14:47,040
send it to patch test robot at somewhere

00:14:45,090 --> 00:14:48,930
and then it would kind of give you a

00:14:47,040 --> 00:14:49,950
helpful thing back saying yeah you'll it

00:14:48,930 --> 00:14:52,680
looks like you've got the format

00:14:49,950 --> 00:14:54,930
basically right my problem is every

00:14:52,680 --> 00:14:57,720
three months or four months my setup big

00:14:54,930 --> 00:15:01,080
rods it's like that you know dot mutt RC

00:14:57,720 --> 00:15:03,290
the fifteen lines of magic runes break

00:15:01,080 --> 00:15:07,440
or something and I've got it you know

00:15:03,290 --> 00:15:10,080
GPG whatever crap out that's basically

00:15:07,440 --> 00:15:12,450
that's probably the place where the

00:15:10,080 --> 00:15:14,340
Gateway would be really really nice it

00:15:12,450 --> 00:15:15,450
would allow people to keep the email

00:15:14,340 --> 00:15:17,580
based workflow

00:15:15,450 --> 00:15:19,590
which have to get vodka that that you

00:15:17,580 --> 00:15:22,890
can just tailor it to your personal

00:15:19,590 --> 00:15:24,840
preferences and at the same time if you

00:15:22,890 --> 00:15:27,090
have some kind of a pasting which can

00:15:24,840 --> 00:15:28,740
generate you can email also it also

00:15:27,090 --> 00:15:36,150
makes it easier for first-time

00:15:28,740 --> 00:15:38,400
contributors there are many protesters

00:15:36,150 --> 00:15:40,860
actually face an issue because all all

00:15:38,400 --> 00:15:43,500
the born the claw developers are are

00:15:40,860 --> 00:15:47,550
used to some healthy kind of kid hub

00:15:43,500 --> 00:15:50,670
like like workflow and sending a patch

00:15:47,550 --> 00:15:53,460
as an inline text almost always goes

00:15:50,670 --> 00:15:55,290
wrong for it for a first time so I have

00:15:53,460 --> 00:15:58,320
also seen the scarves or any current

00:15:55,290 --> 00:16:01,280
community that actually the attachment

00:15:58,320 --> 00:16:03,720
might be might be a better way of

00:16:01,280 --> 00:16:06,120
allowing them attached as an attachment

00:16:03,720 --> 00:16:09,480
because most mailers can actually show

00:16:06,120 --> 00:16:11,700
inline attachments as normal text and it

00:16:09,480 --> 00:16:15,150
would help to get rid of all the white

00:16:11,700 --> 00:16:18,980
space things but you know I probably

00:16:15,150 --> 00:16:22,320
have to get used to that most new

00:16:18,980 --> 00:16:25,050
developers are looking to some kind of

00:16:22,320 --> 00:16:26,700
github light workflow so maybe we have

00:16:25,050 --> 00:16:29,310
to do something about that on the other

00:16:26,700 --> 00:16:32,700
I'm perfectly fine right now is with the

00:16:29,310 --> 00:16:37,050
amount of emails that I get so it's I

00:16:32,700 --> 00:16:39,300
can handle that with that and having to

00:16:37,050 --> 00:16:41,790
learn basically the new tool or

00:16:39,300 --> 00:16:43,680
something like that would be hard maybe

00:16:41,790 --> 00:16:47,430
it could also combine I mean when you

00:16:43,680 --> 00:16:49,770
look at the the patchwork tool that

00:16:47,430 --> 00:16:51,720
basically takes Patras from my mailing

00:16:49,770 --> 00:16:53,430
list or jerrycans it as well and then

00:16:51,720 --> 00:16:57,720
you can just click there and say good

00:16:53,430 --> 00:16:59,250
good good not not good and so on I don't

00:16:57,720 --> 00:17:02,760
think there's a there's a right answer

00:16:59,250 --> 00:17:07,740
at the moment that will always find

00:17:02,760 --> 00:17:09,660
somebody complaints okay okay so let's

00:17:07,740 --> 00:17:11,100
move to a different topic I'm not gonna

00:17:09,660 --> 00:17:12,570
try to interpret this question I think

00:17:11,100 --> 00:17:13,770
there's kind of a wide scope it's up to

00:17:12,570 --> 00:17:15,690
you guys to decide how you want to

00:17:13,770 --> 00:17:19,500
address this what are the peculiarities

00:17:15,690 --> 00:17:24,690
of developing KVM for a hypervisor cloud

00:17:19,500 --> 00:17:27,620
or hardware vendor well since I

00:17:24,690 --> 00:17:29,660
previously worked for IBM and

00:17:27,620 --> 00:17:31,970
moved onto wet health I can't compare to

00:17:29,660 --> 00:17:34,460
it if you are working for Hardware

00:17:31,970 --> 00:17:37,070
binder you are very very focused on that

00:17:34,460 --> 00:17:39,350
specific kind of hardware just what s

00:17:37,070 --> 00:17:42,140
unite needs what you interface we have

00:17:39,350 --> 00:17:44,540
to of course you also need to follow the

00:17:42,140 --> 00:17:46,970
whole ecosystem there because otherwise

00:17:44,540 --> 00:17:48,920
you are just developing something that

00:17:46,970 --> 00:17:51,530
does not match anything else and does

00:17:48,920 --> 00:17:54,170
not work with others well but since I've

00:17:51,530 --> 00:17:59,059
moved to wet it I have been looking more

00:17:54,170 --> 00:18:01,340
into other areas and I think I just get

00:17:59,059 --> 00:18:04,460
a pore of you and it's probably the same

00:18:01,340 --> 00:18:06,770
for other hypervisor vendors they just

00:18:04,460 --> 00:18:09,320
not looking at that very specific kind

00:18:06,770 --> 00:18:11,570
of artful even if it's all Intel used to

00:18:09,320 --> 00:18:16,040
look at different varieties of stuff and

00:18:11,570 --> 00:18:18,550
have different challenges there okay so

00:18:16,040 --> 00:18:22,809
that's the hardware vendor and

00:18:18,550 --> 00:18:22,809
hypervisor vendor view what about cloud

00:18:23,530 --> 00:18:30,470
maybe these go without saying I'll say

00:18:25,910 --> 00:18:32,650
them anyway it's being in a let's look

00:18:30,470 --> 00:18:34,880
at the the recent spate of

00:18:32,650 --> 00:18:37,820
vulnerabilities like clearly all of the

00:18:34,880 --> 00:18:39,380
cloud vendors have have you know they

00:18:37,820 --> 00:18:41,360
got the disclosures much much much

00:18:39,380 --> 00:18:45,050
earlier why perhaps because they buy

00:18:41,360 --> 00:18:46,960
more of something and then so we have

00:18:45,050 --> 00:18:49,880
these solutions that we can't talk about

00:18:46,960 --> 00:18:53,390
for reasons I can't get into but they

00:18:49,880 --> 00:18:54,770
like seeing the seeing that the the the

00:18:53,390 --> 00:18:56,960
upstream isn't at the state-of-the-art

00:18:54,770 --> 00:18:59,540
of what's kind of been developed by

00:18:56,960 --> 00:19:04,190
in-house is it it's just sort of it's

00:18:59,540 --> 00:19:05,679
it's regrettable I guess that's yeah I

00:19:04,190 --> 00:19:11,740
think that's a big difference

00:19:05,679 --> 00:19:14,870
nothing peculiar do you have any

00:19:11,740 --> 00:19:18,230
comments ok if you have any comments on

00:19:14,870 --> 00:19:21,020
the cloud perspective I what what things

00:19:18,230 --> 00:19:22,520
do you focus on in KVM what's what's

00:19:21,020 --> 00:19:24,500
important to you what might be different

00:19:22,520 --> 00:19:25,040
from hypervisor vendor or hardware

00:19:24,500 --> 00:19:29,800
vendor

00:19:25,040 --> 00:19:33,970
ok actually we won't care bothersome

00:19:29,800 --> 00:19:38,360
feature which can improve the

00:19:33,970 --> 00:19:41,830
scalability and the performance and the

00:19:38,360 --> 00:19:46,340
the a high ratio over commit and

00:19:41,830 --> 00:19:49,400
something like that yeah that that's a

00:19:46,340 --> 00:19:51,790
good point like at scale when you're

00:19:49,400 --> 00:19:55,580
managing the orders of magnitude more

00:19:51,790 --> 00:19:58,130
machines it's being able to get society

00:19:55,580 --> 00:19:59,510
a conversation with Paulo a year ago we

00:19:58,130 --> 00:20:01,970
want some different statistics so just

00:19:59,510 --> 00:20:04,640
use ebps like I can't I can't do that

00:20:01,970 --> 00:20:05,900
because it's uh I don't know it's like

00:20:04,640 --> 00:20:08,510
it's a little bit less efficient than

00:20:05,900 --> 00:20:11,810
having and having more just some binary

00:20:08,510 --> 00:20:14,270
stats ready to go our focus on live

00:20:11,810 --> 00:20:15,980
migration I think we have that in common

00:20:14,270 --> 00:20:18,950
that's when I used to work for a

00:20:15,980 --> 00:20:21,890
hypervisor vendors a little startup you

00:20:18,950 --> 00:20:23,920
kind of did what the customers wanted

00:20:21,890 --> 00:20:25,610
whereas we know live migration

00:20:23,920 --> 00:20:27,260
non-negotiable has to happen for

00:20:25,610 --> 00:20:31,250
everything and so we just that's like a

00:20:27,260 --> 00:20:36,320
first-class feature for us seems we care

00:20:31,250 --> 00:20:39,590
about that a lot okay so we'll stay on

00:20:36,320 --> 00:20:42,050
the the kind of cloud topic because I

00:20:39,590 --> 00:20:43,880
think that the contribution I haven't

00:20:42,050 --> 00:20:46,370
looked at the history but I think that

00:20:43,880 --> 00:20:50,270
the contributions of the cloud providers

00:20:46,370 --> 00:20:52,520
has increased a lot recently so this is

00:20:50,270 --> 00:20:55,970
kind of the same area but but but what

00:20:52,520 --> 00:20:57,590
what do you see as the you know the the

00:20:55,970 --> 00:20:58,700
areas that matter and how do you how do

00:20:57,590 --> 00:21:01,160
you think this is going to be different

00:20:58,700 --> 00:21:02,540
from the kind of features and the

00:21:01,160 --> 00:21:03,950
development we've had before I mean

00:21:02,540 --> 00:21:06,650
scale has already been mentioned that's

00:21:03,950 --> 00:21:09,290
definitely one thing which is very

00:21:06,650 --> 00:21:12,340
important for cloud what other aspects

00:21:09,290 --> 00:21:12,340
do you think might be different

00:21:16,150 --> 00:21:25,080
I asked about question um and any other

00:21:20,880 --> 00:21:25,080
any other comments on this increment

00:21:25,140 --> 00:21:31,510
we're gonna ask a more specific question

00:21:27,550 --> 00:21:35,500
to use KDM to actually protect container

00:21:31,510 --> 00:21:38,230
like cloud instances I mean there's I

00:21:35,500 --> 00:21:40,540
think gke I might say for google

00:21:38,230 --> 00:21:42,760
kubernetes is something kubernetes

00:21:40,540 --> 00:21:45,430
engine and that's that's virtual

00:21:42,760 --> 00:21:49,120
machines created on Google's cloud

00:21:45,430 --> 00:21:50,740
running Linux in KVM and then containers

00:21:49,120 --> 00:21:58,750
and docker and all that right on top of

00:21:50,740 --> 00:22:02,250
it yeah nested virtualization yeah it's

00:21:58,750 --> 00:22:06,160
it's interesting like we so we we have

00:22:02,250 --> 00:22:08,380
perfect III can only speculate as to why

00:22:06,160 --> 00:22:10,000
we focus on certain things and

00:22:08,380 --> 00:22:11,710
hypervisor vendors don't necessary

00:22:10,000 --> 00:22:13,720
relation is a good example we just had

00:22:11,710 --> 00:22:15,580
big customers that wanted this and so

00:22:13,720 --> 00:22:18,130
then we put a bunch of engineers along

00:22:15,580 --> 00:22:20,440
and made a push for if Red Hat had some

00:22:18,130 --> 00:22:22,090
you know perspective client that wanted

00:22:20,440 --> 00:22:23,770
that wanted higher fidelity nested

00:22:22,090 --> 00:22:26,170
virtualization they may well have done

00:22:23,770 --> 00:22:29,340
the same thing so it's I don't think

00:22:26,170 --> 00:22:32,770
it's inherently a cloud the cloud thing

00:22:29,340 --> 00:22:36,160
do you find you you're kind of the cloud

00:22:32,770 --> 00:22:38,590
vendor take take on legacy stuff is

00:22:36,160 --> 00:22:40,210
different from hard feelings ideas like

00:22:38,590 --> 00:22:41,680
I guess hypervisor vendors getting care

00:22:40,210 --> 00:22:43,360
more about things like backwards

00:22:41,680 --> 00:22:45,520
compatibility with a bunch of old event

00:22:43,360 --> 00:22:47,770
features and things maybe you you just

00:22:45,520 --> 00:22:49,720
say we don't have that we don't care we

00:22:47,770 --> 00:22:53,380
that's a good point you know we did that

00:22:49,720 --> 00:22:56,850
for for many years I I know a lot of so

00:22:53,380 --> 00:22:59,080
specific example as we let shadow paging

00:22:56,850 --> 00:23:00,910
old-school shadow paging completely BIP

00:22:59,080 --> 00:23:03,430
brought within Google and we broke it

00:23:00,910 --> 00:23:06,010
and then when we a year ago or so we

00:23:03,430 --> 00:23:07,270
realized that it were actually don't

00:23:06,010 --> 00:23:10,540
quote me on that timeline when we

00:23:07,270 --> 00:23:12,130
realized that it was an l1 TF mitigation

00:23:10,540 --> 00:23:14,620
number low rate we had all that we had

00:23:12,130 --> 00:23:18,730
all of this this tech debt to to recover

00:23:14,620 --> 00:23:20,620
from but generally we don't fit rot or

00:23:18,730 --> 00:23:22,990
we don't let things bit rot or we do

00:23:20,620 --> 00:23:26,950
things with kind of all KVM compatible

00:23:22,990 --> 00:23:28,450
in mind simply because we want to there

00:23:26,950 --> 00:23:31,780
are you know 20 of us whatever they work

00:23:28,450 --> 00:23:33,429
in KVM and their 200 159 contributors we

00:23:31,780 --> 00:23:34,600
want to upstream stuff we want to remove

00:23:33,429 --> 00:23:36,670
ourselves from this burden and we

00:23:34,600 --> 00:23:39,370
understand that the we understand the

00:23:36,670 --> 00:23:42,220
table stakes are are maintaining the

00:23:39,370 --> 00:23:43,960
kind of the correctness and

00:23:42,220 --> 00:23:46,020
compatibility back to the beginning of

00:23:43,960 --> 00:23:46,020
time

00:23:46,890 --> 00:23:53,140
now we don't you know we don't sorry but

00:23:51,370 --> 00:23:55,330
we don't we don't look at anything other

00:23:53,140 --> 00:23:57,280
than the the architectures that were

00:23:55,330 --> 00:23:59,650
working on for the the hardware that we

00:23:57,280 --> 00:24:01,690
that we buy we don't even do like AMD

00:23:59,650 --> 00:24:04,330
stuff because we don't have because you

00:24:01,690 --> 00:24:07,540
know we're not selling that so it's in

00:24:04,330 --> 00:24:13,000
that respect we but we don't try to

00:24:07,540 --> 00:24:16,330
break things okay let's move on to a

00:24:13,000 --> 00:24:18,730
different topic so there's a question

00:24:16,330 --> 00:24:22,780
here about KVM forum and how is how it's

00:24:18,730 --> 00:24:25,179
used to to get big changes in KVM forum

00:24:22,780 --> 00:24:27,610
is a good way to present new ideas talk

00:24:25,179 --> 00:24:31,600
to people things that can be really hard

00:24:27,610 --> 00:24:33,100
to do just via email so what are your

00:24:31,600 --> 00:24:35,050
thoughts on that what what other ways

00:24:33,100 --> 00:24:38,770
because KVM forum only happens once a

00:24:35,050 --> 00:24:40,150
year so what what other things can we do

00:24:38,770 --> 00:24:42,130
because certain topics just don't go

00:24:40,150 --> 00:24:43,600
well by email but once you get everyone

00:24:42,130 --> 00:24:46,870
in the room and talking about it you can

00:24:43,600 --> 00:24:48,220
actually find a solution do do you have

00:24:46,870 --> 00:24:49,780
any experiences with this do you have

00:24:48,220 --> 00:24:55,540
any suggestions about what we should do

00:24:49,780 --> 00:24:57,820
about it maybe other ways to just get

00:24:55,540 --> 00:25:01,950
virtually together could also be quite

00:24:57,820 --> 00:25:05,320
helpful even if it's just a our scene

00:25:01,950 --> 00:25:06,309
yeah that's true IRC just work pretty

00:25:05,320 --> 00:25:09,610
well

00:25:06,309 --> 00:25:14,470
what I find does not work very well is

00:25:09,610 --> 00:25:16,270
phone and video conferences um we all

00:25:14,470 --> 00:25:18,610
know these kind of WebEx or whatever

00:25:16,270 --> 00:25:20,770
kind of technology to use and it takes

00:25:18,610 --> 00:25:23,290
much longer than to have the same person

00:25:20,770 --> 00:25:25,900
in it in the same room I don't know if

00:25:23,290 --> 00:25:28,210
we can maybe just piggyback on other

00:25:25,900 --> 00:25:29,230
conferences like like plumber's or I

00:25:28,210 --> 00:25:31,270
heard

00:25:29,230 --> 00:25:35,080
we had a development room for FOSDEM

00:25:31,270 --> 00:25:38,650
next year but being in the same room

00:25:35,080 --> 00:25:40,809
this makes such a big difference with

00:25:38,650 --> 00:25:43,650
the exception of IRC but iousy only

00:25:40,809 --> 00:25:46,690
works if you have met that person before

00:25:43,650 --> 00:25:48,160
so it certainly is the case that if you

00:25:46,690 --> 00:25:49,809
are in the same room you can have some

00:25:48,160 --> 00:25:53,169
much faster conversations and

00:25:49,809 --> 00:25:54,580
discussions and there's just a social

00:25:53,169 --> 00:25:56,169
aspect that it's easier to work

00:25:54,580 --> 00:25:57,820
something that you've met that you've

00:25:56,169 --> 00:26:00,010
kind of had a casual conversations with

00:25:57,820 --> 00:26:01,390
you shared a coffee or whatever and that

00:26:00,010 --> 00:26:03,669
does help but the thing that kind of

00:26:01,390 --> 00:26:06,100
slightly worries me is well the people

00:26:03,669 --> 00:26:07,690
who attend KVL forum and mostly I'm

00:26:06,100 --> 00:26:09,549
guessing most of you have probably been

00:26:07,690 --> 00:26:13,240
your company is paying for you to be

00:26:09,549 --> 00:26:16,330
here so it's a privilege is the big

00:26:13,240 --> 00:26:19,840
players in this space like the istros

00:26:16,330 --> 00:26:21,429
the the vendors and the people who are

00:26:19,840 --> 00:26:25,480
actually doing this is a full-time job

00:26:21,429 --> 00:26:27,280
and there's also certainly in Crimea

00:26:25,480 --> 00:26:28,720
there's also a layer of contributors who

00:26:27,280 --> 00:26:30,730
are doing this basically as a hobby

00:26:28,720 --> 00:26:34,570
project they do on the weekend they do

00:26:30,730 --> 00:26:36,580
it in the evening or whatever and those

00:26:34,570 --> 00:26:39,990
people are much less likely to be here

00:26:36,580 --> 00:26:43,630
so I kind of worry if we wind up with a

00:26:39,990 --> 00:26:45,880
convention that with a sort of a way of

00:26:43,630 --> 00:26:47,260
working that says well you can get the

00:26:45,880 --> 00:26:49,900
big stuff in but only if you can manage

00:26:47,260 --> 00:26:51,580
to come find us a purpose in person then

00:26:49,900 --> 00:26:53,140
we're kind of shutting those people out

00:26:51,580 --> 00:26:55,030
to an even greater extent than we

00:26:53,140 --> 00:27:01,600
already effectively do so like that kind

00:26:55,030 --> 00:27:05,500
of as the other side of that many guys

00:27:01,600 --> 00:27:08,110
didn't urge on the IRC Channel and as

00:27:05,500 --> 00:27:11,020
you know the developers are from the

00:27:08,110 --> 00:27:14,919
world so that we have different time

00:27:11,020 --> 00:27:20,130
zone so even if we log in our stage so

00:27:14,919 --> 00:27:24,760
we can now easy to connect close rate so

00:27:20,130 --> 00:27:30,850
the Q&A forum we can help manage things

00:27:24,760 --> 00:27:32,230
face to k face yeah all right I mean one

00:27:30,850 --> 00:27:35,679
thing I can add is that there is

00:27:32,230 --> 00:27:37,720
actually a KVM community call and it's

00:27:35,679 --> 00:27:39,520
it's scheduled I think once a week or

00:27:37,720 --> 00:27:41,440
once every two weeks

00:27:39,520 --> 00:27:43,059
typically the agenda for that stays

00:27:41,440 --> 00:27:45,220
empty and the call just gets canceled

00:27:43,059 --> 00:27:47,879
every week so if people want to use that

00:27:45,220 --> 00:27:51,759
Quan quintella organizes it I think

00:27:47,879 --> 00:27:53,559
right yes yes so it's definitely

00:27:51,759 --> 00:27:56,080
possible to use that as a forum either

00:27:53,559 --> 00:27:57,779
to give kind of short overview of your

00:27:56,080 --> 00:28:00,639
idea and the feature trying to develop

00:27:57,779 --> 00:28:01,960
or purely just have discussions if you

00:28:00,639 --> 00:28:02,610
find you're getting stuck on the mailing

00:28:01,960 --> 00:28:05,320
list

00:28:02,610 --> 00:28:07,149
yeah so that might be something if

00:28:05,320 --> 00:28:08,860
you're willing to do the video and audio

00:28:07,149 --> 00:28:11,019
conferencing cuz that that's what that's

00:28:08,860 --> 00:28:13,240
about you know maybe all the one thing

00:28:11,019 --> 00:28:15,429
to consider is not only that people are

00:28:13,240 --> 00:28:17,529
different time zones but there are many

00:28:15,429 --> 00:28:20,049
non-native speakers and maybe for

00:28:17,529 --> 00:28:21,999
non-native speakers it's sometimes

00:28:20,049 --> 00:28:24,249
easier to do it like in a chat like

00:28:21,999 --> 00:28:28,179
environment like IRC because they can

00:28:24,249 --> 00:28:31,019
write I don't know that has has been my

00:28:28,179 --> 00:28:34,509
experience of some people will really

00:28:31,019 --> 00:28:36,940
felt uncomfortable actually talking in

00:28:34,509 --> 00:28:45,029
English but we are completely fine with

00:28:36,940 --> 00:28:45,029
writing English okay

00:28:46,340 --> 00:28:51,920
like the argument doesn't make sense to

00:28:59,080 --> 00:29:05,120
so so the question was basically about

00:29:03,590 --> 00:29:07,250
whether we maybe have some sort of

00:29:05,120 --> 00:29:10,220
stipends kind of for basically travel

00:29:07,250 --> 00:29:11,870
funding for people to get here and I

00:29:10,220 --> 00:29:15,500
think the Linux Foundation does actually

00:29:11,870 --> 00:29:19,160
have a travel fund for that kind of

00:29:15,500 --> 00:29:24,890
thing but there's a limited amount of

00:29:19,160 --> 00:29:26,480
money and it could potentially I was

00:29:24,890 --> 00:29:28,040
like if you're taking a week of holiday

00:29:26,480 --> 00:29:30,440
off work is do you really want to come

00:29:28,040 --> 00:29:31,610
here and not it for you with your rather

00:29:30,440 --> 00:29:39,620
than say I don't know go to a nice

00:29:31,610 --> 00:29:43,040
desert island or yeah yeah that's there

00:29:39,620 --> 00:29:44,270
so I think the so I Nia see where this

00:29:43,040 --> 00:29:46,010
is basically always where'd you get the

00:29:44,270 --> 00:29:47,570
money so and as I say I think the way

00:29:46,010 --> 00:29:51,650
it's Foundation does have something like

00:29:47,570 --> 00:29:56,170
that quote for you as a an organization

00:29:51,650 --> 00:29:58,160
does not have a huge possum unease sadly

00:29:56,170 --> 00:30:00,050
but yeah it's kind of worth thinking

00:29:58,160 --> 00:30:02,870
about but I think also just sort of

00:30:00,050 --> 00:30:04,760
making sure that we don't accidentally

00:30:02,870 --> 00:30:07,720
make this like the only place that you

00:30:04,760 --> 00:30:09,890
can discuss or get big new features

00:30:07,720 --> 00:30:11,900
generally accepted as that's kind of

00:30:09,890 --> 00:30:13,280
wild but also it's like what is once a

00:30:11,900 --> 00:30:14,420
year if we find out where the cadence

00:30:13,280 --> 00:30:17,440
where you could put a big new thing it

00:30:14,420 --> 00:30:17,440
wants together that's bits my

00:30:56,810 --> 00:31:01,350
okay I mean yeah I also think there's

00:30:58,920 --> 00:31:03,630
very little kind of cross between IRC

00:31:01,350 --> 00:31:07,320
and email when people send patches to

00:31:03,630 --> 00:31:09,750
the mailing list if more discussion is

00:31:07,320 --> 00:31:11,880
necessary then I guess it would be

00:31:09,750 --> 00:31:13,920
possible to notify the mailing list and

00:31:11,880 --> 00:31:15,720
let interested people know that we're

00:31:13,920 --> 00:31:23,970
gonna have an IRC discussion at a

00:31:15,720 --> 00:31:31,520
certain time he wants to get you on the

00:31:23,970 --> 00:31:31,520
call yeah

00:31:48,340 --> 00:31:53,390
okay so Han is saying that for the KVM

00:31:51,200 --> 00:31:55,280
call he's flexible with the time if the

00:31:53,390 --> 00:31:57,049
times are inconvenient we can change

00:31:55,280 --> 00:32:10,400
them but thanks for the comment about

00:31:57,049 --> 00:32:12,590
IRC we don't have enough time to get

00:32:10,400 --> 00:32:17,960
into this they're so bad these tools are

00:32:12,590 --> 00:32:19,549
so bad it could fill up a whole hour but

00:32:17,960 --> 00:32:22,370
okay let's stay on a related topic

00:32:19,549 --> 00:32:24,500
there's a question here about how to get

00:32:22,370 --> 00:32:26,900
your new features and I guess especially

00:32:24,500 --> 00:32:29,659
if you're newcomer to the community what

00:32:26,900 --> 00:32:31,580
is the approach do you send patches

00:32:29,659 --> 00:32:34,429
first or do you first send out an email

00:32:31,580 --> 00:32:35,630
explaining what you'd like to do what do

00:32:34,429 --> 00:32:37,280
you guys think what have you seen work

00:32:35,630 --> 00:32:43,210
and work in the past what are kind of

00:32:37,280 --> 00:32:47,840
best practices actually I think we can

00:32:43,210 --> 00:32:52,400
post the idea to the mailing list first

00:32:47,840 --> 00:32:56,090
before the implementation and then we

00:32:52,400 --> 00:32:59,690
can get enough comments and we also can

00:32:56,090 --> 00:33:03,049
get the whether or not the machiners

00:32:59,690 --> 00:33:08,539
prefer the idea otherwise maybe we will

00:33:03,049 --> 00:33:12,100
waste the time to post a case which will

00:33:08,539 --> 00:33:14,780
not be merged yeah

00:33:12,100 --> 00:33:16,669
we take a slow and steady approach I

00:33:14,780 --> 00:33:20,179
guess we usually run in production for

00:33:16,669 --> 00:33:21,860
like two two you know five six years and

00:33:20,179 --> 00:33:23,210
then decide we should we should

00:33:21,860 --> 00:33:26,480
contribute this thing and have

00:33:23,210 --> 00:33:29,809
conversations at conferences like this

00:33:26,480 --> 00:33:32,840
but not getting bids just what happens

00:33:29,809 --> 00:33:36,230
the upside is that we have a defensible

00:33:32,840 --> 00:33:38,270
patch at that point so we can say hey

00:33:36,230 --> 00:33:40,309
look we've rewrote thousand lines of

00:33:38,270 --> 00:33:44,299
code but it improve performance by XYZ

00:33:40,309 --> 00:33:47,059
and this is a this is objectively uh you

00:33:44,299 --> 00:33:49,039
know can improve you yeah so this is

00:33:47,059 --> 00:33:50,150
about big features significant new

00:33:49,039 --> 00:33:52,650
things you're doing it's not about type

00:33:50,150 --> 00:33:54,900
of fixes yeah

00:33:52,650 --> 00:33:56,850
he actually made quite good timing you

00:33:54,900 --> 00:33:58,830
test your stuff before instead of the

00:33:56,850 --> 00:34:01,920
hour and this is certainly important if

00:33:58,830 --> 00:34:04,710
you get hatteras and apply them and if

00:34:01,920 --> 00:34:07,320
then immediately breaks things this

00:34:04,710 --> 00:34:09,929
doesn't make me happy obviously so if

00:34:07,320 --> 00:34:12,179
you want to do something if you have

00:34:09,929 --> 00:34:14,460
Patrick they for at least work to the

00:34:12,179 --> 00:34:17,750
break existing things and I also like to

00:34:14,460 --> 00:34:21,450
have some kind of too long didn't read

00:34:17,750 --> 00:34:23,669
introduction that gives me an idea what

00:34:21,450 --> 00:34:26,250
this is all about quite often I see

00:34:23,669 --> 00:34:29,220
patchy areas where there was the first

00:34:26,250 --> 00:34:31,320
version that explained the whole idea

00:34:29,220 --> 00:34:32,940
and for some reason I miss that first

00:34:31,320 --> 00:34:35,760
world where I didn't have time back then

00:34:32,940 --> 00:34:39,179
that in version 5 that explanation is

00:34:35,760 --> 00:34:42,419
gone on the cover letter if that happens

00:34:39,179 --> 00:34:44,429
that's a problem so always explain never

00:34:42,419 --> 00:34:46,740
assume that anybody knows what you're

00:34:44,429 --> 00:35:00,150
doing always explain why you do it in

00:34:46,740 --> 00:35:03,840
the cover letter if it helps one thing

00:35:00,150 --> 00:35:06,300
also which I would like to tell new

00:35:03,840 --> 00:35:09,540
contributors if you are trying to

00:35:06,300 --> 00:35:11,820
include a new feature and you have

00:35:09,540 --> 00:35:14,910
tested it in-house and it's working very

00:35:11,820 --> 00:35:17,220
fine you must still be prepared and some

00:35:14,910 --> 00:35:19,650
people sometimes it will happen people

00:35:17,220 --> 00:35:21,770
look at it upstream and such as oh why

00:35:19,650 --> 00:35:25,080
don't you just rewrite it like that and

00:35:21,770 --> 00:35:27,420
yeah so it doesn't mean if it's tested

00:35:25,080 --> 00:35:29,960
and everything looks fine on your site

00:35:27,420 --> 00:35:32,910
that it will be included in that trailer

00:35:29,960 --> 00:35:34,770
so I think one of my suggestions would

00:35:32,910 --> 00:35:37,920
be that if you once get into some huge

00:35:34,770 --> 00:35:39,990
new feature don't start your interaction

00:35:37,920 --> 00:35:41,800
with the community by with the huge new

00:35:39,990 --> 00:35:44,770
feature if you can possibly avoid it

00:35:41,800 --> 00:35:46,690
if you can start off by doing some

00:35:44,770 --> 00:35:48,930
smaller stuff prone to bug fixes be

00:35:46,690 --> 00:35:53,110
present in the community do some review

00:35:48,930 --> 00:35:54,670
ideally then people will pick up an

00:35:53,110 --> 00:35:57,220
impression not that you know what you're

00:35:54,670 --> 00:35:58,660
doing that you understand how the

00:35:57,220 --> 00:36:01,860
software fits together and then when you

00:35:58,660 --> 00:36:04,300
come along with your big feature then

00:36:01,860 --> 00:36:06,610
you've built up some credit that people

00:36:04,300 --> 00:36:08,260
will have a look at it and say okay this

00:36:06,610 --> 00:36:09,850
makes sense so you need to have all the

00:36:08,260 --> 00:36:11,380
stuff with the cover letter of the a

00:36:09,850 --> 00:36:12,760
good explanation of what your big

00:36:11,380 --> 00:36:15,070
feature is doing but it will be much

00:36:12,760 --> 00:36:16,870
much easier if you've kind of prepared

00:36:15,070 --> 00:36:18,340
the ground already and you have just

00:36:16,870 --> 00:36:20,950
popped up as the first thing we've done

00:36:18,340 --> 00:36:23,950
is submitted a 40-page poster to add

00:36:20,950 --> 00:36:25,630
some huge new thing so there's a

00:36:23,950 --> 00:36:28,120
concrete example when I started doing

00:36:25,630 --> 00:36:30,490
artwork and quickly the first thing we

00:36:28,120 --> 00:36:32,920
did was basically a bunch of bug fixes

00:36:30,490 --> 00:36:34,480
to the existing Codel than the old stuff

00:36:32,920 --> 00:36:36,970
and the floating-point emulation was at

00:36:34,480 --> 00:36:38,590
that time broken I we basically so we

00:36:36,970 --> 00:36:40,540
spent several months just sort of fixing

00:36:38,590 --> 00:36:43,030
up things and that which was a bit of a

00:36:40,540 --> 00:36:45,010
slog at first but it got easier and then

00:36:43,030 --> 00:36:47,260
when we eventually wound up with it when

00:36:45,010 --> 00:36:49,510
the 64 bit arm support came along he

00:36:47,260 --> 00:36:51,040
wants to add emulation we were able to

00:36:49,510 --> 00:36:54,340
get that in quite quickly and without

00:36:51,040 --> 00:36:57,430
too much fuss because we were already a

00:36:54,340 --> 00:36:59,470
known quantity in the community and if

00:36:57,430 --> 00:37:01,540
we had basically done nothing for the

00:36:59,470 --> 00:37:03,130
previous couple of years and then

00:37:01,540 --> 00:37:05,770
suddenly we come a long way and here's a

00:37:03,130 --> 00:37:11,440
huge patter adding a 64 bit of support

00:37:05,770 --> 00:37:12,750
that would have been a lot harder okay

00:37:11,440 --> 00:37:17,530
thank you

00:37:12,750 --> 00:37:20,020
umm so I'm not sure if this is the the

00:37:17,530 --> 00:37:23,610
best panel for this but a big topic is

00:37:20,020 --> 00:37:26,080
the spectra and meltdown security issues

00:37:23,610 --> 00:37:28,420
so there's a question asking are the

00:37:26,080 --> 00:37:32,680
speculative execution flaws are they

00:37:28,420 --> 00:37:34,060
hype or are they real and the amount of

00:37:32,680 --> 00:37:36,640
development time that needs to be

00:37:34,060 --> 00:37:38,940
invested in protecting against them what

00:37:36,640 --> 00:37:41,620
are you what are your thoughts on that

00:37:38,940 --> 00:37:42,170
well they're they're definitely real I

00:37:41,620 --> 00:37:46,609
mean

00:37:42,170 --> 00:37:49,670
been demonstrated attacks against all of

00:37:46,609 --> 00:37:51,589
the all of the the vulnerabilities of

00:37:49,670 --> 00:37:52,730
the last couple of years I think that's

00:37:51,589 --> 00:37:56,240
that's health evidence

00:37:52,730 --> 00:38:01,309
I don't know if anybody disagrees with

00:37:56,240 --> 00:38:03,519
that yeah so I guess it's asking about

00:38:01,309 --> 00:38:06,349
is I guess it's asking about pipe and

00:38:03,519 --> 00:38:09,319
the potential changes that need to be

00:38:06,349 --> 00:38:12,289
made the way we write code now right we

00:38:09,319 --> 00:38:14,299
when we write conditionals for example

00:38:12,289 --> 00:38:15,529
we don't really think too hard oh what's

00:38:14,299 --> 00:38:18,500
gonna happen with speculative execution

00:38:15,529 --> 00:38:21,640
and do I need to add some new guards

00:38:18,500 --> 00:38:23,599
here and and things like that so so

00:38:21,640 --> 00:38:25,789
obviously there's there's a lot of work

00:38:23,599 --> 00:38:30,470
that will need to go in to actually

00:38:25,789 --> 00:38:35,960
secure everything and any thoughts about

00:38:30,470 --> 00:38:39,109
that I I think kind of defending against

00:38:35,960 --> 00:38:42,519
it like at the C code level is is

00:38:39,109 --> 00:38:44,299
intractable it's too hard to there's I

00:38:42,519 --> 00:38:45,769
didn't really know how all this stuff

00:38:44,299 --> 00:38:47,119
worked until I found that it was all

00:38:45,769 --> 00:38:49,730
broken and we had to change everything

00:38:47,119 --> 00:38:50,720
and I'm like you know like like a kernel

00:38:49,730 --> 00:38:52,309
developer and I write that's heavily

00:38:50,720 --> 00:38:56,480
code and all this stuff he's just sort

00:38:52,309 --> 00:38:59,029
of you'd like with the the the the I

00:38:56,480 --> 00:39:00,680
think the next lower level of sort of

00:38:59,029 --> 00:39:03,559
difficulty that we that we do have to

00:39:00,680 --> 00:39:05,779
deal with albeit begrudgingly is is

00:39:03,559 --> 00:39:07,220
concurrency and like the the memory

00:39:05,779 --> 00:39:10,009
model and everyone sort of kind of

00:39:07,220 --> 00:39:11,420
understands that but now if I don't know

00:39:10,009 --> 00:39:14,269
this just feels that much that much

00:39:11,420 --> 00:39:16,220
harder and if we have to if if you have

00:39:14,269 --> 00:39:17,990
to worry about what something is going

00:39:16,220 --> 00:39:19,309
to be observing the like the the side

00:39:17,990 --> 00:39:21,619
effects of the execution on the

00:39:19,309 --> 00:39:24,500
microarchitecture that forget about it

00:39:21,619 --> 00:39:27,380
so I think I think a tool support so

00:39:24,500 --> 00:39:28,970
like the like the ret Pauline thing that

00:39:27,380 --> 00:39:31,779
was the right way to fix it if instead

00:39:28,970 --> 00:39:34,190
everything had to if everything had to

00:39:31,779 --> 00:39:36,400
if you if you had to hand code all the

00:39:34,190 --> 00:39:38,900
indirect jumps or something to to

00:39:36,400 --> 00:39:41,839
confuse the different microarchitectures

00:39:38,900 --> 00:39:43,339
we would have gotten that wrong secondly

00:39:41,839 --> 00:39:45,430
different defense-in-depth

00:39:43,339 --> 00:39:48,230
seems prudent somebody had suggested

00:39:45,430 --> 00:39:52,000
yesterday after Alex's talk but what

00:39:48,230 --> 00:39:54,100
about K or K PTI for K via that's

00:39:52,000 --> 00:39:56,020
great idea because that's you know even

00:39:54,100 --> 00:39:57,910
we're gonna screw more stuff up or we're

00:39:56,020 --> 00:40:01,180
gonna find out that things are broken in

00:39:57,910 --> 00:40:03,610
more more I microarchitectures but that

00:40:01,180 --> 00:40:05,080
we have more will give the attackers or

00:40:03,610 --> 00:40:06,730
the vulnerabilities more more hoops to

00:40:05,080 --> 00:40:08,770
jump through so I think I think that

00:40:06,730 --> 00:40:28,660
that would be a prudent those are the

00:40:08,770 --> 00:40:31,210
two prudent approaches and I disagree

00:40:28,660 --> 00:40:33,520
with that characterization so a an

00:40:31,210 --> 00:40:35,590
analogous example of defense-in-depth

00:40:33,520 --> 00:40:36,640
from a different angle is like and these

00:40:35,590 --> 00:40:39,340
are things I used to think we're silly

00:40:36,640 --> 00:40:41,710
like a farm or selinux or something you

00:40:39,340 --> 00:40:43,060
have these these cross-cutting security

00:40:41,710 --> 00:40:45,310
policies and you're like you know why

00:40:43,060 --> 00:40:48,130
the hell would I I'm not gonna like open

00:40:45,310 --> 00:40:50,140
dev mem as Rubin and do you know in my

00:40:48,130 --> 00:40:52,000
live Bert Damon and and stomp all over

00:40:50,140 --> 00:40:53,650
the place because I write good code but

00:40:52,000 --> 00:40:55,480
hat farmers like well you know just in

00:40:53,650 --> 00:40:57,190
case you messed that up liberties not

00:40:55,480 --> 00:41:02,440
allowed to open that that's a that's a

00:40:57,190 --> 00:41:04,990
good why not and so so this I think

00:41:02,440 --> 00:41:07,530
that's I think it's a relevant

00:41:04,990 --> 00:41:07,530
counterexample

00:41:11,299 --> 00:41:17,390
not only blocking layer that's good but

00:41:14,749 --> 00:41:19,909
also an audit being into tax player to

00:41:17,390 --> 00:41:22,009
like crap I have millions of systems but

00:41:19,909 --> 00:41:31,489
here maybe you just watch what's going

00:41:22,009 --> 00:41:33,049
on which is okay thank you so we only

00:41:31,489 --> 00:41:48,319
have one minute left so let's wrap up

00:41:33,049 --> 00:41:52,159
with Emacs versus VI VI I use belie all

00:41:48,319 --> 00:41:52,909
feels me what what about you what editor

00:41:52,159 --> 00:41:55,729
news

00:41:52,909 --> 00:41:59,030
here's Emacs or VI or do use a different

00:41:55,729 --> 00:42:04,310
editor VI ah there we go thank you

00:41:59,030 --> 00:42:06,610
[Applause]

00:42:04,310 --> 00:42:10,480
we we don't we don't have the budget for

00:42:06,610 --> 00:42:10,480
workstations that can run Emacs

00:42:12,430 --> 00:42:20,499
[Applause]

00:42:14,690 --> 00:42:20,499

YouTube URL: https://www.youtube.com/watch?v=q22lu6l1Cdk


