Title: [2017] QEMU Status Report by Paolo Bonzini (Keynote)
Publication date: 2017-11-10
Playlist: KVM Forum 2017
Description: 
	Second Keynote of KVM Forum 2017 - QEMU Status report

---

Paolo Bonzini
Red Hat, Inc.
Principal Software Engineer
Turate, Italy

I have been working since 2009 on virtualization for Red Hat, where I am a Principal Software Engineer. My contributions have focused almost exclusively on QEMU and KVM since 2011, and since May 2013 I have been co-maintaining the KVM hypervisor. I first presented my work on QEMU at KVM Forum in 2011.
Captions: 
	00:00:00,390 --> 00:00:02,709
[Music]

00:00:06,020 --> 00:00:14,700
so welcome to the final day of kayvyun

00:00:09,599 --> 00:00:17,430
farm 2017 and I'm Paulo so far you've

00:00:14,700 --> 00:00:19,080
probably heard my name mostly as the KVM

00:00:17,430 --> 00:00:21,750
antenna but today I'm actually going to

00:00:19,080 --> 00:00:24,810
talk about you and give you an update of

00:00:21,750 --> 00:00:30,109
what happened in the past year we've had

00:00:24,810 --> 00:00:36,329
three releases we have 50 19 years as of

00:00:30,109 --> 00:00:39,829
que mucho 10 and part the project seems

00:00:36,329 --> 00:00:43,260
healthy with 400 contributors

00:00:39,829 --> 00:00:46,910
contributing on the past year and over

00:00:43,260 --> 00:00:50,910
600 mergers coming from the maintenance

00:00:46,910 --> 00:00:53,160
and as you can see the number of

00:00:50,910 --> 00:00:56,280
contributors and maintainer the

00:00:53,160 --> 00:00:58,440
contributors are the orange line with

00:00:56,280 --> 00:01:01,020
the triangle and the maintainer side the

00:00:58,440 --> 00:01:04,369
green line with circle it's growing

00:01:01,020 --> 00:01:07,260
slowly but surely when teams come and go

00:01:04,369 --> 00:01:09,530
different LEDs have different numbers of

00:01:07,260 --> 00:01:13,080
maintained errs and contributors and

00:01:09,530 --> 00:01:15,479
right now we are at about 210

00:01:13,080 --> 00:01:18,030
contributors and 40 maintainer but

00:01:15,479 --> 00:01:19,470
because maintenance come and go some

00:01:18,030 --> 00:01:22,560
people actually have only contributed to

00:01:19,470 --> 00:01:27,150
pathologies and overall in the last year

00:01:22,560 --> 00:01:29,250
50 people sent poll requests based on

00:01:27,150 --> 00:01:32,340
what's in the get logs we can see that

00:01:29,250 --> 00:01:34,259
there were over 300 bugs supported of

00:01:32,340 --> 00:01:42,590
course most of them didn't make it into

00:01:34,259 --> 00:01:47,399
final release and we had 7500 commits

00:01:42,590 --> 00:01:51,119
most of which had a formal reviewed by

00:01:47,399 --> 00:01:55,470
act by tag by someone else that's not

00:01:51,119 --> 00:01:59,990
the author and overall we've added 150

00:01:55,470 --> 00:01:59,990
thousand lines of code now worried about

00:02:00,200 --> 00:02:09,060
1001 no sorry 1,800,000 it seems a lot

00:02:07,680 --> 00:02:12,780
but I mean

00:02:09,060 --> 00:02:16,200
pretty much a standard load for project

00:02:12,780 --> 00:02:18,569
that is 15 years old almost we've added

00:02:16,200 --> 00:02:21,300
tempers little less than 10% over the

00:02:18,569 --> 00:02:23,970
last year so it's not an explosive

00:02:21,300 --> 00:02:29,989
growth it's low slow but sure but not

00:02:23,970 --> 00:02:32,970
that slow but definitely sure we've

00:02:29,989 --> 00:02:35,640
gotten rid of most of the reports from

00:02:32,970 --> 00:02:38,220
Coverity from static analysis tool now

00:02:35,640 --> 00:02:40,560
we're at 10 left when I did the slides

00:02:38,220 --> 00:02:43,799
now we're at about 13 or 14 but

00:02:40,560 --> 00:02:48,510
certainly going to go down again before

00:02:43,799 --> 00:02:53,120
the 2011 release for which the first

00:02:48,510 --> 00:02:56,190
period is starting pretty much next week

00:02:53,120 --> 00:03:00,420
so we have 10 left and we've fixed 100

00:02:56,190 --> 00:03:03,180
so it was a nice effort on part of Peter

00:03:00,420 --> 00:03:05,849
my dad and many others and also all the

00:03:03,180 --> 00:03:09,000
others that fix the few hundred defects

00:03:05,849 --> 00:03:11,760
before this final 100 and we've added a

00:03:09,000 --> 00:03:15,570
lot of lines of tests of course many of

00:03:11,760 --> 00:03:18,989
those are just the expected output for

00:03:15,570 --> 00:03:21,000
aggression test but still about 15 to 20

00:03:18,989 --> 00:03:23,280
percent of the new lines of code our

00:03:21,000 --> 00:03:26,670
tests which is much better than I

00:03:23,280 --> 00:03:29,340
actually expected myself and based on

00:03:26,670 --> 00:03:30,060
the commit messages of all the bugs that

00:03:29,340 --> 00:03:35,609
we fix it

00:03:30,060 --> 00:03:40,380
14 war security related and worth an

00:03:35,609 --> 00:03:43,130
entry in the CV database so one question

00:03:40,380 --> 00:03:48,660
now is whether we are good at retaining

00:03:43,130 --> 00:03:52,109
contributors since camuto 2.0 we've had

00:03:48,660 --> 00:03:55,160
59 maintainer send it 119 contributors

00:03:52,109 --> 00:03:59,459
and over the past year instead we've had

00:03:55,160 --> 00:04:00,810
for 408 contributors and 51 trainers so

00:03:59,459 --> 00:04:02,250
you can already guess that we are much

00:04:00,810 --> 00:04:04,139
better at attaining maintainer than

00:04:02,250 --> 00:04:06,780
contributors but actually that's too

00:04:04,139 --> 00:04:08,459
much some extent expected it may even be

00:04:06,780 --> 00:04:11,100
a good thing that people are not afraid

00:04:08,459 --> 00:04:13,230
to just send a single patch to scratch

00:04:11,100 --> 00:04:16,669
their own itch and have it committed in

00:04:13,230 --> 00:04:21,599
the repository you can see that about

00:04:16,669 --> 00:04:22,660
60% of those contributors 464 have only

00:04:21,599 --> 00:04:25,810
contributed to one

00:04:22,660 --> 00:04:28,840
and then didn't have any need to

00:04:25,810 --> 00:04:30,790
contribute further it seems like a lot

00:04:28,840 --> 00:04:32,290
but I actually checked a bunch of other

00:04:30,790 --> 00:04:38,050
open source projects for example

00:04:32,290 --> 00:04:40,270
liberties around 50% as well and you can

00:04:38,050 --> 00:04:42,280
see that instead for maintainer it's

00:04:40,270 --> 00:04:45,190
pretty rare to be a maintainer only for

00:04:42,280 --> 00:04:48,700
three or four releases usually at some

00:04:45,190 --> 00:04:53,500
point you are going to stick with the

00:04:48,700 --> 00:04:56,050
project there's this strange peak for

00:04:53,500 --> 00:04:58,210
contributing to one releases only and

00:04:56,050 --> 00:05:00,910
that's mostly due to typos in the name

00:04:58,210 --> 00:05:05,170
type was in the email address and other

00:05:00,910 --> 00:05:10,060
similarly stupid mistakes that are now

00:05:05,170 --> 00:05:12,670
crystallized forever in the git log so

00:05:10,060 --> 00:05:15,940
as is been usual for a few years now

00:05:12,670 --> 00:05:19,990
who is the OL of Fame with commits

00:05:15,940 --> 00:05:23,050
author committed and reviewed and one

00:05:19,990 --> 00:05:24,850
thing that is actually new in for this

00:05:23,050 --> 00:05:31,000
year is that there is no one single

00:05:24,850 --> 00:05:34,000
person that appears in all three top

00:05:31,000 --> 00:05:38,250
rankings but still we can see that for

00:05:34,000 --> 00:05:38,250
all third commits a lot of it is

00:05:39,150 --> 00:05:50,080
cleanups mostly from mark Andre who had

00:05:42,940 --> 00:05:53,620
like over 500 committed myself PowerPC

00:05:50,080 --> 00:05:57,480
and arm as usual have a lot of activity

00:05:53,620 --> 00:05:59,740
more than x86 which is more mature and

00:05:57,480 --> 00:06:02,370
for committee viewed of course there's

00:05:59,740 --> 00:06:06,690
Eric who is stopping everyone else and

00:06:02,370 --> 00:06:10,180
running in circles around everyone else

00:06:06,690 --> 00:06:12,910
so an interesting thing that happened

00:06:10,180 --> 00:06:16,240
last year was that we had a lot of

00:06:12,910 --> 00:06:19,060
changes not so much in the device models

00:06:16,240 --> 00:06:24,660
but actually on the accelerators the cpu

00:06:19,060 --> 00:06:28,120
acceleration that is the heart of qmo

00:06:24,660 --> 00:06:32,020
TCG got a bunch of new features new

00:06:28,120 --> 00:06:34,600
front ends multi-threaded TCG finally

00:06:32,020 --> 00:06:36,220
was included and to balance it we also

00:06:34,600 --> 00:06:40,360
added a way to disable

00:06:36,220 --> 00:06:42,970
so so that if you don't want all the new

00:06:40,360 --> 00:06:45,610
features now you can disable TCG

00:06:42,970 --> 00:06:48,040
actually has to be supported for each

00:06:45,610 --> 00:06:52,690
architecture independently and so far

00:06:48,040 --> 00:06:57,400
it's x86 PowerPC and s/390 that do ok

00:06:52,690 --> 00:06:59,830
Bham had a new immediate exit mechanism

00:06:57,400 --> 00:07:03,040
that useful especially on very large

00:06:59,830 --> 00:07:07,600
machines that have multiple Numa nodes

00:07:03,040 --> 00:07:11,100
and immediate exit makes it the process

00:07:07,600 --> 00:07:14,380
of exiting to user space a little less

00:07:11,100 --> 00:07:18,880
sensitive to Numa placement and cache

00:07:14,380 --> 00:07:22,480
line bounces in the kernel we've had the

00:07:18,880 --> 00:07:24,970
XM accelerator which provides support

00:07:22,480 --> 00:07:28,150
for VM X so for hardware virtualization

00:07:24,970 --> 00:07:31,150
on Windows and Mac OS it was more than

00:07:28,150 --> 00:07:34,710
2.9 but for my class specifically we've

00:07:31,150 --> 00:07:37,690
also had a Summer of Code student who

00:07:34,710 --> 00:07:41,460
included support for hypervisor

00:07:37,690 --> 00:07:44,470
framework the code was coming from the

00:07:41,460 --> 00:07:48,220
four main Israeli startup there - then

00:07:44,470 --> 00:07:50,320
it was included into the Android

00:07:48,220 --> 00:07:53,290
emulator and then it looks like it's

00:07:50,320 --> 00:07:54,970
making me into making it into qmo not in

00:07:53,290 --> 00:08:01,800
the next release but in the next one

00:07:54,970 --> 00:08:06,150
2.12 and another interesting focus was

00:08:01,800 --> 00:08:08,620
cryptography we've had MBD over TLS

00:08:06,150 --> 00:08:11,160
character devices serial console over

00:08:08,620 --> 00:08:14,140
TLS and finally this year we have had

00:08:11,160 --> 00:08:17,310
migration over TLS so finally completing

00:08:14,140 --> 00:08:19,390
the support for TLS in pretty much any

00:08:17,310 --> 00:08:22,660
communication that kilometers with the

00:08:19,390 --> 00:08:25,610
external world and we also had the via

00:08:22,660 --> 00:08:29,419
crypto that was mentioned yesterday

00:08:25,610 --> 00:08:32,570
in actually on Wednesday in the video

00:08:29,419 --> 00:08:37,159
1.1 presentation by yen's and Michael

00:08:32,570 --> 00:08:40,940
and like support finally also for two

00:08:37,159 --> 00:08:42,919
images and replacing Act not just for

00:08:40,940 --> 00:08:46,040
two images but also replacing the old

00:08:42,919 --> 00:08:48,200
cryptography mechanism for two co2 so

00:08:46,040 --> 00:08:51,230
that for example you can change the key

00:08:48,200 --> 00:08:55,579
for an image without having to encrypt

00:08:51,230 --> 00:08:58,339
everything and a lot more some of which

00:08:55,579 --> 00:09:00,019
have been presented at KD informants

00:08:58,339 --> 00:09:01,700
well today we were going to have

00:09:00,019 --> 00:09:05,300
presentation bill about the hostess

00:09:01,700 --> 00:09:08,690
disguise but and I had polling mode as

00:09:05,300 --> 00:09:11,450
well and others that were presented in

00:09:08,690 --> 00:09:13,850
last year have been included

00:09:11,450 --> 00:09:16,700
so the hostess shock had a presentation

00:09:13,850 --> 00:09:20,029
at Kb inform 2016 if IO mediated

00:09:16,700 --> 00:09:22,000
pass-through so maybe it's really useful

00:09:20,029 --> 00:09:24,470
to come and present your work so that

00:09:22,000 --> 00:09:27,110
other people are up to speed and

00:09:24,470 --> 00:09:29,480
maintain ears know more about it and can

00:09:27,110 --> 00:09:33,740
it can help reviewing and getting your

00:09:29,480 --> 00:09:35,660
coding and lots of arm power s the 90

00:09:33,740 --> 00:09:38,240
improvements as I said power and arm

00:09:35,660 --> 00:09:41,740
were the most active architecture this

00:09:38,240 --> 00:09:45,199
year and now for something different

00:09:41,740 --> 00:09:48,620
deprecation we are thinking about that

00:09:45,199 --> 00:09:50,510
about duplicating features that no one

00:09:48,620 --> 00:09:52,519
is using so we've already dropped

00:09:50,510 --> 00:09:55,339
support for a few hosts to assets

00:09:52,519 --> 00:10:00,100
including dikes and soloists up to

00:09:55,339 --> 00:10:04,310
Solaris 9 but we still support a lot of

00:10:00,100 --> 00:10:07,190
operating systems we actually have Linux

00:10:04,310 --> 00:10:09,890
windows and at BSD Mac OS as fully

00:10:07,190 --> 00:10:12,829
supported operating systems and we would

00:10:09,890 --> 00:10:16,000
like volunteers for the other BS DS for

00:10:12,829 --> 00:10:21,140
solaris newer versions and for haiku

00:10:16,000 --> 00:10:23,899
these are not particularly painful so we

00:10:21,140 --> 00:10:25,970
haven't removed the support for them but

00:10:23,899 --> 00:10:27,769
we would still like to have them better

00:10:25,970 --> 00:10:30,019
integrated into our continuous

00:10:27,769 --> 00:10:33,730
integration infrastructure we've also

00:10:30,019 --> 00:10:36,529
dropped a few architectures that as

00:10:33,730 --> 00:10:38,209
hosts at least as our best kept in

00:10:36,529 --> 00:10:43,519
museums

00:10:38,209 --> 00:10:48,889
or in perhaps other kinds of machines

00:10:43,519 --> 00:10:51,949
like HP Pai 64-68 K is nowadays really

00:10:48,889 --> 00:10:53,899
more mostly in embedded machine in few

00:10:51,949 --> 00:10:58,089
embedded machines but we still support

00:10:53,899 --> 00:11:02,810
five 32-bit architectures and six 64-bit

00:10:58,089 --> 00:11:06,230
architectures and of course we we

00:11:02,810 --> 00:11:13,459
actually support H P PAE and as an

00:11:06,230 --> 00:11:17,540
motorola 1668 k as targets for linux

00:11:13,459 --> 00:11:23,899
user mode emulation so you cannot run

00:11:17,540 --> 00:11:26,029
any more qm1 your HP play machine but

00:11:23,899 --> 00:11:28,899
after you've sent it to the museum you

00:11:26,029 --> 00:11:30,889
can still ran the binaries using q mo

00:11:28,899 --> 00:11:33,220
and also we are thinking about

00:11:30,889 --> 00:11:36,980
duplicating and command-line options a

00:11:33,220 --> 00:11:41,240
couple of them have already failed but

00:11:36,980 --> 00:11:45,649
maybe others in the future will so

00:11:41,240 --> 00:11:47,420
talking about continuous integration our

00:11:45,649 --> 00:11:50,000
continuous integration system is the

00:11:47,420 --> 00:11:52,490
combination of several actually we have

00:11:50,000 --> 00:11:55,759
pursued that looks at all the patches

00:11:52,490 --> 00:11:59,000
sent to the mailing list it chews them

00:11:55,759 --> 00:12:02,480
and complains about them if there's

00:11:59,000 --> 00:12:04,699
anything to complain about them and it

00:12:02,480 --> 00:12:07,250
also has nice user interface that you

00:12:04,699 --> 00:12:11,180
can use to see the state of patches that

00:12:07,250 --> 00:12:16,040
have been submitted to q mo there's

00:12:11,180 --> 00:12:19,990
Travis that takes care of testing with

00:12:16,040 --> 00:12:22,910
the wide matrix of completion options

00:12:19,990 --> 00:12:25,639
commits after they went into a gift tree

00:12:22,910 --> 00:12:28,100
so individual maintenance can sign up

00:12:25,639 --> 00:12:34,610
for Travis continuous integration and

00:12:28,100 --> 00:12:37,189
also after every pull request has been

00:12:34,610 --> 00:12:40,130
merged Davis goes and checks what's

00:12:37,189 --> 00:12:42,589
going on and then finally there is

00:12:40,130 --> 00:12:43,569
shippable that's more focused on testing

00:12:42,589 --> 00:12:46,279
cross-compilation

00:12:43,569 --> 00:12:48,920
and the nice thing about this is that

00:12:46,279 --> 00:12:50,170
all the infrastructure for continuous

00:12:48,920 --> 00:12:52,420
integration is also

00:12:50,170 --> 00:12:55,209
able on your machine not just as a

00:12:52,420 --> 00:12:58,240
software-as-a-service so we've had

00:12:55,209 --> 00:13:01,600
darker tests for couple years now but

00:12:58,240 --> 00:13:05,110
now it's way more mature docker tests

00:13:01,600 --> 00:13:10,029
and the build inside an operating system

00:13:05,110 --> 00:13:12,820
container and that's what pachoo uses

00:13:10,029 --> 00:13:15,430
for example to test some various

00:13:12,820 --> 00:13:20,410
configuration and now we will also add

00:13:15,430 --> 00:13:22,930
vm based tests that test bsd operating

00:13:20,410 --> 00:13:27,820
systems and of course needless to say

00:13:22,930 --> 00:13:30,220
the VMS 1 into Q itself docker tests are

00:13:27,820 --> 00:13:32,709
also used for useful for cross

00:13:30,220 --> 00:13:36,880
compilation so you can have a prebuilt

00:13:32,709 --> 00:13:42,010
configuration that course compiles on

00:13:36,880 --> 00:13:45,160
our master 90 PowerPC everything from

00:13:42,010 --> 00:13:46,949
your x86 machine which is probably the

00:13:45,160 --> 00:13:51,399
most likely configuration you have

00:13:46,949 --> 00:13:57,250
another new thing for the past year new

00:13:51,399 --> 00:14:00,730
qm website new servers hosting mo new

00:13:57,250 --> 00:14:02,500
website separates the user information

00:14:00,730 --> 00:14:08,589
from the developer information that

00:14:02,500 --> 00:14:10,630
stayed in the wiki and we are going to

00:14:08,589 --> 00:14:13,930
move again to a new server in the next

00:14:10,630 --> 00:14:16,930
few months but that shouldn't be a

00:14:13,930 --> 00:14:20,740
problem with because we've done a nice

00:14:16,930 --> 00:14:26,980
dry run with the migration to the new

00:14:20,740 --> 00:14:30,339
website and the new web server as usual

00:14:26,980 --> 00:14:34,360
qmo has participated in both outreach

00:14:30,339 --> 00:14:36,579
and google Summer of Code t-shirts for

00:14:34,360 --> 00:14:40,660
the mentors and students have arrived

00:14:36,579 --> 00:14:43,300
just this week so we've had one intern

00:14:40,660 --> 00:14:47,529
for outreach Summer 2017 and five for

00:14:43,300 --> 00:14:49,680
google Summer of Code ishani was working

00:14:47,529 --> 00:14:53,260
for outreach on the kurma backup tool

00:14:49,680 --> 00:14:55,510
alex a non-generic PCI Express PCI weeds

00:14:53,260 --> 00:14:58,930
then as I said before the words I

00:14:55,510 --> 00:15:02,370
provides a framework support with serger

00:14:58,930 --> 00:15:02,370
and then

00:15:02,440 --> 00:15:08,470
block layer work with block layer

00:15:05,560 --> 00:15:11,740
filters from manos m to TCG performance

00:15:08,470 --> 00:15:14,380
improvements from planet and a slightly

00:15:11,740 --> 00:15:18,190
different topic a winners driver for

00:15:14,380 --> 00:15:22,030
voltage GPU and virgil by nathan so

00:15:18,190 --> 00:15:24,940
what's going on next year documentation

00:15:22,030 --> 00:15:27,940
there was some feeble attempt and

00:15:24,940 --> 00:15:29,980
building at building a tooling foreign

00:15:27,940 --> 00:15:32,620
documentation in the past few years

00:15:29,980 --> 00:15:37,090
maybe we can do better and actually

00:15:32,620 --> 00:15:40,420
finalize the work before 2007 2018 km

00:15:37,090 --> 00:15:43,060
forum as I said application and spring

00:15:40,420 --> 00:15:46,350
cleaning command-line options perhaps

00:15:43,060 --> 00:15:50,770
even some targets that no one is using

00:15:46,350 --> 00:15:53,700
some boards whatever the maintainer feel

00:15:50,770 --> 00:15:57,100
it's better being duplicated and removed

00:15:53,700 --> 00:15:59,470
block layer is still the most active

00:15:57,100 --> 00:16:02,440
component poorly besides Hardware

00:15:59,470 --> 00:16:04,930
emulation and there's lot of things that

00:16:02,440 --> 00:16:07,990
going on a lot of lots of them have been

00:16:04,930 --> 00:16:11,770
presented this year or will be presented

00:16:07,990 --> 00:16:13,300
today regarding testing was one part

00:16:11,770 --> 00:16:15,700
work um was probably lacking a bit

00:16:13,300 --> 00:16:17,680
behind is phasing and I would certainly

00:16:15,700 --> 00:16:20,590
like to have more phasing off devices

00:16:17,680 --> 00:16:23,590
it's not an easy topic because devices

00:16:20,590 --> 00:16:27,190
have a complicated interface and facing

00:16:23,590 --> 00:16:29,440
them requires also understanding the

00:16:27,190 --> 00:16:31,720
whole structure of the machine how to

00:16:29,440 --> 00:16:34,350
drive a PCI device what's special about

00:16:31,720 --> 00:16:37,510
PCI device that can cause bugs so it's

00:16:34,350 --> 00:16:41,620
difficult to find the nice balance

00:16:37,510 --> 00:16:46,920
between just sizing in the AFL American

00:16:41,620 --> 00:16:50,200
fat slob style and more targeted testing

00:16:46,920 --> 00:16:53,200
more white box testing but these are the

00:16:50,200 --> 00:16:55,840
topics that came to my mind but of

00:16:53,200 --> 00:16:58,240
course it's an free software project

00:16:55,840 --> 00:16:59,920
whatever you want to contribute feel

00:16:58,240 --> 00:17:02,560
free to send patches to the mailing list

00:16:59,920 --> 00:17:06,070
and they will be judged on their merit

00:17:02,560 --> 00:17:07,930
so if maybe there will be something else

00:17:06,070 --> 00:17:13,860
that isn't in list that will be in the

00:17:07,930 --> 00:17:17,010
2018 kyoto support so that's it

00:17:13,860 --> 00:17:21,140
I'm a bit late so let's move to the next

00:17:17,010 --> 00:17:24,079
told by Dave Gilbert

00:17:21,140 --> 00:17:30,299
[Applause]

00:17:24,079 --> 00:17:30,299

YouTube URL: https://www.youtube.com/watch?v=PZ7H_5s8yqE


