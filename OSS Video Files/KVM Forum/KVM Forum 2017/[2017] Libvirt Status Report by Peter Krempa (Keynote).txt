Title: [2017] Libvirt Status Report by Peter Krempa (Keynote)
Publication date: 2017-11-15
Playlist: KVM Forum 2017
Description: 
	Third Keynote of KVM Forum 2017 - Libvirt Status report

---
Captions: 
	00:00:00,390 --> 00:00:02,709
[Music]

00:00:06,500 --> 00:00:11,429
good afternoon my name is Peter krempe

00:00:09,840 --> 00:00:17,699
and I'm going to tell you what we done

00:00:11,429 --> 00:00:20,100
in libvirt in the last year so in the

00:00:17,699 --> 00:00:22,740
last year we it was actually one year

00:00:20,100 --> 00:00:26,550
and two months since the last KVM forum

00:00:22,740 --> 00:00:28,859
since the last one was in Toronto we had

00:00:26,550 --> 00:00:33,090
thirteen releases since we do a monthly

00:00:28,859 --> 00:00:37,230
release cycle we had 120 outers

00:00:33,090 --> 00:00:40,379
sixty-one of which were new that's on

00:00:37,230 --> 00:00:42,030
par what we had last on the last KVM

00:00:40,379 --> 00:00:45,030
forum that was 63

00:00:42,030 --> 00:00:48,930
we had three thousand six hundred and

00:00:45,030 --> 00:00:54,180
ninety four commits its until the last

00:00:48,930 --> 00:00:57,360
release that was 3.8 we changed four

00:00:54,180 --> 00:00:59,100
thousand something files and edit three

00:00:57,360 --> 00:01:03,750
hundred and seventy eight thousand lines

00:00:59,100 --> 00:01:09,650
and we spent almost 19,000 bales in the

00:01:03,750 --> 00:01:14,040
mailing list commit per release is

00:01:09,650 --> 00:01:17,100
usually around two to three hundred the

00:01:14,040 --> 00:01:19,259
two peaks you can see our version three

00:01:17,100 --> 00:01:25,740
zero was a longer release cycle and

00:01:19,259 --> 00:01:33,150
version 3.2 was was being merged into

00:01:25,740 --> 00:01:36,890
one of the enterprise distros so there

00:01:33,150 --> 00:01:41,820
was some push going on because of that

00:01:36,890 --> 00:01:45,149
so the most popular hypervisors as usual

00:01:41,820 --> 00:01:47,790
the most popular hypervisor is qmu along

00:01:45,149 --> 00:01:51,149
with common changes to the code followed

00:01:47,790 --> 00:01:54,930
by this year leap Excel and gear to also

00:01:51,149 --> 00:02:01,890
driver last year the virtuoso driver was

00:01:54,930 --> 00:02:06,060
on was on the second place this year the

00:02:01,890 --> 00:02:07,740
top outer is John Farrell on with 527

00:02:06,060 --> 00:02:11,090
comments

00:02:07,740 --> 00:02:11,090
[Applause]

00:02:11,340 --> 00:02:21,460
followed by a almost tie with me and me

00:02:15,760 --> 00:02:23,920
how so and the one interesting fact is

00:02:21,460 --> 00:02:29,860
that the top three authors take up

00:02:23,920 --> 00:02:32,110
almost 40% of all commits so the top

00:02:29,860 --> 00:02:35,290
motivators to do upstream work for

00:02:32,110 --> 00:02:36,340
Leaburg this year as usual was red head

00:02:35,290 --> 00:02:39,310
the biggest motivator

00:02:36,340 --> 00:02:42,130
with almost 82 percent of all

00:02:39,310 --> 00:02:46,560
contributors closely followed by

00:02:42,130 --> 00:02:51,910
individual contributors and then IBM

00:02:46,560 --> 00:02:53,950
that DC this year passed vr-2 also

00:02:51,910 --> 00:02:56,950
because of their push of s/390 and

00:02:53,950 --> 00:02:59,680
powers PowerPC systems and also probably

00:02:56,950 --> 00:03:08,440
the virtual driver stabilized over the

00:02:59,680 --> 00:03:12,459
time so what did we do we as a year cap

00:03:08,440 --> 00:03:14,320
told us last year we tried to make

00:03:12,459 --> 00:03:15,820
people not in first stuff from our

00:03:14,320 --> 00:03:17,920
version numbers that means that the

00:03:15,820 --> 00:03:22,090
version numbers are based on the time of

00:03:17,920 --> 00:03:24,310
the release we also added a news file

00:03:22,090 --> 00:03:26,100
which is helpful for inferring new

00:03:24,310 --> 00:03:29,950
features that happened in Libert and

00:03:26,100 --> 00:03:33,070
also we try to implement the review tags

00:03:29,950 --> 00:03:38,920
but some people try to ignore it for

00:03:33,070 --> 00:03:44,200
some time now so the most notable

00:03:38,920 --> 00:03:46,450
features we had last year was events for

00:03:44,200 --> 00:03:49,239
all the liberal objects we have most

00:03:46,450 --> 00:03:52,810
objects are now have now lifecycle

00:03:49,239 --> 00:03:58,870
events we added CPU hood clock and hood

00:03:52,810 --> 00:04:02,110
unplug for Intel and PowerPC in the qmu

00:03:58,870 --> 00:04:06,640
driver vo2 also and very task editor

00:04:02,110 --> 00:04:08,500
storage driver support we added TLS

00:04:06,640 --> 00:04:11,890
support for migration and character

00:04:08,500 --> 00:04:17,289
devices we now guarantee a stable guest

00:04:11,890 --> 00:04:21,430
CPU ABI by querying qmu for all the CPU

00:04:17,289 --> 00:04:23,740
features that are present we now support

00:04:21,430 --> 00:04:27,610
or user-provided aliases for devices so

00:04:23,740 --> 00:04:29,350
that management layer can put some

00:04:27,610 --> 00:04:33,400
metadata or connect the metadata to the

00:04:29,350 --> 00:04:36,820
devices they want to use we now have

00:04:33,400 --> 00:04:39,310
mediated devices support and the V iommu

00:04:36,820 --> 00:04:43,740
we support sparse streams which allow

00:04:39,310 --> 00:04:46,840
you to transfer sparse files effectively

00:04:43,740 --> 00:04:48,850
we support nvd emulation and pass

00:04:46,840 --> 00:04:52,090
through direct rendering manager pass

00:04:48,850 --> 00:04:55,030
through and we improved scalability and

00:04:52,090 --> 00:04:58,630
footprint by increasing limits in the

00:04:55,030 --> 00:05:01,150
RPC protocol and splitting of storage

00:04:58,630 --> 00:05:03,000
driver backends as required by the

00:05:01,150 --> 00:05:05,770
installation

00:05:03,000 --> 00:05:09,849
other notable improvements were in the

00:05:05,770 --> 00:05:12,639
section of CI of the libvirt project we

00:05:09,849 --> 00:05:14,860
added obviously workers for the newest

00:05:12,639 --> 00:05:19,630
upstream distributions or long-term

00:05:14,860 --> 00:05:21,460
stable distributions we now test most of

00:05:19,630 --> 00:05:25,360
the projects hosted under the lipfird

00:05:21,460 --> 00:05:30,760
domain and most of the configuration

00:05:25,360 --> 00:05:33,909
supported by them we try and also

00:05:30,760 --> 00:05:37,000
undress started learning about ansible

00:05:33,909 --> 00:05:39,970
so he created a set of ansible playbooks

00:05:37,000 --> 00:05:43,960
and scripts to help deploy the the

00:05:39,970 --> 00:05:46,659
workers for build and also to allow

00:05:43,960 --> 00:05:50,169
developers to create environments to

00:05:46,659 --> 00:05:52,570
test their code with libvirt and to

00:05:50,169 --> 00:05:56,560
automate this maybe there are some ideas

00:05:52,570 --> 00:06:00,009
for future for example running CI code

00:05:56,560 --> 00:06:03,099
on all the patches posted to the list SQ

00:06:00,009 --> 00:06:06,669
mu is doing and perhaps some doing some

00:06:03,099 --> 00:06:08,919
actual functional testing since the vert

00:06:06,669 --> 00:06:15,759
test project died some time ago and we

00:06:08,919 --> 00:06:18,759
don't do that yet properly we had some

00:06:15,759 --> 00:06:21,039
community internships no this year we

00:06:18,759 --> 00:06:23,590
participated only in the google Summer

00:06:21,039 --> 00:06:25,330
of Code project we had three interns but

00:06:23,590 --> 00:06:28,930
only one of them was successful into

00:06:25,330 --> 00:06:32,380
delivering their finished product

00:06:28,930 --> 00:06:34,719
product reduced in created the tool

00:06:32,380 --> 00:06:35,230
called birth bootstrap that is a tool

00:06:34,719 --> 00:06:38,320
that

00:06:35,230 --> 00:06:41,980
allows you to use docker and birth

00:06:38,320 --> 00:06:44,290
builder images - or sources to create

00:06:41,980 --> 00:06:47,770
image for liberty Aleksey if you don't

00:06:44,290 --> 00:06:50,340
want to run your containers in docker

00:06:47,770 --> 00:06:53,110
you can run them in libvirt Aleksey and

00:06:50,340 --> 00:06:55,830
it's also integrated in word manager so

00:06:53,110 --> 00:07:00,070
it should be automatic

00:06:55,830 --> 00:07:03,940
so and how about future of libvirt what

00:07:00,070 --> 00:07:09,700
is going to happen during the upcoming

00:07:03,940 --> 00:07:13,420
year we are more concretely I plan to

00:07:09,700 --> 00:07:15,670
add support for block the add and TLS

00:07:13,420 --> 00:07:18,820
authentication and locks for the whole

00:07:15,670 --> 00:07:22,690
backing chain of disks and do proper

00:07:18,820 --> 00:07:24,730
external snapshots which is a big

00:07:22,690 --> 00:07:29,950
undertaking so I hope I will be able to

00:07:24,730 --> 00:07:32,610
do that then the plan is to integrate or

00:07:29,950 --> 00:07:38,790
allow integration of libvirt and

00:07:32,610 --> 00:07:38,790
managing of delivered VMs on using

00:07:41,250 --> 00:07:48,580
managing libvirt the MS using cockpit

00:07:44,020 --> 00:07:51,610
this requires to do debug be bind be bus

00:07:48,580 --> 00:07:54,330
bindings for libvirt which is basically

00:07:51,610 --> 00:07:58,690
a demon going back and forth through the

00:07:54,330 --> 00:08:01,630
with the bus and tool it virt because

00:07:58,690 --> 00:08:05,530
cockpit is using the bus extensively and

00:08:01,630 --> 00:08:08,020
also improved avert xml project which

00:08:05,530 --> 00:08:12,460
was which is currently part of a weird

00:08:08,020 --> 00:08:15,280
manager to allow other users building

00:08:12,460 --> 00:08:18,640
the externals in a predictable and easy

00:08:15,280 --> 00:08:21,580
way because as you can see in our

00:08:18,640 --> 00:08:26,670
documentation building libvirt xml's is

00:08:21,580 --> 00:08:31,000
not an easy job so and the plan is also

00:08:26,670 --> 00:08:34,180
to do mediated devices instantiation

00:08:31,000 --> 00:08:36,310
using the no devices driver so that you

00:08:34,180 --> 00:08:40,120
can create your virtual GPUs and stuff

00:08:36,310 --> 00:08:42,849
and also add D Sox support and visa NFS

00:08:40,120 --> 00:08:44,980
so that you can easily share your hosts

00:08:42,849 --> 00:08:46,810
directories to your guests which is

00:08:44,980 --> 00:08:50,290
currently not that easy

00:08:46,810 --> 00:08:52,210
and maybe finally finish the best

00:08:50,290 --> 00:08:58,380
support best completion support for

00:08:52,210 --> 00:09:01,840
worse so thank you that's it

00:08:58,380 --> 00:09:07,700
[Applause]

00:09:01,840 --> 00:09:07,700

YouTube URL: https://www.youtube.com/watch?v=kXMZefakcAI


