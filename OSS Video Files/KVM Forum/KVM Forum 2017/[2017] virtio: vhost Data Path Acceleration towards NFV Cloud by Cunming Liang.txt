Title: [2017] virtio: vhost Data Path Acceleration towards NFV Cloud by Cunming Liang
Publication date: 2017-11-21
Playlist: KVM Forum 2017
Description: 
	VIRTIO as a para-virtualized device decouples VMs and physical devices. Friendly live-migration support makes it well recognized by the cloud networking. However, the north-south I/O throughput of VIRTIO doesnâ€™t compare with SR-IOV.
The technical talk gives a practical proposal to address this by introducing a framework for vhost data path offloading. It essentially allows using HW device to offload the vring data path on the vhost side, without requiring the HW device being pass-thru to the guest. As a result, it achieves SR-IOV like performance with compatible live-migration support which makes it possible to upgrade a stock VM using virtio to a new HW accelerated platform transparently.
Steve is going to explain the mechanism under the hood, go through the detail proposal, introduce the benefits, and share the WIP patch work and figure out the minimum HW prerequisite for doing this.

---

Cunming Liang
Intel
Platform Solution Architect

Steve is Intel platform solution architecture for DPDK. He spends years on packet I/O performance optimization (e.g. vector PMD), I/O virtualization and core efficiency for DPDK. He used to work on the estimation/tuning/optimization of user space stack for workloads (e.g. L7 load balance). He addressed the virtualization/container story for DPDK, as one of the major input to define DPDK road map for that piece. The recent focus area is packet processing w/ HW acceleration or on the heterogeneous platform. He delivered a few presentation on DPDK China Summit, DPDK US Summit, OPNFV DPDK/FD.IO Mini Summit.
Captions: 
	00:00:00,390 --> 00:00:02,709
[Music]

00:00:06,020 --> 00:00:11,880
okay I'm Steve platform solution

00:00:09,900 --> 00:00:13,980
architecture from Intel and I mainly

00:00:11,880 --> 00:00:16,109
focus on high performance now working so

00:00:13,980 --> 00:00:21,150
especially yeah

00:00:16,109 --> 00:00:24,210
TBD k yeah and there today our giver my

00:00:21,150 --> 00:00:26,609
topic is about what I'll net and this is

00:00:24,210 --> 00:00:28,710
our team work so I represented for the

00:00:26,609 --> 00:00:31,740
tippecanoe team to be here in the

00:00:28,710 --> 00:00:40,379
present work we are doing another eye on

00:00:31,740 --> 00:00:42,410
which my vision yeah my talk introduce

00:00:40,379 --> 00:00:44,550
three parts first one I worked about

00:00:42,410 --> 00:00:46,620
introduction on the background and the

00:00:44,550 --> 00:00:50,010
motivation why we are doing this and

00:00:46,620 --> 00:00:52,289
then I will I'll introduce what is

00:00:50,010 --> 00:00:54,360
rehouse data parse acceleration and the

00:00:52,289 --> 00:00:56,309
house that design and the hood and then

00:00:54,360 --> 00:00:58,829
was their implementation software

00:00:56,309 --> 00:01:03,390
proposal here and in the end that I will

00:00:58,829 --> 00:01:07,439
give a summary on the future work okay

00:01:03,390 --> 00:01:09,420
yeah as we know that yeah and before I

00:01:07,439 --> 00:01:11,970
starting this I just a give our contact

00:01:09,420 --> 00:01:16,500
setting is that we talk about what I or

00:01:11,970 --> 00:01:19,530
not here so we were under Kamui and KVM

00:01:16,500 --> 00:01:22,619
perspective so any thing I talked about

00:01:19,530 --> 00:01:24,810
the PV is really to the juvenile so but

00:01:22,619 --> 00:01:28,200
I asked her virtual host in your face is

00:01:24,810 --> 00:01:30,590
being widely used in the cloud and even

00:01:28,200 --> 00:01:33,150
in the cloud infrastructure and there

00:01:30,590 --> 00:01:35,009
but when we are going to run some

00:01:33,150 --> 00:01:37,710
virtual network functions in the ghast

00:01:35,009 --> 00:01:41,070
like at some DVD case based of I wore

00:01:37,710 --> 00:01:44,640
TBI unicast that current performance

00:01:41,070 --> 00:01:47,460
that is not so recent not good enough

00:01:44,640 --> 00:01:49,290
but under enough VI which is the

00:01:47,460 --> 00:01:51,090
infrastructure for and the fee that DB

00:01:49,290 --> 00:01:54,060
DK is being used to promote the

00:01:51,090 --> 00:01:59,219
performers on the house side to make her

00:01:54,060 --> 00:02:01,290
better software we switch and ER dr.

00:01:59,219 --> 00:02:06,270
cloud we switch situation cloud we

00:02:01,290 --> 00:02:08,670
switch as na VI and a few product comes

00:02:06,270 --> 00:02:11,340
comes in to market which is called

00:02:08,670 --> 00:02:13,100
usually quarry source Manik we're just

00:02:11,340 --> 00:02:16,370
going to offload some for

00:02:13,100 --> 00:02:18,440
boarding decision on the card so that

00:02:16,370 --> 00:02:22,130
you can spend the last CPU cores to the

00:02:18,440 --> 00:02:25,130
14 and get to directly packet i/o from

00:02:22,130 --> 00:02:32,720
their Hardware direct and go to the VM

00:02:25,130 --> 00:02:35,600
directly so under then the foster parse

00:02:32,720 --> 00:02:40,280
in like in the host software tends to be

00:02:35,600 --> 00:02:42,650
our faster pass in there in

00:02:40,280 --> 00:02:46,010
hardware and our fastest low pass in the

00:02:42,650 --> 00:02:49,160
house I'd it are perfect actually for

00:02:46,010 --> 00:02:52,130
those watch lines which can easily

00:02:49,160 --> 00:02:55,580
operate a driver or change their image

00:02:52,130 --> 00:02:57,170
in their VM that public good because you

00:02:55,580 --> 00:02:59,600
can take a physical horse in phase and

00:02:57,170 --> 00:03:02,330
get to the package directly but for

00:02:59,600 --> 00:03:05,180
those VM or for those virtual blinds

00:03:02,330 --> 00:03:08,000
building on top of water aisle or even

00:03:05,180 --> 00:03:10,730
you it's it's no way for you to change

00:03:08,000 --> 00:03:13,790
the driver there you are suffering and

00:03:10,730 --> 00:03:16,370
then the idea is that okay you keep the

00:03:13,790 --> 00:03:19,370
first passenger switched silicon or

00:03:16,370 --> 00:03:20,990
demonic and then you still have where

00:03:19,370 --> 00:03:23,240
faster slow parts in the whole side

00:03:20,990 --> 00:03:26,030
using the CPU to do the further

00:03:23,240 --> 00:03:27,650
acceleration and then your vote I'll

00:03:26,030 --> 00:03:29,900
just a connector with the software

00:03:27,650 --> 00:03:32,570
switch directly okay

00:03:29,900 --> 00:03:35,450
that's is good so your stock VM can it

00:03:32,570 --> 00:03:38,930
can be can be no change and running that

00:03:35,450 --> 00:03:41,540
infrastructure but how about for the

00:03:38,930 --> 00:03:44,510
middle middle box like the green one he

00:03:41,540 --> 00:03:47,780
it appears on top out of what I own but

00:03:44,510 --> 00:03:50,570
but he also wants you have the

00:03:47,780 --> 00:03:54,830
performance upgrade but do not want to

00:03:50,570 --> 00:03:57,680
be aware about the back and change so if

00:03:54,830 --> 00:04:00,680
that depends on the traffic is master

00:03:57,680 --> 00:04:03,560
Easter Western a sauce so if it choose

00:04:00,680 --> 00:04:06,800
some service level assurance that I need

00:04:03,560 --> 00:04:08,720
higher performance essentially on the

00:04:06,800 --> 00:04:11,960
backend that you can associate our

00:04:08,720 --> 00:04:13,790
virtual switch with our physical cue or

00:04:11,960 --> 00:04:16,010
physical Nick then you get a one-to-one

00:04:13,790 --> 00:04:18,980
mapping so once your mapping is there

00:04:16,010 --> 00:04:22,430
easy it's a much easier way to do like

00:04:18,980 --> 00:04:25,280
the server copy on that time okay you

00:04:22,430 --> 00:04:27,000
get one voter to butter in the face and

00:04:25,280 --> 00:04:29,460
one holler

00:04:27,000 --> 00:04:32,190
q or interface associated want in

00:04:29,460 --> 00:04:35,850
one-to-one and they're okay

00:04:32,190 --> 00:04:37,800
as I said there's two a few direction

00:04:35,850 --> 00:04:41,100
why I said are you still have a software

00:04:37,800 --> 00:04:43,080
relay to do some uu allows you to pack

00:04:41,100 --> 00:04:45,000
the professor a copy but you still keep

00:04:43,080 --> 00:04:49,170
their descriptive translation on the

00:04:45,000 --> 00:04:53,130
host of CPU and another way is that what

00:04:49,170 --> 00:04:56,550
if you have our hardware the hardware is

00:04:53,130 --> 00:04:59,820
our veer incapable who can ink up the

00:04:56,550 --> 00:05:03,390
ink you and DQ tutor veering towards Li

00:04:59,820 --> 00:05:06,300
so the talk today and talk about the

00:05:03,390 --> 00:05:08,730
topic today I'm focus is on the second

00:05:06,300 --> 00:05:12,150
direction so once you have our hardware

00:05:08,730 --> 00:05:15,750
which can have the ability for the V

00:05:12,150 --> 00:05:22,260
ring access what's the next impact for

00:05:15,750 --> 00:05:25,380
the software okay what is V DP really PA

00:05:22,260 --> 00:05:27,900
is data path acceleration for the be

00:05:25,380 --> 00:05:30,000
host so we know that this is the

00:05:27,900 --> 00:05:32,640
acceleration using expression on a

00:05:30,000 --> 00:05:34,710
backhand side so it is just a master

00:05:32,640 --> 00:05:37,350
that for the PV device to do the

00:05:34,710 --> 00:05:43,590
director vector IO with its associated

00:05:37,350 --> 00:05:45,750
aster accelerator so if we look looking

00:05:43,590 --> 00:05:48,600
into the detail what it is is actually

00:05:45,750 --> 00:05:51,630
essentially it is a jacoco there data

00:05:48,600 --> 00:05:53,990
portion control powers of a PV so for

00:05:51,630 --> 00:05:56,130
the control policy it remains to be our

00:05:53,990 --> 00:05:59,900
emulation image of the device in the

00:05:56,130 --> 00:06:02,520
commune but it is associated with our

00:05:59,900 --> 00:06:04,979
accelerator or a device in the back hand

00:06:02,520 --> 00:06:08,100
side on the database side that has the

00:06:04,979 --> 00:06:11,040
accelerator has the ability to access

00:06:08,100 --> 00:06:13,050
the ring access the V ring so you can

00:06:11,040 --> 00:06:15,229
essentially do the data pass pass

00:06:13,050 --> 00:06:17,850
through to the guest so on that time

00:06:15,229 --> 00:06:19,650
it's not a whole device pass rule but

00:06:17,850 --> 00:06:24,300
instead of it's it's our data path

00:06:19,650 --> 00:06:28,200
special so why we are trying to do this

00:06:24,300 --> 00:06:30,450
is that if we reveal reviewed and

00:06:28,200 --> 00:06:33,000
portrays in the PV and that they can

00:06:30,450 --> 00:06:35,580
device pass through if we assume that

00:06:33,000 --> 00:06:39,349
one virtual device always associated

00:06:35,580 --> 00:06:41,930
with one physical device that almost are

00:06:39,349 --> 00:06:45,780
items

00:06:41,930 --> 00:06:47,400
almost other things that we want from

00:06:45,780 --> 00:06:49,949
the device password actually is the

00:06:47,400 --> 00:06:52,710
performers it's not we are not so much

00:06:49,949 --> 00:06:56,940
care about what exactly the device

00:06:52,710 --> 00:06:59,460
configure what exactly device specific

00:06:56,940 --> 00:07:02,060
register it is but we care about their

00:06:59,460 --> 00:07:05,849
data past performance so that's the

00:07:02,060 --> 00:07:08,400
doctor definition for for the VDP a and

00:07:05,849 --> 00:07:11,639
so we also assume that you have our

00:07:08,400 --> 00:07:14,099
accelerator which has some minimal

00:07:11,639 --> 00:07:16,530
feature set which is you can you have

00:07:14,099 --> 00:07:19,080
the ability to include EQ the V ring and

00:07:16,530 --> 00:07:22,020
also recognize the veering format just

00:07:19,080 --> 00:07:25,050
to follow the motors back and people may

00:07:22,020 --> 00:07:28,289
ask so if you already have our a voice

00:07:25,050 --> 00:07:30,449
which avital io capable device why not

00:07:28,289 --> 00:07:31,979
just do the device pass-through and you

00:07:30,449 --> 00:07:34,259
you are trying to just are pass through

00:07:31,979 --> 00:07:36,509
the data pass here's some fact is that

00:07:34,259 --> 00:07:38,940
first what I is what I was just back

00:07:36,509 --> 00:07:44,940
it's quite good as growing's back it

00:07:38,940 --> 00:07:48,270
changes eating some steps and there it's

00:07:44,940 --> 00:07:50,400
also unlikely to force that individual

00:07:48,270 --> 00:07:54,090
hardware vendor to always follow our

00:07:50,400 --> 00:07:55,500
spec because if we compare their virtual

00:07:54,090 --> 00:07:57,240
function and the physical function

00:07:55,500 --> 00:08:00,719
physical function has more feature

00:07:57,240 --> 00:08:03,779
things and it has a lot of metadata

00:08:00,719 --> 00:08:06,300
which is not a vote your voter function

00:08:03,779 --> 00:08:08,729
need to carry about so that's the fact

00:08:06,300 --> 00:08:14,190
and also if you're doing device pass

00:08:08,729 --> 00:08:17,219
rule you can order other properties from

00:08:14,190 --> 00:08:20,580
inherits from their from their device

00:08:17,219 --> 00:08:24,539
pass rule so I I'm not going to mention

00:08:20,580 --> 00:08:27,180
a lot about the limitation on how under

00:08:24,539 --> 00:08:30,029
lamech migration and because we all know

00:08:27,180 --> 00:08:33,120
that and the one things I'd like to

00:08:30,029 --> 00:08:36,300
highlight is when we are trying to do

00:08:33,120 --> 00:08:38,820
these POCs that we found so from version

00:08:36,300 --> 00:08:42,120
to version but I owe under controversies

00:08:38,820 --> 00:08:44,250
a little slightly different so like 4.95

00:08:42,120 --> 00:08:46,529
actually you can't directly map device

00:08:44,250 --> 00:08:48,329
to the ghast is because it is the

00:08:46,529 --> 00:08:51,810
configure you're just access is poor

00:08:48,329 --> 00:08:54,810
tile-based so so you only can device

00:08:51,810 --> 00:08:57,810
passed you were like 1.0 and then we

00:08:54,810 --> 00:09:00,209
rethinking the things to use it

00:08:57,810 --> 00:09:02,339
that's so necessarily there a lot you

00:09:00,209 --> 00:09:04,560
need to pass the whole device why not

00:09:02,339 --> 00:09:06,779
just her pass through a set of the

00:09:04,560 --> 00:09:08,759
device like what are your care about you

00:09:06,779 --> 00:09:11,220
just care about data pass what is the

00:09:08,759 --> 00:09:13,079
data bus why we not defined data bus and

00:09:11,220 --> 00:09:16,800
just a password data pass and a keep

00:09:13,079 --> 00:09:19,769
order device configuration emulated okay

00:09:16,800 --> 00:09:22,769
and there also this one image for for

00:09:19,769 --> 00:09:25,529
device pass rule if we to number is that

00:09:22,769 --> 00:09:27,480
the beauty of what is the data you have

00:09:25,529 --> 00:09:29,490
a friendly and epic and so from the

00:09:27,480 --> 00:09:31,529
energy you can keep that unified

00:09:29,490 --> 00:09:33,899
interface but on the back end that you

00:09:31,529 --> 00:09:36,029
can have divorced that was choice like

00:09:33,899 --> 00:09:37,829
today that we have the we host not in

00:09:36,029 --> 00:09:40,079
the kernel and we also have the be

00:09:37,829 --> 00:09:42,240
hosted user in the user space so DVD

00:09:40,079 --> 00:09:45,600
case a lot of work is doing actually

00:09:42,240 --> 00:09:49,170
using the V host user channel so we

00:09:45,600 --> 00:09:52,889
don't want to lose that diverse and then

00:09:49,170 --> 00:09:55,439
the next was there we hope V DP design

00:09:52,889 --> 00:09:57,290
so here's a hell of a picture for for

00:09:55,439 --> 00:10:00,329
Belial pre-capture

00:09:57,290 --> 00:10:04,139
critical issue that we are we care about

00:10:00,329 --> 00:10:06,180
so first the control pass so the control

00:10:04,139 --> 00:10:08,069
parts that config space register and the

00:10:06,180 --> 00:10:10,439
device specific and register our chapter

00:10:08,069 --> 00:10:12,779
2 Q mu and Kimmy follow up with our

00:10:10,439 --> 00:10:16,230
emulation function core which goes

00:10:12,779 --> 00:10:18,629
through our V host or request and the V

00:10:16,230 --> 00:10:20,850
host request can using different channel

00:10:18,629 --> 00:10:24,930
like be host not our V host user and

00:10:20,850 --> 00:10:28,470
that is the - lining in green in green

00:10:24,930 --> 00:10:31,410
in the end what is the day pass first is

00:10:28,470 --> 00:10:34,500
that the V ring is located in host

00:10:31,410 --> 00:10:35,430
memory and there can be in q NT q either

00:10:34,500 --> 00:10:37,709
from HOSA

00:10:35,430 --> 00:10:43,759
from the castle or from the house side

00:10:37,709 --> 00:10:46,740
and this is like the DMA the interrupt

00:10:43,759 --> 00:10:49,139
notification is Camus injector

00:10:46,740 --> 00:10:52,079
interrupted to the cast and so we have

00:10:49,139 --> 00:10:55,800
to use the IR q FD to issue that that

00:10:52,079 --> 00:10:59,749
notification and the kick is go through

00:10:55,800 --> 00:11:03,889
that I have P so this is all the things

00:10:59,749 --> 00:11:03,889
data passes care about

00:11:05,390 --> 00:11:11,660
and then what's the change if we are

00:11:07,550 --> 00:11:14,330
going to to VDP a okay now we assume

00:11:11,660 --> 00:11:17,960
that there's a new device or device and

00:11:14,330 --> 00:11:20,680
comes but it's not as we say it's not

00:11:17,960 --> 00:11:23,690
necessarily to be our full function or

00:11:20,680 --> 00:11:25,460
voter iOS back to find the device that

00:11:23,690 --> 00:11:28,660
Justin needed you you have a device and

00:11:25,460 --> 00:11:31,730
you have some piece of logic that can

00:11:28,660 --> 00:11:33,560
have the virion capable that we call

00:11:31,730 --> 00:11:36,560
this acceleration accelerator veering

00:11:33,560 --> 00:11:38,390
capable accelerator here and there then

00:11:36,560 --> 00:11:41,660
first things we care about eight of us

00:11:38,390 --> 00:11:46,670
if we see data pass the back end in Q

00:11:41,660 --> 00:11:50,870
and D Q trans to be our DMA in Q and D Q

00:11:46,670 --> 00:11:53,360
like DMA right DMA real and then we can

00:11:50,870 --> 00:11:56,510
leverage iommu to do the address

00:11:53,360 --> 00:11:59,180
translation or not like what we we are

00:11:56,510 --> 00:12:02,570
doing today in CPU side and for

00:11:59,180 --> 00:12:04,610
interrupt interrupt we can do just the

00:12:02,570 --> 00:12:08,120
same like device pasture so associated

00:12:04,610 --> 00:12:11,270
with RV v FIO interrupt even the FD with

00:12:08,120 --> 00:12:13,880
the IR 50 so if you're lucky if you're

00:12:11,270 --> 00:12:15,710
lucky and there can get have their post

00:12:13,880 --> 00:12:18,740
interrupting your platform supported ER

00:12:15,710 --> 00:12:20,480
and also qualify for our to bypass then

00:12:18,740 --> 00:12:23,140
you can share benefits of the post in

00:12:20,480 --> 00:12:26,270
the world and you won't get too much

00:12:23,140 --> 00:12:28,850
will be exceeded by this one so it's

00:12:26,270 --> 00:12:31,550
almost the same as device puzzle then

00:12:28,850 --> 00:12:35,270
for the top out kick double kick is the

00:12:31,550 --> 00:12:38,180
thing is quite quite have two ways in

00:12:35,270 --> 00:12:40,790
their in their morale for older version

00:12:38,180 --> 00:12:43,400
point nine five that is a polio based so

00:12:40,790 --> 00:12:45,710
you always get BMX it and so you need a

00:12:43,400 --> 00:12:47,720
soft relay on their whole side to relate

00:12:45,710 --> 00:12:51,320
their topple and start to their

00:12:47,720 --> 00:12:53,960
accelerator device or if you have a new

00:12:51,320 --> 00:12:56,450
vote you have a new version supported in

00:12:53,960 --> 00:13:00,170
your cast that is lucky so you can get

00:12:56,450 --> 00:13:02,330
em mio directly mapped then any double

00:13:00,170 --> 00:13:04,520
kick in the gas in the gas that you are

00:13:02,330 --> 00:13:07,880
directly through the EPT and the to the

00:13:04,520 --> 00:13:09,890
hardware that is perfect then if we

00:13:07,880 --> 00:13:12,200
reviewed this picture we will see okay

00:13:09,890 --> 00:13:14,840
the new one introducing to the diagram

00:13:12,200 --> 00:13:17,270
is the device acceleration device so

00:13:14,840 --> 00:13:18,230
device need a device framework or driver

00:13:17,270 --> 00:13:19,070
where to put it

00:13:18,230 --> 00:13:22,130
driver

00:13:19,070 --> 00:13:26,540
this is a problem so further you a visa

00:13:22,130 --> 00:13:28,639
shooter okay it's quite it's quite ebay

00:13:26,540 --> 00:13:30,949
so you have you have our user space

00:13:28,639 --> 00:13:33,050
their eyes firmly like you can use TDK

00:13:30,949 --> 00:13:37,040
just again enough metadata then

00:13:33,050 --> 00:13:39,649
duplicate wilder v FY o VN program

00:13:37,040 --> 00:13:41,889
something a beer but you still need some

00:13:39,649 --> 00:13:45,470
q mere support for the metadata

00:13:41,889 --> 00:13:49,519
transaction for the we host not okay

00:13:45,470 --> 00:13:51,319
that is inside kernel so it isn't it is

00:13:49,519 --> 00:13:54,769
never associated with our driver

00:13:51,319 --> 00:13:58,850
directly instead of that it is talk with

00:13:54,769 --> 00:14:01,069
our either that but it's so how to make

00:13:58,850 --> 00:14:04,220
that happens in a kernel sign that also

00:14:01,069 --> 00:14:07,459
topically in my session and they're

00:14:04,220 --> 00:14:09,199
after their data paths that we back to

00:14:07,459 --> 00:14:11,060
the control past so database is quite

00:14:09,199 --> 00:14:13,399
either actually in your runtime and they

00:14:11,060 --> 00:14:14,600
are just a castle CPU and the device

00:14:13,399 --> 00:14:17,779
I'll talk each other

00:14:14,600 --> 00:14:20,540
but what Pinchot pass is you make a lot

00:14:17,779 --> 00:14:22,940
of things to provision how provision the

00:14:20,540 --> 00:14:25,519
context that data paths can happen so if

00:14:22,940 --> 00:14:29,540
we reviewed it the control policy that

00:14:25,519 --> 00:14:31,100
any device control access value chopped

00:14:29,540 --> 00:14:33,680
- Kim you and that you follow with our

00:14:31,100 --> 00:14:38,240
emulation core Wilder we host a request

00:14:33,680 --> 00:14:40,339
then we as we have a few back and a

00:14:38,240 --> 00:14:43,639
choice you have a back on the type so

00:14:40,339 --> 00:14:47,899
this core folder Colonel we host user

00:14:43,639 --> 00:14:50,149
for the user space and as we just are

00:14:47,899 --> 00:14:51,260
introduced in their data path side that

00:14:50,149 --> 00:14:54,170
we missed something

00:14:51,260 --> 00:14:56,750
inter in the front-end back-end to

00:14:54,170 --> 00:15:00,470
assert to to Casting key synchronize on

00:14:56,750 --> 00:15:02,209
the metadata so the design is what's the

00:15:00,470 --> 00:15:05,060
software piece we that the design we're

00:15:02,209 --> 00:15:07,310
touch is first is for the V host user we

00:15:05,060 --> 00:15:10,370
need to do some extension to get some

00:15:07,310 --> 00:15:13,220
necessary metadata the second one is on

00:15:10,370 --> 00:15:15,560
on kernel side how we support that and

00:15:13,220 --> 00:15:18,019
not change too much on the behold

00:15:15,560 --> 00:15:21,850
existing we host the net so we introduce

00:15:18,019 --> 00:15:25,699
a new channel so the new channel is to

00:15:21,850 --> 00:15:29,120
represent the for represented for V host

00:15:25,699 --> 00:15:31,579
a request so you build a new channel you

00:15:29,120 --> 00:15:32,540
can carry the V host request but that

00:15:31,579 --> 00:15:35,030
request is now

00:15:32,540 --> 00:15:37,090
carried by a function not carried by a

00:15:35,030 --> 00:15:41,870
justices core or like our sake

00:15:37,090 --> 00:15:44,600
message it is beaut the request the V

00:15:41,870 --> 00:15:48,680
host request is viewed based on our

00:15:44,600 --> 00:15:50,530
device layout but that device is not a

00:15:48,680 --> 00:15:53,180
real device but it's a software-defined

00:15:50,530 --> 00:15:59,390
device which leverage the media device

00:15:53,180 --> 00:16:01,880
framework then if we do this on the data

00:15:59,390 --> 00:16:04,370
path and can chip us then review what we

00:16:01,880 --> 00:16:06,800
need we actually try and tribute at

00:16:04,370 --> 00:16:10,820
their high performance once you

00:16:06,800 --> 00:16:14,150
peut-Ãªtre PV by device to get performers

00:16:10,820 --> 00:16:15,650
improvements but also have their lacks a

00:16:14,150 --> 00:16:19,640
feature support like lime lime addition

00:16:15,650 --> 00:16:21,320
so lamb reduction if we looking on door

00:16:19,640 --> 00:16:25,160
what happened on the back end of online

00:16:21,320 --> 00:16:28,070
migration so the action or trigger

00:16:25,160 --> 00:16:28,760
divider or triggered by the guest oh

00:16:28,070 --> 00:16:31,190
sorry

00:16:28,760 --> 00:16:33,590
or triggered by the be hosted request so

00:16:31,190 --> 00:16:36,590
different different packet and actually

00:16:33,590 --> 00:16:39,980
get the seams same sequential of the

00:16:36,590 --> 00:16:42,980
request and there we always all hardware

00:16:39,980 --> 00:16:45,560
its relative matter because you get the

00:16:42,980 --> 00:16:47,300
same sequential and there if you have a

00:16:45,560 --> 00:16:49,820
hardware at the end program hardware if

00:16:47,300 --> 00:16:53,450
not you just put two things in their

00:16:49,820 --> 00:16:55,940
software at the side then the division

00:16:53,450 --> 00:16:58,160
we are going to see is okay you now have

00:16:55,940 --> 00:17:01,790
a different nether or different back-end

00:16:58,160 --> 00:17:04,910
so what about so from the kernel back

00:17:01,790 --> 00:17:07,730
and upgrade to our user space dbgap is

00:17:04,910 --> 00:17:09,740
the background a back-end to promote and

00:17:07,730 --> 00:17:12,200
performers or if you have our

00:17:09,740 --> 00:17:12,980
extrarational x-rayed biron capable

00:17:12,200 --> 00:17:15,470
accelerator

00:17:12,980 --> 00:17:18,020
you can also transparently upgrade to

00:17:15,470 --> 00:17:20,900
our vir incapable accelerator

00:17:18,020 --> 00:17:23,810
so that's revision and there you know

00:17:20,900 --> 00:17:28,810
it's quite good to support that it's a

00:17:23,810 --> 00:17:34,340
not so much work here to invent here

00:17:28,810 --> 00:17:38,000
then how we in our proposal on the

00:17:34,340 --> 00:17:42,130
software side so we look at this problem

00:17:38,000 --> 00:17:44,810
in two pieces first is user space

00:17:42,130 --> 00:17:45,530
because we are we are the team working

00:17:44,810 --> 00:17:49,160
around

00:17:45,530 --> 00:17:51,740
okay right so for a new space what I

00:17:49,160 --> 00:17:53,570
mean we are missing if we are we are

00:17:51,740 --> 00:17:57,050
going to leverage this accelerator

00:17:53,570 --> 00:18:01,340
so for vhosts our user past actually we

00:17:57,050 --> 00:18:03,830
need are some matter later to be trying

00:18:01,340 --> 00:18:06,200
to transfer tutor Kim you the most

00:18:03,830 --> 00:18:09,770
important things is via VF I occupied a

00:18:06,200 --> 00:18:12,830
DVD K is a us-based driver so it takes

00:18:09,770 --> 00:18:15,590
either to igb either the UI o or REO

00:18:12,830 --> 00:18:16,610
file on their house on our whole side so

00:18:15,590 --> 00:18:19,040
it's a normal process

00:18:16,610 --> 00:18:23,210
so when typically initialize it we can

00:18:19,040 --> 00:18:25,910
program their iommu by outer v f io but

00:18:23,210 --> 00:18:28,520
we can do is that a society at the top a

00:18:25,910 --> 00:18:32,240
mapping the top top am top a mapping

00:18:28,520 --> 00:18:34,760
actually is our apt table setting so we

00:18:32,240 --> 00:18:37,520
need to leverage Kim you so the message

00:18:34,760 --> 00:18:38,390
we need to carry the metadata is that

00:18:37,520 --> 00:18:42,260
okay

00:18:38,390 --> 00:18:45,200
by the slave request we can give FD the

00:18:42,260 --> 00:18:48,860
VF i or group of t pass this one to the

00:18:45,200 --> 00:18:53,470
commune and then communities to get some

00:18:48,860 --> 00:18:57,440
reference count as updates and also

00:18:53,470 --> 00:19:01,850
using this with some other metadata

00:18:57,440 --> 00:19:05,630
which identified our memory slot for the

00:19:01,850 --> 00:19:06,250
double and allow community set up not oh

00:19:05,630 --> 00:19:09,950
well

00:19:06,250 --> 00:19:12,620
talk about mod in the next few slides so

00:19:09,950 --> 00:19:14,870
the external dependency is only the US

00:19:12,620 --> 00:19:17,180
race for a framework and DVD k is the

00:19:14,870 --> 00:19:22,010
one that you can average it as the user

00:19:17,180 --> 00:19:24,140
space for mock and then we said that a

00:19:22,010 --> 00:19:26,750
lot of things can do in the user space

00:19:24,140 --> 00:19:30,740
but you still need are good enough

00:19:26,750 --> 00:19:32,570
colonel pass direction then is a second

00:19:30,740 --> 00:19:35,480
pass for the cue for the kernel driver

00:19:32,570 --> 00:19:37,640
if you are trying to put that

00:19:35,480 --> 00:19:40,460
accelerator into gap and put it into

00:19:37,640 --> 00:19:42,620
that accelerator in the kernel what

00:19:40,460 --> 00:19:44,390
happens we don't want to introduce more

00:19:42,620 --> 00:19:47,480
driver in the community because that is

00:19:44,390 --> 00:19:49,250
not so reasonable to have a lot of

00:19:47,480 --> 00:19:54,080
different kind of driver in commune

00:19:49,250 --> 00:19:57,170
so here we larger media device with an

00:19:54,080 --> 00:19:58,910
acute side we define a new Nadab which

00:19:57,170 --> 00:20:01,460
as I mentioned is a new

00:19:58,910 --> 00:20:05,210
we host back-end wishes we host vfi all

00:20:01,460 --> 00:20:08,270
so introduced via file into V host or

00:20:05,210 --> 00:20:11,660
tree and then we reused is the existing

00:20:08,270 --> 00:20:14,960
via file communities and their weep you

00:20:11,660 --> 00:20:17,300
with define a soft we define our media

00:20:14,960 --> 00:20:20,360
device that media device is is not

00:20:17,300 --> 00:20:23,600
related to any what our stuffs so it

00:20:20,360 --> 00:20:26,480
also not related to an a new definition

00:20:23,600 --> 00:20:31,340
it's just our poster we host a request

00:20:26,480 --> 00:20:35,180
and they're just too serious it's on our

00:20:31,340 --> 00:20:37,790
device layout and they're under liar in

00:20:35,180 --> 00:20:40,820
the kernel not need and change for the

00:20:37,790 --> 00:20:43,670
kernel framework it just roll a bridge

00:20:40,820 --> 00:20:45,920
the existing framework and then you put

00:20:43,670 --> 00:20:48,890
a device driver and it registers on in

00:20:45,920 --> 00:20:52,910
dev and just er add the phone other apps

00:20:48,890 --> 00:20:56,750
to 2vf IO device ops dan care things

00:20:52,910 --> 00:20:59,270
that time and the external dependency

00:20:56,750 --> 00:21:03,050
for this mastery that today's I'm table

00:20:59,270 --> 00:21:05,690
is not not ready yet to support iommu

00:21:03,050 --> 00:21:09,860
because as we said we still need using

00:21:05,690 --> 00:21:12,890
the PCIe PDF to to their IO am you look

00:21:09,860 --> 00:21:15,050
up and also in a kernel dial you need a

00:21:12,890 --> 00:21:16,550
kernel driver of course you you now have

00:21:15,050 --> 00:21:20,390
a device you'd be of course and you need

00:21:16,550 --> 00:21:22,670
a driver but that driver the request for

00:21:20,390 --> 00:21:27,260
that driver is you just as the undef and

00:21:22,670 --> 00:21:31,430
there a we after we host requests are

00:21:27,260 --> 00:21:33,680
from the for is i then the next two

00:21:31,430 --> 00:21:37,970
pages i will go in a little bit detail

00:21:33,680 --> 00:21:40,700
for these two to master one for user

00:21:37,970 --> 00:21:43,100
space another for colonel okay first one

00:21:40,700 --> 00:21:44,750
is for user space we we are going to

00:21:43,100 --> 00:21:48,380
define new protocol feature where is

00:21:44,750 --> 00:21:51,620
called VF io and by this VF i/o in the

00:21:48,380 --> 00:21:55,340
leverage their slave request we were we

00:21:51,620 --> 00:21:57,470
were latter process the process to keep

00:21:55,340 --> 00:22:00,080
their via file ID and notify

00:21:57,470 --> 00:22:02,870
notification informed back to the kim

00:22:00,080 --> 00:22:04,790
you then and then have another simple

00:22:02,870 --> 00:22:07,880
action as gesture enable extra

00:22:04,790 --> 00:22:12,410
accelerator or disable accelerator then

00:22:07,880 --> 00:22:14,930
folder via file group FD that income you

00:22:12,410 --> 00:22:17,390
just do two things quite simple first is

00:22:14,930 --> 00:22:21,230
associated their a vfi or group of the

00:22:17,390 --> 00:22:23,630
with the kayvyun device FD and that the

00:22:21,230 --> 00:22:26,450
second note one is updated GSI routing

00:22:23,630 --> 00:22:28,460
but we need chapter ii 1 because we

00:22:26,450 --> 00:22:32,810
we're doing this just to make sure that

00:22:28,460 --> 00:22:36,200
the token used by irq posture can care

00:22:32,810 --> 00:22:39,350
ward well we were trying we are looking

00:22:36,200 --> 00:22:42,640
on why it not work if we not update

00:22:39,350 --> 00:22:46,880
update this one and the last piece is

00:22:42,640 --> 00:22:50,140
notification in for so with because only

00:22:46,880 --> 00:22:53,810
the driver know where is the table l so

00:22:50,140 --> 00:22:56,390
here's our limitation is the top mi we

00:22:53,810 --> 00:22:59,360
just need to be a page boundary so we

00:22:56,390 --> 00:23:00,950
can map the page to the cast so the

00:22:59,360 --> 00:23:03,440
things doing in communities that add a

00:23:00,950 --> 00:23:07,070
caster physical memory slot so a lot of

00:23:03,440 --> 00:23:10,460
customer guess for instance to kick that

00:23:07,070 --> 00:23:12,380
address and by looking up their EP d

00:23:10,460 --> 00:23:18,500
table to rhetorical mm I owe to the

00:23:12,380 --> 00:23:20,960
device further for the kernel side so

00:23:18,500 --> 00:23:22,930
here so that here's the one a new net

00:23:20,960 --> 00:23:26,120
Ave we are going to define certify our

00:23:22,930 --> 00:23:29,180
chart advice which is open to open our

00:23:26,120 --> 00:23:31,310
vfi device but here the and via for

00:23:29,180 --> 00:23:34,090
device is really your media device so

00:23:31,310 --> 00:23:37,730
you give us this this fire device device

00:23:34,090 --> 00:23:42,710
address then you can open that file and

00:23:37,730 --> 00:23:46,070
that that ID is being being assigned to

00:23:42,710 --> 00:23:48,650
on that and using that ID tributed in a

00:23:46,070 --> 00:23:53,120
tab and there hook up with a vote on

00:23:48,650 --> 00:23:56,270
that pci and there that we have the out

00:23:53,120 --> 00:23:57,110
device gesture represent for we host

00:23:56,270 --> 00:23:59,600
your request

00:23:57,110 --> 00:24:03,010
it's just our device layout based or a

00:23:59,600 --> 00:24:06,170
channel for the be hosted transport and

00:24:03,010 --> 00:24:08,300
there you know - Musa you need to

00:24:06,170 --> 00:24:10,820
concern constructor some contacts for

00:24:08,300 --> 00:24:14,150
the datapath accelerator like you need

00:24:10,820 --> 00:24:18,080
to map the remember region for DMA you

00:24:14,150 --> 00:24:20,540
need to set the number slot for Dobell

00:24:18,080 --> 00:24:23,480
you need to associate it with the VF i/o

00:24:20,540 --> 00:24:24,280
events that you even have tea with our

00:24:23,480 --> 00:24:26,800
QFT

00:24:24,280 --> 00:24:30,550
to make sure to interrupt correctly

00:24:26,800 --> 00:24:32,560
configured for that one mentioned that

00:24:30,550 --> 00:24:34,840
that device that media device is not

00:24:32,560 --> 00:24:37,780
expected to be used by other user space

00:24:34,840 --> 00:24:41,290
application is just define being used by

00:24:37,780 --> 00:24:43,240
Kumu yeah relevant dependency is a

00:24:41,290 --> 00:24:45,640
summation the media device and also

00:24:43,240 --> 00:24:48,490
media device need to support iommu and

00:24:45,640 --> 00:24:50,830
that the viewing capable device is a

00:24:48,490 --> 00:24:54,460
driver that we just I something that but

00:24:50,830 --> 00:24:57,490
that like a single to mode because 1vf

00:24:54,460 --> 00:25:00,880
can only register one immediate device

00:24:57,490 --> 00:25:03,160
here in summary so if we review the goal

00:25:00,880 --> 00:25:05,110
we are going to achieve is that okay

00:25:03,160 --> 00:25:06,970
well mention about how to make a

00:25:05,110 --> 00:25:09,190
hypervisor or native i/o being

00:25:06,970 --> 00:25:11,860
accelerated being accelerated by our

00:25:09,190 --> 00:25:14,830
device we are talking about what I own

00:25:11,860 --> 00:25:17,440
at PCI and it's going to transparently

00:25:14,830 --> 00:25:19,210
support the stock VN and there is

00:25:17,440 --> 00:25:23,320
totally no aware in the further inside

00:25:19,210 --> 00:25:25,390
and there under why it can't get better

00:25:23,320 --> 00:25:28,000
performance is that it just like device

00:25:25,390 --> 00:25:29,950
pasture but and instead of it it's a

00:25:28,000 --> 00:25:31,690
tale about special and it's some lab

00:25:29,950 --> 00:25:33,430
marriage and friendly infrastructure at

00:25:31,690 --> 00:25:36,430
the year just it depends on how you

00:25:33,430 --> 00:25:38,380
design you your accelerator and that in

00:25:36,430 --> 00:25:41,620
the last I'd like to highlight is that

00:25:38,380 --> 00:25:44,440
we are not just saying this kind of like

00:25:41,620 --> 00:25:46,420
master is only for what I all so we are

00:25:44,440 --> 00:25:49,600
thinking about it that being a general

00:25:46,420 --> 00:25:53,710
way to boost the PV device by some

00:25:49,600 --> 00:25:56,110
accelerator so the team is rethinking

00:25:53,710 --> 00:25:57,910
the IO VT and trying to break through

00:25:56,110 --> 00:25:59,740
some boundary in order to make a better

00:25:57,910 --> 00:26:02,800
performance so that what appliance in a

00:25:59,740 --> 00:26:06,100
VM running much faster and a future work

00:26:02,800 --> 00:26:07,750
visual work we are it's now the stage to

00:26:06,100 --> 00:26:10,450
collect feedback we haven't sent out

00:26:07,750 --> 00:26:12,910
obviously patch yet so we are going to

00:26:10,450 --> 00:26:14,910
send it first in the DB T KB and the

00:26:12,910 --> 00:26:18,940
patches go to accumulate the last one is

00:26:14,910 --> 00:26:21,550
been to the kernel and beside that we

00:26:18,940 --> 00:26:24,250
are also continuing working on enable

00:26:21,550 --> 00:26:25,930
some yhv device interface just like

00:26:24,250 --> 00:26:28,810
you're not necessary have the

00:26:25,930 --> 00:26:31,840
acceleration and really is a Revere

00:26:28,810 --> 00:26:34,690
incapable but for any ocean and for your

00:26:31,840 --> 00:26:36,110
physical host your face and do some like

00:26:34,690 --> 00:26:39,290
lightweight at zero copy

00:26:36,110 --> 00:26:42,620
translation there you can also talk it

00:26:39,290 --> 00:26:44,450
for the same say same goal yeah

00:26:42,620 --> 00:26:48,580
as I said there's our teamwork a lot of

00:26:44,450 --> 00:26:50,990
people are involved yeah

00:26:48,580 --> 00:26:55,670
yes my talk is stopped here and there

00:26:50,990 --> 00:27:24,799
then leave the time for door to a any

00:26:55,670 --> 00:27:27,520
questions for single guests yeah but

00:27:24,799 --> 00:27:30,770
what I'm mu we haven't considered yet

00:27:27,520 --> 00:27:32,840
because of that now we can on the house

00:27:30,770 --> 00:27:34,010
side we are real device so just to get

00:27:32,840 --> 00:27:36,919
real

00:27:34,010 --> 00:27:41,929
I'm am you include picture not put a

00:27:36,919 --> 00:27:51,919
vote on me yet yeah

00:27:41,929 --> 00:27:55,730
any any other questions oh okay if no

00:27:51,919 --> 00:27:57,320
other actions yes is so much for my talk

00:27:55,730 --> 00:28:01,180
yeah thank you

00:27:57,320 --> 00:28:07,469
[Applause]

00:28:01,180 --> 00:28:07,469

YouTube URL: https://www.youtube.com/watch?v=v50-rXGMr-Y


