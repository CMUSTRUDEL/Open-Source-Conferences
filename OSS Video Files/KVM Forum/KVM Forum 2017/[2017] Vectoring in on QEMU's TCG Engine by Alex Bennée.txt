Title: [2017] Vectoring in on QEMU's TCG Engine by Alex Bennée
Publication date: 2017-11-23
Playlist: KVM Forum 2017
Description: 
	Vector processing has existed since the 60s and lives on in modern CPUs as SIMD instructions. They are the main driver of performance for computationally intensive workloads such as multimedia and simulation. Vector registers have grown from MMX's 64 bit to 512 bit wide vectors today. ARM's Scalable Vector Extensions (SVE) take this growth to its logical conclusion and make the size of the registers an implementation detail while allowing binaries to run on any SVE capable processor.

We need to consider the impact of vectors on the TCG. Currently time is spent marshalling vector data to normal registers before calling helper functions. We will discuss the path to supporting vectors as first-class TCG citizens and also cover the other challenges in correctly modelling behaviour and ask if we can move beyond helper functions and generate efficient JIT code in a generic way.

---

Alex Bennée
Linaro
Senior Software Engineer
United Kingdom

Alex is a senior software engineer working in Linaro's Virtualization team.
An experienced FLOSS developer with over 20 years of experience in embedded and systems programming he currently spends most of his time on QEMU's TCG based emulation. The first piece of assembly he wrote was for the 6809 in his Dragon 32 followed by excessive pixel flinging on the 68000 before x86 took over the world.
YouTube URL: https://www.youtube.com/watch?v=IYHTwnde0g8


