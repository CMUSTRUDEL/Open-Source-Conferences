Title: [2017] virtio-crypto: A New Framework of Cryptography Virtio Device by Lei Gong & Xin Zeng
Publication date: 2017-11-21
Playlist: KVM Forum 2017
Description: 
	Tranditional teloc equipments use lots of hardware accelerators, how to leverage these accelerators becomes important in Network Function Virtualization(NFV). We are trying to implement a software solution based on KVM, to offload specific processing like encryption/decryption, media transcoding etc, this prestation will introduce an para-virtualization scheme of hardware accelerator, including introducing virtio frontend driver and backend device, making use of Linux kernel cryptography framework in the relization of virtio crypto frontend driver. I will present the advantages and current status of virtio crypto device, show the performance figure which compared to plain-soft scheme etc.

---

Lei Gong
Huawei

1. Qemu contributor and maintainer for bootdevice and virtio crypto 
2. Working on virtualization department at HUAWEI TECHNOLOGINES CO.,LTD - Senior Engineer - Participate in development for multiple commercial version of UVP, the virtualization Platform of HUAWEI. 
3. Speaking experience - China Linux Kernel Developer Conference 2014, the topic is "How to Realize Isolate deployment for VM on NFV Scenario" - LinuxCon Japan 2015 and KVM Forum 2015, "COLO: COarse-grain LOck-stepping Virtual Machines for Non-stop Service"

Xin Zeng
Intel

Xin Zeng is a senior software engineer of Network Platform Group at Intel Data Center Group. He is now working on virtualization projects including SRIOV and virtio for IntelÂ® QuickAssist Technology product. 
Xin Zeng is a contributor for Linux Kernel and QEMU, he is a member of OASIS Virtual I/O device (VIRTIO) technical committee and actively acting as a contributor for a new virtio crypto device spec proposal.
Captions: 
	00:00:00,390 --> 00:00:02,709
[Music]

00:00:06,440 --> 00:00:12,990
hi everyone I'm from Hawaii

00:00:09,900 --> 00:00:16,440
yeah I'm seen from Intel today's session

00:00:12,990 --> 00:00:18,960
is a joint presentation from us we would

00:00:16,440 --> 00:00:23,939
like to introduce some knowledge to a

00:00:18,960 --> 00:00:27,810
video capture device to you okay this is

00:00:23,939 --> 00:00:29,609
a gender first firstly we will give you

00:00:27,810 --> 00:00:32,040
an overview of what you hope to achieve

00:00:29,609 --> 00:00:34,110
a high spec and then we were also

00:00:32,040 --> 00:00:36,920
introduced with crypto device

00:00:34,110 --> 00:00:40,410
specification and implementation as well

00:00:36,920 --> 00:00:42,270
finally we will we will come to work and

00:00:40,410 --> 00:00:47,460
the future play of betrayal crippled

00:00:42,270 --> 00:00:50,690
device as we all know cryptography is

00:00:47,460 --> 00:00:53,699
used widely in different fields such as

00:00:50,690 --> 00:00:58,199
wireless communication data center and

00:00:53,699 --> 00:01:01,680
enterprise systems etc it's our compute

00:00:58,199 --> 00:01:06,479
intensive tasks which consume a lot of

00:01:01,680 --> 00:01:09,810
CPU cycles for so hard will accelerators

00:01:06,479 --> 00:01:13,049
which support as how we offered it

00:01:09,810 --> 00:01:15,570
it has good performance but we we also

00:01:13,049 --> 00:01:19,110
know there are some limitations for

00:01:15,570 --> 00:01:22,080
example it has limited vfvf resources

00:01:19,110 --> 00:01:24,090
and we need different VF driver for

00:01:22,080 --> 00:01:27,060
different device across different

00:01:24,090 --> 00:01:32,759
vendors and it's very hard for line

00:01:27,060 --> 00:01:35,939
regulation right so that's why we choose

00:01:32,759 --> 00:01:40,040
what your crypto device it is called

00:01:35,939 --> 00:01:45,240
friendly device and it provides a device

00:01:40,040 --> 00:01:48,299
agnostic interface for GSM driver it's

00:01:45,240 --> 00:01:51,270
also like my version currently besides

00:01:48,299 --> 00:01:57,750
LED it also has a good scalability and

00:01:51,270 --> 00:02:00,270
low cost in software so we have talked

00:01:57,750 --> 00:02:02,490
about a lot of benefits from what you

00:02:00,270 --> 00:02:05,729
have crypto device so what about you

00:02:02,490 --> 00:02:08,340
without crippled device it's heard but

00:02:05,729 --> 00:02:10,950
you cryptography device which provide a

00:02:08,340 --> 00:02:12,160
unified operation interface for

00:02:10,950 --> 00:02:15,360
different

00:02:12,160 --> 00:02:18,640
four different cryptography operations

00:02:15,360 --> 00:02:23,220
and there are many contributors from

00:02:18,640 --> 00:02:30,060
different companies such as Intel Huawei

00:02:23,220 --> 00:02:30,060
SUSE redhead IBM researcher in community

00:02:30,090 --> 00:02:37,540
okay let's see the specification of what

00:02:33,310 --> 00:02:40,840
her crypto device the device ID is hello

00:02:37,540 --> 00:02:44,020
x10 54 and it's what her crypto device

00:02:40,840 --> 00:02:47,890
has specific therapies and a specific

00:02:44,020 --> 00:02:51,400
configuration for the specific official

00:02:47,890 --> 00:02:54,820
base is used to support multiplexing

00:02:51,400 --> 00:02:58,570
mode for symmetry service and the

00:02:54,820 --> 00:03:03,460
specific configuration is it included

00:02:58,570 --> 00:03:06,690
the number of max maximum queues and the

00:03:03,460 --> 00:03:10,420
details crypto algorithm max copies and

00:03:06,690 --> 00:03:14,650
some other mix Miska fields such as the

00:03:10,420 --> 00:03:17,670
maxim Killen supported the what help

00:03:14,650 --> 00:03:22,840
crypto device has one can choke you for

00:03:17,670 --> 00:03:25,630
session or can you request and it has

00:03:22,840 --> 00:03:29,920
one or more data queues for service

00:03:25,630 --> 00:03:33,880
requests currently the crypto device

00:03:29,920 --> 00:03:37,090
defined it to hand of two kinds of

00:03:33,880 --> 00:03:41,500
crypto services the symmetric and

00:03:37,090 --> 00:03:44,260
asthmaticus services okay this is the

00:03:41,500 --> 00:03:47,800
what with queue design it has one can to

00:03:44,260 --> 00:03:50,890
kill the concho so can you kill is used

00:03:47,800 --> 00:03:54,250
for session management for symmetric

00:03:50,890 --> 00:03:58,420
service and it facilitate control

00:03:54,250 --> 00:04:01,950
operations for device in the data queue

00:03:58,420 --> 00:04:07,390
are used to choose transfer

00:04:01,950 --> 00:04:10,360
correcto service requests this is a

00:04:07,390 --> 00:04:13,300
request of Kentucky it consists of two

00:04:10,360 --> 00:04:16,510
parts to the general murder and the

00:04:13,300 --> 00:04:19,150
service specific views such as the fixed

00:04:16,510 --> 00:04:21,870
resides in session mode and the what

00:04:19,150 --> 00:04:25,660
wearable sizing multiplexing mode

00:04:21,870 --> 00:04:29,670
next I will introduce in the session

00:04:25,660 --> 00:04:33,190
mode and multiple legacy mode as well

00:04:29,670 --> 00:04:35,920
okay the request of data key is most

00:04:33,190 --> 00:04:38,380
similar with the control cube we can see

00:04:35,920 --> 00:04:41,380
that and the different is the general

00:04:38,380 --> 00:04:47,560
harder the structure is different from

00:04:41,380 --> 00:04:49,920
the Kentucky okay this is detailed

00:04:47,560 --> 00:04:53,350
information of a specific configuration

00:04:49,920 --> 00:04:59,140
we can say from the structure there are

00:04:53,350 --> 00:05:01,810
several fields to support it the father

00:04:59,140 --> 00:05:05,140
would help the device I'd like to see

00:05:01,810 --> 00:05:08,230
the status is used to show whether the

00:05:05,140 --> 00:05:12,070
device is ready to work or not and the

00:05:08,230 --> 00:05:14,500
crypto services is used to his person as

00:05:12,070 --> 00:05:18,040
a producer is supported by the device

00:05:14,500 --> 00:05:22,930
and that it detailed occur is a mask

00:05:18,040 --> 00:05:26,040
face it used to show the supported

00:05:22,930 --> 00:05:30,730
operation by the device and some other

00:05:26,040 --> 00:05:39,130
shoes just like maths cyber pylons and

00:05:30,730 --> 00:05:41,470
mask mask also oscillated Killens okay

00:05:39,130 --> 00:05:45,310
let's see this magic crypto service it

00:05:41,470 --> 00:05:48,660
has two walking mode the session mode

00:05:45,310 --> 00:05:51,730
and the multiplex mode actually I

00:05:48,660 --> 00:05:54,280
mentioned it before as well the session

00:05:51,730 --> 00:05:59,020
mode is efficient for those numerous

00:05:54,280 --> 00:06:03,700
requests with some contests for example

00:05:59,020 --> 00:06:08,680
the types of operation jerky initiated

00:06:03,700 --> 00:06:11,290
Wachter and the killer's etc the

00:06:08,680 --> 00:06:14,670
multiplex mode is used to support

00:06:11,290 --> 00:06:18,580
stateless mode as well as session mode

00:06:14,670 --> 00:06:22,900
the status mode is proposed to consider

00:06:18,580 --> 00:06:25,810
to reduce cost of session creation for

00:06:22,900 --> 00:06:30,160
those one shorter requests which is

00:06:25,810 --> 00:06:32,520
controlled by visibles currently they

00:06:30,160 --> 00:06:39,209
are for can

00:06:32,520 --> 00:06:44,349
crypto service are supported cipher has

00:06:39,209 --> 00:06:47,439
Mack and AED for cyber and aad in the

00:06:44,349 --> 00:06:52,749
encryption and decryption operations are

00:06:47,439 --> 00:06:56,649
supported for this as much criminal

00:06:52,749 --> 00:06:58,959
service there are no session concept and

00:06:56,649 --> 00:07:02,860
the all requests are can weigh the in

00:06:58,959 --> 00:07:05,860
data q currently defined 8 service

00:07:02,860 --> 00:07:08,909
operations included signature and the

00:07:05,860 --> 00:07:14,949
verification encryption and decryption

00:07:08,909 --> 00:07:18,309
key generation and key exchange okay as

00:07:14,949 --> 00:07:21,789
Leigh has mentioned before the session

00:07:18,309 --> 00:07:25,479
is introduced for symmetric crypto

00:07:21,789 --> 00:07:29,009
service only in current specification so

00:07:25,479 --> 00:07:32,769
the session benefits to those numerous

00:07:29,009 --> 00:07:38,919
crypto operation requests with the same

00:07:32,769 --> 00:07:42,309
context the special operations is the

00:07:38,919 --> 00:07:44,319
only traffic in Kentucky in current

00:07:42,309 --> 00:07:47,529
specification let's see a bit more

00:07:44,319 --> 00:07:51,369
detail how a session is created and

00:07:47,529 --> 00:07:55,809
destroyed from this diagram okay let's

00:07:51,369 --> 00:08:00,959
see a request in the left right the

00:07:55,809 --> 00:08:00,959
quest we our initial initial aids or

00:08:02,759 --> 00:08:09,459
resource allocator before it sent the

00:08:07,509 --> 00:08:12,759
encryption or decryption request to

00:08:09,459 --> 00:08:15,309
achieve the solid driver while some

00:08:12,759 --> 00:08:18,639
interface this interface could be for

00:08:15,309 --> 00:08:21,490
example a set key interface in Linux

00:08:18,639 --> 00:08:25,029
kernel crypt for teamwork and the driver

00:08:21,490 --> 00:08:27,719
has chocolate will request the searching

00:08:25,029 --> 00:08:32,229
creation request and put it into

00:08:27,719 --> 00:08:36,130
Kentucky oh and also finally it will

00:08:32,229 --> 00:08:39,939
also click ctrl Q to notify the device

00:08:36,130 --> 00:08:43,229
and at the inlet device side the device

00:08:39,939 --> 00:08:45,350
a once the device get the notification

00:08:43,229 --> 00:08:52,180
from the driver

00:08:45,350 --> 00:08:56,720
it will get it will okay it were a

00:08:52,180 --> 00:08:59,450
parcel I'll request and tried to create

00:08:56,720 --> 00:09:04,430
a session context in the device and also

00:08:59,450 --> 00:09:06,830
he returned the result field England in

00:09:04,430 --> 00:09:11,030
the corresponding field in the request

00:09:06,830 --> 00:09:14,690
packet and update the used ruin to

00:09:11,030 --> 00:09:18,860
notify the device to notify the driver

00:09:14,690 --> 00:09:21,770
and the driver get a response and a

00:09:18,860 --> 00:09:24,800
fuller result is is successful and it

00:09:21,770 --> 00:09:28,660
will record the session ID that's all

00:09:24,800 --> 00:09:31,760
for assessment creation after the

00:09:28,660 --> 00:09:34,970
session is created and all subsequent

00:09:31,760 --> 00:09:37,940
quick crypto operations can use this

00:09:34,970 --> 00:09:43,040
session ID for for encryption or

00:09:37,940 --> 00:09:46,760
decryption such as this kind of crypto

00:09:43,040 --> 00:09:49,010
operations and when the cupola

00:09:46,760 --> 00:09:52,010
application completes all that requests

00:09:49,010 --> 00:09:55,700
you try to initial AIDS or resource

00:09:52,010 --> 00:09:59,600
cleanup request to load driver and at

00:09:55,700 --> 00:10:03,380
least point the driver will construct

00:09:59,600 --> 00:10:07,340
the scientist joy request and put it

00:10:03,380 --> 00:10:11,690
into lurk in Tokyo also he will note

00:10:07,340 --> 00:10:14,150
killer can you cure to notify the device

00:10:11,690 --> 00:10:18,680
and a packing device in a device ID it

00:10:14,150 --> 00:10:23,510
also has the same handle flow as such in

00:10:18,680 --> 00:10:26,470
creation okay as Leigh also mentioned

00:10:23,510 --> 00:10:29,780
before the session is not always needed

00:10:26,470 --> 00:10:35,120
when multiplexing mode is negotiated

00:10:29,780 --> 00:10:37,880
between the device and a driver the last

00:10:35,120 --> 00:10:42,850
session can be also in captured into the

00:10:37,880 --> 00:10:46,790
data pool and central device directory

00:10:42,850 --> 00:10:53,210
okay so so we will have a look at the

00:10:46,790 --> 00:10:56,870
data request in the in the next night so

00:10:53,210 --> 00:10:58,760
in this slide I will introduce service

00:10:56,870 --> 00:11:02,960
operations for for

00:10:58,760 --> 00:11:06,350
request this is the main traffic in

00:11:02,960 --> 00:11:09,070
Little Tokyo okay in the left side

00:11:06,350 --> 00:11:12,800
luckiest crypto application in a guest

00:11:09,070 --> 00:11:17,300
initialize some crypto operations such

00:11:12,800 --> 00:11:22,640
as encryption decryption in Linux kernel

00:11:17,300 --> 00:11:25,430
crib framework and the device were in in

00:11:22,640 --> 00:11:31,310
capture were in capture this information

00:11:25,430 --> 00:11:35,380
and construct a request encryption or

00:11:31,310 --> 00:11:39,680
decryption request to send it to the

00:11:35,380 --> 00:11:43,190
device also it will kick the device to

00:11:39,680 --> 00:11:46,970
notify the device there is some verbal

00:11:43,190 --> 00:11:50,930
descriptors a web request I think yeah a

00:11:46,970 --> 00:11:54,470
linear device side it will pass all the

00:11:50,930 --> 00:11:56,390
parameters from data view and if social

00:11:54,470 --> 00:12:00,940
mode is negotiated between the device

00:11:56,390 --> 00:12:04,360
and the driver the such an ID should be

00:12:00,940 --> 00:12:09,230
expected from the request packet as well

00:12:04,360 --> 00:12:12,020
the device were useless list such ID to

00:12:09,230 --> 00:12:17,260
find a context inside the device and

00:12:12,020 --> 00:12:20,360
invoke the backend back end to to

00:12:17,260 --> 00:12:23,030
execute the real crypto application or

00:12:20,360 --> 00:12:26,030
crypto operations finally we also have

00:12:23,030 --> 00:12:29,570
to update the result and also update to

00:12:26,030 --> 00:12:33,830
the your screen and notify from end

00:12:29,570 --> 00:12:37,360
driver but but we can also also we also

00:12:33,830 --> 00:12:42,620
noted the kick and notify is not as

00:12:37,360 --> 00:12:45,320
required in all in all case it I think

00:12:42,620 --> 00:12:48,100
it depends on the implementation for

00:12:45,320 --> 00:12:50,930
example for for our we host user

00:12:48,100 --> 00:12:53,510
implementation in the host the kick is

00:12:50,930 --> 00:12:58,540
not necessary the device can also pole

00:12:53,510 --> 00:12:58,540
can you cue to get all the requests

00:13:00,410 --> 00:13:07,220
maybe the sequence diagram is too small

00:13:04,490 --> 00:13:09,980
sorry about that okay let's see the

00:13:07,220 --> 00:13:15,680
software implementation about it what

00:13:09,980 --> 00:13:19,580
how brittle solution in guest the what

00:13:15,680 --> 00:13:26,330
how crypto genre can be stored in the

00:13:19,580 --> 00:13:32,300
links kernel space names Smith sorry in

00:13:26,330 --> 00:13:35,750
the Linux kernel or you can also use the

00:13:32,300 --> 00:13:39,080
user space more the drummer for the nice

00:13:35,750 --> 00:13:41,560
huh no space drama the travel can be

00:13:39,080 --> 00:13:46,060
dragged into the Linux kernel credit

00:13:41,560 --> 00:13:51,040
crypto framework the Linux kernel

00:13:46,060 --> 00:13:55,100
crypto framework through export a set of

00:13:51,040 --> 00:14:00,020
crypto operations for both symmetric and

00:13:55,100 --> 00:14:03,200
asymmetric algorithms but the uses space

00:14:00,020 --> 00:14:08,950
juror is sinking the power of the

00:14:03,200 --> 00:14:15,430
performance in the host side we need to

00:14:08,950 --> 00:14:15,430
realize the device implementation

00:14:15,460 --> 00:14:23,630
basically it's it includes what held

00:14:19,760 --> 00:14:27,340
device emulation and it's crypto device

00:14:23,630 --> 00:14:30,580
back-end the Crippler device back end

00:14:27,340 --> 00:14:30,580
also sorry

00:14:34,380 --> 00:14:42,150
decrepitude twice back end can be

00:14:36,990 --> 00:14:45,150
realized in two different trials such as

00:14:42,150 --> 00:14:49,650
the beauty in back end or we host the

00:14:45,150 --> 00:14:53,750
back end and as the we host the back end

00:14:49,650 --> 00:14:58,100
the server can be implemented in the

00:14:53,750 --> 00:15:01,370
kernel space and the user space as well

00:14:58,100 --> 00:15:07,760
next I will show the detail about the

00:15:01,370 --> 00:15:11,760
crypto device back end this is the

00:15:07,760 --> 00:15:16,740
device back end in the Kumu is an user

00:15:11,760 --> 00:15:20,070
create Ville object and is a child of

00:15:16,740 --> 00:15:22,320
you at the topic you objector it is

00:15:20,070 --> 00:15:25,770
easily to be realized with different

00:15:22,320 --> 00:15:31,710
each other objects we can also from the

00:15:25,770 --> 00:15:37,160
key code in a light side the crypto TV

00:15:31,710 --> 00:15:37,160
back back end is the abstract interface

00:15:38,330 --> 00:15:46,290
this is a built-in back end it is a

00:15:41,130 --> 00:15:52,640
child of Krakatau to us back end which

00:15:46,290 --> 00:15:57,660
is make use of the crypto API is inhuman

00:15:52,640 --> 00:16:00,990
under the crypto sub system there are

00:15:57,660 --> 00:16:07,740
four implementations in crypto subsystem

00:16:00,990 --> 00:16:13,050
currently as the FF LG Java and the

00:16:07,740 --> 00:16:18,150
crippled subsystem as example the

00:16:13,050 --> 00:16:20,990
holidays contribute in the travel in the

00:16:18,150 --> 00:16:20,990
kuma community

00:16:22,010 --> 00:16:29,000
this is a we host a back end

00:16:25,130 --> 00:16:32,370
it's another child of crypto TV back end

00:16:29,000 --> 00:16:33,360
they are two kind of implementations

00:16:32,370 --> 00:16:35,730
counter

00:16:33,360 --> 00:16:39,450
so we host the kernel client and they

00:16:35,730 --> 00:16:43,440
will host we use a client so we host a

00:16:39,450 --> 00:16:51,270
user can Island can be integrated in

00:16:43,440 --> 00:16:51,990
db/decade ODP or Libre we host the

00:16:51,270 --> 00:16:54,690
example code

00:16:51,990 --> 00:17:00,570
can we come on the lies you here you can

00:16:54,690 --> 00:17:04,860
refer to it if you'd like to try by the

00:17:00,570 --> 00:17:10,140
way we are working on the we host to use

00:17:04,860 --> 00:17:13,740
a back-end in based on db/decade general

00:17:10,140 --> 00:17:20,640
we hosted a harder and it will be

00:17:13,740 --> 00:17:23,939
obvious dreamed in future ok so I'd like

00:17:20,640 --> 00:17:27,270
to reveal our looking States and future

00:17:23,939 --> 00:17:29,610
planes as you can see we have marked all

00:17:27,270 --> 00:17:32,850
items in different colors and you can

00:17:29,610 --> 00:17:38,520
see different colors represent different

00:17:32,850 --> 00:17:42,600
status for each item you know bottom of

00:17:38,520 --> 00:17:46,290
this list page make sure if illness in

00:17:42,600 --> 00:17:49,350
spec side we have pushed out what you

00:17:46,290 --> 00:17:51,300
have kryptos specification which support

00:17:49,350 --> 00:17:54,360
a symmetric service and a symmetric

00:17:51,300 --> 00:17:58,200
service is still under review we would

00:17:54,360 --> 00:18:01,770
like to support more service for example

00:17:58,200 --> 00:18:06,450
a primitive service as well as well

00:18:01,770 --> 00:18:08,780
yello-ha side with the qumu what you

00:18:06,450 --> 00:18:12,480
have crypto device implementation and

00:18:08,780 --> 00:18:14,540
beauty in back end for symmetric service

00:18:12,480 --> 00:18:20,490
support has been accepted in Camus

00:18:14,540 --> 00:18:23,280
community and the crypto device we host

00:18:20,490 --> 00:18:27,290
use a back-end client is also under

00:18:23,280 --> 00:18:30,780
review in cube community and follow a

00:18:27,290 --> 00:18:33,929
couple dev butene crippled elf back-end

00:18:30,780 --> 00:18:36,299
for two for a symmetric service of

00:18:33,929 --> 00:18:40,740
we are still working on that and also

00:18:36,299 --> 00:18:43,259
just like the lady mentioned we are

00:18:40,740 --> 00:18:46,110
still working on the Windows user for

00:18:43,259 --> 00:18:50,070
crypt for portable device in db/decade

00:18:46,110 --> 00:18:53,730
so in a gift side actually the virtual

00:18:50,070 --> 00:18:58,379
cubular device from an Java is accepted

00:18:53,730 --> 00:19:00,059
by Linux community it now only supports

00:18:58,379 --> 00:19:02,970
symmetric service and we are still

00:19:00,059 --> 00:19:06,179
working on a symmetric support in Linux

00:19:02,970 --> 00:19:09,779
kernel space driver and we are also

00:19:06,179 --> 00:19:14,309
working on the diptych user space

00:19:09,779 --> 00:19:17,700
polymer java in DB d here as well in in

00:19:14,309 --> 00:19:20,429
the last item where it's playing we will

00:19:17,700 --> 00:19:26,639
also try to support more algorithms and

00:19:20,429 --> 00:19:29,639
multi data Q or lateral equation ok at

00:19:26,639 --> 00:19:32,070
the summary so what how crypted solution

00:19:29,639 --> 00:19:35,220
is a viable solution for cloud and what

00:19:32,070 --> 00:19:38,009
your crypto device has been pushed to

00:19:35,220 --> 00:19:41,070
the battle committee and current defined

00:19:38,009 --> 00:19:44,450
service include symmetric crypto service

00:19:41,070 --> 00:19:47,929
a symmetric crypto service and we have

00:19:44,450 --> 00:19:51,480
completely fundamental implementation

00:19:47,929 --> 00:19:53,490
English committee you can find the

00:19:51,480 --> 00:19:57,690
reference code in Linux kernel in

00:19:53,490 --> 00:20:01,730
kkumeul or or maybe in duplicate in

00:19:57,690 --> 00:20:04,649
future we are still working on some

00:20:01,730 --> 00:20:08,340
service support for example asymmetric

00:20:04,649 --> 00:20:13,379
crypto service support and algorithms ok

00:20:08,340 --> 00:20:14,850
so if you have more questions if you if

00:20:13,379 --> 00:20:17,549
you need to get more information about

00:20:14,850 --> 00:20:20,610
what your crypto or tip dko

00:20:17,549 --> 00:20:23,279
interactivity please visit this link to

00:20:20,610 --> 00:20:26,340
get more information so welcome more

00:20:23,279 --> 00:20:29,730
contributions to what our device

00:20:26,340 --> 00:20:32,929
so this is our sharing this afternoon

00:20:29,730 --> 00:20:32,929
thank you any questions

00:20:34,330 --> 00:20:39,680
we talked about more algorithm

00:20:37,040 --> 00:20:42,800
frictional algorithm what about our

00:20:39,680 --> 00:20:44,530
energy yeah Angie we try to adjust

00:20:42,800 --> 00:20:47,210
nation we would like to support

00:20:44,530 --> 00:20:51,640
primitive service this would be in

00:20:47,210 --> 00:20:51,640
cooler anti-diva a service I think

00:20:56,260 --> 00:21:18,950
keeping the guest secrets secret yeah

00:21:17,300 --> 00:21:23,030
the guests can get it the those

00:21:18,950 --> 00:21:25,780
information I mean the Kumi or the host

00:21:23,030 --> 00:21:25,780
can be

00:21:51,210 --> 00:21:56,320
yeah this is software it's not hot I

00:21:53,980 --> 00:22:04,170
don't have direct access to the Holland

00:21:56,320 --> 00:22:04,170
right my my keys my secrets are

00:22:04,290 --> 00:22:12,960
questions from you yes what objective oh

00:22:09,880 --> 00:22:16,390
I think listen listen related to another

00:22:12,960 --> 00:22:18,790
technology way actually you know team we

00:22:16,390 --> 00:22:19,150
have a such kind of technology we call

00:22:18,790 --> 00:22:23,020
it

00:22:19,150 --> 00:22:24,850
KPT key protection technology okay but

00:22:23,020 --> 00:22:27,720
this is not related to what do I owe

00:22:24,850 --> 00:22:27,720
crypto I think

00:22:36,670 --> 00:22:46,450
yeah actually for for KBT list list

00:22:40,120 --> 00:22:50,410
device can save six secret key as you

00:22:46,450 --> 00:22:53,530
know if we all have more interesting for

00:22:50,410 --> 00:22:55,750
Cutie at you I can I can talk to you

00:22:53,530 --> 00:23:10,090
offline and probably send you some some

00:22:55,750 --> 00:23:11,980
information for this for this feature so

00:23:10,090 --> 00:23:15,610
from the part that is actually merged

00:23:11,980 --> 00:23:17,710
this movie instance capability of the

00:23:15,610 --> 00:23:20,980
retail driver you have multiple instance

00:23:17,710 --> 00:23:28,300
it's actually already merged you me

00:23:20,980 --> 00:23:32,740
lamlam Geraldine's yes it's already

00:23:28,300 --> 00:23:36,190
merged you mean match in Kumi oh and

00:23:32,740 --> 00:23:38,560
form under yes I seen here yeah yeah

00:23:36,190 --> 00:23:40,510
okay you can get a reference code in

00:23:38,560 --> 00:23:42,580
queue and Linux kernel it's fine oh

00:23:40,510 --> 00:23:44,850
there's cases which would like to use

00:23:42,580 --> 00:23:48,040
multiple instances like indication have

00:23:44,850 --> 00:23:49,960
one retail driver which provides

00:23:48,040 --> 00:23:51,880
multiple businesses in movie ends and

00:23:49,960 --> 00:23:56,550
then you have because you can you can

00:23:51,880 --> 00:23:56,550
you can assign multi virtual device to

00:24:01,680 --> 00:24:04,959
[Music]

00:24:18,370 --> 00:24:26,000
okay yeah some of you so much yeah

00:24:22,190 --> 00:24:31,869
[Applause]

00:24:26,000 --> 00:24:31,869

YouTube URL: https://www.youtube.com/watch?v=9SYHRYcNa_w


