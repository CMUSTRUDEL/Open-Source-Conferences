Title: [2019] Virtualized Fibre-channel - Some Years Later by Hannes Reinecke
Publication date: 2019-11-09
Playlist: KVM Forum 2019
Description: 
	During the KVMForum in Prague Paolo and me have presented the challenges in implementing virtualized fibrechannel for qemu. However, after some initial submission the entire topic didn't receive much traction.
So here I will be presenting a way on how to efficiently map fibrechannel devices onto virtio-scsi by just updating the mapping information and not modifying the actual data layout.
Thus I've preserved backwards compability with existing implementations and allowed new installations to take advantage of the new implementation.

---

Hannes Reinecke
SUSE Linux GmbH
Teamlead Storage & Networking

Studied Physics with main focus image processing in Heidelberg from 1990 until 1997, followed by a PhD in Edinburgh 's Heriot-Watt
University in 2000. Worked as sysadmin during the studies, mainly in the Mathematical Institute in Heidelberg. Now working at SUSE Labs
as Teamlead for storage and networking. Principal contact point for storage related issues on SLES.

Linux addict since the earliest days (0.95); various patches to get Linux up and running. Main points of interest are storage, (i)SCSI, FC, NVMe, and multipathing. And S/390, naturally.

I'm active on the Linux NVMe and SCSI mailing list, reviewing patches and dusting out murky corners in the SCSI stack.
Plus occasionally maintaining the FCoE stack.

Note: We apologize for lower video quality due to technical problems.
Captions: 
	00:00:00,390 --> 00:00:12,540
[Music]

00:00:09,019 --> 00:00:16,139
I'm Hamas Anna's radical and today's

00:00:12,540 --> 00:00:18,330
talk is about virtual private channel it

00:00:16,139 --> 00:00:20,910
says two years later because I had a

00:00:18,330 --> 00:00:24,150
similar talk two years ago in Prague at

00:00:20,910 --> 00:00:26,820
the KVM forum and so this is basically

00:00:24,150 --> 00:00:32,610
is slide a presentation what happened

00:00:26,820 --> 00:00:35,430
happened afterwards so where does

00:00:32,610 --> 00:00:39,559
started so we had Paul and me had a

00:00:35,430 --> 00:00:43,350
presentation in product two years ago

00:00:39,559 --> 00:00:45,660
when we where we discussed how we could

00:00:43,350 --> 00:00:47,670
virtualized fiber channel or to be

00:00:45,660 --> 00:00:54,629
precise how we could efficiently

00:00:47,670 --> 00:00:58,320
virtualize fibers an NP IV for this we

00:00:54,629 --> 00:01:02,160
came up with three possible options the

00:00:58,320 --> 00:01:04,710
one is loon base meaning a device based

00:01:02,160 --> 00:01:08,130
and can be passed through the other

00:01:04,710 --> 00:01:11,100
would would be to use media mediated

00:01:08,130 --> 00:01:17,369
device or the media mediated device

00:01:11,100 --> 00:01:19,920
framework to to delegate pass through to

00:01:17,369 --> 00:01:21,960
that and the third option obvious what

00:01:19,920 --> 00:01:25,229
you would go full-throttle and implement

00:01:21,960 --> 00:01:30,750
implement fibre channel handling in v

00:01:25,229 --> 00:01:33,119
host so there were quite a few acronyms

00:01:30,750 --> 00:01:34,680
and he lays in there and also quite some

00:01:33,119 --> 00:01:37,380
concepts but I'm not quite sure whether

00:01:34,680 --> 00:01:40,200
anybody everybody here is very familiar

00:01:37,380 --> 00:01:45,119
with so I thought right do it nice do a

00:01:40,200 --> 00:01:47,100
short recap so I mean five channel might

00:01:45,119 --> 00:01:49,470
you might or might not have heard that

00:01:47,100 --> 00:01:52,200
specially scuzzy transport this is the

00:01:49,470 --> 00:01:54,299
at this time the most commonly used the

00:01:52,200 --> 00:01:56,520
transport protocol for storage Ray's all

00:01:54,299 --> 00:02:00,729
for larger storage installations in

00:01:56,520 --> 00:02:06,500
general so this is being

00:02:00,729 --> 00:02:08,450
nowadays on the wall there there is now

00:02:06,500 --> 00:02:10,490
a new protocol on the horizon that's

00:02:08,450 --> 00:02:12,200
nvme or rather and in your fabrics which

00:02:10,490 --> 00:02:15,440
you might avert to so and this is

00:02:12,200 --> 00:02:19,100
basically predecessor on all still

00:02:15,440 --> 00:02:20,630
the most commonly used ones so to make

00:02:19,100 --> 00:02:22,760
this work there are something things

00:02:20,630 --> 00:02:26,180
called fiber turn HBAs for hospice

00:02:22,760 --> 00:02:28,580
adopters which essentially are just your

00:02:26,180 --> 00:02:31,340
PCI cards which you plug into the server

00:02:28,580 --> 00:02:34,510
which then connect via the actual fibre

00:02:31,340 --> 00:02:37,160
channel to this torturer in the back and

00:02:34,510 --> 00:02:39,019
the whole infrastructure in between

00:02:37,160 --> 00:02:41,450
meaning between the function HPA and the

00:02:39,019 --> 00:02:45,430
Sodra is called a Sun or story and area

00:02:41,450 --> 00:02:48,470
network if you do this these devices

00:02:45,430 --> 00:02:51,380
will be sure it will show up like and

00:02:48,470 --> 00:02:53,410
just like Norma's cos devices so this is

00:02:51,380 --> 00:02:56,209
here now is a very short all of you how

00:02:53,410 --> 00:02:58,069
things do look from the Linux point of

00:02:56,209 --> 00:03:00,019
view so we have the fabrics on HBAs and

00:02:58,069 --> 00:03:02,569
the fiber chin report which is the

00:03:00,019 --> 00:03:04,549
physical port connected to the Sun then

00:03:02,569 --> 00:03:06,620
there's the HP HP a driver which

00:03:04,549 --> 00:03:11,150
typically is a PCI device or a driver

00:03:06,620 --> 00:03:13,040
for PCI device and this then generates

00:03:11,150 --> 00:03:16,310
an internal structure called Stasi host

00:03:13,040 --> 00:03:18,860
which then again provides all the scows

00:03:16,310 --> 00:03:21,850
device like here outline like SDA and

00:03:18,860 --> 00:03:25,730
STP good that was easy

00:03:21,850 --> 00:03:28,959
but this has the problem that you need

00:03:25,730 --> 00:03:32,239
to identify the fiber train report and

00:03:28,959 --> 00:03:35,150
because it is actually network that's

00:03:32,239 --> 00:03:36,410
why it's called storage area network so

00:03:35,150 --> 00:03:38,630
within the network you need to identify

00:03:36,410 --> 00:03:41,570
the individual ports to do this there's

00:03:38,630 --> 00:03:47,090
a thing called WWN or worldwide port

00:03:41,570 --> 00:03:51,410
name and its partner w double n n for

00:03:47,090 --> 00:03:53,840
worldwide node number so these can be

00:03:51,410 --> 00:03:57,109
thought of essentially like matter MAC

00:03:53,840 --> 00:04:01,269
addresses on the network world and they

00:03:57,109 --> 00:04:03,560
are typically programmed into the HBA

00:04:01,269 --> 00:04:06,290
because while you need an unique

00:04:03,560 --> 00:04:08,920
identification because it could be

00:04:06,290 --> 00:04:11,720
global your entire network so actually

00:04:08,920 --> 00:04:13,310
required to be worldwide unique that's

00:04:11,720 --> 00:04:16,430
the WWE front

00:04:13,310 --> 00:04:18,889
and to guarantee that they are indeed

00:04:16,430 --> 00:04:20,989
unique they're programmed into the HPA

00:04:18,889 --> 00:04:25,940
so that they can dish or rather he will

00:04:20,989 --> 00:04:32,300
go wrong there which is okay but in the

00:04:25,940 --> 00:04:35,450
end so and these port numbers are used

00:04:32,300 --> 00:04:38,300
on the storage array site to do a to

00:04:35,450 --> 00:04:41,540
create ACLs so that the stores right can

00:04:38,300 --> 00:04:43,600
identify which device are want to talk

00:04:41,540 --> 00:04:47,000
to the array and then can associate

00:04:43,600 --> 00:04:49,430
devices or volumes with that device so

00:04:47,000 --> 00:04:54,560
they and the idea here is that each port

00:04:49,430 --> 00:04:57,229
number represents a machine and so this

00:04:54,560 --> 00:04:58,820
machine can access only those volumes

00:04:57,229 --> 00:05:04,310
which are meant for this particular

00:04:58,820 --> 00:05:05,660
machine again sounds quite nice and

00:05:04,310 --> 00:05:08,690
sounds quite reasonable and that's what

00:05:05,660 --> 00:05:11,630
you want to do but then you want to

00:05:08,690 --> 00:05:14,330
install a virtual guest on your machine

00:05:11,630 --> 00:05:18,770
and this is where the whole thing become

00:05:14,330 --> 00:05:21,169
iffy because suddenly the port number

00:05:18,770 --> 00:05:22,220
you have doesn't actually represent the

00:05:21,169 --> 00:05:26,390
machine anymore

00:05:22,220 --> 00:05:29,419
but rather the host within which that

00:05:26,390 --> 00:05:31,220
virtual machine is being carried in so

00:05:29,419 --> 00:05:33,890
what you really want is to have an

00:05:31,220 --> 00:05:36,260
identification for the virtual machine

00:05:33,890 --> 00:05:39,080
to so that the storage array in the back

00:05:36,260 --> 00:05:43,630
can do can set up proper ACLs and can do

00:05:39,080 --> 00:05:47,830
the volume Association and to do that

00:05:43,630 --> 00:05:50,870
they have created in the fiber channel

00:05:47,830 --> 00:05:53,389
specification a method where you could

00:05:50,870 --> 00:05:56,510
assign virtual port numbers that's the

00:05:53,389 --> 00:06:00,590
so called import ID virtualization or

00:05:56,510 --> 00:06:03,650
short NP ID which allows you precise

00:06:00,590 --> 00:06:06,889
that so you can set our Petrelli port

00:06:03,650 --> 00:06:09,740
numbers to on top of a giving it give

00:06:06,889 --> 00:06:11,900
them scuzzy host and then these numbers

00:06:09,740 --> 00:06:13,970
these port numbers will be visible on

00:06:11,900 --> 00:06:17,030
the Sun and you can do the surgery I can

00:06:13,970 --> 00:06:19,900
do ACLs and loon associations and

00:06:17,030 --> 00:06:19,900
everything is nice and dandy

00:06:20,320 --> 00:06:29,000
so and here's now the same schematic

00:06:27,020 --> 00:06:33,680
than I had previously so now we still

00:06:29,000 --> 00:06:37,910
again have the financial report and the

00:06:33,680 --> 00:06:40,460
NPI vport again visible on the Sun the

00:06:37,910 --> 00:06:43,400
HB a driver which does does the handling

00:06:40,460 --> 00:06:46,820
the scuzzy host and then the NP IV

00:06:43,400 --> 00:06:50,570
device shows up as an additional scuzzy

00:06:46,820 --> 00:06:53,840
host beside the original one why is that

00:06:50,570 --> 00:06:58,490
important well the point here is the HP

00:06:53,840 --> 00:07:00,740
a driver is the same this will not

00:06:58,490 --> 00:07:03,470
duplicate it so we only will have born

00:07:00,740 --> 00:07:07,940
HP a drive and one instance of the HP a

00:07:03,470 --> 00:07:11,570
driver and as this HP a driver is that

00:07:07,940 --> 00:07:14,420
one for the PCI device we can't really

00:07:11,570 --> 00:07:16,070
do tricks like vfi oh here because that

00:07:14,420 --> 00:07:18,440
would mean that we would have well

00:07:16,070 --> 00:07:21,020
several VFL instances running on the

00:07:18,440 --> 00:07:24,500
same PCI device which I have been told

00:07:21,020 --> 00:07:27,800
is not possible or not easily possible

00:07:24,500 --> 00:07:30,320
and even if you wanted to do so you

00:07:27,800 --> 00:07:32,450
still would not modify the driver so

00:07:30,320 --> 00:07:35,000
that it can handle multiple VF Iowan

00:07:32,450 --> 00:07:36,890
stands so it is not very easy and

00:07:35,000 --> 00:07:44,840
actually not something which can easily

00:07:36,890 --> 00:07:49,220
done so what do we do I had been looking

00:07:44,840 --> 00:07:51,620
at the first option of the ferries how

00:07:49,220 --> 00:07:52,810
we could do a device based and PID

00:07:51,620 --> 00:07:55,970
pass-through

00:07:52,810 --> 00:07:58,460
so the general idea is to all you know

00:07:55,970 --> 00:08:01,730
the KISS principle keep it small and

00:07:58,460 --> 00:08:03,980
simple we already have photos got nice

00:08:01,730 --> 00:08:05,780
cosy and this transpose discusses CDP's

00:08:03,980 --> 00:08:11,320
and works perfect so blah blah so we

00:08:05,780 --> 00:08:14,030
suggest you just use it but to make to

00:08:11,320 --> 00:08:17,200
tell the guests that we are running on

00:08:14,030 --> 00:08:20,210
fibre channel we actually might want to

00:08:17,200 --> 00:08:20,750
expose the fiber channel structure to

00:08:20,210 --> 00:08:23,030
the guest

00:08:20,750 --> 00:08:24,500
so that gets guest seized ah I'm

00:08:23,030 --> 00:08:26,270
actually now on fibre channel and this

00:08:24,500 --> 00:08:29,950
is my port number because the guest

00:08:26,270 --> 00:08:32,960
might be needing it I mean eating it and

00:08:29,950 --> 00:08:33,260
we bought a might want to actually see

00:08:32,960 --> 00:08:37,390
the

00:08:33,260 --> 00:08:39,680
physical in numbers on the guests too so

00:08:37,390 --> 00:08:41,120
using vertov's Kazi as a trunk as a

00:08:39,680 --> 00:08:43,250
protocol that is quite easy I mean

00:08:41,120 --> 00:08:46,220
everyone knows virtual scuzzy jalapao

00:08:43,250 --> 00:08:49,730
and this just transport normal scuzzy

00:08:46,220 --> 00:08:51,410
CDP's over via tail this is tree nice

00:08:49,730 --> 00:08:53,140
trail generic but doesn't have any

00:08:51,410 --> 00:08:58,610
transports to this specific information

00:08:53,140 --> 00:09:01,580
so we simply have no way how we could

00:08:58,610 --> 00:09:07,490
transport the port names and note names

00:09:01,580 --> 00:09:09,200
over Verta all yet so but if we want to

00:09:07,490 --> 00:09:11,330
expose the fibrin structure to the guess

00:09:09,200 --> 00:09:12,950
we need precisely this so we need the

00:09:11,330 --> 00:09:17,080
port number we need the node number so

00:09:12,950 --> 00:09:17,080
that we can expose the structure and

00:09:17,410 --> 00:09:24,470
typically you would need the full-blown

00:09:21,530 --> 00:09:27,970
stack with the fiber channel handling

00:09:24,470 --> 00:09:31,370
port handling blocking scanning whatnot

00:09:27,970 --> 00:09:33,050
but hyper-v had the similar problem that

00:09:31,370 --> 00:09:34,910
they don't really have an actual fiber

00:09:33,050 --> 00:09:37,310
channel but still want to make it look

00:09:34,910 --> 00:09:39,290
like a fiber channel so they had a very

00:09:37,310 --> 00:09:41,360
very lightweight simple transport class

00:09:39,290 --> 00:09:42,940
which just required them to pass in the

00:09:41,360 --> 00:09:45,350
port names and then they would see the

00:09:42,940 --> 00:09:46,730
at the fibre channel structure and I

00:09:45,350 --> 00:09:49,910
said hey that's a good idea let's use

00:09:46,730 --> 00:09:55,430
the two for Verdejo so we could just use

00:09:49,910 --> 00:09:58,430
that and tweak vertices gauzy to return

00:09:55,430 --> 00:10:00,800
us the port numbers because that really

00:09:58,430 --> 00:10:05,300
that's all what you need and to do that

00:10:00,800 --> 00:10:08,710
I've implemented every scan protocol so

00:10:05,300 --> 00:10:14,380
that years point simple instead of

00:10:08,710 --> 00:10:18,980
having vertigo itself identifying the

00:10:14,380 --> 00:10:21,050
devices we have a protocol a sequential

00:10:18,980 --> 00:10:23,900
protocol allowing the host or the

00:10:21,050 --> 00:10:26,540
emulation to enumerate the devices so I

00:10:23,900 --> 00:10:28,490
just send a request down that's the

00:10:26,540 --> 00:10:31,730
request structure the recent request

00:10:28,490 --> 00:10:33,380
structure get me your first target get a

00:10:31,730 --> 00:10:34,730
reply okay here's the target here the

00:10:33,380 --> 00:10:37,490
port numbers so this is what you see

00:10:34,730 --> 00:10:39,590
there so you get a reply with ID which

00:10:37,490 --> 00:10:44,270
is the number the target number and then

00:10:39,590 --> 00:10:46,800
the port and note number and so you just

00:10:44,270 --> 00:10:49,080
issued a command setting the

00:10:46,800 --> 00:10:50,850
next I do 2-1 meaning radically give me

00:10:49,080 --> 00:10:54,240
the first one then you get a number back

00:10:50,850 --> 00:10:56,209
and then you just we should the command

00:10:54,240 --> 00:10:58,080
with that returned number plus one

00:10:56,209 --> 00:11:00,180
indicated rather want to see the next

00:10:58,080 --> 00:11:02,100
target if it has the next tired you get

00:11:00,180 --> 00:11:04,470
the next target with the set number and

00:11:02,100 --> 00:11:06,120
if not you get minus or minus one back

00:11:04,470 --> 00:11:08,790
to telling your radical no next target

00:11:06,120 --> 00:11:10,709
it's great so which is quite simple and

00:11:08,790 --> 00:11:14,279
as you can see it dead simple protocol

00:11:10,709 --> 00:11:16,500
and with that if you have your port

00:11:14,279 --> 00:11:17,790
numbers and you can export to post

00:11:16,500 --> 00:11:23,610
number a port numbers and you can see

00:11:17,790 --> 00:11:27,149
the port numbers in the gas so if you

00:11:23,610 --> 00:11:29,910
have paid attention closely I said

00:11:27,149 --> 00:11:31,920
something about normally scuzzy would be

00:11:29,910 --> 00:11:35,850
a diverter scuzzy would enumerate the

00:11:31,920 --> 00:11:38,040
devices itself and ask the host to do

00:11:35,850 --> 00:11:41,339
and indicate to the host which device I

00:11:38,040 --> 00:11:43,160
want to talk to so how is that well this

00:11:41,339 --> 00:11:45,750
is because virtus can see has a

00:11:43,160 --> 00:11:51,000
particular format how the long numbers

00:11:45,750 --> 00:11:53,070
are supposed to be laid out so for

00:11:51,000 --> 00:11:55,430
whatever scuzzy it's actually using this

00:11:53,070 --> 00:11:59,160
a so called hierarchical loon format

00:11:55,430 --> 00:12:02,370
where the first you see that that's

00:11:59,160 --> 00:12:05,430
where it says boss identifier indicates

00:12:02,370 --> 00:12:07,560
on which boss to look and the second one

00:12:05,430 --> 00:12:11,070
where it says target alone indicates

00:12:07,560 --> 00:12:12,959
which loan number on that boss so the

00:12:11,070 --> 00:12:16,020
loan number being passed down is

00:12:12,959 --> 00:12:18,149
actually in index into the qdf a

00:12:16,020 --> 00:12:19,649
structure which device to look for or

00:12:18,149 --> 00:12:24,600
which device this command is being

00:12:19,649 --> 00:12:26,310
targeted for which is okay but it also

00:12:24,600 --> 00:12:28,310
means you have to use that structure

00:12:26,310 --> 00:12:31,140
otherwise Vertigo won't find any devices

00:12:28,310 --> 00:12:32,550
which is a bit annoying because the non

00:12:31,140 --> 00:12:34,410
number is also something which is

00:12:32,550 --> 00:12:37,170
actually property on the emulator target

00:12:34,410 --> 00:12:39,649
so we can't use the lunder can't see the

00:12:37,170 --> 00:12:43,560
loan numbers from the actual target

00:12:39,649 --> 00:12:45,720
which is to it a bit annoying to say the

00:12:43,560 --> 00:12:47,399
least plus if we have a the rescan

00:12:45,720 --> 00:12:52,339
mechanist we don't actually need those

00:12:47,399 --> 00:12:52,339
things the first two numbers anymore so

00:12:53,160 --> 00:12:57,779
and the other problem is that there's a

00:12:55,769 --> 00:12:59,430
problem called rapid loon in report

00:12:57,779 --> 00:13:01,709
loons telling you which loons are

00:12:59,430 --> 00:13:05,519
present which typically is a command you

00:13:01,709 --> 00:13:06,899
sent down to the target but as you have

00:13:05,519 --> 00:13:09,240
an emulator format you can't send it

00:13:06,899 --> 00:13:10,680
down or the results you getting back

00:13:09,240 --> 00:13:13,199
won't match with whatever you need to

00:13:10,680 --> 00:13:17,399
send which also is a bit more than bit

00:13:13,199 --> 00:13:21,629
annoying so what I did is to update the

00:13:17,399 --> 00:13:24,810
scuzzy or the vertical own format seeing

00:13:21,629 --> 00:13:26,879
that we are only using ever the first

00:13:24,810 --> 00:13:29,970
byte there for the first two bytes of

00:13:26,879 --> 00:13:32,550
the structure so there are some bytes

00:13:29,970 --> 00:13:36,060
left which we could use so what we can

00:13:32,550 --> 00:13:39,870
do we can shift the origin loon behind

00:13:36,060 --> 00:13:42,560
the vertical saloon with that we're

00:13:39,870 --> 00:13:44,699
having the first three long levels and

00:13:42,560 --> 00:13:46,350
the fourth because actually there are

00:13:44,699 --> 00:13:49,350
fourth levels you can have the fourth

00:13:46,350 --> 00:13:51,060
level well will be left out which do you

00:13:49,350 --> 00:13:53,160
think mmm that's not so good what what

00:13:51,060 --> 00:13:54,810
we do with the fourth level and the

00:13:53,160 --> 00:14:01,339
answer to that was quite simple

00:13:54,810 --> 00:14:04,470
ignore it because there is no

00:14:01,339 --> 00:14:06,389
implementation using the fourth level

00:14:04,470 --> 00:14:08,149
you do get implementation using the

00:14:06,389 --> 00:14:10,860
first and the second level

00:14:08,149 --> 00:14:12,689
rumors have a net AB is now using the

00:14:10,860 --> 00:14:14,370
third one but that's about it no one is

00:14:12,689 --> 00:14:16,790
using the fourth level so it's a sensor

00:14:14,370 --> 00:14:20,759
seer and as such we don't need to use it

00:14:16,790 --> 00:14:26,880
so and with that data

00:14:20,759 --> 00:14:30,139
everything works however we would might

00:14:26,880 --> 00:14:32,670
want to update the vertices back

00:14:30,139 --> 00:14:40,110
indicating there might be something

00:14:32,670 --> 00:14:42,120
behind the original donor number do we

00:14:40,110 --> 00:14:45,000
need to update it properly or chemi just

00:14:42,120 --> 00:14:47,430
have a patch and if we need to update

00:14:45,000 --> 00:14:49,529
the vertex casas back what do i need to

00:14:47,430 --> 00:14:56,759
do to do it which would be more a

00:14:49,529 --> 00:14:58,709
question - over there so but anyway this

00:14:56,759 --> 00:15:00,720
whole thing works the patches I have

00:14:58,709 --> 00:15:04,079
sent to the mailing list actually one

00:15:00,720 --> 00:15:05,390
and a half years ago and since then they

00:15:04,079 --> 00:15:07,550
are literally lingering there

00:15:05,390 --> 00:15:08,870
I will be resending them I've just

00:15:07,550 --> 00:15:10,490
revamped it to the latest version it

00:15:08,870 --> 00:15:13,490
will be recent income later today or on

00:15:10,490 --> 00:15:16,220
the weekend and then people can start

00:15:13,490 --> 00:15:19,279
looking at and bitching about it but

00:15:16,220 --> 00:15:21,230
with that on that happy note I'm done so

00:15:19,279 --> 00:15:23,260
thank you for listening and I'm open to

00:15:21,230 --> 00:15:23,260
questions

00:15:29,370 --> 00:15:34,790
okay thank you very much thank you and

00:15:31,980 --> 00:15:34,790
enjoy the conference

00:15:34,950 --> 00:15:42,200

YouTube URL: https://www.youtube.com/watch?v=SqQkMUx51qU


