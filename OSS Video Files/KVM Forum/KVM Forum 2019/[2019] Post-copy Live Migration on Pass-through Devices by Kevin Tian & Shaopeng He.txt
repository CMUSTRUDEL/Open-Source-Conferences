Title: [2019] Post-copy Live Migration on Pass-through Devices by Kevin Tian & Shaopeng He
Publication date: 2019-11-12
Playlist: KVM Forum 2019
Description: 
	As we all know, post-copy can greatly reduce live migration down time for devices with memory intensive usages. While it is possible on emulated devices, live migration with post-copy technology on pass-through devices is still not supported. In this session, Yan will explain detailed benefits and show you a generic solution in VFIO on how to migrate pass-through devices with post-copy technology and Shaopeng will expose performance statistics of using post-copy on migrating SRIOV VFs on Intel NIC.

---

Kevin Tian
Intel
Principal Engineer

Kevin is a virtualization veteran from Intel with 16 years experience in open source virtualization projects (KVM, Xen, etc.), including multiple presentations in associated conferences. He is currently a software architect in Open source Technology Center of Intel, with current focus on x86 virtualization and I/O virtualization

Shaopeng He
Intel
Senior Network Software Engineer

Shaopeng is a Senior Network Software Engineer from Intel. He focuses on Network Interface Controller and I/O virtualization. Prior to Intel, he worked in cloud and network industry for over 10 years.

Note: We apologize for lower video quality due to technical problems.
Captions: 
	00:00:00,390 --> 00:00:02,750
[Music]

00:00:06,740 --> 00:00:17,100
however so so netstat haven't even team

00:00:14,490 --> 00:00:19,170
from intel corporation today I and my

00:00:17,100 --> 00:00:22,289
colleague hossam will introduce the

00:00:19,170 --> 00:00:24,510
postal code I'm a question password

00:00:22,289 --> 00:00:25,980
device however first introduced the high

00:00:24,510 --> 00:00:27,980
level design and thus often will

00:00:25,980 --> 00:00:30,599
introduce the NIC specific

00:00:27,980 --> 00:00:31,920
implementation had also the performance

00:00:30,599 --> 00:00:34,530
data

00:00:31,920 --> 00:00:36,210
most of the data here actually was done

00:00:34,530 --> 00:00:38,820
by my colleague saw him punished she

00:00:36,210 --> 00:00:45,239
cannot make for this conference so I

00:00:38,820 --> 00:00:47,190
were present for her soul iMac which I

00:00:45,239 --> 00:00:49,590
think most people are familiar right

00:00:47,190 --> 00:00:51,750
basically just lively Mike with the

00:00:49,590 --> 00:00:55,110
women state between the server loads

00:00:51,750 --> 00:00:57,449
including the CPU state memory state and

00:00:55,110 --> 00:01:00,899
a device state also including the VM

00:00:57,449 --> 00:01:03,059
configuration info today I think in

00:01:00,899 --> 00:01:06,450
cloud or data centers this has become

00:01:03,059 --> 00:01:08,700
the cornerstone capability right either

00:01:06,450 --> 00:01:10,979
due to the low dependency requirement to

00:01:08,700 --> 00:01:13,619
meet the servers service level

00:01:10,979 --> 00:01:16,680
agreements or due to infrastructure

00:01:13,619 --> 00:01:18,810
maintenance requirements my machine is a

00:01:16,680 --> 00:01:26,310
basica capability to meet those

00:01:18,810 --> 00:01:28,860
requirements we talk about my Mac which

00:01:26,310 --> 00:01:31,400
I think most of you know that memory

00:01:28,860 --> 00:01:34,470
state occupies the most of the time

00:01:31,400 --> 00:01:38,150
today we have a to approach one is the

00:01:34,470 --> 00:01:41,250
pre copy the other is the postcode Union

00:01:38,150 --> 00:01:44,040
so let me talk about a pre copy

00:01:41,250 --> 00:01:46,649
it's just means net we will copy the

00:01:44,040 --> 00:01:49,950
case memory when case the uses you're

00:01:46,649 --> 00:01:53,310
running the first the entire case memory

00:01:49,950 --> 00:01:55,829
will be copied once to the target

00:01:53,310 --> 00:01:59,219
machine as in the hypervisor really

00:01:55,829 --> 00:02:02,520
Territory copied a 32-page e to the

00:01:59,219 --> 00:02:05,909
target when the remaining the repeat

00:02:02,520 --> 00:02:10,800
reach threshold or when he had time out

00:02:05,909 --> 00:02:12,740
the free copy face is completed as in

00:02:10,800 --> 00:02:15,440
the women is stopped and

00:02:12,740 --> 00:02:18,740
machine the city of state diverse state

00:02:15,440 --> 00:02:21,350
had remaining 30 PG competed to the tag

00:02:18,740 --> 00:02:23,960
inversion editing magazine completes

00:02:21,350 --> 00:02:28,850
resume the beam on target machine to

00:02:23,960 --> 00:02:32,360
continue execution post copy is another

00:02:28,850 --> 00:02:35,000
way there is no memory copied when the

00:02:32,360 --> 00:02:37,820
VM is running on suicide just stopped a

00:02:35,000 --> 00:02:40,550
VM immediately on a sauce machine as in

00:02:37,820 --> 00:02:44,090
copy the city of State memory state to

00:02:40,550 --> 00:02:47,030
target after the VM is resumed and

00:02:44,090 --> 00:02:49,280
mounted on the target machine then the

00:02:47,030 --> 00:02:52,100
interest memory is copied from the

00:02:49,280 --> 00:02:56,150
source to the tacky depart I have to a

00:02:52,100 --> 00:02:58,910
target naturally involved to memory copy

00:02:56,150 --> 00:03:01,520
one in source will actively push the

00:02:58,910 --> 00:03:03,350
memory to a target decide the second is

00:03:01,520 --> 00:03:05,540
when there is a basic view what happens

00:03:03,350 --> 00:03:07,790
the target that will proactively pull

00:03:05,540 --> 00:03:11,450
the memory from the source site so

00:03:07,790 --> 00:03:14,030
comparable copy versus post copy pre

00:03:11,450 --> 00:03:16,300
copy is more mature and reliable if

00:03:14,030 --> 00:03:20,300
there's any problem happens in the

00:03:16,300 --> 00:03:21,710
migration process because all the state

00:03:20,300 --> 00:03:24,470
has given a source machine you can't

00:03:21,710 --> 00:03:27,620
just accept my greeting process as in

00:03:24,470 --> 00:03:30,500
resume the VM it just works but for post

00:03:27,620 --> 00:03:33,350
copy because the you are recovering the

00:03:30,500 --> 00:03:35,510
statement via me is running so if there

00:03:33,350 --> 00:03:38,060
is anything happen given the sauce aside

00:03:35,510 --> 00:03:40,180
the talent have the latest state so it

00:03:38,060 --> 00:03:43,970
so it would be more challenging to

00:03:40,180 --> 00:03:46,820
recover from the migration video but on

00:03:43,970 --> 00:03:50,660
the other hand if you look at the post

00:03:46,820 --> 00:03:53,810
copy it it's more predictable and also

00:03:50,660 --> 00:03:56,060
faster because for every case the memory

00:03:53,810 --> 00:03:57,380
you only need to copy once you do not

00:03:56,060 --> 00:04:01,340
need interative

00:03:57,380 --> 00:04:02,720
you know 30 page tracking yeah that

00:04:01,340 --> 00:04:07,340
cement difference between these two

00:04:02,720 --> 00:04:09,500
model so here and look at the detail

00:04:07,340 --> 00:04:11,630
flow of the two days supposed to copy

00:04:09,500 --> 00:04:14,930
now migration with all possible device

00:04:11,630 --> 00:04:17,359
so first ice and soy sauce will send a

00:04:14,930 --> 00:04:20,090
post a copy advice command to a target

00:04:17,359 --> 00:04:21,830
when receiving a command long grid of

00:04:20,090 --> 00:04:23,080
interaction you to discard all the

00:04:21,830 --> 00:04:25,210
memory

00:04:23,080 --> 00:04:27,400
at Hackett said this can make sure that

00:04:25,210 --> 00:04:30,250
in the future when there's the CPOE

00:04:27,400 --> 00:04:33,400
access happens we can it will trigger

00:04:30,250 --> 00:04:34,930
page reports to to the poor after they

00:04:33,400 --> 00:04:37,900
had a safe view and the diversity atomic

00:04:34,930 --> 00:04:40,840
rated had a postal copy decent command

00:04:37,900 --> 00:04:43,240
will be transferred to target when we

00:04:40,840 --> 00:04:46,000
zoom in this command target the need to

00:04:43,240 --> 00:04:50,560
create a user 40ft had a register a

00:04:46,000 --> 00:04:53,610
range of the you know memory and kill me

00:04:50,560 --> 00:04:57,430
one to monitor to handle a do report

00:04:53,610 --> 00:04:59,199
when receiving the post copy run the no

00:04:57,430 --> 00:05:01,599
way I mean it just started after the

00:04:59,199 --> 00:05:04,629
other just as I mention earlier no saw

00:05:01,599 --> 00:05:07,030
society actively push pages to the

00:05:04,629 --> 00:05:10,090
target button in case an invasive view

00:05:07,030 --> 00:05:13,449
page what happens then the target will

00:05:10,090 --> 00:05:16,389
also actively pull the PG from the

00:05:13,449 --> 00:05:18,039
Southside after the process completes

00:05:16,389 --> 00:05:22,469
after all the memory is copied to the

00:05:18,039 --> 00:05:22,469
target then the whole process is end

00:05:23,759 --> 00:05:26,529
they heard the challenges with passive

00:05:26,110 --> 00:05:29,440
devices

00:05:26,529 --> 00:05:31,900
the first one is because the device is

00:05:29,440 --> 00:05:34,419
password request the host has no insight

00:05:31,900 --> 00:05:37,449
into the device state so how can we make

00:05:34,419 --> 00:05:40,150
with the tri-state as a first challenge

00:05:37,449 --> 00:05:42,849
the second challenge is today most

00:05:40,150 --> 00:05:46,690
devices don't support a TM a page fault

00:05:42,849 --> 00:05:49,449
so there's no chance for the target

00:05:46,690 --> 00:05:52,270
hypervisor to to to fought at the pool

00:05:49,449 --> 00:05:54,039
like the physical access right if you

00:05:52,270 --> 00:05:57,610
don't prepare the page before DMA

00:05:54,039 --> 00:06:00,310
happens that will trigger VDD by default

00:05:57,610 --> 00:06:07,779
it images are due to driver not working

00:06:00,310 --> 00:06:09,460
or maybe even panic situation so talking

00:06:07,779 --> 00:06:11,409
about it by state I think first I want

00:06:09,460 --> 00:06:14,740
to you know briefly talk about the

00:06:11,409 --> 00:06:17,259
definition why state the actual

00:06:14,740 --> 00:06:20,529
deviation is vendor-specific based on

00:06:17,259 --> 00:06:22,330
different device it may include standard

00:06:20,529 --> 00:06:24,460
epistle resource including the pizza

00:06:22,330 --> 00:06:28,379
camper green space including the MMO

00:06:24,460 --> 00:06:31,449
registers in the mmm Appa the msi MSX

00:06:28,379 --> 00:06:33,849
information etc those are standard way

00:06:31,449 --> 00:06:34,810
you can just try to read from the PISA

00:06:33,849 --> 00:06:37,600
interface

00:06:34,810 --> 00:06:39,480
but some vendor space be resource for

00:06:37,600 --> 00:06:43,330
the employer might be some hidden state

00:06:39,480 --> 00:06:46,000
on this device which cannot be read

00:06:43,330 --> 00:06:47,980
through the MMO interface or there are

00:06:46,000 --> 00:06:50,080
maybe some estate judgment ended in a PF

00:06:47,980 --> 00:06:52,960
side when the way of trying to use a

00:06:50,080 --> 00:06:55,300
tobio to created a PF service so that

00:06:52,960 --> 00:06:57,900
will require some you know cooperation

00:06:55,300 --> 00:07:00,460
from peeps reiver but anyway I think

00:06:57,900 --> 00:07:02,710
before applying this model you need to

00:07:00,460 --> 00:07:06,490
study your device carefully whether this

00:07:02,710 --> 00:07:08,890
device can and now the host to you know

00:07:06,490 --> 00:07:10,870
saving restore the state whenever there

00:07:08,890 --> 00:07:12,340
are some devices which even do not

00:07:10,870 --> 00:07:16,030
provide the interface to time for the

00:07:12,340 --> 00:07:16,690
hidden state is not qualified for for

00:07:16,030 --> 00:07:19,419
this model

00:07:16,690 --> 00:07:22,110
another point is besides advice state

00:07:19,419 --> 00:07:25,600
there may be some pending T scriptures

00:07:22,110 --> 00:07:28,210
when migration happens those descriptors

00:07:25,600 --> 00:07:31,210
are submit submitted by a case driver

00:07:28,210 --> 00:07:35,050
but he has not been completed by the

00:07:31,210 --> 00:07:38,229
hardware so for all the pages referenced

00:07:35,050 --> 00:07:42,370
by those descriptors we want to make

00:07:38,229 --> 00:07:44,890
with their memory pages in the stop

00:07:42,370 --> 00:07:48,460
phase but at the end estate I think the

00:07:44,890 --> 00:07:50,620
size of the the LPGs device specific for

00:07:48,460 --> 00:07:53,020
the info for the network card debt in

00:07:50,620 --> 00:07:55,300
your experiment is just thousands of

00:07:53,020 --> 00:07:57,520
pages but if you talk about the GPU

00:07:55,300 --> 00:07:59,140
there might be you know hundreds of

00:07:57,520 --> 00:08:03,220
megabytes so they are pinettes quite

00:07:59,140 --> 00:08:05,919
different so once the device is you know

00:08:03,220 --> 00:08:08,260
qualified for this model we basically

00:08:05,919 --> 00:08:11,130
can create a wrapper driver on the host

00:08:08,260 --> 00:08:13,750
side to poke in the pocket by state and

00:08:11,130 --> 00:08:17,050
how this capital drug could be two

00:08:13,750 --> 00:08:19,690
options one is to just use the VFL MT

00:08:17,050 --> 00:08:21,520
by wrapping the device into a single

00:08:19,690 --> 00:08:26,020
empty instance as in just use the EM

00:08:21,520 --> 00:08:28,120
table operations to do the mediation of

00:08:26,020 --> 00:08:30,820
course we can also just hook it to the

00:08:28,120 --> 00:08:34,240
wave IP sell-offs I prefer this gossip

00:08:30,820 --> 00:08:37,479
about this morning there are some

00:08:34,240 --> 00:08:39,400
discussion but once we have the state in

00:08:37,479 --> 00:08:42,460
place then we can further use the

00:08:39,400 --> 00:08:45,850
migration region on top of this device

00:08:42,460 --> 00:08:48,180
to pass the information to the user

00:08:45,850 --> 00:08:50,370
space to allow the commute to

00:08:48,180 --> 00:08:57,360
kids say that a state through this

00:08:50,370 --> 00:08:59,340
interface so a second challenge about to

00:08:57,360 --> 00:09:01,350
the thought since the device stands a

00:08:59,340 --> 00:09:04,590
photo team effort we has to find a way

00:09:01,350 --> 00:09:07,470
to pre fault my soul c3 for today means

00:09:04,590 --> 00:09:10,170
we want to capture the potential for the

00:09:07,470 --> 00:09:12,000
condition before team a happens so here

00:09:10,170 --> 00:09:14,340
is basically means that we need to trap

00:09:12,000 --> 00:09:16,950
any increased apparition which may cause

00:09:14,340 --> 00:09:19,800
DME axis has anti coated operation to

00:09:16,950 --> 00:09:23,280
find out which pages may be used for DMA

00:09:19,800 --> 00:09:26,280
editing notify those pages to your space

00:09:23,280 --> 00:09:29,250
to pull the pages in place as in resumes

00:09:26,280 --> 00:09:31,950
operation net urban team a happens in

00:09:29,250 --> 00:09:33,930
those page a already mapped the image

00:09:31,950 --> 00:09:36,810
should be fine of course how to identify

00:09:33,930 --> 00:09:40,470
the team a page is device specific you

00:09:36,810 --> 00:09:42,240
may have the MMR access or scan work

00:09:40,470 --> 00:09:47,190
related scriptures the mat from a

00:09:42,240 --> 00:09:49,230
servant just just study the device one

00:09:47,190 --> 00:09:51,330
requirement for 340 yet

00:09:49,230 --> 00:09:52,800
we need a capability of dynamic

00:09:51,330 --> 00:09:54,810
mediation because we don't want to

00:09:52,800 --> 00:09:57,210
trample those things all the time

00:09:54,810 --> 00:09:59,580
because it may need to interfere with

00:09:57,210 --> 00:10:01,770
the Terrapins so we just wanted to

00:09:59,580 --> 00:10:04,980
enable mediation animal migration stats

00:10:01,770 --> 00:10:07,620
so this also requires some changes in

00:10:04,980 --> 00:10:10,350
the current you know with our Merc

00:10:07,620 --> 00:10:12,570
element yet we need a mechana me to turn

00:10:10,350 --> 00:10:14,490
on the mediation holding for my question

00:10:12,570 --> 00:10:17,280
especially for the regions which are

00:10:14,490 --> 00:10:19,440
mockney as a map Advan migration help

00:10:17,280 --> 00:10:23,520
completes where we need to enable the

00:10:19,440 --> 00:10:25,770
bathroom today we just introduced video

00:10:23,520 --> 00:10:28,520
simple mock mask in the migration region

00:10:25,770 --> 00:10:31,950
to indicate which region should be

00:10:28,520 --> 00:10:34,380
dynamically mediated and today we

00:10:31,950 --> 00:10:36,620
defined just for FML region by the near

00:10:34,380 --> 00:10:38,900
future we may introduce some space

00:10:36,620 --> 00:10:46,530
capability to another final green

00:10:38,900 --> 00:10:48,060
console so the last piece is how we

00:10:46,530 --> 00:10:50,130
Center the faulty information to your

00:10:48,060 --> 00:10:53,640
space before that window can to the

00:10:50,130 --> 00:10:55,050
existing model the for tender for this

00:10:53,640 --> 00:10:59,160
we pasted on the user for safety

00:10:55,050 --> 00:11:01,240
introduced in 2015 by Ezra so when there

00:10:59,160 --> 00:11:03,369
is a picture for happens the host mmm

00:11:01,240 --> 00:11:06,550
capture the fort had ascended with

00:11:03,369 --> 00:11:09,249
vacation to Sujatha 40 ft to Qumu to

00:11:06,550 --> 00:11:11,050
request a paging come you will further

00:11:09,249 --> 00:11:14,619
page you from Southside to the target

00:11:11,050 --> 00:11:17,350
headers in resolve the page fault the

00:11:14,619 --> 00:11:19,329
NASA step which is done through you know

00:11:17,350 --> 00:11:21,639
the other photo apt command called the

00:11:19,329 --> 00:11:24,790
you FFT I will copy this basically

00:11:21,639 --> 00:11:27,689
combines three tasks Erica the page copy

00:11:24,790 --> 00:11:32,860
paging at a recap of is if you

00:11:27,689 --> 00:11:35,019
so the idea approach is to reduce the

00:11:32,860 --> 00:11:38,230
same interface once we identify which PG

00:11:35,019 --> 00:11:39,790
might be potentially used for TMA we can

00:11:38,230 --> 00:11:42,550
use the same interface to pass

00:11:39,790 --> 00:11:44,439
information just like this right when

00:11:42,550 --> 00:11:46,600
there's a chap happens for whatever

00:11:44,439 --> 00:11:48,490
operation the mediator scans the

00:11:46,600 --> 00:11:51,069
operation to find out that I am a pigeon

00:11:48,490 --> 00:11:55,300
aerozine use getusermedia to trigger the

00:11:51,069 --> 00:11:58,179
Mme hmmm check if there's no mapping the

00:11:55,300 --> 00:12:01,209
mm will send the page request just using

00:11:58,179 --> 00:12:03,970
the same interface we catch the PG copy

00:12:01,209 --> 00:12:06,569
the from sauce as there's a little bit

00:12:03,970 --> 00:12:09,670
of trick for the master step because

00:12:06,569 --> 00:12:12,339
before we have we want to also apply the

00:12:09,670 --> 00:12:14,649
VF i/o map so basically we want to

00:12:12,339 --> 00:12:17,559
separate the Patrick hope here the VIP

00:12:14,649 --> 00:12:21,069
wake up today the user photo apt provide

00:12:17,559 --> 00:12:25,179
a number Kappa version the uff vio copy

00:12:21,069 --> 00:12:27,189
which don't week we first do this just

00:12:25,179 --> 00:12:30,459
copy the page enters into VF our map

00:12:27,189 --> 00:12:34,199
Edison to wake up so use this way we can

00:12:30,459 --> 00:12:37,629
introduce a wafer map in this fan office

00:12:34,199 --> 00:12:42,459
but the main limitation with this

00:12:37,629 --> 00:12:45,429
approach is so twist in the kissed

00:12:42,459 --> 00:12:45,910
structure is the aisleway address is the

00:12:45,429 --> 00:12:49,389
team area

00:12:45,910 --> 00:12:51,639
TM LG's its actual meaning depends on

00:12:49,389 --> 00:12:53,740
with average Hannibal will be enabled if

00:12:51,639 --> 00:12:56,139
the virtual memory not enable its

00:12:53,740 --> 00:12:59,110
inherent to chip here if virtual memory

00:12:56,139 --> 00:13:00,790
is enabled he's actually kissed I will

00:12:59,110 --> 00:13:04,559
be there there are two level

00:13:00,790 --> 00:13:07,420
transmission the problem is at this step

00:13:04,559 --> 00:13:09,419
before we took it user pigeon we want to

00:13:07,420 --> 00:13:12,850
find find out the host of virtual trees

00:13:09,419 --> 00:13:14,830
but there's no mapping existing even via

00:13:12,850 --> 00:13:17,110
file yet so we cannot

00:13:14,830 --> 00:13:19,240
the information if there's an overtime

00:13:17,110 --> 00:13:22,180
mu I told you we can't get in a mapping

00:13:19,240 --> 00:13:25,150
from KVM because it's just cheap here to

00:13:22,180 --> 00:13:27,820
HV a translation although we introduced

00:13:25,150 --> 00:13:30,370
some chemical pondan C but if a virtual

00:13:27,820 --> 00:13:33,760
memory is enabled how can we find out

00:13:30,370 --> 00:13:36,100
the GI oh we're too deep here chest

00:13:33,760 --> 00:13:38,650
nation that's a problem net analogy

00:13:36,100 --> 00:13:42,400
currency only exists arisen Kumu within

00:13:38,650 --> 00:13:44,470
human Bertram mu so that problem makes

00:13:42,400 --> 00:13:47,890
the difficult to do scheduler page in

00:13:44,470 --> 00:13:49,870
the second on limitation is about the by

00:13:47,890 --> 00:13:52,360
silicon memory if we also for some

00:13:49,870 --> 00:13:54,970
device which have a large local memory

00:13:52,360 --> 00:13:57,130
if we also wanted to post Koki how we

00:13:54,970 --> 00:14:00,550
can apply their model to the beautiful

00:13:57,130 --> 00:14:03,340
apt as may also have some challenge so

00:14:00,550 --> 00:14:05,680
humanity we just use the Sun with our

00:14:03,340 --> 00:14:08,740
specific approach we just build a new

00:14:05,680 --> 00:14:12,790
node via notification interface in the

00:14:08,740 --> 00:14:14,620
migration region structure we introduce

00:14:12,790 --> 00:14:16,990
a new element afte to notify our space

00:14:14,620 --> 00:14:17,980
we extended the data region to carry the

00:14:16,990 --> 00:14:20,680
default information

00:14:17,980 --> 00:14:24,160
so once the mediator identified the DMA

00:14:20,680 --> 00:14:26,920
pages we use this interface to prefer to

00:14:24,160 --> 00:14:28,390
the commute to photo page back after PT

00:14:26,920 --> 00:14:29,950
the back we still use the use of

00:14:28,390 --> 00:14:32,500
whatever T it should be you know to the

00:14:29,950 --> 00:14:35,290
final allocation and hoping for the CPU

00:14:32,500 --> 00:14:38,340
page photo is still continue with the

00:14:35,290 --> 00:14:40,960
user for healthy nest has the same path

00:14:38,340 --> 00:14:42,910
this is not a final conclusion we're

00:14:40,960 --> 00:14:45,310
still exposed and wither we can never

00:14:42,910 --> 00:14:48,790
reach is a user fidelity for the same

00:14:45,310 --> 00:14:50,560
purpose button either for now seems this

00:14:48,790 --> 00:14:53,260
model better fits the iowa-based

00:14:50,560 --> 00:14:56,730
prefault add the cabbage easily extended

00:14:53,260 --> 00:14:59,140
through the bazooka memory in the future

00:14:56,730 --> 00:14:59,560
okay that's all about the hallouwe

00:14:59,140 --> 00:15:01,480
design

00:14:59,560 --> 00:15:04,620
now welcome my colleague to introduce

00:15:01,480 --> 00:15:04,620
the nickel space fixing

00:15:07,340 --> 00:15:15,860
Fingaz Kevin hello my name is shopping

00:15:13,110 --> 00:15:21,240
from William Tell network at the region

00:15:15,860 --> 00:15:24,210
today I will share custody Eugene nikka

00:15:21,240 --> 00:15:29,480
pass through for the post copy lime

00:15:24,210 --> 00:15:34,260
equation here we use Intel access with

00:15:29,480 --> 00:15:38,520
17 eek which is a 24 tree version of a

00:15:34,260 --> 00:15:41,640
widely used the Intel 10g Niq with a DMA

00:15:38,520 --> 00:15:44,070
supported the we apple interface is

00:15:41,640 --> 00:15:48,230
compatible with 10 technique and the

00:15:44,070 --> 00:15:54,210
later generation for example in her II

00:15:48,230 --> 00:15:56,580
800 Nick currently the prototype poses

00:15:54,210 --> 00:16:00,300
that we have in reset state before

00:15:56,580 --> 00:16:04,230
migration which is a quick workaround to

00:16:00,300 --> 00:16:06,600
avoid the copy devices state but the

00:16:04,230 --> 00:16:10,170
photo cloned home we will follow on

00:16:06,600 --> 00:16:15,000
nation direction by doing the state save

00:16:10,170 --> 00:16:18,030
and restore in the tracks DMA pages by

00:16:15,000 --> 00:16:22,560
scanning ring descriptors intact the

00:16:18,030 --> 00:16:26,940
machine in the mid-80s tries to the

00:16:22,560 --> 00:16:30,090
ringtail register and poured a DMA pages

00:16:26,940 --> 00:16:37,310
from the South machine before sending -

00:16:30,090 --> 00:16:42,200
nique for DMA read and write here is a

00:16:37,310 --> 00:16:46,380
system of block diagram in the left side

00:16:42,200 --> 00:16:51,600
this is a South host and in the right

00:16:46,380 --> 00:16:54,000
side is the target host for post host we

00:16:51,600 --> 00:16:58,320
separated them into three part

00:16:54,000 --> 00:17:03,150
user space kernel and hardware and the

00:16:58,320 --> 00:17:07,290
way also marketed important modules with

00:17:03,150 --> 00:17:10,199
blue collar that is the lime accretion

00:17:07,290 --> 00:17:12,630
module in the Kumu and the dirty page

00:17:10,199 --> 00:17:16,860
tracking and the post cop here in

00:17:12,630 --> 00:17:19,520
synchronized module etc in the corner

00:17:16,860 --> 00:17:19,520
PF driver

00:17:19,820 --> 00:17:25,220
pree copy and the postal copy shared the

00:17:22,130 --> 00:17:29,590
same framework for track MDMA at

00:17:25,220 --> 00:17:35,930
assesses free copy today the under South

00:17:29,590 --> 00:17:38,780
portico PTT in the target host will

00:17:35,930 --> 00:17:42,580
implement I'm deaf device model MPF

00:17:38,780 --> 00:17:47,470
driver which manages remediation and the

00:17:42,580 --> 00:17:51,170
gate said we have a configuration data

00:17:47,470 --> 00:17:55,940
this is the best of all in her unified

00:17:51,170 --> 00:18:00,080
Nick interface we have which could be a

00:17:55,940 --> 00:18:04,640
DDP is tainted to support migration

00:18:00,080 --> 00:18:11,900
across different generations of nica's

00:18:04,640 --> 00:18:14,810
of causes mostly in hanukkah's we

00:18:11,900 --> 00:18:18,140
measured their performance using a

00:18:14,810 --> 00:18:23,540
memory intensive workload with the 2 PP

00:18:18,140 --> 00:18:28,730
caster memory and 110 ppps immigration

00:18:23,540 --> 00:18:31,670
penguins here mr. three bench markers

00:18:28,730 --> 00:18:37,660
the first one is the total I'm equation

00:18:31,670 --> 00:18:40,990
tan pre copy use the 128 seconds and

00:18:37,660 --> 00:18:45,440
post copy use the own history

00:18:40,990 --> 00:18:50,870
the second is the way I'm done ham pre

00:18:45,440 --> 00:18:55,280
copy tongue 138 and mini seconds post a

00:18:50,870 --> 00:18:58,610
copy only 17 the third one is the

00:18:55,280 --> 00:19:04,420
network at an time which means we am

00:18:58,610 --> 00:19:07,270
lost that workers servants pre copy lost

00:19:04,420 --> 00:19:14,020
four hundred and fifteen milliseconds

00:19:07,270 --> 00:19:18,470
post copy lost a little bit less 420

00:19:14,020 --> 00:19:21,490
posts include about the 300 milliseconds

00:19:18,470 --> 00:19:25,540
of device reset and the switch

00:19:21,490 --> 00:19:30,670
configuration time for the post copy

00:19:25,540 --> 00:19:32,530
either has about a 100 milliseconds of

00:19:30,670 --> 00:19:36,100
overhead

00:19:32,530 --> 00:19:38,070
most of the contributed by way of IOT ma

00:19:36,100 --> 00:19:42,760
mapping in a cellar

00:19:38,070 --> 00:19:47,680
we already optimized gist overhead from

00:19:42,760 --> 00:19:51,730
a previously about a one-second by

00:19:47,680 --> 00:20:01,660
making the higher priority for the real

00:19:51,730 --> 00:20:04,420
DMA pages in the mapping process this

00:20:01,660 --> 00:20:09,400
design and the performance lumber are

00:20:04,420 --> 00:20:13,240
based on the initial prototype in the

00:20:09,400 --> 00:20:16,870
future we will continue to explore in

00:20:13,240 --> 00:20:20,530
several directions the first one removed

00:20:16,870 --> 00:20:23,320
is that second you spend the use of 4 ft

00:20:20,530 --> 00:20:27,220
and the create we have i/o paste

00:20:23,320 --> 00:20:31,330
interface the third one I omma your

00:20:27,220 --> 00:20:35,290
mapping efficiency that there was 100

00:20:31,330 --> 00:20:39,760
milliseconds we just discussed and the

00:20:35,290 --> 00:20:43,930
fourth huge page the fifth the West

00:20:39,760 --> 00:20:47,530
local memory and the last one we were

00:20:43,930 --> 00:20:52,540
all tended to other Knicks and device

00:20:47,530 --> 00:20:55,420
types for example storage for the source

00:20:52,540 --> 00:21:00,460
code we were sent out as a pre copy of

00:20:55,420 --> 00:21:07,630
receive firstly very soon I hope

00:21:00,460 --> 00:21:10,180
and they imposed a copy ok that's all

00:21:07,630 --> 00:21:13,560
for our presentation thank you

00:21:10,180 --> 00:21:13,560
any questions

00:21:18,910 --> 00:21:26,620
thank you um so just go back to that uh

00:21:23,030 --> 00:21:30,830
performance and slide I think that this

00:21:26,620 --> 00:21:33,380
is interesting data but I would say the

00:21:30,830 --> 00:21:36,880
first diagram is might be a little bit

00:21:33,380 --> 00:21:39,860
misleading because the definition of

00:21:36,880 --> 00:21:44,900
live migration is different between free

00:21:39,860 --> 00:21:47,510
copy and the post copy definition is

00:21:44,900 --> 00:21:50,510
when you started a migration come out to

00:21:47,510 --> 00:21:52,570
the magazine completes right there's

00:21:50,510 --> 00:21:56,690
that important different part that's the

00:21:52,570 --> 00:21:59,570
difference yeah okay if you yeah okay if

00:21:56,690 --> 00:22:01,930
we sing alerts the way the definition

00:21:59,570 --> 00:22:04,730
then I think there might be another

00:22:01,930 --> 00:22:06,980
benchmark you want to try you want to

00:22:04,730 --> 00:22:09,590
try the memory bandwidth tasking across

00:22:06,980 --> 00:22:12,680
the migration right because after the

00:22:09,590 --> 00:22:15,560
migrations a memory benchmark uh some

00:22:12,680 --> 00:22:18,680
the ban-ban was testing my suffer a

00:22:15,560 --> 00:22:21,880
little bit right as the post copy yeah

00:22:18,680 --> 00:22:21,880
okay have a try

00:22:32,590 --> 00:22:40,600
thank you that that's a interesting set

00:22:35,679 --> 00:22:43,470
I'm curious about the downtime shown

00:22:40,600 --> 00:22:43,470
here

00:22:43,740 --> 00:22:50,950
um the switch configure a well how much

00:22:48,580 --> 00:22:52,870
of the time do you think is the device

00:22:50,950 --> 00:22:57,940
reset and how much do you think his

00:22:52,870 --> 00:23:01,379
switch configuration because that's a

00:22:57,940 --> 00:23:05,259
very large number compared to those two

00:23:01,379 --> 00:23:10,090
yeah that's a blessed way of one that

00:23:05,259 --> 00:23:13,179
you improve later okay for rapid i

00:23:10,090 --> 00:23:16,360
rapidly estimated there was we spend a

00:23:13,179 --> 00:23:22,119
100 milliseconds for the device that we

00:23:16,360 --> 00:23:25,720
set and we spend 200 milliseconds to

00:23:22,119 --> 00:23:29,320
wait at the trafficker really come back

00:23:25,720 --> 00:23:31,690
because the switch needed to have the

00:23:29,320 --> 00:23:34,450
MAC address in this pot and the switches

00:23:31,690 --> 00:23:37,529
at the pot but it's at a while when we

00:23:34,450 --> 00:23:40,389
finished the decoration with that

00:23:37,529 --> 00:23:40,990
OpenStack and et cetera maybe making it

00:23:40,389 --> 00:23:43,269
better

00:23:40,990 --> 00:23:49,899
what was that measurement on OpenStack

00:23:43,269 --> 00:23:51,850
who was that qmu by itself no I think

00:23:49,899 --> 00:23:55,869
that this is a lot that related to the

00:23:51,850 --> 00:24:00,279
queue is mostly related to the network

00:23:55,869 --> 00:24:02,230
itself okay so the other thing I was

00:24:00,279 --> 00:24:07,590
going to say is you talk about how to

00:24:02,230 --> 00:24:11,619
get from IO VA address back to HV a I

00:24:07,590 --> 00:24:15,700
think V host user already has a

00:24:11,619 --> 00:24:18,399
mechanism for doing that it has a cache

00:24:15,700 --> 00:24:20,950
of translation yeah actually witness

00:24:18,399 --> 00:24:25,169
yeah with yesiree with Alex you know

00:24:20,950 --> 00:24:25,169
quite a lot but I don't deny that

00:24:32,510 --> 00:24:46,350
so historically when whenever we try to

00:24:40,140 --> 00:24:50,700
save state of a soft implementation of

00:24:46,350 --> 00:24:55,309
devices and then restore them and we had

00:24:50,700 --> 00:24:55,309
to preserve that compatibility across

00:24:56,090 --> 00:25:05,360
different versions of of QM you grant a

00:25:00,390 --> 00:25:07,559
huge huge number of problems and we

00:25:05,360 --> 00:25:12,470
developed some solutions around that

00:25:07,559 --> 00:25:12,470
based on machine machine versioning

00:25:14,659 --> 00:25:18,600
comparability about the password device

00:25:16,860 --> 00:25:21,899
how we can today Twitter they are

00:25:18,600 --> 00:25:24,840
compatible and you're putting this stuff

00:25:21,899 --> 00:25:28,350
in some of this and the kernel

00:25:24,840 --> 00:25:31,440
apparently some of this in the in the

00:25:28,350 --> 00:25:33,990
hardware I wonder what how do you

00:25:31,440 --> 00:25:36,029
prevent that yeah that's a good question

00:25:33,990 --> 00:25:37,950
but I think similar to him Dave right

00:25:36,029 --> 00:25:40,440
even for mts with each other

00:25:37,950 --> 00:25:41,700
Eric's how we get it hits the 2md

00:25:40,440 --> 00:25:44,039
between two version you are compatible

00:25:41,700 --> 00:25:46,350
yet I think we have some interface to

00:25:44,039 --> 00:25:48,000
two details yet

00:25:46,350 --> 00:25:52,820
yes I'm them interface maybe we can't

00:25:48,000 --> 00:25:56,279
avoid it yet for this yeah right now

00:25:52,820 --> 00:25:58,620
today we just detected the 6u immersion

00:25:56,279 --> 00:26:02,010
type I don't it is the hardware part

00:25:58,620 --> 00:26:04,230
right yeah and you know like it could be

00:26:02,010 --> 00:26:07,740
exactly the same hardware just slightly

00:26:04,230 --> 00:26:09,809
different there were versions yeah

00:26:07,740 --> 00:26:11,010
sometimes you just buy you know yeah I

00:26:09,809 --> 00:26:13,500
think that's an issue we need to solve

00:26:11,010 --> 00:26:18,990
before really push it to the production

00:26:13,500 --> 00:26:22,649
environment and then yeah so my second

00:26:18,990 --> 00:26:24,929
question is like it's a little bit like

00:26:22,649 --> 00:26:27,990
the failover in that you start

00:26:24,929 --> 00:26:32,880
processing you start processing the ring

00:26:27,990 --> 00:26:35,159
and software if I lower kind of has a

00:26:32,880 --> 00:26:37,590
advantage is that it's independent of

00:26:35,159 --> 00:26:40,440
the specific hardware so you can move

00:26:37,590 --> 00:26:46,590
between hosts which have different

00:26:40,440 --> 00:26:47,220
NIC's so what do you think about

00:26:46,590 --> 00:26:50,250
failover

00:26:47,220 --> 00:26:52,230
I'll do this computer has totaled in

00:26:50,250 --> 00:26:54,600
this morning we made it seem similar

00:26:52,230 --> 00:26:58,820
technical right to do that but maybe

00:26:54,600 --> 00:26:58,820
that's not part of this migration stuff

00:27:03,920 --> 00:27:12,000
one last question

00:27:06,710 --> 00:27:15,270
hi so one additional performance cough

00:27:12,000 --> 00:27:16,950
maybe is missing is kind of you talk

00:27:15,270 --> 00:27:18,240
about down and up but you'll be

00:27:16,950 --> 00:27:20,910
interesting to compare between the pre

00:27:18,240 --> 00:27:23,610
post copy what the impact is on the

00:27:20,910 --> 00:27:27,060
network adapter bandwidth during that

00:27:23,610 --> 00:27:29,220
time so with with pre clip so with pre

00:27:27,060 --> 00:27:31,470
probably the the time it takes might be

00:27:29,220 --> 00:27:34,650
longer but the interruptions might be

00:27:31,470 --> 00:27:38,520
less and I'm post copy if you keep

00:27:34,650 --> 00:27:42,000
having to fetch descriptors quite good

00:27:38,520 --> 00:27:44,670
yeah I think maybe missing slide would

00:27:42,000 --> 00:27:46,200
be to show for the for the extents of

00:27:44,670 --> 00:27:47,700
the pre and post copy to show you what

00:27:46,200 --> 00:27:50,640
the bandwidth is as a function of the

00:27:47,700 --> 00:27:52,380
time so I mean I wonder whether maybe

00:27:50,640 --> 00:27:54,300
pre copy the migration time might take

00:27:52,380 --> 00:27:56,340
longer but the impact on the networking

00:27:54,300 --> 00:27:58,590
might be less maybe post coffee you

00:27:56,340 --> 00:28:00,120
might be shorter but maybe the impact

00:27:58,590 --> 00:28:00,570
when it's working is more severe so Mike

00:28:00,120 --> 00:28:02,550
you might

00:28:00,570 --> 00:28:04,260
so maybe the downtime might be shorter

00:28:02,550 --> 00:28:05,640
but maybe the impact is longer yeah yeah

00:28:04,260 --> 00:28:06,150
I agree we were still need to get

00:28:05,640 --> 00:28:09,960
moderator

00:28:06,150 --> 00:28:12,700
not far in their party yeah great thank

00:28:09,960 --> 00:28:15,170
you we are a long time okay second

00:28:12,700 --> 00:28:22,039
[Applause]

00:28:15,170 --> 00:28:22,039

YouTube URL: https://www.youtube.com/watch?v=aiCCUFXxVEA


