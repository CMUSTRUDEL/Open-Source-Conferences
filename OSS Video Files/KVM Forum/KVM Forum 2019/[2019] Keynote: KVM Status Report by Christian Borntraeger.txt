Title: [2019] Keynote: KVM Status Report by Christian Borntraeger
Publication date: 2019-11-07
Playlist: KVM Forum 2019
Description: 
	Christian Borntraeger
IBM
CPO Linux on IBM Z Development

Note: We apologize for lower video quality due to technical problems.
Captions: 
	00:00:00,390 --> 00:00:02,750
[Music]

00:00:07,189 --> 00:00:13,469
the second day of KVM forum my name is

00:00:11,340 --> 00:00:15,529
Kristen monthly I work for IBM zero as

00:00:13,469 --> 00:00:18,029
you probably know as s/390

00:00:15,529 --> 00:00:21,869
giving to the ad KVM started supporting

00:00:18,029 --> 00:00:24,750
the keynote for KDM also some my screen

00:00:21,869 --> 00:00:27,810
some IBM legal so what is the state of

00:00:24,750 --> 00:00:30,179
IBM of KDM today we have six

00:00:27,810 --> 00:00:32,009
architectures mostly or you can you

00:00:30,179 --> 00:00:34,170
could count them differently combining

00:00:32,009 --> 00:00:35,880
are more actually say that power is two

00:00:34,170 --> 00:00:39,239
architectures but let's say roughly four

00:00:35,880 --> 00:00:41,430
six architectures that are entry in all

00:00:39,239 --> 00:00:44,489
maintained we have arm we have MIPS we

00:00:41,430 --> 00:00:47,430
have power with x86 and the Esther 90

00:00:44,489 --> 00:00:49,530
platform and in fact one new

00:00:47,430 --> 00:00:52,460
architecture is on the horizon you have

00:00:49,530 --> 00:00:56,610
probably seen yesterday's talk by

00:00:52,460 --> 00:00:59,129
Alastair nanu and I think it's a good

00:00:56,610 --> 00:01:00,989
sign we actually have a growing number

00:00:59,129 --> 00:01:04,369
of architectures in a project because it

00:01:00,989 --> 00:01:08,369
shows how active that project still is

00:01:04,369 --> 00:01:12,240
we have two containers for KTM Poland

00:01:08,369 --> 00:01:14,640
and Adam and all architectures are

00:01:12,240 --> 00:01:16,799
maintained as I said unfortunately um on

00:01:14,640 --> 00:01:18,509
the arm side Christopher Dow has no

00:01:16,799 --> 00:01:21,869
longer time to be a full-time maintainer

00:01:18,509 --> 00:01:24,119
so he he stepped back on that and while

00:01:21,869 --> 00:01:26,159
he is still doing review for ArmA I will

00:01:24,119 --> 00:01:29,460
certainly miss his presentations and his

00:01:26,159 --> 00:01:34,950
his reviews on the list that was quite

00:01:29,460 --> 00:01:37,170
good when you look at KTM we all know

00:01:34,950 --> 00:01:41,030
the main users of KTM to be able to run

00:01:37,170 --> 00:01:43,350
guests or virtual machines and to also

00:01:41,030 --> 00:01:45,509
function as a base for infrastructure as

00:01:43,350 --> 00:01:48,540
a service for your data center

00:01:45,509 --> 00:01:51,270
virtualization and also a new use cases

00:01:48,540 --> 00:01:53,820
- like Hubert and actually there's more

00:01:51,270 --> 00:01:56,520
work and progress in the key on either

00:01:53,820 --> 00:01:58,259
side to cover even more use cases I

00:01:56,520 --> 00:02:01,770
think power will we talked a bit about

00:01:58,259 --> 00:02:03,479
that in his keynote afterwards but in

00:02:01,770 --> 00:02:06,210
addition to km you'll avert there's

00:02:03,479 --> 00:02:09,750
actually a Zulu of different other user

00:02:06,210 --> 00:02:11,280
spaces that that use KTM as its base I

00:02:09,750 --> 00:02:12,830
mean we have the Native Carrie I'm tool

00:02:11,280 --> 00:02:15,430
for example

00:02:12,830 --> 00:02:17,870
in the Chrome OS there see the cross VM

00:02:15,430 --> 00:02:19,460
we have from Amazon the firecracker that

00:02:17,870 --> 00:02:23,240
which is used for the function as a

00:02:19,460 --> 00:02:26,390
service we don't have rust vmm by the

00:02:23,240 --> 00:02:29,660
way firecracker and rust mmm

00:02:26,390 --> 00:02:33,020
have a talk today and tomorrow so I

00:02:29,660 --> 00:02:36,830
think you will probably be able to to

00:02:33,020 --> 00:02:39,830
see that and there's a lot more

00:02:36,830 --> 00:02:42,590
different user spaces for KVM and in

00:02:39,830 --> 00:02:45,140
fact when you look at cloud providers

00:02:42,590 --> 00:02:50,450
like Google Amazon Nutanix Tencent cloud

00:02:45,140 --> 00:02:52,700
IBM you name it actually km usage in

00:02:50,450 --> 00:02:55,180
terms of the KTM part of the kernel is

00:02:52,700 --> 00:02:57,670
not tied to a single user space stack

00:02:55,180 --> 00:03:01,610
that brings me to a different point

00:02:57,670 --> 00:03:04,640
about KTM KTM is now used as a building

00:03:01,610 --> 00:03:07,520
block for a huge amount of different use

00:03:04,640 --> 00:03:09,740
cases that go far beyond the initial

00:03:07,520 --> 00:03:13,610
scheme of being able to run over the

00:03:09,740 --> 00:03:16,970
machine KTM is used as a building block

00:03:13,610 --> 00:03:19,850
for container isolation with a container

00:03:16,970 --> 00:03:21,590
for example the IBM cloud uses a

00:03:19,850 --> 00:03:24,110
different tool called run queue it's

00:03:21,590 --> 00:03:28,520
also open source it's kind of similar to

00:03:24,110 --> 00:03:32,390
cutter a bit simpler different providers

00:03:28,520 --> 00:03:36,790
actually use KTM with specific means to

00:03:32,390 --> 00:03:39,740
do work that was not the original idea

00:03:36,790 --> 00:03:44,000
the G visor from google also has a k vm

00:03:39,740 --> 00:03:46,340
back end and KTM is also used together

00:03:44,000 --> 00:03:49,870
with schema levert in other use cases

00:03:46,340 --> 00:03:53,900
like accumulator Swiss Swiss Qbert so

00:03:49,870 --> 00:03:55,820
whenever you need a component that's

00:03:53,900 --> 00:03:58,220
awesome that provides a virtual machine

00:03:55,820 --> 00:04:00,500
then KTM seems to be the first choice in

00:03:58,220 --> 00:04:02,180
the market which is a good sign it

00:04:00,500 --> 00:04:06,140
actually shows also when you look at

00:04:02,180 --> 00:04:09,140
some statistics I locked the amount of

00:04:06,140 --> 00:04:14,000
commits per every release and going back

00:04:09,140 --> 00:04:16,340
to 3.8 and then I just asked these Libre

00:04:14,000 --> 00:04:18,440
Office to let's just give us a trendline

00:04:16,340 --> 00:04:20,450
and you can see that the trend line of

00:04:18,440 --> 00:04:24,020
the commits is is growing over time

00:04:20,450 --> 00:04:26,180
no not huge but we are growing over time

00:04:24,020 --> 00:04:30,680
and it's a steady growth we are

00:04:26,180 --> 00:04:34,490
still on that track which is good let's

00:04:30,680 --> 00:04:38,479
also look into some statistics again I

00:04:34,490 --> 00:04:41,470
am I did that two years ago last year so

00:04:38,479 --> 00:04:45,290
I basically started when when ola

00:04:41,470 --> 00:04:49,699
stopped with 420 rc1 and i counted up to

00:04:45,290 --> 00:04:54,680
five for our z1 and we have a similar

00:04:49,699 --> 00:04:58,370
number of commits like yes before

00:04:54,680 --> 00:05:00,169
slightly crowing as I said we have again

00:04:58,370 --> 00:05:04,960
about 10% of the commits our merge

00:05:00,169 --> 00:05:07,610
commits and out of these 1100 commits

00:05:04,960 --> 00:05:09,470
student 19 have the red lead by tech

00:05:07,610 --> 00:05:12,830
this is something where we actually

00:05:09,470 --> 00:05:15,229
request last year we had two years ago

00:05:12,830 --> 00:05:17,930
we had four hundred seventeen Revit bias

00:05:15,229 --> 00:05:20,780
in in our list of patches with a similar

00:05:17,930 --> 00:05:24,740
amount of commits same goes for octopi I

00:05:20,780 --> 00:05:26,780
mean we had this year we had 87 octopus

00:05:24,740 --> 00:05:30,789
and we commit and three years ago it was

00:05:26,780 --> 00:05:33,320
200 so this is something where I

00:05:30,789 --> 00:05:34,820
probably blame a bit the the loss of

00:05:33,320 --> 00:05:36,970
Christopher Dao because he was very

00:05:34,820 --> 00:05:40,220
active in revealing and acting patches

00:05:36,970 --> 00:05:42,530
but I encourage you to actually when you

00:05:40,220 --> 00:05:44,570
have patches try to get at least one

00:05:42,530 --> 00:05:46,400
peer review and if you have one just

00:05:44,570 --> 00:05:49,490
noted or in the past it would be good

00:05:46,400 --> 00:05:52,250
you know where we have a different

00:05:49,490 --> 00:05:56,960
number is also the patches that contain

00:05:52,250 --> 00:06:00,830
affixes tag the two years ago it was 125

00:05:56,960 --> 00:06:02,180
now we have 222 does it mean that we

00:06:00,830 --> 00:06:07,849
have more box so does it mean that we

00:06:02,180 --> 00:06:12,380
fix more bugs I hope it's the letter but

00:06:07,849 --> 00:06:14,030
we should also improve ourselves to to

00:06:12,380 --> 00:06:17,240
avoid bugs in the first place I guess

00:06:14,030 --> 00:06:20,500
but we are actively tracking box adding

00:06:17,240 --> 00:06:25,729
fixes text is actually a good thing

00:06:20,500 --> 00:06:29,510
okay let's also look into what reviewer

00:06:25,729 --> 00:06:32,479
but what persons did the majority of the

00:06:29,510 --> 00:06:36,280
work I have here list of top artists on

00:06:32,479 --> 00:06:40,130
first place is Shawn Kristofferson with

00:06:36,280 --> 00:06:42,140
very impressive 220 27 patches

00:06:40,130 --> 00:06:44,840
Parolo follows on second place which is

00:06:42,140 --> 00:06:46,520
also quite interesting considering that

00:06:44,840 --> 00:06:49,970
he is actually a maintainer and he's

00:06:46,520 --> 00:06:53,510
doing a lot of other work around that um

00:06:49,970 --> 00:06:57,520
within of Italy Kuznetsov marks when Jay

00:06:53,510 --> 00:06:57,520
and Dave Martin on only following places

00:06:57,550 --> 00:07:04,580
another important thing is the reviews

00:07:01,190 --> 00:07:06,910
and the top reviewers we have Jim Madsen

00:07:04,580 --> 00:07:10,820
from Google from Kristofferson into

00:07:06,910 --> 00:07:14,000
Cornelia hook Andrew Jones and David

00:07:10,820 --> 00:07:16,790
Frank on the next places and last but

00:07:14,000 --> 00:07:19,670
not least we have people creating

00:07:16,790 --> 00:07:21,430
textures with affixes tag and on top

00:07:19,670 --> 00:07:23,780
list again we have John Christopherson

00:07:21,430 --> 00:07:28,100
then bit early parole

00:07:23,780 --> 00:07:30,920
mark and Paul so I want to thank to

00:07:28,100 --> 00:07:31,820
basically all participants in KVM not

00:07:30,920 --> 00:07:35,300
only the top list

00:07:31,820 --> 00:07:37,700
but I think it's actually a good moment

00:07:35,300 --> 00:07:41,120
to to send these people for their work

00:07:37,700 --> 00:07:45,140
in improving heavier let's look at the

00:07:41,120 --> 00:07:48,140
companies I think we have names similar

00:07:45,140 --> 00:07:51,140
to last year but also some new names

00:07:48,140 --> 00:07:54,620
growing over time first place we have

00:07:51,140 --> 00:07:57,860
Intel and red head IBM but we also have

00:07:54,620 --> 00:08:02,450
our arm we also have with Google Oracle

00:07:57,860 --> 00:08:05,180
Tencent cloud Amazon we now have a lot

00:08:02,450 --> 00:08:07,070
of cloud providers participating in KDM

00:08:05,180 --> 00:08:09,080
and that is also a good sermon that

00:08:07,070 --> 00:08:12,080
actually reflects my first statement

00:08:09,080 --> 00:08:16,280
that KTM is now used beyond its initial

00:08:12,080 --> 00:08:20,360
use case of heading and heading and just

00:08:16,280 --> 00:08:22,400
provide virtual machines okay so let's

00:08:20,360 --> 00:08:24,890
look into some highlights so that people

00:08:22,400 --> 00:08:28,790
will hopefully find themselves on their

00:08:24,890 --> 00:08:34,670
chart what did we do in the in the last

00:08:28,790 --> 00:08:38,570
year overall Kemp started to implement

00:08:34,670 --> 00:08:41,240
the memory controller accounting this is

00:08:38,570 --> 00:08:44,120
now done for the KTM core code but also

00:08:41,240 --> 00:08:45,650
on x86 I think this is something where

00:08:44,120 --> 00:08:48,620
other architectures would follow up and

00:08:45,650 --> 00:08:50,330
just just account the the KML art and

00:08:48,620 --> 00:08:53,180
the kernel to the to the ride memory

00:08:50,330 --> 00:08:59,120
controller so that C crew can actually

00:08:53,180 --> 00:09:03,070
limit use beyond x86 we had improvements

00:08:59,120 --> 00:09:05,420
in the area of dirty pages tracking and

00:09:03,070 --> 00:09:08,140
in the current there is now a big effort

00:09:05,420 --> 00:09:12,230
going on to to improve the documentation

00:09:08,140 --> 00:09:15,140
in changing the classic ascii text base

00:09:12,230 --> 00:09:17,150
file into the the rst format which also

00:09:15,140 --> 00:09:19,280
Ally allow us to have some kind of

00:09:17,150 --> 00:09:23,170
flings and and formatting of these kind

00:09:19,280 --> 00:09:26,660
of things and we participated in that I

00:09:23,170 --> 00:09:30,140
also want to highlight some changes that

00:09:26,660 --> 00:09:33,140
we have made in the testing area they

00:09:30,140 --> 00:09:36,230
are actually two projects pretty closely

00:09:33,140 --> 00:09:39,980
related to the KVM kernel part its first

00:09:36,230 --> 00:09:41,900
the internal self-test they think for

00:09:39,980 --> 00:09:46,040
two years now they we have now it's a

00:09:41,900 --> 00:09:48,290
self-test back-end and we recently we

00:09:46,040 --> 00:09:51,860
added a sv 90 thanks to Thomas suit for

00:09:48,290 --> 00:09:54,830
that so we have arm 64 as 290 and x86

00:09:51,860 --> 00:09:57,680
and yourself tests and same goes for a

00:09:54,830 --> 00:10:01,970
KTM unit tests we have arm power as 219

00:09:57,680 --> 00:10:04,880
x86 would be nice to see more but the

00:10:01,970 --> 00:10:08,140
testing is also growing across the

00:10:04,880 --> 00:10:08,140
architectures and this is a good say

00:10:08,470 --> 00:10:16,610
looking at actually the six I would see

00:10:12,710 --> 00:10:18,530
of five four four main topics nesting

00:10:16,610 --> 00:10:22,060
that's now enabled by default and it has

00:10:18,530 --> 00:10:27,110
seen a lot of improvements over there so

00:10:22,060 --> 00:10:31,310
for example we have a higher accuracy of

00:10:27,110 --> 00:10:37,010
events we improved our interaction with

00:10:31,310 --> 00:10:38,780
hyper-v by what we see enlightened vm

00:10:37,010 --> 00:10:41,210
controller blocks there are still some

00:10:38,780 --> 00:10:43,220
more work to do in Ind but a lot of

00:10:41,210 --> 00:10:45,800
progress going on and this we have seen

00:10:43,220 --> 00:10:47,450
that yesterday also driven by a cloud

00:10:45,800 --> 00:10:51,500
providers like Google because in the

00:10:47,450 --> 00:10:53,270
cloud customers are asking for nesting

00:10:51,500 --> 00:10:55,730
capabilities because they want to for

00:10:53,270 --> 00:10:57,020
example be able to run kata inside the

00:10:55,730 --> 00:11:00,530
virtual machine that is provided by the

00:10:57,020 --> 00:11:03,820
cloud then we have more para

00:11:00,530 --> 00:11:07,840
virtualization on exodus 6 so we have

00:11:03,820 --> 00:11:10,480
yield capabilities and other hyper-v

00:11:07,840 --> 00:11:12,430
enlightenment cert error that

00:11:10,480 --> 00:11:15,010
super-exclusive synth virtualization

00:11:12,430 --> 00:11:17,680
where we we actually try to make the the

00:11:15,010 --> 00:11:21,790
hypervisor overhead sinner or actually

00:11:17,680 --> 00:11:24,520
try to to give the guest more access to

00:11:21,790 --> 00:11:27,610
the hardware so things like exoglass

00:11:24,520 --> 00:11:29,230
timers 16 ms ours and so on and of

00:11:27,610 --> 00:11:35,050
course optimizations and new hardware

00:11:29,230 --> 00:11:36,960
features on the outside i grouped all

00:11:35,050 --> 00:11:40,790
these things into four categories

00:11:36,960 --> 00:11:42,630
security so of course still some kind of

00:11:40,790 --> 00:11:45,790
[Music]

00:11:42,630 --> 00:11:47,280
follow up on the big security events

00:11:45,790 --> 00:11:50,230
that we have seen in the last two years

00:11:47,280 --> 00:11:54,850
and of course guest features in arm so

00:11:50,230 --> 00:11:59,680
we now have a space we can directly

00:11:54,850 --> 00:12:02,500
assign timers have the scalable vector

00:11:59,680 --> 00:12:04,690
extensions and many things more and of

00:12:02,500 --> 00:12:08,440
course last but not least this actually

00:12:04,690 --> 00:12:11,170
shows also very relevant in architecture

00:12:08,440 --> 00:12:13,780
if you invest a lot in in hygiene topics

00:12:11,170 --> 00:12:20,410
so fixing things improving small things

00:12:13,780 --> 00:12:23,890
and so on on - 90 we had basically two

00:12:20,410 --> 00:12:26,710
big topics first topic is that we now

00:12:23,890 --> 00:12:29,080
have the capability of of virtualizing

00:12:26,710 --> 00:12:33,250
crypto adapters we have on the platform

00:12:29,080 --> 00:12:36,460
we have a real HSM module for for crypto

00:12:33,250 --> 00:12:38,590
averted crypto operations mystic yogi

00:12:36,460 --> 00:12:42,850
and that can by the heart that ready to

00:12:38,590 --> 00:12:44,350
be split up into 85 sub sub cards you

00:12:42,850 --> 00:12:47,560
could say virtual functions on the PCI

00:12:44,350 --> 00:12:49,990
and we can now assign these these small

00:12:47,560 --> 00:12:52,060
sub parts to guests and allow guests to

00:12:49,990 --> 00:12:54,340
talk to the HSM directly and of course

00:12:52,060 --> 00:12:56,920
we had the new machines e15 so we

00:12:54,340 --> 00:13:01,320
implemented that features and again

00:12:56,920 --> 00:13:01,320
present 90 were also invested in hygiene

00:13:01,680 --> 00:13:07,450
on power um I see four topics again

00:13:05,410 --> 00:13:11,710
nested virtualization seems to be quite

00:13:07,450 --> 00:13:14,890
interesting and and a lot of growing

00:13:11,710 --> 00:13:17,470
interest was also seen last year and

00:13:14,890 --> 00:13:21,100
this year again

00:13:17,470 --> 00:13:22,630
you can all now also assign the xiv ii

00:13:21,100 --> 00:13:25,420
controller of the interrupt controller

00:13:22,630 --> 00:13:27,400
to the guest that reduces latency and

00:13:25,420 --> 00:13:30,970
improve performance there is a new

00:13:27,400 --> 00:13:32,500
feature of power 9 a very important

00:13:30,970 --> 00:13:35,950
feature of a power is certainly

00:13:32,500 --> 00:13:38,350
protected executing facility where you

00:13:35,950 --> 00:13:40,240
can run a guest without the the host

00:13:38,350 --> 00:13:43,810
being able to see the guest memory and

00:13:40,240 --> 00:13:47,100
the gaseous state very interesting

00:13:43,810 --> 00:13:50,650
topics similar to to the MDS IV solution

00:13:47,100 --> 00:13:55,450
not similar has the same intention and

00:13:50,650 --> 00:13:58,870
last but not least optimization on the

00:13:55,450 --> 00:14:01,090
flip side things are a little bit slower

00:13:58,870 --> 00:14:05,260
on last year's but you have seen

00:14:01,090 --> 00:14:08,800
cleanups and small optimizations so it's

00:14:05,260 --> 00:14:12,460
it's still maintained and hopefully this

00:14:08,800 --> 00:14:17,140
will continue to be the case and last

00:14:12,460 --> 00:14:21,130
but not least we have the list of risk 5

00:14:17,140 --> 00:14:23,380
patches or on the mailing list and it

00:14:21,130 --> 00:14:26,080
actually shows that the initial risk 5

00:14:23,380 --> 00:14:28,450
port already contains the majority of

00:14:26,080 --> 00:14:32,020
the the important features of KVM so we

00:14:28,450 --> 00:14:34,120
are actually looking forward to - to the

00:14:32,020 --> 00:14:36,280
stabilization of the architecture and

00:14:34,120 --> 00:14:38,320
hopefully we next year we can say we

00:14:36,280 --> 00:14:41,550
have one architecture more entry that

00:14:38,320 --> 00:14:44,980
would be good time is running out so

00:14:41,550 --> 00:14:48,220
last you di have to do is enjoy the rest

00:14:44,980 --> 00:14:50,860
of KTM forum and please talk to other

00:14:48,220 --> 00:14:53,230
people the interaction is certainly what

00:14:50,860 --> 00:14:56,520
makes this forum the most interesting

00:14:53,230 --> 00:14:56,520
place to be Thanks

00:14:57,920 --> 00:15:06,820
[Applause]

00:14:59,630 --> 00:15:06,820

YouTube URL: https://www.youtube.com/watch?v=lw2c-59xVtA


