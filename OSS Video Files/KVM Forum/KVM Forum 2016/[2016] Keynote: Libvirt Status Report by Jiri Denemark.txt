Title: [2016] Keynote: Libvirt Status Report by Jiri Denemark
Publication date: 2016-08-30
Playlist: KVM Forum 2016
Description: 
	JiÅ™i Denemark
Senior Software Engineer, Red Hat

Jiri joined Red Hat to help maintain Xen in Red Hat Enterprise Linux 5. After one year he moved to the libvirt team at Red Hat where he works as a Senior Software Engineer and maintainer of libvirt packages.

Slides: http://www.linux-kvm.org/images/6/6d/02x10A-Jiri_Denemark-Libvirt_Keynote.pdf
Captions: 
	00:00:09,290 --> 00:00:18,029
good afternoon my name is CC dynamic

00:00:13,980 --> 00:00:20,130
from from redhead and I'm liquid

00:00:18,029 --> 00:00:23,550
developer and also maintainer of early

00:00:20,130 --> 00:00:26,849
bird in Red Hat Enterprise Linux and i

00:00:23,550 --> 00:00:29,369
will give you a status report for red

00:00:26,849 --> 00:00:34,020
bird and what happened during the last

00:00:29,369 --> 00:00:36,420
year seems to kb important in cielo so I

00:00:34,020 --> 00:00:39,329
expected to start a little bit late

00:00:36,420 --> 00:00:41,820
which actually happened and I prepared

00:00:39,329 --> 00:00:43,980
this talk to be a bit shorter so we will

00:00:41,820 --> 00:00:48,870
see how it happens is going to be

00:00:43,980 --> 00:00:53,039
shorter or not let's let me start with

00:00:48,870 --> 00:00:56,059
some numbers as usual during last year

00:00:53,039 --> 00:01:00,930
we had more than 3.5 thousand comets

00:00:56,059 --> 00:01:05,610
which which is about 300 comets per per

00:01:00,930 --> 00:01:09,000
month and that's quite significantly

00:01:05,610 --> 00:01:11,340
more than what we had last year all

00:01:09,000 --> 00:01:15,720
these comments were created by 114

00:01:11,340 --> 00:01:18,150
authors and about half of them there are

00:01:15,720 --> 00:01:19,950
first-time contributors I don't know

00:01:18,150 --> 00:01:21,450
what what it means whether it means that

00:01:19,950 --> 00:01:25,680
we are a friendly community which

00:01:21,450 --> 00:01:30,780
attracts new new authors I think that's

00:01:25,680 --> 00:01:32,790
the case and but we also lose them so

00:01:30,780 --> 00:01:35,939
I'm not sure which battery are using the

00:01:32,790 --> 00:01:37,829
old ones or new ones I didn't create

00:01:35,939 --> 00:01:46,369
such a detailed statistics but I think

00:01:37,829 --> 00:01:49,560
it's both actually so when grouping use

00:01:46,369 --> 00:01:53,909
3.5 thousand comments according to the

00:01:49,560 --> 00:01:57,630
company the author's work for we see no

00:01:53,909 --> 00:02:00,149
surprise the Red Hat is still number one

00:01:57,630 --> 00:02:04,380
with about eighty percent of all comets

00:02:00,149 --> 00:02:06,630
and the second place is taken by

00:02:04,380 --> 00:02:10,560
individual contributors who contribute

00:02:06,630 --> 00:02:13,260
like few pages or even one and sometimes

00:02:10,560 --> 00:02:15,510
more during the year

00:02:13,260 --> 00:02:19,530
but there is a change in a third place

00:02:15,510 --> 00:02:22,379
which now belongs to virtuozzo and they

00:02:19,530 --> 00:02:29,810
contribute it about six percent of all

00:02:22,379 --> 00:02:33,030
comets and I'd like to comment the most

00:02:29,810 --> 00:02:37,970
active developers namely so that they

00:02:33,030 --> 00:02:41,340
get some credit for doing that and the

00:02:37,970 --> 00:02:44,189
actually the 30 about thirty percent of

00:02:41,340 --> 00:02:47,760
all comments are created by the top

00:02:44,189 --> 00:02:51,049
three developers who are Peter trampa

00:02:47,760 --> 00:03:02,909
and John Farrell on and young Tom Cole

00:02:51,049 --> 00:03:06,420
and so thank you them and for example

00:03:02,909 --> 00:03:08,730
from River 20 so the most active

00:03:06,420 --> 00:03:11,099
developer boss Nikolai Schakowsky who

00:03:08,730 --> 00:03:14,069
also had quite a quite a few comments

00:03:11,099 --> 00:03:16,109
during the year and the most active

00:03:14,069 --> 00:03:20,519
individual individual contributor was

00:03:16,109 --> 00:03:23,970
Roman bull gradski who actually

00:03:20,519 --> 00:03:27,139
contributed more than some developers

00:03:23,970 --> 00:03:27,139
that are paid for that

00:03:33,459 --> 00:03:41,420
so the most active areas are still the

00:03:38,599 --> 00:03:44,230
common code like shark infrastructure

00:03:41,420 --> 00:03:48,860
and XML parsing code and stuff like that

00:03:44,230 --> 00:03:52,579
closely followed by qme driver and if

00:03:48,860 --> 00:03:55,849
you are wondering why the bars don't

00:03:52,579 --> 00:04:00,530
actually add two hundred percent that's

00:03:55,849 --> 00:04:02,930
because I counted the percentage of

00:04:00,530 --> 00:04:05,090
comments that touch the code so some

00:04:02,930 --> 00:04:07,040
some comments actually touch both come

00:04:05,090 --> 00:04:09,680
on code and kill you code and stuff like

00:04:07,040 --> 00:04:15,669
that so that's that's why it's more than

00:04:09,680 --> 00:04:19,160
hundred percent and the third place is

00:04:15,669 --> 00:04:23,060
taken by wizards against it's not a big

00:04:19,160 --> 00:04:28,669
surprise given the main focus of the top

00:04:23,060 --> 00:04:31,400
companies that that work on liebert so

00:04:28,669 --> 00:04:34,520
it's all about statistics and now let me

00:04:31,400 --> 00:04:36,950
highlight the most interesting stuff

00:04:34,520 --> 00:04:42,260
that happened during last year first of

00:04:36,950 --> 00:04:44,440
all the labor 220 was released but if

00:04:42,260 --> 00:04:50,780
you ask me what the main feature was

00:04:44,440 --> 00:04:54,800
that warranted the version change there

00:04:50,780 --> 00:04:57,530
was none because basically historically

00:04:54,800 --> 00:04:59,960
we claim to increment the major number

00:04:57,530 --> 00:05:02,900
every time we have some significant

00:04:59,960 --> 00:05:04,970
feature but we always struggled with

00:05:02,900 --> 00:05:06,710
what the significant feature is and

00:05:04,970 --> 00:05:10,460
whether future violence a measure it

00:05:06,710 --> 00:05:13,669
measure enjoyment or not so recently we

00:05:10,460 --> 00:05:16,039
change the numbering so that the manger

00:05:13,669 --> 00:05:20,599
increments for the first stories of the

00:05:16,039 --> 00:05:25,449
year so the next year in January we will

00:05:20,599 --> 00:05:28,910
get liberate version 3 and the minor

00:05:25,449 --> 00:05:31,990
number increments every release in in

00:05:28,910 --> 00:05:35,090
the same year so we now have a

00:05:31,990 --> 00:05:38,690
predictable still meaningless which we

00:05:35,090 --> 00:05:40,100
had before release numbering but it's

00:05:38,690 --> 00:05:43,380
nice for

00:05:40,100 --> 00:05:45,180
dumb streams to to plan they they can

00:05:43,380 --> 00:05:48,169
actually plan what release is going to

00:05:45,180 --> 00:05:53,240
be included in their downstream release

00:05:48,169 --> 00:05:57,690
off-limits distribution for example and

00:05:53,240 --> 00:05:59,130
the micro number still is still used for

00:05:57,690 --> 00:06:03,110
maintenance releases which are

00:05:59,130 --> 00:06:07,370
completely synchronous whenever we have

00:06:03,110 --> 00:06:10,620
enough patches we might release usual is

00:06:07,370 --> 00:06:18,330
most mostly done by Michael Robinson

00:06:10,620 --> 00:06:20,160
when when he makes federal release so

00:06:18,330 --> 00:06:22,590
another interesting thing that happened

00:06:20,160 --> 00:06:27,800
during the last year was creation of an

00:06:22,590 --> 00:06:31,139
SS module by michele pirro sneak it's

00:06:27,800 --> 00:06:34,560
useful mainly for developers or actually

00:06:31,139 --> 00:06:36,240
anyone who wants to easily communicate

00:06:34,560 --> 00:06:39,750
with their domains over a network

00:06:36,240 --> 00:06:43,080
without having to mess with dns setup

00:06:39,750 --> 00:06:47,010
and static IP addresses so the goal is

00:06:43,080 --> 00:06:51,780
to verse start the man and ssso man

00:06:47,010 --> 00:06:54,240
using the name that is to make to do

00:06:51,780 --> 00:06:57,030
many resolvable into the IP address

00:06:54,240 --> 00:06:59,039
assigned to that domain and it's

00:06:57,030 --> 00:07:02,130
actually pretty easy with this an SS

00:06:59,039 --> 00:07:07,699
module you can just install laverton SS

00:07:02,130 --> 00:07:11,250
or you can compile a liver from source

00:07:07,699 --> 00:07:16,110
then you need to update et CNSs which

00:07:11,250 --> 00:07:19,080
conf to include levert has one of the

00:07:16,110 --> 00:07:23,099
plugins that are consulted during the

00:07:19,080 --> 00:07:27,510
name resolution and that's it it just

00:07:23,099 --> 00:07:30,090
works also I need to mention that it

00:07:27,510 --> 00:07:33,470
works if the domain is connected over

00:07:30,090 --> 00:07:37,710
the virtual network managed by levert

00:07:33,470 --> 00:07:41,010
where DNS masks is assigning the

00:07:37,710 --> 00:07:42,690
addresses so if you want to know more

00:07:41,010 --> 00:07:45,090
about this week useful feature you can

00:07:42,690 --> 00:07:49,889
look at give a page or you can wait for

00:07:45,090 --> 00:07:53,039
me cows lightning talk he will describe

00:07:49,889 --> 00:07:54,949
more about how it's actually worked how

00:07:53,039 --> 00:07:58,469
it actually works

00:07:54,949 --> 00:08:01,740
so last year I talked about vert admin

00:07:58,469 --> 00:08:04,319
or Liberty admin ABI as a new feature

00:08:01,740 --> 00:08:06,509
but it wasn't really useful at a time

00:08:04,319 --> 00:08:10,379
because it didn't provide any API except

00:08:06,509 --> 00:08:14,520
for open and close and they changed

00:08:10,379 --> 00:08:19,529
significantly this year mainly because

00:08:14,520 --> 00:08:21,899
of the work of Eric's kooldaddy and if

00:08:19,529 --> 00:08:24,449
you want to know more about this adminip

00:08:21,899 --> 00:08:27,599
I and what it can do and what can and

00:08:24,449 --> 00:08:29,909
how it can be useful for you come to his

00:08:27,599 --> 00:08:39,870
talk tomorrow afternoon at four-thirty

00:08:29,909 --> 00:08:43,709
p.m. recently we applied several batches

00:08:39,870 --> 00:08:46,319
to speed up the built mainly the checks

00:08:43,709 --> 00:08:50,670
during the build so make chicken makes

00:08:46,319 --> 00:08:54,990
index check are a bit faster it's still

00:08:50,670 --> 00:08:59,220
in seconds in order of seconds but if

00:08:54,990 --> 00:09:02,850
you have big series and you are supposed

00:08:59,220 --> 00:09:05,970
to run both my chicken mixing textures

00:09:02,850 --> 00:09:09,120
after single very single batch in a

00:09:05,970 --> 00:09:11,189
series before sending the series for

00:09:09,120 --> 00:09:15,240
review and before pushing that series

00:09:11,189 --> 00:09:17,639
into a repository it adds up and it

00:09:15,240 --> 00:09:20,310
saves a lot of time so after the speed

00:09:17,639 --> 00:09:24,089
ups there's really no excuse to know

00:09:20,310 --> 00:09:26,910
trying these checks so please every time

00:09:24,089 --> 00:09:28,889
when submitting pushes for review do

00:09:26,910 --> 00:09:32,389
both my check and make syntax check

00:09:28,889 --> 00:09:32,389
which really helps

00:09:34,350 --> 00:09:43,020
and my last slide I will just try to

00:09:38,850 --> 00:09:46,730
briefly mention the highlights in Q mu

00:09:43,020 --> 00:09:52,100
drivers what what changes we made there

00:09:46,730 --> 00:09:54,690
as always we made a lot of cleanups it's

00:09:52,100 --> 00:09:59,160
it usually comes with new features

00:09:54,690 --> 00:10:01,400
because every non-trivial feature comes

00:09:59,160 --> 00:10:05,690
with a lot of cleanups in our qame code

00:10:01,400 --> 00:10:12,690
so hopefully the code is getting better

00:10:05,690 --> 00:10:16,020
and we dropped support for ancient qmu

00:10:12,690 --> 00:10:19,680
versions that is fit newly word you

00:10:16,020 --> 00:10:25,320
won't be able to use q mu older than 0

00:10:19,680 --> 00:10:27,720
12 which is pretty old personally I'm

00:10:25,320 --> 00:10:30,620
looking forward to the point where we

00:10:27,720 --> 00:10:34,350
drop and I think that doesn't use key MP

00:10:30,620 --> 00:10:39,990
but that's quite quite a long run before

00:10:34,350 --> 00:10:45,270
we can do that except for clean absent

00:10:39,990 --> 00:10:47,760
and this drop we also worked on a lot of

00:10:45,270 --> 00:10:50,970
features for example relax encryption

00:10:47,760 --> 00:10:56,280
for disks that Daniel talked about

00:10:50,970 --> 00:10:59,370
yesterday we had several enhancement in

00:10:56,280 --> 00:11:03,960
migration code we implemented escoba

00:10:59,370 --> 00:11:06,720
migration in cooperation with qmu so

00:11:03,960 --> 00:11:10,490
that the Q mu interface could have been

00:11:06,720 --> 00:11:15,090
made stable the multi-threaded

00:11:10,490 --> 00:11:18,390
compression for migration you developers

00:11:15,090 --> 00:11:23,010
from Intel implemented support for perf

00:11:18,390 --> 00:11:26,370
events and fetching some performance

00:11:23,010 --> 00:11:29,640
statistics from the cpu and last but not

00:11:26,370 --> 00:11:32,070
least the support for non Intel

00:11:29,640 --> 00:11:38,790
Architecture such as a arc 64 and

00:11:32,070 --> 00:11:41,640
PowerPC 64 were improved so we should be

00:11:38,790 --> 00:11:43,800
now even more usable on these

00:11:41,640 --> 00:11:45,500
architectures than we ever well everyone

00:11:43,800 --> 00:11:50,690
better

00:11:45,500 --> 00:11:55,840
so that's all thank you for an attention

00:11:50,690 --> 00:11:55,840

YouTube URL: https://www.youtube.com/watch?v=G_aEOG77QII


