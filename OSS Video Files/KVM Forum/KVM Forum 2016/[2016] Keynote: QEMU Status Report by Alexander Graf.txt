Title: [2016] Keynote: QEMU Status Report by Alexander Graf
Publication date: 2016-08-30
Playlist: KVM Forum 2016
Description: 
	Alexander Graf
Upstream Maintainer - SUSE

Alexander started working for SUSE about 9 years ago. Since then he worked on fancy things like SUSE Studio, QEMU, KVM and openSUSE on ARM. Whenever something really useful comes to his mind, he tends to implement it. Among others he did Mac OS X virtualization using KVM, nested SVM, KVM on PowerPC and a lot of work in QEMU for openSUSE on ARM. He is the upstream maintainer of KVM for PowerPC, QEMU for PowerPC and QEMU for S390x.

Slides: http://www.linux-kvm.org/images/c/c2/03x01-Alex_Graf-QEMU_keynote.pdf
Captions: 
	00:00:08,990 --> 00:00:14,370
good morning welcome to day three of KVM

00:00:12,269 --> 00:00:18,380
film this morning we're going to talk

00:00:14,370 --> 00:00:21,090
all about fancy animals EMU cue the EMU

00:00:18,380 --> 00:00:22,380
if you haven't heard of him he has been

00:00:21,090 --> 00:00:23,760
our mascot for three years now I just

00:00:22,380 --> 00:00:25,859
figured we should Paulie put up his

00:00:23,760 --> 00:00:29,820
image out there so that people actually

00:00:25,859 --> 00:00:32,759
recognize him what happened during the

00:00:29,820 --> 00:00:35,460
last year it was like she's really it's

00:00:32,759 --> 00:00:38,280
pretty exciting u4q we have released

00:00:35,460 --> 00:00:40,829
almost three versions almost because the

00:00:38,280 --> 00:00:42,870
third version 2.7 is just coming

00:00:40,829 --> 00:00:44,760
basically coming out next week we're in

00:00:42,870 --> 00:00:47,610
the final final final phase of the

00:00:44,760 --> 00:00:49,200
release cycle there so within three

00:00:47,610 --> 00:00:52,890
years you can have a lot a lot of

00:00:49,200 --> 00:00:55,410
features for example the probably the

00:00:52,890 --> 00:00:58,770
most anticipated one from general

00:00:55,410 --> 00:01:01,910
non-enterprise consumer people out there

00:00:58,770 --> 00:01:04,559
was 3d support we can finally thanks to

00:01:01,910 --> 00:01:05,820
work that was presented earlier last

00:01:04,559 --> 00:01:10,799
year not a year before

00:01:05,820 --> 00:01:14,430
one 3d gas 3d accelerated user space

00:01:10,799 --> 00:01:16,740
applications in a guest with proper host

00:01:14,430 --> 00:01:20,189
3d support on the whole is using host

00:01:16,740 --> 00:01:23,729
graphics adapters so you can now play

00:01:20,189 --> 00:01:25,380
your games basically on on cue which

00:01:23,729 --> 00:01:27,060
what's the main advantage that you had

00:01:25,380 --> 00:01:29,159
for VirtualBox so finally we just need a

00:01:27,060 --> 00:01:32,130
proper management solution and either

00:01:29,159 --> 00:01:35,189
way we have as always pretty much every

00:01:32,130 --> 00:01:37,259
year so far we have a new target

00:01:35,189 --> 00:01:40,320
last year was try core this year it's

00:01:37,259 --> 00:01:44,640
Talat algae X if you haven't heard of it

00:01:40,320 --> 00:01:46,470
is a core made by tell ever to where

00:01:44,640 --> 00:01:49,740
they try to put a lot of massively

00:01:46,470 --> 00:01:50,880
parallel calls into a chip to I don't

00:01:49,740 --> 00:01:54,030
know I don't think it actually found a

00:01:50,880 --> 00:01:55,799
use case for yet but we have support for

00:01:54,030 --> 00:01:59,189
emulation of it in Kimia and there is

00:01:55,799 --> 00:02:01,799
real silicon for it as well eventually

00:01:59,189 --> 00:02:03,810
after I know I think the first

00:02:01,799 --> 00:02:06,840
discussion started three years five five

00:02:03,810 --> 00:02:09,149
years even long time ago you can run

00:02:06,840 --> 00:02:10,920
queue you do - Colonel you do - energy

00:02:09,149 --> 00:02:12,629
you have a really huge energy of like

00:02:10,920 --> 00:02:13,410
100 megabyte which was what I actually

00:02:12,629 --> 00:02:15,870
cared about

00:02:13,410 --> 00:02:19,020
years ago and it does not take ten

00:02:15,870 --> 00:02:20,670
seconds to boot it's just there finally

00:02:19,020 --> 00:02:22,440
isn't it awesome like you you don't

00:02:20,670 --> 00:02:25,830
waste time copying packets like copying

00:02:22,440 --> 00:02:27,930
data from left to right in parallel to

00:02:25,830 --> 00:02:31,320
the head we also finally support post

00:02:27,930 --> 00:02:31,710
copy live migration you have never heard

00:02:31,320 --> 00:02:33,120
of it

00:02:31,710 --> 00:02:34,650
the representations on there too

00:02:33,120 --> 00:02:37,500
basically this is all the stuff that was

00:02:34,650 --> 00:02:41,340
presented last year and it finally land

00:02:37,500 --> 00:02:44,790
in the tree during the last year post go

00:02:41,340 --> 00:02:47,640
black migration means you can you can

00:02:44,790 --> 00:02:50,100
basically run two systems in parallel

00:02:47,640 --> 00:02:51,870
where you leave your RAM on one your

00:02:50,100 --> 00:02:53,370
execute on the other and the RAM just

00:02:51,870 --> 00:02:54,990
slowly migrates to the one where you

00:02:53,370 --> 00:02:57,720
execute on which means you always

00:02:54,990 --> 00:02:59,160
converge you don't have to wait for what

00:02:57,720 --> 00:03:01,200
life might like for your life virtual

00:02:59,160 --> 00:03:04,200
machine to not dirty all the pages to

00:03:01,200 --> 00:03:07,560
get converge to the new system that you

00:03:04,200 --> 00:03:11,010
want to migrate you obviously if one of

00:03:07,560 --> 00:03:13,710
the system goes down your VM is dead we

00:03:11,010 --> 00:03:15,660
have virtual I only support finally this

00:03:13,710 --> 00:03:17,910
started I don't know if also about five

00:03:15,660 --> 00:03:20,160
years ago with a m-- these patches now

00:03:17,910 --> 00:03:21,990
we actually have Intel Iommi support in

00:03:20,160 --> 00:03:24,900
the guest so if you want to protect your

00:03:21,990 --> 00:03:27,240
guests from malicious io io DMA

00:03:24,900 --> 00:03:29,820
operations that come from virtual

00:03:27,240 --> 00:03:32,130
devices then you can now basically trap

00:03:29,820 --> 00:03:39,090
them inside a guest so the guests can be

00:03:32,130 --> 00:03:40,860
more safe about its own dmas after ad

00:03:39,090 --> 00:03:42,540
sub-project last year that basically

00:03:40,860 --> 00:03:44,850
kicked off the whole thing and then a

00:03:42,540 --> 00:03:47,190
couple of sleepless nights by Ben Heron

00:03:44,850 --> 00:03:49,890
Schmidt I guess we now have Mike OS 9

00:03:47,190 --> 00:03:52,500
support you want to run your vintage

00:03:49,890 --> 00:03:56,430
operating systems cumulus is exactly

00:03:52,500 --> 00:03:58,920
what you need and finally Linux user is

00:03:56,430 --> 00:04:00,570
not a second-class citizen anymore so it

00:03:58,920 --> 00:04:02,989
used to be a lensing around for a couple

00:04:00,570 --> 00:04:05,520
years that we used to not have a lot of

00:04:02,989 --> 00:04:08,940
new code or work like proper support

00:04:05,520 --> 00:04:10,560
proper more improvements to it during

00:04:08,940 --> 00:04:12,720
the last year a lot of work happened but

00:04:10,560 --> 00:04:14,640
actually during the last years really

00:04:12,720 --> 00:04:16,739
but it we finally at the point where you

00:04:14,640 --> 00:04:19,590
can restart signals where you can be

00:04:16,739 --> 00:04:21,479
relatively sure that you can run

00:04:19,590 --> 00:04:23,010
multiple threats in parallel so you can

00:04:21,479 --> 00:04:25,080
basically run your applications without

00:04:23,010 --> 00:04:26,490
being afraid that things break up all

00:04:25,080 --> 00:04:28,319
the time

00:04:26,490 --> 00:04:31,380
so a lot of cool things happened during

00:04:28,319 --> 00:04:32,819
the last year and obviously in parallel

00:04:31,380 --> 00:04:36,090
to just normal code development we also

00:04:32,819 --> 00:04:37,710
have things that will come up so for in

00:04:36,090 --> 00:04:40,020
during the next year and the basis for

00:04:37,710 --> 00:04:42,599
that is just like we saw with the Mac OS

00:04:40,020 --> 00:04:44,610
9 support also always the Summer of Code

00:04:42,599 --> 00:04:47,639
if you haven't heard of google Summer of

00:04:44,610 --> 00:04:49,530
Code goo Summer of Code is is basically

00:04:47,639 --> 00:04:52,949
Google giving away free money for people

00:04:49,530 --> 00:04:56,130
to develop open source software as long

00:04:52,949 --> 00:04:58,380
as you're a student at least so doing

00:04:56,130 --> 00:05:00,360
google Summer of Code we had a couple of

00:04:58,380 --> 00:05:03,360
projects Stephan presented I think last

00:05:00,360 --> 00:05:05,490
year on his V sock thing which is

00:05:03,360 --> 00:05:06,870
similar to what we amber does where you

00:05:05,490 --> 00:05:09,599
can best just create a socket to talk to

00:05:06,870 --> 00:05:11,099
the host however is very hard to figure

00:05:09,599 --> 00:05:15,360
out what really is going on on that

00:05:11,099 --> 00:05:17,099
socket so that project is just basically

00:05:15,360 --> 00:05:20,240
creating a pcap interface so you can

00:05:17,099 --> 00:05:24,780
capture what is happening on your line

00:05:20,240 --> 00:05:26,039
in parallel to the Intel IMU I told you

00:05:24,780 --> 00:05:28,440
that the first information we had was

00:05:26,039 --> 00:05:30,509
actually and I aim the IMU that is

00:05:28,440 --> 00:05:33,509
finally getting upstream and getting

00:05:30,509 --> 00:05:35,099
polished so we expect that one on my

00:05:33,509 --> 00:05:39,810
keynote or and somebody else's keynote

00:05:35,099 --> 00:05:42,930
next year and imagine you have so if you

00:05:39,810 --> 00:05:44,340
ever used VNC with a non USB tablet you

00:05:42,930 --> 00:05:47,969
probably saw that your cursors are

00:05:44,340 --> 00:05:50,729
distorted because you means VNC only

00:05:47,969 --> 00:05:52,860
gets absolutely positions and your guest

00:05:50,729 --> 00:05:54,449
from a real mouse format just normal

00:05:52,860 --> 00:05:56,159
Mouse thank you emulate you only get

00:05:54,449 --> 00:05:57,449
relative position data so you don't

00:05:56,159 --> 00:05:58,740
really know where you are on your screen

00:05:57,449 --> 00:06:01,020
and so you basically get two mouse

00:05:58,740 --> 00:06:03,120
cursors so the solution to that is

00:06:01,020 --> 00:06:06,150
usually to have an absolute input method

00:06:03,120 --> 00:06:09,240
like a USB tablet however if you're

00:06:06,150 --> 00:06:12,270
running something like Windows 3.1 that

00:06:09,240 --> 00:06:13,710
doesn't have USB support then you might

00:06:12,270 --> 00:06:16,110
be stuck with this ordered Mouse point

00:06:13,710 --> 00:06:19,050
Mouse cursors so now with serial tablet

00:06:16,110 --> 00:06:21,330
support we can finally run Windows 3.1

00:06:19,050 --> 00:06:23,759
in VNC with properly aligned Mouse

00:06:21,330 --> 00:06:25,940
cursors isn't that also like 20 years

00:06:23,759 --> 00:06:25,940
later

00:06:30,250 --> 00:06:37,370
Alex in his usual fashion kept going on

00:06:33,890 --> 00:06:39,440
doing multi-threaded TCG so that's a

00:06:37,370 --> 00:06:44,360
project to improve memory consistency on

00:06:39,440 --> 00:06:47,770
that Dave did more post capillary

00:06:44,360 --> 00:06:50,600
migration patches with the student and

00:06:47,770 --> 00:06:52,880
famine Stephan worked on improving our

00:06:50,600 --> 00:06:54,290
Qi am G command I'm not mentioning the

00:06:52,880 --> 00:06:55,790
students because you will see see all

00:06:54,290 --> 00:06:58,250
the students signed up eyes and patches

00:06:55,790 --> 00:06:59,930
on the mailing lists but the one thing

00:06:58,250 --> 00:07:01,730
you don't see is all the hard work the

00:06:59,930 --> 00:07:03,800
mentors actually put into mentoring

00:07:01,730 --> 00:07:05,930
those students to get working and usable

00:07:03,800 --> 00:07:08,240
patches out at the end of the day so

00:07:05,930 --> 00:07:11,090
thanks a lot to all the mentors that but

00:07:08,240 --> 00:07:13,460
like I don't know how many weeks month

00:07:11,090 --> 00:07:16,130
of work into getting students up to

00:07:13,460 --> 00:07:18,110
speed to finally eventually maybe get us

00:07:16,130 --> 00:07:21,850
new contributors that then help us

00:07:18,110 --> 00:07:21,850
improve q mu thanks about the eyes

00:07:25,480 --> 00:07:31,340
just like last year we also had outreach

00:07:29,060 --> 00:07:34,010
sorry the arbitrary program is a program

00:07:31,340 --> 00:07:35,750
to support minorities and apparently

00:07:34,010 --> 00:07:37,910
it's not only therefore supporting

00:07:35,750 --> 00:07:39,700
female minorities but in general manager

00:07:37,910 --> 00:07:43,130
is because this year the person is male

00:07:39,700 --> 00:07:46,760
but we do have used the MTP emulation

00:07:43,130 --> 00:07:48,560
there which Bandhan is is mentoring I

00:07:46,760 --> 00:07:51,100
don't think we have to either a thanks

00:07:48,560 --> 00:07:53,030
to him too it's awesome

00:07:51,100 --> 00:07:55,700
so that's that's this like you Poli

00:07:53,030 --> 00:07:57,290
about expecting the most um how do we do

00:07:55,700 --> 00:07:59,419
I mean did we actually improve the code

00:07:57,290 --> 00:08:02,030
last year that did we grow a lot if we

00:07:59,419 --> 00:08:05,450
not grow a lot and the trend is very

00:08:02,030 --> 00:08:09,620
easy to see yes it's business as usual

00:08:05,450 --> 00:08:12,710
we grow at a steady linear rate our code

00:08:09,620 --> 00:08:16,700
base is going to hit 1.8 million lines

00:08:12,710 --> 00:08:20,680
of code reasonably soon if we don't do

00:08:16,700 --> 00:08:20,680
anything against it I come to that later

00:08:21,610 --> 00:08:29,840
we also have after a like slide down

00:08:25,520 --> 00:08:32,060
turn of commit rate and love of lines of

00:08:29,840 --> 00:08:34,310
code edit to the code base we are back

00:08:32,060 --> 00:08:39,380
into a reasonable spike of where we

00:08:34,310 --> 00:08:41,000
should be on our our like growth rate so

00:08:39,380 --> 00:08:43,960
we are actually growing more this year

00:08:41,000 --> 00:08:47,300
than we did the last couple two years

00:08:43,960 --> 00:08:49,940
and one thing that actually makes me the

00:08:47,300 --> 00:08:52,310
most happy is we're seeing a steady

00:08:49,940 --> 00:08:55,820
increase of reviewed bias and act buys

00:08:52,310 --> 00:08:58,900
so more and more people go in and review

00:08:55,820 --> 00:09:02,780
code at code make sure that things are

00:08:58,900 --> 00:09:04,160
saying before they hit the tree so even

00:09:02,780 --> 00:09:06,560
though we get more commits we actually

00:09:04,160 --> 00:09:08,780
also get a lot more videos in a

00:09:06,560 --> 00:09:12,740
proportionally bigger growth rate than

00:09:08,780 --> 00:09:15,620
just the commits themselves now who was

00:09:12,740 --> 00:09:17,839
actually doing all that work you can see

00:09:15,620 --> 00:09:22,700
that we do have a lot of individuals

00:09:17,839 --> 00:09:24,260
that work on qmu so basically the second

00:09:22,700 --> 00:09:26,720
biggest category that we have are

00:09:24,260 --> 00:09:28,010
individuals just people that are not

00:09:26,720 --> 00:09:31,490
affiliated or don't want to be

00:09:28,010 --> 00:09:33,140
affiliated with companies and just go

00:09:31,490 --> 00:09:36,080
and figure cue musical project to work

00:09:33,140 --> 00:09:37,190
let's just go and do it it's just

00:09:36,080 --> 00:09:38,240
exactly what you need in an open source

00:09:37,190 --> 00:09:40,700
environment because they

00:09:38,240 --> 00:09:42,860
you only have companies behind a project

00:09:40,700 --> 00:09:44,630
then you miss out on all the cool and

00:09:42,860 --> 00:09:46,190
fancy innovative parts because companies

00:09:44,630 --> 00:09:48,339
kind of tend to want to implement

00:09:46,190 --> 00:09:51,050
Enterprise II and whatever customers

00:09:48,339 --> 00:09:53,810
want to have features whereas

00:09:51,050 --> 00:09:56,000
individuals can't just go away and hang

00:09:53,810 --> 00:09:57,260
on whatever they like obviously just

00:09:56,000 --> 00:10:02,930
like the last I don't know 10 years

00:09:57,260 --> 00:10:04,399
redhead is number one by far and then we

00:10:02,930 --> 00:10:07,250
have the narrow coming up as number

00:10:04,399 --> 00:10:09,410
three awesome and IBM with su 90 and

00:10:07,250 --> 00:10:11,180
PowerPC obviously gets a pretty big

00:10:09,410 --> 00:10:15,770
slice and then we have all the others

00:10:11,180 --> 00:10:18,080
slowly coming down for commits so

00:10:15,770 --> 00:10:21,649
commits are basically counts maintained

00:10:18,080 --> 00:10:24,020
errs so commits means people who commit

00:10:21,649 --> 00:10:25,910
things into the tree so those are all

00:10:24,020 --> 00:10:29,270
your subsystem maintainer Zoar your

00:10:25,910 --> 00:10:32,120
people who are the first to pick up

00:10:29,270 --> 00:10:34,310
hatches into a key tree and there again

00:10:32,120 --> 00:10:36,890
weather has a like huge huge huge leap

00:10:34,310 --> 00:10:38,450
ahead in outcomes second and we have

00:10:36,890 --> 00:10:41,120
less individuals maintaining code and

00:10:38,450 --> 00:10:42,680
people writing code which is expected so

00:10:41,120 --> 00:10:46,790
that looks basically the same as last

00:10:42,680 --> 00:10:48,709
year for reviews again I mean just the

00:10:46,790 --> 00:10:50,420
sheer number of Red Hat people on in the

00:10:48,709 --> 00:10:52,820
community just means that they win by

00:10:50,420 --> 00:10:56,570
far the now who has done a really

00:10:52,820 --> 00:10:58,310
awesome job of reviewing code and you

00:10:56,570 --> 00:10:59,899
see that a lot of individuals actually

00:10:58,310 --> 00:11:02,029
also end up reviewing code not just

00:10:59,899 --> 00:11:04,010
writing code which is cool because you

00:11:02,029 --> 00:11:05,420
actually get input from people who don't

00:11:04,010 --> 00:11:07,279
necessarily have business incentive to

00:11:05,420 --> 00:11:09,290
do things that just like the project I

00:11:07,279 --> 00:11:12,700
just want to be part of a really big

00:11:09,290 --> 00:11:15,110
family which is what I would like to see

00:11:12,700 --> 00:11:18,230
now you might remember that last year

00:11:15,110 --> 00:11:21,620
our parole open one basically all three

00:11:18,230 --> 00:11:24,829
individual ranks right this year it's

00:11:21,620 --> 00:11:30,480
different this year peter is the one

00:11:24,829 --> 00:11:35,610
Peter come on Thank You Man thank you

00:11:30,480 --> 00:11:38,790
I have no idea how a single individual

00:11:35,610 --> 00:11:41,910
can maintain the cumulus write the most

00:11:38,790 --> 00:11:44,630
commits commit the most commits to the

00:11:41,910 --> 00:11:47,100
tree well that works as a maintainer and

00:11:44,630 --> 00:11:49,050
also review most of the commits in

00:11:47,100 --> 00:11:51,110
parallel to it I mean just doing one of

00:11:49,050 --> 00:11:54,410
those three basically is a full-time job

00:11:51,110 --> 00:11:58,139
one of the four is the full-time job now

00:11:54,410 --> 00:12:00,510
what can we expect next year we've seen

00:11:58,139 --> 00:12:02,820
a lot of cool innovative things that

00:12:00,510 --> 00:12:05,579
basically do doing doing those two days

00:12:02,820 --> 00:12:07,800
and you will see more today so you can

00:12:05,579 --> 00:12:09,570
probably expect most of them to hit the

00:12:07,800 --> 00:12:11,610
tree next year but I selected a few

00:12:09,570 --> 00:12:14,790
things that I think are noteworthy for

00:12:11,610 --> 00:12:19,260
qmu that we might be able to see in a

00:12:14,790 --> 00:12:23,519
keynote as status for next year for this

00:12:19,260 --> 00:12:24,959
year next year so the thing that I'm

00:12:23,519 --> 00:12:27,839
mostly thrilled about is multi-threaded

00:12:24,959 --> 00:12:29,760
TCG so TCG has traditionally always been

00:12:27,839 --> 00:12:31,350
thing of sing-off reddit you basically

00:12:29,760 --> 00:12:33,750
initially were only able to run a single

00:12:31,350 --> 00:12:36,389
CPU then somebody went ahead and enable

00:12:33,750 --> 00:12:39,329
multi CPU support you could then run

00:12:36,389 --> 00:12:40,709
four CPUs on a single host CPU which did

00:12:39,329 --> 00:12:42,750
not really give you performance boosts

00:12:40,709 --> 00:12:44,519
since you're suddenly running all your

00:12:42,750 --> 00:12:46,529
stuff still on a single CPU and you just

00:12:44,519 --> 00:12:48,449
you still have to do the concurrency

00:12:46,529 --> 00:12:51,389
part and so that slowed things down

00:12:48,449 --> 00:12:54,600
really with multi-threaded TCG you can

00:12:51,389 --> 00:12:57,209
now go and put multiple guest V CPUs

00:12:54,600 --> 00:13:00,120
onto multiple host BCP all host physical

00:12:57,209 --> 00:13:02,160
CPUs so if you have an 8 core system you

00:13:00,120 --> 00:13:06,329
can run an 8 core guest and actually

00:13:02,160 --> 00:13:08,339
have 8 cores used doing that in a fully

00:13:06,329 --> 00:13:11,040
platform agnostic fashion is very

00:13:08,339 --> 00:13:12,300
complicated so this is this is really

00:13:11,040 --> 00:13:14,639
awesome work that's happening there and

00:13:12,300 --> 00:13:17,060
it looks promising can't promise it but

00:13:14,639 --> 00:13:17,060
it looks promising

00:13:17,269 --> 00:13:22,139
another thing that people do get excited

00:13:20,160 --> 00:13:25,470
about let's see how well we do is spring

00:13:22,139 --> 00:13:27,110
cleaning we realized during the Q mu

00:13:25,470 --> 00:13:31,139
something which happened two days ago

00:13:27,110 --> 00:13:33,959
that our code base is growing as you've

00:13:31,139 --> 00:13:35,910
seen had a different rate than people

00:13:33,959 --> 00:13:38,069
actually end up converting code then

00:13:35,910 --> 00:13:39,689
people end up improving code so you have

00:13:38,069 --> 00:13:42,180
a really good chance of if you just take

00:13:39,689 --> 00:13:44,040
a random file in the codebase you get a

00:13:42,180 --> 00:13:46,470
really bad example of how to not do

00:13:44,040 --> 00:13:48,000
things basically since it just they have

00:13:46,470 --> 00:13:50,220
lots of old code lying around that we

00:13:48,000 --> 00:13:52,290
still carry around that still works it's

00:13:50,220 --> 00:13:54,240
just not done according to the like

00:13:52,290 --> 00:13:58,230
latest techniques that we have to do

00:13:54,240 --> 00:14:00,000
things like object models so one thing

00:13:58,230 --> 00:14:02,370
that we will start to tackle during the

00:14:00,000 --> 00:14:05,550
next year is we will start to deprecated

00:14:02,370 --> 00:14:07,110
code that has basically either not been

00:14:05,550 --> 00:14:09,329
touched for a long time or not being

00:14:07,110 --> 00:14:11,579
converted to our new models of doing

00:14:09,329 --> 00:14:14,639
things so that people then get some

00:14:11,579 --> 00:14:17,459
leeway of improving the code and then

00:14:14,639 --> 00:14:18,600
expect one or two years from now from or

00:14:17,459 --> 00:14:22,500
from the point in time when we started

00:14:18,600 --> 00:14:24,690
application warnings that graph that you

00:14:22,500 --> 00:14:27,269
saw that's a steady the increase will

00:14:24,690 --> 00:14:30,300
have a massive job we will remove a lot

00:14:27,269 --> 00:14:32,459
of lines of code of unused code so if

00:14:30,300 --> 00:14:34,529
you know that you care about a subsystem

00:14:32,459 --> 00:14:35,819
that is basically unmaintained that

00:14:34,529 --> 00:14:39,690
hasn't been converted there just happens

00:14:35,819 --> 00:14:41,579
to work I would recommend to sit down

00:14:39,690 --> 00:14:46,829
soon and talk to your employer or just

00:14:41,579 --> 00:14:50,190
talk to you wife whoever actually steers

00:14:46,829 --> 00:14:53,610
your work time you will want to maintain

00:14:50,190 --> 00:14:55,589
those parts you saw the talk about USB

00:14:53,610 --> 00:14:56,490
so we will have yet another architecture

00:14:55,589 --> 00:14:58,560
next year poly

00:14:56,490 --> 00:15:02,040
I guess the trend will continue people

00:14:58,560 --> 00:15:03,660
just invent new ones and one really cool

00:15:02,040 --> 00:15:04,980
thing that's going to hit next year is

00:15:03,660 --> 00:15:07,980
we will basically become the next type

00:15:04,980 --> 00:15:10,740
of e so you will be able to run to spawn

00:15:07,980 --> 00:15:16,589
hyper-v devices in qmu and then look

00:15:10,740 --> 00:15:18,990
like hyper-v if you like KVM from-- so

00:15:16,589 --> 00:15:20,699
far or if you did not like it but i

00:15:18,990 --> 00:15:24,720
would certainly prefer if you're on the

00:15:20,699 --> 00:15:27,380
first category scan that code that's a

00:15:24,720 --> 00:15:32,040
UL take your phone out dude right now

00:15:27,380 --> 00:15:34,620
scan it go to that web page and answer

00:15:32,040 --> 00:15:36,810
the poll so we have a poll asking you

00:15:34,620 --> 00:15:39,870
whether you liked it why you liked it

00:15:36,810 --> 00:15:41,480
who you why you here even in the first

00:15:39,870 --> 00:15:45,329
place and where you want to be next year

00:15:41,480 --> 00:15:47,399
based on that data we will decide what

00:15:45,329 --> 00:15:49,470
we should do with KVM from next year so

00:15:47,399 --> 00:15:55,370
this is basically your chance to improve

00:15:49,470 --> 00:15:55,370
the situation next year or not

00:16:04,260 --> 00:16:11,450
all right so with that happy hiking ends

00:16:09,090 --> 00:16:11,450

YouTube URL: https://www.youtube.com/watch?v=tMDnU1EktIA


