Title: [2016] Status Update on KVM-COLO FT by Hailang Zhang
Publication date: 2016-09-09
Playlist: KVM Forum 2016
Description: 
	COLO is an ideal Application-agnostic Solution for Non-stop service in the cloud. Under COLO mode, both primary VM (PVM) and secondary VM (SVM) are run in parallel. They receive the same request from client, and generate response in parallel too. If the response packets from PVM and SVM are identical, they are released immediately. Otherwise, a VM checkpoint (on demand) is conducted. COLO prototype has been realized, and most of the patches has been reviewed in QEMU community. Same as last year, in this talk, we will talk about COLO implementation in QEMU, and report the latest progress from Huawei, Fujitsu, Intel, Since COLO is still in the early stage, some future works need to be done to make it commercial use, we will talk about that too.

Hailiang Zhang
Software Engineer, Huawei

Hailiang Zhang is a software engineer at Huawei for 4 years. Currently he focus on Virtual Machine (VM) replication projects (COLO on QEMU).

Slides: http://www.linux-kvm.org/images/a/af/03x08B-Hailang_Zhang-Status_Update_on_KVM-COLO_FT.pdf
Captions: 
	00:00:10,190 --> 00:00:17,699
I'm Tommy I'm working in Harvey company

00:00:14,269 --> 00:00:22,080
my topic is the sitter's updates about

00:00:17,699 --> 00:00:24,720
colo FG in this presentation we will

00:00:22,080 --> 00:00:26,330
talk about the cost Korean lockstep

00:00:24,720 --> 00:00:28,830
Sheen

00:00:26,330 --> 00:00:33,329
what's your machine for nonstop service

00:00:28,830 --> 00:00:35,940
technology we have four paths to

00:00:33,329 --> 00:00:38,790
introduce in the first pass we will

00:00:35,940 --> 00:00:42,480
introduce to you the conceptual cause

00:00:38,790 --> 00:00:45,210
growing the lockstep you and today we

00:00:42,480 --> 00:00:49,039
will talk the details about the Colo

00:00:45,210 --> 00:00:51,960
Desai and some type of knowledge dichos

00:00:49,039 --> 00:00:53,820
thing in the in the third part we will

00:00:51,960 --> 00:00:56,969
give you some information about the

00:00:53,820 --> 00:01:01,170
current editor SL colo in QM platform

00:00:56,969 --> 00:01:04,199
and since color is due a prototype so

00:01:01,170 --> 00:01:10,740
there are lots of future work needs to

00:01:04,199 --> 00:01:13,140
be done to improve it so let's start the

00:01:10,740 --> 00:01:17,700
conceptual work humor scene replication

00:01:13,140 --> 00:01:22,320
so what is we am replication is thought

00:01:17,700 --> 00:01:24,210
it is a software solution for business

00:01:22,320 --> 00:01:26,430
continued and the disaster recovery

00:01:24,210 --> 00:01:29,579
through replication organist eagle

00:01:26,430 --> 00:01:31,920
hardware fault tolerance per application

00:01:29,579 --> 00:01:35,570
the state so primary we am to the

00:01:31,920 --> 00:01:39,869
secondary am on different physical news

00:01:35,570 --> 00:01:45,509
here we call primary am as the PBM and

00:01:39,869 --> 00:01:48,630
the secondary em at the SVM Passat just

00:01:45,509 --> 00:01:54,090
as shown in this picture there are two

00:01:48,630 --> 00:01:57,270
physical most the PM is running in the

00:01:54,090 --> 00:02:02,729
physical in the primary node and as we

00:01:57,270 --> 00:02:05,280
are running on the second arun node the

00:02:02,729 --> 00:02:10,069
states of the PM is sakra neither the

00:02:05,280 --> 00:02:13,260
two as we're me a specific frequency and

00:02:10,069 --> 00:02:13,950
suit as we am is where leader replica

00:02:13,260 --> 00:02:19,220
with the

00:02:13,950 --> 00:02:23,690
p.m. if there are Hardware floors dog

00:02:19,220 --> 00:02:30,000
villa or detected by the by the

00:02:23,690 --> 00:02:36,750
equipment so as we have wheel we article

00:02:30,000 --> 00:02:40,800
wrote their service so generally

00:02:36,750 --> 00:02:43,860
speaking there are two kinds of we are a

00:02:40,800 --> 00:02:46,140
replication approaches the first of all

00:02:43,860 --> 00:02:49,230
is the lockstep you

00:02:46,140 --> 00:02:53,069
it is instruction level oxidative method

00:02:49,230 --> 00:02:57,060
in this approach ppm and I am executor

00:02:53,069 --> 00:03:03,269
in the impeller for deterministic

00:02:57,060 --> 00:03:05,610
instruction in contrast lockstep he is

00:03:03,269 --> 00:03:11,010
applied for no deterministic instruction

00:03:05,610 --> 00:03:15,590
so for this replication approach it's

00:03:11,010 --> 00:03:19,230
only suitable for single for single

00:03:15,590 --> 00:03:24,410
processor we am and their performance

00:03:19,230 --> 00:03:26,940
will decrease dramatically another

00:03:24,410 --> 00:03:30,500
another we a we are a replication

00:03:26,940 --> 00:03:37,260
approach is the continuous checkpoint

00:03:30,500 --> 00:03:44,130
it's it's in this approach that we our

00:03:37,260 --> 00:03:46,950
misdeeds are replicated at each epoch is

00:03:44,130 --> 00:03:51,780
well known as the period we have a

00:03:46,950 --> 00:03:57,620
replication just as the reverse on same

00:03:51,780 --> 00:04:00,569
platform and max track 1g on QM platform

00:03:57,620 --> 00:04:03,600
all these two we are repeated

00:04:00,569 --> 00:04:07,470
replication approaches has how some

00:04:03,600 --> 00:04:10,650
disease as you can see from its

00:04:07,470 --> 00:04:15,269
principle their principle they all

00:04:10,650 --> 00:04:20,160
suffered from or or set excessive or

00:04:15,269 --> 00:04:24,330
head I mean we am checkpoints so their

00:04:20,160 --> 00:04:27,010
performance is not good

00:04:24,330 --> 00:04:29,230
that's why we introduce new

00:04:27,010 --> 00:04:35,380
and more efficient we have a replication

00:04:29,230 --> 00:04:38,260
approach in this we have a replication

00:04:35,380 --> 00:04:38,730
approach we considered we am and the

00:04:38,260 --> 00:04:45,070
clans

00:04:38,730 --> 00:04:49,300
as a system as a system of network that

00:04:45,070 --> 00:04:52,530
requires a response system through the

00:04:49,300 --> 00:04:55,990
current zoning care about the response

00:04:52,530 --> 00:04:58,390
if the pure are my death I am in the we

00:04:55,990 --> 00:05:02,080
are a replication Iraq I reply with the

00:04:58,390 --> 00:05:05,950
sea with a identical response from the

00:05:02,080 --> 00:05:08,710
clients point of view T consider both of

00:05:05,950 --> 00:05:11,860
them are in the same identical and he is

00:05:08,710 --> 00:05:17,290
the same state it doesn't matter is

00:05:11,860 --> 00:05:22,630
their internal state based on this

00:05:17,290 --> 00:05:25,750
output similarity principle we propose

00:05:22,630 --> 00:05:29,110
the new approach we are a replication

00:05:25,750 --> 00:05:32,260
approach named as the cause green the

00:05:29,110 --> 00:05:37,810
lockstep she virtual machine for nonstop

00:05:32,260 --> 00:05:42,180
service we call it scholar for thought

00:05:37,810 --> 00:05:47,590
in this approach its wrongs p.m. and SVM

00:05:42,180 --> 00:05:51,850
in parallel and its it compares the

00:05:47,590 --> 00:05:57,580
output response package so if the

00:05:51,850 --> 00:06:00,370
compare result is identical see it will

00:05:57,580 --> 00:06:03,130
not need to Italy are not needed to do

00:06:00,370 --> 00:06:08,710
the check points if the compare result

00:06:03,130 --> 00:06:12,040
is not identical saying its it indicates

00:06:08,710 --> 00:06:16,030
that we needed to do the check point to

00:06:12,040 --> 00:06:25,300
surprise the state so as we am a pure m2

00:06:16,030 --> 00:06:28,780
as banne true from the principle color

00:06:25,300 --> 00:06:33,250
we can we can see that it's it is

00:06:28,780 --> 00:06:38,110
actually an improved solution of the

00:06:33,250 --> 00:06:40,300
continuous checkpoint so is more

00:06:38,110 --> 00:06:43,060
efficient compared with the

00:06:40,300 --> 00:06:52,090
um checkpoint because it's highly

00:06:43,060 --> 00:06:55,659
reduced the checkpoint of increase so as

00:06:52,090 --> 00:06:59,940
you can see and the press protocol is is

00:06:55,659 --> 00:06:59,940
simple but it does work

00:07:01,740 --> 00:07:13,690
okay let's talk about the design and the

00:07:06,970 --> 00:07:16,030
technology details or Colo this diagram

00:07:13,690 --> 00:07:20,400
is the architectural color

00:07:16,030 --> 00:07:24,699
it's raw it consists a pair of networked

00:07:20,400 --> 00:07:28,300
physical knows the promoter running the

00:07:24,699 --> 00:07:32,229
PBM and the secondary so secondary nodes

00:07:28,300 --> 00:07:38,289
around in the SRAM to meeting where

00:07:32,229 --> 00:07:42,060
leader browse I swam their heartbeats

00:07:38,289 --> 00:07:47,529
components running on both physical news

00:07:42,060 --> 00:07:50,050
it's a decomp periodically checked read

00:07:47,529 --> 00:07:54,250
from availability so if there are

00:07:50,050 --> 00:07:56,560
Hardware first dog failure we can't

00:07:54,250 --> 00:08:01,479
detect it and the second you know that

00:07:56,560 --> 00:08:04,240
will trigger your raw process so that

00:08:01,479 --> 00:08:10,930
there are as we are we were chicken with

00:08:04,240 --> 00:08:13,440
their service for the checkpoints I feel

00:08:10,930 --> 00:08:16,330
the photo we have the checkpoint we

00:08:13,440 --> 00:08:19,719
achieve it by reusing the allow

00:08:16,330 --> 00:08:26,440
immigration on QM platform so for this

00:08:19,719 --> 00:08:30,900
party is is not come it's not complex so

00:08:26,440 --> 00:08:35,640
for the Colo desk manager it's used to

00:08:30,900 --> 00:08:35,640
relies the blocker application

00:08:35,649 --> 00:08:41,050
we know that for Cole the key

00:08:38,289 --> 00:08:44,800
characteristic of a color is it uses the

00:08:41,050 --> 00:08:47,730
compare results to determine whether or

00:08:44,800 --> 00:08:52,260
not to do the checkpoint so we need a

00:08:47,730 --> 00:08:52,260
module to do the comparing

00:08:52,760 --> 00:09:02,450
that is the coal procs okay we will talk

00:08:59,030 --> 00:09:06,410
about the details of how some ammonia

00:09:02,450 --> 00:09:09,700
see in this picture so first let's talk

00:09:06,410 --> 00:09:12,650
about how a local replication works

00:09:09,700 --> 00:09:16,010
there are two diagram the first diagram

00:09:12,650 --> 00:09:18,590
is about the now sir Tedesco workflow

00:09:16,010 --> 00:09:24,470
and the second way is the Sarah desk

00:09:18,590 --> 00:09:25,550
overflow we have a replication and we

00:09:24,470 --> 00:09:29,660
can see there that the replication

00:09:25,550 --> 00:09:33,520
process @vm the storage are quite a

00:09:29,660 --> 00:09:36,160
similar let's take the now Sarah desk

00:09:33,520 --> 00:09:42,020
workflow for example to illustrate the

00:09:36,160 --> 00:09:44,330
Pollock replication process here

00:09:42,020 --> 00:09:48,710
actually here we apply a trick to

00:09:44,330 --> 00:09:52,160
support the desk of integer pointer we

00:09:48,710 --> 00:09:56,810
were not allowed as we I am writing

00:09:52,160 --> 00:10:00,010
their own desk directly instead that we

00:09:56,810 --> 00:10:00,010
use that's a power tool

00:10:04,960 --> 00:10:12,050
here we use a desk a buffer to catch the

00:10:09,100 --> 00:10:18,130
actually I was writing so that it's a

00:10:12,050 --> 00:10:18,130
counter right directly into his own desk

00:10:19,180 --> 00:10:26,450
to cheat to achieve the checkpoint we

00:10:22,790 --> 00:10:30,700
needed to copy and forward the PM's

00:10:26,450 --> 00:10:34,640
writes in deeds to the secondary desk

00:10:30,700 --> 00:10:38,110
but before this deeds being running into

00:10:34,640 --> 00:10:42,710
the secondary desk we needed to copy the

00:10:38,110 --> 00:10:45,860
read its original contains from the

00:10:42,710 --> 00:10:50,240
secondary desk to the desk buffer so

00:10:45,860 --> 00:10:53,390
that to achieve the checkpoint is very

00:10:50,240 --> 00:10:56,810
simple we just imported the desk buffer

00:10:53,390 --> 00:11:01,790
to achieve the checkpoint so that the

00:10:56,810 --> 00:11:05,430
content of desk in the desk for as we

00:11:01,790 --> 00:11:09,510
and the desk for the PM are identical

00:11:05,430 --> 00:11:14,279
after a checkpoint we do fear fear

00:11:09,510 --> 00:11:17,850
process is only need to flush the did

00:11:14,279 --> 00:11:23,730
that study in the death buffer into his

00:11:17,850 --> 00:11:33,630
own desk I'm here it is the secondary

00:11:23,730 --> 00:11:38,520
desk to achieve the puerile process ok

00:11:33,630 --> 00:11:43,680
let's let's see how that we are we am

00:11:38,520 --> 00:11:46,470
steet-ponte for this part actually it is

00:11:43,680 --> 00:11:51,050
based on the law immigration on qm is

00:11:46,470 --> 00:11:56,370
not complex let's take a look at the

00:11:51,050 --> 00:11:59,339
workflow the primer mode that we are

00:11:56,370 --> 00:12:01,860
check if it needs a checkpoint if there

00:11:59,339 --> 00:12:04,080
are 30 years the prima knew that we all

00:12:01,860 --> 00:12:07,890
seen the command to the second renewed

00:12:04,080 --> 00:12:11,550
to ask for checkpoint and then the

00:12:07,890 --> 00:12:17,240
second renew that we opposed VM and it

00:12:11,550 --> 00:12:20,600
also replied reply with with a

00:12:17,240 --> 00:12:25,100
checkpoint the reply message to the

00:12:20,600 --> 00:12:29,400
primary node after that boost the

00:12:25,100 --> 00:12:35,810
pyramid as we am positive uphold and

00:12:29,400 --> 00:12:39,120
then Prime know that we are migrated

00:12:35,810 --> 00:12:44,190
p.m. stated to the second second year in

00:12:39,120 --> 00:12:48,360
order but here it's we are not for us

00:12:44,190 --> 00:12:51,630
did directly into the VM because during

00:12:48,360 --> 00:12:58,560
the process there may be thoughts

00:12:51,630 --> 00:13:01,800
thoughts some error happened so here we

00:12:58,560 --> 00:13:05,100
first test though the PM's needs into

00:13:01,800 --> 00:13:10,950
the memory buffer first before flush

00:13:05,100 --> 00:13:13,740
this leads into as well after second

00:13:10,950 --> 00:13:17,080
renewal receives all the the complete

00:13:13,740 --> 00:13:20,470
the completed is it because

00:13:17,080 --> 00:13:25,030
flush the deeds from the memory flash to

00:13:20,470 --> 00:13:27,880
the as well after that who's the P we

00:13:25,030 --> 00:13:36,580
are miles at the web resume to Rusty

00:13:27,880 --> 00:13:40,180
okay so the process is simple but you

00:13:36,580 --> 00:13:43,300
maybe not note that we need to tube

00:13:40,180 --> 00:13:49,140
house VM during the checkpoint so if the

00:13:43,300 --> 00:13:54,450
time is too long we can see that the

00:13:49,140 --> 00:13:59,250
proper form is so we am will be degrade

00:13:54,450 --> 00:14:05,920
dramatically so we needed to reduce the

00:13:59,250 --> 00:14:10,270
post ham for the checkpoint actually we

00:14:05,920 --> 00:14:14,110
can optimize its from several aspects

00:14:10,270 --> 00:14:17,970
first week I reduced the transmitted the

00:14:14,110 --> 00:14:23,160
dirty pages that we went to checkpoint

00:14:17,970 --> 00:14:26,590
second we can reduce the amount of

00:14:23,160 --> 00:14:29,740
update hindered page from the desk

00:14:26,590 --> 00:14:35,140
buffer from the sorry for Muslim memory

00:14:29,740 --> 00:14:44,260
buffer and the third method is to reduce

00:14:35,140 --> 00:14:48,460
the time of flashing deeds okay here is

00:14:44,260 --> 00:14:49,930
the call aprox design we know that the

00:14:48,460 --> 00:14:53,070
keep we know that the main

00:14:49,930 --> 00:14:56,320
characteristic for color is it uses a

00:14:53,070 --> 00:15:01,540
net package comparing results to

00:14:56,320 --> 00:15:06,510
determine whether or not to do the CHEO

00:15:01,540 --> 00:15:11,560
pointer so the culprit the Colo procs

00:15:06,510 --> 00:15:14,220
that is our corporate process is quite

00:15:11,560 --> 00:15:14,220
important

00:15:19,370 --> 00:15:28,260
in this process we needed to unpackage

00:15:23,130 --> 00:15:31,140
the network package so and also needed

00:15:28,260 --> 00:15:34,820
to manage the connection so a good idea

00:15:31,140 --> 00:15:38,250
is to reuse the tcp/ip is deke and

00:15:34,820 --> 00:15:42,260
netfilter components that in Conor

00:15:38,250 --> 00:15:49,470
because it's variable as to analysis

00:15:42,260 --> 00:15:54,770
analysis the package yes we do realize

00:15:49,470 --> 00:15:57,180
this scheme firstly just based on TCP

00:15:54,770 --> 00:16:03,860
SDK and the net field components and

00:15:57,180 --> 00:16:08,160
it's a it does a comparable performance

00:16:03,860 --> 00:16:10,530
but unfortunately we need to

00:16:08,160 --> 00:16:14,390
modification the color and the IP

00:16:10,530 --> 00:16:20,840
keyboards components and it seems less

00:16:14,390 --> 00:16:24,540
acceptable for for the kernel community

00:16:20,840 --> 00:16:28,410
so we have no choice and we realize

00:16:24,540 --> 00:16:30,750
another scheme and release it totally in

00:16:28,410 --> 00:16:39,540
the user space

00:16:30,750 --> 00:16:42,810
to be exact totally in humor and what

00:16:39,540 --> 00:16:46,830
the lucky thing is that the chimú also

00:16:42,810 --> 00:16:53,490
has a has its own TCP and IP stick name

00:16:46,830 --> 00:16:59,580
named as s air I I P so we realized the

00:16:53,490 --> 00:17:03,390
USBs scheme based on its base tides and

00:16:59,580 --> 00:17:07,050
the compared with of the kernel the

00:17:03,390 --> 00:17:10,010
Colonel Cole aprox scheme is more

00:17:07,050 --> 00:17:10,010
flexible

00:17:14,910 --> 00:17:25,810
so this is the USS bisque scheme as you

00:17:20,980 --> 00:17:28,360
can see we realize several favorite

00:17:25,810 --> 00:17:33,820
plugins to achieve different funky

00:17:28,360 --> 00:17:36,880
Sheen's there are future Mira Mira used

00:17:33,820 --> 00:17:42,630
to copy and them forward clients package

00:17:36,880 --> 00:17:47,740
to the at the end because in this

00:17:42,630 --> 00:17:50,650
architecture the package will the

00:17:47,740 --> 00:17:55,930
package that from the clients and the

00:17:50,650 --> 00:17:58,090
external network only be seen through

00:17:55,930 --> 00:18:00,820
the primary notice so we need a

00:17:58,090 --> 00:18:04,210
components to copy and forward the

00:18:00,820 --> 00:18:07,000
package to the second renewed

00:18:04,210 --> 00:18:14,380
so here the future mirror are plugins to

00:18:07,000 --> 00:18:18,130
achieve this purpose the future

00:18:14,380 --> 00:18:23,470
redirector plugin here is to redirect

00:18:18,130 --> 00:18:26,970
the package and we also have independent

00:18:23,470 --> 00:18:37,480
coral compare cojones to achieve the

00:18:26,970 --> 00:18:43,270
comparing tasks so yes I saw and here is

00:18:37,480 --> 00:18:49,540
a test that based on colonel prague

00:18:43,270 --> 00:18:54,550
theme from this test we can see that it

00:18:49,540 --> 00:18:56,980
does achieve good performance here that

00:18:54,550 --> 00:18:59,050
history results has been normalized the

00:18:56,980 --> 00:19:01,900
to turn it hue system to see the

00:18:59,050 --> 00:19:08,410
difference and its performance we can

00:19:01,900 --> 00:19:14,620
see that color can achieve 80% almost

00:19:08,410 --> 00:19:17,580
80% of the net hue system and it can

00:19:14,620 --> 00:19:17,580
achieve

00:19:18,150 --> 00:19:23,779
96% of the peak performance suta

00:19:22,330 --> 00:19:28,999
performance I think he is

00:19:23,779 --> 00:19:32,619
is very good compared to me that these

00:19:28,999 --> 00:19:36,019
two to me

00:19:32,619 --> 00:19:41,989
really perky she that I thought we

00:19:36,019 --> 00:19:46,279
talked before sue for the current asset

00:19:41,989 --> 00:19:48,169
is a Tercel color in QM is we divided

00:19:46,279 --> 00:19:50,989
the color into three passed by the

00:19:48,169 --> 00:19:55,009
publishing and posted their purchased

00:19:50,989 --> 00:19:58,369
separately as three single series to

00:19:55,009 --> 00:20:00,769
community the Colo framework at the

00:19:58,369 --> 00:20:01,279
co-op block replication under the collar

00:20:00,769 --> 00:20:07,009
procs

00:20:01,279 --> 00:20:09,229
and for the color framework it is only

00:20:07,009 --> 00:20:12,559
includes we arms did check upon the

00:20:09,229 --> 00:20:17,200
process and of your fear process we have

00:20:12,559 --> 00:20:20,629
saying we have a post he'd the eighteen

00:20:17,200 --> 00:20:25,519
eighteenth rushing to the community and

00:20:20,629 --> 00:20:29,359
it is under review now for the block

00:20:25,519 --> 00:20:32,330
replication we have posted the announcer

00:20:29,359 --> 00:20:38,389
storage replication scheme and it has

00:20:32,330 --> 00:20:43,159
been accept and has been merged to

00:20:38,389 --> 00:20:47,239
stefan's a branch I think it will be go

00:20:43,159 --> 00:20:52,519
to the upstream soon for the Cole aprox

00:20:47,239 --> 00:20:54,950
we achieve several plugins and a set of

00:20:52,519 --> 00:20:59,029
them separately and the path of them

00:20:54,950 --> 00:21:01,729
have been merged into upstream like the

00:20:59,029 --> 00:21:07,070
net theater piece net feared buffer and

00:21:01,729 --> 00:21:10,580
the mural for the users abyss package

00:21:07,070 --> 00:21:15,229
compare series is you're working in

00:21:10,580 --> 00:21:23,299
process and the Alliance the Alliance

00:21:15,229 --> 00:21:26,869
rushing has been posted so as you can

00:21:23,299 --> 00:21:29,029
see color is your prototype and there

00:21:26,869 --> 00:21:34,190
are a lost soul future work needs to be

00:21:29,029 --> 00:21:37,159
done to improve it to make it be Krauser

00:21:34,190 --> 00:21:43,820
use commercial use

00:21:37,159 --> 00:21:46,429
commercial usage and first are we I

00:21:43,820 --> 00:21:49,090
think we need to really revise the

00:21:46,429 --> 00:21:52,429
patches according to to the review

00:21:49,090 --> 00:21:55,549
feedbacks and get patch patch is

00:21:52,429 --> 00:21:57,200
accepted into upstream saying we needed

00:21:55,549 --> 00:22:01,909
to develop the continuous we arm

00:21:57,200 --> 00:22:06,830
replication and the third we need to

00:22:01,909 --> 00:22:09,320
support that Sarah desk and what's more

00:22:06,830 --> 00:22:12,739
important is we need to optimize the

00:22:09,320 --> 00:22:17,119
performance because we after we switch

00:22:12,739 --> 00:22:21,259
to the USBs whole box game I think the

00:22:17,119 --> 00:22:29,859
performance will be degrade so we need

00:22:21,259 --> 00:22:29,859
to do that so that's all any question

00:22:33,830 --> 00:22:36,610
okay

00:22:41,419 --> 00:22:46,909
so I have a couple of questions

00:22:43,609 --> 00:22:48,669
regarding the checkpoint so when you

00:22:46,909 --> 00:22:52,759
have to do a checkpoint do you need to

00:22:48,669 --> 00:22:55,940
copy all the memory from the PBM to the

00:22:52,759 --> 00:22:58,089
Espeon no we only needed to the increase

00:22:55,940 --> 00:23:02,809
meant

00:22:58,089 --> 00:23:05,029
30p geez yeah because we have a copy

00:23:02,809 --> 00:23:06,889
we'll keep a copy over the PA I mean in

00:23:05,029 --> 00:23:09,379
the second row okay

00:23:06,889 --> 00:23:11,419
yeah right yeah I see so another

00:23:09,379 --> 00:23:12,769
question is how often do you have to do

00:23:11,419 --> 00:23:18,349
a checkpoint

00:23:12,769 --> 00:23:22,219
actually yeah yeah actually our test we

00:23:18,349 --> 00:23:25,669
find that in most cases we don't need to

00:23:22,219 --> 00:23:33,679
do the checkpoint so actually we have

00:23:25,669 --> 00:23:37,579
some of whom we have optimizes as a pure

00:23:33,679 --> 00:23:43,219
read the checkpoint about 10 seconds if

00:23:37,579 --> 00:23:45,519
there is if there's data over there if

00:23:43,219 --> 00:23:51,099
the compare results is always identical

00:23:45,519 --> 00:23:56,690
we still need to do the checkpoint about

00:23:51,099 --> 00:23:57,669
10 seconds the time and yeah you can

00:23:56,690 --> 00:24:01,149
keep it

00:23:57,669 --> 00:24:01,149
okay yeah

00:24:02,110 --> 00:24:09,040
yeah yeah yeah that's true yeah okay and

00:24:07,120 --> 00:24:14,020
and when you do a checkpoint or what's

00:24:09,040 --> 00:24:18,190
the blackout time like well like how

00:24:14,020 --> 00:24:20,980
long does the p.m. past when you have to

00:24:18,190 --> 00:24:24,700
do a checkpoint you means pom pom for

00:24:20,980 --> 00:24:27,370
the average time do you have any it it

00:24:24,700 --> 00:24:30,790
all depends I think actually we have we

00:24:27,370 --> 00:24:39,520
do have several methods to reduce it and

00:24:30,790 --> 00:24:41,950
I think we can reduce its inside one

00:24:39,520 --> 00:24:46,590
second I think we can achieve this

00:24:41,950 --> 00:24:46,590
target yeah

00:24:51,760 --> 00:24:54,960

YouTube URL: https://www.youtube.com/watch?v=ecbpYRi1KHw


