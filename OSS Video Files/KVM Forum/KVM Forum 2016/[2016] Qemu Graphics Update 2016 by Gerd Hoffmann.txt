Title: [2016] Qemu Graphics Update 2016 by Gerd Hoffmann
Publication date: 2016-09-12
Playlist: KVM Forum 2016
Description: 
	This talk will give an overview about the graphic-related changes in qemu happened last year and the plans for the future. It will focus on virtio-gpu, spice, virgl and opengl. gpu device assignment and vgpu will be covered too.

Gerd Hoffmann
Red Hat

Gerd Hoffmann is working on virtualization. He started a few years back with user mode linux. Later the focus shifted to Xen. Nowdays he is working on qemu and kvm for the Red Hat. Currently he maintains spice and usb subsystems in qemu. Gerd gave various talks on virtualization-focuced conferences (Xen Summit, KVM Forum) and on german linux conferences (LinuxTag, Linux Kongress).
Captions: 
	00:00:23,140 --> 00:00:29,539
and I'm imagining

00:00:26,270 --> 00:00:32,660
thank you as dream towards the first

00:00:29,539 --> 00:00:35,250
graphics card emulation and also the

00:00:32,660 --> 00:00:37,699
display side of things

00:00:35,250 --> 00:00:40,870
the place is getting too

00:00:37,699 --> 00:00:40,870
as is

00:00:41,150 --> 00:00:47,690
times I want to talk to them what

00:00:45,420 --> 00:00:47,690
happened

00:00:52,240 --> 00:00:55,200
what happened

00:00:56,130 --> 00:01:02,820
yeah

00:00:58,289 --> 00:01:05,359
the topic of Casa but I do notice in the

00:01:02,820 --> 00:01:05,359
last year

00:01:07,369 --> 00:01:14,560
this holds up over Giovanelli drugs and

00:01:11,040 --> 00:01:18,030
 and finally

00:01:14,560 --> 00:01:18,030
if you assignment and

00:01:20,060 --> 00:01:23,560
so let's not

00:01:25,220 --> 00:01:33,410
most honest and confusion the being

00:01:27,980 --> 00:01:41,270
those two devices for me GA and we also

00:01:33,410 --> 00:01:46,370
have PCI device and best leader of very

00:01:41,270 --> 00:01:53,440
Sonia because I'm VGA is just the same

00:01:46,370 --> 00:01:53,440
as what I did to be hyper not digital

00:01:54,100 --> 00:01:59,770
which is a opportunity Karthus pretty

00:01:57,250 --> 00:02:02,909
much identical to his Astana media enemy

00:01:59,770 --> 00:02:02,909
have an emu

00:02:04,670 --> 00:02:09,240
immediately mode and as soon as the

00:02:07,650 --> 00:02:13,770
guests - oats

00:02:09,240 --> 00:02:16,400
because I think us display using a

00:02:13,770 --> 00:02:21,890
bottom command such as go back to

00:02:16,400 --> 00:02:24,560
and the display it receives using the

00:02:21,890 --> 00:02:28,180
little commands and if you reject the

00:02:24,560 --> 00:02:28,180
device in the section

00:02:31,480 --> 00:02:33,540
you

00:02:42,150 --> 00:02:49,810
so the VGA mode is useful for backward

00:02:46,000 --> 00:02:52,090
compatibility it cause you know on x86

00:02:49,810 --> 00:02:53,710
hardware and which has been there for

00:02:52,090 --> 00:02:56,320
ages and pretty much everything knows

00:02:53,710 --> 00:02:58,660
how to talk to it that's also quite

00:02:56,320 --> 00:03:00,850
useful for the firm by frame buffer

00:02:58,660 --> 00:03:04,990
because it's easy to set up and once you

00:03:00,850 --> 00:03:09,870
have set it up it just works because you

00:03:04,990 --> 00:03:12,340
will have the usual tracking in place to

00:03:09,870 --> 00:03:15,820
so you don't have to do anything on

00:03:12,340 --> 00:03:18,100
updates and contrast into an boot IO gpo

00:03:15,820 --> 00:03:20,650
mode you explicitly have to send over to

00:03:18,100 --> 00:03:23,110
i/o GPU you have expertise and commands

00:03:20,650 --> 00:03:28,930
to the device to get your display

00:03:23,110 --> 00:03:32,530
updated the only thing VGA mode is not

00:03:28,930 --> 00:03:35,440
working arm for the usual cash currency

00:03:32,530 --> 00:03:38,080
introduced same problem as in a VGA

00:03:35,440 --> 00:03:40,209
itself is not working on arm at least

00:03:38,080 --> 00:03:44,709
not on real arm happier if you're

00:03:40,209 --> 00:03:51,160
running your arm gasps emulated with TCG

00:03:44,709 --> 00:03:54,040
on x86 hardware it works so on arm you

00:03:51,160 --> 00:04:01,450
just can use video GPO PCI device

00:03:54,040 --> 00:04:04,750
without VGA compatibility and there's

00:04:01,450 --> 00:04:09,670
work in progress by Laszlo to actually

00:04:04,750 --> 00:04:14,890
create a driver for the movie MF from

00:04:09,670 --> 00:04:18,010
there to use to be able to use this

00:04:14,890 --> 00:04:20,530
device for output but you'll probably

00:04:18,010 --> 00:04:23,290
not get if he frame buffer working on

00:04:20,530 --> 00:04:25,810
that but it should work at least for the

00:04:23,290 --> 00:04:28,200
film the display itself and maybe also

00:04:25,810 --> 00:04:28,200
prop

00:04:29,680 --> 00:04:33,800
yeah that's that's the important thing

00:04:32,180 --> 00:04:44,900
if you want to select to come on that

00:04:33,800 --> 00:04:47,150
you can do that I was a that IgA device

00:04:44,900 --> 00:04:51,650
has MMI Oba and this is how it's

00:04:47,150 --> 00:04:53,509
organized there are three regions which

00:04:51,650 --> 00:04:57,460
are also present on the standard VGA

00:04:53,509 --> 00:05:02,210
device which you can use to program it

00:04:57,460 --> 00:05:04,520
without using the classic VGA ports they

00:05:02,210 --> 00:05:10,180
are just mapped into that mm-hm

00:05:04,520 --> 00:05:16,520
and there are also video PCI regions and

00:05:10,180 --> 00:05:17,930
on vijaya GPU PCI device looks pretty

00:05:16,520 --> 00:05:21,949
much the same except that the first

00:05:17,930 --> 00:05:25,580
three regions are not there and also the

00:05:21,949 --> 00:05:30,520
PCI bar the frame buffer itself isn't

00:05:25,580 --> 00:05:30,520
present on the video GPU PCI device

00:05:34,779 --> 00:05:42,649
so where you are regarding guest support

00:05:38,889 --> 00:05:45,439
we have server Te'o GPU counter driver

00:05:42,649 --> 00:05:48,709
which is usual camera mode setting

00:05:45,439 --> 00:05:50,689
driver where can have your frame buffer

00:05:48,709 --> 00:05:52,699
console on which any graphics

00:05:50,689 --> 00:05:57,199
application it's over valent

00:05:52,699 --> 00:06:01,129
and so on can use it was merged in hue

00:05:57,199 --> 00:06:06,379
in the linux kernel in version forward

00:06:01,129 --> 00:06:10,249
to supporting only 2d mode developed 3d

00:06:06,379 --> 00:06:17,209
acceleration so that's a nice face

00:06:10,249 --> 00:06:21,529
baseline for for all guests 3d mode was

00:06:17,209 --> 00:06:25,879
added in 4:00 at 4:00 and we recently

00:06:21,529 --> 00:06:28,879
got some bug fixes in from mighty head

00:06:25,879 --> 00:06:32,149
mighty head was in the design of the

00:06:28,879 --> 00:06:35,149
device right from the start but wasn't

00:06:32,149 --> 00:06:36,649
tested much and so if you really want to

00:06:35,149 --> 00:06:40,459
play with it you should get Sally I just

00:06:36,649 --> 00:06:45,919
common which has those fixes in so

00:06:40,459 --> 00:06:50,539
things actually work she also needs a

00:06:45,919 --> 00:06:56,719
user space driver which is in Mesa was

00:06:50,539 --> 00:07:01,089
merged in version 11.10 it's active I

00:06:56,719 --> 00:07:04,279
ever needed anymore X op driver can use

00:07:01,089 --> 00:07:07,099
Clemmie of acceleration which uses a

00:07:04,279 --> 00:07:11,569
trust you seem a survivor to accelerate

00:07:07,099 --> 00:07:12,049
graphics in X or it's actually committed

00:07:11,569 --> 00:07:14,929
already

00:07:12,049 --> 00:07:18,889
it's just a small commit which it's a

00:07:14,929 --> 00:07:21,319
PCI IDs for the PCI devices telling the

00:07:18,889 --> 00:07:24,859
extra can use this device as both

00:07:21,319 --> 00:07:27,589
Clemmie it's in the master bath right

00:07:24,859 --> 00:07:30,589
now there's no release version yet loves

00:07:27,589 --> 00:07:32,989
the X Server but it's an easy patches

00:07:30,589 --> 00:07:34,339
back ported in forever for example and

00:07:32,989 --> 00:07:36,679
that's pretty much the only thing

00:07:34,339 --> 00:07:40,789
missing on the gas side which is not yet

00:07:36,679 --> 00:07:42,589
available in some released form so the

00:07:40,789 --> 00:07:44,389
big achievement from the last year is

00:07:42,589 --> 00:07:47,130
that at least the guest site is almost

00:07:44,389 --> 00:07:49,300
completely upstream

00:07:47,130 --> 00:07:52,050
so if you're looking on these

00:07:49,300 --> 00:07:55,150
distributions our support looks there

00:07:52,050 --> 00:07:59,560
the draw 24 supports us right from the

00:07:55,150 --> 00:08:01,390
start it works even in for the 23 but

00:07:59,560 --> 00:08:03,610
you have to apply other updates because

00:08:01,390 --> 00:08:06,120
release corner of the federal watch mp3

00:08:03,610 --> 00:08:06,120
is too old

00:08:06,370 --> 00:08:10,090
there's an Android build which is

00:08:08,410 --> 00:08:14,470
running here right now is the

00:08:10,090 --> 00:08:17,490
presentation which has amazed abased OPL

00:08:14,470 --> 00:08:21,940
stack and has virtual support enabled

00:08:17,490 --> 00:08:25,510
and all the other this pros should pick

00:08:21,940 --> 00:08:26,260
up with a old GPU support the 3d

00:08:25,510 --> 00:08:28,750
acceleration

00:08:26,260 --> 00:08:31,390
si updates packages because everything

00:08:28,750 --> 00:08:35,680
is absolutely meanwhile and if you wanna

00:08:31,390 --> 00:08:37,990
check your distribution you can just

00:08:35,680 --> 00:08:40,990
grab for visual in the kernel messages

00:08:37,990 --> 00:08:44,380
and in the X in for output to team and

00:08:40,990 --> 00:08:46,270
ever your colonists knew enough to have

00:08:44,380 --> 00:08:51,040
a little support and whenever that's

00:08:46,270 --> 00:08:55,350
properly enabled and open and UNIX info

00:08:51,040 --> 00:08:55,350
receive another your Mesa is new enough

00:09:01,260 --> 00:09:08,220
on the hot side the table immolation

00:09:05,160 --> 00:09:11,960
support also was merged merged in two

00:09:08,220 --> 00:09:14,640
stages first the 2d mode only without

00:09:11,960 --> 00:09:17,250
acceleration that landed in Klum were

00:09:14,640 --> 00:09:21,690
2.4 so it's available quite some time

00:09:17,250 --> 00:09:25,740
already 3d mode was added shortly

00:09:21,690 --> 00:09:27,930
thereafter in version 2.5 button comes

00:09:25,740 --> 00:09:30,540
with some additional dependences it

00:09:27,930 --> 00:09:32,760
needs the virtual vendor library which

00:09:30,540 --> 00:09:35,490
was pretty much all the hard work I come

00:09:32,760 --> 00:09:39,360
to that in the moment next slide and you

00:09:35,490 --> 00:09:43,470
also need OpenGL support and you're in

00:09:39,360 --> 00:09:47,820
the user interface and those was also

00:09:43,470 --> 00:09:49,920
edited in stages later on same that

00:09:47,820 --> 00:09:51,990
multi-headed went untested for quite a

00:09:49,920 --> 00:09:54,030
virus mentioned already and we also have

00:09:51,990 --> 00:09:56,910
on the hot side some more t hat fixes

00:09:54,030 --> 00:09:59,670
such length and 2.7 which is about 2

00:09:56,910 --> 00:10:02,640
being released so again if you want to

00:09:59,670 --> 00:10:06,840
try multi head with a tire GPU be sure

00:10:02,640 --> 00:10:10,560
to use the latest version and also edit

00:10:06,840 --> 00:10:13,290
in 2.4 a support for live migration in

00:10:10,560 --> 00:10:16,050
2d mode so that's one of the drawbacks

00:10:13,290 --> 00:10:17,490
if you want to use 3d acceleration yet

00:10:16,050 --> 00:10:20,870
you can't like me to make you a voting

00:10:17,490 --> 00:10:23,280
machine but right now we only support

00:10:20,870 --> 00:10:27,090
local display on the same machine anyway

00:10:23,280 --> 00:10:30,230
so trying to drive me crazy machine

00:10:27,090 --> 00:10:30,230
anywhere else doesn't buy you much

00:10:34,290 --> 00:10:40,180
Lord Renoir is the library which was

00:10:38,230 --> 00:10:44,380
actually the hard work it was created by

00:10:40,180 --> 00:10:47,080
DF le and what basically takes gyeom

00:10:44,380 --> 00:10:49,720
command stream guy um is and Mesa

00:10:47,080 --> 00:10:55,210
internal representation of the MIDI

00:10:49,720 --> 00:10:58,540
commands translated from OpenGL into

00:10:55,210 --> 00:11:00,220
some intermediate language and it will

00:10:58,540 --> 00:11:04,450
be translated from that to the actual

00:11:00,220 --> 00:11:06,250
hardware why is it wherever and whatever

00:11:04,450 --> 00:11:07,990
and I will take that command stream

00:11:06,250 --> 00:11:11,260
which is sent over what are you familiar

00:11:07,990 --> 00:11:14,080
with HBO device and translate it to

00:11:11,260 --> 00:11:16,620
OpenGL to pass it on to the hosta bu so

00:11:14,080 --> 00:11:20,110
all the operations from the guest

00:11:16,620 --> 00:11:23,140
executed on the host it's a pretty

00:11:20,110 --> 00:11:29,200
complex thing and it's also security

00:11:23,140 --> 00:11:32,860
it's tend to thing and so we won't try

00:11:29,200 --> 00:11:35,710
to send boxes or thing for security

00:11:32,860 --> 00:11:40,690
reasons mark Andre is working on that

00:11:35,710 --> 00:11:44,410
and it's trying to use I would user to

00:11:40,690 --> 00:11:47,440
one the vendor in a separate process

00:11:44,410 --> 00:11:50,950
which you can easily send box so in case

00:11:47,440 --> 00:11:55,030
some back in Narendra which can be

00:11:50,950 --> 00:11:57,070
exploited it would only affect the

00:11:55,030 --> 00:11:59,680
separate process and not remove excess

00:11:57,070 --> 00:12:03,360
or security impact of any bugs in the

00:11:59,680 --> 00:12:06,580
show and ah it's much smaller

00:12:03,360 --> 00:12:13,240
so that's something we hopefully have

00:12:06,580 --> 00:12:15,580
next year so as I already mentioned you

00:12:13,240 --> 00:12:18,490
also need in the user interface support

00:12:15,580 --> 00:12:22,330
for OpenGL the first user interface

00:12:18,490 --> 00:12:27,510
supporting this was GDK in humor 2.5

00:12:22,330 --> 00:12:30,580
together this initial little support and

00:12:27,510 --> 00:12:34,000
actually have two different color paths

00:12:30,580 --> 00:12:36,790
for GDK simply because of the reason

00:12:34,000 --> 00:12:42,220
that GDK got native appreciate support

00:12:36,790 --> 00:12:43,990
in version 3 or 16 so the one for the

00:12:42,220 --> 00:12:48,610
newer versions which actually uses

00:12:43,990 --> 00:12:51,880
native support and doing that is needed

00:12:48,610 --> 00:12:54,130
to correct Liana on valent because

00:12:51,880 --> 00:12:57,940
otherwise pay tripping doesn't work

00:12:54,130 --> 00:13:02,490
correctly and we have another code path

00:12:57,940 --> 00:13:06,070
using it yield directly and open the

00:13:02,490 --> 00:13:09,520
window notes manually for already

00:13:06,070 --> 00:13:13,930
deviations as the edge support leonard

00:13:09,520 --> 00:13:19,840
including with 2.6 also a support for

00:13:13,930 --> 00:13:22,570
local display of spice and getting a

00:13:19,840 --> 00:13:26,710
remote display is still in focus I come

00:13:22,570 --> 00:13:29,830
to that in the moment and one thing to

00:13:26,710 --> 00:13:31,870
keep in mind is that that's right now

00:13:29,830 --> 00:13:33,760
it's not play not yet playing life if

00:13:31,870 --> 00:13:36,760
there's a linux it's not on my machine

00:13:33,760 --> 00:13:39,610
whining wait a second maybe it sticks

00:13:36,760 --> 00:13:41,110
already in for Java I'm not sure so if

00:13:39,610 --> 00:13:43,930
you have some trouble getting this

00:13:41,110 --> 00:13:46,660
running you can fire tuning of say Linux

00:13:43,930 --> 00:13:49,420
and see of that was a blocking thing so

00:13:46,660 --> 00:13:54,870
I think poet is stole it to be updated

00:13:49,420 --> 00:13:54,870
to allow qmo to access

00:13:58,019 --> 00:14:04,329
so the most interesting thing for me is

00:14:00,639 --> 00:14:08,040
using SPICE it's a big advantage of

00:14:04,329 --> 00:14:11,829
using spires compared to SDR or GD k is

00:14:08,040 --> 00:14:14,199
that you don't have a dependency on your

00:14:11,829 --> 00:14:16,870
display server so you can keep the

00:14:14,199 --> 00:14:18,880
virtual machine running and disconnect

00:14:16,870 --> 00:14:22,060
and even restart it exploded about your

00:14:18,880 --> 00:14:26,290
voting machine dying and how does this

00:14:22,060 --> 00:14:32,110
work such as spice uses when I know it's

00:14:26,290 --> 00:14:34,029
recently added to the Linux kernel to do

00:14:32,110 --> 00:14:39,459
all the running operations and render

00:14:34,029 --> 00:14:42,130
into the texture and then it can pass

00:14:39,459 --> 00:14:45,100
this texture exported SDM a buff and

00:14:42,130 --> 00:14:47,440
pass it onto the spice client and the

00:14:45,100 --> 00:14:53,230
spice client then can import this game a

00:14:47,440 --> 00:14:56,470
buff and display it has depends on a

00:14:53,230 --> 00:15:01,920
plane I'm not letting you anymore Mesa

00:14:56,470 --> 00:15:04,600
and the epoxy versions and spy support

00:15:01,920 --> 00:15:08,529
to a bit experimental it's an

00:15:04,600 --> 00:15:12,760
development release merged upstream so

00:15:08,529 --> 00:15:15,790
one thing I've tried to do just to use a

00:15:12,760 --> 00:15:17,740
new flat tech thing to say okay I can

00:15:15,790 --> 00:15:20,500
try a bundle Mike you move this

00:15:17,740 --> 00:15:24,240
experimental spice server library so I

00:15:20,500 --> 00:15:26,350
can run and test this without having one

00:15:24,240 --> 00:15:30,490
experimental spice server and my

00:15:26,350 --> 00:15:33,069
anomalous machine which works nicely if

00:15:30,490 --> 00:15:35,589
your 1q directly but it doesn't work

00:15:33,069 --> 00:15:38,260
that nicely if you try to run is a flip

00:15:35,589 --> 00:15:41,110
word and I think the problem is simply

00:15:38,260 --> 00:15:44,110
that both flat pack creates the sandbox

00:15:41,110 --> 00:15:46,750
cause application is running in qmo and

00:15:44,110 --> 00:15:48,819
Blizzard is also creating a sandbox for

00:15:46,750 --> 00:15:51,370
QE motor on it in for security reasons

00:15:48,819 --> 00:15:54,610
and I simply think the thing running

00:15:51,370 --> 00:15:55,990
inside a little sandbox just doesn't

00:15:54,610 --> 00:15:59,740
work because it hasn't the permissions

00:15:55,990 --> 00:16:05,650
to create another contact inside so

00:15:59,740 --> 00:16:09,900
was that successful on the client side

00:16:05,650 --> 00:16:16,300
you need a spice GDK which was enough

00:16:09,900 --> 00:16:20,890
there's a oh no 32 release which is I

00:16:16,300 --> 00:16:26,650
recommend if you can use it as also

00:16:20,890 --> 00:16:28,720
support of this in 31 but and that was

00:16:26,650 --> 00:16:32,380
the last release which has support for

00:16:28,720 --> 00:16:34,990
GDK - he could to support was dropped in

00:16:32,380 --> 00:16:37,120
newest bias ddk versions but I think it

00:16:34,990 --> 00:16:40,570
shouldn't be much of an issue these days

00:16:37,120 --> 00:16:45,870
anymore so I should suggest to get the

00:16:40,570 --> 00:16:49,170
latest one and also important us to have

00:16:45,870 --> 00:16:52,270
unique socket connection for spies

00:16:49,170 --> 00:16:55,600
because that's needed to pass on the

00:16:52,270 --> 00:16:57,970
beam a buffs from humour to the spies

00:16:55,600 --> 00:17:01,030
client because that was a UNIX file

00:16:57,970 --> 00:17:04,930
descriptor passing and the way to do

00:17:01,030 --> 00:17:08,910
this as you see us at hatchback which

00:17:04,930 --> 00:17:11,470
will then ask you literate establish the

00:17:08,910 --> 00:17:15,000
UNIX socket connection between that

00:17:11,470 --> 00:17:15,000
viewer and kima

00:17:18,540 --> 00:17:26,230
so a bit on defense the aim of passing

00:17:22,680 --> 00:17:29,410
the library awareness guest is pay into

00:17:26,230 --> 00:17:32,500
texture then you can create an image

00:17:29,410 --> 00:17:36,280
from that export it get a file handler

00:17:32,500 --> 00:17:40,510
which we can send over and the spies

00:17:36,280 --> 00:17:43,180
client can import it and pin into it and

00:17:40,510 --> 00:17:46,480
texture and all this happens if our

00:17:43,180 --> 00:17:48,400
having to actually copies image data

00:17:46,480 --> 00:17:52,860
you're basing just passing through a

00:17:48,400 --> 00:17:58,020
handle through that so we avoid

00:17:52,860 --> 00:17:58,020
expensive copies of of display data

00:18:01,220 --> 00:18:10,860
so this snippet from the little contact

00:18:05,640 --> 00:18:18,320
if you want to play with this you have

00:18:10,860 --> 00:18:21,480
to say just a Bertie CP this one because

00:18:18,320 --> 00:18:25,800
you need as mentioned you need a UNIX

00:18:21,480 --> 00:18:28,650
socket connection GL a neighbor enables

00:18:25,800 --> 00:18:30,210
OpenGL support inspires because it's

00:18:28,650 --> 00:18:36,570
turned off by fault

00:18:30,210 --> 00:18:40,290
and finally you'll need the leo

00:18:36,570 --> 00:18:43,590
what about IO and leopard just create

00:18:40,290 --> 00:18:46,290
everything and open yet support

00:18:43,590 --> 00:18:51,390
available in the user interface the

00:18:46,290 --> 00:19:00,179
verge GPU graphics card also enable 3d

00:18:51,390 --> 00:19:04,050
support by default so that's an outline

00:19:00,179 --> 00:19:08,210
of the process the guest short in the

00:19:04,050 --> 00:19:12,540
guest runs driver talking to Z device

00:19:08,210 --> 00:19:15,240
sending the air commands stream was

00:19:12,540 --> 00:19:18,240
Gangnam command stream to the device

00:19:15,240 --> 00:19:21,929
which some process by the eyebrow render

00:19:18,240 --> 00:19:28,050
library on then you know this texture

00:19:21,929 --> 00:19:30,630
and that's a common thing for all user

00:19:28,050 --> 00:19:34,950
interfaces that they're going to work on

00:19:30,630 --> 00:19:38,070
this texture spice other export as deem

00:19:34,950 --> 00:19:42,540
a boffin posit entrance to the client

00:19:38,070 --> 00:19:46,170
for this play and in case of the str2 or

00:19:42,540 --> 00:19:48,090
GDK display you claim you can just talk

00:19:46,170 --> 00:19:51,020
directly to the display server to this

00:19:48,090 --> 00:19:51,020
basic texture

00:19:52,670 --> 00:20:02,870
we also have you also can do this for

00:19:59,150 --> 00:20:06,470
some normal VGA in that case we have

00:20:02,870 --> 00:20:12,200
encountered also kind of mode setting

00:20:06,470 --> 00:20:13,910
driver posture um and recent kernels in

00:20:12,200 --> 00:20:16,429
that case you just get a normal display

00:20:13,910 --> 00:20:20,690
service surface it's a normal

00:20:16,429 --> 00:20:22,429
presentation of a guest display and cue

00:20:20,690 --> 00:20:26,540
EMU if you are not running with any

00:20:22,429 --> 00:20:29,419
acceleration and Hume eyes some code to

00:20:26,540 --> 00:20:32,480
also copies us the space surface into a

00:20:29,419 --> 00:20:36,950
texture and then if it can go on use the

00:20:32,480 --> 00:20:42,950
same output path for in spice and svo2

00:20:36,950 --> 00:20:47,799
and GDK to achieve show the guest

00:20:42,950 --> 00:20:50,600
display and that way we also avoid

00:20:47,799 --> 00:20:53,900
encoding a guest display as TCP stream

00:20:50,600 --> 00:20:59,770
instead of a spice or VNC so that's

00:20:53,900 --> 00:21:03,549
basically a shared memory transport for

00:20:59,770 --> 00:21:06,820
standard non accelerated cui mode

00:21:03,549 --> 00:21:06,820
display devices

00:21:11,710 --> 00:21:22,580
so remote display is still about in

00:21:15,830 --> 00:21:25,130
progress and ideas to encode best

00:21:22,580 --> 00:21:28,100
displays video and sent that over to the

00:21:25,130 --> 00:21:31,549
client side there are some very

00:21:28,100 --> 00:21:33,470
experimental patches already using the

00:21:31,549 --> 00:21:37,250
restreamer support which was merchants

00:21:33,470 --> 00:21:40,460
PI server recently and of course we also

00:21:37,250 --> 00:21:44,390
want to try to use the hardware encoding

00:21:40,460 --> 00:21:46,429
if it's available should we do is view

00:21:44,390 --> 00:21:48,500
consumption that's a bit tricky because

00:21:46,429 --> 00:21:52,130
there are a number of different api's

00:21:48,500 --> 00:21:54,590
the SVA api which was created by emperor

00:21:52,130 --> 00:21:58,580
and the support of parental support

00:21:54,590 --> 00:22:00,500
encoding and decoding CSV D power which

00:21:58,580 --> 00:22:03,740
was created by in media it's also

00:22:00,500 --> 00:22:06,529
supported by MD I think and I think

00:22:03,740 --> 00:22:11,179
there's even a wrapper so it can use the

00:22:06,529 --> 00:22:13,549
APA over from the API driver but its

00:22:11,179 --> 00:22:15,140
support decoding only that would help on

00:22:13,549 --> 00:22:18,740
the client side of course but on the

00:22:15,140 --> 00:22:22,700
server side and NVIDIA has some proper

00:22:18,740 --> 00:22:26,210
term library and code and improvement

00:22:22,700 --> 00:22:29,179
library which can use so we have to

00:22:26,210 --> 00:22:32,419
solve that and of course there's also

00:22:29,179 --> 00:22:37,309
the usual pattern problem around those

00:22:32,419 --> 00:22:40,399
codecs mean why we have Cisco codec

00:22:37,309 --> 00:22:44,210
which might help here if you're looking

00:22:40,399 --> 00:22:46,850
for a software for back and recent Intel

00:22:44,210 --> 00:22:51,500
hardware happily the luckily also

00:22:46,850 --> 00:22:54,350
supports the open vp8 and vp9 codecs so

00:22:51,500 --> 00:22:57,940
at least in fahadh yet we can use that

00:22:54,350 --> 00:23:01,669
and don't have any trouble of a dense

00:22:57,940 --> 00:23:06,110
because that's always a problem and

00:23:01,669 --> 00:23:10,090
easily chip the software we have sorted

00:23:06,110 --> 00:23:10,090
that was cisco thing recently in

00:23:11,140 --> 00:23:22,520
so now to physical hardware you can use

00:23:18,850 --> 00:23:26,080
vfi or with a GPU that isn't exactly a

00:23:22,520 --> 00:23:29,120
new thing Alex already talked a lot in

00:23:26,080 --> 00:23:34,760
2004 KVM forum that's linked there

00:23:29,120 --> 00:23:37,400
that's why what we've added recently as

00:23:34,760 --> 00:23:39,740
support for intro to graphics

00:23:37,400 --> 00:23:43,370
it was a bit tricky because it has

00:23:39,740 --> 00:23:45,500
dependence it's a chipset graphics and

00:23:43,370 --> 00:23:48,590
the way intro design itself has

00:23:45,500 --> 00:23:50,780
dependencies to some other devices of

00:23:48,590 --> 00:23:53,150
the internship set so the driver looks

00:23:50,780 --> 00:23:56,570
at the hospital either looks or to

00:23:53,150 --> 00:24:00,950
either so I got some clerks to

00:23:56,570 --> 00:24:05,330
handle that and most mirages in Linux

00:24:00,950 --> 00:24:08,380
for a 6q anymore 2.7 and we hope that

00:24:05,330 --> 00:24:14,600
this support will also be useful for

00:24:08,380 --> 00:24:16,580
motogp use something recently added it

00:24:14,600 --> 00:24:22,040
was useful if you assign a complete

00:24:16,580 --> 00:24:24,710
device to a guest as input Linux that's

00:24:22,040 --> 00:24:27,260
some code which can talk directly to

00:24:24,710 --> 00:24:29,000
Linux if they have devices sweet mouse

00:24:27,260 --> 00:24:32,330
and keyboard events from there and pass

00:24:29,000 --> 00:24:38,590
them on to the guest and that simplifies

00:24:32,330 --> 00:24:43,460
the input side a lot if you're running

00:24:38,590 --> 00:24:46,070
vfi Oh GPO assignment VI open winter

00:24:43,460 --> 00:24:48,440
local display connected to it so I can

00:24:46,070 --> 00:24:51,500
just use a normal keyboard and type and

00:24:48,440 --> 00:24:53,570
don't have to use any workarounds like

00:24:51,500 --> 00:24:55,370
adding an emulated graphic just to have

00:24:53,570 --> 00:24:58,130
an SD other than know where can your

00:24:55,370 --> 00:25:01,220
mouse pointer to so the N in so your

00:24:58,130 --> 00:25:04,100
keyboard input lands in the guest so

00:25:01,220 --> 00:25:09,340
that simplifies input side for that use

00:25:04,100 --> 00:25:09,340
case this was merged in hewing my 2.6

00:25:12,870 --> 00:25:21,670
I'm working for this is also true rocket

00:25:16,870 --> 00:25:24,700
motor GPUs get an entire talk on that

00:25:21,670 --> 00:25:26,530
earlier today the online version of the

00:25:24,700 --> 00:25:28,570
slide so I have the link later on I

00:25:26,530 --> 00:25:34,540
still have to figure out where the

00:25:28,570 --> 00:25:36,280
capsule slides online the Moto GP who

00:25:34,540 --> 00:25:40,660
works very much

00:25:36,280 --> 00:25:43,150
comparable to si yo V but the separation

00:25:40,660 --> 00:25:48,070
is not handled by the hardware but by

00:25:43,150 --> 00:25:50,290
the hospital I ever instead and because

00:25:48,070 --> 00:25:52,720
it's held inside the corner it's pretty

00:25:50,290 --> 00:25:55,750
much transparent to user space so the

00:25:52,720 --> 00:25:59,440
plan suggests use very established if I

00:25:55,750 --> 00:26:03,250
was interface also for this case so we

00:25:59,440 --> 00:26:08,500
can use humor device vfi opgi and we'll

00:26:03,250 --> 00:26:10,870
just work and it's the framework for

00:26:08,500 --> 00:26:16,830
that is in development and for all the

00:26:10,870 --> 00:26:16,830
details are happy refer to the Fox

00:26:17,940 --> 00:26:24,520
introduced also working on the GPU

00:26:20,950 --> 00:26:29,170
integration they integrated directly

00:26:24,520 --> 00:26:31,800
into the GM driver the first bits of the

00:26:29,170 --> 00:26:38,650
support landed in the last match window

00:26:31,800 --> 00:26:42,010
and but let's just support they need

00:26:38,650 --> 00:26:45,490
inside the graphics driver so they can

00:26:42,010 --> 00:26:51,220
export the guest display to the host and

00:26:45,490 --> 00:26:53,020
so on KVM integration depends on the MDF

00:26:51,220 --> 00:26:55,510
driver I mentioned in the previous slide

00:26:53,020 --> 00:27:01,350
so this is a joint project which will be

00:26:55,510 --> 00:27:05,140
used for well will be used by or vgb

00:27:01,350 --> 00:27:08,340
implementations and the plan for the

00:27:05,140 --> 00:27:12,880
guest display is such it will be

00:27:08,340 --> 00:27:17,350
exported as team a buff and we learn can

00:27:12,880 --> 00:27:22,720
use that team a buff again

00:27:17,350 --> 00:27:26,590
to show it on the screen so in the guest

00:27:22,720 --> 00:27:30,760
normal driver came as the remote setting

00:27:26,590 --> 00:27:32,950
driver once the host processes horse

00:27:30,760 --> 00:27:35,640
driver processes all the commands in

00:27:32,950 --> 00:27:38,500
handles things inside the corner and

00:27:35,640 --> 00:27:42,340
exports guest display is game over for

00:27:38,500 --> 00:27:44,679
us so we can just import this team a

00:27:42,340 --> 00:27:47,289
buff F in texture we can work with and

00:27:44,679 --> 00:27:51,039
participate directly using the GDK or as

00:27:47,289 --> 00:27:54,909
the air user interface or go as a path

00:27:51,039 --> 00:27:59,679
to the spice forever and we probably go

00:27:54,909 --> 00:28:04,720
we find this a little bit to teach the

00:27:59,679 --> 00:28:07,450
QE macaw about team a box so I can

00:28:04,720 --> 00:28:09,669
handle ad on a team a BA vortex shoe and

00:28:07,450 --> 00:28:12,730
we'll import import export stuff as

00:28:09,669 --> 00:28:17,409
needed so we can skip those import and

00:28:12,730 --> 00:28:20,110
we exports step and pass on the DM a

00:28:17,409 --> 00:28:23,020
bath we got from the kernel driver

00:28:20,110 --> 00:28:25,500
directly to spy server to have it

00:28:23,020 --> 00:28:25,500
display things

00:28:31,929 --> 00:28:39,770
another approach comes to shows guest

00:28:36,230 --> 00:28:41,780
display' is that you can do the video

00:28:39,770 --> 00:28:44,540
encoding we are planning to add to spice

00:28:41,780 --> 00:28:46,640
server where the encoding happens on the

00:28:44,540 --> 00:28:51,650
hot side is to actually do it in the

00:28:46,640 --> 00:28:55,250
inside the guest if you assign the

00:28:51,650 --> 00:28:56,330
complete GPU to the guest the horse has

00:28:55,250 --> 00:28:57,830
no control over it

00:28:56,330 --> 00:28:59,919
they're doing it inside the guest is

00:28:57,830 --> 00:29:04,220
pretty much the only option you have

00:28:59,919 --> 00:29:06,140
that also works on bare metal yeah

00:29:04,220 --> 00:29:08,990
access commercial solutions for that

00:29:06,140 --> 00:29:13,220
which is for example used by game

00:29:08,990 --> 00:29:14,200
streaming things and of course it could

00:29:13,220 --> 00:29:18,980
also do the same

00:29:14,200 --> 00:29:21,530
vgpu that guest encoding have the guest

00:29:18,980 --> 00:29:23,960
through the video encoding and the big

00:29:21,530 --> 00:29:27,679
advantage of that is that you have the

00:29:23,960 --> 00:29:30,230
very same set up on parameter on if you

00:29:27,679 --> 00:29:35,150
assign a complete GPU or if you assign a

00:29:30,230 --> 00:29:37,780
butler GPU well also a few downsides of

00:29:35,150 --> 00:29:40,880
course it's not transparent to the guest

00:29:37,780 --> 00:29:43,370
so you have to install a software which

00:29:40,880 --> 00:29:48,169
- as the video encoding and exporting it

00:29:43,370 --> 00:29:51,470
to some display application and there's

00:29:48,169 --> 00:29:54,799
also no spice integration although they

00:29:51,470 --> 00:29:56,870
could try think about that an idea could

00:29:54,799 --> 00:29:59,210
be that you have in guest agent running

00:29:56,870 --> 00:30:02,750
inside your virtual machine which sends

00:29:59,210 --> 00:30:08,270
the h.264 stream to the host over voters

00:30:02,750 --> 00:30:11,360
area or some other means and then we

00:30:08,270 --> 00:30:13,760
could try integrate that of spice that

00:30:11,360 --> 00:30:15,799
is those guest encoding actually happens

00:30:13,760 --> 00:30:20,179
inside the guest you'll still can use

00:30:15,799 --> 00:30:23,330
your normal spice client to display the

00:30:20,179 --> 00:30:26,150
thing so big fashion is we know that's

00:30:23,330 --> 00:30:29,179
worth trying this because it only works

00:30:26,150 --> 00:30:34,429
for the vgb bouquets of course not if

00:30:29,179 --> 00:30:36,620
you are running on bare metal so one of

00:30:34,429 --> 00:30:38,330
the advantages from doing it inside the

00:30:36,620 --> 00:30:40,250
guest it's the same setup blocks

00:30:38,330 --> 00:30:41,720
everywhere goes away if you're doing the

00:30:40,250 --> 00:30:43,340
spice route

00:30:41,720 --> 00:30:47,769
and I think that's something we can

00:30:43,340 --> 00:30:52,669
either discuss after this talk or

00:30:47,769 --> 00:30:55,009
there's also a path about vfi Oh into

00:30:52,669 --> 00:30:57,379
3gp war and I think that's also topic

00:30:55,009 --> 00:31:00,500
they can discuss today because I think

00:30:57,379 --> 00:31:04,990
that's tricky to get those right I'll

00:31:00,500 --> 00:31:06,950
find a good solution for it and I think

00:31:04,990 --> 00:31:14,049
that's it yes

00:31:06,950 --> 00:31:14,049
the slides are online link is there yes

00:31:19,230 --> 00:31:24,380
on slide six can you please go back to

00:31:21,840 --> 00:31:24,380
slide six

00:31:30,490 --> 00:31:40,130
yeah what's glamour can you define it

00:31:33,290 --> 00:31:44,510
shortly dilemma is rivalry which uses 3d

00:31:40,130 --> 00:31:47,120
acceleration or use OpenGL for the 2d

00:31:44,510 --> 00:31:48,980
acceleration of the Xserve ax so all the

00:31:47,120 --> 00:31:53,000
Excel operations the classic 2d

00:31:48,980 --> 00:31:54,559
operations accelerated using OpenGL so

00:31:53,000 --> 00:31:56,270
you don't eat the harder specific IVA

00:31:54,559 --> 00:31:57,650
but you just can use the method violet

00:31:56,270 --> 00:32:06,380
thank you

00:31:57,650 --> 00:32:09,380
next slide so it seems to suggest that

00:32:06,380 --> 00:32:13,490
federal spending for installer media has

00:32:09,380 --> 00:32:15,440
birthed a GPU drivers built-in do you

00:32:13,490 --> 00:32:22,280
happen to know if that's the case for AR

00:32:15,440 --> 00:32:26,450
64 as well I think AR 64 is still a

00:32:22,280 --> 00:32:29,120
secondary architecture for air fedora so

00:32:26,450 --> 00:32:33,890
maybe they have a different kernel

00:32:29,120 --> 00:32:35,630
complete I don't know I guess there's no

00:32:33,890 --> 00:32:38,420
reason to not do it but they have

00:32:35,630 --> 00:32:45,830
different contexts for architecture sure

00:32:38,420 --> 00:32:48,309
could be the mr. thank you and slide 12

00:32:45,830 --> 00:32:48,309
please

00:32:48,370 --> 00:32:59,440
around slide 12 yeah it's it's about

00:32:56,950 --> 00:33:01,779
guest drivers so around this

00:32:59,440 --> 00:33:05,919
neighborhood I wanted to ask about any

00:33:01,779 --> 00:33:11,140
any plans or possibility for vert I wind

00:33:05,919 --> 00:33:13,840
driver for virtual GPU actually I'm not

00:33:11,140 --> 00:33:16,630
aware of anyone working on this all

00:33:13,840 --> 00:33:18,730
those people asked for it so there

00:33:16,630 --> 00:33:21,940
clearly is an interest in having done

00:33:18,730 --> 00:33:24,610
but I think especially if you want to

00:33:21,940 --> 00:33:26,860
have 3d acceleration with it which is an

00:33:24,610 --> 00:33:29,980
interesting thing it's quite a chunk of

00:33:26,860 --> 00:33:33,880
work that's fine because I'm not expert

00:33:29,980 --> 00:33:36,070
on that so I'm not actually insisting on

00:33:33,880 --> 00:33:39,010
Bert I win drivers for ease I just got a

00:33:36,070 --> 00:33:41,440
use case assume you have a like quite

00:33:39,010 --> 00:33:45,270
sort of modern laptop with the federal

00:33:41,440 --> 00:33:48,330
24 operating system host and you run

00:33:45,270 --> 00:33:52,630
Windows 7 or Windows 8 in a guest and

00:33:48,330 --> 00:33:55,419
your kids goes to school and they have

00:33:52,630 --> 00:33:57,039
some 3d assisted learning tool or

00:33:55,419 --> 00:34:00,279
whatever runs in Internet Explorer

00:33:57,039 --> 00:34:03,159
ActiveX whatever and it wants 3d so what

00:34:00,279 --> 00:34:05,799
from these many you know pearl stacks

00:34:03,159 --> 00:34:09,010
that you display which one is you know

00:34:05,799 --> 00:34:11,500
the closest on the horizon for be usable

00:34:09,010 --> 00:34:13,770
for this for such a use case what would

00:34:11,500 --> 00:34:13,770
you recommend

00:34:15,730 --> 00:34:19,750
I mean if it's if it's more appropriate

00:34:18,070 --> 00:34:25,510
for the BOF we can discuss it there as

00:34:19,750 --> 00:34:28,240
well well one someone has two white

00:34:25,510 --> 00:34:31,300
driver and I have no idea how difficult

00:34:28,240 --> 00:34:33,790
of this because we have basically to use

00:34:31,300 --> 00:34:37,570
what I owed GPU you have to translate

00:34:33,790 --> 00:34:42,700
the windows 3d commands into this mess

00:34:37,570 --> 00:34:44,919
up kind of command stream I have no idea

00:34:42,700 --> 00:34:46,869
whenever maybe some work inside Misa

00:34:44,919 --> 00:34:50,500
already exists for windows support which

00:34:46,869 --> 00:34:53,639
to us some of this does might help to

00:34:50,500 --> 00:34:56,770
forget assuming the laptop itself has

00:34:53,639 --> 00:34:58,930
Intel integrated graphics our jelly

00:34:56,770 --> 00:35:00,800
pass-through could be you know like a

00:34:58,930 --> 00:35:07,100
faster solution for this maybe

00:35:00,800 --> 00:35:08,990
I mean faster more available sure the

00:35:07,100 --> 00:35:10,880
big advantage of using path through is

00:35:08,990 --> 00:35:14,230
or using vgpu

00:35:10,880 --> 00:35:16,580
is that inside the guest is a normal

00:35:14,230 --> 00:35:21,710
drivers are running this intro to are

00:35:16,580 --> 00:35:25,190
used inside the guest and the guest

00:35:21,710 --> 00:35:28,670
driver in into the GPO case the guest

00:35:25,190 --> 00:35:32,330
driver needs some adjustments to be

00:35:28,670 --> 00:35:34,610
evolved each GPO thing but this has been

00:35:32,330 --> 00:35:37,220
merged into the Linux kernel quite a

00:35:34,610 --> 00:35:40,550
while ago and as fine knows windows

00:35:37,220 --> 00:35:43,850
drivers ship by entry at the moment also

00:35:40,550 --> 00:35:45,380
know about this so you can just install

00:35:43,850 --> 00:35:48,320
the normal drivers and they should work

00:35:45,380 --> 00:35:51,820
with both pass-through and V GPO ones

00:35:48,320 --> 00:35:51,820
also available thank you

00:36:00,750 --> 00:36:07,480
actually I have the same question about

00:36:03,160 --> 00:36:09,640
reliability of this on Windows so but on

00:36:07,480 --> 00:36:12,610
my experience are the main problem for

00:36:09,640 --> 00:36:14,830
windows drivers will be transformation

00:36:12,610 --> 00:36:20,370
from directory to OpenGL which is

00:36:14,830 --> 00:36:20,370
possible but difficult yeah imagine that

00:36:44,450 --> 00:36:53,510
okay I think I can show this

00:36:57,440 --> 00:37:04,320
so this is how the messages are looking

00:37:01,550 --> 00:37:07,920
hearsay is not kind of device it has

00:37:04,320 --> 00:37:12,600
found another VGA or what I would GPU

00:37:07,920 --> 00:37:16,170
PCI and lion just next to it says

00:37:12,600 --> 00:37:19,740
whenever 3d acceleration was enable a

00:37:16,170 --> 00:37:22,140
lot so that's the first thing the check

00:37:19,740 --> 00:37:25,500
of things are not working as expected

00:37:22,140 --> 00:37:28,010
inside the guest and then some more

00:37:25,500 --> 00:37:28,010
information

00:37:53,520 --> 00:38:01,309
yeah shut up on the screen yeah okay

00:37:56,640 --> 00:38:01,309
I have to restart the whole thing

00:38:46,400 --> 00:38:49,270
okay

00:38:55,680 --> 00:39:05,640
ah that's quick even looking from the

00:39:00,210 --> 00:39:07,500
side yeah that's small demo can't you

00:39:05,640 --> 00:39:09,450
control much here because usually it's

00:39:07,500 --> 00:39:12,390
done of the gravity sensor and your

00:39:09,450 --> 00:39:13,770
tablet so you're going like this I can

00:39:12,390 --> 00:39:15,920
try this is a laptop of the wouldn't

00:39:13,770 --> 00:39:15,920
help

00:39:17,180 --> 00:39:27,780
they don't have gravity sensor emulation

00:39:19,859 --> 00:39:38,660
anymore and also you can sit and watch

00:39:27,780 --> 00:39:38,660

YouTube URL: https://www.youtube.com/watch?v=DKYvQ3FdFeo


