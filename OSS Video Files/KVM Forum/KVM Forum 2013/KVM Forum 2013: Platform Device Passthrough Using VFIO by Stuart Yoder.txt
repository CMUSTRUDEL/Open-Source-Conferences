Title: KVM Forum 2013: Platform Device Passthrough Using VFIO by Stuart Yoder
Publication date: 2014-10-30
Playlist: KVM Forum 2013
Description: 
	Slides: https://docs.google.com/file/d/0BzyAwvVlQckebzhvSU9lVkVDa28

VFIO provides a framework for securely allowing user space applications to
directly access and use I/O devices, including QEMU which allows pass-
through of devices to virtual machines. QEMU and the upstream Linux kernel
currently support VFIO for PCI devices.  System-on-a-chip processors frequently
have I/O devices that are not PCI-based and use the platform bus framework
in Linux.  An increasing number of QEMU/KVM users have the need to pass
through platform devices to virtual machines using VFIO.

This presentation describes:
- vfio
- how VFIO-based passthrough of PCI devices is similar and different for platform devices
- issues and challenges in solving platform device pass-through
- proposed kernel changes to enable this

NOTE: Due to technical problems this talk is not complete. We apologize for this.
Captions: 
	00:00:00,000 --> 00:00:06,540
so pci there's virtual pci bus and and

00:00:03,689 --> 00:00:09,960
the guest sees our feast a card on that

00:00:06,540 --> 00:00:12,900
bus and so there are mechanisms we need

00:00:09,960 --> 00:00:14,880
to consider how can you solve this

00:00:12,900 --> 00:00:17,070
problem works so for platform devices

00:00:14,880 --> 00:00:24,900
however you do that but it just point

00:00:17,070 --> 00:00:27,840
you use it vfi oh ok a couple slides i

00:00:24,900 --> 00:00:29,250
want to show you that just just make

00:00:27,840 --> 00:00:33,260
sure everyone's on the same page with

00:00:29,250 --> 00:00:36,840
some terminology and so linux has a

00:00:33,260 --> 00:00:40,050
driver model and fairly simple but

00:00:36,840 --> 00:00:44,129
there's there's custom bus and attack us

00:00:40,050 --> 00:00:47,280
you have devices and drivers and so for

00:00:44,129 --> 00:00:49,770
example this is a pci example you have I

00:00:47,280 --> 00:00:51,890
devices that when they are discovered

00:00:49,770 --> 00:00:55,320
they would get registered with a pci bus

00:00:51,890 --> 00:00:58,859
and drivers register themselves they

00:00:55,320 --> 00:01:01,050
handle certain device type and then the

00:00:58,859 --> 00:01:04,320
association of a driver to it the bike

00:01:01,050 --> 00:01:05,820
minding and so to see that's an

00:01:04,320 --> 00:01:15,750
important concept it would be if I oh

00:01:05,820 --> 00:01:20,580
and how things are rounded and bound ok

00:01:15,750 --> 00:01:23,189
so just example how the FIO tci works if

00:01:20,580 --> 00:01:25,380
you want to pass through even 1000 cars

00:01:23,189 --> 00:01:28,860
I guess I've kind of face it example

00:01:25,380 --> 00:01:34,829
analysis be part of that text occupation

00:01:28,860 --> 00:01:38,100
up here's a t-1000 card busted it might

00:01:34,829 --> 00:01:40,560
be you want to pass through so the first

00:01:38,100 --> 00:01:42,240
thing you have to do is unbind the

00:01:40,560 --> 00:01:44,850
device from the house driver so that the

00:01:42,240 --> 00:01:47,250
houses will leave it alone hands off of

00:01:44,850 --> 00:01:51,630
it so you get that from sis FS by

00:01:47,250 --> 00:01:55,969
echoing the device to the unbinding file

00:01:51,630 --> 00:01:59,820
for that driver that's step one and then

00:01:55,969 --> 00:02:03,119
next you got go this is the device type

00:01:59,820 --> 00:02:06,630
so this is I think an e 1000 card record

00:02:03,119 --> 00:02:11,610
the device type into sis FS and there's

00:02:06,630 --> 00:02:14,010
a special file called dyd under the guy

00:02:11,610 --> 00:02:17,010
driver so the if I apiece

00:02:14,010 --> 00:02:19,680
I is a standard PCI driver but by the

00:02:17,010 --> 00:02:22,019
fall it's not set up a handle any

00:02:19,680 --> 00:02:23,040
devices at all because we don't know

00:02:22,019 --> 00:02:25,079
what devices were going to be passing

00:02:23,040 --> 00:02:28,319
through it can be any 1000 cars to be

00:02:25,079 --> 00:02:30,780
something else SATA controller so the

00:02:28,319 --> 00:02:32,790
new ID mechanism lets you tell the

00:02:30,780 --> 00:02:37,680
driver we're now handling this type of

00:02:32,790 --> 00:02:41,190
this device ID so essentially the FI of

00:02:37,680 --> 00:02:44,010
the meta driver you can find any device

00:02:41,190 --> 00:02:45,599
type to it and the way you tell it what

00:02:44,010 --> 00:02:48,680
does what types of supporters through

00:02:45,599 --> 00:02:52,230
this discuss mechanism so that's the way

00:02:48,680 --> 00:02:55,349
that's like work you are buying combined

00:02:52,230 --> 00:02:57,359
it and at this point here now vay owns

00:02:55,349 --> 00:03:04,530
the device and photos either sites do

00:02:57,359 --> 00:03:08,459
file sugars and so what we're trying to

00:03:04,530 --> 00:03:14,220
do now is half non tci devices either

00:03:08,459 --> 00:03:19,139
space and so this is equal of a

00:03:14,220 --> 00:03:20,639
freescale SOC you're going to see this

00:03:19,139 --> 00:03:22,829
comma out session where you're going to

00:03:20,639 --> 00:03:25,560
have your cord some kind of interconnect

00:03:22,829 --> 00:03:28,919
go here to the interconnect and very

00:03:25,560 --> 00:03:31,739
purpose of Io ddr controller but you'll

00:03:28,919 --> 00:03:33,690
have a huge variety different i/o

00:03:31,739 --> 00:03:37,530
devices that could be handling sitting

00:03:33,690 --> 00:03:39,930
on this interconnect and public amenity

00:03:37,530 --> 00:03:42,060
is allow allow some of these devices we

00:03:39,930 --> 00:03:51,660
pass through the user space through this

00:03:42,060 --> 00:03:53,669
mechanism firstly there I guess I think

00:03:51,660 --> 00:03:55,560
today it's kind of a quite of interest

00:03:53,669 --> 00:03:57,150
for both power of touch for an arm I

00:03:55,560 --> 00:04:00,720
think we're doing that it's just

00:03:57,150 --> 00:04:02,549
somewhere you know customers are

00:04:00,720 --> 00:04:07,019
interested in doing this in fact we

00:04:02,549 --> 00:04:08,699
scale yeah working with a customer or

00:04:07,019 --> 00:04:12,120
the thing they dreaded it was past the

00:04:08,699 --> 00:04:14,489
network device to erect gene this is one

00:04:12,120 --> 00:04:15,930
assistant didn't have an IMU or any

00:04:14,489 --> 00:04:17,820
perception that they just had a use case

00:04:15,930 --> 00:04:20,549
where they wanted to have a trusted our

00:04:17,820 --> 00:04:23,130
top running into the em with the drug

00:04:20,549 --> 00:04:26,550
design device and so three years for the

00:04:23,130 --> 00:04:27,620
adult this problem it started then it's

00:04:26,550 --> 00:04:30,680
not a hassle

00:04:27,620 --> 00:04:33,860
action that you got working but

00:04:30,680 --> 00:04:42,800
definitely a requirement we see in the

00:04:33,860 --> 00:04:44,900
bed of space okay so so I guess 11 20

00:04:42,800 --> 00:04:47,630
meter is you'll see these devices are

00:04:44,900 --> 00:04:50,210
not sitting on a pci bus and so they

00:04:47,630 --> 00:04:54,940
they can't be discovered the arbor

00:04:50,210 --> 00:04:58,060
mechanisms like a pci addresses and

00:04:54,940 --> 00:05:02,419
typically linda's full by a device tree

00:04:58,060 --> 00:05:05,539
we saw our what devices exist so that's

00:05:02,419 --> 00:05:08,060
the way that he still likes different

00:05:05,539 --> 00:05:13,460
stubborn and then there's much hype

00:05:08,060 --> 00:05:14,960
linux standard Linux plus but it is if

00:05:13,460 --> 00:05:20,660
used for a device like we're talking

00:05:14,960 --> 00:05:21,800
about that part of mechanisms so we're

00:05:20,660 --> 00:05:26,289
going to find the deflections that were

00:05:21,800 --> 00:05:26,289
interested in here is on the platform us

00:05:32,200 --> 00:05:39,889
ok so the existing mechanisms in d fi 0

00:05:35,870 --> 00:05:43,000
which again exposing mappable regions

00:05:39,889 --> 00:05:47,210
registers of devices and corrupt and

00:05:43,000 --> 00:05:49,729
writing email a pinky things were

00:05:47,210 --> 00:05:52,639
providing you two safes did you think

00:05:49,729 --> 00:05:54,710
mechanisms work we don't have to read

00:05:52,639 --> 00:05:59,570
architect anything or change fundamental

00:05:54,710 --> 00:06:03,650
on Sesame bio on days they work as for

00:05:59,570 --> 00:06:05,840
my students I have control interfaces

00:06:03,650 --> 00:06:08,150
and so on but there are small hands you

00:06:05,840 --> 00:06:09,500
a handful of issues that do need to be

00:06:08,150 --> 00:06:15,849
addressed and that's what I want to

00:06:09,500 --> 00:06:19,699
focus on versus the top here once point

00:06:15,849 --> 00:06:22,539
our cognition of you know the advisor

00:06:19,699 --> 00:06:25,430
black for devices is not that we are

00:06:22,539 --> 00:06:29,090
going to solve the problem for all flat

00:06:25,430 --> 00:06:31,490
phone devices in kind of a kind of

00:06:29,090 --> 00:06:34,669
innocent way there are there are

00:06:31,490 --> 00:06:39,200
complicated devices that you make is

00:06:34,669 --> 00:06:40,980
problematic like a full comment on a

00:06:39,200 --> 00:06:42,990
free scale of networking chef

00:06:40,980 --> 00:06:46,470
with it was amusing that interface that

00:06:42,990 --> 00:06:49,710
can be associated with this network

00:06:46,470 --> 00:06:51,750
interface that spot maybe make some kind

00:06:49,710 --> 00:06:55,170
of interface over here so you're going

00:06:51,750 --> 00:06:58,200
to have potentially weird entanglements

00:06:55,170 --> 00:06:59,760
between devices mean it's some device

00:06:58,200 --> 00:07:01,770
they're kind of cleanly isolated where

00:06:59,760 --> 00:07:04,940
it's a sampling device no connection

00:07:01,770 --> 00:07:09,720
with other slices but as you'll see a

00:07:04,940 --> 00:07:13,160
series um the connection this complex's

00:07:09,720 --> 00:07:15,690
can get very convoluted sometimes and so

00:07:13,160 --> 00:07:17,970
if you have a device weird and tingle

00:07:15,690 --> 00:07:20,430
net that isn't kind of self-contained it

00:07:17,970 --> 00:07:22,500
can be very problematic to pass that

00:07:20,430 --> 00:07:27,030
through in a clean way to user space so

00:07:22,500 --> 00:07:28,140
we're not with one method trying to

00:07:27,030 --> 00:07:30,090
solve that problem there's going to

00:07:28,140 --> 00:07:33,390
probably even device specific aspects

00:07:30,090 --> 00:07:35,730
for some delectable like that but but

00:07:33,390 --> 00:07:39,300
for the basic idea of exposing a

00:07:35,730 --> 00:07:40,920
device's resources user space you know

00:07:39,300 --> 00:07:50,700
it's definitely doable and there is

00:07:40,920 --> 00:07:55,020
useful okay so here's an example of a

00:07:50,700 --> 00:07:57,150
platforms like this is 0 for this is the

00:07:55,020 --> 00:07:59,390
device tree representation for the

00:07:57,150 --> 00:08:04,050
device and you'll see it's fairly simple

00:07:59,390 --> 00:08:09,090
there's a one-page restaurant and one in

00:08:04,050 --> 00:08:11,460
a row so she will suffice that's a

00:08:09,090 --> 00:08:13,080
simplified and pretty would be pretty

00:08:11,460 --> 00:08:14,940
straightforward he doesn't even do is

00:08:13,080 --> 00:08:21,540
ema but pretty straightforward as far as

00:08:14,940 --> 00:08:25,200
yeah root so so their steps here so just

00:08:21,540 --> 00:08:27,000
like with tci we first we need to do and

00:08:25,200 --> 00:08:30,000
I guess this is not to see example here

00:08:27,000 --> 00:08:33,330
some game there was unbind the device

00:08:30,000 --> 00:08:37,550
from the host driver to do that select

00:08:33,330 --> 00:08:43,890
on pci by echoing the platform device ID

00:08:37,550 --> 00:08:47,070
into a sis SS honest people come to her

00:08:43,890 --> 00:08:52,890
for example just bust devices you'll see

00:08:47,070 --> 00:08:55,190
that as a device a position that I need

00:08:52,890 --> 00:09:00,090
that way to explode

00:08:55,190 --> 00:09:02,880
so you unbind and that like on pci we

00:09:00,090 --> 00:09:06,720
want to now by this divide this is

00:09:02,880 --> 00:09:10,320
specific device to a new proposed driver

00:09:06,720 --> 00:09:12,720
called me if I a platform ok so this

00:09:10,320 --> 00:09:16,490
point you're a couple problems that we

00:09:12,720 --> 00:09:22,470
run into this is what we want to do

00:09:16,490 --> 00:09:24,210
first the platform bus doesn't have any

00:09:22,470 --> 00:09:26,310
kind of wild card mechanism that would

00:09:24,210 --> 00:09:29,450
let us despite any device to it because

00:09:26,310 --> 00:09:33,390
of the platform platform driver here

00:09:29,450 --> 00:09:35,670
register visit advice types when you

00:09:33,390 --> 00:09:37,620
write your driver you say I handle a

00:09:35,670 --> 00:09:39,060
list of device place and that's that's

00:09:37,620 --> 00:09:42,630
all you handle there's no way to say

00:09:39,060 --> 00:09:46,110
it'll anybody for example so what that

00:09:42,630 --> 00:09:48,780
isn't we need is a way to introduce Wow

00:09:46,110 --> 00:09:52,320
like a wild card thing any device

00:09:48,780 --> 00:09:54,860
because again the FIO is the meta driver

00:09:52,320 --> 00:09:59,570
in a sense that is it's really handling

00:09:54,860 --> 00:10:02,250
maybe a slice or any device I think one

00:09:59,570 --> 00:10:07,920
so that's one issue and one problem with

00:10:02,250 --> 00:10:11,790
one problem solved the other issue is

00:10:07,920 --> 00:10:15,300
that we want we want to be a fido

00:10:11,790 --> 00:10:18,510
platform driver to really only bind

00:10:15,300 --> 00:10:20,670
devices when explicitly requested to it

00:10:18,510 --> 00:10:22,740
the wild party mechanism or what

00:10:20,670 --> 00:10:25,860
happened is now we have ice cream driver

00:10:22,740 --> 00:10:28,980
and if I Drive alyssa finds the same

00:10:25,860 --> 00:10:34,980
device so and it's years which one would

00:10:28,980 --> 00:10:37,770
get it so we want what we want is this

00:10:34,980 --> 00:10:41,790
driver you only bought you the device

00:10:37,770 --> 00:10:43,440
especially requesting the SS SS and the

00:10:41,790 --> 00:10:52,170
Linux driver quartz steady does not

00:10:43,440 --> 00:10:54,180
support so there's the situation here we

00:10:52,170 --> 00:10:56,730
need some changes to the colonel and

00:10:54,180 --> 00:11:01,430
actually see some uses as well if I ever

00:10:56,730 --> 00:11:05,040
see stuff they face the same issue where

00:11:01,430 --> 00:11:07,800
potentially you bind it advice to the

00:11:05,040 --> 00:11:08,490
FIO and now you have an e 1000 driver

00:11:07,800 --> 00:11:11,310
and the

00:11:08,490 --> 00:11:13,820
bio driver both need to handle you out

00:11:11,310 --> 00:11:17,070
the cards the hot dog in that happens

00:11:13,820 --> 00:11:26,040
I'm its kind of rate condition grab the

00:11:17,070 --> 00:11:28,080
device ok so the platform about carnage

00:11:26,040 --> 00:11:32,370
you pretty straight this is pretty much

00:11:28,080 --> 00:11:34,170
the patch need to solve that issue for

00:11:32,370 --> 00:11:36,690
the fast growth posted you see here

00:11:34,170 --> 00:11:40,709
interested but especially we even a new

00:11:36,690 --> 00:11:43,020
flag in the flat whites truck driver can

00:11:40,709 --> 00:11:49,110
set at said I work with any device and

00:11:43,020 --> 00:11:52,170
then we cheat so pretty simple I wanted

00:11:49,110 --> 00:11:57,899
like this to essentially handle any

00:11:52,170 --> 00:12:00,839
device well party just all the other

00:11:57,899 --> 00:12:03,589
issue there's a new flag or proposing

00:12:00,839 --> 00:12:10,410
now this is not a country pack but in

00:12:03,589 --> 00:12:14,070
the generic device driver struck we want

00:12:10,410 --> 00:12:18,390
to add a new field new boolean that this

00:12:14,070 --> 00:12:20,130
trucker only by excuses sff and on that

00:12:18,390 --> 00:12:24,510
there's a check needed in the driver for

00:12:20,130 --> 00:12:27,600
to sport that so if I posted not sure if

00:12:24,510 --> 00:12:30,600
greg was going to be going for it or not

00:12:27,600 --> 00:12:33,750
but anybody knows Greg you know you miss

00:12:30,600 --> 00:12:37,560
them but it's a simple good idea we'll

00:12:33,750 --> 00:12:40,740
see but but we have like working can

00:12:37,560 --> 00:12:53,040
fill up implemented it work it seems you

00:12:40,740 --> 00:12:55,910
working pretty well okay um another

00:12:53,040 --> 00:12:59,660
problem another race condition exists

00:12:55,910 --> 00:13:04,040
consistent you should be a breath is as

00:12:59,660 --> 00:13:07,620
we talked out afford you find a driver

00:13:04,040 --> 00:13:09,899
under unbind it the device and driver in

00:13:07,620 --> 00:13:14,880
the beginning of this process so they

00:13:09,899 --> 00:13:16,980
make a community online right then s

00:13:14,880 --> 00:13:18,120
your kind of space where hot songs i

00:13:16,980 --> 00:13:20,279
meant that half and right then can just

00:13:18,120 --> 00:13:21,660
run and the driver can grab the device

00:13:20,279 --> 00:13:24,500
again before you even have a

00:13:21,660 --> 00:13:26,610
to bind it to the FIO so there is a

00:13:24,500 --> 00:13:29,400
slight why you separate when we talked

00:13:26,610 --> 00:13:32,520
about this issue of just a lot of

00:13:29,400 --> 00:13:34,410
opportunity where you could unbind a

00:13:32,520 --> 00:13:35,670
device and then find discover that it

00:13:34,410 --> 00:13:39,750
was already bounced back to the host

00:13:35,670 --> 00:13:40,830
driver so the proposal there is we don't

00:13:39,750 --> 00:13:45,800
have a patch for this yet but the

00:13:40,830 --> 00:13:49,320
general idea is adding a new new field

00:13:45,800 --> 00:13:52,650
that means explicit mind only and so the

00:13:49,320 --> 00:13:57,660
way it would work is before i'm finding

00:13:52,650 --> 00:14:00,120
device you could echo value to the

00:13:57,660 --> 00:14:02,490
device so this is a device love field

00:14:00,120 --> 00:14:03,810
that would would tell that is what from

00:14:02,490 --> 00:14:05,850
the device side of things and this

00:14:03,810 --> 00:14:08,610
device now he said that that's found

00:14:05,850 --> 00:14:10,620
only and at that point when you do the

00:14:08,610 --> 00:14:20,580
unbind won't have any risk of losing the

00:14:10,620 --> 00:14:22,950
device back to the host driver ok i

00:14:20,580 --> 00:14:24,930
guess the last issue wanted to focus on

00:14:22,950 --> 00:14:26,790
a bit with talk about a little more

00:14:24,930 --> 00:14:30,090
complicated device this is an example of

00:14:26,790 --> 00:14:32,910
a free clda engine again device three

00:14:30,090 --> 00:14:34,470
other states here you can see there are

00:14:32,910 --> 00:14:36,540
essentially three regions and to

00:14:34,470 --> 00:14:38,910
interrupts involved there are two d to

00:14:36,540 --> 00:14:43,500
the per diem a channel each with their

00:14:38,910 --> 00:14:45,540
own inner up different registers and I

00:14:43,500 --> 00:14:48,930
get problem into this one you pass this

00:14:45,540 --> 00:14:51,510
repeater space either say security if I

00:14:48,930 --> 00:14:53,970
don't say okay i have three regions into

00:14:51,510 --> 00:14:55,470
interrupts there's no way really

00:14:53,970 --> 00:14:58,260
correlate it's pretty perfect to

00:14:55,470 --> 00:15:00,140
correlate to improv switch channels if

00:14:58,260 --> 00:15:03,890
there's not really any information that

00:15:00,140 --> 00:15:07,100
interface that interfere oh the person

00:15:03,890 --> 00:15:11,220
that's a second one at this channel so

00:15:07,100 --> 00:15:13,260
think the reasons up there's so the

00:15:11,220 --> 00:15:15,060
thing we need is for complicated devices

00:15:13,260 --> 00:15:19,200
that actually represents like awful know

00:15:15,060 --> 00:15:22,590
is we need the ability to differentiate

00:15:19,200 --> 00:15:29,730
the resources which is the switch is the

00:15:22,590 --> 00:15:31,550
one so Vee there's RSC posted people

00:15:29,730 --> 00:15:35,020
here if you're interested in reading it

00:15:31,550 --> 00:15:38,560
and the general idea is

00:15:35,020 --> 00:15:41,230
we're extending a guy from phone calls

00:15:38,560 --> 00:15:47,260
to get regions and yet i RQ in bottle

00:15:41,230 --> 00:15:52,590
with a flat and the way it with white

00:15:47,260 --> 00:15:55,510
works as a present in main BYO scribe

00:15:52,590 --> 00:16:00,210
ethernet 10 described to the original

00:15:55,510 --> 00:16:03,250
struck and that and it struck without

00:16:00,210 --> 00:16:07,210
makes apparently we have the full path

00:16:03,250 --> 00:16:13,450
to the to the resource that user say can

00:16:07,210 --> 00:16:17,020
tell the difference so via is that

00:16:13,450 --> 00:16:21,270
you're kickin space there are some

00:16:17,020 --> 00:17:12,240
extensions to the existing i/o controls

00:16:21,270 --> 00:17:15,100
to do that oh yeah miss you are enough a

00:17:12,240 --> 00:17:30,610
return information so question how my

00:17:15,100 --> 00:17:33,580
martini pestle um the glass issue so on

00:17:30,610 --> 00:17:36,670
VF IPC is quite process that have one

00:17:33,580 --> 00:17:38,200
device and Dives to kill or something

00:17:36,670 --> 00:17:40,540
like that in the final two pretty close

00:17:38,200 --> 00:17:46,630
the device get back i think it gets

00:17:40,540 --> 00:17:52,960
reset actually that happen Wow

00:17:46,630 --> 00:17:52,960
again we're here bus so they're just

00:17:58,540 --> 00:18:13,480
thinking that you probably suspect logic

00:18:03,950 --> 00:18:20,930
in yo reset attention for example we

00:18:13,480 --> 00:18:27,070
died okay I have 16 property because

00:18:20,930 --> 00:18:30,980
there's no really other way that finally

00:18:27,070 --> 00:18:32,600
in my last life so we talked that's off

00:18:30,980 --> 00:18:34,820
to be if I up side of things on the

00:18:32,600 --> 00:18:44,410
queue size so now we want to take this

00:18:34,820 --> 00:18:48,170
device jeans up here is that in Cuba

00:18:44,410 --> 00:18:49,550
device specific driver essentially to

00:18:48,170 --> 00:18:53,360
handle the Select indicates the

00:18:49,550 --> 00:18:57,530
dimensions we start q we're going to

00:18:53,360 --> 00:18:59,690
have a specific device isolation for the

00:18:57,530 --> 00:19:02,030
demon for the freescale DNA engine and

00:18:59,690 --> 00:19:04,640
they'll pass in some kind of half

00:19:02,030 --> 00:19:07,190
identify which slice talking about but

00:19:04,640 --> 00:19:08,930
this is like he will have to

00:19:07,190 --> 00:19:11,420
specifically bought a generator device

00:19:08,930 --> 00:19:13,670
tree for that device because there's

00:19:11,420 --> 00:19:15,860
things like that well we have presented

00:19:13,670 --> 00:19:17,710
like yeah the standard wedding so that

00:19:15,860 --> 00:19:21,260
the guests looks like a standard

00:19:17,710 --> 00:19:25,070
hardware node we got to generate that

00:19:21,260 --> 00:19:33,140
inflammation and so that's going to be

00:19:25,070 --> 00:19:34,430
like specific so that's it I mean if you

00:19:33,140 --> 00:19:38,000
have any questions we have to answer it

00:19:34,430 --> 00:19:40,600
but one of outline clicking in touch of

00:19:38,000 --> 00:19:40,600
devices and

00:19:42,480 --> 00:19:44,540

YouTube URL: https://www.youtube.com/watch?v=CVr2pNo0Hvg


