Title: KVM Forum 2013: Kimchi: Simplified KVM Management by Adam Litke, IBM
Publication date: 2014-10-30
Playlist: KVM Forum 2013
Description: 
	KVM Forum 2013: Kimchi: Simplified KVM Management by Adam Litke, IBM
Captions: 
	00:00:00,000 --> 00:00:04,410
about previous talks we've all been

00:00:02,280 --> 00:00:07,379
seeing clay we know how great k ZM is

00:00:04,410 --> 00:00:12,150
got great performance and scalability

00:00:07,379 --> 00:00:14,370
it's secure reliable it's got a great

00:00:12,150 --> 00:00:16,379
price point and we just learned about

00:00:14,370 --> 00:00:19,680
some great enterprise management

00:00:16,379 --> 00:00:22,830
capability that we have but I will

00:00:19,680 --> 00:00:25,800
contend that it still lacks ease of use

00:00:22,830 --> 00:00:28,320
especially at the complete entry level

00:00:25,800 --> 00:00:30,660
of ground 82 kb m maybe even a Windows

00:00:28,320 --> 00:00:33,120
user for example I want to explore this

00:00:30,660 --> 00:00:36,570
new hypervisor how am I going to make

00:00:33,120 --> 00:00:39,860
that work well so though i would say

00:00:36,570 --> 00:00:44,040
that we need to address the entry-level

00:00:39,860 --> 00:00:46,760
brand new to kpmg sneeze I'm kind of

00:00:44,040 --> 00:00:49,530
calling this a curb appeal sort of thing

00:00:46,760 --> 00:00:51,570
basically you know let's take a look at

00:00:49,530 --> 00:00:55,410
the user might be coming brand new to

00:00:51,570 --> 00:00:58,260
kvm on if we look at statistics on what

00:00:55,410 --> 00:01:00,870
operating systems people use as much as

00:00:58,260 --> 00:01:02,670
we might love one over another it's

00:01:00,870 --> 00:01:03,809
probably going to be a Windows user in

00:01:02,670 --> 00:01:08,490
general that's going to want to be

00:01:03,809 --> 00:01:10,950
managing it we need to have so we need

00:01:08,490 --> 00:01:14,250
to have basically a solution of a work

00:01:10,950 --> 00:01:17,369
that upon their client we need very very

00:01:14,250 --> 00:01:19,200
easy environment setup this means on the

00:01:17,369 --> 00:01:22,770
client i want to say no extra software

00:01:19,200 --> 00:01:24,479
to install is to lay that down if you

00:01:22,770 --> 00:01:26,610
have a web browser that's modern that

00:01:24,479 --> 00:01:30,119
should maybe be enough we could try to

00:01:26,610 --> 00:01:32,820
do something there for the server kbm

00:01:30,119 --> 00:01:36,390
runs all across linux distribution so

00:01:32,820 --> 00:01:37,950
let's try to have a management entry

00:01:36,390 --> 00:01:41,729
level management tool that can run

00:01:37,950 --> 00:01:43,950
everywhere that KTM does and we don't

00:01:41,729 --> 00:01:45,630
want a lot of different system

00:01:43,950 --> 00:01:47,189
administration set up kind of stuff

00:01:45,630 --> 00:01:51,750
let's just get going right out of the

00:01:47,189 --> 00:01:54,390
box the target that I'm going after is

00:01:51,750 --> 00:01:56,340
basic virtualization tasks the first

00:01:54,390 --> 00:01:58,170
thing I wanted to do when I first

00:01:56,340 --> 00:02:00,869
started playing with kvm is of course

00:01:58,170 --> 00:02:04,490
great my vm easily and start installing

00:02:00,869 --> 00:02:08,280
something so that's what I'm focused on

00:02:04,490 --> 00:02:11,310
basically vm lifecycle operations and

00:02:08,280 --> 00:02:13,290
being able to see what's going on on but

00:02:11,310 --> 00:02:15,510
i want to keep it simple over

00:02:13,290 --> 00:02:17,730
has all kinds of great features and

00:02:15,510 --> 00:02:24,180
functionality it's not required for

00:02:17,730 --> 00:02:27,870
somebody who's first evaluated so based

00:02:24,180 --> 00:02:30,420
on these sort of basic requirements with

00:02:27,870 --> 00:02:34,140
born kimchi it's a self-contained cherry

00:02:30,420 --> 00:02:36,689
pie web application web server so

00:02:34,140 --> 00:02:39,540
there's no Apache configuration that's a

00:02:36,689 --> 00:02:45,200
self-contained server it starts up a

00:02:39,540 --> 00:02:47,790
REST API and then has a html5 interface

00:02:45,200 --> 00:02:50,370
for the client based on Jake version

00:02:47,790 --> 00:02:52,650
we're using pretty much exclusively to

00:02:50,370 --> 00:02:56,519
liberate API because it's a very nice

00:02:52,650 --> 00:02:59,489
sound does what we need to piece these

00:02:56,519 --> 00:03:01,889
tasks right out of the box were

00:02:59,489 --> 00:03:03,269
internationalized in English Chinese and

00:03:01,889 --> 00:03:06,599
Portuguese would like to add more

00:03:03,269 --> 00:03:10,829
languages and as is the trend with other

00:03:06,599 --> 00:03:15,870
projects reason oginski or accessing the

00:03:10,829 --> 00:03:17,430
vm displays so just a few more lorem

00:03:15,870 --> 00:03:20,220
points I want to kind of talk about I

00:03:17,430 --> 00:03:23,280
want to show a demo of it here but we've

00:03:20,220 --> 00:03:25,799
kind of addressed some of these one of

00:03:23,280 --> 00:03:28,530
the things that I'm convinced after

00:03:25,799 --> 00:03:30,840
working with gabion for a while is for

00:03:28,530 --> 00:03:34,229
bit creative a basic vm we know all the

00:03:30,840 --> 00:03:36,569
answers for the configuration choices if

00:03:34,229 --> 00:03:40,560
you want to create a brand new basic

00:03:36,569 --> 00:03:42,720
fedora vm we know how many CPUs how much

00:03:40,560 --> 00:03:45,329
memory that you know Fedora has system

00:03:42,720 --> 00:03:47,340
requirements somebody knows this space

00:03:45,329 --> 00:03:49,919
we know we know that the door and

00:03:47,340 --> 00:03:53,150
support bird io disk convert audio net

00:03:49,919 --> 00:03:55,379
so we can enable those by default

00:03:53,150 --> 00:03:57,389
basically I think we can create a VM

00:03:55,379 --> 00:03:59,099
without asking you thurs pretty much any

00:03:57,389 --> 00:04:01,979
classroom we also know where the ISO

00:03:59,099 --> 00:04:06,030
image is online so we don't even need to

00:04:01,979 --> 00:04:07,169
have them that up so you know of

00:04:06,030 --> 00:04:09,720
course people will want some

00:04:07,169 --> 00:04:14,419
customization but the key is to push

00:04:09,720 --> 00:04:16,500
that outside of the critical path so

00:04:14,419 --> 00:04:18,060
basically there's some other things you

00:04:16,500 --> 00:04:21,359
might want to do on your virtualization

00:04:18,060 --> 00:04:23,010
host there's always a blurred line with

00:04:21,359 --> 00:04:26,000
putting too much functionality or how to

00:04:23,010 --> 00:04:28,100
half of it if if I'm a Windows user

00:04:26,000 --> 00:04:29,870
trying to manage a kvm post I probably

00:04:28,100 --> 00:04:33,140
don't want to log into the box today

00:04:29,870 --> 00:04:34,610
packages or rebooted or if there's a

00:04:33,140 --> 00:04:36,830
problem with the host I want to collect

00:04:34,610 --> 00:04:38,570
a debug report and not have to know what

00:04:36,830 --> 00:04:40,130
to collect so those are a few of the

00:04:38,570 --> 00:04:44,990
features that might like to include in a

00:04:40,130 --> 00:04:47,060
solution like this developer api's are

00:04:44,990 --> 00:04:49,970
nice so that you can extend it so we

00:04:47,060 --> 00:04:52,430
made sure to use the rest api the same

00:04:49,970 --> 00:04:55,840
one that the UI is going to use the one

00:04:52,430 --> 00:04:59,300
that developers would use the previous

00:04:55,840 --> 00:05:02,210
presentation talked about hooks inspired

00:04:59,300 --> 00:05:03,830
by those to add some extensibility here

00:05:02,210 --> 00:05:07,850
for things that were not going to handle

00:05:03,830 --> 00:05:09,919
by the ball we're relying only on widely

00:05:07,850 --> 00:05:12,410
available open source components if it

00:05:09,919 --> 00:05:15,400
can't be installed across all the major

00:05:12,410 --> 00:05:18,020
distributions then it's probably not

00:05:15,400 --> 00:05:20,090
something that I'm going to use and also

00:05:18,020 --> 00:05:22,160
if it's you know two cables so that's

00:05:20,090 --> 00:05:25,250
always the challenges we want to expose

00:05:22,160 --> 00:05:30,350
those new features but we want to be

00:05:25,250 --> 00:05:32,660
available everywhere so entry-level use

00:05:30,350 --> 00:05:35,479
case but we want to be able to take a

00:05:32,660 --> 00:05:37,550
person who's got maybe ten to BMS going

00:05:35,479 --> 00:05:39,040
inside of kimchi they really like it but

00:05:37,550 --> 00:05:42,350
now they want some enterprise features

00:05:39,040 --> 00:05:44,120
rather than saying sorry you're on your

00:05:42,350 --> 00:05:46,040
own we want to be able to have a really

00:05:44,120 --> 00:05:47,750
simple path to just push your

00:05:46,040 --> 00:05:49,760
configuration up into an overt

00:05:47,750 --> 00:05:53,630
installation that you may have set up or

00:05:49,760 --> 00:05:55,880
OpenStack or something so I'm going to

00:05:53,630 --> 00:05:59,750
do a demo here of the server I've got it

00:05:55,880 --> 00:06:03,890
up and running here so it's loaded here

00:05:59,750 --> 00:06:05,900
in the browser so we started off I'll

00:06:03,890 --> 00:06:07,550
talk about the authentication that we

00:06:05,900 --> 00:06:10,660
have we didn't really want to have to

00:06:07,550 --> 00:06:12,950
make you configure a separate

00:06:10,660 --> 00:06:15,830
authentication like an ldap server

00:06:12,950 --> 00:06:17,780
something sort is using whatever pam is

00:06:15,830 --> 00:06:21,340
configured with others so I'm going to

00:06:17,780 --> 00:06:24,100
be logging in with my host credentials

00:06:21,340 --> 00:06:26,720
to gain access to the server so

00:06:24,100 --> 00:06:28,780
basically were here there's nothing to

00:06:26,720 --> 00:06:34,370
find first thing I'm going to want to do

00:06:28,780 --> 00:06:37,030
into the system is create a VM so start

00:06:34,370 --> 00:06:39,770
this so we have basically two questions

00:06:37,030 --> 00:06:41,300
what do you want to name your vm and

00:06:39,770 --> 00:06:43,280
template are you going to use to create

00:06:41,300 --> 00:06:44,840
it we don't have any templates so that's

00:06:43,280 --> 00:06:51,770
going to be a slight extra step for the

00:06:44,840 --> 00:06:53,690
first time so I'm going to click on the

00:06:51,770 --> 00:06:57,169
create template we have two ways to

00:06:53,690 --> 00:07:00,020
create templates from a local ISO image

00:06:57,169 --> 00:07:02,300
that's stored on the host for an

00:07:00,020 --> 00:07:06,080
experimental feature for creating them

00:07:02,300 --> 00:07:08,210
based on a web URL posted somewhere else

00:07:06,080 --> 00:07:10,039
so when I first show the local one and

00:07:08,210 --> 00:07:11,300
then towards the end of the demo I'm

00:07:10,039 --> 00:07:13,759
going to show the remote one because

00:07:11,300 --> 00:07:16,069
it's it doesn't behave extremely well

00:07:13,759 --> 00:07:19,639
and unreliable network conditions center

00:07:16,069 --> 00:07:22,400
so so basically what this is done is it

00:07:19,639 --> 00:07:25,009
scanned all the lippert storage pools on

00:07:22,400 --> 00:07:29,479
the system aggregated all ISO images

00:07:25,009 --> 00:07:31,819
that's found and it's also read the ISOs

00:07:29,479 --> 00:07:34,460
to detect what operating system they are

00:07:31,819 --> 00:07:39,430
based on the volume IDs so I'm just

00:07:34,460 --> 00:07:42,379
going to pick the door right here and

00:07:39,430 --> 00:07:44,719
that's all I do to create a template I'm

00:07:42,379 --> 00:07:47,659
not returned to the crate vm screen it

00:07:44,719 --> 00:07:50,599
knows based on the operating system what

00:07:47,659 --> 00:07:56,210
kind of based settings to use so there's

00:07:50,599 --> 00:07:58,639
kind of a summary what's so the bf's

00:07:56,210 --> 00:08:03,099
created those are the only questions

00:07:58,639 --> 00:08:07,520
they needed answer so we can start it

00:08:03,099 --> 00:08:10,639
and it's started you can see it's at the

00:08:07,520 --> 00:08:17,240
door installation screen so let's go

00:08:10,639 --> 00:08:20,900
ahead and connect to it and it got to be

00:08:17,240 --> 00:08:22,750
installed well I continue to show it so

00:08:20,900 --> 00:08:24,889
you can see we're doing live updating

00:08:22,750 --> 00:08:26,479
screenshots which were kind of in the

00:08:24,889 --> 00:08:30,620
middle of a moat said it looks like but

00:08:26,479 --> 00:08:33,200
we've got done live statistics and stuff

00:08:30,620 --> 00:08:34,640
like that being shown for the virtual

00:08:33,200 --> 00:08:39,649
machines you can kind of keep an eye on

00:08:34,640 --> 00:08:43,070
it so here's the templates town right

00:08:39,649 --> 00:08:45,110
now you can see we have one defined and

00:08:43,070 --> 00:08:47,360
of course go and edit change the name

00:08:45,110 --> 00:08:49,030
this is the outside the critical path

00:08:47,360 --> 00:08:52,630
customization if I

00:08:49,030 --> 00:08:54,790
number of CPUs or memory think of these

00:08:52,630 --> 00:08:57,550
kind of templates more as cookie cutters

00:08:54,790 --> 00:08:59,560
rather than ancestor VMs so if I change

00:08:57,550 --> 00:09:02,080
this it's not trying to affect the vm

00:08:59,560 --> 00:09:05,230
I've already created it's just going to

00:09:02,080 --> 00:09:07,810
have backbones in the future so I'm

00:09:05,230 --> 00:09:10,180
going to create a show you how the

00:09:07,810 --> 00:09:11,710
remote I still image creation works and

00:09:10,180 --> 00:09:14,920
i'm going to start it towards the end of

00:09:11,710 --> 00:09:17,050
the demo just in case it doesn't work so

00:09:14,920 --> 00:09:21,340
this is what we wanted to do for a

00:09:17,050 --> 00:09:24,490
remote iso screaming basically kimchi

00:09:21,340 --> 00:09:26,560
will come with a set of JSON files that

00:09:24,490 --> 00:09:29,920
describe distributions where they're

00:09:26,560 --> 00:09:31,420
located and optimal settings for them

00:09:29,920 --> 00:09:34,540
what's great about this as you see

00:09:31,420 --> 00:09:36,640
windows XP in the list as far as I know

00:09:34,540 --> 00:09:39,880
Microsoft isn't hosting their isil's for

00:09:36,640 --> 00:09:44,260
public download without keys so I have

00:09:39,880 --> 00:09:46,060
this one hosted on a server at work and

00:09:44,260 --> 00:09:48,610
the idea would be that if you deployed

00:09:46,060 --> 00:09:51,790
kimchi you could install an hour p.m. on

00:09:48,610 --> 00:09:54,850
top of it that supplied your own next to

00:09:51,790 --> 00:09:57,520
your own VM images just by packaging so

00:09:54,850 --> 00:10:01,210
um that one's not going to work too well

00:09:57,520 --> 00:10:03,460
here so I'm going to big one that's

00:10:01,210 --> 00:10:06,550
publicly available so we'll come back to

00:10:03,460 --> 00:10:09,490
that in a bit but I just wanted to show

00:10:06,550 --> 00:10:11,730
the storage and these are this is an API

00:10:09,490 --> 00:10:14,560
are on the lippert storage pools and

00:10:11,730 --> 00:10:17,770
allows you to create different

00:10:14,560 --> 00:10:19,750
directories on your server to store your

00:10:17,770 --> 00:10:21,520
virtual machines in the future we want

00:10:19,750 --> 00:10:24,250
to add NFS support it's just not there

00:10:21,520 --> 00:10:28,570
yet for one point no so if you click on

00:10:24,250 --> 00:10:30,160
one of these you can see the storage

00:10:28,570 --> 00:10:32,530
volumes that are in there it's a basic

00:10:30,160 --> 00:10:35,220
information about it we're going to do

00:10:32,530 --> 00:10:37,390
some more volume management extra

00:10:35,220 --> 00:10:41,260
utilization of look varied in the future

00:10:37,390 --> 00:10:42,910
but right now we're keeping it simple so

00:10:41,260 --> 00:10:45,700
they're just basic you can activate in

00:10:42,910 --> 00:10:53,770
the activate that's nothing created

00:10:45,700 --> 00:10:55,390
anyone so basically on what some of the

00:10:53,770 --> 00:10:58,600
other things that we wanted to do is add

00:10:55,390 --> 00:11:00,310
a host tab that contains just it's about

00:10:58,600 --> 00:11:02,440
the hosts you can see we're kind of

00:11:00,310 --> 00:11:06,880
memory usage you have and

00:11:02,440 --> 00:11:09,670
a cpu utilization for the host so that's

00:11:06,880 --> 00:11:13,620
forthcoming as well so I'm going to go

00:11:09,670 --> 00:11:13,620
ahead and try to create a vm from that

00:11:14,100 --> 00:11:31,980
the ubuntu remote I so so let's do a

00:11:17,590 --> 00:11:31,980
remote test it's there

00:11:36,100 --> 00:11:40,830
Oh

00:11:38,000 --> 00:11:43,260
we'll see you

00:11:40,830 --> 00:11:46,050
so that's bullying me move on to ISO

00:11:43,260 --> 00:11:48,540
image right off the internet and

00:11:46,050 --> 00:11:50,910
starting it so you know this work really

00:11:48,540 --> 00:11:52,440
well with like netinstall distribution

00:11:50,910 --> 00:11:54,000
so those tend to be the links that we

00:11:52,440 --> 00:11:55,410
would point to rather than the live CD

00:11:54,000 --> 00:11:57,630
one is what you're going to be loading

00:11:55,410 --> 00:12:02,670
takes long enough to load off the cd-rom

00:11:57,630 --> 00:12:11,600
I just to get into those so so that's

00:12:02,670 --> 00:12:11,600
that um I'll go back to the slides here

00:12:13,700 --> 00:12:20,310
so a couple of next steps I got to some

00:12:17,640 --> 00:12:22,050
of these during the demo incident on a

00:12:20,310 --> 00:12:24,870
virtual machine installation which is

00:12:22,050 --> 00:12:26,430
kind of demo that I'm demoing patches

00:12:24,870 --> 00:12:29,370
that are out on the mailing list right

00:12:26,430 --> 00:12:31,650
now or need a little bit of fine-tuning

00:12:29,370 --> 00:12:34,650
and stability and things like that if

00:12:31,650 --> 00:12:36,540
basically if the network fails while

00:12:34,650 --> 00:12:39,270
you're doing with these streaming eyes

00:12:36,540 --> 00:12:41,610
those the entire lipford API starts to

00:12:39,270 --> 00:12:44,390
become unresponsive with them so I don't

00:12:41,610 --> 00:12:47,580
need to find out what's going on there

00:12:44,390 --> 00:12:50,490
it could just be my muse of the API so

00:12:47,580 --> 00:12:52,620
um we want to be able to manage virtual

00:12:50,490 --> 00:12:55,860
networks we have some ideas on making

00:12:52,620 --> 00:12:58,470
this simple basically letting a user

00:12:55,860 --> 00:13:00,390
choose which host interface they want

00:12:58,470 --> 00:13:03,450
the vm to connect through for public

00:13:00,390 --> 00:13:06,210
network or creating private network so

00:13:03,450 --> 00:13:07,950
for public rally bull networks with

00:13:06,210 --> 00:13:09,450
internet access if they choose an

00:13:07,950 --> 00:13:12,450
ethernet device we would try to use

00:13:09,450 --> 00:13:13,980
mcafee tap automatically but they have

00:13:12,450 --> 00:13:17,490
they pickin bridge device of course we'd

00:13:13,980 --> 00:13:19,950
use the bridge we want to support

00:13:17,490 --> 00:13:21,990
virtual machine cloning so that you

00:13:19,950 --> 00:13:23,730
could actually convert a virtual machine

00:13:21,990 --> 00:13:26,160
into a template so once you get it set

00:13:23,730 --> 00:13:29,310
up the way you want you can replicate it

00:13:26,160 --> 00:13:31,200
I talked about post monitoring and

00:13:29,310 --> 00:13:33,150
administration features so divide

00:13:31,200 --> 00:13:37,080
reports and rebooting the house since

00:13:33,150 --> 00:13:39,090
invasive like that hopefully we can get

00:13:37,080 --> 00:13:41,490
this packaged in distributions to make

00:13:39,090 --> 00:13:44,640
it easy to access and install so I'm

00:13:41,490 --> 00:13:48,420
kind of getting started on that spice

00:13:44,640 --> 00:13:51,180
has an html5 client has been mentioned

00:13:48,420 --> 00:13:53,970
in previous talks and so now spice is

00:13:51,180 --> 00:13:57,240
going to become supportable

00:13:53,970 --> 00:13:59,540
we want want to require you know

00:13:57,240 --> 00:14:02,399
software to be installed on the client

00:13:59,540 --> 00:14:04,199
an interesting use case in a way that

00:14:02,399 --> 00:14:06,779
we'd like to integrate with over it

00:14:04,199 --> 00:14:09,240
would be to use the over note plug-in

00:14:06,779 --> 00:14:11,850
interface and this is an opportunity to

00:14:09,240 --> 00:14:14,430
customize over narrowed with additional

00:14:11,850 --> 00:14:17,310
software and so we thought if we create

00:14:14,430 --> 00:14:20,399
kimchi's a plug-in you can get a very

00:14:17,310 --> 00:14:22,949
easily deployable instance of kimchi

00:14:20,399 --> 00:14:25,439
build on just enough fedora again to get

00:14:22,949 --> 00:14:27,360
the job done this would be something

00:14:25,439 --> 00:14:29,069
that would you know complement or sit

00:14:27,360 --> 00:14:32,370
outside of a traditional over the

00:14:29,069 --> 00:14:35,430
environment and then of course when our

00:14:32,370 --> 00:14:37,670
users get are enjoying this but decide

00:14:35,430 --> 00:14:40,949
that they want enterprise features and

00:14:37,670 --> 00:14:42,089
some migration and shared storage and

00:14:40,949 --> 00:14:44,670
things like that that we really don't

00:14:42,089 --> 00:14:46,470
want to support a tool like this we want

00:14:44,670 --> 00:14:48,209
to make their life easy going to open

00:14:46,470 --> 00:14:50,790
your open snacks we're looking at maybe

00:14:48,209 --> 00:14:53,939
exporting images via glance or something

00:14:50,790 --> 00:14:55,769
so that they can go out to a share

00:14:53,939 --> 00:15:02,220
component that can easily import them

00:14:55,769 --> 00:15:05,309
into other systems so we're bonafide

00:15:02,220 --> 00:15:07,860
open source project of course posted on

00:15:05,309 --> 00:15:09,809
github today we're actually also an over

00:15:07,860 --> 00:15:13,019
incubator project which just means that

00:15:09,809 --> 00:15:16,769
we're working really closely with over

00:15:13,019 --> 00:15:19,399
to make sure that we're helping each

00:15:16,769 --> 00:15:21,990
other out so I'm hoping to start

00:15:19,399 --> 00:15:23,970
utilizing some overt infrastructure for

00:15:21,990 --> 00:15:27,809
things like automated testing it's like

00:15:23,970 --> 00:15:29,610
that so you guys try it out report your

00:15:27,809 --> 00:15:35,100
buttocks and patches all that good stuff

00:15:29,610 --> 00:15:36,480
here's the info and bess all for the

00:15:35,100 --> 00:15:41,069
presentations how are there any

00:15:36,480 --> 00:15:45,449
questions okay just a little thing I

00:15:41,069 --> 00:15:48,540
certainly can yeah that's a good idea we

00:15:45,449 --> 00:15:50,790
go absent that each of the positioning

00:15:48,540 --> 00:15:52,649
of this sources will i prevented remark

00:15:50,790 --> 00:15:54,779
are there a separate use cases for each

00:15:52,649 --> 00:15:55,089
wonder if you think that this i'm like

00:15:54,779 --> 00:15:57,519
this

00:15:55,089 --> 00:16:01,240
that should be a personal / vinegar yeah

00:15:57,519 --> 00:16:03,309
so I think I think it's possible on you

00:16:01,240 --> 00:16:05,589
know something like kimchi assumes you

00:16:03,309 --> 00:16:07,990
have I think a server even though I'm

00:16:05,589 --> 00:16:09,670
running it on my laptop here so that

00:16:07,990 --> 00:16:12,009
would be one difference I think the

00:16:09,670 --> 00:16:14,439
major difference here is Burt manager

00:16:12,009 --> 00:16:16,269
unless I'm missing something can't be

00:16:14,439 --> 00:16:18,370
used from a windows client unless I

00:16:16,269 --> 00:16:22,689
guess there's gtk clan or something but

00:16:18,370 --> 00:16:25,269
it's just not yeah so so this is really

00:16:22,689 --> 00:16:27,040
to target that that group me when we

00:16:25,269 --> 00:16:31,149
first came up with this is the idea that

00:16:27,040 --> 00:16:32,649
maybe you're a department you know at an

00:16:31,149 --> 00:16:35,019
office you have a server in the lab you

00:16:32,649 --> 00:16:37,329
want to do some virtualization so I

00:16:35,019 --> 00:16:39,610
think you know there's of course known

00:16:37,329 --> 00:16:43,839
boxes which is using some of these ideas

00:16:39,610 --> 00:16:45,519
about simplifying the management but

00:16:43,839 --> 00:16:47,559
again it's a native application so I

00:16:45,519 --> 00:16:50,980
think that's a big differentiator here

00:16:47,559 --> 00:16:52,600
um there's a lot I think we can do to

00:16:50,980 --> 00:16:56,050
merge between the projects that was

00:16:52,600 --> 00:16:58,180
having some conversations about using

00:16:56,050 --> 00:17:00,970
live OS info which has a lot of these

00:16:58,180 --> 00:17:03,490
answers or how to configure VMs and

00:17:00,970 --> 00:17:05,589
things I found it wasn't up to date

00:17:03,490 --> 00:17:08,140
enough uniformly across all the distros

00:17:05,589 --> 00:17:11,669
to be usable so there's some potential

00:17:08,140 --> 00:17:14,289
solutions that problem as well so yeah

00:17:11,669 --> 00:17:16,510
then how does it compare with the

00:17:14,289 --> 00:17:19,750
proxmox or something like that but does

00:17:16,510 --> 00:17:23,529
it use BDSM know this cheese is straight

00:17:19,750 --> 00:17:29,130
delivered API so I'm not familiar with

00:17:23,529 --> 00:17:33,210
what that other tools so yep you have

00:17:29,130 --> 00:17:39,580
summarized the difference between the

00:17:33,210 --> 00:17:41,649
westlake geology school and the building

00:17:39,580 --> 00:17:44,049
mature yeah I actually realized i forgot

00:17:41,649 --> 00:17:47,919
to demonstrate the rest api bearing

00:17:44,049 --> 00:17:53,470
McDowell it's it's really simple it's

00:17:47,919 --> 00:17:56,080
just the simple JSON it really uses some

00:17:53,470 --> 00:17:58,659
of the same birds as lipford so you can

00:17:56,080 --> 00:18:01,960
activate the activate storage pools and

00:17:58,659 --> 00:18:04,690
things like that um but it is a separate

00:18:01,960 --> 00:18:05,890
it's a separate API we've got a doc

00:18:04,690 --> 00:18:08,560
document

00:18:05,890 --> 00:18:11,020
right beside the tree but it's meant to

00:18:08,560 --> 00:18:13,570
be really a simplified thing for for

00:18:11,020 --> 00:18:15,760
example for creating vm is it's a simple

00:18:13,570 --> 00:18:18,160
JSON data structure we'll see how far

00:18:15,760 --> 00:18:23,220
that gets us of course there's arguments

00:18:18,160 --> 00:18:23,220
for excellent versus something simpler

00:18:23,970 --> 00:18:28,840
yeah so I think hopefully that answers

00:18:26,710 --> 00:18:30,550
your question it's really meant to be

00:18:28,840 --> 00:18:31,960
pretty simple to start with and we're

00:18:30,550 --> 00:18:34,240
going to add things loneliness with you

00:18:31,960 --> 00:18:36,820
come and if you start adding things like

00:18:34,240 --> 00:18:41,020
clothing to keep you in exposing that is

00:18:36,820 --> 00:18:43,840
action be something new on is on the

00:18:41,020 --> 00:18:45,280
nuisance yeah I mean quotes for cloning

00:18:43,840 --> 00:18:46,330
yeah that's going to get trickier

00:18:45,280 --> 00:18:49,270
because we're going to have to actually

00:18:46,330 --> 00:18:51,250
do some things you know from my

00:18:49,270 --> 00:18:54,040
understanding outside above and beyond

00:18:51,250 --> 00:19:00,400
so y applebees well to build on top of

00:18:54,040 --> 00:19:02,500
what lip hurts prolonging so yep um so

00:19:00,400 --> 00:19:05,770
we do give you in a better environment

00:19:02,500 --> 00:19:08,950
and so we're not using isos like this we

00:19:05,770 --> 00:19:11,680
use like got dope to build no exe file

00:19:08,950 --> 00:19:15,700
system so are there be a way to require

00:19:11,680 --> 00:19:20,050
rate how process them built to deploy

00:19:15,700 --> 00:19:21,880
that across target systems or is it you

00:19:20,050 --> 00:19:24,400
really the real all iso base right now

00:19:21,880 --> 00:19:26,170
sergeants you know install step and so

00:19:24,400 --> 00:19:28,360
on right for right now it's just ice

00:19:26,170 --> 00:19:31,750
those but the plan would definitely be

00:19:28,360 --> 00:19:34,420
to be able to create a vm from an

00:19:31,750 --> 00:19:36,720
existing disk image so hopefully that be

00:19:34,420 --> 00:19:39,610
and i'll see if you already knew the

00:19:36,720 --> 00:19:42,490
disk image or all you met was on the

00:19:39,610 --> 00:19:44,680
system somewhere be an NFS or locally

00:19:42,490 --> 00:19:47,830
hosted that you could just clone

00:19:44,680 --> 00:19:49,150
straight from that so yeah we're going

00:19:47,830 --> 00:19:50,650
to we're going to try to add a few of

00:19:49,150 --> 00:19:52,570
those things I think right now we just

00:19:50,650 --> 00:20:00,130
try to address what would consider those

00:19:52,570 --> 00:20:03,460
like the first potential use cases yeah

00:20:00,130 --> 00:20:05,279
what is then to be able to evoke such an

00:20:03,460 --> 00:20:12,789
existing Egyptian

00:20:05,279 --> 00:20:14,789
which kind of them yeah so as far as I'm

00:20:12,789 --> 00:20:18,370
sorry yeah so what is the plan for

00:20:14,789 --> 00:20:21,450
importing existing virtual machines I

00:20:18,370 --> 00:20:24,279
guess it's worth worth noting here that

00:20:21,450 --> 00:20:26,590
we're really trying to adopt a defensive

00:20:24,279 --> 00:20:29,070
posture on top of the lippert API so

00:20:26,590 --> 00:20:32,470
we're making no assumptions about what

00:20:29,070 --> 00:20:35,049
devices the vm might have so when can

00:20:32,470 --> 00:20:38,879
she creates them for example right now

00:20:35,049 --> 00:20:42,610
we don't support spice but IBM has spice

00:20:38,879 --> 00:20:44,350
we'll just honor ate it and we won't try

00:20:42,610 --> 00:20:47,619
to offer them a BNC connection for

00:20:44,350 --> 00:20:52,029
example so i would say that importing vm

00:20:47,619 --> 00:20:53,950
should be pretty easy to do that we

00:20:52,029 --> 00:20:56,679
don't have any i guess the rap plans

00:20:53,950 --> 00:20:58,629
from importing like there's no real this

00:20:56,679 --> 00:21:01,240
is about creating them from nothing more

00:20:58,629 --> 00:21:02,710
so then you are to have a management

00:21:01,240 --> 00:21:07,019
system somewhere else that you're

00:21:02,710 --> 00:21:10,080
importing from but certainly we're

00:21:07,019 --> 00:21:14,980
exploring all the different potential

00:21:10,080 --> 00:21:18,249
excuse cases that people might want yep

00:21:14,980 --> 00:21:19,570
are there any plans to support having

00:21:18,249 --> 00:21:21,639
more than a single to her advantage

00:21:19,570 --> 00:21:25,269
they're just in there yes it's a very

00:21:21,639 --> 00:21:26,860
good question um one of the and I mitad

00:21:25,269 --> 00:21:29,259
it on the slides but one of the things

00:21:26,860 --> 00:21:31,480
that we were kind of talking about what

00:21:29,259 --> 00:21:35,019
the initial design of this is a

00:21:31,480 --> 00:21:37,570
federated approach to having multiple

00:21:35,019 --> 00:21:39,639
kimchi servers and a lab or in your data

00:21:37,570 --> 00:21:42,970
center so this isn't really tight

00:21:39,639 --> 00:21:45,610
lockstep where you're tracking the state

00:21:42,970 --> 00:21:49,149
across the systems but if you have a 210

00:21:45,610 --> 00:21:51,820
kimchi servers in the lab we're looking

00:21:49,149 --> 00:21:54,129
at creating an API so that the kimchi

00:21:51,820 --> 00:21:56,409
servers can find one another and then

00:21:54,129 --> 00:21:59,529
what we would just do is present the

00:21:56,409 --> 00:22:01,749
server's is selectable from within the

00:21:59,529 --> 00:22:04,149
user interface and when you click a tab

00:22:01,749 --> 00:22:06,999
to go to one of those servers it just

00:22:04,149 --> 00:22:09,840
takes you to that web web server on that

00:22:06,999 --> 00:22:13,809
system so you can kind of bounce between

00:22:09,840 --> 00:22:16,500
multiple different servers yep if you've

00:22:13,809 --> 00:22:19,240
got we blew managing VMs on 10 different

00:22:16,500 --> 00:22:21,760
servers why would you

00:22:19,240 --> 00:22:24,160
not suggest to be using over others I

00:22:21,760 --> 00:22:28,179
migrated because you mentioned the easy

00:22:24,160 --> 00:22:30,640
migration of VMs right so 10 is probably

00:22:28,179 --> 00:22:32,440
getting to be your upper bound with

00:22:30,640 --> 00:22:34,780
something with a tool like this so I

00:22:32,440 --> 00:22:36,550
just use that as a higher number but you

00:22:34,780 --> 00:22:39,630
know certainly if you've got a couple of

00:22:36,550 --> 00:22:42,280
machines you might it might still be

00:22:39,630 --> 00:22:43,750
meeting your needs but as you get as we

00:22:42,280 --> 00:22:45,460
get up into that higher level you're

00:22:43,750 --> 00:22:47,050
really don't want to start thinking

00:22:45,460 --> 00:22:49,240
about it and then yet certainly out of

00:22:47,050 --> 00:22:51,700
10 machines being able to visit the

00:22:49,240 --> 00:22:57,340
servers and send your machines up to

00:22:51,700 --> 00:22:59,910
over he has rather than okay yep this is

00:22:57,340 --> 00:23:02,590
just a few Christian have you tried

00:22:59,910 --> 00:23:06,640
accessing the web page from my voltage

00:23:02,590 --> 00:23:08,620
Alexis yeah actually it's a another good

00:23:06,640 --> 00:23:10,450
question so from the beginning we've

00:23:08,620 --> 00:23:13,720
been trying to make this tablet friendly

00:23:10,450 --> 00:23:16,059
interface so routinely when I commit

00:23:13,720 --> 00:23:19,630
features to this I'm verifying that it

00:23:16,059 --> 00:23:21,820
works fine on an iPad or other tablet so

00:23:19,630 --> 00:23:23,470
even though VNC stuff works just fine

00:23:21,820 --> 00:23:27,010
you can help it pops open a new window

00:23:23,470 --> 00:23:29,320
and you can it's we don't have keyboard

00:23:27,010 --> 00:23:33,480
entry support or something but it but it

00:23:29,320 --> 00:23:33,480
does pop open in this planning it works

00:23:34,679 --> 00:23:43,420
yep it goes to talk it nova kbm for

00:23:39,370 --> 00:23:46,660
example no dicks potatoes no not really

00:23:43,420 --> 00:23:49,179
how about fixed up right this is really

00:23:46,660 --> 00:23:51,070
about trying to you know use what the

00:23:49,179 --> 00:23:53,559
best practices that we know work for KP

00:23:51,070 --> 00:23:56,670
I've been making it fine tuned to work

00:23:53,559 --> 00:23:56,670
best on that conveyor

00:23:59,210 --> 00:24:04,610
alright well thanks for all the good

00:24:01,050 --> 00:24:04,610

YouTube URL: https://www.youtube.com/watch?v=iDXs0OW819M


