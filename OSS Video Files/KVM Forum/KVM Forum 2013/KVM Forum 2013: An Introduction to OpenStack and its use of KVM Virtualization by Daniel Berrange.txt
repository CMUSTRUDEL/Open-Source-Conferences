Title: KVM Forum 2013: An Introduction to OpenStack and its use of KVM Virtualization by Daniel Berrange
Publication date: 2014-10-30
Playlist: KVM Forum 2013
Description: 
	Slides: https://docs.google.com/file/d/0BzyAwvVlQckeYTNWblItSFozZ2M

In the 3 years since it was founded, the OpenStack project has grown very rapidly, attracting a range of contributors from across the open source ecosystem, and looks on track to assume a dominant position in the open source cloud computing space. At the core of OpenStack, the Nova sub-project provides a compute platform able to leverage a number of virtualization technologies, with KVM as the most prominent choice. Daniel, as a member of the Nova core team, aims to ensure that KVM remains the most feature rich virtualization technology integrated in Nova. The talk will outline the overall OpenStack architecture with a focus on Nova, the capabilities of KVM as used in Nova, how KVM integrates with the OpenStack storage and networking sub-projects, and what developments to expect in future releases of OpenStack.
Captions: 
	00:00:00,000 --> 00:00:07,020
so my project I'm going to talk to you

00:00:03,210 --> 00:00:11,309
today about open sack with a bigger

00:00:07,020 --> 00:00:21,560
focus on over and yeah that's what most

00:00:11,309 --> 00:00:27,060
people hear you're interested if you

00:00:21,560 --> 00:00:31,160
know me from I work on Liberty s as well

00:00:27,060 --> 00:00:34,020
as you can make it ization projects and

00:00:31,160 --> 00:00:39,570
in the past year I've also started doing

00:00:34,020 --> 00:00:44,030
work on OpenStack Nova who catches to

00:00:39,570 --> 00:00:51,480
approve the kvm support in both and

00:00:44,030 --> 00:00:55,399
became a core team review up and over so

00:00:51,480 --> 00:00:58,500
the structure of it or giving a bit of a

00:00:55,399 --> 00:01:01,399
introductions OpenStack in the various

00:00:58,500 --> 00:01:05,280
components and who names might I

00:01:01,399 --> 00:01:06,990
mentioned then we're going to look a

00:01:05,280 --> 00:01:10,070
little bit more or at the architecture

00:01:06,990 --> 00:01:13,740
of nova which is the compute part of

00:01:10,070 --> 00:01:16,860
OpenStack and in doing that I'm going to

00:01:13,740 --> 00:01:21,060
cover a simplified view of the guest

00:01:16,860 --> 00:01:22,619
group sequence and and then to walk into

00:01:21,060 --> 00:01:26,220
the talk is you mentioned some of the

00:01:22,619 --> 00:01:29,909
recent comments about them and release

00:01:26,220 --> 00:01:34,430
them OpenStack laugh at what will be

00:01:29,909 --> 00:01:34,430
coming in the next six months

00:01:36,360 --> 00:01:45,630
what is what is open sex and it is

00:01:41,250 --> 00:01:49,860
really doing public or private cloud

00:01:45,630 --> 00:01:55,970
deployments to an end user it consists

00:01:49,860 --> 00:01:58,260
of a stop bits API and a dashboard

00:01:55,970 --> 00:02:05,130
noisome choice of methods were

00:01:58,260 --> 00:02:11,070
interacting with over missive license

00:02:05,130 --> 00:02:16,200
key when a license as very broad the

00:02:11,070 --> 00:02:20,430
confusion from companies and individuals

00:02:16,200 --> 00:02:24,540
I don't know almost there's so many

00:02:20,430 --> 00:02:32,520
they're very fun project them moving

00:02:24,540 --> 00:02:33,989
quickly indeed so I'd like to go through

00:02:32,520 --> 00:02:36,330
a couple of components of OpenStack

00:02:33,989 --> 00:02:38,760
because this is targeting such a broad

00:02:36,330 --> 00:02:41,519
range of functionality the episode

00:02:38,760 --> 00:02:44,580
projects has been split up into a number

00:02:41,519 --> 00:02:49,470
of components each focusing on a

00:02:44,580 --> 00:02:57,360
particular function of area Agencies own

00:02:49,470 --> 00:02:59,970
Xu ok so most interesting from our view

00:02:57,360 --> 00:03:03,690
is the computer service which is simply

00:02:59,970 --> 00:03:06,570
known and supporting the computer

00:03:03,690 --> 00:03:10,739
service we have a networking service

00:03:06,570 --> 00:03:14,040
called neutron and image storage which

00:03:10,739 --> 00:03:17,940
is where basic operating system disk

00:03:14,040 --> 00:03:21,090
images are maintained block storage

00:03:17,940 --> 00:03:24,810
which is for providing assistance slot

00:03:21,090 --> 00:03:26,340
devices to gas and then a couple of

00:03:24,810 --> 00:03:28,019
other things you're not really going to

00:03:26,340 --> 00:03:32,150
covering that is Megan here for

00:03:28,019 --> 00:03:36,170
completeness of it Norwich identity with

00:03:32,150 --> 00:03:40,350
authentication really metering which

00:03:36,170 --> 00:03:43,079
allows traitors to find out what users

00:03:40,350 --> 00:03:49,090
are things to make do billing problem

00:03:43,079 --> 00:03:51,959
and abstraction is a way of

00:03:49,090 --> 00:03:56,769
and simplified management of instances

00:03:51,959 --> 00:03:59,379
like get a recipes cited by active

00:03:56,769 --> 00:04:03,099
images but a complete application

00:03:59,379 --> 00:04:07,299
service at George which is exactly

00:04:03,099 --> 00:04:09,849
different states my front I'm going to

00:04:07,299 --> 00:04:11,170
talk about except for things that this

00:04:09,849 --> 00:04:17,199
talk because there's not nearly enough

00:04:11,170 --> 00:04:21,400
time to cover everything so what is Nova

00:04:17,199 --> 00:04:23,740
Nova is basically the computer service

00:04:21,400 --> 00:04:27,000
so it's the thing that is concerned with

00:04:23,740 --> 00:04:32,130
running your virtual machines or or

00:04:27,000 --> 00:04:34,990
operating system instances it's actually

00:04:32,130 --> 00:04:36,580
technology agnostic it's it's quite

00:04:34,990 --> 00:04:38,919
happy doing full machine-based

00:04:36,580 --> 00:04:42,520
virtualization or innovates

00:04:38,919 --> 00:04:44,350
virtualization but to be on most of the

00:04:42,520 --> 00:04:46,510
usage these days is full machine

00:04:44,350 --> 00:04:47,770
virtualization kind of container stuff

00:04:46,510 --> 00:04:49,979
is their effort there's not very many

00:04:47,770 --> 00:04:52,780
people using it at this point in time I

00:04:49,979 --> 00:04:57,070
think that'll probably change change

00:04:52,780 --> 00:05:01,120
over time and it's also fertilization

00:04:57,070 --> 00:05:03,479
agnostic is the proper plural

00:05:01,120 --> 00:05:07,599
virtualization layer excitement over

00:05:03,479 --> 00:05:09,130
with many different implementations the

00:05:07,599 --> 00:05:12,340
lipid implementation is obviously the

00:05:09,130 --> 00:05:14,380
one that I'm most interested in and the

00:05:12,340 --> 00:05:19,150
lipid implementation provides the kvm a

00:05:14,380 --> 00:05:22,900
few mu functionality in Nova there's

00:05:19,150 --> 00:05:27,460
also drivers LXE which is Linux

00:05:22,900 --> 00:05:29,440
containers and with em and even user

00:05:27,460 --> 00:05:33,220
mode Linux know what really does that

00:05:29,440 --> 00:05:37,930
anymore so I left it off the slide aside

00:05:33,220 --> 00:05:45,940
from the first driver there is a PA na

00:05:37,930 --> 00:05:49,599
VI driver hyper-v VMware powervm poker

00:05:45,940 --> 00:05:52,720
which is a higher level container API

00:05:49,599 --> 00:05:59,529
placed on Alexei and even though they're

00:05:52,720 --> 00:06:04,769
metal driver I depends right direction

00:05:59,529 --> 00:06:08,169
lo paga claims which expanded scope come

00:06:04,769 --> 00:06:10,449
recently we've had experimental data

00:06:08,169 --> 00:06:12,519
center world then we have to take the

00:06:10,449 --> 00:06:16,269
center virtualization and that we got

00:06:12,519 --> 00:06:18,909
out well OpenStack started out of the

00:06:16,269 --> 00:06:22,269
cloud solution c is expanding into the

00:06:18,909 --> 00:06:24,609
bare metal area there and i think over

00:06:22,269 --> 00:06:27,279
time you'll see OpenStack think of a lot

00:06:24,609 --> 00:06:29,589
of you know data center road features as

00:06:27,279 --> 00:06:33,429
well so it will expand to cover all

00:06:29,589 --> 00:06:34,779
aspects of machine management whether

00:06:33,429 --> 00:06:41,889
it's their backs will take this into

00:06:34,779 --> 00:06:46,119
virtual cloud verse right so looking at

00:06:41,889 --> 00:06:50,679
the image service next image service is

00:06:46,119 --> 00:06:53,109
noted by the code name on this is

00:06:50,679 --> 00:06:55,679
basically providing why like tense

00:06:53,109 --> 00:06:59,559
professor wet right once read many

00:06:55,679 --> 00:07:02,409
storage of images so a user will create

00:06:59,559 --> 00:07:05,199
a disk image using some appliance

00:07:02,409 --> 00:07:08,769
building tools and then upload that

00:07:05,199 --> 00:07:12,039
image in turn into open that'll be

00:07:08,769 --> 00:07:13,809
that'll be stored like lance and when

00:07:12,039 --> 00:07:16,179
Nova comes along and once to actually

00:07:13,809 --> 00:07:19,599
put an instance of that image it will

00:07:16,179 --> 00:07:22,509
copy the data rosen plants into some

00:07:19,599 --> 00:07:25,089
storage lenovo managers so from what you

00:07:22,509 --> 00:07:31,239
have the image service it just it only

00:07:25,089 --> 00:07:33,519
they're basically and lance and self is

00:07:31,239 --> 00:07:36,369
agnostics with formats of the disk

00:07:33,519 --> 00:07:40,499
images you cannot identify the disk

00:07:36,369 --> 00:07:43,209
image with lance whether it's raw yeah

00:07:40,499 --> 00:07:44,559
it never really looks inside the

00:07:43,209 --> 00:07:47,229
scrimmages so it doesn't care what

00:07:44,559 --> 00:07:51,429
format there in the constraints or

00:07:47,229 --> 00:07:56,679
formats imposed by the computer which is

00:07:51,429 --> 00:08:04,179
actually images and as well as uploading

00:07:56,679 --> 00:08:08,079
images the other way to do it unless its

00:08:04,179 --> 00:08:10,050
political and give OpenStack would leave

00:08:08,079 --> 00:08:14,759
information about

00:08:10,050 --> 00:08:16,949
what image wires run so that is the

00:08:14,759 --> 00:08:18,990
simplest example as well what's

00:08:16,949 --> 00:08:22,590
described it as it needs does it need ID

00:08:18,990 --> 00:08:25,620
as an inverter that's what metadata

00:08:22,590 --> 00:08:28,849
properties even set a bunch of other

00:08:25,620 --> 00:08:28,849
metadata properties which are much

00:08:33,589 --> 00:08:41,039
storage Ernest and OpenStack is known as

00:08:36,779 --> 00:08:51,149
in the and this provides assistant

00:08:41,039 --> 00:09:00,000
devices the instances it is Genesis it's

00:08:51,149 --> 00:09:05,040
copied out of love it way again because

00:09:00,000 --> 00:09:11,180
preserve across that's what it provides

00:09:05,040 --> 00:09:13,470
its block devices for your instances and

00:09:11,180 --> 00:09:15,570
as with everything in the other cycle

00:09:13,470 --> 00:09:18,270
eldest very pluggable so there's

00:09:15,570 --> 00:09:22,649
multiple backends for simba it can store

00:09:18,270 --> 00:09:26,550
its data in LPM volumes and RVD volumes

00:09:22,649 --> 00:09:28,740
in blustery fest I did a whole range

00:09:26,550 --> 00:09:30,660
mother I Ken's which I can't remember

00:09:28,740 --> 00:09:37,920
off the top of my head because they're

00:09:30,660 --> 00:09:40,740
changing all the time typically the blog

00:09:37,920 --> 00:09:45,839
service runs on earth efforts hosts to

00:09:40,740 --> 00:09:47,940
the actual dilation hosts so the block

00:09:45,839 --> 00:09:51,870
devices are exposed by citation post

00:09:47,940 --> 00:09:53,910
using I scuzzy typically one of the most

00:09:51,870 --> 00:09:56,010
recent developments is actually making

00:09:53,910 --> 00:09:58,320
it possible for the virtualization hosts

00:09:56,010 --> 00:10:00,899
that directly connects to the actual

00:09:58,320 --> 00:10:03,570
storage I just taking like at the other

00:10:00,899 --> 00:10:05,520
loop and this is not an implement inside

00:10:03,570 --> 00:10:09,269
lust for at best in the most recent

00:10:05,520 --> 00:10:13,220
release of contacts and I expected for

00:10:09,269 --> 00:10:20,970
its picture also with other based

00:10:13,220 --> 00:10:22,440
storage like rpd and the persistence is

00:10:20,970 --> 00:10:23,730
the petition log storages also a

00:10:22,440 --> 00:10:33,120
prerequisite for

00:10:23,730 --> 00:10:35,430
vibrating vm Andros the third were the

00:10:33,120 --> 00:10:40,170
foursome my prospective never to mention

00:10:35,430 --> 00:10:44,490
here is the networking service and this

00:10:40,170 --> 00:10:47,010
is not known by name neutron and they

00:10:44,490 --> 00:10:50,670
provide management of the physical

00:10:47,010 --> 00:10:54,560
network using a couple of concept of

00:10:50,670 --> 00:10:59,940
concept of a network rooster sickness

00:10:54,560 --> 00:11:02,220
and also the idea of ports support

00:10:59,940 --> 00:11:06,420
towards the virtual machine network

00:11:02,220 --> 00:11:09,029
interfaces connect into and and again

00:11:06,420 --> 00:11:11,970
this is highly pluggable so there are a

00:11:09,029 --> 00:11:14,930
wide variety of different networking

00:11:11,970 --> 00:11:17,910
technologies that plugs into Neutron

00:11:14,930 --> 00:11:20,220
some limo more common ones are open V

00:11:17,910 --> 00:11:23,160
switch was actually several plugins

00:11:20,220 --> 00:11:25,889
based on open beasts which depending on

00:11:23,160 --> 00:11:27,720
the vendor technology behind it there's

00:11:25,889 --> 00:11:30,480
the traditional the next bridge and

00:11:27,720 --> 00:11:32,279
there's a whole bunch of vendor specific

00:11:30,480 --> 00:11:40,290
network technologies that are in there

00:11:32,279 --> 00:11:46,079
as well so that was a very quickly

00:11:40,290 --> 00:11:48,149
review of okay and owner and it's a

00:11:46,079 --> 00:11:52,319
little bit more about the architecture

00:11:48,149 --> 00:11:53,880
that's the computer by the layer which

00:11:52,319 --> 00:11:58,709
is a bit of people are most interested

00:11:53,880 --> 00:12:01,800
in so there are a couple of core

00:11:58,709 --> 00:12:04,170
concepts in that where there's instances

00:12:01,800 --> 00:12:10,730
which is the most common thief or a

00:12:04,170 --> 00:12:13,380
virtual machine and slavers flavor is a

00:12:10,730 --> 00:12:16,430
collection of properties which define

00:12:13,380 --> 00:12:20,639
the characteristics of the protein

00:12:16,430 --> 00:12:25,230
levels a virtual to use it has how much

00:12:20,639 --> 00:12:28,829
memory yes whether the swap disc for the

00:12:25,230 --> 00:12:33,300
instance how root system it will be and

00:12:28,829 --> 00:12:35,670
handful of other properties it's just a

00:12:33,300 --> 00:12:37,590
convenient way of setting up a bunch of

00:12:35,670 --> 00:12:43,770
hardware defaults

00:12:37,590 --> 00:12:46,050
for a virtual machine and no but most of

00:12:43,770 --> 00:12:51,590
all the earth drivers and I mentioned

00:12:46,050 --> 00:12:56,400
earlier I'm km um you hyper-v VMware and

00:12:51,590 --> 00:13:01,800
it also has security group and your

00:12:56,400 --> 00:13:04,440
recruitment network level if isolation

00:13:01,800 --> 00:13:06,510
between different virtual machines and

00:13:04,440 --> 00:13:08,850
they're attached to the same network and

00:13:06,510 --> 00:13:12,210
this is done with a combination of

00:13:08,850 --> 00:13:15,630
iptables eb tables just the filter they

00:13:12,210 --> 00:13:27,420
kept network traffic as isolates them

00:13:15,630 --> 00:13:31,310
from each other now is controlled by two

00:13:27,420 --> 00:13:34,980
different rested guides there's the

00:13:31,310 --> 00:13:37,760
native rest api for nova and this

00:13:34,980 --> 00:13:41,220
exposes all over the galaxy another is

00:13:37,760 --> 00:13:47,300
then there is also an faq compatible

00:13:41,220 --> 00:13:52,080
rest api which is useful if Sorrentino

00:13:47,300 --> 00:13:55,950
ep2 api you point the most for instance

00:13:52,080 --> 00:13:58,110
a nation or s1 so they went to

00:13:55,950 --> 00:14:01,710
thoroughly explore range of

00:13:58,110 --> 00:14:04,140
functionality a billion like native API

00:14:01,710 --> 00:14:06,300
else just because if you're implementing

00:14:04,140 --> 00:14:18,140
easy to API you can straighten my life

00:14:06,300 --> 00:14:25,080
amazonas finds their operations to be so

00:14:18,140 --> 00:14:31,260
each am back it is insert several

00:14:25,080 --> 00:14:36,030
services in / is great for important

00:14:31,260 --> 00:14:41,550
services the couple more the important

00:14:36,030 --> 00:14:45,120
ones are shown as shown here I it's

00:14:41,550 --> 00:14:48,260
where the end user comes in making that

00:14:45,120 --> 00:14:48,260
rest api thought

00:14:48,490 --> 00:14:56,500
it makes rest api foods and either as

00:14:52,540 --> 00:14:59,050
information database or inputs are key

00:14:56,500 --> 00:15:05,890
messages on through a message for us

00:14:59,050 --> 00:15:09,040
with a ftp typically the scheduler

00:15:05,890 --> 00:15:14,070
components this is responsible deciding

00:15:09,040 --> 00:15:18,670
which the machine is at around the

00:15:14,070 --> 00:15:28,149
components is in charge of updating

00:15:18,670 --> 00:15:33,070
phase when things change in april a

00:15:28,149 --> 00:15:37,990
location that relation technology lived

00:15:33,070 --> 00:15:40,330
as an AVM that's a very simple

00:15:37,990 --> 00:15:42,540
architecture each of you each one of

00:15:40,330 --> 00:15:48,580
these three boxes as a separate process

00:15:42,540 --> 00:15:50,230
running on separate hosts but you've got

00:15:48,580 --> 00:15:53,140
to scale this up you can actually want

00:15:50,230 --> 00:15:54,910
to run off these components in that case

00:15:53,140 --> 00:15:57,700
you've put a load balancer on the front

00:15:54,910 --> 00:16:00,700
the rest api come in and a load balancer

00:15:57,700 --> 00:16:03,520
all spread the load across multiple of

00:16:00,700 --> 00:16:07,570
the API service and you can of course

00:16:03,520 --> 00:16:10,240
our possible instances the beach let's

00:16:07,570 --> 00:16:13,680
give you away to scale out but

00:16:10,240 --> 00:16:17,079
individual deployments to meet your

00:16:13,680 --> 00:16:20,290
usage requirements you still only got

00:16:17,079 --> 00:16:26,140
one database and one message that's

00:16:20,290 --> 00:16:29,380
instance what if you want to go and just

00:16:26,140 --> 00:16:34,630
adding more services using an Excel well

00:16:29,380 --> 00:16:37,899
there was a in the in the Grizzlies

00:16:34,630 --> 00:16:43,600
which is the most recent one there was a

00:16:37,899 --> 00:16:46,180
concept of cells introduced the idea of

00:16:43,600 --> 00:16:47,800
the cell architecture is that we want to

00:16:46,180 --> 00:16:52,270
be able to partition unemployed persons

00:16:47,800 --> 00:16:53,440
and multiple isolated components there

00:16:52,270 --> 00:16:55,510
are a couple of reasons you want to do

00:16:53,440 --> 00:16:57,970
this you don't want to have resilience

00:16:55,510 --> 00:17:01,410
within your data center so that they

00:16:57,970 --> 00:17:01,410
give a fault with some partners

00:17:01,690 --> 00:17:09,970
I tell you exactly if I slice into one

00:17:05,290 --> 00:17:11,980
little past not come over if your

00:17:09,970 --> 00:17:15,880
thank-yous ready or your cat across

00:17:11,980 --> 00:17:19,180
multiple data centers or the third

00:17:15,880 --> 00:17:21,699
possibility you just want to have it for

00:17:19,180 --> 00:17:25,270
ease of management so you want to say at

00:17:21,699 --> 00:17:27,400
a hyper-v based clouding it will have am

00:17:25,270 --> 00:17:31,570
based cloud at least want to have them

00:17:27,400 --> 00:17:32,940
in a separate self reason management so

00:17:31,570 --> 00:17:39,370
there are a couple of the reasons for

00:17:32,940 --> 00:17:42,250
this feature being introduced so if

00:17:39,370 --> 00:17:44,260
you're making use of cells the

00:17:42,250 --> 00:17:47,530
architecture looks something like this

00:17:44,260 --> 00:17:50,440
you have the API cell which is where

00:17:47,530 --> 00:17:53,350
there an end user requests come in and

00:17:50,440 --> 00:17:59,800
then that decides which of the ocean of

00:17:53,350 --> 00:18:01,540
confused cells and requests on to the

00:17:59,800 --> 00:18:04,780
computer cell just contains all the

00:18:01,540 --> 00:18:07,180
other parts that I mentioned a couple of

00:18:04,780 --> 00:18:10,930
slides back the scheduler conductor

00:18:07,180 --> 00:18:13,930
compute service all that changes we have

00:18:10,930 --> 00:18:16,300
a slightly different API blog here but

00:18:13,930 --> 00:18:22,530
basically the architecture is the same

00:18:16,300 --> 00:18:22,530
as a modern set based deployments and

00:18:22,830 --> 00:18:31,420
the API cell is just a low balance a

00:18:27,100 --> 00:18:37,270
couple of mobile API instances and then

00:18:31,420 --> 00:18:40,060
another cell specific service this this

00:18:37,270 --> 00:18:43,690
allows you to scale it back up to really

00:18:40,060 --> 00:18:47,110
enormous enormous numbers of

00:18:43,690 --> 00:18:52,870
virtualization hosts and and you live

00:18:47,110 --> 00:18:55,720
them stuff so now they want to look a

00:18:52,870 --> 00:18:59,320
little bit more about and some of the

00:18:55,720 --> 00:19:04,030
individual Nova services I mentioned the

00:18:59,320 --> 00:19:06,310
scheduler a couple of slides back this

00:19:04,030 --> 00:19:10,210
is a fairly simple service it anybody

00:19:06,310 --> 00:19:12,670
has one job and that job is to decide

00:19:10,210 --> 00:19:15,210
which virtualization hosts to put the

00:19:12,670 --> 00:19:18,120
virtual machines on

00:19:15,210 --> 00:19:21,640
and yet again this is highly

00:19:18,120 --> 00:19:24,850
this blood is possible using this notion

00:19:21,640 --> 00:19:26,770
of filters there are a whole range of

00:19:24,850 --> 00:19:30,550
filters that are in the exact source

00:19:26,770 --> 00:19:32,770
tree and I just got a very small number

00:19:30,550 --> 00:19:37,480
of them here just to give you an idea of

00:19:32,770 --> 00:19:39,340
the things that they do and you have

00:19:37,480 --> 00:19:42,880
filters which look at the cpu model

00:19:39,340 --> 00:19:55,540
grass texture if you want a button at

00:19:42,880 --> 00:20:01,510
the end share you let me know which

00:19:55,540 --> 00:20:07,300
hosts like fresh Regina and I think if

00:20:01,510 --> 00:20:10,630
the mixture of ok Emily be orbiting as

00:20:07,300 --> 00:20:24,120
your requirement for one the technology

00:20:10,630 --> 00:20:28,360
your life's writers that big a deal as

00:20:24,120 --> 00:20:34,690
which PCI devices the right one

00:20:28,360 --> 00:20:38,080
supplying get to and simple form of

00:20:34,690 --> 00:20:42,550
space metrics so considering available

00:20:38,080 --> 00:20:48,790
rare unavailable to CPU cycles if usage

00:20:42,550 --> 00:20:51,400
along you can even have taken out of

00:20:48,790 --> 00:20:55,050
whether we hosted run across the boot

00:20:51,400 --> 00:20:58,990
environment or not it's probably about

00:20:55,050 --> 00:21:02,350
you know more other than over story

00:20:58,990 --> 00:21:06,930
let's do various things which I don't

00:21:02,350 --> 00:21:06,930
know this way of managing all the time

00:21:09,960 --> 00:21:16,600
so the next the next service in Nova is

00:21:13,809 --> 00:21:19,780
known as the conductor this is another

00:21:16,600 --> 00:21:22,950
fairly recent introduction I think it

00:21:19,780 --> 00:21:26,559
came in the Grizzly cycle which was

00:21:22,950 --> 00:21:29,860
beautifully first one and the idea here

00:21:26,559 --> 00:21:32,320
is the mediator database access the

00:21:29,860 --> 00:21:34,600
original of in fact computer

00:21:32,320 --> 00:21:37,990
architecture at each virtualization

00:21:34,600 --> 00:21:41,220
house updating the database when a

00:21:37,990 --> 00:21:44,169
change occurred in the vm state

00:21:41,220 --> 00:21:46,840
specifically a performance bottleneck

00:21:44,169 --> 00:21:49,720
because you have just one database

00:21:46,840 --> 00:21:51,490
server and you have many thousands or

00:21:49,720 --> 00:21:53,559
even tens of thousands of virtualization

00:21:51,490 --> 00:21:56,320
hosts and you really don't want that

00:21:53,559 --> 00:22:00,850
many hosts all updating the database at

00:21:56,320 --> 00:22:07,090
once and visa minus was introduced was

00:22:00,850 --> 00:22:10,240
as a security improvements the

00:22:07,090 --> 00:22:13,000
virtualization hoses are probably part

00:22:10,240 --> 00:22:19,419
of the second lecture you want you want

00:22:13,000 --> 00:22:24,429
to constrain motivation through debates

00:22:19,419 --> 00:22:28,419
so they have exact the idea of a

00:22:24,429 --> 00:22:35,049
conductor services introduced and so now

00:22:28,419 --> 00:22:38,290
the computers and exchange its message

00:22:35,049 --> 00:22:40,990
on tlie and you messaged us the

00:22:38,290 --> 00:22:44,080
conductor picture this message validates

00:22:40,990 --> 00:22:47,770
Liz actually a same thing to do another

00:22:44,080 --> 00:22:50,350
to the database and stays there's a very

00:22:47,770 --> 00:22:56,740
big performance win as well as a

00:22:50,350 --> 00:23:01,690
security benefit one of the boxes that

00:22:56,740 --> 00:23:06,429
in have on me are exercised and what the

00:23:01,690 --> 00:23:09,010
graphics proxy and there are two ways to

00:23:06,429 --> 00:23:12,760
interact with virtual machines in

00:23:09,010 --> 00:23:16,000
OpenStack by the graphical console or or

00:23:12,760 --> 00:23:21,669
a text-based serial console a Sarasota

00:23:16,000 --> 00:23:23,260
spine so obviously a little bit windows

00:23:21,669 --> 00:23:25,330
administrators really want haven't

00:23:23,260 --> 00:23:29,980
will console to their their virtual

00:23:25,330 --> 00:23:33,720
instance the openstack has the ability

00:23:29,980 --> 00:23:36,300
to expose either ence or spice

00:23:33,720 --> 00:23:38,620
connections to the virtual instances and

00:23:36,300 --> 00:23:41,470
we also expose the individual

00:23:38,620 --> 00:23:44,650
virtualization host to the public

00:23:41,470 --> 00:23:48,330
Internet the desire of a graphics be

00:23:44,650 --> 00:23:51,520
produced and it's runs on a

00:23:48,330 --> 00:23:56,130
public-facing host have to be exact

00:23:51,520 --> 00:23:59,320
website is protocol tunnel BNC of life

00:23:56,130 --> 00:24:06,460
let's Bacchus and if proxies all the

00:23:59,320 --> 00:24:11,040
data between Daniel computers this is

00:24:06,460 --> 00:24:11,040
also where the authentication comes in

00:24:12,570 --> 00:24:19,360
when when a user wants to get access to

00:24:15,760 --> 00:24:25,600
the graphical console by there but they

00:24:19,360 --> 00:24:27,040
make it VI fall and a also there's that

00:24:25,600 --> 00:24:31,570
emotional instant like that

00:24:27,040 --> 00:24:34,930
authentication token when making a

00:24:31,570 --> 00:24:39,340
connection for the WebSockets proxy that

00:24:34,930 --> 00:24:43,240
validates the token and says the token

00:24:39,340 --> 00:24:45,250
also encouraged the pitch outside

00:24:43,240 --> 00:24:47,200
connecting so the proxy cannot forward

00:24:45,250 --> 00:24:52,560
Directorate violation allows them the

00:24:47,200 --> 00:24:52,560
correct eventually on that host and

00:24:53,100 --> 00:25:00,160
probably extra window basically copying

00:24:56,590 --> 00:25:04,960
the data between the actual the NCOs

00:25:00,160 --> 00:25:07,090
pipeline and the computers the one

00:25:04,960 --> 00:25:09,370
implication of hapless proxy in the

00:25:07,090 --> 00:25:13,240
middle is that you can't actually use a

00:25:09,370 --> 00:25:20,740
regular VNC of my plans so here's a fly

00:25:13,240 --> 00:25:25,750
Oh Sababa beta / WebSockets sex web

00:25:20,740 --> 00:25:29,260
dashboard this is not using VNC if

00:25:25,750 --> 00:25:34,480
you're not part with it or like asian of

00:25:29,260 --> 00:25:36,909
our images but we desire what i should

00:25:34,480 --> 00:25:40,509
get some of the native desktop

00:25:36,909 --> 00:25:42,489
spiceland the pork WebSocket protocol

00:25:40,509 --> 00:25:46,059
because i'll just give you consider

00:25:42,489 --> 00:25:51,159
performance and give you access features

00:25:46,059 --> 00:25:53,289
some respite like we should be a thing

00:25:51,159 --> 00:25:55,690
of the past but if you are running a

00:25:53,289 --> 00:26:00,039
spice clients using html5 in the browser

00:25:55,690 --> 00:26:01,989
let me think about its light features so

00:26:00,039 --> 00:26:09,340
be nice to have a native by supplying

00:26:01,989 --> 00:26:12,519
with WebSockets now i'm going to be a

00:26:09,340 --> 00:26:16,739
bit of an overview of the steps involved

00:26:12,519 --> 00:26:21,009
in putting a virtual machine instance in

00:26:16,739 --> 00:26:23,379
ANOVA ever suck as a whole I've brought

00:26:21,009 --> 00:26:27,759
out oxes three components and local

00:26:23,379 --> 00:26:29,049
stacks and I mentioned earlier much of

00:26:27,759 --> 00:26:32,200
these aren't involved in this simple

00:26:29,049 --> 00:26:35,700
sequence what we start off the user

00:26:32,200 --> 00:26:40,389
makes a request the identity service

00:26:35,700 --> 00:26:42,460
that is educating themselves against

00:26:40,389 --> 00:26:44,320
OpenStack they finally username and

00:26:42,460 --> 00:26:46,509
password and they'll go back to an

00:26:44,320 --> 00:26:49,929
authentication token which they can then

00:26:46,509 --> 00:26:56,909
use for talking to the other blocks in

00:26:49,929 --> 00:26:59,769
OpenStack if they can make a request

00:26:56,909 --> 00:27:03,999
boots and instance to the computer

00:26:59,769 --> 00:27:06,489
service what does the computer service

00:27:03,999 --> 00:27:09,159
have to do well if the Pels no more

00:27:06,489 --> 00:27:12,399
image they want sir what OS image they

00:27:09,159 --> 00:27:14,799
want to boot Barry sings with the

00:27:12,399 --> 00:27:17,320
compute service will first talk to the

00:27:14,799 --> 00:27:21,820
image service and it will say give me

00:27:17,320 --> 00:27:24,070
the image for this for this image and

00:27:21,820 --> 00:27:27,039
I'll copy the data out of the image

00:27:24,070 --> 00:27:31,090
server it is some local storage on the

00:27:27,039 --> 00:27:34,899
virtualization host the next thing that

00:27:31,090 --> 00:27:36,929
happens is we set up any system block

00:27:34,899 --> 00:27:40,059
devices that we have science to it

00:27:36,929 --> 00:27:44,200
virtual machine and this involves

00:27:40,059 --> 00:27:46,450
talking to the lock service and as you

00:27:44,200 --> 00:27:49,350
might imagine the setup of that is the

00:27:46,450 --> 00:27:52,740
network service

00:27:49,350 --> 00:27:53,780
and ask you to help me network ports for

00:27:52,740 --> 00:27:58,020
connecting the virtual machine

00:27:53,780 --> 00:28:00,419
interfaces to whence all those three

00:27:58,020 --> 00:28:02,220
steps are done then the computer will

00:28:00,419 --> 00:28:06,450
turn out all to the hypervisor and

00:28:02,220 --> 00:28:09,720
actually through the instance that's a

00:28:06,450 --> 00:28:13,200
fairly simplified view of what goes on

00:28:09,720 --> 00:28:14,820
was actually quite a lot of fun a lot of

00:28:13,200 --> 00:28:17,760
fine detail in there which I don't

00:28:14,820 --> 00:28:19,049
really have time to explain here a body

00:28:17,760 --> 00:28:21,140
wouldn't mean very much the audacity of

00:28:19,049 --> 00:28:24,630
a very familiar with the OpenStack code

00:28:21,140 --> 00:28:26,400
for those are those are the three key

00:28:24,630 --> 00:28:29,130
steps in routing a virtual machine

00:28:26,400 --> 00:28:33,780
instance you can see how the computer

00:28:29,130 --> 00:28:39,990
service depends on sylheti is provided

00:28:33,780 --> 00:28:47,850
by the other services in OpenStack as

00:28:39,990 --> 00:28:53,520
what I am only quick kvm hippie Novem

00:28:47,850 --> 00:28:57,120
excuse of what if I think I did some

00:28:53,520 --> 00:29:00,150
work on on them over that was made

00:28:57,120 --> 00:29:02,760
possible particularly to you or you to

00:29:00,150 --> 00:29:05,390
run version instances that's quite

00:29:02,760 --> 00:29:08,760
important a maximum performance of a vm

00:29:05,390 --> 00:29:11,659
so you know how the realities specify

00:29:08,760 --> 00:29:16,679
the instances voted with a specific

00:29:11,659 --> 00:29:20,490
names and cpu type and say westmere or

00:29:16,679 --> 00:29:25,919
opteron g3 or whatever may confuse the

00:29:20,490 --> 00:29:27,900
two of you has or you can specify you

00:29:25,919 --> 00:29:34,110
want to just copy features or your host

00:29:27,900 --> 00:29:37,650
cpu have an author option is just PQ of

00:29:34,110 --> 00:29:39,480
the house really unchanged although the

00:29:37,650 --> 00:29:42,120
latter option has some implications for

00:29:39,480 --> 00:29:46,220
live migration and it will restrict

00:29:42,120 --> 00:29:46,220
where you've been way too

00:29:49,220 --> 00:29:55,880
the next the next few things that I did

00:29:53,090 --> 00:29:58,809
when I'm sorry welcome online but

00:29:55,880 --> 00:30:03,669
whether a support by configuring network

00:29:58,809 --> 00:30:09,500
interface models and if last night's on

00:30:03,669 --> 00:30:12,110
originally noble Otis a requirement for

00:30:09,500 --> 00:30:15,620
all instances and as you toggle date

00:30:12,110 --> 00:30:18,020
global config parameter and that wasn't

00:30:15,620 --> 00:30:21,470
that wasn't very flexible so that is

00:30:18,020 --> 00:30:25,100
ability to tag individual images and the

00:30:21,470 --> 00:30:28,220
image service with a disk model or sorry

00:30:25,100 --> 00:30:32,150
and Emmas model or a disc of type so you

00:30:28,220 --> 00:30:35,990
now you can expect I own this or e 1000

00:30:32,150 --> 00:30:42,280
or any of the other network models for

00:30:35,990 --> 00:30:50,110
relevant a vm any prosecute we have log

00:30:42,280 --> 00:30:53,419
discovery or y de way of when your disks

00:30:50,110 --> 00:31:00,320
one of the features are just releases

00:30:53,419 --> 00:31:04,850
that is the iDevice not a visual asst at

00:31:00,320 --> 00:31:07,400
it in a vm every instance gets given to

00:31:04,850 --> 00:31:09,770
to propose one of these Syria force is

00:31:07,400 --> 00:31:12,169
just like capturing log messages from

00:31:09,770 --> 00:31:15,200
the virtual instance on the other serial

00:31:12,169 --> 00:31:21,919
port it's very interactive text console

00:31:15,200 --> 00:31:25,130
and as much before you can set up a

00:31:21,919 --> 00:31:28,130
system log prices for your virtual

00:31:25,130 --> 00:31:33,080
machines we have to be of the root disk

00:31:28,130 --> 00:31:34,970
an optional swap partition and chemical

00:31:33,080 --> 00:31:38,150
a comic drag which is just a way to

00:31:34,970 --> 00:31:41,150
expose some metadata to the instance you

00:31:38,150 --> 00:31:43,549
have a zero or more system block devices

00:31:41,150 --> 00:31:46,780
there's quite a few different public

00:31:43,549 --> 00:31:46,780
options make yourself

00:31:47,980 --> 00:31:57,250
we expose some information to the guests

00:31:53,380 --> 00:31:59,830
using sm by us so we other guests that

00:31:57,250 --> 00:32:02,370
is running on an OpenStack cluster and a

00:31:59,830 --> 00:32:06,220
black version of OpenStack is running on

00:32:02,370 --> 00:32:08,710
there's a couple of things that get

00:32:06,220 --> 00:32:15,090
software sometimes like the hair isn't

00:32:08,710 --> 00:32:18,190
what to do you're so against your

00:32:15,090 --> 00:32:23,380
licenses or subscriptions lie can be

00:32:18,190 --> 00:32:25,290
useful information you can do limited TV

00:32:23,380 --> 00:32:28,870
you pinning this is actually a

00:32:25,290 --> 00:32:35,880
discretion of the host administrator at

00:32:28,870 --> 00:32:41,470
look at the moment safe use of running

00:32:35,880 --> 00:32:44,830
no very first ms.vp expression runs the

00:32:41,470 --> 00:32:49,270
regime's expect that'll be made more

00:32:44,830 --> 00:32:55,540
flexible in future authority mention

00:32:49,270 --> 00:32:56,950
your choice of VNC or spice and with

00:32:55,540 --> 00:33:00,970
spice because you have the option to

00:32:56,950 --> 00:33:06,910
enable the spice gift agent which wire

00:33:00,970 --> 00:33:09,070
is and monitor sizing and various other

00:33:06,910 --> 00:33:13,570
features of life has which require

00:33:09,070 --> 00:33:15,340
against aliens and we recently we also

00:33:13,570 --> 00:33:18,940
have the ability to enable the qm you

00:33:15,340 --> 00:33:22,960
guessed agent and this was when it

00:33:18,940 --> 00:33:27,809
enable and free for operational when

00:33:22,960 --> 00:33:31,030
doing snapshot we've got a couple of

00:33:27,809 --> 00:33:37,030
clock parameters with recess to try and

00:33:31,030 --> 00:33:41,830
enjoy I will find server and Shelley

00:33:37,030 --> 00:33:45,580
like this and with tunable you I think

00:33:41,830 --> 00:33:49,320
these are at the discretion of host

00:33:45,580 --> 00:33:49,320
administrator only at the moment

00:33:51,200 --> 00:33:57,060
the sine of pi or two slides I wanna

00:33:53,970 --> 00:33:59,430
look at wish them a couple of the

00:33:57,060 --> 00:34:03,720
interesting new features that arrived in

00:33:59,430 --> 00:34:08,280
the most recent release and integrity

00:34:03,720 --> 00:34:10,169
Cadiz own code name so we've had the

00:34:08,280 --> 00:34:14,220
time I see water and we've had some

00:34:10,169 --> 00:34:16,650
grisly and then a verification most

00:34:14,220 --> 00:34:19,980
recent release they came out just last

00:34:16,650 --> 00:34:23,880
Thursday and actually in six months time

00:34:19,980 --> 00:34:25,679
will be billed ice house and you know if

00:34:23,880 --> 00:34:27,110
you're all in modeling OpenStack your

00:34:25,679 --> 00:34:32,040
hair these code names mentioned

00:34:27,110 --> 00:34:35,940
everywhere from the computer front of

00:34:32,040 --> 00:34:40,140
you and the most interesting feature

00:34:35,940 --> 00:34:43,409
that I've highlighted here and lost the

00:34:40,140 --> 00:34:45,810
bridge migration your record I'm

00:34:43,409 --> 00:34:52,669
actually it's locked storage closet

00:34:45,810 --> 00:34:55,649
opens back after all LEM that ugly so on

00:34:52,669 --> 00:35:00,210
this block storage migration feature was

00:34:55,649 --> 00:35:01,920
about a tie these persistent storage

00:35:00,210 --> 00:35:05,940
between them back ends I can move it

00:35:01,920 --> 00:35:08,040
from one out there and now we can volume

00:35:05,940 --> 00:35:11,730
up with RVP volume and it can do this

00:35:08,040 --> 00:35:18,810
was the guest is accessing this storage

00:35:11,730 --> 00:35:23,010
volume we also added the ability for saw

00:35:18,810 --> 00:35:24,780
really good images in organs as I

00:35:23,010 --> 00:35:27,810
mentioned earlier that when we routin

00:35:24,780 --> 00:35:30,570
innocence and we could be the roots OS

00:35:27,810 --> 00:35:34,770
image out of the image service into the

00:35:30,570 --> 00:35:37,110
futures this directly with the store NFS

00:35:34,770 --> 00:35:41,210
file system we haven't ability to

00:35:37,110 --> 00:35:43,260
storage and are really want them as well

00:35:41,210 --> 00:35:47,340
another thing I mentioned briefly

00:35:43,260 --> 00:35:54,900
earlier on is we can now have um you

00:35:47,340 --> 00:35:57,570
intensive and so instead of having I

00:35:54,900 --> 00:35:59,550
scuzzy in the middle pair and we just

00:35:57,570 --> 00:36:03,360
have the compute we just have your new

00:35:59,550 --> 00:36:05,210
forms the blaster path directly that was

00:36:03,360 --> 00:36:08,609
a good performance when

00:36:05,210 --> 00:36:13,190
is involved in having a gun in the

00:36:08,609 --> 00:36:16,140
middle we added support for the

00:36:13,190 --> 00:36:23,549
communications and this is used when we

00:36:16,140 --> 00:36:28,859
do snapshots of and images we use their

00:36:23,549 --> 00:36:40,109
real all right cool yes yes I'll babysit

00:36:28,859 --> 00:36:44,549
a pacifistic system information is pci

00:36:40,109 --> 00:36:57,059
device assignments you might wonder how

00:36:44,549 --> 00:36:59,839
you find valid my i think i think our

00:36:57,059 --> 00:37:04,259
environments this is for example we're

00:36:59,839 --> 00:37:07,619
expanding the opening sensitization use

00:37:04,259 --> 00:37:12,809
cases as well as cloud thank you for the

00:37:07,619 --> 00:37:19,980
pictures right in over over over time

00:37:12,809 --> 00:37:39,059
people who did this for most these guys

00:37:19,980 --> 00:37:41,849
went with our i OV know the sign is one

00:37:39,059 --> 00:37:45,750
of those two functions to each each

00:37:41,849 --> 00:37:52,890
guest and removing the performance of

00:37:45,750 --> 00:37:59,309
your I self is the next release that

00:37:52,890 --> 00:38:02,039
we're just starting to work 7-4 wave

00:37:59,309 --> 00:38:08,359
your psychotic versus with every six

00:38:02,039 --> 00:38:14,009
months now they've got somewhere and our

00:38:08,359 --> 00:38:19,460
themes of the release it's like allowing

00:38:14,009 --> 00:38:19,460
a conference in Hong Kong I'm

00:38:20,630 --> 00:38:33,230
why national difference here reference

00:38:23,820 --> 00:38:39,260
is so much we look through two puzzles

00:38:33,230 --> 00:38:41,970
say disposals is rightfully needlework

00:38:39,260 --> 00:38:48,630
and while this will approve that

00:38:41,970 --> 00:38:51,420
features cycle and that's not to say

00:38:48,630 --> 00:38:53,970
must be decided in from it we probably

00:38:51,420 --> 00:38:57,150
on a 50-50 split features which are

00:38:53,970 --> 00:39:00,540
approved by the summit Isis features

00:38:57,150 --> 00:39:06,960
which are proposed at six months renamon

00:39:00,540 --> 00:39:11,750
cycle we should cancel have water stuff

00:39:06,960 --> 00:39:18,030
is all in the next six months we for the

00:39:11,750 --> 00:39:22,950
promise multiple overstep so I just had

00:39:18,030 --> 00:39:28,050
a quick look through those so far had a

00:39:22,950 --> 00:39:31,850
few interesting from a ization review vm

00:39:28,050 --> 00:39:34,560
unser this is just a fancy way of saying

00:39:31,850 --> 00:39:37,500
other ways that group virtual machine

00:39:34,560 --> 00:39:39,690
instances if you want a use of an

00:39:37,500 --> 00:39:41,700
application that patient may have

00:39:39,690 --> 00:39:43,590
virtual machines eat something different

00:39:41,700 --> 00:39:45,380
functions you might want to be able to

00:39:43,590 --> 00:39:49,490
say I want all of the virtual machine

00:39:45,380 --> 00:39:53,460
locations what I'm saying to do host

00:39:49,490 --> 00:39:57,060
mostly by saying I want these are clean

00:39:53,460 --> 00:39:58,680
absolutely always different suppose so

00:39:57,060 --> 00:40:06,840
that's the features of our money away

00:39:58,680 --> 00:40:12,930
sir controller mega mover live migration

00:40:06,840 --> 00:40:18,840
and currently your life back you have

00:40:12,930 --> 00:40:21,960
assistants bridge for all available on

00:40:18,840 --> 00:40:32,100
all of the computer I'm gonna make you

00:40:21,960 --> 00:40:33,080
the envy you yeah do I've migration of

00:40:32,100 --> 00:40:35,930
sports

00:40:33,080 --> 00:40:40,280
so you don't have to have shared storage

00:40:35,930 --> 00:40:43,810
on all of the computers what's going to

00:40:40,280 --> 00:40:46,790
improve the life snapshot facility

00:40:43,810 --> 00:40:49,250
currently live snapshots only capture

00:40:46,790 --> 00:40:51,950
the disk image state we don't do

00:40:49,250 --> 00:40:54,400
anything with Rama States so we're going

00:40:51,950 --> 00:40:57,950
to expand that also cover rep state so

00:40:54,400 --> 00:41:04,520
you have proper proper point in time

00:40:57,950 --> 00:41:10,400
lives snapshots of objects ends and the

00:41:04,520 --> 00:41:17,030
final night is preservation where if

00:41:10,400 --> 00:41:23,330
you're a and user you wanna a whole host

00:41:17,030 --> 00:41:28,280
resources just abuse you have to love

00:41:23,330 --> 00:41:31,520
the applet giving up our deployment it's

00:41:28,280 --> 00:41:34,640
out of it it may not able to sleep if

00:41:31,520 --> 00:41:38,990
you're five cloud deployment more

00:41:34,640 --> 00:41:45,110
offended scenario then I can see this as

00:41:38,990 --> 00:41:53,090
reservation quite useful el cielo a lot

00:41:45,110 --> 00:41:56,230
of that sounds they went for a bulking

00:41:53,090 --> 00:42:03,590
on an oval stack and there's not nearly

00:41:56,230 --> 00:42:11,080
all of it in a 44 so with that if this

00:42:03,590 --> 00:42:11,080
any since five minutes questions

00:42:18,830 --> 00:42:28,050
and well has been work in the overt

00:42:24,270 --> 00:42:33,840
community that fixed rate with some of

00:42:28,050 --> 00:42:36,930
the exact services but I'm not too

00:42:33,840 --> 00:42:39,540
closely at the datum where it is with

00:42:36,930 --> 00:42:44,810
over but I believe they've got some

00:42:39,540 --> 00:42:49,050
inspiration with the image serviced in

00:42:44,810 --> 00:42:50,250
the network service no I think they

00:42:49,050 --> 00:42:53,460
right they're able to make use of some

00:42:50,250 --> 00:43:22,920
of those parts of mobile sex support

00:42:53,460 --> 00:43:25,080
their socialization okay mom which I

00:43:22,920 --> 00:43:27,170
don't want to sleep at away but they've

00:43:25,080 --> 00:43:31,530
brought it America's biggest beta valid

00:43:27,170 --> 00:43:33,840
they wants to do live vm floating they

00:43:31,530 --> 00:43:36,480
want to take a running they want to use

00:43:33,840 --> 00:43:38,460
live migration equation utterances of

00:43:36,480 --> 00:43:42,810
that which will act I doubt either

00:43:38,460 --> 00:43:45,930
instance I saw them insane it's not

00:43:42,810 --> 00:43:48,750
working they had a proof of concept in

00:43:45,930 --> 00:43:50,820
and within other works like this listen

00:43:48,750 --> 00:43:52,230
to this important life pointed out all

00:43:50,820 --> 00:43:54,120
the horrible ways in which you can go

00:43:52,230 --> 00:43:58,140
wrong they said oh that'll never happen

00:43:54,120 --> 00:43:59,280
and I guess it will happen as the kvm

00:43:58,140 --> 00:44:02,640
guys hope you don't want to support this

00:43:59,280 --> 00:44:07,500
either but I'm if you want to spoil it

00:44:02,640 --> 00:44:09,860
then they'd love to see it but I thought

00:44:07,500 --> 00:44:12,810
them that we don't want to see it

00:44:09,860 --> 00:44:15,200
because it's just me Michael that go

00:44:12,810 --> 00:44:15,200
horribly wrong

00:44:20,690 --> 00:44:33,750
yes what's already probably a lot of the

00:44:31,349 --> 00:44:38,640
stuff that's been developed over the

00:44:33,750 --> 00:44:40,609
past year during image fleecing that

00:44:38,640 --> 00:44:42,900
kind of stuff is all fairly interesting

00:44:40,609 --> 00:44:45,240
opal stagg I must admit I'm not so

00:44:42,900 --> 00:44:46,559
involved in in the storage site openstax

00:44:45,240 --> 00:44:48,480
I don't know what specifically they

00:44:46,559 --> 00:44:54,119
might want but that kind of stuff is all

00:44:48,480 --> 00:44:57,049
interesting interesting to us i think i

00:44:54,119 --> 00:45:00,359
will see see us doing more work in

00:44:57,049 --> 00:45:03,900
resource management and SLA related

00:45:00,359 --> 00:45:13,799
stuff that's probably more nuffin liver

00:45:03,900 --> 00:45:17,220
has to deal with tournament this

00:45:13,799 --> 00:45:18,569
conclusion would be useful later we've

00:45:17,220 --> 00:45:21,930
got some limited disk encryption

00:45:18,569 --> 00:45:27,420
supporting over but we're using device

00:45:21,930 --> 00:45:31,910
rather and lust not devices if work that

00:45:27,420 --> 00:45:52,530
if we r qm you connected directly yes I

00:45:31,910 --> 00:45:58,079
a prescription every night it now we'd

00:45:52,530 --> 00:46:01,440
like to try and get a pic 10 just like

00:45:58,079 --> 00:46:06,119
they're in lunch area it was a panel of

00:46:01,440 --> 00:46:08,069
love in those this accumulate move that

00:46:06,119 --> 00:46:11,809
Mary and what I'm going to photo of

00:46:08,069 --> 00:46:11,809
everyone we can

00:46:15,720 --> 00:46:17,750

YouTube URL: https://www.youtube.com/watch?v=ZVa5mt5I7Hg


