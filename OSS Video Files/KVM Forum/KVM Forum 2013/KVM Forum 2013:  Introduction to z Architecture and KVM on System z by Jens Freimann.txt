Title: KVM Forum 2013:  Introduction to z Architecture and KVM on System z by Jens Freimann
Publication date: 2014-10-30
Playlist: KVM Forum 2013
Description: 
	Slides: https://docs.google.com/file/d/0BzyAwvVlQckedU05VWM0N25fMm8

In order to give the KVM community a better understanding of System z architecture and to ease patch review and discussion this is a general introduction to z/Architecture and the KVM on System z implementation quirks. I will explain and discuss with the audience the general organisation of a System z machine, Storage model, Program execution, Interruptions and of course its virtualization mechanism. Provided the audience is not too big, we have enough time and it can be arranged, a hand-on session or at least a live demo would also be possible.
Captions: 
	00:00:00,000 --> 00:00:09,269
those of the big 36 in there um so that

00:00:05,339 --> 00:00:12,480
me I like 5am and Germany's nothing new

00:00:09,269 --> 00:00:14,400
natural at five and a half years I put a

00:00:12,480 --> 00:00:17,279
big part of that away from somewhere and

00:00:14,400 --> 00:00:22,769
now for the last half year round about

00:00:17,279 --> 00:00:25,019
lexing on kvm and um UNS 390 so this is

00:00:22,769 --> 00:00:28,560
to see my work fest in Germany there's

00:00:25,019 --> 00:00:32,790
more people than other locations like us

00:00:28,560 --> 00:00:34,380
or Russia christian von Schrader and

00:00:32,790 --> 00:00:40,350
cornelia hope you might know they are

00:00:34,380 --> 00:00:42,300
the s 290 maintainer ok young and Thomas

00:00:40,350 --> 00:00:44,280
hood and dominating are also here in

00:00:42,300 --> 00:00:47,840
Edinburgh with media sitting in the back

00:00:44,280 --> 00:00:52,440
there we are looking forward to lots of

00:00:47,840 --> 00:00:55,079
discussions with with you guys um so for

00:00:52,440 --> 00:00:57,360
today what I have signed us from like

00:00:55,079 --> 00:01:00,960
talk about the entire architecture would

00:00:57,360 --> 00:01:03,870
be too much do I pick um two things that

00:01:00,960 --> 00:01:07,310
I want to talk about that are kind of

00:01:03,870 --> 00:01:09,840
different or you could maybe say weird I

00:01:07,310 --> 00:01:14,130
want to explain them in a little bit

00:01:09,840 --> 00:01:15,570
more detail but I take some memory and

00:01:14,130 --> 00:01:17,970
some aspects of how we handle the

00:01:15,570 --> 00:01:20,880
memories with respect to everything and

00:01:17,970 --> 00:01:27,299
stuff like that and I also want to talk

00:01:20,880 --> 00:01:30,180
about how we do interrupt um so special

00:01:27,299 --> 00:01:32,340
on the fire starts I wanted to talk a

00:01:30,180 --> 00:01:35,040
little bit out the actual hardware come

00:01:32,340 --> 00:01:38,640
off the mainframe best in the mainframe

00:01:35,040 --> 00:01:43,649
and realized before oh it's exit and

00:01:38,640 --> 00:01:46,079
thank surprise okay um so this is what

00:01:43,649 --> 00:01:49,680
it looks like no not really this is what

00:01:46,079 --> 00:01:54,020
is this is what it used to look like in

00:01:49,680 --> 00:01:58,500
the first but when I 360 and I see 70 um

00:01:54,020 --> 00:02:02,460
few things changed since then likessee

00:01:58,500 --> 00:02:05,040
programming interface by example um so

00:02:02,460 --> 00:02:07,290
this is not what it looks like today the

00:02:05,040 --> 00:02:11,099
first most were announced in 1964 i

00:02:07,290 --> 00:02:12,920
believe and that was about 17 years

00:02:11,099 --> 00:02:15,560
before the Iverson

00:02:12,920 --> 00:02:18,890
TC was announced so lets you think

00:02:15,560 --> 00:02:26,090
that's a lot of legacy stuff and x86 we

00:02:18,890 --> 00:02:31,760
have that too um okay that's with some

00:02:26,090 --> 00:02:33,760
slides nothing ok I don't know why so

00:02:31,760 --> 00:02:41,090
there was supposed to be a picture of a

00:02:33,760 --> 00:03:09,500
current main frame which is missing time

00:02:41,090 --> 00:03:13,700
you see if i can find that ok so this is

00:03:09,500 --> 00:03:15,680
what i mentioned today looks like so the

00:03:13,700 --> 00:03:18,739
foot bone has gotten a little smaller as

00:03:15,680 --> 00:03:23,510
you can see um lips ooh and it's divided

00:03:18,739 --> 00:03:25,609
into two frames we call it the one on

00:03:23,510 --> 00:03:28,760
the left has things like power supply

00:03:25,609 --> 00:03:30,549
and support element that usual things

00:03:28,760 --> 00:03:32,570
had study used for things like

00:03:30,549 --> 00:03:34,790
administration and also that control

00:03:32,570 --> 00:03:39,200
hardware initialization and things like

00:03:34,790 --> 00:03:41,660
that that's also the tci of draw and the

00:03:39,200 --> 00:03:45,590
one on the bottom and then on the right

00:03:41,660 --> 00:03:48,680
side what you see is the the iframe and

00:03:45,590 --> 00:03:51,920
that contains things like the water

00:03:48,680 --> 00:03:55,280
cooling units for you know cooling nms

00:03:51,920 --> 00:03:59,569
out of the aisle page from which all the

00:03:55,280 --> 00:04:02,930
devices are connected as InfiniBand PCI

00:03:59,569 --> 00:04:05,600
Express output and and and the blue

00:04:02,930 --> 00:04:08,660
rectangle that's where the books are

00:04:05,600 --> 00:04:11,000
sitting and in the record and protocol

00:04:08,660 --> 00:04:15,560
book you can afford em in one machine

00:04:11,000 --> 00:04:20,209
and it contains the processors and

00:04:15,560 --> 00:04:24,520
memory and i/o fan out ok now I'm going

00:04:20,209 --> 00:04:24,520
to move back to my actual price

00:04:35,510 --> 00:04:46,169
and it's not one missing plus I'm just

00:04:41,910 --> 00:04:49,650
going to talk about this one that's the

00:04:46,169 --> 00:05:03,390
books when you look at the books um what

00:04:49,650 --> 00:05:05,730
they look like okay so this is some

00:05:03,390 --> 00:05:07,980
process a book and as you can see it has

00:05:05,730 --> 00:05:11,430
also power supplies has lots of things

00:05:07,980 --> 00:05:14,820
for memory and it has idol fan out and

00:05:11,430 --> 00:05:17,940
also water cooling connector and then

00:05:14,820 --> 00:05:20,630
you have some acid chip modules and in

00:05:17,940 --> 00:05:25,350
this module there's the processing units

00:05:20,630 --> 00:05:29,040
so to MCM you have six processing units

00:05:25,350 --> 00:05:31,530
you can call them cpus and 22 storage

00:05:29,040 --> 00:05:36,300
controllers and then each processing

00:05:31,530 --> 00:05:38,190
unit has six core and well one color

00:05:36,300 --> 00:05:42,210
looks like a medic on the bottom here

00:05:38,190 --> 00:05:44,580
and they run at 5.5 you have and we

00:05:42,210 --> 00:05:46,440
don't need to overclock time to do that

00:05:44,580 --> 00:05:52,500
with data through that and buy them on

00:05:46,440 --> 00:05:54,120
their own um okay so now we come to the

00:05:52,500 --> 00:05:59,760
actual part where I talk about the

00:05:54,120 --> 00:06:03,930
architecture and I click on one aspect

00:05:59,760 --> 00:06:08,640
of memory handling that doesn't exist on

00:06:03,930 --> 00:06:13,320
x86 and saw that some general maxilla

00:06:08,640 --> 00:06:15,270
big onion um if you have the maximals

00:06:13,320 --> 00:06:20,340
memory an assistant met on a train model

00:06:15,270 --> 00:06:22,070
that would be 3.75 starbucks come just

00:06:20,340 --> 00:06:26,010
as some general things I want to mention

00:06:22,070 --> 00:06:31,560
then addressing we also have an

00:06:26,010 --> 00:06:35,220
additional layer of outer space I'll

00:06:31,560 --> 00:06:37,009
explain what that means in a minute so

00:06:35,220 --> 00:06:39,479
we have

00:06:37,009 --> 00:06:41,759
absolute addresses developers that are

00:06:39,479 --> 00:06:46,169
closest to the actual physical addresses

00:06:41,759 --> 00:06:48,300
and then in between West relative and

00:06:46,169 --> 00:06:50,789
absolute address which we have a real

00:06:48,300 --> 00:06:54,000
advert space and the way that addresses

00:06:50,789 --> 00:06:57,330
are translated from addresses to real

00:06:54,000 --> 00:07:00,509
addresses if I that table so that page

00:06:57,330 --> 00:07:01,949
tables and we have five levels page

00:07:00,509 --> 00:07:06,539
tables that are also hardware-assisted

00:07:01,949 --> 00:07:11,669
um and that's a special thing about NSU

00:07:06,539 --> 00:07:14,250
90 we also do free fixing an app for

00:07:11,669 --> 00:07:16,800
that et tu as a prefix register and that

00:07:14,250 --> 00:07:21,000
gives you another upset into absolute

00:07:16,800 --> 00:07:24,569
address space and I will explain 360 and

00:07:21,000 --> 00:07:27,360
molitor's they don for that I want to

00:07:24,569 --> 00:07:30,599
talk about a feature that um and I said

00:07:27,360 --> 00:07:34,080
probably doesn't exist in x86 and it's

00:07:30,599 --> 00:07:36,719
one of four so much detection mechanisms

00:07:34,080 --> 00:07:41,699
that I designs in these see architecture

00:07:36,719 --> 00:07:46,710
and that is still new um so start piece

00:07:41,699 --> 00:07:48,870
is a protection mechanism and um it's

00:07:46,710 --> 00:07:55,680
also called keep control detection and

00:07:48,870 --> 00:07:58,680
the way to work at for each page yes we

00:07:55,680 --> 00:08:02,069
have one storage key that can be set and

00:07:58,680 --> 00:08:05,279
has these access control disk and adult

00:08:02,069 --> 00:08:12,000
has them hostage for actually

00:08:05,279 --> 00:08:15,479
referencing and change this um so large

00:08:12,000 --> 00:08:17,460
piece they are located in memories but

00:08:15,479 --> 00:08:20,940
not in what they are outside of the

00:08:17,460 --> 00:08:23,610
directly addressable memory you can just

00:08:20,940 --> 00:08:27,479
access them from the press and access to

00:08:23,610 --> 00:08:30,089
a physical page on for the only way that

00:08:27,479 --> 00:08:33,390
you can change third keys it's by

00:08:30,089 --> 00:08:35,760
special privilege instructions one for

00:08:33,390 --> 00:08:40,349
research keys and for research

00:08:35,760 --> 00:08:43,560
references and so on so what it does it

00:08:40,349 --> 00:08:47,670
prevent unauthorized reaching are

00:08:43,560 --> 00:08:49,410
changing of pages um and the way this

00:08:47,670 --> 00:08:54,209
works when you run a program

00:08:49,410 --> 00:08:56,610
this that you have enough I need to

00:08:54,209 --> 00:08:59,639
explain first you have to program status

00:08:56,610 --> 00:09:03,600
rather nasty 90 and that's like you can

00:08:59,639 --> 00:09:05,730
compare that in a 36 to the program

00:09:03,600 --> 00:09:08,670
counter in combination with status

00:09:05,730 --> 00:09:12,870
registers and things like memory adverse

00:09:08,670 --> 00:09:16,649
face designated an absent 128 spits

00:09:12,870 --> 00:09:19,290
register so the PSW describes the status

00:09:16,649 --> 00:09:24,230
of the system in relation to the

00:09:19,290 --> 00:09:28,680
currently running program now when a CPU

00:09:24,230 --> 00:09:33,029
wants to access storage what happens is

00:09:28,680 --> 00:09:35,430
that it compares the storage key that is

00:09:33,029 --> 00:09:39,600
associated with will take us to be

00:09:35,430 --> 00:09:44,399
assessed with key data sets in the

00:09:39,600 --> 00:09:47,519
current PSW and what happens if it

00:09:44,399 --> 00:09:49,800
doesn't match on the Stars has not

00:09:47,519 --> 00:09:52,379
changed and you will get a protection

00:09:49,800 --> 00:09:54,899
inception and also a program

00:09:52,379 --> 00:10:01,620
interruption for the program will notice

00:09:54,899 --> 00:10:03,540
what happens you know and the reason I

00:10:01,620 --> 00:10:06,300
mentioned it to a one of the reasons I

00:10:03,540 --> 00:10:10,380
mentioned as here because we are so

00:10:06,300 --> 00:10:13,620
implemented and usually a set of the

00:10:10,380 --> 00:10:17,819
Archie saw I guess that we picked up

00:10:13,620 --> 00:10:21,269
today and now what we want to do with

00:10:17,819 --> 00:10:24,660
when we do life after location we also

00:10:21,269 --> 00:10:27,630
have migrated these storage keys along

00:10:24,660 --> 00:10:34,050
but definitely the same thing on the

00:10:27,630 --> 00:10:35,519
tiger system so that's the question to

00:10:34,050 --> 00:10:37,889
the community that I would like to

00:10:35,519 --> 00:10:42,059
discuss them later on million the

00:10:37,889 --> 00:10:44,939
hallway or in the heck session what

00:10:42,059 --> 00:10:48,529
would be good way to model listen to me

00:10:44,939 --> 00:10:51,480
and one suggestion was that as a device

00:10:48,529 --> 00:10:54,180
the advantage success would be that we

00:10:51,480 --> 00:10:56,879
already have a hook trigger my question

00:10:54,180 --> 00:11:00,240
because it just that migrations for the

00:10:56,879 --> 00:11:02,790
status of the device and maybe another

00:11:00,240 --> 00:11:10,020
option would

00:11:02,790 --> 00:11:12,330
so its a Norwegian and keep them in

00:11:10,020 --> 00:11:14,760
there and then migrate data long run

00:11:12,330 --> 00:11:17,430
that would be a little bit like unreal

00:11:14,760 --> 00:11:21,000
system where he's at work and then we

00:11:17,430 --> 00:11:24,180
but not in a class of memory and well

00:11:21,000 --> 00:11:30,060
not sure that good like model happen to

00:11:24,180 --> 00:11:31,890
em you okay um so that's what I wanted

00:11:30,060 --> 00:11:36,180
to talk about this relationship memory

00:11:31,890 --> 00:11:39,870
and now i'm going to talk a little bit

00:11:36,180 --> 00:11:42,990
about how interrupt work on as unity

00:11:39,870 --> 00:11:48,720
because there's also different from x86

00:11:42,990 --> 00:11:50,850
and other actors um and before we talk

00:11:48,720 --> 00:11:54,020
about the actual way and interrupt was

00:11:50,850 --> 00:11:56,820
handed in a system one concept that

00:11:54,020 --> 00:12:00,210
unexplained is within which I have

00:11:56,820 --> 00:12:06,110
mentioned before but is also there's no

00:12:00,210 --> 00:12:10,200
real equivalent on x86 what is ass is on

00:12:06,110 --> 00:12:14,130
its mass arranged in our real address

00:12:10,200 --> 00:12:17,130
space the from the addresses from 0 to

00:12:14,130 --> 00:12:20,210
the end of the second page to a

00:12:17,130 --> 00:12:24,780
different clock in absolute storage and

00:12:20,210 --> 00:12:27,840
in these two pages we saw information

00:12:24,780 --> 00:12:35,340
that is relevant to system operation and

00:12:27,840 --> 00:12:36,780
especially to UM ending interrupt so I'm

00:12:35,340 --> 00:12:45,090
going to give you an example how this

00:12:36,780 --> 00:12:48,960
works um we have CPUs and they operation

00:12:45,090 --> 00:12:52,410
with real addresses and we have absolute

00:12:48,960 --> 00:12:56,190
dodge and our goddess have four hcp you

00:12:52,410 --> 00:12:59,310
to be able to address this prefix area

00:12:56,190 --> 00:13:03,000
director intensive information we wanted

00:12:59,310 --> 00:13:06,390
to be a passable from advert 02 a

00:13:03,000 --> 00:13:11,550
thousand 191 so that same thing on Eric

00:13:06,390 --> 00:13:15,160
with you and if you look at 52 in this

00:13:11,550 --> 00:13:19,660
picture it has in a specific ratchet

00:13:15,160 --> 00:13:23,350
that is accessed with you you have a

00:13:19,660 --> 00:13:27,430
value of five thousands and now what it

00:13:23,350 --> 00:13:31,720
means is that real addresses from zero

00:13:27,430 --> 00:13:34,779
to another second phase of on FX map in

00:13:31,720 --> 00:13:38,430
absolute address space to address it a

00:13:34,779 --> 00:13:41,589
thousand enough also to practice on and

00:13:38,430 --> 00:13:47,800
the other way around with the access VIP

00:13:41,589 --> 00:13:50,560
access editors between 5005 FFF on cpu

00:13:47,800 --> 00:13:55,540
to this would next to the absolute

00:13:50,560 --> 00:14:01,660
address 0 2 2004 exactly what we

00:13:55,540 --> 00:14:04,300
suggested this is what the address is at

00:14:01,660 --> 00:14:08,439
a twentieth of 0 to 1 F of F and the

00:14:04,300 --> 00:14:11,670
content of the critics register and by

00:14:08,439 --> 00:14:15,459
that we have a separate accessible on

00:14:11,670 --> 00:14:24,720
memory area share with you let's marks

00:14:15,459 --> 00:14:30,959
at address 0 okay now we can talk about

00:14:24,720 --> 00:14:33,430
um unhappy 90s status of interrupts and

00:14:30,959 --> 00:14:36,610
supervisor for example is used for

00:14:33,430 --> 00:14:39,639
sports and linux yes program checks they

00:14:36,610 --> 00:14:43,329
can have program and drop they have much

00:14:39,639 --> 00:14:46,060
of the reasons example page files we

00:14:43,329 --> 00:14:48,850
have machine checks external situation

00:14:46,060 --> 00:14:51,880
interrupt we have i oh and we have

00:14:48,850 --> 00:14:55,720
restart interrupt that would be set up

00:14:51,880 --> 00:14:59,889
with you and it's just give each class

00:14:55,720 --> 00:15:05,019
of these intervals at two locations and

00:14:59,889 --> 00:15:08,110
physic area um contains important

00:15:05,019 --> 00:15:11,500
connections between the interrupt and I

00:15:08,110 --> 00:15:16,480
maxixe give you an example of an aisle

00:15:11,500 --> 00:15:20,920
interrupt and 19 um again we have the

00:15:16,480 --> 00:15:23,259
TSW and remember that the like the

00:15:20,920 --> 00:15:26,410
program counter and latest register and

00:15:23,259 --> 00:15:28,190
more things and that also contains

00:15:26,410 --> 00:15:30,830
information about

00:15:28,190 --> 00:15:33,920
whether interrupts are enabled currently

00:15:30,830 --> 00:15:36,560
attitude you are disabled and then we

00:15:33,920 --> 00:15:38,390
have local that's the prefix area that I

00:15:36,560 --> 00:15:41,240
just talked about these two pages that

00:15:38,390 --> 00:15:47,120
contains like a table with fixed offset

00:15:41,240 --> 00:15:51,650
for specific information and in order to

00:15:47,120 --> 00:15:56,300
understand interrupt while in real in

00:15:51,650 --> 00:15:59,390
reality cpu only has one PSW register

00:15:56,300 --> 00:16:03,280
I'm kind of Center up to this made

00:15:59,390 --> 00:16:06,740
absolute think of it having three GSWs

00:16:03,280 --> 00:16:09,620
as the crunchiest w on that point sutin

00:16:06,740 --> 00:16:12,170
to the next instruction and it keeps the

00:16:09,620 --> 00:16:15,620
state of the system and then there's two

00:16:12,170 --> 00:16:19,280
locations in the physics area and they

00:16:15,620 --> 00:16:22,450
have two more GSWs and there no DSL you

00:16:19,280 --> 00:16:26,170
and a nucleus noble you and now the way

00:16:22,450 --> 00:16:28,880
it works when in interruptus um

00:16:26,170 --> 00:16:33,320
generated by our channel subsystem that

00:16:28,880 --> 00:16:36,140
does all the io unprocessed satisfy the

00:16:33,320 --> 00:16:38,900
transaction will say okay I have an i

00:16:36,140 --> 00:16:41,870
have they'd already under some as an

00:16:38,900 --> 00:16:44,690
interrupt you need to handle it um so

00:16:41,870 --> 00:16:47,960
what happens then is with takes

00:16:44,690 --> 00:16:53,840
apparently SW and we store it into the

00:16:47,960 --> 00:16:57,620
logo into the ODFW field and and so i

00:16:53,840 --> 00:16:59,960
guess on x86 you could come I wish

00:16:57,620 --> 00:17:02,540
compared to when an inch off line full

00:16:59,960 --> 00:17:06,199
of and you run on cm to the interest of

00:17:02,540 --> 00:17:09,890
infraction and the next step would be to

00:17:06,199 --> 00:17:12,800
take a new set w in the doctor and that

00:17:09,890 --> 00:17:15,740
feels already contains address of our

00:17:12,800 --> 00:17:19,370
i/o interrupt handler routine and now

00:17:15,740 --> 00:17:22,880
it's loaded into the current GSW and by

00:17:19,370 --> 00:17:26,110
doing that swap of POWs we hand out of

00:17:22,880 --> 00:17:29,480
control to the interrupt handler routine

00:17:26,110 --> 00:17:30,940
so looking at this field may be honest

00:17:29,480 --> 00:17:33,410
faces you could say that it is

00:17:30,940 --> 00:17:39,620
equivalent to I'm poking at you

00:17:33,410 --> 00:17:41,030
interrupted stripper table we do we run

00:17:39,620 --> 00:17:43,520
the interest and the routine

00:17:41,030 --> 00:17:45,380
and in the case of violent work that

00:17:43,520 --> 00:17:49,880
also except those other fields in the

00:17:45,380 --> 00:17:52,340
local that's facing sex which device was

00:17:49,880 --> 00:17:57,380
generating the interrupts and few other

00:17:52,340 --> 00:18:02,780
things um so why not home so I'll

00:17:57,380 --> 00:18:05,840
Angeles process um we restore all chip w

00:18:02,780 --> 00:18:08,930
that we bought earlier into the field

00:18:05,840 --> 00:18:11,150
and blow the text widget can type of you

00:18:08,930 --> 00:18:15,460
and then the process i can continue

00:18:11,150 --> 00:18:15,460
running the program that was interrupted

00:18:18,340 --> 00:18:26,750
okay so i mentioned so there's some five

00:18:23,540 --> 00:18:29,180
classes of interrupt that these two

00:18:26,750 --> 00:18:31,670
fields but it works the same for all

00:18:29,180 --> 00:18:36,080
kinds of interrupt and we have two

00:18:31,670 --> 00:18:40,340
fields otlc DWTS w for all facets of

00:18:36,080 --> 00:18:42,560
interrupts and so i said earlier that

00:18:40,340 --> 00:18:46,190
the interrupts can be enabled or

00:18:42,560 --> 00:18:49,640
disabled and the way this works on SE

00:18:46,190 --> 00:18:52,850
90s is five a combination of this

00:18:49,640 --> 00:18:57,800
program latest work and some tremendous

00:18:52,850 --> 00:19:00,410
feels in control registered example file

00:18:57,800 --> 00:19:02,540
interrupt you have it fixed in the

00:19:00,410 --> 00:19:05,900
program status word that would disable

00:19:02,540 --> 00:19:07,670
or I'll interrupt and then you have an

00:19:05,900 --> 00:19:12,860
additional fields and control asleep

00:19:07,670 --> 00:19:16,220
register six the Irish Canton to enable

00:19:12,860 --> 00:19:18,320
a disabled on the opposite of IO

00:19:16,220 --> 00:19:22,430
Interactive for a specific interactions

00:19:18,320 --> 00:19:27,130
of classes and as well sooner for others

00:19:22,430 --> 00:19:29,690
to accept that cannot be disabled for

00:19:27,130 --> 00:19:35,170
example supervisor card cannot be

00:19:29,690 --> 00:19:40,490
disabled restart interrupt that word

00:19:35,170 --> 00:19:44,300
reset or initiate with you which the Sun

00:19:40,490 --> 00:19:47,120
for example when you would then there's

00:19:44,300 --> 00:19:50,840
also a subset of machine checks

00:19:47,120 --> 00:19:54,020
exogenous interact and you cannot

00:19:50,840 --> 00:19:54,770
disable them as a maximum machine check

00:19:54,020 --> 00:19:56,270
happens

00:19:54,770 --> 00:20:00,380
usually means that something terribly

00:19:56,270 --> 00:20:06,590
happening to you and as if you won't do

00:20:00,380 --> 00:20:12,950
anything anymore okay and that's how I

00:20:06,590 --> 00:20:14,900
interpret work on a 390 now that was the

00:20:12,950 --> 00:20:18,080
part of that I want to talk about the

00:20:14,900 --> 00:20:19,460
architecture tips it to things if you

00:20:18,080 --> 00:20:20,900
have more questions we can talk about

00:20:19,460 --> 00:20:23,180
that later on if you have specific

00:20:20,900 --> 00:20:28,310
questions to other subsets of the

00:20:23,180 --> 00:20:30,920
architecture now what honey scenario

00:20:28,310 --> 00:20:33,320
asked me to give you an update on a fact

00:20:30,920 --> 00:20:36,800
that you gave last year yeah I thought

00:20:33,320 --> 00:20:42,770
about general and implementation of

00:20:36,800 --> 00:20:46,840
where I ocw so that's enough don't make

00:20:42,770 --> 00:20:49,520
sure that yes the devices the way that

00:20:46,840 --> 00:20:51,950
other linux operating system under

00:20:49,520 --> 00:20:55,040
traditional consistency I provide all

00:20:51,950 --> 00:21:00,800
the devices so you can accept on the

00:20:55,040 --> 00:21:02,810
axis by this in a subchannel and once we

00:21:00,800 --> 00:21:05,090
judge the internet that inside yeah we

00:21:02,810 --> 00:21:09,580
talked about it a little bit that's a

00:21:05,090 --> 00:21:14,060
interrupt and justice from more

00:21:09,580 --> 00:21:18,020
efficient and lightwei way of doing I Oh

00:21:14,060 --> 00:21:19,700
interrupt and they can be pending sale

00:21:18,020 --> 00:21:24,980
interruptions a thousand at eight

00:21:19,700 --> 00:21:27,410
interruptions subclasses and the reason

00:21:24,980 --> 00:21:30,170
this is not certain time classic io

00:21:27,410 --> 00:21:34,010
interrupts is because the first step

00:21:30,170 --> 00:21:36,440
empathic IO Interactive you such

00:21:34,010 --> 00:21:38,510
information from the Aqua and then I

00:21:36,440 --> 00:21:40,790
sense that you actually have to assess

00:21:38,510 --> 00:21:43,310
the subchannel device and that's the

00:21:40,790 --> 00:21:46,690
concepts in our general subsystem that

00:21:43,310 --> 00:21:49,910
means for external devices are

00:21:46,690 --> 00:21:52,790
represented by action from three

00:21:49,910 --> 00:21:55,880
operating system and you are owned by

00:21:52,790 --> 00:21:58,940
traffic i own a process to get status

00:21:55,880 --> 00:22:02,030
from the subchannel and then you will on

00:21:58,940 --> 00:22:05,240
and finally with fuel and do everything

00:22:02,030 --> 00:22:07,910
else it was a tech center of you don't

00:22:05,240 --> 00:22:13,150
have that step

00:22:07,910 --> 00:22:17,240
beyond first we can just directly from

00:22:13,150 --> 00:22:19,240
access a good fielder's play so that's

00:22:17,240 --> 00:22:21,830
our interrupts and we can do that we

00:22:19,240 --> 00:22:23,540
don't we don't have to do that in user

00:22:21,830 --> 00:22:26,570
space that's kind of to take advantage

00:22:23,540 --> 00:22:30,170
of the epicenter and that means that we

00:22:26,570 --> 00:22:34,370
have less access to user space we don't

00:22:30,170 --> 00:22:36,560
have to exit 4 11 trap and that means

00:22:34,370 --> 00:22:40,100
that you can implement things like a

00:22:36,560 --> 00:22:50,300
queue of peace without implementing all

00:22:40,100 --> 00:22:53,030
the CCW codes in the corner yeah that's

00:22:50,300 --> 00:22:57,710
really what I wanted to say not the one

00:22:53,030 --> 00:23:01,550
thing i want to mention is that we also

00:22:57,710 --> 00:23:04,160
have an hour virtualization facility and

00:23:01,550 --> 00:23:06,890
our equivalent to vm x we have the

00:23:04,160 --> 00:23:09,860
possibility to do exit less interrupts

00:23:06,890 --> 00:23:12,830
and that is not yet implemented as we're

00:23:09,860 --> 00:23:19,340
working on it and you can be prepared to

00:23:12,830 --> 00:23:22,760
see some catches hopefully very soon ok

00:23:19,340 --> 00:23:27,860
um and by that i'm almost at the end of

00:23:22,760 --> 00:23:30,560
my talk a couple of that in fact that i

00:23:27,860 --> 00:23:33,650
wanted to talk about from things at

00:23:30,560 --> 00:23:39,920
design in the last years of doing kv I'm

00:23:33,650 --> 00:23:44,810
development uncertainties um so and that

00:23:39,920 --> 00:23:47,930
um anjo broadway a vm development on to

00:23:44,810 --> 00:23:50,600
cincy starter and it was done i think

00:23:47,930 --> 00:23:54,440
about the first I catch you after x86

00:23:50,600 --> 00:23:57,170
that was implemented Rotarian and the

00:23:54,440 --> 00:23:59,720
word dennis has some free of Allah

00:23:57,170 --> 00:24:02,630
subscribers building their own

00:23:59,720 --> 00:24:08,630
illustration of the kvm fort worth-based

00:24:02,630 --> 00:24:11,480
will was called cooley and i was just a

00:24:08,630 --> 00:24:14,540
very small program that is pretty much

00:24:11,480 --> 00:24:18,320
nothing except driving the kvm interface

00:24:14,540 --> 00:24:20,419
and because startled gasp and run it and

00:24:18,320 --> 00:24:22,909
i was there first

00:24:20,419 --> 00:24:26,359
compared to tuna it was really tiny

00:24:22,909 --> 00:24:30,440
incentive and also the stadium crowd

00:24:26,359 --> 00:24:38,299
that was the exam was nope develops to

00:24:30,440 --> 00:24:41,210
sit through the QM you could understand

00:24:38,299 --> 00:24:45,289
there was a question a rather long horse

00:24:41,210 --> 00:24:50,450
and di- in IP development because of

00:24:45,289 --> 00:24:52,879
political issues and I do and we resume

00:24:50,450 --> 00:24:58,129
a vm development the decision was made

00:24:52,879 --> 00:25:01,639
you go for qm us the other side and that

00:24:58,129 --> 00:25:05,210
was a big sad because it's much more

00:25:01,639 --> 00:25:10,009
much bigger called ace that you have

00:25:05,210 --> 00:25:14,929
read more innovative and and they are

00:25:10,009 --> 00:25:19,869
instead and design to attack you and

00:25:14,929 --> 00:25:19,869
while we're still learning a lot and

00:25:21,549 --> 00:25:27,859
asked when we started we only

00:25:24,169 --> 00:25:30,559
implemented one stadium exit reason and

00:25:27,859 --> 00:25:33,940
then we were multiplexing depending on

00:25:30,559 --> 00:25:33,940
what happened on the gas and

00:25:34,840 --> 00:25:40,609
multiplexing as op no problem and

00:25:38,539 --> 00:25:42,919
decided to the problem was as be kind of

00:25:40,609 --> 00:25:46,100
that always had to sing everything

00:25:42,919 --> 00:25:48,980
between turn and you decide to all

00:25:46,100 --> 00:25:51,559
registers and other state I think

00:25:48,980 --> 00:25:54,440
physics was soon a little bit smarter by

00:25:51,559 --> 00:25:57,799
having more active with black net and we

00:25:54,440 --> 00:26:02,929
implemented an additional optional

00:25:57,799 --> 00:26:07,909
access their activity and it was much

00:26:02,929 --> 00:26:12,470
much more as needed it's wrong in the

00:26:07,909 --> 00:26:16,759
beginning and maybe of my similar

00:26:12,470 --> 00:26:19,639
experiences with a cutting stage around

00:26:16,759 --> 00:26:23,419
in kernel space and another face and

00:26:19,639 --> 00:26:27,769
then we learned a lot by that keeping it

00:26:23,419 --> 00:26:31,530
all in soon as hard as you have to think

00:26:27,769 --> 00:26:35,760
about hot on at a sitter and

00:26:31,530 --> 00:26:38,900
so a good at is journalist is enough

00:26:35,760 --> 00:26:41,670
keeping our state in one place

00:26:38,900 --> 00:26:47,760
absolutely make sense I'm not going to

00:26:41,670 --> 00:26:51,300
the face is also a good thing to do ok

00:26:47,760 --> 00:26:53,810
so then one ultimate you I asked that we

00:26:51,300 --> 00:26:58,380
haven't really thought by now is that an

00:26:53,810 --> 00:27:05,480
epson a key to an assistant shut down on

00:26:58,380 --> 00:27:10,640
this work by it's getting a disabling or

00:27:05,480 --> 00:27:10,640
diffuse and I'm going to last if you if

00:27:10,910 --> 00:27:17,100
disables laptop and that means that we

00:27:14,370 --> 00:27:19,530
do a system shutdown and in other

00:27:17,100 --> 00:27:22,560
architecture status that's a specific

00:27:19,530 --> 00:27:23,940
event that you can register to an end

00:27:22,560 --> 00:27:27,180
you know that you have to do a shutdown

00:27:23,940 --> 00:27:30,300
now but in the way we do it now in few

00:27:27,180 --> 00:27:32,670
is that we have a global reliable that

00:27:30,300 --> 00:27:36,900
we recommend an increment depending on

00:27:32,670 --> 00:27:38,400
when we start and stop CPUs and we had

00:27:36,900 --> 00:27:40,890
some problems when we are doing

00:27:38,400 --> 00:27:43,980
different kind of research that we have

00:27:40,890 --> 00:27:46,590
in the sea architecture and it has all

00:27:43,980 --> 00:27:49,830
kinds of citation it has side effects in

00:27:46,590 --> 00:27:52,920
the code like ponies top the cpu and we

00:27:49,830 --> 00:27:55,320
didn't set it to hearted and the two mu

00:27:52,920 --> 00:27:58,800
data structure and when it started again

00:27:55,320 --> 00:28:02,220
it would not be started in episode what

00:27:58,800 --> 00:28:05,220
I want to say is that feels kind of

00:28:02,220 --> 00:28:09,900
happy and we're looking for a good

00:28:05,220 --> 00:28:15,150
solutions modulus um better in a better

00:28:09,900 --> 00:28:25,380
way that looks it is easier to keep in

00:28:15,150 --> 00:28:27,800
track and to be since what I'm I would

00:28:25,380 --> 00:28:27,800
be very

00:28:29,200 --> 00:28:35,940

YouTube URL: https://www.youtube.com/watch?v=B_mQabHPmbU


