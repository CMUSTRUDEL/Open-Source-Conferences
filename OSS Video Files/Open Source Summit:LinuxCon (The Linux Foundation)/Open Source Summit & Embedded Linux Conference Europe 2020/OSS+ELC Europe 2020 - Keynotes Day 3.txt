Title: OSS+ELC Europe 2020 - Keynotes Day 3
Publication date: 2020-10-30
Playlist: Open Source Summit & Embedded Linux Conference Europe 2020
Description: 
	Keynote: The Realtime and Other Merge Conflicts - Thomas Gleixner, Chief Technology Officer, Linutronix GmbH

 Keynote: The RISC-V Vector Processor in EPI - Jesús Labarta Mancho, Director, Computer Sciences Department, Barcelona Supercomputing Center

 Keynote: How can Open Source Help Solve Europe’s Strategic Challenges? - Sachiko Muto, Chief Executive Officer, OpenForum Europe

 Keynote: SBOM: The Path for a More Transparent Software World - Dr. Allan Friedman, Director, Cybersecurity Initiatives, National Telecommunications & Information Administration, US Department of Commerce
Captions: 
	00:00:05,340 --> 00:00:35,520
[Music]

00:00:33,360 --> 00:00:37,040
hello everyone and welcome back to our

00:00:35,520 --> 00:00:39,200
last keynote session

00:00:37,040 --> 00:00:40,480
of the event hope you've all been

00:00:39,200 --> 00:00:43,440
enjoying the week

00:00:40,480 --> 00:00:44,160
and i had a great time yesterday i was

00:00:43,440 --> 00:00:46,879
able to

00:00:44,160 --> 00:00:47,920
drop into a few of the sessions and was

00:00:46,879 --> 00:00:50,399
so happy to see

00:00:47,920 --> 00:00:52,399
not only just the amount of engagement

00:00:50,399 --> 00:00:54,239
over the digital channels but just the

00:00:52,399 --> 00:00:55,840
amazing content that

00:00:54,239 --> 00:00:57,440
all of you are working together on at

00:00:55,840 --> 00:00:59,359
this event it's really something that's

00:00:57,440 --> 00:01:02,079
amazing to see

00:00:59,359 --> 00:01:04,320
our first speaker today thomas gleichner

00:01:02,079 --> 00:01:06,640
is a long-time linux kernel developer

00:01:04,320 --> 00:01:07,360
with an embedded background and strong

00:01:06,640 --> 00:01:10,240
affinity

00:01:07,360 --> 00:01:10,799
to impossible missions in addition to

00:01:10,240 --> 00:01:15,119
serving

00:01:10,799 --> 00:01:17,280
as cto of linuxtronics a germany-based

00:01:15,119 --> 00:01:19,280
foss consultancy and service provider

00:01:17,280 --> 00:01:20,479
he's an active maintainer in the linux

00:01:19,280 --> 00:01:21,920
kernel project

00:01:20,479 --> 00:01:24,320
and appointed fellow of the linux

00:01:21,920 --> 00:01:24,640
foundation today he's going to talk to

00:01:24,320 --> 00:01:27,040
us

00:01:24,640 --> 00:01:28,320
about real time and other merge

00:01:27,040 --> 00:01:31,100
conflicts

00:01:28,320 --> 00:01:34,200
please welcome thomas

00:01:31,100 --> 00:01:37,040
[Applause]

00:01:34,200 --> 00:01:40,320
[Music]

00:01:37,040 --> 00:01:43,439
good morning good afternoon

00:01:40,320 --> 00:01:44,159
good evening i hope this covers all the

00:01:43,439 --> 00:01:47,360
relevant

00:01:44,159 --> 00:01:47,360
time zone greetings

00:01:47,520 --> 00:01:50,799
first of all i have to admit that the

00:01:50,240 --> 00:01:54,479
thought

00:01:50,799 --> 00:01:57,680
of giving a talk in front of a camera

00:01:54,479 --> 00:01:58,240
and not in front of an audience made me

00:01:57,680 --> 00:02:01,520
feel

00:01:58,240 --> 00:02:03,840
uncomfortable so i decided to

00:02:01,520 --> 00:02:05,439
have at least a comfortable seat and

00:02:03,840 --> 00:02:09,840
nose lights

00:02:05,439 --> 00:02:09,840
let's see how this works out

00:02:10,560 --> 00:02:17,200
trying to get intrusive changes merged

00:02:14,000 --> 00:02:20,879
into the kernel is a

00:02:17,200 --> 00:02:24,239
challenge the real-time patches

00:02:20,879 --> 00:02:26,879
are quite special in that regard due to

00:02:24,239 --> 00:02:30,400
their complexity

00:02:26,879 --> 00:02:33,040
but the general principles are pretty

00:02:30,400 --> 00:02:36,000
much the same

00:02:33,040 --> 00:02:36,879
let me look at this from both the

00:02:36,000 --> 00:02:40,319
submitters

00:02:36,879 --> 00:02:40,319
and the maintainers view

00:02:40,879 --> 00:02:45,920
most larger projects but even trivial

00:02:44,720 --> 00:02:50,080
device drivers

00:02:45,920 --> 00:02:53,280
stored out as a proof of concept

00:02:50,080 --> 00:02:55,200
taking shortcuts working around

00:02:53,280 --> 00:02:56,879
shortcomings in the existing

00:02:55,200 --> 00:02:59,280
infrastructure

00:02:56,879 --> 00:03:01,360
or just being unaware of better

00:02:59,280 --> 00:03:05,040
solutions

00:03:01,360 --> 00:03:07,840
is nothing unusual it's the normal way

00:03:05,040 --> 00:03:10,879
how things start out

00:03:07,840 --> 00:03:12,959
the real-time patches are not any

00:03:10,879 --> 00:03:16,840
different

00:03:12,959 --> 00:03:20,640
but this is also the point where it gets

00:03:16,840 --> 00:03:23,920
interesting in a one-off project

00:03:20,640 --> 00:03:25,599
scenario the main goal is to make it

00:03:23,920 --> 00:03:28,720
work for the use case

00:03:25,599 --> 00:03:32,799
at hand these one-off projects

00:03:28,720 --> 00:03:35,519
are nothing unusual in our industry

00:03:32,799 --> 00:03:36,879
so the proof of concept gets some minor

00:03:35,519 --> 00:03:38,720
polishing

00:03:36,879 --> 00:03:40,480
a few duct tape fixes through the

00:03:38,720 --> 00:03:47,360
testing fallout

00:03:40,480 --> 00:03:50,159
then it's done on to the next project

00:03:47,360 --> 00:03:54,080
so getting your code accepted into the

00:03:50,159 --> 00:03:56,959
mainline kernel should be trivial right

00:03:54,080 --> 00:04:00,080
polish it up a bit so it halfways

00:03:56,959 --> 00:04:02,959
fulfills the formal criterias

00:04:00,080 --> 00:04:03,599
post it and the relevant maintainers

00:04:02,959 --> 00:04:07,200
will just

00:04:03,599 --> 00:04:11,120
pick it up then it's done

00:04:07,200 --> 00:04:11,120
on to the next project

00:04:11,599 --> 00:04:19,440
if it would be that easy my talk would

00:04:15,680 --> 00:04:20,160
end right here but there is this thing

00:04:19,440 --> 00:04:24,639
called

00:04:20,160 --> 00:04:28,000
reality which ruins everything

00:04:24,639 --> 00:04:31,520
to be honest i never thought about

00:04:28,000 --> 00:04:35,040
posting the real-time patches as is

00:04:31,520 --> 00:04:38,320
for merging that would have been

00:04:35,040 --> 00:04:42,080
some interesting fireworks

00:04:38,320 --> 00:04:45,199
they were full of awful hacks

00:04:42,080 --> 00:04:46,960
obviously we're proud that we had made

00:04:45,199 --> 00:04:49,840
it work

00:04:46,960 --> 00:04:53,280
but looking at an old version today just

00:04:49,840 --> 00:04:53,280
makes me feel ashamed

00:04:53,520 --> 00:04:58,400
so we went and rewrote everything

00:04:56,479 --> 00:05:01,360
several times

00:04:58,400 --> 00:05:03,680
polished it up and merged it piecewise

00:05:01,360 --> 00:05:06,080
and gradually

00:05:03,680 --> 00:05:08,400
not every project is in the scope of the

00:05:06,080 --> 00:05:11,440
real-time patch set

00:05:08,400 --> 00:05:14,160
and a golden rule with 100

00:05:11,440 --> 00:05:15,759
success can guarantee does not exist at

00:05:14,160 --> 00:05:18,240
all

00:05:15,759 --> 00:05:19,600
but from my experience as a submitter

00:05:18,240 --> 00:05:21,919
and maintainer

00:05:19,600 --> 00:05:22,960
there are a few things which help

00:05:21,919 --> 00:05:26,160
avoiding

00:05:22,960 --> 00:05:29,120
the traps which have a 100 percent

00:05:26,160 --> 00:05:29,120
failure guarantee

00:05:32,400 --> 00:05:39,840
avoid to say i need to get this merged

00:05:36,560 --> 00:05:44,560
into kernel version x fail

00:05:39,840 --> 00:05:47,280
is guaranteed code is going to be merged

00:05:44,560 --> 00:05:47,680
when it is considered ready to be merged

00:05:47,280 --> 00:05:50,720
by

00:05:47,680 --> 00:05:53,520
all involved parties

00:05:50,720 --> 00:05:56,160
tell this your manager and make sure he

00:05:53,520 --> 00:05:59,280
understands that fully

00:05:56,160 --> 00:06:02,240
this will spare you and the people

00:05:59,280 --> 00:06:03,680
who need to review your code a lot of

00:06:02,240 --> 00:06:08,960
grief

00:06:03,680 --> 00:06:13,440
and frustration do not ignore feedback

00:06:08,960 --> 00:06:13,440
doing so is a guarantee for fail

00:06:13,520 --> 00:06:17,680
if you are not agreeing with the

00:06:15,919 --> 00:06:20,720
feedback

00:06:17,680 --> 00:06:21,440
then start a technical argument and

00:06:20,720 --> 00:06:24,880
settle it

00:06:21,440 --> 00:06:28,880
up front maintainers

00:06:24,880 --> 00:06:32,000
and reviewers are not always right

00:06:28,880 --> 00:06:32,800
but you need to convince them that your

00:06:32,000 --> 00:06:36,720
approach

00:06:32,800 --> 00:06:36,720
is correct or even better

00:06:36,880 --> 00:06:40,479
but you also need to take carefully into

00:06:39,600 --> 00:06:44,880
account

00:06:40,479 --> 00:06:47,440
their arguments and cautions

00:06:44,880 --> 00:06:49,280
they have to maintain the code for a

00:06:47,440 --> 00:06:52,400
long time

00:06:49,280 --> 00:06:53,120
even when you moved on to a different

00:06:52,400 --> 00:06:56,560
project

00:06:53,120 --> 00:06:56,560
or a different job

00:06:58,960 --> 00:07:03,360
be aware that maintainers tend to keep

00:07:02,720 --> 00:07:07,120
track

00:07:03,360 --> 00:07:07,520
of their previous feedback and most of

00:07:07,120 --> 00:07:10,080
them

00:07:07,520 --> 00:07:12,560
are not really amused if they are

00:07:10,080 --> 00:07:12,560
ignored

00:07:12,800 --> 00:07:19,440
this is especially important when

00:07:16,000 --> 00:07:22,560
it comes to user space interfaces

00:07:19,440 --> 00:07:27,360
or other mechanisms which become

00:07:22,560 --> 00:07:30,720
part of a hard to change interface

00:07:27,360 --> 00:07:35,039
yes this will take time

00:07:30,720 --> 00:07:35,039
but it's valuable time spent

00:07:37,440 --> 00:07:40,800
go the extra mile

00:07:40,880 --> 00:07:47,840
especially with larger project it

00:07:44,000 --> 00:07:51,680
happens that the reviewer a maintainer

00:07:47,840 --> 00:07:54,879
asks you to do some preparatory cleanups

00:07:51,680 --> 00:07:57,599
in order to make it less intrusive and

00:07:54,879 --> 00:08:00,720
better to maintain

00:07:57,599 --> 00:08:04,639
there is again an answer

00:08:00,720 --> 00:08:09,840
which is guaranteed for failure

00:08:04,639 --> 00:08:09,840
it's not in the scope of my project

00:08:10,160 --> 00:08:17,440
this is not an option such requests

00:08:14,240 --> 00:08:22,080
are usually very very reasonable

00:08:17,440 --> 00:08:25,520
and not outrageous app use

00:08:22,080 --> 00:08:28,720
and whether your manager likes it or not

00:08:25,520 --> 00:08:33,039
at this point it is

00:08:28,720 --> 00:08:33,039
in the scope of your project

00:08:34,399 --> 00:08:40,320
if you don't feel technically up for the

00:08:38,839 --> 00:08:42,800
task just

00:08:40,320 --> 00:08:42,800
say so

00:08:44,159 --> 00:08:51,760
admitting lack of expertise

00:08:47,279 --> 00:08:54,959
does not make you a bad engineer

00:08:51,760 --> 00:08:55,600
you will get help and assistance it

00:08:54,959 --> 00:08:57,760
makes you

00:08:55,600 --> 00:09:00,720
which makes you even a better engineer

00:08:57,760 --> 00:09:00,720
than you are now

00:09:01,680 --> 00:09:08,399
and gives you a deeper understanding

00:09:05,120 --> 00:09:11,440
of the bigger picture which is in turn

00:09:08,399 --> 00:09:14,560
going to help you with your project

00:09:11,440 --> 00:09:19,200
and your next project

00:09:14,560 --> 00:09:22,880
after 20 years of kernel experience

00:09:19,200 --> 00:09:26,160
i still run into situations

00:09:22,880 --> 00:09:29,440
where i stand there like a duck

00:09:26,160 --> 00:09:32,720
in a thunderstorm and just feel

00:09:29,440 --> 00:09:35,760
stupid nothing

00:09:32,720 --> 00:09:40,320
wrong with that

00:09:35,760 --> 00:09:42,399
having full comprehension of 28 million

00:09:40,320 --> 00:09:46,320
lines of code

00:09:42,399 --> 00:09:47,680
24 architectures and a large number of

00:09:46,320 --> 00:09:50,880
subsystems

00:09:47,680 --> 00:09:53,680
is simply impossible

00:09:50,880 --> 00:09:56,560
not to talk about the extra complexity

00:09:53,680 --> 00:09:56,560
of user space

00:09:58,080 --> 00:10:04,800
going the extra mile is not

00:10:01,440 --> 00:10:08,720
always a detour it's

00:10:04,800 --> 00:10:12,079
often a shortcut because the integration

00:10:08,720 --> 00:10:15,519
of your feature becomes way easier

00:10:12,079 --> 00:10:19,279
and the overall outcome more palatable

00:10:15,519 --> 00:10:22,800
for everyone involved at the end

00:10:19,279 --> 00:10:26,480
it saves time and nerves

00:10:22,800 --> 00:10:30,079
last but not least

00:10:26,480 --> 00:10:34,000
don't be stubborn and insist

00:10:30,079 --> 00:10:37,200
on being smarter than everybody else

00:10:34,000 --> 00:10:38,560
i can assure you that the people on the

00:10:37,200 --> 00:10:41,760
other side

00:10:38,560 --> 00:10:45,279
are at least as stubborn and smart

00:10:41,760 --> 00:10:48,880
as you are you might

00:10:45,279 --> 00:10:53,120
know more about your particular chip

00:10:48,880 --> 00:10:56,880
or concept but the people

00:10:53,120 --> 00:11:00,000
you talk to probably know more

00:10:56,880 --> 00:11:04,640
about the overall picture and how your

00:11:00,000 --> 00:11:04,640
particular feature can fit into it

00:11:05,360 --> 00:11:12,640
let me stop here there are tons of

00:11:08,880 --> 00:11:15,120
details which i could talk about

00:11:12,640 --> 00:11:17,040
but that would be in the scope of a

00:11:15,120 --> 00:11:19,279
lecture series

00:11:17,040 --> 00:11:20,160
and certainly not done within the time

00:11:19,279 --> 00:11:23,040
constraints

00:11:20,160 --> 00:11:23,040
of this talk

00:11:23,360 --> 00:11:30,640
i picked a couple of prime examples

00:11:27,680 --> 00:11:31,440
which can make your life as a submitter

00:11:30,640 --> 00:11:35,519
harder or

00:11:31,440 --> 00:11:38,079
easier and have the same effect

00:11:35,519 --> 00:11:40,480
on the life of a maintainer of a

00:11:38,079 --> 00:11:44,800
reviewer

00:11:40,480 --> 00:11:48,640
at the very end all of these examples

00:11:44,800 --> 00:11:53,440
are more about human interaction

00:11:48,640 --> 00:11:53,440
than about technical details

00:11:53,760 --> 00:12:01,519
human interaction is hard in general

00:11:58,720 --> 00:12:02,399
but it becomes even harder when the

00:12:01,519 --> 00:12:06,320
interaction

00:12:02,399 --> 00:12:09,200
is based on fundamentally different

00:12:06,320 --> 00:12:09,200
expectations

00:12:09,760 --> 00:12:18,160
dear condole said once

00:12:12,959 --> 00:12:18,160
open source is a social experiment

00:12:18,240 --> 00:12:21,600
he's right about that

00:12:21,760 --> 00:12:29,040
it's a social experiment

00:12:24,800 --> 00:12:34,240
which does not follow any smart

00:12:29,040 --> 00:12:38,320
thought out experimental setup

00:12:34,240 --> 00:12:41,600
the only purpose of this experiment is

00:12:38,320 --> 00:12:44,320
to be observed how it evolves

00:12:41,600 --> 00:12:44,320
over time

00:12:44,880 --> 00:12:53,279
i've had and still have the pleasure

00:12:48,560 --> 00:12:56,800
of observing it for more than 25 years

00:12:53,279 --> 00:13:01,440
from different point of views

00:12:56,800 --> 00:13:04,720
user occasional submitter

00:13:01,440 --> 00:13:08,480
out of tree tinkerer

00:13:04,720 --> 00:13:11,200
regular submitter maintainer

00:13:08,480 --> 00:13:12,639
and submitter who is trying to get the

00:13:11,200 --> 00:13:16,720
lost crucial bits

00:13:12,639 --> 00:13:16,720
of the real-time patches merged

00:13:17,120 --> 00:13:21,760
the expectations of submitters and

00:13:19,920 --> 00:13:24,079
maintainers

00:13:21,760 --> 00:13:25,200
certainly went through several

00:13:24,079 --> 00:13:29,839
permutations

00:13:25,200 --> 00:13:33,440
over time but they have all in common

00:13:29,839 --> 00:13:38,000
that the expectation on both sides

00:13:33,440 --> 00:13:38,000
were were and still are different

00:13:38,399 --> 00:13:45,519
in the early days linda's expectation

00:13:42,000 --> 00:13:47,079
was to get his teaching toy working

00:13:45,519 --> 00:13:48,560
while some of the earliest

00:13:47,079 --> 00:13:51,760
subcontributors

00:13:48,560 --> 00:13:53,600
wanted to use linux for real-world

00:13:51,760 --> 00:13:56,560
applications

00:13:53,600 --> 00:13:57,040
at some point this culminated in the

00:13:56,560 --> 00:14:00,480
mail

00:13:57,040 --> 00:14:06,079
from linux to the mailing list to get

00:14:00,480 --> 00:14:06,079
to those people to get out of his inbox

00:14:06,399 --> 00:14:10,240
during the early distro days a new set

00:14:09,279 --> 00:14:14,000
of conflicting

00:14:10,240 --> 00:14:17,199
expectations came along at that

00:14:14,000 --> 00:14:18,720
time a lot of maintainers were still

00:14:17,199 --> 00:14:21,839
hobbyists

00:14:18,720 --> 00:14:24,880
and not necessarily interested in the

00:14:21,839 --> 00:14:24,880
enterprise world

00:14:25,040 --> 00:14:30,800
later on we got the enterprise versus

00:14:28,160 --> 00:14:33,199
embedded conflicts

00:14:30,800 --> 00:14:34,480
and the conflicting expectations and

00:14:33,199 --> 00:14:38,079
interests

00:14:34,480 --> 00:14:40,720
during the 2-5 development cycle

00:14:38,079 --> 00:14:41,680
which ultimately led to the rolling

00:14:40,720 --> 00:14:45,839
release model

00:14:41,680 --> 00:14:45,839
which we are using now

00:14:46,160 --> 00:14:51,040
the constantly ongoing conflict of

00:14:49,320 --> 00:14:54,480
expectations

00:14:51,040 --> 00:14:55,360
versus handling security issues earns to

00:14:54,480 --> 00:14:58,880
be mentioned

00:14:55,360 --> 00:15:01,839
as well secrecy

00:14:58,880 --> 00:15:01,839
power games

00:15:02,000 --> 00:15:06,800
loyalties and marketing versus a

00:15:05,279 --> 00:15:09,920
pragmatic

00:15:06,800 --> 00:15:12,800
and truly collaborative approach

00:15:09,920 --> 00:15:15,120
of fixing the problems in the best way

00:15:12,800 --> 00:15:18,480
for everyone

00:15:15,120 --> 00:15:21,199
meltdowns factory was surely a prime

00:15:18,480 --> 00:15:24,639
example for that

00:15:21,199 --> 00:15:27,760
the reason bluetooth affair

00:15:24,639 --> 00:15:31,759
is just another proof that history

00:15:27,760 --> 00:15:31,759
has to repeat itself

00:15:34,320 --> 00:15:39,680
in the past years we see conflicting

00:15:38,480 --> 00:15:42,639
expectations

00:15:39,680 --> 00:15:45,600
on non-technical nature of non-technical

00:15:42,639 --> 00:15:45,600
nature as well

00:15:45,839 --> 00:15:49,680
like the way we communicate

00:15:50,079 --> 00:15:55,360
email versus github old school versus

00:15:54,480 --> 00:16:00,880
generation

00:15:55,360 --> 00:16:03,759
set we surely

00:16:00,880 --> 00:16:04,639
have also the conflicting expectations

00:16:03,759 --> 00:16:08,399
of

00:16:04,639 --> 00:16:12,480
corporates managers

00:16:08,399 --> 00:16:15,920
and open source community roadmaps

00:16:12,480 --> 00:16:23,120
check boxes time to market

00:16:15,920 --> 00:16:26,839
versus take your time and do it right

00:16:23,120 --> 00:16:28,240
of course we have also conflicting

00:16:26,839 --> 00:16:33,279
expectations of

00:16:28,240 --> 00:16:36,639
all sorts within the community itself

00:16:33,279 --> 00:16:38,959
but fortunately most of them

00:16:36,639 --> 00:16:41,680
are over technically and maintain

00:16:38,959 --> 00:16:44,480
maintainability issues

00:16:41,680 --> 00:16:45,120
and they usually get solved after both

00:16:44,480 --> 00:16:48,160
sides

00:16:45,120 --> 00:16:51,920
calmed down and figured out

00:16:48,160 --> 00:16:52,320
that being born forever is not getting

00:16:51,920 --> 00:16:54,880
us

00:16:52,320 --> 00:16:54,880
anywhere

00:16:56,800 --> 00:17:04,640
so with all the differences

00:17:01,519 --> 00:17:08,240
there is one and all the changes of

00:17:04,640 --> 00:17:09,520
expectations there is one important

00:17:08,240 --> 00:17:12,559
expectation

00:17:09,520 --> 00:17:16,839
on the community and maintainer side

00:17:12,559 --> 00:17:18,079
with ha which has not changed much over

00:17:16,839 --> 00:17:21,439
time

00:17:18,079 --> 00:17:25,600
the expectation to create

00:17:21,439 --> 00:17:28,079
and preserve a high quality

00:17:25,600 --> 00:17:29,200
and long-term sustainable and

00:17:28,079 --> 00:17:32,720
maintainable

00:17:29,200 --> 00:17:36,880
operating system this

00:17:32,720 --> 00:17:40,080
is the expectation to focus on

00:17:36,880 --> 00:17:43,080
and it's important to understand

00:17:40,080 --> 00:17:44,480
that this expectation is not

00:17:43,080 --> 00:17:47,840
negotiatable

00:17:44,480 --> 00:17:47,840
at all

00:17:48,320 --> 00:17:52,640
this expectation is one of the many

00:17:51,039 --> 00:17:55,280
reasons

00:17:52,640 --> 00:17:56,720
but in my opinion a really important

00:17:55,280 --> 00:18:00,080
reason

00:17:56,720 --> 00:18:03,600
why open source and linux still

00:18:00,080 --> 00:18:03,600
exists and thrives

00:18:05,120 --> 00:18:10,880
it's also the expectation

00:18:08,160 --> 00:18:11,280
which should become the common ground

00:18:10,880 --> 00:18:14,480
for

00:18:11,280 --> 00:18:18,160
all parties involved

00:18:14,480 --> 00:18:20,720
if that happens then the rest

00:18:18,160 --> 00:18:21,600
of the still existing conflicts of

00:18:20,720 --> 00:18:24,720
interest and

00:18:21,600 --> 00:18:29,840
expectation will become

00:18:24,720 --> 00:18:29,840
minor nuisances

00:18:30,400 --> 00:18:37,440
from 20 years of kernel experience

00:18:34,080 --> 00:18:37,840
and 15 years of gradually getting real

00:18:37,440 --> 00:18:41,360
time

00:18:37,840 --> 00:18:44,640
into the mainline kernel my main

00:18:41,360 --> 00:18:48,720
takeaway is that focusing

00:18:44,640 --> 00:18:52,880
on doing it right is the only way to get

00:18:48,720 --> 00:18:56,080
her code merged into the mainline kernel

00:18:52,880 --> 00:19:00,240
meeting the non-negotiatable

00:18:56,080 --> 00:19:03,600
primary expectation is the way to go

00:19:00,240 --> 00:19:07,200
it's the easiest way to overcome the

00:19:03,600 --> 00:19:10,400
conflict of expectations and interests

00:19:07,200 --> 00:19:13,840
and to build trust with the people

00:19:10,400 --> 00:19:13,840
you're interacting with

00:19:14,960 --> 00:19:22,799
it will take time

00:19:18,480 --> 00:19:26,320
but ignoring this will take more time

00:19:22,799 --> 00:19:29,520
and cause grief and frustration on both

00:19:26,320 --> 00:19:33,039
ends for no reason

00:19:29,520 --> 00:19:38,480
or it will result in a compute

00:19:33,039 --> 00:19:41,360
complete failure in the worst case

00:19:38,480 --> 00:19:43,039
at this point i want to take the

00:19:41,360 --> 00:19:45,200
opportunity

00:19:43,039 --> 00:19:46,400
to say thanks to the members of the

00:19:45,200 --> 00:19:49,679
linux foundation

00:19:46,400 --> 00:19:53,679
real time linux project

00:19:49,679 --> 00:19:56,640
for their support and deep understanding

00:19:53,679 --> 00:19:57,679
that doing it in the right way is the

00:19:56,640 --> 00:20:01,840
only option

00:19:57,679 --> 00:20:05,440
to get it done at all despite

00:20:01,840 --> 00:20:07,840
their obvious desire to see it merged

00:20:05,440 --> 00:20:07,840
yesterday

00:20:09,200 --> 00:20:14,400
with that i want to thank you for your

00:20:13,039 --> 00:20:18,080
attention

00:20:14,400 --> 00:20:21,679
and wish you a nice day afternoon

00:20:18,080 --> 00:20:26,000
or evening depending on the time zone

00:20:21,679 --> 00:20:29,919
you're in thank you thomas

00:20:26,000 --> 00:20:32,799
our next speaker professor jesus lavarta

00:20:29,919 --> 00:20:35,360
is director of computer sciences at

00:20:32,799 --> 00:20:37,679
barcelona supercomputing center

00:20:35,360 --> 00:20:38,960
where his research team has developed

00:20:37,679 --> 00:20:41,440
performance analysis

00:20:38,960 --> 00:20:42,080
and prediction tools and is pioneering

00:20:41,440 --> 00:20:44,480
research

00:20:42,080 --> 00:20:45,360
on how to increase the intelligence

00:20:44,480 --> 00:20:47,919
embedded

00:20:45,360 --> 00:20:48,880
in these performance tools today is

00:20:47,919 --> 00:20:51,679
going to share

00:20:48,880 --> 00:20:52,559
on the european processor initiative

00:20:51,679 --> 00:20:54,640
project

00:20:52,559 --> 00:20:56,240
which aims at developing european

00:20:54,640 --> 00:20:57,440
processor technology for high

00:20:56,240 --> 00:21:00,080
performance computing

00:20:57,440 --> 00:21:01,280
and emerging application areas with an

00:21:00,080 --> 00:21:03,919
important objective

00:21:01,280 --> 00:21:05,120
of the project to develop a fully owned

00:21:03,919 --> 00:21:07,760
implementation

00:21:05,120 --> 00:21:08,640
of a genetic accelerator based on the

00:21:07,760 --> 00:21:12,320
risk 5

00:21:08,640 --> 00:21:17,840
vector extension instruction set

00:21:12,320 --> 00:21:17,840
please welcome professor jesus lavarta

00:21:23,360 --> 00:21:26,880
hello i'm jesus lavartan director of the

00:21:25,760 --> 00:21:28,480
computer science department at the

00:21:26,880 --> 00:21:31,520
barcelona supercomputing center

00:21:28,480 --> 00:21:36,559
and i'll be talking about the respect or

00:21:31,520 --> 00:21:36,559
reside vector processor in the project

00:21:37,120 --> 00:21:42,559
first let me just

00:21:40,559 --> 00:21:45,039
tell you this is going to be rather than

00:21:42,559 --> 00:21:46,640
details on the actual process or a lot

00:21:45,039 --> 00:21:48,320
of details on the outdoor processor is

00:21:46,640 --> 00:21:50,960
some personal opinions

00:21:48,320 --> 00:21:54,320
on fundamental characteristics that we

00:21:50,960 --> 00:21:54,320
believe are important and have

00:21:54,480 --> 00:22:02,000
directed us to the to the development of

00:21:58,080 --> 00:22:06,080
this process and that i'm kind of

00:22:02,000 --> 00:22:07,840
biased because i come from the hpc high

00:22:06,080 --> 00:22:11,840
performance computer

00:22:07,840 --> 00:22:14,640
world and many of the motivations

00:22:11,840 --> 00:22:16,480
are in in this sector although i do

00:22:14,640 --> 00:22:18,080
believe that it can influence ganas that

00:22:16,480 --> 00:22:19,840
can help

00:22:18,080 --> 00:22:21,600
contribute to improvements in computing

00:22:19,840 --> 00:22:25,919
in general in many other

00:22:21,600 --> 00:22:28,320
sectors the motivation for the project

00:22:25,919 --> 00:22:31,760
is the actual situation that

00:22:28,320 --> 00:22:33,600
there is no european company designing

00:22:31,760 --> 00:22:37,679
processors and

00:22:33,600 --> 00:22:41,280
and that is what

00:22:37,679 --> 00:22:43,600
was intended to set up buy or to fix

00:22:41,280 --> 00:22:45,360
by starting initiatives in that

00:22:43,600 --> 00:22:46,080
direction and this is a project which

00:22:45,360 --> 00:22:49,440
coordinates

00:22:46,080 --> 00:22:52,480
vendors companies and users and centers

00:22:49,440 --> 00:22:55,840
hpc centers trying to do

00:22:52,480 --> 00:22:57,760
design and design processor for hpc

00:22:55,840 --> 00:23:00,640
systems which could be used also in

00:22:57,760 --> 00:23:01,520
other domains that require intensive

00:23:00,640 --> 00:23:05,120
computing

00:23:01,520 --> 00:23:08,320
have intensive computing demands

00:23:05,120 --> 00:23:12,240
the end in the current architecture is

00:23:08,320 --> 00:23:14,960
is depicted here and it's based on

00:23:12,240 --> 00:23:16,799
arm as a more mature technology as of

00:23:14,960 --> 00:23:19,760
today more demonstrated and

00:23:16,799 --> 00:23:20,720
accepted in already in the hpc domain

00:23:19,760 --> 00:23:23,200
and

00:23:20,720 --> 00:23:24,320
integrating several of those scores into

00:23:23,200 --> 00:23:27,679
a chip

00:23:24,320 --> 00:23:29,840
but my major focus today would be on

00:23:27,679 --> 00:23:31,760
a component for which there will be a

00:23:29,840 --> 00:23:35,440
few of those

00:23:31,760 --> 00:23:36,240
or just a very limited number of tiles

00:23:35,440 --> 00:23:39,600
into the chip

00:23:36,240 --> 00:23:42,400
of this risk 5 vector based

00:23:39,600 --> 00:23:42,400
accelerator

00:23:42,960 --> 00:23:47,360
in reality the architecture of this

00:23:44,960 --> 00:23:50,559
switch 5 accelerator

00:23:47,360 --> 00:23:51,840
is consists is architected to be made up

00:23:50,559 --> 00:23:55,200
of eight

00:23:51,840 --> 00:23:57,840
risk five vector cores with uh

00:23:55,200 --> 00:23:58,960
vector processing units consisting of

00:23:57,840 --> 00:24:02,480
eight lanes

00:23:58,960 --> 00:24:06,640
and the isa being able to support length

00:24:02,480 --> 00:24:08,880
vector lengths of 256 elements

00:24:06,640 --> 00:24:11,120
we also have a special interest and

00:24:08,880 --> 00:24:14,640
attention supporting

00:24:11,120 --> 00:24:17,760
by high byte per flow ratios and

00:24:14,640 --> 00:24:20,240
on mechanisms to control locality in the

00:24:17,760 --> 00:24:23,760
shared cache that is available

00:24:20,240 --> 00:24:26,480
between the the different nodes the tile

00:24:23,760 --> 00:24:27,279
will be running linux and will also have

00:24:26,480 --> 00:24:29,360
some

00:24:27,279 --> 00:24:31,600
additional accelerators for deep

00:24:29,360 --> 00:24:34,320
learning functionalities and extensive

00:24:31,600 --> 00:24:35,279
algorithms as well as variable precision

00:24:34,320 --> 00:24:38,000
large precision

00:24:35,279 --> 00:24:38,000
arithmetics

00:24:38,720 --> 00:24:44,000
i would like to as i said focus on on

00:24:42,159 --> 00:24:46,400
the general characteristics of

00:24:44,000 --> 00:24:49,120
our concerns or challenges that you have

00:24:46,400 --> 00:24:53,440
when designing a large-scale system

00:24:49,120 --> 00:24:57,440
under many and they can be overwhelming

00:24:53,440 --> 00:24:59,679
and the objective is to see whether we

00:24:57,440 --> 00:25:00,400
can kind of describe them in a unified

00:24:59,679 --> 00:25:03,919
way

00:25:00,400 --> 00:25:07,200
whether what are the fundamentals that

00:25:03,919 --> 00:25:10,559
allow us to really handle all these

00:25:07,200 --> 00:25:13,360
issues and challenges in in

00:25:10,559 --> 00:25:14,159
an elegant way and with the possibility

00:25:13,360 --> 00:25:16,880
of

00:25:14,159 --> 00:25:18,880
maximizing the performance of the of the

00:25:16,880 --> 00:25:21,039
system and avoiding

00:25:18,880 --> 00:25:22,320
the the collapse that we are seeing in

00:25:21,039 --> 00:25:25,440
this

00:25:22,320 --> 00:25:28,240
cartoon so

00:25:25,440 --> 00:25:29,520
let me start by talking about the the

00:25:28,240 --> 00:25:31,120
term holistic

00:25:29,520 --> 00:25:32,720
design what we understand or what i

00:25:31,120 --> 00:25:34,240
understand by by

00:25:32,720 --> 00:25:36,080
holistic or design code the science of

00:25:34,240 --> 00:25:39,440
password probably

00:25:36,080 --> 00:25:41,039
is being used a lot and very often it

00:25:39,440 --> 00:25:43,360
essentially means

00:25:41,039 --> 00:25:45,679
that one of the levels kind of pushes

00:25:43,360 --> 00:25:48,799
one contribution or suggestion to the

00:25:45,679 --> 00:25:49,679
one lower level along the vertical line

00:25:48,799 --> 00:25:53,600
here

00:25:49,679 --> 00:25:56,320
i would like to see it more in a kind of

00:25:53,600 --> 00:25:58,720
circular way where everybody interacts

00:25:56,320 --> 00:26:02,640
or can contribute or can

00:25:58,720 --> 00:26:03,600
be or or suggest requirements to any

00:26:02,640 --> 00:26:06,000
other level and

00:26:03,600 --> 00:26:07,360
the the issue is to identify where to

00:26:06,000 --> 00:26:09,679
best place

00:26:07,360 --> 00:26:12,000
the the solutions to the issues in a

00:26:09,679 --> 00:26:14,559
balanced well-balanced kind of

00:26:12,000 --> 00:26:16,240
architecture where the forces naturally

00:26:14,559 --> 00:26:19,120
distribute between them

00:26:16,240 --> 00:26:20,000
to maximize with minimum energy getting

00:26:19,120 --> 00:26:23,840
maximum

00:26:20,000 --> 00:26:26,880
results in reality

00:26:23,840 --> 00:26:29,679
what we had when you are not able

00:26:26,880 --> 00:26:31,520
to do part of the system you cannot do

00:26:29,679 --> 00:26:33,279
this holistic design where

00:26:31,520 --> 00:26:35,520
all levels contribute to all levels

00:26:33,279 --> 00:26:37,440
probably the system does not work that

00:26:35,520 --> 00:26:38,960
well so from that point of view

00:26:37,440 --> 00:26:42,080
the objective of the project is to

00:26:38,960 --> 00:26:44,159
really achieve the holistic

00:26:42,080 --> 00:26:45,360
system including interaction between

00:26:44,159 --> 00:26:49,200
hardware

00:26:45,360 --> 00:26:50,240
and software and it is really important

00:26:49,200 --> 00:26:52,480
as we all know

00:26:50,240 --> 00:26:53,919
that for designing very very complex

00:26:52,480 --> 00:26:55,600
systems interfaces

00:26:53,919 --> 00:26:57,200
and availability open source

00:26:55,600 --> 00:26:59,360
availability of implementations

00:26:57,200 --> 00:27:00,880
is of key importance it lets you

00:26:59,360 --> 00:27:04,000
leverage

00:27:00,880 --> 00:27:05,840
those interfaces door standards

00:27:04,000 --> 00:27:07,919
and lets you contribute where you think

00:27:05,840 --> 00:27:10,320
you can innovate or you can contribute

00:27:07,919 --> 00:27:12,480
uh interesting or important

00:27:10,320 --> 00:27:14,559
characteristics for a given sector

00:27:12,480 --> 00:27:16,480
so this is the situation where we which

00:27:14,559 --> 00:27:18,559
we had also in terms of

00:27:16,480 --> 00:27:19,679
availability of open standards and

00:27:18,559 --> 00:27:21,520
interfaces

00:27:19,679 --> 00:27:23,600
and implementations in this level and

00:27:21,520 --> 00:27:25,440
when you try to go into the

00:27:23,600 --> 00:27:27,520
lower level hardware level what is the

00:27:25,440 --> 00:27:29,760
natural choice as of today

00:27:27,520 --> 00:27:31,760
it is risk fight this is what we have

00:27:29,760 --> 00:27:36,640
taken and this is what we are

00:27:31,760 --> 00:27:39,200
integrating into this impact accelerator

00:27:36,640 --> 00:27:40,880
a first observation is about the

00:27:39,200 --> 00:27:43,679
importance of

00:27:40,880 --> 00:27:45,360
really doing very detailed analysis and

00:27:43,679 --> 00:27:48,240
insight of the behavior

00:27:45,360 --> 00:27:50,320
and that co-design is aimed at getting

00:27:48,240 --> 00:27:52,000
fundamentals across multiple

00:27:50,320 --> 00:27:53,679
applications for

00:27:52,000 --> 00:27:55,200
that means you have to analyze with

00:27:53,679 --> 00:27:57,679
verifying granularity in many

00:27:55,200 --> 00:27:59,520
applications and get fundamental

00:27:57,679 --> 00:28:01,200
characteristics of the interaction

00:27:59,520 --> 00:28:04,720
between processes

00:28:01,200 --> 00:28:05,679
the locality behavior the contention of

00:28:04,720 --> 00:28:08,640
resources

00:28:05,679 --> 00:28:10,080
what do we observe in existing machines

00:28:08,640 --> 00:28:11,840
in order to use that

00:28:10,080 --> 00:28:13,919
information for the design of future

00:28:11,840 --> 00:28:16,000
ones this is the kind of information

00:28:13,919 --> 00:28:17,039
that we leverage from other centers of

00:28:16,000 --> 00:28:19,440
excellence

00:28:17,039 --> 00:28:22,320
which are activities also funded by the

00:28:19,440 --> 00:28:24,799
european commission but will let us

00:28:22,320 --> 00:28:25,840
let us gain that insight on the behavior

00:28:24,799 --> 00:28:28,880
of programs

00:28:25,840 --> 00:28:31,600
and what i want to argue is that this

00:28:28,880 --> 00:28:33,440
very fine grain analysis that is needed

00:28:31,600 --> 00:28:35,520
at the high level is also going to be

00:28:33,440 --> 00:28:36,720
very useful at the microscopic level to

00:28:35,520 --> 00:28:38,559
understand

00:28:36,720 --> 00:28:40,159
the actual behavior of the micro

00:28:38,559 --> 00:28:42,799
architecture of the processor

00:28:40,159 --> 00:28:44,960
understand access patterns understand

00:28:42,799 --> 00:28:47,520
locality and the impact of

00:28:44,960 --> 00:28:49,760
microscopic impact of of different

00:28:47,520 --> 00:28:53,440
scheduling or or different

00:28:49,760 --> 00:28:54,559
policies in terms of catch replacements

00:28:53,440 --> 00:28:57,600
or

00:28:54,559 --> 00:29:00,960
things like microarchitectural

00:28:57,600 --> 00:29:03,200
changes so

00:29:00,960 --> 00:29:04,240
if i have to go into the the four kind

00:29:03,200 --> 00:29:06,640
of

00:29:04,240 --> 00:29:07,279
principles the first one that i think is

00:29:06,640 --> 00:29:10,640
important

00:29:07,279 --> 00:29:11,679
is the fact of designing a hierarchical

00:29:10,640 --> 00:29:14,559
system

00:29:11,679 --> 00:29:15,440
and a balanced theoretical system where

00:29:14,559 --> 00:29:17,120
each level

00:29:15,440 --> 00:29:19,760
contributes a given amount of

00:29:17,120 --> 00:29:23,520
concurrency its level

00:29:19,760 --> 00:29:26,640
is adapted to a given level of overheads

00:29:23,520 --> 00:29:28,320
but we try to avoid covering the huge

00:29:26,640 --> 00:29:29,200
amounts of concurrency we are talking

00:29:28,320 --> 00:29:32,799
about

00:29:29,200 --> 00:29:36,720
10 28 10 28

00:29:32,799 --> 00:29:37,760
operations per cycle it's a huge number

00:29:36,720 --> 00:29:39,919
of cores

00:29:37,760 --> 00:29:43,200
and trying to orchestrate all of that in

00:29:39,919 --> 00:29:45,760
a single as a single level it's a really

00:29:43,200 --> 00:29:47,840
huge difficulty and they were the

00:29:45,760 --> 00:29:50,640
granularities supported by

00:29:47,840 --> 00:29:51,520
the different levels are more tuned to

00:29:50,640 --> 00:29:54,640
handle a

00:29:51,520 --> 00:29:56,960
less limited amount of

00:29:54,640 --> 00:29:58,960
work at each specific level and then

00:29:56,960 --> 00:30:00,240
innermost levels can support finer

00:29:58,960 --> 00:30:02,399
granularities

00:30:00,240 --> 00:30:03,760
the the mechanisms that we or what we

00:30:02,399 --> 00:30:05,919
think is that

00:30:03,760 --> 00:30:08,799
workflow levels for example can support

00:30:05,919 --> 00:30:11,919
a fair amount of concurrency

00:30:08,799 --> 00:30:12,240
mpi is a very rigid so it's a one level

00:30:11,919 --> 00:30:14,799
but

00:30:12,240 --> 00:30:16,960
but it actually can support a large

00:30:14,799 --> 00:30:17,760
number of course and then within nodes

00:30:16,960 --> 00:30:19,360
you have

00:30:17,760 --> 00:30:21,520
potentially different levels of

00:30:19,360 --> 00:30:22,000
granularity being supported this is what

00:30:21,520 --> 00:30:23,600
we try

00:30:22,000 --> 00:30:25,279
to do with the threat at the threatening

00:30:23,600 --> 00:30:28,320
level several levels

00:30:25,279 --> 00:30:29,279
but at a given point we go to the course

00:30:28,320 --> 00:30:31,440
that are

00:30:29,279 --> 00:30:32,720
a limited number of courses we have seen

00:30:31,440 --> 00:30:34,240
in the architecture that we have

00:30:32,720 --> 00:30:37,840
presented

00:30:34,240 --> 00:30:40,000
they are they each of those has a

00:30:37,840 --> 00:30:42,000
large number of functional units which

00:30:40,000 --> 00:30:46,000
are handled by this

00:30:42,000 --> 00:30:48,399
internal hardware and control of the of

00:30:46,000 --> 00:30:50,720
the micro architecture state

00:30:48,399 --> 00:30:52,880
so essentially is is a situation where

00:30:50,720 --> 00:30:56,159
every level contributes

00:30:52,880 --> 00:30:57,279
several uh tens or several hundred some

00:30:56,159 --> 00:30:59,279
of them more but

00:30:57,279 --> 00:31:01,039
essentially adapt the contribution of it

00:30:59,279 --> 00:31:03,919
level and try to avoid

00:31:01,039 --> 00:31:05,919
uh some levels to to have to contribute

00:31:03,919 --> 00:31:08,159
a huge amount of parallelism which

00:31:05,919 --> 00:31:10,399
probably might not even be

00:31:08,159 --> 00:31:12,240
easy to extract or even available on

00:31:10,399 --> 00:31:16,240
applications

00:31:12,240 --> 00:31:19,200
a second thing is the the fact that

00:31:16,240 --> 00:31:21,039
we have to move from a latency dominated

00:31:19,200 --> 00:31:22,799
view of the world

00:31:21,039 --> 00:31:24,880
to a throughput-oriented thing we have

00:31:22,799 --> 00:31:26,799
to be able to instantiate a lot of work

00:31:24,880 --> 00:31:28,960
to specify a lot of

00:31:26,799 --> 00:31:30,320
a lot of computations to be done with

00:31:28,960 --> 00:31:32,000
dependencies between them with

00:31:30,320 --> 00:31:34,799
interactions with order to be

00:31:32,000 --> 00:31:35,279
maintained but not necessarily a pure

00:31:34,799 --> 00:31:38,960
fork

00:31:35,279 --> 00:31:40,399
join a pure synchronous type of behavior

00:31:38,960 --> 00:31:43,440
but enabling for

00:31:40,399 --> 00:31:45,039
a synchrony this is what we believe that

00:31:43,440 --> 00:31:46,799
the openmp database model

00:31:45,039 --> 00:31:48,480
allows us to do and at the threading

00:31:46,799 --> 00:31:53,039
leveling within

00:31:48,480 --> 00:31:55,679
within nodes this is what we are

00:31:53,039 --> 00:31:57,200
interacting integrating into the mpi

00:31:55,679 --> 00:32:00,799
higher levels

00:31:57,200 --> 00:32:04,559
of mpi by allowing easy and productive

00:32:00,799 --> 00:32:07,679
specification of asynchronous executions

00:32:04,559 --> 00:32:09,919
and this is what can be also supported

00:32:07,679 --> 00:32:10,640
with essentially the same task-based

00:32:09,919 --> 00:32:13,120
models at

00:32:10,640 --> 00:32:14,240
course grain of workflows computational

00:32:13,120 --> 00:32:15,919
workflows

00:32:14,240 --> 00:32:18,320
in python for example that are

00:32:15,919 --> 00:32:21,600
automatically parallelized and

00:32:18,320 --> 00:32:24,000
and distributed over the in the large

00:32:21,600 --> 00:32:26,480
number of resources

00:32:24,000 --> 00:32:28,720
that task-based approach essentially

00:32:26,480 --> 00:32:30,320
also happens also appears at the low

00:32:28,720 --> 00:32:33,440
level in the hierarchy

00:32:30,320 --> 00:32:33,919
and long vectors and the that we support

00:32:33,440 --> 00:32:37,600
is

00:32:33,919 --> 00:32:38,880
nothing more than tasks executed or

00:32:37,600 --> 00:32:42,080
interpreted or

00:32:38,880 --> 00:32:45,360
or orchestrated by the hardware itself

00:32:42,080 --> 00:32:46,240
and b in terms of operating on 256

00:32:45,360 --> 00:32:48,399
elements

00:32:46,240 --> 00:32:49,919
is something that kind of decouples the

00:32:48,399 --> 00:32:50,799
front end of from the back end of the

00:32:49,919 --> 00:32:54,880
processor and

00:32:50,799 --> 00:32:59,519
kind of gives a a fair amount of

00:32:54,880 --> 00:33:01,760
of uh relief today to these front ends

00:32:59,519 --> 00:33:03,440
which they in very often today in many

00:33:01,760 --> 00:33:05,760
of the processors

00:33:03,440 --> 00:33:07,519
really have to rush to keep feeding

00:33:05,760 --> 00:33:11,120
their backend engines the

00:33:07,519 --> 00:33:14,240
the functional units the idea here is to

00:33:11,120 --> 00:33:16,720
to have more relaxity in terms of

00:33:14,240 --> 00:33:18,559
doing those things in more in fashions

00:33:16,720 --> 00:33:22,080
that are more

00:33:18,559 --> 00:33:25,519
tolerant to variability so this is

00:33:22,080 --> 00:33:28,000
a generic feature that we think we

00:33:25,519 --> 00:33:29,120
support at all levels from the hardware

00:33:28,000 --> 00:33:32,559
to the

00:33:29,120 --> 00:33:34,559
to the software a third very important

00:33:32,559 --> 00:33:36,240
property is the fact that applications

00:33:34,559 --> 00:33:39,200
should be malleable should

00:33:36,240 --> 00:33:41,600
be able to adapt their concurrency under

00:33:39,200 --> 00:33:43,840
the way of exploiting the concurrency

00:33:41,600 --> 00:33:44,960
to the available resources in a world

00:33:43,840 --> 00:33:48,159
which is

00:33:44,960 --> 00:33:49,760
going to be very dynamic very in many

00:33:48,159 --> 00:33:53,360
cases very unpredictable

00:33:49,760 --> 00:33:55,279
huge variabilities we need

00:33:53,360 --> 00:33:56,640
for applications to be adaptable to

00:33:55,279 --> 00:34:00,720
those

00:33:56,640 --> 00:34:03,840
to those variabilities and to

00:34:00,720 --> 00:34:04,640
be able to share resources maybe in mba

00:34:03,840 --> 00:34:07,919
processes

00:34:04,640 --> 00:34:10,399
thread threads share cores between

00:34:07,919 --> 00:34:12,320
between employee mpi processes lending

00:34:10,399 --> 00:34:14,399
resources when not needing

00:34:12,320 --> 00:34:17,359
reclaiming them when needed and doing

00:34:14,399 --> 00:34:19,679
that this is a kind of elastic

00:34:17,359 --> 00:34:20,800
way of computing a defined granularity

00:34:19,679 --> 00:34:23,280
level this is what

00:34:20,800 --> 00:34:26,800
for example we do with this dynamic load

00:34:23,280 --> 00:34:29,520
balancing libraries on top of openmp

00:34:26,800 --> 00:34:31,200
one thing that would be very nice is

00:34:29,520 --> 00:34:33,280
that these decisions that have

00:34:31,200 --> 00:34:35,200
are taken by the runtime should be

00:34:33,280 --> 00:34:36,879
coordinated and this is important the

00:34:35,200 --> 00:34:38,639
coordination across levels should be

00:34:36,879 --> 00:34:40,639
coordinating with

00:34:38,639 --> 00:34:42,480
with the linux kernel for example and it

00:34:40,639 --> 00:34:45,520
would be nice to have

00:34:42,480 --> 00:34:48,720
a hand of scheduling mechanisms by which

00:34:45,520 --> 00:34:51,200
the decisions are kind of

00:34:48,720 --> 00:34:52,399
the information that the higher levels

00:34:51,200 --> 00:34:56,159
do have

00:34:52,399 --> 00:34:59,760
is communicated to the runtime for it to

00:34:56,159 --> 00:35:00,160
to try to satisfy them if possible of

00:34:59,760 --> 00:35:02,400
course

00:35:00,160 --> 00:35:03,839
random will be always in control the

00:35:02,400 --> 00:35:05,040
operating system will be always in

00:35:03,839 --> 00:35:08,000
control

00:35:05,040 --> 00:35:09,599
but it probably might benefit from hints

00:35:08,000 --> 00:35:12,560
that can

00:35:09,599 --> 00:35:14,400
help improve the behavior of the

00:35:12,560 --> 00:35:17,920
application

00:35:14,400 --> 00:35:18,560
on top of it even at the architectural

00:35:17,920 --> 00:35:21,839
level

00:35:18,560 --> 00:35:24,320
the breeze 5 of course but

00:35:21,839 --> 00:35:25,680
as the arms we also have this vector

00:35:24,320 --> 00:35:29,280
length agnostic

00:35:25,680 --> 00:35:32,320
characteristic by which programs

00:35:29,280 --> 00:35:33,920
end up having negotiation phases

00:35:32,320 --> 00:35:35,040
discussion phase where the program

00:35:33,920 --> 00:35:38,079
requests

00:35:35,040 --> 00:35:38,800
to the architecture saying i would like

00:35:38,079 --> 00:35:41,520
to use

00:35:38,800 --> 00:35:43,200
this operation this large the

00:35:41,520 --> 00:35:45,599
architecture

00:35:43,200 --> 00:35:46,320
comes back saying sorry you have to do

00:35:45,599 --> 00:35:49,119
it only

00:35:46,320 --> 00:35:49,839
that large and the application adapt to

00:35:49,119 --> 00:35:52,240
that

00:35:49,839 --> 00:35:53,359
so the vector length is requested from

00:35:52,240 --> 00:35:54,960
the architecture

00:35:53,359 --> 00:35:56,880
is notified to the application and the

00:35:54,960 --> 00:35:59,520
application adapts to that

00:35:56,880 --> 00:36:00,240
this is a malleability which i believe

00:35:59,520 --> 00:36:01,920
is

00:36:00,240 --> 00:36:04,320
is going to be very important in the

00:36:01,920 --> 00:36:06,720
future adapting all levels

00:36:04,320 --> 00:36:08,640
to the levels below them and trying to

00:36:06,720 --> 00:36:10,480
coordinate

00:36:08,640 --> 00:36:12,480
the scheduling decisions that are done

00:36:10,480 --> 00:36:14,160
at each of those levels this is

00:36:12,480 --> 00:36:16,640
i think this is going to be very very

00:36:14,160 --> 00:36:20,480
important in the future

00:36:16,640 --> 00:36:24,720
and the fourth uh characteristic is

00:36:20,480 --> 00:36:28,160
the need to homogenize heterogeneity

00:36:24,720 --> 00:36:30,160
the need to hide from the programmer the

00:36:28,160 --> 00:36:32,560
fact that maybe underneath

00:36:30,160 --> 00:36:34,800
the the resources might be of different

00:36:32,560 --> 00:36:38,079
characteristics different performances

00:36:34,800 --> 00:36:39,440
different isas different functionalities

00:36:38,079 --> 00:36:42,960
or access to

00:36:39,440 --> 00:36:45,359
probably not coherent memories

00:36:42,960 --> 00:36:48,000
the idea that we have here is we are

00:36:45,359 --> 00:36:51,200
relying on openmp but in openmp use

00:36:48,000 --> 00:36:53,200
in kind of a in a particular way with

00:36:51,200 --> 00:36:55,040
not not actually using the openmp

00:36:53,200 --> 00:36:55,599
accelerator directives but only the

00:36:55,040 --> 00:36:58,720
target

00:36:55,599 --> 00:37:00,640
for offloading maybe to a device or from

00:36:58,720 --> 00:37:02,160
from the memory of the arms to the

00:37:00,640 --> 00:37:05,200
memory to the

00:37:02,160 --> 00:37:08,560
to the um race course

00:37:05,200 --> 00:37:10,560
but not in terms of

00:37:08,560 --> 00:37:12,720
changing the way you specify the

00:37:10,560 --> 00:37:14,400
computations from the outer levels to

00:37:12,720 --> 00:37:17,359
the inner levels using

00:37:14,400 --> 00:37:19,599
same kind of nested task parallelism we

00:37:17,359 --> 00:37:22,640
do believe that this is going to provide

00:37:19,599 --> 00:37:24,400
a very very homogeneous view of the of

00:37:22,640 --> 00:37:26,400
the architecture which will be

00:37:24,400 --> 00:37:27,920
highly beneficial for the productivity

00:37:26,400 --> 00:37:30,720
of programmers

00:37:27,920 --> 00:37:32,400
and in reality even if the the vector

00:37:30,720 --> 00:37:34,000
length agnostic characteristic that i

00:37:32,400 --> 00:37:36,560
mentioned before is just

00:37:34,000 --> 00:37:38,800
a way of actually also getting

00:37:36,560 --> 00:37:40,400
homogenizing allowing for homogenizing

00:37:38,800 --> 00:37:42,480
heterogeneity one graph

00:37:40,400 --> 00:37:43,920
one can have architectures were

00:37:42,480 --> 00:37:47,200
heterogeneous scores

00:37:43,920 --> 00:37:49,040
big little kind of things and still the

00:37:47,200 --> 00:37:50,400
source could be the same the circle

00:37:49,040 --> 00:37:51,839
being able to adapt

00:37:50,400 --> 00:37:54,000
and you could even think of you know

00:37:51,839 --> 00:37:56,000
dynamically shifting between

00:37:54,000 --> 00:37:57,359
big little things so i we believe this

00:37:56,000 --> 00:38:00,640
is going to happen

00:37:57,359 --> 00:38:01,119
to open a lot of possibilities that will

00:38:00,640 --> 00:38:04,400
allow

00:38:01,119 --> 00:38:07,040
future architectures to be really tuned

00:38:04,400 --> 00:38:09,359
and optimized dynamically to the dynamic

00:38:07,040 --> 00:38:11,839
situations and applications of spawning

00:38:09,359 --> 00:38:15,119
accordingly

00:38:11,839 --> 00:38:18,560
what is our current situation today

00:38:15,119 --> 00:38:22,079
we have the design of the

00:38:18,560 --> 00:38:24,079
impact style via pack accelerator tile

00:38:22,079 --> 00:38:25,680
we are going to do it we are going to do

00:38:24,079 --> 00:38:28,480
a tape out but the beginning of next

00:38:25,680 --> 00:38:31,359
year a tape out on 22 nanometers

00:38:28,480 --> 00:38:32,480
to experiment on and and do the first

00:38:31,359 --> 00:38:35,920
demonstrations of the

00:38:32,480 --> 00:38:37,520
of the idea on real silicon we do have a

00:38:35,920 --> 00:38:40,000
compiler which

00:38:37,520 --> 00:38:41,440
does handle intrinsics for the risk five

00:38:40,000 --> 00:38:44,839
vector isa

00:38:41,440 --> 00:38:46,320
does also automatic parallelization so

00:38:44,839 --> 00:38:48,160
that

00:38:46,320 --> 00:38:49,839
really this is the actual way that will

00:38:48,160 --> 00:38:51,359
be proposed and will be used by

00:38:49,839 --> 00:38:54,480
programmers

00:38:51,359 --> 00:38:56,079
and and will reduce a lot the complexity

00:38:54,480 --> 00:38:59,119
on the cost of using

00:38:56,079 --> 00:39:00,640
vector instructions

00:38:59,119 --> 00:39:02,960
what else do we have we have an

00:39:00,640 --> 00:39:04,560
emulation platform an analysis platform

00:39:02,960 --> 00:39:07,680
which lets us run this

00:39:04,560 --> 00:39:10,640
compiler generated vector codes

00:39:07,680 --> 00:39:12,480
run them on an emulator generate micro

00:39:10,640 --> 00:39:15,200
also instruction level traces of the

00:39:12,480 --> 00:39:17,359
behavior of the of the program and being

00:39:15,200 --> 00:39:21,040
able to analyze those instructions

00:39:17,359 --> 00:39:23,839
level traces directly raw traces

00:39:21,040 --> 00:39:25,280
or even after passing through tasks

00:39:23,839 --> 00:39:26,240
simulations through simulation

00:39:25,280 --> 00:39:28,800
environments

00:39:26,240 --> 00:39:29,599
which kind of reveal the introduced

00:39:28,800 --> 00:39:32,800
timing

00:39:29,599 --> 00:39:33,680
course timing factors in in the traces

00:39:32,800 --> 00:39:35,440
depending on

00:39:33,680 --> 00:39:37,359
on the architectural implementation

00:39:35,440 --> 00:39:39,200
characteristics

00:39:37,359 --> 00:39:41,040
these things are going to let us to do

00:39:39,200 --> 00:39:42,960
real co-design of

00:39:41,040 --> 00:39:44,880
and and try to improve the hardware

00:39:42,960 --> 00:39:47,280
design of the system

00:39:44,880 --> 00:39:48,480
but we as i mentioned we are also going

00:39:47,280 --> 00:39:51,520
to have we also have in the

00:39:48,480 --> 00:39:53,520
heterogeneous arm and risk 5 cores

00:39:51,520 --> 00:39:56,079
how do we develop system software for

00:39:53,520 --> 00:39:58,560
that we have fpgas with

00:39:56,079 --> 00:40:00,720
arma hard cores and risk 5 cores

00:39:58,560 --> 00:40:03,200
implemented on the fpga logic

00:40:00,720 --> 00:40:05,280
and we're actually today we're actually

00:40:03,200 --> 00:40:06,640
booting linux from the outside putting

00:40:05,280 --> 00:40:09,839
linux on the right side

00:40:06,640 --> 00:40:10,480
and actually allowing for mpi openmp

00:40:09,839 --> 00:40:12,720
applications

00:40:10,480 --> 00:40:14,880
started on their site to really offload

00:40:12,720 --> 00:40:18,240
computation to the reside

00:40:14,880 --> 00:40:19,440
and and and and even from the reside

00:40:18,240 --> 00:40:22,640
being able to

00:40:19,440 --> 00:40:23,599
reverse of load io functionalities for

00:40:22,640 --> 00:40:25,920
example to their

00:40:23,599 --> 00:40:27,359
site so this is a platform which is

00:40:25,920 --> 00:40:30,079
going to allow us to

00:40:27,359 --> 00:40:32,160
to do the the the design of the

00:40:30,079 --> 00:40:35,280
operating system parts and then

00:40:32,160 --> 00:40:38,400
we will be make available uh

00:40:35,280 --> 00:40:41,680
boards that will implement on fpgas

00:40:38,400 --> 00:40:43,440
the the full impact architecture

00:40:41,680 --> 00:40:45,680
a few course of course because of the

00:40:43,440 --> 00:40:46,560
fba limitation capabilities but that

00:40:45,680 --> 00:40:49,599
will be good

00:40:46,560 --> 00:40:51,520
software development vehicles

00:40:49,599 --> 00:40:53,119
how do i want to complete include i

00:40:51,520 --> 00:40:56,480
would like to kind of

00:40:53,119 --> 00:40:58,720
look at the history of sagrada familia

00:40:56,480 --> 00:41:01,839
which public donation at some point in

00:40:58,720 --> 00:41:04,640
time allowed for it to raise

00:41:01,839 --> 00:41:05,200
four towers up to the top or everything

00:41:04,640 --> 00:41:08,560
up to

00:41:05,200 --> 00:41:10,880
four or five meters the choice was to

00:41:08,560 --> 00:41:12,960
raise only four towers up to the top

00:41:10,880 --> 00:41:14,720
because that allowed

00:41:12,960 --> 00:41:16,000
people to see that there was something

00:41:14,720 --> 00:41:19,440
probably special on

00:41:16,000 --> 00:41:20,000
on that building and a lot for for the

00:41:19,440 --> 00:41:22,319
support

00:41:20,000 --> 00:41:23,359
and the interest to continue on that we

00:41:22,319 --> 00:41:25,920
hope

00:41:23,359 --> 00:41:26,960
to do something similar with this

00:41:25,920 --> 00:41:29,920
initial design

00:41:26,960 --> 00:41:31,440
test chip on the of the impact processor

00:41:29,920 --> 00:41:33,359
and we hope to

00:41:31,440 --> 00:41:35,119
demonstrate the potential interest and

00:41:33,359 --> 00:41:36,960
the real interest for hpc

00:41:35,119 --> 00:41:38,240
as well as for other embedded

00:41:36,960 --> 00:41:41,760
applications

00:41:38,240 --> 00:41:42,800
of the loan vectors on on risk 5

00:41:41,760 --> 00:41:45,280
architecture and

00:41:42,800 --> 00:41:47,119
open software and hardware thank you

00:41:45,280 --> 00:41:50,160
very much

00:41:47,119 --> 00:41:53,280
thank you professor lavarta

00:41:50,160 --> 00:41:54,880
our next speaker sachiko muto is the

00:41:53,280 --> 00:41:58,160
chief executive officer

00:41:54,880 --> 00:42:00,560
of open forum europe a brussels-based

00:41:58,160 --> 00:42:01,200
think tank which explains the merits of

00:42:00,560 --> 00:42:03,119
openness

00:42:01,200 --> 00:42:05,359
and computing to policymakers and

00:42:03,119 --> 00:42:08,319
communities across europe

00:42:05,359 --> 00:42:10,800
in a world of ubiquitous open source

00:42:08,319 --> 00:42:13,119
unstable geopolitics

00:42:10,800 --> 00:42:14,160
and with an eu looking to regulate

00:42:13,119 --> 00:42:16,720
digital markets

00:42:14,160 --> 00:42:18,079
there are new opportunities and risks

00:42:16,720 --> 00:42:20,960
for open source across

00:42:18,079 --> 00:42:21,520
europe sachiko will share how open

00:42:20,960 --> 00:42:23,440
source

00:42:21,520 --> 00:42:25,839
can help solve europe's strategic

00:42:23,440 --> 00:42:30,980
challenges

00:42:25,839 --> 00:42:35,179
please welcome sachiko muto

00:42:30,980 --> 00:42:35,179
[Music]

00:42:38,480 --> 00:42:42,960
hi everyone i'm really pleased to have

00:42:41,520 --> 00:42:45,760
this opportunity to speak

00:42:42,960 --> 00:42:46,720
at the open source summit europe many of

00:42:45,760 --> 00:42:48,640
you are

00:42:46,720 --> 00:42:49,760
old friends of open forum europe and i

00:42:48,640 --> 00:42:52,640
have known you

00:42:49,760 --> 00:42:53,440
for years yet i believe this is the

00:42:52,640 --> 00:42:55,520
first time

00:42:53,440 --> 00:42:56,640
that i'm ever presenting at a linux

00:42:55,520 --> 00:43:00,319
foundation event so

00:42:56,640 --> 00:43:03,040
really happy to to be here with you

00:43:00,319 --> 00:43:04,800
being here really represents a conscious

00:43:03,040 --> 00:43:06,319
strategic shift

00:43:04,800 --> 00:43:08,240
in our organization and the way we

00:43:06,319 --> 00:43:10,079
communicate

00:43:08,240 --> 00:43:11,359
as the leading think tank promoting

00:43:10,079 --> 00:43:14,160
openness in i.t

00:43:11,359 --> 00:43:15,040
in brussels we've been talking to policy

00:43:14,160 --> 00:43:18,240
makers for

00:43:15,040 --> 00:43:20,000
for over 15 years trying to convince

00:43:18,240 --> 00:43:23,680
them to take open source

00:43:20,000 --> 00:43:24,240
seriously but today i'm here to make the

00:43:23,680 --> 00:43:26,640
case

00:43:24,240 --> 00:43:28,240
to you rather that it's it's time for

00:43:26,640 --> 00:43:31,280
the open source community to

00:43:28,240 --> 00:43:34,880
to take public policy more seriously

00:43:31,280 --> 00:43:38,400
um and argue that uh the time to do so

00:43:34,880 --> 00:43:41,280
is now um but first uh perhaps you'll

00:43:38,400 --> 00:43:43,839
allow me to indulge in a personal story

00:43:41,280 --> 00:43:46,800
to illustrate how far we've come also

00:43:43,839 --> 00:43:49,040
with open source in brussels

00:43:46,800 --> 00:43:51,040
12 years ago i had just started working

00:43:49,040 --> 00:43:53,520
with open firm europe

00:43:51,040 --> 00:43:54,079
and with some colleagues i had

00:43:53,520 --> 00:43:57,280
registered

00:43:54,079 --> 00:43:59,680
to participate in an event organized by

00:43:57,280 --> 00:44:00,640
by the european commission on

00:43:59,680 --> 00:44:04,000
standardization

00:44:00,640 --> 00:44:06,480
i believe um and we're told uh

00:44:04,000 --> 00:44:08,880
informally that the organizers had asked

00:44:06,480 --> 00:44:10,880
for extra security uh because the open

00:44:08,880 --> 00:44:13,839
source people were attending

00:44:10,880 --> 00:44:14,160
and we were seen as as dangerous first

00:44:13,839 --> 00:44:17,839
and

00:44:14,160 --> 00:44:20,800
probably last for for me personally

00:44:17,839 --> 00:44:22,640
anyway fast forward to last week and the

00:44:20,800 --> 00:44:25,599
commission has just published

00:44:22,640 --> 00:44:26,640
a communication that outlines its its

00:44:25,599 --> 00:44:29,920
new open source

00:44:26,640 --> 00:44:32,319
strategy it's a bold document that

00:44:29,920 --> 00:44:33,200
not only recognizes the role of open

00:44:32,319 --> 00:44:36,160
source

00:44:33,200 --> 00:44:37,440
in underpinning most of the technology

00:44:36,160 --> 00:44:40,560
uh today

00:44:37,440 --> 00:44:42,480
but also fully embracing it and and

00:44:40,560 --> 00:44:43,760
and uh spells out the role of open

00:44:42,480 --> 00:44:46,880
source and openness

00:44:43,760 --> 00:44:47,680
in achieving uh the twin transformations

00:44:46,880 --> 00:44:50,880
towards

00:44:47,680 --> 00:44:52,960
a green and digital europe so i

00:44:50,880 --> 00:44:55,200
urge you all to read it because it's

00:44:52,960 --> 00:44:58,240
really a bold uh document

00:44:55,200 --> 00:45:00,640
um and but

00:44:58,240 --> 00:45:01,280
where does this leave us uh the open

00:45:00,640 --> 00:45:04,160
source

00:45:01,280 --> 00:45:06,480
development model now runs the show we

00:45:04,160 --> 00:45:10,720
have a european commission that's

00:45:06,480 --> 00:45:12,960
committed to to the openness of

00:45:10,720 --> 00:45:15,839
the importance of open source for

00:45:12,960 --> 00:45:18,160
europe's digital future

00:45:15,839 --> 00:45:19,520
is the job done can we can we all go

00:45:18,160 --> 00:45:22,319
home

00:45:19,520 --> 00:45:23,920
no it's um it's it's really now that

00:45:22,319 --> 00:45:26,960
open source is is big

00:45:23,920 --> 00:45:28,240
um it's everywhere that that the real

00:45:26,960 --> 00:45:31,599
political challenges

00:45:28,240 --> 00:45:34,800
emerge and um it's when your code

00:45:31,599 --> 00:45:37,280
is fundamental to um to the technologies

00:45:34,800 --> 00:45:39,760
that build our societies that you have

00:45:37,280 --> 00:45:42,240
new responsibilities um to help solve

00:45:39,760 --> 00:45:45,520
the large challenges that society faces

00:45:42,240 --> 00:45:49,119
and policymakers are expecting you uh

00:45:45,520 --> 00:45:51,599
to step up and i prefer to put it like

00:45:49,119 --> 00:45:54,079
this in a positive call for action

00:45:51,599 --> 00:45:55,760
but actually change is coming whether

00:45:54,079 --> 00:45:57,520
you like it or not and

00:45:55,760 --> 00:46:01,280
and really whether you get engaged or

00:45:57,520 --> 00:46:04,400
not um governments everywhere and

00:46:01,280 --> 00:46:05,760
in europe um are are stepping in to

00:46:04,400 --> 00:46:07,839
regulate the tech space

00:46:05,760 --> 00:46:09,920
um in the coming years and they have

00:46:07,839 --> 00:46:11,760
reason to um

00:46:09,920 --> 00:46:14,000
in brussels right now big pieces of

00:46:11,760 --> 00:46:15,359
legislation are are being prepared in

00:46:14,000 --> 00:46:19,040
order to hold

00:46:15,359 --> 00:46:22,160
platforms responsible to regulate ai

00:46:19,040 --> 00:46:24,560
uh and how data is handled and even to

00:46:22,160 --> 00:46:27,280
create a new industrial strategy

00:46:24,560 --> 00:46:28,880
based on the digital transformation and

00:46:27,280 --> 00:46:32,240
that's just to name a few

00:46:28,880 --> 00:46:36,720
and really all these policy efforts will

00:46:32,240 --> 00:46:38,800
impact open source in different ways

00:46:36,720 --> 00:46:39,839
open source may not be the direct target

00:46:38,800 --> 00:46:43,440
for regulation

00:46:39,839 --> 00:46:46,640
but by being everywhere by winning

00:46:43,440 --> 00:46:48,960
as open source has done

00:46:46,640 --> 00:46:49,920
it will inadvertently at least get

00:46:48,960 --> 00:46:52,319
affected

00:46:49,920 --> 00:46:52,319
and so

00:46:53,040 --> 00:46:56,480
these efforts um where do they come from

00:46:55,440 --> 00:46:59,280
um

00:46:56,480 --> 00:47:00,160
why why is this happening now well i

00:46:59,280 --> 00:47:02,480
think that in

00:47:00,160 --> 00:47:03,359
in large part they stem from from an

00:47:02,480 --> 00:47:06,960
increased

00:47:03,359 --> 00:47:09,599
geopolitical tension there

00:47:06,960 --> 00:47:10,720
there is a sense of urgency coming from

00:47:09,599 --> 00:47:13,040
the impression that

00:47:10,720 --> 00:47:14,800
europe is not autonomous it's not

00:47:13,040 --> 00:47:18,000
resilient or as some

00:47:14,800 --> 00:47:19,040
like to put it it's not sovereign and

00:47:18,000 --> 00:47:21,599
indeed

00:47:19,040 --> 00:47:22,640
uh this concept of of digital

00:47:21,599 --> 00:47:24,880
sovereignty is

00:47:22,640 --> 00:47:26,480
is really being heard a lot in the tech

00:47:24,880 --> 00:47:29,680
policy discussions

00:47:26,480 --> 00:47:33,200
right now um and is seen as as a as a

00:47:29,680 --> 00:47:35,440
as an impetus for action um it's not

00:47:33,200 --> 00:47:36,960
it's not new uh europe's autonomy has

00:47:35,440 --> 00:47:40,559
been a political concern

00:47:36,960 --> 00:47:43,040
for for decades but um the way

00:47:40,559 --> 00:47:43,920
it's it's currently defined in the

00:47:43,040 --> 00:47:47,599
context of

00:47:43,920 --> 00:47:50,800
of eu policy i think was introduced by

00:47:47,599 --> 00:47:54,720
uh by emmanuel macron in his serb

00:47:50,800 --> 00:47:56,480
sorbonne speech in in september 2017 and

00:47:54,720 --> 00:47:59,040
has since

00:47:56,480 --> 00:47:59,680
come to underpin a lot of uh the digital

00:47:59,040 --> 00:48:02,000
policy

00:47:59,680 --> 00:48:03,440
discussions that are going on right now

00:48:02,000 --> 00:48:05,839
um but if we go

00:48:03,440 --> 00:48:07,920
if we go beyond this the buzzword the

00:48:05,839 --> 00:48:09,040
current buzzword what does this digital

00:48:07,920 --> 00:48:12,240
sovereignty

00:48:09,040 --> 00:48:14,559
mean in practice and and and why

00:48:12,240 --> 00:48:16,160
is this both a challenge and an

00:48:14,559 --> 00:48:20,160
opportunity for the open source

00:48:16,160 --> 00:48:22,160
uh community um i believe that

00:48:20,160 --> 00:48:23,280
that it's it comes down to a sense of

00:48:22,160 --> 00:48:26,720
control

00:48:23,280 --> 00:48:29,760
uh control of our infrastructure um

00:48:26,720 --> 00:48:30,800
especially the parts that are considered

00:48:29,760 --> 00:48:33,520
um

00:48:30,800 --> 00:48:34,640
as critical to core functions of our

00:48:33,520 --> 00:48:37,599
society

00:48:34,640 --> 00:48:38,160
and and as we know open source is there

00:48:37,599 --> 00:48:41,760
running

00:48:38,160 --> 00:48:45,359
large parts of it and

00:48:41,760 --> 00:48:47,680
this sense of of control in my view

00:48:45,359 --> 00:48:48,880
there are there are two paths uh to

00:48:47,680 --> 00:48:51,280
achieving it

00:48:48,880 --> 00:48:53,440
the first is one where we make our world

00:48:51,280 --> 00:48:54,480
smaller in order to feel that we are in

00:48:53,440 --> 00:48:56,960
charge

00:48:54,480 --> 00:48:57,760
for example uh develop european

00:48:56,960 --> 00:49:00,559
standards

00:48:57,760 --> 00:49:02,800
with only european stakeholders or

00:49:00,559 --> 00:49:06,319
buying only from european

00:49:02,800 --> 00:49:09,920
based companies the second however

00:49:06,319 --> 00:49:11,440
is control through openness uh

00:49:09,920 --> 00:49:13,760
looking at it from a software

00:49:11,440 --> 00:49:17,119
perspective this means having

00:49:13,760 --> 00:49:18,720
access to to the code being able to

00:49:17,119 --> 00:49:22,720
choose

00:49:18,720 --> 00:49:25,839
and change vendors avoiding lock-in

00:49:22,720 --> 00:49:28,839
you know all of this and

00:49:25,839 --> 00:49:30,079
if we bring that concept to the

00:49:28,839 --> 00:49:32,880
geopolitical

00:49:30,079 --> 00:49:35,280
geopolitical level you can see that the

00:49:32,880 --> 00:49:38,800
same messages of control

00:49:35,280 --> 00:49:42,800
through openness have the potential

00:49:38,800 --> 00:49:45,920
to resonate well in an unstable world um

00:49:42,800 --> 00:49:47,760
if politicians choose the the first path

00:49:45,920 --> 00:49:50,160
however and there is risk of this

00:49:47,760 --> 00:49:51,440
i i'm convinced that we might get a

00:49:50,160 --> 00:49:54,800
sense of control

00:49:51,440 --> 00:49:58,000
not actual control and innovation

00:49:54,800 --> 00:50:00,640
and knowledge exchange um will suffer

00:49:58,000 --> 00:50:02,319
and by extension open source in europe

00:50:00,640 --> 00:50:05,359
will suffer

00:50:02,319 --> 00:50:07,200
so looking

00:50:05,359 --> 00:50:09,680
at open source from a geopolitical

00:50:07,200 --> 00:50:13,359
perspective i see that we can

00:50:09,680 --> 00:50:17,359
help solve this challenge of control

00:50:13,359 --> 00:50:17,359
without making our world smaller

00:50:17,839 --> 00:50:23,040
so what is it that we're talking about

00:50:21,440 --> 00:50:24,720
when we are

00:50:23,040 --> 00:50:27,040
when open source when we say that open

00:50:24,720 --> 00:50:27,359
source can help us get more control and

00:50:27,040 --> 00:50:30,240
why

00:50:27,359 --> 00:50:32,480
is it so crucial now uh it's worth

00:50:30,240 --> 00:50:35,520
repeating consider now

00:50:32,480 --> 00:50:36,319
the old story of lock-in of our desktop

00:50:35,520 --> 00:50:39,280
environments

00:50:36,319 --> 00:50:40,640
um that was the big fight that's the

00:50:39,280 --> 00:50:44,079
time i got contr

00:50:40,640 --> 00:50:46,240
got involved first in open source um

00:50:44,079 --> 00:50:47,200
this challenge of lock-in when we are uh

00:50:46,240 --> 00:50:50,160
digitizing

00:50:47,200 --> 00:50:51,280
all aspects of society uh beating

00:50:50,160 --> 00:50:54,640
healthcare

00:50:51,280 --> 00:50:57,040
agriculture smart cities

00:50:54,640 --> 00:50:58,720
how can we help digitize our societies

00:50:57,040 --> 00:51:00,960
in a global world

00:50:58,720 --> 00:51:02,960
at the technological forefront without

00:51:00,960 --> 00:51:05,680
losing control

00:51:02,960 --> 00:51:08,079
i think the open source model and open

00:51:05,680 --> 00:51:10,880
technologies have a major role

00:51:08,079 --> 00:51:10,880
to play here

00:51:11,760 --> 00:51:16,079
avoiding lock-in uh the classic advocacy

00:51:14,800 --> 00:51:19,599
fight of open source

00:51:16,079 --> 00:51:22,400
is now geopolitical

00:51:19,599 --> 00:51:23,440
this challenge i think is of way greater

00:51:22,400 --> 00:51:25,920
magnitude

00:51:23,440 --> 00:51:26,640
than those of earlier earlier political

00:51:25,920 --> 00:51:31,280
fights

00:51:26,640 --> 00:51:31,280
open source advocates have engaged in

00:51:31,599 --> 00:51:38,000
and i include myself there so

00:51:35,040 --> 00:51:39,599
where are we um open source might have

00:51:38,000 --> 00:51:42,160
won in the marketplace

00:51:39,599 --> 00:51:42,880
but in order to step up and meet today's

00:51:42,160 --> 00:51:45,760
challenges

00:51:42,880 --> 00:51:46,800
we have to sort out some of our limiting

00:51:45,760 --> 00:51:51,359
beliefs

00:51:46,800 --> 00:51:53,040
um the first is an internal belief

00:51:51,359 --> 00:51:54,480
i believe among members of the open

00:51:53,040 --> 00:51:57,520
source community and

00:51:54,480 --> 00:52:00,480
again i include myself here uh

00:51:57,520 --> 00:52:01,440
there is still a notion of being the

00:52:00,480 --> 00:52:04,559
challengers the

00:52:01,440 --> 00:52:07,440
underdog uh the disruptors well

00:52:04,559 --> 00:52:09,040
open source is now everywhere including

00:52:07,440 --> 00:52:12,240
in public services

00:52:09,040 --> 00:52:15,200
underpinning uh e-government services

00:52:12,240 --> 00:52:16,880
um with that comes challenges and

00:52:15,200 --> 00:52:19,440
responsibilities

00:52:16,880 --> 00:52:20,960
it means you are the establishment when

00:52:19,440 --> 00:52:22,240
you are big that's when you need to

00:52:20,960 --> 00:52:25,599
start talking

00:52:22,240 --> 00:52:29,119
uh to policy makers and to take policy

00:52:25,599 --> 00:52:31,520
making and regulation seriously

00:52:29,119 --> 00:52:34,640
and here paradoxically i think we are up

00:52:31,520 --> 00:52:37,440
against another limiting belief

00:52:34,640 --> 00:52:39,599
and notwithstanding the excellent open

00:52:37,440 --> 00:52:43,359
source strategy of the european

00:52:39,599 --> 00:52:46,160
uh commission uh let's keep in mind that

00:52:43,359 --> 00:52:46,800
there are i would say three general

00:52:46,160 --> 00:52:48,800
groups

00:52:46,800 --> 00:52:50,720
among public officials when it comes to

00:52:48,800 --> 00:52:53,839
open source the first

00:52:50,720 --> 00:52:56,240
is uh sort of the open source believers

00:52:53,839 --> 00:52:57,119
they are excited about the possibilities

00:52:56,240 --> 00:53:00,319
uh

00:52:57,119 --> 00:53:03,200
um i outlined earlier then

00:53:00,319 --> 00:53:04,079
there is the old guard if i can call it

00:53:03,200 --> 00:53:05,920
that which

00:53:04,079 --> 00:53:08,559
is still strong that looks at open

00:53:05,920 --> 00:53:11,040
source with suspicion

00:53:08,559 --> 00:53:14,000
are concerned that it is not secure and

00:53:11,040 --> 00:53:16,079
just a cheaper alternative

00:53:14,000 --> 00:53:18,160
and finally we have really the biggest

00:53:16,079 --> 00:53:20,559
group those who

00:53:18,160 --> 00:53:22,400
never think about open source uh it's

00:53:20,559 --> 00:53:24,800
never been on their radar

00:53:22,400 --> 00:53:25,680
or maybe they have a general feeling

00:53:24,800 --> 00:53:29,520
that it has

00:53:25,680 --> 00:53:31,119
something to do with um with the hackers

00:53:29,520 --> 00:53:34,480
with hackers in basements

00:53:31,119 --> 00:53:36,800
nothing wrong with that um and so

00:53:34,480 --> 00:53:39,280
paradoxically i think we are everywhere

00:53:36,800 --> 00:53:41,119
and experts know this but the vast

00:53:39,280 --> 00:53:42,160
majority in the public sector are not

00:53:41,119 --> 00:53:45,760
aware

00:53:42,160 --> 00:53:49,200
they see open source as something niche

00:53:45,760 --> 00:53:51,839
at best i would say and uh

00:53:49,200 --> 00:53:53,920
important i think to note is that not

00:53:51,839 --> 00:53:57,040
being thought of

00:53:53,920 --> 00:53:58,880
is sometimes something good but when

00:53:57,040 --> 00:54:00,319
governments look to regulate the tech

00:53:58,880 --> 00:54:02,800
space being

00:54:00,319 --> 00:54:04,960
unknown can be dangerous or at least

00:54:02,800 --> 00:54:06,400
have serious consequences

00:54:04,960 --> 00:54:08,000
i'll tell you another short story to

00:54:06,400 --> 00:54:11,200
illustrate this um

00:54:08,000 --> 00:54:14,480
a couple of years ago um the commission

00:54:11,200 --> 00:54:17,520
published a communication on on

00:54:14,480 --> 00:54:20,400
standards and and patents and

00:54:17,520 --> 00:54:21,520
when we asked or rather complained about

00:54:20,400 --> 00:54:22,960
the fact that

00:54:21,520 --> 00:54:24,800
there was no mention of royalty-free

00:54:22,960 --> 00:54:26,800
licensing no

00:54:24,800 --> 00:54:28,640
mention of open source and how it's

00:54:26,800 --> 00:54:30,319
impacted

00:54:28,640 --> 00:54:32,240
the answer from the european commission

00:54:30,319 --> 00:54:35,280
was simply

00:54:32,240 --> 00:54:35,920
not a single open source company had

00:54:35,280 --> 00:54:39,359
come to them

00:54:35,920 --> 00:54:42,400
and asked to have a conversation or

00:54:39,359 --> 00:54:46,880
filled out the consultation document

00:54:42,400 --> 00:54:50,319
and so think about this

00:54:46,880 --> 00:54:52,160
not a single party had come not a single

00:54:50,319 --> 00:54:52,480
stakeholder i come to talk to them about

00:54:52,160 --> 00:54:55,359
this

00:54:52,480 --> 00:54:56,160
and so being part of the political

00:54:55,359 --> 00:54:58,079
discussion

00:54:56,160 --> 00:54:59,280
um had implications then and i think

00:54:58,079 --> 00:55:02,400
will have serious

00:54:59,280 --> 00:55:05,680
implications in the future if we

00:55:02,400 --> 00:55:09,440
don't engage but uh

00:55:05,680 --> 00:55:12,720
you know it's not all doom and gloom

00:55:09,440 --> 00:55:15,599
um i think today we have

00:55:12,720 --> 00:55:15,920
uh actually a real opportunity to engage

00:55:15,599 --> 00:55:17,680
and

00:55:15,920 --> 00:55:20,000
to be proactive when it comes to

00:55:17,680 --> 00:55:22,880
engaging with with policy makers

00:55:20,000 --> 00:55:24,000
and uh last week as i mentioned um the

00:55:22,880 --> 00:55:27,200
european commission

00:55:24,000 --> 00:55:31,040
published this this document um

00:55:27,200 --> 00:55:34,720
its latest open source strategy um

00:55:31,040 --> 00:55:37,119
a very ambitious document and

00:55:34,720 --> 00:55:38,559
stating that open source plays an

00:55:37,119 --> 00:55:42,400
important role

00:55:38,559 --> 00:55:45,920
in the digital autonomy of europe

00:55:42,400 --> 00:55:49,119
saying also that open source can

00:55:45,920 --> 00:55:51,839
can give europe a chance to

00:55:49,119 --> 00:55:53,359
create and maintain its own independent

00:55:51,839 --> 00:55:57,440
digital approach

00:55:53,359 --> 00:56:01,280
and and stay in control of its processes

00:55:57,440 --> 00:56:03,599
its information and its technology so

00:56:01,280 --> 00:56:04,960
what does what does the commission want

00:56:03,599 --> 00:56:06,559
uh with these uh

00:56:04,960 --> 00:56:08,079
with these efforts and these statements

00:56:06,559 --> 00:56:11,520
and i believe

00:56:08,079 --> 00:56:14,799
we we were told um openly what they want

00:56:11,520 --> 00:56:15,359
um by pierce o'donoghue a director at dg

00:56:14,799 --> 00:56:18,160
connect

00:56:15,359 --> 00:56:19,119
he spoke at oafe's open source policy

00:56:18,160 --> 00:56:22,160
summit

00:56:19,119 --> 00:56:22,160
in february this year

00:56:24,000 --> 00:56:28,319
the commission challenges open source as

00:56:26,400 --> 00:56:31,280
a community of stakeholders

00:56:28,319 --> 00:56:32,640
to show them what open source can do for

00:56:31,280 --> 00:56:35,839
society

00:56:32,640 --> 00:56:39,280
and for europe and um

00:56:35,839 --> 00:56:40,880
they are reaching out to to you to us

00:56:39,280 --> 00:56:43,599
the open source community

00:56:40,880 --> 00:56:44,480
to engage um they have already taken the

00:56:43,599 --> 00:56:47,760
first step

00:56:44,480 --> 00:56:48,799
and really now it's time for for us to

00:56:47,760 --> 00:56:52,480
level up

00:56:48,799 --> 00:56:56,000
um yeah um

00:56:52,480 --> 00:56:58,640
and so where to start um

00:56:56,000 --> 00:57:00,319
right now there is um the easiest way

00:56:58,640 --> 00:57:04,160
for you to engage i would say

00:57:00,319 --> 00:57:07,839
uh in the policy conversation uh

00:57:04,160 --> 00:57:10,720
is to take part in in this

00:57:07,839 --> 00:57:11,040
in this european commission's study on

00:57:10,720 --> 00:57:13,680
uh

00:57:11,040 --> 00:57:16,160
the impact of open source software and

00:57:13,680 --> 00:57:16,160
hardware

00:57:16,720 --> 00:57:21,040
it's actually being carried out by open

00:57:20,079 --> 00:57:24,559
form europe

00:57:21,040 --> 00:57:27,760
together with fraunhofer this study

00:57:24,559 --> 00:57:30,799
is meant to guide open source policy

00:57:27,760 --> 00:57:34,559
for the next 10 years i believe

00:57:30,799 --> 00:57:37,599
it will go beyond policy statements and

00:57:34,559 --> 00:57:40,480
and strategy documents and will impact

00:57:37,599 --> 00:57:42,559
funding investments and procurement so

00:57:40,480 --> 00:57:45,599
it's really important

00:57:42,559 --> 00:57:48,640
we are conducting a big survey

00:57:45,599 --> 00:57:52,000
um as part of this study of open source

00:57:48,640 --> 00:57:55,040
companies projects and organizations

00:57:52,000 --> 00:57:56,880
with the name of you know to capture uh

00:57:55,040 --> 00:58:00,000
the real face of open source

00:57:56,880 --> 00:58:03,119
uh as it is today within companies and

00:58:00,000 --> 00:58:04,000
both um small one-person ventures and

00:58:03,119 --> 00:58:07,599
tech giants

00:58:04,000 --> 00:58:11,040
um we want to hear from from all of you

00:58:07,599 --> 00:58:13,920
so go to our website or the commission's

00:58:11,040 --> 00:58:18,640
website and you'll find the links

00:58:13,920 --> 00:58:20,319
um where to start if you run an open

00:58:18,640 --> 00:58:22,960
source business

00:58:20,319 --> 00:58:24,000
there are many uh ways that you can get

00:58:22,960 --> 00:58:26,960
involved

00:58:24,000 --> 00:58:27,599
and engaged as a stakeholder just just

00:58:26,960 --> 00:58:30,240
this week

00:58:27,599 --> 00:58:31,119
a european open source business

00:58:30,240 --> 00:58:33,680
association

00:58:31,119 --> 00:58:34,880
is formally launching in brussels it's

00:58:33,680 --> 00:58:37,839
called appel

00:58:34,880 --> 00:58:37,839
association

00:58:39,920 --> 00:58:43,359
it aims to be the voice of open source

00:58:42,319 --> 00:58:46,400
businesses

00:58:43,359 --> 00:58:48,240
vis-a-vis the european institutions i

00:58:46,400 --> 00:58:50,160
think it's a it's a milestone really for

00:58:48,240 --> 00:58:53,280
open source to be represented

00:58:50,160 --> 00:58:56,500
as a as a stakeholder in brussels

00:58:53,280 --> 00:58:57,680
um so if you um

00:58:56,500 --> 00:58:59,440
[Music]

00:58:57,680 --> 00:59:01,760
are you a supporting member of a

00:58:59,440 --> 00:59:04,720
national business association

00:59:01,760 --> 00:59:09,200
for open source um are you encouraging

00:59:04,720 --> 00:59:12,559
them to engage at the european level

00:59:09,200 --> 00:59:15,040
remember what i mentioned about the

00:59:12,559 --> 00:59:16,799
standards and patents communication a

00:59:15,040 --> 00:59:19,040
few years back

00:59:16,799 --> 00:59:21,520
there was no open source company that

00:59:19,040 --> 00:59:24,400
had spoken to the european commission

00:59:21,520 --> 00:59:25,599
and that's how you get inadvertently

00:59:24,400 --> 00:59:28,880
affected by

00:59:25,599 --> 00:59:32,160
by by policy today i think

00:59:28,880 --> 00:59:34,960
the situation has improved somewhat but

00:59:32,160 --> 00:59:35,760
the level of resources of the european

00:59:34,960 --> 00:59:38,640
open source

00:59:35,760 --> 00:59:40,480
business associations are nowhere near

00:59:38,640 --> 00:59:41,839
where they should be when taking their

00:59:40,480 --> 00:59:45,920
real world

00:59:41,839 --> 00:59:46,720
importance into account other industries

00:59:45,920 --> 00:59:50,880
put way

00:59:46,720 --> 00:59:53,280
more effort into european representation

00:59:50,880 --> 00:59:55,359
and you can tell yourself that you won

00:59:53,280 --> 00:59:57,359
it's the government's responsibility to

00:59:55,359 --> 00:59:58,319
understand the importance of open source

00:59:57,359 --> 01:00:00,000
and

00:59:58,319 --> 01:00:01,359
just sit back and wait for them to call

01:00:00,000 --> 01:00:04,480
us for our opinion but

01:00:01,359 --> 01:00:05,440
um you can also take responsibility for

01:00:04,480 --> 01:00:08,480
the situation

01:00:05,440 --> 01:00:12,839
and and start or start the conversation

01:00:08,480 --> 01:00:16,559
uh build build that bridge uh remember

01:00:12,839 --> 01:00:19,520
um open source the community that

01:00:16,559 --> 01:00:20,880
you're all part of has the capacity i

01:00:19,520 --> 01:00:23,599
think to help

01:00:20,880 --> 01:00:25,440
solve some of europe's large strategic

01:00:23,599 --> 01:00:28,720
challenges

01:00:25,440 --> 01:00:30,880
and it's not it's not only

01:00:28,720 --> 01:00:32,960
open source uh you know this is not

01:00:30,880 --> 01:00:34,079
unique to open source it usually takes a

01:00:32,960 --> 01:00:36,240
crisis

01:00:34,079 --> 01:00:39,040
or an immediate threat for for smaller

01:00:36,240 --> 01:00:42,160
industries to react to political risks

01:00:39,040 --> 01:00:45,040
or opportunities um you know

01:00:42,160 --> 01:00:45,440
the big ones are at the table already

01:00:45,040 --> 01:00:48,559
the

01:00:45,440 --> 01:00:51,440
the establishment is there um but

01:00:48,559 --> 01:00:53,760
open course is not small anymore uh it

01:00:51,440 --> 01:00:56,000
can sometimes look small in the eyes of

01:00:53,760 --> 01:00:57,440
the policy makers or look niche we have

01:00:56,000 --> 01:01:00,799
to step up

01:00:57,440 --> 01:01:01,680
and and and and improve the

01:01:00,799 --> 01:01:04,799
communication

01:01:01,680 --> 01:01:06,559
uh educate policy makers and that's why

01:01:04,799 --> 01:01:09,680
i'm now turning to you here

01:01:06,559 --> 01:01:10,000
at the open source summit europe join us

01:01:09,680 --> 01:01:13,359
in

01:01:10,000 --> 01:01:16,720
our conversation with policymakers um

01:01:13,359 --> 01:01:20,079
don't wait for an existential threat

01:01:16,720 --> 01:01:24,079
uh show policymakers how

01:01:20,079 --> 01:01:28,319
openness can solve their problems

01:01:24,079 --> 01:01:31,680
thank you and stay in touch

01:01:28,319 --> 01:01:35,280
thank you sachiko our final keynote

01:01:31,680 --> 01:01:36,480
dr alan friedman is director of cyber

01:01:35,280 --> 01:01:38,640
security initiatives

01:01:36,480 --> 01:01:40,319
at the national telecommunications and

01:01:38,640 --> 01:01:43,280
information administration

01:01:40,319 --> 01:01:44,240
in the u.s department of commerce there

01:01:43,280 --> 01:01:46,960
he coordinates

01:01:44,240 --> 01:01:48,400
ntia's multi-stakeholder process on

01:01:46,960 --> 01:01:50,880
cyber security

01:01:48,400 --> 01:01:52,160
focusing on addressing vulnerabilities

01:01:50,880 --> 01:01:55,359
in connected systems

01:01:52,160 --> 01:01:57,839
across the software world you know

01:01:55,359 --> 01:01:58,799
open source is such a critical part of

01:01:57,839 --> 01:02:01,920
the world's

01:01:58,799 --> 01:02:04,000
global software supply chain and today

01:02:01,920 --> 01:02:05,760
dr alan friedman is going to share the

01:02:04,000 --> 01:02:09,280
latest on supply chain

01:02:05,760 --> 01:02:11,300
security please welcome dr alan

01:02:09,280 --> 01:02:13,950
friedman

01:02:11,300 --> 01:02:17,280
[Applause]

01:02:13,950 --> 01:02:19,280
[Music]

01:02:17,280 --> 01:02:21,440
good afternoon hi my name is alan

01:02:19,280 --> 01:02:23,039
friedman i'm with ntia

01:02:21,440 --> 01:02:24,720
and i'm really honored to be here today

01:02:23,039 --> 01:02:25,760
uh to talk about something that's near

01:02:24,720 --> 01:02:26,880
and dear to my heart

01:02:25,760 --> 01:02:28,240
and something that we're thrilled to

01:02:26,880 --> 01:02:29,359
have partnership with a lot of folks in

01:02:28,240 --> 01:02:31,520
the open source community on

01:02:29,359 --> 01:02:33,200
which is the idea of software bill of

01:02:31,520 --> 01:02:34,480
materials or s-bom

01:02:33,200 --> 01:02:37,440
so for the next few minutes i'm going to

01:02:34,480 --> 01:02:39,039
try to walk through why we need it

01:02:37,440 --> 01:02:40,559
where we're trying to go as a community

01:02:39,039 --> 01:02:41,440
and ideally hopefully convince some of

01:02:40,559 --> 01:02:42,799
you that this is something that's

01:02:41,440 --> 01:02:43,599
important enough that maybe you'll get

01:02:42,799 --> 01:02:46,799
involved

01:02:43,599 --> 01:02:49,280
yourself so let me just take a moment

01:02:46,799 --> 01:02:50,240
to awkwardly try to set up the screen

01:02:49,280 --> 01:02:52,000
sharing

01:02:50,240 --> 01:02:53,599
and sorry it's not like we've been doing

01:02:52,000 --> 01:02:56,640
this for a few months

01:02:53,599 --> 01:02:58,480
so um what is the path

01:02:56,640 --> 01:02:59,760
towards a more transparent software

01:02:58,480 --> 01:03:01,520
world so first

01:02:59,760 --> 01:03:03,680
let's start with just something very

01:03:01,520 --> 01:03:06,960
basic like a car

01:03:03,680 --> 01:03:09,359
uh now this is a particularly nice car

01:03:06,960 --> 01:03:10,640
uh and it's got a lot of fun things

01:03:09,359 --> 01:03:12,720
about it but something that

01:03:10,640 --> 01:03:14,640
computer security expert and co-founder

01:03:12,720 --> 01:03:17,440
of the cyber independent testing lab

01:03:14,640 --> 01:03:19,119
mud noted a few years ago is that this

01:03:17,440 --> 01:03:20,079
brand new car at the time is pretty new

01:03:19,119 --> 01:03:23,200
car

01:03:20,079 --> 01:03:25,680
uh at the time came with limited

01:03:23,200 --> 01:03:26,319
netcat and lib peep now for those of you

01:03:25,680 --> 01:03:27,839
who are

01:03:26,319 --> 01:03:29,760
in the security research world or in the

01:03:27,839 --> 01:03:30,240
pen testing world may recognize some of

01:03:29,760 --> 01:03:32,079
these as

01:03:30,240 --> 01:03:34,240
very vulnerable libraries and common

01:03:32,079 --> 01:03:36,559
tools that are used to exploit systems

01:03:34,240 --> 01:03:38,160
so the punch line that mud set us up for

01:03:36,559 --> 01:03:41,839
is your brand new car

01:03:38,160 --> 01:03:44,240
essentially came pre-owned but

01:03:41,839 --> 01:03:45,280
there's something bigger about this

01:03:44,240 --> 01:03:48,160
other than saying hey

01:03:45,280 --> 01:03:49,039
what's in a device which is that when we

01:03:48,160 --> 01:03:50,880
do discover

01:03:49,039 --> 01:03:53,200
a new security risk or a new security

01:03:50,880 --> 01:03:53,200
flaw

01:03:53,280 --> 01:03:57,599
very few organizations whether they're

01:03:55,280 --> 01:03:59,920
organizations that help make software

01:03:57,599 --> 01:04:01,599
or that use software can quickly and

01:03:59,920 --> 01:04:03,200
easily identify

01:04:01,599 --> 01:04:05,599
if they're potentially at risk or

01:04:03,200 --> 01:04:07,599
putting their downstream users at risk

01:04:05,599 --> 01:04:09,039
and that's really a big part of what

01:04:07,599 --> 01:04:12,319
we're trying to do here today

01:04:09,039 --> 01:04:14,319
is to create greater transparency

01:04:12,319 --> 01:04:16,079
for both security as well as license

01:04:14,319 --> 01:04:18,160
management and efficacy

01:04:16,079 --> 01:04:19,839
to help folks better manage their

01:04:18,160 --> 01:04:21,440
software supply chain

01:04:19,839 --> 01:04:23,760
so what are we going to be talking about

01:04:21,440 --> 01:04:25,039
today uh i'm going to briefly walk

01:04:23,760 --> 01:04:25,920
through i think

01:04:25,039 --> 01:04:27,359
something that hopefully you'll find

01:04:25,920 --> 01:04:28,799
relevant which is just the general role

01:04:27,359 --> 01:04:30,000
that transparency plays in the

01:04:28,799 --> 01:04:31,760
marketplace today

01:04:30,000 --> 01:04:33,599
we're going to talk a little bit about

01:04:31,760 --> 01:04:36,640
why we're not doing this

01:04:33,599 --> 01:04:37,119
i'm going to talk some about how we've

01:04:36,640 --> 01:04:39,920
built

01:04:37,119 --> 01:04:40,559
this broad international multi-sector

01:04:39,920 --> 01:04:43,520
initiative

01:04:40,559 --> 01:04:45,280
to pull together experts in software

01:04:43,520 --> 01:04:46,640
from all corners of the world

01:04:45,280 --> 01:04:48,400
and then hopefully i'll be able to

01:04:46,640 --> 01:04:49,520
convince you a little bit to join this

01:04:48,400 --> 01:04:52,240
community

01:04:49,520 --> 01:04:52,880
so we're all kind of familiar with some

01:04:52,240 --> 01:04:53,920
of the things that are in the

01:04:52,880 --> 01:04:55,039
marketplace today to provide

01:04:53,920 --> 01:04:57,119
transparency

01:04:55,039 --> 01:04:58,319
for example we're all familiar with a

01:04:57,119 --> 01:05:01,400
list of ingredients

01:04:58,319 --> 01:05:04,799
so suppose you wanted this tasty

01:05:01,400 --> 01:05:07,119
non-biodegradable snack the twinkie

01:05:04,799 --> 01:05:08,480
well if you go and buy it you may look

01:05:07,119 --> 01:05:10,079
at the back and the ingredients list and

01:05:08,480 --> 01:05:13,119
find out that twinkies

01:05:10,079 --> 01:05:13,599
are not in fact vegetarian now that's

01:05:13,119 --> 01:05:15,920
okay

01:05:13,599 --> 01:05:17,520
maybe you don't care it would be great

01:05:15,920 --> 01:05:19,200
you just want something that's delicious

01:05:17,520 --> 01:05:22,240
but all of us know someone who has a

01:05:19,200 --> 01:05:25,839
dietary restriction or food sensitivity

01:05:22,240 --> 01:05:27,920
and the vision here is about empowering

01:05:25,839 --> 01:05:29,920
us and those we care about to make the

01:05:27,920 --> 01:05:32,480
right decisions this is the famous

01:05:29,920 --> 01:05:34,640
risk management approach to security and

01:05:32,480 --> 01:05:37,200
that's really the vision here

01:05:34,640 --> 01:05:38,000
uh is to understand what's the software

01:05:37,200 --> 01:05:40,559
equivalent

01:05:38,000 --> 01:05:42,400
to having this kind of transparency into

01:05:40,559 --> 01:05:44,559
our software supply chain

01:05:42,400 --> 01:05:45,520
now the software equivalent i'd argue

01:05:44,559 --> 01:05:48,799
this idea

01:05:45,520 --> 01:05:50,559
of a software bill of materials it's a

01:05:48,799 --> 01:05:52,319
formal record and forgive the wall of

01:05:50,559 --> 01:05:54,319
text here but it's a formal record

01:05:52,319 --> 01:05:56,480
to say these are the different

01:05:54,319 --> 01:05:56,960
components this is what my supply chain

01:05:56,480 --> 01:05:59,839
is

01:05:56,960 --> 01:06:01,280
it's a list of ingredients uh or you

01:05:59,839 --> 01:06:02,480
know understanding what the relationship

01:06:01,280 --> 01:06:06,480
between those ingredients

01:06:02,480 --> 01:06:08,960
is now the value of sbom

01:06:06,480 --> 01:06:10,960
is pretty spectacular across all parts

01:06:08,960 --> 01:06:13,920
of the software ecosystem

01:06:10,960 --> 01:06:15,839
for those of us who build software uh

01:06:13,920 --> 01:06:17,599
and i think that's many of us

01:06:15,839 --> 01:06:18,960
it's very hard to claim that we have a

01:06:17,599 --> 01:06:20,960
secure development process

01:06:18,960 --> 01:06:22,240
if we aren't tracking the pieces that

01:06:20,960 --> 01:06:23,920
are going into our software

01:06:22,240 --> 01:06:25,599
now there's a lot of other parts that we

01:06:23,920 --> 01:06:27,920
want in an sdlc

01:06:25,599 --> 01:06:30,480
or a secure process s-bom is just one

01:06:27,920 --> 01:06:32,000
part of it but it's a very critical part

01:06:30,480 --> 01:06:34,079
similarly if you're thinking about

01:06:32,000 --> 01:06:35,359
supply chain where your software comes

01:06:34,079 --> 01:06:36,400
from making sure that using the best

01:06:35,359 --> 01:06:39,200
quality parts

01:06:36,400 --> 01:06:41,200
you need the ability to look inside the

01:06:39,200 --> 01:06:43,119
supply chain of your software

01:06:41,200 --> 01:06:44,799
if you're doing risk management hey is

01:06:43,119 --> 01:06:47,680
the software that i'm about to use

01:06:44,799 --> 01:06:48,240
in my own project or in my organization

01:06:47,680 --> 01:06:49,520
is that

01:06:48,240 --> 01:06:51,599
helping us or hurting us when it comes

01:06:49,520 --> 01:06:53,680
to risk you similarly need to know

01:06:51,599 --> 01:06:56,160
not just what the piece of software is

01:06:53,680 --> 01:06:58,000
but what are the underlying dependencies

01:06:56,160 --> 01:06:59,119
and of course vulnerability management

01:06:58,000 --> 01:07:00,799
is something that we all care about

01:06:59,119 --> 01:07:02,480
today which is to say hey

01:07:00,799 --> 01:07:03,839
where are the vulnerabilities it's one

01:07:02,480 --> 01:07:06,160
thing to say this

01:07:03,839 --> 01:07:07,200
large well-used project has a

01:07:06,160 --> 01:07:08,960
vulnerability

01:07:07,200 --> 01:07:12,079
but often the things that we care about

01:07:08,960 --> 01:07:13,760
are buried deeper down

01:07:12,079 --> 01:07:15,599
so maybe now you're like yeah this is a

01:07:13,760 --> 01:07:16,480
great idea why aren't we already doing

01:07:15,599 --> 01:07:18,720
this

01:07:16,480 --> 01:07:20,799
well today it's a little bit of history

01:07:18,720 --> 01:07:22,400
someone already tried

01:07:20,799 --> 01:07:23,839
over five years ago there was an attempt

01:07:22,400 --> 01:07:26,319
in the united states congress

01:07:23,839 --> 01:07:26,880
to create a law that says that

01:07:26,319 --> 01:07:29,760
everything

01:07:26,880 --> 01:07:31,920
that the us government buys comes with a

01:07:29,760 --> 01:07:34,240
bill of materials

01:07:31,920 --> 01:07:35,039
this was not met with the greatest of

01:07:34,240 --> 01:07:36,400
enthusiasm

01:07:35,039 --> 01:07:38,240
by certain corners of the software

01:07:36,400 --> 01:07:41,359
industry uh in fact

01:07:38,240 --> 01:07:42,480
they tried to kill it with fire but it's

01:07:41,359 --> 01:07:44,400
important to acknowledge you know

01:07:42,480 --> 01:07:46,640
what were some of the reasons why they

01:07:44,400 --> 01:07:49,280
reacted so strongly against it

01:07:46,640 --> 01:07:50,799
uh one of the challenges uh is that

01:07:49,280 --> 01:07:52,880
licensing is tricky

01:07:50,799 --> 01:07:54,640
and until very recently i don't know how

01:07:52,880 --> 01:07:55,599
many of even the biggest and most mature

01:07:54,640 --> 01:07:58,079
companies in the world

01:07:55,599 --> 01:07:59,920
could honestly say they had all of their

01:07:58,079 --> 01:08:01,599
open source licenses in order

01:07:59,920 --> 01:08:03,200
today i'd argue that's a much better

01:08:01,599 --> 01:08:04,559
understood risk

01:08:03,200 --> 01:08:06,240
there are commercial off-the-shelf tools

01:08:04,559 --> 01:08:07,680
that hand it for you they're phenomenal

01:08:06,240 --> 01:08:08,799
efforts like the open chain initiative

01:08:07,680 --> 01:08:09,680
and linux foundation to help

01:08:08,799 --> 01:08:11,760
organizations

01:08:09,680 --> 01:08:13,359
better understand how to use licensing

01:08:11,760 --> 01:08:16,159
uh every startup

01:08:13,359 --> 01:08:17,440
now knows that if they're going for exit

01:08:16,159 --> 01:08:19,359
or even trying to raise money

01:08:17,440 --> 01:08:20,799
they need to have some demonstrations

01:08:19,359 --> 01:08:24,000
that they're open source of purchase

01:08:20,799 --> 01:08:25,520
value and also it's hard uh

01:08:24,000 --> 01:08:27,040
if this were easy we would have done it

01:08:25,520 --> 01:08:28,400
already and i'll walk through some of

01:08:27,040 --> 01:08:29,839
the engineering challenges we're dealing

01:08:28,400 --> 01:08:31,520
with as a community

01:08:29,839 --> 01:08:32,640
but i don't want to overstate that this

01:08:31,520 --> 01:08:33,199
is the sort of thing that we can easily

01:08:32,640 --> 01:08:35,600
do

01:08:33,199 --> 01:08:36,719
in part because uh it requires

01:08:35,600 --> 01:08:38,719
collaboration across

01:08:36,719 --> 01:08:40,640
different kinds of organizations this

01:08:38,719 --> 01:08:41,600
isn't something that just a single

01:08:40,640 --> 01:08:44,400
organization

01:08:41,600 --> 01:08:45,359
can solve for themselves and a big part

01:08:44,400 --> 01:08:47,600
of it

01:08:45,359 --> 01:08:49,600
is that no one's asking for this

01:08:47,600 --> 01:08:51,679
information so no one's providing it

01:08:49,600 --> 01:08:52,799
no one's providing it so no one's asking

01:08:51,679 --> 01:08:55,120
for it

01:08:52,799 --> 01:08:56,319
and that is what we call a chicken and

01:08:55,120 --> 01:08:58,400
egg problem

01:08:56,319 --> 01:09:00,560
uh i have a little bit of a background

01:08:58,400 --> 01:09:02,560
in both cryptography and economics

01:09:00,560 --> 01:09:04,719
and in the economic side we like market

01:09:02,560 --> 01:09:06,799
covers because one they make the math a

01:09:04,719 --> 01:09:09,839
little more interesting

01:09:06,799 --> 01:09:11,600
but also it's kind of a chance for

01:09:09,839 --> 01:09:13,279
the government to get involved it's a

01:09:11,600 --> 01:09:13,839
famous phrase in america we're from the

01:09:13,279 --> 01:09:16,480
government

01:09:13,839 --> 01:09:18,080
we're here to help uh but i think this

01:09:16,480 --> 01:09:20,960
really is a chance

01:09:18,080 --> 01:09:21,920
where we can play a key role not in

01:09:20,960 --> 01:09:23,120
regulating but

01:09:21,920 --> 01:09:24,159
doing something a little different so

01:09:23,120 --> 01:09:25,520
traditionally how does the government

01:09:24,159 --> 01:09:27,920
help for this kind of work

01:09:25,520 --> 01:09:29,199
uh well we have regulation we're going

01:09:27,920 --> 01:09:32,719
to make people do this

01:09:29,199 --> 01:09:34,400
or you know the carrot or the stick

01:09:32,719 --> 01:09:36,400
so we have the carrot which is well paid

01:09:34,400 --> 01:09:38,799
it's now no one gave me a budget

01:09:36,400 --> 01:09:39,440
so i can't pay anyone to do anything and

01:09:38,799 --> 01:09:41,359
also

01:09:39,440 --> 01:09:43,759
my corner of the us government doesn't

01:09:41,359 --> 01:09:45,359
have regulatory authority in fact we're

01:09:43,759 --> 01:09:48,319
big into helping markets

01:09:45,359 --> 01:09:49,279
and the community solve problems and so

01:09:48,319 --> 01:09:52,960
that's really

01:09:49,279 --> 01:09:55,840
what we've tried to do here ntia

01:09:52,960 --> 01:09:56,480
uh has built this multi-stakeholder

01:09:55,840 --> 01:09:58,719
process

01:09:56,480 --> 01:09:59,760
it's open and transparent it's consensus

01:09:58,719 --> 01:10:01,600
based

01:09:59,760 --> 01:10:02,960
and really anyone can participate we're

01:10:01,600 --> 01:10:04,159
lucky enough to have some folks from the

01:10:02,960 --> 01:10:06,320
open source community

01:10:04,159 --> 01:10:07,679
involved we'd love you involved more but

01:10:06,320 --> 01:10:09,920
let me just take a little bit of time to

01:10:07,679 --> 01:10:13,199
talk about what we're trying to do

01:10:09,920 --> 01:10:16,640
the scale is quite ambitious we're

01:10:13,199 --> 01:10:17,679
trying to address this as a cross-sector

01:10:16,640 --> 01:10:18,960
initiative

01:10:17,679 --> 01:10:20,880
one of the things that we're worried

01:10:18,960 --> 01:10:24,080
about is that this will develop

01:10:20,880 --> 01:10:25,440
uh solutions that are sector specific

01:10:24,080 --> 01:10:27,679
right that will be a healthcare specific

01:10:25,440 --> 01:10:30,000
solution there'll be

01:10:27,679 --> 01:10:31,679
a aerospace solution there'll be an

01:10:30,000 --> 01:10:33,760
automotive solution when the as

01:10:31,679 --> 01:10:35,199
you may know we all use the same

01:10:33,760 --> 01:10:36,880
software and so

01:10:35,199 --> 01:10:38,800
by fragmenting the ecosystem we actually

01:10:36,880 --> 01:10:40,400
make ourselves worse off

01:10:38,800 --> 01:10:43,040
similar we need to capture the entire

01:10:40,400 --> 01:10:45,280
supply chain starting from open source

01:10:43,040 --> 01:10:47,040
going into commercial a special

01:10:45,280 --> 01:10:48,560
attention to embedded software which is

01:10:47,040 --> 01:10:50,800
often a lot more opaque

01:10:48,560 --> 01:10:52,719
and of course getting the end users

01:10:50,800 --> 01:10:55,199
involved or the end organizations

01:10:52,719 --> 01:10:56,560
uh involved to say what's the data that

01:10:55,199 --> 01:10:58,000
they need

01:10:56,560 --> 01:10:59,760
to understand the software that they're

01:10:58,000 --> 01:11:00,719
using so this is very broad we're really

01:10:59,760 --> 01:11:03,760
trying to address

01:11:00,719 --> 01:11:05,600
the entire software ecosystem that's

01:11:03,760 --> 01:11:08,320
ambitious so i also want to underscore

01:11:05,600 --> 01:11:09,760
that we're trying to be as uh focused on

01:11:08,320 --> 01:11:11,920
as thin a slice as possible

01:11:09,760 --> 01:11:13,920
we don't want to solve everything so

01:11:11,920 --> 01:11:14,719
very briefly categorize what we're not

01:11:13,920 --> 01:11:17,360
doing

01:11:14,719 --> 01:11:17,840
this is not about regulation uh this is

01:11:17,360 --> 01:11:19,679
not

01:11:17,840 --> 01:11:21,199
a u.s specific initiative we're working

01:11:19,679 --> 01:11:22,560
with global organizations

01:11:21,199 --> 01:11:24,239
this is not about a formal standard

01:11:22,560 --> 01:11:26,480
development process or a requirement to

01:11:24,239 --> 01:11:27,760
disclose source code and we're also not

01:11:26,480 --> 01:11:28,400
trying to solve the entire world of

01:11:27,760 --> 01:11:30,320
security

01:11:28,400 --> 01:11:31,760
or supply chain there are a lot of other

01:11:30,320 --> 01:11:33,760
great initiatives out there

01:11:31,760 --> 01:11:34,960
our vision here is that s bomb should be

01:11:33,760 --> 01:11:39,360
able to complement them

01:11:34,960 --> 01:11:40,640
and slot in or dock with them as needed

01:11:39,360 --> 01:11:42,400
we've been at this for about two years

01:11:40,640 --> 01:11:44,640
and we've made a lot of progress

01:11:42,400 --> 01:11:46,320
uh there's now i think a clear

01:11:44,640 --> 01:11:47,920
appreciation on the potential value for

01:11:46,320 --> 01:11:49,760
transparency when we first started

01:11:47,920 --> 01:11:50,960
people tried to stop us uh often

01:11:49,760 --> 01:11:52,239
sometimes from inside the same

01:11:50,960 --> 01:11:54,719
organizations as folks

01:11:52,239 --> 01:11:55,920
who were uh enthusiastic about that it's

01:11:54,719 --> 01:11:57,040
one things i love about

01:11:55,920 --> 01:11:59,760
learning about different corners of the

01:11:57,040 --> 01:12:02,159
world there's been broad consensus

01:11:59,760 --> 01:12:04,239
on the scope of the problem on the need

01:12:02,159 --> 01:12:05,679
for a global approach

01:12:04,239 --> 01:12:08,080
on the fact that we should really be

01:12:05,679 --> 01:12:09,920
focusing on a baseline or a minimum

01:12:08,080 --> 01:12:11,360
viable i spawn we shouldn't try to solve

01:12:09,920 --> 01:12:12,640
every problem in the world

01:12:11,360 --> 01:12:14,159
but any solution that we couple with

01:12:12,640 --> 01:12:15,760
needs to be machine readable and it

01:12:14,159 --> 01:12:17,600
needs to be scalable

01:12:15,760 --> 01:12:20,080
so i'm going to flag this website a

01:12:17,600 --> 01:12:22,480
couple times ntia.gov

01:12:20,080 --> 01:12:23,199
s-bomb it's a chance to learn about more

01:12:22,480 --> 01:12:25,360
uh

01:12:23,199 --> 01:12:26,719
and so far we've made some progress

01:12:25,360 --> 01:12:28,400
we've developed

01:12:26,719 --> 01:12:30,719
the basics of the what the why and the

01:12:28,400 --> 01:12:33,679
how and now we're focused

01:12:30,719 --> 01:12:34,800
on a path to deployment so alan you've

01:12:33,679 --> 01:12:36,640
been talking about s-bomb for a little

01:12:34,800 --> 01:12:40,080
while now what the heck can i spell

01:12:36,640 --> 01:12:42,800
an s bomb is very simply uh

01:12:40,080 --> 01:12:44,320
a dependency graph so in our toy example

01:12:42,800 --> 01:12:47,520
we have acme appliance

01:12:44,320 --> 01:12:49,520
that depends on exactly two dependencies

01:12:47,520 --> 01:12:50,640
bingo buffer and bob's browser bob's

01:12:49,520 --> 01:12:52,880
browser in turn

01:12:50,640 --> 01:12:54,080
has at least one dependency which is

01:12:52,880 --> 01:12:55,360
carol's compression engine

01:12:54,080 --> 01:12:57,360
and we know that carol's compression

01:12:55,360 --> 01:12:59,120
engine has no further dependencies

01:12:57,360 --> 01:13:00,640
so that's it just a directed asymptotic

01:12:59,120 --> 01:13:01,920
graph one of the things that's important

01:13:00,640 --> 01:13:03,440
to acknowledge

01:13:01,920 --> 01:13:05,040
is that we're trying to make the known

01:13:03,440 --> 01:13:07,679
unknowns explicit

01:13:05,040 --> 01:13:09,120
so in this case for example we know that

01:13:07,679 --> 01:13:10,320
carroll's compression engine doesn't

01:13:09,120 --> 01:13:12,800
have any further dependencies

01:13:10,320 --> 01:13:13,440
we have no idea if bingo buffer is

01:13:12,800 --> 01:13:15,840
similarly

01:13:13,440 --> 01:13:17,280
the root of the tree or leaf depending

01:13:15,840 --> 01:13:19,920
on how you draw your trees

01:13:17,280 --> 01:13:20,719
or is it the top of a very large dark

01:13:19,920 --> 01:13:22,960
branch

01:13:20,719 --> 01:13:24,239
but that's okay because we're not again

01:13:22,960 --> 01:13:26,080
trying to solve all of this

01:13:24,239 --> 01:13:27,920
we're trying to make sure that when we

01:13:26,080 --> 01:13:28,960
don't have information we make that lack

01:13:27,920 --> 01:13:31,040
of information

01:13:28,960 --> 01:13:33,280
explicit so that folks who care more can

01:13:31,040 --> 01:13:36,320
learn more about it

01:13:33,280 --> 01:13:36,640
for each of uh these components we don't

01:13:36,320 --> 01:13:39,040
need

01:13:36,640 --> 01:13:40,640
that much information you know who's the

01:13:39,040 --> 01:13:42,000
supplier right what organization to come

01:13:40,640 --> 01:13:43,360
from whether it's

01:13:42,000 --> 01:13:45,360
an open source project or commercial

01:13:43,360 --> 01:13:47,199
project what's the component name

01:13:45,360 --> 01:13:48,719
what's the version right so that we know

01:13:47,199 --> 01:13:50,239
if it's you know something that still

01:13:48,719 --> 01:13:52,000
has a vulnerability it's been fixed

01:13:50,239 --> 01:13:53,199
and what's the hash so that you and i

01:13:52,000 --> 01:13:54,719
both know that we're talking about the

01:13:53,199 --> 01:13:56,560
same piece of software

01:13:54,719 --> 01:13:58,159
uh and that you can feel confident that

01:13:56,560 --> 01:13:58,800
i didn't just download a backdoor

01:13:58,159 --> 01:14:01,840
version

01:13:58,800 --> 01:14:04,400
uh or typo squatted version from github

01:14:01,840 --> 01:14:06,320
how many levels deep uh are we trying to

01:14:04,400 --> 01:14:09,199
go well i touched on this a little bit

01:14:06,320 --> 01:14:10,560
uh you know ideally we'd go all the way

01:14:09,199 --> 01:14:12,400
we have the entire graph

01:14:10,560 --> 01:14:13,679
but i also want to acknowledge that as

01:14:12,400 --> 01:14:15,679
we start doing this

01:14:13,679 --> 01:14:16,960
that might be difficult for some actors

01:14:15,679 --> 01:14:18,960
depending on their resources depending

01:14:16,960 --> 01:14:22,000
on the type of software they're using

01:14:18,960 --> 01:14:23,760
so a minimum s-bomb must include all the

01:14:22,000 --> 01:14:25,199
top-level influence

01:14:23,760 --> 01:14:26,880
they in turn should ask for their

01:14:25,199 --> 01:14:28,080
includes s-bombs and then hopefully we

01:14:26,880 --> 01:14:30,400
can use recursion

01:14:28,080 --> 01:14:31,920
to get further down the graph ideally we

01:14:30,400 --> 01:14:32,800
make a best faith effort for all known

01:14:31,920 --> 01:14:34,480
components

01:14:32,800 --> 01:14:35,920
as folks start to use it it's going to

01:14:34,480 --> 01:14:37,440
be up to them to figure out

01:14:35,920 --> 01:14:38,960
how much to ask for their supplier

01:14:37,440 --> 01:14:40,960
that's going to be a negotiation and

01:14:38,960 --> 01:14:42,880
we'll talk about that in a little bit

01:14:40,960 --> 01:14:44,080
so that's the one why should we do this

01:14:42,880 --> 01:14:45,360
so i've talked a little bit about some

01:14:44,080 --> 01:14:48,000
of the different use cases

01:14:45,360 --> 01:14:48,880
and really the benefits depend a lot on

01:14:48,000 --> 01:14:50,880
the role you wear

01:14:48,880 --> 01:14:51,920
right all of us wear different hats some

01:14:50,880 --> 01:14:54,400
of us make software

01:14:51,920 --> 01:14:55,440
some select software many of us operate

01:14:54,400 --> 01:14:56,960
software

01:14:55,440 --> 01:14:58,800
and there's value for each and i don't

01:14:56,960 --> 01:15:01,760
want to walk through all of these

01:14:58,800 --> 01:15:02,320
but i do want to say that for many of

01:15:01,760 --> 01:15:03,760
these

01:15:02,320 --> 01:15:05,840
it's kind of crazy that we don't have

01:15:03,760 --> 01:15:07,199
them today

01:15:05,840 --> 01:15:08,880
and there's real value i think in

01:15:07,199 --> 01:15:10,960
demonstrating maturity

01:15:08,880 --> 01:15:12,560
uh the last bullet under operate

01:15:10,960 --> 01:15:13,600
software driving independent mitigations

01:15:12,560 --> 01:15:16,719
is also key

01:15:13,600 --> 01:15:19,840
so here's a case study

01:15:16,719 --> 01:15:22,400
on remediation with and without nespo

01:15:19,840 --> 01:15:22,960
so at the top we see hey here's the

01:15:22,400 --> 01:15:25,120
different

01:15:22,960 --> 01:15:26,719
uh ways that this happens we discover a

01:15:25,120 --> 01:15:28,719
flaw in january

01:15:26,719 --> 01:15:29,760
well that project now has to sort of

01:15:28,719 --> 01:15:33,920
develop a patch

01:15:29,760 --> 01:15:35,600
test it push it the second supplier

01:15:33,920 --> 01:15:37,040
does it down the supply chain doesn't

01:15:35,600 --> 01:15:39,520
realize that there's an issue

01:15:37,040 --> 01:15:40,400
until a patch has been pushed and so on

01:15:39,520 --> 01:15:43,120
down

01:15:40,400 --> 01:15:44,640
the food chain once we have an s-bomb it

01:15:43,120 --> 01:15:45,840
doesn't magically solve the patching

01:15:44,640 --> 01:15:46,800
problem does it magically solve the

01:15:45,840 --> 01:15:48,880
remediation problem

01:15:46,800 --> 01:15:50,159
but now it allows everyone while they're

01:15:48,880 --> 01:15:51,760
waiting to say

01:15:50,159 --> 01:15:53,280
i know i might be potentially at risk

01:15:51,760 --> 01:15:56,080
either i'll just wait

01:15:53,280 --> 01:15:56,400
or i can take other remediation steps i

01:15:56,080 --> 01:15:58,080
can

01:15:56,400 --> 01:16:00,320
change my code to make sure that even if

01:15:58,080 --> 01:16:02,800
this bug is executable

01:16:00,320 --> 01:16:03,920
uh i can detect it or i can prevent it

01:16:02,800 --> 01:16:05,440
there's a lot of other things that

01:16:03,920 --> 01:16:06,719
organizations can do as the final user

01:16:05,440 --> 01:16:07,199
they can tune their intrusion detection

01:16:06,719 --> 01:16:08,880
system

01:16:07,199 --> 01:16:10,719
they can work with a threat intel system

01:16:08,880 --> 01:16:12,400
they can segment by their network

01:16:10,719 --> 01:16:14,480
the vision here is there are lots of

01:16:12,400 --> 01:16:14,880
potential radiations once you know about

01:16:14,480 --> 01:16:17,440
a piece

01:16:14,880 --> 01:16:20,000
once you know about a potential risk it

01:16:17,440 --> 01:16:22,159
also i think is a great chance to reward

01:16:20,000 --> 01:16:24,320
those organizations that are producing

01:16:22,159 --> 01:16:28,000
good software through good processes

01:16:24,320 --> 01:16:30,480
if folks downstream now have visibility

01:16:28,000 --> 01:16:31,280
upstream into the software supply chain

01:16:30,480 --> 01:16:33,920
they can now

01:16:31,280 --> 01:16:34,880
work with their suppliers to say yeah we

01:16:33,920 --> 01:16:37,760
want you

01:16:34,880 --> 01:16:38,719
uh to use open source projects that have

01:16:37,760 --> 01:16:40,800
good governance

01:16:38,719 --> 01:16:42,080
or that have using certain best

01:16:40,800 --> 01:16:43,600
practices or that have

01:16:42,080 --> 01:16:45,600
linux foundation badges or something

01:16:43,600 --> 01:16:46,480
like that there are a lot of details and

01:16:45,600 --> 01:16:48,800
ways out there

01:16:46,480 --> 01:16:49,600
by providing visibility we can reward

01:16:48,800 --> 01:16:52,239
projects

01:16:49,600 --> 01:16:53,199
uh that have the stability and

01:16:52,239 --> 01:16:55,440
resiliency

01:16:53,199 --> 01:16:57,440
that we've come to know that we need in

01:16:55,440 --> 01:17:00,000
the open source world

01:16:57,440 --> 01:17:01,600
so it's the what the why how do we do

01:17:00,000 --> 01:17:02,080
this because the vision here is to make

01:17:01,600 --> 01:17:04,239
sure

01:17:02,080 --> 01:17:05,760
uh that we can actually automate this

01:17:04,239 --> 01:17:06,880
good news is that there's at least one

01:17:05,760 --> 01:17:07,760
standard the bad news there's more than

01:17:06,880 --> 01:17:10,159
one standard

01:17:07,760 --> 01:17:11,440
in fact there are three uh spdx comes

01:17:10,159 --> 01:17:14,239
out linux foundation

01:17:11,440 --> 01:17:15,520
swin tags are an iso standard cyclone dx

01:17:14,239 --> 01:17:16,640
is relatively new it comes out of the

01:17:15,520 --> 01:17:19,760
oaus world

01:17:16,640 --> 01:17:21,360
uh that's built for explicitly for this

01:17:19,760 --> 01:17:22,640
these are great standards the vision

01:17:21,360 --> 01:17:24,080
here isn't that we're going to pick a

01:17:22,640 --> 01:17:25,840
winner or a loser

01:17:24,080 --> 01:17:28,640
but that we're going to emphasize cross

01:17:25,840 --> 01:17:29,840
compatibility and interoperability

01:17:28,640 --> 01:17:32,239
the communities decided that a

01:17:29,840 --> 01:17:34,320
multilingual ecosystem doesn't operate

01:17:32,239 --> 01:17:35,360
too many doesn't opportunity challenges

01:17:34,320 --> 01:17:37,920
and so we're focusing

01:17:35,360 --> 01:17:39,440
on translation so for example those core

01:17:37,920 --> 01:17:40,960
s bond fields that i talked about

01:17:39,440 --> 01:17:42,960
here's how you can implement them in

01:17:40,960 --> 01:17:44,880
each of these three standards

01:17:42,960 --> 01:17:46,080
and today we're working together to

01:17:44,880 --> 01:17:48,719
collect tools

01:17:46,080 --> 01:17:50,320
that are already doing this uh so that

01:17:48,719 --> 01:17:50,960
make it easier and cheaper for folks to

01:17:50,320 --> 01:17:53,679
adopt it

01:17:50,960 --> 01:17:54,800
wherever they sit last slide is what

01:17:53,679 --> 01:17:56,239
flags work that's happening in the

01:17:54,800 --> 01:17:57,920
healthcare sector

01:17:56,239 --> 01:17:59,840
with global companies because they

01:17:57,920 --> 01:18:01,280
weren't content just to start

01:17:59,840 --> 01:18:02,800
saying well let's try to build out the

01:18:01,280 --> 01:18:05,040
standards and talk about it they wanted

01:18:02,800 --> 01:18:06,560
to show that it was possible today

01:18:05,040 --> 01:18:08,880
and in the middle of the world's worst

01:18:06,560 --> 01:18:10,719
public health crisis reason why i sadly

01:18:08,880 --> 01:18:13,280
can't join everyone today

01:18:10,719 --> 01:18:14,159
uh the healthcare world has been moving

01:18:13,280 --> 01:18:16,320
ahead

01:18:14,159 --> 01:18:18,080
where large medical device manufacturers

01:18:16,320 --> 01:18:21,120
have been generating s bum data

01:18:18,080 --> 01:18:22,880
and that data in turn is being used

01:18:21,120 --> 01:18:24,960
by some of the biggest and best

01:18:22,880 --> 01:18:26,400
hospitals in america for predefined

01:18:24,960 --> 01:18:28,320
security and

01:18:26,400 --> 01:18:31,280
i.t management use cases so we're

01:18:28,320 --> 01:18:32,400
showing that this has value today

01:18:31,280 --> 01:18:33,920
what are we working on now what are the

01:18:32,400 --> 01:18:35,440
next steps for the community first we're

01:18:33,920 --> 01:18:36,640
finding and extending the model

01:18:35,440 --> 01:18:37,840
and there are some key challenges that

01:18:36,640 --> 01:18:38,719
i'm happy to talk about with anyone

01:18:37,840 --> 01:18:40,239
who's interested

01:18:38,719 --> 01:18:42,880
including the challenge of naming

01:18:40,239 --> 01:18:44,960
software uh how do we share s-bom data

01:18:42,880 --> 01:18:46,159
the fact that not all vulnerabilities

01:18:44,960 --> 01:18:47,520
are actually exploitable

01:18:46,159 --> 01:18:49,840
uh there are a lot of efforts that we're

01:18:47,520 --> 01:18:51,280
trying to to sort of manage here

01:18:49,840 --> 01:18:53,360
uh to continue at the architectural

01:18:51,280 --> 01:18:55,520
level we're focusing as i mentioned on

01:18:53,360 --> 01:18:57,920
tooling what tools exist today and also

01:18:55,520 --> 01:18:58,719
what's the gap what don't we have and

01:18:57,920 --> 01:19:00,960
then finally

01:18:58,719 --> 01:19:02,800
getting the message out we're interested

01:19:00,960 --> 01:19:03,360
in further demonstrations and we've got

01:19:02,800 --> 01:19:04,960
folks

01:19:03,360 --> 01:19:06,560
uh again from around the world in the

01:19:04,960 --> 01:19:08,640
energy sector in the finance sector in

01:19:06,560 --> 01:19:10,960
the automotive sector uh

01:19:08,640 --> 01:19:12,320
to just sort of say hey how do we start

01:19:10,960 --> 01:19:13,679
doing this today so if you're interested

01:19:12,320 --> 01:19:16,159
in any of those sectors

01:19:13,679 --> 01:19:16,800
or your own corner of the software world

01:19:16,159 --> 01:19:19,360
is interest

01:19:16,800 --> 01:19:20,480
i'd love to talk more one challenge that

01:19:19,360 --> 01:19:22,400
i briefly mentioned

01:19:20,480 --> 01:19:23,920
is the idea that not vulnerabilities not

01:19:22,400 --> 01:19:25,120
all vulnerabilities are exploitable

01:19:23,920 --> 01:19:26,560
so we're trying to make sure that we

01:19:25,120 --> 01:19:27,920
have a way of communicating that in

01:19:26,560 --> 01:19:30,080
parallel to the s-bomb

01:19:27,920 --> 01:19:31,360
again to maximize efficiency and

01:19:30,080 --> 01:19:34,880
minimize the amount of time

01:19:31,360 --> 01:19:36,640
anyone has to wait so summing up

01:19:34,880 --> 01:19:38,960
transparency is as we say in the united

01:19:36,640 --> 01:19:40,560
states part of this complete breakfast

01:19:38,960 --> 01:19:42,320
uh it's not going to solve all of our

01:19:40,560 --> 01:19:44,239
problems but we think it will help

01:19:42,320 --> 01:19:47,679
in a lot of different areas hopefully in

01:19:44,239 --> 01:19:49,600
an area that you're concerned about

01:19:47,679 --> 01:19:50,880
there's been a lot of work across

01:19:49,600 --> 01:19:52,560
sectors from

01:19:50,880 --> 01:19:54,000
participants around the world this isn't

01:19:52,560 --> 01:19:56,719
just a us-based effort

01:19:54,000 --> 01:19:58,320
and so we love your participation think

01:19:56,719 --> 01:19:58,960
about building s-bombs for your projects

01:19:58,320 --> 01:20:01,120
today

01:19:58,960 --> 01:20:02,080
and if you want to get involved we'd

01:20:01,120 --> 01:20:03,840
love to have you

01:20:02,080 --> 01:20:05,440
as a participant there's some email

01:20:03,840 --> 01:20:06,560
address uh

01:20:05,440 --> 01:20:08,480
find us on twitter there's a lot of

01:20:06,560 --> 01:20:09,920
folks using the hashtag sbom find out

01:20:08,480 --> 01:20:11,760
what documents are there

01:20:09,920 --> 01:20:13,120
and and chime in and say hey this

01:20:11,760 --> 01:20:15,840
doesn't meet my needs

01:20:13,120 --> 01:20:16,560
i would like you to help me with that so

01:20:15,840 --> 01:20:18,400
with that

01:20:16,560 --> 01:20:20,320
uh please feel free to reach out thank

01:20:18,400 --> 01:20:22,000
you so much for your time this afternoon

01:20:20,320 --> 01:20:24,080
and i look forward to collaborating with

01:20:22,000 --> 01:20:25,120
you on this and a lot of other fun

01:20:24,080 --> 01:20:28,639
projects

01:20:25,120 --> 01:20:32,719
thanks so much oops and of course the

01:20:28,639 --> 01:20:34,639
awkward finish

01:20:32,719 --> 01:20:35,760
there we go who doesn't love the awkward

01:20:34,639 --> 01:20:38,639
end of a

01:20:35,760 --> 01:20:39,360
zoom meeting thanks a lot thank you dr

01:20:38,639 --> 01:20:42,239
freeman

01:20:39,360 --> 01:20:43,199
and all of our keynes for joining us

01:20:42,239 --> 01:20:45,520
that's the end of

01:20:43,199 --> 01:20:47,360
our keynote talks for this year's events

01:20:45,520 --> 01:20:49,040
we'll have a lot of great conference

01:20:47,360 --> 01:20:49,600
sessions remaining for you to enjoy

01:20:49,040 --> 01:20:51,840
today

01:20:49,600 --> 01:20:52,800
as well as a ton of great content

01:20:51,840 --> 01:20:55,840
tomorrow

01:20:52,800 --> 01:20:57,199
including kvm forum and linux security

01:20:55,840 --> 01:20:59,280
summit

01:20:57,199 --> 01:21:00,800
a bunch of mini summits for a number of

01:20:59,280 --> 01:21:04,320
lf projects including

01:21:00,800 --> 01:21:07,840
open mainframe lfai drone code

01:21:04,320 --> 01:21:09,199
phenos and more three highly recommended

01:21:07,840 --> 01:21:12,239
special sessions

01:21:09,199 --> 01:21:15,520
are technical resume writing workshop

01:21:12,239 --> 01:21:16,880
cracking the conversation code allyship

01:21:15,520 --> 01:21:19,199
workshop

01:21:16,880 --> 01:21:21,840
and a mentoring session on writing

01:21:19,199 --> 01:21:24,480
change logs that make sense

01:21:21,840 --> 01:21:25,199
please enjoy the remainder of the event

01:21:24,480 --> 01:21:28,880
please stay

01:21:25,199 --> 01:21:32,080
safe and we truly sincerely

01:21:28,880 --> 01:21:35,120
hope to see all of you in person

01:21:32,080 --> 01:21:38,920
next year in dublin

01:21:35,120 --> 01:21:41,920
thank you all have a great rest of the

01:21:38,920 --> 01:21:41,920

YouTube URL: https://www.youtube.com/watch?v=bFX76PwO5RU


