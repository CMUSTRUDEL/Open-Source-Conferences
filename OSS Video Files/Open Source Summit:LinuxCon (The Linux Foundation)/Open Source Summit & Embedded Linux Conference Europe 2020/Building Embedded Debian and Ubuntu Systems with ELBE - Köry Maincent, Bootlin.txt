Title: Building Embedded Debian and Ubuntu Systems with ELBE - KÃ¶ry Maincent, Bootlin
Publication date: 2020-11-03
Playlist: Open Source Summit & Embedded Linux Conference Europe 2020
Description: 
	Building Embedded Debian and Ubuntu Systems with ELBE - KÃ¶ry Maincent, Bootlin
Captions: 
	00:00:06,080 --> 00:00:10,240
hello

00:00:07,200 --> 00:00:13,040
thanks to join me on this conference

00:00:10,240 --> 00:00:13,840
i will present you today how to build an

00:00:13,040 --> 00:00:18,320
embedded

00:00:13,840 --> 00:00:21,119
deviant or ubuntu system with elbow

00:00:18,320 --> 00:00:23,039
it's my first presentation on such a

00:00:21,119 --> 00:00:27,439
conference so please

00:00:23,039 --> 00:00:29,679
excuse me if i hesitate a bit or

00:00:27,439 --> 00:00:31,199
or anything else i will try to do my

00:00:29,679 --> 00:00:35,760
best

00:00:31,199 --> 00:00:39,200
so let's get over it um

00:00:35,760 --> 00:00:40,879
so i'm curry masala i'm an embedded

00:00:39,200 --> 00:00:44,160
linux engineer at brooklyn

00:00:40,879 --> 00:00:47,210
since the beginning of this year

00:00:44,160 --> 00:00:48,640
just the beginning of kovid

00:00:47,210 --> 00:00:52,000
[Music]

00:00:48,640 --> 00:00:54,079
i work on different projects with

00:00:52,000 --> 00:00:58,480
different

00:00:54,079 --> 00:01:02,000
ambitious build system um

00:00:58,480 --> 00:01:04,960
so brooklyn is uh

00:01:02,000 --> 00:01:05,920
an open source contributor for lots of

00:01:04,960 --> 00:01:08,960
different

00:01:05,920 --> 00:01:12,080
open source projects and uh

00:01:08,960 --> 00:01:16,159
i contributed um

00:01:12,080 --> 00:01:16,159
to support ubuntu in elbe

00:01:19,200 --> 00:01:25,520
so i'm working on two projects

00:01:24,070 --> 00:01:29,479
[Music]

00:01:25,520 --> 00:01:33,040
with elbow so in an arm

00:01:29,479 --> 00:01:37,240
32 e mx6

00:01:33,040 --> 00:01:41,040
and a rockship aircar

00:01:37,240 --> 00:01:43,360
3399 platform

00:01:41,040 --> 00:01:45,600
i'm living in toulouse and i'm in the

00:01:43,360 --> 00:01:49,520
office

00:01:45,600 --> 00:01:49,520
of colombia of brooklyn

00:01:50,880 --> 00:01:56,000
so what's the account what is the

00:01:54,320 --> 00:02:01,439
content of this presentation so

00:01:56,000 --> 00:02:01,439
it's first i will first present you the

00:02:01,520 --> 00:02:08,479
different available option on

00:02:05,280 --> 00:02:10,959
how to build uh number

00:02:08,479 --> 00:02:10,959
system

00:02:11,920 --> 00:02:18,959
then i will

00:02:14,959 --> 00:02:22,160
make another review of elb

00:02:18,959 --> 00:02:23,920
then so then i just explained how to

00:02:22,160 --> 00:02:27,040
build a simple

00:02:23,920 --> 00:02:30,560
debian or ubuntu image with uh

00:02:27,040 --> 00:02:34,239
album and how to customize

00:02:30,560 --> 00:02:37,840
um the image

00:02:34,239 --> 00:02:37,840
to feature

00:02:38,080 --> 00:02:41,120
what you want

00:02:41,710 --> 00:02:44,999
[Music]

00:02:46,239 --> 00:02:52,640
so what are the different

00:02:49,440 --> 00:02:55,680
possibilities to build a

00:02:52,640 --> 00:02:57,200
number to build a distribution from an

00:02:55,680 --> 00:03:00,319
embedded

00:02:57,200 --> 00:03:03,360
board um

00:03:00,319 --> 00:03:06,480
so the first

00:03:03,360 --> 00:03:07,120
optional under the hardest way to do it

00:03:06,480 --> 00:03:10,480
is

00:03:07,120 --> 00:03:14,000
to build everything manually

00:03:10,480 --> 00:03:17,360
so the advantage

00:03:14,000 --> 00:03:21,040
are it's full flexible and you know

00:03:17,360 --> 00:03:24,640
learn a lot about how to make

00:03:21,040 --> 00:03:27,840
destroy the content the

00:03:24,640 --> 00:03:27,840
the aspect of it

00:03:28,239 --> 00:03:34,319
what is a tool train how it's made

00:03:31,280 --> 00:03:38,799
etc the cons

00:03:34,319 --> 00:03:38,799
are it's hard

00:03:39,040 --> 00:03:44,400
so you need to understand a lot of

00:03:40,799 --> 00:03:48,400
things before to make a

00:03:44,400 --> 00:03:51,080
a good distribution it's

00:03:48,400 --> 00:03:54,080
not really rapid reproducible

00:03:51,080 --> 00:03:54,080
reproducible

00:03:55,680 --> 00:04:00,239
and it's uh there is no compatibility

00:03:59,200 --> 00:04:05,120
between version

00:04:00,239 --> 00:04:06,930
etc the second

00:04:05,120 --> 00:04:08,480
option is

00:04:06,930 --> 00:04:11,599
[Music]

00:04:08,480 --> 00:04:14,239
use binary distribution so like

00:04:11,599 --> 00:04:14,239
exists

00:04:16,639 --> 00:04:23,120
which already exists so it's easy to

00:04:20,160 --> 00:04:28,320
create an extend

00:04:23,120 --> 00:04:31,520
there is already a large set of packages

00:04:28,320 --> 00:04:34,880
and it's

00:04:31,520 --> 00:04:39,199
the security updates for

00:04:34,880 --> 00:04:42,960
this package are made quite often

00:04:39,199 --> 00:04:47,600
so it's really robust

00:04:42,960 --> 00:04:52,880
and it's good for non-embedded experts

00:04:47,600 --> 00:04:52,880
because it's like a desktop

00:04:53,199 --> 00:05:01,600
so the cons are it's hard to customize

00:04:56,960 --> 00:05:04,720
and to optimize for a

00:05:01,600 --> 00:05:07,199
numbered board

00:05:04,720 --> 00:05:08,960
indeed an embedded board may not have

00:05:07,199 --> 00:05:12,160
the

00:05:08,960 --> 00:05:16,320
the power on the

00:05:12,160 --> 00:05:20,560
of like a desktop

00:05:16,320 --> 00:05:24,320
ask a computer um so you

00:05:20,560 --> 00:05:24,720
some binary redistribution will not work

00:05:24,320 --> 00:05:27,680
well

00:05:24,720 --> 00:05:27,680
on such a

00:05:27,759 --> 00:05:33,759
small embedded board

00:05:31,520 --> 00:05:33,759
um

00:05:34,639 --> 00:05:41,440
it's often a large

00:05:38,400 --> 00:05:46,160
system and

00:05:41,440 --> 00:05:49,759
it's have lots of mounted dependency

00:05:46,160 --> 00:05:53,680
and it's not available for

00:05:49,759 --> 00:05:56,720
all the different art art data

00:05:53,680 --> 00:05:59,070
architecture and

00:05:56,720 --> 00:06:00,880
so the most

00:05:59,070 --> 00:06:04,800
[Music]

00:06:00,880 --> 00:06:06,800
common option for embedded

00:06:04,800 --> 00:06:08,319
embedded board is there to use a build

00:06:06,800 --> 00:06:11,919
system like

00:06:08,319 --> 00:06:15,759
bilge root yokto xdx

00:06:11,919 --> 00:06:18,960
etc the interest of it is its

00:06:15,759 --> 00:06:23,120
full flexibility you

00:06:18,960 --> 00:06:27,840
can't configure it as you want

00:06:23,120 --> 00:06:32,080
and uh some of them are

00:06:27,840 --> 00:06:36,319
maybe more complicated

00:06:32,080 --> 00:06:40,080
than other but it's really full flexible

00:06:36,319 --> 00:06:43,280
uh it's also full reproducible

00:06:40,080 --> 00:06:46,639
reproducible you

00:06:43,280 --> 00:06:50,080
can easily have an uh

00:06:46,639 --> 00:06:53,039
tool chain uh it's used cross

00:06:50,080 --> 00:06:53,039
compilation

00:06:53,440 --> 00:06:57,840
and it's there is a lot of features

00:06:58,160 --> 00:07:04,560
and the conf is that it's

00:07:01,280 --> 00:07:08,400
not that it has not uh as

00:07:04,560 --> 00:07:12,080
uh it it's

00:07:08,400 --> 00:07:12,639
it have not regular secretive dates like

00:07:12,080 --> 00:07:17,280
uh

00:07:12,639 --> 00:07:20,880
in the distribution like they've done

00:07:17,280 --> 00:07:24,560
and it takes time to

00:07:20,880 --> 00:07:24,560
build your distribution

00:07:27,039 --> 00:07:33,199
so we will focus on

00:07:30,080 --> 00:07:34,000
how to build a debian build system it's

00:07:33,199 --> 00:07:37,039
our punch

00:07:34,000 --> 00:07:40,319
our point today so there is

00:07:37,039 --> 00:07:44,560
several projects that have been

00:07:40,319 --> 00:07:47,919
created to automate is automated process

00:07:44,560 --> 00:07:51,360
of course um first

00:07:47,919 --> 00:07:54,479
you may try to use homemade scripts

00:07:51,360 --> 00:07:57,680
but it's hard and

00:07:54,479 --> 00:08:01,199
it's not common for every project and

00:07:57,680 --> 00:08:04,240
everybody have his own scripts

00:08:01,199 --> 00:08:07,840
so naturally maintainable

00:08:04,240 --> 00:08:11,440
um the second is elbow so it's

00:08:07,840 --> 00:08:15,759
the focus of this call today

00:08:11,440 --> 00:08:19,240
it's a new build system

00:08:15,759 --> 00:08:22,000
so we have his first release in

00:08:19,240 --> 00:08:25,520
2015.

00:08:22,000 --> 00:08:28,639
it's mostly a patent code

00:08:25,520 --> 00:08:29,680
that uses a generic debian tool like the

00:08:28,639 --> 00:08:33,520
bootstrap

00:08:29,680 --> 00:08:33,520
short on others

00:08:38,959 --> 00:08:45,920
first it only supports debian

00:08:42,320 --> 00:08:51,279
but now it's uh support ubuntu

00:08:45,920 --> 00:08:54,880
i contributed to at this support

00:08:51,279 --> 00:08:58,000
so you may try to build for other

00:08:54,880 --> 00:09:01,600
distribution but you might

00:08:58,000 --> 00:09:05,360
encounter some issue

00:09:01,600 --> 00:09:10,720
maybe or maybe it will work well

00:09:05,360 --> 00:09:10,720
um another tool is deboss

00:09:11,920 --> 00:09:15,640
it's

00:09:12,550 --> 00:09:15,640
[Music]

00:09:15,680 --> 00:09:20,000
it's also interesting because you can

00:09:18,480 --> 00:09:23,120
create an image

00:09:20,000 --> 00:09:26,640
and customize emerge to make

00:09:23,120 --> 00:09:26,640
a customizable image

00:09:26,880 --> 00:09:30,800
but the

00:09:28,520 --> 00:09:33,440
[Music]

00:09:30,800 --> 00:09:35,360
so the main event advantage as i said

00:09:33,440 --> 00:09:38,240
it's to build your own package

00:09:35,360 --> 00:09:38,240
from sources

00:09:38,480 --> 00:09:46,080
you can manage easily easily sense

00:09:42,959 --> 00:09:49,200
use several architecture and

00:09:46,080 --> 00:09:53,360
two new root fs so

00:09:49,200 --> 00:09:53,360
it's easily customizable

00:09:53,840 --> 00:09:57,139
[Music]

00:09:58,399 --> 00:10:05,519
so let's focus on

00:10:01,440 --> 00:10:08,560
the elbow process elbow

00:10:05,519 --> 00:10:08,560
when you first

00:10:08,640 --> 00:10:14,959
run it it will create

00:10:11,920 --> 00:10:18,399
an init vm that's

00:10:14,959 --> 00:10:21,440
a virtual machine for uh

00:10:18,399 --> 00:10:25,600
building a root fest inside of it so

00:10:21,440 --> 00:10:29,600
it's like this square um

00:10:25,600 --> 00:10:30,839
so it's a dejan in it

00:10:29,600 --> 00:10:33,839
[Music]

00:10:30,839 --> 00:10:33,839
in

00:10:34,560 --> 00:10:42,320
so all the work will happen

00:10:37,920 --> 00:10:46,880
in uh in this initial

00:10:42,320 --> 00:10:49,440
when then you want to create

00:10:46,880 --> 00:10:50,399
an image for your project or on your

00:10:49,440 --> 00:10:52,000
board

00:10:50,399 --> 00:10:54,079
you you will

00:10:52,000 --> 00:10:56,959
[Music]

00:10:54,079 --> 00:10:58,880
create a project in this when you will

00:10:56,959 --> 00:11:01,920
submit

00:10:58,880 --> 00:11:04,330
an xml file to elbow

00:11:01,920 --> 00:11:05,760
and elbow will trade

00:11:04,330 --> 00:11:09,760
[Music]

00:11:05,760 --> 00:11:13,440
a project in his in its initial

00:11:09,760 --> 00:11:16,880
in this project it will uh

00:11:13,440 --> 00:11:18,570
create a different route

00:11:16,880 --> 00:11:21,669
for a different

00:11:18,570 --> 00:11:21,669
[Music]

00:11:21,839 --> 00:11:28,240
process so the main

00:11:24,880 --> 00:11:32,800
is for the

00:11:28,240 --> 00:11:36,160
sis route which will be installed in the

00:11:32,800 --> 00:11:40,839
in the board so the

00:11:36,160 --> 00:11:44,560
these steps are to use debut strap

00:11:40,839 --> 00:11:50,000
then um updates the

00:11:44,560 --> 00:11:50,000
mirror of the of the shoot

00:11:52,480 --> 00:12:00,959
then install the

00:11:57,600 --> 00:12:05,760
desired packages tune

00:12:00,959 --> 00:12:05,760
the root fs in like frightening

00:12:08,839 --> 00:12:14,480
and

00:12:10,880 --> 00:12:17,600
then all the

00:12:14,480 --> 00:12:20,800
when all the schrod is undead

00:12:17,600 --> 00:12:23,839
and the it is customized uh

00:12:20,800 --> 00:12:27,680
as you want it will generate

00:12:23,839 --> 00:12:30,800
um an image

00:12:27,680 --> 00:12:34,399
or a tar or a newbie image

00:12:30,800 --> 00:12:35,600
as you describe it in the xml and it

00:12:34,399 --> 00:12:39,120
will uh

00:12:35,600 --> 00:12:43,360
output in a

00:12:39,120 --> 00:12:47,360
build repository the

00:12:43,360 --> 00:12:52,880
the image corresponding to

00:12:47,360 --> 00:12:56,560
to to the funny final image

00:12:52,880 --> 00:13:00,079
so to as i said

00:12:56,560 --> 00:13:04,000
the first use of elbow is to

00:13:00,079 --> 00:13:07,600
create the init vm so the first command

00:13:04,000 --> 00:13:10,000
you will made is albe initiative

00:13:07,600 --> 00:13:10,000
create

00:13:12,560 --> 00:13:20,320
you will do this command only once

00:13:16,560 --> 00:13:23,440
because after

00:13:20,320 --> 00:13:24,720
the init vm is has been created you just

00:13:23,440 --> 00:13:28,720
have to

00:13:24,720 --> 00:13:32,079
use it so if you rebuild your

00:13:28,720 --> 00:13:35,680
computer you just need to start

00:13:32,079 --> 00:13:38,000
the init so start the debian virtual

00:13:35,680 --> 00:13:38,000
machine

00:13:43,040 --> 00:13:45,760
in elbow

00:13:46,079 --> 00:13:53,040
the all the configurations

00:13:49,680 --> 00:13:56,160
description of your image

00:13:53,040 --> 00:13:59,680
is made is described

00:13:56,160 --> 00:14:03,680
in a xml file

00:13:59,680 --> 00:14:06,560
so after you create the initial

00:14:03,680 --> 00:14:06,560
you can submit

00:14:07,760 --> 00:14:13,680
whatever xml file you want to

00:14:11,360 --> 00:14:13,680
create

00:14:14,480 --> 00:14:21,199
an image or distribution for uh

00:14:18,000 --> 00:14:26,160
for the board so the first example is

00:14:21,199 --> 00:14:30,240
uh to create an um

00:14:26,160 --> 00:14:33,440
an image for the big album black

00:14:30,240 --> 00:14:37,600
it takes about 50 minutes on my computer

00:14:33,440 --> 00:14:37,600
on the another is to

00:14:37,760 --> 00:14:42,160
make an ubuntu uh image distribution

00:14:40,959 --> 00:14:45,360
image

00:14:42,160 --> 00:14:48,320
all these two are um

00:14:45,360 --> 00:14:50,560
in the elbow source in the example uh

00:14:48,320 --> 00:14:54,000
repository

00:14:50,560 --> 00:14:54,000
uh directory sorry

00:14:54,320 --> 00:15:01,120
um the ubuntu example do not have

00:14:58,480 --> 00:15:04,639
bootloader or kernel it's only

00:15:01,120 --> 00:15:07,040
the root fs so

00:15:04,639 --> 00:15:07,040
when you

00:15:08,000 --> 00:15:15,040
after you run this command

00:15:11,680 --> 00:15:19,120
it will build and it you will have a

00:15:15,040 --> 00:15:19,120
build a result directory

00:15:19,440 --> 00:15:27,839
which will add the the timestamp

00:15:23,199 --> 00:15:27,839
in its name

00:15:29,279 --> 00:15:37,460
the different um file

00:15:33,040 --> 00:15:39,600
in this directory are

00:15:37,460 --> 00:15:42,959
[Music]

00:15:39,600 --> 00:15:45,839
been serum and source sedum iso

00:15:42,959 --> 00:15:45,839
which are a

00:15:46,399 --> 00:15:54,399
mirror of all the package

00:15:49,519 --> 00:15:54,399
used for to create your

00:15:54,560 --> 00:16:01,839
distribution your image

00:15:57,839 --> 00:16:05,519
so that later you you can

00:16:01,839 --> 00:16:09,639
reuse this

00:16:05,519 --> 00:16:13,920
package is also the

00:16:09,639 --> 00:16:13,920
image.js which is

00:16:14,399 --> 00:16:20,079
the final image that you want to use

00:16:18,480 --> 00:16:21,519
and maybe that you want to flash on your

00:16:20,079 --> 00:16:25,279
board

00:16:21,519 --> 00:16:26,280
there is several listens file

00:16:25,279 --> 00:16:29,419
to

00:16:26,280 --> 00:16:29,419
[Music]

00:16:30,000 --> 00:16:36,720
to add the listings description

00:16:33,120 --> 00:16:40,399
of all your packages

00:16:36,720 --> 00:16:44,480
for the main short fantasy through earth

00:16:40,399 --> 00:16:44,480
target etc

00:16:45,360 --> 00:16:49,440
you have the source xml file which

00:16:48,240 --> 00:16:54,170
describes

00:16:49,440 --> 00:16:55,839
all the packages and

00:16:54,170 --> 00:16:58,800
[Music]

00:16:55,839 --> 00:16:58,800
their versions

00:17:01,680 --> 00:17:08,079
this bell directory

00:17:05,360 --> 00:17:08,559
has has been made with a builder's deck

00:17:08,079 --> 00:17:12,640
option

00:17:08,559 --> 00:17:17,120
so we have also these two

00:17:12,640 --> 00:17:20,319
files the one is the

00:17:17,120 --> 00:17:24,640
an extraction of the sis route and the

00:17:20,319 --> 00:17:28,240
other is a script a locto-like script

00:17:24,640 --> 00:17:28,240
to install

00:17:28,640 --> 00:17:37,120
where you want at all chain

00:17:33,120 --> 00:17:40,320
the tall shade made with sweet

00:17:37,120 --> 00:17:40,320
sweet the

00:17:41,039 --> 00:17:48,799
image distributed in the

00:17:44,799 --> 00:17:48,799
described in the xml file

00:17:52,480 --> 00:17:55,360
so i said

00:17:55,520 --> 00:18:03,840
the description of your

00:17:58,720 --> 00:18:08,000
image is use xml file

00:18:03,840 --> 00:18:08,000
um so now we will

00:18:08,240 --> 00:18:11,520
dive into this uh

00:18:11,760 --> 00:18:14,960
um how to see it

00:18:15,280 --> 00:18:21,679
we will

00:18:18,320 --> 00:18:22,240
just explain how to what's the content

00:18:21,679 --> 00:18:25,440
of the

00:18:22,240 --> 00:18:28,960
of this xml so first

00:18:25,440 --> 00:18:32,160
there is a global node

00:18:28,960 --> 00:18:35,360
which which embrace

00:18:32,160 --> 00:18:40,880
the whole xml file so this

00:18:35,360 --> 00:18:45,120
the first have a

00:18:40,880 --> 00:18:48,160
big edger so let it like

00:18:45,120 --> 00:18:51,600
it is in the example

00:18:48,160 --> 00:18:54,640
then you have the project node

00:18:51,600 --> 00:18:58,240
this node will describe

00:18:54,640 --> 00:19:03,280
the name of the project the description

00:18:58,240 --> 00:19:07,600
on all the information of this project

00:19:03,280 --> 00:19:11,760
so also the architecture

00:19:07,600 --> 00:19:15,200
the mirror to use

00:19:11,760 --> 00:19:20,960
also where to build to download

00:19:15,200 --> 00:19:24,160
your package and uh which shoot to use

00:19:20,960 --> 00:19:27,120
and then

00:19:24,160 --> 00:19:28,240
so the interesting node is the target

00:19:27,120 --> 00:19:31,280
node

00:19:28,240 --> 00:19:34,480
it's really where you will

00:19:31,280 --> 00:19:38,160
customize and describe

00:19:34,480 --> 00:19:41,280
the contents of your

00:19:38,160 --> 00:19:44,799
image of your distribution

00:19:41,280 --> 00:19:46,559
so it have for example the password the

00:19:44,799 --> 00:19:53,039
console option

00:19:46,559 --> 00:19:56,640
um the image node so how to

00:19:53,039 --> 00:20:00,880
how will be generate your image

00:19:56,640 --> 00:20:04,320
and which file system to use

00:20:00,880 --> 00:20:06,799
and also so all the

00:20:04,320 --> 00:20:08,240
fighting the tune of your router or you

00:20:06,799 --> 00:20:11,679
of your interface

00:20:08,240 --> 00:20:14,640
will be in this node and then

00:20:11,679 --> 00:20:20,400
the list of you your package that you

00:20:14,640 --> 00:20:24,320
read that you want to install

00:20:20,400 --> 00:20:25,200
so i first have presented you the submit

00:20:24,320 --> 00:20:28,480
command

00:20:25,200 --> 00:20:31,919
to submit it's good when you want to

00:20:28,480 --> 00:20:32,720
build an image from scratch so you just

00:20:31,919 --> 00:20:35,840
have

00:20:32,720 --> 00:20:38,960
to submit the xml file and

00:20:35,840 --> 00:20:42,480
elbow will do all

00:20:38,960 --> 00:20:45,280
the builds so you just have to wait

00:20:42,480 --> 00:20:46,840
until it's end and you will have your

00:20:45,280 --> 00:20:50,000
result

00:20:46,840 --> 00:20:53,440
directory but when you want to

00:20:50,000 --> 00:20:56,880
work on this uh

00:20:53,440 --> 00:20:57,440
on your distribution you may want to not

00:20:56,880 --> 00:21:00,640
build

00:20:57,440 --> 00:21:04,799
all its times

00:21:00,640 --> 00:21:04,799
so the the

00:21:05,520 --> 00:21:17,840
the goal the good manner is to use

00:21:07,840 --> 00:21:17,840
albert control command

00:21:18,320 --> 00:21:25,280
because it will not build everything it

00:21:21,760 --> 00:21:25,280
just will update

00:21:25,679 --> 00:21:32,400
the schrode of the project

00:21:29,200 --> 00:21:36,159
and other things so

00:21:32,400 --> 00:21:40,080
to use this control

00:21:36,159 --> 00:21:44,559
command let's see an example so first

00:21:40,080 --> 00:21:48,159
you create a project

00:21:44,559 --> 00:21:51,840
um this command just to

00:21:48,159 --> 00:21:54,000
create the directory the empty directory

00:21:51,840 --> 00:21:54,640
for your project so it will center in

00:21:54,000 --> 00:21:57,600
the name

00:21:54,640 --> 00:21:58,720
you need them so it will send it will

00:21:57,600 --> 00:22:02,400
return

00:21:58,720 --> 00:22:06,320
the location of the

00:22:02,400 --> 00:22:06,320
project directory in the event

00:22:06,880 --> 00:22:13,360
then you

00:22:09,919 --> 00:22:18,960
configure so this project with

00:22:13,360 --> 00:22:18,960
the right xml file

00:22:19,039 --> 00:22:26,799
where project corresponds

00:22:22,960 --> 00:22:30,320
to the path of

00:22:26,799 --> 00:22:33,760
the project and then

00:22:30,320 --> 00:22:38,080
you can build it

00:22:33,760 --> 00:22:38,080
to build it you have to first

00:22:38,559 --> 00:22:41,600
use the build command ctrl b command and

00:22:41,120 --> 00:22:45,120
then

00:22:41,600 --> 00:22:45,120
control weight basic command

00:22:47,280 --> 00:22:51,039
when so it's the first build of your

00:22:50,240 --> 00:22:54,080
project

00:22:51,039 --> 00:22:58,240
then you may tweak the

00:22:54,080 --> 00:23:01,360
xml and just rebuild again

00:22:58,240 --> 00:23:04,240
and this will not rebuild all it just

00:23:01,360 --> 00:23:04,240
just update

00:23:04,480 --> 00:23:09,840
the schrode with new packages

00:23:09,919 --> 00:23:13,770
you can also reset your project

00:23:13,360 --> 00:23:16,849
if you

00:23:13,770 --> 00:23:16,849
[Music]

00:23:17,440 --> 00:23:25,760
if you if you add something you

00:23:21,600 --> 00:23:31,200
do not want there is a control reset

00:23:25,760 --> 00:23:31,200
and then rebuild again at least

00:23:31,840 --> 00:23:36,400
because when you use control it will not

00:23:35,039 --> 00:23:39,200
create uh

00:23:36,400 --> 00:23:39,919
output a result directory as the submit

00:23:39,200 --> 00:23:43,120
command

00:23:39,919 --> 00:23:47,840
so you need to export

00:23:43,120 --> 00:23:47,840
the file you want from the

00:23:48,320 --> 00:23:51,600
from the project directory in the init

00:23:50,640 --> 00:23:55,279
vm

00:23:51,600 --> 00:23:58,400
for that just

00:23:55,279 --> 00:23:58,400
list the

00:23:58,880 --> 00:24:07,039
file that can be exported with get files

00:24:03,440 --> 00:24:10,080
and then export it with git file

00:24:07,039 --> 00:24:10,080
without the s

00:24:14,799 --> 00:24:22,880
so now we want to customize

00:24:19,840 --> 00:24:27,360
our project

00:24:22,880 --> 00:24:27,360
our distribution um

00:24:28,480 --> 00:24:36,799
so elbow allows to

00:24:32,320 --> 00:24:36,799
tune your root reference

00:24:39,760 --> 00:24:47,840
with different way so

00:24:44,480 --> 00:24:47,840
you can

00:24:49,279 --> 00:24:56,640
you can do an overlay so

00:24:52,400 --> 00:24:57,919
just uh copy the contents of a directory

00:24:56,640 --> 00:25:01,840
uh

00:24:57,919 --> 00:25:01,840
direct in the

00:25:02,000 --> 00:25:06,400
in the schrode

00:25:04,620 --> 00:25:09,360
[Music]

00:25:06,400 --> 00:25:14,000
of course you can add as dividend

00:25:09,360 --> 00:25:16,120
package as you want

00:25:14,000 --> 00:25:17,840
you can add in the

00:25:16,120 --> 00:25:20,300
[Music]

00:25:17,840 --> 00:25:23,400
xml file different

00:25:20,300 --> 00:25:23,400
[Music]

00:25:25,120 --> 00:25:31,600
command to tweak the file system

00:25:28,159 --> 00:25:31,600
so we'll see that later

00:25:32,640 --> 00:25:39,440
and you can

00:25:36,400 --> 00:25:45,120
most importantly build your own package

00:25:39,440 --> 00:25:45,120
and add it to the xml file

00:25:48,080 --> 00:25:55,200
so first oh to

00:25:51,440 --> 00:25:58,240
two new root fs inside

00:25:55,200 --> 00:26:02,960
the xml file

00:25:58,240 --> 00:26:02,960
so it will be in the frightening node

00:26:04,240 --> 00:26:11,279
for i just took

00:26:07,760 --> 00:26:14,080
the example from the

00:26:11,279 --> 00:26:14,080
big album black

00:26:15,760 --> 00:26:23,200
file so for example

00:26:19,840 --> 00:26:27,679
you can first just copy file

00:26:23,200 --> 00:26:30,159
move file inside the the schrode

00:26:27,679 --> 00:26:30,159
there is

00:26:30,880 --> 00:26:37,600
lots of commands that have already been

00:26:34,000 --> 00:26:41,200
implemented like that

00:26:37,600 --> 00:26:44,640
and you can find it

00:26:41,200 --> 00:26:48,159
in this url

00:26:44,640 --> 00:26:48,860
you can also just do shell command for

00:26:48,159 --> 00:26:50,840
example

00:26:48,860 --> 00:26:53,919
[Music]

00:26:50,840 --> 00:26:57,600
this will just set the

00:26:53,919 --> 00:27:00,720
ubud environment

00:26:57,600 --> 00:27:00,720
so it creates a

00:27:01,520 --> 00:27:06,799
url of context that you boot will use so

00:27:06,080 --> 00:27:09,840
as a

00:27:06,799 --> 00:27:11,120
as i said you can also there is a

00:27:09,840 --> 00:27:14,159
different

00:27:11,120 --> 00:27:19,440
command so there is also rm command to

00:27:14,159 --> 00:27:24,000
remove files or directory to clean uh

00:27:19,440 --> 00:27:24,000
your distribution before the

00:27:24,640 --> 00:27:34,720
the delivery before the output delivery

00:27:29,120 --> 00:27:38,559
and um there is also a way to

00:27:34,720 --> 00:27:38,559
to tell elbow to

00:27:38,960 --> 00:27:46,240
add a special

00:27:42,080 --> 00:27:49,360
file to the list of files that

00:27:46,240 --> 00:27:53,760
you may want to export

00:27:49,360 --> 00:27:57,279
so for example um you

00:27:53,760 --> 00:27:57,279
the mlo is in the

00:27:57,360 --> 00:28:01,039
the ml of eboot is in the root fs and

00:27:59,760 --> 00:28:05,440
you want

00:28:01,039 --> 00:28:08,480
um have this file to

00:28:05,440 --> 00:28:09,840
flash it maybe in the another memory

00:28:08,480 --> 00:28:13,840
than

00:28:09,840 --> 00:28:15,679
your memory of your distribution so you

00:28:13,840 --> 00:28:20,000
may want to eye

00:28:15,679 --> 00:28:24,399
the mlo alongside your image so to do it

00:28:20,000 --> 00:28:24,399
you have to use the artifact node

00:28:27,760 --> 00:28:35,120
yes you have to so for example this

00:28:31,679 --> 00:28:37,039
to command we'd add a mlo to uh the list

00:28:35,120 --> 00:28:39,120
of uh

00:28:37,039 --> 00:28:40,080
a file that you can download on the

00:28:39,120 --> 00:28:44,559
device tree

00:28:40,080 --> 00:28:47,840
also so you

00:28:44,559 --> 00:28:50,399
so after you can use

00:28:47,840 --> 00:28:50,960
the get file the control get file

00:28:50,399 --> 00:28:55,520
command

00:28:50,960 --> 00:28:55,520
to get those files

00:28:56,880 --> 00:29:00,399
now i will present you how to add an

00:28:59,039 --> 00:29:03,120
overlay to

00:29:00,399 --> 00:29:03,120
the image

00:29:04,080 --> 00:29:08,320
so an overlay is a

00:29:08,799 --> 00:29:15,200
content of a directory that will be copy

00:29:12,480 --> 00:29:16,640
over the root file system of course at

00:29:15,200 --> 00:29:20,480
the end of it

00:29:16,640 --> 00:29:23,520
of the of the build process

00:29:20,480 --> 00:29:26,960
so for example if you want to have an

00:29:23,520 --> 00:29:30,000
ssh config and you want to

00:29:26,960 --> 00:29:33,600
copy it in your image

00:29:30,000 --> 00:29:33,600
so just create

00:29:33,919 --> 00:29:41,440
the overlay directory with

00:29:37,279 --> 00:29:44,880
the location of the ssh config

00:29:41,440 --> 00:29:48,320
of course copy it and then

00:29:44,880 --> 00:29:51,440
load the overlay directory in

00:29:48,320 --> 00:29:51,440
the xml file

00:29:51,760 --> 00:29:58,960
to do it you have to use the child

00:29:55,279 --> 00:30:02,720
s i h s h g archive

00:29:58,960 --> 00:30:06,320
command so it will

00:30:02,720 --> 00:30:07,679
load all the content of the overlay

00:30:06,320 --> 00:30:10,960
directory

00:30:07,679 --> 00:30:14,960
in the project xml file

00:30:10,960 --> 00:30:20,559
in a encoded

00:30:14,960 --> 00:30:24,080
style so it's a base64 encoded

00:30:20,559 --> 00:30:27,120
um and then you will see in the project

00:30:24,080 --> 00:30:30,799
xml node archive

00:30:27,120 --> 00:30:37,840
with the content of

00:30:30,799 --> 00:30:37,840
the overlay directory

00:30:38,480 --> 00:30:45,840
um an is it an easy trick is to add uh

00:30:42,720 --> 00:30:48,880
to add a debian package so the

00:30:45,840 --> 00:30:50,480
list of uh as i said the lifts of all

00:30:48,880 --> 00:30:54,240
the packages

00:30:50,480 --> 00:30:57,600
of the image are in the package list

00:30:54,240 --> 00:31:01,120
node so you just have to

00:30:57,600 --> 00:31:01,120
add like this

00:31:01,440 --> 00:31:08,480
like open server to the package list

00:31:04,559 --> 00:31:08,480
package list node like this

00:31:11,410 --> 00:31:14,569
[Music]

00:31:14,720 --> 00:31:22,080
now we will look how

00:31:18,000 --> 00:31:25,600
to build your own package

00:31:22,080 --> 00:31:28,780
with other so um

00:31:25,600 --> 00:31:28,780
[Music]

00:31:29,519 --> 00:31:39,279
it is important step if you want to

00:31:33,360 --> 00:31:39,279
to do a debian for your own

00:31:39,440 --> 00:31:43,519
board so you will need to add a

00:31:42,240 --> 00:31:47,440
bootloader

00:31:43,519 --> 00:31:50,159
on the kernel specify

00:31:47,440 --> 00:31:50,159
to this board

00:31:51,039 --> 00:31:56,799
so you have to add one of these

00:31:55,270 --> 00:31:58,799
[Music]

00:31:56,799 --> 00:32:01,600
you have to create one of this package

00:31:58,799 --> 00:32:04,960
and add it to album

00:32:01,600 --> 00:32:07,039
you can also use whatever package you

00:32:04,960 --> 00:32:10,159
want for example in my

00:32:07,039 --> 00:32:14,960
in one of my projects i need to

00:32:10,159 --> 00:32:18,640
rebuild qt um

00:32:14,960 --> 00:32:23,440
so uh it take a bit

00:32:18,640 --> 00:32:23,440
of times but uh i maintained to do it

00:32:26,840 --> 00:32:32,640
dude

00:32:29,519 --> 00:32:36,799
so the different steps to

00:32:32,640 --> 00:32:40,080
do it is uh first to debianize

00:32:36,799 --> 00:32:44,799
the the source code

00:32:40,080 --> 00:32:44,799
of the package you want to make

00:32:45,039 --> 00:32:47,519
and

00:32:48,640 --> 00:32:56,240
then to add so

00:32:51,919 --> 00:32:57,679
this stabilized package to the image and

00:32:56,240 --> 00:33:01,440
then to build

00:32:57,679 --> 00:33:04,000
the package with album so first

00:33:01,440 --> 00:33:04,880
how to debianize your source of your

00:33:04,000 --> 00:33:08,960
package

00:33:04,880 --> 00:33:11,919
and for some well-known package on the

00:33:08,960 --> 00:33:14,000
well used package so like a good beer

00:33:11,919 --> 00:33:17,679
box or linux

00:33:14,000 --> 00:33:21,760
alba have already script

00:33:17,679 --> 00:33:21,760
that automatize

00:33:23,360 --> 00:33:26,799
this ui display

00:33:25,330 --> 00:33:30,000
[Music]

00:33:26,799 --> 00:33:30,000
industrial display you can

00:33:30,480 --> 00:33:39,440
configure so the version the name

00:33:34,080 --> 00:33:43,120
and other option of of the packages

00:33:39,440 --> 00:33:48,080
so for example in the linux

00:33:43,120 --> 00:33:51,840
you for linux you you can

00:33:48,080 --> 00:33:55,120
choose the dev config the architecture

00:33:51,840 --> 00:33:55,120
the release etc

00:33:55,279 --> 00:33:59,829
after you

00:33:56,700 --> 00:33:59,829
[Music]

00:34:00,480 --> 00:34:04,559
complete all this configuration

00:34:04,960 --> 00:34:11,839
alba will trade the debian

00:34:08,320 --> 00:34:15,040
repository inside the um

00:34:11,839 --> 00:34:18,480
package so here linux so the

00:34:15,040 --> 00:34:23,359
for example for linux it will create

00:34:18,480 --> 00:34:23,359
all of those files

00:34:23,440 --> 00:34:30,639
as i said for linux it's already

00:34:26,720 --> 00:34:30,639
scripted so uh

00:34:30,879 --> 00:34:38,159
normally if you just configure

00:34:34,639 --> 00:34:43,520
this ui correctly you will

00:34:38,159 --> 00:34:43,520
have a usable debian directory

00:34:47,520 --> 00:34:51,280
then when you have an usable debian

00:34:50,399 --> 00:34:56,560
directory

00:34:51,280 --> 00:34:56,560
so your packages is demonized you can

00:34:58,480 --> 00:35:04,320
build the build

00:35:01,680 --> 00:35:04,320
your package

00:35:05,119 --> 00:35:12,800
uh just forget so to

00:35:09,280 --> 00:35:15,760
sorry we will see how to build it later

00:35:12,800 --> 00:35:18,320
for all the packages like for other

00:35:15,760 --> 00:35:18,320
packages

00:35:21,599 --> 00:35:28,720
other than linux on the

00:35:25,520 --> 00:35:32,800
reboot or their box

00:35:28,720 --> 00:35:35,920
you have to debianize the package

00:35:32,800 --> 00:35:41,150
manually so

00:35:35,920 --> 00:35:43,359
for that you have to create

00:35:41,150 --> 00:35:46,560
[Music]

00:35:43,359 --> 00:35:50,320
you have to create um

00:35:46,560 --> 00:35:54,400
four uh recalls requisite

00:35:50,320 --> 00:35:58,960
uh files so changelog control

00:35:54,400 --> 00:36:02,160
source and copyright uh

00:35:58,960 --> 00:36:05,839
it's required to uh

00:36:02,160 --> 00:36:09,760
to be nice properly your package

00:36:05,839 --> 00:36:09,760
for that uh you can see

00:36:10,560 --> 00:36:19,200
this uh url uh and it is it will explain

00:36:14,640 --> 00:36:19,200
how to do it but uh

00:36:20,240 --> 00:36:28,240
it's easier to use or inspire

00:36:24,720 --> 00:36:29,680
inspire to from um an already debianized

00:36:28,240 --> 00:36:32,480
package

00:36:29,680 --> 00:36:34,240
because the debian as a package from

00:36:32,480 --> 00:36:37,359
scratch

00:36:34,240 --> 00:36:37,359
is not so easy

00:36:37,920 --> 00:36:46,000
so um how to build your package

00:36:42,640 --> 00:36:49,200
once it is debianized you

00:36:46,000 --> 00:36:49,200
may want to build it

00:36:50,079 --> 00:36:52,880
to build it

00:36:53,280 --> 00:36:59,599
you have to use elba

00:36:56,400 --> 00:37:01,440
builder command now pebble builder

00:36:59,599 --> 00:37:05,520
create a schroeder in the initial

00:37:01,440 --> 00:37:08,560
on the all the package that will be

00:37:05,520 --> 00:37:11,359
built will be a built inside

00:37:08,560 --> 00:37:11,359
this shoot

00:37:11,680 --> 00:37:20,839
so you use the command lbs

00:37:17,440 --> 00:37:23,680
and uh it will return

00:37:20,839 --> 00:37:26,960
the

00:37:23,680 --> 00:37:29,550
the file project prg

00:37:26,960 --> 00:37:31,440
which will return the

00:37:29,550 --> 00:37:34,839
[Music]

00:37:31,440 --> 00:37:38,030
the path of the

00:37:34,839 --> 00:37:41,280
project so

00:37:38,030 --> 00:37:41,280
[Music]

00:37:42,400 --> 00:37:49,680
so if you want to build your packages

00:37:45,760 --> 00:37:53,280
you create the short

00:37:49,680 --> 00:37:56,320
you go inside the

00:37:53,280 --> 00:38:00,960
repository no the directory sorry

00:37:56,320 --> 00:38:00,960
of your packages and

00:38:02,560 --> 00:38:08,560
you run the

00:38:05,760 --> 00:38:10,079
paybuilder build command to build your

00:38:08,560 --> 00:38:13,119
packages

00:38:10,079 --> 00:38:16,160
you can point it to the

00:38:13,119 --> 00:38:20,240
output directory

00:38:16,160 --> 00:38:22,400
created before and um

00:38:20,240 --> 00:38:23,760
in the output directory you will have

00:38:22,400 --> 00:38:26,000
the

00:38:23,760 --> 00:38:26,000
the

00:38:27,520 --> 00:38:34,720
the dot deb files

00:38:31,520 --> 00:38:35,520
of your packages so for linux you will

00:38:34,720 --> 00:38:38,560
have a

00:38:35,520 --> 00:38:39,359
linux azure linux image on linux libsy

00:38:38,560 --> 00:38:41,920
dev

00:38:39,359 --> 00:38:41,920
packages

00:38:43,119 --> 00:38:49,839
when you use pablj build command you can

00:38:46,480 --> 00:38:54,160
use cross option and

00:38:49,839 --> 00:38:54,160
this option will enable cross building

00:38:55,760 --> 00:39:02,000
so it will increase

00:38:58,880 --> 00:39:04,720
the speed of the

00:39:02,000 --> 00:39:04,720
build process

00:39:05,280 --> 00:39:07,520
this

00:39:10,640 --> 00:39:18,000
now now the

00:39:14,400 --> 00:39:20,320
now your packages has been built

00:39:18,000 --> 00:39:20,320
um

00:39:21,280 --> 00:39:24,480
you it

00:39:25,040 --> 00:39:29,680
it has been automatically added to the

00:39:28,160 --> 00:39:32,720
repository of

00:39:29,680 --> 00:39:35,760
the projects so

00:39:32,720 --> 00:39:39,280
you just need to

00:39:35,760 --> 00:39:42,960
add it to the list of the package

00:39:39,280 --> 00:39:45,040
so for example you can just

00:39:42,960 --> 00:39:47,440
add a linux image to the list of your

00:39:45,040 --> 00:39:47,440
package

00:39:48,800 --> 00:39:55,760
but in a project

00:39:53,119 --> 00:39:56,480
that you do not in a project that where

00:39:55,760 --> 00:39:59,520
you do not

00:39:56,480 --> 00:40:02,880
run albert builder so

00:39:59,520 --> 00:40:02,880
it's in a hunty project

00:40:05,040 --> 00:40:13,280
you can just add the description

00:40:08,839 --> 00:40:17,359
in in the

00:40:13,280 --> 00:40:21,040
xml file and

00:40:17,359 --> 00:40:26,480
albert will know that he will have to

00:40:21,040 --> 00:40:29,680
build it so in the pebble dr node

00:40:26,480 --> 00:40:29,680
you just have to add

00:40:30,000 --> 00:40:38,240
the url of

00:40:34,800 --> 00:40:40,480
of your source of your packages

00:40:38,240 --> 00:40:40,480
but

00:40:42,720 --> 00:40:51,040
like that for now elba

00:40:47,599 --> 00:40:53,839
do not there is no way to build to cross

00:40:51,040 --> 00:40:53,839
build the package

00:40:55,040 --> 00:41:02,240
in the actual elbow version

00:40:58,640 --> 00:41:03,359
um there are parts purchased in the on

00:41:02,240 --> 00:41:07,200
the mailing list to

00:41:03,359 --> 00:41:11,760
enable a grass compilation

00:41:07,200 --> 00:41:11,760
and the um on the xml file

00:41:19,599 --> 00:41:25,200
so now you know how to build your

00:41:22,800 --> 00:41:26,079
own package to debianize build your

00:41:25,200 --> 00:41:29,200
package and

00:41:26,079 --> 00:41:34,640
uh to add it to your

00:41:29,200 --> 00:41:38,400
description of your project

00:41:34,640 --> 00:41:41,920
when you create a new project you may

00:41:38,400 --> 00:41:43,680
not want to build the package a second

00:41:41,920 --> 00:41:46,000
time

00:41:43,680 --> 00:41:46,000
so

00:41:46,960 --> 00:41:53,599
uh for that uh i'll just give you a tip

00:41:50,480 --> 00:41:57,280
to avoid uh to rebuild

00:41:53,599 --> 00:42:01,200
your packages and so uh

00:41:57,280 --> 00:42:04,560
you have the output directory

00:42:01,200 --> 00:42:10,480
fill filled with the

00:42:04,560 --> 00:42:10,480
deb packages so you just have to

00:42:10,720 --> 00:42:18,000
add edit with the elbe project repo

00:42:14,560 --> 00:42:20,000
upload command so uh just

00:42:18,000 --> 00:42:22,000
the example is like that so you create

00:42:20,000 --> 00:42:26,160
an empty project

00:42:22,000 --> 00:42:26,160
you configure it with the

00:42:26,240 --> 00:42:35,839
description xml file then you go on the

00:42:31,599 --> 00:42:39,520
directory where the packages

00:42:35,839 --> 00:42:39,520
are and you just

00:42:40,160 --> 00:42:43,599
add it to your actual project to the

00:42:43,119 --> 00:42:46,880
actual

00:42:43,599 --> 00:42:50,160
to the new project and

00:42:46,880 --> 00:42:59,839
you'll build your project with the

00:42:50,160 --> 00:42:59,839
two command builds on white busy

00:43:01,280 --> 00:43:07,920
so elbow as i

00:43:05,520 --> 00:43:10,839
said at the beginning of this talk elbow

00:43:07,920 --> 00:43:12,640
can generate a

00:43:10,839 --> 00:43:14,960
sdk

00:43:12,640 --> 00:43:18,319
which provides cross compare compiler

00:43:14,960 --> 00:43:18,319
and liberate you to build

00:43:18,960 --> 00:43:23,920
whatever application you want so to

00:43:24,960 --> 00:43:28,319
to do it you just have to add the build

00:43:27,760 --> 00:43:31,599
sdk

00:43:28,319 --> 00:43:34,880
option uh on the sub

00:43:31,599 --> 00:43:38,160
elbow submit command or uh you have also

00:43:34,880 --> 00:43:41,839
uh uh a build sdk in

00:43:38,160 --> 00:43:41,839
the help control command

00:43:42,079 --> 00:43:46,480
and so you will have for example for our

00:43:44,800 --> 00:43:48,960
mobile 2 you will have the

00:43:46,480 --> 00:43:48,960
script

00:43:49,920 --> 00:43:59,760
that uses your like script

00:43:54,079 --> 00:43:59,760
that will generate the the tools chain

00:44:01,359 --> 00:44:07,359
and you can add

00:44:04,880 --> 00:44:09,839
for example if you want to add a q make

00:44:07,359 --> 00:44:09,839
to the

00:44:11,040 --> 00:44:15,520
host part of the tool chain you can add

00:44:14,640 --> 00:44:18,960
it

00:44:15,520 --> 00:44:21,920
with the host package list node

00:44:18,960 --> 00:44:23,520
so this for example this will it will

00:44:21,920 --> 00:44:27,440
add

00:44:23,520 --> 00:44:31,760
to make the binary of q make and

00:44:27,440 --> 00:44:31,760
its devtools to the

00:44:32,480 --> 00:44:38,720
to the first part

00:44:36,000 --> 00:44:38,720
of the door chain

00:44:40,400 --> 00:44:45,920
so i think that's all yes it's time for

00:44:43,440 --> 00:44:45,920
conclusion

00:44:46,560 --> 00:44:53,520
so we can see that elbow is really an

00:44:50,560 --> 00:44:53,520
interesting tool

00:44:56,240 --> 00:45:00,560
it's uh it's reef friendly because it's

00:45:00,000 --> 00:45:04,960
only

00:45:00,560 --> 00:45:07,920
one xml file that describe

00:45:04,960 --> 00:45:08,720
all the distribution on all the image

00:45:07,920 --> 00:45:12,480
generation

00:45:08,720 --> 00:45:16,880
and the file system etc

00:45:12,480 --> 00:45:20,720
so it's all in one xml file

00:45:16,880 --> 00:45:24,960
it's uh easily customizable

00:45:20,720 --> 00:45:28,640
even if the debianized part

00:45:24,960 --> 00:45:31,680
uh can be quite hard

00:45:28,640 --> 00:45:35,359
and painful but

00:45:31,680 --> 00:45:39,200
it's for your first packages after

00:45:35,359 --> 00:45:42,079
several times your debian

00:45:39,200 --> 00:45:42,079
you get used to it

00:45:42,720 --> 00:45:44,880
so

00:45:45,839 --> 00:45:51,839
good for for this

00:45:49,040 --> 00:45:52,720
for have a distribution like debian with

00:45:51,839 --> 00:45:55,040
uh

00:45:52,720 --> 00:45:55,040
under

00:45:56,240 --> 00:46:01,440
and access all the important secure

00:46:00,960 --> 00:46:05,760
patch

00:46:01,440 --> 00:46:05,760
that debian purpose

00:46:05,920 --> 00:46:10,319
so here is the references

00:46:11,440 --> 00:46:18,560
for learn about elbe on the

00:46:14,560 --> 00:46:18,560
other presentation like this one

00:46:19,599 --> 00:46:23,280
so now if you have

00:46:23,440 --> 00:46:38,240
any question suggestions and comments

00:46:27,680 --> 00:46:38,240

YouTube URL: https://www.youtube.com/watch?v=BwHzyCGB7As


