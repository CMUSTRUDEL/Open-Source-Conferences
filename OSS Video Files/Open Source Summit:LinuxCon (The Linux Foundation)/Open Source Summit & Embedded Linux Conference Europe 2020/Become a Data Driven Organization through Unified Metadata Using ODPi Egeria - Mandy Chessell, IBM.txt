Title: Become a Data Driven Organization through Unified Metadata Using ODPi Egeria - Mandy Chessell, IBM
Publication date: 2020-10-29
Playlist: Open Source Summit & Embedded Linux Conference Europe 2020
Description: 
	Become a Data Driven Organization through Unified Metadata Using ODPi Egeria - Mandy Chessell, IBM
Captions: 
	00:00:07,279 --> 00:00:09,679
hello

00:00:08,000 --> 00:00:11,679
my name is mandy chessel and i'm the

00:00:09,679 --> 00:00:13,200
speaker for the next session

00:00:11,679 --> 00:00:15,200
in this session i'd like to talk about

00:00:13,200 --> 00:00:16,800
becoming a data-driven organization

00:00:15,200 --> 00:00:18,480
using a particular technology called

00:00:16,800 --> 00:00:20,400
odpi algeria

00:00:18,480 --> 00:00:21,520
this is a linux foundation open source

00:00:20,400 --> 00:00:23,920
project

00:00:21,520 --> 00:00:25,840
and we're certainly looking for more

00:00:23,920 --> 00:00:26,800
people to get involved so if you find

00:00:25,840 --> 00:00:30,640
this interesting

00:00:26,800 --> 00:00:33,360
please get in touch

00:00:30,640 --> 00:00:35,120
so what the what's all this about um

00:00:33,360 --> 00:00:37,040
many organizations over the last six

00:00:35,120 --> 00:00:40,079
months have discovered that

00:00:37,040 --> 00:00:41,360
um when in times of crisis they need to

00:00:40,079 --> 00:00:44,000
act quickly

00:00:41,360 --> 00:00:46,320
to re-establish themselves in a new

00:00:44,000 --> 00:00:47,840
world that they find themselves in

00:00:46,320 --> 00:00:50,000
and in general that involves

00:00:47,840 --> 00:00:52,079
understanding the resources they have

00:00:50,000 --> 00:00:54,399
where they're located where what status

00:00:52,079 --> 00:00:57,520
they are and how healthy they are

00:00:54,399 --> 00:01:01,199
and then be able to redirect them to

00:00:57,520 --> 00:01:01,199
new opportunities

00:01:01,440 --> 00:01:04,479
and many organizations have also found

00:01:03,120 --> 00:01:06,720
that that's actually harder

00:01:04,479 --> 00:01:08,720
than they expected and the reason is

00:01:06,720 --> 00:01:11,119
that throughout the organization

00:01:08,720 --> 00:01:13,119
professionals are working together using

00:01:11,119 --> 00:01:15,040
specialized tools

00:01:13,119 --> 00:01:16,960
to achieve the jobs that they do and

00:01:15,040 --> 00:01:20,159
they're organized in the way

00:01:16,960 --> 00:01:22,159
that supports today's business when the

00:01:20,159 --> 00:01:24,159
business needs to change

00:01:22,159 --> 00:01:25,280
obviously that organization needs to be

00:01:24,159 --> 00:01:27,200
re-established

00:01:25,280 --> 00:01:29,360
but unfortunately all the knowledge of

00:01:27,200 --> 00:01:31,600
those teams is locked into

00:01:29,360 --> 00:01:33,280
the tools that they were using which

00:01:31,600 --> 00:01:36,400
makes that reorganization

00:01:33,280 --> 00:01:39,520
much harder so what we're looking to do

00:01:36,400 --> 00:01:41,040
is to enable an organization to link

00:01:39,520 --> 00:01:42,960
their tools together

00:01:41,040 --> 00:01:44,159
irrespective of the vendor that they

00:01:42,960 --> 00:01:46,000
bought them from where they're open

00:01:44,159 --> 00:01:48,320
source they've been bought

00:01:46,000 --> 00:01:49,360
by a um you know brought for a specific

00:01:48,320 --> 00:01:51,360
purpose

00:01:49,360 --> 00:01:55,119
and allow that knowledge to flow between

00:01:51,360 --> 00:01:57,119
the tools as appropriate

00:01:55,119 --> 00:01:59,040
so i thought i would give you an example

00:01:57,119 --> 00:02:00,479
of what this could look like in an

00:01:59,040 --> 00:02:03,360
organization

00:02:00,479 --> 00:02:06,159
so many organizations have what we've

00:02:03,360 --> 00:02:09,119
described here as an encoded vocabulary

00:02:06,159 --> 00:02:10,640
so this is a glossary of the terminology

00:02:09,119 --> 00:02:13,280
used by the business

00:02:10,640 --> 00:02:15,200
that actually describes the data that

00:02:13,280 --> 00:02:16,879
they use so for example they might talk

00:02:15,200 --> 00:02:20,560
about customers

00:02:16,879 --> 00:02:22,959
and customer names and customer status

00:02:20,560 --> 00:02:24,959
all of these terms are often with are

00:02:22,959 --> 00:02:28,319
also reflected in the data

00:02:24,959 --> 00:02:30,800
um that the organization stores and so

00:02:28,319 --> 00:02:31,680
um it becomes a very useful way of

00:02:30,800 --> 00:02:33,840
describing

00:02:31,680 --> 00:02:34,800
the types of data that the organization

00:02:33,840 --> 00:02:38,239
needs to

00:02:34,800 --> 00:02:39,599
to um support and so you can then take

00:02:38,239 --> 00:02:42,319
that glossary

00:02:39,599 --> 00:02:43,680
um and and talk to to experts in the

00:02:42,319 --> 00:02:46,720
business and say well

00:02:43,680 --> 00:02:48,879
how should a customer's address

00:02:46,720 --> 00:02:50,640
be handled who should be allowed to see

00:02:48,879 --> 00:02:52,480
it um

00:02:50,640 --> 00:02:54,239
that type of question can then be

00:02:52,480 --> 00:02:56,239
attached to another

00:02:54,239 --> 00:02:58,159
answer i should say can then be attached

00:02:56,239 --> 00:03:00,239
to the vocabulary

00:02:58,159 --> 00:03:02,080
now if we then think about data

00:03:00,239 --> 00:03:05,280
structures in databases

00:03:02,080 --> 00:03:07,519
or passing through apis they often have

00:03:05,280 --> 00:03:09,440
what we call a schema which describes

00:03:07,519 --> 00:03:10,319
the data fields that are passed across

00:03:09,440 --> 00:03:13,680
that

00:03:10,319 --> 00:03:16,879
if we then take that schema and attach

00:03:13,680 --> 00:03:19,200
terms to it we're basically saying that

00:03:16,879 --> 00:03:22,640
the data in this field

00:03:19,200 --> 00:03:24,879
means this to the business and

00:03:22,640 --> 00:03:27,280
because the business has attached the

00:03:24,879 --> 00:03:29,120
classification or the rules effectively

00:03:27,280 --> 00:03:30,080
associated with managing that type of

00:03:29,120 --> 00:03:32,159
data

00:03:30,080 --> 00:03:34,400
we now know how the data should be

00:03:32,159 --> 00:03:37,519
managed

00:03:34,400 --> 00:03:37,840
now we can ask developers to look this

00:03:37,519 --> 00:03:40,159
up

00:03:37,840 --> 00:03:41,360
as they're coding say a new api or a new

00:03:40,159 --> 00:03:43,680
database

00:03:41,360 --> 00:03:45,280
but it would be so much better that when

00:03:43,680 --> 00:03:46,640
they're working with their chosen

00:03:45,280 --> 00:03:50,400
developer tool

00:03:46,640 --> 00:03:52,720
that their activities automatically

00:03:50,400 --> 00:03:55,200
pull in that knowledge so they can do

00:03:52,720 --> 00:03:58,560
everything from the tool that they love

00:03:55,200 --> 00:04:00,159
so one example we have is where

00:03:58,560 --> 00:04:03,120
developers were using the swagger

00:04:00,159 --> 00:04:05,439
tooling to develop new apis

00:04:03,120 --> 00:04:07,200
there's a search box put in that tool

00:04:05,439 --> 00:04:09,200
that allows them to say okay

00:04:07,200 --> 00:04:11,200
type in say customer because they want

00:04:09,200 --> 00:04:12,319
to create an api that passes customer

00:04:11,200 --> 00:04:15,360
data

00:04:12,319 --> 00:04:16,400
the tool then uses a link to the

00:04:15,360 --> 00:04:18,880
metadata

00:04:16,400 --> 00:04:19,600
to the marked up schema to create the

00:04:18,880 --> 00:04:23,360
payload

00:04:19,600 --> 00:04:24,560
for that particular part of the api

00:04:23,360 --> 00:04:26,000
and so the developer's very happy

00:04:24,560 --> 00:04:27,600
because i haven't had to type it in and

00:04:26,000 --> 00:04:29,680
they know that structure

00:04:27,600 --> 00:04:31,360
is exactly what the business needs

00:04:29,680 --> 00:04:33,919
haven't forgotten anything

00:04:31,360 --> 00:04:34,880
it's all spelled consistently and that's

00:04:33,919 --> 00:04:38,080
really good

00:04:34,880 --> 00:04:39,919
but the other thing is that that schema

00:04:38,080 --> 00:04:41,440
is actually marked up with the knowledge

00:04:39,919 --> 00:04:42,000
from the vocabulary because we've

00:04:41,440 --> 00:04:45,919
created that

00:04:42,000 --> 00:04:47,440
integration so the developer finishes

00:04:45,919 --> 00:04:50,479
their work and they may have created a

00:04:47,440 --> 00:04:52,479
database in the same manner as the api

00:04:50,479 --> 00:04:53,680
and that then goes into the devops

00:04:52,479 --> 00:04:55,919
pipeline

00:04:53,680 --> 00:04:57,919
now those tags are machine readable so

00:04:55,919 --> 00:04:58,800
the devops pipeline could use those to

00:04:57,919 --> 00:05:01,919
determine

00:04:58,800 --> 00:05:04,080
whether they're sensitive data in the

00:05:01,919 --> 00:05:05,520
apis in the database and if it is maybe

00:05:04,080 --> 00:05:06,240
there are extra tests that need to be

00:05:05,520 --> 00:05:08,960
run

00:05:06,240 --> 00:05:11,280
or the deployment needs to go to a

00:05:08,960 --> 00:05:13,919
specific secure environment

00:05:11,280 --> 00:05:15,280
so again we're extending the value of

00:05:13,919 --> 00:05:17,520
the work that was done

00:05:15,280 --> 00:05:18,880
in encoding the original vocabulary

00:05:17,520 --> 00:05:22,400
because we are

00:05:18,880 --> 00:05:23,919
including another tool um or basically

00:05:22,400 --> 00:05:25,440
passing that knowledge on to another

00:05:23,919 --> 00:05:28,479
tool in our chain

00:05:25,440 --> 00:05:31,039
here that i'm sharing so now we've gone

00:05:28,479 --> 00:05:32,400
through and helped the developer and the

00:05:31,039 --> 00:05:35,520
devops team

00:05:32,400 --> 00:05:37,199
from the work of the business

00:05:35,520 --> 00:05:38,639
and we've got greater assurance that

00:05:37,199 --> 00:05:41,360
actually what's being deployed is

00:05:38,639 --> 00:05:43,840
actually what the business specified

00:05:41,360 --> 00:05:46,000
now let's think about some time passing

00:05:43,840 --> 00:05:47,440
so this application has been running

00:05:46,000 --> 00:05:50,160
in production for a while and is

00:05:47,440 --> 00:05:51,919
producing a lot of very valuable data

00:05:50,160 --> 00:05:53,759
and so they want to do some analytics

00:05:51,919 --> 00:05:55,199
some ai may be on it

00:05:53,759 --> 00:05:56,880
um and the first thing that needs to

00:05:55,199 --> 00:05:58,639
happen is that the data scientists need

00:05:56,880 --> 00:06:00,479
access to that data

00:05:58,639 --> 00:06:02,400
so that they can experiment and look for

00:06:00,479 --> 00:06:05,039
patterns within it

00:06:02,400 --> 00:06:06,080
and that's um knowledge needed to

00:06:05,039 --> 00:06:09,120
configure the

00:06:06,080 --> 00:06:11,039
analytics that they want to run now

00:06:09,120 --> 00:06:12,319
obviously there may be very sensitive

00:06:11,039 --> 00:06:16,479
personal data in

00:06:12,319 --> 00:06:19,520
in the application and so when that

00:06:16,479 --> 00:06:20,400
data is is passed to the data scientists

00:06:19,520 --> 00:06:24,479
it may need

00:06:20,400 --> 00:06:28,240
to be filtered or um some of it uh

00:06:24,479 --> 00:06:30,240
even encrypted or

00:06:28,240 --> 00:06:32,639
some sort of transformation happening to

00:06:30,240 --> 00:06:34,639
it to hide the personal information

00:06:32,639 --> 00:06:36,240
without destroying the ability to do the

00:06:34,639 --> 00:06:38,080
analysis

00:06:36,240 --> 00:06:40,560
and again this is where that original

00:06:38,080 --> 00:06:43,120
metadata becomes so valuable because

00:06:40,560 --> 00:06:44,560
we actually know what the data is in the

00:06:43,120 --> 00:06:46,160
database because it's been linked to

00:06:44,560 --> 00:06:48,800
those terms indirectly through the

00:06:46,160 --> 00:06:52,080
devops pipeline process

00:06:48,800 --> 00:06:52,639
so the data scientist gets data that not

00:06:52,080 --> 00:06:55,840
only

00:06:52,639 --> 00:06:56,479
is uh sort of safe for them to use but

00:06:55,840 --> 00:06:59,440
also

00:06:56,479 --> 00:07:01,120
is tagged with the real meaning of the

00:06:59,440 --> 00:07:02,800
data in each field

00:07:01,120 --> 00:07:04,240
so they're not having to waste a lot of

00:07:02,800 --> 00:07:06,639
time guessing

00:07:04,240 --> 00:07:08,720
or trying to find somebody who can tell

00:07:06,639 --> 00:07:09,520
them exactly what the data means in each

00:07:08,720 --> 00:07:12,639
field

00:07:09,520 --> 00:07:15,840
so their work is speeded up

00:07:12,639 --> 00:07:16,800
because they have this extra knowledge

00:07:15,840 --> 00:07:19,680
so what i hope

00:07:16,800 --> 00:07:20,319
i've shown you is that as you add in a

00:07:19,680 --> 00:07:22,400
new tool

00:07:20,319 --> 00:07:23,599
and as you share this knowledge between

00:07:22,400 --> 00:07:26,639
the tools

00:07:23,599 --> 00:07:27,919
each person in the chain becomes more

00:07:26,639 --> 00:07:30,880
effective

00:07:27,919 --> 00:07:33,199
and their work adds new knowledge that

00:07:30,880 --> 00:07:35,360
can then be consumed by others

00:07:33,199 --> 00:07:37,599
and the way that people work in an

00:07:35,360 --> 00:07:41,039
organization is not a straight flow

00:07:37,599 --> 00:07:41,919
it's more of a network and so the value

00:07:41,039 --> 00:07:44,560
that

00:07:41,919 --> 00:07:45,599
one team gives through sharing their

00:07:44,560 --> 00:07:48,800
metadata

00:07:45,599 --> 00:07:52,000
comes back in another form to them

00:07:48,800 --> 00:07:54,080
um as uh additional knowledge that's

00:07:52,000 --> 00:07:55,919
been attached to what they contributed

00:07:54,080 --> 00:07:58,479
comes back to them so the whole

00:07:55,919 --> 00:08:00,800
organization becomes more effective

00:07:58,479 --> 00:08:02,160
uh it's much more transparent as to

00:08:00,800 --> 00:08:04,879
what's going on

00:08:02,160 --> 00:08:05,599
um and so the company is able to be more

00:08:04,879 --> 00:08:09,039
collaborative

00:08:05,599 --> 00:08:10,160
and more agile in terms you know in

00:08:09,039 --> 00:08:13,840
times of challenge

00:08:10,160 --> 00:08:13,840
as as we are in today

00:08:14,000 --> 00:08:20,080
so what does odpi algeria do um

00:08:17,199 --> 00:08:22,639
the major role is to support those blue

00:08:20,080 --> 00:08:26,160
arrows to support that exchange

00:08:22,639 --> 00:08:28,160
between tools and processes that

00:08:26,160 --> 00:08:30,160
they come from different technology and

00:08:28,160 --> 00:08:32,640
support different professions

00:08:30,160 --> 00:08:34,320
within the organization and as i say

00:08:32,640 --> 00:08:37,039
it's all about

00:08:34,320 --> 00:08:39,039
that building that knowledge base and

00:08:37,039 --> 00:08:40,000
using it to make decisions throughout

00:08:39,039 --> 00:08:42,560
the organization

00:08:40,000 --> 00:08:45,519
to recruit increased agility and

00:08:42,560 --> 00:08:45,519
collaboration

00:08:45,920 --> 00:08:51,680
now the the cynical among us um

00:08:49,920 --> 00:08:53,680
and i was certainly one when we started

00:08:51,680 --> 00:08:54,880
this is that there have been many

00:08:53,680 --> 00:08:57,120
attempts to try

00:08:54,880 --> 00:08:58,240
and share metadata you know we've had

00:08:57,120 --> 00:09:00,320
standards

00:08:58,240 --> 00:09:02,240
we've had approaches where there's a

00:09:00,320 --> 00:09:03,920
single centralized metadata repository

00:09:02,240 --> 00:09:07,440
that everybody uses

00:09:03,920 --> 00:09:08,720
we've had vendors try to create a suite

00:09:07,440 --> 00:09:11,040
of tools

00:09:08,720 --> 00:09:12,720
which that you'll use the same metadata

00:09:11,040 --> 00:09:13,120
repository so that they are sharing it

00:09:12,720 --> 00:09:14,720
and

00:09:13,120 --> 00:09:16,240
and that works very well but it's a

00:09:14,720 --> 00:09:18,560
limited scope it doesn't cover

00:09:16,240 --> 00:09:22,000
everything that the organization needs

00:09:18,560 --> 00:09:25,200
to do um and you know there are other

00:09:22,000 --> 00:09:26,560
um tools that copy um just

00:09:25,200 --> 00:09:28,959
copy you know sort of like a cut and

00:09:26,560 --> 00:09:31,440
paste between different tools which

00:09:28,959 --> 00:09:32,000
um sort of does help initially but the

00:09:31,440 --> 00:09:35,040
um

00:09:32,000 --> 00:09:36,640
the copies tend to diverge over time so

00:09:35,040 --> 00:09:38,880
that so there are

00:09:36,640 --> 00:09:42,080
many attempts because this is this is an

00:09:38,880 --> 00:09:45,040
extremely valuable capability to have

00:09:42,080 --> 00:09:45,440
um and so why do we think that nigeria

00:09:45,040 --> 00:09:48,880
is

00:09:45,440 --> 00:09:51,839
uh different and special the major

00:09:48,880 --> 00:09:54,880
reason is that we decided not to do it

00:09:51,839 --> 00:09:57,519
as a single company effort we decided to

00:09:54,880 --> 00:10:00,720
work with the linux foundation to create

00:09:57,519 --> 00:10:03,200
an open environment where vendors and

00:10:00,720 --> 00:10:04,320
different organizations that need to use

00:10:03,200 --> 00:10:06,640
this technology

00:10:04,320 --> 00:10:07,440
can come together and work through the

00:10:06,640 --> 00:10:10,480
problem

00:10:07,440 --> 00:10:13,680
and build a solution that works for all

00:10:10,480 --> 00:10:15,600
uh we um there were no

00:10:13,680 --> 00:10:17,200
and that sort of led to a number of very

00:10:15,600 --> 00:10:19,360
key technical

00:10:17,200 --> 00:10:21,279
requirements and the first is that it's

00:10:19,360 --> 00:10:25,279
fair that there is no

00:10:21,279 --> 00:10:27,200
controlling technology it's peer-to-peer

00:10:25,279 --> 00:10:28,720
and it's designed on retaining the value

00:10:27,200 --> 00:10:30,480
of each technology

00:10:28,720 --> 00:10:32,160
so the technologies support different

00:10:30,480 --> 00:10:34,640
subsets of metadata

00:10:32,160 --> 00:10:36,320
they have different um sophistication in

00:10:34,640 --> 00:10:38,480
the way that they work with metadata and

00:10:36,320 --> 00:10:41,120
that should not matter

00:10:38,480 --> 00:10:43,200
the jurious technology needs to enable

00:10:41,120 --> 00:10:45,519
them to be the best they can

00:10:43,200 --> 00:10:46,640
without limiting what they the

00:10:45,519 --> 00:10:49,040
capability of

00:10:46,640 --> 00:10:49,839
other technologies so this is this is

00:10:49,040 --> 00:10:52,399
extremely

00:10:49,839 --> 00:10:54,000
important that we we have this sense of

00:10:52,399 --> 00:10:57,040
fairness and value

00:10:54,000 --> 00:10:58,560
throughout the integrated tools

00:10:57,040 --> 00:11:00,880
the other thing is that not everybody

00:10:58,560 --> 00:11:02,640
has huge it departments so we need to

00:11:00,880 --> 00:11:06,240
make the technology

00:11:02,640 --> 00:11:07,920
self-configuring distributed and enable

00:11:06,240 --> 00:11:11,120
both a sort of batch

00:11:07,920 --> 00:11:14,720
background updated technology

00:11:11,120 --> 00:11:16,079
metadata as well as real-time federated

00:11:14,720 --> 00:11:19,600
query access

00:11:16,079 --> 00:11:22,720
across the ecosystem

00:11:19,600 --> 00:11:26,000
data and it has spread to

00:11:22,720 --> 00:11:28,480
sort of tiny devices just distributed

00:11:26,000 --> 00:11:30,880
out in the environment through to very

00:11:28,480 --> 00:11:33,120
large scale highly available

00:11:30,880 --> 00:11:34,560
globally accessible services and so

00:11:33,120 --> 00:11:37,519
algeria itself

00:11:34,560 --> 00:11:39,120
has to be able to scale to support that

00:11:37,519 --> 00:11:40,959
environment

00:11:39,120 --> 00:11:42,160
we need to support multi-tenants so this

00:11:40,959 --> 00:11:45,200
means that

00:11:42,160 --> 00:11:46,320
an idea service can be offered a single

00:11:45,200 --> 00:11:48,720
service can be offered to

00:11:46,320 --> 00:11:49,839
lots of different organizations and it

00:11:48,720 --> 00:11:52,880
doesn't muddle up

00:11:49,839 --> 00:11:55,279
and provide access to

00:11:52,880 --> 00:11:57,120
metadata from from another organization

00:11:55,279 --> 00:11:58,639
to to its users

00:11:57,120 --> 00:12:01,360
and we call that multi-tenant where we

00:11:58,639 --> 00:12:04,240
sort of we silo and separate the data

00:12:01,360 --> 00:12:06,399
depending on on which organization the

00:12:04,240 --> 00:12:08,880
user is coming from

00:12:06,399 --> 00:12:10,320
we also need a huge focus on security

00:12:08,880 --> 00:12:11,519
and i'll cover that in a little bit more

00:12:10,320 --> 00:12:13,920
detail

00:12:11,519 --> 00:12:15,519
because metadata as it's brought

00:12:13,920 --> 00:12:16,880
together as it's linked becomes

00:12:15,519 --> 00:12:18,959
incredibly valuable

00:12:16,880 --> 00:12:20,959
and so we need to control the visibility

00:12:18,959 --> 00:12:24,000
of that metadata

00:12:20,959 --> 00:12:26,399
as a core part of the ecosystem and then

00:12:24,000 --> 00:12:27,360
finally in order to make it run anywhere

00:12:26,399 --> 00:12:29,279
effectively

00:12:27,360 --> 00:12:31,200
we need to make sure that all its calls

00:12:29,279 --> 00:12:32,240
to external resources like platform

00:12:31,200 --> 00:12:34,639
resources

00:12:32,240 --> 00:12:35,360
um are customizable and so we have a

00:12:34,639 --> 00:12:37,279
connective

00:12:35,360 --> 00:12:40,240
connector framework that's used for all

00:12:37,279 --> 00:12:40,240
pluggable code

00:12:41,040 --> 00:12:46,720
the other thing is that we work in um

00:12:44,480 --> 00:12:48,000
in a very iterative approach process

00:12:46,720 --> 00:12:49,040
where we're looking at a particular

00:12:48,000 --> 00:12:51,920
scenario

00:12:49,040 --> 00:12:52,800
we hope to attract people to come and

00:12:51,920 --> 00:12:54,480
work with us

00:12:52,800 --> 00:12:56,320
to work through the problem to bring new

00:12:54,480 --> 00:12:58,880
use cases um

00:12:56,320 --> 00:13:00,959
and through that process we start to to

00:12:58,880 --> 00:13:04,000
you know to develop new services

00:13:00,959 --> 00:13:04,800
um and uh enable that use case to go

00:13:04,000 --> 00:13:06,959
through

00:13:04,800 --> 00:13:09,040
and and the result is that we have uh

00:13:06,959 --> 00:13:11,440
actually created a huge number

00:13:09,040 --> 00:13:13,600
of innovations in this space just

00:13:11,440 --> 00:13:17,279
because we're taking a different view

00:13:13,600 --> 00:13:18,880
on the way that metadata is managed

00:13:17,279 --> 00:13:20,399
and i'm going to cover a number of those

00:13:18,880 --> 00:13:22,560
um as we go through which is why i

00:13:20,399 --> 00:13:24,639
skipped that chart quite quickly

00:13:22,560 --> 00:13:25,920
so let's look at these innovations um

00:13:24,639 --> 00:13:28,639
let's first think about that

00:13:25,920 --> 00:13:29,200
what it means to be peer-to-peer um in

00:13:28,639 --> 00:13:32,160
terms of

00:13:29,200 --> 00:13:34,480
it in terms of the protocol so basically

00:13:32,160 --> 00:13:37,680
what happens is each technology

00:13:34,480 --> 00:13:39,519
builds um a connector or two connectors

00:13:37,680 --> 00:13:41,279
depending on whether it's bi-directional

00:13:39,519 --> 00:13:44,000
or unidirectional

00:13:41,279 --> 00:13:44,720
um that is a translator it translates

00:13:44,000 --> 00:13:47,760
from

00:13:44,720 --> 00:13:52,720
the open um apis

00:13:47,760 --> 00:13:55,760
of algeria to the um specific api

00:13:52,720 --> 00:13:57,440
um of the tool um and that's sort of

00:13:55,760 --> 00:14:00,720
inbound and outbound

00:13:57,440 --> 00:14:01,600
um if the tool creates events when

00:14:00,720 --> 00:14:05,040
things happen

00:14:01,600 --> 00:14:07,040
like its metadata changes then we listen

00:14:05,040 --> 00:14:09,920
to those events and translate the events

00:14:07,040 --> 00:14:11,760
into nigeria events and that's all the

00:14:09,920 --> 00:14:14,959
technology has to do

00:14:11,760 --> 00:14:16,880
to send and receive the metadata

00:14:14,959 --> 00:14:18,560
that it understands we don't send it

00:14:16,880 --> 00:14:20,399
metadata it doesn't understand because

00:14:18,560 --> 00:14:21,680
that would be pointless so there are

00:14:20,399 --> 00:14:24,079
specialized

00:14:21,680 --> 00:14:26,480
um interfaces for particular types of

00:14:24,079 --> 00:14:29,279
technology to make that integration

00:14:26,480 --> 00:14:31,120
as um as simple as possible for each

00:14:29,279 --> 00:14:33,600
type of technology

00:14:31,120 --> 00:14:35,519
and as i say once it's connected then

00:14:33,600 --> 00:14:37,839
exeria does the rest

00:14:35,519 --> 00:14:39,680
and it doesn't matter how other

00:14:37,839 --> 00:14:41,920
technologies that it's sharing metadata

00:14:39,680 --> 00:14:44,000
with connect into the ecosystem

00:14:41,920 --> 00:14:46,320
that tool will receive the metadata it

00:14:44,000 --> 00:14:46,320
needs

00:14:47,120 --> 00:14:50,480
now you might think well that's easy i

00:14:48,880 --> 00:14:51,839
mean everybody knows how to send stuff

00:14:50,480 --> 00:14:53,680
over the internet

00:14:51,839 --> 00:14:55,600
but actually what we're doing is we we

00:14:53,680 --> 00:14:58,320
need to to make sure that we

00:14:55,600 --> 00:14:59,519
um we we trend so it's not just about

00:14:58,320 --> 00:15:00,880
transferring bytes it's about

00:14:59,519 --> 00:15:02,399
transferring knowledge

00:15:00,880 --> 00:15:05,120
and that means that we need to make sure

00:15:02,399 --> 00:15:09,040
that if um one tool

00:15:05,120 --> 00:15:11,360
uh shares details of a database column

00:15:09,040 --> 00:15:13,120
we know it's a database column and only

00:15:11,360 --> 00:15:15,120
pass it to tools that are interested in

00:15:13,120 --> 00:15:18,160
database columns we need to understand

00:15:15,120 --> 00:15:21,120
and preserve the meaning of the metadata

00:15:18,160 --> 00:15:21,600
as we exchange it and the trick is that

00:15:21,120 --> 00:15:24,480
there's

00:15:21,600 --> 00:15:26,480
huge impedance mismatches in the

00:15:24,480 --> 00:15:28,639
capability of each technology

00:15:26,480 --> 00:15:30,320
the names they use the granularity of

00:15:28,639 --> 00:15:32,639
the metadata they work with

00:15:30,320 --> 00:15:33,920
and we have to accommodate all of that

00:15:32,639 --> 00:15:36,560
in nigeria

00:15:33,920 --> 00:15:39,600
so that each tool as i say is able to

00:15:36,560 --> 00:15:42,480
operate at its maximum capability

00:15:39,600 --> 00:15:46,399
without having to dumb it down to

00:15:42,480 --> 00:15:46,399
support the lowest common denominator

00:15:46,959 --> 00:15:50,240
so what do we have in nigeria we have a

00:15:49,040 --> 00:15:52,079
common language

00:15:50,240 --> 00:15:54,320
and the associated data structures to

00:15:52,079 --> 00:15:56,160
allow that metadata to flow over the

00:15:54,320 --> 00:15:57,040
network and there are protocols that

00:15:56,160 --> 00:16:00,480
explain

00:15:57,040 --> 00:16:01,920
um exactly how how and when metadata

00:16:00,480 --> 00:16:03,839
should flow

00:16:01,920 --> 00:16:05,040
we then provide those integration points

00:16:03,839 --> 00:16:08,160
that host

00:16:05,040 --> 00:16:09,360
connectors to specific technologies and

00:16:08,160 --> 00:16:10,720
the aim is that

00:16:09,360 --> 00:16:12,639
all you have to do is write the

00:16:10,720 --> 00:16:14,160
translator and we will manage the

00:16:12,639 --> 00:16:16,720
hosting of

00:16:14,160 --> 00:16:18,399
your connector starting stopping

00:16:16,720 --> 00:16:19,759
managing the resync process

00:16:18,399 --> 00:16:21,040
because one of the things about these

00:16:19,759 --> 00:16:22,720
environments is that they're not all

00:16:21,040 --> 00:16:24,720
available at the same time

00:16:22,720 --> 00:16:26,480
and we need to be able to reach you know

00:16:24,720 --> 00:16:27,839
to be able to handle a restart when a

00:16:26,480 --> 00:16:29,759
particular technology has been

00:16:27,839 --> 00:16:32,880
unavailable for a while

00:16:29,759 --> 00:16:34,320
um and you know or maybe upgraded or all

00:16:32,880 --> 00:16:36,480
that type of thing so that

00:16:34,320 --> 00:16:37,680
the whole ecosystem has to be extremely

00:16:36,480 --> 00:16:39,440
robust

00:16:37,680 --> 00:16:41,040
and handling versioning back with

00:16:39,440 --> 00:16:43,440
compatibility and things

00:16:41,040 --> 00:16:44,079
because things will not be upgraded um

00:16:43,440 --> 00:16:47,120
you know

00:16:44,079 --> 00:16:50,480
you know to all together be in such a

00:16:47,120 --> 00:16:52,399
complex environment

00:16:50,480 --> 00:16:54,079
so if we looked at it from the outside

00:16:52,399 --> 00:16:54,880
nigeria will be the fluffy cloud in the

00:16:54,079 --> 00:16:57,120
middle

00:16:54,880 --> 00:16:58,639
um with the connectors doing that

00:16:57,120 --> 00:17:00,399
synchronization

00:16:58,639 --> 00:17:02,639
through its different apis to the

00:17:00,399 --> 00:17:05,679
different types of tools

00:17:02,639 --> 00:17:08,319
now of course uh life is not simple

00:17:05,679 --> 00:17:10,240
and uh systems are distributed across

00:17:08,319 --> 00:17:11,679
lots of different cloud platforms

00:17:10,240 --> 00:17:14,400
different data centers within the

00:17:11,679 --> 00:17:17,360
organization right out into

00:17:14,400 --> 00:17:20,240
our iot devices and the edge of edge of

00:17:17,360 --> 00:17:21,839
the network for iot type environments

00:17:20,240 --> 00:17:23,520
and of course even onto our mobile

00:17:21,839 --> 00:17:24,480
phones which themselves are computing

00:17:23,520 --> 00:17:28,319
platforms

00:17:24,480 --> 00:17:31,280
collecting data um making decisions and

00:17:28,319 --> 00:17:32,640
also uh distributing data so we need to

00:17:31,280 --> 00:17:35,200
be able to work in

00:17:32,640 --> 00:17:36,000
in in a wide variety of environments and

00:17:35,200 --> 00:17:37,840
the way you

00:17:36,000 --> 00:17:40,400
you you operate with algeria is that you

00:17:37,840 --> 00:17:42,799
put algeria in all these locations

00:17:40,400 --> 00:17:45,039
and nigeria connects to itself and

00:17:42,799 --> 00:17:47,440
manages the exchange

00:17:45,039 --> 00:17:49,760
and we can be connected in a live way uh

00:17:47,440 --> 00:17:51,120
to allow reset real-time exchange

00:17:49,760 --> 00:17:52,799
or it might be that you have two

00:17:51,120 --> 00:17:54,720
business partners sharing data and they

00:17:52,799 --> 00:17:57,760
want to share metadata too

00:17:54,720 --> 00:17:59,760
and so the open formats can be um used

00:17:57,760 --> 00:18:01,600
to create an archive of metadata

00:17:59,760 --> 00:18:04,080
associated with data that's

00:18:01,600 --> 00:18:05,679
moving between organizations and because

00:18:04,080 --> 00:18:08,080
it's in the open format

00:18:05,679 --> 00:18:09,679
the um organizations you know the

00:18:08,080 --> 00:18:12,320
receiving organization can

00:18:09,679 --> 00:18:13,600
pick up that metadata and understand its

00:18:12,320 --> 00:18:16,080
classification

00:18:13,600 --> 00:18:17,280
meaning terms and conditions all the

00:18:16,080 --> 00:18:20,240
types of things

00:18:17,280 --> 00:18:22,799
that mean that they can create a trusted

00:18:20,240 --> 00:18:24,240
exchange of data between one another

00:18:22,799 --> 00:18:28,400
without connecting their metadata

00:18:24,240 --> 00:18:30,880
repositories together

00:18:28,400 --> 00:18:31,679
so here's another view of uh sort of the

00:18:30,880 --> 00:18:35,039
big picture

00:18:31,679 --> 00:18:35,840
um where we have uh the blue boxes here

00:18:35,039 --> 00:18:38,400
represent

00:18:35,840 --> 00:18:40,720
the algeria what we call the omega open

00:18:38,400 --> 00:18:44,080
metadata and governance server platforms

00:18:40,720 --> 00:18:47,919
each deployed into a particular location

00:18:44,080 --> 00:18:50,080
and the the orange circles are

00:18:47,919 --> 00:18:52,320
servers that have been configured on the

00:18:50,080 --> 00:18:54,799
platform so the servers

00:18:52,320 --> 00:18:56,960
are um effectively a hosting environment

00:18:54,799 --> 00:18:58,480
for a particular type of connector

00:18:56,960 --> 00:19:01,120
that talks to a particular type of

00:18:58,480 --> 00:19:01,679
technology and again this is all about

00:19:01,120 --> 00:19:03,280
getting it

00:19:01,679 --> 00:19:05,280
making it as simple as possible to

00:19:03,280 --> 00:19:06,880
connect an individual tool

00:19:05,280 --> 00:19:09,280
and pushing the complexity of the

00:19:06,880 --> 00:19:11,360
indepen of the integration

00:19:09,280 --> 00:19:12,559
into the blue area into the platform

00:19:11,360 --> 00:19:14,960
itself

00:19:12,559 --> 00:19:16,000
so that everybody doesn't have to to

00:19:14,960 --> 00:19:20,799
write the same

00:19:16,000 --> 00:19:22,240
logic um i talked about the connector

00:19:20,799 --> 00:19:24,480
framework and so this connected

00:19:22,240 --> 00:19:27,919
framework is used for every piece of

00:19:24,480 --> 00:19:29,440
type of plug-in logic um and so it can

00:19:27,919 --> 00:19:31,200
and that it's used for the start

00:19:29,440 --> 00:19:32,960
loading starting stopping of this of

00:19:31,200 --> 00:19:34,720
this plug-in logic

00:19:32,960 --> 00:19:36,400
and then there's a specialist api that

00:19:34,720 --> 00:19:38,000
each type of connector so we will talk

00:19:36,400 --> 00:19:40,640
about a repository connector an

00:19:38,000 --> 00:19:42,000
integration connector um an audit log

00:19:40,640 --> 00:19:42,720
connector so there are lots of different

00:19:42,000 --> 00:19:45,280
types

00:19:42,720 --> 00:19:47,039
and they they add in the specialist

00:19:45,280 --> 00:19:50,000
interface to allow

00:19:47,039 --> 00:19:53,840
the appropriate flow of metadata across

00:19:50,000 --> 00:19:53,840
that interface

00:19:54,160 --> 00:19:58,640
um the different servers uh i showed

00:19:56,480 --> 00:20:00,320
sort of a random collection of blue

00:19:58,640 --> 00:20:02,640
lines but the different servers actually

00:20:00,320 --> 00:20:04,480
configured in a very specific way

00:20:02,640 --> 00:20:06,720
there's a central core which i've

00:20:04,480 --> 00:20:08,640
labeled as integrating metadata

00:20:06,720 --> 00:20:11,200
which is the peer-to-peer sharing

00:20:08,640 --> 00:20:13,679
metadata between metadata repositories

00:20:11,200 --> 00:20:14,720
so this is really for tools that are

00:20:13,679 --> 00:20:16,880
whose primary

00:20:14,720 --> 00:20:18,960
focus is to manage metadata so a data

00:20:16,880 --> 00:20:22,559
catalog would be an example of that

00:20:18,960 --> 00:20:26,799
type of a type of tool and they

00:20:22,559 --> 00:20:29,600
connect through a kafka topic

00:20:26,799 --> 00:20:31,760
and share configuration information so

00:20:29,600 --> 00:20:34,000
this is how they self-configure

00:20:31,760 --> 00:20:36,480
and then they are able to peer-to-peer

00:20:34,000 --> 00:20:39,600
um both exchange metadata and issue

00:20:36,480 --> 00:20:43,280
federated queries to each other uh in

00:20:39,600 --> 00:20:45,600
in a in a sort of in a fair manner

00:20:43,280 --> 00:20:47,120
then um that's all great for collecting

00:20:45,600 --> 00:20:48,720
and sharing metadata but if we really

00:20:47,120 --> 00:20:50,320
want to use it and push it to lots of

00:20:48,720 --> 00:20:52,559
different types of tools

00:20:50,320 --> 00:20:54,480
we then have governance servers that

00:20:52,559 --> 00:20:57,120
enable that two-way

00:20:54,480 --> 00:20:57,679
exchange and then finally so that brings

00:20:57,120 --> 00:20:59,520
in

00:20:57,679 --> 00:21:02,000
extra types of tools but we also need to

00:20:59,520 --> 00:21:05,520
bring in people and so the view servers

00:21:02,000 --> 00:21:06,320
provide rest apis for different types of

00:21:05,520 --> 00:21:08,880
uis

00:21:06,320 --> 00:21:10,400
that allow integration into

00:21:08,880 --> 00:21:12,960
user-oriented tools

00:21:10,400 --> 00:21:16,960
and also to allow nigeria to provide its

00:21:12,960 --> 00:21:18,559
own user interfaces

00:21:16,960 --> 00:21:20,559
and this is just the different types of

00:21:18,559 --> 00:21:21,679
connectors shown in a sort of type

00:21:20,559 --> 00:21:23,440
hierarchy

00:21:21,679 --> 00:21:25,120
so you can see the cohort members these

00:21:23,440 --> 00:21:26,640
are in that central group

00:21:25,120 --> 00:21:28,000
the view server is obviously supporting

00:21:26,640 --> 00:21:29,280
the user interfaces and then the

00:21:28,000 --> 00:21:31,039
governance servers

00:21:29,280 --> 00:21:32,640
there are different types that do

00:21:31,039 --> 00:21:34,159
different types of roles and

00:21:32,640 --> 00:21:36,000
and the two main ones are the

00:21:34,159 --> 00:21:37,760
integration demon that's responsible for

00:21:36,000 --> 00:21:39,840
the exchange of metadata

00:21:37,760 --> 00:21:40,960
and the engine host that is actually

00:21:39,840 --> 00:21:43,600
running

00:21:40,960 --> 00:21:44,159
governance type engines like a discovery

00:21:43,600 --> 00:21:47,760
engine

00:21:44,159 --> 00:21:48,480
for uh profiling data and a stewardship

00:21:47,760 --> 00:21:51,679
engine for

00:21:48,480 --> 00:21:55,440
handling uh any errors uh

00:21:51,679 --> 00:21:57,280
or um work that requires a steward to

00:21:55,440 --> 00:22:01,039
make a decision about what should happen

00:21:57,280 --> 00:22:01,039
to a particular situation

00:22:01,840 --> 00:22:05,520
i talked about the platform and i said

00:22:03,760 --> 00:22:07,679
it was very scalable

00:22:05,520 --> 00:22:09,679
so basically this platform can run on

00:22:07,679 --> 00:22:12,000
something as small as a raspberry pi

00:22:09,679 --> 00:22:12,880
it can run standalone as a single

00:22:12,000 --> 00:22:14,880
platform

00:22:12,880 --> 00:22:17,440
providing support for all the different

00:22:14,880 --> 00:22:20,720
types of servers that a particular

00:22:17,440 --> 00:22:22,799
organization needs or it can be sort of

00:22:20,720 --> 00:22:23,679
stretched a server can be stretched over

00:22:22,799 --> 00:22:27,200
multiple

00:22:23,679 --> 00:22:29,200
platforms to give a highly available

00:22:27,200 --> 00:22:30,480
environment where updates can be rolled

00:22:29,200 --> 00:22:32,320
across

00:22:30,480 --> 00:22:34,080
the different platforms and the servers

00:22:32,320 --> 00:22:38,320
stay running even if

00:22:34,080 --> 00:22:38,320
a platform is out for a period of time

00:22:39,440 --> 00:22:43,919
now uh let's talk a little bit about

00:22:41,520 --> 00:22:45,919
what's going on inside the cohort so

00:22:43,919 --> 00:22:48,159
the cohort has said is peer-to-peer

00:22:45,919 --> 00:22:49,120
sharing between metadata repositories

00:22:48,159 --> 00:22:51,520
and so here

00:22:49,120 --> 00:22:52,559
we have um three different metadata

00:22:51,520 --> 00:22:54,880
repositories

00:22:52,559 --> 00:22:56,320
from different parts of the organization

00:22:54,880 --> 00:22:58,960
sharing what they know

00:22:56,320 --> 00:23:00,799
about uh say the data in the

00:22:58,960 --> 00:23:02,880
organization

00:23:00,799 --> 00:23:04,799
and the moment that they they

00:23:02,880 --> 00:23:06,840
dynamically register and once they're

00:23:04,799 --> 00:23:08,880
connected they can see each other's

00:23:06,840 --> 00:23:10,640
metadata

00:23:08,880 --> 00:23:12,640
it is also possible to join multiple

00:23:10,640 --> 00:23:14,559
cohorts so an organization may use the

00:23:12,640 --> 00:23:16,480
cohorts to

00:23:14,559 --> 00:23:18,640
group together tools in different

00:23:16,480 --> 00:23:20,880
divisions within the organization

00:23:18,640 --> 00:23:22,799
but there are always corporate level

00:23:20,880 --> 00:23:24,799
enterprise level and teams

00:23:22,799 --> 00:23:25,840
and they can connect to multiple cohorts

00:23:24,799 --> 00:23:30,640
to get an

00:23:25,840 --> 00:23:30,640
overall enterprise view of the metadata

00:23:30,960 --> 00:23:34,960
the process of setting up the cohort as

00:23:32,880 --> 00:23:35,679
i said is dynamic so here we have a

00:23:34,960 --> 00:23:37,760
server

00:23:35,679 --> 00:23:38,720
that's added a registration and document

00:23:37,760 --> 00:23:41,039
to the

00:23:38,720 --> 00:23:43,440
um the topic for the cohort we call that

00:23:41,039 --> 00:23:45,840
the rmrs topic

00:23:43,440 --> 00:23:46,720
and that's that's it they just sit and

00:23:45,840 --> 00:23:48,960
wait

00:23:46,720 --> 00:23:50,640
then another server joins and they add

00:23:48,960 --> 00:23:52,400
their registration document which is

00:23:50,640 --> 00:23:54,000
picked up by the first server

00:23:52,400 --> 00:23:55,919
and they have an exchange and what

00:23:54,000 --> 00:23:57,200
they're doing is they're exchanging

00:23:55,919 --> 00:23:59,760
configuration

00:23:57,200 --> 00:24:00,720
because once that's over they can now

00:23:59,760 --> 00:24:03,039
issue federated

00:24:00,720 --> 00:24:04,559
issue queries to each other's database

00:24:03,039 --> 00:24:06,960
and you can see that uh

00:24:04,559 --> 00:24:08,960
in this picture uh server one the pink

00:24:06,960 --> 00:24:11,360
server is serving up blue metadata

00:24:08,960 --> 00:24:12,320
and server two the blue server is

00:24:11,360 --> 00:24:14,400
serving up

00:24:12,320 --> 00:24:15,440
pink metadata so they're able to issue

00:24:14,400 --> 00:24:18,000
queries

00:24:15,440 --> 00:24:18,799
uh and that you know gives you a very uh

00:24:18,000 --> 00:24:21,760
real-time

00:24:18,799 --> 00:24:22,960
integration but it's also possible that

00:24:21,760 --> 00:24:24,000
well actually what's going on in the

00:24:22,960 --> 00:24:24,720
background is that there's an

00:24:24,000 --> 00:24:27,520
opportunity

00:24:24,720 --> 00:24:29,120
also to uh store metadata from other

00:24:27,520 --> 00:24:30,400
repositories so that it's always

00:24:29,120 --> 00:24:32,240
available

00:24:30,400 --> 00:24:34,080
or it might be that it's used all the

00:24:32,240 --> 00:24:35,600
time and rarely changes and so it's

00:24:34,080 --> 00:24:37,200
it's actually more efficient to store it

00:24:35,600 --> 00:24:39,120
locally

00:24:37,200 --> 00:24:40,320
and that is also going on in the

00:24:39,120 --> 00:24:43,600
background to

00:24:40,320 --> 00:24:44,320
create a more um robust integration

00:24:43,600 --> 00:24:47,039
between

00:24:44,320 --> 00:24:48,400
the technologies it's also uh the case

00:24:47,039 --> 00:24:49,919
that there are many technologies that

00:24:48,400 --> 00:24:50,960
are not able to use the federated

00:24:49,919 --> 00:24:52,799
queries so

00:24:50,960 --> 00:24:54,559
this synchronization in the background

00:24:52,799 --> 00:24:58,320
gives them an opportunity

00:24:54,559 --> 00:25:02,400
to receive metadata from another um

00:24:58,320 --> 00:25:04,960
from another server and still

00:25:02,400 --> 00:25:06,480
have their user interfaces that can only

00:25:04,960 --> 00:25:12,240
pull metadata from

00:25:06,480 --> 00:25:14,000
their own repository c external metadata

00:25:12,240 --> 00:25:15,440
now what's going on inside is that we

00:25:14,000 --> 00:25:18,640
break down the

00:25:15,440 --> 00:25:21,679
metadata into uh small nuggets or

00:25:18,640 --> 00:25:22,799
atoms of of knowledge um and there's

00:25:21,679 --> 00:25:25,200
sort of

00:25:22,799 --> 00:25:25,919
um the entity is a knowledge about a

00:25:25,200 --> 00:25:28,799
thing

00:25:25,919 --> 00:25:30,320
or a concept we have relationships that

00:25:28,799 --> 00:25:31,919
link them together so we can say this

00:25:30,320 --> 00:25:32,960
database column is linked to this

00:25:31,919 --> 00:25:35,760
glossary term

00:25:32,960 --> 00:25:38,000
and it has this meaning um and also we

00:25:35,760 --> 00:25:40,480
can add classifications on top

00:25:38,000 --> 00:25:42,640
so these are just like extra pieces of

00:25:40,480 --> 00:25:44,720
information that group

00:25:42,640 --> 00:25:45,679
things that are related together so you

00:25:44,720 --> 00:25:48,080
might say

00:25:45,679 --> 00:25:49,919
that this particular database or this

00:25:48,080 --> 00:25:50,559
particular type of data this glossary

00:25:49,919 --> 00:25:52,880
term

00:25:50,559 --> 00:25:54,480
represents data that's confidential or

00:25:52,880 --> 00:25:56,159
personal information

00:25:54,480 --> 00:25:57,919
and that would be a classification that

00:25:56,159 --> 00:26:00,640
can be attached

00:25:57,919 --> 00:26:02,159
to uh to an entity and all of these

00:26:00,640 --> 00:26:05,360
things have properties

00:26:02,159 --> 00:26:07,520
uh that can be stored with it um

00:26:05,360 --> 00:26:09,279
and it's not required that they all are

00:26:07,520 --> 00:26:10,159
stored in the same repositories so here

00:26:09,279 --> 00:26:12,159
we have

00:26:10,159 --> 00:26:14,640
the two servers again um and one of

00:26:12,159 --> 00:26:17,600
them's got a database column in it

00:26:14,640 --> 00:26:19,200
and the other has um a glossary term

00:26:17,600 --> 00:26:21,039
stored in it now we want to create a

00:26:19,200 --> 00:26:23,200
relationship between them

00:26:21,039 --> 00:26:26,320
we have a number of choices we can

00:26:23,200 --> 00:26:29,279
either say move a read-only copy of

00:26:26,320 --> 00:26:30,000
the glossary term to server one and

00:26:29,279 --> 00:26:32,000
server one

00:26:30,000 --> 00:26:33,600
creates the relationship and that's all

00:26:32,000 --> 00:26:35,120
well and good as long as server one

00:26:33,600 --> 00:26:37,039
actually supports glossary terms and

00:26:35,120 --> 00:26:40,080
meaning relationships

00:26:37,039 --> 00:26:42,240
um but if they don't we can pull

00:26:40,080 --> 00:26:43,840
read-only copies of both of those pieces

00:26:42,240 --> 00:26:46,320
into a third server

00:26:43,840 --> 00:26:47,440
and create the relationship there and

00:26:46,320 --> 00:26:50,159
even though

00:26:47,440 --> 00:26:52,080
the database column the term and the

00:26:50,159 --> 00:26:53,840
meaning relationship

00:26:52,080 --> 00:26:55,760
or in completely different surveys when

00:26:53,840 --> 00:26:57,440
you issue a query to a juria

00:26:55,760 --> 00:27:00,400
it will be returned as if they're all

00:26:57,440 --> 00:27:02,880
located together

00:27:00,400 --> 00:27:04,720
we can also then add extra

00:27:02,880 --> 00:27:06,240
classification so in orange here this

00:27:04,720 --> 00:27:07,200
confidential classification has been

00:27:06,240 --> 00:27:09,679
added

00:27:07,200 --> 00:27:11,679
um and and the fact that we can do this

00:27:09,679 --> 00:27:13,360
for a third server means that we can add

00:27:11,679 --> 00:27:16,799
governance capabilities and

00:27:13,360 --> 00:27:18,720
and knowledge to metadata from tools

00:27:16,799 --> 00:27:20,799
that don't support governance

00:27:18,720 --> 00:27:22,880
uh and so we're effectively using

00:27:20,799 --> 00:27:26,399
nigeria to extend

00:27:22,880 --> 00:27:28,399
and manage um the capability

00:27:26,399 --> 00:27:31,360
capabilities of the tools that are

00:27:28,399 --> 00:27:31,360
currently deployed

00:27:31,679 --> 00:27:35,600
we cover a very wide range of metadata

00:27:34,399 --> 00:27:39,039
and

00:27:35,600 --> 00:27:42,159
this set of types of about 500 now

00:27:39,039 --> 00:27:43,600
comes from or is sourced from the very

00:27:42,159 --> 00:27:46,159
high quality

00:27:43,600 --> 00:27:47,440
metadata standards that exist and these

00:27:46,159 --> 00:27:49,440
metadata standards

00:27:47,440 --> 00:27:51,360
are as i say they're very high quality

00:27:49,440 --> 00:27:53,440
but they're limited in scope

00:27:51,360 --> 00:27:55,039
and they don't cover the wide range of

00:27:53,440 --> 00:27:56,399
metadata that's needed by an

00:27:55,039 --> 00:27:59,360
organization

00:27:56,399 --> 00:28:00,960
so what we've done is we've gone through

00:27:59,360 --> 00:28:02,080
these standards and sort of stitched

00:28:00,960 --> 00:28:04,480
them together so it

00:28:02,080 --> 00:28:05,120
so extracted the concepts and compared

00:28:04,480 --> 00:28:07,679
them and

00:28:05,120 --> 00:28:08,960
and worked out where the overlaps are so

00:28:07,679 --> 00:28:12,159
that we can pull

00:28:08,960 --> 00:28:14,799
metadata from one standard and then

00:28:12,159 --> 00:28:16,000
um where we have overlaps share it out

00:28:14,799 --> 00:28:17,760
to another standard

00:28:16,000 --> 00:28:19,039
because we're able to provide that

00:28:17,760 --> 00:28:20,640
translation

00:28:19,039 --> 00:28:22,480
we also fill the gaps because there are

00:28:20,640 --> 00:28:24,080
gaps between

00:28:22,480 --> 00:28:27,520
the different metadata standards that

00:28:24,080 --> 00:28:30,640
tend to focus on a particular type of

00:28:27,520 --> 00:28:32,960
of asset or a particular um

00:28:30,640 --> 00:28:34,480
type of governance or whatever so as i

00:28:32,960 --> 00:28:36,399
say in each place we have

00:28:34,480 --> 00:28:38,880
very good standards and what we've done

00:28:36,399 --> 00:28:40,640
is link them together in our types

00:28:38,880 --> 00:28:42,480
and here you can see the type of linking

00:28:40,640 --> 00:28:44,880
that's being done

00:28:42,480 --> 00:28:46,640
and not only are we linking sort of

00:28:44,880 --> 00:28:48,399
technical tools together

00:28:46,640 --> 00:28:50,080
but there are different governance tools

00:28:48,399 --> 00:28:52,799
covering different types of governance

00:28:50,080 --> 00:28:54,399
like privacy and security and

00:28:52,799 --> 00:28:57,360
it infrastructure management and

00:28:54,399 --> 00:29:00,000
software development these are all

00:28:57,360 --> 00:29:01,200
again very well established governance

00:29:00,000 --> 00:29:03,600
processes with

00:29:01,200 --> 00:29:05,120
independent tools but in today's world

00:29:03,600 --> 00:29:07,840
we need to bring them together

00:29:05,120 --> 00:29:09,520
and so algeria integrates governance as

00:29:07,840 --> 00:29:13,840
well as integrating

00:29:09,520 --> 00:29:13,840
metadata about assets and people

00:29:15,200 --> 00:29:18,799
i talked about there being specialist

00:29:16,880 --> 00:29:21,760
api so in the center

00:29:18,799 --> 00:29:23,760
in the cohort they're all speaking that

00:29:21,760 --> 00:29:25,039
language of entities relationships and

00:29:23,760 --> 00:29:26,880
classifications

00:29:25,039 --> 00:29:29,200
but that's quite complex for somebody

00:29:26,880 --> 00:29:32,480
who understands etl engines

00:29:29,200 --> 00:29:32,880
but not the bigger metadata piece so we

00:29:32,480 --> 00:29:34,880
use

00:29:32,880 --> 00:29:37,039
we provide access services that give

00:29:34,880 --> 00:29:39,520
those simplified interfaces

00:29:37,039 --> 00:29:40,080
two different types of tools and this is

00:29:39,520 --> 00:29:42,320
a

00:29:40,080 --> 00:29:43,679
sort of summary of the access services

00:29:42,320 --> 00:29:45,600
that we have at the moment

00:29:43,679 --> 00:29:47,200
and they do cover all parts of that

00:29:45,600 --> 00:29:50,240
metadata that we're talking about

00:29:47,200 --> 00:29:54,880
from governance through to

00:29:50,240 --> 00:29:56,880
lineage of of assets

00:29:54,880 --> 00:29:58,320
um and then we then we support those

00:29:56,880 --> 00:30:01,039
governance servers

00:29:58,320 --> 00:30:03,200
with the different styles of integration

00:30:01,039 --> 00:30:05,520
to support the capabilities of

00:30:03,200 --> 00:30:07,600
technology from technology that just

00:30:05,520 --> 00:30:08,559
provides open apis that we can connect

00:30:07,600 --> 00:30:11,840
and poll

00:30:08,559 --> 00:30:14,159
and to monitor the changing

00:30:11,840 --> 00:30:15,120
metadata within it to ones that actually

00:30:14,159 --> 00:30:19,120
create events

00:30:15,120 --> 00:30:21,440
and provide us with a notification every

00:30:19,120 --> 00:30:23,440
time metadata changes that we can then

00:30:21,440 --> 00:30:26,799
capture and share through the open

00:30:23,440 --> 00:30:26,799
metadata ecosystem

00:30:27,600 --> 00:30:30,720
and here's an example of this in

00:30:30,080 --> 00:30:33,440
progress

00:30:30,720 --> 00:30:34,880
in process so here we have the first

00:30:33,440 --> 00:30:37,760
integration demon

00:30:34,880 --> 00:30:39,520
is extracting metadata from different

00:30:37,760 --> 00:30:40,480
data sources so there's a database

00:30:39,520 --> 00:30:43,760
server that

00:30:40,480 --> 00:30:45,120
it's pulling schemas from um and

00:30:43,760 --> 00:30:46,559
a file system where it's pulling

00:30:45,120 --> 00:30:48,799
knowledge of the files that are being

00:30:46,559 --> 00:30:50,799
added to the file system over time

00:30:48,799 --> 00:30:53,360
and these are being catalogued into the

00:30:50,799 --> 00:30:55,679
metadata server in the middle

00:30:53,360 --> 00:30:56,720
as that metadata server receives new

00:30:55,679 --> 00:30:59,120
metadata

00:30:56,720 --> 00:31:00,399
it's creating events through the cohort

00:30:59,120 --> 00:31:03,200
which is being picked up by

00:31:00,399 --> 00:31:04,720
another server that's working with an

00:31:03,200 --> 00:31:06,000
integration daemons which is one of the

00:31:04,720 --> 00:31:08,159
governance servers

00:31:06,000 --> 00:31:10,320
and that's pushing and create

00:31:08,159 --> 00:31:11,120
automatically creating database views

00:31:10,320 --> 00:31:12,960
over

00:31:11,120 --> 00:31:14,480
the data sources that were captured by

00:31:12,960 --> 00:31:18,320
the first server

00:31:14,480 --> 00:31:20,159
um and and those views um

00:31:18,320 --> 00:31:22,240
mean that uh the data virtualization

00:31:20,159 --> 00:31:22,880
engine can be used as a single access

00:31:22,240 --> 00:31:25,360
point for

00:31:22,880 --> 00:31:26,320
data where security and auditing can be

00:31:25,360 --> 00:31:29,760
applied

00:31:26,320 --> 00:31:32,320
to to monitor uh what type of data is

00:31:29,760 --> 00:31:34,640
being pulled by different people

00:31:32,320 --> 00:31:36,640
and because it also as a data source

00:31:34,640 --> 00:31:38,960
those views are then re-catalogued back

00:31:36,640 --> 00:31:42,720
into the metadata server

00:31:38,960 --> 00:31:43,919
and our visibility controller and we'll

00:31:42,720 --> 00:31:45,200
talk a little bit about that called

00:31:43,919 --> 00:31:47,279
governance zones

00:31:45,200 --> 00:31:48,480
can make sure that anybody who searches

00:31:47,279 --> 00:31:52,240
on the catalog

00:31:48,480 --> 00:31:54,559
um actually just sees the views um in

00:31:52,240 --> 00:31:55,679
in their in the sort of search results

00:31:54,559 --> 00:31:57,840
when they click on that

00:31:55,679 --> 00:32:00,000
they go through the data virtualization

00:31:57,840 --> 00:32:01,440
engine to the real data

00:32:00,000 --> 00:32:04,080
and this means as i say that the

00:32:01,440 --> 00:32:06,480
virtualization engine can filter

00:32:04,080 --> 00:32:08,080
uh the data that's returned apply

00:32:06,480 --> 00:32:11,360
different types of

00:32:08,080 --> 00:32:12,960
rules to that data so that people see

00:32:11,360 --> 00:32:15,039
only what they should see

00:32:12,960 --> 00:32:16,960
going forward and the beauty of this

00:32:15,039 --> 00:32:18,080
approach is that there's no manual

00:32:16,960 --> 00:32:21,200
configuration

00:32:18,080 --> 00:32:21,200
from one end to the other

00:32:22,159 --> 00:32:26,159
now i mentioned these zones um so if you

00:32:24,399 --> 00:32:27,360
think about the fact that we're pulling

00:32:26,159 --> 00:32:29,360
knowledge together from lots of

00:32:27,360 --> 00:32:31,440
different parts of the organization

00:32:29,360 --> 00:32:33,760
and this knowledge as we link it becomes

00:32:31,440 --> 00:32:35,519
almost in some cases more valuable than

00:32:33,760 --> 00:32:37,840
the data that it represents

00:32:35,519 --> 00:32:40,240
and so we need to create those silos

00:32:37,840 --> 00:32:41,760
again but in a virtual space

00:32:40,240 --> 00:32:42,960
and so we have these things called

00:32:41,760 --> 00:32:44,799
governance zones and these are

00:32:42,960 --> 00:32:47,039
effectively sets of

00:32:44,799 --> 00:32:48,240
metadata for different purposes or have

00:32:47,039 --> 00:32:51,360
come from different

00:32:48,240 --> 00:32:54,320
um places owned by different people

00:32:51,360 --> 00:32:55,360
and you can have as many types of zones

00:32:54,320 --> 00:32:59,120
organized

00:32:55,360 --> 00:33:01,679
on different uh um

00:32:59,120 --> 00:33:02,559
you know on different lines um and use

00:33:01,679 --> 00:33:05,039
them together

00:33:02,559 --> 00:33:06,640
so a particular asset can belong to

00:33:05,039 --> 00:33:09,679
multiple zones

00:33:06,640 --> 00:33:11,600
um and the way we do it is actually the

00:33:09,679 --> 00:33:13,039
zone membership for that asset it's just

00:33:11,600 --> 00:33:15,120
a tag on the asset

00:33:13,039 --> 00:33:17,039
so it's very very cheap we're not moving

00:33:15,120 --> 00:33:19,039
it around we just basically update the

00:33:17,039 --> 00:33:20,720
tag to change the zones that it belongs

00:33:19,039 --> 00:33:22,960
to

00:33:20,720 --> 00:33:23,760
and through that we can do an awful lot

00:33:22,960 --> 00:33:26,559
of

00:33:23,760 --> 00:33:27,440
governance management by just

00:33:26,559 --> 00:33:29,600
controlling

00:33:27,440 --> 00:33:30,480
the visibility that a particular tool

00:33:29,600 --> 00:33:33,120
has to

00:33:30,480 --> 00:33:36,080
the to the uh metadata or that

00:33:33,120 --> 00:33:38,559
particular users have

00:33:36,080 --> 00:33:39,440
um and then and we do this because each

00:33:38,559 --> 00:33:42,799
api

00:33:39,440 --> 00:33:44,720
um has a list of zones so

00:33:42,799 --> 00:33:47,279
default zones are used when we create an

00:33:44,720 --> 00:33:51,440
asset uh supported zones are

00:33:47,279 --> 00:33:54,480
the zones that that control which assets

00:33:51,440 --> 00:33:57,200
can be seen through that interface and

00:33:54,480 --> 00:33:57,840
and then the publish ends when we're

00:33:57,200 --> 00:34:00,880
creating

00:33:57,840 --> 00:34:02,080
um an asset we might sort of we

00:34:00,880 --> 00:34:04,399
would it would initially go into the

00:34:02,080 --> 00:34:07,120
default zone and then the publish zone

00:34:04,399 --> 00:34:07,919
would be the zones to when it's ready to

00:34:07,120 --> 00:34:10,159
go

00:34:07,919 --> 00:34:12,800
um ready to be made usable by the

00:34:10,159 --> 00:34:14,879
business the publish zones just list

00:34:12,800 --> 00:34:17,119
what those zones should be updated to to

00:34:14,879 --> 00:34:20,240
enable a broader access

00:34:17,119 --> 00:34:23,440
so uh this this just gives us a very

00:34:20,240 --> 00:34:26,639
um simple way of limiting

00:34:23,440 --> 00:34:28,639
what uh in individual teams can see

00:34:26,639 --> 00:34:30,879
when they uh when they access it through

00:34:28,639 --> 00:34:34,960
a particular interface

00:34:30,879 --> 00:34:35,919
um and that gives you sort of a course

00:34:34,960 --> 00:34:37,520
grain view

00:34:35,919 --> 00:34:39,280
and then we have the very fine grain

00:34:37,520 --> 00:34:41,280
view of security

00:34:39,280 --> 00:34:42,879
that allows us to go right down to a

00:34:41,280 --> 00:34:44,800
single instance of an asset or a

00:34:42,879 --> 00:34:48,560
connection for example

00:34:44,800 --> 00:34:53,359
and apply specialist rules to those

00:34:48,560 --> 00:34:53,359
objects as people are requesting access

00:34:54,159 --> 00:34:57,040
the other thing that's very important is

00:34:55,599 --> 00:34:58,640
if anything goes wrong we need to know

00:34:57,040 --> 00:35:01,599
where metadata comes from

00:34:58,640 --> 00:35:03,280
and so every piece of metadata has a

00:35:01,599 --> 00:35:06,160
header in it an audit header

00:35:03,280 --> 00:35:07,359
that gives us that information um about

00:35:06,160 --> 00:35:10,160
uh the origin the

00:35:07,359 --> 00:35:11,920
um the originator of metadata and that

00:35:10,160 --> 00:35:15,440
is also used to control

00:35:11,920 --> 00:35:18,560
who has permission to update it as well

00:35:15,440 --> 00:35:20,320
across the ecosystem so this the ability

00:35:18,560 --> 00:35:21,280
the transparency and the ability to

00:35:20,320 --> 00:35:23,119
trace

00:35:21,280 --> 00:35:24,320
the origin of metadata is a key

00:35:23,119 --> 00:35:26,880
capability of

00:35:24,320 --> 00:35:26,880
algeria

00:35:27,440 --> 00:35:31,520
finally as i said this this technology

00:35:30,079 --> 00:35:32,480
needs to be deployed in many different

00:35:31,520 --> 00:35:34,320
places

00:35:32,480 --> 00:35:36,880
and we need to make sure that its

00:35:34,320 --> 00:35:40,000
operation is fully automatable

00:35:36,880 --> 00:35:41,119
so the diagnostics for algeria go

00:35:40,000 --> 00:35:43,440
through

00:35:41,119 --> 00:35:45,760
something called the audit log framework

00:35:43,440 --> 00:35:47,040
and all the sort of messages coming out

00:35:45,760 --> 00:35:50,560
of the servers

00:35:47,040 --> 00:35:53,520
um have fully externalized

00:35:50,560 --> 00:35:54,960
with a description of you know so what

00:35:53,520 --> 00:35:57,359
happened in the server and what you have

00:35:54,960 --> 00:35:59,440
to do to resolve it

00:35:57,359 --> 00:36:01,440
it's possible to translate the messages

00:35:59,440 --> 00:36:04,400
so that they can operate in

00:36:01,440 --> 00:36:05,760
in different languages and also all of

00:36:04,400 --> 00:36:09,920
the inserts from the messages

00:36:05,760 --> 00:36:13,359
are available in the log record so that

00:36:09,920 --> 00:36:16,560
different types of processes can be used

00:36:13,359 --> 00:36:19,200
to automatically manage the edgeria

00:36:16,560 --> 00:36:19,200
environment

00:36:20,160 --> 00:36:23,440
i talked about user interfaces now

00:36:21,839 --> 00:36:24,320
obviously different tools are going to

00:36:23,440 --> 00:36:27,520
make use of

00:36:24,320 --> 00:36:29,920
the federated queries

00:36:27,520 --> 00:36:32,000
enterprise view of metadata but we also

00:36:29,920 --> 00:36:33,040
provided some user interfaces of our own

00:36:32,000 --> 00:36:34,640
this is one of them called the

00:36:33,040 --> 00:36:36,320
repository explorer

00:36:34,640 --> 00:36:37,760
that allows you to step through and

00:36:36,320 --> 00:36:41,359
create reports

00:36:37,760 --> 00:36:43,680
of metadata and it works

00:36:41,359 --> 00:36:45,599
using the federated queries so it it

00:36:43,680 --> 00:36:47,200
works across

00:36:45,599 --> 00:36:48,640
the different repositories that are in

00:36:47,200 --> 00:36:50,800
the cohort

00:36:48,640 --> 00:36:51,920
so you get a single view of your

00:36:50,800 --> 00:36:54,160
metadata

00:36:51,920 --> 00:36:56,400
as your browsing there's another user

00:36:54,160 --> 00:36:57,920
interface that allows you to

00:36:56,400 --> 00:36:59,520
create a view of all the different

00:36:57,920 --> 00:37:00,800
technologies that are being integrated

00:36:59,520 --> 00:37:03,200
via algeria

00:37:00,800 --> 00:37:05,200
and another that allows you to explore

00:37:03,200 --> 00:37:08,640
the types of metadata that a particular

00:37:05,200 --> 00:37:11,760
server supports

00:37:08,640 --> 00:37:14,079
and so finally why do um vendors work

00:37:11,760 --> 00:37:16,320
work with us well we've been seeing some

00:37:14,079 --> 00:37:19,040
very common patterns coming out so

00:37:16,320 --> 00:37:20,000
and sometimes a a vendor has created a

00:37:19,040 --> 00:37:21,520
new platform

00:37:20,000 --> 00:37:23,839
but they still have customers on the old

00:37:21,520 --> 00:37:25,599
platform and so by linking them together

00:37:23,839 --> 00:37:28,560
and allowing them to share metadata

00:37:25,599 --> 00:37:29,680
helps organizations migrate onto the new

00:37:28,560 --> 00:37:32,079
platform

00:37:29,680 --> 00:37:32,960
or it might be that the same many

00:37:32,079 --> 00:37:34,960
versions of

00:37:32,960 --> 00:37:36,240
a single product is deployed across the

00:37:34,960 --> 00:37:37,040
enterprise and they want to link them

00:37:36,240 --> 00:37:39,200
together

00:37:37,040 --> 00:37:41,200
or they want to take integration costs

00:37:39,200 --> 00:37:42,880
to different technologies off of their

00:37:41,200 --> 00:37:45,040
platform and bring it into the open

00:37:42,880 --> 00:37:46,079
source or get access to new types of

00:37:45,040 --> 00:37:47,839
metadata

00:37:46,079 --> 00:37:49,520
or push their metadata to other

00:37:47,839 --> 00:37:50,480
technologies to control how they're

00:37:49,520 --> 00:37:52,240
managed

00:37:50,480 --> 00:37:55,040
so the many different use cases that are

00:37:52,240 --> 00:37:57,359
coming up across the vendor

00:37:55,040 --> 00:37:58,880
landscape as we work with different

00:37:57,359 --> 00:38:00,800
companies

00:37:58,880 --> 00:38:02,240
and our development status as i said we

00:38:00,800 --> 00:38:05,839
were very iterative

00:38:02,240 --> 00:38:08,000
innovative community um and so

00:38:05,839 --> 00:38:08,960
it's the the jury technology is very

00:38:08,000 --> 00:38:10,720
modular

00:38:08,960 --> 00:38:12,160
and that big purple area is the

00:38:10,720 --> 00:38:13,839
developer platform that's where most of

00:38:12,160 --> 00:38:15,839
the work has been done because

00:38:13,839 --> 00:38:17,599
we want to be a toolkit to help people

00:38:15,839 --> 00:38:18,640
integrate tools as effectively as

00:38:17,599 --> 00:38:20,400
possible

00:38:18,640 --> 00:38:21,839
but we also want to provide a lot of

00:38:20,400 --> 00:38:24,240
function out of the box and so the

00:38:21,839 --> 00:38:27,599
integration platform this blue area

00:38:24,240 --> 00:38:28,400
is the sort of pre-built plugable stuff

00:38:27,599 --> 00:38:31,280
that you can

00:38:28,400 --> 00:38:32,720
you can deploy education is extremely

00:38:31,280 --> 00:38:34,720
important not just in how to use our

00:38:32,720 --> 00:38:37,200
technology but how to create

00:38:34,720 --> 00:38:38,240
a governed environment for a digital

00:38:37,200 --> 00:38:40,480
enterprise

00:38:38,240 --> 00:38:42,160
and then on top of that we're building

00:38:40,480 --> 00:38:45,200
specialist solutions

00:38:42,160 --> 00:38:47,280
that help people manage

00:38:45,200 --> 00:38:49,040
their enterprise and their digital

00:38:47,280 --> 00:38:52,560
ecosystem

00:38:49,040 --> 00:38:54,560
from from making use of the

00:38:52,560 --> 00:38:58,240
the integrated enterprise view of

00:38:54,560 --> 00:38:58,240
metadata that algeria brings

00:38:58,400 --> 00:39:02,240
and everything is done in plain sight so

00:39:00,720 --> 00:39:06,160
you will see

00:39:02,240 --> 00:39:09,280
um a constant stream of new modules

00:39:06,160 --> 00:39:11,920
that go through development prove um

00:39:09,280 --> 00:39:13,359
sort of tech preview released and then

00:39:11,920 --> 00:39:15,200
on to deprecated not that we've got

00:39:13,359 --> 00:39:17,520
anything deprecated yet

00:39:15,200 --> 00:39:18,880
um but uh that's that's the sort of

00:39:17,520 --> 00:39:22,000
process and so

00:39:18,880 --> 00:39:23,440
um here i've got a picture of the um the

00:39:22,000 --> 00:39:24,960
desktop and you can see there's bits of

00:39:23,440 --> 00:39:26,160
it that are completely finished and we

00:39:24,960 --> 00:39:28,640
have modules like that

00:39:26,160 --> 00:39:30,560
but we also have modules that if you see

00:39:28,640 --> 00:39:32,720
they're flagged as in development and

00:39:30,560 --> 00:39:33,839
and there are they are literally from

00:39:32,720 --> 00:39:36,240
here's the api

00:39:33,839 --> 00:39:37,280
through to uh sort of some use cases

00:39:36,240 --> 00:39:41,040
working and then

00:39:37,280 --> 00:39:44,160
as it migrates as it matures to

00:39:41,040 --> 00:39:47,200
a release status um and our current

00:39:44,160 --> 00:39:47,839
um status is really shown here so green

00:39:47,200 --> 00:39:49,920
means

00:39:47,839 --> 00:39:51,599
uh that it's at least a tech preview

00:39:49,920 --> 00:39:52,320
orange means that it's actually being

00:39:51,599 --> 00:39:54,240
developed

00:39:52,320 --> 00:39:56,880
red means it's a sort of concept at the

00:39:54,240 --> 00:39:58,880
moment and we're looking at um

00:39:56,880 --> 00:40:00,320
and we're looking at doing some initial

00:39:58,880 --> 00:40:02,800
design work on it

00:40:00,320 --> 00:40:04,400
and our focuses are really around

00:40:02,800 --> 00:40:07,680
integration at the moment

00:40:04,400 --> 00:40:09,520
and enabling uh lineage and sort of

00:40:07,680 --> 00:40:13,839
higher governance functions

00:40:09,520 --> 00:40:15,760
as well so uh that is algeria

00:40:13,839 --> 00:40:18,240
i hope this has been an interesting

00:40:15,760 --> 00:40:19,760
session we are very active community we

00:40:18,240 --> 00:40:21,200
are looking for

00:40:19,760 --> 00:40:22,880
more people to work with us whether you

00:40:21,200 --> 00:40:25,520
have use cases

00:40:22,880 --> 00:40:27,200
or you're interested in doing some some

00:40:25,520 --> 00:40:30,800
interesting development work

00:40:27,200 --> 00:40:34,319
uh you're a writer you um love doing

00:40:30,800 --> 00:40:34,720
developer advocacy we have so much to do

00:40:34,319 --> 00:40:37,040
that

00:40:34,720 --> 00:40:38,000
we would love to hear from you so thank

00:40:37,040 --> 00:40:52,319
you very much

00:40:38,000 --> 00:40:54,400
and that is the end of the presentation

00:40:52,319 --> 00:40:54,400

YouTube URL: https://www.youtube.com/watch?v=HmGAfPRJztw


