Title: Ask the Expert Session with Tim Bird, Principal Software Engineer, Sony
Publication date: 2020-11-17
Playlist: Open Source Summit & Embedded Linux Conference Europe 2020
Description: 
	Ask the Expert Session with Tim Bird, Principal Software Engineer, Sony
Captions: 
	00:00:07,520 --> 00:00:11,360
hi everyone

00:00:08,480 --> 00:00:12,400
this is tim bird i am a principal

00:00:11,360 --> 00:00:16,080
engineer for

00:00:12,400 --> 00:00:18,320
sony and i uh

00:00:16,080 --> 00:00:19,920
i guess i'm an embedded linux expert

00:00:18,320 --> 00:00:23,199
i've been doing linux for

00:00:19,920 --> 00:00:26,400
about uh 25 years now

00:00:23,199 --> 00:00:28,000
embedded most of that time and uh so i'm

00:00:26,400 --> 00:00:31,599
here to answer your questions

00:00:28,000 --> 00:00:32,960
uh and so if uh i don't know if anyone's

00:00:31,599 --> 00:00:36,079
out there or not

00:00:32,960 --> 00:00:38,879
but uh go ahead and uh

00:00:36,079 --> 00:00:39,600
fire away and we'll have a little ask

00:00:38,879 --> 00:00:43,440
the esper

00:00:39,600 --> 00:00:46,719
expert session so

00:00:43,440 --> 00:00:49,520
let me uh just click on the q a

00:00:46,719 --> 00:00:51,840
and uh see if see if anyone has

00:00:49,520 --> 00:00:55,199
something they want to talk to me about

00:00:51,840 --> 00:00:57,760
um so

00:00:55,199 --> 00:01:00,239
just while i'm waiting for uh people to

00:00:57,760 --> 00:01:01,120
formulate questions let me just toss out

00:01:00,239 --> 00:01:03,680
some

00:01:01,120 --> 00:01:05,600
information about what's been going on

00:01:03,680 --> 00:01:06,240
recently so i have a couple of sessions

00:01:05,600 --> 00:01:09,360
at this

00:01:06,240 --> 00:01:10,720
conference i've been working with time

00:01:09,360 --> 00:01:12,000
sys

00:01:10,720 --> 00:01:14,080
sony and time systems have been working

00:01:12,000 --> 00:01:17,439
together on some board farm

00:01:14,080 --> 00:01:19,759
related software um and i've got a talk

00:01:17,439 --> 00:01:19,759
on

00:01:20,799 --> 00:01:24,560
tuesday yeah so i have a couple of

00:01:23,280 --> 00:01:26,400
different talks

00:01:24,560 --> 00:01:27,840
so i have a talk on tuesday on that

00:01:26,400 --> 00:01:31,119
topic um

00:01:27,840 --> 00:01:33,200
and then on uh

00:01:31,119 --> 00:01:34,400
oh how did that i got my first question

00:01:33,200 --> 00:01:36,720
so i'll get back to that

00:01:34,400 --> 00:01:38,320
my other talk is on compliance license

00:01:36,720 --> 00:01:39,600
compliance and that's on wednesday and

00:01:38,320 --> 00:01:41,600
then i do the closing game

00:01:39,600 --> 00:01:42,720
so the first question i've got is how

00:01:41,600 --> 00:01:46,640
did embedded links

00:01:42,720 --> 00:01:51,360
conference get started so um actually

00:01:46,640 --> 00:01:54,479
before the linux foundation existed um

00:01:51,360 --> 00:01:56,719
there was a an organization called the

00:01:54,479 --> 00:01:59,520
embedded linux consortium

00:01:56,719 --> 00:02:01,600
which was also called elc by the way but

00:01:59,520 --> 00:02:03,759
that was a group early early people

00:02:01,600 --> 00:02:06,640
in the embedded linux industry got

00:02:03,759 --> 00:02:09,679
started time sys and monte vista

00:02:06,640 --> 00:02:13,120
and lineal at the time i was at lineal

00:02:09,679 --> 00:02:14,879
and uh we started having meetings

00:02:13,120 --> 00:02:16,959
uh talking about this and then

00:02:14,879 --> 00:02:20,000
eventually uh

00:02:16,959 --> 00:02:23,440
activity in that form wound down and uh

00:02:20,000 --> 00:02:26,080
i was recruited by sony uh this actually

00:02:23,440 --> 00:02:27,599
ties into a little bit of the next

00:02:26,080 --> 00:02:28,959
question which i have here which is tell

00:02:27,599 --> 00:02:30,080
us more about the open source journey

00:02:28,959 --> 00:02:31,840
with sony so

00:02:30,080 --> 00:02:33,840
i'm answering two questions now at the

00:02:31,840 --> 00:02:36,879
same time um

00:02:33,840 --> 00:02:40,239
so i was hired by sony officially

00:02:36,879 --> 00:02:41,120
uh in 2003 to start a new trade

00:02:40,239 --> 00:02:44,319
association

00:02:41,120 --> 00:02:48,400
the consumer electronics linux forum and

00:02:44,319 --> 00:02:50,800
uh and so that organization

00:02:48,400 --> 00:02:52,560
started by having uh like some

00:02:50,800 --> 00:02:53,440
requirements meetings and we also

00:02:52,560 --> 00:02:55,680
started

00:02:53,440 --> 00:02:56,959
having some uh we put together these

00:02:55,680 --> 00:02:58,400
technical working groups and we had

00:02:56,959 --> 00:02:58,959
technical working group meetings that we

00:02:58,400 --> 00:03:00,879
would have

00:02:58,959 --> 00:03:03,519
like every six months at different

00:03:00,879 --> 00:03:05,519
places well in about 2005

00:03:03,519 --> 00:03:06,959
we realized we were having all these

00:03:05,519 --> 00:03:08,159
technical meetings that was isolated

00:03:06,959 --> 00:03:10,879
from the community

00:03:08,159 --> 00:03:11,280
uh and we thought well that's not the

00:03:10,879 --> 00:03:14,640
right

00:03:11,280 --> 00:03:16,159
open source model so we switched and had

00:03:14,640 --> 00:03:18,720
started to have an open conference the

00:03:16,159 --> 00:03:20,080
first year we called it a worldwide

00:03:18,720 --> 00:03:21,840
technical conference or something like

00:03:20,080 --> 00:03:22,720
that and it was a combination of these

00:03:21,840 --> 00:03:25,840
technical

00:03:22,720 --> 00:03:27,040
committee meetings that were on topics

00:03:25,840 --> 00:03:30,560
like real time

00:03:27,040 --> 00:03:33,120
and i was at the time i was the

00:03:30,560 --> 00:03:35,040
chairman of the boot time working group

00:03:33,120 --> 00:03:36,400
um and then we had a size group and a

00:03:35,040 --> 00:03:38,239
security group

00:03:36,400 --> 00:03:39,680
anyway so we started inviting community

00:03:38,239 --> 00:03:42,720
members and that was

00:03:39,680 --> 00:03:43,360
mostly uh hosted in san jose and then

00:03:42,720 --> 00:03:45,360
from that

00:03:43,360 --> 00:03:46,720
it just turned into an open conference

00:03:45,360 --> 00:03:48,239
from then on uh

00:03:46,720 --> 00:03:50,319
in the early days it was hosted by the

00:03:48,239 --> 00:03:53,680
ce linux forum and then around

00:03:50,319 --> 00:03:55,360
2010 ce linux forum kind of got

00:03:53,680 --> 00:03:57,599
acquired or merged into the linux

00:03:55,360 --> 00:04:00,799
foundation and so

00:03:57,599 --> 00:04:01,920
um that's that's where it started so

00:04:00,799 --> 00:04:05,360
we've been going

00:04:01,920 --> 00:04:05,840
since 2005 so we're 15 15 years now

00:04:05,360 --> 00:04:10,080
which is

00:04:05,840 --> 00:04:11,840
pretty amazing um getting back to uh

00:04:10,080 --> 00:04:13,599
uh alexander's question tell us more

00:04:11,840 --> 00:04:15,840
about your open source journey with sony

00:04:13,599 --> 00:04:17,759
so i was hired by sony originally to

00:04:15,840 --> 00:04:18,799
start this uh trade association the sea

00:04:17,759 --> 00:04:22,400
linux forum

00:04:18,799 --> 00:04:26,080
but um i had linux experience

00:04:22,400 --> 00:04:29,440
um and i had been i had been

00:04:26,080 --> 00:04:31,680
the cto of lineal which is an early

00:04:29,440 --> 00:04:33,280
embedded linux company and so i had

00:04:31,680 --> 00:04:33,840
experience with the kernel and i found

00:04:33,280 --> 00:04:37,120
myself

00:04:33,840 --> 00:04:40,400
also consulting with product teams on

00:04:37,120 --> 00:04:43,680
um on

00:04:40,400 --> 00:04:45,919
how to add certain features particularly

00:04:43,680 --> 00:04:47,919
since i was a boot time expert that that

00:04:45,919 --> 00:04:48,560
by the time i finished with the c linux

00:04:47,919 --> 00:04:50,639
form

00:04:48,560 --> 00:04:52,240
i i did a lot of size work on sony

00:04:50,639 --> 00:04:53,840
cameras i did uh

00:04:52,240 --> 00:04:55,440
actually ended up maintaining kernel for

00:04:53,840 --> 00:04:57,600
one of the product teams

00:04:55,440 --> 00:04:58,639
uh that was used heavily in some of the

00:04:57,600 --> 00:05:02,560
visual uh

00:04:58,639 --> 00:05:06,000
the camcorder products um and then

00:05:02,560 --> 00:05:07,600
uh that's it let's work from there it

00:05:06,000 --> 00:05:09,759
developed into all kinds of stuff

00:05:07,600 --> 00:05:11,600
and so now unfortunately i don't do a

00:05:09,759 --> 00:05:12,880
whole lot of kernel coding i used to do

00:05:11,600 --> 00:05:15,199
a lot of kernel coding

00:05:12,880 --> 00:05:16,479
uh but nowadays i'm doing i'm focused on

00:05:15,199 --> 00:05:19,759
automated testing

00:05:16,479 --> 00:05:22,000
and i'm on i do

00:05:19,759 --> 00:05:22,960
like help sony with compliance issues

00:05:22,000 --> 00:05:24,320
and stuff like that

00:05:22,960 --> 00:05:26,080
so that's my two talks at this

00:05:24,320 --> 00:05:27,600
conference so the next question is from

00:05:26,080 --> 00:05:29,360
michael oppenhacker he says

00:05:27,600 --> 00:05:31,280
what hardware are you currently working

00:05:29,360 --> 00:05:33,360
on and so

00:05:31,280 --> 00:05:34,320
i have right next to me i don't know

00:05:33,360 --> 00:05:37,280
should i should i

00:05:34,320 --> 00:05:38,639
this is a bad idea but right next to me

00:05:37,280 --> 00:05:41,680
is my lab

00:05:38,639 --> 00:05:43,360
so i've got a bunch of boards here uh

00:05:41,680 --> 00:05:44,960
you know if you've ever seen a hardware

00:05:43,360 --> 00:05:45,280
lab you know this kind of stuff looks

00:05:44,960 --> 00:05:47,280
like

00:05:45,280 --> 00:05:48,800
sorry that was all fuzzy and i don't

00:05:47,280 --> 00:05:52,080
know if and then now i've messed up

00:05:48,800 --> 00:05:53,759
you know my my own setup here but um

00:05:52,080 --> 00:05:55,360
so i have a raspberry pi i have a

00:05:53,759 --> 00:05:58,400
beaglebone i have a middle board

00:05:55,360 --> 00:05:59,039
i have like a renaissance board um and

00:05:58,400 --> 00:06:01,919
i'm not

00:05:59,039 --> 00:06:02,560
i'm not actually testing those boards as

00:06:01,919 --> 00:06:05,440
much as i

00:06:02,560 --> 00:06:06,319
am testing the tests for those boards so

00:06:05,440 --> 00:06:08,319
automated

00:06:06,319 --> 00:06:09,440
automated testing i found that there's a

00:06:08,319 --> 00:06:13,039
lot of issues

00:06:09,440 --> 00:06:16,960
with um with automated testing

00:06:13,039 --> 00:06:18,240
systems um and so a lot of these boards

00:06:16,960 --> 00:06:20,400
are actually kind of running older

00:06:18,240 --> 00:06:23,199
kernels i'm not actually doing like

00:06:20,400 --> 00:06:27,360
upstream testing that kernel ci is doing

00:06:23,199 --> 00:06:28,240
i'm the maintainer for a project called

00:06:27,360 --> 00:06:31,280
fuego

00:06:28,240 --> 00:06:32,479
which is an automated testing suite and

00:06:31,280 --> 00:06:34,400
it's used inside sony

00:06:32,479 --> 00:06:35,840
and inside some other companies i know

00:06:34,400 --> 00:06:38,960
fujitsu uses it and

00:06:35,840 --> 00:06:41,360
toshiba toshiba has used it

00:06:38,960 --> 00:06:42,240
and it's got a little bit different spin

00:06:41,360 --> 00:06:44,960
because it's not

00:06:42,240 --> 00:06:47,360
targeted upstream it has it some of the

00:06:44,960 --> 00:06:49,199
features are a little bit different

00:06:47,360 --> 00:06:51,280
so what i end up doing is i'm testing

00:06:49,199 --> 00:06:54,400
ltp and i'm testing k self-test

00:06:51,280 --> 00:06:56,720
and so i make sure that they run on this

00:06:54,400 --> 00:06:59,120
wide variety of hardware i have compiler

00:06:56,720 --> 00:07:00,400
cross compiler two chains for that and

00:06:59,120 --> 00:07:01,280
then the project i've been working on

00:07:00,400 --> 00:07:04,000
recently with

00:07:01,280 --> 00:07:04,960
with time sys has been about uh board

00:07:04,000 --> 00:07:06,960
farm software

00:07:04,960 --> 00:07:08,639
and managing board farms so it's a

00:07:06,960 --> 00:07:12,000
little bit of a meta project it's

00:07:08,639 --> 00:07:14,319
it's not uh the hardware

00:07:12,000 --> 00:07:15,919
it really doesn't matter uh you know it

00:07:14,319 --> 00:07:17,120
probably matters to the raspberry pi and

00:07:15,919 --> 00:07:20,240
the beaglebone people but

00:07:17,120 --> 00:07:22,400
but that's not that that critical for me

00:07:20,240 --> 00:07:23,520
um so but that's my hardware i've got a

00:07:22,400 --> 00:07:26,160
lab right here in my

00:07:23,520 --> 00:07:26,560
in my basement here um the next question

00:07:26,160 --> 00:07:28,080
is

00:07:26,560 --> 00:07:29,840
hi tim are there any follow-ups for the

00:07:28,080 --> 00:07:30,800
automated testing summit planned at the

00:07:29,840 --> 00:07:34,080
moment

00:07:30,800 --> 00:07:35,680
and um that is a really good question so

00:07:34,080 --> 00:07:37,520
for two years we had

00:07:35,680 --> 00:07:39,280
an event called the automated testing

00:07:37,520 --> 00:07:41,840
summit and

00:07:39,280 --> 00:07:42,960
uh i thought it was really good but one

00:07:41,840 --> 00:07:46,720
of the things that kind

00:07:42,960 --> 00:07:51,440
well we're trying to create

00:07:46,720 --> 00:07:52,720
um uh synergy between a lot of different

00:07:51,440 --> 00:07:55,039
testing projects

00:07:52,720 --> 00:07:56,000
and one of the things we found is that

00:07:55,039 --> 00:07:57,520
we had

00:07:56,000 --> 00:07:59,039
some good participation from the

00:07:57,520 --> 00:08:00,639
embedded people

00:07:59,039 --> 00:08:02,560
at automated testing summit because it

00:08:00,639 --> 00:08:05,360
was always co-located with the

00:08:02,560 --> 00:08:06,720
embedded limits conference but um we

00:08:05,360 --> 00:08:10,479
didn't get as much

00:08:06,720 --> 00:08:13,759
uh participation from some of the

00:08:10,479 --> 00:08:15,440
uh other areas of the um

00:08:13,759 --> 00:08:17,120
ecosystem for instance the enterprise

00:08:15,440 --> 00:08:19,039
guys and and the distribution

00:08:17,120 --> 00:08:20,639
vendors in particular and so we've

00:08:19,039 --> 00:08:22,400
started we've kind of shifted and now

00:08:20,639 --> 00:08:25,599
we're just piggybacking some of our

00:08:22,400 --> 00:08:26,560
stuff for automated testing on linux

00:08:25,599 --> 00:08:29,919
plumbers

00:08:26,560 --> 00:08:31,680
um so linux plumbers unfortunately

00:08:29,919 --> 00:08:33,760
well so there isn't there's a testing

00:08:31,680 --> 00:08:36,080
and fuzzing uh micro conference that

00:08:33,760 --> 00:08:38,880
happens at linux plumbers every year

00:08:36,080 --> 00:08:39,599
and this year was where kind of the main

00:08:38,880 --> 00:08:42,159
action

00:08:39,599 --> 00:08:43,599
for automated testing was happening so

00:08:42,159 --> 00:08:45,839
that's not to say that there

00:08:43,599 --> 00:08:47,600
is not still collaboration and

00:08:45,839 --> 00:08:49,519
cooperation going on

00:08:47,600 --> 00:08:51,279
particularly elc i think we have about

00:08:49,519 --> 00:08:54,320
four or five talks

00:08:51,279 --> 00:08:55,600
uh on automated testing at elc so you

00:08:54,320 --> 00:08:57,040
can consider it kind of an embedded

00:08:55,600 --> 00:08:58,240
track although it's not broken out as

00:08:57,040 --> 00:09:02,480
one

00:08:58,240 --> 00:09:03,839
um and so um

00:09:02,480 --> 00:09:04,800
so that's that's kind of where it's

00:09:03,839 --> 00:09:06,320
happening it's that right now it's

00:09:04,800 --> 00:09:07,440
happening at plumbers and there is a

00:09:06,320 --> 00:09:09,200
kind of embedded

00:09:07,440 --> 00:09:11,360
sessions at individual conferences but

00:09:09,200 --> 00:09:13,519
we don't we don't have like

00:09:11,360 --> 00:09:14,640
we may restart it if it kind of starts

00:09:13,519 --> 00:09:18,640
to get big enough but

00:09:14,640 --> 00:09:21,040
uh didn't seem like there was enough um

00:09:18,640 --> 00:09:22,160
enough intersection of people at like

00:09:21,040 --> 00:09:24,800
ats

00:09:22,160 --> 00:09:25,680
to get all the right people involved so

00:09:24,800 --> 00:09:27,200
the next question

00:09:25,680 --> 00:09:29,279
is what is the fastest you have ever

00:09:27,200 --> 00:09:30,320
booted linux and what techniques did you

00:09:29,279 --> 00:09:34,160
use to achieve it

00:09:30,320 --> 00:09:37,440
so i i i although i'm not intimately

00:09:34,160 --> 00:09:40,240
uh working on um

00:09:37,440 --> 00:09:41,200
on like an actual product at the moment

00:09:40,240 --> 00:09:45,360
so i used to work

00:09:41,200 --> 00:09:48,480
uh at sony i used to work on um

00:09:45,360 --> 00:09:50,560
uh let's see i worked on camcorders

00:09:48,480 --> 00:09:51,600
worked on blu-ray players worked on tv

00:09:50,560 --> 00:09:52,880
sets uh

00:09:51,600 --> 00:09:54,720
worked in mobile phone division for a

00:09:52,880 --> 00:09:57,040
while uh but

00:09:54,720 --> 00:09:58,880
uh when we were doing cameras boot up

00:09:57,040 --> 00:10:01,040
time was a really huge issue

00:09:58,880 --> 00:10:02,320
um and this was this was probably at

00:10:01,040 --> 00:10:05,600
least 10 years ago

00:10:02,320 --> 00:10:07,839
but the best we ever did uh in

00:10:05,600 --> 00:10:08,880
in in the lab we were able to boot a

00:10:07,839 --> 00:10:12,079
system in

00:10:08,880 --> 00:10:15,360
uh 180 uh

00:10:12,079 --> 00:10:17,120
milliseconds so 0.18 seconds

00:10:15,360 --> 00:10:18,560
uh that was that was you know that was a

00:10:17,120 --> 00:10:19,680
that was a toy system that was all

00:10:18,560 --> 00:10:23,040
stripped down to its

00:10:19,680 --> 00:10:26,320
its bare essentials um the

00:10:23,040 --> 00:10:27,920
in a production environment the cameras

00:10:26,320 --> 00:10:30,079
our goal with the camera was to boot it

00:10:27,920 --> 00:10:32,240
in under a second uh because

00:10:30,079 --> 00:10:34,399
nobody likes their cameras to start slow

00:10:32,240 --> 00:10:35,839
right so i don't know if you've ever

00:10:34,399 --> 00:10:37,040
fiddled with your cameras the cameras on

00:10:35,839 --> 00:10:39,360
the cell phones are terrible in my

00:10:37,040 --> 00:10:42,079
opinion they they don't come up fast

00:10:39,360 --> 00:10:42,560
um it but anyway so our goal was a

00:10:42,079 --> 00:10:45,360
second

00:10:42,560 --> 00:10:46,160
and actually in production i i used to

00:10:45,360 --> 00:10:48,640
do a demonstration

00:10:46,160 --> 00:10:50,240
where we could cold boot a video camera

00:10:48,640 --> 00:10:51,360
a sony video camera in fact that one

00:10:50,240 --> 00:10:53,040
right there on

00:10:51,360 --> 00:10:55,440
that one is a video camera right there

00:10:53,040 --> 00:10:57,200
that's the one uh we could cold boot

00:10:55,440 --> 00:10:58,320
that take the battery out so there's no

00:10:57,200 --> 00:11:01,200
power applied

00:10:58,320 --> 00:11:01,519
this is not um suspend resume which is

00:11:01,200 --> 00:11:03,040
what

00:11:01,519 --> 00:11:04,800
a lot of cameras are doing these days

00:11:03,040 --> 00:11:07,200
but put the battery in

00:11:04,800 --> 00:11:08,079
turn the on button on and you'd have the

00:11:07,200 --> 00:11:10,399
video

00:11:08,079 --> 00:11:11,440
and the camera mechanics already in half

00:11:10,399 --> 00:11:13,200
second

00:11:11,440 --> 00:11:14,880
and so we thought that was pretty pretty

00:11:13,200 --> 00:11:17,839
good

00:11:14,880 --> 00:11:18,720
so another question here any hints for

00:11:17,839 --> 00:11:21,519
submitting

00:11:18,720 --> 00:11:22,720
elc and elcl you'll see europe talk

00:11:21,519 --> 00:11:25,839
proposals

00:11:22,720 --> 00:11:27,760
yes i do i have strong opinions on this

00:11:25,839 --> 00:11:29,839
i've been the chair of the committee

00:11:27,760 --> 00:11:30,800
i guess since its inception because

00:11:29,839 --> 00:11:32,800
we've always

00:11:30,800 --> 00:11:34,160
moderated well since we started

00:11:32,800 --> 00:11:35,200
moderating i've been moderating the

00:11:34,160 --> 00:11:38,959
talks and

00:11:35,200 --> 00:11:40,640
and selecting which ones to accept and

00:11:38,959 --> 00:11:42,320
uh sometimes it's frustrating because

00:11:40,640 --> 00:11:44,160
sometimes you see that someone has like

00:11:42,320 --> 00:11:48,000
kind of a good idea

00:11:44,160 --> 00:11:51,040
but the abstract is not um

00:11:48,000 --> 00:11:54,320
is not good i don't know how to put it

00:11:51,040 --> 00:11:54,959
any nicer than that um so sometimes

00:11:54,320 --> 00:11:58,079
you'll see

00:11:54,959 --> 00:12:00,079
about um the most most common

00:11:58,079 --> 00:12:02,480
problem that i see is people will spend

00:12:00,079 --> 00:12:04,399
too much time describing the problem

00:12:02,480 --> 00:12:05,920
and not enough time on what their talk's

00:12:04,399 --> 00:12:08,000
actually going to be about so

00:12:05,920 --> 00:12:10,959
if you're so this is a this is a really

00:12:08,000 --> 00:12:13,200
quick answer if you're going to submit a

00:12:10,959 --> 00:12:15,920
talk to a conference make sure

00:12:13,200 --> 00:12:17,440
that you have some details about what

00:12:15,920 --> 00:12:18,959
the actual talk is going to be

00:12:17,440 --> 00:12:20,639
about so a lot of people spend too much

00:12:18,959 --> 00:12:22,800
time on justification and they kind of

00:12:20,639 --> 00:12:24,079
wave their hands and say something like

00:12:22,800 --> 00:12:25,600
oh and then i'm going to present some

00:12:24,079 --> 00:12:26,800
solutions for this big problem i just

00:12:25,600 --> 00:12:30,079
described it's like well no i

00:12:26,800 --> 00:12:32,320
not some solutions you know tell us

00:12:30,079 --> 00:12:33,839
what you know what what are the

00:12:32,320 --> 00:12:36,880
solutions that you're proposing

00:12:33,839 --> 00:12:38,480
and if you have some data go ahead and

00:12:36,880 --> 00:12:39,920
you know don't don't save it for your

00:12:38,480 --> 00:12:41,279
presentation if you

00:12:39,920 --> 00:12:43,360
if you like you're doing a talk on boot

00:12:41,279 --> 00:12:44,399
up time and you were able to save you

00:12:43,360 --> 00:12:46,399
know

00:12:44,399 --> 00:12:47,920
a half second through some technique say

00:12:46,399 --> 00:12:49,200
i used this technique and it saved a

00:12:47,920 --> 00:12:49,839
half second and i'll describe that in

00:12:49,200 --> 00:12:51,519
the talk

00:12:49,839 --> 00:12:52,880
so be specific about what's going to be

00:12:51,519 --> 00:12:53,519
in your talk i think that's really

00:12:52,880 --> 00:12:56,639
important

00:12:53,519 --> 00:12:57,680
um that and so i'll just

00:12:56,639 --> 00:12:59,040
i'll just leave it at that because

00:12:57,680 --> 00:13:00,079
there's some other questions here that

00:12:59,040 --> 00:13:01,920
popped up

00:13:00,079 --> 00:13:04,000
okay is there any general technique to

00:13:01,920 --> 00:13:06,480
debug any hardware or interface

00:13:04,000 --> 00:13:07,279
related issues into boot loader or grub

00:13:06,480 --> 00:13:10,480
loader

00:13:07,279 --> 00:13:13,920
specifically into linux um

00:13:10,480 --> 00:13:16,639
i am not sure exactly the

00:13:13,920 --> 00:13:17,760
nature of this question but i i think

00:13:16,639 --> 00:13:21,839
you're asking

00:13:17,760 --> 00:13:21,839
um let's see

00:13:22,240 --> 00:13:25,839
um i think you're asking is it possible

00:13:24,880 --> 00:13:30,639
to

00:13:25,839 --> 00:13:33,680
um debug the bootloader

00:13:30,639 --> 00:13:35,040
using uh techniques as it transitions

00:13:33,680 --> 00:13:38,240
into the kernel

00:13:35,040 --> 00:13:40,399
um or use

00:13:38,240 --> 00:13:41,440
kernel features to debug uh the

00:13:40,399 --> 00:13:44,800
bootloader

00:13:41,440 --> 00:13:45,600
like grub so yes uh the one big thing

00:13:44,800 --> 00:13:48,720
i'm aware of

00:13:45,600 --> 00:13:50,880
is there was some work done to be able

00:13:48,720 --> 00:13:51,440
to pass the tracing buffer that's used

00:13:50,880 --> 00:13:54,720
in

00:13:51,440 --> 00:13:56,800
u-boot through to the kernel

00:13:54,720 --> 00:13:58,480
so that after the kernel was booted you

00:13:56,800 --> 00:14:00,160
could use kernel tools to go look at

00:13:58,480 --> 00:14:02,320
that tracing buffer

00:14:00,160 --> 00:14:03,519
i don't remember the details of that uh

00:14:02,320 --> 00:14:07,040
honestly so

00:14:03,519 --> 00:14:08,399
i i'm gonna have to just pass on

00:14:07,040 --> 00:14:11,360
answering the rest of that there are

00:14:08,399 --> 00:14:13,279
some other obviously um

00:14:11,360 --> 00:14:14,880
when you transition between the boot

00:14:13,279 --> 00:14:16,720
loader and the kernel

00:14:14,880 --> 00:14:18,079
uh usually the boot loader has control

00:14:16,720 --> 00:14:19,360
of the serial console and then it

00:14:18,079 --> 00:14:21,760
transitions to the

00:14:19,360 --> 00:14:22,880
the kernel so there are some other other

00:14:21,760 --> 00:14:25,680
techniques you can use

00:14:22,880 --> 00:14:28,079
to to have the kerneling that data so

00:14:25,680 --> 00:14:31,279
there's something called

00:14:28,079 --> 00:14:32,800
the protected ram fs uh where the

00:14:31,279 --> 00:14:34,320
bootloader could store some data

00:14:32,800 --> 00:14:36,320
and the kernel could then pick up that

00:14:34,320 --> 00:14:37,519
data so that's another that's another

00:14:36,320 --> 00:14:39,440
mechanism for

00:14:37,519 --> 00:14:41,680
passing data that allows you to debug

00:14:39,440 --> 00:14:45,120
the boot loader through the kernel

00:14:41,680 --> 00:14:45,760
okay uh another question uh what do i

00:14:45,120 --> 00:14:48,160
think about

00:14:45,760 --> 00:14:50,000
robert frame robot framework as an

00:14:48,160 --> 00:14:51,120
automated testing framework on embedded

00:14:50,000 --> 00:14:53,279
linux devices

00:14:51,120 --> 00:14:54,560
any other suggestions as automated

00:14:53,279 --> 00:14:57,279
testing framework

00:14:54,560 --> 00:14:58,000
so i am not sure what you're referring

00:14:57,279 --> 00:15:00,079
to is robot

00:14:58,000 --> 00:15:02,160
framework if there's a specific

00:15:00,079 --> 00:15:05,600
automated testing framework called robot

00:15:02,160 --> 00:15:07,120
framework i am not familiar with it uh

00:15:05,600 --> 00:15:08,800
i thought this might be about robot

00:15:07,120 --> 00:15:11,519
operating system

00:15:08,800 --> 00:15:13,680
but it seems to be about testing in

00:15:11,519 --> 00:15:17,360
terms of an automated testing framework

00:15:13,680 --> 00:15:19,519
uh i have well

00:15:17,360 --> 00:15:20,639
you're asking someone who's like

00:15:19,519 --> 00:15:24,079
completely biased

00:15:20,639 --> 00:15:25,680
because you know i i work on the fuego

00:15:24,079 --> 00:15:26,480
system so i would recommend fuego of

00:15:25,680 --> 00:15:29,120
course

00:15:26,480 --> 00:15:29,519
but having said that the industry as a

00:15:29,120 --> 00:15:31,360
whole

00:15:29,519 --> 00:15:33,040
for upstream testing the industry has as

00:15:31,360 --> 00:15:34,240
a whole is moving towards kernel ci and

00:15:33,040 --> 00:15:38,839
lava

00:15:34,240 --> 00:15:41,680
and so uh just as a as an example

00:15:38,839 --> 00:15:42,639
um uh the project that i just did with

00:15:41,680 --> 00:15:46,079
time sis

00:15:42,639 --> 00:15:48,560
recently uh has to do with uh extensions

00:15:46,079 --> 00:15:50,880
to lava to add board farm management

00:15:48,560 --> 00:15:52,320
uh capabilities to lava and the lava

00:15:50,880 --> 00:15:55,759
console in particular

00:15:52,320 --> 00:15:56,480
so um and i think so i have my own

00:15:55,759 --> 00:15:57,920
project

00:15:56,480 --> 00:16:00,000
that is not ready for prime time i'll

00:15:57,920 --> 00:16:00,800
describe it in my talk but i have my own

00:16:00,000 --> 00:16:04,240
project that

00:16:00,800 --> 00:16:06,800
um that does board farm management um

00:16:04,240 --> 00:16:08,959
but i think i think you can't go too far

00:16:06,800 --> 00:16:09,759
wrong if you uh get on the lava

00:16:08,959 --> 00:16:11,279
bandwagon

00:16:09,759 --> 00:16:13,199
and but of course i would love you to

00:16:11,279 --> 00:16:14,880
join the fuego community the fuego

00:16:13,199 --> 00:16:16,480
i'm trying to get the two kind of hooked

00:16:14,880 --> 00:16:18,320
up uh and so this

00:16:16,480 --> 00:16:20,839
actual api thing i'm doing with time so

00:16:18,320 --> 00:16:23,680
this is related to that

00:16:20,839 --> 00:16:25,920
um uh here's another question does linux

00:16:23,680 --> 00:16:28,240
have a future in deeply embedded systems

00:16:25,920 --> 00:16:30,480
less than two meg uh and whatever

00:16:28,240 --> 00:16:33,920
happened to the linux tiny project

00:16:30,480 --> 00:16:37,600
so uh

00:16:33,920 --> 00:16:38,320
no i you know i and it pains me to say

00:16:37,600 --> 00:16:40,720
that but i don't

00:16:38,320 --> 00:16:42,240
i don't think linux is gonna do very

00:16:40,720 --> 00:16:43,680
well in the two meg market we used to do

00:16:42,240 --> 00:16:46,240
a lot of work on that i

00:16:43,680 --> 00:16:47,040
i was i did a lot of work on linux tiny

00:16:46,240 --> 00:16:50,079
project

00:16:47,040 --> 00:16:51,600
and uh and we hired matt makel who i

00:16:50,079 --> 00:16:54,959
don't know if you know who he is but

00:16:51,600 --> 00:16:59,120
uh did uh work for many many years on on

00:16:54,959 --> 00:17:01,199
reducing system size and linux and um

00:16:59,120 --> 00:17:03,120
and i just don't i just don't see it

00:17:01,199 --> 00:17:05,600
happen the forces

00:17:03,120 --> 00:17:07,360
uh inside the kernel in terms of trying

00:17:05,600 --> 00:17:08,799
to stretch the kernel to fit all these

00:17:07,360 --> 00:17:11,839
different niches

00:17:08,799 --> 00:17:14,400
uh it's just gotten way too hard to

00:17:11,839 --> 00:17:14,880
to trim linux down under and into a two

00:17:14,400 --> 00:17:18,880
meg

00:17:14,880 --> 00:17:20,079
system so unfortunately i think that

00:17:18,880 --> 00:17:22,160
means we're going to miss out on a lot

00:17:20,079 --> 00:17:23,679
of iot opportunities but there's there's

00:17:22,160 --> 00:17:26,720
plenty of other space

00:17:23,679 --> 00:17:29,360
from from i think from about 4mag

00:17:26,720 --> 00:17:29,919
up to of course you know super computers

00:17:29,360 --> 00:17:32,480
running with

00:17:29,919 --> 00:17:33,440
you know terabytes of memory and stuff i

00:17:32,480 --> 00:17:35,600
i think those are

00:17:33,440 --> 00:17:36,559
handled by linux pretty well there's one

00:17:35,600 --> 00:17:38,880
last thing

00:17:36,559 --> 00:17:40,400
um last question here because i'm

00:17:38,880 --> 00:17:42,000
running out of time

00:17:40,400 --> 00:17:43,840
could you elaborate on how the community

00:17:42,000 --> 00:17:46,160
contribute could contribute to the sony

00:17:43,840 --> 00:17:46,559
xperia open devices initiative wow

00:17:46,160 --> 00:17:48,320
that's

00:17:46,559 --> 00:17:50,480
uh i don't know if i should have

00:17:48,320 --> 00:17:52,960
accepted that one that's a big question

00:17:50,480 --> 00:17:54,080
so sony has a project called open

00:17:52,960 --> 00:17:58,080
devices

00:17:54,080 --> 00:18:01,679
and it is um it allows you to unlock

00:17:58,080 --> 00:18:04,000
xperia phones uh and so

00:18:01,679 --> 00:18:05,039
you you have to be pretty knowledgeable

00:18:04,000 --> 00:18:08,000
uh to

00:18:05,039 --> 00:18:09,600
to do kind of real work in that system

00:18:08,000 --> 00:18:11,760
but there are people who do it are there

00:18:09,600 --> 00:18:15,200
people who make

00:18:11,760 --> 00:18:16,799
rom images for phones and uh

00:18:15,200 --> 00:18:18,960
so if you want to get involved with that

00:18:16,799 --> 00:18:19,360
just you know use use that as a search

00:18:18,960 --> 00:18:21,120
term

00:18:19,360 --> 00:18:22,400
sony open devices or go to sony

00:18:21,120 --> 00:18:24,480
developer world

00:18:22,400 --> 00:18:26,160
um in terms of getting involved we're

00:18:24,480 --> 00:18:27,120
always interested in people just giving

00:18:26,160 --> 00:18:29,360
us bug reports

00:18:27,120 --> 00:18:31,520
or giving us feedback on how the tools

00:18:29,360 --> 00:18:34,080
work and whether we can improve those

00:18:31,520 --> 00:18:36,240
so unfortunately well i don't know maybe

00:18:34,080 --> 00:18:37,760
i have i think i have time for one more

00:18:36,240 --> 00:18:39,600
so i'll just do this last one

00:18:37,760 --> 00:18:41,280
what are your thoughts regarding zephyr

00:18:39,600 --> 00:18:44,480
as an alternative to linux for

00:18:41,280 --> 00:18:47,360
embedded rtos i think zephyr is great um

00:18:44,480 --> 00:18:47,919
so i have to say that cautiously because

00:18:47,360 --> 00:18:50,640
uh

00:18:47,919 --> 00:18:52,720
sony is actually using nut x and that so

00:18:50,640 --> 00:18:55,120
i'm sorry if you're a zephyr fan

00:18:52,720 --> 00:18:57,360
you know i we we happen to have invested

00:18:55,120 --> 00:18:59,520
in nut x i don't i don't think

00:18:57,360 --> 00:19:00,400
we need to get like into like our toss

00:18:59,520 --> 00:19:03,520
wars

00:19:00,400 --> 00:19:04,080
uh but uh but i think zephyr is a really

00:19:03,520 --> 00:19:07,760
good

00:19:04,080 --> 00:19:08,240
uh solution uh i haven't played with it

00:19:07,760 --> 00:19:09,679
a lot

00:19:08,240 --> 00:19:11,520
myself because i'm not kind of in the

00:19:09,679 --> 00:19:13,919
rta space but i

00:19:11,520 --> 00:19:15,440
i think that uh i think that it has a

00:19:13,919 --> 00:19:16,640
really good chance the reason that sony

00:19:15,440 --> 00:19:19,200
went with net x

00:19:16,640 --> 00:19:20,880
is that uh we like the posix

00:19:19,200 --> 00:19:22,880
compatibility and i don't i think at the

00:19:20,880 --> 00:19:24,320
time that we made this election

00:19:22,880 --> 00:19:26,160
zephyr didn't have that but i think

00:19:24,320 --> 00:19:29,280
that's changed anyway

00:19:26,160 --> 00:19:30,559
um i am running out of time but i

00:19:29,280 --> 00:19:32,320
appreciate all the questions

00:19:30,559 --> 00:19:34,000
and uh i hope to see you around the

00:19:32,320 --> 00:19:35,919
event i'm still trying to figure out how

00:19:34,000 --> 00:19:37,520
the chat stuff and all works

00:19:35,919 --> 00:19:39,360
but hopefully i'll be able to

00:19:37,520 --> 00:19:42,000
communicate with you more

00:19:39,360 --> 00:19:42,720
as the event goes on so i'll talk to you

00:19:42,000 --> 00:19:48,160
later

00:19:42,720 --> 00:19:48,160

YouTube URL: https://www.youtube.com/watch?v=tWc4CMgsNWk


