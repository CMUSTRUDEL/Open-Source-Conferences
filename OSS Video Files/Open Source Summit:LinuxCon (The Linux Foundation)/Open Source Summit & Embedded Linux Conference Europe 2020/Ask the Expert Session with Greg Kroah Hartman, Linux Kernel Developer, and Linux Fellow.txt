Title: Ask the Expert Session with Greg Kroah Hartman, Linux Kernel Developer, and Linux Fellow
Publication date: 2020-11-17
Playlist: Open Source Summit & Embedded Linux Conference Europe 2020
Description: 
	Ask the Expert Session with Greg Kroah Hartman, Linux Kernel Developer, and Linux Fellow
Captions: 
	00:00:14,920 --> 00:00:17,920
do

00:00:20,160 --> 00:00:26,080
okay hi um can everybody hear me i don't

00:00:22,480 --> 00:00:26,080
have any feedback on audio

00:00:27,279 --> 00:00:31,840
and i have no chat

00:00:56,840 --> 00:00:59,840
uh

00:01:24,840 --> 00:01:27,840
uh

00:01:34,079 --> 00:01:37,360
okay i guess you can hear me so i will

00:01:36,479 --> 00:01:40,640
answer to do this

00:01:37,360 --> 00:01:43,439
um easiest question

00:01:40,640 --> 00:01:45,200
that disappear oh there it is 5.10 is

00:01:43,439 --> 00:01:48,079
the next lts kernel

00:01:45,200 --> 00:01:49,040
um that's easy i picked the last one of

00:01:48,079 --> 00:01:52,399
the year

00:01:49,040 --> 00:01:53,119
and this one will be in december 20th i

00:01:52,399 --> 00:01:56,719
think

00:01:53,119 --> 00:01:59,759
um so that's the last one um 5.9 was big

00:01:56,719 --> 00:02:01,759
and um

00:01:59,759 --> 00:02:03,439
5 to 10 is also big so yes last one of

00:02:01,759 --> 00:02:06,880
the year that was easy

00:02:03,439 --> 00:02:08,640
um how do i keep up with the

00:02:06,880 --> 00:02:09,759
ever-growing list for patches for

00:02:08,640 --> 00:02:12,879
reviews

00:02:09,759 --> 00:02:13,200
um we have scripts that if once a patch

00:02:12,879 --> 00:02:15,840
gets

00:02:13,200 --> 00:02:16,800
committed to venus history um they pick

00:02:15,840 --> 00:02:19,680
up the patch

00:02:16,800 --> 00:02:20,640
and they um let me know that it's there

00:02:19,680 --> 00:02:22,319
and then because it's already been

00:02:20,640 --> 00:02:25,040
tagged for stable um

00:02:22,319 --> 00:02:26,400
i review it manually spin it off to the

00:02:25,040 --> 00:02:28,239
build systems that i have

00:02:26,400 --> 00:02:29,920
and gets applied and goes from there so

00:02:28,239 --> 00:02:30,640
it's just a we have a lot of backing

00:02:29,920 --> 00:02:32,000
scripts

00:02:30,640 --> 00:02:33,680
sasha has a whole bunch of scripts that

00:02:32,000 --> 00:02:35,599
does auto um

00:02:33,680 --> 00:02:36,959
selection of patches and that he digs

00:02:35,599 --> 00:02:39,040
through all the stuff that lands only

00:02:36,959 --> 00:02:41,680
this tree and goes from there as well so

00:02:39,040 --> 00:02:43,840
it is a lot um we're averaging about 30

00:02:41,680 --> 00:02:44,400
to 35 patches a day that get merged

00:02:43,840 --> 00:02:46,319
overall

00:02:44,400 --> 00:02:47,680
um every single day if you aggregate

00:02:46,319 --> 00:02:50,959
them all so it's a lot

00:02:47,680 --> 00:02:52,400
um but we can do it pretty fast um i

00:02:50,959 --> 00:02:54,080
wrote a blog post about how i do a lot

00:02:52,400 --> 00:02:54,720
of this stuff and how it's automated

00:02:54,080 --> 00:02:56,640
through mutt

00:02:54,720 --> 00:02:57,760
and our scripts and all our scripts are

00:02:56,640 --> 00:03:01,200
public and

00:02:57,760 --> 00:03:05,599
much stuff is public so it's pretty easy

00:03:01,200 --> 00:03:07,120
um other ones this is going upside down

00:03:05,599 --> 00:03:08,959
have i tried switching to the email

00:03:07,120 --> 00:03:10,239
client yet no i haven't i haven't looked

00:03:08,959 --> 00:03:12,239
at it but works good

00:03:10,239 --> 00:03:18,319
i was waiting for drew to say take the

00:03:12,239 --> 00:03:21,200
time and see if it works for me or not

00:03:18,319 --> 00:03:22,640
uh is there any tips arguments for to

00:03:21,200 --> 00:03:23,519
convince other level management to

00:03:22,640 --> 00:03:25,040
contribute

00:03:23,519 --> 00:03:26,799
um it's very simple it will save you

00:03:25,040 --> 00:03:28,080
time and money if you contribute

00:03:26,799 --> 00:03:30,000
if you want to waste time and you want

00:03:28,080 --> 00:03:31,440
to waste money you do not contribute um

00:03:30,000 --> 00:03:32,319
you everybody has a fork for the tree

00:03:31,440 --> 00:03:35,440
because they

00:03:32,319 --> 00:03:37,360
have things they needed to do and um

00:03:35,440 --> 00:03:38,400
you get involved by pushing that stuff

00:03:37,360 --> 00:03:39,680
up stream that means you don't have to

00:03:38,400 --> 00:03:40,959
maintain it anymore you get more

00:03:39,680 --> 00:03:43,280
intimately involved

00:03:40,959 --> 00:03:45,680
it actually has been documented ibm and

00:03:43,280 --> 00:03:48,239
intel have publicly written up

00:03:45,680 --> 00:03:50,159
articles about this i think even harvard

00:03:48,239 --> 00:03:52,000
business reviews written articles saying

00:03:50,159 --> 00:03:54,000
it will save you time and money to work

00:03:52,000 --> 00:03:55,519
upstream it's that simple so

00:03:54,000 --> 00:03:57,599
if your management has lots of money to

00:03:55,519 --> 00:03:59,519
burn and time to burn wonderful do it

00:03:57,599 --> 00:04:00,560
it does take a first hit of the first

00:03:59,519 --> 00:04:02,640
time you get involved and get your

00:04:00,560 --> 00:04:06,480
patches upstream but over time

00:04:02,640 --> 00:04:10,239
it is proof that it's faster and cheaper

00:04:06,480 --> 00:04:11,760
um these are upside down

00:04:10,239 --> 00:04:13,640
well i think the discussion that email

00:04:11,760 --> 00:04:15,519
patch methodology is holding back

00:04:13,640 --> 00:04:17,199
contributions

00:04:15,519 --> 00:04:18,560
um that is not what's holding back

00:04:17,199 --> 00:04:21,199
contributions

00:04:18,560 --> 00:04:22,800
we have over 200 new developers show up

00:04:21,199 --> 00:04:24,639
every single release so every three

00:04:22,800 --> 00:04:26,960
months we have 200 new developers

00:04:24,639 --> 00:04:28,400
um we do not have a problem of new

00:04:26,960 --> 00:04:30,800
developers right now

00:04:28,400 --> 00:04:31,520
um yes it is hard to get your email

00:04:30,800 --> 00:04:32,960
client to work

00:04:31,520 --> 00:04:35,199
and whatnot but we have it documented

00:04:32,960 --> 00:04:36,400
really well and as proof 200 brand new

00:04:35,199 --> 00:04:37,919
people show up every month

00:04:36,400 --> 00:04:39,600
whether that could be 400 brand new

00:04:37,919 --> 00:04:40,960
people or not maybe we do need to do

00:04:39,600 --> 00:04:42,400
that but and we are working on things

00:04:40,960 --> 00:04:43,919
like that we have tutorials we have

00:04:42,400 --> 00:04:46,400
posts on how to do this

00:04:43,919 --> 00:04:47,840
um we've been working on lord.com.org to

00:04:46,400 --> 00:04:49,520
make things easier that way

00:04:47,840 --> 00:04:51,360
um but our main bottleneck is

00:04:49,520 --> 00:04:54,000
maintainers is reviewing

00:04:51,360 --> 00:04:56,000
i average i just looked over 700 patches

00:04:54,000 --> 00:04:58,560
a week that i have to review

00:04:56,000 --> 00:04:59,199
um and that is our bottleneck right now

00:04:58,560 --> 00:05:02,560
so

00:04:59,199 --> 00:05:03,120
um help review um patches help other

00:05:02,560 --> 00:05:04,240
people

00:05:03,120 --> 00:05:05,600
if you want to submit a password there's

00:05:04,240 --> 00:05:07,039
no reason why you shouldn't also be

00:05:05,600 --> 00:05:08,240
reviewing other people's patches

00:05:07,039 --> 00:05:10,000
it's just like with music you don't

00:05:08,240 --> 00:05:12,240
start off writing music only you start

00:05:10,000 --> 00:05:13,280
off reading music and criticizing music

00:05:12,240 --> 00:05:15,360
same thing with programming you should

00:05:13,280 --> 00:05:16,160
be reading and reviewing other people's

00:05:15,360 --> 00:05:18,000
code as well

00:05:16,160 --> 00:05:19,199
some subsystems i know scuzzy require

00:05:18,000 --> 00:05:20,000
this that you have to review other

00:05:19,199 --> 00:05:21,680
people's code

00:05:20,000 --> 00:05:22,960
and i think that's a good idea so help

00:05:21,680 --> 00:05:25,520
out the maintainers that's a really good

00:05:22,960 --> 00:05:28,560
idea

00:05:25,520 --> 00:05:29,440
um um how does the kernel community

00:05:28,560 --> 00:05:32,800
interact with

00:05:29,440 --> 00:05:36,240
oshw movement i have no idea what os

00:05:32,800 --> 00:05:40,240
hw movement is sorry

00:05:36,240 --> 00:05:40,240
uh somebody wants to um

00:05:40,800 --> 00:05:44,479
answer that i will all right type that

00:05:43,360 --> 00:05:48,320
out i will

00:05:44,479 --> 00:05:48,320
i get to dismiss these questions

00:05:50,840 --> 00:05:53,840
um

00:05:55,840 --> 00:06:01,199
um does the kernel memory of memory

00:05:59,120 --> 00:06:03,360
manager for huge pages yes it does we

00:06:01,199 --> 00:06:05,759
have huge page support

00:06:03,360 --> 00:06:07,919
so we have a file system for it we have

00:06:05,759 --> 00:06:11,199
huge base support it's been there for

00:06:07,919 --> 00:06:12,319
15 20 years so yes we have huge pay

00:06:11,199 --> 00:06:14,720
support

00:06:12,319 --> 00:06:17,680
um i do not mm person so i'm not the

00:06:14,720 --> 00:06:20,639
person to ask about that

00:06:17,680 --> 00:06:22,400
um consideration to be taken when

00:06:20,639 --> 00:06:24,240
implementing runtime pm callbacks versus

00:06:22,400 --> 00:06:25,520
system-wide system resume callbacks

00:06:24,240 --> 00:06:27,680
there's a whole document

00:06:25,520 --> 00:06:29,199
about all of this um in the

00:06:27,680 --> 00:06:31,360
documentation tree on

00:06:29,199 --> 00:06:33,039
runtime power management you should do

00:06:31,360 --> 00:06:35,039
runtime power management you should not

00:06:33,039 --> 00:06:36,080
mess with systemwide suspend resume

00:06:35,039 --> 00:06:39,039
callbacks

00:06:36,080 --> 00:06:41,039
um because you want to you want to knock

00:06:39,039 --> 00:06:41,919
off the hardware that is not being used

00:06:41,039 --> 00:06:44,319
at that moment in time

00:06:41,919 --> 00:06:45,120
it saves you overall power um use that

00:06:44,319 --> 00:06:46,639
that's what everybody's

00:06:45,120 --> 00:06:48,479
switching over to there's a document on

00:06:46,639 --> 00:06:49,840
how to do it it's in the documentation

00:06:48,479 --> 00:06:51,199
directory

00:06:49,840 --> 00:06:54,639
it's much more finer granted it works

00:06:51,199 --> 00:06:57,360
much better please do that

00:06:54,639 --> 00:06:59,360
somebody just told me off band that the

00:06:57,360 --> 00:07:00,400
oshw is the open source hardware

00:06:59,360 --> 00:07:02,319
association

00:07:00,400 --> 00:07:03,520
how do we okay so i don't know how the

00:07:02,319 --> 00:07:05,759
kernel community interacts remember the

00:07:03,520 --> 00:07:06,880
kernel community is 4 000 people and 500

00:07:05,759 --> 00:07:09,840
different companies

00:07:06,880 --> 00:07:11,039
i do not know all of them um i'm sure

00:07:09,840 --> 00:07:12,960
there's some people making sure that

00:07:11,039 --> 00:07:14,240
linux works on that hardware at facebook

00:07:12,960 --> 00:07:15,039
and other companies that work with that

00:07:14,240 --> 00:07:17,840
so

00:07:15,039 --> 00:07:17,840
talk to them

00:07:19,599 --> 00:07:26,319
um what else to send

00:07:23,680 --> 00:07:27,520
to osu thank you drew um everybody's

00:07:26,319 --> 00:07:29,360
dismissing that

00:07:27,520 --> 00:07:32,560
um google is pushing towards a gki

00:07:29,360 --> 00:07:32,560
kernel image um

00:07:33,680 --> 00:07:36,880
yes do i think it will encourage mobile

00:07:35,680 --> 00:07:39,039
vendors to contribute a stream

00:07:36,880 --> 00:07:40,800
it already has we have proof of that i

00:07:39,039 --> 00:07:42,400
have seen patches from samsung and

00:07:40,800 --> 00:07:44,000
mediatek and qualcomm

00:07:42,400 --> 00:07:45,840
pushing their core changes to the kernel

00:07:44,000 --> 00:07:47,360
and drivers upstream you will see it in

00:07:45,840 --> 00:07:49,360
a lot of driver subsystems

00:07:47,360 --> 00:07:50,800
i've already got broken up on the irq

00:07:49,360 --> 00:07:52,400
number um

00:07:50,800 --> 00:07:54,720
there's been a number of subsystems that

00:07:52,400 --> 00:07:57,280
are broken up into being modules now

00:07:54,720 --> 00:07:58,080
instead of loadable they can be loadable

00:07:57,280 --> 00:08:00,160
modules

00:07:58,080 --> 00:08:02,319
uh we have patches from mediatek

00:08:00,160 --> 00:08:03,680
grabbing from a qualcomm tree

00:08:02,319 --> 00:08:06,240
um sending them through an intel

00:08:03,680 --> 00:08:07,919
maintainer right now so we have lots of

00:08:06,240 --> 00:08:09,680
active development happening right now

00:08:07,919 --> 00:08:12,080
by all these soc

00:08:09,680 --> 00:08:12,720
vendors and chipset vendors and phone

00:08:12,080 --> 00:08:14,160
vendors

00:08:12,720 --> 00:08:16,000
um i work with google a little bit on

00:08:14,160 --> 00:08:17,599
this stuff just making sure that the lts

00:08:16,000 --> 00:08:18,879
kernels get merged together

00:08:17,599 --> 00:08:21,039
so yes we've already seen it

00:08:18,879 --> 00:08:24,800
contributing upstream very well

00:08:21,039 --> 00:08:26,080
um the problem it will soc mobile

00:08:24,800 --> 00:08:27,759
vendors put everything in their modules

00:08:26,080 --> 00:08:29,599
and not care about upstream um

00:08:27,759 --> 00:08:30,800
everybody does that for all districts so

00:08:29,599 --> 00:08:33,039
that's nothing new

00:08:30,800 --> 00:08:34,320
um i'm sure it will continue to happen

00:08:33,039 --> 00:08:35,360
as well but there's only so much you can

00:08:34,320 --> 00:08:37,599
do in a module

00:08:35,360 --> 00:08:39,039
um by virtue of what it is and again it

00:08:37,599 --> 00:08:40,320
saves companies time and money when they

00:08:39,039 --> 00:08:42,000
merge stuff upstream

00:08:40,320 --> 00:08:43,519
so if they merge upstream there's their

00:08:42,000 --> 00:08:44,880
time of money and they get involved

00:08:43,519 --> 00:08:47,040
and that's the main goal there it's

00:08:44,880 --> 00:08:49,200
working pretty well so far

00:08:47,040 --> 00:08:50,320
um let's see gki is going to come out

00:08:49,200 --> 00:08:51,920
sometime next year

00:08:50,320 --> 00:08:53,360
so let's see how it works but then it'll

00:08:51,920 --> 00:08:55,360
be a while before phones are

00:08:53,360 --> 00:08:57,680
out on it but we already have proof that

00:08:55,360 --> 00:09:01,600
it is helping

00:08:57,680 --> 00:09:04,000
um what's my advice for a little lunch

00:09:01,600 --> 00:09:06,240
colonel mentees oh hi this is one of my

00:09:04,000 --> 00:09:08,000
my mentees from this summer um how can

00:09:06,240 --> 00:09:10,080
they use foster mentorship they can

00:09:08,000 --> 00:09:11,279
um talk to me but they can keep doing

00:09:10,080 --> 00:09:14,080
the same things that they've been doing

00:09:11,279 --> 00:09:14,800
and um actually um there's been a number

00:09:14,080 --> 00:09:16,560
of them

00:09:14,800 --> 00:09:18,000
um that i've been trying to work with to

00:09:16,560 --> 00:09:18,720
figure out what subsystem they want to

00:09:18,000 --> 00:09:20,720
work on

00:09:18,720 --> 00:09:22,000
or what they want to specialize in and

00:09:20,720 --> 00:09:24,000
what for there we have one

00:09:22,000 --> 00:09:25,680
mentor one mentee this summer who

00:09:24,000 --> 00:09:26,640
actually was offered to be a maintainer

00:09:25,680 --> 00:09:28,399
of the subsystem

00:09:26,640 --> 00:09:29,920
it was a little bit of tag you're it you

00:09:28,399 --> 00:09:31,440
touched it last um

00:09:29,920 --> 00:09:33,040
and they were very surprised but they

00:09:31,440 --> 00:09:34,560
are taking up some that

00:09:33,040 --> 00:09:36,240
task right now and doing quite well at

00:09:34,560 --> 00:09:37,680
it um so

00:09:36,240 --> 00:09:39,040
just get involved and find it something

00:09:37,680 --> 00:09:40,399
that you're interested in if you're not

00:09:39,040 --> 00:09:41,519
interested you still want to do generic

00:09:40,399 --> 00:09:45,200
stuff again

00:09:41,519 --> 00:09:47,440
please do the syzbot stuff other stuff

00:09:45,200 --> 00:09:50,160
we have lots and lots of tasks to do so

00:09:47,440 --> 00:09:52,240
keep on going

00:09:50,160 --> 00:09:53,279
um what is a road map regarding linux

00:09:52,240 --> 00:09:56,000
says rtos

00:09:53,279 --> 00:09:57,680
it's been that way for 10 15 years

00:09:56,000 --> 00:10:00,480
already the rt patch

00:09:57,680 --> 00:10:01,360
we're real time deterministic operating

00:10:00,480 --> 00:10:04,160
system

00:10:01,360 --> 00:10:05,600
um preempt rt is or the real time stuff

00:10:04,160 --> 00:10:06,399
is almost all merged it's not quite

00:10:05,600 --> 00:10:07,920
there yet

00:10:06,399 --> 00:10:09,680
um talk to them i'm sure there's a talk

00:10:07,920 --> 00:10:10,880
about real time at this conference so go

00:10:09,680 --> 00:10:13,120
ask those developers

00:10:10,880 --> 00:10:14,720
it is getting whittled down into smaller

00:10:13,120 --> 00:10:15,120
and smaller bits but it's almost all

00:10:14,720 --> 00:10:16,399
there

00:10:15,120 --> 00:10:18,240
and there's a talk at plumbers about

00:10:16,399 --> 00:10:19,920
what to do when it is all merged in and

00:10:18,240 --> 00:10:20,640
how do we do testing and integration and

00:10:19,920 --> 00:10:21,920
stuff

00:10:20,640 --> 00:10:24,240
um go back and look at the linux

00:10:21,920 --> 00:10:26,000
plumbers conference um talks about that

00:10:24,240 --> 00:10:27,839
for details if you're curious

00:10:26,000 --> 00:10:29,680
um but yeah it's there you can download

00:10:27,839 --> 00:10:32,560
it and run um we saw

00:10:29,680 --> 00:10:33,440
linux running on laser welding robots a

00:10:32,560 --> 00:10:35,760
decade ago

00:10:33,440 --> 00:10:37,360
if not older than that um they do john

00:10:35,760 --> 00:10:38,560
deere they drive tractors they do lots

00:10:37,360 --> 00:10:40,000
of other stuff linux has been a

00:10:38,560 --> 00:10:41,200
real-time operating system for a very

00:10:40,000 --> 00:10:47,839
long time

00:10:41,200 --> 00:10:47,839
so and i ran out of questions

00:11:12,839 --> 00:11:15,839
do

00:11:34,160 --> 00:11:39,200
all right there we go back on um what's

00:11:37,839 --> 00:11:40,720
my take on ah there we go that's better

00:11:39,200 --> 00:11:42,959
uh rust in the kernel

00:11:40,720 --> 00:11:44,240
i don't think people have noticed so uh

00:11:42,959 --> 00:11:45,839
the rest developers talked to me in

00:11:44,240 --> 00:11:48,079
elena's

00:11:45,839 --> 00:11:48,880
12 no year and a half ago almost two

00:11:48,079 --> 00:11:50,880
years ago

00:11:48,880 --> 00:11:52,000
and we said sure wonderful let's see how

00:11:50,880 --> 00:11:53,600
it works um

00:11:52,000 --> 00:11:55,040
and they've been actively working to try

00:11:53,600 --> 00:11:55,519
and get something that will work since

00:11:55,040 --> 00:11:56,800
then

00:11:55,519 --> 00:11:58,639
there's some proof of concepts which is

00:11:56,800 --> 00:12:00,320
cool um if you look at the plumber's

00:11:58,639 --> 00:12:01,839
conference the rust developers and the

00:12:00,320 --> 00:12:04,720
kernel developers we talked

00:12:01,839 --> 00:12:06,079
and um yeah it looks nice if they can

00:12:04,720 --> 00:12:06,639
come up with something that will work

00:12:06,079 --> 00:12:08,320
well

00:12:06,639 --> 00:12:10,079
that's great right now you start to run

00:12:08,320 --> 00:12:10,800
like the bleeding edge rust compiler of

00:12:10,079 --> 00:12:12,800
every day

00:12:10,800 --> 00:12:14,320
nightly builds um there's some

00:12:12,800 --> 00:12:15,600
interesting interactions that's going to

00:12:14,320 --> 00:12:17,600
happen when you get with object

00:12:15,600 --> 00:12:18,880
lifespans and the sea objects we have

00:12:17,600 --> 00:12:19,839
versus the rest objects

00:12:18,880 --> 00:12:21,600
it'll be interesting to see how they

00:12:19,839 --> 00:12:23,040
handle that but they're working on it so

00:12:21,600 --> 00:12:23,519
um yeah it'll be interesting to see what

00:12:23,040 --> 00:12:25,839
happens

00:12:23,519 --> 00:12:27,680
um it's just another language that's

00:12:25,839 --> 00:12:31,600
fine

00:12:27,680 --> 00:12:32,720
um so be great um but if you're more

00:12:31,600 --> 00:12:33,839
if you're interested to go look up the

00:12:32,720 --> 00:12:35,120
plumber's conference and there's a whole

00:12:33,839 --> 00:12:36,480
talk and there's a summary of it on the

00:12:35,120 --> 00:12:39,120
next weekly news as well

00:12:36,480 --> 00:12:40,320
so it's really good how much time do i

00:12:39,120 --> 00:12:42,240
devote to kernel newbies

00:12:40,320 --> 00:12:44,240
the irc channel or the mailing list the

00:12:42,240 --> 00:12:45,519
irc channel i'm on and if there's

00:12:44,240 --> 00:12:46,320
questions i can see the answer i'll

00:12:45,519 --> 00:12:48,000
answer it

00:12:46,320 --> 00:12:50,480
uh the mailing list if there's questions

00:12:48,000 --> 00:12:51,360
that come by and i know what to answer

00:12:50,480 --> 00:12:53,440
i'll answer it so

00:12:51,360 --> 00:12:54,880
it's just like one of my normal emails

00:12:53,440 --> 00:12:56,480
that i get in my inbox

00:12:54,880 --> 00:12:57,920
i get about a thousand emails i go do

00:12:56,480 --> 00:12:59,200
something with every day that's just one

00:12:57,920 --> 00:13:02,240
of them

00:12:59,200 --> 00:13:04,800
so it's interesting

00:13:02,240 --> 00:13:06,000
um what am i working on now project wise

00:13:04,800 --> 00:13:09,279
i'm cleaning up the debug

00:13:06,000 --> 00:13:11,360
fs interface getting it smaller and more

00:13:09,279 --> 00:13:14,000
robust if you look over time

00:13:11,360 --> 00:13:15,760
i've slowly evolved the api to make it

00:13:14,000 --> 00:13:18,079
harder to use wrong

00:13:15,760 --> 00:13:20,399
and then there's a bunch of um makes

00:13:18,079 --> 00:13:23,519
things easier to use with the usb

00:13:20,399 --> 00:13:25,200
messages functions as well as that i

00:13:23,519 --> 00:13:28,480
worked with some interns on that

00:13:25,200 --> 00:13:30,880
um getting that the usb api some of them

00:13:28,480 --> 00:13:33,360
are very easy to use incorrectly

00:13:30,880 --> 00:13:34,959
as the bad api you want an api to be

00:13:33,360 --> 00:13:36,639
very hard to use wrong

00:13:34,959 --> 00:13:38,720
so we change them and tweak them a

00:13:36,639 --> 00:13:40,320
little bit and we'll evolve and move the

00:13:38,720 --> 00:13:40,720
whole kernel over to the new apis over

00:13:40,320 --> 00:13:42,320
time

00:13:40,720 --> 00:13:43,839
so lots of little tiny evolutionary

00:13:42,320 --> 00:13:44,480
stuff and that's what i'm working on

00:13:43,839 --> 00:13:46,240
it's fun

00:13:44,480 --> 00:13:48,000
when i get bored i can write new patches

00:13:46,240 --> 00:13:49,279
oh and i also have the read file syscall

00:13:48,000 --> 00:13:50,800
which i keep posting every once in a

00:13:49,279 --> 00:13:53,279
while the patches are public

00:13:50,800 --> 00:13:54,320
um to move open read close into one

00:13:53,279 --> 00:13:56,880
syscall

00:13:54,320 --> 00:13:57,920
interestingly it doesn't always it isn't

00:13:56,880 --> 00:14:00,720
always faster

00:13:57,920 --> 00:14:01,519
on a lot of workloads because it's lost

00:14:00,720 --> 00:14:03,040
in the noise

00:14:01,519 --> 00:14:05,120
it's kind of interesting syscalls are

00:14:03,040 --> 00:14:06,079
not slow they're fast but they're

00:14:05,120 --> 00:14:06,720
they've slowed down a little bit but

00:14:06,079 --> 00:14:07,920
they're still

00:14:06,720 --> 00:14:10,639
not that slow as you would think they

00:14:07,920 --> 00:14:11,680
were linux in a safety critical

00:14:10,639 --> 00:14:13,680
environment um

00:14:11,680 --> 00:14:14,959
anybody who's ever flown a plane has

00:14:13,680 --> 00:14:17,040
been controlled by linux

00:14:14,959 --> 00:14:18,480
in the past decade so it's their safety

00:14:17,040 --> 00:14:21,360
critical environment today

00:14:18,480 --> 00:14:21,920
um it runs the telecom systems it runs

00:14:21,360 --> 00:14:25,600
this

00:14:21,920 --> 00:14:28,959
the stock markets it runs satellites the

00:14:25,600 --> 00:14:31,279
um it's been in the balancing

00:14:28,959 --> 00:14:32,160
a thing that keeps super mega yachts

00:14:31,279 --> 00:14:33,519
from tipping over

00:14:32,160 --> 00:14:35,199
so that's a safety critical environment

00:14:33,519 --> 00:14:37,040
it's been there for like 15 years

00:14:35,199 --> 00:14:38,560
um so linux has been in safety critical

00:14:37,040 --> 00:14:40,079
environments and it's been automotive

00:14:38,560 --> 00:14:40,959
also as well in the head units for a

00:14:40,079 --> 00:14:43,040
long time

00:14:40,959 --> 00:14:44,399
um not in the head units um i don't know

00:14:43,040 --> 00:14:45,120
about where else it's going but it's

00:14:44,399 --> 00:14:46,800
getting there

00:14:45,120 --> 00:14:47,920
for other parts of the car nobody wants

00:14:46,800 --> 00:14:49,199
to write an operating system they just

00:14:47,920 --> 00:14:50,399
want to write applications to solve

00:14:49,199 --> 00:14:52,160
their problems

00:14:50,399 --> 00:14:54,320
so yeah we're there um there are

00:14:52,160 --> 00:14:55,839
certifications another

00:14:54,320 --> 00:14:57,440
fun paperwork that people are working on

00:14:55,839 --> 00:15:00,959
but that's independent of

00:14:57,440 --> 00:15:05,760
linux itself i have

00:15:00,959 --> 00:15:07,760
three minutes left okay um

00:15:05,760 --> 00:15:09,680
feature turned my beard that gray all of

00:15:07,760 --> 00:15:11,040
them it's just me getting old

00:15:09,680 --> 00:15:13,360
and look i have no hair either but i've

00:15:11,040 --> 00:15:17,440
not had it here a long time

00:15:13,360 --> 00:15:20,639
um large versus lts the security update

00:15:17,440 --> 00:15:22,000
staying on lts

00:15:20,639 --> 00:15:24,240
it was a good way to convince customers

00:15:22,000 --> 00:15:26,480
updating lts or latest stables away

00:15:24,240 --> 00:15:27,839
way to pick um cherry picking always

00:15:26,480 --> 00:15:29,759
fails i will guarantee you

00:15:27,839 --> 00:15:31,040
i have audited lots of devices i did a

00:15:29,759 --> 00:15:32,639
famous talk where i

00:15:31,040 --> 00:15:34,240
showed four brand new phones that were

00:15:32,639 --> 00:15:35,199
bought within there were the latest

00:15:34,240 --> 00:15:37,279
top-of-the-line ones

00:15:35,199 --> 00:15:39,040
and it was trivial to root them all um i

00:15:37,279 --> 00:15:41,600
did it on stage as a fun talk

00:15:39,040 --> 00:15:42,320
um and it was rooted with a patch that

00:15:41,600 --> 00:15:44,399
had

00:15:42,320 --> 00:15:46,160
said this is the fix here's the problem

00:15:44,399 --> 00:15:47,839
here's the reproducer in

00:15:46,160 --> 00:15:49,199
the commit itself and people who are

00:15:47,839 --> 00:15:51,360
cherry-picking missed it

00:15:49,199 --> 00:15:52,560
um google's published a bunch of results

00:15:51,360 --> 00:15:54,959
about how

00:15:52,560 --> 00:15:56,560
taking lts fixes um ninety percent of

00:15:54,959 --> 00:15:58,480
all the cves before they're even done

00:15:56,560 --> 00:15:59,759
the other ten percent of the cbes are

00:15:58,480 --> 00:16:01,199
about security bugs

00:15:59,759 --> 00:16:03,120
were in out of street code that was in

00:16:01,199 --> 00:16:04,800
their kernels so every single

00:16:03,120 --> 00:16:06,639
thing that they were notified of being a

00:16:04,800 --> 00:16:08,160
security issue was fixed before they

00:16:06,639 --> 00:16:10,480
even knew about it and

00:16:08,160 --> 00:16:12,240
in the lts releases um google's now

00:16:10,480 --> 00:16:13,920
requiring this for new devices that they

00:16:12,240 --> 00:16:16,880
pick up the lts releases

00:16:13,920 --> 00:16:18,079
um again cherry picking does not work

00:16:16,880 --> 00:16:20,000
there's no reason

00:16:18,079 --> 00:16:21,759
to do that just take the whole thing and

00:16:20,000 --> 00:16:22,959
do that because we fixed known security

00:16:21,759 --> 00:16:24,560
issues every single week

00:16:22,959 --> 00:16:26,000
and we fix tons of unknown security

00:16:24,560 --> 00:16:29,120
issues every single week again we're

00:16:26,000 --> 00:16:30,560
fixing 30 a week for 30-35 a day

00:16:29,120 --> 00:16:33,040
keeping on top of that and determining

00:16:30,560 --> 00:16:36,160
what isn't is not a security thing

00:16:33,040 --> 00:16:37,920
is impossible so just take them all so

00:16:36,160 --> 00:16:39,199
again i've given presentations on it you

00:16:37,920 --> 00:16:40,320
can look at what i gave last year and

00:16:39,199 --> 00:16:43,600
there before

00:16:40,320 --> 00:16:45,440
and just do that what do i think about

00:16:43,600 --> 00:16:47,440
open source security foundation i do not

00:16:45,440 --> 00:16:48,560
know i'm so sorry

00:16:47,440 --> 00:16:50,480
but i don't know what they're doing i

00:16:48,560 --> 00:16:51,519
think it's a replacement for what cii

00:16:50,480 --> 00:16:54,320
was doing

00:16:51,519 --> 00:16:54,959
i am not involved directly and so i

00:16:54,320 --> 00:16:57,279
can't

00:16:54,959 --> 00:16:58,560
tell you what to do there oh i can point

00:16:57,279 --> 00:16:59,920
you the right people to talk to case

00:16:58,560 --> 00:17:05,199
cook he's involved um

00:16:59,920 --> 00:17:07,439
so alexander talk to him um

00:17:05,199 --> 00:17:09,199
i have no books coming out um about

00:17:07,439 --> 00:17:09,760
chrome development the links to my style

00:17:09,199 --> 00:17:11,600
before is

00:17:09,760 --> 00:17:13,679
not going to happen so don't worry about

00:17:11,600 --> 00:17:16,160
that um just look at all the source code

00:17:13,679 --> 00:17:18,480
we have today and the ideas are still in

00:17:16,160 --> 00:17:20,799
the old books they're still good

00:17:18,480 --> 00:17:20,799
um

00:17:22,000 --> 00:17:24,799
what else do i have

00:17:25,600 --> 00:17:28,640
they did not recover they did not

00:17:27,439 --> 00:17:30,240
reconsider

00:17:28,640 --> 00:17:31,679
o'reilly did not do that and they laid

00:17:30,240 --> 00:17:33,200
off all their editors so i doubt that

00:17:31,679 --> 00:17:34,720
will ever happen

00:17:33,200 --> 00:17:36,240
why is the colonel community not a

00:17:34,720 --> 00:17:38,240
friend of dbtk

00:17:36,240 --> 00:17:39,440
i don't think you know that the same

00:17:38,240 --> 00:17:41,520
developers are part of the kernel

00:17:39,440 --> 00:17:44,880
community and part of dbtk

00:17:41,520 --> 00:17:46,080
so why are they they are friends they're

00:17:44,880 --> 00:17:49,120
the same people

00:17:46,080 --> 00:17:50,400
that's not a question um thoughts about

00:17:49,120 --> 00:17:53,280
the collaboration process with

00:17:50,400 --> 00:17:54,000
intel and i will not i'll just do these

00:17:53,280 --> 00:17:57,200
last ones

00:17:54,000 --> 00:18:01,200
questions um disclosure process

00:17:57,200 --> 00:18:04,320
intel is not doing well with disclosures

00:18:01,200 --> 00:18:05,520
let's put that away i'm not happy it's

00:18:04,320 --> 00:18:08,559
not getting better

00:18:05,520 --> 00:18:09,360
um as proof the bluetooth problem was

00:18:08,559 --> 00:18:12,000
intel

00:18:09,360 --> 00:18:13,440
it wasn't disclosed properly anyway i

00:18:12,000 --> 00:18:15,280
won't get into that

00:18:13,440 --> 00:18:17,600
um stable maintainership more

00:18:15,280 --> 00:18:20,080
maintainers bigger team bigger team be

00:18:17,600 --> 00:18:21,280
counterproductive is our sasha and i

00:18:20,080 --> 00:18:23,360
going too slow

00:18:21,280 --> 00:18:24,720
35 batches a day if other people want to

00:18:23,360 --> 00:18:26,160
help that are active criminal

00:18:24,720 --> 00:18:26,880
maintainers i'm glad to take the help we

00:18:26,160 --> 00:18:28,880
have a lot of

00:18:26,880 --> 00:18:30,160
things that would do that um i have a

00:18:28,880 --> 00:18:33,679
list of tasks to do

00:18:30,160 --> 00:18:35,760
if you want to help um that's about it

00:18:33,679 --> 00:18:37,520
um the context regarding russ was in the

00:18:35,760 --> 00:18:39,280
context of drivers will be using core

00:18:37,520 --> 00:18:41,760
codes let's see it actually work in

00:18:39,280 --> 00:18:42,320
drivers first come on what do you want

00:18:41,760 --> 00:18:43,919
us to say

00:18:42,320 --> 00:18:45,600
how would it be used in core code if it

00:18:43,919 --> 00:18:47,039
can't even work in a driver that's a

00:18:45,600 --> 00:18:49,280
leaf node on the tree

00:18:47,039 --> 00:18:50,720
as far as source code and not requiring

00:18:49,280 --> 00:18:53,520
nobody's building on top of that

00:18:50,720 --> 00:18:56,240
baby steps please and the current road

00:18:53,520 --> 00:18:57,760
map for iou ring um talk to jens i think

00:18:56,240 --> 00:18:59,280
he's probably giving a talk um

00:18:57,760 --> 00:19:01,280
it's great stuff it works really really

00:18:59,280 --> 00:19:04,320
fast and it's fun to use

00:19:01,280 --> 00:19:05,679
so talk to ends and he's given he

00:19:04,320 --> 00:19:06,799
read his emails and read the patches

00:19:05,679 --> 00:19:08,400
that are coming out from him he does a

00:19:06,799 --> 00:19:11,360
lot of good stuff

00:19:08,400 --> 00:19:12,559
and i think that is it so thank you very

00:19:11,360 --> 00:19:14,799
much if anybody's

00:19:12,559 --> 00:19:16,320
following questions just email me got a

00:19:14,799 --> 00:19:17,440
like i said i got about a thousand

00:19:16,320 --> 00:19:18,400
emails a day might as well have

00:19:17,440 --> 00:19:25,840
interesting ones

00:19:18,400 --> 00:19:25,840

YouTube URL: https://www.youtube.com/watch?v=yflXnI-c5aI


