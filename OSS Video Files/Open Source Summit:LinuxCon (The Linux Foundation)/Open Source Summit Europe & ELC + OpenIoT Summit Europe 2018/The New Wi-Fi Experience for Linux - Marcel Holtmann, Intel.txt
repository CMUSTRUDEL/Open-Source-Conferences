Title: The New Wi-Fi Experience for Linux - Marcel Holtmann, Intel
Publication date: 2018-10-25
Playlist: Open Source Summit Europe & ELC + OpenIoT Summit Europe 2018
Description: 
	The New Wi-Fi Experience for Linux - Marcel Holtmann, Intel

With the introduction of the open source wireless daemon iwd, the Wi-Fi experience for Linux has changed. It became necessary to replace wpa_supplicant and create a complete system for managing Wi-Fi for Linux in a single place. Almost 2 years later iwd has succeed and implemented features and functionality that was previously not available on Linux. This presentation focuses on the recent development and how iwd has been integrated into existing platforms using NetworkManager and ConnMan or how it fits into ChromeOS. With iwd the seamless and fast roaming is no longer something that has only been seen on non-Linux platforms. It has kept up with recent 802.11 standard development and Wi-Fi Alliance updates. The development of iwd led to new kernel interfaces to help improve the user experience and simplify Wi-Fi for Linux. 

About Marcel Holtmann
Marcel Holtmann is part of Intel's Open Source Technology Center. He is the maintainer of the BlueZ open source Bluetooth stack and has been working on Bluetooth technology since 2001. Marcel chairs the Bluetooth Internet Working Group and is a member of the Bluetooth Architectural Review Board. Marcel is involved in open source projects including oFono, iwd, ConnMan involving a wide variety of modern wireless technologies.
Captions: 
	00:00:00,030 --> 00:00:04,770
my name is Matt Altman I work for the

00:00:02,340 --> 00:00:07,350
Intel open-source technology Center and

00:00:04,770 --> 00:00:08,760
I will give you an update on what we

00:00:07,350 --> 00:00:12,179
have been doing to actually improve the

00:00:08,760 --> 00:00:12,780
Wi-Fi experience on Linux before I get

00:00:12,179 --> 00:00:14,790
started

00:00:12,780 --> 00:00:17,039
usual disclaimer Linux is a trademark

00:00:14,790 --> 00:00:18,720
Wi-Fi so trademark a bunch of logos are

00:00:17,039 --> 00:00:20,699
trademarks etc cetera so I don't have to

00:00:18,720 --> 00:00:25,680
annotate every single slide I'm just

00:00:20,699 --> 00:00:28,859
getting out of the way I found this xkcd

00:00:25,680 --> 00:00:33,059
a comic a while ago and while I think it

00:00:28,859 --> 00:00:35,370
goes way too far maybe but it has the

00:00:33,059 --> 00:00:36,930
right idea most of the Wi-Fi

00:00:35,370 --> 00:00:39,059
configuration is getting really

00:00:36,930 --> 00:00:40,980
complicated and we are asking way to

00:00:39,059 --> 00:00:43,050
manage stuff to a user that just wants

00:00:40,980 --> 00:00:44,760
to connect to network be this a personal

00:00:43,050 --> 00:00:46,739
network at home be this an enterprise

00:00:44,760 --> 00:00:48,120
network at your corporation or something

00:00:46,739 --> 00:00:50,370
else you really want to make this as

00:00:48,120 --> 00:00:52,800
easy as possible what has happened in

00:00:50,370 --> 00:00:54,090
the last probably 15 to 20 years is that

00:00:52,800 --> 00:00:55,739
we always started building things from

00:00:54,090 --> 00:00:57,480
the bottom up or we have this technology

00:00:55,739 --> 00:00:59,280
we expose this technology when they are

00:00:57,480 --> 00:01:01,620
hire and another layer and another layer

00:00:59,280 --> 00:01:04,350
and all the technical details are

00:01:01,620 --> 00:01:06,450
sipping through to the user and in a

00:01:04,350 --> 00:01:08,640
couple of operating systems you see this

00:01:06,450 --> 00:01:11,250
also that the UI has to fix up literary

00:01:08,640 --> 00:01:13,650
everything and they have to understand

00:01:11,250 --> 00:01:15,150
the beacons that are sending the they

00:01:13,650 --> 00:01:16,799
have to pass the beacons have to figure

00:01:15,150 --> 00:01:18,330
out what encryption is used and silence

00:01:16,799 --> 00:01:19,799
pause and really can't be because the

00:01:18,330 --> 00:01:22,860
user only one needs to be asked what

00:01:19,799 --> 00:01:27,630
they actually can answer

00:01:22,860 --> 00:01:29,610
so we I started at Inter around 11 years

00:01:27,630 --> 00:01:31,320
ago with con men to actually get this

00:01:29,610 --> 00:01:33,060
work and really focus on the Wi-Fi part

00:01:31,320 --> 00:01:34,290
yet but all these dialogues that you're

00:01:33,060 --> 00:01:35,549
gonna see here are something that I just

00:01:34,290 --> 00:01:37,290
collected from the internet and that

00:01:35,549 --> 00:01:39,600
kind of crappy I think if you look at

00:01:37,290 --> 00:01:41,610
the top left and like wireless

00:01:39,600 --> 00:01:44,040
encryption key which key size are where

00:01:41,610 --> 00:01:47,280
to put it which index most of time I

00:01:44,040 --> 00:01:50,040
don't even know luckily in the last 15

00:01:47,280 --> 00:01:52,049
years the WEP has really not been used

00:01:50,040 --> 00:01:52,979
anymore and we can ignore this but then

00:01:52,049 --> 00:01:54,210
oh you want to connect to a hidden

00:01:52,979 --> 00:01:55,549
network then you get all these weird

00:01:54,210 --> 00:01:58,049
options as an enterprise network

00:01:55,549 --> 00:01:59,670
Enterprise one Enterprise to does it

00:01:58,049 --> 00:02:01,020
really make a difference cannot the

00:01:59,670 --> 00:02:03,689
system figure this out for you what it

00:02:01,020 --> 00:02:04,920
is and it goes further and further when

00:02:03,689 --> 00:02:06,030
you actually starts out hoc mode then

00:02:04,920 --> 00:02:07,770
you need to have more about the mecca

00:02:06,030 --> 00:02:09,599
dresses of the device you connect to I

00:02:07,770 --> 00:02:10,709
mean like who's gonna ask this question

00:02:09,599 --> 00:02:12,959
to use it why does a user want to

00:02:10,709 --> 00:02:13,500
configure this one when you actually

00:02:12,959 --> 00:02:16,350
come to

00:02:13,500 --> 00:02:18,360
corporate networks it gets even worse so

00:02:16,350 --> 00:02:20,340
there's nothing on Linux we actually oh

00:02:18,360 --> 00:02:22,650
this is what you're gonna get from your

00:02:20,340 --> 00:02:24,480
company here's the file you install it

00:02:22,650 --> 00:02:25,740
or here's the bundle you install it it

00:02:24,480 --> 00:02:28,230
has all the information in there it's

00:02:25,740 --> 00:02:30,660
signed it's all done properly and you

00:02:28,230 --> 00:02:32,580
connect to it no mostly you get

00:02:30,660 --> 00:02:34,560
instructions where you have to open this

00:02:32,580 --> 00:02:36,510
dialog put this information there though

00:02:34,560 --> 00:02:38,580
that certificate there put that private

00:02:36,510 --> 00:02:40,230
key in there click that box and the

00:02:38,580 --> 00:02:41,910
bottom right is really ago they had this

00:02:40,230 --> 00:02:44,820
all marked up then on the screenshots

00:02:41,910 --> 00:02:48,030
just to get a student on a co-op on a

00:02:44,820 --> 00:02:49,380
Wi-Fi network for a Europe and it's

00:02:48,030 --> 00:02:50,580
getting way more complicated and they're

00:02:49,380 --> 00:02:52,230
putting way more options in there I

00:02:50,580 --> 00:02:54,150
think at the end of the day these

00:02:52,230 --> 00:02:55,530
dialogues can't really work and we can't

00:02:54,150 --> 00:02:58,230
just have always tons of documentation

00:02:55,530 --> 00:03:00,330
that's like Windows 95 style of thing um

00:02:58,230 --> 00:03:04,200
the reason behind this is pretty much

00:03:00,330 --> 00:03:06,180
since W supplicant the main thing that

00:03:04,200 --> 00:03:08,280
drives the Wi-Fi set up these days is

00:03:06,180 --> 00:03:09,870
this it's a Swiss Army knife of

00:03:08,280 --> 00:03:11,280
literally everything they're doing a lot

00:03:09,870 --> 00:03:13,500
of awesome work they're putting a lot of

00:03:11,280 --> 00:03:16,080
new features in it's in highly

00:03:13,500 --> 00:03:17,519
development but it has fundamentally two

00:03:16,080 --> 00:03:20,970
problems they don't make any decent

00:03:17,519 --> 00:03:22,110
releases and the X and when they don't

00:03:20,970 --> 00:03:23,220
make any releases that doesn't get them

00:03:22,110 --> 00:03:24,840
just source or new features and bug

00:03:23,220 --> 00:03:26,190
fixes bug fixes don't get there nobody

00:03:24,840 --> 00:03:28,440
picks them up and you stuck with

00:03:26,190 --> 00:03:30,780
something else also they don't really

00:03:28,440 --> 00:03:33,239
want to expose any useable api's they're

00:03:30,780 --> 00:03:35,130
pretty much give you the same technical

00:03:33,239 --> 00:03:36,209
details as you've gotten from the Linux

00:03:35,130 --> 00:03:37,530
kernel as you've gotten from the

00:03:36,209 --> 00:03:40,230
hardware and you have to figure out

00:03:37,530 --> 00:03:41,400
everything by yourself but not always

00:03:40,230 --> 00:03:42,630
they give you all the tests sometimes

00:03:41,400 --> 00:03:43,950
they swallow the details and you

00:03:42,630 --> 00:03:45,840
actually don't know what's happening so

00:03:43,950 --> 00:03:47,250
in some cases their state change in your

00:03:45,840 --> 00:03:48,120
Wi-Fi network it doesn't tell you it's

00:03:47,250 --> 00:03:50,070
well as this one and you have to

00:03:48,120 --> 00:03:51,930
second-guess if you wanna start using it

00:03:50,070 --> 00:03:53,400
when you start second-guessing what's

00:03:51,930 --> 00:03:54,329
your current stages if your roaming or

00:03:53,400 --> 00:03:55,829
if you're not roaming if you're

00:03:54,329 --> 00:03:57,150
connected to this access point what's

00:03:55,829 --> 00:03:59,100
going to be having normally things go

00:03:57,150 --> 00:04:01,049
wrong and a lot of cases you're pretty

00:03:59,100 --> 00:04:02,130
much like lost like I brush walking

00:04:01,049 --> 00:04:03,989
around and she can't really figure

00:04:02,130 --> 00:04:05,400
anything out you have the great tool but

00:04:03,989 --> 00:04:10,769
you actually really have no idea how to

00:04:05,400 --> 00:04:11,340
use it so about until about four years

00:04:10,769 --> 00:04:13,500
ago

00:04:11,340 --> 00:04:15,570
we thought we actually might can improve

00:04:13,500 --> 00:04:16,890
on this one and get W superconn to move

00:04:15,570 --> 00:04:18,720
more in the direction like being a real

00:04:16,890 --> 00:04:19,890
Wi-Fi management demon that actually

00:04:18,720 --> 00:04:21,900
managed does your Wi-Fi network

00:04:19,890 --> 00:04:23,490
remembers things does things set up

00:04:21,900 --> 00:04:24,539
actually solves all the hard problems

00:04:23,490 --> 00:04:27,220
for you

00:04:24,539 --> 00:04:29,650
sadly the story is pretty much

00:04:27,220 --> 00:04:32,830
they don't really want this it wants to

00:04:29,650 --> 00:04:34,870
stay these toolbox of things to test to

00:04:32,830 --> 00:04:36,580
start new specifications test new

00:04:34,870 --> 00:04:39,850
specifications get things working on new

00:04:36,580 --> 00:04:41,980
specifications put in new code do some

00:04:39,850 --> 00:04:44,650
vendor testing and so on and so forth I

00:04:41,980 --> 00:04:45,940
think awesome that's great but pretty

00:04:44,650 --> 00:04:47,980
much everything running links relies on

00:04:45,940 --> 00:04:50,170
W supplicant and everybody has to put

00:04:47,980 --> 00:04:51,370
their own magic on top of this one they

00:04:50,170 --> 00:04:52,600
have to hack around their own features

00:04:51,370 --> 00:04:56,500
they have to actually patch these things

00:04:52,600 --> 00:04:58,690
over and over again and the result is

00:04:56,500 --> 00:05:00,670
that pretty much every company provides

00:04:58,690 --> 00:05:02,020
with their Hardware own version W

00:05:00,670 --> 00:05:04,060
supplicant every operating system

00:05:02,020 --> 00:05:05,410
provides their own version the only

00:05:04,060 --> 00:05:06,550
thing if you use the Linux desktop the

00:05:05,410 --> 00:05:08,530
stuck with what kind of upstream is

00:05:06,550 --> 00:05:10,060
doing it's an older version because no

00:05:08,530 --> 00:05:11,410
disco is really doing all the effort and

00:05:10,060 --> 00:05:13,870
she getting this working so think about

00:05:11,410 --> 00:05:15,790
wp3 support or we want actually more

00:05:13,870 --> 00:05:17,830
secure Wi-Fi have you seen any distress

00:05:15,790 --> 00:05:19,150
of porting this one yet W supplicant a

00:05:17,830 --> 00:05:20,320
support for it but nobody's actually

00:05:19,150 --> 00:05:22,780
putting the work in actually put this in

00:05:20,320 --> 00:05:24,040
the nature of this source and that's

00:05:22,780 --> 00:05:28,240
really the fundamental problem that

00:05:24,040 --> 00:05:29,830
we're actually trying to get after so at

00:05:28,240 --> 00:05:32,380
some point around four years ago realize

00:05:29,830 --> 00:05:33,850
we have to start from scratch we have to

00:05:32,380 --> 00:05:36,010
use what the Linux kernel is offering

00:05:33,850 --> 00:05:39,580
maybe fix some of this one I will get to

00:05:36,010 --> 00:05:40,780
this in a second but then start on what

00:05:39,580 --> 00:05:43,870
the kernel is giving us and actually

00:05:40,780 --> 00:05:45,610
throw W silicon out and redo this how we

00:05:43,870 --> 00:05:47,080
would have done this with bluetooths how

00:05:45,610 --> 00:05:49,210
we've done this with NFC have done with

00:05:47,080 --> 00:05:51,970
us telephony and everything else so I

00:05:49,210 --> 00:05:53,560
doubled Eve I net Wireless daemon it

00:05:51,970 --> 00:05:56,380
will manage all your Wi-Fi networks it

00:05:53,560 --> 00:05:58,450
will do everything for you it will only

00:05:56,380 --> 00:06:00,580
ask you for things that it can't answer

00:05:58,450 --> 00:06:01,900
like what's your passphrase or what

00:06:00,580 --> 00:06:03,910
Wi-Fi do you want to connect to so you

00:06:01,900 --> 00:06:05,740
can scan with it you can connect and you

00:06:03,910 --> 00:06:07,600
actually gets asked for the passwords so

00:06:05,740 --> 00:06:09,160
it does everything it remembers

00:06:07,600 --> 00:06:10,270
everything so this is the most important

00:06:09,160 --> 00:06:12,760
part you don't have to reprogram it

00:06:10,270 --> 00:06:14,650
every time you start it if you connected

00:06:12,760 --> 00:06:15,910
to network it you start it next time

00:06:14,650 --> 00:06:17,710
around it will have remembered it and

00:06:15,910 --> 00:06:19,540
before you accept anything done it will

00:06:17,710 --> 00:06:21,190
priority have connected to it because it

00:06:19,540 --> 00:06:22,300
has can Freud it found it and you were

00:06:21,190 --> 00:06:23,979
done so you don't have to do anything

00:06:22,300 --> 00:06:25,750
else if you already remember it and have

00:06:23,979 --> 00:06:27,760
all your credentials stored you don't

00:06:25,750 --> 00:06:29,110
have to ask the UI anymore so pretty

00:06:27,760 --> 00:06:33,130
much when Norma started everything is

00:06:29,110 --> 00:06:35,080
already set up one interesting thing is

00:06:33,130 --> 00:06:39,280
it actually is the only entity that

00:06:35,080 --> 00:06:40,440
starts scanning on your Wi-Fi card W

00:06:39,280 --> 00:06:42,270
supplicant has the fun

00:06:40,440 --> 00:06:43,650
fact that it scans it has to scan

00:06:42,270 --> 00:06:44,610
because it's a Wi-Fi work if to find

00:06:43,650 --> 00:06:47,370
your beacons you have to find your

00:06:44,610 --> 00:06:49,260
access points but if you want to do

00:06:47,370 --> 00:06:50,610
anything else the higher layers hold or

00:06:49,260 --> 00:06:52,500
also have to scan so your diamond

00:06:50,610 --> 00:06:54,120
network manager con- set of scans and

00:06:52,500 --> 00:06:55,410
then you ended up the DUI sometimes had

00:06:54,120 --> 00:06:56,070
to scan as well because I need to figure

00:06:55,410 --> 00:06:57,600
something else

00:06:56,070 --> 00:06:59,520
so three entities in your system

00:06:57,600 --> 00:07:01,860
starting to scan and utilizing actually

00:06:59,520 --> 00:07:04,230
your bandwidth of your radio that means

00:07:01,860 --> 00:07:05,820
you will have outages you will have

00:07:04,230 --> 00:07:07,440
actually overlapping and you don't

00:07:05,820 --> 00:07:08,970
really utilize the card as good as you

00:07:07,440 --> 00:07:10,200
can so you want to put the scanning all

00:07:08,970 --> 00:07:11,880
at the level that where someone can make

00:07:10,200 --> 00:07:14,280
intelligent decisions when two skin

00:07:11,880 --> 00:07:15,570
especially on what channels to scan so

00:07:14,280 --> 00:07:17,640
if you actually for example one of Rome

00:07:15,570 --> 00:07:19,560
to another network and you know where

00:07:17,640 --> 00:07:22,110
this network is you can do a quick scan

00:07:19,560 --> 00:07:23,670
on that band and just find it if you

00:07:22,110 --> 00:07:25,710
have to switch between four 2.4

00:07:23,670 --> 00:07:26,970
gigahertz 5 gigahertz if there's a

00:07:25,710 --> 00:07:28,770
scanner hold 5 Peters network to find

00:07:26,970 --> 00:07:30,750
your access point again that takes time

00:07:28,770 --> 00:07:32,250
that's time you can't be on the extra

00:07:30,750 --> 00:07:33,630
channel transmitting data you see

00:07:32,250 --> 00:07:35,670
interrupts and sometimes access points

00:07:33,630 --> 00:07:39,750
just disconnect you so that's something

00:07:35,670 --> 00:07:41,100
you really have to do centralized fast

00:07:39,750 --> 00:07:43,170
warming was fun is really important

00:07:41,100 --> 00:07:44,669
because you get more access to a great

00:07:43,170 --> 00:07:45,960
Wi-Fi mesh networks you get everything

00:07:44,669 --> 00:07:47,700
else do you have more access points at

00:07:45,960 --> 00:07:49,169
home the areas are getting now sure you

00:07:47,700 --> 00:07:51,630
want to be able to grow up around and

00:07:49,169 --> 00:07:52,800
roam really quickly and reliable and you

00:07:51,630 --> 00:07:54,060
can actually do this in a lot of cases

00:07:52,800 --> 00:07:55,050
by just asking the access point what are

00:07:54,060 --> 00:07:56,190
my neighbors you don't have to do

00:07:55,050 --> 00:07:57,960
anything else just tell me if I have a

00:07:56,190 --> 00:07:59,910
neighbor and tell me if my signal is

00:07:57,960 --> 00:08:01,410
getting too weak then I tell me where to

00:07:59,910 --> 00:08:02,640
roam on and you just follow this one

00:08:01,410 --> 00:08:03,900
it's a client you can be really sitting

00:08:02,640 --> 00:08:07,260
down relaxing if you're good access

00:08:03,900 --> 00:08:09,540
point we don't hear about anything else

00:08:07,260 --> 00:08:11,250
then Linux I mean focusing on how do you

00:08:09,540 --> 00:08:13,950
run this on the Apple device on Windows

00:08:11,250 --> 00:08:15,680
on on freebies the other thing is it's

00:08:13,950 --> 00:08:17,400
nice it's great it's awesome but

00:08:15,680 --> 00:08:20,300
fundamentally we have to solve our own

00:08:17,400 --> 00:08:22,950
problems let's solve all problems first

00:08:20,300 --> 00:08:24,180
we wanted to make the code readable so

00:08:22,950 --> 00:08:26,940
actually can audit it and figure this

00:08:24,180 --> 00:08:28,680
out w supplicant is not a readable code

00:08:26,940 --> 00:08:30,090
before you find the entities I should do

00:08:28,680 --> 00:08:31,560
something you have jumps through the six

00:08:30,090 --> 00:08:34,710
layers of indirection before you find

00:08:31,560 --> 00:08:36,089
something its historical I understand

00:08:34,710 --> 00:08:36,570
why it's there but at some point you to

00:08:36,089 --> 00:08:38,219
say okay

00:08:36,570 --> 00:08:39,539
electing this up or live with this mess

00:08:38,219 --> 00:08:40,710
whatever and you only have like two

00:08:39,539 --> 00:08:42,479
people in the world I probably know that

00:08:40,710 --> 00:08:44,660
code everybody else is spending an hour

00:08:42,479 --> 00:08:46,470
to figure out what this thing is doing

00:08:44,660 --> 00:08:47,750
interesting we need to actually read all

00:08:46,470 --> 00:08:50,400
the code is that you have to start

00:08:47,750 --> 00:08:52,530
separating this is small blocks and

00:08:50,400 --> 00:08:53,360
doing the beacon processing a separate

00:08:52,530 --> 00:08:54,950
one you can put right

00:08:53,360 --> 00:08:56,480
test for this one any reaction and sure

00:08:54,950 --> 00:08:58,010
really easily that it's thought keep

00:08:56,480 --> 00:08:59,570
doing the right thing

00:08:58,010 --> 00:09:01,220
you can also nicely add if you do

00:08:59,570 --> 00:09:03,140
everything in one box you can really add

00:09:01,220 --> 00:09:04,850
nice end-to-end testing so you can just

00:09:03,140 --> 00:09:06,800
put this in a simulator test this and

00:09:04,850 --> 00:09:08,660
you ensure that your authentication with

00:09:06,800 --> 00:09:11,000
your network still work um

00:09:08,660 --> 00:09:12,829
when it comes to actually the security

00:09:11,000 --> 00:09:14,480
we wanted to separate this into a pieces

00:09:12,829 --> 00:09:16,279
and not mix this together and one big

00:09:14,480 --> 00:09:18,769
thing so we can show you half the e UPS

00:09:16,279 --> 00:09:20,029
separate out the e up over LAN separated

00:09:18,769 --> 00:09:21,769
out and also the 4 Way handshake

00:09:20,029 --> 00:09:23,120
separate out so eh you can reuse this

00:09:21,769 --> 00:09:25,310
and utilize this properly and you will

00:09:23,120 --> 00:09:25,670
see this later on why this was needed to

00:09:25,310 --> 00:09:29,149
be done

00:09:25,670 --> 00:09:31,700
um as mentioned in the first slide the

00:09:29,149 --> 00:09:33,649
focus on the EBUS api that we exposing

00:09:31,700 --> 00:09:36,170
to a use this it's really user centric

00:09:33,649 --> 00:09:37,730
it's from the UI is what UI needs or

00:09:36,170 --> 00:09:39,050
what the user needs to do and not what

00:09:37,730 --> 00:09:40,370
we actually want to do if you want to do

00:09:39,050 --> 00:09:41,750
this you can have some diagnostic api's

00:09:40,370 --> 00:09:45,140
but fun when you focus on that the user

00:09:41,750 --> 00:09:47,899
gets access to the Wi-Fi networks so

00:09:45,140 --> 00:09:49,399
with this one we have pretty much

00:09:47,899 --> 00:09:51,140
everything put into an agent you only

00:09:49,399 --> 00:09:52,190
get asked when you actually need the

00:09:51,140 --> 00:09:54,290
information you don't have to provide

00:09:52,190 --> 00:09:55,550
them upfront a lot of cases you need to

00:09:54,290 --> 00:09:57,019
provide the information upfront so you

00:09:55,550 --> 00:10:00,050
need to know what kind of network is

00:09:57,019 --> 00:10:01,250
this you don't know up front sometimes

00:10:00,050 --> 00:10:02,420
some of the information we know why you

00:10:01,250 --> 00:10:03,260
connected to it and figured something

00:10:02,420 --> 00:10:06,019
else

00:10:03,260 --> 00:10:07,370
so ask at the right point but gives the

00:10:06,019 --> 00:10:08,630
user the ability to actually then enter

00:10:07,370 --> 00:10:11,149
the information for example the

00:10:08,630 --> 00:10:12,740
difference between WP 1 + WP to the most

00:10:11,149 --> 00:10:14,300
users don't really care pick the most

00:10:12,740 --> 00:10:15,440
strong encryption and you start using it

00:10:14,300 --> 00:10:17,720
don't ask the user which description

00:10:15,440 --> 00:10:18,800
they want to use same as then we

00:10:17,720 --> 00:10:20,209
actually have connect an enterprise

00:10:18,800 --> 00:10:22,459
network if you're missing something like

00:10:20,209 --> 00:10:23,690
the private key then ask them for the

00:10:22,459 --> 00:10:25,190
private key which needed

00:10:23,690 --> 00:10:27,140
don't ask this information all up front

00:10:25,190 --> 00:10:28,850
and decrypt all the certificates same is

00:10:27,140 --> 00:10:30,170
some identity information or domain

00:10:28,850 --> 00:10:32,050
names or something else ask them when

00:10:30,170 --> 00:10:34,970
you need them

00:10:32,050 --> 00:10:37,149
with all this crypto we actually didn't

00:10:34,970 --> 00:10:39,649
say we want to use open SSL and TLS

00:10:37,149 --> 00:10:41,089
personally these levels are huge we're

00:10:39,649 --> 00:10:43,040
gonna run this on small embedded systems

00:10:41,089 --> 00:10:44,269
they also blocking in a lot of cases

00:10:43,040 --> 00:10:46,430
that means I have to either use

00:10:44,269 --> 00:10:48,800
threading or hacked around this really

00:10:46,430 --> 00:10:50,089
heavily so we actually said ok don't use

00:10:48,800 --> 00:10:51,620
this we're gonna use the kernel crop top

00:10:50,089 --> 00:10:53,540
that kind of exposes the crypto

00:10:51,620 --> 00:10:55,910
interfaces really nicely and you can use

00:10:53,540 --> 00:10:59,779
them so you have a s available e CDH and

00:10:55,910 --> 00:11:01,190
so on and so forth on enterprise side

00:10:59,779 --> 00:11:02,510
you've seen the dialogues we don't

00:11:01,190 --> 00:11:04,819
really want you to enter these dialogues

00:11:02,510 --> 00:11:06,800
it's like we get to get a config file

00:11:04,819 --> 00:11:07,640
that has this all set up that this

00:11:06,800 --> 00:11:09,170
auto-generate have

00:11:07,640 --> 00:11:10,850
science would actually secure you know

00:11:09,170 --> 00:11:12,680
he actually got this from the source you

00:11:10,850 --> 00:11:13,880
have it put it in your file system and

00:11:12,680 --> 00:11:15,020
everything will just gonna work and I

00:11:13,880 --> 00:11:18,770
will show you an example on this one

00:11:15,020 --> 00:11:20,420
made on Wi-Fi simple confirmation so

00:11:18,770 --> 00:11:23,270
pretty much press a button on the access

00:11:20,420 --> 00:11:24,530
point and the Wi-Fi will connected and

00:11:23,270 --> 00:11:27,380
figure out all the everything so there's

00:11:24,530 --> 00:11:29,090
zero configuration setup if you want to

00:11:27,380 --> 00:11:31,790
do this really working with W supplicant

00:11:29,090 --> 00:11:33,710
you kinda can and we got like 90% of

00:11:31,790 --> 00:11:35,030
this one done in conmen but it never

00:11:33,710 --> 00:11:37,640
really worked on episode it's

00:11:35,030 --> 00:11:38,930
complicated its convoluted and it's just

00:11:37,640 --> 00:11:40,070
fundamentally broken because you don't

00:11:38,930 --> 00:11:42,530
get all the right information at the

00:11:40,070 --> 00:11:43,760
right time with iwe that actually works

00:11:42,530 --> 00:11:46,760
perfect is you can press the button on

00:11:43,760 --> 00:11:49,730
the access point you press start WPS on

00:11:46,760 --> 00:11:52,790
your UI your connected works really

00:11:49,730 --> 00:11:53,990
nicely access point mode support had to

00:11:52,790 --> 00:11:56,180
come as well because there's four people

00:11:53,990 --> 00:11:57,380
lot of people use for tethering etc so

00:11:56,180 --> 00:11:59,450
that we have as well so this is

00:11:57,380 --> 00:12:02,780
something that's four years later we

00:11:59,450 --> 00:12:04,760
have all of this one available we

00:12:02,780 --> 00:12:06,440
started four years ago but only

00:12:04,760 --> 00:12:08,180
beginning of this you we start actually

00:12:06,440 --> 00:12:09,710
making releases if you don't make any

00:12:08,180 --> 00:12:11,390
releases your product as your project

00:12:09,710 --> 00:12:13,610
doesn't really exist it's it's not yes

00:12:11,390 --> 00:12:16,040
make releases slow distance can start

00:12:13,610 --> 00:12:17,090
integrating this so reading of the year

00:12:16,040 --> 00:12:19,670
we at the confidence so we can actually

00:12:17,090 --> 00:12:22,040
start driving the stores so February

00:12:19,670 --> 00:12:23,450
10th was the first release you could

00:12:22,040 --> 00:12:25,310
connect an over network you can get to

00:12:23,450 --> 00:12:27,980
personal networks and you could WPS so

00:12:25,310 --> 00:12:29,390
that was already pretty much really good

00:12:27,980 --> 00:12:30,650
for us to actually get going and we got

00:12:29,390 --> 00:12:34,030
this into arch linux and some other

00:12:30,650 --> 00:12:37,970
discos and they happily tried this out

00:12:34,030 --> 00:12:39,320
in May we finally got fixed one of the

00:12:37,970 --> 00:12:42,380
fundamental problems that were always

00:12:39,320 --> 00:12:43,940
bugging us so the holy for were exchange

00:12:42,380 --> 00:12:46,130
the key exchange happens over an

00:12:43,940 --> 00:12:47,890
Ethernet port the problem is that

00:12:46,130 --> 00:12:50,510
everything else happens over net link

00:12:47,890 --> 00:12:52,580
the kernel schedules your Ethernet port

00:12:50,510 --> 00:12:55,820
packet delivery at your net link packet

00:12:52,580 --> 00:12:59,840
delivery at random so while they on the

00:12:55,820 --> 00:13:01,340
wire they arrive in in sequence when you

00:12:59,840 --> 00:13:02,780
actually get to the the process that

00:13:01,340 --> 00:13:05,300
processes them they might have actually

00:13:02,780 --> 00:13:07,490
reordered them so generally this is not

00:13:05,300 --> 00:13:10,430
a problem but some of these information

00:13:07,490 --> 00:13:12,260
with newer technologies about how to set

00:13:10,430 --> 00:13:13,520
up WP 3s and so on and so forth they

00:13:12,260 --> 00:13:14,900
need information from the management

00:13:13,520 --> 00:13:16,520
frames that only arrived over net

00:13:14,900 --> 00:13:18,470
negated 2:11 and they need information

00:13:16,520 --> 00:13:19,140
from the e up that only arrives a leaf

00:13:18,470 --> 00:13:21,300
and iPod

00:13:19,140 --> 00:13:22,500
so we finally got the feature into the

00:13:21,300 --> 00:13:24,450
Linux kernel we actually can say look

00:13:22,500 --> 00:13:26,160
don't send the ethernet pack these are

00:13:24,450 --> 00:13:28,290
the air packets over the Ethernet port

00:13:26,160 --> 00:13:29,399
sent them over and capsulate over net

00:13:28,290 --> 00:13:31,200
link so we actually have them in

00:13:29,399 --> 00:13:32,910
sequence as they arrive on the air and

00:13:31,200 --> 00:13:35,880
that's really important to fix a lot of

00:13:32,910 --> 00:13:37,290
race conditions that a lot of stacks

00:13:35,880 --> 00:13:38,579
have hacked around so they kept the

00:13:37,290 --> 00:13:40,380
packet waiting they hope that the other

00:13:38,579 --> 00:13:41,910
one arrives maybe it arrives when it

00:13:40,380 --> 00:13:44,700
doesn't arrive maybe it doesn't right in

00:13:41,910 --> 00:13:46,320
the right order then you can't assign it

00:13:44,700 --> 00:13:48,149
properly anymore so this is all fixed

00:13:46,320 --> 00:13:49,829
now so if you have properly supported

00:13:48,149 --> 00:13:51,120
hardware that actually does this they

00:13:49,829 --> 00:13:52,440
arrive in sequence and you don't have

00:13:51,120 --> 00:13:54,810
any race conditions anymore so you don't

00:13:52,440 --> 00:13:56,399
have any spontaneous disconnects or you

00:13:54,810 --> 00:13:56,820
can't connect arrows and so on and so

00:13:56,399 --> 00:13:59,100
forth

00:13:56,820 --> 00:14:00,570
tiny feature completely invisible to

00:13:59,100 --> 00:14:04,110
everybody but really important to

00:14:00,570 --> 00:14:05,760
actually improve this in June we

00:14:04,110 --> 00:14:07,500
actually got hidden networks working so

00:14:05,760 --> 00:14:10,470
hidden networks this isn't a concept of

00:14:07,500 --> 00:14:13,380
Wi-Fi that's an invention from Cisco and

00:14:10,470 --> 00:14:14,670
it's so painful that you pretty much

00:14:13,380 --> 00:14:16,140
tell everybody not to use it in network

00:14:14,670 --> 00:14:19,350
because it actually consumes more power

00:14:16,140 --> 00:14:20,940
I think we worked it out as good as we

00:14:19,350 --> 00:14:22,260
can when we have 4 hidden networks so we

00:14:20,940 --> 00:14:24,899
only scan for the hidden network so we

00:14:22,260 --> 00:14:26,730
only reveal the SSID s of the hidden

00:14:24,899 --> 00:14:29,370
network because the promise will in that

00:14:26,730 --> 00:14:31,620
work and you will actually reveal your

00:14:29,370 --> 00:14:33,540
hidden network SSID more than you

00:14:31,620 --> 00:14:36,600
actually protect it from your client so

00:14:33,540 --> 00:14:37,860
stores like when you walk into Macy's or

00:14:36,600 --> 00:14:39,570
something else they can actually track

00:14:37,860 --> 00:14:42,000
you on on your home networks that they

00:14:39,570 --> 00:14:43,410
can find you next time around so you

00:14:42,000 --> 00:14:47,310
rather not connected networks issue

00:14:43,410 --> 00:14:49,709
value your privacy one month later we

00:14:47,310 --> 00:14:50,670
got ad hoc networks working initially we

00:14:49,709 --> 00:14:51,870
said we're never going to do that hot

00:14:50,670 --> 00:14:53,240
Annette are talking networks because

00:14:51,870 --> 00:14:56,339
it's kind of old technology one needs it

00:14:53,240 --> 00:14:57,899
it came out of the restructuring of some

00:14:56,339 --> 00:14:59,519
of the security code and some of the

00:14:57,899 --> 00:15:00,600
handling of the handshake that we

00:14:59,519 --> 00:15:03,420
actually pretty much got the ad hoc

00:15:00,600 --> 00:15:05,160
support for free with full PSK

00:15:03,420 --> 00:15:07,560
encryption then we put access point mode

00:15:05,160 --> 00:15:09,720
in there on August we finally got the

00:15:07,560 --> 00:15:10,680
wp3 support working underneath so we

00:15:09,720 --> 00:15:14,370
actually don't see a difference

00:15:10,680 --> 00:15:16,199
connecting to w2 WPA 1 w p2 or W III

00:15:14,370 --> 00:15:17,640
network we handle all the difference for

00:15:16,199 --> 00:15:20,519
you we handle all the pass key

00:15:17,640 --> 00:15:22,230
transitions and so on and so forth and

00:15:20,519 --> 00:15:23,670
we started keeping growing the list of

00:15:22,230 --> 00:15:27,709
enterprise gear methods so we actually

00:15:23,670 --> 00:15:30,420
can talk to the enterprise networks in

00:15:27,709 --> 00:15:31,589
September a months ago

00:15:30,420 --> 00:15:33,290
was the big change because we were

00:15:31,589 --> 00:15:38,610
already starting to ready to get to

00:15:33,290 --> 00:15:39,690
drive towards 1.0 we split the API into

00:15:38,610 --> 00:15:41,700
different mode so we broke a little of

00:15:39,690 --> 00:15:42,839
the API when we had a station mode at

00:15:41,700 --> 00:15:44,190
hoc mode access point mode so they were

00:15:42,839 --> 00:15:45,750
really nicely separated so we can

00:15:44,190 --> 00:15:46,980
actually really switch the mode of your

00:15:45,750 --> 00:15:48,420
card it's a locally operating Nexus

00:15:46,980 --> 00:15:49,709
point more your breading station won't

00:15:48,420 --> 00:15:51,209
know you're operating or health mode so

00:15:49,709 --> 00:15:53,310
it's really clean and doesn't try to

00:15:51,209 --> 00:15:54,870
interleave or mix this but also means

00:15:53,310 --> 00:15:58,290
scan results a set up a filter the

00:15:54,870 --> 00:16:00,690
property about more doing more yep

00:15:58,290 --> 00:16:02,550
methods for enterprise and we also got

00:16:00,690 --> 00:16:05,490
the fast transitioning for roaming with

00:16:02,550 --> 00:16:08,490
WP 3 finally working beginning of this

00:16:05,490 --> 00:16:11,339
month and about a couple of days ago I

00:16:08,490 --> 00:16:13,860
did another release so we don't go from

00:16:11,339 --> 00:16:16,560
0.9 to 1.0 we go to zero 20 point 10

00:16:13,860 --> 00:16:18,149
until we have everything ready we have

00:16:16,560 --> 00:16:19,500
an Ethernet authentication daemon now as

00:16:18,149 --> 00:16:21,420
well you can do the same on ethernet I

00:16:19,500 --> 00:16:23,430
will get to this one and finally this

00:16:21,420 --> 00:16:25,680
the first version that builds with an

00:16:23,430 --> 00:16:28,079
external he ll he allows us an embedded

00:16:25,680 --> 00:16:30,060
Linux library replacement for G Lib but

00:16:28,079 --> 00:16:31,079
really smaller and more dedicated for

00:16:30,060 --> 00:16:34,260
actually if you want to implement a

00:16:31,079 --> 00:16:35,910
demon we have this available for like 6

00:16:34,260 --> 00:16:37,829
years now we have building releases with

00:16:35,910 --> 00:16:39,630
this one but our until now was always

00:16:37,829 --> 00:16:41,550
baked into this source code of item D

00:16:39,630 --> 00:16:42,690
Yusuke she can easily deploy this now we

00:16:41,550 --> 00:16:44,760
have the choice use the built-in

00:16:42,690 --> 00:16:46,019
internal one or using compiled in

00:16:44,760 --> 00:16:47,640
external one some distance won't

00:16:46,019 --> 00:16:49,470
actually really after if we don't know

00:16:47,640 --> 00:16:50,820
like if F library building at the source

00:16:49,470 --> 00:16:52,350
cut off a demon we don't actually shoot

00:16:50,820 --> 00:16:54,390
the library so you can do security up it

00:16:52,350 --> 00:16:55,500
separately but understood concept but

00:16:54,390 --> 00:16:57,089
finally we actually made this work as

00:16:55,500 --> 00:17:00,870
well so we are really driving towards

00:16:57,089 --> 00:17:03,720
getting this to 1.0 um with that all set

00:17:00,870 --> 00:17:05,760
the architecture looks probably more

00:17:03,720 --> 00:17:08,189
people have seen this picture before but

00:17:05,760 --> 00:17:09,569
WW supplicant on the left side is is the

00:17:08,189 --> 00:17:11,250
beast it supports everything in the

00:17:09,569 --> 00:17:14,549
kitchen sink it has tons and tons of

00:17:11,250 --> 00:17:17,429
options we picked one when we actually

00:17:14,549 --> 00:17:19,199
did con men we used the version 2 of the

00:17:17,429 --> 00:17:20,880
d-bus api pro needs to version 3 in

00:17:19,199 --> 00:17:23,939
diversion for before this is any usable

00:17:20,880 --> 00:17:26,339
for anybody we pick the lip NL and

00:17:23,939 --> 00:17:28,169
netting ADA 211 conjugated live in and

00:17:26,339 --> 00:17:29,520
then either full Microsoft mag but it

00:17:28,169 --> 00:17:31,020
all adds support for all the stuff on

00:17:29,520 --> 00:17:33,870
the right side as well for Mac OS and

00:17:31,020 --> 00:17:35,309
everything else the really bad part is

00:17:33,870 --> 00:17:37,860
that we actually write this whole G

00:17:35,309 --> 00:17:41,490
supplicant to actually make the d-bus

00:17:37,860 --> 00:17:42,870
api digestible and usable and fix all

00:17:41,490 --> 00:17:44,280
the issues around it so you have this

00:17:42,870 --> 00:17:45,570
whole layer that actually has to do

00:17:44,280 --> 00:17:47,040
another thing that you would think why

00:17:45,570 --> 00:17:50,850
would I have to do this it's way too

00:17:47,040 --> 00:17:52,140
much work with either ID we actually

00:17:50,850 --> 00:17:54,660
slimmed this down it's like we only

00:17:52,140 --> 00:17:57,060
focus on letting a do 211 full Microsoft

00:17:54,660 --> 00:17:59,040
mech cards we use the fr interface for

00:17:57,060 --> 00:18:01,050
these ciphers and we use the key control

00:17:59,040 --> 00:18:02,730
for a symmetric cryptography in the

00:18:01,050 --> 00:18:05,550
kernel so the only thing we really need

00:18:02,730 --> 00:18:07,590
on a userspace side is TLS records so

00:18:05,550 --> 00:18:09,810
you need two TLS framing and you need

00:18:07,590 --> 00:18:11,370
the PM format to unpack your

00:18:09,810 --> 00:18:13,500
certificates everything else is handled

00:18:11,370 --> 00:18:15,390
by the kernel then you that year L

00:18:13,500 --> 00:18:17,370
handle things like main loss d-bus net

00:18:15,390 --> 00:18:19,260
link it's all baked natively into L

00:18:17,370 --> 00:18:23,130
nicely as one chromis lis in a in a

00:18:19,260 --> 00:18:23,880
single process and then you have IWD and

00:18:23,130 --> 00:18:25,320
then you just have your tea bus

00:18:23,880 --> 00:18:27,240
interface onion you can put conman

00:18:25,320 --> 00:18:28,350
network manager whatever you want on top

00:18:27,240 --> 00:18:30,720
of it

00:18:28,350 --> 00:18:32,460
the nice thing that we actually

00:18:30,720 --> 00:18:34,610
separated this all out and did this

00:18:32,460 --> 00:18:37,740
cleanly from a UI point of view is that

00:18:34,610 --> 00:18:39,120
previously the only way to actually use

00:18:37,740 --> 00:18:40,980
double super kind we actually put a wrap

00:18:39,120 --> 00:18:42,960
around it you have to wrap this whole

00:18:40,980 --> 00:18:44,790
completely because if you can't have two

00:18:42,960 --> 00:18:46,710
applications using it you can't have two

00:18:44,790 --> 00:18:48,240
applications accessing it everything

00:18:46,710 --> 00:18:50,280
goes wrong states are not properly

00:18:48,240 --> 00:18:51,990
shared you mess around the other one if

00:18:50,280 --> 00:18:53,340
you just want to have like analysis I

00:18:51,990 --> 00:18:54,660
reading of your network you're pretty

00:18:53,340 --> 00:18:56,670
much scan again then you trigger another

00:18:54,660 --> 00:18:58,110
scan and so on and so forth we actually

00:18:56,670 --> 00:19:00,030
had this whole wrapping around it and

00:18:58,110 --> 00:19:01,710
that means everybody had to go through

00:19:00,030 --> 00:19:03,050
con man to actually get something simple

00:19:01,710 --> 00:19:05,460
done like oh I want to display the

00:19:03,050 --> 00:19:08,340
connected Wi-Fi network and vyasa's eye

00:19:05,460 --> 00:19:11,490
level or the signal strength level huge

00:19:08,340 --> 00:19:14,700
effort that you had to do while with IWD

00:19:11,490 --> 00:19:16,350
you don't we have separate things that

00:19:14,700 --> 00:19:18,360
are separate or really separated out so

00:19:16,350 --> 00:19:21,330
if you want to have an surpassed race

00:19:18,360 --> 00:19:23,130
request you register an agent and that

00:19:21,330 --> 00:19:25,020
didn't get oh I need the identity I need

00:19:23,130 --> 00:19:26,430
the passphrase I need that key I need

00:19:25,020 --> 00:19:28,080
that extra information that you domain

00:19:26,430 --> 00:19:32,160
I just want to splay your network name

00:19:28,080 --> 00:19:33,480
in the SSI I can in your status bar you

00:19:32,160 --> 00:19:34,710
were just an agent for this one that

00:19:33,480 --> 00:19:35,880
actually just gets you this information

00:19:34,710 --> 00:19:37,320
when you get you when they change and

00:19:35,880 --> 00:19:38,550
were you're connected to it or you

00:19:37,320 --> 00:19:39,900
actually want to scan for something then

00:19:38,550 --> 00:19:41,430
you use it to like Conran network

00:19:39,900 --> 00:19:42,720
manager IW controlled actually look I

00:19:41,430 --> 00:19:44,520
want to scan I want to find an ID one do

00:19:42,720 --> 00:19:45,450
this can we all separate it out so you

00:19:44,520 --> 00:19:47,430
don't actually have to put everything

00:19:45,450 --> 00:19:48,870
into the whole UI we can separate this

00:19:47,430 --> 00:19:51,030
out really nicely and they can run on

00:19:48,870 --> 00:19:53,900
all at the same time and they don't mess

00:19:51,030 --> 00:19:53,900
with you with each other

00:19:54,680 --> 00:19:59,880
the integration with Kahneman was really

00:19:57,630 --> 00:20:01,170
early but it kind of stalled since we

00:19:59,880 --> 00:20:02,790
actually focused on getting most of the

00:20:01,170 --> 00:20:04,140
stuff iw done so that needs a little bit

00:20:02,790 --> 00:20:06,000
of love especially for the scanning

00:20:04,140 --> 00:20:07,950
features but fundamentally you can

00:20:06,000 --> 00:20:10,320
actually use conman with idle really as

00:20:07,950 --> 00:20:11,340
well we shifted the focus to actually

00:20:10,320 --> 00:20:12,810
see if we can get this in more

00:20:11,340 --> 00:20:14,880
distributions and the reality of the

00:20:12,810 --> 00:20:16,320
fact is that most Linux the solution

00:20:14,880 --> 00:20:18,890
ship was network management by default

00:20:16,320 --> 00:20:21,510
so we put a lot of work in actually

00:20:18,890 --> 00:20:23,010
fixing changing Network manage to

00:20:21,510 --> 00:20:24,540
actually adapt to the new principal that

00:20:23,010 --> 00:20:26,130
you don't have to handle all of the

00:20:24,540 --> 00:20:27,930
Wi-Fi details we handle them all for you

00:20:26,130 --> 00:20:30,360
that code is all obsolete yet you have

00:20:27,930 --> 00:20:31,800
there let us handle things so we have

00:20:30,360 --> 00:20:34,200
this fully working for personal networks

00:20:31,800 --> 00:20:35,700
now the nice thing is once you put the

00:20:34,200 --> 00:20:38,010
level down and actually so all the

00:20:35,700 --> 00:20:40,230
details are solved by a demon below WPA

00:20:38,010 --> 00:20:42,210
3 support is there so if you need

00:20:40,230 --> 00:20:43,410
network minute with IWD you get the

00:20:42,210 --> 00:20:44,940
support for free and you have all the

00:20:43,410 --> 00:20:47,070
setup that you need

00:20:44,940 --> 00:20:50,040
we have also working enterprise networks

00:20:47,070 --> 00:20:52,080
set up as Network Monitor 1.14 that's in

00:20:50,040 --> 00:20:54,000
this well and we keep improving this one

00:20:52,080 --> 00:20:55,320
so you see patches coming in fixes

00:20:54,000 --> 00:20:56,910
coming in and we keep actually working

00:20:55,320 --> 00:20:58,020
on this one that the next version of

00:20:56,910 --> 00:20:59,940
network manager will actually fully

00:20:58,020 --> 00:21:02,340
support iwd and hopefully by that point

00:20:59,940 --> 00:21:04,050
i iwd is one point zero and you get it

00:21:02,340 --> 00:21:06,120
in the disclose I think Fedora has it in

00:21:04,050 --> 00:21:09,000
their arch hazard in there

00:21:06,120 --> 00:21:11,820
Debian has it in there a bunch of others

00:21:09,000 --> 00:21:13,860
I don't even know a lot of this was have

00:21:11,820 --> 00:21:15,210
toyed with this one and packaged it so I

00:21:13,860 --> 00:21:17,850
think you can get a recent version of

00:21:15,210 --> 00:21:19,590
network management ideas by installing

00:21:17,850 --> 00:21:22,320
it from your this tool we have a

00:21:19,590 --> 00:21:25,650
prototype for Chrome OS that will work

00:21:22,320 --> 00:21:27,420
as well that one is really rough and we

00:21:25,650 --> 00:21:29,640
haven't published this way because

00:21:27,420 --> 00:21:31,680
Chrome OS has the really nasty thing

00:21:29,640 --> 00:21:34,140
that a lot of details of the Wi-Fi stuff

00:21:31,680 --> 00:21:35,760
leaks into your Chrome browser so

00:21:34,140 --> 00:21:37,470
they're fixing a lot of things up on the

00:21:35,760 --> 00:21:39,000
really high level so we need a lot of

00:21:37,470 --> 00:21:40,290
redesigning a restructuring there to

00:21:39,000 --> 00:21:41,520
actually push things back down where

00:21:40,290 --> 00:21:44,370
they're supposed to be so that's still

00:21:41,520 --> 00:21:46,380
work ongoing we have a version where in

00:21:44,370 --> 00:21:48,180
Intel's clear linux we have network

00:21:46,380 --> 00:21:50,580
manager and iDVD in there works really

00:21:48,180 --> 00:21:52,350
well and the internal internal command

00:21:50,580 --> 00:21:58,740
line client IW control is also really

00:21:52,350 --> 00:22:00,720
nice to just use for your connections on

00:21:58,740 --> 00:22:04,410
the way we actually fixed a lot of

00:22:00,720 --> 00:22:05,730
things the kernel wasn't perfect that's

00:22:04,410 --> 00:22:07,050
the problem with the kernel interface

00:22:05,730 --> 00:22:09,330
but you only have a single you

00:22:07,050 --> 00:22:12,270
but single user uses the connector face

00:22:09,330 --> 00:22:13,320
in a certain way and I never figure out

00:22:12,270 --> 00:22:15,480
that third and things actually gonna

00:22:13,320 --> 00:22:17,490
miss him hot plug for example was never

00:22:15,480 --> 00:22:18,900
really fully supported because W silicon

00:22:17,490 --> 00:22:20,100
doesn't do any hot block someone else

00:22:18,900 --> 00:22:22,110
has to figure out the hot plug and then

00:22:20,100 --> 00:22:23,760
tell it where the cars are we didn't

00:22:22,110 --> 00:22:26,280
want this we we want to told us where

00:22:23,760 --> 00:22:28,860
the cars are certain features didn't

00:22:26,280 --> 00:22:31,100
work as documented so but since W so we

00:22:28,860 --> 00:22:34,320
can use them differently nobody noticed

00:22:31,100 --> 00:22:36,180
you had missing clean ups so the

00:22:34,320 --> 00:22:37,680
attributes socket oh now for example

00:22:36,180 --> 00:22:40,080
when you start a scan and then W

00:22:37,680 --> 00:22:41,880
supplicant dice the card still keep

00:22:40,080 --> 00:22:43,560
scanning or you could in the process

00:22:41,880 --> 00:22:45,720
connect your network the card keeps on

00:22:43,560 --> 00:22:47,190
connecting the next time you around what

00:22:45,720 --> 00:22:48,240
you gonna do how are you gonna reset the

00:22:47,190 --> 00:22:51,140
whole thing you power everything down

00:22:48,240 --> 00:22:53,010
what you want to do so

00:22:51,140 --> 00:22:55,410
general you'd uh be super can shouldn't

00:22:53,010 --> 00:22:58,260
died and then as the iwd shouldn't die

00:22:55,410 --> 00:22:59,910
but things happen you really want that

00:22:58,260 --> 00:23:01,260
the corona cleans after you have access

00:22:59,910 --> 00:23:03,780
to the radio sources they know when

00:23:01,260 --> 00:23:05,700
you're gone just stop the transaction is

00:23:03,780 --> 00:23:07,260
your doing if you do like scan on five

00:23:05,700 --> 00:23:08,340
bigger that takes awhile just stop it

00:23:07,260 --> 00:23:10,080
you don't need to do it anymore

00:23:08,340 --> 00:23:11,700
so we fix this with a lot of things

00:23:10,080 --> 00:23:12,870
where you can actually finally ever say

00:23:11,700 --> 00:23:16,620
if the process that actually triggered

00:23:12,870 --> 00:23:18,480
it dies the transaction gets dropped

00:23:16,620 --> 00:23:20,460
I mentioned yep over an effing edge

00:23:18,480 --> 00:23:23,010
level really important we put the others

00:23:20,460 --> 00:23:24,660
I triggers into a kernel interface

00:23:23,010 --> 00:23:26,430
because a lot of hardware supports them

00:23:24,660 --> 00:23:27,870
actually so you really only wake up when

00:23:26,430 --> 00:23:28,950
the others changes to a certain

00:23:27,870 --> 00:23:30,630
threshold and then you can update your

00:23:28,950 --> 00:23:33,660
UI so locally the signal strength

00:23:30,630 --> 00:23:35,580
changed the bunch of ducks with the

00:23:33,660 --> 00:23:37,050
clear text leaks of PTK rekeying because

00:23:35,580 --> 00:23:39,480
we can never really worked everybody

00:23:37,050 --> 00:23:42,720
ignored this i think so we have finally

00:23:39,480 --> 00:23:43,830
fixed this to a level where the hard the

00:23:42,720 --> 00:23:45,900
halfway has to be clear if they support

00:23:43,830 --> 00:23:49,410
this properly or not and we can work

00:23:45,900 --> 00:23:51,210
around this if needed for the simulator

00:23:49,410 --> 00:23:54,900
HW sim we actually put a lot of extra

00:23:51,210 --> 00:23:57,630
work in making that more usable so you

00:23:54,900 --> 00:23:59,580
have any more end to end testing I think

00:23:57,630 --> 00:24:00,810
besides one or two minor patches that

00:23:59,580 --> 00:24:04,260
are still on the pipe and all of this

00:24:00,810 --> 00:24:05,340
one has been our app streamed so if you

00:24:04,260 --> 00:24:09,450
have a recent kernel you actually have

00:24:05,340 --> 00:24:11,490
all these fixes um one thing that we had

00:24:09,450 --> 00:24:12,600
to do I nobody did before is kind of

00:24:11,490 --> 00:24:14,280
funny we actually wanted to see what's

00:24:12,600 --> 00:24:16,260
going on between the demon and the

00:24:14,280 --> 00:24:18,150
kernel and for that one we build iw1

00:24:16,260 --> 00:24:20,380
it's a tracing utility that actually

00:24:18,150 --> 00:24:22,300
takes the input from the

00:24:20,380 --> 00:24:23,980
link and AF packet and the dick just

00:24:22,300 --> 00:24:26,530
decodes it so you don't have to put your

00:24:23,980 --> 00:24:27,700
debugging into iwd or tracing you just

00:24:26,530 --> 00:24:28,960
take it from the kernel say look what

00:24:27,700 --> 00:24:30,670
packets are you actually exchanging and

00:24:28,960 --> 00:24:32,500
the fun thing you can figure out some

00:24:30,670 --> 00:24:34,690
things actually went wrong so W so we

00:24:32,500 --> 00:24:36,850
can sense a message like the currency is

00:24:34,690 --> 00:24:38,590
not supported or key is not available

00:24:36,850 --> 00:24:40,120
and keep sending it he's not available

00:24:38,590 --> 00:24:41,200
look I told you the keys not available

00:24:40,120 --> 00:24:42,730
you keep selling this to me and these

00:24:41,200 --> 00:24:44,650
kind of things and you then easily see

00:24:42,730 --> 00:24:49,510
where things go wrong and where things

00:24:44,650 --> 00:24:50,980
are missing so what we have right now is

00:24:49,510 --> 00:24:54,010
station mode access point mode in ad-hoc

00:24:50,980 --> 00:24:55,990
mode but we also actually put all the

00:24:54,010 --> 00:24:57,340
SSID grouping one level down so network

00:24:55,990 --> 00:24:59,530
- have to do it anymore we actually do

00:24:57,340 --> 00:25:01,690
this all for it we handle the hidden IDs

00:24:59,530 --> 00:25:03,970
we handle the full four Way handshake

00:25:01,690 --> 00:25:06,100
properly we do pre authentication if

00:25:03,970 --> 00:25:08,050
available we do it fast transitioning so

00:25:06,100 --> 00:25:09,340
really we ask the access point do you

00:25:08,050 --> 00:25:10,750
want us to go to a different access

00:25:09,340 --> 00:25:12,340
point do you have a neighbor access

00:25:10,750 --> 00:25:13,180
point and we just switched to it it

00:25:12,340 --> 00:25:14,950
tells us where it is

00:25:13,180 --> 00:25:16,990
it's so fast it's unbelievable it's

00:25:14,950 --> 00:25:18,910
really nice we managed the radio sources

00:25:16,990 --> 00:25:20,470
properly and we also authenticated with

00:25:18,910 --> 00:25:22,330
access points like did you really want

00:25:20,470 --> 00:25:23,680
to disconnect us so can you confirm that

00:25:22,330 --> 00:25:26,020
you want to disconnect us so you can't

00:25:23,680 --> 00:25:28,800
actually have any things sneaking in and

00:25:26,020 --> 00:25:31,600
trying to force really disconnect you

00:25:28,800 --> 00:25:33,100
the enterprise support is growing so we

00:25:31,600 --> 00:25:36,310
have this really nicely working the app

00:25:33,100 --> 00:25:37,810
methods are there we have most EF

00:25:36,310 --> 00:25:39,520
methods there are few ones missing few

00:25:37,810 --> 00:25:42,760
proprietary ones but pretty much

00:25:39,520 --> 00:25:44,680
everybody uses e up TLS or you RP up so

00:25:42,760 --> 00:25:46,150
all of this one is there also this one

00:25:44,680 --> 00:25:48,370
is tested they oliver end-to-end tests

00:25:46,150 --> 00:25:51,220
they all had unit tests so this is

00:25:48,370 --> 00:25:53,530
pretty much working nicely the only

00:25:51,220 --> 00:25:55,720
minor caveat is that the automatic keep

00:25:53,530 --> 00:25:57,670
patches that we need to do this and not

00:25:55,720 --> 00:25:59,650
yet upstream James Morris took them into

00:25:57,670 --> 00:26:00,940
the security tree so hopefully they make

00:25:59,650 --> 00:26:02,560
it into four point twenty five point

00:26:00,940 --> 00:26:04,030
zero once James is back from the

00:26:02,560 --> 00:26:06,520
conference and sense of pull request to

00:26:04,030 --> 00:26:07,720
linguist the interesting part with these

00:26:06,520 --> 00:26:08,860
ones are since in the kernel they

00:26:07,720 --> 00:26:12,280
integrate with the TPM

00:26:08,860 --> 00:26:14,740
so you can actually have your set up in

00:26:12,280 --> 00:26:16,120
a way that your key that the company

00:26:14,740 --> 00:26:18,430
provisions for you is actually in your

00:26:16,120 --> 00:26:22,630
TPM so it's a security that you really

00:26:18,430 --> 00:26:24,190
want because if someone the keys and

00:26:22,630 --> 00:26:25,570
everything else is really not on your

00:26:24,190 --> 00:26:27,520
system you know they in your heart when

00:26:25,570 --> 00:26:30,580
you can really utilize them I'm trying

00:26:27,520 --> 00:26:32,080
to get this working with OpenSSL new TLS

00:26:30,580 --> 00:26:33,760
and all these engine support and

00:26:32,080 --> 00:26:35,860
trousers and God knows what dates you

00:26:33,760 --> 00:26:38,200
do there it's really messy we have this

00:26:35,860 --> 00:26:39,190
in it's in there 40 PM 1 and I think

00:26:38,200 --> 00:26:40,900
that hopefully we get this in there's

00:26:39,190 --> 00:26:42,520
also a TPM too so we actually have this

00:26:40,900 --> 00:26:44,340
nicely working with a key control API

00:26:42,520 --> 00:26:49,360
and you can actually access the TPM

00:26:44,340 --> 00:26:53,320
properly and then WPI WD can just make

00:26:49,360 --> 00:26:54,940
use of it if it's available if you as I

00:26:53,320 --> 00:26:58,270
said we don't actually have api's for

00:26:54,940 --> 00:27:01,660
the enterprise we do Enterprise

00:26:58,270 --> 00:27:03,550
provisioning on based on a file doing

00:27:01,660 --> 00:27:05,260
this with this whole UI setup it will

00:27:03,550 --> 00:27:07,540
probably stay around for a long time and

00:27:05,260 --> 00:27:09,910
we network manager plugin for iwe will

00:27:07,540 --> 00:27:11,910
work around this but our vision is that

00:27:09,910 --> 00:27:14,260
we actually get a simple file from the

00:27:11,910 --> 00:27:17,170
administrator or something you can

00:27:14,260 --> 00:27:19,390
download easily that is also signed away

00:27:17,170 --> 00:27:20,530
your chip or your certificates in there

00:27:19,390 --> 00:27:23,110
and listed and then you actually just

00:27:20,530 --> 00:27:24,300
put it in iwe recognizes it and then

00:27:23,110 --> 00:27:26,710
your network is available immediately

00:27:24,300 --> 00:27:28,690
doing this all with the UI setup it's

00:27:26,710 --> 00:27:30,370
really complicated and the idea of that

00:27:28,690 --> 00:27:32,170
you oh I want to check exchange this one

00:27:30,370 --> 00:27:34,240
certificate to another one but I want to

00:27:32,170 --> 00:27:36,460
keep every other options the same that's

00:27:34,240 --> 00:27:38,410
not really how this works I mean if your

00:27:36,460 --> 00:27:40,390
certificate is expired most case you

00:27:38,410 --> 00:27:41,740
have to also change the CA for this one

00:27:40,390 --> 00:27:43,720
or the interim CA that they have for

00:27:41,740 --> 00:27:46,600
this one or maybe the identity changed

00:27:43,720 --> 00:27:47,890
of something else this is something you

00:27:46,600 --> 00:27:49,990
make mistakes fine you want to correct

00:27:47,890 --> 00:27:53,170
them in the UI but in reality the admin

00:27:49,990 --> 00:27:54,760
or the company setup system have to

00:27:53,170 --> 00:27:56,260
actually give this information so it's

00:27:54,760 --> 00:27:58,390
pretty much as simple as this you get it

00:27:56,260 --> 00:27:59,290
small any file and you put this in and

00:27:58,390 --> 00:28:01,450
then you can actually effects two

00:27:59,290 --> 00:28:03,070
options if you leave something out or

00:28:01,450 --> 00:28:05,350
the company decides to leave something

00:28:03,070 --> 00:28:07,090
out we will ask the user for it for

00:28:05,350 --> 00:28:08,860
example the the passphrase for the

00:28:07,090 --> 00:28:10,030
private key that will just ask them the

00:28:08,860 --> 00:28:11,440
EULA if you put it in there it will be

00:28:10,030 --> 00:28:12,430
used and so on and so forth for example

00:28:11,440 --> 00:28:15,900
if the identity is missing or anything

00:28:12,430 --> 00:28:18,880
else they follow pretty much what the

00:28:15,900 --> 00:28:20,470
standard does that's all documented and

00:28:18,880 --> 00:28:22,120
we have tons of examples on this one um

00:28:20,470 --> 00:28:26,020
but I think that's how this has to

00:28:22,120 --> 00:28:28,090
happen for the user facing API so what

00:28:26,020 --> 00:28:31,300
the UI can actually use it actually is

00:28:28,090 --> 00:28:33,370
also pretty simple this is the comb

00:28:31,300 --> 00:28:34,630
artist for the iw control utility it's

00:28:33,370 --> 00:28:36,460
pretty much one-to-one mapping to the

00:28:34,630 --> 00:28:38,320
deepest api's so you get your list of

00:28:36,460 --> 00:28:40,570
adapters that's your physical cards that

00:28:38,320 --> 00:28:42,040
in the system you can list them it's not

00:28:40,570 --> 00:28:43,840
really much useful except you can get

00:28:42,040 --> 00:28:45,310
the name because we use the the UDF

00:28:43,840 --> 00:28:46,149
database to actually match the you IDs

00:28:45,310 --> 00:28:47,919
to the name so you get some

00:28:46,149 --> 00:28:49,929
friendly name on this one you can either

00:28:47,919 --> 00:28:52,239
start in a hotter Network or see if your

00:28:49,929 --> 00:28:53,379
it's already started and working if you

00:28:52,239 --> 00:28:54,669
want to use that hot network as that

00:28:53,379 --> 00:28:57,699
this is more like was an exercise in

00:28:54,669 --> 00:28:59,409
getting the cryptography done properly

00:28:57,699 --> 00:29:00,909
oh access points more interesting you

00:28:59,409 --> 00:29:02,769
want to start your car as access point I

00:29:00,909 --> 00:29:05,469
start or stop it that's all you want to

00:29:02,769 --> 00:29:07,749
do we don't support unencrypted open

00:29:05,469 --> 00:29:10,989
network access point I think this pretty

00:29:07,749 --> 00:29:12,279
much useful when it comes to actually

00:29:10,989 --> 00:29:14,229
station mode this becomes more

00:29:12,279 --> 00:29:17,529
interesting so you have the devices API

00:29:14,229 --> 00:29:18,639
that is really your interface so you can

00:29:17,529 --> 00:29:20,199
list them and you can change properties

00:29:18,639 --> 00:29:23,279
on them one property would be the mode

00:29:20,199 --> 00:29:25,479
change the hot mode access point mode or

00:29:23,279 --> 00:29:27,659
station mode by default they come out

00:29:25,479 --> 00:29:30,069
and station mode like it is with Linux

00:29:27,659 --> 00:29:31,509
with your station command you can just

00:29:30,069 --> 00:29:33,339
list your stations and then you see what

00:29:31,509 --> 00:29:35,349
station is going to have and then you

00:29:33,339 --> 00:29:36,189
can just connect to network or you can

00:29:35,349 --> 00:29:38,109
connect to hidden one

00:29:36,189 --> 00:29:39,999
so we explicitly separated connect to

00:29:38,109 --> 00:29:41,559
network from a connect to a network

00:29:39,999 --> 00:29:43,929
because the couldn't connect to a

00:29:41,559 --> 00:29:46,089
network needs special operations and so

00:29:43,929 --> 00:29:48,339
this is clearly separated but the only

00:29:46,089 --> 00:29:49,749
thing you really have to give it is the

00:29:48,339 --> 00:29:52,539
network name it will figure out

00:29:49,749 --> 00:29:54,819
everything else by itself so someone

00:29:52,539 --> 00:29:56,439
says you know my SSID XYZ then you do my

00:29:54,819 --> 00:29:59,199
is XYZ and if it's encrypted then we'll

00:29:56,439 --> 00:30:02,229
ask you ok I found your network no here

00:29:59,199 --> 00:30:03,939
it's WPA encrypted I need a password so

00:30:02,229 --> 00:30:04,809
they use I get asked a passphrase you

00:30:03,939 --> 00:30:06,419
can disconnect it

00:30:04,809 --> 00:30:09,279
then it gets off the auto connect list

00:30:06,419 --> 00:30:11,049
or you can actually just scan for it and

00:30:09,279 --> 00:30:12,999
then you get the list of networks and I

00:30:11,049 --> 00:30:15,129
will just give you the information um

00:30:12,999 --> 00:30:16,449
that's all you're gonna have from an API

00:30:15,129 --> 00:30:17,619
when you achieve so it's not what

00:30:16,449 --> 00:30:19,389
network when I use to connect your

00:30:17,619 --> 00:30:20,679
networks the other one is the known

00:30:19,389 --> 00:30:22,539
networks the networks that we actually

00:30:20,679 --> 00:30:23,109
remember you can list them and you can

00:30:22,539 --> 00:30:24,759
forget them

00:30:23,109 --> 00:30:25,689
if you accidentally connect it to one

00:30:24,759 --> 00:30:27,309
what you're gonna forget you get

00:30:25,689 --> 00:30:28,509
automatic disconnect so it's not like

00:30:27,309 --> 00:30:30,699
you have to disconnect to us and forget

00:30:28,509 --> 00:30:33,069
we do this for you and then you have

00:30:30,699 --> 00:30:35,619
your automatic Wi-Fi configuration it's

00:30:33,069 --> 00:30:37,059
pretty much it's available fine and then

00:30:35,619 --> 00:30:38,439
you can figure out if you wanna do push

00:30:37,059 --> 00:30:40,809
button which the most what most people

00:30:38,439 --> 00:30:42,279
do or if the access point provides a pin

00:30:40,809 --> 00:30:44,439
then you actually start or use the pin

00:30:42,279 --> 00:30:47,199
or generator pin and if you feel like a

00:30:44,439 --> 00:30:51,369
by the reason to go anywhere you just

00:30:47,199 --> 00:30:53,289
cancel it all the way through okay um I

00:30:51,369 --> 00:30:54,489
think I'm gonna move the demo to the end

00:30:53,289 --> 00:30:56,319
since it's more interesting what's

00:30:54,489 --> 00:30:58,509
coming next so we have a list of

00:30:56,319 --> 00:30:59,860
technical things that are missing none

00:30:58,509 --> 00:31:02,490
of these ones will probably stop us from

00:30:59,860 --> 00:31:04,600
doing 1.0 release by the end of the year

00:31:02,490 --> 00:31:05,890
but there are few things that needs to

00:31:04,600 --> 00:31:07,540
be done there

00:31:05,890 --> 00:31:08,950
there's fun little group ciphers and

00:31:07,540 --> 00:31:10,960
pairwise ciphers we actually want to fix

00:31:08,950 --> 00:31:13,929
that we want to do a lot of the key

00:31:10,960 --> 00:31:16,540
caching that has to happen the GDLs

00:31:13,929 --> 00:31:17,830
support and DLS support I don't know if

00:31:16,540 --> 00:31:20,020
you get the p2p set up we actually

00:31:17,830 --> 00:31:21,880
probably gonna do this more interesting

00:31:20,020 --> 00:31:23,530
is the open istic wireless encryption

00:31:21,880 --> 00:31:24,970
that's pretty much if you have an open

00:31:23,530 --> 00:31:27,100
networking the access point support it

00:31:24,970 --> 00:31:28,630
you don't get any authentication but you

00:31:27,100 --> 00:31:30,040
can encrypt it so you can connection

00:31:28,630 --> 00:31:32,290
open network and the link is encrypted

00:31:30,040 --> 00:31:33,220
so nobody can sniff it but you actually

00:31:32,290 --> 00:31:34,960
don't have any man-in-the-middle

00:31:33,220 --> 00:31:39,040
protection so I think that's a big

00:31:34,960 --> 00:31:41,020
advantage the Wi-Fi the zero come setup

00:31:39,040 --> 00:31:42,309
for simple configuration has a new

00:31:41,020 --> 00:31:45,400
version now it's called device

00:31:42,309 --> 00:31:46,960
provisioning protocol DPP I don't think

00:31:45,400 --> 00:31:48,429
we get this done for 1.0 but I think

00:31:46,960 --> 00:31:49,630
this follow really quickly afterwards we

00:31:48,429 --> 00:31:55,480
actually also have support on this one

00:31:49,630 --> 00:31:59,080
and then a p2p is it's interesting we

00:31:55,480 --> 00:32:00,370
have I think 60% of the setup done but

00:31:59,080 --> 00:32:01,840
there's a couple of things still missing

00:32:00,370 --> 00:32:03,220
we need to do so I think this will have

00:32:01,840 --> 00:32:05,919
to wait on the wave yeah we are done

00:32:03,220 --> 00:32:08,049
with 1.0 and there's a couple of yep

00:32:05,919 --> 00:32:10,240
methods I don't think we actually gonna

00:32:08,049 --> 00:32:13,870
do them but maybe someone else wants to

00:32:10,240 --> 00:32:14,890
put them in we have to see them but as I

00:32:13,870 --> 00:32:18,429
said nothing of this one is really

00:32:14,890 --> 00:32:20,470
stopping us from doing a 1.0 we have two

00:32:18,429 --> 00:32:22,270
big to-do items to actually get sorted

00:32:20,470 --> 00:32:24,040
out and one is the actually embedded

00:32:22,270 --> 00:32:27,370
Linux API review so we are happy with

00:32:24,040 --> 00:32:29,590
that API so we can do a ll 1.0 is at the

00:32:27,370 --> 00:32:32,080
same time you do an iwd 1.0 release and

00:32:29,590 --> 00:32:34,240
then we want to have another review of

00:32:32,080 --> 00:32:36,520
the iw Divas API is because once we

00:32:34,240 --> 00:32:38,020
declare them stable network manager is

00:32:36,520 --> 00:32:39,610
really relying on this one we make

00:32:38,020 --> 00:32:40,960
everybody else rely on this one so we

00:32:39,610 --> 00:32:43,179
can't really easily break them any more

00:32:40,960 --> 00:32:47,669
so that's the next two big things that

00:32:43,179 --> 00:32:51,309
has to happen before we call this 1.0

00:32:47,669 --> 00:32:52,840
there's one other thing that we have

00:32:51,309 --> 00:32:56,650
been working on I think I mentioned this

00:32:52,840 --> 00:32:58,960
earlier we also want to do this for the

00:32:56,650 --> 00:33:00,970
Ethernet so while other which ideally is

00:32:58,960 --> 00:33:02,500
primarily focused on Wi-Fi in a

00:33:00,970 --> 00:33:03,880
corporate setup I think more and more

00:33:02,500 --> 00:33:06,429
corporations locking down the ethernet

00:33:03,880 --> 00:33:08,530
ports and where you end up I borrowed

00:33:06,429 --> 00:33:09,410
this from Cisco was the only nice

00:33:08,530 --> 00:33:11,450
diagram that I could

00:33:09,410 --> 00:33:12,800
about this that is not too technical is

00:33:11,450 --> 00:33:15,290
that you actually have to authenticate

00:33:12,800 --> 00:33:16,970
first why are the ERP fell or polyphen

00:33:15,290 --> 00:33:19,880
airport and then everything else is

00:33:16,970 --> 00:33:23,060
opened up it's really simple system it

00:33:19,880 --> 00:33:24,350
can do a lot more but that's pretty much

00:33:23,060 --> 00:33:25,400
what most companies are doing okay these

00:33:24,350 --> 00:33:27,920
are net port is blocked here to

00:33:25,400 --> 00:33:29,420
authenticate yourself and go on the

00:33:27,920 --> 00:33:34,490
interesting thing is it's pretty much

00:33:29,420 --> 00:33:37,160
just yeah but if you actually use w

00:33:34,490 --> 00:33:39,950
silicon to do this it turns your

00:33:37,160 --> 00:33:42,020
ethernet card into a fake access point

00:33:39,950 --> 00:33:43,460
and then runs from station mode so you

00:33:42,020 --> 00:33:45,080
get all of these log messages all these

00:33:43,460 --> 00:33:48,620
weird stuff and nothing really you can

00:33:45,080 --> 00:33:49,880
decipher anything goes wrong in addition

00:33:48,620 --> 00:33:51,830
you have to always start it manually so

00:33:49,880 --> 00:33:55,880
there's no automatic thing that actually

00:33:51,830 --> 00:34:00,980
text is listen yep enabled or 802 1x

00:33:55,880 --> 00:34:02,450
enabled Ethernet port so we had EAD foot

00:34:00,980 --> 00:34:04,580
Ethernet authentication daemon you

00:34:02,450 --> 00:34:07,850
realize I like three-letter acronyms

00:34:04,580 --> 00:34:09,200
that kind of nice as a process name it's

00:34:07,850 --> 00:34:12,620
a single demon that in writes all your

00:34:09,200 --> 00:34:14,480
Ethernet cards and does outer detection

00:34:12,620 --> 00:34:16,310
of 1x on that one so it figures out okay

00:34:14,480 --> 00:34:18,230
do I need to run 1x yes or no and then

00:34:16,310 --> 00:34:20,380
with the neighborhood I use the same AF

00:34:18,230 --> 00:34:22,370
structure from iw so that code is shared

00:34:20,380 --> 00:34:24,320
again with that one it will integrate

00:34:22,370 --> 00:34:27,500
with TPMS well if you have that set up

00:34:24,320 --> 00:34:28,669
it's super tiny and lightweight what's

00:34:27,500 --> 00:34:30,110
currently working process getting the

00:34:28,669 --> 00:34:31,790
agent interface ready so if you're

00:34:30,110 --> 00:34:34,640
missing credential parts like identity

00:34:31,790 --> 00:34:36,110
etc the user just gets a squared on we

00:34:34,640 --> 00:34:38,330
need an additional one as well because

00:34:36,110 --> 00:34:40,220
most networks don't identify themselves

00:34:38,330 --> 00:34:41,150
so you have multiple credentials say you

00:34:40,220 --> 00:34:42,260
have credentials for Google you of

00:34:41,150 --> 00:34:44,320
credentials for angel the air shows they

00:34:42,260 --> 00:34:46,520
actually decide ok which ones are these

00:34:44,320 --> 00:34:47,780
funny enough most of the reports don't

00:34:46,520 --> 00:34:49,550
actually identify themselves so you

00:34:47,780 --> 00:34:50,960
actually have to guess I'd obviously

00:34:49,550 --> 00:34:52,370
don't want to apply all credentials so

00:34:50,960 --> 00:34:54,500
we don't want to reveal that actually

00:34:52,370 --> 00:34:56,419
support one or the other and it gets

00:34:54,500 --> 00:34:58,550
really buzzed simple diva's api so that

00:34:56,419 --> 00:34:59,900
you actually can see all i mana ethernet

00:34:58,550 --> 00:35:02,630
card that authentication also and

00:34:59,900 --> 00:35:05,750
everything else the initial versions all

00:35:02,630 --> 00:35:07,700
right part of of iwd for simplicity for

00:35:05,750 --> 00:35:09,980
now we stuck it into the iwd source code

00:35:07,700 --> 00:35:13,070
it has configure option so you can just

00:35:09,980 --> 00:35:15,950
only build iwd with only shipping Eid

00:35:13,070 --> 00:35:18,140
it's all documented for the auto kind of

00:35:15,950 --> 00:35:20,270
stuff and with this one you can then

00:35:18,140 --> 00:35:21,630
easily start testing this audio

00:35:20,270 --> 00:35:23,190
corporate network and you actually

00:35:21,630 --> 00:35:24,509
some problem and actually I really like

00:35:23,190 --> 00:35:25,740
to get feedback on this one where this

00:35:24,509 --> 00:35:28,170
works on a corporate network or not

00:35:25,740 --> 00:35:30,019
because we had a lot of fun with our own

00:35:28,170 --> 00:35:32,009
corporate network where certain things

00:35:30,019 --> 00:35:33,630
are working a little bit differently

00:35:32,009 --> 00:35:35,849
that you would expect when you break the

00:35:33,630 --> 00:35:37,829
standard but we actually have this

00:35:35,849 --> 00:35:42,119
nicely working and we can use this to

00:35:37,829 --> 00:35:44,029
authenticate or Ethernet ports since I'm

00:35:42,119 --> 00:35:47,369
probably only five minutes I've left

00:35:44,029 --> 00:35:49,170
free note is C for IWD free not IC 4 e

00:35:47,369 --> 00:35:53,220
ll that's where most communication

00:35:49,170 --> 00:35:54,150
happens the mailing list is I should

00:35:53,220 --> 00:35:57,119
have put them in this as well the

00:35:54,150 --> 00:35:59,609
maining lists are they as well IWD has a

00:35:57,119 --> 00:36:01,349
kernel wiki happy to if anybody wants to

00:35:59,609 --> 00:36:03,089
actually document this or put any

00:36:01,349 --> 00:36:04,950
information in there there's a bunch of

00:36:03,089 --> 00:36:06,539
wiki's for the different discos I think

00:36:04,950 --> 00:36:10,589
the arch wiki for identity is pretty

00:36:06,539 --> 00:36:12,059
good if you wanna get started and the

00:36:10,589 --> 00:36:13,380
get trees have the most information and

00:36:12,059 --> 00:36:15,930
documentation in them as well so it's

00:36:13,380 --> 00:36:17,430
easy to browse I was going to do the

00:36:15,930 --> 00:36:22,650
demo but I'm probably opening cell first

00:36:17,430 --> 00:36:24,890
for questions if any questions I yes

00:36:22,650 --> 00:36:24,890
please

00:36:28,240 --> 00:36:34,250
so the question is if we have plans to

00:36:31,010 --> 00:36:36,829
extend to a funicular yes not any

00:36:34,250 --> 00:36:38,569
immediate time we have a bunch of things

00:36:36,829 --> 00:36:40,069
to do first but yes we also want to do

00:36:38,569 --> 00:36:44,599
the other side so we action also do a

00:36:40,069 --> 00:36:46,750
nexus point I think you know there was

00:36:44,599 --> 00:36:46,750
one

00:37:08,580 --> 00:37:14,680
so the question is if this would become

00:37:10,960 --> 00:37:17,620
the central point for the configuration

00:37:14,680 --> 00:37:19,870
of Ethernet so ideally we'll only manage

00:37:17,620 --> 00:37:23,080
Wi-Fi cards EAD will only manage

00:37:19,870 --> 00:37:25,030
Internet cards they will manage these

00:37:23,080 --> 00:37:27,310
cards separately but then what you're

00:37:25,030 --> 00:37:28,720
going to do with them is up to one

00:37:27,310 --> 00:37:32,200
layout so if you want to do any routing

00:37:28,720 --> 00:37:33,760
on that one etc I have to say our plan

00:37:32,200 --> 00:37:36,070
is actually to put DHCP into these

00:37:33,760 --> 00:37:37,600
demons so do all the IP confirmation

00:37:36,070 --> 00:37:39,580
inside the demons as an optional part

00:37:37,600 --> 00:37:42,040
that is actually needed in a certain

00:37:39,580 --> 00:37:43,600
situations because for Wi-Fi that's

00:37:42,040 --> 00:37:45,670
needed for example the Tokyo subway

00:37:43,600 --> 00:37:48,040
situation the train comes into the

00:37:45,670 --> 00:37:49,270
subway you have like a round the second

00:37:48,040 --> 00:37:51,700
or two checks you get your network up

00:37:49,270 --> 00:37:53,410
get your data you can't wait until some

00:37:51,700 --> 00:37:55,810
other system actually configures you

00:37:53,410 --> 00:37:56,920
select Wi-Fi as the default and so on so

00:37:55,810 --> 00:37:58,330
forth we actually need to get this all

00:37:56,920 --> 00:37:59,590
done and you get the IP addresses of our

00:37:58,330 --> 00:38:01,480
management frames from your Wi-Fi access

00:37:59,590 --> 00:38:03,340
point so you need to actually do the

00:38:01,480 --> 00:38:04,720
whole set of all by yourself um that's

00:38:03,340 --> 00:38:06,640
something we're still working on to

00:38:04,720 --> 00:38:08,440
actually separate this nicely but then

00:38:06,640 --> 00:38:10,360
oh do you want to Road over Wi-Fi or you

00:38:08,440 --> 00:38:12,310
run out over Ethernet that's for someone

00:38:10,360 --> 00:38:13,990
else to figure out we just want to make

00:38:12,310 --> 00:38:16,180
the port available and trigger the

00:38:13,990 --> 00:38:18,610
authentication or your education hope

00:38:16,180 --> 00:38:24,220
that answers your question are they I

00:38:18,610 --> 00:38:26,080
think No

00:38:24,220 --> 00:38:30,850
so the questions of can iwd be use

00:38:26,080 --> 00:38:32,080
without give us the answers no okay at

00:38:30,850 --> 00:38:34,570
some point you have to be realistic how

00:38:32,080 --> 00:38:36,010
the world looks like right now the bus

00:38:34,570 --> 00:38:37,750
is not that bad we're shipping our own

00:38:36,010 --> 00:38:40,180
d-bus library don't use the default

00:38:37,750 --> 00:38:41,560
implementation some guys from retina

00:38:40,180 --> 00:38:43,240
we're working on D bus broker that is a

00:38:41,560 --> 00:38:45,750
lot slimmer and Tonya

00:38:43,240 --> 00:38:48,130
I mean build your own IPC or use D bus

00:38:45,750 --> 00:38:48,520
yes you could and you can probably

00:38:48,130 --> 00:38:50,230
change

00:38:48,520 --> 00:38:51,160
ìwe to actually expect this out because

00:38:50,230 --> 00:38:54,580
there's not really that complicated

00:38:51,160 --> 00:38:55,750
there's not that much API but we have to

00:38:54,580 --> 00:38:56,980
make a choice at some point you have to

00:38:55,750 --> 00:38:59,020
say okay we have to use D bus for this

00:38:56,980 --> 00:39:00,130
one I would rather look at optimizing d

00:38:59,020 --> 00:39:04,910
bus than actually trying to figure out

00:39:00,130 --> 00:39:19,250
to get divas out of ywd yes please

00:39:04,910 --> 00:39:21,050
oh yeah so the question is this is a

00:39:19,250 --> 00:39:25,400
full access point mode at this point in

00:39:21,050 --> 00:39:27,530
time no we will get there because we the

00:39:25,400 --> 00:39:30,830
reality is we see that we also need to

00:39:27,530 --> 00:39:32,210
do something for the routers and a real

00:39:30,830 --> 00:39:36,470
access points are homes therefore some

00:39:32,210 --> 00:39:37,880
replacement they cost many of the router

00:39:36,470 --> 00:39:39,650
manufacturers actually using W

00:39:37,880 --> 00:39:43,040
supplicant have tons and tons of

00:39:39,650 --> 00:39:44,960
problems we are not there yet the team

00:39:43,040 --> 00:39:46,280
is like five people so we have to set

00:39:44,960 --> 00:39:48,020
the priorities but the plan is to

00:39:46,280 --> 00:39:49,460
actually get this whole thing set up

00:39:48,020 --> 00:39:50,450
properly because if you on the access

00:39:49,460 --> 00:39:52,370
point and you actually really good

00:39:50,450 --> 00:39:53,750
access point you can do a lot of things

00:39:52,370 --> 00:39:55,430
by stealing your clients into the right

00:39:53,750 --> 00:39:59,240
direction optimizing your bandwidth on

00:39:55,430 --> 00:40:02,450
your network we need to do this it will

00:39:59,240 --> 00:40:04,900
happen but not this year there's another

00:40:02,450 --> 00:40:04,900
one over there

00:40:06,280 --> 00:40:11,360
it can't be used as replacement for say

00:40:08,750 --> 00:40:12,890
PD right now it will eventually it's a

00:40:11,360 --> 00:40:14,600
personal access point like tethering for

00:40:12,890 --> 00:40:15,950
example you switch for example you have

00:40:14,600 --> 00:40:23,060
an Ethernet connection or on your phone

00:40:15,950 --> 00:40:24,410
to shared with I don't know this for

00:40:23,060 --> 00:40:31,250
sure but I heard someone actually did it

00:40:24,410 --> 00:40:39,770
on it so I hope so another question oh

00:40:31,250 --> 00:40:42,320
yeah I think you were first have you

00:40:39,770 --> 00:40:46,940
looked at supporting the mesh the Wi-Fi

00:40:42,320 --> 00:40:48,980
mesh um oh one s11 s mesh um we don't

00:40:46,940 --> 00:40:50,210
have this on the roadmap for this year

00:40:48,980 --> 00:40:53,510
but I had a discussion with someone

00:40:50,210 --> 00:40:55,340
about a month ago I think we need to do

00:40:53,510 --> 00:40:58,580
this as well contributions are more than

00:40:55,340 --> 00:41:00,980
welcome we can't do this right now it's

00:40:58,580 --> 00:41:02,690
completely possible to do this really

00:41:00,980 --> 00:41:05,330
quickly because I think all the crypto

00:41:02,690 --> 00:41:06,980
because we did WP 3d sae parts all the

00:41:05,330 --> 00:41:09,500
crypto support should be already in

00:41:06,980 --> 00:41:11,420
there finding this so I think you just

00:41:09,500 --> 00:41:13,610
need to actually manage the mesh nodes

00:41:11,420 --> 00:41:16,190
so contributions are welcome

00:41:13,610 --> 00:41:18,550
not this year sorry there was another

00:41:16,190 --> 00:41:18,550
one there

00:41:22,610 --> 00:41:25,790
so the the question is what what

00:41:24,680 --> 00:41:28,400
interface we're gonna use to access the

00:41:25,790 --> 00:41:30,380
crypto so is a of alch so you can access

00:41:28,400 --> 00:41:32,900
to the ciphers and hashes etc pretty

00:41:30,380 --> 00:41:35,270
simple so if they're happy optimized he

00:41:32,900 --> 00:41:36,620
will use the hardware we don't do that

00:41:35,270 --> 00:41:38,810
much that really makes a performance

00:41:36,620 --> 00:41:41,030
difference for the astrometric crypto we

00:41:38,810 --> 00:41:43,280
use key control the key console you

00:41:41,030 --> 00:41:44,830
actually the key control kernel

00:41:43,280 --> 00:41:47,870
subsystem actually allows you to build

00:41:44,830 --> 00:41:51,320
complete key rings and it allows to use

00:41:47,870 --> 00:41:53,060
a symmetric certificates so you can

00:41:51,320 --> 00:41:55,190
actually build your whole CA inside the

00:41:53,060 --> 00:41:56,780
kernel and then their provision that key

00:41:55,190 --> 00:41:58,610
rings actually only allow extension of

00:41:56,780 --> 00:42:00,350
the key rings if you are belly date

00:41:58,610 --> 00:42:01,760
against an existing one so this is whole

00:42:00,350 --> 00:42:04,430
build and then you have operations for

00:42:01,760 --> 00:42:06,830
assign verify encrypt and decrypt and

00:42:04,430 --> 00:42:09,140
then the kernel will decide if this is a

00:42:06,830 --> 00:42:10,760
certificate that is in a TPM or not in a

00:42:09,140 --> 00:42:12,590
TPM or if you have to load it before I

00:42:10,760 --> 00:42:19,490
said Rock so it's pretty much a CA

00:42:12,590 --> 00:42:22,120
inside the kernel any other questions

00:42:19,490 --> 00:42:22,120
please

00:42:23,320 --> 00:42:30,470
yes we have so system e network the

00:42:26,600 --> 00:42:31,970
integration first of all we're just

00:42:30,470 --> 00:42:33,710
gonna work because it will eventually

00:42:31,970 --> 00:42:35,450
signal the interfaces up and if you've

00:42:33,710 --> 00:42:37,640
configured it it will just start HCP and

00:42:35,450 --> 00:42:39,470
it will just run there's a little bit of

00:42:37,640 --> 00:42:40,940
caveat on this one when you actually

00:42:39,470 --> 00:42:44,390
want to have your favorite network name

00:42:40,940 --> 00:42:45,980
and the kernel decided that's wlan0 but

00:42:44,390 --> 00:42:48,560
you like the really weird naming or

00:42:45,980 --> 00:42:50,420
someone else we are faster than you def

00:42:48,560 --> 00:42:53,150
can rename it and then you get blocked

00:42:50,420 --> 00:42:54,710
so when I W start wearing the interfaces

00:42:53,150 --> 00:42:57,700
up and interface up that is up cannot

00:42:54,710 --> 00:43:01,400
renamed anymore so that kind of thing is

00:42:57,700 --> 00:43:03,710
bonkers I don't know how to fix it we

00:43:01,400 --> 00:43:05,270
looked at in to fix it I have no idea so

00:43:03,710 --> 00:43:06,950
you don't get your fancy shiny network

00:43:05,270 --> 00:43:09,920
names if the system network wants rename

00:43:06,950 --> 00:43:12,290
your link but otherwise it just works it

00:43:09,920 --> 00:43:13,850
could do more if we would finally agree

00:43:12,290 --> 00:43:16,280
on some extensions where we actually for

00:43:13,850 --> 00:43:18,440
example can annotate the system a

00:43:16,280 --> 00:43:21,050
network T config files with the SSID so

00:43:18,440 --> 00:43:22,580
say look we wanna run this DHCP ipv6

00:43:21,050 --> 00:43:24,320
only on this SSID on the other one

00:43:22,580 --> 00:43:25,760
currently I assess minerally is unaware

00:43:24,320 --> 00:43:27,320
of what never you're connected to them

00:43:25,760 --> 00:43:29,300
for that one they have to learn the

00:43:27,320 --> 00:43:31,550
annotated I had couple proposals to

00:43:29,300 --> 00:43:32,750
Leonard and the others but it kind of

00:43:31,550 --> 00:43:34,100
calmed down on this one they didn't want

00:43:32,750 --> 00:43:35,900
to do this sort of we need to annotate

00:43:34,100 --> 00:43:37,010
you we have to tell you what currently

00:43:35,900 --> 00:43:39,040
Network you connected on because the

00:43:37,010 --> 00:43:43,820
interface is not going to change

00:43:39,040 --> 00:43:50,180
there's still what to do what we gonna

00:43:43,820 --> 00:43:51,170
take DHCP away from them so good any

00:43:50,180 --> 00:43:52,910
other questions because I'm learning

00:43:51,170 --> 00:43:54,170
signal it off time sorry that I can't do

00:43:52,910 --> 00:43:55,700
the demo I think I talk too much

00:43:54,170 --> 00:43:57,380
if you have any other questions I want

00:43:55,700 --> 00:43:59,840
to see a short demo then just catch me

00:43:57,380 --> 00:44:02,659
afterwards thank you very much

00:43:59,840 --> 00:44:02,659

YouTube URL: https://www.youtube.com/watch?v=QIqT2obSPDk


