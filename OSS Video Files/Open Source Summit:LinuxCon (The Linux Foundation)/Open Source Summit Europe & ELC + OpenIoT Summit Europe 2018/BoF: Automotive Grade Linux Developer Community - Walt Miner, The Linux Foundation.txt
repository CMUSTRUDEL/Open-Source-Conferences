Title: BoF: Automotive Grade Linux Developer Community - Walt Miner, The Linux Foundation
Publication date: 2018-10-25
Playlist: Open Source Summit Europe & ELC + OpenIoT Summit Europe 2018
Description: 
	BoF: Automotive Grade Linux Developer Community - Walt Miner, The Linux Foundation

AGL provides an application framework with SMACK based security, a large number of micro-services tailored for the automotive environment, and an SDK for app developers to get going quickly. AGL has attracted a large number of systems developers and app developers. This is an opportunity for developers to get together and discuss issues they have run into, potential roadmap ideas and to provide feedback to the community. Please bring your questions, comments, and ideas to this session. 

About Walt Miner
Engineering Project Manager, The Linux Foundation
Captions: 
	00:00:00,060 --> 00:00:05,670
hello everybody welcome to the

00:00:03,330 --> 00:00:06,569
automotive grade Linux birds of a

00:00:05,670 --> 00:00:09,719
feather session

00:00:06,569 --> 00:00:12,179
I prepared a few slides not too many

00:00:09,719 --> 00:00:16,350
I think these sessions usually are more

00:00:12,179 --> 00:00:19,260
supposed to be interactive if you happen

00:00:16,350 --> 00:00:20,699
to be at the a all day GL all number

00:00:19,260 --> 00:00:24,029
meeting and Dresden you probably saw

00:00:20,699 --> 00:00:25,650
some of these last week so or you've if

00:00:24,029 --> 00:00:27,300
you know what a GL is already these

00:00:25,650 --> 00:00:30,539
might be a little bit boring I'm sorry

00:00:27,300 --> 00:00:33,510
so well by the way my name is a Walt

00:00:30,539 --> 00:00:35,730
minor I'm the community manager the

00:00:33,510 --> 00:00:38,850
development manager for automotive grade

00:00:35,730 --> 00:00:41,129
Linux so you'll see my name pop up on

00:00:38,850 --> 00:00:44,910
schedules and emails and things like

00:00:41,129 --> 00:00:46,829
that automotive grade Linux our tagline

00:00:44,910 --> 00:00:49,170
is collaborating to build the car of the

00:00:46,829 --> 00:00:50,610
future through rapid innovation I don't

00:00:49,170 --> 00:00:53,460
know if anybody saw dan cauchy's

00:00:50,610 --> 00:00:56,059
presentation earlier today but we really

00:00:53,460 --> 00:00:59,160
are focusing on building a single

00:00:56,059 --> 00:01:01,379
distribution unified code base for all

00:00:59,160 --> 00:01:05,909
of automotive and our goal is really to

00:01:01,379 --> 00:01:07,500
be the Linux the code base that uses

00:01:05,909 --> 00:01:09,960
Linux if you're using Linux in the

00:01:07,500 --> 00:01:13,470
vehicle we really are aiming for a GL to

00:01:09,960 --> 00:01:16,049
be that code base we're a non-profit or

00:01:13,470 --> 00:01:17,850
open sourced obviously open source Linux

00:01:16,049 --> 00:01:20,159
based collaborative project hosted at

00:01:17,850 --> 00:01:24,990
the Linux Foundation I work for the

00:01:20,159 --> 00:01:26,610
Linux Foundation so new very neutral in

00:01:24,990 --> 00:01:31,290
any kind of discussions amongst all of

00:01:26,610 --> 00:01:32,909
our members we have 132 members now I

00:01:31,290 --> 00:01:35,369
don't know if I have that slide on here

00:01:32,909 --> 00:01:38,369
but we have 132 members across the

00:01:35,369 --> 00:01:41,369
automotive industry including om Tier

00:01:38,369 --> 00:01:43,610
one suppliers tier two suppliers content

00:01:41,369 --> 00:01:46,170
providers et cetera

00:01:43,610 --> 00:01:48,299
the unified code base that I'm talking

00:01:46,170 --> 00:01:50,040
about we're looking to build a single

00:01:48,299 --> 00:01:51,990
software platform for the entire

00:01:50,040 --> 00:01:53,369
automotive industry and we're even

00:01:51,990 --> 00:01:55,950
seeing interest from outside of the

00:01:53,369 --> 00:01:58,680
automotive industry really we're

00:01:55,950 --> 00:02:00,509
focusing on getting 70 to 80% of the

00:01:58,680 --> 00:02:02,520
starting point of a production project

00:02:00,509 --> 00:02:04,200
so that someone who wants to develop a

00:02:02,520 --> 00:02:06,540
device for the vehicle can pick this up

00:02:04,200 --> 00:02:07,970
and be about three-quarters of the way

00:02:06,540 --> 00:02:11,090
there

00:02:07,970 --> 00:02:14,120
and the aim is within automotive to

00:02:11,090 --> 00:02:16,400
reduce fragmentation so there's a single

00:02:14,120 --> 00:02:18,500
starting point for everybody and we have

00:02:16,400 --> 00:02:22,070
a basically developing an ecosystem of

00:02:18,500 --> 00:02:23,690
developers and collaboration across the

00:02:22,070 --> 00:02:25,880
industry and we're seeing some very

00:02:23,690 --> 00:02:28,700
unique collaboration I think when you

00:02:25,880 --> 00:02:30,740
see only the five OEMs on stage at

00:02:28,700 --> 00:02:33,890
automotive Linux summit together

00:02:30,740 --> 00:02:35,630
promoting automotive grade Linux or you

00:02:33,890 --> 00:02:37,580
go to what integration session where we

00:02:35,630 --> 00:02:40,130
are we have a bunch of our developers

00:02:37,580 --> 00:02:43,280
working together across to your ones and

00:02:40,130 --> 00:02:46,700
you see Panasonic in Denso and Eischen

00:02:43,280 --> 00:02:48,650
and NTT DATA MSE all these tier ones

00:02:46,700 --> 00:02:50,750
that are normally competitors in the

00:02:48,650 --> 00:02:56,590
automotive industry working together on

00:02:50,750 --> 00:02:59,900
a single codebase to promote a GL so

00:02:56,590 --> 00:03:05,209
focused primarily initially on the

00:02:59,900 --> 00:03:07,430
infotainment use case moving into now in

00:03:05,209 --> 00:03:10,340
the last few months instrument cluster

00:03:07,430 --> 00:03:13,160
and heads-up display and adding device

00:03:10,340 --> 00:03:14,840
profiles also for telematics and any

00:03:13,160 --> 00:03:17,540
kind of headless devices any kind of

00:03:14,840 --> 00:03:20,239
straight silver boxes in the vehicle and

00:03:17,540 --> 00:03:22,100
what we what's going on now is so we've

00:03:20,239 --> 00:03:24,190
got the device profile set up in the

00:03:22,100 --> 00:03:26,810
build system for these for these devices

00:03:24,190 --> 00:03:30,470
you can build a complete demo or

00:03:26,810 --> 00:03:32,480
complete reference box unit complete

00:03:30,470 --> 00:03:35,209
reference unit for entertainment for ivi

00:03:32,480 --> 00:03:36,830
and now we're working on instrument

00:03:35,209 --> 00:03:39,320
cluster and heads-up display with some

00:03:36,830 --> 00:03:41,269
of our partners in the ecosystem so that

00:03:39,320 --> 00:03:43,760
by the beginning of next year you should

00:03:41,269 --> 00:03:45,440
be able to download a complete reference

00:03:43,760 --> 00:03:47,330
app a reference device and reference

00:03:45,440 --> 00:03:51,760
applications for at all and instrument

00:03:47,330 --> 00:03:51,760
cluster and a heads-up display system

00:03:53,080 --> 00:03:59,030
hgl is a code first organization coat

00:03:56,630 --> 00:04:01,580
and a code early code often commits

00:03:59,030 --> 00:04:03,890
early commit commit often and our belief

00:04:01,580 --> 00:04:05,209
is that specifications lead to more and

00:04:03,890 --> 00:04:09,860
more fragmentation throughout the

00:04:05,209 --> 00:04:12,080
industry so we do have a a GL

00:04:09,860 --> 00:04:14,030
requirement specification or system

00:04:12,080 --> 00:04:16,340
specification that was done three or

00:04:14,030 --> 00:04:18,380
four years ago we're looking now to up

00:04:16,340 --> 00:04:19,729
update that to will kind of reflect the

00:04:18,380 --> 00:04:21,530
current state of where a GL

00:04:19,729 --> 00:04:22,850
implementation is and

00:04:21,530 --> 00:04:26,389
we want to be in the next three to four

00:04:22,850 --> 00:04:29,360
years but it's not a compliance spec

00:04:26,389 --> 00:04:34,430
it's you know look at it more of as a PR

00:04:29,360 --> 00:04:37,810
d-- or an mr d type document we've had

00:04:34,430 --> 00:04:41,120
within the unified codebase we've had

00:04:37,810 --> 00:04:44,180
five releases so far we named them after

00:04:41,120 --> 00:04:46,400
fish I spend a lot of intensive time

00:04:44,180 --> 00:04:47,810
researching fish names and trying to get

00:04:46,400 --> 00:04:49,580
them in the correct alphabetical order

00:04:47,810 --> 00:04:52,100
was an appropriate adjective in front

00:04:49,580 --> 00:04:54,919
and you can see I spend a lot of time on

00:04:52,100 --> 00:05:00,140
this we just released funky flounder I

00:04:54,919 --> 00:05:02,090
think it was October 8th 6.0 and we're

00:05:00,140 --> 00:05:09,560
now working on grumpy guppy which should

00:05:02,090 --> 00:05:12,880
come out right after CES in January and

00:05:09,560 --> 00:05:16,190
so this is a slide that I make every

00:05:12,880 --> 00:05:17,660
major show basically to show how many

00:05:16,190 --> 00:05:18,919
different committers that we've got you

00:05:17,660 --> 00:05:21,080
working how many people how many people

00:05:18,919 --> 00:05:23,630
or different people are working on a GL

00:05:21,080 --> 00:05:27,410
so you can see on our master branch this

00:05:23,630 --> 00:05:29,600
year alone as of October 10th couple

00:05:27,410 --> 00:05:32,510
weeks ago before I left for Europe we've

00:05:29,600 --> 00:05:36,890
had almost 2000 total commits on our

00:05:32,510 --> 00:05:38,870
master branch you can see we've had 59

00:05:36,890 --> 00:05:42,229
different people who've committed code

00:05:38,870 --> 00:05:44,450
this year and 24 unique companies that

00:05:42,229 --> 00:05:46,010
have committed code this year and that's

00:05:44,450 --> 00:05:47,570
just our commits to master I think I've

00:05:46,010 --> 00:05:52,100
got another slide that shows the numbers

00:05:47,570 --> 00:05:53,660
for our release branches as well and a

00:05:52,100 --> 00:05:56,030
number of these people on this list are

00:05:53,660 --> 00:05:58,430
here this week so you can get to know

00:05:56,030 --> 00:05:59,660
some besides me and Ed Yong Yong Simon

00:05:58,430 --> 00:06:02,510
is here from from the Linux Foundation

00:05:59,660 --> 00:06:04,460
as well but some of the consult are here

00:06:02,510 --> 00:06:07,160
and some of the IOT that pzh guys are

00:06:04,460 --> 00:06:11,930
here as well she's some of the

00:06:07,160 --> 00:06:13,610
Renaissance guys are too by company I

00:06:11,930 --> 00:06:16,130
just broke to a different way of viewing

00:06:13,610 --> 00:06:17,780
it by company we've had like I said 24

00:06:16,130 --> 00:06:22,910
different companies this year that have

00:06:17,780 --> 00:06:26,419
committed code other numbers sus we've

00:06:22,910 --> 00:06:29,419
got three as of now three active release

00:06:26,419 --> 00:06:32,330
branches so we've had over 200 commits

00:06:29,419 --> 00:06:33,440
to various release branches since the

00:06:32,330 --> 00:06:35,300
start of the project

00:06:33,440 --> 00:06:39,590
whoa I think we started the unit

00:06:35,300 --> 00:06:42,169
codebase in 2015 we've had 110 unique

00:06:39,590 --> 00:06:43,780
individuals and 37 unique companies that

00:06:42,169 --> 00:06:47,000
have contributed to the project

00:06:43,780 --> 00:06:51,620
including this year now in 2018 we've

00:06:47,000 --> 00:06:52,699
had 19 new committers and then question

00:06:51,620 --> 00:06:55,190
i've got a number of times today

00:06:52,699 --> 00:06:56,870
actually is do i have to be a member

00:06:55,190 --> 00:06:58,909
company to work on a GL and the answer

00:06:56,870 --> 00:07:00,979
is no you don't have to work for our

00:06:58,909 --> 00:07:03,590
member company in fact we've had eleven

00:07:00,979 --> 00:07:05,629
individuals who committed code who are

00:07:03,590 --> 00:07:09,259
not affiliated with a member company at

00:07:05,629 --> 00:07:11,150
all all of our work is in the open I've

00:07:09,259 --> 00:07:13,370
got a couple slides here that list

00:07:11,150 --> 00:07:15,650
developer resources like where to find

00:07:13,370 --> 00:07:17,960
our source code or a wiki page our

00:07:15,650 --> 00:07:21,979
documentation and all that is open to

00:07:17,960 --> 00:07:24,440
anybody we use JIRA for project

00:07:21,979 --> 00:07:27,199
management and we've closed 482 issues

00:07:24,440 --> 00:07:31,750
this year and since the start of the

00:07:27,199 --> 00:07:31,750
project about there over almost 1400

00:07:33,340 --> 00:07:38,659
this is the overall schedule for this

00:07:35,659 --> 00:07:41,419
year with our various releases if you go

00:07:38,659 --> 00:07:43,580
to this page the schedule is always or

00:07:41,419 --> 00:07:44,810
I'm mostly up to date I try to try to

00:07:43,580 --> 00:07:47,389
keep it up to date as much as possible

00:07:44,810 --> 00:07:49,069
you can see we had our electric eel

00:07:47,389 --> 00:07:52,310
reliefs at the beginning of this year

00:07:49,069 --> 00:07:56,750
we've done four patch releases we've got

00:07:52,310 --> 00:08:00,199
a fifth one scheduled coming up funky

00:07:56,750 --> 00:08:01,849
flounder we this actual the actual

00:08:00,199 --> 00:08:03,889
schedule here is a little wrong we had

00:08:01,849 --> 00:08:06,319
seven release candidates at the end of

00:08:03,889 --> 00:08:09,020
the day I think I just put the wrong

00:08:06,319 --> 00:08:14,169
version of the slide up here and then

00:08:09,020 --> 00:08:17,000
grumpy guppy is now in development so

00:08:14,169 --> 00:08:21,129
for next year we've got grumpy guppy and

00:08:17,000 --> 00:08:24,409
then happy halibut and itchy ice fish

00:08:21,129 --> 00:08:25,849
that are coming up and somebody kindly

00:08:24,409 --> 00:08:27,680
pointed out to me today after I show

00:08:25,849 --> 00:08:29,150
them this slide a number of times that I

00:08:27,680 --> 00:08:32,479
got the numbers wrong that this should

00:08:29,150 --> 00:08:34,310
be seven and these should be eight so I

00:08:32,479 --> 00:08:36,880
need to fix that I neglected to do that

00:08:34,310 --> 00:08:36,880
set for noon

00:08:41,940 --> 00:08:47,230
our vision for 2019 and beyond make it

00:08:46,000 --> 00:08:50,589
what we're hearing from our members

00:08:47,230 --> 00:08:52,930
especially our advisory board make AGL

00:08:50,589 --> 00:08:55,930
production ready get to that 70% number

00:08:52,930 --> 00:08:57,490
so part of my job is figuring out what

00:08:55,930 --> 00:09:00,190
that means and we're getting some

00:08:57,490 --> 00:09:02,649
analysis from our OEMs and our tier ones

00:09:00,190 --> 00:09:04,810
as to where they think we stand with our

00:09:02,649 --> 00:09:08,140
against our requirements or against

00:09:04,810 --> 00:09:10,450
their priorities for AGL for using AGL

00:09:08,140 --> 00:09:13,600
in a production system and closing that

00:09:10,450 --> 00:09:17,290
gap for their top priorities web app

00:09:13,600 --> 00:09:19,540
manager html5 apps so far our demo apps

00:09:17,290 --> 00:09:22,720
have been cube based now we're moving

00:09:19,540 --> 00:09:26,529
towards enabling both cute and web web

00:09:22,720 --> 00:09:29,260
web applications we've got an alpha

00:09:26,529 --> 00:09:31,149
version of that available in funky

00:09:29,260 --> 00:09:32,320
flounder and what we're continuing to

00:09:31,149 --> 00:09:36,339
work on that through the end of this

00:09:32,320 --> 00:09:38,410
year and then the next year improving

00:09:36,339 --> 00:09:42,760
vastly improving our window manager and

00:09:38,410 --> 00:09:44,829
homescreen services implementing a or

00:09:42,760 --> 00:09:49,750
picking a retina gel reference

00:09:44,829 --> 00:09:51,520
compositor and making that we have the

00:09:49,750 --> 00:09:54,459
we have competing compositors now

00:09:51,520 --> 00:09:56,370
between our our native applications and

00:09:54,459 --> 00:09:58,240
our web app applications so

00:09:56,370 --> 00:10:00,010
consolidating towards a common way that

00:09:58,240 --> 00:10:07,029
all applications didn't talk to the

00:10:00,010 --> 00:10:09,420
window manager and the compositor this

00:10:07,029 --> 00:10:12,160
is a lot of words but basically

00:10:09,420 --> 00:10:14,140
continuing to build out our application

00:10:12,160 --> 00:10:17,560
framework particularly with an eye

00:10:14,140 --> 00:10:21,250
towards application lifecycle we work a

00:10:17,560 --> 00:10:23,860
lot with LG who earlier this year or

00:10:21,250 --> 00:10:28,089
late last year open source the version

00:10:23,860 --> 00:10:33,070
of webOS webOS II webOS OS e or

00:10:28,089 --> 00:10:35,770
something like that but basically figure

00:10:33,070 --> 00:10:37,510
out the best path forward for doing a

00:10:35,770 --> 00:10:40,149
better job of starting and stopping apps

00:10:37,510 --> 00:10:43,380
and managing resources of apps that's

00:10:40,149 --> 00:10:43,380
that begin to hoard resources

00:10:45,940 --> 00:10:52,940
we now have a very high-end ivi profile

00:10:49,910 --> 00:10:54,320
we find that we found that the some of

00:10:52,940 --> 00:10:57,650
our reference words like the raspberry

00:10:54,320 --> 00:11:00,590
pi don't wear our resource constraint so

00:10:57,650 --> 00:11:02,650
coming up with a low-end Hardware IDI

00:11:00,590 --> 00:11:06,800
profile that will run on say a

00:11:02,650 --> 00:11:09,890
renaissance a3 their low-end processor

00:11:06,800 --> 00:11:14,450
or the Raspberry Pi 3 improved

00:11:09,890 --> 00:11:16,190
localization support running that as

00:11:14,450 --> 00:11:18,620
non-root currently we run everything as

00:11:16,190 --> 00:11:21,710
rules so we've been working on running

00:11:18,620 --> 00:11:23,540
as non-root and an update an updated

00:11:21,710 --> 00:11:26,240
open-source navigation solution so we

00:11:23,540 --> 00:11:29,540
have a navigation app available we had

00:11:26,240 --> 00:11:32,150
that's not not the best quality it's

00:11:29,540 --> 00:11:35,240
very hard to maintain it was donated to

00:11:32,150 --> 00:11:38,360
us a few years ago by from Hitachi now

00:11:35,240 --> 00:11:40,640
some guys of ICAEW and then elsewhere

00:11:38,360 --> 00:11:43,940
are working on a revised navigation app

00:11:40,640 --> 00:11:50,060
using map box as the mapping software

00:11:43,940 --> 00:11:51,560
and we already have in our AGL we

00:11:50,060 --> 00:11:54,500
already have the GL services for a

00:11:51,560 --> 00:11:57,800
geolocation for GPS things like that so

00:11:54,500 --> 00:11:59,240
and then moving into speech recognition

00:11:57,800 --> 00:12:04,880
and a tas and beyond

00:11:59,240 --> 00:12:06,590
we've got we've got a nuance and amazon

00:12:04,880 --> 00:12:09,290
currently working on a speech

00:12:06,590 --> 00:12:11,420
architecture that's been very active

00:12:09,290 --> 00:12:18,790
that's available on our on our new

00:12:11,420 --> 00:12:18,790
confluence page see

00:12:20,110 --> 00:12:27,230
just quick overview of a gel services

00:12:25,220 --> 00:12:31,790
and how it works basically we've got a

00:12:27,230 --> 00:12:35,780
smack based security system with a base

00:12:31,790 --> 00:12:37,880
platform and a base platform with the

00:12:35,780 --> 00:12:40,760
kernel and the Linux kernel and drivers

00:12:37,880 --> 00:12:45,080
and communications graphics and things

00:12:40,760 --> 00:12:48,830
like that there's an AGL application

00:12:45,080 --> 00:12:51,710
framework that has security baked in you

00:12:48,830 --> 00:12:53,030
you want to you want to if you want to

00:12:51,710 --> 00:12:55,580
access a service or if you want to

00:12:53,030 --> 00:12:59,240
access a device you've got to use this

00:12:55,580 --> 00:13:01,790
binder with various bindings attached to

00:12:59,240 --> 00:13:06,140
it and each one each one of these runs

00:13:01,790 --> 00:13:08,090
in its own security context so basically

00:13:06,140 --> 00:13:11,330
we're we're we're considering security

00:13:08,090 --> 00:13:14,630
from the ground up as you want to add

00:13:11,330 --> 00:13:17,420
new services to atgl you add a new new

00:13:14,630 --> 00:13:18,860
binder as you want to add services to a

00:13:17,420 --> 00:13:22,760
particular binder you can add new

00:13:18,860 --> 00:13:24,650
bindings and you'll see if you look in

00:13:22,760 --> 00:13:27,170
the HDL code base there's a whole list

00:13:24,650 --> 00:13:28,880
of available binders that are that you

00:13:27,170 --> 00:13:31,070
can currently pick up and use now and

00:13:28,880 --> 00:13:35,420
install those as widgets on the AGL

00:13:31,070 --> 00:13:38,330
system I'm going through this rather

00:13:35,420 --> 00:13:39,830
quickly so I know the one again I want

00:13:38,330 --> 00:13:42,170
to kind of encourage discussion at the

00:13:39,830 --> 00:13:43,580
end well so here's the list of available

00:13:42,170 --> 00:13:46,040
binders that we have at this moment

00:13:43,580 --> 00:13:50,390
including home screen window manager

00:13:46,040 --> 00:13:53,500
audio a bunch of connectivity location

00:13:50,390 --> 00:13:56,360
media player media scanner am/fm tuner

00:13:53,500 --> 00:13:59,420
our signal composer for automotive for

00:13:56,360 --> 00:14:04,180
kin allows you to combine signals that

00:13:59,420 --> 00:14:04,180
are coming off the vehicle bus and HVAC

00:14:04,870 --> 00:14:10,730
we've got an SDK for app developers the

00:14:08,930 --> 00:14:12,830
early days of AGL we had a very

00:14:10,730 --> 00:14:15,140
intensive development process that

00:14:12,830 --> 00:14:18,770
required a lot of knowledge of yato

00:14:15,140 --> 00:14:23,200
now our colleagues at IOT that bzh have

00:14:18,770 --> 00:14:26,030
come up with this sdk that is XDS based

00:14:23,200 --> 00:14:29,020
we've got that it's available to be run

00:14:26,030 --> 00:14:30,180
on a numerous of our reference boards

00:14:29,020 --> 00:14:32,490
they

00:14:30,180 --> 00:14:34,230
really the key here was eliminating

00:14:32,490 --> 00:14:36,180
anybody eliminating your app developers

00:14:34,230 --> 00:14:38,970
your typical app developer from having

00:14:36,180 --> 00:14:43,860
to dig into the guts of the Yocto system

00:14:38,970 --> 00:14:46,709
to just build an app but all these

00:14:43,860 --> 00:14:49,110
slides are posted on the schedule page

00:14:46,709 --> 00:14:52,200
already so you could download all these

00:14:49,110 --> 00:14:54,690
and get all these hyperlinks so just a

00:14:52,200 --> 00:14:56,730
list of our resources for developers

00:14:54,690 --> 00:14:58,470
including our wiki page our

00:14:56,730 --> 00:15:01,350
documentation site which we're in the

00:14:58,470 --> 00:15:03,290
process of updating and revamping we

00:15:01,350 --> 00:15:04,920
under we realize that there's a lot of

00:15:03,290 --> 00:15:06,690
deficiencies there's a lot of

00:15:04,920 --> 00:15:08,730
information on the documentation site

00:15:06,690 --> 00:15:10,680
but not a lot of it is coherently

00:15:08,730 --> 00:15:12,890
presented so we're working on better

00:15:10,680 --> 00:15:15,450
presenting the document the

00:15:12,890 --> 00:15:17,670
documentation that we do have and then

00:15:15,450 --> 00:15:19,740
filling in a lot of gaps the API is that

00:15:17,670 --> 00:15:22,110
I just described in these binders are

00:15:19,740 --> 00:15:24,830
not really very well documented on the

00:15:22,110 --> 00:15:27,360
website on the documentation site so

00:15:24,830 --> 00:15:30,660
improving that level of documentation as

00:15:27,360 --> 00:15:33,300
well taking a very use case based

00:15:30,660 --> 00:15:35,580
approach to documentation you know

00:15:33,300 --> 00:15:36,959
basically we've hired a professional

00:15:35,580 --> 00:15:39,000
somebody who's actually done

00:15:36,959 --> 00:15:41,250
documentation sites before Scott

00:15:39,000 --> 00:15:43,800
Rivenbark who people may know from the

00:15:41,250 --> 00:15:47,940
Yocto project documentation is working

00:15:43,800 --> 00:15:51,120
on this for us so we've got a wiki we've

00:15:47,940 --> 00:15:53,070
got JIRA we've got pre-built binaries

00:15:51,120 --> 00:15:54,660
we've got release notes so you can

00:15:53,070 --> 00:15:59,790
always see what you can always grab the

00:15:54,660 --> 00:16:02,940
latest release or an old release we use

00:15:59,790 --> 00:16:05,970
Gerrit for our code reviews and code

00:16:02,940 --> 00:16:09,959
management you can take a look at our

00:16:05,970 --> 00:16:11,310
get through our git mirror there and we

00:16:09,959 --> 00:16:14,640
have a weekly developer call every

00:16:11,310 --> 00:16:17,400
Tuesday I'd say we have anywhere from 20

00:16:14,640 --> 00:16:18,750
to 25 people call in most weeks if you

00:16:17,400 --> 00:16:19,920
have a question or if you need something

00:16:18,750 --> 00:16:22,200
you need some help with something you're

00:16:19,920 --> 00:16:23,910
always welcome to call in to that or use

00:16:22,200 --> 00:16:26,329
our discussions mailing lists to ask a

00:16:23,910 --> 00:16:26,329
question

00:16:28,700 --> 00:16:32,930
we have any number of face-to-face

00:16:31,070 --> 00:16:34,970
workshops every year where people get

00:16:32,930 --> 00:16:37,610
together either work on architecture

00:16:34,970 --> 00:16:39,680
issues or work on code including this is

00:16:37,610 --> 00:16:41,210
just some of the this is a list pretty

00:16:39,680 --> 00:16:42,860
much for the last the third of the year

00:16:41,210 --> 00:16:44,930
where we'll have people getting together

00:16:42,860 --> 00:16:53,960
at various places including in the u.s.

00:16:44,930 --> 00:17:00,680
in Europe and in Japan groups a month

00:16:53,960 --> 00:17:04,310
and that is it so I skillfully left us

00:17:00,680 --> 00:17:05,960
20 half at the time for discussion and

00:17:04,310 --> 00:17:07,460
really I won't answer any questions

00:17:05,960 --> 00:17:09,500
because I think I see a lot of people

00:17:07,460 --> 00:17:15,230
who are in here who are much smarter

00:17:09,500 --> 00:17:16,220
than me so anybody have any questions or

00:17:15,230 --> 00:17:29,780
anything they want to bring up I've got

00:17:16,220 --> 00:17:35,590
a microphone to come on you can't yeah

00:17:29,780 --> 00:17:38,210
there you go we've got our first winner

00:17:35,590 --> 00:17:46,070
I'll give you a free AGL sticker after

00:17:38,210 --> 00:17:48,830
we're done taking a look at the commits

00:17:46,070 --> 00:17:51,220
off of this here I just observed it

00:17:48,830 --> 00:17:54,980
there are a lot of Japanese companies

00:17:51,220 --> 00:17:59,060
what is your feeling if you get a grip

00:17:54,980 --> 00:18:01,370
on on European car makers and tyonne's

00:17:59,060 --> 00:18:05,000
is there some progress actually so if

00:18:01,370 --> 00:18:07,850
you go on how smart I put it in my

00:18:05,000 --> 00:18:10,010
pocket if you go back to that list let

00:18:07,850 --> 00:18:13,160
me go put it back up I didn't carry it

00:18:10,010 --> 00:18:16,090
down with me here you can hold on to

00:18:13,160 --> 00:18:19,010
this and pass the mic to the next person

00:18:16,090 --> 00:18:21,550
you could be the winner you can get a

00:18:19,010 --> 00:18:21,550
sticker to

00:18:23,740 --> 00:18:33,740
okay so so AGL was started by Toyota and

00:18:29,240 --> 00:18:35,929
had a lot of their ecosystem join the

00:18:33,740 --> 00:18:40,309
project very early on and we really were

00:18:35,929 --> 00:18:43,429
when I started on the project in 2014 we

00:18:40,309 --> 00:18:45,410
were very Japanese centric but if you

00:18:43,429 --> 00:18:47,270
look at this list today these first two

00:18:45,410 --> 00:18:49,490
companies are not Japanese so IOT that

00:18:47,270 --> 00:18:53,049
bzh is based in France consult goes

00:18:49,490 --> 00:18:55,520
based in in Europe at the US as well so

00:18:53,049 --> 00:18:57,350
yeah there's a lot of I think we've done

00:18:55,520 --> 00:19:00,080
a very good job in the last four years

00:18:57,350 --> 00:19:03,590
of making it a more worldwide platform

00:19:00,080 --> 00:19:05,120
we've got mercedes-benz on board we're

00:19:03,590 --> 00:19:07,610
currently talking to a number of other

00:19:05,120 --> 00:19:14,600
Oh eeeh you European and US OEM is about

00:19:07,610 --> 00:19:16,760
joining so I think well I think we're

00:19:14,600 --> 00:19:18,590
very much not necessarily a Japanese

00:19:16,760 --> 00:19:21,340
centric organization like we were say

00:19:18,590 --> 00:19:21,340
four years ago

00:19:31,320 --> 00:19:38,100
at the big room what do you use for our

00:19:35,760 --> 00:19:41,490
web applications cities

00:19:38,100 --> 00:19:44,460
cutes web engine or or what what do we

00:19:41,490 --> 00:19:48,750
used for for what HTML applications oh

00:19:44,460 --> 00:19:53,430
we're using the LG webOS we're using

00:19:48,750 --> 00:19:54,750
chromium and they're using cute what's

00:19:53,430 --> 00:20:00,150
there let's there back in now is there

00:19:54,750 --> 00:20:04,950
currently Q Weyland cute web engine is

00:20:00,150 --> 00:20:07,830
it where's our gal you guys I mean oh my

00:20:04,950 --> 00:20:10,740
god you guys are here so the LG's been

00:20:07,830 --> 00:20:12,270
working with agalya on getting the cute

00:20:10,740 --> 00:20:23,430
on the getting the web engine stuff

00:20:12,270 --> 00:20:26,430
ported into a GL and one of the one of

00:20:23,430 --> 00:20:28,740
the activities here is is towards

00:20:26,430 --> 00:20:30,510
consolidating the getting rid of the

00:20:28,740 --> 00:20:32,340
getting rid of any cute dependencies

00:20:30,510 --> 00:20:36,540
that we have on the on the bottom of the

00:20:32,340 --> 00:20:38,310
stack and the platform itself so we have

00:20:36,540 --> 00:20:39,960
the discussion just last week at our

00:20:38,310 --> 00:20:44,100
whole number meeting about moving

00:20:39,960 --> 00:20:46,620
towards a chromium for the web engine

00:20:44,100 --> 00:20:49,560
and which version of chromium that we

00:20:46,620 --> 00:20:51,440
should use and agalya has been working

00:20:49,560 --> 00:20:54,090
on getting rid of the cute dependencies

00:20:51,440 --> 00:20:57,300
but why don't you use again that's a

00:20:54,090 --> 00:20:59,160
cute existing web engine or what it is

00:20:57,300 --> 00:21:02,450
because then you like there's another

00:20:59,160 --> 00:21:05,550
dependency I mean now you have cute now

00:21:02,450 --> 00:21:08,760
you add another thing like webOS or

00:21:05,550 --> 00:21:15,510
whatever so the base platform the Ajo

00:21:08,760 --> 00:21:17,490
based platform down here this stuff none

00:21:15,510 --> 00:21:19,620
of this has a dependency on queue so if

00:21:17,490 --> 00:21:21,390
you build just meta a GL by itself

00:21:19,620 --> 00:21:25,470
there's no cubed in that it's not until

00:21:21,390 --> 00:21:28,470
you bring in the a GL of the demo the GL

00:21:25,470 --> 00:21:30,750
demo that meta a GL demo that you bring

00:21:28,470 --> 00:21:32,490
in the queue dependencies so if you were

00:21:30,750 --> 00:21:36,150
that the goal is that if you're building

00:21:32,490 --> 00:21:37,380
just a GL with the webOS stuff you would

00:21:36,150 --> 00:21:39,420
only have you would have no acute

00:21:37,380 --> 00:21:41,790
dependencies eventually the goal is to

00:21:39,420 --> 00:21:43,910
have no queue dependencies in the demo

00:21:41,790 --> 00:21:46,940
apps themselves but we're not we're not

00:21:43,910 --> 00:21:47,630
yeah so then you're planning to use

00:21:46,940 --> 00:21:51,320
webOS

00:21:47,630 --> 00:21:55,250
for everything instead of cute the idea

00:21:51,320 --> 00:21:58,070
is that you could plug in I don't have a

00:21:55,250 --> 00:21:59,300
good it's a different deck sorry I don't

00:21:58,070 --> 00:22:00,980
have a good picture that but the idea is

00:21:59,300 --> 00:22:02,360
you could plug in you would have your

00:22:00,980 --> 00:22:04,490
app you that your choice you could use

00:22:02,360 --> 00:22:06,440
cute you could use what you could use

00:22:04,490 --> 00:22:07,760
web OS for the web app manager or you

00:22:06,440 --> 00:22:09,860
could use something else you could bring

00:22:07,760 --> 00:22:15,250
something else and but the idea is that

00:22:09,860 --> 00:22:18,880
everything is replaceable okay thanks

00:22:15,250 --> 00:22:18,880
the question back there

00:22:25,700 --> 00:22:32,509
yeah hi currently I work for integration

00:22:30,019 --> 00:22:34,700
of Android on automotive systems like

00:22:32,509 --> 00:22:37,639
most infotainment systems today we are

00:22:34,700 --> 00:22:40,129
integrating Android so what are the

00:22:37,639 --> 00:22:43,639
benefits of using a GL / Android because

00:22:40,129 --> 00:22:45,919
Android also provides the same benefits

00:22:43,639 --> 00:22:48,440
like whatever you have mentioned like it

00:22:45,919 --> 00:22:50,629
provides all the web services it also

00:22:48,440 --> 00:22:52,849
provides its own player it has its

00:22:50,629 --> 00:22:55,940
browser it has its own navigation system

00:22:52,849 --> 00:22:59,359
voice engine so when when we see Android

00:22:55,940 --> 00:23:01,639
as the OS I mean as as a developer I

00:22:59,359 --> 00:23:04,159
have integrated Android so what are the

00:23:01,639 --> 00:23:06,559
benefits of using a GL / Android or why

00:23:04,159 --> 00:23:07,999
should we prefer a GL / Android I think

00:23:06,559 --> 00:23:09,649
it's mostly it's not gonna be a

00:23:07,999 --> 00:23:12,200
technical decision but a business

00:23:09,649 --> 00:23:14,719
decision so do you want there's a

00:23:12,200 --> 00:23:17,629
company want Google to be in charge of

00:23:14,719 --> 00:23:18,979
their ecosystem possibly getting having

00:23:17,629 --> 00:23:20,929
their hair probably having their hands

00:23:18,979 --> 00:23:23,419
on all of the data that the automakers

00:23:20,929 --> 00:23:26,359
want to collect do you are you gonna

00:23:23,419 --> 00:23:28,159
rely on Google to continue to support

00:23:26,359 --> 00:23:31,309
Android in the auto in the car for the

00:23:28,159 --> 00:23:33,229
next 10 years 15 years Google's had a

00:23:31,309 --> 00:23:35,239
history of pulling out of things when

00:23:33,229 --> 00:23:37,339
they David up when they don't make money

00:23:35,239 --> 00:23:40,369
or when they when there's regulatory

00:23:37,339 --> 00:23:41,749
issues also China you've ever think

00:23:40,369 --> 00:23:43,489
about China if you can't you right now

00:23:41,749 --> 00:23:44,899
you can't use Google in China anywhere

00:23:43,489 --> 00:23:46,849
so there's a lot of business

00:23:44,899 --> 00:23:49,549
considerations I don't I honestly don't

00:23:46,849 --> 00:23:51,019
see it as a technical consideration but

00:23:49,549 --> 00:23:53,749
a business consideration as to why you

00:23:51,019 --> 00:23:56,200
would pick one over the other okay

00:23:53,749 --> 00:23:56,200
thanks

00:24:01,559 --> 00:24:07,770
do you have any kind of support for the

00:24:04,140 --> 00:24:09,210
Flex rebus not at this moment the

00:24:07,770 --> 00:24:12,299
microts the guys who work on that stuff

00:24:09,210 --> 00:24:14,670
are from microchip I don't see any of

00:24:12,299 --> 00:24:17,870
them here but I've asked about flex pay

00:24:14,670 --> 00:24:22,710
and they keep telling me it's dead so I

00:24:17,870 --> 00:24:24,960
am agnostic yeah unfortunately some of

00:24:22,710 --> 00:24:28,200
the big premium manufacturers still use

00:24:24,960 --> 00:24:30,390
flex right in some systems right right

00:24:28,200 --> 00:24:33,290
none of our so to date none of our OEMs

00:24:30,390 --> 00:24:35,220
have asked for flex pay and when I asked

00:24:33,290 --> 00:24:37,260
microchip and some of the companies that

00:24:35,220 --> 00:24:39,419
work on them on that kind of stuff they

00:24:37,260 --> 00:24:42,030
say they're not they're not interested

00:24:39,419 --> 00:24:44,070
in in promoting flex right into a GL so

00:24:42,030 --> 00:24:45,660
you know being an open-source project if

00:24:44,070 --> 00:24:47,910
somebody brought flex ray in tomorrow

00:24:45,660 --> 00:24:49,950
somebody gave me an open source solution

00:24:47,910 --> 00:24:52,610
for flex ray and could it want it to

00:24:49,950 --> 00:24:55,320
hook it up into our our signal composer

00:24:52,610 --> 00:24:58,350
it be very it be welcome it's not a

00:24:55,320 --> 00:25:00,000
problem but until one of our members or

00:24:58,350 --> 00:25:01,890
somebody brings it to us that's

00:25:00,000 --> 00:25:03,900
interested in doing it I don't see it

00:25:01,890 --> 00:25:07,309
happening it's not on our roadmap right

00:25:03,900 --> 00:25:07,309
now okay thanks

00:25:13,480 --> 00:25:21,310
and what do you have or have planned in

00:25:16,510 --> 00:25:23,740
terms of vehicle sight protocols and

00:25:21,310 --> 00:25:27,070
connectivity like something like TPI so

00:25:23,740 --> 00:25:30,160
TPN can for diagnostics or maybe j1939

00:25:27,070 --> 00:25:33,040
the lower-level part of the stack for

00:25:30,160 --> 00:25:36,250
commercial vehicles VoIP that kind of

00:25:33,040 --> 00:25:37,840
that kind of area for we have a vehicle

00:25:36,250 --> 00:25:40,420
to chi didn't go over our expert groups

00:25:37,840 --> 00:25:43,900
I think I eliminated those eliminating

00:25:40,420 --> 00:25:45,310
those slides here but are do we have a

00:25:43,900 --> 00:25:46,900
vehicle to cloud expert group that's

00:25:45,310 --> 00:25:49,690
looking more at the telematics profile

00:25:46,900 --> 00:25:52,390
and I've been stressing to them as well

00:25:49,690 --> 00:25:54,910
as some Ark Ark and developers week the

00:25:52,390 --> 00:25:56,890
the the signal Composer guys that we

00:25:54,910 --> 00:26:00,190
need to think about a keyword protocol

00:25:56,890 --> 00:26:03,280
and and what those old diagnostic

00:26:00,190 --> 00:26:05,560
protocols and then how to store DTC's I

00:26:03,280 --> 00:26:07,530
asked our advisory board about that last

00:26:05,560 --> 00:26:12,940
week and they're interested in getting

00:26:07,530 --> 00:26:15,850
including that as part of our making AGL

00:26:12,940 --> 00:26:18,670
production ready right now we don't have

00:26:15,850 --> 00:26:20,080
support for those directly we do have we

00:26:18,670 --> 00:26:22,030
do have a base we do have the Kansas

00:26:20,080 --> 00:26:23,980
what we do have can supported we do have

00:26:22,030 --> 00:26:26,800
the ability to let this vehicle signal

00:26:23,980 --> 00:26:29,140
Composer to add layers on top of the

00:26:26,800 --> 00:26:30,700
basic can messages but we don't have

00:26:29,140 --> 00:26:35,080
support for that stuff directly right

00:26:30,700 --> 00:26:37,450
now okay I'll figure out what I can get

00:26:35,080 --> 00:26:41,260
in touch with you for that second part

00:26:37,450 --> 00:26:43,900
of the question what maybe one more

00:26:41,260 --> 00:26:45,820
level of detail regarding aid us what do

00:26:43,900 --> 00:26:48,310
you have planned for v2x

00:26:45,820 --> 00:26:51,340
lower end of the stick but in particular

00:26:48,310 --> 00:26:55,210
is there anything on the roadmap right

00:26:51,340 --> 00:26:58,900
now I think are in my query of our

00:26:55,210 --> 00:27:02,830
members v2x is not really a high

00:26:58,900 --> 00:27:09,970
priority I know we were looking at the

00:27:02,830 --> 00:27:12,310
new 802 11 I forget what it is P but

00:27:09,970 --> 00:27:14,440
again nobody nobody's shown enough

00:27:12,310 --> 00:27:19,050
interest to actually go and go off and

00:27:14,440 --> 00:27:19,050
start adding it yet thank you

00:27:31,160 --> 00:27:37,410
can you please explain a little bit more

00:27:33,750 --> 00:27:40,710
why this switch from cutie from queue to

00:27:37,410 --> 00:27:44,010
web applications is so it's not it's not

00:27:40,710 --> 00:27:46,560
it's not a switch it's enabling enabling

00:27:44,010 --> 00:27:50,520
you to make a choice so you can choose

00:27:46,560 --> 00:27:52,020
which when we get to Gigi in January

00:27:50,520 --> 00:27:54,360
you'll be able to choose which one you

00:27:52,020 --> 00:27:56,820
want to use and we envision that people

00:27:54,360 --> 00:27:58,680
will want to use actually some so most

00:27:56,820 --> 00:28:01,410
people who choose the web apps will

00:27:58,680 --> 00:28:03,000
probably want some mix of the two

00:28:01,410 --> 00:28:05,160
but it's not designed it's not so it's

00:28:03,000 --> 00:28:08,310
unattended to be a replacement it's

00:28:05,160 --> 00:28:10,430
intended to be you you the device

00:28:08,310 --> 00:28:14,220
designer can choose which one you want

00:28:10,430 --> 00:28:16,290
but if it isn't a web application much

00:28:14,220 --> 00:28:18,540
more resource hungry than the cute

00:28:16,290 --> 00:28:19,860
application in the car that's one of the

00:28:18,540 --> 00:28:22,170
things that were were we're

00:28:19,860 --> 00:28:23,250
investigating so actually if you go to I

00:28:22,170 --> 00:28:25,260
think they're showing it this week but

00:28:23,250 --> 00:28:27,390
if you go to a Gallia's booth and talk

00:28:25,260 --> 00:28:29,040
to talk to those guys they've been

00:28:27,390 --> 00:28:30,900
working on the web app manager and

00:28:29,040 --> 00:28:35,370
optimizing that for the hardware that we

00:28:30,900 --> 00:28:37,560
have it is much less resource intensive

00:28:35,370 --> 00:28:38,700
than it was say a year ago

00:28:37,560 --> 00:28:42,870
they've done a lot of work on optimizing

00:28:38,700 --> 00:28:44,160
that but I think once we have a once we

00:28:42,870 --> 00:28:46,170
have that into our main line of code

00:28:44,160 --> 00:28:47,760
later this year we'll start doing some

00:28:46,170 --> 00:28:51,390
performance testing and see where we

00:28:47,760 --> 00:28:54,890
really stand what I saw this what I saw

00:28:51,390 --> 00:28:58,380
last week from agalya it looked pretty

00:28:54,890 --> 00:29:00,830
it looked almost as smooth as the the

00:28:58,380 --> 00:29:06,050
native apps that we have and they

00:29:00,830 --> 00:29:06,050
mentioned web boys from LG mmm

00:29:06,590 --> 00:29:11,460
web applications written for webOS will

00:29:09,420 --> 00:29:13,350
they always also run in the browser on

00:29:11,460 --> 00:29:18,330
the desktop or just just unknown the

00:29:13,350 --> 00:29:20,670
cour the intention is all so they I

00:29:18,330 --> 00:29:22,110
think agalya and some other companies

00:29:20,670 --> 00:29:24,360
actually have had those running on the

00:29:22,110 --> 00:29:26,190
desktop I've seen that where they've

00:29:24,360 --> 00:29:28,290
done development work on the desktop and

00:29:26,190 --> 00:29:30,690
then moved it onto the under the target

00:29:28,290 --> 00:29:33,570
so that would be the idea it will not be

00:29:30,690 --> 00:29:35,340
the code what we have now is we're

00:29:33,570 --> 00:29:37,770
working with LG in agalya and some other

00:29:35,340 --> 00:29:39,690
companies they've open sourced all ill

00:29:37,770 --> 00:29:41,649
webOS II and we ran it we're in the

00:29:39,690 --> 00:29:43,759
middle of analyzing which

00:29:41,649 --> 00:29:45,379
components of that we want to pull into

00:29:43,759 --> 00:29:49,279
AGL it's not like we're pulling all of

00:29:45,379 --> 00:29:51,350
webOS webOS in I think the next besides

00:29:49,279 --> 00:29:54,919
the web app manager the next component

00:29:51,350 --> 00:29:58,610
we're gonna look at is configuration the

00:29:54,919 --> 00:30:01,909
configuration manager but these these

00:29:58,610 --> 00:30:05,059
HTML apps web apps designed for use in

00:30:01,909 --> 00:30:07,249
the car oh yes the vehicle will they

00:30:05,059 --> 00:30:09,799
also run in a regular web browser on the

00:30:07,249 --> 00:30:11,809
desktop you're gonna need that your need

00:30:09,799 --> 00:30:13,639
this the a GL service is running as well

00:30:11,809 --> 00:30:16,369
but yes that we've seen these guys doing

00:30:13,639 --> 00:30:21,129
this is they have run they have run the

00:30:16,369 --> 00:30:21,129
a GL apps on the desktop okay thank you

00:30:24,279 --> 00:30:28,539
you've used up your questions sorry

00:30:29,810 --> 00:30:37,460
[Applause]

00:30:34,070 --> 00:30:40,790
so that's again about web rendering by

00:30:37,460 --> 00:30:43,220
acute or webOS so when cue to have a

00:30:40,790 --> 00:30:46,160
cute compositor which works to some

00:30:43,220 --> 00:30:48,380
extent on top of Whelan's but what about

00:30:46,160 --> 00:30:50,330
the webOS if it used chromium then

00:30:48,380 --> 00:30:51,380
you're speaking English but I actually

00:30:50,330 --> 00:30:53,540
honestly don't know what you're talking

00:30:51,380 --> 00:30:55,280
about I'm not an expert in this area so

00:30:53,540 --> 00:30:57,080
I would I would defer to someone else

00:30:55,280 --> 00:31:01,730
who was an expert who's maybe working on

00:30:57,080 --> 00:31:13,730
a GL like Daniel possibly okay thank you

00:31:01,730 --> 00:31:22,070
here let them answer hopefully yeah I

00:31:13,730 --> 00:31:24,310
can kind of speak to that I'm settle

00:31:22,070 --> 00:31:28,790
them he's getting several no there's

00:31:24,310 --> 00:31:32,990
currently a GLS shipped uses Western

00:31:28,790 --> 00:31:36,140
which is quite a relatively conservative

00:31:32,990 --> 00:31:40,460
but study and performing compositor QT

00:31:36,140 --> 00:31:43,970
is one option its QT Wayland gives you a

00:31:40,460 --> 00:31:46,060
really good UI but it does miss a number

00:31:43,970 --> 00:31:48,950
of Wayland features that we need for

00:31:46,060 --> 00:31:56,450
really good media playback in particular

00:31:48,950 --> 00:32:01,520
and also there are some it's a lot more

00:31:56,450 --> 00:32:03,980
difficult to do some of the automotive

00:32:01,520 --> 00:32:05,720
apps in the way they want to do window

00:32:03,980 --> 00:32:09,020
management it's much more difficult to

00:32:05,720 --> 00:32:13,580
do that on top of QT and then chromium

00:32:09,020 --> 00:32:15,980
is a whole nother kettle of fish

00:32:13,580 --> 00:32:19,430
what whatever you do you end up building

00:32:15,980 --> 00:32:21,620
quite a lot of your own UI on top of the

00:32:19,430 --> 00:32:24,560
core composite opiate Western or QT

00:32:21,620 --> 00:32:28,810
Weyland or if you use something like

00:32:24,560 --> 00:32:31,100
Chrome OS have freon which is chromium

00:32:28,810 --> 00:32:33,800
acting as a whaling compositor and

00:32:31,100 --> 00:32:37,280
directly displaying the services but you

00:32:33,800 --> 00:32:40,280
always ain't quite a bit of UI in policy

00:32:37,280 --> 00:32:44,140
and especially for the tier ones no M's

00:32:40,280 --> 00:32:46,820
that's where a lot of the work and the

00:32:44,140 --> 00:32:49,789
differentiation of value-add or however

00:32:46,820 --> 00:32:52,669
one to call it is going to be is in that

00:32:49,789 --> 00:32:55,190
that you I and that policy of how you

00:32:52,669 --> 00:32:56,600
deal with displaying and managing

00:32:55,190 --> 00:33:02,419
although different applications and

00:32:56,600 --> 00:33:06,190
surfaces but it doesn't it doesn't

00:33:02,419 --> 00:33:11,630
mandate a particular way than compositor

00:33:06,190 --> 00:33:15,559
you know the bits of webOS that are

00:33:11,630 --> 00:33:17,899
released to using QT Wayland and as long

00:33:15,559 --> 00:33:20,000
as it is making the same whaling

00:33:17,899 --> 00:33:25,690
protocols you can exchange that in for

00:33:20,000 --> 00:33:25,690
Western if that answers your question

00:33:28,740 --> 00:33:37,049
we have so that's this is one of the

00:33:32,520 --> 00:33:39,630
ongoing efforts within AGL there's a

00:33:37,049 --> 00:33:41,850
slide deck that will be available on the

00:33:39,630 --> 00:33:43,500
wiki page it should be there already or

00:33:41,850 --> 00:33:45,539
if I didn't put it there it'll be there

00:33:43,500 --> 00:33:47,750
this we later this week where we

00:33:45,539 --> 00:33:50,789
discussed kind of the options for

00:33:47,750 --> 00:33:54,419
updating our interface and our

00:33:50,789 --> 00:33:56,100
compositor and we have decided now to we

00:33:54,419 --> 00:33:59,250
have a number of expert groups that we

00:33:56,100 --> 00:34:01,890
have the system architecture team last

00:33:59,250 --> 00:34:04,409
week made the decision to put this

00:34:01,890 --> 00:34:08,639
activity in the application framework

00:34:04,409 --> 00:34:10,379
expert group so we should see a lot of

00:34:08,639 --> 00:34:13,470
progress if you're interested in

00:34:10,379 --> 00:34:14,940
following it this this this particular

00:34:13,470 --> 00:34:18,780
slide deck will be available as well

00:34:14,940 --> 00:34:23,129
where we went through a number of

00:34:18,780 --> 00:34:24,720
possibilities for improving both the

00:34:23,129 --> 00:34:28,080
compositor and magic and window

00:34:24,720 --> 00:34:30,000
management so it's really it's an area

00:34:28,080 --> 00:34:32,760
that it's that we recognize as holding a

00:34:30,000 --> 00:34:35,310
GL back at this point and we really need

00:34:32,760 --> 00:34:37,290
a better better solution so we've asked

00:34:35,310 --> 00:34:39,750
collaborative work with us and D Galia

00:34:37,290 --> 00:34:42,950
and others to help make some rapid

00:34:39,750 --> 00:34:42,950
progress in this area

00:34:50,790 --> 00:34:54,970
okay we still have five minutes left if

00:34:52,960 --> 00:35:00,160
anybody's a question oh we do yes one

00:34:54,970 --> 00:35:03,910
more and you you had before on your

00:35:00,160 --> 00:35:09,040
slide Raspberry Pi 3 harder as a low-end

00:35:03,910 --> 00:35:12,730
hardware so low-end in terms of some of

00:35:09,040 --> 00:35:16,960
our IV I use cases right now we if you

00:35:12,730 --> 00:35:20,170
try to run let me go back to that if you

00:35:16,960 --> 00:35:21,700
try to run AJL the AGL demo platform the

00:35:20,170 --> 00:35:24,400
I VI demo platform on a Raspberry Pi

00:35:21,700 --> 00:35:28,900
you'll run out of graphics memory very

00:35:24,400 --> 00:35:30,610
quickly so we're gonna just run in a

00:35:28,900 --> 00:35:32,530
memory period very quickly you'll be

00:35:30,610 --> 00:35:36,550
less very less than satisfied with its

00:35:32,530 --> 00:35:39,100
performance so we are talking about

00:35:36,550 --> 00:35:41,470
creating a profile a demo profile or

00:35:39,100 --> 00:35:43,420
device profile that more focused on

00:35:41,470 --> 00:35:46,900
those more memory constrained and

00:35:43,420 --> 00:35:48,970
graphics constrained devices so it feels

00:35:46,900 --> 00:35:53,590
also not perform very bad let's say on

00:35:48,970 --> 00:35:55,170
an imx6 it performs ok on an imx6

00:35:53,590 --> 00:36:00,040
depending on which one you pick a

00:35:55,170 --> 00:36:03,640
smaller on a single core I don't think

00:36:00,040 --> 00:36:05,170
you'll be very happy with what would you

00:36:03,640 --> 00:36:08,130
Scott what were you guys using the

00:36:05,170 --> 00:36:08,130
double or the quad

00:36:25,170 --> 00:36:32,010
last year at the AMM and I think we had

00:36:28,560 --> 00:36:36,510
it here at it while a TLC a in Prague we

00:36:32,010 --> 00:36:39,390
had a demo setup with a wand board with

00:36:36,510 --> 00:36:44,580
the quad saw on it

00:36:39,390 --> 00:36:48,000
I'm x6 and it that was running the free

00:36:44,580 --> 00:36:50,490
skill binary driver and it worked

00:36:48,000 --> 00:36:54,150
reasonably well on the heel release of a

00:36:50,490 --> 00:36:55,290
gel haven't had the time to get back and

00:36:54,150 --> 00:36:58,830
try and get it working with that new

00:36:55,290 --> 00:37:01,500
Etna vivre recently but that's one of

00:36:58,830 --> 00:37:04,800
our sort of back the burner goals just

00:37:01,500 --> 00:37:07,710
to try and get that working but it's

00:37:04,800 --> 00:37:12,390
it's quite nice hardware actually it's

00:37:07,710 --> 00:37:14,370
well supported an open source and it's

00:37:12,390 --> 00:37:19,680
it's probably a reasonable target at

00:37:14,370 --> 00:37:21,780
this point but you know it's not one of

00:37:19,680 --> 00:37:24,210
the core platforms about the moment on

00:37:21,780 --> 00:37:25,710
AGL unfortunately but we wouldn't be

00:37:24,210 --> 00:37:28,470
would be nice to get it there to kind of

00:37:25,710 --> 00:37:31,950
round a date a bit but if you have any

00:37:28,470 --> 00:37:33,480
other questions myself or Matt Porter

00:37:31,950 --> 00:37:36,930
who's probably wandering around

00:37:33,480 --> 00:37:40,040
somewheres play with that a bit so we

00:37:36,930 --> 00:37:40,040
could answer them

00:37:45,920 --> 00:37:49,210
anybody else have any questions

00:37:53,319 --> 00:37:58,150
No well I'll be around all week some of

00:37:56,920 --> 00:38:00,670
the most of the people who answer

00:37:58,150 --> 00:38:01,420
questions will be here so they'll let us

00:38:00,670 --> 00:38:04,049
know if you have any more questions

00:38:01,420 --> 00:38:04,049
thank you

00:38:04,210 --> 00:38:07,780

YouTube URL: https://www.youtube.com/watch?v=nkYgX5Qggxc


