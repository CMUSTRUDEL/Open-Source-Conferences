Title: How to Avoid Writing Device Drivers for Embedded Linux - Chris Simmonds, 2net
Publication date: 2018-10-25
Playlist: Open Source Summit Europe & ELC + OpenIoT Summit Europe 2018
Description: 
	How to Avoid Writing Device Drivers for Embedded Linux - Chris Simmonds, 2net

 Writing device drivers is time consuming and error prone. The good news is that in most cases you don't have to because Linux provides ready-made drivers for common types of interface. If you want to twiddle some GPIO pins, fade the brightness of an LED or read the temperature using a chip you got from Adafruit, it is all done for you. Well … almost all: you still have to write some user-space code to call the generic driver.

In this presentation I will give examples using three subsystems: GPIO, PWM and I2C. For each one I will show you how to write code to control hardware from the safe and simple environment of your application, written in C or C++ (bindings for other languages exist). If all goes well, there will be live demos of each category. 

About Chris Simmonds
Chris Simmonds is a software consultant and trainer living in southern England. He has almost two decades of experience in designing and building open-source embedded systems. He is the founder and chief consultant at 2net Ltd, which provides professional training and mentoring services in embedded Linux, Linux device drivers, and Android platform development. He has trained engineers at many of the biggest companies in the embedded world. He is the author of the book “Mastering Embedded Linux Programming”, and is a frequent presenter at open source and embedded conferences, including the Embedded Linux Conference and Embedded World. You can see some of his work on the “Inner Penguin” blog at www.2net.co.uk
YouTube URL: https://www.youtube.com/watch?v=QIO2pJqMxjE


