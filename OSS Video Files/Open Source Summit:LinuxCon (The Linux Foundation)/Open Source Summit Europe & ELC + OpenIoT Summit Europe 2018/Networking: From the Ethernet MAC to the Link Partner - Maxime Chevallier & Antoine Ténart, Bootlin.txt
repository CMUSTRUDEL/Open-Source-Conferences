Title: Networking: From the Ethernet MAC to the Link Partner - Maxime Chevallier & Antoine Ténart, Bootlin
Publication date: 2018-10-25
Playlist: Open Source Summit Europe & ELC + OpenIoT Summit Europe 2018
Description: 
	Networking: From the Ethernet MAC to the Link Partner - Maxime Chevallier & Antoine Ténart, Bootlin

In the network world, the link between the Ethernet MAC controller and the network media has become more complex. PHYs can now be chained, located in SFP modules and parts of the link are now hot-pluggable.

All the components of the link communicate using a wide range of standards such as RGMII, SGMII, QSGMII, 1000BASE-X, 1000BASE-T or 10GKR, and one easily gets lost.

In this talk, we'll dive into these technologies and cover how Linux represents the link between the MAC and the link partner, with infrastructures such as phylink.

We'll also give an overview of what composes the link and the standards used. 

About Maxime Chevallier
Maxime joined Bootlin in 2018, where he does Embedded Linux and kernel development. Since then, he has been working on networking drivers, but he also has previous experience working on SPI drivers, Yocto Project BSP development and Real-Time topics.

About Antoine Tenart
Bootlin
Captions: 
	00:00:00,000 --> 00:00:09,090
hello so we'll speak about talk about

00:00:04,170 --> 00:00:11,040
the Ethernet link so from the Mac to the

00:00:09,090 --> 00:00:13,200
link partner and we will see what is

00:00:11,040 --> 00:00:15,780
what do we call an Ethernet link

00:00:13,200 --> 00:00:19,740
what can you find in it and while you'll

00:00:15,780 --> 00:00:22,109
see various variety topics about it but

00:00:19,740 --> 00:00:25,740
first of all we will give a first quick

00:00:22,109 --> 00:00:28,439
introduction about ourself so my name is

00:00:25,740 --> 00:00:31,489
Antoine I work at boot lean

00:00:28,439 --> 00:00:34,530
it's a French company specialized in

00:00:31,489 --> 00:00:39,210
embedded Linux topics and we are doing

00:00:34,530 --> 00:00:41,430
consulting and trainings as part of it I

00:00:39,210 --> 00:00:45,059
had the chance to work on many

00:00:41,430 --> 00:00:48,600
networking topics such as mag driver Phi

00:00:45,059 --> 00:00:52,500
driver or switches as well and today I'm

00:00:48,600 --> 00:00:55,289
with my colleague hi so i'm maximus

00:00:52,500 --> 00:01:00,829
ready i work on similar topics and

00:00:55,289 --> 00:01:03,989
booting and so today we're going to

00:01:00,829 --> 00:01:07,080
introduce you to the first two layers of

00:01:03,989 --> 00:01:10,020
the network stack so we're going to

00:01:07,080 --> 00:01:12,450
introduce the technologies and protocols

00:01:10,020 --> 00:01:14,760
that are used to connect to connect a

00:01:12,450 --> 00:01:17,640
mac to a phi and the fight to the link

00:01:14,760 --> 00:01:18,090
partner and see houses interfaces with

00:01:17,640 --> 00:01:20,850
linux

00:01:18,090 --> 00:01:23,670
so Ethernet has been here for more than

00:01:20,850 --> 00:01:25,790
30 years now so it has evolved and is

00:01:23,670 --> 00:01:29,369
now a very complex set of specifications

00:01:25,790 --> 00:01:32,759
so we will take some shortcuts at some

00:01:29,369 --> 00:01:35,939
times so so that we make this a bit more

00:01:32,759 --> 00:01:40,920
understandable yes we could speak for

00:01:35,939 --> 00:01:42,990
Friday about it so we try to so we'll

00:01:40,920 --> 00:01:45,060
begin with an introduction to the

00:01:42,990 --> 00:01:47,009
Ethernet link layer to forget a

00:01:45,060 --> 00:01:50,399
definition of what we call the Ethernet

00:01:47,009 --> 00:01:53,280
link layer what this link layer will

00:01:50,399 --> 00:01:57,180
solve what what problem will it solve

00:01:53,280 --> 00:01:59,219
and what it will look like so to begin

00:01:57,180 --> 00:02:01,530
with we need a quick reminder about the

00:01:59,219 --> 00:02:06,869
OSI model so do you know the OSI model

00:02:01,530 --> 00:02:09,239
yes probably lots of you so if we have a

00:02:06,869 --> 00:02:12,040
look at the OSI model which tries which

00:02:09,239 --> 00:02:16,209
describes the networking stack you can

00:02:12,040 --> 00:02:18,489
see many levels many independent levels

00:02:16,209 --> 00:02:21,969
and the first one would be is a physical

00:02:18,489 --> 00:02:26,099
layer so the physical layer will be

00:02:21,969 --> 00:02:28,870
responsible of transmitting digital data

00:02:26,099 --> 00:02:32,019
well Congrats in digital data into a

00:02:28,870 --> 00:02:34,870
signal and to transmit this signal over

00:02:32,019 --> 00:02:37,769
a medium so that two devices can be

00:02:34,870 --> 00:02:40,510
connected together and can talk together

00:02:37,769 --> 00:02:44,319
so the physical layer will be really

00:02:40,510 --> 00:02:46,540
dependent on a given medium because you

00:02:44,319 --> 00:02:51,459
can have many different medium use as a

00:02:46,540 --> 00:02:54,579
physical medium such as well electrical

00:02:51,459 --> 00:02:58,359
ones radio ones optical ones so we'll

00:02:54,579 --> 00:03:02,139
see a few of them on top of it you have

00:02:58,359 --> 00:03:05,069
the data link layer such as Ethernet so

00:03:02,139 --> 00:03:08,340
we will speak about the data link layer

00:03:05,069 --> 00:03:11,169
in case of Ethernet during this talk and

00:03:08,340 --> 00:03:13,980
the data link layer will be responsible

00:03:11,169 --> 00:03:17,109
of connecting to devices and

00:03:13,980 --> 00:03:19,959
transmitting data between these two

00:03:17,109 --> 00:03:23,919
devices it will transmit data using what

00:03:19,959 --> 00:03:26,620
we call a frame and this is important

00:03:23,919 --> 00:03:30,220
this means you will have data which

00:03:26,620 --> 00:03:32,859
which will be structured with the raw

00:03:30,220 --> 00:03:34,239
data and plus some information needed so

00:03:32,859 --> 00:03:39,129
that you can understand what is being

00:03:34,239 --> 00:03:41,829
transmitted then on top of it you have

00:03:39,129 --> 00:03:43,810
the network layer such as IP and this

00:03:41,829 --> 00:03:46,060
one is really important because if you

00:03:43,810 --> 00:03:48,760
are only using the data link layer you

00:03:46,060 --> 00:03:51,129
can only connect two devices directly

00:03:48,760 --> 00:03:53,079
connected but if you do want to connect

00:03:51,129 --> 00:03:54,099
more than two devices and to be able to

00:03:53,079 --> 00:03:57,790
san

00:03:54,099 --> 00:04:00,549
well when data from given devices to

00:03:57,790 --> 00:04:03,760
very remote devices hopping through

00:04:00,549 --> 00:04:05,349
waters you need this network layer so

00:04:03,760 --> 00:04:08,139
the main idea with the network network

00:04:05,349 --> 00:04:11,560
layer would be to be able to route the

00:04:08,139 --> 00:04:14,560
data through many machines up to your

00:04:11,560 --> 00:04:16,840
destination and in case of the

00:04:14,560 --> 00:04:19,150
networking layer we

00:04:16,840 --> 00:04:23,290
we'll be using packets okay so a packet

00:04:19,150 --> 00:04:25,180
will be what the data you will you want

00:04:23,290 --> 00:04:28,210
a chunk of data you want to send from

00:04:25,180 --> 00:04:31,389
one device to another one on top of it

00:04:28,210 --> 00:04:33,120
you've got another layer which is l4 and

00:04:31,389 --> 00:04:36,430
this layer will be the transport layer

00:04:33,120 --> 00:04:39,479
given the one you will be using so the

00:04:36,430 --> 00:04:43,060
two main example would be TCP and UDP

00:04:39,479 --> 00:04:46,210
you will add extra capabilities such as

00:04:43,060 --> 00:04:47,320
reliability ordering flow control so it

00:04:46,210 --> 00:04:50,110
really depends on the one you'll be

00:04:47,320 --> 00:04:53,530
using so this will be on top of the

00:04:50,110 --> 00:04:55,900
network layer today while speaking about

00:04:53,530 --> 00:04:58,930
Ethernet we will focus on the first two

00:04:55,900 --> 00:05:00,639
layers so the physical layer and the

00:04:58,930 --> 00:05:02,740
data link layer but we will not speak

00:05:00,639 --> 00:05:05,560
about any other layer of the OSI model

00:05:02,740 --> 00:05:11,910
okay so the two lowest layer of this

00:05:05,560 --> 00:05:15,760
model so if we have a look at what

00:05:11,910 --> 00:05:19,090
natality can look like the idea is you

00:05:15,760 --> 00:05:20,880
want to send data from a cpu to link

00:05:19,090 --> 00:05:27,669
partner which will be your remote device

00:05:20,880 --> 00:05:29,680
and to do this you will have a few few

00:05:27,669 --> 00:05:33,729
element and this link which will handle

00:05:29,680 --> 00:05:37,090
different things first one would be the

00:05:33,729 --> 00:05:39,280
Mac it's called the media access control

00:05:37,090 --> 00:05:41,680
and this one will be responsible of

00:05:39,280 --> 00:05:45,190
ending everything that's linked to the

00:05:41,680 --> 00:05:48,940
level 2 of the OSI model ok so we saw

00:05:45,190 --> 00:05:50,349
the OSI model zoom out to be used to

00:05:48,940 --> 00:05:55,539
handle everything that is linked to the

00:05:50,349 --> 00:05:57,220
data link layer so Ethernet then you

00:05:55,539 --> 00:05:59,530
will have the network fry and the

00:05:57,220 --> 00:06:02,889
network file will be used to convert

00:05:59,530 --> 00:06:07,090
this digital signal into an electrical

00:06:02,889 --> 00:06:10,120
signal and the file will be responsible

00:06:07,090 --> 00:06:12,010
of handling l1 through the first level

00:06:10,120 --> 00:06:15,460
of the OSI model so you have a clear

00:06:12,010 --> 00:06:19,180
separation between l2 and l1 in the

00:06:15,460 --> 00:06:21,610
design of the Ethernet link ok one thing

00:06:19,180 --> 00:06:24,010
about defy is it will usually be

00:06:21,610 --> 00:06:25,840
controlled through a bus which is called

00:06:24,010 --> 00:06:28,389
an MD i/o bus on

00:06:25,840 --> 00:06:30,280
it's directly connected to the Mac

00:06:28,389 --> 00:06:32,199
because it is something you can see in

00:06:30,280 --> 00:06:32,919
many cases but it can be connected to

00:06:32,199 --> 00:06:34,660
something else

00:06:32,919 --> 00:06:40,660
okay does not have to be connected to

00:06:34,660 --> 00:06:43,960
the makita one comment about it this is

00:06:40,660 --> 00:06:47,169
the main diagram about the Ethernet link

00:06:43,960 --> 00:06:49,810
layer this and I think but you can have

00:06:47,169 --> 00:06:51,460
a fuse or a construction of the ethernet

00:06:49,810 --> 00:06:53,860
link and we will see a few of them this

00:06:51,460 --> 00:06:55,870
is the simplest one and this is one you

00:06:53,860 --> 00:06:58,000
need to learn about to really understand

00:06:55,870 --> 00:07:00,870
what's going to happen but you can have

00:06:58,000 --> 00:07:04,560
a few modification within this link

00:07:00,870 --> 00:07:13,120
handle more advanced cases - - under

00:07:04,560 --> 00:07:16,240
specification so when when we will see a

00:07:13,120 --> 00:07:19,000
few example using one real device which

00:07:16,240 --> 00:07:23,530
is called Jamaica tube in board and this

00:07:19,000 --> 00:07:26,020
board is an arm for boron which is using

00:07:23,530 --> 00:07:28,570
an SOC from RL and what's really

00:07:26,020 --> 00:07:31,600
interesting about it is you can see many

00:07:28,570 --> 00:07:34,539
networking pots so it has four network

00:07:31,600 --> 00:07:37,300
ports with three different link designs

00:07:34,539 --> 00:07:39,460
so we can we will be able to see three

00:07:37,300 --> 00:07:44,229
example of what can be released on that

00:07:39,460 --> 00:07:48,610
link and you have six pages so it's

00:07:44,229 --> 00:07:50,800
quite interesting so this is a full

00:07:48,610 --> 00:07:55,120
diagram but we will see each part

00:07:50,800 --> 00:07:59,560
individually the first one you will see

00:07:55,120 --> 00:08:02,289
would be represented as ETH - in Linux

00:07:59,560 --> 00:08:04,720
and it can handle up to one gig links

00:08:02,289 --> 00:08:06,810
and as you can see this is exactly what

00:08:04,720 --> 00:08:10,740
we produced this okay so this is a

00:08:06,810 --> 00:08:13,750
simplest design of an Ethernet link

00:08:10,740 --> 00:08:16,599
you've got this view which is connected

00:08:13,750 --> 00:08:20,410
to the Mac the Mac will handle l2 and

00:08:16,599 --> 00:08:24,940
then you've got fi which will handle l1

00:08:20,410 --> 00:08:29,520
and finally a connector on AB g45

00:08:24,940 --> 00:08:33,459
Connect okay so it's quite common then

00:08:29,520 --> 00:08:37,330
you have access to two ports which are

00:08:33,459 --> 00:08:41,709
eth0 and one in Linux and they can under

00:08:37,330 --> 00:08:43,750
ten gig connections and what's really

00:08:41,709 --> 00:08:46,390
interesting about it is you have two

00:08:43,750 --> 00:08:50,740
connectors on the same port so you can

00:08:46,390 --> 00:08:55,269
either use an rj45 connector or the SFP

00:08:50,740 --> 00:08:57,610
connect and this means that at the time

00:08:55,269 --> 00:09:01,240
you can only use one of them because you

00:08:57,610 --> 00:09:03,700
only have one Mac connected to the spot

00:09:01,240 --> 00:09:05,680
but depending on the one you'll be using

00:09:03,700 --> 00:09:07,060
you will need to reconfigure the link

00:09:05,680 --> 00:09:08,829
okay you cannot have the same

00:09:07,060 --> 00:09:11,350
configuration of the link depending on

00:09:08,829 --> 00:09:14,529
the one you'll be using and this begins

00:09:11,350 --> 00:09:16,180
to be interesting so you will need to be

00:09:14,529 --> 00:09:18,250
able to do dynamic reconfiguration of

00:09:16,180 --> 00:09:20,529
the link to reconfigure the Mac to

00:09:18,250 --> 00:09:23,140
reconfigure the saddest lines and to

00:09:20,529 --> 00:09:28,630
reconfigure safai to allow to switch

00:09:23,140 --> 00:09:31,959
between the two usage and the first part

00:09:28,630 --> 00:09:35,200
which is eated eth3 in linux i can

00:09:31,959 --> 00:09:37,750
handle up to 2.5 gigs and it will be

00:09:35,200 --> 00:09:40,360
only connecting to an SSP cage and as

00:09:37,750 --> 00:09:42,399
you can see there are no file in it okay

00:09:40,360 --> 00:09:43,029
so the Mac is directly connected to the

00:09:42,399 --> 00:09:50,980
SSP

00:09:43,029 --> 00:09:54,010
page so this means if you do not have a

00:09:50,980 --> 00:09:56,829
file that you can have a direct Mac -

00:09:54,010 --> 00:09:59,200
Mac connection you can also have a file

00:09:56,829 --> 00:10:04,770
which would be plugged in at one time

00:09:59,200 --> 00:10:04,770
within the SSP connector but we will see

00:10:05,399 --> 00:10:11,320
within Linux you will have different

00:10:09,160 --> 00:10:13,990
kinds of drivers depending on which

00:10:11,320 --> 00:10:17,260
hardware you you will need to drive so

00:10:13,990 --> 00:10:19,300
the ethernet mac will be driven by an

00:10:17,260 --> 00:10:22,029
ethernet driver which can be found

00:10:19,300 --> 00:10:23,410
inside drivers net Ethernet and the

00:10:22,029 --> 00:10:27,430
ethernet mac controller would be

00:10:23,410 --> 00:10:29,440
represented by a net device so this is a

00:10:27,430 --> 00:10:32,770
Mac we still need to have a driver for

00:10:29,440 --> 00:10:35,860
safai which is a second element will

00:10:32,770 --> 00:10:37,870
have inside the Ethernet link and to

00:10:35,860 --> 00:10:41,350
drive the file you will have a driver

00:10:37,870 --> 00:10:45,190
within net fight drivers net file and it

00:10:41,350 --> 00:10:47,500
will be represented by a fight device so

00:10:45,190 --> 00:10:49,230
in our example of the makya tube in the

00:10:47,500 --> 00:10:52,410
example we have

00:10:49,230 --> 00:10:56,970
Genet driver which is within driver net

00:10:52,410 --> 00:10:58,800
Ethernet Marvel MVP - and then we do

00:10:56,970 --> 00:11:01,650
have two kinds of Phi within the board

00:10:58,800 --> 00:11:04,020
and so we have a driver for each one of

00:11:01,650 --> 00:11:08,220
this Phi 1 which is marveled at Z and

00:11:04,020 --> 00:11:10,700
the other one Marvel 10 gig stud in some

00:11:08,220 --> 00:11:15,030
cases you can have a package which will

00:11:10,700 --> 00:11:17,490
have the Mac and the Phi directly inside

00:11:15,030 --> 00:11:19,770
within the same package so if you do

00:11:17,490 --> 00:11:21,450
have this kind of configuration this

00:11:19,770 --> 00:11:24,960
means you will not be able to connect

00:11:21,450 --> 00:11:26,790
whatever file you want on this Mac but

00:11:24,960 --> 00:11:28,730
you will need only a single driver and

00:11:26,790 --> 00:11:31,730
the driver will be the Istana driver

00:11:28,730 --> 00:11:31,730
okay

00:11:33,810 --> 00:11:39,000
at one time you can ask those two

00:11:35,850 --> 00:11:41,010
drivers to report a few elements through

00:11:39,000 --> 00:11:44,460
statistics and you can also control what

00:11:41,010 --> 00:11:49,160
this driver will do the main tool used

00:11:44,460 --> 00:11:52,320
is ETH tool and ETH tool will be used to

00:11:49,160 --> 00:11:56,670
select and to modify option within the

00:11:52,320 --> 00:11:58,410
mag driver within asana driver so

00:11:56,670 --> 00:12:01,770
everything that will be reported will be

00:11:58,410 --> 00:12:03,960
what the Mac is seen not the file in

00:12:01,770 --> 00:12:07,530
cases you do have a package which will

00:12:03,960 --> 00:12:09,690
contain both Mac and a Phi and then this

00:12:07,530 --> 00:12:11,670
view will be reported by ETH tool so it

00:12:09,690 --> 00:12:14,220
really depends on the hardware you will

00:12:11,670 --> 00:12:16,110
have if you have a specific driver for

00:12:14,220 --> 00:12:17,850
the Phi and a specific one for the Mac

00:12:16,110 --> 00:12:20,100
then ETH tool will give you information

00:12:17,850 --> 00:12:21,780
about the Mac but if you do have the

00:12:20,100 --> 00:12:24,690
same driver for both of them

00:12:21,780 --> 00:12:29,880
then it will robot what this package is

00:12:24,690 --> 00:12:32,100
seeing the second one would be mi I tool

00:12:29,880 --> 00:12:36,660
and this one is deprecated

00:12:32,100 --> 00:12:38,790
it was replaced in well a few in verse

00:12:36,660 --> 00:12:42,210
part by ETH tool but it can still be

00:12:38,790 --> 00:12:44,460
used to dump of the thigh statues to ask

00:12:42,210 --> 00:12:46,230
the Phi 2 to give you the statues it's

00:12:44,460 --> 00:12:48,780
not working with every file but it can

00:12:46,230 --> 00:12:51,570
be useful in in the few cases so it's

00:12:48,780 --> 00:12:58,710
good to know it exists if you do need to

00:12:51,570 --> 00:13:01,720
use it so we just saw what's gonna be

00:12:58,710 --> 00:13:03,160
inside or it's on that link

00:13:01,720 --> 00:13:06,210
what would be the representation in

00:13:03,160 --> 00:13:10,360
Linux oh can you construct one Ethernet

00:13:06,210 --> 00:13:13,660
link but then the next thing to do would

00:13:10,360 --> 00:13:15,400
be to understand hold the file can

00:13:13,660 --> 00:13:17,770
communicate with the link partner and

00:13:15,400 --> 00:13:21,570
hose a Mac can communicate with the file

00:13:17,770 --> 00:13:25,000
and to do this we have access to

00:13:21,570 --> 00:13:29,350
standards which were standardized by is

00:13:25,000 --> 00:13:31,450
Vee you have two kinds of standards one

00:13:29,350 --> 00:13:36,610
would be the media independent interface

00:13:31,450 --> 00:13:40,750
MI and this one is will handle the Mac

00:13:36,610 --> 00:13:42,340
to file connection so the idea is to

00:13:40,750 --> 00:13:46,270
connect different kinds of Mac to

00:13:42,340 --> 00:13:49,510
different kinds of thigh and you can

00:13:46,270 --> 00:13:54,850
find a few stone that such as SG ma you

00:13:49,510 --> 00:13:56,920
probably odd of it at least once and the

00:13:54,850 --> 00:13:58,930
second one will be media dependent

00:13:56,920 --> 00:14:02,740
interface the MDI and this one is

00:13:58,930 --> 00:14:05,170
dependent on the physical medium you'll

00:14:02,740 --> 00:14:07,540
be using and this will be the standards

00:14:05,170 --> 00:14:11,710
used by the fight communicate to the

00:14:07,540 --> 00:14:14,050
link partner so it will connect your

00:14:11,710 --> 00:14:15,610
physical layer to the physical medium so

00:14:14,050 --> 00:14:18,670
depending on the physical medium you'll

00:14:15,610 --> 00:14:21,370
be using easy to copper cable easy to

00:14:18,670 --> 00:14:25,900
fibre cable then you'll be using

00:14:21,370 --> 00:14:28,360
different kinds of specification a few

00:14:25,900 --> 00:14:32,670
example about it you can have 1000 base

00:14:28,360 --> 00:14:32,670
T for example which is quite well just

00:14:32,940 --> 00:14:38,410
it's really simple you only have a few

00:14:35,710 --> 00:14:42,520
of them it's easy to to Renault to to

00:14:38,410 --> 00:14:46,330
record remember so we will have a look

00:14:42,520 --> 00:14:50,350
at each and every of them of course so

00:14:46,330 --> 00:14:52,839
10 days to 10 days bhai I'm kidding the

00:14:50,350 --> 00:14:55,089
important thing about it is to

00:14:52,839 --> 00:14:58,150
understand that the stone that will be

00:14:55,089 --> 00:15:00,940
directly linked to the kind of medium

00:14:58,150 --> 00:15:02,860
you'll be using and then we have a slide

00:15:00,940 --> 00:15:07,360
explaining the name of the standard

00:15:02,860 --> 00:15:09,670
which is quite quite useful to do so you

00:15:07,360 --> 00:15:13,300
will have something of the form speed

00:15:09,670 --> 00:15:17,709
then medium encoding on lane

00:15:13,300 --> 00:15:19,870
to have as a result stand-up which could

00:15:17,709 --> 00:15:22,899
be either one we just saw 1,000 iced tea

00:15:19,870 --> 00:15:26,170
and you need to know the meaning of each

00:15:22,899 --> 00:15:29,950
of those later and key word within this

00:15:26,170 --> 00:15:33,250
name so the first one is the speed this

00:15:29,950 --> 00:15:35,290
is the bond rate bandwidth at which you

00:15:33,250 --> 00:15:38,769
can send that our receive data to the

00:15:35,290 --> 00:15:41,769
link partner then the band you can have

00:15:38,769 --> 00:15:44,170
baseband broadband has been the most

00:15:41,769 --> 00:15:46,720
common one is basement and I'm not an

00:15:44,170 --> 00:15:48,459
expert in in signal processing so I

00:15:46,720 --> 00:15:52,690
cannot explain everything to you but

00:15:48,459 --> 00:15:55,720
it's depending on the device will

00:15:52,690 --> 00:15:58,209
understand the frequencies sent to to it

00:15:55,720 --> 00:16:00,790
okay so if it's a baseband it would be

00:15:58,209 --> 00:16:06,519
close to zero I guess and husband in

00:16:00,790 --> 00:16:09,970
between two frequencies then the medium

00:16:06,519 --> 00:16:11,890
which is important as well and the

00:16:09,970 --> 00:16:14,680
medium would be the physical medium used

00:16:11,890 --> 00:16:18,040
by this protocol so if you're using

00:16:14,680 --> 00:16:22,680
something over twisted pair copper cable

00:16:18,040 --> 00:16:26,110
which is a classic LG 45 it will be T

00:16:22,680 --> 00:16:28,630
okay so this means in my example 1000

00:16:26,110 --> 00:16:31,060
base T this is a protocol which will be

00:16:28,630 --> 00:16:38,140
used if you want to use one gigs link

00:16:31,060 --> 00:16:41,380
over algae con r.g 45 cables we you have

00:16:38,140 --> 00:16:43,839
many more examples such as base C which

00:16:41,380 --> 00:16:46,690
would be your Cooper link or H a plastic

00:16:43,839 --> 00:16:48,579
fiber and you have many many of them so

00:16:46,690 --> 00:16:51,640
as you can see each of them is specific

00:16:48,579 --> 00:16:55,060
to the medium would be used then the

00:16:51,640 --> 00:16:57,790
encoding so the encoding used by the PCs

00:16:55,060 --> 00:17:00,310
but maximum speak about the pcs a bit

00:16:57,790 --> 00:17:02,920
later so you will see what the pcs is

00:17:00,310 --> 00:17:06,250
responsible for and finally the number

00:17:02,920 --> 00:17:08,829
of Lane per link and for base T so for a

00:17:06,250 --> 00:17:13,900
GG 45 it will be the number of twisted

00:17:08,829 --> 00:17:16,480
pair used okay using this you can

00:17:13,900 --> 00:17:21,150
construct the different kind of the

00:17:16,480 --> 00:17:21,150
different specifications name

00:17:23,550 --> 00:17:31,500
also think about the link would be the

00:17:28,800 --> 00:17:34,320
parameter of the link and you have the

00:17:31,500 --> 00:17:36,120
speed which we just saw so this will be

00:17:34,320 --> 00:17:39,300
the speed at which you will be able to

00:17:36,120 --> 00:17:42,840
send data through the link it can be

00:17:39,300 --> 00:17:45,740
many saying while the common ones would

00:17:42,840 --> 00:17:49,670
be one gigs 10 gigs

00:17:45,740 --> 00:17:51,990
40 gigs then you've got a second

00:17:49,670 --> 00:17:55,920
characteristic which would be the duplex

00:17:51,990 --> 00:17:56,400
and this one is really important it can

00:17:55,920 --> 00:17:59,250
be either

00:17:56,400 --> 00:18:01,590
I've duplex or full duplex Alvie duplex

00:17:59,250 --> 00:18:04,020
means only one of the two devices

00:18:01,590 --> 00:18:06,660
communicating can send that at a time

00:18:04,020 --> 00:18:08,670
and full duplex means you can send and

00:18:06,660 --> 00:18:10,260
receive data at the same time so you

00:18:08,670 --> 00:18:12,420
need to make sure that the two devices

00:18:10,260 --> 00:18:16,890
communicating together we'll use the

00:18:12,420 --> 00:18:19,880
same duplex otherwise it cannot work an

00:18:16,890 --> 00:18:23,160
auto negotiation is your link able to

00:18:19,880 --> 00:18:25,470
perform autonegotiation autonegotiation

00:18:23,160 --> 00:18:28,920
will be used to exchange information

00:18:25,470 --> 00:18:33,330
about what link would be capable of then

00:18:28,920 --> 00:18:38,070
based on this information the links will

00:18:33,330 --> 00:18:40,380
be able to select one common common

00:18:38,070 --> 00:18:46,800
parameters to be able to talk to

00:18:40,380 --> 00:18:49,620
together so different specification will

00:18:46,800 --> 00:18:51,809
be able to approach the same speed using

00:18:49,620 --> 00:18:55,860
the same duplex but you will have a

00:18:51,809 --> 00:18:59,280
working link if you use only compatible

00:18:55,860 --> 00:19:01,500
mei and MDI protocol okay so you need to

00:18:59,280 --> 00:19:03,090
make sure that the MA MDI so the

00:19:01,500 --> 00:19:05,580
protocol which will connect the Mac to

00:19:03,090 --> 00:19:14,560
the fee and the fee so Phi to the link

00:19:05,580 --> 00:19:16,660
partner will be better and that's it

00:19:14,560 --> 00:19:19,810
so we just saw the introduction about

00:19:16,660 --> 00:19:22,960
what is an Ethernet link and we will see

00:19:19,810 --> 00:19:25,240
no with maximum modern things about

00:19:22,960 --> 00:19:29,260
media interfaces thank you

00:19:25,240 --> 00:19:32,980
so to dig a bit deeper let's see what's

00:19:29,260 --> 00:19:35,500
inside the file so this is a Mac to file

00:19:32,980 --> 00:19:38,110
connection and inside the file you

00:19:35,500 --> 00:19:41,260
typically find three main components the

00:19:38,110 --> 00:19:44,680
first one is the PCs which interfaces

00:19:41,260 --> 00:19:47,290
with the Mac and is is in charge of

00:19:44,680 --> 00:19:49,270
encoding and decoding the link between

00:19:47,290 --> 00:19:50,950
the Mac and the file so that it can

00:19:49,270 --> 00:19:54,970
transmit it to the rest of the parts

00:19:50,950 --> 00:19:57,100
inside the file next you have the PMA

00:19:54,970 --> 00:19:59,650
which is kind of a glue logic between

00:19:57,100 --> 00:20:01,990
the PCs that interfaces with the Mac and

00:19:59,650 --> 00:20:05,880
the PMD that interfaces with the link

00:20:01,990 --> 00:20:09,160
partner the PMA is also responsible for

00:20:05,880 --> 00:20:11,350
collision detection for example and next

00:20:09,160 --> 00:20:14,680
you have the PMD which will modulate the

00:20:11,350 --> 00:20:17,410
signal to send it on the on the physical

00:20:14,680 --> 00:20:20,920
medium so the pcs is kind of the

00:20:17,410 --> 00:20:24,370
important part here because as we will

00:20:20,920 --> 00:20:27,160
see later what was only at the beginning

00:20:24,370 --> 00:20:32,290
some internal part of a file is starting

00:20:27,160 --> 00:20:35,500
to migrate to the Mac so let's first

00:20:32,290 --> 00:20:37,170
focus on the mg IO link the MTR your

00:20:35,500 --> 00:20:40,450
link is the link that is used to

00:20:37,170 --> 00:20:43,270
configure the file so it's also called

00:20:40,450 --> 00:20:46,780
sometime SMI it's basically an I squared

00:20:43,270 --> 00:20:51,430
C bus you have two lines clock and data

00:20:46,780 --> 00:20:54,880
and it allows to connect multiple file

00:20:51,430 --> 00:20:56,920
to the same Mac using the same bus so it

00:20:54,880 --> 00:21:01,180
is an addressable bus you can connect up

00:20:56,920 --> 00:21:03,550
to 32 files on the same bus and you can

00:21:01,180 --> 00:21:06,940
through this bus access the files

00:21:03,550 --> 00:21:09,000
registers so inside each face there are

00:21:06,940 --> 00:21:11,730
some registers that are standardized

00:21:09,000 --> 00:21:16,480
allowing to have some generic drivers

00:21:11,730 --> 00:21:19,120
you also have entering extensions the

00:21:16,480 --> 00:21:21,070
MDI yo bus controller is sometimes part

00:21:19,120 --> 00:21:25,600
of the Mac sometimes it's an external

00:21:21,070 --> 00:21:28,540
external device within you SOC and there

00:21:25,600 --> 00:21:31,360
are mainly two flavors of Mg I owe you

00:21:28,540 --> 00:21:35,740
have the clothes 22 which is the kind of

00:21:31,360 --> 00:21:38,080
historic one which has only a five bit

00:21:35,740 --> 00:21:39,820
register addresses so most of the time

00:21:38,080 --> 00:21:42,040
you have to implement some kind of

00:21:39,820 --> 00:21:45,670
indirect access to access all the

00:21:42,040 --> 00:21:48,870
register set of your file and you now

00:21:45,670 --> 00:21:52,930
have the close 45 which allows to use a

00:21:48,870 --> 00:21:59,500
16-bit register addresses and that also

00:21:52,930 --> 00:22:02,230
provide a way to to sort the register

00:21:59,500 --> 00:22:04,600
addresses between different devices of

00:22:02,230 --> 00:22:08,050
the file so as I said you have a pcs at

00:22:04,600 --> 00:22:10,810
PMA a PMG using plus forty five will be

00:22:08,050 --> 00:22:13,510
able to address specifically the PCs

00:22:10,810 --> 00:22:17,350
inside the file for example so that's

00:22:13,510 --> 00:22:21,400
the notion of devices inside the file so

00:22:17,350 --> 00:22:24,040
here it is how it is in drawing Linux so

00:22:21,400 --> 00:22:26,800
as I said there are some generic

00:22:24,040 --> 00:22:28,780
register sets so you can find generic

00:22:26,800 --> 00:22:34,030
helpers inside device that see for close

00:22:28,780 --> 00:22:37,180
22 and Phi C 45 for close 45 each file

00:22:34,030 --> 00:22:40,630
has a unique identifier based on its

00:22:37,180 --> 00:22:43,930
model number and its vendor so that you

00:22:40,630 --> 00:22:47,290
can select the correct driver to handle

00:22:43,930 --> 00:22:49,810
this particular file and each file is

00:22:47,290 --> 00:22:51,580
described as a node of the mg i/o bus so

00:22:49,810 --> 00:22:54,430
in the device tree here is an abiding

00:22:51,580 --> 00:22:56,890
example so all that you specify is

00:22:54,430 --> 00:23:02,920
basically if it speaks you fortify your

00:22:56,890 --> 00:23:04,660
C 22 and its address on the mjo bus so

00:23:02,920 --> 00:23:07,630
now let's let's talk about the

00:23:04,660 --> 00:23:10,990
high-speed link the MEI link which is

00:23:07,630 --> 00:23:13,960
used to transmit the two packets from

00:23:10,990 --> 00:23:16,540
the Mac to the five of the frames this

00:23:13,960 --> 00:23:17,590
link is replicated each time you connect

00:23:16,540 --> 00:23:20,950
a fight to a Mac

00:23:17,590 --> 00:23:22,870
contrary to mg IO for example the first

00:23:20,950 --> 00:23:27,040
kind of link which is called simply M

00:23:22,870 --> 00:23:28,630
III is made up of 16 pins to connect

00:23:27,040 --> 00:23:30,400
them back to the file so each time you

00:23:28,630 --> 00:23:34,330
connect a new file you have to reroute

00:23:30,400 --> 00:23:36,700
16 other pins so there is a variant

00:23:34,330 --> 00:23:39,250
which is called rmii which used a

00:23:36,700 --> 00:23:41,890
reduced number of pins so Aramaic stands

00:23:39,250 --> 00:23:44,290
for reduced mi I

00:23:41,890 --> 00:23:46,990
you have the gigabit version since mi I

00:23:44,290 --> 00:23:49,960
only does 10 and hundred megabits per

00:23:46,990 --> 00:23:53,380
second GM III is used to transmit a

00:23:49,960 --> 00:23:55,360
gigabit link it has 24 pins so of course

00:23:53,380 --> 00:23:57,850
there is a reduced version which uses

00:23:55,360 --> 00:24:00,850
only 12 pins and sometimes you can find

00:23:57,850 --> 00:24:02,040
a version called LG m IA ID which has

00:24:00,850 --> 00:24:05,650
some time in twix

00:24:02,040 --> 00:24:07,630
it's not very important here and finally

00:24:05,650 --> 00:24:10,540
you have the X GM III link for

00:24:07,630 --> 00:24:14,320
transmitted 10 gigabits per second data

00:24:10,540 --> 00:24:16,150
it has 74 pins so it's really not

00:24:14,320 --> 00:24:18,520
something that you can use to connect a

00:24:16,150 --> 00:24:21,970
Mac on to a Phi on the PCB it's mostly

00:24:18,520 --> 00:24:25,210
used for unpackage mac to file

00:24:21,970 --> 00:24:28,030
connections so obviously there is a

00:24:25,210 --> 00:24:30,070
problem how do I connect a 10 gigabit

00:24:28,030 --> 00:24:33,330
file to a tank a Big Mac if I can't use

00:24:30,070 --> 00:24:37,000
this interface so what has been done is

00:24:33,330 --> 00:24:40,000
that some parts of the file namely the

00:24:37,000 --> 00:24:42,640
PCs that is in charge of encoding and

00:24:40,000 --> 00:24:46,090
decoding this link is used inside the

00:24:42,640 --> 00:24:48,610
Mac to serialize the connection so it's

00:24:46,090 --> 00:24:50,800
not something that is that was

00:24:48,610 --> 00:24:54,310
originally specified in the i3 standard

00:24:50,800 --> 00:24:56,830
but since we used already defined bricks

00:24:54,310 --> 00:25:01,390
from the standard it's pretty easy to

00:24:56,830 --> 00:25:03,250
implement in new devices so basically

00:25:01,390 --> 00:25:05,220
you will serialize the link inside the

00:25:03,250 --> 00:25:08,050
Mac send the sigalas version and

00:25:05,220 --> 00:25:10,590
disorganize it from the file or simply

00:25:08,050 --> 00:25:13,450
handle it directly into the fight as is

00:25:10,590 --> 00:25:15,490
there is the reconciliation sub layer

00:25:13,450 --> 00:25:17,230
which is some glue logic to implement

00:25:15,490 --> 00:25:20,650
that but what's important here are the

00:25:17,230 --> 00:25:23,530
service Lane notion so you will transmit

00:25:20,650 --> 00:25:26,110
your circle as link over most of the

00:25:23,530 --> 00:25:27,730
time differential pairs are going to

00:25:26,110 --> 00:25:31,420
have much higher clock rates and a

00:25:27,730 --> 00:25:35,890
better signal integrity but also the

00:25:31,420 --> 00:25:37,900
encoding needs to be done in a way that

00:25:35,890 --> 00:25:40,090
you won't have your signal staying at

00:25:37,900 --> 00:25:42,310
the same level for too long so most of

00:25:40,090 --> 00:25:44,680
the time use something like 10 bits 8

00:25:42,310 --> 00:25:49,030
bits encoding which is actually defined

00:25:44,680 --> 00:25:51,580
in the base X specification or a 66 bit

00:25:49,030 --> 00:25:53,170
64 bit encoding so basically what it

00:25:51,580 --> 00:25:53,980
means is that when you want to transmit

00:25:53,170 --> 00:25:57,789
a

00:25:53,980 --> 00:26:03,039
bit of real data you do that in ten bits

00:25:57,789 --> 00:26:05,850
on the mei-ling so for example s GM III

00:26:03,039 --> 00:26:08,080
link which is a gem I iced I realized

00:26:05,850 --> 00:26:10,269
when you want to transmit a 1 gigabits

00:26:08,080 --> 00:26:12,370
per second connection you actually clock

00:26:10,269 --> 00:26:15,039
your status lane at one point twenty

00:26:12,370 --> 00:26:18,360
five gigabits per second to deal with

00:26:15,039 --> 00:26:21,130
this encoding that enlarge all your data

00:26:18,360 --> 00:26:23,260
sometimes the clock is inside the same

00:26:21,130 --> 00:26:25,179
Lane as the data so you have clock

00:26:23,260 --> 00:26:27,940
recovery inside the file and sometimes

00:26:25,179 --> 00:26:30,940
it just simply transmit it in a parallel

00:26:27,940 --> 00:26:34,269
manner and the soldiers lanes are

00:26:30,940 --> 00:26:36,460
sometimes also have a specific driver

00:26:34,269 --> 00:26:37,649
that is handled in the generic file

00:26:36,460 --> 00:26:40,019
subsystem

00:26:37,649 --> 00:26:42,519
so some example of sterilized

00:26:40,019 --> 00:26:44,649
connections so you have s GM III

00:26:42,519 --> 00:26:49,630
s GM III is actually a de-facto standard

00:26:44,649 --> 00:26:52,630
that was I think designed by Cisco it

00:26:49,630 --> 00:26:56,649
uses four differential pairs you see the

00:26:52,630 --> 00:26:59,860
basics pcs there are some new flavors of

00:26:56,649 --> 00:27:02,500
this link some that can transmit 2.5 k

00:26:59,860 --> 00:27:04,480
bits per second data and also the cue s

00:27:02,500 --> 00:27:06,490
GM III which is basically aggregating

00:27:04,480 --> 00:27:09,429
fallings together to create one five

00:27:06,490 --> 00:27:10,299
gigabits per second link then you have

00:27:09,429 --> 00:27:12,909
the Zoe

00:27:10,299 --> 00:27:18,899
so it's called Zoe but it's written X a

00:27:12,909 --> 00:27:21,850
UI which is a standard defined in f3

00:27:18,899 --> 00:27:24,700
specifications to sterilize the X GM III

00:27:21,850 --> 00:27:28,059
connection you transmit it over for

00:27:24,700 --> 00:27:30,429
status length so you have 16 pins to to

00:27:28,059 --> 00:27:34,899
route and you also have a reduced

00:27:30,429 --> 00:27:38,110
version called also be only two symbols

00:27:34,899 --> 00:27:40,990
in this time and finally you have a kind

00:27:38,110 --> 00:27:44,889
of a family I grouped together for X D

00:27:40,990 --> 00:27:47,919
Phi and SFI and also 10 10 G base kr

00:27:44,889 --> 00:27:50,169
which are families while you transmit

00:27:47,919 --> 00:27:55,059
this link over one single service link

00:27:50,169 --> 00:27:57,370
that goes at 10 gigabits per second so

00:27:55,059 --> 00:27:59,500
how do I represent my Mac to file

00:27:57,370 --> 00:28:04,629
collection and specifically this mod

00:27:59,500 --> 00:28:07,650
inside in Linux so first you only had an

00:28:04,629 --> 00:28:11,520
enumerator that would say okay I'm using

00:28:07,650 --> 00:28:13,620
my GM IIM I I so it's the fighter fifty

00:28:11,520 --> 00:28:16,830
nowadays you have the fighting framework

00:28:13,620 --> 00:28:19,050
that is designed to really give a good

00:28:16,830 --> 00:28:22,350
representation of this link and when we

00:28:19,050 --> 00:28:24,090
talk about it a bit later and that what

00:28:22,350 --> 00:28:27,510
the binding looks like so basically you

00:28:24,090 --> 00:28:29,970
only say that your Ethernet port is

00:28:27,510 --> 00:28:35,790
connected to this file using this mode

00:28:29,970 --> 00:28:38,970
so let's see you a bit what is inside a

00:28:35,790 --> 00:28:42,330
fight driver so a fine driver it's a

00:28:38,970 --> 00:28:44,820
very simple thing as I said most of the

00:28:42,330 --> 00:28:47,190
heavy lifting is done by the v framework

00:28:44,820 --> 00:28:50,309
v framework because of the standardized

00:28:47,190 --> 00:28:52,350
register sets the fire driver all it

00:28:50,309 --> 00:28:55,800
does is manage the autonegotiation

00:28:52,350 --> 00:28:57,660
parameters and report the link status so

00:28:55,800 --> 00:29:02,250
is the link up or down is there

00:28:57,660 --> 00:29:05,010
something plugged on the port so

00:29:02,250 --> 00:29:07,530
nowadays you are starting to have more

00:29:05,010 --> 00:29:10,559
complex features implemented inside the

00:29:07,530 --> 00:29:13,890
files you have complex statistics

00:29:10,559 --> 00:29:19,500
reporting maksakov floating and work

00:29:13,890 --> 00:29:21,300
online configuration so i talked about

00:29:19,500 --> 00:29:23,340
autonegotiation i'm going to talk about

00:29:21,300 --> 00:29:26,220
the auto negotiation that happens when

00:29:23,340 --> 00:29:28,710
you want to connect to devices using

00:29:26,220 --> 00:29:32,100
using base t because basically it's

00:29:28,710 --> 00:29:35,370
basically using the cat5 cat6 cable with

00:29:32,100 --> 00:29:37,740
rj45 connector at each end so this

00:29:35,370 --> 00:29:39,990
connector can be used to transmit from

00:29:37,740 --> 00:29:43,020
10 megabits per second up to 10 gigabits

00:29:39,990 --> 00:29:47,160
per second and both devices have to

00:29:43,020 --> 00:29:49,710
agree on watch which speed to use so on

00:29:47,160 --> 00:29:52,620
this example I have two devices one

00:29:49,710 --> 00:29:54,420
using 10 gigabits per supporting up to

00:29:52,620 --> 00:29:57,300
10 gigabits per second and the other one

00:29:54,420 --> 00:30:00,780
up to 2.5 gigabits per second so

00:29:57,300 --> 00:30:03,990
obviously since both support 2.5 gigs

00:30:00,780 --> 00:30:05,880
they will agree to use this speed the

00:30:03,990 --> 00:30:08,820
main issue here is that it's not that

00:30:05,880 --> 00:30:10,980
simple to make the list of the supported

00:30:08,820 --> 00:30:14,010
speeds because you have to take into

00:30:10,980 --> 00:30:16,530
account what the five supports but also

00:30:14,010 --> 00:30:19,650
what speeds the Mac supports and how is

00:30:16,530 --> 00:30:21,200
it connected from the Mac to the file so

00:30:19,650 --> 00:30:26,299
only this all of

00:30:21,200 --> 00:30:29,409
this link parameters list building is

00:30:26,299 --> 00:30:33,500
done in software by the Fela framework

00:30:29,409 --> 00:30:35,330
so basically you will end will do a

00:30:33,500 --> 00:30:40,190
logical end between what Mack and what

00:30:35,330 --> 00:30:42,740
the file supports on the Mac determine

00:30:40,190 --> 00:30:45,740
for example using this is the one

00:30:42,740 --> 00:30:49,510
gigabit per second link using ETH too

00:30:45,740 --> 00:30:52,659
you can see what your device supports

00:30:49,510 --> 00:30:55,669
what it advertises to the other file and

00:30:52,659 --> 00:30:58,700
what's your link partner advertises and

00:30:55,669 --> 00:31:01,399
so in that case everything support one

00:30:58,700 --> 00:31:07,610
gigabit on base T so they agreed to use

00:31:01,399 --> 00:31:14,029
when he think and now on when we talk

00:31:07,610 --> 00:31:16,130
about the new stuff okay and so we just

00:31:14,029 --> 00:31:18,529
saw it what was the ethernet link

00:31:16,130 --> 00:31:21,889
oh it's configured what kind of protocol

00:31:18,529 --> 00:31:24,169
will be used within this link but this

00:31:21,889 --> 00:31:29,450
interface evolved over time to support

00:31:24,169 --> 00:31:32,120
new needs so we will see what would be

00:31:29,450 --> 00:31:34,940
the current evolution of this link and

00:31:32,120 --> 00:31:37,070
we start by having a slide and what is

00:31:34,940 --> 00:31:39,950
an SSP module because it will be really

00:31:37,070 --> 00:31:41,230
important when understanding why this

00:31:39,950 --> 00:31:44,630
link will evolve

00:31:41,230 --> 00:31:48,260
so this SFP module will be a small

00:31:44,630 --> 00:31:51,200
form-factor pluggable transceiver it's

00:31:48,260 --> 00:31:58,580
basically a module which you can plug

00:31:51,200 --> 00:32:02,539
within an SSP cage and this is defined

00:31:58,580 --> 00:32:06,610
by a specification which means it's

00:32:02,539 --> 00:32:11,000
quite well used within network devices

00:32:06,610 --> 00:32:16,190
this SSP interface will be able to spot

00:32:11,000 --> 00:32:18,320
values media's various kinds of capers

00:32:16,190 --> 00:32:21,500
so you can have copper cables you can I

00:32:18,320 --> 00:32:24,289
fiber because many things and what's

00:32:21,500 --> 00:32:28,279
also interesting is it's hot pluggable

00:32:24,289 --> 00:32:31,010
and it can embed a file so within this

00:32:28,279 --> 00:32:34,250
SSP connector you can have a file in it

00:32:31,010 --> 00:32:40,790
which mean you can at one time add

00:32:34,250 --> 00:32:46,610
by within is an ethic one thing about it

00:32:40,790 --> 00:32:48,110
it can be passive meaning that you won't

00:32:46,610 --> 00:32:51,830
have a fight to give you the link

00:32:48,110 --> 00:32:55,580
statues in this case the suttas driver

00:32:51,830 --> 00:32:58,960
will give you the link statues all the

00:32:55,580 --> 00:32:58,960
SFP module itself

00:32:59,350 --> 00:33:06,110
so with these SFP modules the in I think

00:33:03,740 --> 00:33:08,720
is no longer fixed because you don't

00:33:06,110 --> 00:33:13,850
know you have only one Mac connected to

00:33:08,720 --> 00:33:16,970
a single file connecting to a connector

00:33:13,850 --> 00:33:19,820
but you can have a pluggable file within

00:33:16,970 --> 00:33:21,800
the SSP modules which means you will

00:33:19,820 --> 00:33:26,330
need to be able to dynamically euro

00:33:21,800 --> 00:33:29,750
configures a leak second thing about it

00:33:26,330 --> 00:33:32,090
is you can have as maximum side with the

00:33:29,750 --> 00:33:35,570
PCs some part of a file which can be

00:33:32,090 --> 00:33:38,180
embed inside the Mac itself allowing not

00:33:35,570 --> 00:33:42,290
to have a file in it so if you recall

00:33:38,180 --> 00:33:44,660
correctly is eth3 on the Mac a tube in

00:33:42,290 --> 00:33:47,840
does not have a file by default

00:33:44,660 --> 00:33:49,550
it only has a Mac and an SSP cage so

00:33:47,840 --> 00:33:56,300
that you can have the direct Mac - Mac

00:33:49,550 --> 00:34:01,310
connection so let's say let's take a

00:33:56,300 --> 00:34:04,670
look at 0 & 1 within the market - bin so

00:34:01,310 --> 00:34:07,790
the first diagram is the one which we

00:34:04,670 --> 00:34:11,659
previously saw this is say eth0 so you

00:34:07,790 --> 00:34:17,450
got two CPUs the Mac Fi and on this file

00:34:11,659 --> 00:34:19,280
can be connected either on lg 45 cable

00:34:17,450 --> 00:34:22,580
or an SSP

00:34:19,280 --> 00:34:25,159
connector depending on what you will

00:34:22,580 --> 00:34:26,929
connect and to this link you will have

00:34:25,159 --> 00:34:29,149
different configuration of the Ethernet

00:34:26,929 --> 00:34:31,220
link itself so this means at one time

00:34:29,149 --> 00:34:34,129
you will need to reconfigure it so that

00:34:31,220 --> 00:34:37,730
it can look like one of these three

00:34:34,129 --> 00:34:39,740
examples the first one would be the case

00:34:37,730 --> 00:34:43,060
where you connect something unto the

00:34:39,740 --> 00:34:45,720
rj45 connector so this is a simple

00:34:43,060 --> 00:34:49,649
Ethernet link we saw already

00:34:45,720 --> 00:34:52,649
a lot of time with in this light so you

00:34:49,649 --> 00:34:54,570
have the Mac the file this file it's

00:34:52,649 --> 00:34:57,810
acting as a file and then the listening

00:34:54,570 --> 00:35:00,780
part but you can also connect an SFP

00:34:57,810 --> 00:35:03,030
transceiver and the SF PE connector and

00:35:00,780 --> 00:35:03,690
in this case so far you will act as a

00:35:03,030 --> 00:35:06,720
pass-through

00:35:03,690 --> 00:35:09,780
so it will not act as a file and you

00:35:06,720 --> 00:35:12,330
have two possible option either you have

00:35:09,780 --> 00:35:15,630
a passive SFP transceiver with no fee no

00:35:12,330 --> 00:35:18,060
file in it so you have what we call a

00:35:15,630 --> 00:35:21,750
direct Mac - Mac connection but you can

00:35:18,060 --> 00:35:23,940
also connect an SFP transceiver which

00:35:21,750 --> 00:35:25,770
embed a thigh and in this case you will

00:35:23,940 --> 00:35:28,349
have dynamically a Phi which will be

00:35:25,770 --> 00:35:31,230
added to the Ethernet okay

00:35:28,349 --> 00:35:32,609
so depending on the configuration you

00:35:31,230 --> 00:35:36,720
will have you will need to reconfigure

00:35:32,609 --> 00:35:40,530
ozoni so this was an issue in Linux

00:35:36,720 --> 00:35:43,310
because you had no way to do it as a

00:35:40,530 --> 00:35:46,349
solution when framework called filling

00:35:43,310 --> 00:35:48,750
filing was added by Russell King and

00:35:46,349 --> 00:35:52,320
this filing infrastructure aims at

00:35:48,750 --> 00:35:55,170
solving this issue so filing will

00:35:52,320 --> 00:35:57,930
represent the link itself it will not

00:35:55,170 --> 00:36:01,290
represent the Mac ossify but it will

00:35:57,930 --> 00:36:04,530
represent the link itself so that you

00:36:01,290 --> 00:36:08,580
can have a pluggable file within SFP

00:36:04,530 --> 00:36:11,130
transceiver thanks to filling you will

00:36:08,580 --> 00:36:14,400
be able to reconfigure so pcs within the

00:36:11,130 --> 00:36:17,190
Mac so that you can under what different

00:36:14,400 --> 00:36:20,250
kind of connections and filing will act

00:36:17,190 --> 00:36:22,500
as a synchronization layer to make sure

00:36:20,250 --> 00:36:25,380
that the link will be configured in a

00:36:22,500 --> 00:36:28,440
way it will be working because as we

00:36:25,380 --> 00:36:30,030
just saw within those examples you need

00:36:28,440 --> 00:36:32,730
to make sure that the Mac will be

00:36:30,030 --> 00:36:35,130
configured in a way that will be working

00:36:32,730 --> 00:36:38,130
with the file configure in a way it will

00:36:35,130 --> 00:36:39,750
be working with every protocol used

00:36:38,130 --> 00:36:44,760
between the Mac and the file in the file

00:36:39,750 --> 00:36:48,060
in the link partner compatible so this

00:36:44,760 --> 00:36:50,099
is what filing will do thanks to a state

00:36:48,060 --> 00:36:51,960
machine it will make sure everything is

00:36:50,099 --> 00:36:53,160
configured the right way so that it can

00:36:51,960 --> 00:36:59,220
work with

00:36:53,160 --> 00:37:02,190
a given consideration so we we have an

00:36:59,220 --> 00:37:04,619
example about what feeding will do and

00:37:02,190 --> 00:37:07,700
maximum will which were you seasick yes

00:37:04,619 --> 00:37:11,520
to quickly explain what's happening so

00:37:07,700 --> 00:37:14,910
basically this is the in the unit

00:37:11,520 --> 00:37:18,240
sequence so your Mac is initialized at

00:37:14,910 --> 00:37:20,849
boot all the ports are down the fighting

00:37:18,240 --> 00:37:25,680
instance is created and you create your

00:37:20,849 --> 00:37:30,809
network devices on a per pod basis when

00:37:25,680 --> 00:37:35,630
you do an IP link set your pot up you

00:37:30,809 --> 00:37:38,309
will start your port inside the mac and

00:37:35,630 --> 00:37:40,230
phy link will try to connect to the file

00:37:38,309 --> 00:37:41,700
that is described in the device tree

00:37:40,230 --> 00:37:44,339
so in the device tree binding that

00:37:41,700 --> 00:37:46,549
explained previously it's basically a

00:37:44,339 --> 00:37:49,349
default configuration that is described

00:37:46,549 --> 00:37:52,559
the file is powered on using this

00:37:49,349 --> 00:37:53,970
default default configuration and there

00:37:52,559 --> 00:37:57,630
is an internal state machine that is

00:37:53,970 --> 00:38:00,119
started so here the mi interface is

00:37:57,630 --> 00:38:02,490
configured to its default value so in

00:38:00,119 --> 00:38:05,339
the device tree we set it to be 10g

00:38:02,490 --> 00:38:10,079
based KR so if you remember it's using

00:38:05,339 --> 00:38:13,760
one single service line to to transmit

00:38:10,079 --> 00:38:16,289
the link over some traces on the PCB the

00:38:13,760 --> 00:38:21,359
problem with that is that the file

00:38:16,289 --> 00:38:24,299
itself can only use its ten gigabit on

00:38:21,359 --> 00:38:27,359
base T connection when it's connected to

00:38:24,299 --> 00:38:30,059
the Mac using 10 G base kr and what

00:38:27,359 --> 00:38:31,650
happens when we plug a simple one

00:38:30,059 --> 00:38:33,329
gigabit per second device on the other

00:38:31,650 --> 00:38:35,339
side is that you will have

00:38:33,329 --> 00:38:37,799
autonegotiation happening between your

00:38:35,339 --> 00:38:41,480
file and the other file they will both

00:38:37,799 --> 00:38:45,240
agree to use one gigabit on base T and

00:38:41,480 --> 00:38:47,849
at this speed the Phi expects expects a

00:38:45,240 --> 00:38:50,520
Mac to be configured using s GM III and

00:38:47,849 --> 00:38:51,960
not 10g base kr and this is something

00:38:50,520 --> 00:38:54,240
that we couldn't do before

00:38:51,960 --> 00:38:57,869
before we had filing assistance the Mac

00:38:54,240 --> 00:39:01,619
to file Inc was fixed so in that case

00:38:57,869 --> 00:39:04,950
the Phi will notify that it has changed

00:39:01,619 --> 00:39:06,420
its pins and its link parameters filing

00:39:04,950 --> 00:39:08,640
will not

00:39:06,420 --> 00:39:12,210
is that and ask the Mac to reconfigure

00:39:08,640 --> 00:39:13,859
itself using fine Mac configure to so

00:39:12,210 --> 00:39:17,309
that the Mac to fight connection is

00:39:13,859 --> 00:39:19,260
reconfigured to use a compatible Mac to

00:39:17,309 --> 00:39:22,440
fight to the ring partner link

00:39:19,260 --> 00:39:25,020
connection so that's why finding is

00:39:22,440 --> 00:39:26,910
useful because in some cases you do have

00:39:25,020 --> 00:39:29,549
to change the way you connect the Mac to

00:39:26,910 --> 00:39:31,650
your file so basically on your board you

00:39:29,549 --> 00:39:33,750
have the Mac and the file connected

00:39:31,650 --> 00:39:38,400
through service lanes and the service

00:39:33,750 --> 00:39:40,170
driver is reconfigured so obviously the

00:39:38,400 --> 00:39:42,599
board has to be rude about it in the

00:39:40,170 --> 00:39:48,390
correct way so that it can support all

00:39:42,599 --> 00:39:51,540
of these modes so that's all so as you

00:39:48,390 --> 00:39:54,420
saw the Mac - vital link partner is very

00:39:51,540 --> 00:39:57,030
complex nowadays when you have to have a

00:39:54,420 --> 00:40:02,760
very dynamic thing instead of what was

00:39:57,030 --> 00:40:05,579
previously a fixed link file can be out

00:40:02,760 --> 00:40:07,220
plugged with the SFP which is also hard

00:40:05,579 --> 00:40:10,980
to end all with the previous

00:40:07,220 --> 00:40:13,829
representations that we had so I hope

00:40:10,980 --> 00:40:18,980
that you learned something and now if

00:40:13,829 --> 00:40:18,980
you have any questions thank you

00:40:23,330 --> 00:40:29,079
[Applause]

00:40:25,119 --> 00:40:32,210
and one thing we would like to to thanks

00:40:29,079 --> 00:40:36,849
Stefan Andrew and Quentin for reviewing

00:40:32,210 --> 00:40:36,849
the slides was appreciated

00:40:49,370 --> 00:40:55,970
hi I was just curious you've got things

00:40:52,280 --> 00:40:57,710
like director hatch SFP where I presume

00:40:55,970 --> 00:41:00,410
maybe that cable would have a fire in it

00:40:57,710 --> 00:41:02,630
but maybe it wouldn't is is that correct

00:41:00,410 --> 00:41:05,660
that that's kind of implementation

00:41:02,630 --> 00:41:08,060
defined yes you gonna direct that that's

00:41:05,660 --> 00:41:11,030
okay and so we can also potentially now

00:41:08,060 --> 00:41:12,680
have an SFP module with a fire but also

00:41:11,030 --> 00:41:14,300
a fire behind the cage on the board is

00:41:12,680 --> 00:41:15,980
that correct as well and we've we now

00:41:14,300 --> 00:41:17,630
end up in a situation where the module

00:41:15,980 --> 00:41:19,190
is actually not necessarily compatible

00:41:17,630 --> 00:41:23,780
with the cage which you can see from the

00:41:19,190 --> 00:41:25,580
outside you are referring to the case

00:41:23,780 --> 00:41:27,980
where the the fire is connected to this

00:41:25,580 --> 00:41:29,600
F P cage and you plug in a safe key

00:41:27,980 --> 00:41:32,060
transceiver with a file in it correct

00:41:29,600 --> 00:41:34,340
yeah but in that case the file simply

00:41:32,060 --> 00:41:36,800
acts as a pass-through for the service

00:41:34,340 --> 00:41:38,720
lanes okay so actually you directly on

00:41:36,800 --> 00:41:40,370
Mac is connecting to the SFP cage in

00:41:38,720 --> 00:41:41,750
that case okay so if we flip it around

00:41:40,370 --> 00:41:43,550
then sorry a couple questions if you

00:41:41,750 --> 00:41:45,620
flip it around then there's no fire on

00:41:43,550 --> 00:41:48,500
the board it's just a Mac to the cage

00:41:45,620 --> 00:41:50,600
yeah do we now need to have an SOP

00:41:48,500 --> 00:41:54,920
module with a with a Mac in or some kind

00:41:50,600 --> 00:41:56,840
of map to Mac link oh not necessarily no

00:41:54,920 --> 00:42:01,510
yogi you simply transmit disorders means

00:41:56,840 --> 00:42:01,510
as is to do so Mac great thank you

00:42:06,950 --> 00:42:16,710
in the case where he had an SF p NR j

00:42:12,049 --> 00:42:19,200
link you had two Ethernet interfaces why

00:42:16,710 --> 00:42:21,569
do I need to Ethernet interfaces I can

00:42:19,200 --> 00:42:29,999
only plug in one link so why do I need

00:42:21,569 --> 00:42:34,410
to I P interfaces you don't necessarily

00:42:29,999 --> 00:42:35,759
need to but you you referring to the

00:42:34,410 --> 00:42:38,759
case where you have two connectors and

00:42:35,759 --> 00:42:39,930
the same link yes yes so you have to

00:42:38,759 --> 00:42:42,359
connect off because you have two

00:42:39,930 --> 00:42:44,670
different kinds of connectors one is LG

00:42:42,359 --> 00:42:46,859
45 just one is a safety but of course

00:42:44,670 --> 00:42:49,710
you can only use one at a time so if you

00:42:46,859 --> 00:42:51,509
plugged in to connect to two cables and

00:42:49,710 --> 00:42:53,969
to those two connectors at the same time

00:42:51,509 --> 00:42:56,460
then you will probably have undefined

00:42:53,969 --> 00:42:58,349
behaviors and what really will happen in

00:42:56,460 --> 00:43:00,809
our case would be the last one would be

00:42:58,349 --> 00:43:04,950
taken into account but why do I need to

00:43:00,809 --> 00:43:07,259
IP interfaces no you don't need to

00:43:04,950 --> 00:43:10,529
you only need one it depending on who do

00:43:07,259 --> 00:43:12,329
you want to design the board yeah I

00:43:10,529 --> 00:43:15,749
guess the question the answer is that

00:43:12,329 --> 00:43:22,469
there is a zero in it each one but it's

00:43:15,749 --> 00:43:24,779
2 times 45 and the SFP kitc so yes you

00:43:22,469 --> 00:43:28,950
have really two different interface on

00:43:24,779 --> 00:43:32,039
the board right now you have to max and

00:43:28,950 --> 00:43:34,890
they both have 185 connector and one

00:43:32,039 --> 00:43:39,359
yeah you can look here so you have two

00:43:34,890 --> 00:43:43,440
times this connection SSP rj45 SP at the

00:43:39,359 --> 00:43:45,269
45 on the fine okay so when we we are

00:43:43,440 --> 00:43:49,289
showing this it's only one of the two

00:43:45,269 --> 00:43:50,759
okay but you don't have eth0 which would

00:43:49,289 --> 00:43:54,890
be this one on each one which would be

00:43:50,759 --> 00:43:54,890
this one this is eth0 both of them

00:44:03,360 --> 00:44:08,790
hi kena can you say a few words about

00:44:06,630 --> 00:44:13,500
the jumbo frames and how they relate

00:44:08,790 --> 00:44:17,400
into a mac and phy it's not really the

00:44:13,500 --> 00:44:19,860
topic of this torque I only worked once

00:44:17,400 --> 00:44:30,650
with jumbo frames so I don't really know

00:44:19,860 --> 00:44:30,650
what to tell you about I think Alex

00:44:34,460 --> 00:44:41,660
hello thank you for the presentation I

00:44:37,530 --> 00:44:45,290
would like tonight to know if there is

00:44:41,660 --> 00:44:49,920
an interface for inspection of the

00:44:45,290 --> 00:44:52,920
traffic that happens on the media

00:44:49,920 --> 00:45:01,859
independent interface or the rosanna

00:44:52,920 --> 00:45:03,270
control pass for that to monitor what is

00:45:01,859 --> 00:45:08,070
going on but that's it

00:45:03,270 --> 00:45:13,619
yeah because as far as I understand we

00:45:08,070 --> 00:45:16,910
linux has five has exposure of control

00:45:13,619 --> 00:45:21,060
pass to linux and that's it right

00:45:16,910 --> 00:45:25,890
through the registers yeah really have

00:45:21,060 --> 00:45:32,130
anything there is something to monitor

00:45:25,890 --> 00:45:35,609
it for example broken the link failure

00:45:32,130 --> 00:45:37,830
between collisions something like that

00:45:35,609 --> 00:45:40,619
yeah so probably you will have access to

00:45:37,830 --> 00:45:43,050
debugging registers which can show you

00:45:40,619 --> 00:45:45,270
this kind of information but within

00:45:43,050 --> 00:45:53,760
Linux I don't know of any standard tool

00:45:45,270 --> 00:45:54,560
to do it I say okay thank you no more

00:45:53,760 --> 00:45:58,670
questions

00:45:54,560 --> 00:45:58,670
so it's lunch time then

00:45:59,840 --> 00:46:02,189

YouTube URL: https://www.youtube.com/watch?v=K962S9gTBVM


