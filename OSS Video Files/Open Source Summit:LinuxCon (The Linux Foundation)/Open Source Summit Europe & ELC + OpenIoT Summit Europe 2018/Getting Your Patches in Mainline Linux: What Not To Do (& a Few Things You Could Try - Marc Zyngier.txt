Title: Getting Your Patches in Mainline Linux: What Not To Do (& a Few Things You Could Try - Marc Zyngier
Publication date: 2018-10-25
Playlist: Open Source Summit Europe & ELC + OpenIoT Summit Europe 2018
Description: 
	Getting Your Patches in Mainline Linux: What Not To Do (and a Few Things You Could Try Instead) - Marc Zyngier, ARM

You've worked hard to develop a new feature, fix a tricky problem, or clean up an unloved part of the kernel. You have posted the patches on the relevant mailing lists and yet can't manage to get them merged. You can't get them past the maintainers, and maybe not even manage to attract their interest. What is happening?

Getting patches into the mainline Linux tree can be a tricky thing, especially for newcomers. The kernel does carry a long description of the process of writing and submitting the patches, but doesn't actually describe the complex set of interactions that take place between the submitter and the maintainer, and how trust gets build between the two.

This talks proposes to detail these interactions, and to offer the point of view of a contributor that grew into a maintainer, giving a number of examples of what not to do, and what you could try doing
instead. 

About Marc Zyngier
Marc has been working on the Linux kernel since an unexpected encounter with 0.99pl13 in 1993. His first contribution was merged in 1996 in the form of the original version of the MD driver.

Having played with fault tolerant systems at Bull, worked on exotic (and ultimately doomed) CPU architectures at Texas Instruments, and had fun with consumer electronics at TomTom, he has been with ARM since 2010, where he focusses on the Linux kernel, co-maintaining KVM/arm and some parts of the IRQ subsystem. He is also involved in some new aspects of the ARM architecture.

He has presented a number of talks at Linux Plumbers, ELC, and KVM Forum over the past years.
Captions: 
	00:00:00,030 --> 00:00:03,419
so good afternoon my name is Martin

00:00:03,090 --> 00:00:09,650
shade

00:00:03,419 --> 00:00:14,639
I'm with um as you can see somewhere and

00:00:09,650 --> 00:00:16,320
I'd like to talk about the hurdle some

00:00:14,639 --> 00:00:18,869
of the contributors have when it comes

00:00:16,320 --> 00:00:24,019
to getting bachelor's merge into the

00:00:18,869 --> 00:00:27,000
main nineteen external so where am i

00:00:24,019 --> 00:00:31,380
I've been playing with Linux for quite a

00:00:27,000 --> 00:00:33,809
while since 93 and if you find that

00:00:31,380 --> 00:00:37,170
annoying well don't blame me blame this

00:00:33,809 --> 00:00:41,399
guy who wrote the is 64 port a long time

00:00:37,170 --> 00:00:45,450
ago got my first patches merge in 96 in

00:00:41,399 --> 00:00:47,579
the form of the MD driver I floated the

00:00:45,450 --> 00:00:50,340
maintainer ship a year later so again if

00:00:47,579 --> 00:00:52,500
you're these careers got corrupted just

00:00:50,340 --> 00:00:56,460
don't tell me I really don't want to do

00:00:52,500 --> 00:01:01,230
I've been with them for over eight years

00:00:56,460 --> 00:01:04,850
now and my job is mostly to bridge the

00:01:01,230 --> 00:01:10,590
architecture some bits of hardware and

00:01:04,850 --> 00:01:13,890
Linux and when it comes to Linux I look

00:01:10,590 --> 00:01:17,729
after KVM own arm together with

00:01:13,890 --> 00:01:19,799
Christopher Dodd was here and the IQ

00:01:17,729 --> 00:01:21,390
subsystem together with Thomas glass

00:01:19,799 --> 00:01:24,240
know who's that the maintainer Submit at

00:01:21,390 --> 00:01:30,030
the moment in real life I'm a bass

00:01:24,240 --> 00:01:32,689
player so first let's start with a

00:01:30,030 --> 00:01:37,110
disclaimer this talk is not about

00:01:32,689 --> 00:01:40,530
maintainer renting ad contributors it's

00:01:37,110 --> 00:01:43,649
really not that first it's a talk to for

00:01:40,530 --> 00:01:46,530
everyone doesn't necessarily apply to

00:01:43,649 --> 00:01:50,640
you only to first-time contributors it's

00:01:46,530 --> 00:01:54,000
really for everyone who's already

00:01:50,640 --> 00:01:57,869
submitted a kernel patch in this

00:01:54,000 --> 00:02:01,049
audience raise your hand ok quite a few

00:01:57,869 --> 00:02:06,360
who among these people call their patch

00:02:01,049 --> 00:02:09,750
accept it ok bit less but it's not that

00:02:06,360 --> 00:02:11,780
bad ok it's not that bad could be a lot

00:02:09,750 --> 00:02:11,780
worse

00:02:12,569 --> 00:02:16,810
so there are things I'm going to talk

00:02:14,770 --> 00:02:21,310
about here that not all maintenance

00:02:16,810 --> 00:02:23,110
would necessarily agree with and that's

00:02:21,310 --> 00:02:25,120
fine we're not about necessarily about

00:02:23,110 --> 00:02:27,790
having a massive consensus about how

00:02:25,120 --> 00:02:30,790
things are done but it's about

00:02:27,790 --> 00:02:33,520
discussing them and if you get flame for

00:02:30,790 --> 00:02:36,069
anything in that talk for doing anything

00:02:33,520 --> 00:02:40,530
that's explaining that talk send them my

00:02:36,069 --> 00:02:40,530
way and we'll have that discussion so

00:02:42,420 --> 00:02:50,170
over the years you would notice if you

00:02:48,370 --> 00:02:51,370
paid close attention that there's a bit

00:02:50,170 --> 00:02:55,450
of a disconnect sometimes between

00:02:51,370 --> 00:02:57,910
contributors and maintain errs you have

00:02:55,450 --> 00:03:02,560
things like my patches are getting

00:02:57,910 --> 00:03:06,430
completely ignored yeah that's that's

00:03:02,560 --> 00:03:09,130
annoying I can see that I've posted

00:03:06,430 --> 00:03:14,080
these patches four times and yet I still

00:03:09,130 --> 00:03:19,299
not in okay it's something is wrong here

00:03:14,080 --> 00:03:21,010
it shows that we're not following up on

00:03:19,299 --> 00:03:23,140
something either the maintainer or the

00:03:21,010 --> 00:03:25,360
contributor there's no blame to be put

00:03:23,140 --> 00:03:28,510
here but just outlining that that's a

00:03:25,360 --> 00:03:31,060
potential issue I've copied this from a

00:03:28,510 --> 00:03:35,290
mainline driver you know actual existing

00:03:31,060 --> 00:03:36,970
code I've copied into my brand new piece

00:03:35,290 --> 00:03:39,310
of code and you telling me now it's not

00:03:36,970 --> 00:03:45,040
right so I can it be in which is good

00:03:39,310 --> 00:03:46,750
and out at the same time I only want to

00:03:45,040 --> 00:03:49,930
get this code merge I don't have time to

00:03:46,750 --> 00:03:51,250
do this extra work and you're starting

00:03:49,930 --> 00:03:53,700
to see where that's going there's

00:03:51,250 --> 00:03:55,930
there's a bit more disconnect between

00:03:53,700 --> 00:03:58,840
between two people talking to each other

00:03:55,930 --> 00:04:01,630
maybe past each other I'm giving you

00:03:58,840 --> 00:04:06,310
this code for free that's a that's an

00:04:01,630 --> 00:04:09,160
annoying one and this one which I've

00:04:06,310 --> 00:04:11,350
seen personally a number of times I

00:04:09,160 --> 00:04:13,600
don't have time to really get what

00:04:11,350 --> 00:04:17,229
you're asking me just tell me what I

00:04:13,600 --> 00:04:22,790
should write okay we're we're adults

00:04:17,229 --> 00:04:25,980
here so it's a story about

00:04:22,790 --> 00:04:28,410
how we deal with the curl the kernel

00:04:25,980 --> 00:04:31,800
code the kernel source tree and there's

00:04:28,410 --> 00:04:36,140
a number of characters in that story we

00:04:31,800 --> 00:04:38,820
have the contributor which you know

00:04:36,140 --> 00:04:40,710
submits a change to the Linux kernel

00:04:38,820 --> 00:04:43,550
source to the mainline an external

00:04:40,710 --> 00:04:45,900
source I'm not talking about some random

00:04:43,550 --> 00:04:47,430
SOC specific folk we're talking about

00:04:45,900 --> 00:04:50,100
mainline that's all I'm interested in

00:04:47,430 --> 00:04:53,250
and they in turn to get that changed

00:04:50,100 --> 00:04:55,770
merged eventually so that thing could be

00:04:53,250 --> 00:04:59,820
a new feature bug fake some clean up it

00:04:55,770 --> 00:05:02,430
doesn't really matter the complexity of

00:04:59,820 --> 00:05:06,570
that change can be you know range from

00:05:02,430 --> 00:05:09,750
one extreme to another and in the

00:05:06,570 --> 00:05:11,180
extreme case the extreme complexity the

00:05:09,750 --> 00:05:15,930
contributor is often the one who knows

00:05:11,180 --> 00:05:22,100
best about it so we have a reviewer can

00:05:15,930 --> 00:05:24,210
be this thing from the maintainer often

00:05:22,100 --> 00:05:27,330
they are often another contributor

00:05:24,210 --> 00:05:29,400
themselves and and they have swelling

00:05:27,330 --> 00:05:33,060
the load so that maintenance actually

00:05:29,400 --> 00:05:36,150
can scale and they're probably the least

00:05:33,060 --> 00:05:39,840
recognized character in that story we

00:05:36,150 --> 00:05:42,740
heavily rely on reviewers no code can

00:05:39,840 --> 00:05:46,229
edit can get in without being reviewed

00:05:42,740 --> 00:05:48,630
and then we have the maintainer who are

00:05:46,229 --> 00:05:51,540
responsible for some piece of code in

00:05:48,630 --> 00:05:54,270
the kernel and for that piece of could

00:05:51,540 --> 00:05:57,530
not to break whether it's at runtime or

00:05:54,270 --> 00:06:00,900
compilation time has to be secured

00:05:57,530 --> 00:06:03,840
especially in this day and age and both

00:06:00,900 --> 00:06:05,669
readable and understandable that's these

00:06:03,840 --> 00:06:07,979
are the criterion we're interested in

00:06:05,669 --> 00:06:10,500
and ultimately there are the ones who

00:06:07,979 --> 00:06:15,020
take responsibility for that code if

00:06:10,500 --> 00:06:18,390
that breaks well there will be the ones

00:06:15,020 --> 00:06:23,790
having to go and fix it at a weekend you

00:06:18,390 --> 00:06:27,150
know there's no no rest for the wicked

00:06:23,790 --> 00:06:28,350
and they often them the targets of yeah

00:06:27,150 --> 00:06:31,310
hundreds of email day

00:06:28,350 --> 00:06:31,310
that's quite daunting

00:06:31,430 --> 00:06:37,550
but they have a few things in common

00:06:33,740 --> 00:06:40,949
their motivations are not that different

00:06:37,550 --> 00:06:44,970
they that they all converge on a single

00:06:40,949 --> 00:06:47,400
point which is the code itself and they

00:06:44,970 --> 00:06:54,720
try to solve a very very difficult

00:06:47,400 --> 00:06:57,000
problem or problems through it it means

00:06:54,720 --> 00:07:00,110
there's individual responsibility

00:06:57,000 --> 00:07:03,860
there's a deep personal investment a

00:07:00,110 --> 00:07:05,160
maintainer for example changing job

00:07:03,860 --> 00:07:07,139
doesn't mean

00:07:05,160 --> 00:07:09,479
oh I'm dropping my maintainer ship it

00:07:07,139 --> 00:07:11,460
quite often means okay I'm going to

00:07:09,479 --> 00:07:15,380
carry that maintainer ship on my own

00:07:11,460 --> 00:07:19,440
time because it's important to me and

00:07:15,380 --> 00:07:23,090
quite often a contributor grows into a

00:07:19,440 --> 00:07:25,949
reviewer and a maintainer Co maintainer

00:07:23,090 --> 00:07:32,030
there's a continuum here you don't have

00:07:25,949 --> 00:07:33,449
necessarily really siloed roles so

00:07:32,030 --> 00:07:37,620
what's the story

00:07:33,449 --> 00:07:40,200
oh it's all about how we submit patches

00:07:37,620 --> 00:07:42,870
and get them merged so you've you have

00:07:40,200 --> 00:07:47,430
this brilliant idea and you've posted a

00:07:42,870 --> 00:07:48,630
patch series you get it reviewed that's

00:07:47,430 --> 00:07:50,639
a lot of conversation going on you

00:07:48,630 --> 00:07:53,220
respond to some comments and you do it

00:07:50,639 --> 00:07:56,690
again and again and again it looks quite

00:07:53,220 --> 00:08:00,510
simple but that's only on the surface

00:07:56,690 --> 00:08:04,590
because by the way what's this patch

00:08:00,510 --> 00:08:06,830
series thing we're talking about who do

00:08:04,590 --> 00:08:08,490
I send it to how do I get it reviewed

00:08:06,830 --> 00:08:12,660
who's going to take that responsibility

00:08:08,490 --> 00:08:13,710
to read you my code and i'm receiving a

00:08:12,660 --> 00:08:16,500
lot of comments I don't necessarily

00:08:13,710 --> 00:08:22,680
understand what they're about so that's

00:08:16,500 --> 00:08:24,960
quite overwhelming so let's try and dig

00:08:22,680 --> 00:08:27,930
into that a bit there was a batch series

00:08:24,960 --> 00:08:29,940
really it's an ordered set of patches

00:08:27,930 --> 00:08:32,909
you know what a patch is a small diff

00:08:29,940 --> 00:08:33,690
you change this that small change it's

00:08:32,909 --> 00:08:36,120
an order

00:08:33,690 --> 00:08:37,990
set of patches so conceptually your

00:08:36,120 --> 00:08:42,130
series is a single change

00:08:37,990 --> 00:08:45,750
but you know we we have limited brain

00:08:42,130 --> 00:08:50,980
power or certainly do very limited so I

00:08:45,750 --> 00:08:53,680
can't grasp your mm line change so you

00:08:50,980 --> 00:08:56,470
have to make it easy for me and break it

00:08:53,680 --> 00:09:00,450
into tiny individual changes in a nice

00:08:56,470 --> 00:09:03,310
order so that I can understand it and

00:09:00,450 --> 00:09:07,089
make sure that nothing in the kernel

00:09:03,310 --> 00:09:10,630
breaks if I if you apply only half of

00:09:07,089 --> 00:09:16,480
that series and what does it look like

00:09:10,630 --> 00:09:20,500
so that's as formal as I could go but

00:09:16,480 --> 00:09:23,410
that's really how it should be and we

00:09:20,500 --> 00:09:25,180
want to see it as as a reviewer or

00:09:23,410 --> 00:09:27,130
maintainer receiving on the receiving

00:09:25,180 --> 00:09:31,360
end of that of your code of your patch

00:09:27,130 --> 00:09:32,860
series so each patch has a total easy

00:09:31,360 --> 00:09:36,700
not as often the subject of your email

00:09:32,860 --> 00:09:38,770
it also has a clear commitment if you

00:09:36,700 --> 00:09:41,500
have the idea of sending a patch without

00:09:38,770 --> 00:09:44,649
a comic message please don't think again

00:09:41,500 --> 00:09:48,850
put a commit message each patch is

00:09:44,649 --> 00:09:51,310
numbered X out of n X is unique you

00:09:48,850 --> 00:09:55,920
don't have the same patch twice and it's

00:09:51,310 --> 00:09:59,260
constant and X is smaller than n or

00:09:55,920 --> 00:10:01,899
there's a unique version number for your

00:09:59,260 --> 00:10:03,550
series don't post the same series twice

00:10:01,899 --> 00:10:06,070
with the same version number it's

00:10:03,550 --> 00:10:09,190
actually confusing think of who's

00:10:06,070 --> 00:10:11,350
receiving that that series and you have

00:10:09,190 --> 00:10:15,279
a cover letter which is patch number

00:10:11,350 --> 00:10:16,990
zero usually you don't send one if you

00:10:15,279 --> 00:10:20,350
only have one patch but it doesn't hurt

00:10:16,990 --> 00:10:23,890
to have one and you describe the goal of

00:10:20,350 --> 00:10:25,570
this series you add a change lock ready

00:10:23,890 --> 00:10:28,860
it's important if you version your

00:10:25,570 --> 00:10:31,240
series know when you read version 30 32

00:10:28,860 --> 00:10:33,100
reading off completely forgot what you

00:10:31,240 --> 00:10:34,810
did before so you need to have that

00:10:33,100 --> 00:10:36,640
explained ok I've changed this this time

00:10:34,810 --> 00:10:40,690
around I've reply to this comment that's

00:10:36,640 --> 00:10:43,440
extremely useful for the maintainer it

00:10:40,690 --> 00:10:46,270
contains a diff stat of your series

00:10:43,440 --> 00:10:50,199
showing what files you've touched and in

00:10:46,270 --> 00:10:52,150
which proportion and all the patches are

00:10:50,199 --> 00:10:55,180
in reply to the

00:10:52,150 --> 00:10:59,310
cover letter so that's what it looks

00:10:55,180 --> 00:11:03,250
like now why does it look like that so

00:10:59,310 --> 00:11:03,610
these are requirements why do we want

00:11:03,250 --> 00:11:07,240
this

00:11:03,610 --> 00:11:10,810
so what for example an ordered set of

00:11:07,240 --> 00:11:13,480
patches that's for the maintainer who

00:11:10,810 --> 00:11:15,580
receives your code who reads it to

00:11:13,480 --> 00:11:18,400
understand the progression in your

00:11:15,580 --> 00:11:22,480
design it's not you don't change things

00:11:18,400 --> 00:11:26,040
randomly there's a there's a never

00:11:22,480 --> 00:11:28,510
thought process in your in your design

00:11:26,040 --> 00:11:31,000
and also still it for bisection act I

00:11:28,510 --> 00:11:33,760
need to be able to apply half of your

00:11:31,000 --> 00:11:35,860
series bang in the middle and test that

00:11:33,760 --> 00:11:40,690
back can't break that this the compiler

00:11:35,860 --> 00:11:42,430
needs to run logical changes if you put

00:11:40,690 --> 00:11:46,420
two and related changes in the same

00:11:42,430 --> 00:11:50,380
patch well again that makes it harder to

00:11:46,420 --> 00:11:53,530
understand and it's all about trying to

00:11:50,380 --> 00:11:56,410
come to the smallest possible change

00:11:53,530 --> 00:12:00,070
that you can convey as an idea as a

00:11:56,410 --> 00:12:03,640
concept batch numbering am I missing

00:12:00,070 --> 00:12:07,120
anything has my spam bot eaten any of

00:12:03,640 --> 00:12:08,800
your email that's useful to know I can

00:12:07,120 --> 00:12:11,700
go and fix my email and also I can make

00:12:08,800 --> 00:12:16,210
sure I review your series isn't it's in

00:12:11,700 --> 00:12:17,380
anthology and also it helps with some

00:12:16,210 --> 00:12:20,590
threading and ordering in the mail

00:12:17,380 --> 00:12:25,050
client version numbering is it something

00:12:20,590 --> 00:12:29,370
new or something I've already reviewed

00:12:25,050 --> 00:12:31,930
so all these are small details that

00:12:29,370 --> 00:12:34,900
helps the reviewer understanding the

00:12:31,930 --> 00:12:36,940
progression in your in your series and

00:12:34,900 --> 00:12:39,220
the cover letter we need to know what

00:12:36,940 --> 00:12:42,760
you've changed from one version to the

00:12:39,220 --> 00:12:44,680
other so for example make sure all the

00:12:42,760 --> 00:12:50,200
recipients receive at least the cover

00:12:44,680 --> 00:12:52,840
letter and that's your chance to convey

00:12:50,200 --> 00:12:55,640
an idea to and to have that conversation

00:12:52,840 --> 00:12:58,160
with the maintainer

00:12:55,640 --> 00:12:59,540
don't do a bad job at writing detailed

00:12:58,160 --> 00:13:04,690
cover letters

00:12:59,540 --> 00:13:04,690
that's really something important and

00:13:04,960 --> 00:13:13,190
that's the don't do it kind of thing you

00:13:09,530 --> 00:13:15,020
look at this series that's actually it's

00:13:13,190 --> 00:13:16,850
a copy-paste of something that had that

00:13:15,020 --> 00:13:19,880
ended up in my email client I've just

00:13:16,850 --> 00:13:23,210
anonymized it because there's no point

00:13:19,880 --> 00:13:26,180
in neo pointing fingers at people when

00:13:23,210 --> 00:13:27,680
you see that that's that's supposed to

00:13:26,180 --> 00:13:30,290
be part of single-pass series there's

00:13:27,680 --> 00:13:33,100
four version members there is no sense

00:13:30,290 --> 00:13:36,980
of progression you you can't really

00:13:33,100 --> 00:13:39,740
extract any meaning from that first you

00:13:36,980 --> 00:13:43,990
miss obviously or at least 2/3 of the

00:13:39,740 --> 00:13:46,930
series there's no cover letter but

00:13:43,990 --> 00:13:49,130
beyond that what it really means is that

00:13:46,930 --> 00:13:52,070
the risk is that we're going to ignore

00:13:49,130 --> 00:13:55,520
that series meaning we're going to miss

00:13:52,070 --> 00:14:01,880
out some potentially really important

00:13:55,520 --> 00:14:03,940
code good ideas good fixes I mean we

00:14:01,880 --> 00:14:07,130
need people to engage with us and to

00:14:03,940 --> 00:14:08,960
contribute code but that's a wasted

00:14:07,130 --> 00:14:15,260
effort and that's that's a shame

00:14:08,960 --> 00:14:17,690
ready we don't want waste yet ice even

00:14:15,260 --> 00:14:21,320
more so shame because we have the tools

00:14:17,690 --> 00:14:25,340
we have the tools to help you do that to

00:14:21,320 --> 00:14:29,780
send a proper patch series and that's

00:14:25,340 --> 00:14:32,210
get I'm pretty sure most of you are

00:14:29,780 --> 00:14:36,620
familiar with the tool it's not that

00:14:32,210 --> 00:14:39,670
easy I agree but it's basically all you

00:14:36,620 --> 00:14:39,670
need yeah costly

00:14:42,960 --> 00:14:52,290
yes you you poster City series you

00:14:49,430 --> 00:14:53,700
respond to it you agree to some changes

00:14:52,290 --> 00:14:58,290
you make those changes you repost the

00:14:53,700 --> 00:15:00,060
series with a new version number you

00:14:58,290 --> 00:15:05,390
iterate over it and you say okay that's

00:15:00,060 --> 00:15:09,020
the new version +1 done getting to that

00:15:05,390 --> 00:15:12,089
so git is all you need for that and

00:15:09,020 --> 00:15:15,060
please do not ever send the patch series

00:15:12,089 --> 00:15:17,730
by hand do not copy paste the patch in

00:15:15,060 --> 00:15:20,790
your email client do not edit a patch by

00:15:17,730 --> 00:15:23,100
hand generate the patch with git send it

00:15:20,790 --> 00:15:24,660
with git that's how you do it you

00:15:23,100 --> 00:15:26,880
configure get as an email client as

00:15:24,660 --> 00:15:31,620
something like four lines is your git

00:15:26,880 --> 00:15:33,930
config you add those two variables to

00:15:31,620 --> 00:15:36,270
cover CC cover which are going to take

00:15:33,930 --> 00:15:38,310
the two and CC lines in your cover

00:15:36,270 --> 00:15:43,670
letter and apply that to your whole

00:15:38,310 --> 00:15:47,279
series and for each of your patch series

00:15:43,670 --> 00:15:50,180
you first identify the recipients know

00:15:47,279 --> 00:15:53,010
who you're talking to maintain errs

00:15:50,180 --> 00:15:56,810
reviewers other contributors mailing

00:15:53,010 --> 00:16:00,690
lists you format your patches with that

00:15:56,810 --> 00:16:03,720
line here doesn't work hey that does

00:16:00,690 --> 00:16:09,240
work so what does it mean get format

00:16:03,720 --> 00:16:10,740
patch self-explanatory - OH some

00:16:09,240 --> 00:16:14,490
directory where you going to stash your

00:16:10,740 --> 00:16:18,690
patches a version number - v3 as version

00:16:14,490 --> 00:16:22,700
3 generate a cover letter and the

00:16:18,690 --> 00:16:26,160
boundaries of your branch and that's it

00:16:22,700 --> 00:16:27,750
you edit your cover letter you write

00:16:26,160 --> 00:16:31,920
this nice description we've talked about

00:16:27,750 --> 00:16:34,500
and then you do get send email first

00:16:31,920 --> 00:16:39,029
with the dry run check that it's all

00:16:34,500 --> 00:16:42,360
fine remove the dry run of you go and

00:16:39,029 --> 00:16:44,040
that's all there is to do same thing

00:16:42,360 --> 00:16:46,709
when we you reply to email when you

00:16:44,040 --> 00:16:51,690
interact on the list use plain text

00:16:46,709 --> 00:16:53,760
email please try to avoid HTML as it

00:16:51,690 --> 00:16:56,460
breaks all kind of things including

00:16:53,760 --> 00:17:00,120
filters we

00:16:56,460 --> 00:17:03,920
in line don't top post no city

00:17:00,120 --> 00:17:07,589
disclaimer avoid attachments if you can

00:17:03,920 --> 00:17:10,410
it's not always avoidable see see people

00:17:07,589 --> 00:17:14,690
that actually matter don't see see the

00:17:10,410 --> 00:17:17,339
world I mean if you see 50 people on CC

00:17:14,690 --> 00:17:20,400
when you're on the receiving end of that

00:17:17,339 --> 00:17:22,500
email mean yeah there's so many people

00:17:20,400 --> 00:17:26,130
on CC someone else will do the job will

00:17:22,500 --> 00:17:31,050
reply to it so keep your CC list short

00:17:26,130 --> 00:17:35,690
and to the point and when you reply to

00:17:31,050 --> 00:17:39,420
someone trim the email keep the

00:17:35,690 --> 00:17:43,140
important content don't have a one-liner

00:17:39,420 --> 00:17:47,490
at the end of a 300 line patch that's

00:17:43,140 --> 00:17:50,850
just a waste of bandwidth a quick one

00:17:47,490 --> 00:17:56,160
why email why not you know I don't know

00:17:50,850 --> 00:17:59,010
Facebook there's all kind of good reason

00:17:56,160 --> 00:18:02,370
why email is important and email is our

00:17:59,010 --> 00:18:03,510
tool of choice so far these are the

00:18:02,370 --> 00:18:07,500
requirements not going to go through

00:18:03,510 --> 00:18:11,520
that but we'd need something that fits

00:18:07,500 --> 00:18:15,390
those requirements to move slowly

00:18:11,520 --> 00:18:17,940
gradually to another system of course

00:18:15,390 --> 00:18:21,230
email is sometimes badly implemented in

00:18:17,940 --> 00:18:24,000
some companies and we have issues with

00:18:21,230 --> 00:18:26,280
people can't send email easily - there's

00:18:24,000 --> 00:18:28,920
there's all kind of filtering and we end

00:18:26,280 --> 00:18:31,700
up saying all of corporate contributors

00:18:28,920 --> 00:18:36,420
using their personal email addresses

00:18:31,700 --> 00:18:37,410
that's that's sad but that's not a lot

00:18:36,420 --> 00:18:40,590
we can do about it

00:18:37,410 --> 00:18:44,280
if somebody wants to tackle that idea

00:18:40,590 --> 00:18:45,720
for the next year see you know SMTP in a

00:18:44,280 --> 00:18:53,850
corporate environment I'm happy to

00:18:45,720 --> 00:18:58,460
provide material reviewer bandwidth as I

00:18:53,850 --> 00:19:02,370
said earlier reviews get a lot of emails

00:18:58,460 --> 00:19:06,510
hundreds of emails a day addressed to

00:19:02,370 --> 00:19:08,670
them directly so if you first see the

00:19:06,510 --> 00:19:10,040
patch series two days ago it looks all

00:19:08,670 --> 00:19:13,160
good gladsome with

00:19:10,040 --> 00:19:15,680
once you've made the changes require the

00:19:13,160 --> 00:19:17,230
dogs all good you're ready to post it

00:19:15,680 --> 00:19:21,680
again

00:19:17,230 --> 00:19:25,010
take a deep breath no it's it's a bit

00:19:21,680 --> 00:19:30,200
early leave some time for other people

00:19:25,010 --> 00:19:32,630
to catch up posting once a week is it's

00:19:30,200 --> 00:19:35,990
good not more than that I mean that's

00:19:32,630 --> 00:19:39,950
the rate at which we release release

00:19:35,990 --> 00:19:43,700
candidates there's no reason why you

00:19:39,950 --> 00:19:46,310
need to be more you know proactive than

00:19:43,700 --> 00:19:50,210
that and remember how long it took you

00:19:46,310 --> 00:19:52,790
to write those patches it was painful it

00:19:50,210 --> 00:19:54,950
was okay need to understand how this

00:19:52,790 --> 00:19:58,850
thing work for the reviewers long it's

00:19:54,950 --> 00:20:00,620
likely to be the same and they need time

00:19:58,850 --> 00:20:04,720
to digest your patch series and

00:20:00,620 --> 00:20:11,890
understand what you honor that

00:20:04,720 --> 00:20:17,150
so posture what's the process for them

00:20:11,890 --> 00:20:19,580
for a maintainer for a reviewer so is it

00:20:17,150 --> 00:20:24,350
something I have any interest in this is

00:20:19,580 --> 00:20:26,630
something I maintain okay sure that's

00:20:24,350 --> 00:20:29,240
the patch series overall make sense is

00:20:26,630 --> 00:20:30,950
it properly formatted do I understand

00:20:29,240 --> 00:20:33,860
the cover letter to understand the point

00:20:30,950 --> 00:20:36,440
of that patch series is there any

00:20:33,860 --> 00:20:38,600
reported failure like the cabled robot

00:20:36,440 --> 00:20:43,940
falling the meaningless picking up

00:20:38,600 --> 00:20:46,840
patches if you've broken arm or x86 with

00:20:43,940 --> 00:20:49,240
that patch series doesn't look too good

00:20:46,840 --> 00:20:52,070
is that a fixed or a feature obviously

00:20:49,240 --> 00:20:54,830
we're going to thank you prioritize

00:20:52,070 --> 00:21:01,340
fixes as more immediate attention to it

00:20:54,830 --> 00:21:05,180
and each maintainer has their own pet

00:21:01,340 --> 00:21:07,700
subject basically you have to know who

00:21:05,180 --> 00:21:13,360
you're talking to and gets just want to

00:21:07,700 --> 00:21:16,100
know what but there's something that

00:21:13,360 --> 00:21:19,550
overall goes beyond that and that's

00:21:16,100 --> 00:21:23,630
trust how we trust each other

00:21:19,550 --> 00:21:25,850
so we recognize each other so we tend to

00:21:23,630 --> 00:21:31,280
trust people who will go the extra mile

00:21:25,850 --> 00:21:33,800
who will don't just look at their small

00:21:31,280 --> 00:21:39,020
corner of the linux kernel source but

00:21:33,800 --> 00:21:42,800
will try and expand and try to do

00:21:39,020 --> 00:21:47,780
something that benefits a larger part of

00:21:42,800 --> 00:21:52,360
the kernel and then the uses so when we

00:21:47,780 --> 00:21:56,360
as maintainer or as reviewers ask

00:21:52,360 --> 00:21:58,220
contributors to you know do some extra

00:21:56,360 --> 00:22:00,290
work on a batch series I it's not free

00:21:58,220 --> 00:22:02,570
to know you has nothing to do with that

00:22:00,290 --> 00:22:06,050
meaning we don't take pleasure in asking

00:22:02,570 --> 00:22:07,550
you to do more work but it's really to

00:22:06,050 --> 00:22:08,800
improve the overall quality of the

00:22:07,550 --> 00:22:13,940
kernel because that's what we really

00:22:08,800 --> 00:22:17,110
deeply care about and eventually it's

00:22:13,940 --> 00:22:20,740
about building trust between two parties

00:22:17,110 --> 00:22:25,670
you know it's knowing that we will

00:22:20,740 --> 00:22:27,410
recognize your work and that you will do

00:22:25,670 --> 00:22:30,680
something that is good for the kernel as

00:22:27,410 --> 00:22:33,740
a whole so really it's not about you

00:22:30,680 --> 00:22:37,940
know that there's no difference we we're

00:22:33,740 --> 00:22:44,390
talking amongst equal and the real thing

00:22:37,940 --> 00:22:47,450
is about making a better kernel because

00:22:44,390 --> 00:22:48,650
the overall thing is that's how the

00:22:47,450 --> 00:22:53,330
whole Linux kernel works

00:22:48,650 --> 00:22:54,740
it's about trust between limits and some

00:22:53,330 --> 00:22:56,840
of the top level maintainer x' it's

00:22:54,740 --> 00:22:59,210
about these top level maintains and

00:22:56,840 --> 00:23:03,530
they're sub maintainer x' for lack of a

00:22:59,210 --> 00:23:05,480
better word and co maintain is of a

00:23:03,530 --> 00:23:08,180
single subsystem do trust each other

00:23:05,480 --> 00:23:13,190
in although if you don't have that you

00:23:08,180 --> 00:23:15,310
have nothing and at the end this trust

00:23:13,190 --> 00:23:19,550
is just as important as the code itself

00:23:15,310 --> 00:23:22,520
so if you don't get contributions to a

00:23:19,550 --> 00:23:26,180
project that project is effectively dead

00:23:22,520 --> 00:23:28,600
it's frozen in time forever and one of

00:23:26,180 --> 00:23:32,330
the mountain whose role is really to

00:23:28,600 --> 00:23:33,110
retain those contributors those who will

00:23:32,330 --> 00:23:37,850
read

00:23:33,110 --> 00:23:40,390
help making it a better thing and we

00:23:37,850 --> 00:23:44,299
always need new reviews new maintenance

00:23:40,390 --> 00:23:50,390
containers because those Contribution

00:23:44,299 --> 00:23:52,910
are the ones that really benefits most

00:23:50,390 --> 00:23:56,330
of the users and that requires everyone

00:23:52,910 --> 00:24:01,400
to we need to agree on how we work

00:23:56,330 --> 00:24:04,730
together so what a maintainer our

00:24:01,400 --> 00:24:07,700
reviewer asked the contributor to do

00:24:04,730 --> 00:24:10,280
somebody should work other to provide a

00:24:07,700 --> 00:24:13,220
better infrastructure to refactor some

00:24:10,280 --> 00:24:15,320
code or to move bits of code that's been

00:24:13,220 --> 00:24:21,080
squirreled away in some random driver

00:24:15,320 --> 00:24:24,290
into core code it's worth you know

00:24:21,080 --> 00:24:26,630
stepping back a bit you know look at the

00:24:24,290 --> 00:24:30,049
bigger picture I'll see how it fits in

00:24:26,630 --> 00:24:34,040
the overall kernel and if that request

00:24:30,049 --> 00:24:36,890
isn't clear really ask for clarification

00:24:34,040 --> 00:24:40,400
challenge it there's no harm in doing

00:24:36,890 --> 00:24:43,720
that and if you think that request is

00:24:40,400 --> 00:24:45,380
not justified try and come up with an

00:24:43,720 --> 00:24:47,120
alternative proposal

00:24:45,380 --> 00:24:50,660
you know maintenance are not always

00:24:47,120 --> 00:24:53,480
right you know sometimes we we need to

00:24:50,660 --> 00:24:56,600
have our eyes open and that's a good

00:24:53,480 --> 00:24:58,400
thing in the end what you want to become

00:24:56,600 --> 00:25:04,520
is the trusted maintainer of your own

00:24:58,400 --> 00:25:07,820
code you know embrace the concept so

00:25:04,520 --> 00:25:11,990
small digression here of quick cool

00:25:07,820 --> 00:25:14,840
drive-by patching so these are one of

00:25:11,990 --> 00:25:18,910
contributors we'll see one patch one

00:25:14,840 --> 00:25:21,530
patch series and never to be seen again

00:25:18,910 --> 00:25:26,299
it's the equivalent of what we call in

00:25:21,530 --> 00:25:30,500
the UK fly-tipping bit of the yeah here

00:25:26,299 --> 00:25:33,380
is be happy and disappearing so we don't

00:25:30,500 --> 00:25:37,190
want to discourage that because we get a

00:25:33,380 --> 00:25:41,220
number of bug fixes from that but we

00:25:37,190 --> 00:25:45,390
also get series that just

00:25:41,220 --> 00:25:47,480
just do not make much sense so we'd like

00:25:45,390 --> 00:25:51,480
to convince people to stick around and

00:25:47,480 --> 00:25:55,380
because in the end we all started with

00:25:51,480 --> 00:25:58,740
one single patch that single patch that

00:25:55,380 --> 00:26:02,970
got merged and that empowered us to do

00:25:58,740 --> 00:26:08,429
more so I'm not sure we can improve that

00:26:02,970 --> 00:26:11,720
it's it's a it's difficult so we just

00:26:08,429 --> 00:26:15,510
need to yeah

00:26:11,720 --> 00:26:16,080
there's no just it's hard so if you have

00:26:15,510 --> 00:26:25,380
suggestions

00:26:16,080 --> 00:26:28,740
emolia so one of the one of the best way

00:26:25,380 --> 00:26:34,770
to improve your kernel world knowledge

00:26:28,740 --> 00:26:36,360
is to become yourself a reviewer and you

00:26:34,770 --> 00:26:39,230
don't really have to be an expert in in

00:26:36,360 --> 00:26:42,539
one domain or another you just have to

00:26:39,230 --> 00:26:45,570
you know have to be able to follow some

00:26:42,539 --> 00:26:49,020
code and be interested in it I think the

00:26:45,570 --> 00:26:51,840
interest is key here and if if something

00:26:49,020 --> 00:26:54,150
seems unclear in whatever patch were you

00:26:51,840 --> 00:26:56,780
reviewing ask questions don't be afraid

00:26:54,150 --> 00:27:00,530
to do so if you don't understand it it's

00:26:56,780 --> 00:27:03,890
likely that someone else doesn't either

00:27:00,530 --> 00:27:07,820
if you spot a problem yeah please say so

00:27:03,890 --> 00:27:12,020
and at the end of the day if you're

00:27:07,820 --> 00:27:16,460
happy with the way the code looks then

00:27:12,020 --> 00:27:20,250
if you can post a reviewed by patch

00:27:16,460 --> 00:27:21,870
saying okay I reviewed that patch and to

00:27:20,250 --> 00:27:24,809
the best of my ability

00:27:21,870 --> 00:27:29,520
I think this patch is correct and makes

00:27:24,809 --> 00:27:34,080
sense and that's the important bit to

00:27:29,520 --> 00:27:37,080
the best of my ability it doesn't engage

00:27:34,080 --> 00:27:38,669
you any further nobody's going to come

00:27:37,080 --> 00:27:41,400
back at you say oh you've approve of

00:27:38,669 --> 00:27:45,510
that patch and it was wrong well as far

00:27:41,400 --> 00:27:47,940
as I can see it that patch was correct I

00:27:45,510 --> 00:27:50,060
didn't get the full picture that's fine

00:27:47,940 --> 00:27:53,720
and

00:27:50,060 --> 00:28:00,020
your input is always valuable and that's

00:27:53,720 --> 00:28:03,350
how you build trust with someone one

00:28:00,020 --> 00:28:06,890
thing that's important is please be the

00:28:03,350 --> 00:28:11,330
first person to review your own patches

00:28:06,890 --> 00:28:14,780
wait read them quite often you're going

00:28:11,330 --> 00:28:20,210
to be the first person who's going to

00:28:14,780 --> 00:28:22,550
see that decomposition of a much larger

00:28:20,210 --> 00:28:24,620
change when you look at it when you look

00:28:22,550 --> 00:28:27,560
at your code you see ok absence this

00:28:24,620 --> 00:28:30,080
disease is this and this is a big

00:28:27,560 --> 00:28:33,520
feature but when you start looking at

00:28:30,080 --> 00:28:36,620
individual patches individual patches

00:28:33,520 --> 00:28:39,170
then you start spotting things that are

00:28:36,620 --> 00:28:41,390
may not be quite right and these are

00:28:39,170 --> 00:28:46,430
things reviewers and maintenance will

00:28:41,390 --> 00:28:49,040
pick up on so do that exercise first

00:28:46,430 --> 00:28:53,540
read your own patches you'll catch basic

00:28:49,040 --> 00:28:55,310
mistakes and then put yourself in the in

00:28:53,540 --> 00:28:57,320
the maintainer shoes or the reviewers

00:28:55,310 --> 00:29:01,400
shoes does it make sense

00:28:57,320 --> 00:29:03,190
is it split in a coherent way you know

00:29:01,400 --> 00:29:06,020
well documented

00:29:03,190 --> 00:29:08,950
I've addressed all the review comments

00:29:06,020 --> 00:29:13,970
you know go back to that email thread

00:29:08,950 --> 00:29:15,980
from a week ago and okay oh may have

00:29:13,970 --> 00:29:19,280
means that comment might as well address

00:29:15,980 --> 00:29:22,370
it now before sending it again collect

00:29:19,280 --> 00:29:23,750
the Akbar's and reviewed by tags before

00:29:22,370 --> 00:29:26,990
I've put a lot of effort in reviewing

00:29:23,750 --> 00:29:29,480
you know your code don't miss out on

00:29:26,990 --> 00:29:32,080
this opportunity add them to your

00:29:29,480 --> 00:29:38,510
patches and if you've answered to that

00:29:32,080 --> 00:29:43,430
yes then it's great ship it so that's

00:29:38,510 --> 00:29:46,210
where we are contributed to Linux can be

00:29:43,430 --> 00:29:51,620
hard I mean really hard it's also

00:29:46,210 --> 00:29:53,690
extremely rewarding and we're all trying

00:29:51,620 --> 00:29:57,100
to work together in an ever-changing

00:29:53,690 --> 00:29:59,610
codebase I mean this it's like ship

00:29:57,100 --> 00:30:03,330
moving all the time

00:29:59,610 --> 00:30:05,040
and trying to understand each other's

00:30:03,330 --> 00:30:07,470
view is key

00:30:05,040 --> 00:30:09,510
we can't talk patches past each other we

00:30:07,470 --> 00:30:12,030
need to talk to each other and work

00:30:09,510 --> 00:30:16,110
together it can be hard I mean building

00:30:12,030 --> 00:30:18,620
that trust is what we're after and that

00:30:16,110 --> 00:30:21,750
makes things really really really easier

00:30:18,620 --> 00:30:24,120
so we have tools we have processes

00:30:21,750 --> 00:30:27,540
they're not always friendly but they're

00:30:24,120 --> 00:30:29,420
here for a good reason and honestly

00:30:27,540 --> 00:30:31,410
we're not trying to be difficult that's

00:30:29,420 --> 00:30:34,080
that's what it's about we're really

00:30:31,410 --> 00:30:37,440
trying to work together and if you have

00:30:34,080 --> 00:30:41,100
any question if you you're in that van

00:30:37,440 --> 00:30:43,290
if anything just ask I mean nobody's

00:30:41,100 --> 00:30:43,650
going to shout at you that's not what

00:30:43,290 --> 00:30:49,520
it's about

00:30:43,650 --> 00:30:50,830
it's about working together thank you

00:30:49,520 --> 00:30:54,089
[Applause]

00:30:50,830 --> 00:30:54,089
[Music]

00:30:54,650 --> 00:30:59,330
there's any question where microphones

00:30:59,810 --> 00:31:02,990
gentlemen here

00:31:05,530 --> 00:31:11,170
hi so this is about practices best

00:31:08,710 --> 00:31:12,880
practices or something so for example if

00:31:11,170 --> 00:31:14,710
you have a patch that was developed by

00:31:12,880 --> 00:31:17,410
somebody else and then you want to

00:31:14,710 --> 00:31:20,020
submit it upstream do you keep the sign

00:31:17,410 --> 00:31:24,340
of by four yes everyone you would keep

00:31:20,020 --> 00:31:25,930
the authorship of the oldrin author okay

00:31:24,340 --> 00:31:26,350
if you haven't changed the patch too

00:31:25,930 --> 00:31:29,110
much

00:31:26,350 --> 00:31:31,960
I mean you've rebased it or something

00:31:29,110 --> 00:31:34,330
quite similar you haven't changed the

00:31:31,960 --> 00:31:36,010
logic of the patch you would keep the

00:31:34,330 --> 00:31:39,280
authorship you would keep the sine of Pi

00:31:36,010 --> 00:31:41,590
and you would argue on and I'm guessing

00:31:39,280 --> 00:31:44,040
the order should be the author should be

00:31:41,590 --> 00:31:47,110
the original author okay unless you've

00:31:44,040 --> 00:31:51,250
changed the shape of the patch in such

00:31:47,110 --> 00:31:54,600
way that you know there's no there's no

00:31:51,250 --> 00:31:57,600
real content of the original patch left

00:31:54,600 --> 00:31:57,600
okay

00:32:05,650 --> 00:32:08,700
and the other question

00:32:11,300 --> 00:32:14,620
didn't think I'd be that clear

00:32:20,650 --> 00:32:28,070
lesser question more a remark as a

00:32:23,510 --> 00:32:31,220
maintaining myself if you haven't got

00:32:28,070 --> 00:32:33,500
any reply to your patch no nothing from

00:32:31,220 --> 00:32:36,170
from anyone on the mailing list then

00:32:33,500 --> 00:32:37,880
feel free to ping us usually absolutely

00:32:36,170 --> 00:32:40,100
give give at least a week because

00:32:37,880 --> 00:32:41,270
sometimes people only review on certain

00:32:40,100 --> 00:32:43,400
days of the week and you don't know

00:32:41,270 --> 00:32:46,760
which one it is so at least allow for a

00:32:43,400 --> 00:32:49,490
full week but don't wait for ten weeks

00:32:46,760 --> 00:32:51,110
before you ask because then it's pretty

00:32:49,490 --> 00:32:54,290
certain that it's just fell through the

00:32:51,110 --> 00:32:56,210
cracks especially high-volume mailing

00:32:54,290 --> 00:33:00,890
lists it's all too easy to miss a patch

00:32:56,210 --> 00:33:03,530
or it's got buried under all the Reds

00:33:00,890 --> 00:33:05,600
and all the messages so between one and

00:33:03,530 --> 00:33:08,900
two weeks if you haven't heard send a

00:33:05,600 --> 00:33:13,370
gentle ping people may be on vacation or

00:33:08,900 --> 00:33:16,160
sick or whatever so but it also helps to

00:33:13,370 --> 00:33:20,480
bring that patch series at the on the

00:33:16,160 --> 00:33:24,380
top of the stack every so often if it is

00:33:20,480 --> 00:33:26,390
a very big series complex then you might

00:33:24,380 --> 00:33:29,120
want to wait a bit longer because you

00:33:26,390 --> 00:33:32,060
know it takes time to review something

00:33:29,120 --> 00:33:35,120
like that there's a simple fix just ping

00:33:32,060 --> 00:33:37,520
yeah fixed fixes definitely don't

00:33:35,120 --> 00:33:40,160
hesitate to to ping yeah after a week or

00:33:37,520 --> 00:33:41,810
so if you you know if your car crashes

00:33:40,160 --> 00:33:42,740
clearly we want to know about it and if

00:33:41,810 --> 00:33:47,140
we miss that

00:33:42,740 --> 00:33:47,140
yeah please let us know thank you

00:33:53,330 --> 00:33:55,960
nope

00:33:56,830 --> 00:34:01,270
sure when you have a patch series and

00:33:59,200 --> 00:34:03,400
you've been resetting it for let's say

00:34:01,270 --> 00:34:05,410
three release cycles which happened to

00:34:03,400 --> 00:34:07,570
me and there is still no response like

00:34:05,410 --> 00:34:08,950
there even have been some acts from

00:34:07,570 --> 00:34:10,390
people not really involved with the

00:34:08,950 --> 00:34:12,970
subsystem but the maintainer simply

00:34:10,390 --> 00:34:15,580
don't respond what should you do should

00:34:12,970 --> 00:34:20,560
you escalate some somehow or it's it's

00:34:15,580 --> 00:34:24,490
hard it usually means that the

00:34:20,560 --> 00:34:29,679
maintainer fails to see the point of

00:34:24,490 --> 00:34:32,500
that series and that's difficult I would

00:34:29,679 --> 00:34:36,100
say try to find someone who could

00:34:32,500 --> 00:34:38,110
mediate that one way or another you know

00:34:36,100 --> 00:34:42,100
if you if the direct conversation

00:34:38,110 --> 00:34:43,330
doesn't work try that it doesn't work

00:34:42,100 --> 00:34:46,929
it's just there's no conversation

00:34:43,330 --> 00:34:49,420
happening because it doesn't work but

00:34:46,929 --> 00:34:51,070
then try to have a conversation with

00:34:49,420 --> 00:34:53,710
someone who could talk to that person

00:34:51,070 --> 00:34:56,850
more directly because apparently the

00:34:53,710 --> 00:35:01,930
direct email doesn't work in that case

00:34:56,850 --> 00:35:04,210
but maybe it's also something where you

00:35:01,930 --> 00:35:07,930
can take the opportunity of a conference

00:35:04,210 --> 00:35:10,810
like this I mean assuming the maintainer

00:35:07,930 --> 00:35:12,220
you want to talk to is around it'd be

00:35:10,810 --> 00:35:17,320
useful to have a face-to-face discussion

00:35:12,220 --> 00:35:19,750
and sometimes it's also about okay is am

00:35:17,320 --> 00:35:24,340
i doing the what the right thing is it

00:35:19,750 --> 00:35:25,750
is what I'm doing actually well one

00:35:24,340 --> 00:35:28,810
thing you could look at for example is

00:35:25,750 --> 00:35:36,520
has a similar approach being taken

00:35:28,810 --> 00:35:38,050
before if so why did that fail and maybe

00:35:36,520 --> 00:35:41,530
there's there's something around that is

00:35:38,050 --> 00:35:44,140
there's a sense of deja vu and the

00:35:41,530 --> 00:35:46,000
maintainer fails to be to be interested

00:35:44,140 --> 00:35:47,860
I mean without knowing the specific it's

00:35:46,000 --> 00:35:51,330
hard to give you a sense about later

00:35:47,860 --> 00:35:51,330
right we can we can take that off funny

00:35:54,679 --> 00:35:59,849
in theory and maintainer should at least

00:35:57,329 --> 00:36:01,469
acknowledge your existence but

00:35:59,849 --> 00:36:02,999
maintainer sometimes you fall off the

00:36:01,469 --> 00:36:04,949
grid entirely but but if they're

00:36:02,999 --> 00:36:06,929
actually still in the mail is responding

00:36:04,949 --> 00:36:08,759
to other people then you have an

00:36:06,929 --> 00:36:10,679
expectation they should get back to you

00:36:08,759 --> 00:36:13,619
and there are people who will help you

00:36:10,679 --> 00:36:17,130
in the end Andrew Morton takes that on

00:36:13,619 --> 00:36:19,049
as one of his Ombudsman jobs often also

00:36:17,130 --> 00:36:20,759
in any given sub system there may be

00:36:19,049 --> 00:36:22,859
other senior developers who may take up

00:36:20,759 --> 00:36:24,449
your cause but there should be somebody

00:36:22,859 --> 00:36:26,339
who can help you out you shouldn't be

00:36:24,449 --> 00:36:30,109
left out in the cold like that they

00:36:26,339 --> 00:36:32,160
should at least say no for some reason

00:36:30,109 --> 00:36:33,539
yeah I'd like to add a comment to that

00:36:32,160 --> 00:36:35,039
as well I think the key there is to

00:36:33,539 --> 00:36:37,439
involve the community because we as a

00:36:35,039 --> 00:36:39,599
community want to get code merged so you

00:36:37,439 --> 00:36:40,799
won't meet a wall in that case just try

00:36:39,599 --> 00:36:42,900
to involve as many people as you can

00:36:40,799 --> 00:36:45,079
from the community and you will get some

00:36:42,900 --> 00:36:45,079
help

00:36:52,290 --> 00:36:57,430
anything else

00:36:54,760 --> 00:36:57,880
yep but thank you very much

00:36:57,430 --> 00:37:00,590
[Applause]

00:36:57,880 --> 00:37:00,590

YouTube URL: https://www.youtube.com/watch?v=LIdznotOxvg


