Title: Civil Infrastructure Platform: Industrial Grade Open Source Base-Layer Development
Publication date: 2017-10-25
Playlist: Open Source Summit Europe & Embedded Linux Conference Europe 2017
Description: 
	Civil Infrastructure Platform: Industrial Grade Open Source Base-Layer Development - Yoshitake Kobayashi & Urs Gleim, Civil Infrastructure Platform

The Civil Infrastructure Platform (CIP) is creating a super long-term supported (SLTS) open source "base layer" for industrial grade software. The base-layer consists of SLTS kernel, basic set of open source software and standardization concepts. Since we launched in April 2016, we spent a lot of effort to realize CIP base-layer.

In this talk, we describe the current status of CIP project. First, we describe “Why CIP?” which includes project strategy, use cases, roadmap and policies. Then, we talk about technical details for each development activities for CIP base-layer. Current development activities includes not just SLTS kernel but real-time, development tools, testing and more. CIP works with related upstream projects for these activities. And finally, we discuss the future roadmap and milestones.

About Urs Gleim
Urs Gleim is leading the embedded systems group at Siemens Corporate Technology which hosts the Corporate Competence Center Embedded Linux. This team centrally provides Linux and related technologies for various Siemens products.

About Yoshitake Kobayashi
Yoshitake Kobayashi is leading an embedded Linux development team at Toshiba Corporation. This team provides Linux base system and related technologies for various products in Toshiba. His research interests include operating systems, distributed systems and dynamically reconfigurable systems.
Captions: 
	00:00:00,030 --> 00:00:05,850
okay thanks for coming our presentations

00:00:02,939 --> 00:00:09,480
I'm your Stuckey kobayashi from Toshiba

00:00:05,850 --> 00:00:13,170
and I'm reading your invitation of same

00:00:09,480 --> 00:00:17,130
in my company to provide our many

00:00:13,170 --> 00:00:22,740
products which you get on the shipping

00:00:17,130 --> 00:00:23,640
across systems thank you welcome also

00:00:22,740 --> 00:00:25,920
from my side

00:00:23,640 --> 00:00:31,500
my name's Wes climb I'm with Siemens

00:00:25,920 --> 00:00:35,070
oops we seem to have a problem with the

00:00:31,500 --> 00:00:38,579
connection no it no it works I have a

00:00:35,070 --> 00:00:41,940
similar rose and then Yoshi so we also

00:00:38,579 --> 00:00:44,280
have a team that's our logo providing

00:00:41,940 --> 00:00:47,309
Linux for different industrial devices

00:00:44,280 --> 00:00:50,070
inside the company and we both together

00:00:47,309 --> 00:00:52,500
we're founding members of the civil

00:00:50,070 --> 00:00:56,190
infrastructure platform project which is

00:00:52,500 --> 00:00:58,789
a Linux Foundation project and today we

00:00:56,190 --> 00:01:01,440
want to give you an update what happened

00:00:58,789 --> 00:01:03,210
we called it industrial open so

00:01:01,440 --> 00:01:05,760
industrial great open source base layer

00:01:03,210 --> 00:01:07,830
development and I will start with a

00:01:05,760 --> 00:01:12,740
short introduction setting the context

00:01:07,830 --> 00:01:17,240
what is it about so what is CIP and

00:01:12,740 --> 00:01:19,680
first of all yeah what is CIP it's

00:01:17,240 --> 00:01:21,990
compared to many other projects you see

00:01:19,680 --> 00:01:23,670
here on the conference it's does not

00:01:21,990 --> 00:01:26,070
have the latest and greatest newest

00:01:23,670 --> 00:01:29,130
features it's one I think it's the most

00:01:26,070 --> 00:01:34,020
conservative project you will find on

00:01:29,130 --> 00:01:36,299
the conference but nevertheless it's one

00:01:34,020 --> 00:01:39,270
of the most important projects of our

00:01:36,299 --> 00:01:42,540
civilization so we will save the world

00:01:39,270 --> 00:01:45,960
at the end and but seriously what we are

00:01:42,540 --> 00:01:49,259
going to do is we provide an open source

00:01:45,960 --> 00:01:51,899
base layer for embedded systems used in

00:01:49,259 --> 00:01:54,060
civil infrastructure systems we work

00:01:51,899 --> 00:01:57,540
closely with the communities we will see

00:01:54,060 --> 00:02:00,090
examples about this what we are not we

00:01:57,540 --> 00:02:03,000
are not a gnu/linux distribution so it's

00:02:00,090 --> 00:02:04,619
much less you will after the talk you

00:02:03,000 --> 00:02:07,799
will know what we are talking about we

00:02:04,619 --> 00:02:12,780
are really starting bottom-up here and I

00:02:07,799 --> 00:02:13,220
would briefly start explaining what kind

00:02:12,780 --> 00:02:15,110
of

00:02:13,220 --> 00:02:19,160
Oh ducts and what kind of systems we

00:02:15,110 --> 00:02:23,030
target and actually you see all the

00:02:19,160 --> 00:02:25,040
systems on this slide so the special

00:02:23,030 --> 00:02:27,170
thing about these systems is that mostly

00:02:25,040 --> 00:02:30,920
these systems are hidden you don't see

00:02:27,170 --> 00:02:33,020
them but everybody expects that they are

00:02:30,920 --> 00:02:36,440
just working and providing our

00:02:33,020 --> 00:02:40,340
electricity our water our transportation

00:02:36,440 --> 00:02:44,630
and we have some pretty typical product

00:02:40,340 --> 00:02:47,750
examples which are which our companies

00:02:44,630 --> 00:02:49,100
provide and so starting from left to

00:02:47,750 --> 00:02:51,980
right we have that all the

00:02:49,100 --> 00:02:54,770
transportation systems doing the the

00:02:51,980 --> 00:02:58,370
track controls controlling the vehicles

00:02:54,770 --> 00:03:00,740
up to ticket gates we have energy

00:02:58,370 --> 00:03:04,880
systems energy distribution power

00:03:00,740 --> 00:03:06,620
generation turbine control we have a lot

00:03:04,880 --> 00:03:10,280
of systems in the area of Industry

00:03:06,620 --> 00:03:12,790
automation controlling all the the

00:03:10,280 --> 00:03:16,670
production lines in the car

00:03:12,790 --> 00:03:21,530
manufacturers for example here you see

00:03:16,670 --> 00:03:25,750
the CNC control machines which are used

00:03:21,530 --> 00:03:29,989
for example at Foxconn for for doing the

00:03:25,750 --> 00:03:33,500
doing the the housing for iPhones and

00:03:29,989 --> 00:03:36,290
other mobile phones and communication

00:03:33,500 --> 00:03:41,769
devices we have healthcare products

00:03:36,290 --> 00:03:44,630
building automation and also

00:03:41,769 --> 00:03:47,600
broadcasting devices and if you look at

00:03:44,630 --> 00:03:50,170
all these products so we will see later

00:03:47,600 --> 00:03:53,480
there are members like Hitachi Toshiba

00:03:50,170 --> 00:03:55,760
Siemens and we all all these companies

00:03:53,480 --> 00:03:58,580
have products in this area since the

00:03:55,760 --> 00:04:00,769
early 2000s which are run by Linux so

00:03:58,580 --> 00:04:03,590
you will find examples everywhere and

00:04:00,769 --> 00:04:06,260
the older systems are more than 15 years

00:04:03,590 --> 00:04:08,600
old now and so we gained a lot of

00:04:06,260 --> 00:04:12,709
experience in using Linux in these kinds

00:04:08,600 --> 00:04:16,400
of systems and there are also some

00:04:12,709 --> 00:04:20,030
issues so the issues in those systems

00:04:16,400 --> 00:04:22,849
mainly is the long lifetime the

00:04:20,030 --> 00:04:25,420
reliability and more and more the

00:04:22,849 --> 00:04:29,320
security questions comes up

00:04:25,420 --> 00:04:31,510
and to show you the difference between

00:04:29,320 --> 00:04:33,340
all the other developments so if you

00:04:31,510 --> 00:04:36,670
look at out emotive industry or are the

00:04:33,340 --> 00:04:39,250
industries we have different

00:04:36,670 --> 00:04:42,760
requirements so these systems are

00:04:39,250 --> 00:04:45,760
long-term in the field we have also a

00:04:42,760 --> 00:04:49,510
completely different cycle development

00:04:45,760 --> 00:04:54,130
cycle and I show you one example how the

00:04:49,510 --> 00:04:56,140
typical lifetime is so this is a railway

00:04:54,130 --> 00:04:58,840
system which is still in use which is

00:04:56,140 --> 00:05:01,090
more than 40 years old so just imagine

00:04:58,840 --> 00:05:04,270
look around all these embedded parts

00:05:01,090 --> 00:05:09,280
here on the conference and that maybe

00:05:04,270 --> 00:05:12,190
meet in 40 years which is 2057 maybe the

00:05:09,280 --> 00:05:14,710
ELC is in prague again and then maybe we

00:05:12,190 --> 00:05:17,470
have a picture with the current port in

00:05:14,710 --> 00:05:20,320
the presentation and this is the life

00:05:17,470 --> 00:05:22,750
times we have to think of and if you

00:05:20,320 --> 00:05:25,420
look at the current product development

00:05:22,750 --> 00:05:27,070
cycles it really takes a long time we

00:05:25,420 --> 00:05:30,730
have three to five years development

00:05:27,070 --> 00:05:33,160
time we have again two to four years

00:05:30,730 --> 00:05:35,050
customer specific and country specific

00:05:33,160 --> 00:05:37,440
extensions especially in the railway

00:05:35,050 --> 00:05:40,330
area then we have all the safety

00:05:37,440 --> 00:05:44,290
certifications authorizations on top and

00:05:40,330 --> 00:05:46,180
each and every change takes a lot of

00:05:44,290 --> 00:05:49,710
effort to bring in to do all the

00:05:46,180 --> 00:05:52,660
certifications again for example and

00:05:49,710 --> 00:05:54,760
this is the reason combined with the

00:05:52,660 --> 00:05:58,870
fact that these systems will run for a

00:05:54,760 --> 00:06:03,400
really long time from 25 years up to 56

00:05:58,870 --> 00:06:06,430
years and power plants there you can

00:06:03,400 --> 00:06:10,060
maybe imagine that it's not an option to

00:06:06,430 --> 00:06:14,470
switch to the latest Linux kernel each

00:06:10,060 --> 00:06:16,300
and every year every two years and so we

00:06:14,470 --> 00:06:18,400
need different solutions for this and

00:06:16,300 --> 00:06:22,210
actually we already work in a different

00:06:18,400 --> 00:06:25,350
way inside the companies and there's an

00:06:22,210 --> 00:06:29,080
additional factor which which also

00:06:25,350 --> 00:06:31,780
influences this direction everybody

00:06:29,080 --> 00:06:35,380
talking is talking about IOT industry is

00:06:31,780 --> 00:06:37,990
talking about industrial IOT but but the

00:06:35,380 --> 00:06:39,070
reason why we have to look at this now

00:06:37,990 --> 00:06:42,580
as we

00:06:39,070 --> 00:06:44,440
a lot more devices here close to what we

00:06:42,580 --> 00:06:45,760
call the fields or the sensors and

00:06:44,440 --> 00:06:49,060
actors and here in the middle we have

00:06:45,760 --> 00:06:52,270
IOT gateways we have HD visors most of

00:06:49,060 --> 00:06:53,950
them are run on around Linux and the

00:06:52,270 --> 00:06:59,110
number of these devices massively

00:06:53,950 --> 00:07:01,390
increases and especially security wise

00:06:59,110 --> 00:07:03,700
it's not manageable if you have like

00:07:01,390 --> 00:07:06,610
hundreds of different products with 100

00:07:03,700 --> 00:07:09,370
and different Linux configure different

00:07:06,610 --> 00:07:15,040
Linux configurations on running on them

00:07:09,370 --> 00:07:17,830
and so this really is a huge pull in the

00:07:15,040 --> 00:07:20,010
direction of harmonization and to find a

00:07:17,830 --> 00:07:23,710
solution which is more sustainable here

00:07:20,010 --> 00:07:27,250
so we have all these devices especially

00:07:23,710 --> 00:07:29,500
in industry people move functionality

00:07:27,250 --> 00:07:34,020
down from the cloud compared to

00:07:29,500 --> 00:07:39,340
traditional IOT to these devices and

00:07:34,020 --> 00:07:41,890
this is very important currently - - to

00:07:39,340 --> 00:07:46,300
all to set up these devices in a

00:07:41,890 --> 00:07:48,340
sustainable way and otherwise the the

00:07:46,300 --> 00:07:51,940
effort maintaining these systems will

00:07:48,340 --> 00:07:54,850
kill us so the problems are summarized

00:07:51,940 --> 00:07:57,040
we have to survive a very long time

00:07:54,850 --> 00:08:02,980
we have industrial requirements

00:07:57,040 --> 00:08:05,860
robustness security reliability and what

00:08:02,980 --> 00:08:07,870
we do here also in the project project

00:08:05,860 --> 00:08:12,010
and we will go into the details pretty

00:08:07,870 --> 00:08:15,610
shortly is nothing new because this was

00:08:12,010 --> 00:08:18,760
already done for years but we did this

00:08:15,610 --> 00:08:24,000
in several companies each company on its

00:08:18,760 --> 00:08:29,680
own and we did this even multiple times

00:08:24,000 --> 00:08:31,780
for for for different products so in

00:08:29,680 --> 00:08:34,150
several companies for several products

00:08:31,780 --> 00:08:37,690
and that's why we said it's time to

00:08:34,150 --> 00:08:42,390
change something and we looked about a

00:08:37,690 --> 00:08:44,680
way to organize this we talked to our

00:08:42,390 --> 00:08:47,110
competitors and and all the people

00:08:44,680 --> 00:08:51,880
having the same problems and we we

00:08:47,110 --> 00:08:52,900
agreed that that it's nobody buys these

00:08:51,880 --> 00:08:54,670
systems because

00:08:52,900 --> 00:08:57,100
we have a special Linux version and it's

00:08:54,670 --> 00:08:59,530
just the requirement that we ensure the

00:08:57,100 --> 00:09:01,180
long-term maintenance and this is a

00:08:59,530 --> 00:09:04,540
perfect setup for a collaborative

00:09:01,180 --> 00:09:06,790
project and we decided to do this under

00:09:04,540 --> 00:09:08,350
the umbrella of the Linux Foundation so

00:09:06,790 --> 00:09:10,600
you you might know there are other

00:09:08,350 --> 00:09:12,730
projects you you if you go to the

00:09:10,600 --> 00:09:16,720
website you will recognize the names and

00:09:12,730 --> 00:09:19,120
the logos most of these projects focus

00:09:16,720 --> 00:09:20,920
on IT Enterprise and cloud technologies

00:09:19,120 --> 00:09:23,830
they have in common that a lot of

00:09:20,920 --> 00:09:27,640
companies back there so in terms of

00:09:23,830 --> 00:09:32,070
people and money and this was the reason

00:09:27,640 --> 00:09:35,860
to say okay we need the old industry

00:09:32,070 --> 00:09:37,780
collaborating in the same way focusing

00:09:35,860 --> 00:09:40,750
on long term maintenance industrial

00:09:37,780 --> 00:09:44,110
great Linux tech and a close cooperation

00:09:40,750 --> 00:09:47,320
to all the other projects and focusing a

00:09:44,110 --> 00:09:51,610
lot on upstream work so what came out in

00:09:47,320 --> 00:09:54,190
April 2016 which is one and a half years

00:09:51,610 --> 00:09:59,170
ago we founded the civil infrastructure

00:09:54,190 --> 00:10:00,880
platform and the next slide gives a

00:09:59,170 --> 00:10:03,010
brief overview who is currently

00:10:00,880 --> 00:10:05,560
participating this is Hitachi Toshiba

00:10:03,010 --> 00:10:09,730
Siemens who have roughly the same

00:10:05,560 --> 00:10:13,000
product portfolio in many areas what we

00:10:09,730 --> 00:10:16,330
do is so and then we have renesis as the

00:10:13,000 --> 00:10:18,910
first telecom vendor who uses the SIP

00:10:16,330 --> 00:10:19,540
platform as a reference platform we have

00:10:18,910 --> 00:10:21,610
codes

00:10:19,540 --> 00:10:23,710
I think with a lot of open source

00:10:21,610 --> 00:10:26,500
expertise and systems after development

00:10:23,710 --> 00:10:29,110
expertise we have pled home coming from

00:10:26,500 --> 00:10:31,620
the industrial IOT side and all these

00:10:29,110 --> 00:10:35,230
companies provide first of all people

00:10:31,620 --> 00:10:37,750
participating in all the activities but

00:10:35,230 --> 00:10:40,090
beside this they also provide a little

00:10:37,750 --> 00:10:42,240
money which gives us the freedom to fund

00:10:40,090 --> 00:10:46,000
projects related projects to fund

00:10:42,240 --> 00:10:49,840
maintain us and to really get this up to

00:10:46,000 --> 00:10:54,970
speed and this is how these kind of

00:10:49,840 --> 00:10:57,880
projects work and but what is maybe more

00:10:54,970 --> 00:11:00,600
interesting for you is what is done

00:10:57,880 --> 00:11:03,940
exactly what is the actual work going on

00:11:00,600 --> 00:11:05,120
we started really bottom-up we started

00:11:03,940 --> 00:11:08,990
with the kernel

00:11:05,120 --> 00:11:12,110
and set up the what we call super

00:11:08,990 --> 00:11:14,150
long-term supported Colonel we agreed on

00:11:12,110 --> 00:11:16,310
a kernel version we build up the

00:11:14,150 --> 00:11:19,220
infrastructure around us Yoshi will go

00:11:16,310 --> 00:11:22,040
into the details and now we are building

00:11:19,220 --> 00:11:24,320
this up bottom-up we add first packages

00:11:22,040 --> 00:11:26,570
which are the least common denominator

00:11:24,320 --> 00:11:28,130
which everybody needs but we will see

00:11:26,570 --> 00:11:30,860
it's much less than a than a

00:11:28,130 --> 00:11:34,700
distribution and the idea is to evolve

00:11:30,860 --> 00:11:37,970
this over the year so to add successive

00:11:34,700 --> 00:11:39,800
step-by-step additional packages and to

00:11:37,970 --> 00:11:42,920
really have then a common base layer

00:11:39,800 --> 00:11:45,760
which can be used by everyone and with

00:11:42,920 --> 00:11:48,560
this I would like to hand over to Yoshi

00:11:45,760 --> 00:11:59,590
going into the details of the current

00:11:48,560 --> 00:12:03,080
activities Bruce okay let me describe

00:11:59,590 --> 00:12:07,670
the current status of the cipa b3 of

00:12:03,080 --> 00:12:11,020
development so at the first I would like

00:12:07,670 --> 00:12:16,310
to announce three stops

00:12:11,020 --> 00:12:18,680
the first one is CIP just released both

00:12:16,310 --> 00:12:19,580
at desk this is a CIP connect testing

00:12:18,680 --> 00:12:24,910
environment

00:12:19,580 --> 00:12:29,480
wait why CIP project and co sync and

00:12:24,910 --> 00:12:32,870
titties are quite using lava and Connie

00:12:29,480 --> 00:12:36,290
CI and futures so this is a current kind

00:12:32,870 --> 00:12:40,010
of corporate project for that and next

00:12:36,290 --> 00:12:42,700
one is a CIP core it's just launched so

00:12:40,010 --> 00:12:46,400
we need to create a base layer for

00:12:42,700 --> 00:12:50,060
industrial grade systems so CIP core is

00:12:46,400 --> 00:12:52,820
a first step to create our base layer so

00:12:50,060 --> 00:12:58,250
I read ascribe the details in later and

00:12:52,820 --> 00:13:01,990
the last one is CIP just decided to take

00:12:58,250 --> 00:13:04,550
Debian other GOP primary distributions

00:13:01,990 --> 00:13:07,070
so then meaning of the primary

00:13:04,550 --> 00:13:11,510
distributions also I will describe it

00:13:07,070 --> 00:13:14,870
later so our scope of activity is a

00:13:11,510 --> 00:13:17,400
quite a variety of stuff but are yeah we

00:13:14,870 --> 00:13:23,339
need to prioritize

00:13:17,400 --> 00:13:26,550
some technical topics for each and when

00:13:23,339 --> 00:13:31,080
we launched the CIP project at the past

00:13:26,550 --> 00:13:36,890
we started to create a long-term support

00:13:31,080 --> 00:13:39,480
strategies which based on stable colors

00:13:36,890 --> 00:13:42,630
because long-term support is quite

00:13:39,480 --> 00:13:46,950
important as loose mentions before for

00:13:42,630 --> 00:13:51,480
our systems and the second one is real

00:13:46,950 --> 00:13:53,580
time and real time is a quote most one

00:13:51,480 --> 00:13:55,800
of the most important futures because

00:13:53,580 --> 00:13:59,550
most of controller need to support

00:13:55,800 --> 00:14:02,460
Girton futures and sat.1 is stating

00:13:59,550 --> 00:14:06,750
automations and that is already bordered

00:14:02,460 --> 00:14:09,600
disk and finally we just announced a

00:14:06,750 --> 00:14:12,150
very very build environment as a CIP

00:14:09,600 --> 00:14:19,170
call project so I will describe it on

00:14:12,150 --> 00:14:22,410
details so the first one is canary

00:14:19,170 --> 00:14:25,200
interest we pick it up there you know

00:14:22,410 --> 00:14:28,560
one corner to maintain more than ten

00:14:25,200 --> 00:14:31,589
years the second going to cream turkey

00:14:28,560 --> 00:14:34,709
or submarines testing and then see a

00:14:31,589 --> 00:14:37,170
peak or so the details of a know CIP

00:14:34,709 --> 00:14:40,800
acidity is called development and this

00:14:37,170 --> 00:14:44,970
asteroid shows details so we picked up

00:14:40,800 --> 00:14:48,360
the linux 4.4 as a CIP super momentum

00:14:44,970 --> 00:14:53,120
support corner so this corner is based

00:14:48,360 --> 00:14:58,940
on the Linux table three and probably

00:14:53,120 --> 00:15:02,130
humans may know UNIX 4.4 is maintained

00:14:58,940 --> 00:15:06,720
interest is just extended to six years

00:15:02,130 --> 00:15:07,500
and that was a great role hot one but a

00:15:06,720 --> 00:15:11,000
CIP

00:15:07,500 --> 00:15:16,080
need to have more longer-term support

00:15:11,000 --> 00:15:20,339
more than ten years so yeah we decided a

00:15:16,080 --> 00:15:23,070
maintainer very much in a heater also

00:15:20,339 --> 00:15:26,130
famous frozen's as a Debian corner

00:15:23,070 --> 00:15:28,840
maintainer so he have our experience to

00:15:26,130 --> 00:15:32,980
support our current for a long time

00:15:28,840 --> 00:15:37,110
and the latest CIP

00:15:32,980 --> 00:15:40,930
Arcana is just released on last week

00:15:37,110 --> 00:15:47,650
yeah this is an latest status for the

00:15:40,930 --> 00:15:51,250
columns and when we create corner yeah

00:15:47,650 --> 00:15:53,680
we have a quite important policy the

00:15:51,250 --> 00:15:57,400
first one policy is a opposite in first

00:15:53,680 --> 00:16:01,240
policy without this policy

00:15:57,400 --> 00:16:04,839
I believe we can't maintain calling for

00:16:01,240 --> 00:16:09,820
a long time because if we hover some

00:16:04,839 --> 00:16:14,260
local parties it caused serious

00:16:09,820 --> 00:16:15,610
relational issues in the future so this

00:16:14,260 --> 00:16:20,380
is why are we clear

00:16:15,610 --> 00:16:24,310
we have a option wisely host and then

00:16:20,380 --> 00:16:27,820
yeah we currently back ported some

00:16:24,310 --> 00:16:30,670
futures from upstream corners and we

00:16:27,820 --> 00:16:33,490
only focus on limited futures because if

00:16:30,670 --> 00:16:36,550
we are back ported a lot of stuffs from

00:16:33,490 --> 00:16:41,320
the upstream corner it's also called

00:16:36,550 --> 00:16:44,560
serious issues and fortunately in our

00:16:41,320 --> 00:16:48,910
use case doesn't need to support a lot

00:16:44,560 --> 00:16:53,850
of new futures because we are kind of a

00:16:48,910 --> 00:16:57,190
conservative project and now we have a

00:16:53,850 --> 00:17:00,450
some security features and also a both

00:16:57,190 --> 00:17:05,199
support packages from the ops in Korea

00:17:00,450 --> 00:17:09,459
and to maintain the CIP corner we have a

00:17:05,199 --> 00:17:13,600
good example here so we picked up the

00:17:09,459 --> 00:17:16,030
stable corner and the button is a four

00:17:13,600 --> 00:17:18,010
point four so four point four is

00:17:16,030 --> 00:17:20,939
currently under maintained by a great

00:17:18,010 --> 00:17:23,980
hole Hartmann but our CIP our

00:17:20,939 --> 00:17:29,080
maintenance the hatching also helping

00:17:23,980 --> 00:17:32,260
them to review the parties so recently

00:17:29,080 --> 00:17:34,810
on this patch is submitted for 4.4

00:17:32,260 --> 00:17:38,580
stable ribeirão but also i've been

00:17:34,810 --> 00:17:42,070
reviewed are dispatches so this one

00:17:38,580 --> 00:17:47,020
right cause memory leak

00:17:42,070 --> 00:17:55,320
this kind of stuff done by CIP to make a

00:17:47,020 --> 00:17:59,830
stable corner more stable and probably

00:17:55,320 --> 00:18:04,510
here maybe I also creating a super long

00:17:59,830 --> 00:18:07,270
time sub typed systems and maybe I want

00:18:04,510 --> 00:18:11,290
to know the next CIPA 30s conversions

00:18:07,270 --> 00:18:15,520
but currently we focusing on 4.4 to

00:18:11,290 --> 00:18:20,590
maintain a super long time and neck next

00:18:15,520 --> 00:18:24,520
version we just say approximately 2 to 3

00:18:20,590 --> 00:18:26,170
years and yeah will be happened maybe

00:18:24,520 --> 00:18:29,710
young SEO

00:18:26,170 --> 00:18:33,460
yar next but at that time you're also

00:18:29,710 --> 00:18:39,250
prone to pick up the core network from

00:18:33,460 --> 00:18:44,410
just a book 23 because otherwise yeah we

00:18:39,250 --> 00:18:48,220
just making one corner without any help

00:18:44,410 --> 00:18:56,620
we will try to collaborate to the stable

00:18:48,220 --> 00:19:00,430
corner development so and we knows some

00:18:56,620 --> 00:19:03,490
vendor won't have out of the tree

00:19:00,430 --> 00:19:08,920
drivers to support their both support

00:19:03,490 --> 00:19:11,680
packages and in CIP in general we can

00:19:08,920 --> 00:19:18,730
say all out of these drivers are not

00:19:11,680 --> 00:19:22,440
supported by CIP but even that it is

00:19:18,730 --> 00:19:25,750
also a useful CIP Canada because I'm

00:19:22,440 --> 00:19:30,970
most of the common part is maintained by

00:19:25,750 --> 00:19:34,990
CIP and maybe ISO C beta only need to

00:19:30,970 --> 00:19:43,120
support and there are device specific

00:19:34,990 --> 00:19:47,350
part was the parameter okay so next one

00:19:43,120 --> 00:19:49,660
is a print out key but most of members

00:19:47,350 --> 00:19:52,900
in the industrial area want to support

00:19:49,660 --> 00:19:55,540
the airtime futures and currently are

00:19:52,900 --> 00:19:59,830
real-time patch is development our real

00:19:55,540 --> 00:20:03,520
timeliness project we picked up the

00:19:59,830 --> 00:20:10,140
earlier time patch from the step art III

00:20:03,520 --> 00:20:13,570
and also a magic to the CIP tree so

00:20:10,140 --> 00:20:19,360
currently the CIP RT is under

00:20:13,570 --> 00:20:22,840
development and not part of the CIP or

00:20:19,360 --> 00:20:26,710
shell project yet but an soon will be

00:20:22,840 --> 00:20:30,340
yeah become a CRP of sharp dip into the

00:20:26,710 --> 00:20:33,130
CIP official repository so if you want

00:20:30,340 --> 00:20:39,940
to see the current development status

00:20:33,130 --> 00:20:43,120
you can go to a detox with github and

00:20:39,940 --> 00:20:45,790
the most importantly the CRP is just

00:20:43,120 --> 00:20:48,400
joined or the Earth's real-time Linux

00:20:45,790 --> 00:20:50,430
project as a gold members so we will try

00:20:48,400 --> 00:20:52,720
to help in their support and we

00:20:50,430 --> 00:20:55,710
discussing about stable archie

00:20:52,720 --> 00:21:01,630
maintenance together with real-time

00:20:55,710 --> 00:21:03,880
linux project so if you want have more

00:21:01,630 --> 00:21:09,430
informations you can go to a linux get

00:21:03,880 --> 00:21:13,240
an just project page so next one is a

00:21:09,430 --> 00:21:16,870
CIP testing and this file shows that the

00:21:13,240 --> 00:21:21,040
milestones or the CIP testing at the

00:21:16,870 --> 00:21:25,570
beginning we need to create one testing

00:21:21,040 --> 00:21:27,970
environment which can use for the not

00:21:25,570 --> 00:21:31,350
only ACIP members but also economy

00:21:27,970 --> 00:21:37,540
developers so we created a border desk

00:21:31,350 --> 00:21:41,740
for single developer to support to use

00:21:37,540 --> 00:21:46,870
the testing environment on the on top of

00:21:41,740 --> 00:21:51,370
the desk the next milestone is epic on

00:21:46,870 --> 00:21:53,410
existing we start we need to start share

00:21:51,370 --> 00:21:55,090
piconet testing as soon as possible

00:21:53,410 --> 00:21:58,990
because our testing is a quite

00:21:55,090 --> 00:22:04,210
important for us and currently are we

00:21:58,990 --> 00:22:07,330
are we I think yeah we are on this stage

00:22:04,210 --> 00:22:13,500
and trying to define the kind of testing

00:22:07,330 --> 00:22:17,200
more concretely and yes EAP and this

00:22:13,500 --> 00:22:23,680
just announced CIP testing environment

00:22:17,200 --> 00:22:27,040
what a desk bottom one is released so we

00:22:23,680 --> 00:22:29,130
are going to the DC URL you can find the

00:22:27,040 --> 00:22:31,930
details of the bullet

00:22:29,130 --> 00:22:34,630
environment so there are a lot of um

00:22:31,930 --> 00:22:37,750
document available which includes how to

00:22:34,630 --> 00:22:41,530
set up the water test for your use case

00:22:37,750 --> 00:22:46,240
and also what kind of things can be done

00:22:41,530 --> 00:22:50,470
by a board at task so this is quite easy

00:22:46,240 --> 00:22:54,430
to use and based on the upstream project

00:22:50,470 --> 00:22:56,860
like O'Connor CII and - so this is also

00:22:54,430 --> 00:23:00,160
commonly used for the connect developers

00:22:56,860 --> 00:23:07,450
that's why we choose this kind of stuffs

00:23:00,160 --> 00:23:10,540
to include our board disk and next step

00:23:07,450 --> 00:23:14,110
we also not want to collaborate with

00:23:10,540 --> 00:23:18,190
other testing a poor effort for example

00:23:14,110 --> 00:23:21,130
automotive grade Linux also using column

00:23:18,190 --> 00:23:24,010
C I and the lava tool for the

00:23:21,130 --> 00:23:28,090
environment for testing environment so

00:23:24,010 --> 00:23:32,250
we would like to collaborate to share

00:23:28,090 --> 00:23:39,880
the this kind of effort with other

00:23:32,250 --> 00:23:42,010
projects so unless things we also define

00:23:39,880 --> 00:23:45,130
and try to define the hot rest should

00:23:42,010 --> 00:23:49,270
like and also how results should be

00:23:45,130 --> 00:23:52,690
shared because sharing the testing

00:23:49,270 --> 00:23:56,530
result is important for the college

00:23:52,690 --> 00:23:59,080
developers so to recognize the

00:23:56,530 --> 00:24:01,450
regressions so we interact to share that

00:23:59,080 --> 00:24:03,820
this testing result so this kind of

00:24:01,450 --> 00:24:06,690
futures will be added to their product

00:24:03,820 --> 00:24:06,690
desk in soon

00:24:06,910 --> 00:24:15,190
and now I'd like to say our CIP decided

00:24:12,790 --> 00:24:17,890
debian as a CIP primary different

00:24:15,190 --> 00:24:20,110
distributions and the meaning of

00:24:17,890 --> 00:24:23,650
reference this primary reference

00:24:20,110 --> 00:24:27,070
distribution is CIP would like to work

00:24:23,650 --> 00:24:31,990
with Debian to have a longer term

00:24:27,070 --> 00:24:35,340
support and also CIP will select a CIP

00:24:31,990 --> 00:24:38,590
core packages from MTV on part is it

00:24:35,340 --> 00:24:40,660
because currently a Debian have a long

00:24:38,590 --> 00:24:44,110
term support project inside the Debian

00:24:40,660 --> 00:24:48,340
project and they currently have five

00:24:44,110 --> 00:24:51,730
years support Tom but CIP requirement is

00:24:48,340 --> 00:24:54,970
for example mo 10 years or more so we

00:24:51,730 --> 00:25:02,100
would like to fill this kind of gaps to

00:24:54,970 --> 00:25:05,110
by collaborating with distributions and

00:25:02,100 --> 00:25:08,560
GOP members also interested in I hope to

00:25:05,110 --> 00:25:11,280
project as a building systems so Yocto

00:25:08,560 --> 00:25:22,350
project is a quite tricks or framework

00:25:11,280 --> 00:25:26,140
for us to build and by GOP base radio so

00:25:22,350 --> 00:25:29,680
the shape of the CIP or base rail is

00:25:26,140 --> 00:25:33,910
quite small at the beginning as you can

00:25:29,680 --> 00:25:36,250
see in this list there are I think are

00:25:33,910 --> 00:25:41,050
less than 10 packages here it which

00:25:36,250 --> 00:25:43,630
includes a corner itself so we drag we

00:25:41,050 --> 00:25:47,940
should have corner

00:25:43,630 --> 00:25:51,280
of course and very bisque UT keys and

00:25:47,940 --> 00:25:57,580
libraries and the security features and

00:25:51,280 --> 00:26:00,310
so on so we usually start as you said as

00:25:57,580 --> 00:26:07,000
you said we start as minimum as possible

00:26:00,310 --> 00:26:09,870
this is our initial candidates with a

00:26:07,000 --> 00:26:09,870
component set

00:26:10,430 --> 00:26:20,730
so to define the component set we yeah

00:26:16,890 --> 00:26:25,020
almost concrete idea as minimum as

00:26:20,730 --> 00:26:26,100
possible but defining component version

00:26:25,020 --> 00:26:30,300
is quite difficult

00:26:26,100 --> 00:26:34,400
that's why we we direct to collaborate

00:26:30,300 --> 00:26:39,660
with other distributions such as Libya

00:26:34,400 --> 00:26:43,940
so actually a C epic whole package

00:26:39,660 --> 00:26:47,100
development either started and CIP who

00:26:43,940 --> 00:26:52,110
aims to provide a way to create and

00:26:47,100 --> 00:26:56,430
testing in storable images so this

00:26:52,110 --> 00:27:00,240
figure shows what is what will be done

00:26:56,430 --> 00:27:03,210
by CIP core Sochi IP core user of

00:27:00,240 --> 00:27:06,120
constancy appear Conner and Debian

00:27:03,210 --> 00:27:08,550
source code or Debian builder and pretty

00:27:06,120 --> 00:27:11,430
packages to create a minimum based

00:27:08,550 --> 00:27:16,880
systems this is a concept of the CIP

00:27:11,430 --> 00:27:21,000
core to created minimum systems we use a

00:27:16,880 --> 00:27:23,940
bit break or Debian binary Debian

00:27:21,000 --> 00:27:26,040
packaging systems and currently we

00:27:23,940 --> 00:27:29,940
already started this project internally

00:27:26,040 --> 00:27:32,070
and already supported some borders which

00:27:29,940 --> 00:27:36,960
include renessa support and bigger bomb

00:27:32,070 --> 00:27:38,940
brock something like that so the

00:27:36,960 --> 00:27:41,160
currency status of CIP code development

00:27:38,940 --> 00:27:42,630
is based on the method debian layer

00:27:41,160 --> 00:27:49,590
which called the Debbie

00:27:42,630 --> 00:27:52,970
so this create tank systems based on the

00:27:49,590 --> 00:27:58,200
Debian source code and Conan source code

00:27:52,970 --> 00:28:01,320
but we also try to use binaries because

00:27:58,200 --> 00:28:05,700
pre-built wineries actually can

00:28:01,320 --> 00:28:08,600
accelerate our development time so there

00:28:05,700 --> 00:28:12,300
are some protists already available

00:28:08,600 --> 00:28:15,780
which are easier and the other one is LP

00:28:12,300 --> 00:28:19,290
so this kind of effort also directly

00:28:15,780 --> 00:28:22,309
consider to use inside the CIP to build

00:28:19,290 --> 00:28:26,880
a CIP kora

00:28:22,309 --> 00:28:31,170
and this one shows the different and

00:28:26,880 --> 00:28:37,410
also a common part over the currently

00:28:31,170 --> 00:28:40,740
available heaters so as you can see for

00:28:37,410 --> 00:28:45,000
example either and repair using a debian

00:28:40,740 --> 00:28:48,000
binary but they be using source code but

00:28:45,000 --> 00:28:52,020
Debbie and either using a bit back and

00:28:48,000 --> 00:28:54,480
something like that so currently this

00:28:52,020 --> 00:28:59,040
three project also talking each other

00:28:54,480 --> 00:29:05,580
how to join nor how to match their

00:28:59,040 --> 00:29:13,080
effort in together because we all three

00:29:05,580 --> 00:29:16,950
project based on Debian so these ratios

00:29:13,080 --> 00:29:20,790
are caps and common goals between Debian

00:29:16,950 --> 00:29:25,020
and CIP so currently Debian's support

00:29:20,790 --> 00:29:31,080
five years of all time but we would like

00:29:25,020 --> 00:29:34,020
to extend to more than ten years and the

00:29:31,080 --> 00:29:36,919
other possible option is or open-source

00:29:34,020 --> 00:29:42,240
license compressed maybe has a quite

00:29:36,919 --> 00:29:45,660
nice label process to have a license

00:29:42,240 --> 00:29:48,900
comprised and they also decide to use

00:29:45,660 --> 00:29:51,630
the pipe format which is a very similar

00:29:48,900 --> 00:29:54,299
with SPD X which are defined by Linux

00:29:51,630 --> 00:29:58,350
foundations so if they are created a

00:29:54,299 --> 00:30:00,600
pipe doctrines it's easy to generate the

00:29:58,350 --> 00:30:04,140
license informations for each customized

00:30:00,600 --> 00:30:06,870
project so we drag to exchange this kind

00:30:04,140 --> 00:30:08,630
of version license label result which we

00:30:06,870 --> 00:30:12,630
already done internally

00:30:08,630 --> 00:30:14,910
so this kind effect can be done and the

00:30:12,630 --> 00:30:19,100
other stuffs we are discussing is a

00:30:14,910 --> 00:30:23,270
function of safety or this one and year

00:30:19,100 --> 00:30:27,299
2038 issues on security and so on so

00:30:23,270 --> 00:30:29,640
this kind will start just started to

00:30:27,299 --> 00:30:32,370
discussion but this is Minos this kind

00:30:29,640 --> 00:30:34,830
of airport also are important for the

00:30:32,370 --> 00:30:37,010
other project so we will directly Robert

00:30:34,830 --> 00:30:46,200
visa

00:30:37,010 --> 00:30:51,030
so this is my thank you so let me just

00:30:46,200 --> 00:30:54,180
two minutes just summarize what we heard

00:30:51,030 --> 00:30:57,630
thanks Yoshi so what should stick in

00:30:54,180 --> 00:31:00,840
your mind is CIP is the open source base

00:30:57,630 --> 00:31:04,080
layer for industry at least will be in

00:31:00,840 --> 00:31:07,700
the future we currently focus on kernel

00:31:04,080 --> 00:31:10,680
maintenance including real-time support

00:31:07,700 --> 00:31:12,840
testing which is very important for us

00:31:10,680 --> 00:31:15,840
to build up a common test infrastructure

00:31:12,840 --> 00:31:18,330
- sure to share the test results and to

00:31:15,840 --> 00:31:23,670
share the tests inside the project and

00:31:18,330 --> 00:31:26,400
also outside and the third point was the

00:31:23,670 --> 00:31:28,980
CIP core packages really starting

00:31:26,400 --> 00:31:31,740
bottom-up with a minimal set which can

00:31:28,980 --> 00:31:34,530
be long-term maintained which is much

00:31:31,740 --> 00:31:36,720
much more complicated than just the

00:31:34,530 --> 00:31:39,720
kernel and the kernel is complicated

00:31:36,720 --> 00:31:44,940
enough we will hear more in another talk

00:31:39,720 --> 00:31:49,350
I will come to this in a minute so what

00:31:44,940 --> 00:31:51,690
we currently get on as feedback so we

00:31:49,350 --> 00:31:54,720
hit the right time to start this project

00:31:51,690 --> 00:31:58,230
we have a very good feedback inside our

00:31:54,720 --> 00:32:00,840
companies and also outside we provide

00:31:58,230 --> 00:32:04,500
this base layer based on Linux this is

00:32:00,840 --> 00:32:08,160
clear we have big companies backing this

00:32:04,500 --> 00:32:10,860
and with also a semiconductor company

00:32:08,160 --> 00:32:13,970
joining us with renesis this really

00:32:10,860 --> 00:32:16,590
pushed this hopefully others will join

00:32:13,970 --> 00:32:20,310
we have a close cooperation with with

00:32:16,590 --> 00:32:23,010
other projects debian parameter T we use

00:32:20,310 --> 00:32:23,850
Carl C I lava and also we don't reinvent

00:32:23,010 --> 00:32:26,160
the wheel

00:32:23,850 --> 00:32:30,120
we try to bring together what is already

00:32:26,160 --> 00:32:32,580
there and adapted to our needs we have a

00:32:30,120 --> 00:32:34,740
strong emphasis on to change because we

00:32:32,580 --> 00:32:38,280
believe this is important to to make

00:32:34,740 --> 00:32:42,240
this manageable at the end and we talked

00:32:38,280 --> 00:32:45,750
about the tests a lot and last but not

00:32:42,240 --> 00:32:48,730
least inside our companies at Toshiba

00:32:45,750 --> 00:32:50,890
Siemens itachi where we get a strong

00:32:48,730 --> 00:32:53,380
traction so we have a lot of products we

00:32:50,890 --> 00:32:57,520
have a lot of business units these

00:32:53,380 --> 00:32:59,350
companies are really big so people are

00:32:57,520 --> 00:33:03,400
calling us and want to join these

00:32:59,350 --> 00:33:07,929
efforts also company internally so it's

00:33:03,400 --> 00:33:10,780
getting up to speed as far as as quickly

00:33:07,929 --> 00:33:14,020
as it's possible for these domains and

00:33:10,780 --> 00:33:16,090
these big companies so everything takes

00:33:14,020 --> 00:33:21,490
a while but we really see traction now

00:33:16,090 --> 00:33:25,929
and I would give you also some hints on

00:33:21,490 --> 00:33:28,600
other talks so in meetings so after this

00:33:25,929 --> 00:33:30,549
meeting there will be a CIP developers

00:33:28,600 --> 00:33:33,299
meeting which is open for everybody so

00:33:30,549 --> 00:33:37,600
everybody who's interested please join

00:33:33,299 --> 00:33:39,640
then later this afternoon we have a we

00:33:37,600 --> 00:33:42,460
have a talk going more into the

00:33:39,640 --> 00:33:47,890
maintenance topic by Augustine and Penn

00:33:42,460 --> 00:33:50,410
who are also here in the room and last

00:33:47,890 --> 00:33:53,080
but not least we have the keynote by an

00:33:50,410 --> 00:33:59,140
a colleague of mine who's also here on

00:33:53,080 --> 00:34:01,240
Wednesday morning so please join us for

00:33:59,140 --> 00:34:04,929
the for the next talks we also have a

00:34:01,240 --> 00:34:08,800
booth you will find us on this upper

00:34:04,929 --> 00:34:11,770
level it looks like this so you work now

00:34:08,800 --> 00:34:14,169
it's the logo you see some demos some

00:34:11,770 --> 00:34:17,050
examples we have a bought a desk Taymor

00:34:14,169 --> 00:34:20,500
between 3:00 and 4:00 4:30

00:34:17,050 --> 00:34:24,790
there is somebody giving demos so have a

00:34:20,500 --> 00:34:28,800
look at this and yeah with this we both

00:34:24,790 --> 00:34:35,429
thank you very much for attending and

00:34:28,800 --> 00:34:35,429
now we are open for questions

00:34:44,409 --> 00:34:48,770
are you thinking about an XP platform as

00:34:47,929 --> 00:34:50,419
possible

00:34:48,770 --> 00:34:52,129
testing platform or something about it

00:34:50,419 --> 00:34:54,919
because they have definitely bigger

00:34:52,129 --> 00:34:57,110
great of the temperatures and this kind

00:34:54,919 --> 00:35:06,619
of stuff and they definitely have really

00:34:57,110 --> 00:35:09,500
nice BSP of course in our industries we

00:35:06,619 --> 00:35:12,560
use also an XP platforms but an XP

00:35:09,500 --> 00:35:14,750
currently is not yet a member so we are

00:35:12,560 --> 00:35:17,330
focusing on the reference parts of the

00:35:14,750 --> 00:35:21,040
members currently so maybe an XP is

00:35:17,330 --> 00:35:21,040
interested in joining us and

00:35:47,880 --> 00:35:54,480
okay there was another question I have

00:35:52,230 --> 00:35:57,960
to question actually and one is related

00:35:54,480 --> 00:36:00,390
to two one related to cybersecurity

00:35:57,960 --> 00:36:02,610
I work for a GL so we don't have to keep

00:36:00,390 --> 00:36:04,500
the stuff for so long but you know first

00:36:02,610 --> 00:36:07,080
ten years is plenty enough

00:36:04,500 --> 00:36:09,330
the first question about tool is what is

00:36:07,080 --> 00:36:13,050
your strategy to allow to keep wielding

00:36:09,330 --> 00:36:14,790
all stuff on new PC which problem I had

00:36:13,050 --> 00:36:16,530
in telecom 20 years ago where you have

00:36:14,790 --> 00:36:18,300
to rebuild a software which is 20 years

00:36:16,530 --> 00:36:19,770
ago but obviously the machine which was

00:36:18,300 --> 00:36:21,990
used to build it doesn't exist anymore

00:36:19,770 --> 00:36:25,250
and so you have a new one with a new

00:36:21,990 --> 00:36:27,240
tool and especially if you build using

00:36:25,250 --> 00:36:28,860
demian tool which are not really

00:36:27,240 --> 00:36:30,630
cross-compilation based it's very

00:36:28,860 --> 00:36:32,310
difficult to rebuild the old tool and

00:36:30,630 --> 00:36:33,960
then quite often you cannot rebuild the

00:36:32,310 --> 00:36:35,670
old software I've not seen anything of

00:36:33,960 --> 00:36:38,130
that I would be interested to know what

00:36:35,670 --> 00:36:40,290
your vision and the second one related

00:36:38,130 --> 00:36:41,520
to cybersecurity I have not seen

00:36:40,290 --> 00:36:44,490
anything about management of

00:36:41,520 --> 00:36:47,610
connectivity and protocol stack and

00:36:44,490 --> 00:36:49,530
communications which it's going likely

00:36:47,610 --> 00:36:51,320
to be fairly difficult to keep static

00:36:49,530 --> 00:36:53,490
during 20 or 30 years because

00:36:51,320 --> 00:36:55,380
cybersecurity is going to hack it and

00:36:53,490 --> 00:36:56,640
likely will have to change it what is

00:36:55,380 --> 00:37:04,370
your vision on how you're going to

00:36:56,640 --> 00:37:04,370
manage that maybe start with the tools

00:37:05,450 --> 00:37:15,930
yeah yeah we know hardware yeah it's

00:37:10,530 --> 00:37:18,000
quite fast development but we director

00:37:15,930 --> 00:37:20,840
no keep the development to it as long as

00:37:18,000 --> 00:37:24,330
possible based on using for example

00:37:20,840 --> 00:37:29,040
doctor or virtualization environments to

00:37:24,330 --> 00:37:33,540
able to clip produce in a breeding

00:37:29,040 --> 00:37:35,660
environment so this is actually

00:37:33,540 --> 00:37:41,190
currently we are doing not to keep

00:37:35,660 --> 00:37:44,010
inside the company and but it's all the

00:37:41,190 --> 00:37:47,130
data taking our more than five years it

00:37:44,010 --> 00:37:52,200
works but not for we don't have a

00:37:47,130 --> 00:37:56,210
experience for more than 10 years yet is

00:37:52,200 --> 00:37:56,210
it answer to your questions

00:38:00,130 --> 00:38:03,789
yeah we actually do the same as

00:38:02,509 --> 00:38:10,430
everybody does

00:38:03,789 --> 00:38:12,619
using VM images archiving them and so

00:38:10,430 --> 00:38:15,650
there's at least ensures that we can

00:38:12,619 --> 00:38:18,140
reproduce the bills that we have so we

00:38:15,650 --> 00:38:21,440
have to put in all dependencies and can

00:38:18,140 --> 00:38:23,380
archive those regarding the connectivity

00:38:21,440 --> 00:38:27,799
question about the network stacks and

00:38:23,380 --> 00:38:32,480
protocols it's not addressed in this

00:38:27,799 --> 00:38:35,539
project yet so we cannot solve every all

00:38:32,480 --> 00:38:37,519
the problems at once so we decided to go

00:38:35,539 --> 00:38:41,480
step by step and start with the kernel

00:38:37,519 --> 00:38:44,809
which is difficult enough and then as I

00:38:41,480 --> 00:38:47,599
said at additional packages regarding

00:38:44,809 --> 00:38:50,240
the network sticks what what is

00:38:47,599 --> 00:38:53,420
currently done is to it we work on the

00:38:50,240 --> 00:38:57,579
update mechanisms to make this robust

00:38:53,420 --> 00:39:00,380
and secure to be able to exchange the

00:38:57,579 --> 00:39:04,279
the upper layers in a robust way but

00:39:00,380 --> 00:39:08,869
this isn't it's on the list in those

00:39:04,279 --> 00:39:11,299
projects on the on the yeah topic list

00:39:08,869 --> 00:39:14,299
but it's it's not addressed yet because

00:39:11,299 --> 00:39:16,670
we are we have enough work with the

00:39:14,299 --> 00:39:18,819
existing topics already so we go step by

00:39:16,670 --> 00:39:18,819
step

00:39:29,420 --> 00:39:36,089
stephane working also on edge here it's

00:39:34,260 --> 00:39:38,910
a good idea to try to build things for a

00:39:36,089 --> 00:39:41,720
long time but the question immediately

00:39:38,910 --> 00:39:44,040
just after is how do you regret your

00:39:41,720 --> 00:39:47,250
devices or whatever will use your

00:39:44,040 --> 00:39:49,890
distribution because what we we hit on

00:39:47,250 --> 00:39:53,160
AGL is that we may have multiple ways to

00:39:49,890 --> 00:39:55,319
upgrade what's in the car okay and only

00:39:53,160 --> 00:39:58,710
the IBI system but also telematics

00:39:55,319 --> 00:40:01,109
system gateways or whatever but we see

00:39:58,710 --> 00:40:03,480
that there is no real full solution I

00:40:01,109 --> 00:40:05,730
mean on the client-side or all the

00:40:03,480 --> 00:40:09,420
device side and the server side to

00:40:05,730 --> 00:40:13,200
handle millions of small devices or be

00:40:09,420 --> 00:40:16,500
cars but it's fact it's the same for us

00:40:13,200 --> 00:40:18,270
so do you envision something that could

00:40:16,500 --> 00:40:20,010
be done at CIP level and could be reused

00:40:18,270 --> 00:40:23,160
by other projects as well or do you just

00:40:20,010 --> 00:40:24,900
plant first - as you said for the kernel

00:40:23,160 --> 00:40:29,460
just to try to stabilize the carrier and

00:40:24,900 --> 00:40:31,790
just try to use what exists yeah the

00:40:29,460 --> 00:40:35,270
answer is pretty much the same as before

00:40:31,790 --> 00:40:40,380
because yes we also faced this problem

00:40:35,270 --> 00:40:41,849
we didn't put it in this project yet and

00:40:40,380 --> 00:40:45,960
there are solutions in the different

00:40:41,849 --> 00:40:48,240
companies already and there are

00:40:45,960 --> 00:40:50,369
discussions and there are candidates to

00:40:48,240 --> 00:40:55,079
be moved also in this software stack

00:40:50,369 --> 00:40:57,750
then but as I said it's not on the list

00:40:55,079 --> 00:41:00,630
or it's not on the it's not decided

00:40:57,750 --> 00:41:03,420
today maybe next year we can tell more

00:41:00,630 --> 00:41:06,170
about this but we really want to set up

00:41:03,420 --> 00:41:09,089
a sustainable software stack and not put

00:41:06,170 --> 00:41:12,240
not create a big software stack at the

00:41:09,089 --> 00:41:15,930
beginning just keep it manageable and

00:41:12,240 --> 00:41:19,160
that's heavy enough at the beginning to

00:41:15,930 --> 00:41:24,599
start with kernel and some packages

00:41:19,160 --> 00:41:28,440
anything that they also said our concept

00:41:24,599 --> 00:41:32,700
is just we provide a base layer so 2x to

00:41:28,440 --> 00:41:36,240
use for any product so they can extend

00:41:32,700 --> 00:41:38,180
the base layer to fit their use case so

00:41:36,240 --> 00:41:40,619
this is our concept

00:41:38,180 --> 00:41:42,450
maybe one thing that you can imagine how

00:41:40,619 --> 00:41:44,730
we use this also in the company so

00:41:42,450 --> 00:41:47,940
there's this base layer provided by CIP

00:41:44,730 --> 00:41:53,549
then in many cases there's a central

00:41:47,940 --> 00:41:56,390
unit providing additional functionality

00:41:53,549 --> 00:41:58,890
or additional packages on top of this

00:41:56,390 --> 00:42:00,960
maintaining this company internally and

00:41:58,890 --> 00:42:03,809
then there are the different product

00:42:00,960 --> 00:42:05,010
units who also put something on top so

00:42:03,809 --> 00:42:09,569
you have a three layer approach

00:42:05,010 --> 00:42:21,839
basically if you just look it from the

00:42:09,569 --> 00:42:23,609
10,000 feet view last question I guess

00:42:21,839 --> 00:42:25,200
that your answer would might be the same

00:42:23,609 --> 00:42:27,480
but have you done any tests in the

00:42:25,200 --> 00:42:29,069
future because I've been bit doing bids

00:42:27,480 --> 00:42:32,250
in the future for ripples were builds

00:42:29,069 --> 00:42:35,279
and we noticed that some keys expire and

00:42:32,250 --> 00:42:36,630
if you build in ten years many keys will

00:42:35,279 --> 00:42:39,029
have expired of the software when you

00:42:36,630 --> 00:42:54,809
validate it and have you tried building

00:42:39,029 --> 00:42:56,990
beyond 2038 your che have we Yan do you

00:42:54,809 --> 00:42:56,990
know

00:42:58,760 --> 00:43:02,230
[Laughter]

00:43:07,780 --> 00:43:14,089
okay let's stick with it's a good point

00:43:11,720 --> 00:43:14,960
so thank you very much for attending see

00:43:14,089 --> 00:43:19,719
you

00:43:14,960 --> 00:43:19,719

YouTube URL: https://www.youtube.com/watch?v=0h_QGw5T_nM


