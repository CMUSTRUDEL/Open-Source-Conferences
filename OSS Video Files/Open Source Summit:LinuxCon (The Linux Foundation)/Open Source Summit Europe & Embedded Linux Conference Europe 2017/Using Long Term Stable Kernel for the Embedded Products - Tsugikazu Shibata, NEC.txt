Title: Using Long Term Stable Kernel for the Embedded Products - Tsugikazu Shibata, NEC
Publication date: 2017-10-24
Playlist: Open Source Summit Europe & Embedded Linux Conference Europe 2017
Description: 
	Using Long Term Stable Kernel for the Embedded Products - Tsugikazu Shibata, NEC

Many of embedded industry people know that LTS and LTSI is the default choice of Linux Kernel for their real products because of bug and security fixes will be provided by the community in long years. Broad range of industries are using LTS and LTSI already for their own products such as Automotive, Android, TV and so on. LTSI project was born in 2011 at Embedded Linux Conference in Europe (especially it was at Prague!) and now the project is running 6 years. This presentation is to share what we learned in past 6 years such as; best practice to maintain patches for the products and continue to apply bug and security fixes provided by the community, Problem owning in-house patches even on top of LTS. Also, we will present latest development and LTS statistics of Linux, and finally, we would like to discuss about development plan for 2018.

About Tsugikazu Shibata
Tsugikazu Shibata has been working on coordinating the relationship between industry and community as a member of Open Source Program Office of NEC. He is an active member of LF/CEWG and also leading LTSI Project since 2011. He have spoken at number of Linux conferences. He is also a board member of the Linux Foundation.
Captions: 
	00:00:00,030 --> 00:00:07,160
I'm my name is sue nakatsu sobota

00:00:02,490 --> 00:00:12,480
working for NEC and come from Tokyo just

00:00:07,160 --> 00:00:17,789
last night with 12 I was all wrong right

00:00:12,480 --> 00:00:22,920
yes sir so wrong right but it's enjoy

00:00:17,789 --> 00:00:26,970
this afternoon is a good conference I'm

00:00:22,920 --> 00:00:31,199
working for ltsi project for today I

00:00:26,970 --> 00:00:34,829
tried to present three things one is a

00:00:31,199 --> 00:00:39,290
Connor statistics and processes and also

00:00:34,829 --> 00:00:42,899
history of ESI and Iran recent round in

00:00:39,290 --> 00:00:45,870
66 years and further step for maintain

00:00:42,899 --> 00:00:50,690
corner for wrong atoms that's three of

00:00:45,870 --> 00:00:50,690
topics I would like to present for today

00:00:51,199 --> 00:00:55,590
again

00:00:52,440 --> 00:01:00,690
I'm Sparta I'm a founder and project

00:00:55,590 --> 00:01:04,710
read of TSI and also RTS and LTS I

00:01:00,690 --> 00:01:09,049
advocate that try to provide the value

00:01:04,710 --> 00:01:12,510
of using LTS an air TSI for the usage of

00:01:09,049 --> 00:01:14,939
real product and near services for

00:01:12,510 --> 00:01:17,270
mostly ambient I'm also a board member

00:01:14,939 --> 00:01:20,820
of Reax Foundation and involved with

00:01:17,270 --> 00:01:24,180
Phoenix community since 2.4 it's a long

00:01:20,820 --> 00:01:27,840
years ago as you know

00:01:24,180 --> 00:01:30,090
reiax is one of the most successful open

00:01:27,840 --> 00:01:33,450
source project and a continued growing

00:01:30,090 --> 00:01:37,500
in 26 years expanding because of an

00:01:33,450 --> 00:01:41,009
expanding adoption for new areas studied

00:01:37,500 --> 00:01:44,369
for enterprise and now crowd network

00:01:41,009 --> 00:01:51,049
smartphone robotics emitted IOT and many

00:01:44,369 --> 00:01:52,470
other things and using a GPL v2 that is

00:01:51,049 --> 00:01:57,060
much better

00:01:52,470 --> 00:02:00,570
to share the code for everyone and Linux

00:01:57,060 --> 00:02:05,030
is developed by the community and for

00:02:00,570 --> 00:02:07,479
every year every release the thousand

00:02:05,030 --> 00:02:12,860
1,700 people are

00:02:07,479 --> 00:02:17,000
participating and 2230 companies working

00:02:12,860 --> 00:02:20,810
for Linux upstream for every release and

00:02:17,000 --> 00:02:23,600
a growing every year one point five

00:02:20,810 --> 00:02:27,830
million lines of code and four thousand

00:02:23,600 --> 00:02:31,220
files are increased and again 26 years

00:02:27,830 --> 00:02:33,920
of history so long years so that lots of

00:02:31,220 --> 00:02:36,260
maintenance have a great skill to manage

00:02:33,920 --> 00:02:38,810
the subsystem and they have a

00:02:36,260 --> 00:02:42,890
professional knowledge of its area of

00:02:38,810 --> 00:02:47,480
technologies so these kind of great

00:02:42,890 --> 00:02:51,590
technology praises only in open source

00:02:47,480 --> 00:02:54,340
and arenak sees only the praise and here

00:02:51,590 --> 00:02:58,850
the states are sovereign acts kono

00:02:54,340 --> 00:03:01,810
greatest releases a 4.13 and if that was

00:02:58,850 --> 00:03:05,950
released in september 3rd this year and

00:03:01,810 --> 00:03:11,570
24 main lines of code it was increased

00:03:05,950 --> 00:03:15,470
596 lines from 4.12 last one last one

00:03:11,570 --> 00:03:18,620
the virus was sixty thousand and seven

00:03:15,470 --> 00:03:22,160
hundred fires are increased from last

00:03:18,620 --> 00:03:28,390
release and this development cycle was

00:03:22,160 --> 00:03:33,019
just 63 days that was released in since

00:03:28,390 --> 00:03:35,450
4.2 Conner was released and also current

00:03:33,019 --> 00:03:38,150
of stable Connor is four point thirteen

00:03:35,450 --> 00:03:42,980
point nine and current development

00:03:38,150 --> 00:03:46,430
corner is 4.14 - Artie for our C's five

00:03:42,980 --> 00:03:51,650
I will try to explain some more details

00:03:46,430 --> 00:03:54,140
about this oh so how many of days the

00:03:51,650 --> 00:04:00,950
Connor were developed

00:03:54,140 --> 00:04:07,070
I was count each module for the older

00:04:00,950 --> 00:04:12,140
one twenty year of 2015 it was five

00:04:07,070 --> 00:04:17,810
Bojan were released and mostly 60 x days

00:04:12,140 --> 00:04:20,690
are spent and in the 2016 it's also

00:04:17,810 --> 00:04:24,110
sixty days and sometimes is the same

00:04:20,690 --> 00:04:26,450
tea days and six 3ds was happened and

00:04:24,110 --> 00:04:31,220
for this year

00:04:26,450 --> 00:04:33,730
right now it's 4.14 is not yet released

00:04:31,220 --> 00:04:37,130
but maybe this one will be release in

00:04:33,730 --> 00:04:42,440
November so fiber release in this year

00:04:37,130 --> 00:04:46,580
and mostly longer one is 80 days but our

00:04:42,440 --> 00:04:50,330
sixty was some sixty or sixty three

00:04:46,580 --> 00:04:54,620
sixty three dates means nine weeks and

00:04:50,330 --> 00:04:57,260
seventy days means us ten weeks the most

00:04:54,620 --> 00:05:00,110
of the release will happen on Saturday

00:04:57,260 --> 00:05:00,620
on Sunday so that ten weeks or nine

00:05:00,110 --> 00:05:06,560
weeks

00:05:00,620 --> 00:05:10,360
that means of 63 days or 70 days and as

00:05:06,560 --> 00:05:13,310
you already know that Linux kernel is

00:05:10,360 --> 00:05:17,240
development is happening in that just

00:05:13,310 --> 00:05:21,620
registries the upstream includes a new

00:05:17,240 --> 00:05:27,020
patches and also fixes this is the only

00:05:21,620 --> 00:05:28,970
the trace change the color and that

00:05:27,020 --> 00:05:31,760
patches are revealed by the skills

00:05:28,970 --> 00:05:34,490
maintenance and tested tested with other

00:05:31,760 --> 00:05:37,370
proposals to confirm without any

00:05:34,490 --> 00:05:40,190
conflict and we well coordinated

00:05:37,370 --> 00:05:42,169
development process for over thousands

00:05:40,190 --> 00:05:48,950
of therapists that's a corner

00:05:42,169 --> 00:05:53,630
development and this is a picture of how

00:05:48,950 --> 00:05:56,720
Linux kernel is developing just after

00:05:53,630 --> 00:05:57,860
release of 4.10 two weeks of merge

00:05:56,720 --> 00:06:01,640
window will happen

00:05:57,860 --> 00:06:05,390
everyone can propose the new patches for

00:06:01,640 --> 00:06:09,110
the multi window and after that - our c1

00:06:05,390 --> 00:06:12,169
will be released and the number of times

00:06:09,110 --> 00:06:14,930
of years - release candidate will happen

00:06:12,169 --> 00:06:18,710
that will be that is the stabilization

00:06:14,930 --> 00:06:22,010
phase and mostly - are see seven or six

00:06:18,710 --> 00:06:26,150
then the newer corner will be released

00:06:22,010 --> 00:06:29,270
and that may takes nine weeks or ten

00:06:26,150 --> 00:06:31,479
weeks and that means our 63 days and 70

00:06:29,270 --> 00:06:36,009
days

00:06:31,479 --> 00:06:41,050
and here's a graph of how reenacts

00:06:36,009 --> 00:06:45,610
Connor source code is growing and 4.13

00:06:41,050 --> 00:06:51,129
is a nearly about 25 main lines and most

00:06:45,610 --> 00:06:55,839
probably 414 will be over 25 millions of

00:06:51,129 --> 00:06:58,059
lines of code this is a you can easy to

00:06:55,839 --> 00:07:03,759
understand the constantly growing their

00:06:58,059 --> 00:07:07,060
source code and Reax is really a rapid

00:07:03,759 --> 00:07:09,400
release cycle the eerie more than five

00:07:07,060 --> 00:07:12,729
times of chance to my so-called code

00:07:09,400 --> 00:07:15,520
into upstream but other project maybe

00:07:12,729 --> 00:07:18,909
six months recycle means that two times

00:07:15,520 --> 00:07:21,639
of chance to merge your code for the

00:07:18,909 --> 00:07:24,189
developers lot of chance to massive new

00:07:21,639 --> 00:07:28,749
code into upstream but on the other hand

00:07:24,189 --> 00:07:33,870
for the production usage so many chance

00:07:28,749 --> 00:07:37,419
to use new approach new econo to use

00:07:33,870 --> 00:07:39,699
production and that needs a more deeper

00:07:37,419 --> 00:07:44,680
knowledge to pick a right version that

00:07:39,699 --> 00:07:50,939
is a kind of issue for production but I

00:07:44,680 --> 00:07:50,939
will try to explain about more other

00:07:51,240 --> 00:07:58,060
chance to use a more better better

00:07:54,430 --> 00:08:02,620
version the one is a stable kernel that

00:07:58,060 --> 00:08:05,189
is recommended runs for use users who

00:08:02,620 --> 00:08:08,499
want the most recent stable Connor and

00:08:05,189 --> 00:08:13,360
for point end point one two three four

00:08:08,499 --> 00:08:16,449
but this lifetime is just next version

00:08:13,360 --> 00:08:19,539
will be released so that this one is not

00:08:16,449 --> 00:08:22,449
so much for use useful for the

00:08:19,539 --> 00:08:26,409
production use but people who wanted a

00:08:22,449 --> 00:08:29,319
reduced version but without the expander

00:08:26,409 --> 00:08:36,560
experimental features that will be that

00:08:29,319 --> 00:08:40,519
will be ok ok here it's

00:08:36,560 --> 00:08:47,079
let's get back latest status latest

00:08:40,519 --> 00:08:49,970
release is a 4.13 at a white circle and

00:08:47,079 --> 00:08:52,540
stable Connor is a four-point starting

00:08:49,970 --> 00:08:56,540
point seven it's a seven times for

00:08:52,540 --> 00:09:00,620
stable version and development version

00:08:56,540 --> 00:09:04,360
is 4.14 - RC 5 that is a year or circle

00:09:00,620 --> 00:09:07,850
and - shall see maybe six or seven then

00:09:04,360 --> 00:09:13,100
4.14 will be released that is a current

00:09:07,850 --> 00:09:16,009
register situation and for the people

00:09:13,100 --> 00:09:19,759
who wanted to use more wrong Gotama use

00:09:16,009 --> 00:09:22,730
usage for the color that is LTS long

00:09:19,759 --> 00:09:25,699
term stable Connor that is an extended

00:09:22,730 --> 00:09:29,660
maintenance period of stable colonel and

00:09:25,699 --> 00:09:31,940
colonel t continue to backward the

00:09:29,660 --> 00:09:35,660
above-ground security weeks to their

00:09:31,940 --> 00:09:38,690
single Arcana and this one will be

00:09:35,660 --> 00:09:41,360
picked one ball jump are here and the

00:09:38,690 --> 00:09:43,699
maintain two years so that this one will

00:09:41,360 --> 00:09:46,250
more much better than the stable Connor

00:09:43,699 --> 00:09:49,430
and latest upstream value for the

00:09:46,250 --> 00:09:52,160
production usage so that people

00:09:49,430 --> 00:09:55,760
understand this this value of this one

00:09:52,160 --> 00:10:00,649
and try trying to use RTS for the real

00:09:55,760 --> 00:10:03,290
production and why RTS only this is only

00:10:00,649 --> 00:10:07,220
the tree to get fixed from the community

00:10:03,290 --> 00:10:09,680
and in the near use case tested and

00:10:07,220 --> 00:10:12,370
confirmed the corner is very important

00:10:09,680 --> 00:10:15,709
this importance for new features new

00:10:12,370 --> 00:10:17,810
experimental features and fix will be

00:10:15,709 --> 00:10:19,910
released a number of times and it should

00:10:17,810 --> 00:10:21,680
be upright a freaking tree because of

00:10:19,910 --> 00:10:24,819
our security and the bank fees fix

00:10:21,680 --> 00:10:27,470
should be provided to the customers and

00:10:24,819 --> 00:10:30,170
bugs the founding artists should be

00:10:27,470 --> 00:10:35,569
reported back to community and fixed in

00:10:30,170 --> 00:10:39,529
upstream and then back ported to LTS so

00:10:35,569 --> 00:10:42,920
what kind of LTS version is existing you

00:10:39,529 --> 00:10:43,459
can see the this URL it's a corner dot

00:10:42,920 --> 00:10:46,939
org

00:10:43,459 --> 00:10:50,579
I will I was a copy to different

00:10:46,939 --> 00:10:53,519
most bottom portion 3.2 is maintained by

00:10:50,579 --> 00:10:57,059
Grieg been watching it was released in

00:10:53,519 --> 00:11:02,610
2012 for the purpose of DVM maintaining

00:10:57,059 --> 00:11:06,959
and it was six years committed to

00:11:02,610 --> 00:11:12,350
maintain and 310 is maintained by we

00:11:06,959 --> 00:11:16,170
tell you for his own carnal duties and

00:11:12,350 --> 00:11:21,929
316 is maintained by Ben Hutchings also

00:11:16,170 --> 00:11:24,449
for the DVM Cano for one is maintained

00:11:21,929 --> 00:11:28,619
by Sasha diamond for he is working for

00:11:24,449 --> 00:11:33,300
some Korea company to maintain that

00:11:28,619 --> 00:11:36,899
purpose and 4.4 and 4.9 is maintained by

00:11:33,300 --> 00:11:39,389
Greg Hartmann his fellow of very next

00:11:36,899 --> 00:11:46,019
foundation is a nearly neutral position

00:11:39,389 --> 00:11:49,829
and 4.4 is released in 2016

00:11:46,019 --> 00:11:53,040
and it was maintained for two years so

00:11:49,829 --> 00:11:56,959
so that and become the end of life

00:11:53,040 --> 00:12:00,509
maybe next next year but just recently

00:11:56,959 --> 00:12:04,019
announced that it was it will expand it

00:12:00,509 --> 00:12:08,449
six years so that committed to 2020

00:12:04,019 --> 00:12:13,379
until 2020 that will be maintained and

00:12:08,449 --> 00:12:18,029
4.9 is released in 2016

00:12:13,379 --> 00:12:23,899
last year and continue to maintain 2019

00:12:18,029 --> 00:12:28,499
this is a two years Tom so how many

00:12:23,899 --> 00:12:32,429
fixes will be provided for each of

00:12:28,499 --> 00:12:37,949
O'Connor's there you can see a red one

00:12:32,429 --> 00:12:42,420
is LTS black one is just of stable so

00:12:37,949 --> 00:12:45,529
Brocklin stable version is provided this

00:12:42,420 --> 00:12:49,589
is an thousands of fixes because about

00:12:45,529 --> 00:12:53,420
2060 series over 70 days period of time

00:12:49,589 --> 00:13:00,690
to maintain but the 80s rated Sergius

00:12:53,420 --> 00:13:05,190
4.9 is now is 4800 or fixed

00:13:00,690 --> 00:13:09,800
that was shown in the radius of the

00:13:05,190 --> 00:13:14,180
stream fixes and then get back ported to

00:13:09,800 --> 00:13:18,420
4.9 this one will be really important

00:13:14,180 --> 00:13:21,779
let's see another version 4.4 is a five

00:13:18,420 --> 00:13:45,900
thousand six hundred and four point one

00:13:21,779 --> 00:13:49,740
is for certain 316-7816 really fixes

00:13:45,900 --> 00:13:55,110
I was also counted for four point nine

00:13:49,740 --> 00:13:57,690
is that is really maintained point eight

00:13:55,110 --> 00:14:00,140
years and total commits were four

00:13:57,690 --> 00:14:04,470
thousand so that Erie four thousand and

00:14:00,140 --> 00:14:08,459
four point four is took one point eighty

00:14:04,470 --> 00:14:11,610
years so that really three thousand so

00:14:08,459 --> 00:14:16,250
that others are also twenty-two thousand

00:14:11,610 --> 00:14:19,680
or 1500 or so here is these fixes

00:14:16,250 --> 00:14:23,279
provided from the community that's a

00:14:19,680 --> 00:14:27,779
value of the using LTS these patches can

00:14:23,279 --> 00:14:32,910
be applied our own product that's that's

00:14:27,779 --> 00:14:36,839
a value of LTS so and we are working I'm

00:14:32,910 --> 00:14:38,790
working for ltsi so what is LTS I then

00:14:36,839 --> 00:14:42,120
this is the open-source community to

00:14:38,790 --> 00:14:45,390
create and maintain a TSI Connor for

00:14:42,120 --> 00:14:48,330
wrong town this is based on LTS so that

00:14:45,390 --> 00:14:52,320
all the artists s patches can be applied

00:14:48,330 --> 00:14:54,420
and also add another chance to include

00:14:52,320 --> 00:14:59,850
the father / cheese on top abilities

00:14:54,420 --> 00:15:03,120
this is their TSI so because of NTS is

00:14:59,850 --> 00:15:05,070
just only provided and not be able to

00:15:03,120 --> 00:15:07,920
other on top abilities and newer

00:15:05,070 --> 00:15:12,209
features but we are trying to provide a

00:15:07,920 --> 00:15:15,180
more chance to latest features on top

00:15:12,209 --> 00:15:19,440
abilities that is more useful for using

00:15:15,180 --> 00:15:22,200
our production and also we our industry

00:15:19,440 --> 00:15:25,140
party to share the best practice and

00:15:22,200 --> 00:15:27,770
help companies to use linux for wrong at

00:15:25,140 --> 00:15:32,310
all so we are discussing with other

00:15:27,770 --> 00:15:35,490
companies and all other project to want

00:15:32,310 --> 00:15:39,570
it to use linux corner for more on

00:15:35,490 --> 00:15:42,810
guitar here is a picture of how the

00:15:39,570 --> 00:15:45,390
difference between 80s and ltsi

00:15:42,810 --> 00:15:47,339
the most bottom part is there TS this

00:15:45,390 --> 00:15:49,650
one is a release one version per year

00:15:47,339 --> 00:15:53,430
are maintained two years and free

00:15:49,650 --> 00:15:56,459
country and raj number fix provided but

00:15:53,430 --> 00:15:59,670
on top of RTS we are providing help

00:15:56,459 --> 00:16:02,220
developers for upstream and auto test

00:15:59,670 --> 00:16:06,029
the framework that is done by a team

00:16:02,220 --> 00:16:08,700
bought like a free wall project and huge

00:16:06,029 --> 00:16:11,790
testing by contributors because of our

00:16:08,700 --> 00:16:14,550
TSI is joined by some of our companies

00:16:11,790 --> 00:16:18,060
wanted to more testing it a test result

00:16:14,550 --> 00:16:20,820
will be shared in on top of our TSI that

00:16:18,060 --> 00:16:24,270
is another party and a share status

00:16:20,820 --> 00:16:26,790
information provided a program among the

00:16:24,270 --> 00:16:29,310
industry people that that we will

00:16:26,790 --> 00:16:32,100
provide a chance to discussing each

00:16:29,310 --> 00:16:37,170
other how the program is happen and how

00:16:32,100 --> 00:16:40,290
it was solved by each companies that is

00:16:37,170 --> 00:16:43,589
another barrier where TS energy aside

00:16:40,290 --> 00:16:46,290
and be able to other require the future

00:16:43,589 --> 00:16:53,000
on top of RTS that a year much much

00:16:46,290 --> 00:16:57,230
chance for RTA on top of a RTS yeah we

00:16:53,000 --> 00:16:59,970
started our TSI project first

00:16:57,230 --> 00:17:00,750
presentation was happened in six years

00:16:59,970 --> 00:17:04,949
ago

00:17:00,750 --> 00:17:10,490
2011 in Prague this place so now it's a

00:17:04,949 --> 00:17:15,270
six years time and we have started the

00:17:10,490 --> 00:17:20,490
stable corner for Android at in 2011

00:17:15,270 --> 00:17:23,940
that was time of very early stage of

00:17:20,490 --> 00:17:27,060
Android and every under release was used

00:17:23,940 --> 00:17:28,050
different Arcana it was a six month

00:17:27,060 --> 00:17:30,810
cycle

00:17:28,050 --> 00:17:34,640
so the handset manufacturers really hard

00:17:30,810 --> 00:17:37,560
to use a reduced color with any other

00:17:34,640 --> 00:17:40,890
associate been dispatches and also some

00:17:37,560 --> 00:17:44,280
other own parties from Google so that we

00:17:40,890 --> 00:17:47,910
nearly wanted to use stable Connor and I

00:17:44,280 --> 00:17:51,870
don't use that wrong Adam in that time

00:17:47,910 --> 00:17:55,740
it was a time of Android 3.0 Ice Cream

00:17:51,870 --> 00:17:59,000
Sandwich it was used in of scanner 3.0

00:17:55,740 --> 00:18:05,490
we were started to stabilize

00:17:59,000 --> 00:18:08,510
ranevskaya 3.0 and as I mentioned number

00:18:05,490 --> 00:18:11,190
of different kernel Tirek associate

00:18:08,510 --> 00:18:14,160
dependent parties and also Google

00:18:11,190 --> 00:18:17,310
dependent parties and also in hosted

00:18:14,160 --> 00:18:20,030
parties should be merged into the single

00:18:17,310 --> 00:18:23,940
kernel that that was so hard

00:18:20,030 --> 00:18:26,940
that's the initial status and we have a

00:18:23,940 --> 00:18:31,110
number of discussion is about a shape of

00:18:26,940 --> 00:18:34,740
RTS and two years time and every the

00:18:31,110 --> 00:18:38,150
release every year was that happened in

00:18:34,740 --> 00:18:43,050
that discussion because of maintainer

00:18:38,150 --> 00:18:47,220
now maintain eyes the Greco Hartmann he

00:18:43,050 --> 00:18:50,520
needs to maintain maybe eerie release

00:18:47,220 --> 00:18:52,800
and three years Tao means us after three

00:18:50,520 --> 00:18:57,000
years he should maintain three different

00:18:52,800 --> 00:19:01,140
colors if it expands more then he needs

00:18:57,000 --> 00:19:04,920
to it maintain more Roger ROG number of

00:19:01,140 --> 00:19:07,320
Connor that is one thing and also the

00:19:04,920 --> 00:19:09,840
Google was released every six months a

00:19:07,320 --> 00:19:13,680
different corner version so that two

00:19:09,840 --> 00:19:16,380
years may be a reasonable tom and for

00:19:13,680 --> 00:19:19,590
both companies and also maintenance

00:19:16,380 --> 00:19:21,510
point of view button right now every

00:19:19,590 --> 00:19:25,530
people wanted to use more longer term

00:19:21,510 --> 00:19:30,300
and also Google is trying to be able to

00:19:25,530 --> 00:19:34,080
use more wrong Adam wrong end of longer

00:19:30,300 --> 00:19:37,040
life for the same color so the situation

00:19:34,080 --> 00:19:39,110
becomes different so that may be

00:19:37,040 --> 00:19:42,350
it will be a chance to change that two

00:19:39,110 --> 00:19:47,330
years maintain maintaining time and also

00:19:42,350 --> 00:19:49,910
every year ladies and this one is a

00:19:47,330 --> 00:19:54,320
respond maintain - LTS Connor it's

00:19:49,910 --> 00:19:58,760
reasonable for that time and another

00:19:54,320 --> 00:20:02,750
history is a Greg is a maintainer of LTS

00:19:58,760 --> 00:20:04,460
and also LTS I and we were released and

00:20:02,750 --> 00:20:08,900
three point zero three point four and

00:20:04,460 --> 00:20:12,260
these kind of Connor for Erie mostly

00:20:08,900 --> 00:20:16,630
Erie paces and latest one is three four

00:20:12,260 --> 00:20:22,160
point nine ltsi were already released in

00:20:16,630 --> 00:20:25,390
early September and this one is also

00:20:22,160 --> 00:20:30,800
integrated with the Yocto project in

00:20:25,390 --> 00:20:34,970
2012 yuck - is so already used many of

00:20:30,800 --> 00:20:40,190
them built products about a 60% of share

00:20:34,970 --> 00:20:42,680
so that you are able to use Yocto and

00:20:40,190 --> 00:20:46,580
also LTS a that is a current the

00:20:42,680 --> 00:20:49,130
situation and we have had a workshop and

00:20:46,580 --> 00:20:53,390
session to share information discussion

00:20:49,130 --> 00:20:56,230
issue among the industry and how many of

00:20:53,390 --> 00:21:02,870
yous case like Asia or some other

00:20:56,230 --> 00:21:06,410
immediate products ok lessons learned in

00:21:02,870 --> 00:21:07,160
six years I would like to present the

00:21:06,410 --> 00:21:10,190
three things

00:21:07,160 --> 00:21:12,470
LTS and LTS is only a choice for

00:21:10,190 --> 00:21:19,460
products and upstream first policy and

00:21:12,470 --> 00:21:23,630
security and Fox fix issue for long-term

00:21:19,460 --> 00:21:27,100
usage RT s and M TSI is just fit as I

00:21:23,630 --> 00:21:31,280
explained that it by a statistics and

00:21:27,100 --> 00:21:34,250
LTS I LTS provides two to three

00:21:31,280 --> 00:21:36,880
thousands of budgets in a year if that

00:21:34,250 --> 00:21:40,490
work should be done by a single company

00:21:36,880 --> 00:21:43,480
that company needs a specific resource

00:21:40,490 --> 00:21:48,170
just not not only the resource but also

00:21:43,480 --> 00:21:50,550
the maintainer should have a deeper

00:21:48,170 --> 00:21:55,740
knowledge of a broad range of reiax

00:21:50,550 --> 00:21:59,970
so that makes so hard but using artists

00:21:55,740 --> 00:22:03,300
is really easy and now all the Android

00:21:59,970 --> 00:22:10,320
devices using address as I checked out

00:22:03,300 --> 00:22:13,800
most of the major handset manufacturers

00:22:10,320 --> 00:22:17,130
counter release most of the Android is

00:22:13,800 --> 00:22:19,860
using a stable corner and so LT s is a

00:22:17,130 --> 00:22:22,890
default choice even for the other use

00:22:19,860 --> 00:22:26,460
cases and there is more wrong at our

00:22:22,890 --> 00:22:29,160
requirements CIP is a similar

00:22:26,460 --> 00:22:33,660
infrastructure proton or wanted to use

00:22:29,160 --> 00:22:37,200
more than ten years may be fixed 30 15

00:22:33,660 --> 00:22:39,750
years of usage and Asia also

00:22:37,200 --> 00:22:43,190
automotive-grade reacts also wanted to

00:22:39,750 --> 00:22:48,420
use more than 10 years and Android right

00:22:43,190 --> 00:22:52,080
rusty stated for the OS update for two

00:22:48,420 --> 00:22:56,360
years and security fix for after three

00:22:52,080 --> 00:23:00,600
years so that makes five years time of

00:22:56,360 --> 00:23:04,140
lifetime of Android so that so such use

00:23:00,600 --> 00:23:08,340
case or TSM LTS I will be just fit for

00:23:04,140 --> 00:23:13,730
the requirement and observing fast

00:23:08,340 --> 00:23:17,510
policy that it may be six years ago

00:23:13,730 --> 00:23:21,980
changing fast changing color for

00:23:17,510 --> 00:23:26,850
production fast that makes program for

00:23:21,980 --> 00:23:29,940
long term use case because large number

00:23:26,850 --> 00:23:32,340
fix may not applicable in the future

00:23:29,940 --> 00:23:36,480
because of the several thousands of

00:23:32,340 --> 00:23:39,630
patch from community based on banning

00:23:36,480 --> 00:23:42,330
econo if the production fast and

00:23:39,630 --> 00:23:46,260
developer is changed some variety of

00:23:42,330 --> 00:23:51,240
motion is then the patch cannot be able

00:23:46,260 --> 00:23:54,270
to a pre upright so that upstream fast

00:23:51,240 --> 00:23:56,550
policy is really important and a huge

00:23:54,270 --> 00:23:59,000
discussion happened before Connor summit

00:23:56,550 --> 00:23:59,000
last year

00:24:01,039 --> 00:24:09,020
companies wanted to add on top of

00:24:04,500 --> 00:24:12,120
atheists some other in-house parties but

00:24:09,020 --> 00:24:14,279
after the huge discussion happened the

00:24:12,120 --> 00:24:18,950
absolute first policy is really

00:24:14,279 --> 00:24:23,370
important for wrong long otama use case

00:24:18,950 --> 00:24:26,370
so that's why why companies developers

00:24:23,370 --> 00:24:29,070
need participate linux linux kernel

00:24:26,370 --> 00:24:32,700
communities the company's own change

00:24:29,070 --> 00:24:36,539
should be mosey into the upstream that

00:24:32,700 --> 00:24:41,039
is artisan first policy and but ported

00:24:36,539 --> 00:24:45,809
to LTS there is a better way to use the

00:24:41,039 --> 00:24:49,890
color long-term but for that purpose

00:24:45,809 --> 00:24:53,760
initial harder to join the community for

00:24:49,890 --> 00:24:57,149
the company's developer may be high but

00:24:53,760 --> 00:25:01,049
really it's really important to use

00:24:57,149 --> 00:25:03,600
color as a long-term and NTS is keeping

00:25:01,049 --> 00:25:06,990
up to swim fast policy so that the most

00:25:03,600 --> 00:25:08,970
of the LTS eye patch should be mozzie in

00:25:06,990 --> 00:25:11,610
the rate of upstream and the dam

00:25:08,970 --> 00:25:16,620
backboard to on top of LTS that is

00:25:11,610 --> 00:25:21,149
upstream fast policy and security and

00:25:16,620 --> 00:25:24,000
bug fixes require in the sixty years ago

00:25:21,149 --> 00:25:28,409
security and bank fixed may not so much

00:25:24,000 --> 00:25:31,110
important just people shipping only but

00:25:28,409 --> 00:25:34,590
right now fixing the program is a

00:25:31,110 --> 00:25:37,860
mandatory requirement to apply community

00:25:34,590 --> 00:25:40,919
provided fixes the base code should be

00:25:37,860 --> 00:25:43,620
same as upstream so otherwise immediate

00:25:40,919 --> 00:25:48,510
patchy release will not possible so

00:25:43,620 --> 00:25:53,250
that's another reason why base coat

00:25:48,510 --> 00:25:56,580
should be same as a upstream code so

00:25:53,250 --> 00:25:57,440
that in-house parties must be as small

00:25:56,580 --> 00:26:01,309
as possible

00:25:57,440 --> 00:26:05,149
that was a recent round in six years

00:26:01,309 --> 00:26:05,149
that's a real case

00:26:06,690 --> 00:26:12,210
and let's go to further step of

00:26:09,510 --> 00:26:17,670
maintaining Connor wrong town

00:26:12,210 --> 00:26:21,540
I was explained a history or six years

00:26:17,670 --> 00:26:25,230
look back and let's go let's see in the

00:26:21,540 --> 00:26:28,140
future or near future one is I would

00:26:25,230 --> 00:26:30,960
like to point out is a project treble

00:26:28,140 --> 00:26:34,230
for Android project that is try to

00:26:30,960 --> 00:26:40,050
isolate Android OS and hardware specific

00:26:34,230 --> 00:26:44,730
code there is a window specific binder

00:26:40,050 --> 00:26:47,990
sarasu dev pnd binder the all the vendor

00:26:44,730 --> 00:26:54,450
specific kernel code is working under

00:26:47,990 --> 00:26:57,360
this binder and with vendor test suites

00:26:54,450 --> 00:27:00,900
and a compatibility test suites that we

00:26:57,360 --> 00:27:04,590
will test its interface so that that we

00:27:00,900 --> 00:27:08,490
are completely separated is a vendor

00:27:04,590 --> 00:27:09,240
implementation and operating system by

00:27:08,490 --> 00:27:12,960
this change

00:27:09,240 --> 00:27:16,020
Silicon specific patch and RTS but she

00:27:12,960 --> 00:27:20,400
can be separated applied separately so

00:27:16,020 --> 00:27:24,560
the several thousands of of artists

00:27:20,400 --> 00:27:29,370
patch should be upright but separately

00:27:24,560 --> 00:27:35,960
vendor specific parties that means once

00:27:29,370 --> 00:27:41,040
we have several handset using using

00:27:35,960 --> 00:27:45,090
different hardware but Windows specific

00:27:41,040 --> 00:27:48,810
portion is just on the black one so that

00:27:45,090 --> 00:27:52,110
that one is separated so that all the a

00:27:48,810 --> 00:27:55,710
pareo not be not necessary to testing

00:27:52,110 --> 00:28:00,120
that is the value of a project travel

00:27:55,710 --> 00:28:03,000
and also LTS parties provided the

00:28:00,120 --> 00:28:07,230
thousands of but is then that is just

00:28:03,000 --> 00:28:10,560
test should be tested in a single may be

00:28:07,230 --> 00:28:13,620
single platform not necessary to testing

00:28:10,560 --> 00:28:18,140
on top of us another a hardware at home

00:28:13,620 --> 00:28:24,080
there is a area of project trailer

00:28:18,140 --> 00:28:27,030
okay another point is arrived patching

00:28:24,080 --> 00:28:30,390
this is just an enterprise portion

00:28:27,030 --> 00:28:34,070
feature of life watching kinetochores

00:28:30,390 --> 00:28:38,070
muslin since early next four point zero

00:28:34,070 --> 00:28:42,720
that that was the result of a su SE k

00:28:38,070 --> 00:28:45,870
graft and read that from k patches that

00:28:42,720 --> 00:28:50,490
this technology is patching the corner

00:28:45,870 --> 00:28:56,220
is running current running color can be

00:28:50,490 --> 00:29:00,570
patched dynamically so the most cv can

00:28:56,220 --> 00:29:04,170
be safely to apply but it's depending on

00:29:00,570 --> 00:29:07,920
x86 so most of emerged people who you

00:29:04,170 --> 00:29:12,290
may be using arm but this one is

00:29:07,920 --> 00:29:16,080
possible to apply the immediate patching

00:29:12,290 --> 00:29:18,840
and without a downtime by using this one

00:29:16,080 --> 00:29:20,550
this right matching some super important

00:29:18,840 --> 00:29:23,790
part can be applied without downtime

00:29:20,550 --> 00:29:24,900
that is another point to painting connor

00:29:23,790 --> 00:29:29,460
wrong town

00:29:24,900 --> 00:29:34,080
safely and another point is Connor

00:29:29,460 --> 00:29:39,270
update mechanism is provided by Corus or

00:29:34,080 --> 00:29:41,880
Chrome OS that that is - there is two

00:29:39,270 --> 00:29:45,510
different partition and a stunning

00:29:41,880 --> 00:29:49,490
current working and during a is working

00:29:45,510 --> 00:29:54,120
the newcomer will be downloaded to

00:29:49,490 --> 00:29:57,470
partition P and and the boot and boot up

00:29:54,120 --> 00:30:00,240
when build up and be their new economy

00:29:57,470 --> 00:30:03,090
automatically run the Google is

00:30:00,240 --> 00:30:06,050
providing basic code called Omaha is

00:30:03,090 --> 00:30:08,810
open source and also different

00:30:06,050 --> 00:30:12,660
commercial implementation is available

00:30:08,810 --> 00:30:16,620
was a security security reason and this

00:30:12,660 --> 00:30:19,470
will easier to upgrade Connor and also

00:30:16,620 --> 00:30:22,440
easy to roll back if the new color is

00:30:19,470 --> 00:30:25,470
program then easy to get back to order

00:30:22,440 --> 00:30:30,050
conversion this one is this mechanism is

00:30:25,470 --> 00:30:36,660
a really nice if the product

00:30:30,050 --> 00:30:40,080
possible to add extra boot partition so

00:30:36,660 --> 00:30:44,400
that another point is a container based

00:30:40,080 --> 00:30:46,650
OS for embedded use case container will

00:30:44,400 --> 00:30:49,400
be able to use as a packaging

00:30:46,650 --> 00:30:54,360
technologies the container is basically

00:30:49,400 --> 00:30:57,810
provides ignore the program of library

00:30:54,360 --> 00:31:02,820
and Rani's processes version the most of

00:30:57,810 --> 00:31:05,670
the OS is single library the Bojan is

00:31:02,820 --> 00:31:08,340
should be fixed but by using container

00:31:05,670 --> 00:31:12,270
the library should be included in the

00:31:08,340 --> 00:31:15,380
container place so that always can be

00:31:12,270 --> 00:31:17,880
separated for the variety of version of

00:31:15,380 --> 00:31:22,740
library and rang its processor like a

00:31:17,880 --> 00:31:27,390
Python or Ruby and so on but building

00:31:22,740 --> 00:31:29,820
container OS is different OS means a

00:31:27,390 --> 00:31:35,270
color and libraries and just providing

00:31:29,820 --> 00:31:39,300
service for containers and because of

00:31:35,270 --> 00:31:41,550
application can be used different

00:31:39,300 --> 00:31:46,020
libraries so not necessary to provide

00:31:41,550 --> 00:31:48,930
the extra libraries just only container

00:31:46,020 --> 00:31:52,830
key package should be included for the

00:31:48,930 --> 00:31:57,120
container OS so this is this should be

00:31:52,830 --> 00:32:00,590
minimal packages so this one try to

00:31:57,120 --> 00:32:04,080
create the container os's needs a

00:32:00,590 --> 00:32:07,860
different knowledge and experience so

00:32:04,080 --> 00:32:14,030
this one is a bit difficult but need to

00:32:07,860 --> 00:32:18,200
consider for the futures that is my

00:32:14,030 --> 00:32:22,170
explanation and here is the Decius

00:32:18,200 --> 00:32:26,300
development front we already released on

00:32:22,170 --> 00:32:29,640
version ltsi 4.9 and re september and

00:32:26,300 --> 00:32:34,290
this one will be integrated into octo

00:32:29,640 --> 00:32:40,630
2.4 and AGL guys are trying to use a

00:32:34,290 --> 00:32:46,950
yocto 2.4 for 13 degrees and darwin

00:32:40,630 --> 00:32:52,360
kind of streamline and here is a

00:32:46,950 --> 00:32:56,800
expected next two years from 4.14 is

00:32:52,360 --> 00:33:02,230
already decided to use LTS for next year

00:32:56,800 --> 00:33:06,910
and we will have a six months time to

00:33:02,230 --> 00:33:11,440
wait the people will put put their own

00:33:06,910 --> 00:33:17,200
patch into 4.15 our sorry 50 and 50 not

00:33:11,440 --> 00:33:21,250
50 and 1670 sorry I'm mystic the such

00:33:17,200 --> 00:33:26,140
kind of six month time frame we are able

00:33:21,250 --> 00:33:32,260
to send patch to upstream and then mosey

00:33:26,140 --> 00:33:34,690
into our TSI module window from June

00:33:32,260 --> 00:33:37,660
timeframe then we will be able to

00:33:34,690 --> 00:33:41,800
provide a ltsi mailing list your own

00:33:37,660 --> 00:33:48,280
patch to include air TSI and then that

00:33:41,800 --> 00:33:52,510
will be released in around August

00:33:48,280 --> 00:33:56,530
timeframe and then that will be sorry

00:33:52,510 --> 00:34:00,220
also Yocto imagine to Yocto and another

00:33:56,530 --> 00:34:05,920
eight year button that is our plan but

00:34:00,220 --> 00:34:08,770
please join us our mailing list or some

00:34:05,920 --> 00:34:10,929
other session we will share the latest

00:34:08,770 --> 00:34:16,409
news how we were going on

00:34:10,929 --> 00:34:19,810
that is our from okay that's most of my

00:34:16,409 --> 00:34:25,810
explanation you may be I expected how

00:34:19,810 --> 00:34:29,890
the 4.9 or 4.14 will be expanded more

00:34:25,810 --> 00:34:33,840
wrong Tom but right now we are not be

00:34:29,890 --> 00:34:38,110
able to explain because of maintenance

00:34:33,840 --> 00:34:42,630
work road becomes much more but right

00:34:38,110 --> 00:34:46,620
now Fago venero is considering much more

00:34:42,630 --> 00:34:51,990
automated testing framework that will be

00:34:46,620 --> 00:34:54,030
much more efficient then we maybe expand

00:34:51,990 --> 00:34:58,460
RDS maybe

00:34:54,030 --> 00:35:02,370
funded more on my yes but let's wait

00:34:58,460 --> 00:35:05,760
let's push to them had too much create a

00:35:02,370 --> 00:35:09,720
much better testing framework to be done

00:35:05,760 --> 00:35:14,190
that will also beneficial for everyone

00:35:09,720 --> 00:35:18,000
for getting more wrong madam LTS button

00:35:14,190 --> 00:35:22,290
will be provided that is most of my

00:35:18,000 --> 00:35:25,200
presentation and there is a conclusion

00:35:22,290 --> 00:35:28,440
at least I was started to fill the gap

00:35:25,200 --> 00:35:33,630
between community and industry but still

00:35:28,440 --> 00:35:36,150
there is a gap we will continue to our

00:35:33,630 --> 00:35:38,820
activity to discuss both sides to better

00:35:36,150 --> 00:35:42,570
align each other and upstream fast

00:35:38,820 --> 00:35:45,540
policies there very important for open

00:35:42,570 --> 00:35:47,850
source and why don't you join our DSi

00:35:45,540 --> 00:35:51,380
we have a mailing list and a summer

00:35:47,850 --> 00:36:00,570
session of our Linux Foundation

00:35:51,380 --> 00:36:06,120
conference thank you so much we have

00:36:00,570 --> 00:36:08,280
some minutes we have some minutes if you

00:36:06,120 --> 00:36:13,010
have any question or please raise your

00:36:08,280 --> 00:36:13,010
hand yes please

00:36:14,420 --> 00:36:16,990
okay

00:36:21,490 --> 00:36:32,349
why the support is in upstreaming what

00:36:28,579 --> 00:36:37,309
kind of support does ltsi were provided

00:36:32,349 --> 00:36:41,440
isn't it is yoga yeah for upstreaming

00:36:37,309 --> 00:36:46,069
support from ltsi project is that to

00:36:41,440 --> 00:36:49,910
provide a guidance to how to send parts

00:36:46,069 --> 00:36:55,760
to upstream and that is our source of

00:36:49,910 --> 00:36:58,609
support someone from a Korean or Chinese

00:36:55,760 --> 00:37:01,970
company come to us we have this kind of

00:36:58,609 --> 00:37:04,970
patches and don't know how to send patch

00:37:01,970 --> 00:37:08,059
to upstream and know don't have a

00:37:04,970 --> 00:37:10,640
relationship with any of upstream

00:37:08,059 --> 00:37:13,910
developers we will provide some guidance

00:37:10,640 --> 00:37:17,300
to hey you will be able to come to his

00:37:13,910 --> 00:37:24,549
this maintainer he will be help him help

00:37:17,300 --> 00:37:27,819
you that is our support anything else

00:37:24,549 --> 00:37:27,819
yes please

00:37:40,280 --> 00:38:00,470
sorry I could not hear your microphones

00:37:46,920 --> 00:38:00,470
over there I'm sorry thank you

00:38:08,430 --> 00:38:14,910
yeah pre-empting prim prim toffee patch

00:38:12,359 --> 00:38:17,250
in the earliest relationship is that

00:38:14,910 --> 00:38:19,950
easier question yeah actually we are

00:38:17,250 --> 00:38:24,900
discussing a number of times how we will

00:38:19,950 --> 00:38:29,880
be able to merge your align preempt ERT

00:38:24,900 --> 00:38:33,359
and RTS but now rhiness is not yet

00:38:29,880 --> 00:38:35,849
accepted preempted Artie we are upstream

00:38:33,359 --> 00:38:40,980
force policy so that the unfortunately

00:38:35,849 --> 00:38:44,160
is not yet arrived but I think preempted

00:38:40,980 --> 00:38:47,369
Artie it's trying to align trying to

00:38:44,160 --> 00:38:52,650
provide their patch are the same as the

00:38:47,369 --> 00:38:56,220
LTS portion so if people wanted to use

00:38:52,650 --> 00:38:59,430
preempt Artie with LTS then that will be

00:38:56,220 --> 00:39:03,960
post possible that is current situation

00:38:59,430 --> 00:39:04,640
is this answer for your question thank

00:39:03,960 --> 00:39:07,950
you

00:39:04,640 --> 00:39:11,650
so it's time thank you so much

00:39:07,950 --> 00:39:11,650

YouTube URL: https://www.youtube.com/watch?v=v_1Fbv8wdJs


