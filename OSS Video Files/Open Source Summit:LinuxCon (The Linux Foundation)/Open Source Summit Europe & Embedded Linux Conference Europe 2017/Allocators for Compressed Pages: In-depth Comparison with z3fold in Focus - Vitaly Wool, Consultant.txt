Title: Allocators for Compressed Pages: In-depth Comparison with z3fold in Focus - Vitaly Wool, Consultant
Publication date: 2017-10-25
Playlist: Open Source Summit Europe & Embedded Linux Conference Europe 2017
Description: 
	Allocators for Compressed Pages: In-depth Comparison with z3fold in Focus - Vitaly Wool, Consultant

Right now there are 3 allocators for compressed pages (zbud, zsmalloc, z3fold) and 2 main users of these allocators (zswap, zram). However, you can't normally have all 6 combinations due to the restrictions of zram implementation which will be proved artificial in this talk.

Apart from that and the performance and compression ratio comparisons for the allocators mentioned, we'll discuss the ongoing z3fold streamlining work, such as evaluating lock-less lists (lllists), wider use of atomic operations, trying bit read-write locks and implementing support for movable z3fold pages.

About Vitaly Wool
Vitaly Wool, Senior Developer and just Linux enthusiast, graduated M.Sc. in Computer Science from St. Petersburg State Univ. in 2002, worked for starters with real-time OSes as VxWorks and RTEMS mostly for PowerPC platforms. Vitaly moved to Moscow in 2003 where he started to work on embedded Linux projects for other platforms and architectures for a variety of companies including MontaVista and Mentor Graphics. Now he works as a consultant/Linux expert for different companies in the Nordic and Baltic regions, primarily helping out Sony Mobile resolve power consumption issues.
Captions: 
	00:00:00,000 --> 00:00:24,660
I work with Benedict's and lesbians

00:00:08,610 --> 00:00:32,099
primarily at Android so today our double

00:00:24,660 --> 00:00:42,450
talked about alligators compressed pages

00:00:32,099 --> 00:00:45,289
within Linux kernel and before we

00:00:42,450 --> 00:00:51,140
actually pass over to the elevators

00:00:45,289 --> 00:00:54,559
going to take a step back and start with

00:00:51,140 --> 00:01:01,160
debating users of those Healthcare's

00:00:54,559 --> 00:01:07,850
that be swapping for the beijing

00:01:01,160 --> 00:01:09,170
techniques limitations kernel and

00:01:07,850 --> 00:01:11,580
[Music]

00:01:09,170 --> 00:01:15,860
optimizations for these two things so

00:01:11,580 --> 00:01:15,860
first of all swapping I guess is

00:01:16,189 --> 00:01:19,549
necessary on this

00:01:20,000 --> 00:01:30,490
this is specialty secondary storage to

00:01:25,460 --> 00:01:35,600
save or grant by pushing the pages that

00:01:30,490 --> 00:01:38,510
have not been all around to the

00:01:35,600 --> 00:01:44,470
secondary storage and you basically

00:01:38,510 --> 00:01:50,000
trade memory size every free area

00:01:44,470 --> 00:01:54,770
performance because you know reading and

00:01:50,000 --> 00:01:58,810
writing pages can be quite slow the slow

00:01:54,770 --> 00:02:01,460
storage devices but still employee for

00:01:58,810 --> 00:02:08,090
applications to run that could be the

00:02:01,460 --> 00:02:10,340
only way out with that said if we want

00:02:08,090 --> 00:02:12,680
to do some performance optimizations and

00:02:10,340 --> 00:02:25,600
this is what we want to do pretty much

00:02:12,680 --> 00:02:31,810
always so what do we do to optimize

00:02:25,600 --> 00:02:35,060
swapping with respect to the performance

00:02:31,810 --> 00:02:38,239
we're gonna use ramp are we gonna try to

00:02:35,060 --> 00:02:42,370
use ground to cache the pages of these

00:02:38,239 --> 00:02:46,660
walk out to minimize the i/o operations

00:02:42,370 --> 00:02:50,060
especially when to think up devices slow

00:02:46,660 --> 00:02:52,910
but if we do is straightforward in a

00:02:50,060 --> 00:02:56,090
straightforward way then probably we're

00:02:52,910 --> 00:03:00,830
going to lose the main benefit of

00:02:56,090 --> 00:03:01,860
swapping as such let that be saving

00:03:00,830 --> 00:03:06,600
ground for

00:03:01,860 --> 00:03:07,950
for real users the real memory consuming

00:03:06,600 --> 00:03:12,300
applications will be booted from

00:03:07,950 --> 00:03:13,700
otherwise so week we have this cache and

00:03:12,300 --> 00:03:18,450
[Music]

00:03:13,700 --> 00:03:21,060
it's to be there's no real saving that

00:03:18,450 --> 00:03:22,950
prompting you just posted person I mean

00:03:21,060 --> 00:03:25,220
the whole test just didn't make any

00:03:22,950 --> 00:03:25,220
sense

00:03:40,480 --> 00:03:43,170
I see

00:03:45,580 --> 00:03:54,370
so then the idea counts to impress the

00:03:52,600 --> 00:03:56,530
pages that are being swapped out they

00:03:54,370 --> 00:03:58,240
aren't going to be used by system

00:03:56,530 --> 00:04:01,810
because system thinks that they're

00:03:58,240 --> 00:04:04,600
actually off the RAM so we can compress

00:04:01,810 --> 00:04:07,480
them and keep them compressed either

00:04:04,600 --> 00:04:10,720
until we have too many of them so that

00:04:07,480 --> 00:04:15,250
we can actually push them to the storage

00:04:10,720 --> 00:04:18,310
or in the system decides that means

00:04:15,250 --> 00:04:22,170
those pages well we can ask for those

00:04:18,310 --> 00:04:22,170
pages that we decompress Oh Monty Monty

00:04:23,220 --> 00:04:30,550
what's important here to mention is that

00:04:27,460 --> 00:04:32,560
the compressed chunks would be less than

00:04:30,550 --> 00:04:36,310
page size there size will be less than

00:04:32,560 --> 00:04:39,100
page size and conventional alligators

00:04:36,310 --> 00:04:44,740
they they do not work with that they

00:04:39,100 --> 00:04:51,040
only allocate pages so we cannot really

00:04:44,740 --> 00:04:53,380
make use of the fact that we have data

00:04:51,040 --> 00:04:56,020
blocks that we have data objects as a

00:04:53,380 --> 00:05:04,480
page size if we're going to allocate

00:04:56,020 --> 00:05:07,230
page for each such object count such

00:05:04,480 --> 00:05:13,690
thing as a compressed memory elevator

00:05:07,230 --> 00:05:20,620
which quality memory but the key thing

00:05:13,690 --> 00:05:24,820
is that such a locator is designed to be

00:05:20,620 --> 00:05:28,990
able to score small data options less

00:05:24,820 --> 00:05:32,259
than a page and then

00:05:28,990 --> 00:05:33,880
we'll get the real benefit from the

00:05:32,259 --> 00:05:44,259
biggest being addressed

00:05:33,880 --> 00:05:47,099
oh yeah this is the question I saw many

00:05:44,259 --> 00:05:50,050
people tell me that I do not really

00:05:47,099 --> 00:05:52,690
communicate well to the audience and at

00:05:50,050 --> 00:05:55,120
some point I'm something that took me to

00:05:52,690 --> 00:05:58,289
dimension areas so this is the question

00:05:55,120 --> 00:06:06,490
that imaginary audience ability to ask

00:05:58,289 --> 00:06:08,349
yeah so they're just illusions well at

00:06:06,490 --> 00:06:17,199
the bird flying on that the answer is

00:06:08,349 --> 00:06:21,419
yes now let's get a little closer to the

00:06:17,199 --> 00:06:25,000
initial subject with that being

00:06:21,419 --> 00:06:27,639
compressed danger think that alligators

00:06:25,000 --> 00:06:32,680
in overuse and we're going to talk a

00:06:27,639 --> 00:06:34,419
little bit of scoping and compression in

00:06:32,680 --> 00:06:41,009
the way they are implemented in the

00:06:34,419 --> 00:06:43,780
kernel and the first swing compression

00:06:41,009 --> 00:06:46,530
implementation is false as look it's the

00:06:43,780 --> 00:06:51,880
first historically and in terms of

00:06:46,530 --> 00:06:56,169
frequency of use in minutes different

00:06:51,880 --> 00:07:01,780
situation and that is a right vegetable

00:06:56,169 --> 00:07:04,599
cache which allows from compression so

00:07:01,780 --> 00:07:08,909
what it does is exactly what we've been

00:07:04,599 --> 00:07:12,460
talking about a few slides back in

00:07:08,909 --> 00:07:16,340
compresses pages that are swapped out

00:07:12,460 --> 00:07:19,720
and move those pages into

00:07:16,340 --> 00:07:19,720
[Music]

00:07:22,160 --> 00:07:25,239
[Music]

00:07:28,239 --> 00:08:11,769
there which is also there are two

00:08:13,170 --> 00:08:17,379
[Music]

00:08:42,789 --> 00:08:49,279
[Music]

00:08:44,709 --> 00:08:52,440
entities over for each possible number

00:08:49,279 --> 00:08:57,079
of free jump

00:08:52,440 --> 00:09:01,670
[Music]

00:08:57,079 --> 00:09:08,399
the objects though the pages that have

00:09:01,670 --> 00:09:12,589
exempt number of free time so we need

00:09:08,399 --> 00:09:12,589
six narcissistic stuff like that

00:09:14,269 --> 00:09:18,509
nitrogens

00:09:15,420 --> 00:09:25,009
we take the that one of the relevant

00:09:18,509 --> 00:09:25,009
please if this is empty

00:09:25,160 --> 00:09:42,839
oh so this scheme is an alternative

00:09:38,459 --> 00:09:46,050
desert bug and it addresses the biggest

00:09:42,839 --> 00:09:50,519
problem was that book and that is the

00:09:46,050 --> 00:09:53,190
actual compression ratio be the amount

00:09:50,519 --> 00:09:55,680
of station scored divided by the amount

00:09:53,190 --> 00:10:00,509
of pages used can be quite good

00:09:55,680 --> 00:10:03,329
especially if we stumble upon the

00:10:00,509 --> 00:10:08,519
situation when there are many pages of

00:10:03,329 --> 00:10:10,680
size around 2k or in the initial months

00:10:08,519 --> 00:10:15,600
but the compressed ones it compressed

00:10:10,680 --> 00:10:20,069
objects which are size around 2k 2k plus

00:10:15,600 --> 00:10:23,130
Delta they are bad for self but because

00:10:20,069 --> 00:10:27,870
they cannot store to such objects into

00:10:23,130 --> 00:10:32,310
one set webpage so there's a lot of

00:10:27,870 --> 00:10:34,470
space left free in such as web pages so

00:10:32,310 --> 00:10:39,060
the actual compression ratio can be

00:10:34,470 --> 00:10:44,880
quite close to 1 and so this now allows

00:10:39,060 --> 00:10:48,500
for integers allocation of objects with

00:10:44,880 --> 00:10:48,500
a physically active is pages

00:10:49,090 --> 00:10:55,510
which is very high compression ratio

00:10:52,470 --> 00:10:58,630
especially in the beginning the

00:10:55,510 --> 00:11:03,630
deficiency of that approach is that well

00:10:58,630 --> 00:11:08,530
now there will be cold does that revival

00:11:03,630 --> 00:11:12,730
so there will be released objects that

00:11:08,530 --> 00:11:17,500
will create multiple holes within the

00:11:12,730 --> 00:11:19,320
Cenozoic pages so that this fellow is

00:11:17,500 --> 00:11:26,170
exposed to the internal fragmentation

00:11:19,320 --> 00:11:29,230
which is very complicated to do and well

00:11:26,170 --> 00:11:32,430
it's making it especially more

00:11:29,230 --> 00:11:34,480
complicated you know the fact that

00:11:32,430 --> 00:11:40,030
objects may spend across several

00:11:34,480 --> 00:11:46,830
physical pages so if we can come up with

00:11:40,030 --> 00:11:50,380
an alternative that is better

00:11:46,830 --> 00:11:54,850
compression ratio wise than said but and

00:11:50,380 --> 00:11:58,540
do not have to distribute objects across

00:11:54,850 --> 00:12:01,630
several pages so that every object into

00:11:58,540 --> 00:12:06,010
the page boundary then maybe actually

00:12:01,630 --> 00:12:08,200
bendable and this is something that

00:12:06,010 --> 00:12:14,760
we'll be discussing in the future and

00:12:08,200 --> 00:12:20,560
further on but as of now as a side note

00:12:14,760 --> 00:12:24,100
we need to mention that actually got to

00:12:20,560 --> 00:12:27,990
compressed alligators which did pretty

00:12:24,100 --> 00:12:27,990
much the same thing in completely

00:12:28,990 --> 00:12:35,540
that actually built for edification

00:12:31,070 --> 00:12:38,300
because that's what could be I mean it

00:12:35,540 --> 00:12:41,960
should have been easy to configure sense

00:12:38,300 --> 00:12:44,510
walk to he is either set by pores that

00:12:41,960 --> 00:12:48,230
has Malik depending on the actual system

00:12:44,510 --> 00:12:52,670
two months so depending on what is

00:12:48,230 --> 00:12:55,670
actually better you should be able to

00:12:52,670 --> 00:12:58,100
change between set but of course of this

00:12:55,670 --> 00:13:00,380
Malik and it is a lot more complicated

00:12:58,100 --> 00:13:06,350
but they have incompatible eight galleys

00:13:00,380 --> 00:13:13,100
so while the goal for education and the

00:13:06,350 --> 00:13:21,650
new API has been introduced Cole said

00:13:13,100 --> 00:13:23,960
cool it inside implemented that API and

00:13:21,650 --> 00:13:29,570
that's what was changed to use that API

00:13:23,960 --> 00:13:32,320
enter not directly calling functions so

00:13:29,570 --> 00:13:36,200
it's only a matter of changing the name

00:13:32,320 --> 00:13:43,840
of the backend crystal my theater now

00:13:36,200 --> 00:13:50,240
Rosetta to actually proceed with the

00:13:43,840 --> 00:13:54,490
computer ok now we get the question

00:13:50,240 --> 00:13:58,460
imaginary audience what happened next

00:13:54,490 --> 00:14:02,390
that's a good question because then came

00:13:58,460 --> 00:14:07,130
zebra which is to certain point look

00:14:02,390 --> 00:14:10,490
more relevant to what we do here because

00:14:07,130 --> 00:14:14,780
this is a better conference and cetera

00:14:10,490 --> 00:14:18,910
is actually something that was targeting

00:14:14,780 --> 00:14:18,910
embedded devices in the first place

00:14:18,940 --> 00:14:28,180
because it's a sub contain something

00:14:23,860 --> 00:14:32,320
block device self-contained storage that

00:14:28,180 --> 00:14:38,140
doesn't need banking storage on a disk

00:14:32,320 --> 00:14:40,960
or flash so you can use it directly for

00:14:38,140 --> 00:14:47,380
swapping because it also compresses

00:14:40,960 --> 00:14:49,150
pages and this is an exact match to

00:14:47,380 --> 00:14:52,810
convenience of our system of small Ram

00:14:49,150 --> 00:14:56,490
because you free up ground by putting

00:14:52,810 --> 00:14:59,530
unused pages into the third round device

00:14:56,490 --> 00:15:01,540
so they occupy less space because they

00:14:59,530 --> 00:15:04,660
are compressed and at the same time you

00:15:01,540 --> 00:15:08,350
don't ill but then it devices flash

00:15:04,660 --> 00:15:10,330
storage which is usually slow so you

00:15:08,350 --> 00:15:13,540
don't slow down the operation of an

00:15:10,330 --> 00:15:16,750
embedded device you don't promise extra

00:15:13,540 --> 00:15:26,560
wear out of the flash we should usually

00:15:16,750 --> 00:15:28,840
cannot change device and I am it's all

00:15:26,560 --> 00:15:32,830
good it's all great the only small

00:15:28,840 --> 00:15:36,490
problem that zentrum didn't exactly play

00:15:32,830 --> 00:15:42,040
by the rules and it didn't really give

00:15:36,490 --> 00:15:45,070
me example in - beginning and as opposed

00:15:42,040 --> 00:15:46,170
to that is called as final function

00:15:45,070 --> 00:15:50,650
correctly

00:15:46,170 --> 00:15:54,250
so if presents fall almost from the

00:15:50,650 --> 00:15:56,980
beginning it's been like you choose what

00:15:54,250 --> 00:16:01,270
fits you better for that ramekin only

00:15:56,980 --> 00:16:04,810
gives asthma and in here with all the

00:16:01,270 --> 00:16:07,540
problems that says now has well together

00:16:04,810 --> 00:16:09,750
with all the good things of course and

00:16:07,540 --> 00:16:09,750
stuff

00:16:11,000 --> 00:16:20,820
so what we did first and it was a

00:16:16,380 --> 00:16:26,279
presentation in SEM together in 2016 in

00:16:20,820 --> 00:16:28,620
Belgium the results of using set ground

00:16:26,279 --> 00:16:31,649
hoppers at the pool and then comparing

00:16:28,620 --> 00:16:36,620
step and said s Malik as Bank hence

00:16:31,649 --> 00:16:44,700
rosette round so that was presented in

00:16:36,620 --> 00:16:47,610
2016 in San Diego and well I would just

00:16:44,700 --> 00:16:51,660
probably refer to to that presentation

00:16:47,610 --> 00:16:58,470
because this lights out up there on the

00:16:51,660 --> 00:17:02,820
net but the bottom line was that it was

00:16:58,470 --> 00:17:07,280
worth a try and in sometimes in most

00:17:02,820 --> 00:17:11,089
cases especially for small devices for

00:17:07,280 --> 00:17:17,500
not that big number of threats and

00:17:11,089 --> 00:17:18,679
tilling the ground doing the scoping

00:17:17,500 --> 00:17:22,470
[Music]

00:17:18,679 --> 00:17:25,490
zipa actually upgraded better and

00:17:22,470 --> 00:17:28,679
smoother and faster but with that said

00:17:25,490 --> 00:17:30,990
it still wasn't a real match for an

00:17:28,679 --> 00:17:33,570
embedded device because the compression

00:17:30,990 --> 00:17:37,230
ratio was quite low compared to the

00:17:33,570 --> 00:17:41,309
chief of the smell and with the

00:17:37,230 --> 00:17:50,010
depression ratio of about 1.5 X it just

00:17:41,309 --> 00:17:55,530
isn't worth it there are not that much

00:17:50,010 --> 00:17:59,660
actual savings so it was a nice thing to

00:17:55,530 --> 00:17:59,660
try but it didn't work out that well

00:18:04,850 --> 00:18:14,480
yeah and here we have a graph showing

00:18:09,909 --> 00:18:15,470
pretty much the same thing that said s

00:18:14,480 --> 00:18:20,840
Malibu

00:18:15,470 --> 00:18:26,840
it's actually a better scalable but in

00:18:20,840 --> 00:18:29,750
terms of the i/o operation it takes off

00:18:26,840 --> 00:18:33,200
slowly and that pool takes off quite

00:18:29,750 --> 00:18:33,919
fast so if you have a really constraint

00:18:33,200 --> 00:18:37,850
system

00:18:33,919 --> 00:18:40,909
well it could be actually good to use

00:18:37,850 --> 00:18:43,580
that pool or something that works like

00:18:40,909 --> 00:18:50,480
that but it's slightly better

00:18:43,580 --> 00:18:54,250
congressional you know the imaginary

00:18:50,480 --> 00:18:57,200
audience goes on to the next question

00:18:54,250 --> 00:19:00,230
what if we modify set but to call three

00:18:57,200 --> 00:19:01,850
objects per page instead of two and that

00:19:00,230 --> 00:19:06,559
is an excellent question because this is

00:19:01,850 --> 00:19:09,620
what we did so it's a three fold and you

00:19:06,559 --> 00:19:13,370
get on the block and this is the easiest

00:19:09,620 --> 00:19:15,320
man to school but anyway as that

00:19:13,370 --> 00:19:19,340
threefold praedyth as a spinoff from zip

00:19:15,320 --> 00:19:21,769
code but the only exception that it

00:19:19,340 --> 00:19:24,230
didn't have a selfie from a guy from the

00:19:21,769 --> 00:19:28,940
very beginning he only implemented

00:19:24,230 --> 00:19:32,019
successfully guy well other than that

00:19:28,940 --> 00:19:35,440
three option for page instead of two and

00:19:32,019 --> 00:19:37,750
it depended page size allocations

00:19:35,440 --> 00:19:39,940
because of those pizzetta

00:19:37,750 --> 00:19:43,510
which stores whether the first chunk so

00:19:39,940 --> 00:19:45,340
if the object to be allocated is of the

00:19:43,510 --> 00:19:48,130
page size then it would just sell

00:19:45,340 --> 00:19:50,320
interviews we don't do that because that

00:19:48,130 --> 00:19:57,130
people we're creating a headless AG

00:19:50,320 --> 00:20:01,320
study and yeah it's in India the work

00:19:57,130 --> 00:20:05,020
has been started after you see 2016 and

00:20:01,320 --> 00:20:11,650
the first version came into the main

00:20:05,020 --> 00:20:16,030
line at four point eight and yeah

00:20:11,650 --> 00:20:18,820
provided the Zen ground works in

00:20:16,030 --> 00:20:23,050
Zeppelin to Faison does not communicate

00:20:18,820 --> 00:20:26,710
as well as it is now is a prequel

00:20:23,050 --> 00:20:30,880
turns out to be an opaque match for

00:20:26,710 --> 00:20:32,830
Wilson grammars XY because they also

00:20:30,880 --> 00:20:35,620
provides the latest operation new

00:20:32,830 --> 00:20:39,810
compression ratio which is nice for the

00:20:35,620 --> 00:20:44,100
medic device and it supports eviction

00:20:39,810 --> 00:20:44,100
because it wasn't hearing it for example

00:20:44,460 --> 00:20:49,540
while says no it doesn't so it's better

00:20:48,520 --> 00:20:52,300
Mishra's as well

00:20:49,540 --> 00:20:54,370
and once again it has a high compression

00:20:52,300 --> 00:20:58,330
ratio observer self perceptual

00:20:54,370 --> 00:21:05,460
conception and all so much but then we

00:20:58,330 --> 00:21:06,820
go to the update ability metrics and

00:21:05,460 --> 00:21:11,590
yeah

00:21:06,820 --> 00:21:16,600
I mean if we just take the existing name

00:21:11,590 --> 00:21:19,330
like we cannot use either as our powers

00:21:16,600 --> 00:21:22,500
of three forms that once again because

00:21:19,330 --> 00:21:22,500
is working

00:21:22,740 --> 00:21:34,860
correctly and just not use the relevant

00:21:27,060 --> 00:21:37,480
generic API which is not very nice but

00:21:34,860 --> 00:21:39,970
we're not going to concentrate on the

00:21:37,480 --> 00:21:44,470
bad things it's great on the good thing

00:21:39,970 --> 00:21:50,500
and making them better so we pass over

00:21:44,470 --> 00:21:55,240
to the fun part comparisons and the

00:21:50,500 --> 00:21:59,580
first thing to look at is how we do

00:21:55,240 --> 00:22:01,690
compress objects on the stress level

00:21:59,580 --> 00:22:06,730
given that the work with the first

00:22:01,690 --> 00:22:10,380
version of every fold which came in the

00:22:06,730 --> 00:22:10,380
version of kernel for my name

00:22:14,320 --> 00:22:23,770
so what was he here well you can see

00:22:19,870 --> 00:22:25,300
that sofa he's playing we can though we

00:22:23,770 --> 00:22:30,070
can see that said s now that star so

00:22:25,300 --> 00:22:36,190
reading well well 3.5 sometimes

00:22:30,070 --> 00:22:40,690
difficult to form but then it doesn't

00:22:36,190 --> 00:22:44,650
seem to stabilize right I mean it it

00:22:40,690 --> 00:22:45,990
goes on in place while Zespri fold seems

00:22:44,650 --> 00:22:56,290
to be quite stable

00:22:45,990 --> 00:23:01,810
circulating around 2.5 2.6 2.7 and then

00:22:56,290 --> 00:23:09,270
we go to the random read/write achieved

00:23:01,810 --> 00:23:13,900
by multiple file rent RW justice and

00:23:09,270 --> 00:23:16,000
here we can see that well says it's

00:23:13,900 --> 00:23:20,980
definitely superior when it comes from

00:23:16,000 --> 00:23:24,370
mania spirits but said buttons a

00:23:20,980 --> 00:23:27,520
three-fold are somewhat better when the

00:23:24,370 --> 00:23:31,480
amount of experiences though but they

00:23:27,520 --> 00:23:34,750
don't seem to scale well with that being

00:23:31,480 --> 00:23:37,630
said they behave in a very similar way

00:23:34,750 --> 00:23:42,420
which is not much of a surprise given

00:23:37,630 --> 00:23:42,420
the semicolon here to the

00:23:42,780 --> 00:23:51,700
so they inherited the behavior - the

00:23:48,970 --> 00:23:57,490
thing is however that they were aiming

00:23:51,700 --> 00:24:02,860
to have performance which wasn't

00:23:57,490 --> 00:24:04,920
inferior does that a smell so we thought

00:24:02,860 --> 00:24:11,430
this situation was not acceptable

00:24:04,920 --> 00:24:11,430
and we started profiling said people

00:24:12,120 --> 00:24:20,230
making stress on the two following

00:24:14,290 --> 00:24:21,040
feathers the first one is using birth

00:24:20,230 --> 00:24:26,860
while running

00:24:21,040 --> 00:24:30,640
FIO a very nice not testing tool give

00:24:26,860 --> 00:24:37,050
express flow in creating different kinds

00:24:30,640 --> 00:24:40,150
of I old veterans football devices and

00:24:37,050 --> 00:24:42,640
this was used to identify bottlenecks on

00:24:40,150 --> 00:24:45,100
this dress code primarily I was only

00:24:42,640 --> 00:24:48,160
worth looking into how's a three-fold

00:24:45,100 --> 00:24:53,500
operation defects user experience and

00:24:48,160 --> 00:24:57,370
that was achieved by looking into perf

00:24:53,500 --> 00:25:01,060
results while Android pal game was

00:24:57,370 --> 00:25:11,470
trigger wage trembling causes out of the

00:25:01,060 --> 00:25:16,220
face sloping yeah and what was the

00:25:11,470 --> 00:25:20,420
results of fun but

00:25:16,220 --> 00:25:25,700
Nutbush were surprised the main outlet

00:25:20,420 --> 00:25:28,340
was the big spiel up which is protecting

00:25:25,700 --> 00:25:29,870
Holden but it lists so hold them but at

00:25:28,340 --> 00:25:33,470
least some protective going on in the

00:25:29,870 --> 00:25:35,510
same spiel of and this of course does

00:25:33,470 --> 00:25:39,950
not see a lot of effective does this

00:25:35,510 --> 00:25:42,740
give another the next thing to optimize

00:25:39,950 --> 00:25:49,100
nothing to the engine was identified as

00:25:42,740 --> 00:25:51,740
a set threefold pre function because it

00:25:49,100 --> 00:25:55,940
was an internal page layout optimization

00:25:51,740 --> 00:26:05,720
after holding all in every object free

00:25:55,940 --> 00:26:09,980
operation and here's what so if if it's

00:26:05,720 --> 00:26:13,490
C against account the first the first

00:26:09,980 --> 00:26:18,890
graph the first picture out there which

00:26:13,490 --> 00:26:24,730
is on the top shows a full the threefold

00:26:18,890 --> 00:26:27,440
page because the first object is there

00:26:24,730 --> 00:26:29,860
they say it's like Bradish the second is

00:26:27,440 --> 00:26:34,910
there and the third is also there so

00:26:29,860 --> 00:26:36,950
then if we flee the first object that we

00:26:34,910 --> 00:26:43,490
end up in the situation where we have

00:26:36,950 --> 00:26:45,320
two free spaces within the page so we

00:26:43,490 --> 00:26:49,610
have an internal fragmentation which

00:26:45,320 --> 00:26:51,710
however is it to fix we will walk you to

00:26:49,610 --> 00:26:53,200
the beginning and then we have integers

00:26:51,710 --> 00:26:56,649
free spaces that can use

00:26:53,200 --> 00:27:00,760
that's way than to spaces out there on

00:26:56,649 --> 00:27:04,240
the middle one but it's a relatively

00:27:00,760 --> 00:27:08,639
cost operation to do it in the free

00:27:04,240 --> 00:27:13,600
function because it may slow down things

00:27:08,639 --> 00:27:18,539
playing on the hot bath so the idea

00:27:13,600 --> 00:27:24,549
became there to implement asynchronous

00:27:18,539 --> 00:27:30,250
handling of such situations but first

00:27:24,549 --> 00:27:35,169
came Danielle using her patience so we

00:27:30,250 --> 00:27:38,080
can but we should we cannot avoid having

00:27:35,169 --> 00:27:44,679
the big block still that we can the

00:27:38,080 --> 00:27:48,639
limit is usage to only protect the list

00:27:44,679 --> 00:27:52,269
operations while the operations which

00:27:48,639 --> 00:27:58,059
are internal to the page can be

00:27:52,269 --> 00:28:00,960
protected by in page spin lock so we

00:27:58,059 --> 00:28:00,960
have the goddess

00:28:04,470 --> 00:28:15,880
and then we have graph which looks like

00:28:07,780 --> 00:28:19,650
this where the lights are line is for

00:28:15,880 --> 00:28:19,650
the U of theta is a three-fold

00:28:19,710 --> 00:28:26,730
implementation so unfortunately it

00:28:23,860 --> 00:28:26,730
didn't help that much

00:28:26,790 --> 00:28:37,690
then came the a syncopation compression

00:28:31,380 --> 00:28:45,190
and it came into the main line later on

00:28:37,690 --> 00:28:49,750
basic to their recipe and the idea there

00:28:45,190 --> 00:28:53,020
is as I said we just take the confection

00:28:49,750 --> 00:28:56,680
off is a three-fold free and schedule it

00:28:53,020 --> 00:28:59,890
and then we're taking it off the clock

00:28:56,680 --> 00:29:02,440
that's one thing and the other thing is

00:28:59,890 --> 00:29:05,020
that it means the assignment infection

00:29:02,440 --> 00:29:07,090
if several objects are free that the

00:29:05,020 --> 00:29:09,430
same are almost at the same time because

00:29:07,090 --> 00:29:15,180
we do it just once instead of doing it

00:29:09,430 --> 00:29:15,180
every time after an object is rings oh

00:29:16,890 --> 00:29:22,039
yeah

00:29:18,980 --> 00:29:29,360
we do we obviously need some extra

00:29:22,039 --> 00:29:34,610
movement okay then leave the idea of

00:29:29,360 --> 00:29:38,570
hopelessness to implement a buddy basis

00:29:34,610 --> 00:29:42,169
using what business because we're

00:29:38,570 --> 00:29:47,799
fighting with a spin lock and I live

00:29:42,169 --> 00:29:50,899
like this and the thing is that

00:29:47,799 --> 00:29:54,320
processing is a three-fold allocation

00:29:50,899 --> 00:30:00,010
could be a lot simpler without us a lot

00:29:54,320 --> 00:30:07,220
faster but the problem is that deleting

00:30:00,010 --> 00:30:11,019
an entry from innovative list would be a

00:30:07,220 --> 00:30:14,269
lot more complicated because there's no

00:30:11,019 --> 00:30:17,840
animal visits delete for this Delta

00:30:14,269 --> 00:30:19,940
function and pelvis and if we want to

00:30:17,840 --> 00:30:21,590
simulate it one way or another we're

00:30:19,940 --> 00:30:28,370
going to end up using some visual

00:30:21,590 --> 00:30:32,419
exclusion so for what it lists it just

00:30:28,370 --> 00:30:35,720
didn't work that doesn't mean that at

00:30:32,419 --> 00:30:40,510
some point will not return to the idea

00:30:35,720 --> 00:30:45,730
of using a list or something else but

00:30:40,510 --> 00:30:51,549
fortunately it wasn't too much and then

00:30:45,730 --> 00:30:51,549
came the idea of per CPU but in this

00:30:52,299 --> 00:31:04,070
here's why as with the zipa basically we

00:30:59,000 --> 00:31:11,539
only need one entry in the list

00:31:04,070 --> 00:31:17,070
LEM so for every list within the group

00:31:11,539 --> 00:31:21,700
of limited lists we only need one entry

00:31:17,070 --> 00:31:25,210
because we always take the first one so

00:31:21,700 --> 00:31:29,680
as long as we can maintain this on every

00:31:25,210 --> 00:31:34,870
CPU we can limit this search to the

00:31:29,680 --> 00:31:40,060
local CPU and save time and also kill

00:31:34,870 --> 00:31:43,000
the need to have the spin mop because we

00:31:40,060 --> 00:31:44,710
only deal in the local data so that is a

00:31:43,000 --> 00:31:49,660
big break should temporarily is just

00:31:44,710 --> 00:31:54,820
okay we'll have to spin like so

00:31:49,660 --> 00:31:56,860
yeah this we have an idea to check if it

00:31:54,820 --> 00:32:00,940
had and the first effect on the

00:31:56,860 --> 00:32:04,330
compression ratio because selection

00:32:00,940 --> 00:32:08,590
system divorce and this needed it to for

00:32:04,330 --> 00:32:18,540
14001 so you can try it out and see for

00:32:08,590 --> 00:32:21,130
you but for us to actually work the

00:32:18,540 --> 00:32:25,870
darkest line has been used as people

00:32:21,130 --> 00:32:28,390
would look a little bit on the operation

00:32:25,870 --> 00:32:33,550
speed whether the number of friends it's

00:32:28,390 --> 00:32:36,450
not that big due to more resources spent

00:32:33,550 --> 00:32:44,020
on maintaining the persecute list

00:32:36,450 --> 00:32:46,000
obviously but the scalability a lot so

00:32:44,020 --> 00:32:50,830
now is a three-fold evolution and sit

00:32:46,000 --> 00:32:53,680
with front RW we increase the

00:32:50,830 --> 00:32:55,870
scalability that enough switch be

00:32:53,680 --> 00:33:00,160
possible and then we are going to

00:32:55,870 --> 00:33:04,090
compare it with the two other rivals the

00:33:00,160 --> 00:33:09,280
other kids and while we can see that the

00:33:04,090 --> 00:33:11,170
first one small number of threats the

00:33:09,280 --> 00:33:13,290
performance of the preform is actually

00:33:11,170 --> 00:33:17,880
better than

00:33:13,290 --> 00:33:22,920
to others somewhere there at least

00:33:17,880 --> 00:33:26,490
partially and then again we need to

00:33:22,920 --> 00:33:36,660
check the compression ratio if it got

00:33:26,490 --> 00:33:38,790
worse enough and yeah the lifeline is

00:33:36,660 --> 00:33:43,230
the Oakland they don't see that much

00:33:38,790 --> 00:33:47,700
difference very happy you can jump to

00:33:43,230 --> 00:33:50,040
conclusions and yet the conclusion is

00:33:47,700 --> 00:33:55,230
first of all I'm gonna be bald and

00:33:50,040 --> 00:33:58,560
saying that so difficult delivers it has

00:33:55,230 --> 00:34:01,110
better performance of this mouth it has

00:33:58,560 --> 00:34:07,200
been fearful well worse not so much more

00:34:01,110 --> 00:34:10,740
appreciation it has bit real-time

00:34:07,200 --> 00:34:12,800
capability and it's a good fit propose

00:34:10,740 --> 00:34:14,730
that's what I've learned

00:34:12,800 --> 00:34:18,530
we still need to do some more

00:34:14,730 --> 00:34:21,690
optimization proportion for instance

00:34:18,530 --> 00:34:26,130
with the introduction of mercy fee on

00:34:21,690 --> 00:34:30,419
Buddha fists together of the zip free

00:34:26,130 --> 00:34:33,419
fold which we put into a chunk in the

00:34:30,419 --> 00:34:35,730
first term of the page it actually

00:34:33,419 --> 00:34:39,720
became bigger than one chunk not

00:34:35,730 --> 00:34:43,790
requires different story so maybe it

00:34:39,720 --> 00:34:45,620
makes sense to look into the ways

00:34:43,790 --> 00:34:49,580
optimize the header so that the face is

00:34:45,620 --> 00:34:54,679
much up again the other thing to do is

00:34:49,580 --> 00:34:57,650
to try making ethical pages Google to

00:34:54,679 --> 00:34:59,930
reduce the fragmentation within the

00:34:57,650 --> 00:35:01,040
kernel which is external to use every

00:34:59,930 --> 00:35:05,390
fall so it's not the internal

00:35:01,040 --> 00:35:07,910
fragmentation that is fought against by

00:35:05,390 --> 00:35:11,600
the cervical infection which the

00:35:07,910 --> 00:35:15,740
external fragmentation that criminal

00:35:11,600 --> 00:35:17,090
confession should be meeting eating but

00:35:15,740 --> 00:35:21,290
they've done because the pages are not

00:35:17,090 --> 00:35:26,330
mobile so we need to think to be livable

00:35:21,290 --> 00:35:27,920
in the best way but anyway I believe for

00:35:26,330 --> 00:35:32,380
the thing that exists in two main light

00:35:27,920 --> 00:35:38,410
for a year is quite a bit of a progress

00:35:32,380 --> 00:35:41,810
and that's how I want to think people

00:35:38,410 --> 00:35:44,060
who helped me was a three-fold one way

00:35:41,810 --> 00:35:46,550
or the other so the first grader girls

00:35:44,060 --> 00:35:50,630
consent Jennings implemented about which

00:35:46,550 --> 00:35:54,530
is travelling and then dance treatment

00:35:50,630 --> 00:35:57,320
or provide tons of myths which were

00:35:54,530 --> 00:35:59,810
always very valuable and basically he

00:35:57,320 --> 00:36:04,250
was the one who helped difficulty often

00:35:59,810 --> 00:36:07,660
room yeah I want to thank one of the

00:36:04,250 --> 00:36:12,670
students that I

00:36:07,660 --> 00:36:17,260
enter he read a lot of performance late

00:36:12,670 --> 00:36:18,880
submissions and was always helpful in

00:36:17,260 --> 00:36:22,869
pointing to things that we needed to

00:36:18,880 --> 00:36:28,660
optimize I would also like to thank my

00:36:22,869 --> 00:36:32,260
wife provide a comfortable environment

00:36:28,660 --> 00:36:35,650
for me to work and maybe even my dog

00:36:32,260 --> 00:36:40,690
it got assembled optimization ideas came

00:36:35,650 --> 00:36:42,510
and I was walking with him and of course

00:36:40,690 --> 00:36:47,260
I want to thank you all for listening

00:36:42,510 --> 00:36:48,910
and for your attention and I think this

00:36:47,260 --> 00:36:51,730
did have some time for questions so I

00:36:48,910 --> 00:36:55,920
really want to hear some questions and

00:36:51,730 --> 00:36:55,920
answer questions forget it

00:36:57,950 --> 00:37:00,950
yes

00:37:13,950 --> 00:37:20,980
it decompresses and pushes so then it's

00:37:18,550 --> 00:37:23,290
transparent to the system to do the

00:37:20,980 --> 00:37:27,940
swapping system the storage system does

00:37:23,290 --> 00:37:34,330
not expect to have a compressed page of

00:37:27,940 --> 00:37:37,500
apologies right yeah there is a type of

00:37:34,330 --> 00:37:37,500
while things are thinking

00:37:38,160 --> 00:37:45,590
[Music]

00:37:54,240 --> 00:37:58,369
great potential any other questions

00:38:04,179 --> 00:38:12,880
well whether they you know I know meant

00:38:08,829 --> 00:38:15,009
people people report problems running

00:38:12,880 --> 00:38:16,209
the zest walk every now and then because

00:38:15,009 --> 00:38:19,509
there are many surfers as many

00:38:16,209 --> 00:38:23,400
configurations for for the set ground

00:38:19,509 --> 00:38:26,949
line I mean did the one that is the

00:38:23,400 --> 00:38:32,019
never seen is not really missing any

00:38:26,949 --> 00:38:41,679
commercial product the one that that was

00:38:32,019 --> 00:38:46,109
in for twelve years several devices

00:38:41,679 --> 00:38:46,109
which are selling market

00:38:48,980 --> 00:38:54,079
[Music]

00:38:51,390 --> 00:38:54,079
sorry

00:38:59,270 --> 00:39:04,460
well the assistant is not fresh

00:39:02,360 --> 00:39:08,470
I mean Android doesn't crash digital

00:39:04,460 --> 00:39:19,060
also include enough the second I'm over

00:39:08,470 --> 00:39:24,230
sensible reform the president said swamp

00:39:19,060 --> 00:39:26,000
covers that pool over a three-fold may

00:39:24,230 --> 00:39:33,040
not may still have some problems not

00:39:26,000 --> 00:39:33,040
working please

00:39:41,890 --> 00:39:47,440
we don't we don't believe we don't care

00:39:50,079 --> 00:39:55,339
Billy don't we don't have slice we don't

00:39:52,460 --> 00:39:56,900
have slots there is that that's actually

00:39:55,339 --> 00:40:00,940
a very good question thank you

00:39:56,900 --> 00:40:06,200
we don't have slots as such we rebound

00:40:00,940 --> 00:40:08,509
the the first page of the first object

00:40:06,200 --> 00:40:14,630
weekly bound to the beginning which is

00:40:08,509 --> 00:40:18,819
right after the header then week without

00:40:14,630 --> 00:40:23,960
the last the third object to the engine

00:40:18,819 --> 00:40:28,130
and the middle object should start a

00:40:23,960 --> 00:40:29,779
rigorous subject and the next chunk

00:40:28,130 --> 00:40:31,930
should go to the third one

00:40:29,779 --> 00:40:35,779
but this is not street fair requirement

00:40:31,930 --> 00:40:41,150
it's holiday perfection works but there

00:40:35,779 --> 00:40:42,890
are no requirements as to on the side

00:40:41,150 --> 00:40:45,650
there are no requirements on the size of

00:40:42,890 --> 00:40:49,069
painting of any objects that we we are

00:40:45,650 --> 00:40:52,809
allocating everything so he can be one

00:40:49,069 --> 00:40:55,809
third in can be one child it can be

00:40:52,809 --> 00:40:55,809
management

00:41:03,640 --> 00:41:11,480
yes it can never be worse than C but in

00:41:07,130 --> 00:41:14,480
a theoretical situation when all only

00:41:11,480 --> 00:41:17,290
objects are slightly bigger than

00:41:14,480 --> 00:41:22,400
Duquesne we will have the same problem

00:41:17,290 --> 00:41:25,580
as simple but in real life we have never

00:41:22,400 --> 00:41:29,600
ever come across this scenario because

00:41:25,580 --> 00:41:32,420
the and then the flexibility is better

00:41:29,600 --> 00:41:34,280
for a free fall so it wasn't usually

00:41:32,420 --> 00:41:37,040
there there are objects there others

00:41:34,280 --> 00:41:39,050
have been pressed in a bad way that did

00:41:37,040 --> 00:41:44,060
not progress well and there are objects

00:41:39,050 --> 00:41:47,750
that compress in a very good way so in

00:41:44,060 --> 00:41:50,990
the real life we pretty much always

00:41:47,750 --> 00:41:56,870
ended up with one big barely impressed

00:41:50,990 --> 00:41:58,980
object plus just hormones there's a

00:41:56,870 --> 00:42:05,310
denser history

00:41:58,980 --> 00:42:06,839
welcome any other questions okay thank

00:42:05,310 --> 00:42:10,680
you very much you're very welcome to

00:42:06,839 --> 00:42:13,160
Japan speak about this stuff no really

00:42:10,680 --> 00:42:13,160
here

00:42:15,090 --> 00:42:17,389

YouTube URL: https://www.youtube.com/watch?v=f3k4cns0e1c


