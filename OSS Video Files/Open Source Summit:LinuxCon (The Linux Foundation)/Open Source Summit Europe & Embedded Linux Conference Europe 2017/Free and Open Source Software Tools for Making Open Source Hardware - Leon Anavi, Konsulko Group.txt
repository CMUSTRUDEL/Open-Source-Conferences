Title: Free and Open Source Software Tools for Making Open Source Hardware - Leon Anavi, Konsulko Group
Publication date: 2017-10-24
Playlist: Open Source Summit Europe & Embedded Linux Conference Europe 2017
Description: 
	Free and Open Source Software Tools for Making Open Source Hardware - Leon Anavi, Konsulko Group

The open source hardware movement is becoming more and more popular. But is it worth making open source hardware if it has been designed with expensive proprietary software? In this presentation, Leon Anavi will share his experience how to use free and open source software for making high-quality entirely open source devices: from the designing the PCB with KiCAD through making a case with OpenSCAD or FreeCAD to slicing with Cura and 3D printing. The talk will also provide information about open source hardware licenses, getting started guidelines, tips for avoiding common pitfalls and mistakes. The challenges of prototyping and low-volume manufacturing with both SMT and THT will be also discussed.

About Leon Anavi
Leon Anavi is an open source enthusiast and a senior software engineer at Konsulko Group. He is an active contributor to Automotive Grade Linux (AGL), GENIVI Development Platform, Tizen as well as to a lot of other open source projects. His professional experience includes web and mobile application development for various platforms as well as porting embedded Linux distributions to Raspberry Pi and devices with i.MX6, Rockchip and Allwinner (aka sunxi) SoC. Leon holds a masters in Information Technology from the Technical University Sofia. He is the author of the Tizen Cookbook printed by Packt Publishing. His previous speaking experience includes talks about open source software during events in San Francisco, Portland (OR), Hong Kong, Shanghai, Shenzhen, Brussels, Berlin, Bratislava, Sofia and his hometown Plovdiv.
Captions: 
	00:00:00,030 --> 00:00:10,290
okay thank you very much for joining so

00:00:07,919 --> 00:00:11,759
in the next 40 minutes we'll be talking

00:00:10,290 --> 00:00:15,660
about free and open source software

00:00:11,759 --> 00:00:17,910
tools for making open source hardware my

00:00:15,660 --> 00:00:21,029
name is Nolan AVI and I'm a senior

00:00:17,910 --> 00:00:22,920
software engineer at gonzaga group the

00:00:21,029 --> 00:00:24,869
company I work for provide consultancy

00:00:22,920 --> 00:00:27,539
services for hardware bring up of

00:00:24,869 --> 00:00:29,490
embedded devices but I'm here to talk

00:00:27,539 --> 00:00:32,219
about something a little bit different

00:00:29,490 --> 00:00:34,739
and it's not just software it's both

00:00:32,219 --> 00:00:38,489
software and hardware yet gender for

00:00:34,739 --> 00:00:40,969
today spreads in three directions first

00:00:38,489 --> 00:00:45,390
well speak about open source hardware

00:00:40,969 --> 00:00:48,270
after that I'll share some experience

00:00:45,390 --> 00:00:49,950
that I have with free and open source

00:00:48,270 --> 00:00:51,960
software tools for designing printed

00:00:49,950 --> 00:00:54,899
circuit boards as I said I'm a software

00:00:51,960 --> 00:00:58,079
engineer so I do this as a hobby but I

00:00:54,899 --> 00:01:01,590
want to do an overview of the tools that

00:00:58,079 --> 00:01:04,199
we have that are free and open source to

00:01:01,590 --> 00:01:05,970
do this job and finally the third

00:01:04,199 --> 00:01:10,229
direction and the final part of the

00:01:05,970 --> 00:01:13,320
presentation is about making cases with

00:01:10,229 --> 00:01:17,040
3d printing services and using free and

00:01:13,320 --> 00:01:19,020
open source software cut how many of you

00:01:17,040 --> 00:01:21,560
are familiar with open source hardware

00:01:19,020 --> 00:01:23,970
as a term can you raise your hands oh

00:01:21,560 --> 00:01:27,420
that's perfect you're the perfect

00:01:23,970 --> 00:01:29,579
audience just for the record I have to

00:01:27,420 --> 00:01:33,180
say that open source hardware is quite

00:01:29,579 --> 00:01:35,460
similar as open source software so the

00:01:33,180 --> 00:01:37,680
idea is to share the design of a

00:01:35,460 --> 00:01:40,140
physical object that is publicly

00:01:37,680 --> 00:01:43,200
available so other people can benefit

00:01:40,140 --> 00:01:47,729
from it for example students can use it

00:01:43,200 --> 00:01:52,680
to to educate people our people can

00:01:47,729 --> 00:01:59,820
modify the design even sell it and the

00:01:52,680 --> 00:02:01,829
open source right so the open source

00:01:59,820 --> 00:02:07,500
hardware movement is getting some

00:02:01,829 --> 00:02:09,629
traction in the recent years when you

00:02:07,500 --> 00:02:12,379
have a physical project that you would

00:02:09,629 --> 00:02:14,060
like to share in terms of schematics

00:02:12,379 --> 00:02:16,159
in order to make it open source really

00:02:14,060 --> 00:02:19,069
open-source hardware you need to pick up

00:02:16,159 --> 00:02:21,889
a license it's the same work for like

00:02:19,069 --> 00:02:24,799
with open source software and you can

00:02:21,889 --> 00:02:27,319
even use some of the licenses that are

00:02:24,799 --> 00:02:29,510
available and popular for software but

00:02:27,319 --> 00:02:31,909
since software is different from

00:02:29,510 --> 00:02:36,889
hardware I recommend you to pick up a

00:02:31,909 --> 00:02:39,049
license that covers better hardware I

00:02:36,889 --> 00:02:40,760
have listed here some of the popular

00:02:39,049 --> 00:02:42,739
licenses that I have seen you know open

00:02:40,760 --> 00:02:45,280
source hardware projects of course these

00:02:42,739 --> 00:02:48,500
are just a few of the success there

00:02:45,280 --> 00:02:52,129
there are a lot of other options you can

00:02:48,500 --> 00:02:55,219
even make your own license that fits

00:02:52,129 --> 00:02:57,199
perfectly for your product if you're not

00:02:55,219 --> 00:02:59,299
sure just have a look at the other

00:02:57,199 --> 00:03:01,129
open-source hardware projects read the

00:02:59,299 --> 00:03:04,159
licenses and pick the one that suits you

00:03:01,129 --> 00:03:08,060
best for my case I prefer the Creative

00:03:04,159 --> 00:03:12,500
Commons open-source licenses for

00:03:08,060 --> 00:03:16,609
hardware products what are the benefits

00:03:12,500 --> 00:03:21,889
of open source hardware the first thing

00:03:16,609 --> 00:03:23,959
is that it gives confidence that the

00:03:21,889 --> 00:03:26,090
design will be available even if the

00:03:23,959 --> 00:03:29,989
original manufacturers stop producing

00:03:26,090 --> 00:03:32,090
the device it's a common case in in the

00:03:29,989 --> 00:03:35,780
industry that some companies make a

00:03:32,090 --> 00:03:38,120
product after a decade this product is

00:03:35,780 --> 00:03:40,699
no longer on the market but there are

00:03:38,120 --> 00:03:43,280
still systems that are based and using

00:03:40,699 --> 00:03:48,259
these devices and this could be a

00:03:43,280 --> 00:03:50,120
problem for maintaining maintaining a

00:03:48,259 --> 00:03:52,280
system based on certain hardware devices

00:03:50,120 --> 00:03:55,269
when open source hardware you can be

00:03:52,280 --> 00:03:57,739
sure that you cannot you not be in this

00:03:55,269 --> 00:03:59,659
embarrassing situation when you have a

00:03:57,739 --> 00:04:01,159
system that's running smoothly but the

00:03:59,659 --> 00:04:03,259
hardware is not there on the market

00:04:01,159 --> 00:04:04,849
because you with if this is an open

00:04:03,259 --> 00:04:08,299
source hardware you can make it on your

00:04:04,849 --> 00:04:10,430
own the second thing is that open source

00:04:08,299 --> 00:04:13,699
hardware is putting pressure on the

00:04:10,430 --> 00:04:15,739
price to be low because when you have an

00:04:13,699 --> 00:04:18,320
open source hardware product you know

00:04:15,739 --> 00:04:20,030
the bureau of materials and come on we

00:04:18,320 --> 00:04:22,490
are all engineers we can go and check

00:04:20,030 --> 00:04:26,610
what's inside we can see the parts and

00:04:22,490 --> 00:04:29,010
that's how we can see if the price is

00:04:26,610 --> 00:04:31,580
so open-source hardware is about making

00:04:29,010 --> 00:04:34,380
fair prices as well

00:04:31,580 --> 00:04:36,480
another benefit and this is probably the

00:04:34,380 --> 00:04:39,780
most important in terms of embedded

00:04:36,480 --> 00:04:41,780
devices is that you can customize the

00:04:39,780 --> 00:04:44,880
hardware you can make your own devices

00:04:41,780 --> 00:04:46,950
by getting the original hardware by

00:04:44,880 --> 00:04:49,170
contributing your changes customizing

00:04:46,950 --> 00:04:52,520
them on top of what has been already

00:04:49,170 --> 00:04:54,870
shared it's all about sharing knowledge

00:04:52,520 --> 00:04:56,010
educating people and getting feedback

00:04:54,870 --> 00:04:57,690
from the community

00:04:56,010 --> 00:04:59,340
for small companies that are making

00:04:57,690 --> 00:05:01,560
open-source harder this is really

00:04:59,340 --> 00:05:04,410
important because this is how they can

00:05:01,560 --> 00:05:06,600
get feedback from high quality engineers

00:05:04,410 --> 00:05:10,220
and they can improve the product that

00:05:06,600 --> 00:05:10,220
are they're providing to their customers

00:05:10,820 --> 00:05:17,280
who is making open-source hardware I bet

00:05:13,920 --> 00:05:18,870
you all know these names and speaking

00:05:17,280 --> 00:05:22,590
about open-source hardware I believe

00:05:18,870 --> 00:05:26,040
number one should be Arduino it's widely

00:05:22,590 --> 00:05:29,280
popular everyone knows it and it was one

00:05:26,040 --> 00:05:31,350
of the very first embedded boards that

00:05:29,280 --> 00:05:33,630
became so popular and it's based on

00:05:31,350 --> 00:05:36,090
open-source hardware which means that

00:05:33,630 --> 00:05:38,610
anyone can manufacture it of course the

00:05:36,090 --> 00:05:40,560
Arduino trademark Arduino is a trademark

00:05:38,610 --> 00:05:45,120
so other manufacturers use different

00:05:40,560 --> 00:05:47,670
names there's a company in my hometown

00:05:45,120 --> 00:05:49,740
ollie max which are also making a lot of

00:05:47,670 --> 00:05:53,010
open-source hardware of course Sparkfun

00:05:49,740 --> 00:05:56,070
Adafruit even big corporations like into

00:05:53,010 --> 00:05:58,350
Google and IBM nowadays release some of

00:05:56,070 --> 00:06:00,710
their products hardware products and

00:05:58,350 --> 00:06:03,240
their open source hardware licenses

00:06:00,710 --> 00:06:05,250
there are a lot of examples about open

00:06:03,240 --> 00:06:08,990
source hardware I have selected just a

00:06:05,250 --> 00:06:12,690
few of them so let's start with Arduino

00:06:08,990 --> 00:06:14,940
as I said this is the bright example for

00:06:12,690 --> 00:06:17,400
open source hardware everyone knows it

00:06:14,940 --> 00:06:24,180
from students to professionals we all

00:06:17,400 --> 00:06:27,630
love Arduino minnowboard is it's a

00:06:24,180 --> 00:06:29,820
product which is with Intel Atom CPU

00:06:27,630 --> 00:06:31,650
it's a very powerful single board

00:06:29,820 --> 00:06:33,870
computer that it's entirely open-source

00:06:31,650 --> 00:06:35,970
hardware there are a few versions of

00:06:33,870 --> 00:06:36,780
mini board over the years this is the

00:06:35,970 --> 00:06:39,710
last one

00:06:36,780 --> 00:06:44,470
mini board turbo before that we had

00:06:39,710 --> 00:06:48,380
bored max and the original minnowboard I

00:06:44,470 --> 00:06:50,450
bet you have all seen this and Google

00:06:48,380 --> 00:06:53,510
released the cardboards in in order to

00:06:50,450 --> 00:06:57,110
make virtual reality more popular and

00:06:53,510 --> 00:06:59,990
they shared the design of this physical

00:06:57,110 --> 00:07:03,200
object so anyone can do it you can buy a

00:06:59,990 --> 00:07:06,830
pizza grab the card book cardboard and

00:07:03,200 --> 00:07:09,230
out of it you can make make a Google

00:07:06,830 --> 00:07:11,780
cardboard for virtual reality this is a

00:07:09,230 --> 00:07:13,670
fine example how big companies are also

00:07:11,780 --> 00:07:16,400
joining the open-source hardware

00:07:13,670 --> 00:07:19,480
movement another example like this is

00:07:16,400 --> 00:07:22,400
the IBM TJ but this was released

00:07:19,480 --> 00:07:24,530
actually this year this is a friendly

00:07:22,400 --> 00:07:27,920
robot that you can build put on your

00:07:24,530 --> 00:07:34,010
desk and talk with it first serving some

00:07:27,920 --> 00:07:36,050
simple tasks only maxtor is one is to do

00:07:34,010 --> 00:07:37,700
it yourself laptop all the Max is a

00:07:36,050 --> 00:07:40,730
company based in Bulgaria I'm coming

00:07:37,700 --> 00:07:44,480
also from Bulgaria there are headquarter

00:07:40,730 --> 00:07:46,850
is in my hometown and the day before

00:07:44,480 --> 00:07:49,160
yesterday on Saturday they released it

00:07:46,850 --> 00:07:52,460
on the market we had a workshop and it

00:07:49,160 --> 00:07:55,910
was amazing because just in about 90

00:07:52,460 --> 00:07:58,610
minutes everyone was able to make with

00:07:55,910 --> 00:08:01,550
his bare hands to assemble a laptop that

00:07:58,610 --> 00:08:05,750
is open-source hardware it was a

00:08:01,550 --> 00:08:08,600
fantastic experience and since we were

00:08:05,750 --> 00:08:10,370
in in in the Czech Republic my last

00:08:08,600 --> 00:08:12,830
example that should inspire you how

00:08:10,370 --> 00:08:18,100
great is open-source hardware is about

00:08:12,830 --> 00:08:22,970
the 3d printers have you heard them ok

00:08:18,100 --> 00:08:25,760
ok all right so yes a person on the

00:08:22,970 --> 00:08:27,410
first row said that he even has this

00:08:25,760 --> 00:08:30,170
printer in his office one of these

00:08:27,410 --> 00:08:32,450
printers so this is a 3d printer that

00:08:30,170 --> 00:08:34,520
it's open source it's capable of making

00:08:32,450 --> 00:08:42,340
open-source hardware as well isn't that

00:08:34,520 --> 00:08:46,850
great so how to make a really entirely

00:08:42,340 --> 00:08:49,460
open-source device open source software

00:08:46,850 --> 00:08:51,800
has been here for decades we are all

00:08:49,460 --> 00:08:54,280
very well familiar with free and open

00:08:51,800 --> 00:08:57,530
source software but speaking about

00:08:54,280 --> 00:08:59,420
open-source hardware and putting things

00:08:57,530 --> 00:09:01,280
together both open-source hardware and

00:08:59,420 --> 00:09:05,420
open-source software is something a

00:09:01,280 --> 00:09:08,960
little bit newer so for an embedded

00:09:05,420 --> 00:09:11,210
device in terms of since we're at Linux

00:09:08,960 --> 00:09:13,190
conference apart from the open source

00:09:11,210 --> 00:09:15,260
software stack we need an open source

00:09:13,190 --> 00:09:18,410
hardware the heart of the hardware is

00:09:15,260 --> 00:09:21,650
the printed circuit board and we need a

00:09:18,410 --> 00:09:23,770
case so making the case is actually the

00:09:21,650 --> 00:09:28,700
most difficult part is in my experience

00:09:23,770 --> 00:09:31,340
it's uh it's it's time-consuming to make

00:09:28,700 --> 00:09:34,820
it you need a few times and it's not

00:09:31,340 --> 00:09:37,430
that easy to produce it wasn't that easy

00:09:34,820 --> 00:09:39,950
to produce a plastic case for quite some

00:09:37,430 --> 00:09:41,960
time but now we have this very

00:09:39,950 --> 00:09:47,420
affordable 3d printer so anyone can

00:09:41,960 --> 00:09:50,540
build a case so the question that is the

00:09:47,420 --> 00:09:53,290
core of this presentation is is it worth

00:09:50,540 --> 00:09:55,790
designing open-source hardware products

00:09:53,290 --> 00:09:58,970
we're expensive proprietary software

00:09:55,790 --> 00:10:02,570
tools is it worth paying thousands of US

00:09:58,970 --> 00:10:05,870
doors for licensing the software that we

00:10:02,570 --> 00:10:07,700
use to make open-source hardware let's

00:10:05,870 --> 00:10:10,160
have a look at some of the options that

00:10:07,700 --> 00:10:12,620
we have for this software for making

00:10:10,160 --> 00:10:14,870
printed circuit boards ego this is

00:10:12,620 --> 00:10:17,180
probably one of the most popular among

00:10:14,870 --> 00:10:20,960
hobbyists that is not open source it's

00:10:17,180 --> 00:10:23,960
very popular because it has it has a

00:10:20,960 --> 00:10:26,450
free license for small two layer printed

00:10:23,960 --> 00:10:29,510
circuit boards with some limitations of

00:10:26,450 --> 00:10:32,480
the size it's also free for students but

00:10:29,510 --> 00:10:34,310
it has a paid subscription and not that

00:10:32,480 --> 00:10:36,970
far ago I think it was in the beginning

00:10:34,310 --> 00:10:39,590
of this year it was bought by a dope

00:10:36,970 --> 00:10:42,560
Altium it was formerly not proto

00:10:39,590 --> 00:10:46,040
probably a hardware engineer would

00:10:42,560 --> 00:10:47,600
recommend you were using counting it but

00:10:46,040 --> 00:10:49,750
the problem is that it's very expensive

00:10:47,600 --> 00:10:53,180
to of course it's very good to as well

00:10:49,750 --> 00:10:55,910
other popular tools are such as Orkut or

00:10:53,180 --> 00:10:59,180
Solid Works Electrical also require high

00:10:55,910 --> 00:11:01,990
fees so I forgot to ask you by the way

00:10:59,180 --> 00:11:04,250
how many of you are hardware engineers

00:11:01,990 --> 00:11:07,310
okay and how many of you software

00:11:04,250 --> 00:11:07,889
engineers make it so firm okay we have a

00:11:07,310 --> 00:11:09,389
few hard

00:11:07,889 --> 00:11:12,839
our engineers the majority of software

00:11:09,389 --> 00:11:14,879
I'm also a software engineer so take

00:11:12,839 --> 00:11:16,949
whatever I say about harder with a pinch

00:11:14,879 --> 00:11:19,559
of salt because you know I'm so just the

00:11:16,949 --> 00:11:22,350
software Gani and speaking about tools

00:11:19,559 --> 00:11:25,649
for making hardware it's it's kind of a

00:11:22,350 --> 00:11:29,790
religion if someone is used to using out

00:11:25,649 --> 00:11:32,399
him I don't expect him to switch to free

00:11:29,790 --> 00:11:34,679
and open-source too but if you are

00:11:32,399 --> 00:11:37,049
designing a new product you want to try

00:11:34,679 --> 00:11:38,669
something new or even if you don't have

00:11:37,049 --> 00:11:42,209
any experience with any of the software

00:11:38,669 --> 00:11:44,639
go for a free and open-source option so

00:11:42,209 --> 00:11:47,419
what we have on the market as of today

00:11:44,639 --> 00:11:52,049
that's free and open-source software

00:11:47,419 --> 00:11:54,779
there are a lot of a lot of suits for

00:11:52,049 --> 00:11:57,799
designing printed circuit boards these

00:11:54,779 --> 00:12:01,739
three are among the most popular

00:11:57,799 --> 00:12:04,589
according to my knowledge I have listed

00:12:01,739 --> 00:12:06,749
them in order of difficulty so the

00:12:04,589 --> 00:12:09,600
easiest one is Fritzing after that we

00:12:06,749 --> 00:12:12,209
have jitta not exactly sure about the

00:12:09,600 --> 00:12:16,019
pronunciation although I tried it and

00:12:12,209 --> 00:12:17,790
finally we have kicad in this list let's

00:12:16,019 --> 00:12:21,809
have a look with a little bit of details

00:12:17,790 --> 00:12:24,269
of each of these applications so free

00:12:21,809 --> 00:12:25,829
think it's it's made for kids it's

00:12:24,269 --> 00:12:28,199
really simple it's free and open-source

00:12:25,829 --> 00:12:31,169
software available under the GPL version

00:12:28,199 --> 00:12:34,199
3 license it's cross-platform it works

00:12:31,169 --> 00:12:39,509
on Linux it works on Windows it works on

00:12:34,199 --> 00:12:43,470
Mac it's widely used by the community

00:12:39,509 --> 00:12:46,619
from making sketches and this is the the

00:12:43,470 --> 00:12:48,509
main purpose but you can also a design

00:12:46,619 --> 00:12:50,910
single layer very simple single layer

00:12:48,509 --> 00:12:53,249
printed circuit boards it's written in

00:12:50,910 --> 00:12:56,879
C++ with cute the source code is in

00:12:53,249 --> 00:12:58,769
github so if you want to contribute

00:12:56,879 --> 00:13:02,339
something just go to github and create

00:12:58,769 --> 00:13:04,470
get help or request the fact that it

00:13:02,339 --> 00:13:06,439
uses the cute framework makes it

00:13:04,470 --> 00:13:09,149
cross-platform

00:13:06,439 --> 00:13:11,279
so this is how it looks really

00:13:09,149 --> 00:13:14,160
convenient for making a small tutorial

00:13:11,279 --> 00:13:20,309
or or even not that small when you need

00:13:14,160 --> 00:13:21,779
to make a simple sketch now the next

00:13:20,309 --> 00:13:24,480
project is called dude

00:13:21,779 --> 00:13:27,060
I'm not personally using this one but I

00:13:24,480 --> 00:13:30,029
didn't I'm a bit of a research regarding

00:13:27,060 --> 00:13:31,230
it it's quite old project actually it's

00:13:30,029 --> 00:13:32,939
again free and open-source software

00:13:31,230 --> 00:13:36,029
again GPL

00:13:32,939 --> 00:13:38,430
but this time version 2 it also works on

00:13:36,029 --> 00:13:40,800
Linux Windows and Mac OS for me that's

00:13:38,430 --> 00:13:43,439
really important from for a software to

00:13:40,800 --> 00:13:45,959
work on my machine and I'm a Linux user

00:13:43,439 --> 00:13:48,480
as you can guess so cross-platform

00:13:45,959 --> 00:13:51,860
is something that I look every time when

00:13:48,480 --> 00:13:54,779
I select a tool to use

00:13:51,860 --> 00:13:57,149
it supports it's a professional tool it

00:13:54,779 --> 00:14:00,120
supports printed circuit boards with

00:13:57,149 --> 00:14:02,519
multiple layers it's written with GT

00:14:00,120 --> 00:14:06,180
Cape and the source code is again engage

00:14:02,519 --> 00:14:08,490
repositories and now we're coming to my

00:14:06,180 --> 00:14:10,649
personal favourites that what I'm using

00:14:08,490 --> 00:14:11,790
for designing my hobby open-source

00:14:10,649 --> 00:14:14,430
hardware devices

00:14:11,790 --> 00:14:17,910
it's called kicad it has a long history

00:14:14,430 --> 00:14:20,670
with more than 20 years it's free and

00:14:17,910 --> 00:14:23,129
open source software under GPL version 3

00:14:20,670 --> 00:14:25,949
license again cross-platform works

00:14:23,129 --> 00:14:29,309
anywhere it supports PCB with multiple

00:14:25,949 --> 00:14:31,949
layers no limitations of the side it has

00:14:29,309 --> 00:14:34,079
a nice integration of 3d viewer so we

00:14:31,949 --> 00:14:37,470
can even previewed the board that you

00:14:34,079 --> 00:14:39,259
are designing the contributions for the

00:14:37,470 --> 00:14:44,670
development of kicad are coming from

00:14:39,259 --> 00:14:47,309
CERN see urine and it's been a very

00:14:44,670 --> 00:14:50,339
rapid development in kicad in the past

00:14:47,309 --> 00:14:53,250
couple of years it's already well

00:14:50,339 --> 00:14:54,899
adopted by the industry the company only

00:14:53,250 --> 00:14:57,120
Mac's that I've mentioned in one of the

00:14:54,899 --> 00:14:59,459
previous slides use kicad to design

00:14:57,120 --> 00:15:02,009
their laptop so the printed circuit

00:14:59,459 --> 00:15:04,019
boards which are highly complex within

00:15:02,009 --> 00:15:06,720
this do-it-yourself laptop are designed

00:15:04,019 --> 00:15:10,559
hewing using ad which is a fun example

00:15:06,720 --> 00:15:12,990
that is capable of handling not

00:15:10,559 --> 00:15:15,600
only hobby projects but professional

00:15:12,990 --> 00:15:18,600
projects that involve printed circuit

00:15:15,600 --> 00:15:20,759
boards on a lot of layers it's written

00:15:18,600 --> 00:15:26,759
in C++ the source code is in git

00:15:20,759 --> 00:15:29,639
repositories so this is how the PCB view

00:15:26,759 --> 00:15:31,319
of kicad looks like so basically the

00:15:29,639 --> 00:15:31,949
process is that you first do the

00:15:31,319 --> 00:15:33,990
schematics

00:15:31,949 --> 00:15:35,580
after that you select the footprints and

00:15:33,990 --> 00:15:38,190
you go to the PCB

00:15:35,580 --> 00:15:40,290
you were you play some components this

00:15:38,190 --> 00:15:41,940
is an open source hardwood on board for

00:15:40,290 --> 00:15:45,570
Raspberry Pi that I've designed in my

00:15:41,940 --> 00:15:49,440
spare time and this is just how kicad

00:15:45,570 --> 00:15:52,440
looks when you use it it's um it's uh I

00:15:49,440 --> 00:15:55,260
would say it's not that complex and

00:15:52,440 --> 00:15:56,490
user-friendly you you need you need to

00:15:55,260 --> 00:15:59,000
spend some time researching the

00:15:56,490 --> 00:16:04,140
documentation and probably in a few days

00:15:59,000 --> 00:16:05,790
you feel like home using kicad while

00:16:04,140 --> 00:16:07,950
preparing the slides for this

00:16:05,790 --> 00:16:10,680
presentation I found another two for

00:16:07,950 --> 00:16:12,810
designing CAD software it's an online

00:16:10,680 --> 00:16:16,560
tool that really impressed me

00:16:12,810 --> 00:16:17,550
it's called Mew meow cutter or something

00:16:16,560 --> 00:16:18,960
like that I'm not good with

00:16:17,550 --> 00:16:21,690
pronunciation sorry about that

00:16:18,960 --> 00:16:24,390
so it's online too that you can run with

00:16:21,690 --> 00:16:27,300
within your web browser and you can make

00:16:24,390 --> 00:16:29,010
a printed circuit board again it's a

00:16:27,300 --> 00:16:30,840
free and open source software tool it's

00:16:29,010 --> 00:16:32,730
written primarily in Java since we're

00:16:30,840 --> 00:16:35,370
talking something that it's really in

00:16:32,730 --> 00:16:36,870
JavaScript fight and go that's kind of

00:16:35,370 --> 00:16:38,490
normal since we're speaking about

00:16:36,870 --> 00:16:41,550
something that runs in your web browser

00:16:38,490 --> 00:16:44,670
and of course back end in the cloud the

00:16:41,550 --> 00:16:46,860
source code is in github it's it's kind

00:16:44,670 --> 00:16:51,900
of basic but it was really fun trying

00:16:46,860 --> 00:16:54,510
out this this thing the project is still

00:16:51,900 --> 00:16:56,520
live although the contributions in 2017

00:16:54,510 --> 00:16:58,380
that I spotted were a little bit less

00:16:56,520 --> 00:17:00,690
compared to what I saw in the previous

00:16:58,380 --> 00:17:04,140
years but if you have some spare time

00:17:00,690 --> 00:17:06,930
have a look at that it's funny so a few

00:17:04,140 --> 00:17:08,670
recommendations if you're designing on

00:17:06,930 --> 00:17:11,060
printed circuit board how many of you

00:17:08,670 --> 00:17:15,510
have designed a printed circuit board

00:17:11,060 --> 00:17:18,000
all right I'm just sharing some of the

00:17:15,510 --> 00:17:19,890
experience that I have as I said a

00:17:18,000 --> 00:17:21,780
software engineer at the beginning had a

00:17:19,890 --> 00:17:27,150
lot of failures making printed circuit

00:17:21,780 --> 00:17:29,250
boards I guess the few things that I

00:17:27,150 --> 00:17:31,770
would recommend any one of you to follow

00:17:29,250 --> 00:17:34,230
is first to go to the manufacturer of

00:17:31,770 --> 00:17:37,230
the PCB that you you prefer to work with

00:17:34,230 --> 00:17:39,600
and to check there are minimum

00:17:37,230 --> 00:17:42,420
requirements for tray spaces trios and

00:17:39,600 --> 00:17:44,700
angular rings this could save you a lot

00:17:42,420 --> 00:17:47,310
of times time and a lot of failures

00:17:44,700 --> 00:17:49,290
unlike the software when you're making

00:17:47,310 --> 00:17:51,660
hardware you first

00:17:49,290 --> 00:17:53,730
have to design something after that you

00:17:51,660 --> 00:17:57,330
have to manufacture it it's not like

00:17:53,730 --> 00:17:59,640
pressing run button and just doing QA

00:17:57,330 --> 00:18:01,830
tests what harder it's a little bit

00:17:59,640 --> 00:18:03,480
difficult different keep in mind the

00:18:01,830 --> 00:18:06,360
complexity of the assembly process while

00:18:03,480 --> 00:18:08,820
designing the PCBs I have done a few

00:18:06,360 --> 00:18:11,810
failures because of this sometimes the

00:18:08,820 --> 00:18:14,250
design is valid it works you can

00:18:11,810 --> 00:18:15,690
assemble it once but actually the

00:18:14,250 --> 00:18:18,450
assembly process could take too much

00:18:15,690 --> 00:18:21,660
time so when you're designing the the

00:18:18,450 --> 00:18:28,080
board keep in mind how to make the the

00:18:21,660 --> 00:18:30,480
assembly process easier finally it's

00:18:28,080 --> 00:18:32,490
about about the case as I said it based

00:18:30,480 --> 00:18:35,280
on my experience making a plastic case

00:18:32,490 --> 00:18:37,170
or whatever kind of a case is the most

00:18:35,280 --> 00:18:42,210
difficult part of making an opensource

00:18:37,170 --> 00:18:44,660
entirely open source project so I would

00:18:42,210 --> 00:18:47,970
recommend considering the design of the

00:18:44,660 --> 00:18:51,870
of the case while making the printed

00:18:47,970 --> 00:18:53,850
circuit board it's a little bit hard to

00:18:51,870 --> 00:18:56,480
do it this way but still keep in mind

00:18:53,850 --> 00:18:59,520
because finally the final product is

00:18:56,480 --> 00:19:01,890
should be for users and users like even

00:18:59,520 --> 00:19:05,100
not even not only users even developers

00:19:01,890 --> 00:19:07,260
we all love to have not a better printed

00:19:05,100 --> 00:19:13,680
circuit board we love to have a device

00:19:07,260 --> 00:19:16,530
in a nice case so the question is where

00:19:13,680 --> 00:19:20,030
to print a prototype when you have a

00:19:16,530 --> 00:19:23,070
printed circuit board schematics

00:19:20,030 --> 00:19:25,590
I'm personally using I have personally

00:19:23,070 --> 00:19:29,310
tried all these options the first option

00:19:25,590 --> 00:19:31,740
is very nice website called oh Sh park

00:19:29,310 --> 00:19:34,140
there are provided providing services

00:19:31,740 --> 00:19:35,880
for making prototypes for two-layer and

00:19:34,140 --> 00:19:40,080
full their boards at very affordable

00:19:35,880 --> 00:19:41,820
prices and very good quality the process

00:19:40,080 --> 00:19:43,920
is super simple they have instructions

00:19:41,820 --> 00:19:46,140
how to export Gerber files and drill

00:19:43,920 --> 00:19:49,860
files and to upload them to their

00:19:46,140 --> 00:19:51,750
website they have one big button on

00:19:49,860 --> 00:19:55,800
their website where you just press

00:19:51,750 --> 00:19:59,880
upload your designs and in a few seconds

00:19:55,800 --> 00:20:01,200
you will see an image of your board that

00:19:59,880 --> 00:20:04,270
you can

00:20:01,200 --> 00:20:06,280
review the process is really simple

00:20:04,270 --> 00:20:08,770
because you don't have to select all the

00:20:06,280 --> 00:20:10,990
annoying options they just have a

00:20:08,770 --> 00:20:13,090
pre-selected all options for you to make

00:20:10,990 --> 00:20:16,060
a high-quality board and they have a

00:20:13,090 --> 00:20:19,420
purple color that's that's the trick of

00:20:16,060 --> 00:20:22,870
course if you have a local factory

00:20:19,420 --> 00:20:25,210
nearby you you can have you can go there

00:20:22,870 --> 00:20:28,870
and use it in Europe there are a lot of

00:20:25,210 --> 00:20:32,110
factories that are like this I live in

00:20:28,870 --> 00:20:34,030
um not that big city and we have like

00:20:32,110 --> 00:20:45,370
two factories providing services from

00:20:34,030 --> 00:20:47,110
making principal yes okay yeah I'll just

00:20:45,370 --> 00:20:49,720
repeat the question so the question is

00:20:47,110 --> 00:20:54,790
since I'm since I'm based in Bulgaria

00:20:49,720 --> 00:20:57,490
are the prices competitive compared to

00:20:54,790 --> 00:21:03,670
the Chinese prices so the answer is no

00:20:57,490 --> 00:21:06,250
so yeah just give me a second yeah okay

00:21:03,670 --> 00:21:09,010
so using local factories of course

00:21:06,250 --> 00:21:11,680
making production in China so is cheaper

00:21:09,010 --> 00:21:14,530
we all know that they're they have a

00:21:11,680 --> 00:21:17,080
huge experience in manufacturing but if

00:21:14,530 --> 00:21:20,140
you make just a prototype making in

00:21:17,080 --> 00:21:23,890
Europe especially in Bulgaria the price

00:21:20,140 --> 00:21:26,080
is not that higher and for me I prefer

00:21:23,890 --> 00:21:28,450
to make them locally because it says

00:21:26,080 --> 00:21:31,300
saves me time for for the transportation

00:21:28,450 --> 00:21:33,460
you'll see if I if I use oh Sh Park they

00:21:31,300 --> 00:21:35,410
have a really fast delivery but still it

00:21:33,460 --> 00:21:38,710
takes a few days same goes for China

00:21:35,410 --> 00:21:42,100
well with the local with a local factory

00:21:38,710 --> 00:21:46,030
I can visit the factory and directly get

00:21:42,100 --> 00:21:48,790
the prototype so the the difference here

00:21:46,030 --> 00:21:51,490
is it depends on what kind of a project

00:21:48,790 --> 00:21:53,560
are you asking for because if you are

00:21:51,490 --> 00:21:58,180
speaking about a complex board that

00:21:53,560 --> 00:21:59,890
involves like six or eight layers there

00:21:58,180 --> 00:22:01,660
are not so many companies that can

00:21:59,890 --> 00:22:04,090
manufacture such kind of a board and

00:22:01,660 --> 00:22:06,040
then probably you need to go to to a

00:22:04,090 --> 00:22:09,670
Chinese manufacturing and you won't have

00:22:06,040 --> 00:22:11,470
that much of options but if you if

00:22:09,670 --> 00:22:13,460
you're designing a two-layer board or

00:22:11,470 --> 00:22:20,930
four layer board yeah

00:22:13,460 --> 00:22:22,790
making them in Europe is fine so now we

00:22:20,930 --> 00:22:23,630
are entering the next stage of the

00:22:22,790 --> 00:22:28,060
presentation

00:22:23,630 --> 00:22:32,600
it's about 3d CAD software for making

00:22:28,060 --> 00:22:34,940
physical objects like cases I have

00:22:32,600 --> 00:22:37,760
selected some free and open-source

00:22:34,940 --> 00:22:40,580
software tools which I believe are

00:22:37,760 --> 00:22:44,120
popular for designing a 3d object that

00:22:40,580 --> 00:22:46,730
can be after that 3d printed so the list

00:22:44,120 --> 00:22:49,610
here includes openscad q cat free cat

00:22:46,730 --> 00:22:52,460
and blender in the next slides we'll see

00:22:49,610 --> 00:22:54,560
with a little bit more details each of

00:22:52,460 --> 00:22:55,580
these software it's any one of you using

00:22:54,560 --> 00:23:01,220
them can you

00:22:55,580 --> 00:23:04,010
oh okay let's let's have a look at the

00:23:01,220 --> 00:23:06,320
each of them so open ask at this is my

00:23:04,010 --> 00:23:07,790
personal favorites and I believe every

00:23:06,320 --> 00:23:11,720
developer should love this project

00:23:07,790 --> 00:23:14,240
because it's really simple on the one

00:23:11,720 --> 00:23:15,920
side of the screen you write code on the

00:23:14,240 --> 00:23:18,560
other side you see a physical object

00:23:15,920 --> 00:23:21,590
isn't that gorgeous of course design is

00:23:18,560 --> 00:23:25,310
hated so it's a free and open source

00:23:21,590 --> 00:23:27,140
software its script only the only option

00:23:25,310 --> 00:23:29,750
is to write a script no other options

00:23:27,140 --> 00:23:31,900
it's available under GPL version 2

00:23:29,750 --> 00:23:34,310
license again it's cross-platform

00:23:31,900 --> 00:23:38,630
compatible works on your Linux

00:23:34,310 --> 00:23:40,970
distribution on Windows or Mac OS X the

00:23:38,630 --> 00:23:42,920
fact that it's cross-platform is because

00:23:40,970 --> 00:23:45,410
it's based on the Qt framework again

00:23:42,920 --> 00:23:47,000
it's written in C++ and the source code

00:23:45,410 --> 00:23:49,190
is in github so you know how to

00:23:47,000 --> 00:23:53,330
contribute code if you find a bug or

00:23:49,190 --> 00:23:56,270
something this is how it looks so here

00:23:53,330 --> 00:24:01,310
is how you write code it has its own

00:23:56,270 --> 00:24:02,630
scripting language well you have to mind

00:24:01,310 --> 00:24:04,970
that the learning curve at the beginning

00:24:02,630 --> 00:24:07,280
you have to put some efforts to to learn

00:24:04,970 --> 00:24:09,430
the scripting language but it's

00:24:07,280 --> 00:24:11,930
straightforward in my opinion and

00:24:09,430 --> 00:24:15,290
especially for making simple cases like

00:24:11,930 --> 00:24:18,910
this one here you can learn the script

00:24:15,290 --> 00:24:23,230
quite fast and make something of course

00:24:18,910 --> 00:24:25,280
this process of making cut objects

00:24:23,230 --> 00:24:26,570
physical objects using scripting

00:24:25,280 --> 00:24:28,669
language

00:24:26,570 --> 00:24:31,940
it's appropriate for more simpler

00:24:28,669 --> 00:24:34,639
project objects if you have if you won't

00:24:31,940 --> 00:24:36,739
want to make a very sophisticated case

00:24:34,639 --> 00:24:39,289
it might be a little bit difficult with

00:24:36,739 --> 00:24:41,239
open ask at so there are other free and

00:24:39,289 --> 00:24:43,909
open source software tools that you can

00:24:41,239 --> 00:24:46,129
consider let's have a look at them cue

00:24:43,909 --> 00:24:48,619
cat is one of them it's a

00:24:46,129 --> 00:24:50,179
two-dimensional cat software again free

00:24:48,619 --> 00:24:52,789
and open source software again written

00:24:50,179 --> 00:24:56,659
in C++ with cute and again works on

00:24:52,789 --> 00:24:59,029
multiple platforms free car is one of

00:24:56,659 --> 00:25:02,209
the most popular free and open source

00:24:59,029 --> 00:25:05,809
software because it combines both words

00:25:02,209 --> 00:25:08,869
you have the the option to to design

00:25:05,809 --> 00:25:12,879
based on open cascade to design visually

00:25:08,869 --> 00:25:15,739
and it also works everywhere it's again

00:25:12,879 --> 00:25:18,919
cross-platform compatible you can see

00:25:15,739 --> 00:25:21,229
the the recurring pattern that it's

00:25:18,919 --> 00:25:23,149
written in C++ and Python with the cute

00:25:21,229 --> 00:25:26,929
framework in the source code again in

00:25:23,149 --> 00:25:30,319
github so how many of you are using free

00:25:26,929 --> 00:25:33,079
cut one okay just a few of you so it's

00:25:30,319 --> 00:25:36,829
more difficult than it's more difficult

00:25:33,079 --> 00:25:38,959
than open S cut but it's easier than

00:25:36,829 --> 00:25:42,519
blender the next thing that that we

00:25:38,959 --> 00:25:46,729
gonna see and it's made especially for

00:25:42,519 --> 00:25:49,909
3d printed for sorry for 3d objects that

00:25:46,729 --> 00:25:53,389
you after that you can print blender is

00:25:49,909 --> 00:25:55,789
not exactly for it's not exactly a

00:25:53,389 --> 00:25:58,039
regular cut software actually it's not a

00:25:55,789 --> 00:26:01,369
CAD software at all it's a professional

00:25:58,039 --> 00:26:03,769
3d computer graphics suit that is used

00:26:01,369 --> 00:26:06,409
used widely used for making animation

00:26:03,769 --> 00:26:10,159
movies I'm pretty sure you have all seen

00:26:06,409 --> 00:26:12,589
the big bug movie with this giant white

00:26:10,159 --> 00:26:16,099
rabbit it's very popular in the pirate

00:26:12,589 --> 00:26:18,969
world people make visual effects with

00:26:16,099 --> 00:26:21,859
blender but you can also make 3d models

00:26:18,969 --> 00:26:23,899
export them to a stereo files and 3d

00:26:21,859 --> 00:26:26,299
print them again it's a free and open

00:26:23,899 --> 00:26:29,509
source software tools free and

00:26:26,299 --> 00:26:31,940
open-source software under available

00:26:29,509 --> 00:26:34,279
under GPL version to license its

00:26:31,940 --> 00:26:38,299
cross-platform it's written in C C++

00:26:34,279 --> 00:26:40,080
Python using OpenGL and of course again

00:26:38,299 --> 00:26:44,320
the source in get

00:26:40,080 --> 00:26:48,429
so when you have a 3d object already

00:26:44,320 --> 00:26:52,030
designed you have to export you have to

00:26:48,429 --> 00:26:55,420
export a file called STL and out of this

00:26:52,030 --> 00:26:59,380
STL file in order to 3d print it you

00:26:55,420 --> 00:27:03,309
have to convert the STL to a file called

00:26:59,380 --> 00:27:05,080
g code which is specifically set for the

00:27:03,309 --> 00:27:07,000
printer that you haven't because

00:27:05,080 --> 00:27:09,280
different print printers have different

00:27:07,000 --> 00:27:10,360
settings of course depends on the

00:27:09,280 --> 00:27:13,240
material and so on

00:27:10,360 --> 00:27:15,940
so hoodie maker the famous manufacturer

00:27:13,240 --> 00:27:17,860
of 3d printers has made a free and

00:27:15,940 --> 00:27:18,400
open-source software - called Ultimaker

00:27:17,860 --> 00:27:21,780
kora

00:27:18,400 --> 00:27:26,080
which is a software for slicing and

00:27:21,780 --> 00:27:28,510
preparing STL files for printing it

00:27:26,080 --> 00:27:31,270
supports not only Ultimaker 3d printers

00:27:28,510 --> 00:27:34,990
but many more and it's probably one of

00:27:31,270 --> 00:27:37,780
the most popular or the most popular

00:27:34,990 --> 00:27:39,690
open source solution for this job again

00:27:37,780 --> 00:27:43,600
it's a free and open source software

00:27:39,690 --> 00:27:46,840
under it's available under the lesser

00:27:43,600 --> 00:27:49,929
GPL license version 3 cross-platform so

00:27:46,840 --> 00:27:52,300
you can use it on any popular

00:27:49,929 --> 00:27:54,370
distribution that you have for a desktop

00:27:52,300 --> 00:27:55,929
it could be a Linux distribution it

00:27:54,370 --> 00:27:58,000
could be Windows it could be mac OS

00:27:55,929 --> 00:27:59,890
isn't that great all of these free

00:27:58,000 --> 00:28:02,470
open-source software tools that we are

00:27:59,890 --> 00:28:06,400
reviewing in this presentation support

00:28:02,470 --> 00:28:08,800
multiple platforms Ultimaker is written

00:28:06,400 --> 00:28:11,230
in Python and qml and the source code is

00:28:08,800 --> 00:28:13,540
in github this is how it looks actually

00:28:11,230 --> 00:28:16,750
the screen show that I took is a little

00:28:13,540 --> 00:28:20,050
bit on outer because I'd received an

00:28:16,750 --> 00:28:21,580
email last week from ruti maker' that

00:28:20,050 --> 00:28:24,550
they released the third version of the

00:28:21,580 --> 00:28:27,460
software but this is a little bit of

00:28:24,550 --> 00:28:28,480
older version I think this is 2.5 but

00:28:27,460 --> 00:28:30,940
you get the idea

00:28:28,480 --> 00:28:33,010
once you have an STL file you import

00:28:30,940 --> 00:28:37,179
this STL file you see something like

00:28:33,010 --> 00:28:40,260
this I have a very basic printer so here

00:28:37,179 --> 00:28:46,540
is the dimensions that my printer can

00:28:40,260 --> 00:28:49,000
can print and I have to to put the

00:28:46,540 --> 00:28:51,730
object that I want to print in a way to

00:28:49,000 --> 00:28:54,080
fit the dimensions of the supported

00:28:51,730 --> 00:28:58,320
dimensions by the printer

00:28:54,080 --> 00:29:01,260
okay so where we're coming to the end of

00:28:58,320 --> 00:29:07,440
the presentation and I would like to

00:29:01,260 --> 00:29:09,060
come up with a few conclusions so in

00:29:07,440 --> 00:29:11,340
this presentation we briefly went

00:29:09,060 --> 00:29:12,690
through some of the not all of them but

00:29:11,340 --> 00:29:14,730
some of the free and open source

00:29:12,690 --> 00:29:17,540
software tools available for making open

00:29:14,730 --> 00:29:20,100
source hardware and I hope that I

00:29:17,540 --> 00:29:24,090
managed to convince you that open source

00:29:20,100 --> 00:29:26,670
hardware is a viable business business

00:29:24,090 --> 00:29:28,620
model and furthermore there enough free

00:29:26,670 --> 00:29:31,830
and open source software tools to make

00:29:28,620 --> 00:29:34,170
open source hardware because it's

00:29:31,830 --> 00:29:36,720
valuable not only to share the

00:29:34,170 --> 00:29:39,150
schematics of the free open free open

00:29:36,720 --> 00:29:41,330
source hardware sorry it's not it's not

00:29:39,150 --> 00:29:43,590
valuable only to share the the

00:29:41,330 --> 00:29:46,280
schematics of a hardware product under

00:29:43,590 --> 00:29:49,320
open source license but it's also viable

00:29:46,280 --> 00:29:51,480
valuable to share it in a way that other

00:29:49,320 --> 00:29:56,040
people can easily contribute and use

00:29:51,480 --> 00:29:57,570
this product and one more thing no

00:29:56,040 --> 00:30:01,290
matter if you make in software hardware

00:29:57,570 --> 00:30:04,020
share it under open source license so

00:30:01,290 --> 00:30:09,110
thank you very much and we have like

00:30:04,020 --> 00:30:09,110
five minutes for questions any questions

00:30:15,890 --> 00:30:25,490
have a question regarding flight if you

00:30:19,890 --> 00:30:30,210
maybe now there is some team that

00:30:25,490 --> 00:30:32,910
recently named copyright trolls so how

00:30:30,210 --> 00:30:35,460
can they make sure that if you lose at

00:30:32,910 --> 00:30:37,700
your hardware and there's some open

00:30:35,460 --> 00:30:40,890
source license that you will not try to

00:30:37,700 --> 00:30:43,440
take some money from me and to which

00:30:40,890 --> 00:30:47,310
line since it's better to use in order

00:30:43,440 --> 00:30:51,960
to prevent okay well it's a tricky

00:30:47,310 --> 00:30:54,600
question and as an engineer I'm not sure

00:30:51,960 --> 00:31:00,150
I can provide you the exact answer

00:30:54,600 --> 00:31:04,540
because this this involves a lot of

00:31:00,150 --> 00:31:05,950
knowledge about worse and worse so

00:31:04,540 --> 00:31:11,680
it's a it's a hard question for me to

00:31:05,950 --> 00:31:13,540
answer what usually you well I prefer to

00:31:11,680 --> 00:31:16,540
publish the things I do and to reuse

00:31:13,540 --> 00:31:18,940
open-source hardware or under Creative

00:31:16,540 --> 00:31:21,160
Commons okay thank you but of course

00:31:18,940 --> 00:31:23,950
Creative Commons have different versions

00:31:21,160 --> 00:31:27,520
so pay attention to version and read

00:31:23,950 --> 00:31:30,430
carefully the the license if you're not

00:31:27,520 --> 00:31:34,020
sure take some time to speak with a wire

00:31:30,430 --> 00:31:48,640
that can provide you exact information

00:31:34,020 --> 00:31:50,770
okay thank you so as a software engineer

00:31:48,640 --> 00:31:52,600
like yourself I've played around with

00:31:50,770 --> 00:31:55,660
Fritzing in kicad and a few of the

00:31:52,600 --> 00:31:58,600
others and I know that a lot of hardware

00:31:55,660 --> 00:32:01,930
designers among you like to roll your

00:31:58,600 --> 00:32:05,080
own footprints that's what I've been

00:32:01,930 --> 00:32:06,870
told I found things like things are

00:32:05,080 --> 00:32:09,730
really good there's a lot there already

00:32:06,870 --> 00:32:12,100
but it's very limited and when you want

00:32:09,730 --> 00:32:13,510
to step up going to someone like kicad I

00:32:12,100 --> 00:32:15,430
don't know whether you found it but I

00:32:13,510 --> 00:32:18,430
find it extremely difficult to find the

00:32:15,430 --> 00:32:20,890
footprints of stuff I wanted already and

00:32:18,430 --> 00:32:23,800
obviously is a hobbyist in my spare time

00:32:20,890 --> 00:32:26,560
with this it takes a lot of time have

00:32:23,800 --> 00:32:29,560
you how did you find that did you find

00:32:26,560 --> 00:32:31,930
that easy hard oh is that a major pain

00:32:29,560 --> 00:32:35,110
point for you yeah excellent question

00:32:31,930 --> 00:32:37,150
bullseye so making the foot prints is

00:32:35,110 --> 00:32:40,120
really important part of making up the

00:32:37,150 --> 00:32:42,550
hardware it's because it's part of the

00:32:40,120 --> 00:32:44,530
assembly once you do a printed circuit

00:32:42,550 --> 00:32:47,940
board it could work but if the

00:32:44,530 --> 00:32:50,680
footprints are not exact this could

00:32:47,940 --> 00:32:51,820
bring a lot of pain during the

00:32:50,680 --> 00:32:54,550
manufacturing process

00:32:51,820 --> 00:32:56,260
even if if you're doing a small volume

00:32:54,550 --> 00:32:58,090
manufacturing

00:32:56,260 --> 00:33:00,370
yes Fritzing is good for making

00:32:58,090 --> 00:33:02,290
schematics it's I don't find it very

00:33:00,370 --> 00:33:04,120
useful for making a printed circuit

00:33:02,290 --> 00:33:06,490
board since it supports just a single

00:33:04,120 --> 00:33:08,920
layer board or although there are some

00:33:06,490 --> 00:33:10,810
services for making from Fritzing to

00:33:08,920 --> 00:33:13,030
something more complicated but I

00:33:10,810 --> 00:33:17,450
personally use kicad for making two

00:33:13,030 --> 00:33:19,789
layer boards and kicad offers

00:33:17,450 --> 00:33:23,840
building library with some footprints

00:33:19,789 --> 00:33:26,240
but honestly if you have to build a high

00:33:23,840 --> 00:33:28,010
quality product it's better to pick up

00:33:26,240 --> 00:33:30,470
the components especially speaking about

00:33:28,010 --> 00:33:32,120
the SMD components the surface mounting

00:33:30,470 --> 00:33:36,470
components that require surface mount

00:33:32,120 --> 00:33:39,080
technology so pick up the components

00:33:36,470 --> 00:33:40,789
have a look at the data sheet the bottom

00:33:39,080 --> 00:33:42,950
page are the last pages of the datasheet

00:33:40,789 --> 00:33:44,899
there are exact dimensions physical

00:33:42,950 --> 00:33:47,320
dimensions of the components and based

00:33:44,899 --> 00:33:50,149
on these physical dimensions it's good

00:33:47,320 --> 00:33:52,250
either to check the libraries if you're

00:33:50,149 --> 00:33:55,460
using already libraries or to make your

00:33:52,250 --> 00:33:59,480
own footprints this could save you a lot

00:33:55,460 --> 00:34:02,330
of time I made this mistake to use some

00:33:59,480 --> 00:34:06,139
libraries that I found in github for a

00:34:02,330 --> 00:34:07,070
certain SMD component of course it works

00:34:06,139 --> 00:34:10,879
it's fine

00:34:07,070 --> 00:34:22,069
but for prototyping but after that I had

00:34:10,879 --> 00:34:24,139
some problems with the SMT assembly so

00:34:22,069 --> 00:34:26,389
maybe I would like to add an information

00:34:24,139 --> 00:34:28,429
to that so Kika does not only ship some

00:34:26,389 --> 00:34:30,589
some libraries with it but they're

00:34:28,429 --> 00:34:34,040
working on an open library that you can

00:34:30,589 --> 00:34:35,929
use with your key card so if you're on

00:34:34,040 --> 00:34:38,780
footprints that do not really work just

00:34:35,929 --> 00:34:40,700
fix them in their github library and

00:34:38,780 --> 00:34:42,169
then we're not only having an open

00:34:40,700 --> 00:34:43,609
source tool but we're owned so we're

00:34:42,169 --> 00:34:46,909
having an open source library that we

00:34:43,609 --> 00:34:50,260
can really use in there and I guess then

00:34:46,909 --> 00:34:54,079
we can benefit from all that open source

00:34:50,260 --> 00:34:56,300
yeah things that come out there yes

00:34:54,079 --> 00:34:58,819
that's exactly thank you very much for

00:34:56,300 --> 00:35:02,000
additional information sorry if I misled

00:34:58,819 --> 00:35:03,349
you it's not that the components in the

00:35:02,000 --> 00:35:06,290
library that doesn't work all of them

00:35:03,349 --> 00:35:08,599
work and I find but sometimes there

00:35:06,290 --> 00:35:10,369
might be slight differences and one

00:35:08,599 --> 00:35:14,030
important thing that I have to add is

00:35:10,369 --> 00:35:15,650
that certain companies are sharing the

00:35:14,030 --> 00:35:17,480
libraries that they're using to design

00:35:15,650 --> 00:35:20,420
their own products for example all Emacs

00:35:17,480 --> 00:35:22,250
shared the libraries that they did for

00:35:20,420 --> 00:35:23,720
their products because they're using

00:35:22,250 --> 00:35:25,430
kicad but they're making their own

00:35:23,720 --> 00:35:27,170
footprints for each component that

00:35:25,430 --> 00:35:30,410
they're using and they published all

00:35:27,170 --> 00:35:32,589
these libraries and github a few months

00:35:30,410 --> 00:35:32,589
ago

00:35:32,760 --> 00:35:55,450
okay one question over there I missed

00:35:51,840 --> 00:35:58,720
first few minutes of presentation maybe

00:35:55,450 --> 00:36:02,770
you already discussed that you talked

00:35:58,720 --> 00:36:07,960
about with the printing of cases what

00:36:02,770 --> 00:36:10,180
about 3d printing of PCBs oh okay but

00:36:07,960 --> 00:36:15,400
really printing about PCBs I've never

00:36:10,180 --> 00:36:17,410
tried that my process of doing her

00:36:15,400 --> 00:36:19,690
printed circuit board after doing the

00:36:17,410 --> 00:36:21,160
design is just blue gold or a factory

00:36:19,690 --> 00:36:23,350
the beginning I mentioned that I'm a

00:36:21,160 --> 00:36:26,020
software engineer so the whole thing

00:36:23,350 --> 00:36:28,390
with hardware is more like a hobby for

00:36:26,020 --> 00:36:31,660
me and it's really great experience but

00:36:28,390 --> 00:36:34,090
as soon as I have to get from a

00:36:31,660 --> 00:36:36,010
prototype to Rio printed circuit board I

00:36:34,090 --> 00:36:37,300
prefer to leave this to the professional

00:36:36,010 --> 00:36:37,750
companies that are providing it as a

00:36:37,300 --> 00:36:41,050
service

00:36:37,750 --> 00:36:45,940
have you tried making 3d printed circuit

00:36:41,050 --> 00:36:48,400
board I didn't do myself that I'm

00:36:45,940 --> 00:36:52,150
interested in this technology because of

00:36:48,400 --> 00:36:54,640
some you know flexible PCBs or something

00:36:52,150 --> 00:36:57,730
like that or chips inside some plastic

00:36:54,640 --> 00:37:01,060
or whatever you don't need to have them

00:36:57,730 --> 00:37:05,080
separate five fork aids you could create

00:37:01,060 --> 00:37:09,280
device as a whole this is interesting

00:37:05,080 --> 00:37:11,260
but unfortunately I can provide for my

00:37:09,280 --> 00:37:14,740
practical experience Tambo government

00:37:11,260 --> 00:37:17,140
holding case we have a mirror we do with

00:37:14,740 --> 00:37:19,690
the milling for two dimension that out

00:37:17,140 --> 00:37:21,850
of a two layer PCBs but it's already a

00:37:19,690 --> 00:37:25,630
nuisance getting the through context and

00:37:21,850 --> 00:37:28,720
when it gets to four layer PCBs doing it

00:37:25,630 --> 00:37:30,520
in-house is completely crazy if you

00:37:28,720 --> 00:37:32,950
don't have at least ten million budget

00:37:30,520 --> 00:37:34,810
it's just crazy but generally my

00:37:32,950 --> 00:37:37,840
experience is just get yourself a

00:37:34,810 --> 00:37:39,670
reliable vendor in China keep them until

00:37:37,840 --> 00:37:41,650
they have a three day turnaround and do

00:37:39,670 --> 00:37:44,560
that it's not worth it

00:37:41,650 --> 00:37:46,780
we bought the middle because my

00:37:44,560 --> 00:37:49,000
is a mechanic's freak and she uses it

00:37:46,780 --> 00:37:52,210
for mechanical assembly we milled to

00:37:49,000 --> 00:37:53,800
PCBs and after that the whole company we

00:37:52,210 --> 00:37:55,950
got together and we said this

00:37:53,800 --> 00:37:59,770
we're never doing it again

00:37:55,950 --> 00:38:05,320
okay thank you alright just another

00:37:59,770 --> 00:38:08,380
question over there yes you talked you

00:38:05,320 --> 00:38:09,970
said that I'm sandy mounting I mean

00:38:08,380 --> 00:38:12,310
after you make the PCB you have to

00:38:09,970 --> 00:38:16,740
assemble the components yes I'd love to

00:38:12,310 --> 00:38:19,900
make like board with SMD LEDs but how I

00:38:16,740 --> 00:38:22,300
mean I can't do that myself but it

00:38:19,900 --> 00:38:24,970
depends on the size of the SMD if you're

00:38:22,300 --> 00:38:28,390
doing like with sizes zero eight zero

00:38:24,970 --> 00:38:30,220
five four zero six zero three you can do

00:38:28,390 --> 00:38:32,290
it with a soldering iron and you just

00:38:30,220 --> 00:38:36,220
need to practice a little bit okay

00:38:32,290 --> 00:38:38,200
YouTube can come to the rescue but the

00:38:36,220 --> 00:38:40,810
other option is to go to a factory that

00:38:38,200 --> 00:38:44,160
does not only the PCB but also the

00:38:40,810 --> 00:38:48,460
assembly process any recommendation

00:38:44,160 --> 00:38:51,100
recommendation doesn't seem to do that

00:38:48,460 --> 00:38:53,200
there is another company called Oh sh

00:38:51,100 --> 00:38:56,380
stencil that can make a stencil for you

00:38:53,200 --> 00:38:59,530
after that you can place a paste and put

00:38:56,380 --> 00:39:04,480
it in an oven I highly recommend you not

00:38:59,530 --> 00:39:07,000
to use your kitchen oven zero six zero

00:39:04,480 --> 00:39:09,010
three is easy to do by hand if you have

00:39:07,000 --> 00:39:10,660
a Manties microscope that's what we use

00:39:09,010 --> 00:39:12,550
in the company a vision mantis

00:39:10,660 --> 00:39:14,740
inspection microscope and then it's

00:39:12,550 --> 00:39:17,620
really easy to do by hand the trick is

00:39:14,740 --> 00:39:19,810
you tin one pin and then you put the

00:39:17,620 --> 00:39:22,360
component down and then you take another

00:39:19,810 --> 00:39:24,640
pin then just solder them down it's it's

00:39:22,360 --> 00:39:26,740
not particularly really difficult I mean

00:39:24,640 --> 00:39:30,160
in my company everybody can do it

00:39:26,740 --> 00:39:32,200
even the the 55 year old advertising

00:39:30,160 --> 00:39:34,390
lady already took a shot and she got it

00:39:32,200 --> 00:39:36,610
working after 15 or 20 minutes she was

00:39:34,390 --> 00:39:38,740
able to reliably solder them the things

00:39:36,610 --> 00:39:43,270
two things number one you must factory

00:39:38,740 --> 00:39:46,450
you buy lead solder no RoHS and

00:39:43,270 --> 00:39:48,880
number two used californium and number

00:39:46,450 --> 00:39:51,640
three they use an Ursa or another

00:39:48,880 --> 00:39:53,350
high-quality soldering iron if it costs

00:39:51,640 --> 00:39:56,530
less than two hundred bucks it's not

00:39:53,350 --> 00:39:58,330
suitable sorry for jumping into your

00:39:56,530 --> 00:39:58,870
answer no problem thank you very much

00:39:58,330 --> 00:40:02,740
for the dish

00:39:58,870 --> 00:40:04,660
I'm afraid we're we're a little bit late

00:40:02,740 --> 00:40:06,490
so thank you very much for joining if

00:40:04,660 --> 00:40:08,290
you have more questions I'm around you

00:40:06,490 --> 00:40:09,450
can come and ask thank you very much for

00:40:08,290 --> 00:40:13,219
joining

00:40:09,450 --> 00:40:13,219

YouTube URL: https://www.youtube.com/watch?v=jwMdpRSCc_E


