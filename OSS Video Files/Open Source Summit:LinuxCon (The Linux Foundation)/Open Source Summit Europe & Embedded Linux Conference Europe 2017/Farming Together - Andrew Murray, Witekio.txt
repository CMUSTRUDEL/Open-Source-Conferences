Title: Farming Together - Andrew Murray, Witekio
Publication date: 2017-10-24
Playlist: Open Source Summit Europe & Embedded Linux Conference Europe 2017
Description: 
	Farming Together - Andrew Murray, Witekio

Everyone is talking about board farms and becoming farmers to their own board farms. Board farms add a link to continuous integration that allows for continuous deployment and automated testing. However we are all working on this in silos - yet we come across the same challenges and solve them with very different proprietary solutions.

During this session, Andrew will provide an overview of the Witekio farm highlighting the challenges faced - both in hardware challenges (connecting boards to farms) and software challenges (providing a software platform to higher level software such as Jenkins, KernelCI to use). The BoF will then open the discussion to see who currently participates in this new community, what solutions already exist and crucially how we can come together to harmonise our efforts and create an open-source platform for farming. 

About Andrew Murray
Andrew Murray is managing director for Witekio in the UK (formally Embedded Bits) - a systems integrator with deep technical expertise. His day-to-day role fulfils his passion for learning and provides him with plenty of experiences and challenges in both engineering and business. He has set up a board farm in the UK office and has been using it for kernelCI, to facilitate remote working and for automated testing.Andrew has previously presented at ELC-Europe with topics such as 'Small Business BoF', '12 Lessons Learnt in Boot Time Reduction' and 'The Right Approach to Minimal Boot Times'.
Captions: 
	00:00:00,060 --> 00:00:04,470
okay so good afternoon and welcome to

00:00:01,890 --> 00:00:07,799
this third of a session on farming

00:00:04,470 --> 00:00:09,840
together it's actually a bird of a

00:00:07,799 --> 00:00:11,670
feather session but it doesn't appear to

00:00:09,840 --> 00:00:15,480
be on the agenda as that so apologies if

00:00:11,670 --> 00:00:17,460
you come expecting not to participate if

00:00:15,480 --> 00:00:20,010
you're not familiar with the this format

00:00:17,460 --> 00:00:22,439
a bar for a bird of a feather session is

00:00:20,010 --> 00:00:25,320
one way the presentation is slightly

00:00:22,439 --> 00:00:27,960
lightweight it's less formal with a view

00:00:25,320 --> 00:00:30,439
for us to discuss and collaborate and

00:00:27,960 --> 00:00:36,000
find out how we can work together

00:00:30,439 --> 00:00:38,550
sure so feel free to pitch in at any

00:00:36,000 --> 00:00:40,920
point and raise your hand or say what

00:00:38,550 --> 00:00:43,020
you need to say I'm gonna divide this

00:00:40,920 --> 00:00:46,289
into two parts the first part will be me

00:00:43,020 --> 00:00:49,500
talking about my view on the ecosystem

00:00:46,289 --> 00:00:51,809
for farms and the second parts us

00:00:49,500 --> 00:00:55,640
collaborating and discussing what we

00:00:51,809 --> 00:00:57,649
need to do to improve before we begin

00:00:55,640 --> 00:01:00,329
perhaps we can have a show of hands

00:00:57,649 --> 00:01:01,980
raise your hand if you're you currently

00:01:00,329 --> 00:01:05,000
have a farm you're considering making

00:01:01,980 --> 00:01:09,330
one or you're maintaining one okay

00:01:05,000 --> 00:01:12,869
nearly a full house I guess that's why

00:01:09,330 --> 00:01:16,890
we're here so I'll share with you my

00:01:12,869 --> 00:01:19,979
idea on what I think a farm is in my

00:01:16,890 --> 00:01:22,409
view a farm is some hardware a system

00:01:19,979 --> 00:01:24,810
that allows you to interact and automate

00:01:22,409 --> 00:01:27,900
interaction with embedded devices such

00:01:24,810 --> 00:01:29,729
as reference boards and the purpose to

00:01:27,900 --> 00:01:32,310
that is so that you can in an automated

00:01:29,729 --> 00:01:36,060
way to an honor board put some software

00:01:32,310 --> 00:01:37,729
on it and run some tests and the benefit

00:01:36,060 --> 00:01:41,340
of this of course is that in your

00:01:37,729 --> 00:01:43,560
continuous integration flow you get two

00:01:41,340 --> 00:01:45,960
new boxes so after you view something

00:01:43,560 --> 00:01:48,450
like Jenkins to build some artifacts you

00:01:45,960 --> 00:01:49,860
can automatically deploy them and put

00:01:48,450 --> 00:01:51,810
them on your board and then you can

00:01:49,860 --> 00:01:54,540
automatically test them and then feed

00:01:51,810 --> 00:01:57,270
their their results back into whatever

00:01:54,540 --> 00:02:00,840
comes next usually perhaps some email

00:01:57,270 --> 00:02:03,990
notification or similar the picture in

00:02:00,840 --> 00:02:06,090
the background is also what I consider

00:02:03,990 --> 00:02:09,319
to be my ideal farm something looks

00:02:06,090 --> 00:02:11,370
beautiful lots of rack mounts organized

00:02:09,319 --> 00:02:14,580
beautiful cables

00:02:11,370 --> 00:02:16,019
structured all these lovely words but I

00:02:14,580 --> 00:02:18,030
think if you've already got a farm

00:02:16,019 --> 00:02:21,319
you'll know that it's really hard to do

00:02:18,030 --> 00:02:26,069
that and that's not quite the reality so

00:02:21,319 --> 00:02:28,470
this is the reality quite often this

00:02:26,069 --> 00:02:32,340
isn't my farm these are some farms I I

00:02:28,470 --> 00:02:34,319
found online they might be yours does

00:02:32,340 --> 00:02:41,750
anyone want to own up anyone recognize

00:02:34,319 --> 00:02:41,750
this are they the same oh okay sure I

00:02:43,010 --> 00:02:51,930
think yeah three electrons not sure

00:02:47,849 --> 00:02:54,420
about the other one and it's because

00:02:51,930 --> 00:02:58,620
it's difficult it's really difficult to

00:02:54,420 --> 00:03:00,480
manage a bunch of hardware and cable

00:02:58,620 --> 00:03:03,390
them all up to the same place and power

00:03:00,480 --> 00:03:05,239
supplies and they're very diverse every

00:03:03,390 --> 00:03:09,239
person's farm will look quite different

00:03:05,239 --> 00:03:12,750
some new shelves some used drawers some

00:03:09,239 --> 00:03:14,909
you just use the floor and in fact a

00:03:12,750 --> 00:03:17,160
quotes I found by someone described in

00:03:14,909 --> 00:03:22,049
their farm was it's a pile of stuff

00:03:17,160 --> 00:03:25,620
which yeah Zakir so a picture of our

00:03:22,049 --> 00:03:30,450
farm ours is still a sprawling mess but

00:03:25,620 --> 00:03:33,569
we did try to put it in a rack mount we

00:03:30,450 --> 00:03:37,650
had some good intentions originally our

00:03:33,569 --> 00:03:40,349
farm was designed when we had no office

00:03:37,650 --> 00:03:44,160
so there are home workers or employees

00:03:40,349 --> 00:03:45,660
good access customer hardware and share

00:03:44,160 --> 00:03:46,889
hardware and this saved shipping

00:03:45,660 --> 00:03:50,099
Hardware back and for it meant we could

00:03:46,889 --> 00:03:52,769
protect our customers hardware and do

00:03:50,099 --> 00:03:55,260
all the right things as you can see we

00:03:52,769 --> 00:03:58,879
have a rack mates we have shelves and

00:03:55,260 --> 00:04:02,010
hardware is on the shelves and all those

00:03:58,879 --> 00:04:04,949
reference boards are connected via USB

00:04:02,010 --> 00:04:06,720
and Ethernet to one machine which we

00:04:04,949 --> 00:04:08,310
call the farm machine which is just a

00:04:06,720 --> 00:04:11,519
desktop PC you run in a Linux

00:04:08,310 --> 00:04:14,819
distribution if you want to use the farm

00:04:11,519 --> 00:04:16,889
you SSH into it and then using some of

00:04:14,819 --> 00:04:18,989
our proprietary scripts which we call

00:04:16,889 --> 00:04:21,329
hippie farm scripts you can do things

00:04:18,989 --> 00:04:23,380
like turn on a board and look at the

00:04:21,329 --> 00:04:27,320
serial console

00:04:23,380 --> 00:04:29,360
whatever else it does bored farm is part

00:04:27,320 --> 00:04:31,550
of the colonel CI project which we can

00:04:29,360 --> 00:04:34,250
talk about in a short while this is a

00:04:31,550 --> 00:04:36,560
project where when the community

00:04:34,250 --> 00:04:37,940
develops new kernel releases they were

00:04:36,560 --> 00:04:40,580
automatically built and deployed on

00:04:37,940 --> 00:04:42,680
farms across the world and and some of

00:04:40,580 --> 00:04:46,640
our boards are part of that so on a

00:04:42,680 --> 00:04:50,510
daily basis boards are being used to

00:04:46,640 --> 00:04:51,710
test kernels boot we also use it to run

00:04:50,510 --> 00:04:54,260
automated tests for some of our

00:04:51,710 --> 00:04:56,750
customers the capabilities of our farm

00:04:54,260 --> 00:04:59,150
we can control the power to boards we

00:04:56,750 --> 00:05:03,040
can turn them on and off using USB

00:04:59,150 --> 00:05:07,700
relays we can press buttons or flick

00:05:03,040 --> 00:05:09,860
switches we designed our own SD MUX

00:05:07,700 --> 00:05:15,200
Hardware this is something that allows

00:05:09,860 --> 00:05:18,140
you to get this some giggles that allows

00:05:15,200 --> 00:05:21,950
you to change the contents of an SD card

00:05:18,140 --> 00:05:23,510
so that you can if you've got some

00:05:21,950 --> 00:05:27,440
hardware that boots from SD card you can

00:05:23,510 --> 00:05:30,290
completely control what boots at one

00:05:27,440 --> 00:05:33,190
point we had HDMI receiver card so

00:05:30,290 --> 00:05:36,470
that's if a board had two HDMI outputs

00:05:33,190 --> 00:05:38,480
it was possible to Skype into our board

00:05:36,470 --> 00:05:39,980
farm and see what's going on which was

00:05:38,480 --> 00:05:43,190
quite useful for the project we had at

00:05:39,980 --> 00:05:45,169
the time we've also got some concepts

00:05:43,190 --> 00:05:47,000
like workspaces so if you want to use a

00:05:45,169 --> 00:05:50,960
board you can create a workspace and

00:05:47,000 --> 00:05:52,430
have TFTP NFS in a convenient way and we

00:05:50,960 --> 00:05:54,620
do all this through containers as well

00:05:52,430 --> 00:05:56,150
so that when your acetate into the farm

00:05:54,620 --> 00:05:59,120
you have your own workspace so that

00:05:56,150 --> 00:06:03,350
you're not going to break someone else's

00:05:59,120 --> 00:06:07,370
environment slightly closer look this is

00:06:03,350 --> 00:06:11,510
a farm shelf what we try to do is put

00:06:07,370 --> 00:06:16,010
each unit of hardware on a board like a

00:06:11,510 --> 00:06:19,330
plastic sheet and we secure the hardware

00:06:16,010 --> 00:06:23,600
to that board with things like velcro or

00:06:19,330 --> 00:06:26,360
tape or pillars and we put everything we

00:06:23,600 --> 00:06:29,780
need for that board you can see that we

00:06:26,360 --> 00:06:32,750
try to have some common interfaces so we

00:06:29,780 --> 00:06:34,840
have for each board power Ethernet and

00:06:32,750 --> 00:06:36,370
USB

00:06:34,840 --> 00:06:39,460
and we try to make that uniform across

00:06:36,370 --> 00:06:42,009
the farm at one point we thought about

00:06:39,460 --> 00:06:44,500
having a USB stick that's on each shaft

00:06:42,009 --> 00:06:47,560
which describes the topology of the USB

00:06:44,500 --> 00:06:49,270
devices in it the idea being that if you

00:06:47,560 --> 00:06:50,979
have a shelf you can plug it into the

00:06:49,270 --> 00:06:53,139
farm and the farm automatically knows

00:06:50,979 --> 00:06:54,699
what it is how to access the devices on

00:06:53,139 --> 00:06:57,160
it so you don't need to do any kind of

00:06:54,699 --> 00:06:59,050
configuration and of course the ID have

00:06:57,160 --> 00:07:00,580
been that you can remove a shelf work it

00:06:59,050 --> 00:07:04,240
with it on your desk put it back in your

00:07:00,580 --> 00:07:07,120
farm perhaps someone else is in this

00:07:04,240 --> 00:07:10,410
particular case this customer we help

00:07:07,120 --> 00:07:14,259
them with surveillance software and

00:07:10,410 --> 00:07:16,780
their update mechanism uses SD cards so

00:07:14,259 --> 00:07:21,699
in order to test that we use our farm

00:07:16,780 --> 00:07:23,620
and we we test that we can upgrade to

00:07:21,699 --> 00:07:25,240
different versions of this software and

00:07:23,620 --> 00:07:27,490
we can do that hundreds of times a night

00:07:25,240 --> 00:07:29,080
which saves a lot of manual intervention

00:07:27,490 --> 00:07:34,240
that would otherwise be needed to do

00:07:29,080 --> 00:07:36,280
that we also run CPU load tests over

00:07:34,240 --> 00:07:39,760
about an hour so that we can get a good

00:07:36,280 --> 00:07:41,020
profile of of the latest software to see

00:07:39,760 --> 00:07:44,229
if there's any regressions in

00:07:41,020 --> 00:07:46,510
performance and some other metrics and

00:07:44,229 --> 00:07:48,870
at the end of this we get some automated

00:07:46,510 --> 00:07:53,440
emails and test results that we found

00:07:48,870 --> 00:07:56,349
our customer finds extremely useful this

00:07:53,440 --> 00:07:58,090
hasn't been easy if you've played with

00:07:56,349 --> 00:07:59,740
farms you'll be familiar with some of

00:07:58,090 --> 00:08:03,669
these issues I'm sure you have many

00:07:59,740 --> 00:08:06,639
others USB is it seems like farms have

00:08:03,669 --> 00:08:08,860
quite a good test for USB I don't know

00:08:06,639 --> 00:08:11,380
if I just buy really crap hardware but

00:08:08,860 --> 00:08:13,810
quite often hubs disappear usb-to-serial

00:08:11,380 --> 00:08:16,270
disappear and of course they come back

00:08:13,810 --> 00:08:18,520
with slightly different major minor

00:08:16,270 --> 00:08:20,110
numbers which which confuse lots of

00:08:18,520 --> 00:08:24,610
things especially if you're running a

00:08:20,110 --> 00:08:27,070
long test reliability is is the biggest

00:08:24,610 --> 00:08:29,440
challenge it's it's easy to make a test

00:08:27,070 --> 00:08:31,810
it's easy to do this stuff but then to

00:08:29,440 --> 00:08:34,899
keep doing that consistently and

00:08:31,810 --> 00:08:37,240
reliably it's difficult especially as

00:08:34,899 --> 00:08:41,890
you try and scale the farm which is the

00:08:37,240 --> 00:08:44,079
challenge SD MUX it works for our needs

00:08:41,890 --> 00:08:47,480
but it's not reliable and it's been very

00:08:44,079 --> 00:08:51,560
challenging to to get that to be you

00:08:47,480 --> 00:08:53,660
for for our containers we used open V

00:08:51,560 --> 00:08:57,350
said I think in hindsight that was a bad

00:08:53,660 --> 00:09:01,850
choice and that's created lots of

00:08:57,350 --> 00:09:04,279
obstacles for us simply maintaining the

00:09:01,850 --> 00:09:07,100
farm keeping it from sprawling keeping

00:09:04,279 --> 00:09:08,839
it tidy stopping people from poaching

00:09:07,100 --> 00:09:09,490
hardware from it and cables when they

00:09:08,839 --> 00:09:12,290
need it

00:09:09,490 --> 00:09:14,209
is all quite difficult and and we're

00:09:12,290 --> 00:09:16,850
managing this through our own time

00:09:14,209 --> 00:09:18,949
rather than some ID IT department and of

00:09:16,850 --> 00:09:20,899
course if something breaks like colonel

00:09:18,949 --> 00:09:23,660
CI you need someone to spend time to

00:09:20,899 --> 00:09:27,050
investigate and and that type of support

00:09:23,660 --> 00:09:29,600
infrastructure is a challenge especially

00:09:27,050 --> 00:09:31,820
if sometimes you don't know that a

00:09:29,600 --> 00:09:37,130
borders is broken in some way in your

00:09:31,820 --> 00:09:39,740
farm we do a lot of testing with tickle

00:09:37,130 --> 00:09:43,029
and expect so some of our tests they

00:09:39,740 --> 00:09:46,639
boot a board wait for a prompt and then

00:09:43,029 --> 00:09:48,320
execute some commands on there but I

00:09:46,639 --> 00:09:53,899
don't if this is testing in general or

00:09:48,320 --> 00:09:56,870
tickle but I find that you write a test

00:09:53,899 --> 00:09:58,790
you run it it doesn't pass and you run

00:09:56,870 --> 00:10:00,769
the same steps by hand manually and it

00:09:58,790 --> 00:10:03,819
does pass and there's this really

00:10:00,769 --> 00:10:06,079
difficult intermittent type of issue and

00:10:03,819 --> 00:10:08,240
it's really hard to make tests that keep

00:10:06,079 --> 00:10:12,529
passing and you find quite often it's

00:10:08,240 --> 00:10:14,000
because of infrastructure issues but I

00:10:12,529 --> 00:10:16,490
think if anything if I learn anything

00:10:14,000 --> 00:10:18,380
farm seemed to be the latest trend I

00:10:16,490 --> 00:10:20,569
think a few years ago it used to be boot

00:10:18,380 --> 00:10:22,459
time but now people seem to moved on

00:10:20,569 --> 00:10:25,339
from that and looking at things like

00:10:22,459 --> 00:10:27,019
farms and I think there's a reason for

00:10:25,339 --> 00:10:28,730
that and I think it's because farms

00:10:27,019 --> 00:10:29,959
whilst there can be quite cool in

00:10:28,730 --> 00:10:33,829
themselves they're they're quite

00:10:29,959 --> 00:10:35,930
enabling they allow you to to do

00:10:33,829 --> 00:10:37,430
automated testing and that's what truly

00:10:35,930 --> 00:10:39,350
provides value for open source

00:10:37,430 --> 00:10:42,319
development but also commercial

00:10:39,350 --> 00:10:44,720
development because they provide a

00:10:42,319 --> 00:10:49,010
mechanism to maintain a level of quality

00:10:44,720 --> 00:10:50,720
and to spot regressions it's also having

00:10:49,010 --> 00:10:54,529
quite a big impact on the open source

00:10:50,720 --> 00:10:57,260
community I think the most notable one

00:10:54,529 --> 00:11:00,910
is kernel CI I briefly mentioned this

00:10:57,260 --> 00:11:03,130
earlier but kernel CI is a project where

00:11:00,910 --> 00:11:05,860
every time a number of trees are

00:11:03,130 --> 00:11:07,870
monitored in the kernel community and

00:11:05,860 --> 00:11:11,190
when changes are made to those kernel

00:11:07,870 --> 00:11:13,480
trees servers around the world build

00:11:11,190 --> 00:11:16,690
those kernels for lots of different

00:11:13,480 --> 00:11:19,920
configurations and using farms like ours

00:11:16,690 --> 00:11:23,350
and I think there's another perhaps 12

00:11:19,920 --> 00:11:27,250
those kernels are deployed and booted

00:11:23,350 --> 00:11:28,930
and and if balls don't boot that

00:11:27,250 --> 00:11:31,600
feedback gets sent back to the community

00:11:28,930 --> 00:11:33,160
and regressions can be fixed and even

00:11:31,600 --> 00:11:35,200
something simple like a boot test is

00:11:33,160 --> 00:11:37,030
incredibly valuable for the kernel

00:11:35,200 --> 00:11:38,500
community because when you support so

00:11:37,030 --> 00:11:40,450
many different boards and so many

00:11:38,500 --> 00:11:44,560
different configs it's really hard just

00:11:40,450 --> 00:11:45,930
to make sure they all still boot so

00:11:44,560 --> 00:11:48,550
that's having an impact

00:11:45,930 --> 00:11:51,220
there's the OS ADL I believe they have a

00:11:48,550 --> 00:11:54,880
lab and they use that for ensuring that

00:11:51,220 --> 00:11:57,670
the real-time patch set doesn't regress

00:11:54,880 --> 00:12:01,840
I think they probably run a cyclic test

00:11:57,670 --> 00:12:04,570
to check for real-time latency Qualcomm

00:12:01,840 --> 00:12:07,330
learns have a board farm to test their

00:12:04,570 --> 00:12:09,910
open wrt distribution don't know much

00:12:07,330 --> 00:12:12,390
more about that Intel have a cero day

00:12:09,910 --> 00:12:15,060
test but I think it's predominately x86

00:12:12,390 --> 00:12:17,440
but nevertheless it's another example of

00:12:15,060 --> 00:12:21,850
where we're using automated testing to

00:12:17,440 --> 00:12:26,130
improve quality and of course there must

00:12:21,850 --> 00:12:32,170
be huge deployments in private companies

00:12:26,130 --> 00:12:33,700
to test products and similar but in my

00:12:32,170 --> 00:12:35,910
view I think we're we're touching the

00:12:33,700 --> 00:12:39,070
surface I think we're all individually

00:12:35,910 --> 00:12:41,950
making farms but was to let the basics

00:12:39,070 --> 00:12:48,370
was to let the can you boot aboard can

00:12:41,950 --> 00:12:49,780
you just test connectivity we're not

00:12:48,370 --> 00:12:51,430
going to be on that I think we could do

00:12:49,780 --> 00:12:53,950
more with with boot time with power

00:12:51,430 --> 00:12:57,880
management's we could even add

00:12:53,950 --> 00:12:59,200
interfaces to you know test its outputs

00:12:57,880 --> 00:13:01,690
from the board like audio are as

00:12:59,200 --> 00:13:03,900
expected I think there's so much more we

00:13:01,690 --> 00:13:06,280
can do but the problem I see is that

00:13:03,900 --> 00:13:10,660
there's perhaps too much diversity it

00:13:06,280 --> 00:13:13,060
reminds me of I guess in the history of

00:13:10,660 --> 00:13:14,380
computing when when computers first came

00:13:13,060 --> 00:13:16,780
about every manufacturer would have

00:13:14,380 --> 00:13:18,880
their own architecture and there's lots

00:13:16,780 --> 00:13:21,250
of interesting developments but in silos

00:13:18,880 --> 00:13:22,510
so everyone's working on the same

00:13:21,250 --> 00:13:23,710
problems come up with different

00:13:22,510 --> 00:13:28,450
solutions and there's no

00:13:23,710 --> 00:13:31,500
interoperability between them and that's

00:13:28,450 --> 00:13:35,020
the same with farming there's no

00:13:31,500 --> 00:13:37,150
blueprint for how you make a farm if I

00:13:35,020 --> 00:13:38,200
asked you how do I make a farm I would

00:13:37,150 --> 00:13:40,270
get different answers from everyone

00:13:38,200 --> 00:13:41,230
there's no generally accepted way of

00:13:40,270 --> 00:13:45,970
doing this

00:13:41,230 --> 00:13:49,870
there's no resource available that's

00:13:45,970 --> 00:13:51,760
like a wiki for example and there's very

00:13:49,870 --> 00:13:57,310
little collaboration in terms of

00:13:51,760 --> 00:14:04,240
software that can run Tim there's a farm

00:13:57,310 --> 00:14:05,650
a list exactly so it's not a surprise

00:14:04,240 --> 00:14:08,350
that everyone comes up with their own

00:14:05,650 --> 00:14:10,000
solution and I think in a presentation I

00:14:08,350 --> 00:14:11,980
was at last year someone talked about

00:14:10,000 --> 00:14:14,350
using Lego to create a farm is that

00:14:11,980 --> 00:14:28,120
person in the room yes okay so people

00:14:14,350 --> 00:14:34,600
yeah so it's your rack okay okay I guess

00:14:28,120 --> 00:14:36,130
it works well but I think generally

00:14:34,600 --> 00:14:37,300
we'll all facing the same challenges

00:14:36,130 --> 00:14:39,100
where we're trying to make something

00:14:37,300 --> 00:14:41,440
scalable something reliable something

00:14:39,100 --> 00:14:44,050
useful that we can use as a platform for

00:14:41,440 --> 00:14:49,030
testing or maybe remote access to boards

00:14:44,050 --> 00:14:54,040
I see it this way I see there being

00:14:49,030 --> 00:14:55,300
three different aspects to farms the bit

00:14:54,040 --> 00:14:57,040
that gets the most attention is at the

00:14:55,300 --> 00:14:59,760
top which is the kind of continuous

00:14:57,040 --> 00:15:03,010
integration type of DevOps type of stuff

00:14:59,760 --> 00:15:05,230
Jenkins most people are familiar with

00:15:03,010 --> 00:15:07,420
I mentioned Kern Colonel CI which sits

00:15:05,230 --> 00:15:10,630
on top of lava which is provided by Lyn

00:15:07,420 --> 00:15:13,210
ro and what other proprietary test

00:15:10,630 --> 00:15:14,860
frames you might have I think that part

00:15:13,210 --> 00:15:16,930
of the system is it's quite mature I

00:15:14,860 --> 00:15:20,200
think there's lots of support lots of

00:15:16,930 --> 00:15:22,690
documentation the bottom part is

00:15:20,200 --> 00:15:25,089
hardware this is the physical hardware

00:15:22,690 --> 00:15:28,060
if you've got PDUs or some kind of

00:15:25,089 --> 00:15:33,120
network controlled power supply you

00:15:28,060 --> 00:15:35,650
be relays we talked about SD maxes I

00:15:33,120 --> 00:15:37,840
think there's a lack of information in

00:15:35,650 --> 00:15:39,270
this area where collaboration would be

00:15:37,840 --> 00:15:43,000
useful

00:15:39,270 --> 00:15:45,760
simply knowledge on what USB devices are

00:15:43,000 --> 00:15:49,300
good quality which ones aren't

00:15:45,760 --> 00:15:51,250
with the SD MUX it turns out lots of

00:15:49,300 --> 00:15:54,490
people are doing this I know that the

00:15:51,250 --> 00:15:58,960
Naro have done this once we've done this

00:15:54,490 --> 00:16:01,270
I think Tizen have open schematics for

00:15:58,960 --> 00:16:03,820
their SD MUX

00:16:01,270 --> 00:16:05,110
so an example of you know at least three

00:16:03,820 --> 00:16:09,580
different companies doing the same thing

00:16:05,110 --> 00:16:10,900
and you know maybe with better

00:16:09,580 --> 00:16:13,390
collaboration there would be more

00:16:10,900 --> 00:16:14,650
awareness of that and maybe in improved

00:16:13,390 --> 00:16:17,440
devices

00:16:14,650 --> 00:16:20,410
Bailey bruh they have probes for

00:16:17,440 --> 00:16:22,600
measuring power consumption so I think

00:16:20,410 --> 00:16:24,880
there's some activity in this space but

00:16:22,600 --> 00:16:28,720
quite often not everybody's aware of

00:16:24,880 --> 00:16:30,250
that and then the bit in the middle the

00:16:28,720 --> 00:16:33,130
hardware abstraction I think this is

00:16:30,250 --> 00:16:36,490
where the biggest gap is and this is

00:16:33,130 --> 00:16:39,160
where you bridge hardware for example if

00:16:36,490 --> 00:16:41,260
you've got a network power supply

00:16:39,160 --> 00:16:42,880
someone still needs to write some code

00:16:41,260 --> 00:16:44,680
that knows where that is and what

00:16:42,880 --> 00:16:46,990
command to send to that to turn whatever

00:16:44,680 --> 00:16:49,510
port on and off and that needs to be

00:16:46,990 --> 00:16:51,280
linked with the top layer like lava

00:16:49,510 --> 00:16:52,960
where there's a hook that says how'd you

00:16:51,280 --> 00:16:54,430
turn a board on and this is bit in

00:16:52,960 --> 00:16:56,140
between that I think's missing and I

00:16:54,430 --> 00:16:58,300
think this is the part where my

00:16:56,140 --> 00:16:59,710
suspicion is that everyone comes up with

00:16:58,300 --> 00:17:01,330
their own solution I know that free

00:16:59,710 --> 00:17:05,140
electrons have something called lava

00:17:01,330 --> 00:17:09,880
beau which seems to extend lava to allow

00:17:05,140 --> 00:17:12,930
you to you know remotely access boards

00:17:09,880 --> 00:17:15,070
for development we have our own EB farm

00:17:12,930 --> 00:17:21,900
can you raise your hands if you've got

00:17:15,070 --> 00:17:21,900
your own TTC okay

00:17:24,569 --> 00:17:27,569
okay

00:17:35,130 --> 00:17:45,210
okay.what talks that okay thank you so

00:17:42,400 --> 00:17:48,220
my vision is that if we come together

00:17:45,210 --> 00:17:49,630
and I think there's you know 50 or so

00:17:48,220 --> 00:17:51,420
people in this room that have some

00:17:49,630 --> 00:17:53,290
interest in working together I think

00:17:51,420 --> 00:17:57,310
there's a lot more we can achieve

00:17:53,290 --> 00:17:59,020
together I think as a minimum an

00:17:57,310 --> 00:18:01,690
achievement that I'd really like to see

00:17:59,020 --> 00:18:03,610
is is that we know who we all are so

00:18:01,690 --> 00:18:06,420
that we have some connections that we

00:18:03,610 --> 00:18:08,650
can you know not reinvent the same wheel

00:18:06,420 --> 00:18:10,960
and I think they'll allow us to move out

00:18:08,650 --> 00:18:13,030
of the basics simply turn the board's on

00:18:10,960 --> 00:18:15,400
and off and doing some farm work to some

00:18:13,030 --> 00:18:17,530
more really interesting stuff like I

00:18:15,400 --> 00:18:19,270
don't know testing USB devices by

00:18:17,530 --> 00:18:25,420
removing them and reinserting them or

00:18:19,270 --> 00:18:28,210
similar Tim okay and I think I think

00:18:25,420 --> 00:18:29,920
Lennar oh I've seen have some Cube

00:18:28,210 --> 00:18:35,670
looking device that can stack to do

00:18:29,920 --> 00:18:39,760
similar things so I'd like to move on to

00:18:35,670 --> 00:18:43,360
the open discussion I split this into

00:18:39,760 --> 00:18:45,730
two parts but I'd like to know who who

00:18:43,360 --> 00:18:48,700
everyone is obviously I don't have time

00:18:45,730 --> 00:18:50,320
to do everybody but what we're doing

00:18:48,700 --> 00:18:54,640
with farms what problem we're trying to

00:18:50,320 --> 00:18:56,680
solve what challenges you face what

00:18:54,640 --> 00:19:00,010
solutions already exist we mentioned

00:18:56,680 --> 00:19:01,960
some other TTC and different

00:19:00,010 --> 00:19:04,750
technologies simply know in of their

00:19:01,960 --> 00:19:07,930
existence I think is really valuable and

00:19:04,750 --> 00:19:09,520
how can we calibrate to mention the lack

00:19:07,930 --> 00:19:13,780
of a mailing list maybe that would be

00:19:09,520 --> 00:19:16,600
helpful or maybe a wiki I'd like to talk

00:19:13,780 --> 00:19:18,100
about what it is we could do is it as

00:19:16,600 --> 00:19:20,650
simple as just having a place for

00:19:18,100 --> 00:19:23,020
information or do we go beyond that and

00:19:20,650 --> 00:19:26,380
create this middle layer that can can

00:19:23,020 --> 00:19:28,750
bridge a gap wouldn't it be nice if when

00:19:26,380 --> 00:19:30,940
you you buy some hardware like a USB

00:19:28,750 --> 00:19:33,970
relay there's already a kind of driver

00:19:30,940 --> 00:19:35,890
or config for this middle layer so

00:19:33,970 --> 00:19:38,220
that's when you want to set up a farm

00:19:35,890 --> 00:19:40,300
it's a kind of case about get install

00:19:38,220 --> 00:19:44,590
and it already supports whatever

00:19:40,300 --> 00:19:47,590
hardware you've got so perhaps we can

00:19:44,590 --> 00:19:49,450
start off with introducing ourselves

00:19:47,590 --> 00:19:52,090
there anyone that has a farm that would

00:19:49,450 --> 00:19:59,080
like to tell us a little about a little

00:19:52,090 --> 00:20:03,150
bit about themselves okay can everyone

00:19:59,080 --> 00:20:03,150
hear Tim what do we need a microphone

00:20:05,789 --> 00:20:10,960
okay

00:20:07,890 --> 00:20:14,440
so I've been doing this a long time

00:20:10,960 --> 00:20:18,429
actually I started a test lab in early

00:20:14,440 --> 00:20:21,909
2000s and that's why we wrote e.t.c but

00:20:18,429 --> 00:20:24,909
so I'm using TTC for board management

00:20:21,909 --> 00:20:27,429
doing Fuego is the test framework on top

00:20:24,909 --> 00:20:29,200
and a variety of solutions that have

00:20:27,429 --> 00:20:32,770
evolved over the years for the stuff in

00:20:29,200 --> 00:20:35,169
between and I just want to say so but I

00:20:32,770 --> 00:20:38,590
only have like two to three boards right

00:20:35,169 --> 00:20:40,270
I don't have a lot of the kind of more

00:20:38,590 --> 00:20:42,610
complicated stuff although I did just

00:20:40,270 --> 00:20:46,210
get myself a 28 port USB hub so that's

00:20:42,610 --> 00:20:47,140
give me room to expand but what I want

00:20:46,210 --> 00:20:49,630
to say is if you don't introduce

00:20:47,140 --> 00:20:52,539
yourself here I really think we should

00:20:49,630 --> 00:20:54,100
get on a mailing list or get some or a

00:20:52,539 --> 00:20:56,049
wiki at least with a page with all of

00:20:54,100 --> 00:20:57,460
our names and email addresses so we can

00:20:56,049 --> 00:21:00,460
communicate with each other and talk

00:20:57,460 --> 00:21:02,080
about some of these issues if we only

00:21:00,460 --> 00:21:06,100
got that out of this session I think it

00:21:02,080 --> 00:21:08,230
would be a great start but okay thank

00:21:06,100 --> 00:21:10,480
you yeah I've got a question no perhaps

00:21:08,230 --> 00:21:13,960
I'll come to know if this works I've

00:21:10,480 --> 00:21:15,789
come down so my name's Kevin Hillman I

00:21:13,960 --> 00:21:17,590
since colonelcy I came up a few times

00:21:15,789 --> 00:21:18,760
I'll introduce myself since I'm kind of

00:21:17,590 --> 00:21:21,039
one of the founding members of the

00:21:18,760 --> 00:21:22,840
kernel CI project and I have one of the

00:21:21,039 --> 00:21:25,690
largest labs contributing the kernel CI

00:21:22,840 --> 00:21:27,309
of about 80 boards in my farm and those

00:21:25,690 --> 00:21:29,380
lab the pictures he showed there looks

00:21:27,309 --> 00:21:33,520
super clean compared to my lab in my lab

00:21:29,380 --> 00:21:35,909
see yeah those are to me that was like

00:21:33,520 --> 00:21:35,909
man I

00:21:36,330 --> 00:21:41,320
yeah that is clean yeah in fact most

00:21:39,880 --> 00:21:44,530
people come to my lab they usually ask

00:21:41,320 --> 00:21:47,590
me why do I collect cables not like like

00:21:44,530 --> 00:21:49,300
boards so if you have questions about

00:21:47,590 --> 00:21:51,280
colonel CI and things like that I'm

00:21:49,300 --> 00:21:53,590
happy to answer questions as well and

00:21:51,280 --> 00:21:55,900
one thing else I was going to mention in

00:21:53,590 --> 00:21:57,910
the SD MUX category there's these Wi-Fi

00:21:55,900 --> 00:22:01,060
SD cards now that actually basically

00:21:57,910 --> 00:22:02,230
make SD mug or SD muxes you don't need

00:22:01,060 --> 00:22:04,060
them anymore or they're they're a little

00:22:02,230 --> 00:22:05,890
more reliable and I know some of the

00:22:04,060 --> 00:22:08,410
u-boat you boot maintainer czar using

00:22:05,890 --> 00:22:10,240
the Wi-Fi SD MUX cards or the Wi-Fi SD

00:22:08,410 --> 00:22:12,880
cards actually just to upgrade you boot

00:22:10,240 --> 00:22:14,680
all the time over over Wi-Fi so they

00:22:12,880 --> 00:22:16,630
seem to be just as they're not super

00:22:14,680 --> 00:22:19,000
they're not 100% reliable either but

00:22:16,630 --> 00:22:27,610
they're more reliable than the SD MUX is

00:22:19,000 --> 00:22:32,650
that I've seen yeah the wife Wi-Fi SD

00:22:27,610 --> 00:22:34,300
cards yeah they're there SD regular

00:22:32,650 --> 00:22:36,370
regular size SD cards that actually have

00:22:34,300 --> 00:22:41,850
Wi-Fi in them so you can actually change

00:22:36,370 --> 00:22:41,850
the SD contents over Wi-Fi which is

00:22:46,140 --> 00:22:53,490
something ship it

00:22:59,990 --> 00:23:04,909
I think thought occurred to me while I

00:23:02,330 --> 00:23:07,279
resisted this thanks Andrew um doesn't

00:23:04,909 --> 00:23:09,200
live show us a way to solve this problem

00:23:07,279 --> 00:23:12,350
I'm not saying libvirt the technology

00:23:09,200 --> 00:23:13,700
but the guys behind libvirt came to the

00:23:12,350 --> 00:23:15,740
conclusion that they weren't gonna

00:23:13,700 --> 00:23:18,890
create a single hypervisor

00:23:15,740 --> 00:23:22,460
API to control them all but the idea to

00:23:18,890 --> 00:23:25,399
put a common wrapper library that allows

00:23:22,460 --> 00:23:27,620
people with despot backends to write a

00:23:25,399 --> 00:23:29,690
little shim that will drive their

00:23:27,620 --> 00:23:32,360
special exciting bit of hardware and

00:23:29,690 --> 00:23:34,549
people writing rapid GUI continuous

00:23:32,360 --> 00:23:35,690
integration Jenkins plugins can target

00:23:34,549 --> 00:23:40,159
that bit of middleware

00:23:35,690 --> 00:23:41,630
it yeah but they were kind I sat in

00:23:40,159 --> 00:23:43,909
there and they the guys are doing great

00:23:41,630 --> 00:23:46,700
stuff but they were writing this is how

00:23:43,909 --> 00:23:48,590
we solved our problem and so it was more

00:23:46,700 --> 00:23:50,809
a story of their project rather than any

00:23:48,590 --> 00:23:56,480
kind of idea to produce some sort of

00:23:50,809 --> 00:23:59,240
consistent model I'm really interested

00:23:56,480 --> 00:24:01,490
what are the verbs what are the what is

00:23:59,240 --> 00:24:03,799
the API between the upper layer and the

00:24:01,490 --> 00:24:06,770
middle layer and not you know and

00:24:03,799 --> 00:24:08,809
libvirt has an API and so maybe that's a

00:24:06,770 --> 00:24:10,190
starting point but we need to if we

00:24:08,809 --> 00:24:13,010
could define that like you said if we

00:24:10,190 --> 00:24:15,320
could define that then you could the

00:24:13,010 --> 00:24:17,419
board or the what I'm now starting to

00:24:15,320 --> 00:24:19,399
call the dut controller the device under

00:24:17,419 --> 00:24:21,500
test controller could come with a driver

00:24:19,399 --> 00:24:33,529
that just plugs into that and provides

00:24:21,500 --> 00:24:35,390
that API that'd be super nice ok I don't

00:24:33,529 --> 00:24:38,779
really want to hijack this discussion

00:24:35,390 --> 00:24:41,240
but basically these ideas and

00:24:38,779 --> 00:24:43,940
requirements we're what drove us to

00:24:41,240 --> 00:24:45,890
start this letter stuff to have

00:24:43,940 --> 00:24:48,830
something between the physical hardware

00:24:45,890 --> 00:24:52,520
and the automation layer like Jenkins

00:24:48,830 --> 00:24:54,200
and PI tests and so on to abstract

00:24:52,520 --> 00:24:57,980
Hardware control for testing and for

00:24:54,200 --> 00:25:00,700
other other stuff and yeah the codes on

00:24:57,980 --> 00:25:00,700
github and

00:25:02,870 --> 00:25:12,330
liquid so and we use it in our lab which

00:25:08,550 --> 00:25:16,230
has like 120 boards from our customers

00:25:12,330 --> 00:25:19,140
for CI and also for interactive control

00:25:16,230 --> 00:25:24,030
from your colleagues who sit at home and

00:25:19,140 --> 00:25:25,200
access those bonds thanks it's a really

00:25:24,030 --> 00:25:41,850
interesting I'll have a look at that

00:25:25,200 --> 00:25:44,160
later okay did you have a question so

00:25:41,850 --> 00:25:47,220
I'm seeing a lot of like the consulting

00:25:44,160 --> 00:25:50,310
companies using this or technology and

00:25:47,220 --> 00:25:53,790
providing board farms what can we do to

00:25:50,310 --> 00:25:57,750
get the original equipment manufacturers

00:25:53,790 --> 00:26:00,000
and the SOC vendors to actually do this

00:25:57,750 --> 00:26:06,980
and contribute their results back as

00:26:00,000 --> 00:26:06,980
well any responses on that

00:26:23,809 --> 00:26:32,099
sorry nope way go which is the test

00:26:28,769 --> 00:26:35,639
framework I'm working on has capability

00:26:32,099 --> 00:26:37,889
to send test results in to a common

00:26:35,639 --> 00:26:42,989
server it's not as mature as the API

00:26:37,889 --> 00:26:44,959
that like kernel CI has and we have some

00:26:42,989 --> 00:26:51,749
large companies that are using it and

00:26:44,959 --> 00:26:53,309
but nothing's gone public yet so okay

00:26:51,749 --> 00:26:59,820
thank you is there anyone else that

00:26:53,309 --> 00:27:01,489
would like to yep so my name is here at

00:26:59,820 --> 00:27:04,769
oven I gave a presentation about

00:27:01,489 --> 00:27:06,389
creating a part from last year so my

00:27:04,769 --> 00:27:09,419
main motivation was to get the boards

00:27:06,389 --> 00:27:11,129
off my desk and into a forum so right

00:27:09,419 --> 00:27:13,950
now I have a board forum of eight boards

00:27:11,129 --> 00:27:15,839
controlled by a BeagleBone black for

00:27:13,950 --> 00:27:17,909
power control I used the bay Libre Act

00:27:15,839 --> 00:27:19,529
McCabe for the BeagleBone black the

00:27:17,909 --> 00:27:22,649
BeagleBone black also does several

00:27:19,529 --> 00:27:25,889
consoles and for pressing buttons and

00:27:22,649 --> 00:27:28,259
resets resetting of the board I use a

00:27:25,889 --> 00:27:30,029
portrait optocouplers so last year has

00:27:28,259 --> 00:27:32,190
just something on a proto board but in

00:27:30,029 --> 00:27:36,089
the meantime I created a real PCB for it

00:27:32,190 --> 00:27:39,479
I uploaded the kicad files to github and

00:27:36,089 --> 00:27:43,229
you can actually order the board from

00:27:39,479 --> 00:27:48,149
Eisler which is some makers PCB support

00:27:43,229 --> 00:27:51,329
a small company here in Europe and

00:27:48,149 --> 00:27:52,859
that's it if you have questions I have

00:27:51,329 --> 00:27:55,049
one of the boards here if you want to

00:27:52,859 --> 00:27:57,169
take a look there it's my first PCB ever

00:27:55,049 --> 00:28:00,749
so it's probably not that super fancy

00:27:57,169 --> 00:28:02,549
thank you thanks very much umm is there

00:28:00,749 --> 00:28:08,059
any other experiences anyone wants to

00:28:02,549 --> 00:28:08,059
share with their board farms ok

00:28:14,330 --> 00:28:20,480
so we're making some good progress we've

00:28:16,490 --> 00:28:22,669
got a a wiki going we've replaced SD MUX

00:28:20,480 --> 00:28:27,649
with some Wi-Fi SD MUX we've got some

00:28:22,669 --> 00:28:29,210
high-level software to look at can

00:28:27,649 --> 00:28:32,029
someone suggest any problems they

00:28:29,210 --> 00:28:35,480
currently have I've got some questions

00:28:32,029 --> 00:28:37,399
on things that could be done it seems

00:28:35,480 --> 00:28:43,250
like there's some projects ongoing

00:28:37,399 --> 00:28:53,269
that's I wasn't familiar with anything

00:28:43,250 --> 00:28:56,090
from anyone sure so you had mentioned

00:28:53,269 --> 00:28:56,419
like USB devices disappearing and and so

00:28:56,090 --> 00:28:58,399
on

00:28:56,419 --> 00:29:00,889
so one thing I've noticed with you I've

00:28:58,399 --> 00:29:02,929
had with 80-plus boards I've bought lots

00:29:00,889 --> 00:29:05,899
of USB serial adapters like probably

00:29:02,929 --> 00:29:07,220
many of you have tinkered with and I've

00:29:05,899 --> 00:29:09,289
noticed that a lot of them just after

00:29:07,220 --> 00:29:10,820
some of them just disappear after a day

00:29:09,289 --> 00:29:12,350
some of them disappear after a couple

00:29:10,820 --> 00:29:14,149
months and you have to unplug him and

00:29:12,350 --> 00:29:16,639
replug them and they just show up again

00:29:14,149 --> 00:29:18,559
and so I've just noticed that the the

00:29:16,639 --> 00:29:20,029
cheaper of these cables just they have

00:29:18,559 --> 00:29:21,919
more and more of these problems you end

00:29:20,029 --> 00:29:24,679
up having USB devices disappearing all

00:29:21,919 --> 00:29:26,840
the time and so I do not work for FTDI

00:29:24,679 --> 00:29:28,940
so I don't want it's this is not an

00:29:26,840 --> 00:29:31,070
advertisement this is experience but I

00:29:28,940 --> 00:29:32,960
have found that FTDI cables actually are

00:29:31,070 --> 00:29:34,370
just they just work there just reliable

00:29:32,960 --> 00:29:36,440
they're a lot more expensive than a lot

00:29:34,370 --> 00:29:39,259
of the cheaper ones but they just work

00:29:36,440 --> 00:29:40,850
and they also all have unique IDs on

00:29:39,259 --> 00:29:42,379
them so you've writing you dev rules and

00:29:40,850 --> 00:29:44,779
stuff for them to show up actually it's

00:29:42,379 --> 00:29:47,090
quite reliable so that's that's one

00:29:44,779 --> 00:29:48,980
little one little tip if you're doing

00:29:47,090 --> 00:29:51,139
this just spend a little bit extra money

00:29:48,980 --> 00:29:52,970
get your FTDI cables then you don't have

00:29:51,139 --> 00:29:54,259
to go out and unplug a cheap cable and

00:29:52,970 --> 00:29:56,120
plug it back in on a Sunday afternoon

00:29:54,259 --> 00:30:03,440
when you're when your farm stops working

00:29:56,120 --> 00:30:05,299
on yes so that's that's the caveat there

00:30:03,440 --> 00:30:07,759
are a few boards out there that embed

00:30:05,299 --> 00:30:10,220
FTDI controllers on the board and they

00:30:07,759 --> 00:30:11,809
did not put an EEPROM with IDs on them

00:30:10,220 --> 00:30:13,490
so they all show up is ID zero so you

00:30:11,809 --> 00:30:15,470
still have they're still reliable but

00:30:13,490 --> 00:30:17,720
you still have to die to FTD you Dev

00:30:15,470 --> 00:30:19,279
rule for the USB port that they're

00:30:17,720 --> 00:30:21,110
plugged into not that you yeah so there

00:30:19,279 --> 00:30:23,679
are there are caveats but they still

00:30:21,110 --> 00:30:23,679
work way better

00:30:27,830 --> 00:30:35,309
one thing which in our lab is causing a

00:30:31,919 --> 00:30:38,429
lot of difficulty is that seems it's not

00:30:35,309 --> 00:30:42,150
possible to buy USB hubs which have

00:30:38,429 --> 00:30:45,570
individual power port switching from a

00:30:42,150 --> 00:30:48,480
reliable manufacturer so yeah we've been

00:30:45,570 --> 00:30:55,200
thinkin of building us own ones but yeah

00:30:48,480 --> 00:30:56,190
we are software company so one thing I

00:30:55,200 --> 00:30:58,500
thought of on this that I've been

00:30:56,190 --> 00:31:00,030
thinking I I have I have these 28 port

00:30:58,500 --> 00:31:02,130
USB hubs and I have four of them in

00:31:00,030 --> 00:31:04,140
every port has a push button on the port

00:31:02,130 --> 00:31:06,120
so I was actually thinking about just

00:31:04,140 --> 00:31:08,870
modifying one of those with an yet

00:31:06,120 --> 00:31:11,909
another set of relays on top of this USB

00:31:08,870 --> 00:31:13,710
plug they could push the buttons to do

00:31:11,909 --> 00:31:15,840
that that's what that's a relatively

00:31:13,710 --> 00:31:19,679
cheap solution but again one more pile

00:31:15,840 --> 00:31:21,659
of relays but yeah I have seen some USB

00:31:19,679 --> 00:31:23,940
hubs that have switchable ports but

00:31:21,659 --> 00:31:24,720
they're only like four ports and they're

00:31:23,940 --> 00:31:28,770
pretty expensive

00:31:24,720 --> 00:31:31,740
I don't know has anybody else have USB

00:31:28,770 --> 00:31:43,980
hubs with switchable power that work

00:31:31,740 --> 00:31:46,470
reliably yeah I think that Tom Marini

00:31:43,980 --> 00:31:48,210
from console Co mentioning the one and

00:31:46,470 --> 00:31:52,110
Portland it's called

00:31:48,210 --> 00:31:55,620
it epsilon cush yeah so there's one that

00:31:52,110 --> 00:31:58,830
you can control from software yeah just

00:31:55,620 --> 00:32:00,960
three three ports yeah so it's not that

00:31:58,830 --> 00:32:04,590
mad but it says I think it's open

00:32:00,960 --> 00:32:07,409
hardware so the good thing is that you

00:32:04,590 --> 00:32:10,020
if you're an electronic engineer you can

00:32:07,409 --> 00:32:13,530
scale that up because you it's open

00:32:10,020 --> 00:32:19,200
software and yeah yeah I think also the

00:32:13,530 --> 00:32:21,030
driver is open source thank you

00:32:19,200 --> 00:32:23,909
and I think that kind of emphasized the

00:32:21,030 --> 00:32:25,799
need for good wiki for information like

00:32:23,909 --> 00:32:30,530
this just knowing where you can find

00:32:25,799 --> 00:32:30,530
this type of hardware okay

00:32:38,589 --> 00:32:50,959
right thanks very much question you're

00:32:47,059 --> 00:32:52,579
sorry so if you go to the board farm

00:32:50,959 --> 00:32:54,559
page on the helix would actually go to

00:32:52,579 --> 00:33:00,289
recent changes it should be the top of

00:32:54,559 --> 00:33:02,419
the list but if you if you don't mind us

00:33:00,289 --> 00:33:05,419
knowing your name and contact

00:33:02,419 --> 00:33:07,369
information I tend to anonymize my email

00:33:05,419 --> 00:33:12,249
address by replacing the @ sign with the

00:33:07,369 --> 00:33:12,249
word at hopefully that confuses the NSA

00:33:12,309 --> 00:33:20,659
but then if you don't mind adding your

00:33:18,379 --> 00:33:21,889
hardware that you're using and and if

00:33:20,659 --> 00:33:23,659
you're using a particular set of

00:33:21,889 --> 00:33:26,119
software that would be good to know so

00:33:23,659 --> 00:33:28,519
like if you've written your own or like

00:33:26,119 --> 00:33:31,909
I put down a couple like lab grid PD you

00:33:28,519 --> 00:33:34,159
client EB farm and TTC on a list there

00:33:31,909 --> 00:33:35,570
and if you have links to any of the

00:33:34,159 --> 00:33:37,099
documentation on those that'd be great

00:33:35,570 --> 00:33:44,379
so just start collecting information on

00:33:37,099 --> 00:33:46,759
on these things would be great yeah I

00:33:44,379 --> 00:33:50,119
think we're running out of time but I

00:33:46,759 --> 00:33:54,129
just wanted to mention two projects the

00:33:50,119 --> 00:33:56,599
dinero people have been building this

00:33:54,129 --> 00:33:58,729
open and the TI C test automation

00:33:56,599 --> 00:34:00,499
controller board I don't know what the

00:33:58,729 --> 00:34:04,729
status of that it is it's basically he

00:34:00,499 --> 00:34:08,359
bought for for a PCB with connectors for

00:34:04,729 --> 00:34:10,190
for PCBs which you can control network

00:34:08,359 --> 00:34:12,519
use B III and so on

00:34:10,190 --> 00:34:17,899
and it is basically a bigger bond shield

00:34:12,519 --> 00:34:21,950
just 619 inches wide and then there's

00:34:17,899 --> 00:34:24,169
from the chromium OS Google people

00:34:21,950 --> 00:34:26,149
there's this several board which we

00:34:24,169 --> 00:34:27,649
basically have one board with

00:34:26,149 --> 00:34:30,829
personalized connector where they can

00:34:27,649 --> 00:34:33,470
just connect chromium OS device and

00:34:30,829 --> 00:34:37,329
control everything that's maybe an

00:34:33,470 --> 00:34:37,329
interesting idea to look for

00:34:38,350 --> 00:35:06,920
thank you anyone got anything else to

00:34:41,179 --> 00:35:09,170
add before we close no so one one more

00:35:06,920 --> 00:35:12,980
one more plug for a talk later this week

00:35:09,170 --> 00:35:15,530
on tomorrow at 10:00 10:50 or whatever

00:35:12,980 --> 00:35:17,630
that 10:50 slot is I'll be doing a talk

00:35:15,530 --> 00:35:20,270
on what we're calling lab in a box which

00:35:17,630 --> 00:35:22,160
we've we've scaled down a lab basically

00:35:20,270 --> 00:35:24,290
put a PC together with a bunch of small

00:35:22,160 --> 00:35:26,270
boards inside the PC all powered off the

00:35:24,290 --> 00:35:28,910
PC power supply switched by a belieber

00:35:26,270 --> 00:35:30,530
Acme cape with the idea being to kind of

00:35:28,910 --> 00:35:32,560
demonstrate how to easily put together a

00:35:30,530 --> 00:35:34,870
small lab with all the software

00:35:32,560 --> 00:35:37,250
pre-configured and stuff with lava and

00:35:34,870 --> 00:35:39,830
and working with kernel CI and all this

00:35:37,250 --> 00:35:41,630
stuff calling all kind of in one PC so

00:35:39,830 --> 00:35:43,190
it's not necessarily a model but it

00:35:41,630 --> 00:35:44,750
shows how to put all the software and

00:35:43,190 --> 00:35:47,120
all the pieces together for a simple you

00:35:44,750 --> 00:35:54,360
know six or seven boards in all packaged

00:35:47,120 --> 00:35:55,540
cleanly in one PC okay

00:35:54,360 --> 00:35:58,610
[Music]

00:35:55,540 --> 00:36:02,120
regarding mailing lists and before we

00:35:58,610 --> 00:36:04,760
start to exchange pieces of paper with

00:36:02,120 --> 00:36:06,770
emails on it so I will ask the LF IT

00:36:04,760 --> 00:36:09,050
guys to set up a mailing list board

00:36:06,770 --> 00:36:14,960
farms just watch lists dot Linux

00:36:09,050 --> 00:36:17,390
Foundation dot org okay okay thank you

00:36:14,960 --> 00:36:18,660
everyone hope it's been useful thank you

00:36:17,390 --> 00:36:23,160
goodbye

00:36:18,660 --> 00:36:23,160

YouTube URL: https://www.youtube.com/watch?v=-oO9y2HnoYs


