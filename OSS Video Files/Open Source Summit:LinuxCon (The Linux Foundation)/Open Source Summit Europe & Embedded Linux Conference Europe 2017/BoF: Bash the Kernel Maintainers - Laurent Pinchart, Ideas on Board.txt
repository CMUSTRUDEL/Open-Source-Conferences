Title: BoF: Bash the Kernel Maintainers - Laurent Pinchart, Ideas on Board
Publication date: 2017-10-24
Playlist: Open Source Summit Europe & Embedded Linux Conference Europe 2017
Description: 
	BoF: Bash the Kernel Maintainers - Laurent Pinchart, Ideas on Board

The Linux kernel maintainance process is known for often causing frustration among developers. This is a serious issue that the kernel community has been trying to address for years through various forums and initiatives. Most of these have tried to improve the maintenance process from a maintainer's point of view. The large crowd of silent occasional or smaller contributors remains today mostly unheard.

This BOF will try to tackle the kernel maintenance issue from another angle by giving a voice to all contributors. It will be a unique occasion to share the problems you experience when interacting with the upstream kernel community. All feedback will be aggregated in an anonymous form and used to improve the kernel maintenance process.

About Laurent Pinchart
Laurent Pinchart has been a Linux kernel developer since 2001. He has written media-related Linux drivers for consumer and embedded devices and is one of the V4L core developers. Laurent is the founder and owner of Ideas on board, a company specialized in embedded Linux design and development. He has given Linux kernel-related talks at the FOSDEM, LPC and ELC. He currently works with the Renesas Linux kernel team where he develops a wide range of embedded drivers including DRM/KMS and V4L.
Captions: 
	00:00:00,030 --> 00:00:04,920
so thank you all for attending this buff

00:00:01,770 --> 00:00:06,330
session called badger containers I'm

00:00:04,920 --> 00:00:09,000
gonna make a quick announcement first

00:00:06,330 --> 00:00:12,269
there's gonna be no sniper restock okay

00:00:09,000 --> 00:00:14,549
so I'm feel very ashamed to have

00:00:12,269 --> 00:00:16,049
submitted my slides by the Friday

00:00:14,549 --> 00:00:19,350
deadline sorry sorry to go with our

00:00:16,049 --> 00:00:21,779
slides Indian so two of our troubling

00:00:19,350 --> 00:00:28,500
glue with anything visual that's gonna

00:00:21,779 --> 00:00:29,220
be the background will have I oh yeah I

00:00:28,500 --> 00:00:31,939
can do that

00:00:29,220 --> 00:00:31,939
absolutely

00:00:32,690 --> 00:00:41,280
okay so I'd like to set the goals for

00:00:37,680 --> 00:00:44,610
this for this session the first goal is

00:00:41,280 --> 00:00:46,710
that I want you to speak and not listen

00:00:44,610 --> 00:00:48,210
to me so we'll see how that works if I'm

00:00:46,710 --> 00:00:50,520
the one doing the talking it's gonna be

00:00:48,210 --> 00:00:52,110
kind of a failure even though I have

00:00:50,520 --> 00:00:55,320
prepared a few topics that I can use to

00:00:52,110 --> 00:01:00,239
static conversation this is about

00:00:55,320 --> 00:01:02,340
reporting problems you my probably have

00:01:00,239 --> 00:01:03,480
experience when doing Linux kernel

00:01:02,340 --> 00:01:04,890
development and trying to get patches

00:01:03,480 --> 00:01:10,170
upstream or interacted with the onliest

00:01:04,890 --> 00:01:12,210
kind of community this is not about

00:01:10,170 --> 00:01:15,479
calling people in people's names so

00:01:12,210 --> 00:01:17,040
there's no needs unless you want to to

00:01:15,479 --> 00:01:19,020
stay the name of a particular maintainer

00:01:17,040 --> 00:01:21,270
that you would like to bash more

00:01:19,020 --> 00:01:23,040
interesting and having feedback of what

00:01:21,270 --> 00:01:24,810
doesn't work or the promise you have

00:01:23,040 --> 00:01:28,350
encountered and discussing possible

00:01:24,810 --> 00:01:33,420
solutions so the hopefully the outcome

00:01:28,350 --> 00:01:34,770
of this session will be a cemetery of

00:01:33,420 --> 00:01:37,350
all kind of problems and you will have

00:01:34,770 --> 00:01:39,810
encountered and encountered discussion

00:01:37,350 --> 00:01:41,640
there's solutions we we will have

00:01:39,810 --> 00:01:47,070
discussed but it's really about a

00:01:41,640 --> 00:01:48,570
problem summary I plant here then make

00:01:47,070 --> 00:01:50,220
well make a summary of that that they

00:01:48,570 --> 00:01:53,670
will try to an amass as best as possible

00:01:50,220 --> 00:01:56,759
so you please feel free to speak out I

00:01:53,670 --> 00:01:58,649
want quote your name this doesn't mean

00:01:56,759 --> 00:02:01,290
that you animus in this room you might

00:01:58,649 --> 00:02:02,549
not is there a few people around you so

00:02:01,290 --> 00:02:04,409
if you decide to speak of you see I

00:02:02,549 --> 00:02:06,180
can't guarantee that nobody will

00:02:04,409 --> 00:02:09,390
remember when I step out of the door but

00:02:06,180 --> 00:02:13,760
it's not gonna be recorded by me could

00:02:09,390 --> 00:02:15,890
be recorded on video though okay

00:02:13,760 --> 00:02:18,260
I'm also gonna make readout of this

00:02:15,890 --> 00:02:20,150
session at the kernel maintainer summits

00:02:18,260 --> 00:02:22,870
later this week

00:02:20,150 --> 00:02:29,719
and again I want quote any name drink

00:02:22,870 --> 00:02:31,760
during the presentation right the format

00:02:29,719 --> 00:02:33,620
for this what we'd like to do is to

00:02:31,760 --> 00:02:36,769
start with discussing province first

00:02:33,620 --> 00:02:38,209
because I know the lots of you have lots

00:02:36,769 --> 00:02:40,819
of ideas on how we can improve the

00:02:38,209 --> 00:02:42,109
process but I would like possible

00:02:40,819 --> 00:02:44,480
solutions that we discussed to be based

00:02:42,109 --> 00:02:46,870
on actual problems that's people

00:02:44,480 --> 00:02:50,079
experience so if you have a problem

00:02:46,870 --> 00:02:52,069
please report it if you think of

00:02:50,079 --> 00:02:54,049
solutions for your problem or if you

00:02:52,069 --> 00:02:55,609
think the solution for problem and

00:02:54,049 --> 00:02:59,150
someone is reported let's discuss that

00:02:55,609 --> 00:03:01,549
but if you have a solution for something

00:02:59,150 --> 00:03:03,349
that well you think might be a problem

00:03:01,549 --> 00:03:05,629
but that you have an experience yourself

00:03:03,349 --> 00:03:07,669
or don't know anyone who have

00:03:05,629 --> 00:03:09,609
experienced that that's a bit of low

00:03:07,669 --> 00:03:12,169
interest for in the context of recession

00:03:09,609 --> 00:03:14,569
so I have a second microphone here that

00:03:12,169 --> 00:03:18,829
hopefully should work my need to push a

00:03:14,569 --> 00:03:19,669
button somewhere yeah that works so does

00:03:18,829 --> 00:03:25,129
anyone want to start

00:03:19,669 --> 00:03:28,549
yes thank you there is a bit of an

00:03:25,129 --> 00:03:30,340
opaque world as to what the expectations

00:03:28,549 --> 00:03:34,040
are for various parts of the kernel and

00:03:30,340 --> 00:03:35,629
various maintainer x' each maintainer

00:03:34,040 --> 00:03:37,669
has their own way of accepting the

00:03:35,629 --> 00:03:41,769
rejecting patches and notifying people

00:03:37,669 --> 00:03:45,919
of that what their time frame is summed

00:03:41,769 --> 00:03:47,810
maintainer x' you have to comment on

00:03:45,919 --> 00:03:49,849
patches that are there going to them

00:03:47,810 --> 00:03:52,099
within a week or two or you have no

00:03:49,849 --> 00:03:54,139
chance to reject them or say they should

00:03:52,099 --> 00:03:56,479
be different other maintainer is you

00:03:54,139 --> 00:03:58,849
could expect a month or two before the

00:03:56,479 --> 00:04:00,379
patch X that goes in so it's more a

00:03:58,849 --> 00:04:02,569
matter of documentation of what these

00:04:00,379 --> 00:04:06,169
practices are by area or by retainer

00:04:02,569 --> 00:04:10,789
right that's actually something I had in

00:04:06,169 --> 00:04:13,370
in the notes I prepared in case nobody

00:04:10,789 --> 00:04:15,669
had had any questions wanted to start so

00:04:13,370 --> 00:04:20,630
yeah the first part in you mentioned is

00:04:15,669 --> 00:04:24,050
a time issue with the deadlines it goes

00:04:20,630 --> 00:04:25,520
both ways how long do you have if

00:04:24,050 --> 00:04:26,900
there's a patch that's being sent to

00:04:25,520 --> 00:04:29,810
mailing list and you want to review

00:04:26,900 --> 00:04:32,480
well my issue isn't the timing my issue

00:04:29,810 --> 00:04:35,330
is knowing what the timing is for you

00:04:32,480 --> 00:04:37,639
knowing yes oh yeah yes indeed the time

00:04:35,330 --> 00:04:39,440
differs between different maintain is in

00:04:37,639 --> 00:04:42,139
different subsystems I think that's

00:04:39,440 --> 00:04:43,820
pretty much a given I don't really think

00:04:42,139 --> 00:04:47,360
we'll have a big influence on that

00:04:43,820 --> 00:04:49,639
because we have a very diverse style of

00:04:47,360 --> 00:04:52,070
maintenance and maintenance shape

00:04:49,639 --> 00:04:53,540
we have people who pay to work full-time

00:04:52,070 --> 00:04:57,620
on maintaining a subsystem we have

00:04:53,540 --> 00:04:59,450
people doing that as as a hobby I think

00:04:57,620 --> 00:05:01,460
we should strive to improve the process

00:04:59,450 --> 00:05:03,290
to improve the community to possible

00:05:01,460 --> 00:05:04,910
possibly move that's another topic that

00:05:03,290 --> 00:05:06,320
women mentioned to a group made inertia

00:05:04,910 --> 00:05:09,169
for instance to try to make things

00:05:06,320 --> 00:05:11,930
faster and smoother but I don't think

00:05:09,169 --> 00:05:13,910
that setting indeed a timeline or

00:05:11,930 --> 00:05:15,889
deadline that works for everybody will

00:05:13,910 --> 00:05:18,710
will be my thing but documenting that

00:05:15,889 --> 00:05:21,710
yes that's something we can do so we

00:05:18,710 --> 00:05:23,270
can't really we can't really enforce the

00:05:21,710 --> 00:05:25,610
amount of time but documenting it is

00:05:23,270 --> 00:05:28,430
probably something that's useful yes is

00:05:25,610 --> 00:05:31,220
there anyone in this room who is new

00:05:28,430 --> 00:05:33,350
kernel contributor who has submitted

00:05:31,220 --> 00:05:37,460
just a few patches from time time to

00:05:33,350 --> 00:05:39,289
time and who was unsure whether the

00:05:37,460 --> 00:05:41,090
patches were correctly received it was

00:05:39,289 --> 00:05:42,500
like a feedback and that knowing when to

00:05:41,090 --> 00:05:44,810
ping the maintainer whether it was

00:05:42,500 --> 00:05:58,760
appropriate to do that yeah I see your

00:05:44,810 --> 00:06:00,650
hand over there okay thank you actually

00:05:58,760 --> 00:06:02,720
I'm I'm really not a big sub hitter I

00:06:00,650 --> 00:06:03,830
probably have six or seven patch and

00:06:02,720 --> 00:06:06,680
they're perfect you the perfect target

00:06:03,830 --> 00:06:08,660
for this stuff and you know when you get

00:06:06,680 --> 00:06:10,820
it right and we do little patches very

00:06:08,660 --> 00:06:12,440
often a one liner to liner a

00:06:10,820 --> 00:06:14,240
mathematical function that you just

00:06:12,440 --> 00:06:16,010
change so most of the time those pads

00:06:14,240 --> 00:06:19,370
are right actually and it's a black hole

00:06:16,010 --> 00:06:20,960
nobody says anything and you actually

00:06:19,370 --> 00:06:22,310
learn in the next release six months

00:06:20,960 --> 00:06:24,530
later or three months later depending

00:06:22,310 --> 00:06:30,550
where you are that they got merged but

00:06:24,530 --> 00:06:30,550
yeah there's no feedback okay

00:06:33,600 --> 00:06:37,960
so intent of it documentation is indeed

00:06:36,100 --> 00:06:39,520
one of them for the delays but that

00:06:37,960 --> 00:06:41,140
doesn't really solve the black hole

00:06:39,520 --> 00:06:42,160
problem doesn't really so the fact that

00:06:41,140 --> 00:06:45,400
you don't know whether your passion has

00:06:42,160 --> 00:06:47,020
been accepted or not and I believe I

00:06:45,400 --> 00:06:48,250
mean I've been doing currently love have

00:06:47,020 --> 00:06:50,050
quite a long time so I have absolutely

00:06:48,250 --> 00:06:53,920
no issue going to maintainer and say

00:06:50,050 --> 00:06:57,000
what's going on but I assume that's a

00:06:53,920 --> 00:07:01,510
bit more difficult for newcomers and

00:06:57,000 --> 00:07:05,770
that's that's one issue that's I I also

00:07:01,510 --> 00:07:08,920
have identified indeed so documentation

00:07:05,770 --> 00:07:13,780
one of them and how could we improve

00:07:08,920 --> 00:07:17,590
this black hole problem anyone has

00:07:13,780 --> 00:07:29,080
suffered from the same issue yes right

00:07:17,590 --> 00:07:31,870
over there on the microphone why I have

00:07:29,080 --> 00:07:34,780
a similar problem with submitting

00:07:31,870 --> 00:07:38,110
patches when you're doing work for a

00:07:34,780 --> 00:07:39,910
client and you say okay I've got a few

00:07:38,110 --> 00:07:42,130
patches for just general fixes that the

00:07:39,910 --> 00:07:44,860
client is never gonna complain about so

00:07:42,130 --> 00:07:46,510
you send them off they don't get looked

00:07:44,860 --> 00:07:50,229
at or they get looked at late and by the

00:07:46,510 --> 00:07:52,630
time they are even reviewed you've moved

00:07:50,229 --> 00:07:54,610
on to a different piece of work and you

00:07:52,630 --> 00:07:56,770
don't have time or your of the hardware

00:07:54,610 --> 00:07:58,540
to go back and look at these I mean

00:07:56,770 --> 00:08:01,479
that's another another problem is that

00:07:58,540 --> 00:08:05,620
is there some way of getting somebody

00:08:01,479 --> 00:08:09,160
else who could look at that or yeah I

00:08:05,620 --> 00:08:11,919
think that's largely depends on what

00:08:09,160 --> 00:08:14,979
kind of match is your sending what

00:08:11,919 --> 00:08:18,370
subsystem possibly as well if you

00:08:14,979 --> 00:08:22,630
selling few cleanup sideshow patches for

00:08:18,370 --> 00:08:24,250
a very specific driver that has very few

00:08:22,630 --> 00:08:25,810
developers or users there's a high

00:08:24,250 --> 00:08:28,650
chance indeed that if you don't do the

00:08:25,810 --> 00:08:33,219
work nobody's gonna pick it up if you

00:08:28,650 --> 00:08:35,500
send patches for core code of asset

00:08:33,219 --> 00:08:38,469
system there could be a higher chance

00:08:35,500 --> 00:08:40,330
that someone could say okay this batch

00:08:38,469 --> 00:08:42,700
had been said it hasn't been picked up

00:08:40,330 --> 00:08:43,300
and has been reviewed changes requested

00:08:42,700 --> 00:08:45,640
but this

00:08:43,300 --> 00:08:48,160
metallus interest or had to move to

00:08:45,640 --> 00:08:50,019
something else doesn't have time so in

00:08:48,160 --> 00:08:52,000
some cases we could probably do

00:08:50,019 --> 00:08:53,890
something about that but it requires

00:08:52,000 --> 00:08:57,190
actually people to go over the mailing

00:08:53,890 --> 00:09:01,839
list using tools like patchwork or other

00:08:57,190 --> 00:09:04,720
ones to to pick those patches up and try

00:09:01,839 --> 00:09:07,600
to get em extreme that could be an

00:09:04,720 --> 00:09:10,060
interesting junior job for like we have

00:09:07,600 --> 00:09:12,180
lots of newcomers to colonel development

00:09:10,060 --> 00:09:16,060
going through kind of newbies we have

00:09:12,180 --> 00:09:18,130
outreach II people were starting working

00:09:16,060 --> 00:09:21,130
at a colonel and there's been lots of

00:09:18,130 --> 00:09:23,860
complaints before of maintain us who are

00:09:21,130 --> 00:09:28,649
not happy to receive Czech patch style

00:09:23,860 --> 00:09:28,649
patches out of the atresia program so

00:09:32,880 --> 00:09:46,029
yeah I want to talk about a solution if

00:09:39,880 --> 00:09:48,160
there's no problem first but just to

00:09:46,029 --> 00:09:50,920
finish that and then I'll move to hands

00:09:48,160 --> 00:09:52,209
who get a microphone it's could be an

00:09:50,920 --> 00:09:54,640
option for instance for program or

00:09:52,209 --> 00:09:56,230
treaty to instead of running check

00:09:54,640 --> 00:09:58,510
patched you go to meaningless and try to

00:09:56,230 --> 00:10:01,390
see what patches have been sand got

00:09:58,510 --> 00:10:09,490
reviewed but never had never got a v2

00:10:01,390 --> 00:10:10,930
and try to get a video of that they

00:10:09,490 --> 00:10:14,680
might not even have a hardware by the

00:10:10,930 --> 00:10:16,899
time so that that would be even if

00:10:14,680 --> 00:10:18,490
somebody picks it up no absolutely I

00:10:16,899 --> 00:10:20,200
totally agree with that

00:10:18,490 --> 00:10:22,959
if there's no harder availability you

00:10:20,200 --> 00:10:24,730
can't test that but I don't think that

00:10:22,959 --> 00:10:26,260
all patches would fall in your category

00:10:24,730 --> 00:10:30,699
I'm sure some of them would apply to

00:10:26,260 --> 00:10:33,240
coercive subsystem code for instance I

00:10:30,699 --> 00:10:36,459
think the important part if you have

00:10:33,240 --> 00:10:38,260
both patches and you know you are losing

00:10:36,459 --> 00:10:44,320
access to your heart where in the next

00:10:38,260 --> 00:10:46,149
month tell us we don't know right but if

00:10:44,320 --> 00:10:49,029
you tell me if you send me an email hey

00:10:46,149 --> 00:10:50,649
what about these patches I'm I'm I can

00:10:49,029 --> 00:10:51,790
now I still have to heart worry in a

00:10:50,649 --> 00:10:54,699
months I don't have it then it will

00:10:51,790 --> 00:10:56,800
prioritize them otherwise they go on the

00:10:54,699 --> 00:10:58,510
the big pile and every so often you go

00:10:56,800 --> 00:11:01,180
through them and you process all the

00:10:58,510 --> 00:11:03,399
patches and because if I don't know that

00:11:01,180 --> 00:11:08,769
you lose access to the hardware

00:11:03,399 --> 00:11:10,740
I can't prioritize so it we did not

00:11:08,769 --> 00:11:17,190
telepathic

00:11:10,740 --> 00:11:22,180
luckily probably so if you know tell us

00:11:17,190 --> 00:11:23,950
we we don't know we're not generally I

00:11:22,180 --> 00:11:25,779
think is if you post a patch and you

00:11:23,950 --> 00:11:28,510
don't hear anything about it

00:11:25,779 --> 00:11:31,540
ideally if you have patch work that is

00:11:28,510 --> 00:11:33,490
great because it especially if you can

00:11:31,540 --> 00:11:35,410
delegate patches to someone and if you

00:11:33,490 --> 00:11:37,089
see in patch work that your patch is

00:11:35,410 --> 00:11:41,589
delegate it then you know someone will

00:11:37,089 --> 00:11:43,000
look at it and if it's in patch work you

00:11:41,589 --> 00:11:46,870
have a good chance that is one before

00:11:43,000 --> 00:11:48,490
get forgotten I really like the tool but

00:11:46,870 --> 00:11:52,600
you need to you need to tell us if there

00:11:48,490 --> 00:11:54,370
is something special about it just send

00:11:52,600 --> 00:11:58,930
an email what's the worst that can

00:11:54,370 --> 00:12:01,420
happen that we don't reply that's

00:11:58,930 --> 00:12:04,089
actually only that only works for the

00:12:01,420 --> 00:12:06,040
media patches because for everybody else

00:12:04,089 --> 00:12:07,779
nobody goes back to all Petrus and

00:12:06,040 --> 00:12:11,230
applies them that's the only subsystem

00:12:07,779 --> 00:12:13,390
that I've had sent patches to didn't

00:12:11,230 --> 00:12:15,910
hear anything for a year and then then

00:12:13,390 --> 00:12:18,160
they got apply there is something within

00:12:15,910 --> 00:12:19,870
a few months or they are dead and I have

00:12:18,160 --> 00:12:21,550
to resend them media is the one

00:12:19,870 --> 00:12:23,500
subsystem where people actually go back

00:12:21,550 --> 00:12:28,420
to ancient patches and then suddenly

00:12:23,500 --> 00:12:30,100
they're in well the key thing I heard

00:12:28,420 --> 00:12:32,470
from him enhances I agree with that

00:12:30,100 --> 00:12:35,050
communication sometimes what happens in

00:12:32,470 --> 00:12:37,110
my case is I have I maintain cut K

00:12:35,050 --> 00:12:39,730
self-test and and I have a bunch of

00:12:37,110 --> 00:12:43,720
patches come in for tests and sometimes

00:12:39,730 --> 00:12:46,230
I'm I wait for the test author to review

00:12:43,720 --> 00:12:49,149
so I sometimes lose track of them

00:12:46,230 --> 00:12:49,600
honestly and then I really appreciate

00:12:49,149 --> 00:12:51,910
that

00:12:49,600 --> 00:12:53,860
somebody pings me and I get back to this

00:12:51,910 --> 00:12:57,550
so communication just don't hesitate

00:12:53,860 --> 00:13:01,079
saying politely pinging I mean saying

00:12:57,550 --> 00:13:01,079
what's happening so

00:13:01,660 --> 00:13:05,710
but not every week otherwise other

00:13:04,090 --> 00:13:07,960
people will get irritated with you

00:13:05,710 --> 00:13:12,460
yeah and that goes back to documenting

00:13:07,960 --> 00:13:14,800
the the the the timescale some maintain

00:13:12,460 --> 00:13:16,540
is I mean mark you mentioned that you

00:13:14,800 --> 00:13:17,980
don't want to be pinged every week some

00:13:16,540 --> 00:13:19,150
maintenance might want to beeping more

00:13:17,980 --> 00:13:20,440
frequently than others so that's

00:13:19,150 --> 00:13:23,530
something that could be documented as

00:13:20,440 --> 00:13:26,860
well yes so I haven't haven't seen this

00:13:23,530 --> 00:13:28,390
happen for a long time but years ago I I

00:13:26,860 --> 00:13:30,370
would maintain a certain amount of

00:13:28,390 --> 00:13:32,140
drivers directly and I'd be doing

00:13:30,370 --> 00:13:33,940
refactoring on them

00:13:32,140 --> 00:13:36,160
and then someone submits a clean up

00:13:33,940 --> 00:13:38,140
patch to L KML and it breaks my series

00:13:36,160 --> 00:13:40,480
and we kind of submit at the same time

00:13:38,140 --> 00:13:42,130
but for some reason since it got all

00:13:40,480 --> 00:13:44,920
this visibility into L KML it gets

00:13:42,130 --> 00:13:47,070
priority and that again hasn't happened

00:13:44,920 --> 00:13:56,410
a long time but it's very frustrating

00:13:47,070 --> 00:14:03,940
that's all trying to write it down as

00:13:56,410 --> 00:14:13,150
well so any other problem you might have

00:14:03,940 --> 00:14:15,910
in concert encountered yes just can

00:14:13,150 --> 00:14:20,620
share my experience st. pitches wait

00:14:15,910 --> 00:14:27,520
three months pink got angry email late

00:14:20,620 --> 00:14:31,810
one-year pink and then yeah it works yes

00:14:27,520 --> 00:14:36,820
that's that's quite long all the way to

00:14:31,810 --> 00:14:38,050
LA obviously I mean from my my personal

00:14:36,820 --> 00:14:39,160
experience I'm not the subsystem

00:14:38,050 --> 00:14:42,790
maintainer there definitely maintain

00:14:39,160 --> 00:14:46,270
drivers and things fall through the

00:14:42,790 --> 00:14:50,170
cracks depending how busy I am and given

00:14:46,270 --> 00:14:51,730
a period of time and just on a side note

00:14:50,170 --> 00:14:54,490
you can bash me as well maybe that's

00:14:51,730 --> 00:15:01,150
what you were doing it's nice to not say

00:14:54,490 --> 00:15:03,400
the name so yes as sue I mentioned I

00:15:01,150 --> 00:15:05,620
appreciate being pinged obviously if you

00:15:03,400 --> 00:15:08,680
do that every day I'm gonna reply

00:15:05,620 --> 00:15:12,490
politely that's okay please wait one

00:15:08,680 --> 00:15:14,380
week but if I haven't reviewed a patch

00:15:12,490 --> 00:15:15,610
after one month there's a chance that it

00:15:14,380 --> 00:15:17,800
did fall through the cracks

00:15:15,610 --> 00:15:22,800
and that you will not go back to it

00:15:17,800 --> 00:15:24,820
because it gets buried in my inbox and

00:15:22,800 --> 00:15:25,990
that should not happen the first place

00:15:24,820 --> 00:15:30,370
that's something that I should try and

00:15:25,990 --> 00:15:32,770
fix but you should not hesitate spinning

00:15:30,370 --> 00:15:37,360
I believe at least in my opinion there's

00:15:32,770 --> 00:15:40,540
nothing violent in thinking of

00:15:37,360 --> 00:15:43,090
maintainer or being a reviewer because a

00:15:40,540 --> 00:15:45,730
patch hasn't gotten if you've gotten any

00:15:43,090 --> 00:15:48,010
feedback obviously depends on the tone

00:15:45,730 --> 00:15:49,990
of you email but as long as people

00:15:48,010 --> 00:15:50,500
remain polite I don't think that's a pro

00:15:49,990 --> 00:15:52,900
at all

00:15:50,500 --> 00:15:56,440
I definitely would say the same thing

00:15:52,900 --> 00:15:59,590
for I'm sock we are sometimes really

00:15:56,440 --> 00:16:01,390
late and picking our patches and if I

00:15:59,590 --> 00:16:03,370
get an email saying well it's been two

00:16:01,390 --> 00:16:08,260
weeks why haven't you applied any of the

00:16:03,370 --> 00:16:10,870
patches that would actually be the that

00:16:08,260 --> 00:16:13,240
might actually be enough to get me to do

00:16:10,870 --> 00:16:20,710
all the work and not wait another week

00:16:13,240 --> 00:16:22,720
yep although it has been a long a month

00:16:20,710 --> 00:16:24,880
or something then maybe just resending

00:16:22,720 --> 00:16:27,130
well then just pinging can work better

00:16:24,880 --> 00:16:28,450
because there's a there is a good chance

00:16:27,130 --> 00:16:30,940
that the patch to actually gone

00:16:28,450 --> 00:16:32,560
completely able so if you do get a reply

00:16:30,940 --> 00:16:33,930
or be I don't know please send me the

00:16:32,560 --> 00:16:36,240
patch in I don't know what this is

00:16:33,930 --> 00:16:38,440
and again that's that's different

00:16:36,240 --> 00:16:41,530
maintainer so for us a ping would be

00:16:38,440 --> 00:16:44,410
better than recent for you yeah we are

00:16:41,530 --> 00:16:46,180
doing pretty good it's also

00:16:44,410 --> 00:16:50,740
time-dependent it's a situation thing

00:16:46,180 --> 00:16:51,940
but consider resending so if that's been

00:16:50,740 --> 00:16:55,270
emerged but no in between

00:16:51,940 --> 00:16:58,300
please to resend yeah if it's a really

00:16:55,270 --> 00:17:00,610
long time obviously if it has been three

00:16:58,300 --> 00:17:03,280
four or five kind of releases the patch

00:17:00,610 --> 00:17:05,890
might not apply anymore so if that's the

00:17:03,280 --> 00:17:09,970
case it's I think better to do - to

00:17:05,890 --> 00:17:12,790
reset it so moving on to somewhat

00:17:09,970 --> 00:17:14,560
different topic here thank you

00:17:12,790 --> 00:17:16,810
so we've been talking mainly about

00:17:14,560 --> 00:17:19,959
patches being forgotten but there are

00:17:16,810 --> 00:17:21,699
other cases where you submit a patch is

00:17:19,959 --> 00:17:23,230
solving a specific problem that you have

00:17:21,699 --> 00:17:25,570
the maintainer is not really happy with

00:17:23,230 --> 00:17:28,209
the solution you're proposing but does

00:17:25,570 --> 00:17:29,429
not make any other proposal that you can

00:17:28,209 --> 00:17:32,169
like

00:17:29,429 --> 00:17:35,169
used to rework your patches or make a

00:17:32,169 --> 00:17:37,149
better better proposal and things stay

00:17:35,169 --> 00:17:39,070
as they are you still have your problem

00:17:37,149 --> 00:17:41,499
nothing gets merged and that can stay

00:17:39,070 --> 00:17:43,090
this way for months without the thing

00:17:41,499 --> 00:17:45,070
moving forward the maintainer doesn't

00:17:43,090 --> 00:17:46,720
make up his mind on how to solve that

00:17:45,070 --> 00:17:49,120
problem the problem is still there

00:17:46,720 --> 00:17:51,759
nobody has came up with a better

00:17:49,120 --> 00:17:54,129
solution so and it stayed there forever

00:17:51,759 --> 00:17:59,110
I think it's actually a very common

00:17:54,129 --> 00:18:03,759
problem I've seen that myself being and

00:17:59,110 --> 00:18:05,740
actually both sides but suddenly when I

00:18:03,759 --> 00:18:09,879
review patches and see something I don't

00:18:05,740 --> 00:18:12,909
like I'd try to at least give a

00:18:09,879 --> 00:18:17,379
direction that could be that could be

00:18:12,909 --> 00:18:19,210
experimented a lot if it happens happen

00:18:17,379 --> 00:18:21,789
to anyone in this room that's you get a

00:18:19,210 --> 00:18:25,720
match a patch series and you review that

00:18:21,789 --> 00:18:27,669
it's okay that's not right but I'm not

00:18:25,720 --> 00:18:32,350
really sure why but I really feel it's

00:18:27,669 --> 00:18:35,860
not right okay good it's not just me is

00:18:32,350 --> 00:18:37,869
fine but what you what you expect as a

00:18:35,860 --> 00:18:39,009
contributor is some kind of okay that's

00:18:37,869 --> 00:18:40,990
the direction and there are some

00:18:39,009 --> 00:18:42,369
maintained errs that don't basically

00:18:40,990 --> 00:18:45,190
drive their subsystem they're just

00:18:42,369 --> 00:18:47,070
taking patches but as as soon as there

00:18:45,190 --> 00:18:49,830
is a problem that is a little bit

00:18:47,070 --> 00:18:53,080
because more reflection more thinking

00:18:49,830 --> 00:18:54,669
well there's no nobody and that really

00:18:53,080 --> 00:18:56,950
drives the subsystem and tails okay

00:18:54,669 --> 00:18:58,480
that's the way I want to follow to to

00:18:56,950 --> 00:19:02,529
solve that specific problem and so the

00:18:58,480 --> 00:19:04,659
problem remains open forever right and

00:19:02,529 --> 00:19:06,279
some of the problems are really hard and

00:19:04,659 --> 00:19:07,629
you as the maintainer you don't know the

00:19:06,279 --> 00:19:09,369
solution that's a little bit or you

00:19:07,629 --> 00:19:11,379
don't know either you really have to get

00:19:09,369 --> 00:19:14,610
in the room possibly with three other

00:19:11,379 --> 00:19:17,639
people and find a solution and that's

00:19:14,610 --> 00:19:19,749
fundamentally a hard thing the best

00:19:17,639 --> 00:19:23,559
solution for these things has come to a

00:19:19,749 --> 00:19:24,909
conference and schedule the meeting but

00:19:23,559 --> 00:19:25,990
not all of those are hard I mean

00:19:24,909 --> 00:19:28,019
sometimes it's really just the

00:19:25,990 --> 00:19:33,580
maintainer being lazy and hoping the

00:19:28,019 --> 00:19:35,019
person goes away and yeah and I hope

00:19:33,580 --> 00:19:37,629
that the outcome of this session will be

00:19:35,019 --> 00:19:40,440
that we'll try to keep people in the

00:19:37,629 --> 00:19:40,440
development community

00:19:41,610 --> 00:19:50,580
just take the patches and apply them of

00:19:48,900 --> 00:19:52,200
course it's always easier to apply a

00:19:50,580 --> 00:19:54,570
patch than to reject it but if you know

00:19:52,200 --> 00:19:55,710
it's wrong then you know it's going to

00:19:54,570 --> 00:19:57,420
come back to you

00:19:55,710 --> 00:19:59,850
yeah exactly your is gonna be come back

00:19:57,420 --> 00:20:03,420
to you and that is gonna be much lots of

00:19:59,850 --> 00:20:17,910
work later trying to get it in staging

00:20:03,420 --> 00:20:20,850
might be an option sometimes the problem

00:20:17,910 --> 00:20:24,090
is depending on a problem right if if

00:20:20,850 --> 00:20:28,770
that is like a very isolated one where

00:20:24,090 --> 00:20:31,230
there's only one person complaining it

00:20:28,770 --> 00:20:35,880
may not appear as a you know as an

00:20:31,230 --> 00:20:37,799
important thing right but if so my

00:20:35,880 --> 00:20:41,190
approach would be to just make it more

00:20:37,799 --> 00:20:43,740
apparent like you know find somebody

00:20:41,190 --> 00:20:47,580
else who has this problem and so on and

00:20:43,740 --> 00:20:54,059
then try to appear try to make it appear

00:20:47,580 --> 00:20:55,559
as a common one yeah I'm sure you can

00:20:54,059 --> 00:20:57,179
understand that it's frustrating if you

00:20:55,559 --> 00:20:59,580
have an actual problem it takes months

00:20:57,179 --> 00:21:01,530
to build the community that has the same

00:20:59,580 --> 00:21:03,030
problem and fight against basically

00:21:01,530 --> 00:21:04,500
fight against the maintainer to prove

00:21:03,030 --> 00:21:06,690
that the problem really exists on

00:21:04,500 --> 00:21:08,640
multiple platforms or multiple

00:21:06,690 --> 00:21:10,350
situations that's that can be very

00:21:08,640 --> 00:21:14,880
frustrating for something problems that

00:21:10,350 --> 00:21:16,650
are not that complicated not that

00:21:14,880 --> 00:21:19,470
complicated is gonna be a bit of a gray

00:21:16,650 --> 00:21:25,200
area sometimes but yes we still don't

00:21:19,470 --> 00:21:31,280
have DT over lanes or requests API

00:21:25,200 --> 00:21:31,280
I want to depress people

00:21:33,590 --> 00:21:40,470
okay any other topic any other problem I

00:21:38,760 --> 00:21:43,020
can't believe that the okay yeah I just

00:21:40,470 --> 00:21:44,910
did you had something compared to what

00:21:43,020 --> 00:21:47,700
Tomas was saying yes so one of the

00:21:44,910 --> 00:21:50,190
things is when the maintainer doesn't

00:21:47,700 --> 00:21:53,930
give a clear view of where how we are

00:21:50,190 --> 00:21:57,990
supposed to fix things but also in my

00:21:53,930 --> 00:21:59,520
developer hat this time one of the thing

00:21:57,990 --> 00:22:02,340
that really frustrates me is that when

00:21:59,520 --> 00:22:04,560
you have a quite simple solution that

00:22:02,340 --> 00:22:06,900
looks reasonable but maybe not to the

00:22:04,560 --> 00:22:11,490
maintainer which is like totally fine

00:22:06,900 --> 00:22:14,220
and then the actual solution is several

00:22:11,490 --> 00:22:16,710
order of magnitude more complicated and

00:22:14,220 --> 00:22:18,930
involve much more time and so basically

00:22:16,710 --> 00:22:21,630
in this case I would most of the time

00:22:18,930 --> 00:22:22,950
I'm just like giving up and not fixing

00:22:21,630 --> 00:22:27,030
actually the problem because it's I'm

00:22:22,950 --> 00:22:29,900
just not going to do it right so yeah

00:22:27,030 --> 00:22:31,890
that's one of the issues as well I guess

00:22:29,900 --> 00:22:34,260
yeah I've seen Danny did a few times

00:22:31,890 --> 00:22:36,240
before where you submit a small fix to

00:22:34,260 --> 00:22:39,480
something and then you get to yeah but

00:22:36,240 --> 00:22:42,930
caught you fix the whole world I've done

00:22:39,480 --> 00:22:45,630
that yes people have sent me very simple

00:22:42,930 --> 00:22:47,520
patches but just wrong

00:22:45,630 --> 00:22:49,050
then we were trying to figure out how to

00:22:47,520 --> 00:22:50,910
do it right and end up getting big and

00:22:49,050 --> 00:22:54,300
big and began ending up the whole

00:22:50,910 --> 00:22:55,890
subsystem in the end sometimes it's

00:22:54,300 --> 00:23:01,980
actually better to have that have merged

00:22:55,890 --> 00:23:03,630
that heck in the first place and of

00:23:01,980 --> 00:23:06,600
course sometimes all it takes is for the

00:23:03,630 --> 00:23:08,190
person to go no watch so I really doing

00:23:06,600 --> 00:23:12,930
to have time and you'll apply the patch

00:23:08,190 --> 00:23:14,400
anyway yeah possibly having a

00:23:12,930 --> 00:23:16,380
middle-grade solution when you can say

00:23:14,400 --> 00:23:18,900
okay that the best solution would be

00:23:16,380 --> 00:23:20,610
that but maybe you can come up with the

00:23:18,900 --> 00:23:25,440
partial solution that's a bit less

00:23:20,610 --> 00:23:27,390
hawkish on the first one I mean if I

00:23:25,440 --> 00:23:29,250
send a patch and then some of the core

00:23:27,390 --> 00:23:30,630
develops or the subsystem say that oh

00:23:29,250 --> 00:23:32,430
yeah I see what you did there but you

00:23:30,630 --> 00:23:34,500
should implement it in this way and then

00:23:32,430 --> 00:23:36,570
you send you v2 and at that point

00:23:34,500 --> 00:23:38,670
another core developer from the same

00:23:36,570 --> 00:23:39,810
subsystem steps in and said yeah I see

00:23:38,670 --> 00:23:42,160
what you did there but you should do it

00:23:39,810 --> 00:23:47,290
the way you did it the first time

00:23:42,160 --> 00:23:49,750
it's written all over it yeah I see that

00:23:47,290 --> 00:23:52,990
recently yes rings a bell thank you yes

00:23:49,750 --> 00:23:55,510
I seen those before and it gets worse

00:23:52,990 --> 00:24:00,190
when you have five maintainence coming

00:23:55,510 --> 00:24:02,280
up with seven solutions yep so how could

00:24:00,190 --> 00:24:08,620
we improve that

00:24:02,280 --> 00:24:12,850
Ricardo yeah so sometimes you have to

00:24:08,620 --> 00:24:15,180
send a path that is going to affect some

00:24:12,850 --> 00:24:19,780
area that is not of your expertise or

00:24:15,180 --> 00:24:21,400
for example you need to change do you

00:24:19,780 --> 00:24:23,650
want to make an IOC deal that is one in

00:24:21,400 --> 00:24:25,870
one architecture that I also deal have

00:24:23,650 --> 00:24:27,910
to win it all dirty textures and you

00:24:25,870 --> 00:24:30,520
cannot cross-compile

00:24:27,910 --> 00:24:33,490
for all those architectures easily in

00:24:30,520 --> 00:24:35,040
your computer or there are some tests

00:24:33,490 --> 00:24:36,790
that you cannot run your computer

00:24:35,040 --> 00:24:38,590
because you don't have the static

00:24:36,790 --> 00:24:40,600
analyzer that you don't have a

00:24:38,590 --> 00:24:42,790
proprietary static analyzers that the

00:24:40,600 --> 00:24:44,440
one that runs the kernel every week so

00:24:42,790 --> 00:24:48,520
yeah it will be nice to have something

00:24:44,440 --> 00:24:51,970
that automatically checks that you

00:24:48,520 --> 00:24:56,560
voluntarily sent to like a demon or like

00:24:51,970 --> 00:24:59,040
a bot that you that will check your

00:24:56,560 --> 00:25:01,930
patch against all the caution elegance

00:24:59,040 --> 00:25:05,100
all the static analyzer Cystic and all

00:25:01,930 --> 00:25:08,110
dirty textures before you send it to the

00:25:05,100 --> 00:25:09,550
to the maintainer just to make sure they

00:25:08,110 --> 00:25:12,850
are not going to call you stupid when

00:25:09,550 --> 00:25:14,080
you send it well they should never call

00:25:12,850 --> 00:25:16,630
this to be in the first place

00:25:14,080 --> 00:25:17,890
they might they can certainly say the

00:25:16,630 --> 00:25:19,450
code that you the patch that you have

00:25:17,890 --> 00:25:23,040
seen is not right for these reasons

00:25:19,450 --> 00:25:23,040
which they should never call used to be

00:25:25,950 --> 00:25:36,670
zero they service that actually if you

00:25:31,240 --> 00:25:37,480
post a patch to say okay ml it will just

00:25:36,670 --> 00:25:40,810
pick it up

00:25:37,480 --> 00:25:43,810
apply it compile it and complain if it

00:25:40,810 --> 00:25:47,220
doesn't incentive to fix to you so yeah

00:25:43,810 --> 00:25:50,260
this and actually it runs an array of

00:25:47,220 --> 00:25:52,570
static analyzers and things and so on

00:25:50,260 --> 00:25:54,430
and even sometimes boot tries to put it

00:25:52,570 --> 00:26:02,350
on some hardware so

00:25:54,430 --> 00:26:04,570
yeah so you want to send it privately

00:26:02,350 --> 00:26:10,390
because you scared of losing face if you

00:26:04,570 --> 00:26:12,970
send it publicly is that but I I think

00:26:10,390 --> 00:26:14,830
that's an attitude problem that we might

00:26:12,970 --> 00:26:17,080
have been among maintenance in the

00:26:14,830 --> 00:26:19,150
community because whatever you sent to

00:26:17,080 --> 00:26:22,920
male issue you should not lose face

00:26:19,150 --> 00:26:26,110
nobody should call you stupid and you

00:26:22,920 --> 00:26:28,030
it's I'm not saying it's wrong that you

00:26:26,110 --> 00:26:29,320
have a feeling in the first place but if

00:26:28,030 --> 00:26:30,460
you have that feeling the first place

00:26:29,320 --> 00:26:32,320
then there's something that we need to

00:26:30,460 --> 00:26:38,130
fix we don't want to have an abusive

00:26:32,320 --> 00:26:38,130
behavior as maintain is yes

00:26:39,820 --> 00:26:45,700
add to what Rafael said sometimes I

00:26:42,670 --> 00:26:48,100
don't even I even if I don't send zero

00:26:45,700 --> 00:26:51,700
days very aggressive in some ways I just

00:26:48,100 --> 00:26:55,090
uploaded to a to one of my kits that I

00:26:51,700 --> 00:26:57,370
use and it just pulls it in so I haven't

00:26:55,090 --> 00:26:59,230
even sent it to the mailing list which

00:26:57,370 --> 00:27:02,020
is good actually I kind of like that I

00:26:59,230 --> 00:27:07,900
sometimes do that yes - care to catch

00:27:02,020 --> 00:27:09,670
stuff yes so you're absolutely right

00:27:07,900 --> 00:27:10,840
that we should be building a positive

00:27:09,670 --> 00:27:12,490
Colonel community and if you should

00:27:10,840 --> 00:27:13,300
never be tolerated but there is

00:27:12,490 --> 00:27:15,160
something to be said for making

00:27:13,300 --> 00:27:18,160
maintainer x' lives easier for the

00:27:15,160 --> 00:27:23,290
simple checking of the example yeah so I

00:27:18,160 --> 00:27:27,820
think maybe it is sufficient to have a

00:27:23,290 --> 00:27:29,380
just a test at okay ml or something

00:27:27,820 --> 00:27:31,090
where you can just hit Send say same two

00:27:29,380 --> 00:27:34,030
patches here they'll turn through the CI

00:27:31,090 --> 00:27:35,440
and nobody ever has to look at them and

00:27:34,030 --> 00:27:37,870
you'll eventually either get back report

00:27:35,440 --> 00:27:40,300
or nothing so it's not even the fact

00:27:37,870 --> 00:27:41,980
about saving face I'd probably see it's

00:27:40,300 --> 00:27:43,870
more making sure the maintainer doesn't

00:27:41,980 --> 00:27:45,490
actually try to start dude there are you

00:27:43,870 --> 00:27:47,050
until it's done though okay minimum

00:27:45,490 --> 00:27:48,550
stuff so that could be an example that

00:27:47,050 --> 00:27:50,980
is basically lowering your traffic in

00:27:48,550 --> 00:27:53,320
amazingly so that's humans who have less

00:27:50,980 --> 00:27:55,000
CPU time to the computers we're gonna be

00:27:53,320 --> 00:27:57,850
bothered with that the only issue I have

00:27:55,000 --> 00:28:00,730
with that is that if you Center if you

00:27:57,850 --> 00:28:02,350
send a patch like that to to about and

00:28:00,730 --> 00:28:04,720
get a report saying that is less in

00:28:02,350 --> 00:28:07,810
front of you patch well new comers might

00:28:04,720 --> 00:28:10,720
say okay I can tree fix it myself

00:28:07,810 --> 00:28:13,510
mother it's too hard well if they send

00:28:10,720 --> 00:28:16,480
it publicly they could be given a review

00:28:13,510 --> 00:28:18,760
and even if they decide to give up they

00:28:16,480 --> 00:28:20,110
could be someone picking up the patcher

00:28:18,760 --> 00:28:21,490
picking up the fix if it's an

00:28:20,110 --> 00:28:23,770
interesting one

00:28:21,490 --> 00:28:25,810
so having having in the open the first

00:28:23,770 --> 00:28:27,430
place also has some value now what the

00:28:25,810 --> 00:28:30,310
balance between the two years I can't

00:28:27,430 --> 00:28:36,370
really tell but that's my opinion at

00:28:30,310 --> 00:28:38,380
least yep two things there are some

00:28:36,370 --> 00:28:41,700
maintainer is very high up who are

00:28:38,380 --> 00:28:45,150
certainly not nice to newcomers yes and

00:28:41,700 --> 00:28:49,690
we all know that yes we do

00:28:45,150 --> 00:28:52,600
secondly for the sinning patches to 4:22

00:28:49,690 --> 00:28:55,570
testing we have tagged like RFC rft

00:28:52,600 --> 00:28:57,490
having one to say one which just means

00:28:55,570 --> 00:28:59,470
I'm not sure of this patch please

00:28:57,490 --> 00:29:03,060
automate it automatically test it I've

00:28:59,470 --> 00:29:03,060
always look at it might be worthwhile

00:29:05,550 --> 00:29:11,200
would be public would be starting

00:29:08,770 --> 00:29:13,210
mailing these archives but maintain is

00:29:11,200 --> 00:29:16,030
could definitely skip over that yeah

00:29:13,210 --> 00:29:17,920
yeah but if you send a patch to this

00:29:16,030 --> 00:29:20,020
automatic tester and and when you get

00:29:17,920 --> 00:29:21,970
the result you don't know how to fix it

00:29:20,020 --> 00:29:23,920
you can send it to Colonel new is

00:29:21,970 --> 00:29:25,840
instead of sending it to well kam or

00:29:23,920 --> 00:29:28,450
their or the meaning and it's your

00:29:25,840 --> 00:29:32,860
decision you you can't do that yes but

00:29:28,450 --> 00:29:36,310
my phone was the new comers mine not do

00:29:32,860 --> 00:29:38,080
it okay maybe I'm worrying about

00:29:36,310 --> 00:29:38,980
something that is not probably practice

00:29:38,080 --> 00:29:42,060
because we don't have that

00:29:38,980 --> 00:29:42,060
infrastructure in the first place

00:29:48,130 --> 00:29:57,240
I was just gonna say that that automated

00:29:55,600 --> 00:30:00,250
bot system might actually encourage

00:29:57,240 --> 00:30:04,980
newcomers so might give them way to have

00:30:00,250 --> 00:30:07,180
an in that's might be worthwhile yes yes

00:30:04,980 --> 00:30:09,400
lowered the barrier to entry people

00:30:07,180 --> 00:30:19,900
might be less care to contribute so

00:30:09,400 --> 00:30:22,300
that's a good point as well also wonder

00:30:19,900 --> 00:30:24,280
whether we should be doing more to call

00:30:22,300 --> 00:30:26,700
out aggressive behavior like sometimes I

00:30:24,280 --> 00:30:30,220
notice a developer or maintainer

00:30:26,700 --> 00:30:33,430
replying to a page in an inappropriate

00:30:30,220 --> 00:30:35,320
way but then I also don't feel like I

00:30:33,430 --> 00:30:38,650
should step up because then I know that

00:30:35,320 --> 00:30:40,470
person is going to come after me yeah

00:30:38,650 --> 00:30:43,240
but I think it's our responsibility

00:30:40,470 --> 00:30:44,740
collectively to do that I mean

00:30:43,240 --> 00:30:46,060
everybody's responsible for the whole

00:30:44,740 --> 00:30:49,540
community in this case because there was

00:30:46,060 --> 00:30:51,880
nobody does it and I think that if you

00:30:49,540 --> 00:30:53,710
call out that kind of behavior and that

00:30:51,880 --> 00:30:56,440
person comes after you you'll get lots

00:30:53,710 --> 00:30:58,420
of support that's probably true I don't

00:30:56,440 --> 00:31:04,120
expect newcomers to do that but

00:30:58,420 --> 00:31:06,700
certainly kernel kernel developers and

00:31:04,120 --> 00:31:09,610
that can not only be extended to replies

00:31:06,700 --> 00:31:12,240
to patches but sometimes commit messages

00:31:09,610 --> 00:31:15,850
fixing bugs also contain pretty

00:31:12,240 --> 00:31:17,890
aggressive language like okay it could

00:31:15,850 --> 00:31:21,130
have been done that before so stupidly

00:31:17,890 --> 00:31:23,230
and I think also this is very that's not

00:31:21,130 --> 00:31:25,330
appropriated some people might be

00:31:23,230 --> 00:31:26,950
smaller and some people who did it

00:31:25,330 --> 00:31:29,110
before might be no hurry or whatever but

00:31:26,950 --> 00:31:33,040
they probably did not do this

00:31:29,110 --> 00:31:40,840
intentionally bad yes that's a good

00:31:33,040 --> 00:31:43,150
point as a relatively be near

00:31:40,840 --> 00:31:45,910
contributor I can tell that even if you

00:31:43,150 --> 00:31:47,620
don't have a face initially Yogi's are

00:31:45,910 --> 00:31:50,290
afraid of losing that so I'm sending

00:31:47,620 --> 00:31:53,500
something that is stupid to someone so

00:31:50,290 --> 00:31:54,640
sometimes you refrain from doing that so

00:31:53,500 --> 00:31:56,290
I don't know if there's something that

00:31:54,640 --> 00:31:59,560
it's a problem that is general or

00:31:56,290 --> 00:32:00,640
personal or widespread but I think

00:31:59,560 --> 00:32:02,830
that's something that out

00:32:00,640 --> 00:32:05,890
this is my first patch I have a look at

00:32:02,830 --> 00:32:08,980
that like a tag or something and or run

00:32:05,890 --> 00:32:11,020
them through automatic test

00:32:08,980 --> 00:32:12,940
infrastructure or something could help

00:32:11,020 --> 00:32:15,430
people getting more confident and

00:32:12,940 --> 00:32:18,490
sending patches probably well to answer

00:32:15,430 --> 00:32:20,050
you first question there who here wasn't

00:32:18,490 --> 00:32:24,760
scared was sending the first patch of

00:32:20,050 --> 00:32:28,500
the kernel I wasn't really scared but

00:32:24,760 --> 00:32:28,500
the patches were really really bad but

00:32:32,820 --> 00:32:36,940
yeah I think at the problem of

00:32:34,840 --> 00:32:41,050
confidence for newcomers is an important

00:32:36,940 --> 00:32:44,320
one so sending your first patch so if

00:32:41,050 --> 00:32:49,440
you tag it as RFC which means or stands

00:32:44,320 --> 00:32:52,900
for request for comments then yeah

00:32:49,440 --> 00:32:55,060
probably so first of all maintainer czar

00:32:52,900 --> 00:32:59,500
not very likely to look at that and

00:32:55,060 --> 00:33:03,280
second you you will you might actually

00:32:59,500 --> 00:33:05,140
get some more like you know warm

00:33:03,280 --> 00:33:07,450
reception for that because people will

00:33:05,140 --> 00:33:09,730
treat it as an experimental code

00:33:07,450 --> 00:33:13,180
essentially an experimental code might

00:33:09,730 --> 00:33:15,520
be you know bad or something yes nobody

00:33:13,180 --> 00:33:27,700
might expect it to be bad it's expected

00:33:15,520 --> 00:33:30,070
that way yeah our model is based on

00:33:27,700 --> 00:33:32,590
sending patches to mailing lists and we

00:33:30,070 --> 00:33:34,510
have jobs and we work with github and we

00:33:32,590 --> 00:33:36,460
send pull requests and their CI and

00:33:34,510 --> 00:33:40,060
gives us a green checkmark as a

00:33:36,460 --> 00:33:42,610
maintainer I wish that my job reviewing

00:33:40,060 --> 00:33:44,500
patches coming in could be as easy as

00:33:42,610 --> 00:33:46,390
looking at a graphical UI seeing the

00:33:44,500 --> 00:33:48,040
checkmark and then reviewing the code I

00:33:46,390 --> 00:33:50,440
wish I don't know that that's the best

00:33:48,040 --> 00:33:52,690
thing but it's something I miss when I

00:33:50,440 --> 00:33:54,550
go back to Linux open-source work after

00:33:52,690 --> 00:33:56,320
I leave github all day long you know

00:33:54,550 --> 00:34:01,240
it's just it's great having that CI

00:33:56,320 --> 00:34:03,100
and we just basically newcomers they

00:34:01,240 --> 00:34:05,260
they don't feel comfortable sending pull

00:34:03,100 --> 00:34:08,830
requests and I don't really think anyone

00:34:05,260 --> 00:34:11,290
any newcomers do and it actually Dennis

00:34:08,830 --> 00:34:13,929
with products not really extending most

00:34:11,290 --> 00:34:14,350
KZ many wants that I'm talking about the

00:34:13,929 --> 00:34:17,110
trend

00:34:14,350 --> 00:34:18,820
we haven't moved forward we've been it's

00:34:17,110 --> 00:34:21,370
been patches on a mailing list for the

00:34:18,820 --> 00:34:23,380
past many years yes that's a Kalika has

00:34:21,370 --> 00:34:27,390
been discussed quite extensively

00:34:23,380 --> 00:34:29,770
actually the past year a couple of years

00:34:27,390 --> 00:34:31,900
when my personal experience with you

00:34:29,770 --> 00:34:33,520
eyes for that is that yes you'll have a

00:34:31,900 --> 00:34:35,260
nice graphical you I've the button that

00:34:33,520 --> 00:34:37,660
you can press after you finish the

00:34:35,260 --> 00:34:40,210
review and most of the time you'll press

00:34:37,660 --> 00:34:42,600
a button without reviewing it don't get

00:34:40,210 --> 00:34:49,840
me started and Garrett for instance

00:34:42,600 --> 00:34:53,280
sorry yeah we can probably improve

00:34:49,840 --> 00:34:55,900
tooling but a complete change like that

00:34:53,280 --> 00:34:57,460
well there will be very disruptive and

00:34:55,900 --> 00:34:58,750
I'm not sure what the outcome would be

00:34:57,460 --> 00:35:02,970
whether it would be a better place or

00:34:58,750 --> 00:35:02,970
not but that's something that's open

00:35:12,220 --> 00:35:16,960
yeah yes zero that does give you some

00:35:14,589 --> 00:35:19,210
level of CI and there's been lots of

00:35:16,960 --> 00:35:20,859
efforts recently to improve CI in the

00:35:19,210 --> 00:35:22,300
Carroll in general and people at bay

00:35:20,859 --> 00:35:24,640
Libre for instance I've been working on

00:35:22,300 --> 00:35:27,190
assigning Colonel CI to do more than

00:35:24,640 --> 00:35:30,609
boot testing and I think that's a trend

00:35:27,190 --> 00:35:33,040
in the Linux kernel community at a

00:35:30,609 --> 00:35:34,660
moment that we're really trying to

00:35:33,040 --> 00:35:37,960
improve the test infrastructures to

00:35:34,660 --> 00:35:41,859
improve CI and well to improve the

00:35:37,960 --> 00:35:47,619
quality in the end of the product here

00:35:41,859 --> 00:35:49,720
where's the microphone okay okay just

00:35:47,619 --> 00:35:51,880
first to go back to what was discussed

00:35:49,720 --> 00:35:54,910
about people sending things and not

00:35:51,880 --> 00:35:57,700
being sure it's correct somehow I mean I

00:35:54,910 --> 00:36:00,310
don't even like to get a nasty message

00:35:57,700 --> 00:36:03,190
from the zero day but I mean it's like

00:36:00,310 --> 00:36:05,170
you forgot to compile a year I mean even

00:36:03,190 --> 00:36:07,540
if it's not human it's still sort of a

00:36:05,170 --> 00:36:13,119
reproach yes if it says have you

00:36:07,540 --> 00:36:15,339
forgotten to compile it's just that the

00:36:13,119 --> 00:36:18,579
message comes in okay one might prefer

00:36:15,339 --> 00:36:20,440
to have control over when this detection

00:36:18,579 --> 00:36:23,050
happens and and so on

00:36:20,440 --> 00:36:25,540
it's wrong once you've sent it off

00:36:23,050 --> 00:36:27,069
somehow you have justified that you feel

00:36:25,540 --> 00:36:30,790
like it's good enough and then getting

00:36:27,069 --> 00:36:31,990
it back is a bit unnerving do you think

00:36:30,790 --> 00:36:34,780
that phone you come as it would be

00:36:31,990 --> 00:36:37,390
better to have a human who can use a

00:36:34,780 --> 00:36:39,160
softer tone guide people instead of

00:36:37,390 --> 00:36:48,579
having something automated which by

00:36:39,160 --> 00:36:50,170
definition is gonna be cold there was a

00:36:48,579 --> 00:36:51,460
suggestion that maybe it would only go

00:36:50,170 --> 00:36:53,859
to the message would only go to the

00:36:51,460 --> 00:36:57,940
contributor and not to everyone to

00:36:53,859 --> 00:36:59,380
somehow reduce embarrassment alright so

00:36:57,940 --> 00:37:00,700
that the zero the report would be

00:36:59,380 --> 00:37:06,310
private and I'd go to the meaningless

00:37:00,700 --> 00:37:11,809
find sense so actually my question

00:37:06,310 --> 00:37:15,199
though was about cross tree commits yes

00:37:11,809 --> 00:37:16,609
I think it's very unclear where they

00:37:15,199 --> 00:37:19,729
should go and who's going to pick them

00:37:16,609 --> 00:37:22,999
up and how they should be cut up and and

00:37:19,729 --> 00:37:29,749
so on and I think maybe this unclear

00:37:22,999 --> 00:37:31,579
Ness discourages sending such changes so

00:37:29,749 --> 00:37:33,289
maybe we could have somehow overall

00:37:31,579 --> 00:37:36,170
better code quality yes

00:37:33,289 --> 00:37:37,339
if this process were more clear yes

00:37:36,170 --> 00:37:39,319
uh-huh

00:37:37,339 --> 00:37:44,829
are we doing from a time point of view

00:37:39,319 --> 00:37:51,499
by the way when do I have to stop sorry

00:37:44,829 --> 00:38:04,069
sorry okay five o'clock okay then

00:37:51,499 --> 00:38:05,359
well that's it I hate you now see people

00:38:04,069 --> 00:38:07,489
are queuing already for next session so

00:38:05,359 --> 00:38:11,499
thank you very much for attending thank

00:38:07,489 --> 00:38:11,499

YouTube URL: https://www.youtube.com/watch?v=73fR6E7eTd4


