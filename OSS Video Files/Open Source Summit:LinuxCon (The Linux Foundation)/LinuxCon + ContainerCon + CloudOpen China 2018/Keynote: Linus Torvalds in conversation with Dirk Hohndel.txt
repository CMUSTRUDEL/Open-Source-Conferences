Title: Keynote: Linus Torvalds in conversation with Dirk Hohndel
Publication date: 2018-07-20
Playlist: LinuxCon + ContainerCon + CloudOpen China 2018
Description: 
	Keynote: Linus Torvalds, Creator of Linux & Git, in conversation with Dirk Hohndel, VP & Chief Open Source Officer, VMware
Captions: 
	00:00:03,840 --> 00:00:10,920
so this week we decided to take leanest

00:00:07,990 --> 00:00:12,190
Torvalds to meet another

00:00:10,920 --> 00:00:15,510
black-and-whites

00:00:12,190 --> 00:00:16,810
animal are we are we doing this year

00:00:15,510 --> 00:00:19,589
there he is

00:00:16,810 --> 00:00:25,599
this is Lena store vaults and Chang do

00:00:19,589 --> 00:00:31,300
this week and leanness leaned into the

00:00:25,599 --> 00:00:34,140
Panda he said you know what I don't

00:00:31,300 --> 00:00:37,060
think we want the penguin anymore I

00:00:34,140 --> 00:00:39,760
think we're gonna go with the Panda for

00:00:37,060 --> 00:00:42,970
Linux and look at the reaction from the

00:00:39,760 --> 00:00:47,590
Panda I can't tell if the Panda is

00:00:42,970 --> 00:00:52,110
scared or happy or just really likes

00:00:47,590 --> 00:00:54,760
that carrot I think it's the carrot but

00:00:52,110 --> 00:00:58,990
leus and I got to spend some time

00:00:54,760 --> 00:01:02,020
meeting pandas going around China we

00:00:58,990 --> 00:01:04,720
love this country we love furry black

00:01:02,020 --> 00:01:06,970
and white animals and with that I want

00:01:04,720 --> 00:01:10,420
to welcome to the stage our next speaker

00:01:06,970 --> 00:01:13,060
leanness Torvalds for a conversation

00:01:10,420 --> 00:01:17,200
with dirt on dog Garron applause for

00:01:13,060 --> 00:01:19,860
leanness in dirt Thank You winning how

00:01:17,200 --> 00:01:23,140
is everyone oh it's quite a bright light

00:01:19,860 --> 00:01:25,510
so my name is Dirk Wendell I'm the

00:01:23,140 --> 00:01:29,350
inverse chief open source officer and

00:01:25,510 --> 00:01:31,479
this is I'm Linus and I'm not very

00:01:29,350 --> 00:01:33,460
comfortable doing public speaking so to

00:01:31,479 --> 00:01:35,860
solve that problem we've done this

00:01:33,460 --> 00:01:38,500
questions and answers session for the

00:01:35,860 --> 00:01:40,060
last few years and that works better for

00:01:38,500 --> 00:01:42,520
me since I don't know the questions

00:01:40,060 --> 00:01:44,530
beforehand this tends to be slightly

00:01:42,520 --> 00:01:47,229
more interesting for me too hopefully

00:01:44,530 --> 00:01:49,420
for you and it's also a lot less work

00:01:47,229 --> 00:01:50,560
for you to prepare that's that's the big

00:01:49,420 --> 00:01:53,140
part of it yes

00:01:50,560 --> 00:01:56,350
so I always start with the same question

00:01:53,140 --> 00:01:58,090
so I apologize if this is boring for

00:01:56,350 --> 00:02:03,220
everyone in the audience but maybe it

00:01:58,090 --> 00:02:08,410
isn't so yesterday you released 418 RC -

00:02:03,220 --> 00:02:10,450
what's the state of Linux so I have to

00:02:08,410 --> 00:02:13,840
say to kind of explain the background

00:02:10,450 --> 00:02:18,459
we've been doing the same process now

00:02:13,840 --> 00:02:21,400
for almost 15 years and I don't do

00:02:18,459 --> 00:02:23,560
development anymore I am a manager I

00:02:21,400 --> 00:02:25,780
write code most of the time when I write

00:02:23,560 --> 00:02:28,180
code it's actually in email when I send

00:02:25,780 --> 00:02:31,060
people saying hey this is not working

00:02:28,180 --> 00:02:32,769
maybe you can try this but what I care

00:02:31,060 --> 00:02:35,920
about most and what I have cared about

00:02:32,769 --> 00:02:38,230
most for the last couple of decades by

00:02:35,920 --> 00:02:42,040
now is actually that the process works

00:02:38,230 --> 00:02:46,090
so that people can write code and and we

00:02:42,040 --> 00:02:48,580
can keep on improving the kernel so we

00:02:46,090 --> 00:02:51,040
have a release schedule that is about 8

00:02:48,580 --> 00:02:53,340
to 10 weeks for every release where the

00:02:51,040 --> 00:02:57,700
two first weeks are merging new code and

00:02:53,340 --> 00:02:59,290
I am so happy about the fact that it

00:02:57,700 --> 00:03:02,470
continues to work

00:02:59,290 --> 00:03:07,350
so for 4.18 for example we had roughly

00:03:02,470 --> 00:03:12,150
1500 people who actually wrote code and

00:03:07,350 --> 00:03:14,920
I merged that code from about a hundred

00:03:12,150 --> 00:03:19,079
maintained errs that that maintain

00:03:14,920 --> 00:03:23,109
different sub areas of the kernel and

00:03:19,079 --> 00:03:25,950
this process hasn't changed and that's I

00:03:23,109 --> 00:03:30,700
think the most important part is to

00:03:25,950 --> 00:03:33,940
allow people around the world to just

00:03:30,700 --> 00:03:38,230
keep on improving Linux and this release

00:03:33,940 --> 00:03:41,079
there was no new architectures there it

00:03:38,230 --> 00:03:42,820
was one of those maintenance releases

00:03:41,079 --> 00:03:44,709
where we're cleaning up some code we're

00:03:42,820 --> 00:03:46,540
actually removing more lines than we are

00:03:44,709 --> 00:03:50,709
adding this release which is always nice

00:03:46,540 --> 00:03:52,450
to see when people decide some piece of

00:03:50,709 --> 00:03:54,040
hardware for example never made it into

00:03:52,450 --> 00:03:57,070
the marketplace and we just end up

00:03:54,040 --> 00:04:00,340
removing the driver and and things are

00:03:57,070 --> 00:04:03,280
going fairly smoothly and I think

00:04:00,340 --> 00:04:07,390
with a project like the kernel which is

00:04:03,280 --> 00:04:09,459
the infrastructure for a lot of other

00:04:07,390 --> 00:04:12,430
software projects and a lot of other

00:04:09,459 --> 00:04:14,560
hardware problem projects to having this

00:04:12,430 --> 00:04:17,459
kind of smooth fairly predictable

00:04:14,560 --> 00:04:20,109
development model really helps everybody

00:04:17,459 --> 00:04:23,800
so we've had very little change in the

00:04:20,109 --> 00:04:26,020
process in almost 15 years but still I

00:04:23,800 --> 00:04:28,870
mean people are changing what we're

00:04:26,020 --> 00:04:30,730
doing is changing yep are there parts in

00:04:28,870 --> 00:04:33,190
the process that where you think we're

00:04:30,730 --> 00:04:34,450
doing better than we used to or what you

00:04:33,190 --> 00:04:37,930
think how we need to pay attention

00:04:34,450 --> 00:04:39,580
they're kind of degrading I think we're

00:04:37,930 --> 00:04:40,840
doing better than we used to simply

00:04:39,580 --> 00:04:43,240
because people have done it used to the

00:04:40,840 --> 00:04:46,210
process we were better at following the

00:04:43,240 --> 00:04:49,960
rules just because by now people take

00:04:46,210 --> 00:04:53,860
the rules for granted it doesn't mean

00:04:49,960 --> 00:04:56,200
that we're perfect and I end up shouting

00:04:53,860 --> 00:04:59,500
in email at people every single release

00:04:56,200 --> 00:05:03,510
for people who forgot to follow the

00:04:59,500 --> 00:05:06,700
rules that release we had a few cases

00:05:03,510 --> 00:05:09,669
last week where I was somewhat unhappy

00:05:06,700 --> 00:05:11,680
with with changes that came late and

00:05:09,669 --> 00:05:14,020
shouldn't have been sent to me during

00:05:11,680 --> 00:05:16,210
the so-called RC period one when things

00:05:14,020 --> 00:05:21,160
are supposed to calm down but on the

00:05:16,210 --> 00:05:24,760
whole I think my email outbursts have

00:05:21,160 --> 00:05:27,850
gone much less common and and that to me

00:05:24,760 --> 00:05:32,080
is a good sign it means that that our

00:05:27,850 --> 00:05:34,240
process is actually getting better so so

00:05:32,080 --> 00:05:39,160
what you're saying is boring is good a

00:05:34,240 --> 00:05:43,150
boring is great I love boring if I'm I'm

00:05:39,160 --> 00:05:46,870
actually somewhat disgusted with the

00:05:43,150 --> 00:05:50,770
whole tech industry of being so enamored

00:05:46,870 --> 00:05:52,870
with the word innovation and and a lot

00:05:50,770 --> 00:05:55,360
of these other buzzwords about how we're

00:05:52,870 --> 00:05:57,880
revolutionizing the world because I

00:05:55,360 --> 00:06:00,880
think a lot of engineering and when you

00:05:57,880 --> 00:06:03,220
really get down to engineering is about

00:06:00,880 --> 00:06:07,610
getting the details right and doing a

00:06:03,220 --> 00:06:11,650
good job and just very little engineer

00:06:07,610 --> 00:06:16,669
is really about innovation boring

00:06:11,650 --> 00:06:19,580
applauding work is the real work and and

00:06:16,669 --> 00:06:24,229
the fancy stuff makes a lot of the news

00:06:19,580 --> 00:06:27,889
but but I if if I can keep my project

00:06:24,229 --> 00:06:30,050
boring but alive and doing well from a

00:06:27,889 --> 00:06:32,169
development angle I will be very very

00:06:30,050 --> 00:06:37,389
happy

00:06:32,169 --> 00:06:41,870
there's a saying genius is 1%

00:06:37,389 --> 00:06:45,080
inspiration 99% perspiration that I'm a

00:06:41,870 --> 00:06:47,060
huge believer in yeah but so on the

00:06:45,080 --> 00:06:49,759
boring side we certainly did not have a

00:06:47,060 --> 00:06:53,000
boring first half of 2018

00:06:49,759 --> 00:06:56,949
thanks to spectra and meltdown and and

00:06:53,000 --> 00:06:59,539
friends what's your take on that

00:06:56,949 --> 00:07:02,120
so I don't know I'm assuming everybody

00:06:59,539 --> 00:07:06,229
in the room is very familiar with the

00:07:02,120 --> 00:07:07,849
CPU bugs design problems we've had for

00:07:06,229 --> 00:07:09,860
the last half-year it's actually being

00:07:07,849 --> 00:07:14,839
an issue for the kernel community for

00:07:09,860 --> 00:07:17,419
about the last year and people were kind

00:07:14,839 --> 00:07:21,770
of whispering about it before that it's

00:07:17,419 --> 00:07:23,300
been very frustrating I actually one of

00:07:21,770 --> 00:07:24,919
the reasons I got into kernel

00:07:23,300 --> 00:07:27,770
development and the main reason I got

00:07:24,919 --> 00:07:29,900
into kernel development is I'm I wanted

00:07:27,770 --> 00:07:32,690
to know how hardware works that is the

00:07:29,900 --> 00:07:36,529
kind of thing I find personally very

00:07:32,690 --> 00:07:39,949
exciting is it's just on a very low

00:07:36,529 --> 00:07:42,259
level how a CPU and on how a computer

00:07:39,949 --> 00:07:45,349
works and it's why I'm doing kernels and

00:07:42,259 --> 00:07:49,250
I'm actually finding the whole CPU bugs

00:07:45,349 --> 00:07:51,080
I find them fascinating so it should be

00:07:49,250 --> 00:07:53,150
something I'm excited about but

00:07:51,080 --> 00:07:57,680
especially with the security issues and

00:07:53,150 --> 00:08:00,589
all the secrecy that in that ends up

00:07:57,680 --> 00:08:03,169
involving it's been very frustrating I

00:08:00,589 --> 00:08:06,800
know it's been frustrating inside

00:08:03,169 --> 00:08:10,129
companies because they have to try to

00:08:06,800 --> 00:08:12,349
contain the whole security issue so that

00:08:10,129 --> 00:08:14,839
it doesn't leak ahead of time but it's

00:08:12,349 --> 00:08:18,349
particularly frustrating in open source

00:08:14,839 --> 00:08:19,740
where we're so used to talking openly

00:08:18,349 --> 00:08:22,289
about all our issues

00:08:19,740 --> 00:08:25,139
I'm trying to find the best solution by

00:08:22,289 --> 00:08:28,199
talking to literally thousands of people

00:08:25,139 --> 00:08:30,599
every release and then you have issues

00:08:28,199 --> 00:08:36,000
like the security problems in the CPUs

00:08:30,599 --> 00:08:40,409
where we have months and months of very

00:08:36,000 --> 00:08:43,409
controlled of silence where we cannot

00:08:40,409 --> 00:08:44,670
talk except to this small group of

00:08:43,409 --> 00:08:47,820
people who know about it

00:08:44,670 --> 00:08:51,149
and it has been a very frustrating

00:08:47,820 --> 00:08:54,089
experience and I really hope that we're

00:08:51,149 --> 00:08:56,640
we're not going to see a lot more of

00:08:54,089 --> 00:08:59,160
this because it's it's just very painful

00:08:56,640 --> 00:09:01,020
for everybody but do you think that the

00:08:59,160 --> 00:09:02,850
vendors are learning from from the

00:09:01,020 --> 00:09:06,930
frustration that you have expressed is

00:09:02,850 --> 00:09:09,750
it getting better it is getting better a

00:09:06,930 --> 00:09:13,350
we have gotten slightly better at the

00:09:09,750 --> 00:09:15,480
process we are when when the news first

00:09:13,350 --> 00:09:18,029
hit we really didn't know how to work at

00:09:15,480 --> 00:09:19,770
all when we're so used to the open

00:09:18,029 --> 00:09:24,480
mailing list model of doing development

00:09:19,770 --> 00:09:26,790
and now we have six months bless of

00:09:24,480 --> 00:09:30,470
experience with this so that helped a

00:09:26,790 --> 00:09:36,329
bit people are still very frustrated I'm

00:09:30,470 --> 00:09:37,980
actually hoping that even more so that

00:09:36,329 --> 00:09:40,589
the hardware people learned from the

00:09:37,980 --> 00:09:42,990
experience so that in a few years we can

00:09:40,589 --> 00:09:46,560
look back and laugh at this but but it's

00:09:42,990 --> 00:09:48,720
gonna take a few years but I mean if you

00:09:46,560 --> 00:09:51,329
look at the the type of bugs that these

00:09:48,720 --> 00:09:53,940
were they were fundamentally information

00:09:51,329 --> 00:09:56,970
disclosure leaks right so that that

00:09:53,940 --> 00:09:59,310
makes me wonder about computers and and

00:09:56,970 --> 00:10:02,850
in the context of privacy that we talk

00:09:59,310 --> 00:10:06,320
so much about these days it should we be

00:10:02,850 --> 00:10:09,630
worried about our trust in computers I

00:10:06,320 --> 00:10:11,430
think we always should have been worried

00:10:09,630 --> 00:10:14,190
about our trust in computers and I want

00:10:11,430 --> 00:10:16,380
to make it clear that the hardware bugs

00:10:14,190 --> 00:10:23,579
even though they've been very painful

00:10:16,380 --> 00:10:26,190
for us we I think in the end we on the

00:10:23,579 --> 00:10:29,040
software side have had a lot of bugs -

00:10:26,190 --> 00:10:31,600
so it's not like we can say hey hardware

00:10:29,040 --> 00:10:34,269
people get your act together

00:10:31,600 --> 00:10:36,279
we we have our own issues that we need

00:10:34,269 --> 00:10:38,709
to fix it's just that when we have bugs

00:10:36,279 --> 00:10:40,269
and software there's so much easier to

00:10:38,709 --> 00:10:42,730
fix them and we can't just fix them on

00:10:40,269 --> 00:10:44,170
our own when we have hardware bugs it's

00:10:42,730 --> 00:10:47,560
very frustrating for a suffering person

00:10:44,170 --> 00:10:51,040
because this underlying piece that we

00:10:47,560 --> 00:10:53,079
thought was reliable isn't so it's a

00:10:51,040 --> 00:10:57,130
it's a different class of problems it's

00:10:53,079 --> 00:10:58,449
a different class of pain for us but

00:10:57,130 --> 00:11:02,410
fundamentally you're saying that much

00:10:58,449 --> 00:11:04,240
has changed it feels that that our the

00:11:02,410 --> 00:11:06,850
level of trust or distrust that we

00:11:04,240 --> 00:11:08,740
should have to compute based systems

00:11:06,850 --> 00:11:11,199
hasn't really changed you know and I

00:11:08,740 --> 00:11:12,880
don't think the whole secure ish is they

00:11:11,199 --> 00:11:15,579
will never go away

00:11:12,880 --> 00:11:17,380
as an industry I think we're getting

00:11:15,579 --> 00:11:20,220
better we're getting better both in

00:11:17,380 --> 00:11:22,720
suffer and in hardware but it's

00:11:20,220 --> 00:11:26,230
obviously an area where we need to just

00:11:22,720 --> 00:11:29,380
remain vigilant I want to switch gears a

00:11:26,230 --> 00:11:31,870
little bit and talk about developers as

00:11:29,380 --> 00:11:34,000
individuals not not so much about the

00:11:31,870 --> 00:11:36,339
projects but about the people behind the

00:11:34,000 --> 00:11:38,500
projects and one of the distinctions

00:11:36,339 --> 00:11:40,269
that I think I'd love to talk about a

00:11:38,500 --> 00:11:43,600
little bit it's the difference between

00:11:40,269 --> 00:11:45,970
the typical developer a let's call them

00:11:43,600 --> 00:11:48,670
a tech lead or a lead developer and then

00:11:45,970 --> 00:11:50,769
a maintainer can you talk a little bit

00:11:48,670 --> 00:11:56,019
about the skill sets and what is

00:11:50,769 --> 00:11:57,910
different between these roles so one of

00:11:56,019 --> 00:12:00,639
the big differences actually let's talk

00:11:57,910 --> 00:12:02,560
about what's common pretty much every

00:12:00,639 --> 00:12:05,139
single maintainer started out as a

00:12:02,560 --> 00:12:07,959
developer I mean that's the only way you

00:12:05,139 --> 00:12:10,810
can become a maintainer because the most

00:12:07,959 --> 00:12:16,420
important portion of being a maintainer

00:12:10,810 --> 00:12:19,569
is being trusted it's not a you need to

00:12:16,420 --> 00:12:21,819
be trusted by me so that I trust you

00:12:19,569 --> 00:12:24,010
enough that I can take code from you but

00:12:21,819 --> 00:12:26,439
you as a maintainer need to be trusted

00:12:24,010 --> 00:12:31,750
by all the people who are sending code

00:12:26,439 --> 00:12:34,300
to you as well and that trust is is

00:12:31,750 --> 00:12:36,790
needed that you have the technical

00:12:34,300 --> 00:12:39,639
understanding of the code to make the

00:12:36,790 --> 00:12:43,720
rate right decisions as a maintainer so

00:12:39,639 --> 00:12:45,510
we all started out as developers and

00:12:43,720 --> 00:12:48,070
the thing that then makes some people

00:12:45,510 --> 00:12:51,900
maintain errs once they've got it the

00:12:48,070 --> 00:12:54,520
trust is usually communication

00:12:51,900 --> 00:12:58,750
especially an open source but I think

00:12:54,520 --> 00:13:03,370
it's it's true pretty much everywhere a

00:12:58,750 --> 00:13:05,410
lot of what we do is communicating

00:13:03,370 --> 00:13:08,770
people always think that hey the big

00:13:05,410 --> 00:13:11,530
part is is the writing code the writing

00:13:08,770 --> 00:13:14,590
code part is often the smallest part you

00:13:11,530 --> 00:13:17,050
need to communicate to your maintainer

00:13:14,590 --> 00:13:21,790
why you've wrote the code and that's

00:13:17,050 --> 00:13:24,880
often a problem you need to be there

00:13:21,790 --> 00:13:27,760
when bugs happen and they will happen

00:13:24,880 --> 00:13:31,270
and you will be need to be open to

00:13:27,760 --> 00:13:36,760
communication both from your maintainer

00:13:31,270 --> 00:13:39,250
but also from your developers that's

00:13:36,760 --> 00:13:40,930
obviously one area where we've had one

00:13:39,250 --> 00:13:43,480
of the issues we've had in open source

00:13:40,930 --> 00:13:45,910
is because we're so spread out sometimes

00:13:43,480 --> 00:13:48,880
the communication barriers are simply

00:13:45,910 --> 00:13:51,610
cultural language barriers something I'm

00:13:48,880 --> 00:13:53,080
sure people here in China are very aware

00:13:51,610 --> 00:13:55,300
of that

00:13:53,080 --> 00:13:57,610
sometimes you need people who do nothing

00:13:55,300 --> 00:14:01,840
but communicate because they end up

00:13:57,610 --> 00:14:04,450
being translators between the developer

00:14:01,840 --> 00:14:07,810
and the maintainer or between two

00:14:04,450 --> 00:14:11,470
different developers but it turns out we

00:14:07,810 --> 00:14:13,960
don't have enough maintainer zhh a lot

00:14:11,470 --> 00:14:16,330
of people think maintainer ship is the

00:14:13,960 --> 00:14:18,610
glorious thing where you don't need to

00:14:16,330 --> 00:14:21,090
do the low-level encoding anymore and

00:14:18,610 --> 00:14:24,460
you can just take code it turns out

00:14:21,090 --> 00:14:26,470
finding people who are technically able

00:14:24,460 --> 00:14:29,110
to understand the problems and are good

00:14:26,470 --> 00:14:32,020
communicators and are willing to be

00:14:29,110 --> 00:14:34,480
there every day pretty much so they're

00:14:32,020 --> 00:14:35,320
responsive to developers is really

00:14:34,480 --> 00:14:38,550
really hard

00:14:35,320 --> 00:14:41,920
so if you want to be a kernel maintainer

00:14:38,550 --> 00:14:44,350
trust me there are spots open it will

00:14:41,920 --> 00:14:47,290
take time to get there because you will

00:14:44,350 --> 00:14:50,800
need to get that trust and get that

00:14:47,290 --> 00:14:53,080
network of people who who you know and

00:14:50,800 --> 00:14:54,209
who you can communicate with but we need

00:14:53,080 --> 00:14:57,899
maintain

00:14:54,209 --> 00:15:01,309
so it's it's a good job market to look

00:14:57,899 --> 00:15:04,410
into so you you focused on on

00:15:01,309 --> 00:15:08,069
communication and on on being available

00:15:04,410 --> 00:15:09,749
on being being there every day one angle

00:15:08,069 --> 00:15:11,549
that I always found interesting in

00:15:09,749 --> 00:15:13,799
maintainer z-- is the ability to deal

00:15:11,549 --> 00:15:15,869
with conflict because very often you

00:15:13,799 --> 00:15:17,939
will have different developers with the

00:15:15,869 --> 00:15:19,889
different ideas of what is the correct

00:15:17,939 --> 00:15:22,410
solution or you have competing

00:15:19,889 --> 00:15:23,970
commercial interests yeah that they push

00:15:22,410 --> 00:15:27,899
for a certain architecture or an

00:15:23,970 --> 00:15:30,029
alternative can you talk about that so I

00:15:27,899 --> 00:15:32,040
have to say personally I'm actually less

00:15:30,029 --> 00:15:34,980
worried about technical conflict than

00:15:32,040 --> 00:15:37,410
about non technical conflict so

00:15:34,980 --> 00:15:39,269
technical conflict usually when when you

00:15:37,410 --> 00:15:44,009
have two two competing approaches to

00:15:39,269 --> 00:15:46,889
solving a problem the good news is if it

00:15:44,009 --> 00:15:49,290
really is a technical conflict you can

00:15:46,889 --> 00:15:52,439
usually put it in two numbers you can

00:15:49,290 --> 00:15:56,970
say this solution is simpler and smaller

00:15:52,439 --> 00:16:01,739
or this solution is faster and I can do

00:15:56,970 --> 00:16:04,049
more with it and you can usually make a

00:16:01,739 --> 00:16:06,899
fairly informed decision on a technical

00:16:04,049 --> 00:16:09,299
content of conflict and more importantly

00:16:06,899 --> 00:16:11,850
even if you get it wrong which happens

00:16:09,299 --> 00:16:13,619
all the time even if you get it wrong if

00:16:11,850 --> 00:16:15,619
it was a technical decision you can say

00:16:13,619 --> 00:16:18,209
hey I made the wrong decision I'm

00:16:15,619 --> 00:16:20,069
perfectly happy saying that as a

00:16:18,209 --> 00:16:22,259
maintainer and saying this is not what

00:16:20,069 --> 00:16:24,179
we should have done and you undo the

00:16:22,259 --> 00:16:27,720
technical thing and you go to the other

00:16:24,179 --> 00:16:31,829
approach instead this is this is normal

00:16:27,720 --> 00:16:34,350
development there aren't a huge I mean

00:16:31,829 --> 00:16:36,989
it's it's a waste of time obviously but

00:16:34,350 --> 00:16:39,899
but it's not a huge problem the real

00:16:36,989 --> 00:16:44,100
conflict problems come in when it

00:16:39,899 --> 00:16:47,039
becomes personal or particularly when it

00:16:44,100 --> 00:16:49,730
comes becomes political inside companies

00:16:47,039 --> 00:16:53,399
I'm sure you're all very aware of this

00:16:49,730 --> 00:16:59,160
that when there are conflicts that arise

00:16:53,399 --> 00:17:00,989
from from non technical issues and my

00:16:59,160 --> 00:17:03,610
approach to that and I think this is

00:17:00,989 --> 00:17:07,089
where open-source really really shine

00:17:03,610 --> 00:17:11,410
is that we have been very good and we

00:17:07,089 --> 00:17:14,280
have been able to try to keep our

00:17:11,410 --> 00:17:17,939
conflict resolution to technical issues

00:17:14,280 --> 00:17:22,150
so when political issues come up I

00:17:17,939 --> 00:17:24,490
personally will not care I will say this

00:17:22,150 --> 00:17:28,390
is all I won't even respond to

00:17:24,490 --> 00:17:31,320
it I will not spend one second worrying

00:17:28,390 --> 00:17:34,059
about it and I will tell you you guys

00:17:31,320 --> 00:17:35,020
give me the technical reasons and I

00:17:34,059 --> 00:17:38,049
think this is something where

00:17:35,020 --> 00:17:41,140
open-source really can work in ways that

00:17:38,049 --> 00:17:44,460
often commercial suffer cannot because

00:17:41,140 --> 00:17:47,679
inside a company company politics are

00:17:44,460 --> 00:17:52,480
all-encompassing you cannot avoid the

00:17:47,679 --> 00:17:55,870
company or politics when you're in

00:17:52,480 --> 00:17:57,429
open-source you can you can say hey

00:17:55,870 --> 00:17:59,500
there are all these internal company

00:17:57,429 --> 00:18:01,480
politics but look at all the people

00:17:59,500 --> 00:18:04,720
outside this company that don't even

00:18:01,480 --> 00:18:07,120
understand our politics and and I think

00:18:04,720 --> 00:18:09,490
open-source tends to often successfully

00:18:07,120 --> 00:18:12,700
avoid politics for that reason so we

00:18:09,490 --> 00:18:14,650
talked about this this arc from being a

00:18:12,700 --> 00:18:16,140
good developed to becoming a good

00:18:14,650 --> 00:18:18,850
maintainer and what are the additional

00:18:16,140 --> 00:18:21,040
skills that you need but let me turn

00:18:18,850 --> 00:18:24,010
this around so do you think that every

00:18:21,040 --> 00:18:26,429
great maintainer is also a great

00:18:24,010 --> 00:18:29,049
developer is so is being a fantastic

00:18:26,429 --> 00:18:31,210
developer a requirement for being a

00:18:29,049 --> 00:18:33,910
great maintainer I don't necessarily

00:18:31,210 --> 00:18:38,950
think so I think it's hard though I mean

00:18:33,910 --> 00:18:41,049
if you're not a good enough me so I have

00:18:38,950 --> 00:18:43,450
a hard time judging I don't know that's

00:18:41,049 --> 00:18:46,540
the maintain is I work with I don't know

00:18:43,450 --> 00:18:49,809
how they feel about this but to me

00:18:46,540 --> 00:18:52,450
personally one of the things I do a lot

00:18:49,809 --> 00:18:57,840
is I have to make that judgment call of

00:18:52,450 --> 00:19:01,240
on looking at a full request and saying

00:18:57,840 --> 00:19:05,020
do I need to talk take this or do I need

00:19:01,240 --> 00:19:07,390
to tell my sub maintainer that hey this

00:19:05,020 --> 00:19:07,780
is not acceptable this is not how it

00:19:07,390 --> 00:19:12,669
works

00:19:07,780 --> 00:19:15,190
and it's not just about making the right

00:19:12,669 --> 00:19:17,200
decision and or at least trying to make

00:19:15,190 --> 00:19:19,990
right position it's also about how much

00:19:17,200 --> 00:19:22,960
time you spend making that position and

00:19:19,990 --> 00:19:27,100
one of the things that takes a long time

00:19:22,960 --> 00:19:30,520
for developers to go to maintain errs is

00:19:27,100 --> 00:19:33,790
in my opinion being able to look at code

00:19:30,520 --> 00:19:35,260
and just by by looking at the code

00:19:33,790 --> 00:19:38,760
saying okay this is the right approach

00:19:35,260 --> 00:19:41,380
or this is the wrong approach and I

00:19:38,760 --> 00:19:44,170
almost think you have to be a good

00:19:41,380 --> 00:19:46,810
developer to be able to make that

00:19:44,170 --> 00:19:49,510
judgment without spending hours and

00:19:46,810 --> 00:19:52,900
hours and hours agonizing over the code

00:19:49,510 --> 00:19:54,880
itself so I always look at this as as

00:19:52,900 --> 00:19:58,540
two related but slightly different

00:19:54,880 --> 00:20:01,300
skills one is the skill to look at code

00:19:58,540 --> 00:20:03,960
and evaluated and the other skill is the

00:20:01,300 --> 00:20:06,640
ability to actually write that code so

00:20:03,960 --> 00:20:08,590
as a maintainer I face this when people

00:20:06,640 --> 00:20:12,730
sent me code in Python

00:20:08,590 --> 00:20:16,150
I hate Python yet I I think I can read

00:20:12,730 --> 00:20:17,860
it well enough to judge it as a it isn't

00:20:16,150 --> 00:20:21,220
that part of what I maintain that does

00:20:17,860 --> 00:20:23,320
reading code instead of writing part of

00:20:21,220 --> 00:20:25,810
what you do it's not just reading code

00:20:23,320 --> 00:20:27,490
but you also read the explanations as as

00:20:25,810 --> 00:20:29,290
I mentioned one of the big issues was

00:20:27,490 --> 00:20:31,540
not just writing the code but also

00:20:29,290 --> 00:20:33,580
writing the explanations for why you

00:20:31,540 --> 00:20:35,770
wrote the code not what the code does

00:20:33,580 --> 00:20:38,590
you can see that from the code itself

00:20:35,770 --> 00:20:43,660
but explaining why it does something and

00:20:38,590 --> 00:20:47,290
maybe why it does it that way so it is a

00:20:43,660 --> 00:20:49,870
different skill set definitely one of

00:20:47,290 --> 00:20:53,070
the things I've talked to people about

00:20:49,870 --> 00:20:55,720
occasionally is what I look in

00:20:53,070 --> 00:20:58,060
developers and what I look in especially

00:20:55,720 --> 00:21:01,720
maintainer x' is something i call good

00:20:58,060 --> 00:21:06,190
taste and it is very hard to explain

00:21:01,720 --> 00:21:09,160
it's kind of like art that you can't

00:21:06,190 --> 00:21:10,930
really say what is good taste you can

00:21:09,160 --> 00:21:14,530
just say some people have it and some

00:21:10,930 --> 00:21:16,600
people don't and I'm not sure you can

00:21:14,530 --> 00:21:19,210
learn good taste I think you probably

00:21:16,600 --> 00:21:25,020
can but there are certainly people who

00:21:19,210 --> 00:21:25,020
are able to express the problem in

00:21:25,170 --> 00:21:30,300
more beautiful way and there are people

00:21:27,960 --> 00:21:34,500
who are able to make that distinction

00:21:30,300 --> 00:21:36,600
between this works but is really really

00:21:34,500 --> 00:21:39,810
ugly and it's clearly not the right way

00:21:36,600 --> 00:21:43,290
to do things and saying that code not

00:21:39,810 --> 00:21:47,910
only works but it is actually the right

00:21:43,290 --> 00:21:50,010
way and they're that ability to have

00:21:47,910 --> 00:21:53,600
good taste is fairly rare and it's

00:21:50,010 --> 00:21:55,980
probably one of the reasons we we are

00:21:53,600 --> 00:21:58,410
desperately looking for maintain errs

00:21:55,980 --> 00:22:01,260
but this is an interesting question that

00:21:58,410 --> 00:22:03,300
you raised here so how do you become a

00:22:01,260 --> 00:22:04,920
better developer there's obviously

00:22:03,300 --> 00:22:08,520
there's the book outliers that say

00:22:04,920 --> 00:22:10,800
10,000 hours of practice and practice is

00:22:08,520 --> 00:22:15,360
certainly useful but are the things

00:22:10,800 --> 00:22:18,060
people can do can focus on can learn can

00:22:15,360 --> 00:22:20,760
practice that will help them become

00:22:18,060 --> 00:22:23,400
better developers and maybe even become

00:22:20,760 --> 00:22:25,590
maintenance and better maintainer I

00:22:23,400 --> 00:22:28,920
think most of it is just being I mean

00:22:25,590 --> 00:22:31,260
not necessarily writing code that is a

00:22:28,920 --> 00:22:36,590
part of it obviously but a lot of it is

00:22:31,260 --> 00:22:38,820
about participation be involved don't

00:22:36,590 --> 00:22:41,130
and when it comes to a big project like

00:22:38,820 --> 00:22:42,780
the kernel but there's a lot of other

00:22:41,130 --> 00:22:44,550
open-source projects so don't get me

00:22:42,780 --> 00:22:46,710
wrong this is not just about the kernel

00:22:44,550 --> 00:22:48,780
but you don't have to try to be involved

00:22:46,710 --> 00:22:51,540
in some big portion of the kernel you

00:22:48,780 --> 00:22:54,750
don't have to go for the central part

00:22:51,540 --> 00:22:56,970
that experts have been working on since

00:22:54,750 --> 00:22:59,220
the very beginning of the project be

00:22:56,970 --> 00:23:01,530
involved find some small detail

00:22:59,220 --> 00:23:03,960
something that you care about find

00:23:01,530 --> 00:23:06,720
something that people are discussing

00:23:03,960 --> 00:23:08,640
maybe people are not discussing the code

00:23:06,720 --> 00:23:11,640
itself but they're discussing the

00:23:08,640 --> 00:23:16,980
problems in that area and then go and be

00:23:11,640 --> 00:23:19,410
involved on the mailing list son there

00:23:16,980 --> 00:23:22,140
are IRC channels I don't know what I

00:23:19,410 --> 00:23:25,110
assume in China we're looking at a

00:23:22,140 --> 00:23:28,470
WeChat or something like that and just

00:23:25,110 --> 00:23:30,330
get involved look at the code start

00:23:28,470 --> 00:23:33,120
making patches and realize it's going to

00:23:30,330 --> 00:23:34,300
take a while before you get to the point

00:23:33,120 --> 00:23:37,180
where you're an expert

00:23:34,300 --> 00:23:41,080
but it's okay to be an expert on a small

00:23:37,180 --> 00:23:43,390
part and then you tend to expand after

00:23:41,080 --> 00:23:46,210
that don't try to be an expert on the

00:23:43,390 --> 00:23:47,560
whole project that is not that is not

00:23:46,210 --> 00:23:49,390
how the world works

00:23:47,560 --> 00:23:52,090
but I think that's a very important

00:23:49,390 --> 00:23:54,460
point that you're pointing out it starts

00:23:52,090 --> 00:23:57,760
with actually getting involved and and

00:23:54,460 --> 00:24:00,700
it's okay to be focused but then bring

00:23:57,760 --> 00:24:02,710
the patience bring the patience to say

00:24:00,700 --> 00:24:05,050
hey my first attempt maybe wasn't good

00:24:02,710 --> 00:24:07,090
enough let's do this again let's come

00:24:05,050 --> 00:24:09,190
back and that's learn from it and I

00:24:07,090 --> 00:24:11,440
think it's this feedback cycle that it's

00:24:09,190 --> 00:24:15,960
really really important part of it is

00:24:11,440 --> 00:24:18,070
also it's not just you as a developer

00:24:15,960 --> 00:24:20,230
learning how something works and

00:24:18,070 --> 00:24:22,390
learning how to make patches you have to

00:24:20,230 --> 00:24:25,530
realize it's all the people around you

00:24:22,390 --> 00:24:30,250
that see you being part of the community

00:24:25,530 --> 00:24:32,890
so when you're a developer as a

00:24:30,250 --> 00:24:34,990
maintainer the people who are taking

00:24:32,890 --> 00:24:38,290
patches from you the first time they see

00:24:34,990 --> 00:24:41,280
a patch they have to be very very

00:24:38,290 --> 00:24:44,230
careful because they don't know you they

00:24:41,280 --> 00:24:47,980
they have to assume that you are not

00:24:44,230 --> 00:24:50,320
very competent and that means that they

00:24:47,980 --> 00:24:52,750
have to look at the patch very carefully

00:24:50,320 --> 00:24:55,920
so it really helps if the patch is small

00:24:52,750 --> 00:25:01,240
simple and obviously fixes a problem

00:24:55,920 --> 00:25:04,330
after you sent a maintainer 10 20 50

00:25:01,240 --> 00:25:06,670
patches what happens is the maintainer

00:25:04,330 --> 00:25:08,980
stops looking at the patch as carefully

00:25:06,670 --> 00:25:10,990
the maintainer knows you the maintainer

00:25:08,980 --> 00:25:13,720
has seen you act the maintainer has seen

00:25:10,990 --> 00:25:15,550
20 patches from you that are good the

00:25:13,720 --> 00:25:19,800
maintainer knows that you're doing good

00:25:15,550 --> 00:25:22,090
work now the maintainer trusts you and

00:25:19,800 --> 00:25:24,580
that's how you eventually become a

00:25:22,090 --> 00:25:26,650
maintainer yourself is because people

00:25:24,580 --> 00:25:30,460
stop looking at your code entirely and

00:25:26,650 --> 00:25:33,880
say hey I trust this person so much that

00:25:30,460 --> 00:25:36,160
when he sends me something I will read

00:25:33,880 --> 00:25:38,830
his description of what he sends me and

00:25:36,160 --> 00:25:43,090
I will integrate it that is how I work

00:25:38,830 --> 00:25:46,470
with the 100 plus sub maintainer saw in

00:25:43,090 --> 00:25:49,049
the kernel is that most of the time

00:25:46,470 --> 00:25:51,720
I don't need to look at the code and

00:25:49,049 --> 00:25:53,520
there is a graduation there are some

00:25:51,720 --> 00:25:55,710
maintained errs that I never look at the

00:25:53,520 --> 00:25:59,100
code for and there are slumping dinners

00:25:55,710 --> 00:26:02,190
that I tend to look much more closely at

00:25:59,100 --> 00:26:04,350
what they're sending me some of that is

00:26:02,190 --> 00:26:07,980
just I've worked with some people so

00:26:04,350 --> 00:26:11,159
long that I I say they own that

00:26:07,980 --> 00:26:13,770
subsystem if they make a choice Who am I

00:26:11,159 --> 00:26:17,190
to argue and other people I've had more

00:26:13,770 --> 00:26:20,940
problems with so this is a growth cycle

00:26:17,190 --> 00:26:24,090
at every level even as a developer when

00:26:20,940 --> 00:26:27,120
you learn to be a developer part of it

00:26:24,090 --> 00:26:29,520
is not just you it's also how people see

00:26:27,120 --> 00:26:32,130
you I think it's interesting this

00:26:29,520 --> 00:26:34,440
network effect this on the one hand I

00:26:32,130 --> 00:26:35,940
tried to develop I try to become better

00:26:34,440 --> 00:26:37,620
but then there are all these people

00:26:35,940 --> 00:26:40,130
around me who are helping me who are

00:26:37,620 --> 00:26:42,659
giving me feedback who are sending me

00:26:40,130 --> 00:26:45,809
ideas how to make my code better or how

00:26:42,659 --> 00:26:47,580
to describe the code better and I want

00:26:45,809 --> 00:26:50,280
to do this in a very small way here on

00:26:47,580 --> 00:26:52,700
stage for a moment and you you talked a

00:26:50,280 --> 00:26:56,100
little bit about this a moment ago the

00:26:52,700 --> 00:26:59,789
question what makes a good commit is

00:26:56,100 --> 00:27:02,039
something that I run into on pretty much

00:26:59,789 --> 00:27:04,710
every open-source project I'm engaged

00:27:02,039 --> 00:27:07,080
with but even inside of my company when

00:27:04,710 --> 00:27:09,870
talking about the developers writing the

00:27:07,080 --> 00:27:12,929
proprietary code what is it that makes a

00:27:09,870 --> 00:27:14,640
commit good that makes it something that

00:27:12,929 --> 00:27:20,640
the maintainer looks at and says oh okay

00:27:14,640 --> 00:27:24,780
yeah I like this to me what really makes

00:27:20,640 --> 00:27:27,179
a difference is if I can see a theme to

00:27:24,780 --> 00:27:29,340
the committee I see that a the

00:27:27,179 --> 00:27:32,010
explanation is really important I don't

00:27:29,340 --> 00:27:34,020
know how many you have been involved in

00:27:32,010 --> 00:27:35,400
kernel development and how many of you

00:27:34,020 --> 00:27:39,120
have been involved in some other

00:27:35,400 --> 00:27:43,350
projects for the kernel we have very

00:27:39,120 --> 00:27:45,809
very high standards for not just the

00:27:43,350 --> 00:27:47,990
code but the explanation the commit

00:27:45,809 --> 00:27:52,950
message that explains what the code does

00:27:47,990 --> 00:27:55,890
a lot of projects think a one-liner that

00:27:52,950 --> 00:27:58,669
says this is what it does is fine

00:27:55,890 --> 00:28:02,059
we are not there we we want

00:27:58,669 --> 00:28:04,340
Nations but you want the explanations to

00:28:02,059 --> 00:28:07,970
make sense and then when you start

00:28:04,340 --> 00:28:11,659
looking at the patch you should not be

00:28:07,970 --> 00:28:14,720
surprised so lack of surprise is

00:28:11,659 --> 00:28:19,279
probably the best single sign of a good

00:28:14,720 --> 00:28:20,779
commit if if if the explanation says

00:28:19,279 --> 00:28:24,559
something and then when you read the

00:28:20,779 --> 00:28:28,600
code you go what that's that's usually

00:28:24,559 --> 00:28:31,309
the worst sign there can be but then

00:28:28,600 --> 00:28:33,879
sometimes there are good commits that

00:28:31,309 --> 00:28:36,679
can be one-liners they can I mean a

00:28:33,879 --> 00:28:38,960
one-line change is not necessarily a

00:28:36,679 --> 00:28:41,989
small change a one-line change can be

00:28:38,960 --> 00:28:45,850
very important if it's in a very subtle

00:28:41,989 --> 00:28:48,980
piece of code and you just noticed a

00:28:45,850 --> 00:28:51,470
really hard bug that has been around for

00:28:48,980 --> 00:28:53,539
years and it was something really subtle

00:28:51,470 --> 00:28:56,509
like the memory ordering of the CPU

00:28:53,539 --> 00:29:02,179
required you to add one line that can be

00:28:56,509 --> 00:29:03,950
a very important fix but a one line

00:29:02,179 --> 00:29:07,460
change can be really important it can be

00:29:03,950 --> 00:29:11,480
really boring to but a hundred thousand

00:29:07,460 --> 00:29:13,179
line change can also be both in it can

00:29:11,480 --> 00:29:15,559
be something really important that adds

00:29:13,179 --> 00:29:17,769
fundamental support for a really big

00:29:15,559 --> 00:29:20,480
feature or it can be something really

00:29:17,769 --> 00:29:22,249
pointless that just adds a lot of lines

00:29:20,480 --> 00:29:24,470
that describe a piece of hardware and

00:29:22,249 --> 00:29:27,590
the patch itself does not do very much

00:29:24,470 --> 00:29:32,119
so you can't really judge a commit by

00:29:27,590 --> 00:29:35,330
its size you have to judge it by by the

00:29:32,119 --> 00:29:38,419
its downstream effects of that remit and

00:29:35,330 --> 00:29:40,399
and what it really changes but the one

00:29:38,419 --> 00:29:42,379
thing that you said about lack of

00:29:40,399 --> 00:29:45,259
surprise is something that I think is

00:29:42,379 --> 00:29:48,320
incredibly important I have seen commits

00:29:45,259 --> 00:29:51,019
from you actually and then have a 45

00:29:48,320 --> 00:29:54,499
line commit message and then change a

00:29:51,019 --> 00:29:56,389
single line of code and and it often

00:29:54,499 --> 00:29:58,369
seems like wow why does he write so much

00:29:56,389 --> 00:30:01,900
about such a trivial change and then you

00:29:58,369 --> 00:30:04,390
read the commit message and you see oh

00:30:01,900 --> 00:30:07,030
this is what this does and to me that

00:30:04,390 --> 00:30:09,340
really is this moment where once you're

00:30:07,030 --> 00:30:12,760
done reading the commit message the

00:30:09,340 --> 00:30:15,400
patch below seems totally obvious that

00:30:12,760 --> 00:30:18,010
to me is really the the way I look at a

00:30:15,400 --> 00:30:19,930
good commit so don't get me wrong a lot

00:30:18,010 --> 00:30:22,420
of the times the good commits really are

00:30:19,930 --> 00:30:24,820
the boring ones the ones that are not

00:30:22,420 --> 00:30:26,590
one-liners but they're also not a

00:30:24,820 --> 00:30:30,730
hundred thousand lines they're just

00:30:26,590 --> 00:30:33,400
doing vigor everyday work they fix a bug

00:30:30,730 --> 00:30:34,060
that in retrospect the bug was really

00:30:33,400 --> 00:30:35,710
obvious

00:30:34,060 --> 00:30:37,960
so maybe the commit message is only

00:30:35,710 --> 00:30:41,890
three lines and saying hey we had this

00:30:37,960 --> 00:30:44,560
bug because we were stupid and we hadn't

00:30:41,890 --> 00:30:47,890
noticed this one simple special case and

00:30:44,560 --> 00:30:50,350
here's a ten or a hundred line fix for

00:30:47,890 --> 00:30:52,600
it and you you don't necessarily need to

00:30:50,350 --> 00:30:55,900
have a lot of commit message for that so

00:30:52,600 --> 00:30:59,950
and that's actually the bulk that should

00:30:55,900 --> 00:31:04,600
be the daily bread and butter of your

00:30:59,950 --> 00:31:07,450
work there most of your commits should

00:31:04,600 --> 00:31:09,670
not be the exciting kind if you're if

00:31:07,450 --> 00:31:13,690
all your commits are exciting there's

00:31:09,670 --> 00:31:15,790
something badly wrong we said earlier

00:31:13,690 --> 00:31:17,020
boring is good boring is good and now

00:31:15,790 --> 00:31:19,810
let's take this one

00:31:17,020 --> 00:31:22,150
one abstraction level up we talked

00:31:19,810 --> 00:31:23,890
earlier about the interaction with the

00:31:22,150 --> 00:31:26,650
maintainer and that the maintainer will

00:31:23,890 --> 00:31:28,510
push back and and we'll maybe disagree

00:31:26,650 --> 00:31:31,650
with you and one of the questions I

00:31:28,510 --> 00:31:35,200
always ask myself so how long should you

00:31:31,650 --> 00:31:38,020
do this this loop off of listening to

00:31:35,200 --> 00:31:40,210
the maintainer and doing a new version

00:31:38,020 --> 00:31:42,100
of your commit and go back and forth and

00:31:40,210 --> 00:31:43,660
back and forth what's the point where

00:31:42,100 --> 00:31:45,910
you should just give up and say this

00:31:43,660 --> 00:31:48,100
isn't this isn't worth it I should fork

00:31:45,910 --> 00:31:52,840
the project or I should give up on my

00:31:48,100 --> 00:31:54,780
future I don't know it all depends on

00:31:52,840 --> 00:31:57,100
what you're doing sometimes and and

00:31:54,780 --> 00:31:58,930
don't get me wrong

00:31:57,100 --> 00:32:01,300
maintainer zhh have been around for a

00:31:58,930 --> 00:32:04,930
long time but sometimes the maintainer

00:32:01,300 --> 00:32:07,780
is wrong too so sometimes what needs to

00:32:04,930 --> 00:32:10,960
be done is say this maintainer is not

00:32:07,780 --> 00:32:14,119
agreeing with me maybe you need to talk

00:32:10,960 --> 00:32:17,599
to another maintainer sometimes

00:32:14,119 --> 00:32:21,409
very really hopefully you may need to

00:32:17,599 --> 00:32:23,959
escalate it to me I try to avoid that

00:32:21,409 --> 00:32:25,729
because I hate bypassing maintain errs I

00:32:23,959 --> 00:32:28,459
party because it's more work for me

00:32:25,729 --> 00:32:30,379
party because it just makes for a mess

00:32:28,459 --> 00:32:31,989
when the maintainer is doing his own

00:32:30,379 --> 00:32:35,809
thing

00:32:31,989 --> 00:32:37,879
but the fact is sometimes you also need

00:32:35,809 --> 00:32:40,879
to accept that maybe my idea wasn't good

00:32:37,879 --> 00:32:42,949
maybe my idea was for something that for

00:32:40,879 --> 00:32:45,709
a problem that I have or that my company

00:32:42,949 --> 00:32:48,849
has but nobody else has and nobody else

00:32:45,709 --> 00:32:51,529
cares about and and then at that point

00:32:48,849 --> 00:32:56,029
one of the advantages of open source is

00:32:51,529 --> 00:32:57,949
saying hey this is an issue that only

00:32:56,029 --> 00:33:01,609
hits us because we're doing something

00:32:57,949 --> 00:33:05,209
really special and maybe we need to just

00:33:01,609 --> 00:33:07,399
maintain this set of patches and it's

00:33:05,209 --> 00:33:07,879
still open source and everybody else can

00:33:07,399 --> 00:33:10,099
use it

00:33:07,879 --> 00:33:11,779
but maybe nobody else is interested that

00:33:10,099 --> 00:33:14,359
happens and I think it's one of the

00:33:11,779 --> 00:33:16,609
advantages of open sources is exactly

00:33:14,359 --> 00:33:18,529
the fact that not everybody is the same

00:33:16,609 --> 00:33:23,359
not everybody cares about the same

00:33:18,529 --> 00:33:27,139
things sometimes you need to just go off

00:33:23,359 --> 00:33:29,839
on your own and say hey I care about

00:33:27,139 --> 00:33:33,739
this this feature nobody else seems to

00:33:29,839 --> 00:33:35,269
care and five years later maybe you're

00:33:33,739 --> 00:33:38,299
still the only one who cares about that

00:33:35,269 --> 00:33:40,759
feature but the other possibility is

00:33:38,299 --> 00:33:42,739
also that five years later you are the

00:33:40,759 --> 00:33:43,609
industry leader because everybody else

00:33:42,739 --> 00:33:46,399
is wrong

00:33:43,609 --> 00:33:48,529
and an open source kind of allows you to

00:33:46,399 --> 00:33:50,389
make that choice I mean you and I ran

00:33:48,529 --> 00:33:53,809
into this in in one of the other

00:33:50,389 --> 00:33:55,609
projects that you work on where one of

00:33:53,809 --> 00:33:58,609
the libraries that we depend on would

00:33:55,609 --> 00:34:00,649
absolutely not take a set of changes

00:33:58,609 --> 00:34:02,959
that we had developed and so we've been

00:34:00,649 --> 00:34:05,029
maintaining a separate Fork of that

00:34:02,959 --> 00:34:07,969
project for I don't know three years I

00:34:05,029 --> 00:34:09,940
mean this is how a lot of open source

00:34:07,969 --> 00:34:12,259
development gets done and this is

00:34:09,940 --> 00:34:14,929
literally how kernel development gets

00:34:12,259 --> 00:34:19,549
done and and one of the design decisions

00:34:14,929 --> 00:34:22,639
I had when I started get was that one of

00:34:19,549 --> 00:34:25,020
the big designs designs are behind git

00:34:22,639 --> 00:34:30,240
is to make forking easy

00:34:25,020 --> 00:34:33,240
you want to allow people to just take

00:34:30,240 --> 00:34:37,050
your project and make make it their own

00:34:33,240 --> 00:34:40,380
and make their own version and allow

00:34:37,050 --> 00:34:43,169
them that freedom of showing the world

00:34:40,380 --> 00:34:44,790
that they actually have the right idea

00:34:43,169 --> 00:34:48,090
and they're doing a great job of

00:34:44,790 --> 00:34:51,659
maintaining it the other part that I

00:34:48,090 --> 00:34:54,929
think is very important is make 40 easy

00:34:51,659 --> 00:34:57,540
but make it really easy to also then on

00:34:54,929 --> 00:35:01,380
the other hand say hey you were right I

00:34:57,540 --> 00:35:03,660
was wrong you did a great job I did not

00:35:01,380 --> 00:35:06,870
believe you but you did such a great job

00:35:03,660 --> 00:35:08,580
that now I'm going to to say hey I was

00:35:06,870 --> 00:35:11,670
wrong I'll take your code after all

00:35:08,580 --> 00:35:14,940
because I didn't make the right decision

00:35:11,670 --> 00:35:16,620
in the first place and I think actually

00:35:14,940 --> 00:35:19,530
that's something that we in the kernel

00:35:16,620 --> 00:35:23,100
community had been fairly good about we

00:35:19,530 --> 00:35:25,950
have avoided these so-called religious

00:35:23,100 --> 00:35:32,690
wars that we have seen in some other

00:35:25,950 --> 00:35:37,260
projects where we've avoided getting too

00:35:32,690 --> 00:35:39,240
personally antagonistic against forks so

00:35:37,260 --> 00:35:42,900
I for example think that Forks are a

00:35:39,240 --> 00:35:44,700
good thing and if company ends up going

00:35:42,900 --> 00:35:46,830
their own way and I'm taking their

00:35:44,700 --> 00:35:50,520
kernel in the direction that I think

00:35:46,830 --> 00:35:54,540
doesn't necessarily make sense for the

00:35:50,520 --> 00:35:57,870
mainline kernel I don't see that company

00:35:54,540 --> 00:36:01,470
as being competition I see that company

00:35:57,870 --> 00:36:04,290
as just trying to do what's right for

00:36:01,470 --> 00:36:07,140
them and that means that if you're not

00:36:04,290 --> 00:36:09,840
antagonistic and you don't start this

00:36:07,140 --> 00:36:12,690
whole religious flame war over this is

00:36:09,840 --> 00:36:14,700
the right way when it turns out that

00:36:12,690 --> 00:36:16,980
somebody else was right it wasn't the

00:36:14,700 --> 00:36:19,740
right and did the right thing they don't

00:36:16,980 --> 00:36:21,930
hate you that they don't they don't mind

00:36:19,740 --> 00:36:23,910
you they actually feel kind of smug and

00:36:21,930 --> 00:36:26,790
say hey look at me

00:36:23,910 --> 00:36:29,880
I was right and when you pull from them

00:36:26,790 --> 00:36:31,740
and say hey you were right everybody is

00:36:29,880 --> 00:36:34,140
actually happy we improved the system

00:36:31,740 --> 00:36:35,000
this is how a lot of development in the

00:36:34,140 --> 00:36:37,920
kernel gets

00:36:35,000 --> 00:36:40,110
but but there is a dark side to that so

00:36:37,920 --> 00:36:42,720
we have seen this in embedded Linux

00:36:40,110 --> 00:36:45,840
especially in phones in a few other

00:36:42,720 --> 00:36:49,860
areas where it has become so easy to for

00:36:45,840 --> 00:36:52,080
clinics that people create support

00:36:49,860 --> 00:36:54,510
packages for specific hardware device

00:36:52,080 --> 00:36:57,870
for a specific board for a specific

00:36:54,510 --> 00:36:59,880
phone and and those never come back to

00:36:57,870 --> 00:37:02,640
the chronal and the users are then stuck

00:36:59,880 --> 00:37:05,910
on an old version of the kernel what are

00:37:02,640 --> 00:37:09,420
your thoughts on that I'm very unhappy

00:37:05,910 --> 00:37:12,390
about it at the same time I it's I don't

00:37:09,420 --> 00:37:14,550
feel like it's our process problem one

00:37:12,390 --> 00:37:17,010
of the issues is in the embedded world

00:37:14,550 --> 00:37:18,900
that is how people are so used to

00:37:17,010 --> 00:37:22,800
working I don't know how many of you are

00:37:18,900 --> 00:37:25,080
embedded people but that's how you work

00:37:22,800 --> 00:37:29,460
on a hardware level - you make basically

00:37:25,080 --> 00:37:32,730
a one-time board knowing that five years

00:37:29,460 --> 00:37:36,180
from now that board will be throw away

00:37:32,730 --> 00:37:39,150
because Hardware will have changed so

00:37:36,180 --> 00:37:40,020
much that what you make today will not

00:37:39,150 --> 00:37:42,240
be relevant

00:37:40,020 --> 00:37:45,390
I mean you will learn from your mistakes

00:37:42,240 --> 00:37:48,050
but at the same time you make a board

00:37:45,390 --> 00:37:50,550
once and you don't generally see it as

00:37:48,050 --> 00:37:53,460
something that you continue to develop

00:37:50,550 --> 00:37:56,460
and that mentality then has clearly

00:37:53,460 --> 00:37:59,910
extended into the software space - where

00:37:56,460 --> 00:38:02,310
people make one product and the hardware

00:37:59,910 --> 00:38:05,370
is seen as a hey this is our hardware

00:38:02,310 --> 00:38:08,030
for this year or for the next five years

00:38:05,370 --> 00:38:11,280
and the software is treated the same way

00:38:08,030 --> 00:38:13,980
so you take one kernel version and one

00:38:11,280 --> 00:38:17,250
version of your UI and whatever else you

00:38:13,980 --> 00:38:20,820
used to to make a product and you don't

00:38:17,250 --> 00:38:22,800
try to see it as continual development

00:38:20,820 --> 00:38:25,650
on the software side but it's a

00:38:22,800 --> 00:38:28,260
throwaway thing that you do once and but

00:38:25,650 --> 00:38:30,930
but that has potentially very bad side

00:38:28,260 --> 00:38:33,510
effects when it comes to security bugs

00:38:30,930 --> 00:38:35,190
and the inability to update to a newer

00:38:33,510 --> 00:38:37,140
version of the kernel right

00:38:35,190 --> 00:38:40,170
it's a horrible model I'm not saying

00:38:37,140 --> 00:38:42,510
this is good I'm saying this is what a

00:38:40,170 --> 00:38:44,730
lot of companies are doing

00:38:42,510 --> 00:38:47,160
and it is a problem for us because it

00:38:44,730 --> 00:38:49,680
does mean that they don't actively try

00:38:47,160 --> 00:38:51,869
to feed it back to us because in order

00:38:49,680 --> 00:38:53,910
to then feed their changes back to

00:38:51,869 --> 00:38:56,520
mainline kernel so that they get

00:38:53,910 --> 00:38:58,349
maintained long term you have to do a

00:38:56,520 --> 00:39:01,140
lot of work you have to do all that

00:38:58,349 --> 00:39:03,270
communication work you have to send all

00:39:01,140 --> 00:39:05,280
these commits that have good

00:39:03,270 --> 00:39:07,500
explanations for why you're doing

00:39:05,280 --> 00:39:10,020
something and they need to make sense so

00:39:07,500 --> 00:39:12,960
that we don't go wah

00:39:10,020 --> 00:39:15,240
so there's a there's a there is

00:39:12,960 --> 00:39:19,230
definitely work involved in upstream in

00:39:15,240 --> 00:39:22,109
code but once you are able to get your

00:39:19,230 --> 00:39:24,930
code into the upstream kernel it means

00:39:22,109 --> 00:39:28,410
that five years later when you make your

00:39:24,930 --> 00:39:31,410
new and improved product whatever it is

00:39:28,410 --> 00:39:33,180
hardware software anything we will have

00:39:31,410 --> 00:39:34,950
maintained it we will have improved your

00:39:33,180 --> 00:39:36,720
code other people will have improved

00:39:34,950 --> 00:39:39,660
your code in the meantime and it will

00:39:36,720 --> 00:39:41,790
work better and you will not have the

00:39:39,660 --> 00:39:45,780
problems you had the first time around

00:39:41,790 --> 00:39:47,579
so that is the right model to do it is

00:39:45,780 --> 00:39:50,670
clearly not the model that everybody is

00:39:47,579 --> 00:39:52,500
taking I mean the lens community

00:39:50,670 --> 00:39:54,630
certainly tries to make this step easy

00:39:52,500 --> 00:39:56,400
Gregg who I think will speak on

00:39:54,630 --> 00:39:58,619
Wednesday is somewhere here in the

00:39:56,400 --> 00:40:00,540
audience Gregg is doing a fantastic job

00:39:58,619 --> 00:40:03,210
on working with hardware companies and

00:40:00,540 --> 00:40:05,220
taking code even if it's not perfect and

00:40:03,210 --> 00:40:08,309
getting it into the kernel putting it in

00:40:05,220 --> 00:40:11,069
the staging area and and helped make it

00:40:08,309 --> 00:40:13,049
easier and we've seen a harder vendors

00:40:11,069 --> 00:40:16,260
who have done an exceptional job at that

00:40:13,049 --> 00:40:18,960
if you look at Intel had always always

00:40:16,260 --> 00:40:20,730
been the the software support for

00:40:18,960 --> 00:40:23,309
hardware was available before the

00:40:20,730 --> 00:40:25,829
hardware ever became came into users

00:40:23,309 --> 00:40:27,839
hands to the point that at times drivers

00:40:25,829 --> 00:40:30,960
had to be removed because products were

00:40:27,839 --> 00:40:32,640
cancelled I think there is a lot of role

00:40:30,960 --> 00:40:35,369
modelling a lot of opportunity out there

00:40:32,640 --> 00:40:38,010
to do this right I I also think that

00:40:35,369 --> 00:40:41,069
things are getting better I think part

00:40:38,010 --> 00:40:43,619
of it is people are after three or four

00:40:41,069 --> 00:40:45,569
iterations after you've done three or

00:40:43,619 --> 00:40:47,880
four different versions of the same

00:40:45,569 --> 00:40:49,740
thing you kind of start to see the

00:40:47,880 --> 00:40:52,040
problems inside the company and the

00:40:49,740 --> 00:40:54,800
companies themselves are starting to say

00:40:52,040 --> 00:40:57,500
we've done this before it didn't work so

00:40:54,800 --> 00:40:59,720
well last time let's try to upstream at

00:40:57,500 --> 00:41:02,859
least the very poor stuff we care about

00:40:59,720 --> 00:41:05,570
so that we don't have to do this again I

00:41:02,859 --> 00:41:08,270
also think that especially in the

00:41:05,570 --> 00:41:12,890
embedded world what is helping us is

00:41:08,270 --> 00:41:16,040
that the hardware tends to also become

00:41:12,890 --> 00:41:19,880
slightly more standardized you you find

00:41:16,040 --> 00:41:22,280
that people are standardizing around the

00:41:19,880 --> 00:41:25,369
more common SLC's that are cheaper and

00:41:22,280 --> 00:41:28,880
easier to get so there's a push from

00:41:25,369 --> 00:41:32,060
that end to also not be quite as wild

00:41:28,880 --> 00:41:35,230
and crazy as people where five or ten

00:41:32,060 --> 00:41:38,510
years ago so Jim showed the picture that

00:41:35,230 --> 00:41:41,330
indicated the possible new logo for for

00:41:38,510 --> 00:41:44,330
Linux I'm very excited I love and us so

00:41:41,330 --> 00:41:46,250
if you were to stop doing Linux what

00:41:44,330 --> 00:41:50,420
would you do you would you be a panda

00:41:46,250 --> 00:41:51,890
keeper or a dive master or I I don't

00:41:50,420 --> 00:41:53,750
think I'd be a panda keeper because

00:41:51,890 --> 00:41:55,910
there are very few pandas outside that

00:41:53,750 --> 00:41:57,680
that's like China and I can't speak the

00:41:55,910 --> 00:42:00,290
language although maybe that panda

00:41:57,680 --> 00:42:06,560
doesn't care and I don't think I could

00:42:00,290 --> 00:42:08,869
afford to be a dive master I've always I

00:42:06,560 --> 00:42:11,300
mean I don't think I have no idea what

00:42:08,869 --> 00:42:15,109
I'd do without Linux I had big plans

00:42:11,300 --> 00:42:18,560
when I was young to be a professor at a

00:42:15,109 --> 00:42:21,080
university and it turns out I don't like

00:42:18,560 --> 00:42:24,080
writing documentation and I really hate

00:42:21,080 --> 00:42:26,000
write two papers if you can't write or I

00:42:24,080 --> 00:42:29,330
don't like read in the papers you can't

00:42:26,000 --> 00:42:32,210
stay at university so I think I just

00:42:29,330 --> 00:42:35,060
need to find another project to

00:42:32,210 --> 00:42:37,100
contribute so I look forward to next

00:42:35,060 --> 00:42:40,750
year when you will tell us about your

00:42:37,100 --> 00:42:40,750

YouTube URL: https://www.youtube.com/watch?v=PVDsnK_8QdQ


