Title: Keynote: The Software Defined World - Imad Sousou, Corporate VP & GM, Intel
Publication date: 2018-07-20
Playlist: LinuxCon + ContainerCon + CloudOpen China 2018
Description: 
	Keynote: The Software Defined World - Imad Sousou, Corporate Vice President and General Manager, Open Source Technology Center, Intel

As we move toward a world where everything is smart and connected, our experiences are becoming increasingly digitized, resulting in a massive flood of data. We are using the power of that data to transform some of the most exciting areas of human activity. Container technology and open source hypervisors continue to be the driving forces behind the next wave of the technology revolution. Containers are set to usher in the third wave of cloud computing enabling micro-services, whereas, open source hypervisors are optimized to streamline embedded development. Imad Sousou, corporate vice president and general manager of the Open Source Technology Center for Intel Corporation, highlights how Intel is uniquely positioned to drive the increasingly smart, connected world.
Captions: 
	00:00:03,220 --> 00:00:09,370
all right I don't even need my notes to

00:00:05,620 --> 00:00:12,100
introduce our next speaker you know one

00:00:09,370 --> 00:00:14,860
of the things that makes for a good open

00:00:12,100 --> 00:00:18,189
source project is good code but what

00:00:14,860 --> 00:00:22,300
also makes for the success that we see

00:00:18,189 --> 00:00:25,089
in open source is good people and you

00:00:22,300 --> 00:00:28,119
know when I talked about sort of good

00:00:25,089 --> 00:00:31,599
projects becoming good products creating

00:00:28,119 --> 00:00:33,190
value you know I think leanest or vaults

00:00:31,599 --> 00:00:35,890
is a good example of a great leader in

00:00:33,190 --> 00:00:39,040
open-source and our next speaker Ahmad

00:00:35,890 --> 00:00:42,160
Susu is a great example of an

00:00:39,040 --> 00:00:44,770
open-source leader in business Ahmad has

00:00:42,160 --> 00:00:48,100
been at Intel Corporation working on

00:00:44,770 --> 00:00:51,010
open source since 2003 he was one of the

00:00:48,100 --> 00:00:53,770
first business leaders to recognize the

00:00:51,010 --> 00:00:56,860
power of open source and used it to

00:00:53,770 --> 00:00:59,110
create new innovation in the

00:00:56,860 --> 00:01:01,750
telecommunication sector and essentially

00:00:59,110 --> 00:01:04,509
created the majority market share for

00:01:01,750 --> 00:01:08,770
Linux in telecommunications as early as

00:01:04,509 --> 00:01:10,000
2003 2004 today he continues to be a

00:01:08,770 --> 00:01:12,520
leader in open source

00:01:10,000 --> 00:01:15,040
he runs the open source technology group

00:01:12,520 --> 00:01:17,740
at Intel he's on the board of the

00:01:15,040 --> 00:01:20,470
OpenStack foundation he's on the board

00:01:17,740 --> 00:01:24,610
of our core infrastructure initiative on

00:01:20,470 --> 00:01:26,320
the ocf group and many many more it is

00:01:24,610 --> 00:01:27,640
my pleasure to welcome someone who I've

00:01:26,320 --> 00:01:30,970
known for more than 10 years

00:01:27,640 --> 00:01:36,370
Ahmad Susu from Intel good morning so

00:01:30,970 --> 00:01:40,210
it's um it's always awesome to be here

00:01:36,370 --> 00:01:41,740
back in China I speak I come to China I

00:01:40,210 --> 00:01:46,540
speak at conferences in China at least

00:01:41,740 --> 00:01:52,000
once a year and and this specific time

00:01:46,540 --> 00:01:54,760
is special it's special because for the

00:01:52,000 --> 00:01:58,570
first time my family came with me so I

00:01:54,760 --> 00:02:00,510
have very tough audience I have my two

00:01:58,570 --> 00:02:04,150
children my wife and two children my two

00:02:00,510 --> 00:02:07,150
my 12 year old and 13 year old friends

00:02:04,150 --> 00:02:10,479
here watching me tonight so so I do have

00:02:07,150 --> 00:02:13,550
very very tough audience and and

00:02:10,479 --> 00:02:17,630
regardless of how comfortable I am

00:02:13,550 --> 00:02:19,630
speaking in China you know again you

00:02:17,630 --> 00:02:23,560
know forgive me if I'm you know

00:02:19,630 --> 00:02:27,800
performing for my kid so so with that

00:02:23,560 --> 00:02:30,590
let me I want to start with something

00:02:27,800 --> 00:02:35,150
built on some of the things that Jim

00:02:30,590 --> 00:02:37,160
talked about so I've been managing the

00:02:35,150 --> 00:02:40,550
open source technology center at Intel

00:02:37,160 --> 00:02:44,950
for over 17 18 years now I I was I was

00:02:40,550 --> 00:02:47,870
I've created that group way back when we

00:02:44,950 --> 00:02:52,730
when we when we were trying to enable

00:02:47,870 --> 00:02:56,540
Linux and the telecom market and one of

00:02:52,730 --> 00:02:58,670
the things that is not very well known

00:02:56,540 --> 00:03:02,090
maybe known here in China but not very

00:02:58,670 --> 00:03:03,710
well known globally is that and the open

00:03:02,090 --> 00:03:06,110
source Technology Center my group is a

00:03:03,710 --> 00:03:08,270
very large group we have a lot of open

00:03:06,110 --> 00:03:13,130
source engineers but what people don't

00:03:08,270 --> 00:03:14,750
realize is that 600 of the Intel open

00:03:13,130 --> 00:03:17,750
source engineers and my group are here

00:03:14,750 --> 00:03:20,780
in China in fact in fact it makes me

00:03:17,750 --> 00:03:23,990
kind of mad when people start talking

00:03:20,780 --> 00:03:26,150
about China and not understanding open

00:03:23,990 --> 00:03:29,140
source we have some of the best open

00:03:26,150 --> 00:03:33,170
source engineers here in China almost

00:03:29,140 --> 00:03:34,730
90% of the virtualization leadership for

00:03:33,170 --> 00:03:38,450
example and I can give you many examples

00:03:34,730 --> 00:03:42,800
of the amazing open source engineers

00:03:38,450 --> 00:03:47,480
here in China so in today's talk you

00:03:42,800 --> 00:03:50,810
know I am always humbled to to talk

00:03:47,480 --> 00:03:53,209
about some of the projects that that the

00:03:50,810 --> 00:03:56,930
Intel open-source engineers are working

00:03:53,209 --> 00:03:59,050
on and some of the some of the things

00:03:56,930 --> 00:04:02,090
that they are creating and some of the

00:03:59,050 --> 00:04:04,970
real-world problems that they are so

00:04:02,090 --> 00:04:07,550
that they are solving and and it's

00:04:04,970 --> 00:04:10,220
always and and everything I will say

00:04:07,550 --> 00:04:13,730
today is really trying to represent this

00:04:10,220 --> 00:04:16,280
work and and and to talk about it and

00:04:13,730 --> 00:04:17,570
hopefully you can join us in working on

00:04:16,280 --> 00:04:22,400
some of these

00:04:17,570 --> 00:04:25,310
really cool open-source projects so so

00:04:22,400 --> 00:04:26,960
let me start with you know with

00:04:25,310 --> 00:04:31,750
something that all of us probably know

00:04:26,960 --> 00:04:34,190
by now so all of us know that the cloud

00:04:31,750 --> 00:04:38,030
software-defined infrastructure is not

00:04:34,190 --> 00:04:40,520
well established all of us are familiar

00:04:38,030 --> 00:04:42,100
with with with software different

00:04:40,520 --> 00:04:44,900
compute software-defined storage

00:04:42,100 --> 00:04:47,630
software-defined networking it's really

00:04:44,900 --> 00:04:49,850
just the evolution of the modern data

00:04:47,630 --> 00:04:52,940
center and the automation of the modern

00:04:49,850 --> 00:04:57,020
data center that we that we live in

00:04:52,940 --> 00:04:59,330
today and and the truth is that none of

00:04:57,020 --> 00:05:03,350
that would have been possible had it not

00:04:59,330 --> 00:05:06,460
been for the open source projects that

00:05:03,350 --> 00:05:09,530
creates the cloud software-defined

00:05:06,460 --> 00:05:13,100
infrastructure cloud native kubernetes

00:05:09,530 --> 00:05:16,370
KVM OpenStack Linux all of these

00:05:13,100 --> 00:05:18,350
projects are the projects that made the

00:05:16,370 --> 00:05:20,680
amazing software-defined infrastructure

00:05:18,350 --> 00:05:24,860
that most of our businesses run on

00:05:20,680 --> 00:05:28,970
actually viable now I believe that this

00:05:24,860 --> 00:05:33,110
model is going to be extended extended

00:05:28,970 --> 00:05:35,420
well beyond cloud so we think that this

00:05:33,110 --> 00:05:37,850
model is going to extend it into areas

00:05:35,420 --> 00:05:40,250
like automotive industrial edge beyond

00:05:37,850 --> 00:05:43,340
the existing usages beyond the existing

00:05:40,250 --> 00:05:45,860
using Linux to run the entertainment

00:05:43,340 --> 00:05:48,260
system in the car and so on beyond any

00:05:45,860 --> 00:05:50,810
of those things so in fact if you take

00:05:48,260 --> 00:05:54,830
the car example if you take the car

00:05:50,810 --> 00:05:57,970
example so the car of the future is

00:05:54,830 --> 00:06:00,590
going to be a data center on wheels and

00:05:57,970 --> 00:06:02,180
that data center on wheels is going to

00:06:00,590 --> 00:06:05,540
be software-defined but it's going to be

00:06:02,180 --> 00:06:07,730
very special way of software-defined

00:06:05,540 --> 00:06:10,160
there's going to be many operating

00:06:07,730 --> 00:06:12,410
systems your instrument cluster will run

00:06:10,160 --> 00:06:14,510
an operating system your your middle

00:06:12,410 --> 00:06:16,790
panel will run an operating system your

00:06:14,510 --> 00:06:19,070
mirror will run an operating system the

00:06:16,790 --> 00:06:20,720
back media and video playback were on

00:06:19,070 --> 00:06:22,250
all of these will run different

00:06:20,720 --> 00:06:24,350
operating systems some of them are

00:06:22,250 --> 00:06:26,240
Android drive some of them are Linux

00:06:24,350 --> 00:06:28,580
some of them are microcontroller and

00:06:26,240 --> 00:06:30,370
real-time operating systems but this is

00:06:28,580 --> 00:06:32,250
what we see as

00:06:30,370 --> 00:06:34,090
what will be the future and how

00:06:32,250 --> 00:06:37,990
industries like the automotive

00:06:34,090 --> 00:06:42,900
industries will evolve into into the

00:06:37,990 --> 00:06:47,229
software-defined world now now these

00:06:42,900 --> 00:06:50,919
these type of changes in the industries

00:06:47,229 --> 00:06:54,460
and and these type of usages requires

00:06:50,919 --> 00:06:56,800
new technologies and new technologies

00:06:54,460 --> 00:06:59,320
because if you take go back to the

00:06:56,800 --> 00:07:03,570
example I've given about cars now you

00:06:59,320 --> 00:07:06,310
have a situation where you have to

00:07:03,570 --> 00:07:09,430
accommodate what is called a critical

00:07:06,310 --> 00:07:12,100
safety a critical safety system at the

00:07:09,430 --> 00:07:14,830
same time you have to accommodate the

00:07:12,100 --> 00:07:17,710
the normal the normal systems the video

00:07:14,830 --> 00:07:20,350
playback and so on so now you have a mix

00:07:17,710 --> 00:07:22,510
of a safety critical and non safety

00:07:20,350 --> 00:07:24,460
critical system within one environment

00:07:22,510 --> 00:07:27,460
and that extends to things like

00:07:24,460 --> 00:07:29,590
industrial and in other areas and and

00:07:27,460 --> 00:07:31,419
some of the things that I'm going to be

00:07:29,590 --> 00:07:34,750
talking about is some of these new

00:07:31,419 --> 00:07:36,669
projects that will enable these type of

00:07:34,750 --> 00:07:39,760
usages you know the software-defined

00:07:36,669 --> 00:07:41,979
card software-defined cockpit software

00:07:39,760 --> 00:07:46,060
in the software-defined industrial

00:07:41,979 --> 00:07:50,310
automation and so on so but also by the

00:07:46,060 --> 00:07:53,590
way even in the cloud software-defined

00:07:50,310 --> 00:07:56,169
infrastructure things are not completely

00:07:53,590 --> 00:07:57,940
done yet there is a lot of evolution

00:07:56,169 --> 00:08:00,639
there is a lot of work there is a lot of

00:07:57,940 --> 00:08:03,010
definitional work that is happening in

00:08:00,639 --> 00:08:06,520
that and and I will allso such things

00:08:03,010 --> 00:08:08,979
like securing containers you know and

00:08:06,520 --> 00:08:11,620
some of these I will also talk about a

00:08:08,979 --> 00:08:14,650
little bit so let me let me start with

00:08:11,620 --> 00:08:18,580
talking about virtualization and

00:08:14,650 --> 00:08:21,880
containers when you when you look at the

00:08:18,580 --> 00:08:24,699
isolation continuum on the one hand you

00:08:21,880 --> 00:08:27,010
have containers and containers are

00:08:24,699 --> 00:08:30,639
awesome containers are very very quick

00:08:27,010 --> 00:08:33,039
you know a blazing fast you can bring up

00:08:30,639 --> 00:08:34,779
a container and an a micro service

00:08:33,039 --> 00:08:37,750
really really quickly turn it down and

00:08:34,779 --> 00:08:40,949
so on virtualization are great because

00:08:37,750 --> 00:08:42,869
you are they're very stable very secure

00:08:40,949 --> 00:08:44,939
and this is how most of the world runs

00:08:42,869 --> 00:08:49,709
today and you're able you're able to run

00:08:44,939 --> 00:08:53,369
an entire environment containers share a

00:08:49,709 --> 00:08:56,429
kernel and which which effectively means

00:08:53,369 --> 00:08:58,889
that if if one container is compromised

00:08:56,429 --> 00:09:00,269
the security of other containers within

00:08:58,889 --> 00:09:03,869
that same environment are also

00:09:00,269 --> 00:09:06,359
compromised and and virtual machines are

00:09:03,869 --> 00:09:09,329
you know they're great they're stable

00:09:06,359 --> 00:09:13,379
but they're also slow so so it's always

00:09:09,329 --> 00:09:16,439
been a choice between speed or security

00:09:13,379 --> 00:09:18,720
and one of the one of the amazing

00:09:16,439 --> 00:09:21,839
projects that our engineers at Intel

00:09:18,720 --> 00:09:24,149
started working on few years ago is to

00:09:21,839 --> 00:09:26,519
find a way to bring in both speed and

00:09:24,149 --> 00:09:29,939
security and this is what we try to do

00:09:26,519 --> 00:09:32,850
with what we did with Intel clear

00:09:29,939 --> 00:09:35,040
containers and and in Turkey little

00:09:32,850 --> 00:09:39,419
containers basically fixed containers

00:09:35,040 --> 00:09:43,049
and allows you to run allows you to be

00:09:39,419 --> 00:09:46,139
seen to use virtualization technology to

00:09:43,049 --> 00:09:49,230
add security to that container and this

00:09:46,139 --> 00:09:52,589
is what we call cata containers where

00:09:49,230 --> 00:09:55,049
multiple projects came together that

00:09:52,589 --> 00:09:57,989
we're working on similar technologies

00:09:55,049 --> 00:10:00,899
and merge together to create the cotta

00:09:57,989 --> 00:10:04,230
containers projects and and cutter by

00:10:00,899 --> 00:10:07,290
the way is means trust but the point of

00:10:04,230 --> 00:10:10,350
cata containers is that is that to have

00:10:07,290 --> 00:10:12,720
a hardware secure containers that it

00:10:10,350 --> 00:10:15,379
still have the container property

00:10:12,720 --> 00:10:19,410
meaning it does confirm the the

00:10:15,379 --> 00:10:21,989
container interface and it does boot it

00:10:19,410 --> 00:10:24,509
does have the fast properties and so on

00:10:21,989 --> 00:10:28,189
but it is also uses the virtualization

00:10:24,509 --> 00:10:30,480
technology so it is very very fast so

00:10:28,189 --> 00:10:33,749
contain you know cata containers one

00:10:30,480 --> 00:10:36,329
that o was released and it is done in

00:10:33,749 --> 00:10:39,959
partnerships with a lot of companies

00:10:36,329 --> 00:10:41,879
from Google to Microsoft Huawei to a lot

00:10:39,959 --> 00:10:45,509
of companies to hyper who came together

00:10:41,879 --> 00:10:48,930
to to bring this together and it's very

00:10:45,509 --> 00:10:51,420
simple it's it's complete runtime

00:10:48,930 --> 00:10:52,890
is that from like a scheduling

00:10:51,420 --> 00:10:54,930
standpoint like from a kubernetes

00:10:52,890 --> 00:10:59,700
standpoint because cotta containers

00:10:54,930 --> 00:11:01,980
comply with with with the open with with

00:10:59,700 --> 00:11:05,220
with the with the open container

00:11:01,980 --> 00:11:07,709
initiative and the api's it sees it as

00:11:05,220 --> 00:11:11,490
just the container and but it's still

00:11:07,709 --> 00:11:14,730
you get to get that same security now we

00:11:11,490 --> 00:11:17,670
think that we have you know we have made

00:11:14,730 --> 00:11:20,610
a significant improvement by this by but

00:11:17,670 --> 00:11:25,920
while we were doing this we realized

00:11:20,610 --> 00:11:29,420
that that virtualization technology is

00:11:25,920 --> 00:11:31,680
also becoming really stale so

00:11:29,420 --> 00:11:33,750
virtualization has a very very long

00:11:31,680 --> 00:11:37,649
history virtualization has been around

00:11:33,750 --> 00:11:40,620
for in some form or another for 50 years

00:11:37,649 --> 00:11:42,630
so it is very very stable and people

00:11:40,620 --> 00:11:44,730
love that it is very stable and they run

00:11:42,630 --> 00:11:48,899
their workloads on but it's also very

00:11:44,730 --> 00:11:52,790
very stale and so we started looking at

00:11:48,899 --> 00:11:58,230
at what is it that we can do to improve

00:11:52,790 --> 00:12:00,089
virtualization technology and in just

00:11:58,230 --> 00:12:03,480
not and not just in the cloud but also

00:12:00,089 --> 00:12:07,830
in the data center as a whole and what

00:12:03,480 --> 00:12:10,740
we found is that you take the probably

00:12:07,830 --> 00:12:13,470
the mainstream virtualization

00:12:10,740 --> 00:12:15,420
infrastructure KVM and you look at it

00:12:13,470 --> 00:12:19,080
and it's it's it's something like 2

00:12:15,420 --> 00:12:20,730
million lines of code and you look at

00:12:19,080 --> 00:12:24,060
like what do these 2 million lines of

00:12:20,730 --> 00:12:27,900
code do and it turns out that over a

00:12:24,060 --> 00:12:30,510
million of them are things to dealing

00:12:27,900 --> 00:12:33,209
with emulation emulation floppy drive

00:12:30,510 --> 00:12:37,020
and and all sort of things that are

00:12:33,209 --> 00:12:40,350
completely obsolete from the modern from

00:12:37,020 --> 00:12:41,670
modern usages so one of the things that

00:12:40,350 --> 00:12:44,640
we've worked on and we've been

00:12:41,670 --> 00:12:48,630
prototyping is to kind of bring this

00:12:44,640 --> 00:12:50,820
virtualization and and to create a much

00:12:48,630 --> 00:12:54,930
smaller footprint

00:12:50,820 --> 00:12:57,089
KVM virtualized virtual machine that is

00:12:54,930 --> 00:12:59,730
a fraction and just to give you an idea

00:12:57,089 --> 00:13:01,320
where it is at today it is at something

00:12:59,730 --> 00:13:02,400
like two hundred thousand lines of code

00:13:01,320 --> 00:13:05,280
instead of the two

00:13:02,400 --> 00:13:07,800
in just just the amount of drop by just

00:13:05,280 --> 00:13:10,770
separating the emulation from

00:13:07,800 --> 00:13:13,470
virtualization and by the way most

00:13:10,770 --> 00:13:15,710
hardware platforms don't need because

00:13:13,470 --> 00:13:18,870
modern hardware does not need that

00:13:15,710 --> 00:13:21,360
emulation so we feel safe that it's it's

00:13:18,870 --> 00:13:24,030
good to do that now I talked about cars

00:13:21,360 --> 00:13:27,000
and I talked about how cars are going to

00:13:24,030 --> 00:13:29,430
be software-defined well how are they

00:13:27,000 --> 00:13:30,360
going to be software-defined without the

00:13:29,430 --> 00:13:34,200
right

00:13:30,360 --> 00:13:35,670
without the right virtual machine so

00:13:34,200 --> 00:13:38,700
this is the virtual machine that we've

00:13:35,670 --> 00:13:40,890
created under the Linux Foundation it's

00:13:38,700 --> 00:13:44,340
called a corn and a corn is a

00:13:40,890 --> 00:13:47,340
functionally safe virtual machine in a

00:13:44,340 --> 00:13:49,920
virtual machine the hypervisor that can

00:13:47,340 --> 00:13:53,610
run for functionally safe workloads so

00:13:49,920 --> 00:13:57,320
you are able to mix now you know run a

00:13:53,610 --> 00:13:59,720
completely functionally safe system

00:13:57,320 --> 00:14:02,100
alongside the same software-defined

00:13:59,720 --> 00:14:04,770
infrastructure with the rest of the car

00:14:02,100 --> 00:14:07,200
systems wherever other operating systems

00:14:04,770 --> 00:14:09,180
you are running that and you are able to

00:14:07,200 --> 00:14:12,630
share and pull things like do the

00:14:09,180 --> 00:14:14,730
graphics sharing all the relevant things

00:14:12,630 --> 00:14:17,070
to the car Bluetooth USB and all of

00:14:14,730 --> 00:14:20,790
these other things that and media things

00:14:17,070 --> 00:14:25,620
that cars cares about into a truly IOT

00:14:20,790 --> 00:14:28,140
and a car based a car based hypervisor

00:14:25,620 --> 00:14:30,770
and even though we started the econ

00:14:28,140 --> 00:14:33,660
project only if you like few months ago

00:14:30,770 --> 00:14:35,640
we're already seeing a greater ease of

00:14:33,660 --> 00:14:38,700
people are already starting to use it if

00:14:35,640 --> 00:14:40,910
you look at Harman at the Auto China

00:14:38,700 --> 00:14:43,500
2018 show introduced their

00:14:40,910 --> 00:14:47,370
next-generation intelligent cockpit it

00:14:43,500 --> 00:14:50,100
was built on acorn alibaba's the work

00:14:47,370 --> 00:14:52,560
that we've done with Alibaba on the

00:14:50,100 --> 00:14:55,770
electronic cockpit also is based on

00:14:52,560 --> 00:14:58,110
acorn so it's amazing to see you know

00:14:55,770 --> 00:15:00,450
the evolution and and how people are

00:14:58,110 --> 00:15:02,640
beginning to use these new projects so I

00:15:00,450 --> 00:15:05,340
do encourage you a lot to please

00:15:02,640 --> 00:15:09,840
participate in in some of these new

00:15:05,340 --> 00:15:12,680
projects next I want to talk about Linux

00:15:09,840 --> 00:15:15,440
and I want to talk about

00:15:12,680 --> 00:15:18,560
some of the work that our engineers are

00:15:15,440 --> 00:15:21,950
doing in in a distribution that we call

00:15:18,560 --> 00:15:24,640
a modern Linux distribution and and the

00:15:21,950 --> 00:15:28,160
reason we call it modern by the way is

00:15:24,640 --> 00:15:30,410
is more yes there is a lot of things

00:15:28,160 --> 00:15:32,000
that I can talk about about the features

00:15:30,410 --> 00:15:34,340
of this Linux

00:15:32,000 --> 00:15:38,030
the reason we call it modern is because

00:15:34,340 --> 00:15:41,540
we've designed this this within with a

00:15:38,030 --> 00:15:44,240
new development model that that is much

00:15:41,540 --> 00:15:46,370
more friendly to modern usages so we're

00:15:44,240 --> 00:15:48,650
not really encumbered with the

00:15:46,370 --> 00:15:51,830
complicated packaging systems and and

00:15:48,650 --> 00:15:55,310
dependency trees and and the way Linux

00:15:51,830 --> 00:15:57,140
is typically packaged and and one of the

00:15:55,310 --> 00:15:59,210
conscious decisions that we've done up

00:15:57,140 --> 00:16:01,640
front is that we wanted to make it

00:15:59,210 --> 00:16:06,230
really really easy for all distributions

00:16:01,640 --> 00:16:07,700
to steal to take to take things from the

00:16:06,230 --> 00:16:09,680
clear Linux distribution that we've

00:16:07,700 --> 00:16:12,800
created and to put it in their own

00:16:09,680 --> 00:16:16,250
distributions and here is why you know

00:16:12,800 --> 00:16:19,700
include Linux we implement all platform

00:16:16,250 --> 00:16:22,610
features and so what does that mean so

00:16:19,700 --> 00:16:24,680
one of the one of the things that is not

00:16:22,610 --> 00:16:26,780
really well known when you look at not

00:16:24,680 --> 00:16:30,920
just the kernel an entire Linux

00:16:26,780 --> 00:16:33,710
distribution is that for a feature to be

00:16:30,920 --> 00:16:36,560
useful for an end user the feature must

00:16:33,710 --> 00:16:38,960
be implemented top to bottom in the

00:16:36,560 --> 00:16:41,570
kernel in the libraries in middleware in

00:16:38,960 --> 00:16:43,190
multiple areas you know if it's machine

00:16:41,570 --> 00:16:44,870
learning and tensorflow and if it's

00:16:43,190 --> 00:16:47,920
using kubernetes and kubernetes and so

00:16:44,870 --> 00:16:50,330
on but the entire stack needs to be

00:16:47,920 --> 00:16:52,700
enabled and optimized for those features

00:16:50,330 --> 00:16:55,310
so we do platform features and we do

00:16:52,700 --> 00:16:57,680
performance in addition to that we don't

00:16:55,310 --> 00:16:59,240
make any compromises on performance to

00:16:57,680 --> 00:17:03,110
lower the bar to a least common

00:16:59,240 --> 00:17:05,209
denominator so we really focus on making

00:17:03,110 --> 00:17:07,189
Linux work really really well and

00:17:05,209 --> 00:17:10,670
utilized the hardware really really well

00:17:07,189 --> 00:17:14,390
and and you can just Google you know and

00:17:10,670 --> 00:17:16,970
and and search for you know what's the

00:17:14,390 --> 00:17:20,300
performance impact and you will see in a

00:17:16,970 --> 00:17:24,079
lot of benchmarks that the result of

00:17:20,300 --> 00:17:24,650
this is 4x performance difference not

00:17:24,079 --> 00:17:27,860
temper

00:17:24,650 --> 00:17:30,830
different 4x400 percent performance

00:17:27,860 --> 00:17:32,480
difference in some of these so again the

00:17:30,830 --> 00:17:35,120
other things we are doing with clear

00:17:32,480 --> 00:17:37,820
linux is creating a model where we are

00:17:35,120 --> 00:17:38,480
able to react and respond really really

00:17:37,820 --> 00:17:40,370
quickly

00:17:38,480 --> 00:17:42,230
not just for software not just for

00:17:40,370 --> 00:17:45,080
hardware bugs but also for software bugs

00:17:42,230 --> 00:17:47,330
to agree to make available those

00:17:45,080 --> 00:17:49,160
mitigation really really quickly and a

00:17:47,330 --> 00:17:52,190
lot of that is rooted in the development

00:17:49,160 --> 00:17:54,710
model that we use and how we create and

00:17:52,190 --> 00:17:57,050
how we are able to be current current

00:17:54,710 --> 00:17:59,210
mean very close to the upstream very

00:17:57,050 --> 00:18:01,250
modern software update atomic updates

00:17:59,210 --> 00:18:02,870
and and all of these other features so I

00:18:01,250 --> 00:18:05,270
really do encourage you to take a look

00:18:02,870 --> 00:18:06,890
at clear Linux and please feel free if

00:18:05,270 --> 00:18:08,780
you have your own distribution take

00:18:06,890 --> 00:18:12,640
whatever you want we will even help you

00:18:08,780 --> 00:18:16,460
so finally I just want to close with

00:18:12,640 --> 00:18:19,820
with a plug for our edge projects you

00:18:16,460 --> 00:18:21,500
know a crane o is a is an umbrella our

00:18:19,820 --> 00:18:23,990
umbrella edge projects that we've

00:18:21,500 --> 00:18:25,760
created with many partners many partners

00:18:23,990 --> 00:18:28,910
here in China in the u.s. under the

00:18:25,760 --> 00:18:31,400
Linux Foundation a crane o is where we

00:18:28,910 --> 00:18:35,300
feel that all the edge programs will

00:18:31,400 --> 00:18:37,580
eventually be hosted under and we're

00:18:35,300 --> 00:18:38,960
going to be working very closely with

00:18:37,580 --> 00:18:41,390
all of you and with the Linux Foundation

00:18:38,960 --> 00:18:43,280
to make this happen one of the things

00:18:41,390 --> 00:18:45,830
that we've done in support of this is to

00:18:43,280 --> 00:18:48,140
open source our Wind River titanium

00:18:45,830 --> 00:18:51,370
cloud product a courier great edge

00:18:48,140 --> 00:18:54,620
product and that product obviously will

00:18:51,370 --> 00:18:57,290
integrate into acronym so with that you

00:18:54,620 --> 00:18:58,580
know I want you to thank you very much

00:18:57,290 --> 00:19:02,000
and I want to thank the Linux Foundation

00:18:58,580 --> 00:19:05,020
staff and thank you very much and have a

00:19:02,000 --> 00:19:05,020

YouTube URL: https://www.youtube.com/watch?v=84JczVwRZpE


