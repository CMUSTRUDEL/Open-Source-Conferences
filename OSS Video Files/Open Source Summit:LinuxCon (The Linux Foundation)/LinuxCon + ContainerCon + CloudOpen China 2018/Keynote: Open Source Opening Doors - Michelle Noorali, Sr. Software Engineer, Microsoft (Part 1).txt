Title: Keynote: Open Source Opening Doors - Michelle Noorali, Sr. Software Engineer, Microsoft (Part 1)
Publication date: 2018-07-19
Playlist: LinuxCon + ContainerCon + CloudOpen China 2018
Description: 
	PART 1

Keynote: Open Source Opening Doors - Michelle Noorali, Sr. Software Engineer, Microsoft

Michelle Noorali, Sr. Software Engineer at Microsoft Azure and open source developer, talks about open source projects in the cloud-native ecosystem, the benefits of having an open source project in a foundation like the Cloud Native Computing Foundation (CNCF), and the process of transitioning an open source project to the CNCF. Michelle currently serves on the Kubernetes Steering Committee, is on the governing board of the CNCF, and is a core maintainer of Helm, which was recently adopted into the CNCF. In this talk, Michelle will aim to inspire and inform other maintainers of open source projects on how to think about foundations as a long-term home for their open source project.
Captions: 
	00:00:00,000 --> 00:00:05,850
because she's a very famous software

00:00:02,060 --> 00:00:07,740
engineer and my daughter looked at me

00:00:05,850 --> 00:00:14,219
like ten year old daughters do and said

00:00:07,740 --> 00:00:16,500
dad duh I know that she's famous so I'm

00:00:14,219 --> 00:00:29,820
very very honored to welcome Michelle

00:00:16,500 --> 00:00:32,640
Nirali to stage welcome hi everyone how

00:00:29,820 --> 00:00:33,270
is everyone doing today I hope you're

00:00:32,640 --> 00:00:36,120
well

00:00:33,270 --> 00:00:40,649
yeah round of applause getting through

00:00:36,120 --> 00:00:42,390
this my name is Michelle Nora Lee thank

00:00:40,649 --> 00:00:44,820
you so much for having me here in China

00:00:42,390 --> 00:00:47,370
I'm so excited to be here for the very

00:00:44,820 --> 00:00:50,129
first time I'm an engineer on the azure

00:00:47,370 --> 00:00:52,949
containers team throughout my career

00:00:50,129 --> 00:00:55,710
I've had the good fortune to experience

00:00:52,949 --> 00:00:59,399
different types of development I started

00:00:55,710 --> 00:01:01,410
off as a full sack web developer then I

00:00:59,399 --> 00:01:04,320
became a platform developer for a

00:01:01,410 --> 00:01:06,960
platform as a service company and now I

00:01:04,320 --> 00:01:09,290
have the pleasure to build open-source

00:01:06,960 --> 00:01:15,000
tools that make people more productive

00:01:09,290 --> 00:01:16,979
with containers and kubernetes so many

00:01:15,000 --> 00:01:18,960
of you I saw earlier have already heard

00:01:16,979 --> 00:01:20,909
of kubernetes or have some experience

00:01:18,960 --> 00:01:23,280
with kubernetes but for those of you who

00:01:20,909 --> 00:01:24,810
are not familiar kubernetes is a

00:01:23,280 --> 00:01:27,090
software that helps you manage your

00:01:24,810 --> 00:01:32,939
containerized applications in the cloud

00:01:27,090 --> 00:01:35,729
on bare metal or both three years ago my

00:01:32,939 --> 00:01:39,750
company was evaluating kubernetes to

00:01:35,729 --> 00:01:42,840
solve some of our own problems and even

00:01:39,750 --> 00:01:47,369
then even though kubernetes was so young

00:01:42,840 --> 00:01:49,409
we really loved what we saw because it

00:01:47,369 --> 00:01:52,170
was a good solution for the problems

00:01:49,409 --> 00:01:54,899
that we were having we really needed a

00:01:52,170 --> 00:01:58,159
way to reliably scare scale a large

00:01:54,899 --> 00:02:01,140
number of containerized applications and

00:01:58,159 --> 00:02:04,200
even then the community was very

00:02:01,140 --> 00:02:08,420
welcoming and we knew exactly where to

00:02:04,200 --> 00:02:11,220
go to ask for help when we needed it and

00:02:08,420 --> 00:02:13,190
after kubernetes was donated to the

00:02:11,220 --> 00:02:17,360
cloud native computing foundation

00:02:13,190 --> 00:02:19,610
we had even more confidence that this

00:02:17,360 --> 00:02:24,340
piece of technology would grow

00:02:19,610 --> 00:02:28,340
sustainable sustainably and be stable in

00:02:24,340 --> 00:02:30,950
the process of deploying lots of micro

00:02:28,340 --> 00:02:33,710
services to kubernetes we found that we

00:02:30,950 --> 00:02:36,590
wanted some additional tooling to make

00:02:33,710 --> 00:02:40,180
it easier to share and configure

00:02:36,590 --> 00:02:43,700
applications to run in our cluster and

00:02:40,180 --> 00:02:46,010
if you're not already familiar you can

00:02:43,700 --> 00:02:48,740
deploy and scale your containerized

00:02:46,010 --> 00:02:51,530
applications by giving kubernetes some

00:02:48,740 --> 00:02:54,680
declarative duct relay declaration of

00:02:51,530 --> 00:02:57,320
what you want it to do in the form of

00:02:54,680 --> 00:02:59,000
kubernetes manifests and those looks

00:02:57,320 --> 00:03:02,930
like something that's on the screen

00:02:59,000 --> 00:03:06,380
right now but in reality to deploy just

00:03:02,930 --> 00:03:08,930
one application to your cluster you may

00:03:06,380 --> 00:03:12,230
need to write several kubernetes

00:03:08,930 --> 00:03:15,440
manifests and these moon manifests

00:03:12,230 --> 00:03:18,800
deploy multiple kubernetes resources or

00:03:15,440 --> 00:03:23,840
objects and they can be hundreds of

00:03:18,800 --> 00:03:26,390
lines long and you may want to tweak

00:03:23,840 --> 00:03:28,790
your manifests just slightly to adjust

00:03:26,390 --> 00:03:30,620
for different environments

00:03:28,790 --> 00:03:33,230
once you have a set of kubernetes

00:03:30,620 --> 00:03:36,200
manifest that work for you you may want

00:03:33,230 --> 00:03:37,730
to package that up and version it so

00:03:36,200 --> 00:03:40,670
that you can share it with the rest of

00:03:37,730 --> 00:03:44,000
your teammates and know be confident

00:03:40,670 --> 00:03:47,060
that your set of manifests will run your

00:03:44,000 --> 00:03:49,340
application will run exactly the same as

00:03:47,060 --> 00:03:55,220
it did for you for your teammates as

00:03:49,340 --> 00:03:58,760
well so to satisfy those needs we

00:03:55,220 --> 00:04:01,459
started a project called helm and with

00:03:58,760 --> 00:04:04,640
helm you can define your kubernetes

00:04:01,459 --> 00:04:09,110
manifests in a package format we call a

00:04:04,640 --> 00:04:11,810
chart and inside of the chart which is

00:04:09,110 --> 00:04:14,270
really just a set of files you can

00:04:11,810 --> 00:04:17,720
template your manifest to make it easy

00:04:14,270 --> 00:04:20,030
to define default configuration but also

00:04:17,720 --> 00:04:23,260
override that configuration for

00:04:20,030 --> 00:04:23,260
different environments and

00:04:25,300 --> 00:04:29,890
the chart format actually also makes it

00:04:27,400 --> 00:04:34,360
easier to share your set of manifests as

00:04:29,890 --> 00:04:37,510
well so I want to invite some stage Riya

00:04:34,360 --> 00:04:41,110
Bhatia she is a program manager at

00:04:37,510 --> 00:04:43,360
Microsoft and she uses helm regularly so

00:04:41,110 --> 00:04:46,330
I'd really love for her to show us a

00:04:43,360 --> 00:04:49,930
little example of how helm works and how

00:04:46,330 --> 00:04:51,820
you can use it cool thanks Michele so

00:04:49,930 --> 00:04:54,100
today I want to be showing you guys and

00:04:51,820 --> 00:04:56,800
I'm a tensorflow application which is

00:04:54,100 --> 00:05:00,880
basically packaged up with helm so all I

00:04:56,800 --> 00:05:02,770
have to do is a helm install and then I

00:05:00,880 --> 00:05:04,090
find the charts I have my name and then

00:05:02,770 --> 00:05:06,310
I can give it a name so I'll just call

00:05:04,090 --> 00:05:08,530
it demo and then when I hit enter what

00:05:06,310 --> 00:05:11,200
its gonna do it's gonna spit out all of

00:05:08,530 --> 00:05:13,030
this is gamal whole application

00:05:11,200 --> 00:05:15,700
deployment stuff I don't really need to

00:05:13,030 --> 00:05:17,800
know which is great and it spits out my

00:05:15,700 --> 00:05:20,410
deployments my services my ain't grass

00:05:17,800 --> 00:05:22,240
my pods and these were already created

00:05:20,410 --> 00:05:25,540
and all I have to do is a helm install

00:05:22,240 --> 00:05:26,830
this makes kubernetes so easy and this

00:05:25,540 --> 00:05:29,080
makes it easy for me to deploy

00:05:26,830 --> 00:05:31,330
applications to kubernetes so what's it

00:05:29,080 --> 00:05:34,750
actually just deploy let's go and hit

00:05:31,330 --> 00:05:38,140
the UI and there we go

00:05:34,750 --> 00:05:39,790
it's a tensor flute fruit classifier and

00:05:38,140 --> 00:05:42,640
it's just gonna find a bunch of pictures

00:05:39,790 --> 00:05:45,310
of fruits and it's gonna match it to its

00:05:42,640 --> 00:05:47,200
different emojis basically so this is

00:05:45,310 --> 00:05:50,080
pretty awesome it came up in seconds and

00:05:47,200 --> 00:05:51,790
helm just did it all for me thank you so

00:05:50,080 --> 00:06:00,190
much for you let's give her a round of

00:05:51,790 --> 00:06:02,650
applause thank you so the spirit of

00:06:00,190 --> 00:06:04,870
openness and collaboration in the

00:06:02,650 --> 00:06:07,840
kubernetes community really opened the

00:06:04,870 --> 00:06:10,210
door for us to work with people from

00:06:07,840 --> 00:06:13,720
other organizations to build a solution

00:06:10,210 --> 00:06:17,320
together and we heard a little bit about

00:06:13,720 --> 00:06:18,940
this from Jim's Emma and earlier today

00:06:17,320 --> 00:06:20,590
how people come together to build

00:06:18,940 --> 00:06:23,350
solutions and this is no longer a

00:06:20,590 --> 00:06:26,230
zero-sum game and we actually on the

00:06:23,350 --> 00:06:28,690
home team lived that that example and

00:06:26,230 --> 00:06:30,940
got to work on an awesome project that

00:06:28,690 --> 00:06:33,310
gained a lot of traction and success by

00:06:30,940 --> 00:06:34,990
collaborating with other people and the

00:06:33,310 --> 00:06:37,860
community people who would normally be

00:06:34,990 --> 00:06:37,860
our competitors

00:06:38,070 --> 00:06:45,030
and helm has grown quite a bit since the

00:06:40,380 --> 00:06:46,470
project started in 2015 we've seen over

00:06:45,030 --> 00:06:48,510
three hundred and forty five

00:06:46,470 --> 00:06:52,080
contributors to the project in just the

00:06:48,510 --> 00:06:54,860
last two-and-a-half years and over 4,800

00:06:52,080 --> 00:06:58,200
people in our slack Channel

00:06:54,860 --> 00:07:01,770
but with a lot of growth comes some

00:06:58,200 --> 00:07:04,500
growing pains as well for example we

00:07:01,770 --> 00:07:06,540
were scaling the codebase and our team

00:07:04,500 --> 00:07:08,820
as well as addressing people in the

00:07:06,540 --> 00:07:12,450
community who were also building tooling

00:07:08,820 --> 00:07:14,430
on top of helm and on top of that we

00:07:12,450 --> 00:07:17,250
were having conversations and still are

00:07:14,430 --> 00:07:19,680
about the future of helm and what the

00:07:17,250 --> 00:07:22,530
community wants to see with the next

00:07:19,680 --> 00:07:24,840
major version release and we heard from

00:07:22,530 --> 00:07:26,640
Linus today about maintainer ships and

00:07:24,840 --> 00:07:29,880
the responsibilities that go with

00:07:26,640 --> 00:07:31,500
maintainer ship we also I agree with

00:07:29,880 --> 00:07:33,330
everything he said and we also

00:07:31,500 --> 00:07:36,440
experienced that with the home project

00:07:33,330 --> 00:07:38,760
so this in itself was challenging enough

00:07:36,440 --> 00:07:40,350
but what proved to be equally

00:07:38,760 --> 00:07:42,810
challenging was meeting the

00:07:40,350 --> 00:07:45,270
non-technical needs of the community the

00:07:42,810 --> 00:07:48,330
community was asking for mailing lists

00:07:45,270 --> 00:07:50,820
and slack channels to discuss and ask

00:07:48,330 --> 00:07:53,580
questions and more people were starting

00:07:50,820 --> 00:07:56,940
to show up to our weekly developer calls

00:07:53,580 --> 00:08:00,540
we even had our first two day conference

00:07:56,940 --> 00:08:04,920
with almost close to four excuse me two

00:08:00,540 --> 00:08:08,220
hundred people who showed up and no one

00:08:04,920 --> 00:08:10,140
on our team actually had any experience

00:08:08,220 --> 00:08:11,640
running conferences so this was just a

00:08:10,140 --> 00:08:14,010
bunch of us trying to figure it out

00:08:11,640 --> 00:08:17,400
while we were scaling our community and

00:08:14,010 --> 00:08:19,890
trying to meet those needs we've also

00:08:17,400 --> 00:08:22,290
been doing a lot lately around hardening

00:08:19,890 --> 00:08:25,550
roles and responsibilities and

00:08:22,290 --> 00:08:28,080
decision-making processes on our team

00:08:25,550 --> 00:08:29,790
helm really grew up though as aq

00:08:28,080 --> 00:08:33,090
Brunetti sub project and over the past

00:08:29,790 --> 00:08:36,479
two and a half years it's gained its own

00:08:33,090 --> 00:08:37,800
community its own ecosystem that has its

00:08:36,479 --> 00:08:40,380
own needs

00:08:37,800 --> 00:08:42,570
we were already leaning on the CNC F for

00:08:40,380 --> 00:08:44,820
quite a bit of help and support managing

00:08:42,570 --> 00:08:46,620
our community and its needs and we were

00:08:44,820 --> 00:08:49,880
finding ourselves needing more and more

00:08:46,620 --> 00:08:51,640
support more and more frequently

00:08:49,880 --> 00:08:54,100
something would come up on our

00:08:51,640 --> 00:08:56,680
team and someone would say well can the

00:08:54,100 --> 00:09:00,010
CNCs help us with that and our aunt the

00:08:56,680 --> 00:09:02,320
answer was generally yes at the same

00:09:00,010 --> 00:09:04,360
time the kubernetes project was becoming

00:09:02,320 --> 00:09:06,990
more focused on just the artifacts that

00:09:04,360 --> 00:09:09,700
were actually released with kubernetes

00:09:06,990 --> 00:09:11,920
and we on the kubernetes in the

00:09:09,700 --> 00:09:13,900
kubernetes community are trying to make

00:09:11,920 --> 00:09:16,300
sure that the kubernetes github org is

00:09:13,900 --> 00:09:18,580
as slim as possible right now because

00:09:16,300 --> 00:09:21,430
that community is growing as well as

00:09:18,580 --> 00:09:24,130
scaling as well with all of this in mind

00:09:21,430 --> 00:09:25,570
the core maintainer has had a call to

00:09:24,130 --> 00:09:28,480
discuss whether we want it to be a

00:09:25,570 --> 00:09:31,600
top-level CN CF incubating project and

00:09:28,480 --> 00:09:33,640
because it seems like a natural fit we

00:09:31,600 --> 00:09:36,010
wrote up a proposal we presented it to

00:09:33,640 --> 00:09:41,140
the technical oversight committee or the

00:09:36,010 --> 00:09:43,450
TOC and the TOC is the committee in the

00:09:41,140 --> 00:09:45,430
CNC F that does the due diligence for

00:09:43,450 --> 00:09:48,760
the projects the technical projects that

00:09:45,430 --> 00:09:50,860
are in the foundation so we had a

00:09:48,760 --> 00:09:54,940
discussion with them they did some due

00:09:50,860 --> 00:09:57,850
diligence they had a vote we the vote

00:09:54,940 --> 00:10:00,990
was successful so now we're a CN CF

00:09:57,850 --> 00:10:04,420
project and are in the transition to

00:10:00,990 --> 00:10:08,170
doing all the things that that the CNC F

00:10:04,420 --> 00:10:10,210
requires of of our projects and we're

00:10:08,170 --> 00:10:13,000
really excited about this opportunity to

00:10:10,210 --> 00:10:15,430
support our community an ecosystem to

00:10:13,000 --> 00:10:18,010
the fullest and gain access to even more

00:10:15,430 --> 00:10:22,090
people to make Hjelm even a stronger

00:10:18,010 --> 00:10:24,880
project so so far we've talked about

00:10:22,090 --> 00:10:28,750
kubernetes and early I meant earlier I

00:10:24,880 --> 00:10:30,970
mentioned that as an end-user it was

00:10:28,750 --> 00:10:35,620
really important to us that kubernetes

00:10:30,970 --> 00:10:37,600
was vendor-neutral because we had trust

00:10:35,620 --> 00:10:40,180
that no big company could come in and

00:10:37,600 --> 00:10:41,500
make a decision and really sear the fear

00:10:40,180 --> 00:10:42,910
of the project in a completely different

00:10:41,500 --> 00:10:45,160
direction we knew that it would grow

00:10:42,910 --> 00:10:48,280
sustainability that the stakeholders

00:10:45,160 --> 00:10:50,770
would have some say in the decision

00:10:48,280 --> 00:10:53,140
making process and this would just be a

00:10:50,770 --> 00:10:56,500
better situation for everyone that was

00:10:53,140 --> 00:10:58,870
involved it's also really great for

00:10:56,500 --> 00:11:00,760
project maintainer x' like the helm

00:10:58,870 --> 00:11:03,370
project maintainer x' for example for a

00:11:00,760 --> 00:11:05,519
project to be vendor-neutral because

00:11:03,370 --> 00:11:09,160
this lowers the bay

00:11:05,519 --> 00:11:12,339
for people who want to contribute to our

00:11:09,160 --> 00:11:15,250
projects there they don't have to go

00:11:12,339 --> 00:11:17,290
through as many loopholes and all that

00:11:15,250 --> 00:11:20,800
so it's just a better and a smoother

00:11:17,290 --> 00:11:23,500
process it also helps the maintainer

00:11:20,800 --> 00:11:30,220
focus on the community's needs instead

00:11:23,500 --> 00:11:35,589
of one particular company's needs then

00:11:30,220 --> 00:11:37,630
we so in all transparency helm going

00:11:35,589 --> 00:11:40,810
into the CNC F was like a really natural

00:11:37,630 --> 00:11:42,850
and smooth process but now I want to

00:11:40,810 --> 00:11:45,550
switch gears a little bit and talk to

00:11:42,850 --> 00:11:48,029
you about a project from the perspective

00:11:45,550 --> 00:11:50,529
of someone who is just starting out

00:11:48,029 --> 00:11:52,959
someone who has created their own

00:11:50,529 --> 00:11:55,779
open-source project it's new it's

00:11:52,959 --> 00:11:57,490
gaining traction it's useful so let's

00:11:55,779 --> 00:12:00,850
let's talk about that a little bit home

00:11:57,490 --> 00:12:02,470
solves a big problem for us for our team

00:12:00,850 --> 00:12:04,420
in the process of developing

00:12:02,470 --> 00:12:06,970
applications that would run in

00:12:04,420 --> 00:12:09,370
kubernetes but while we were doing that

00:12:06,970 --> 00:12:12,279
we had some other challenges that we

00:12:09,370 --> 00:12:14,440
wanted to focus on as well one of the

00:12:12,279 --> 00:12:18,279
tools that we started working on was

00:12:14,440 --> 00:12:19,480
it's called draft so the idea is when

00:12:18,279 --> 00:12:21,459
you're developing containerized

00:12:19,480 --> 00:12:23,199
applications you may find yourself

00:12:21,459 --> 00:12:25,959
repeating yourself

00:12:23,199 --> 00:12:29,680
with the steps that you take over and

00:12:25,959 --> 00:12:32,790
over again for example you'll want to

00:12:29,680 --> 00:12:35,260
build your application container by

00:12:32,790 --> 00:12:37,300
writing a docker file and maybe run

00:12:35,260 --> 00:12:39,490
doing a darker build or using a

00:12:37,300 --> 00:12:42,790
different builder you'll want to push

00:12:39,490 --> 00:12:46,029
that image that you just created to a

00:12:42,790 --> 00:12:48,939
container registry write a helm chart or

00:12:46,029 --> 00:12:51,490
some kubernetes configuration reference

00:12:48,939 --> 00:12:54,279
the image that you just built in that

00:12:51,490 --> 00:12:56,110
configuration that you just wrote and

00:12:54,279 --> 00:12:58,810
then deploy your application to

00:12:56,110 --> 00:13:00,310
kubernetes and test it out and all the

00:12:58,810 --> 00:13:02,230
while you're using a lot of different

00:13:00,310 --> 00:13:05,050
tools and having to understand a lot of

00:13:02,230 --> 00:13:09,040
different layers of abstraction a lot of

00:13:05,050 --> 00:13:11,170
different technologies draft is a tool

00:13:09,040 --> 00:13:13,540
that helps those people be productive

00:13:11,170 --> 00:13:16,029
who really just care about building

00:13:13,540 --> 00:13:18,189
their application and developing and

00:13:16,029 --> 00:13:18,649
debugging it against kubernetes rather

00:13:18,189 --> 00:13:21,079
than

00:13:18,649 --> 00:13:25,069
understanding and working on kubernetes

00:13:21,079 --> 00:13:29,769
itself we live in a world where we can't

00:13:25,069 --> 00:13:29,769

YouTube URL: https://www.youtube.com/watch?v=1JmvyaAeT9U


