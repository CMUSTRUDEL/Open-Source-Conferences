Title: Assessing Project Risk Using CHAOSS Metrics - Sean P. Goggins & Jessica Wilkerson
Publication date: 2019-09-16
Playlist: Open Source Summit & Embedded Linux Conference NA 2019
Description: 
	Assessing Project Risk Using CHAOSS Metrics - Sean P. Goggins, University of Missouri & Jessica Wilkerson, Linux Foundation

Measuring individual, group, and organizational performance is a complex, layered endeavor. This session is framed to describe the challenges and opportunities for measuring the health and sustainability of open source software projects stemming from the first two years of the CHAOSS[1] projectâ€™s operations. In particular, this session will focus on one of the CHAOSS projectâ€™s areas-of-interest to develop: Project Risk.This Session Focuses on CHAOSS Risk Metrics Focus Areas:1. Security: Understand security processes and procedures associated with a project.2. Code Quality: Understand the quality of a project's source code.3. Licensing: Understand the potential IP issues in a project.4. Transparency: Understand what dimensions of the project are visible organically or through metrics; or, in contrast, what is not visible but should be?5. Sustainability: How active is the community around a given project?[1] http://chaoss.community
Captions: 
	00:00:00,089 --> 00:00:04,920
I'm gonna go right ahead cuz you're all

00:00:02,220 --> 00:00:07,620
here and anyone else can just wait

00:00:04,920 --> 00:00:10,559
so I'm Sean Goggins I represent the Kaos

00:00:07,620 --> 00:00:12,509
project at the Linux Foundation I'm also

00:00:10,559 --> 00:00:16,320
I work at the University of Missouri and

00:00:12,509 --> 00:00:17,550
computer science and several of you how

00:00:16,320 --> 00:00:21,930
many people have heard of the Kaos

00:00:17,550 --> 00:00:25,080
project before okay and how many of you

00:00:21,930 --> 00:00:28,039
have more than a very vague notion of

00:00:25,080 --> 00:00:31,859
what it does and and the aims of it

00:00:28,039 --> 00:00:33,450
Feuer okay so in this talk I'm gonna

00:00:31,859 --> 00:00:35,610
explain a little bit about the Kaos

00:00:33,450 --> 00:00:37,050
project which puts the risk metrics that

00:00:35,610 --> 00:00:39,360
we're talking about in a little bit of

00:00:37,050 --> 00:00:41,820
context and then I'm going to show you

00:00:39,360 --> 00:00:44,730
some of the risk metrics and a little

00:00:41,820 --> 00:00:47,910
conversation from you about what those

00:00:44,730 --> 00:00:49,350
metrics are and then facilitate a

00:00:47,910 --> 00:00:51,629
conversation to talk about your

00:00:49,350 --> 00:00:54,289
questions your concerns with regards to

00:00:51,629 --> 00:00:57,629
measuring risk in open source software

00:00:54,289 --> 00:00:59,489
so compliance and risk metrics are an

00:00:57,629 --> 00:01:02,039
extension of Kaos they're one of a

00:00:59,489 --> 00:01:03,660
number of working groups we always like

00:01:02,039 --> 00:01:05,040
to point out that Kaos has the support

00:01:03,660 --> 00:01:06,930
not only of the Linux Foundation but a

00:01:05,040 --> 00:01:09,439
number of other organizations this is

00:01:06,930 --> 00:01:12,000
just a subset so there's a lot of

00:01:09,439 --> 00:01:14,880
upstream and contributors that

00:01:12,000 --> 00:01:15,960
participate in chaos because they want

00:01:14,880 --> 00:01:18,090
to understand the health and

00:01:15,960 --> 00:01:21,000
sustainability of the software projects

00:01:18,090 --> 00:01:22,830
that they engage in and risk comes into

00:01:21,000 --> 00:01:25,049
play from a number of different

00:01:22,830 --> 00:01:27,090
important perspectives oftentimes if I'm

00:01:25,049 --> 00:01:28,829
the person purchasing a piece of

00:01:27,090 --> 00:01:31,079
software or deciding that I'm going to

00:01:28,829 --> 00:01:33,659
be an upstream contributor or somebody

00:01:31,079 --> 00:01:35,579
who uses the software but doesn't

00:01:33,659 --> 00:01:39,030
contribute back I want to look into how

00:01:35,579 --> 00:01:40,950
sustainable that project is Kaos has a

00:01:39,030 --> 00:01:43,710
mission we all have mission statements

00:01:40,950 --> 00:01:45,990
Chaos's is to establish implementation

00:01:43,710 --> 00:01:47,579
agnostic metrics for measuring these

00:01:45,990 --> 00:01:49,649
things that connect to open source

00:01:47,579 --> 00:01:51,479
health and sustainability and then to

00:01:49,649 --> 00:01:54,270
produce integrated open source software

00:01:51,479 --> 00:01:55,799
that analyzes those things so today I'm

00:01:54,270 --> 00:01:58,680
gonna talk a little bit about the risk

00:01:55,799 --> 00:02:00,360
metrics themselves and also about some

00:01:58,680 --> 00:02:04,140
software that we are using to measure

00:02:00,360 --> 00:02:05,610
them there's a fifth working group not

00:02:04,140 --> 00:02:08,069
listed here could the common working

00:02:05,610 --> 00:02:10,619
group that's led by Don Foster they're

00:02:08,069 --> 00:02:12,470
in the back the four other working

00:02:10,619 --> 00:02:13,970
groups inside of metrics are

00:02:12,470 --> 00:02:15,440
out of chaos our diversity and inclusion

00:02:13,970 --> 00:02:17,690
growth maturity in the client which is

00:02:15,440 --> 00:02:20,510
also called evolution now so maybe I

00:02:17,690 --> 00:02:22,280
should update my slides risk which is

00:02:20,510 --> 00:02:26,480
what we're gonna talk about and value

00:02:22,280 --> 00:02:29,510
and you can find us find us under these

00:02:26,480 --> 00:02:32,600
different URLs risk informs us about how

00:02:29,510 --> 00:02:35,120
much risk a project might pose in a

00:02:32,600 --> 00:02:38,390
community but we divide risk into a

00:02:35,120 --> 00:02:40,760
number of different key stakeholders so

00:02:38,390 --> 00:02:42,770
from one perspective we think about risk

00:02:40,760 --> 00:02:44,360
from a developer perspective from from a

00:02:42,770 --> 00:02:46,370
developer's point of view as a developer

00:02:44,360 --> 00:02:47,810
if I'm assessing the risk of the project

00:02:46,370 --> 00:02:49,790
what are the things that I'm thinking

00:02:47,810 --> 00:02:51,260
about I'm probably thinking about is

00:02:49,790 --> 00:02:52,790
this a project that if I invest my time

00:02:51,260 --> 00:02:54,500
in I'm going to learn something useful

00:02:52,790 --> 00:02:56,920
there'll be a community of people to

00:02:54,500 --> 00:02:59,840
help teach me things and I'll learn from

00:02:56,920 --> 00:03:01,340
it a contract lawyer might think of it

00:02:59,840 --> 00:03:03,290
or and can I make a living right a

00:03:01,340 --> 00:03:06,620
contract lawyer is thinking about

00:03:03,290 --> 00:03:08,750
licensing do does this piece of software

00:03:06,620 --> 00:03:11,480
contain licenses that if I include it in

00:03:08,750 --> 00:03:13,580
my product are going to force for

00:03:11,480 --> 00:03:15,980
example my product to all be GPL so

00:03:13,580 --> 00:03:18,170
there's a concern about licensing that

00:03:15,980 --> 00:03:19,880
the contract lawyers think about and

00:03:18,170 --> 00:03:21,320
then there's also a concern about

00:03:19,880 --> 00:03:23,330
understanding what is in a piece of

00:03:21,320 --> 00:03:26,239
software so this is especially important

00:03:23,330 --> 00:03:28,190
in the safety critical arena so some of

00:03:26,239 --> 00:03:29,989
the folks who participate in the risk

00:03:28,190 --> 00:03:32,810
working group are in medical devices and

00:03:29,989 --> 00:03:36,530
auto linux auto grade learning projects

00:03:32,810 --> 00:03:40,670
and we understand all of the things that

00:03:36,530 --> 00:03:44,120
are in a piece of software and in these

00:03:40,670 --> 00:03:46,130
safety critical cases so essentially the

00:03:44,120 --> 00:03:48,980
chaos mission is kind of from a risk

00:03:46,130 --> 00:03:51,200
perspective is to evaluate risk as this

00:03:48,980 --> 00:03:53,150
likelihood of loss compared to the

00:03:51,200 --> 00:03:56,110
impact of loss so that's a general

00:03:53,150 --> 00:03:58,580
framework for how risk is assessed and

00:03:56,110 --> 00:04:00,380
so the impact of a loss and the

00:03:58,580 --> 00:04:02,900
likelihood of a loss is very low if we

00:04:00,380 --> 00:04:04,670
just hold a meeting it's very high

00:04:02,900 --> 00:04:07,519
in the case of the film wargames how

00:04:04,670 --> 00:04:09,799
many people here is wargames irrelevant

00:04:07,519 --> 00:04:11,810
cultural reference for it's where

00:04:09,799 --> 00:04:14,269
Matthew Broderick accidentally causes a

00:04:11,810 --> 00:04:17,840
nuclear war by playing a game of chess

00:04:14,269 --> 00:04:19,729
on a computer high risk high risk of

00:04:17,840 --> 00:04:23,180
loss high impact

00:04:19,729 --> 00:04:24,760
evel knievel very very low likelihood of

00:04:23,180 --> 00:04:28,780
loss

00:04:24,760 --> 00:04:31,360
but ha and a high likelihood of loss but

00:04:28,780 --> 00:04:33,100
low impact he's one person and then we

00:04:31,360 --> 00:04:34,780
have a bunch of open source projects

00:04:33,100 --> 00:04:37,389
where perhaps the impact could be great

00:04:34,780 --> 00:04:39,580
but the likelihood is small so in terms

00:04:37,389 --> 00:04:41,290
of how much risk matters it's often and

00:04:39,580 --> 00:04:43,840
whether or not risk matters depends on

00:04:41,290 --> 00:04:45,940
where you fall along this dimensionality

00:04:43,840 --> 00:04:49,750
of what the impact is and the likelihood

00:04:45,940 --> 00:04:52,090
is so a trustworthy device is one

00:04:49,750 --> 00:04:53,650
particular specific example that we use

00:04:52,090 --> 00:04:55,810
in the risk working group to talk about

00:04:53,650 --> 00:04:58,120
the device containing hardware and

00:04:55,810 --> 00:05:00,550
software and some logic so we want to

00:04:58,120 --> 00:05:02,860
understand is it secure from a

00:05:00,550 --> 00:05:04,150
cybersecurity perspective it doesn't

00:05:02,860 --> 00:05:07,030
provide a reasonable level of

00:05:04,150 --> 00:05:09,430
availability against intrusion and

00:05:07,030 --> 00:05:12,310
misuse and is it suited to doing its

00:05:09,430 --> 00:05:14,740
attendant intended functions summit some

00:05:12,310 --> 00:05:18,880
basic security principles are in fact

00:05:14,740 --> 00:05:20,530
adhere to buy that product how many are

00:05:18,880 --> 00:05:24,100
there folks in here that work in safety

00:05:20,530 --> 00:05:26,350
critical software systems ok when you

00:05:24,100 --> 00:05:30,030
think about risk are these the kinds of

00:05:26,350 --> 00:05:32,860
things that enter into your mind and

00:05:30,030 --> 00:05:36,040
when those things enter into your mind

00:05:32,860 --> 00:05:38,110
we think about quality of code whether

00:05:36,040 --> 00:05:40,120
or not you're allowed to use it when you

00:05:38,110 --> 00:05:43,450
use it as it's safe and can it be

00:05:40,120 --> 00:05:45,250
subverted in the future so there's a

00:05:43,450 --> 00:05:49,200
number of projects within the Linux

00:05:45,250 --> 00:05:53,050
Foundation that are looking at risk and

00:05:49,200 --> 00:05:54,669
sort of contribute to it s PDX sort of

00:05:53,050 --> 00:05:57,520
defined to software Bill of Materials

00:05:54,669 --> 00:05:59,289
piece and fuss ology and do socks are

00:05:57,520 --> 00:06:01,930
two components of software do socks is

00:05:59,289 --> 00:06:05,190
now called auger software Bill of

00:06:01,930 --> 00:06:07,630
Materials Zephyrs a safety security

00:06:05,190 --> 00:06:09,700
elisa is a working group for enabling

00:06:07,630 --> 00:06:13,140
Linux and safety critical applications

00:06:09,700 --> 00:06:15,460
and obviously CIA best practices so

00:06:13,140 --> 00:06:18,610
that's kind of an overview of risk as a

00:06:15,460 --> 00:06:22,780
concept how chaos the project is broken

00:06:18,610 --> 00:06:24,910
down risk is into five key four focus

00:06:22,780 --> 00:06:27,130
areas when we think about risk

00:06:24,910 --> 00:06:30,669
not every focus area applies in every

00:06:27,130 --> 00:06:33,820
domain one is accurate identification at

00:06:30,669 --> 00:06:36,560
the exit is cold quality security safety

00:06:33,820 --> 00:06:39,810
critical use and licensing

00:06:36,560 --> 00:06:40,680
so if we want to think of and we name

00:06:39,810 --> 00:06:41,610
some of these things a little bit

00:06:40,680 --> 00:06:43,770
differently so if we think about

00:06:41,610 --> 00:06:46,850
business risk our goal is to understand

00:06:43,770 --> 00:06:49,140
how active is the community around a

00:06:46,850 --> 00:06:51,540
piece of software it's able to be able

00:06:49,140 --> 00:06:54,060
to support it and so we have two factors

00:06:51,540 --> 00:06:56,040
one is elephant factor elephant factor

00:06:54,060 --> 00:06:57,570
has I think many of you likely know is

00:06:56,040 --> 00:06:59,610
how many organizations are contributing

00:06:57,570 --> 00:07:02,790
to that piece of software so that we

00:06:59,610 --> 00:07:05,250
know if organization that does most of

00:07:02,790 --> 00:07:07,020
it we have a higher level of risk from a

00:07:05,250 --> 00:07:10,230
business perspective of losing something

00:07:07,020 --> 00:07:14,250
when we go to support that piece of

00:07:10,230 --> 00:07:17,010
software committers is very interesting

00:07:14,250 --> 00:07:20,280
so the evolution working group focuses

00:07:17,010 --> 00:07:21,930
on contributors and contributors is a

00:07:20,280 --> 00:07:25,320
broader umbrella that includes people

00:07:21,930 --> 00:07:27,420
who comment on issues create issues and

00:07:25,320 --> 00:07:31,110
but don't necessarily can contribute

00:07:27,420 --> 00:07:32,460
code in the risk working group it's we

00:07:31,110 --> 00:07:33,660
kind of identified especially working

00:07:32,460 --> 00:07:36,210
with the safety-critical

00:07:33,660 --> 00:07:37,500
group that the number and from a

00:07:36,210 --> 00:07:38,310
business risk perspective that the

00:07:37,500 --> 00:07:40,800
number of people who are actually

00:07:38,310 --> 00:07:42,210
committing code distinct from the

00:07:40,800 --> 00:07:43,710
overall contributors is important

00:07:42,210 --> 00:07:45,650
because there's a nut there's a need to

00:07:43,710 --> 00:07:48,060
understand how many people understand

00:07:45,650 --> 00:07:49,980
how this thing works like what is my

00:07:48,060 --> 00:07:51,960
risk and you might call this a bus

00:07:49,980 --> 00:07:55,230
factor but it's a little bit more than a

00:07:51,960 --> 00:07:57,480
bus factor it's it's trying to ascertain

00:07:55,230 --> 00:07:58,920
is there enough inertia and work

00:07:57,480 --> 00:08:00,300
occurring around this community and

00:07:58,920 --> 00:08:02,220
enough people that have knowledge of it

00:08:00,300 --> 00:08:06,540
that I think it's going to become a and

00:08:02,220 --> 00:08:09,600
B remain a going concern test coverage

00:08:06,540 --> 00:08:11,790
is our second area focus area or code

00:08:09,600 --> 00:08:13,680
quality and code quality the one metric

00:08:11,790 --> 00:08:16,080
that we've released formally so far is

00:08:13,680 --> 00:08:17,940
test coverage which is very important in

00:08:16,080 --> 00:08:20,280
the safety critical software domain I'm

00:08:17,940 --> 00:08:22,290
I worked for a pacemaker manufacturer

00:08:20,280 --> 00:08:23,490
for a number of years and then around

00:08:22,290 --> 00:08:26,610
the industry for a number of years after

00:08:23,490 --> 00:08:28,170
that and we had to cover every condition

00:08:26,610 --> 00:08:31,099
that could be imagined right we had to

00:08:28,170 --> 00:08:33,300
test every path and do everything and

00:08:31,099 --> 00:08:35,610
depending on the language that is being

00:08:33,300 --> 00:08:37,140
used to develop software we can kind of

00:08:35,610 --> 00:08:39,120
look at test coverage from two

00:08:37,140 --> 00:08:41,580
perspectives one is subroutine coverage

00:08:39,120 --> 00:08:43,620
and the other is a statement coverage

00:08:41,580 --> 00:08:46,020
and so we want a high percentage in a

00:08:43,620 --> 00:08:48,180
safety critical system to be tested are

00:08:46,020 --> 00:08:49,850
there are there people who work with

00:08:48,180 --> 00:08:52,250
safety critical systems whose

00:08:49,850 --> 00:08:53,839
who have to have a hundred percent test

00:08:52,250 --> 00:08:56,240
coverage at the subroutine statement

00:08:53,839 --> 00:08:57,980
level or what are some what are some

00:08:56,240 --> 00:08:59,300
thresholds that are common in your

00:08:57,980 --> 00:09:00,680
industries and you have to say your

00:08:59,300 --> 00:09:04,009
industry or a company or anything I'm

00:09:00,680 --> 00:09:09,259
looking for general answers since this

00:09:04,009 --> 00:09:11,240
is being recorded about 90% is about

00:09:09,259 --> 00:09:13,730
right and our is there a qualitative

00:09:11,240 --> 00:09:15,829
dimension to determining like are there

00:09:13,730 --> 00:09:18,800
certain pieces of the code that have to

00:09:15,829 --> 00:09:21,829
be more covered than others right

00:09:18,800 --> 00:09:24,380
yeah and you know something that's not

00:09:21,829 --> 00:09:26,480
covered in this in test coverage is

00:09:24,380 --> 00:09:29,269
maybe how are your fail-safes managed

00:09:26,480 --> 00:09:31,190
right so you maybe you can't coverage

00:09:29,269 --> 00:09:32,990
maybe you can't cover every subroutine

00:09:31,190 --> 00:09:35,389
or every statement this is specifically

00:09:32,990 --> 00:09:37,370
how the chaos metric will give you a

00:09:35,389 --> 00:09:39,980
number these we plug in the number of

00:09:37,370 --> 00:09:41,990
subroutines are the subroutines that we

00:09:39,980 --> 00:09:43,660
test in the total subroutines and the

00:09:41,990 --> 00:09:45,800
statements are the statements executed

00:09:43,660 --> 00:09:47,839
against the total statements which we

00:09:45,800 --> 00:09:50,750
can use code testing coverage tools to

00:09:47,839 --> 00:09:52,250
ascertain but if you're building a

00:09:50,750 --> 00:09:54,290
safety critical system there's probably

00:09:52,250 --> 00:09:56,899
another metric about the failsafe like

00:09:54,290 --> 00:10:00,259
how do you evaluate the failsafe on a

00:09:56,899 --> 00:10:01,910
system and are there and I'm curious

00:10:00,259 --> 00:10:04,279
from a chaos' perspective I'll just

00:10:01,910 --> 00:10:06,019
elicit do you have are there test

00:10:04,279 --> 00:10:07,610
coverage tools that will evaluate the

00:10:06,019 --> 00:10:10,519
failsafe conditions and a piece of

00:10:07,610 --> 00:10:13,189
software or is that largely you test the

00:10:10,519 --> 00:10:16,040
thing that the software goes in give it

00:10:13,189 --> 00:10:17,899
conditions that it should not react to

00:10:16,040 --> 00:10:19,930
and then just show that it actually

00:10:17,899 --> 00:10:22,970
shuts down is that kind of how you do it

00:10:19,930 --> 00:10:24,620
all right so other ways that that is

00:10:22,970 --> 00:10:28,029
simulated or do you have to use the real

00:10:24,620 --> 00:10:28,029
devices that you put things in

00:10:33,309 --> 00:10:39,949
right real so ultimately you have to put

00:10:38,509 --> 00:10:41,809
it in a real physical system but you

00:10:39,949 --> 00:10:45,980
might do some simulation before you do

00:10:41,809 --> 00:10:48,949
that so any questions about like test

00:10:45,980 --> 00:10:53,360
coverage is a useful focus area for or

00:10:48,949 --> 00:10:56,240
as a useful metric for code quality no

00:10:53,360 --> 00:10:57,860
okay we also have licensing so this

00:10:56,240 --> 00:11:00,800
Trump's off did you have a question

00:10:57,860 --> 00:11:03,559
right so this jumps off from our safety

00:11:00,800 --> 00:11:05,240
critical you know code quality area to

00:11:03,559 --> 00:11:06,439
the focus area of licensing and so the

00:11:05,240 --> 00:11:08,240
goal is really to understand

00:11:06,439 --> 00:11:11,779
intellectual property issues which is a

00:11:08,240 --> 00:11:13,730
separate set of concerns for risk and we

00:11:11,779 --> 00:11:16,970
look specifically at the number of

00:11:13,730 --> 00:11:19,459
licenses the coverage so how much code

00:11:16,970 --> 00:11:21,019
how many files in this in this system

00:11:19,459 --> 00:11:25,850
actually declare the license at the file

00:11:21,019 --> 00:11:28,519
level and what are the licenses that are

00:11:25,850 --> 00:11:31,850
completely declared so do socks or auger

00:11:28,519 --> 00:11:33,920
s BOM gives us a set of statistics for a

00:11:31,850 --> 00:11:35,329
particular repository that says here's

00:11:33,920 --> 00:11:38,749
your total number of files here's the

00:11:35,329 --> 00:11:40,850
number with files declared and so that's

00:11:38,749 --> 00:11:42,860
your license coverage and that may or

00:11:40,850 --> 00:11:45,559
may not be sufficient depending on your

00:11:42,860 --> 00:11:47,600
IP concerns but at least with the tools

00:11:45,559 --> 00:11:50,929
that we're building you can know what

00:11:47,600 --> 00:11:52,939
that is are there others besides these

00:11:50,929 --> 00:11:54,319
kinds of license counting metrics are

00:11:52,939 --> 00:11:57,829
there other things that people with

00:11:54,319 --> 00:12:00,740
concerns about licensing would like to

00:11:57,829 --> 00:12:02,120
see addressed as a metric or would like

00:12:00,740 --> 00:12:04,839
to see measured in some kind of

00:12:02,120 --> 00:12:04,839
automated way

00:12:11,480 --> 00:12:14,480
right

00:12:21,240 --> 00:12:24,240
right

00:12:32,340 --> 00:12:39,180
yeah yeah and so I mean I think that's

00:12:36,180 --> 00:12:41,220
something that tools can especially put

00:12:39,180 --> 00:12:45,150
into place I don't know if that violates

00:12:41,220 --> 00:12:49,190
the the agnostic nosov chaos to say that

00:12:45,150 --> 00:12:49,190
or is it just a factual statement really

00:12:49,730 --> 00:12:55,140
so the the actual chaos project is

00:12:53,610 --> 00:12:56,279
agnostic we try to just define the

00:12:55,140 --> 00:12:59,040
metrics and the things that you measure

00:12:56,279 --> 00:13:01,290
and not assign value to them then we

00:12:59,040 --> 00:13:02,760
have a set of tools auger and grimore

00:13:01,290 --> 00:13:05,160
lab are the main ones that we're using

00:13:02,760 --> 00:13:09,450
to calculate these metrics and so we've

00:13:05,160 --> 00:13:11,250
put together a set of information inside

00:13:09,450 --> 00:13:13,830
of the tool called auger which I'll talk

00:13:11,250 --> 00:13:16,080
about here a little bit that sort of get

00:13:13,830 --> 00:13:20,460
at risk and so I'm going to jump out of

00:13:16,080 --> 00:13:23,310
this presentation and just into some Sun

00:13:20,460 --> 00:13:26,100
auger stuff so the first thing you see

00:13:23,310 --> 00:13:28,100
when you get into auger is these are the

00:13:26,100 --> 00:13:30,630
working groups these are the clusters of

00:13:28,100 --> 00:13:32,880
projects and the repositories in them

00:13:30,630 --> 00:13:36,180
that have the biggest anomalies over a

00:13:32,880 --> 00:13:38,160
period of time so if you have risk

00:13:36,180 --> 00:13:40,680
metrics that you're concerned about you

00:13:38,160 --> 00:13:42,750
can for example if you want to know when

00:13:40,680 --> 00:13:44,760
a new license gets injected into a set

00:13:42,750 --> 00:13:46,589
of source code that you're tracking you

00:13:44,760 --> 00:13:48,570
can set up a signal that will put this

00:13:46,589 --> 00:13:49,710
on your dashboard as an insight that'll

00:13:48,570 --> 00:13:52,140
and will actually send you a slack

00:13:49,710 --> 00:13:54,030
message and say hey somebody put a GPL

00:13:52,140 --> 00:13:55,530
license in your proprietary code and

00:13:54,030 --> 00:13:57,839
when you burn this to a router you lose

00:13:55,530 --> 00:14:00,180
a billion dollars they may not be able

00:13:57,839 --> 00:14:02,190
to draw all of those conclusions but it

00:14:00,180 --> 00:14:05,040
can sort of you could be notified when

00:14:02,190 --> 00:14:08,250
that kind of thing happens not in a

00:14:05,040 --> 00:14:09,620
dashboard like scenario and if you like

00:14:08,250 --> 00:14:15,060
when we get to we talked about

00:14:09,620 --> 00:14:17,910
sustainability so if I hit like I see if

00:14:15,060 --> 00:14:20,370
I hit OpenSSL I might want to see like

00:14:17,910 --> 00:14:22,140
what is this this signal or this insight

00:14:20,370 --> 00:14:24,690
and we can see that the number of

00:14:22,140 --> 00:14:27,240
commits dramatically increased at one

00:14:24,690 --> 00:14:29,490
point in OpenSSL and then started to

00:14:27,240 --> 00:14:31,770
tail off over time and we all probably

00:14:29,490 --> 00:14:34,080
can guess why and when that might have

00:14:31,770 --> 00:14:35,880
happened but if you want to look for

00:14:34,080 --> 00:14:37,410
sort of radical changes in a project

00:14:35,880 --> 00:14:40,650
that's another signal from a risk

00:14:37,410 --> 00:14:43,370
perspective that that can be helpful and

00:14:40,650 --> 00:14:46,079
if you want to really understand

00:14:43,370 --> 00:14:49,079
elephant factor or bus factor

00:14:46,079 --> 00:14:50,670
you can get into looking at what is the

00:14:49,079 --> 00:14:52,889
what's the real pattern of who is

00:14:50,670 --> 00:14:54,449
contributing right so I might have a

00:14:52,889 --> 00:14:56,550
statistic where I have a thousand

00:14:54,449 --> 00:14:58,199
contributors inside of a project but

00:14:56,550 --> 00:15:00,660
there could be maybe like eight people

00:14:58,199 --> 00:15:03,600
that contribute 90 percent of the code

00:15:00,660 --> 00:15:05,009
so we want to get a sense of who are the

00:15:03,600 --> 00:15:07,559
top contributors and what's their

00:15:05,009 --> 00:15:09,089
relative level of contribution from a

00:15:07,559 --> 00:15:11,970
business risk perspective this this

00:15:09,089 --> 00:15:15,420
tells us a great deal about when when

00:15:11,970 --> 00:15:16,799
things are being committed and how

00:15:15,420 --> 00:15:20,040
committed the different committers are

00:15:16,799 --> 00:15:22,980
so this is an example of graph QL W G

00:15:20,040 --> 00:15:25,559
which is a graph QL project and we can

00:15:22,980 --> 00:15:28,709
look at the top ten authors and see that

00:15:25,559 --> 00:15:30,569
we have sort of a very episodic set of

00:15:28,709 --> 00:15:32,999
commits but we have at least five

00:15:30,569 --> 00:15:35,489
developers that are routinely committing

00:15:32,999 --> 00:15:37,019
over a long period of time over the life

00:15:35,489 --> 00:15:39,480
of the project so you least have some

00:15:37,019 --> 00:15:41,790
sense that this is a going concern and

00:15:39,480 --> 00:15:45,179
that commits continue on this project

00:15:41,790 --> 00:15:47,610
you can also compare repos with each

00:15:45,179 --> 00:15:49,199
other so one indication of the

00:15:47,610 --> 00:15:51,779
sustainability from a business risk

00:15:49,199 --> 00:15:53,610
perspective of a project is whether or

00:15:51,779 --> 00:15:54,869
not people are opening issues and

00:15:53,610 --> 00:15:57,779
contributing to the community and

00:15:54,869 --> 00:15:59,429
actually identifying code and then you

00:15:57,779 --> 00:16:01,439
can compare that to some other project

00:15:59,429 --> 00:16:03,600
that you're familiar with so here I've

00:16:01,439 --> 00:16:07,439
compared two projects inside of graph QL

00:16:03,600 --> 00:16:10,259
and I'm looking at the issues opened and

00:16:07,439 --> 00:16:11,939
the issues closed in in each of these

00:16:10,259 --> 00:16:13,799
projects and if I want to include it in

00:16:11,939 --> 00:16:16,350
a PowerPoint I can download that

00:16:13,799 --> 00:16:19,279
information and I can actually decide to

00:16:16,350 --> 00:16:25,350
maybe compare even another project

00:16:19,279 --> 00:16:27,799
inside of it and and get that data put

00:16:25,350 --> 00:16:27,799
onto it

00:16:31,290 --> 00:16:34,220
possibly

00:16:37,110 --> 00:16:45,300
maybe it's a it's gonna slow today come

00:16:43,170 --> 00:16:47,520
back to that leader and then finally if

00:16:45,300 --> 00:16:50,010
you hit those little risk button there

00:16:47,520 --> 00:16:53,130
are some specific metrics that start to

00:16:50,010 --> 00:16:54,990
address risk and this is the graph QL

00:16:53,130 --> 00:16:56,640
again and it shows you the number of

00:16:54,990 --> 00:16:58,830
forks forks is another indicator of

00:16:56,640 --> 00:17:02,220
business viability the number of

00:16:58,830 --> 00:17:04,320
committers per week is another source of

00:17:02,220 --> 00:17:06,089
business viability indication and the

00:17:04,320 --> 00:17:07,830
license is declared which we broke

00:17:06,089 --> 00:17:13,010
apparently unless I refresh it and it

00:17:07,830 --> 00:17:15,120
happens to work now no and then finally

00:17:13,010 --> 00:17:17,280
one of the things that people have been

00:17:15,120 --> 00:17:20,070
asking for a lot is could I have a

00:17:17,280 --> 00:17:21,810
software Billa material so the aim is

00:17:20,070 --> 00:17:23,910
always that from a risk perspective

00:17:21,810 --> 00:17:26,760
especially what I'm trying to understand

00:17:23,910 --> 00:17:27,990
from a like the licensing and code

00:17:26,760 --> 00:17:29,970
coverage perspective what are the

00:17:27,990 --> 00:17:32,340
packages that are included in this open

00:17:29,970 --> 00:17:35,100
source project that I'm I'm using we use

00:17:32,340 --> 00:17:37,380
do Sox which is now called auger s BOM

00:17:35,100 --> 00:17:39,990
and it actually generates a full report

00:17:37,380 --> 00:17:43,200
of literally every single file and the

00:17:39,990 --> 00:17:46,020
commit hash for that file so that you

00:17:43,200 --> 00:17:48,840
can get a sense of of what it is and

00:17:46,020 --> 00:17:51,150
then you get also a sense of the

00:17:48,840 --> 00:17:54,810
different relationships of the commits

00:17:51,150 --> 00:17:56,970
so this is the package the supplier a

00:17:54,810 --> 00:17:59,880
lot of information that can or cannot be

00:17:56,970 --> 00:18:02,310
declared in an SPD X document so to the

00:17:59,880 --> 00:18:04,500
extent that you have a product or an

00:18:02,310 --> 00:18:07,380
open source project that wants to be in

00:18:04,500 --> 00:18:09,210
a safety critical space or wants to be

00:18:07,380 --> 00:18:10,590
in a license compliant space where they

00:18:09,210 --> 00:18:11,700
know that the people who are going to

00:18:10,590 --> 00:18:14,100
work be working with that project

00:18:11,700 --> 00:18:15,660
upstream have those concerns I think

00:18:14,100 --> 00:18:17,700
those projects are generally more likely

00:18:15,660 --> 00:18:19,440
to include this kind of information

00:18:17,700 --> 00:18:22,350
inside of themselves because they know

00:18:19,440 --> 00:18:24,420
someone's going to evaluate that even if

00:18:22,350 --> 00:18:26,310
you don't include that information or

00:18:24,420 --> 00:18:28,890
project doesn't we can still see a

00:18:26,310 --> 00:18:31,680
listing of the files and it's a pretty

00:18:28,890 --> 00:18:33,870
substantial list here right but you know

00:18:31,680 --> 00:18:37,050
us being folks who are somewhat

00:18:33,870 --> 00:18:38,700
experienced we can go look at each of

00:18:37,050 --> 00:18:41,130
these files and start to get a sense of

00:18:38,700 --> 00:18:43,650
the directories that they're in and what

00:18:41,130 --> 00:18:47,490
kind of files they might contain or sub

00:18:43,650 --> 00:18:49,620
projects they might include so this is

00:18:47,490 --> 00:18:50,460
more of a tool that lets you see a full

00:18:49,620 --> 00:18:53,340
scan of the

00:18:50,460 --> 00:18:55,440
oh and go through the whole thing in one

00:18:53,340 --> 00:18:57,179
page and use your own experience with

00:18:55,440 --> 00:18:59,369
open source software to scan it as

00:18:57,179 --> 00:19:01,799
opposed to clicking on or CD into a

00:18:59,369 --> 00:19:03,450
bunch of different directories it

00:19:01,799 --> 00:19:05,820
essentially gives you a place where you

00:19:03,450 --> 00:19:07,350
can apply your knowledge as a as a saw

00:19:05,820 --> 00:19:10,320
open source software professional and

00:19:07,350 --> 00:19:15,480
scan the information are there any

00:19:10,320 --> 00:19:18,830
questions right now my questions about

00:19:15,480 --> 00:19:22,289
risk are there dimensions of risk that

00:19:18,830 --> 00:19:27,809
you care about that I haven't talked

00:19:22,289 --> 00:19:29,789
about so if we go back to sort of the

00:19:27,809 --> 00:19:35,490
focus areas of business risk code

00:19:29,789 --> 00:19:37,889
quality licensing are there are there

00:19:35,490 --> 00:19:40,769
concerns that you have outside of

00:19:37,889 --> 00:19:43,379
business risk code quality or licensing

00:19:40,769 --> 00:19:47,480
things that you think of as an element

00:19:43,379 --> 00:19:47,480
of risk and the work that you do

00:20:05,190 --> 00:20:17,970
right so are there are there things that

00:20:16,059 --> 00:20:20,529
you would look for in a repository to

00:20:17,970 --> 00:20:22,799
try to identify that like if I went

00:20:20,529 --> 00:20:22,799
through

00:20:40,570 --> 00:20:46,210
my Mac is so smart that it wants to

00:20:42,580 --> 00:20:50,200
mirror displays if I go out of it

00:20:46,210 --> 00:20:52,030
so like this this screen here yeah so

00:20:50,200 --> 00:20:53,530
and the thing about organ and we're

00:20:52,030 --> 00:20:55,270
working on technology to sort of

00:20:53,530 --> 00:20:57,940
automatically then have organizations

00:20:55,270 --> 00:21:00,520
but it's tricky right and identifying

00:20:57,940 --> 00:21:02,020
developer aliases is also a tricky

00:21:00,520 --> 00:21:03,400
business though we have strategies that

00:21:02,020 --> 00:21:05,350
we use to do it in grimore lab has

00:21:03,400 --> 00:21:07,540
something we call sorting hat which

00:21:05,350 --> 00:21:09,760
seeks to do that as well

00:21:07,540 --> 00:21:11,140
one of the projects that the risk group

00:21:09,760 --> 00:21:12,760
and the diversity inclusion groups

00:21:11,140 --> 00:21:14,980
inside of chaos are looking at this year

00:21:12,760 --> 00:21:17,680
is leveraging hyper ledger indie as a

00:21:14,980 --> 00:21:20,050
single sign-on technology where we could

00:21:17,680 --> 00:21:22,140
possibly in enable developers to be able

00:21:20,050 --> 00:21:24,370
to give some of their information to us

00:21:22,140 --> 00:21:26,560
in a way that's trusted that they

00:21:24,370 --> 00:21:28,600
control so it's encrypted it's federated

00:21:26,560 --> 00:21:31,660
there's no honeypot for anyone to go

00:21:28,600 --> 00:21:33,460
after those are ways we think that we

00:21:31,660 --> 00:21:35,530
might be able to systematically enhance

00:21:33,460 --> 00:21:37,930
what we know about developers on any

00:21:35,530 --> 00:21:39,880
particular project but as any of you

00:21:37,930 --> 00:21:42,040
that have tried to track this know a lot

00:21:39,880 --> 00:21:44,140
of times it's a very manual effort it

00:21:42,040 --> 00:21:46,000
actually takes a lot of human labor to

00:21:44,140 --> 00:21:48,550
keep up with who the organizations

00:21:46,000 --> 00:21:57,190
contributing are and these statistics

00:21:48,550 --> 00:22:04,620
certainly like any it can be gamed so as

00:21:57,190 --> 00:22:04,620
we think about yeah thank you

00:22:10,060 --> 00:22:15,370
that's weird

00:22:20,470 --> 00:22:24,930
this is behaving in a very non

00:22:22,240 --> 00:22:28,570
deterministic way right now

00:22:24,930 --> 00:22:31,720
yeah and it's it's like I say mirror

00:22:28,570 --> 00:22:39,850
displays and it goes back to I know what

00:22:31,720 --> 00:22:41,710
I should do if I if I D yeah if I had to

00:22:39,850 --> 00:22:53,040
take the web browser out of fullscreen

00:22:41,710 --> 00:22:53,040
was her question I missed yeah right

00:22:57,750 --> 00:23:01,360
that's a that'd be an intense an

00:22:59,800 --> 00:23:04,920
interesting metric you sort of like a

00:23:01,360 --> 00:23:04,920
help site coverage like

00:23:12,630 --> 00:23:15,530
right

00:23:17,759 --> 00:23:23,190
that's a really good idea yeah

00:23:36,640 --> 00:23:43,990
and that's a so we keep track of the

00:23:41,049 --> 00:23:47,769
timestamp that something's committed at

00:23:43,990 --> 00:23:50,470
and yet doesn't give us the IP address

00:23:47,769 --> 00:23:53,309
that it's committed from so there's a

00:23:50,470 --> 00:23:53,309
little bit I mean in

00:24:00,830 --> 00:24:07,429
isn't that the asserted location though

00:24:03,359 --> 00:24:07,429
is it that's not like track

00:24:07,740 --> 00:24:10,839
[Music]

00:24:17,930 --> 00:24:28,980
so night yeah like bilocation literally

00:24:21,390 --> 00:24:33,060
on github is earth that's I so I'm from

00:24:28,980 --> 00:24:34,800
Earth and and I suppose but you're

00:24:33,060 --> 00:24:47,730
saying github actually tracks the IP

00:24:34,800 --> 00:24:49,830
address for the commit comes from yeah

00:24:47,730 --> 00:24:51,390
that base that's only based on the IP

00:24:49,830 --> 00:24:53,130
that it's can come from it's the only

00:24:51,390 --> 00:24:55,920
thing probably get that is through the

00:24:53,130 --> 00:24:59,580
IP because like for example if I'm

00:24:55,920 --> 00:25:01,940
thinking of countries that we might be

00:24:59,580 --> 00:25:04,530
concerned about for different reasons

00:25:01,940 --> 00:25:06,990
it's pretty commonplace in countries

00:25:04,530 --> 00:25:09,450
that have export restrictions with the

00:25:06,990 --> 00:25:11,610
united states that the committers from

00:25:09,450 --> 00:25:13,140
those locations use VPNs that let them

00:25:11,610 --> 00:25:17,550
pretend they're committing from

00:25:13,140 --> 00:25:24,560
somewhere else right and so i think

00:25:17,550 --> 00:25:27,420
under strategy for that is is one wait

00:25:24,560 --> 00:25:29,130
so what are some other like so i can

00:25:27,420 --> 00:25:32,610
think of some proxies that could

00:25:29,130 --> 00:25:34,350
evaluate risk i could think about the

00:25:32,610 --> 00:25:38,220
frequency of changes to a particular

00:25:34,350 --> 00:25:41,880
file i could think of if i know that

00:25:38,220 --> 00:25:43,800
certain files are critical or might it

00:25:41,880 --> 00:25:47,460
might be more prone to be the ones that

00:25:43,800 --> 00:25:49,800
expose you to a like an open ssl type

00:25:47,460 --> 00:25:51,450
bug or something like that we could scan

00:25:49,800 --> 00:25:54,390
for things like that i think there are

00:25:51,450 --> 00:26:00,140
security scanning tools that look for

00:25:54,390 --> 00:26:00,140
for those bugs and bounty systems i

00:26:00,410 --> 00:26:04,920
think if if I was so if I was monitoring

00:26:03,240 --> 00:26:06,780
a project let's say it already put it

00:26:04,920 --> 00:26:09,150
are there projects that do you do this

00:26:06,780 --> 00:26:11,580
like to monitor projects that you're

00:26:09,150 --> 00:26:13,890
already participating in or using or

00:26:11,580 --> 00:26:14,910
consuming upstream or are there earlier

00:26:13,890 --> 00:26:16,800
are you kind of using that as an

00:26:14,910 --> 00:26:19,950
evaluative indicator when you're trying

00:26:16,800 --> 00:26:22,490
to decide what to do if you don't mind

00:26:19,950 --> 00:26:22,490
me you just

00:26:29,980 --> 00:26:38,950
so so please don't provide that data

00:26:33,980 --> 00:26:40,539
because you have enough work to do yeah

00:26:38,950 --> 00:26:43,879
okay

00:26:40,539 --> 00:26:45,769
other other risk concerns outside of the

00:26:43,879 --> 00:26:48,129
focus areas that we're currently working

00:26:45,769 --> 00:26:48,129
in

00:26:48,399 --> 00:26:56,989
so one my last event our thing is really

00:26:54,139 --> 00:26:59,539
finding out who's interested in working

00:26:56,989 --> 00:27:01,489
in these domains if there's anyone in

00:26:59,539 --> 00:27:03,440
the room who's interested in helping us

00:27:01,489 --> 00:27:04,899
to develop risk metrics as part of the

00:27:03,440 --> 00:27:07,429
chaos project or if you have a

00:27:04,899 --> 00:27:09,619
particular thing that you would like to

00:27:07,429 --> 00:27:11,450
see scanned from a software repository

00:27:09,619 --> 00:27:13,909
or a contributor communities issued

00:27:11,450 --> 00:27:15,590
tracking system that if you knew that

00:27:13,909 --> 00:27:18,350
information it would help you to assess

00:27:15,590 --> 00:27:21,139
risk we're keen to have you go to the

00:27:18,350 --> 00:27:23,059
cast that community website and get on

00:27:21,139 --> 00:27:24,830
our mailing list and think about

00:27:23,059 --> 00:27:26,899
participating in the mailing list and

00:27:24,830 --> 00:27:28,460
contributing or maybe listening in one

00:27:26,899 --> 00:27:30,350
of our monthly calls or each of the

00:27:28,460 --> 00:27:33,139
working groups has a call every other

00:27:30,350 --> 00:27:34,730
week so the risk working group talks has

00:27:33,139 --> 00:27:37,600
a conversation every other Monday I

00:27:34,730 --> 00:27:39,470
think this coming Monday is our next one

00:27:37,600 --> 00:27:43,669
pretty sure because we didn't talk

00:27:39,470 --> 00:27:45,230
yesterday so so there's there's times

00:27:43,669 --> 00:27:47,029
that you can come and kind of engage and

00:27:45,230 --> 00:27:49,100
say either through the mailing list or

00:27:47,029 --> 00:27:51,769
even a github issue at the where the

00:27:49,100 --> 00:27:54,379
chaos organization on github and all of

00:27:51,769 --> 00:27:59,119
our working groups are identifiable by

00:27:54,379 --> 00:28:02,749
WG - so working group to ask WG - risk

00:27:59,119 --> 00:28:10,129
is the working group on github so if I

00:28:02,749 --> 00:28:13,029
went - since this is being recorded test

00:28:10,129 --> 00:28:13,029
my typing skills

00:28:17,809 --> 00:28:21,289
so this is the risk working group and if

00:28:19,940 --> 00:28:23,179
you so if you have a consider if you

00:28:21,289 --> 00:28:24,859
have a concern you can you can send it

00:28:23,179 --> 00:28:26,929
to the mailing list you can come to our

00:28:24,859 --> 00:28:30,499
calls which are every other Monday at

00:28:26,929 --> 00:28:33,139
1:00 p.m. each scent relay light time or

00:28:30,499 --> 00:28:35,989
you can simply submit an issue here and

00:28:33,139 --> 00:28:38,179
that will help us generate metrics and

00:28:35,989 --> 00:28:40,639
tools that provide the values for those

00:28:38,179 --> 00:28:42,229
metrics and that are useful to you and

00:28:40,639 --> 00:28:43,909
that's that's I think really we want to

00:28:42,229 --> 00:28:45,979
do things that are productive and useful

00:28:43,909 --> 00:28:54,649
for the open source community that's

00:28:45,979 --> 00:28:58,070
that's our principal aim all right I

00:28:54,649 --> 00:29:06,259
came back thank you

00:28:58,070 --> 00:29:07,309
I give you've got five minutes if you

00:29:06,259 --> 00:29:10,519
have any questions I'm happy to answer

00:29:07,309 --> 00:29:12,919
them and if you're also welcome to leave

00:29:10,519 --> 00:29:15,259
right like you don't have to make me I

00:29:12,919 --> 00:29:17,859
will not feel bad if you depart now so

00:29:15,259 --> 00:29:17,859
yeah go ahead

00:29:52,710 --> 00:29:59,289
yeah yeah there's a national database of

00:29:56,759 --> 00:30:01,629
publicly stated vulnerabilities right

00:29:59,289 --> 00:30:03,129
but I believe the security community and

00:30:01,629 --> 00:30:05,710
I'm not an expert in this if anyone is

00:30:03,129 --> 00:30:07,889
speak up has a sort of way of privately

00:30:05,710 --> 00:30:28,409
communicating these things before

00:30:07,889 --> 00:30:31,119
publicizing them we I haven't

00:30:28,409 --> 00:30:33,519
Jessica Wilkerson who's my co-presenter

00:30:31,119 --> 00:30:34,899
who couldn't be here today his it was

00:30:33,519 --> 00:30:36,789
deeply engaged in the medical device

00:30:34,899 --> 00:30:39,279
policy making you know for safety

00:30:36,789 --> 00:30:40,929
critical systems and has a good

00:30:39,279 --> 00:30:43,659
understanding of you know the national

00:30:40,929 --> 00:30:45,490
databases that exist which are part of

00:30:43,659 --> 00:30:48,159
the art we'll put them on the risk page

00:30:45,490 --> 00:30:49,929
for auger here shortly it was so that

00:30:48,159 --> 00:30:52,119
you can find them but I think when it

00:30:49,929 --> 00:30:54,909
comes to security we haven't engaged

00:30:52,119 --> 00:30:56,169
with the person who's or had a long-term

00:30:54,909 --> 00:30:58,929
engagement when people who have

00:30:56,169 --> 00:31:00,669
visibility to the release of

00:30:58,929 --> 00:31:03,039
vulnerabilities prior to the public

00:31:00,669 --> 00:31:06,389
awareness of those vulnerabilities I

00:31:03,039 --> 00:31:06,389
think that's what you're talking about

00:31:37,590 --> 00:31:46,000
sure so I have a question so there are

00:31:43,809 --> 00:31:48,190
two ways that we can get at that one is

00:31:46,000 --> 00:31:49,900
there is a public database of known

00:31:48,190 --> 00:31:52,179
software vulnerabilities you know at

00:31:49,900 --> 00:31:54,760
some point they become public and we can

00:31:52,179 --> 00:31:56,740
scan any repository and it you know look

00:31:54,760 --> 00:32:00,070
for that particular dependency and that

00:31:56,740 --> 00:32:01,570
particular vulnerability and if we know

00:32:00,070 --> 00:32:03,940
when it was made available we can also

00:32:01,570 --> 00:32:06,670
identify want to commit change here

00:32:03,940 --> 00:32:08,260
usually it's a library version in most

00:32:06,670 --> 00:32:11,320
open-source projects that needs to be

00:32:08,260 --> 00:32:13,480
updated so it's fairly easy to get that

00:32:11,320 --> 00:32:14,920
information if we know what library

00:32:13,480 --> 00:32:19,059
needed to be updated we can look at the

00:32:14,920 --> 00:32:22,179
distance between public release of that

00:32:19,059 --> 00:32:24,880
vulnerability and the group fixing it so

00:32:22,179 --> 00:32:28,540
we have we have the data I think I would

00:32:24,880 --> 00:32:30,580
say and that could be measured that

00:32:28,540 --> 00:32:32,140
could be measured we haven't put the

00:32:30,580 --> 00:32:35,170
data we haven't put the vulnerability

00:32:32,140 --> 00:32:36,520
database in so that's one way it can be

00:32:35,170 --> 00:32:38,320
measured is to use that vulnerability

00:32:36,520 --> 00:32:41,050
database directly and then scan any get

00:32:38,320 --> 00:32:43,300
repo any repo on github I think you've

00:32:41,050 --> 00:32:46,000
all likely noticed has a vulnerability

00:32:43,300 --> 00:32:48,580
list right on it and they have an API

00:32:46,000 --> 00:32:51,130
that exposes that information so we

00:32:48,580 --> 00:32:52,510
could create a github call for things

00:32:51,130 --> 00:32:54,640
but a lot of open source projects are

00:32:52,510 --> 00:32:56,260
not on github and so that's a great

00:32:54,640 --> 00:32:58,990
feature for github but it doesn't cover

00:32:56,260 --> 00:33:02,710
in all likelihood your whole open source

00:32:58,990 --> 00:33:04,960
universe so if that's that's something

00:33:02,710 --> 00:33:07,960
that I think makes a lot of sense and if

00:33:04,960 --> 00:33:09,100
you're you know if you would love I

00:33:07,960 --> 00:33:10,840
would love it if you would go to our

00:33:09,100 --> 00:33:12,970
working group web page and create that

00:33:10,840 --> 00:33:14,260
question and issue and then even if

00:33:12,970 --> 00:33:15,820
you're not able to participate in the

00:33:14,260 --> 00:33:17,890
call or don't have the time to follow

00:33:15,820 --> 00:33:19,690
another mailing list in your life we at

00:33:17,890 --> 00:33:22,000
least will have have sort of your

00:33:19,690 --> 00:33:25,090
synopsis of and I'll remember it and

00:33:22,000 --> 00:33:27,610
I'll try to summarize it but you know my

00:33:25,090 --> 00:33:29,470
brain isn't immune perfect and you know

00:33:27,610 --> 00:33:32,559
everything leaks out my bald heads so

00:33:29,470 --> 00:33:34,210
we're we're done thank you thank you

00:33:32,559 --> 00:33:35,890
very much I'll be around for a bit if

00:33:34,210 --> 00:33:38,280
any bus has any other questions but

00:33:35,890 --> 00:33:38,280
thank you

00:33:38,680 --> 00:33:41,809

YouTube URL: https://www.youtube.com/watch?v=wnH7gxAT-xw


