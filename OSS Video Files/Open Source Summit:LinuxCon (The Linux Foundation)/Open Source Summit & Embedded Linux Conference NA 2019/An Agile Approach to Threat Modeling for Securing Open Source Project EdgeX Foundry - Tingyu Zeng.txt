Title: An Agile Approach to Threat Modeling for Securing Open Source Project EdgeX Foundry - Tingyu Zeng
Publication date: 2019-09-16
Playlist: Open Source Summit & Embedded Linux Conference NA 2019
Description: 
	An Agile Approach to Threat Modeling for Securing Open Source Project EdgeX Foundry - Tingyu Zeng, DELL Technologies

Evaluating security risks and conducting threat modeling are challenging for open source project contributors and adopters. There are rarely enough people, or people with experience, to tackle these tasks properly. In this session, come learn about a practical, agile approach to threat modeling with STRIDE model for open source projects, using EdgeX Foundry as an example, regardless whether you are going to contribute to an open source project or are going to evaluate and include some open source libraries into your next project. We will share our experience on security threat modeling and risk assessment during the development of EdgeX Foundry - a vendor-neutral, open source, hardware and OS agnostic Linux Foundation project to create a common open platform for IoT edge computing systems. After the presentation the audience will be familiar with general steps of threat modeling and how to apply them on their next project.
Captions: 
	00:00:00,770 --> 00:00:12,469
answer me great we'll be starting in one

00:00:06,210 --> 00:00:12,469
minute talking down secretary okay bye

00:00:20,740 --> 00:00:27,410
okay so last time I tried I don't think

00:00:24,140 --> 00:00:29,390
I acknowledge you or know anybody of you

00:00:27,410 --> 00:00:33,550
so I'm not going to escape the first

00:00:29,390 --> 00:00:37,540
part kind of introduction myself okay

00:00:33,550 --> 00:00:37,540
okay we'll be starting now

00:00:39,250 --> 00:00:47,420
good afternoon so it's my pleasure to be

00:00:42,530 --> 00:00:50,930
here today the topic of today is an

00:00:47,420 --> 00:00:55,280
agile approach to try the modeling for

00:00:50,930 --> 00:00:56,960
16 Jax foundry in this talk I'm going to

00:00:55,280 --> 00:00:59,540
share some knowledge ease and the

00:00:56,960 --> 00:01:03,520
lessons we learned during our journey of

00:00:59,540 --> 00:01:03,520
ethics foundry development

00:01:03,670 --> 00:01:09,020
so before we start our session

00:01:06,350 --> 00:01:09,950
officially please allow me introduce

00:01:09,020 --> 00:01:13,220
myself

00:01:09,950 --> 00:01:15,740
of course my name here can you zoom I'm

00:01:13,220 --> 00:01:18,890
working based out of Raleigh North

00:01:15,740 --> 00:01:20,750
Carolina or specifically Research

00:01:18,890 --> 00:01:24,819
Triangle Park if you're familiar with

00:01:20,750 --> 00:01:27,649
the area as a security architect in the

00:01:24,819 --> 00:01:30,410
IOT platform division of the Dell

00:01:27,649 --> 00:01:33,069
technology I have been involved into a

00:01:30,410 --> 00:01:36,619
cup of open-source as well as commercial

00:01:33,069 --> 00:01:39,619
products in the open source project Ajax

00:01:36,619 --> 00:01:42,860
and one of the major called contributors

00:01:39,619 --> 00:01:45,399
for the security component and currently

00:01:42,860 --> 00:01:49,580
a co-chair of security working group

00:01:45,399 --> 00:01:52,700
before taking the position Intel I was a

00:01:49,580 --> 00:01:54,319
principal engineer in RSA security we

00:01:52,700 --> 00:01:57,259
are I got involved in two couple of

00:01:54,319 --> 00:02:00,050
security products including data loss

00:01:57,259 --> 00:02:04,220
prevention works ready detection and

00:02:00,050 --> 00:02:06,830
response okay after wasting about one

00:02:04,220 --> 00:02:10,190
minute of you guys so let's go back to

00:02:06,830 --> 00:02:13,520
the business this is today's session

00:02:10,190 --> 00:02:17,209
agenda we will start with the first

00:02:13,520 --> 00:02:19,970
question what is Ajax the answer will be

00:02:17,209 --> 00:02:22,880
covered in the section one just like

00:02:19,970 --> 00:02:25,550
every open source projects the Ajax is

00:02:22,880 --> 00:02:28,220
facing all kinds of challenges here so

00:02:25,550 --> 00:02:30,670
in Section two we are trying to just go

00:02:28,220 --> 00:02:33,370
over the security challenge we have

00:02:30,670 --> 00:02:35,530
to address the challenges with the

00:02:33,370 --> 00:02:38,680
better to invest at youth that work

00:02:35,530 --> 00:02:42,220
so rather modeling is one of the kind so

00:02:38,680 --> 00:02:45,340
in section 3 we are going to cover the

00:02:42,220 --> 00:02:48,190
thread model like what is read modeling

00:02:45,340 --> 00:02:51,940
what can we do is thread modeling how

00:02:48,190 --> 00:02:54,880
can we perform thread model so after

00:02:51,940 --> 00:02:57,070
section 3 we have some ideas about

00:02:54,880 --> 00:03:00,420
threat modeling we are going to use Ajax

00:02:57,070 --> 00:03:02,620
example and trying to apply the

00:03:00,420 --> 00:03:05,290
background information knowledge you

00:03:02,620 --> 00:03:07,420
will learn from the section 3 into the

00:03:05,290 --> 00:03:14,860
Ajax project to address the challenges

00:03:07,420 --> 00:03:18,880
we have okay this is section 1 about

00:03:14,860 --> 00:03:21,489
Ajax venture introduction so we have we

00:03:18,880 --> 00:03:24,010
have will answer the questions like what

00:03:21,489 --> 00:03:26,380
is objects and the why we developed edge

00:03:24,010 --> 00:03:29,380
X and what are the principles we are

00:03:26,380 --> 00:03:31,630
trying to follow during our design and

00:03:29,380 --> 00:03:35,019
implementation of projects and how

00:03:31,630 --> 00:03:36,370
ejects works it is vital important to

00:03:35,019 --> 00:03:38,920
understand that the background

00:03:36,370 --> 00:03:46,299
information here before we break the

00:03:38,920 --> 00:03:48,910
security into the table okay I checked

00:03:46,299 --> 00:03:51,209
phone during war we called jex most a

00:03:48,910 --> 00:03:54,790
time is open-source vendor-neutral

00:03:51,209 --> 00:03:57,220
project in edge X we are trying to build

00:03:54,790 --> 00:04:00,010
a framework that provides the

00:03:57,220 --> 00:04:02,790
interoperability and compatibility for

00:04:00,010 --> 00:04:06,850
the LG computing so it is a platform

00:04:02,790 --> 00:04:10,209
independent means it has words both x86

00:04:06,850 --> 00:04:13,269
and arm tech chure and it works on

00:04:10,209 --> 00:04:15,610
Windows Linux were Mac if you like and

00:04:13,269 --> 00:04:18,010
it supports a customized a plug-in

00:04:15,610 --> 00:04:20,650
module those modules could be written

00:04:18,010 --> 00:04:22,930
with different languages we support them

00:04:20,650 --> 00:04:25,350
through the common REST API from the

00:04:22,930 --> 00:04:25,350
framework

00:04:27,590 --> 00:04:34,520
so the motivations behind the Ajax

00:04:30,470 --> 00:04:36,650
framework in today's IOT world it is

00:04:34,520 --> 00:04:39,590
very noticeable that there are so many

00:04:36,650 --> 00:04:41,690
platforms available it could be good

00:04:39,590 --> 00:04:46,520
work could be bad depends on your

00:04:41,690 --> 00:04:48,950
viewpoint so a Jax is trying to get into

00:04:46,520 --> 00:04:51,830
the place we are we build and promote a

00:04:48,950 --> 00:04:54,800
common framework unifying ajik computing

00:04:51,830 --> 00:04:58,790
so it encourage the community to create

00:04:54,800 --> 00:05:01,100
ecosystem of plant and playing so any

00:04:58,790 --> 00:05:03,950
part of the platform could be replaced

00:05:01,100 --> 00:05:06,830
could be upgrade or it allows us

00:05:03,950 --> 00:05:10,000
security the series to skill up and it

00:05:06,830 --> 00:05:13,790
done based on secured the services

00:05:10,000 --> 00:05:16,070
capacity and user cases and it's very

00:05:13,790 --> 00:05:20,030
helpful to provide the tools to create

00:05:16,070 --> 00:05:22,580
ajax-based IOT add solution quickly so

00:05:20,030 --> 00:05:24,680
in the same time collaborations between

00:05:22,580 --> 00:05:26,870
the open source projects and the

00:05:24,680 --> 00:05:34,610
standard group will benefit the industry

00:05:26,870 --> 00:05:38,360
as well ok so as we see here that is the

00:05:34,610 --> 00:05:41,090
high level architecture of the ajax in

00:05:38,360 --> 00:05:41,810
the center of architecture we have the

00:05:41,090 --> 00:05:46,130
core series

00:05:41,810 --> 00:05:48,770
so these mark is a great the dark area

00:05:46,130 --> 00:05:51,380
those are required components that serve

00:05:48,770 --> 00:05:55,570
the foundation of the system so it

00:05:51,380 --> 00:05:57,830
includes core data command metadata

00:05:55,570 --> 00:06:01,669
registration and configuration service

00:05:57,830 --> 00:06:04,190
on top of the components we are having

00:06:01,669 --> 00:06:08,419
replaceable or reference stories such as

00:06:04,190 --> 00:06:11,090
the scheduling alert notification and

00:06:08,419 --> 00:06:14,690
the distribution surveys so these are

00:06:11,090 --> 00:06:16,280
loosely separated and we are trying to

00:06:14,690 --> 00:06:20,180
define the northbound and southbound

00:06:16,280 --> 00:06:22,729
over here the the northbound here refers

00:06:20,180 --> 00:06:25,490
to the cloud side mainly either the

00:06:22,729 --> 00:06:28,910
public where he has the southbound of

00:06:25,490 --> 00:06:33,889
the Ajax that is we are the devices

00:06:28,910 --> 00:06:36,280
sensors meters thermostats rest system

00:06:33,889 --> 00:06:39,590
management and security are the service

00:06:36,280 --> 00:06:40,040
tunnels across bounds as we see here are

00:06:39,590 --> 00:06:42,230
the both

00:06:40,040 --> 00:06:46,210
science and these are considered as a

00:06:42,230 --> 00:06:46,210
part of the underlying infrastructure

00:06:48,460 --> 00:06:54,350
how the edge ex works currently so edge

00:06:52,220 --> 00:06:57,410
X is a composed of dozens of micro

00:06:54,350 --> 00:07:00,110
survey system mostly our rhythm is go

00:06:57,410 --> 00:07:03,290
language with a very small person

00:07:00,110 --> 00:07:05,810
implemented with the script currently so

00:07:03,290 --> 00:07:08,030
each micro series is responsible for a

00:07:05,810 --> 00:07:10,300
single feature of the system such as a

00:07:08,030 --> 00:07:14,330
sensor data collection or data

00:07:10,300 --> 00:07:17,240
persistence data exporting systems

00:07:14,330 --> 00:07:19,130
gathering etc so the macro service

00:07:17,240 --> 00:07:23,180
community which is either through the

00:07:19,130 --> 00:07:25,760
REST API interface that's providing the

00:07:23,180 --> 00:07:27,650
maximum flexibility over here the

00:07:25,760 --> 00:07:30,140
Attucks can be deployed through the

00:07:27,650 --> 00:07:32,570
talker with octopus file were snap

00:07:30,140 --> 00:07:36,290
distribution which is another container

00:07:32,570 --> 00:07:40,100
system if you like and even the edges

00:07:36,290 --> 00:07:42,350
can be run over the native system if you

00:07:40,100 --> 00:07:50,090
like just kind of a binary we build out

00:07:42,350 --> 00:07:53,660
of those source code ok so this is the

00:07:50,090 --> 00:07:56,360
agenda for the section tool so every

00:07:53,660 --> 00:07:59,660
project has a challenges and our project

00:07:56,360 --> 00:08:01,520
has its reward the section two we are

00:07:59,660 --> 00:08:04,580
going to discuss the challenges in the

00:08:01,520 --> 00:08:06,650
Ajax project so focusing on security

00:08:04,580 --> 00:08:10,400
part of course this is today's major

00:08:06,650 --> 00:08:12,590
topic here so Ajax roots in the IOT

00:08:10,400 --> 00:08:16,310
field so interfaces are similar

00:08:12,590 --> 00:08:19,160
challenges as other IOT projects Ajax is

00:08:16,310 --> 00:08:21,500
open source project as well so it has

00:08:19,160 --> 00:08:23,810
similar challenges as an open source

00:08:21,500 --> 00:08:26,960
project so we are in need of our

00:08:23,810 --> 00:08:30,310
strategy and check approach to response

00:08:26,960 --> 00:08:30,310
the challenges over here

00:08:32,470 --> 00:08:37,990
so the power of the IOT device is

00:08:35,140 --> 00:08:41,110
improving rapidly in the past year what

00:08:37,990 --> 00:08:43,720
could be done with a big bulky system in

00:08:41,110 --> 00:08:47,800
the past can implement into a very tiny

00:08:43,720 --> 00:08:50,500
chip right now however compared with the

00:08:47,800 --> 00:08:52,390
computers were all device it still has

00:08:50,500 --> 00:08:55,560
very limited storage were processing

00:08:52,390 --> 00:08:58,900
power and not like the PC were might

00:08:55,560 --> 00:09:02,110
update of software could be just a click

00:08:58,900 --> 00:09:05,860
away here to upgrade a IOT device

00:09:02,110 --> 00:09:08,830
sometimes requires multiple steps or

00:09:05,860 --> 00:09:11,170
even physical access authentication

00:09:08,830 --> 00:09:13,480
authorization and the secure

00:09:11,170 --> 00:09:16,390
communication are big issues in out as

00:09:13,480 --> 00:09:19,000
well so taking example of the smarter

00:09:16,390 --> 00:09:20,800
thermostats that standard data and

00:09:19,000 --> 00:09:24,100
receive the command to change the

00:09:20,800 --> 00:09:26,950
temperature setting remotely how could

00:09:24,100 --> 00:09:28,690
we just know the reading are authentic

00:09:26,950 --> 00:09:30,850
and the command to change the

00:09:28,690 --> 00:09:34,240
temperature is not for malicious users

00:09:30,850 --> 00:09:36,460
and how we make sure the data reading in

00:09:34,240 --> 00:09:39,190
be stolen by some other unauthorized

00:09:36,460 --> 00:09:45,250
users those other questions we have to

00:09:39,190 --> 00:09:46,720
face and we have to answer security

00:09:45,250 --> 00:09:50,170
challenge exist in the open-source

00:09:46,720 --> 00:09:52,410
project as well with code base available

00:09:50,170 --> 00:09:55,090
for all the public so we wish anybody

00:09:52,410 --> 00:09:57,130
who is interested I just stood up and

00:09:55,090 --> 00:10:00,570
they do the color review trying to catch

00:09:57,130 --> 00:10:03,160
the defects before document however

00:10:00,570 --> 00:10:05,950
unfortunately this is not the case all

00:10:03,160 --> 00:10:08,920
the time and it is challenging to reveal

00:10:05,950 --> 00:10:12,280
the codebase and identify identify the

00:10:08,920 --> 00:10:15,880
security SiC security issues your short

00:10:12,280 --> 00:10:18,040
term please not help so nowadays it is

00:10:15,880 --> 00:10:20,080
almost impossible to find a software

00:10:18,040 --> 00:10:23,260
that talent depends on the third-party

00:10:20,080 --> 00:10:26,290
modules these modules bring potential

00:10:23,260 --> 00:10:28,839
security risks as well and the light

00:10:26,290 --> 00:10:31,030
earnings of your development a switching

00:10:28,839 --> 00:10:33,940
hands of the developers in the open

00:10:31,030 --> 00:10:35,830
source project is invertible and the

00:10:33,940 --> 00:10:38,260
design could be changed later as we all

00:10:35,830 --> 00:10:41,850
the security loopholes could be

00:10:38,260 --> 00:10:41,850
introduced around the same time

00:10:44,420 --> 00:10:50,610
so to address those challenges mentioned

00:10:47,760 --> 00:10:53,640
above we introduced a strata model into

00:10:50,610 --> 00:10:56,550
our project so stride represents a

00:10:53,640 --> 00:10:58,770
potential danger to something value in

00:10:56,550 --> 00:11:00,870
the system that modeling is just a

00:10:58,770 --> 00:11:03,090
procedure to identify this valuable

00:11:00,870 --> 00:11:05,760
resources recognize the potential

00:11:03,090 --> 00:11:07,920
attacks against the resource plan and

00:11:05,760 --> 00:11:11,250
implemented some sorts of methods to

00:11:07,920 --> 00:11:14,100
reduce or remove the dangers for the

00:11:11,250 --> 00:11:16,170
contributors of open source project it

00:11:14,100 --> 00:11:18,390
provides a guidance on security

00:11:16,170 --> 00:11:21,150
compliance for the end user

00:11:18,390 --> 00:11:23,510
it helps understanding what and where

00:11:21,150 --> 00:11:26,220
the potential attacks might happen

00:11:23,510 --> 00:11:29,220
instead of a band-aid as their security

00:11:26,220 --> 00:11:31,830
packs it provides a progressive and the

00:11:29,220 --> 00:11:39,450
practical approach to enhance the

00:11:31,830 --> 00:11:42,180
security of the project so this is

00:11:39,450 --> 00:11:43,980
section three we are going to cover as

00:11:42,180 --> 00:11:46,170
we mention the previously threatened

00:11:43,980 --> 00:11:48,360
modelling provides so many benefits so

00:11:46,170 --> 00:11:52,350
for projects so the next question that

00:11:48,360 --> 00:11:54,990
comes out is how do we do it in section

00:11:52,350 --> 00:11:57,570
3 we are going to find out the formal

00:11:54,990 --> 00:11:59,550
definition of threat modeling and when

00:11:57,570 --> 00:12:00,570
is the time to do that and who can do

00:11:59,550 --> 00:12:06,690
that work

00:12:00,570 --> 00:12:08,790
how can we do that so here's the

00:12:06,690 --> 00:12:10,860
definition of a threat model and trend

00:12:08,790 --> 00:12:15,300
modeling from the open web application

00:12:10,860 --> 00:12:18,990
security project was not work as we can

00:12:15,300 --> 00:12:21,600
see here straddle model is a define is a

00:12:18,990 --> 00:12:24,180
structural representation of all the

00:12:21,600 --> 00:12:27,510
information that affects a security of

00:12:24,180 --> 00:12:30,270
application the threat modeling here is

00:12:27,510 --> 00:12:33,300
a process of capturing work netting and

00:12:30,270 --> 00:12:35,550
analyzing all the information and it

00:12:33,300 --> 00:12:38,340
enables the decision-making about risks

00:12:35,550 --> 00:12:40,380
the output of strain modeling is some

00:12:38,340 --> 00:12:42,920
proud horizon beast of security

00:12:40,380 --> 00:12:46,550
improvements to the concepts

00:12:42,920 --> 00:12:50,040
requirements designs or implementations

00:12:46,550 --> 00:12:53,030
resident covered the whole scope of the

00:12:50,040 --> 00:12:53,030
software development

00:12:53,910 --> 00:12:59,170
when should we started modeling so just

00:12:57,580 --> 00:13:01,090
like a software development

00:12:59,170 --> 00:13:03,370
the best time to start a strength

00:13:01,090 --> 00:13:06,010
modeling is before we write the first

00:13:03,370 --> 00:13:08,590
line of the code here it is time to

00:13:06,010 --> 00:13:11,590
recognize risks and build solutions in

00:13:08,590 --> 00:13:14,920
the system and it's cost efficient to

00:13:11,590 --> 00:13:16,720
make changes easily however it is not

00:13:14,920 --> 00:13:19,840
realistic for a lot of projects

00:13:16,720 --> 00:13:22,660
currently so with agile development

00:13:19,840 --> 00:13:24,550
whether adopted it is a good idea to

00:13:22,660 --> 00:13:27,160
have the thread modeling at the start of

00:13:24,550 --> 00:13:29,470
each sprint to make sure the proposed

00:13:27,160 --> 00:13:32,110
new features are not introducing the

00:13:29,470 --> 00:13:33,970
potential risks at each milestone

00:13:32,110 --> 00:13:36,460
release of the project

00:13:33,970 --> 00:13:39,070
having said modeling with product

00:13:36,460 --> 00:13:41,680
roadmap beauties be much clearer picture

00:13:39,070 --> 00:13:44,890
of the product and again our confidence

00:13:41,680 --> 00:13:48,010
on the security improvement so in a

00:13:44,890 --> 00:13:53,010
shell performing the threat modeling

00:13:48,010 --> 00:13:53,010
when the system has a change if you can

00:13:54,930 --> 00:14:00,820
so who can do that well there may be

00:13:58,750 --> 00:14:04,270
understanding there might be a

00:14:00,820 --> 00:14:06,220
misunderstanding here that we have to

00:14:04,270 --> 00:14:08,200
have a security expert to the threat

00:14:06,220 --> 00:14:11,080
model this is not you

00:14:08,200 --> 00:14:13,510
so think about who is the best person to

00:14:11,080 --> 00:14:16,150
understand the product or the model in

00:14:13,510 --> 00:14:19,270
your team the person could be in your

00:14:16,150 --> 00:14:21,580
team already it is not very difficult to

00:14:19,270 --> 00:14:25,000
perform strain modeling as long as a

00:14:21,580 --> 00:14:28,120
proper procedure is followed so the goal

00:14:25,000 --> 00:14:30,310
wouldn't be far away unreachable what if

00:14:28,120 --> 00:14:32,980
the project includes a millions of lines

00:14:30,310 --> 00:14:35,740
codes and to be to handle that happens

00:14:32,980 --> 00:14:37,930
all the time as well so start from a

00:14:35,740 --> 00:14:40,270
smaller model applying the threat

00:14:37,930 --> 00:14:43,060
modeling approach and expanding the

00:14:40,270 --> 00:14:46,320
courage so you will reach our goal

00:14:43,060 --> 00:14:46,320
sooner than you think

00:14:48,760 --> 00:14:55,640
okay let's go to the steps for the

00:14:52,760 --> 00:14:58,339
threat modeling here the first type of

00:14:55,640 --> 00:15:00,980
straddling is to understand the system

00:14:58,339 --> 00:15:03,680
architecture and I create a model that

00:15:00,980 --> 00:15:07,130
reflects the architecture and trying to

00:15:03,680 --> 00:15:09,620
and bring down the smaller piece so this

00:15:07,130 --> 00:15:12,170
step can be iterated a further until

00:15:09,620 --> 00:15:14,810
each piece contains a small single

00:15:12,170 --> 00:15:17,570
feature and it's okay to have some

00:15:14,810 --> 00:15:20,120
abstract were hiding the details so that

00:15:17,570 --> 00:15:24,020
a time you build as a whole during the

00:15:20,120 --> 00:15:26,959
one iteration next step we utilize data

00:15:24,020 --> 00:15:29,450
flow diagram or whatever data flow grab

00:15:26,959 --> 00:15:32,240
your light to expose interaction between

00:15:29,450 --> 00:15:34,850
those component so this is we already

00:15:32,240 --> 00:15:36,740
addressed boundary with the trans

00:15:34,850 --> 00:15:38,990
boundary of the component the

00:15:36,740 --> 00:15:42,770
communication is considered as safe and

00:15:38,990 --> 00:15:44,660
reliable another important factor should

00:15:42,770 --> 00:15:47,270
be identified in this type here it's

00:15:44,660 --> 00:15:49,220
called a set so this is something we are

00:15:47,270 --> 00:15:51,920
trying to protect and attack from my

00:15:49,220 --> 00:15:54,230
entry stairways having those information

00:15:51,920 --> 00:15:56,810
in mind so we can move to the next type

00:15:54,230 --> 00:16:02,720
which is identifying the potential

00:15:56,810 --> 00:16:05,270
attacks okay

00:16:02,720 --> 00:16:09,730
Perea quite a few people already seen

00:16:05,270 --> 00:16:12,400
those triangle before that represents

00:16:09,730 --> 00:16:17,180
confidentiality integrity availability

00:16:12,400 --> 00:16:19,550
availability word as noise CIA tried so

00:16:17,180 --> 00:16:23,180
these are top three fundamental property

00:16:19,550 --> 00:16:25,940
of security in the Strela model so the

00:16:23,180 --> 00:16:27,920
confidentiality ensures the information

00:16:25,940 --> 00:16:31,940
can only be accessed by authorized

00:16:27,920 --> 00:16:33,709
individuals integrity ensures that the

00:16:31,940 --> 00:16:37,940
information is authentic and reliable

00:16:33,709 --> 00:16:40,060
and availability means the resource

00:16:37,940 --> 00:16:43,040
accessible to meet a business need

00:16:40,060 --> 00:16:44,920
instead modeling just one more thing we

00:16:43,040 --> 00:16:48,230
have to think about that that's called a

00:16:44,920 --> 00:16:50,470
non-repudiation which means someone

00:16:48,230 --> 00:16:53,089
cannot ignite something he has done a

00:16:50,470 --> 00:16:54,829
good example would be dated a signature

00:16:53,089 --> 00:16:58,820
a lot of people have been using that

00:16:54,829 --> 00:17:00,500
which means you can only your digital

00:16:58,820 --> 00:17:03,790
signature can only be used by the

00:17:00,500 --> 00:17:03,790
individual who Stanley

00:17:04,670 --> 00:17:10,770
okay

00:17:05,850 --> 00:17:12,930
so taking those security factors and the

00:17:10,770 --> 00:17:16,079
thing from the opposite direction means

00:17:12,930 --> 00:17:18,600
how these properties could be violated

00:17:16,079 --> 00:17:21,150
when we have one of the most mature the

00:17:18,600 --> 00:17:27,380
classification tech model here straight

00:17:21,150 --> 00:17:30,990
stand for spoofing tampering repudiation

00:17:27,380 --> 00:17:35,010
information disclosure denial of service

00:17:30,990 --> 00:17:37,530
and elevation of the privilege this was

00:17:35,010 --> 00:17:40,260
promoted by Microsoft about today's goal

00:17:37,530 --> 00:17:42,680
and it was widely accepted as one out

00:17:40,260 --> 00:17:45,900
the practical methods of threat modeling

00:17:42,680 --> 00:17:48,420
because it answers very basic question

00:17:45,900 --> 00:17:51,950
when but very important question how

00:17:48,420 --> 00:17:54,480
will my sister be attacked but hackers

00:17:51,950 --> 00:17:56,190
spoofing means an individual could

00:17:54,480 --> 00:17:59,010
pretend to be somewhere else

00:17:56,190 --> 00:18:01,410
other life himself tempering means a

00:17:59,010 --> 00:18:04,800
individual could modify something and

00:18:01,410 --> 00:18:07,890
the reputation means an individual could

00:18:04,800 --> 00:18:10,380
deny what he did information disclosure

00:18:07,890 --> 00:18:13,890
means providing information to an

00:18:10,380 --> 00:18:16,440
unauthorized individual the denial of

00:18:13,890 --> 00:18:19,890
the service means absorbing the resource

00:18:16,440 --> 00:18:23,780
so that the service is available for

00:18:19,890 --> 00:18:26,850
alleged users the elevation of the

00:18:23,780 --> 00:18:29,220
privilege means an individual in a lower

00:18:26,850 --> 00:18:31,320
privileged group could access the

00:18:29,220 --> 00:18:35,360
resource that are available for the

00:18:31,320 --> 00:18:35,360
higher primitive group user only

00:18:38,220 --> 00:18:43,860
once we identify those trust boundaries

00:18:40,740 --> 00:18:47,250
of the component a set of a need to be

00:18:43,860 --> 00:18:49,649
protect under strike model instructions

00:18:47,250 --> 00:18:52,200
writes we are moving to the next step

00:18:49,649 --> 00:18:55,950
that means we are trying to might be the

00:18:52,200 --> 00:18:58,169
threat against the components let's

00:18:55,950 --> 00:19:00,659
imagine a user case that a module

00:18:58,169 --> 00:19:03,019
reveals the temperature reading over a

00:19:00,659 --> 00:19:05,549
port and store the data on to the disk

00:19:03,019 --> 00:19:08,220
the data will be our asset to be

00:19:05,549 --> 00:19:11,159
protected and the trust boundary is

00:19:08,220 --> 00:19:13,379
identified as a port so based on the

00:19:11,159 --> 00:19:17,340
strike attack model we discussed before

00:19:13,379 --> 00:19:19,649
is proving impossible yes anyone can

00:19:17,340 --> 00:19:22,740
send data over the interface is

00:19:19,649 --> 00:19:24,509
tampering possible yes the data could be

00:19:22,740 --> 00:19:27,629
modified before I arrived in the port

00:19:24,509 --> 00:19:31,019
how about a non-repudiation is possible

00:19:27,629 --> 00:19:33,509
as well because owner of the device

00:19:31,019 --> 00:19:36,480
could claim oh within us and out the

00:19:33,509 --> 00:19:40,139
data really at home information

00:19:36,480 --> 00:19:42,120
disclosure yes of course that reading

00:19:40,139 --> 00:19:43,919
data belonging to one device could be

00:19:42,120 --> 00:19:48,179
obtained by another anther read the

00:19:43,919 --> 00:19:50,309
other as well and how about the denial

00:19:48,179 --> 00:19:52,350
of service it is possible because

00:19:50,309 --> 00:19:54,659
meanings of requests that can be

00:19:52,350 --> 00:19:57,149
assigned to the port to use up all the

00:19:54,659 --> 00:19:59,450
resource over there and how about the

00:19:57,149 --> 00:20:00,720
last one the elevation of the privilege

00:19:59,450 --> 00:20:03,000
yes

00:20:00,720 --> 00:20:05,850
the data could be a construct in a way

00:20:03,000 --> 00:20:09,149
that is to be used to change the user's

00:20:05,850 --> 00:20:12,120
group here we are recognizing all the

00:20:09,149 --> 00:20:15,480
potential attacks for from multiple

00:20:12,120 --> 00:20:18,269
viewpoints and next time we are trying

00:20:15,480 --> 00:20:24,629
to just the reduce or just remove those

00:20:18,269 --> 00:20:28,169
rights for reduce will remove the

00:20:24,629 --> 00:20:30,480
threats we call it threat mitigation so

00:20:28,169 --> 00:20:33,960
this is a stage of the strength

00:20:30,480 --> 00:20:36,120
medication as we displayed here and if

00:20:33,960 --> 00:20:39,450
the stress are exposed at the design

00:20:36,120 --> 00:20:41,909
stage which is very good and we have the

00:20:39,450 --> 00:20:44,429
great chance to update the system design

00:20:41,909 --> 00:20:46,740
adding the secret enhancements were

00:20:44,429 --> 00:20:48,869
improvement over here if they are

00:20:46,740 --> 00:20:50,820
exposed to during the milestone release

00:20:48,869 --> 00:20:53,640
which happens as well

00:20:50,820 --> 00:20:56,190
it is good approach to include a such

00:20:53,640 --> 00:20:58,620
information and possible solution in the

00:20:56,190 --> 00:21:00,720
project roadmap so that the user

00:20:58,620 --> 00:21:03,930
developer understand what we are could

00:21:00,720 --> 00:21:05,970
address returning security next type so

00:21:03,930 --> 00:21:09,450
if a solution is not available where

00:21:05,970 --> 00:21:12,090
risk is consider very low so it is not

00:21:09,450 --> 00:21:16,130
uncommon to accept and a document a risk

00:21:12,090 --> 00:21:19,680
and the last resort

00:21:16,130 --> 00:21:23,070
probably not pretty just transfer the

00:21:19,680 --> 00:21:27,150
risk without a fixed change this looks

00:21:23,070 --> 00:21:29,580
like city whatever high work if you read

00:21:27,150 --> 00:21:31,380
a lot of the terms service for license

00:21:29,580 --> 00:21:39,420
agreement of the South years you will

00:21:31,380 --> 00:21:42,540
find out they do not okay this is our

00:21:39,420 --> 00:21:44,670
section for we already understand what

00:21:42,540 --> 00:21:47,340
is threat modeling with a threat model

00:21:44,670 --> 00:21:50,610
and what steps so we are not just using

00:21:47,340 --> 00:21:53,100
our project Ajax as an example to see

00:21:50,610 --> 00:21:55,560
how we are doing apply them so this is a

00:21:53,100 --> 00:22:04,230
common practice we can use data for any

00:21:55,560 --> 00:22:06,600
projects if you like when we go back to

00:22:04,230 --> 00:22:07,230
the high-level architecture of the

00:22:06,600 --> 00:22:11,910
Attucks

00:22:07,230 --> 00:22:14,900
so we learn from the topmost level as

00:22:11,910 --> 00:22:18,440
you can see so this is the kind of what

00:22:14,900 --> 00:22:21,020
they were divided into a different

00:22:18,440 --> 00:22:24,150
categories and loosely divided

00:22:21,020 --> 00:22:26,700
southbound and northbound over here on

00:22:24,150 --> 00:22:29,670
the saucepan over here the sensor data

00:22:26,700 --> 00:22:32,040
is collected by the device service from

00:22:29,670 --> 00:22:34,230
the thing and it is the place we are

00:22:32,040 --> 00:22:37,920
adjective interacts with all set world

00:22:34,230 --> 00:22:41,550
so we define as trust boundary over here

00:22:37,920 --> 00:22:46,140
the trans boundary is identified on the

00:22:41,550 --> 00:22:47,340
south side on the north side that is we

00:22:46,140 --> 00:22:50,160
are we are connecting with the

00:22:47,340 --> 00:22:52,350
enterprise workload a system so which is

00:22:50,160 --> 00:22:56,220
another place we are interaction with

00:22:52,350 --> 00:22:58,800
outside world of the ethics happens so

00:22:56,220 --> 00:23:01,980
this will be another trust boundary we

00:22:58,800 --> 00:23:03,910
are defining so in this level our site

00:23:01,980 --> 00:23:06,070
are the rest API and the parts

00:23:03,910 --> 00:23:09,130
that could be concealed consumed by the

00:23:06,070 --> 00:23:12,100
external identities and those are the

00:23:09,130 --> 00:23:16,120
resource we are exposing to outside

00:23:12,100 --> 00:23:23,620
world and those are the resource we are

00:23:16,120 --> 00:23:25,809
trying to protect in this level when

00:23:23,620 --> 00:23:28,330
applying the straddle we mentioned in

00:23:25,809 --> 00:23:32,080
the previous section on the set over

00:23:28,330 --> 00:23:34,299
here we have attack tables as we can see

00:23:32,080 --> 00:23:36,580
here we have assets we are trying to

00:23:34,299 --> 00:23:39,610
protect on this level and we have the

00:23:36,580 --> 00:23:43,390
threat against them and we have possible

00:23:39,610 --> 00:23:45,460
method of such triage and even we have a

00:23:43,390 --> 00:23:48,640
severity level associated with those

00:23:45,460 --> 00:23:51,220
information those table gives us a clear

00:23:48,640 --> 00:23:53,950
and check beliefs about what we are

00:23:51,220 --> 00:23:57,370
going to start regarding the security

00:23:53,950 --> 00:24:00,220
improvement of that Jack's taking exam

00:23:57,370 --> 00:24:03,490
house the table over here we have a

00:24:00,220 --> 00:24:05,650
device REST API the thread is spoofing

00:24:03,490 --> 00:24:07,510
and the master here is the tiger

00:24:05,650 --> 00:24:10,570
centered data with a fake identification

00:24:07,510 --> 00:24:13,179
of the IOT and waiting okay this is

00:24:10,570 --> 00:24:15,970
sorority is high which we need to just

00:24:13,179 --> 00:24:19,720
address or just fix it and the same

00:24:15,970 --> 00:24:23,260
device service REST API and it's facing

00:24:19,720 --> 00:24:25,030
the threat of information disclosure one

00:24:23,260 --> 00:24:27,520
of the possible method of an information

00:24:25,030 --> 00:24:29,559
disclosure is main tomato attack and the

00:24:27,520 --> 00:24:31,480
severity is high as well and that's what

00:24:29,559 --> 00:24:33,850
we are going to protect by following

00:24:31,480 --> 00:24:36,070
these steps you are terrifying

00:24:33,850 --> 00:24:38,679
the asides you are identifying the

00:24:36,070 --> 00:24:43,890
strength of Cosmo my third is rarity and

00:24:38,679 --> 00:24:43,890
the next type let's just try to fix them

00:24:45,850 --> 00:24:51,010
once the threads are recognized it is

00:24:48,640 --> 00:24:53,050
time to reduce where you moved them in

00:24:51,010 --> 00:24:56,050
the architectural level we decided to

00:24:53,050 --> 00:24:58,570
adopt various technologies from for the

00:24:56,050 --> 00:25:03,400
mitigation so for example in our

00:24:58,570 --> 00:25:05,950
projects the REST API endpoints needs to

00:25:03,400 --> 00:25:09,130
be protect so we utilize a few a great

00:25:05,950 --> 00:25:11,800
way to reduce a title surface a metering

00:25:09,130 --> 00:25:13,810
mechanism can be implement with a period

00:25:11,800 --> 00:25:17,410
gateway to prevent a denial of service

00:25:13,810 --> 00:25:20,230
attack and we implement the Jason web

00:25:17,410 --> 00:25:22,750
talking GWT as well as all our

00:25:20,230 --> 00:25:26,580
authentication with API gateway to

00:25:22,750 --> 00:25:26,580
mitigate the threat of spoofing

00:25:28,680 --> 00:25:34,990
such steps can be performed in the next

00:25:32,110 --> 00:25:37,030
lower level of the smaller components so

00:25:34,990 --> 00:25:39,910
let's go back to this architectural

00:25:37,030 --> 00:25:42,580
diagram here we notice the dark side

00:25:39,910 --> 00:25:45,010
again that is the core service and the

00:25:42,580 --> 00:25:48,160
service around them are optional the

00:25:45,010 --> 00:25:51,220
data is passed to the course erase from

00:25:48,160 --> 00:25:53,770
the local persistence and commands are

00:25:51,220 --> 00:25:56,290
passed over the core service for device

00:25:53,770 --> 00:25:58,660
and meters so when we show the trans

00:25:56,290 --> 00:26:00,970
boundary around the core service we are

00:25:58,660 --> 00:26:04,210
identifying a new attacking service and

00:26:00,970 --> 00:26:07,030
new assets so for example here is level

00:26:04,210 --> 00:26:09,760
we notice some micro service needs a

00:26:07,030 --> 00:26:12,520
credential to access the database so

00:26:09,760 --> 00:26:14,950
these credentials become the newest s we

00:26:12,520 --> 00:26:17,290
are trying to protect and applying the

00:26:14,950 --> 00:26:19,450
strata model and we are learning what

00:26:17,290 --> 00:26:23,680
kind of attacks me happen and what

00:26:19,450 --> 00:26:25,720
medications we need to adopt so this

00:26:23,680 --> 00:26:27,940
approach can be applied repeatedly to

00:26:25,720 --> 00:26:29,890
the lowest mode of the system to

00:26:27,940 --> 00:26:32,410
maximize the benefit of the Austrian

00:26:29,890 --> 00:26:35,200
modeling which that'll ease the stress

00:26:32,410 --> 00:26:38,200
and mitigation strategies the security

00:26:35,200 --> 00:26:41,160
is no more a hassle but unmanageable and

00:26:38,200 --> 00:26:41,160
chekhov approach

00:26:43,680 --> 00:26:48,960
so in conclusion with your threat

00:26:46,470 --> 00:26:51,210
modeling helps that him understanding

00:26:48,960 --> 00:26:54,210
and evaluating the security rights and

00:26:51,210 --> 00:26:56,760
the residual resolutions quickly and it

00:26:54,210 --> 00:26:59,700
is a practical approach to expose threat

00:26:56,760 --> 00:27:02,100
in different stage of development so

00:26:59,700 --> 00:27:04,550
straight modeling is a data in different

00:27:02,100 --> 00:27:08,400
level of the scope of open source Ajax

00:27:04,550 --> 00:27:11,130
we encourage every team to try on threat

00:27:08,400 --> 00:27:17,880
modeling and share the result with

00:27:11,130 --> 00:27:19,590
community at the end of the partition

00:27:17,880 --> 00:27:21,510
this is the list of the reference

00:27:19,590 --> 00:27:24,180
regarding straight modeling as well as

00:27:21,510 --> 00:27:27,540
Ajax boundary and this include books

00:27:24,180 --> 00:27:29,340
tactical talks and things more details

00:27:27,540 --> 00:27:37,860
of strength molding can be found over

00:27:29,340 --> 00:27:40,250
there and here we are just open the QA

00:27:37,860 --> 00:27:40,250
session

00:27:44,340 --> 00:27:47,210
please

00:28:12,490 --> 00:28:16,660
tuchis to rip his question a little bit

00:28:20,179 --> 00:28:37,050
yep okay so his question is what kind of

00:28:33,510 --> 00:28:39,420
a guideline we are funding where we feel

00:28:37,050 --> 00:28:41,520
that's helpful for those connecting

00:28:39,420 --> 00:28:43,800
between objects and other device

00:28:41,520 --> 00:28:49,050
probably northbound device were

00:28:43,800 --> 00:28:51,120
southbound device right around oh yeah

00:28:49,050 --> 00:28:53,940
her entities are not having as well so

00:28:51,120 --> 00:28:56,280
the approach we are trying to get here

00:28:53,940 --> 00:28:59,250
is we are trying to just reduce the

00:28:56,280 --> 00:29:01,380
connections of the Ajax here if you have

00:28:59,250 --> 00:29:03,630
an open model over there connecting from

00:29:01,380 --> 00:29:06,120
all around the world so it's far they've

00:29:03,630 --> 00:29:09,210
got it tight so you say sure it means

00:29:06,120 --> 00:29:10,140
you have a open attacking surface which

00:29:09,210 --> 00:29:15,000
is not good at all

00:29:10,140 --> 00:29:17,220
so one of the approach we have here is

00:29:15,000 --> 00:29:19,850
just trying to reduce the attacking

00:29:17,220 --> 00:29:23,820
surface and we open bar limit a port

00:29:19,850 --> 00:29:29,070
from the edge for ajax as you can see we

00:29:23,820 --> 00:29:31,230
are opening quite a few rest api is that

00:29:29,070 --> 00:29:32,940
is easy for the northbound side but the

00:29:31,230 --> 00:29:35,429
southbound side you see they have

00:29:32,940 --> 00:29:37,980
different included here world 0 and kill

00:29:35,429 --> 00:29:40,380
all kind of protections so in the ajax

00:29:37,980 --> 00:29:43,710
what we are doing here is we are trying

00:29:40,380 --> 00:29:45,929
to have device service so the device

00:29:43,710 --> 00:29:51,360
service does a single point to connect

00:29:45,929 --> 00:29:54,630
all those things and if we decided in

00:29:51,360 --> 00:29:57,630
Turkey trust boundary inside Ajax

00:29:54,630 --> 00:29:59,970
that is another layer of the security

00:29:57,630 --> 00:30:02,130
chat boundary we connect we are trying

00:29:59,970 --> 00:30:05,250
to define between the device service and

00:30:02,130 --> 00:30:07,710
the core part we are trying over there

00:30:05,250 --> 00:30:10,410
if you define the transboundary outside

00:30:07,710 --> 00:30:11,130
the Ajax which is outside the device

00:30:10,410 --> 00:30:13,110
service

00:30:11,130 --> 00:30:16,880
so you are facing all kinds of protocols

00:30:13,110 --> 00:30:19,620
I'm to teach easier on you and basically

00:30:16,880 --> 00:30:22,410
that's a problem that's part you have to

00:30:19,620 --> 00:30:25,440
kind of analyze the device and make sure

00:30:22,410 --> 00:30:28,130
those connections are protected so I'm

00:30:25,440 --> 00:30:32,230
qtg you have those password credentials

00:30:28,130 --> 00:30:34,840
or for others your program applies SSL

00:30:32,230 --> 00:30:42,210
work guys so basically that's approach

00:30:34,840 --> 00:30:42,210
we are doing here please

00:31:16,370 --> 00:31:23,940
okay so this is a probably a bigger

00:31:20,670 --> 00:31:27,210
topic we're not gonna cover here links

00:31:23,940 --> 00:31:28,620
foundation has a project called eh so

00:31:27,210 --> 00:31:31,230
I'm not sure if you're familiar with

00:31:28,620 --> 00:31:34,020
that part the Attic is a part of the

00:31:31,230 --> 00:31:36,030
edge the edge project starts at the

00:31:34,020 --> 00:31:39,330
beginning of this year starting from

00:31:36,030 --> 00:31:42,870
January to address those unifying the

00:31:39,330 --> 00:31:45,600
platforms were the kind of what you

00:31:42,870 --> 00:31:47,970
described here is a far an edge the

00:31:45,600 --> 00:31:52,140
smart device stop

00:31:47,970 --> 00:31:54,540
so Alex here is serving as a center part

00:31:52,140 --> 00:31:57,240
of the framework what you are describing

00:31:54,540 --> 00:32:00,420
kind of a little bit of far and we have

00:31:57,240 --> 00:32:03,420
other project to address that so think

00:32:00,420 --> 00:32:05,610
this is kind of world gateway to

00:32:03,420 --> 00:32:08,340
connecting all the informations here and

00:32:05,610 --> 00:32:11,070
there's other product trying to just in

00:32:08,340 --> 00:32:13,820
fact intercept the traffic inside the

00:32:11,070 --> 00:32:17,160
edge X so they are analyzing the data

00:32:13,820 --> 00:32:19,560
and you described just now those

00:32:17,160 --> 00:32:22,760
markings the traffic they might be

00:32:19,560 --> 00:32:26,460
having but on the earth side the

00:32:22,760 --> 00:32:28,410
computing power is really its weak so we

00:32:26,460 --> 00:32:31,440
cannot rely on them to just kind of

00:32:28,410 --> 00:32:34,110
detect attack so instead we have to just

00:32:31,440 --> 00:32:38,400
kind of push a little bit higher on the

00:32:34,110 --> 00:32:42,750
back side to just detect those malicious

00:32:38,400 --> 00:32:44,880
behaviors to detect attacks so every

00:32:42,750 --> 00:32:46,950
project has a scope so for the Ajax

00:32:44,880 --> 00:32:50,520
foundry it's in the center ice channel

00:32:46,950 --> 00:32:53,070
of a gateway part so on the nside I

00:32:50,520 --> 00:32:55,620
would say right now we are not going to

00:32:53,070 --> 00:32:58,530
cover light we can just add attack side

00:32:55,620 --> 00:33:00,570
we can just tell party and user okay the

00:32:58,530 --> 00:33:03,320
earth of malicious behavior on York

00:33:00,570 --> 00:33:06,900
I already device the side

00:33:03,320 --> 00:33:26,730
probably that's it that's just a scope

00:33:06,900 --> 00:33:29,040
for the edge expounded currently I think

00:33:26,730 --> 00:33:32,240
if you're talking about the data center

00:33:29,040 --> 00:33:32,240
over the cloud cider

00:33:44,879 --> 00:33:51,159
that the point the target decider is

00:33:48,459 --> 00:33:53,469
kind of local it's not on the north side

00:33:51,159 --> 00:33:56,589
so what you are describing that it is

00:33:53,469 --> 00:34:00,219
about as I described back to the scope

00:33:56,589 --> 00:34:00,700
here on the north side so we have an

00:34:00,219 --> 00:34:03,940
interface

00:34:00,700 --> 00:34:06,129
it's called export stories those are the

00:34:03,940 --> 00:34:10,779
place you're connecting with your cloud

00:34:06,129 --> 00:34:15,730
with your maybe in-house data warehouse

00:34:10,779 --> 00:34:18,549
and for this part there has a hardware

00:34:15,730 --> 00:34:20,889
the out gateway so this one suit over

00:34:18,549 --> 00:34:23,260
there of course you you can you studies

00:34:20,889 --> 00:34:26,079
on different a gateway system not

00:34:23,260 --> 00:34:28,960
necessary Dell or probably from Cisco

00:34:26,079 --> 00:34:31,419
for others so this is not as powerful

00:34:28,960 --> 00:34:33,909
eyes the cloud site but it's not as weak

00:34:31,419 --> 00:34:37,299
eyes to the far end of the edge so it's

00:34:33,909 --> 00:34:40,089
set in the middle so think that like

00:34:37,299 --> 00:34:44,169
described just now think that I said get

00:34:40,089 --> 00:34:49,960
away or ha so this is the kind of a

00:34:44,169 --> 00:34:52,470
deployment scope I hope that answer a

00:34:49,960 --> 00:34:52,470
question

00:35:02,610 --> 00:35:07,140
okay sure no problem

00:35:04,720 --> 00:35:07,140
yeah

00:35:50,070 --> 00:35:53,070
okay

00:36:38,930 --> 00:36:45,900
okay I think there's a one department

00:36:43,200 --> 00:36:46,890
scope which is you are describing here

00:36:45,900 --> 00:36:49,110
for the edge X

00:36:46,890 --> 00:36:54,210
you're probably running multiple

00:36:49,110 --> 00:36:56,220
projects box currently and then I think

00:36:54,210 --> 00:37:00,390
we should rather and they are changing

00:36:56,220 --> 00:37:02,490
data things like that right so I think

00:37:00,390 --> 00:37:04,830
this is something we are going to

00:37:02,490 --> 00:37:06,810
address do with our next release so we

00:37:04,830 --> 00:37:11,820
have the attacks at one point all

00:37:06,810 --> 00:37:14,190
released June of 2019 for the next road

00:37:11,820 --> 00:37:15,570
map I think it's in coming out to work

00:37:14,190 --> 00:37:17,820
probably would have found more

00:37:15,570 --> 00:37:21,630
information over there so the drill map

00:37:17,820 --> 00:37:22,170
and the architecture and that's open to

00:37:21,630 --> 00:37:25,680
public

00:37:22,170 --> 00:37:28,440
we are they let me just go back here the

00:37:25,680 --> 00:37:30,270
last part that is a wiki page so we can

00:37:28,440 --> 00:37:34,350
friendlier and we have the working group

00:37:30,270 --> 00:37:36,660
meeting weekly so anybody is open to

00:37:34,350 --> 00:37:40,700
June so I think that the questions you

00:37:36,660 --> 00:37:40,700
have here will be answered there as well

00:37:43,609 --> 00:37:51,130
okay no more questions okay thank you

00:37:49,619 --> 00:37:54,989
very much

00:37:51,130 --> 00:37:54,989

YouTube URL: https://www.youtube.com/watch?v=iw-FzeKaj48


