Title: To Boldly go Where Linux Cannot with Zephyr and Eclipse IoT - Frédéric Desbiens, Eclipse Foundation
Publication date: 2019-09-16
Playlist: Open Source Summit & Embedded Linux Conference NA 2019
Description: 
	To Boldly go Where Linux Cannot with Zephyr and Eclipse IoT - Frédéric Desbiens, Eclipse Foundation

Linux is a versatile operating system; it can power smart watches, mainframes and everything in between. However, if a constrained device only possesses a few megabytes of memory and a CPU running at a few dozen megahertz, Linux will simply not fit. Enter the Zephyr real-time operating system (RTOS), from the Linux Foundation. Zephyr is a really small footprint, real-time operating system built with security and safety in mind for highly constrained environments. It can go where Linux can't.Having a great OS is only the first step in building a constrained device. You will also need to manage it and exchange data with it. In this presentation, you will learn how to do both using the Eclipse Paho MQTT client and the Eclipse Waakama OMA Lightweight M2M (LWM2M) library. You will also discover other components of the Eclipse IoT system that could be useful to you, and even learn the basics of Zephyr if you are new to it.
Captions: 
	00:00:00,030 --> 00:00:06,660
all right 420 so this is the time to

00:00:04,859 --> 00:00:07,130
start so thank you very much for being

00:00:06,660 --> 00:00:10,980
here

00:00:07,130 --> 00:00:13,670
my name is Frederick Divya um Frederick

00:00:10,980 --> 00:00:17,760
Debian something like that or Fred or

00:00:13,670 --> 00:00:20,520
blueberry whatever suits you and I'm the

00:00:17,760 --> 00:00:24,090
program manager for IOT NH computing at

00:00:20,520 --> 00:00:26,519
the Eclipse Foundation so another

00:00:24,090 --> 00:00:29,519
foundation that you probably know about

00:00:26,519 --> 00:00:31,859
and we'll explain a bit a bit more in

00:00:29,519 --> 00:00:35,100
this presentation what I'm doing here at

00:00:31,859 --> 00:00:36,989
this Linux Foundation conference alright

00:00:35,100 --> 00:00:39,510
so the whole point of this talk is to

00:00:36,989 --> 00:00:43,200
give you a bit of a taste of what the

00:00:39,510 --> 00:00:45,600
fear is and what Eclipse components you

00:00:43,200 --> 00:00:49,500
can use with it in order to build IOT

00:00:45,600 --> 00:00:51,110
and embedded solutions now before I say

00:00:49,500 --> 00:00:53,699
anything else how many of you are

00:00:51,110 --> 00:00:56,280
already familiar with the zipper

00:00:53,699 --> 00:01:01,530
operating system please raise your hand

00:00:56,280 --> 00:01:03,449
oh okay not many okay so that's good

00:01:01,530 --> 00:01:05,159
because I've got some content to cover

00:01:03,449 --> 00:01:07,260
that at least give you the basics and

00:01:05,159 --> 00:01:09,600
then give you the basics of what Eclipse

00:01:07,260 --> 00:01:11,390
IOT is and what components we've got in

00:01:09,600 --> 00:01:14,939
a toolkit that kind of stuff all right

00:01:11,390 --> 00:01:17,460
so let's get started first if we think

00:01:14,939 --> 00:01:20,220
about IOT solutions in a general

00:01:17,460 --> 00:01:23,520
perspective or even an embedded solution

00:01:20,220 --> 00:01:26,159
embedded is you know the the older

00:01:23,520 --> 00:01:27,930
established term but really IOT just

00:01:26,159 --> 00:01:30,960
adds the fact that you always have a

00:01:27,930 --> 00:01:34,140
network connection but whatever project

00:01:30,960 --> 00:01:36,060
you concern you consider an IOT solution

00:01:34,140 --> 00:01:37,710
or a MIDI solution will have a number of

00:01:36,060 --> 00:01:40,530
characteristics that are different from

00:01:37,710 --> 00:01:43,409
a standard software project first is the

00:01:40,530 --> 00:01:46,740
lifespan when you build an IOT thing you

00:01:43,409 --> 00:01:50,310
build it for 10 20 30 years no way you

00:01:46,740 --> 00:01:52,530
will rip off the walls of this hotel to

00:01:50,310 --> 00:01:54,960
replace sensors two years from now right

00:01:52,530 --> 00:01:57,810
so you need to think over the long term

00:01:54,960 --> 00:02:00,659
then obviously another dissolution is it

00:01:57,810 --> 00:02:02,369
erogenous in the sense that nobody in

00:02:00,659 --> 00:02:04,500
the market will give you all the

00:02:02,369 --> 00:02:06,930
software and hardware pieces that you

00:02:04,500 --> 00:02:08,520
need in a single place okay nobody can

00:02:06,930 --> 00:02:10,590
do that so you have to work with

00:02:08,520 --> 00:02:12,959
multiple vendors and obviously there's

00:02:10,590 --> 00:02:13,560
the connectivity aspect in the sense

00:02:12,959 --> 00:02:16,200
that

00:02:13,560 --> 00:02:19,170
well you always have a network but it

00:02:16,200 --> 00:02:21,660
won't be reliable it won't be stable and

00:02:19,170 --> 00:02:25,080
you have to design around that but the

00:02:21,660 --> 00:02:26,459
main concern when you think about IOT or

00:02:25,080 --> 00:02:27,870
embedded is really the fact that you

00:02:26,459 --> 00:02:30,540
will have to work with so many

00:02:27,870 --> 00:02:32,120
constraints constraints of power

00:02:30,540 --> 00:02:34,110
consumption

00:02:32,120 --> 00:02:36,330
constraints about the environment

00:02:34,110 --> 00:02:39,680
temperature humidity you name it you

00:02:36,330 --> 00:02:42,709
have to deal with that and this has a

00:02:39,680 --> 00:02:45,300
tremendous effect on the type of

00:02:42,709 --> 00:02:47,040
software and libraries that you will

00:02:45,300 --> 00:02:48,810
work with you need everything to be

00:02:47,040 --> 00:02:52,890
optimized to fit the constraints that

00:02:48,810 --> 00:02:56,130
you are and that's why typically Linux

00:02:52,890 --> 00:02:58,739
will not necessarily fit if you have

00:02:56,130 --> 00:03:02,819
really a project and IOT or embedded

00:02:58,739 --> 00:03:06,080
project that will use constraint devices

00:03:02,819 --> 00:03:08,550
so I picked out here on the slide just

00:03:06,080 --> 00:03:11,819
three devices three boards I have lying

00:03:08,550 --> 00:03:14,120
around the HUD home okay and I wouldn't

00:03:11,819 --> 00:03:16,380
pretend they will all serve in

00:03:14,120 --> 00:03:18,360
production level environment anything

00:03:16,380 --> 00:03:22,590
like that but just you look at the specs

00:03:18,360 --> 00:03:26,430
on those things CPUs 64 McGarrett's 16

00:03:22,590 --> 00:03:30,180
megahertz 64 kilobytes of RAM I mean

00:03:26,430 --> 00:03:32,940
last time I ran Linux on a 60-ish

00:03:30,180 --> 00:03:35,190
something megahertz system I had air on

00:03:32,940 --> 00:03:39,299
my head can you imagine that it's been

00:03:35,190 --> 00:03:42,260
wire all of that to say that even if

00:03:39,299 --> 00:03:45,630
embedded Linux made great progress to

00:03:42,260 --> 00:03:48,660
slim the platform trim it you still need

00:03:45,630 --> 00:03:50,760
you know a few a few dozen megabytes of

00:03:48,660 --> 00:03:52,320
RAM in order for everything to fit and

00:03:50,760 --> 00:03:54,359
maybe more if you want to do real-time

00:03:52,320 --> 00:03:57,180
that kind of stuff so that's where an

00:03:54,359 --> 00:03:58,920
operating system like Sofia is a perfect

00:03:57,180 --> 00:04:00,359
fit because it will run actually on

00:03:58,920 --> 00:04:04,980
those boards and it can do something

00:04:00,359 --> 00:04:07,680
useful with them now every year the

00:04:04,980 --> 00:04:10,230
Eclipse Foundation runs IOT developer

00:04:07,680 --> 00:04:12,269
survey and we had a question

00:04:10,230 --> 00:04:15,690
specifically on constrained devices what

00:04:12,269 --> 00:04:19,769
are people using in their projects in

00:04:15,690 --> 00:04:21,989
the real world and we had about 1700

00:04:19,769 --> 00:04:23,410
replies this year so it was quite

00:04:21,989 --> 00:04:26,260
successful

00:04:23,410 --> 00:04:27,760
and what people told us is essentially

00:04:26,260 --> 00:04:30,160
when they pick Hardware for their

00:04:27,760 --> 00:04:34,330
projects there's a tremendous amount of

00:04:30,160 --> 00:04:37,570
diversity obviously arm is dominating

00:04:34,330 --> 00:04:39,690
when you add up all the arm you know

00:04:37,570 --> 00:04:43,030
parts on this diagram you've got about

00:04:39,690 --> 00:04:48,310
70% but even in the arm itself you've

00:04:43,030 --> 00:04:50,650
got you know 16-bit 32-bit and 0m 3m7

00:04:48,310 --> 00:04:54,030
with different profiles and that kinda

00:04:50,650 --> 00:04:57,460
stuff and it's very varied and there's

00:04:54,030 --> 00:05:00,670
20 percent of the rest that's really

00:04:57,460 --> 00:05:04,410
anything and everything and if you

00:05:00,670 --> 00:05:08,800
design a solution and your solution is

00:05:04,410 --> 00:05:10,330
specifically stuck on or coupled to an

00:05:08,800 --> 00:05:12,580
architecture or anything like that you

00:05:10,330 --> 00:05:14,350
are at the mercy of your hardware

00:05:12,580 --> 00:05:17,470
provider a diverse supplier and this is

00:05:14,350 --> 00:05:20,740
a major problem that the respondents to

00:05:17,470 --> 00:05:22,300
our survey identified so zipper is good

00:05:20,740 --> 00:05:24,310
for that in the sense that it supports

00:05:22,300 --> 00:05:26,950
multiple architectures out of the box

00:05:24,310 --> 00:05:29,350
certainly and as you will see we've got

00:05:26,950 --> 00:05:31,780
additional components that angle that

00:05:29,350 --> 00:05:35,290
can help with that at Eclipse now

00:05:31,780 --> 00:05:37,600
looking at operating systems we were

00:05:35,290 --> 00:05:40,810
asking in our survey to tell us okay

00:05:37,600 --> 00:05:42,550
which OSS are you using for your IOT

00:05:40,810 --> 00:05:46,240
embedded projects okay

00:05:42,550 --> 00:05:47,980
and you could pick multiple choices and

00:05:46,240 --> 00:05:49,750
unfortunately the question didn't tell

00:05:47,980 --> 00:05:52,000
us okay pick the number one the number

00:05:49,750 --> 00:05:54,460
two it was just check everything that

00:05:52,000 --> 00:05:59,730
applies so unfortunately my data is not

00:05:54,460 --> 00:06:03,070
that good but three RTOS and bad OS iOS

00:05:59,730 --> 00:06:05,890
Contiki several operating systems were

00:06:03,070 --> 00:06:08,920
mentioned more than once and you see

00:06:05,890 --> 00:06:11,890
them on the slide but looking at the

00:06:08,920 --> 00:06:15,730
trends in non linux operating system in

00:06:11,890 --> 00:06:18,250
IOT in our survey you see a few

00:06:15,730 --> 00:06:20,800
interesting facts first the fact that

00:06:18,250 --> 00:06:24,010
most established players have seen a

00:06:20,800 --> 00:06:25,900
decline okay and many of them are

00:06:24,010 --> 00:06:28,780
proprietary in there

00:06:25,900 --> 00:06:31,060
and so you see some momentum for open

00:06:28,780 --> 00:06:34,180
source solutions in the space and the

00:06:31,060 --> 00:06:36,449
other is the great decline in no OS or

00:06:34,180 --> 00:06:38,669
bare metal and this

00:06:36,449 --> 00:06:41,069
me is really telling IOT developers

00:06:38,669 --> 00:06:43,349
start understanding that you shouldn't

00:06:41,069 --> 00:06:45,360
write low-level code if you want to

00:06:43,349 --> 00:06:46,379
deliver something that is quality ofor

00:06:45,360 --> 00:06:48,689
and on time

00:06:46,379 --> 00:06:50,159
maybe you individually are a genius

00:06:48,689 --> 00:06:53,520
developer that can do it

00:06:50,159 --> 00:06:55,529
maybe I am no I'm not maybe you are but

00:06:53,520 --> 00:06:58,080
the thing is the next guy after you the

00:06:55,529 --> 00:07:00,479
guy in the next room at the office easy

00:06:58,080 --> 00:07:02,749
you know that top-notch developer that

00:07:00,479 --> 00:07:05,279
can write low-level code without bugs

00:07:02,749 --> 00:07:08,129
probably not so to use an operating

00:07:05,279 --> 00:07:12,089
system is really really important on a

00:07:08,129 --> 00:07:13,830
constrained device and I was really

00:07:12,089 --> 00:07:15,719
happy to see that trend in our survey

00:07:13,830 --> 00:07:18,810
for sure and we see that the fear is

00:07:15,719 --> 00:07:21,419
there with three percent not shrinking

00:07:18,810 --> 00:07:23,129
which is considering the overall trend

00:07:21,419 --> 00:07:26,789
in my graph and indication that there's

00:07:23,129 --> 00:07:29,180
momentum there all right now

00:07:26,789 --> 00:07:31,469
okay many many alternatives for your

00:07:29,180 --> 00:07:33,180
real-time operating system for a

00:07:31,469 --> 00:07:36,180
constrained device how would you would

00:07:33,180 --> 00:07:38,339
pick one given the number of stuff

00:07:36,180 --> 00:07:41,009
that's there first there's obviously

00:07:38,339 --> 00:07:43,259
hardware support will it support the CPU

00:07:41,009 --> 00:07:46,110
to SOC the board that you are planning

00:07:43,259 --> 00:07:49,589
to use and then there are connectivity

00:07:46,110 --> 00:07:52,259
and power supply issues can it can it

00:07:49,589 --> 00:07:54,749
run well on a battery for 10 years and

00:07:52,259 --> 00:07:58,229
stuff like that obviously more and more

00:07:54,749 --> 00:07:59,909
security is important because with

00:07:58,229 --> 00:08:03,270
embedded and constrained devices it's

00:07:59,909 --> 00:08:05,399
it's easy to unscrew a sensor or a board

00:08:03,270 --> 00:08:07,409
from a machine from the wall or from

00:08:05,399 --> 00:08:09,479
whatever it is installed and and run

00:08:07,409 --> 00:08:11,099
with it and you don't want that device

00:08:09,479 --> 00:08:13,319
to be compromised so you need secure

00:08:11,099 --> 00:08:15,810
boot device authentication all sorts of

00:08:13,319 --> 00:08:17,490
nifty things there and that's on the

00:08:15,810 --> 00:08:20,639
functional side but on the

00:08:17,490 --> 00:08:23,580
non-functional side things to look for

00:08:20,639 --> 00:08:26,459
are for example a locking to an upstream

00:08:23,580 --> 00:08:28,289
distribution or a specific cloud you

00:08:26,459 --> 00:08:30,810
don't want to be locked in in anything I

00:08:28,289 --> 00:08:32,699
mean if you are here at a Linux

00:08:30,810 --> 00:08:35,669
conference so the same should apply to

00:08:32,699 --> 00:08:38,300
your constrained devices licensing an IP

00:08:35,669 --> 00:08:41,209
ok how is it licensed can you do

00:08:38,300 --> 00:08:44,190
commercial products out of it or not

00:08:41,209 --> 00:08:46,260
security updates CVE stuff like that I

00:08:44,190 --> 00:08:49,690
mean only the serious players will be

00:08:46,260 --> 00:08:52,420
you know emitting CVS on their OSS and

00:08:49,690 --> 00:08:55,779
do a strict follow-up on security issues

00:08:52,420 --> 00:08:57,339
safety certification and obviously for

00:08:55,779 --> 00:08:59,470
those that are open solve the number of

00:08:57,339 --> 00:09:01,810
contributors not only as a number of

00:08:59,470 --> 00:09:04,029
individuals that code but who's behind

00:09:01,810 --> 00:09:06,040
this how many organizations are

00:09:04,029 --> 00:09:08,829
supporting the project and all of that

00:09:06,040 --> 00:09:12,930
are very very important criteria and

00:09:08,829 --> 00:09:16,029
obviously there are quite a few suitable

00:09:12,930 --> 00:09:18,100
solutions in the market that fulfill

00:09:16,029 --> 00:09:20,440
those requirements if you are to pick

00:09:18,100 --> 00:09:24,550
one but to me one of the most

00:09:20,440 --> 00:09:27,040
interesting ones was the fear at the

00:09:24,550 --> 00:09:29,410
Eclipse Foundation we don't have an RTOS

00:09:27,040 --> 00:09:31,630
so I get to play with whatever I want

00:09:29,410 --> 00:09:35,009
and when I tried it with is a fear for

00:09:31,630 --> 00:09:38,319
me was really a distinctive and

00:09:35,009 --> 00:09:38,980
interesting OS to work with for a few

00:09:38,319 --> 00:09:41,290
reasons

00:09:38,980 --> 00:09:43,209
first the fact that it is so modular so

00:09:41,290 --> 00:09:45,339
you can tweak it to fit on those very

00:09:43,209 --> 00:09:46,899
very small boards with just the minimum

00:09:45,339 --> 00:09:49,170
amount of functionality that you need

00:09:46,899 --> 00:09:52,420
the fact that it supports several

00:09:49,170 --> 00:09:56,769
trading models so this makes it more

00:09:52,420 --> 00:09:59,110
adaptable to different use cases a clean

00:09:56,769 --> 00:10:01,329
driver interface memory protection

00:09:59,110 --> 00:10:03,819
strong support for Bluetooth Low Energy

00:10:01,329 --> 00:10:05,110
which is a lowest common denominator if

00:10:03,819 --> 00:10:07,990
you were working around constrained

00:10:05,110 --> 00:10:10,810
devices and the fact that it's got

00:10:07,990 --> 00:10:13,720
Bluetooth mesh now is really something

00:10:10,810 --> 00:10:16,240
and a native networking stack because

00:10:13,720 --> 00:10:19,449
it's a pain to have to deal with those

00:10:16,240 --> 00:10:21,759
things yourselves and once again unless

00:10:19,449 --> 00:10:23,740
you are networking genius you don't want

00:10:21,759 --> 00:10:26,949
to implement your own little tcp/ip

00:10:23,740 --> 00:10:30,519
stack or anything which is that low

00:10:26,949 --> 00:10:32,680
level when we consider zip here as an

00:10:30,519 --> 00:10:34,089
open source project now I think there

00:10:32,680 --> 00:10:35,860
are a few things there that are really

00:10:34,089 --> 00:10:38,380
important and make it interesting as

00:10:35,860 --> 00:10:40,660
well well first of the thing it is open

00:10:38,380 --> 00:10:42,819
source but there are two reports of

00:10:40,660 --> 00:10:45,339
projects what makes it interesting is

00:10:42,819 --> 00:10:47,500
the fact that it's license is permissive

00:10:45,339 --> 00:10:48,069
its Apache so you can do whatever you

00:10:47,500 --> 00:10:51,220
want with it

00:10:48,069 --> 00:10:53,230
and that it's got vendor neutral

00:10:51,220 --> 00:10:56,110
governance and at the Eclipse Foundation

00:10:53,230 --> 00:10:58,779
this is literally when you join you get

00:10:56,110 --> 00:11:01,470
a few tattoos at hidden places on your

00:10:58,779 --> 00:11:03,840
body and the most important one is van

00:11:01,470 --> 00:11:07,380
Neutrality okay since I started there I

00:11:03,840 --> 00:11:09,570
have to obsess about that and well I'm

00:11:07,380 --> 00:11:11,100
you know the Linux Foundation is

00:11:09,570 --> 00:11:13,980
certainly I know to believer in this

00:11:11,100 --> 00:11:16,050
approach so vendor-neutral governance is

00:11:13,980 --> 00:11:19,560
important because you don't want your

00:11:16,050 --> 00:11:21,780
RTOS to be something like golang golang

00:11:19,560 --> 00:11:24,570
is marvelous as a language is a

00:11:21,780 --> 00:11:26,640
technical achievement okay and it's got

00:11:24,570 --> 00:11:30,090
a great community but this community is

00:11:26,640 --> 00:11:32,940
stuck proposing to Google improvements

00:11:30,090 --> 00:11:35,370
and and modifications to the language

00:11:32,940 --> 00:11:38,100
and they just have to pray there for

00:11:35,370 --> 00:11:39,900
Google to accept them or not okay single

00:11:38,100 --> 00:11:42,330
vendor open source is not the way of

00:11:39,900 --> 00:11:44,280
doing things that's why if you pick an

00:11:42,330 --> 00:11:46,950
OS for your project you have to pick

00:11:44,280 --> 00:11:50,490
something that is overseen by some kind

00:11:46,950 --> 00:11:52,080
of vendor neutral body as if you're as

00:11:50,490 --> 00:11:54,000
also an LTS branch

00:11:52,080 --> 00:11:56,250
really really important if you care

00:11:54,000 --> 00:11:57,510
about the stability over the long term

00:11:56,250 --> 00:11:59,850
of your hardware and software

00:11:57,510 --> 00:12:02,160
combination especially well the talk

00:11:59,850 --> 00:12:04,530
just before me they were they were

00:12:02,160 --> 00:12:06,990
describing a project with Zafir on a

00:12:04,530 --> 00:12:09,150
hearing aid and they have to certify

00:12:06,990 --> 00:12:10,830
that with l2 turret ease so you need

00:12:09,150 --> 00:12:13,530
your software and hardware combination

00:12:10,830 --> 00:12:15,750
to be viable for several years otherwise

00:12:13,530 --> 00:12:17,670
you are running after bureaucrats and

00:12:15,750 --> 00:12:21,810
I'm uncultured that's a pain right guys

00:12:17,670 --> 00:12:23,730
alright and another interesting thing

00:12:21,810 --> 00:12:26,070
about the fears that they are looking to

00:12:23,730 --> 00:12:27,770
bring you know security certification

00:12:26,070 --> 00:12:30,240
for the code base which is another

00:12:27,770 --> 00:12:32,400
another problem that you don't have to

00:12:30,240 --> 00:12:36,600
deal with as a developer or as an

00:12:32,400 --> 00:12:38,010
organization and and believe me you

00:12:36,600 --> 00:12:40,980
don't want to have to deal with that and

00:12:38,010 --> 00:12:42,900
lawyers and that kind of stuff all right

00:12:40,980 --> 00:12:46,200
now okay

00:12:42,900 --> 00:12:48,330
that's the saffir part I'm here to tell

00:12:46,200 --> 00:12:53,370
you and you can use the fear with

00:12:48,330 --> 00:12:55,920
Eclipse IOT components maybe okay let's

00:12:53,370 --> 00:12:58,110
check who was aware that eclipse was

00:12:55,920 --> 00:13:02,310
doing stuff in the IOT an embedded space

00:12:58,110 --> 00:13:05,430
oh if you okay but the majority of you

00:13:02,310 --> 00:13:08,340
didn't so I'm glad I'm here so we are

00:13:05,430 --> 00:13:12,090
doing things there eclipse in addition

00:13:08,340 --> 00:13:14,780
I'm quite sure you know the name do not

00:13:12,090 --> 00:13:18,050
confirm please with just the IDE we

00:13:14,780 --> 00:13:19,670
much more than that we've got 270

00:13:18,050 --> 00:13:22,070
projects now with a bunch of lines of

00:13:19,670 --> 00:13:24,800
code and everything doing all of that

00:13:22,070 --> 00:13:26,780
with about 30 people most of them in

00:13:24,800 --> 00:13:31,070
Ottawa Canada and we have a team in

00:13:26,780 --> 00:13:33,380
Europe as well but in when you consider

00:13:31,070 --> 00:13:35,630
our mission and what we've been doing we

00:13:33,380 --> 00:13:38,060
have four areas that are really really

00:13:35,630 --> 00:13:39,590
strategic to us obviously cloud native

00:13:38,060 --> 00:13:42,500
Java is a big thing

00:13:39,590 --> 00:13:45,380
we are the new home for Java Enterprise

00:13:42,500 --> 00:13:48,980
Edition whoop Jakarta ie that's the new

00:13:45,380 --> 00:13:51,860
name and obviously ideas and development

00:13:48,980 --> 00:13:54,500
tools are very part of our core mission

00:13:51,860 --> 00:13:56,870
but IOT and edge computing & Automotive

00:13:54,500 --> 00:14:01,100
are also areas where we have a

00:13:56,870 --> 00:14:03,500
tremendous level of activity and looking

00:14:01,100 --> 00:14:06,610
specifically at what we are doing in the

00:14:03,500 --> 00:14:09,620
IOT space so that's about 38 projects

00:14:06,610 --> 00:14:13,100
350 plus contributors 40 member

00:14:09,620 --> 00:14:15,050
companies some of them are big some of

00:14:13,100 --> 00:14:18,830
them are small when you consider the

00:14:15,050 --> 00:14:21,020
toolkit I mean it's got you know

00:14:18,830 --> 00:14:24,350
implementations for nearly every

00:14:21,020 --> 00:14:28,730
protocol you can dream of really so MQTT

00:14:24,350 --> 00:14:32,120
clients and servers co-op etc etc so I'm

00:14:28,730 --> 00:14:35,480
not mentioning all of that today the the

00:14:32,120 --> 00:14:37,310
point is not to be exhaustive here but

00:14:35,480 --> 00:14:41,150
just to give you a taste of what we've

00:14:37,310 --> 00:14:45,140
got in the toolkit looking at our

00:14:41,150 --> 00:14:47,510
membership we have lots of organizations

00:14:45,140 --> 00:14:50,300
begin small there and that's just the

00:14:47,510 --> 00:14:51,940
membership obviously for IOT and on the

00:14:50,300 --> 00:14:54,890
fourth line you see the Linux Foundation

00:14:51,940 --> 00:14:57,230
so the Linux and Eclipse Foundation's

00:14:54,890 --> 00:14:59,660
exchange memberships a few months back

00:14:57,230 --> 00:15:01,520
and we are now happy to count the Linux

00:14:59,660 --> 00:15:05,270
Foundation and specifically the Seafarer

00:15:01,520 --> 00:15:07,339
project at part as of our IOT family

00:15:05,270 --> 00:15:09,800
so because we compete a bit on the edge

00:15:07,339 --> 00:15:11,330
of things I would say it doesn't mean

00:15:09,800 --> 00:15:12,920
that you can't work together and in my

00:15:11,330 --> 00:15:15,080
book anything that makes open so

00:15:12,920 --> 00:15:17,750
stronger is a good thing for the

00:15:15,080 --> 00:15:23,060
industry and for the community all right

00:15:17,750 --> 00:15:25,610
so what I will look at now is to give

00:15:23,060 --> 00:15:27,770
you two specific examples on how you can

00:15:25,610 --> 00:15:28,700
leverage the fear and eclipse are your

00:15:27,770 --> 00:15:31,190
key components to

00:15:28,700 --> 00:15:33,470
to solve specific problems so for

00:15:31,190 --> 00:15:36,080
example you have this marvelous board

00:15:33,470 --> 00:15:39,770
you have a bunch of sensors using the

00:15:36,080 --> 00:15:42,020
i2c protocol which is a several protocol

00:15:39,770 --> 00:15:43,940
from the 80s so you find lots of sensors

00:15:42,020 --> 00:15:47,120
that will support that if you are less

00:15:43,940 --> 00:15:48,830
familiar with that and let's say you

00:15:47,120 --> 00:15:51,920
want to write a little app that will

00:15:48,830 --> 00:15:53,900
read a sensor value well there are two

00:15:51,920 --> 00:15:57,080
main steps if you write that by hand

00:15:53,900 --> 00:15:58,910
which is to send set up some pin muxes

00:15:57,080 --> 00:16:00,500
and then interact with the sensor itself

00:15:58,910 --> 00:16:03,200
and you see the detail steps on the

00:16:00,500 --> 00:16:05,960
slide unless you are paid by the number

00:16:03,200 --> 00:16:08,900
of lines of code that you write this is

00:16:05,960 --> 00:16:11,960
well not necessarily a productive and

00:16:08,900 --> 00:16:14,180
ever write so we think there is a better

00:16:11,960 --> 00:16:16,730
way which is to write five lines of code

00:16:14,180 --> 00:16:19,010
where essentially you call a constructor

00:16:16,730 --> 00:16:20,150
for the sensor and call a read function

00:16:19,010 --> 00:16:23,650
and be done with it

00:16:20,150 --> 00:16:25,850
and at eclipse this is enabled by two

00:16:23,650 --> 00:16:28,490
projects that we have that come from

00:16:25,850 --> 00:16:31,820
Intel thank you Intel and that our

00:16:28,490 --> 00:16:32,630
Eclipse Emre and eclipse upm so in the

00:16:31,820 --> 00:16:35,210
previous example

00:16:32,630 --> 00:16:37,100
Emre and those the pin muxing and memory

00:16:35,210 --> 00:16:40,520
allocation and the low-level stuff and

00:16:37,100 --> 00:16:42,670
upm is a library that will endl the

00:16:40,520 --> 00:16:45,320
sensor itself so you see on the diagram

00:16:42,670 --> 00:16:48,110
okay you have your hardware you've got

00:16:45,320 --> 00:16:50,930
physical pins the kernel of your OS in

00:16:48,110 --> 00:16:53,900
this case def here and then Emre and on

00:16:50,930 --> 00:16:57,250
the top of it in userspace ubm so what

00:16:53,900 --> 00:17:00,500
are they exactly so Emre is a kind of

00:16:57,250 --> 00:17:02,180
standard i/o interface for IOT hardware

00:17:00,500 --> 00:17:04,790
so essentially it's a kind of hardware

00:17:02,180 --> 00:17:07,370
abstraction layer that abstracts GPIO

00:17:04,790 --> 00:17:10,100
UART whatever it's listed on the slide

00:17:07,370 --> 00:17:13,070
so I won't name everything there but

00:17:10,100 --> 00:17:15,079
most of the devices that are built in on

00:17:13,070 --> 00:17:18,500
boards or the the sensors you can find

00:17:15,079 --> 00:17:20,240
the market are already supported at

00:17:18,500 --> 00:17:24,620
least at the protocol level there and

00:17:20,240 --> 00:17:29,410
then upm is library in user space as I

00:17:24,620 --> 00:17:32,360
said that really provides you standard

00:17:29,410 --> 00:17:34,310
sensor and actuator API so for light

00:17:32,360 --> 00:17:36,350
pressure humidity temperature or

00:17:34,310 --> 00:17:38,960
whatever so whatever the actual type of

00:17:36,350 --> 00:17:41,090
sensor you have you write the code you

00:17:38,960 --> 00:17:42,340
know once and you run it on multiple

00:17:41,090 --> 00:17:44,980
platforms whether

00:17:42,340 --> 00:17:47,830
hardware or software so both libraries

00:17:44,980 --> 00:17:49,990
are written in C C++ and support

00:17:47,830 --> 00:17:51,940
multiple operating systems so zippier is

00:17:49,990 --> 00:17:54,909
one of them but this will run on Linux

00:17:51,940 --> 00:17:57,010
and in fact we have plenty of community

00:17:54,909 --> 00:17:59,020
members putting that stuff on their edge

00:17:57,010 --> 00:18:02,320
gateways for example because they put

00:17:59,020 --> 00:18:07,900
sensors on them as well and the

00:18:02,320 --> 00:18:10,210
libraries support x86 arm mips among

00:18:07,900 --> 00:18:12,730
others and have bindings for Java

00:18:10,210 --> 00:18:14,230
JavaScript and Python but obviously in

00:18:12,730 --> 00:18:18,399
the case of Saphir who will work with

00:18:14,230 --> 00:18:21,100
that mostly in c so those are very LG

00:18:18,399 --> 00:18:24,820
projects that we've got the Intel

00:18:21,100 --> 00:18:28,659
contributed them a few I think last year

00:18:24,820 --> 00:18:31,029
but they exist since 2014 so they are

00:18:28,659 --> 00:18:33,340
quite mature with a large community lots

00:18:31,029 --> 00:18:34,600
of support lots of ducks so it's it's

00:18:33,340 --> 00:18:37,299
really a pleasure to work with those

00:18:34,600 --> 00:18:39,460
teams now let's think about a different

00:18:37,299 --> 00:18:41,890
problem if I need to manage those

00:18:39,460 --> 00:18:44,500
devices let's say I have a factory with

00:18:41,890 --> 00:18:46,390
a thousand devices and all of them are

00:18:44,500 --> 00:18:47,980
fitted with sensors and I want to do

00:18:46,390 --> 00:18:50,500
predictive maintenance on that and

00:18:47,980 --> 00:18:52,419
monitor them in real time or I have this

00:18:50,500 --> 00:18:54,549
digital building with thousands of

00:18:52,419 --> 00:18:57,580
sensors everywhere over multiple floors

00:18:54,549 --> 00:18:59,620
or maybe a few thousand buses or a few

00:18:57,580 --> 00:19:01,720
hundred buses or planes or whatever and

00:18:59,620 --> 00:19:03,549
once again there are camera sensors all

00:19:01,720 --> 00:19:06,820
over the place so how do I manage that

00:19:03,549 --> 00:19:13,169
and there's a standard in the industry

00:19:06,820 --> 00:19:17,260
that's called EMA lwm to M or well

00:19:13,169 --> 00:19:19,690
lightweight I'm to him let's say and in

00:19:17,260 --> 00:19:21,370
this case at the foundation in Eclipse

00:19:19,690 --> 00:19:23,980
IIT we've got two distinct

00:19:21,370 --> 00:19:26,620
implementations of that one in Java and

00:19:23,980 --> 00:19:29,679
the other in C so obviously in the case

00:19:26,620 --> 00:19:31,779
of zippier Eclipse wacom are written in

00:19:29,679 --> 00:19:34,090
C is probably what you want to leverage

00:19:31,779 --> 00:19:37,809
it leverages a new to eclipse project

00:19:34,090 --> 00:19:43,240
for D TLS which is well the equivalent

00:19:37,809 --> 00:19:45,520
in that word for for TLS okay and and

00:19:43,240 --> 00:19:47,700
zippier has got already features that

00:19:45,520 --> 00:19:50,470
are built in that with support

00:19:47,700 --> 00:19:52,120
lightweight m 2 m and D TLS and that

00:19:50,470 --> 00:19:54,580
kind of stuff but in this case

00:19:52,120 --> 00:19:56,080
especially if you are working without

00:19:54,580 --> 00:19:57,779
those libraries

00:19:56,080 --> 00:20:00,010
not your environments and limits

00:19:57,779 --> 00:20:02,740
environments you can use the same code

00:20:00,010 --> 00:20:05,279
you know across the board and the same

00:20:02,740 --> 00:20:08,500
is true for M Roth whatever you write

00:20:05,279 --> 00:20:10,480
elsewhere we run also on Zafir also on

00:20:08,500 --> 00:20:12,390
those environments so this could be one

00:20:10,480 --> 00:20:14,950
of the reasons where you would leverage

00:20:12,390 --> 00:20:16,929
Eclipse libraries instead of the

00:20:14,950 --> 00:20:19,299
built-in ones or maybe because of the

00:20:16,929 --> 00:20:21,460
feature support for a specific thing in

00:20:19,299 --> 00:20:24,220
newer versions of the standards or stuff

00:20:21,460 --> 00:20:26,679
like that in any case they are there and

00:20:24,220 --> 00:20:29,950
both of them have server-side components

00:20:26,679 --> 00:20:32,019
as well so even though you may want to

00:20:29,950 --> 00:20:34,539
leverage the client part that's already

00:20:32,019 --> 00:20:38,139
in the fear bothwick AMA and lessen

00:20:34,539 --> 00:20:41,289
enable you to create lightweight m2m

00:20:38,139 --> 00:20:44,139
servers and the m2m standard will help

00:20:41,289 --> 00:20:48,250
you essentially to to control and

00:20:44,139 --> 00:20:53,169
monitor devices in a standard way across

00:20:48,250 --> 00:20:55,570
the industry now if this is not enough

00:20:53,169 --> 00:20:57,549
we've got another project that could be

00:20:55,570 --> 00:21:01,510
of interest for to you which is called

00:20:57,549 --> 00:21:03,909
Eclipse up bit and update we'll use m2m

00:21:01,510 --> 00:21:06,370
you see you see it at the bottom the

00:21:03,909 --> 00:21:08,620
bottom right ok device management

00:21:06,370 --> 00:21:10,659
services but it is a wider scale

00:21:08,620 --> 00:21:12,690
platform where essentially you want to

00:21:10,659 --> 00:21:15,570
push software updates to not only

00:21:12,690 --> 00:21:18,100
constrain devices but edge nodes as well

00:21:15,570 --> 00:21:20,830
across multiple ways multiple

00:21:18,100 --> 00:21:25,230
environments and this is stuff I can't

00:21:20,830 --> 00:21:28,269
name them but most leading cloud

00:21:25,230 --> 00:21:31,120
platform as a software providers ok

00:21:28,269 --> 00:21:33,159
think about the top two what top three

00:21:31,120 --> 00:21:35,289
of those are using this without telling

00:21:33,159 --> 00:21:37,480
you and on the top of that this is a

00:21:35,289 --> 00:21:39,940
core component of the Boche iot suite a

00:21:37,480 --> 00:21:43,000
commercial product that it's built on

00:21:39,940 --> 00:21:46,240
the top of that so it's got a very very

00:21:43,000 --> 00:21:48,130
wide usage in the industry already and

00:21:46,240 --> 00:21:49,990
it's a great great platform built on

00:21:48,130 --> 00:21:52,029
micro services you can integrate that

00:21:49,990 --> 00:21:55,870
with whatever else you want so it's

00:21:52,029 --> 00:22:00,130
really a very very good platform to work

00:21:55,870 --> 00:22:02,669
with all right now if we take a step

00:22:00,130 --> 00:22:04,870
back and think about IOT and embedded

00:22:02,669 --> 00:22:06,850
development there are many many many

00:22:04,870 --> 00:22:09,820
functional concerns some of them are

00:22:06,850 --> 00:22:11,770
about the constraint device itself

00:22:09,820 --> 00:22:14,170
some of them is about the edge and the

00:22:11,770 --> 00:22:16,480
gateways or whatever and obviously some

00:22:14,170 --> 00:22:18,430
of them are about the cloud so when you

00:22:16,480 --> 00:22:21,580
consider overall what we have at the

00:22:18,430 --> 00:22:23,770
Eclipse Foundation well we've got tools

00:22:21,580 --> 00:22:26,500
and solutions for most of those concerns

00:22:23,770 --> 00:22:29,890
and for those that we don't have like

00:22:26,500 --> 00:22:31,930
the RTOS or OS for the constraint device

00:22:29,890 --> 00:22:35,860
we're more than happy to work with the

00:22:31,930 --> 00:22:37,840
Linux Foundation on rising awareness of

00:22:35,860 --> 00:22:40,240
the fear because we think it's a great

00:22:37,840 --> 00:22:43,360
platform to work with and I'm still a

00:22:40,240 --> 00:22:45,640
coder although I don't code as much as I

00:22:43,360 --> 00:22:48,010
want because I travel all the time I

00:22:45,640 --> 00:22:50,440
speak all the time instead but let's say

00:22:48,010 --> 00:22:52,600
that if I were to start my own little

00:22:50,440 --> 00:22:56,260
business tomorrow as if air would be

00:22:52,600 --> 00:23:01,480
probably my my tool of choice for the

00:22:56,260 --> 00:23:03,910
operating system so plenty of stuff a

00:23:01,480 --> 00:23:06,130
very high level my apologies for that so

00:23:03,910 --> 00:23:07,960
next year I will certainly propose a few

00:23:06,130 --> 00:23:10,090
more detailed sessions about how it is

00:23:07,960 --> 00:23:12,640
to code with all of that but given this

00:23:10,090 --> 00:23:15,070
is my first year here I thought giving

00:23:12,640 --> 00:23:18,310
you a first taste and introduction to it

00:23:15,070 --> 00:23:21,070
would be better so if you want to learn

00:23:18,310 --> 00:23:23,440
more about Eclipse IOT components we've

00:23:21,070 --> 00:23:25,660
got our website IOT eclipse.org slash

00:23:23,440 --> 00:23:28,120
projects but this is just for the time

00:23:25,660 --> 00:23:30,130
being a very dry list of projects so if

00:23:28,120 --> 00:23:32,020
you need any assistance please reach out

00:23:30,130 --> 00:23:33,760
to me ok we can sit together and figure

00:23:32,020 --> 00:23:36,280
out what's the best fit for your

00:23:33,760 --> 00:23:37,150
specific project specific product that

00:23:36,280 --> 00:23:40,090
you are working on

00:23:37,150 --> 00:23:42,670
please try our technology all of our

00:23:40,090 --> 00:23:45,670
stuff is open source and permissively

00:23:42,670 --> 00:23:47,500
licensed ok so you can do whatever you

00:23:45,670 --> 00:23:50,050
want with it and we are just here to

00:23:47,500 --> 00:23:52,630
help we've got a newsletter and official

00:23:50,050 --> 00:23:54,730
Twitter account for that and we've got

00:23:52,630 --> 00:23:57,820
our own little conference so if you

00:23:54,730 --> 00:23:59,290
happen to like Germany and be around

00:23:57,820 --> 00:24:02,980
there in October

00:23:59,290 --> 00:24:04,870
then eclipse cann has a full a ot track

00:24:02,980 --> 00:24:08,260
where you will learn more about several

00:24:04,870 --> 00:24:10,840
of the stuff you know that I discuss

00:24:08,260 --> 00:24:12,370
today and much more obviously because we

00:24:10,840 --> 00:24:15,670
have interesting things brewing

00:24:12,370 --> 00:24:19,570
especially around edge computing so we

00:24:15,670 --> 00:24:21,910
are on the brim of announcing our edge

00:24:19,570 --> 00:24:23,710
computing working group will have also

00:24:21,910 --> 00:24:25,720
something called the spa

00:24:23,710 --> 00:24:28,600
klog specification working group which

00:24:25,720 --> 00:24:32,110
is essentially a standard on the top of

00:24:28,600 --> 00:24:34,480
the MQTT protocol in order to make

00:24:32,110 --> 00:24:37,419
devices that implement it interoperable

00:24:34,480 --> 00:24:39,419
because well if you ever worked with

00:24:37,419 --> 00:24:43,390
mqtt as a protocol it's a bit like

00:24:39,419 --> 00:24:46,000
working with Java messaging or WebSphere

00:24:43,390 --> 00:24:48,340
MQ or whatever you know it works well at

00:24:46,000 --> 00:24:50,020
at the transport level but I mean

00:24:48,340 --> 00:24:53,980
doesn't specify anything about the

00:24:50,020 --> 00:24:56,590
payload and the payload is he to make

00:24:53,980 --> 00:24:58,779
devices interoperate together so we are

00:24:56,590 --> 00:25:01,539
working on solving that problem with

00:24:58,779 --> 00:25:04,539
members of our community and obviously

00:25:01,539 --> 00:25:06,700
looking forward to hear from you and get

00:25:04,539 --> 00:25:09,070
you involved because as a thing this

00:25:06,700 --> 00:25:12,279
khalaf action is not just to consume the

00:25:09,070 --> 00:25:14,830
stuff this cow affection to action is

00:25:12,279 --> 00:25:17,679
really to involve yourselves and

00:25:14,830 --> 00:25:18,820
contribute to the projects because while

00:25:17,679 --> 00:25:21,730
essentially open-source

00:25:18,820 --> 00:25:24,760
you won't reap the full benefits until

00:25:21,730 --> 00:25:27,399
you contribute and the reason for that

00:25:24,760 --> 00:25:31,090
is simple when you have a critical bug

00:25:27,399 --> 00:25:33,220
on a Friday at 10:20 p.m. and you need

00:25:31,090 --> 00:25:35,740
somebody to support you I guarantee you

00:25:33,220 --> 00:25:38,590
even if you have a SLA with a commercial

00:25:35,740 --> 00:25:40,570
vendor they will not help you out in a

00:25:38,590 --> 00:25:42,220
meaningful way they will have some kind

00:25:40,570 --> 00:25:44,440
of intern or whatever that will endow

00:25:42,220 --> 00:25:46,690
the ticket you know and that's it so

00:25:44,440 --> 00:25:48,820
when you are a member of an open-source

00:25:46,690 --> 00:25:50,500
community what happens is that you know

00:25:48,820 --> 00:25:52,929
the guys who wrote the code because

00:25:50,500 --> 00:25:54,580
you're part of them so if you have a

00:25:52,929 --> 00:25:56,110
critical issue they will come to your

00:25:54,580 --> 00:25:58,600
elf because you're part of one big

00:25:56,110 --> 00:26:00,640
family so that's our approach to things

00:25:58,600 --> 00:26:02,950
so I'm looking forward to see

00:26:00,640 --> 00:26:06,250
contributions for you all from you all

00:26:02,950 --> 00:26:08,919
at some point and that's it for now so

00:26:06,250 --> 00:26:11,679
thank you very much for listening to me

00:26:08,919 --> 00:26:13,510
and I think we've got enough time for at

00:26:11,679 --> 00:26:16,430
least a few questions if I didn't scare

00:26:13,510 --> 00:26:20,749
you so thank you

00:26:16,430 --> 00:26:20,749

YouTube URL: https://www.youtube.com/watch?v=dxPcc_MvaH0


