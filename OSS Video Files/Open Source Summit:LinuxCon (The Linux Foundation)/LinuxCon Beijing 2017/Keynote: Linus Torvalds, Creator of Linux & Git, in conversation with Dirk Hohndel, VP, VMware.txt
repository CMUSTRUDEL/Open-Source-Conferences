Title: Keynote: Linus Torvalds, Creator of Linux & Git, in conversation with Dirk Hohndel, VP, VMware
Publication date: 2017-06-26
Playlist: LinuxCon Beijing 2017
Description: 
	Keynote: Linus Torvalds, Creator of Linux & Git, in conversation with Dirk Hohndel, VP, Chief Open Source Officer, VMware [E]

About Dirk Hohndel
Dirk is VMware’s Chief Open Source Officer, leading the company’s open source efforts and strategy and driving common values and processes across the company for VMware’s interaction with the open source communities. Before joining VMware, Dirk spent almost 15 years as Intel’s Chief Linux and Open Source Technologist, guiding Intel’s engagements in open source. Before that, among other roles, he worked as Chief Technology Officer of SuSE and Unix Architect of Deutsche Bank. Dirk has been an active developer and contributor in Linux and open source since the early 1990s. He was one of the early Linux kernel developers and has contributed to several dozen open source projects over the years. Dirk holds a Diploma in Mathematics and Computer Science from the University of Würzburg, Germany. He lives in Portland, OR.

About Linus Torvalds
Linus Torvalds created the Linux kernel and oversaw open source development of the widely-used Linux operating system. Torvalds was born on December 28, 1969 in Helsinki, Finland. Torvalds enrolled at the University of Helsinki in 1988, graduating with a master's degree in computer science. His M.Sc. thesis was titled Linux: A Portable Operating System. An avid computer programmer, Linus authored many gaming applications in his early years. After purchasing a personal computer with an Intel 386 CPU, he began using Minix, an Unix-inspired operating system created by Andrew Tanenbaum for use as a teaching tool. Torvalds started work on a new kernel, later to be named "Linux", in the fall of 1991 and after forming a team of volunteers to work on this new kernel, released V1.0 in the spring of 1994. In 1996, Torvalds accepted an invitation to visit the California headquarters of Transmeta, a start-up company in the first stages of designing an energy saving central processing unit (CPU). Torvalds then accepted a position at Transmeta and moved to California with his family. Along with his work for Transmeta, Torvalds continued to oversee kernel development for Linux. In 2003, Torvalds left Transmeta to focus exclusively on the Linux kernel, backed by the Open Source Development Labs (OSDL), a consortium formed by high-tech companies, which included IBM, Hewlett-Packard, Intel, AMD, RedHat, Novell and many others. The purpose of the consortium was to promote Linux development. OSDL merged with The Free Standards Group in January 2007 to become The Linux Foundation. Torvalds remains the ultimate authority on what new code is incorporated into the standard Linux kernel.
Captions: 
	00:00:00,000 --> 00:00:10,740
good morning there will be about 450

00:00:08,250 --> 00:00:12,599
videos of this event I believe that's

00:00:10,740 --> 00:00:14,490
pretty impressive I hope you're not all

00:00:12,599 --> 00:00:17,310
live-streaming because they will kill

00:00:14,490 --> 00:00:17,880
the Internet here so my name is Dirk

00:00:17,310 --> 00:00:20,730
handle

00:00:17,880 --> 00:00:24,660
I'm the inverse chief open sores officer

00:00:20,730 --> 00:00:27,390
and and I'm Linus and I hate giving

00:00:24,660 --> 00:00:30,449
speeches which is why over the last few

00:00:27,390 --> 00:00:32,759
years what we've done is is basically do

00:00:30,449 --> 00:00:34,440
these chats where where I don't have to

00:00:32,759 --> 00:00:38,070
prepare slides and then I have to

00:00:34,440 --> 00:00:39,870
prepare a talk and instead we try to

00:00:38,070 --> 00:00:43,590
make it more dynamic with an interview

00:00:39,870 --> 00:00:46,440
style event so Beijing Lina's this is

00:00:43,590 --> 00:00:50,340
your second time here this is my first

00:00:46,440 --> 00:00:53,340
time in Beijing I was in in Tianjin five

00:00:50,340 --> 00:00:55,260
years ago for three days and I after

00:00:53,340 --> 00:00:59,489
this I will have a total of four days in

00:00:55,260 --> 00:01:02,430
China so this is I think my 15th or 16th

00:00:59,489 --> 00:01:04,159
visit in Beijing I love the place maybe

00:01:02,430 --> 00:01:08,369
not the air quality but everything else

00:01:04,159 --> 00:01:11,689
I have a lot of personal history with

00:01:08,369 --> 00:01:15,030
China but I enjoy coming here a lot um

00:01:11,689 --> 00:01:19,860
let's talk a little bit about this Linux

00:01:15,030 --> 00:01:24,420
thing you released 4.12 rc6 last night

00:01:19,860 --> 00:01:26,100
at a very unusual time so can you talk a

00:01:24,420 --> 00:01:27,869
little bit about this where are we

00:01:26,100 --> 00:01:28,939
there's the security thing that I've

00:01:27,869 --> 00:01:33,180
heard about

00:01:28,939 --> 00:01:37,140
so yeah usually I release my RC kernels

00:01:33,180 --> 00:01:39,750
every week on a Sunday afternoon because

00:01:37,140 --> 00:01:43,380
it turns out that normal people work

00:01:39,750 --> 00:01:45,780
during the weekdays and then they send

00:01:43,380 --> 00:01:47,700
me their work usually Thursday Friday

00:01:45,780 --> 00:01:51,270
sometimes Saturday morning

00:01:47,700 --> 00:01:57,360
so Sunday's when I release the weekly

00:01:51,270 --> 00:01:59,969
progress and this time I was traveling

00:01:57,360 --> 00:02:02,820
which was part of why it got released on

00:01:59,969 --> 00:02:06,030
Monday evening instead but we also had a

00:02:02,820 --> 00:02:08,989
very annoying security issue really in

00:02:06,030 --> 00:02:12,409
user land that we had a

00:02:08,989 --> 00:02:14,629
Colonel Pat's floor and security issues

00:02:12,409 --> 00:02:17,239
are always interesting we we take them

00:02:14,629 --> 00:02:19,640
very seriously but sometimes the process

00:02:17,239 --> 00:02:22,579
is very annoying and you have embargo

00:02:19,640 --> 00:02:29,379
set and this time the embargo was set

00:02:22,579 --> 00:02:34,099
for 3:00 p.m. in Europe which meant that

00:02:29,379 --> 00:02:37,000
the my release of the colonel workaround

00:02:34,099 --> 00:02:40,810
for this user space security issue

00:02:37,000 --> 00:02:44,000
happened basically midnight China time

00:02:40,810 --> 00:02:47,060
so that that made my normal release

00:02:44,000 --> 00:02:51,560
schedule of trying to do it on a nice

00:02:47,060 --> 00:02:54,169
calm Sunday afternoon now I had to do it

00:02:51,560 --> 00:02:57,469
basically middle of the night on a

00:02:54,169 --> 00:03:00,319
Monday evening after the dinner here at

00:02:57,469 --> 00:03:04,250
the hotel so so sometimes you have to

00:03:00,319 --> 00:03:06,200
kind of work with external issues and

00:03:04,250 --> 00:03:08,150
then time your releases with them too

00:03:06,200 --> 00:03:10,129
but other than that so what's

00:03:08,150 --> 00:03:15,470
interesting what are the highlights in

00:03:10,129 --> 00:03:17,150
in 412 the highlight for me I don't

00:03:15,470 --> 00:03:20,510
actually I don't know how many of you

00:03:17,150 --> 00:03:23,150
realize I don't code myself very much I

00:03:20,510 --> 00:03:26,049
send out code snippets in email to

00:03:23,150 --> 00:03:30,319
developers to say maybe do it this way

00:03:26,049 --> 00:03:32,389
but my job is really integrating work

00:03:30,319 --> 00:03:35,479
from sub maintainer x' who then

00:03:32,389 --> 00:03:38,120
integrate work from from thousands of

00:03:35,479 --> 00:03:41,389
developers there's hopefully quite a few

00:03:38,120 --> 00:03:44,629
of you in the audience right now so for

00:03:41,389 --> 00:03:48,739
me the big issue tends not be the the

00:03:44,629 --> 00:03:52,040
code details but the the flow and how

00:03:48,739 --> 00:03:56,299
well the whole process works and and I

00:03:52,040 --> 00:03:58,459
think of what I'm personally

00:03:56,299 --> 00:04:01,489
particularly happy about is that it has

00:03:58,459 --> 00:04:06,500
worked so well not just for 4.12 but

00:04:01,489 --> 00:04:08,780
what we seem to have found a a code flow

00:04:06,500 --> 00:04:12,259
and a process that works and has worked

00:04:08,780 --> 00:04:15,500
for for a decade now where we can make

00:04:12,259 --> 00:04:17,900
incremental releases and we can actually

00:04:15,500 --> 00:04:20,180
have a very stable release schedule and

00:04:17,900 --> 00:04:21,889
things just continue to work and we

00:04:20,180 --> 00:04:25,129
seldom have these

00:04:21,889 --> 00:04:29,090
big panic issues and I mean if if the

00:04:25,129 --> 00:04:30,979
biggest inconvenience for for workflow

00:04:29,090 --> 00:04:33,889
is that I have to wait until Monday

00:04:30,979 --> 00:04:36,740
night instead of Sunday afternoon that's

00:04:33,889 --> 00:04:39,319
the sign of a release schedule that

00:04:36,740 --> 00:04:40,849
works really well I think but so from

00:04:39,319 --> 00:04:44,449
the feature size nothing you want to

00:04:40,849 --> 00:04:46,699
highlight um we always a new hardware we

00:04:44,449 --> 00:04:50,960
always have architecture support for new

00:04:46,699 --> 00:04:54,050
chip versions we always have what I find

00:04:50,960 --> 00:04:57,889
interesting is that code that I thought

00:04:54,050 --> 00:05:00,560
was stable continually gets improved

00:04:57,889 --> 00:05:02,990
I mean code that is really legacy code

00:05:00,560 --> 00:05:06,469
that I would have thought hey we wrote

00:05:02,990 --> 00:05:08,659
that 10-15 years ago and we haven't

00:05:06,469 --> 00:05:11,060
touched needed to touch it for many

00:05:08,659 --> 00:05:13,310
years and then suddenly somebody comes

00:05:11,060 --> 00:05:16,189
along and says hey I really care about

00:05:13,310 --> 00:05:18,439
this code and starts improving on it or

00:05:16,189 --> 00:05:20,629
starts making bug reports and something

00:05:18,439 --> 00:05:22,550
that I thought nobody actually ever used

00:05:20,629 --> 00:05:25,310
so one of the things I found interesting

00:05:22,550 --> 00:05:28,699
in 4.12 that nobody else should care

00:05:25,310 --> 00:05:31,389
about is that we've had a lot of fixes

00:05:28,699 --> 00:05:33,680
to the ufs file system that's the

00:05:31,389 --> 00:05:36,349
traditional UNIX file system that the

00:05:33,680 --> 00:05:39,620
BSD people use and that Linux people

00:05:36,349 --> 00:05:44,449
tend to never ever use and and for some

00:05:39,620 --> 00:05:47,719
reason some R and excuse me some random

00:05:44,449 --> 00:05:50,750
person started using ufs I think he's

00:05:47,719 --> 00:05:52,520
just maybe he's migrating for BSD maybe

00:05:50,750 --> 00:05:55,129
he just wants to run at the same time

00:05:52,520 --> 00:05:57,469
and as a reason this false theme that I

00:05:55,129 --> 00:06:00,500
thought was basically done has been

00:05:57,469 --> 00:06:02,810
seeing on a surprising amount of changes

00:06:00,500 --> 00:06:05,689
so I find it interesting that we we do

00:06:02,810 --> 00:06:07,969
have new hardware new features new

00:06:05,689 --> 00:06:11,029
things that we get to all but even after

00:06:07,969 --> 00:06:13,250
25 years we also have these old very

00:06:11,029 --> 00:06:16,490
basic things that people still care

00:06:13,250 --> 00:06:19,550
about and still improve so I have a

00:06:16,490 --> 00:06:21,370
little quiz for you what do these things

00:06:19,550 --> 00:06:25,969
have in common

00:06:21,370 --> 00:06:30,380
Terminator 2 Judgment Day The Silence of

00:06:25,969 --> 00:06:34,099
the Lambs Bryan Adams everything I do I

00:06:30,380 --> 00:06:37,270
do it for you and Madonna justify my

00:06:34,099 --> 00:06:37,270
love and I'm not going to sing

00:06:37,780 --> 00:06:44,450
have you been taking a medication so

00:06:42,320 --> 00:06:48,350
these are the top two movies and top two

00:06:44,450 --> 00:06:50,630
songs of 1991 and the fact that no one

00:06:48,350 --> 00:06:53,750
in the audience knows the songs or the

00:06:50,630 --> 00:06:56,780
movies makes this even more funny so you

00:06:53,750 --> 00:07:00,080
have been doing the exact same job since

00:06:56,780 --> 00:07:04,540
these cultural highlights were created

00:07:00,080 --> 00:07:04,540
have you considered taking a sabbatical

00:07:05,110 --> 00:07:15,470
not really so I really like what I'm

00:07:09,530 --> 00:07:19,010
doing I like waking up and having a job

00:07:15,470 --> 00:07:23,960
that is technically interesting and I

00:07:19,010 --> 00:07:25,730
just challenging while not being too

00:07:23,960 --> 00:07:27,530
stressful so I can do it for long

00:07:25,730 --> 00:07:29,630
stretches you don't want to have the job

00:07:27,530 --> 00:07:31,520
where you think you're burning out but

00:07:29,630 --> 00:07:33,050
at the same time also something that I

00:07:31,520 --> 00:07:35,390
feel like I'm making a real difference

00:07:33,050 --> 00:07:38,270
and I do something that is meaningful

00:07:35,390 --> 00:07:40,460
just not just for me and I think

00:07:38,270 --> 00:07:43,580
everybody I hope everybody in the

00:07:40,460 --> 00:07:46,640
audience really would like to have that

00:07:43,580 --> 00:07:47,960
kind of job where where they can do it

00:07:46,640 --> 00:07:50,390
because it's interesting and because

00:07:47,960 --> 00:07:55,130
they like it but also because it matters

00:07:50,390 --> 00:08:00,320
outside your own little sphere and I've

00:07:55,130 --> 00:08:04,120
occasionally taken breaks from it Jim

00:08:00,320 --> 00:08:07,040
mentioned the two or three weeks I was

00:08:04,120 --> 00:08:10,610
working on get to get that whole project

00:08:07,040 --> 00:08:13,670
started but every time I take a longer

00:08:10,610 --> 00:08:17,350
break I get bored so I mean even when I

00:08:13,670 --> 00:08:21,140
go diving which is my only real hobby

00:08:17,350 --> 00:08:26,360
and I might be away for a week I

00:08:21,140 --> 00:08:28,640
actually look forward to getting back to

00:08:26,360 --> 00:08:31,430
doing Linux I don't look forward to the

00:08:28,640 --> 00:08:35,210
thousand emails waiting for me but I I

00:08:31,430 --> 00:08:36,830
look forward to the job so I mean if

00:08:35,210 --> 00:08:38,930
that ever changes maybe I'll need to

00:08:36,830 --> 00:08:41,690
find somebody some sucker to take over

00:08:38,930 --> 00:08:43,910
my job but but I never had the feeling

00:08:41,690 --> 00:08:46,640
that okay now I need to take a longer

00:08:43,910 --> 00:08:47,530
break so I'll talk about this a little

00:08:46,640 --> 00:08:49,750
more

00:08:47,530 --> 00:08:53,320
and I look at this from the perspective

00:08:49,750 --> 00:08:55,230
of sustainability so if is the

00:08:53,320 --> 00:08:58,150
development model that we have

00:08:55,230 --> 00:09:00,220
sustainable it certainly is in the sense

00:08:58,150 --> 00:09:02,590
that you just said you love what you do

00:09:00,220 --> 00:09:05,920
and and you think the process that we've

00:09:02,590 --> 00:09:08,740
arrived at is fantastic but if I look at

00:09:05,920 --> 00:09:11,650
this you know 20 years from now if I

00:09:08,740 --> 00:09:14,680
look at this really long term is there

00:09:11,650 --> 00:09:16,510
anything in that question of how we as a

00:09:14,680 --> 00:09:20,310
community can continue to be this

00:09:16,510 --> 00:09:20,310
successful that you are worried about

00:09:20,340 --> 00:09:27,430
not really I used to get the question

00:09:23,790 --> 00:09:29,110
what happens if I get hit by a bus and I

00:09:27,430 --> 00:09:32,500
don't actually get that question anymore

00:09:29,110 --> 00:09:34,690
because our processes not only has

00:09:32,500 --> 00:09:37,690
worked for 25 years now I mean it's

00:09:34,690 --> 00:09:41,230
changed over the years but still but we

00:09:37,690 --> 00:09:45,400
have a very strong maintainer group I

00:09:41,230 --> 00:09:46,810
mean we have we complain about the fact

00:09:45,400 --> 00:09:53,310
that we don't have enough money gainers

00:09:46,810 --> 00:09:56,440
and it's true we we only have a set of a

00:09:53,310 --> 00:10:00,070
few tens of really top maintain errs

00:09:56,440 --> 00:10:02,530
that do the daily work of merging most

00:10:00,070 --> 00:10:04,620
stuff but at the same time for an

00:10:02,530 --> 00:10:08,950
open-source project for a few tens of

00:10:04,620 --> 00:10:13,870
really top technical lead people is a is

00:10:08,950 --> 00:10:16,210
a very strong team and at the same time

00:10:13,870 --> 00:10:18,960
as we have these maintained errs that

00:10:16,210 --> 00:10:22,690
are getting older and fatter

00:10:18,960 --> 00:10:25,900
we also continually have new people

00:10:22,690 --> 00:10:28,480
coming in I mean it takes years to go

00:10:25,900 --> 00:10:32,440
from being a new developer to being a

00:10:28,480 --> 00:10:34,390
top maintainer but it still happens and

00:10:32,440 --> 00:10:37,240
and there are lots of new people coming

00:10:34,390 --> 00:10:41,680
in so I don't feel like we should

00:10:37,240 --> 00:10:45,460
necessarily worry about the process and

00:10:41,680 --> 00:10:49,030
and Linux for the next 20 years I mean

00:10:45,460 --> 00:10:50,710
who knows maybe some new and aggressive

00:10:49,030 --> 00:10:52,180
project comes along and shows that they

00:10:50,710 --> 00:10:55,660
can do what we do better but that

00:10:52,180 --> 00:10:59,740
doesn't look very likely either so so I

00:10:55,660 --> 00:11:01,430
don't worry about that we we've had

00:10:59,740 --> 00:11:04,010
situations where

00:11:01,430 --> 00:11:07,850
needed to change how we work and they

00:11:04,010 --> 00:11:11,089
are very very painful and if if we hit

00:11:07,850 --> 00:11:12,500
that again I mean we had to do change

00:11:11,089 --> 00:11:19,399
it's over ten years now

00:11:12,500 --> 00:11:21,470
and and it was acrimonious and and there

00:11:19,399 --> 00:11:25,550
were there was a lot of stress involved

00:11:21,470 --> 00:11:28,250
when you change how how you work if we

00:11:25,550 --> 00:11:30,050
have to do that again now that we're so

00:11:28,250 --> 00:11:32,000
much bigger that's going to be very

00:11:30,050 --> 00:11:35,180
painful but so far we've been scaling

00:11:32,000 --> 00:11:37,850
very smoothly one of the things that I

00:11:35,180 --> 00:11:41,180
find fascinating about Linux is that

00:11:37,850 --> 00:11:43,520
there has never been a successful fork

00:11:41,180 --> 00:11:46,010
it has never been a challenge to your

00:11:43,520 --> 00:11:48,500
leadership why do you think that is um I

00:11:46,010 --> 00:11:50,060
actually disagree to some degree I think

00:11:48,500 --> 00:11:52,850
there's been lots of very successful

00:11:50,060 --> 00:11:56,270
Forks and one of the things that been

00:11:52,850 --> 00:11:57,560
made them makes people not think of them

00:11:56,270 --> 00:12:02,990
as Forks is that they weren't

00:11:57,560 --> 00:12:04,700
acrimonious right we I've always said

00:12:02,990 --> 00:12:07,790
that if somebody has a new feature that

00:12:04,700 --> 00:12:10,540
I don't believe in right it happens all

00:12:07,790 --> 00:12:14,630
the time people say I want to do this

00:12:10,540 --> 00:12:16,339
and it's going to change everything and

00:12:14,630 --> 00:12:19,520
it's going to make the colonel's so much

00:12:16,339 --> 00:12:21,860
better and and my feeling was always hey

00:12:19,520 --> 00:12:25,190
go ahead do it

00:12:21,860 --> 00:12:30,290
prove yourself I think it's a bad idea

00:12:25,190 --> 00:12:32,540
but you can prove me wrong and and that

00:12:30,290 --> 00:12:35,060
has actually been fairly different in

00:12:32,540 --> 00:12:37,790
the kernel from a lot of other projects

00:12:35,060 --> 00:12:41,029
and and I literally designed I mean when

00:12:37,790 --> 00:12:44,980
I sat down and wrote get one of the

00:12:41,029 --> 00:12:48,470
prime design rules was that the whole

00:12:44,980 --> 00:12:50,990
you're supposed to be able to fork and

00:12:48,470 --> 00:12:53,529
it should be really easy to go off on

00:12:50,990 --> 00:12:58,370
your own and do something on your own

00:12:53,529 --> 00:13:01,760
and the thing is if you have these kinds

00:12:58,370 --> 00:13:05,329
of Forks that are friendly and are on

00:13:01,760 --> 00:13:08,120
the type where hey prove me wrong show

00:13:05,329 --> 00:13:10,940
that you are really doing something new

00:13:08,120 --> 00:13:12,450
really doing something interesting doing

00:13:10,940 --> 00:13:14,330
something that really improves

00:13:12,450 --> 00:13:18,270
the colonel if you're in that situation

00:13:14,330 --> 00:13:19,740
then when the person who me or the

00:13:18,270 --> 00:13:22,260
company who made the improvement comes

00:13:19,740 --> 00:13:26,220
back and say hey look I actually

00:13:22,260 --> 00:13:28,860
improved the colonel there's no there's

00:13:26,220 --> 00:13:29,340
no bad feelings there's like okay I was

00:13:28,860 --> 00:13:32,070
wrong

00:13:29,340 --> 00:13:34,620
I will take your much improved code and

00:13:32,070 --> 00:13:36,690
we'll merge it back and I think that's

00:13:34,620 --> 00:13:39,210
the big deal that you actually want to

00:13:36,690 --> 00:13:40,770
encourage Forks you want to encourage

00:13:39,210 --> 00:13:44,130
these Forks that happen all the time

00:13:40,770 --> 00:13:46,680
when when people do development but you

00:13:44,130 --> 00:13:49,800
also want to make it easy to take back

00:13:46,680 --> 00:13:52,680
the good ones and the fact is you don't

00:13:49,800 --> 00:13:55,770
see a lot of the forks because most of

00:13:52,680 --> 00:13:59,640
the time I'm right and most of the forks

00:13:55,770 --> 00:14:03,210
are bad and they never go anywhere but

00:13:59,640 --> 00:14:05,250
but when I'm wrong I'm like wow good job

00:14:03,210 --> 00:14:08,550
I'll take the credit for your work now

00:14:05,250 --> 00:14:10,860
so so that's how pretty much all

00:14:08,550 --> 00:14:13,080
development gets done but I think you

00:14:10,860 --> 00:14:14,250
you kind of just said you disagree but

00:14:13,080 --> 00:14:17,040
then you proved my point

00:14:14,250 --> 00:14:19,710
because it is about the leadership it is

00:14:17,040 --> 00:14:22,680
about the approach of saying go as hell

00:14:19,710 --> 00:14:25,650
proved yourself and I'll take it if it's

00:14:22,680 --> 00:14:28,430
successful and to me that is the secret

00:14:25,650 --> 00:14:31,140
of the fact that there isn't a

00:14:28,430 --> 00:14:33,300
differently named Linux clone with a

00:14:31,140 --> 00:14:33,630
different leader and and that was my

00:14:33,300 --> 00:14:35,550
point

00:14:33,630 --> 00:14:38,640
but you made a very interesting comment

00:14:35,550 --> 00:14:41,240
here about the the role that gets place

00:14:38,640 --> 00:14:44,100
in this and I have a somewhat a

00:14:41,240 --> 00:14:47,310
controversial question for you Linux

00:14:44,100 --> 00:14:49,530
obviously had a huge impact but if I

00:14:47,310 --> 00:14:52,770
think about the transformational nature

00:14:49,530 --> 00:14:55,140
of git and what it has done to software

00:14:52,770 --> 00:14:57,960
development not just in open-source but

00:14:55,140 --> 00:15:00,780
I mean companies like like Microsoft or

00:14:57,960 --> 00:15:03,510
VMware use git for software development

00:15:00,780 --> 00:15:06,630
internally so do you think that get

00:15:03,510 --> 00:15:09,870
maybe had a huge er a larger impact than

00:15:06,630 --> 00:15:14,370
Linux in that sense I'm actually very

00:15:09,870 --> 00:15:16,710
surprised about how how widely get has

00:15:14,370 --> 00:15:18,889
spread I'm pleased

00:15:16,710 --> 00:15:22,040
obviously and uh

00:15:18,889 --> 00:15:25,519
I feel like it validates my notion of

00:15:22,040 --> 00:15:28,519
doing distributed development at the

00:15:25,519 --> 00:15:30,889
same time just looking back at most

00:15:28,519 --> 00:15:34,609
source control versions it tends to be a

00:15:30,889 --> 00:15:37,819
huge slog and it has to be really hard

00:15:34,609 --> 00:15:42,499
to introduce a new software control

00:15:37,819 --> 00:15:45,410
system and and I expected get to really

00:15:42,499 --> 00:15:47,629
be limited mostly to the kernel because

00:15:45,410 --> 00:15:51,410
it was tailored for for what we needed

00:15:47,629 --> 00:15:54,829
to do and and for the I don't know how

00:15:51,410 --> 00:15:59,419
many of you actually have followed get

00:15:54,829 --> 00:16:02,449
but for the forced first three four

00:15:59,419 --> 00:16:04,549
years one of the main complaints about

00:16:02,449 --> 00:16:07,069
git was that it was so different and it

00:16:04,549 --> 00:16:10,609
was so hard to use because people were

00:16:07,069 --> 00:16:13,839
used to the CVS model or subversion

00:16:10,609 --> 00:16:16,269
model or there's a ton of these

00:16:13,839 --> 00:16:19,399
commercial source control management

00:16:16,269 --> 00:16:22,009
systems that people also use and get was

00:16:19,399 --> 00:16:24,410
very different and get took a different

00:16:22,009 --> 00:16:26,739
kind of mindset to get used to and then

00:16:24,410 --> 00:16:30,470
about five years ago

00:16:26,739 --> 00:16:33,110
something changed and and I think it was

00:16:30,470 --> 00:16:35,809
just that uh enough projects and enough

00:16:33,110 --> 00:16:37,489
developers had started using it and

00:16:35,809 --> 00:16:40,309
suddenly it wasn't different anymore

00:16:37,489 --> 00:16:43,220
just because now git was what they were

00:16:40,309 --> 00:16:45,169
used to and and people really started

00:16:43,220 --> 00:16:49,730
taking advantage of the development

00:16:45,169 --> 00:16:51,829
model and of the just security and and

00:16:49,730 --> 00:16:54,290
the feeling of security that when you

00:16:51,829 --> 00:16:57,139
have something in gift it will not get

00:16:54,290 --> 00:16:59,449
corrupted and when using strong hashes

00:16:57,139 --> 00:17:03,289
and making sure that we actually track

00:16:59,449 --> 00:17:04,909
everything and we never lose data so it

00:17:03,289 --> 00:17:07,189
was kind of interesting to see how the

00:17:04,909 --> 00:17:10,100
project that I thought was kernel

00:17:07,189 --> 00:17:12,799
specifically really spread very widely

00:17:10,100 --> 00:17:14,329
and and when my daughter went off to

00:17:12,799 --> 00:17:21,370
call my oldest daughter went off to

00:17:14,329 --> 00:17:25,939
college like a month or two later she

00:17:21,370 --> 00:17:28,789
sent me an email back and said if she

00:17:25,939 --> 00:17:30,870
found is hugely amusing that she was

00:17:28,789 --> 00:17:34,410
known as the daughter

00:17:30,870 --> 00:17:36,330
of the person who created get not as the

00:17:34,410 --> 00:17:38,540
daughter of the person or created Linux

00:17:36,330 --> 00:17:41,760
because they all use get inside of Duke

00:17:38,540 --> 00:17:45,150
and some of them used Linux to but get

00:17:41,760 --> 00:17:48,690
was very widely known among the computer

00:17:45,150 --> 00:17:50,910
science students and I always also found

00:17:48,690 --> 00:17:56,700
that interesting because to me it was

00:17:50,910 --> 00:17:59,010
this short I actually ended up

00:17:56,700 --> 00:18:02,700
maintaining it only for about three

00:17:59,010 --> 00:18:05,280
maybe four months and and for the last

00:18:02,700 --> 00:18:07,950
ten plus years it has been maintained by

00:18:05,280 --> 00:18:10,740
junior hamana we've done an outstanding

00:18:07,950 --> 00:18:15,470
job and should really get all the credit

00:18:10,740 --> 00:18:18,900
for how well it works but despite that

00:18:15,470 --> 00:18:20,670
in certain circles get is the the more

00:18:18,900 --> 00:18:23,130
well-known one on the one you actually

00:18:20,670 --> 00:18:25,260
interact with daily and it's probably

00:18:23,130 --> 00:18:28,200
because quite often Linux is hidden

00:18:25,260 --> 00:18:30,210
right if you have an Android phone you

00:18:28,200 --> 00:18:32,600
are running Linux but you don't think of

00:18:30,210 --> 00:18:35,400
it as Linux but if you're running git

00:18:32,600 --> 00:18:37,230
you very you're very aware of the fact

00:18:35,400 --> 00:18:41,010
that you're running it so sometimes it's

00:18:37,230 --> 00:18:41,700
a perception issue so outside of of git

00:18:41,010 --> 00:18:43,770
and Linux

00:18:41,700 --> 00:18:45,720
what other open-source products and I'm

00:18:43,770 --> 00:18:48,630
not on now no no I'm not talking about

00:18:45,720 --> 00:18:50,790
subsurface outside of the projects that

00:18:48,630 --> 00:18:53,880
you started let's try to this way

00:18:50,790 --> 00:18:58,860
what other open-source projects do you

00:18:53,880 --> 00:19:01,020
spend time on surprisingly few I used to

00:18:58,860 --> 00:19:03,330
be I've always been interested in

00:19:01,020 --> 00:19:05,100
low-level details so I used to be mostly

00:19:03,330 --> 00:19:07,410
I think this is why obviously I do a

00:19:05,100 --> 00:19:10,080
kernel but I used to be very into

00:19:07,410 --> 00:19:13,650
compilers and and editors and things

00:19:10,080 --> 00:19:16,890
like that like low-level programming

00:19:13,650 --> 00:19:22,559
tools that that are not really user

00:19:16,890 --> 00:19:26,000
focused and it may be it's just because

00:19:22,559 --> 00:19:30,510
I'm a fairly focused kind of person I

00:19:26,000 --> 00:19:33,750
don't like being distracted by different

00:19:30,510 --> 00:19:37,800
things I prefer to concentrate on on one

00:19:33,750 --> 00:19:41,340
project so so I all my time is spent on

00:19:37,800 --> 00:19:43,120
Linux and there's almost no time to look

00:19:41,340 --> 00:19:45,540
at other open-source projects

00:19:43,120 --> 00:19:49,360
outside of that we sometimes have

00:19:45,540 --> 00:19:52,930
incidental issues like we find compiler

00:19:49,360 --> 00:19:55,300
bugs but but then it's still my Linux

00:19:52,930 --> 00:19:57,100
work that is involved and then the fact

00:19:55,300 --> 00:19:59,650
that I talk to other open-source

00:19:57,100 --> 00:20:02,110
projects because we have issues with

00:19:59,650 --> 00:20:05,770
them or they have issues with us it is

00:20:02,110 --> 00:20:07,630
still related to Linux for me so we

00:20:05,770 --> 00:20:09,910
talked about this earlier the world has

00:20:07,630 --> 00:20:13,360
changed dramatically in the last 26

00:20:09,910 --> 00:20:18,700
years if you were starting today what do

00:20:13,360 --> 00:20:20,290
you think you'd be working on um one of

00:20:18,700 --> 00:20:23,350
the things I find interesting and that I

00:20:20,290 --> 00:20:25,780
probably would have been really excited

00:20:23,350 --> 00:20:30,130
about when I was a teenagers and then

00:20:25,780 --> 00:20:33,970
early 20s when I started Linux is you

00:20:30,130 --> 00:20:36,429
can tinker with hardware so much more

00:20:33,970 --> 00:20:38,679
easily than you could when I was growing

00:20:36,429 --> 00:20:41,290
up and I was dangerous with hardware I

00:20:38,679 --> 00:20:43,150
would I would try to build things and I

00:20:41,290 --> 00:20:44,679
would destroy computers because I was

00:20:43,150 --> 00:20:48,640
not very good at it but I always found

00:20:44,679 --> 00:20:51,460
it very interesting and now getting

00:20:48,640 --> 00:20:54,070
involved with FPGA is if you're actually

00:20:51,460 --> 00:20:57,400
interested in chip design is actually

00:20:54,070 --> 00:20:59,770
much is to be expensive to get involved

00:20:57,400 --> 00:21:01,960
now you can get an FBA development board

00:20:59,770 --> 00:21:05,850
and and free tools to play around with

00:21:01,960 --> 00:21:09,460
it for reasonably low cost all these

00:21:05,850 --> 00:21:12,640
Raspberry Pi random small things that he

00:21:09,460 --> 00:21:14,470
can build up with yourself I think

00:21:12,640 --> 00:21:18,550
that's that's something that I would

00:21:14,470 --> 00:21:20,470
really have enjoyed and and and if if I

00:21:18,550 --> 00:21:22,750
was starting out now that's probably

00:21:20,470 --> 00:21:24,880
where I would be looking but let's let's

00:21:22,750 --> 00:21:27,040
look at the audience if you were a young

00:21:24,880 --> 00:21:29,320
Chinese developer and you wanted to use

00:21:27,040 --> 00:21:32,320
open source as a way to build your

00:21:29,320 --> 00:21:33,850
career what do you think we should they

00:21:32,320 --> 00:21:38,620
where should they look what is what is

00:21:33,850 --> 00:21:40,059
linnaeus advice to success I get the

00:21:38,620 --> 00:21:42,670
question what should I do quite often

00:21:40,059 --> 00:21:45,250
and I have a really hard time answering

00:21:42,670 --> 00:21:47,320
it partly it's because for me it was

00:21:45,250 --> 00:21:49,390
always I was very self-motivated I

00:21:47,320 --> 00:21:51,400
pretty much always knew what I wanted to

00:21:49,390 --> 00:21:54,370
do and

00:21:51,400 --> 00:21:58,330
and the questions feels kind of odd to

00:21:54,370 --> 00:22:00,700
me it's like it I I was never told what

00:21:58,330 --> 00:22:04,000
I should look at doing and I'm not sure

00:22:00,700 --> 00:22:07,870
my example is necessarily the right

00:22:04,000 --> 00:22:09,760
thing to follow there's a ton of

00:22:07,870 --> 00:22:12,430
open-source projects and if you're a

00:22:09,760 --> 00:22:14,200
programmer or you are beginning

00:22:12,430 --> 00:22:18,100
programmer and just want to further your

00:22:14,200 --> 00:22:19,960
career find something that you're

00:22:18,100 --> 00:22:22,150
interested in and find something that

00:22:19,960 --> 00:22:25,330
you think you can actually follow for

00:22:22,150 --> 00:22:28,450
more than just a few weeks find

00:22:25,330 --> 00:22:30,910
something where you can get to know the

00:22:28,450 --> 00:22:33,510
code well um you can spend enough time

00:22:30,910 --> 00:22:35,710
and effort that you get to know the code

00:22:33,510 --> 00:22:38,950
so that you get to the point where

00:22:35,710 --> 00:22:41,200
you're an expert on that code piece it

00:22:38,950 --> 00:22:44,020
doesn't have to be the whole project

00:22:41,200 --> 00:22:45,550
like for the kernel nobody and I mean

00:22:44,020 --> 00:22:47,830
really nobody not me

00:22:45,550 --> 00:22:51,070
nobody's an expert on the whole kernel

00:22:47,830 --> 00:22:53,170
everybody has areas that they know well

00:22:51,070 --> 00:22:55,450
enough that they can be an expert on

00:22:53,170 --> 00:22:59,290
that and once you're in that situation

00:22:55,450 --> 00:23:01,420
where you know a small project or a part

00:22:59,290 --> 00:23:04,450
of a bigger project and you can really

00:23:01,420 --> 00:23:07,240
be part of the community and send out

00:23:04,450 --> 00:23:11,590
patches it's not just about the coding

00:23:07,240 --> 00:23:15,580
it's a lot of this is about the social

00:23:11,590 --> 00:23:18,490
aspect of open-source you you get

00:23:15,580 --> 00:23:24,900
connections you are improving yourself

00:23:18,490 --> 00:23:27,580
as a programmer but you also are showing

00:23:24,900 --> 00:23:30,130
you're basically showing off you're

00:23:27,580 --> 00:23:32,559
sharing the world hey look I made these

00:23:30,130 --> 00:23:36,640
improvements I am competent I am worthy

00:23:32,559 --> 00:23:41,470
of of going far in my community in my

00:23:36,640 --> 00:23:43,240
job and the showing off part of

00:23:41,470 --> 00:23:46,210
open-source is actually to a large

00:23:43,240 --> 00:23:49,270
degree why I released Linux originally

00:23:46,210 --> 00:23:51,250
as open-source it was like I do

00:23:49,270 --> 00:23:54,100
programming because I think it's fun and

00:23:51,250 --> 00:23:56,710
it's challenging and it's basically the

00:23:54,100 --> 00:23:59,500
best mental gymnastics you can do in the

00:23:56,710 --> 00:24:01,080
modern world I think but then I released

00:23:59,500 --> 00:24:04,770
it because

00:24:01,080 --> 00:24:07,230
I wanted to just show people look this

00:24:04,770 --> 00:24:09,930
is what I worked on for six months it's

00:24:07,230 --> 00:24:12,620
not big yet but it's it's doing

00:24:09,930 --> 00:24:15,960
something interesting and and in fact

00:24:12,620 --> 00:24:18,000
the social commentary and the fact that

00:24:15,960 --> 00:24:20,670
we grew a community around it came as a

00:24:18,000 --> 00:24:23,130
surprise to me and and it was a very

00:24:20,670 --> 00:24:28,080
pleasant surprise it is why I still do

00:24:23,130 --> 00:24:30,660
links 25 plus years later the technology

00:24:28,080 --> 00:24:32,970
is still interesting and our problems

00:24:30,660 --> 00:24:36,780
have evolved and we still do new things

00:24:32,970 --> 00:24:39,990
but at the same time the thing I really

00:24:36,780 --> 00:24:42,090
enjoy about open source is the

00:24:39,990 --> 00:24:44,310
interaction with people they're not all

00:24:42,090 --> 00:24:46,290
friendly we have a lot of bickering we

00:24:44,310 --> 00:24:48,240
have a lot of arguments about the right

00:24:46,290 --> 00:24:51,210
way to do things and things like that

00:24:48,240 --> 00:24:53,820
but I actually think that's also part of

00:24:51,210 --> 00:24:55,290
what makes it interesting so find

00:24:53,820 --> 00:24:58,980
something you're interested in getting

00:24:55,290 --> 00:25:01,290
involved you will first have to spend a

00:24:58,980 --> 00:25:04,320
certain amount of time to to learn the

00:25:01,290 --> 00:25:08,550
project but but there's a huge upside

00:25:04,320 --> 00:25:12,540
not just from a career standpoint but

00:25:08,550 --> 00:25:15,270
also from like a satisfying project in

00:25:12,540 --> 00:25:17,370
your life I I think you're giving an

00:25:15,270 --> 00:25:19,500
amazing answer to this question because

00:25:17,370 --> 00:25:23,700
that is exactly what I think matters

00:25:19,500 --> 00:25:25,440
find something that you're interested in

00:25:23,700 --> 00:25:28,020
that you want to do and then keep doing

00:25:25,440 --> 00:25:30,540
it you know stay with it there's there's

00:25:28,020 --> 00:25:33,720
one other aspect when talking to an

00:25:30,540 --> 00:25:36,600
audience here in Asia I think English

00:25:33,720 --> 00:25:38,190
skills the ability to express yourself

00:25:36,600 --> 00:25:41,700
in English if you want to be successful

00:25:38,190 --> 00:25:43,950
in the global project are quite

00:25:41,700 --> 00:25:46,230
important to end and I want to use this

00:25:43,950 --> 00:25:49,020
to thank our wonderful translator who

00:25:46,230 --> 00:25:50,940
has been diligently trying to keep track

00:25:49,020 --> 00:25:53,340
of us and and please give a round of

00:25:50,940 --> 00:25:58,860
applause to to our translator who helped

00:25:53,340 --> 00:26:01,200
us here and I think on that we'll have

00:25:58,860 --> 00:26:02,940
to stop we're out of time thank you very

00:26:01,200 --> 00:26:04,950
much for your attention I hope this was

00:26:02,940 --> 00:26:07,470
interesting and fun for you and I hope

00:26:04,950 --> 00:26:07,670
we'll see you next year thank you thank

00:26:07,470 --> 00:26:10,589
you

00:26:07,670 --> 00:26:10,589

YouTube URL: https://www.youtube.com/watch?v=0rsx65_wjoE


