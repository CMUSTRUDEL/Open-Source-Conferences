Title: NuttX for Embedded Linux Developers - Masayuki Ishikawa, Sony
Publication date: 2019-10-29
Playlist: Open Source Summit & Embedded Linux Conference EU 2019 - Lyon
Description: 
	NuttX for Embedded Linux Developers - Masayuki Ishikawa, Sony

NuttX is an open source POSIX-compliant RTOS suitable for resource constrained devices and real-time systems (such as Drones and robotics) where Linux can be difficult to use. However, NuttX has rich features such as shell, libc, pipe, poll, signal, vfs, pthread, networking, and smp and includes many example applications. You can easily port many Linux applications to NuttX and use the same code to target both OSes. Drivers are accessed with open, read, write, ioctl and close operations, the same as in Linux.

In this talk, I will describe how Sony uses NuttX in shipped audio products (since 2015) and in research for future products including SMP systems and Networking (USB RNDIS and Bluetooth PAN). We were able to confirm Linux application portability to NuttX, by porting the Alexa/AVS device SDK to NuttX on an LC823450XGEVK board - a Cortex-M3 with 1.6MB SRAM, 16 MB flash running at 160 MHZ. The SDK consists of several pieces, such as curl, libc++, sqlite3, nghttp2, mbedtls. We found that by reducing run-time memory, this SDK could run on such a small device. We also implemented NuttX on a Sony Spresense board, a 6-core Cortex-M4F processor, and are in the process of upstreaming this work to the NuttX mainline.

Finally, I'll report on the 1st NuttX international workshop held in the Netherlands in July of this year. We found that many developers write and test their application code on Linux then deploy it to NuttX. We will describe this useful approach for targeting systems where it is infeasible to use Linux.

P.S. We are going to hold a NuttX meetup on October 31. If you are interested in the meetup, please register at https://www.meetup.com/ja-JP/NuttX-meetup/events/264153415/
Captions: 
	00:00:00,030 --> 00:00:05,160
um thank you for joining this session so

00:00:02,159 --> 00:00:07,710
my name is maciej to go from Sony so I'm

00:00:05,160 --> 00:00:10,019
so happy today here to take because I

00:00:07,710 --> 00:00:12,570
this is the first time for me to talk

00:00:10,019 --> 00:00:16,170
about the NAP decks at the embedded

00:00:12,570 --> 00:00:18,750
Linux conference in Europe so today I'm

00:00:16,170 --> 00:00:23,970
going to talk about our not x4 a mess

00:00:18,750 --> 00:00:26,730
during exterior parts so I heard that

00:00:23,970 --> 00:00:29,699
way agenda some question I introduced

00:00:26,730 --> 00:00:32,759
about our all the products so based on

00:00:29,699 --> 00:00:35,430
not X after that I talked about the Sun

00:00:32,759 --> 00:00:38,129
fridge which study it's like a SNP so

00:00:35,430 --> 00:00:42,300
symmetric multiprocessing and also

00:00:38,129 --> 00:00:45,719
talked about porting the ABS Ericsson

00:00:42,300 --> 00:00:47,820
video service a sleek device SDK then I

00:00:45,719 --> 00:00:50,489
will introduce a Sony's process board

00:00:47,820 --> 00:00:56,280
and when I talk about an ethics workshop

00:00:50,489 --> 00:00:56,780
so held in Netherlands enjoy and about

00:00:56,280 --> 00:00:59,510
me

00:00:56,780 --> 00:01:02,399
Symantec worker background Inca some

00:00:59,510 --> 00:01:04,830
various fields such as our 3d graphics

00:01:02,399 --> 00:01:10,140
and networking and epic embedded systems

00:01:04,830 --> 00:01:13,409
and in 2006 I proposed to use our Linux

00:01:10,140 --> 00:01:15,840
for a portable media pro yet and we

00:01:13,409 --> 00:01:19,290
studied the purple the first

00:01:15,840 --> 00:01:23,729
linux-based portable media player which

00:01:19,290 --> 00:01:26,670
suppose video private then in 2008 I

00:01:23,729 --> 00:01:29,670
prefer to use our Android for a new

00:01:26,670 --> 00:01:32,009
generation of media player and we

00:01:29,670 --> 00:01:36,259
started to develop our Android based a

00:01:32,009 --> 00:01:41,700
media player which had at your cortex a9

00:01:36,259 --> 00:01:44,640
and since 2013 I proposed you use an

00:01:41,700 --> 00:01:47,759
ethics for small audio devices such as a

00:01:44,640 --> 00:01:49,439
head home where the storage so before

00:01:47,759 --> 00:01:53,009
starting an attic

00:01:49,439 --> 00:01:56,100
I have real experience what artists so

00:01:53,009 --> 00:02:02,479
actually so I was a artists beginner at

00:01:56,100 --> 00:02:05,310
a time so this site shows our own brief

00:02:02,479 --> 00:02:09,390
introduction to not X and not X was

00:02:05,310 --> 00:02:12,540
released in 2007 by grey Burnett

00:02:09,390 --> 00:02:16,190
it's mostly posix pump and a real-time

00:02:12,540 --> 00:02:21,120
OS so it's suitable for our robotics and

00:02:16,190 --> 00:02:23,790
actually in drone and project and those

00:02:21,120 --> 00:02:26,490
two project which means a sort of odd

00:02:23,790 --> 00:02:31,260
operating system so they are using NAT

00:02:26,490 --> 00:02:34,230
x4 embedded real-time OS and not X

00:02:31,260 --> 00:02:38,160
suppose many CPU architectures from 8bit

00:02:34,230 --> 00:02:40,140
to 32-bit system and foot point and the

00:02:38,160 --> 00:02:42,630
random memory operates more so it's

00:02:40,140 --> 00:02:48,450
suitable for resource consonantal

00:02:42,630 --> 00:02:51,750
devices and as for driver source code

00:02:48,450 --> 00:02:55,290
and not X does not use a bender higher

00:02:51,750 --> 00:02:58,440
so hardware a broken radio so the code

00:02:55,290 --> 00:03:01,680
is very straight world and consistent

00:02:58,440 --> 00:03:05,160
and many key features are implemented

00:03:01,680 --> 00:03:08,459
such as a fat file system and smart FS

00:03:05,160 --> 00:03:10,440
which is a freshwater system with world

00:03:08,459 --> 00:03:14,040
I bearing support and networking and

00:03:10,440 --> 00:03:18,030
many USB cost driver for post device and

00:03:14,040 --> 00:03:20,970
our host cars are supported and also

00:03:18,030 --> 00:03:23,700
many example occasions are encoded in

00:03:20,970 --> 00:03:27,330
such as an a texture of which is very

00:03:23,700 --> 00:03:30,959
useful for the parking and web server as

00:03:27,330 --> 00:03:37,019
well and so you can easily apply these

00:03:30,959 --> 00:03:38,790
application ways and not X and from here

00:03:37,019 --> 00:03:44,150
are let me talk about the Sony or the

00:03:38,790 --> 00:03:49,620
porous based on ethics on phbt studies

00:03:44,150 --> 00:03:52,350
as I mentioned in in 2013 I propose to

00:03:49,620 --> 00:03:56,850
use not X for some other products at

00:03:52,350 --> 00:04:00,540
that time we use am7 it's not cortex-m

00:03:56,850 --> 00:04:03,810
several of course so i sposta support an

00:04:00,540 --> 00:04:07,799
ethics because our all the products are

00:04:03,810 --> 00:04:12,120
used this processor however this process

00:04:07,799 --> 00:04:16,650
says SRAM size was so small so we use

00:04:12,120 --> 00:04:21,539
not x2 qmu as well support proprietary

00:04:16,650 --> 00:04:22,700
for this tag and in 2014 we ported not

00:04:21,539 --> 00:04:26,270
x2 and new

00:04:22,700 --> 00:04:29,980
sir which is called the associate 2 3 4

00:04:26,270 --> 00:04:34,430
50 and continued product development and

00:04:29,980 --> 00:04:37,690
supplier in September 2015 and we raised

00:04:34,430 --> 00:04:43,040
the first netic spaced of the product

00:04:37,690 --> 00:04:47,210
and these are our audio products and in

00:04:43,040 --> 00:04:50,210
2015 will be listed - voice recorders

00:04:47,210 --> 00:04:53,240
and one music for you and after that we

00:04:50,210 --> 00:04:56,090
release many other products including

00:04:53,240 --> 00:05:01,520
wires headphones which supports prove

00:04:56,090 --> 00:05:04,250
this a2dp sync and HSP and hfp and the

00:05:01,520 --> 00:05:10,160
CEO or we also release a voice recorder

00:05:04,250 --> 00:05:14,390
but not listed in this right and these

00:05:10,160 --> 00:05:17,330
are several reasons why we chose another

00:05:14,390 --> 00:05:19,370
for all the products the most important

00:05:17,330 --> 00:05:22,640
point words are projects and the River

00:05:19,370 --> 00:05:25,280
City support as I mentioned we have a

00:05:22,640 --> 00:05:28,310
much experience with our Linux and

00:05:25,280 --> 00:05:31,070
Android before so I thought we should

00:05:28,310 --> 00:05:34,610
apply our software to PowerPoint

00:05:31,070 --> 00:05:38,000
approaches even with we use an ethics

00:05:34,610 --> 00:05:41,900
for operating system and with this we

00:05:38,000 --> 00:05:45,590
were able to reduce existing software

00:05:41,900 --> 00:05:49,400
and also reduce our running costs and

00:05:45,590 --> 00:05:52,460
also RF support was very important for

00:05:49,400 --> 00:05:55,790
us because and some all the products do

00:05:52,460 --> 00:06:00,610
not have SPF for us for us to reduce

00:05:55,790 --> 00:06:03,830
cost and so we had to divide the one big

00:06:00,610 --> 00:06:07,460
application towards more applications

00:06:03,830 --> 00:06:11,420
and other items are chosen - I prefer a

00:06:07,460 --> 00:06:13,580
mark and remote support and Linux right

00:06:11,420 --> 00:06:20,110
combination with supporters are very

00:06:13,580 --> 00:06:23,210
useful for us as well and this I chose

00:06:20,110 --> 00:06:26,780
processor features which we are using

00:06:23,210 --> 00:06:30,680
for our audio products this processor

00:06:26,780 --> 00:06:32,350
has a dual cortex m3 so running at 160

00:06:30,680 --> 00:06:36,820
mega house and

00:06:32,350 --> 00:06:39,720
a 1.6 megabyte internal Assam condom

00:06:36,820 --> 00:06:41,410
products are used only Singapore

00:06:39,720 --> 00:06:44,710
horrible

00:06:41,410 --> 00:06:48,220
I've been studying if we can use as a

00:06:44,710 --> 00:06:54,160
secondary core in simple mode to

00:06:48,220 --> 00:06:57,430
increase more performance the reason why

00:06:54,160 --> 00:07:00,370
I'm I'm being studying ICMP with this

00:06:57,430 --> 00:07:03,880
process is that we want to use al an

00:07:00,370 --> 00:07:07,420
existing application in SMP more to

00:07:03,880 --> 00:07:10,930
scale performance however this processor

00:07:07,420 --> 00:07:14,740
does not have a CPU cache so we need to

00:07:10,930 --> 00:07:18,070
confirm perform confirm our performers

00:07:14,740 --> 00:07:21,100
effects on memory contention I think

00:07:18,070 --> 00:07:24,250
it's very current theme because not X is

00:07:21,100 --> 00:07:26,080
not just a schedule but has a many

00:07:24,250 --> 00:07:32,200
features such as networking and also

00:07:26,080 --> 00:07:35,050
includes a application as well these

00:07:32,200 --> 00:07:39,220
rights are introduced on my approach is

00:07:35,050 --> 00:07:42,430
to support SMP or on the processor so

00:07:39,220 --> 00:07:46,480
firstly i ported existing driver to

00:07:42,430 --> 00:07:50,530
latest attacks then i implemented as may

00:07:46,480 --> 00:07:53,500
be related code usually armed support

00:07:50,530 --> 00:07:56,920
allowed exclusive and destroy excuse

00:07:53,500 --> 00:08:00,640
operation to implement spinlock however

00:07:56,920 --> 00:08:04,690
this processor does not support these

00:08:00,640 --> 00:08:07,450
operations so we had to implement it

00:08:04,690 --> 00:08:14,650
with our Hardware mutex inside as a

00:08:07,450 --> 00:08:19,930
processor so the next topics in

00:08:14,650 --> 00:08:22,390
networking so motivation are adding to

00:08:19,930 --> 00:08:26,590
networking words to confirm are not X

00:08:22,390 --> 00:08:29,590
network stack readability actually this

00:08:26,590 --> 00:08:35,020
on semiconductors aberration board does

00:08:29,590 --> 00:08:38,680
not have our Ethernet but Hodgins USB so

00:08:35,020 --> 00:08:41,640
I decided to use usb our remote and this

00:08:38,680 --> 00:08:47,120
driver with a dissipation board

00:08:41,640 --> 00:08:50,760
to test our audio streaming in SMB mode

00:08:47,120 --> 00:08:52,740
so as you can see at this right and no

00:08:50,760 --> 00:08:56,820
tech support meaning our networking

00:08:52,740 --> 00:09:00,570
features such as our Ethernet Wi-Fi USB

00:08:56,820 --> 00:09:03,480
remote ends and I will be or nb6 of

00:09:00,570 --> 00:09:06,990
course you can use a BSD socket API as

00:09:03,480 --> 00:09:11,820
well as our circuit and for interface to

00:09:06,990 --> 00:09:14,339
wait for events from the socket so it's

00:09:11,820 --> 00:09:20,029
very easy at report a socket based

00:09:14,339 --> 00:09:23,550
application to networks so then I

00:09:20,029 --> 00:09:26,430
started to test our USB our remote and

00:09:23,550 --> 00:09:29,610
this weighs on semiconductors board so

00:09:26,430 --> 00:09:32,399
there are but there are several issues

00:09:29,610 --> 00:09:35,250
at that time for example a data

00:09:32,399 --> 00:09:39,060
cooperation in the USB remote is its

00:09:35,250 --> 00:09:42,240
driver and no TCP window control and no

00:09:39,060 --> 00:09:47,579
HTTP streaming support in an expression

00:09:42,240 --> 00:09:51,269
which is a major player on not X so I

00:09:47,579 --> 00:09:54,930
had to fix these bags and added our

00:09:51,269 --> 00:09:57,839
Richards and now it works well in

00:09:54,930 --> 00:10:01,130
assembly mode and which I will show you

00:09:57,839 --> 00:10:01,130
a demo bigger later

00:10:02,329 --> 00:10:11,610
so other networking study in protest

00:10:07,380 --> 00:10:15,959
span personal area networking as I

00:10:11,610 --> 00:10:20,459
mentioned before in our reporters will

00:10:15,959 --> 00:10:24,630
be using a proprietary stack but in this

00:10:20,459 --> 00:10:27,829
study I chose a bitty stack by our brew

00:10:24,630 --> 00:10:27,829
kitchen because

00:10:35,950 --> 00:10:44,180
okay okay but in this study I chose it

00:10:41,510 --> 00:10:46,840
really realistic and because it's open

00:10:44,180 --> 00:10:50,360
source and free for non-commercial use

00:10:46,840 --> 00:10:53,240
to learn about this power on knoteks

00:10:50,360 --> 00:10:56,120
I added as a tab more that you are not

00:10:53,240 --> 00:11:01,960
extreme driver so which is a similar way

00:10:56,120 --> 00:11:01,960
to our approaches networking on Linux

00:11:02,590 --> 00:11:10,250
this red shows an actual a software

00:11:05,570 --> 00:11:12,700
stack to run a BT stack on net X these

00:11:10,250 --> 00:11:17,450
are orange box shows up BT stake

00:11:12,700 --> 00:11:20,540
components by portaging and Brooks I

00:11:17,450 --> 00:11:22,940
chose a notic sorter components and

00:11:20,540 --> 00:11:26,450
networks of network stack can

00:11:22,940 --> 00:11:29,060
communicate with a big stack there are

00:11:26,450 --> 00:11:30,470
two in driver and after interface name

00:11:29,060 --> 00:11:32,780
is being observed

00:11:30,470 --> 00:11:39,590
this means that are bonded through this

00:11:32,780 --> 00:11:43,430
network can capture agent protocol 0 so

00:11:39,590 --> 00:11:46,790
this and that next topic is our ABS

00:11:43,430 --> 00:11:51,470
device SDK so much better of this study

00:11:46,790 --> 00:11:54,770
is to report to confirm OSS portability

00:11:51,470 --> 00:11:58,910
with a large software systems because

00:11:54,770 --> 00:12:02,090
this is the consists of many open source

00:11:58,910 --> 00:12:06,710
software components such as embedded TRS

00:12:02,090 --> 00:12:10,180
energy HTTP and record and so on so

00:12:06,710 --> 00:12:14,270
approaches for reporting this SDK and

00:12:10,180 --> 00:12:17,990
these ports are built and run SDK on

00:12:14,270 --> 00:12:21,590
Linux and understand how each component

00:12:17,990 --> 00:12:25,100
works on Linux then put each component

00:12:21,590 --> 00:12:26,780
to Linux and also implements are missing

00:12:25,100 --> 00:12:30,500
the components such as a media player

00:12:26,780 --> 00:12:33,610
but with a minimal efforts and finally

00:12:30,500 --> 00:12:39,740
our ideas on runtime memory on Linux

00:12:33,610 --> 00:12:42,260
omnitech's so this shows our audio

00:12:39,740 --> 00:12:45,500
signal for inside the SD

00:12:42,260 --> 00:12:49,360
as use you can see on the left-hand side

00:12:45,500 --> 00:12:54,680
and side and all the input format is PCM

00:12:49,360 --> 00:12:58,370
16 kilohertz 16-bit and more and with

00:12:54,680 --> 00:12:59,990
this SDK you can see your own keyword

00:12:58,370 --> 00:13:03,200
detection Arriba

00:12:59,990 --> 00:13:06,020
in this study I decided not to use our

00:13:03,200 --> 00:13:10,040
key water detection but to use APIs to

00:13:06,020 --> 00:13:13,780
talk so communication between the CK and

00:13:10,040 --> 00:13:18,590
Eric the service is transported wait

00:13:13,780 --> 00:13:22,490
HTTP 2 over T areas and both data form

00:13:18,590 --> 00:13:27,760
AXA is encoded in MPEG audio format this

00:13:22,490 --> 00:13:32,290
is a 24k health terminal and 48 kbps and

00:13:27,760 --> 00:13:37,180
to decode our MPEG audio I decide to use

00:13:32,290 --> 00:13:42,920
Hardware decoder so inside the processor

00:13:37,180 --> 00:13:45,530
and as I mentioned before a BS device

00:13:42,920 --> 00:13:48,800
SDK consists of several open source

00:13:45,530 --> 00:13:53,180
components such as embedded TRS and

00:13:48,800 --> 00:13:55,970
energy as heat v2 and so wrong so here I

00:13:53,180 --> 00:13:59,420
had to implement our one major player

00:13:55,970 --> 00:14:03,170
and my cropper because GStreamer

00:13:59,420 --> 00:14:06,410
for Linux is too weak to pour it however

00:14:03,170 --> 00:14:11,810
a total cost size of this system was

00:14:06,410 --> 00:14:16,220
about 3.6 megabytes so including our

00:14:11,810 --> 00:14:20,390
Linux kernel not external so to run the

00:14:16,220 --> 00:14:26,060
SDK I had to use SPF fresh in accept

00:14:20,390 --> 00:14:31,190
exciting world so this is an network

00:14:26,060 --> 00:14:34,630
topology to test about ABS device SDK to

00:14:31,190 --> 00:14:38,480
connected our portal network we need a

00:14:34,630 --> 00:14:41,660
remote endless host PC and also to

00:14:38,480 --> 00:14:45,170
connect our the internet I use my iPhone

00:14:41,660 --> 00:14:47,990
and in the dim video I will show you

00:14:45,170 --> 00:14:51,700
were a be as diverse as eco works so

00:14:47,990 --> 00:14:51,700
with a not X right there

00:14:52,850 --> 00:15:04,200
so the next topic is ours presence so in

00:14:59,150 --> 00:15:07,170
2018 Sony released our new although poor

00:15:04,200 --> 00:15:10,830
processor covered as presents for IOT

00:15:07,170 --> 00:15:14,510
products and this processor has six

00:15:10,830 --> 00:15:18,450
cortex m4 f in application domain and

00:15:14,510 --> 00:15:20,340
also high power point perm domain

00:15:18,450 --> 00:15:23,330
control and the sensor control unit

00:15:20,340 --> 00:15:27,090
which arise Pfeiffer and Gillian s

00:15:23,330 --> 00:15:30,630
position features and these hardware

00:15:27,090 --> 00:15:37,020
features are implemented in very small

00:15:30,630 --> 00:15:39,720
package and we sony also release as

00:15:37,020 --> 00:15:43,170
presence SDK as well so which is

00:15:39,720 --> 00:15:45,960
available on github now and this as a

00:15:43,170 --> 00:15:48,870
second causes many drivers are forced

00:15:45,960 --> 00:15:52,500
presence as well as our middleware and

00:15:48,870 --> 00:16:00,660
some applications however the calibrator

00:15:52,500 --> 00:16:04,440
is a bit worried so since june of this

00:16:00,660 --> 00:16:08,070
year we've been contributing as presence

00:16:04,440 --> 00:16:11,010
related to hyper code to the network's

00:16:08,070 --> 00:16:13,830
upstream and this ratio the latest

00:16:11,010 --> 00:16:16,050
appreciate streaming status and as you

00:16:13,830 --> 00:16:18,660
can see this right

00:16:16,050 --> 00:16:22,440
most of the driver folders already been

00:16:18,660 --> 00:16:25,260
merged to the upstream so this is very

00:16:22,440 --> 00:16:28,740
important for possible networks

00:16:25,260 --> 00:16:31,890
community and Sony and for knotek's

00:16:28,740 --> 00:16:35,340
community taken while the latest an

00:16:31,890 --> 00:16:38,910
ethics code with us process operation

00:16:35,340 --> 00:16:43,950
board and for Sony as we can easily

00:16:38,910 --> 00:16:47,370
merge the radius networks this to our

00:16:43,950 --> 00:16:54,270
SDK in the near future to reduce manga's

00:16:47,370 --> 00:16:57,240
cost the next topic is also Wi-Fi so in

00:16:54,270 --> 00:17:00,450
this study I implemented Wi-Fi a driver

00:16:57,240 --> 00:17:02,630
for Jesus are 2 mm I'm so please support

00:17:00,450 --> 00:17:06,260
our 11 BG and

00:17:02,630 --> 00:17:10,120
at 22 point of four gearheads so this

00:17:06,260 --> 00:17:13,579
processor this durable supporter was us

00:17:10,120 --> 00:17:16,699
station mode and access point mode so to

00:17:13,579 --> 00:17:22,310
implement a driver genetics uses of a

00:17:16,699 --> 00:17:26,449
feature was used so here are so what is

00:17:22,310 --> 00:17:30,110
a user sort so the answer is that it's a

00:17:26,449 --> 00:17:34,130
user space networking stock abs so

00:17:30,110 --> 00:17:37,370
defined in ethics and user space demo

00:17:34,130 --> 00:17:40,280
and he'll provide an ethics networking

00:17:37,370 --> 00:17:44,090
and this hours are seamless integration

00:17:40,280 --> 00:17:49,970
of hardware provided tcp/ip stack to an

00:17:44,090 --> 00:17:54,950
ethics so and this is a actual on use

00:17:49,970 --> 00:17:57,680
case for web or web server example in

00:17:54,950 --> 00:18:00,380
this study we can be used existing

00:17:57,680 --> 00:18:03,740
application such as our territory and

00:18:00,380 --> 00:18:07,310
the web server and this presence can be

00:18:03,740 --> 00:18:11,780
accessed from Firefox for all event and

00:18:07,310 --> 00:18:14,360
to access files on microSD card so for

00:18:11,780 --> 00:18:18,050
you difference I've just put a code size

00:18:14,360 --> 00:18:20,360
of this use case and compared to our

00:18:18,050 --> 00:18:24,130
remote in this configuration so which

00:18:20,360 --> 00:18:28,750
uses a normal tcp/ip stack on ethics and

00:18:24,130 --> 00:18:33,460
code size was almost at 10 percent

00:18:28,750 --> 00:18:40,130
psychosis was our biggest with using

00:18:33,460 --> 00:18:45,320
users or based driver so the last topic

00:18:40,130 --> 00:18:48,260
is an ethics workshop so on dry our

00:18:45,320 --> 00:18:51,560
sixties and seventies of this year the

00:18:48,260 --> 00:18:54,970
first international of the works of shot

00:18:51,560 --> 00:18:59,150
all night X was held in the Netherlands

00:18:54,970 --> 00:19:00,680
in this workshop so over 40 people

00:18:59,150 --> 00:19:03,740
joined and we

00:19:00,680 --> 00:19:09,950
Sony also attended this workshop and

00:19:03,740 --> 00:19:13,700
taught our activities and at the

00:19:09,950 --> 00:19:15,370
workshop so many applications so such as

00:19:13,700 --> 00:19:18,520
our on and draw

00:19:15,370 --> 00:19:21,640
life and robotics and sensors and the

00:19:18,520 --> 00:19:24,850
cube satyrs were into this and of course

00:19:21,640 --> 00:19:27,370
we also entered this over all the

00:19:24,850 --> 00:19:34,120
products and this presence at the

00:19:27,370 --> 00:19:37,300
workshop and at the workshop so many

00:19:34,120 --> 00:19:41,320
developers talks about this of yrj I

00:19:37,300 --> 00:19:43,600
chose not X for their products for their

00:19:41,320 --> 00:19:46,660
applications and of course at the our

00:19:43,600 --> 00:19:50,560
time is very important q.what because as

00:19:46,660 --> 00:19:52,780
some the drone and robotics are very

00:19:50,560 --> 00:19:56,080
important to use so they are timeless

00:19:52,780 --> 00:19:59,170
and however as you can see are destroyed

00:19:56,080 --> 00:20:03,790
so many de papa including including us

00:19:59,170 --> 00:20:07,690
use Linux to develop and to test a

00:20:03,790 --> 00:20:10,810
software and after that hijae deploy and

00:20:07,690 --> 00:20:13,870
debug the software on not X so the

00:20:10,810 --> 00:20:15,940
portability and the scalability are very

00:20:13,870 --> 00:20:19,240
important so for our software

00:20:15,940 --> 00:20:26,320
development and that's why RJ chose some

00:20:19,240 --> 00:20:28,510
ethics for their applications so our

00:20:26,320 --> 00:20:31,330
finally either sure you were so down

00:20:28,510 --> 00:20:36,520
videos so the order is changed from the

00:20:31,330 --> 00:20:41,820
order which I talked this talk but

00:20:36,520 --> 00:20:41,820
because it's complex it is order

00:20:46,860 --> 00:20:55,500
so persons are abs devices okay so so

00:20:52,019 --> 00:20:58,140
passage start a business test so you can

00:20:55,500 --> 00:21:04,169
see how many rocks so HTTP stream is

00:20:58,140 --> 00:21:12,419
running and in background I run I'll

00:21:04,169 --> 00:21:14,640
make you pay as well and right now in

00:21:12,419 --> 00:21:16,649
East Queen Anne it's 52 degrees

00:21:14,640 --> 00:21:19,529
Fahrenheit with clear skies and Sun

00:21:16,649 --> 00:21:25,380
tonight's forecast has clear skies with

00:21:19,529 --> 00:21:28,110
a low of 35 degrees so uh and now check

00:21:25,380 --> 00:21:31,440
task-oriented free memory and so so many

00:21:28,110 --> 00:21:33,409
tasks is actually running and so it

00:21:31,440 --> 00:21:37,110
consumes the ottomans of warming about

00:21:33,409 --> 00:21:42,620
memories and next is presence persuade

00:21:37,110 --> 00:21:48,149
and it's a setup is very long so i

00:21:42,620 --> 00:21:50,340
change a playback speed and from from

00:21:48,149 --> 00:21:53,610
here it's normal speed so telnet this

00:21:50,340 --> 00:21:58,370
process you can see you name with this

00:21:53,610 --> 00:22:04,260
person's and login again and it is peers

00:21:58,370 --> 00:22:09,289
and reserve access web service presents

00:22:04,260 --> 00:22:12,450
via firefox and you can see a JPEG file

00:22:09,289 --> 00:22:17,580
this widest or micro SD card on his

00:22:12,450 --> 00:22:21,090
presence and this time people see file

00:22:17,580 --> 00:22:24,360
is also on and these are my grassy

00:22:21,090 --> 00:22:27,000
cartoons present and firefox is

00:22:24,360 --> 00:22:30,330
accessing so downloading this MPC fire

00:22:27,000 --> 00:22:32,450
and playback and next is audio stream in

00:22:30,330 --> 00:22:35,929
SMP

00:22:32,450 --> 00:22:39,460
this is the I user using HTTP audio

00:22:35,929 --> 00:22:39,460
streaming in immortelle this

00:22:40,690 --> 00:22:44,820
and the sea peacocks change

00:22:42,900 --> 00:22:50,230
automatically

00:22:44,820 --> 00:22:50,800
so depends on our GP reward and Banga at

00:22:50,230 --> 00:22:53,710
month

00:22:50,800 --> 00:22:57,660
Elliot Turner and sepia Cox about a bit

00:22:53,710 --> 00:22:57,660
higher for wired is giving commands

00:23:01,220 --> 00:23:11,420
and stop ranked Matt and crow goes down

00:23:05,410 --> 00:23:14,380
and then our Coco's high and white

00:23:11,420 --> 00:23:14,380
executing commands

00:23:19,660 --> 00:23:24,610
and closed down after stopping on our

00:23:22,180 --> 00:23:30,760
minds again and I am busy

00:23:24,610 --> 00:23:33,850
aroof and just be 0 only CPAs oh so you

00:23:30,760 --> 00:23:43,780
can see a series of either pressure is

00:23:33,850 --> 00:23:46,750
down to 0 and then 0 CP 1 in this case

00:23:43,780 --> 00:23:52,380
are you can see but either one so CP

00:23:46,750 --> 00:23:52,380
either for supervised going to 0

00:23:52,580 --> 00:24:02,960
and damn busy group or discuss a busy

00:23:57,800 --> 00:24:12,200
road guys on CP 0 or 1 so what idle

00:24:02,960 --> 00:24:15,140
ratio is not there and finally to run

00:24:12,200 --> 00:24:18,440
two videos and this case I see is called

00:24:15,140 --> 00:24:24,460
high but they are post a CPU Idol is

00:24:18,440 --> 00:24:29,720
equal to zero so and that our order our

00:24:24,460 --> 00:24:34,130
distillation video so that'll have from

00:24:29,720 --> 00:24:37,100
my talk to a so if they're an equation

00:24:34,130 --> 00:24:40,040
so far it's a soap a quick tutorial our

00:24:37,100 --> 00:24:45,490
decision and may be covered so many

00:24:40,040 --> 00:24:52,130
topics in this session so is any

00:24:45,490 --> 00:24:54,610
questions if we have RS you can pass our

00:24:52,130 --> 00:24:54,610
mic

00:25:03,150 --> 00:25:06,170
no questions

00:25:07,000 --> 00:25:09,900
okay

00:25:28,760 --> 00:25:38,030
what kind of tool chain do you use do

00:25:33,530 --> 00:25:40,490
you have to to make your own cost

00:25:38,030 --> 00:25:46,270
compilation to change the user with an

00:25:40,490 --> 00:25:49,100
ethics Lipsy and and so on or is it a

00:25:46,270 --> 00:25:57,650
self-contained project and you can use

00:25:49,100 --> 00:25:59,480
the standard so you are talking about

00:25:57,650 --> 00:26:03,140
the tour chain

00:25:59,480 --> 00:26:06,110
sorry I forgot to mention about surfing

00:26:03,140 --> 00:26:09,050
I'm RIA you sing also normal GCC

00:26:06,110 --> 00:26:09,920
toolchain and the currently are in the

00:26:09,050 --> 00:26:17,240
product

00:26:09,920 --> 00:26:20,810
I think GCC version 5.3 was used but

00:26:17,240 --> 00:26:26,540
currently we are using GCC seven what

00:26:20,810 --> 00:26:28,340
GCC 84 to test these these not ex-post

00:26:26,540 --> 00:26:34,790
wanna see me contacts that sport as well

00:26:28,340 --> 00:26:38,380
and as present sport as well so we're

00:26:34,790 --> 00:26:38,380
using a tsetse base kumoi

00:26:40,570 --> 00:26:44,170
okay thank you

00:26:46,210 --> 00:26:50,290
using other questions

00:26:58,720 --> 00:27:01,410
okay

00:27:01,540 --> 00:27:11,049
so so thank you for joining this vision

00:27:06,710 --> 00:27:11,049

YouTube URL: https://www.youtube.com/watch?v=huzhQrwJF4A


