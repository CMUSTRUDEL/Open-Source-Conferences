Title: The 'S' in IoT stands for Security - Andrew Martin, Control Plane & Viktor Petersson, WoTT
Publication date: 2019-10-29
Playlist: Open Source Summit & Embedded Linux Conference EU 2019 - Lyon
Description: 
	The 'S' in IoT stands for Security - Andrew Martin, Control Plane & Viktor Petersson, WoTT

IoT security isn't rocket surgery, but a race to market has left a proliferation of insecure, unpatchable devices strewn across the internet. Well-established software delivery and security best practices are routinely ignored, and a series of laughable breaches has left users and governments scrabbling for better solutions.

Recent advances in IoT-friendly hardware have expanded the options available to manufacturers, and paved the road to lightweight containerisation of connected devices. This talk will discuss the current state of the art in consumer and industrial IoT device security, examine some recent vulnerabilities, breaches, and attacks, and explore how to use containers to secure devices from current and future threats.
Captions: 
	00:00:06,170 --> 00:00:13,290
okay hello everybody thank you for

00:00:09,690 --> 00:00:14,519
hanging around to the end of the day we

00:00:13,290 --> 00:00:16,560
hope to give you some light

00:00:14,519 --> 00:00:19,350
entertainment in the security space with

00:00:16,560 --> 00:00:20,760
IOT for those of you who are more

00:00:19,350 --> 00:00:22,529
experienced in this field you may not

00:00:20,760 --> 00:00:25,320
learn too much but we hope that we can

00:00:22,529 --> 00:00:29,750
give you at least some insight into some

00:00:25,320 --> 00:00:32,600
of the wildness that is going on and

00:00:29,750 --> 00:00:35,730
with that

00:00:32,600 --> 00:00:38,250
hello my name is Andy I'm a co-founder

00:00:35,730 --> 00:00:40,950
of control plane which is continuous

00:00:38,250 --> 00:00:43,800
build and security for cloud native

00:00:40,950 --> 00:00:46,530
stuff you could say I'm a technical

00:00:43,800 --> 00:00:50,760
milliner and an advocate of continuous

00:00:46,530 --> 00:00:52,649
everything yes continuous security

00:00:50,760 --> 00:00:54,840
practices with a focus on containerized

00:00:52,649 --> 00:00:58,649
deployments and this is my dear friend

00:00:54,840 --> 00:01:01,949
Victor are there man is Victor Peterson

00:00:58,649 --> 00:01:03,989
I am an intern eric tinkerer built a few

00:01:01,949 --> 00:01:05,489
companies and consumes up more of a

00:01:03,989 --> 00:01:08,640
jack-of-all-trades with some security

00:01:05,489 --> 00:01:09,810
interest and we will touch a little bit

00:01:08,640 --> 00:01:13,020
on some of things we've worked in the

00:01:09,810 --> 00:01:15,000
past in this talk most notably screen ly

00:01:13,020 --> 00:01:18,150
as well as what was the latest company

00:01:15,000 --> 00:01:20,369
that I'm working right now and with that

00:01:18,150 --> 00:01:23,369
we're gonna dive into a little bit what

00:01:20,369 --> 00:01:24,960
is I'm not gonna I'm not gonna bore you

00:01:23,369 --> 00:01:27,330
a vendor pitch but essentially we tried

00:01:24,960 --> 00:01:29,850
to solve the dev psych ops base gave me

00:01:27,330 --> 00:01:32,310
five security and help with visibility

00:01:29,850 --> 00:01:35,329
at large when it comes to security of

00:01:32,310 --> 00:01:40,680
your workload so with that in mind let's

00:01:35,329 --> 00:01:43,560
dive this back into the IOT space so IIT

00:01:40,680 --> 00:01:45,950
is IT security summed up fairly well but

00:01:43,560 --> 00:01:50,220
this is to say this single slide I think

00:01:45,950 --> 00:01:52,500
and it essentially is a matter of time

00:01:50,220 --> 00:01:54,119
before your IRT device becomes part of

00:01:52,500 --> 00:01:56,189
the criminalized botnet that is

00:01:54,119 --> 00:02:00,299
essentially what IOT security is in this

00:01:56,189 --> 00:02:01,890
current day in age and there is another

00:02:00,299 --> 00:02:03,360
definition of IOT that I really like as

00:02:01,890 --> 00:02:05,640
well from my good friend Dom which is

00:02:03,360 --> 00:02:07,560
then there are things is a science

00:02:05,640 --> 00:02:10,950
project create the focus on create the

00:02:07,560 --> 00:02:12,290
most complex way possible of turning the

00:02:10,950 --> 00:02:14,959
lights on

00:02:12,290 --> 00:02:16,879
so let's dive a little bit into solve

00:02:14,959 --> 00:02:21,620
the use case priority and the current

00:02:16,879 --> 00:02:23,900
state of IAT really so IIT as you all

00:02:21,620 --> 00:02:26,120
seen has a lot of failure points and

00:02:23,900 --> 00:02:28,099
here is a nest thermostat updating and

00:02:26,120 --> 00:02:30,739
because it's updating you can no longer

00:02:28,099 --> 00:02:34,370
access your turbo stat which is kind of

00:02:30,739 --> 00:02:36,560
annoying here's a real life scenario of

00:02:34,370 --> 00:02:38,959
myself this is outside my building in

00:02:36,560 --> 00:02:41,920
London where I was locked outside for 15

00:02:38,959 --> 00:02:44,829
minutes because the system was updating

00:02:41,920 --> 00:02:47,659
this is not how you should be doing IRT

00:02:44,829 --> 00:02:50,540
however you could argue that still a lot

00:02:47,659 --> 00:02:52,609
better than this I'm not sure how many

00:02:50,540 --> 00:02:56,060
of you saw this this I think this leaked

00:02:52,609 --> 00:02:59,150
last week it was a brand of dealings

00:02:56,060 --> 00:03:03,290
dealings routers that they found a

00:02:59,150 --> 00:03:05,150
massive security mobility and yet d-link

00:03:03,290 --> 00:03:08,690
refuses to release security updates for

00:03:05,150 --> 00:03:12,769
these so when you start to connect

00:03:08,690 --> 00:03:14,599
everything to the internet oh the sudden

00:03:12,769 --> 00:03:17,120
there come some drawbacks that people

00:03:14,599 --> 00:03:19,190
have not really thought about it

00:03:17,120 --> 00:03:21,949
dramatic context expands the attack

00:03:19,190 --> 00:03:23,540
surface of all your devices really and

00:03:21,949 --> 00:03:25,280
most of these devices aren't even built

00:03:23,540 --> 00:03:28,609
to be connected Internet so nobody has

00:03:25,280 --> 00:03:31,699
thought about that right and devices do

00:03:28,609 --> 00:03:34,609
become obsolete insanely quickly these

00:03:31,699 --> 00:03:35,810
days and the problem large list and we

00:03:34,609 --> 00:03:38,959
can't dive into this a little bit longer

00:03:35,810 --> 00:03:40,819
in the talk as well which is there's a

00:03:38,959 --> 00:03:46,239
misalignment incentive between the

00:03:40,819 --> 00:03:49,489
vendors and the end-users so very best

00:03:46,239 --> 00:03:51,199
security in IOT is at very best an

00:03:49,489 --> 00:03:53,209
afterthought so instead of having

00:03:51,199 --> 00:03:56,030
security by default we tend to today

00:03:53,209 --> 00:03:58,970
have security or insecurity as a

00:03:56,030 --> 00:04:01,400
standard all right and this is why we

00:03:58,970 --> 00:04:03,440
see these things you're finding devices

00:04:01,400 --> 00:04:05,359
running telnet which why you would do

00:04:03,440 --> 00:04:07,280
that in 2019 is a big question mark in

00:04:05,359 --> 00:04:11,120
the first place but these are becoming

00:04:07,280 --> 00:04:13,400
fairly common again you have another one

00:04:11,120 --> 00:04:14,750
where IIT massive lot of IT devices

00:04:13,400 --> 00:04:17,239
being exposed to the Internet

00:04:14,750 --> 00:04:18,349
and obviously being vulnerable because

00:04:17,239 --> 00:04:22,880
they were never thought about being

00:04:18,349 --> 00:04:24,710
secured in the first place so this is a

00:04:22,880 --> 00:04:25,600
screenshot here that I really enjoy

00:04:24,710 --> 00:04:28,250
which is

00:04:25,600 --> 00:04:30,440
long day long before shodhan there was

00:04:28,250 --> 00:04:32,000
something called VNC roulette where

00:04:30,440 --> 00:04:35,120
somebody scanned the entire public

00:04:32,000 --> 00:04:37,700
internet for VNC sessions without

00:04:35,120 --> 00:04:39,110
authentication and then they threw up a

00:04:37,700 --> 00:04:40,760
web interface for this so you can

00:04:39,110 --> 00:04:43,070
basically browse your way through all

00:04:40,760 --> 00:04:45,620
the VNC sessions and the screenshot

00:04:43,070 --> 00:04:49,210
above here you can actually see a power

00:04:45,620 --> 00:04:51,920
plant that was publicly exposed over VNC

00:04:49,210 --> 00:04:53,870
without application and there was just

00:04:51,920 --> 00:04:56,000
one of the many sites that they

00:04:53,870 --> 00:04:59,270
discovered that were obviously not

00:04:56,000 --> 00:05:00,890
intended for public exposure but yet

00:04:59,270 --> 00:05:02,660
they were exposed because people thought

00:05:00,890 --> 00:05:05,510
that nobody would be able to figure out

00:05:02,660 --> 00:05:06,500
their IP address because I don't know

00:05:05,510 --> 00:05:08,919
why they would think there'll be any

00:05:06,500 --> 00:05:12,140
idea but it's pretty scary nonetheless

00:05:08,919 --> 00:05:15,460
so with that I'm gonna hand back to Andy

00:05:12,140 --> 00:05:19,370
for a little bit overview of the talk

00:05:15,460 --> 00:05:21,260
right we're gonna walk through some I

00:05:19,370 --> 00:05:23,840
owe two failures look at the state of

00:05:21,260 --> 00:05:27,140
the arts talk about how to build better

00:05:23,840 --> 00:05:29,300
IOT devices with containers cover

00:05:27,140 --> 00:05:31,190
botnets and brick ibattz for those of

00:05:29,300 --> 00:05:33,410
you for whom that is a familiar term and

00:05:31,190 --> 00:05:38,720
take a glimpse into what the future

00:05:33,410 --> 00:05:43,250
might hold so the Internet of shits

00:05:38,720 --> 00:05:47,240
just how bad is it right now very bad

00:05:43,250 --> 00:05:49,400
indeed in 2015 security researchers were

00:05:47,240 --> 00:05:53,180
able to take total control of a cheap

00:05:49,400 --> 00:05:55,130
SUV remotely they used the vehicles

00:05:53,180 --> 00:05:56,690
canvassed the internal network that

00:05:55,130 --> 00:05:59,440
allows the bits to talk to each other

00:05:56,690 --> 00:06:01,550
and they exploited a firmware update

00:05:59,440 --> 00:06:04,760
vulnerability now happily there's a lot

00:06:01,550 --> 00:06:06,979
of work going on in this space but at

00:06:04,760 --> 00:06:08,030
the time and for the amount of time it

00:06:06,979 --> 00:06:10,790
takes many of these cars to be

00:06:08,030 --> 00:06:12,979
end-of-life this will still be a problem

00:06:10,790 --> 00:06:15,200
so the vehicle was hijacked over the

00:06:12,979 --> 00:06:17,110
cellular and that network and they

00:06:15,200 --> 00:06:20,150
discovered they could affect the speed

00:06:17,110 --> 00:06:22,870
slam on the brakes and even via the

00:06:20,150 --> 00:06:25,970
vehicle off the road

00:06:22,870 --> 00:06:29,720
the FDA confirmed that since Jude's

00:06:25,970 --> 00:06:33,349
medical have implanted cardiac devices

00:06:29,720 --> 00:06:35,210
with remote vulnerabilities these

00:06:33,349 --> 00:06:38,380
devices like pacemakers and

00:06:35,210 --> 00:06:41,050
defibrillators are used to monitor and

00:06:38,380 --> 00:06:43,720
patience heart functions and ideally

00:06:41,050 --> 00:06:46,060
prevent heart attacks these

00:06:43,720 --> 00:06:48,940
vulnerabilities allowed remote access to

00:06:46,060 --> 00:06:50,980
the devices and once in attackers can do

00:06:48,940 --> 00:06:54,040
nefarious things like deplete the

00:06:50,980 --> 00:06:57,640
battery and incorrect well and

00:06:54,040 --> 00:06:59,320
administer incorrect pacing shocks the

00:06:57,640 --> 00:07:01,690
vulnerability was in the transmitter

00:06:59,320 --> 00:07:04,630
that reads the device's data and

00:07:01,690 --> 00:07:08,980
remotely shares it with physicians does

00:07:04,630 --> 00:07:11,260
that sound familiar it could well be the

00:07:08,980 --> 00:07:14,200
plot of a thrilling homeland security

00:07:11,260 --> 00:07:15,940
based television series but it's not

00:07:14,200 --> 00:07:19,930
just vehicles and wearables that present

00:07:15,940 --> 00:07:21,970
this attack surface there are also

00:07:19,930 --> 00:07:24,790
devices around our homes and businesses

00:07:21,970 --> 00:07:29,560
that are now internet connected by

00:07:24,790 --> 00:07:31,780
default locks are another prime element

00:07:29,560 --> 00:07:34,780
for exploitation they can be attacked in

00:07:31,780 --> 00:07:37,840
many ways and should have a secure

00:07:34,780 --> 00:07:41,170
update mechanism but we've seen

00:07:37,840 --> 00:07:43,660
plaintext passwords we've seen signal

00:07:41,170 --> 00:07:46,480
replay and plain old man in the middle

00:07:43,660 --> 00:07:49,210
attacks on these devices it is probably

00:07:46,480 --> 00:07:52,930
safe to say smart looks are not a good

00:07:49,210 --> 00:07:55,210
idea and webcams are increasingly

00:07:52,930 --> 00:07:58,410
exposed to the internet with insecure or

00:07:55,210 --> 00:08:01,210
brute forcible default passwords I

00:07:58,410 --> 00:08:04,630
suspect this guy just saw his webcam

00:08:01,210 --> 00:08:07,150
move autonomously I hope we'll take it

00:08:04,630 --> 00:08:11,560
offline immediately these things pose

00:08:07,150 --> 00:08:13,720
both a security and the privacy risk and

00:08:11,560 --> 00:08:15,640
of course while it is always amusing to

00:08:13,720 --> 00:08:18,070
see the blue screen of death who knows

00:08:15,640 --> 00:08:20,620
why this device speeds it could just be

00:08:18,070 --> 00:08:22,210
a hardware fault but we shouldn't be

00:08:20,620 --> 00:08:26,550
displaying this information to our users

00:08:22,210 --> 00:08:31,090
so how do we build our IOT devices and

00:08:26,550 --> 00:08:33,250
how do we expect them to run well we

00:08:31,090 --> 00:08:35,740
think they're existing in harmony with

00:08:33,250 --> 00:08:38,770
all their surroundings the flower power

00:08:35,740 --> 00:08:41,680
Internet's mentality but what actually

00:08:38,770 --> 00:08:44,440
happens at run time they are in the most

00:08:41,680 --> 00:08:46,420
hostile of environments with nothing to

00:08:44,440 --> 00:08:50,690
save them but their authors resilience

00:08:46,420 --> 00:08:54,240
and hopefully a patch update cycle

00:08:50,690 --> 00:08:57,180
because these always on barely secure

00:08:54,240 --> 00:08:59,399
hardly updated devices make prime

00:08:57,180 --> 00:09:01,890
targets so how do we solve this problem

00:08:59,399 --> 00:09:06,089
across the internet for the whole of

00:09:01,890 --> 00:09:09,149
mankind simultaneously Victor their

00:09:06,089 --> 00:09:10,860
journey well that's an easy one of

00:09:09,149 --> 00:09:12,839
course we're gonna use the blockchain

00:09:10,860 --> 00:09:15,180
because obviously blockchain solves all

00:09:12,839 --> 00:09:16,649
our problems so therefore that's the

00:09:15,180 --> 00:09:19,230
solution to all our problems for

00:09:16,649 --> 00:09:22,260
security and everything that's the end

00:09:19,230 --> 00:09:23,640
of the talk no just kidding Bach team

00:09:22,260 --> 00:09:25,830
will not solve anything relate to

00:09:23,640 --> 00:09:27,959
security whatsoever in this regard so

00:09:25,830 --> 00:09:29,899
let's move on to what the real solution

00:09:27,959 --> 00:09:32,160
is and that's taking before we do that

00:09:29,899 --> 00:09:33,750
let's take a step back and look why the

00:09:32,160 --> 00:09:34,830
DS device get compromised and you

00:09:33,750 --> 00:09:36,510
already alluded a little bit to why

00:09:34,830 --> 00:09:38,550
these get devices gets compromised by

00:09:36,510 --> 00:09:41,610
mentioning default credentials which is

00:09:38,550 --> 00:09:43,770
a good one but there's sportin

00:09:41,610 --> 00:09:45,990
non-existing update cycles usually to

00:09:43,770 --> 00:09:48,330
these devices it relies on the user

00:09:45,990 --> 00:09:49,800
applying updates which we should really

00:09:48,330 --> 00:09:51,870
know by now that that's not a good

00:09:49,800 --> 00:09:54,839
approach because users tend to not care

00:09:51,870 --> 00:09:56,459
about that so we need to think about

00:09:54,839 --> 00:09:57,839
that and that's one of the biggest

00:09:56,459 --> 00:09:59,820
reason why a lot of these devices gets

00:09:57,839 --> 00:10:01,500
compromised we see a lot insecure

00:09:59,820 --> 00:10:05,970
services that really should not be used

00:10:01,500 --> 00:10:09,600
in 2019 to start with telnet FTP really

00:10:05,970 --> 00:10:12,420
you see even with these lima clinics by

00:10:09,600 --> 00:10:14,279
linux power devices none of or little of

00:10:12,420 --> 00:10:16,860
the security features are actually used

00:10:14,279 --> 00:10:19,440
to confine the problem that could be

00:10:16,860 --> 00:10:22,279
actually used but honestly a lot of the

00:10:19,440 --> 00:10:24,959
problem is that vendors of these devices

00:10:22,279 --> 00:10:27,570
tend to not apply common sense this is

00:10:24,959 --> 00:10:29,550
not rocket surgery a lot of this stuff

00:10:27,570 --> 00:10:32,970
is well known and well documented in

00:10:29,550 --> 00:10:36,839
most of any respectable engineering

00:10:32,970 --> 00:10:39,570
framework right so let's take a step

00:10:36,839 --> 00:10:40,950
back again and look at rit devices for

00:10:39,570 --> 00:10:42,480
service i guess this is a bit

00:10:40,950 --> 00:10:45,480
controversial because some people

00:10:42,480 --> 00:10:48,329
particularly the hardcore embedded world

00:10:45,480 --> 00:10:51,120
would disagree with this but i would say

00:10:48,329 --> 00:10:54,660
that we see a lot more iot devices being

00:10:51,120 --> 00:10:56,970
more powerful right so we see we see

00:10:54,660 --> 00:10:59,040
more and more devices running linux even

00:10:56,970 --> 00:11:01,410
if it's a lightweight version of linux

00:10:59,040 --> 00:11:04,050
we see a lot more of linux running on

00:11:01,410 --> 00:11:06,569
end devices which means that

00:11:04,050 --> 00:11:08,850
they're really general-purpose computing

00:11:06,569 --> 00:11:12,329
at the end of the day a large degree of

00:11:08,850 --> 00:11:13,980
their IOT era hardware with exception

00:11:12,329 --> 00:11:15,660
perhaps battery-powered devices where

00:11:13,980 --> 00:11:20,220
you definitely think about the power

00:11:15,660 --> 00:11:21,689
draw and that means that we really

00:11:20,220 --> 00:11:24,420
started to become the line between

00:11:21,689 --> 00:11:28,339
secure between servers and IOT is become

00:11:24,420 --> 00:11:31,730
much more blurry than it used to be so

00:11:28,339 --> 00:11:35,519
how do you secure a server right so

00:11:31,730 --> 00:11:37,319
service security is not rocket surgery

00:11:35,519 --> 00:11:39,420
either there's a lot of common sense a

00:11:37,319 --> 00:11:41,339
lot of good documentation out there you

00:11:39,420 --> 00:11:42,839
should not be running in you should not

00:11:41,339 --> 00:11:44,459
be you should know what service you're

00:11:42,839 --> 00:11:47,040
running do you need to run them in the

00:11:44,459 --> 00:11:48,749
first place which of these services are

00:11:47,040 --> 00:11:51,600
exposed to network there was something

00:11:48,749 --> 00:11:53,910
to need to check for are those services

00:11:51,600 --> 00:11:55,619
running ask the least privileged user

00:11:53,910 --> 00:11:57,509
that's also something you should really

00:11:55,619 --> 00:12:00,720
be looking for don't root run everything

00:11:57,509 --> 00:12:02,879
else routes there also plenty of kernel

00:12:00,720 --> 00:12:05,549
level technologies that helps you

00:12:02,879 --> 00:12:08,040
isolate these processes that can really

00:12:05,549 --> 00:12:10,589
help you reduce a blood the release the

00:12:08,040 --> 00:12:14,100
blast radius if a given service were to

00:12:10,589 --> 00:12:16,230
be compromised then you have obvious

00:12:14,100 --> 00:12:18,449
things like encryption in transit to

00:12:16,230 --> 00:12:20,670
remove possibility of sniffing the

00:12:18,449 --> 00:12:22,619
traffic so you can actually secure the

00:12:20,670 --> 00:12:26,100
transit as well other things that

00:12:22,619 --> 00:12:27,839
firewalls yeah CV scanning all those

00:12:26,100 --> 00:12:30,059
things that we need to make sure that

00:12:27,839 --> 00:12:32,069
are actually taken care of when we have

00:12:30,059 --> 00:12:33,959
is server up and running this is common

00:12:32,069 --> 00:12:36,629
sense for lowermost server operators but

00:12:33,959 --> 00:12:38,699
it seems to be lost for well even still

00:12:36,629 --> 00:12:40,860
the loss of some uses there as well so

00:12:38,699 --> 00:12:43,740
how does it transition in severity the

00:12:40,860 --> 00:12:46,170
world right if we assume that some

00:12:43,740 --> 00:12:50,189
assume the hypothesis that IOT devices

00:12:46,170 --> 00:12:52,649
are roughly Linux devices not everything

00:12:50,189 --> 00:12:54,540
might be true about that but to a great

00:12:52,649 --> 00:12:56,869
degree and with Moore's law they are

00:12:54,540 --> 00:12:59,639
converging more and more so the security

00:12:56,869 --> 00:13:01,379
for IOT is not that different than

00:12:59,639 --> 00:13:04,290
security for servers a lot of the same

00:13:01,379 --> 00:13:05,730
technologies can be applied so we just

00:13:04,290 --> 00:13:08,249
need to make sure that we apply the

00:13:05,730 --> 00:13:11,549
common sense from server security to IOT

00:13:08,249 --> 00:13:12,839
devices so just a shameless self plug

00:13:11,549 --> 00:13:14,610
here that is actually one of the things

00:13:12,839 --> 00:13:17,070
we do in a kin in what

00:13:14,610 --> 00:13:21,149
if you want to learn more about that hit

00:13:17,070 --> 00:13:24,000
me up afterwards I'm gonna go a little

00:13:21,149 --> 00:13:27,860
bit now into a limit more controversial

00:13:24,000 --> 00:13:30,089
areas which is containers on IOT and

00:13:27,860 --> 00:13:32,130
people would argue that well you can't

00:13:30,089 --> 00:13:33,540
really run containers on i.t but with

00:13:32,130 --> 00:13:36,240
Moore's law we're going more and more

00:13:33,540 --> 00:13:39,170
close to that it is actually viable to

00:13:36,240 --> 00:13:41,310
do to a great degree today already and

00:13:39,170 --> 00:13:43,740
you start to see more and more pushin uh

00:13:41,310 --> 00:13:46,079
to particular vendors that are driving

00:13:43,740 --> 00:13:49,260
this a lot which is a booth readable

00:13:46,079 --> 00:13:51,810
decor and ballina are allowing you to do

00:13:49,260 --> 00:13:53,760
this really well not for the lowest

00:13:51,810 --> 00:13:57,029
power device again but for slightly more

00:13:53,760 --> 00:13:59,310
higher power devices so I'm gonna do a

00:13:57,029 --> 00:14:01,350
really quick intro to these two

00:13:59,310 --> 00:14:03,420
technologies or these two platforms and

00:14:01,350 --> 00:14:06,480
show you how they work so let's start

00:14:03,420 --> 00:14:09,209
off with baleno so boleros tagline is

00:14:06,480 --> 00:14:11,190
get push balana and that encapsulate

00:14:09,209 --> 00:14:12,990
pretty much what they do they have a

00:14:11,190 --> 00:14:14,940
bill farm you ever get to pass through

00:14:12,990 --> 00:14:17,040
they push to their build farm they're

00:14:14,940 --> 00:14:19,680
built form that pushes those darker

00:14:17,040 --> 00:14:21,779
images out to the edge devices so you

00:14:19,680 --> 00:14:24,779
have your dog edge device pair to their

00:14:21,779 --> 00:14:28,950
platform and they've done a lot of work

00:14:24,779 --> 00:14:32,070
around optimizing docker or mobi rather

00:14:28,950 --> 00:14:33,899
for IOT use cases so they've thought

00:14:32,070 --> 00:14:35,670
more thing but thought along lines of

00:14:33,899 --> 00:14:38,370
how you reduce the bandwidth as well as

00:14:35,670 --> 00:14:40,260
how you reduce the failure point when

00:14:38,370 --> 00:14:41,670
say somebody would pull the power on the

00:14:40,260 --> 00:14:43,320
device when it's actually running an

00:14:41,670 --> 00:14:46,649
update so there are a lot of work around

00:14:43,320 --> 00:14:50,160
that and in their estimations they're

00:14:46,649 --> 00:14:51,899
images that they generate from from mobi

00:14:50,160 --> 00:14:54,420
and sorry but an engine that's called

00:14:51,899 --> 00:14:56,250
these days is somewhere 10 to 70 percent

00:14:54,420 --> 00:14:58,170
smaller than the images generated by

00:14:56,250 --> 00:15:00,149
Dockers so that makes it a lot more IT

00:14:58,170 --> 00:15:02,880
friendly you can run on raspberry PI's

00:15:00,149 --> 00:15:06,000
or even more low-power devices along

00:15:02,880 --> 00:15:08,310
those lines and here's a really quick

00:15:06,000 --> 00:15:10,079
demo how it works you make your changes

00:15:08,310 --> 00:15:12,300
I think that start from the start yeah

00:15:10,079 --> 00:15:14,970
you make your changes you push them to

00:15:12,300 --> 00:15:17,070
their repository they perform a complete

00:15:14,970 --> 00:15:19,560
build off that process or using docker

00:15:17,070 --> 00:15:21,930
images and darker compose files and then

00:15:19,560 --> 00:15:24,360
at the end of that process they are then

00:15:21,930 --> 00:15:25,800
pull back to the actual devices so it

00:15:24,360 --> 00:15:27,449
doesn't really matter if you have one or

00:15:25,800 --> 00:15:32,549
a thousand devices that work for

00:15:27,449 --> 00:15:34,410
is the same now we're running a really

00:15:32,549 --> 00:15:36,679
fast speed here about the next one is to

00:15:34,410 --> 00:15:38,819
prove the core open the core is a

00:15:36,679 --> 00:15:40,949
complete separate version from the

00:15:38,819 --> 00:15:43,079
regular boon to classic a she's now not

00:15:40,949 --> 00:15:45,029
referred to some of you may have heard

00:15:43,079 --> 00:15:47,489
of it as snappy before but it's now

00:15:45,029 --> 00:15:49,049
called a boon to core it's a complete

00:15:47,489 --> 00:15:51,149
different version than a regular boon su

00:15:49,049 --> 00:15:54,239
and it relies on something called snaps

00:15:51,149 --> 00:15:57,299
and snaps are a package format for

00:15:54,239 --> 00:15:59,699
containers really or a transactional

00:15:57,299 --> 00:16:02,489
item it so it's replaced a dab packaging

00:15:59,699 --> 00:16:04,109
and allows you do a lot more things that

00:16:02,489 --> 00:16:05,519
you couldn't do in regular system so

00:16:04,109 --> 00:16:09,569
even the operating system itself is

00:16:05,519 --> 00:16:11,489
running ask snaps and it is complete

00:16:09,569 --> 00:16:13,679
self updating it has a lot of mechanism

00:16:11,489 --> 00:16:16,589
for diving into how you want to

00:16:13,679 --> 00:16:18,149
configure the workloads so if we're go

00:16:16,589 --> 00:16:20,399
in here we actually see how it works

00:16:18,149 --> 00:16:22,889
they use a tool called snap craft that

00:16:20,399 --> 00:16:25,709
generates a snap file for you you then

00:16:22,889 --> 00:16:28,350
have an app store that then allow you to

00:16:25,709 --> 00:16:29,759
pull this down to the actual devices so

00:16:28,350 --> 00:16:31,619
they can be self updating both for the

00:16:29,759 --> 00:16:35,999
operating system level as well as the

00:16:31,619 --> 00:16:37,410
application layer and if we go in here a

00:16:35,999 --> 00:16:40,350
little bit more and zooming other

00:16:37,410 --> 00:16:43,079
details everything in the entire system

00:16:40,350 --> 00:16:44,309
is a snap so they have transactional

00:16:43,079 --> 00:16:46,529
updates so if you were to abort it

00:16:44,309 --> 00:16:48,179
somewhere mid we just roll back if you

00:16:46,529 --> 00:16:49,649
reboot the system if all take care of

00:16:48,179 --> 00:16:51,269
all that all the updates are

00:16:49,649 --> 00:16:54,119
cryptographically signed so you can't

00:16:51,269 --> 00:16:57,629
temporary them into in transit the

00:16:54,119 --> 00:16:59,939
default permission for a snap is nil so

00:16:57,629 --> 00:17:03,209
you need to explicitly grant everything

00:16:59,939 --> 00:17:05,039
to a given snap so you have to say oh I

00:17:03,209 --> 00:17:06,779
want this the snap to have network

00:17:05,039 --> 00:17:10,199
access or I want to be able to expose a

00:17:06,779 --> 00:17:12,510
port or talk to interface a B or Z so

00:17:10,199 --> 00:17:14,850
that's how that's how the snap system

00:17:12,510 --> 00:17:15,959
works in really quick terms and with

00:17:14,850 --> 00:17:18,059
that I'm gonna die wait a handoff to

00:17:15,959 --> 00:17:24,720
dandy for a little bit more zoom in on

00:17:18,059 --> 00:17:28,199
how this works behind the scenes so hmm

00:17:24,720 --> 00:17:30,960
in this example the food snap plugs into

00:17:28,199 --> 00:17:34,230
the quacks interface and passes north

00:17:30,960 --> 00:17:36,090
service the quacks slot I hope that's

00:17:34,230 --> 00:17:39,490
clear from the diagram if not for my

00:17:36,090 --> 00:17:41,260
description after connecting the snaps

00:17:39,490 --> 00:17:44,080
the security policies are configured

00:17:41,260 --> 00:17:47,170
with seccomp to allow bar to connect

00:17:44,080 --> 00:17:49,990
North's D bus service by the a Parma

00:17:47,170 --> 00:17:54,010
policy a Parma standard well-tested

00:17:49,990 --> 00:17:56,110
deployed across canonical Xubuntu and

00:17:54,010 --> 00:17:59,980
now back ported into a lot of Debian as

00:17:56,110 --> 00:18:01,900
well so this complexity is managed for

00:17:59,980 --> 00:18:04,240
us because those of us who have hand

00:18:01,900 --> 00:18:07,180
authored a Parma profiles may be aware

00:18:04,240 --> 00:18:09,550
while there is a useful process to go

00:18:07,180 --> 00:18:11,530
through and a useful series of steps to

00:18:09,550 --> 00:18:14,620
go through and do that it requires

00:18:11,530 --> 00:18:19,170
intrinsic knowledge of Linux in general

00:18:14,620 --> 00:18:21,340
and and the subsystems in particular so

00:18:19,170 --> 00:18:24,880
we don't have to deal with that with a

00:18:21,340 --> 00:18:27,460
bun 2 core when we submit apps to the

00:18:24,880 --> 00:18:29,680
apprently store then the complexity is

00:18:27,460 --> 00:18:32,680
managed for us their security team will

00:18:29,680 --> 00:18:36,970
review these things and help to tighten

00:18:32,680 --> 00:18:38,920
policies around our applications so now

00:18:36,970 --> 00:18:40,960
that we have these snaps which are

00:18:38,920 --> 00:18:43,600
synonymous and essentially just

00:18:40,960 --> 00:18:46,470
containers running on our iot devices

00:18:43,600 --> 00:18:49,300
what does our security model look like

00:18:46,470 --> 00:18:53,230
can we prevent all attacks by default

00:18:49,300 --> 00:18:56,860
and move to Hawaii well not quite yet

00:18:53,230 --> 00:19:00,790
sadly but containers can help with these

00:18:56,860 --> 00:19:03,010
attacks so a compromised control server

00:19:00,790 --> 00:19:04,650
or anything there's pushing to the

00:19:03,010 --> 00:19:07,840
device man in the middle

00:19:04,650 --> 00:19:09,280
those are application tier problems we

00:19:07,840 --> 00:19:11,800
can't fix that with an isolation

00:19:09,280 --> 00:19:16,300
technology around the process we need to

00:19:11,800 --> 00:19:18,700
work on our layer 7 concerns corrupt

00:19:16,300 --> 00:19:20,680
firmware well there should be no access

00:19:18,700 --> 00:19:24,610
by the process to the underlying

00:19:20,680 --> 00:19:25,930
firmware or hardware in fact unless the

00:19:24,610 --> 00:19:28,000
applications are running as routes and

00:19:25,930 --> 00:19:30,270
even if they were standard practices

00:19:28,000 --> 00:19:33,070
tells us to drop our capabilities and

00:19:30,270 --> 00:19:36,130
provide some form of whitelisting on

00:19:33,070 --> 00:19:37,540
system calls or with set comp or on file

00:19:36,130 --> 00:19:40,780
system accesses in that slightly high

00:19:37,540 --> 00:19:42,400
level with a partner we can fix this

00:19:40,780 --> 00:19:44,170
with cryptographically signed updates

00:19:42,400 --> 00:19:46,450
there are many things that will do this

00:19:44,170 --> 00:19:49,690
the up tain system is an implementation

00:19:46,450 --> 00:19:52,420
of tough which is what docker content

00:19:49,690 --> 00:19:53,730
trust uses and that is applicable for

00:19:52,420 --> 00:19:57,450
automotive

00:19:53,730 --> 00:19:59,970
updates so things like this these are

00:19:57,450 --> 00:20:02,520
solved problems based on cryptography

00:19:59,970 --> 00:20:06,300
that we have a reasonable bar of

00:20:02,520 --> 00:20:08,100
confidence in the assumption that the

00:20:06,300 --> 00:20:10,830
bootloader has been compromised well

00:20:08,100 --> 00:20:12,360
depending on what we're using we need to

00:20:10,830 --> 00:20:15,300
sign everything secure boot is the only

00:20:12,360 --> 00:20:18,630
way to actually instill any confidence

00:20:15,300 --> 00:20:20,730
that those cryptographically signs bits

00:20:18,630 --> 00:20:22,590
of hardware and software are doing what

00:20:20,730 --> 00:20:24,480
they say they're doing as defined by a

00:20:22,590 --> 00:20:27,630
standard web of trust based on the

00:20:24,480 --> 00:20:30,000
signer what about the default password

00:20:27,630 --> 00:20:33,840
attack well a prompt update mechanism

00:20:30,000 --> 00:20:35,970
again log in via a side channel for

00:20:33,840 --> 00:20:38,130
example using OAuth with a third-party

00:20:35,970 --> 00:20:40,830
UI and ensuring that these can be

00:20:38,130 --> 00:20:45,090
rotated quickly standard flavored

00:20:40,830 --> 00:20:46,860
security practices and SSH and telnet

00:20:45,090 --> 00:20:49,740
well remote access to any device

00:20:46,860 --> 00:20:51,510
requires some sort of network connection

00:20:49,740 --> 00:20:53,760
it may require that socket to be

00:20:51,510 --> 00:20:56,040
forwarded through to a publicly rootball

00:20:53,760 --> 00:20:57,750
IP none of those things are a

00:20:56,040 --> 00:21:00,120
particularly good day

00:20:57,750 --> 00:21:02,610
hidden backdoors we shouldn't really

00:21:00,120 --> 00:21:05,250
have any remote access to a device and

00:21:02,610 --> 00:21:06,620
if we do then ideally it should be

00:21:05,250 --> 00:21:10,140
through some centralized management

00:21:06,620 --> 00:21:14,160
rather than leaving open ports with

00:21:10,140 --> 00:21:15,750
vulnerable services but of course at the

00:21:14,160 --> 00:21:19,290
end of the day if we have physical

00:21:15,750 --> 00:21:25,440
access to any device it is probably

00:21:19,290 --> 00:21:27,410
unless sunk in epoxy game over it should

00:21:25,440 --> 00:21:31,140
be noted that if your IOT devices

00:21:27,410 --> 00:21:34,160
dropped offline never return you may

00:21:31,140 --> 00:21:38,130
have an anonymous Samaritan to thank

00:21:34,160 --> 00:21:39,590
this guy is called mr. Bricker bots this

00:21:38,130 --> 00:21:42,570
guy tried to solve the huge

00:21:39,590 --> 00:21:45,660
industry-wide problem of manufacturer

00:21:42,570 --> 00:21:50,010
abandoned IOT devices in an

00:21:45,660 --> 00:21:54,660
interestingly benevolent but nefarious

00:21:50,010 --> 00:21:57,330
manner he hacked into them and he

00:21:54,660 --> 00:21:59,250
bricked them so this would be an IOT

00:21:57,330 --> 00:22:01,320
device happily going about its day job

00:21:59,250 --> 00:22:04,080
and then suddenly bang drops off line

00:22:01,320 --> 00:22:05,640
never to be restored you might be able

00:22:04,080 --> 00:22:06,730
to read into what he's actually doing

00:22:05,640 --> 00:22:09,040
there

00:22:06,730 --> 00:22:10,720
writing trash two devices blowing away

00:22:09,040 --> 00:22:12,460
the disks deleting all the network

00:22:10,720 --> 00:22:14,980
routes so the thing is in its own black

00:22:12,460 --> 00:22:19,270
hole setting kernel threads to one and

00:22:14,980 --> 00:22:20,740
rebooting the device maybe some systems

00:22:19,270 --> 00:22:24,670
could survive this sort of miss

00:22:20,740 --> 00:22:26,770
configuration but most Linux devices are

00:22:24,670 --> 00:22:31,330
probably at this point pretty much

00:22:26,770 --> 00:22:33,790
bricked unless they can be reflashed so

00:22:31,330 --> 00:22:37,750
I mean what does this mean if this guy

00:22:33,790 --> 00:22:39,970
has had to take his own action to

00:22:37,750 --> 00:22:42,760
backfill for the lack of security across

00:22:39,970 --> 00:22:43,800
the industry in the space what who's

00:22:42,760 --> 00:22:47,230
accountable

00:22:43,800 --> 00:22:49,030
should it be vendors and if you know

00:22:47,230 --> 00:22:51,220
this guy Bruce Schneier he says

00:22:49,030 --> 00:22:54,460
absolutely vendors should be held

00:22:51,220 --> 00:22:56,590
accountable DEFCON is not Congress in

00:22:54,460 --> 00:22:57,820
case you were wondering with so many of

00:22:56,590 --> 00:22:59,890
these devices coming from overseas

00:22:57,820 --> 00:23:03,400
especially China and Southeast Asia

00:22:59,890 --> 00:23:05,230
Congress viewed his statement that not

00:23:03,400 --> 00:23:07,930
only should manufacturers and vendors be

00:23:05,230 --> 00:23:10,210
held accountable but also financially

00:23:07,930 --> 00:23:13,330
punished for failing to keep their

00:23:10,210 --> 00:23:17,020
devices updated or viably secure at all

00:23:13,330 --> 00:23:20,740
times this was viewed by Congress as a

00:23:17,020 --> 00:23:23,070
trade tariffs and the idea rejected this

00:23:20,740 --> 00:23:26,980
was just over two years ago hilariously

00:23:23,070 --> 00:23:30,580
so the UK has had some ideas about this

00:23:26,980 --> 00:23:34,480
too but until we see consumer or

00:23:30,580 --> 00:23:36,820
legislation driven action there is no

00:23:34,480 --> 00:23:38,010
incentive for manufacturers to change

00:23:36,820 --> 00:23:41,670
their ways

00:23:38,010 --> 00:23:44,170
maybe gdpr will save us all but again

00:23:41,670 --> 00:23:46,030
without case law this may have no

00:23:44,170 --> 00:23:48,910
bearing at all and we need some

00:23:46,030 --> 00:23:54,040
definitive legal movements there are

00:23:48,910 --> 00:23:56,500
multiple cases still pending and we

00:23:54,040 --> 00:23:59,980
can't talk about IOT without talking

00:23:56,500 --> 00:24:02,500
about botnets huge botnets that have

00:23:59,980 --> 00:24:06,600
caused internet scale outages with

00:24:02,500 --> 00:24:06,600
humongous distributed denial-of-service

00:24:07,140 --> 00:24:11,980
Mirai Japanese for the future and not

00:24:10,570 --> 00:24:14,850
pronounced like that so I'm told

00:24:11,980 --> 00:24:17,680
it's a malware the brute forces networks

00:24:14,850 --> 00:24:19,179
devices running Linux to join their

00:24:17,680 --> 00:24:22,269
botnet over

00:24:19,179 --> 00:24:24,969
it primarily targets online consumer

00:24:22,269 --> 00:24:29,259
based devices such as IP cameras and

00:24:24,969 --> 00:24:33,159
home Reuters then we had a terabyte per

00:24:29,259 --> 00:24:35,949
second attack on OVH Brian Krebs and

00:24:33,159 --> 00:24:38,199
dine DNS which as you may remember took

00:24:35,949 --> 00:24:41,949
down all of the internet that only used

00:24:38,199 --> 00:24:45,159
a single DNS provider including most of

00:24:41,949 --> 00:24:50,049
us East one and we saw how many sites

00:24:45,159 --> 00:24:52,209
had a single point of failure so Mirai

00:24:50,049 --> 00:24:54,639
was bad because devices were internet

00:24:52,209 --> 00:24:57,069
accessible and therefore brute forcible

00:24:54,639 --> 00:24:58,839
and not everything is publicly

00:24:57,069 --> 00:25:02,079
accessible today thanks to network

00:24:58,839 --> 00:25:04,539
address translation and of course this

00:25:02,079 --> 00:25:05,979
will change we're going to see the same

00:25:04,539 --> 00:25:10,359
problems because of the eventual

00:25:05,979 --> 00:25:14,469
proliferation of ipv6 by giving every

00:25:10,359 --> 00:25:16,599
device a public IP ipv6 exposes devices

00:25:14,469 --> 00:25:19,539
that were safely hidden away with no

00:25:16,599 --> 00:25:23,529
public facing attack service we have to

00:25:19,539 --> 00:25:25,719
start doing better and soon we're soon

00:25:23,529 --> 00:25:28,690
it is the eventual unknown adoption date

00:25:25,719 --> 00:25:30,579
of ipv6 telecoms providers have made

00:25:28,690 --> 00:25:32,729
some steps in that direction but as

00:25:30,579 --> 00:25:38,289
we've seen the ever do ending pool of

00:25:32,729 --> 00:25:41,079
ipv4 ciders keeps on giving so we have

00:25:38,289 --> 00:25:46,329
to build better IOT devices how do we do

00:25:41,079 --> 00:25:48,909
that Victor thank you so building better

00:25:46,329 --> 00:25:51,669
IOT devices is obviously not an easy one

00:25:48,909 --> 00:25:53,919
right we know it's a tricky problem and

00:25:51,669 --> 00:25:56,049
it's extremely challenging because the

00:25:53,919 --> 00:25:58,589
problem largely is that there's a race

00:25:56,049 --> 00:26:00,699
to the bottom I call most vendors

00:25:58,589 --> 00:26:02,859
consumers tend to just look at the price

00:26:00,699 --> 00:26:05,109
tag more so than anything else which

00:26:02,859 --> 00:26:06,879
makes it very difficult for someone who

00:26:05,109 --> 00:26:07,959
do factor in the cost of security to

00:26:06,879 --> 00:26:11,369
compete with someone who doesn't care

00:26:07,959 --> 00:26:13,959
about it so how can we change this and

00:26:11,369 --> 00:26:15,879
one and in my opinion one of the most

00:26:13,959 --> 00:26:18,759
viable up two options for this is

00:26:15,879 --> 00:26:21,579
actually what what Andrew just mentioned

00:26:18,759 --> 00:26:23,679
which is around secure legislation so

00:26:21,579 --> 00:26:27,489
there is a code of conduct in the UK

00:26:23,679 --> 00:26:29,289
right now that is in process of being

00:26:27,489 --> 00:26:31,809
potentially gratified at some point in

00:26:29,289 --> 00:26:32,130
the future where it actually forces it

00:26:31,809 --> 00:26:33,930
out

00:26:32,130 --> 00:26:35,670
vendors - in particular on consumer

00:26:33,930 --> 00:26:39,870
products to solve this problem and

00:26:35,670 --> 00:26:40,980
actually be accountable and the problem

00:26:39,870 --> 00:26:43,500
really is that we need to make sure that

00:26:40,980 --> 00:26:46,230
the engagement between the vendor and

00:26:43,500 --> 00:26:48,260
the consumer is actually more long-term

00:26:46,230 --> 00:26:52,230
oriented the broader than just

00:26:48,260 --> 00:26:55,350
transactional so this will mean even

00:26:52,230 --> 00:26:57,180
more expensive devices or it will mean

00:26:55,350 --> 00:26:58,230
subscription services and I know a lot

00:26:57,180 --> 00:27:00,210
of people are not very keen on

00:26:58,230 --> 00:27:02,040
subscription services but this is a

00:27:00,210 --> 00:27:03,930
fairly well known playbook in the

00:27:02,040 --> 00:27:07,320
enterprise device management space for

00:27:03,930 --> 00:27:09,830
since forever more or less so we really

00:27:07,320 --> 00:27:12,510
to think about the device cycle here and

00:27:09,830 --> 00:27:16,020
the problem as we have seen in the past

00:27:12,510 --> 00:27:18,570
is that the life cycle really ends for a

00:27:16,020 --> 00:27:20,700
lot of customers love vendors when they

00:27:18,570 --> 00:27:22,200
hand off the devices and the user that's

00:27:20,700 --> 00:27:24,600
when they think their relationship ends

00:27:22,200 --> 00:27:25,830
but really that's just the beginning of

00:27:24,600 --> 00:27:28,500
the relationship right there you want to

00:27:25,830 --> 00:27:29,790
have this for a longer time and that

00:27:28,500 --> 00:27:33,240
poses really interesting question which

00:27:29,790 --> 00:27:36,540
is what is a reasonable time frame and

00:27:33,240 --> 00:27:39,660
so what's the end-of-life for a smart

00:27:36,540 --> 00:27:42,840
device is it one year five years ten

00:27:39,660 --> 00:27:44,790
years I think we will discuss them just

00:27:42,840 --> 00:27:46,140
before the talk I think on Google's

00:27:44,790 --> 00:27:47,820
Chromebooks I think they have a two year

00:27:46,140 --> 00:27:50,850
lifecycle after that they say we're not

00:27:47,820 --> 00:27:52,590
going to support anymore that's at least

00:27:50,850 --> 00:27:53,850
it being upfront about that as opposed

00:27:52,590 --> 00:27:55,320
to a lot of other vendors but they don't

00:27:53,850 --> 00:27:58,340
actually give you enough end of life

00:27:55,320 --> 00:28:00,990
cycle or end-of-life date long timeline

00:27:58,340 --> 00:28:02,280
but it also posed a really interesting

00:28:00,990 --> 00:28:04,500
other question which something I alluded

00:28:02,280 --> 00:28:06,750
to before as well which is who's

00:28:04,500 --> 00:28:10,290
responsible for updating these devices

00:28:06,750 --> 00:28:12,720
is it the vendor or is the end user if

00:28:10,290 --> 00:28:14,670
it's end user the probability of them

00:28:12,720 --> 00:28:15,900
updating the devices in particular if

00:28:14,670 --> 00:28:19,620
they've jumped through multiple hoops

00:28:15,900 --> 00:28:21,150
it's pretty small however with more and

00:28:19,620 --> 00:28:22,560
more smart devices connected to small

00:28:21,150 --> 00:28:24,810
smartphones you start to see more

00:28:22,560 --> 00:28:26,400
intelligent device there IKEA is doing a

00:28:24,810 --> 00:28:27,330
pretty job good job there were there an

00:28:26,400 --> 00:28:28,770
infrastructure where they actually

00:28:27,330 --> 00:28:31,250
update everything through their app so

00:28:28,770 --> 00:28:34,500
it's seamless process for the end user

00:28:31,250 --> 00:28:35,880
so that's that's a big problem I don't

00:28:34,500 --> 00:28:37,350
think this is a clear-cut solution

00:28:35,880 --> 00:28:39,480
there's not an easy way of solving this

00:28:37,350 --> 00:28:42,600
right so let's move into some common

00:28:39,480 --> 00:28:43,700
failure points and one of the biggest

00:28:42,600 --> 00:28:45,510
failure point really is that

00:28:43,700 --> 00:28:49,080
manufacturer don't really plan

00:28:45,510 --> 00:28:51,179
like they think of security as a cost

00:28:49,080 --> 00:28:53,040
and they don't really budget for it and

00:28:51,179 --> 00:28:54,809
obviously that needs to be budgeted for

00:28:53,040 --> 00:28:57,000
otherwise we'll keep seeing this botnet

00:28:54,809 --> 00:28:58,679
that I only mentioned before they're not

00:28:57,000 --> 00:29:00,059
going to go away there's gonna be more

00:28:58,679 --> 00:29:01,290
and more of them in particularly start

00:29:00,059 --> 00:29:03,870
to see the growth and how many of these

00:29:01,290 --> 00:29:06,650
device are getting insanely insecure how

00:29:03,870 --> 00:29:10,340
many of them coming online every day so

00:29:06,650 --> 00:29:13,950
how do we design better IOT devices

00:29:10,340 --> 00:29:15,780
well again like we met like we talked

00:29:13,950 --> 00:29:17,429
about for servers and IOT devices are

00:29:15,780 --> 00:29:19,679
not that different there are converging

00:29:17,429 --> 00:29:21,450
more and more and really needs to

00:29:19,679 --> 00:29:25,140
getting back to the basics and applying

00:29:21,450 --> 00:29:27,450
common sense to this and that means you

00:29:25,140 --> 00:29:29,280
don't hard-code passwords you make sure

00:29:27,450 --> 00:29:31,950
you drop preventative religious whenever

00:29:29,280 --> 00:29:33,960
you can you need to have a solid update

00:29:31,950 --> 00:29:36,780
infrastructure having the user go to a

00:29:33,960 --> 00:29:38,730
web page and upload a bin file is not a

00:29:36,780 --> 00:29:41,100
viable update mechanism you gotta lose

00:29:38,730 --> 00:29:44,850
90 plus flower users if you do that

00:29:41,100 --> 00:29:46,650
right and another problem that we in

00:29:44,850 --> 00:29:48,330
particular I'm not coming from the IOT

00:29:46,650 --> 00:29:51,990
space but I've been exposed to space

00:29:48,330 --> 00:29:54,330
more and more and when I hear tales with

00:29:51,990 --> 00:29:57,240
trenches and how how firmware is built

00:29:54,330 --> 00:29:58,770
on a lot of IOT devices it's really

00:29:57,240 --> 00:30:00,570
scary like people are building their

00:29:58,770 --> 00:30:03,240
firmware on somebody's desktop at the

00:30:00,570 --> 00:30:04,799
office that's really not how you do best

00:30:03,240 --> 00:30:07,140
practice security that needs to be done

00:30:04,799 --> 00:30:09,750
on a CI CD pipeline cryptographically

00:30:07,140 --> 00:30:12,030
verified all that stuff but is not being

00:30:09,750 --> 00:30:13,410
done today in a lord law degree of these

00:30:12,030 --> 00:30:17,490
manufacturers in particular the

00:30:13,410 --> 00:30:19,169
low-budget ones and people try to also

00:30:17,490 --> 00:30:21,120
build their own OTA infrastructure which

00:30:19,169 --> 00:30:23,160
is kind of silly I mean they probably do

00:30:21,120 --> 00:30:25,110
it for cost reasons about building an

00:30:23,160 --> 00:30:26,460
entire OTA infrastructure over-the-air

00:30:25,110 --> 00:30:28,230
update infrastructure is really

00:30:26,460 --> 00:30:30,809
complicated most companies are not

00:30:28,230 --> 00:30:32,130
capable of doing that so that's some of

00:30:30,809 --> 00:30:35,370
the things we really need to think about

00:30:32,130 --> 00:30:37,890
as well signing updates and we have to

00:30:35,370 --> 00:30:40,169
assume from day zero that whatever

00:30:37,890 --> 00:30:41,760
you're building the probability of that

00:30:40,169 --> 00:30:44,610
device is being exposed to the public

00:30:41,760 --> 00:30:47,640
Internet is very high so if you assumed

00:30:44,610 --> 00:30:49,950
that from day one well then you have to

00:30:47,640 --> 00:30:51,540
make take into consideration when you

00:30:49,950 --> 00:30:53,220
design your service don't assume that

00:30:51,540 --> 00:30:54,990
your operating is flowerpower into the

00:30:53,220 --> 00:30:56,250
environment where some vendors appears

00:30:54,990 --> 00:30:58,680
to think that their device are gonna go

00:30:56,250 --> 00:31:01,560
into assume the hostile environment

00:30:58,680 --> 00:31:06,960
so with that I'm gonna hand off actually

00:31:01,560 --> 00:31:08,850
to myself sorry this is a what I

00:31:06,960 --> 00:31:10,710
mentioned earlier before which is this

00:31:08,850 --> 00:31:12,270
is my experience I some my previous

00:31:10,710 --> 00:31:14,040
company we're doing digital signage and

00:31:12,270 --> 00:31:15,930
we're using raspberry PI's for building

00:31:14,040 --> 00:31:18,090
the entire infrastructure for those so

00:31:15,930 --> 00:31:21,720
right now it's about 20,000 device

00:31:18,090 --> 00:31:24,330
around the world and we're all using

00:31:21,720 --> 00:31:27,450
raspberry PI's and well since I'm not

00:31:24,330 --> 00:31:30,390
coming from a traditional IOT background

00:31:27,450 --> 00:31:33,240
we took more Linux oriented approach to

00:31:30,390 --> 00:31:34,530
this from the start and this is really

00:31:33,240 --> 00:31:36,420
the journey that I'm gonna tell you

00:31:34,530 --> 00:31:39,180
about how what lessons we learned from

00:31:36,420 --> 00:31:41,490
doing that and we screwed up in the

00:31:39,180 --> 00:31:43,500
early days but we got we learn from

00:31:41,490 --> 00:31:45,900
those mistakes and when we share with

00:31:43,500 --> 00:31:49,290
you the various phases so we started

00:31:45,900 --> 00:31:50,610
back in 2013 build this and none of

00:31:49,290 --> 00:31:52,500
these operating system that we talked

00:31:50,610 --> 00:31:53,700
about back then existed that would the

00:31:52,500 --> 00:31:57,870
court in Texas

00:31:53,700 --> 00:32:01,170
millena didn't exist back then so we had

00:31:57,870 --> 00:32:04,110
to basically build our own system and we

00:32:01,170 --> 00:32:07,290
me coming from a DevOps environment we

00:32:04,110 --> 00:32:10,200
decided that using puppet and self hard

00:32:07,290 --> 00:32:11,730
and raspbian was a good idea he was

00:32:10,200 --> 00:32:13,230
given the tools of the time it was

00:32:11,730 --> 00:32:14,490
probably not horrible but it was

00:32:13,230 --> 00:32:16,440
obviously not in great at the in

00:32:14,490 --> 00:32:18,390
retrospect it's not so we built out the

00:32:16,440 --> 00:32:20,280
self hearted rapid images we built out

00:32:18,390 --> 00:32:21,780
this puppet for orchestration there were

00:32:20,280 --> 00:32:24,000
lots of glue there were a lot of bash

00:32:21,780 --> 00:32:25,500
script bash scripting and then a secret

00:32:24,000 --> 00:32:30,090
sauce with actually the play player

00:32:25,500 --> 00:32:32,670
itself and what we discovered was a lot

00:32:30,090 --> 00:32:34,050
of pain points and one of the biggest

00:32:32,670 --> 00:32:35,670
paying well that one of the big pain was

00:32:34,050 --> 00:32:38,370
we had was actually creating disk images

00:32:35,670 --> 00:32:40,230
we have to do that by hand because I'm

00:32:38,370 --> 00:32:42,330
not sure how familiar you are with the

00:32:40,230 --> 00:32:44,460
raspbian retropie space but raspbian

00:32:42,330 --> 00:32:46,380
backed entities was almost impossible to

00:32:44,460 --> 00:32:48,000
build by yourself so you have to rely on

00:32:46,380 --> 00:32:51,270
their upstream adjust and modify them

00:32:48,000 --> 00:32:54,750
that was one of the many pain points we

00:32:51,270 --> 00:32:57,060
had to build out scaling scaling puppet

00:32:54,750 --> 00:32:59,280
as people may know is not trivial doable

00:32:57,060 --> 00:33:01,050
but not trivial that's something we

00:32:59,280 --> 00:33:02,550
spent a lot of time on and it was slow

00:33:01,050 --> 00:33:05,940
at large and we didn't have any

00:33:02,550 --> 00:33:08,520
transactional updates so back in 2015 we

00:33:05,940 --> 00:33:10,410
had this long list of pain points we

00:33:08,520 --> 00:33:11,539
want to address and we started go back

00:33:10,410 --> 00:33:13,820
to

00:33:11,539 --> 00:33:17,059
list that we had and arrived and see

00:33:13,820 --> 00:33:18,529
what how we could solve this and these

00:33:17,059 --> 00:33:20,479
were the Criterion's that we had so he

00:33:18,529 --> 00:33:22,999
wanted to have this game is built on CI

00:33:20,479 --> 00:33:24,830
that was important to us we won't have

00:33:22,999 --> 00:33:27,889
cross isolation using some kind of

00:33:24,830 --> 00:33:30,200
kernel technology containers or yes

00:33:27,889 --> 00:33:32,269
apparmor seccomp whatever but make sure

00:33:30,200 --> 00:33:34,220
that if some piece of the compare some

00:33:32,269 --> 00:33:36,139
component got compromised it could not

00:33:34,220 --> 00:33:37,399
actually affect the rest of it we want

00:33:36,139 --> 00:33:39,470
to make sure you have transactional

00:33:37,399 --> 00:33:41,570
update that was for us very important

00:33:39,470 --> 00:33:42,979
because transaction of the means that we

00:33:41,570 --> 00:33:44,599
could not end up in this limbo state

00:33:42,979 --> 00:33:46,190
that we had ended up in the past with

00:33:44,599 --> 00:33:48,529
like we had a half puppet run and then

00:33:46,190 --> 00:33:49,820
we had corrupted files so we want to

00:33:48,529 --> 00:33:52,669
make sure we have an entire transaction

00:33:49,820 --> 00:33:55,090
update system both on the operating

00:33:52,669 --> 00:33:57,739
system and awesome the application layer

00:33:55,090 --> 00:33:59,119
we want to make sure we didn't actually

00:33:57,739 --> 00:34:01,039
have to remember with ourselves we

00:33:59,119 --> 00:34:04,399
actually want to use something existing

00:34:01,039 --> 00:34:06,200
that we can use modify with some support

00:34:04,399 --> 00:34:08,599
contract so that's what we ended up with

00:34:06,200 --> 00:34:11,659
and our bonus point was cryptographic

00:34:08,599 --> 00:34:13,700
assigned updates so what we ended up

00:34:11,659 --> 00:34:15,679
with was to boot the core and we were

00:34:13,700 --> 00:34:17,419
the first one of the first commercial

00:34:15,679 --> 00:34:19,399
customers due for Ubuntu using what the

00:34:17,419 --> 00:34:21,980
core actually so it's really new when we

00:34:19,399 --> 00:34:23,869
started and they that allowed us to

00:34:21,980 --> 00:34:25,819
throw a lot of the tools we have written

00:34:23,869 --> 00:34:27,889
ourselves we were able to scrap a lot of

00:34:25,819 --> 00:34:29,780
that and rely on the upstream tooling

00:34:27,889 --> 00:34:31,579
instead because I don't know today we're

00:34:29,780 --> 00:34:33,109
not an operating system company we don't

00:34:31,579 --> 00:34:35,869
want to build all that and maintain an

00:34:33,109 --> 00:34:38,599
entire opposition system ourselves so we

00:34:35,869 --> 00:34:40,669
ended up doing that and that allow us to

00:34:38,599 --> 00:34:43,190
focus a lot on more on the secret sauce

00:34:40,669 --> 00:34:45,559
and lot less on maintaining the system

00:34:43,190 --> 00:34:47,599
and we've gained a lot more security

00:34:45,559 --> 00:34:50,419
features we got a lot of these solved

00:34:47,599 --> 00:34:51,799
that we mentioned earlier and we're

00:34:50,419 --> 00:34:53,990
running a little bit short late on time

00:34:51,799 --> 00:34:59,540
here and but we all end up with a recap

00:34:53,990 --> 00:35:02,569
reminder here right Thank You Victor to

00:34:59,540 --> 00:35:05,660
briefly summarize most vendors today

00:35:02,569 --> 00:35:07,490
basically ignore security there is

00:35:05,660 --> 00:35:10,339
however some hope with the new

00:35:07,490 --> 00:35:13,369
generation of innovative IOT platforms

00:35:10,339 --> 00:35:16,119
which greatly reduces the life cycle

00:35:13,369 --> 00:35:19,790
well it so improves the life cycle and

00:35:16,119 --> 00:35:22,430
lengthens and also hardens the security

00:35:19,790 --> 00:35:24,040
elements meaning that we can deploy

00:35:22,430 --> 00:35:26,050
things that we then have trust

00:35:24,040 --> 00:35:30,250
and confidence in for an extended period

00:35:26,050 --> 00:35:32,260
of time we believe the fundament of the

00:35:30,250 --> 00:35:34,510
problem is a lack of legislation in the

00:35:32,260 --> 00:35:36,570
space this could probably be extended to

00:35:34,510 --> 00:35:39,850
computer science engineering in general

00:35:36,570 --> 00:35:41,490
when we are building the tools and the

00:35:39,850 --> 00:35:43,150
infrastructure to keep people alive

00:35:41,490 --> 00:35:45,490
ultimately from power distribution

00:35:43,150 --> 00:35:47,500
through to medical devices then some

00:35:45,490 --> 00:35:50,860
thought has to be given as to how we

00:35:47,500 --> 00:35:55,240
regulate as as other people would say

00:35:50,860 --> 00:35:57,580
the civil engineering firms so I'm not a

00:35:55,240 --> 00:36:01,210
lawyer please don't take that as any

00:35:57,580 --> 00:36:03,040
sort of advice and finally go forth and

00:36:01,210 --> 00:36:06,520
patch your devices it is the only way

00:36:03,040 --> 00:36:13,780
that we can maintain security thank you

00:36:06,520 --> 00:36:18,760
very much I'm not sure if you have time

00:36:13,780 --> 00:36:21,180
for questions yes no yes we do have any

00:36:18,760 --> 00:36:21,180
questions

00:36:25,200 --> 00:36:32,190
the yoke the project yes we looked at

00:36:28,080 --> 00:36:34,020
that as well but there's a lot of work

00:36:32,190 --> 00:36:35,369
that needs to be done on your on your

00:36:34,020 --> 00:36:38,580
own site as well there it's a very

00:36:35,369 --> 00:36:40,080
interesting project but the whole update

00:36:38,580 --> 00:36:42,270
mechanism is still things you have to

00:36:40,080 --> 00:36:44,099
run for yourself I know the landscape

00:36:42,270 --> 00:36:46,230
has changed a lot since back then I know

00:36:44,099 --> 00:36:48,630
the tools for I think it's the mender

00:36:46,230 --> 00:36:50,730
that does update systems for for a lot

00:36:48,630 --> 00:36:52,619
of those tooling in these days so that

00:36:50,730 --> 00:36:55,830
landscape has changed a lot since we did

00:36:52,619 --> 00:36:57,690
this market research so I think yokte is

00:36:55,830 --> 00:37:00,570
probably in a lot better shape today as

00:36:57,690 --> 00:37:02,670
far as tooling goes and ecosystem as

00:37:00,570 --> 00:37:05,400
well then it was back in those days but

00:37:02,670 --> 00:37:09,200
yes we it was unfortunate on the one of

00:37:05,400 --> 00:37:09,200
the ones we seriously coset it back then

00:37:09,349 --> 00:37:21,150
yes so we played both with both yes so

00:37:19,410 --> 00:37:22,770
we have an open sore this is a side note

00:37:21,150 --> 00:37:24,089
here but we have an open source version

00:37:22,770 --> 00:37:25,680
of screen as well so there's a

00:37:24,089 --> 00:37:27,270
commercial or an open source version the

00:37:25,680 --> 00:37:29,339
open source version were runs with

00:37:27,270 --> 00:37:30,810
B'Elanna as well so we have a fair

00:37:29,339 --> 00:37:32,670
amount of exposure to Berlin as well

00:37:30,810 --> 00:37:35,609
there are ups and downs with both of

00:37:32,670 --> 00:37:38,369
them I think B'Elanna is a lot easier to

00:37:35,609 --> 00:37:41,760
get up and running with been with the

00:37:38,369 --> 00:37:44,040
Corps but when you operate at scale I've

00:37:41,760 --> 00:37:46,530
my opinion is that we were in the chorus

00:37:44,040 --> 00:37:48,690
some better bigger advantages also has a

00:37:46,530 --> 00:37:50,970
higher level of security baked in by

00:37:48,690 --> 00:37:52,589
default which is largely why it's more

00:37:50,970 --> 00:37:59,849
complicated get up and running with but

00:37:52,589 --> 00:38:01,830
yes we did consider both yes all right

00:37:59,849 --> 00:38:04,320
well thank you for coming out all right

00:38:01,830 --> 00:38:06,440
everybody and have a good evening thank

00:38:04,320 --> 00:38:06,440
you

00:38:07,220 --> 00:38:09,280

YouTube URL: https://www.youtube.com/watch?v=7yN999B11Ms


