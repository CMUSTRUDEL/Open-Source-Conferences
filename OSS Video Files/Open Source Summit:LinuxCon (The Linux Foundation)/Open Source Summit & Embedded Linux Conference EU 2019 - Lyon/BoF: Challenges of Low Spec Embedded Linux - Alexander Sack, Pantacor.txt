Title: BoF: Challenges of Low Spec Embedded Linux - Alexander Sack, Pantacor
Publication date: 2019-10-29
Playlist: Open Source Summit & Embedded Linux Conference EU 2019 - Lyon
Description: 
	BoF: Challenges of Low Spec Embedded Linux - Alexander Sack, Pantacor

By now, the Embedded Linux devices industry has shifted away from how to use Linux to make innovative, low cost and low spec solutions, towards a focus on using more powerful hardware to run more and more demanding applications. While big specs will prevail over time, the low end will still be the one delivering the volume and the backbone of the consumer industry in today's Linux devices ecosystem. This BoF session is about bringing enthusiasts of low spec devices together to discuss their current challenges, identify common pain points and outline potential approaches that can help the Embedded Linux community to tackle thes growing issues and solve these problems in a collaborative manner.
Captions: 
	00:00:00,089 --> 00:00:12,150
hey everyone so is anybody not here for

00:00:04,890 --> 00:00:15,080
this session and maybe move out a bit or

00:00:12,150 --> 00:00:15,080
take a seat

00:00:37,730 --> 00:00:45,980
all right my name is Aleksandra sock I'm

00:00:41,980 --> 00:00:50,120
working for Panther core we are making a

00:00:45,980 --> 00:00:52,610
container engine that we hope will be

00:00:50,120 --> 00:00:55,250
suitable to power any kind of Linux

00:00:52,610 --> 00:00:57,650
device embedded device in particular we

00:00:55,250 --> 00:01:01,580
are keen on ensuring that whatever we're

00:00:57,650 --> 00:01:03,530
doing is helping the full spectrum of

00:01:01,580 --> 00:01:06,170
embedded devices this includes in

00:01:03,530 --> 00:01:09,710
particular low spec devices as well so

00:01:06,170 --> 00:01:12,050
we are not talking about a talker and

00:01:09,710 --> 00:01:14,210
engine and so on so I wanted to to see

00:01:12,050 --> 00:01:15,800
there I wanted to meet persons and

00:01:14,210 --> 00:01:18,680
people that are interested in seeing

00:01:15,800 --> 00:01:22,340
what our modern topics about low spec

00:01:18,680 --> 00:01:24,140
Linux devices these days and and and see

00:01:22,340 --> 00:01:26,930
basically if there there's a group of

00:01:24,140 --> 00:01:30,080
people there that we could basically

00:01:26,930 --> 00:01:31,460
work with to figure out potential

00:01:30,080 --> 00:01:35,740
challenges that we discover here we had

00:01:31,460 --> 00:01:39,920
a similar session in in San Diego where

00:01:35,740 --> 00:01:42,259
we try to figure out basically what

00:01:39,920 --> 00:01:44,960
actually your low spec devices had some

00:01:42,259 --> 00:01:47,090
back and forth discussion on it and then

00:01:44,960 --> 00:01:49,819
try to deep drive through it so I wanted

00:01:47,090 --> 00:01:53,119
to repeat it here and see what this

00:01:49,819 --> 00:01:55,670
audience has to say about it it's more

00:01:53,119 --> 00:01:57,830
meant to be an interactive session so

00:01:55,670 --> 00:02:00,050
it's not just presenting and listening

00:01:57,830 --> 00:02:02,690
because we need you input I think it's

00:02:00,050 --> 00:02:04,640
about capturing what is are there any

00:02:02,690 --> 00:02:06,259
issues these days that low spec devices

00:02:04,640 --> 00:02:07,789
need to tackle the Linux community as a

00:02:06,259 --> 00:02:10,429
whole other software components that are

00:02:07,789 --> 00:02:12,819
missing is there anything that causes

00:02:10,429 --> 00:02:15,500
particular pain points for you guys and

00:02:12,819 --> 00:02:18,950
then maybe see if there's a way forward

00:02:15,500 --> 00:02:22,099
to to decide on an agenda that we as a

00:02:18,950 --> 00:02:24,890
community could go together right so

00:02:22,099 --> 00:02:28,310
maybe just to open the discussion there

00:02:24,890 --> 00:02:31,130
are a few devices here that first I

00:02:28,310 --> 00:02:33,709
think we should maybe assert what does

00:02:31,130 --> 00:02:37,580
it mean to be low spec these days this

00:02:33,709 --> 00:02:41,330
is a mips-based router I think 16

00:02:37,580 --> 00:02:42,830
megabytes storage 64 memory I assume is

00:02:41,330 --> 00:02:45,200
that what you guys would define as low

00:02:42,830 --> 00:02:49,390
spec device is that low spec these days

00:02:45,200 --> 00:02:49,390
or is a massive amount of

00:03:29,190 --> 00:03:34,190
nice there is something new

00:04:02,830 --> 00:05:02,410
oh so there is basically a certain price

00:05:00,430 --> 00:05:05,440
so if you go for point four price points

00:05:02,410 --> 00:05:07,390
there's like a minimum you get that's

00:05:05,440 --> 00:05:08,770
the cheapest that's where the minimum is

00:05:07,390 --> 00:05:11,470
and then if you go lower you have to pay

00:05:08,770 --> 00:05:14,730
for that are the reasons for doing that

00:05:11,470 --> 00:05:14,730
I mean power you said

00:05:18,969 --> 00:05:21,839
because

00:06:41,639 --> 00:06:45,340
but that was one of the reasons in

00:06:43,810 --> 00:06:47,680
Sunday where people said you would go

00:06:45,340 --> 00:06:51,400
for low spected we try to reduce the

00:06:47,680 --> 00:06:52,900
potential to exploit those things to

00:06:51,400 --> 00:06:54,910
confirm that story as well but then you

00:06:52,900 --> 00:06:57,940
might need to pay more for that right so

00:06:54,910 --> 00:07:00,250
this is so security is expensive if you

00:06:57,940 --> 00:07:01,389
go along I mean all right so I mean but

00:07:00,250 --> 00:07:03,130
I mean it sounds like this audience

00:07:01,389 --> 00:07:05,770
nobody assumes that this is low spec

00:07:03,130 --> 00:07:10,360
right these days so I guess and

00:07:05,770 --> 00:07:15,400
obviously this guy not low spec I just

00:07:10,360 --> 00:07:19,770
want to ensure that people agree there

00:07:15,400 --> 00:07:19,770
is no low spec it looks embedded but

00:07:33,060 --> 00:07:38,229
right those were the ideas that came up

00:07:35,259 --> 00:07:43,570
in this Sunday workshop so I mean maybe

00:07:38,229 --> 00:07:44,830
we can supplement that I don't know so

00:07:43,570 --> 00:07:51,010
how can you define those bags you know

00:07:44,830 --> 00:07:54,849
demise try definition the most

00:07:51,010 --> 00:07:58,860
cost-effective device you can get

00:07:54,849 --> 00:07:58,860
produced these days is that what I heard

00:08:02,550 --> 00:08:10,830
so what do you see plus plus right

00:08:19,620 --> 00:08:25,030
but is there any effective library out

00:08:22,240 --> 00:08:26,470
there for Linux I mean nice standard C++

00:08:25,030 --> 00:08:29,010
library that you would use and that it

00:08:26,470 --> 00:08:29,010
gives you stir

00:08:51,720 --> 00:08:59,850
I mean there are like on there like

00:08:57,600 --> 00:09:02,280
Python and JavaScript engines and so on

00:08:59,850 --> 00:09:05,780
for these these so-called

00:09:02,280 --> 00:09:05,780
microcontrollers these days No

00:09:41,770 --> 00:10:21,500
right when like in last two years or

00:09:55,610 --> 00:10:43,880
three years with X that's lying was it

00:10:21,500 --> 00:10:46,010
nice did a few good I mean is it

00:10:43,880 --> 00:10:47,570
something reasonable you want to put in

00:10:46,010 --> 00:10:49,750
at some point if there's a hope this

00:10:47,570 --> 00:10:49,750
hope

00:11:03,980 --> 00:11:07,400
but this memory

00:11:53,600 --> 00:11:58,100
what's that three megabytes of storage

00:11:55,620 --> 00:11:58,100
what

00:12:37,540 --> 00:12:41,990
what is it

00:12:39,019 --> 00:12:44,360
there's a tiny little target right so in

00:12:41,990 --> 00:12:47,329
that I mean I think Michael was talking

00:12:44,360 --> 00:12:48,889
about that a couple of else he's back I

00:12:47,329 --> 00:12:50,269
mean so when we talk about San Diego I

00:12:48,889 --> 00:12:51,829
mean it was always a perceptual task

00:12:50,269 --> 00:12:54,709
before the session they've all said oh

00:12:51,829 --> 00:12:56,300
you have lots of waste and people are

00:12:54,709 --> 00:12:58,040
like the misbehaving but then when I

00:12:56,300 --> 00:12:59,329
looked at the statistics over there it

00:12:58,040 --> 00:13:02,149
didn't look like it it looked like

00:12:59,329 --> 00:13:05,899
pretty flat so people are not adding

00:13:02,149 --> 00:13:25,370
croft and loading up the kernel that

00:13:05,899 --> 00:13:31,699
much we we are we know where we know so

00:13:25,370 --> 00:13:43,220
what is the current size but if we talk

00:13:31,699 --> 00:13:44,959
about memory or this foot it's the Lord

00:13:43,220 --> 00:13:46,910
right I mean I mean all those hope whe

00:13:44,959 --> 00:13:49,370
currents they typically are like two or

00:13:46,910 --> 00:13:50,660
one five and so on I mean three is

00:13:49,370 --> 00:13:51,920
better be not what are they doing there

00:13:50,660 --> 00:14:04,939
I mean there's not so many drivers for

00:13:51,920 --> 00:14:06,949
m86 just just without trying to work

00:14:04,939 --> 00:14:09,550
against the trend right that's a good

00:14:06,949 --> 00:14:09,550
data point

00:15:57,920 --> 00:16:01,820
so is there anything someone should

00:16:00,050 --> 00:16:03,950
invest in to try to prevent that stuff

00:16:01,820 --> 00:16:07,700
or do we care or do we not care about

00:16:03,950 --> 00:16:09,500
these things like like blow

00:16:07,700 --> 00:16:12,380
naturally-occurring blow because people

00:16:09,500 --> 00:16:15,160
do not add flags or disable features and

00:16:12,380 --> 00:16:15,160
so on

00:18:31,190 --> 00:18:35,390
who has a problem to you is what and

00:21:07,260 --> 00:21:12,159
so the other way I'd use Linux use cases

00:21:09,940 --> 00:21:14,529
for the s from options tough for people

00:21:12,159 --> 00:21:17,460
with Zephyr and so on I mean I heard yes

00:21:14,529 --> 00:21:17,460
but not really

00:21:38,669 --> 00:21:41,669
to

00:22:05,180 --> 00:22:08,449
[Music]

00:22:25,980 --> 00:22:29,160
[Music]

00:22:58,460 --> 00:23:05,100
so you want real runtime tooling to do

00:23:02,910 --> 00:23:06,630
that in a lab environment to see what is

00:23:05,100 --> 00:23:09,170
not needed under lies and then strip out

00:23:06,630 --> 00:23:09,170
the binary zone

00:23:43,559 --> 00:23:47,850
where isn't the hypervisor a bit at

00:23:46,000 --> 00:24:05,350
conflict with a super low spec thing

00:23:47,850 --> 00:24:14,070
today really well what is it doing its

00:24:05,350 --> 00:24:18,870
hypervisor something might be cool right

00:24:14,070 --> 00:24:18,870
okay so runtime LTO

00:24:19,290 --> 00:24:28,000
I don't know I mean that most of the

00:24:26,380 --> 00:24:31,620
discussion has been centered around

00:24:28,000 --> 00:24:34,360
I think Linux itself at the moment so I

00:24:31,620 --> 00:24:36,370
mean I better what I kind of heard was I

00:24:34,360 --> 00:24:39,700
mean maybe it's not worth to really poke

00:24:36,370 --> 00:24:41,200
the little stream that much or invest so

00:24:39,700 --> 00:24:43,650
much because we're pretty good there and

00:24:41,200 --> 00:24:45,640
in the end we are only looking for

00:24:43,650 --> 00:24:48,340
devices that are the cheapest one said

00:24:45,640 --> 00:24:52,059
they have 64 mega of memory so maybe we

00:24:48,340 --> 00:24:54,900
say one way to look at it might be to

00:24:52,059 --> 00:24:58,230
say okay why not say Linux should be

00:24:54,900 --> 00:25:02,770
just fine to best be serving these

00:24:58,230 --> 00:25:06,970
lowest cost devices that can mess it

00:25:02,770 --> 00:25:08,800
even MMU and so on but with 64 mega of

00:25:06,970 --> 00:25:11,670
memory I think the problem is not the

00:25:08,800 --> 00:25:14,220
kernel anymore but it would rather be

00:25:11,670 --> 00:25:18,179
something else right more user space

00:25:14,220 --> 00:25:18,179
topics potentially soon

00:25:21,200 --> 00:25:27,360
you agree I mean I suspect that as well

00:25:25,080 --> 00:25:29,160
there's a bootloader fine in general I

00:25:27,360 --> 00:25:32,040
think so I mean I just know that in the

00:25:29,160 --> 00:25:34,770
open wrt world there was a super Hector

00:25:32,040 --> 00:25:39,030
bootloader by Qualcomm it so to get

00:25:34,770 --> 00:25:40,260
super networks on the san diego the

00:25:39,030 --> 00:26:02,940
discussion they said like system to you

00:25:40,260 --> 00:26:04,320
cannot use for embedded devices okay I

00:26:02,940 --> 00:26:05,790
mean the one argument that they brought

00:26:04,320 --> 00:26:08,010
up most basically that insistently is

00:26:05,790 --> 00:26:13,650
very hard to also be in charge of the

00:26:08,010 --> 00:26:19,770
boot order and lots of fiddling right

00:26:13,650 --> 00:26:21,630
going back and forth and so on so one

00:26:19,770 --> 00:26:25,320
thing I personally feel as always bad as

00:26:21,630 --> 00:26:27,990
networking middlewares in Linux there is

00:26:25,320 --> 00:26:30,540
nothing in my opinion there there is

00:26:27,990 --> 00:26:33,540
very comfortable use and does everything

00:26:30,540 --> 00:26:35,010
we need but there's just my perception

00:26:33,540 --> 00:26:38,220
that anybody feel like networking is

00:26:35,010 --> 00:26:43,070
great and Linux for following better

00:26:38,220 --> 00:26:48,440
devices but how do you do that I mean

00:26:43,070 --> 00:26:48,440
networking is it not a script

00:27:00,059 --> 00:27:04,710
there's a systemd network to you is that

00:27:02,320 --> 00:27:04,710
what you told

00:27:41,899 --> 00:27:47,190
all right does anybody

00:27:44,850 --> 00:27:50,519
I think Bluetooth isn't that bad right I

00:27:47,190 --> 00:27:53,159
think the blue is blue two blue Z and so

00:27:50,519 --> 00:27:54,869
on it's not I mean at least one when we

00:27:53,159 --> 00:27:57,899
try to produce the restrictive version

00:27:54,869 --> 00:28:00,389
it was not it was not very massive in

00:27:57,899 --> 00:28:03,330
size and graphics I have no idea if

00:28:00,389 --> 00:28:06,299
there's anybody doing that on a low spec

00:28:03,330 --> 00:28:08,100
devices and what you use for that right

00:28:06,299 --> 00:28:10,999
I mean it's with pure toolkits rendering

00:28:08,100 --> 00:28:10,999
to frame buffer I guess

00:28:23,330 --> 00:28:35,010
but then it's not going smoothly CPU

00:28:26,010 --> 00:28:40,070
it's mostly direct yes so what do people

00:28:35,010 --> 00:28:42,720
think about D bus on the bus side I

00:28:40,070 --> 00:28:47,240
think lots of components are using that

00:28:42,720 --> 00:28:47,240
right way to go

00:28:55,800 --> 00:29:01,110
right so those were the components folks

00:28:59,460 --> 00:29:02,340
at last time you should potentially take

00:29:01,110 --> 00:29:32,820
a look at but you guys say assistant B

00:29:02,340 --> 00:29:35,700
is great right all right so the

00:29:32,820 --> 00:29:39,540
distributions are I think the situation

00:29:35,700 --> 00:29:41,550
isn't that bad I thought there's plenty

00:29:39,540 --> 00:29:46,770
of options if you can't afford that kind

00:29:41,550 --> 00:29:48,510
of space that you see here at this point

00:29:46,770 --> 00:29:52,560
I'm looking at flesh size here

00:29:48,510 --> 00:29:55,800
not a gram we're already in there and we

00:29:52,560 --> 00:29:57,660
aren't in this yard of 64 make rum and

00:29:55,800 --> 00:30:01,260
then those guys you really have like

00:29:57,660 --> 00:30:02,460
just a safe on storage that's what I see

00:30:01,260 --> 00:30:05,250
in this routers right they have 8

00:30:02,460 --> 00:30:07,820
megabytes storage or 16 so if you want

00:30:05,250 --> 00:30:07,820
to do something useful

00:30:17,969 --> 00:30:22,379
better you see those in the wild

00:30:23,519 --> 00:30:36,820
what kind of vertical are the end in

00:30:26,019 --> 00:30:39,249
which verticals do you see those exactly

00:30:36,820 --> 00:30:58,749
that's that's one that's the equation

00:30:39,249 --> 00:31:02,009
that I am I and what vertical is that in

00:30:58,749 --> 00:31:07,629
I mean where do they use and is it for

00:31:02,009 --> 00:31:09,959
controlling machines and stuff away very

00:31:07,629 --> 00:31:09,959
poor

00:33:01,240 --> 00:33:06,470
right alright I think we are kind of

00:33:05,480 --> 00:33:13,030
running out of time

00:33:06,470 --> 00:33:15,920
don't know so once maybe hear from folks

00:33:13,030 --> 00:33:19,220
so is there anything to do in the lost

00:33:15,920 --> 00:33:22,309
bag segment I had like good ideas from

00:33:19,220 --> 00:33:26,030
Tim doing like runtime optimizations of

00:33:22,309 --> 00:33:28,630
memory for the current I think

00:33:26,030 --> 00:33:31,010
networking was one of the Midwest people

00:33:28,630 --> 00:33:32,240
agreed have might have promised I

00:33:31,010 --> 00:33:36,050
haven't really seriously looked at

00:33:32,240 --> 00:33:39,970
system V novelty because I assume it's

00:33:36,050 --> 00:33:42,730
not know enough but I'm happy to do that

00:33:39,970 --> 00:33:45,920
be convinced otherwise I said this is

00:33:42,730 --> 00:33:49,300
providing us with EAP I said we need but

00:33:45,920 --> 00:33:49,300
anybody wants to add something

00:34:14,840 --> 00:34:17,840
right

00:34:25,910 --> 00:34:29,960
but I mean this open W always feels for

00:34:27,950 --> 00:34:32,420
me like it's like a great low spec

00:34:29,960 --> 00:34:34,820
platform itself but it's also like an

00:34:32,420 --> 00:34:37,340
very closed ecosystem so it's very hard

00:34:34,820 --> 00:34:37,970
to take property and just add whatever

00:34:37,340 --> 00:34:40,370
you want

00:34:37,970 --> 00:34:41,810
so because nobody is like speaking the

00:34:40,370 --> 00:34:43,960
language I think it's you busts and so

00:34:41,810 --> 00:34:43,960
on

00:35:06,440 --> 00:35:12,059
right but I don't think they have a

00:35:08,460 --> 00:35:13,739
really good middleware to talk to for

00:35:12,059 --> 00:35:15,930
networking in particular not sure if you

00:35:13,739 --> 00:35:19,349
try to brought you brought them up

00:35:15,930 --> 00:35:20,700
because of my networking comment and

00:35:19,349 --> 00:35:24,259
just know you trigger them through like

00:35:20,700 --> 00:35:24,259
configs and know

00:35:44,860 --> 00:35:48,010
all right

00:35:53,950 --> 00:36:01,130
alright ok I think we can continue

00:35:58,279 --> 00:36:02,539
discussing at the end after the session

00:36:01,130 --> 00:36:04,869
whoever wants to do it but otherwise

00:36:02,539 --> 00:36:10,390
thanks for the input I think I got some

00:36:04,869 --> 00:36:10,390
good new stuff from the audience here

00:36:11,289 --> 00:36:15,229
so if you're interested and feel like

00:36:13,489 --> 00:36:17,569
you would like to contribute or work

00:36:15,229 --> 00:36:19,459
with some folks on uncertain all of

00:36:17,569 --> 00:36:23,299
these areas and feel free reach out to

00:36:19,459 --> 00:36:26,390
me happy to connect you guys and then we

00:36:23,299 --> 00:36:34,059
talk next time I guess where we in the

00:36:26,390 --> 00:36:34,059

YouTube URL: https://www.youtube.com/watch?v=fLr-aSmysng


