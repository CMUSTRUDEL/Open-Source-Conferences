Title: OSSJ & ALS - Keynotes Day 2
Publication date: 2020-12-10
Playlist: Open Source Summit Japan & Automotive Linux Summit 2020
Description: 
	OSSJ & ALS - Keynotes Day 2
Captions: 
	00:00:05,260 --> 00:00:30,410
[Music]

00:00:35,120 --> 00:00:38,239
okay uh

00:00:35,920 --> 00:00:39,600
we hope you had a great day yesterday

00:00:38,239 --> 00:00:43,120
and thank you so much

00:00:39,600 --> 00:00:43,120
uh everyone for joining us

00:00:43,520 --> 00:00:48,239
and today we get started i would like to

00:00:46,320 --> 00:00:50,480
make a few announcements really

00:00:48,239 --> 00:00:52,559
related to uh the linux foundation's

00:00:50,480 --> 00:00:55,760
training effort

00:00:52,559 --> 00:00:58,719
first of all today we are making an

00:00:55,760 --> 00:01:00,000
announcement that lpi japan and the

00:00:58,719 --> 00:01:02,879
linux foundation

00:01:00,000 --> 00:01:05,519
have decided to team up to distribute

00:01:02,879 --> 00:01:08,320
linux foundation certification

00:01:05,519 --> 00:01:08,640
in the japanese market we are starting

00:01:08,320 --> 00:01:13,119
with

00:01:08,640 --> 00:01:17,040
cka and ckad and ckn ckid

00:01:13,119 --> 00:01:19,920
are the certifications for kubernetes

00:01:17,040 --> 00:01:21,280
these are available now from lp japan

00:01:19,920 --> 00:01:24,080
who will also be

00:01:21,280 --> 00:01:24,799
combining the certification with others

00:01:24,080 --> 00:01:26,720
in their

00:01:24,799 --> 00:01:29,280
in their cattle to provide the

00:01:26,720 --> 00:01:32,880
opportunity for our folks to receive

00:01:29,280 --> 00:01:35,759
new staff certifications

00:01:32,880 --> 00:01:38,240
in addition we are launching a new

00:01:35,759 --> 00:01:39,119
japanese language yacto project training

00:01:38,240 --> 00:01:43,439
course

00:01:39,119 --> 00:01:43,439
in partnership with linear

00:01:43,600 --> 00:01:47,280
this is particularly valuable for the

00:01:45,920 --> 00:01:51,040
automotive sector

00:01:47,280 --> 00:01:51,520
as reactor is used by agl's unified code

00:01:51,040 --> 00:01:54,560
base

00:01:51,520 --> 00:01:56,960
we call it ucb

00:01:54,560 --> 00:01:59,360
and in addition to yakuto we already

00:01:56,960 --> 00:02:00,000
offer kubernetes and blockchain training

00:01:59,360 --> 00:02:03,119
courses

00:02:00,000 --> 00:02:05,759
in japanese language and we are

00:02:03,119 --> 00:02:07,280
we are also finalizing the japanese

00:02:05,759 --> 00:02:09,280
linux

00:02:07,280 --> 00:02:11,760
training course as well which is going

00:02:09,280 --> 00:02:14,319
to be uh probably this month

00:02:11,760 --> 00:02:15,760
so we hope many of you will take

00:02:14,319 --> 00:02:18,879
advantage of these japanese

00:02:15,760 --> 00:02:18,879
language training courses

00:02:19,360 --> 00:02:25,120
now uh we have an exciting keynote

00:02:23,440 --> 00:02:27,280
lineup today

00:02:25,120 --> 00:02:28,640
uh being beginning with our first

00:02:27,280 --> 00:02:32,000
speaker arbit

00:02:28,640 --> 00:02:35,120
josephura arbit

00:02:32,000 --> 00:02:38,959
is the general manager of networking

00:02:35,120 --> 00:02:41,200
iot and edge here at the linux

00:02:38,959 --> 00:02:44,480
foundation

00:02:41,200 --> 00:02:47,599
he was voted top five movers and shakers

00:02:44,480 --> 00:02:49,200
in the telecom industry and is an

00:02:47,599 --> 00:02:52,239
industry felt leader

00:02:49,200 --> 00:02:57,040
helping to drive major disruption in

00:02:52,239 --> 00:03:00,400
5g edge ai and cloud native

00:02:57,040 --> 00:03:02,840
today he joins us to discuss

00:03:00,400 --> 00:03:05,599
the state of open source networking and

00:03:02,840 --> 00:03:08,879
edge and please welcome

00:03:05,599 --> 00:03:08,879
i'll beat joshua

00:03:14,239 --> 00:03:18,080
thank you and thank you for having me

00:03:16,480 --> 00:03:21,519
here at the open source

00:03:18,080 --> 00:03:21,920
summit virtually i'm going to talk about

00:03:21,519 --> 00:03:25,440
the

00:03:21,920 --> 00:03:28,560
open source networking and edge

00:03:25,440 --> 00:03:30,799
landscape and ecosystem some

00:03:28,560 --> 00:03:33,519
great stuff is going on here and i'm

00:03:30,799 --> 00:03:36,080
sure you're all excited to hear about it

00:03:33,519 --> 00:03:37,519
let's go right in the three things i

00:03:36,080 --> 00:03:40,879
want to talk about today

00:03:37,519 --> 00:03:44,080
in a very short time is that networking

00:03:40,879 --> 00:03:47,599
and edge especially the open networking

00:03:44,080 --> 00:03:50,959
and edge in iot are extremely critical

00:03:47,599 --> 00:03:53,599
in the new normal that we are in across

00:03:50,959 --> 00:03:55,120
a whole set of vertical industries and

00:03:53,599 --> 00:03:57,920
i'm going to give you why

00:03:55,120 --> 00:03:59,519
and show you how the second most

00:03:57,920 --> 00:04:02,879
important thing is

00:03:59,519 --> 00:04:06,000
code is one thing but open compliance

00:04:02,879 --> 00:04:08,400
standards harmonization and mostly

00:04:06,000 --> 00:04:09,920
use case driven approaches are gaining a

00:04:08,400 --> 00:04:12,959
lot of traction

00:04:09,920 --> 00:04:15,599
so it's the deployment focus in

00:04:12,959 --> 00:04:16,400
the area of open networking and then as

00:04:15,599 --> 00:04:18,959
we all know

00:04:16,400 --> 00:04:20,479
edge is the new cloud and we are really

00:04:18,959 --> 00:04:22,479
excited to host some of the most

00:04:20,479 --> 00:04:26,400
fascinating projects here at the linux

00:04:22,479 --> 00:04:26,400
foundation so let's dive right in

00:04:26,639 --> 00:04:32,560
open industry is a new term

00:04:30,080 --> 00:04:33,360
that lots of you may not even be knowing

00:04:32,560 --> 00:04:35,600
about

00:04:33,360 --> 00:04:37,680
i called it open source certification

00:04:35,600 --> 00:04:39,040
linux foundation published a white paper

00:04:37,680 --> 00:04:41,440
which you should download

00:04:39,040 --> 00:04:43,040
which goes through the transformation of

00:04:41,440 --> 00:04:45,280
vertical industries

00:04:43,040 --> 00:04:48,400
whether it's automotive you know which

00:04:45,280 --> 00:04:50,960
is co-located and why we are here today

00:04:48,400 --> 00:04:51,759
motion pictures fintech public health

00:04:50,960 --> 00:04:54,479
energy

00:04:51,759 --> 00:04:55,280
and most importantly telecom is at the

00:04:54,479 --> 00:04:57,680
forefront

00:04:55,280 --> 00:04:58,560
of this open sourcification and it's a

00:04:57,680 --> 00:05:01,280
huge

00:04:58,560 --> 00:05:01,919
deal for most of the people around the

00:05:01,280 --> 00:05:04,639
world

00:05:01,919 --> 00:05:05,520
that industries are going open and in

00:05:04,639 --> 00:05:08,880
that

00:05:05,520 --> 00:05:10,080
openness the big two things that are

00:05:08,880 --> 00:05:12,960
critical

00:05:10,080 --> 00:05:14,479
are the network and edge and it's really

00:05:12,960 --> 00:05:18,000
technology wise 5 and

00:05:14,479 --> 00:05:20,160
5g and edge and it's the new normal

00:05:18,000 --> 00:05:22,000
as you see in the forbes article as

00:05:20,160 --> 00:05:23,039
businesses and government establish the

00:05:22,000 --> 00:05:25,680
new normal

00:05:23,039 --> 00:05:26,240
technologies like 5g and edge computing

00:05:25,680 --> 00:05:28,000
will be

00:05:26,240 --> 00:05:29,440
extremely important to deliver

00:05:28,000 --> 00:05:31,680
automation performance

00:05:29,440 --> 00:05:33,440
and insights for all these industries

00:05:31,680 --> 00:05:34,400
manufacturing healthcare energy

00:05:33,440 --> 00:05:37,199
utilities

00:05:34,400 --> 00:05:37,759
so telecom is the critical plumbing

00:05:37,199 --> 00:05:40,160
layer

00:05:37,759 --> 00:05:42,160
and we are excited to sort of host this

00:05:40,160 --> 00:05:44,400
at the linux foundation

00:05:42,160 --> 00:05:45,280
the one thing that has changed in the

00:05:44,400 --> 00:05:47,520
mindset

00:05:45,280 --> 00:05:49,199
is instead of cost savings that was

00:05:47,520 --> 00:05:52,320
originally the driver

00:05:49,199 --> 00:05:54,240
uh the reason why

00:05:52,320 --> 00:05:55,520
operators and end users are choosing to

00:05:54,240 --> 00:05:58,960
go open source

00:05:55,520 --> 00:06:00,880
is really to create the market adopt the

00:05:58,960 --> 00:06:04,319
acceleration and collaboration

00:06:00,880 --> 00:06:06,880
so this is really a new mindset to

00:06:04,319 --> 00:06:08,319
come and play at the table with open

00:06:06,880 --> 00:06:11,919
source

00:06:08,319 --> 00:06:13,919
let's go into the second part of my

00:06:11,919 --> 00:06:16,800
presentation which is

00:06:13,919 --> 00:06:18,720
why compliance standards and

00:06:16,800 --> 00:06:21,039
harmonization of open source

00:06:18,720 --> 00:06:24,160
and use case driven approach is

00:06:21,039 --> 00:06:24,160
extremely important

00:06:24,560 --> 00:06:28,160
if you remember this i think i was a

00:06:26,160 --> 00:06:30,160
couple of years ago or last year i was

00:06:28,160 --> 00:06:32,560
i was presenting at oss and we had this

00:06:30,160 --> 00:06:34,960
slide up

00:06:32,560 --> 00:06:37,120
and we always focused on projects you

00:06:34,960 --> 00:06:38,800
know we are hosting this project in this

00:06:37,120 --> 00:06:40,720
you know here is one project in

00:06:38,800 --> 00:06:44,160
automotive linux here's one on

00:06:40,720 --> 00:06:47,199
lf networking etc but there is a whole

00:06:44,160 --> 00:06:49,199
cycle below which is creating these

00:06:47,199 --> 00:06:50,880
products from these projects and then

00:06:49,199 --> 00:06:53,120
taking it to market

00:06:50,880 --> 00:06:55,199
and so we are extremely focused beyond

00:06:53,120 --> 00:06:57,440
code on open compliance open

00:06:55,199 --> 00:06:58,080
verification open interoperability open

00:06:57,440 --> 00:07:00,960
testing

00:06:58,080 --> 00:07:02,560
open training and certification and some

00:07:00,960 --> 00:07:06,080
of these um

00:07:02,560 --> 00:07:08,160
technologies are well beyond code uh

00:07:06,080 --> 00:07:09,520
you can take lf networking's unuked

00:07:08,160 --> 00:07:12,000
project or lfh

00:07:09,520 --> 00:07:13,440
uh crano blueprints they focus on

00:07:12,000 --> 00:07:16,720
speeding up

00:07:13,440 --> 00:07:17,199
projects into production and that's why

00:07:16,720 --> 00:07:19,039
this is

00:07:17,199 --> 00:07:21,120
extremely important to focus on the

00:07:19,039 --> 00:07:23,199
whole life cycle of the project

00:07:21,120 --> 00:07:25,680
and you can do it all by yourself you

00:07:23,199 --> 00:07:27,599
have to do it with standards

00:07:25,680 --> 00:07:30,000
and we have harmonized all the

00:07:27,599 --> 00:07:31,360
implementations of these standard bodies

00:07:30,000 --> 00:07:33,599
that we have collaborated

00:07:31,360 --> 00:07:35,120
with so there's no two separate

00:07:33,599 --> 00:07:37,599
implementations it's just

00:07:35,120 --> 00:07:38,560
code reflects the standards standards

00:07:37,599 --> 00:07:41,280
reflect the code

00:07:38,560 --> 00:07:42,960
very excited about that specifically as

00:07:41,280 --> 00:07:45,199
you know we host the oran alliance

00:07:42,960 --> 00:07:46,319
software in the linux foundation and

00:07:45,199 --> 00:07:49,599
that's a big

00:07:46,319 --> 00:07:52,960
upcoming uh initiative that that we are

00:07:49,599 --> 00:07:55,759
collaborating with the oran alliance on

00:07:52,960 --> 00:07:56,720
if you put it all together now you have

00:07:55,759 --> 00:07:59,280
a full

00:07:56,720 --> 00:08:01,599
architecture from enterprise to user

00:07:59,280 --> 00:08:04,319
edge to service provider agent to core

00:08:01,599 --> 00:08:05,840
and a stack that kind of goes from cloud

00:08:04,319 --> 00:08:08,800
into infrastructure

00:08:05,840 --> 00:08:09,199
uh control uh and then management and

00:08:08,800 --> 00:08:11,280
and

00:08:09,199 --> 00:08:12,879
applications with all the applications

00:08:11,280 --> 00:08:15,360
virtual network functions

00:08:12,879 --> 00:08:16,879
cloud native network functions running

00:08:15,360 --> 00:08:20,240
and so i want to be

00:08:16,879 --> 00:08:22,960
very clear that these projects

00:08:20,240 --> 00:08:24,960
are built for use cases and the use

00:08:22,960 --> 00:08:26,800
cases could be network slicing

00:08:24,960 --> 00:08:29,599
could be quality of experience

00:08:26,800 --> 00:08:31,520
optimization it could be

00:08:29,599 --> 00:08:33,440
nomadic broadband it could be on

00:08:31,520 --> 00:08:35,519
boarding it could be multi-tenant

00:08:33,440 --> 00:08:37,279
i won't go into that but extremely

00:08:35,519 --> 00:08:38,800
important to make sure that

00:08:37,279 --> 00:08:40,640
you look at the open source from an

00:08:38,800 --> 00:08:44,399
end-to-end perspective and

00:08:40,640 --> 00:08:46,080
look at it from a use case perspective

00:08:44,399 --> 00:08:48,399
and so with that plumbing layer of

00:08:46,080 --> 00:08:50,240
networking and telecommunication

00:08:48,399 --> 00:08:51,440
what's the next battle the next

00:08:50,240 --> 00:08:53,519
battleground is

00:08:51,440 --> 00:08:54,720
edge and i'm telling i'm saying edge is

00:08:53,519 --> 00:08:58,080
the next cloud

00:08:54,720 --> 00:09:00,800
in fact edge market size is four

00:08:58,080 --> 00:09:02,000
times that of cloud computing in the

00:09:00,800 --> 00:09:04,720
next five years

00:09:02,000 --> 00:09:06,560
so we're really excited to host this and

00:09:04,720 --> 00:09:08,880
if you look at all the analysts

00:09:06,560 --> 00:09:10,560
they're starting to gauge which

00:09:08,880 --> 00:09:12,160
application and use cases are going to

00:09:10,560 --> 00:09:13,600
be very important

00:09:12,160 --> 00:09:15,200
for those of you who are not familiar

00:09:13,600 --> 00:09:18,959
with edge computing

00:09:15,200 --> 00:09:21,120
which i would find very hard to imagine

00:09:18,959 --> 00:09:22,000
it's basically bringing compute and

00:09:21,120 --> 00:09:24,080
storage close

00:09:22,000 --> 00:09:25,760
to the application as possible right so

00:09:24,080 --> 00:09:27,360
that you get latency sensitive

00:09:25,760 --> 00:09:29,920
applications to run

00:09:27,360 --> 00:09:30,800
as if cloud is coming right at your

00:09:29,920 --> 00:09:32,480
application

00:09:30,800 --> 00:09:34,240
so new vertical industries new

00:09:32,480 --> 00:09:35,839
applications new revenue and new use

00:09:34,240 --> 00:09:38,800
cases and

00:09:35,839 --> 00:09:40,560
this is basically a setup which says um

00:09:38,800 --> 00:09:42,399
you know you can have low bandwidth to

00:09:40,560 --> 00:09:44,000
high bandwidth low latency to high

00:09:42,399 --> 00:09:45,519
latency and here is a set of

00:09:44,000 --> 00:09:48,000
applications that are going to plura

00:09:45,519 --> 00:09:50,480
freight at the edge

00:09:48,000 --> 00:09:52,480
the one thing that we have done and i

00:09:50,480 --> 00:09:53,839
would strongly encourage you to download

00:09:52,480 --> 00:09:57,839
this white paper

00:09:53,839 --> 00:09:59,839
is define what edges in the past year

00:09:57,839 --> 00:10:01,600
a lot of organizations and a lot of

00:09:59,839 --> 00:10:03,519
people have kind of used

00:10:01,600 --> 00:10:04,959
terms like thin edge thick edge forage

00:10:03,519 --> 00:10:07,519
near edge they're all

00:10:04,959 --> 00:10:08,640
loose and relative terms this

00:10:07,519 --> 00:10:11,680
terminology

00:10:08,640 --> 00:10:13,279
is done by an open terminology project

00:10:11,680 --> 00:10:13,600
called state of the edge which we host

00:10:13,279 --> 00:10:16,240
at

00:10:13,600 --> 00:10:18,000
lfh and effectively it's two types of

00:10:16,240 --> 00:10:20,240
edges you have a user edge and a service

00:10:18,000 --> 00:10:22,320
provider edge user edges dedicated and

00:10:20,240 --> 00:10:24,640
operated service provider edge is shared

00:10:22,320 --> 00:10:25,600
the last mile separates it it's not a

00:10:24,640 --> 00:10:27,200
hard cut

00:10:25,600 --> 00:10:28,640
but then if you look inside the user

00:10:27,200 --> 00:10:30,640
edge you have extremely constrained

00:10:28,640 --> 00:10:33,120
device smart devices on-prem

00:10:30,640 --> 00:10:34,640
data center edge and then if you look at

00:10:33,120 --> 00:10:35,360
service provider you have the access

00:10:34,640 --> 00:10:38,880
agenda

00:10:35,360 --> 00:10:40,640
and clearly we have not one but

00:10:38,880 --> 00:10:42,640
many different types of edges and we

00:10:40,640 --> 00:10:46,000
have projects to address

00:10:42,640 --> 00:10:49,519
solutions and use cases for these edges

00:10:46,000 --> 00:10:50,640
these solutions come to us as a form of

00:10:49,519 --> 00:10:52,880
a blueprint

00:10:50,640 --> 00:10:54,640
uh blueprint is is kind of an end-to-end

00:10:52,880 --> 00:10:56,720
implementation of a use case

00:10:54,640 --> 00:10:58,560
and i'll give you some examples and you

00:10:56,720 --> 00:11:00,240
know talk about one particular one which

00:10:58,560 --> 00:11:02,079
is relevant to this conference

00:11:00,240 --> 00:11:04,079
but these blueprints could be anything

00:11:02,079 --> 00:11:05,200
from micro mech on the left to cloud

00:11:04,079 --> 00:11:08,320
gaming

00:11:05,200 --> 00:11:10,959
to telco radio edge appliance to

00:11:08,320 --> 00:11:12,480
connected vehicles which i'll talk about

00:11:10,959 --> 00:11:14,720
and so these blueprints

00:11:12,480 --> 00:11:16,640
uh please download them use them these

00:11:14,720 --> 00:11:19,360
are open solutions that

00:11:16,640 --> 00:11:20,720
that accelerate the deployment and then

00:11:19,360 --> 00:11:23,760
if you take these blueprints

00:11:20,720 --> 00:11:26,399
and put it into a use case that

00:11:23,760 --> 00:11:27,200
these projects under lf edge are working

00:11:26,399 --> 00:11:29,120
on

00:11:27,200 --> 00:11:31,120
starting with the left you have you know

00:11:29,120 --> 00:11:32,800
anomaly detection surveillance right

00:11:31,120 --> 00:11:34,480
everything that you need in a home or

00:11:32,800 --> 00:11:36,800
the equivalent in an enterprise

00:11:34,480 --> 00:11:37,600
on factory with edge virtualization

00:11:36,800 --> 00:11:39,760
engine

00:11:37,600 --> 00:11:42,000
or if you take fledge as a project it's

00:11:39,760 --> 00:11:44,399
all in the industrial iot predictive

00:11:42,000 --> 00:11:45,519
maintenance turbines transformers pumps

00:11:44,399 --> 00:11:48,160
etc

00:11:45,519 --> 00:11:49,680
uh or a crano where you have all these

00:11:48,160 --> 00:11:51,360
connected vehicles and

00:11:49,680 --> 00:11:53,440
augmented reality classrooms and

00:11:51,360 --> 00:11:56,000
blueprints uh for

00:11:53,440 --> 00:11:57,279
for uh for the telco world as well as

00:11:56,000 --> 00:12:00,800
edgex foundry

00:11:57,279 --> 00:12:01,920
which is one of the more stage three

00:12:00,800 --> 00:12:03,920
project

00:12:01,920 --> 00:12:06,560
which goes into building automation

00:12:03,920 --> 00:12:08,720
retail industrial process control etc

00:12:06,560 --> 00:12:09,760
so we're very excited that use case

00:12:08,720 --> 00:12:12,000
driven

00:12:09,760 --> 00:12:14,079
approaches are proliferating and now you

00:12:12,000 --> 00:12:15,680
look at one of the deeper examples which

00:12:14,079 --> 00:12:19,360
is relevant because of the

00:12:15,680 --> 00:12:21,519
uh you know connected

00:12:19,360 --> 00:12:23,040
vehicle blueprint which is part of this

00:12:21,519 --> 00:12:24,800
conference

00:12:23,040 --> 00:12:26,320
you have the architecture on the light

00:12:24,800 --> 00:12:28,560
on the left but

00:12:26,320 --> 00:12:30,480
this blueprint takes advantage of the

00:12:28,560 --> 00:12:33,279
edge compute to improve

00:12:30,480 --> 00:12:34,399
the location accuracies navigate smarter

00:12:33,279 --> 00:12:36,560
safety improvement

00:12:34,399 --> 00:12:37,519
reduce violations huge amount of

00:12:36,560 --> 00:12:39,440
traction on this

00:12:37,519 --> 00:12:41,040
i won't go into this but you know think

00:12:39,440 --> 00:12:44,800
about it with

00:12:41,040 --> 00:12:48,480
a cloud close by your vehicle

00:12:44,800 --> 00:12:50,240
can go miles literally without missing a

00:12:48,480 --> 00:12:52,800
heartbeat

00:12:50,240 --> 00:12:53,760
so to wrap it up i want to emphasize

00:12:52,800 --> 00:12:56,320
that network

00:12:53,760 --> 00:12:57,279
is even more important in the new world

00:12:56,320 --> 00:12:59,120
end users

00:12:57,279 --> 00:13:01,360
have a vast array of options that they

00:12:59,120 --> 00:13:04,079
can take advantage of this

00:13:01,360 --> 00:13:05,440
um and open source collaboration goes

00:13:04,079 --> 00:13:07,680
well beyond software

00:13:05,440 --> 00:13:09,200
to build what i just talked about and

00:13:07,680 --> 00:13:11,920
and to to look at

00:13:09,200 --> 00:13:13,920
all the things that come our way and

00:13:11,920 --> 00:13:15,200
it's really faster security and faster

00:13:13,920 --> 00:13:18,079
time to deployment

00:13:15,200 --> 00:13:19,760
and finally edge is the new cloud again

00:13:18,079 --> 00:13:21,519
four times the size

00:13:19,760 --> 00:13:22,959
don't miss out especially because

00:13:21,519 --> 00:13:25,839
technologies like 5g

00:13:22,959 --> 00:13:27,200
cloud ai iot they all come together and

00:13:25,839 --> 00:13:30,240
applications like

00:13:27,200 --> 00:13:30,959
vehicles and connected cars are the next

00:13:30,240 --> 00:13:33,120
big thing

00:13:30,959 --> 00:13:34,720
along with industrial manufacturing and

00:13:33,120 --> 00:13:37,360
retail

00:13:34,720 --> 00:13:38,079
so with that i would like to wrap wrap

00:13:37,360 --> 00:13:40,000
up and

00:13:38,079 --> 00:13:41,519
thank you very much for the opportunity

00:13:40,000 --> 00:13:43,920
to

00:13:41,519 --> 00:13:46,320
speak here at the open source summit

00:13:43,920 --> 00:13:46,320
japan

00:13:46,639 --> 00:13:53,120
thanks arbit our next speaker

00:13:50,240 --> 00:13:54,079
is masafumi ota senior business

00:13:53,120 --> 00:13:57,920
strategist

00:13:54,079 --> 00:14:01,199
for suse japan ultrasound

00:13:57,920 --> 00:14:04,240
ultrasound career has been focused

00:14:01,199 --> 00:14:07,760
on variety of technology from solaris

00:14:04,240 --> 00:14:11,279
to openstack to edge automotive systems

00:14:07,760 --> 00:14:13,600
and machine learning he has been an

00:14:11,279 --> 00:14:16,480
active contributor to the open source

00:14:13,600 --> 00:14:18,959
community for many years and

00:14:16,480 --> 00:14:20,880
was the founder of the japanese

00:14:18,959 --> 00:14:24,160
raspberry pi user group

00:14:20,880 --> 00:14:27,279
back in 2012

00:14:24,160 --> 00:14:28,160
today he will discuss how suze is

00:14:27,279 --> 00:14:31,279
powering the

00:14:28,160 --> 00:14:34,560
automotive digital future

00:14:31,279 --> 00:14:36,430
with that please please welcome masasumi

00:14:34,560 --> 00:14:39,070
ota

00:14:36,430 --> 00:14:42,779
[Applause]

00:14:39,070 --> 00:14:42,779
[Music]

00:14:42,800 --> 00:14:50,720
thanks for coming on my session and

00:14:46,560 --> 00:14:54,079
i will present it on the about others

00:14:50,720 --> 00:14:57,519
and how how and the susie

00:14:54,079 --> 00:15:01,040
and the using on the

00:14:57,519 --> 00:15:02,399
the automotive and the connecticut

00:15:01,040 --> 00:15:07,040
markets

00:15:02,399 --> 00:15:10,399
and let me introduce uh let me introduce

00:15:07,040 --> 00:15:11,120
japan and they are now and welcome to

00:15:10,399 --> 00:15:13,839
see her son

00:15:11,120 --> 00:15:14,399
and president of susie to enjoy the our

00:15:13,839 --> 00:15:17,920
business

00:15:14,399 --> 00:15:21,360
in in japan and so the

00:15:17,920 --> 00:15:24,480
vision is simple simply modernized

00:15:21,360 --> 00:15:27,600
accelerated we have a three vision of

00:15:24,480 --> 00:15:31,680
our business and

00:15:27,600 --> 00:15:34,399
we have acquired on the lunches

00:15:31,680 --> 00:15:36,079
in this year and start working together

00:15:34,399 --> 00:15:38,720
in this month

00:15:36,079 --> 00:15:39,680
and you you don't know the earnings on a

00:15:38,720 --> 00:15:43,040
um

00:15:39,680 --> 00:15:44,720
12 15 on the automotive using a rate on

00:15:43,040 --> 00:15:46,720
the thursday

00:15:44,720 --> 00:15:49,519
so let's talking about the under suse

00:15:46,720 --> 00:15:52,720
linux on the automotive market

00:15:49,519 --> 00:15:55,040
and fly and relax the vehicles

00:15:52,720 --> 00:15:57,199
so you know in the connected car now in

00:15:55,040 --> 00:16:01,199
the like smart devices

00:15:57,199 --> 00:16:03,199
it's like on the smartphone on rails

00:16:01,199 --> 00:16:06,480
and so string soldering action

00:16:03,199 --> 00:16:10,639
automotive and in automotive is under

00:16:06,480 --> 00:16:13,839
first and the secures and the

00:16:10,639 --> 00:16:15,519
other two deployed and the first and

00:16:13,839 --> 00:16:18,320
first prototyping

00:16:15,519 --> 00:16:20,720
using and are using holy connected car

00:16:18,320 --> 00:16:23,440
so linux is hyped and the electrician is

00:16:20,720 --> 00:16:24,399
very useful on the constructory and

00:16:23,440 --> 00:16:28,240
improving

00:16:24,399 --> 00:16:30,800
in the in automotives

00:16:28,240 --> 00:16:31,680
so and now and the and we have

00:16:30,800 --> 00:16:34,880
collaborated

00:16:31,680 --> 00:16:38,320
in a airport key electrobit and

00:16:34,880 --> 00:16:43,120
and distribution

00:16:38,320 --> 00:16:46,320
for the ultimate automotive and the

00:16:43,120 --> 00:16:50,880
and this ex distribution so and

00:16:46,320 --> 00:16:50,880
here and we are talking about this

00:16:58,240 --> 00:17:04,079
um based on the automotive linux is now

00:17:02,560 --> 00:17:07,919
on distributed by

00:17:04,079 --> 00:17:07,919
and extra bit and

00:17:08,079 --> 00:17:11,600
it is under solid on the automotive

00:17:11,120 --> 00:17:14,880
grade

00:17:11,600 --> 00:17:18,559
platform based on suse and

00:17:14,880 --> 00:17:19,199
and so it is it is continuing so

00:17:18,559 --> 00:17:22,400
automotive

00:17:19,199 --> 00:17:23,199
automotive use and reliability and

00:17:22,400 --> 00:17:26,160
stability

00:17:23,199 --> 00:17:26,799
in the maintenance and partnership

00:17:26,160 --> 00:17:30,320
management

00:17:26,799 --> 00:17:30,960
safety secure the output and so a secure

00:17:30,320 --> 00:17:34,559
reacts

00:17:30,960 --> 00:17:37,760
on the automotives and the

00:17:34,559 --> 00:17:43,039
solutions and it is secure

00:17:37,760 --> 00:17:46,080
and they hold on the whole automotives

00:17:43,039 --> 00:17:46,640
so they continue so the automotives and

00:17:46,080 --> 00:17:50,160
the

00:17:46,640 --> 00:17:50,480
zero on them and several and so useful

00:17:50,160 --> 00:17:53,840
they

00:17:50,480 --> 00:17:56,080
are and continuous as a suse micro micro

00:17:53,840 --> 00:17:59,120
os

00:17:56,080 --> 00:18:00,160
and so light weight and the soy and you

00:17:59,120 --> 00:18:04,000
know and the

00:18:00,160 --> 00:18:07,600
k3s and the kubernetes and by lunches

00:18:04,000 --> 00:18:11,039
is a useful whole and a

00:18:07,600 --> 00:18:11,039
automotive automotive

00:18:11,200 --> 00:18:15,840
and we and we know

00:18:14,320 --> 00:18:17,440
we still need some attraction

00:18:15,840 --> 00:18:20,400
technological automotives

00:18:17,440 --> 00:18:21,120
so real-time corner is very important on

00:18:20,400 --> 00:18:24,720
the

00:18:21,120 --> 00:18:28,480
elements and automotive automotive

00:18:24,720 --> 00:18:30,720
automotive markets so and and lifecycle

00:18:28,480 --> 00:18:34,799
advantages for automotives

00:18:30,720 --> 00:18:39,360
and in survey so we have under almost

00:18:34,799 --> 00:18:42,400
30 years on the and

00:18:39,360 --> 00:18:45,600
and main support in

00:18:42,400 --> 00:18:48,880
in a in one distribute

00:18:45,600 --> 00:18:48,880
in on belgians

00:18:49,200 --> 00:18:58,000
so automotive inside is suzayans

00:18:52,799 --> 00:19:01,280
and and this is a visual approach in

00:18:58,000 --> 00:19:05,240
the in the car and you can see

00:19:01,280 --> 00:19:08,240
on the central compute cluster in the

00:19:05,240 --> 00:19:08,240
enthusiast

00:19:09,360 --> 00:19:14,080
it is based on the container of the and

00:19:12,400 --> 00:19:17,840
the virtual machine

00:19:14,080 --> 00:19:20,880
and to deploy and sorry on the

00:19:17,840 --> 00:19:24,880
to all on the automotives to and

00:19:20,880 --> 00:19:28,240
improved and this and college card

00:19:24,880 --> 00:19:30,880
and and it is very easy to use

00:19:28,240 --> 00:19:32,080
easy to handle and the work and the

00:19:30,880 --> 00:19:36,080
container is

00:19:32,080 --> 00:19:39,440
very and very easy to handle to the po

00:19:36,080 --> 00:19:42,720
and there's a move and strategies

00:19:39,440 --> 00:19:45,280
and also but also be

00:19:42,720 --> 00:19:45,840
we and the bmw is also the energy and

00:19:45,280 --> 00:19:49,200
easy to

00:19:45,840 --> 00:19:52,880
under move to others and beating his

00:19:49,200 --> 00:19:57,440
storages and using the containers

00:19:52,880 --> 00:20:00,160
on the launches and the kubernetes

00:19:57,440 --> 00:20:01,440
and so now and you know isn't there on

00:20:00,160 --> 00:20:05,039
the

00:20:01,440 --> 00:20:08,480
and so ecu's and soy and

00:20:05,039 --> 00:20:11,840
with the sensors and works within this

00:20:08,480 --> 00:20:16,000
linux so we can unders sit

00:20:11,840 --> 00:20:19,600
only on the car

00:20:16,000 --> 00:20:20,960
curves also on a and to checks on the

00:20:19,600 --> 00:20:24,480
status

00:20:20,960 --> 00:20:27,840
and in your automotives

00:20:24,480 --> 00:20:28,559
and the conclusions so today and i'm i'm

00:20:27,840 --> 00:20:31,840
talking

00:20:28,559 --> 00:20:35,520
about on the survey and the

00:20:31,840 --> 00:20:38,480
12th 12th and 15th

00:20:35,520 --> 00:20:39,440
using hot automotives and the eclipse

00:20:38,480 --> 00:20:41,440
transfusion

00:20:39,440 --> 00:20:42,720
delivers the next exhibition for the

00:20:41,440 --> 00:20:46,000
automotives

00:20:42,720 --> 00:20:46,880
so the long-term and support in over 30

00:20:46,000 --> 00:20:50,080
years

00:20:46,880 --> 00:20:53,520
and k3s and the supporting you

00:20:50,080 --> 00:20:57,600
on the automotive business so

00:20:53,520 --> 00:20:57,600
thank you very much on the get in touch

00:20:58,080 --> 00:21:05,120
thank you otasan our next

00:21:01,360 --> 00:21:10,400
speaker is julie goodman founder

00:21:05,120 --> 00:21:14,000
and executive director of lf energy

00:21:10,400 --> 00:21:18,240
lf energy is energy energy's ambition

00:21:14,000 --> 00:21:21,039
is to accelerate the energy transition

00:21:18,240 --> 00:21:23,120
and the decarbonization of the world

00:21:21,039 --> 00:21:25,760
economies

00:21:23,120 --> 00:21:27,039
surely has nearly three decades of

00:21:25,760 --> 00:21:30,080
experience

00:21:27,039 --> 00:21:31,720
and the startup and ongoing support of

00:21:30,080 --> 00:21:33,520
government governance and the

00:21:31,720 --> 00:21:36,960
multi-stakeholder engagement

00:21:33,520 --> 00:21:40,080
bodies that have been

00:21:36,960 --> 00:21:43,120
converted to enable decision making

00:21:40,080 --> 00:21:46,159
and provide steering capacity

00:21:43,120 --> 00:21:48,640
for high visibility and high risk

00:21:46,159 --> 00:21:51,919
initiatives

00:21:48,640 --> 00:21:55,679
today she will share the latest

00:21:51,919 --> 00:21:57,520
um lf energy and how you can get

00:21:55,679 --> 00:22:02,159
involved

00:21:57,520 --> 00:22:02,159
with that please welcome julie goodman

00:22:07,039 --> 00:22:13,520
hello and good morning it's an

00:22:10,400 --> 00:22:14,720
honor to share this time with you i want

00:22:13,520 --> 00:22:18,080
to speak

00:22:14,720 --> 00:22:20,559
to you both personally and technically

00:22:18,080 --> 00:22:21,200
about the most important and existential

00:22:20,559 --> 00:22:24,240
challenge

00:22:21,200 --> 00:22:26,320
that is facing humanity

00:22:24,240 --> 00:22:27,440
every single person in this audience has

00:22:26,320 --> 00:22:30,240
a part to play

00:22:27,440 --> 00:22:33,039
in enabling the decarbonization of our

00:22:30,240 --> 00:22:33,039
economies

00:22:33,280 --> 00:22:37,679
for the next 20 years i propose that

00:22:36,559 --> 00:22:40,400
every decision you

00:22:37,679 --> 00:22:42,159
make professionally and personally is

00:22:40,400 --> 00:22:46,400
either going to bring us closer

00:22:42,159 --> 00:22:46,400
or farther away from climate collapse

00:22:47,520 --> 00:22:50,799
but i want to start with something

00:22:50,000 --> 00:22:53,520
that's

00:22:50,799 --> 00:22:56,559
really my delight to announce from the

00:22:53,520 --> 00:22:58,799
main stage at open source summit japan

00:22:56,559 --> 00:22:59,760
and that is the sony computer science

00:22:58,799 --> 00:23:02,559
laboratories

00:22:59,760 --> 00:23:03,120
has joined the growing and dynamic lf

00:23:02,559 --> 00:23:06,240
energy

00:23:03,120 --> 00:23:08,400
community with their membership comes a

00:23:06,240 --> 00:23:09,360
contribution to the world of a fully

00:23:08,400 --> 00:23:12,240
functional

00:23:09,360 --> 00:23:14,640
tested in the field open source dc

00:23:12,240 --> 00:23:18,080
microgrid

00:23:14,640 --> 00:23:18,880
microgrids network energy think of them

00:23:18,080 --> 00:23:21,440
a bit like

00:23:18,880 --> 00:23:24,320
the fractal nodes that compose the

00:23:21,440 --> 00:23:26,559
energy networks of the future

00:23:24,320 --> 00:23:28,159
microgrids while significantly more

00:23:26,559 --> 00:23:31,039
complex

00:23:28,159 --> 00:23:33,760
are a bit like to energy what the apache

00:23:31,039 --> 00:23:36,080
web server was for the internet

00:23:33,760 --> 00:23:36,880
like the apache web server that enabled

00:23:36,080 --> 00:23:39,600
networked

00:23:36,880 --> 00:23:42,480
scaling it is my hope that this

00:23:39,600 --> 00:23:45,039
contribution will launch a revolution

00:23:42,480 --> 00:23:46,480
it is a call to action to hardware

00:23:45,039 --> 00:23:48,880
manufacturers

00:23:46,480 --> 00:23:50,000
that we must up our game from a few

00:23:48,880 --> 00:23:53,039
thousand microgrids

00:23:50,000 --> 00:23:54,159
a year to tens of thousands of

00:23:53,039 --> 00:23:57,600
microgrids

00:23:54,159 --> 00:23:59,919
a month we must shift the economics of

00:23:57,600 --> 00:24:03,440
microgrids from being precious

00:23:59,919 --> 00:24:06,559
to being ubiquitous and for this reason

00:24:03,440 --> 00:24:09,600
japan is central and critical to the

00:24:06,559 --> 00:24:12,240
energy revolution

00:24:09,600 --> 00:24:14,000
we've not had time to name the software

00:24:12,240 --> 00:24:16,080
nor design the logo

00:24:14,000 --> 00:24:18,240
but in the world of good enough we begin

00:24:16,080 --> 00:24:21,520
the journey today with this announcement

00:24:18,240 --> 00:24:25,600
so please join us in just about an hour

00:24:21,520 --> 00:24:26,720
10 45 a.m for the lf energy mini summit

00:24:25,600 --> 00:24:30,880
where dr

00:24:26,720 --> 00:24:33,120
uh hiroaki katano president and ceo

00:24:30,880 --> 00:24:34,320
of sony consume computer science

00:24:33,120 --> 00:24:36,240
laboratories

00:24:34,320 --> 00:24:37,520
will deliver a presentation on the

00:24:36,240 --> 00:24:40,080
microgrid project

00:24:37,520 --> 00:24:40,799
and take questions at the summit we will

00:24:40,080 --> 00:24:43,440
also show

00:24:40,799 --> 00:24:44,480
videos from five other lf energy

00:24:43,440 --> 00:24:47,200
projects

00:24:44,480 --> 00:24:49,919
the event is free to attend please check

00:24:47,200 --> 00:24:49,919
your schedules

00:24:50,480 --> 00:24:55,919
okay so 2020 has been quite a year

00:24:53,840 --> 00:24:57,279
a year that has brought many of us to

00:24:55,919 --> 00:24:59,679
our knees

00:24:57,279 --> 00:25:01,200
as challenging though as it has been i

00:24:59,679 --> 00:25:05,760
believe this is the year

00:25:01,200 --> 00:25:05,760
that we really began our reimagining

00:25:05,919 --> 00:25:10,400
this is the year the doors began to

00:25:07,840 --> 00:25:12,960
close on a chapter of human experience

00:25:10,400 --> 00:25:16,799
and the new ones began to open filled

00:25:12,960 --> 00:25:16,799
with immense possibility and hope

00:25:17,039 --> 00:25:20,559
nearly 150 years ago with the advent of

00:25:19,679 --> 00:25:23,200
fossil fuel

00:25:20,559 --> 00:25:25,600
and the internal combustion engine we

00:25:23,200 --> 00:25:26,720
entered a period of enormous growth that

00:25:25,600 --> 00:25:29,039
brings us

00:25:26,720 --> 00:25:30,000
to today when the externalities and

00:25:29,039 --> 00:25:33,760
pollutions

00:25:30,000 --> 00:25:36,799
from fossil fuel threatens life on earth

00:25:33,760 --> 00:25:40,080
a pandemic is one face of this crushing

00:25:36,799 --> 00:25:42,559
reality so 2020 is the year we

00:25:40,080 --> 00:25:44,480
collectively agreed it is time for us to

00:25:42,559 --> 00:25:46,480
find a way forward

00:25:44,480 --> 00:25:49,600
now we are nearing the end of that year

00:25:46,480 --> 00:25:52,720
so as we turn towards 2021

00:25:49,600 --> 00:25:56,240
i ask us all to use our grief our

00:25:52,720 --> 00:25:59,679
fear our hope and our love to help

00:25:56,240 --> 00:26:00,559
propel us to make a credible leap from

00:25:59,679 --> 00:26:04,480
the comfort

00:26:00,559 --> 00:26:07,600
of our past into a future that awaits us

00:26:04,480 --> 00:26:08,400
this is for future generations while

00:26:07,600 --> 00:26:11,200
those of us

00:26:08,400 --> 00:26:12,880
are technologists and business people

00:26:11,200 --> 00:26:15,919
first we are neighbors

00:26:12,880 --> 00:26:15,919
sharing a planet

00:26:16,000 --> 00:26:19,600
so in a personal sense to share with you

00:26:18,640 --> 00:26:22,559
where i'm coming

00:26:19,600 --> 00:26:24,000
from this is the place that i love that

00:26:22,559 --> 00:26:26,000
i call home

00:26:24,000 --> 00:26:27,520
it is the view from my neighbor's house

00:26:26,000 --> 00:26:29,760
looking north

00:26:27,520 --> 00:26:31,360
the smoke that you see is from two

00:26:29,760 --> 00:26:34,799
different fires

00:26:31,360 --> 00:26:38,000
one less than five miles away another

00:26:34,799 --> 00:26:40,960
about a dozen miles we were surrounded

00:26:38,000 --> 00:26:41,520
by fire for three months we lived in

00:26:40,960 --> 00:26:44,640
fear

00:26:41,520 --> 00:26:48,159
with bags packed cars pointed out

00:26:44,640 --> 00:26:51,360
prepared to leave everything

00:26:48,159 --> 00:26:53,360
along with kovid many of us have also

00:26:51,360 --> 00:26:55,360
awakened to the realization that as

00:26:53,360 --> 00:26:57,520
terry tempest williams wrote

00:26:55,360 --> 00:26:59,200
we have been living a myth we have

00:26:57,520 --> 00:27:01,520
constructed a dream

00:26:59,200 --> 00:27:02,799
we have cajoled and seduced ourselves

00:27:01,520 --> 00:27:06,000
into believing

00:27:02,799 --> 00:27:08,400
we are at the center of all things

00:27:06,000 --> 00:27:09,919
this is a lethal lie that will be seen

00:27:08,400 --> 00:27:13,200
by future generations

00:27:09,919 --> 00:27:15,039
as a grave a grave moral sin

00:27:13,200 --> 00:27:17,600
committed and buried in the name of

00:27:15,039 --> 00:27:20,240
ignorance and arrogance

00:27:17,600 --> 00:27:21,279
so this is the challenge then do we

00:27:20,240 --> 00:27:24,159
continue to use

00:27:21,279 --> 00:27:26,080
business cases that solely privilege

00:27:24,159 --> 00:27:28,960
profit over taking leadership for the

00:27:26,080 --> 00:27:31,440
direction of our planet

00:27:28,960 --> 00:27:32,799
i would say that actually it's not an

00:27:31,440 --> 00:27:35,600
either or

00:27:32,799 --> 00:27:36,080
we have to be able to do both we have to

00:27:35,600 --> 00:27:38,640
make

00:27:36,080 --> 00:27:40,480
the transition to decarbonization

00:27:38,640 --> 00:27:42,960
economically viable

00:27:40,480 --> 00:27:43,840
and we have to take direction for our

00:27:42,960 --> 00:27:46,640
planet

00:27:43,840 --> 00:27:49,120
and quickly lf energy and the linux

00:27:46,640 --> 00:27:52,080
foundation are a bet on the future

00:27:49,120 --> 00:27:53,440
a future that requires collaboration

00:27:52,080 --> 00:27:55,279
cooperation

00:27:53,440 --> 00:27:57,840
and the ability to abstract the

00:27:55,279 --> 00:28:00,840
complexity of digital communication

00:27:57,840 --> 00:28:04,799
to orchestrate the supply and demand of

00:28:00,840 --> 00:28:04,799
energy through open source

00:28:06,720 --> 00:28:10,720
we cannot act like pandemics and extreme

00:28:09,120 --> 00:28:13,679
climate events are normal

00:28:10,720 --> 00:28:15,039
and continue with businesses use usual

00:28:13,679 --> 00:28:18,159
we have to name

00:28:15,039 --> 00:28:20,000
the time that we find ourselves in and i

00:28:18,159 --> 00:28:23,120
trust that in doing so

00:28:20,000 --> 00:28:25,200
we will find our way through lf energy

00:28:23,120 --> 00:28:27,840
gives me hope and i want to share that

00:28:25,200 --> 00:28:27,840
hope with you

00:28:28,720 --> 00:28:33,039
so the dna of lf energy is the lennox

00:28:31,840 --> 00:28:36,799
foundation

00:28:33,039 --> 00:28:40,320
it's all of you i i often carry this

00:28:36,799 --> 00:28:43,919
seed around it is the seed to

00:28:40,320 --> 00:28:45,520
uh one of the most largest and fastest

00:28:43,919 --> 00:28:48,880
growing sequoia trees

00:28:45,520 --> 00:28:49,600
on the planet and when you look at a

00:28:48,880 --> 00:28:52,640
seed you

00:28:49,600 --> 00:28:54,080
don't really know that it actually is

00:28:52,640 --> 00:28:56,480
going to become

00:28:54,080 --> 00:28:59,919
this great thing well that's what it is

00:28:56,480 --> 00:29:04,000
with lf energy we have

00:28:59,919 --> 00:29:06,880
the dna of the linux foundation

00:29:04,000 --> 00:29:08,640
it's the kernel it's lf networking it's

00:29:06,880 --> 00:29:12,320
automotive grade linux it's

00:29:08,640 --> 00:29:15,600
lfai it's hyperledger nodejs

00:29:12,320 --> 00:29:17,520
cncf risc-5 all of you

00:29:15,600 --> 00:29:19,600
have cleared a path you have left

00:29:17,520 --> 00:29:22,240
breadcrumbs for us to follow

00:29:19,600 --> 00:29:23,520
as we must rapidly decarbonize our

00:29:22,240 --> 00:29:26,000
economies

00:29:23,520 --> 00:29:26,559
while we are a young foundation and an

00:29:26,000 --> 00:29:29,600
old

00:29:26,559 --> 00:29:32,240
industry we carry a mighty history

00:29:29,600 --> 00:29:33,200
the grid of the future is composed of

00:29:32,240 --> 00:29:36,240
all of you

00:29:33,200 --> 00:29:37,840
every single one of you but i'll be

00:29:36,240 --> 00:29:39,679
honest

00:29:37,840 --> 00:29:41,840
the energy sector is a modern day

00:29:39,679 --> 00:29:44,159
version of a log jam

00:29:41,840 --> 00:29:45,919
we actually don't have many log jams on

00:29:44,159 --> 00:29:46,960
the planet anymore because we've

00:29:45,919 --> 00:29:50,000
harvested

00:29:46,960 --> 00:29:51,919
so much of our old timber

00:29:50,000 --> 00:29:55,039
but what is what are the properties of

00:29:51,919 --> 00:29:58,880
the log jam stuck slow

00:29:55,039 --> 00:30:01,919
barely moving yet we must learn to move

00:29:58,880 --> 00:30:03,760
at the speed of technology so

00:30:01,919 --> 00:30:06,960
the thing about a log jam is that you

00:30:03,760 --> 00:30:09,440
cannot delicately pick it apart

00:30:06,960 --> 00:30:10,880
the way that you clear a log jam is with

00:30:09,440 --> 00:30:14,720
dynamite

00:30:10,880 --> 00:30:17,520
and while that may seem scary or

00:30:14,720 --> 00:30:19,039
or just kind of like how do i even

00:30:17,520 --> 00:30:21,760
understand that

00:30:19,039 --> 00:30:24,159
why i am talking about dynamite is that

00:30:21,760 --> 00:30:26,159
i am speaking to you all today

00:30:24,159 --> 00:30:27,360
as technology and hyper scaling

00:30:26,159 --> 00:30:30,399
businesses

00:30:27,360 --> 00:30:33,279
you are the dynamite you are the thing

00:30:30,399 --> 00:30:35,279
that is going to break this log jim many

00:30:33,279 --> 00:30:38,480
of you have created net zero

00:30:35,279 --> 00:30:39,679
or carbon negative business goals and i

00:30:38,480 --> 00:30:42,320
thank you

00:30:39,679 --> 00:30:44,640
i predict that the more you internalize

00:30:42,320 --> 00:30:47,120
the goal of decarbonization

00:30:44,640 --> 00:30:50,159
the more you will become the de facto

00:30:47,120 --> 00:30:52,799
energy companies of the future

00:30:50,159 --> 00:30:55,279
so if utilities don't actually take it

00:30:52,799 --> 00:30:58,480
upon themselves to blow themselves up

00:30:55,279 --> 00:30:59,360
they will be blown up by the efforts of

00:30:58,480 --> 00:31:01,360
you

00:30:59,360 --> 00:31:03,440
and i invite you to do that not because

00:31:01,360 --> 00:31:05,679
i'm wanting to destroy anything

00:31:03,440 --> 00:31:06,799
but because i want to get the river

00:31:05,679 --> 00:31:09,360
moving

00:31:06,799 --> 00:31:10,480
a distributed energy feature is not just

00:31:09,360 --> 00:31:12,799
about pvs

00:31:10,480 --> 00:31:14,880
photovoltaics and batteries but it's

00:31:12,799 --> 00:31:17,519
about internalizing energy

00:31:14,880 --> 00:31:20,000
the production the use the demand and

00:31:17,519 --> 00:31:22,880
making energy central to the formula

00:31:20,000 --> 00:31:24,240
for all your products and services i

00:31:22,880 --> 00:31:27,039
want to talk with you

00:31:24,240 --> 00:31:28,399
not just about what lf energy is but

00:31:27,039 --> 00:31:31,440
what we can become

00:31:28,399 --> 00:31:34,320
if we all work together if you

00:31:31,440 --> 00:31:36,720
join us and that lf energy and the linux

00:31:34,320 --> 00:31:39,320
foundation becomes ground zero

00:31:36,720 --> 00:31:40,559
for the digital foundations for

00:31:39,320 --> 00:31:43,600
decarbonizing

00:31:40,559 --> 00:31:46,159
the planet and our economies

00:31:43,600 --> 00:31:49,600
energy moving at the speed of technology

00:31:46,159 --> 00:31:49,600
is a call to action

00:31:49,919 --> 00:31:54,240
at lf energy we are reimagining power

00:31:52,559 --> 00:31:56,240
and energy at all levels

00:31:54,240 --> 00:31:58,159
we are building the digital foundations

00:31:56,240 --> 00:32:00,240
for the grid of the future

00:31:58,159 --> 00:32:02,320
we were founded by transmission and

00:32:00,240 --> 00:32:05,440
distribution system operators

00:32:02,320 --> 00:32:07,840
in europe together we are using open

00:32:05,440 --> 00:32:10,120
source and digitalization to accelerate

00:32:07,840 --> 00:32:12,720
the energy transition

00:32:10,120 --> 00:32:14,000
decarbonization is our goal to restore

00:32:12,720 --> 00:32:17,519
climate balance and mitigate

00:32:14,000 --> 00:32:19,039
the worst of climate change in many ways

00:32:17,519 --> 00:32:21,600
on a great adventure

00:32:19,039 --> 00:32:23,039
in which these immense challenges are

00:32:21,600 --> 00:32:26,399
the mountains we will scale

00:32:23,039 --> 00:32:28,640
to create a sustainable future

00:32:26,399 --> 00:32:30,240
to give you a sense of the potential for

00:32:28,640 --> 00:32:34,080
innovation

00:32:30,240 --> 00:32:36,360
we have not even begun as a species as a

00:32:34,080 --> 00:32:38,080
as a humanity to tap into the

00:32:36,360 --> 00:32:42,960
possibilities

00:32:38,080 --> 00:32:45,760
every hour the sun provides enough

00:32:42,960 --> 00:32:46,720
power for us to electrify the planet for

00:32:45,760 --> 00:32:48,960
a year

00:32:46,720 --> 00:32:50,559
think about that there is so much

00:32:48,960 --> 00:32:52,960
opportunity to design

00:32:50,559 --> 00:32:54,480
a future aligned with the natural laws

00:32:52,960 --> 00:32:57,440
of the universe

00:32:54,480 --> 00:32:59,360
so much will change in the next 20 years

00:32:57,440 --> 00:33:03,519
and it is your imagination

00:32:59,360 --> 00:33:03,519
and creativity that will unleash it

00:33:04,240 --> 00:33:10,000
yet today to power our devices

00:33:07,440 --> 00:33:11,760
warm our homes cool our foods use our

00:33:10,000 --> 00:33:14,480
consumer electronics

00:33:11,760 --> 00:33:17,440
and drive our cars we are spewing into

00:33:14,480 --> 00:33:19,200
the environment global warming pollution

00:33:17,440 --> 00:33:21,440
so that is the grand challenge that we

00:33:19,200 --> 00:33:22,559
must address in the next five to ten

00:33:21,440 --> 00:33:24,559
years

00:33:22,559 --> 00:33:26,000
we don't have longer than that if we

00:33:24,559 --> 00:33:29,279
don't really

00:33:26,000 --> 00:33:31,600
make a huge leap forward and you are

00:33:29,279 --> 00:33:32,960
quite literally the people who must make

00:33:31,600 --> 00:33:35,519
these changes

00:33:32,960 --> 00:33:36,240
it is your products your services your

00:33:35,519 --> 00:33:38,640
vision

00:33:36,240 --> 00:33:42,159
that is going to rapidly decarbonize

00:33:38,640 --> 00:33:42,159
power and transportation

00:33:42,640 --> 00:33:46,640
so some of you may be asking but why put

00:33:44,799 --> 00:33:47,840
an energy ecosystem in the linux

00:33:46,640 --> 00:33:51,039
foundation

00:33:47,840 --> 00:33:52,799
so my background is not as a power

00:33:51,039 --> 00:33:55,200
systems engineer

00:33:52,799 --> 00:33:55,840
but in what was enterprise information

00:33:55,200 --> 00:33:58,720
management

00:33:55,840 --> 00:34:00,399
and governance i went for a phd and what

00:33:58,720 --> 00:34:03,360
i studied was innovation

00:34:00,399 --> 00:34:04,960
focusing on adoption and diffusion so

00:34:03,360 --> 00:34:08,399
many of you have probably

00:34:04,960 --> 00:34:09,839
seen this typical adoption curve gentle

00:34:08,399 --> 00:34:12,639
and predictable

00:34:09,839 --> 00:34:14,480
most of all innovations be they beliefs

00:34:12,639 --> 00:34:18,000
practices or technologies

00:34:14,480 --> 00:34:20,079
follow this curve this

00:34:18,000 --> 00:34:21,839
is the diffusion curve we face in the

00:34:20,079 --> 00:34:24,800
next 30 years to avert

00:34:21,839 --> 00:34:26,079
thousands of years of climate collapse

00:34:24,800 --> 00:34:29,359
the longer we wait

00:34:26,079 --> 00:34:32,720
the steeper the curve we have not

00:34:29,359 --> 00:34:33,760
a minute to lose while steep it has been

00:34:32,720 --> 00:34:35,440
done before

00:34:33,760 --> 00:34:37,839
if you look at diffusion curves for

00:34:35,440 --> 00:34:39,679
colored tvs or smartphones or social

00:34:37,839 --> 00:34:42,480
media or the internet

00:34:39,679 --> 00:34:45,520
or the cloud they all happen very

00:34:42,480 --> 00:34:48,720
quickly in a really short period of time

00:34:45,520 --> 00:34:51,040
so i have hope that

00:34:48,720 --> 00:34:52,399
placing llf energy into the linux

00:34:51,040 --> 00:34:55,919
foundation

00:34:52,399 --> 00:35:00,079
gives us super powers to navigate this

00:34:55,919 --> 00:35:03,200
and we need your super powers so

00:35:00,079 --> 00:35:05,520
these are our marching orders remove

00:35:03,200 --> 00:35:06,320
carbon from our power and transportation

00:35:05,520 --> 00:35:09,920
system

00:35:06,320 --> 00:35:12,480
to provide 75 of the reduction in co2

00:35:09,920 --> 00:35:12,480
emissions

00:35:12,720 --> 00:35:16,800
and this is what we need we need mass

00:35:14,839 --> 00:35:19,040
collaboration we need

00:35:16,800 --> 00:35:21,599
to work with automotive grade linux and

00:35:19,040 --> 00:35:25,040
the automobile manufacturers

00:35:21,599 --> 00:35:27,680
because we like you

00:35:25,040 --> 00:35:29,119
have to be able to provide the energy

00:35:27,680 --> 00:35:32,240
that is going to

00:35:29,119 --> 00:35:34,880
power vehicles and vehicle to grid

00:35:32,240 --> 00:35:36,880
integration is going to become one of

00:35:34,880 --> 00:35:39,359
the greatest technical feats

00:35:36,880 --> 00:35:41,119
we actually accomplish in the next 10 to

00:35:39,359 --> 00:35:43,440
15 to 20 years

00:35:41,119 --> 00:35:44,800
so we need mass collaboration like the

00:35:43,440 --> 00:35:47,119
starling murmur

00:35:44,800 --> 00:35:48,240
we need to design the grid of the future

00:35:47,119 --> 00:35:51,359
in relationship

00:35:48,240 --> 00:35:53,920
to the natural systems of the planet

00:35:51,359 --> 00:35:54,640
and for that we need the lennox

00:35:53,920 --> 00:35:58,079
foundation

00:35:54,640 --> 00:35:59,920
and we need you we are more

00:35:58,079 --> 00:36:02,240
we are more than just the most important

00:35:59,920 --> 00:36:05,119
open source platform in the world

00:36:02,240 --> 00:36:05,359
i propose that we are ground zero for

00:36:05,119 --> 00:36:07,680
the

00:36:05,359 --> 00:36:10,160
digital foundations that will power the

00:36:07,680 --> 00:36:12,560
decarbonization of our economies

00:36:10,160 --> 00:36:13,200
like covid we cannot have a patchwork

00:36:12,560 --> 00:36:16,800
approach

00:36:13,200 --> 00:36:18,079
we must work together so i want to step

00:36:16,800 --> 00:36:20,240
back a little bit

00:36:18,079 --> 00:36:21,359
this is basically what the old system

00:36:20,240 --> 00:36:24,240
looked like

00:36:21,359 --> 00:36:26,560
you had generate transmit over high

00:36:24,240 --> 00:36:29,040
voltage over long distances

00:36:26,560 --> 00:36:29,839
and distribute and then you would turn

00:36:29,040 --> 00:36:33,040
the switch on

00:36:29,839 --> 00:36:35,520
and boom lights came on the key

00:36:33,040 --> 00:36:37,440
principle that balanced supply and

00:36:35,520 --> 00:36:40,720
demand was inertia

00:36:37,440 --> 00:36:43,760
it was rigid it was centralized and it

00:36:40,720 --> 00:36:46,320
was extremely reliable

00:36:43,760 --> 00:36:48,560
the power system sector has historically

00:36:46,320 --> 00:36:49,680
looked at investment in 50 to 80 year

00:36:48,560 --> 00:36:52,480
windows

00:36:49,680 --> 00:36:55,920
it has been historically proprietary and

00:36:52,480 --> 00:36:57,920
not an easy system to change

00:36:55,920 --> 00:37:00,560
but here we have the new grid it's

00:36:57,920 --> 00:37:03,520
composed of variable energy from pv

00:37:00,560 --> 00:37:04,960
wind batteries and automobiles and it's

00:37:03,520 --> 00:37:06,839
massively distributed with

00:37:04,960 --> 00:37:08,320
multi-directional communication

00:37:06,839 --> 00:37:10,400
capabilities

00:37:08,320 --> 00:37:11,599
this is a problem we know how to solve

00:37:10,400 --> 00:37:13,680
this is a problem

00:37:11,599 --> 00:37:15,839
you know how to solve because we're

00:37:13,680 --> 00:37:18,960
talking about connected assets

00:37:15,839 --> 00:37:21,359
connected homes connected buildings

00:37:18,960 --> 00:37:22,800
connected vehicles connected

00:37:21,359 --> 00:37:25,680
infrastructure

00:37:22,800 --> 00:37:27,200
and connected markets and that is what

00:37:25,680 --> 00:37:31,599
the linux foundation

00:37:27,200 --> 00:37:31,599
does really really well

00:37:32,480 --> 00:37:38,320
so the grid of the future

00:37:36,000 --> 00:37:40,000
is composed of loosely coupled systems

00:37:38,320 --> 00:37:41,280
that are resilient manageable and

00:37:40,000 --> 00:37:43,520
observable

00:37:41,280 --> 00:37:45,440
combined with robust automation the

00:37:43,520 --> 00:37:47,200
digitalization of energy enables

00:37:45,440 --> 00:37:49,359
engineers and markets

00:37:47,200 --> 00:37:51,680
to make high impact changes frequently

00:37:49,359 --> 00:37:54,320
and predictably with minimal toil

00:37:51,680 --> 00:37:55,520
does this sound familiar well the

00:37:54,320 --> 00:37:58,560
engineers

00:37:55,520 --> 00:38:02,720
that are that have helped

00:37:58,560 --> 00:38:05,599
drive the architecture of lf energy

00:38:02,720 --> 00:38:06,880
they actually took this from cncf and

00:38:05,599 --> 00:38:09,200
why is it similar

00:38:06,880 --> 00:38:11,760
because distributed energy requires

00:38:09,200 --> 00:38:14,160
distributed computing

00:38:11,760 --> 00:38:17,119
so it's not enough to decarbonize

00:38:14,160 --> 00:38:20,240
denmark or france or the united states

00:38:17,119 --> 00:38:21,119
or even japan we have to decarbonize the

00:38:20,240 --> 00:38:23,599
world

00:38:21,119 --> 00:38:25,040
in our economies and this is why japan

00:38:23,599 --> 00:38:27,200
is so important

00:38:25,040 --> 00:38:28,480
because you know how to take ideas

00:38:27,200 --> 00:38:32,240
commercialize them

00:38:28,480 --> 00:38:33,920
and spread them globally

00:38:32,240 --> 00:38:35,440
so what i'm going to show you right now

00:38:33,920 --> 00:38:37,440
is i'm going to i'm going to take a

00:38:35,440 --> 00:38:39,520
just a couple of minutes in and show you

00:38:37,440 --> 00:38:40,880
sort of the functional architecture of

00:38:39,520 --> 00:38:42,560
lf energy

00:38:40,880 --> 00:38:44,240
uh i'm going to talk about this much

00:38:42,560 --> 00:38:46,160
more tomorrow so i'm going to go through

00:38:44,240 --> 00:38:48,960
this pretty quickly or it's not tomorrow

00:38:46,160 --> 00:38:49,760
it's an hour from now um at the mini

00:38:48,960 --> 00:38:52,880
summit

00:38:49,760 --> 00:38:56,079
so um you know what what

00:38:52,880 --> 00:38:58,960
did there the grid is the largest

00:38:56,079 --> 00:39:02,000
machine on the planet

00:38:58,960 --> 00:39:05,280
and so there's no way to create a

00:39:02,000 --> 00:39:06,079
singular top-down architecture but what

00:39:05,280 --> 00:39:09,680
we can do

00:39:06,079 --> 00:39:10,560
is build a taxonomy that we work with

00:39:09,680 --> 00:39:12,960
and manage

00:39:10,560 --> 00:39:13,680
and build consensus and mental models

00:39:12,960 --> 00:39:16,079
around

00:39:13,680 --> 00:39:17,040
that allow us to build the grid of the

00:39:16,079 --> 00:39:20,160
future

00:39:17,040 --> 00:39:23,200
so you know these are the components

00:39:20,160 --> 00:39:26,560
these are the capabilities uh both

00:39:23,200 --> 00:39:29,839
uh whether it's a microgrid or or it is

00:39:26,560 --> 00:39:30,640
the macro grid and you know and then you

00:39:29,839 --> 00:39:34,400
have these

00:39:30,640 --> 00:39:37,760
uh buckets that drop down and

00:39:34,400 --> 00:39:40,880
you know these are the big buckets of um

00:39:37,760 --> 00:39:43,359
functional requirements that uh network

00:39:40,880 --> 00:39:46,000
operators again whether it's a mini grid

00:39:43,359 --> 00:39:49,040
or a macro grid have to

00:39:46,000 --> 00:39:49,760
compose their grids with and then you

00:39:49,040 --> 00:39:53,359
have

00:39:49,760 --> 00:39:57,040
dropping down to the next level you have

00:39:53,359 --> 00:40:00,320
the actual functional articulation

00:39:57,040 --> 00:40:02,960
of the grid of the future

00:40:00,320 --> 00:40:03,640
this is incredibly important in terms of

00:40:02,960 --> 00:40:07,280
its

00:40:03,640 --> 00:40:09,520
visualization and realization of

00:40:07,280 --> 00:40:11,760
what are the components that we need to

00:40:09,520 --> 00:40:14,720
use to build the grid of the future

00:40:11,760 --> 00:40:15,839
now i often say to people in jess you

00:40:14,720 --> 00:40:17,760
know there are no

00:40:15,839 --> 00:40:19,119
thousand engineers somewhere in a

00:40:17,760 --> 00:40:21,440
basement somewhere

00:40:19,119 --> 00:40:22,960
building the grid of the future about to

00:40:21,440 --> 00:40:26,400
throw it over the wall

00:40:22,960 --> 00:40:28,800
and save us all from ourselves in fact

00:40:26,400 --> 00:40:29,599
what you're looking at really is a

00:40:28,800 --> 00:40:32,880
microsoft

00:40:29,599 --> 00:40:37,040
services architecture that privileges

00:40:32,880 --> 00:40:39,920
fast quick iterative and

00:40:37,040 --> 00:40:43,200
that focuses on the interoperability

00:40:39,920 --> 00:40:43,200
between these parts

00:40:43,680 --> 00:40:47,920
these are the projects that the linux

00:40:45,680 --> 00:40:51,119
foundation energy has

00:40:47,920 --> 00:40:52,160
um they're all the way from behind the

00:40:51,119 --> 00:40:55,520
meter

00:40:52,160 --> 00:40:58,640
and at the distribution level

00:40:55,520 --> 00:41:01,280
to to asset management

00:40:58,640 --> 00:41:02,000
and edge node control and shared

00:41:01,280 --> 00:41:05,040
services

00:41:02,000 --> 00:41:07,440
and we will get presentations for

00:41:05,040 --> 00:41:08,640
many of these from open e meter operator

00:41:07,440 --> 00:41:12,560
fabric

00:41:08,640 --> 00:41:12,560
the sony dc micro grid

00:41:13,119 --> 00:41:16,480
and i think the grid exchange fabric and

00:41:15,760 --> 00:41:18,000
possible

00:41:16,480 --> 00:41:20,160
so those are the ones that we're going

00:41:18,000 --> 00:41:23,200
to actually get presentations

00:41:20,160 --> 00:41:25,359
from in a few minutes

00:41:23,200 --> 00:41:27,440
the other thing that what we've done as

00:41:25,359 --> 00:41:30,480
the projects have come on board

00:41:27,440 --> 00:41:32,960
is that we also have built frameworks

00:41:30,480 --> 00:41:35,040
and the functional architecture was the

00:41:32,960 --> 00:41:37,440
first framework that we worked on

00:41:35,040 --> 00:41:39,680
we're now working on a data architecture

00:41:37,440 --> 00:41:42,079
and infrastructure and security

00:41:39,680 --> 00:41:44,319
and these cross-project frameworks were

00:41:42,079 --> 00:41:46,240
officially integrated into our attack in

00:41:44,319 --> 00:41:49,280
the fall of 2020

00:41:46,240 --> 00:41:50,079
so we are using these frameworks to

00:41:49,280 --> 00:41:54,640
actually

00:41:50,079 --> 00:41:59,119
speed the diffusion of technologies

00:41:54,640 --> 00:42:02,880
so i'm going to um

00:41:59,119 --> 00:42:04,560
these are our members today we have 34

00:42:02,880 --> 00:42:07,760
members in growing

00:42:04,560 --> 00:42:12,160
um i actually think it's 35 as

00:42:07,760 --> 00:42:13,760
of today and um and so we are becoming a

00:42:12,160 --> 00:42:17,440
very healthy community

00:42:13,760 --> 00:42:18,640
of network operators technology

00:42:17,440 --> 00:42:23,119
companies

00:42:18,640 --> 00:42:23,119
vendors and suppliers

00:42:23,359 --> 00:42:28,319
so it's been a fantastic year despite or

00:42:25,839 --> 00:42:30,160
maybe because of the challenges

00:42:28,319 --> 00:42:31,839
we are creating a movement that's what i

00:42:30,160 --> 00:42:34,400
often say to folks

00:42:31,839 --> 00:42:36,160
and we do that by laying the foundations

00:42:34,400 --> 00:42:37,200
and creating the conditions for the

00:42:36,160 --> 00:42:40,000
entire world

00:42:37,200 --> 00:42:41,760
to collaborate at scale to transform

00:42:40,000 --> 00:42:45,839
energy and power

00:42:41,760 --> 00:42:45,839
and to transform transportation

00:42:46,319 --> 00:42:51,119
we're not in that swim lane but vehicles

00:42:49,520 --> 00:42:51,599
are going to have to integrate with the

00:42:51,119 --> 00:42:54,160
grid

00:42:51,599 --> 00:42:55,680
and the grid is going to have to be a

00:42:54,160 --> 00:42:57,359
green grid

00:42:55,680 --> 00:42:59,040
in order to be able to power those

00:42:57,359 --> 00:43:01,520
vehicles and decarbonize

00:42:59,040 --> 00:43:03,200
so we need to work together in the same

00:43:01,520 --> 00:43:06,000
way that we need to work with lf

00:43:03,200 --> 00:43:07,040
networking because 5g is going to be

00:43:06,000 --> 00:43:08,880
critical

00:43:07,040 --> 00:43:10,319
so everything that we're doing we're

00:43:08,880 --> 00:43:13,040
doing in community

00:43:10,319 --> 00:43:15,040
and we are slowly but surely building

00:43:13,040 --> 00:43:16,880
those connections as we become more

00:43:15,040 --> 00:43:20,000
solid as a foundation

00:43:16,880 --> 00:43:21,760
we are building those relationships to

00:43:20,000 --> 00:43:25,599
the other foundations

00:43:21,760 --> 00:43:27,839
at the linux foundation so

00:43:25,599 --> 00:43:29,119
we have seven new projects for a total

00:43:27,839 --> 00:43:32,880
of 13.

00:43:29,119 --> 00:43:34,640
i i think actually today we got two more

00:43:32,880 --> 00:43:35,599
projects that i hope are going to come

00:43:34,640 --> 00:43:37,520
in this year

00:43:35,599 --> 00:43:40,560
one of them is a digital bill of

00:43:37,520 --> 00:43:43,599
materials for supply chains and

00:43:40,560 --> 00:43:45,040
uh and another one is a multi-protocol

00:43:43,599 --> 00:43:47,440
gateway

00:43:45,040 --> 00:43:48,319
that is built on fledge which is out of

00:43:47,440 --> 00:43:50,960
lf edge

00:43:48,319 --> 00:43:52,640
and so these collaborations are

00:43:50,960 --> 00:43:55,359
tremendous and important

00:43:52,640 --> 00:43:56,720
we have probably about 30 or 40 uh

00:43:55,359 --> 00:43:58,800
meetings a month

00:43:56,720 --> 00:44:00,480
they're all open you can if you go to

00:43:58,800 --> 00:44:02,480
our website and you go to community

00:44:00,480 --> 00:44:04,400
you'll get access to the wiki

00:44:02,480 --> 00:44:06,160
on the wiki you can see that we're

00:44:04,400 --> 00:44:08,240
beginning and

00:44:06,160 --> 00:44:09,520
you know in some ways i want you all to

00:44:08,240 --> 00:44:11,920
think of this as you're

00:44:09,520 --> 00:44:13,680
you're visiting a frontier village where

00:44:11,920 --> 00:44:17,040
we're just beginning

00:44:13,680 --> 00:44:17,920
to create the outlines of a future

00:44:17,040 --> 00:44:19,880
community

00:44:17,920 --> 00:44:21,359
that is going to hold the

00:44:19,880 --> 00:44:24,079
decarbonization

00:44:21,359 --> 00:44:26,400
of energy and power systems for the

00:44:24,079 --> 00:44:29,440
planet

00:44:26,400 --> 00:44:32,960
we have many webinars a month

00:44:29,440 --> 00:44:33,680
and we have a new newsletter and we have

00:44:32,960 --> 00:44:36,960
had

00:44:33,680 --> 00:44:39,440
lots of really great media in the course

00:44:36,960 --> 00:44:42,800
of this year

00:44:39,440 --> 00:44:45,839
so i want to bring us back to

00:44:42,800 --> 00:44:47,599
that we're going to be doing um

00:44:45,839 --> 00:44:50,240
in a very short period of time we're

00:44:47,599 --> 00:44:53,760
going to be doing a mini summit

00:44:50,240 --> 00:44:56,800
and i want you to join us i think if you

00:44:53,760 --> 00:44:59,359
i tried to put the links in there but if

00:44:56,800 --> 00:44:59,920
you go to the schedule you'll see it if

00:44:59,359 --> 00:45:04,160
you go

00:44:59,920 --> 00:45:07,520
to the oss japan website you can see it

00:45:04,160 --> 00:45:10,720
please sign up it's it's free

00:45:07,520 --> 00:45:11,440
and it's available to anyone i will

00:45:10,720 --> 00:45:14,640
continue

00:45:11,440 --> 00:45:17,280
to kind of do more of a deep dive

00:45:14,640 --> 00:45:18,640
into the functional architecture because

00:45:17,280 --> 00:45:21,760
i really do believe

00:45:18,640 --> 00:45:24,800
that it is the foundation for what the

00:45:21,760 --> 00:45:29,040
grid of the future is going to look like

00:45:24,800 --> 00:45:31,359
and then sony is going to give a talk uh

00:45:29,040 --> 00:45:32,640
and then we are going to have five

00:45:31,359 --> 00:45:35,680
videos

00:45:32,640 --> 00:45:40,000
um so that you get some sense about

00:45:35,680 --> 00:45:43,280
the projects at lf energy so

00:45:40,000 --> 00:45:45,839
you know in closing um i talk about

00:45:43,280 --> 00:45:46,560
the logjam but i think we all need to

00:45:45,839 --> 00:45:50,800
remember

00:45:46,560 --> 00:45:52,720
what a free and moving river looks like

00:45:50,800 --> 00:45:53,839
this is what we need to do we need to

00:45:52,720 --> 00:45:56,720
break up the log

00:45:53,839 --> 00:45:57,359
gym get the water moving let's do this

00:45:56,720 --> 00:46:00,000
together

00:45:57,359 --> 00:46:00,560
we are the power of together join us

00:46:00,000 --> 00:46:05,119
please

00:46:00,560 --> 00:46:05,119
there's so much to do thank you

00:46:05,760 --> 00:46:12,000
be safe this is how to reach out to me

00:46:08,800 --> 00:46:15,040
and also reach out to mike dawn we are

00:46:12,000 --> 00:46:18,720
there for you

00:46:15,040 --> 00:46:21,760
thank you shirley finally

00:46:18,720 --> 00:46:23,119
our last keynote speaker today is john

00:46:21,760 --> 00:46:26,839
corbett

00:46:23,119 --> 00:46:31,280
co-founder and executive editor of

00:46:26,839 --> 00:46:34,319
lwn.net john is also

00:46:31,280 --> 00:46:36,319
also a linux developer and maintainer of

00:46:34,319 --> 00:46:39,920
the documentation systems

00:46:36,319 --> 00:46:42,880
as well as several device drivers

00:46:39,920 --> 00:46:44,480
john joins us to share the linux kernel

00:46:42,880 --> 00:46:48,560
report

00:46:44,480 --> 00:46:48,560
please welcome john corbett

00:46:48,950 --> 00:46:53,140
[Music]

00:46:54,000 --> 00:46:57,920
hello everybody thank you all for tuning

00:46:56,000 --> 00:46:59,359
in my name is john i'm here to talk

00:46:57,920 --> 00:47:01,440
about the kernel

00:46:59,359 --> 00:47:03,440
i really wish i could be in japan

00:47:01,440 --> 00:47:07,119
talking to you all about this but

00:47:03,440 --> 00:47:08,800
that's not to be this year and

00:47:07,119 --> 00:47:10,079
of course the reason behind that

00:47:08,800 --> 00:47:11,839
something you may have noticed is that

00:47:10,079 --> 00:47:13,119
we are in fact in the middle of a

00:47:11,839 --> 00:47:14,880
pandemic

00:47:13,119 --> 00:47:16,240
so if i'm going to talk about the state

00:47:14,880 --> 00:47:18,240
of the colonel

00:47:16,240 --> 00:47:20,800
i should certainly be talking about how

00:47:18,240 --> 00:47:23,680
is the pandemic affected our community

00:47:20,800 --> 00:47:25,440
and how are we responding to it so far

00:47:23,680 --> 00:47:26,880
so there's a couple of aspects to this

00:47:25,440 --> 00:47:29,599
that can be looked at here

00:47:26,880 --> 00:47:31,760
one of course as we're seeing right now

00:47:29,599 --> 00:47:33,680
it has to do with conferences

00:47:31,760 --> 00:47:35,280
many of our important events this year

00:47:33,680 --> 00:47:36,400
including the storage file system and

00:47:35,280 --> 00:47:37,520
memory management summit and the

00:47:36,400 --> 00:47:39,599
maintainer summit

00:47:37,520 --> 00:47:40,720
have been cancelled outright as a result

00:47:39,599 --> 00:47:42,880
of the pandemic

00:47:40,720 --> 00:47:43,920
others many others have gone online some

00:47:42,880 --> 00:47:46,800
of which have done

00:47:43,920 --> 00:47:48,720
better than others but even when it

00:47:46,800 --> 00:47:50,400
comes to online things we have lost an

00:47:48,720 --> 00:47:52,559
opportunity we've lost

00:47:50,400 --> 00:47:54,000
the ability we had to get together to

00:47:52,559 --> 00:47:54,800
meet people that we wouldn't have met

00:47:54,000 --> 00:47:56,640
otherwise

00:47:54,800 --> 00:47:59,359
and to get to know them a bit and this

00:47:56,640 --> 00:48:02,319
is important because we are a

00:47:59,359 --> 00:48:03,040
worldwide development community that is

00:48:02,319 --> 00:48:05,280
connected

00:48:03,040 --> 00:48:06,960
almost exclusively electronically we

00:48:05,280 --> 00:48:08,640
don't often get to see each other

00:48:06,960 --> 00:48:10,240
and that can make it very hard for us to

00:48:08,640 --> 00:48:12,640
work as closely together

00:48:10,240 --> 00:48:13,599
as we need to do the opportunity to

00:48:12,640 --> 00:48:15,520
occasionally

00:48:13,599 --> 00:48:17,440
actually meet in person perhaps share a

00:48:15,520 --> 00:48:19,440
beer and get to understand

00:48:17,440 --> 00:48:20,640
where our co-workers are coming from is

00:48:19,440 --> 00:48:23,599
really important

00:48:20,640 --> 00:48:25,599
so the loss of this is going to hurt and

00:48:23,599 --> 00:48:26,480
if we continue to be unable to get

00:48:25,599 --> 00:48:28,720
together

00:48:26,480 --> 00:48:30,079
in person it is going to hurt us more in

00:48:28,720 --> 00:48:31,440
the long term

00:48:30,079 --> 00:48:33,040
hopefully this is not going to be a

00:48:31,440 --> 00:48:34,160
long-term thing but it is something to

00:48:33,040 --> 00:48:36,800
be aware of

00:48:34,160 --> 00:48:37,520
that's only one aspect of it the other

00:48:36,800 --> 00:48:39,040
question

00:48:37,520 --> 00:48:40,720
that one would ask of course is what

00:48:39,040 --> 00:48:41,920
about the code because that is what we

00:48:40,720 --> 00:48:45,119
are here for

00:48:41,920 --> 00:48:47,440
is to develop the linux operating system

00:48:45,119 --> 00:48:49,839
so i'll put up this chart the usual sort

00:48:47,440 --> 00:48:51,599
of chart i put up in talks like this

00:48:49,839 --> 00:48:53,680
showing the the kernel release history

00:48:51,599 --> 00:48:55,920
over the course of the last year

00:48:53,680 --> 00:48:58,000
and as you can see we have continued to

00:48:55,920 --> 00:49:00,240
put out kernels

00:48:58,000 --> 00:49:01,680
about every nine or ten weeks just as we

00:49:00,240 --> 00:49:04,000
have for many years

00:49:01,680 --> 00:49:06,079
these continue to be very busy releases

00:49:04,000 --> 00:49:08,079
in fact some of them like 5.8 was the

00:49:06,079 --> 00:49:09,119
busiest kernel release we've ever made

00:49:08,079 --> 00:49:11,680
with over 16

00:49:09,119 --> 00:49:12,800
000 change sets in it and these kernels

00:49:11,680 --> 00:49:15,599
all involve

00:49:12,800 --> 00:49:16,480
participation of 1800 1900 developers or

00:49:15,599 --> 00:49:19,119
so

00:49:16,480 --> 00:49:20,240
so we seem to be going kind of business

00:49:19,119 --> 00:49:23,040
as usual

00:49:20,240 --> 00:49:24,160
in that regard another way to look at

00:49:23,040 --> 00:49:27,200
this

00:49:24,160 --> 00:49:28,640
would be to look at the the history of

00:49:27,200 --> 00:49:32,880
the patches themselves

00:49:28,640 --> 00:49:34,640
so these two plots indicate when

00:49:32,880 --> 00:49:36,480
kernel patches that landed in the main

00:49:34,640 --> 00:49:39,119
line were first posted

00:49:36,480 --> 00:49:40,880
which is the top line the blue plot or

00:49:39,119 --> 00:49:41,680
committed to a repository of the bottom

00:49:40,880 --> 00:49:43,440
one

00:49:41,680 --> 00:49:45,200
these these plots go as you can see from

00:49:43,440 --> 00:49:46,000
the beginning of 2020 before the

00:49:45,200 --> 00:49:48,720
pandemic

00:49:46,000 --> 00:49:50,160
through the pleasant present and it's

00:49:48,720 --> 00:49:52,640
really hard to see

00:49:50,160 --> 00:49:53,920
the impact of the pandemic at all in any

00:49:52,640 --> 00:49:57,440
of this

00:49:53,920 --> 00:49:59,839
so once again it seems that we're doing

00:49:57,440 --> 00:50:03,040
okay i would say in fact

00:49:59,839 --> 00:50:04,480
one could say so far so good if anything

00:50:03,040 --> 00:50:05,200
we've gotten a little bit more

00:50:04,480 --> 00:50:08,480
productive

00:50:05,200 --> 00:50:09,440
during this time so one might argue that

00:50:08,480 --> 00:50:11,680
the pandemic

00:50:09,440 --> 00:50:12,480
for all the horrible things that it has

00:50:11,680 --> 00:50:14,720
brought

00:50:12,480 --> 00:50:16,160
has given us the opportunity to do what

00:50:14,720 --> 00:50:18,640
many of us just wanted to do

00:50:16,160 --> 00:50:19,440
all along anyway which is to hide away

00:50:18,640 --> 00:50:23,119
from people

00:50:19,440 --> 00:50:25,520
and just work on the code so

00:50:23,119 --> 00:50:27,599
be it as it may we're doing okay so far

00:50:25,520 --> 00:50:31,440
in this regard and that's

00:50:27,599 --> 00:50:31,440
only a good thing so

00:50:31,599 --> 00:50:35,440
moving on though i put up this this

00:50:33,599 --> 00:50:38,160
table of kernel releases these of course

00:50:35,440 --> 00:50:40,400
are mainline kernel releases

00:50:38,160 --> 00:50:41,520
very few of us actually run mainline

00:50:40,400 --> 00:50:44,720
kernels on our

00:50:41,520 --> 00:50:47,040
devices so

00:50:44,720 --> 00:50:47,760
one might ask what kernel do we actually

00:50:47,040 --> 00:50:49,839
run

00:50:47,760 --> 00:50:51,119
and i've talked in the past about stable

00:50:49,839 --> 00:50:52,800
kernel updates and all that sort of

00:50:51,119 --> 00:50:54,640
stuff and that is all relevant

00:50:52,800 --> 00:50:57,040
but if you look at what's actually

00:50:54,640 --> 00:50:58,160
running on our devices on more devices

00:50:57,040 --> 00:51:01,520
than anything else

00:50:58,160 --> 00:51:03,599
that is of course the android kernel

00:51:01,520 --> 00:51:05,119
because android systems do in fact run

00:51:03,599 --> 00:51:07,680
on the latest kernel

00:51:05,119 --> 00:51:08,800
the the history of relations between

00:51:07,680 --> 00:51:11,040
android and the

00:51:08,800 --> 00:51:12,400
kernel community has been a little bit

00:51:11,040 --> 00:51:14,000
mixed at times there have been some

00:51:12,400 --> 00:51:15,040
tensions at times especially in the

00:51:14,000 --> 00:51:18,079
early days

00:51:15,040 --> 00:51:19,599
a lot better now and it's getting even

00:51:18,079 --> 00:51:21,040
better yet and that's what i wanted to

00:51:19,599 --> 00:51:22,319
talk about in particular here because

00:51:21,040 --> 00:51:23,680
there's a development that is worth

00:51:22,319 --> 00:51:26,480
keeping an eye on

00:51:23,680 --> 00:51:27,359
and that is called the android generic

00:51:26,480 --> 00:51:29,440
kernel image

00:51:27,359 --> 00:51:31,040
this is a mainline kernel actually an

00:51:29,440 --> 00:51:33,040
almost mainline kernel there's a small

00:51:31,040 --> 00:51:35,200
number of patches applied still

00:51:33,040 --> 00:51:36,079
this is built by the android open source

00:51:35,200 --> 00:51:39,040
project

00:51:36,079 --> 00:51:41,200
this kernel is based on a current stable

00:51:39,040 --> 00:51:43,520
release and tracks them going forward

00:51:41,200 --> 00:51:45,599
so it's a current kernel and the

00:51:43,520 --> 00:51:47,920
interesting aspect of this is that as of

00:51:45,599 --> 00:51:49,920
the android 12 release

00:51:47,920 --> 00:51:51,920
use of the generic kernel image will be

00:51:49,920 --> 00:51:54,800
mandatory for any device that wants to

00:51:51,920 --> 00:51:57,040
call itself an android device

00:51:54,800 --> 00:51:58,480
any code that's supplied by vendors is

00:51:57,040 --> 00:52:01,520
only can only

00:51:58,480 --> 00:52:03,040
be provided as loadable kernel modules

00:52:01,520 --> 00:52:04,559
and this is important this is a huge

00:52:03,040 --> 00:52:05,839
change

00:52:04,559 --> 00:52:07,680
if you look at the history of

00:52:05,839 --> 00:52:08,640
vendor-supplied kernels on android

00:52:07,680 --> 00:52:12,079
devices

00:52:08,640 --> 00:52:14,000
you see an awful lot of out of tree code

00:52:12,079 --> 00:52:16,000
applied to them

00:52:14,000 --> 00:52:17,359
often millions of lines of out of tree

00:52:16,000 --> 00:52:19,119
code and

00:52:17,359 --> 00:52:21,119
this code has often done things like

00:52:19,119 --> 00:52:22,720
replace core components like the cpu

00:52:21,119 --> 00:52:26,079
scheduler things like that

00:52:22,720 --> 00:52:29,440
um really kind of ugly in that regard

00:52:26,079 --> 00:52:30,400
so what's going to happen now is that

00:52:29,440 --> 00:52:33,760
you can't really do

00:52:30,400 --> 00:52:35,440
much of this anymore because the module

00:52:33,760 --> 00:52:37,440
interface for the kernel

00:52:35,440 --> 00:52:38,880
just does not allow the replacement of

00:52:37,440 --> 00:52:41,599
the cpu scheduler

00:52:38,880 --> 00:52:44,480
or many other changes to the core kernel

00:52:41,599 --> 00:52:46,000
so it's going to very much restrict what

00:52:44,480 --> 00:52:47,760
what android device suppliers and

00:52:46,000 --> 00:52:49,599
vendors can do to the kernel

00:52:47,760 --> 00:52:51,760
and bring us much closer to the main

00:52:49,599 --> 00:52:54,160
line in that regard

00:52:51,760 --> 00:52:57,760
since the generic kernel image is based

00:52:54,160 --> 00:52:59,760
on stable updates and tracks them

00:52:57,760 --> 00:53:01,520
android devices themselves will get the

00:52:59,760 --> 00:53:02,400
latest fixes and the latest security

00:53:01,520 --> 00:53:04,079
updates

00:53:02,400 --> 00:53:06,160
at least for as long as they are getting

00:53:04,079 --> 00:53:07,920
updates in general which is a separate

00:53:06,160 --> 00:53:10,319
problem

00:53:07,920 --> 00:53:12,160
but with regards to the updates they do

00:53:10,319 --> 00:53:15,119
get they will be updated to current

00:53:12,160 --> 00:53:17,839
kernels and that is a good thing finally

00:53:15,119 --> 00:53:20,160
this policy gives vendors a strong

00:53:17,839 --> 00:53:22,000
incentive to upstream their code

00:53:20,160 --> 00:53:23,200
for a lot of the things they might do to

00:53:22,000 --> 00:53:25,040
the core kernel

00:53:23,200 --> 00:53:26,480
the only way to get the functionality

00:53:25,040 --> 00:53:28,240
they need is to get it into the main

00:53:26,480 --> 00:53:29,359
line since they can no longer apply it

00:53:28,240 --> 00:53:31,760
themselves

00:53:29,359 --> 00:53:33,599
after the fact but even for things like

00:53:31,760 --> 00:53:34,240
device drivers and such that can be

00:53:33,599 --> 00:53:37,280
supplied

00:53:34,240 --> 00:53:39,040
as loadable modules

00:53:37,280 --> 00:53:40,640
the life of these vendors will be much

00:53:39,040 --> 00:53:42,880
easier if they can get into the main

00:53:40,640 --> 00:53:44,559
line because this generic kernel image

00:53:42,880 --> 00:53:46,000
will move forward over time

00:53:44,559 --> 00:53:47,680
and if they don't want to have to keep

00:53:46,000 --> 00:53:50,800
forward porting their code

00:53:47,680 --> 00:53:50,800
they will be much happier

00:53:50,880 --> 00:53:54,160
to have that in the main line and have a

00:53:52,400 --> 00:53:56,640
lot of that work done for them

00:53:54,160 --> 00:53:58,000
so the end result of all this is that

00:53:56,640 --> 00:53:59,839
it's

00:53:58,000 --> 00:54:02,160
getting closer to possible to run

00:53:59,839 --> 00:54:03,920
generic mainline kernels on android

00:54:02,160 --> 00:54:05,040
devices someday we'll actually get there

00:54:03,920 --> 00:54:07,839
for at least some

00:54:05,040 --> 00:54:09,119
devices and this particular problem is

00:54:07,839 --> 00:54:10,480
mostly behind us now

00:54:09,119 --> 00:54:12,960
and that's a great thing that is great

00:54:10,480 --> 00:54:14,640
news and something that's testament to

00:54:12,960 --> 00:54:18,319
the hard work of both

00:54:14,640 --> 00:54:20,319
the people in the kernel community

00:54:18,319 --> 00:54:22,000
and especially the people in the android

00:54:20,319 --> 00:54:24,160
ecosystem who worked very hard

00:54:22,000 --> 00:54:26,319
to solve this problem and to bring these

00:54:24,160 --> 00:54:29,200
two communities together

00:54:26,319 --> 00:54:29,599
so one bit of interesting legacy behind

00:54:29,200 --> 00:54:31,200
us

00:54:29,599 --> 00:54:33,599
i wanted to talk about a couple of other

00:54:31,200 --> 00:54:35,119
legacy problems while i was on the topic

00:54:33,599 --> 00:54:37,280
and perhaps even getting a little bit

00:54:35,119 --> 00:54:39,040
more technical than i often do

00:54:37,280 --> 00:54:40,720
while i'm at it because i think again

00:54:39,040 --> 00:54:43,520
there are some interesting insights

00:54:40,720 --> 00:54:45,599
to be seen here so the first of those

00:54:43,520 --> 00:54:46,000
regards an internal kernel function

00:54:45,599 --> 00:54:49,200
called

00:54:46,000 --> 00:54:49,920
setfs this is something that users of

00:54:49,200 --> 00:54:52,240
the kernel

00:54:49,920 --> 00:54:53,520
never see but it is something that

00:54:52,240 --> 00:54:56,319
kernel developers

00:54:53,520 --> 00:54:58,799
have have occasionally had to work with

00:54:56,319 --> 00:55:01,680
over time so what is setfs

00:54:58,799 --> 00:55:03,680
if you look at the way that the virtual

00:55:01,680 --> 00:55:06,000
address space is laid out

00:55:03,680 --> 00:55:07,839
in linux systems you see something like

00:55:06,000 --> 00:55:10,400
this this is a typical

00:55:07,839 --> 00:55:11,599
at 64-bit address space for a pretty

00:55:10,400 --> 00:55:14,799
normal configuration

00:55:11,599 --> 00:55:16,960
on the x86 64 architecture

00:55:14,799 --> 00:55:19,200
and you see this address space is split

00:55:16,960 --> 00:55:22,640
between kernel space and user space

00:55:19,200 --> 00:55:24,160
with the boundary between them right zfs

00:55:22,640 --> 00:55:26,079
is a function that can change the

00:55:24,160 --> 00:55:29,200
location of that boundary

00:55:26,079 --> 00:55:31,200
now the boundary exists in particular as

00:55:29,200 --> 00:55:34,400
part of the kernel security mechanism

00:55:31,200 --> 00:55:36,160
to prevent system calls from acting on

00:55:34,400 --> 00:55:38,799
memory in kernel space

00:55:36,160 --> 00:55:40,319
so if you call read for example to read

00:55:38,799 --> 00:55:43,280
the contents of a file

00:55:40,319 --> 00:55:44,799
into a memory buffer the kernel will not

00:55:43,280 --> 00:55:46,480
allow you to read into

00:55:44,799 --> 00:55:48,079
a memory buffer that lives in kernel

00:55:46,480 --> 00:55:50,160
space because that's beyond

00:55:48,079 --> 00:55:51,280
this boundary and it's just not

00:55:50,160 --> 00:55:54,160
something that we want to allow

00:55:51,280 --> 00:55:54,960
users to do in general but what happens

00:55:54,160 --> 00:55:56,640
what happens

00:55:54,960 --> 00:55:58,799
if there's a case where you need to be

00:55:56,640 --> 00:56:01,040
able to do this there are cases for

00:55:58,799 --> 00:56:02,880
example where the kernel itself

00:56:01,040 --> 00:56:05,040
needs to read a file in the kernel space

00:56:02,880 --> 00:56:07,200
memory there's a lot of things relating

00:56:05,040 --> 00:56:09,680
to network configuration for example

00:56:07,200 --> 00:56:11,520
that involve invoking system call code

00:56:09,680 --> 00:56:12,240
on buffers that are in kernel space so

00:56:11,520 --> 00:56:15,760
what do you do

00:56:12,240 --> 00:56:17,440
in that case in that case you call setfs

00:56:15,760 --> 00:56:19,599
setfs will move that boundary and

00:56:17,440 --> 00:56:21,920
essentially removes it

00:56:19,599 --> 00:56:23,200
making the entire virtual address space

00:56:21,920 --> 00:56:26,079
accessible to

00:56:23,200 --> 00:56:28,160
system calls and other such things so

00:56:26,079 --> 00:56:29,280
now you can call your system call from

00:56:28,160 --> 00:56:31,440
kernel space

00:56:29,280 --> 00:56:33,040
and it will not run in the security

00:56:31,440 --> 00:56:35,440
barrier and things will work

00:56:33,040 --> 00:56:36,880
this is all just fine as long as you

00:56:35,440 --> 00:56:39,760
don't forget to put

00:56:36,880 --> 00:56:41,440
the boundary back when you are done

00:56:39,760 --> 00:56:42,960
anybody who's paid attention to how

00:56:41,440 --> 00:56:46,480
these apis work

00:56:42,960 --> 00:56:49,040
knows that in a case like this somebody

00:56:46,480 --> 00:56:50,400
is always going to forget to put it back

00:56:49,040 --> 00:56:51,839
and in fact that has happened on

00:56:50,400 --> 00:56:54,079
occasion

00:56:51,839 --> 00:56:55,760
sometimes it's just sloppy coding or

00:56:54,079 --> 00:56:58,319
sometimes you get some particular

00:56:55,760 --> 00:56:58,960
obscure error path that manages to

00:56:58,319 --> 00:57:00,960
bypass

00:56:58,960 --> 00:57:03,200
the zfs call restoring the boundary

00:57:00,960 --> 00:57:05,200
there in any case what you end up with

00:57:03,200 --> 00:57:07,280
is a really insidious vulnerability

00:57:05,200 --> 00:57:09,520
because everything appears to work just

00:57:07,280 --> 00:57:11,920
fine there's no visible bug

00:57:09,520 --> 00:57:13,359
unless you try to exploit it somehow in

00:57:11,920 --> 00:57:15,280
which cases is there

00:57:13,359 --> 00:57:17,440
so this has been the cause of a number

00:57:15,280 --> 00:57:19,520
of security problems the number of cve

00:57:17,440 --> 00:57:22,160
entries over the years

00:57:19,520 --> 00:57:22,799
but the good news is that as of the 5.10

00:57:22,160 --> 00:57:24,880
kernel

00:57:22,799 --> 00:57:26,799
cytofast is now gone at least for a

00:57:24,880 --> 00:57:28,079
number of of the more commonly used

00:57:26,799 --> 00:57:30,240
architectures

00:57:28,079 --> 00:57:32,480
this is the result of work that has been

00:57:30,240 --> 00:57:36,000
done over the course of years

00:57:32,480 --> 00:57:39,359
especially over the last year and

00:57:36,000 --> 00:57:40,000
it required the replacement of of a lot

00:57:39,359 --> 00:57:42,240
of system call

00:57:40,000 --> 00:57:44,000
interfaces with internal interfaces that

00:57:42,240 --> 00:57:44,319
can do the sorts of things you need to

00:57:44,000 --> 00:57:47,359
do

00:57:44,319 --> 00:57:47,920
safely without having to manually mess

00:57:47,359 --> 00:57:50,160
with

00:57:47,920 --> 00:57:51,760
the security boundary there so as a

00:57:50,160 --> 00:57:53,440
result of all this work

00:57:51,760 --> 00:57:55,440
we have something that most users will

00:57:53,440 --> 00:57:56,799
not see except that perhaps

00:57:55,440 --> 00:57:58,559
they don't have to apply as many

00:57:56,799 --> 00:58:01,599
security updates going forward

00:57:58,559 --> 00:58:03,359
which is a good thing another legacy

00:58:01,599 --> 00:58:04,720
problem that is worth mentioning is the

00:58:03,359 --> 00:58:08,720
year 2038

00:58:04,720 --> 00:58:11,680
problem in january of 2038 the 32-bit

00:58:08,720 --> 00:58:15,040
time value that's used on 32-bit systems

00:58:11,680 --> 00:58:16,640
will overflow and then um time values of

00:58:15,040 --> 00:58:17,920
course can no longer be accurately

00:58:16,640 --> 00:58:19,760
represented at that point

00:58:17,920 --> 00:58:21,119
so you get corrupted times and other

00:58:19,760 --> 00:58:23,599
things to go wrong

00:58:21,119 --> 00:58:25,520
and you might ask well why do i really

00:58:23,599 --> 00:58:27,440
care about this because we're all using

00:58:25,520 --> 00:58:30,319
64-bit systems now

00:58:27,440 --> 00:58:32,400
even my phone is a 64-bit system but the

00:58:30,319 --> 00:58:34,000
truth of the matter is that 32-bit

00:58:32,400 --> 00:58:35,760
systems are still being built

00:58:34,000 --> 00:58:37,119
they're still being deployed and they

00:58:35,760 --> 00:58:40,079
will still be in use

00:58:37,119 --> 00:58:40,799
in in 2038. so we want to fix this

00:58:40,079 --> 00:58:43,520
problem

00:58:40,799 --> 00:58:45,200
we want to fix it soon because some of

00:58:43,520 --> 00:58:46,559
the systems being deployed now will

00:58:45,200 --> 00:58:50,079
still be around

00:58:46,559 --> 00:58:52,319
so again there is good news that the

00:58:50,079 --> 00:58:54,799
the work to fix this in the kernel was

00:58:52,319 --> 00:58:56,880
mostly completed in 2020

00:58:54,799 --> 00:58:58,559
done mostly earlier this year there are

00:58:56,880 --> 00:59:00,400
still some loose ends mostly in the area

00:58:58,559 --> 00:59:02,160
of file systems

00:59:00,400 --> 00:59:03,920
a few things that need to be fixed there

00:59:02,160 --> 00:59:05,520
but otherwise we have managed to fix

00:59:03,920 --> 00:59:07,520
this problem in the kernel

00:59:05,520 --> 00:59:08,880
finally this this was a many year effort

00:59:07,520 --> 00:59:10,559
to get there

00:59:08,880 --> 00:59:12,079
uh there's still a fair amount of work

00:59:10,559 --> 00:59:14,240
yet to be done in user space

00:59:12,079 --> 00:59:15,760
and for distributors to do they're

00:59:14,240 --> 00:59:17,760
working on it they have plans

00:59:15,760 --> 00:59:19,280
but the kernel side is just about done

00:59:17,760 --> 00:59:21,280
so again good news

00:59:19,280 --> 00:59:23,200
there's there's it's kind of a common

00:59:21,280 --> 00:59:24,880
aspect to these so i wanted to point out

00:59:23,200 --> 00:59:26,799
that neither of these problems was a

00:59:24,880 --> 00:59:27,920
small problem right both of them

00:59:26,799 --> 00:59:30,160
required

00:59:27,920 --> 00:59:32,240
effort over months or years really to

00:59:30,160 --> 00:59:35,520
get through and to fix them

00:59:32,240 --> 00:59:37,280
so you know fine but the problem can be

00:59:35,520 --> 00:59:39,359
this is the sort of work in the open

00:59:37,280 --> 00:59:41,119
source community that can be very hard

00:59:39,359 --> 00:59:44,160
to get funded

00:59:41,119 --> 00:59:45,440
there are a lot of people who work on

00:59:44,160 --> 00:59:47,040
the kernel there are a lot of companies

00:59:45,440 --> 00:59:49,359
that support work on the kernel

00:59:47,040 --> 00:59:51,280
we typically have about 200 companies

00:59:49,359 --> 00:59:52,319
supporting work on any given kernel

00:59:51,280 --> 00:59:55,359
release

00:59:52,319 --> 00:59:57,280
but they're still areas that many

00:59:55,359 --> 00:59:58,000
companies just don't see fit to try to

00:59:57,280 --> 00:59:59,920
support

00:59:58,000 --> 01:00:01,520
most of them are very focused on getting

00:59:59,920 --> 01:00:03,680
their own products working

01:00:01,520 --> 01:00:04,720
well with the kernel and don't much see

01:00:03,680 --> 01:00:07,119
beyond that

01:00:04,720 --> 01:00:08,400
so the kernel like just about any other

01:00:07,119 --> 01:00:10,480
open source project

01:00:08,400 --> 01:00:11,839
has certain dark areas of important core

01:00:10,480 --> 01:00:14,559
stuff that nobody sees

01:00:11,839 --> 01:00:16,720
as being their problem to fix

01:00:14,559 --> 01:00:18,480
nonetheless we were able to get the time

01:00:16,720 --> 01:00:22,799
and the effort to get these problems

01:00:18,480 --> 01:00:24,400
problems fixed and others as well so

01:00:22,799 --> 01:00:26,319
this this is good news i hope this

01:00:24,400 --> 01:00:27,040
continues as long as we are able to do

01:00:26,319 --> 01:00:29,520
this

01:00:27,040 --> 01:00:31,040
i think that the colonel has a long and

01:00:29,520 --> 01:00:32,559
bright future ahead of it

01:00:31,040 --> 01:00:35,119
if we ever get to a point where we

01:00:32,559 --> 01:00:37,280
really cannot get this work done

01:00:35,119 --> 01:00:40,400
then we're going to have trouble but for

01:00:37,280 --> 01:00:40,400
now we are doing well

01:00:40,640 --> 01:00:44,319
okay let's move on to a related topic

01:00:42,720 --> 01:00:46,160
which is security and in particular i

01:00:44,319 --> 01:00:47,680
want to talk about a couple of

01:00:46,160 --> 01:00:49,440
interesting upcoming security

01:00:47,680 --> 01:00:52,480
technologies that are

01:00:49,440 --> 01:00:54,480
worth keeping an eye on just as a sign

01:00:52,480 --> 01:00:56,480
of where things are going in this area

01:00:54,480 --> 01:00:58,000
so let's think about 64-bit machines

01:00:56,480 --> 01:01:00,400
again if you have

01:00:58,000 --> 01:01:02,559
a 64-bit machine that machine of course

01:01:00,400 --> 01:01:04,400
uses 64-bit pointers

01:01:02,559 --> 01:01:05,680
to refer to addresses in the virtual

01:01:04,400 --> 01:01:08,880
address space

01:01:05,680 --> 01:01:10,640
so if you think about arm 64 machines

01:01:08,880 --> 01:01:11,440
for example they have these 64-bit

01:01:10,640 --> 01:01:13,839
pointers

01:01:11,440 --> 01:01:14,480
but it turns out that 64-bits can

01:01:13,839 --> 01:01:17,200
address an

01:01:14,480 --> 01:01:18,079
awful lot of memory more than we can

01:01:17,200 --> 01:01:21,599
really

01:01:18,079 --> 01:01:23,280
expect to need to use anytime soon even

01:01:21,599 --> 01:01:24,880
if you take into account all the past

01:01:23,280 --> 01:01:27,119
predictions of how we're never going to

01:01:24,880 --> 01:01:31,040
need that much memory

01:01:27,119 --> 01:01:34,079
is still the case as a result on an rm64

01:01:31,040 --> 01:01:35,599
machine only 48 of those bits or

01:01:34,079 --> 01:01:38,000
in certain configurations on some

01:01:35,599 --> 01:01:40,240
hardware 52 of them at most

01:01:38,000 --> 01:01:42,720
are used to actually address memory the

01:01:40,240 --> 01:01:43,359
remaining bits remaining 12 or 16 bits

01:01:42,720 --> 01:01:46,799
at the top

01:01:43,359 --> 01:01:49,119
of the address are not used and thus

01:01:46,799 --> 01:01:50,480
could perhaps be put to another

01:01:49,119 --> 01:01:52,960
different good use

01:01:50,480 --> 01:01:54,480
there are a few uses that have been laid

01:01:52,960 --> 01:01:56,160
out for this but i want to talk about

01:01:54,480 --> 01:01:59,280
one in particular that's called

01:01:56,160 --> 01:02:01,440
the the memory type keys extension

01:01:59,280 --> 01:02:02,400
it looks like this you've got all those

01:02:01,440 --> 01:02:04,880
bits out there

01:02:02,400 --> 01:02:07,119
so set aside four of them in particular

01:02:04,880 --> 01:02:09,200
the the lower four bits of the

01:02:07,119 --> 01:02:10,240
of the uppermost byte and use that for

01:02:09,200 --> 01:02:13,119
key value

01:02:10,240 --> 01:02:15,760
so you can stick any arbitrary value

01:02:13,119 --> 01:02:18,079
between 0 and 15 in those four bits

01:02:15,760 --> 01:02:19,440
and call that the key for this

01:02:18,079 --> 01:02:21,760
particular pointer

01:02:19,440 --> 01:02:22,799
the address pointed to by this pointer

01:02:21,760 --> 01:02:24,640
does not change

01:02:22,799 --> 01:02:27,359
but it is now qualified by this key

01:02:24,640 --> 01:02:29,119
value and that has an interesting use

01:02:27,359 --> 01:02:31,119
if you then look at what you can do with

01:02:29,119 --> 01:02:32,799
memory because

01:02:31,119 --> 01:02:34,480
this technology also allows you to

01:02:32,799 --> 01:02:36,799
assign keys to memory

01:02:34,480 --> 01:02:38,640
at about a cache line resolution so i've

01:02:36,799 --> 01:02:40,319
just tried to diagram it here

01:02:38,640 --> 01:02:41,599
with the different colors where you see

01:02:40,319 --> 01:02:43,440
different parts of memory different

01:02:41,599 --> 01:02:44,640
regions of memory having different keys

01:02:43,440 --> 01:02:46,559
assigned to it

01:02:44,640 --> 01:02:48,000
as indicated by the different colors

01:02:46,559 --> 01:02:49,680
there so

01:02:48,000 --> 01:02:51,599
now we have keys and pointers we have

01:02:49,680 --> 01:02:53,680
keys in in memory

01:02:51,599 --> 01:02:55,760
when you go to dereference one of those

01:02:53,680 --> 01:02:57,440
pointers in a program

01:02:55,760 --> 01:02:59,440
the processor will check that key and

01:02:57,440 --> 01:03:00,480
compare it to the key that is assigned

01:02:59,440 --> 01:03:03,280
to the memory

01:03:00,480 --> 01:03:05,359
so if the keys match is is the case here

01:03:03,280 --> 01:03:08,319
we can see the colors are the same

01:03:05,359 --> 01:03:09,920
then the dereference continues as always

01:03:08,319 --> 01:03:13,839
and everything continues

01:03:09,920 --> 01:03:15,760
and works as it always did if though

01:03:13,839 --> 01:03:17,839
those keys do not match then the

01:03:15,760 --> 01:03:19,680
processor will reject this operation in

01:03:17,839 --> 01:03:22,240
fact it will probably kill the process

01:03:19,680 --> 01:03:23,920
that is trying to do it and flag a bug

01:03:22,240 --> 01:03:25,200
that is happening because the key no

01:03:23,920 --> 01:03:28,319
longer matched

01:03:25,200 --> 01:03:30,160
what was there so this is an interesting

01:03:28,319 --> 01:03:31,440
technology and it has some some

01:03:30,160 --> 01:03:34,000
interesting things that you can do with

01:03:31,440 --> 01:03:37,359
it for example

01:03:34,000 --> 01:03:39,440
use after free bugs are often

01:03:37,359 --> 01:03:40,400
are often a source of security problems

01:03:39,440 --> 01:03:43,440
in the kernel

01:03:40,400 --> 01:03:44,960
where kernel code will free a range of

01:03:43,440 --> 01:03:46,880
memory but it actually isn't

01:03:44,960 --> 01:03:48,720
finished with it yet and that memory can

01:03:46,880 --> 01:03:51,760
be reallocated somewhere else

01:03:48,720 --> 01:03:54,000
and then trouble results so

01:03:51,760 --> 01:03:55,039
if your memory allocated reserves one

01:03:54,000 --> 01:03:56,799
key value

01:03:55,039 --> 01:03:58,319
for memory that's not actually allocated

01:03:56,799 --> 01:04:00,960
to any purpose

01:03:58,319 --> 01:04:01,520
and then as soon as you free a range of

01:04:00,960 --> 01:04:03,119
memory

01:04:01,520 --> 01:04:05,200
that the key of that memory is

01:04:03,119 --> 01:04:07,280
immediately set to this unused value

01:04:05,200 --> 01:04:09,359
then any use of the memory after freeing

01:04:07,280 --> 01:04:11,599
it will generate a trap and would be

01:04:09,359 --> 01:04:13,680
caught and so these sorts of bugs will

01:04:11,599 --> 01:04:15,280
no longer go unnoticed

01:04:13,680 --> 01:04:17,440
similarly buffer overflow

01:04:15,280 --> 01:04:19,760
vulnerabilities can be found this way

01:04:17,440 --> 01:04:21,760
if you ensure that adjacent objects in

01:04:19,760 --> 01:04:23,359
memory have different key values

01:04:21,760 --> 01:04:25,359
then as soon as a pointer gets

01:04:23,359 --> 01:04:27,680
incremented past the end of one

01:04:25,359 --> 01:04:29,920
object the key values don't match

01:04:27,680 --> 01:04:31,599
anymore and once again you get a trap

01:04:29,920 --> 01:04:34,240
and you catch the problem

01:04:31,599 --> 01:04:36,160
this technology can also catch problems

01:04:34,240 --> 01:04:37,839
with stray pointers in general

01:04:36,160 --> 01:04:39,680
whether it's just a completely corrupted

01:04:37,839 --> 01:04:42,319
value from a bug in the kernel

01:04:39,680 --> 01:04:44,079
or whether it's a pointer that hasn't

01:04:42,319 --> 01:04:47,440
been somehow corrupted

01:04:44,079 --> 01:04:49,200
by by an attacker

01:04:47,440 --> 01:04:51,200
who is able to override a pointer but

01:04:49,200 --> 01:04:52,000
does not know the correct key value to

01:04:51,200 --> 01:04:53,839
stick with it

01:04:52,000 --> 01:04:55,119
and so an attack is caught in that

01:04:53,839 --> 01:04:56,720
regard so

01:04:55,119 --> 01:04:58,720
there's a lot of ways that we can catch

01:04:56,720 --> 01:04:59,680
security problems both when code is

01:04:58,720 --> 01:05:01,760
being developed

01:04:59,680 --> 01:05:03,359
and also in production and we're getting

01:05:01,760 --> 01:05:04,720
more help from the hardware than we used

01:05:03,359 --> 01:05:06,799
to here

01:05:04,720 --> 01:05:08,000
or at least we will be once it's out

01:05:06,799 --> 01:05:09,039
because you can't actually buy a

01:05:08,000 --> 01:05:10,960
processor that

01:05:09,039 --> 01:05:12,799
implements this functionality yet but

01:05:10,960 --> 01:05:14,640
they're coming they promise

01:05:12,799 --> 01:05:17,039
and once it's out there the kernel will

01:05:14,640 --> 01:05:18,799
in fact be ready to use this technology

01:05:17,039 --> 01:05:21,200
and to make our systems more secure than

01:05:18,799 --> 01:05:23,680
they were before

01:05:21,200 --> 01:05:25,119
another related technology that i would

01:05:23,680 --> 01:05:26,799
like to talk about

01:05:25,119 --> 01:05:28,880
is something that i'm calling memory

01:05:26,799 --> 01:05:29,440
hiding techniques so what are those

01:05:28,880 --> 01:05:31,599
let's

01:05:29,440 --> 01:05:32,640
take a look once again at this diagram i

01:05:31,599 --> 01:05:34,960
put up before

01:05:32,640 --> 01:05:36,240
of the virtual address space and what i

01:05:34,960 --> 01:05:38,160
want to point out here

01:05:36,240 --> 01:05:39,599
is that this is the address space as it

01:05:38,160 --> 01:05:42,319
is seen by

01:05:39,599 --> 01:05:44,240
a process running in user space it

01:05:42,319 --> 01:05:45,680
includes actually the entire kernel in

01:05:44,240 --> 01:05:47,599
the upper part of it

01:05:45,680 --> 01:05:50,799
user space cannot actually access the

01:05:47,599 --> 01:05:53,119
kernel because the page protections will

01:05:50,799 --> 01:05:54,799
prohibit that will block it but in a

01:05:53,119 --> 01:05:56,880
sense that the kernel is still visible

01:05:54,799 --> 01:05:58,400
there it's in the address space

01:05:56,880 --> 01:05:59,839
things don't have to be done this way

01:05:58,400 --> 01:06:00,640
but they have been really since the

01:05:59,839 --> 01:06:02,400
beginning

01:06:00,640 --> 01:06:03,760
for performance purposes right because

01:06:02,400 --> 01:06:06,240
as soon

01:06:03,760 --> 01:06:08,319
as you try to separate those address

01:06:06,240 --> 01:06:09,680
spaces you greatly increase the cost of

01:06:08,319 --> 01:06:12,400
every context switch

01:06:09,680 --> 01:06:13,680
between kernel and user space and and

01:06:12,400 --> 01:06:15,760
the performance

01:06:13,680 --> 01:06:17,680
impact is readily false and we've not

01:06:15,760 --> 01:06:19,359
wanted to do that

01:06:17,680 --> 01:06:20,960
so we kept those address spaces all

01:06:19,359 --> 01:06:22,799
together at least we did

01:06:20,960 --> 01:06:24,640
until the meltdown vulnerability came

01:06:22,799 --> 01:06:28,079
about meltdown of course

01:06:24,640 --> 01:06:30,000
allowed the use of a hardware problem to

01:06:28,079 --> 01:06:32,240
bypass the page protections

01:06:30,000 --> 01:06:34,240
and read memory that was in kernel space

01:06:32,240 --> 01:06:36,319
leading to all kinds of vulnerabilities

01:06:34,240 --> 01:06:37,680
so at that point we could no longer

01:06:36,319 --> 01:06:40,400
share things in that way

01:06:37,680 --> 01:06:41,760
and the way meltdown was fixed was to

01:06:40,400 --> 01:06:43,599
destroy that mapping

01:06:41,760 --> 01:06:45,359
in the kernel space when user space is

01:06:43,599 --> 01:06:47,520
running so that

01:06:45,359 --> 01:06:48,559
it is no longer visible in this way and

01:06:47,520 --> 01:06:50,720
we did in fact

01:06:48,559 --> 01:06:52,160
duly have a performance set as a result

01:06:50,720 --> 01:06:53,920
of it a fairly big one

01:06:52,160 --> 01:06:55,359
but we were it was the only thing that

01:06:53,920 --> 01:06:56,960
we could do to

01:06:55,359 --> 01:06:59,440
address this particular hardware

01:06:56,960 --> 01:07:01,200
vulnerability so

01:06:59,440 --> 01:07:02,880
this is unfortunate but we had to do it

01:07:01,200 --> 01:07:05,039
but it points

01:07:02,880 --> 01:07:06,400
at a more general principle that people

01:07:05,039 --> 01:07:07,359
started to think about a little bit more

01:07:06,400 --> 01:07:09,280
which is that

01:07:07,359 --> 01:07:10,960
memory that is not visible is more

01:07:09,280 --> 01:07:12,960
difficult to attack

01:07:10,960 --> 01:07:14,559
as long as the kernel was visible in a

01:07:12,960 --> 01:07:16,240
process's address space

01:07:14,559 --> 01:07:18,319
there were only the page protections

01:07:16,240 --> 01:07:19,119
that were preventing an attack on that

01:07:18,319 --> 01:07:20,880
memory

01:07:19,119 --> 01:07:23,599
once it is not visible once there is

01:07:20,880 --> 01:07:26,480
simply no path to it at all

01:07:23,599 --> 01:07:27,760
then it becomes much harder for an

01:07:26,480 --> 01:07:30,079
attacker to get at

01:07:27,760 --> 01:07:32,079
because there's a whole separate set of

01:07:30,079 --> 01:07:34,160
obstacles that have to be overcome

01:07:32,079 --> 01:07:35,920
to get memory that you cannot see at all

01:07:34,160 --> 01:07:37,599
so if you can do it here perhaps you can

01:07:35,920 --> 01:07:39,920
do this elsewhere as well

01:07:37,599 --> 01:07:41,839
so some of the things that are coming in

01:07:39,920 --> 01:07:44,960
the pipeline in the near future

01:07:41,839 --> 01:07:46,400
include a new system call called mfd

01:07:44,960 --> 01:07:49,440
secret

01:07:46,400 --> 01:07:51,920
this system call will allocate

01:07:49,440 --> 01:07:53,119
a range of memory into a process that is

01:07:51,920 --> 01:07:55,119
absolutely hidden from

01:07:53,119 --> 01:07:58,079
the rest of the system the kernel cannot

01:07:55,119 --> 01:08:00,000
access it no other process can access it

01:07:58,079 --> 01:08:01,280
and in fact it can even be kept out of

01:08:00,000 --> 01:08:03,359
the system caches

01:08:01,280 --> 01:08:04,799
so it's it makes it it's a fairly

01:08:03,359 --> 01:08:06,559
expensive thing to do

01:08:04,799 --> 01:08:08,160
but if it is used in moderation for

01:08:06,559 --> 01:08:10,960
example to allocate buffers to hold

01:08:08,160 --> 01:08:13,599
cryptographic graphic keys

01:08:10,960 --> 01:08:15,119
then it can increase the security of of

01:08:13,599 --> 01:08:16,640
your system and increase your

01:08:15,119 --> 01:08:18,719
resilience against certain kinds of

01:08:16,640 --> 01:08:20,480
attacks so this system call

01:08:18,719 --> 01:08:22,080
i would expect to be added to the kernel

01:08:20,480 --> 01:08:24,799
sometime in the next year

01:08:22,080 --> 01:08:27,040
it seems to be about ready to go secure

01:08:24,799 --> 01:08:29,040
enclaves are a hardware technology

01:08:27,040 --> 01:08:31,040
and are based perhaps more on encryption

01:08:29,040 --> 01:08:33,120
than on hiding a memory

01:08:31,040 --> 01:08:35,120
but they allow virtualized guests in

01:08:33,120 --> 01:08:37,920
particular or other sorts of

01:08:35,120 --> 01:08:39,199
of code bodies to to run in a separate

01:08:37,920 --> 01:08:40,560
environment where their memory is

01:08:39,199 --> 01:08:42,560
encrypted

01:08:40,560 --> 01:08:44,000
and the processor itself handles the

01:08:42,560 --> 01:08:45,600
encryption and decryption so that when

01:08:44,000 --> 01:08:47,839
you're running outside of that special

01:08:45,600 --> 01:08:49,759
context you cannot access it

01:08:47,839 --> 01:08:51,199
so once again virtual machines can run

01:08:49,759 --> 01:08:52,799
with their memory encrypted

01:08:51,199 --> 01:08:55,359
the host kernel cannot access that

01:08:52,799 --> 01:08:57,920
memory and neither can other guests

01:08:55,359 --> 01:09:00,239
this technology is is out there it has

01:08:57,920 --> 01:09:02,159
had some security issues of its own

01:09:00,239 --> 01:09:03,440
so far one assumes those will be worked

01:09:02,159 --> 01:09:06,319
out over time

01:09:03,440 --> 01:09:07,520
and this will become put into more

01:09:06,319 --> 01:09:09,440
common use

01:09:07,520 --> 01:09:11,679
meanwhile though people working on other

01:09:09,440 --> 01:09:13,279
techniques such as the things called kvm

01:09:11,679 --> 01:09:15,759
protected memory

01:09:13,279 --> 01:09:17,759
this is a kernel technique that allows a

01:09:15,759 --> 01:09:18,960
virtual machine running under the kvm

01:09:17,759 --> 01:09:21,359
hypervisor

01:09:18,960 --> 01:09:23,120
to once again remove its memory from the

01:09:21,359 --> 01:09:25,440
visibility of the host kernel

01:09:23,120 --> 01:09:27,839
and from the hypervisor so the only the

01:09:25,440 --> 01:09:30,080
virtual machine can see its memory

01:09:27,839 --> 01:09:31,279
this once again will protect the virtual

01:09:30,080 --> 01:09:32,880
machine against the

01:09:31,279 --> 01:09:35,040
the kernel on the host that is running

01:09:32,880 --> 01:09:36,799
on protected against guests and other

01:09:35,040 --> 01:09:39,920
virtual machines and so on

01:09:36,799 --> 01:09:43,279
for a relatively low cost so this this

01:09:39,920 --> 01:09:45,600
particular work has a ways to go yet

01:09:43,279 --> 01:09:46,880
so i can't really make a prediction as

01:09:45,600 --> 01:09:48,080
to when it will make it into the

01:09:46,880 --> 01:09:49,600
mainline kernel

01:09:48,080 --> 01:09:51,359
but there's definitely some some

01:09:49,600 --> 01:09:53,359
interest behind it and i think we will

01:09:51,359 --> 01:09:55,280
see it come in sooner or later

01:09:53,359 --> 01:09:56,719
and once again increase the protection

01:09:55,280 --> 01:09:58,239
of of our

01:09:56,719 --> 01:10:00,400
systems especially those running

01:09:58,239 --> 01:10:01,679
virtualized guests the last thing i

01:10:00,400 --> 01:10:05,040
wanted to talk about in

01:10:01,679 --> 01:10:06,400
the security context was the the ongoing

01:10:05,040 --> 01:10:09,760
effort to simply

01:10:06,400 --> 01:10:12,159
clean up the code and fix bugs this is

01:10:09,760 --> 01:10:14,000
happening in every kernel release

01:10:12,159 --> 01:10:16,080
hundreds and often thousands of patches

01:10:14,000 --> 01:10:18,239
going into every single chrono release

01:10:16,080 --> 01:10:19,120
just doing basic code cleanups fixing

01:10:18,239 --> 01:10:21,280
problematic

01:10:19,120 --> 01:10:22,719
code patterns and so on it's kind of

01:10:21,280 --> 01:10:24,320
thankless work it doesn't bring

01:10:22,719 --> 01:10:26,560
sort of glory that other sorts of kernel

01:10:24,320 --> 01:10:28,080
patches do but we owe a big debt to the

01:10:26,560 --> 01:10:29,760
people who are doing this work

01:10:28,080 --> 01:10:31,840
because it makes our kernel both more

01:10:29,760 --> 01:10:32,400
secure and more maintainable going

01:10:31,840 --> 01:10:34,000
forward

01:10:32,400 --> 01:10:36,719
and i'm glad that this work is

01:10:34,000 --> 01:10:38,800
continuing to be done

01:10:36,719 --> 01:10:40,480
so with my remaining time i wanted to

01:10:38,800 --> 01:10:42,560
talk about one last topic

01:10:40,480 --> 01:10:44,719
and that was tools and in particular the

01:10:42,560 --> 01:10:45,679
tools that we use to work on the kernel

01:10:44,719 --> 01:10:47,280
itself

01:10:45,679 --> 01:10:48,800
this is an area that we have not always

01:10:47,280 --> 01:10:52,239
done all that well in

01:10:48,800 --> 01:10:55,280
but well as i'll get to this

01:10:52,239 --> 01:10:57,360
let's go back to 1975.

01:10:55,280 --> 01:10:59,040
there's a guy named frederick brooks who

01:10:57,360 --> 01:11:00,960
put out an influential book at the time

01:10:59,040 --> 01:11:03,440
called the mythical man month

01:11:00,960 --> 01:11:05,679
this book was famous for the the quote

01:11:03,440 --> 01:11:07,120
that adding manpower to late software

01:11:05,679 --> 01:11:08,960
project makes it later

01:11:07,120 --> 01:11:10,880
if your project is running behind you

01:11:08,960 --> 01:11:11,600
cannot fix it by adding more developers

01:11:10,880 --> 01:11:13,280
to it

01:11:11,600 --> 01:11:15,679
in fact you will make things worse

01:11:13,280 --> 01:11:17,679
because the

01:11:15,679 --> 01:11:19,280
the overhead of just keeping all these

01:11:17,679 --> 01:11:20,239
people on the same page and getting them

01:11:19,280 --> 01:11:22,800
to work together

01:11:20,239 --> 01:11:25,280
will slow you down even more so that was

01:11:22,800 --> 01:11:28,239
the case in 1975 when my ask

01:11:25,280 --> 01:11:29,199
if it still applies so we can look

01:11:28,239 --> 01:11:31,440
briefly at the

01:11:29,199 --> 01:11:34,800
the kernel development history version

01:11:31,440 --> 01:11:35,920
0.01 released in 1991 had exactly one

01:11:34,800 --> 01:11:39,440
developer

01:11:35,920 --> 01:11:42,239
by 2620 we had 741 of them

01:11:39,440 --> 01:11:44,480
and by the time we get to the 5.8 kernel

01:11:42,239 --> 01:11:45,280
this year we had almost 2 000 developers

01:11:44,480 --> 01:11:47,040
working on it

01:11:45,280 --> 01:11:49,520
so we are certainly adding developers

01:11:47,040 --> 01:11:51,280
nobody can doubt that

01:11:49,520 --> 01:11:52,960
likewise nobody can doubt that we are

01:11:51,280 --> 01:11:55,040
nowhere near finished

01:11:52,960 --> 01:11:57,120
in fact we may be further from finished

01:11:55,040 --> 01:11:59,920
developing the kernel than we ever were

01:11:57,120 --> 01:12:00,880
so with regard to the kernel perhaps is

01:11:59,920 --> 01:12:03,120
really true

01:12:00,880 --> 01:12:04,640
the adding adding developers has only

01:12:03,120 --> 01:12:06,000
made things later who knows

01:12:04,640 --> 01:12:08,159
but in any case that's not what i'm

01:12:06,000 --> 01:12:08,719
actually here to talk about there was

01:12:08,159 --> 01:12:11,120
another

01:12:08,719 --> 01:12:12,320
observation in this book where he was

01:12:11,120 --> 01:12:14,960
talking about how

01:12:12,320 --> 01:12:15,520
the teams organized around software

01:12:14,960 --> 01:12:18,320
projects

01:12:15,520 --> 01:12:19,920
should be set up and he said that every

01:12:18,320 --> 01:12:21,679
one of these teams should have a tool

01:12:19,920 --> 01:12:23,040
smith somebody who's not working on the

01:12:21,679 --> 01:12:25,679
actual end product

01:12:23,040 --> 01:12:27,440
but who's working on the tools that the

01:12:25,679 --> 01:12:28,239
other developers use to create this end

01:12:27,440 --> 01:12:30,000
product

01:12:28,239 --> 01:12:32,560
and this is an area where we have tended

01:12:30,000 --> 01:12:34,159
to fall down in the past

01:12:32,560 --> 01:12:35,520
over the course of a year there are over

01:12:34,159 --> 01:12:36,000
four thousand developers who will

01:12:35,520 --> 01:12:38,000
contribute

01:12:36,000 --> 01:12:39,520
to the kernel and as i mentioned before

01:12:38,000 --> 01:12:40,640
there are certain things that just don't

01:12:39,520 --> 01:12:42,880
get done

01:12:40,640 --> 01:12:44,159
certain problems that nobody sees it as

01:12:42,880 --> 01:12:45,679
being theirs to fix

01:12:44,159 --> 01:12:48,239
and one of those has certainly been

01:12:45,679 --> 01:12:49,360
tools so the kernel project has in many

01:12:48,239 --> 01:12:51,280
ways

01:12:49,360 --> 01:12:53,040
lagged behind other free software

01:12:51,280 --> 01:12:53,679
projects in terms of the tools that it

01:12:53,040 --> 01:12:57,760
use

01:12:53,679 --> 01:12:59,199
uses and that has hurt us at times so

01:12:57,760 --> 01:13:01,360
what's happening though is that the

01:12:59,199 --> 01:13:03,600
situation is getting a lot better

01:13:01,360 --> 01:13:06,640
over the last few years we have acquired

01:13:03,600 --> 01:13:08,880
a whole set of testing and fuzzing tools

01:13:06,640 --> 01:13:10,159
that have found hundreds if not

01:13:08,880 --> 01:13:12,320
thousands of bugs

01:13:10,159 --> 01:13:13,280
before we release the kernels before

01:13:12,320 --> 01:13:16,880
users find them

01:13:13,280 --> 01:13:18,640
or before attackers can exploit them

01:13:16,880 --> 01:13:20,320
so this has been a good thing because we

01:13:18,640 --> 01:13:21,199
were not very good about testing for a

01:13:20,320 --> 01:13:22,880
long time

01:13:21,199 --> 01:13:24,960
it was often said that testing the

01:13:22,880 --> 01:13:26,880
kernel was the reason that we keep users

01:13:24,960 --> 01:13:28,880
around so they can do that for us

01:13:26,880 --> 01:13:30,800
but we understand we need a better story

01:13:28,880 --> 01:13:31,760
than that we need a better story still

01:13:30,800 --> 01:13:33,120
than we have now

01:13:31,760 --> 01:13:35,199
but things are heading in the right

01:13:33,120 --> 01:13:35,840
direction the other aspect of this

01:13:35,199 --> 01:13:37,199
though

01:13:35,840 --> 01:13:39,560
is tools for the development of the

01:13:37,199 --> 01:13:41,600
kernel on the other side

01:13:39,560 --> 01:13:43,199
lord.kernel.org is a comprehensive

01:13:41,600 --> 01:13:44,640
archive of all of our kernel mailing

01:13:43,199 --> 01:13:47,120
lists going back to the beginning

01:13:44,640 --> 01:13:49,360
wherever possible something we never had

01:13:47,120 --> 01:13:50,239
until just a couple years or so ago but

01:13:49,360 --> 01:13:52,239
it has already

01:13:50,239 --> 01:13:53,920
rendered itself indispensable as a way

01:13:52,239 --> 01:13:55,679
of finding our discussions

01:13:53,920 --> 01:13:57,760
understanding how it is that we decided

01:13:55,679 --> 01:13:59,840
to do certain things

01:13:57,760 --> 01:14:01,840
an even more recent tool is a little

01:13:59,840 --> 01:14:03,920
thing called b4

01:14:01,840 --> 01:14:05,440
if you give before the message id of a

01:14:03,920 --> 01:14:07,679
patch of interest

01:14:05,440 --> 01:14:09,920
or just in fact pipe the patch into it

01:14:07,679 --> 01:14:11,360
it will go to lord.kernel.org

01:14:09,920 --> 01:14:13,679
download the patch in fact it will

01:14:11,360 --> 01:14:15,760
download an entire patch history

01:14:13,679 --> 01:14:17,199
or patch series all the patches are

01:14:15,760 --> 01:14:19,920
associated with that patch

01:14:17,199 --> 01:14:20,560
you also download any replies to it

01:14:19,920 --> 01:14:23,600
extract

01:14:20,560 --> 01:14:24,320
any tags like reviewed by tags or act by

01:14:23,600 --> 01:14:26,320
tags

01:14:24,320 --> 01:14:28,719
apply those to the patches that they

01:14:26,320 --> 01:14:30,800
apply to and package the whole thing up

01:14:28,719 --> 01:14:32,800
as a nice little mailbox file that you

01:14:30,800 --> 01:14:34,719
can then just apply directly to your

01:14:32,800 --> 01:14:38,400
particular git repository

01:14:34,719 --> 01:14:39,840
it has eased a bunch of manual work that

01:14:38,400 --> 01:14:41,679
kernel developers all had their own

01:14:39,840 --> 01:14:44,000
scripts for for

01:14:41,679 --> 01:14:46,320
for years it's a tool that we needed but

01:14:44,000 --> 01:14:48,560
nobody actually sat down to develop it

01:14:46,320 --> 01:14:50,320
until constantine the linux foundation

01:14:48,560 --> 01:14:51,920
did that a couple of years ago

01:14:50,320 --> 01:14:53,760
he's got a lot of plans for it you can

01:14:51,920 --> 01:14:55,280
see the article linked there for

01:14:53,760 --> 01:14:57,360
some of the other stuff that's going on

01:14:55,280 --> 01:14:59,199
including patch attestation all that

01:14:57,360 --> 01:15:01,360
but it has already really made the life

01:14:59,199 --> 01:15:04,480
of kernel subsystem maintainers easier

01:15:01,360 --> 01:15:05,040
by having that so we're we're doing

01:15:04,480 --> 01:15:07,360
better

01:15:05,040 --> 01:15:08,480
we actually have tool smiths i hope we

01:15:07,360 --> 01:15:11,120
get more of them

01:15:08,480 --> 01:15:12,800
in fact i would say to anybody out there

01:15:11,120 --> 01:15:14,000
that if you want to participate in

01:15:12,800 --> 01:15:15,520
kernel development

01:15:14,000 --> 01:15:16,719
but you don't necessarily feel that

01:15:15,520 --> 01:15:17,600
you're up for working on the kernel

01:15:16,719 --> 01:15:20,640
itself

01:15:17,600 --> 01:15:20,960
working on our tooling is an area that

01:15:20,640 --> 01:15:23,360
would

01:15:20,960 --> 01:15:24,480
generate a huge payback and i would

01:15:23,360 --> 01:15:26,080
encourage people to

01:15:24,480 --> 01:15:28,320
to look at the the things that we need

01:15:26,080 --> 01:15:29,679
done there and to help out in that

01:15:28,320 --> 01:15:32,080
regard

01:15:29,679 --> 01:15:33,280
and with that i'm basically out of time

01:15:32,080 --> 01:15:34,880
so there's a whole

01:15:33,280 --> 01:15:36,159
ton of things i could have talked about

01:15:34,880 --> 01:15:37,679
here many of these could have filled the

01:15:36,159 --> 01:15:39,600
whole talk by themselves

01:15:37,679 --> 01:15:41,199
but there's just not time to do that in

01:15:39,600 --> 01:15:43,360
a 30-minute slot

01:15:41,199 --> 01:15:45,520
so much of the stuff you can read about

01:15:43,360 --> 01:15:46,960
on lwn of course in other places

01:15:45,520 --> 01:15:48,960
there's a lot going on in the kernel

01:15:46,960 --> 01:15:50,560
community we are staying busy we are

01:15:48,960 --> 01:15:53,360
generating new kernels

01:15:50,560 --> 01:15:54,000
at a pace and i think in general things

01:15:53,360 --> 01:15:56,719
are going

01:15:54,000 --> 01:15:58,080
pretty well and at that point i am done

01:15:56,719 --> 01:15:58,800
i thank you all very much for your

01:15:58,080 --> 01:16:00,640
attention

01:15:58,800 --> 01:16:02,159
and i wish you the best for the rest of

01:16:00,640 --> 01:16:06,239
the open source summit japan

01:16:02,159 --> 01:16:08,080
and for your holiday season thank you

01:16:06,239 --> 01:16:10,400
thank you so much all the speakers uh

01:16:08,080 --> 01:16:12,560
for joining us

01:16:10,400 --> 01:16:14,239
we now have a break before conference

01:16:12,560 --> 01:16:17,679
session begins at

01:16:14,239 --> 01:16:21,600
10 25 a.m in japan time

01:16:17,679 --> 01:16:25,440
so stretch grab some coffee and snack

01:16:21,600 --> 01:16:28,159
then join one of the breakout sessions

01:16:25,440 --> 01:16:29,120
and don't miss out our live music duo

01:16:28,159 --> 01:16:32,239
performance

01:16:29,120 --> 01:16:34,320
of the japanese koto koto is the

01:16:32,239 --> 01:16:35,280
string instrument japanese string

01:16:34,320 --> 01:16:39,040
instrument

01:16:35,280 --> 01:16:41,120
and uh shakuhachi bamboo flute so

01:16:39,040 --> 01:16:43,520
shakuhachi is a flute

01:16:41,120 --> 01:16:44,480
but made by bamboo and that will uh

01:16:43,520 --> 01:16:48,880
begins at

01:16:44,480 --> 01:16:51,440
uh 205 pm in japan time

01:16:48,880 --> 01:16:52,560
and with that please have a great day

01:16:51,440 --> 01:16:57,920
and please enjoy

01:16:52,560 --> 01:16:57,920

YouTube URL: https://www.youtube.com/watch?v=fO5H1iRlsJY


