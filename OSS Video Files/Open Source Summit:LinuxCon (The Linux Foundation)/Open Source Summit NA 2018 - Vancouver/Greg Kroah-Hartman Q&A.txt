Title: Greg Kroah-Hartman Q&A
Publication date: 2018-10-05
Playlist: Open Source Summit NA 2018 - Vancouver
Description: 
	Linux kernel maintainer Greg Kroah-Hartman talks with Swapnil Bhartiya about Linux kernel security
Captions: 
	00:00:10,269 --> 00:00:14,929
why is secure Disick you know it's

00:00:12,919 --> 00:00:16,219
becoming important for you I mean it's

00:00:14,929 --> 00:00:19,279
important right I mean one thing is

00:00:16,219 --> 00:00:21,080
Linux runs the world right so we want to

00:00:19,279 --> 00:00:23,570
make sure that things are secure like

00:00:21,080 --> 00:00:26,060
your device you have your whole life

00:00:23,570 --> 00:00:27,439
history on your phone right contact

00:00:26,060 --> 00:00:28,789
information and all the stuff you want

00:00:27,439 --> 00:00:30,740
to make sure that that's secure that

00:00:28,789 --> 00:00:32,960
that's something that you can trust that

00:00:30,740 --> 00:00:34,280
you can trust other people don't grab I

00:00:32,960 --> 00:00:36,920
mean you have access to your bank

00:00:34,280 --> 00:00:39,110
account on your front right I mean so

00:00:36,920 --> 00:00:41,330
the basic underlying building blocks of

00:00:39,110 --> 00:00:43,280
what those things rely on you want to

00:00:41,330 --> 00:00:44,750
make sure are secure and I said earlier

00:00:43,280 --> 00:00:46,130
with leanness I think it's also a matter

00:00:44,750 --> 00:00:48,140
of education people more aware of this

00:00:46,130 --> 00:00:51,430
but it's also a matter of a combination

00:00:48,140 --> 00:00:54,890
that that awareness combined with

00:00:51,430 --> 00:00:56,390
reliance or use of this technology in

00:00:54,890 --> 00:00:57,800
the world taking over and that's true

00:00:56,390 --> 00:01:01,130
you know the whole world is running on

00:00:57,800 --> 00:01:03,009
Linux and open source technology but at

00:01:01,130 --> 00:01:06,470
the same time there are so many layers

00:01:03,009 --> 00:01:08,030
so which one of those is the one that

00:01:06,470 --> 00:01:10,250
you get you know the most mad and angry

00:01:08,030 --> 00:01:14,180
node I saw the whole spectrum meltdown

00:01:10,250 --> 00:01:16,850
problem what made us so mad in a way is

00:01:14,180 --> 00:01:18,980
we were fixing a bug and somebody else's

00:01:16,850 --> 00:01:20,810
layer right I mean taking ownership of

00:01:18,980 --> 00:01:23,210
our own problem that's great we have

00:01:20,810 --> 00:01:25,340
security bugs or problems we'll fix them

00:01:23,210 --> 00:01:26,920
but when we have to fix the problems of

00:01:25,340 --> 00:01:29,450
hardware or other issues that's

00:01:26,920 --> 00:01:31,070
frustrating times right now the goal of

00:01:29,450 --> 00:01:32,810
a kernel is to paper over all the bugs

00:01:31,070 --> 00:01:36,020
in the hardware it's just that usually

00:01:32,810 --> 00:01:37,729
the bug isn't in the CPU I write drivers

00:01:36,020 --> 00:01:39,470
so we're always working around drivers

00:01:37,729 --> 00:01:41,420
issues this one if you ride read device

00:01:39,470 --> 00:01:43,850
driver code they're sometimes like one

00:01:41,420 --> 00:01:45,710
thing this line is like do this do it

00:01:43,850 --> 00:01:47,000
again hope it was gonna really work the

00:01:45,710 --> 00:01:49,400
third time is you're gonna try it at

00:01:47,000 --> 00:01:50,810
work so let me just stuck right so

00:01:49,400 --> 00:01:53,000
that's working around bugs and hardware

00:01:50,810 --> 00:01:54,560
but now the bugs and the processors one

00:01:53,000 --> 00:01:56,270
also interesting thing about the whole

00:01:54,560 --> 00:01:59,030
spectrum Melton is the complexity of

00:01:56,270 --> 00:02:01,010
that black box of the CPU is much much

00:01:59,030 --> 00:02:02,780
larger than it used to be right because

00:02:01,010 --> 00:02:03,799
they're doing in order to eke out all

00:02:02,780 --> 00:02:04,920
the performance and all the new things

00:02:03,799 --> 00:02:07,020
like that you have to do

00:02:04,920 --> 00:02:08,610
ooh extra-special tricks and things like

00:02:07,020 --> 00:02:09,810
that and they have been and sometimes

00:02:08,610 --> 00:02:12,300
those tricks come back to bite you in

00:02:09,810 --> 00:02:15,000
the butt and they have in this case so

00:02:12,300 --> 00:02:17,370
we have to work around them but every

00:02:15,000 --> 00:02:19,260
single layer of the stack silicone all

00:02:17,370 --> 00:02:20,940
the way up there are issues and you have

00:02:19,260 --> 00:02:22,860
to be aware of you only can focus on

00:02:20,940 --> 00:02:25,770
your issues right so I focus on what the

00:02:22,860 --> 00:02:27,690
kernel can do and as long as we can make

00:02:25,770 --> 00:02:29,130
that layer the best we possibly can add

00:02:27,690 --> 00:02:31,350
additional securities of additional

00:02:29,130 --> 00:02:33,480
layers we'll be good do you think that

00:02:31,350 --> 00:02:35,010
things are getting better no people say

00:02:33,480 --> 00:02:36,390
Oh things will get worse before they get

00:02:35,010 --> 00:02:39,120
better things are getting better yeah

00:02:36,390 --> 00:02:40,650
all the time so we're doing more and

00:02:39,120 --> 00:02:42,810
more testing more and more build stuff

00:02:40,650 --> 00:02:44,730
so problems the big problem with the

00:02:42,810 --> 00:02:45,959
last round of security patches that we

00:02:44,730 --> 00:02:47,580
had if we worked on it on our own for

00:02:45,959 --> 00:02:49,590
four months and then we pushed them out

00:02:47,580 --> 00:02:51,390
to the world because we got embargoed

00:02:49,590 --> 00:02:52,530
and then we found all the problems with

00:02:51,390 --> 00:02:53,760
those because when they had the

00:02:52,530 --> 00:02:56,250
real-world testing and it made us

00:02:53,760 --> 00:02:57,870
realize how good and how much we've

00:02:56,250 --> 00:02:59,430
relied on the infrastructure that we

00:02:57,870 --> 00:03:01,200
have built up over the past years to do

00:02:59,430 --> 00:03:02,459
this testing and to make sure that we

00:03:01,200 --> 00:03:04,560
don't have bugs before they hit other

00:03:02,459 --> 00:03:06,299
people and so when you're forced to

00:03:04,560 --> 00:03:07,620
remove yourself from there's old those

00:03:06,299 --> 00:03:09,030
things that you relied on you realize

00:03:07,620 --> 00:03:10,709
we've got a lot better we're doing more

00:03:09,030 --> 00:03:12,510
testing so there's a really cool project

00:03:10,709 --> 00:03:14,579
from a number of Google engineers called

00:03:12,510 --> 00:03:17,760
the syz bot so it's a fuzzier so it goes

00:03:14,579 --> 00:03:19,920
and it exercises the kernel and it tries

00:03:17,760 --> 00:03:22,890
to tweak parameters to it and send bad

00:03:19,920 --> 00:03:24,810
data to it and I saw a presentation by

00:03:22,890 --> 00:03:27,120
one of the developers the presentation

00:03:24,810 --> 00:03:29,519
was the world is on fire and from his

00:03:27,120 --> 00:03:31,530
point of view he's finding hundreds and

00:03:29,519 --> 00:03:33,540
hundreds of bugs in the kernel and it's

00:03:31,530 --> 00:03:35,670
like what is going on and because we

00:03:33,540 --> 00:03:39,390
rely on this and everything and I good

00:03:35,670 --> 00:03:41,519
to step back and remember the kernel as

00:03:39,390 --> 00:03:43,380
is works really really well but when you

00:03:41,519 --> 00:03:45,180
start exercising the crazy paths and the

00:03:43,380 --> 00:03:48,060
crazy paths of the crazy paths and other

00:03:45,180 --> 00:03:49,769
weird stuff those fringe of the whole

00:03:48,060 --> 00:03:50,819
thing there's problems and there's

00:03:49,769 --> 00:03:52,560
always problem but now we're testing

00:03:50,819 --> 00:03:54,359
them and we're finding them and his lair

00:03:52,560 --> 00:03:56,760
is like he we fixed all the bugs on one

00:03:54,359 --> 00:03:58,769
level layer or one wrapper and then his

00:03:56,760 --> 00:04:00,540
tool can go one level deeper and then we

00:03:58,769 --> 00:04:02,160
find more bugs and then we find the

00:04:00,540 --> 00:04:03,959
pixels in them he goes one level deeper

00:04:02,160 --> 00:04:05,310
and we find more bugs down there but we

00:04:03,959 --> 00:04:06,810
would have never found those last level

00:04:05,310 --> 00:04:08,549
bugs because nobody would have ever

00:04:06,810 --> 00:04:11,280
exercised those paths unless we fix that

00:04:08,549 --> 00:04:13,110
levels of above so as we get deeper and

00:04:11,280 --> 00:04:15,150
deeper in the stacks and figuring out

00:04:13,110 --> 00:04:16,590
more bugs which is better we're finding

00:04:15,150 --> 00:04:18,630
things that have always been there just

00:04:16,590 --> 00:04:20,070
no way has ever exercised those code

00:04:18,630 --> 00:04:22,049
paths and a kernel otherwise would have

00:04:20,070 --> 00:04:24,270
crashed and we wouldn't noticed it so uh

00:04:22,049 --> 00:04:26,100
or it just wouldn't have gotten there so

00:04:24,270 --> 00:04:28,440
the testing and the development effort

00:04:26,100 --> 00:04:30,570
that's going on is better than it ever

00:04:28,440 --> 00:04:33,300
has and it's finding lots of problems

00:04:30,570 --> 00:04:34,500
but that's not to say that the world is

00:04:33,300 --> 00:04:36,090
on fire it's just that we're doing

00:04:34,500 --> 00:04:37,800
really good if I mean profits

00:04:36,090 --> 00:04:39,720
exactly and some of the cool stuff

00:04:37,800 --> 00:04:40,800
they're doing it's like we're adding so

00:04:39,720 --> 00:04:42,000
I watched all the patches are go into

00:04:40,800 --> 00:04:44,040
the kernel to find out what they go in

00:04:42,000 --> 00:04:46,560
the stable kernel so we've been adding a

00:04:44,040 --> 00:04:47,850
bunch of new networking protocols and

00:04:46,560 --> 00:04:50,310
new stuff that's been coming out in

00:04:47,850 --> 00:04:52,260
networking stack and these these

00:04:50,310 --> 00:04:54,330
developers these testers are finding and

00:04:52,260 --> 00:04:55,950
fuzzing these network stacks are being

00:04:54,330 --> 00:04:57,690
added to the kernel before they get in

00:04:55,950 --> 00:04:58,890
the real release so you see that patch

00:04:57,690 --> 00:05:00,480
just go in you'll see a whole bunch of

00:04:58,890 --> 00:05:03,930
bug fixes that go in which is great

00:05:00,480 --> 00:05:06,090
because traditionally those bugs would

00:05:03,930 --> 00:05:07,320
have never even been caught until years

00:05:06,090 --> 00:05:08,370
and years later in their in production

00:05:07,320 --> 00:05:09,660
and stuff like that so this

00:05:08,370 --> 00:05:11,250
infrastructure we have is catching

00:05:09,660 --> 00:05:13,020
things out of earlier stage because it's

00:05:11,250 --> 00:05:14,490
there which is awesome to see so you

00:05:13,020 --> 00:05:15,810
look at all the bugs that are fixing but

00:05:14,490 --> 00:05:18,480
it's like wait you're fixing bugs or

00:05:15,810 --> 00:05:21,210
code those out last week and nobody else

00:05:18,480 --> 00:05:24,690
saw at all so our infrastructure of this

00:05:21,210 --> 00:05:27,800
testing and validation and fuzzing is

00:05:24,690 --> 00:05:31,499
getting really well really good

00:05:27,800 --> 00:05:31,499
[Music]

00:05:36,230 --> 00:05:39,669

YouTube URL: https://www.youtube.com/watch?v=jkGVabyMh1I


