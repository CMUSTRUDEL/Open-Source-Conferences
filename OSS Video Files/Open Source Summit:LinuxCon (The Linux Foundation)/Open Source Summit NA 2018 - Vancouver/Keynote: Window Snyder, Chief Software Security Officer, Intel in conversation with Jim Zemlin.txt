Title: Keynote: Window Snyder, Chief Software Security Officer, Intel in conversation with Jim Zemlin
Publication date: 2018-09-04
Playlist: Open Source Summit NA 2018 - Vancouver
Description: 
	Keynote: Window Snyder, Chief Software Security Officer, Intel Corporation in conversation with Jim Zemlin, Executive Director, The Linux Foundation

About Window Snyder
Window Snyder is a security industry veteran and Chief Software Security Officer at Intel Corporation. Prior to that, she was Chief Security Officer at Fastly and also spent five years at Apple working on security and privacy strategy and features for OS X and iOS. Earlier roles include Chief Security Something-or-Other at Mozilla responsible for security engineering, communication, and strategy and a founding team member at Matasano, a security services and product company based in New York City, acquired by NCC Group in 2012. As a senior security strategist at Microsoft in the Security Engineering and Communications organization, she managed the relationships between security consulting companies and the Microsoft product teams and the outreach strategy for security vendors and security researchers. Previously she was responsible for security sign-off for Windows XP SP2 and Windows Server 2003. Ms. Snyder was Director of Security Architecture at @stake. She developed application security analysis methodologies and led the Application Security Center of Excellence. She was a software engineer for 5 years focused primarily on security applications, most recently at Axent Technologies, now Symantec. Ms. Snyder is co-author of Threat Modeling, a manual for security architecture analysis in software.
Captions: 
	00:00:00,700 --> 00:00:08,040
[Music]

00:00:01,230 --> 00:00:13,940
please have a seat so cyber security and

00:00:08,040 --> 00:00:17,070
open source software where do we begin

00:00:13,940 --> 00:00:19,470
you know the the question I get all the

00:00:17,070 --> 00:00:22,350
time is sort of what what is the state

00:00:19,470 --> 00:00:25,500
of open-source security which is such a

00:00:22,350 --> 00:00:26,519
vague question and it ranges from you

00:00:25,500 --> 00:00:28,529
know people who really don't know much

00:00:26,519 --> 00:00:31,920
about technology to say open source

00:00:28,529 --> 00:00:34,710
stuff should we just stop using it to

00:00:31,920 --> 00:00:35,399
folks who say well it's too late on that

00:00:34,710 --> 00:00:38,129
one

00:00:35,399 --> 00:00:39,989
and now we have to go look at how open

00:00:38,129 --> 00:00:42,000
source affects all of our collective

00:00:39,989 --> 00:00:45,329
security what what are your your

00:00:42,000 --> 00:00:48,539
thoughts on sort of where I notice a

00:00:45,329 --> 00:00:50,430
broad question but where from your

00:00:48,539 --> 00:00:53,370
perspective sort of the state of

00:00:50,430 --> 00:00:55,500
security and open source software and

00:00:53,370 --> 00:00:56,460
you know what do you think are some of

00:00:55,500 --> 00:00:57,629
the things that are good what do you

00:00:56,460 --> 00:01:03,390
think the things some of things that can

00:00:57,629 --> 00:01:06,000
do better there was a lot of concern

00:01:03,390 --> 00:01:07,320
around security and open source products

00:01:06,000 --> 00:01:09,570
because of course the source code is

00:01:07,320 --> 00:01:11,070
available and there was this this worry

00:01:09,570 --> 00:01:13,080
that if the source code is available

00:01:11,070 --> 00:01:15,000
then the attackers will be able to find

00:01:13,080 --> 00:01:16,140
the security vulnerabilities right which

00:01:15,000 --> 00:01:17,340
is kind of hilarious because they can

00:01:16,140 --> 00:01:19,830
certainly find vulnerabilities and

00:01:17,340 --> 00:01:22,259
closed source software as well and then

00:01:19,830 --> 00:01:27,140
there was this idea like Lena famously

00:01:22,259 --> 00:01:29,369
saying many guys make all bugs shallow

00:01:27,140 --> 00:01:31,439
and so the pendulum swung the other way

00:01:29,369 --> 00:01:35,280
the problem is it really matters whose

00:01:31,439 --> 00:01:38,189
eyes are looking and for a lot of open

00:01:35,280 --> 00:01:42,150
source projects if they're really high

00:01:38,189 --> 00:01:43,920
in visibility if they're really high

00:01:42,150 --> 00:01:47,040
impact then there might be folks out

00:01:43,920 --> 00:01:49,740
there looking but for smaller projects

00:01:47,040 --> 00:01:51,990
that we might depend on in ways that are

00:01:49,740 --> 00:01:53,189
not as obvious there may not be folks

00:01:51,990 --> 00:01:54,659
looking and if there are folks looking

00:01:53,189 --> 00:01:56,159
are they the right folks and if there

00:01:54,659 --> 00:02:01,110
are the right folks with the right skill

00:01:56,159 --> 00:02:02,909
set are they also willing to engage with

00:02:01,110 --> 00:02:05,430
the community and share what they found

00:02:02,909 --> 00:02:08,220
and work to make those projects more

00:02:05,430 --> 00:02:08,990
secure they might actually be leveraging

00:02:08,220 --> 00:02:11,090
those vulnerabilities

00:02:08,990 --> 00:02:13,940
their own nefarious purposes right so

00:02:11,090 --> 00:02:17,480
there's a lot of it really matters who's

00:02:13,940 --> 00:02:20,420
who's looking right so we get to this

00:02:17,480 --> 00:02:23,030
point where we're very often working

00:02:20,420 --> 00:02:25,190
with very high impact projects maybe the

00:02:23,030 --> 00:02:28,160
small team maybe they don't have any

00:02:25,190 --> 00:02:29,870
security folks on board and if they do

00:02:28,160 --> 00:02:30,710
they might be volunteers they're working

00:02:29,870 --> 00:02:32,660
on the things that are interesting to

00:02:30,710 --> 00:02:35,150
them and not necessarily the some of the

00:02:32,660 --> 00:02:36,830
drudgery of application security because

00:02:35,150 --> 00:02:38,920
that's not a fun part and they're

00:02:36,830 --> 00:02:41,720
volunteers so their time is

00:02:38,920 --> 00:02:43,840
self-directed and we end up in a

00:02:41,720 --> 00:02:47,420
situation where we have a lot of

00:02:43,840 --> 00:02:50,060
technology that we depend on and without

00:02:47,420 --> 00:02:53,030
necessarily a structured comprehensive

00:02:50,060 --> 00:02:56,090
security program to support it yeah yeah

00:02:53,030 --> 00:02:58,460
you know I want to come back to that but

00:02:56,090 --> 00:03:00,650
I question that we always ask ourselves

00:02:58,460 --> 00:03:03,130
both at the Linux Foundation and then I

00:03:00,650 --> 00:03:05,990
know in a lot of communities is how do

00:03:03,130 --> 00:03:09,650
how does our project how does our world

00:03:05,990 --> 00:03:14,360
be the best upstream community security

00:03:09,650 --> 00:03:16,030
included for a downstream user who's

00:03:14,360 --> 00:03:18,440
going to either use it directly or

00:03:16,030 --> 00:03:21,950
productize it and then sell some

00:03:18,440 --> 00:03:23,870
commercial service or solution and the

00:03:21,950 --> 00:03:25,880
question I have for you because you have

00:03:23,870 --> 00:03:27,590
lived in this world of application

00:03:25,880 --> 00:03:29,480
security you know sort of taking

00:03:27,590 --> 00:03:32,450
open-source code building it into a

00:03:29,480 --> 00:03:34,310
product or service can you tell some of

00:03:32,450 --> 00:03:37,430
these folks how you see the work how

00:03:34,310 --> 00:03:39,080
does that work for someone who's on the

00:03:37,430 --> 00:03:44,660
line for applications service security

00:03:39,080 --> 00:03:47,480
when you're using open source how do you

00:03:44,660 --> 00:03:49,850
view when you're working at fastly open

00:03:47,480 --> 00:03:51,230
source code that you're incorporating in

00:03:49,850 --> 00:03:52,730
your products and services like do you

00:03:51,230 --> 00:03:54,650
check security would you have a process

00:03:52,730 --> 00:03:56,180
or like what is how does have occasional

00:03:54,650 --> 00:03:58,970
security work in that context for a

00:03:56,180 --> 00:04:02,090
commercial company absolutely so if

00:03:58,970 --> 00:04:04,910
we're incorporating open sourcing

00:04:02,090 --> 00:04:06,640
software in any kind of environment I

00:04:04,910 --> 00:04:09,800
always consider it the same way I do any

00:04:06,640 --> 00:04:11,570
third-party code that it may or may not

00:04:09,800 --> 00:04:14,360
be up to the security requirements for

00:04:11,570 --> 00:04:16,180
this project in our environment or for

00:04:14,360 --> 00:04:20,380
our deployment

00:04:16,180 --> 00:04:23,320
and we have to evaluate it against our

00:04:20,380 --> 00:04:25,180
requirements so there's plenty of

00:04:23,320 --> 00:04:26,770
commercial software closed-source or

00:04:25,180 --> 00:04:29,860
whatever that that doesn't have a

00:04:26,770 --> 00:04:31,720
security program to address the kinds of

00:04:29,860 --> 00:04:33,580
issues that might be relevant for my

00:04:31,720 --> 00:04:35,800
environment so whether it's coming from

00:04:33,580 --> 00:04:38,440
open source or a commercial third-party

00:04:35,800 --> 00:04:40,210
I have to evaluate against the

00:04:38,440 --> 00:04:44,229
requirements with the situation that I'm

00:04:40,210 --> 00:04:46,300
working on and we may or may not have to

00:04:44,229 --> 00:04:48,550
do more work and the benefit of course

00:04:46,300 --> 00:04:50,050
is that if it's open source and there's

00:04:48,550 --> 00:04:52,150
community support we can give that work

00:04:50,050 --> 00:04:54,070
back to them right

00:04:52,150 --> 00:04:56,560
which for a commercial provider they may

00:04:54,070 --> 00:04:59,800
or may not incorporate that work right

00:04:56,560 --> 00:05:02,800
very similarly but I definitely treat it

00:04:59,800 --> 00:05:05,800
as any third-party library any

00:05:02,800 --> 00:05:07,240
third-party consideration that I don't

00:05:05,800 --> 00:05:09,250
know if this was built to our standards

00:05:07,240 --> 00:05:11,009
so I have to mitigate risk this way it

00:05:09,250 --> 00:05:14,139
might be through isolation it might be

00:05:11,009 --> 00:05:15,460
by by doing our own analysis on it

00:05:14,139 --> 00:05:19,509
but I definitely treat it the same way I

00:05:15,460 --> 00:05:22,740
would any other party code right what

00:05:19,509 --> 00:05:25,419
advice would you give though to you know

00:05:22,740 --> 00:05:29,949
ecosystems you know where the Ruby or

00:05:25,419 --> 00:05:31,840
node where you know how do it does it

00:05:29,949 --> 00:05:34,150
create more work in terms of all these

00:05:31,840 --> 00:05:35,860
dependencies that come in and you don't

00:05:34,150 --> 00:05:38,380
maybe know where it's coming from or not

00:05:35,860 --> 00:05:39,880
is that is that a big problem from your

00:05:38,380 --> 00:05:41,860
perspective or this is just all part of

00:05:39,880 --> 00:05:44,020
the same process it's the same problem

00:05:41,860 --> 00:05:46,150
no matter where your code comes from

00:05:44,020 --> 00:05:48,909
yeah it would be nice to think that oh

00:05:46,150 --> 00:05:50,770
well this provider when there's an open

00:05:48,909 --> 00:05:52,449
source team or it's a commercial

00:05:50,770 --> 00:05:54,250
provider they've got their requirements

00:05:52,449 --> 00:05:56,139
that here I asked a few questions about

00:05:54,250 --> 00:05:57,820
their their development process and I

00:05:56,139 --> 00:05:59,560
can say okay it sounds like they're

00:05:57,820 --> 00:06:01,360
doing the kind of work that we need to

00:05:59,560 --> 00:06:05,530
do in our environment we can just assume

00:06:01,360 --> 00:06:08,620
that this code is up to the standards

00:06:05,530 --> 00:06:11,550
for our environment but I very rarely

00:06:08,620 --> 00:06:13,509
get to the point where I feel like I can

00:06:11,550 --> 00:06:15,400
outsource that problem and say like

00:06:13,509 --> 00:06:17,409
they've got it handled right and to our

00:06:15,400 --> 00:06:20,110
standards so it's um

00:06:17,409 --> 00:06:21,639
it's very rare that you can say this is

00:06:20,110 --> 00:06:24,370
this doesn't require investigation on

00:06:21,639 --> 00:06:27,460
our part what's more likely is that we

00:06:24,370 --> 00:06:30,129
find ways to isolate code that's there

00:06:27,460 --> 00:06:31,929
that's if we if you don't know

00:06:30,129 --> 00:06:33,399
what level of investigation has happened

00:06:31,929 --> 00:06:34,360
and especially even with open source

00:06:33,399 --> 00:06:35,830
code you can say oh we can do the

00:06:34,360 --> 00:06:36,969
analysis on it but very often you're

00:06:35,830 --> 00:06:38,319
looking at you know thousands or

00:06:36,969 --> 00:06:43,209
millions of lines of code depending on

00:06:38,319 --> 00:06:44,800
what we're we're looking at and to be

00:06:43,209 --> 00:06:45,879
able to do that kind of work in most

00:06:44,800 --> 00:06:48,369
development environments is really

00:06:45,879 --> 00:06:49,569
impractical especially if they your

00:06:48,369 --> 00:06:52,409
engineering team is nowhere near as

00:06:49,569 --> 00:06:55,239
large as a team would be to develop

00:06:52,409 --> 00:06:56,649
software at that scale yeah so you would

00:06:55,239 --> 00:06:59,009
have to deploy other strategies like

00:06:56,649 --> 00:07:01,869
isolation and compartmentalization can I

00:06:59,009 --> 00:07:03,759
put it on some other server can I create

00:07:01,869 --> 00:07:08,649
a very small communications channel that

00:07:03,759 --> 00:07:10,779
has very little opportunity for for for

00:07:08,649 --> 00:07:14,080
access from from from for neural areas

00:07:10,779 --> 00:07:16,899
can I reduce the the attack surface as

00:07:14,080 --> 00:07:18,849
much as possible right yeah I mean I

00:07:16,899 --> 00:07:20,740
tell you your your I talk to security

00:07:18,849 --> 00:07:23,529
professionals like you all the time and

00:07:20,740 --> 00:07:27,909
just I can't imagine how difficult the

00:07:23,529 --> 00:07:30,009
job is given you know leanness was on

00:07:27,909 --> 00:07:31,449
stage a year ago and we were talking

00:07:30,009 --> 00:07:32,769
about cyber security he said you know

00:07:31,449 --> 00:07:34,959
one of the hard things about someone

00:07:32,769 --> 00:07:37,869
who's writing code is it's very hard to

00:07:34,959 --> 00:07:40,089
think like a hacker to think of like

00:07:37,869 --> 00:07:43,029
their attack vectors and you know what

00:07:40,089 --> 00:07:45,729
what do you see are tactics that hackers

00:07:43,029 --> 00:07:48,819
are using now maybe they didn't before

00:07:45,729 --> 00:07:51,189
or is there you know what are you seeing

00:07:48,819 --> 00:07:53,949
out there get us a little bit into the

00:07:51,189 --> 00:07:55,419
mind of hackers things have really

00:07:53,949 --> 00:07:57,459
changed there's and it really depends on

00:07:55,419 --> 00:08:01,629
what they're what kind of hacker were

00:07:57,459 --> 00:08:05,199
talking about when I was a teenager and

00:08:01,629 --> 00:08:06,399
working on this stuff the the the goal

00:08:05,199 --> 00:08:07,329
was probably in getting access to

00:08:06,399 --> 00:08:08,860
something you otherwise wouldn't have

00:08:07,329 --> 00:08:12,579
access to whether that was an operating

00:08:08,860 --> 00:08:14,800
system or you know a site with with a

00:08:12,579 --> 00:08:17,110
lot of bandwidth that those were the

00:08:14,800 --> 00:08:19,089
objectives right and then attackers

00:08:17,110 --> 00:08:20,619
started looking for you know ways to

00:08:19,089 --> 00:08:23,649
compromise you know they want to host

00:08:20,619 --> 00:08:27,759
they want to host them copyrighted

00:08:23,649 --> 00:08:31,539
material or they want to put together a

00:08:27,759 --> 00:08:32,740
botnet to go spam folks but the

00:08:31,539 --> 00:08:37,120
objectives were completely changed now

00:08:32,740 --> 00:08:39,459
instead of you know just grabbing the

00:08:37,120 --> 00:08:41,079
credentials or personal information off

00:08:39,459 --> 00:08:43,360
a machine and trying to monetize that

00:08:41,079 --> 00:08:48,399
they're also leveraging your CPU time

00:08:43,360 --> 00:08:50,050
for you know mining Bitcoin they're the

00:08:48,399 --> 00:08:51,220
the lens gets completely different right

00:08:50,050 --> 00:08:52,889
so now we're also talking about more

00:08:51,220 --> 00:08:55,329
sophisticated hackers this is not like

00:08:52,889 --> 00:08:57,850
these are nation-states instead and so

00:08:55,329 --> 00:09:00,490
instead of let's say compromising a

00:08:57,850 --> 00:09:05,559
machine where and and and taking what is

00:09:00,490 --> 00:09:10,779
present there we're creating fake news

00:09:05,559 --> 00:09:12,970
and changing election outcomes and the

00:09:10,779 --> 00:09:16,990
the stakes are are so much higher yep

00:09:12,970 --> 00:09:20,470
and the objectives are are so much more

00:09:16,990 --> 00:09:24,249
sophisticated yeah so we don't know what

00:09:20,470 --> 00:09:26,529
we don't know right and trying to but

00:09:24,249 --> 00:09:33,579
they build an environment that mitigates

00:09:26,529 --> 00:09:34,899
risk that are so diverse and so it's

00:09:33,579 --> 00:09:36,069
hard for us to say what's going to be

00:09:34,899 --> 00:09:36,999
important for the future but we're

00:09:36,069 --> 00:09:38,709
building the software that has to be

00:09:36,999 --> 00:09:40,420
resilient against tomorrow's threats

00:09:38,709 --> 00:09:42,610
today right that's an incredibly

00:09:40,420 --> 00:09:43,870
difficult problem yeah you know we were

00:09:42,610 --> 00:09:47,499
talking backstage about our core

00:09:43,870 --> 00:09:49,420
infrastructure initiative where we we

00:09:47,499 --> 00:09:51,579
are sort of all collectively dependent

00:09:49,420 --> 00:09:54,550
on this open source world out there I

00:09:51,579 --> 00:09:56,589
think it's safe to say that there's so

00:09:54,550 --> 00:09:58,449
much dependency on open source that

00:09:56,589 --> 00:10:00,069
that's not gonna change anytime soon

00:09:58,449 --> 00:10:02,589
this is you can't just rip all this

00:10:00,069 --> 00:10:04,480
stuff out and replace it but you know we

00:10:02,589 --> 00:10:05,740
spent a lot of time at the core

00:10:04,480 --> 00:10:08,170
infrastructure initiative finding the

00:10:05,740 --> 00:10:10,439
intersection between you know widely

00:10:08,170 --> 00:10:13,600
deployed and critical to society and

00:10:10,439 --> 00:10:15,999
kind of screwed up right and there were

00:10:13,600 --> 00:10:17,499
some obvious ones you know open SSL I

00:10:15,999 --> 00:10:19,059
think is the best example with

00:10:17,499 --> 00:10:21,009
heartbleed and we spend a bunch of

00:10:19,059 --> 00:10:24,189
resources helping that team and I think

00:10:21,009 --> 00:10:25,809
things got better ntpd another example

00:10:24,189 --> 00:10:26,759
we spent some resources there unclear

00:10:25,809 --> 00:10:29,319
that that's better

00:10:26,759 --> 00:10:34,889
what what are some thoughts that you

00:10:29,319 --> 00:10:38,559
have on how we can improve the overall

00:10:34,889 --> 00:10:40,059
state of application security integrated

00:10:38,559 --> 00:10:43,990
into a development process I realized

00:10:40,059 --> 00:10:45,519
this is like a humongous ambitious goal

00:10:43,990 --> 00:10:47,319
but what you know share some thoughts

00:10:45,519 --> 00:10:50,049
that you have on how we might approach

00:10:47,319 --> 00:10:50,840
that kind of problem well there are a

00:10:50,049 --> 00:10:52,940
couple of things

00:10:50,840 --> 00:10:55,130
over time developer weirdest has really

00:10:52,940 --> 00:10:56,330
improved that more folks who don't

00:10:55,130 --> 00:10:58,850
necessarily consider security to be

00:10:56,330 --> 00:11:00,020
their their primary job still are

00:10:58,850 --> 00:11:01,100
familiar with the kinds of code

00:11:00,020 --> 00:11:03,230
constructs that could result in

00:11:01,100 --> 00:11:06,350
vulnerability and how to avoid them and

00:11:03,230 --> 00:11:08,120
when they do peer review on on potential

00:11:06,350 --> 00:11:10,130
commits they're looking for these kinds

00:11:08,120 --> 00:11:11,930
of things and that's that's a good start

00:11:10,130 --> 00:11:15,730
I think one of the most important things

00:11:11,930 --> 00:11:18,350
to improve security has been the

00:11:15,730 --> 00:11:20,720
languages that have abstracted away from

00:11:18,350 --> 00:11:23,750
develop developers things like memory

00:11:20,720 --> 00:11:25,370
management or crypto we definitely wanna

00:11:23,750 --> 00:11:29,960
be in an environment where fewer people

00:11:25,370 --> 00:11:30,920
are implementing those things because

00:11:29,960 --> 00:11:32,510
it's it's fraught with peril

00:11:30,920 --> 00:11:34,640
those are operations that are are

00:11:32,510 --> 00:11:37,570
difficult to do securely there's lots of

00:11:34,640 --> 00:11:39,770
ways to mess it up so if you're able to

00:11:37,570 --> 00:11:41,390
write your code in a higher-level

00:11:39,770 --> 00:11:42,830
language where memory management's not

00:11:41,390 --> 00:11:44,720
an issue then you're potentially

00:11:42,830 --> 00:11:47,150
reducing your risk for remember

00:11:44,720 --> 00:11:50,150
corruption issues down to just what the

00:11:47,150 --> 00:11:53,420
what the platform exposes which is

00:11:50,150 --> 00:11:54,830
that's that's a huge burden that's

00:11:53,420 --> 00:11:56,839
removed so now we're not going from that

00:11:54,830 --> 00:11:58,220
code looking for potential memory

00:11:56,839 --> 00:12:01,280
corruption vulnerabilities we're looking

00:11:58,220 --> 00:12:02,960
for logic issues we're looking for this

00:12:01,280 --> 00:12:03,260
safe storage of Secrets that sort of

00:12:02,960 --> 00:12:05,600
thing

00:12:03,260 --> 00:12:07,820
if you end up rolling your own crypto

00:12:05,600 --> 00:12:09,560
you are creating all kinds of

00:12:07,820 --> 00:12:12,350
opportunities for problems whereas if

00:12:09,560 --> 00:12:14,060
you leverage from the platform the

00:12:12,350 --> 00:12:15,620
cryptographic libraries and and then on

00:12:14,060 --> 00:12:16,910
top of that you apply best practices now

00:12:15,620 --> 00:12:19,760
you've really reduced your risk pretty

00:12:16,910 --> 00:12:21,530
significantly so this move to higher

00:12:19,760 --> 00:12:25,040
level languages has done more to improve

00:12:21,530 --> 00:12:26,510
application security then you know any

00:12:25,040 --> 00:12:29,300
developer training we could do any work

00:12:26,510 --> 00:12:30,620
that we could do as a community of

00:12:29,300 --> 00:12:31,610
security researchers going out there and

00:12:30,620 --> 00:12:33,080
trying to review this code or do

00:12:31,610 --> 00:12:34,910
penetration testing or develop fuzz

00:12:33,080 --> 00:12:36,410
testing tools or or any of the low-level

00:12:34,910 --> 00:12:38,240
analysis that we can do which is so

00:12:36,410 --> 00:12:41,720
expensive in terms of time right and

00:12:38,240 --> 00:12:43,580
really requires a skill set that's not

00:12:41,720 --> 00:12:47,390
so widely available and all those folks

00:12:43,580 --> 00:12:49,580
have full time jobs it's it's just yeah

00:12:47,390 --> 00:12:51,170
I think we've been moving applications

00:12:49,580 --> 00:12:52,610
to higher level languages it's possibly

00:12:51,170 --> 00:12:54,230
the best thing we can do for application

00:12:52,610 --> 00:12:58,520
security interesting you know I never

00:12:54,230 --> 00:13:01,660
thought of that but you still have to

00:12:58,520 --> 00:13:04,929
whether it's the Linux kernel or other

00:13:01,660 --> 00:13:08,889
make sure that test good test coverage

00:13:04,929 --> 00:13:12,639
better coding practices we had a kernel

00:13:08,889 --> 00:13:14,110
security workshop here on Monday and you

00:13:12,639 --> 00:13:15,670
know I

00:13:14,110 --> 00:13:18,220
the folks who attended that are just

00:13:15,670 --> 00:13:20,139
amazing folks since this job may be

00:13:18,220 --> 00:13:22,480
potentially akin to yours as well where

00:13:20,139 --> 00:13:26,889
you know the bathrooms never clean

00:13:22,480 --> 00:13:29,379
enough and you know there's this story

00:13:26,889 --> 00:13:32,740
about how Bill Gates wrote this letter

00:13:29,379 --> 00:13:34,449
to all of Microsoft back and I think

00:13:32,740 --> 00:13:36,550
there's maybe 2003 saying like we're

00:13:34,449 --> 00:13:38,309
gonna stop all development we're no

00:13:36,550 --> 00:13:40,509
longer gonna release any products

00:13:38,309 --> 00:13:42,129
everyone's going to take secure coding

00:13:40,509 --> 00:13:44,499
classes we're gonna do better threat

00:13:42,129 --> 00:13:47,290
modeling we're gonna you know go through

00:13:44,499 --> 00:13:49,420
this entire effort to improve the

00:13:47,290 --> 00:13:54,279
security I think they went in read every

00:13:49,420 --> 00:13:57,189
line in code the rumor is has it that or

00:13:54,279 --> 00:13:58,959
you're fired so what he said basically

00:13:57,189 --> 00:14:01,720
what he's implying but I'm sure that's

00:13:58,959 --> 00:14:03,910
what it was you can't fire anybody an

00:14:01,720 --> 00:14:05,369
open source project well what do you

00:14:03,910 --> 00:14:08,670
think are some ways we could provide

00:14:05,369 --> 00:14:12,069
incentives for folks to learn about

00:14:08,670 --> 00:14:14,019
secure coding practices or could we go

00:14:12,069 --> 00:14:15,339
crowdsource ways to improve test

00:14:14,019 --> 00:14:18,480
coverage or that what are your thoughts

00:14:15,339 --> 00:14:21,670
on how we might do better at that I

00:14:18,480 --> 00:14:23,290
think it's really hard when we're we're

00:14:21,670 --> 00:14:24,519
talking about folks who are working on

00:14:23,290 --> 00:14:26,230
software we're working on projects

00:14:24,519 --> 00:14:28,420
because they want to they've got their

00:14:26,230 --> 00:14:29,740
own idea of of how they want to spend

00:14:28,420 --> 00:14:31,779
their time and maybe they don't think

00:14:29,740 --> 00:14:34,119
that the time that they spend working on

00:14:31,779 --> 00:14:35,259
security is going to be as important or

00:14:34,119 --> 00:14:36,939
valuable as the time they spend

00:14:35,259 --> 00:14:39,309
implementing new features and by the way

00:14:36,939 --> 00:14:40,600
this compromise is happening in every

00:14:39,309 --> 00:14:43,420
development environment it's right

00:14:40,600 --> 00:14:45,369
security is one integer until it fails

00:14:43,420 --> 00:14:46,779
right whereas that new feature that's

00:14:45,369 --> 00:14:49,569
something your users could be able today

00:14:46,779 --> 00:14:51,189
and you know capitalizing on this

00:14:49,569 --> 00:14:52,449
opportunity means that you know more

00:14:51,189 --> 00:14:55,480
people we use your code and that's very

00:14:52,449 --> 00:14:57,399
exciting and it's it's it's very hard to

00:14:55,480 --> 00:15:01,119
say that the time you spend in security

00:14:57,399 --> 00:15:03,790
is going to have a measurable output

00:15:01,119 --> 00:15:04,929
because you don't have a problem until

00:15:03,790 --> 00:15:06,779
someone points it out to you that's a

00:15:04,929 --> 00:15:08,529
Sara Lee so you might actually be

00:15:06,779 --> 00:15:10,089
incredibly vulnerable people might be

00:15:08,529 --> 00:15:12,120
taking advantage of the vulnerabilities

00:15:10,089 --> 00:15:14,830
in your code to

00:15:12,120 --> 00:15:15,850
to compromise the environments that it's

00:15:14,830 --> 00:15:18,790
running in and you won't necessarily

00:15:15,850 --> 00:15:22,990
know that this is happening so creating

00:15:18,790 --> 00:15:26,230
I think a bar beneath which no one

00:15:22,990 --> 00:15:27,760
should fall is probably the best thing

00:15:26,230 --> 00:15:30,550
we can do as a community to say that

00:15:27,760 --> 00:15:32,740
this is a critical skill for CS students

00:15:30,550 --> 00:15:36,459
that it's part of all curriculum that

00:15:32,740 --> 00:15:37,930
it's part of the it's part of a

00:15:36,459 --> 00:15:39,790
development environment that you let you

00:15:37,930 --> 00:15:40,990
do this work that we do threat modeling

00:15:39,790 --> 00:15:42,670
that we do identify security

00:15:40,990 --> 00:15:45,580
requirements for this code that we

00:15:42,670 --> 00:15:47,290
discuss what the code is intended to

00:15:45,580 --> 00:15:48,459
mitigate and what it's not so that when

00:15:47,290 --> 00:15:49,959
you're making decisions about how to use

00:15:48,459 --> 00:15:51,339
it in your environment you can say well

00:15:49,959 --> 00:15:52,779
I'm going to have to mitigate this

00:15:51,339 --> 00:15:53,770
problem some other way because they're

00:15:52,779 --> 00:15:55,540
saying they're not resilient against

00:15:53,770 --> 00:15:58,300
these kinds of problems good that's

00:15:55,540 --> 00:16:00,610
actually really helpful saying that you

00:15:58,300 --> 00:16:04,240
know exposing the the tools you're using

00:16:00,610 --> 00:16:05,890
for analysis to define vulnerability

00:16:04,240 --> 00:16:08,050
because other folks might be able to

00:16:05,890 --> 00:16:11,440
build on that and change for example

00:16:08,050 --> 00:16:12,610
let's say this is our our suite of fuzz

00:16:11,440 --> 00:16:14,620
testers that we're using against this

00:16:12,610 --> 00:16:15,550
this code base other folks can start

00:16:14,620 --> 00:16:19,209
from somewhere they don't start from

00:16:15,550 --> 00:16:22,120
scratch and then build upon that and we

00:16:19,209 --> 00:16:24,339
can leverage the the work that they're

00:16:22,120 --> 00:16:26,020
already existing in this environment so

00:16:24,339 --> 00:16:27,190
might be somebody who wants to to

00:16:26,020 --> 00:16:28,540
participate for a little while but they

00:16:27,190 --> 00:16:29,830
don't necessarily have you know six

00:16:28,540 --> 00:16:31,480
months to investigate or they're you

00:16:29,830 --> 00:16:32,410
know they've got a full time something

00:16:31,480 --> 00:16:33,400
else that they're doing but they're

00:16:32,410 --> 00:16:35,170
they're interested in this project

00:16:33,400 --> 00:16:36,700
because of something that catches their

00:16:35,170 --> 00:16:39,520
attention for a little while make it a

00:16:36,700 --> 00:16:42,850
little bit easier to to contribute more

00:16:39,520 --> 00:16:45,750
lightly yeah but I think raising raising

00:16:42,850 --> 00:16:48,750
our standards for what constitutes a

00:16:45,750 --> 00:16:50,830
professional development environment and

00:16:48,750 --> 00:16:53,670
and what constitutes a professional

00:16:50,830 --> 00:16:55,660
software developer in terms of of

00:16:53,670 --> 00:16:59,829
creating those those those baseline

00:16:55,660 --> 00:17:00,820
security practices and skills yeah you

00:16:59,829 --> 00:17:02,500
know one of the things we spend a lot of

00:17:00,820 --> 00:17:04,050
time on is figuring out what is the most

00:17:02,500 --> 00:17:06,880
critical shared software in the world

00:17:04,050 --> 00:17:09,089
who what are the software packages

00:17:06,880 --> 00:17:11,470
version number of dependencies that

00:17:09,089 --> 00:17:13,809
everybody's using that poses this

00:17:11,470 --> 00:17:16,809
systemic risk and then you know I think

00:17:13,809 --> 00:17:19,959
you know you nail it which is what is

00:17:16,809 --> 00:17:21,640
that lowest bar and for lack of the

00:17:19,959 --> 00:17:22,660
command and control and open source one

00:17:21,640 --> 00:17:24,700
of the things we always talk about is

00:17:22,660 --> 00:17:27,100
how do you create this culture of

00:17:24,700 --> 00:17:32,980
secure coding practice or applications

00:17:27,100 --> 00:17:34,810
security in open source and you know you

00:17:32,980 --> 00:17:37,360
you spend your career and your day

00:17:34,810 --> 00:17:39,370
probably convincing executives and other

00:17:37,360 --> 00:17:41,740
people that you know the balance between

00:17:39,370 --> 00:17:43,810
the new feature and those practices can

00:17:41,740 --> 00:17:45,610
you give us advice on how you how do you

00:17:43,810 --> 00:17:50,230
sell that how do you sell the investment

00:17:45,610 --> 00:17:52,720
in that minimum bar or even higher and

00:17:50,230 --> 00:17:56,130
any advice that you can give us and I

00:17:52,720 --> 00:17:58,390
realize it's a hard question I think

00:17:56,130 --> 00:18:00,190
among developers we want to have pride

00:17:58,390 --> 00:18:03,340
in the work that we do and if we

00:18:00,190 --> 00:18:09,370
consider these if we consider this work

00:18:03,340 --> 00:18:11,170
to be a default requirement then not

00:18:09,370 --> 00:18:13,000
doing it means that you you're kind of

00:18:11,170 --> 00:18:14,560
running a sloppy organization and I

00:18:13,000 --> 00:18:16,600
think maybe shame has a little role to

00:18:14,560 --> 00:18:18,040
play here we're and pride right there's

00:18:16,600 --> 00:18:19,240
they're two sides of the same corner

00:18:18,040 --> 00:18:21,640
that you want to have pride that you

00:18:19,240 --> 00:18:23,410
you're operating a development

00:18:21,640 --> 00:18:25,210
environment that's that's that's doing

00:18:23,410 --> 00:18:28,000
reasonable things like if you put in a

00:18:25,210 --> 00:18:29,710
change in it it has a 20% performance

00:18:28,000 --> 00:18:33,220
impact you feel like that's unacceptable

00:18:29,710 --> 00:18:34,780
right right if you do some cutting-edge

00:18:33,220 --> 00:18:35,860
news analysis on your code you identify

00:18:34,780 --> 00:18:37,270
all these different constructs that

00:18:35,860 --> 00:18:38,560
could result in vulnerability and you

00:18:37,270 --> 00:18:40,660
just leave them there all right that

00:18:38,560 --> 00:18:42,160
should feel that should feel

00:18:40,660 --> 00:18:45,310
uncomfortable like oh I'm not taking

00:18:42,160 --> 00:18:47,290
care of of the basics so I think raising

00:18:45,310 --> 00:18:48,880
our standards as a community saying that

00:18:47,290 --> 00:18:50,080
this is what a devotional development

00:18:48,880 --> 00:18:51,970
environment looks like this is what a

00:18:50,080 --> 00:18:53,680
solid development team looks like this

00:18:51,970 --> 00:18:55,390
is what a good developer looks like and

00:18:53,680 --> 00:18:57,760
incorporating security into all those

00:18:55,390 --> 00:19:00,310
different aspects I think that's one of

00:18:57,760 --> 00:19:03,190
the ways that we're going to across an

00:19:00,310 --> 00:19:04,930
entire industry raise the bar yeah you

00:19:03,190 --> 00:19:09,250
know one of the things I always struggle

00:19:04,930 --> 00:19:11,470
with is you know fear also sells right

00:19:09,250 --> 00:19:13,510
in terms of like hey you we all have to

00:19:11,470 --> 00:19:16,420
do this together because all of

00:19:13,510 --> 00:19:17,740
society's privacy is at risk if there is

00:19:16,420 --> 00:19:19,900
vulnerabilities systemically in

00:19:17,740 --> 00:19:23,340
cryptography for example or other things

00:19:19,900 --> 00:19:25,420
and it's this balance of you know

00:19:23,340 --> 00:19:26,860
simplifying the narrative too much of

00:19:25,420 --> 00:19:29,470
like hey if you don't do this the

00:19:26,860 --> 00:19:32,230
world's gonna end to the more nuanced in

00:19:29,470 --> 00:19:33,820
real argument of you know hey this is a

00:19:32,230 --> 00:19:35,350
this is a journey there's a set of

00:19:33,820 --> 00:19:36,809
processes you need to employ there's a

00:19:35,350 --> 00:19:40,159
minimum bar there's you know

00:19:36,809 --> 00:19:44,279
sort of shame versus incentives and how

00:19:40,159 --> 00:19:46,279
do you think we can explain those to

00:19:44,279 --> 00:19:49,710
folks who may not know about

00:19:46,279 --> 00:19:51,779
applications security in a way they can

00:19:49,710 --> 00:19:53,820
understand it I mean what what do you do

00:19:51,779 --> 00:19:55,499
when you talk to execs it Intel or folks

00:19:53,820 --> 00:19:58,320
outside of and tell about these complex

00:19:55,499 --> 00:20:04,799
issues I try not to operate with fear as

00:19:58,320 --> 00:20:06,840
my first okay yeah because people get

00:20:04,799 --> 00:20:08,129
fatigued and folks coming in and saying

00:20:06,840 --> 00:20:09,389
this guy is falling right because this

00:20:08,129 --> 00:20:11,009
guy is always falling anyhow there's

00:20:09,389 --> 00:20:13,110
always vulnerability in everything and

00:20:11,009 --> 00:20:16,499
whether or not that but I it is always

00:20:13,110 --> 00:20:19,220
falling it's true that one insecurity

00:20:16,499 --> 00:20:21,179
this is just it's it's it's always a

00:20:19,220 --> 00:20:22,559
disaster like this vulnerability can

00:20:21,179 --> 00:20:23,850
compromise everything and so can that

00:20:22,559 --> 00:20:25,350
vulnerability and all those ones up as

00:20:23,850 --> 00:20:27,720
well and over here is another bucket of

00:20:25,350 --> 00:20:28,799
ulnar abilities that can also compromise

00:20:27,720 --> 00:20:29,759
everything and that's some point you

00:20:28,799 --> 00:20:31,139
just kind of like well if everything is

00:20:29,759 --> 00:20:33,210
so insecure then what do I do anything

00:20:31,139 --> 00:20:35,009
what can we possibly do right yeah and

00:20:33,210 --> 00:20:37,590
it gives you an excuse to say that it'll

00:20:35,009 --> 00:20:39,749
it's not worth doing anything right as

00:20:37,590 --> 00:20:41,490
opposed to you know we're gonna set the

00:20:39,749 --> 00:20:43,919
bar here and knock this stuff out and

00:20:41,490 --> 00:20:45,600
that's attainable and we can say okay

00:20:43,919 --> 00:20:47,100
there's going to be problems but the bar

00:20:45,600 --> 00:20:48,480
is higher and the set of folks who can

00:20:47,100 --> 00:20:49,649
take advantage of those kinds of

00:20:48,480 --> 00:20:50,669
problems they have to make an investment

00:20:49,649 --> 00:20:52,769
that looks like this and that's

00:20:50,669 --> 00:20:54,480
tolerable for now now let's raise the

00:20:52,769 --> 00:20:56,119
bar you know again and this is an

00:20:54,480 --> 00:20:58,110
iterative process we can say okay we

00:20:56,119 --> 00:20:59,909
have confidence that we've addressed

00:20:58,110 --> 00:21:01,110
most of the stuff that's down here at

00:20:59,909 --> 00:21:03,360
least I said that were able to identify

00:21:01,110 --> 00:21:04,769
and the bar is higher and the investment

00:21:03,360 --> 00:21:06,210
is higher so if an attacker wants to

00:21:04,769 --> 00:21:07,470
find a vulnerability here they have to

00:21:06,210 --> 00:21:09,029
spend this kind of time to do it but

00:21:07,470 --> 00:21:12,240
then to exploit a vulnerability that's

00:21:09,029 --> 00:21:13,619
here they also have to build build an

00:21:12,240 --> 00:21:14,820
exploit that circumvents all these

00:21:13,619 --> 00:21:17,730
different mitigations that we've put in

00:21:14,820 --> 00:21:21,269
place and that's expensive and then if

00:21:17,730 --> 00:21:22,679
they try to exploit it in the wild in

00:21:21,269 --> 00:21:24,929
deployment folks have got all these

00:21:22,679 --> 00:21:26,369
different ways of identifying that

00:21:24,929 --> 00:21:29,340
there's potentially an exploit in

00:21:26,369 --> 00:21:32,210
progress and so if it's identified then

00:21:29,340 --> 00:21:34,289
that specific problem is going to be

00:21:32,210 --> 00:21:35,369
there that specific exploit can be

00:21:34,289 --> 00:21:36,720
difficult to use over and over again

00:21:35,369 --> 00:21:39,509
because once we know about it as an

00:21:36,720 --> 00:21:41,759
industry we can mitigate it in that

00:21:39,509 --> 00:21:43,830
software we can create ways to identify

00:21:41,759 --> 00:21:45,210
that it's happening and so that becomes

00:21:43,830 --> 00:21:46,769
less effective you can't use it over and

00:21:45,210 --> 00:21:47,879
over again and that bar is even higher

00:21:46,769 --> 00:21:50,279
so now in addition

00:21:47,879 --> 00:21:51,959
to a vulnerability and an exploit we've

00:21:50,279 --> 00:21:53,039
got maybe this is how they got around

00:21:51,959 --> 00:21:54,509
this mitigation and that we can make the

00:21:53,039 --> 00:21:56,069
mitigation stronger we can make the

00:21:54,509 --> 00:21:58,469
software more resilient we can make the

00:21:56,069 --> 00:22:01,589
environment more able to identify these

00:21:58,469 --> 00:22:02,819
kinds of attacks and over time the bar

00:22:01,589 --> 00:22:04,379
gets higher and higher and that's

00:22:02,819 --> 00:22:06,089
actually what's happened it's actually a

00:22:04,379 --> 00:22:08,969
lot harder now to compromise an

00:22:06,089 --> 00:22:11,099
environment or even an operating system

00:22:08,969 --> 00:22:12,479
or or a device because you need multiple

00:22:11,099 --> 00:22:13,919
vulnerabilities you need a vulnerability

00:22:12,479 --> 00:22:16,789
in every layer so this is the core our

00:22:13,919 --> 00:22:18,989
defensive death as part of the the SDO

00:22:16,789 --> 00:22:20,159
that we want to make sure that we've got

00:22:18,989 --> 00:22:22,199
them not relying on any single

00:22:20,159 --> 00:22:23,789
technology that even once it's

00:22:22,199 --> 00:22:25,259
compromised it's not fully compromised

00:22:23,789 --> 00:22:26,849
you know keep all your eggs in one

00:22:25,259 --> 00:22:28,349
basket you don't keep all of your money

00:22:26,849 --> 00:22:29,729
with you at the same time you're not

00:22:28,349 --> 00:22:31,019
walking around like literally carrying

00:22:29,729 --> 00:22:33,449
all of your wealth at any point in time

00:22:31,019 --> 00:22:35,399
you've got you know what you need you're

00:22:33,449 --> 00:22:38,489
isolated other stuff you've you've

00:22:35,399 --> 00:22:42,899
created an environment where it's it's

00:22:38,489 --> 00:22:46,139
it's a it's difficult to to easily get

00:22:42,899 --> 00:22:48,389
to any specific asset that's high-value

00:22:46,139 --> 00:22:49,889
to you and and potentially a great

00:22:48,389 --> 00:22:51,299
target for somebody else yeah

00:22:49,889 --> 00:22:53,369
so all those mechanisms together allow

00:22:51,299 --> 00:22:54,569
us to create an environment where the

00:22:53,369 --> 00:22:56,909
attacker has to work harder and harder

00:22:54,569 --> 00:22:59,249
and harder and harder and they're

00:22:56,909 --> 00:23:04,079
willing to do that for a very high value

00:22:59,249 --> 00:23:06,119
asset but not everything I think it

00:23:04,079 --> 00:23:08,369
takes a nation-state not some random

00:23:06,119 --> 00:23:11,069
person who gets a hold of a tool it just

00:23:08,369 --> 00:23:14,369
that that bar getting higher certainly

00:23:11,069 --> 00:23:15,959
makes us all all all safer it's it's

00:23:14,369 --> 00:23:18,899
interesting because I would love to have

00:23:15,959 --> 00:23:21,509
more conversations between folks like

00:23:18,899 --> 00:23:23,039
who you who see sort of this broad view

00:23:21,509 --> 00:23:24,929
of the world and how technology is some

00:23:23,039 --> 00:23:26,219
it is implemented and then you know

00:23:24,929 --> 00:23:29,009
open-source projects that are working

00:23:26,219 --> 00:23:30,479
kind of to some degree in isolation so I

00:23:29,009 --> 00:23:31,859
mean I think these do understand how

00:23:30,479 --> 00:23:33,479
their suffer gets implemented but not

00:23:31,859 --> 00:23:38,819
day-in day-out right they're working on

00:23:33,479 --> 00:23:39,959
on the code and so speaking of end users

00:23:38,819 --> 00:23:42,869
and people are implementing this

00:23:39,959 --> 00:23:46,289
software is we have a bunch of them out

00:23:42,869 --> 00:23:49,109
here what advice would you give to folks

00:23:46,289 --> 00:23:51,329
who every day are getting sold well if

00:23:49,109 --> 00:23:53,729
you use this software composition

00:23:51,329 --> 00:23:55,709
analysis tool or you do a bug bounty

00:23:53,729 --> 00:23:58,169
program or you do this particular tool

00:23:55,709 --> 00:24:00,130
or I've got this thing to sell you it's

00:23:58,169 --> 00:24:02,350
just I get questions all the time from

00:24:00,130 --> 00:24:04,720
thing like this just is confusing to me

00:24:02,350 --> 00:24:06,190
in you know how do I deal with all that

00:24:04,720 --> 00:24:08,350
well what advice do you have to those

00:24:06,190 --> 00:24:09,850
folks who are implementing these systems

00:24:08,350 --> 00:24:11,410
and getting sold a lot of different

00:24:09,850 --> 00:24:13,240
tools and things out there it's

00:24:11,410 --> 00:24:16,270
definitely easy to get overwhelmed and

00:24:13,240 --> 00:24:17,980
it's really hard to identify whether

00:24:16,270 --> 00:24:20,410
this this thing that someone's trying to

00:24:17,980 --> 00:24:22,510
sell you it's going to be useful in your

00:24:20,410 --> 00:24:25,930
environment so I I turned to metrics I

00:24:22,510 --> 00:24:27,460
try to say okay I evaluated this source

00:24:25,930 --> 00:24:31,300
code analysis tool I ran it on my

00:24:27,460 --> 00:24:35,110
project and I got this many red flags

00:24:31,300 --> 00:24:37,330
and after I investigated the red flags I

00:24:35,110 --> 00:24:40,360
ended up with this many actual issues

00:24:37,330 --> 00:24:43,990
that required a fix in code and the time

00:24:40,360 --> 00:24:46,780
I spent to get those issues identified

00:24:43,990 --> 00:24:49,090
and resolved looked like this if I have

00:24:46,780 --> 00:24:51,700
a tool that's given me thousands of

00:24:49,090 --> 00:24:53,890
flags to like one or two real issues and

00:24:51,700 --> 00:24:55,660
that's a lot of time I'm spending trying

00:24:53,890 --> 00:24:57,730
to make that toy useful in my

00:24:55,660 --> 00:25:00,820
environment even though that tool might

00:24:57,730 --> 00:25:02,740
be highly recommended and that sales

00:25:00,820 --> 00:25:05,260
person was so convincing they're they're

00:25:02,740 --> 00:25:07,780
they're they're pamphlets were so glossy

00:25:05,260 --> 00:25:09,760
this might not be where I want to invest

00:25:07,780 --> 00:25:11,050
my my time which is actually much more

00:25:09,760 --> 00:25:11,460
interesting than where you invest your

00:25:11,050 --> 00:25:15,520
money

00:25:11,460 --> 00:25:17,950
I'm a security perspective so what

00:25:15,520 --> 00:25:21,400
things do have a good a good return so

00:25:17,950 --> 00:25:24,040
for example this code that we're

00:25:21,400 --> 00:25:26,590
implementing does a lot of profit a lot

00:25:24,040 --> 00:25:28,510
of parsing right that might be a lot of

00:25:26,590 --> 00:25:30,550
attack surface and it's exposed through

00:25:28,510 --> 00:25:32,500
this interface and is there some way

00:25:30,550 --> 00:25:34,840
that we can isolate that I would look

00:25:32,500 --> 00:25:36,400
for mechanisms that we can use to reduce

00:25:34,840 --> 00:25:39,760
attack surface and one of the most

00:25:36,400 --> 00:25:41,290
inexpensive tools broadly available on

00:25:39,760 --> 00:25:43,570
every platform that you can use that

00:25:41,290 --> 00:25:47,470
makes your code more secure immediately

00:25:43,570 --> 00:25:50,440
is delete you can cut out code that

00:25:47,470 --> 00:25:52,330
doesn't solve a purpose that you need to

00:25:50,440 --> 00:25:54,010
support any longer and reduce your

00:25:52,330 --> 00:25:55,870
attack surface dramatically by just not

00:25:54,010 --> 00:25:57,160
having it present and it's reasonable to

00:25:55,870 --> 00:26:00,430
say that oh someday somebody might want

00:25:57,160 --> 00:26:01,480
to use this and it's really hard to say

00:26:00,430 --> 00:26:03,070
well we don't need this anymore and so

00:26:01,480 --> 00:26:04,450
we're gonna get rid of it but that is

00:26:03,070 --> 00:26:05,980
actually making your code significally

00:26:04,450 --> 00:26:07,810
more secure because the pathways that

00:26:05,980 --> 00:26:09,510
are widely in use are the ones who are

00:26:07,810 --> 00:26:12,320
going to be that are going to be most

00:26:09,510 --> 00:26:16,070
widely investigated or inspected

00:26:12,320 --> 00:26:17,299
and then the edge cases that they don't

00:26:16,070 --> 00:26:19,399
get as much inspection they're like less

00:26:17,299 --> 00:26:21,710
maintained we haven't looked at it in in

00:26:19,399 --> 00:26:23,259
quite a while those are the places that

00:26:21,710 --> 00:26:25,460
are going to bite you so if it's not

00:26:23,259 --> 00:26:26,779
necessary or if you can modular eyes it

00:26:25,460 --> 00:26:30,559
like hey most folks are going to use

00:26:26,779 --> 00:26:32,450
this set of features and for folks who

00:26:30,559 --> 00:26:34,700
need this functionality maybe we could

00:26:32,450 --> 00:26:36,169
implement it in a modular way and and

00:26:34,700 --> 00:26:39,320
isolate it so that most folks aren't

00:26:36,169 --> 00:26:41,480
exposed to this and the the bulk of your

00:26:39,320 --> 00:26:44,809
users or folks who end up deploying your

00:26:41,480 --> 00:26:46,580
software get the code that is able to be

00:26:44,809 --> 00:26:50,179
inspected at the the closest level of

00:26:46,580 --> 00:26:51,470
detail I unfortunately running a time

00:26:50,179 --> 00:26:53,690
and I could talk about this all David I

00:26:51,470 --> 00:26:56,090
do want to ask you one thing I I would

00:26:53,690 --> 00:26:58,190
love you to come back and continue this

00:26:56,090 --> 00:27:00,139
conversation it was such an important

00:26:58,190 --> 00:27:02,059
thing for folks to hear in our

00:27:00,139 --> 00:27:05,539
communities let's determine what that

00:27:02,059 --> 00:27:07,129
bar is and just the way you look at the

00:27:05,539 --> 00:27:10,789
world I think is so helpful to folks who

00:27:07,129 --> 00:27:13,070
are writing code or implementing it you

00:27:10,789 --> 00:27:14,809
know we just did a multi-million dollar

00:27:13,070 --> 00:27:16,190
security audit and if we had just had a

00:27:14,809 --> 00:27:17,570
little bit of discipline and hit that

00:27:16,190 --> 00:27:21,500
Delete key we could have saved all that

00:27:17,570 --> 00:27:24,169
money get a new perspective is is always

00:27:21,500 --> 00:27:26,120
good so I we would love to have you back

00:27:24,169 --> 00:27:27,830
and thank you so much for your advice

00:27:26,120 --> 00:27:28,790
and for coming here today thank you

00:27:27,830 --> 00:27:34,859
alright

00:27:28,790 --> 00:27:34,859

YouTube URL: https://www.youtube.com/watch?v=Z4Ga8pJrtJ0


