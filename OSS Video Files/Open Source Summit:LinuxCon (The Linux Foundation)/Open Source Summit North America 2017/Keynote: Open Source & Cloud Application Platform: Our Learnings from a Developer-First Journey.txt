Title: Keynote: Open Source & Cloud Application Platform: Our Learnings from a Developer-First Journey
Publication date: 2017-09-13
Playlist: Open Source Summit North America 2017
Description: 
	Keynote: Open Source & Cloud Application Platform: Our Learnings from a Developer-First Journey - Julia Liuson, Corporate Vice President, VS & .NET, Developer Division, Microsoft

Microsoft’s approach to open source in the cloud is about much more than just enabling key technologies. The multi-year journey to providing great Linux support for customers in the cloud has yielded significant learnings that are now applied across Microsoft’s platform from .NET Core to Azure, benefitting developers and meeting them where they are. Learn more about this approach and see first-hand a live demo of exciting new capabilities for open source developers in Julia’s keynote, come see us at booth #203 and join our breakout sessions to learn more!

About Julia Liuson
Julia Liuson is Corporate Vice President of the Developer Division, overseeing software development for Visual Studio and .NET framework, including CLR, .NET x-plat effort, all programming languages, user interface, mobile and cloud development tools.

Liuson joined Microsoft in 1992, and has held a variety of technical and management positions while at Microsoft. She was General Manager of Visual Studio Business Applications where she was responsible for enabling developers to easily build applications on Microsoft client, server and service platforms.

Liuson has also served as General Manager for Server and Tools business from MS Shanghai office in China for two years while running engineering teams on both sides of the Pacific.

Previously, Liuson has served as development manager, and later as Partner Product Unit Manager for Visual Basic. She was also a core member of the leadership team that led the successful development and launch of Visual Studio Team System in 2005.

Liuson received a Bachelor of Science in Electrical Engineering from University of Washington
Captions: 
	00:00:00,030 --> 00:00:06,299
well good afternoon and thank you so

00:00:03,030 --> 00:00:08,700
much for having me here as our announcer

00:00:06,299 --> 00:00:11,940
said Microsoft is a bit new in the open

00:00:08,700 --> 00:00:13,259
source world and it's a great pleasure

00:00:11,940 --> 00:00:15,980
for me to be here

00:00:13,259 --> 00:00:18,949
at the open source summit representing

00:00:15,980 --> 00:00:21,570
15,000 Microsoft employees actually

00:00:18,949 --> 00:00:24,960
contributing to open source project in

00:00:21,570 --> 00:00:27,810
github last year just a very quick intro

00:00:24,960 --> 00:00:30,599
of myself I have just spent I have just

00:00:27,810 --> 00:00:33,329
crossed my 25-year mark with Microsoft I

00:00:30,599 --> 00:00:36,840
started as a developer working on

00:00:33,329 --> 00:00:38,730
Microsoft Office product and why I think

00:00:36,840 --> 00:00:41,309
back the kind of transformation that we

00:00:38,730 --> 00:00:45,570
have gone through just a few years ago

00:00:41,309 --> 00:00:48,059
as a developer in Microsoft if you want

00:00:45,570 --> 00:00:50,879
to look at open source code you actually

00:00:48,059 --> 00:00:54,449
need to have approval from your VP to do

00:00:50,879 --> 00:00:56,610
that that was not very long ago and let

00:00:54,449 --> 00:01:00,329
me just tell you a story about we open

00:00:56,610 --> 00:01:03,180
sourced our c-sharp compiler in april of

00:01:00,329 --> 00:01:05,610
2014 so that's three and a half years

00:01:03,180 --> 00:01:09,030
ago as we're getting ready for that

00:01:05,610 --> 00:01:10,710
particular plan we discovered that we

00:01:09,030 --> 00:01:13,049
will have to go get the source code

00:01:10,710 --> 00:01:15,840
right of the c-sharp compiler that we

00:01:13,049 --> 00:01:19,080
built to another legal entity inside

00:01:15,840 --> 00:01:21,299
Microsoft and I have to tell my compiler

00:01:19,080 --> 00:01:24,450
developers that they have to sign a

00:01:21,299 --> 00:01:27,420
contract to become contractors of this

00:01:24,450 --> 00:01:29,490
other Michael's a legal entity and as

00:01:27,420 --> 00:01:32,310
you can imagine the my compiler

00:01:29,490 --> 00:01:35,040
developers were very confused so they

00:01:32,310 --> 00:01:38,549
came to me they're like what does this

00:01:35,040 --> 00:01:41,250
mean does it impact my benefit data

00:01:38,549 --> 00:01:43,619
inside my rewards why do I have to do

00:01:41,250 --> 00:01:46,159
this I'm like don't ask just sign right

00:01:43,619 --> 00:01:48,960
here that's what we need to get done and

00:01:46,159 --> 00:01:52,049
that needless to say that we have come a

00:01:48,960 --> 00:01:54,180
very very long way from those days than

00:01:52,049 --> 00:01:56,130
eight and now it's really only three and

00:01:54,180 --> 00:01:58,799
a half years ago and we have made

00:01:56,130 --> 00:02:01,920
significant pivot in such a short amount

00:01:58,799 --> 00:02:04,200
of time and I'm really proud that you

00:02:01,920 --> 00:02:06,719
know my team my division has led the way

00:02:04,200 --> 00:02:09,820
for overall for Microsoft embracing

00:02:06,719 --> 00:02:11,500
open-source in a pretty significant way

00:02:09,820 --> 00:02:14,380
we have a number of very successful

00:02:11,500 --> 00:02:17,260
project including Visual Studio code

00:02:14,380 --> 00:02:20,530
including Donette including typescript

00:02:17,260 --> 00:02:22,900
as part of the github community and we

00:02:20,530 --> 00:02:25,510
have also turned very closely with many

00:02:22,900 --> 00:02:27,940
open source communities as well as

00:02:25,510 --> 00:02:30,910
commercial partners in a broth of the

00:02:27,940 --> 00:02:35,050
open source project like node like

00:02:30,910 --> 00:02:36,970
kubernetes like Linux etc etc and today

00:02:35,050 --> 00:02:39,550
I like to share some of the lessons that

00:02:36,970 --> 00:02:42,070
we have learned in this rapid cultural

00:02:39,550 --> 00:02:46,570
shift and kind of transformation that we

00:02:42,070 --> 00:02:48,700
have actually been on and why I think

00:02:46,570 --> 00:02:51,160
about the open source attempts at

00:02:48,700 --> 00:02:54,940
Microsoft try to make you know a few

00:02:51,160 --> 00:02:56,860
years back we were very naive we really

00:02:54,940 --> 00:02:59,110
started our open-source meant source

00:02:56,860 --> 00:03:01,120
only we're very focused on

00:02:59,110 --> 00:03:04,240
hey there's first code for developer to

00:03:01,120 --> 00:03:07,209
access and use and we took the meaning

00:03:04,240 --> 00:03:09,850
of open source quite literally and today

00:03:07,209 --> 00:03:12,130
when we really think about what open

00:03:09,850 --> 00:03:14,110
source project actually means we're

00:03:12,130 --> 00:03:16,630
looking at all the different aspects of

00:03:14,110 --> 00:03:18,700
being open and taking a much more

00:03:16,630 --> 00:03:22,030
holistic approach about thinking about

00:03:18,700 --> 00:03:24,940
this and another story from our own

00:03:22,030 --> 00:03:27,370
journey when we were planning to open

00:03:24,940 --> 00:03:31,090
sourced our net which happened in

00:03:27,370 --> 00:03:33,340
November of 2014 we when we were looking

00:03:31,090 --> 00:03:34,930
at what does it take from an engineering

00:03:33,340 --> 00:03:38,200
perspective to make that happen

00:03:34,930 --> 00:03:41,350
one of the first deep realization we had

00:03:38,200 --> 00:03:44,170
is that we have to go make the entire

00:03:41,350 --> 00:03:46,750
internal engineering system available in

00:03:44,170 --> 00:03:48,880
the open and this is so that once the

00:03:46,750 --> 00:03:50,980
source code shows up in github the

00:03:48,880 --> 00:03:53,260
community can compile the source code

00:03:50,980 --> 00:03:55,180
and run our tests to validate their

00:03:53,260 --> 00:03:57,519
changes and make sure that the compiler

00:03:55,180 --> 00:03:59,769
is still there you know etc etc so

00:03:57,519 --> 00:04:01,959
having the engineering system being

00:03:59,769 --> 00:04:04,600
available it's actually a prerequisite

00:04:01,959 --> 00:04:08,560
of having a successful open source

00:04:04,600 --> 00:04:11,459
project and for us we had a proprietary

00:04:08,560 --> 00:04:14,950
engineering system that is Windows only

00:04:11,459 --> 00:04:16,930
we have spent a decade working on it so

00:04:14,950 --> 00:04:19,239
the effort of taking this engineering

00:04:16,930 --> 00:04:21,100
system make it available targeting

00:04:19,239 --> 00:04:24,400
making sure you works on Mac and

00:04:21,100 --> 00:04:27,250
monix was the enormous among effort what

00:04:24,400 --> 00:04:29,590
we end up actually doing was that we

00:04:27,250 --> 00:04:30,970
decided to really sense that a lot of

00:04:29,590 --> 00:04:34,480
the internal tools that we were using

00:04:30,970 --> 00:04:36,910
and opted for open source tools buying a

00:04:34,480 --> 00:04:39,340
large and but there were a number of

00:04:36,910 --> 00:04:41,170
critical core internal tools that we end

00:04:39,340 --> 00:04:43,690
up having to open source and make a

00:04:41,170 --> 00:04:46,360
cross platform ourselves so the

00:04:43,690 --> 00:04:48,640
community can actually actively engage

00:04:46,360 --> 00:04:53,080
indeed on a project when we actually

00:04:48,640 --> 00:04:55,000
made the open source and the second key

00:04:53,080 --> 00:04:57,970
decision when we look at the Donette

00:04:55,000 --> 00:05:00,880
open source effort was in how open we

00:04:57,970 --> 00:05:03,220
want to be and it sounds a little funny

00:05:00,880 --> 00:05:05,230
maybe but we actually studied many of

00:05:03,220 --> 00:05:07,720
the very large and popular open source

00:05:05,230 --> 00:05:09,970
project to see how the development was

00:05:07,720 --> 00:05:11,770
actually being done and you will find

00:05:09,970 --> 00:05:13,510
that some of the very popular open

00:05:11,770 --> 00:05:15,880
source project the way it was actually

00:05:13,510 --> 00:05:18,520
done is that the development happened

00:05:15,880 --> 00:05:20,590
behind closed doors it was happen

00:05:18,520 --> 00:05:22,420
internally and while we're done was a

00:05:20,590 --> 00:05:24,940
major release the entire source code

00:05:22,420 --> 00:05:26,680
kind of get copied out chewed up you

00:05:24,940 --> 00:05:28,600
know get her repo for the community to

00:05:26,680 --> 00:05:31,690
see and you know and you're welcome to

00:05:28,600 --> 00:05:33,670
make bug fixes maybe and then there are

00:05:31,690 --> 00:05:35,440
some other open source project where the

00:05:33,670 --> 00:05:38,500
entire team will actually work in the

00:05:35,440 --> 00:05:41,230
open so when we look at this practices

00:05:38,500 --> 00:05:43,780
the decision we made is that we not only

00:05:41,230 --> 00:05:46,750
want to have the entire engineering team

00:05:43,780 --> 00:05:49,300
doing everything out there in open but

00:05:46,750 --> 00:05:52,840
more importantly we really want to

00:05:49,300 --> 00:05:55,840
embrace the community in helping us in

00:05:52,840 --> 00:05:58,390
working on our role map together we want

00:05:55,840 --> 00:06:00,400
our ro map to be designed in the open we

00:05:58,390 --> 00:06:02,920
want the architectural decisions we make

00:06:00,400 --> 00:06:05,590
to be discussed in the open we want

00:06:02,920 --> 00:06:08,320
feature request and a prioritization and

00:06:05,590 --> 00:06:10,540
all of these design decisions to be

00:06:08,320 --> 00:06:13,230
complete discussed in the open so that's

00:06:10,540 --> 00:06:15,970
a very different approach and mentality

00:06:13,230 --> 00:06:19,170
encroaching open from our early days of

00:06:15,970 --> 00:06:22,300
just thinking about open source and

00:06:19,170 --> 00:06:25,180
needless to say you know work entirely

00:06:22,300 --> 00:06:27,910
in the open was a huge cultural change

00:06:25,180 --> 00:06:29,700
for engineering teams we have a lot of

00:06:27,910 --> 00:06:33,040
hidden engineers who have spent many

00:06:29,700 --> 00:06:35,090
moons you know in Microsoft even with

00:06:33,040 --> 00:06:36,830
the best intentions

00:06:35,090 --> 00:06:39,290
the team in the beginning really

00:06:36,830 --> 00:06:42,200
struggled quite a bit with old habits

00:06:39,290 --> 00:06:44,870
and behaviors you know Microsoft for

00:06:42,200 --> 00:06:48,350
good or bad we're a very email centric

00:06:44,870 --> 00:06:50,840
kind of company we love we send a lot of

00:06:48,350 --> 00:06:53,870
email to each other and we love a lot of

00:06:50,840 --> 00:06:56,560
face-to-face meetings and for many years

00:06:53,870 --> 00:06:59,450
our proud decisions were made in

00:06:56,560 --> 00:07:01,760
conference rooms behind closed doors the

00:06:59,450 --> 00:07:04,370
architectural decisions were designed

00:07:01,760 --> 00:07:06,950
and discussed on whiteboards in our

00:07:04,370 --> 00:07:09,530
buildings so the question now we ask

00:07:06,950 --> 00:07:12,620
ourselves in this new open a transparent

00:07:09,530 --> 00:07:15,770
world is that how can we get a community

00:07:12,620 --> 00:07:17,840
to really understand the context and the

00:07:15,770 --> 00:07:19,970
rationales for some of these changes we

00:07:17,840 --> 00:07:22,010
want to make to the co base and really

00:07:19,970 --> 00:07:25,100
give us very rapid feedback in this

00:07:22,010 --> 00:07:27,560
whole process and so we took we made a

00:07:25,100 --> 00:07:31,340
mini experiment on being transparent

00:07:27,560 --> 00:07:33,230
with the community we feed it and one of

00:07:31,340 --> 00:07:35,120
the one of the best practices if you may

00:07:33,230 --> 00:07:37,760
that we're starting to kind of you know

00:07:35,120 --> 00:07:40,430
using more is that we would collect

00:07:37,760 --> 00:07:43,760
ideas and discussions and topics and

00:07:40,430 --> 00:07:45,620
issues or actually get community to vote

00:07:43,760 --> 00:07:48,350
on some of the most popular requests oh

00:07:45,620 --> 00:07:51,110
I should put proposal out there and for

00:07:48,350 --> 00:07:54,170
the community to discuss and as an

00:07:51,110 --> 00:07:57,650
example the asp.net team would actually

00:07:54,170 --> 00:07:59,120
record a weekly stand up every week to

00:07:57,650 --> 00:08:00,530
talk about what our top issues that

00:07:59,120 --> 00:08:02,450
they're facing what is sort of plan for

00:08:00,530 --> 00:08:04,970
the next stage and they will just put

00:08:02,450 --> 00:08:07,340
out on YouTube we get like well over

00:08:04,970 --> 00:08:09,020
5,000 views every week and then no

00:08:07,340 --> 00:08:09,920
comments from the community about what

00:08:09,020 --> 00:08:12,710
they liked what they didn't like

00:08:09,920 --> 00:08:16,280
questions etc and we have found that to

00:08:12,710 --> 00:08:18,110
be a very very helpful forum for our own

00:08:16,280 --> 00:08:20,240
internal cultural shift from an

00:08:18,110 --> 00:08:23,270
engineering perspective because for our

00:08:20,240 --> 00:08:24,830
engineers there now you know with all of

00:08:23,270 --> 00:08:26,510
this engagement dialogue with the

00:08:24,830 --> 00:08:28,610
community they're getting a really deep

00:08:26,510 --> 00:08:31,310
sense of what are a customer centered

00:08:28,610 --> 00:08:33,380
are building towards and they understand

00:08:31,310 --> 00:08:35,419
the impact of the source code change

00:08:33,380 --> 00:08:37,729
they're about to make and they develop

00:08:35,419 --> 00:08:39,380
this more emotional connection was

00:08:37,729 --> 00:08:42,320
actually the users and community at

00:08:39,380 --> 00:08:45,470
large and the other thing that we really

00:08:42,320 --> 00:08:46,769
benefited is this rapid and continuous

00:08:45,470 --> 00:08:49,619
feedback loop

00:08:46,769 --> 00:08:51,480
we have even from the initial ideas we

00:08:49,619 --> 00:08:53,759
get feedback from the community and we

00:08:51,480 --> 00:08:55,499
you know for many of our product we have

00:08:53,759 --> 00:08:57,449
you know insider channels or preview

00:08:55,499 --> 00:08:59,339
channels where the community can get it

00:08:57,449 --> 00:09:01,350
very early they get to play with our

00:08:59,339 --> 00:09:03,509
early implementation and give us

00:09:01,350 --> 00:09:05,549
feedback and then once the products

00:09:03,509 --> 00:09:08,069
actually release many of our community

00:09:05,549 --> 00:09:10,439
members are actually our best product

00:09:08,069 --> 00:09:13,139
and they help us in Oh champion our the

00:09:10,439 --> 00:09:14,850
product so we have with this set of

00:09:13,139 --> 00:09:17,009
changes it really helped us to get a

00:09:14,850 --> 00:09:19,079
very fast validation of our plans and

00:09:17,009 --> 00:09:23,850
help us do the risk the plans we're

00:09:19,079 --> 00:09:26,399
making and the other element as we

00:09:23,850 --> 00:09:28,679
realize just like everyone here who are

00:09:26,399 --> 00:09:31,079
you know in the open-source summit we

00:09:28,679 --> 00:09:33,149
clearly realized that you know a

00:09:31,079 --> 00:09:36,809
community centric approach brings a lot

00:09:33,149 --> 00:09:39,660
of value even then I have to say that we

00:09:36,809 --> 00:09:41,910
were very surprised by the magnitude of

00:09:39,660 --> 00:09:44,429
the value we actually received let me

00:09:41,910 --> 00:09:47,040
tell you another story also has to do

00:09:44,429 --> 00:09:49,829
with the Donette open-source effort well

00:09:47,040 --> 00:09:51,899
we after you know going through a huge

00:09:49,829 --> 00:09:53,549
engineering system change and all of

00:09:51,899 --> 00:09:55,709
that as I mentioned earlier for the

00:09:53,549 --> 00:09:58,079
source code out we made big announcement

00:09:55,709 --> 00:10:01,499
you know in our November event and you

00:09:58,079 --> 00:10:03,360
know we were top of hacker news and one

00:10:01,499 --> 00:10:05,189
of the things we did to put the source

00:10:03,360 --> 00:10:07,139
code out is that we you know it was our

00:10:05,189 --> 00:10:10,439
intention to make you know this dotnet

00:10:07,139 --> 00:10:13,410
work on Linux and Mac but our initial

00:10:10,439 --> 00:10:15,509
source code we released had many many

00:10:13,410 --> 00:10:17,910
gaps in terms of implementation in terms

00:10:15,509 --> 00:10:21,839
of API to make a fully functional

00:10:17,910 --> 00:10:24,119
product for Mac and Linux two days two

00:10:21,839 --> 00:10:27,540
days after we open sourced the product

00:10:24,119 --> 00:10:30,509
on github we got a massive pour request

00:10:27,540 --> 00:10:32,669
from someone in the community which had

00:10:30,509 --> 00:10:37,169
the lion's share of the Mac

00:10:32,669 --> 00:10:40,919
implementation in his poor request we

00:10:37,169 --> 00:10:42,569
were astonished because our own team you

00:10:40,919 --> 00:10:44,309
know they were kind of estimating what

00:10:42,569 --> 00:10:48,269
take us a couple of months to kind of

00:10:44,309 --> 00:10:50,669
get to that level of completeness and we

00:10:48,269 --> 00:10:52,350
were humbled because honestly you know

00:10:50,669 --> 00:10:54,569
being Microsoft this is three years ago

00:10:52,350 --> 00:10:56,850
when we put something github we really

00:10:54,569 --> 00:10:58,740
didn't know whether community will pay

00:10:56,850 --> 00:11:00,600
attention they watch it look our source

00:10:58,740 --> 00:11:02,160
code we were amazing

00:11:00,600 --> 00:11:06,269
humbled by what the community has done

00:11:02,160 --> 00:11:09,120
and from that moment on it would really

00:11:06,269 --> 00:11:11,220
help us realize that just develop in the

00:11:09,120 --> 00:11:14,190
open which means our own engineering

00:11:11,220 --> 00:11:16,949
team develop in open it's just not

00:11:14,190 --> 00:11:20,069
enough we really want to become

00:11:16,949 --> 00:11:22,259
community obsessed and we want to really

00:11:20,069 --> 00:11:26,519
work on how we can make community a

00:11:22,259 --> 00:11:29,040
extension of our team and really think

00:11:26,519 --> 00:11:31,800
about how to make it super easy for the

00:11:29,040 --> 00:11:34,199
community to contribute to our ripples

00:11:31,800 --> 00:11:36,569
to raise issues to have a dialogue and

00:11:34,199 --> 00:11:38,790
so there are many different practices we

00:11:36,569 --> 00:11:40,920
actually tried to you know a reach to

00:11:38,790 --> 00:11:43,230
kind of achieve to that state one of the

00:11:40,920 --> 00:11:45,899
things as we learned participating other

00:11:43,230 --> 00:11:47,819
open source project is that when we

00:11:45,899 --> 00:11:50,190
submit a pull request sometimes it says

00:11:47,819 --> 00:11:52,529
there for a long time and didn't really

00:11:50,190 --> 00:11:56,459
get looked at so we kind of instilled a

00:11:52,529 --> 00:11:58,139
internal SLA to look at like you know

00:11:56,459 --> 00:12:00,690
it's a community making a poor request

00:11:58,139 --> 00:12:03,329
we want to respond you know in like 24

00:12:00,690 --> 00:12:05,370
to 48 hours and not let the people hang

00:12:03,329 --> 00:12:08,100
and that's kind of the courtesy you will

00:12:05,370 --> 00:12:09,480
extend your own team anyways right and

00:12:08,100 --> 00:12:11,250
so we're like this is the same thing we

00:12:09,480 --> 00:12:13,800
will do with our community contribution

00:12:11,250 --> 00:12:15,600
one the contribution coming in sometimes

00:12:13,800 --> 00:12:17,430
there's a very active dialogue going on

00:12:15,600 --> 00:12:19,529
the pull request there's lots of back

00:12:17,430 --> 00:12:21,600
and forth and we really work on give

00:12:19,529 --> 00:12:24,060
very detailed pull request comments

00:12:21,600 --> 00:12:26,069
about which partisan works which parsing

00:12:24,060 --> 00:12:28,259
our issues and I think that we have got

00:12:26,069 --> 00:12:30,149
really awesome feedback on the community

00:12:28,259 --> 00:12:32,579
that through this dialogue with our

00:12:30,149 --> 00:12:34,980
engineering teams there they got a much

00:12:32,579 --> 00:12:38,910
better understanding of the co base you

00:12:34,980 --> 00:12:40,709
know of the of the scenarios etc some of

00:12:38,910 --> 00:12:44,069
the other things we have tried to do is

00:12:40,709 --> 00:12:46,889
that we also put a code of conduct out

00:12:44,069 --> 00:12:48,360
there for our for our for our open

00:12:46,889 --> 00:12:50,009
source projects this is to make sure

00:12:48,360 --> 00:12:52,620
that we really get a broad as the most

00:12:50,009 --> 00:12:54,930
inclusive community participation and

00:12:52,620 --> 00:12:58,110
you know again this is very similar of

00:12:54,930 --> 00:13:00,360
how way to treat our own teams and from

00:12:58,110 --> 00:13:02,639
a numbers perspective we kind of rethink

00:13:00,360 --> 00:13:05,970
about what success metric looks like in

00:13:02,639 --> 00:13:07,740
the past as product engineers we think a

00:13:05,970 --> 00:13:09,510
lot about how many new features we have

00:13:07,740 --> 00:13:11,550
released right that's that's what we're

00:13:09,510 --> 00:13:13,439
really proud of and now it's a lot of

00:13:11,550 --> 00:13:15,170
open source project we also think about

00:13:13,439 --> 00:13:17,850
how

00:13:15,170 --> 00:13:20,820
community contributors are part of our

00:13:17,850 --> 00:13:24,450
overall process and so for things like

00:13:20,820 --> 00:13:27,210
Visual Studio code the team stands up to

00:13:24,450 --> 00:13:29,910
40 percent of their time treating

00:13:27,210 --> 00:13:33,570
thousands of community feedback and

00:13:29,910 --> 00:13:35,310
issues every month and and also it's not

00:13:33,570 --> 00:13:38,730
surprising for Visual Studio code

00:13:35,310 --> 00:13:40,589
they're among the top ten on all of the

00:13:38,730 --> 00:13:43,440
github projects in terms of total number

00:13:40,589 --> 00:13:45,600
of contributors to github I mean -

00:13:43,440 --> 00:13:48,240
Visual Studio code and for dotnet

00:13:45,600 --> 00:13:50,670
we're also very blessed that we have you

00:13:48,240 --> 00:13:53,430
know 60% of our pull requests actually

00:13:50,670 --> 00:13:55,980
come in from non-microsoft employees and

00:13:53,430 --> 00:13:59,430
the number of the contributors in our

00:13:55,980 --> 00:14:01,860
top ten top 20 contributors or external

00:13:59,430 --> 00:14:03,690
to Microsoft and so we really have you

00:14:01,860 --> 00:14:05,670
know benefited greatly from the

00:14:03,690 --> 00:14:07,560
community participation and from our

00:14:05,670 --> 00:14:11,610
engagement with the community lower the

00:14:07,560 --> 00:14:15,089
barriers to participate and as we

00:14:11,610 --> 00:14:18,270
transform from a from a company really

00:14:15,089 --> 00:14:20,490
of kind of shipping box software you

00:14:18,270 --> 00:14:22,710
know product which is built on

00:14:20,490 --> 00:14:25,140
proprietary software code that's what we

00:14:22,710 --> 00:14:27,420
used to do to a company that is much

00:14:25,140 --> 00:14:30,150
more open that is cloud centric that

00:14:27,420 --> 00:14:33,060
really embraced community we have

00:14:30,150 --> 00:14:36,150
learned as I mentioned many practical

00:14:33,060 --> 00:14:37,830
and cultural lessons initially we also

00:14:36,150 --> 00:14:39,930
sought the menu of the lesson learned

00:14:37,830 --> 00:14:43,320
will very unique to Microsoft we're like

00:14:39,930 --> 00:14:45,360
we're kind of our own beast and kind of

00:14:43,320 --> 00:14:47,730
much to our surprise as we are talking

00:14:45,360 --> 00:14:50,520
to many of the enterprise customers as

00:14:47,730 --> 00:14:53,220
we discuss their journey to have their

00:14:50,520 --> 00:14:55,350
own digital transformation with their

00:14:53,220 --> 00:14:57,990
journey of embracing and use more open

00:14:55,350 --> 00:15:01,530
source it turned out that maybe we were

00:14:57,990 --> 00:15:03,720
not as unique as we thought we were many

00:15:01,530 --> 00:15:07,080
of the lessons we were learned were very

00:15:03,720 --> 00:15:08,790
well or very applicable in the

00:15:07,080 --> 00:15:12,120
enterprise in the enterprise settings as

00:15:08,790 --> 00:15:14,190
well enterprises wants to embrace open

00:15:12,120 --> 00:15:16,860
source they want to increase the agility

00:15:14,190 --> 00:15:18,779
of their deliveries and they really

00:15:16,860 --> 00:15:20,459
focus on to focus on you know very

00:15:18,779 --> 00:15:23,070
differentiate value to deliver to their

00:15:20,459 --> 00:15:25,699
own customers so the kind of concerns

00:15:23,070 --> 00:15:29,869
they have in terms of

00:15:25,699 --> 00:15:32,869
compliance you know skill security etc

00:15:29,869 --> 00:15:34,850
are actually quite common and we have

00:15:32,869 --> 00:15:37,220
dealt with many of these challenges in

00:15:34,850 --> 00:15:39,799
our own journey so Microsoft has

00:15:37,220 --> 00:15:41,779
becoming a really trusted adviser to

00:15:39,799 --> 00:15:44,059
many of our enterprise customers in

00:15:41,779 --> 00:15:47,209
their own kind of work force and all

00:15:44,059 --> 00:15:49,040
transformation and from those dialogues

00:15:47,209 --> 00:15:52,790
with our enterprise customers we have

00:15:49,040 --> 00:15:54,799
also learned a lot we learned that while

00:15:52,790 --> 00:15:57,470
they were very very interested in using

00:15:54,799 --> 00:16:00,139
a lot of the open source software but in

00:15:57,470 --> 00:16:02,329
the cloud context they're really not

00:16:00,139 --> 00:16:04,009
particularly interested or invested to

00:16:02,329 --> 00:16:05,959
figure out how to take open source and

00:16:04,009 --> 00:16:08,419
operate in the production and

00:16:05,959 --> 00:16:09,709
planet-scale and you know they're not

00:16:08,419 --> 00:16:11,149
particular interests in figure out how

00:16:09,709 --> 00:16:12,410
to take open source software and make

00:16:11,149 --> 00:16:14,779
sure it kind of meets all of the

00:16:12,410 --> 00:16:16,339
compliance and certification and all of

00:16:14,779 --> 00:16:19,609
these things which are the backbones of

00:16:16,339 --> 00:16:21,829
being an enterprise and so for us the

00:16:19,609 --> 00:16:23,569
solution to that particular you know

00:16:21,829 --> 00:16:25,699
customer pain point that we actually

00:16:23,569 --> 00:16:28,759
developed a whole set of managed

00:16:25,699 --> 00:16:31,789
services in Azure in our cloud which is

00:16:28,759 --> 00:16:33,529
you know developers can use MongoDB they

00:16:31,789 --> 00:16:35,689
can use Hadoop they can use spar they

00:16:33,529 --> 00:16:38,059
can use my secret cetera and by

00:16:35,689 --> 00:16:39,980
Microsoft developing a managed service

00:16:38,059 --> 00:16:41,629
the enterprise no longer have to worry

00:16:39,980 --> 00:16:43,910
about doing these kind of end

00:16:41,629 --> 00:16:45,859
differentiated heavy lifting they can

00:16:43,910 --> 00:16:48,889
really just focus on delivering value to

00:16:45,859 --> 00:16:51,679
their customers and another key area for

00:16:48,889 --> 00:16:54,350
us to focus on being really focused on

00:16:51,679 --> 00:16:56,839
developers is to say how can we really

00:16:54,350 --> 00:16:59,480
have super simple and productive

00:16:56,839 --> 00:17:02,059
experiences for developers to develop

00:16:59,480 --> 00:17:05,419
their open-source and software all based

00:17:02,059 --> 00:17:07,010
on open source stack and couple examples

00:17:05,419 --> 00:17:09,079
some of you and I have been talking

00:17:07,010 --> 00:17:12,169
quite a bit by visual studio code which

00:17:09,079 --> 00:17:15,529
is our open source and and a

00:17:12,169 --> 00:17:18,169
cross-platform editor and you know even

00:17:15,529 --> 00:17:20,419
from the get-go we had great node

00:17:18,169 --> 00:17:22,069
development in Visual Studio code and

00:17:20,419 --> 00:17:24,949
one of the other extensions we produced

00:17:22,069 --> 00:17:26,510
is actually go so we see all of these

00:17:24,949 --> 00:17:28,909
you know go developer using Visual

00:17:26,510 --> 00:17:31,370
Studio code and you know they love this

00:17:28,909 --> 00:17:33,380
simple productive experiences another

00:17:31,370 --> 00:17:36,910
example we have is that you know from a

00:17:33,380 --> 00:17:39,730
service perspective we recently just g8

00:17:36,910 --> 00:17:41,920
the the Asher app services for Linux so

00:17:39,730 --> 00:17:44,320
if you actually produce a you know your

00:17:41,920 --> 00:17:46,630
Linux Python whatever code in a

00:17:44,320 --> 00:17:49,510
container you can very easily develop

00:17:46,630 --> 00:17:51,670
and test and deploy that with a managed

00:17:49,510 --> 00:17:53,530
service like app service and just erase

00:17:51,670 --> 00:17:55,630
a lot of burden of dealing with SSL

00:17:53,530 --> 00:17:56,920
dealing with deployment sloth and help

00:17:55,630 --> 00:17:59,620
you make your life easier

00:17:56,920 --> 00:18:00,790
building on top of open source stack so

00:17:59,620 --> 00:18:03,190
that's another set of value proposition

00:18:00,790 --> 00:18:05,080
we think that as Microsoft we can

00:18:03,190 --> 00:18:11,320
deliver and to really help the overall

00:18:05,080 --> 00:18:13,510
ecosystem and as I also reflect and

00:18:11,320 --> 00:18:16,600
think about sort of like the overall

00:18:13,510 --> 00:18:18,460
role that dotnet had to play in the

00:18:16,600 --> 00:18:22,030
overall customer adoption of open source

00:18:18,460 --> 00:18:24,130
I mean it's really not a lot of us that

00:18:22,030 --> 00:18:26,740
among all of the popular you know

00:18:24,130 --> 00:18:29,380
developer platform Darnell was the last

00:18:26,740 --> 00:18:31,780
one to become open-source and to become

00:18:29,380 --> 00:18:34,450
cross-platform and now we finally are

00:18:31,780 --> 00:18:37,060
there we're actually very excited that

00:18:34,450 --> 00:18:39,190
we have really helped brought the

00:18:37,060 --> 00:18:44,350
overall open source ecosystem together

00:18:39,190 --> 00:18:45,190
and really enabled developers new and Oh

00:18:44,350 --> 00:18:48,400
to Donette

00:18:45,190 --> 00:18:50,920
to leverage this technology to be a

00:18:48,400 --> 00:18:54,070
broad part of solution that's leveraging

00:18:50,920 --> 00:18:57,460
open source a story I'd like to share in

00:18:54,070 --> 00:18:59,410
this case is there's a very popular

00:18:57,460 --> 00:19:01,510
gaming company the second largest gaming

00:18:59,410 --> 00:19:03,430
company in China and the name of

00:19:01,510 --> 00:19:06,520
companies nannies they were actually

00:19:03,430 --> 00:19:08,740
working on a new mobile gaming title for

00:19:06,520 --> 00:19:10,780
them and for a lot of mobile developers

00:19:08,740 --> 00:19:12,400
you were in a / - in the game scenario

00:19:10,780 --> 00:19:15,250
you know you might know that unity is a

00:19:12,400 --> 00:19:17,260
very common plaque on people use and the

00:19:15,250 --> 00:19:19,450
code to write for unity is actually C

00:19:17,260 --> 00:19:21,040
sharp and dotnet and so what they have

00:19:19,450 --> 00:19:23,740
done is that because when I made a net

00:19:21,040 --> 00:19:26,430
open and cross-platform they were able

00:19:23,740 --> 00:19:28,930
to now pick the net as the backend

00:19:26,430 --> 00:19:30,790
implementation for this particular

00:19:28,930 --> 00:19:33,370
Connie in the for this particular inner

00:19:30,790 --> 00:19:36,640
game where historically they have always

00:19:33,370 --> 00:19:39,820
used you know either Java or C++ in this

00:19:36,640 --> 00:19:41,530
context so when they actually picked C

00:19:39,820 --> 00:19:44,110
sharp and dotnet they actually got

00:19:41,530 --> 00:19:47,200
fantastic sharing of code between their

00:19:44,110 --> 00:19:47,980
front end mobile games and their back

00:19:47,200 --> 00:19:51,220
end

00:19:47,980 --> 00:19:54,159
no back-end infrastructure they can't

00:19:51,220 --> 00:19:56,110
reuse the entire Linux infrastructure

00:19:54,159 --> 00:19:58,690
they have previously built um you know

00:19:56,110 --> 00:20:00,940
targeting C++ and Java in terms of

00:19:58,690 --> 00:20:03,190
monitoring all of those things and it

00:20:00,940 --> 00:20:05,169
just runs down that code so in this way

00:20:03,190 --> 00:20:07,510
when the eCos has come together our

00:20:05,169 --> 00:20:09,549
customers wins they really get to pick

00:20:07,510 --> 00:20:14,620
the best technology that you know that's

00:20:09,549 --> 00:20:17,409
fits your purpose so I just want to say

00:20:14,620 --> 00:20:19,510
that our we're still on our journey of

00:20:17,409 --> 00:20:21,610
cultural transformation even though we

00:20:19,510 --> 00:20:23,320
have made drastic changes in a very

00:20:21,610 --> 00:20:24,100
short amount of time we're far from

00:20:23,320 --> 00:20:26,980
complete

00:20:24,100 --> 00:20:29,789
from our changes and we really

00:20:26,980 --> 00:20:33,340
appreciate your continued support

00:20:29,789 --> 00:20:36,070
collaboration and participation and

00:20:33,340 --> 00:20:38,139
feedback and thank you for giving us

00:20:36,070 --> 00:20:40,029
feedback and help us being here you know

00:20:38,139 --> 00:20:42,519
in the last couple of years and we

00:20:40,029 --> 00:20:44,230
really look forward to being a even more

00:20:42,519 --> 00:20:47,070
active member of the open-source

00:20:44,230 --> 00:20:50,630
community thank you very much

00:20:47,070 --> 00:20:50,630

YouTube URL: https://www.youtube.com/watch?v=ZODK50tbKYI


