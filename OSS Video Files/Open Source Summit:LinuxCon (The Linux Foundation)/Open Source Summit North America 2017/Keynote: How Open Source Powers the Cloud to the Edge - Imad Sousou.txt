Title: Keynote: How Open Source Powers the Cloud to the Edge - Imad Sousou
Publication date: 2017-09-12
Playlist: Open Source Summit North America 2017
Description: 
	Keynote: How Open Source Powers the Cloud to the Edge - Imad Sousou, Vice President and General Manager, Software & Services Group, Intel

As we move toward a world where everything is smart and connected, there is a massive flood of data. This considerable growth requires the data center to analyze and transform data at an unprecedented scale. These transformations are powered by an end-to-end infrastructure from the cloud and data center, the network, and the Internet of Things (IoT), and are bound together by connectivity. Imad Sousou, Vice President of the Software and Services Group, and General Manager Open Source Technology Center at Intel Corporation, will highlight how we connect devices to the cloud, how edge computing accelerates the digital transformation, and how other open source software supports our rapidly changing world.

About Imad Sousou
Imad Sousou is vice president in the Software and Services Group at Intel Corporation and general manager of the Intel Open Source Technology Center, a position he's held since its founding in 2003. Sousou is responsible for Intel's efforts in open source software across a wide range of technologies and market segments, including enterprise Linux and related technologies such as virtualization, data center, and cloud software; embedded market segments; and client Linux programs. The Center also focuses on operating system (OS) stacks, including Android and Chrome OS for Intel architecture and Yocto, in addition to Linux kernel and related projects, user experience, and Web and HTML5 technologies on top of client operating systems. He sits on the board of directors at the OpenStack Foundation and is on the advisory board for the Core Infrastructure Initiative at The Linux Foundation.
Sousou joined Intel in 1994 as a senior software engineer. Before moving into his current role, he was director of telecom software programs in the Intel Communications Group and director of client software engineering in the Home Products Group. He began his career as a software engineer at Central Point Software working on system utilities for the Apple Mac OS.
Sousou holds a bachelor degree in computer science and mathematics from Portland State University.
Captions: 
	00:00:00,000 --> 00:00:06,930
I love Linux conferences and this is I

00:00:04,319 --> 00:00:11,219
love Linux conferences because I usually

00:00:06,930 --> 00:00:13,099
get to say whatever I want and and I

00:00:11,219 --> 00:00:15,690
will do that today I'm gonna talk about

00:00:13,099 --> 00:00:16,920
I'm going to talk about not what Intel

00:00:15,690 --> 00:00:18,300
does in open source and I'm not gonna

00:00:16,920 --> 00:00:20,220
talk about open source either because

00:00:18,300 --> 00:00:23,430
and the reason for this is because I

00:00:20,220 --> 00:00:25,050
think OpenSocial is already one so kind

00:00:23,430 --> 00:00:27,210
of talking about open source is like

00:00:25,050 --> 00:00:29,279
it's no longer neat and needed you know

00:00:27,210 --> 00:00:31,710
from and I know this came a few times

00:00:29,279 --> 00:00:34,380
and I think open source one because

00:00:31,710 --> 00:00:36,989
everybody realizes that hey we want to

00:00:34,380 --> 00:00:39,420
focus on our own business and let's

00:00:36,989 --> 00:00:41,370
build all the common stuff and

00:00:39,420 --> 00:00:43,410
infrastructure and operating systems and

00:00:41,370 --> 00:00:46,800
do that in open source where it's common

00:00:43,410 --> 00:00:48,570
everybody contributes to it from an

00:00:46,800 --> 00:00:52,230
Intel perspective it's simple you know

00:00:48,570 --> 00:00:53,879
we want we want our customers to have

00:00:52,230 --> 00:00:56,340
the best experience running any software

00:00:53,879 --> 00:00:58,079
on our hardware and our customers want

00:00:56,340 --> 00:00:59,850
to run open source so that's why we

00:00:58,079 --> 00:01:04,760
contribute very happily to open source

00:00:59,850 --> 00:01:09,240
and specifically to Linux ok so today

00:01:04,760 --> 00:01:11,700
I'm going to talk about I'm going to

00:01:09,240 --> 00:01:14,460
talk about new projects and new ideas

00:01:11,700 --> 00:01:16,920
that we're starting to work on or will

00:01:14,460 --> 00:01:21,229
barely you know or projects that are

00:01:16,920 --> 00:01:25,619
barely started so and this is more on

00:01:21,229 --> 00:01:28,020
taking an end-to-end view on edge

00:01:25,619 --> 00:01:30,840
computing and cloud to edge computing

00:01:28,020 --> 00:01:36,090
and and where we do feel that open

00:01:30,840 --> 00:01:41,450
source is the primary software that that

00:01:36,090 --> 00:01:43,829
will drive this revolution so so data

00:01:41,450 --> 00:01:46,590
you know when you hear about the

00:01:43,829 --> 00:01:49,320
billions and billions of devices those

00:01:46,590 --> 00:01:51,840
billions of devices the one thing that

00:01:49,320 --> 00:01:54,750
is common is that they will generate

00:01:51,840 --> 00:01:58,469
massive amount of data so when you think

00:01:54,750 --> 00:02:00,329
of a of a factory or a self-driving car

00:01:58,469 --> 00:02:03,210
is a perfect example self-driving car

00:02:00,329 --> 00:02:06,149
generates 4 terabytes a day this is just

00:02:03,210 --> 00:02:11,230
massive amount of data and that's great

00:02:06,149 --> 00:02:16,540
but but as you know that this data gets

00:02:11,230 --> 00:02:19,269
created it gets transmitted it needs to

00:02:16,540 --> 00:02:22,360
get stored needs to get process its need

00:02:19,269 --> 00:02:25,390
to get acted on and and this is where

00:02:22,360 --> 00:02:27,519
you know just you know taking this

00:02:25,390 --> 00:02:29,799
massive amount of data back and forth to

00:02:27,519 --> 00:02:34,840
the cloud isn't really really practical

00:02:29,799 --> 00:02:36,730
so so this is where edge computing or

00:02:34,840 --> 00:02:38,890
computing on the edge and computing

00:02:36,730 --> 00:02:41,769
doing a lot of computing on the device

00:02:38,890 --> 00:02:45,700
becomes really really very important and

00:02:41,769 --> 00:02:47,650
that requires with the with what

00:02:45,700 --> 00:02:49,840
everybody expect that yes there's going

00:02:47,650 --> 00:02:51,660
to be 50 billion devices smart devices

00:02:49,840 --> 00:02:56,140
that are connected not just dumb

00:02:51,660 --> 00:02:58,269
toasters you know 200 billion connected

00:02:56,140 --> 00:02:59,829
sensors generating all this data you

00:02:58,269 --> 00:03:02,530
know there is certain amount of

00:02:59,829 --> 00:03:05,890
processing and certain amount of on

00:03:02,530 --> 00:03:08,859
device actions that need to be taken

00:03:05,890 --> 00:03:10,989
that drives different types of software

00:03:08,859 --> 00:03:13,510
that we an open source we need to figure

00:03:10,989 --> 00:03:15,780
out how to start working on so when you

00:03:13,510 --> 00:03:20,169
look at all of these things whether it's

00:03:15,780 --> 00:03:23,290
autonomous drones or cars or any of

00:03:20,169 --> 00:03:25,150
those type of things you can think of a

00:03:23,290 --> 00:03:27,340
car is a pair a self-driving car is a

00:03:25,150 --> 00:03:31,209
perfect example a self-driving car will

00:03:27,340 --> 00:03:34,000
have some hundred computers inside of

00:03:31,209 --> 00:03:36,940
that and it's effectively is a data

00:03:34,000 --> 00:03:39,579
center of its own it's just driving data

00:03:36,940 --> 00:03:44,410
center or a flying data center and so on

00:03:39,579 --> 00:03:48,190
and and the type of software that you do

00:03:44,410 --> 00:03:51,069
need in order to fulfill that that that

00:03:48,190 --> 00:03:53,980
promise that that promises to radically

00:03:51,069 --> 00:04:00,060
also change the economy so I'll give you

00:03:53,980 --> 00:04:03,970
just one simple example in in cars if if

00:04:00,060 --> 00:04:08,139
somebody can figure out the software

00:04:03,970 --> 00:04:10,150
update in cars several automakers did an

00:04:08,139 --> 00:04:12,669
actual estimate of like how much would

00:04:10,150 --> 00:04:14,829
it save us collectively if we figure out

00:04:12,669 --> 00:04:17,500
how to do over-the-air software update

00:04:14,829 --> 00:04:19,390
for cars for software and cars the

00:04:17,500 --> 00:04:21,969
number that came back was 35 billion

00:04:19,390 --> 00:04:24,300
dollars so there is tremendous

00:04:21,969 --> 00:04:27,060
there is like fundamental change in the

00:04:24,300 --> 00:04:30,240
economy and fundamental change in in how

00:04:27,060 --> 00:04:33,629
people live their lives and and the

00:04:30,240 --> 00:04:36,150
entire concept of what what safety is

00:04:33,629 --> 00:04:38,940
and so on and and these things require

00:04:36,150 --> 00:04:40,590
truly you know different types of

00:04:38,940 --> 00:04:44,580
software that we that we need to think

00:04:40,590 --> 00:04:47,310
about so few things that that we are

00:04:44,580 --> 00:04:49,319
looking at you know and and some of

00:04:47,310 --> 00:04:51,509
these may be the same as existing

00:04:49,319 --> 00:04:53,580
technologies and some of them are just

00:04:51,509 --> 00:04:58,560
like completely new containers you know

00:04:53,580 --> 00:05:02,729
saying you look at orchestration well

00:04:58,560 --> 00:05:04,139
kind of functional safety we don't know

00:05:02,729 --> 00:05:07,229
really what to do we should talk about

00:05:04,139 --> 00:05:10,530
this so so let me talk about a few of

00:05:07,229 --> 00:05:13,139
these with containers it was you know

00:05:10,530 --> 00:05:15,210
containers are great they're very very

00:05:13,139 --> 00:05:17,940
fast you can whip up a container you

00:05:15,210 --> 00:05:19,650
know run the app tear it down really

00:05:17,940 --> 00:05:22,289
super quickly that works great

00:05:19,650 --> 00:05:24,599
virtualization is also great the nice

00:05:22,289 --> 00:05:26,639
thing about virtualization is they're

00:05:24,599 --> 00:05:28,349
very very secure and secured by a

00:05:26,639 --> 00:05:30,930
combination of hardware and software and

00:05:28,349 --> 00:05:33,389
the reason that that this works this way

00:05:30,930 --> 00:05:35,460
is because in containers you know you

00:05:33,389 --> 00:05:37,919
have many many containers running on

00:05:35,460 --> 00:05:40,710
effectively one kernel so if that cannot

00:05:37,919 --> 00:05:42,779
is compromised you the entire batch of

00:05:40,710 --> 00:05:46,050
containers is compromised with

00:05:42,779 --> 00:05:48,120
virtualization that's not the case so we

00:05:46,050 --> 00:05:50,669
started a project until clear containers

00:05:48,120 --> 00:05:53,639
where you're no longer have to pick

00:05:50,669 --> 00:05:57,840
between the security of virtual machines

00:05:53,639 --> 00:05:59,849
and and the speed of and the speed of

00:05:57,840 --> 00:06:03,330
containers where we marry all of these

00:05:59,849 --> 00:06:04,710
two together where we do enable that and

00:06:03,330 --> 00:06:06,620
this is some of the work that you

00:06:04,710 --> 00:06:09,449
probably have started seeing in

00:06:06,620 --> 00:06:11,159
integrated in Dockers in kubernetes and

00:06:09,449 --> 00:06:12,569
so on and we will continue that work but

00:06:11,159 --> 00:06:15,569
this is something that I do encourage

00:06:12,569 --> 00:06:18,090
you to start participating in another

00:06:15,569 --> 00:06:21,900
great technology that we started and

00:06:18,090 --> 00:06:25,560
this is this is going back to the the

00:06:21,900 --> 00:06:28,289
car example so the car example that the

00:06:25,560 --> 00:06:31,830
car is moving as a moving data center so

00:06:28,289 --> 00:06:33,839
that needs to be orchestrated and you

00:06:31,830 --> 00:06:36,360
need to have a similar software-defined

00:06:33,839 --> 00:06:37,920
infrastructure but you need to have that

00:06:36,360 --> 00:06:41,720
software-defined infrastructure with

00:06:37,920 --> 00:06:44,190
a PhD in in cloud software and without

00:06:41,720 --> 00:06:46,050
without a doesn't system administrator

00:06:44,190 --> 00:06:49,920
to run it this needs to be very very

00:06:46,050 --> 00:06:51,540
fast very secure and and and very low

00:06:49,920 --> 00:06:55,950
overhead in terms of setup and teardown

00:06:51,540 --> 00:06:58,740
and so on and and this is what this is

00:06:55,950 --> 00:07:01,520
what we what we are starting with with

00:06:58,740 --> 00:07:05,250
Chow which is a very lightweight

00:07:01,520 --> 00:07:09,540
Orchestrator specifically built with

00:07:05,250 --> 00:07:11,670
with with with lightweight usages like a

00:07:09,540 --> 00:07:15,980
moving data center like edge computing

00:07:11,670 --> 00:07:19,980
as in mind to to be able to support that

00:07:15,980 --> 00:07:21,900
and another item that we're barely

00:07:19,980 --> 00:07:24,060
thinking about and quite frankly we

00:07:21,900 --> 00:07:28,050
don't even know if it's possible the

00:07:24,060 --> 00:07:33,110
idea of if you look at critical systems

00:07:28,050 --> 00:07:36,120
today whether in in cars or whether in

00:07:33,110 --> 00:07:38,580
on Aero planes or any kind of critical

00:07:36,120 --> 00:07:40,980
system there is the safety critical or

00:07:38,580 --> 00:07:42,630
as the functionally safe operating

00:07:40,980 --> 00:07:46,710
system functionally safe low-level

00:07:42,630 --> 00:07:48,690
software and and typically this kind of

00:07:46,710 --> 00:07:51,330
software is built like from the ground

00:07:48,690 --> 00:07:54,930
up with that specifically specific

00:07:51,330 --> 00:07:57,210
safety properties in mind so and it's

00:07:54,930 --> 00:07:58,950
very very small very very small in some

00:07:57,210 --> 00:08:02,250
cases these operating systems and

00:07:58,950 --> 00:08:06,510
microcontrollers is nothing by by a hand

00:08:02,250 --> 00:08:09,240
inspected do loop so with the way we're

00:08:06,510 --> 00:08:11,340
proposing to have a full-featured

00:08:09,240 --> 00:08:15,660
operating system that is able to run on

00:08:11,340 --> 00:08:19,080
a car or or a hypervisor or a hypervisor

00:08:15,660 --> 00:08:20,670
that would run underneath a car that is

00:08:19,080 --> 00:08:22,140
defined the software an entire

00:08:20,670 --> 00:08:24,810
software-defined cockpit

00:08:22,140 --> 00:08:27,000
these things needs a functionally safe

00:08:24,810 --> 00:08:29,880
operating system that is full-featured

00:08:27,000 --> 00:08:32,640
so the idea so with a bunch of our

00:08:29,880 --> 00:08:35,760
engineers have been working on the idea

00:08:32,640 --> 00:08:37,979
of can we make Linux a functionally safe

00:08:35,760 --> 00:08:40,830
operating system we colloquially we call

00:08:37,979 --> 00:08:42,660
this safety critical Linux we actually

00:08:40,830 --> 00:08:45,150
think it's possible but it's going to

00:08:42,660 --> 00:08:47,280
take a lot of work to to create a

00:08:45,150 --> 00:08:48,870
function safety critical Linux or the

00:08:47,280 --> 00:08:51,180
functionally safe Linux and a functional

00:08:48,870 --> 00:08:51,570
safe hypervisor some of it is going to

00:08:51,180 --> 00:08:53,340
be

00:08:51,570 --> 00:08:56,100
than you and some of it is really

00:08:53,340 --> 00:08:57,990
creating something you know evolving

00:08:56,100 --> 00:09:01,460
some of the existing operating systems

00:08:57,990 --> 00:09:04,140
into doing those type of functions

00:09:01,460 --> 00:09:05,540
time-sensitive networking again this is

00:09:04,140 --> 00:09:08,220
something that we've been working with

00:09:05,540 --> 00:09:11,130
organization like I've know and it's

00:09:08,220 --> 00:09:13,440
really simple in real time or asses you

00:09:11,130 --> 00:09:16,050
know you expect real time response on

00:09:13,440 --> 00:09:17,340
the same machine but what happens when

00:09:16,050 --> 00:09:19,830
you're on the network when you are

00:09:17,340 --> 00:09:24,000
expecting some kind of theory or at

00:09:19,830 --> 00:09:26,700
least predictable response from from

00:09:24,000 --> 00:09:30,450
from from an interaction with the cloud

00:09:26,700 --> 00:09:33,090
so all of these type of projects and

00:09:30,450 --> 00:09:34,860
there is by the way like 20 other more I

00:09:33,090 --> 00:09:36,930
can talk for the next hour about all

00:09:34,860 --> 00:09:38,880
sort of projects that we that you should

00:09:36,930 --> 00:09:40,410
you should start seeing from us and we

00:09:38,880 --> 00:09:42,630
want you know everybody start

00:09:40,410 --> 00:09:43,230
participating and but fundamentally the

00:09:42,630 --> 00:09:46,050
same idea

00:09:43,230 --> 00:09:48,330
looking at the end-to-end cloud to edge

00:09:46,050 --> 00:09:50,970
with all the networking and everything

00:09:48,330 --> 00:09:52,620
inside and and that is really what we

00:09:50,970 --> 00:09:55,610
want to focus on and those type of new

00:09:52,620 --> 00:09:57,690
things that we want to focus on anyway

00:09:55,610 --> 00:10:01,560
thank you very much for your good

00:09:57,690 --> 00:10:03,540
listening and we'll we'll see you around

00:10:01,560 --> 00:10:07,690
the conference Thanks

00:10:03,540 --> 00:10:07,690

YouTube URL: https://www.youtube.com/watch?v=1O6km7_BY8o


