Title: BoF: Automotive Grade Linux Developer Session - Walt Miner, The Linux Foundation
Publication date: 2020-07-02
Playlist: Open Source Summit + Embedded Linux Conference NA 2020
Description: 
	BoF: Automotive Grade Linux Developer Session - Walt Miner, The Linux Foundation
Captions: 
	00:00:01,199 --> 00:00:04,319
just a quick uh introduction to

00:00:02,879 --> 00:00:07,600
automotive grade linux

00:00:04,319 --> 00:00:11,280
um hopefully most of you are already

00:00:07,600 --> 00:00:14,080
aware of what it is um but

00:00:11,280 --> 00:00:15,599
uh automotive grade linux is a an open

00:00:14,080 --> 00:00:18,800
source project

00:00:15,599 --> 00:00:20,800
based at the linux foundation hosted by

00:00:18,800 --> 00:00:23,439
the linux foundation

00:00:20,800 --> 00:00:25,279
uh focused on rapid innovation uh

00:00:23,439 --> 00:00:27,199
vehicle software and that includes

00:00:25,279 --> 00:00:29,679
vehicle software like the

00:00:27,199 --> 00:00:31,359
in vehicle infotainment and instrument

00:00:29,679 --> 00:00:34,960
cluster systems

00:00:31,359 --> 00:00:37,200
and our our tagline is collaborating to

00:00:34,960 --> 00:00:40,079
build the car of the future through

00:00:37,200 --> 00:00:40,079
rapid innovation

00:00:42,800 --> 00:00:49,360
we have a total of 11 car manufacturers

00:00:46,879 --> 00:00:51,760
that support agl that are members

00:00:49,360 --> 00:00:55,199
um these include most of the japanese

00:00:51,760 --> 00:00:58,320
ecosystem like toyota and honda

00:00:55,199 --> 00:01:01,680
mazda subaru um includes

00:00:58,320 --> 00:01:04,720
um us like ford includes

00:01:01,680 --> 00:01:09,040
um manufacturer in china

00:01:04,720 --> 00:01:11,680
saic and then uh recently we've added

00:01:09,040 --> 00:01:12,799
mercedes and volkswagen from germany

00:01:11,680 --> 00:01:15,280
from europe

00:01:12,799 --> 00:01:18,320
so it's a good worldwide set of a good

00:01:15,280 --> 00:01:21,680
worldwide ecosystem

00:01:18,320 --> 00:01:24,799
and overall we have 155

00:01:21,680 --> 00:01:26,640
total member companies including a

00:01:24,799 --> 00:01:27,920
number a large number of tier 1

00:01:26,640 --> 00:01:31,439
suppliers

00:01:27,920 --> 00:01:32,159
and tier 2 suppliers and those are

00:01:31,439 --> 00:01:35,680
broken up

00:01:32,159 --> 00:01:41,840
into platinum gold silver

00:01:35,680 --> 00:01:41,840
and bronze level members

00:01:42,240 --> 00:01:45,840
uh like i mentioned before uh automotive

00:01:45,119 --> 00:01:49,040
grade linux

00:01:45,840 --> 00:01:50,079
is the only organization addressing uh

00:01:49,040 --> 00:01:53,920
linux

00:01:50,079 --> 00:01:55,119
in uh all all different types of ecu's

00:01:53,920 --> 00:01:57,680
within the car

00:01:55,119 --> 00:01:59,840
so you know our our primary focus the

00:01:57,680 --> 00:02:03,759
first few years of the project

00:01:59,840 --> 00:02:05,200
were um was infotainment uh we've been

00:02:03,759 --> 00:02:07,200
we have a very active

00:02:05,200 --> 00:02:09,119
uh instrument cluster expert group right

00:02:07,200 --> 00:02:12,239
now that's working on

00:02:09,119 --> 00:02:14,879
bringing an instrument cluster prototype

00:02:12,239 --> 00:02:15,280
uh out that some of our members can use

00:02:14,879 --> 00:02:17,599
in

00:02:15,280 --> 00:02:19,520
in their vehicles in the next few years

00:02:17,599 --> 00:02:20,800
we have a telematics and connectivity

00:02:19,520 --> 00:02:23,920
profile

00:02:20,800 --> 00:02:26,560
we're involved in elisa

00:02:23,920 --> 00:02:28,000
the embedded linux in safety

00:02:26,560 --> 00:02:31,519
applications

00:02:28,000 --> 00:02:33,680
um projects within the linux foundation

00:02:31,519 --> 00:02:34,800
and in fact recently they announced that

00:02:33,680 --> 00:02:37,120
there's an automotive

00:02:34,800 --> 00:02:41,040
working group that's going to be uh

00:02:37,120 --> 00:02:41,040
that's starting within within elisa

00:02:41,280 --> 00:02:46,319
we're also looking at advanced drivers

00:02:43,280 --> 00:02:49,360
uh adas systems and eventually

00:02:46,319 --> 00:02:50,720
building up to um autonomous driving

00:02:49,360 --> 00:02:53,040
although that's that's sometime in the

00:02:50,720 --> 00:02:53,040
future

00:02:55,120 --> 00:02:59,440
uh at agl we work on something called

00:02:57,360 --> 00:03:03,200
the unified code base

00:02:59,440 --> 00:03:04,720
um it's basically we're using a single

00:03:03,200 --> 00:03:06,720
a single code based single piece of

00:03:04,720 --> 00:03:10,159
software or single code

00:03:06,720 --> 00:03:12,720
single set of code repositories um

00:03:10,159 --> 00:03:14,480
for the entire industry and we're you

00:03:12,720 --> 00:03:16,159
know obviously to reduce fragmentation

00:03:14,480 --> 00:03:19,440
throughout the industry

00:03:16,159 --> 00:03:22,000
our goal is to provide at least 70

00:03:19,440 --> 00:03:22,640
of the base platform for a production

00:03:22,000 --> 00:03:25,360
project

00:03:22,640 --> 00:03:26,480
in whatever of the profiles you might

00:03:25,360 --> 00:03:29,760
see here

00:03:26,480 --> 00:03:33,280
um we have reference hardware and

00:03:29,760 --> 00:03:35,680
applications available for adaptation

00:03:33,280 --> 00:03:36,720
and really the goal the the overarching

00:03:35,680 --> 00:03:38,879
goal of

00:03:36,720 --> 00:03:40,159
the unified code base is to cultivate an

00:03:38,879 --> 00:03:42,640
ecosystem

00:03:40,159 --> 00:03:43,920
uh we have you know developers suppliers

00:03:42,640 --> 00:03:46,159
automotive expertise

00:03:43,920 --> 00:03:47,040
everybody contributing to a single code

00:03:46,159 --> 00:03:49,040
base

00:03:47,040 --> 00:03:52,239
with all the various repositories that

00:03:49,040 --> 00:03:52,239
we that we control

00:03:55,360 --> 00:04:03,840
so this is our 2020 schedule our um

00:04:00,319 --> 00:04:06,959
releases are code named as a fish

00:04:03,840 --> 00:04:08,319
we have the itchy ice fish release 9.0

00:04:06,959 --> 00:04:11,200
earlier this year

00:04:08,319 --> 00:04:13,200
we've already done two patch releases we

00:04:11,200 --> 00:04:13,599
have another patch release scheduled for

00:04:13,200 --> 00:04:16,160
the

00:04:13,599 --> 00:04:17,840
end of next month meanwhile we're

00:04:16,160 --> 00:04:21,120
focusing on working on

00:04:17,840 --> 00:04:25,120
jump jumping jellyfish where we are

00:04:21,120 --> 00:04:27,440
we're moving to the yakuto 3.1

00:04:25,120 --> 00:04:28,479
version of yakto which is their lts

00:04:27,440 --> 00:04:32,320
version if you

00:04:28,479 --> 00:04:34,080
saw their earlier presentation on lts

00:04:32,320 --> 00:04:35,680
and then at the end of this year we'll

00:04:34,080 --> 00:04:38,400
be releasing the final release for

00:04:35,680 --> 00:04:41,360
jumping jellyfish is planned for

00:04:38,400 --> 00:04:44,080
the january time frame and then we'll be

00:04:41,360 --> 00:04:47,280
starting on kooky koi

00:04:44,080 --> 00:04:47,840
uh as we uh as we continue as we finish

00:04:47,280 --> 00:04:51,120
up the

00:04:47,840 --> 00:04:51,120
jumping jellyfish release

00:04:54,000 --> 00:05:00,080
so the agl architecture is based on the

00:04:57,360 --> 00:05:01,360
agl application framework built on top

00:05:00,080 --> 00:05:04,320
of yakto

00:05:01,360 --> 00:05:04,960
uh it's a microservices architecture we

00:05:04,320 --> 00:05:09,120
have a

00:05:04,960 --> 00:05:11,039
concept of bindings and binders um

00:05:09,120 --> 00:05:13,440
with a whole lot of different uh

00:05:11,039 --> 00:05:16,479
services available on top of that

00:05:13,440 --> 00:05:17,120
just a i think a short list of available

00:05:16,479 --> 00:05:20,240
binders

00:05:17,120 --> 00:05:23,440
includes home screen window manager

00:05:20,240 --> 00:05:26,720
audio connectivity including networking

00:05:23,440 --> 00:05:27,919
wi-fi bluetooth vehicle signaling like

00:05:26,720 --> 00:05:31,280
can

00:05:27,919 --> 00:05:32,320
telephony phone book location services

00:05:31,280 --> 00:05:35,120
like gps

00:05:32,320 --> 00:05:36,160
and geo fencing along with some

00:05:35,120 --> 00:05:38,720
reference apps that

00:05:36,160 --> 00:05:40,320
build on top of these things like a

00:05:38,720 --> 00:05:42,639
navigation app

00:05:40,320 --> 00:05:45,919
we've got media player media scanner

00:05:42,639 --> 00:05:45,919
using light media scanner

00:05:46,000 --> 00:05:48,960
so there's a whole bunch of different

00:05:47,280 --> 00:05:50,240
binders available and that list of

00:05:48,960 --> 00:05:51,919
binders grows

00:05:50,240 --> 00:05:54,800
seemingly every month there's something

00:05:51,919 --> 00:05:54,800
new introduced

00:05:57,919 --> 00:06:01,840
uh in terms of developer resources all

00:06:00,080 --> 00:06:02,800
this will be all these slides will be

00:06:01,840 --> 00:06:06,080
posted

00:06:02,800 --> 00:06:08,080
on um

00:06:06,080 --> 00:06:09,600
sched later on so you can you can click

00:06:08,080 --> 00:06:11,840
on all these links

00:06:09,600 --> 00:06:11,840
um

00:06:13,280 --> 00:06:19,520
the uh developer resources so we have a

00:06:16,319 --> 00:06:22,560
getting started guide on our wiki page

00:06:19,520 --> 00:06:24,160
we have a documentation site uh you can

00:06:22,560 --> 00:06:25,919
see there's a getting started guide on

00:06:24,160 --> 00:06:27,919
the documentation site that

00:06:25,919 --> 00:06:30,479
allows you to figure out how to get up

00:06:27,919 --> 00:06:32,840
and running as quickly as possible

00:06:30,479 --> 00:06:34,240
with your chosen board and how to write

00:06:32,840 --> 00:06:37,280
applications

00:06:34,240 --> 00:06:39,680
we use jira for defect tracking and

00:06:37,280 --> 00:06:42,160
project management

00:06:39,680 --> 00:06:43,680
and our we usually we capture our test

00:06:42,160 --> 00:06:44,800
cases in jira as well using

00:06:43,680 --> 00:06:48,319
[Music]

00:06:44,800 --> 00:06:50,800
i think it's zephyr you can go get uh

00:06:48,319 --> 00:06:52,560
pre-built binaries and source tar balls

00:06:50,800 --> 00:06:55,120
for all of our releases

00:06:52,560 --> 00:06:57,759
uh release notes are available of course

00:06:55,120 --> 00:06:57,759
on our wiki

00:06:59,120 --> 00:07:05,680
um we use garrett for code review

00:07:02,319 --> 00:07:08,160
and the merging there's a get mirror

00:07:05,680 --> 00:07:08,160
available

00:07:09,199 --> 00:07:14,560
and we also offer a

00:07:12,960 --> 00:07:16,800
number of different ways to communicate

00:07:14,560 --> 00:07:17,680
with the community so we have a weekly

00:07:16,800 --> 00:07:20,639
developer call

00:07:17,680 --> 00:07:23,199
on tuesday mornings we uh you can call

00:07:20,639 --> 00:07:26,720
in you can ask questions

00:07:23,199 --> 00:07:29,120
we usually get 20 to 30 people calling

00:07:26,720 --> 00:07:31,440
into that every week

00:07:29,120 --> 00:07:32,240
we use irc there's almost always people

00:07:31,440 --> 00:07:35,599
in irc

00:07:32,240 --> 00:07:38,880
on free node on hashtag automotive

00:07:35,599 --> 00:07:44,000
we have a developer mailing list

00:07:38,880 --> 00:07:45,680
that you can subscribe to

00:07:44,000 --> 00:07:47,520
and uh just wanted to show this so

00:07:45,680 --> 00:07:48,160
typically in a typical year because

00:07:47,520 --> 00:07:49,599
we're trying to be

00:07:48,160 --> 00:07:51,680
again we're trying to develop a

00:07:49,599 --> 00:07:54,160
community and an ecosystem here

00:07:51,680 --> 00:07:56,000
we would get together uh six or seven

00:07:54,160 --> 00:07:59,120
times a year

00:07:56,000 --> 00:08:02,319
either at agl all member meetings or

00:07:59,120 --> 00:08:03,280
events like embedded linux conference um

00:08:02,319 --> 00:08:07,120
or we even

00:08:03,280 --> 00:08:08,879
host some developer meetups at various

00:08:07,120 --> 00:08:11,759
companies throughout the world you can

00:08:08,879 --> 00:08:12,560
see last year we had a good number of

00:08:11,759 --> 00:08:15,360
these

00:08:12,560 --> 00:08:16,960
uh this year unfortunately uh we've had

00:08:15,360 --> 00:08:19,120
to cancel we've had to cancel a lot of

00:08:16,960 --> 00:08:22,479
that because of the coronavirus

00:08:19,120 --> 00:08:24,639
um but if you are an agl member we do

00:08:22,479 --> 00:08:28,639
have the berlin all member meeting

00:08:24,639 --> 00:08:30,240
coming up next next month in july

00:08:28,639 --> 00:08:33,039
and we'll figure out as we go through

00:08:30,240 --> 00:08:36,159
the year whether we can hold our usual

00:08:33,039 --> 00:08:39,039
integration sessions as part of the

00:08:36,159 --> 00:08:40,320
automotive linux summit and ces

00:08:39,039 --> 00:08:42,959
integration sessions that we would

00:08:40,320 --> 00:08:42,959
normally have

00:08:45,200 --> 00:08:50,880
so um that's it we just wanted to give a

00:08:48,959 --> 00:08:54,880
really short overview of

00:08:50,880 --> 00:08:57,519
automotive grade linux and um

00:08:54,880 --> 00:08:58,399
so i see we do have a question do you

00:08:57,519 --> 00:09:00,240
have any questions

00:08:58,399 --> 00:09:01,600
just like i said before if you have a

00:09:00,240 --> 00:09:05,920
question please pop it up

00:09:01,600 --> 00:09:09,040
pop it into the questions tab um

00:09:05,920 --> 00:09:10,320
and uh if you can answer the question if

00:09:09,040 --> 00:09:12,880
you can answer the question better than

00:09:10,320 --> 00:09:16,000
i can and most likely somebody can

00:09:12,880 --> 00:09:19,360
you can raise your hand and we can uh

00:09:16,000 --> 00:09:19,680
we can make you a uh we can we can make

00:09:19,360 --> 00:09:21,440
you

00:09:19,680 --> 00:09:22,880
uh we can activate your microphone and

00:09:21,440 --> 00:09:26,000
you can give the answer

00:09:22,880 --> 00:09:26,000
so um

00:09:26,560 --> 00:09:29,920
the first question i see here is from

00:09:28,800 --> 00:09:31,839
jesus

00:09:29,920 --> 00:09:33,920
uh says when i say that this limits

00:09:31,839 --> 00:09:35,839
approach

00:09:33,920 --> 00:09:37,279
this linux approach to an autosar

00:09:35,839 --> 00:09:39,920
similar platform

00:09:37,279 --> 00:09:41,279
so i don't know if you're talking about

00:09:39,920 --> 00:09:45,040
classic autosar

00:09:41,279 --> 00:09:47,519
or um i forgot the new one's called um

00:09:45,040 --> 00:09:49,920
but classic autosar definitely not

00:09:47,519 --> 00:09:50,880
classic lsr is really dealing with uh

00:09:49,920 --> 00:09:53,360
it's a very close

00:09:50,880 --> 00:09:53,920
it's a very closed system dealing with

00:09:53,360 --> 00:09:56,959
um

00:09:53,920 --> 00:10:00,080
just the low-level can interfaces

00:09:56,959 --> 00:10:03,279
um and messaging through can

00:10:00,080 --> 00:10:04,720
um we're higher we're higher we're at a

00:10:03,279 --> 00:10:08,800
higher level than that

00:10:04,720 --> 00:10:11,360
and uh the newer autosar adaptive

00:10:08,800 --> 00:10:12,640
um yeah i would say i guess it's similar

00:10:11,360 --> 00:10:15,279
to that although more

00:10:12,640 --> 00:10:16,320
more inclusive um i don't know a lot

00:10:15,279 --> 00:10:19,440
about autosar

00:10:16,320 --> 00:10:20,480
adaptive given that they're uh a closed

00:10:19,440 --> 00:10:24,560
ecosystem

00:10:20,480 --> 00:10:26,320
um if somebody has something else

00:10:24,560 --> 00:10:28,240
some additional uh something else they

00:10:26,320 --> 00:10:29,920
want to answer or

00:10:28,240 --> 00:10:33,839
add to my answer there you can raise

00:10:29,920 --> 00:10:33,839
your hand

00:10:47,839 --> 00:10:53,120
so another thing we should bring up

00:10:51,200 --> 00:10:54,560
um in terms of what we provide on

00:10:53,120 --> 00:10:56,640
automotive grade linux

00:10:54,560 --> 00:10:58,000
so i i mentioned we have a garrett

00:10:56,640 --> 00:11:00,399
system we use garrett for

00:10:58,000 --> 00:11:02,480
code reviews we have a continuous

00:11:00,399 --> 00:11:05,600
integration we have a ci system

00:11:02,480 --> 00:11:08,800
based on jenkins with uh remote

00:11:05,600 --> 00:11:12,839
test labs and um

00:11:08,800 --> 00:11:15,680
using remote boards as well as

00:11:12,839 --> 00:11:17,279
qemu uh looks like i've got a question

00:11:15,680 --> 00:11:18,800
here is there a way to test software

00:11:17,279 --> 00:11:19,680
without equipment maybe like demo

00:11:18,800 --> 00:11:22,480
software

00:11:19,680 --> 00:11:24,240
yes um there's a couple things you can

00:11:22,480 --> 00:11:26,079
do we have we have board support

00:11:24,240 --> 00:11:29,200
packages for

00:11:26,079 --> 00:11:31,760
uh inexpensive boards like uh

00:11:29,200 --> 00:11:32,560
be like beaglebone black especially the

00:11:31,760 --> 00:11:36,399
raspberry pi

00:11:32,560 --> 00:11:39,839
4 um you can also use qemu

00:11:36,399 --> 00:11:43,040
qmu to test and then

00:11:39,839 --> 00:11:45,519
we have every year we have done a

00:11:43,040 --> 00:11:46,079
or last few years we've done a ces demo

00:11:45,519 --> 00:11:49,040
using

00:11:46,079 --> 00:11:49,760
what we call the the green machine and

00:11:49,040 --> 00:11:51,200
all that

00:11:49,760 --> 00:11:52,959
all those demo applications are

00:11:51,200 --> 00:11:56,480
available uh in our

00:11:52,959 --> 00:11:58,079
get tree um you'll see if you if you

00:11:56,480 --> 00:12:00,240
look in our get tree you'll see there's

00:11:58,079 --> 00:12:02,959
um

00:12:00,240 --> 00:12:03,920
a set of applications there like uh

00:12:02,959 --> 00:12:08,000
multimedia

00:12:03,920 --> 00:12:11,839
phone uh hvac uh there's a home screen

00:12:08,000 --> 00:12:14,399
uh there's a navigation app uh and a

00:12:11,839 --> 00:12:15,920
poi search app um so there's a whole

00:12:14,399 --> 00:12:16,720
host of applications you can use

00:12:15,920 --> 00:12:19,120
including

00:12:16,720 --> 00:12:21,530
including uh an alexa app as well so we

00:12:19,120 --> 00:12:22,839
have speech integration there

00:12:21,530 --> 00:12:24,480
[Music]

00:12:22,839 --> 00:12:26,000
um

00:12:24,480 --> 00:12:28,320
so hopefully that answered your question

00:12:26,000 --> 00:12:28,320
jamie

00:12:31,360 --> 00:12:34,880
so uh andrew murray has a question and i

00:12:34,480 --> 00:12:37,040
think

00:12:34,880 --> 00:12:38,639
john simon could uh pop raise his hand

00:12:37,040 --> 00:12:39,360
and maybe answer this one help me answer

00:12:38,639 --> 00:12:40,959
this one

00:12:39,360 --> 00:12:43,200
love to get more information on how we

00:12:40,959 --> 00:12:46,639
do ci testing in qmu

00:12:43,200 --> 00:12:48,639
and on uh physical hardware so we use uh

00:12:46,639 --> 00:12:53,200
we use lava for that

00:12:48,639 --> 00:12:56,480
and uh

00:12:53,200 --> 00:12:56,480
uh can you

00:12:56,639 --> 00:13:07,839
kate can you please um give uh

00:13:00,639 --> 00:13:07,839
john simon mike access please

00:13:08,399 --> 00:13:13,600
so uh john simon is the uh

00:13:11,519 --> 00:13:14,560
he runs our continuous integration and

00:13:13,600 --> 00:13:21,519
automated test

00:13:14,560 --> 00:13:25,200
um expert group

00:13:21,519 --> 00:13:28,800
yes we can hear you yeah okay yeah

00:13:25,200 --> 00:13:31,839
connection stabilizes all right so um

00:13:28,800 --> 00:13:36,399
yeah we can actually run

00:13:31,839 --> 00:13:41,519
tests on qmo and on physical hardware

00:13:36,399 --> 00:13:44,720
this is done by the lava

00:13:41,519 --> 00:13:46,560
software so this is a framework that

00:13:44,720 --> 00:13:50,079
allows you to

00:13:46,560 --> 00:13:51,839
manage farms of boards kind of multiple

00:13:50,079 --> 00:13:55,600
boards of the same type

00:13:51,839 --> 00:13:58,800
but qmo is basically just

00:13:55,600 --> 00:14:02,240
yeah a subtype here as well

00:13:58,800 --> 00:14:05,839
so when we build

00:14:02,240 --> 00:14:08,480
a submitted change set in our ci system

00:14:05,839 --> 00:14:10,160
in jenkins the artifacts get published

00:14:08,480 --> 00:14:13,680
to web server

00:14:10,160 --> 00:14:16,560
and the lava labs

00:14:13,680 --> 00:14:17,920
get a job submitted and then pull the

00:14:16,560 --> 00:14:21,519
artifacts

00:14:17,920 --> 00:14:22,160
run a series of tests and that can be

00:14:21,519 --> 00:14:26,000
qmo

00:14:22,160 --> 00:14:26,000
that could be physical hardware

00:14:26,240 --> 00:14:30,320
if you are interested in details on lava

00:14:29,760 --> 00:14:32,800
just

00:14:30,320 --> 00:14:35,279
hit me up on slack i can give you some

00:14:32,800 --> 00:14:37,600
more pointers

00:14:35,279 --> 00:14:38,560
but in principle you can hook up any

00:14:37,600 --> 00:14:41,839
hardware

00:14:38,560 --> 00:14:45,360
where you can do power control

00:14:41,839 --> 00:14:48,079
serial and network

00:14:45,360 --> 00:14:49,519
so that's the three things you need and

00:14:48,079 --> 00:14:59,839
then you can

00:14:49,519 --> 00:14:59,839
hook that up with lava

00:15:05,920 --> 00:15:09,600
okay so we let me see the other

00:15:10,839 --> 00:15:13,839
questions

00:15:19,600 --> 00:15:24,079
okay so we have another question um

00:15:21,839 --> 00:15:26,480
anybody here specializes in mobile

00:15:24,079 --> 00:15:27,199
45g connectivity in the automotive

00:15:26,480 --> 00:15:30,480
context

00:15:27,199 --> 00:15:33,040
if not any contact info so

00:15:30,480 --> 00:15:34,800
we have if you go to our the uh if you

00:15:33,040 --> 00:15:39,360
go to our jira page

00:15:34,800 --> 00:15:39,839
um we have a number of expert groups

00:15:39,360 --> 00:15:42,560
within

00:15:39,839 --> 00:15:43,360
agl including the connectivity expert

00:15:42,560 --> 00:15:46,800
group

00:15:43,360 --> 00:15:47,839
and the connectivity expert group meets

00:15:46,800 --> 00:15:50,880
every other

00:15:47,839 --> 00:15:54,560
thursday and they're focusing on

00:15:50,880 --> 00:15:55,680
um connectivity including mobile

00:15:54,560 --> 00:15:57,839
connectivity

00:15:55,680 --> 00:15:59,279
and we have uh we have some of that

00:15:57,839 --> 00:16:02,000
available already

00:15:59,279 --> 00:16:03,279
in our uh in our repositories and uh in

00:16:02,000 --> 00:16:06,560
our applications

00:16:03,279 --> 00:16:08,880
we i'd say right now we have a lack of

00:16:06,560 --> 00:16:10,240
uh people who are actually working on

00:16:08,880 --> 00:16:12,560
those modems

00:16:10,240 --> 00:16:13,279
uh who've been participating more we've

00:16:12,560 --> 00:16:15,839
been more

00:16:13,279 --> 00:16:18,240
focusing on it from a user perspective

00:16:15,839 --> 00:16:18,240
um

00:16:19,040 --> 00:16:23,680
but the telematics use cases and we have

00:16:21,519 --> 00:16:25,920
we also have a vehicle the cloud

00:16:23,680 --> 00:16:26,880
uh expert group that meets every other

00:16:25,920 --> 00:16:30,720
monday

00:16:26,880 --> 00:16:33,680
that they met this morning um and they

00:16:30,720 --> 00:16:34,000
they are also focused on uh connectivity

00:16:33,680 --> 00:16:37,199
to

00:16:34,000 --> 00:16:40,160
the to a server back end for

00:16:37,199 --> 00:16:42,160
uh vehicle data collection and uh things

00:16:40,160 --> 00:16:45,279
like that

00:16:42,160 --> 00:16:47,120
but again so i guess it's it's uh claude

00:16:45,279 --> 00:16:50,800
i guess it depends on whether you're

00:16:47,120 --> 00:16:52,480
you're interested in the uh low-level

00:16:50,800 --> 00:16:53,920
you know interaction with the modem or

00:16:52,480 --> 00:16:55,360
with more of the high-level uh

00:16:53,920 --> 00:16:57,680
end-to-end

00:16:55,360 --> 00:16:59,120
application type use cases so the

00:16:57,680 --> 00:17:01,360
connectivity expert group is really

00:16:59,120 --> 00:17:03,360
focused on the lower level stuff

00:17:01,360 --> 00:17:05,439
and the vehicle the cloud expert group

00:17:03,360 --> 00:17:07,199
is more focused on the

00:17:05,439 --> 00:17:19,120
application level and end-to-end

00:17:07,199 --> 00:17:21,439
connectivity with a server

00:17:19,120 --> 00:17:23,120
somebody asked if i could click on the

00:17:21,439 --> 00:17:24,959
uh

00:17:23,120 --> 00:17:27,439
answered ones and i don't see a way to

00:17:24,959 --> 00:17:27,439
do that

00:17:28,069 --> 00:17:33,840
[Music]

00:17:30,840 --> 00:17:33,840
um

00:17:41,919 --> 00:17:46,640
so are you guys using okay zach is asked

00:17:45,679 --> 00:17:48,240
a question

00:17:46,640 --> 00:17:49,760
uh it's interesting so zach is from

00:17:48,240 --> 00:17:51,039
kerry i'm from kerry but okay i'm

00:17:49,760 --> 00:17:52,000
guessing you're from kerry north

00:17:51,039 --> 00:17:55,760
carolina

00:17:52,000 --> 00:17:57,360
i'm in kerry illinois um

00:17:55,760 --> 00:17:59,039
zach are you guys using smack as our

00:17:57,360 --> 00:18:01,120
linux security module

00:17:59,039 --> 00:18:02,640
if so how has your experience been with

00:18:01,120 --> 00:18:07,840
it um

00:18:02,640 --> 00:18:07,840
boy we are using smack um

00:18:08,559 --> 00:18:13,200
let me uh i'll ask if scott or scott

00:18:11,679 --> 00:18:14,640
murray or young simon want to talk a

00:18:13,200 --> 00:18:16,640
little bit more or anybody else about

00:18:14,640 --> 00:18:19,840
our usage of uh smack

00:18:16,640 --> 00:18:21,600
but our uh all of our so all of our our

00:18:19,840 --> 00:18:25,120
uh

00:18:21,600 --> 00:18:28,240
reminders require uh smack uh

00:18:25,120 --> 00:18:31,600
enablement and um

00:18:28,240 --> 00:18:35,360
through the application framework um

00:18:31,600 --> 00:18:37,679
i'd say we've run into a few issues

00:18:35,360 --> 00:18:39,039
um but i probably i have not been

00:18:37,679 --> 00:18:41,120
directly using that i think

00:18:39,039 --> 00:18:42,320
scott and uh some other folks have been

00:18:41,120 --> 00:18:44,960
more direct

00:18:42,320 --> 00:18:45,440
users of it and i think the guys who set

00:18:44,960 --> 00:18:48,240
that up

00:18:45,440 --> 00:18:50,480
who work for like jose he's probably

00:18:48,240 --> 00:18:57,840
asleep right now because it's uh

00:18:50,480 --> 00:18:57,840
midnight in france um

00:18:59,679 --> 00:19:11,039
uh someone raised their hand so can we

00:19:01,440 --> 00:19:14,400
let scott speak

00:19:11,039 --> 00:19:17,679
hello uh so um

00:19:14,400 --> 00:19:22,320
just to comment on smack um

00:19:17,679 --> 00:19:26,320
the the usage in the usage and agl isn't

00:19:22,320 --> 00:19:30,320
particularly complicated compared to

00:19:26,320 --> 00:19:32,480
some policy setups you could imagine

00:19:30,320 --> 00:19:34,400
basically every installed app gets its

00:19:32,480 --> 00:19:36,840
own label

00:19:34,400 --> 00:19:38,480
so the policies aren't particularly

00:19:36,840 --> 00:19:42,160
complicated um

00:19:38,480 --> 00:19:45,520
which is sort of similar to the early

00:19:42,160 --> 00:19:48,880
envisions of how the android sc linux

00:19:45,520 --> 00:19:50,160
labeling would work which makes it

00:19:48,880 --> 00:19:52,559
somewhat straightforward to understand

00:19:50,160 --> 00:19:54,160
how it works but now they're

00:19:52,559 --> 00:19:56,160
because smack doesn't have a really

00:19:54,160 --> 00:19:58,080
large user community

00:19:56,160 --> 00:19:59,360
uh recently you've had some issues with

00:19:58,080 --> 00:20:03,200
things like pipe wire

00:19:59,360 --> 00:20:07,360
and uh wayland because

00:20:03,200 --> 00:20:10,480
they start to use fds for things to pass

00:20:07,360 --> 00:20:14,080
memory buffer handles around and

00:20:10,480 --> 00:20:17,520
smack doesn't really support labeling

00:20:14,080 --> 00:20:18,960
things that don't have a file

00:20:17,520 --> 00:20:22,640
presence like they're not in the file

00:20:18,960 --> 00:20:25,840
system that complicates things a bit

00:20:22,640 --> 00:20:26,320
whereas as as i understand we see linux

00:20:25,840 --> 00:20:30,880
has had

00:20:26,320 --> 00:20:32,960
support added for things like that so

00:20:30,880 --> 00:20:36,480
it does raise some questions about how

00:20:32,960 --> 00:20:39,440
future-proof smack's going to be

00:20:36,480 --> 00:20:40,799
outside of agl probably at this point

00:20:39,440 --> 00:20:45,600
ties into the only

00:20:40,799 --> 00:20:45,600
real user of it that i know of

00:20:46,840 --> 00:20:51,600
so

00:20:48,159 --> 00:20:51,600
i think that's it does that answer the

00:21:00,840 --> 00:21:05,840
question

00:21:03,679 --> 00:21:07,440
i'm sorry i'm muted i muted myself i

00:21:05,840 --> 00:21:08,400
think so if there's a follow-up zach

00:21:07,440 --> 00:21:11,039
please uh

00:21:08,400 --> 00:21:12,400
please ask the follow-up in the uh

00:21:11,039 --> 00:21:15,679
question area

00:21:12,400 --> 00:21:17,760
uh yakuto lts was announced which

00:21:15,679 --> 00:21:19,120
version of yakuto does agl use and how

00:21:17,760 --> 00:21:22,159
long is it maintained

00:21:19,120 --> 00:21:24,400
so we are actually so for

00:21:22,159 --> 00:21:24,400
um

00:21:25,679 --> 00:21:32,159
jumping jellyfish coming up in

00:21:29,039 --> 00:21:34,240
uh in september uh we will be using the

00:21:32,159 --> 00:21:36,880
yakuto lts version so our

00:21:34,240 --> 00:21:38,559
our next release the 10.0 release we'll

00:21:36,880 --> 00:21:41,520
use 3.1

00:21:38,559 --> 00:21:43,280
um and so if you go to our master branch

00:21:41,520 --> 00:21:46,720
now that's already running

00:21:43,280 --> 00:21:49,360
yeah uh the lts version in the past

00:21:46,720 --> 00:21:50,159
we have switched yocto versions once a

00:21:49,360 --> 00:21:53,039
year

00:21:50,159 --> 00:21:54,159
in our january release and stuck with it

00:21:53,039 --> 00:21:56,720
for a year

00:21:54,159 --> 00:21:59,280
our our tentative plan right now is to

00:21:56,720 --> 00:22:02,159
stick with the yakdo lts version

00:21:59,280 --> 00:22:03,280
through its two year life cycle uh the

00:22:02,159 --> 00:22:06,320
commitment from

00:22:03,280 --> 00:22:07,520
our board vendors who are members of agl

00:22:06,320 --> 00:22:09,360
and the boards that we use

00:22:07,520 --> 00:22:11,120
is that they'll stick with that version

00:22:09,360 --> 00:22:14,799
and continue to support it

00:22:11,120 --> 00:22:14,799
our understanding from um

00:22:14,960 --> 00:22:20,400
uh the yocto team is that the non-lts

00:22:18,559 --> 00:22:23,840
versions will only be supported

00:22:20,400 --> 00:22:26,799
for i think nine months so

00:22:23,840 --> 00:22:28,480
we were using um but we were thinking

00:22:26,799 --> 00:22:29,919
about using zeus rather

00:22:28,480 --> 00:22:32,880
for the next version which would have

00:22:29,919 --> 00:22:34,240
been 3.0 and that's already going out of

00:22:32,880 --> 00:22:36,559
support from yonkto

00:22:34,240 --> 00:22:38,400
so the plan right now is we will stick

00:22:36,559 --> 00:22:40,720
with the lts version for the next

00:22:38,400 --> 00:22:42,320
two years and i think at that point

00:22:40,720 --> 00:22:45,120
we'll

00:22:42,320 --> 00:22:47,440
revisit what we do either is either

00:22:45,120 --> 00:22:50,880
either yakuto will declare another lts

00:22:47,440 --> 00:22:53,440
or agl will decide to continue to use

00:22:50,880 --> 00:22:55,200
that same one depending on what our

00:22:53,440 --> 00:22:57,840
what our members and what our advisory

00:22:55,200 --> 00:22:59,600
board wants to do

00:22:57,840 --> 00:23:01,679
so i'd say for we're at least two years

00:22:59,600 --> 00:23:03,919
locked into the lts version

00:23:01,679 --> 00:23:07,520
and that'll be released in uh with the

00:23:03,919 --> 00:23:07,520
jumping jellyfish in september

00:23:07,679 --> 00:23:16,240
um next question is from um

00:23:12,400 --> 00:23:17,679
uh pradik uh from hitachi is agl related

00:23:16,240 --> 00:23:20,400
to cip

00:23:17,679 --> 00:23:22,960
not really um so it's a completely

00:23:20,400 --> 00:23:26,159
different project with different goals

00:23:22,960 --> 00:23:29,840
um they they're more focused on a

00:23:26,159 --> 00:23:32,960
i think a 20-year use case um

00:23:29,840 --> 00:23:36,480
so we we there are some cross

00:23:32,960 --> 00:23:37,600
members but but uh nobody's really

00:23:36,480 --> 00:23:38,880
working on

00:23:37,600 --> 00:23:41,679
no individuals that i know of are

00:23:38,880 --> 00:23:45,120
working on both projects

00:23:41,679 --> 00:23:46,960
um how can someone help

00:23:45,120 --> 00:23:50,320
start helping the project more beginner

00:23:46,960 --> 00:23:53,279
oriented um

00:23:50,320 --> 00:23:53,919
a lot of different ways so we uh

00:23:53,279 --> 00:23:57,440
obviously

00:23:53,919 --> 00:23:59,679
download the code um play with it

00:23:57,440 --> 00:24:00,960
see what works if you see something that

00:23:59,679 --> 00:24:04,960
doesn't work

00:24:00,960 --> 00:24:08,480
uh submit submit a fix or submit a bug

00:24:04,960 --> 00:24:10,240
a bug report um

00:24:08,480 --> 00:24:11,919
if you have trouble downloading it and

00:24:10,240 --> 00:24:14,240
getting it running uh

00:24:11,919 --> 00:24:16,000
certainly the mailing list people are i

00:24:14,240 --> 00:24:17,120
think i think we have a fairly friendly

00:24:16,000 --> 00:24:19,760
community

00:24:17,120 --> 00:24:20,559
um the people answer questions on the

00:24:19,760 --> 00:24:22,400
mailing list

00:24:20,559 --> 00:24:23,840
uh we also like i said we have our

00:24:22,400 --> 00:24:25,520
developer chat we have our developer

00:24:23,840 --> 00:24:28,320
call on tuesdays

00:24:25,520 --> 00:24:29,520
and the irc channel um

00:24:28,320 --> 00:24:32,320
[Music]

00:24:29,520 --> 00:24:34,159
if you it's you know it's as with any

00:24:32,320 --> 00:24:36,080
open source project if there's some

00:24:34,159 --> 00:24:37,279
something missing and you feel like it

00:24:36,080 --> 00:24:40,000
needs to get done

00:24:37,279 --> 00:24:41,760
we always accept contributions uh we

00:24:40,000 --> 00:24:45,600
have some people working on some

00:24:41,760 --> 00:24:47,520
cloud use cases right now um

00:24:45,600 --> 00:24:49,440
there's a uh there's also a list you

00:24:47,520 --> 00:24:49,840
know a list of road map items that we

00:24:49,440 --> 00:24:52,960
have

00:24:49,840 --> 00:24:54,640
on our wiki page um

00:24:52,960 --> 00:24:55,840
and you can just you know drop me a

00:24:54,640 --> 00:24:56,159
question as well if there's something

00:24:55,840 --> 00:24:59,679
you

00:24:56,159 --> 00:25:01,360
uh um uh something else something you

00:24:59,679 --> 00:25:05,039
think you might want to work on um

00:25:01,360 --> 00:25:06,240
just let me know um and of course

00:25:05,039 --> 00:25:08,159
i mean i hate to say this but

00:25:06,240 --> 00:25:12,240
documentation is always an area we can

00:25:08,159 --> 00:25:14,240
we need help on um so i ask anybody who

00:25:12,240 --> 00:25:15,679
anybody who's been going through

00:25:14,240 --> 00:25:17,520
you know bringing up the board if they

00:25:15,679 --> 00:25:18,159
find a problem with the documentation to

00:25:17,520 --> 00:25:20,720
help uh

00:25:18,159 --> 00:25:22,080
you know submit updates there as well

00:25:20,720 --> 00:25:24,480
it's greatly needed

00:25:22,080 --> 00:25:26,840
we're greatly greatly needed and greatly

00:25:24,480 --> 00:25:29,840
appreciated

00:25:26,840 --> 00:25:29,840
um

00:25:30,880 --> 00:25:34,559
so i think we already answered the next

00:25:32,559 --> 00:25:38,159
question from claude

00:25:34,559 --> 00:25:40,080
um as agl anthony asks

00:25:38,159 --> 00:25:41,480
has agel gone through any government

00:25:40,080 --> 00:25:45,039
safety's compliance

00:25:41,480 --> 00:25:48,240
certifications so we are

00:25:45,039 --> 00:25:50,960
members of uh the elisa project that bed

00:25:48,240 --> 00:25:51,360
leaned at linux and safety applications

00:25:50,960 --> 00:25:53,200
uh

00:25:51,360 --> 00:25:54,480
when you think about for automotive you

00:25:53,200 --> 00:25:58,320
think about a uh

00:25:54,480 --> 00:25:59,200
iso 26262 and uh ac you know the acyl

00:25:58,320 --> 00:26:02,080
levels

00:25:59,200 --> 00:26:03,520
we're targeting acell b for our

00:26:02,080 --> 00:26:06,000
instrument cluster

00:26:03,520 --> 00:26:06,799
solution uh the instrument cluster

00:26:06,000 --> 00:26:10,320
expert group is

00:26:06,799 --> 00:26:12,960
is working uh very much hand in hand

00:26:10,320 --> 00:26:14,799
with the elisa automotive working group

00:26:12,960 --> 00:26:16,960
that's forming now

00:26:14,799 --> 00:26:18,640
we've been very active in their you know

00:26:16,960 --> 00:26:21,760
existing efforts so

00:26:18,640 --> 00:26:24,000
the elisa the elisa team has

00:26:21,760 --> 00:26:25,200
people from different certification

00:26:24,000 --> 00:26:27,440
bodies

00:26:25,200 --> 00:26:29,440
that are helping us with understanding

00:26:27,440 --> 00:26:30,240
what issues we need to solve an agl

00:26:29,440 --> 00:26:32,480
there

00:26:30,240 --> 00:26:33,520
so we have not gone through any of that

00:26:32,480 --> 00:26:35,679
stuff yet

00:26:33,520 --> 00:26:37,120
um of course when it comes to acelby or

00:26:35,679 --> 00:26:38,240
any of those certifications you get

00:26:37,120 --> 00:26:41,279
certified

00:26:38,240 --> 00:26:44,400
at a system level not just the

00:26:41,279 --> 00:26:45,120
not just the agl software itself so we

00:26:44,400 --> 00:26:47,360
want to make

00:26:45,120 --> 00:26:48,320
those artifacts available that a company

00:26:47,360 --> 00:26:49,760
would need

00:26:48,320 --> 00:26:52,799
in order to in order to meet those

00:26:49,760 --> 00:26:54,559
certifications um and that's kind of

00:26:52,799 --> 00:26:56,320
what the goal of our instrument cluster

00:26:54,559 --> 00:26:58,400
project is is to try to figure out what

00:26:56,320 --> 00:27:01,760
exactly we need to provide

00:26:58,400 --> 00:27:02,640
um so again that if you're interested in

00:27:01,760 --> 00:27:04,720
that topic

00:27:02,640 --> 00:27:08,240
i'd say our instrument cluster expert

00:27:04,720 --> 00:27:08,240
group is probably the furthest ahead

00:27:09,039 --> 00:27:16,799
um i'm going to skip this

00:27:13,120 --> 00:27:18,559
uh summaries i'm going to say it wrong

00:27:16,799 --> 00:27:20,240
some subromanians question on the bottom

00:27:18,559 --> 00:27:22,080
because it's easy for me to answer

00:27:20,240 --> 00:27:24,240
where to find the list of eval boards

00:27:22,080 --> 00:27:28,080
supported by agl at present

00:27:24,240 --> 00:27:31,120
go to the release notes

00:27:28,080 --> 00:27:31,120
on the wiki page

00:27:31,360 --> 00:27:35,919
and you can also pre-build you can also

00:27:34,320 --> 00:27:39,120
find pre-built binaries for

00:27:35,919 --> 00:27:42,240
raspberry pi 4 um and some other and a

00:27:39,120 --> 00:27:42,240
number of other boards there

00:27:42,399 --> 00:27:44,960
um

00:27:45,840 --> 00:27:52,799
how mature okay so david is asking uh

00:27:49,200 --> 00:27:54,399
how mature are agl binders for can bus

00:27:52,799 --> 00:27:56,080
management and data logging

00:27:54,399 --> 00:27:57,600
is it still in development or more

00:27:56,080 --> 00:28:00,080
production ready

00:27:57,600 --> 00:28:02,559
uh how mature so they've been we've had

00:28:00,080 --> 00:28:04,880
them available now for a few years

00:28:02,559 --> 00:28:05,919
uh we use them in our demo our green

00:28:04,880 --> 00:28:08,320
machine has a

00:28:05,919 --> 00:28:09,120
separate boards for instrument cluster

00:28:08,320 --> 00:28:11,919
and

00:28:09,120 --> 00:28:13,200
the ivi system with a can bus connection

00:28:11,919 --> 00:28:16,960
between them

00:28:13,200 --> 00:28:19,200
we've um we have what we call a

00:28:16,960 --> 00:28:21,039
vehicle signal manager which allows you

00:28:19,200 --> 00:28:25,120
to um

00:28:21,039 --> 00:28:26,960
create abstractions of the messages so

00:28:25,120 --> 00:28:29,360
the applications don't need to know the

00:28:26,960 --> 00:28:30,559
exact messages and you can combine

00:28:29,360 --> 00:28:32,320
fields and the messages and get

00:28:30,559 --> 00:28:33,279
notifications and things like that and

00:28:32,320 --> 00:28:36,799
send

00:28:33,279 --> 00:28:38,720
send messages on the bus um is anybody

00:28:36,799 --> 00:28:40,480
is it in product is it it's i would say

00:28:38,720 --> 00:28:43,200
it's still in development

00:28:40,480 --> 00:28:45,200
uh we know there are some issues around

00:28:43,200 --> 00:28:45,760
production readiness there's a lot of

00:28:45,200 --> 00:28:49,120
interest

00:28:45,760 --> 00:28:52,480
around uh building up that functionality

00:28:49,120 --> 00:28:54,080
um so we have uh right now we have a

00:28:52,480 --> 00:28:56,159
member

00:28:54,080 --> 00:28:58,080
in germany with the right ligand

00:28:56,159 --> 00:29:00,000
university that's been kind of building

00:28:58,080 --> 00:29:03,760
up more and more that functionality

00:29:00,000 --> 00:29:06,960
uh creating some tooling around

00:29:03,760 --> 00:29:08,640
taking canoe messages and

00:29:06,960 --> 00:29:11,200
you know canoe message databases and

00:29:08,640 --> 00:29:14,240
converting them to the json needed

00:29:11,200 --> 00:29:16,320
for the vehicle signal manager and

00:29:14,240 --> 00:29:17,600
i think that's that's looking very

00:29:16,320 --> 00:29:21,360
promising

00:29:17,600 --> 00:29:22,080
um and denzo 10 has done a lot of work

00:29:21,360 --> 00:29:23,520
with it has

00:29:22,080 --> 00:29:25,520
done a lot of work with the can bus as

00:29:23,520 --> 00:29:27,440
well but i don't think anybody has put

00:29:25,520 --> 00:29:29,520
it into production yet and the

00:29:27,440 --> 00:29:31,039
the instrument cluster guys may

00:29:29,520 --> 00:29:33,279
hopefully will pick that stuff up as

00:29:31,039 --> 00:29:33,279
well

00:29:34,799 --> 00:29:38,840
um i hope that answered your question

00:29:37,440 --> 00:29:42,559
david

00:29:38,840 --> 00:29:45,840
um does agl support ota

00:29:42,559 --> 00:29:50,480
over the air updates um we have

00:29:45,840 --> 00:29:53,760
uh we have support for

00:29:50,480 --> 00:29:55,039
uh os tree john simon or scott needs to

00:29:53,760 --> 00:29:55,919
chip in because i always forget the

00:29:55,039 --> 00:29:59,039
answer to this

00:29:55,919 --> 00:29:59,919
we have okay so we have the uh building

00:29:59,039 --> 00:30:03,840
blocks for

00:29:59,919 --> 00:30:06,000
os tree and um uh

00:30:03,840 --> 00:30:07,760
john simon uh raised his hand so maybe

00:30:06,000 --> 00:30:10,799
we can promote him as well

00:30:07,760 --> 00:30:13,679
to uh speak um and

00:30:10,799 --> 00:30:14,399
agl in general is not worried about the

00:30:13,679 --> 00:30:17,600
end-to-end

00:30:14,399 --> 00:30:20,000
ota solution the manufacturers the oems

00:30:17,600 --> 00:30:21,840
have said that they'll take care of that

00:30:20,000 --> 00:30:24,399
they'll own the the solution from the

00:30:21,840 --> 00:30:26,640
server to the uh to the device

00:30:24,399 --> 00:30:28,080
um yeah and simon you can speak to what

00:30:26,640 --> 00:30:31,919
enablers we have on there

00:30:28,080 --> 00:30:35,919
in there already yeah so uh

00:30:31,919 --> 00:30:39,919
the um os 3

00:30:35,919 --> 00:30:43,840
um over-the-air update system has been

00:30:39,919 --> 00:30:47,120
submitted a while ago by ats

00:30:43,840 --> 00:30:49,039
advanced telematics systems um this is

00:30:47,120 --> 00:30:51,919
based on os3

00:30:49,039 --> 00:30:53,120
and is integrated into the current code

00:30:51,919 --> 00:30:56,240
base

00:30:53,120 --> 00:30:59,440
there are some board specifics so not

00:30:56,240 --> 00:31:01,440
all boards have those enabled but the

00:30:59,440 --> 00:31:04,840
usual suspects have

00:31:01,440 --> 00:31:08,720
um yeah so you just have to enable the

00:31:04,840 --> 00:31:12,880
agl-sota feature and os3

00:31:08,720 --> 00:31:16,840
based support will be there

00:31:12,880 --> 00:31:20,960
it's no it's it's not hard to try it out

00:31:16,840 --> 00:31:26,159
um um there is a guide on the wiki

00:31:20,960 --> 00:31:26,159
um which should work that's pretty much

00:31:30,840 --> 00:31:36,720
fine

00:31:33,440 --> 00:31:38,000
scott did you want to add anything

00:31:36,720 --> 00:31:39,600
i know somebody had asked i think

00:31:38,000 --> 00:31:40,480
somebody had asked that question on the

00:31:39,600 --> 00:31:42,960
uh

00:31:40,480 --> 00:31:44,480
the slack channel earlier and scott was

00:31:42,960 --> 00:31:46,080
talking about some of the work that leon

00:31:44,480 --> 00:31:50,080
did

00:31:46,080 --> 00:31:51,440
with ats so if you go search the slack

00:31:50,080 --> 00:31:51,919
channel i think there's some discussion

00:31:51,440 --> 00:31:54,320
of that

00:31:51,919 --> 00:31:54,320
as well

00:31:55,919 --> 00:32:01,840
okay is there any other questions

00:32:11,919 --> 00:32:15,919
well this hasn't been quite as uh

00:32:16,320 --> 00:32:21,200
interactive as a typical buff but i

00:32:18,399 --> 00:32:21,200
think it's been okay

00:32:22,399 --> 00:32:25,360
just give another minute for anybody

00:32:23,919 --> 00:32:27,279
else who has a question otherwise i

00:32:25,360 --> 00:32:30,240
guess we can um

00:32:27,279 --> 00:32:43,840
we can end early or i can sing and you

00:32:30,240 --> 00:32:43,840
don't want to hear me sing

00:32:45,679 --> 00:32:48,960
was there something new in the chat

00:32:54,840 --> 00:32:57,840
correct

00:33:00,320 --> 00:33:03,679
okay we do have another question does

00:33:02,000 --> 00:33:11,840
agl support

00:33:03,679 --> 00:33:11,840
dynamically installed apps um

00:33:12,640 --> 00:33:18,159
yes um

00:33:16,159 --> 00:33:20,080
so i guess i guess i guess it depends on

00:33:18,159 --> 00:33:23,600
what you mean by dynamic how dynamic

00:33:20,080 --> 00:33:24,000
um uh the short answer is yes and i

00:33:23,600 --> 00:33:26,480
think

00:33:24,000 --> 00:33:27,200
uh scott might be able to give a better

00:33:26,480 --> 00:33:28,640
uh

00:33:27,200 --> 00:33:30,880
expand on that a little better than i

00:33:28,640 --> 00:33:30,880
can

00:33:34,720 --> 00:33:38,480
it's got somebody raise their hand oh

00:33:36,320 --> 00:33:42,240
there he goes um

00:33:38,480 --> 00:33:44,000
yeah the concept of

00:33:42,240 --> 00:33:46,000
applications built with the application

00:33:44,000 --> 00:33:49,120
framework uh the answer is

00:33:46,000 --> 00:33:52,399
yes um but the thing to

00:33:49,120 --> 00:33:53,360
note is there isn't an app store

00:33:52,399 --> 00:33:55,120
implementation

00:33:53,360 --> 00:33:58,320
at the moment that's been left to the

00:33:55,120 --> 00:34:01,039
vendors to build themselves

00:33:58,320 --> 00:34:01,760
um but if you can get the widget file to

00:34:01,039 --> 00:34:06,000
the board

00:34:01,760 --> 00:34:07,600
it can be installed and then

00:34:06,000 --> 00:34:09,280
the app can be started by the app

00:34:07,600 --> 00:34:11,119
framework

00:34:09,280 --> 00:34:13,760
so that's i mean we regularly use that

00:34:11,119 --> 00:34:16,560
in testing so

00:34:13,760 --> 00:34:16,560
that does work

00:34:21,200 --> 00:34:24,240
uh we have another question from karthik

00:34:23,520 --> 00:34:27,280
about uh

00:34:24,240 --> 00:34:30,879
does agl have an app for android auto no

00:34:27,280 --> 00:34:33,280
we do not so we believe we be so

00:34:30,879 --> 00:34:34,879
the linux being a collaborative project

00:34:33,280 --> 00:34:37,200
for the linux foundation

00:34:34,879 --> 00:34:38,480
we cannot uh sign the necessary

00:34:37,200 --> 00:34:41,760
agreements with

00:34:38,480 --> 00:34:44,800
google to support android auto

00:34:41,760 --> 00:34:47,119
out of the box but we know

00:34:44,800 --> 00:34:48,639
that some of our tier 1 suppliers and

00:34:47,119 --> 00:34:52,240
tier two suppliers

00:34:48,639 --> 00:34:54,800
have written um android auto

00:34:52,240 --> 00:34:57,599
on top apps on top of agl so we know we

00:34:54,800 --> 00:34:57,599
know it can be done

00:34:58,079 --> 00:35:02,160
but we we unfortunately do not have the

00:35:00,240 --> 00:35:03,760
ability to provide that as an

00:35:02,160 --> 00:35:07,040
application

00:35:03,760 --> 00:35:10,720
from agl out of the box directly and the

00:35:07,040 --> 00:35:10,720
same thing with with carplay with apple

00:35:14,839 --> 00:35:18,320
carplay

00:35:16,160 --> 00:35:18,320

YouTube URL: https://www.youtube.com/watch?v=JcLg_RTmLdA


