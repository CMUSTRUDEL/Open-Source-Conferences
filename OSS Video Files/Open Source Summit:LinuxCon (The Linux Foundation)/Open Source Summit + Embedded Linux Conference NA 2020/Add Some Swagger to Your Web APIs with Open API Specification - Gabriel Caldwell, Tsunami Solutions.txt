Title: Add Some Swagger to Your Web APIs with Open API Specification - Gabriel Caldwell, Tsunami Solutions
Publication date: 2020-09-08
Playlist: Open Source Summit + Embedded Linux Conference NA 2020
Description: 
	Add Some Swagger to Your Web APIs with Open API Specification - Gabriel Caldwell, Tsunami Solutions
Captions: 
	00:00:03,280 --> 00:00:06,640
hello everyone

00:00:04,720 --> 00:00:09,200
my name is gabriel caldwell and this is

00:00:06,640 --> 00:00:12,559
add some swagger to your web apis with

00:00:09,200 --> 00:00:16,000
open api specification

00:00:12,559 --> 00:00:16,960
thanks for joining me today um my

00:00:16,000 --> 00:00:19,600
twitter is at

00:00:16,960 --> 00:00:20,720
gabriel caldwell and the hashtag for the

00:00:19,600 --> 00:00:23,840
open source summit

00:00:20,720 --> 00:00:26,960
is hashtag oss sorry os

00:00:23,840 --> 00:00:28,720
summit uh if you want to send me a tweet

00:00:26,960 --> 00:00:30,000
or tweet something about the open source

00:00:28,720 --> 00:00:36,160
summit please feel free

00:00:30,000 --> 00:00:36,160
to do so uh here is the agenda for today

00:00:36,640 --> 00:00:40,079
so i'm going to switch things around a

00:00:38,239 --> 00:00:41,200
little bit so first

00:00:40,079 --> 00:00:43,920
i was going to tell you a little bit

00:00:41,200 --> 00:00:45,200
about me and then ask some questions

00:00:43,920 --> 00:00:48,239
about you

00:00:45,200 --> 00:00:49,520
um but you know if i ask some questions

00:00:48,239 --> 00:00:52,000
about you first that might give some

00:00:49,520 --> 00:00:55,360
people a little bit of time to join so

00:00:52,000 --> 00:00:57,680
uh please uh you use the q a function

00:00:55,360 --> 00:01:00,000
and you know let me know kind of some of

00:00:57,680 --> 00:01:01,920
the reasons why you wanted to join this

00:01:00,000 --> 00:01:03,600
session in particular

00:01:01,920 --> 00:01:05,439
and what you're hoping to get out of the

00:01:03,600 --> 00:01:08,640
session and

00:01:05,439 --> 00:01:10,960
uh kind of maybe about

00:01:08,640 --> 00:01:13,040
what you're interested in uh so i can

00:01:10,960 --> 00:01:15,439
try to tailor the session a little bit

00:01:13,040 --> 00:01:16,159
more towards uh the majority of the

00:01:15,439 --> 00:01:19,439
people here

00:01:16,159 --> 00:01:21,600
because not everyone's interested in

00:01:19,439 --> 00:01:24,479
uh the same thing and um you know i'm

00:01:21,600 --> 00:01:28,799
doing live coding which is always

00:01:24,479 --> 00:01:30,320
a bit uh more interesting for some less

00:01:28,799 --> 00:01:32,079
interesting further so

00:01:30,320 --> 00:01:33,360
you know if you'd like to let me know

00:01:32,079 --> 00:01:34,960
kind of uh

00:01:33,360 --> 00:01:36,799
what you're interested in i can try and

00:01:34,960 --> 00:01:37,920
tailor it towards you and you know skip

00:01:36,799 --> 00:01:39,920
some things that maybe are not

00:01:37,920 --> 00:01:40,880
applicable or focus in on some other

00:01:39,920 --> 00:01:42,479
things that are a little bit more

00:01:40,880 --> 00:01:45,439
applicable so

00:01:42,479 --> 00:01:45,920
again for those of you who just joined

00:01:45,439 --> 00:01:49,439
please

00:01:45,920 --> 00:01:52,000
use the q a function just let me know

00:01:49,439 --> 00:01:52,479
why you chose this session in particular

00:01:52,000 --> 00:01:53,680
and

00:01:52,479 --> 00:01:56,159
what you're hoping to get out of the

00:01:53,680 --> 00:01:59,200
session so you know i've seen a couple

00:01:56,159 --> 00:02:01,119
um people already use this function

00:01:59,200 --> 00:02:02,799
one person said they'd like to document

00:02:01,119 --> 00:02:04,479
an in-house api so

00:02:02,799 --> 00:02:08,239
perfect you're another intention for

00:02:04,479 --> 00:02:10,800
that um

00:02:08,239 --> 00:02:13,200
uh yeah if anyone else likes to would

00:02:10,800 --> 00:02:15,040
like to use that q a function

00:02:13,200 --> 00:02:16,239
to let me know what you'd like to get

00:02:15,040 --> 00:02:20,160
out of this session uh

00:02:16,239 --> 00:02:23,280
we can do that and

00:02:20,160 --> 00:02:24,080
i'll go back to the agenda now so now

00:02:23,280 --> 00:02:25,440
we're going to get to

00:02:24,080 --> 00:02:27,680
know a little bit about me i'd like to

00:02:25,440 --> 00:02:30,239
get to know a little bit about you

00:02:27,680 --> 00:02:32,720
and then we're going to talk about uh

00:02:30,239 --> 00:02:36,160
you know open api specification

00:02:32,720 --> 00:02:38,080
uh net core and open source

00:02:36,160 --> 00:02:40,080
the difference the difference between

00:02:38,080 --> 00:02:41,599
documentation specification and

00:02:40,080 --> 00:02:43,120
definition

00:02:41,599 --> 00:02:45,680
uh then we'll take a look at the end

00:02:43,120 --> 00:02:46,080
swag tool chain which again is specific

00:02:45,680 --> 00:02:48,000
to

00:02:46,080 --> 00:02:49,200
net but don't worry we're going to look

00:02:48,000 --> 00:02:51,440
at some alternative

00:02:49,200 --> 00:02:53,519
integrations uh for your favorite

00:02:51,440 --> 00:02:56,640
language your favorite framework so

00:02:53,519 --> 00:03:00,319
if you're like i'm scala ride or die

00:02:56,640 --> 00:03:01,920
stick around uh this is not just.net

00:03:00,319 --> 00:03:03,760
you know we're talking about concepts

00:03:01,920 --> 00:03:04,159
here so it's not specific to the dot net

00:03:03,760 --> 00:03:07,519
or c

00:03:04,159 --> 00:03:09,760
sharp yeah

00:03:07,519 --> 00:03:12,000
so some people want to one person said

00:03:09,760 --> 00:03:13,360
they use the open api and they want to

00:03:12,000 --> 00:03:16,000
see how they can

00:03:13,360 --> 00:03:18,159
take advantage of that in their own api

00:03:16,000 --> 00:03:20,080
um

00:03:18,159 --> 00:03:21,519
someone like swagger i like swagger too

00:03:20,080 --> 00:03:24,480
i'm a fan uh

00:03:21,519 --> 00:03:24,480
so all right

00:03:24,720 --> 00:03:28,480
let's get our swag on so that's it for

00:03:26,640 --> 00:03:31,280
my slides not a lot of slides i

00:03:28,480 --> 00:03:33,200
uh i don't like to make slides usually

00:03:31,280 --> 00:03:35,519
when i present i do a lot of

00:03:33,200 --> 00:03:37,040
in-person presentations and i find that

00:03:35,519 --> 00:03:38,159
you know if i make slides there'll be a

00:03:37,040 --> 00:03:39,440
certain percentage of people that

00:03:38,159 --> 00:03:40,959
doesn't show up and they'll just

00:03:39,440 --> 00:03:43,280
download the slides and then you don't

00:03:40,959 --> 00:03:46,000
get the free beer or the free pizza

00:03:43,280 --> 00:03:47,519
or the swag whatever is being offered

00:03:46,000 --> 00:03:49,519
that time and then now you know we don't

00:03:47,519 --> 00:03:51,599
get to meet in person

00:03:49,519 --> 00:03:53,120
which is kind of an important fun thing

00:03:51,599 --> 00:03:54,640
i can understand in these trying times

00:03:53,120 --> 00:03:56,799
so we don't meet in person but you know

00:03:54,640 --> 00:03:59,519
that's why i don't want to make slides

00:03:56,799 --> 00:04:01,840
so i'm just going to start sharing my

00:03:59,519 --> 00:04:01,840
screen

00:04:04,560 --> 00:04:10,080
minimize the back end for this

00:04:07,920 --> 00:04:10,080
and

00:04:11,519 --> 00:04:15,439
close my browser so there's my newborn

00:04:14,239 --> 00:04:17,199
son elliot

00:04:15,439 --> 00:04:19,919
if something goes amiss during this

00:04:17,199 --> 00:04:22,720
presentation let's just promise to

00:04:19,919 --> 00:04:24,240
blame sleep deprivation and not my own

00:04:22,720 --> 00:04:27,600
ineptitude

00:04:24,240 --> 00:04:28,160
okay thanks so let's open up the edge

00:04:27,600 --> 00:04:30,479
browser

00:04:28,160 --> 00:04:31,840
uh so on the topic of open source uh

00:04:30,479 --> 00:04:35,199
it's now based on

00:04:31,840 --> 00:04:38,080
uh the chromium open source project

00:04:35,199 --> 00:04:39,680
uh so pretty soon we're gonna see some

00:04:38,080 --> 00:04:41,520
improvements to memory management in

00:04:39,680 --> 00:04:42,479
chrome thanks to microsoft which is

00:04:41,520 --> 00:04:45,759
something

00:04:42,479 --> 00:04:49,199
i never thought i would ever say

00:04:45,759 --> 00:04:49,600
but here we go and one of the things

00:04:49,199 --> 00:04:51,759
that

00:04:49,600 --> 00:04:53,040
i found really valuable since i don't

00:04:51,759 --> 00:04:56,400
make slides about

00:04:53,040 --> 00:04:58,880
edge is this collections function

00:04:56,400 --> 00:04:59,600
of edge you can kind of create

00:04:58,880 --> 00:05:02,400
collections

00:04:59,600 --> 00:05:03,759
of websites and that works really well

00:05:02,400 --> 00:05:05,600
with my workflow because

00:05:03,759 --> 00:05:06,960
again i don't make slides but i need

00:05:05,600 --> 00:05:08,160
something to keep me on track about what

00:05:06,960 --> 00:05:12,080
i'm supposed to talk about

00:05:08,160 --> 00:05:14,320
so this is my collection for today

00:05:12,080 --> 00:05:15,280
uh and one of the neat things is that

00:05:14,320 --> 00:05:18,000
you can you know

00:05:15,280 --> 00:05:19,440
export all of the links uh in the

00:05:18,000 --> 00:05:21,360
collection to word

00:05:19,440 --> 00:05:24,800
or excel or you can copy all because you

00:05:21,360 --> 00:05:26,240
know word excel are not that useful but

00:05:24,800 --> 00:05:28,000
copy all is great because i could just

00:05:26,240 --> 00:05:29,520
make a text document with it however

00:05:28,000 --> 00:05:31,520
microsoft if you're listening this

00:05:29,520 --> 00:05:33,039
particular one doesn't work the other

00:05:31,520 --> 00:05:36,080
two work this one works

00:05:33,039 --> 00:05:39,360
um but at the end of the

00:05:36,080 --> 00:05:41,360
session i will copy all the links

00:05:39,360 --> 00:05:42,479
into a text document and i will post

00:05:41,360 --> 00:05:44,160
them in the

00:05:42,479 --> 00:05:45,520
session abstract here so you can get all

00:05:44,160 --> 00:05:48,160
the links that i talk about

00:05:45,520 --> 00:05:48,720
in the session abstract after the

00:05:48,160 --> 00:05:50,400
session

00:05:48,720 --> 00:05:52,080
another cool part about this collections

00:05:50,400 --> 00:05:55,280
thing is that i can add a note

00:05:52,080 --> 00:05:55,280
uh remember

00:06:00,960 --> 00:06:08,639
my collection so i'm going to do that

00:06:04,720 --> 00:06:12,000
all right so a little bit about me

00:06:08,639 --> 00:06:12,880
i'm the cto of tsunami solutions and i

00:06:12,000 --> 00:06:14,479
know what you're thinking you're

00:06:12,880 --> 00:06:16,319
thinking

00:06:14,479 --> 00:06:17,840
tsunami solutions that sounds like a

00:06:16,319 --> 00:06:20,639
really old-timey company

00:06:17,840 --> 00:06:22,720
no one names their company xyz solutions

00:06:20,639 --> 00:06:25,280
anymore it's all like

00:06:22,720 --> 00:06:27,120
bitly and feedly and safety shark and

00:06:25,280 --> 00:06:30,160
food lama and all sorts of

00:06:27,120 --> 00:06:33,600
crazy stuff um yeah it's true we are an

00:06:30,160 --> 00:06:35,520
old-timey company um been around since

00:06:33,600 --> 00:06:38,160
00:06:35,520 --> 00:06:40,319
and uh the idea behind the name was that

00:06:38,160 --> 00:06:42,560
you know we thought that mobile data

00:06:40,319 --> 00:06:45,600
was going to be the next big wave in

00:06:42,560 --> 00:06:47,520
computing and it was going to be so big

00:06:45,600 --> 00:06:49,039
that it would be like a tsunami and i

00:06:47,520 --> 00:06:52,080
guess a lot you know

00:06:49,039 --> 00:06:52,639
we're right these are everywhere mobile

00:06:52,080 --> 00:06:56,000
data

00:06:52,639 --> 00:06:56,000
is ubiquitous

00:06:56,160 --> 00:07:00,639
and in fact our product safety line was

00:06:59,120 --> 00:07:02,560
the first

00:07:00,639 --> 00:07:04,479
commercially available product to run on

00:07:02,560 --> 00:07:05,680
mobile data in the province of british

00:07:04,479 --> 00:07:07,919
columbia which is where we're

00:07:05,680 --> 00:07:10,000
based when we were first when we first

00:07:07,919 --> 00:07:12,720
started there was no mobile data

00:07:10,000 --> 00:07:14,240
in british columbia but uh it was in

00:07:12,720 --> 00:07:17,199
there and we used this

00:07:14,240 --> 00:07:18,960
other old-timey thing called wireless

00:07:17,199 --> 00:07:21,599
application protocol

00:07:18,960 --> 00:07:23,759
which if you look at wikipedia there's

00:07:21,599 --> 00:07:24,960
multiple issues because as with any type

00:07:23,759 --> 00:07:28,880
of ancient history

00:07:24,960 --> 00:07:28,880
a lot of things get lost along the way

00:07:29,360 --> 00:07:35,840
but let's start talking about um

00:07:32,720 --> 00:07:37,120
open api specification and apis in

00:07:35,840 --> 00:07:40,080
general

00:07:37,120 --> 00:07:42,720
uh and this is where i usually ask uh

00:07:40,080 --> 00:07:44,639
who's written an api but i see from the

00:07:42,720 --> 00:07:46,319
q a that

00:07:44,639 --> 00:07:47,680
you know some people have written apis

00:07:46,319 --> 00:07:50,000
before

00:07:47,680 --> 00:07:51,759
uh and i'm just gonna want to talk about

00:07:50,000 --> 00:07:54,560
about the challenges

00:07:51,759 --> 00:07:55,440
of apis and a lot of people have said

00:07:54,560 --> 00:07:58,160
that

00:07:55,440 --> 00:08:00,800
one of the biggest challenges with with

00:07:58,160 --> 00:08:04,400
apis and writing apis or even consuming

00:08:00,800 --> 00:08:06,720
apis is documentation so

00:08:04,400 --> 00:08:08,000
i found this document which is kind of

00:08:06,720 --> 00:08:10,560
an example of

00:08:08,000 --> 00:08:11,199
a commercially available api out there

00:08:10,560 --> 00:08:13,360
so if you

00:08:11,199 --> 00:08:14,639
are here and you work for garmin i just

00:08:13,360 --> 00:08:15,759
shows you a random there's nothing

00:08:14,639 --> 00:08:17,360
particularly

00:08:15,759 --> 00:08:18,879
wrong about this document it's actually

00:08:17,360 --> 00:08:21,360
quite a good document

00:08:18,879 --> 00:08:23,199
um but if you're a developer you know

00:08:21,360 --> 00:08:24,319
usually someone will hand you a document

00:08:23,199 --> 00:08:27,039
like this and we'll say

00:08:24,319 --> 00:08:27,599
okay here's uh the garmin api or here's

00:08:27,039 --> 00:08:31,199
api

00:08:27,599 --> 00:08:32,800
x and uh we need to you know consume

00:08:31,199 --> 00:08:33,599
this api for our product we need to

00:08:32,800 --> 00:08:35,919
integrate

00:08:33,599 --> 00:08:38,880
with this api so as a developer you kind

00:08:35,919 --> 00:08:40,320
of read through this

00:08:38,880 --> 00:08:41,919
you know and what what you're

00:08:40,320 --> 00:08:43,919
essentially doing is reading this

00:08:41,919 --> 00:08:45,920
documentation and trying to

00:08:43,919 --> 00:08:47,040
extract the specification from this

00:08:45,920 --> 00:08:49,440
document

00:08:47,040 --> 00:08:51,120
and and think about all of the different

00:08:49,440 --> 00:08:53,120
uh possibilities

00:08:51,120 --> 00:08:55,279
uh that might you know or different

00:08:53,120 --> 00:08:56,959
error codes that might happen different

00:08:55,279 --> 00:08:58,959
you know eight here we have the http

00:08:56,959 --> 00:09:01,360
status code so

00:08:58,959 --> 00:09:02,160
you you know that okay uh this api is

00:09:01,360 --> 00:09:04,959
going to return

00:09:02,160 --> 00:09:06,640
success 200 success if the api is

00:09:04,959 --> 00:09:07,120
working or maybe if i didn't do

00:09:06,640 --> 00:09:09,839
something

00:09:07,120 --> 00:09:12,240
properly in my coding uh it's going to

00:09:09,839 --> 00:09:15,440
return 401 unauthorized because

00:09:12,240 --> 00:09:18,959
i didn't provide the proper

00:09:15,440 --> 00:09:20,880
authentication token or what have you so

00:09:18,959 --> 00:09:22,399
but is this list exhausted that's kind

00:09:20,880 --> 00:09:24,080
of one of your questions it's like

00:09:22,399 --> 00:09:25,920
these all of the status codes that the

00:09:24,080 --> 00:09:30,000
api might return

00:09:25,920 --> 00:09:33,519
um maybe it returns more i don't know

00:09:30,000 --> 00:09:33,519
you know you kind of do this

00:09:33,760 --> 00:09:37,600
iterative process where you try

00:09:35,600 --> 00:09:39,200
different things against the api you try

00:09:37,600 --> 00:09:40,240
different possibilities you write all

00:09:39,200 --> 00:09:42,240
sorts of tests

00:09:40,240 --> 00:09:43,760
because you're curious about you know

00:09:42,240 --> 00:09:44,399
what's going to happen when i consume

00:09:43,760 --> 00:09:47,680
this api

00:09:44,399 --> 00:09:49,519
is my integration going to work

00:09:47,680 --> 00:09:51,440
this is a common common problem and then

00:09:49,519 --> 00:09:52,480
again on garmin's side you know they

00:09:51,440 --> 00:09:54,959
have they have to

00:09:52,480 --> 00:09:55,839
you know someone has to write the api

00:09:54,959 --> 00:09:57,519
and then they

00:09:55,839 --> 00:09:59,519
you know either write the documentation

00:09:57,519 --> 00:10:02,880
themselves as a developer we get

00:09:59,519 --> 00:10:04,480
bad documentation or

00:10:02,880 --> 00:10:06,160
i've made lots of that documentation

00:10:04,480 --> 00:10:09,839
it's not a knock against you

00:10:06,160 --> 00:10:11,440
um or uh they they hand it to like a

00:10:09,839 --> 00:10:14,720
technical writer and then the technical

00:10:11,440 --> 00:10:16,480
writer has to read the developer's mind

00:10:14,720 --> 00:10:18,240
and then create the documentation

00:10:16,480 --> 00:10:19,760
there's a lot of back and forth between

00:10:18,240 --> 00:10:20,880
the developer and the writer of the

00:10:19,760 --> 00:10:22,640
documentation

00:10:20,880 --> 00:10:24,000
and then someone will point out that oh

00:10:22,640 --> 00:10:25,440
there was a little this was wrong or

00:10:24,000 --> 00:10:28,560
that was wrong and then we have this

00:10:25,440 --> 00:10:31,519
whole revision history

00:10:28,560 --> 00:10:33,519
in the api so these are some of the

00:10:31,519 --> 00:10:36,640
common problems that people run into

00:10:33,519 --> 00:10:37,760
and uh you know there must be a better

00:10:36,640 --> 00:10:39,200
way

00:10:37,760 --> 00:10:41,120
and of course there is this one i'm

00:10:39,200 --> 00:10:44,320
going to show you today

00:10:41,120 --> 00:10:47,440
i'm going to use dot net core

00:10:44,320 --> 00:10:50,720
and c sharp and asp.net uh

00:10:47,440 --> 00:10:52,480
core to illustrate the concepts but

00:10:50,720 --> 00:10:52,880
again like i said this is not something

00:10:52,480 --> 00:10:56,720
that's

00:10:52,880 --> 00:10:58,560
specific to net or c sharp so

00:10:56,720 --> 00:11:00,720
at the end we're going to review some of

00:10:58,560 --> 00:11:03,040
the tools that are available for your

00:11:00,720 --> 00:11:04,880
favorite language or for your

00:11:03,040 --> 00:11:06,910
favorite framework so it's we're just

00:11:04,880 --> 00:11:08,720
talking really about concepts

00:11:06,910 --> 00:11:10,560
[Music]

00:11:08,720 --> 00:11:11,920
but you know hopefully some of you

00:11:10,560 --> 00:11:14,480
like.net core

00:11:11,920 --> 00:11:15,360
it's open source which is again

00:11:14,480 --> 00:11:17,200
something

00:11:15,360 --> 00:11:19,279
we never thought microsoft would do but

00:11:17,200 --> 00:11:22,240
look there's dot net core

00:11:19,279 --> 00:11:23,360
it runs on linux i'm going to show you

00:11:22,240 --> 00:11:27,360
production api

00:11:23,360 --> 00:11:31,120
today that we have running on.net core

00:11:27,360 --> 00:11:32,640
on linux so

00:11:31,120 --> 00:11:34,880
hopefully that interests you a little

00:11:32,640 --> 00:11:34,880
bit

00:11:36,399 --> 00:11:43,440
so open api specification

00:11:39,839 --> 00:11:47,200
is now here it is

00:11:43,440 --> 00:11:50,240
a linux foundation open source

00:11:47,200 --> 00:11:52,399
project and

00:11:50,240 --> 00:11:53,600
i know this session was labeled open

00:11:52,399 --> 00:11:57,279
source project

00:11:53,600 --> 00:11:58,320
update but i do not work on the open api

00:11:57,279 --> 00:12:01,040
specification

00:11:58,320 --> 00:12:02,079
on the team so i won't pretend to speak

00:12:01,040 --> 00:12:03,920
for them

00:12:02,079 --> 00:12:06,399
uh if you're interested on what's going

00:12:03,920 --> 00:12:08,480
on with the open api initiative you can

00:12:06,399 --> 00:12:09,760
visit this website and again you know

00:12:08,480 --> 00:12:12,160
post all the links in the session

00:12:09,760 --> 00:12:14,000
abstract at the end of this session

00:12:12,160 --> 00:12:15,920
uh and if you're really interested like

00:12:14,000 --> 00:12:18,320
i am super fan

00:12:15,920 --> 00:12:19,120
you might consider uh visiting their

00:12:18,320 --> 00:12:20,720
github

00:12:19,120 --> 00:12:22,880
and if there's some improvement that

00:12:20,720 --> 00:12:26,000
you'd like to make

00:12:22,880 --> 00:12:28,399
or some feature you'd like to see an

00:12:26,000 --> 00:12:32,399
open api specification

00:12:28,399 --> 00:12:33,519
you can yeah come here 36 other open

00:12:32,399 --> 00:12:36,079
pull requests and

00:12:33,519 --> 00:12:38,480
make pull requests on the open api

00:12:36,079 --> 00:12:42,720
specification and

00:12:38,480 --> 00:12:46,000
there we go okay

00:12:42,720 --> 00:12:49,760
let's let's uh let's jump into

00:12:46,000 --> 00:12:53,760
visual studio now and take a look

00:12:49,760 --> 00:12:58,000
at uh an api so

00:12:53,760 --> 00:13:00,639
this is an api that i wrote

00:12:58,000 --> 00:13:01,360
probably 10 years ago before there was

00:13:00,639 --> 00:13:05,440
uh

00:13:01,360 --> 00:13:07,040
net core before there was this

00:13:05,440 --> 00:13:08,480
before the open source movement really

00:13:07,040 --> 00:13:12,800
took hold in the world

00:13:08,480 --> 00:13:16,399
p before microsoft saw the value of

00:13:12,800 --> 00:13:19,920
open source but i've

00:13:16,399 --> 00:13:20,880
kind of rewritten it for asp.net core to

00:13:19,920 --> 00:13:24,079
illustrate

00:13:20,880 --> 00:13:25,920
some of the possibilities of open api

00:13:24,079 --> 00:13:27,440
specification

00:13:25,920 --> 00:13:30,560
and also to illustrate some of the

00:13:27,440 --> 00:13:30,560
problems that you run into

00:13:30,800 --> 00:13:38,160
with an api i've stripped out

00:13:34,720 --> 00:13:40,079
all of the authentication logic to kind

00:13:38,160 --> 00:13:41,920
of simplify it but this is a real this

00:13:40,079 --> 00:13:43,680
is real production code this is running

00:13:41,920 --> 00:13:46,959
in production right now

00:13:43,680 --> 00:13:50,399
um and you know with your permission

00:13:46,959 --> 00:13:52,240
i'd like to maybe take a segway

00:13:50,399 --> 00:13:53,600
and talk about what this api does since

00:13:52,240 --> 00:13:57,360
we're not we're not using

00:13:53,600 --> 00:13:59,040
um you know a to do api

00:13:57,360 --> 00:14:00,480
or something like simple like return

00:13:59,040 --> 00:14:03,040
cats api that people

00:14:00,480 --> 00:14:04,320
usually use in demos for using a real

00:14:03,040 --> 00:14:07,519
api

00:14:04,320 --> 00:14:08,880
so uh let's let's let me stop my sharing

00:14:07,519 --> 00:14:10,880
here for a little bit and see

00:14:08,880 --> 00:14:12,079
if everyone's okay with taking a small

00:14:10,880 --> 00:14:15,440
segue

00:14:12,079 --> 00:14:18,000
into learning about what this api

00:14:15,440 --> 00:14:20,720
does and why why we developed this api

00:14:18,000 --> 00:14:20,720
in the first place

00:14:20,959 --> 00:14:26,720
so if you don't mind using the q a

00:14:24,720 --> 00:14:29,199
just kind of letting me know if you're

00:14:26,720 --> 00:14:31,279
okay with uh

00:14:29,199 --> 00:14:32,720
with um you know taking a sec away into

00:14:31,279 --> 00:14:34,720
learning a little bit more about what

00:14:32,720 --> 00:14:36,000
this particular api does the problem

00:14:34,720 --> 00:14:38,399
that we are trying to solve with this

00:14:36,000 --> 00:14:38,399
api

00:14:42,839 --> 00:14:47,120
okay

00:14:44,639 --> 00:14:49,120
all right sounds like we're good to go

00:14:47,120 --> 00:14:52,399
uh so i will do that

00:14:49,120 --> 00:14:53,199
i will share my screen again and i will

00:14:52,399 --> 00:14:55,920
definitely

00:14:53,199 --> 00:14:55,920
keep it short

00:14:56,320 --> 00:14:59,360
so we have an hour together so i think

00:14:58,000 --> 00:15:02,480
we have the time to get through

00:14:59,360 --> 00:15:05,120
everything that we are going to do so

00:15:02,480 --> 00:15:05,680
i do have some slides because 10 years

00:15:05,120 --> 00:15:09,360
ago

00:15:05,680 --> 00:15:12,560
i did make slides so

00:15:09,360 --> 00:15:14,240
uh this api uh what it does is it works

00:15:12,560 --> 00:15:15,199
with lsd and you know you might be

00:15:14,240 --> 00:15:18,480
wondering to yourself

00:15:15,199 --> 00:15:21,360
what is lsd well it's not drugs uh

00:15:18,480 --> 00:15:21,760
it's a legal subdivision that's locating

00:15:21,360 --> 00:15:23,519
uh

00:15:21,760 --> 00:15:26,160
it's a way of locating a piece of land

00:15:23,519 --> 00:15:27,839
and it's specific to alberta so

00:15:26,160 --> 00:15:29,600
earlier i was talking about our product

00:15:27,839 --> 00:15:31,199
safety line which is a is a product

00:15:29,600 --> 00:15:32,560
that's designed to monitor the safety of

00:15:31,199 --> 00:15:33,839
people who work for the owner in

00:15:32,560 --> 00:15:37,440
isolation

00:15:33,839 --> 00:15:39,199
and it uses gps and

00:15:37,440 --> 00:15:40,959
a lot of our customers were coming to us

00:15:39,199 --> 00:15:42,560
and saying yeah we like latitude we like

00:15:40,959 --> 00:15:44,160
longitude but can you give us

00:15:42,560 --> 00:15:45,680
lsd and we thought like what are you

00:15:44,160 --> 00:15:48,240
talking about why

00:15:45,680 --> 00:15:48,880
why would you want lsd everyone in the

00:15:48,240 --> 00:15:52,639
world

00:15:48,880 --> 00:15:52,639
uses latitude and longitude

00:15:52,880 --> 00:15:58,000
why would you want lsd but you know

00:15:55,920 --> 00:15:59,360
people kept asking for it and asking for

00:15:58,000 --> 00:16:02,560
it and and

00:15:59,360 --> 00:16:03,600
i thought they were crazy uh but after a

00:16:02,560 --> 00:16:07,279
while you know they keep

00:16:03,600 --> 00:16:08,959
asking for it uh you say okay maybe we

00:16:07,279 --> 00:16:11,040
should give it to them

00:16:08,959 --> 00:16:13,120
and i looked a little bit further into

00:16:11,040 --> 00:16:14,240
it uh and i found out some interesting

00:16:13,120 --> 00:16:16,959
things

00:16:14,240 --> 00:16:18,079
at first i thought well you know you

00:16:16,959 --> 00:16:20,480
need to change what you're doing you

00:16:18,079 --> 00:16:22,320
don't want ats you want gps coordinates

00:16:20,480 --> 00:16:28,079
you want a latitude to longitude like

00:16:22,320 --> 00:16:31,440
everyone knows where 27.17461.78047

00:16:28,079 --> 00:16:32,880
is right um but it was a pervasive

00:16:31,440 --> 00:16:34,720
problem as an urgent problem and the

00:16:32,880 --> 00:16:36,560
customer was willing to pay for it so we

00:16:34,720 --> 00:16:38,079
thought okay let's let's figure out how

00:16:36,560 --> 00:16:40,320
this thing works and let's give it to

00:16:38,079 --> 00:16:42,880
them

00:16:40,320 --> 00:16:44,000
uh so let's revisit that gps coordinate

00:16:42,880 --> 00:16:48,720
does anyone know

00:16:44,000 --> 00:16:48,720
where this coordinate is

00:16:49,199 --> 00:16:52,720
i guess that no one knows right because

00:16:51,279 --> 00:16:54,399
it's not really like latitude and

00:16:52,720 --> 00:16:56,000
longitude it's good

00:16:54,399 --> 00:16:57,839
if you have the tools to plot that

00:16:56,000 --> 00:16:58,800
latitude and longitude on the map but

00:16:57,839 --> 00:17:01,839
this is where it is

00:16:58,800 --> 00:17:03,360
right it's here um and this is these are

00:17:01,839 --> 00:17:04,079
all the steps that you have to go

00:17:03,360 --> 00:17:05,919
through to

00:17:04,079 --> 00:17:07,600
actually find out where latitudinal

00:17:05,919 --> 00:17:08,319
longitude is other than you know you can

00:17:07,600 --> 00:17:10,480
type it into

00:17:08,319 --> 00:17:12,160
google maps and find out where it is but

00:17:10,480 --> 00:17:13,679
if you're using a real map this is what

00:17:12,160 --> 00:17:16,880
you would have to do

00:17:13,679 --> 00:17:18,480
um turns out in alberta they divided the

00:17:16,880 --> 00:17:21,839
province into a bunch of

00:17:18,480 --> 00:17:24,240
polygons and

00:17:21,839 --> 00:17:26,240
it works kind of like what you see here

00:17:24,240 --> 00:17:28,240
it's divided into the section township

00:17:26,240 --> 00:17:30,960
range and meridian

00:17:28,240 --> 00:17:32,480
and what they've done is this amazing

00:17:30,960 --> 00:17:33,520
thing is that they've named all the

00:17:32,480 --> 00:17:36,880
roads after it

00:17:33,520 --> 00:17:38,960
so the roads are actually maps and it

00:17:36,880 --> 00:17:40,320
makes a lot of sense if you tell someone

00:17:38,960 --> 00:17:42,799
like the

00:17:40,320 --> 00:17:43,440
ats coordinates or the lsd coordinates

00:17:42,799 --> 00:17:45,280
they know

00:17:43,440 --> 00:17:46,559
kind of like what corner that's on if

00:17:45,280 --> 00:17:47,679
you give someone a latitude and

00:17:46,559 --> 00:17:49,440
longitude

00:17:47,679 --> 00:17:51,440
who knows where that is but if you give

00:17:49,440 --> 00:17:53,280
someone in alberta

00:17:51,440 --> 00:17:54,480
uh the ats coordinates the alberta

00:17:53,280 --> 00:17:56,000
township system

00:17:54,480 --> 00:17:58,320
coordinates they know where it is

00:17:56,000 --> 00:18:02,559
because the roads are named after

00:17:58,320 --> 00:18:06,080
so uh to give our customers

00:18:02,559 --> 00:18:10,720
uh those uh ats coordinates

00:18:06,080 --> 00:18:12,400
we needed to uh build an api to do that

00:18:10,720 --> 00:18:14,640
it's kind of interesting how you do that

00:18:12,400 --> 00:18:17,280
because you can't really just do math

00:18:14,640 --> 00:18:18,480
you have to buy a shape file from the

00:18:17,280 --> 00:18:22,880
operating government

00:18:18,480 --> 00:18:24,480
and then create a spatial sql database

00:18:22,880 --> 00:18:26,320
put all those coordinates in there and

00:18:24,480 --> 00:18:29,440
then get all the polygons out

00:18:26,320 --> 00:18:32,960
so this is an api to do that uh

00:18:29,440 --> 00:18:34,799
so here's our controller uh this is

00:18:32,960 --> 00:18:38,000
pretty standard if you're used to

00:18:34,799 --> 00:18:40,799
net uh we have our data access

00:18:38,000 --> 00:18:42,880
it says get the ats descriptor for the

00:18:40,799 --> 00:18:44,000
coordinate that we've been provided from

00:18:42,880 --> 00:18:49,200
the query string

00:18:44,000 --> 00:18:49,200
so if we run this api

00:18:49,600 --> 00:18:56,160
just take a second to build that's one

00:18:52,320 --> 00:18:59,200
of my favorite presenters says

00:18:56,160 --> 00:19:01,840
and here we have the api and it's

00:18:59,200 --> 00:19:01,840
loading

00:19:03,039 --> 00:19:06,799
and then we see a blank screen now this

00:19:05,200 --> 00:19:08,640
is typical of a

00:19:06,799 --> 00:19:10,400
you know a developer that's trying to

00:19:08,640 --> 00:19:12,559
take advantage of an api

00:19:10,400 --> 00:19:15,120
they try the api endpoint and they go

00:19:12,559 --> 00:19:17,919
huh doesn't work i don't know what

00:19:15,120 --> 00:19:20,320
what this is it's supposed to work like

00:19:17,919 --> 00:19:20,320
this

00:19:21,200 --> 00:19:24,400
equals 51.

00:19:30,799 --> 00:19:36,799
and then here we go we get the lsd

00:19:34,080 --> 00:19:38,960
descriptor or the ats descriptor

00:19:36,799 --> 00:19:40,320
back from the api but as a developer how

00:19:38,960 --> 00:19:44,080
were you supposed to know that

00:19:40,320 --> 00:19:47,919
you know it's not very descriptive

00:19:44,080 --> 00:19:52,640
at the api endpoint and if we go to

00:19:47,919 --> 00:19:54,080
the root or the the base of the url

00:19:52,640 --> 00:19:55,840
there's nothing there's no information

00:19:54,080 --> 00:19:59,360
to be found there so

00:19:55,840 --> 00:20:03,280
uh you know that lets us

00:19:59,360 --> 00:20:03,280
do this a little bit better um

00:20:03,360 --> 00:20:08,240
and back in the old timey days if you

00:20:06,640 --> 00:20:11,280
were not building a web api

00:20:08,240 --> 00:20:14,640
you would build like a library and

00:20:11,280 --> 00:20:17,919
that's how you create the documentation

00:20:14,640 --> 00:20:19,280
so you go here you go to build

00:20:17,919 --> 00:20:22,159
and then you would make sure you checked

00:20:19,280 --> 00:20:24,720
off this xml documentation file

00:20:22,159 --> 00:20:27,360
and you'd have your your api document

00:20:24,720 --> 00:20:30,559
documented you shipped to the library

00:20:27,360 --> 00:20:32,400
and your documentation is done but now

00:20:30,559 --> 00:20:34,080
in the world of web apis you know no one

00:20:32,400 --> 00:20:37,679
sees that xml documentation

00:20:34,080 --> 00:20:39,200
file but you know asp.net core

00:20:37,679 --> 00:20:41,039
allows us to do things a little bit

00:20:39,200 --> 00:20:43,440
better if we go to the model that the

00:20:41,039 --> 00:20:46,400
query string is trying to bind to

00:20:43,440 --> 00:20:46,400
we can use this

00:20:47,360 --> 00:20:52,799
it decorator bind required on the

00:20:49,360 --> 00:20:52,799
latitude and longitude

00:20:53,120 --> 00:20:58,470
oh sorry that's the constructor

00:20:56,400 --> 00:21:00,000
latitude and longitude

00:20:58,470 --> 00:21:04,559
[Music]

00:21:00,000 --> 00:21:04,559
and now if we run the api again

00:21:08,720 --> 00:21:11,919
and we didn't provide anything in the

00:21:10,320 --> 00:21:13,840
query string again

00:21:11,919 --> 00:21:15,280
we get a little bit more informative

00:21:13,840 --> 00:21:17,600
answer back here that's

00:21:15,280 --> 00:21:19,120
400 we didn't provide the latitude and

00:21:17,600 --> 00:21:20,720
longitude but

00:21:19,120 --> 00:21:22,400
are there other properties that we're

00:21:20,720 --> 00:21:23,520
supposed to be providing in a query

00:21:22,400 --> 00:21:25,520
string

00:21:23,520 --> 00:21:27,120
i don't know there's no documentation

00:21:25,520 --> 00:21:29,919
this error message is not that

00:21:27,120 --> 00:21:32,159
informative

00:21:29,919 --> 00:21:32,159
so

00:21:35,600 --> 00:21:41,039
you can also do these things

00:21:38,799 --> 00:21:42,960
where you add an open api analyzer and

00:21:41,039 --> 00:21:45,840
how you do that

00:21:42,960 --> 00:21:47,120
as you edit the project file and tell it

00:21:45,840 --> 00:21:50,720
here

00:21:47,120 --> 00:21:53,600
these open api analyzers and then if you

00:21:50,720 --> 00:21:53,600
try and build it

00:21:56,559 --> 00:22:00,640
compiler will tell you something it'll

00:21:59,280 --> 00:22:03,120
say

00:22:00,640 --> 00:22:04,000
okay you're returning a status code here

00:22:03,120 --> 00:22:06,159
00:22:04,000 --> 00:22:08,240
if for example the database server is

00:22:06,159 --> 00:22:10,159
not available you're returning a 503 but

00:22:08,240 --> 00:22:14,000
you never told anybody

00:22:10,159 --> 00:22:16,080
you're going to return a 503. so

00:22:14,000 --> 00:22:18,320
you can add this decorator that says

00:22:16,080 --> 00:22:19,840
your api produces this particular

00:22:18,320 --> 00:22:21,120
response type it's going to return an

00:22:19,840 --> 00:22:24,159
okay

00:22:21,120 --> 00:22:27,840
200 it's going to return a 503

00:22:24,159 --> 00:22:27,840
service on available um

00:22:28,480 --> 00:22:32,880
and that's based off what the controller

00:22:31,440 --> 00:22:36,159
does

00:22:32,880 --> 00:22:38,840
it's also uh just by it's gonna this is

00:22:36,159 --> 00:22:42,240
just if we want to go really in depth

00:22:38,840 --> 00:22:42,880
into asp.net core it's also going to

00:22:42,240 --> 00:22:46,559
return

00:22:42,880 --> 00:22:48,240
uh it's going to return this bad request

00:22:46,559 --> 00:22:50,000
as well if you don't provide anything

00:22:48,240 --> 00:22:52,000
recruit string we saw it's also going to

00:22:50,000 --> 00:22:53,600
return this bad request so let's

00:22:52,000 --> 00:22:56,000
make sure we put that bad request in

00:22:53,600 --> 00:22:56,559
there and our api is getting a little

00:22:56,000 --> 00:22:58,080
bit better

00:22:56,559 --> 00:23:00,000
right we're telling whoever's trying to

00:22:58,080 --> 00:23:00,799
consume this api these are all the

00:23:00,000 --> 00:23:02,480
possible

00:23:00,799 --> 00:23:05,840
status codes that are going to be

00:23:02,480 --> 00:23:05,840
returned from the api

00:23:05,919 --> 00:23:09,120
but you know we're still missing

00:23:07,520 --> 00:23:12,480
documentation we're still

00:23:09,120 --> 00:23:15,520
missing that specification in in our api

00:23:12,480 --> 00:23:15,919
so we can do a little bit better uh

00:23:15,520 --> 00:23:17,280
unless

00:23:15,919 --> 00:23:19,600
we're going to talk about the end swag

00:23:17,280 --> 00:23:20,480
tool chain which is a way to add the

00:23:19,600 --> 00:23:24,080
open api

00:23:20,480 --> 00:23:27,120
specification to your asp.net apis but

00:23:24,080 --> 00:23:28,880
like i said um we're just talking about

00:23:27,120 --> 00:23:30,480
some concepts here and we're going to

00:23:28,880 --> 00:23:31,919
take a look at some of the other tools

00:23:30,480 --> 00:23:34,799
that are available

00:23:31,919 --> 00:23:36,480
for adding open api specification to

00:23:34,799 --> 00:23:39,280
your api

00:23:36,480 --> 00:23:42,720
so what you would do is you go and

00:23:39,280 --> 00:23:42,720
manage your new get packages

00:23:43,120 --> 00:23:45,360
and

00:23:46,320 --> 00:23:52,520
you go and install

00:23:50,320 --> 00:23:53,919
this particular nuget package here that

00:23:52,520 --> 00:24:04,720
asp.net

00:23:53,919 --> 00:24:08,159
and swag.asp.org

00:24:04,720 --> 00:24:08,159
install that package

00:24:11,919 --> 00:24:15,600
bring in all the dependencies

00:24:16,960 --> 00:24:21,039
and uh this end swag by the way is an

00:24:19,679 --> 00:24:24,320
open source project

00:24:21,039 --> 00:24:25,840
uh you can find it here

00:24:24,320 --> 00:24:27,840
and if there's something that you'd like

00:24:25,840 --> 00:24:28,640
to see in this project at the end of the

00:24:27,840 --> 00:24:30,400
presentation

00:24:28,640 --> 00:24:31,840
something that you think would be really

00:24:30,400 --> 00:24:33,279
valuable again you can make a pro

00:24:31,840 --> 00:24:35,039
request

00:24:33,279 --> 00:24:36,640
you can file an issue you can do all

00:24:35,039 --> 00:24:39,919
those types of things

00:24:36,640 --> 00:24:39,919
because it is open source

00:24:40,559 --> 00:24:44,960
so we just need to wire up a couple more

00:24:43,120 --> 00:24:48,640
things here

00:24:44,960 --> 00:24:52,559
to make this api really cool

00:24:48,640 --> 00:24:54,480
is go to our startup.cs

00:24:52,559 --> 00:24:56,559
and we go to where all the services are

00:24:54,480 --> 00:25:00,480
registered

00:24:56,559 --> 00:25:03,440
and we register this service that has to

00:25:00,480 --> 00:25:07,120
do with swagger

00:25:03,440 --> 00:25:11,840
and then we're also going to

00:25:07,120 --> 00:25:15,120
provide swagger ui uh so swagger ui

00:25:11,840 --> 00:25:17,279
is another open source project

00:25:15,120 --> 00:25:18,799
and it's actually made by the people who

00:25:17,279 --> 00:25:22,400
originally started api

00:25:18,799 --> 00:25:22,960
specification and now they've moved on

00:25:22,400 --> 00:25:25,200
to

00:25:22,960 --> 00:25:26,799
a company called smartbear which makes a

00:25:25,200 --> 00:25:30,240
lot of tools

00:25:26,799 --> 00:25:31,440
for open api specifications so yeah you

00:25:30,240 --> 00:25:34,720
can find

00:25:31,440 --> 00:25:37,760
them here at swagger.io

00:25:34,720 --> 00:25:40,320
and you can see so this is their copy of

00:25:37,760 --> 00:25:42,559
the open api specification but

00:25:40,320 --> 00:25:43,600
you can see that they have a lot of api

00:25:42,559 --> 00:25:46,159
development tools

00:25:43,600 --> 00:25:48,000
uh specifically relating to swagger and

00:25:46,159 --> 00:25:49,520
i would definitely encourage checking

00:25:48,000 --> 00:25:50,960
them out because they make a lot of

00:25:49,520 --> 00:25:53,279
really really cool tools

00:25:50,960 --> 00:25:54,400
uh for inspecting your apis and building

00:25:53,279 --> 00:25:57,919
your apis

00:25:54,400 --> 00:26:00,320
testing your apis so it's really really

00:25:57,919 --> 00:26:05,919
useful resource

00:26:00,320 --> 00:26:05,919
okay so now that if we fire this thing

00:26:08,840 --> 00:26:11,840
up

00:26:13,760 --> 00:26:17,120
again get that 400 because we haven't

00:26:15,760 --> 00:26:19,840
provided anything

00:26:17,120 --> 00:26:22,720
uh in the query string but if we go to

00:26:19,840 --> 00:26:22,720
the base zero

00:26:23,840 --> 00:26:30,559
we get this swagger ui so the swagger ui

00:26:27,840 --> 00:26:31,200
um has a couple things here it has a

00:26:30,559 --> 00:26:33,679
link

00:26:31,200 --> 00:26:36,000
to the swagger.json file and what the

00:26:33,679 --> 00:26:38,240
swagger.json file is

00:26:36,000 --> 00:26:39,600
is the specification for your api so

00:26:38,240 --> 00:26:42,159
we've used

00:26:39,600 --> 00:26:42,720
the n swag tool chain to inspect the

00:26:42,159 --> 00:26:45,840
code

00:26:42,720 --> 00:26:48,610
and automatically generate uh the

00:26:45,840 --> 00:26:50,000
specification for your api

00:26:48,610 --> 00:26:52,559
[Music]

00:26:50,000 --> 00:26:53,760
so what it's doing here is uh it's

00:26:52,559 --> 00:26:56,080
telling us about

00:26:53,760 --> 00:26:58,000
uh the parameters that are expected it's

00:26:56,080 --> 00:27:00,799
expecting this latitude

00:26:58,000 --> 00:27:01,919
this longitude it's expecting this is

00:27:00,799 --> 00:27:03,840
unknown

00:27:01,919 --> 00:27:05,679
uh we'll talk a little bit about there

00:27:03,840 --> 00:27:07,919
that as well so this is basically

00:27:05,679 --> 00:27:09,039
the model that it's expecting to bind to

00:27:07,919 --> 00:27:10,799
in the query string

00:27:09,039 --> 00:27:12,480
and then here's all the the possible

00:27:10,799 --> 00:27:15,760
response codes you have 200

00:27:12,480 --> 00:27:17,039
400 503 so it's basically inspected the

00:27:15,760 --> 00:27:19,840
code that we've written

00:27:17,039 --> 00:27:22,080
and provided a specification for your

00:27:19,840 --> 00:27:25,120
api

00:27:22,080 --> 00:27:26,960
and the sorter ui also allows you to try

00:27:25,120 --> 00:27:30,480
out the api

00:27:26,960 --> 00:27:32,480
so we can try out the api here

00:27:30,480 --> 00:27:34,240
what i'd like to show you a little bit

00:27:32,480 --> 00:27:35,200
more about where all of this is coming

00:27:34,240 --> 00:27:37,039
from so

00:27:35,200 --> 00:27:38,880
it's saying that you know you can

00:27:37,039 --> 00:27:39,919
provide the latitude you can provide the

00:27:38,880 --> 00:27:42,399
longitude

00:27:39,919 --> 00:27:43,840
and it's giving you some hints so where

00:27:42,399 --> 00:27:46,799
are all these hints coming from

00:27:43,840 --> 00:27:46,799
so let's close this

00:27:47,200 --> 00:27:52,960
and all of these hints are coming from

00:27:50,559 --> 00:27:53,919
the comments that you've made in your

00:27:52,960 --> 00:27:56,480
code

00:27:53,919 --> 00:27:58,399
so some of the documentation for your

00:27:56,480 --> 00:28:00,320
api is now coming directly from your

00:27:58,399 --> 00:28:02,320
code and that's why

00:28:00,320 --> 00:28:03,679
and to get that that functionality you

00:28:02,320 --> 00:28:06,399
definitely have to go to

00:28:03,679 --> 00:28:06,720
to the build panel here and uh check off

00:28:06,399 --> 00:28:08,640
this

00:28:06,720 --> 00:28:09,760
xml documentation file because what

00:28:08,640 --> 00:28:12,799
nswag

00:28:09,760 --> 00:28:14,640
is doing is it is uh inspecting that xml

00:28:12,799 --> 00:28:16,399
documentation file and it's pulling out

00:28:14,640 --> 00:28:19,600
all of your comments and then it's

00:28:16,399 --> 00:28:21,120
providing them to the swagger ui

00:28:19,600 --> 00:28:23,120
but there was another thing in there

00:28:21,120 --> 00:28:24,960
that we were looking at is that

00:28:23,120 --> 00:28:26,320
that is unknown property and that's

00:28:24,960 --> 00:28:29,919
because

00:28:26,320 --> 00:28:30,559
um the model that we're using for the

00:28:29,919 --> 00:28:32,799
api

00:28:30,559 --> 00:28:35,120
has a latitude and longitude but it also

00:28:32,799 --> 00:28:37,440
has this is unknown property which is a

00:28:35,120 --> 00:28:39,760
calculated property so

00:28:37,440 --> 00:28:42,320
maybe you don't want to expose that

00:28:39,760 --> 00:28:45,039
there's a way to

00:28:42,320 --> 00:28:48,880
stop that from being exposed in your

00:28:45,039 --> 00:28:52,080
specification and in the swagger ui

00:28:48,880 --> 00:28:54,559
you can just add this decorator open api

00:28:52,080 --> 00:28:54,559
ignore

00:28:56,320 --> 00:29:00,399
and then now this is not exposed in your

00:28:58,480 --> 00:29:03,039
specification file or in your

00:29:00,399 --> 00:29:06,880
in your swagger ui anymore you can go

00:29:03,039 --> 00:29:06,880
back and take a look at that swagger ui

00:29:10,159 --> 00:29:13,840
once it goes to

00:29:15,279 --> 00:29:18,159
take a look at that

00:29:18,799 --> 00:29:27,039
and we can now try out our api so

00:29:22,799 --> 00:29:27,039
click this trial button just

00:29:30,399 --> 00:29:37,440
execute now we see we got a

00:29:33,760 --> 00:29:39,679
response 200 back this is the ats

00:29:37,440 --> 00:29:41,279
descriptor for that particular latitude

00:29:39,679 --> 00:29:44,480
and longitude

00:29:41,279 --> 00:29:47,600
and it's pulling out all of the the

00:29:44,480 --> 00:29:50,480
xml comments that you have

00:29:47,600 --> 00:29:51,600
provided in your code to do this uh you

00:29:50,480 --> 00:29:54,399
see you have a little bit

00:29:51,600 --> 00:29:55,200
of a description of the api as well here

00:29:54,399 --> 00:29:58,159
so

00:29:55,200 --> 00:29:59,600
if you wanted to uh you could expand on

00:29:58,159 --> 00:30:01,679
this and you could provide some more

00:29:59,600 --> 00:30:04,159
comprehensive documentation in your

00:30:01,679 --> 00:30:06,000
swagger ui here

00:30:04,159 --> 00:30:08,000
to really just kind of make it a

00:30:06,000 --> 00:30:10,559
one-step process in terms of like

00:30:08,000 --> 00:30:11,760
coding your api creating the

00:30:10,559 --> 00:30:16,080
documentation

00:30:11,760 --> 00:30:16,080
and providing the specification to

00:30:16,320 --> 00:30:20,159
anybody that wants to consume your api

00:30:20,559 --> 00:30:24,720
and if we go back to my notes here

00:30:22,480 --> 00:30:26,399
they're supposed to keep me on track

00:30:24,720 --> 00:30:28,799
uh these are some other interesting

00:30:26,399 --> 00:30:32,159
things that you can

00:30:28,799 --> 00:30:37,520
add to your auto generated document so

00:30:32,159 --> 00:30:37,520
besides what's there um you can

00:30:39,919 --> 00:30:43,600
add some terms of service to your to

00:30:42,399 --> 00:30:45,679
your api

00:30:43,600 --> 00:30:49,279
you can add some contact info you can

00:30:45,679 --> 00:30:52,960
even add a license to your api

00:30:49,279 --> 00:30:54,960
um i can take a look at what that looks

00:30:52,960 --> 00:30:57,279
like here

00:30:54,960 --> 00:30:58,080
hopefully in your mind you're saying uh

00:30:57,279 --> 00:31:00,480
gabriel this

00:30:58,080 --> 00:31:01,200
like seems really simple why are we

00:31:00,480 --> 00:31:03,919
attending

00:31:01,200 --> 00:31:04,399
a session about this well it is really

00:31:03,919 --> 00:31:06,960
simple

00:31:04,399 --> 00:31:08,320
if you know what to do right and this is

00:31:06,960 --> 00:31:11,679
really really powerful

00:31:08,320 --> 00:31:14,080
um it's super powerful it takes a lot of

00:31:11,679 --> 00:31:16,720
the pain points either developing an api

00:31:14,080 --> 00:31:19,840
documenting an api or if your developer

00:31:16,720 --> 00:31:19,840
consuming the api

00:31:20,799 --> 00:31:26,320
i hope that you find some value in it

00:31:24,000 --> 00:31:27,919
i also showed in the session abstract

00:31:26,320 --> 00:31:30,399
that we are going to have some fun

00:31:27,919 --> 00:31:32,399
time permitting so i think we have lots

00:31:30,399 --> 00:31:34,880
of time left in the sessions we're gonna

00:31:32,399 --> 00:31:37,039
we're gonna do some more fun things

00:31:34,880 --> 00:31:38,559
but i would like to kind of stop sharing

00:31:37,039 --> 00:31:41,600
my screen for a little bit

00:31:38,559 --> 00:31:46,640
and jump into the q a so hopefully

00:31:41,600 --> 00:31:48,480
you have some questions about um

00:31:46,640 --> 00:31:50,559
what i've just shown you and maybe we

00:31:48,480 --> 00:31:52,720
can go into a little bit more detail on

00:31:50,559 --> 00:31:56,720
some of the things that i've shown you

00:31:52,720 --> 00:32:00,000
uh or i can just answer your question so

00:31:56,720 --> 00:32:02,159
please use the q a such sorry use the q

00:32:00,000 --> 00:32:03,440
a function to to ask some questions if

00:32:02,159 --> 00:32:05,840
you have some questions

00:32:03,440 --> 00:32:06,480
if not i think don't worry don't have to

00:32:05,840 --> 00:32:10,080
have questions

00:32:06,480 --> 00:32:12,799
maybe i did my job um

00:32:10,080 --> 00:32:14,080
and we can just jump into some more fun

00:32:12,799 --> 00:32:16,720
things that kind of show you the

00:32:14,080 --> 00:32:18,550
power of building uh open api

00:32:16,720 --> 00:32:22,329
specification into your api

00:32:18,550 --> 00:32:22,329
[Music]

00:32:23,760 --> 00:32:29,519
so just give people maybe

00:32:26,799 --> 00:32:30,960
another 30 seconds or so to put the

00:32:29,519 --> 00:32:34,159
comments in there

00:32:30,960 --> 00:32:34,159
or questions in there

00:32:40,720 --> 00:32:46,399
okay um like i said uh we

00:32:44,159 --> 00:32:47,760
will also take a look at some of the the

00:32:46,399 --> 00:32:49,440
tools that are available for your

00:32:47,760 --> 00:32:50,559
favorite language and for your favorite

00:32:49,440 --> 00:32:54,240
framework

00:32:50,559 --> 00:32:54,240
so uh let's take a look at those now

00:32:54,960 --> 00:32:58,240
and again uh although the links will be

00:32:56,880 --> 00:32:59,760
in the session abstract

00:32:58,240 --> 00:33:02,000
at the end of the session because i will

00:32:59,760 --> 00:33:06,000
definitely remember to do that

00:33:02,000 --> 00:33:11,840
and put them in there okay

00:33:06,000 --> 00:33:11,840
so go back here and

00:33:12,720 --> 00:33:15,600
here on

00:33:19,039 --> 00:33:23,039
yes here we are okay so also this is

00:33:21,919 --> 00:33:25,840
from

00:33:23,039 --> 00:33:25,840
not there

00:33:27,840 --> 00:33:34,640
here that's not the correct label

00:33:31,840 --> 00:33:38,320
but at this url you can see some of the

00:33:34,640 --> 00:33:40,880
other tools that are available

00:33:38,320 --> 00:33:43,519
to for your favorite language your

00:33:40,880 --> 00:33:47,039
favorite framework

00:33:43,519 --> 00:33:48,559
and please feel free to go through that

00:33:47,039 --> 00:33:50,240
list as you can see it's quite

00:33:48,559 --> 00:33:52,159
exhaustive whatever

00:33:50,240 --> 00:33:55,039
whatever you're into whether you're into

00:33:52,159 --> 00:33:56,320
java javascript lua typescript.net

00:33:55,039 --> 00:33:58,000
node.js

00:33:56,320 --> 00:33:59,600
there's tons and tons of tools out there

00:33:58,000 --> 00:34:02,720
for you to

00:33:59,600 --> 00:34:03,840
add open api specification or take

00:34:02,720 --> 00:34:08,000
advantage of

00:34:03,840 --> 00:34:10,079
an api that has open api specification

00:34:08,000 --> 00:34:11,040
so let me just jump back to the q a here

00:34:10,079 --> 00:34:13,599
for a sec

00:34:11,040 --> 00:34:14,399
see if we have any questions now okay

00:34:13,599 --> 00:34:16,879
great

00:34:14,399 --> 00:34:18,240
uh show you some of the more powerful

00:34:16,879 --> 00:34:21,119
things that you can do

00:34:18,240 --> 00:34:24,159
once you've added open api specification

00:34:21,119 --> 00:34:24,159
to your api

00:34:29,119 --> 00:34:36,159
so this is another tool

00:34:32,240 --> 00:34:38,560
by the same person that developed uh

00:34:36,159 --> 00:34:40,560
the end swag tool chain ricoh suiter and

00:34:38,560 --> 00:34:43,440
again this is the github

00:34:40,560 --> 00:34:44,320
uh this is called nswag studio so this

00:34:43,440 --> 00:34:47,280
is a way that

00:34:44,320 --> 00:34:49,200
you can automatically generate a client

00:34:47,280 --> 00:34:51,200
which is you know something that

00:34:49,200 --> 00:34:52,960
is a again like we saw at the beginning

00:34:51,200 --> 00:34:54,639
a common task someone will hand you a

00:34:52,960 --> 00:34:56,960
documentation for an api

00:34:54,639 --> 00:34:57,920
and say we need to consume this api

00:34:56,960 --> 00:35:01,119
please

00:34:57,920 --> 00:35:02,640
write a client for that api and you have

00:35:01,119 --> 00:35:03,520
all those pain points that we've talked

00:35:02,640 --> 00:35:06,000
about

00:35:03,520 --> 00:35:08,400
uh but if i'm running this api here

00:35:06,000 --> 00:35:08,400
again

00:35:11,920 --> 00:35:20,160
go to the base url once it loads up

00:35:17,520 --> 00:35:23,839
i can get my api specification file get

00:35:20,160 --> 00:35:23,839
that swagger.json file

00:35:24,079 --> 00:35:31,359
and in nz studio here

00:35:27,760 --> 00:35:33,040
i can't just paste in the url for the

00:35:31,359 --> 00:35:35,760
specification file

00:35:33,040 --> 00:35:36,160
and i could say okay maybe i want a c

00:35:35,760 --> 00:35:38,560
sharp

00:35:36,160 --> 00:35:39,280
client or maybe i want a typescript

00:35:38,560 --> 00:35:40,800
client

00:35:39,280 --> 00:35:43,119
let's just take a look at the c sharp

00:35:40,800 --> 00:35:46,640
client here

00:35:43,119 --> 00:35:48,079
uh you can go using this tool uh

00:35:46,640 --> 00:35:49,760
probably the only thing you really care

00:35:48,079 --> 00:35:51,520
about there's many many options on how

00:35:49,760 --> 00:35:53,760
you want to generate the client but

00:35:51,520 --> 00:35:54,720
uh what you want to do is go all the way

00:35:53,760 --> 00:35:59,119
down to the bottom

00:35:54,720 --> 00:36:01,760
and specify the path

00:35:59,119 --> 00:36:04,240
for your api so let's just put it on my

00:36:01,760 --> 00:36:04,240
desktop

00:36:05,119 --> 00:36:08,079
all good files

00:36:11,200 --> 00:36:16,800
and so if we hit generate output here

00:36:13,839 --> 00:36:17,920
what happens is the n swag tool chain

00:36:16,800 --> 00:36:20,320
goes and takes a look at that

00:36:17,920 --> 00:36:21,839
swagger.json file understands the

00:36:20,320 --> 00:36:24,640
specification

00:36:21,839 --> 00:36:26,079
and automatically generates the c sharp

00:36:24,640 --> 00:36:30,000
client here of course

00:36:26,079 --> 00:36:32,560
expand this a little bit you can see

00:36:30,000 --> 00:36:33,520
it's written my entire client for me if

00:36:32,560 --> 00:36:36,480
my job is done

00:36:33,520 --> 00:36:36,480
i can just go home

00:36:36,880 --> 00:36:40,320
and here's an interesting thing is that

00:36:38,720 --> 00:36:43,359
there is uh

00:36:40,320 --> 00:36:47,760
a rest api for jira which is

00:36:43,359 --> 00:36:50,560
one of the biggest tools out there

00:36:47,760 --> 00:36:53,680
they also support uh open api

00:36:50,560 --> 00:36:56,000
specifications so if we look at

00:36:53,680 --> 00:36:57,520
open this api specification document

00:36:56,000 --> 00:36:59,839
that's much more comprehensive they've

00:36:57,520 --> 00:37:01,359
built a lot of dots a lot of the

00:36:59,839 --> 00:37:03,200
they built a lot of the documentation

00:37:01,359 --> 00:37:05,839
into the specification

00:37:03,200 --> 00:37:06,800
as well but we could just copy this url

00:37:05,839 --> 00:37:11,599
here

00:37:06,800 --> 00:37:11,599
we can do the same thing uh

00:37:12,400 --> 00:37:16,880
add in there for the c sharp client go

00:37:15,440 --> 00:37:20,839
back to settings

00:37:16,880 --> 00:37:23,839
and let's just rename this here

00:37:20,839 --> 00:37:23,839
to

00:37:26,079 --> 00:37:31,440
and generate the output

00:37:29,359 --> 00:37:32,640
that probably take quite a while because

00:37:31,440 --> 00:37:35,680
the jira client is

00:37:32,640 --> 00:37:38,400
uh very very very

00:37:35,680 --> 00:37:39,440
very complicated and so is the api of

00:37:38,400 --> 00:37:42,960
course

00:37:39,440 --> 00:37:45,920
uh how long it will take here

00:37:42,960 --> 00:37:47,119
but eventually what will happen is we

00:37:45,920 --> 00:37:49,520
will have

00:37:47,119 --> 00:37:51,200
a jio client automatically generated ah

00:37:49,520 --> 00:37:54,640
so here it is so we have

00:37:51,200 --> 00:37:58,000
this very very comprehensive client

00:37:54,640 --> 00:38:00,800
for the jira api this is weeks and weeks

00:37:58,000 --> 00:38:03,760
and weeks of work for a developer done

00:38:00,800 --> 00:38:05,359
instantly through the magic of opening

00:38:03,760 --> 00:38:09,119
specification

00:38:05,359 --> 00:38:11,760
uh so again this is if you build swagger

00:38:09,119 --> 00:38:13,119
into your opinion api specification into

00:38:11,760 --> 00:38:15,599
your api

00:38:13,119 --> 00:38:17,440
uh you're providing a lot of value for

00:38:15,599 --> 00:38:19,119
anyone that consumes that api and you're

00:38:17,440 --> 00:38:20,880
saving them a lot of time

00:38:19,119 --> 00:38:22,320
and i'll show you some of the some more

00:38:20,880 --> 00:38:24,160
powerful things that you can do

00:38:22,320 --> 00:38:26,000
as well but i'll quickly jump back to

00:38:24,160 --> 00:38:27,119
the q a to see if anybody has any

00:38:26,000 --> 00:38:33,200
questions about

00:38:27,119 --> 00:38:36,560
what i've talked about so far

00:38:33,200 --> 00:38:36,560
let's see here

00:38:39,280 --> 00:38:47,839
okay great uh let us jump back

00:38:51,440 --> 00:38:55,040
so uh one of the other things i won't

00:38:53,680 --> 00:38:56,480
show you today that all

00:38:55,040 --> 00:38:59,040
that you can also do with the answer

00:38:56,480 --> 00:39:02,160
tool chain is that you can

00:38:59,040 --> 00:39:04,960
it supports ms whoops sorry

00:39:02,160 --> 00:39:07,200
stop sharing unintentionally let's do

00:39:04,960 --> 00:39:07,200
that

00:39:08,640 --> 00:39:12,880
is that it supports ms build arguments

00:39:10,640 --> 00:39:17,040
so what you can do

00:39:12,880 --> 00:39:20,160
is you can um

00:39:17,040 --> 00:39:22,720
studio is that you can

00:39:20,160 --> 00:39:24,160
have a client project for your api and

00:39:22,720 --> 00:39:26,480
then have that client

00:39:24,160 --> 00:39:28,480
regenerated every time you make a change

00:39:26,480 --> 00:39:30,400
to the api and if you build that into

00:39:28,480 --> 00:39:32,240
your devops pipeline you can have the

00:39:30,400 --> 00:39:34,880
client regenerated

00:39:32,240 --> 00:39:36,800
and published every single time that you

00:39:34,880 --> 00:39:39,680
make a change to your api which again

00:39:36,800 --> 00:39:40,960
saves so much time and it's very very

00:39:39,680 --> 00:39:43,359
powerful

00:39:40,960 --> 00:39:45,280
and in case anyone's wondering uh the

00:39:43,359 --> 00:39:47,280
end swipe tool chain and open api

00:39:45,280 --> 00:39:48,720
specification in general also supports

00:39:47,280 --> 00:39:50,720
api versioning right

00:39:48,720 --> 00:39:52,079
so if you have an api that's been around

00:39:50,720 --> 00:39:54,000
for a long time or

00:39:52,079 --> 00:39:55,200
you've made a new api but you want to

00:39:54,000 --> 00:39:56,560
keep it around for a long time and

00:39:55,200 --> 00:39:57,760
there's going to be new versions in the

00:39:56,560 --> 00:40:00,000
future don't worry

00:39:57,760 --> 00:40:01,599
uh if you have open api specification

00:40:00,000 --> 00:40:02,160
supports versioning and you'll be able

00:40:01,599 --> 00:40:06,400
to try

00:40:02,160 --> 00:40:08,839
different versions of that api in the

00:40:06,400 --> 00:40:10,720
sweater ui tool that i was showing you

00:40:08,839 --> 00:40:15,280
earlier

00:40:10,720 --> 00:40:18,640
okay so uh

00:40:15,280 --> 00:40:20,720
all right what shall we do here now

00:40:18,640 --> 00:40:22,720
maybe i'll show you some of the kind of

00:40:20,720 --> 00:40:24,400
the powerful things that you can do if

00:40:22,720 --> 00:40:26,720
you have an api that should

00:40:24,400 --> 00:40:29,680
support swagger uh so what i'm going to

00:40:26,720 --> 00:40:31,599
do is go to microsoft forums here

00:40:29,680 --> 00:40:33,200
and i'm going to just make it you know

00:40:31,599 --> 00:40:34,400
stay with me here you might think once

00:40:33,200 --> 00:40:36,160
it's kind of going in the microsoft

00:40:34,400 --> 00:40:40,000
forms doesn't make any sense

00:40:36,160 --> 00:40:41,680
but let's say uh for example i was uh

00:40:40,000 --> 00:40:45,359
like a wildlife service

00:40:41,680 --> 00:40:46,400
uh in alberta and i wanted to make a

00:40:45,359 --> 00:40:49,599
tool

00:40:46,400 --> 00:40:51,440
uh that would allow people to report uh

00:40:49,599 --> 00:40:55,119
you know kind of wildlife

00:40:51,440 --> 00:40:57,520
in alberta and uh and then send someone

00:40:55,119 --> 00:40:59,359
to go check out that wildlife spotting

00:40:57,520 --> 00:41:01,599
report and so i can make this

00:40:59,359 --> 00:41:01,599
uh

00:41:02,400 --> 00:41:06,240
life report survey

00:41:07,599 --> 00:41:12,640
uh let's see what latitude did you see

00:41:10,960 --> 00:41:15,119
the wildlife at

00:41:12,640 --> 00:41:16,160
and what longitude did you see the

00:41:15,119 --> 00:41:21,839
wildlife and so

00:41:16,160 --> 00:41:21,839
it's adding those

00:41:22,930 --> 00:41:25,969
[Music]

00:41:26,880 --> 00:41:31,599
latitude that one required

00:41:32,079 --> 00:41:35,839
and then

00:41:46,720 --> 00:41:51,280
tool called power automate

00:41:51,680 --> 00:41:55,839
and power automate is kind of similar to

00:41:54,640 --> 00:41:58,640
if this than that

00:41:55,839 --> 00:42:01,599
you can create kind of custom business

00:41:58,640 --> 00:42:05,040
processes based on something happening

00:42:01,599 --> 00:42:07,040
so if i was alberta wildlife services i

00:42:05,040 --> 00:42:09,280
might want something to happen uh when

00:42:07,040 --> 00:42:09,920
someone makes a new wildlife report

00:42:09,280 --> 00:42:16,000
through that

00:42:09,920 --> 00:42:19,839
form that i've created so i can

00:42:16,000 --> 00:42:19,839
this calls our wall by

00:42:29,119 --> 00:42:36,160
okay report and then when

00:42:32,319 --> 00:42:36,160
someone makes a wildlife report

00:42:36,800 --> 00:42:47,520
i will go

00:42:44,480 --> 00:42:50,079
get those response details from

00:42:47,520 --> 00:42:50,079
this one

00:42:50,560 --> 00:42:57,280
this and

00:42:54,160 --> 00:42:58,560
once i have that then this is the

00:42:57,280 --> 00:43:02,000
amazing part

00:42:58,560 --> 00:43:03,119
is that we can go here and add in a

00:43:02,000 --> 00:43:05,920
swagger api

00:43:03,119 --> 00:43:07,359
call if we want to so what we could do

00:43:05,920 --> 00:43:09,760
is we could take that latitude and

00:43:07,359 --> 00:43:12,000
longitude from the

00:43:09,760 --> 00:43:14,000
wildlife report and we could convert it

00:43:12,000 --> 00:43:15,520
into ats coordinates and then provide it

00:43:14,000 --> 00:43:17,280
to someone that is

00:43:15,520 --> 00:43:18,880
responding to that wildlife report and

00:43:17,280 --> 00:43:21,599
this is all without writing any code we

00:43:18,880 --> 00:43:24,560
can make that api call because

00:43:21,599 --> 00:43:27,839
we have that open api specification on

00:43:24,560 --> 00:43:30,880
our api so i'll show you how this works

00:43:27,839 --> 00:43:32,880
uh one thing i need to do is

00:43:30,880 --> 00:43:35,040
to start this end graph tunnel so that i

00:43:32,880 --> 00:43:36,800
can expose the api that's running on my

00:43:35,040 --> 00:43:39,599
vocal machine

00:43:36,800 --> 00:43:40,079
to the internet and uh if you're not

00:43:39,599 --> 00:43:43,119
familiar

00:43:40,079 --> 00:43:46,640
with ngrok it's it's an amazing tool

00:43:43,119 --> 00:43:47,520
this place come back there uh it's an

00:43:46,640 --> 00:43:49,520
amazing tool

00:43:47,520 --> 00:43:51,680
uh this is exactly what it does it's a

00:43:49,520 --> 00:43:52,240
public url for exposing your local web

00:43:51,680 --> 00:43:55,359
server

00:43:52,240 --> 00:43:59,040
and uh it works on

00:43:55,359 --> 00:44:00,480
mac os windows linux freebsd so

00:43:59,040 --> 00:44:02,400
if you're not familiar with this tool

00:44:00,480 --> 00:44:05,520
it's an amazing tool uh

00:44:02,400 --> 00:44:08,160
so what i have now is i have this url

00:44:05,520 --> 00:44:10,319
this ngrok url that's exposing

00:44:08,160 --> 00:44:12,319
my api that's running locally on my

00:44:10,319 --> 00:44:16,480
machine

00:44:12,319 --> 00:44:20,160
run that make sure it's running

00:44:16,480 --> 00:44:20,160
let's go back to power automate

00:44:20,319 --> 00:44:26,780
and i can put in the url

00:44:23,680 --> 00:44:29,839
for my api specification

00:44:26,780 --> 00:44:29,839
[Music]

00:44:31,119 --> 00:44:37,680
next oh let's see

00:44:34,560 --> 00:44:41,119
ah yes we forgot to do something

00:44:37,680 --> 00:44:45,520
course the bane of all developers

00:44:41,119 --> 00:44:48,560
uh so we just have to enable cores

00:44:45,520 --> 00:44:49,760
since we have uh since this is a public

00:44:48,560 --> 00:44:53,200
api

00:44:49,760 --> 00:44:56,079
we have no problem just letting

00:44:53,200 --> 00:44:56,079
anyone

00:44:57,040 --> 00:45:02,080
make a request so just make sure that we

00:45:00,480 --> 00:45:03,680
enable cores here

00:45:02,080 --> 00:45:05,760
[Music]

00:45:03,680 --> 00:45:08,640
security people are probably going crazy

00:45:05,760 --> 00:45:11,760
so you know this may not apply to

00:45:08,640 --> 00:45:15,200
your api make sure that you don't just

00:45:11,760 --> 00:45:15,599
copy and paste the code and add cores to

00:45:15,200 --> 00:45:19,359
any

00:45:15,599 --> 00:45:22,560
or at least allow anybody to make a

00:45:19,359 --> 00:45:25,440
request via course

00:45:22,560 --> 00:45:28,240
to your api but now the api is running

00:45:25,440 --> 00:45:31,040
go back to power automate

00:45:28,240 --> 00:45:33,680
that swipe your file and now that we've

00:45:31,040 --> 00:45:35,680
seen that power automata is picking up

00:45:33,680 --> 00:45:38,240
uh all of the documentation and the

00:45:35,680 --> 00:45:40,319
specification for the api

00:45:38,240 --> 00:45:42,319
we can see here it is it's a description

00:45:40,319 --> 00:45:44,560
of this integration that returns an ap

00:45:42,319 --> 00:45:46,319
api a sort of ats descriptor the

00:45:44,560 --> 00:45:47,200
latitude and longitude and what we can

00:45:46,319 --> 00:45:50,560
do here now

00:45:47,200 --> 00:45:51,599
is that we can provide the answers to

00:45:50,560 --> 00:45:54,560
the questions

00:45:51,599 --> 00:45:56,560
so someone puts in the latitude and

00:45:54,560 --> 00:45:58,640
someone puts in the longitude

00:45:56,560 --> 00:46:01,359
to that wildlife report survey that we

00:45:58,640 --> 00:46:04,000
created now we can take that

00:46:01,359 --> 00:46:05,839
uh we can make an api request to it

00:46:04,000 --> 00:46:07,680
let's just save that so we don't lose it

00:46:05,839 --> 00:46:12,160
here

00:46:07,680 --> 00:46:15,520
quote saving and then we can dispatch

00:46:12,160 --> 00:46:18,640
someone to make an inspection of that uh

00:46:15,520 --> 00:46:20,560
those particular coordinates so let's

00:46:18,640 --> 00:46:22,240
open my email because you'll probably

00:46:20,560 --> 00:46:22,560
see all the emails from my mom telling

00:46:22,240 --> 00:46:26,839
me

00:46:22,560 --> 00:46:30,480
my broccoli so i've made this um

00:46:26,839 --> 00:46:35,560
email baby wildlife

00:46:30,480 --> 00:46:38,560
services at

00:46:35,560 --> 00:46:38,560
gmail.com

00:46:41,760 --> 00:46:48,560
port and the content

00:46:45,200 --> 00:46:52,480
well there is wild

00:46:48,560 --> 00:46:54,400
life at ets

00:46:52,480 --> 00:46:57,119
and we have the response body here from

00:46:54,400 --> 00:47:01,520
the call to

00:46:57,119 --> 00:47:03,520
the api to get the ats descriptor

00:47:01,520 --> 00:47:05,599
and boom now we've created a business

00:47:03,520 --> 00:47:09,200
process where someone is able to

00:47:05,599 --> 00:47:09,200
through this form here

00:47:09,440 --> 00:47:15,680
report some wildlife and then

00:47:12,800 --> 00:47:16,640
we're able to dispatch someone via email

00:47:15,680 --> 00:47:20,400
with the ats

00:47:16,640 --> 00:47:22,640
coordinates of that wildlife uh now

00:47:20,400 --> 00:47:25,200
we can see that in action but i won't

00:47:22,640 --> 00:47:28,000
use this survey because it's linked to

00:47:25,200 --> 00:47:29,680
that one that i that power automate flow

00:47:28,000 --> 00:47:32,319
that i just created

00:47:29,680 --> 00:47:32,880
and it doesn't actually work when you're

00:47:32,319 --> 00:47:37,280
running

00:47:32,880 --> 00:47:38,640
a localhost microsoft doesn't like that

00:47:37,280 --> 00:47:40,079
that was a good reason because it's

00:47:38,640 --> 00:47:41,920
probably not going to be sticking around

00:47:40,079 --> 00:47:45,440
too long unless you buy that pro

00:47:41,920 --> 00:47:49,359
and rock subscription so we can go

00:47:45,440 --> 00:47:52,720
try this one this product report

00:47:49,359 --> 00:47:55,520
and preview it try it out

00:47:52,720 --> 00:47:55,520
so let's say

00:47:56,720 --> 00:47:59,760
i'll go to wildlife service email

00:47:58,640 --> 00:48:02,079
account

00:47:59,760 --> 00:48:03,839
see there's nothing in there and then

00:48:02,079 --> 00:48:06,880
i'm going to respond

00:48:03,839 --> 00:48:09,440
to my wildlife report here put in

00:48:06,880 --> 00:48:11,040
coordinates of where i saw some wildlife

00:48:09,440 --> 00:48:15,680
submit that

00:48:11,040 --> 00:48:15,680
and then now alberta wildlife services

00:48:15,760 --> 00:48:20,480
get an email in the inbox saying okay

00:48:18,559 --> 00:48:22,000
there's a new wildlife report wildlife

00:48:20,480 --> 00:48:23,440
has been spotted

00:48:22,000 --> 00:48:25,119
at this particular latitude and

00:48:23,440 --> 00:48:27,440
longitude and there's the ats

00:48:25,119 --> 00:48:29,040
personnel as someone that needs to

00:48:27,440 --> 00:48:30,640
respond to this

00:48:29,040 --> 00:48:32,160
i can go out and i have the ats

00:48:30,640 --> 00:48:33,839
coordinates and as we saw

00:48:32,160 --> 00:48:35,520
in the original presentation has baked

00:48:33,839 --> 00:48:35,839
right into the road so i don't even need

00:48:35,520 --> 00:48:38,559
to

00:48:35,839 --> 00:48:40,079
go maps open google maps i know exactly

00:48:38,559 --> 00:48:41,359
where that is and i can go so

00:48:40,079 --> 00:48:43,920
these are some of the really powerful

00:48:41,359 --> 00:48:45,359
things that you can do if you add open

00:48:43,920 --> 00:48:48,640
api specification

00:48:45,359 --> 00:48:50,800
to your api and again

00:48:48,640 --> 00:48:52,400
these are some of the the the tools that

00:48:50,800 --> 00:48:54,000
are available out there to do that so

00:48:52,400 --> 00:48:55,680
it's not just for c-sharp where it is p

00:48:54,000 --> 00:48:56,880
dot network it's available for your

00:48:55,680 --> 00:48:58,000
favorite language your favorite

00:48:56,880 --> 00:49:01,119
framework

00:48:58,000 --> 00:49:01,440
um and i yeah i'm a big fan i hope

00:49:01,119 --> 00:49:03,359
you're

00:49:01,440 --> 00:49:06,160
now a big fan as well and then you add

00:49:03,359 --> 00:49:09,200
it to to your apis

00:49:06,160 --> 00:49:12,000
and i'll stop sharing and jump back in

00:49:09,200 --> 00:49:13,280
for any questions hopefully i can

00:49:12,000 --> 00:49:17,839
provide some answers

00:49:13,280 --> 00:49:17,839
to those questions

00:49:22,270 --> 00:49:27,200
[Music]

00:49:24,640 --> 00:49:29,119
looks like uh we have reached the end of

00:49:27,200 --> 00:49:31,760
the session so thanks everyone for

00:49:29,119 --> 00:49:35,040
joining me i really appreciate your time

00:49:31,760 --> 00:49:39,040
uh and please tweet me

00:49:35,040 --> 00:49:40,880
if you have any other questions and

00:49:39,040 --> 00:49:43,359
i hope to see you using open api

00:49:40,880 --> 00:49:45,839
specification in your api soon

00:49:43,359 --> 00:49:45,839

YouTube URL: https://www.youtube.com/watch?v=sm9avDHr5X8


