Title: Speaker Q & A | David East, Ben Lesh, & Mike Ryan | ng-conf: Hardwired
Publication date: 2020-06-15
Playlist: ng-conf 2020: Hardwired
Description: 
	Get your free ticket to EnterpriseNG conference Keynote: https://ng-conf.org

Q&A panel with David East, Ben Lesh, and Mike Ryan.

Watch all the ng-conf: Hardwired presentations/videos at https://videos.ng-conf.org

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

ng-conf: Hardwired is brought to you by:
- https://thinkster.io/ The best Angular and JavaScript tutorials on the web
- https://herodevs.com/ Engineering and consulting by web development experts
- https://xlts.dev/  Extended support for AngularJS

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:00,190 --> 00:00:02,970
[Music]

00:00:01,010 --> 00:00:03,980
[Applause]

00:00:02,970 --> 00:00:05,920
[Music]

00:00:03,980 --> 00:00:16,640
[Applause]

00:00:05,920 --> 00:00:16,640
[Music]

00:00:17,279 --> 00:00:21,279
um

00:00:17,840 --> 00:00:25,519
why don't we bring the panel on

00:00:21,279 --> 00:00:28,480
panel how's everyone going

00:00:25,519 --> 00:00:30,000
well how are you i'm good it's going ben

00:00:28,480 --> 00:00:35,040
dave are you good

00:00:30,000 --> 00:00:35,040
howdy hey all right hey um

00:00:36,719 --> 00:00:41,200
all right sorry just doing some last

00:00:38,719 --> 00:00:42,840
minute changing of the tires as we dive

00:00:41,200 --> 00:00:45,600
down the freeway

00:00:42,840 --> 00:00:46,800
adjustments okay good job on your talks

00:00:45,600 --> 00:00:48,239
we've got some questions here i'm just

00:00:46,800 --> 00:00:50,640
gonna ask him in order

00:00:48,239 --> 00:00:53,680
most likes gets asked first because it's

00:00:50,640 --> 00:00:55,520
community uh curated list yeah

00:00:53,680 --> 00:00:59,039
all right i think we know the answer

00:00:55,520 --> 00:01:04,400
already but i have to ask it

00:00:59,039 --> 00:01:06,479
i have to ask it graphql versus njrx

00:01:04,400 --> 00:01:08,159
why isn't there any angular graphql this

00:01:06,479 --> 00:01:11,439
year please share good resources and

00:01:08,159 --> 00:01:15,759
patterns for angular plus graphql

00:01:11,439 --> 00:01:18,560
actually i don't know anyone

00:01:15,759 --> 00:01:19,280
the top top voter question i'll take a

00:01:18,560 --> 00:01:21,680
stab at it

00:01:19,280 --> 00:01:23,280
so in my opinion it's not graphql or

00:01:21,680 --> 00:01:24,320
njrx the two can play really well

00:01:23,280 --> 00:01:26,720
together

00:01:24,320 --> 00:01:27,840
um sam julian and i were just talking

00:01:26,720 --> 00:01:30,000
about maybe doing some

00:01:27,840 --> 00:01:31,520
uh live streams this summer or some blog

00:01:30,000 --> 00:01:32,799
content exploring this topic

00:01:31,520 --> 00:01:34,400
but i think they can play really well

00:01:32,799 --> 00:01:35,119
together and in fact i use graphql

00:01:34,400 --> 00:01:36,560
within direct

00:01:35,119 --> 00:01:38,320
day job so if you're looking out for

00:01:36,560 --> 00:01:39,600
that we'd love to uh

00:01:38,320 --> 00:01:41,520
put some content out there that answers

00:01:39,600 --> 00:01:44,960
that question yeah okay

00:01:41,520 --> 00:01:48,960
cool um

00:01:44,960 --> 00:01:52,079
this one's for david how you doing man

00:01:48,960 --> 00:01:54,560
doing great good all right

00:01:52,079 --> 00:01:56,240
why use a traditional server approach

00:01:54,560 --> 00:01:57,040
instead of a serverless approach with

00:01:56,240 --> 00:02:00,320
firebase

00:01:57,040 --> 00:02:01,439
such as firebase uh well it depends on

00:02:00,320 --> 00:02:03,040
what your

00:02:01,439 --> 00:02:04,479
what specifically you mean by that

00:02:03,040 --> 00:02:06,719
there's uh

00:02:04,479 --> 00:02:07,520
a traditional server approach being like

00:02:06,719 --> 00:02:10,080
one

00:02:07,520 --> 00:02:11,360
uh server that's and so whether what

00:02:10,080 --> 00:02:13,200
you're doing on the server if you're

00:02:11,360 --> 00:02:14,160
serving your app like serving assets

00:02:13,200 --> 00:02:16,640
through it

00:02:14,160 --> 00:02:17,840
a traditional server approach and that

00:02:16,640 --> 00:02:19,280
way where you're doing

00:02:17,840 --> 00:02:20,560
a server rendering like every time

00:02:19,280 --> 00:02:22,000
someone sends a request i'm gonna

00:02:20,560 --> 00:02:25,520
generate some html and send

00:02:22,000 --> 00:02:27,040
it back um that's

00:02:25,520 --> 00:02:29,280
one way of doing that's one way of

00:02:27,040 --> 00:02:30,239
having a general server approach and i

00:02:29,280 --> 00:02:33,200
think

00:02:30,239 --> 00:02:34,640
that is the drawbacks of that server

00:02:33,200 --> 00:02:36,160
approach is that you really want to be

00:02:34,640 --> 00:02:38,400
taking advantage of

00:02:36,160 --> 00:02:39,599
a cdn especially if you're building a

00:02:38,400 --> 00:02:41,680
single page app

00:02:39,599 --> 00:02:43,280
because you're not really a lot of your

00:02:41,680 --> 00:02:46,560
rendering is on the client side

00:02:43,280 --> 00:02:48,319
so if you are going to a one server

00:02:46,560 --> 00:02:51,840
somewhere and you're just sending back

00:02:48,319 --> 00:02:54,000
that html through you know

00:02:51,840 --> 00:02:56,000
back from that one server you're gonna

00:02:54,000 --> 00:02:56,800
have a big uh performance hit there

00:02:56,000 --> 00:02:59,280
because

00:02:56,800 --> 00:03:00,800
it's much faster to cache those in a cdn

00:02:59,280 --> 00:03:02,080
around the world rather than having to

00:03:00,800 --> 00:03:05,599
make that trip back to that one

00:03:02,080 --> 00:03:07,200
server uh so that's serverless can work

00:03:05,599 --> 00:03:09,840
really well with that because you can

00:03:07,200 --> 00:03:10,959
trigger a serverless function to write

00:03:09,840 --> 00:03:12,800
to a cdn

00:03:10,959 --> 00:03:14,000
um which is a really and so the

00:03:12,800 --> 00:03:14,720
serverless function doesn't trigger

00:03:14,000 --> 00:03:16,800
every single time

00:03:14,720 --> 00:03:18,000
it'll be cached in the cdn so that's one

00:03:16,800 --> 00:03:20,560
really nice approach

00:03:18,000 --> 00:03:21,200
uh but if you mean in terms of like how

00:03:20,560 --> 00:03:24,319
i was

00:03:21,200 --> 00:03:26,400
demoing off the security uh there's

00:03:24,319 --> 00:03:28,239
not actually however you want to do it

00:03:26,400 --> 00:03:29,760
isn't that big of a deal the what's nice

00:03:28,239 --> 00:03:30,959
about the serverless approach is that

00:03:29,760 --> 00:03:33,360
it's event driven

00:03:30,959 --> 00:03:35,120
so serverless will trigger when that

00:03:33,360 --> 00:03:35,760
specific thing happens that you care

00:03:35,120 --> 00:03:38,720
about

00:03:35,760 --> 00:03:40,080
whereas if you were doing it on a

00:03:38,720 --> 00:03:41,440
traditional server you would just have

00:03:40,080 --> 00:03:43,519
to set up your own

00:03:41,440 --> 00:03:45,360
uh like event processing system that's

00:03:43,519 --> 00:03:46,319
like hey i know this thing happened now

00:03:45,360 --> 00:03:49,840
run this

00:03:46,319 --> 00:03:52,879
so uh yeah so those are kind of the two

00:03:49,840 --> 00:03:55,280
approaches for that all right okay

00:03:52,879 --> 00:03:56,400
thanks dave okay mike i think you

00:03:55,280 --> 00:04:00,640
answered this but just

00:03:56,400 --> 00:04:04,319
to clarify can ngrx

00:04:00,640 --> 00:04:07,120
can i use ngrx let an ngrx push without

00:04:04,319 --> 00:04:07,120
using the store

00:04:07,360 --> 00:04:11,280
uh so you can use ngrx component the

00:04:10,239 --> 00:04:12,959
entire library

00:04:11,280 --> 00:04:14,319
without using a single other ngrx

00:04:12,959 --> 00:04:16,560
library

00:04:14,319 --> 00:04:18,400
all that matters is that you're using

00:04:16,560 --> 00:04:20,799
some kind of observable way

00:04:18,400 --> 00:04:23,520
of structuring your state so whether

00:04:20,799 --> 00:04:24,800
that's akita or ngxs or dan wallen's

00:04:23,520 --> 00:04:26,960
observable store or

00:04:24,800 --> 00:04:28,639
behavior subjects in a service those all

00:04:26,960 --> 00:04:30,000
are going to play great with ngrx

00:04:28,639 --> 00:04:32,240
component

00:04:30,000 --> 00:04:33,680
okay so i'm going to just clarify the

00:04:32,240 --> 00:04:35,600
question

00:04:33,680 --> 00:04:37,759
they want to know if they use ngoxlet

00:04:35,600 --> 00:04:39,840
and ngx ngrx push

00:04:37,759 --> 00:04:42,479
and you said they can use ngrx component

00:04:39,840 --> 00:04:42,960
i'm guessing nzxlet and ngx push are

00:04:42,479 --> 00:04:45,040
part of

00:04:42,960 --> 00:04:46,960
the component that's right those are two

00:04:45,040 --> 00:04:48,800
apis exposed in ngrx component

00:04:46,960 --> 00:04:51,199
so yes you can use ngrx component

00:04:48,800 --> 00:04:51,919
without the store the other pieces of

00:04:51,199 --> 00:04:55,440
nzx

00:04:51,919 --> 00:04:59,680
okay all right um

00:04:55,440 --> 00:05:02,160
so mike imagine i'm building a library

00:04:59,680 --> 00:05:04,400
that i'm gonna ship out to the peeps

00:05:02,160 --> 00:05:06,560
right i'm gonna give some of that love

00:05:04,400 --> 00:05:08,240
does it make sense to put the store

00:05:06,560 --> 00:05:10,080
inside of my library inside of a

00:05:08,240 --> 00:05:12,080
published library what are your thoughts

00:05:10,080 --> 00:05:15,280
on libraries exposing their actions and

00:05:12,080 --> 00:05:17,759
effects to applications

00:05:15,280 --> 00:05:18,960
um yeah i i think you could do this i'd

00:05:17,759 --> 00:05:20,000
be really curious to hear what your use

00:05:18,960 --> 00:05:21,840
case is

00:05:20,000 --> 00:05:23,440
we support an api that makes that

00:05:21,840 --> 00:05:25,520
possible so you can use

00:05:23,440 --> 00:05:27,520
effects module.for feature and store

00:05:25,520 --> 00:05:28,560
module.4 feature to sort of ship your

00:05:27,520 --> 00:05:31,039
own effects

00:05:28,560 --> 00:05:32,800
and reducers and then when it comes to

00:05:31,039 --> 00:05:34,479
actions my only recommendation there is

00:05:32,800 --> 00:05:36,240
to make sure you're exporting actions in

00:05:34,479 --> 00:05:38,240
a separate import than the rest of the

00:05:36,240 --> 00:05:39,199
library so like if your library's name

00:05:38,240 --> 00:05:41,840
was

00:05:39,199 --> 00:05:43,520
um cookies it'd be cookie slash actions

00:05:41,840 --> 00:05:45,199
re-export all your actions

00:05:43,520 --> 00:05:46,400
and that way it plays really well with

00:05:45,199 --> 00:05:47,840
sort of some of the lazy loading

00:05:46,400 --> 00:05:49,520
strategies that index developers are

00:05:47,840 --> 00:05:53,039
accustomed to

00:05:49,520 --> 00:05:56,639
cool thanks um

00:05:53,039 --> 00:06:00,880
all right ben a lot of us

00:05:56,639 --> 00:06:03,919
have been we've heard about rx dev tools

00:06:00,880 --> 00:06:05,680
rxjs dev tools nicholas got us all

00:06:03,919 --> 00:06:08,160
excited

00:06:05,680 --> 00:06:10,240
we wants the good toys is there any

00:06:08,160 --> 00:06:11,840
plans on that coming out anytime soon or

00:06:10,240 --> 00:06:14,639
what do you think

00:06:11,840 --> 00:06:15,280
uh well he's he's had those out for a

00:06:14,639 --> 00:06:16,800
while

00:06:15,280 --> 00:06:18,720
uh i don't know how much time he's had

00:06:16,800 --> 00:06:21,759
to um

00:06:18,720 --> 00:06:24,560
to update them but it's called rxjs spy

00:06:21,759 --> 00:06:24,960
uh dev tools so you can you can find

00:06:24,560 --> 00:06:28,639
those

00:06:24,960 --> 00:06:32,400
um actually under nicholas's uh

00:06:28,639 --> 00:06:34,960
github um and

00:06:32,400 --> 00:06:35,440
we have a plan where we want to try to

00:06:34,960 --> 00:06:37,600
get it

00:06:35,440 --> 00:06:38,960
all of that like into the core

00:06:37,600 --> 00:06:40,800
repository into the main

00:06:38,960 --> 00:06:42,880
repository so we can kind of keep those

00:06:40,800 --> 00:06:48,560
up to date at the same time

00:06:42,880 --> 00:06:52,479
uh but that hasn't materialized yet uh

00:06:48,560 --> 00:06:54,160
yeah that's right so kartant

00:06:52,479 --> 00:06:55,520
i don't i actually know how to say that

00:06:54,160 --> 00:06:58,080
cartons um

00:06:55,520 --> 00:06:59,360
anyways uh so yeah so you can you can

00:06:58,080 --> 00:07:00,800
find that and we want it we want to try

00:06:59,360 --> 00:07:04,240
to get that into the same

00:07:00,800 --> 00:07:07,360
repository as rxgs master and um

00:07:04,240 --> 00:07:08,880
try to keep it in sync uh i don't know

00:07:07,360 --> 00:07:10,479
how compatible it is with version seven

00:07:08,880 --> 00:07:11,919
i assume it's still fully compatible i

00:07:10,479 --> 00:07:12,880
haven't talked with niklas about that in

00:07:11,919 --> 00:07:14,639
a while

00:07:12,880 --> 00:07:16,080
so if i want to install it if i want to

00:07:14,639 --> 00:07:19,120
install rxjs buy

00:07:16,080 --> 00:07:21,120
like the chrome dev tools how are

00:07:19,120 --> 00:07:24,720
like the chrome extension do i just go

00:07:21,120 --> 00:07:26,479
to his rxjs spy repo or where do i go

00:07:24,720 --> 00:07:28,560
uh yeah you want to go to the repository

00:07:26,479 --> 00:07:32,000
because it has instructions for

00:07:28,560 --> 00:07:34,560
uh how to how to install it

00:07:32,000 --> 00:07:36,319
uh okay from although i think that it

00:07:34,560 --> 00:07:38,080
might actually be under rxjs

00:07:36,319 --> 00:07:39,520
no never mind it's no it's you have to

00:07:38,080 --> 00:07:40,800
go to that you have to go to the readme

00:07:39,520 --> 00:07:42,160
i'm looking to read me now actually okay

00:07:40,800 --> 00:07:44,000
you got to go to the readme too

00:07:42,160 --> 00:07:46,000
to follow how to install it okay we're

00:07:44,000 --> 00:07:47,840
gonna put a link to it down below

00:07:46,000 --> 00:07:51,520
and so if you go down to the action

00:07:47,840 --> 00:07:55,680
button down over there

00:07:51,520 --> 00:07:58,720
it's down there okay mike

00:07:55,680 --> 00:08:01,919
so imagine imagine i want to

00:07:58,720 --> 00:08:02,319
go away from the zone.js and i want to

00:08:01,919 --> 00:08:06,319
go

00:08:02,319 --> 00:08:07,840
to ngrx view which is part of ngrx

00:08:06,319 --> 00:08:10,560
component right

00:08:07,840 --> 00:08:11,520
yeah um that's gonna i can't just like

00:08:10,560 --> 00:08:13,199
find replace

00:08:11,520 --> 00:08:14,879
go right i can't just like remove

00:08:13,199 --> 00:08:16,639
zone.js and then

00:08:14,879 --> 00:08:18,000
wrap my entire app in njr's view right

00:08:16,639 --> 00:08:20,720
like so

00:08:18,000 --> 00:08:22,240
the question is the kids want to know

00:08:20,720 --> 00:08:25,039
what are some of the recommended steps

00:08:22,240 --> 00:08:25,039
for that migration

00:08:25,199 --> 00:08:30,879
yeah um so

00:08:28,319 --> 00:08:32,399
hopefully that um it'll be a drop-in

00:08:30,879 --> 00:08:33,839
replacement for the async pipe but

00:08:32,399 --> 00:08:36,000
that's not gonna be enough to get you

00:08:33,839 --> 00:08:37,839
completely off of using zone.js before

00:08:36,000 --> 00:08:39,919
we call inject's component ready to go

00:08:37,839 --> 00:08:41,519
we'll have a more robust answer for this

00:08:39,919 --> 00:08:42,080
but it's going to require more than just

00:08:41,519 --> 00:08:43,760
code

00:08:42,080 --> 00:08:45,200
that you're authoring to change there

00:08:43,760 --> 00:08:46,720
are a couple of angular libraries that

00:08:45,200 --> 00:08:48,240
you are likely using like angular

00:08:46,720 --> 00:08:50,080
material and angular router

00:08:48,240 --> 00:08:51,360
that we're hoping to work with and

00:08:50,080 --> 00:08:52,080
they'll need to make some changes on

00:08:51,360 --> 00:08:53,279
their end too

00:08:52,080 --> 00:08:56,080
we're still a while away from getting

00:08:53,279 --> 00:09:01,519
there but it gets us on the right start

00:08:56,080 --> 00:09:04,000
okay um two questions for dave

00:09:01,519 --> 00:09:04,880
first question what would be the best

00:09:04,000 --> 00:09:07,440
approach for

00:09:04,880 --> 00:09:08,160
sso into multiple sub domains using

00:09:07,440 --> 00:09:10,800
firebase

00:09:08,160 --> 00:09:10,800
auth module

00:09:11,200 --> 00:09:16,399
uh so that's uh as long as you have the

00:09:14,800 --> 00:09:19,279
right

00:09:16,399 --> 00:09:20,000
like domains whitelisted that that can

00:09:19,279 --> 00:09:22,240
work

00:09:20,000 --> 00:09:23,839
uh you know just fine especially if

00:09:22,240 --> 00:09:25,760
you're using like a provider

00:09:23,839 --> 00:09:27,519
like a single provider like google

00:09:25,760 --> 00:09:28,399
across all of them or email and password

00:09:27,519 --> 00:09:30,160
um

00:09:28,399 --> 00:09:31,760
it's pretty simple there's ways with

00:09:30,160 --> 00:09:34,880
firebase auth to link

00:09:31,760 --> 00:09:36,959
accounts um but that's usually pretty

00:09:34,880 --> 00:09:39,360
straightforward since your auth is

00:09:36,959 --> 00:09:41,519
yeah decentralized from your your like

00:09:39,360 --> 00:09:43,200
main servers and stuff like that so

00:09:41,519 --> 00:09:44,800
uh that tends to be pretty

00:09:43,200 --> 00:09:46,640
straightforward uh

00:09:44,800 --> 00:09:48,160
where it might get tricky is if you have

00:09:46,640 --> 00:09:50,959
like your own

00:09:48,160 --> 00:09:51,519
uh like custom authentication system

00:09:50,959 --> 00:09:54,320
then

00:09:51,519 --> 00:09:55,760
there's that's still like easy enough to

00:09:54,320 --> 00:09:57,120
do but there's gonna be some work you're

00:09:55,760 --> 00:10:00,399
gonna have to do to tie

00:09:57,120 --> 00:10:01,440
some things together uh so for the most

00:10:00,399 --> 00:10:02,880
part it works but

00:10:01,440 --> 00:10:04,560
yeah you definitely need to figure out

00:10:02,880 --> 00:10:07,519
like what systems are

00:10:04,560 --> 00:10:08,320
kind of uh going to cause you problems

00:10:07,519 --> 00:10:12,720
okay

00:10:08,320 --> 00:10:16,160
cool um so with the firebase sso

00:10:12,720 --> 00:10:18,399
good with the custom authentication

00:10:16,160 --> 00:10:20,399
might be a little harder

00:10:18,399 --> 00:10:22,160
yeah well i wouldn't say harder but more

00:10:20,399 --> 00:10:25,279
work okay

00:10:22,160 --> 00:10:27,760
all right so dave your to-do app that

00:10:25,279 --> 00:10:30,720
you showed in your slides

00:10:27,760 --> 00:10:31,120
the kids want access to your to-do app

00:10:30,720 --> 00:10:33,440
so

00:10:31,120 --> 00:10:35,279
i prefer to refer like call it like just

00:10:33,440 --> 00:10:38,079
a it's a com bomb board

00:10:35,279 --> 00:10:39,760
uh it's it's not totally just that's

00:10:38,079 --> 00:10:41,680
every absolute you have one yeah

00:10:39,760 --> 00:10:44,079
it's a better version though like don't

00:10:41,680 --> 00:10:45,680
disrespect it right call it a combine

00:10:44,079 --> 00:10:47,440
no it's it's now let's call it what it

00:10:45,680 --> 00:10:49,680
is every every app

00:10:47,440 --> 00:10:51,440
really is either a chat app or a to-do

00:10:49,680 --> 00:10:53,360
app like if you think about like a

00:10:51,440 --> 00:10:55,360
grocery list app that's just an app

00:10:53,360 --> 00:10:57,920
where you're just chatting about

00:10:55,360 --> 00:10:58,640
groceries and like you just think about

00:10:57,920 --> 00:11:00,399
it every app

00:10:58,640 --> 00:11:02,959
out there i mean this is a chat app

00:11:00,399 --> 00:11:05,200
right here we're just chatting

00:11:02,959 --> 00:11:06,640
so you just think about it that way um

00:11:05,200 --> 00:11:09,279
but yeah i will have the

00:11:06,640 --> 00:11:10,240
uh i'll have that updated and i'll have

00:11:09,279 --> 00:11:14,399
to get the

00:11:10,240 --> 00:11:17,360
uh ngconf account to rt it

00:11:14,399 --> 00:11:19,600
deal ben this is probably a good chance

00:11:17,360 --> 00:11:23,040
to talk about some things

00:11:19,600 --> 00:11:25,680
um kind of an interesting question

00:11:23,040 --> 00:11:26,480
and i think maybe you can talk you don't

00:11:25,680 --> 00:11:27,760
have to talk

00:11:26,480 --> 00:11:30,480
around it but it would be cool if you

00:11:27,760 --> 00:11:31,839
talked at it and then around as well

00:11:30,480 --> 00:11:34,079
i'm just laughing because this is

00:11:31,839 --> 00:11:36,320
probably a good time to talk about some

00:11:34,079 --> 00:11:38,560
things like i'm being sat down by my dad

00:11:36,320 --> 00:11:40,480
ben i need to explain some things to you

00:11:38,560 --> 00:11:42,320
how the grass grows buddy

00:11:40,480 --> 00:11:43,760
yeah no i want you to explain to me how

00:11:42,320 --> 00:11:44,480
the grass scrolls that's what i'm asking

00:11:43,760 --> 00:11:47,760
all right

00:11:44,480 --> 00:11:51,839
um so for step yeah for

00:11:47,760 --> 00:11:55,680
for for 7.1 you've got eslint rules

00:11:51,839 --> 00:11:58,079
but angular uses tslint

00:11:55,680 --> 00:11:58,880
so how are we supposed to catch this

00:11:58,079 --> 00:12:01,519
stuff

00:11:58,880 --> 00:12:02,959
well the reason i mean if people want to

00:12:01,519 --> 00:12:04,320
help us with the tsunami rules then

00:12:02,959 --> 00:12:07,360
that's great but the reason

00:12:04,320 --> 00:12:08,560
that we're um we're targeting those is

00:12:07,360 --> 00:12:12,000
one they're not written yet

00:12:08,560 --> 00:12:15,680
uh we need to write them um and

00:12:12,000 --> 00:12:17,760
uh tslint is moving over to be eslint

00:12:15,680 --> 00:12:19,040
that's the last i heard of it uh and i

00:12:17,760 --> 00:12:22,160
don't think that's changed

00:12:19,040 --> 00:12:23,680
um eslint runs a lot faster it has to do

00:12:22,160 --> 00:12:24,399
with the architecture and they're able

00:12:23,680 --> 00:12:26,079
to

00:12:24,399 --> 00:12:28,320
to handle uh the typescript side of

00:12:26,079 --> 00:12:30,000
things as well now i guess so

00:12:28,320 --> 00:12:31,360
that's what we're targeting uh all of

00:12:30,000 --> 00:12:34,959
those things are are

00:12:31,360 --> 00:12:37,200
open to suggestion um and

00:12:34,959 --> 00:12:38,320
uh the the most important thing is that

00:12:37,200 --> 00:12:41,760
we're able to accommodate

00:12:38,320 --> 00:12:43,360
a large swath of people rxjs is slow

00:12:41,760 --> 00:12:43,760
moving because it's all volunteer work

00:12:43,360 --> 00:12:46,880
done

00:12:43,760 --> 00:12:47,920
after hours these days so it's uh i

00:12:46,880 --> 00:12:50,720
wouldn't

00:12:47,920 --> 00:12:51,360
worry about suddenly you need to upgrade

00:12:50,720 --> 00:12:54,959
to ts

00:12:51,360 --> 00:12:56,320
or eslint like next month like this is

00:12:54,959 --> 00:12:58,079
you'll probably need to upgrade to

00:12:56,320 --> 00:13:00,079
eslint i would guess

00:12:58,079 --> 00:13:02,560
uh before we even have these things

00:13:00,079 --> 00:13:07,200
released if that makes sense

00:13:02,560 --> 00:13:10,560
yeah okay thanks man um

00:13:07,200 --> 00:13:13,920
here's a question for ben that uh

00:13:10,560 --> 00:13:17,279
not sure how much maybe just this

00:13:13,920 --> 00:13:19,200
anyway anyway i'm just gonna ask it

00:13:17,279 --> 00:13:20,800
is it possible for the deprecated

00:13:19,200 --> 00:13:23,279
subscribe

00:13:20,800 --> 00:13:24,480
methodology to be refactored

00:13:23,279 --> 00:13:28,000
automatically

00:13:24,480 --> 00:13:29,680
in a future ng update schematic

00:13:28,000 --> 00:13:31,519
yeah so that's that's the whole idea

00:13:29,680 --> 00:13:33,519
behind trying to

00:13:31,519 --> 00:13:35,440
get these code transformations done in

00:13:33,519 --> 00:13:38,800
upcoming minor releases

00:13:35,440 --> 00:13:40,480
is um ideally not only would they be

00:13:38,800 --> 00:13:41,920
something you could just run

00:13:40,480 --> 00:13:43,040
from a command line but if it's

00:13:41,920 --> 00:13:44,000
something you can run from a command

00:13:43,040 --> 00:13:46,639
line then

00:13:44,000 --> 00:13:47,040
it should be something that could be run

00:13:46,639 --> 00:13:50,320
from

00:13:47,040 --> 00:13:51,279
like ng-update or or whatever just

00:13:50,320 --> 00:13:53,040
actually have the

00:13:51,279 --> 00:13:55,839
the scaffolding in place for people that

00:13:53,040 --> 00:13:58,079
are using angular cli to

00:13:55,839 --> 00:13:59,199
update those things for you okay so

00:13:58,079 --> 00:14:01,760
that's that's the whole idea

00:13:59,199 --> 00:14:03,360
is we wanted to make sure that migration

00:14:01,760 --> 00:14:06,079
for people

00:14:03,360 --> 00:14:08,160
the majority of people that use uh rxjs

00:14:06,079 --> 00:14:12,079
is as smooth as possible

00:14:08,160 --> 00:14:15,600
okay uh does though do those

00:14:12,079 --> 00:14:16,000
migration scripts are you going to

00:14:15,600 --> 00:14:18,160
include

00:14:16,000 --> 00:14:19,600
the eslint transitioning as well in

00:14:18,160 --> 00:14:21,040
there or

00:14:19,600 --> 00:14:23,279
what are your thoughts i mean it might

00:14:21,040 --> 00:14:26,320
ideally it would just leverage the same

00:14:23,279 --> 00:14:28,320
transformations right so okay um

00:14:26,320 --> 00:14:29,519
like it would be great if it's great to

00:14:28,320 --> 00:14:30,480
use a linting tool for these things

00:14:29,519 --> 00:14:33,839
because they can do

00:14:30,480 --> 00:14:35,360
fixes and transformations and they can

00:14:33,839 --> 00:14:36,959
notify you while you're writing code

00:14:35,360 --> 00:14:39,199
that you're doing the wrong thing

00:14:36,959 --> 00:14:40,639
so if you can if you can knock them out

00:14:39,199 --> 00:14:41,839
like that then you

00:14:40,639 --> 00:14:44,959
get the most bang for your buck so

00:14:41,839 --> 00:14:46,160
that's that's ideally what we want to do

00:14:44,959 --> 00:14:48,320
we're going to need a lot of help doing

00:14:46,160 --> 00:14:51,680
it though i think uh being the the small

00:14:48,320 --> 00:14:54,000
crew that we are cool man thanks

00:14:51,680 --> 00:14:55,360
um another question the kids want to

00:14:54,000 --> 00:14:57,760
know

00:14:55,360 --> 00:14:59,199
oh sorry they're in bad orders sorry

00:14:57,760 --> 00:15:01,760
this one's for mike it was gonna be for

00:14:59,199 --> 00:15:05,760
ben but mike's got higher votes okay

00:15:01,760 --> 00:15:07,440
um mike do you have a recommendation as

00:15:05,760 --> 00:15:11,519
far as structuring your state

00:15:07,440 --> 00:15:14,000
vertically i.e nesting hold on

00:15:11,519 --> 00:15:15,920
everything just reshifted hold on or

00:15:14,000 --> 00:15:18,560
horizontally

00:15:15,920 --> 00:15:20,560
with different keys of the same state

00:15:18,560 --> 00:15:24,720
object

00:15:20,560 --> 00:15:25,360
um yeah i i think in ngrx land we

00:15:24,720 --> 00:15:27,199
recommend

00:15:25,360 --> 00:15:29,199
a horizontal structure we like to think

00:15:27,199 --> 00:15:30,480
of database think of inject state kind

00:15:29,199 --> 00:15:31,839
of like a database where you

00:15:30,480 --> 00:15:33,600
structure everything with multiple

00:15:31,839 --> 00:15:35,120
tables within that same database

00:15:33,600 --> 00:15:37,040
that it makes it easier to select and

00:15:35,120 --> 00:15:39,360
compose data together

00:15:37,040 --> 00:15:40,560
using rules like selectors that'd be my

00:15:39,360 --> 00:15:41,920
recommendation horizontal versus

00:15:40,560 --> 00:15:45,279
vertical

00:15:41,920 --> 00:15:47,360
okay mike any sort of plans to bring

00:15:45,279 --> 00:15:49,839
some sort of local component state to

00:15:47,360 --> 00:15:51,920
angular natively

00:15:49,839 --> 00:15:54,399
yes that is something we will have to

00:15:51,920 --> 00:15:56,240
tackle as part of mgrx component

00:15:54,399 --> 00:15:58,000
there are a couple of proposals out

00:15:56,240 --> 00:15:59,199
within the team that we're discussing

00:15:58,000 --> 00:16:01,440
right now

00:15:59,199 --> 00:16:02,959
when we do that they will it will be a

00:16:01,440 --> 00:16:04,320
state management solution

00:16:02,959 --> 00:16:06,320
or component state that will live

00:16:04,320 --> 00:16:07,680
completely independently of our state

00:16:06,320 --> 00:16:09,680
management libraries

00:16:07,680 --> 00:16:10,959
so stay tuned for that um we'll have

00:16:09,680 --> 00:16:12,959
more things to say about it soon

00:16:10,959 --> 00:16:14,000
i think the question and maybe you're

00:16:12,959 --> 00:16:16,399
answering this is

00:16:14,000 --> 00:16:18,160
they want to know if i don't want to use

00:16:16,399 --> 00:16:19,920
ngrx

00:16:18,160 --> 00:16:21,040
is angular going to provide something by

00:16:19,920 --> 00:16:22,560
default as well i think that's what

00:16:21,040 --> 00:16:24,399
they're asking

00:16:22,560 --> 00:16:26,399
oh gotcha is angular going to provide

00:16:24,399 --> 00:16:27,360
something natively for local component

00:16:26,399 --> 00:16:29,680
state

00:16:27,360 --> 00:16:31,360
um i don't know there have been um

00:16:29,680 --> 00:16:32,480
comments about this before if you've not

00:16:31,360 --> 00:16:34,560
seen mishko's

00:16:32,480 --> 00:16:35,680
uh talk from last ng conf yeah they wrap

00:16:34,560 --> 00:16:37,440
those into

00:16:35,680 --> 00:16:39,440
some of this i had to go watch that

00:16:37,440 --> 00:16:41,040
video but so okay

00:16:39,440 --> 00:16:42,800
do you have any more knowledge about

00:16:41,040 --> 00:16:43,839
that happening or are you kind of like i

00:16:42,800 --> 00:16:45,440
don't know

00:16:43,839 --> 00:16:47,519
yeah i really don't know okay i know

00:16:45,440 --> 00:16:48,720
something we're going to tackle on ngrx

00:16:47,519 --> 00:16:51,600
side as well but i'm not sure about the

00:16:48,720 --> 00:16:53,600
angular native implementation okay cool

00:16:51,600 --> 00:16:57,040
uh where can we get more examples of

00:16:53,600 --> 00:16:59,279
ngrx data state management

00:16:57,040 --> 00:17:01,440
uh reach out to ward bell on twitter

00:16:59,279 --> 00:17:02,880
he's sort of the mastermind behind ngrx

00:17:01,440 --> 00:17:04,559
data and he has

00:17:02,880 --> 00:17:06,880
the most experience by far he's using it

00:17:04,559 --> 00:17:08,720
in a very very large application

00:17:06,880 --> 00:17:11,760
it's a really good code sample examples

00:17:08,720 --> 00:17:12,959
okay all right

00:17:11,760 --> 00:17:16,839
i'm going to ask this last one then

00:17:12,959 --> 00:17:20,480
we're done this one's for ben

00:17:16,839 --> 00:17:23,520
um it's kind of a hard one

00:17:20,480 --> 00:17:26,000
so one of the barriers of entry

00:17:23,520 --> 00:17:27,360
for people who are learning angular is

00:17:26,000 --> 00:17:28,880
rxjs

00:17:27,360 --> 00:17:30,480
right there's several but one of them is

00:17:28,880 --> 00:17:34,960
rxjs sure

00:17:30,480 --> 00:17:39,120
um how do you think uh what do you think

00:17:34,960 --> 00:17:40,960
about how to make that barrier lower uh

00:17:39,120 --> 00:17:42,640
i think there probably needs to be more

00:17:40,960 --> 00:17:44,160
guidance to i mean

00:17:42,640 --> 00:17:45,760
just use like a promise if you find it

00:17:44,160 --> 00:17:47,440
that confusing just use it like a

00:17:45,760 --> 00:17:49,200
promise

00:17:47,440 --> 00:17:50,720
you can subscribe to it and get the

00:17:49,200 --> 00:17:51,440
value out of it and do whatever you want

00:17:50,720 --> 00:17:53,200
with it and

00:17:51,440 --> 00:17:54,720
if you it's particularly if you're only

00:17:53,200 --> 00:17:58,559
dealing with http

00:17:54,720 --> 00:18:00,480
if you don't unsubscribe is that great

00:17:58,559 --> 00:18:01,919
no it's it's not great i mean you're

00:18:00,480 --> 00:18:02,960
going to be eating resources that you

00:18:01,919 --> 00:18:04,080
didn't want to eat but

00:18:02,960 --> 00:18:06,320
you're in the same place you would have

00:18:04,080 --> 00:18:09,120
been if you were using promises and

00:18:06,320 --> 00:18:09,840
the difference is you realize it now but

00:18:09,120 --> 00:18:12,240
um

00:18:09,840 --> 00:18:14,160
at the end of the day it's if it's if

00:18:12,240 --> 00:18:15,919
it's truly that hard for you don't worry

00:18:14,160 --> 00:18:17,039
about operators just get your observable

00:18:15,919 --> 00:18:18,320
subscribe to it and do a bunch of

00:18:17,039 --> 00:18:20,000
imperative code

00:18:18,320 --> 00:18:21,679
uh and eventually hopefully somebody

00:18:20,000 --> 00:18:23,919
comes along and helps you

00:18:21,679 --> 00:18:25,520
learn rxcs or you learn more and you

00:18:23,919 --> 00:18:26,080
realize like oh i could have done these

00:18:25,520 --> 00:18:27,840
things

00:18:26,080 --> 00:18:30,000
more tersely with these operators or i

00:18:27,840 --> 00:18:31,760
could have done them uh with better

00:18:30,000 --> 00:18:33,120
uh memory guarantees with these

00:18:31,760 --> 00:18:34,559
operators and the

00:18:33,120 --> 00:18:36,799
inherent unsubscription and all these

00:18:34,559 --> 00:18:40,320
other things but like

00:18:36,799 --> 00:18:42,480
if it's super hard for you just get the

00:18:40,320 --> 00:18:44,480
observable and subscribe to it it's okay

00:18:42,480 --> 00:18:46,160
i'm not going to come to your house and

00:18:44,480 --> 00:18:48,400
berate you for

00:18:46,160 --> 00:18:50,160
just subscribing and never unsubscribing

00:18:48,400 --> 00:18:52,720
or not using operators

00:18:50,160 --> 00:18:54,080
um if anyone ever does berate you for

00:18:52,720 --> 00:18:54,880
that you can send them to me and i'll be

00:18:54,080 --> 00:18:58,559
right there

00:18:54,880 --> 00:18:59,760
yes yeah so one of the one of the cool

00:18:58,559 --> 00:19:04,400
things that

00:18:59,760 --> 00:19:07,360
at rxjs live was jay phelps

00:19:04,400 --> 00:19:09,120
he said hey we got to stop shaming

00:19:07,360 --> 00:19:12,160
people in the community

00:19:09,120 --> 00:19:13,039
for not being as advanced with rxjs as

00:19:12,160 --> 00:19:15,280
maybe we are

00:19:13,039 --> 00:19:17,120
and yeah i think that's important you

00:19:15,280 --> 00:19:18,640
know just learn it the same way the rest

00:19:17,120 --> 00:19:20,160
of us learned it piece by piece

00:19:18,640 --> 00:19:21,760
make all the same mistakes it's fine

00:19:20,160 --> 00:19:24,799
right

00:19:21,760 --> 00:19:27,919
right right it's not um

00:19:24,799 --> 00:19:30,320
like there's no there's no rxjs way to

00:19:27,919 --> 00:19:32,240
do things like i don't want

00:19:30,320 --> 00:19:33,760
i mean there's you know there's the

00:19:32,240 --> 00:19:36,640
functional reactive programming

00:19:33,760 --> 00:19:37,760
uh like academia crowd and then there's

00:19:36,640 --> 00:19:38,480
the rest of us that are just getting our

00:19:37,760 --> 00:19:41,919
jobs done

00:19:38,480 --> 00:19:42,799
and i i cater to the rest of us like

00:19:41,919 --> 00:19:44,240
it's

00:19:42,799 --> 00:19:46,000
it's very very important to me that

00:19:44,240 --> 00:19:46,720
everyone treats each other with respect

00:19:46,000 --> 00:19:48,080
in the community

00:19:46,720 --> 00:19:50,000
and it's also important to me that

00:19:48,080 --> 00:19:52,559
beginners feel okay with doing what they

00:19:50,000 --> 00:19:55,200
need to do to get their job done um

00:19:52,559 --> 00:19:56,400
it's fine if you you've got a swiss army

00:19:55,200 --> 00:19:57,760
knife and all you need to do is use it

00:19:56,400 --> 00:19:59,840
to bang in a nail that's

00:19:57,760 --> 00:20:01,840
banging the damn nail it's okay like you

00:19:59,840 --> 00:20:02,240
don't need to find exactly the right

00:20:01,840 --> 00:20:04,000
tool

00:20:02,240 --> 00:20:05,679
out of you know 70 tools on your swiss

00:20:04,000 --> 00:20:07,280
army knife in the nail

00:20:05,679 --> 00:20:10,159
you just need to bang the nail in that's

00:20:07,280 --> 00:20:11,679
cool that's fine thanks man

00:20:10,159 --> 00:20:14,559
dave by the way i just barely noticed

00:20:11,679 --> 00:20:14,559
your shirt great job

00:20:14,640 --> 00:20:18,559
oh this i've had this on the whole time

00:20:16,480 --> 00:20:18,960
oh yeah i know i just barely noticed my

00:20:18,559 --> 00:20:22,559
bad

00:20:18,960 --> 00:20:23,600
my bad all right okay gentlemen

00:20:22,559 --> 00:20:27,039
appreciate your time

00:20:23,600 --> 00:20:29,840
i know this was hard to focus on

00:20:27,039 --> 00:20:31,360
preparing talks and and and whatnot in

00:20:29,840 --> 00:20:33,039
like light of what's going on so we

00:20:31,360 --> 00:20:34,799
really really appreciate your education

00:20:33,039 --> 00:20:49,840
the community and coming today

00:20:34,799 --> 00:20:49,840
and presenting these messages

00:20:50,559 --> 00:20:52,640

YouTube URL: https://www.youtube.com/watch?v=s7BxCijKrRQ


