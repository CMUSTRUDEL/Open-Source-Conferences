Title: Deploying Secure Angular Apps that Scale | John Papa | EnterpriseNG 2020 #ngconf
Publication date: 2021-05-11
Playlist: EnterpriseNG 2020: Presentations
Description: 
	You’ve built an app and you want it to scale. Do you want CI/CD, custom domains, SSL certificates, APIs, global scale of your static assets, authentication, and authorization? And whether your company uses Svelte, Vue, React, Angular or something else entirely, you’ll learn how to build a static web app on Azure and go from GitHub repo to global scale.

Here are some of the topics you’ll learn about:

🔒 SSL & Custom domains
🔑 Authentication/Authorization
⚙️ Automated build/deploy w/ Github Actions
👓 Preview URLs for staging
🌐 Global distribution
⚡️ APIs powered by Azure Functions

Learn the best ways to build reliable web applications, write quality code, choose scalable architectures, and create effective automated tests at the Reliable Web Summit this August 26-27, 2021. Powered by the team at ng-conf.
Get your ticket 👉 https://reliablewebsummit.com/

ng-conf is a multi-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1000's of developers from across the globe join together to attend talks and workshops by the Angular team and other community experts.

Follow us on twitter https://twitter.com/ngconf​ 
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:00,120 --> 00:00:04,450
[Music]

00:00:11,220 --> 00:00:14,339
[Music]

00:00:16,960 --> 00:00:20,640
welcome

00:00:17,840 --> 00:00:21,039
we build and deploy web apps for living

00:00:20,640 --> 00:00:22,880
but

00:00:21,039 --> 00:00:24,560
getting your app to the web is only the

00:00:22,880 --> 00:00:26,560
first step

00:00:24,560 --> 00:00:27,680
your business needs your app to be fast

00:00:26,560 --> 00:00:30,720
secure scale

00:00:27,680 --> 00:00:31,920
and continuously deploy but where do we

00:00:30,720 --> 00:00:34,160
begin

00:00:31,920 --> 00:00:35,200
i'm john papa and let's explore together

00:00:34,160 --> 00:00:38,719
how we can deploy

00:00:35,200 --> 00:00:40,160
secure apps that scale

00:00:38,719 --> 00:00:42,320
let's start with a story that many of

00:00:40,160 --> 00:00:43,840
you familiar with you've built an app

00:00:42,320 --> 00:00:45,360
and that app connects people who need

00:00:43,840 --> 00:00:46,239
groceries with those who can provide

00:00:45,360 --> 00:00:48,640
them

00:00:46,239 --> 00:00:50,000
millions of people could use this now

00:00:48,640 --> 00:00:52,160
let's think about what you need to get

00:00:50,000 --> 00:00:54,399
it to your users

00:00:52,160 --> 00:00:56,239
you wrote your code and you probably

00:00:54,399 --> 00:00:58,079
pushed that up to github

00:00:56,239 --> 00:00:59,280
so you've got it in source control and

00:00:58,079 --> 00:01:02,079
now you intend

00:00:59,280 --> 00:01:02,480
to set up ci cd continuous integration

00:01:02,079 --> 00:01:05,840
and

00:01:02,480 --> 00:01:07,680
deployment and you need your apis

00:01:05,840 --> 00:01:09,760
to get to your data but will they be

00:01:07,680 --> 00:01:11,520
served on another server

00:01:09,760 --> 00:01:13,200
and then if they are how do you connect

00:01:11,520 --> 00:01:16,320
those and route your requests

00:01:13,200 --> 00:01:17,840
from your app to your api securely

00:01:16,320 --> 00:01:19,520
maybe you need something like reverse

00:01:17,840 --> 00:01:21,439
proxy or cores

00:01:19,520 --> 00:01:23,600
and speaking of security you definitely

00:01:21,439 --> 00:01:25,439
want an ssl certificate and a custom

00:01:23,600 --> 00:01:27,439
domain

00:01:25,439 --> 00:01:29,759
and your users must authenticate so you

00:01:27,439 --> 00:01:31,360
know they are who they say they are

00:01:29,759 --> 00:01:33,040
and of course you might need to define

00:01:31,360 --> 00:01:34,720
roles for authorization so

00:01:33,040 --> 00:01:36,400
they know what they can do and what they

00:01:34,720 --> 00:01:38,000
can't do

00:01:36,400 --> 00:01:39,680
and ultimately you need your app to

00:01:38,000 --> 00:01:42,240
reach everyone around the world at

00:01:39,680 --> 00:01:45,200
global scale

00:01:42,240 --> 00:01:46,640
wow you just want to publish your app

00:01:45,200 --> 00:01:48,560
now here we might be using something

00:01:46,640 --> 00:01:49,759
like angular but there's other choices

00:01:48,560 --> 00:01:52,799
as well

00:01:49,759 --> 00:01:55,439
we've got react and svelt and also

00:01:52,799 --> 00:01:56,240
view these tools have fundamentally

00:01:55,439 --> 00:01:58,399
changed

00:01:56,240 --> 00:02:00,000
the way we build web applications

00:01:58,399 --> 00:02:01,759
instead of a server runtime that makes

00:02:00,000 --> 00:02:02,799
database queries and builds pages

00:02:01,759 --> 00:02:04,560
dynamically

00:02:02,799 --> 00:02:06,159
when they're requested these new

00:02:04,560 --> 00:02:08,479
javascript powered applications run

00:02:06,159 --> 00:02:09,920
entirely in the browser we've moved the

00:02:08,479 --> 00:02:11,680
application responsibilities from the

00:02:09,920 --> 00:02:14,319
server entirely into the client

00:02:11,680 --> 00:02:15,360
so now there's a build process required

00:02:14,319 --> 00:02:16,640
and all of your code for your

00:02:15,360 --> 00:02:18,959
application has to be built

00:02:16,640 --> 00:02:20,239
before it's deployed and what you get

00:02:18,959 --> 00:02:21,120
out the other end of that is a build

00:02:20,239 --> 00:02:22,879
process

00:02:21,120 --> 00:02:24,959
isn't just some static files we call

00:02:22,879 --> 00:02:26,720
them stata because they don't change

00:02:24,959 --> 00:02:30,319
they don't require a web server to build

00:02:26,720 --> 00:02:31,519
them dynamically like asp.net or php etc

00:02:30,319 --> 00:02:34,160
in fact we don't really need much of a

00:02:31,519 --> 00:02:35,040
web server at all all we need is return

00:02:34,160 --> 00:02:37,680
these files

00:02:35,040 --> 00:02:38,640
just as they are our html javascript and

00:02:37,680 --> 00:02:40,160
css

00:02:38,640 --> 00:02:41,680
it's almost a throwback to a time when

00:02:40,160 --> 00:02:43,840
the web wasn't full of dynamic

00:02:41,680 --> 00:02:45,920
applications rendered by servers

00:02:43,840 --> 00:02:47,599
so again how do we get there to deploy

00:02:45,920 --> 00:02:49,920
our angular applications

00:02:47,599 --> 00:02:50,720
these are just html css and javascript

00:02:49,920 --> 00:02:52,400
after all

00:02:50,720 --> 00:02:53,840
we need a fundamentally new kind of

00:02:52,400 --> 00:02:56,959
cloud service

00:02:53,840 --> 00:02:57,440
for these applications so what do we

00:02:56,959 --> 00:02:58,959
need

00:02:57,440 --> 00:03:00,720
we need to be able to build and host our

00:02:58,959 --> 00:03:02,560
static web apps

00:03:00,720 --> 00:03:04,560
set up security with ssl and

00:03:02,560 --> 00:03:06,959
authentication and authorization

00:03:04,560 --> 00:03:08,959
be able to handle our apis possibly

00:03:06,959 --> 00:03:11,840
powered by serverless technology

00:03:08,959 --> 00:03:13,120
and then set up a pipeline for ci and cd

00:03:11,840 --> 00:03:16,640
possibly using something like

00:03:13,120 --> 00:03:18,879
github actions so how does this work

00:03:16,640 --> 00:03:20,239
well you create your angular or react or

00:03:18,879 --> 00:03:22,640
svelte website

00:03:20,239 --> 00:03:24,000
and you end up with your html css and

00:03:22,640 --> 00:03:26,159
javascript

00:03:24,000 --> 00:03:28,159
if you want an api you can create an api

00:03:26,159 --> 00:03:30,000
folder in your project and add in some

00:03:28,159 --> 00:03:32,640
azure function endpoints

00:03:30,000 --> 00:03:34,480
so you push those up to github it'll

00:03:32,640 --> 00:03:36,400
automatically kick off an action

00:03:34,480 --> 00:03:37,760
inside a github to build your project

00:03:36,400 --> 00:03:39,440
and deploy it

00:03:37,760 --> 00:03:40,799
and then geo-replicate it to regions

00:03:39,440 --> 00:03:42,640
around the world

00:03:40,799 --> 00:03:44,959
and out comes our html and javascripts

00:03:42,640 --> 00:03:47,360
in css that's our static content

00:03:44,959 --> 00:03:48,480
and our apis if we want to have those

00:03:47,360 --> 00:03:49,920
for the application

00:03:48,480 --> 00:03:52,159
and collectively these are known as

00:03:49,920 --> 00:03:54,720
static web apps and they can reach all

00:03:52,159 --> 00:03:56,000
the users that we need to

00:03:54,720 --> 00:03:58,000
now let's see how to publish your

00:03:56,000 --> 00:04:00,720
application and then we're going to

00:03:58,000 --> 00:04:01,439
publish the api and then we'll come back

00:04:00,720 --> 00:04:04,080
and we'll handle

00:04:01,439 --> 00:04:06,000
authentication and authorization but

00:04:04,080 --> 00:04:09,360
let's start the same place you do

00:04:06,000 --> 00:04:11,280
with your code up on github we'll take a

00:04:09,360 --> 00:04:12,400
look at the repository called hello

00:04:11,280 --> 00:04:14,080
build

00:04:12,400 --> 00:04:16,079
and here i've got an application that i

00:04:14,080 --> 00:04:17,759
wrote in angular reacts belt

00:04:16,079 --> 00:04:19,280
and view we're going to take a close

00:04:17,759 --> 00:04:20,959
look at this veldt version of the app we

00:04:19,280 --> 00:04:22,960
want to deploy that to azure

00:04:20,959 --> 00:04:25,040
so we'll go to the portal and we'll find

00:04:22,960 --> 00:04:26,840
static web apps to preview

00:04:25,040 --> 00:04:28,960
in the upper left we'll click on the add

00:04:26,840 --> 00:04:30,240
button now here i want to choose

00:04:28,960 --> 00:04:32,880
a resource group that i've already

00:04:30,240 --> 00:04:34,560
created called papa hello build

00:04:32,880 --> 00:04:36,080
and then i'm going to type the name in

00:04:34,560 --> 00:04:36,880
that i want to use which would be hello

00:04:36,080 --> 00:04:40,320
build

00:04:36,880 --> 00:04:42,000
and then my region will be west us2

00:04:40,320 --> 00:04:44,320
we authenticate with github so then we

00:04:42,000 --> 00:04:46,080
can communicate with our repository

00:04:44,320 --> 00:04:48,400
we'll choose the organization of john

00:04:46,080 --> 00:04:49,040
papa and then the repository is going to

00:04:48,400 --> 00:04:52,000
be

00:04:49,040 --> 00:04:54,160
hello build and then we'll choose the

00:04:52,000 --> 00:04:55,440
master branch

00:04:54,160 --> 00:04:57,919
then i'm going to click on the next

00:04:55,440 --> 00:04:59,840
build button now here on this page

00:04:57,919 --> 00:05:02,479
is all the build steps we need to enter

00:04:59,840 --> 00:05:03,840
so it knows how to build our application

00:05:02,479 --> 00:05:06,000
we have to tell it where is the app

00:05:03,840 --> 00:05:08,960
located so the app is in

00:05:06,000 --> 00:05:09,520
a folder called svelt app we just saw

00:05:08,960 --> 00:05:11,120
that

00:05:09,520 --> 00:05:14,080
and then our functions are inside of a

00:05:11,120 --> 00:05:16,479
folder called functions that's our api

00:05:14,080 --> 00:05:17,440
this final field is where does the svelt

00:05:16,479 --> 00:05:19,440
app put

00:05:17,440 --> 00:05:21,199
its built assets so after svelte

00:05:19,440 --> 00:05:23,919
compiles and puts all the stuff

00:05:21,199 --> 00:05:25,280
inside javascript and css files where

00:05:23,919 --> 00:05:26,639
does that get located

00:05:25,280 --> 00:05:28,720
that's going to be in a folder called

00:05:26,639 --> 00:05:31,280
public so we'll type that in

00:05:28,720 --> 00:05:32,240
and then click on view and create now

00:05:31,280 --> 00:05:33,919
here we can review

00:05:32,240 --> 00:05:35,680
all the settings that we just chose and

00:05:33,919 --> 00:05:36,320
then we'll click the blue create button

00:05:35,680 --> 00:05:38,880
in the bottom

00:05:36,320 --> 00:05:41,520
left now azure is going out there to

00:05:38,880 --> 00:05:43,199
deploy all the resources that we need

00:05:41,520 --> 00:05:44,560
and once it's ready it'll let us know

00:05:43,199 --> 00:05:46,880
that we can go look at this

00:05:44,560 --> 00:05:47,759
application and then it's going to start

00:05:46,880 --> 00:05:50,800
building

00:05:47,759 --> 00:05:52,160
our application using github actions

00:05:50,800 --> 00:05:53,919
now that we see the go to resource

00:05:52,160 --> 00:05:55,680
button we can click on that

00:05:53,919 --> 00:05:56,960
and up here on this screen we can see

00:05:55,680 --> 00:05:58,639
the overview

00:05:56,960 --> 00:06:00,319
on the top of the blue bar it says we

00:05:58,639 --> 00:06:01,520
can click here to check the status of

00:06:00,319 --> 00:06:04,319
our github run

00:06:01,520 --> 00:06:07,039
we'll do that right now it flips over to

00:06:04,319 --> 00:06:09,360
our repository in the actions tab

00:06:07,039 --> 00:06:11,120
now you can see there's a yellow circle

00:06:09,360 --> 00:06:12,240
that means that it's running our action

00:06:11,120 --> 00:06:15,199
we can click on that to see what's

00:06:12,240 --> 00:06:16,639
happening so our action is queued up

00:06:15,199 --> 00:06:18,240
and it also lets us see the workflow

00:06:16,639 --> 00:06:19,680
file this is the first time we've seen

00:06:18,240 --> 00:06:20,800
this because it just got added to our

00:06:19,680 --> 00:06:22,400
app

00:06:20,800 --> 00:06:23,840
now the workflow file if i go down to

00:06:22,400 --> 00:06:26,400
line 27

00:06:23,840 --> 00:06:27,039
we can see it says app location is svelt

00:06:26,400 --> 00:06:29,600
app

00:06:27,039 --> 00:06:30,560
api is functions and the artifact is

00:06:29,600 --> 00:06:32,319
public

00:06:30,560 --> 00:06:34,800
those are the same three settings that

00:06:32,319 --> 00:06:36,160
we just set in azure so those were used

00:06:34,800 --> 00:06:38,000
to fill in the workflow file so it could

00:06:36,160 --> 00:06:39,039
do this build for us

00:06:38,000 --> 00:06:40,960
now let's go take a look we've got a

00:06:39,039 --> 00:06:41,919
svelt app folder and a functions folder

00:06:40,960 --> 00:06:44,720
right

00:06:41,919 --> 00:06:46,319
so back in the code for the repository

00:06:44,720 --> 00:06:47,440
we can see we've got svelte app right

00:06:46,319 --> 00:06:49,440
here

00:06:47,440 --> 00:06:50,960
and there's our public folder and if we

00:06:49,440 --> 00:06:53,440
go back out to the root

00:06:50,960 --> 00:06:54,880
we should have a functions folder uh oh

00:06:53,440 --> 00:06:55,680
we don't have a functions folder it's

00:06:54,880 --> 00:06:57,840
actually called

00:06:55,680 --> 00:06:59,039
api the nice thing about this is the

00:06:57,840 --> 00:07:01,360
github action

00:06:59,039 --> 00:07:03,360
is gonna run and if it can't find the

00:07:01,360 --> 00:07:06,400
api it just won't deploy it

00:07:03,360 --> 00:07:07,759
it'll still build the application so

00:07:06,400 --> 00:07:09,759
right now we can see that the build

00:07:07,759 --> 00:07:10,240
worked we can click on the action and on

00:07:09,759 --> 00:07:12,720
the left

00:07:10,240 --> 00:07:14,960
click on build and deploy job open up

00:07:12,720 --> 00:07:17,360
the build and deploy task here

00:07:14,960 --> 00:07:18,479
we scroll to the bottom and we can see

00:07:17,360 --> 00:07:21,599
everything is successful

00:07:18,479 --> 00:07:24,160
and up here at lemontree that's our url

00:07:21,599 --> 00:07:24,800
we can go see our app we can also go

00:07:24,160 --> 00:07:27,280
back to

00:07:24,800 --> 00:07:30,080
our portal and we can see here that the

00:07:27,280 --> 00:07:31,599
url is listed in the upper right

00:07:30,080 --> 00:07:33,360
we can click on lemon tree and the

00:07:31,599 --> 00:07:35,120
application should come up

00:07:33,360 --> 00:07:36,720
now we don't have data so i would expect

00:07:35,120 --> 00:07:38,400
that the list and the discounts don't

00:07:36,720 --> 00:07:40,160
show anything because we didn't connect

00:07:38,400 --> 00:07:41,280
the functions the proper way

00:07:40,160 --> 00:07:44,720
but we're going to fix that in the

00:07:41,280 --> 00:07:46,960
workflow file but did we get our ssl

00:07:44,720 --> 00:07:48,319
yes we did up here in the upper left we

00:07:46,960 --> 00:07:50,000
can click and see that we have a

00:07:48,319 --> 00:07:51,520
secure connection and we've got a

00:07:50,000 --> 00:07:52,960
certificate

00:07:51,520 --> 00:07:55,120
what if we wanted to have a custom

00:07:52,960 --> 00:07:56,800
domain well let's look at the final

00:07:55,120 --> 00:08:00,560
version of this app which i've deployed

00:07:56,800 --> 00:08:02,639
at www.shopithome.dev

00:08:00,560 --> 00:08:04,560
here we can see we've got our security

00:08:02,639 --> 00:08:05,759
with ssl certificates all set up with

00:08:04,560 --> 00:08:08,080
our custom domain

00:08:05,759 --> 00:08:10,080
how did i do that back in the azure

00:08:08,080 --> 00:08:11,680
portal for the shop at home app

00:08:10,080 --> 00:08:13,120
we can see on the left there's a custom

00:08:11,680 --> 00:08:15,599
domains menu item

00:08:13,120 --> 00:08:16,639
and here it shows shop at home.dev was

00:08:15,599 --> 00:08:17,919
selected

00:08:16,639 --> 00:08:20,319
so how could we do that for our

00:08:17,919 --> 00:08:22,720
application coming back to hello build

00:08:20,319 --> 00:08:25,280
we can click on custom domains

00:08:22,720 --> 00:08:26,960
we could choose add then it tells us

00:08:25,280 --> 00:08:28,080
what we have to configure with our dns

00:08:26,960 --> 00:08:29,840
provider

00:08:28,080 --> 00:08:31,759
and then second step here is once you've

00:08:29,840 --> 00:08:32,560
purchased a custom domain you enter the

00:08:31,759 --> 00:08:35,039
domain here

00:08:32,560 --> 00:08:35,919
validate it and hit add so going back to

00:08:35,039 --> 00:08:38,240
our application

00:08:35,919 --> 00:08:40,080
we know we have to fix the api but

00:08:38,240 --> 00:08:42,159
there's one other thing we have to fix

00:08:40,080 --> 00:08:43,680
notice that i'm on the discounts page

00:08:42,159 --> 00:08:45,920
and up here in the url

00:08:43,680 --> 00:08:46,959
it says slash discounts well there is no

00:08:45,920 --> 00:08:50,160
server side file

00:08:46,959 --> 00:08:51,279
called discounts so if i refresh i would

00:08:50,160 --> 00:08:52,480
expect

00:08:51,279 --> 00:08:54,720
that it would actually still show the

00:08:52,480 --> 00:08:56,480
app and then load the svelt

00:08:54,720 --> 00:08:58,320
routes and then go back to the discounts

00:08:56,480 --> 00:09:00,000
page but it's not doing that it's

00:08:58,320 --> 00:09:01,839
telling me i've got a 404

00:09:00,000 --> 00:09:03,519
well we can fix that too because there's

00:09:01,839 --> 00:09:04,800
a missing fallback route

00:09:03,519 --> 00:09:06,959
which a lot of these client-side

00:09:04,800 --> 00:09:10,000
javascript frameworks need so let's go

00:09:06,959 --> 00:09:12,080
to vs code and look at our application

00:09:10,000 --> 00:09:13,360
now here's the application before we had

00:09:12,080 --> 00:09:16,160
the workflow file

00:09:13,360 --> 00:09:17,839
now i have to pull from github why

00:09:16,160 --> 00:09:18,720
because i want to get that workflow file

00:09:17,839 --> 00:09:21,360
that was added

00:09:18,720 --> 00:09:23,360
it's in the github workflows folder and

00:09:21,360 --> 00:09:25,680
we can see it's right here

00:09:23,360 --> 00:09:26,720
and we go scroll down to line 27 and we

00:09:25,680 --> 00:09:29,200
can see it says

00:09:26,720 --> 00:09:29,839
felt app is the location for the app and

00:09:29,200 --> 00:09:31,680
functions

00:09:29,839 --> 00:09:33,200
is not the name of the folder that we

00:09:31,680 --> 00:09:34,320
have our api in so i'm going to change

00:09:33,200 --> 00:09:37,360
that to api

00:09:34,320 --> 00:09:38,640
so line 28 now matches what we can see

00:09:37,360 --> 00:09:40,959
over here on the left

00:09:38,640 --> 00:09:42,240
for the api now i want to push these

00:09:40,959 --> 00:09:44,080
changes to github

00:09:42,240 --> 00:09:45,120
and build them and deploy them but i

00:09:44,080 --> 00:09:45,839
don't want to overwrite what's in

00:09:45,120 --> 00:09:48,399
production

00:09:45,839 --> 00:09:49,519
so what i want to do is create a new

00:09:48,399 --> 00:09:52,320
branch

00:09:49,519 --> 00:09:53,839
and we'll call that branch my api so the

00:09:52,320 --> 00:09:54,560
change we just made is in this new

00:09:53,839 --> 00:09:56,959
branch

00:09:54,560 --> 00:09:58,720
we want to add one other change remember

00:09:56,959 --> 00:10:00,959
we want that fallback route

00:09:58,720 --> 00:10:03,040
so in the svelt app remember everything

00:10:00,959 --> 00:10:04,880
gets deployed to the public folder

00:10:03,040 --> 00:10:07,600
we can right click in there and we can

00:10:04,880 --> 00:10:10,240
add a file called routes.json

00:10:07,600 --> 00:10:11,440
routes.json is a special file that azure

00:10:10,240 --> 00:10:13,680
static web apps

00:10:11,440 --> 00:10:15,360
looks for so we can control all of our

00:10:13,680 --> 00:10:16,640
server side routes

00:10:15,360 --> 00:10:18,560
in this case the route we want to

00:10:16,640 --> 00:10:20,399
control is if there is an

00:10:18,560 --> 00:10:22,399
unknown file that's being requested on

00:10:20,399 --> 00:10:23,839
the server like we just did on a refresh

00:10:22,399 --> 00:10:25,839
of our client-side app

00:10:23,839 --> 00:10:28,160
for discounts it should automatically

00:10:25,839 --> 00:10:29,680
re-route that to the index.html

00:10:28,160 --> 00:10:31,680
so all we have to do is tell this file

00:10:29,680 --> 00:10:33,839
to do that

00:10:31,680 --> 00:10:34,800
so what i'm going to do is add a routes

00:10:33,839 --> 00:10:36,480
array

00:10:34,800 --> 00:10:38,480
and in here on line 4 i'm saying if

00:10:36,480 --> 00:10:40,800
there's any route that's unknown

00:10:38,480 --> 00:10:42,160
serve index.html because that's the page

00:10:40,800 --> 00:10:44,480
that's going to serve the whole app

00:10:42,160 --> 00:10:45,839
and a status code of 200. now that all

00:10:44,480 --> 00:10:46,560
that's there let's go ahead and commit

00:10:45,839 --> 00:10:50,079
these changes

00:10:46,560 --> 00:10:52,240
we'll say fallback route and api

00:10:50,079 --> 00:10:53,920
and we'll push this to github it's going

00:10:52,240 --> 00:10:55,040
to ask me if there's an upstream branch

00:10:53,920 --> 00:10:57,920
would you like to publish it

00:10:55,040 --> 00:10:58,320
i would like to do that yes now let's go

00:10:57,920 --> 00:11:02,320
back

00:10:58,320 --> 00:11:04,320
into the browser back up onto github

00:11:02,320 --> 00:11:05,760
and we should be able to see under pull

00:11:04,320 --> 00:11:07,600
requests

00:11:05,760 --> 00:11:09,680
that we could create a new one for my

00:11:07,600 --> 00:11:12,560
api let's do that

00:11:09,680 --> 00:11:14,160
so create the pull request and then in a

00:11:12,560 --> 00:11:16,560
moment what's going to happen is now

00:11:14,160 --> 00:11:18,800
that we've got this pull request created

00:11:16,560 --> 00:11:20,079
the action is going to kick in and see

00:11:18,800 --> 00:11:21,920
that okay

00:11:20,079 --> 00:11:24,399
you've got a new branch that you made a

00:11:21,920 --> 00:11:24,959
pull request with let's go create a new

00:11:24,399 --> 00:11:27,600
build

00:11:24,959 --> 00:11:29,120
and push it to a staging url this is

00:11:27,600 --> 00:11:29,839
really nice because we can preview the

00:11:29,120 --> 00:11:31,680
changes

00:11:29,839 --> 00:11:32,959
from our application so if we click on

00:11:31,680 --> 00:11:34,720
the details down here

00:11:32,959 --> 00:11:37,279
it'll automatically come over to the

00:11:34,720 --> 00:11:38,399
actions tab and open up the build for us

00:11:37,279 --> 00:11:39,839
so it's running it

00:11:38,399 --> 00:11:43,040
we can also get there by clicking on

00:11:39,839 --> 00:11:44,320
actions and then fallback route and api

00:11:43,040 --> 00:11:46,240
we can see here that the build and

00:11:44,320 --> 00:11:47,519
deploy job is still running so instead

00:11:46,240 --> 00:11:48,720
of waiting for this one to run

00:11:47,519 --> 00:11:50,000
let's go ahead and take a look at the

00:11:48,720 --> 00:11:51,279
production app again here's the

00:11:50,000 --> 00:11:53,760
production app that we have

00:11:51,279 --> 00:11:55,040
i have a staging url right next to it my

00:11:53,760 --> 00:11:56,720
staging url

00:11:55,040 --> 00:11:57,839
it happens to be running with view

00:11:56,720 --> 00:11:58,399
because i wanted to see what that would

00:11:57,839 --> 00:12:00,240
look like

00:11:58,399 --> 00:12:02,639
but not overwrite the production app

00:12:00,240 --> 00:12:04,639
notice here that i've got this url

00:12:02,639 --> 00:12:06,079
which is the longer name the url it's

00:12:04,639 --> 00:12:07,920
not my custom domain

00:12:06,079 --> 00:12:10,320
and it's got the number of the pr in the

00:12:07,920 --> 00:12:12,160
url and the region it was deployed to

00:12:10,320 --> 00:12:13,519
that's how you designate the staging or

00:12:12,160 --> 00:12:16,160
preview url

00:12:13,519 --> 00:12:17,839
if we flip over to its github repo we

00:12:16,160 --> 00:12:18,800
can see in the pull request itself that

00:12:17,839 --> 00:12:21,040
i made here

00:12:18,800 --> 00:12:23,120
if i click on the pull request every

00:12:21,040 --> 00:12:25,040
time the build has succeeded

00:12:23,120 --> 00:12:26,880
you're going to see a comment like this

00:12:25,040 --> 00:12:28,399
your staging site is ready

00:12:26,880 --> 00:12:30,639
so that's how you can actually get to

00:12:28,399 --> 00:12:32,399
your application in the staging url

00:12:30,639 --> 00:12:34,399
that's showing up here and that's why we

00:12:32,399 --> 00:12:35,279
have a list of data our api is now

00:12:34,399 --> 00:12:38,000
connected

00:12:35,279 --> 00:12:38,320
so we can get into that so we built the

00:12:38,000 --> 00:12:40,320
app

00:12:38,320 --> 00:12:41,839
and the api and published it to azure

00:12:40,320 --> 00:12:43,760
static web apps

00:12:41,839 --> 00:12:45,760
and what we got was an application that

00:12:43,760 --> 00:12:47,839
was deployed at global scale

00:12:45,760 --> 00:12:51,040
we got our custom domain and our ssl

00:12:47,839 --> 00:12:53,440
cert we have our azure functions for api

00:12:51,040 --> 00:12:55,120
and we made a pull request that then

00:12:53,440 --> 00:12:55,680
built the action and created a staging

00:12:55,120 --> 00:12:57,760
url

00:12:55,680 --> 00:12:59,200
so now we can keep our custom domain up

00:12:57,760 --> 00:13:00,880
there with our production site

00:12:59,200 --> 00:13:03,040
and we can have a staging url for

00:13:00,880 --> 00:13:05,440
looking at any changes we want to make

00:13:03,040 --> 00:13:08,480
now let's go set up authentication and

00:13:05,440 --> 00:13:10,480
authorization for the application

00:13:08,480 --> 00:13:13,040
we're back in vs code and we're going to

00:13:10,480 --> 00:13:15,360
establish authentication first

00:13:13,040 --> 00:13:16,560
authentication verifies you are who you

00:13:15,360 --> 00:13:18,720
say you are

00:13:16,560 --> 00:13:20,880
so let's set that up first now out of

00:13:18,720 --> 00:13:22,800
the box azure static web apps

00:13:20,880 --> 00:13:24,320
allows five different authentication

00:13:22,800 --> 00:13:26,880
providers google

00:13:24,320 --> 00:13:28,160
facebook github azure active directory

00:13:26,880 --> 00:13:30,000
and twitter

00:13:28,160 --> 00:13:32,160
now they all just work out of the box

00:13:30,000 --> 00:13:34,639
but let's say that you want to

00:13:32,160 --> 00:13:36,160
prevent people from using some of those

00:13:34,639 --> 00:13:38,320
well we can actually block some of those

00:13:36,160 --> 00:13:40,480
providers right here in the routes file

00:13:38,320 --> 00:13:42,639
so let's go ahead and block a couple of

00:13:40,480 --> 00:13:44,480
these we're going to block facebook and

00:13:42,639 --> 00:13:46,079
google just to show you how to do it

00:13:44,480 --> 00:13:47,600
here what we're saying is if you use

00:13:46,079 --> 00:13:49,680
this authentication provider it's going

00:13:47,600 --> 00:13:51,600
to return a 404

00:13:49,680 --> 00:13:53,519
simple enough so our users will be able

00:13:51,600 --> 00:13:55,519
to authenticate with twitter github or

00:13:53,519 --> 00:13:57,839
azure active directory now we want to

00:13:55,519 --> 00:13:59,360
handle authorization in our application

00:13:57,839 --> 00:14:00,880
let's say that we don't want any of the

00:13:59,360 --> 00:14:03,600
users to see the data

00:14:00,880 --> 00:14:05,440
unless they're first authenticated well

00:14:03,600 --> 00:14:06,560
we can do that by setting up some route

00:14:05,440 --> 00:14:09,120
restrictions

00:14:06,560 --> 00:14:10,639
and maybe only the users who have been

00:14:09,120 --> 00:14:12,480
logged in as preferred

00:14:10,639 --> 00:14:15,199
users or maybe there's a role call

00:14:12,480 --> 00:14:18,560
preferred will be able to edit our data

00:14:15,199 --> 00:14:20,000
so let's set these rules up here we have

00:14:18,560 --> 00:14:22,480
a route that says

00:14:20,000 --> 00:14:23,920
api discounts is available to anybody

00:14:22,480 --> 00:14:25,519
with the preferred role

00:14:23,920 --> 00:14:27,199
so you can only see the discounts if you

00:14:25,519 --> 00:14:28,880
signed up and you're in that role

00:14:27,199 --> 00:14:30,639
and then we've got routes down here in

00:14:28,880 --> 00:14:33,360
line 16 where it says

00:14:30,639 --> 00:14:34,639
anybody who hits the api x routes

00:14:33,360 --> 00:14:36,079
anything underneath that

00:14:34,639 --> 00:14:38,320
and we're going to use x for all of our

00:14:36,079 --> 00:14:40,079
editing of our list so they can't

00:14:38,320 --> 00:14:41,600
manipulate their shopping list

00:14:40,079 --> 00:14:43,120
unless they're also in the preferred

00:14:41,600 --> 00:14:44,959
role but

00:14:43,120 --> 00:14:46,880
we've got the api route down here that

00:14:44,959 --> 00:14:49,199
says any other route that they go to

00:14:46,880 --> 00:14:51,040
like looking at the shopping list all

00:14:49,199 --> 00:14:53,040
you have to do is be authenticated

00:14:51,040 --> 00:14:54,480
now everybody who logs in with any of

00:14:53,040 --> 00:14:56,959
the authentication providers is

00:14:54,480 --> 00:14:59,279
automatically in the authenticated role

00:14:56,959 --> 00:15:01,199
but we have to set up the preferred role

00:14:59,279 --> 00:15:02,560
so first what we have to do is commit

00:15:01,199 --> 00:15:05,279
our changes

00:15:02,560 --> 00:15:07,519
and we'll push these up to github and

00:15:05,279 --> 00:15:09,040
this will cause the workflow to rebuild

00:15:07,519 --> 00:15:11,600
but how would we set up one of these

00:15:09,040 --> 00:15:12,880
roles let's go back into azure and we'll

00:15:11,600 --> 00:15:15,440
take a look at this

00:15:12,880 --> 00:15:17,839
so to set up a role we can see the shop

00:15:15,440 --> 00:15:20,399
at home app that's the final version

00:15:17,839 --> 00:15:22,240
we can see role management on the left

00:15:20,399 --> 00:15:23,920
here we can see there's a couple users

00:15:22,240 --> 00:15:26,240
already inside of our roles

00:15:23,920 --> 00:15:27,920
there i am john papa associated with my

00:15:26,240 --> 00:15:30,000
github authentication provider

00:15:27,920 --> 00:15:32,399
and notice i have the preferred role

00:15:30,000 --> 00:15:34,000
right here so that will allow me to do

00:15:32,399 --> 00:15:36,000
all the things inside my application

00:15:34,000 --> 00:15:37,440
once i'm logged in as opposed to someone

00:15:36,000 --> 00:15:39,759
who's just authenticated

00:15:37,440 --> 00:15:40,639
now the way you add people is to click

00:15:39,759 --> 00:15:42,800
invite

00:15:40,639 --> 00:15:44,399
and you choose the provider and then you

00:15:42,800 --> 00:15:45,920
select their user handle

00:15:44,399 --> 00:15:48,320
and then you select the domain that they

00:15:45,920 --> 00:15:50,160
have access to could be your production

00:15:48,320 --> 00:15:51,839
or it could be your staging site

00:15:50,160 --> 00:15:54,560
you add the role right here and then

00:15:51,839 --> 00:15:56,000
give the invitation expiration and hours

00:15:54,560 --> 00:15:58,000
then you can generate that invitation

00:15:56,000 --> 00:15:59,759
and send that to your user so let's go

00:15:58,000 --> 00:16:01,440
take a look at what this does in the app

00:15:59,759 --> 00:16:03,279
in the final version of the app notice

00:16:01,440 --> 00:16:04,959
that i'm not authenticated

00:16:03,279 --> 00:16:07,199
i can't see discounts i can't see the

00:16:04,959 --> 00:16:09,199
list nothing's there

00:16:07,199 --> 00:16:10,800
now i have a link down here for facebook

00:16:09,199 --> 00:16:12,800
remember we blocked facebook

00:16:10,800 --> 00:16:14,000
so if i click on that it's going to go

00:16:12,800 --> 00:16:15,759
to a page not found

00:16:14,000 --> 00:16:18,480
and you can customize this page any way

00:16:15,759 --> 00:16:19,920
you like so let's use twitter here

00:16:18,480 --> 00:16:22,399
and if i go to twitter it's going to

00:16:19,920 --> 00:16:24,160
authenticate i am who i say i am and now

00:16:22,399 --> 00:16:26,800
i should be able to go look at the list

00:16:24,160 --> 00:16:27,839
and see my data show up and there's my

00:16:26,800 --> 00:16:30,399
shopping list

00:16:27,839 --> 00:16:31,680
but remember the discounts was only for

00:16:30,399 --> 00:16:34,639
preferred users

00:16:31,680 --> 00:16:36,000
with twitter i'm not a preferred user i

00:16:34,639 --> 00:16:38,800
don't have that authentication

00:16:36,000 --> 00:16:39,839
provider assigned that role so let's log

00:16:38,800 --> 00:16:42,160
out

00:16:39,839 --> 00:16:43,360
when i authenticate with github i am in

00:16:42,160 --> 00:16:45,120
the preferred role

00:16:43,360 --> 00:16:46,880
so i'm going to click on github and now

00:16:45,120 --> 00:16:48,560
i can see the discounts i can see the

00:16:46,880 --> 00:16:51,839
list and i could also edit

00:16:48,560 --> 00:16:51,839
or change my list as well

00:16:52,240 --> 00:16:55,839
so we added authentication and

00:16:54,000 --> 00:16:57,680
authorization to our app

00:16:55,839 --> 00:16:59,040
by establishing that through the routes

00:16:57,680 --> 00:17:01,519
json

00:16:59,040 --> 00:17:02,160
now where did we start remember we wrote

00:17:01,519 --> 00:17:03,600
an app

00:17:02,160 --> 00:17:05,280
but we had to worry about all these

00:17:03,600 --> 00:17:07,280
different concerns

00:17:05,280 --> 00:17:08,959
and having a service like azure static

00:17:07,280 --> 00:17:11,120
web apps lets us combine

00:17:08,959 --> 00:17:12,400
all those things into one service that's

00:17:11,120 --> 00:17:15,199
just easy to use

00:17:12,400 --> 00:17:16,720
so we can just focus on building apps

00:17:15,199 --> 00:17:19,439
whether you're using angular svelt

00:17:16,720 --> 00:17:20,720
reactor view it's the same process

00:17:19,439 --> 00:17:22,319
now if you want to try this out for

00:17:20,720 --> 00:17:24,959
yourself you can check out these

00:17:22,319 --> 00:17:26,799
different resources

00:17:24,959 --> 00:17:28,319
i encourage you to learn more by

00:17:26,799 --> 00:17:30,160
clicking on the link here for

00:17:28,319 --> 00:17:32,320
learn where it's a hands-on free

00:17:30,160 --> 00:17:34,000
tutorial where you can deploy any one of

00:17:32,320 --> 00:17:34,799
these applications of your chosen

00:17:34,000 --> 00:17:37,200
framework

00:17:34,799 --> 00:17:38,559
up to the cloud or you can click on the

00:17:37,200 --> 00:17:41,120
link here where you can get

00:17:38,559 --> 00:17:42,640
extensive documentation and if you're

00:17:41,120 --> 00:17:44,320
using a different framework other than

00:17:42,640 --> 00:17:46,000
the four that i'm showing here

00:17:44,320 --> 00:17:48,240
well if you click on this link for

00:17:46,000 --> 00:17:49,760
github john papa hello worlds

00:17:48,240 --> 00:17:51,280
you'll see over 30 different web

00:17:49,760 --> 00:17:52,960
frameworks and you can choose one of

00:17:51,280 --> 00:17:54,880
those and then deploy it

00:17:52,960 --> 00:17:56,880
to static web apps so if you're trying

00:17:54,880 --> 00:17:58,960
to deploy web applications and get

00:17:56,880 --> 00:18:00,640
all these enterprise features give it a

00:17:58,960 --> 00:18:04,880
try right here

00:18:00,640 --> 00:18:04,880

YouTube URL: https://www.youtube.com/watch?v=VUvCldSO2GM


