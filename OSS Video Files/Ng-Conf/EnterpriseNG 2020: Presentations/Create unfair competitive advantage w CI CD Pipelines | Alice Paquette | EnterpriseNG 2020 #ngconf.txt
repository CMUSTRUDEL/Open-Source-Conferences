Title: Create unfair competitive advantage w CI CD Pipelines | Alice Paquette | EnterpriseNG 2020 #ngconf
Publication date: 2021-05-06
Playlist: EnterpriseNG 2020: Presentations
Description: 
	Growing a company is painful. At the enterprise level, the hundreds of processes involved in getting code from a developer to your customers can often look like an incomprehensible tangle of spaghetti, making every new release a series of headaches matching the length and complexity of your delivery pipeline.

Fear not â€” Continuous Integration and Continuous Delivery (CI/CD) are here to help. In this talk, you will learn what those four innocuous words mean, and how they will both simplify AND turbocharge your pipeline, all the while reinforcing both your teamâ€™s and your customersâ€™ confidence in the product you deliver.

Learn the best ways to build reliable web applications, write quality code, choose scalable architectures, and create effective automated tests at the Reliable Web Summit this August 26-27, 2021. Powered by the team at ng-conf.
Get your ticket ðŸ‘‰ https://reliablewebsummit.com/

ng-conf is a multi-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1000's of developers from across the globe join together to attend talks and workshops by the Angular team and other community experts.

Follow us on twitter https://twitter.com/ngconfâ€‹ 
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:00,120 --> 00:00:17,920
[Music]

00:00:03,840 --> 00:00:17,920
let us

00:00:18,880 --> 00:00:24,480
oh hi there uh i'm i'm sorry i wasn't

00:00:22,880 --> 00:00:26,960
expecting you

00:00:24,480 --> 00:00:29,279
well since you're already here i may as

00:00:26,960 --> 00:00:32,399
well let you in on a little secret

00:00:29,279 --> 00:00:35,200
but first let me ask you a question

00:00:32,399 --> 00:00:35,760
do you hate releases do they make you

00:00:35,200 --> 00:00:38,800
feel

00:00:35,760 --> 00:00:40,800
queasy and uncomfortable i mean

00:00:38,800 --> 00:00:42,079
just imagine you've already missed the

00:00:40,800 --> 00:00:43,920
first deadline and

00:00:42,079 --> 00:00:45,840
oh that was a whole load of fun trying

00:00:43,920 --> 00:00:46,719
to explain and now the second one's

00:00:45,840 --> 00:00:49,600
approaching and

00:00:46,719 --> 00:00:51,600
somehow even with all that extra time

00:00:49,600 --> 00:00:53,520
you're still playing catch up

00:00:51,600 --> 00:00:54,719
the whole team's crunching 80 hours a

00:00:53,520 --> 00:00:57,199
week patching in

00:00:54,719 --> 00:00:58,640
bugs cherry picking commits left and

00:00:57,199 --> 00:01:00,879
right fixing those

00:00:58,640 --> 00:01:04,000
pesky merge conflicts which of course

00:01:00,879 --> 00:01:06,640
just lead to more bugs

00:01:04,000 --> 00:01:08,720
everyone's stressed your boss your

00:01:06,640 --> 00:01:11,280
teammate your family

00:01:08,720 --> 00:01:12,640
even your dog is stressed i'm stressed

00:01:11,280 --> 00:01:14,640
for you

00:01:12,640 --> 00:01:15,920
and every time this happens you ask

00:01:14,640 --> 00:01:19,040
yourself

00:01:15,920 --> 00:01:20,240
once we do deploy the production what if

00:01:19,040 --> 00:01:24,000
it just

00:01:20,240 --> 00:01:24,799
blows up and then a slight notification

00:01:24,000 --> 00:01:26,320
comes in

00:01:24,799 --> 00:01:30,479
and it's your boss asking to jump on a

00:01:26,320 --> 00:01:32,880
zoom call he says it's very important

00:01:30,479 --> 00:01:35,520
sorry to be doing this to you gary but

00:01:32,880 --> 00:01:41,759
we need feature xyz in this release

00:01:35,520 --> 00:01:44,880
make it happen

00:01:41,759 --> 00:01:46,440
there has to be a better way and

00:01:44,880 --> 00:01:50,040
there is

00:01:46,440 --> 00:01:50,040
[Music]

00:01:50,799 --> 00:01:57,360
yes c-i-c-d but

00:01:54,159 --> 00:02:00,399
what does that even mean is it a product

00:01:57,360 --> 00:02:04,000
an animal a magic spell

00:02:00,399 --> 00:02:06,000
close but not quite it is a methodology

00:02:04,000 --> 00:02:07,600
specifically a way to structure your

00:02:06,000 --> 00:02:10,640
delivery pipeline

00:02:07,600 --> 00:02:13,120
now what do i mean by delivery pipeline

00:02:10,640 --> 00:02:14,879
it's simple your delivery pipeline is a

00:02:13,120 --> 00:02:17,040
process that carries your code

00:02:14,879 --> 00:02:18,080
from the developer all the way to the

00:02:17,040 --> 00:02:19,360
customer

00:02:18,080 --> 00:02:21,680
for the most part that's going to

00:02:19,360 --> 00:02:23,920
involve some sort of version control

00:02:21,680 --> 00:02:24,959
and then probably an entire arsenal of

00:02:23,920 --> 00:02:26,480
other tools for

00:02:24,959 --> 00:02:29,599
building testing and deploying your

00:02:26,480 --> 00:02:31,840
application that's kind of how it goes

00:02:29,599 --> 00:02:33,360
now before i continue i think it's

00:02:31,840 --> 00:02:36,720
important to mention that

00:02:33,360 --> 00:02:39,599
ci cd is an incredibly deep topic which

00:02:36,720 --> 00:02:41,920
i could talk about for hours and hours

00:02:39,599 --> 00:02:41,920
and i

00:02:42,000 --> 00:02:45,840
i only have a few minutes left so here's

00:02:44,480 --> 00:02:47,519
what i'm going to do

00:02:45,840 --> 00:02:49,680
i'm going to dive a little bit deeper

00:02:47,519 --> 00:02:51,519
into ci cd just so you can

00:02:49,680 --> 00:02:52,800
at least wrap your head around the basic

00:02:51,519 --> 00:02:55,280
ideas behind it

00:02:52,800 --> 00:02:57,200
and then i'm going to go over the juicy

00:02:55,280 --> 00:03:04,239
juicy benefits it provides

00:02:57,200 --> 00:03:07,760
sound good let's go

00:03:04,239 --> 00:03:09,360
now i keep saying cicd but what does it

00:03:07,760 --> 00:03:13,280
actually stand for

00:03:09,360 --> 00:03:16,319
it stands for continuous integration ci

00:03:13,280 --> 00:03:17,840
continuous delivery cd

00:03:16,319 --> 00:03:20,400
these two ideas can actually be

00:03:17,840 --> 00:03:21,360
separated so let's go over each of them

00:03:20,400 --> 00:03:23,840
real quick

00:03:21,360 --> 00:03:25,200
first we'll start with ci continuous

00:03:23,840 --> 00:03:27,360
integration

00:03:25,200 --> 00:03:29,200
at its core continuous integration is

00:03:27,360 --> 00:03:32,799
about two things

00:03:29,200 --> 00:03:34,000
one merging code often meaning multiple

00:03:32,799 --> 00:03:38,159
times a day

00:03:34,000 --> 00:03:40,720
that's the continuous part easy right

00:03:38,159 --> 00:03:41,440
not quite there is a catch which brings

00:03:40,720 --> 00:03:44,400
me to

00:03:41,440 --> 00:03:46,000
number two those continuous merges

00:03:44,400 --> 00:03:49,360
should go into a main

00:03:46,000 --> 00:03:52,560
shared location usually called the trunk

00:03:49,360 --> 00:03:53,439
main line or the very common master

00:03:52,560 --> 00:03:55,840
branch

00:03:53,439 --> 00:03:56,640
furthermore said trunk main line or

00:03:55,840 --> 00:04:00,239
master

00:03:56,640 --> 00:04:02,400
is the only long lived branch this means

00:04:00,239 --> 00:04:04,000
no more parallel release branches or

00:04:02,400 --> 00:04:07,120
long-running feature branches

00:04:04,000 --> 00:04:08,319
or any of that you start from trunk code

00:04:07,120 --> 00:04:10,720
a little bit

00:04:08,319 --> 00:04:12,159
and then merge back into trunk that's

00:04:10,720 --> 00:04:14,959
the integration part

00:04:12,159 --> 00:04:15,920
and perhaps more important this is also

00:04:14,959 --> 00:04:19,120
what we call

00:04:15,920 --> 00:04:20,479
trunk based development now although

00:04:19,120 --> 00:04:22,160
trunk based development

00:04:20,479 --> 00:04:23,840
is a hard requirement for continuous

00:04:22,160 --> 00:04:25,919
integration which

00:04:23,840 --> 00:04:27,040
itself is a requirement of continuous

00:04:25,919 --> 00:04:29,520
delivery

00:04:27,040 --> 00:04:31,600
meaning trunk-based development is a

00:04:29,520 --> 00:04:33,919
requirement of ci cd

00:04:31,600 --> 00:04:35,600
well it's also an entire topic of its

00:04:33,919 --> 00:04:36,639
own that could be discussed for hours

00:04:35,600 --> 00:04:39,600
and hours

00:04:36,639 --> 00:04:41,040
so i won't be going into it but it's

00:04:39,600 --> 00:04:44,639
definitely something to keep in the back

00:04:41,040 --> 00:04:44,639
of your mind for future research

00:04:47,840 --> 00:04:52,080
now that takes care of ci what about cd

00:04:51,360 --> 00:04:55,759
though

00:04:52,080 --> 00:04:57,919
i.e continuous delivery let's see

00:04:55,759 --> 00:04:59,600
continuous delivery is really about one

00:04:57,919 --> 00:05:02,000
thing your trunk

00:04:59,600 --> 00:05:03,440
main line or master branch is always

00:05:02,000 --> 00:05:05,680
releasable

00:05:03,440 --> 00:05:06,720
what do i mean by that i mean that no

00:05:05,680 --> 00:05:09,039
matter what happens

00:05:06,720 --> 00:05:11,919
anywhere else the code that flows into

00:05:09,039 --> 00:05:15,680
trunk could be deployed to the customer

00:05:11,919 --> 00:05:17,840
if so desired note that i said could

00:05:15,680 --> 00:05:19,440
being able to release on every change to

00:05:17,840 --> 00:05:22,639
trunk is different from

00:05:19,440 --> 00:05:24,000
actually doing so in fact there is a

00:05:22,639 --> 00:05:26,320
term for the process of releasing

00:05:24,000 --> 00:05:27,919
on every merge into trunk and that's

00:05:26,320 --> 00:05:31,120
called continuous

00:05:27,919 --> 00:05:33,440
deployment continuous delivery is

00:05:31,120 --> 00:05:34,639
in a way one step behind that where

00:05:33,440 --> 00:05:38,000
every merge in the trunk

00:05:34,639 --> 00:05:40,160
simply has the potential to be released

00:05:38,000 --> 00:05:41,919
keep in mind that being picky about when

00:05:40,160 --> 00:05:43,759
you release is not always due to a

00:05:41,919 --> 00:05:45,840
technical limitation

00:05:43,759 --> 00:05:47,840
it's sometimes just a choice made by the

00:05:45,840 --> 00:05:50,840
company based on the product they offer

00:05:47,840 --> 00:05:53,840
and how they want to structure their

00:05:50,840 --> 00:05:53,840
releases

00:05:55,199 --> 00:06:00,319
and that takes care of cd but

00:05:58,400 --> 00:06:02,000
before i move on to telling you just how

00:06:00,319 --> 00:06:05,039
great light becomes when you combine

00:06:02,000 --> 00:06:05,360
ci and cd i think it's worth mentioning

00:06:05,039 --> 00:06:08,639
the

00:06:05,360 --> 00:06:10,960
mvp in all of this the one elemented

00:06:08,639 --> 00:06:12,800
i would say enables these concepts to

00:06:10,960 --> 00:06:15,840
ascend from just being a bunch of

00:06:12,800 --> 00:06:19,199
daydreaming to actual reality

00:06:15,840 --> 00:06:22,160
that is automation particularly

00:06:19,199 --> 00:06:23,759
automated tests they are essential in

00:06:22,160 --> 00:06:25,680
making sure that you're not only able to

00:06:23,759 --> 00:06:28,639
continuously integrate your code

00:06:25,680 --> 00:06:29,919
into trunk with confidence but through

00:06:28,639 --> 00:06:32,080
this confidence

00:06:29,919 --> 00:06:33,360
also ascertaining the trunk is always

00:06:32,080 --> 00:06:37,120
releasable

00:06:33,360 --> 00:06:41,120
so good job automated tests now

00:06:37,120 --> 00:06:41,919
to summarize one use a single primary

00:06:41,120 --> 00:06:44,400
branch

00:06:41,919 --> 00:06:45,680
trunk mainline master whatever you want

00:06:44,400 --> 00:06:49,039
to call it

00:06:45,680 --> 00:06:52,080
two integrate code into it often meaning

00:06:49,039 --> 00:06:56,080
multiple times a day three

00:06:52,080 --> 00:06:58,880
use automated tests a lot of them

00:06:56,080 --> 00:07:00,479
now there is an honorable mention that i

00:06:58,880 --> 00:07:01,440
should point out which is feature

00:07:00,479 --> 00:07:03,680
toggling

00:07:01,440 --> 00:07:06,800
meaning the ability to turn features on

00:07:03,680 --> 00:07:08,560
and off from one deployment to the next

00:07:06,800 --> 00:07:10,960
there is a point where you will need

00:07:08,560 --> 00:07:13,840
them to keep an always releasable trunk

00:07:10,960 --> 00:07:14,319
but it is a relatively advanced subject

00:07:13,840 --> 00:07:16,240
so

00:07:14,319 --> 00:07:19,759
i will once again give it this brief

00:07:16,240 --> 00:07:19,759
mention and move on

00:07:23,680 --> 00:07:28,400
okay onto those juicy juicy benefits i

00:07:26,880 --> 00:07:32,160
mentioned earlier

00:07:28,400 --> 00:07:33,440
here are the main ones one confidence in

00:07:32,160 --> 00:07:35,599
your product

00:07:33,440 --> 00:07:36,880
the single source of truth from using

00:07:35,599 --> 00:07:39,120
one primary branch

00:07:36,880 --> 00:07:41,840
combined with your numerous automated

00:07:39,120 --> 00:07:43,599
tests which you totally did not skimp on

00:07:41,840 --> 00:07:45,120
and the regularity of your code

00:07:43,599 --> 00:07:45,759
check-ins will give you the confidence

00:07:45,120 --> 00:07:48,080
that

00:07:45,759 --> 00:07:49,039
come release day nothing's going to blow

00:07:48,080 --> 00:07:52,639
up

00:07:49,039 --> 00:07:54,639
two increased collaboration the shared

00:07:52,639 --> 00:07:55,759
primary branch that everyone checks into

00:07:54,639 --> 00:07:58,879
regularly

00:07:55,759 --> 00:07:59,680
or dare i say continuously has the

00:07:58,879 --> 00:08:02,000
effect of

00:07:59,680 --> 00:08:03,680
dissolving a lot of the silos that

00:08:02,000 --> 00:08:05,039
probably have built up over time across

00:08:03,680 --> 00:08:08,080
your company

00:08:05,039 --> 00:08:10,400
three increased code quality

00:08:08,080 --> 00:08:12,319
with regular pr reviews and restrictions

00:08:10,400 --> 00:08:12,879
against long-running feature branches

00:08:12,319 --> 00:08:15,840
which

00:08:12,879 --> 00:08:17,919
by the way are a nightmare not only to

00:08:15,840 --> 00:08:18,319
review but also to integrate because of

00:08:17,919 --> 00:08:21,280
those

00:08:18,319 --> 00:08:22,400
pesky pesky merge conflicts i mentioned

00:08:21,280 --> 00:08:23,840
and for what

00:08:22,400 --> 00:08:26,400
they basically just get shoved into

00:08:23,840 --> 00:08:28,639
production because of deadlines or

00:08:26,400 --> 00:08:29,759
the entire team just throwing the towel

00:08:28,639 --> 00:08:32,880
and say screw it

00:08:29,759 --> 00:08:33,680
merge it in i don't care none of that

00:08:32,880 --> 00:08:35,839
here

00:08:33,680 --> 00:08:37,599
you and or your developers will find

00:08:35,839 --> 00:08:40,719
that the code base has turned from

00:08:37,599 --> 00:08:43,760
a swamp to a beautiful garden with

00:08:40,719 --> 00:08:46,240
soft green grass pretty perfume flowers

00:08:43,760 --> 00:08:48,080
and tall majestic trees like my

00:08:46,240 --> 00:08:51,279
background really

00:08:48,080 --> 00:08:53,360
four increased release cadence all of

00:08:51,279 --> 00:08:55,519
the benefits i list previously

00:08:53,360 --> 00:08:57,519
along the continuous pulse of your

00:08:55,519 --> 00:08:58,240
primary branch chugging along without a

00:08:57,519 --> 00:09:00,320
hitch

00:08:58,240 --> 00:09:01,519
you will find yourself able to release a

00:09:00,320 --> 00:09:05,120
lot more stuff

00:09:01,519 --> 00:09:07,839
a lot more often five the journey

00:09:05,120 --> 00:09:08,640
is just as valuable as the destination

00:09:07,839 --> 00:09:10,880
yes

00:09:08,640 --> 00:09:11,680
every step you take to reach the cicd

00:09:10,880 --> 00:09:14,399
dream

00:09:11,680 --> 00:09:16,480
which despite involving pipelines is not

00:09:14,399 --> 00:09:18,480
a pipe dream

00:09:16,480 --> 00:09:21,040
each of those steps will yield

00:09:18,480 --> 00:09:22,959
incredible dividends on their own

00:09:21,040 --> 00:09:24,880
automated testing trunk based

00:09:22,959 --> 00:09:27,600
development continuous integration

00:09:24,880 --> 00:09:29,440
feature toggling all of those will

00:09:27,600 --> 00:09:31,279
improve your development process

00:09:29,440 --> 00:09:33,279
letting you breathe easy as you

00:09:31,279 --> 00:09:36,000
implement these patterns on your way to

00:09:33,279 --> 00:09:40,000
ci cd pipelines

00:09:36,000 --> 00:09:41,519
six so many things i mean take your pick

00:09:40,000 --> 00:09:43,360
your boss is no longer stressed about

00:09:41,519 --> 00:09:46,959
releases nor are you

00:09:43,360 --> 00:09:48,080
or your family or your dog no more mad

00:09:46,959 --> 00:09:50,560
dash to the finish

00:09:48,080 --> 00:09:51,200
when a release deadline's coming up less

00:09:50,560 --> 00:09:54,000
bugs

00:09:51,200 --> 00:09:55,040
cheaper bugs happy developers happy

00:09:54,000 --> 00:09:57,680
customers

00:09:55,040 --> 00:09:58,800
happy everyone really except your

00:09:57,680 --> 00:10:00,880
competitors but

00:09:58,800 --> 00:10:02,480
you know what i think you're okay with

00:10:00,880 --> 00:10:05,760
that

00:10:02,480 --> 00:10:07,440
well that's a lot of them and

00:10:05,760 --> 00:10:09,360
honestly i think this is about all the

00:10:07,440 --> 00:10:11,360
time i have i hope

00:10:09,360 --> 00:10:13,040
you learned something good and that you

00:10:11,360 --> 00:10:13,519
are already tweeting to your team about

00:10:13,040 --> 00:10:16,720
how

00:10:13,519 --> 00:10:18,000
cicd is the revolution you've all been

00:10:16,720 --> 00:10:20,160
waiting for

00:10:18,000 --> 00:10:22,000
thank you so much for listening i hope

00:10:20,160 --> 00:10:23,440
you enjoyed it as much as i stressed out

00:10:22,000 --> 00:10:26,959
about doing it

00:10:23,440 --> 00:10:29,040
ha just kidding maybe

00:10:26,959 --> 00:10:30,160
my name is alice and i am a senior

00:10:29,040 --> 00:10:33,839
software engineer

00:10:30,160 --> 00:10:33,839

YouTube URL: https://www.youtube.com/watch?v=kLyVq5gSPRc


