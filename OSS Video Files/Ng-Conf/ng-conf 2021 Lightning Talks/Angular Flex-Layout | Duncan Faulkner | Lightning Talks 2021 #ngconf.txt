Title: Angular Flex-Layout | Duncan Faulkner | Lightning Talks 2021 #ngconf
Publication date: 2021-05-31
Playlist: ng-conf 2021 Lightning Talks
Description: 
	His talk gives an overview of the Angular Flex-Layout library

Learn the best ways to build reliable web applications, write quality code, choose scalable architectures, and create effective automated tests at the Reliable Web Summit this August 26-27, 2021. Powered by the team at ng-conf.

Get your ticket ðŸ‘‰ https://reliablewebsummit.com/

ng-conf is a multi-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1000's of developers from across the globe join together to attend talks and workshops by the Angular team and other community experts.

Follow us on twitter https://twitter.com/ngconfâ€‹ 
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:04,820 --> 00:00:07,869
[Music]

00:00:08,639 --> 00:00:11,840
right

00:00:09,040 --> 00:00:12,320
okay so good evening evening everybody

00:00:11,840 --> 00:00:14,320
um

00:00:12,320 --> 00:00:16,400
and sort of welcome to my lightning talk

00:00:14,320 --> 00:00:20,560
on angularflex layout

00:00:16,400 --> 00:00:22,480
um my name is duncan faulkner and i'm a

00:00:20,560 --> 00:00:23,920
senior software engineer for a satellite

00:00:22,480 --> 00:00:27,359
communications company

00:00:23,920 --> 00:00:29,199
in based in the uk my contact details

00:00:27,359 --> 00:00:30,800
are on screen so feel free to sort of

00:00:29,199 --> 00:00:31,119
connect with me on twitter or linkedin

00:00:30,800 --> 00:00:33,760
or

00:00:31,119 --> 00:00:35,680
drop me an email i'm going to give a

00:00:33,760 --> 00:00:38,320
brief overview of the angular flex

00:00:35,680 --> 00:00:41,120
layout library

00:00:38,320 --> 00:00:44,399
so what is angularflex layout angular

00:00:41,120 --> 00:00:46,399
flex layout is an api that's intuitive

00:00:44,399 --> 00:00:48,719
list of directives that can be used on

00:00:46,399 --> 00:00:50,559
html containers and elements

00:00:48,719 --> 00:00:52,879
so instead of using traditional style

00:00:50,559 --> 00:00:54,800
sheets developers define their layouts

00:00:52,879 --> 00:00:56,800
directly in the html

00:00:54,800 --> 00:00:59,280
and at the bottom there we have a simple

00:00:56,800 --> 00:01:02,160
example where we've got a directive

00:00:59,280 --> 00:01:04,559
um with the row in there and the the

00:01:02,160 --> 00:01:04,559
flex

00:01:06,320 --> 00:01:10,320
so why use angular flex layout so if

00:01:09,439 --> 00:01:13,040
you're looking for something

00:01:10,320 --> 00:01:14,640
an alternative way to write flex layout

00:01:13,040 --> 00:01:16,400
or css group for that matter

00:01:14,640 --> 00:01:18,400
then angular flex layout might be the

00:01:16,400 --> 00:01:20,080
library you've been looking for

00:01:18,400 --> 00:01:22,479
some of the main advantages for angular

00:01:20,080 --> 00:01:24,320
flex layout are the library is a pure

00:01:22,479 --> 00:01:26,880
typescript layout engine

00:01:24,320 --> 00:01:28,240
it uses html markup to specify layout

00:01:26,880 --> 00:01:30,560
configurations

00:01:28,240 --> 00:01:31,759
a responsive api can specify different

00:01:30,560 --> 00:01:33,920
layouts sizing

00:01:31,759 --> 00:01:35,280
visibilities viewports and display

00:01:33,920 --> 00:01:36,880
devices

00:01:35,280 --> 00:01:38,960
it's completely even independent of

00:01:36,880 --> 00:01:42,000
angular material and includes

00:01:38,960 --> 00:01:43,200
css grid as well requires no external

00:01:42,000 --> 00:01:44,640
style sheets

00:01:43,200 --> 00:01:48,159
and is written and maintained by the

00:01:44,640 --> 00:01:48,159
angular team and the community

00:01:48,960 --> 00:01:53,200
so setting up angularflex layout we've

00:01:51,119 --> 00:01:56,240
got three options

00:01:53,200 --> 00:01:57,759
we can set it up so flexbox uh and

00:01:56,240 --> 00:02:01,920
import flexbox itself

00:01:57,759 --> 00:02:03,840
using the um sorry

00:02:01,920 --> 00:02:05,920
we can import both of them using the

00:02:03,840 --> 00:02:07,040
flexbox and the css grid using the flex

00:02:05,920 --> 00:02:09,520
layout module

00:02:07,040 --> 00:02:11,440
or we can specify either the flexbox

00:02:09,520 --> 00:02:14,480
module for flexbox or the grid module

00:02:11,440 --> 00:02:14,480
for the css grid

00:02:16,000 --> 00:02:21,120
so how to use angularflex layout and

00:02:19,040 --> 00:02:23,280
angularflex layout works by dealing with

00:02:21,120 --> 00:02:26,239
one row or column at a time

00:02:23,280 --> 00:02:29,360
rows flow across the main screen and

00:02:26,239 --> 00:02:32,319
columns on the cross axis

00:02:29,360 --> 00:02:37,360
so main axis being left to right cross

00:02:32,319 --> 00:02:38,959
axis being top to bottom

00:02:37,360 --> 00:02:40,640
there are only a few directives that are

00:02:38,959 --> 00:02:42,400
used on the parent containers versus

00:02:40,640 --> 00:02:44,400
those used on the child elements and

00:02:42,400 --> 00:02:47,680
here we can see the main ones

00:02:44,400 --> 00:02:47,680
and there are and their flexbox

00:02:48,840 --> 00:02:51,840
equivalents

00:02:52,000 --> 00:02:55,599
and the api for the dom elements uh

00:02:54,400 --> 00:02:57,680
there are a few more

00:02:55,599 --> 00:02:59,200
uh directives that affect the flow and

00:02:57,680 --> 00:03:01,280
layout of child elements and

00:02:59,200 --> 00:03:04,560
here we can see the main ones and the

00:03:01,280 --> 00:03:06,800
flexbox equivalents as well

00:03:04,560 --> 00:03:08,239
the main one there really being the fx

00:03:06,800 --> 00:03:10,080
fx flex

00:03:08,239 --> 00:03:12,319
which does the grow and the shrink and

00:03:10,080 --> 00:03:12,319
stuff

00:03:13,760 --> 00:03:17,280
so on a row layout here we have a

00:03:16,560 --> 00:03:20,080
colored

00:03:17,280 --> 00:03:21,440
set of boxes that are left aligned and

00:03:20,080 --> 00:03:23,519
they stretch the full height of the

00:03:21,440 --> 00:03:26,879
parent container

00:03:23,519 --> 00:03:30,480
so this is a flex layout with a row

00:03:26,879 --> 00:03:32,480
and start and stretch as the alignment

00:03:30,480 --> 00:03:34,480
whereas with the column layout the color

00:03:32,480 --> 00:03:36,159
boxes are aligned top to bottom

00:03:34,480 --> 00:03:38,720
and stretch the full width of the parent

00:03:36,159 --> 00:03:38,720
container

00:03:40,879 --> 00:03:43,920
angularflex layout has a set of

00:03:42,720 --> 00:03:46,560
responsive features

00:03:43,920 --> 00:03:47,680
that enable developers to easily change

00:03:46,560 --> 00:03:49,680
the ux

00:03:47,680 --> 00:03:52,480
layout configurations for the for

00:03:49,680 --> 00:03:53,840
different display devices

00:03:52,480 --> 00:03:55,599
and here we can sort of see some of the

00:03:53,840 --> 00:03:59,760
break points

00:03:55,599 --> 00:04:02,400
for the responsive api

00:03:59,760 --> 00:04:06,720
there are a few more to this as well but

00:04:02,400 --> 00:04:06,720
this is just a small sample of them

00:04:07,439 --> 00:04:11,360
and likewise for angularflex layout

00:04:09,439 --> 00:04:13,439
provides a smart

00:04:11,360 --> 00:04:15,360
syntactic directives to allow developers

00:04:13,439 --> 00:04:17,040
to easily and intuitively create

00:04:15,360 --> 00:04:20,400
responsive and adaptive layouts

00:04:17,040 --> 00:04:20,400
using css grid as well

00:04:21,280 --> 00:04:25,040
and some of the css grid api for dom

00:04:24,240 --> 00:04:27,840
elements

00:04:25,040 --> 00:04:30,880
and here's some of the directives and

00:04:27,840 --> 00:04:30,880
their allowed values

00:04:34,960 --> 00:04:38,800
and finally before i finish i would just

00:04:36,720 --> 00:04:40,400
like to thank a few people for

00:04:38,800 --> 00:04:42,160
whom i couldn't have done this without

00:04:40,400 --> 00:04:44,240
their support and encouragement so

00:04:42,160 --> 00:04:45,440
a big thank you to everybody on the

00:04:44,240 --> 00:04:57,840
slide and

00:04:45,440 --> 00:04:59,919
obviously to brooke as well thank you

00:04:57,840 --> 00:04:59,919

YouTube URL: https://www.youtube.com/watch?v=2q4AUw2Sxsk


