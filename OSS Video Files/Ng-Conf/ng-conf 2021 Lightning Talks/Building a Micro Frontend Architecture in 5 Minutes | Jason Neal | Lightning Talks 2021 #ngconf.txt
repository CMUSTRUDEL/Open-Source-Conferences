Title: Building a Micro Frontend Architecture in 5 Minutes | Jason Neal | Lightning Talks 2021 #ngconf
Publication date: 2021-05-31
Playlist: ng-conf 2021 Lightning Talks
Description: 
	In this talk, he extremely quickly explains what a micro frontend architecture is for folks that don't know, and then quickly shows how easy it is to build one using Angular Elements.

Learn the best ways to build reliable web applications, write quality code, choose scalable architectures, and create effective automated tests at the Reliable Web Summit this August 26-27, 2021. Powered by the team at ng-conf.

Get your ticket ðŸ‘‰ https://reliablewebsummit.com/

ng-conf is a multi-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1000's of developers from across the globe join together to attend talks and workshops by the Angular team and other community experts.

Follow us on twitter https://twitter.com/ngconfâ€‹ 
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:04,820 --> 00:00:07,869
[Music]

00:00:08,960 --> 00:00:11,360
there we go are you seeing it now the

00:00:10,480 --> 00:00:13,440
presentation

00:00:11,360 --> 00:00:14,920
okay it's being a little odd yeah i'll

00:00:13,440 --> 00:00:18,000
just dive right into it

00:00:14,920 --> 00:00:18,480
so um thanks for coming and listening to

00:00:18,000 --> 00:00:20,000
the talk

00:00:18,480 --> 00:00:22,000
my name is jason neal i'm a staff

00:00:20,000 --> 00:00:24,080
software engineer at rocket mortgage

00:00:22,000 --> 00:00:26,400
and today we're going to try to build a

00:00:24,080 --> 00:00:27,840
micro front architecture in five minutes

00:00:26,400 --> 00:00:29,519
and obviously since i only have a few

00:00:27,840 --> 00:00:30,560
minutes i have to make a lot of

00:00:29,519 --> 00:00:31,679
assumptions

00:00:30,560 --> 00:00:33,280
so i'm going to assume you've at least

00:00:31,679 --> 00:00:34,800
heard of microfrontend and understand

00:00:33,280 --> 00:00:36,000
those concepts that others have already

00:00:34,800 --> 00:00:37,200
talked about

00:00:36,000 --> 00:00:39,120
and i'm also obviously going to have to

00:00:37,200 --> 00:00:40,559
move very fast but don't worry

00:00:39,120 --> 00:00:42,320
all the content and all of this code is

00:00:40,559 --> 00:00:45,600
thoroughly documented on github so

00:00:42,320 --> 00:00:47,440
i'll send a link to that after the talk

00:00:45,600 --> 00:00:49,440
uh here's a quick glimpse of the

00:00:47,440 --> 00:00:50,320
architecture for what we are about to

00:00:49,440 --> 00:00:52,000
build

00:00:50,320 --> 00:00:55,120
this is going to be a website for a new

00:00:52,000 --> 00:00:57,120
up and coming restaurant called ng grill

00:00:55,120 --> 00:00:58,640
the architecture will consist of a shell

00:00:57,120 --> 00:01:00,320
and this is just what's composing

00:00:58,640 --> 00:01:02,719
everything together into a single

00:01:00,320 --> 00:01:04,320
cohesive user experience and it's just a

00:01:02,719 --> 00:01:06,320
normal angular application built and

00:01:04,320 --> 00:01:08,320
deployed like normal

00:01:06,320 --> 00:01:10,080
and then the architecture will also

00:01:08,320 --> 00:01:11,520
include multiple micro front end

00:01:10,080 --> 00:01:13,200
components these are going to be

00:01:11,520 --> 00:01:15,439
full-blown angular applications as well

00:01:13,200 --> 00:01:16,479
that are simply built and packaged as

00:01:15,439 --> 00:01:20,799
custom elements

00:01:16,479 --> 00:01:24,320
using angular elements and so let me

00:01:20,799 --> 00:01:27,840
dive into the terminal first let's see

00:01:24,320 --> 00:01:27,840
let me reset what i've got going on here

00:01:28,240 --> 00:01:32,320
so first off there's some stuff i did

00:01:30,320 --> 00:01:34,079
have to run before the talk

00:01:32,320 --> 00:01:35,600
you'll see here if you're seeing the

00:01:34,079 --> 00:01:39,119
terminal i did generate

00:01:35,600 --> 00:01:41,360
a angular workspace called ng grill

00:01:39,119 --> 00:01:43,280
and then i went ahead and generated four

00:01:41,360 --> 00:01:46,159
application projects called shell

00:01:43,280 --> 00:01:47,200
menu order and locations that takes a

00:01:46,159 --> 00:01:48,399
while so i went ahead and did that

00:01:47,200 --> 00:01:50,159
before the talk

00:01:48,399 --> 00:01:51,759
and then the command i just ran it takes

00:01:50,159 --> 00:01:54,560
a while so i went ahead and started it

00:01:51,759 --> 00:01:57,520
is just installing a package called ng

00:01:54,560 --> 00:01:58,799
micro front end

00:01:57,520 --> 00:02:00,960
this package is just going to help

00:01:58,799 --> 00:02:02,799
abstract away a lot of complexity and

00:02:00,960 --> 00:02:04,240
help simplify the approach

00:02:02,799 --> 00:02:06,240
but obviously you don't have to use this

00:02:04,240 --> 00:02:07,360
package i built the package like full

00:02:06,240 --> 00:02:09,280
disclosure

00:02:07,360 --> 00:02:10,879
but it's entirely optional you can do

00:02:09,280 --> 00:02:12,160
all of this natively

00:02:10,879 --> 00:02:13,520
i'm just using it because i like it and

00:02:12,160 --> 00:02:14,720
it helps me save time which is

00:02:13,520 --> 00:02:16,720
especially important when you've only

00:02:14,720 --> 00:02:19,680
got five minutes

00:02:16,720 --> 00:02:20,879
so as this finishes up you'll notice

00:02:19,680 --> 00:02:22,959
it's doing a lot of work

00:02:20,879 --> 00:02:24,560
like it's got you know schematic support

00:02:22,959 --> 00:02:25,599
so it's generating a lot of code for us

00:02:24,560 --> 00:02:27,120
automatically

00:02:25,599 --> 00:02:30,400
i'm going to add one more application

00:02:27,120 --> 00:02:30,400
called an email fragment

00:02:30,959 --> 00:02:33,920
this is just going to be like a smaller

00:02:32,480 --> 00:02:35,440
microfrontend component that we're going

00:02:33,920 --> 00:02:38,080
to work with

00:02:35,440 --> 00:02:40,560
and then inside of our menu component

00:02:38,080 --> 00:02:43,280
i'm also going to generate a

00:02:40,560 --> 00:02:44,640
breakfast component a lunch component

00:02:43,280 --> 00:02:45,599
and a dinner component just so i can

00:02:44,640 --> 00:02:48,879
show you a little bit more

00:02:45,599 --> 00:02:51,200
of a complex micro front-end application

00:02:48,879 --> 00:02:52,800
and that has multiple routes within the

00:02:51,200 --> 00:02:54,000
overall application

00:02:52,800 --> 00:02:55,920
all right that actually all finished a

00:02:54,000 --> 00:02:58,720
lot quicker than normal so i think i'm

00:02:55,920 --> 00:03:00,400
ready to jump into the code

00:02:58,720 --> 00:03:03,040
the first thing i need to do is go into

00:03:00,400 --> 00:03:05,920
the app router module for the menu

00:03:03,040 --> 00:03:07,680
application we created those

00:03:05,920 --> 00:03:09,120
components for breakfast lunch and

00:03:07,680 --> 00:03:10,080
dinner so i just need to create those

00:03:09,120 --> 00:03:11,680
routes

00:03:10,080 --> 00:03:12,959
so you can see i've copied and pasted

00:03:11,680 --> 00:03:14,640
that in here but this is just creating

00:03:12,959 --> 00:03:16,159
breakfast lunch and dinner routes in

00:03:14,640 --> 00:03:17,360
that component

00:03:16,159 --> 00:03:19,360
and then the only other change i'm

00:03:17,360 --> 00:03:21,519
really going to make here is

00:03:19,360 --> 00:03:23,360
to each of the app component template

00:03:21,519 --> 00:03:25,120
files just to clean it up and

00:03:23,360 --> 00:03:26,400
get rid of all this boilerplate code so

00:03:25,120 --> 00:03:28,640
i'm just going to copy and paste in a

00:03:26,400 --> 00:03:30,959
couple of things again all this code is

00:03:28,640 --> 00:03:32,239
documented and you can see this all

00:03:30,959 --> 00:03:34,159
after the talk

00:03:32,239 --> 00:03:35,760
so the locations component is going to

00:03:34,159 --> 00:03:36,799
be a little bit more complex

00:03:35,760 --> 00:03:39,200
because it's going to bring in that

00:03:36,799 --> 00:03:41,120
emails fragment here

00:03:39,200 --> 00:03:43,280
so that it'll actually have two micro

00:03:41,120 --> 00:03:46,159
front ends displaying on one page

00:03:43,280 --> 00:03:47,680
and then the menu component is the

00:03:46,159 --> 00:03:49,280
probably most advanced one it does the

00:03:47,680 --> 00:03:50,560
same thing so it also brings in the

00:03:49,280 --> 00:03:52,959
emails component

00:03:50,560 --> 00:03:54,640
but then it also has these links to that

00:03:52,959 --> 00:03:57,439
breakfast lunch and dinner

00:03:54,640 --> 00:03:58,799
sub routes here the sub components and i

00:03:57,439 --> 00:04:00,480
think the last micro front end

00:03:58,799 --> 00:04:02,799
i need to update the template on is the

00:04:00,480 --> 00:04:05,280
order

00:04:02,799 --> 00:04:06,720
the order micro front end and then last

00:04:05,280 --> 00:04:08,000
but not least i'm going to adjust the

00:04:06,720 --> 00:04:09,680
shell template

00:04:08,000 --> 00:04:11,360
just to get rid of some of this

00:04:09,680 --> 00:04:13,920
boilerplate

00:04:11,360 --> 00:04:15,120
uh code that angular generates just to

00:04:13,920 --> 00:04:15,840
help you kind of see what's going on

00:04:15,120 --> 00:04:18,720
here

00:04:15,840 --> 00:04:20,560
and so normally at this point i would

00:04:18,720 --> 00:04:23,199
run like yarn start or

00:04:20,560 --> 00:04:24,560
npm start but that takes a few minutes

00:04:23,199 --> 00:04:25,840
when you've got five applications that

00:04:24,560 --> 00:04:28,080
you're running at the same time so i

00:04:25,840 --> 00:04:29,759
went ahead and did that beforehand so

00:04:28,080 --> 00:04:31,919
let me jump over to that and

00:04:29,759 --> 00:04:32,880
show you what i've got so this is our

00:04:31,919 --> 00:04:34,560
shell app

00:04:32,880 --> 00:04:36,800
and it has links to each of the micro

00:04:34,560 --> 00:04:37,919
front-ends so we've got menu order and

00:04:36,800 --> 00:04:40,479
locations

00:04:37,919 --> 00:04:42,000
if i click on order you see that it lazy

00:04:40,479 --> 00:04:44,880
loaded all of the content that's right

00:04:42,000 --> 00:04:46,160
required to render that component so the

00:04:44,880 --> 00:04:47,280
magic really happens here in the

00:04:46,160 --> 00:04:49,280
manifest file

00:04:47,280 --> 00:04:50,400
which tells the shell the name of the

00:04:49,280 --> 00:04:53,040
custom element

00:04:50,400 --> 00:04:54,720
and the the location of the you know

00:04:53,040 --> 00:04:56,240
javascript bundles and the style sheets

00:04:54,720 --> 00:04:57,120
that are needed to render that component

00:04:56,240 --> 00:04:58,400
properly

00:04:57,120 --> 00:05:00,400
and then it goes and fetches all that

00:04:58,400 --> 00:05:01,919
information if i go to a different

00:05:00,400 --> 00:05:02,639
component you'll see it lazy loads all

00:05:01,919 --> 00:05:04,400
of that and this

00:05:02,639 --> 00:05:06,560
in this case we've loaded two micro

00:05:04,400 --> 00:05:08,800
front ends the locations component as

00:05:06,560 --> 00:05:10,240
well as the emails fragment

00:05:08,800 --> 00:05:12,160
and if i clear that and go to the more

00:05:10,240 --> 00:05:14,479
advanced option the menu

00:05:12,160 --> 00:05:15,840
um you'll see it didn't reload the the

00:05:14,479 --> 00:05:17,520
email stuff like it just

00:05:15,840 --> 00:05:18,720
it did get the manifest file again but

00:05:17,520 --> 00:05:19,600
then it saw that it had already loaded

00:05:18,720 --> 00:05:21,840
this

00:05:19,600 --> 00:05:23,840
and it didn't reload it uh but yeah you

00:05:21,840 --> 00:05:26,960
can go between breakfast lunch and

00:05:23,840 --> 00:05:28,240
dinner and see that all of the options

00:05:26,960 --> 00:05:31,360
work

00:05:28,240 --> 00:05:32,639
fairly well so unfortunately with only

00:05:31,360 --> 00:05:35,840
five minutes that's pretty much

00:05:32,639 --> 00:05:37,919
all the time that i have so

00:05:35,840 --> 00:05:39,759
let me get to my last slide thank you so

00:05:37,919 --> 00:05:42,000
much for coming to the talk

00:05:39,759 --> 00:05:43,280
if i know this was super fast so if you

00:05:42,000 --> 00:05:44,720
have any questions about any of this

00:05:43,280 --> 00:05:46,639
stuff feel free to reach out to me on

00:05:44,720 --> 00:05:47,840
twitter at jasonneal

00:05:46,639 --> 00:05:49,680
you'll be able to find the slide and all

00:05:47,840 --> 00:05:50,960
the code and everything on github at the

00:05:49,680 --> 00:05:54,800
address you see here that's

00:05:50,960 --> 00:05:56,400
github.com jtl ng-grill

00:05:54,800 --> 00:06:07,840
and thanks again i hope you enjoy the

00:05:56,400 --> 00:06:07,840

YouTube URL: https://www.youtube.com/watch?v=VIudN_S9EhY


