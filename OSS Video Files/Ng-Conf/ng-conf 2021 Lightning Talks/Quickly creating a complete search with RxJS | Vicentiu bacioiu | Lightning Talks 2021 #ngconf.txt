Title: Quickly creating a complete search with RxJS | Vicentiu bacioiu | Lightning Talks 2021 #ngconf
Publication date: 2021-05-31
Playlist: ng-conf 2021 Lightning Talks
Description: 
	This short talk explains how to quickly implement a complete search mechanism that retrieves data from an API without writing anything too complicated.

Learn the best ways to build reliable web applications, write quality code, choose scalable architectures, and create effective automated tests at the Reliable Web Summit this August 26-27, 2021. Powered by the team at ng-conf.

Get your ticket ðŸ‘‰ https://reliablewebsummit.com/

ng-conf is a multi-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1000's of developers from across the globe join together to attend talks and workshops by the Angular team and other community experts.

Follow us on twitter https://twitter.com/ngconfâ€‹ 
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:04,820 --> 00:00:07,869
[Music]

00:00:08,400 --> 00:00:12,559
great

00:00:09,280 --> 00:00:16,240
so i'm vicenzio and i love

00:00:12,559 --> 00:00:18,640
music cakes and angular

00:00:16,240 --> 00:00:20,720
and probably most of you had to

00:00:18,640 --> 00:00:24,160
implement a search at some point

00:00:20,720 --> 00:00:27,279
using angular and you

00:00:24,160 --> 00:00:30,560
made use of one of these subjects maybe

00:00:27,279 --> 00:00:33,760
pipes rxjs but

00:00:30,560 --> 00:00:37,360
today i want to show you in five minutes

00:00:33,760 --> 00:00:40,960
how to properly implement a search

00:00:37,360 --> 00:00:41,440
very simple i'll jump right into the

00:00:40,960 --> 00:00:44,559
code

00:00:41,440 --> 00:00:48,079
because we don't have time and

00:00:44,559 --> 00:00:51,440
i prepared some some code here

00:00:48,079 --> 00:00:52,239
we have an app component which is split

00:00:51,440 --> 00:00:54,879
into

00:00:52,239 --> 00:00:56,160
two smaller components search and

00:00:54,879 --> 00:00:59,520
results

00:00:56,160 --> 00:00:59,840
as you can see here um i'm just going to

00:00:59,520 --> 00:01:03,120
go

00:00:59,840 --> 00:01:07,520
into the search component that has

00:01:03,120 --> 00:01:10,159
an input this input is a form control

00:01:07,520 --> 00:01:11,520
you can see it defined here in the

00:01:10,159 --> 00:01:14,560
search component

00:01:11,520 --> 00:01:15,840
it's this search input and what we are

00:01:14,560 --> 00:01:18,799
doing here

00:01:15,840 --> 00:01:20,000
we're subscribing to the value changes

00:01:18,799 --> 00:01:24,720
of the search input

00:01:20,000 --> 00:01:27,360
we're calling a search service do search

00:01:24,720 --> 00:01:28,000
and we're sending the response to a

00:01:27,360 --> 00:01:31,040
subject

00:01:28,000 --> 00:01:33,680
that's present in the search service

00:01:31,040 --> 00:01:34,320
uh if you head on to the search service

00:01:33,680 --> 00:01:36,560
this

00:01:34,320 --> 00:01:37,920
subject links the two components

00:01:36,560 --> 00:01:41,520
together

00:01:37,920 --> 00:01:43,840
and the do search method will

00:01:41,520 --> 00:01:46,880
bring up the results from the backend

00:01:43,840 --> 00:01:50,799
which in this case is a json file

00:01:46,880 --> 00:01:54,240
and filters the the results

00:01:50,799 --> 00:01:57,439
okay so on the results component

00:01:54,240 --> 00:01:58,560
is fairly simple it has the subject here

00:01:57,439 --> 00:02:03,200
hooked up to the

00:01:58,560 --> 00:02:06,320
service and it just displays the results

00:02:03,200 --> 00:02:09,520
um if we try it out

00:02:06,320 --> 00:02:12,879
please take a look at the network panel

00:02:09,520 --> 00:02:12,879
we're gonna see some

00:02:13,200 --> 00:02:16,640
serious requests here we have 10

00:02:15,120 --> 00:02:20,640
requests and

00:02:16,640 --> 00:02:22,480
i just wrote in nine letters and

00:02:20,640 --> 00:02:24,720
with each keystroke it's going to make

00:02:22,480 --> 00:02:27,840
another request and you can see that

00:02:24,720 --> 00:02:31,519
the results are coming in very slowly

00:02:27,840 --> 00:02:34,959
uh so this is really a problem

00:02:31,519 --> 00:02:38,319
um what i'm going to do now is

00:02:34,959 --> 00:02:41,840
coming this out and i prepared a better

00:02:38,319 --> 00:02:43,519
piece of code here so let me walk you

00:02:41,840 --> 00:02:46,319
through the changes real quick

00:02:43,519 --> 00:02:47,680
um i swapped the subscribed with the

00:02:46,319 --> 00:02:51,440
pipe

00:02:47,680 --> 00:02:54,879
we have a filter here that limits the

00:02:51,440 --> 00:02:58,879
query to at least three characters

00:02:54,879 --> 00:03:01,040
we have the bounce time that will

00:02:58,879 --> 00:03:02,560
search only when i stopped typing for

00:03:01,040 --> 00:03:05,840
300 milliseconds

00:03:02,560 --> 00:03:08,879
this thing until changed to avoid

00:03:05,840 --> 00:03:10,080
searching for the same query twice and

00:03:08,879 --> 00:03:13,120
the most important

00:03:10,080 --> 00:03:13,680
switch map which will basically cancel

00:03:13,120 --> 00:03:16,959
out

00:03:13,680 --> 00:03:20,480
the pending requests when

00:03:16,959 --> 00:03:23,200
a new request is done so i'm gonna try

00:03:20,480 --> 00:03:23,200
it on now

00:03:23,760 --> 00:03:31,920
um i typed in the same this inquiry

00:03:27,440 --> 00:03:34,400
uh you can see only the the result here

00:03:31,920 --> 00:03:35,920
i have a cancelled result due to the

00:03:34,400 --> 00:03:39,200
switch map

00:03:35,920 --> 00:03:42,560
and the the successful result

00:03:39,200 --> 00:03:46,000
the successful request here so

00:03:42,560 --> 00:03:47,840
if i just to erase this

00:03:46,000 --> 00:03:49,760
you can see that the number of requests

00:03:47,840 --> 00:03:52,879
are really limited

00:03:49,760 --> 00:03:54,159
so this is the the winning combination

00:03:52,879 --> 00:03:57,120
of course you may

00:03:54,159 --> 00:03:59,519
enhance this with the catch error and

00:03:57,120 --> 00:04:02,720
stuff like that

00:03:59,519 --> 00:04:07,280
um that's the only thing

00:04:02,720 --> 00:04:07,280
i can i can show right now um

00:04:07,760 --> 00:04:14,080
please keep in mind the result relevance

00:04:10,879 --> 00:04:16,959
that's what why we use filter

00:04:14,080 --> 00:04:18,320
we used the bounce for num to limit the

00:04:16,959 --> 00:04:20,720
number of requests

00:04:18,320 --> 00:04:22,720
we use distinct until change to avoid

00:04:20,720 --> 00:04:26,560
duplicate requests and switch map

00:04:22,720 --> 00:04:29,600
for avoiding response mix-ups

00:04:26,560 --> 00:04:33,120
now you can find the code here um

00:04:29,600 --> 00:04:42,560
and thank you for today have a nice

00:04:33,120 --> 00:04:44,639
nice day

00:04:42,560 --> 00:04:44,639

YouTube URL: https://www.youtube.com/watch?v=2_tnjZ9XKBE


