Title: Run an Angular app locally with Docker and Nginx | Drew Shirts | Lightning Talks 2021 #ngconf
Publication date: 2021-05-31
Playlist: ng-conf 2021 Lightning Talks
Description: 
	Match your test-lane server's config and run Angular locally on a Docker instance with an Nginx server.

Learn the best ways to build reliable web applications, write quality code, choose scalable architectures, and create effective automated tests at the Reliable Web Summit this August 26-27, 2021. Powered by the team at ng-conf.

Get your ticket ðŸ‘‰ https://reliablewebsummit.com/

ng-conf is a multi-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1000's of developers from across the globe join together to attend talks and workshops by the Angular team and other community experts.

Follow us on twitter https://twitter.com/ngconfâ€‹ 
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:04,820 --> 00:00:07,869
[Music]

00:00:15,280 --> 00:00:17,359
hi

00:00:15,759 --> 00:00:19,600
my name is drew schertz and i'll be

00:00:17,359 --> 00:00:23,760
sharing how to run an angular app

00:00:19,600 --> 00:00:23,760
locally with docker and nginx

00:00:24,160 --> 00:00:27,359
little about me you can find me on

00:00:26,000 --> 00:00:29,039
twitter at drew shirts

00:00:27,359 --> 00:00:30,880
i'm a software engineer currently

00:00:29,039 --> 00:00:33,280
working at the church of jesus christ of

00:00:30,880 --> 00:00:34,800
latter-day saints

00:00:33,280 --> 00:00:36,719
there are a few tools we'll be using in

00:00:34,800 --> 00:00:39,840
this presentation node

00:00:36,719 --> 00:00:42,559
npm visual studio code docker and

00:00:39,840 --> 00:00:44,399
angular cli

00:00:42,559 --> 00:00:46,160
we won't be covering the install of node

00:00:44,399 --> 00:00:47,360
and npm in this tutorial but you can

00:00:46,160 --> 00:00:51,199
download both together

00:00:47,360 --> 00:00:54,640
at nodejs.org i'll be using vs code as

00:00:51,199 --> 00:00:56,960
the editor of choice for this tutorial

00:00:54,640 --> 00:00:58,079
installing docker desktop will provide

00:00:56,960 --> 00:01:00,320
you with the cli

00:00:58,079 --> 00:01:01,359
and the ui executables you can also

00:01:00,320 --> 00:01:04,879
validate the install

00:01:01,359 --> 00:01:06,960
using docker-version

00:01:04,879 --> 00:01:10,560
you can install the angular cli using

00:01:06,960 --> 00:01:12,400
this global npm command

00:01:10,560 --> 00:01:14,080
with these tools in place let's create

00:01:12,400 --> 00:01:18,000
an angular app with the default

00:01:14,080 --> 00:01:20,320
settings after creating the default

00:01:18,000 --> 00:01:21,920
project it will run npm install for you

00:01:20,320 --> 00:01:24,400
depending on your internet connection it

00:01:21,920 --> 00:01:26,400
can take a while

00:01:24,400 --> 00:01:29,920
now let's validate the angular app runs

00:01:26,400 --> 00:01:29,920
correctly with ng serve

00:01:31,920 --> 00:01:35,520
once the building compilation complete

00:01:33,920 --> 00:01:38,320
it will start the local server on

00:01:35,520 --> 00:01:41,840
localhost port 4200. let's open up the

00:01:38,320 --> 00:01:41,840
browser and take a look

00:01:42,159 --> 00:01:49,119
i've already got my uh server running

00:01:46,000 --> 00:01:51,439
and go ahead and open up chrome and this

00:01:49,119 --> 00:01:55,759
is port 4200

00:01:51,439 --> 00:01:58,479
refresh that and it is running locally

00:01:55,759 --> 00:01:58,479
without docker

00:02:02,320 --> 00:02:05,920
now we'll go ahead and create a file

00:02:03,600 --> 00:02:09,200
named docker file the init cap

00:02:05,920 --> 00:02:11,440
and no extension are on purpose

00:02:09,200 --> 00:02:12,239
we'll create another file named docker

00:02:11,440 --> 00:02:14,879
ignore

00:02:12,239 --> 00:02:16,400
and add the folder name node modules

00:02:14,879 --> 00:02:18,400
this allows us to ignore

00:02:16,400 --> 00:02:22,640
our dependencies just like we do with a

00:02:18,400 --> 00:02:24,720
dot git ignore file we'll be using a

00:02:22,640 --> 00:02:25,840
two-stage process for building out our

00:02:24,720 --> 00:02:28,239
docker file

00:02:25,840 --> 00:02:30,080
our first stage we'll add a node image

00:02:28,239 --> 00:02:31,440
copy all of the angular files to our

00:02:30,080 --> 00:02:34,080
working directory

00:02:31,440 --> 00:02:36,080
run npm install to add the project

00:02:34,080 --> 00:02:39,280
dependencies and finally we'll build

00:02:36,080 --> 00:02:41,440
the app with npm

00:02:39,280 --> 00:02:42,879
our second stage for our docker file

00:02:41,440 --> 00:02:45,440
will use an engine x

00:02:42,879 --> 00:02:46,160
image set the working directory for

00:02:45,440 --> 00:02:49,200
nginx

00:02:46,160 --> 00:02:50,000
assets remove any default assets from

00:02:49,200 --> 00:02:53,040
the nginx

00:02:50,000 --> 00:02:56,080
image copy our node as static assets

00:02:53,040 --> 00:02:58,080
from the builder image we just created

00:02:56,080 --> 00:02:59,440
and specify the entry point for our

00:02:58,080 --> 00:03:02,400
docker container to run

00:02:59,440 --> 00:03:04,879
engine x you can add an additional

00:03:02,400 --> 00:03:06,959
configuration file for nginx to match

00:03:04,879 --> 00:03:09,040
your local settings with those of lower

00:03:06,959 --> 00:03:09,840
test lanes and production but for this

00:03:09,040 --> 00:03:13,120
exercise

00:03:09,840 --> 00:03:15,200
i'll keep it simple with these two

00:03:13,120 --> 00:03:17,280
stages added to our docker file we are

00:03:15,200 --> 00:03:18,080
ready to build an image called angular

00:03:17,280 --> 00:03:21,519
nginx

00:03:18,080 --> 00:03:22,239
docker the build completed will look

00:03:21,519 --> 00:03:23,680
like this

00:03:22,239 --> 00:03:26,560
it can take a few seconds to a few

00:03:23,680 --> 00:03:26,560
minutes to run that

00:03:26,640 --> 00:03:30,080
when the build is complete you can

00:03:28,400 --> 00:03:31,040
validate the image was created with

00:03:30,080 --> 00:03:33,360
docker image

00:03:31,040 --> 00:03:36,400
ls it will show all the docker images

00:03:33,360 --> 00:03:38,720
you have on your computer

00:03:36,400 --> 00:03:40,959
building complete enter when ready now

00:03:38,720 --> 00:03:42,400
you can start a container serving up our

00:03:40,959 --> 00:03:46,640
app on localhost

00:03:42,400 --> 00:03:48,879
port 8080.

00:03:46,640 --> 00:03:49,680
let's go ahead and jump over the browser

00:03:48,879 --> 00:03:55,280
over to

00:03:49,680 --> 00:03:55,280
the terminal and open up this server

00:03:55,840 --> 00:03:59,360
it doesn't have any output on this until

00:03:58,799 --> 00:04:02,080
you start

00:03:59,360 --> 00:04:03,360
running uh opening up the browser and

00:04:02,080 --> 00:04:06,879
loading assets

00:04:03,360 --> 00:04:07,680
that's our 42 4200 local we'll go to 40

00:04:06,879 --> 00:04:11,280
localhost

00:04:07,680 --> 00:04:13,280
8080 refresh that

00:04:11,280 --> 00:04:15,040
and it is running correctly out of

00:04:13,280 --> 00:04:17,439
docker using an nginx

00:04:15,040 --> 00:04:17,439
server

00:04:20,959 --> 00:04:24,320
after the container is up and running

00:04:22,479 --> 00:04:24,880
you can see which containers are up with

00:04:24,320 --> 00:04:28,560
the command

00:04:24,880 --> 00:04:30,240
docker container ls

00:04:28,560 --> 00:04:32,560
when you make changes to your angular

00:04:30,240 --> 00:04:33,520
app you'll need these to create a new

00:04:32,560 --> 00:04:35,440
docker image

00:04:33,520 --> 00:04:36,960
use these when the container is still

00:04:35,440 --> 00:04:39,440
running the hash at the end of these

00:04:36,960 --> 00:04:42,160
commands is the sha 256 hash created

00:04:39,440 --> 00:04:43,919
when the container is built

00:04:42,160 --> 00:04:46,000
thank you for your time today i'm glad

00:04:43,919 --> 00:04:48,080
i've had this opportunity to share

00:04:46,000 --> 00:04:49,520
it has helped me learn a lot about

00:04:48,080 --> 00:04:51,360
docker and nginx

00:04:49,520 --> 00:04:57,780
i plan on using this with my current

00:04:51,360 --> 00:05:00,830
projects at work

00:04:57,780 --> 00:05:00,830
[Music]

00:05:07,280 --> 00:05:09,360

YouTube URL: https://www.youtube.com/watch?v=YHgCErjmYr8


