Title: Prettier: More Than Just A Pretty Face - Michi DeWitt
Publication date: 2021-01-02
Playlist: EnterpriseNG: Lightning Talks
Description: 
	Master all the freshest Angular skills with on-demand workshops with industry leading pros: https://ngconf-school.teachable.com/

What is Prettier and how can it help you and your team? Angular community member and ngChampion Michi DeWitt explains it all in this Lightning Talk from EnterpriseNG 2020.

ng-conf is the premier global conference for the Angular JavaScript framework, offering both in-person and online events throughout the year. Focused on delivering the highest quality training, ng-conf is where careers are made.

ng-conf: Hardwired is brought to you by:
- https://thinkster.io/ The best Angular and JavaScript tutorials on the web
- https://herodevs.com/ Engineering and consulting by web development experts
- https://xlts.dev/  Extended support for AngularJS

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:04,710 --> 00:00:08,809
[Music]

00:00:14,400 --> 00:00:18,480
um hi

00:00:14,960 --> 00:00:20,320
my name is michi dewitt um i am a senior

00:00:18,480 --> 00:00:22,240
software developer in san diego i also

00:00:20,320 --> 00:00:24,080
do some community tech organizing here

00:00:22,240 --> 00:00:25,680
and i am one of the ng champions so i

00:00:24,080 --> 00:00:27,279
blog with the ngc comp team

00:00:25,680 --> 00:00:29,039
um but you're not here to talk about me

00:00:27,279 --> 00:00:30,800
let's talk about prettier

00:00:29,039 --> 00:00:32,559
um today i'm going to go over three

00:00:30,800 --> 00:00:34,000
things first is

00:00:32,559 --> 00:00:35,920
why you should use a style guide on your

00:00:34,000 --> 00:00:37,920
team second is

00:00:35,920 --> 00:00:39,360
why you should use an auto formatter and

00:00:37,920 --> 00:00:40,480
third is why prettier is the tool that

00:00:39,360 --> 00:00:41,600
you can use for all of that

00:00:40,480 --> 00:00:44,079
and we're gonna do it all in five

00:00:41,600 --> 00:00:47,440
minutes so let's dive in

00:00:44,079 --> 00:00:49,039
um first what's a style guide uh a style

00:00:47,440 --> 00:00:50,320
guide is just a set of rules and coding

00:00:49,039 --> 00:00:50,960
standards that you follow in your code

00:00:50,320 --> 00:00:52,800
base

00:00:50,960 --> 00:00:54,160
you use it so that all of your files are

00:00:52,800 --> 00:00:55,760
going to be formatted the same so every

00:00:54,160 --> 00:00:57,520
typescript file is going to be formatted

00:00:55,760 --> 00:00:59,520
i'm exactly the same as all other files

00:00:57,520 --> 00:01:00,960
in your project same with your html

00:00:59,520 --> 00:01:03,039
this is really important for teams to

00:01:00,960 --> 00:01:03,680
have especially larger enterprise teams

00:01:03,039 --> 00:01:05,600
because

00:01:03,680 --> 00:01:07,520
having files that are formatted

00:01:05,600 --> 00:01:08,880
consistently reduces the mental overhead

00:01:07,520 --> 00:01:10,240
for developers so it's

00:01:08,880 --> 00:01:12,320
easier for them to read your files

00:01:10,240 --> 00:01:15,040
easier for them to add more features

00:01:12,320 --> 00:01:16,560
um so it's just it's a really good um

00:01:15,040 --> 00:01:18,799
tool to use

00:01:16,560 --> 00:01:20,720
um so the first thing you have to do is

00:01:18,799 --> 00:01:22,159
agree on the style guide

00:01:20,720 --> 00:01:23,759
and this can be probably the most

00:01:22,159 --> 00:01:24,560
difficult part because a style guide at

00:01:23,759 --> 00:01:26,320
the end of the day

00:01:24,560 --> 00:01:28,479
is just a set of opinions that your

00:01:26,320 --> 00:01:30,560
entire team has degreed or correct

00:01:28,479 --> 00:01:31,520
and we all know that developers are very

00:01:30,560 --> 00:01:33,280
opinionated

00:01:31,520 --> 00:01:35,119
um especially when it comes to style

00:01:33,280 --> 00:01:38,159
guides i don't know why we're like this

00:01:35,119 --> 00:01:39,600
but we are um but let's pretend you've

00:01:38,159 --> 00:01:40,159
you've chosen you've agreed on the style

00:01:39,600 --> 00:01:42,960
guide

00:01:40,159 --> 00:01:44,159
now you need to implement it so the if

00:01:42,960 --> 00:01:45,520
you already have a code base

00:01:44,159 --> 00:01:47,280
you're going to have to go through every

00:01:45,520 --> 00:01:48,799
single one of your files

00:01:47,280 --> 00:01:50,320
update the formatting so it matches your

00:01:48,799 --> 00:01:51,759
new formatting for your style guide

00:01:50,320 --> 00:01:53,439
but to remember your rules as you're

00:01:51,759 --> 00:01:54,799
writing new code when you onboard new

00:01:53,439 --> 00:01:57,280
people you have to teach them

00:01:54,799 --> 00:01:58,240
the the style guide roles so there's

00:01:57,280 --> 00:02:00,320
some extra um

00:01:58,240 --> 00:02:01,759
friction and onboarding and a lot of

00:02:00,320 --> 00:02:03,119
times style guides are enforced through

00:02:01,759 --> 00:02:04,320
code reviews so

00:02:03,119 --> 00:02:06,000
you'll have a code review a lot of

00:02:04,320 --> 00:02:08,000
comments there will be like oh move this

00:02:06,000 --> 00:02:09,200
bracket to the same line or indent this

00:02:08,000 --> 00:02:11,120
with four spaces

00:02:09,200 --> 00:02:12,480
whatever your style guide rules are this

00:02:11,120 --> 00:02:14,480
can be a little off-putting

00:02:12,480 --> 00:02:15,680
and it's a lot of work so there's a

00:02:14,480 --> 00:02:18,480
better way

00:02:15,680 --> 00:02:20,720
use an auto formatter an autoformatter

00:02:18,480 --> 00:02:22,400
is just a tool that allows you to

00:02:20,720 --> 00:02:24,400
autoformat your code based on all of

00:02:22,400 --> 00:02:26,560
your style guide rules uh so you

00:02:24,400 --> 00:02:27,680
you configure it with every single rule

00:02:26,560 --> 00:02:29,680
your team has agreed on

00:02:27,680 --> 00:02:31,599
and then your code will just like

00:02:29,680 --> 00:02:33,680
automatically be formatted in

00:02:31,599 --> 00:02:35,440
um based on whatever the style guide

00:02:33,680 --> 00:02:36,879
rules are um

00:02:35,440 --> 00:02:38,720
it's best to have your formatter run at

00:02:36,879 --> 00:02:40,080
consistent periods so i

00:02:38,720 --> 00:02:41,519
personally like to have my code format

00:02:40,080 --> 00:02:42,879
on save it also means that i don't have

00:02:41,519 --> 00:02:44,080
to think about my code i can write

00:02:42,879 --> 00:02:45,519
slightly sloppy code

00:02:44,080 --> 00:02:48,080
i save and then everything's pretty and

00:02:45,519 --> 00:02:50,000
nice um i've also configured it so our

00:02:48,080 --> 00:02:52,239
auto formatter runs whenever

00:02:50,000 --> 00:02:53,120
on our pre get pre-commit hook um this

00:02:52,239 --> 00:02:54,720
means that any

00:02:53,120 --> 00:02:56,640
code that makes it into our repo is

00:02:54,720 --> 00:02:57,360
going to be formatted according to our

00:02:56,640 --> 00:02:58,480
style guide

00:02:57,360 --> 00:02:59,760
this is great because now our code

00:02:58,480 --> 00:03:01,599
reviews we don't have to focus on

00:02:59,760 --> 00:03:03,040
formatting we can just focus on logic

00:03:01,599 --> 00:03:04,480
and focus on the new features

00:03:03,040 --> 00:03:06,400
which is what code reviews are really

00:03:04,480 --> 00:03:07,440
for at the end of the day um

00:03:06,400 --> 00:03:09,120
and now your team doesn't have to think

00:03:07,440 --> 00:03:10,319
about code conventions when you onboard

00:03:09,120 --> 00:03:11,519
new people they don't have to know what

00:03:10,319 --> 00:03:13,680
the rules are because you just have a

00:03:11,519 --> 00:03:14,959
formatter that does it all for you

00:03:13,680 --> 00:03:16,720
but you still need to decide in that

00:03:14,959 --> 00:03:19,040
style guide um

00:03:16,720 --> 00:03:20,239
and as we mentioned before developers

00:03:19,040 --> 00:03:21,840
have strong opinions and they'll have

00:03:20,239 --> 00:03:23,920
differences of opinions

00:03:21,840 --> 00:03:25,440
um i feel like most of the time what's

00:03:23,920 --> 00:03:26,640
gonna happen if your team is gonna agree

00:03:25,440 --> 00:03:28,799
on like 80 to 90

00:03:26,640 --> 00:03:30,480
of the rules there's me a couple roles

00:03:28,799 --> 00:03:32,000
that the team just can't agree on

00:03:30,480 --> 00:03:33,440
that you know be a couple people that

00:03:32,000 --> 00:03:34,239
have really strong opinions on how it

00:03:33,440 --> 00:03:36,159
should be

00:03:34,239 --> 00:03:37,760
um and then you get stuck or you get a

00:03:36,159 --> 00:03:39,040
lot of meetings or you'll agree and then

00:03:37,760 --> 00:03:40,319
a couple months later you come back and

00:03:39,040 --> 00:03:44,480
you hash it out again

00:03:40,319 --> 00:03:46,640
so there's a better way use prettier

00:03:44,480 --> 00:03:48,640
so what is prettier um it's an

00:03:46,640 --> 00:03:51,519
incredibly opinionated code form

00:03:48,640 --> 00:03:52,879
formatter you you and your team will get

00:03:51,519 --> 00:03:54,879
to configure a couple

00:03:52,879 --> 00:03:56,640
of of conventions like really a small

00:03:54,879 --> 00:03:58,080
handful but for the most part prettier

00:03:56,640 --> 00:03:59,680
is going to choose everything for you

00:03:58,080 --> 00:04:02,159
so it's really that style guide and that

00:03:59,680 --> 00:04:03,680
auto formatter all in one tool together

00:04:02,159 --> 00:04:05,599
and it's really easy to use and it

00:04:03,680 --> 00:04:08,080
integrates with most popular editors

00:04:05,599 --> 00:04:08,799
so i use vs code there's a prettier

00:04:08,080 --> 00:04:10,720
extension

00:04:08,799 --> 00:04:12,720
so i just set my formatter in vs code to

00:04:10,720 --> 00:04:13,040
be prettier and it formats all my code

00:04:12,720 --> 00:04:14,799
for

00:04:13,040 --> 00:04:16,320
me there's a nice tool that you can run

00:04:14,799 --> 00:04:17,199
so it will format all of your files so

00:04:16,320 --> 00:04:18,799
if you have a big

00:04:17,199 --> 00:04:20,320
code base you don't have to go through

00:04:18,799 --> 00:04:21,919
and format each individual one

00:04:20,320 --> 00:04:23,440
you just run prettier it's going to

00:04:21,919 --> 00:04:26,240
format everything you check it in

00:04:23,440 --> 00:04:28,160
and now you're good to go now there's no

00:04:26,240 --> 00:04:29,840
more fights there's no more arguments

00:04:28,160 --> 00:04:30,400
about what the best convention is to use

00:04:29,840 --> 00:04:32,400
because

00:04:30,400 --> 00:04:33,440
you just trust prettier to make those

00:04:32,400 --> 00:04:36,639
decisions

00:04:33,440 --> 00:04:39,440
um and then and then you move forward

00:04:36,639 --> 00:04:40,639
so let's summarize everyone should use a

00:04:39,440 --> 00:04:42,320
style guide it's going to keep your

00:04:40,639 --> 00:04:44,160
code formatted um and clean and

00:04:42,320 --> 00:04:45,680
consistent you should use

00:04:44,160 --> 00:04:47,440
you should always use an auto formatter

00:04:45,680 --> 00:04:48,880
to enforce your style guide otherwise

00:04:47,440 --> 00:04:51,120
your saw guide probably just isn't going

00:04:48,880 --> 00:04:52,320
to be used and at the end of the day you

00:04:51,120 --> 00:04:54,240
should really just use prettier

00:04:52,320 --> 00:04:55,680
because it's a really easy tool to use

00:04:54,240 --> 00:04:56,639
you're not going to have to argue about

00:04:55,680 --> 00:04:59,600
um

00:04:56,639 --> 00:05:01,199
code style and um it's just it's just

00:04:59,600 --> 00:05:03,759
nice and easy

00:05:01,199 --> 00:05:04,320
um that's all i have uh thank you so

00:05:03,759 --> 00:05:06,080
much

00:05:04,320 --> 00:05:07,360
you can follow me on twitter at

00:05:06,080 --> 00:05:09,759
mamamomichi

00:05:07,360 --> 00:05:20,320
um i also on my blog poster on medium

00:05:09,759 --> 00:05:20,320

YouTube URL: https://www.youtube.com/watch?v=r8pWzFs0UL0


