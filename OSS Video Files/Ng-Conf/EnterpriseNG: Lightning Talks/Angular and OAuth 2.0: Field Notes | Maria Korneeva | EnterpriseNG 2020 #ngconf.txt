Title: Angular and OAuth 2.0: Field Notes | Maria Korneeva | EnterpriseNG 2020 #ngconf
Publication date: 2021-01-04
Playlist: EnterpriseNG: Lightning Talks
Description: 
	ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:04,710 --> 00:00:08,809
[Music]

00:00:14,240 --> 00:00:18,240
perfect so i'm going to

00:00:15,599 --> 00:00:19,199
share with you some of my experiences

00:00:18,240 --> 00:00:22,560
implementing

00:00:19,199 --> 00:00:23,279
of 2.0 with angular my name is maria

00:00:22,560 --> 00:00:25,840
coniva

00:00:23,279 --> 00:00:27,119
i'm i i work as it specialist for a

00:00:25,840 --> 00:00:30,000
larry solutions

00:00:27,119 --> 00:00:30,720
company based in germany um and i also

00:00:30,000 --> 00:00:33,520
write

00:00:30,720 --> 00:00:34,719
articles for ngconf if you want to drop

00:00:33,520 --> 00:00:38,960
a line here are some

00:00:34,719 --> 00:00:41,120
contact details but since we have really

00:00:38,960 --> 00:00:42,079
tight schedule i move straight forward

00:00:41,120 --> 00:00:44,000
to the agenda

00:00:42,079 --> 00:00:45,280
that would be the normal agenda if i had

00:00:44,000 --> 00:00:47,920
an hour or two

00:00:45,280 --> 00:00:49,520
talking about this topic but today i

00:00:47,920 --> 00:00:50,480
just gonna concentrate on major

00:00:49,520 --> 00:00:52,719
takeaways

00:00:50,480 --> 00:00:55,680
from my recent project and that's the

00:00:52,719 --> 00:00:56,480
setup so we used angular we had customer

00:00:55,680 --> 00:00:58,879
authorization

00:00:56,480 --> 00:01:00,480
and resource server and since this is a

00:00:58,879 --> 00:01:03,280
single page application we

00:01:00,480 --> 00:01:04,159
had to use um code as authorization

00:01:03,280 --> 00:01:06,080
ground type

00:01:04,159 --> 00:01:07,360
because this is the most secure one or

00:01:06,080 --> 00:01:10,159
the recommended one

00:01:07,360 --> 00:01:12,560
and we ended up writing our own library

00:01:10,159 --> 00:01:16,000
but we were heavily inspired by oh

00:01:12,560 --> 00:01:18,400
zero so that's the setup so what are the

00:01:16,000 --> 00:01:20,560
main issues or pain points that we

00:01:18,400 --> 00:01:22,320
were facing during the implementation

00:01:20,560 --> 00:01:26,159
for this let's zoom in

00:01:22,320 --> 00:01:28,720
into the login flow so pretty

00:01:26,159 --> 00:01:30,240
straightforward the user clicks on login

00:01:28,720 --> 00:01:32,159
gets redirected

00:01:30,240 --> 00:01:33,280
by the authorization server to the login

00:01:32,159 --> 00:01:35,600
page

00:01:33,280 --> 00:01:37,119
authenticates with identity provider and

00:01:35,600 --> 00:01:40,159
gets redirected by the

00:01:37,119 --> 00:01:41,280
redirect uri back to the application so

00:01:40,159 --> 00:01:43,680
far so good

00:01:41,280 --> 00:01:46,079
but what if your application has to keep

00:01:43,680 --> 00:01:49,119
some state for example some input data

00:01:46,079 --> 00:01:50,720
for this you have to encrypt your data

00:01:49,119 --> 00:01:51,680
and store it somehow securely in the

00:01:50,720 --> 00:01:53,759
browser or maybe

00:01:51,680 --> 00:01:54,720
you have to store it in the database

00:01:53,759 --> 00:01:56,640
keep the id

00:01:54,720 --> 00:01:58,320
and then pass it through the whole login

00:01:56,640 --> 00:02:00,799
loop to get it back

00:01:58,320 --> 00:02:02,000
and then to restore the data so it's one

00:02:00,799 --> 00:02:04,399
of the issues

00:02:02,000 --> 00:02:06,560
what if you have multiple apps that all

00:02:04,399 --> 00:02:08,399
use the same login page so then again

00:02:06,560 --> 00:02:09,119
you have to come up with some parameters

00:02:08,399 --> 00:02:11,280
that you

00:02:09,119 --> 00:02:13,280
pass through the whole loop to the login

00:02:11,280 --> 00:02:15,760
page so that you can steer

00:02:13,280 --> 00:02:16,800
or manage its look and feel or even the

00:02:15,760 --> 00:02:19,680
choice of the

00:02:16,800 --> 00:02:21,840
identity provider what if your app has

00:02:19,680 --> 00:02:24,400
some dynamic parameters

00:02:21,840 --> 00:02:26,319
so that the redirect uri is also dynamic

00:02:24,400 --> 00:02:28,400
so you cannot just store it

00:02:26,319 --> 00:02:29,920
at the authorization server without any

00:02:28,400 --> 00:02:33,280
wildcards

00:02:29,920 --> 00:02:35,040
sometimes login is also optional

00:02:33,280 --> 00:02:37,360
for example it's just a nice feature

00:02:35,040 --> 00:02:38,319
allowing you to save some data if you're

00:02:37,360 --> 00:02:40,720
logged in

00:02:38,319 --> 00:02:42,000
um so how do you know if the user is um

00:02:40,720 --> 00:02:44,480
has skipped the login so

00:02:42,000 --> 00:02:45,200
if he or she gets back how do you

00:02:44,480 --> 00:02:47,360
prevent

00:02:45,200 --> 00:02:50,400
redirecting him or her back to the login

00:02:47,360 --> 00:02:53,680
page or how do you handle browser back

00:02:50,400 --> 00:02:55,200
um well timeout is usually it's a normal

00:02:53,680 --> 00:02:58,080
scenario for any logging

00:02:55,200 --> 00:02:59,280
um use case but we figured out we have

00:02:58,080 --> 00:03:02,239
to deal with the hybrid

00:02:59,280 --> 00:03:03,040
hibernate mode too and we figured out

00:03:02,239 --> 00:03:04,800
that

00:03:03,040 --> 00:03:06,560
the internet connection gets restored

00:03:04,800 --> 00:03:09,120
just milliseconds after

00:03:06,560 --> 00:03:11,440
the authorization request gets fired on

00:03:09,120 --> 00:03:12,800
some systems sometimes but we had to

00:03:11,440 --> 00:03:14,480
learn it the hard way that's why i'm

00:03:12,800 --> 00:03:16,640
sharing it with you

00:03:14,480 --> 00:03:17,599
um speaking about the opposite side so

00:03:16,640 --> 00:03:20,080
if the user

00:03:17,599 --> 00:03:22,319
keeps working in your app so you want

00:03:20,080 --> 00:03:23,519
him or her to stay locked in so you have

00:03:22,319 --> 00:03:26,159
to refresh it

00:03:23,519 --> 00:03:27,519
we didn't use refresh tokens because

00:03:26,159 --> 00:03:29,760
well for now it's

00:03:27,519 --> 00:03:31,840
it might be secure but it's still some

00:03:29,760 --> 00:03:33,120
use cases where it's not recommended so

00:03:31,840 --> 00:03:35,840
we used prompt

00:03:33,120 --> 00:03:36,879
none and session cookie as one of the

00:03:35,840 --> 00:03:38,799
recommendations

00:03:36,879 --> 00:03:40,799
but the thing is if your authorization

00:03:38,799 --> 00:03:42,959
server is on a different domain

00:03:40,799 --> 00:03:44,879
then your application has to create an

00:03:42,959 --> 00:03:46,879
iframe attach the iframe

00:03:44,879 --> 00:03:48,799
get the web message securely and this

00:03:46,879 --> 00:03:49,840
has to be secure please please please do

00:03:48,799 --> 00:03:51,840
secure it

00:03:49,840 --> 00:03:54,080
and then de-attach the iframe from the

00:03:51,840 --> 00:03:56,159
application but if you are too quick

00:03:54,080 --> 00:03:57,599
then some browsers for example chrome

00:03:56,159 --> 00:04:00,000
might in some cases

00:03:57,599 --> 00:04:01,519
cancel your authorization request so

00:04:00,000 --> 00:04:02,640
that's again a thing that we had to

00:04:01,519 --> 00:04:04,640
learn the hard way

00:04:02,640 --> 00:04:06,879
that's why i'm sharing it with you

00:04:04,640 --> 00:04:09,200
multiple tabs is also pretty

00:04:06,879 --> 00:04:11,360
um standard scenario so one tab has to

00:04:09,200 --> 00:04:11,840
know if the user has logged out in a

00:04:11,360 --> 00:04:13,840
different

00:04:11,840 --> 00:04:15,680
tab so we have to work with some event

00:04:13,840 --> 00:04:17,840
dispatching

00:04:15,680 --> 00:04:20,239
um and of course we have to deal with

00:04:17,840 --> 00:04:21,759
disabled cookies or blocked scripts but

00:04:20,239 --> 00:04:23,600
this is just normal it's not

00:04:21,759 --> 00:04:25,759
nothing which is specific to the

00:04:23,600 --> 00:04:28,240
standard or triangular

00:04:25,759 --> 00:04:29,680
um let's look at the other side keeping

00:04:28,240 --> 00:04:31,759
or getting parameters

00:04:29,680 --> 00:04:32,720
of the authorization request is also

00:04:31,759 --> 00:04:34,960
necessary

00:04:32,720 --> 00:04:37,040
on the other side because the login page

00:04:34,960 --> 00:04:38,960
has to have everything

00:04:37,040 --> 00:04:40,400
to make this authorization request back

00:04:38,960 --> 00:04:43,520
to the authorization server

00:04:40,400 --> 00:04:47,199
speaking of scope client id redirect uri

00:04:43,520 --> 00:04:50,000
code challenge method code challenge etc

00:04:47,199 --> 00:04:52,080
and the login page has also to deal with

00:04:50,000 --> 00:04:54,479
double logging has to prevent it

00:04:52,080 --> 00:04:55,840
on the front end and all the other stuff

00:04:54,479 --> 00:04:57,759
that i've already mentioned

00:04:55,840 --> 00:04:59,759
on the application side so as you see

00:04:57,759 --> 00:05:00,320
this is just the first part of the whole

00:04:59,759 --> 00:05:03,199
flow

00:05:00,320 --> 00:05:04,479
but it has a lot of interesting cases

00:05:03,199 --> 00:05:07,039
for now i'd say

00:05:04,479 --> 00:05:08,160
um i stop here because i think my five

00:05:07,039 --> 00:05:09,520
minutes are over

00:05:08,160 --> 00:05:11,680
but i think i'm going to write an

00:05:09,520 --> 00:05:13,440
article or even a series of articles or

00:05:11,680 --> 00:05:15,600
even a book about that because so much

00:05:13,440 --> 00:05:17,680
things to tell you about the whole

00:05:15,600 --> 00:05:19,360
um things the whole implementation

00:05:17,680 --> 00:05:21,680
experience but for now

00:05:19,360 --> 00:05:25,840
thank you for being here well let's keep

00:05:21,680 --> 00:05:25,840
in touch

00:05:29,039 --> 00:05:31,120

YouTube URL: https://www.youtube.com/watch?v=JvDHk8QUG6I


