Title: Day 1 Keynote | Brad Green & Igor Minar
Publication date: 2019-05-01
Playlist: ng-conf 2019
Description: 
	Q&A session with the entire Angular team at Google. Team members answer audience questions on the future of Angular, Ivy, Angular Elements, the CDK, diversity, and other questions.

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:00,270 --> 00:00:03,500
[Music]

00:00:07,920 --> 00:00:11,170
[Music]

00:00:11,690 --> 00:00:18,060
good morning hi I'm Brad green I'm an

00:00:16,650 --> 00:00:24,949
engineering director at Google and I

00:00:18,060 --> 00:00:27,689
manage the angular team I want to ask

00:00:24,949 --> 00:00:30,630
how many of you have been in the angular

00:00:27,689 --> 00:00:31,410
community for less than a year just show

00:00:30,630 --> 00:00:34,590
me your hands

00:00:31,410 --> 00:00:36,180
Oh oh great awesome thank you so much

00:00:34,590 --> 00:00:38,969
and for everyone who didn't raise your

00:00:36,180 --> 00:00:41,160
hand thank you for coming with us on

00:00:38,969 --> 00:00:44,280
this journey for so long it's wonderful

00:00:41,160 --> 00:00:47,160
to have you before I start and get into

00:00:44,280 --> 00:00:50,969
some serious content I want to make all

00:00:47,160 --> 00:00:53,610
of you a little bit of an insider into

00:00:50,969 --> 00:00:55,079
how angular started and why we do the

00:00:53,610 --> 00:00:59,609
things we do and how we all get to be

00:00:55,079 --> 00:01:01,199
here today when I started at Google one

00:00:59,609 --> 00:01:04,379
of the first projects I got to work on

00:01:01,199 --> 00:01:09,360
was Gmail it was pretty cool

00:01:04,379 --> 00:01:10,770
I came in 2008 at a time when Gmail had

00:01:09,360 --> 00:01:12,930
some problems and it was actually up to

00:01:10,770 --> 00:01:15,840
me I was charged with helping to solve

00:01:12,930 --> 00:01:18,150
some of these problems namely we had not

00:01:15,840 --> 00:01:23,880
shipped a new version of Gmail for six

00:01:18,150 --> 00:01:25,619
months part of the problem was that we

00:01:23,880 --> 00:01:28,590
actually we had really low test coverage

00:01:25,619 --> 00:01:32,759
we couldn't make a stable build and I

00:01:28,590 --> 00:01:34,170
remember Gideon - and argument with the

00:01:32,759 --> 00:01:37,320
tech lead his name was John and by the

00:01:34,170 --> 00:01:40,380
way he's a fine guy but we were getting

00:01:37,320 --> 00:01:42,479
into it and I remember I think I got to

00:01:40,380 --> 00:01:44,460
the point where I might have screamed at

00:01:42,479 --> 00:01:49,200
him we need to get in there and just

00:01:44,460 --> 00:01:54,360
write some tests and the thing he told

00:01:49,200 --> 00:01:57,810
me next made me stop because he said how

00:01:54,360 --> 00:02:00,750
and he looked totally defeated and I

00:01:57,810 --> 00:02:02,670
felt like a jerk because what we

00:02:00,750 --> 00:02:05,070
realized then was that it was just

00:02:02,670 --> 00:02:09,270
infrastructurally hard to build tests

00:02:05,070 --> 00:02:10,590
the way we had written Gmail we spent

00:02:09,270 --> 00:02:12,569
the next year or so digging out and

00:02:10,590 --> 00:02:13,410
we're fine now we can release Gmail

00:02:12,569 --> 00:02:16,440
multiple

00:02:13,410 --> 00:02:19,200
week everyday if we want I'm telling you

00:02:16,440 --> 00:02:20,640
this story because this stayed with me

00:02:19,200 --> 00:02:23,520
and by the way Mishka was on the team

00:02:20,640 --> 00:02:25,590
with me and this kind of set our tone

00:02:23,520 --> 00:02:28,320
for what we wanted to do and thinking

00:02:25,590 --> 00:02:30,330
that we could help more by providing a

00:02:28,320 --> 00:02:32,220
lot of infrastructure to support all of

00:02:30,330 --> 00:02:34,170
you and building rich applications and

00:02:32,220 --> 00:02:36,780
so that's what we do in angular today

00:02:34,170 --> 00:02:39,570
where we have an ecosystem that we

00:02:36,780 --> 00:02:41,390
provide that has everything that you

00:02:39,570 --> 00:02:43,590
know and love in the framework with

00:02:41,390 --> 00:02:45,630
dependency injection and change

00:02:43,590 --> 00:02:48,380
detection and declarative templates but

00:02:45,630 --> 00:02:52,260
far broader than that where we have

00:02:48,380 --> 00:02:54,090
forms and animations and itn and a rich

00:02:52,260 --> 00:02:58,380
suite of components and a framework for

00:02:54,090 --> 00:02:59,550
building those components and we do this

00:02:58,380 --> 00:03:01,320
all so that you don't have to do this

00:02:59,550 --> 00:03:05,010
work so that you can build on top of it

00:03:01,320 --> 00:03:07,770
and not have to run into the problems of

00:03:05,010 --> 00:03:09,540
not having the proper infrastructure we

00:03:07,770 --> 00:03:10,710
spend a lot of time on this we spend a

00:03:09,540 --> 00:03:16,140
lot of time making sure all of these

00:03:10,710 --> 00:03:17,459
pieces work together as one unit one of

00:03:16,140 --> 00:03:19,470
the other things we spend a lot of time

00:03:17,459 --> 00:03:22,770
on is making sure that you can come

00:03:19,470 --> 00:03:25,050
along with us to the latest version and

00:03:22,770 --> 00:03:26,280
so that when we release the next version

00:03:25,050 --> 00:03:28,380
which is going to angular version 8

00:03:26,280 --> 00:03:30,690
we're already in the release candidate

00:03:28,380 --> 00:03:33,600
phase that you can just go to update

00:03:30,690 --> 00:03:34,830
angular dot IO plugin which version

00:03:33,600 --> 00:03:37,740
you're coming from you get some simple

00:03:34,830 --> 00:03:40,800
instructions on how to do it most of the

00:03:37,740 --> 00:03:43,910
work actually happens inside the CLI

00:03:40,800 --> 00:03:46,200
when you type ng update and our packages

00:03:43,910 --> 00:03:47,700
we're able to do this because it's

00:03:46,200 --> 00:03:51,209
actually our responsibility on the

00:03:47,700 --> 00:03:53,640
angular team to upgrade to update every

00:03:51,209 --> 00:03:57,000
verge every application at Google that

00:03:53,640 --> 00:03:59,459
uses angular so we go through all of

00:03:57,000 --> 00:04:02,760
this with the apps at Google that use

00:03:59,459 --> 00:04:07,350
angular and then we bake this into this

00:04:02,760 --> 00:04:10,590
ng update command for you to use we've

00:04:07,350 --> 00:04:13,140
been working at this since version 6 but

00:04:10,590 --> 00:04:14,520
we got some really good validation that

00:04:13,140 --> 00:04:17,820
were on the right track from some of our

00:04:14,520 --> 00:04:19,560
friends at Air France and KLM where they

00:04:17,820 --> 00:04:21,630
wrote this article about hey how we

00:04:19,560 --> 00:04:24,930
upgraded a website with half a billion

00:04:21,630 --> 00:04:26,130
annual users to angular 7 in less than a

00:04:24,930 --> 00:04:26,910
day and how we're gonna do it even

00:04:26,130 --> 00:04:30,780
faster

00:04:26,910 --> 00:04:32,190
in angular 8 this is pretty cool they

00:04:30,780 --> 00:04:33,720
had this wonderful quote in here which

00:04:32,190 --> 00:04:35,220
I'll just read to you it's that we

00:04:33,720 --> 00:04:37,790
believe that the best measure of a

00:04:35,220 --> 00:04:40,170
healthy codebase and development team is

00:04:37,790 --> 00:04:43,290
the time it takes from wanting a change

00:04:40,170 --> 00:04:45,960
to the time it is developed and deployed

00:04:43,290 --> 00:04:47,400
into production or in other words my

00:04:45,960 --> 00:04:50,280
goodness how well I'm doing is an ang

00:04:47,400 --> 00:04:52,290
team is measured by how quick I can get

00:04:50,280 --> 00:04:53,730
my ideas out into production and they've

00:04:52,290 --> 00:04:55,290
actually measured this for themselves

00:04:53,730 --> 00:04:59,430
and in particular they've measured how

00:04:55,290 --> 00:05:01,110
long it took to do it for upgrading from

00:04:59,430 --> 00:05:03,270
angular from one version to another and

00:05:01,110 --> 00:05:06,480
they graphed it for us we're going from

00:05:03,270 --> 00:05:08,250
version two to four was a month four to

00:05:06,480 --> 00:05:10,830
five and five to six just two weeks I'm

00:05:08,250 --> 00:05:14,460
going to angular seven just a day that's

00:05:10,830 --> 00:05:16,620
pretty cool now it's not all stuff we've

00:05:14,460 --> 00:05:18,680
done in the ng update command it's a

00:05:16,620 --> 00:05:21,270
bunch of things that they've done to

00:05:18,680 --> 00:05:23,190
prepare to make sure that they can take

00:05:21,270 --> 00:05:25,110
advantage of our new releases every six

00:05:23,190 --> 00:05:31,020
months and that's why we give you a

00:05:25,110 --> 00:05:32,430
consistent release schedule one of the

00:05:31,020 --> 00:05:33,990
other things that might not be obvious

00:05:32,430 --> 00:05:36,860
that we spend a lot of time on is

00:05:33,990 --> 00:05:39,060
supporting the community and making it

00:05:36,860 --> 00:05:40,380
something that we love to be a part of

00:05:39,060 --> 00:05:44,460
and that's why we're here this week with

00:05:40,380 --> 00:05:46,410
you our best measure of growth for the

00:05:44,460 --> 00:05:49,080
angular community is number of people

00:05:46,410 --> 00:05:53,040
coming to our site angular do and in

00:05:49,080 --> 00:05:57,300
2018 we grew more than 50 percent to 1.5

00:05:53,040 --> 00:05:59,280
million 30-day actives on that site more

00:05:57,300 --> 00:06:01,590
than how many people are coming to our

00:05:59,280 --> 00:06:04,080
website though we actually care about

00:06:01,590 --> 00:06:05,670
what the organizers started to talk

00:06:04,080 --> 00:06:08,850
about which is how we all treat each

00:06:05,670 --> 00:06:15,180
other in this community I want to tell

00:06:08,850 --> 00:06:18,150
you a story about three years ago I was

00:06:15,180 --> 00:06:19,620
making dinner cooking in the kitchen my

00:06:18,150 --> 00:06:25,380
daughter comes in she has a burning

00:06:19,620 --> 00:06:30,060
question she says daddy when you were a

00:06:25,380 --> 00:06:32,760
kid did you pick your nose and so I was

00:06:30,060 --> 00:06:34,320
a little conflicted because on one hand

00:06:32,760 --> 00:06:36,330
I want to tell her the truth

00:06:34,320 --> 00:06:40,370
but on the other hand I want to set her

00:06:36,330 --> 00:06:40,370
up for success in life

00:06:40,460 --> 00:06:46,020
and so I say hey you know sweetie yes as

00:06:43,889 --> 00:06:48,150
a kid I did pick my nose but what I've

00:06:46,020 --> 00:06:49,950
learned is that it's important to use a

00:06:48,150 --> 00:06:52,710
tissue instead because it's sanitary I'm

00:06:49,950 --> 00:06:55,080
not going to offend anybody by picking

00:06:52,710 --> 00:06:56,460
my nose in public but she has another

00:06:55,080 --> 00:06:58,200
question she says daddy when you were a

00:06:56,460 --> 00:07:03,240
kid and you picked your boogers did you

00:06:58,200 --> 00:07:09,030
eat your boogers so again I'm a little

00:07:03,240 --> 00:07:11,760
conflicted but again I said yeah baby I

00:07:09,030 --> 00:07:13,490
probably did eat my boogers as a kid but

00:07:11,760 --> 00:07:17,240
I've learned it's better to use a tissue

00:07:13,490 --> 00:07:19,740
and that's what I want you to do I

00:07:17,240 --> 00:07:22,080
thought we were done but she has another

00:07:19,740 --> 00:07:27,960
question daddy do you want to see me eat

00:07:22,080 --> 00:07:31,500
my boogers no baby

00:07:27,960 --> 00:07:33,600
use a tissue she's progressed

00:07:31,500 --> 00:07:37,229
she's now three years older and is into

00:07:33,600 --> 00:07:40,139
burping contests I'm telling you the

00:07:37,229 --> 00:07:41,540
story because what she was really asking

00:07:40,139 --> 00:07:43,740
is what's the right way for me to behave

00:07:41,540 --> 00:07:46,770
what's the acceptable way for me to

00:07:43,740 --> 00:07:47,910
behave in this world and that's what I

00:07:46,770 --> 00:07:49,470
want to spend just a little bit of time

00:07:47,910 --> 00:07:51,060
thinking about they already have spent

00:07:49,470 --> 00:07:52,050
some really good time explaining the

00:07:51,060 --> 00:07:54,419
code of conduct which is kind of like

00:07:52,050 --> 00:07:59,400
the backstop for a bad behavior but

00:07:54,419 --> 00:08:00,870
that's not what we're after if you trust

00:07:59,400 --> 00:08:02,850
me I want you to go through a little

00:08:00,870 --> 00:08:05,100
exercise with me and I it is safe here

00:08:02,850 --> 00:08:08,030
if you would maybe close your eyes

00:08:05,100 --> 00:08:10,050
because we're going to imagine something

00:08:08,030 --> 00:08:13,710
imagine you come to the angular

00:08:10,050 --> 00:08:19,500
community for the first time and imagine

00:08:13,710 --> 00:08:22,020
that because of who you are your race

00:08:19,500 --> 00:08:24,630
your gender the way you talk because

00:08:22,020 --> 00:08:29,220
you're new you get rejected or you get

00:08:24,630 --> 00:08:38,150
made to feel uncomfortable how would you

00:08:29,220 --> 00:08:40,140
feel maybe angry maybe wrong I would

00:08:38,150 --> 00:08:42,659
let's imagine the other thing though

00:08:40,140 --> 00:08:43,650
let's imagine that you come to the

00:08:42,659 --> 00:08:45,240
angular community you come to a

00:08:43,650 --> 00:08:47,130
conference like this one you come to an

00:08:45,240 --> 00:08:50,170
online forum you come to a meet-up and

00:08:47,130 --> 00:08:53,650
no matter who you are no matter

00:08:50,170 --> 00:08:55,840
which erases how new you are what your

00:08:53,650 --> 00:08:59,050
gender is anything else about you you

00:08:55,840 --> 00:09:02,710
get supported you get welcomed and you

00:08:59,050 --> 00:09:05,200
get all the help you need to grow and go

00:09:02,710 --> 00:09:08,050
ahead and open your eyes but let's keep

00:09:05,200 --> 00:09:09,820
imagining what if you're one of these

00:09:08,050 --> 00:09:11,500
people who got welcomed and as you grew

00:09:09,820 --> 00:09:13,510
an expertise and connections the

00:09:11,500 --> 00:09:17,020
community you were able to welcome that

00:09:13,510 --> 00:09:20,950
next set of folks coming in how would

00:09:17,020 --> 00:09:23,440
that feel pretty good and that's what

00:09:20,950 --> 00:09:26,110
we're after and largely that's what we

00:09:23,440 --> 00:09:27,640
see that's what we're so excited to be

00:09:26,110 --> 00:09:29,740
here with you about there's a couple

00:09:27,640 --> 00:09:32,620
things we can do though to improve our

00:09:29,740 --> 00:09:34,660
abilities to welcome people and there's

00:09:32,620 --> 00:09:36,250
some good talks here I'll talk about a

00:09:34,660 --> 00:09:40,660
couple of them number one

00:09:36,250 --> 00:09:42,370
Katerina's gonna talk tomorrow and her

00:09:40,660 --> 00:09:45,250
speech is called it's just a compliment

00:09:42,370 --> 00:09:49,750
after all and she's going to help

00:09:45,250 --> 00:09:51,390
inoculate us against making statements

00:09:49,750 --> 00:09:54,040
that would make women feel uncomfortable

00:09:51,390 --> 00:09:55,480
inadvertently it's easy to do if you

00:09:54,040 --> 00:09:59,500
don't know and it's super easy to avoid

00:09:55,480 --> 00:10:00,880
if you do know and then more on why

00:09:59,500 --> 00:10:02,470
would I want to be supporting a

00:10:00,880 --> 00:10:04,930
community why do I want to be involved

00:10:02,470 --> 00:10:06,250
go see Molina's talk on Friday she's

00:10:04,930 --> 00:10:08,650
going to talk about how tech communities

00:10:06,250 --> 00:10:09,340
can change your life it's like what's in

00:10:08,650 --> 00:10:12,160
it for me

00:10:09,340 --> 00:10:15,370
there's a lot Iker is also going to talk

00:10:12,160 --> 00:10:16,870
more about our values and ways that we

00:10:15,370 --> 00:10:19,330
want to engage more with all of you

00:10:16,870 --> 00:10:24,520
folks later but definitely go check

00:10:19,330 --> 00:10:26,620
these two stalks out all right I want to

00:10:24,520 --> 00:10:28,270
talk about our latest release now

00:10:26,620 --> 00:10:30,820
angular version eight we're in the

00:10:28,270 --> 00:10:32,350
release candidate phase and we've been

00:10:30,820 --> 00:10:35,260
in release candidate for about a week we

00:10:32,350 --> 00:10:37,870
usually give ourselves four weeks like a

00:10:35,260 --> 00:10:38,860
month to bake out any of the final bugs

00:10:37,870 --> 00:10:40,870
once we think we're at release

00:10:38,860 --> 00:10:44,230
candidates so we're headed for a version

00:10:40,870 --> 00:10:47,380
eight final at the end of May and then

00:10:44,230 --> 00:10:48,760
this will be important later version we

00:10:47,380 --> 00:10:52,140
do a releases every six months so

00:10:48,760 --> 00:10:54,070
version nine is going to be coming in q4

00:10:52,140 --> 00:10:55,720
let's talk through what we've done in

00:10:54,070 --> 00:10:57,250
version 8 there's a lot more than we

00:10:55,720 --> 00:10:59,410
thought we would have number one you can

00:10:57,250 --> 00:11:00,880
try it today in the release Kennedy and

00:10:59,410 --> 00:11:03,439
we hope you do you can just go to update

00:11:00,880 --> 00:11:05,720
angular yo for the instructions

00:11:03,439 --> 00:11:09,859
on how to do it and you can get all the

00:11:05,720 --> 00:11:12,739
docs at necks in Gaylord IO once version

00:11:09,859 --> 00:11:14,629
8 becomes the stable version it's just

00:11:12,739 --> 00:11:19,669
going to be the docks at angular IO at

00:11:14,629 --> 00:11:21,079
that point big feature for version 8 you

00:11:19,669 --> 00:11:23,569
can make your apps all of your apps

00:11:21,079 --> 00:11:25,429
right now quite a bit smaller with this

00:11:23,569 --> 00:11:28,429
new feature called differential loading

00:11:25,429 --> 00:11:31,489
the way it works is this we have old

00:11:28,429 --> 00:11:33,319
browsers legacy browsers that need big

00:11:31,489 --> 00:11:35,659
sets of polyfills and they can only

00:11:33,319 --> 00:11:37,339
really handle es5 syntax and so what

00:11:35,659 --> 00:11:38,989
we're going to do with differential

00:11:37,339 --> 00:11:42,559
Odie's we create two bundles one for the

00:11:38,989 --> 00:11:45,339
old legacy browsers and then a minimal

00:11:42,559 --> 00:11:48,019
set of polyfills and using the modern

00:11:45,339 --> 00:11:51,559
JavaScript syntax which is actually much

00:11:48,019 --> 00:11:53,539
smaller they get served to the evergreen

00:11:51,559 --> 00:11:55,879
browsers the cool thing about this is

00:11:53,539 --> 00:11:58,970
there's no server config to change this

00:11:55,879 --> 00:12:00,529
happens all in the client requests so

00:11:58,970 --> 00:12:03,409
there's really no reason not to use it

00:12:00,529 --> 00:12:05,839
one bonus is that if you use this you're

00:12:03,409 --> 00:12:10,729
also set up to work well if the search

00:12:05,839 --> 00:12:12,229
engines if you care about SEO we tried

00:12:10,729 --> 00:12:13,669
this out on many different apps one of

00:12:12,229 --> 00:12:16,189
them that we maintain a lot or we do a

00:12:13,669 --> 00:12:19,489
lot worth is our angular do site we

00:12:16,189 --> 00:12:20,869
saved about 41 K here and from trying it

00:12:19,489 --> 00:12:22,549
out in other applications we think

00:12:20,869 --> 00:12:27,669
you're going to save somewhere between 7

00:12:22,549 --> 00:12:27,669
and 20% it's a pretty good deal

00:12:32,079 --> 00:12:37,040
definitely something to try once you get

00:12:34,040 --> 00:12:39,440
home ton of other features came in

00:12:37,040 --> 00:12:42,050
version eight number one we're extending

00:12:39,440 --> 00:12:44,089
the ability for you to customize the CLI

00:12:42,050 --> 00:12:45,829
with the future called builders where

00:12:44,089 --> 00:12:47,540
last year with schematics we gave you

00:12:45,829 --> 00:12:49,730
the ability to change the files the

00:12:47,540 --> 00:12:52,069
amount we output now with builders we

00:12:49,730 --> 00:12:53,569
give you the ability to change which

00:12:52,069 --> 00:12:54,910
tools run and in which order and

00:12:53,569 --> 00:12:57,529
orchestrate it yourself

00:12:54,910 --> 00:13:00,439
we're we have a set of features that

00:12:57,529 --> 00:13:02,569
we're starting to extend or build on top

00:13:00,439 --> 00:13:04,699
of builders giving you the ability to

00:13:02,569 --> 00:13:08,060
deploy your applications right from the

00:13:04,699 --> 00:13:11,449
angular CLI today in minkos talk later

00:13:08,060 --> 00:13:15,529
in this room you'll see him demonstrate

00:13:11,449 --> 00:13:17,170
deploying from the CLI to firebase and

00:13:15,529 --> 00:13:20,120
we have folks from the azure team

00:13:17,170 --> 00:13:21,529
working on deploy to Azure and many

00:13:20,120 --> 00:13:24,379
other folks just starting mingle we'll

00:13:21,529 --> 00:13:26,839
talk more about it later today we added

00:13:24,379 --> 00:13:28,970
support in the CLI for web workers so

00:13:26,839 --> 00:13:31,459
you can easily move some of the work

00:13:28,970 --> 00:13:34,129
that you're doing out of the main UI

00:13:31,459 --> 00:13:35,660
thread into a separate worker thread so

00:13:34,129 --> 00:13:37,009
it can never interrupt what the users

00:13:35,660 --> 00:13:40,459
doing and we're actually using this on

00:13:37,009 --> 00:13:43,100
angular io ourselves to move the search

00:13:40,459 --> 00:13:45,769
indexing for the online searching off

00:13:43,100 --> 00:13:47,750
into a worker thread so that it can't

00:13:45,769 --> 00:13:49,310
interrupt what the users are doing we've

00:13:47,750 --> 00:13:50,720
made many service worker improvements so

00:13:49,310 --> 00:13:53,240
if you're building progressive web apps

00:13:50,720 --> 00:13:55,550
on angular you're gonna have a better

00:13:53,240 --> 00:13:57,230
time with a better set of api's we've

00:13:55,550 --> 00:13:59,930
standardized the way we do lazy loading

00:13:57,230 --> 00:14:02,149
we're today in angular 7 you do lazy

00:13:59,930 --> 00:14:05,329
loading in the router through a special

00:14:02,149 --> 00:14:06,920
string format that we invented and in

00:14:05,329 --> 00:14:08,779
version 8 and going forward you're going

00:14:06,920 --> 00:14:11,959
to use the standard browser import

00:14:08,779 --> 00:14:15,259
mechanism the big important thing about

00:14:11,959 --> 00:14:17,930
this is that now instead of us having to

00:14:15,259 --> 00:14:19,339
have a special angular version of web

00:14:17,930 --> 00:14:21,079
pack or roll-up or any of these other

00:14:19,339 --> 00:14:23,329
tools these tools now all just

00:14:21,079 --> 00:14:25,040
understand the way we need to do code

00:14:23,329 --> 00:14:26,329
splitting and you can use it without in

00:14:25,040 --> 00:14:30,470
the box without waiting for us to build

00:14:26,329 --> 00:14:31,910
a special plugin we're still helping

00:14:30,470 --> 00:14:34,610
with folks who need to migrate from

00:14:31,910 --> 00:14:37,100
angularjs to angular and we've built a

00:14:34,610 --> 00:14:39,230
compatibility layer for the router where

00:14:37,100 --> 00:14:41,420
the dollar sign location service in

00:14:39,230 --> 00:14:43,880
angularjs we now emulate it inside

00:14:41,420 --> 00:14:45,020
angular so that if you're doing a

00:14:43,880 --> 00:14:47,990
migration you can

00:14:45,020 --> 00:14:49,370
use only the angular router and it can

00:14:47,990 --> 00:14:53,810
do everything that the old angularjs

00:14:49,370 --> 00:14:57,230
router did we're working on better IDE

00:14:53,810 --> 00:14:59,720
completions and we've built a better DTS

00:14:57,230 --> 00:15:01,970
roll up so that the IDE s can actually

00:14:59,720 --> 00:15:03,920
give you better information and that

00:15:01,970 --> 00:15:05,360
we've also built I simplified getting

00:15:03,920 --> 00:15:07,580
started guides so that if you have

00:15:05,360 --> 00:15:10,190
friends or coworkers or other people who

00:15:07,580 --> 00:15:12,260
need to learn angular we've got a much

00:15:10,190 --> 00:15:14,390
easier way to do it we've got links for

00:15:12,260 --> 00:15:15,560
all of these things in the speaker notes

00:15:14,390 --> 00:15:20,000
and we're gonna give you a link to the

00:15:15,560 --> 00:15:23,630
slide deck at the end that's the main

00:15:20,000 --> 00:15:25,520
stuff that is completely done we have a

00:15:23,630 --> 00:15:26,990
bunch of a couple big projects that

00:15:25,520 --> 00:15:29,660
you've probably heard before if you've

00:15:26,990 --> 00:15:31,040
been to one of our talks that are still

00:15:29,660 --> 00:15:33,890
a bit of a work in progress but that

00:15:31,040 --> 00:15:37,760
some of us should be using today and

00:15:33,890 --> 00:15:40,730
these are basil for doing builds and ivy

00:15:37,760 --> 00:15:43,760
on our new rendering engine let's start

00:15:40,730 --> 00:15:45,260
with basil basil is the core of the

00:15:43,760 --> 00:15:47,750
build system at Google we've been using

00:15:45,260 --> 00:15:49,130
it for over 12 years and we're now

00:15:47,750 --> 00:15:51,860
trying to bring it to the outside world

00:15:49,130 --> 00:15:54,230
you can think of this as the thing that

00:15:51,860 --> 00:15:56,000
orchestrates how all my tools run how

00:15:54,230 --> 00:15:58,730
typescript and web pack and roll up and

00:15:56,000 --> 00:16:00,980
sass on all of these things get run to

00:15:58,730 --> 00:16:05,090
make them run as efficiently in parallel

00:16:00,980 --> 00:16:07,040
and as distributed as possible in the

00:16:05,090 --> 00:16:08,450
CLI today we do a reasonable job of

00:16:07,040 --> 00:16:10,520
building but there are Headroom limits

00:16:08,450 --> 00:16:14,720
and we've partnered with the basil team

00:16:10,520 --> 00:16:15,950
to remove those limits in the CLI we're

00:16:14,720 --> 00:16:17,780
doing this because there's actually

00:16:15,950 --> 00:16:20,540
there's this shift that's happening

00:16:17,780 --> 00:16:22,340
where it used to be that most of the

00:16:20,540 --> 00:16:24,230
logic that I would write from

00:16:22,340 --> 00:16:27,010
applications was on the server side in

00:16:24,230 --> 00:16:29,210
Java or C sharp or some of the language

00:16:27,010 --> 00:16:30,770
more of its moving to the client because

00:16:29,210 --> 00:16:33,920
we want to build these rich immersive

00:16:30,770 --> 00:16:36,740
experiences for people when they use our

00:16:33,920 --> 00:16:39,860
applications and with it the complexity

00:16:36,740 --> 00:16:42,650
comes over to but unlike Java and

00:16:39,860 --> 00:16:47,780
c-sharp and C++ on all these languages

00:16:42,650 --> 00:16:49,790
who have a very rich and integrated

00:16:47,780 --> 00:16:51,320
built environment we haven't had that

00:16:49,790 --> 00:16:52,370
over on the side of JavaScript and

00:16:51,320 --> 00:16:56,180
that's what we're trying to bring over

00:16:52,370 --> 00:16:57,500
with basil some big benefits were after

00:16:56,180 --> 00:16:58,730
number one is we want to have

00:16:57,500 --> 00:17:00,350
incremental build and test so if

00:16:58,730 --> 00:17:02,870
I make a small change to the code I

00:17:00,350 --> 00:17:06,260
should also see just a small rebuild

00:17:02,870 --> 00:17:09,169
time we want to have the ability to do

00:17:06,260 --> 00:17:11,630
full stack tests and deployment so that

00:17:09,169 --> 00:17:13,520
if I'm building a front end and a back

00:17:11,630 --> 00:17:14,900
end separately we want them actually now

00:17:13,520 --> 00:17:16,730
to be able to live together in a single

00:17:14,900 --> 00:17:19,250
build so I can guarantee my deployments

00:17:16,730 --> 00:17:20,630
are gonna work together and then we want

00:17:19,250 --> 00:17:23,000
to be able to scale better by moving

00:17:20,630 --> 00:17:25,100
those builds and tests out from my

00:17:23,000 --> 00:17:26,929
developer desktop onto the cloud so they

00:17:25,100 --> 00:17:28,400
can run in parallel and reuse build

00:17:26,929 --> 00:17:30,860
artifacts so that my builds can go

00:17:28,400 --> 00:17:32,990
quicker there's a bunch of folks who are

00:17:30,860 --> 00:17:35,929
already taking advantage of this of

00:17:32,990 --> 00:17:37,190
course Google we've used it across all

00:17:35,929 --> 00:17:38,660
of our development environments

00:17:37,190 --> 00:17:40,910
everybody at Google uses this to build

00:17:38,660 --> 00:17:43,970
what we build but it hasn't yet worked

00:17:40,910 --> 00:17:45,980
in the world you live in outside of our

00:17:43,970 --> 00:17:47,510
environment but we're starting to see it

00:17:45,980 --> 00:17:50,660
there's actually a team here in Salt

00:17:47,510 --> 00:17:51,770
Lake City named lucidchart probably some

00:17:50,660 --> 00:17:53,630
of you have used it they built a

00:17:51,770 --> 00:17:56,059
beautiful diagramming tool in angular on

00:17:53,630 --> 00:17:58,190
the front end with Scala on the back end

00:17:56,059 --> 00:18:00,290
and now they're able to release these

00:17:58,190 --> 00:18:04,520
front-end back-end builds together as a

00:18:00,290 --> 00:18:08,299
tested whole another example logician is

00:18:04,520 --> 00:18:10,640
a start-up in China and they're seeing

00:18:08,299 --> 00:18:11,870
much faster builds by just reusing the

00:18:10,640 --> 00:18:13,160
build artifacts and not having to

00:18:11,870 --> 00:18:16,580
rebuild things that have already been

00:18:13,160 --> 00:18:19,190
built and then another one is actually

00:18:16,580 --> 00:18:21,140
us on the angular team if you remember

00:18:19,190 --> 00:18:23,720
this chart of all of the products that

00:18:21,140 --> 00:18:25,580
we build this is something that we have

00:18:23,720 --> 00:18:27,440
to guarantee to you where everything

00:18:25,580 --> 00:18:29,900
works together they can't be their own

00:18:27,440 --> 00:18:31,820
separate repos and then us having to do

00:18:29,900 --> 00:18:33,620
every permutation of testing together to

00:18:31,820 --> 00:18:36,110
make sure that they're working this

00:18:33,620 --> 00:18:38,540
drove us to start putting them into a

00:18:36,110 --> 00:18:40,490
mono repo into a single location but

00:18:38,540 --> 00:18:41,990
without basil we're not going to get the

00:18:40,490 --> 00:18:43,309
benefits of being able to run in

00:18:41,990 --> 00:18:45,309
parallel on that scale with the

00:18:43,309 --> 00:18:48,620
reliability that we want

00:18:45,309 --> 00:18:50,840
we've moved most of angular to basil and

00:18:48,620 --> 00:18:53,809
now we're starting to parallelize it by

00:18:50,840 --> 00:18:57,440
running it in the cloud on multiple

00:18:53,809 --> 00:18:58,850
machines we've seen our CI the parts

00:18:57,440 --> 00:19:01,610
that are written in basil actually go

00:18:58,850 --> 00:19:05,950
from about an hour down to just 7.5

00:19:01,610 --> 00:19:07,880
minutes just 7.5 minutes this is

00:19:05,950 --> 00:19:10,040
dramatically impactful for our ability

00:19:07,880 --> 00:19:10,880
to get versions of angular out as fast

00:19:10,040 --> 00:19:12,710
as we want

00:19:10,880 --> 00:19:16,809
imagine having to wait

00:19:12,710 --> 00:19:16,809
sixty minutes if I had to fix a typo

00:19:17,740 --> 00:19:24,620
where we are today is that you can use

00:19:20,929 --> 00:19:26,899
basil in the CLI in version 8 and we've

00:19:24,620 --> 00:19:29,600
got a new website at basil angular al

00:19:26,899 --> 00:19:31,250
where you can find out more it's not

00:19:29,600 --> 00:19:34,580
going to be for everyone right now we're

00:19:31,250 --> 00:19:35,990
working towards that there are still a

00:19:34,580 --> 00:19:37,580
couple of rough edges but if you want to

00:19:35,990 --> 00:19:39,169
get some of the scalability benefits

00:19:37,580 --> 00:19:40,309
that we've been getting on the angular

00:19:39,169 --> 00:19:42,740
team and at some of these other

00:19:40,309 --> 00:19:44,870
companies definitely check it out and

00:19:42,740 --> 00:19:47,690
definitely check out Alex Eagles talk

00:19:44,870 --> 00:19:49,429
alex is the lead for the CLI team he's

00:19:47,690 --> 00:19:50,990
been working on the basil problem for a

00:19:49,429 --> 00:19:52,640
number of years and he is going to tell

00:19:50,990 --> 00:19:55,820
you many more details about where we are

00:19:52,640 --> 00:19:58,100
on how to get started we also have the

00:19:55,820 --> 00:20:00,350
CLI team and members from the basil team

00:19:58,100 --> 00:20:03,830
here at ng-conf three different times

00:20:00,350 --> 00:20:04,789
today from 10:00 a.m. till 1:30 Thursday

00:20:03,830 --> 00:20:08,120
from 1:00 to 3:00

00:20:04,789 --> 00:20:11,799
and Friday from 10 to 1:30 you can go

00:20:08,120 --> 00:20:11,799
talk to them and see how to get started

00:20:17,660 --> 00:20:25,970
IVA renderer if you haven't heard about

00:20:21,650 --> 00:20:28,100
it this is our rewrite of our rendering

00:20:25,970 --> 00:20:31,309
engine inside angular we have a bunch of

00:20:28,100 --> 00:20:32,960
different goals for this number one we

00:20:31,309 --> 00:20:37,760
want to make it possible for you to

00:20:32,960 --> 00:20:39,710
build smaller apps much smaller we want

00:20:37,760 --> 00:20:42,049
to give you faster compilation and like

00:20:39,710 --> 00:20:44,179
basil if you make a small change we want

00:20:42,049 --> 00:20:45,679
to have a proportionally small rebuild

00:20:44,179 --> 00:20:48,830
time so that you can build any size

00:20:45,679 --> 00:20:50,299
application we want to give you simpler

00:20:48,830 --> 00:20:53,480
debugging because debugging is a fact of

00:20:50,299 --> 00:20:54,860
life and it should be an easy task we

00:20:53,480 --> 00:20:56,539
want to do improve type checking there's

00:20:54,860 --> 00:21:00,409
parts of our templates in angular today

00:20:56,539 --> 00:21:01,460
that we don't yet type check and most

00:21:00,409 --> 00:21:03,380
importantly we want it to be backwards

00:21:01,460 --> 00:21:04,429
compatible so that if there's any

00:21:03,380 --> 00:21:06,200
changes we have to make we got either

00:21:04,429 --> 00:21:07,520
automate them or they're minimal so that

00:21:06,200 --> 00:21:10,190
everybody can come along in the journey

00:21:07,520 --> 00:21:13,220
in version 8 this is the thing that

00:21:10,190 --> 00:21:17,150
we've spent the most time on so let's

00:21:13,220 --> 00:21:19,909
see how we are you can actually try IV

00:21:17,150 --> 00:21:22,159
today in angular version 8 you can

00:21:19,909 --> 00:21:25,429
create new apps by just setting the - -

00:21:22,159 --> 00:21:28,370
enable ID flag if you want to port your

00:21:25,429 --> 00:21:29,950
existing application on top of IV we've

00:21:28,370 --> 00:21:34,630
got some simple instructions here at

00:21:29,950 --> 00:21:37,460
next angular do slash guide slash IV

00:21:34,630 --> 00:21:38,900
well what are you gonna get we've been

00:21:37,460 --> 00:21:41,120
working on backwards compatibility for a

00:21:38,900 --> 00:21:43,309
long time inside Google we have hundreds

00:21:41,120 --> 00:21:46,460
of applications that use angular and

00:21:43,309 --> 00:21:47,809
we're now passing 97% of their test

00:21:46,460 --> 00:21:49,940
suites so we're down to the very long

00:21:47,809 --> 00:21:52,370
tail this represents hundreds of

00:21:49,940 --> 00:21:54,289
thousands of tests so we're pretty

00:21:52,370 --> 00:21:57,080
confident is gonna work for a lot of you

00:21:54,289 --> 00:22:00,380
already where we think it's not going to

00:21:57,080 --> 00:22:02,299
work though and we need some help is in

00:22:00,380 --> 00:22:04,070
all of the libraries that folks use

00:22:02,299 --> 00:22:07,100
outside Google that we don't use and we

00:22:04,070 --> 00:22:09,919
don't have exposure to so if you're a

00:22:07,100 --> 00:22:10,909
team that has very few dependencies we

00:22:09,919 --> 00:22:12,470
think you could probably have a good

00:22:10,909 --> 00:22:14,840
time on Ivy and we'd love you to start

00:22:12,470 --> 00:22:17,360
using it if you've got many dependencies

00:22:14,840 --> 00:22:19,610
we think there's going to be problems if

00:22:17,360 --> 00:22:21,289
you can we'd love your help telling us

00:22:19,610 --> 00:22:23,270
which things we need to fix so in the

00:22:21,289 --> 00:22:25,280
rest of the RC period and as we hit

00:22:23,270 --> 00:22:27,669
towards version 9 we can fix all of

00:22:25,280 --> 00:22:27,669
those places

00:22:28,570 --> 00:22:32,410
we have hit our sink simpler debugging

00:22:30,730 --> 00:22:34,210
goal right now in IV if you turn it on

00:22:32,410 --> 00:22:35,610
you get breakpoints in HTML I can just

00:22:34,210 --> 00:22:38,050
go in there and the debugger will stop

00:22:35,610 --> 00:22:40,030
in my shell where I set the breakpoint

00:22:38,050 --> 00:22:42,010
and I get debuggable Strack the stack

00:22:40,030 --> 00:22:43,540
traces where I can actually walk up the

00:22:42,010 --> 00:22:48,000
stack trace and see my code in a very

00:22:43,540 --> 00:22:48,000
human readable way this is pretty cool

00:22:49,170 --> 00:22:55,660
smaller was one of our goals I'll

00:22:52,300 --> 00:22:57,550
preview we're not there yet today in

00:22:55,660 --> 00:23:00,340
view engine which is the name for our

00:22:57,550 --> 00:23:03,390
current renderer if you do a hello world

00:23:00,340 --> 00:23:07,420
application you get about 151 kilobytes

00:23:03,390 --> 00:23:09,310
minified but not compressed if you turn

00:23:07,420 --> 00:23:14,610
on different the differential loading

00:23:09,310 --> 00:23:16,900
you shave off a bit and if you use IV

00:23:14,610 --> 00:23:18,460
you shave off a bit more an IV plus

00:23:16,900 --> 00:23:21,550
differential it's starting to look

00:23:18,460 --> 00:23:23,770
pretty good and to be clear our

00:23:21,550 --> 00:23:26,770
recommendation for everyone is certainly

00:23:23,770 --> 00:23:29,740
using what you're using today with the

00:23:26,770 --> 00:23:32,650
differential loading and we need help

00:23:29,740 --> 00:23:35,500
testing the IV in the compatible mode

00:23:32,650 --> 00:23:36,730
with the differential serving notice I

00:23:35,500 --> 00:23:37,870
didn't say try anything without

00:23:36,730 --> 00:23:40,930
differential serving you should

00:23:37,870 --> 00:23:44,530
definitely use it but this is not what

00:23:40,930 --> 00:23:47,770
we're headed we made some last year we

00:23:44,530 --> 00:23:49,570
made some charts of where we want to go

00:23:47,770 --> 00:23:53,320
because we want to make very small

00:23:49,570 --> 00:23:56,200
applications possible and if you turn on

00:23:53,320 --> 00:23:59,110
IV with an experimental bootstrap API

00:23:56,200 --> 00:24:00,400
that we have it's not ready yet you get

00:23:59,110 --> 00:24:04,560
some very small builds and right now

00:24:00,400 --> 00:24:04,560
it's about 14 K again uncompressed

00:24:04,710 --> 00:24:14,200
[Applause]

00:24:11,159 --> 00:24:15,970
this would be for thrill-seekers word

00:24:14,200 --> 00:24:18,190
we're not going to document it but you

00:24:15,970 --> 00:24:22,960
can think of it as an easter egg go hunt

00:24:18,190 --> 00:24:25,509
for it there are a couple of bonuses

00:24:22,960 --> 00:24:27,669
that we were able to achieve in Ivy they

00:24:25,509 --> 00:24:29,950
weren't part of our original goals but

00:24:27,669 --> 00:24:31,210
as we were developing Ivy on the new

00:24:29,950 --> 00:24:32,320
better architecture we found we could

00:24:31,210 --> 00:24:34,659
achieve some other things number one is

00:24:32,320 --> 00:24:36,549
we are seeing lower memory requirements

00:24:34,659 --> 00:24:37,779
and then in different scenarios it's

00:24:36,549 --> 00:24:39,610
different amounts but we have an

00:24:37,779 --> 00:24:42,039
application simulation of a 100 by 100

00:24:39,610 --> 00:24:46,119
grid where it's 30% down and the

00:24:42,039 --> 00:24:48,730
material unit test is 91% down we're

00:24:46,119 --> 00:24:51,009
seeing much faster tests our angular

00:24:48,730 --> 00:24:56,409
framework tests are 38% faster than the

00:24:51,009 --> 00:24:58,450
material unit tests are 80% faster we've

00:24:56,409 --> 00:25:00,759
also been able to fix a bunch of

00:24:58,450 --> 00:25:03,429
long-standing bugs things that are

00:25:00,759 --> 00:25:05,080
probably annoying you today there are

00:25:03,429 --> 00:25:07,119
cases where change detection runs too

00:25:05,080 --> 00:25:08,769
often where class bindings overwrite

00:25:07,119 --> 00:25:10,659
other classes I've made a list in the

00:25:08,769 --> 00:25:14,139
speakers notes there's some good stuff

00:25:10,659 --> 00:25:19,090
for you to find there so where did we

00:25:14,139 --> 00:25:20,950
get to in Ivy today and version 8 yes on

00:25:19,090 --> 00:25:23,440
simpler debugging backwards-compatible

00:25:20,950 --> 00:25:26,830
lower member requirements faster tests

00:25:23,440 --> 00:25:28,869
and a bunch of bug fixes we're hoping

00:25:26,830 --> 00:25:30,970
you try it there are some things that we

00:25:28,869 --> 00:25:32,980
still need to do for version 9 we still

00:25:30,970 --> 00:25:34,629
need to reach our overall size goal need

00:25:32,980 --> 00:25:38,649
to get to the faster compilation goal

00:25:34,629 --> 00:25:40,149
and the improved type checking but this

00:25:38,649 --> 00:25:42,730
is where we're going and in version 9

00:25:40,149 --> 00:25:45,369
our big goals are number one to make ivy

00:25:42,730 --> 00:25:46,749
the default make ivy the default for

00:25:45,369 --> 00:25:48,460
everybody so everyone gets to take

00:25:46,749 --> 00:25:50,590
advantage of these benefits and number

00:25:48,460 --> 00:25:52,450
two to make sure that basil in the CLI

00:25:50,590 --> 00:25:53,740
is fully featured and scalable again so

00:25:52,450 --> 00:25:56,110
that everybody can take advantage of it

00:25:53,740 --> 00:25:57,879
if you want to hear more about what

00:25:56,110 --> 00:25:59,769
we're thinking of for version 9 you

00:25:57,879 --> 00:26:02,139
should definitely go to friday morning's

00:25:59,769 --> 00:26:03,929
keynote with misko and stephen where

00:26:02,139 --> 00:26:06,369
they're gonna deep dive into all of that

00:26:03,929 --> 00:26:07,809
I'd now like to bring Igor Minar up on

00:26:06,369 --> 00:26:09,789
stage we're just going to talk more

00:26:07,809 --> 00:26:11,710
about our motivations and design

00:26:09,789 --> 00:26:14,259
considerations for angular and how we

00:26:11,710 --> 00:26:18,090
want to work more with everyone all of

00:26:14,259 --> 00:26:18,090
you in the community thank you

00:26:18,100 --> 00:26:23,240
hello everybody my name is Igor I'm a

00:26:20,840 --> 00:26:24,710
tech lead on the angular project and as

00:26:23,240 --> 00:26:26,540
Brad mentioned one of the things I would

00:26:24,710 --> 00:26:28,010
like to share with you is some of the

00:26:26,540 --> 00:26:31,070
design considerations that go into

00:26:28,010 --> 00:26:33,050
making angular and also how we would

00:26:31,070 --> 00:26:36,200
like the angular community to be part of

00:26:33,050 --> 00:26:38,630
this one consideration that shouldn't be

00:26:36,200 --> 00:26:40,910
surprise to you by now is compatible we

00:26:38,630 --> 00:26:43,420
want angular to be compatible so that

00:26:40,910 --> 00:26:46,130
you can rely on it we want to build this

00:26:43,420 --> 00:26:48,560
successful ecosystem that people can

00:26:46,130 --> 00:26:51,500
rely on because if we learned anything

00:26:48,560 --> 00:26:54,140
from the angularjs to angular version to

00:26:51,500 --> 00:26:55,010
adventure is that we don't want to leave

00:26:54,140 --> 00:26:57,380
people behind

00:26:55,010 --> 00:26:59,270
Libyan people behind is not fun it's not

00:26:57,380 --> 00:27:01,040
funny for you it's not fun for us

00:26:59,270 --> 00:27:02,870
and we don't want to do this ever again

00:27:01,040 --> 00:27:05,360
and it was actually quite funny when

00:27:02,870 --> 00:27:07,820
recently we had a meeting where all the

00:27:05,360 --> 00:27:10,730
leads on the angular were working and

00:27:07,820 --> 00:27:13,100
we're discussing the user experience or

00:27:10,730 --> 00:27:15,820
developer experience developers will

00:27:13,100 --> 00:27:20,150
have when they try to play with IB in

00:27:15,820 --> 00:27:21,260
version 8 RC and we're discussing great

00:27:20,150 --> 00:27:23,180
details you know what its gonna look

00:27:21,260 --> 00:27:24,830
like what is it that they will see is it

00:27:23,180 --> 00:27:26,600
gonna be good what are gonna be the

00:27:24,830 --> 00:27:29,090
concerns and about 20 minutes in

00:27:26,600 --> 00:27:29,420
somebody in the room said hey wait a

00:27:29,090 --> 00:27:31,820
minute

00:27:29,420 --> 00:27:35,510
how are you really spending this much

00:27:31,820 --> 00:27:38,180
time discussing developer experience for

00:27:35,510 --> 00:27:39,950
an opt-in preview for technology that is

00:27:38,180 --> 00:27:42,470
not gonna be fully ready until much

00:27:39,950 --> 00:27:45,200
later in this year and yes we have I'm

00:27:42,470 --> 00:27:47,930
very proud of the team because it took a

00:27:45,200 --> 00:27:50,270
big mind shifts to get there but with

00:27:47,930 --> 00:27:52,850
this mind shift we can provide a much

00:27:50,270 --> 00:27:55,760
better experience for all of you but

00:27:52,850 --> 00:27:57,890
being just stable is not good enough the

00:27:55,760 --> 00:28:00,350
web is changing the user expectations

00:27:57,890 --> 00:28:03,110
are changing the developer experiences

00:28:00,350 --> 00:28:05,560
are also changing we need to keep up we

00:28:03,110 --> 00:28:09,530
need to make sure that angular doesn't

00:28:05,560 --> 00:28:11,990
stay behind and become stagnant this is

00:28:09,530 --> 00:28:15,050
why we want the angular ecosystem to be

00:28:11,990 --> 00:28:16,910
malleable and ever-evolving so that you

00:28:15,050 --> 00:28:18,290
can rely on it and you can know that all

00:28:16,910 --> 00:28:19,760
of the new things that are coming for

00:28:18,290 --> 00:28:24,050
the web will be available and supported

00:28:19,760 --> 00:28:26,330
by angular every time we talk about new

00:28:24,050 --> 00:28:29,060
feature one of the considerations is

00:28:26,330 --> 00:28:31,570
scale and when we talk about scale it's

00:28:29,060 --> 00:28:33,880
not just how to scale up but

00:28:31,570 --> 00:28:36,250
so how to scale down let me show you

00:28:33,880 --> 00:28:40,330
what I mean this is a graph I drew for a

00:28:36,250 --> 00:28:43,420
bunch of people on on our team where I'm

00:28:40,330 --> 00:28:47,080
trying to capture the number of users

00:28:43,420 --> 00:28:50,230
supported by a single application on the

00:28:47,080 --> 00:28:54,760
y-axis and the number of applications of

00:28:50,230 --> 00:28:58,300
this kind on the XY z-- on the x-axis so

00:28:54,760 --> 00:29:00,910
there is a few very few applications

00:28:58,300 --> 00:29:02,800
that support multiple billions of users

00:29:00,910 --> 00:29:03,190
out there we don't have a whole lot of

00:29:02,800 --> 00:29:07,840
them

00:29:03,190 --> 00:29:09,790
it's like Gmail Facebook and so on but

00:29:07,840 --> 00:29:11,860
as the number of users that interact

00:29:09,790 --> 00:29:13,210
with those applications drop there is an

00:29:11,860 --> 00:29:15,760
increasing number of applications that

00:29:13,210 --> 00:29:17,470
are built of that size those are all the

00:29:15,760 --> 00:29:19,840
consumer applications all the enterprise

00:29:17,470 --> 00:29:22,240
applications and all the way down to the

00:29:19,840 --> 00:29:23,920
long tail of small applications that we

00:29:22,240 --> 00:29:25,810
just built the fund or we just need a

00:29:23,920 --> 00:29:27,100
simple some permission form or we are

00:29:25,810 --> 00:29:29,800
billing billing applications for

00:29:27,100 --> 00:29:33,040
educational purposes when we build

00:29:29,800 --> 00:29:34,840
angularjs many years ago we were

00:29:33,040 --> 00:29:37,480
targeting in the long tail we were

00:29:34,840 --> 00:29:38,890
targeting the experiences were wanting

00:29:37,480 --> 00:29:40,780
to make sure that angular was easy to

00:29:38,890 --> 00:29:43,150
get started with and you can be

00:29:40,780 --> 00:29:46,810
successful very quickly and build small

00:29:43,150 --> 00:29:49,630
applications however as angularjs became

00:29:46,810 --> 00:29:50,950
more and more successful we started

00:29:49,630 --> 00:29:52,900
building bigger and bigger applications

00:29:50,950 --> 00:29:54,970
and all of a sudden we started hitting

00:29:52,900 --> 00:29:57,040
ceilings we could not scale up anymore

00:29:54,970 --> 00:29:58,060
especially as we were building big

00:29:57,040 --> 00:30:00,580
bigger and bigger enterprise

00:29:58,060 --> 00:30:04,480
applications this is why we decided to

00:30:00,580 --> 00:30:05,770
build angular version 2 and this is what

00:30:04,480 --> 00:30:07,210
we thought we were building we thought

00:30:05,770 --> 00:30:09,010
it's gonna be amazing it's gonna capture

00:30:07,210 --> 00:30:10,240
everything we had with angularjs and

00:30:09,010 --> 00:30:12,400
much more

00:30:10,240 --> 00:30:15,340
however in reality we built something

00:30:12,400 --> 00:30:17,740
like this where angular a special

00:30:15,340 --> 00:30:19,810
version 2 was primarily suitable for the

00:30:17,740 --> 00:30:22,690
enterprise use cases where you need to

00:30:19,810 --> 00:30:25,390
scale both in terms of size of the

00:30:22,690 --> 00:30:27,210
codebase and number of users a number of

00:30:25,390 --> 00:30:30,280
developers collaborating on the codebase

00:30:27,210 --> 00:30:32,410
over the years however through different

00:30:30,280 --> 00:30:35,110
versions of angular we incrementally

00:30:32,410 --> 00:30:38,920
increase the range we were both working

00:30:35,110 --> 00:30:40,900
on scaling up and scaling down and going

00:30:38,920 --> 00:30:42,370
forward we have several efforts that

00:30:40,900 --> 00:30:45,649
extend the range further

00:30:42,370 --> 00:30:47,750
with angular IV which is currently

00:30:45,649 --> 00:30:51,200
planned for version 9 we would like to

00:30:47,750 --> 00:30:53,240
capture the longtail especially with IV

00:30:51,200 --> 00:30:55,429
and in combination with elements it's

00:30:53,240 --> 00:30:57,049
perfectly suitable for use cases where

00:30:55,429 --> 00:30:58,340
you don't need a single page application

00:30:57,049 --> 00:30:59,649
you're just building something much

00:30:58,340 --> 00:31:02,480
smaller than that

00:30:59,649 --> 00:31:05,389
additionally we have a project that we

00:31:02,480 --> 00:31:06,559
haven't discussed much in public we call

00:31:05,389 --> 00:31:10,610
it angular Photon

00:31:06,559 --> 00:31:12,830
this is a project that is focused on

00:31:10,610 --> 00:31:16,070
making sure that angular can also scale

00:31:12,830 --> 00:31:18,710
up and allow us to build bigger and

00:31:16,070 --> 00:31:21,259
bigger application there are going to be

00:31:18,710 --> 00:31:24,070
several talks that will go much more in

00:31:21,259 --> 00:31:26,419
detail and into these two efforts

00:31:24,070 --> 00:31:29,330
Manford is going to do a talk on

00:31:26,419 --> 00:31:32,840
elements and IV and how that can help

00:31:29,330 --> 00:31:34,940
with the longtail and Rob is going to

00:31:32,840 --> 00:31:37,279
talk about how not every application has

00:31:34,940 --> 00:31:39,860
to be SVA but he's also going to cover

00:31:37,279 --> 00:31:44,120
some of the scaling up efforts that we

00:31:39,860 --> 00:31:45,980
have in works in angular if you look at

00:31:44,120 --> 00:31:48,649
this graph one thing that you will see

00:31:45,980 --> 00:31:51,440
is there is still space that is not

00:31:48,649 --> 00:31:53,750
covered and that is the space where you

00:31:51,440 --> 00:31:55,549
really need technologies that scale up

00:31:53,750 --> 00:31:58,129
and allow you to build two enormous

00:31:55,549 --> 00:32:00,610
applications this is not where angular

00:31:58,129 --> 00:32:02,929
is today yet we would love to be there

00:32:00,610 --> 00:32:06,169
there are some people that are exploring

00:32:02,929 --> 00:32:08,149
this in a successful in certain use

00:32:06,169 --> 00:32:12,110
cases but this is not the sweet spot for

00:32:08,149 --> 00:32:16,220
angular yet however approximately a year

00:32:12,110 --> 00:32:19,190
ago we we got a new sibling team at

00:32:16,220 --> 00:32:21,230
Google and it's this team that is

00:32:19,190 --> 00:32:24,740
focused specifically on this segment

00:32:21,230 --> 00:32:26,509
they build the technologies and the

00:32:24,740 --> 00:32:29,539
designs that support the biggest

00:32:26,509 --> 00:32:31,399
applications at Google over the several

00:32:29,539 --> 00:32:33,559
months of their several past months

00:32:31,399 --> 00:32:34,759
we've been collaborating and the

00:32:33,559 --> 00:32:37,759
collaboration is very focused primarily

00:32:34,759 --> 00:32:41,960
on exploring whether it will be feasible

00:32:37,759 --> 00:32:45,049
to take some of these technologies and

00:32:41,960 --> 00:32:47,480
make them accessible to the open source

00:32:45,049 --> 00:32:49,970
community in the future we'll update you

00:32:47,480 --> 00:32:51,830
in the future once we have things to to

00:32:49,970 --> 00:32:53,899
share but in the meantime I would like

00:32:51,830 --> 00:32:55,539
to actually welcome the team here

00:32:53,899 --> 00:32:57,529
because we have several of them here

00:32:55,539 --> 00:32:59,600
they wanted to know what angular is

00:32:57,529 --> 00:33:01,519
about they are not part of the angular

00:32:59,600 --> 00:33:03,620
community yet but they would like to

00:33:01,519 --> 00:33:06,049
understand us better so if you do bump

00:33:03,620 --> 00:33:08,960
into them please extend them extra

00:33:06,049 --> 00:33:13,059
kindness so that they get to feel what

00:33:08,960 --> 00:33:19,179
the angular magic is all about this

00:33:13,059 --> 00:33:22,340
thank you this this brings us to the

00:33:19,179 --> 00:33:25,730
another design of consideration which is

00:33:22,340 --> 00:33:27,769
angular is very people-oriented I was

00:33:25,730 --> 00:33:29,299
going to talk about this but Stephanie

00:33:27,769 --> 00:33:30,740
did a much better job interviewing a

00:33:29,299 --> 00:33:33,470
lots of people we played this

00:33:30,740 --> 00:33:35,840
documentary before many people came into

00:33:33,470 --> 00:33:37,879
into the room so I encourage you to go

00:33:35,840 --> 00:33:39,769
online and watch it it's a documentary

00:33:37,879 --> 00:33:42,499
about angular community and it talks

00:33:39,769 --> 00:33:45,200
about our values and how we work and

00:33:42,499 --> 00:33:48,019
what I like about it the most the most

00:33:45,200 --> 00:33:50,960
is that it captures the essence which is

00:33:48,019 --> 00:33:53,629
we are here to enable creations of

00:33:50,960 --> 00:33:55,460
applications that people love to use and

00:33:53,629 --> 00:33:57,259
this application should be built by

00:33:55,460 --> 00:34:02,480
developers that love to build them in a

00:33:57,259 --> 00:34:05,990
community that is welcoming and as the

00:34:02,480 --> 00:34:08,470
community we are primarily living in the

00:34:05,990 --> 00:34:12,859
open source world most of the work

00:34:08,470 --> 00:34:16,790
happens on github and this is where a

00:34:12,859 --> 00:34:20,629
lot of the open source communication and

00:34:16,790 --> 00:34:23,119
engagement happens a lot of our team is

00:34:20,629 --> 00:34:25,480
actually sourced from the external

00:34:23,119 --> 00:34:27,919
community from the open source world and

00:34:25,480 --> 00:34:31,520
many people don't know that while we

00:34:27,919 --> 00:34:33,079
built everything on github we have this

00:34:31,520 --> 00:34:36,349
very elaborate continuous integration

00:34:33,079 --> 00:34:38,419
story with Google where as we merge

00:34:36,349 --> 00:34:40,730
changes to the master branch on github

00:34:38,419 --> 00:34:42,560
we almost immediately bring it to Google

00:34:40,730 --> 00:34:45,200
where it's available to all of the

00:34:42,560 --> 00:34:48,919
developers that use angular within a few

00:34:45,200 --> 00:34:51,349
minutes or hours this allows us to get a

00:34:48,919 --> 00:34:53,060
very quick feedback loop on how things

00:34:51,349 --> 00:34:54,379
are working and if we are breaking

00:34:53,060 --> 00:34:56,899
anything or if we are making things

00:34:54,379 --> 00:34:59,720
better warps this allows us to extend

00:34:56,899 --> 00:35:02,510
higher quality assurance to the releases

00:34:59,720 --> 00:35:03,470
that we eventually make a ship to the

00:35:02,510 --> 00:35:06,799
open-source community

00:35:03,470 --> 00:35:08,710
so yes Google runs on the head of

00:35:06,799 --> 00:35:10,840
angular and it's

00:35:08,710 --> 00:35:13,270
kind of insane I don't have time to talk

00:35:10,840 --> 00:35:14,500
about it here but if you are interested

00:35:13,270 --> 00:35:17,620
in this I'm happy to talk about it in

00:35:14,500 --> 00:35:22,150
the hallway so just grab me one of the

00:35:17,620 --> 00:35:25,270
things that came out of this this kind

00:35:22,150 --> 00:35:26,830
of process where angular team works on

00:35:25,270 --> 00:35:28,930
the boundaries between Google and the

00:35:26,830 --> 00:35:31,540
open-source is that angular became this

00:35:28,930 --> 00:35:33,220
conduit for exchange of information but

00:35:31,540 --> 00:35:35,890
also technology is between Google and

00:35:33,220 --> 00:35:37,600
open-source and a good example of this

00:35:35,890 --> 00:35:40,600
there are actually two good examples one

00:35:37,600 --> 00:35:42,520
is ivy Ivy was conceived outside of

00:35:40,600 --> 00:35:44,800
Google it was conceived in the

00:35:42,520 --> 00:35:48,090
open-source community was pitched to the

00:35:44,800 --> 00:35:51,340
angular team we really liked it and we

00:35:48,090 --> 00:35:55,000
worked on this project for at this point

00:35:51,340 --> 00:35:58,510
year and a half or maybe even more and

00:35:55,000 --> 00:36:01,090
in a few weeks it's gonna have a major

00:35:58,510 --> 00:36:02,890
impact on Google on the other hand we

00:36:01,090 --> 00:36:05,470
have a technology like basil that is a

00:36:02,890 --> 00:36:08,070
core part of how based on how Google

00:36:05,470 --> 00:36:10,210
works and the angular team is

00:36:08,070 --> 00:36:13,630
collaborating with the basil team to

00:36:10,210 --> 00:36:15,940
take this very unique and scalable

00:36:13,630 --> 00:36:18,390
technology and make it accessible to the

00:36:15,940 --> 00:36:22,150
web development in the open source world

00:36:18,390 --> 00:36:26,170
if you look behind the curtain what

00:36:22,150 --> 00:36:29,140
you'll see that there is 43 or so

00:36:26,170 --> 00:36:31,630
amazing people that make up the angular

00:36:29,140 --> 00:36:34,510
team and these people are organized into

00:36:31,630 --> 00:36:36,940
five sub teams to our cross-cutting

00:36:34,510 --> 00:36:38,920
devrel and documentation and then three

00:36:36,940 --> 00:36:41,860
a product oriented the tooling framework

00:36:38,920 --> 00:36:44,530
and components and it's it's this team

00:36:41,860 --> 00:36:47,350
that creates the structure that supports

00:36:44,530 --> 00:36:51,520
everything we do in the angular

00:36:47,350 --> 00:36:54,640
community at the AI I draw this pyramid

00:36:51,520 --> 00:36:56,410
and I for the longest time I didn't want

00:36:54,640 --> 00:36:58,000
to make Googlers special but there is

00:36:56,410 --> 00:36:59,530
one thing that does make Google are

00:36:58,000 --> 00:37:01,690
special and when it comes to building

00:36:59,530 --> 00:37:03,430
angular which is they have access to the

00:37:01,690 --> 00:37:05,440
internal systems to the source

00:37:03,430 --> 00:37:08,080
repository they're able to support and

00:37:05,440 --> 00:37:10,150
debug internal applications and this

00:37:08,080 --> 00:37:12,700
makes them unique other than that

00:37:10,150 --> 00:37:16,660
everybody else who's collaborating on

00:37:12,700 --> 00:37:21,340
angular and about half of the team is

00:37:16,660 --> 00:37:24,730
non Googlers have equal rights in our

00:37:21,340 --> 00:37:27,940
influential in building angular one of

00:37:24,730 --> 00:37:29,740
the things that has been concerned to me

00:37:27,940 --> 00:37:31,450
for a long time is that the bottom of

00:37:29,740 --> 00:37:35,020
the pyramid which is the community

00:37:31,450 --> 00:37:37,180
contributions the issues PRS keeps on

00:37:35,020 --> 00:37:39,430
growing much faster than the top of the

00:37:37,180 --> 00:37:41,740
pyramid and if you saw some of the

00:37:39,430 --> 00:37:45,940
graphs that Brad shirt you understand my

00:37:41,740 --> 00:37:48,250
concern how to deal with the growth of

00:37:45,940 --> 00:37:51,340
the community in a way where the team is

00:37:48,250 --> 00:37:55,000
not overburdened and we're still able to

00:37:51,340 --> 00:37:57,310
provide you with excellent support this

00:37:55,000 --> 00:37:58,600
is why a couple months ago we kicked off

00:37:57,310 --> 00:38:01,090
a new program called angular

00:37:58,600 --> 00:38:04,570
collaborators this is a program that is

00:38:01,090 --> 00:38:06,310
focused on enabling angular development

00:38:04,570 --> 00:38:08,800
to scale through open source

00:38:06,310 --> 00:38:11,410
collaboration what that essentially

00:38:08,800 --> 00:38:13,860
means is we're taking a slice from the

00:38:11,410 --> 00:38:16,240
bottom of the pyramid we're taking the

00:38:13,860 --> 00:38:18,790
contributors to the angular repository

00:38:16,240 --> 00:38:21,130
picking the ones that have been the most

00:38:18,790 --> 00:38:23,440
useful the most impactful the ones that

00:38:21,130 --> 00:38:25,540
were most helpful and turning them into

00:38:23,440 --> 00:38:27,490
true collaborators with elevated

00:38:25,540 --> 00:38:29,200
privileges inviting them to meetings

00:38:27,490 --> 00:38:32,920
assigning the mentors and making them

00:38:29,200 --> 00:38:35,620
part of the team in this way we're able

00:38:32,920 --> 00:38:37,420
to onboard people through two different

00:38:35,620 --> 00:38:39,250
flows the first one is through the

00:38:37,420 --> 00:38:42,490
community where we are trying to take

00:38:39,250 --> 00:38:45,910
the passion on individuals and turn it

00:38:42,490 --> 00:38:48,250
into an impact and make impact on the

00:38:45,910 --> 00:38:50,470
entire community the other flow is

00:38:48,250 --> 00:38:54,070
through enterprises we want to extend an

00:38:50,470 --> 00:38:56,050
opportunity to enterprises to invest to

00:38:54,070 --> 00:38:58,840
invest in development of angular in

00:38:56,050 --> 00:39:02,140
exchange for having an in-house

00:38:58,840 --> 00:39:05,560
expertise having better support and also

00:39:02,140 --> 00:39:09,730
having ability to inform the roadmap of

00:39:05,560 --> 00:39:12,730
the entire product there are several

00:39:09,730 --> 00:39:14,380
goals behind this one is the scaling we

00:39:12,730 --> 00:39:16,630
are trying also to increase the

00:39:14,380 --> 00:39:19,870
diversity because the more people come

00:39:16,630 --> 00:39:21,610
and join the angular team they come from

00:39:19,870 --> 00:39:23,110
different backgrounds and that informs a

00:39:21,610 --> 00:39:25,030
decision making it allows us to make

00:39:23,110 --> 00:39:26,380
better decisions we really want to

00:39:25,030 --> 00:39:29,800
engage better with the community and

00:39:26,380 --> 00:39:32,110
bring more of the community members to

00:39:29,800 --> 00:39:33,349
the team we want to create opportunities

00:39:32,110 --> 00:39:35,150
for this

00:39:33,349 --> 00:39:37,190
community members because they deserve

00:39:35,150 --> 00:39:38,989
it they've been doing amazing things for

00:39:37,190 --> 00:39:41,660
us for years and we would like to

00:39:38,989 --> 00:39:43,729
highlight them and lastly we would like

00:39:41,660 --> 00:39:45,559
to ensure a long-term success of the

00:39:43,729 --> 00:39:48,349
project because the more people invested

00:39:45,559 --> 00:39:52,430
in the future of angular the longer the

00:39:48,349 --> 00:39:55,089
future will be in the last month we on

00:39:52,430 --> 00:39:58,130
board it nine community collaborators

00:39:55,089 --> 00:40:01,160
these people have been the ones that

00:39:58,130 --> 00:40:03,559
were the most active the most useful on

00:40:01,160 --> 00:40:06,499
github and we're imagine immediately

00:40:03,559 --> 00:40:10,819
able to help us I want to highlight

00:40:06,499 --> 00:40:12,979
especially Adam jolly and Manfred who

00:40:10,819 --> 00:40:15,259
had a big impact on many of the features

00:40:12,979 --> 00:40:17,839
that we shipped in version 8 and I'm

00:40:15,259 --> 00:40:19,009
looking forward to seeing big

00:40:17,839 --> 00:40:22,039
contributions from the other

00:40:19,009 --> 00:40:23,930
collaborators in the future the plan is

00:40:22,039 --> 00:40:25,460
to onboard more people from the

00:40:23,930 --> 00:40:27,319
community and make them part of the team

00:40:25,460 --> 00:40:29,390
within 2019

00:40:27,319 --> 00:40:32,029
we think we have a capacity for about 40

00:40:29,390 --> 00:40:33,499
people just so that we can scale the

00:40:32,029 --> 00:40:37,999
mentorship and provide good experience

00:40:33,499 --> 00:40:39,920
but this is the plan in the long run

00:40:37,999 --> 00:40:43,819
what I would like to do is to make sure

00:40:39,920 --> 00:40:46,579
that the angular collaborators have the

00:40:43,819 --> 00:40:48,950
prestige that the angular gdes have

00:40:46,579 --> 00:40:51,680
angular GD is a Google developer experts

00:40:48,950 --> 00:40:53,599
is a program where we highlight the most

00:40:51,680 --> 00:40:56,509
active and the most prolific and the

00:40:53,599 --> 00:40:58,400
most impactful members of the community

00:40:56,509 --> 00:41:00,650
that are focused on developer relations

00:40:58,400 --> 00:41:02,420
and outreach to the community the

00:41:00,650 --> 00:41:04,460
angular collaborates program is focused

00:41:02,420 --> 00:41:07,460
on actually building the product and

00:41:04,460 --> 00:41:09,619
it's not just building the code it's

00:41:07,460 --> 00:41:12,619
also about documentation triaging a

00:41:09,619 --> 00:41:15,410
support design user experience research

00:41:12,619 --> 00:41:18,829
and so on at this point you might be

00:41:15,410 --> 00:41:20,900
wondering how do I join and that's valid

00:41:18,829 --> 00:41:23,989
question many people are excited when I

00:41:20,900 --> 00:41:25,339
when I talk about this opportunity for

00:41:23,989 --> 00:41:27,170
now all I can tell you is if you are

00:41:25,339 --> 00:41:29,150
community member just be awesome

00:41:27,170 --> 00:41:31,609
contributor helped us with finding good

00:41:29,150 --> 00:41:34,069
issues help us with sending high-quality

00:41:31,609 --> 00:41:35,390
pull requests and help us iterate on

00:41:34,069 --> 00:41:39,589
this pull request so we can merge them

00:41:35,390 --> 00:41:41,869
and we will be picking the most active

00:41:39,589 --> 00:41:43,940
ones and the most impactful ones for the

00:41:41,869 --> 00:41:45,499
next round of additions if you are

00:41:43,940 --> 00:41:46,710
enterprise and want to invest in

00:41:45,499 --> 00:41:49,140
building angular

00:41:46,710 --> 00:41:53,010
please contact devrel Meghalaya and

00:41:49,140 --> 00:41:55,830
we'll be discussing this with you we

00:41:53,010 --> 00:41:57,420
discuss many things that influence how

00:41:55,830 --> 00:41:59,609
we think about angular and how to build

00:41:57,420 --> 00:42:00,900
it we talked about compatibility how we

00:41:59,609 --> 00:42:05,430
don't want to people leave people behind

00:42:00,900 --> 00:42:08,040
we talked about scalability and not just

00:42:05,430 --> 00:42:10,020
scaling up but also scaling down we

00:42:08,040 --> 00:42:13,500
wanted and we talked about how angular

00:42:10,020 --> 00:42:14,760
is evergreen we want to keep up with the

00:42:13,500 --> 00:42:17,130
changes in technology with the

00:42:14,760 --> 00:42:18,930
expectations we talked about how we are

00:42:17,130 --> 00:42:21,869
people oriented because losing focus of

00:42:18,930 --> 00:42:23,550
people would turn angular into something

00:42:21,869 --> 00:42:25,830
it's not and that would be shame and

00:42:23,550 --> 00:42:27,780
lastly we talked about all the

00:42:25,830 --> 00:42:29,580
considerations we are making to make the

00:42:27,780 --> 00:42:31,710
open source collaboration successful and

00:42:29,580 --> 00:42:33,210
how we're hoping that through open

00:42:31,710 --> 00:42:36,060
source we can actually scale efforts

00:42:33,210 --> 00:42:37,619
even more there are two additional

00:42:36,060 --> 00:42:39,480
considerations and they're actually

00:42:37,619 --> 00:42:42,900
skills that I would like to highlight

00:42:39,480 --> 00:42:45,060
and that's empathy and respect with

00:42:42,900 --> 00:42:47,099
empathy and respect you're able to build

00:42:45,060 --> 00:42:49,320
better products you're able to have

00:42:47,099 --> 00:42:51,150
better relationships you'll be able to

00:42:49,320 --> 00:42:53,580
build better teams and better

00:42:51,150 --> 00:42:56,190
communities and there is no better place

00:42:53,580 --> 00:42:58,640
to start practicing these skills then at

00:42:56,190 --> 00:43:01,170
ng-conf where all of us get together and

00:42:58,640 --> 00:43:03,480
our goal is to make sure that not only

00:43:01,170 --> 00:43:07,140
we have good experiences but everybody

00:43:03,480 --> 00:43:08,790
around us has great experiences thank

00:43:07,140 --> 00:43:09,270
you so much enjoy the rest of the

00:43:08,790 --> 00:43:11,820
conference

00:43:09,270 --> 00:43:13,380
and we'll be around don't be shy and

00:43:11,820 --> 00:43:18,990
come talk to us thank you

00:43:13,380 --> 00:43:21,050
[Applause]

00:43:18,990 --> 00:43:21,050
you

00:43:24,950 --> 00:43:31,559
[Music]

00:43:37,140 --> 00:43:39,200

YouTube URL: https://www.youtube.com/watch?v=O0xx5SvjmnU


