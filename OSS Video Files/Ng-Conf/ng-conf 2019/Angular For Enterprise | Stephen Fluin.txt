Title: Angular For Enterprise | Stephen Fluin
Publication date: 2019-05-02
Playlist: ng-conf 2019
Description: 
	Angular is very popular for large applications, often powering some of the biggest companies in the world. Stephen works with hundreds of these companies and will share the top challenges, best practices, and the top things many enterprises have figured out about Angular.

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:07,920 --> 00:00:11,170
[Music]

00:00:12,019 --> 00:00:16,289
my name is Steven flew in as Aaron said

00:00:14,820 --> 00:00:18,720
I leave developed relations for the

00:00:16,289 --> 00:00:21,020
angular team and today I'm talking about

00:00:18,720 --> 00:00:23,789
angular for the enterprise which is

00:00:21,020 --> 00:00:25,830
basically the worst talk title ever this

00:00:23,789 --> 00:00:27,779
is quote according to my wife that's a

00:00:25,830 --> 00:00:29,460
terrible talk title because when we

00:00:27,779 --> 00:00:31,619
think about enterprises what do we think

00:00:29,460 --> 00:00:33,630
about write we think about stodgy big

00:00:31,619 --> 00:00:35,070
corporations we think about silos we

00:00:33,630 --> 00:00:37,170
think about lack of communication we

00:00:35,070 --> 00:00:40,649
think about all the problems that come

00:00:37,170 --> 00:00:42,059
with this idea of an enterprise and I

00:00:40,649 --> 00:00:44,280
want to kind of subtly change that

00:00:42,059 --> 00:00:46,289
because I think that we we often see

00:00:44,280 --> 00:00:49,020
things that are not connected to that

00:00:46,289 --> 00:00:50,460
problem right and here at ng-conf we

00:00:49,020 --> 00:00:54,510
actually have a really really unique

00:00:50,460 --> 00:00:56,550
opportunity many people here work for

00:00:54,510 --> 00:00:58,500
big companies many people here don't

00:00:56,550 --> 00:01:02,190
work for big companies but I think that

00:00:58,500 --> 00:01:04,199
we all have a lot in common we all are

00:01:02,190 --> 00:01:05,309
really trying to do better at our jobs

00:01:04,199 --> 00:01:06,930
right this is why we're looking for

00:01:05,309 --> 00:01:09,150
technologies this is why we're excited

00:01:06,930 --> 00:01:11,280
and passionate about the future because

00:01:09,150 --> 00:01:12,390
we're trying to do better we're trying

00:01:11,280 --> 00:01:13,409
to do better for our bosses we're trying

00:01:12,390 --> 00:01:15,299
to do better for ourselves we're trying

00:01:13,409 --> 00:01:16,770
to do better for our users and this

00:01:15,299 --> 00:01:21,869
really is something that connects us

00:01:16,770 --> 00:01:23,970
across the board we also all struggle

00:01:21,869 --> 00:01:25,950
with the same things one of the

00:01:23,970 --> 00:01:27,900
traditional mindsets that I often see is

00:01:25,950 --> 00:01:29,820
that companies don't want to share

00:01:27,900 --> 00:01:31,860
information right the bigger the company

00:01:29,820 --> 00:01:34,110
you work for the more strict they are

00:01:31,860 --> 00:01:35,939
about confidentiality the more strict

00:01:34,110 --> 00:01:37,110
they are about Secrets we all need to

00:01:35,939 --> 00:01:39,509
have our secrets because everything's

00:01:37,110 --> 00:01:41,009
special and unique to us but I really

00:01:39,509 --> 00:01:42,509
want to subvert that a little bit and

00:01:41,009 --> 00:01:44,640
say they were all struggling with the

00:01:42,509 --> 00:01:46,770
same things and this is really really

00:01:44,640 --> 00:01:47,880
special Annette this is why ng-conf is

00:01:46,770 --> 00:01:49,409
so special because we can come together

00:01:47,880 --> 00:01:51,600
and start sharing those sorts of things

00:01:49,409 --> 00:01:53,040
so when you think about the word

00:01:51,600 --> 00:01:55,170
Enterprise I don't want you to think

00:01:53,040 --> 00:01:57,420
about the traditional definition I want

00:01:55,170 --> 00:01:58,799
you to think about a new definition it's

00:01:57,420 --> 00:02:01,170
really based around family

00:01:58,799 --> 00:02:02,969
so imagine sitting down for a holiday

00:02:01,170 --> 00:02:04,020
dinner with your family right you're

00:02:02,969 --> 00:02:05,159
going to talk about the things that are

00:02:04,020 --> 00:02:06,119
frustrating you you're gonna talk about

00:02:05,159 --> 00:02:08,069
the things that are going on in your

00:02:06,119 --> 00:02:09,660
lives and we can do that right we don't

00:02:08,069 --> 00:02:11,670
have to violate the confidentiality of

00:02:09,660 --> 00:02:13,319
organizations or the projects that we're

00:02:11,670 --> 00:02:13,830
working on in order to share our

00:02:13,319 --> 00:02:17,160
challenges

00:02:13,830 --> 00:02:19,020
and successes so to change to completely

00:02:17,160 --> 00:02:21,000
dispel that mental image I've got this

00:02:19,020 --> 00:02:23,040
picture nice little picture of my family

00:02:21,000 --> 00:02:25,470
and what this really represents is the

00:02:23,040 --> 00:02:27,030
fact that we all are able to find

00:02:25,470 --> 00:02:28,890
commonalities with each other right

00:02:27,030 --> 00:02:31,290
we're able to find challenges that we're

00:02:28,890 --> 00:02:34,770
facing and by coming together we can do

00:02:31,290 --> 00:02:37,020
better so we actually did a little bit

00:02:34,770 --> 00:02:39,480
of this earlier this year we brought

00:02:37,020 --> 00:02:41,550
together around 20 different enterprises

00:02:39,480 --> 00:02:44,400
that are using angular at scale

00:02:41,550 --> 00:02:46,440
when I say scale I mean teams that have

00:02:44,400 --> 00:02:49,350
maybe hundreds of developers or billions

00:02:46,440 --> 00:02:51,480
of users companies like charter

00:02:49,350 --> 00:02:52,650
communications or Deutsche Bank and what

00:02:51,480 --> 00:02:56,640
we did is we brought them together and

00:02:52,650 --> 00:02:58,200
we wanted to really open up the lines of

00:02:56,640 --> 00:03:00,540
communication and drop those barriers

00:02:58,200 --> 00:03:03,090
and really share and connect to each

00:03:00,540 --> 00:03:05,070
other and so what I want to do is I want

00:03:03,090 --> 00:03:08,160
to actually go through a few of these

00:03:05,070 --> 00:03:10,080
questions and I'm gonna bring the eight

00:03:08,160 --> 00:03:11,700
most asked question so what happened was

00:03:10,080 --> 00:03:14,400
we brought all these people together we

00:03:11,700 --> 00:03:15,900
said hey what what are you facing what

00:03:14,400 --> 00:03:18,000
are the challenges or the questions that

00:03:15,900 --> 00:03:19,580
you have representing your team what are

00:03:18,000 --> 00:03:21,900
the questions that your company has

00:03:19,580 --> 00:03:23,400
because we all want to know what

00:03:21,900 --> 00:03:25,380
everyone else is doing so that's a very

00:03:23,400 --> 00:03:26,459
common thing that we see and we're all

00:03:25,380 --> 00:03:27,720
kind of looking over each other's

00:03:26,459 --> 00:03:29,730
shoulders saying hey how can I do a

00:03:27,720 --> 00:03:32,269
little bit better so I'm gonna break

00:03:29,730 --> 00:03:35,550
this down into these eight questions I

00:03:32,269 --> 00:03:37,760
have a secondary goal here of what I

00:03:35,550 --> 00:03:40,110
call reducing the information asymmetry

00:03:37,760 --> 00:03:41,940
because oftentimes the angular team we

00:03:40,110 --> 00:03:43,830
think we're putting out really clear

00:03:41,940 --> 00:03:45,480
helpful communications about how to do

00:03:43,830 --> 00:03:48,000
things and how to think about problems

00:03:45,480 --> 00:03:49,320
but oftentimes those things are not

00:03:48,000 --> 00:03:50,400
necessarily being heard so a few of the

00:03:49,320 --> 00:03:52,530
things that I'm gonna talk about our

00:03:50,400 --> 00:03:54,209
challenges that we felt like we've

00:03:52,530 --> 00:03:55,650
addressed in the past but they still

00:03:54,209 --> 00:03:57,150
come up as questions they still come up

00:03:55,650 --> 00:03:59,580
as some of the core challenges that

00:03:57,150 --> 00:04:01,560
developers are facing the other part of

00:03:59,580 --> 00:04:03,630
the information asymmetry is that each

00:04:01,560 --> 00:04:06,060
of us have different solutions there are

00:04:03,630 --> 00:04:07,380
problems that I have never run into no

00:04:06,060 --> 00:04:10,170
one on our team has run into but you've

00:04:07,380 --> 00:04:11,730
run into and by sharing that and I da

00:04:10,170 --> 00:04:13,019
ting with other folks you can come up

00:04:11,730 --> 00:04:14,070
with cool solutions and I want to share

00:04:13,019 --> 00:04:17,910
some of those solutions that those

00:04:14,070 --> 00:04:19,410
people came up with today so I'm gonna

00:04:17,910 --> 00:04:21,690
start from 8 and work backwards so

00:04:19,410 --> 00:04:23,280
starting with mobile apps we all need

00:04:21,690 --> 00:04:24,960
mobile apps right this is one of the

00:04:23,280 --> 00:04:27,180
first things I heard as a consultant a

00:04:24,960 --> 00:04:28,789
long long time ago is I need a nap

00:04:27,180 --> 00:04:32,039
question my a response that was always

00:04:28,789 --> 00:04:34,020
why do you need a nap right this is a

00:04:32,039 --> 00:04:36,660
question that many people forget to ask

00:04:34,020 --> 00:04:39,120
themselves so when you're thinking about

00:04:36,660 --> 00:04:40,410
a nap really think about what is that

00:04:39,120 --> 00:04:42,479
you're trying to achieve are you trying

00:04:40,410 --> 00:04:44,729
to achieve an experience that's going to

00:04:42,479 --> 00:04:46,139
be permeate all of the devices that a

00:04:44,729 --> 00:04:47,639
user touches are we trying to have a

00:04:46,139 --> 00:04:49,650
presence for marketing purposes

00:04:47,639 --> 00:04:52,050
how are we trying to engage our users

00:04:49,650 --> 00:04:53,520
because why you need that application

00:04:52,050 --> 00:04:56,310
how you're trying to touch your users is

00:04:53,520 --> 00:04:57,900
going to influence the way that you do

00:04:56,310 --> 00:04:59,880
that from a technology standpoint and

00:04:57,900 --> 00:05:01,160
when we think about mobile applications

00:04:59,880 --> 00:05:03,599
we tend to think about three

00:05:01,160 --> 00:05:05,090
technologies the first is obviously PWA

00:05:03,599 --> 00:05:06,780
is right you're building an application

00:05:05,090 --> 00:05:08,430
you want to add some additional

00:05:06,780 --> 00:05:10,770
capabilities then enrich that

00:05:08,430 --> 00:05:12,870
application and connect with your users

00:05:10,770 --> 00:05:13,830
a little bit better but the other two

00:05:12,870 --> 00:05:16,110
that I think are really important

00:05:13,830 --> 00:05:17,880
mention our first ionic so if you want

00:05:16,110 --> 00:05:19,830
to build an application and ship it with

00:05:17,880 --> 00:05:21,509
a webview that's going to be running the

00:05:19,830 --> 00:05:24,360
same code and be delivering these

00:05:21,509 --> 00:05:26,070
experiences that feel like they're

00:05:24,360 --> 00:05:28,289
customized for each platform and taking

00:05:26,070 --> 00:05:30,810
advantage of platform capabilities using

00:05:28,289 --> 00:05:32,789
javascript api x' ionic is a fantastic

00:05:30,810 --> 00:05:34,889
way to do that and then there's also

00:05:32,789 --> 00:05:36,659
native script if you're willing to

00:05:34,889 --> 00:05:39,320
invest more into your application

00:05:36,659 --> 00:05:41,909
willing to spend more time to customize

00:05:39,320 --> 00:05:43,830
instead of having just HTML templates

00:05:41,909 --> 00:05:45,300
having native script templates you can

00:05:43,830 --> 00:05:47,250
actually take advantage of the native

00:05:45,300 --> 00:05:49,169
widgets of a platform in addition to

00:05:47,250 --> 00:05:52,530
accessing all of those capabilities of

00:05:49,169 --> 00:05:55,050
the platform using javascript all right

00:05:52,530 --> 00:05:57,090
number seven shared components and open

00:05:55,050 --> 00:05:58,979
source so this question takes a lot of

00:05:57,090 --> 00:06:00,479
different forms but one of the most

00:05:58,979 --> 00:06:02,880
common ones is how should I organize my

00:06:00,479 --> 00:06:05,009
components right we've moved from having

00:06:02,880 --> 00:06:05,849
a small shared library of 30 components

00:06:05,009 --> 00:06:07,710
up to a hundred

00:06:05,849 --> 00:06:08,970
now maybe we have multiple teams that

00:06:07,710 --> 00:06:10,259
are working on components and that

00:06:08,970 --> 00:06:12,000
creates challenges we don't know how to

00:06:10,259 --> 00:06:14,400
structure and think about those and so I

00:06:12,000 --> 00:06:16,139
want to propose a really simple mental

00:06:14,400 --> 00:06:19,409
model for how to connect those different

00:06:16,139 --> 00:06:21,030
components so I say that there's about

00:06:19,409 --> 00:06:22,139
three layers that you need to concern

00:06:21,030 --> 00:06:24,990
yourself with when you're thinking about

00:06:22,139 --> 00:06:27,030
how to architect your components so most

00:06:24,990 --> 00:06:28,560
teams have a design system even if you

00:06:27,030 --> 00:06:29,820
don't intentionally have a design system

00:06:28,560 --> 00:06:31,530
you'll adopt something like material

00:06:29,820 --> 00:06:32,699
design or you'll have an aesthetic that

00:06:31,530 --> 00:06:34,199
you're trying to achieve right that's

00:06:32,699 --> 00:06:36,420
the underpinnings of everything you do

00:06:34,199 --> 00:06:38,100
from a component standpoint

00:06:36,420 --> 00:06:39,960
then we have the visual components these

00:06:38,100 --> 00:06:41,310
are what does my app look like what does

00:06:39,960 --> 00:06:43,530
it feel like when I touch it does it

00:06:41,310 --> 00:06:46,440
animate does it react to everything that

00:06:43,530 --> 00:06:47,550
I'm doing and one of the newer types of

00:06:46,440 --> 00:06:49,860
components that people are trying to

00:06:47,550 --> 00:06:51,420
build and share across teams is the idea

00:06:49,860 --> 00:06:53,250
of business components and I've seen

00:06:51,420 --> 00:06:55,170
this one grow a lot in the last year

00:06:53,250 --> 00:06:57,090
because as teams are building out more

00:06:55,170 --> 00:06:59,220
and more of these capabilities they want

00:06:57,090 --> 00:07:01,530
to take advantage of more and more and

00:06:59,220 --> 00:07:05,130
more of the functionality and not just

00:07:01,530 --> 00:07:06,630
the visuals I also think there's another

00:07:05,130 --> 00:07:09,600
access to this which is that oftentimes

00:07:06,630 --> 00:07:11,190
we see that companies have a company

00:07:09,600 --> 00:07:12,660
level visual components company level

00:07:11,190 --> 00:07:14,520
business components but then every

00:07:12,660 --> 00:07:16,110
single team wants to add a couple

00:07:14,520 --> 00:07:18,030
standard components that they're gonna

00:07:16,110 --> 00:07:19,290
use across the team we see this at

00:07:18,030 --> 00:07:20,580
Google as well right so you'll have the

00:07:19,290 --> 00:07:22,920
company-wide things and then you'll have

00:07:20,580 --> 00:07:25,200
team a team B and I think that's fine

00:07:22,920 --> 00:07:26,640
right but if we reflect the organization

00:07:25,200 --> 00:07:28,500
in terms of the architecture of our

00:07:26,640 --> 00:07:29,760
components and the packages that we're

00:07:28,500 --> 00:07:31,760
shipping that's what's going to

00:07:29,760 --> 00:07:36,810
ultimately end up benefiting our users

00:07:31,760 --> 00:07:38,670
and always don't forget the CD K the CD

00:07:36,810 --> 00:07:40,680
K has ton of great capabilities out of

00:07:38,670 --> 00:07:42,090
the box and Jeremy's going to talk a lot

00:07:40,680 --> 00:07:45,360
about what's going on with the CD K on

00:07:42,090 --> 00:07:46,440
Friday when it comes to organizing and

00:07:45,360 --> 00:07:48,150
thinking about component libraries

00:07:46,440 --> 00:07:50,520
across an organization I would say that

00:07:48,150 --> 00:07:52,290
collaboration is key we often seen teams

00:07:50,520 --> 00:07:54,480
where they have what they call shared

00:07:52,290 --> 00:07:56,550
source where it's private to a company

00:07:54,480 --> 00:07:58,620
or private to a team but anyone can

00:07:56,550 --> 00:07:59,760
access it anyone can see it but I would

00:07:58,620 --> 00:08:00,060
say open source is always going to be

00:07:59,760 --> 00:08:01,890
better

00:08:00,060 --> 00:08:04,290
my favorite example that I always go to

00:08:01,890 --> 00:08:06,030
is VMware and clarity where they not

00:08:04,290 --> 00:08:08,310
only built a design system and then a

00:08:06,030 --> 00:08:10,700
set of components to manifest that they

00:08:08,310 --> 00:08:13,590
actually encouraged that adoption

00:08:10,700 --> 00:08:15,750
outside of their own employees for use

00:08:13,590 --> 00:08:17,580
by partners other teams and this created

00:08:15,750 --> 00:08:21,210
a more continuous experience for their

00:08:17,580 --> 00:08:22,290
users the once you have this mental

00:08:21,210 --> 00:08:24,000
model for how to organize your

00:08:22,290 --> 00:08:25,710
components there's the question of the

00:08:24,000 --> 00:08:27,450
ownership how do we actually manage all

00:08:25,710 --> 00:08:29,460
these different teams working together I

00:08:27,450 --> 00:08:31,380
would say that mana repositories help

00:08:29,460 --> 00:08:32,670
there's a lot of really great

00:08:31,380 --> 00:08:34,530
information across the internet right

00:08:32,670 --> 00:08:37,050
now about how to start moving towards a

00:08:34,530 --> 00:08:38,310
mono repository strategy but if the team

00:08:37,050 --> 00:08:40,620
that's building a shared component

00:08:38,310 --> 00:08:42,870
library whether it's visual or business

00:08:40,620 --> 00:08:44,460
can be in the same repository as all the

00:08:42,870 --> 00:08:46,440
tests for the applications using these

00:08:44,460 --> 00:08:47,640
components you're going to be more

00:08:46,440 --> 00:08:49,930
effective you're going to be able to

00:08:47,640 --> 00:08:51,339
accept changes from anyone

00:08:49,930 --> 00:08:53,440
know that those changes are gonna keep

00:08:51,339 --> 00:08:56,110
working right this is essential to how

00:08:53,440 --> 00:08:59,230
angular moves fast without breaking the

00:08:56,110 --> 00:09:01,089
entire universe at Google there's also

00:08:59,230 --> 00:09:02,860
the idea of developing a culture where

00:09:01,089 --> 00:09:05,620
on these things many of us are very

00:09:02,860 --> 00:09:06,760
hesitant to say anyone can get in and

00:09:05,620 --> 00:09:09,160
change these things but if you have the

00:09:06,760 --> 00:09:10,330
right to lling to validate and manage

00:09:09,160 --> 00:09:12,760
the changes that are coming in to your

00:09:10,330 --> 00:09:15,250
component library this culture of

00:09:12,760 --> 00:09:17,680
sourcing all of that content upstream

00:09:15,250 --> 00:09:19,450
and sharing it is going to drive the

00:09:17,680 --> 00:09:22,300
agility and flexibility of your company

00:09:19,450 --> 00:09:24,760
across the board all right

00:09:22,300 --> 00:09:26,680
number six hybrid applications and mixed

00:09:24,760 --> 00:09:29,709
environments so this often takes the

00:09:26,680 --> 00:09:31,750
form of there are other teams right we

00:09:29,709 --> 00:09:34,120
work at companies and there's maybe

00:09:31,750 --> 00:09:35,560
someone not using angular again this is

00:09:34,120 --> 00:09:40,779
always shocking to me every time I hear

00:09:35,560 --> 00:09:41,860
that gasp but it does happen and there's

00:09:40,779 --> 00:09:44,170
a lot of different ways that we can

00:09:41,860 --> 00:09:45,100
solve this one of the cool technologies

00:09:44,170 --> 00:09:46,959
that's out right now

00:09:45,100 --> 00:09:49,029
it's called NX from the folks at Narwhal

00:09:46,959 --> 00:09:50,110
and one of the features they've released

00:09:49,029 --> 00:09:52,839
in the last few months is actually

00:09:50,110 --> 00:09:54,640
support for hybrid repositories where

00:09:52,839 --> 00:09:56,920
you can have a single repository that

00:09:54,640 --> 00:09:58,839
has for example a typescript library a

00:09:56,920 --> 00:10:00,370
angular application another angular

00:09:58,839 --> 00:10:01,930
application and then you can have

00:10:00,370 --> 00:10:04,810
another application that's maybe not

00:10:01,930 --> 00:10:06,190
angular and they way that they've tapped

00:10:04,810 --> 00:10:08,560
into the build system allows you to

00:10:06,190 --> 00:10:09,700
actually rebuild all of those in the

00:10:08,560 --> 00:10:11,770
right way so that when you make an

00:10:09,700 --> 00:10:13,120
update to your typescript library all of

00:10:11,770 --> 00:10:15,130
the applications that consume that are

00:10:13,120 --> 00:10:16,480
going to be updated and this enables

00:10:15,130 --> 00:10:18,610
more sharing of code and more

00:10:16,480 --> 00:10:20,050
collaboration without having to live in

00:10:18,610 --> 00:10:23,290
different silos where you're building

00:10:20,050 --> 00:10:25,060
things completely separately the other

00:10:23,290 --> 00:10:26,620
way that we really think about this idea

00:10:25,060 --> 00:10:28,900
of collaboration hybrid environments

00:10:26,620 --> 00:10:30,279
comes down to angular elements so

00:10:28,900 --> 00:10:31,779
elements is really powerful in the way

00:10:30,279 --> 00:10:34,360
that it allows you to create these web

00:10:31,779 --> 00:10:36,730
standard interfaces between different

00:10:34,360 --> 00:10:37,690
applications right if everyone's using

00:10:36,730 --> 00:10:38,770
angular then you don't need to worry

00:10:37,690 --> 00:10:40,630
about these sorts of things if you're in

00:10:38,770 --> 00:10:42,490
a mono repository but anytime you have

00:10:40,630 --> 00:10:44,410
to create a interface for someone else

00:10:42,490 --> 00:10:46,660
to consume that's when you should start

00:10:44,410 --> 00:10:48,339
thinking about angular elements and this

00:10:46,660 --> 00:10:50,200
your elements strategy even goes further

00:10:48,339 --> 00:10:53,050
if you think about content management

00:10:50,200 --> 00:10:55,089
systems oftentimes it's very hard to

00:10:53,050 --> 00:10:56,589
integrate all of a framework or a

00:10:55,089 --> 00:10:58,510
platform into a content management

00:10:56,589 --> 00:11:00,190
system that you already have right we we

00:10:58,510 --> 00:11:01,570
talk a lot to teams that are using adobe

00:11:00,190 --> 00:11:03,130
experience manager Drupal

00:11:01,570 --> 00:11:03,370
there's lots of different CMS's out

00:11:03,130 --> 00:11:05,529
there

00:11:03,370 --> 00:11:06,970
and they can be hard to enrich but if

00:11:05,529 --> 00:11:09,070
you're able to supply and offer

00:11:06,970 --> 00:11:11,200
functionality as custom elements using

00:11:09,070 --> 00:11:12,760
angular elements that's gonna help that

00:11:11,200 --> 00:11:14,680
because you can actually rely on the

00:11:12,760 --> 00:11:16,510
browser for the rendering and

00:11:14,680 --> 00:11:17,620
theoretically we could possibly live in

00:11:16,510 --> 00:11:19,210
a future where you can rely on the

00:11:17,620 --> 00:11:24,339
browser to load the functionality of

00:11:19,210 --> 00:11:27,160
that component as well next up is

00:11:24,339 --> 00:11:28,930
testing now I think I've gotten up on

00:11:27,160 --> 00:11:31,029
stage three years here consecutively and

00:11:28,930 --> 00:11:32,650
said who tests and we get it we get a

00:11:31,029 --> 00:11:34,990
few laughs it's still probably

00:11:32,650 --> 00:11:38,140
worthwhile to consider testing what I

00:11:34,990 --> 00:11:39,820
would say is virtually 80 or 90% of the

00:11:38,140 --> 00:11:41,740
biggest companies that we see actually

00:11:39,820 --> 00:11:43,450
do this well whenever you're building a

00:11:41,740 --> 00:11:46,180
product that's going to last for more

00:11:43,450 --> 00:11:48,010
than six months the maintainability of

00:11:46,180 --> 00:11:49,630
that product ends up becoming almost

00:11:48,010 --> 00:11:51,790
more important than the upfront cost of

00:11:49,630 --> 00:11:53,350
maintaining those tests right you cannot

00:11:51,790 --> 00:11:55,420
have agility in a large software

00:11:53,350 --> 00:11:57,250
codebase without really good testing and

00:11:55,420 --> 00:11:58,900
the Angra team actually provides a

00:11:57,250 --> 00:12:00,400
couple tools right we have Karma for

00:11:58,900 --> 00:12:02,260
unit tests we have protractor for

00:12:00,400 --> 00:12:04,420
end-to-end tests and these are generally

00:12:02,260 --> 00:12:06,339
very good tools right we have support

00:12:04,420 --> 00:12:07,959
for things like cross browser so you can

00:12:06,339 --> 00:12:10,089
test on multiple different browsers the

00:12:07,959 --> 00:12:12,550
same application but as we've seen the

00:12:10,089 --> 00:12:14,830
ecosystem continues to evolve we hear a

00:12:12,550 --> 00:12:16,720
lot even at ng-conf this year about

00:12:14,830 --> 00:12:18,910
technologies like Cyprus or jest and

00:12:16,720 --> 00:12:21,430
teams say well what should we use is it

00:12:18,910 --> 00:12:23,470
okay to use these things so the angular

00:12:21,430 --> 00:12:25,630
team opinion is that we believe in the

00:12:23,470 --> 00:12:27,100
future of karma and protractor we

00:12:25,630 --> 00:12:29,529
believe that we've got some plans that

00:12:27,100 --> 00:12:32,260
are gonna make them better and awesome

00:12:29,529 --> 00:12:33,490
for developers but I would say if the

00:12:32,260 --> 00:12:35,500
developer experience that you're trying

00:12:33,490 --> 00:12:37,779
to build is easier to build and test

00:12:35,500 --> 00:12:41,140
with one of these tools go ahead and use

00:12:37,779 --> 00:12:44,770
it it's okay just don't tell the rest of

00:12:41,140 --> 00:12:46,060
the team I said that one of the things

00:12:44,770 --> 00:12:48,070
that I hadn't even been thinking about

00:12:46,060 --> 00:12:51,130
when we brought up testing was this idea

00:12:48,070 --> 00:12:52,810
of visual testing or creating screenshot

00:12:51,130 --> 00:12:54,160
tests to verify that the app continues

00:12:52,810 --> 00:12:56,320
looking the same as you continue to

00:12:54,160 --> 00:12:57,580
evolve it and so we actually put it out

00:12:56,320 --> 00:12:59,320
to all the teams we were working with

00:12:57,580 --> 00:13:00,700
and said what do you use and so the two

00:12:59,320 --> 00:13:03,610
most common tools that they talked about

00:13:00,700 --> 00:13:05,290
we're storybook and applae tools so

00:13:03,610 --> 00:13:07,270
using both of these as ways of

00:13:05,290 --> 00:13:08,800
automating different scenarios different

00:13:07,270 --> 00:13:10,570
conditions and then using that out to

00:13:08,800 --> 00:13:14,560
render screenshot tests that then you

00:13:10,570 --> 00:13:15,700
can integrate into your application one

00:13:14,560 --> 00:13:17,260
of the fun things when you're sitting

00:13:15,700 --> 00:13:18,820
down with family

00:13:17,260 --> 00:13:21,340
that you can rib on each other a little

00:13:18,820 --> 00:13:23,920
bit so I'm gonna rib on the all the

00:13:21,340 --> 00:13:27,730
folks that asked this question should we

00:13:23,920 --> 00:13:30,490
build a PWA do I need that PWA I think

00:13:27,730 --> 00:13:32,950
the answer is is in almost every case

00:13:30,490 --> 00:13:34,360
probably because the questions that

00:13:32,950 --> 00:13:36,460
drive you did build a PWA are pretty

00:13:34,360 --> 00:13:38,500
simple do you want faster more resilient

00:13:36,460 --> 00:13:40,810
user experiences and do you want deeper

00:13:38,500 --> 00:13:41,980
engagement with your users if you want

00:13:40,810 --> 00:13:43,420
those things yeah you should consider

00:13:41,980 --> 00:13:45,010
adding a service record your application

00:13:43,420 --> 00:13:47,320
and the angular tooling tries to make

00:13:45,010 --> 00:13:48,760
this really really easy and so that's a

00:13:47,320 --> 00:13:50,560
really simple answer but then there

00:13:48,760 --> 00:13:52,180
comes a much bigger question what if my

00:13:50,560 --> 00:13:53,740
organization isn't supportive we've

00:13:52,180 --> 00:13:55,540
actually heard about many teams and

00:13:53,740 --> 00:13:57,160
companies being actively hostile to the

00:13:55,540 --> 00:13:59,530
idea of adding progressive web app

00:13:57,160 --> 00:14:01,990
capabilities to their sites and to that

00:13:59,530 --> 00:14:03,790
I would point them at this URL so Chrome

00:14:01,990 --> 00:14:06,520
colon slash slash service worker -

00:14:03,790 --> 00:14:08,290
internals if you visit this URL you will

00:14:06,520 --> 00:14:09,640
get in your browser a list of all of the

00:14:08,290 --> 00:14:11,500
service workers that were installed on

00:14:09,640 --> 00:14:13,570
your machine based on your normal

00:14:11,500 --> 00:14:16,150
everyday browsing habits when I went to

00:14:13,570 --> 00:14:17,650
this I had 254 installed on my

00:14:16,150 --> 00:14:20,080
application they're on installed in my

00:14:17,650 --> 00:14:23,470
laptop this is not a niche technology

00:14:20,080 --> 00:14:25,030
anymore the biggest brands biggest sin

00:14:23,470 --> 00:14:27,640
sites out there are using these

00:14:25,030 --> 00:14:31,660
technologies to accomplish better

00:14:27,640 --> 00:14:33,580
experiences for their users so sometimes

00:14:31,660 --> 00:14:35,530
I rib other folks but I was actually

00:14:33,580 --> 00:14:36,970
shocked I had my eyes open because one

00:14:35,530 --> 00:14:38,620
of the questions that I didn't even

00:14:36,970 --> 00:14:40,510
think that we needed to care about was

00:14:38,620 --> 00:14:42,880
this idea of a be testing or experiments

00:14:40,510 --> 00:14:44,260
and to broaden that a little bit and

00:14:42,880 --> 00:14:46,720
give a few more examples of this

00:14:44,260 --> 00:14:48,550
we actually there's a whole concept of

00:14:46,720 --> 00:14:50,440
release management that today angular

00:14:48,550 --> 00:14:51,730
doesn't help you with very much right

00:14:50,440 --> 00:14:53,500
we don't do a/b or multivariate

00:14:51,730 --> 00:14:55,300
experiments we don't let you turn on

00:14:53,500 --> 00:14:56,740
feature flags for your application stage

00:14:55,300 --> 00:14:58,510
releases and what we've seen is that

00:14:56,740 --> 00:15:00,010
more and more people are needing these

00:14:58,510 --> 00:15:02,740
tools as they continue to ship their

00:15:00,010 --> 00:15:04,480
applications at scale we also see use

00:15:02,740 --> 00:15:06,970
cases where for example if you want to

00:15:04,480 --> 00:15:08,920
release a new feature you want to have

00:15:06,970 --> 00:15:10,090
that feature secret until it's actually

00:15:08,920 --> 00:15:11,110
ready to be used but you need to be able

00:15:10,090 --> 00:15:13,420
to test it you need in different

00:15:11,110 --> 00:15:15,790
environments and you don't want all of

00:15:13,420 --> 00:15:18,430
these features and capabilities to bloat

00:15:15,790 --> 00:15:19,990
your bundle size and so we kind of put

00:15:18,430 --> 00:15:22,210
that back again on all the folks we were

00:15:19,990 --> 00:15:24,990
talking to what do you do about this and

00:15:22,210 --> 00:15:27,820
so what we found was that in general

00:15:24,990 --> 00:15:29,800
this is not a angular specific problem

00:15:27,820 --> 00:15:30,820
but it does become part of the the realm

00:15:29,800 --> 00:15:32,020
of what we care about

00:15:30,820 --> 00:15:34,090
and so what we heard is that people are

00:15:32,020 --> 00:15:36,250
using technologies like rollout IO and

00:15:34,090 --> 00:15:37,930
launch Darkly to manage the future flag

00:15:36,250 --> 00:15:39,370
so they had this administrator panel

00:15:37,930 --> 00:15:41,830
they have all the control they need to

00:15:39,370 --> 00:15:42,820
set the flags that they want the staging

00:15:41,830 --> 00:15:44,800
release is all those sorts of

00:15:42,820 --> 00:15:46,420
capabilities and then what you can do is

00:15:44,800 --> 00:15:48,970
you can put all of those bundles all of

00:15:46,420 --> 00:15:53,350
those different chunks on to a normal

00:15:48,970 --> 00:15:55,210
CDN and distribute that to users so what

00:15:53,350 --> 00:15:57,220
we see the kind of angular side of the

00:15:55,210 --> 00:15:59,020
solution there is that you ultimately do

00:15:57,220 --> 00:16:01,150
end up needing multiple builds you do a

00:15:59,020 --> 00:16:03,100
build for each feature fund but the key

00:16:01,150 --> 00:16:05,350
there is if you do it at the Lazy level

00:16:03,100 --> 00:16:07,720
so any code split level or you can just

00:16:05,350 --> 00:16:09,100
have a single chunk dedicated to a

00:16:07,720 --> 00:16:11,260
purpose that's where it's going to be

00:16:09,100 --> 00:16:13,930
most effective right so you can have

00:16:11,260 --> 00:16:15,850
your same index page and then you chunk

00:16:13,930 --> 00:16:20,230
out based on what the capabilities that

00:16:15,850 --> 00:16:22,690
you're trying to ship are the number two

00:16:20,230 --> 00:16:24,610
question and it was actually funny at

00:16:22,690 --> 00:16:26,530
the event we were having everyone raised

00:16:24,610 --> 00:16:28,150
their hands if they cared and these

00:16:26,530 --> 00:16:30,310
these last four questions every single

00:16:28,150 --> 00:16:31,540
person cared about so I know that this

00:16:30,310 --> 00:16:33,520
is a a challenge that people are

00:16:31,540 --> 00:16:34,870
thinking about and Igor talked a lot

00:16:33,520 --> 00:16:36,220
this morning about this idea of an

00:16:34,870 --> 00:16:38,770
evergreen angular and that's definitely

00:16:36,220 --> 00:16:40,180
what we're trying to do because that's

00:16:38,770 --> 00:16:41,320
how we see that we're gonna make you

00:16:40,180 --> 00:16:43,450
most successful and how we're gonna

00:16:41,320 --> 00:16:45,430
continue to be able to evolve but

00:16:43,450 --> 00:16:46,810
sometimes you know how to update but how

00:16:45,430 --> 00:16:49,660
do I get everyone else in my team to

00:16:46,810 --> 00:16:52,420
stay up to date obviously ng update is

00:16:49,660 --> 00:16:54,010
the core capability there this inversion

00:16:52,420 --> 00:16:55,420
of the responsibility between you and

00:16:54,010 --> 00:16:56,740
angular where we want angular to be

00:16:55,420 --> 00:16:58,450
responsible for making updates to your

00:16:56,740 --> 00:17:00,850
codebase is huge

00:16:58,450 --> 00:17:03,040
we've also started to develop quite a

00:17:00,850 --> 00:17:05,680
track record so you heard about that km

00:17:03,040 --> 00:17:07,750
story that is a really great example of

00:17:05,680 --> 00:17:09,490
where we we made these promises more

00:17:07,750 --> 00:17:12,580
than two and a half years ago and we've

00:17:09,490 --> 00:17:14,920
been keeping them ever since one of the

00:17:12,580 --> 00:17:16,450
strategies that we've seen is driving

00:17:14,920 --> 00:17:17,800
the adoption of the latest version of a

00:17:16,450 --> 00:17:20,380
shared components so if you're working

00:17:17,800 --> 00:17:22,690
on a shared component library you can

00:17:20,380 --> 00:17:24,370
almost use your leverage use the fact

00:17:22,690 --> 00:17:26,590
that other teams depend on you and rely

00:17:24,370 --> 00:17:28,060
on you to start pushing them and say hey

00:17:26,590 --> 00:17:30,370
if you want the new capabilities of our

00:17:28,060 --> 00:17:32,080
shared component library you need update

00:17:30,370 --> 00:17:34,690
to the latest version right just these

00:17:32,080 --> 00:17:36,220
subtle drivers one of the things that

00:17:34,690 --> 00:17:38,050
we've also seen people need is

00:17:36,220 --> 00:17:39,250
oftentimes developers have a really

00:17:38,050 --> 00:17:41,170
great understanding of what semantic

00:17:39,250 --> 00:17:42,880
versioning means but people on the

00:17:41,170 --> 00:17:44,680
business side don't always understand

00:17:42,880 --> 00:17:46,870
that very well and so I would just

00:17:44,680 --> 00:17:48,700
find them and give them examples of how

00:17:46,870 --> 00:17:50,890
if you're using semantic versioning a

00:17:48,700 --> 00:17:52,750
major release does not mean a major

00:17:50,890 --> 00:17:54,070
amount of work for you and the angular

00:17:52,750 --> 00:17:55,870
team is really really committed to

00:17:54,070 --> 00:17:58,540
following the formal definition of

00:17:55,870 --> 00:18:01,090
semantic versioning and then I really do

00:17:58,540 --> 00:18:02,380
think just sharing stories as I started

00:18:01,090 --> 00:18:03,700
off talking about everyone is looking at

00:18:02,380 --> 00:18:05,290
over their shoulder everyone's wondering

00:18:03,700 --> 00:18:07,960
what is everyone else doing and so

00:18:05,290 --> 00:18:09,520
pulling stories out like the KLM story

00:18:07,960 --> 00:18:11,950
about how they updated in less than a

00:18:09,520 --> 00:18:14,970
day that can really help drive home the

00:18:11,950 --> 00:18:18,730
point that these are not crazy things

00:18:14,970 --> 00:18:20,980
the last story that we told as a family

00:18:18,730 --> 00:18:22,360
of enterprises was all about build time

00:18:20,980 --> 00:18:24,910
everyone said how do I make my build

00:18:22,360 --> 00:18:26,380
time faster right I have way too many

00:18:24,910 --> 00:18:28,600
components I've way too many developers

00:18:26,380 --> 00:18:30,730
all work on this giant application and I

00:18:28,600 --> 00:18:33,100
need to split it up so historically the

00:18:30,730 --> 00:18:35,020
answer the kind of not great but best

00:18:33,100 --> 00:18:37,120
answer that we've had was really having

00:18:35,020 --> 00:18:38,470
more independently compiled libraries so

00:18:37,120 --> 00:18:40,480
take some of the components of your

00:18:38,470 --> 00:18:42,100
shipping and compile them as an angular

00:18:40,480 --> 00:18:43,720
library using the your package format

00:18:42,100 --> 00:18:45,430
using ng package or using the built-in

00:18:43,720 --> 00:18:47,350
support all those sorts of things but

00:18:45,430 --> 00:18:49,690
we're approaching a point today where

00:18:47,350 --> 00:18:51,450
using technologies like basil we can

00:18:49,690 --> 00:18:54,850
actually opt into those finer grained

00:18:51,450 --> 00:18:57,640
things so with basil you're gonna have

00:18:54,850 --> 00:18:58,930
the ability to opt in or not right if

00:18:57,640 --> 00:19:01,420
you don't opt in you're still gonna have

00:18:58,930 --> 00:19:02,440
a single monolithic build target which

00:19:01,420 --> 00:19:03,820
can take advantage of some of the

00:19:02,440 --> 00:19:05,710
incremental capabilities but not all of

00:19:03,820 --> 00:19:08,380
them but if you're willing to opt into

00:19:05,710 --> 00:19:09,730
saying hey we have a large team we have

00:19:08,380 --> 00:19:11,110
many teams operating within the same

00:19:09,730 --> 00:19:13,030
application within the same mono

00:19:11,110 --> 00:19:14,440
repository here's the dependencies

00:19:13,030 --> 00:19:16,300
between them and being able to map that

00:19:14,440 --> 00:19:17,830
out then we can take advantage of that

00:19:16,300 --> 00:19:19,690
knowledge to actually make more

00:19:17,830 --> 00:19:21,730
incremental builds and really optimize

00:19:19,690 --> 00:19:23,320
the process for everyone so this is

00:19:21,730 --> 00:19:25,150
definitely going to be the solution and

00:19:23,320 --> 00:19:26,380
if you're willing to try it definitely I

00:19:25,150 --> 00:19:29,290
recommend checking out those office

00:19:26,380 --> 00:19:31,780
hours or meeting up with the team so

00:19:29,290 --> 00:19:33,970
we've gone through the eight questions

00:19:31,780 --> 00:19:36,400
the the top eight questions that came up

00:19:33,970 --> 00:19:39,280
we were talking about angular in the

00:19:36,400 --> 00:19:41,800
enterprise and I think that just like we

00:19:39,280 --> 00:19:42,910
had the feeling at that event where we

00:19:41,800 --> 00:19:44,620
were kind of starting to feel like a

00:19:42,910 --> 00:19:46,330
family we could share anything I really

00:19:44,620 --> 00:19:48,790
want to drive everyone in this room to

00:19:46,330 --> 00:19:50,110
feel that same way go find someone else

00:19:48,790 --> 00:19:51,340
that has the same problem as you and

00:19:50,110 --> 00:19:52,810
talk about how you're solving that

00:19:51,340 --> 00:19:55,930
problem talk about how they're solving

00:19:52,810 --> 00:19:58,690
that problem because together we're

00:19:55,930 --> 00:20:01,460
obviously gonna be more effective

00:19:58,690 --> 00:20:02,929
so don't be strangers say hello to your

00:20:01,460 --> 00:20:04,100
neighbor this is what this conference is

00:20:02,929 --> 00:20:05,960
all but we always talk about the hallway

00:20:04,100 --> 00:20:07,640
track being almost more important than

00:20:05,960 --> 00:20:10,429
my talk so everyone that's not here

00:20:07,640 --> 00:20:12,890
great job not not quite as good job as

00:20:10,429 --> 00:20:14,660
does the can but it's okay but share all

00:20:12,890 --> 00:20:16,700
the problems that you face find new

00:20:14,660 --> 00:20:20,770
solutions and don't forget to share

00:20:16,700 --> 00:20:20,770
those solutions - thank you so much

00:20:26,200 --> 00:20:32,819
[Music]

00:20:38,380 --> 00:20:40,440

YouTube URL: https://www.youtube.com/watch?v=4d1HYKL2tt4


