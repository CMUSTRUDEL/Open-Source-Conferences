Title: 20 RXJS Operators in 20 minutes | Mike Brocchi & John Niedzwiecki
Publication date: 2019-05-06
Playlist: ng-conf 2019
Description: 
	Did you know that there are ONE HUNDRED AND FOUR RxJS operators? This isn’t your normal RxJS talk. We’re not going to re-teach you map/filter/switchMap. We’re going to blast off into deep space to show you the operators haven’t used and may not have even heard about. Join us as we run through 20 operators in 20 minutes.

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:07,920 --> 00:00:11,170
[Music]

00:00:11,780 --> 00:00:18,060
we'll take care of that so my name is

00:00:15,900 --> 00:00:20,699
Mike Brockie I am an engineer at

00:00:18,060 --> 00:00:21,869
ultimate software formerly worked on the

00:00:20,699 --> 00:00:24,990
angular team on the angular CLI

00:00:21,869 --> 00:00:26,670
primarily and I'm John as wiki I work

00:00:24,990 --> 00:00:28,650
for Disney streaming services and before

00:00:26,670 --> 00:00:30,240
you ask no I cannot get you into Star

00:00:28,650 --> 00:00:32,279
Wars land early I don't have that kind

00:00:30,240 --> 00:00:34,110
of poll it's true I've asked but today

00:00:32,279 --> 00:00:37,640
we're here to talk to you about UFOs

00:00:34,110 --> 00:00:40,770
unidentified forgettable operators I

00:00:37,640 --> 00:00:44,550
know but before we get started we need

00:00:40,770 --> 00:00:48,930
to issue a little bit of a warning I'm a

00:00:44,550 --> 00:00:50,190
dad and I'm a dad so for the next 10 20

00:00:48,930 --> 00:00:52,620
minutes however long we're up here we're

00:00:50,190 --> 00:00:55,890
not sure there's gonna be dad jokes and

00:00:52,620 --> 00:00:58,289
if you don't like dad jokes the door

00:00:55,890 --> 00:01:01,020
exits or in the back or cover your ears

00:00:58,289 --> 00:01:03,000
it's fine but I want to start with the

00:01:01,020 --> 00:01:05,400
question we introduced who we are

00:01:03,000 --> 00:01:09,090
my my first question is who's this I

00:01:05,400 --> 00:01:13,380
know not you not me no I'm asking that

00:01:09,090 --> 00:01:16,470
but I know anyone incentives cookies

00:01:13,380 --> 00:01:18,600
anyone I can't see Han so I'm assuming

00:01:16,470 --> 00:01:23,009
nobody has their hand off a little bit

00:01:18,600 --> 00:01:27,780
of help anyone no pictures of his

00:01:23,009 --> 00:01:31,290
friends no no maybe some grand dance who

00:01:27,780 --> 00:01:33,520
was that I heard it yes get up here you

00:01:31,290 --> 00:01:38,890
get your cookies

00:01:33,520 --> 00:01:41,679
I didn't expect that to happen I'll

00:01:38,890 --> 00:01:43,840
deliver so you can explain so this is as

00:01:41,679 --> 00:01:45,460
mentioned Michael counts picture the

00:01:43,840 --> 00:01:46,659
moon he didn't sing fly me to the moon I

00:01:45,460 --> 00:01:49,390
was gonna even sing that but since the

00:01:46,659 --> 00:01:51,399
answer came out you don't get that so he

00:01:49,390 --> 00:01:53,740
was the third member of the Apollo 11

00:01:51,399 --> 00:01:55,689
team he got all the way to the moon but

00:01:53,740 --> 00:01:58,179
didn't get to go down he flew the lunar

00:01:55,689 --> 00:02:00,280
command module and an orbit while Neil

00:01:58,179 --> 00:02:03,189
and Buzz went down to the earth so he's

00:02:00,280 --> 00:02:05,380
a little more forgotten maybe a little

00:02:03,189 --> 00:02:07,060
more unknown but he's definitely not

00:02:05,380 --> 00:02:09,039
unimportant especially if your name is

00:02:07,060 --> 00:02:10,030
Neil or Buzz he was very important

00:02:09,039 --> 00:02:11,860
otherwise they would be permanent

00:02:10,030 --> 00:02:13,569
residents right now so he was there so

00:02:11,860 --> 00:02:15,760
they could come back so the important

00:02:13,569 --> 00:02:17,530
thing is you know he's you know not

00:02:15,760 --> 00:02:19,690
unimportant we might actually be able to

00:02:17,530 --> 00:02:23,170
call him the UFA an unforgettable

00:02:19,690 --> 00:02:24,790
unidentified astronaut could go that way

00:02:23,170 --> 00:02:26,140
I mean these are the jokes people I mean

00:02:24,790 --> 00:02:28,120
that's all we've really got we gave you

00:02:26,140 --> 00:02:30,790
a warning so this is just you know more

00:02:28,120 --> 00:02:32,920
of the same yeah what we are here to

00:02:30,790 --> 00:02:34,329
talk about is 20 operators in 20 minutes

00:02:32,920 --> 00:02:35,650
where'd you burn through a few of them

00:02:34,329 --> 00:02:38,530
but that's okay we'll get through 20

00:02:35,650 --> 00:02:40,450
okay that's that sounds like a lot yeah

00:02:38,530 --> 00:02:42,489
well there's a lot of operators in the

00:02:40,450 --> 00:02:44,769
rxjs library anybody happen to know how

00:02:42,489 --> 00:02:48,280
many there are got nothing but no snow

00:02:44,769 --> 00:02:56,850
by but no I told you no more answers for

00:02:48,280 --> 00:03:00,790
you 114 now but close I heard 104 yes

00:02:56,850 --> 00:03:01,959
there are actually 104 operators I'm

00:03:00,790 --> 00:03:06,340
gonna toss these down you pass them back

00:03:01,959 --> 00:03:09,670
out thank you so there are actually 104

00:03:06,340 --> 00:03:11,470
operators in rxjs right now that does

00:03:09,670 --> 00:03:15,099
not count any of the static create

00:03:11,470 --> 00:03:17,489
methods so of from from event from fetch

00:03:15,099 --> 00:03:21,370
not included just the pipeable operators

00:03:17,489 --> 00:03:23,769
104 so what we did is we decided to comb

00:03:21,370 --> 00:03:25,870
through the entire repo find these the

00:03:23,769 --> 00:03:27,370
operators and figure out which ones

00:03:25,870 --> 00:03:30,340
people may not be using on an everyday

00:03:27,370 --> 00:03:31,630
basis to find things that can add to

00:03:30,340 --> 00:03:33,519
your experience as you're creating

00:03:31,630 --> 00:03:35,650
observables and streams of data within

00:03:33,519 --> 00:03:37,959
your applications and we found some

00:03:35,650 --> 00:03:40,780
really interesting things and a whole

00:03:37,959 --> 00:03:42,699
lot of interesting gifts so hopefully

00:03:40,780 --> 00:03:45,340
you find it interesting and we're gonna

00:03:42,699 --> 00:03:46,140
move forward like I'm open I know I know

00:03:45,340 --> 00:03:47,700
yeah okay

00:03:46,140 --> 00:03:49,860
I'd you a perfect place to start with

00:03:47,700 --> 00:03:51,390
you do okay come on we can you and I

00:03:49,860 --> 00:03:54,780
even promised this this would be my only

00:03:51,390 --> 00:03:57,360
my one and only Space Jam joke okay

00:03:54,780 --> 00:03:58,890
one more but that one's it that will be

00:03:57,360 --> 00:04:00,270
the last one okay

00:03:58,890 --> 00:04:02,459
so you know how to kick this off then

00:04:00,270 --> 00:04:05,490
yes I know how to start with start with

00:04:02,459 --> 00:04:06,959
what start with come on a bit what are

00:04:05,490 --> 00:04:12,930
you gonna start with I'm gonna start

00:04:06,959 --> 00:04:15,630
with start with Costello we like the

00:04:12,930 --> 00:04:17,340
groom's it's okay so start with what

00:04:15,630 --> 00:04:18,989
starts with allows you to is to kick off

00:04:17,340 --> 00:04:20,220
your observable allows you to put

00:04:18,989 --> 00:04:22,109
something right at the very front of it

00:04:20,220 --> 00:04:24,150
so it can be very useful for

00:04:22,109 --> 00:04:26,310
asynchronous data to put maybe some C

00:04:24,150 --> 00:04:27,240
data in there some dummy data you know

00:04:26,310 --> 00:04:29,490
about dummies right

00:04:27,240 --> 00:04:30,720
unfortunately so you can start with some

00:04:29,490 --> 00:04:32,100
dummy data or whatever you want to put

00:04:30,720 --> 00:04:33,600
at the beginning of your your data there

00:04:32,100 --> 00:04:36,030
and allows you to kind of just insert

00:04:33,600 --> 00:04:37,080
that in there so space seem we got to

00:04:36,030 --> 00:04:38,700
start with a rocket launch I know

00:04:37,080 --> 00:04:39,990
ng-conf did it first they started the

00:04:38,700 --> 00:04:43,440
whole thing with their rocket launch but

00:04:39,990 --> 00:04:44,820
we had to have one too next operator

00:04:43,440 --> 00:04:46,800
we're gonna start with is pluck or

00:04:44,820 --> 00:04:47,580
continue with not start with out thank

00:04:46,800 --> 00:04:49,440
you

00:04:47,580 --> 00:04:50,850
pluck isn't an operator it's very

00:04:49,440 --> 00:04:53,250
similar to map but it has a very

00:04:50,850 --> 00:04:55,200
specific purpose it allows you to go in

00:04:53,250 --> 00:04:59,700
and grab a specific property off of

00:04:55,200 --> 00:05:02,370
values that are being emitted we had fun

00:04:59,700 --> 00:05:04,620
with gifts I promise hopefully you do as

00:05:02,370 --> 00:05:06,360
well but it's not only just finding a

00:05:04,620 --> 00:05:08,370
specific property but you can pass in

00:05:06,360 --> 00:05:10,470
multiple parameters to be able to find

00:05:08,370 --> 00:05:13,650
nested properties but still you only get

00:05:10,470 --> 00:05:15,600
one value out now my favorite one is

00:05:13,650 --> 00:05:17,370
pairwise and the reason why is because

00:05:15,600 --> 00:05:20,760
you can take pairwise and it's a perfect

00:05:17,370 --> 00:05:23,400
way to pair a sloth with this fluffy

00:05:20,760 --> 00:05:26,160
fluffy toy okay maybe it's not what the

00:05:23,400 --> 00:05:28,050
operators actually for we lost our

00:05:26,160 --> 00:05:30,060
presentation but what para is actually

00:05:28,050 --> 00:05:31,890
for is it omits the previous value and

00:05:30,060 --> 00:05:33,479
the current value is an array as you can

00:05:31,890 --> 00:05:36,840
see in those speaker notes there so you

00:05:33,479 --> 00:05:39,510
get the current value and the next value

00:05:36,840 --> 00:05:40,740
and you can use them to develop use that

00:05:39,510 --> 00:05:42,780
so anytime you need to know what the

00:05:40,740 --> 00:05:44,340
previous value was you can take those

00:05:42,780 --> 00:05:46,169
and now you don't have to store it and

00:05:44,340 --> 00:05:47,490
have it it comes with it for you so you

00:05:46,169 --> 00:05:48,870
can use it to build a nice little thing

00:05:47,490 --> 00:05:50,940
here like you see this min and Max how

00:05:48,870 --> 00:05:52,830
they interact this is a little example

00:05:50,940 --> 00:05:54,750
you know built with the pairwise

00:05:52,830 --> 00:05:57,180
operator built by a ruggedly handsome

00:05:54,750 --> 00:05:59,310
man who's a developer and you know might

00:05:57,180 --> 00:06:02,820
be standing right here

00:05:59,310 --> 00:06:04,800
thank you I'll take my $10 now I'll pay

00:06:02,820 --> 00:06:08,010
you later I gave away my third cookies

00:06:04,800 --> 00:06:09,480
so retry when you're familiar if you may

00:06:08,010 --> 00:06:12,389
be familiar with the retry operator we

00:06:09,480 --> 00:06:14,820
can specify how many times you want to

00:06:12,389 --> 00:06:16,860
retry a failure retry whities kind of

00:06:14,820 --> 00:06:19,260
gives you a little bit bonus on top of

00:06:16,860 --> 00:06:21,060
that you can get an observable of the

00:06:19,260 --> 00:06:22,530
errors so that you can decide how more

00:06:21,060 --> 00:06:24,690
granularly you want to handle your

00:06:22,530 --> 00:06:27,180
errors to retry them and by the way

00:06:24,690 --> 00:06:29,280
retry as a bonus operator doesn't count

00:06:27,180 --> 00:06:31,830
as part of the 20 so when something goes

00:06:29,280 --> 00:06:33,720
wrong you know you want to retry I have

00:06:31,830 --> 00:06:36,180
trouble with slide advancement so John

00:06:33,720 --> 00:06:39,240
helps me so I retry when Mike forgets to

00:06:36,180 --> 00:06:41,460
skip I retry so next one we talk about

00:06:39,240 --> 00:06:42,930
is zip so there's a lot of good

00:06:41,460 --> 00:06:44,520
operators that are used for combining

00:06:42,930 --> 00:06:45,750
multiple observables and zip is one of

00:06:44,520 --> 00:06:48,060
those so what it allows you to do is

00:06:45,750 --> 00:06:49,800
take a little buzzer bowles and group

00:06:48,060 --> 00:06:52,020
them together but you get all of the

00:06:49,800 --> 00:06:53,580
emissions at once so when everyone here

00:06:52,020 --> 00:06:55,080
has the color they throw it up in the

00:06:53,580 --> 00:06:56,790
air once everybody is thrown the color

00:06:55,080 --> 00:06:58,169
once they've all admitted you get the

00:06:56,790 --> 00:06:59,490
list of those and it pairs them together

00:06:58,169 --> 00:07:01,380
so you get the first ones and then the

00:06:59,490 --> 00:07:02,490
second ones I wanted to demonstrate it

00:07:01,380 --> 00:07:04,800
right here with all of you and hand out

00:07:02,490 --> 00:07:07,169
color packets but then it was messy and

00:07:04,800 --> 00:07:08,610
there's safety and all they sold me that

00:07:07,169 --> 00:07:12,320
wasn't a good idea yeah that's really

00:07:08,610 --> 00:07:14,400
bright the colors not the packet idea

00:07:12,320 --> 00:07:16,740
yeah I'm telling you that's all we've

00:07:14,400 --> 00:07:19,550
got these jokes so group by next

00:07:16,740 --> 00:07:22,140
operator is allows you to specify a

00:07:19,550 --> 00:07:26,120
grouping criteria to get your values

00:07:22,140 --> 00:07:28,350
grouped together as an organized output

00:07:26,120 --> 00:07:30,000
so you like to be organized

00:07:28,350 --> 00:07:32,600
organize your values as they come

00:07:30,000 --> 00:07:34,800
through using the group by operator

00:07:32,600 --> 00:07:35,789
describe subscribe on is a good one that

00:07:34,800 --> 00:07:36,990
allows you to kind of add some

00:07:35,789 --> 00:07:39,630
configuration so it allows you to add a

00:07:36,990 --> 00:07:41,430
scheduler so when an observer subscribes

00:07:39,630 --> 00:07:43,320
your observable it'll get the scheduler

00:07:41,430 --> 00:07:45,270
with it so it allows you to control you

00:07:43,320 --> 00:07:47,400
know the time of how it's going to go

00:07:45,270 --> 00:07:49,110
you know if it's gonna be a synchronous

00:07:47,400 --> 00:07:50,580
how it's all gonna work you know you can

00:07:49,110 --> 00:07:51,930
do some crazy things with it but

00:07:50,580 --> 00:07:53,520
anything a scheduler can do you can

00:07:51,930 --> 00:07:54,360
insert here so to really understand this

00:07:53,520 --> 00:07:56,789
one you got to really look at what

00:07:54,360 --> 00:07:57,720
schedules can give you glad we got

00:07:56,789 --> 00:07:59,010
through that one quickly because I was

00:07:57,720 --> 00:08:01,200
trying to get dizzy that's why I look

00:07:59,010 --> 00:08:03,930
that way yeah throttle time

00:08:01,200 --> 00:08:06,240
Thrall time allows you to specify a

00:08:03,930 --> 00:08:08,520
period of time to pause values coming

00:08:06,240 --> 00:08:12,030
through the observable stream to slow

00:08:08,520 --> 00:08:12,759
things down right but you can specify an

00:08:12,030 --> 00:08:14,529
interval how

00:08:12,759 --> 00:08:16,360
II wanted to wait and then after that

00:08:14,529 --> 00:08:19,509
window is up it'll emit the next bell or

00:08:16,360 --> 00:08:21,249
the latest value yeah sometimes you got

00:08:19,509 --> 00:08:23,439
throat just slow things down absolutely

00:08:21,249 --> 00:08:25,089
probably not now so timestamp so

00:08:23,439 --> 00:08:27,129
timestamp is another good time relating

00:08:25,089 --> 00:08:28,990
one and it allows you to specify get the

00:08:27,129 --> 00:08:30,789
time when you get something so when an

00:08:28,990 --> 00:08:32,889
observable emits instead of just giving

00:08:30,789 --> 00:08:34,240
you the value it takes that value and

00:08:32,889 --> 00:08:35,949
inserts it with an object and that

00:08:34,240 --> 00:08:38,620
object will have what the value is and

00:08:35,949 --> 00:08:40,990
when it happened which is now you got

00:08:38,620 --> 00:08:45,250
another value now and now so you can use

00:08:40,990 --> 00:08:47,740
the now clock all the time all the time

00:08:45,250 --> 00:08:49,990
is another time-based operator of course

00:08:47,740 --> 00:08:51,880
there's the name time in it and what it

00:08:49,990 --> 00:08:54,339
allows you to do is specify a time

00:08:51,880 --> 00:08:56,529
window to pause getting values emitted

00:08:54,339 --> 00:08:58,570
and when that window is up it will

00:08:56,529 --> 00:09:00,339
actually emit the latest value from the

00:08:58,570 --> 00:09:02,680
observable that sounds a lot like

00:09:00,339 --> 00:09:04,420
throttle time I know it doesn't there's

00:09:02,680 --> 00:09:06,339
a subtle difference between the two with

00:09:04,420 --> 00:09:08,800
throttle time going back to that when

00:09:06,339 --> 00:09:10,990
the timer expires it doesn't restart the

00:09:08,800 --> 00:09:12,670
timer the timer will restart upon the

00:09:10,990 --> 00:09:13,060
next emit coming through the observable

00:09:12,670 --> 00:09:15,370
streams

00:09:13,060 --> 00:09:18,160
whereas with audit time that timer will

00:09:15,370 --> 00:09:19,810
reset as soon as the timer expires so

00:09:18,160 --> 00:09:21,190
it's a more fluid consistent thing like

00:09:19,810 --> 00:09:22,959
these pancakes falling across the street

00:09:21,190 --> 00:09:24,699
that explanation took a lot of time it

00:09:22,959 --> 00:09:25,990
did speaking of time we're running a

00:09:24,699 --> 00:09:28,269
little bit behind so let's bump this up

00:09:25,990 --> 00:09:30,130
to ludicrous speed look it's not a race

00:09:28,269 --> 00:09:31,990
but we're gonna talk about races let's

00:09:30,130 --> 00:09:33,430
talk about the race operator so another

00:09:31,990 --> 00:09:35,139
one allows you to take your group of

00:09:33,430 --> 00:09:37,000
server balls but only get the one that

00:09:35,139 --> 00:09:38,470
emits first and all the rest get it

00:09:37,000 --> 00:09:41,699
ignored so if you're using the race

00:09:38,470 --> 00:09:41,699
operator if you're not first you're last

00:09:41,910 --> 00:09:47,319
next operator is skip no you can't skip

00:09:45,760 --> 00:09:48,670
we need to go through all the operators

00:09:47,319 --> 00:09:50,350
they've paid for this conference you get

00:09:48,670 --> 00:09:51,790
to get them everything but I can't get

00:09:50,350 --> 00:09:53,889
the operator no you can't skip the Opera

00:09:51,790 --> 00:09:56,500
okay so the skipper operator allows you

00:09:53,889 --> 00:09:58,329
to specify a certain number of emissions

00:09:56,500 --> 00:09:59,920
that you want to skip so you pass in

00:09:58,329 --> 00:10:02,230
three it'll skip the first three values

00:09:59,920 --> 00:10:05,829
and then proceed to emit everything that

00:10:02,230 --> 00:10:10,269
comes across after that well let it play

00:10:05,829 --> 00:10:12,940
again nope I'm going over skip one love

00:10:10,269 --> 00:10:14,860
it so that's nice but I like to skip

00:10:12,940 --> 00:10:15,699
until so skip until allows you to get a

00:10:14,860 --> 00:10:16,930
little bit more there so you're gonna

00:10:15,699 --> 00:10:19,089
skip things are going to keep skipping

00:10:16,930 --> 00:10:21,399
and things until no another observable

00:10:19,089 --> 00:10:23,410
emits and that observable tells you to

00:10:21,399 --> 00:10:24,850
stop it and you stop skipping and you

00:10:23,410 --> 00:10:26,560
now allow the variables in so you you're

00:10:24,850 --> 00:10:30,939
controlled by a second observable

00:10:26,560 --> 00:10:33,519
on when you stop skipping skip while is

00:10:30,939 --> 00:10:34,930
another way to skip a certain number but

00:10:33,519 --> 00:10:36,730
you're not specifying in number you're

00:10:34,930 --> 00:10:39,160
specifying a function that allows you to

00:10:36,730 --> 00:10:41,230
specify I want to skip while this is

00:10:39,160 --> 00:10:42,579
still true so if it goes to false then

00:10:41,230 --> 00:10:44,529
it will stop skipping and then you can

00:10:42,579 --> 00:10:47,559
start to get the values that are coming

00:10:44,529 --> 00:10:48,850
through that's that's pretty negative of

00:10:47,559 --> 00:10:51,189
you Mike I know I like to be more

00:10:48,850 --> 00:10:53,019
positive I'm a positive person so I'm

00:10:51,189 --> 00:10:54,459
gonna go with take Wow okay so works

00:10:53,019 --> 00:10:56,410
like skip well but you allow everything

00:10:54,459 --> 00:10:58,360
in you're taking those values in until

00:10:56,410 --> 00:11:00,009
that predicate is false so then when

00:10:58,360 --> 00:11:01,959
that predicate is false we say sorry now

00:11:00,009 --> 00:11:03,670
we're closing up shop so it's just the

00:11:01,959 --> 00:11:08,350
reverse everything comes in then you

00:11:03,670 --> 00:11:10,839
stop it next up tap I know I know a lot

00:11:08,350 --> 00:11:13,389
of you may be using tap but I like to

00:11:10,839 --> 00:11:15,160
think of tap as the unicorn operator I

00:11:13,389 --> 00:11:17,920
was thinking of the second ng-conf by

00:11:15,160 --> 00:11:19,269
the way tap is a little bit different

00:11:17,920 --> 00:11:21,249
than all the other operators because

00:11:19,269 --> 00:11:22,480
with all the operators anything that

00:11:21,249 --> 00:11:24,309
you're passing into with the functions

00:11:22,480 --> 00:11:26,379
that you're passing in you want them to

00:11:24,309 --> 00:11:29,259
be pure same input gives the same output

00:11:26,379 --> 00:11:30,399
no side effects taps the exact opposite

00:11:29,259 --> 00:11:32,350
this is the place where you're supposed

00:11:30,399 --> 00:11:34,779
to do your side effects if you need to

00:11:32,350 --> 00:11:36,490
set a value coming out of your stream if

00:11:34,779 --> 00:11:37,720
you're not doing it in your subscribe

00:11:36,490 --> 00:11:39,430
but you want to set another value

00:11:37,720 --> 00:11:41,290
externally with some sort of side

00:11:39,430 --> 00:11:43,000
effects that you do the other way to

00:11:41,290 --> 00:11:44,680
refer to tap in my opinion and I've

00:11:43,000 --> 00:11:46,689
heard a lot of people say this it's it's

00:11:44,680 --> 00:11:48,129
the console blog operator you have no

00:11:46,689 --> 00:11:49,600
idea what's going on your stream and you

00:11:48,129 --> 00:11:52,029
need to figure out what's going on throw

00:11:49,600 --> 00:11:54,689
tap in there use console.log and find

00:11:52,029 --> 00:11:56,980
out and use it to debug your operations

00:11:54,689 --> 00:11:58,300
so let's let's break it down a little

00:11:56,980 --> 00:12:00,009
bit let's reduce things a little bit so

00:11:58,300 --> 00:12:01,509
we're talk about reduce so what reduce

00:12:00,009 --> 00:12:03,490
does is allows you to give it an

00:12:01,509 --> 00:12:05,800
observable and then all of the values

00:12:03,490 --> 00:12:08,379
are going to get taken down and reduced

00:12:05,800 --> 00:12:09,670
via the function to one value when it

00:12:08,379 --> 00:12:11,769
completes and then that'll get emitted

00:12:09,670 --> 00:12:13,209
to you so now you can reduce everything

00:12:11,769 --> 00:12:14,860
down you don't have to track it you

00:12:13,209 --> 00:12:16,269
don't have to use a library that starts

00:12:14,860 --> 00:12:17,980
with the underscore character and a dot

00:12:16,269 --> 00:12:24,639
you can just do it directly on your

00:12:17,980 --> 00:12:26,139
observable itself ignore elements not

00:12:24,639 --> 00:12:28,959
sure about the use case here but there's

00:12:26,139 --> 00:12:31,179
a particular state that processes with

00:12:28,959 --> 00:12:32,829
ignore elements what it does is anything

00:12:31,179 --> 00:12:34,990
that gets emitted it doesn't care about

00:12:32,829 --> 00:12:36,100
it's not going to let it through the

00:12:34,990 --> 00:12:37,389
only thing that comes through if you're

00:12:36,100 --> 00:12:38,750
using ignore elements is if your

00:12:37,389 --> 00:12:41,090
observable or word at

00:12:38,750 --> 00:12:42,380
or if were to complete so that's the

00:12:41,090 --> 00:12:43,730
only thing that's going to happen so if

00:12:42,380 --> 00:12:45,110
you were expecting values that continue

00:12:43,730 --> 00:12:45,980
to come through with ignore elements

00:12:45,110 --> 00:12:47,210
it's not gonna happen

00:12:45,980 --> 00:12:53,540
you'll just know if your observable

00:12:47,210 --> 00:12:55,700
errors or completes you'll join us oh I

00:12:53,540 --> 00:12:57,980
was ignoring your elements I was I was

00:12:55,700 --> 00:12:59,450
being an example I don't do a good job

00:12:57,980 --> 00:13:02,000
yeah what well played thank you for

00:12:59,450 --> 00:13:03,950
helping me with the explanation so let's

00:13:02,000 --> 00:13:06,620
get small now let's look at this tiny

00:13:03,950 --> 00:13:07,610
details so mim-mim does probably what

00:13:06,620 --> 00:13:09,020
you're gonna get so you take your

00:13:07,610 --> 00:13:10,430
observable you get all the values that

00:13:09,020 --> 00:13:12,830
are emitted and when it completes it

00:13:10,430 --> 00:13:14,150
gives you the smallest one so again you

00:13:12,830 --> 00:13:15,320
don't need to track this durable can do

00:13:14,150 --> 00:13:15,890
this for you so we're gonna get the

00:13:15,320 --> 00:13:17,270
smallest one

00:13:15,890 --> 00:13:18,800
pay attention those small details Mike

00:13:17,270 --> 00:13:20,030
the small little things yeah little

00:13:18,800 --> 00:13:21,530
things mattered yeah the one thing I'm

00:13:20,030 --> 00:13:23,210
noticing is photos not there I miss

00:13:21,530 --> 00:13:26,090
Pluto who doesn't plant it right here

00:13:23,210 --> 00:13:28,580
for me always I agree I don't make

00:13:26,090 --> 00:13:30,320
things easy so going with the absolute

00:13:28,580 --> 00:13:31,370
opposite of men so same thing when

00:13:30,320 --> 00:13:33,650
you're observable completes when the

00:13:31,370 --> 00:13:35,780
values are through it will give you the

00:13:33,650 --> 00:13:38,390
maximum value so just like men except

00:13:35,780 --> 00:13:41,180
here instead of returning Pluto it'll

00:13:38,390 --> 00:13:44,420
return Jupiter that that was very big of

00:13:41,180 --> 00:13:47,090
you I can I try so that's 20 operators

00:13:44,420 --> 00:13:48,800
it is we did 20 already in less than 20

00:13:47,090 --> 00:13:51,380
minutes so let's give them a bonus so

00:13:48,800 --> 00:13:54,140
we're gonna end with and with so and

00:13:51,380 --> 00:13:55,790
with it's our bookend I'm start with so

00:13:54,140 --> 00:13:57,710
it allows you to put something in your

00:13:55,790 --> 00:13:59,780
observable and I made it just before it

00:13:57,710 --> 00:14:01,670
would complete so since we had our

00:13:59,780 --> 00:14:03,470
spaceship take off the proper thing we

00:14:01,670 --> 00:14:05,300
should do is have that rocket also now

00:14:03,470 --> 00:14:07,100
land but that's you know the idea of in

00:14:05,300 --> 00:14:09,260
with is it's the reverse of start with

00:14:07,100 --> 00:14:11,030
so axle ken's and that's a good way to

00:14:09,260 --> 00:14:12,290
end with the operators however we've

00:14:11,030 --> 00:14:14,870
gone through this entire conference I

00:14:12,290 --> 00:14:17,150
have yet to see lost or not anywhere and

00:14:14,870 --> 00:14:18,950
in the I figure we need to end with lost

00:14:17,150 --> 00:14:22,610
or not lost when it's my favorite so he

00:14:18,950 --> 00:14:25,070
has to be here absolutely so what we've

00:14:22,610 --> 00:14:27,890
done is we've just gone through 21 22 if

00:14:25,070 --> 00:14:30,050
he can't share operators in a lot less

00:14:27,890 --> 00:14:33,680
than 20 minutes to be able to just give

00:14:30,050 --> 00:14:35,630
you some insight and some ideas to go

00:14:33,680 --> 00:14:37,190
out and explore other operators I don't

00:14:35,630 --> 00:14:38,840
know a lot of us just happen to stick

00:14:37,190 --> 00:14:41,570
with map filter and switch map and maybe

00:14:38,840 --> 00:14:43,430
a few others but explore the other 100

00:14:41,570 --> 00:14:45,740
plus operators that are out there and

00:14:43,430 --> 00:14:47,450
see what you can do to increase your use

00:14:45,740 --> 00:14:49,700
of ArcGIS within your applications to

00:14:47,450 --> 00:14:50,900
make it more reactive so maybe some of

00:14:49,700 --> 00:14:51,800
those sound like they fit a use case

00:14:50,900 --> 00:14:53,570
that you something you're doing

00:14:51,800 --> 00:14:54,769
that you can now do with arts yes so if

00:14:53,570 --> 00:14:57,080
you do that you don't look into them

00:14:54,769 --> 00:14:59,899
deeper if none of those really fit we

00:14:57,080 --> 00:15:01,760
only did 21 of 104 so go read some more

00:14:59,899 --> 00:15:02,420
of them you know find ones that might be

00:15:01,760 --> 00:15:03,890
useful to you

00:15:02,420 --> 00:15:05,990
if you have them you know find them look

00:15:03,890 --> 00:15:06,500
them up play with some code ask us some

00:15:05,990 --> 00:15:08,149
question

00:15:06,500 --> 00:15:11,570
no don't ask us questions ask been some

00:15:08,149 --> 00:15:12,680
questions he's here don't ask us but you

00:15:11,570 --> 00:15:14,029
know use that if you're only using one

00:15:12,680 --> 00:15:15,589
more operating yet it's one more

00:15:14,029 --> 00:15:17,360
operator than the time before

00:15:15,589 --> 00:15:21,860
but if you only took away one thing from

00:15:17,360 --> 00:15:23,120
this presentation Michael Collins also

00:15:21,860 --> 00:15:24,470
you may have noticed as we went through

00:15:23,120 --> 00:15:26,060
the slides there were some pictures in

00:15:24,470 --> 00:15:29,540
there I'm not an artist

00:15:26,060 --> 00:15:30,860
I'm suit artist okay but actually all

00:15:29,540 --> 00:15:32,870
the artworks that you saw on there was

00:15:30,860 --> 00:15:34,250
actually from our kids we had here kids

00:15:32,870 --> 00:15:35,690
color pictures and draw pictures and we

00:15:34,250 --> 00:15:38,029
want to give a shout out to them so

00:15:35,690 --> 00:15:40,329
thank you to our kids for providing some

00:15:38,029 --> 00:15:40,329
artwork

00:15:43,269 --> 00:15:47,450
so thank you for coming to our talk my

00:15:45,740 --> 00:15:48,890
name is Mike Brockie and I'm Johnny's

00:15:47,450 --> 00:15:49,610
wiki enjoy the rest of the conference

00:15:48,890 --> 00:15:54,039
thank you

00:15:49,610 --> 00:15:54,039
[Applause]

00:15:58,100 --> 00:16:04,710
[Music]

00:16:10,310 --> 00:16:12,370

YouTube URL: https://www.youtube.com/watch?v=ak3MvMn8u18


