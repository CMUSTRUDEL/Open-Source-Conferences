Title: The Control Value Accessor | Jennifer Wadella
Publication date: 2019-05-01
Playlist: ng-conf 2019
Description: 
	Traveling through space and time is hard, but writing clean Reactive Forms in Angular doesn’t have to be, thanks to the Control Value Accessor interface! Fear not, unlike wormholes, elements using the CVA aren’t prone to sudden collapse or high radiation, they’re just going to help you write cleaner, clearer code faster, and solve some formerly complicated problems.

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:00,270 --> 00:00:03,500
[Music]

00:00:07,920 --> 00:00:11,170
[Music]

00:00:12,049 --> 00:00:16,199
so wormholes a theoretical structure of

00:00:14,730 --> 00:00:18,060
space-time and vision is a tunnel

00:00:16,199 --> 00:00:22,350
connecting two points that are separated

00:00:18,060 --> 00:00:23,789
by space and time so this is theoretical

00:00:22,350 --> 00:00:25,260
but this is kind of envisioned like this

00:00:23,789 --> 00:00:28,080
where we've got space-time being folded

00:00:25,260 --> 00:00:29,609
and the wormhole is connected by two

00:00:28,080 --> 00:00:31,199
points typically what we consider a

00:00:29,609 --> 00:00:34,680
black hole which we now actually have

00:00:31,199 --> 00:00:35,940
images of which is super exciting right

00:00:34,680 --> 00:00:39,270
yeah I let's give it up for the

00:00:35,940 --> 00:00:41,430
scientists the problem with wormholes

00:00:39,270 --> 00:00:44,789
however is they can have some unexpected

00:00:41,430 --> 00:00:46,559
side effects that were not a fan of okay

00:00:44,789 --> 00:00:48,059
but the control value access or

00:00:46,559 --> 00:00:49,620
fortunately does not have any side

00:00:48,059 --> 00:00:51,539
effects that I'm aware of it has not

00:00:49,620 --> 00:00:54,539
produced a demo gorgon as far as I have

00:00:51,539 --> 00:00:56,219
been using it so I think we're safe okay

00:00:54,539 --> 00:00:58,020
but the control value access er actually

00:00:56,219 --> 00:01:00,120
defines an interface that acts as a

00:00:58,020 --> 00:01:01,910
bridge between angular forms API and a

00:01:00,120 --> 00:01:05,430
native element than Dom

00:01:01,910 --> 00:01:07,170
what does that mean we can do a couple

00:01:05,430 --> 00:01:10,530
really really powerful things with this

00:01:07,170 --> 00:01:13,560
to solve form problems most specifically

00:01:10,530 --> 00:01:15,360
we can implement an interface to create

00:01:13,560 --> 00:01:18,780
a custom form control that integrates

00:01:15,360 --> 00:01:21,600
really nicely with angular forms so if

00:01:18,780 --> 00:01:23,790
we envision our wormhole like this we've

00:01:21,600 --> 00:01:26,280
got our control value accessor which is

00:01:23,790 --> 00:01:27,630
passing information in between a custom

00:01:26,280 --> 00:01:29,490
directive or a control that we have

00:01:27,630 --> 00:01:32,340
created and in the parent form that is

00:01:29,490 --> 00:01:34,020
it is a part of and if you're not

00:01:32,340 --> 00:01:35,909
familiar with forms as much and some of

00:01:34,020 --> 00:01:38,009
these terms will go through that so how

00:01:35,909 --> 00:01:39,240
do we actually begin to use the control

00:01:38,009 --> 00:01:42,509
value access or to make some really

00:01:39,240 --> 00:01:45,149
awesome powerful things happen to

00:01:42,509 --> 00:01:50,640
demonstrate this we are going to build a

00:01:45,149 --> 00:01:52,439
sample application and so I will sorry

00:01:50,640 --> 00:02:01,560
they kind of did something weird with my

00:01:52,439 --> 00:02:02,820
setup where is my sorry about this we'll

00:02:01,560 --> 00:02:04,770
just use the gift for now but what we're

00:02:02,820 --> 00:02:06,540
gonna be doing is creating a sample

00:02:04,770 --> 00:02:08,610
application and we're gonna have a

00:02:06,540 --> 00:02:10,649
couple different custom components that

00:02:08,610 --> 00:02:11,940
we have first of all we've got a type a

00:02:10,649 --> 00:02:15,150
head that we're gonna be able to select

00:02:11,940 --> 00:02:16,440
a galaxy from and then we're going to

00:02:15,150 --> 00:02:18,510
have some sort of star rating system

00:02:16,440 --> 00:02:20,370
where we can rate how awesome we think

00:02:18,510 --> 00:02:21,900
this galaxy is and then we will save our

00:02:20,370 --> 00:02:26,239
name to let people know what we think

00:02:21,900 --> 00:02:27,959
about this galaxy so to really kind of

00:02:26,239 --> 00:02:29,120
illustrate what we're gonna be doing

00:02:27,959 --> 00:02:31,410
here we're gonna have these custom

00:02:29,120 --> 00:02:33,690
components that act as form elements in

00:02:31,410 --> 00:02:35,160
our reactive form we're gonna have again

00:02:33,690 --> 00:02:36,750
our type-ahead component and what we're

00:02:35,160 --> 00:02:38,220
gonna be doing is displaying one value

00:02:36,750 --> 00:02:40,319
to the user but what we really care

00:02:38,220 --> 00:02:42,239
about is the ID for whatever that galaxy

00:02:40,319 --> 00:02:44,849
is and that's one of what we want to be

00:02:42,239 --> 00:02:45,959
passing as our form value and then for

00:02:44,849 --> 00:02:47,340
our star reading component very

00:02:45,959 --> 00:02:48,810
similarly we're gonna have something

00:02:47,340 --> 00:02:50,910
displaying in the UI but all we really

00:02:48,810 --> 00:02:53,160
care about is again submitting some sort

00:02:50,910 --> 00:02:56,730
of rating number to our form as its

00:02:53,160 --> 00:02:58,769
value so reactive forms crash course is

00:02:56,730 --> 00:03:01,530
everybody on the reactive forms training

00:02:58,769 --> 00:03:02,989
here okay I'll get the rest of you on

00:03:01,530 --> 00:03:05,220
board

00:03:02,989 --> 00:03:07,170
reactive form is a model driven approach

00:03:05,220 --> 00:03:09,750
to handling form inputs whose values

00:03:07,170 --> 00:03:12,659
change over time so this can be a much

00:03:09,750 --> 00:03:14,370
cleaner way to implement forms that can

00:03:12,659 --> 00:03:16,590
get really messy when we start to nest

00:03:14,370 --> 00:03:19,260
in and create dynamic components inside

00:03:16,590 --> 00:03:21,090
the form control is our basic building

00:03:19,260 --> 00:03:23,129
blocks so you can think of this is a

00:03:21,090 --> 00:03:24,930
basic input element that you would have

00:03:23,129 --> 00:03:26,790
you have some sort of form control

00:03:24,930 --> 00:03:28,530
representation for that and this is

00:03:26,790 --> 00:03:30,330
going to track the value of whatever

00:03:28,530 --> 00:03:34,140
that form is and the validation status

00:03:30,330 --> 00:03:36,060
as well a form group is a group of form

00:03:34,140 --> 00:03:38,400
controls so if you have some sort of

00:03:36,060 --> 00:03:40,349
object structure that you need to submit

00:03:38,400 --> 00:03:42,510
your values in we can use a form group

00:03:40,349 --> 00:03:45,060
made of form controls that will handle

00:03:42,510 --> 00:03:46,890
that for us and then the form control

00:03:45,060 --> 00:03:49,140
name is a directive that I tend to use

00:03:46,890 --> 00:03:51,450
that is going to tie a form element to a

00:03:49,140 --> 00:03:53,280
form control there's also just the form

00:03:51,450 --> 00:03:56,700
control directive and I'll show both of

00:03:53,280 --> 00:03:58,769
those in this so when we look at

00:03:56,700 --> 00:04:00,810
creating our reactive form for our

00:03:58,769 --> 00:04:02,129
sample application this is what that's

00:04:00,810 --> 00:04:04,319
gonna look like we're gonna have a main

00:04:02,129 --> 00:04:06,060
form group and then we just have three

00:04:04,319 --> 00:04:08,069
different form controls our galaxy form

00:04:06,060 --> 00:04:10,409
control our rating form control and our

00:04:08,069 --> 00:04:11,819
name form control a couple things we

00:04:10,409 --> 00:04:13,860
care about

00:04:11,819 --> 00:04:15,689
we want our rating form control to be

00:04:13,860 --> 00:04:17,039
disabled by default and so that's kind

00:04:15,689 --> 00:04:18,870
of a common situation you might run into

00:04:17,039 --> 00:04:20,519
with forms when they're dependent on

00:04:18,870 --> 00:04:22,620
different values and figuring out how to

00:04:20,519 --> 00:04:24,389
have that happen so in our form we don't

00:04:22,620 --> 00:04:26,550
want our ratings to be enabled

00:04:24,389 --> 00:04:29,610
until our type-ahead drop-down actually

00:04:26,550 --> 00:04:30,930
has a value in it so when we begin to

00:04:29,610 --> 00:04:33,660
build out our form this is what that

00:04:30,930 --> 00:04:36,270
markup is going to look like we will be

00:04:33,660 --> 00:04:38,460
tying our galaxy form via the forum

00:04:36,270 --> 00:04:40,080
group control and then I've got a couple

00:04:38,460 --> 00:04:41,820
of custom components in here that I have

00:04:40,080 --> 00:04:44,250
already created so you can see that gr

00:04:41,820 --> 00:04:47,220
type-ahead gr standing for galaxy rating

00:04:44,250 --> 00:04:48,690
as well as my gr star rater and then I'm

00:04:47,220 --> 00:04:51,449
going ahead and I'm passing in an array

00:04:48,690 --> 00:04:53,900
of galaxies for our data that we're

00:04:51,449 --> 00:04:56,039
gonna put in that type-ahead to populate

00:04:53,900 --> 00:04:57,240
and you might be thinking okay well

00:04:56,039 --> 00:04:58,979
Jennifer I I can solve this problem

00:04:57,240 --> 00:05:01,380
already this is not that big of a deal

00:04:58,979 --> 00:05:03,360
I'm going to wire up my custom component

00:05:01,380 --> 00:05:06,509
when a user interacts with it I'm gonna

00:05:03,360 --> 00:05:09,150
emit a change event it'll be awesome in

00:05:06,509 --> 00:05:11,160
my pony I'll go ahead and I'll use like

00:05:09,150 --> 00:05:12,630
my change listener I'll push that value

00:05:11,160 --> 00:05:13,830
to the form using set value or patch

00:05:12,630 --> 00:05:16,020
value it'll be fine

00:05:13,830 --> 00:05:20,159
like I don't need your control value sir

00:05:16,020 --> 00:05:22,260
oh but you do okay so there are a couple

00:05:20,159 --> 00:05:25,110
pitfalls with this solution but when we

00:05:22,260 --> 00:05:27,150
edge all the methods for looking and to

00:05:25,110 --> 00:05:28,740
amend chairs this is a pretty common

00:05:27,150 --> 00:05:30,150
pattern in angular but it's not one we

00:05:28,740 --> 00:05:33,090
need to be implementing for building

00:05:30,150 --> 00:05:35,310
custom form controls having to have that

00:05:33,090 --> 00:05:37,020
initial additional method of patch value

00:05:35,310 --> 00:05:38,729
on our form control every time we're

00:05:37,020 --> 00:05:41,370
getting a change from somewhere else can

00:05:38,729 --> 00:05:43,470
be really messy to deal with and how

00:05:41,370 --> 00:05:47,250
would we even begin to figure out how to

00:05:43,470 --> 00:05:49,500
deal with a validation for this okay so

00:05:47,250 --> 00:05:51,659
let's take a look at the control value

00:05:49,500 --> 00:05:53,159
access err to this and first we need to

00:05:51,659 --> 00:05:54,870
understand that the control value access

00:05:53,159 --> 00:05:57,150
or is an interface and it's got a couple

00:05:54,870 --> 00:05:59,370
methods on it that are required with

00:05:57,150 --> 00:06:01,740
typescript we know that interfaces have

00:05:59,370 --> 00:06:03,120
to have all their methods or properties

00:06:01,740 --> 00:06:05,159
implemented as long as they were

00:06:03,120 --> 00:06:06,510
required so if you're beginning to

00:06:05,159 --> 00:06:08,639
implement the control VI access or

00:06:06,510 --> 00:06:10,620
interface you are gonna get errors with

00:06:08,639 --> 00:06:11,759
your typescript compiler until you have

00:06:10,620 --> 00:06:14,130
all the methods implemented

00:06:11,759 --> 00:06:16,229
appropriately so walking through these

00:06:14,130 --> 00:06:17,849
methods let's see what's going on first

00:06:16,229 --> 00:06:19,349
of all we have the right value and this

00:06:17,849 --> 00:06:21,510
is going to write the value to the

00:06:19,349 --> 00:06:23,550
element and so this is really important

00:06:21,510 --> 00:06:24,230
for understanding where our value is

00:06:23,550 --> 00:06:25,700
coming from

00:06:24,230 --> 00:06:27,950
this is going to be called in two

00:06:25,700 --> 00:06:29,090
different instances this is going to be

00:06:27,950 --> 00:06:31,400
called it first when the form is

00:06:29,090 --> 00:06:33,650
instantiated and then again if patch

00:06:31,400 --> 00:06:36,320
value or set value is called to update

00:06:33,650 --> 00:06:38,120
this form control so if we look at this

00:06:36,320 --> 00:06:39,770
and kind of our our wormhole diagram

00:06:38,120 --> 00:06:41,720
that we're referring back to we've got

00:06:39,770 --> 00:06:43,130
our our component that is implementing

00:06:41,720 --> 00:06:45,170
the control value access or interface

00:06:43,130 --> 00:06:46,670
and it might be displaying whatever the

00:06:45,170 --> 00:06:48,530
value is like let's say we're doing a

00:06:46,670 --> 00:06:49,850
name input and my name is Jennifer

00:06:48,530 --> 00:06:52,910
that's what's in the value that's what

00:06:49,850 --> 00:06:55,460
we want to display in our UI so the way

00:06:52,910 --> 00:06:57,200
the component implementing the control

00:06:55,460 --> 00:06:59,600
value access or interface is going to

00:06:57,200 --> 00:07:01,370
get that is when we are either calling

00:06:59,600 --> 00:07:03,500
our new form control and passing in a

00:07:01,370 --> 00:07:05,690
value of Jennifer or if we are using

00:07:03,500 --> 00:07:08,090
patch value or set value to actually

00:07:05,690 --> 00:07:09,890
modify the content of that form control

00:07:08,090 --> 00:07:11,120
so it's important to understand how

00:07:09,890 --> 00:07:13,880
you're actually getting these values

00:07:11,120 --> 00:07:16,640
through the next method we need to care

00:07:13,880 --> 00:07:18,560
about is register on change and so this

00:07:16,640 --> 00:07:21,230
is something that we need to control to

00:07:18,560 --> 00:07:23,690
let our our parent form know that our

00:07:21,230 --> 00:07:25,490
form control value has changed so if

00:07:23,690 --> 00:07:26,870
we've already implemented and the user

00:07:25,490 --> 00:07:28,790
makes some sort of selection they

00:07:26,870 --> 00:07:30,410
changed the name from let's say Jennifer

00:07:28,790 --> 00:07:32,360
to ELISA we want to be able to

00:07:30,410 --> 00:07:34,370
communicate that to our parent form and

00:07:32,360 --> 00:07:36,320
so that's going to look like this where

00:07:34,370 --> 00:07:38,060
we've got our component we've fired this

00:07:36,320 --> 00:07:40,580
on change event with some sort of new

00:07:38,060 --> 00:07:42,860
value the control value access or our

00:07:40,580 --> 00:07:45,140
wormhole is getting that value and then

00:07:42,860 --> 00:07:47,210
for instance if we are subscribing to

00:07:45,140 --> 00:07:48,770
value changes on that form control name

00:07:47,210 --> 00:07:50,510
we are going to get that new value of

00:07:48,770 --> 00:07:52,720
ELISA so that's how we're starting to

00:07:50,510 --> 00:07:56,330
pass the information back and forth

00:07:52,720 --> 00:07:58,160
mm-hmm all right register untouched is

00:07:56,330 --> 00:08:00,290
our next one and this is very similar to

00:07:58,160 --> 00:08:02,180
unchanged we want to let a form control

00:08:00,290 --> 00:08:03,530
know when it has been and interacted

00:08:02,180 --> 00:08:05,630
with a lot of times we'll use this for

00:08:03,530 --> 00:08:07,250
validation so if a user is interacting

00:08:05,630 --> 00:08:08,720
with a form and there's a required field

00:08:07,250 --> 00:08:11,060
and they touch it but don't fill in any

00:08:08,720 --> 00:08:12,920
information we might want a way to show

00:08:11,060 --> 00:08:15,050
the user that hey they do need to

00:08:12,920 --> 00:08:18,110
require or they do need to fill out this

00:08:15,050 --> 00:08:20,450
form so that is what we're going to call

00:08:18,110 --> 00:08:22,760
on a blur function and so when you're

00:08:20,450 --> 00:08:24,260
implementing this custom component and

00:08:22,760 --> 00:08:25,790
your user interacts with your element

00:08:24,260 --> 00:08:27,470
and has some sort of blur where they

00:08:25,790 --> 00:08:28,700
don't necessarily update information but

00:08:27,470 --> 00:08:30,680
they've touched or interacted with it

00:08:28,700 --> 00:08:31,910
that's when we want to call our on touch

00:08:30,680 --> 00:08:34,130
method which is going to send that

00:08:31,910 --> 00:08:36,349
touched this is going to set our form

00:08:34,130 --> 00:08:37,700
control touch to value to true as well

00:08:36,349 --> 00:08:39,200
as add the class ng

00:08:37,700 --> 00:08:41,180
touched so if you're not familiar with

00:08:39,200 --> 00:08:43,220
angular validation and the way it adds

00:08:41,180 --> 00:08:44,780
all its different classes we can easily

00:08:43,220 --> 00:08:46,400
hook into those by making sure that the

00:08:44,780 --> 00:08:47,720
validation status and the touch status

00:08:46,400 --> 00:08:51,320
and the dirty status are updated

00:08:47,720 --> 00:08:52,550
properly and finally we have set

00:08:51,320 --> 00:08:54,560
disabled State and you'll notice that

00:08:52,550 --> 00:08:56,840
this is an optional function so you do

00:08:54,560 --> 00:08:59,480
not need to implement it but this is

00:08:56,840 --> 00:09:01,760
going to be called to track the disabled

00:08:59,480 --> 00:09:03,860
state of a form so this will be called

00:09:01,760 --> 00:09:07,300
either when a form control is

00:09:03,860 --> 00:09:09,860
instantiated with a disabled or a

00:09:07,300 --> 00:09:12,530
disabled key that is true or false or

00:09:09,860 --> 00:09:15,200
when you actually call dot enable or

00:09:12,530 --> 00:09:17,360
disable on the form element so back to

00:09:15,200 --> 00:09:18,980
our diagram here we've got our component

00:09:17,360 --> 00:09:20,390
we're doing something with our set

00:09:18,980 --> 00:09:22,820
disabled State maybe we're making

00:09:20,390 --> 00:09:24,410
changes to our UI that we're displaying

00:09:22,820 --> 00:09:26,660
to let the user know that this component

00:09:24,410 --> 00:09:27,950
is disabled so we need to be able to get

00:09:26,660 --> 00:09:31,970
that information when the form is

00:09:27,950 --> 00:09:33,500
actually disabled okay let's look at

00:09:31,970 --> 00:09:35,030
actually what implementation for the

00:09:33,500 --> 00:09:38,570
control value access or looks like so

00:09:35,030 --> 00:09:39,800
you all can begin to use this so we're

00:09:38,570 --> 00:09:41,630
going to have to use the energy value

00:09:39,800 --> 00:09:42,860
access err to register this component as

00:09:41,630 --> 00:09:44,570
a provider for the control value

00:09:42,860 --> 00:09:45,950
accessor and this is going to register

00:09:44,570 --> 00:09:48,200
the component early so we need to use

00:09:45,950 --> 00:09:49,670
forward rough to refer to it so this is

00:09:48,200 --> 00:09:52,220
what your basic structure is gonna look

00:09:49,670 --> 00:09:55,190
like you'll notice I do not have control

00:09:52,220 --> 00:09:56,690
value access or implemented yet or any

00:09:55,190 --> 00:09:59,540
of the methods this is just some of our

00:09:56,690 --> 00:10:01,340
setup code and then when we do have it

00:09:59,540 --> 00:10:02,990
implemented you can see I've got my

00:10:01,340 --> 00:10:04,940
methods that we talked about here

00:10:02,990 --> 00:10:06,290
writing value where I'm setting the

00:10:04,940 --> 00:10:09,170
value that I'm receiving from the form

00:10:06,290 --> 00:10:11,420
control on this component I've got my

00:10:09,170 --> 00:10:13,850
change method aliased I've got my

00:10:11,420 --> 00:10:15,770
register on touched method aliased as

00:10:13,850 --> 00:10:18,890
well as my set disabled say I'm setting

00:10:15,770 --> 00:10:21,680
a disabled member on my component to be

00:10:18,890 --> 00:10:22,970
whatever the the disabled state is if

00:10:21,680 --> 00:10:24,620
you look at the template I've got my

00:10:22,970 --> 00:10:27,110
input and we've got some sort of changed

00:10:24,620 --> 00:10:28,220
event and when an user interacts with

00:10:27,110 --> 00:10:30,140
that I'm gonna go ahead and call

00:10:28,220 --> 00:10:32,840
untouched and unchanged and with

00:10:30,140 --> 00:10:34,640
unchanged I'm going to pass along

00:10:32,840 --> 00:10:38,000
whatever the current value of that form

00:10:34,640 --> 00:10:39,680
control is and don't worry I'll this

00:10:38,000 --> 00:10:41,150
sample code is available online for

00:10:39,680 --> 00:10:44,450
those of you not at the fancy tables

00:10:41,150 --> 00:10:46,160
with laptops out ok when we look at

00:10:44,450 --> 00:10:47,390
actually tying this component in door 4

00:10:46,160 --> 00:10:49,190
markup this is what you saw earlier

00:10:47,390 --> 00:10:51,080
where I do have my component in there

00:10:49,190 --> 00:10:51,350
and this is what's really awesome we're

00:10:51,080 --> 00:10:54,290
not

00:10:51,350 --> 00:10:55,850
in putting or having any event listeners

00:10:54,290 --> 00:10:57,770
or anything like that we just are

00:10:55,850 --> 00:10:59,870
binding the same way we would bore bind

00:10:57,770 --> 00:11:02,690
a basic form control using form control

00:10:59,870 --> 00:11:04,640
name this is the exact same as using

00:11:02,690 --> 00:11:06,410
form control and then in the case of a

00:11:04,640 --> 00:11:09,590
group iterating through the forms

00:11:06,410 --> 00:11:11,600
controls and then using the key of

00:11:09,590 --> 00:11:13,580
whichever one you're looking for so

00:11:11,600 --> 00:11:14,980
that's all this takes to hook it up in

00:11:13,580 --> 00:11:17,450
your forum it's pretty clean right

00:11:14,980 --> 00:11:19,250
anytime I can remove lines of code and

00:11:17,450 --> 00:11:23,330
have something that's readable I am all

00:11:19,250 --> 00:11:25,340
on board so let's revisit our original

00:11:23,330 --> 00:11:27,020
problem of using this in practice to go

00:11:25,340 --> 00:11:29,390
ahead and create our type-ahead in our

00:11:27,020 --> 00:11:31,940
rating form controls so our type-ahead

00:11:29,390 --> 00:11:33,710
is going to look like this where we are

00:11:31,940 --> 00:11:36,740
using maybe some sort of third party

00:11:33,710 --> 00:11:38,150
library getting making sure we're

00:11:36,740 --> 00:11:39,470
displaying a name to the user but then

00:11:38,150 --> 00:11:41,930
what we really care about is submitting

00:11:39,470 --> 00:11:43,220
the idea of whatever that thing is so

00:11:41,930 --> 00:11:44,390
this is what that data structure would

00:11:43,220 --> 00:11:46,490
look like and I'm sure you've seen this

00:11:44,390 --> 00:11:48,170
problem before where you want to display

00:11:46,490 --> 00:11:49,310
something to the user that's readable

00:11:48,170 --> 00:11:50,450
that makes sense to them but all you

00:11:49,310 --> 00:11:56,960
really care about is submitting

00:11:50,450 --> 00:11:58,430
something else okay we will look at this

00:11:56,960 --> 00:12:01,220
markup because it's a little bit easier

00:11:58,430 --> 00:12:02,780
to see over here but I'm just using a

00:12:01,220 --> 00:12:04,520
third-party library here basic

00:12:02,780 --> 00:12:07,040
type-ahead we've been implementing these

00:12:04,520 --> 00:12:08,390
for god knows how many years now so

00:12:07,040 --> 00:12:11,060
there are a couple things going on in

00:12:08,390 --> 00:12:12,950
here I've got my data that I am passing

00:12:11,060 --> 00:12:16,250
in that is going to set the different

00:12:12,950 --> 00:12:17,930
drop-down options I am also using this

00:12:16,250 --> 00:12:20,360
template structure because again

00:12:17,930 --> 00:12:21,620
remember our our data structure looks

00:12:20,360 --> 00:12:23,180
like this and we don't want to display

00:12:21,620 --> 00:12:25,100
all that all we care about is displaying

00:12:23,180 --> 00:12:27,050
the name so that's what I'm doing here

00:12:25,100 --> 00:12:31,010
and then here is where I'm actually

00:12:27,050 --> 00:12:33,200
starting to tie my events into my form

00:12:31,010 --> 00:12:35,030
control so when the type-ahead select

00:12:33,200 --> 00:12:37,100
function is registered I want to call my

00:12:35,030 --> 00:12:38,780
custom on select function and the same

00:12:37,100 --> 00:12:40,190
with bowler if somebody interacts with

00:12:38,780 --> 00:12:43,190
our form control we want to go ahead and

00:12:40,190 --> 00:12:45,380
admit that blur function and so in my

00:12:43,190 --> 00:12:48,560
component that is then implementing the

00:12:45,380 --> 00:12:49,880
control value accessor we have these

00:12:48,560 --> 00:12:51,230
functions and I'm doing a couple

00:12:49,880 --> 00:12:53,480
different things here that are important

00:12:51,230 --> 00:12:55,700
to know remember we talked about write

00:12:53,480 --> 00:12:58,190
value being called with the value

00:12:55,700 --> 00:13:00,770
anytime that the form is either

00:12:58,190 --> 00:13:02,930
initialized or set value or patch value

00:13:00,770 --> 00:13:04,270
are done well for our UI to work

00:13:02,930 --> 00:13:05,770
properly if this chain

00:13:04,270 --> 00:13:07,090
happens we want to make sure that we're

00:13:05,770 --> 00:13:09,370
going through and actually manually

00:13:07,090 --> 00:13:11,380
selecting that drop-down so if there is

00:13:09,370 --> 00:13:13,780
a value I've got a custom function here

00:13:11,380 --> 00:13:15,460
that is going to select the appropriate

00:13:13,780 --> 00:13:17,110
drop down so we can make sure that our

00:13:15,460 --> 00:13:18,400
UI is corresponding properly to

00:13:17,110 --> 00:13:22,180
whatever's happening in that form

00:13:18,400 --> 00:13:25,090
control and then with the the events

00:13:22,180 --> 00:13:26,800
that we tied over here I have my on

00:13:25,090 --> 00:13:28,150
select event and when we're selecting

00:13:26,800 --> 00:13:30,250
something we do want a fire and on

00:13:28,150 --> 00:13:31,540
touched event because yes the user has

00:13:30,250 --> 00:13:36,010
touched and interactive at this forum

00:13:31,540 --> 00:13:37,420
and then if our actual forum item that

00:13:36,010 --> 00:13:39,100
has been selected has changed we want to

00:13:37,420 --> 00:13:41,290
go ahead and fire our on change method

00:13:39,100 --> 00:13:43,870
with whatever the idea of that item is

00:13:41,290 --> 00:13:46,360
and then with onblur we do want to

00:13:43,870 --> 00:13:47,710
submit a non-touch function and then

00:13:46,360 --> 00:13:49,180
this I want to make sure that I'm

00:13:47,710 --> 00:13:51,610
handling a situation where if a user

00:13:49,180 --> 00:13:54,130
completely deletes whatever is in the

00:13:51,610 --> 00:13:55,600
select the select event isn't going to

00:13:54,130 --> 00:13:57,880
fire and so I want to make sure that I

00:13:55,600 --> 00:13:59,650
am updating that to be a null value

00:13:57,880 --> 00:14:01,570
because they have eliminated whatever

00:13:59,650 --> 00:14:03,370
was in that forum so that's what an

00:14:01,570 --> 00:14:05,020
implementation of using the control

00:14:03,370 --> 00:14:07,330
value access or looks like for this case

00:14:05,020 --> 00:14:08,830
of a type-ahead of course you can begin

00:14:07,330 --> 00:14:10,750
to abstract this out and make it really

00:14:08,830 --> 00:14:16,240
easy to use in a variety of different

00:14:10,750 --> 00:14:18,730
scenarios and situations let's look next

00:14:16,240 --> 00:14:20,260
at our rating component and so this one

00:14:18,730 --> 00:14:21,700
is a little bit different because we're

00:14:20,260 --> 00:14:23,890
doing all this really interesting kind

00:14:21,700 --> 00:14:25,150
of displaying to the UI that doesn't

00:14:23,890 --> 00:14:27,250
really match up with a custom form

00:14:25,150 --> 00:14:32,460
control so what does it take to make

00:14:27,250 --> 00:14:35,140
this happen we can look at our star

00:14:32,460 --> 00:14:36,520
rating component and we're gonna see a

00:14:35,140 --> 00:14:37,720
lot of the same methods we're gonna have

00:14:36,520 --> 00:14:39,970
write value where we're setting our

00:14:37,720 --> 00:14:42,160
initial value and that is gonna set how

00:14:39,970 --> 00:14:46,030
many stars we're displaying initially so

00:14:42,160 --> 00:14:48,070
again if you are calling set value or

00:14:46,030 --> 00:14:50,020
patch value to change the update or

00:14:48,070 --> 00:14:53,320
change the value of this form control

00:14:50,020 --> 00:14:55,150
that is going to update accordingly this

00:14:53,320 --> 00:14:57,460
one remember that we said we want to

00:14:55,150 --> 00:14:58,810
disable it unless the type-ahead has a

00:14:57,460 --> 00:15:00,310
value so this is where we're

00:14:58,810 --> 00:15:03,100
implementing that set disabled state

00:15:00,310 --> 00:15:05,500
method and then whatever that returns

00:15:03,100 --> 00:15:07,780
I'm gonna go ahead and set my rating

00:15:05,500 --> 00:15:11,440
component to have the disabled member to

00:15:07,780 --> 00:15:12,610
be true or false so inside my HTML for

00:15:11,440 --> 00:15:14,530
this will kind of look at what that

00:15:12,610 --> 00:15:16,060
looks like because this is a very custom

00:15:14,530 --> 00:15:17,590
implementation it's not like an actual

00:15:16,060 --> 00:15:18,070
form control that I can just call it a

00:15:17,590 --> 00:15:19,810
sable

00:15:18,070 --> 00:15:22,449
so I'm gonna go ahead and I'm gonna add

00:15:19,810 --> 00:15:24,220
a class that lets me know and lets the

00:15:22,449 --> 00:15:25,480
user know that it's disabled we'll kind

00:15:24,220 --> 00:15:30,120
of gray out the stars they won't be

00:15:25,480 --> 00:15:35,319
interactable interactive excuse me and

00:15:30,120 --> 00:15:37,509
then when we go back to our component

00:15:35,319 --> 00:15:39,639
file here we can actually show how we

00:15:37,509 --> 00:15:41,319
are setting our rating and so we want to

00:15:39,639 --> 00:15:42,699
make sure that if the form control is

00:15:41,319 --> 00:15:44,560
not disabled because we don't want the

00:15:42,699 --> 00:15:46,269
user interacting with it

00:15:44,560 --> 00:15:48,250
that we can go ahead and we'll update

00:15:46,269 --> 00:15:51,009
the values I've got some special UI

00:15:48,250 --> 00:15:53,139
going on here for the rating text and

00:15:51,009 --> 00:15:54,759
then I'm omitting the unchanged with the

00:15:53,139 --> 00:16:00,880
star rating that I care about and then

00:15:54,759 --> 00:16:03,819
also emitting the untouched value all

00:16:00,880 --> 00:16:05,709
right so if we want to then go ahead and

00:16:03,819 --> 00:16:07,600
test our custom components implementing

00:16:05,709 --> 00:16:09,670
the CDA interface what kind of things do

00:16:07,600 --> 00:16:11,920
we care about well one the fact that

00:16:09,670 --> 00:16:13,720
wormholes aren't unit testable but

00:16:11,920 --> 00:16:15,459
control value access our components are

00:16:13,720 --> 00:16:17,740
so woohoo we're excited about that

00:16:15,459 --> 00:16:19,690
but we want to test that our methods

00:16:17,740 --> 00:16:22,060
communicate with the form controls as

00:16:19,690 --> 00:16:23,319
expected and so we want to make sure

00:16:22,060 --> 00:16:25,810
that when we're setting values our

00:16:23,319 --> 00:16:27,639
patching values are updating different

00:16:25,810 --> 00:16:30,250
states that that's going to behave as

00:16:27,639 --> 00:16:32,110
expected we want to make sure that when

00:16:30,250 --> 00:16:34,029
our form control is being initialized

00:16:32,110 --> 00:16:35,230
that the UI is reflecting whatever that

00:16:34,029 --> 00:16:38,110
value it's initialized with

00:16:35,230 --> 00:16:39,790
appropriately we want to make sure that

00:16:38,110 --> 00:16:42,579
disabling or enabling of the CVA

00:16:39,790 --> 00:16:43,930
component is implemented correctly so we

00:16:42,579 --> 00:16:46,180
can make sure our user understands

00:16:43,930 --> 00:16:47,829
what's going on and then we want to make

00:16:46,180 --> 00:16:50,170
sure that those validation classes that

00:16:47,829 --> 00:16:51,760
I mentioned are being implemented

00:16:50,170 --> 00:16:53,500
appropriately so that way we can begin

00:16:51,760 --> 00:16:57,190
to display really helpful information of

00:16:53,500 --> 00:16:58,870
the user so if we want to look at a test

00:16:57,190 --> 00:17:00,579
setup one of the ways that I prefer to

00:16:58,870 --> 00:17:03,579
test components using this or to create

00:17:00,579 --> 00:17:06,120
some sort of test host component where

00:17:03,579 --> 00:17:08,230
I'm going ahead and implementing my

00:17:06,120 --> 00:17:09,760
control value access or component in

00:17:08,230 --> 00:17:11,260
this kind of way I can make sure that

00:17:09,760 --> 00:17:13,959
the parent component which is going to

00:17:11,260 --> 00:17:15,520
contain the form control is going to get

00:17:13,959 --> 00:17:17,140
the information necessary updated but

00:17:15,520 --> 00:17:18,760
then I can also test what's happening

00:17:17,140 --> 00:17:21,870
inside of that test host component which

00:17:18,760 --> 00:17:24,130
is my control value access our component

00:17:21,870 --> 00:17:26,140
so if we're testing some sort of change

00:17:24,130 --> 00:17:28,179
event we want to go ahead and call our

00:17:26,140 --> 00:17:29,830
method that's going to be handling that

00:17:28,179 --> 00:17:30,990
change event and then we want to listen

00:17:29,830 --> 00:17:33,570
to our pair

00:17:30,990 --> 00:17:35,580
host component and make sure that that

00:17:33,570 --> 00:17:37,679
form control value is the value that

00:17:35,580 --> 00:17:38,970
we're expecting it to be so that's kind

00:17:37,679 --> 00:17:42,570
of a sample test of what that would look

00:17:38,970 --> 00:17:44,490
like we also really care about testing

00:17:42,570 --> 00:17:46,890
touch events and validations so we want

00:17:44,490 --> 00:17:49,170
to make sure that our form control is

00:17:46,890 --> 00:17:50,340
getting the information necessary so a

00:17:49,170 --> 00:17:53,220
couple different things going on here

00:17:50,340 --> 00:17:55,740
I'm setting this form control to be

00:17:53,220 --> 00:17:58,050
required to handle that and then making

00:17:55,740 --> 00:18:01,020
sure that the proper classes like ng

00:17:58,050 --> 00:18:04,559
invalid are being set when there's a

00:18:01,020 --> 00:18:06,030
blur event fired on that input and there

00:18:04,559 --> 00:18:08,070
is no value set so we want to make sure

00:18:06,030 --> 00:18:12,000
that that is actually showing hey yes

00:18:08,070 --> 00:18:14,160
this is now an invalid form control we

00:18:12,000 --> 00:18:16,290
also want to be able to test that value

00:18:14,160 --> 00:18:19,260
so if somebody is calling got set value

00:18:16,290 --> 00:18:21,059
or not patch value on our form control

00:18:19,260 --> 00:18:24,809
that our UI is going to reflect that

00:18:21,059 --> 00:18:26,640
appropriately if we're looking at our

00:18:24,809 --> 00:18:27,750
star rating component one of the things

00:18:26,640 --> 00:18:28,950
we're going to care about and this one

00:18:27,750 --> 00:18:30,570
is that our form control is being

00:18:28,950 --> 00:18:32,760
notified of the change when the star is

00:18:30,570 --> 00:18:34,200
clicked so again when we fire a click

00:18:32,760 --> 00:18:36,090
event on one of our stars we want to

00:18:34,200 --> 00:18:38,730
make sure that the form control in the

00:18:36,090 --> 00:18:40,080
our test host component has the

00:18:38,730 --> 00:18:43,470
appropriate value that we want it to

00:18:40,080 --> 00:18:45,059
have and then for the star rating

00:18:43,470 --> 00:18:47,580
component we do care about the disabled

00:18:45,059 --> 00:18:48,720
state again so we want to check test and

00:18:47,580 --> 00:18:50,100
make sure that when we disabled the

00:18:48,720 --> 00:18:51,630
component and then attempt to interact

00:18:50,100 --> 00:18:54,390
with it that none of our click events

00:18:51,630 --> 00:18:57,480
are fired and the form the parent host

00:18:54,390 --> 00:18:59,130
component form control does not get a

00:18:57,480 --> 00:19:00,480
new value because it's disabled

00:18:59,130 --> 00:19:01,620
therefore the user should not be able to

00:19:00,480 --> 00:19:05,850
interact with it in a way that would

00:19:01,620 --> 00:19:07,290
pass a new value key concepts for

00:19:05,850 --> 00:19:08,190
implementing the control value access

00:19:07,290 --> 00:19:09,720
sir

00:19:08,190 --> 00:19:11,460
just keep in mind that it's really great

00:19:09,720 --> 00:19:12,770
for granular control of displaying

00:19:11,460 --> 00:19:14,970
something to the UI but then

00:19:12,770 --> 00:19:17,100
communicating something else the actual

00:19:14,970 --> 00:19:19,620
form control value you want to keep your

00:19:17,100 --> 00:19:20,820
wrapper components very dumb you just

00:19:19,620 --> 00:19:23,340
want to be inputting and outputting

00:19:20,820 --> 00:19:25,710
values you want to leave the validation

00:19:23,340 --> 00:19:27,480
logic to the parent form component and

00:19:25,710 --> 00:19:30,990
the cvaa can be used with any form api

00:19:27,480 --> 00:19:32,850
including form driven feel free to take

00:19:30,990 --> 00:19:34,740
a picture of this this is the slides

00:19:32,850 --> 00:19:36,120
available that top link if you want to

00:19:34,740 --> 00:19:38,490
play with the app in case you're trying

00:19:36,120 --> 00:19:39,780
to implement this on on your own I go

00:19:38,490 --> 00:19:41,640
ahead and take a picture of that and

00:19:39,780 --> 00:19:44,010
then if you like this sweet sweet theme

00:19:41,640 --> 00:19:44,610
that I am using here that is since 84

00:19:44,010 --> 00:19:46,980
that came out of

00:19:44,610 --> 00:19:50,280
couple days ago so feel free to check

00:19:46,980 --> 00:19:52,620
that out I hope you all walk away imbued

00:19:50,280 --> 00:19:54,150
with the power of the control value

00:19:52,620 --> 00:19:55,410
access ur and ready to go out and solve

00:19:54,150 --> 00:19:57,540
all the forum problems you could

00:19:55,410 --> 00:20:02,460
possibly run into thank you very much

00:19:57,540 --> 00:20:02,460
[Applause]

00:20:06,620 --> 00:20:13,229
[Music]

00:20:18,820 --> 00:20:20,880

YouTube URL: https://www.youtube.com/watch?v=kVbLSN0AW-Y


