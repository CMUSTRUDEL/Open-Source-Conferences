Title: The Future of Machine Learning & Javascript | Asim Hussain
Publication date: 2019-05-02
Playlist: ng-conf 2019
Description: 
	There are many exciting things happening with AI, from which, until recently, JavaScript developers were largely shut out.

But things are changing, if you can do `npm install @tensorflow/tfjs` or make an API call, you can now do AI.

In this fast-paced talk, I’ll open your mind to what’s possible by demoing several AI-powered JavaScript apps and show you how they were built using either TensorFlow.js or easy to use AI powered APIs.

You don’t need a PhD in Maths, you don’t need years of experience, you just need imagination and the willingness to try.

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:07,920 --> 00:00:11,170
[Music]

00:00:11,750 --> 00:00:18,949
so welcome to this talk on the future of

00:00:15,179 --> 00:00:22,289
machine learning and JavaScript

00:00:18,949 --> 00:00:25,710
my name is assam Usain Oh awesome Usain

00:00:22,289 --> 00:00:28,890
you can find me on Twitter as a jaw ache

00:00:25,710 --> 00:00:32,189
not joash a I blog about angular and

00:00:28,890 --> 00:00:34,800
JavaScript on my web site code Kraft TV

00:00:32,189 --> 00:00:36,360
and I'm something called a cloud

00:00:34,800 --> 00:00:38,070
advocate a Microsoft and actually I

00:00:36,360 --> 00:00:42,510
remember I was looking at the slides

00:00:38,070 --> 00:00:45,180
just today I remembered that to ng-conf

00:00:42,510 --> 00:00:47,280
segoe I was sitting in the coffee shop

00:00:45,180 --> 00:00:49,800
over there being interviewed by John

00:00:47,280 --> 00:00:53,750
popper for this new credit advocacy role

00:00:49,800 --> 00:00:57,300
and to ng cons later I'm now leading

00:00:53,750 --> 00:00:59,070
Clara advocacy for India does just want

00:00:57,300 --> 00:01:01,469
to thank ng-conf want to thank John

00:00:59,070 --> 00:01:05,400
popper for the options and also Joe

00:01:01,469 --> 00:01:07,500
beams for making the connections I also

00:01:05,400 --> 00:01:11,729
have a saying I was saying it's like

00:01:07,500 --> 00:01:14,159
don't use your power for good abused

00:01:11,729 --> 00:01:16,049
your power for good so I'm gonna abuse

00:01:14,159 --> 00:01:18,630
my power on stage here right now and

00:01:16,049 --> 00:01:19,950
talk about a charity that I work with I

00:01:18,630 --> 00:01:24,229
work with a charity called pal

00:01:19,950 --> 00:01:27,780
internship and what they do is they find

00:01:24,229 --> 00:01:31,259
internships for Palestinians in is in

00:01:27,780 --> 00:01:35,100
high-tech Israeli startups and I

00:01:31,259 --> 00:01:36,930
mentored ten of the interns last year

00:01:35,100 --> 00:01:39,650
and I'm very proud to say that this year

00:01:36,930 --> 00:01:43,530
seventeen of the interns are going to be

00:01:39,650 --> 00:01:46,409
mentored by one cloud advocate so if you

00:01:43,530 --> 00:01:48,899
work whether you work at or you own a

00:01:46,409 --> 00:01:50,820
high-tech Israeli startup and you're

00:01:48,899 --> 00:01:53,100
looking for interns we have openings for

00:01:50,820 --> 00:01:55,770
interns please contact me I can put you

00:01:53,100 --> 00:01:57,719
in contact the program director and we

00:01:55,770 --> 00:01:59,840
can get started

00:01:57,719 --> 00:02:03,930
so to also to talk about my journey of

00:01:59,840 --> 00:02:07,130
last ng-conf to this ng-conf this slide

00:02:03,930 --> 00:02:07,130
probably sums it up

00:02:08,289 --> 00:02:13,510
Haggar this is a sim this isn't my slide

00:02:11,739 --> 00:02:15,849
this is actually my friend Ellen a hat

00:02:13,510 --> 00:02:19,750
prof slides Ellen Ellen and I go back a

00:02:15,849 --> 00:02:21,370
very long way and we both into jail was

00:02:19,750 --> 00:02:23,950
getting both into machine learning and

00:02:21,370 --> 00:02:26,409
start of last year we launched a meetup

00:02:23,950 --> 00:02:27,459
group in London called the AI jobs get

00:02:26,409 --> 00:02:30,220
meetup group

00:02:27,459 --> 00:02:32,500
I mean went quite a few we've run quite

00:02:30,220 --> 00:02:34,450
a few events over the last since that

00:02:32,500 --> 00:02:37,650
time and what would happen is people

00:02:34,450 --> 00:02:40,269
come up to us and they send us links to

00:02:37,650 --> 00:02:41,739
JavaScript powered AI applications and

00:02:40,269 --> 00:02:44,319
we thought to ourselves beneath a place

00:02:41,739 --> 00:02:45,400
online we can put these applications and

00:02:44,319 --> 00:02:52,060
that's what we did we created a website

00:02:45,400 --> 00:02:53,980
called AI Jas rocks and if you go to

00:02:52,060 --> 00:02:58,239
this website you'll find a collection of

00:02:53,980 --> 00:02:59,560
AI power JavaScript applications because

00:02:58,239 --> 00:03:01,480
it's JavaScript it means you can always

00:02:59,560 --> 00:03:05,409
click on it play around with it in the

00:03:01,480 --> 00:03:07,269
browser and also because it's JavaScript

00:03:05,409 --> 00:03:08,709
usually means you can view source and

00:03:07,269 --> 00:03:10,750
look at the source code and find out

00:03:08,709 --> 00:03:13,419
higher was built so it's a good place to

00:03:10,750 --> 00:03:17,909
go to be inspired and then also to learn

00:03:13,419 --> 00:03:17,909
a little bit about machine learning and

00:03:18,060 --> 00:03:22,440
what I'm going to do today is going to

00:03:20,440 --> 00:03:25,930
talk about three or two so two

00:03:22,440 --> 00:03:27,609
applications that are on the AIA ijs Rox

00:03:25,930 --> 00:03:29,379
website I'm gonna explain how they were

00:03:27,609 --> 00:03:31,120
built and through that journey you're

00:03:29,379 --> 00:03:33,099
gonna learn a little bit about machine

00:03:31,120 --> 00:03:34,780
learning and jaws get to what's

00:03:33,099 --> 00:03:37,739
happening right now and what the options

00:03:34,780 --> 00:03:42,069
you have available so the first

00:03:37,739 --> 00:03:45,690
application is this one if you look at

00:03:42,069 --> 00:03:49,150
my t-shirt right now it says something

00:03:45,690 --> 00:03:51,729
it says what does it say it says puppies

00:03:49,150 --> 00:03:53,349
Asia and I'm fine which is a very very

00:03:51,729 --> 00:03:55,049
long story as to why I'm wearing this

00:03:53,349 --> 00:03:57,489
t-shirt but I was wearing this t-shirt

00:03:55,049 --> 00:04:00,069
about six months ago when I was giving a

00:03:57,489 --> 00:04:02,290
workshop in London and one of the

00:04:00,069 --> 00:04:03,970
attendees Oliver went away and created

00:04:02,290 --> 00:04:05,709
an application based off of why I was

00:04:03,970 --> 00:04:08,199
teaching and he called the tensorflow

00:04:05,709 --> 00:04:10,180
mobile net and I'm fine and I'll just

00:04:08,199 --> 00:04:14,949
show you what it is which is running

00:04:10,180 --> 00:04:16,810
quite simply in a code pen it does a

00:04:14,949 --> 00:04:19,719
Google sit on a Google search so you an

00:04:16,810 --> 00:04:20,519
unsplash search for an image so search

00:04:19,719 --> 00:04:23,699
if a puppy

00:04:20,519 --> 00:04:25,080
and then it puts the image there and

00:04:23,699 --> 00:04:27,599
then if you look in the bottom left-hand

00:04:25,080 --> 00:04:29,520
corner is trying to guess what's in the

00:04:27,599 --> 00:04:31,849
image so here it's not doing a good

00:04:29,520 --> 00:04:35,960
guess puppies

00:04:31,849 --> 00:04:39,060
nine percent terrier I'm fine

00:04:35,960 --> 00:04:41,910
what's that t-shirt isn't it yeah

00:04:39,060 --> 00:04:43,199
seventy-eight percent a t-shirt so the

00:04:41,910 --> 00:04:45,120
really important thing about this

00:04:43,199 --> 00:04:47,220
application and the cool thing about it

00:04:45,120 --> 00:04:50,970
is that detection of what's in the image

00:04:47,220 --> 00:04:55,740
is all happening in the browser using

00:04:50,970 --> 00:04:57,539
Java Script it's quite crazy really ten

00:04:55,740 --> 00:04:59,400
years ago we couldn't tell the

00:04:57,539 --> 00:05:03,090
difference between oh we couldn't tell

00:04:59,400 --> 00:05:04,740
if an image was a cat or a dog now we

00:05:03,090 --> 00:05:08,430
can do all this other stuff in the

00:05:04,740 --> 00:05:10,080
browser in JavaScript it's built using a

00:05:08,430 --> 00:05:13,590
technology called tensor flow which

00:05:10,080 --> 00:05:17,330
Google out sourced out sourced that's

00:05:13,590 --> 00:05:21,270
not the right word is it open sourced in

00:05:17,330 --> 00:05:25,770
2015 and it's a technology which you can

00:05:21,270 --> 00:05:28,169
use to block run mathematical equations

00:05:25,770 --> 00:05:30,750
across hundreds of servers and across

00:05:28,169 --> 00:05:32,159
GPUs and CPUs and one of the things

00:05:30,750 --> 00:05:36,030
that's really used for is to build

00:05:32,159 --> 00:05:42,780
neural networks which we all know what a

00:05:36,030 --> 00:05:45,120
neural network is right No okay I'll

00:05:42,780 --> 00:05:48,900
explain a little bit so neural network

00:05:45,120 --> 00:05:51,479
has a basis in biology this is a neuron

00:05:48,900 --> 00:05:53,819
a single neuron we each have at least

00:05:51,479 --> 00:05:55,680
one of these I couldn't guarantee that

00:05:53,819 --> 00:05:57,690
you have more than one bye know for a

00:05:55,680 --> 00:05:59,460
fact that you at least have one of these

00:05:57,690 --> 00:06:02,639
maybe you have less of them after

00:05:59,460 --> 00:06:06,750
tonight's party but has some dendrites

00:06:02,639 --> 00:06:08,490
going in a body and some axons going out

00:06:06,750 --> 00:06:11,639
and what happens is if enough

00:06:08,490 --> 00:06:14,069
electricity flows into the dendrites the

00:06:11,639 --> 00:06:16,919
body fire some electricity out of the

00:06:14,069 --> 00:06:19,650
axon all the way out that's it that's a

00:06:16,919 --> 00:06:22,110
neuron that's what it does if I asked

00:06:19,650 --> 00:06:24,569
you to code this up yourself in

00:06:22,110 --> 00:06:26,009
JavaScript you probably try and remember

00:06:24,569 --> 00:06:27,780
you probably try to remember what it was

00:06:26,009 --> 00:06:30,300
like to be if you went to university a

00:06:27,780 --> 00:06:32,639
university student desperately trying to

00:06:30,300 --> 00:06:34,320
remember your graph theory and that's

00:06:32,639 --> 00:06:37,800
what you do you basically create

00:06:34,320 --> 00:06:41,940
a node and some edges clever edges

00:06:37,800 --> 00:06:43,950
coming in and some edges going out and

00:06:41,940 --> 00:06:47,430
then what you do you basically would

00:06:43,950 --> 00:06:49,710
pump in some electricity what is that

00:06:47,430 --> 00:06:53,070
electricity that electricity is some

00:06:49,710 --> 00:06:57,210
features maybe it's the the day of the

00:06:53,070 --> 00:06:59,370
year and the current temperature in

00:06:57,210 --> 00:07:07,470
Celsius which is the correct metric to

00:06:59,370 --> 00:07:08,940
measure temperature in and if you want

00:07:07,470 --> 00:07:13,020
to talk about Europe is all a little bit

00:07:08,940 --> 00:07:17,160
but what what it also will do is it will

00:07:13,020 --> 00:07:19,230
then take these imports take this

00:07:17,160 --> 00:07:21,920
electricity how much of that matters in

00:07:19,230 --> 00:07:25,380
the end virtual equation you would use

00:07:21,920 --> 00:07:27,300
it decides of your weights so each of

00:07:25,380 --> 00:07:30,630
these edges have a weight assigned to it

00:07:27,300 --> 00:07:32,730
okay that's it so far then you multiply

00:07:30,630 --> 00:07:34,230
these inputs together by the way sum

00:07:32,730 --> 00:07:35,790
them up and pass them into something

00:07:34,230 --> 00:07:39,150
called an activation function which is

00:07:35,790 --> 00:07:41,580
just a function and whatever this

00:07:39,150 --> 00:07:44,070
function returns is what you pass back

00:07:41,580 --> 00:07:46,620
out that's electricity going back out

00:07:44,070 --> 00:07:48,030
that might be this might be a single

00:07:46,620 --> 00:07:51,000
neuron that's trying to figure out the

00:07:48,030 --> 00:07:54,000
number of the number of crickets that

00:07:51,000 --> 00:07:57,870
chirping given a certain day and a send

00:07:54,000 --> 00:07:58,970
temperature okay just to see a little

00:07:57,870 --> 00:08:04,100
bit more about how that might work

00:07:58,970 --> 00:08:06,270
that's it just a bit of multiplication

00:08:04,100 --> 00:08:07,590
often times when I give workshops on

00:08:06,270 --> 00:08:10,650
machine learning everybody's like it's

00:08:07,590 --> 00:08:12,840
just multiplication yeah it's just

00:08:10,650 --> 00:08:15,870
multiplication right little bit addition

00:08:12,840 --> 00:08:18,000
not much else but what you do with a

00:08:15,870 --> 00:08:19,650
neural network is you basically combine

00:08:18,000 --> 00:08:23,160
a bunch of these together this is a very

00:08:19,650 --> 00:08:25,800
very simple four layer Network one input

00:08:23,160 --> 00:08:27,840
layer one output layer two hidden layers

00:08:25,800 --> 00:08:30,090
but just the same stuff we just saw

00:08:27,840 --> 00:08:34,620
before just edges going between each of

00:08:30,090 --> 00:08:36,540
those nodes you would then initialize

00:08:34,620 --> 00:08:40,890
those edges with just a random number

00:08:36,540 --> 00:08:43,500
just a random number math dot R and and

00:08:40,890 --> 00:08:44,880
then you start off with what is it in

00:08:43,500 --> 00:08:46,900
your network doing so let's say this

00:08:44,880 --> 00:08:49,090
neural network we want it to learn

00:08:46,900 --> 00:08:51,760
how to detect if and images is somebody

00:08:49,090 --> 00:08:54,490
is if somebody who's happy or somebody

00:08:51,760 --> 00:08:56,890
who's sad we think a data set of images

00:08:54,490 --> 00:08:58,570
we would then perhaps calculate the

00:08:56,890 --> 00:09:00,550
features of the aim of the of the face

00:08:58,570 --> 00:09:02,860
so for instance the positions of the

00:09:00,550 --> 00:09:05,470
eyes and nose ellipse the mouth we would

00:09:02,860 --> 00:09:07,900
feed them in as inputs and we're just

00:09:05,470 --> 00:09:10,390
doing that multiplication that's all

00:09:07,900 --> 00:09:11,620
we're doing multiplication and it's

00:09:10,390 --> 00:09:14,080
giving us a number at the end what does

00:09:11,620 --> 00:09:17,320
3 mean 3 means what we want it to mean

00:09:14,080 --> 00:09:18,850
maybe we want 0 to indicate unhappy and

00:09:17,320 --> 00:09:20,740
tend to indicate happy so this is

00:09:18,850 --> 00:09:23,710
actually telling us this is quite an

00:09:20,740 --> 00:09:29,320
unhappy person but it's not because we

00:09:23,710 --> 00:09:32,590
know we know that this image is 8 we

00:09:29,320 --> 00:09:34,090
know that this is a happy image because

00:09:32,590 --> 00:09:37,120
a human being has looked this image and

00:09:34,090 --> 00:09:38,890
gone yeah that's it so we know this

00:09:37,120 --> 00:09:41,500
neural networks wrong of course it's

00:09:38,890 --> 00:09:45,460
wrong we initialize it with random

00:09:41,500 --> 00:09:48,670
variables we know it's wrong by 5 the

00:09:45,460 --> 00:09:52,230
secret is something called back

00:09:48,670 --> 00:09:56,230
propagation it's this process of tuning

00:09:52,230 --> 00:09:57,790
those numbers we're tuning them and

00:09:56,230 --> 00:10:00,610
that's what you do you tell it how wrong

00:09:57,790 --> 00:10:05,140
it is and then the back propagation

00:10:00,610 --> 00:10:08,680
algorithm then figures out how to adjust

00:10:05,140 --> 00:10:11,200
these edges so that then when you pass

00:10:08,680 --> 00:10:13,420
in an image in the future it tells you

00:10:11,200 --> 00:10:14,710
how happy it is that's the process

00:10:13,420 --> 00:10:16,810
that's what's happening with machine

00:10:14,710 --> 00:10:18,900
learning in neural networks just a lot

00:10:16,810 --> 00:10:21,610
of multiplication and you're tuning

00:10:18,900 --> 00:10:28,180
these numbers just tuning numbers it's

00:10:21,610 --> 00:10:28,690
nothing magical so that's a neural

00:10:28,180 --> 00:10:30,870
network

00:10:28,690 --> 00:10:33,970
that's what used tends to flow for so

00:10:30,870 --> 00:10:37,690
tensorflow is actually written in C it's

00:10:33,970 --> 00:10:40,360
really hard core building deep number

00:10:37,690 --> 00:10:41,080
crunching last year they announced

00:10:40,360 --> 00:10:44,410
tensorflow

00:10:41,080 --> 00:10:47,410
J s ok that's what we all love that

00:10:44,410 --> 00:10:49,870
little dot J S at the end of everything

00:10:47,410 --> 00:10:51,820
so tens float is now when it first was

00:10:49,870 --> 00:10:54,160
released I thought okay it's just

00:10:51,820 --> 00:10:56,620
bindings to tensorflow you need to

00:10:54,160 --> 00:10:58,030
install tensor flow to use tensor flow

00:10:56,620 --> 00:11:00,620
Jess and that's not true

00:10:58,030 --> 00:11:03,290
tend to float J s is a complete

00:11:00,620 --> 00:11:06,260
right of tensorflow in JavaScript why is

00:11:03,290 --> 00:11:09,470
that important it's important because

00:11:06,260 --> 00:11:11,450
this is all you need to do in order to

00:11:09,470 --> 00:11:14,120
do machine learning now in JavaScript

00:11:11,450 --> 00:11:17,660
just one dependency either if you think

00:11:14,120 --> 00:11:19,570
it properly at the top that one if

00:11:17,660 --> 00:11:23,110
you're doing it the way I like to code

00:11:19,570 --> 00:11:25,580
you use this script tag at the bottom

00:11:23,110 --> 00:11:27,110
and that's how it works now what can you

00:11:25,580 --> 00:11:28,010
do at 10:00 so Jess you can do pretty

00:11:27,110 --> 00:11:31,880
much everything you can do with

00:11:28,010 --> 00:11:33,370
tensorflow you can train models and

00:11:31,880 --> 00:11:35,930
that's why I showed you how to do before

00:11:33,370 --> 00:11:39,200
just that training process you can do

00:11:35,930 --> 00:11:40,460
that or you can load pre-trained models

00:11:39,200 --> 00:11:41,830
and that's what we love to do that's

00:11:40,460 --> 00:11:44,570
kind of like coding up an application

00:11:41,830 --> 00:11:47,270
from scratch or searching MPM for a

00:11:44,570 --> 00:11:48,980
module now there's quite a few that you

00:11:47,270 --> 00:11:50,450
can figure that in slow jazz website

00:11:48,980 --> 00:11:51,950
right now you can find that there's a

00:11:50,450 --> 00:11:54,170
bunch of pre training models that you

00:11:51,950 --> 00:11:56,150
can find and use and that's what Oliver

00:11:54,170 --> 00:11:58,820
used for his demo who used something

00:11:56,150 --> 00:12:01,280
called mobile net and what mobile net is

00:11:58,820 --> 00:12:03,140
a very very simple neural network that's

00:12:01,280 --> 00:12:05,390
been trained in order to identify only a

00:12:03,140 --> 00:12:08,090
thousand things it's not very good but

00:12:05,390 --> 00:12:10,940
the trick is in the name mobile it's

00:12:08,090 --> 00:12:13,250
like small enough to be loaded up from

00:12:10,940 --> 00:12:16,190
within a browser and in a realistic way

00:12:13,250 --> 00:12:17,600
in order to use but that's it just like

00:12:16,190 --> 00:12:19,490
four lines in order to get all that

00:12:17,600 --> 00:12:22,670
incredible powerful functionality in the

00:12:19,490 --> 00:12:24,860
browser but you're making a trade-off

00:12:22,670 --> 00:12:26,420
here okay you're making a trade-off in

00:12:24,860 --> 00:12:28,370
size something that's small enough to be

00:12:26,420 --> 00:12:31,910
using the browser but it's really not

00:12:28,370 --> 00:12:34,580
that useful if you really really want to

00:12:31,910 --> 00:12:37,010
know what's inside an image if you

00:12:34,580 --> 00:12:39,410
because those models that can tell you

00:12:37,010 --> 00:12:40,820
in depth it can tell you tens of

00:12:39,410 --> 00:12:43,100
thousands of things that are inside an

00:12:40,820 --> 00:12:45,830
image those are incredibly large to

00:12:43,100 --> 00:12:48,200
large to not to download realistically

00:12:45,830 --> 00:12:49,640
into the browser run on a browser and

00:12:48,200 --> 00:12:51,860
usually all the different cloud

00:12:49,640 --> 00:12:55,400
providers have various api's they

00:12:51,860 --> 00:12:57,260
provide to give you access those kinds

00:12:55,400 --> 00:12:59,570
of services and what microsoft and what

00:12:57,260 --> 00:13:02,930
the service that we have it's called

00:12:59,570 --> 00:13:04,160
computer vision it's just an API that

00:13:02,930 --> 00:13:06,740
you can use where you can pass it an

00:13:04,160 --> 00:13:09,010
image and it tells you what's inside the

00:13:06,740 --> 00:13:09,010
image

00:13:09,350 --> 00:13:15,860
i I do think we need to change the the

00:13:13,310 --> 00:13:18,350
marketing image here though somebody who

00:13:15,860 --> 00:13:22,400
looks a little bit less confused but um

00:13:18,350 --> 00:13:23,930
so what can you use this for my my

00:13:22,400 --> 00:13:26,840
friend Lam I used to used to my

00:13:23,930 --> 00:13:29,330
colleague my friend Sarah Dresner wrote

00:13:26,840 --> 00:13:31,550
had a quite a good idea for what to use

00:13:29,330 --> 00:13:33,860
this for so we all know when images are

00:13:31,550 --> 00:13:35,930
supposed to use alt text for screen

00:13:33,860 --> 00:13:38,120
readers so that they can read the text

00:13:35,930 --> 00:13:40,730
for accessibility she had the thought

00:13:38,120 --> 00:13:43,550
well can you use the computer vision API

00:13:40,730 --> 00:13:45,560
to automatically generate the alt text

00:13:43,550 --> 00:13:47,420
for images and one of the things that

00:13:45,560 --> 00:13:50,810
can be a vision API can do that just

00:13:47,420 --> 00:13:52,190
boggles my mind is it doesn't just tell

00:13:50,810 --> 00:13:55,640
you what's in an image it gives you a

00:13:52,190 --> 00:13:57,140
textual description as if a human is

00:13:55,640 --> 00:14:00,050
talking to and explaining she what's in

00:13:57,140 --> 00:14:02,350
the image and she created another demo

00:14:00,050 --> 00:14:04,790
like a code pen in order to demonstrate

00:14:02,350 --> 00:14:06,650
how this works so this is if you load up

00:14:04,790 --> 00:14:09,230
a cope and it brings up this image and

00:14:06,650 --> 00:14:11,870
the alt text at the top is generated by

00:14:09,230 --> 00:14:13,940
the computer vision API so today's a

00:14:11,870 --> 00:14:16,940
black and white photo of Thomas Edison

00:14:13,940 --> 00:14:18,440
the text says hey girl that you just

00:14:16,940 --> 00:14:20,030
share electrons because I'm feeling a

00:14:18,440 --> 00:14:23,690
covalent bond or tune is any chemists in

00:14:20,030 --> 00:14:26,030
the house is this funny I don't know I

00:14:23,690 --> 00:14:27,770
have no idea but the thing that kind of

00:14:26,030 --> 00:14:30,610
blows me away about this is it doesn't

00:14:27,770 --> 00:14:33,760
say a black-white photo of a guy or a

00:14:30,610 --> 00:14:38,780
person it knows it's Thomas Edison

00:14:33,760 --> 00:14:40,220
that's kind of crazy right but as you

00:14:38,780 --> 00:14:42,560
all know on Twitter there's some very

00:14:40,220 --> 00:14:44,420
very helpful supportive people people on

00:14:42,560 --> 00:14:47,090
that platform who when you post

00:14:44,420 --> 00:14:48,440
something will will just support you and

00:14:47,090 --> 00:14:50,690
let you know when you've done things

00:14:48,440 --> 00:14:52,280
wrong and obviously there were some

00:14:50,690 --> 00:14:55,400
people that told her that it doesn't

00:14:52,280 --> 00:14:57,170
quite work as expected so here's

00:14:55,400 --> 00:15:01,870
somebody who said well for this image it

00:14:57,170 --> 00:15:06,620
says a star-filled sky the text says for

00:15:01,870 --> 00:15:10,910
with some characters alright the next

00:15:06,620 --> 00:15:13,150
one I think is could be true it could be

00:15:10,910 --> 00:15:13,150
true

00:15:13,650 --> 00:15:25,160
I mean they could be dead stuffed

00:15:20,760 --> 00:15:25,160
animals you don't really know that right

00:15:25,190 --> 00:15:29,600
and I like the next one because

00:15:26,839 --> 00:15:33,520
according to me 50% is a past grade and

00:15:29,600 --> 00:15:33,520
we've got at 50% right

00:15:39,550 --> 00:15:47,450
so yes so even even big api's that we've

00:15:46,040 --> 00:15:53,590
got even big malls we've got sometimes

00:15:47,450 --> 00:15:53,590
get it wrong Wow so just summarize

00:15:54,130 --> 00:15:57,710
tensorflow j/s doesn't have any

00:15:56,450 --> 00:15:59,570
dependencies if you want to take away

00:15:57,710 --> 00:16:00,950
one takeaway from this talk that's a

00:15:59,570 --> 00:16:02,030
take away the you should take away if

00:16:00,950 --> 00:16:04,370
you want to start doing machine learning

00:16:02,030 --> 00:16:05,870
in javascript in the browser you can

00:16:04,370 --> 00:16:06,650
just drop that in and start going with

00:16:05,870 --> 00:16:08,630
it

00:16:06,650 --> 00:16:10,850
mobile net is a really simple way to get

00:16:08,630 --> 00:16:13,700
started it's always how I start my my

00:16:10,850 --> 00:16:15,590
workshops but it is small you're making

00:16:13,700 --> 00:16:18,620
trade-offs if you really really want to

00:16:15,590 --> 00:16:20,510
do something with image analysis then I

00:16:18,620 --> 00:16:24,440
recommend using an API such as a

00:16:20,510 --> 00:16:26,060
computer vision API from Asia maybe gone

00:16:24,440 --> 00:16:29,000
really far because I'm being quite slow

00:16:26,060 --> 00:16:31,280
my next and this is my favorite demo

00:16:29,000 --> 00:16:34,210
it's amazing it's called image to image

00:16:31,280 --> 00:16:37,040
if you find it on the AI J ROCs website

00:16:34,210 --> 00:16:40,270
and let's just see how it works this is

00:16:37,040 --> 00:16:40,270
actually running in the browser

00:16:47,780 --> 00:16:54,710
so yeah you can draw the outline of a

00:16:50,300 --> 00:16:58,910
cat and it will fill in the rest of the

00:16:54,710 --> 00:17:02,000
cat okay it's made by a gentleman called

00:16:58,910 --> 00:17:03,800
Zaid who's still a student in Saudi

00:17:02,000 --> 00:17:05,890
Arabia I don't know what I wasn't doing

00:17:03,800 --> 00:17:08,959
this kind of stuff at university at all

00:17:05,890 --> 00:17:11,839
how does it work right I think this is

00:17:08,959 --> 00:17:14,150
fascinating he uses a technique called a

00:17:11,839 --> 00:17:16,310
generative adversarial neural network

00:17:14,150 --> 00:17:17,780
and I'm going to teach you how this

00:17:16,310 --> 00:17:18,740
works I think these are fascinating they

00:17:17,780 --> 00:17:21,890
don't the techniques only been around

00:17:18,740 --> 00:17:23,750
about two years now has two neural

00:17:21,890 --> 00:17:27,020
networks which compete with each other

00:17:23,750 --> 00:17:29,240
they're battling each other okay you've

00:17:27,020 --> 00:17:33,500
got a generator and you've got a

00:17:29,240 --> 00:17:35,360
discriminator okay the generators job is

00:17:33,500 --> 00:17:37,400
you feed in some inputs inputs are the

00:17:35,360 --> 00:17:41,180
outlines of cat images you have a set of

00:17:37,400 --> 00:17:44,780
outlines of cat images and its job is to

00:17:41,180 --> 00:17:46,040
generate an image of a cat but it's not

00:17:44,780 --> 00:17:47,120
going to do a very good job is it

00:17:46,040 --> 00:17:49,670
initially because it would have been

00:17:47,120 --> 00:17:51,200
initialized with random math dot random

00:17:49,670 --> 00:17:53,090
so it's not going to do a really good

00:17:51,200 --> 00:17:55,130
job but anyway whatever you get all

00:17:53,090 --> 00:17:57,940
those cat images you combine them

00:17:55,130 --> 00:18:00,590
together with a bunch of real cow images

00:17:57,940 --> 00:18:02,510
and you mix them all up and you send

00:18:00,590 --> 00:18:06,620
them to the discriminator and the

00:18:02,510 --> 00:18:09,380
discriminators job is to figure out if a

00:18:06,620 --> 00:18:12,980
cat if one of these images is of a real

00:18:09,380 --> 00:18:14,450
cat or of a fake cat and if it go wrong

00:18:12,980 --> 00:18:16,850
like I got it wrong here it said that

00:18:14,450 --> 00:18:18,980
the the real cat is fake then you know

00:18:16,850 --> 00:18:20,360
the discriminator isn't isn't working

00:18:18,980 --> 00:18:22,940
very well and what does it happen when

00:18:20,360 --> 00:18:24,110
it goes wrong we have to tune the

00:18:22,940 --> 00:18:26,810
numbers and that's what happens if you

00:18:24,110 --> 00:18:29,690
tune it it learns to become a little bit

00:18:26,810 --> 00:18:31,310
better but then if it did get it right

00:18:29,690 --> 00:18:32,990
then what does that mean well it means

00:18:31,310 --> 00:18:35,180
that this makes a generator isn't doing

00:18:32,990 --> 00:18:39,350
a good job of generating cabbages so a

00:18:35,180 --> 00:18:40,640
generator then does a better job and

00:18:39,350 --> 00:18:42,020
what happens they keep on fighting

00:18:40,640 --> 00:18:44,000
against each other against - against

00:18:42,020 --> 00:18:45,500
each other that it discriminates against

00:18:44,000 --> 00:18:46,970
better the generator gets better

00:18:45,500 --> 00:18:49,400
keeps on going keeps going keeps on

00:18:46,970 --> 00:18:52,580
going until the discriminator can't tell

00:18:49,400 --> 00:18:55,040
anymore if an image is a fake image or a

00:18:52,580 --> 00:18:57,430
real image and then what you do is you

00:18:55,040 --> 00:18:57,430
throw away

00:18:58,030 --> 00:19:01,480
then we did you throw away your

00:18:59,820 --> 00:19:03,790
discriminates you don't need it neither

00:19:01,480 --> 00:19:07,240
anymore you take your generator and you

00:19:03,790 --> 00:19:08,500
can export that as just as that adjacent

00:19:07,240 --> 00:19:10,840
former and you can load it up in

00:19:08,500 --> 00:19:13,110
tensorflow j/s and use it from within

00:19:10,840 --> 00:19:20,190
the browser and that's what they did

00:19:13,110 --> 00:19:22,470
okay that's how it works so okay cool

00:19:20,190 --> 00:19:25,750
that's fun right

00:19:22,470 --> 00:19:26,200
generating cat images what's that what's

00:19:25,750 --> 00:19:32,770
the point

00:19:26,200 --> 00:19:35,040
wait is that really impressive well how

00:19:32,770 --> 00:19:35,040
about this

00:19:39,720 --> 00:19:47,129
these these images are generated from

00:19:43,409 --> 00:19:48,809
the outlines on the left and that the

00:19:47,129 --> 00:19:51,990
previous thing you saw is an algorithm

00:19:48,809 --> 00:19:57,299
called pics to pics this is a different

00:19:51,990 --> 00:20:00,809
algorithm called bits of it this doesn't

00:19:57,299 --> 00:20:02,580
run in the browser yet yeah you always

00:20:00,809 --> 00:20:06,379
have to put yet when it comes to browser

00:20:02,580 --> 00:20:10,610
and JavaScript on you but yeah so again

00:20:06,379 --> 00:20:10,610
generated how about this one

00:20:10,730 --> 00:20:20,490
one input multiple outputs the input

00:20:18,750 --> 00:20:22,110
doesn't doesn't just have to be outlines

00:20:20,490 --> 00:20:24,629
of things the input can actually be

00:20:22,110 --> 00:20:27,080
anything you want it to be anything you

00:20:24,629 --> 00:20:29,850
want it to be this is another example

00:20:27,080 --> 00:20:33,269
the input is what's called a segmented

00:20:29,850 --> 00:20:36,330
image so the different colors define

00:20:33,269 --> 00:20:40,679
kind of a depth to the image and what

00:20:36,330 --> 00:20:42,889
you can do with this is this okay she's

00:20:40,679 --> 00:20:47,659
not dancing

00:20:42,889 --> 00:20:47,659
that's a generated image from this

00:20:51,580 --> 00:21:00,159
I love making people silent good the and

00:20:58,210 --> 00:21:01,840
it's as I said the input doesn't even

00:21:00,159 --> 00:21:06,070
have to be an image the input could be

00:21:01,840 --> 00:21:08,470
anything it can be text can be text so

00:21:06,070 --> 00:21:10,360
the input here is just a text on the top

00:21:08,470 --> 00:21:12,250
so the top the flower house long thin

00:21:10,360 --> 00:21:14,169
yellow petals and a lot of yellow

00:21:12,250 --> 00:21:17,350
anthers in the center that the top

00:21:14,169 --> 00:21:20,500
images are after 600 iterations the

00:21:17,350 --> 00:21:21,880
bottom images are after 1200 iteration

00:21:20,500 --> 00:21:25,480
the same with the birds here as well

00:21:21,880 --> 00:21:28,090
they're generated from the text this

00:21:25,480 --> 00:21:28,530
one's not that great but the rest of

00:21:28,090 --> 00:21:36,720
them

00:21:28,530 --> 00:21:40,600
pretty good right how far away are you

00:21:36,720 --> 00:21:42,820
how far away do you think we are really

00:21:40,600 --> 00:21:47,789
how far away do you think we are from

00:21:42,820 --> 00:21:53,610
somebody typing in a field build me an

00:21:47,789 --> 00:22:00,159
e-commerce application with four pages

00:21:53,610 --> 00:22:01,419
PayPal four payments go remember ten

00:22:00,159 --> 00:22:07,059
years ago we couldn't tell there's been

00:22:01,419 --> 00:22:09,570
a can of dog in an image even more

00:22:07,059 --> 00:22:09,570
silence

00:22:09,590 --> 00:22:17,870
just to summarize Ganz learn to generate

00:22:14,990 --> 00:22:20,360
images that generative okay they require

00:22:17,870 --> 00:22:21,950
a lot of computer train a lot you can't

00:22:20,360 --> 00:22:24,530
really train those kind of Ganz in

00:22:21,950 --> 00:22:26,330
breath in the browser but once they've

00:22:24,530 --> 00:22:28,550
but the generator model that you create

00:22:26,330 --> 00:22:33,530
can actually be exported and optimized

00:22:28,550 --> 00:22:36,010
to be able to run in the browser so just

00:22:33,530 --> 00:22:39,280
another thing I just before I finish I

00:22:36,010 --> 00:22:43,130
I'm thinking of writing a book on

00:22:39,280 --> 00:22:45,560
tensorflow j/s if you're interested let

00:22:43,130 --> 00:22:47,630
me know just go to that website and just

00:22:45,560 --> 00:22:49,310
the sign up I haven't committed to it

00:22:47,630 --> 00:22:51,410
yet so let me know if you're interested

00:22:49,310 --> 00:22:52,580
in something like that to sign up you

00:22:51,410 --> 00:22:59,660
can take pictures I'll leave it up there

00:22:52,580 --> 00:23:01,610
for ten more seconds enough if you want

00:22:59,660 --> 00:23:03,230
to also learn a little bit more about

00:23:01,610 --> 00:23:04,550
how to use so maybe some of those api's

00:23:03,230 --> 00:23:07,160
that showed you today I have a really

00:23:04,550 --> 00:23:08,600
good example called emoji fire and this

00:23:07,160 --> 00:23:12,860
goes through tutorial where you can go

00:23:08,600 --> 00:23:15,170
online you'll show you how to do I'll

00:23:12,860 --> 00:23:17,770
show you how to basically put emojis on

00:23:15,170 --> 00:23:20,120
people's faces matching their emotion

00:23:17,770 --> 00:23:22,910
pre-revolutionary application and that's

00:23:20,120 --> 00:23:25,540
it thank you very much for your time you

00:23:22,910 --> 00:23:25,540
follow me on Twitter

00:23:26,740 --> 00:23:28,800
you

00:23:32,890 --> 00:23:39,499
[Music]

00:23:45,070 --> 00:23:47,130

YouTube URL: https://www.youtube.com/watch?v=hfSjaChrGpI


