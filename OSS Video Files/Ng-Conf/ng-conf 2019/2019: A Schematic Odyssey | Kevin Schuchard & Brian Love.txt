Title: 2019: A Schematic Odyssey | Kevin Schuchard & Brian Love
Publication date: 2019-05-03
Playlist: ng-conf 2019
Description: 
	Join as we venture into the unknown space of Angular Schematics. You’ll learn why Schematics can be a valuable tool to you as an Angular developer and how to create a collection of schematics for your organization. We’ll go from the launch pad to orbit and into the deep space of Angular Schematics.

Angular Schematics Tutorial: https://brianflove.com/2018/12/11/angular-schematics-tutorial/
NG Add Schematic: https://brianflove.com/2018/12/15/ng-add-schematic/
Angular CLI Prompts: https://www.kevinschuchard.com/blog/2018-10-22-angular-cli-prompts/
Building Schematics with a Sandbox: https://www.kevinschuchard.com/blog/2018-11-20-schematic-sandbox/
Schematics - An Introduction: https://blog.angular.io/schematics-an-introduction-dc1dfbc2a2b2
Schematics: Generating Custom Angular Code with the CLI: https://leanpub.com/angular-schematics

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:07,920 --> 00:00:11,170
[Music]

00:00:11,690 --> 00:00:18,990
all right so thank you all for coming

00:00:15,770 --> 00:00:21,270
we're excited to dive into schematics

00:00:18,990 --> 00:00:23,279
with you guys just beyond slides in

00:00:21,270 --> 00:00:25,170
theory and actually get into some code

00:00:23,279 --> 00:00:26,789
so we're gonna be looking at kind of two

00:00:25,170 --> 00:00:30,630
different ways to build schematics one

00:00:26,789 --> 00:00:32,040
using these schematics CLI that's going

00:00:30,630 --> 00:00:34,440
to generate a project for us we're gonna

00:00:32,040 --> 00:00:35,430
write some schematic code in there and

00:00:34,440 --> 00:00:38,250
then we're gonna take a look at another

00:00:35,430 --> 00:00:40,320
approach which is involves kind of a

00:00:38,250 --> 00:00:42,360
sandbox or a version controlled angular

00:00:40,320 --> 00:00:43,890
app and that'll let us write schematic

00:00:42,360 --> 00:00:46,440
code and executed against that

00:00:43,890 --> 00:00:49,170
application and see the visual diff as

00:00:46,440 --> 00:00:53,489
we make those changes all right very

00:00:49,170 --> 00:00:55,860
cool all right my name is Brian love I

00:00:53,489 --> 00:00:57,570
am a Google developer expert in angular

00:00:55,860 --> 00:00:59,430
and you can follow me on Twitter if you

00:00:57,570 --> 00:01:02,579
want I tweet mostly about angular and

00:00:59,430 --> 00:01:04,769
web technologies and my name is Kevin

00:01:02,579 --> 00:01:08,090
shuart I'm a developer at BRE book and

00:01:04,769 --> 00:01:08,090
excited to be here today

00:01:08,330 --> 00:01:12,030
all right so today's journey this is

00:01:10,619 --> 00:01:13,640
kind of what we're gonna be doing today

00:01:12,030 --> 00:01:16,890
so first we're gonna be starting with

00:01:13,640 --> 00:01:18,330
classically a hello world example after

00:01:16,890 --> 00:01:20,310
we do that we're going to get into the

00:01:18,330 --> 00:01:24,000
CLI prompts so that's a feature that

00:01:20,310 --> 00:01:28,259
came out in the angular CLI I guess it

00:01:24,000 --> 00:01:31,110
was version 6 and then we'll get into

00:01:28,259 --> 00:01:34,979
actually learning some functions using

00:01:31,110 --> 00:01:36,299
the schematics called apply and move and

00:01:34,979 --> 00:01:39,900
so we're gonna be applying what's called

00:01:36,299 --> 00:01:42,540
rules to our to our code and then we'll

00:01:39,900 --> 00:01:44,310
be moving files around and then we're

00:01:42,540 --> 00:01:46,680
gonna get into actually generating out

00:01:44,310 --> 00:01:49,439
templates and then finally we're gonna

00:01:46,680 --> 00:01:50,850
chain a couple of things together and

00:01:49,439 --> 00:01:56,250
kind of have a nice little complete

00:01:50,850 --> 00:01:58,110
example for you guys to do yep so just a

00:01:56,250 --> 00:02:01,140
couple things get started with today

00:01:58,110 --> 00:02:03,240
we're going to be using NPM mostly just

00:02:01,140 --> 00:02:04,500
to keep everything consistent you can

00:02:03,240 --> 00:02:07,259
use yarn on your own but all these

00:02:04,500 --> 00:02:09,360
examples are gonna using NPM get

00:02:07,259 --> 00:02:10,319
hopefully is assault on your machine so

00:02:09,360 --> 00:02:13,060
we'll be using that a little bit later

00:02:10,319 --> 00:02:15,280
on and then we want ever

00:02:13,060 --> 00:02:16,780
- if you're stuck help each other raise

00:02:15,280 --> 00:02:19,180
your hand we're gonna be walking around

00:02:16,780 --> 00:02:24,730
during the examples to provide some help

00:02:19,180 --> 00:02:26,290
and hopefully you guys have fun so

00:02:24,730 --> 00:02:27,880
before we dive into the code how many

00:02:26,290 --> 00:02:29,519
people by show hands were just at our

00:02:27,880 --> 00:02:30,970
talk a half hour ago in the other room

00:02:29,519 --> 00:02:33,099
excellent awesome

00:02:30,970 --> 00:02:34,060
so you've already learned some of these

00:02:33,099 --> 00:02:35,800
things but we want to make sure that

00:02:34,060 --> 00:02:37,390
we're all on the same page so a little

00:02:35,800 --> 00:02:38,620
bit of this will be a little kind of a

00:02:37,390 --> 00:02:41,890
review of what we talked about

00:02:38,620 --> 00:02:43,510
previously but to get started with write

00:02:41,890 --> 00:02:45,190
we need to understand that schematics

00:02:43,510 --> 00:02:46,930
are packaged up into what we call

00:02:45,190 --> 00:02:48,280
collection right and you're gonna see

00:02:46,930 --> 00:02:49,360
here in just a second that we're

00:02:48,280 --> 00:02:51,459
actually going to use a file called

00:02:49,360 --> 00:02:54,459
collection not JSON to kind of describe

00:02:51,459 --> 00:02:58,060
all the executable tasks that are in our

00:02:54,459 --> 00:02:59,739
schematic collection and then once we

00:02:58,060 --> 00:03:01,540
kind of build out our collection or our

00:02:59,739 --> 00:03:04,810
schematic if you will we can actually

00:03:01,540 --> 00:03:07,599
publish that to NPM or maybe even a

00:03:04,810 --> 00:03:10,030
private repository like artifactory and

00:03:07,599 --> 00:03:12,010
then those can be installed via NPM or

00:03:10,030 --> 00:03:13,690
yarn yep it's important to know that we

00:03:12,010 --> 00:03:16,209
can have multiple schematics in our

00:03:13,690 --> 00:03:18,280
collections so we can support specific

00:03:16,209 --> 00:03:21,100
schematic names and then we can also

00:03:18,280 --> 00:03:23,079
support things like in G add in G update

00:03:21,100 --> 00:03:26,230
that's right yeah so we can hook into

00:03:23,079 --> 00:03:29,769
those existing tasks that angular CLI

00:03:26,230 --> 00:03:34,120
has so we can run whatever we need to do

00:03:29,769 --> 00:03:37,000
at that time yep so this is an example

00:03:34,120 --> 00:03:39,700
of the collection JSON file and so this

00:03:37,000 --> 00:03:42,670
is how we kind of define our schematics

00:03:39,700 --> 00:03:45,220
within the collection and you'll see

00:03:42,670 --> 00:03:48,010
it's basically just a JSON object we

00:03:45,220 --> 00:03:49,569
have a schema input property there and

00:03:48,010 --> 00:03:51,400
then we have the schematics property and

00:03:49,569 --> 00:03:53,769
then inside of that that's where we can

00:03:51,400 --> 00:03:55,209
list our schematics within our

00:03:53,769 --> 00:03:57,540
collection so we can name them

00:03:55,209 --> 00:04:00,910
specifically in this example hello world

00:03:57,540 --> 00:04:03,400
or we can support other things like in G

00:04:00,910 --> 00:04:05,650
add and we can give it a description and

00:04:03,400 --> 00:04:08,889
then this factory input is what actually

00:04:05,650 --> 00:04:10,450
points to the method in our type script

00:04:08,889 --> 00:04:11,980
file yeah you can kind of think of that

00:04:10,450 --> 00:04:14,319
factories like if you're familiar with

00:04:11,980 --> 00:04:16,930
web pack maybe like an entry file right

00:04:14,319 --> 00:04:18,760
and the syntax here looks pretty similar

00:04:16,930 --> 00:04:20,620
to what you also might be familiar with

00:04:18,760 --> 00:04:23,380
in terms of like doing lazy loading with

00:04:20,620 --> 00:04:26,060
angular with load children right so it's

00:04:23,380 --> 00:04:28,670
a relative path to

00:04:26,060 --> 00:04:29,870
it's gonna be a JCS file but we're gonna

00:04:28,670 --> 00:04:31,100
be writing schematics and typescript

00:04:29,870 --> 00:04:33,170
right and then we're gonna be compiling

00:04:31,100 --> 00:04:35,240
those down and so in this instance we've

00:04:33,170 --> 00:04:37,280
got a directory schematic - starter and

00:04:35,240 --> 00:04:40,220
inside there I've got an index dot JSP

00:04:37,280 --> 00:04:43,220
I'll write that got compiled down via

00:04:40,220 --> 00:04:45,620
TSC and then we've got this pound symbol

00:04:43,220 --> 00:04:47,390
or hash right and then after that is the

00:04:45,620 --> 00:04:48,860
name of the function that we're going

00:04:47,390 --> 00:04:50,930
that's going to be the entry of our

00:04:48,860 --> 00:04:56,090
schematic so that's where the schematic

00:04:50,930 --> 00:04:56,960
is going to execute to begin with and

00:04:56,090 --> 00:04:58,970
we're gonna be talking about a lot of

00:04:56,960 --> 00:05:02,330
terms and one of the important ones is

00:04:58,970 --> 00:05:04,670
the tree and you'll generally see the

00:05:02,330 --> 00:05:07,940
code that the schematic is executed

00:05:04,670 --> 00:05:09,860
against it's referred to as the tree and

00:05:07,940 --> 00:05:10,430
if you heard our talk we talked about an

00:05:09,860 --> 00:05:13,580
Apsara

00:05:10,430 --> 00:05:15,590
abstract syntax tree and I think that's

00:05:13,580 --> 00:05:18,350
probably where this comes from right but

00:05:15,590 --> 00:05:20,240
the schematics engine when we're given a

00:05:18,350 --> 00:05:22,580
reference to the tree comes with a lot

00:05:20,240 --> 00:05:24,320
of helpful methods off of it so we can

00:05:22,580 --> 00:05:27,620
call things like you know create delete

00:05:24,320 --> 00:05:33,010
we can see if a file exists we can even

00:05:27,620 --> 00:05:36,380
read into a file at a specific path cool

00:05:33,010 --> 00:05:38,570
and so the next thing that we need to

00:05:36,380 --> 00:05:40,610
understand is this idea of a rule so a

00:05:38,570 --> 00:05:42,890
rule is we're gonna see this in the code

00:05:40,610 --> 00:05:44,660
or just a second is basically a factory

00:05:42,890 --> 00:05:47,960
function right so it's a function that

00:05:44,660 --> 00:05:50,300
applies actions to our tree right and it

00:05:47,960 --> 00:05:52,190
actually returns a new tree so that way

00:05:50,300 --> 00:05:54,440
we can kind of chain together rules and

00:05:52,190 --> 00:06:00,650
keep applying changes to our file system

00:05:54,440 --> 00:06:03,710
using these rules so this is an example

00:06:00,650 --> 00:06:05,510
of a rule so this is that hello world a

00:06:03,710 --> 00:06:09,380
function that we're referencing in the

00:06:05,510 --> 00:06:11,600
index TS file the first I guess only

00:06:09,380 --> 00:06:13,880
argument into that is the options right

00:06:11,600 --> 00:06:16,370
and those options are whatever the user

00:06:13,880 --> 00:06:20,150
specified on the command line or via

00:06:16,370 --> 00:06:23,990
prompts and inside there we've got our

00:06:20,150 --> 00:06:26,210
function that's the rule function so it

00:06:23,990 --> 00:06:27,470
accepts the tree which is the kind of

00:06:26,210 --> 00:06:29,600
the current state of the tree if you

00:06:27,470 --> 00:06:33,560
will and then also this thing called a

00:06:29,600 --> 00:06:36,050
schematic context and then our rule it

00:06:33,560 --> 00:06:37,370
returns that tree and inside there you

00:06:36,050 --> 00:06:38,210
can see that we're running treat I

00:06:37,370 --> 00:06:40,910
create

00:06:38,210 --> 00:06:43,070
so what is that doing so this is going

00:06:40,910 --> 00:06:46,220
to take our tree and create a file and

00:06:43,070 --> 00:06:47,630
so the first argument is the path or the

00:06:46,220 --> 00:06:49,850
filename so we're going to put this

00:06:47,630 --> 00:06:53,030
right in the root calling it hi-5 dot

00:06:49,850 --> 00:06:55,669
HTML and the second argument is the

00:06:53,030 --> 00:06:56,990
input or the context of the file that

00:06:55,669 --> 00:06:59,539
we're creating so we're gonna put in

00:06:56,990 --> 00:07:02,509
some HTML in there cool pretty simple so

00:06:59,539 --> 00:07:04,370
far yeah all right

00:07:02,509 --> 00:07:07,190
so to get started with this schematic

00:07:04,370 --> 00:07:10,220
CLI we need to actually create a new

00:07:07,190 --> 00:07:11,810
project right so remember in our talk

00:07:10,220 --> 00:07:13,400
previously we talked that there's this

00:07:11,810 --> 00:07:15,680
thing called a schematic CLI and that's

00:07:13,400 --> 00:07:17,479
different than the angular CLI so if you

00:07:15,680 --> 00:07:19,009
haven't installed that make sure you go

00:07:17,479 --> 00:07:21,169
to our getting started page and we'll

00:07:19,009 --> 00:07:23,870
have this up here in a second and you

00:07:21,169 --> 00:07:26,180
need to install that schematic CLI once

00:07:23,870 --> 00:07:27,770
you do that you can execute the blitz

00:07:26,180 --> 00:07:29,229
actually you're actually kind of weird

00:07:27,770 --> 00:07:32,150
you're using the schematic CLI that

00:07:29,229 --> 00:07:35,389
executes schematics to generate out a

00:07:32,150 --> 00:07:38,180
new schematics projects so you're kind

00:07:35,389 --> 00:07:39,259
of it kind of dog foods itself so using

00:07:38,180 --> 00:07:41,240
the schematics you're gonna execute

00:07:39,259 --> 00:07:42,889
granik's blank that's the name of that

00:07:41,240 --> 00:07:45,320
schematic that we're executing and

00:07:42,889 --> 00:07:47,180
that's gonna create out a new schematic

00:07:45,320 --> 00:07:49,370
project for you so this is equivalent to

00:07:47,180 --> 00:07:50,570
ng new so in this sense is I'm going to

00:07:49,370 --> 00:07:53,389
create a new project and I'm just

00:07:50,570 --> 00:07:56,150
calling it foo and then after that we

00:07:53,389 --> 00:07:58,699
can use the schematic CLI to execute our

00:07:56,150 --> 00:08:00,409
schematic so we're not executing it in

00:07:58,699 --> 00:08:03,380
the context of the angular CLI yet and

00:08:00,409 --> 00:08:05,570
we will here today but if we want to

00:08:03,380 --> 00:08:07,460
kind of get started and play with our

00:08:05,570 --> 00:08:10,190
schematic we can just use schematics to

00:08:07,460 --> 00:08:12,860
execute it so after schematics we first

00:08:10,190 --> 00:08:15,380
give it the directory where we're gonna

00:08:12,860 --> 00:08:17,030
point to our collection dot JSON or

00:08:15,380 --> 00:08:19,099
basically the root of our project right

00:08:17,030 --> 00:08:20,240
and then you can use a colon and then

00:08:19,099 --> 00:08:22,370
after that is gonna be the name of the

00:08:20,240 --> 00:08:23,900
schematic so remember earlier you saw

00:08:22,370 --> 00:08:26,389
the collection out JSON file and add

00:08:23,900 --> 00:08:29,120
hello - world so if I was executing that

00:08:26,389 --> 00:08:30,669
schematic I would type schematics dot

00:08:29,120 --> 00:08:33,709
for the maybe the current directory

00:08:30,669 --> 00:08:37,459
colon and then hello - world and then I

00:08:33,709 --> 00:08:38,779
could pass in those options you know or

00:08:37,459 --> 00:08:43,250
I could just wait and get prompted by

00:08:38,779 --> 00:08:45,390
the CLI prompts alright let's do a demo

00:08:43,250 --> 00:08:47,740
of that do it

00:08:45,390 --> 00:08:49,300
did everybody get a chance to go to the

00:08:47,740 --> 00:08:51,340
getting started page and get installed

00:08:49,300 --> 00:08:54,010
is there anybody that you maybe put that

00:08:51,340 --> 00:08:58,300
URL up again real quick you want to go

00:08:54,010 --> 00:08:59,800
to just the first slide just give

00:08:58,300 --> 00:09:02,110
everybody a quick second or if you want

00:08:59,800 --> 00:09:05,410
to take a pic or whatever of this so

00:09:02,110 --> 00:09:08,470
just go to bitly slash schematics

00:09:05,410 --> 00:09:11,020
- pre-flight ok that's going to take you

00:09:08,470 --> 00:09:14,170
to a repository or excuse me a wiki page

00:09:11,020 --> 00:09:15,490
on our repository and that's going to

00:09:14,170 --> 00:09:18,010
have some instructions for you to clone

00:09:15,490 --> 00:09:21,010
the repository you need to install some

00:09:18,010 --> 00:09:24,310
dependencies and then you also need to

00:09:21,010 --> 00:09:25,600
install the schematics CLI so I'm going

00:09:24,310 --> 00:09:28,570
to leave it up there for another second

00:09:25,600 --> 00:09:33,850
everybody good ok so let's go ahead and

00:09:28,570 --> 00:09:42,430
let's take a look at doing the demo and

00:09:33,850 --> 00:09:45,550
then can you pull up the slides yeah the

00:09:42,430 --> 00:09:48,240
speaker notes yep oh good alright so

00:09:45,550 --> 00:09:54,240
here I am on the getting started page

00:09:48,240 --> 00:09:56,500
and I'm gonna pull up my terminal and

00:09:54,240 --> 00:09:58,900
I've already got the schematics CLI

00:09:56,500 --> 00:10:01,150
installed so I can do schematics - -

00:09:58,900 --> 00:10:02,110
help and it should say hey here are all

00:10:01,150 --> 00:10:06,480
the things you can do with the

00:10:02,110 --> 00:10:09,700
schematics CLI so I am going to go to

00:10:06,480 --> 00:10:13,000
I've just got a repos directory here and

00:10:09,700 --> 00:10:15,880
I'm gonna do schematics blank hello -

00:10:13,000 --> 00:10:17,500
world and what this is gonna do is this

00:10:15,880 --> 00:10:19,390
is going to create a new schematics

00:10:17,500 --> 00:10:21,670
project for me so this is very similar

00:10:19,390 --> 00:10:23,890
to ng new all right and then it's going

00:10:21,670 --> 00:10:28,090
to do an NPM install install the

00:10:23,890 --> 00:10:33,460
dependencies and let's go ahead and go

00:10:28,090 --> 00:10:39,670
into that and then we are going to open

00:10:33,460 --> 00:10:42,880
this up in vs Cutten let me bump this up

00:10:39,670 --> 00:10:44,470
for you guys alright good so you can see

00:10:42,880 --> 00:10:46,810
right off the bat that we've got our

00:10:44,470 --> 00:10:48,790
source directory so the structure is

00:10:46,810 --> 00:10:52,150
pretty similar to kind of similar to

00:10:48,790 --> 00:10:55,750
angular and here's our collection dot

00:10:52,150 --> 00:10:57,040
JSON file let me bump this up one more

00:10:55,750 --> 00:10:58,780
just to make sure everybody can see it

00:10:57,040 --> 00:11:00,880
so inside that collection that

00:10:58,780 --> 00:11:04,480
Ehsan file I've got my schematics to

00:11:00,880 --> 00:11:06,370
find and the key or the name of the

00:11:04,480 --> 00:11:08,140
schematic the the task that we're gonna

00:11:06,370 --> 00:11:10,330
be executing it's called hello - world

00:11:08,140 --> 00:11:13,930
right and then here's my factory and

00:11:10,330 --> 00:11:15,850
that's pointing to that factory function

00:11:13,930 --> 00:11:17,230
or whatever I guess the entry file if

00:11:15,850 --> 00:11:20,350
you will so it's pointing to hello world

00:11:17,230 --> 00:11:22,150
slash index and then pound hello world

00:11:20,350 --> 00:11:24,340
right so if I go into that directory

00:11:22,150 --> 00:11:26,620
take a look at that index that TS file

00:11:24,340 --> 00:11:28,750
there it is kind of stubbed out for me

00:11:26,620 --> 00:11:31,420
and ready to go right and it's it can

00:11:28,750 --> 00:11:34,270
accept the options and then here is my

00:11:31,420 --> 00:11:37,510
rule alright good so now that we've got

00:11:34,270 --> 00:11:41,110
that let's just create a file so we're

00:11:37,510 --> 00:11:45,180
going to do tree dot create I'm gonna

00:11:41,110 --> 00:11:52,000
called index dot HTML I'm gonna say hi

00:11:45,180 --> 00:11:54,400
and you go home alright so I'm gonna

00:11:52,000 --> 00:11:56,200
save that and then I need to execute

00:11:54,400 --> 00:11:59,380
this I need to compile this down to

00:11:56,200 --> 00:12:01,750
JavaScript right so if we look inside

00:11:59,380 --> 00:12:03,310
package dot JSON we've got a build

00:12:01,750 --> 00:12:05,470
script that's already there for us so

00:12:03,310 --> 00:12:09,280
the next thing we can do is we can do

00:12:05,470 --> 00:12:11,440
npm run build this is going to use a

00:12:09,280 --> 00:12:13,360
typescript compiler now we see all of

00:12:11,440 --> 00:12:16,060
these files I kind of got populated into

00:12:13,360 --> 00:12:18,370
our directory so there's our j/s file

00:12:16,060 --> 00:12:20,290
and now we're ready to go ahead and

00:12:18,370 --> 00:12:22,060
actually run our schematics so we're

00:12:20,290 --> 00:12:23,920
going to do schematics I'm in the

00:12:22,060 --> 00:12:25,750
HelloWorld directory already so I'm just

00:12:23,920 --> 00:12:27,760
going to use the dot for the relative

00:12:25,750 --> 00:12:29,290
path followed by the colon and then the

00:12:27,760 --> 00:12:31,330
name of the schematic that I want to

00:12:29,290 --> 00:12:33,520
execute so in this instance we're gonna

00:12:31,330 --> 00:12:37,270
execute that task that hello - world

00:12:33,520 --> 00:12:39,580
right and I'm gonna run this at first

00:12:37,270 --> 00:12:41,140
and you're gonna see that it looks kind

00:12:39,580 --> 00:12:43,540
of like the CLI rice does it created

00:12:41,140 --> 00:12:46,750
this file but if you look around you're

00:12:43,540 --> 00:12:49,990
gonna go oh I don't see the file like

00:12:46,750 --> 00:12:51,220
what's going on here man and so we know

00:12:49,990 --> 00:12:53,320
in the angular CLI we've got this thing

00:12:51,220 --> 00:12:55,270
called a dry run flag right so when

00:12:53,320 --> 00:12:57,610
you're executing schematics inside the

00:12:55,270 --> 00:12:59,770
context of the schematic CLI dry run the

00:12:57,610 --> 00:13:02,200
default is true so in order to actually

00:12:59,770 --> 00:13:04,810
get it to generate the file we have to

00:13:02,200 --> 00:13:08,590
actually set dry run to false explicitly

00:13:04,810 --> 00:13:09,240
so I'm gonna go up you know - - dry run

00:13:08,590 --> 00:13:10,769
oops

00:13:09,240 --> 00:13:12,149
this is when you're using that relative

00:13:10,769 --> 00:13:14,519
pathing so when you have that dot in

00:13:12,149 --> 00:13:16,170
front of the colas right the schematic

00:13:14,519 --> 00:13:17,730
CLI knows you're writing this Glee so

00:13:16,170 --> 00:13:18,929
it's kind of giving a little safety

00:13:17,730 --> 00:13:22,050
guard so you don't just litter your

00:13:18,929 --> 00:13:23,879
codebase with code yep so let's go ahead

00:13:22,050 --> 00:13:28,170
and run that now it says it created the

00:13:23,879 --> 00:13:38,670
file and there it is hi ng-conf boom

00:13:28,170 --> 00:13:40,230
first one all right so it's time for the

00:13:38,670 --> 00:13:42,569
first exercise so if you go to this link

00:13:40,230 --> 00:13:44,249
this is takes you the same place that

00:13:42,569 --> 00:13:47,699
the first link does basically just

00:13:44,249 --> 00:13:49,199
exercise one but you guys can basically

00:13:47,699 --> 00:13:53,309
do what Brian just did you'll use the

00:13:49,199 --> 00:13:56,519
schematic CLI you'll run tree dot create

00:13:53,309 --> 00:13:58,019
and add write your first schematic so

00:13:56,519 --> 00:14:00,569
we'll take a few minutes maybe up five

00:13:58,019 --> 00:14:02,040
minutes yeah let's do yeah three or four

00:14:00,569 --> 00:14:03,209
minutes why don't you guys go ahead and

00:14:02,040 --> 00:14:06,029
get started make sure you have that

00:14:03,209 --> 00:14:07,709
schematic CLI installed and if you if

00:14:06,029 --> 00:14:09,420
you're already on the web page like

00:14:07,709 --> 00:14:11,309
Kevin said you can just it's all in this

00:14:09,420 --> 00:14:13,139
same wiki or you can use this bitly link

00:14:11,309 --> 00:14:15,569
to get there and we're just going to

00:14:13,139 --> 00:14:17,369
exercise one hello world and we're gonna

00:14:15,569 --> 00:14:18,929
turn off our mics and if you have any

00:14:17,369 --> 00:14:20,189
questions or if you're run into issues

00:14:18,929 --> 00:14:21,779
don't you just raise your hand and we're

00:14:20,189 --> 00:14:24,299
gonna be roaming around for the next

00:14:21,779 --> 00:14:27,660
couple of minutes and then we'll keep

00:14:24,299 --> 00:14:29,819
moving on if you're running into an

00:14:27,660 --> 00:14:32,129
issue make sure that you run that

00:14:29,819 --> 00:14:34,709
schematics blank outside of the cloned

00:14:32,129 --> 00:14:35,970
repo so make sure just go like on your

00:14:34,709 --> 00:14:38,670
desktop or something in and do

00:14:35,970 --> 00:14:40,049
schematics blank hello - world so we're

00:14:38,670 --> 00:14:42,059
gonna start with just a fresh one and

00:14:40,049 --> 00:14:44,759
then in a second here we're gonna get

00:14:42,059 --> 00:14:48,230
into that cloned repo and use that but

00:14:44,759 --> 00:14:50,730
we're not quite there yet okay all right

00:14:48,230 --> 00:14:52,860
yeah so if you're running into any sort

00:14:50,730 --> 00:14:55,559
of issues make sure you're running this

00:14:52,860 --> 00:14:59,879
new schematics blank outside of that

00:14:55,559 --> 00:15:01,499
cloned repo so we're just starting

00:14:59,879 --> 00:15:02,790
what's kind of this is a brand new kind

00:15:01,499 --> 00:15:04,589
of project just to kind of give you guys

00:15:02,790 --> 00:15:09,480
a feel for what it's like to get started

00:15:04,589 --> 00:15:11,069
with schematics ok so the next thing we

00:15:09,480 --> 00:15:13,559
need to understand is this idea of a

00:15:11,069 --> 00:15:16,470
schema so when we're executing our

00:15:13,559 --> 00:15:18,389
schematic right now we just have we're

00:15:16,470 --> 00:15:19,679
just doing schematic blank we're just

00:15:18,389 --> 00:15:21,149
doing something very simple right this

00:15:19,679 --> 00:15:22,710
is like the hello world example of

00:15:21,149 --> 00:15:25,350
schematics but what

00:15:22,710 --> 00:15:28,110
you get into creating schematics you're

00:15:25,350 --> 00:15:30,270
likely gonna need to have input from the

00:15:28,110 --> 00:15:31,830
user so think about when you generate

00:15:30,270 --> 00:15:33,750
out a component using the angular CLI

00:15:31,830 --> 00:15:34,650
you've got to provide the name of the

00:15:33,750 --> 00:15:37,920
component that you want to generate

00:15:34,650 --> 00:15:42,150
right so you would do like ng generate

00:15:37,920 --> 00:15:43,650
component hello world or soccer ball or

00:15:42,150 --> 00:15:45,870
whatever the component is that you're

00:15:43,650 --> 00:15:47,910
creating right and so in order to do

00:15:45,870 --> 00:15:50,880
that we need to define what's called a

00:15:47,910 --> 00:15:52,440
schema and so this is an example of the

00:15:50,880 --> 00:15:53,730
schema days on file and we're going to

00:15:52,440 --> 00:15:55,710
be creating this together here in a

00:15:53,730 --> 00:15:57,660
second and this is gonna live inside the

00:15:55,710 --> 00:15:59,970
source directory and this schema data

00:15:57,660 --> 00:16:02,700
JSON file we're gonna in there we're

00:15:59,970 --> 00:16:06,030
gonna specify all of the properties that

00:16:02,700 --> 00:16:08,040
the user or the input properties are the

00:16:06,030 --> 00:16:10,140
options right and these options are

00:16:08,040 --> 00:16:12,390
what's remember that underscore options

00:16:10,140 --> 00:16:14,070
if you look in your code that you have

00:16:12,390 --> 00:16:16,020
right on that hello world function

00:16:14,070 --> 00:16:18,480
that's where we're gonna receive that as

00:16:16,020 --> 00:16:21,360
an object right of all the options that

00:16:18,480 --> 00:16:24,270
the user entered and like we talked

00:16:21,360 --> 00:16:25,650
about in angular CLI six and higher we

00:16:24,270 --> 00:16:27,420
can actually prompt the user if they

00:16:25,650 --> 00:16:30,930
don't enter that option on the command

00:16:27,420 --> 00:16:33,540
line so in this instance go back in this

00:16:30,930 --> 00:16:34,440
instance what I want is I want a name so

00:16:33,540 --> 00:16:36,510
this would be like the name of the

00:16:34,440 --> 00:16:39,150
component so we see underneath

00:16:36,510 --> 00:16:41,250
properties that key is name so then in

00:16:39,150 --> 00:16:43,050
my schematic I'm gonna have options dot

00:16:41,250 --> 00:16:45,630
name right that's gonna line up exactly

00:16:43,050 --> 00:16:47,430
with whatever that property was and this

00:16:45,630 --> 00:16:49,490
property is a string so we're gonna

00:16:47,430 --> 00:16:51,570
expect the user to enter a string value

00:16:49,490 --> 00:16:53,580
you're gonna see this here in a second

00:16:51,570 --> 00:16:55,440
there's other values that we can prompt

00:16:53,580 --> 00:16:57,300
the user and maybe you've seen this when

00:16:55,440 --> 00:16:58,740
using like maybe the EDX schematics or

00:16:57,300 --> 00:17:00,660
something where it gives you a couple of

00:16:58,740 --> 00:17:02,040
options right well I guess a good

00:17:00,660 --> 00:17:07,170
example is when you generate out a

00:17:02,040 --> 00:17:09,420
component now it'll say what kind of can

00:17:07,170 --> 00:17:12,270
choose between those that's going to be

00:17:09,420 --> 00:17:13,560
a different type called enum and then we

00:17:12,270 --> 00:17:14,910
have a description that goes along with

00:17:13,560 --> 00:17:17,430
this property and then we can also

00:17:14,910 --> 00:17:19,200
specify kind the default value that the

00:17:17,430 --> 00:17:20,790
user would see when they get prompt and

00:17:19,200 --> 00:17:25,170
they can just hit enter and accept that

00:17:20,790 --> 00:17:26,640
default value and then we need to wire

00:17:25,170 --> 00:17:29,550
this up so once we have our schema

00:17:26,640 --> 00:17:31,500
defined we can connect this back up to

00:17:29,550 --> 00:17:34,140
our collection JSON so remember we had

00:17:31,500 --> 00:17:36,830
this property under schematics called

00:17:34,140 --> 00:17:38,450
schematic starter so just on our

00:17:36,830 --> 00:17:40,159
we were to find where the entry point to

00:17:38,450 --> 00:17:42,710
the function is will define where the

00:17:40,159 --> 00:17:48,140
schema is so this will pull up any props

00:17:42,710 --> 00:17:50,659
or any options that we've defined so

00:17:48,140 --> 00:17:52,490
here's an example of a prompt so the

00:17:50,659 --> 00:17:55,850
only addition to that property that we

00:17:52,490 --> 00:17:59,330
saw earlier is this additional property

00:17:55,850 --> 00:18:01,519
called X - prompt right so when we when

00:17:59,330 --> 00:18:03,380
we put that inside of our schema file we

00:18:01,519 --> 00:18:05,450
can actually say hey I want to prompt

00:18:03,380 --> 00:18:07,850
the user for this value rather than just

00:18:05,450 --> 00:18:10,909
having as something they can specify via

00:18:07,850 --> 00:18:12,380
the terminal their command line and here

00:18:10,909 --> 00:18:17,120
we're gonna say what is the name of the

00:18:12,380 --> 00:18:18,740
person you want to say hi to again it

00:18:17,120 --> 00:18:21,049
will run through two quick examples

00:18:18,740 --> 00:18:24,019
boolean right we've got the type here

00:18:21,049 --> 00:18:27,230
specifying it as a boolean and again we

00:18:24,019 --> 00:18:30,559
can supply default and then trigger that

00:18:27,230 --> 00:18:32,450
with the X prompt field cool and then

00:18:30,559 --> 00:18:36,139
like I mentioned earlier we also have a

00:18:32,450 --> 00:18:37,669
type called enum and here I can say what

00:18:36,139 --> 00:18:39,620
are the possible values and these are

00:18:37,669 --> 00:18:42,529
the only acceptable values for this

00:18:39,620 --> 00:18:44,419
option right so in this instance the

00:18:42,529 --> 00:18:46,399
name of the properties called largest

00:18:44,419 --> 00:18:48,110
planet and they can only choose these

00:18:46,399 --> 00:18:50,659
three options so we're controlling the

00:18:48,110 --> 00:18:56,929
input that the user can enter into our

00:18:50,659 --> 00:18:58,639
schematic and then once we like I was

00:18:56,929 --> 00:19:00,919
mentioning once we have that kind of

00:18:58,639 --> 00:19:03,769
wired up inside of our schema JSON now

00:19:00,919 --> 00:19:05,690
inside of our TS file and our schema or

00:19:03,769 --> 00:19:07,490
excuse me inside of our TS file and our

00:19:05,690 --> 00:19:09,440
hello world function this is where we're

00:19:07,490 --> 00:19:12,200
actually going to receive those options

00:19:09,440 --> 00:19:14,419
right so as it is right now in your code

00:19:12,200 --> 00:19:17,059
it's gonna say underscore options : any

00:19:14,419 --> 00:19:19,250
we could leave it as any but as

00:19:17,059 --> 00:19:21,049
excellent typescript developers that we

00:19:19,250 --> 00:19:22,880
are we're not going to just go with any

00:19:21,049 --> 00:19:24,409
we're going to strongly type this and

00:19:22,880 --> 00:19:25,639
we're going to declare an interface and

00:19:24,409 --> 00:19:28,370
in this instance we're just gonna call

00:19:25,639 --> 00:19:30,380
it hello world options and say that the

00:19:28,370 --> 00:19:33,830
options has a name property that's

00:19:30,380 --> 00:19:37,190
required and it's of type string Oh real

00:19:33,830 --> 00:19:38,779
quick go back to that last one right the

00:19:37,190 --> 00:19:40,159
other thing to notice here is now that I

00:19:38,779 --> 00:19:42,830
have that options I can use that

00:19:40,159 --> 00:19:44,539
obviously right inside of my code so

00:19:42,830 --> 00:19:45,529
this is a very simple example and this

00:19:44,539 --> 00:19:47,779
is what we're going to be doing in the

00:19:45,529 --> 00:19:50,270
next exercise we're going to take that

00:19:47,779 --> 00:19:52,970
same tree dot create we're creating a

00:19:50,270 --> 00:19:54,830
file index.html and then the second

00:19:52,970 --> 00:19:56,240
argument into treetop create is the

00:19:54,830 --> 00:19:58,700
content that we're going to put inside

00:19:56,240 --> 00:20:00,799
that file in this instance we're gonna

00:19:58,700 --> 00:20:02,299
actually use options name so we're just

00:20:00,799 --> 00:20:04,370
going to use that the backticks

00:20:02,299 --> 00:20:07,549
right in order to create some string

00:20:04,370 --> 00:20:09,380
concatenation and we're gonna say hi and

00:20:07,549 --> 00:20:11,090
then whatever the name is or high-five

00:20:09,380 --> 00:20:13,970
and whatever the name is that the user

00:20:11,090 --> 00:20:25,070
prompted with so let's go ahead and do

00:20:13,970 --> 00:20:28,520
that one together as well alright so I'm

00:20:25,070 --> 00:20:32,179
back here on the github page so if we go

00:20:28,520 --> 00:20:34,250
down to exercise two prompts we've got

00:20:32,179 --> 00:20:35,980
all of the information that we need so

00:20:34,250 --> 00:20:40,460
let's go ahead and get started

00:20:35,980 --> 00:20:43,220
pull my vs code here's the hello world

00:20:40,460 --> 00:20:45,080
that we just did together earlier and

00:20:43,220 --> 00:20:49,120
the first thing I need to do is I'm

00:20:45,080 --> 00:20:53,179
gonna create a schema file so inside of

00:20:49,120 --> 00:20:57,139
hello world I'm gonna do new file I'm

00:20:53,179 --> 00:21:02,240
gonna call this schema JSON and I don't

00:20:57,139 --> 00:21:07,070
really feel like writing it all out so

00:21:02,240 --> 00:21:09,260
I'm just gonna copy paste this over so

00:21:07,070 --> 00:21:10,490
here's the properties and I'm gonna be

00:21:09,260 --> 00:21:12,500
prompting the user for the name so

00:21:10,490 --> 00:21:14,149
that's the name of that option right and

00:21:12,500 --> 00:21:15,679
then here's the descriptions it's gonna

00:21:14,149 --> 00:21:17,990
be the name of the person that you want

00:21:15,679 --> 00:21:19,039
to say hi to or waive to and then here's

00:21:17,990 --> 00:21:21,710
the prompt that the user is actually

00:21:19,039 --> 00:21:22,879
going to see in their terminal and it's

00:21:21,710 --> 00:21:25,070
got a problem say what is the name of

00:21:22,879 --> 00:21:26,990
the person that you want to say hi to so

00:21:25,070 --> 00:21:28,610
I'm gonna save that and then I need to

00:21:26,990 --> 00:21:30,529
go over to my collection out JSON file

00:21:28,610 --> 00:21:33,590
and I need to tell the schematics about

00:21:30,529 --> 00:21:35,360
this new schema so you can see here I

00:21:33,590 --> 00:21:37,010
get an automatic drop down because the

00:21:35,360 --> 00:21:40,279
schema is defined for crushed not JSON

00:21:37,010 --> 00:21:44,779
so now I can say schema : and then I'm

00:21:40,279 --> 00:21:48,590
gonna say hello - world for slash schema

00:21:44,779 --> 00:21:50,419
JSON alright good so now that we've kind

00:21:48,590 --> 00:21:53,090
of wired that that up the next step is

00:21:50,419 --> 00:21:55,460
to go into our index IDs file and now we

00:21:53,090 --> 00:21:57,020
want to actually start using that option

00:21:55,460 --> 00:21:59,120
that was specified I'm just going to

00:21:57,020 --> 00:22:01,340
blow away those comments there I'm going

00:21:59,120 --> 00:22:02,300
to declare an interface I'm gonna call

00:22:01,340 --> 00:22:06,510
it hello

00:22:02,300 --> 00:22:10,470
oops what I call it here hello world

00:22:06,510 --> 00:22:11,820
options and if it really matters okay

00:22:10,470 --> 00:22:14,280
call whatever you want we'll call it

00:22:11,820 --> 00:22:16,950
hello world options that name is a

00:22:14,280 --> 00:22:20,100
string I'm gonna go ahead and get rid of

00:22:16,950 --> 00:22:22,140
that any and we're gonna say the options

00:22:20,100 --> 00:22:24,630
is of this signature right this this

00:22:22,140 --> 00:22:28,380
interface is code contract and say that

00:22:24,630 --> 00:22:30,840
the structure of that is is hello world

00:22:28,380 --> 00:22:33,390
options it has a property name and now

00:22:30,840 --> 00:22:40,970
that I have that let's kind of come back

00:22:33,390 --> 00:22:44,280
here and we're gonna do hi oops dollar

00:22:40,970 --> 00:22:51,120
and we're gonna do underscore options

00:22:44,280 --> 00:22:52,560
dot name yep I'm gonna save that if I

00:22:51,120 --> 00:22:54,300
run this right now I'm gonna get an

00:22:52,560 --> 00:22:55,980
error in my schematics and it's gonna

00:22:54,300 --> 00:22:58,710
say hey this file already exists that

00:22:55,980 --> 00:23:01,020
you're trying to create index.html so

00:22:58,710 --> 00:23:03,600
what we need to do is we just need to

00:23:01,020 --> 00:23:06,240
delete this index dot HTML file that we

00:23:03,600 --> 00:23:08,100
created previously just so we if you run

00:23:06,240 --> 00:23:09,840
into that error that's that's something

00:23:08,100 --> 00:23:11,850
that you're gonna need to remember to do

00:23:09,840 --> 00:23:15,020
so we're gonna just move that to the

00:23:11,850 --> 00:23:18,210
trash and don't forget to build

00:23:15,020 --> 00:23:20,460
I've done this a bunch of times when

00:23:18,210 --> 00:23:21,930
using schematics and I'm like what I

00:23:20,460 --> 00:23:23,850
just wrote all this code why isn't it

00:23:21,930 --> 00:23:25,080
working what is going on and that's

00:23:23,850 --> 00:23:27,930
because I didn't actually compile it

00:23:25,080 --> 00:23:29,640
down right so we need to run that npm

00:23:27,930 --> 00:23:30,630
build again and so again we're using the

00:23:29,640 --> 00:23:33,900
typescript compiler

00:23:30,630 --> 00:23:35,640
oops thank you npm run build so make

00:23:33,900 --> 00:23:37,590
sure you do npm run builds that we would

00:23:35,640 --> 00:23:41,460
compile our typescript down to the jas

00:23:37,590 --> 00:23:43,260
file I'm gonna do that and then now

00:23:41,460 --> 00:23:45,240
we're ready to go ahead and run our

00:23:43,260 --> 00:23:47,790
schematic so we're going to use

00:23:45,240 --> 00:23:50,610
schematics the current directory is a

00:23:47,790 --> 00:23:52,410
location of our schematic collection we

00:23:50,610 --> 00:23:55,440
separate that out with a colon followed

00:23:52,410 --> 00:23:56,940
by the name that we want to run remember

00:23:55,440 --> 00:23:58,650
the name of our schematic that we're

00:23:56,940 --> 00:24:01,080
executing inside collection dot JSON

00:23:58,650 --> 00:24:02,910
right now is called hello - world and

00:24:01,080 --> 00:24:05,580
I'm gonna go ahead and just hit enter

00:24:02,910 --> 00:24:07,230
and there we go so now I get prompted

00:24:05,580 --> 00:24:08,550
right and it says what is the name of

00:24:07,230 --> 00:24:12,210
the person that you want to say hi to I

00:24:08,550 --> 00:24:14,410
guess I had my buddy Kevin alright good

00:24:12,210 --> 00:24:16,570
I did it again

00:24:14,410 --> 00:24:18,940
so remember that dry run flag we talked

00:24:16,570 --> 00:24:21,220
about so it didn't create the file right

00:24:18,940 --> 00:24:24,430
so it says that it did but we're running

00:24:21,220 --> 00:24:26,860
inside of that mode called dry run so we

00:24:24,430 --> 00:24:30,150
need to explicitly turn that off so I'm

00:24:26,860 --> 00:24:34,570
gonna just hit up arrow then go - - dry

00:24:30,150 --> 00:24:36,850
- run false so I'm gonna say hey I

00:24:34,570 --> 00:24:38,980
actually want to create this because I'm

00:24:36,850 --> 00:24:41,470
working in this context of like testing

00:24:38,980 --> 00:24:44,530
against a local schematic I'm gonna run

00:24:41,470 --> 00:24:46,990
that would you want to say hi to say hi

00:24:44,530 --> 00:24:52,420
to Kevin and then here's my index.html

00:24:46,990 --> 00:24:56,590
file and it says hi Kevin all right good

00:24:52,420 --> 00:24:59,650
that is our next exercise so if you go

00:24:56,590 --> 00:25:01,270
to the wiki it's a pretty easy one if

00:24:59,650 --> 00:25:02,860
you followed along with me that's great

00:25:01,270 --> 00:25:05,650
but let's give everybody a couple of

00:25:02,860 --> 00:25:07,570
minutes to create that prompt so we've

00:25:05,650 --> 00:25:09,010
got all the instructions for you along

00:25:07,570 --> 00:25:12,370
with the code that you'll need in the

00:25:09,010 --> 00:25:15,790
schema JSON file on this exercise two

00:25:12,370 --> 00:25:17,110
prompts and if you don't have that up in

00:25:15,790 --> 00:25:18,850
front of you and you just joined us or

00:25:17,110 --> 00:25:21,040
something we've got this bitly and

00:25:18,850 --> 00:25:25,030
that'll take you directly to exercise

00:25:21,040 --> 00:25:26,320
two we'll give everybody let's do like

00:25:25,030 --> 00:25:27,760
two or three like two minutes I think

00:25:26,320 --> 00:25:29,680
should be enough and then we're gonna

00:25:27,760 --> 00:25:32,800
keep moving along so we can get to some

00:25:29,680 --> 00:25:35,020
of the good stuff all right you got to

00:25:32,800 --> 00:25:36,010
keep working on that I'm gonna start

00:25:35,020 --> 00:25:38,530
talking about this thing called the

00:25:36,010 --> 00:25:40,240
context so remember we talked about when

00:25:38,530 --> 00:25:41,380
you look at your code right in front of

00:25:40,240 --> 00:25:43,240
you we've got this thing called a

00:25:41,380 --> 00:25:45,550
schematic context we can use that

00:25:43,240 --> 00:25:47,410
schematic context for the most part I

00:25:45,550 --> 00:25:48,610
think Kevin I've mainly just used it for

00:25:47,410 --> 00:25:50,860
logging I think there's a couple other

00:25:48,610 --> 00:25:52,450
things you can do with it but real

00:25:50,860 --> 00:25:57,070
quickly we won't just show you that you

00:25:52,450 --> 00:26:00,160
can use the schematic context to log so

00:25:57,070 --> 00:26:03,070
the API is very simple so inside of our

00:26:00,160 --> 00:26:05,200
rule we get access to that context and

00:26:03,070 --> 00:26:06,190
then on the context object who's got a

00:26:05,200 --> 00:26:08,140
property called logger

00:26:06,190 --> 00:26:11,080
and then kind of like you're familiar

00:26:08,140 --> 00:26:12,850
with with you know whether it's log4j or

00:26:11,080 --> 00:26:15,160
whatever it is you've got different kind

00:26:12,850 --> 00:26:17,500
of logging context that you can log out

00:26:15,160 --> 00:26:19,780
to so you've got a debug mode info

00:26:17,500 --> 00:26:23,170
warned and error and that's kind of

00:26:19,780 --> 00:26:25,960
dependent upon what you set up and that

00:26:23,170 --> 00:26:27,670
debug will only be output when you're in

00:26:25,960 --> 00:26:29,770
what's called verbose mode

00:26:27,670 --> 00:26:32,830
info warned and error who will be out

00:26:29,770 --> 00:26:35,830
put in any other mode or without verbose

00:26:32,830 --> 00:26:37,600
correct okay so once you go ahead and

00:26:35,830 --> 00:26:39,640
let's open up schematics exercise three

00:26:37,600 --> 00:26:43,809
you're gonna open up that index I TS

00:26:39,640 --> 00:26:45,520
file that you're in right now so all we

00:26:43,809 --> 00:26:47,350
want to do is just take that context

00:26:45,520 --> 00:26:51,700
that you have and just start logging

00:26:47,350 --> 00:26:54,640
some stuff out so really simple we'll

00:26:51,700 --> 00:26:56,440
give you guys a minute or two to play

00:26:54,640 --> 00:26:57,700
with the logger and then I will do the

00:26:56,440 --> 00:27:04,150
exercise and you can follow along

00:26:57,700 --> 00:27:06,010
together so just in case I've had a

00:27:04,150 --> 00:27:07,780
couple of people ask me that logger

00:27:06,010 --> 00:27:09,970
we're just doing that inside that index

00:27:07,780 --> 00:27:12,400
dot TS file that we've been in all along

00:27:09,970 --> 00:27:14,440
right so just inside that index dot TS

00:27:12,400 --> 00:27:16,450
file where you've got that context

00:27:14,440 --> 00:27:23,799
that's where you can access dot logger

00:27:16,450 --> 00:27:27,760
and start logging some stuff out we're

00:27:23,799 --> 00:27:29,860
good so so far we have created a blank

00:27:27,760 --> 00:27:31,690
project we've got a hello world we're

00:27:29,860 --> 00:27:34,840
using tree dot create to create a new

00:27:31,690 --> 00:27:35,350
file or specifying the content for that

00:27:34,840 --> 00:27:37,510
file

00:27:35,350 --> 00:27:39,549
we're prompting the user to get some

00:27:37,510 --> 00:27:42,070
values that we can use in our schematics

00:27:39,549 --> 00:27:43,750
so let's keep kind of moving along and

00:27:42,070 --> 00:27:46,120
seeing some of the other things that we

00:27:43,750 --> 00:27:49,240
can do with schematics so here's a

00:27:46,120 --> 00:27:50,350
reference to the file structure this is

00:27:49,240 --> 00:27:53,049
going to be important for kind of our

00:27:50,350 --> 00:27:54,610
next exercise so from right now all

00:27:53,049 --> 00:27:55,660
we're doing is doing tree dot create and

00:27:54,610 --> 00:27:58,240
we're doing this very kind of

00:27:55,660 --> 00:28:00,280
rudimentary example we're just creating

00:27:58,240 --> 00:28:02,440
a file and stuff and some content into

00:28:00,280 --> 00:28:04,290
it and while you that's perfectly

00:28:02,440 --> 00:28:06,400
acceptable and you could do that

00:28:04,290 --> 00:28:08,710
schematics comes with the ability and

00:28:06,400 --> 00:28:09,640
the power of having this like templating

00:28:08,710 --> 00:28:11,590
language right

00:28:09,640 --> 00:28:13,450
so think about angular and we talked

00:28:11,590 --> 00:28:16,929
about this in our presentation earlier

00:28:13,450 --> 00:28:19,240
in angular we have HTML templates right

00:28:16,929 --> 00:28:22,419
and in those templates we can have like

00:28:19,240 --> 00:28:23,890
an gif or ng4 and these kinds of things

00:28:22,419 --> 00:28:27,010
or we can do string interpolation

00:28:23,890 --> 00:28:29,620
similarly in schematics we can also do

00:28:27,010 --> 00:28:31,210
that so inside schematics we're gonna

00:28:29,620 --> 00:28:33,730
create this kind of special directory

00:28:31,210 --> 00:28:35,470
called files and underneath that files

00:28:33,730 --> 00:28:37,480
directory is where we're going to create

00:28:35,470 --> 00:28:38,710
all of our template files that are going

00:28:37,480 --> 00:28:40,690
to be

00:28:38,710 --> 00:28:43,240
kind of generated as part of our

00:28:40,690 --> 00:28:46,299
schematic so in this example we can

00:28:43,240 --> 00:28:48,549
create an index on HTML file inside of

00:28:46,299 --> 00:28:50,590
the files directory and then we can use

00:28:48,549 --> 00:28:52,600
that as kind of our template rather than

00:28:50,590 --> 00:28:54,399
just hard coding our template inside of

00:28:52,600 --> 00:28:58,809
a string or the backticks

00:28:54,399 --> 00:29:00,850
right and so once we have that directory

00:28:58,809 --> 00:29:03,640
defined we can access it with the URL

00:29:00,850 --> 00:29:05,380
method so in our source code we can

00:29:03,640 --> 00:29:08,200
create a variable called source use the

00:29:05,380 --> 00:29:10,779
URL method method pass a relative path

00:29:08,200 --> 00:29:12,909
to it and this will kind of like glob or

00:29:10,779 --> 00:29:16,090
grab all those files and pull it into

00:29:12,909 --> 00:29:20,500
this property and this is going to

00:29:16,090 --> 00:29:23,679
return a source once we have that source

00:29:20,500 --> 00:29:26,140
we can apply multiple rules to a

00:29:23,679 --> 00:29:28,149
specified source within the context that

00:29:26,140 --> 00:29:30,490
we're executing in so you can see we

00:29:28,149 --> 00:29:32,260
have those source files we don't have

00:29:30,490 --> 00:29:34,090
any rules in this example but we can use

00:29:32,260 --> 00:29:39,720
the apply method passing in our source

00:29:34,090 --> 00:29:39,720
and rules and this will return our tree

00:29:40,200 --> 00:29:46,390
ok so in this next exercise we're going

00:29:43,840 --> 00:29:48,899
to use the URL function to get a source

00:29:46,390 --> 00:29:50,830
instance specifying the files directory

00:29:48,899 --> 00:29:52,330
we're going to use the apply function

00:29:50,830 --> 00:29:53,860
then to apply those rules just like

00:29:52,330 --> 00:29:56,230
Kevin talked about and then we're going

00:29:53,860 --> 00:29:57,669
to build and execute so in this instance

00:29:56,230 --> 00:30:00,309
now we're going to switch back to that

00:29:57,669 --> 00:30:02,440
cloned repo so the blank hello world

00:30:00,309 --> 00:30:04,210
project you can just delete that or you

00:30:02,440 --> 00:30:07,240
can leave it or whatever you want so now

00:30:04,210 --> 00:30:08,230
in your editor go ahead and open up the

00:30:07,240 --> 00:30:11,020
schematics

00:30:08,230 --> 00:30:15,159
- workshop directory that you cloned out

00:30:11,020 --> 00:30:16,539
and then run npm run clean just in case

00:30:15,159 --> 00:30:18,520
you did anything in there previously

00:30:16,539 --> 00:30:21,100
let's kind of just get rid of all of the

00:30:18,520 --> 00:30:30,520
stuff and then we're gonna check out a

00:30:21,100 --> 00:30:31,779
branch called apply alright why don't

00:30:30,520 --> 00:30:39,429
you follow along with me while we do

00:30:31,779 --> 00:30:43,120
this okay so right here I'm inside

00:30:39,429 --> 00:30:48,760
HelloWorld but I don't really want to do

00:30:43,120 --> 00:30:50,799
that let's just go up here I'm just

00:30:48,760 --> 00:30:54,889
going to create a directory

00:30:50,799 --> 00:30:57,519
all through and then I'm going to do get

00:30:54,889 --> 00:30:57,519
checkout

00:31:12,920 --> 00:31:17,690
sorry get clone thank you get clone

00:31:21,740 --> 00:31:26,370
right that's why I wanted to make this

00:31:24,270 --> 00:31:28,620
little directory all right so I'm gonna

00:31:26,370 --> 00:31:31,290
clone out the repo do a fresh install

00:31:28,620 --> 00:31:33,660
and then I'm gonna check out so let's go

00:31:31,290 --> 00:31:37,920
into schematics workshop and then now

00:31:33,660 --> 00:31:41,280
let's check out that new apply branch

00:31:37,920 --> 00:31:49,260
and now that I'm on apply and then open

00:31:41,280 --> 00:31:52,320
this up in my code editor yep I need to

00:31:49,260 --> 00:31:53,910
run npm install this was all part of

00:31:52,320 --> 00:31:55,230
like the getting started so hopefully

00:31:53,910 --> 00:32:06,900
you've done that as well i'm gonna let

00:31:55,230 --> 00:32:14,220
that run hope index dot TS file also

00:32:06,900 --> 00:32:17,510
need to run run the link command again

00:32:14,220 --> 00:32:20,100
this was part of the getting started and

00:32:17,510 --> 00:32:22,620
i'm gonna go into that sandbox that's

00:32:20,100 --> 00:32:24,570
that angular application and run install

00:32:22,620 --> 00:32:27,660
there as well so just kind of getting

00:32:24,570 --> 00:32:29,940
things ready okay now we're ready to use

00:32:27,660 --> 00:32:31,950
the URL function so you can see here

00:32:29,940 --> 00:32:35,190
that I've got a files directory with

00:32:31,950 --> 00:32:38,640
just an index dot HTML that's blank so

00:32:35,190 --> 00:32:41,730
let's go back here and let's do Const

00:32:38,640 --> 00:32:44,520
source equals I'm gonna use that URL

00:32:41,730 --> 00:32:46,080
function and it's expecting a string so

00:32:44,520 --> 00:32:49,950
I'm going to say and this is a relative

00:32:46,080 --> 00:32:54,240
path I'm gonna say dot forward slash

00:32:49,950 --> 00:32:57,120
files and let's go ahead and apply some

00:32:54,240 --> 00:32:59,760
rules to our files so I'm going to use

00:32:57,120 --> 00:33:01,920
that apply function I need to apply it

00:32:59,760 --> 00:33:03,840
expects a source followed by an array of

00:33:01,920 --> 00:33:06,270
rules so I'm going to provide it the

00:33:03,840 --> 00:33:08,430
source along with rules which is empty

00:33:06,270 --> 00:33:10,710
for now and if we look at this apply

00:33:08,430 --> 00:33:13,980
function the supply function actually

00:33:10,710 --> 00:33:17,880
returns a source and if we look at the

00:33:13,980 --> 00:33:20,280
source we can see that when we execute

00:33:17,880 --> 00:33:21,929
the source we need to execute it within

00:33:20,280 --> 00:33:24,929
a specified schematic

00:33:21,929 --> 00:33:28,409
context so if I come back here I'm just

00:33:24,929 --> 00:33:31,499
gonna run this within that context and

00:33:28,409 --> 00:33:32,600
I'm gonna return that out did I miss

00:33:31,499 --> 00:33:37,259
anything

00:33:32,600 --> 00:33:42,149
all right let's save that you open up my

00:33:37,259 --> 00:33:43,980
terminal so again you shouldn't have had

00:33:42,149 --> 00:33:45,600
to do some of that install that I did if

00:33:43,980 --> 00:33:47,490
you did that in the very beginning but I

00:33:45,600 --> 00:33:49,919
basically just cloned out the repository

00:33:47,490 --> 00:33:53,070
so I switched to the apply branch I

00:33:49,919 --> 00:33:56,669
needed to install both the schematic

00:33:53,070 --> 00:33:58,860
like dependencies as well as the sandbox

00:33:56,669 --> 00:34:00,450
dependencies and then I ran a command

00:33:58,860 --> 00:34:02,190
called link and that's what's going to

00:34:00,450 --> 00:34:03,690
do the NPM linking so eventually we're

00:34:02,190 --> 00:34:06,539
going to be running our schematic within

00:34:03,690 --> 00:34:09,119
the context of the angular CLI inside of

00:34:06,539 --> 00:34:15,690
the sandbox application so let's go

00:34:09,119 --> 00:34:19,169
ahead and build this and let's go ahead

00:34:15,690 --> 00:34:21,690
and test so real quick let me just pop

00:34:19,169 --> 00:34:23,849
over to package dot JSON you can see

00:34:21,690 --> 00:34:25,649
here some of the scripts that Kevin and

00:34:23,849 --> 00:34:28,559
I have kind of wired up for you ahead of

00:34:25,649 --> 00:34:31,260
time and we've got this script called

00:34:28,559 --> 00:34:32,849
test and what that's gonna do is that is

00:34:31,260 --> 00:34:35,940
going what why don't you describe this

00:34:32,849 --> 00:34:37,829
because you know more about it sure so

00:34:35,940 --> 00:34:39,389
test essentially is going to be just a

00:34:37,829 --> 00:34:42,149
shortcut command that's going to build

00:34:39,389 --> 00:34:43,500
the schematic for you it's going to

00:34:42,149 --> 00:34:45,240
clean out the sandbox so it's going to

00:34:43,500 --> 00:34:47,159
reset it to the version controlled state

00:34:45,240 --> 00:34:49,260
that you have checked in and then it's

00:34:47,159 --> 00:34:51,119
going to launch or execute the schematic

00:34:49,260 --> 00:34:53,460
so it's going to CD into the sandbox run

00:34:51,119 --> 00:34:55,319
ng generate the name of the schematic

00:34:53,460 --> 00:34:56,040
and then you'll be able to see it inside

00:34:55,319 --> 00:34:59,760
the sandbox

00:34:56,040 --> 00:35:00,780
cool so this is our sandbox application

00:34:59,760 --> 00:35:02,849
so we're going to be running our

00:35:00,780 --> 00:35:06,180
schematic against this angular project

00:35:02,849 --> 00:35:13,230
right right alright let's go ahead and

00:35:06,180 --> 00:35:15,660
run NPM test alright it says that it

00:35:13,230 --> 00:35:17,819
created an index dot HTML file so if I

00:35:15,660 --> 00:35:22,190
go inside of our angular project

00:35:17,819 --> 00:35:24,450
there's our blank index dot HTML file so

00:35:22,190 --> 00:35:26,760
why don't you go ahead and we'll give

00:35:24,450 --> 00:35:30,299
everybody a couple of minutes if you

00:35:26,760 --> 00:35:35,340
pull up the wiki and go to exercise 4

00:35:30,299 --> 00:35:36,930
apply make sure that

00:35:35,340 --> 00:35:39,450
you checkout the right branch make sure

00:35:36,930 --> 00:35:41,430
you get on the apply branch and then

00:35:39,450 --> 00:35:43,590
once you're on there follow along with

00:35:41,430 --> 00:35:46,050
the steps that we have to first apply

00:35:43,590 --> 00:35:48,180
the files we're going to use the URL

00:35:46,050 --> 00:35:51,210
function like we talked about and we're

00:35:48,180 --> 00:35:52,770
going to exit use the apply function to

00:35:51,210 --> 00:35:55,560
apply the rules and then we're going to

00:35:52,770 --> 00:35:57,950
invoke it within that context and then

00:35:55,560 --> 00:36:00,660
run NPM test and you should see the

00:35:57,950 --> 00:36:06,420
index.html file that's generated from

00:36:00,660 --> 00:36:10,050
our files directory if anyone's having

00:36:06,420 --> 00:36:12,330
trouble executing this schematic make

00:36:10,050 --> 00:36:15,860
sure you've run the link package JSON

00:36:12,330 --> 00:36:19,680
script it's NPM run link colon schematic

00:36:15,860 --> 00:36:21,510
that's gonna allow you to execute the

00:36:19,680 --> 00:36:22,890
schematic that we're writing from inside

00:36:21,510 --> 00:36:26,820
the sandbox it's kind of a little bit of

00:36:22,890 --> 00:36:29,100
magic package linking there alright so

00:36:26,820 --> 00:36:30,810
so far we just generated out a file

00:36:29,100 --> 00:36:34,860
right we didn't really do much with it

00:36:30,810 --> 00:36:37,230
but we have this as if you saw again

00:36:34,860 --> 00:36:40,830
kind of our presentation previously we

00:36:37,230 --> 00:36:42,210
have the ability to output strings in

00:36:40,830 --> 00:36:45,960
that template do string interpolation

00:36:42,210 --> 00:36:47,700
and the schematics also comes with some

00:36:45,960 --> 00:36:49,350
built-in functions which are really

00:36:47,700 --> 00:36:52,350
handy and we're going to use these

00:36:49,350 --> 00:36:54,330
functions to take maybe a user input

00:36:52,350 --> 00:36:56,130
like the name of a component that we

00:36:54,330 --> 00:36:58,950
want to generate and we might want to

00:36:56,130 --> 00:37:01,770
like - your eyes a file name we want to

00:36:58,950 --> 00:37:04,590
- your eyes the selector right so in the

00:37:01,770 --> 00:37:06,990
component metadata of angular component

00:37:04,590 --> 00:37:09,510
whatever the user enters we want to -

00:37:06,990 --> 00:37:11,520
arise that or a class we may want to

00:37:09,510 --> 00:37:13,650
classify kind of make it that upper

00:37:11,520 --> 00:37:15,780
camel case right so we've got several

00:37:13,650 --> 00:37:17,790
helper functions that come with

00:37:15,780 --> 00:37:21,180
schematics that we can utilize in our

00:37:17,790 --> 00:37:23,430
templates and so here's how we might use

00:37:21,180 --> 00:37:26,160
that if we're gonna rename a file name

00:37:23,430 --> 00:37:29,490
we can use this double underscore syntax

00:37:26,160 --> 00:37:31,410
followed by the variable name in this

00:37:29,490 --> 00:37:33,630
case name so this would be same thing as

00:37:31,410 --> 00:37:35,430
underscore options name and then we can

00:37:33,630 --> 00:37:38,850
apply one of those string templates so

00:37:35,430 --> 00:37:40,800
we'll call the - rise method end it with

00:37:38,850 --> 00:37:43,490
a double underscore and then with the

00:37:40,800 --> 00:37:43,490
rest of the file name

00:37:43,890 --> 00:37:50,130
then inside of our schematic we can use

00:37:47,530 --> 00:37:52,900
the template method to pass these

00:37:50,130 --> 00:37:55,360
methods and variables to our template

00:37:52,900 --> 00:37:59,950
codes so that we can interpolate them in

00:37:55,360 --> 00:38:02,260
execute methods so we will use the

00:37:59,950 --> 00:38:04,000
template method followed by this object

00:38:02,260 --> 00:38:10,510
syntax and then we'll spread in the

00:38:04,000 --> 00:38:12,460
strings and our options and then after

00:38:10,510 --> 00:38:14,350
we do that right now you probably

00:38:12,460 --> 00:38:16,930
noticed when you did the last exercise

00:38:14,350 --> 00:38:18,850
that it just dropped the index.html file

00:38:16,930 --> 00:38:20,410
right in the root of our angular project

00:38:18,850 --> 00:38:22,570
and that's not where we want it to be

00:38:20,410 --> 00:38:24,940
right so schematics comes with a

00:38:22,570 --> 00:38:27,550
function called move so we can apply

00:38:24,940 --> 00:38:29,530
this rule called move and when you say

00:38:27,550 --> 00:38:31,090
hey let's use the template function

00:38:29,530 --> 00:38:32,620
first let's generate out a template

00:38:31,090 --> 00:38:34,540
let's swap and do the string

00:38:32,620 --> 00:38:37,000
interpolation is necessary and then

00:38:34,540 --> 00:38:39,850
after that I want to move this file into

00:38:37,000 --> 00:38:41,500
a particular location now obviously in

00:38:39,850 --> 00:38:44,410
this example on the slide we're kind of

00:38:41,500 --> 00:38:46,440
hard coding source app components you

00:38:44,410 --> 00:38:49,480
would want to either determine this

00:38:46,440 --> 00:38:51,550
using maybe perhaps the angler JSON file

00:38:49,480 --> 00:38:53,980
that says here's the default the the

00:38:51,550 --> 00:38:56,050
route of a source of a project or

00:38:53,980 --> 00:38:58,180
perhaps through user input but we're

00:38:56,050 --> 00:38:59,350
just gonna for today's demo or and for

00:38:58,180 --> 00:39:01,240
the sake of time we're just going to

00:38:59,350 --> 00:39:04,480
kind of hard code this for now

00:39:01,240 --> 00:39:06,700
I couldn't let's do an exercise together

00:39:04,480 --> 00:39:14,200
so let's go ahead and get started on

00:39:06,700 --> 00:39:16,780
exercise five oh good so I'm gonna pull

00:39:14,200 --> 00:39:19,030
up exercise 5 for the workshop first

00:39:16,780 --> 00:39:20,380
thing I need to do is I'm gonna clean

00:39:19,030 --> 00:39:22,660
everything make sure I get rid of all my

00:39:20,380 --> 00:39:26,260
changes that I had made previously and

00:39:22,660 --> 00:39:29,730
I'm gonna check out the move branch so

00:39:26,260 --> 00:39:34,030
let's do NPM run I am in the wrong

00:39:29,730 --> 00:39:36,790
window just go back to vs code NPM run

00:39:34,030 --> 00:39:42,850
clean and then I'm gonna do get check

00:39:36,790 --> 00:39:44,410
out force move good let's go ahead and

00:39:42,850 --> 00:39:47,110
add a prompt for the name so we've done

00:39:44,410 --> 00:39:50,950
this before so let's go to our schema

00:39:47,110 --> 00:39:53,040
JSON file and I don't want to code this

00:39:50,950 --> 00:39:57,000
all up that's too much work

00:39:53,040 --> 00:39:59,510
so let's just grab this code here you

00:39:57,000 --> 00:40:02,330
can go back to vs code I'm going to add

00:39:59,510 --> 00:40:06,740
the properties inside a schema dot JSON

00:40:02,330 --> 00:40:10,860
here's our name that we had from before

00:40:06,740 --> 00:40:13,770
and then I need to go inside of my

00:40:10,860 --> 00:40:16,080
collection JSON or up the schema I'm

00:40:13,770 --> 00:40:18,270
going to define the schema so I'm going

00:40:16,080 --> 00:40:21,570
to go up here for the schematic starter

00:40:18,270 --> 00:40:26,340
task and I'm gonna do schema and it's

00:40:21,570 --> 00:40:28,620
gonna be in schematic - starter and

00:40:26,340 --> 00:40:29,150
that's gonna be schema Dutch a saan okay

00:40:28,620 --> 00:40:31,560
good

00:40:29,150 --> 00:40:33,750
and then let's go over to our index dot

00:40:31,560 --> 00:40:34,860
TS file and the first thing we want to

00:40:33,750 --> 00:40:37,140
do is we're going to declare this

00:40:34,860 --> 00:40:39,690
interface I'm going to interface add

00:40:37,140 --> 00:40:42,890
files interface it's gonna have a name

00:40:39,690 --> 00:40:45,930
that's of type string update my options

00:40:42,890 --> 00:40:47,610
to use that new interface and now I'm

00:40:45,930 --> 00:40:49,710
going to be actually writing a rule so

00:40:47,610 --> 00:40:51,780
before remember our rules was just an

00:40:49,710 --> 00:40:53,670
empty array so now let's go ahead and

00:40:51,780 --> 00:40:55,710
use that template function to write a

00:40:53,670 --> 00:40:58,860
rule and we need to specify the options

00:40:55,710 --> 00:40:59,880
these are the string values and

00:40:58,860 --> 00:41:02,370
functions that are going to be available

00:40:59,880 --> 00:41:04,470
to use inside of either a file name or

00:41:02,370 --> 00:41:06,780
inside the template itself and I'm gonna

00:41:04,470 --> 00:41:09,780
spread out the strings that we imported

00:41:06,780 --> 00:41:12,630
from schematics up above as well as the

00:41:09,780 --> 00:41:14,310
options that the user entered after that

00:41:12,630 --> 00:41:16,320
I'm gonna use the move function I'm

00:41:14,310 --> 00:41:22,740
going to move our new file into source

00:41:16,320 --> 00:41:25,620
app components all right good let me go

00:41:22,740 --> 00:41:27,210
ahead and save that and now inside of

00:41:25,620 --> 00:41:29,850
the files directory rather than just

00:41:27,210 --> 00:41:31,380
generate out an index.html file let's

00:41:29,850 --> 00:41:32,730
just delete that and let's start

00:41:31,380 --> 00:41:35,280
generating out files that are

00:41:32,730 --> 00:41:36,690
dynamically named so I'm going to call

00:41:35,280 --> 00:41:39,000
this underscore underscore name

00:41:36,690 --> 00:41:41,250
that's that value that we received from

00:41:39,000 --> 00:41:46,770
the user and I want to - sure eyes this

00:41:41,250 --> 00:41:48,000
file name and due at - arised and

00:41:46,770 --> 00:41:53,520
underscore underscore that's kind of the

00:41:48,000 --> 00:41:55,260
syntax that we use dot component TS and

00:41:53,520 --> 00:41:58,770
i can create another one if i want maybe

00:41:55,260 --> 00:42:00,360
an HTML file so again you can see those

00:41:58,770 --> 00:42:03,420
file names underscore underscore name

00:42:00,360 --> 00:42:05,250
that was the user input at and then the

00:42:03,420 --> 00:42:06,880
function that we're gonna execute the

00:42:05,250 --> 00:42:10,420
string function called - rise

00:42:06,880 --> 00:42:15,880
and then component at TS let me go ahead

00:42:10,420 --> 00:42:22,299
and build this and let's go ahead and

00:42:15,880 --> 00:42:24,039
test this out now I get prompted enter

00:42:22,299 --> 00:42:25,839
the name of the component I'm gonna go

00:42:24,039 --> 00:42:28,509
with the default value which is ng -

00:42:25,839 --> 00:42:31,690
Kampf and we can see in our terminal

00:42:28,509 --> 00:42:33,490
that I created two files for us inside

00:42:31,690 --> 00:42:35,589
source app components remember that's

00:42:33,490 --> 00:42:38,579
where we move the files to now I've got

00:42:35,589 --> 00:42:42,609
ng cough and that's that - Erised name

00:42:38,579 --> 00:42:43,509
component HTML if I come over into my

00:42:42,609 --> 00:42:46,089
sandbox

00:42:43,509 --> 00:42:47,799
I'm just close all these files kind of

00:42:46,089 --> 00:42:49,809
go up into the sandbox I go to source

00:42:47,799 --> 00:42:57,789
app there's my components directory that

00:42:49,809 --> 00:42:58,779
was generated along with the files I say

00:42:57,789 --> 00:42:59,799
for the sake of time we've got like

00:42:58,779 --> 00:43:01,630
three minutes left

00:42:59,799 --> 00:43:03,069
why don't we real quickly just kind of

00:43:01,630 --> 00:43:05,079
skip to the next exercise people can

00:43:03,069 --> 00:43:07,029
work on this at their own pace later

00:43:05,079 --> 00:43:08,859
today or this evening and let's show

00:43:07,029 --> 00:43:13,769
what it would look like if we actually

00:43:08,859 --> 00:43:19,119
put some values inside of our file okay

00:43:13,769 --> 00:43:23,250
so I'm gonna check out strings oops did

00:43:19,119 --> 00:43:30,900
that again I'm going to do clean oops

00:43:23,250 --> 00:43:30,900
and let's do NPM check out force strings

00:43:37,790 --> 00:43:43,760
and we're gonna add a browser type

00:43:40,310 --> 00:43:48,470
option into our schema dot JSON you come

00:43:43,760 --> 00:43:53,270
over here and grab this I'm gonna add

00:43:48,470 --> 00:43:55,760
that in there and then let's go back

00:43:53,270 --> 00:43:59,140
into our index TS and I want to check

00:43:55,760 --> 00:44:08,920
that the user actually provided us with

00:43:59,140 --> 00:44:12,940
a name and I suppose being strings I

00:44:08,920 --> 00:44:12,940
think I checked out the wrong branch

00:44:13,240 --> 00:44:18,140
yeah there's like I'm on the wrong

00:44:15,860 --> 00:44:25,040
branch here man the secret command let's

00:44:18,140 --> 00:44:38,630
do check out strings let me clean that

00:44:25,040 --> 00:44:42,290
first okay oops yeah well I say we just

00:44:38,630 --> 00:44:44,510
stop it there we're out of time

00:44:42,290 --> 00:44:45,380
there's a couple more exercises I would

00:44:44,510 --> 00:44:47,480
certainly encourage you if you're

00:44:45,380 --> 00:44:49,880
interested in schematics check those out

00:44:47,480 --> 00:44:51,710
so we've got an exercise on strings as

00:44:49,880 --> 00:44:54,020
well as the chain function that allows

00:44:51,710 --> 00:44:57,680
you to chain together kind of multiple

00:44:54,020 --> 00:44:59,240
rules oh thanks and in there I would

00:44:57,680 --> 00:45:00,620
certainly encourage you to kind of

00:44:59,240 --> 00:45:02,600
continue with a couple those exercises

00:45:00,620 --> 00:45:04,790
if you have time Kevin and I are gonna

00:45:02,600 --> 00:45:06,170
be here if you see us in the hallway and

00:45:04,790 --> 00:45:08,150
you're running into a problem and you

00:45:06,170 --> 00:45:10,220
have a question grab us we'd love to

00:45:08,150 --> 00:45:11,480
talk with you about schematics and help

00:45:10,220 --> 00:45:13,310
you through maybe these last two

00:45:11,480 --> 00:45:15,140
exercises that we didn't have time to

00:45:13,310 --> 00:45:16,490
get to so thank you very much for your

00:45:15,140 --> 00:45:19,270
time and enjoy the rest of your

00:45:16,490 --> 00:45:19,270
conference thank you

00:45:21,500 --> 00:45:23,560
you

00:45:27,440 --> 00:45:34,170
[Music]

00:45:40,010 --> 00:45:42,070

YouTube URL: https://www.youtube.com/watch?v=X06tuCohJPQ


