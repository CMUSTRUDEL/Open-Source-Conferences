Title: NG Conf 2019 Day 3 CDK Is The Coolest Thing You Are Not Using With Jeremy Elbourn
Publication date: 2019-05-04
Playlist: ng-conf 2019
Description: 
	Hear the latest about Angular Material and the CDK. Hear about the future plans from the team about how to deliver great experiences for your users at scale.

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:07,920 --> 00:00:11,170
[Music]

00:00:11,870 --> 00:00:17,910
all right hello everybody welcome to the

00:00:15,690 --> 00:00:23,189
cdk is the coolest thing you are not

00:00:17,910 --> 00:00:25,619
using yet I am Jeremy el born i am the

00:00:23,189 --> 00:00:28,080
tech lead for angular cdk and angular

00:00:25,619 --> 00:00:29,699
material now most of you in this

00:00:28,080 --> 00:00:32,610
audience are probably familiar with

00:00:29,699 --> 00:00:33,840
angular material by now just in case

00:00:32,610 --> 00:00:36,390
there's some new people who aren't

00:00:33,840 --> 00:00:38,910
angular material is a project by the

00:00:36,390 --> 00:00:41,280
angular team to provide a suite of UI

00:00:38,910 --> 00:00:44,550
components based on Google's material

00:00:41,280 --> 00:00:48,210
design specification now I know though

00:00:44,550 --> 00:00:50,039
that many of you aren't using the CDK or

00:00:48,210 --> 00:00:53,370
some of you might not even know about it

00:00:50,039 --> 00:00:56,160
so C D K stands for component dev kit

00:00:53,370 --> 00:00:58,379
and it is a package of common

00:00:56,160 --> 00:01:00,539
foundations and patterns that you can

00:00:58,379 --> 00:01:03,660
use for building your own UI components

00:01:00,539 --> 00:01:06,510
the CD K is comprised of multiple

00:01:03,660 --> 00:01:09,780
capabilities ranging from accessibility

00:01:06,510 --> 00:01:13,680
and by directionality overlays platform

00:01:09,780 --> 00:01:15,869
detection tables trees and even some new

00:01:13,680 --> 00:01:19,170
stuff like track and drop and virtual

00:01:15,869 --> 00:01:21,570
scroll and we originally set out to make

00:01:19,170 --> 00:01:23,610
the CD K because we know more and more

00:01:21,570 --> 00:01:25,979
organizations are building their own

00:01:23,610 --> 00:01:28,350
design systems and their own Suites of

00:01:25,979 --> 00:01:29,670
components and we want people building

00:01:28,350 --> 00:01:31,590
those things to be able to take

00:01:29,670 --> 00:01:33,329
advantage of the work that we do in

00:01:31,590 --> 00:01:37,140
building common components for angular

00:01:33,329 --> 00:01:39,780
material and our team has really

00:01:37,140 --> 00:01:42,750
broadened our scope in our work in the

00:01:39,780 --> 00:01:45,090
CD K so if you've ever seen our github

00:01:42,750 --> 00:01:48,090
repository you've seen it's called

00:01:45,090 --> 00:01:50,310
angular material 2 and it was called

00:01:48,090 --> 00:01:52,740
this because when we started the project

00:01:50,310 --> 00:01:57,869
we were really focused on those material

00:01:52,740 --> 00:01:59,130
design components and over time we as I

00:01:57,869 --> 00:02:00,479
mentioned we brought at our scope and

00:01:59,130 --> 00:02:02,909
are working on kind of more things and

00:02:00,479 --> 00:02:05,610
that pesky 2 is in there and we always

00:02:02,909 --> 00:02:09,629
want to get rid of that pesky number 2

00:02:05,610 --> 00:02:12,989
so last week last Friday we actually

00:02:09,629 --> 00:02:13,800
changed the name of our repo to angular

00:02:12,989 --> 00:02:17,910
component

00:02:13,800 --> 00:02:22,830
and I'm hoping that this signals that we

00:02:17,910 --> 00:02:25,920
are taking on a broader set of work for

00:02:22,830 --> 00:02:28,590
our team to work not just on material

00:02:25,920 --> 00:02:31,140
design experiences but for any kind of

00:02:28,590 --> 00:02:33,990
tools that developers might need to

00:02:31,140 --> 00:02:35,400
build their own UI components and we've

00:02:33,990 --> 00:02:38,220
also changed the way we've talked about

00:02:35,400 --> 00:02:41,070
our team are part of the angular team

00:02:38,220 --> 00:02:42,540
for years we were considered the angular

00:02:41,070 --> 00:02:43,920
material team and that's how people

00:02:42,540 --> 00:02:45,990
talked about us that's how we talked

00:02:43,920 --> 00:02:48,510
about ourselves but we've actually

00:02:45,990 --> 00:02:49,890
changed that terminology in it we now

00:02:48,510 --> 00:02:52,950
refer to ourselves as the angular

00:02:49,890 --> 00:02:54,540
components team and I've actually been

00:02:52,950 --> 00:02:56,940
using that term over the last few days

00:02:54,540 --> 00:02:58,830
here at ng-conf and nobody's been

00:02:56,940 --> 00:03:00,870
confused when I said that so I think

00:02:58,830 --> 00:03:02,880
that's a good litmus test for people

00:03:00,870 --> 00:03:04,920
understanding like this is actually what

00:03:02,880 --> 00:03:07,170
we're doing I want to clarify that this

00:03:04,920 --> 00:03:09,540
does not affect our our packages or any

00:03:07,170 --> 00:03:12,210
of our api's we still have angular cdk

00:03:09,540 --> 00:03:13,950
and angular material on NPM this is just

00:03:12,210 --> 00:03:17,670
kind of more of an organizational thing

00:03:13,950 --> 00:03:19,920
that hopefully signals that we're trying

00:03:17,670 --> 00:03:23,610
to do more than just material design

00:03:19,920 --> 00:03:26,540
experiences and so in those efforts to

00:03:23,610 --> 00:03:29,940
make components easier to build and

00:03:26,540 --> 00:03:32,910
expand the features that we have last

00:03:29,940 --> 00:03:34,980
year at ng-conf I I talked about this is

00:03:32,910 --> 00:03:37,080
what we were going to be doing in the

00:03:34,980 --> 00:03:40,140
future right here while I was standing

00:03:37,080 --> 00:03:42,300
right here I said we were going to work

00:03:40,140 --> 00:03:45,060
on some drag and drop features virtual

00:03:42,300 --> 00:03:47,160
scrolling features and more enhancements

00:03:45,060 --> 00:03:49,920
to our data table and I don't want to

00:03:47,160 --> 00:03:52,800
brag but we totally did all of those

00:03:49,920 --> 00:03:54,780
things and I want to show off

00:03:52,800 --> 00:03:57,090
specifically some of the drag and drop

00:03:54,780 --> 00:03:59,880
features that we've added over the last

00:03:57,090 --> 00:04:02,459
year and what better way to do that than

00:03:59,880 --> 00:04:05,100
with some live coding which is so much

00:04:02,459 --> 00:04:07,290
more exciting than looking at slides so

00:04:05,100 --> 00:04:10,410
I'm gonna pop over to webstorm here and

00:04:07,290 --> 00:04:12,390
I have a totally empty angular CLI

00:04:10,410 --> 00:04:14,310
project that I have created

00:04:12,390 --> 00:04:17,730
it has nothing in it all I've done so

00:04:14,310 --> 00:04:20,790
far is installed angular cdk because I'm

00:04:17,730 --> 00:04:25,220
not installing NPM packages onstage and

00:04:20,790 --> 00:04:28,580
so I am going to just go ahead and

00:04:25,220 --> 00:04:31,700
add some CSS because nobody wants to see

00:04:28,580 --> 00:04:33,530
me write CSS on screen on stage so this

00:04:31,700 --> 00:04:35,210
is some pre-made demo CSS I made I'm

00:04:33,530 --> 00:04:37,640
just popping that in there and now I'm

00:04:35,210 --> 00:04:39,590
gonna go ahead and start adding the code

00:04:37,640 --> 00:04:41,930
so the first thing I'm gonna do is come

00:04:39,590 --> 00:04:45,590
into my ng module and I'm gonna add the

00:04:41,930 --> 00:04:46,880
drag drop module from angular cdk so

00:04:45,590 --> 00:04:49,670
we've got that we have all of our

00:04:46,880 --> 00:04:52,490
directives available to us now and with

00:04:49,670 --> 00:04:54,680
that I'm going to pop over into my

00:04:52,490 --> 00:04:55,820
component template here and I'm gonna

00:04:54,680 --> 00:04:58,970
start off with something really simple

00:04:55,820 --> 00:05:01,490
I'm just gonna add a div and I'm gonna

00:04:58,970 --> 00:05:05,000
give that a class of example drag and

00:05:01,490 --> 00:05:07,730
then I am going to just almost did div

00:05:05,000 --> 00:05:10,160
at one directive cdk drag that's it

00:05:07,730 --> 00:05:14,930
nothing else and so now I'm gonna come

00:05:10,160 --> 00:05:17,300
over to my browser which has gone

00:05:14,930 --> 00:05:24,220
somewhere there it is I'm going to

00:05:17,300 --> 00:05:28,690
fullscreen that real quick there it was

00:05:24,220 --> 00:05:30,890
enter full screen okay there is my

00:05:28,690 --> 00:05:32,510
angular app being served I have this

00:05:30,890 --> 00:05:34,490
green div that I just added here and I

00:05:32,510 --> 00:05:36,110
can drag that around that's great so all

00:05:34,490 --> 00:05:37,760
I had to do is put that one directive on

00:05:36,110 --> 00:05:40,730
that div and I can start free dragging

00:05:37,760 --> 00:05:42,830
it however I could just drag that right

00:05:40,730 --> 00:05:45,380
off the screen and I don't really like

00:05:42,830 --> 00:05:48,530
that so I'm gonna go back here and I'm

00:05:45,380 --> 00:05:51,530
gonna add bounds for this dragonball so

00:05:48,530 --> 00:05:55,300
I'm gonna add a div here that is a

00:05:51,530 --> 00:05:58,160
bounding box and I'm gonna wrap my

00:05:55,300 --> 00:06:02,270
dragged a ball in that and then I'm

00:05:58,160 --> 00:06:04,850
going to add an input onto my cdk

00:06:02,270 --> 00:06:07,250
dragged directive here that is cdk

00:06:04,850 --> 00:06:09,710
dragged boundary and i need to assign

00:06:07,250 --> 00:06:11,030
this to this bounding box I want to use

00:06:09,710 --> 00:06:14,630
and so what I'm going to do here is add

00:06:11,030 --> 00:06:17,000
an ID call bounds on that and then I can

00:06:14,630 --> 00:06:20,540
give a CSS selector here so I'm gonna

00:06:17,000 --> 00:06:24,650
give pounds and when I come back to my

00:06:20,540 --> 00:06:26,630
browser now there is this red dotted

00:06:24,650 --> 00:06:31,370
bounding box here and if I try to drag

00:06:26,630 --> 00:06:33,410
the green box out it does not let me so

00:06:31,370 --> 00:06:37,610
that's pretty cool and there's a lot I

00:06:33,410 --> 00:06:38,150
can do with this free dragging if I pop

00:06:37,610 --> 00:06:40,700
a

00:06:38,150 --> 00:06:43,160
my autocomplete here you can see I have

00:06:40,700 --> 00:06:46,790
all sorts of events for like drag moved

00:06:43,160 --> 00:06:49,430
drag enter drag exit drop I can lock my

00:06:46,790 --> 00:06:51,560
draggable to a certain axis but

00:06:49,430 --> 00:06:53,750
ultimately this free dragging is of

00:06:51,560 --> 00:06:55,700
limited usefulness there's not that many

00:06:53,750 --> 00:06:57,500
situations where you want to use it most

00:06:55,700 --> 00:06:59,630
of the time you want to have some kind

00:06:57,500 --> 00:07:01,700
of dropped zone or you want to have some

00:06:59,630 --> 00:07:03,020
list your reordering or moving items and

00:07:01,700 --> 00:07:05,330
so I'm gonna show off some of that

00:07:03,020 --> 00:07:08,150
instead so I'm gonna get rid of all that

00:07:05,330 --> 00:07:10,400
pop back to my component code and I'm

00:07:08,150 --> 00:07:12,410
gonna go ahead and add the most cliche

00:07:10,400 --> 00:07:14,780
thing a to-do list

00:07:12,410 --> 00:07:18,680
and so I made some to-do items here that

00:07:14,780 --> 00:07:21,530
I really need to get these done soon my

00:07:18,680 --> 00:07:24,500
time is really running out so I'm gonna

00:07:21,530 --> 00:07:26,270
go back to my template now and add a

00:07:24,500 --> 00:07:32,060
little bit of UI for these to-do items

00:07:26,270 --> 00:07:36,050
so just a little example list and some

00:07:32,060 --> 00:07:38,540
example items we're gonna call those

00:07:36,050 --> 00:07:42,410
example box and then we're gonna repeat

00:07:38,540 --> 00:07:46,730
our items with an NG for so I say let t

00:07:42,410 --> 00:07:49,940
of to do enter in our to-do items and

00:07:46,730 --> 00:07:51,080
there's our to-do items so these are all

00:07:49,940 --> 00:07:53,450
the things I have to do but I haven't

00:07:51,080 --> 00:07:55,220
added any interaction yet so let's go

00:07:53,450 --> 00:07:58,540
ahead and add some interaction I'm just

00:07:55,220 --> 00:08:02,390
going to add two directives here CDK

00:07:58,540 --> 00:08:06,700
drop list on my list and I'm gonna add

00:08:02,390 --> 00:08:06,700
on each item cdk drag

00:08:07,390 --> 00:08:12,920
so the cdk drag directive says hey this

00:08:10,850 --> 00:08:15,530
is an item in this track list and a

00:08:12,920 --> 00:08:17,810
trackable and this drop list treats this

00:08:15,530 --> 00:08:20,240
whole list as one drop zone with

00:08:17,810 --> 00:08:22,520
knowledge that there are list items in

00:08:20,240 --> 00:08:24,530
here that can be reordered or moved

00:08:22,520 --> 00:08:27,590
around and so if I go back to my browser

00:08:24,530 --> 00:08:29,300
now I can pick up one of these items and

00:08:27,590 --> 00:08:31,520
start dragging it and you can see it

00:08:29,300 --> 00:08:33,320
leaves a space where that item was and

00:08:31,520 --> 00:08:36,470
as I move it through the list the items

00:08:33,320 --> 00:08:38,660
shuffle around and make space for it but

00:08:36,470 --> 00:08:40,820
when I drop this item you're going to

00:08:38,660 --> 00:08:42,800
see that it doesn't actually persist

00:08:40,820 --> 00:08:46,310
when I drop it it goes back to where it

00:08:42,800 --> 00:08:49,190
was why is this so the directives don't

00:08:46,310 --> 00:08:52,220
actually know anything about your data I

00:08:49,190 --> 00:08:53,780
in ng4 to render these out and the

00:08:52,220 --> 00:08:57,770
directives don't know anything about

00:08:53,780 --> 00:08:59,660
where your data lives or how its

00:08:57,770 --> 00:09:01,670
structured you could be using just an

00:08:59,660 --> 00:09:03,650
array in your component like I am or you

00:09:01,670 --> 00:09:07,250
could be using something like an NG rx

00:09:03,650 --> 00:09:09,500
store and it's up to the application to

00:09:07,250 --> 00:09:11,710
perform updates to that data so in order

00:09:09,500 --> 00:09:15,290
to do that I'm going to add an event to

00:09:11,710 --> 00:09:17,690
this drop list called cdk droplets

00:09:15,290 --> 00:09:20,270
dropped and I'm gonna just in create a

00:09:17,690 --> 00:09:23,150
new function called drop and I'm gonna

00:09:20,270 --> 00:09:28,640
pass it this event and so now I'm gonna

00:09:23,150 --> 00:09:31,790
go implement that I'll say drop and this

00:09:28,640 --> 00:09:36,260
is going to take in an event of type cdk

00:09:31,790 --> 00:09:39,980
drag drop which is generic for the type

00:09:36,260 --> 00:09:42,020
of data that I'm dealing with and so all

00:09:39,980 --> 00:09:45,020
I want to do here is shuffle the items

00:09:42,020 --> 00:09:48,620
around in my array so fortunately there

00:09:45,020 --> 00:09:51,080
is a helper function in CDI drug drop

00:09:48,620 --> 00:09:52,700
called move item in array so I'm going

00:09:51,080 --> 00:09:55,160
to go ahead and use that I'm gonna pass

00:09:52,700 --> 00:09:57,110
it this dot to do and from my event I'm

00:09:55,160 --> 00:09:59,480
going to get the previous index where

00:09:57,110 --> 00:10:02,690
the item came from and the current index

00:09:59,480 --> 00:10:04,700
where the item is going and so now when

00:10:02,690 --> 00:10:07,370
I pop back over to my browser I can

00:10:04,700 --> 00:10:12,340
slide these items around and I can drop

00:10:07,370 --> 00:10:12,340
one and there it stays so

00:10:17,189 --> 00:10:20,730
and so all of that was just by adding

00:10:18,930 --> 00:10:23,699
these two directives in this event to

00:10:20,730 --> 00:10:25,529
update my data so great I can move my

00:10:23,699 --> 00:10:27,689
to-do items around but I don't have any

00:10:25,529 --> 00:10:30,389
way to say that they're done so let's go

00:10:27,689 --> 00:10:32,699
ahead and do that so I'm gonna come here

00:10:30,389 --> 00:10:35,370
and add another list here called done

00:10:32,699 --> 00:10:37,769
and it just has one thing in it so far

00:10:35,370 --> 00:10:40,680
and that is get dressed which is really

00:10:37,769 --> 00:10:42,779
all I've managed to do today and I'm

00:10:40,680 --> 00:10:44,579
gonna come back to my template here and

00:10:42,779 --> 00:10:48,449
I'm just gonna duplicate that whole

00:10:44,579 --> 00:10:51,300
thing and change to do to done so now if

00:10:48,449 --> 00:10:54,779
I come to my browser I can still

00:10:51,300 --> 00:10:58,050
rearrange my items in my list but if I

00:10:54,779 --> 00:10:59,819
try to drag an item over here it doesn't

00:10:58,050 --> 00:11:01,620
do anything I can't move these items

00:10:59,819 --> 00:11:05,100
between is less and this is because I

00:11:01,620 --> 00:11:07,230
have to connect these to drop lists to

00:11:05,100 --> 00:11:10,980
each other so that they know that they

00:11:07,230 --> 00:11:13,829
can interact and so the easiest way to

00:11:10,980 --> 00:11:17,629
connect these to drop lists is to wrap

00:11:13,829 --> 00:11:20,579
them inside of a cdk drop list group and

00:11:17,629 --> 00:11:21,959
if I had another element here I would

00:11:20,579 --> 00:11:24,269
just put that directive on that element

00:11:21,959 --> 00:11:25,769
but I don't have another element here so

00:11:24,269 --> 00:11:28,319
I'm just gonna add an NG container

00:11:25,769 --> 00:11:30,899
around this whole thing because I don't

00:11:28,319 --> 00:11:35,309
want a real Dom element and I'm gonna

00:11:30,899 --> 00:11:37,379
add cdk drop list group and so any cdk

00:11:35,309 --> 00:11:39,660
drop list inside of this group will

00:11:37,379 --> 00:11:40,980
automatically be connected there are

00:11:39,660 --> 00:11:43,379
more specific ways to connect these

00:11:40,980 --> 00:11:46,079
lists but for demo purposes this does

00:11:43,379 --> 00:11:48,149
what we need it to and so now if I go

00:11:46,079 --> 00:11:50,250
back to my browser you'll see I can

00:11:48,149 --> 00:11:52,019
actually drag an item from here and

00:11:50,250 --> 00:11:54,209
while these still sarff all around I can

00:11:52,019 --> 00:11:56,730
move over here and there's some space

00:11:54,209 --> 00:12:00,029
for my new item but when I drop this

00:11:56,730 --> 00:12:02,579
we're gonna see a problem I drop it it

00:12:00,029 --> 00:12:04,350
goes right back not to where it was but

00:12:02,579 --> 00:12:06,839
even a different place in the other list

00:12:04,350 --> 00:12:08,819
we don't want that but it's pretty

00:12:06,839 --> 00:12:11,040
obvious why that's happening our drop

00:12:08,819 --> 00:12:12,929
handler here is just doing move item in

00:12:11,040 --> 00:12:15,779
array it assumes we're always using the

00:12:12,929 --> 00:12:17,730
same list and now that we're moving

00:12:15,779 --> 00:12:20,730
items between arrays we have to have a

00:12:17,730 --> 00:12:24,420
little bit smarter logic so we need to

00:12:20,730 --> 00:12:27,600
check in our event object we say if

00:12:24,420 --> 00:12:29,610
event dot previous container so that's

00:12:27,600 --> 00:12:32,579
our that container is our drop list

00:12:29,610 --> 00:12:35,970
is equal to the event that the current

00:12:32,579 --> 00:12:39,149
container then we want to continue doing

00:12:35,970 --> 00:12:42,209
move item and array and if it's not in

00:12:39,149 --> 00:12:44,160
the same we want to transfer the items

00:12:42,209 --> 00:12:46,019
between array and fortunately we have

00:12:44,160 --> 00:12:48,600
another helper function for that so

00:12:46,019 --> 00:12:51,480
transfer transfer array item also coming

00:12:48,600 --> 00:12:54,209
from cdk drag drop and we need to pass

00:12:51,480 --> 00:12:56,040
this the data for the arrays we're

00:12:54,209 --> 00:12:57,329
moving items between but there's one

00:12:56,040 --> 00:12:59,370
more thing we need before we actually

00:12:57,329 --> 00:13:02,130
have the information we can pass this

00:12:59,370 --> 00:13:03,990
function we need to know which list is

00:13:02,130 --> 00:13:07,860
our data coming from and which one is it

00:13:03,990 --> 00:13:09,230
going to and so we can have that data by

00:13:07,860 --> 00:13:12,089
going back to our template here and

00:13:09,230 --> 00:13:16,200
associating the data with each drop list

00:13:12,089 --> 00:13:19,860
so our to-do list here I'm gonna add a

00:13:16,200 --> 00:13:21,930
binding on CD K drop list data for it to

00:13:19,860 --> 00:13:27,000
do and I'm going to do the same thing

00:13:21,930 --> 00:13:28,769
for my done list with our done items and

00:13:27,000 --> 00:13:31,800
what this is lets you do is associate

00:13:28,769 --> 00:13:34,170
any arbitrary data with your drop list

00:13:31,800 --> 00:13:37,589
so that when your events are trigger you

00:13:34,170 --> 00:13:39,870
can consume that data and make changes

00:13:37,589 --> 00:13:42,390
to the behavior of your program based on

00:13:39,870 --> 00:13:45,120
what you're getting so now we can come

00:13:42,390 --> 00:13:49,140
back here and we're gonna call transfer

00:13:45,120 --> 00:13:51,329
array item with our event the previous

00:13:49,140 --> 00:13:55,320
container the data which is going to be

00:13:51,329 --> 00:13:58,769
our array we're going to transfer to our

00:13:55,320 --> 00:14:01,079
event current container data and then we

00:13:58,769 --> 00:14:03,180
just need to give the indices for where

00:14:01,079 --> 00:14:07,500
those items are going to sit so that's

00:14:03,180 --> 00:14:11,190
event dot previous index and event dot

00:14:07,500 --> 00:14:14,430
current index and now we pop back over

00:14:11,190 --> 00:14:18,829
to our browser and when I drag slides

00:14:14,430 --> 00:14:18,829
over here to my done list it stays

00:14:23,510 --> 00:14:29,910
and I can move items back and all of

00:14:27,329 --> 00:14:32,279
this was just we added the directives

00:14:29,910 --> 00:14:35,640
our drop list we added our drag we add

00:14:32,279 --> 00:14:37,709
an event to update our data once item is

00:14:35,640 --> 00:14:40,620
dropped and we associated some data with

00:14:37,709 --> 00:14:42,660
the drop list so there's a lot more

00:14:40,620 --> 00:14:45,390
settings and a lot more configuration

00:14:42,660 --> 00:14:47,640
and features for all of the cdk drag

00:14:45,390 --> 00:14:49,140
drop I don't have time to show them all

00:14:47,640 --> 00:14:52,980
off today so I'm going to end it there

00:14:49,140 --> 00:14:54,930
and pop back to my slides so before I

00:14:52,980 --> 00:14:56,820
wrap up I did want to spend a little bit

00:14:54,930 --> 00:14:58,890
time today talking about angular

00:14:56,820 --> 00:15:02,550
material itself even though I know this

00:14:58,890 --> 00:15:05,339
talk is about the cdk even though we've

00:15:02,550 --> 00:15:07,410
changed our team name angular material

00:15:05,339 --> 00:15:09,930
is still obviously a huge part of what

00:15:07,410 --> 00:15:11,880
we're working on every day and I wanted

00:15:09,930 --> 00:15:15,029
to talk about one particular thing we're

00:15:11,880 --> 00:15:19,110
doing in the near future and it involves

00:15:15,029 --> 00:15:21,269
this other library called MDC web this

00:15:19,110 --> 00:15:24,060
is an open source library that is

00:15:21,269 --> 00:15:26,930
created by the material design team at

00:15:24,060 --> 00:15:29,810
Google and it provides a set of

00:15:26,930 --> 00:15:32,820
primitives that can be used to compose

00:15:29,810 --> 00:15:35,010
material design components and when I

00:15:32,820 --> 00:15:37,500
say primitives I'm talking about CSS and

00:15:35,010 --> 00:15:39,300
JavaScript assets and we've been

00:15:37,500 --> 00:15:40,890
collaborating with the material design

00:15:39,300 --> 00:15:42,750
team over the last several months to

00:15:40,890 --> 00:15:44,490
find out how we can take the efforts

00:15:42,750 --> 00:15:45,959
that they've put into their library and

00:15:44,490 --> 00:15:48,930
the efforts we've put into our library

00:15:45,959 --> 00:15:51,480
and work together more closely and so

00:15:48,930 --> 00:15:54,390
we're today our package structure looks

00:15:51,480 --> 00:15:55,560
something like this where angular CDK is

00:15:54,390 --> 00:15:57,660
the foundation for angular material

00:15:55,560 --> 00:16:00,390
which is then consumed in applications

00:15:57,660 --> 00:16:04,290
going forward it will look something

00:16:00,390 --> 00:16:06,269
like this angular cdk provides behaviors

00:16:04,290 --> 00:16:07,980
while MVC web provides some building

00:16:06,269 --> 00:16:11,279
blocks that will go into composing

00:16:07,980 --> 00:16:13,110
components into angular material this is

00:16:11,279 --> 00:16:14,699
going to give us a number of benefits so

00:16:13,110 --> 00:16:17,160
first of all there's going to be a very

00:16:14,699 --> 00:16:20,040
consistent material design experience

00:16:17,160 --> 00:16:21,720
for everybody using both MVC web and

00:16:20,040 --> 00:16:23,699
other form factors and in angular

00:16:21,720 --> 00:16:25,949
material because it's created by the

00:16:23,699 --> 00:16:28,079
material design team they care very much

00:16:25,949 --> 00:16:29,850
about it being on spec and staying

00:16:28,079 --> 00:16:32,069
up-to-date with the latest changes to

00:16:29,850 --> 00:16:32,710
material design there's going to be less

00:16:32,069 --> 00:16:35,410
duplic

00:16:32,710 --> 00:16:37,570
of effort so the material design team

00:16:35,410 --> 00:16:39,640
gets to focus on those really

00:16:37,570 --> 00:16:42,010
nitty-gritty CSS details and Bezier

00:16:39,640 --> 00:16:44,620
curves while the angular team gets to

00:16:42,010 --> 00:16:48,010
focus on doing cool new angular stuff

00:16:44,620 --> 00:16:50,680
and we're making sure that we have the

00:16:48,010 --> 00:16:53,020
same angular api's and the same angular

00:16:50,680 --> 00:16:55,209
features so if you're using matte check

00:16:53,020 --> 00:16:57,640
box it's going to stay the same matte

00:16:55,209 --> 00:17:00,250
check box API same inputs same type

00:16:57,640 --> 00:17:01,600
script api's the internals of the

00:17:00,250 --> 00:17:03,250
component will change a little bit the

00:17:01,600 --> 00:17:04,569
CSS will be a little bit different the

00:17:03,250 --> 00:17:07,120
Dom structure is going to change a bit

00:17:04,569 --> 00:17:08,740
but you're going to get a bunch of

00:17:07,120 --> 00:17:13,030
benefits from more people working on

00:17:08,740 --> 00:17:14,620
this we have an early preview of some of

00:17:13,030 --> 00:17:16,689
these components right now in our

00:17:14,620 --> 00:17:18,459
material experimental package that

00:17:16,689 --> 00:17:21,579
Stephan talked about this morning during

00:17:18,459 --> 00:17:24,040
the keynote we have button checkbox menu

00:17:21,579 --> 00:17:25,600
and slide toggle available for people to

00:17:24,040 --> 00:17:28,420
try out and give us some feedback

00:17:25,600 --> 00:17:30,790
obviously this package has experimental

00:17:28,420 --> 00:17:33,250
in the name so it's not stable it's not

00:17:30,790 --> 00:17:34,690
production ready it's not final but we'd

00:17:33,250 --> 00:17:36,309
like to get feedback based on the

00:17:34,690 --> 00:17:38,530
direction we're going from the community

00:17:36,309 --> 00:17:42,480
you can find instructions for how to use

00:17:38,530 --> 00:17:46,030
these in the readme for this package you

00:17:42,480 --> 00:17:48,730
can see that we have some check boxes

00:17:46,030 --> 00:17:51,040
here this is the matte check box we have

00:17:48,730 --> 00:17:55,630
today and then we can compare that to

00:17:51,040 --> 00:17:58,809
the MDC base check box they look almost

00:17:55,630 --> 00:18:01,000
identical but there are some very small

00:17:58,809 --> 00:18:05,200
subtle changes there's a little bit

00:18:01,000 --> 00:18:08,200
different spacing and this is a little

00:18:05,200 --> 00:18:10,270
bit more on spec for material design and

00:18:08,200 --> 00:18:12,880
so we're really excited about how this

00:18:10,270 --> 00:18:15,340
is going to evolve and provide a better

00:18:12,880 --> 00:18:18,670
experience for material design over the

00:18:15,340 --> 00:18:20,530
future so that's all I have time for

00:18:18,670 --> 00:18:22,720
today thank you so much for coming

00:18:20,530 --> 00:18:24,910
you can find more information about the

00:18:22,720 --> 00:18:27,640
components material and cdk at material

00:18:24,910 --> 00:18:29,410
angular2 io our github repository is

00:18:27,640 --> 00:18:32,020
angular slash components and you can

00:18:29,410 --> 00:18:34,390
find these slides at GCO /ng slash

00:18:32,020 --> 00:18:36,160
conflate teen - components - slides and

00:18:34,390 --> 00:18:36,780
thank you again for coming

00:18:36,160 --> 00:18:39,839
[Applause]

00:18:36,780 --> 00:18:39,839
[Music]

00:18:44,430 --> 00:18:51,049
[Music]

00:18:56,650 --> 00:18:58,710

YouTube URL: https://www.youtube.com/watch?v=4EXQKP-Sihw


