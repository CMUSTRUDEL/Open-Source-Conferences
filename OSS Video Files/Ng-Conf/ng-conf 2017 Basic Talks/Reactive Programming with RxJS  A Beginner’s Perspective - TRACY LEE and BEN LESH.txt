Title: Reactive Programming with RxJS  A Beginnerâ€™s Perspective - TRACY LEE and BEN LESH
Publication date: 2017-04-30
Playlist: ng-conf 2017 Basic Talks
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,000 --> 00:00:10,730
I bet oh great yeah hi Ben har I feel

00:00:09,059 --> 00:00:12,809
like we always start off our

00:00:10,730 --> 00:00:13,679
conversations with hi Ben yeah sometimes

00:00:12,809 --> 00:00:17,210
it's a tie-pin

00:00:13,679 --> 00:00:19,619
yeah okay so we're onstage together and

00:00:17,210 --> 00:00:22,350
usually when we're onstage people expect

00:00:19,619 --> 00:00:24,359
us to dance or sing or something well

00:00:22,350 --> 00:00:26,490
I'm not dancing after that no way how

00:00:24,359 --> 00:00:29,990
about singing I don't know what if I

00:00:26,490 --> 00:00:33,600
just start like just a small town girl

00:00:29,990 --> 00:00:35,579
living in an RX world there yeah all

00:00:33,600 --> 00:00:38,460
right we satisfied our needs for singing

00:00:35,579 --> 00:00:40,920
on stage we scared this monkey yes

00:00:38,460 --> 00:00:42,450
actually the reason the mic is on there

00:00:40,920 --> 00:00:45,149
is because I'm about to show a really

00:00:42,450 --> 00:00:47,480
scary picture to the audience can you

00:00:45,149 --> 00:00:51,350
want to close your eyes or scare it okay

00:00:47,480 --> 00:00:54,719
this is me LearningRx gs1 first time

00:00:51,350 --> 00:00:57,510
most painful and so this was after four

00:00:54,719 --> 00:00:59,760
hours of me and Ben pairing together I'm

00:00:57,510 --> 00:01:03,570
at a coffee shop it was really painful I

00:00:59,760 --> 00:01:04,920
don't know why you're so happy but I'm

00:01:03,570 --> 00:01:06,900
sure many of you in the audience have

00:01:04,920 --> 00:01:09,000
had a similar experience right learning

00:01:06,900 --> 00:01:11,549
arts dance is really hard but once you

00:01:09,000 --> 00:01:16,380
get it and mastered it's amazing right

00:01:11,549 --> 00:01:18,290
so yeah so one of the reasons why we did

00:01:16,380 --> 00:01:21,750
this was because I didn't have my been

00:01:18,290 --> 00:01:23,909
doc with me just when I wanted to use

00:01:21,750 --> 00:01:25,500
our tails with angular so I couldn't

00:01:23,909 --> 00:01:26,729
find the right docs I actually had to

00:01:25,500 --> 00:01:28,860
look on the internet and I didn't know

00:01:26,729 --> 00:01:30,299
if it was four or five I didn't know

00:01:28,860 --> 00:01:32,189
what operators did cuz you weren't

00:01:30,299 --> 00:01:34,110
telling me which operators to use I

00:01:32,189 --> 00:01:35,520
didn't know how to wrap api's and

00:01:34,110 --> 00:01:38,340
observables which is what I really

00:01:35,520 --> 00:01:39,869
wanted to do and remember when my code

00:01:38,340 --> 00:01:43,290
was perfect it was perfect it looked

00:01:39,869 --> 00:01:47,009
really our code it looks perfect yeah I

00:01:43,290 --> 00:01:50,070
forgot to subscribe so back to the pain

00:01:47,009 --> 00:01:52,020
of learning rxjs for the first time my

00:01:50,070 --> 00:01:53,970
name is Tracey you can find me on

00:01:52,020 --> 00:01:55,500
twitter at lady Li and this is why we're

00:01:53,970 --> 00:01:57,119
here we're giving you a beginner and an

00:01:55,500 --> 00:01:59,610
expert's perspective on learning arts

00:01:57,119 --> 00:02:01,770
jazz I'm also a Google developer expert

00:01:59,610 --> 00:02:03,119
co-founder of this salt lab and I

00:02:01,770 --> 00:02:06,240
learned arts justice a few months ago

00:02:03,119 --> 00:02:08,489
yeah my name is Ben Lesh you can find me

00:02:06,240 --> 00:02:10,770
at been lashed on Twitter I am a

00:02:08,489 --> 00:02:12,420
software engineer now at Google I used

00:02:10,770 --> 00:02:13,050
to work at Netflix a lot of people might

00:02:12,420 --> 00:02:15,420
have done

00:02:13,050 --> 00:02:18,240
for that and I am the Ark cs5 Project

00:02:15,420 --> 00:02:21,810
Lead cool so this is what we usually

00:02:18,240 --> 00:02:23,790
look like on stage but I didn't bring

00:02:21,810 --> 00:02:27,030
the banana but I do have a banana we

00:02:23,790 --> 00:02:28,380
have a banana which we'll use later but

00:02:27,030 --> 00:02:29,820
first things first let's get into this

00:02:28,380 --> 00:02:31,890
awesome talk we're going to talk about

00:02:29,820 --> 00:02:35,300
how to create an observable today best

00:02:31,890 --> 00:02:38,040
practices for using and importing arcgis

00:02:35,300 --> 00:02:39,990
how to choose operators and where to

00:02:38,040 --> 00:02:42,480
find the docs right we also are going to

00:02:39,990 --> 00:02:44,700
try to talk about how to avoid unwanted

00:02:42,480 --> 00:02:47,820
subscriptions how to wrap an API that's

00:02:44,700 --> 00:02:50,160
a little unfamiliar and the benefits of

00:02:47,820 --> 00:02:53,280
same shape Innes which Tracy likes to

00:02:50,160 --> 00:02:54,600
call shame shame shape admission

00:02:53,280 --> 00:02:57,000
everything properly it's a bit of a

00:02:54,600 --> 00:02:58,590
tongue twister so this is the most basic

00:02:57,000 --> 00:03:00,210
way to create an e observable all we're

00:02:58,590 --> 00:03:02,160
doing here is we're using the observable

00:03:00,210 --> 00:03:04,020
constructor we're giving it a function

00:03:02,160 --> 00:03:06,540
which gives us an observer once we

00:03:04,020 --> 00:03:08,250
actually subscribe to it and the great

00:03:06,540 --> 00:03:10,500
part about observers is that they have

00:03:08,250 --> 00:03:12,600
methods next error and complete on them

00:03:10,500 --> 00:03:15,210
so that you can emit values from your

00:03:12,600 --> 00:03:16,620
observable right so one point of

00:03:15,210 --> 00:03:18,060
confusion for a lot of beginners in a

00:03:16,620 --> 00:03:20,610
point of confusion for Tracy when she

00:03:18,060 --> 00:03:22,410
started out was that she would see this

00:03:20,610 --> 00:03:24,360
observable from event observable of

00:03:22,410 --> 00:03:27,930
observable from and all these other ways

00:03:24,360 --> 00:03:30,209
of creating observables and how it

00:03:27,930 --> 00:03:31,500
doesn't look like what I know under the

00:03:30,209 --> 00:03:33,239
hood every single one of those actually

00:03:31,500 --> 00:03:35,670
uses the observable observable

00:03:33,239 --> 00:03:37,140
constructor if you're not sure how it'll

00:03:35,670 --> 00:03:39,060
create an observable use the observable

00:03:37,140 --> 00:03:40,590
constructor it's fine but there's lots

00:03:39,060 --> 00:03:43,530
and lots of ways to create observables

00:03:40,590 --> 00:03:45,450
with Arceus helpers the - all I'd like

00:03:43,530 --> 00:03:47,880
to call out would be as Irbil of and

00:03:45,450 --> 00:03:50,580
observable from observable from is what

00:03:47,880 --> 00:03:51,959
you use actually to convert a promise or

00:03:50,580 --> 00:03:53,820
an interval or something like that to an

00:03:51,959 --> 00:03:54,750
observable those I'd like to point out

00:03:53,820 --> 00:03:56,730
because they're actually part of the

00:03:54,750 --> 00:03:58,530
tc39 proposal and they'll ship with most

00:03:56,730 --> 00:04:01,290
versions of observable that you'll see

00:03:58,530 --> 00:04:03,450
these days cool so we thought the best

00:04:01,290 --> 00:04:04,880
way to talk about RHS is to create a

00:04:03,450 --> 00:04:07,709
pineap--

00:04:04,880 --> 00:04:09,600
things fun right it's a great

00:04:07,709 --> 00:04:11,160
application of our skills that was a

00:04:09,600 --> 00:04:11,670
good fun then I couldn't have done

00:04:11,160 --> 00:04:14,160
better

00:04:11,670 --> 00:04:16,049
so this has a simple text input in it

00:04:14,160 --> 00:04:18,120
where you can type in searching for puns

00:04:16,049 --> 00:04:20,130
and there's also this really cool listen

00:04:18,120 --> 00:04:22,140
button so we can click on it and we next

00:04:20,130 --> 00:04:23,020
can actually tell the app what times we

00:04:22,140 --> 00:04:24,789
want

00:04:23,020 --> 00:04:26,229
of all the ridiculous apps I've made you

00:04:24,789 --> 00:04:28,630
build with me this is your favorite

00:04:26,229 --> 00:04:30,340
right now this is a lot of fun so we're

00:04:28,630 --> 00:04:32,169
using the latest versions of angular to

00:04:30,340 --> 00:04:32,919
build this and the latest version of

00:04:32,169 --> 00:04:37,030
rxjs

00:04:32,919 --> 00:04:39,970
5.3 Oh today she asked me today too

00:04:37,030 --> 00:04:41,169
confident angular for fun but I couldn't

00:04:39,970 --> 00:04:42,870
come up with any because I'm a little

00:04:41,169 --> 00:04:46,720
bit bit of a square he doesn't have

00:04:42,870 --> 00:04:49,990
enough angles to go create cats don't

00:04:46,720 --> 00:04:53,220
like punch yeah my god we're just not

00:04:49,990 --> 00:04:56,650
very good at fun okay banana I love it

00:04:53,220 --> 00:04:58,840
so first resource we are going to

00:04:56,650 --> 00:05:00,159
remember the text input right from our

00:04:58,840 --> 00:05:02,199
app we're going to create a look ahead

00:05:00,159 --> 00:05:05,050
search and then love look ahead searches

00:05:02,199 --> 00:05:07,419
yeah you can't have an Rx talk without a

00:05:05,050 --> 00:05:08,560
look ahead search there's actually a

00:05:07,419 --> 00:05:12,699
drinking game for this so if you're

00:05:08,560 --> 00:05:14,440
playing that right now go ahead so this

00:05:12,699 --> 00:05:15,759
is why we're standing up here and you

00:05:14,440 --> 00:05:16,990
know we're giving an ArcGIS talk and

00:05:15,759 --> 00:05:19,180
this is also the idiomatic

00:05:16,990 --> 00:05:22,870
rxjs example so what this is going to do

00:05:19,180 --> 00:05:24,430
is it's going to as the person's typing

00:05:22,870 --> 00:05:27,099
it's going to go to a service and then

00:05:24,430 --> 00:05:28,990
it's going to return a set of suggested

00:05:27,099 --> 00:05:31,150
keywords based on what the person is

00:05:28,990 --> 00:05:33,370
actually typing so in order to get

00:05:31,150 --> 00:05:35,830
started let's just create a simple input

00:05:33,370 --> 00:05:38,139
tag and then we'll add an input of an

00:05:35,830 --> 00:05:40,960
input event and we'll use a subject as

00:05:38,139 --> 00:05:42,940
the event handler and we need to make

00:05:40,960 --> 00:05:45,729
sure to add a template reference

00:05:42,940 --> 00:05:48,430
variable to get the text value after we

00:05:45,729 --> 00:05:50,620
do that because this is a subject we can

00:05:48,430 --> 00:05:53,909
just use the next method to push the

00:05:50,620 --> 00:05:57,280
values through the subject into a

00:05:53,909 --> 00:06:00,190
observable of values and make sure to

00:05:57,280 --> 00:06:01,930
import subject from our gif and also

00:06:00,190 --> 00:06:05,650
make sure to add the subject to your

00:06:01,930 --> 00:06:07,330
component class so a brief recap of why

00:06:05,650 --> 00:06:09,159
subjects are so awesome

00:06:07,330 --> 00:06:11,349
number one subjects are observable

00:06:09,159 --> 00:06:13,719
number two they're observers and

00:06:11,349 --> 00:06:15,669
observers have the methods next Erin

00:06:13,719 --> 00:06:17,949
complete already on them and allows us

00:06:15,669 --> 00:06:20,710
to simply push valleys through by

00:06:17,949 --> 00:06:22,750
calling subject next value and because

00:06:20,710 --> 00:06:24,490
unobservable they have all operas or

00:06:22,750 --> 00:06:27,729
operators on them but any other

00:06:24,490 --> 00:06:29,979
observable would okay so one thing we

00:06:27,729 --> 00:06:32,680
actually gloss past very quickly here is

00:06:29,979 --> 00:06:34,210
a common place where beginners shoot

00:06:32,680 --> 00:06:35,740
themselves in the foot

00:06:34,210 --> 00:06:37,210
this is when you're importing the

00:06:35,740 --> 00:06:38,650
subject here we're highlighting the

00:06:37,210 --> 00:06:42,400
actual correct way to do this where you

00:06:38,650 --> 00:06:45,000
import from RCS slash subject what you

00:06:42,400 --> 00:06:46,750
don't want to do is one of these things

00:06:45,000 --> 00:06:48,130
sometimes people are like I don't know

00:06:46,750 --> 00:06:51,520
what I want to use from rx so I'm just

00:06:48,130 --> 00:06:52,720
going to import star for as rx from from

00:06:51,520 --> 00:06:54,340
rxjs and they just bring the whole

00:06:52,720 --> 00:06:56,289
shebang in and then they decide

00:06:54,340 --> 00:06:57,699
afterwards what they want to use or

00:06:56,289 --> 00:06:59,830
they're like you know I can make a

00:06:57,699 --> 00:07:03,099
one-liner out of this if I just import

00:06:59,830 --> 00:07:05,740
multiple types from rxjs or they import

00:07:03,099 --> 00:07:07,750
from RCS flash rx the problem with this

00:07:05,740 --> 00:07:10,120
is it's going to bring in every single

00:07:07,750 --> 00:07:12,940
type from rx it's going to bring in all

00:07:10,120 --> 00:07:15,160
60 plus operators all of the schedulers

00:07:12,940 --> 00:07:16,690
everything bundles them up for you and

00:07:15,160 --> 00:07:18,580
ship them to the browser so they can be

00:07:16,690 --> 00:07:20,169
parsed by your application or whoever

00:07:18,580 --> 00:07:21,789
sitting there watching it it's going to

00:07:20,169 --> 00:07:23,620
slow things down you don't want to do

00:07:21,789 --> 00:07:25,750
that so what you want to do is just

00:07:23,620 --> 00:07:27,729
include what you need if you import

00:07:25,750 --> 00:07:31,180
directly from the module path inside the

00:07:27,729 --> 00:07:33,669
rxjs package so import observable from

00:07:31,180 --> 00:07:36,250
RCS slash observable import subject from

00:07:33,669 --> 00:07:37,720
RCS slash subject it's going to import

00:07:36,250 --> 00:07:39,669
just the bare-bones observable the

00:07:37,720 --> 00:07:41,830
bare-bones subject and actually does not

00:07:39,669 --> 00:07:43,990
come with any operators when you want to

00:07:41,830 --> 00:07:45,909
add operators to this for use in your

00:07:43,990 --> 00:07:48,550
application my recommendation is to use

00:07:45,909 --> 00:07:50,919
the app module TS file and in there you

00:07:48,550 --> 00:07:53,110
can add these these patch these operator

00:07:50,919 --> 00:07:56,199
patches where you can say import rxjs

00:07:53,110 --> 00:07:58,060
add operator map ArcGIS operator filter

00:07:56,199 --> 00:08:00,669
and what that's going to do is it's

00:07:58,060 --> 00:08:01,810
going to make those operators available

00:08:00,669 --> 00:08:03,490
for you throughout your entire

00:08:01,810 --> 00:08:05,169
application and tools like Visual Studio

00:08:03,490 --> 00:08:06,940
code actually will give you errors until

00:08:05,169 --> 00:08:10,389
you actually do this so they're pretty

00:08:06,940 --> 00:08:13,180
helpful so back to the pun app I like to

00:08:10,389 --> 00:08:15,370
the back future thing um so we have an

00:08:13,180 --> 00:08:17,259
observable of text input changes but we

00:08:15,370 --> 00:08:19,120
really want it to we would really want

00:08:17,259 --> 00:08:20,710
to compose this into an observable of

00:08:19,120 --> 00:08:24,159
keywords that we might be trying to type

00:08:20,710 --> 00:08:26,289
into our text box so what we're going to

00:08:24,159 --> 00:08:28,330
do is we need to have a service to go

00:08:26,289 --> 00:08:30,250
get that stuff so make that Ajax call so

00:08:28,330 --> 00:08:31,810
I'm going to have this fun service I'm

00:08:30,250 --> 00:08:32,919
going to provide it to my component and

00:08:31,810 --> 00:08:35,110
I'm going to make sure to inject it via

00:08:32,919 --> 00:08:36,250
the constructor and then our punch

00:08:35,110 --> 00:08:37,810
service looks a lot like this there's

00:08:36,250 --> 00:08:39,849
actually two methods on here there's one

00:08:37,810 --> 00:08:40,479
suggest keywords another one called get

00:08:39,849 --> 00:08:42,099
puns

00:08:40,479 --> 00:08:43,959
I'm just going to show suggest keywords

00:08:42,099 --> 00:08:44,860
because this is just kind of a bare

00:08:43,959 --> 00:08:46,959
minimum

00:08:44,860 --> 00:08:49,360
Ajax sort of method and they're both

00:08:46,959 --> 00:08:51,880
very very much the same what we're going

00:08:49,360 --> 00:08:54,399
to do here is we're going to use

00:08:51,880 --> 00:08:55,899
angular's HDTV service which you can see

00:08:54,399 --> 00:08:58,449
injected in the constructor and we're

00:08:55,899 --> 00:08:59,829
going to do a get with that string that

00:08:58,449 --> 00:09:01,120
someone might be trying to type in to

00:08:59,829 --> 00:09:02,889
figure out what keywords this might

00:09:01,120 --> 00:09:04,660
match we're going to a get against our

00:09:02,889 --> 00:09:07,000
service we're going to map it to the

00:09:04,660 --> 00:09:08,709
response JSON to get like an actual

00:09:07,000 --> 00:09:10,600
JavaScript object that we can use in

00:09:08,709 --> 00:09:12,459
this case it's an array of strings and

00:09:10,600 --> 00:09:13,750
then I've added something very important

00:09:12,459 --> 00:09:15,100
here at the bottom I haven't decided how

00:09:13,750 --> 00:09:16,750
I want to handle errors but I've added

00:09:15,100 --> 00:09:21,070
this catch and the reason I've added

00:09:16,750 --> 00:09:22,630
this catch is if the HTTP errors and I

00:09:21,070 --> 00:09:24,040
don't have a catch here if we're doing

00:09:22,630 --> 00:09:24,910
something like a switch map or a merge

00:09:24,040 --> 00:09:26,680
map with it later

00:09:24,910 --> 00:09:29,199
it's that air is going to propagate out

00:09:26,680 --> 00:09:31,000
and kill that that that parent stream

00:09:29,199 --> 00:09:33,490
that was starting these Ajax requests we

00:09:31,000 --> 00:09:35,980
don't want that so now that we have this

00:09:33,490 --> 00:09:38,320
awesome fun service we need to take out

00:09:35,980 --> 00:09:40,480
a server we have of text input changes

00:09:38,320 --> 00:09:42,579
and we need to go to append service and

00:09:40,480 --> 00:09:43,779
get a list of suggested keywords so

00:09:42,579 --> 00:09:45,639
we're just going to simply create a

00:09:43,779 --> 00:09:47,860
property called keywords on our class

00:09:45,639 --> 00:09:49,600
and then what this is doing is every

00:09:47,860 --> 00:09:52,990
time there's a text input change it's

00:09:49,600 --> 00:09:55,230
going to the pun service and calling the

00:09:52,990 --> 00:09:58,329
suggested keywords method and then

00:09:55,230 --> 00:10:00,940
asynchronously asynchronously doing that

00:09:58,329 --> 00:10:03,519
and then it's returning and observable

00:10:00,940 --> 00:10:05,410
of suggested keywords to us and we're

00:10:03,519 --> 00:10:06,699
using the switch map operator here and

00:10:05,410 --> 00:10:09,069
the reason we're doing that is because

00:10:06,699 --> 00:10:11,290
the switch map operator is going to take

00:10:09,069 --> 00:10:14,079
that observable of text input changes

00:10:11,290 --> 00:10:16,779
and change it into an observable

00:10:14,079 --> 00:10:18,310
of suggested keywords really cool so you

00:10:16,779 --> 00:10:20,199
might be wondering why on earth are we

00:10:18,310 --> 00:10:22,000
using the switch map operator well we're

00:10:20,199 --> 00:10:24,069
using this because it converts the value

00:10:22,000 --> 00:10:26,500
to a new observable and then switches to

00:10:24,069 --> 00:10:29,050
that observable and unsubscribes from

00:10:26,500 --> 00:10:30,880
any previous ones it might have made if

00:10:29,050 --> 00:10:33,430
you're ever curious about what operator

00:10:30,880 --> 00:10:36,940
to use I know this is a huge question go

00:10:33,430 --> 00:10:38,920
ahead and go to reactive xio /rx yes

00:10:36,940 --> 00:10:41,110
these are at the official dock and there

00:10:38,920 --> 00:10:42,910
is a choose your own operator adventure

00:10:41,110 --> 00:10:44,920
at the bottom yeah it's very cool yeah

00:10:42,910 --> 00:10:45,760
it's pretty awesome we like it so now

00:10:44,920 --> 00:10:48,399
that we have this really awesome

00:10:45,760 --> 00:10:50,649
observable of suggested keyword we just

00:10:48,399 --> 00:10:53,199
need to write it to the view and we're

00:10:50,649 --> 00:10:53,779
going to do that by well keywords right

00:10:53,199 --> 00:10:55,579
is in the

00:10:53,779 --> 00:10:58,069
servable of array so we can use PI

00:10:55,579 --> 00:11:02,089
pacing and then iterate over it using ng

00:10:58,069 --> 00:11:04,269
4 and thank you angular for having PI

00:11:02,089 --> 00:11:06,529
basing because what this does is

00:11:04,269 --> 00:11:08,600
immediately when the component

00:11:06,529 --> 00:11:10,430
initializes it's going to subscribe to

00:11:08,600 --> 00:11:12,319
the observable and then when it's

00:11:10,430 --> 00:11:13,639
removed from the view it unsubscribe so

00:11:12,319 --> 00:11:16,839
it's something really powerful and

00:11:13,639 --> 00:11:20,120
really easy to use our chances yeah

00:11:16,839 --> 00:11:21,470
alright so normally when you do a look

00:11:20,120 --> 00:11:22,730
at component what you do is you allow

00:11:21,470 --> 00:11:24,410
something to type something in you give

00:11:22,730 --> 00:11:26,449
them some suggestions and then you make

00:11:24,410 --> 00:11:28,040
them click something before you go get

00:11:26,449 --> 00:11:30,290
you know things related to whatever they

00:11:28,040 --> 00:11:32,420
clicked on for this app I thought it

00:11:30,290 --> 00:11:34,759
would be more fun if we took our

00:11:32,420 --> 00:11:36,529
observable of keywords and actually just

00:11:34,759 --> 00:11:38,600
composed it into an observable of puns

00:11:36,529 --> 00:11:40,670
we already have a method it's going to

00:11:38,600 --> 00:11:42,790
give us an observable of puns if we if

00:11:40,670 --> 00:11:46,430
we hand it an array of keywords so

00:11:42,790 --> 00:11:48,350
you'll notice our keywords property

00:11:46,430 --> 00:11:50,689
looks a lot like our puns found property

00:11:48,350 --> 00:11:52,490
the composition here is using switch map

00:11:50,689 --> 00:11:53,420
again it's pretty straightforward but

00:11:52,490 --> 00:11:56,480
this time we're actually going to use

00:11:53,420 --> 00:12:01,610
our keywords property to switch map into

00:11:56,480 --> 00:12:03,589
our get puns call so now we have this

00:12:01,610 --> 00:12:04,790
observable of arrays of puns and to

00:12:03,589 --> 00:12:06,079
write it out to the view we're going to

00:12:04,790 --> 00:12:07,819
do exactly the same thing we did with

00:12:06,079 --> 00:12:11,089
our keywords we're going to use pipe

00:12:07,819 --> 00:12:13,639
async to subscribe to that observable of

00:12:11,089 --> 00:12:15,079
arrays of funds and then we'll use ng 4

00:12:13,639 --> 00:12:18,889
to loop over those arrays of funds and

00:12:15,079 --> 00:12:20,629
display the Tracy we've done something

00:12:18,889 --> 00:12:21,860
wrong you did something wrong I've done

00:12:20,629 --> 00:12:24,290
something wrong it's pretty terrible

00:12:21,860 --> 00:12:25,339
then what's making this mistake though

00:12:24,290 --> 00:12:28,040
what did I do

00:12:25,339 --> 00:12:30,379
well puns found is derived from keyword

00:12:28,040 --> 00:12:32,209
so we're actually subscribing to it

00:12:30,379 --> 00:12:34,519
twice here subscribing to keywords to I

00:12:32,209 --> 00:12:37,040
yeah I thought that well it's bad

00:12:34,519 --> 00:12:39,230
because it's making two HTTP requests

00:12:37,040 --> 00:12:42,259
let's make it two issues we call call

00:12:39,230 --> 00:12:44,089
requests whatever yes so again to get

00:12:42,259 --> 00:12:46,670
our keyword that's not good yeah it's

00:12:44,089 --> 00:12:49,790
not but thankfully you wrote an operator

00:12:46,670 --> 00:12:51,709
especially for this talk I did know that

00:12:49,790 --> 00:12:53,689
share operator it's not especially for

00:12:51,709 --> 00:12:56,300
this talk it existed before I like to

00:12:53,689 --> 00:12:57,920
think otherwise so share operator is one

00:12:56,300 --> 00:13:00,410
of my favorite operators because it

00:12:57,920 --> 00:13:02,660
makes your observables multicast

00:13:00,410 --> 00:13:03,769
multicast you like which is yeah it's

00:13:02,660 --> 00:13:05,790
one of my new favorite words

00:13:03,769 --> 00:13:07,800
and what multi have to

00:13:05,790 --> 00:13:10,290
is it allows for one subscription and

00:13:07,800 --> 00:13:12,120
multiple subscribers so here we have

00:13:10,290 --> 00:13:14,250
solved our problem awesome

00:13:12,120 --> 00:13:16,410
I know makes me so happy so now you can

00:13:14,250 --> 00:13:18,270
go to our pun app and you can see if you

00:13:16,410 --> 00:13:21,120
type something in then it's going to

00:13:18,270 --> 00:13:22,470
give us an observable keyword and based

00:13:21,120 --> 00:13:24,090
on that it's going to give us an

00:13:22,470 --> 00:13:26,580
observable of puns phone so really

00:13:24,090 --> 00:13:28,740
really cool your favorite app right yes

00:13:26,580 --> 00:13:32,100
but now to your actual favorite my

00:13:28,740 --> 00:13:34,110
favorite thing is same shape and shape

00:13:32,100 --> 00:13:36,780
it yes contributed so let's add another

00:13:34,110 --> 00:13:38,760
data source of this we've got our art

00:13:36,780 --> 00:13:40,170
we're typing in and getting some

00:13:38,760 --> 00:13:43,020
keywords and then composing that into

00:13:40,170 --> 00:13:44,940
getting some puns if if we can if we

00:13:43,020 --> 00:13:46,380
look at this is an observable of

00:13:44,940 --> 00:13:48,510
keywords that we're composing into an

00:13:46,380 --> 00:13:50,220
observable of puns if we can get any

00:13:48,510 --> 00:13:52,380
other observable of keywords which is

00:13:50,220 --> 00:13:53,910
just an observable of strings we could

00:13:52,380 --> 00:13:55,560
merge that with our other observable

00:13:53,910 --> 00:13:57,300
keywords and use that to get an

00:13:55,560 --> 00:14:00,150
observable puns without having to change

00:13:57,300 --> 00:14:01,590
much else of our code so let's let's do

00:14:00,150 --> 00:14:03,660
that with something really cool which is

00:14:01,590 --> 00:14:05,460
the web speech API one of my favorite

00:14:03,660 --> 00:14:07,560
API is yeah so if you're going to use

00:14:05,460 --> 00:14:08,940
the web speech API by itself standalone

00:14:07,560 --> 00:14:10,080
it would look a lot like this it's going

00:14:08,940 --> 00:14:11,490
to vary a little bit from browser to

00:14:10,080 --> 00:14:13,890
browser because it's got vendor specific

00:14:11,490 --> 00:14:15,480
tags depending on what browser in but

00:14:13,890 --> 00:14:17,400
what you're going to do is you're going

00:14:15,480 --> 00:14:19,260
to create a new speech object you're

00:14:17,400 --> 00:14:21,210
going to add an event listener for the

00:14:19,260 --> 00:14:23,810
result event and then the result event

00:14:21,210 --> 00:14:26,100
gives you back kind of this tree of

00:14:23,810 --> 00:14:28,020
results that the speech recognition

00:14:26,100 --> 00:14:29,310
thinks that it heard and then you have

00:14:28,020 --> 00:14:31,230
to call speech dot start and that's

00:14:29,310 --> 00:14:33,540
going to start the microphone listening

00:14:31,230 --> 00:14:35,460
for for you to say something now to wrap

00:14:33,540 --> 00:14:37,140
this in an observable it's really easy

00:14:35,460 --> 00:14:38,940
you just put an observable constructor

00:14:37,140 --> 00:14:40,470
on it so what we're doing here is we

00:14:38,940 --> 00:14:41,970
just take exactly the same code that we

00:14:40,470 --> 00:14:44,070
had we wrap it in an observable

00:14:41,970 --> 00:14:45,720
constructor the major difference is

00:14:44,070 --> 00:14:48,330
instead of handling

00:14:45,720 --> 00:14:49,800
the result right inside of that result

00:14:48,330 --> 00:14:51,960
handler inside of that event listener

00:14:49,800 --> 00:14:53,820
we're going to use the observer to next

00:14:51,960 --> 00:14:55,710
out our results and then we're going to

00:14:53,820 --> 00:14:57,480
call observer dot complete because we

00:14:55,710 --> 00:15:00,440
know speech recognition in this case is

00:14:57,480 --> 00:15:03,900
only going to give us one result now

00:15:00,440 --> 00:15:06,090
observables are both are both lazy and

00:15:03,900 --> 00:15:08,250
cancelable so one other thing we can do

00:15:06,090 --> 00:15:10,560
with this is we can have we can return a

00:15:08,250 --> 00:15:13,140
teardown function that called speech dot

00:15:10,560 --> 00:15:15,210
abort so somebody unsubscribe from our

00:15:13,140 --> 00:15:16,980
speech recognition observable it will

00:15:15,210 --> 00:15:17,400
stop it will close the microphone or if

00:15:16,980 --> 00:15:19,320
someone

00:15:17,400 --> 00:15:22,170
moves our component from view it'll turn

00:15:19,320 --> 00:15:23,880
the microphone off now another thing we

00:15:22,170 --> 00:15:25,350
can do here is since we added an event

00:15:23,880 --> 00:15:26,580
listener when we tear down we want to

00:15:25,350 --> 00:15:28,140
remove that event listener so we don't

00:15:26,580 --> 00:15:31,350
get anything weird happening with memory

00:15:28,140 --> 00:15:32,610
management here and then finally this

00:15:31,350 --> 00:15:33,690
looks like a lot of code but it's really

00:15:32,610 --> 00:15:35,850
just the same thing that you were

00:15:33,690 --> 00:15:37,620
looking at previously we need to add it

00:15:35,850 --> 00:15:40,320
we wanted an angular service so we can

00:15:37,620 --> 00:15:42,930
inject it so basically we just use

00:15:40,320 --> 00:15:45,240
angular CLI to generate an angular

00:15:42,930 --> 00:15:47,370
service and we add a listen method to

00:15:45,240 --> 00:15:50,070
that and that's just going to return our

00:15:47,370 --> 00:15:52,020
wraps API our are that observable that

00:15:50,070 --> 00:15:53,730
we just made and there's a couple little

00:15:52,020 --> 00:15:56,460
additions we didn't hear there's this

00:15:53,730 --> 00:15:57,870
clean speech results method it's just a

00:15:56,460 --> 00:15:59,610
helper that just kind of goes to that

00:15:57,870 --> 00:16:01,320
tree of results and flattens it into an

00:15:59,610 --> 00:16:03,000
array of string that it thought that it

00:16:01,320 --> 00:16:05,550
heard and we added a little bit of hair

00:16:03,000 --> 00:16:07,620
handling cool so now that we have this

00:16:05,550 --> 00:16:09,510
awesome speech service we need to

00:16:07,620 --> 00:16:12,630
actually build something that's going to

00:16:09,510 --> 00:16:13,650
trigger that right and so for that we're

00:16:12,630 --> 00:16:16,080
just going to create a simple button

00:16:13,650 --> 00:16:20,460
with a click event use a subject again

00:16:16,080 --> 00:16:22,950
called listen click and add next to it

00:16:20,460 --> 00:16:24,660
and we're not passing anything to net

00:16:22,950 --> 00:16:26,490
and the reason we're not doing that is

00:16:24,660 --> 00:16:28,710
because you're just listening for an

00:16:26,490 --> 00:16:31,740
event to happen so it starts the speech

00:16:28,710 --> 00:16:33,720
recognition make sure to add it to your

00:16:31,740 --> 00:16:35,730
class as well and you'll see if the

00:16:33,720 --> 00:16:38,280
subject avoids or fabric avoid right

00:16:35,730 --> 00:16:39,660
there and then inject it by adding it to

00:16:38,280 --> 00:16:42,000
your providers and adding it to your

00:16:39,660 --> 00:16:43,950
constructor as well now what we're doing

00:16:42,000 --> 00:16:46,740
here is we're creating another property

00:16:43,950 --> 00:16:49,200
called spoken keyword and every time

00:16:46,740 --> 00:16:50,730
somebody clicks on something it's going

00:16:49,200 --> 00:16:53,430
and getting a new speech recognition

00:16:50,730 --> 00:16:55,410
observable and what it's doing is number

00:16:53,430 --> 00:16:57,510
one it's listening for the audio then

00:16:55,410 --> 00:16:59,460
it's processing it and then it's giving

00:16:57,510 --> 00:17:01,350
us back a set of things that it thought

00:16:59,460 --> 00:17:03,570
it heard and we're using pitch map again

00:17:01,350 --> 00:17:06,209
to actually subscribe to it it looks

00:17:03,570 --> 00:17:08,610
eerily similar so before we had this

00:17:06,209 --> 00:17:10,470
property called keywords that was just

00:17:08,610 --> 00:17:11,730
our types input changes that were going

00:17:10,470 --> 00:17:13,530
out and making a request and getting

00:17:11,730 --> 00:17:15,930
back a list of possible suggested

00:17:13,530 --> 00:17:17,490
keywords we're going to refactor this a

00:17:15,930 --> 00:17:19,080
little bit and we're going to take that

00:17:17,490 --> 00:17:21,510
typed piece out and put it in its own

00:17:19,080 --> 00:17:23,790
property called typed keywords now

00:17:21,510 --> 00:17:25,410
spoken keywords and typed keywords are

00:17:23,790 --> 00:17:27,270
actually the same type they're both

00:17:25,410 --> 00:17:29,280
observables of arrays of strings and

00:17:27,270 --> 00:17:30,780
since they're both observables of arrays

00:17:29,280 --> 00:17:33,780
of strings we can merge them together

00:17:30,780 --> 00:17:36,900
into one keywords property which is an

00:17:33,780 --> 00:17:38,610
observable of arrays of strings and this

00:17:36,900 --> 00:17:41,280
is cool because we can share this and

00:17:38,610 --> 00:17:43,080
now keywords is what we're using for our

00:17:41,280 --> 00:17:44,850
puns found observable and it's also what

00:17:43,080 --> 00:17:47,220
we were binding out to our view we don't

00:17:44,850 --> 00:17:49,470
have to change anything about this so

00:17:47,220 --> 00:17:52,800
this is the benefit of Shame shape at

00:17:49,470 --> 00:17:55,470
neck in shape we got a guys yeah if

00:17:52,800 --> 00:17:57,120
you can say it correctly all right we're

00:17:55,470 --> 00:18:01,110
ready for the demo hello

00:17:57,120 --> 00:18:04,800
I love the appropriate all right so we

00:18:01,110 --> 00:18:07,190
actually have a demo here hmm so here

00:18:04,800 --> 00:18:11,130
this is this is our thing we can type in

00:18:07,190 --> 00:18:12,690
cheese right or bird that's working

00:18:11,130 --> 00:18:19,080
that's not very exciting but but we get

00:18:12,690 --> 00:18:20,790
we have our web speech yes banana where

00:18:19,080 --> 00:18:24,420
you get some fun there

00:18:20,790 --> 00:18:25,620
why don't banana snore I don't know they

00:18:24,420 --> 00:18:28,950
don't want to wake up the rest of the

00:18:25,620 --> 00:18:30,480
vine oh so bad we also have been so we

00:18:28,950 --> 00:18:33,150
won't really have time to get into this

00:18:30,480 --> 00:18:34,860
but you can you can look there's a

00:18:33,150 --> 00:18:36,600
reason we have a banana you can look at

00:18:34,860 --> 00:18:38,700
the the actual repo which we're going to

00:18:36,600 --> 00:18:40,290
post the links later but so we've made

00:18:38,700 --> 00:18:42,060
this we've made this component that

00:18:40,290 --> 00:18:44,250
actually streams from our web camera and

00:18:42,060 --> 00:18:46,530
you can click and it'll take an image

00:18:44,250 --> 00:18:48,390
this is using Google's image our new

00:18:46,530 --> 00:18:51,570
image recognition API send it over the

00:18:48,390 --> 00:18:55,950
Google vision API and it'll it will look

00:18:51,570 --> 00:19:00,600
up so you know pretty cool right yeah so

00:18:55,950 --> 00:19:02,640
again that's all because of same shape

00:19:00,600 --> 00:19:04,650
in this we had favorite gnash that gives

00:19:02,640 --> 00:19:08,730
us an observable over rate of strings so

00:19:04,650 --> 00:19:10,080
we went over a few things today and we

00:19:08,730 --> 00:19:12,450
actually posted these online so you can

00:19:10,080 --> 00:19:14,340
go to Ben Lesh or lady lead on Twitter

00:19:12,450 --> 00:19:16,110
find them we have a bunch of resources

00:19:14,340 --> 00:19:18,990
this is open source so check out the

00:19:16,110 --> 00:19:20,550
repo if you like and we should make like

00:19:18,990 --> 00:19:23,550
a trampoline and bounce out of here a

00:19:20,550 --> 00:19:27,840
plain pictures yeah yeah all right pause

00:19:23,550 --> 00:19:29,900
I really fun thanks everybody go get Ron

00:19:27,840 --> 00:19:29,900

YouTube URL: https://www.youtube.com/watch?v=aZRJOVPMW4k


