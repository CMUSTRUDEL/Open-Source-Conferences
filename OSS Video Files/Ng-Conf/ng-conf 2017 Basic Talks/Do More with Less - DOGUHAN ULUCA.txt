Title: Do More with Less - DOGUHAN ULUCA
Publication date: 2017-04-30
Playlist: ng-conf 2017 Basic Talks
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,000 --> 00:00:07,529
oh hello ng-conf I'm Delano luca and

00:00:05,279 --> 00:00:12,240
i'll be talking about doing more with

00:00:07,529 --> 00:00:15,020
less javascript so every journey begins

00:00:12,240 --> 00:00:18,960
with an idea one that you can almost

00:00:15,020 --> 00:00:21,600
hold in your hands so you pick a stack

00:00:18,960 --> 00:00:23,460
and you start coding you MPM install a

00:00:21,600 --> 00:00:27,720
few things and everything is going good

00:00:23,460 --> 00:00:29,760
your vision is still in sight and you go

00:00:27,720 --> 00:00:34,910
read some blogs start copy pasting some

00:00:29,760 --> 00:00:37,920
code things get intense and specific and

00:00:34,910 --> 00:00:39,390
before you know it you have three

00:00:37,920 --> 00:00:42,420
versions of angular installed in your

00:00:39,390 --> 00:00:47,039
project and you're you're not even aware

00:00:42,420 --> 00:00:48,539
of it so next thing you know you're

00:00:47,039 --> 00:00:51,600
dealing with the bugs and quirks of

00:00:48,539 --> 00:00:54,270
dozens of tools and libraries this is

00:00:51,600 --> 00:00:56,340
not what you signed up for your vision

00:00:54,270 --> 00:00:59,609
is blocked by these sandbags as

00:00:56,340 --> 00:01:04,830
complexities and you're simply and

00:00:59,609 --> 00:01:06,479
utterly devastated you're imagining what

00:01:04,830 --> 00:01:10,470
could have happened you know how things

00:01:06,479 --> 00:01:13,740
could have been congratulations you've

00:01:10,470 --> 00:01:15,960
been trolled by JavaScript you don't

00:01:13,740 --> 00:01:18,720
need dozens of tools and libraries to be

00:01:15,960 --> 00:01:21,900
successful so I'm going to teach you a

00:01:18,720 --> 00:01:24,509
technique on how you can stop feeding

00:01:21,900 --> 00:01:26,520
the straw I'd like to tell you a quick

00:01:24,509 --> 00:01:28,820
story it's about a monk who goes to the

00:01:26,520 --> 00:01:31,650
city and he's mesmerized by the

00:01:28,820 --> 00:01:33,479
diversity and richness of the market he

00:01:31,650 --> 00:01:36,090
likes to buy a few things wait doesn't

00:01:33,479 --> 00:01:38,729
have any money so the merchant asks them

00:01:36,090 --> 00:01:41,430
what can you give how can you give

00:01:38,729 --> 00:01:46,439
without any possessions so this monk

00:01:41,430 --> 00:01:51,479
sujata responds I can think I can wait

00:01:46,439 --> 00:01:54,000
and I can fast in the end he gets all

00:01:51,479 --> 00:01:57,030
that he wants and you can do as well

00:01:54,000 --> 00:02:01,649
let's apply the same idea to JavaScript

00:01:57,030 --> 00:02:04,799
now think don't rush the coding can you

00:02:01,649 --> 00:02:07,350
get to eighty percent with just twenty

00:02:04,799 --> 00:02:09,979
percent of the effort using the

00:02:07,350 --> 00:02:13,530
library's that you're already good at

00:02:09,979 --> 00:02:16,709
resist the urge to invent something new

00:02:13,530 --> 00:02:21,720
stick to simple defaults stick the best

00:02:16,709 --> 00:02:25,950
practices d scope read the docs and then

00:02:21,720 --> 00:02:28,730
go back and reread the docs only then go

00:02:25,950 --> 00:02:33,120
to the NPM and install a new library

00:02:28,730 --> 00:02:36,030
wait at the edges of the beta's NRCS you

00:02:33,120 --> 00:02:38,550
burn I publish the series of blog posts

00:02:36,030 --> 00:02:41,640
on building beautiful and scalable

00:02:38,550 --> 00:02:44,400
angularjs apps where you can leverage

00:02:41,640 --> 00:02:47,610
your existing skills while starting to

00:02:44,400 --> 00:02:48,780
get good at new angular concepts balance

00:02:47,610 --> 00:02:53,000
your productivity with your

00:02:48,780 --> 00:02:56,280
experimentation remember that 8020 rule

00:02:53,000 --> 00:02:58,800
fast and the gluttony of JavaScript

00:02:56,280 --> 00:03:02,459
dependencies only by reducing your

00:02:58,800 --> 00:03:05,069
surface area can you become a master of

00:03:02,459 --> 00:03:08,010
what you're working with you'll be more

00:03:05,069 --> 00:03:10,290
productive more effective and you might

00:03:08,010 --> 00:03:13,769
actually start and join your job a

00:03:10,290 --> 00:03:17,760
little bit more you can implement this

00:03:13,769 --> 00:03:21,930
philosophy using three tools angular npm

00:03:17,760 --> 00:03:23,400
and typescript angular extends HTML

00:03:21,930 --> 00:03:26,190
rather than replacing well known

00:03:23,400 --> 00:03:28,709
elements and AP is its modular which

00:03:26,190 --> 00:03:30,480
means you don't have to remodel your

00:03:28,709 --> 00:03:33,720
entire kitchen when all you have is a

00:03:30,480 --> 00:03:36,470
leaky faucet this decoupling makes it

00:03:33,720 --> 00:03:38,910
easier to do best practices like solid

00:03:36,470 --> 00:03:41,549
thanks to more explicit configuration

00:03:38,910 --> 00:03:43,200
and error messaging you're the one in

00:03:41,549 --> 00:03:49,260
control when it comes to angular become

00:03:43,200 --> 00:03:51,239
an MP an angular expert npm is the world

00:03:49,260 --> 00:03:54,269
largest ecosystem of open source

00:03:51,239 --> 00:03:58,350
libraries it's powerful it can simplify

00:03:54,269 --> 00:04:01,820
your configuration significantly shrink

00:03:58,350 --> 00:04:05,519
wrap your packages become an MPN expert

00:04:01,820 --> 00:04:08,130
types typescript is the past present and

00:04:05,519 --> 00:04:10,980
future or Java JavaScript you can write

00:04:08,130 --> 00:04:14,070
async await code with no callbacks and

00:04:10,980 --> 00:04:16,709
run it on ie6 with simple code type

00:04:14,070 --> 00:04:18,479
check and interfaces your code becomes

00:04:16,709 --> 00:04:20,010
more scalable and this is important

00:04:18,479 --> 00:04:22,019
because you can do full stack with

00:04:20,010 --> 00:04:24,570
typescript I have a project called the

00:04:22,019 --> 00:04:26,230
minimum mean project that demonstrates

00:04:24,570 --> 00:04:30,280
this very concept

00:04:26,230 --> 00:04:32,650
become a typescript expert so angular

00:04:30,280 --> 00:04:35,020
npm ty script you can pretty much

00:04:32,650 --> 00:04:39,460
accomplish any task with these tools and

00:04:35,020 --> 00:04:41,950
do it effectively you don't want to be

00:04:39,460 --> 00:04:45,550
overwhelmed by the diversity and

00:04:41,950 --> 00:04:47,440
richness of our wonderful ecosystem you

00:04:45,550 --> 00:04:54,370
want to be like her worried about

00:04:47,440 --> 00:04:59,590
drinking your tea to recap think weight

00:04:54,370 --> 00:05:01,120
and fast alright so the blogs and links

00:04:59,590 --> 00:05:02,860
are up on the JavaScript promise calm

00:05:01,120 --> 00:05:06,450
and let's continue the conversation on

00:05:02,860 --> 00:05:09,889
twitter follow me at De Luca

00:05:06,450 --> 00:05:09,889

YouTube URL: https://www.youtube.com/watch?v=Sd1aM8181kc


