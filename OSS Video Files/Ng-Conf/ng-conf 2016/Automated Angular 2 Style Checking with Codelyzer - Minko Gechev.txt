Title: Automated Angular 2 Style Checking with Codelyzer - Minko Gechev
Publication date: 2016-05-06
Playlist: ng-conf 2016
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:06,620 --> 00:00:11,400
everyone my name is Minka and today I'm

00:00:09,660 --> 00:00:13,309
going to be talking about automated

00:00:11,400 --> 00:00:16,109
anger to start checking with cold laser

00:00:13,309 --> 00:00:17,640
so a couple words about me currently I'm

00:00:16,109 --> 00:00:19,070
working on a start-up called brownie

00:00:17,640 --> 00:00:21,630
points we're doing an educational

00:00:19,070 --> 00:00:24,180
application for kids that is entirely

00:00:21,630 --> 00:00:25,289
developed within YouTube and I'm also

00:00:24,180 --> 00:00:27,180
quite active in the open source

00:00:25,289 --> 00:00:29,010
community few of the projects that I'm

00:00:27,180 --> 00:00:32,070
working on our angry to see it of course

00:00:29,010 --> 00:00:34,460
cold laser and contributing to a few of

00:00:32,070 --> 00:00:38,100
the projects of getting your mobile team

00:00:34,460 --> 00:00:40,559
and recently I finished this book I got

00:00:38,100 --> 00:00:41,309
the privilege to get technical review by

00:00:40,559 --> 00:00:45,660
misko hevery

00:00:41,309 --> 00:00:47,640
so you can take a look today we're going

00:00:45,660 --> 00:00:49,950
to talk about best practices and how we

00:00:47,640 --> 00:00:52,949
can apply them to our project in an

00:00:49,950 --> 00:00:55,440
automated fashion but before that's a

00:00:52,949 --> 00:00:56,850
little bit of a story time so a couple

00:00:55,440 --> 00:00:59,070
of months ago I started incorporating

00:00:56,850 --> 00:01:01,949
all the best practices that I found

00:00:59,070 --> 00:01:03,780
about angular 2 in my development

00:01:01,949 --> 00:01:06,000
experience and also all the advice that

00:01:03,780 --> 00:01:08,460
says that Mischka gave me during his

00:01:06,000 --> 00:01:10,409
technical review of my book in the end I

00:01:08,460 --> 00:01:12,750
came up with this document that I called

00:01:10,409 --> 00:01:15,840
younger to style guide and I got a lot

00:01:12,750 --> 00:01:17,100
of feedback from community we started a

00:01:15,840 --> 00:01:19,590
lot of discussions into the issue

00:01:17,100 --> 00:01:21,390
tracker github and we improved the style

00:01:19,590 --> 00:01:23,700
guides a lot so that's how I call this

00:01:21,390 --> 00:01:26,580
to the angular 2 community driven style

00:01:23,700 --> 00:01:28,350
guide a little bit after that you go

00:01:26,580 --> 00:01:29,939
from the core team ask me whether I want

00:01:28,350 --> 00:01:31,740
to work together with him and John

00:01:29,939 --> 00:01:33,720
pepper on the official language to style

00:01:31,740 --> 00:01:36,810
guide I was super excited about this so

00:01:33,720 --> 00:01:38,909
of course accepted and we were going to

00:01:36,810 --> 00:01:40,530
incorporate all the best practices from

00:01:38,909 --> 00:01:42,780
the angular 2 community driven style

00:01:40,530 --> 00:01:44,579
guide all the best practices discovered

00:01:42,780 --> 00:01:47,220
during the internal usage a finger

00:01:44,579 --> 00:01:50,070
inside of Google and all the amazing job

00:01:47,220 --> 00:01:52,590
that jump up at it in his angular 1 and

00:01:50,070 --> 00:01:54,119
angular 2 style guides so we came up

00:01:52,590 --> 00:01:56,790
with this documents that's brought

00:01:54,119 --> 00:02:00,240
announced during the keynote session the

00:01:56,790 --> 00:02:02,520
first day of the conference and what

00:02:00,240 --> 00:02:04,399
your style guides actually is well it is

00:02:02,520 --> 00:02:07,380
a list of guidelines on building angular

00:02:04,399 --> 00:02:09,060
applications now I have highlighted the

00:02:07,380 --> 00:02:10,770
word guidelines here because that's

00:02:09,060 --> 00:02:13,260
what's the cell guide says it is giving

00:02:10,770 --> 00:02:13,860
us guidelines not rules so this means

00:02:13,260 --> 00:02:15,210
that we can

00:02:13,860 --> 00:02:17,880
eventually modify some of these

00:02:15,210 --> 00:02:18,810
guidelines or at our own specific

00:02:17,880 --> 00:02:21,420
guidelines

00:02:18,810 --> 00:02:23,490
now let's trace the process of how we

00:02:21,420 --> 00:02:25,950
can integrate the angular style guides

00:02:23,490 --> 00:02:28,050
inside of our project so first of all

00:02:25,950 --> 00:02:29,700
the senior engineers inside of the team

00:02:28,050 --> 00:02:31,260
are going to sit together and they're

00:02:29,700 --> 00:02:33,270
going to discuss each individual

00:02:31,260 --> 00:02:35,700
practice from the official style guides

00:02:33,270 --> 00:02:38,490
and eventually somehow modify it if the

00:02:35,700 --> 00:02:40,170
strictly required they will add some

00:02:38,490 --> 00:02:42,390
specific practices to the project and

00:02:40,170 --> 00:02:44,520
after that they may they need to make

00:02:42,390 --> 00:02:47,520
each individual team member of the team

00:02:44,520 --> 00:02:49,560
familiar with each individual team style

00:02:47,520 --> 00:02:53,610
guide practice from the style guide and

00:02:49,560 --> 00:02:56,070
this is because each code change and

00:02:53,610 --> 00:02:59,130
also legacy code of course we need to

00:02:56,070 --> 00:03:03,930
verify that the outer coat or the

00:02:59,130 --> 00:03:06,180
refactor code answers these styles and

00:03:03,930 --> 00:03:08,700
the process of doing this is usually

00:03:06,180 --> 00:03:11,760
called tree view how many of you did

00:03:08,700 --> 00:03:14,160
code you during the past week all right

00:03:11,760 --> 00:03:16,230
a lot of you and how many of you really

00:03:14,160 --> 00:03:20,130
enjoy doing this code video I mean we're

00:03:16,230 --> 00:03:23,220
very happy to do that like two hands I'm

00:03:20,130 --> 00:03:24,810
not counting you right so code reviews

00:03:23,220 --> 00:03:27,450
they are not very fun because there are

00:03:24,810 --> 00:03:29,160
manual they're boring and they're kind

00:03:27,450 --> 00:03:30,660
of error-prone first of all there are

00:03:29,160 --> 00:03:33,510
menu because we're doing them by hand

00:03:30,660 --> 00:03:34,799
and they're boring because well we're

00:03:33,510 --> 00:03:36,840
not reviewing super-exciting

00:03:34,799 --> 00:03:39,420
functionality every day and there are

00:03:36,840 --> 00:03:41,820
error-prone because well we're humans we

00:03:39,420 --> 00:03:42,540
it happens to make mistakes so that's

00:03:41,820 --> 00:03:44,519
what I thought

00:03:42,540 --> 00:03:46,769
with cold laser we have this huge style

00:03:44,519 --> 00:03:50,010
guides with a lot of practices there and

00:03:46,769 --> 00:03:52,519
we need to apply it over a big project

00:03:50,010 --> 00:03:54,900
with a lot of team members in the team I

00:03:52,519 --> 00:03:57,209
thought that well this process could be

00:03:54,900 --> 00:04:00,030
automated probably static code analysis

00:03:57,209 --> 00:04:02,459
so I built the initial proof of concept

00:04:00,030 --> 00:04:05,070
version just a cap of rows on top of T

00:04:02,459 --> 00:04:07,170
eslint later the project joins a friend

00:04:05,070 --> 00:04:09,120
of mine called Bruce laughing we started

00:04:07,170 --> 00:04:11,310
building another tools on top of G

00:04:09,120 --> 00:04:15,570
ascent and also doing some more advanced

00:04:11,310 --> 00:04:18,209
experiments so the goal of code Lizer is

00:04:15,570 --> 00:04:19,799
to provide a tool that enforces common

00:04:18,209 --> 00:04:22,289
style and verifies correctness of our

00:04:19,799 --> 00:04:24,870
programs that's the basic idea this

00:04:22,289 --> 00:04:26,970
sounds quite abstract and part of that

00:04:24,870 --> 00:04:27,580
is because we were still in pretty early

00:04:26,970 --> 00:04:29,080
stages

00:04:27,580 --> 00:04:31,659
development but let's take a look at a

00:04:29,080 --> 00:04:34,539
specific example so this here is Ingrid

00:04:31,659 --> 00:04:36,550
to see it and one of the best practices

00:04:34,539 --> 00:04:39,250
inside of the style guides is that we

00:04:36,550 --> 00:04:41,710
need to use our components with selector

00:04:39,250 --> 00:04:45,569
of type element however the home

00:04:41,710 --> 00:04:48,039
component here it is used as attribute

00:04:45,569 --> 00:04:50,289
so we are evaluating the best practice

00:04:48,039 --> 00:04:54,370
when we run go plant and wait a little

00:04:50,289 --> 00:04:55,960
bit we're going to get an error and so

00:04:54,370 --> 00:04:57,879
since the error message is quite short

00:04:55,960 --> 00:05:00,039
when we click on it we're going to get

00:04:57,879 --> 00:05:05,009
ready rated to the exact section from

00:05:00,039 --> 00:05:05,009
the angular 2 style guides where this

00:05:10,979 --> 00:05:16,240
this is very good we can integrate it as

00:05:14,020 --> 00:05:19,029
part of our development process we can

00:05:16,240 --> 00:05:20,949
even add support to our continuous

00:05:19,029 --> 00:05:23,139
integration like Travis or Jenkins or

00:05:20,949 --> 00:05:24,879
whatever but it would be even better

00:05:23,139 --> 00:05:27,400
if we're able to get some instant

00:05:24,879 --> 00:05:29,379
feedback this this point for instance

00:05:27,400 --> 00:05:32,529
here is Adam with the TSN plug-in

00:05:29,379 --> 00:05:34,180
installed so we're getting warnings

00:05:32,529 --> 00:05:36,969
each time we violate any of the rules

00:05:34,180 --> 00:05:39,190
inside of TSN jason also if we violate

00:05:36,969 --> 00:05:41,409
any of the best practices inside the

00:05:39,190 --> 00:05:43,509
style guides so in this case if you try

00:05:41,409 --> 00:05:45,849
to rename an input we're going to get a

00:05:43,509 --> 00:05:47,770
warning same happens if we try to

00:05:45,849 --> 00:05:50,860
implement the lifecycle hook without

00:05:47,770 --> 00:05:53,520
implementing the corresponding lifecycle

00:05:50,860 --> 00:05:56,169
hook interface this applies for

00:05:53,520 --> 00:05:58,419
basically any editor that has used in

00:05:56,169 --> 00:06:02,650
plugins this means that you can do this

00:05:58,419 --> 00:06:04,930
an atom and Visual Studio codes you can

00:06:02,650 --> 00:06:08,650
do this in them or webstorm whatever

00:06:04,930 --> 00:06:09,310
itches currently the two is based on

00:06:08,650 --> 00:06:11,050
TSN's

00:06:09,310 --> 00:06:13,240
we'll take a look at the future plans

00:06:11,050 --> 00:06:15,400
just in a little bit what surprised me

00:06:13,240 --> 00:06:17,020
was the adoption of the tool so

00:06:15,400 --> 00:06:19,210
initially I introduced it to hangar to

00:06:17,020 --> 00:06:21,039
seed project and a little bit after that

00:06:19,210 --> 00:06:23,379
Patrick from angular class

00:06:21,039 --> 00:06:25,750
he added support inside of the angular 2

00:06:23,379 --> 00:06:27,879
web pack starter so at this point

00:06:25,750 --> 00:06:29,379
already the two most popular starters

00:06:27,879 --> 00:06:31,960
had support of code Iser

00:06:29,379 --> 00:06:34,089
what happens later was that eager from

00:06:31,960 --> 00:06:36,550
the core team he suggested that cold

00:06:34,089 --> 00:06:39,639
laser at this time ng to lint could be a

00:06:36,550 --> 00:06:41,439
good fit for danger CLI so I was super

00:06:39,639 --> 00:06:43,479
excited about this because my two

00:06:41,439 --> 00:06:45,819
my little talk was going to get part of

00:06:43,479 --> 00:06:48,849
the official angular CLI so I added this

00:06:45,819 --> 00:06:51,249
integration but just a few days after

00:06:48,849 --> 00:07:00,580
his suggestion so you can already use

00:06:51,249 --> 00:07:02,289
gold lies are inside of younger CLI so

00:07:00,580 --> 00:07:04,839
you might have noticed that a couple of

00:07:02,289 --> 00:07:07,209
times I refer to the tools in g2 lens

00:07:04,839 --> 00:07:09,009
and tell so in the slides we actually

00:07:07,209 --> 00:07:11,489
deprecated this name because of a couple

00:07:09,009 --> 00:07:14,079
of reasons now it is called Lizer

00:07:11,489 --> 00:07:15,999
because first of all well linting sounds

00:07:14,079 --> 00:07:20,289
boring it sounds like something optional

00:07:15,999 --> 00:07:22,119
that that you should not do maybe but it

00:07:20,289 --> 00:07:23,709
is kind of important thing especially

00:07:22,119 --> 00:07:26,499
when you're following the sell guide

00:07:23,709 --> 00:07:29,199
which is going to bring you following

00:07:26,499 --> 00:07:31,149
the best practices and we're also

00:07:29,199 --> 00:07:33,639
planning to do not only linting our

00:07:31,149 --> 00:07:36,369
plans includes more advanced at code

00:07:33,639 --> 00:07:38,559
analysis and we are also having some

00:07:36,369 --> 00:07:40,809
prototypes with this we're planning to

00:07:38,559 --> 00:07:42,819
introduce analysis of templates using

00:07:40,809 --> 00:07:45,279
Gen Yers template parser we are going to

00:07:42,819 --> 00:07:48,459
get the output AST and we're going to

00:07:45,279 --> 00:07:50,409
analyze it we're also planning to add

00:07:48,459 --> 00:07:51,909
out correct suggestions so for instance

00:07:50,409 --> 00:07:54,099
if we verify that you're not following

00:07:51,909 --> 00:07:55,809
any of the best practices we're going to

00:07:54,099 --> 00:07:57,759
give you a couple of options and when

00:07:55,809 --> 00:08:00,309
you choose any of these options your

00:07:57,759 --> 00:08:03,279
code is going to get being referred out

00:08:00,309 --> 00:08:05,919
automatically refactor for you another

00:08:03,279 --> 00:08:08,079
one we have is to add analysis of lazy

00:08:05,919 --> 00:08:11,409
loading boundaries so when you have

00:08:08,079 --> 00:08:14,289
later a sink route definitions and you

00:08:11,409 --> 00:08:16,239
have such lazy loading boundaries and

00:08:14,289 --> 00:08:18,069
you have a transitive dependency inside

00:08:16,239 --> 00:08:19,899
of any of these lazy loading boundaries

00:08:18,069 --> 00:08:21,819
which violates the lazy loading of your

00:08:19,899 --> 00:08:24,969
application we're going to rise a

00:08:21,819 --> 00:08:27,249
warning we're planning to do much more

00:08:24,969 --> 00:08:29,169
but what we'll appreciate even more is

00:08:27,249 --> 00:08:30,339
to get your feedback so this here is a

00:08:29,169 --> 00:08:33,430
link to a Google Form

00:08:30,339 --> 00:08:35,079
that's we love you to feel and tell us

00:08:33,430 --> 00:08:38,409
what you would like to see inside of

00:08:35,079 --> 00:08:40,029
code Lizer so yeah this is the book at

00:08:38,409 --> 00:08:41,439
our roads if you're interested you can

00:08:40,029 --> 00:08:44,970
take advantage of this discount code

00:08:41,439 --> 00:08:46,959
that is going to give you 25% off and

00:08:44,970 --> 00:08:48,529
yeah thank you very much for your

00:08:46,959 --> 00:08:50,589
attention

00:08:48,529 --> 00:08:50,589

YouTube URL: https://www.youtube.com/watch?v=bci-Z6nURgE


