Title: Multi Slot Transclusion - Ken Snyder
Publication date: 2016-05-06
Playlist: ng-conf 2016
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:17,000 --> 00:00:24,150
there we go all right today I'm going to

00:00:21,330 --> 00:00:26,220
talk about multi slot transclusion which

00:00:24,150 --> 00:00:29,070
is new feature in angular 1.5 and

00:00:26,220 --> 00:00:33,809
angular to raise of hands who's heard of

00:00:29,070 --> 00:00:38,219
it great keep your hands up I need your

00:00:33,809 --> 00:00:39,690
help what I want you to do is take these

00:00:38,219 --> 00:00:42,930
nerf guns we're going to pass out some

00:00:39,690 --> 00:00:44,690
nerf guns and it's yours to keep but I

00:00:42,930 --> 00:00:48,270
need you to fire it at the right time

00:00:44,690 --> 00:00:50,100
okay fire it on my signal okay so I've

00:00:48,270 --> 00:00:52,610
got five minutes here to talk to you so

00:00:50,100 --> 00:00:52,610
buckle up

00:00:55,980 --> 00:00:59,550
if you're not an angular ninja multi

00:00:58,050 --> 00:01:01,590
slot transclusion might sound as

00:00:59,550 --> 00:01:05,040
ridiculous as a turbo and cab you later

00:01:01,590 --> 00:01:09,810
I told my boss I was speaking on multi

00:01:05,040 --> 00:01:11,310
slot transclusion and he said why and he

00:01:09,810 --> 00:01:15,420
wouldn't give me the time off because he

00:01:11,310 --> 00:01:18,330
thought I just made up some words so

00:01:15,420 --> 00:01:20,100
let's review standard transclusion is

00:01:18,330 --> 00:01:22,259
transplanting Dom nodes from one

00:01:20,100 --> 00:01:24,869
component into another but maintaining

00:01:22,259 --> 00:01:27,270
the scope of the original component in

00:01:24,869 --> 00:01:30,149
angular 1 it is done with an NG trans

00:01:27,270 --> 00:01:33,869
clued attribute in angular 2 with an NG

00:01:30,149 --> 00:01:36,000
content element for example a simple

00:01:33,869 --> 00:01:39,660
modal message has a heading a close

00:01:36,000 --> 00:01:42,420
button and body HTML we want to pass our

00:01:39,660 --> 00:01:46,950
modal message to things a string to use

00:01:42,420 --> 00:01:48,720
for the header and some HTML content so

00:01:46,950 --> 00:01:51,080
how do you do regular transclusion in

00:01:48,720 --> 00:01:51,080
angular 1

00:01:51,670 --> 00:01:58,219
take this HTML template that appears in

00:01:55,640 --> 00:02:00,319
our controller we're using a component

00:01:58,219 --> 00:02:03,079
called modal message and passing the

00:02:00,319 --> 00:02:05,499
heading as a string and the content we

00:02:03,079 --> 00:02:08,149
want displayed inside the modal message

00:02:05,499 --> 00:02:11,450
and Ramona message component has a

00:02:08,149 --> 00:02:14,060
template like this note that we pull in

00:02:11,450 --> 00:02:19,549
a heading as VM da head E and we use the

00:02:14,060 --> 00:02:21,349
ng trans fluid at rebuke and here's the

00:02:19,549 --> 00:02:23,989
JavaScript for a modal message component

00:02:21,349 --> 00:02:25,780
you can say see we are binding the

00:02:23,989 --> 00:02:29,049
attribute heading to our controller

00:02:25,780 --> 00:02:31,910
using angular 1.5 s new component method

00:02:29,049 --> 00:02:34,730
and we are enabling transclusion by

00:02:31,910 --> 00:02:37,660
setting trans fluid to true let's look

00:02:34,730 --> 00:02:40,760
at how this plays out in the template

00:02:37,660 --> 00:02:44,900
first the controller passes the turbo

00:02:40,760 --> 00:02:46,760
and cab you later as a string then all

00:02:44,900 --> 00:02:49,579
the contents inside of the modal message

00:02:46,760 --> 00:02:52,250
HTML element get transplanted into our

00:02:49,579 --> 00:02:55,250
component on the node with the ng trans

00:02:52,250 --> 00:02:59,269
flute attribute the P element and its

00:02:55,250 --> 00:03:01,549
children are transplanted one important

00:02:59,269 --> 00:03:04,099
feature is that anything inside the

00:03:01,549 --> 00:03:06,620
modal message element is executed in the

00:03:04,099 --> 00:03:08,750
controller scope although it is

00:03:06,620 --> 00:03:10,010
transplanted it is only affected by the

00:03:08,750 --> 00:03:12,349
controller scope and does not have

00:03:10,010 --> 00:03:14,299
access to the component and by the same

00:03:12,349 --> 00:03:16,220
token the component will have its own

00:03:14,299 --> 00:03:20,090
scope and does not affect the

00:03:16,220 --> 00:03:23,829
transplanted content so let's try out

00:03:20,090 --> 00:03:23,829
multi slot transclusion

00:03:30,849 --> 00:03:34,329
it is time

00:03:47,060 --> 00:03:52,560
we've got a jam here but bolt I slap

00:03:50,550 --> 00:04:04,500
transclusion will make you as cool as

00:03:52,560 --> 00:04:06,240
keano wielding multiple guns okay so

00:04:04,500 --> 00:04:09,890
take our modal message example but now

00:04:06,240 --> 00:04:13,410
we want to allow HTML inside the heading

00:04:09,890 --> 00:04:15,930
here we've changed our h2 element to a

00:04:13,410 --> 00:04:17,640
slot heading element we chose that name

00:04:15,930 --> 00:04:19,770
arbitrarily there is no slot heading

00:04:17,640 --> 00:04:22,950
component you can use any tag name you

00:04:19,770 --> 00:04:24,810
like standard or custom and we wrapped

00:04:22,950 --> 00:04:29,280
our p element in a slot body element

00:04:24,810 --> 00:04:30,840
which is also arbitrarily named we've

00:04:29,280 --> 00:04:32,850
updated our component template to have

00:04:30,840 --> 00:04:35,430
two elements where we assign values to

00:04:32,850 --> 00:04:38,850
the ng trans fluid attributes instead of

00:04:35,430 --> 00:04:40,380
using a single empty attribute an effect

00:04:38,850 --> 00:04:42,750
is that the slot heading and his

00:04:40,380 --> 00:04:45,120
children get transplanted into the h2

00:04:42,750 --> 00:04:48,930
and slot body and his children get

00:04:45,120 --> 00:04:51,090
transplanted into the div and in the

00:04:48,930 --> 00:04:53,160
component definition instead of setting

00:04:51,090 --> 00:04:56,160
transferred to true we pass an object

00:04:53,160 --> 00:04:58,560
with tag names this is where we specify

00:04:56,160 --> 00:05:03,570
in camel case that we use the tag slot

00:04:58,560 --> 00:05:05,460
heading and slot body angular 2 requires

00:05:03,570 --> 00:05:10,230
nothing extra inside the component

00:05:05,460 --> 00:05:12,410
JavaScript NAND cat approves of angular

00:05:10,230 --> 00:05:12,410
00:05:14,270 --> 00:05:19,490
so in angular 2 we use the built-in ng

00:05:16,700 --> 00:05:21,740
content component ng content looks at

00:05:19,490 --> 00:05:24,590
the select attribute for CSS selector

00:05:21,740 --> 00:05:27,470
we've chosen to use slot heading and

00:05:24,590 --> 00:05:29,330
slot body is empty attributes that will

00:05:27,470 --> 00:05:34,010
transplant content from the slots into

00:05:29,330 --> 00:05:36,950
the ng content elements so what are some

00:05:34,010 --> 00:05:39,740
other use cases existing components that

00:05:36,950 --> 00:05:41,570
are content only or use inner HTML may

00:05:39,740 --> 00:05:44,360
be good candidates for updating to use

00:05:41,570 --> 00:05:46,880
multi slot transclusion or for new

00:05:44,360 --> 00:05:48,560
component you might have a panel that

00:05:46,880 --> 00:05:51,980
needs sort or filter controls in the

00:05:48,560 --> 00:05:55,730
header or maybe a fancy css3 widget with

00:05:51,980 --> 00:05:57,590
multiple content outlets if you'd like

00:05:55,730 --> 00:06:00,470
to spend a few minutes admiring the

00:05:57,590 --> 00:06:02,120
glamour shots of the angular team while

00:06:00,470 --> 00:06:04,940
learning about multi slot transclusion

00:06:02,120 --> 00:06:07,160
check out my plunker example it uses a

00:06:04,940 --> 00:06:09,310
card component which encapsulates the

00:06:07,160 --> 00:06:11,690
functionality of clicking arrows to flip

00:06:09,310 --> 00:06:15,110
the card has a front slot and a back

00:06:11,690 --> 00:06:17,600
slot that receive content for more

00:06:15,110 --> 00:06:19,720
information check out these links thank

00:06:17,600 --> 00:06:19,720

YouTube URL: https://www.youtube.com/watch?v=59IY2MIl5u0


