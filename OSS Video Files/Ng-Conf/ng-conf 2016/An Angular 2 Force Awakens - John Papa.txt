Title: An Angular 2 Force Awakens - John Papa
Publication date: 2016-05-04
Playlist: ng-conf 2016
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:01,700 --> 00:00:07,379
most most days you'll find him making an

00:00:05,490 --> 00:00:10,280
excellent spaghetti alla Carbonara and

00:00:07,379 --> 00:00:14,690
saying the word Kaka over and over again

00:00:10,280 --> 00:00:14,690
please welcome to the stage John Papa

00:00:15,560 --> 00:00:24,240
thanks Joe so you guys excited about

00:00:20,039 --> 00:00:26,070
angular 2 it's pretty cool and it's on

00:00:24,240 --> 00:00:29,910
the best day of the year right may the

00:00:26,070 --> 00:00:32,040
4th Star Wars day so with that a theme

00:00:29,910 --> 00:00:34,649
of an angular 2 force awakens my

00:00:32,040 --> 00:00:36,930
favorite movies and angular 2 is a force

00:00:34,649 --> 00:00:38,670
as it's coming through I'm John Papa I'm

00:00:36,930 --> 00:00:40,710
a Google development expert for the

00:00:38,670 --> 00:00:42,629
angular team and there's been an

00:00:40,710 --> 00:00:44,550
awakening here to me angular 1 was

00:00:42,629 --> 00:00:47,039
awesome but angular 2 just blows it away

00:00:44,550 --> 00:00:49,320
there's so much great stuff coming with

00:00:47,039 --> 00:00:50,879
angular 2 and it's all of us in this

00:00:49,320 --> 00:00:52,340
room thank you for wearing your costumes

00:00:50,879 --> 00:00:54,270
today took this photo out there

00:00:52,340 --> 00:00:57,120
everybody's excited to start using

00:00:54,270 --> 00:00:58,710
angular as like I am but I want to share

00:00:57,120 --> 00:01:00,840
with you a development experience story

00:00:58,710 --> 00:01:02,670
how do we actually write code in angular

00:01:00,840 --> 00:01:05,129
because it's not just about what the

00:01:02,670 --> 00:01:06,960
tool does software is software it's

00:01:05,129 --> 00:01:08,640
about what the people do with the tool

00:01:06,960 --> 00:01:10,979
it's about the experience we have with

00:01:08,640 --> 00:01:12,990
coding it and something you're going to

00:01:10,979 --> 00:01:15,960
notice or more specifically not notice

00:01:12,990 --> 00:01:18,509
during my talk is less there's less

00:01:15,960 --> 00:01:20,460
things in angular to you have to do than

00:01:18,509 --> 00:01:22,049
angular 1 so you're going to notice that

00:01:20,460 --> 00:01:24,659
I'm writing code but you're going to see

00:01:22,049 --> 00:01:26,159
things that you're not seeing there's a

00:01:24,659 --> 00:01:27,990
lot less thing we have actually take

00:01:26,159 --> 00:01:30,869
care of so I'm going to go over 7 keys

00:01:27,990 --> 00:01:33,119
in angular 2 modules components in

00:01:30,869 --> 00:01:34,829
templates the key parts of angular 2 to

00:01:33,119 --> 00:01:37,229
build an application we're going to be

00:01:34,829 --> 00:01:39,329
using es6 modules how data binding works

00:01:37,229 --> 00:01:41,520
structural directives to build different

00:01:39,329 --> 00:01:43,710
code services we can pull in other parts

00:01:41,520 --> 00:01:46,680
the application may be using HTTP and

00:01:43,710 --> 00:01:48,149
the new dependency injection platform so

00:01:46,680 --> 00:01:51,840
with that let's just write some code

00:01:48,149 --> 00:01:53,520
together nothing could go wrong right

00:01:51,840 --> 00:01:55,619
all right so we've got an application

00:01:53,520 --> 00:01:57,420
here and what I've done is I've pulled

00:01:55,619 --> 00:01:58,049
down the QuickStart which is up on the

00:01:57,420 --> 00:01:59,969
docks

00:01:58,049 --> 00:02:03,240
so once you pull down the QuickStart if

00:01:59,969 --> 00:02:07,560
you run it you can write NPM start and

00:02:03,240 --> 00:02:09,360
we'll crank it up and hey it works thank

00:02:07,560 --> 00:02:14,040
you for having me and I'll see you guys

00:02:09,360 --> 00:02:15,390
around the conference all right so

00:02:14,040 --> 00:02:16,379
you've got your Quick Start up here and

00:02:15,390 --> 00:02:18,629
we want to add some things the

00:02:16,379 --> 00:02:20,940
application it's Star Wars day and we've

00:02:18,629 --> 00:02:23,340
got tour of Heroes a great demo up on

00:02:20,940 --> 00:02:25,110
the documentation let's figure we want

00:02:23,340 --> 00:02:26,549
to create a list of heroes in our

00:02:25,110 --> 00:02:28,890
application well come into our app

00:02:26,549 --> 00:02:31,049
components and over in the African

00:02:28,890 --> 00:02:32,430
opponent we want to use interpolation up

00:02:31,049 --> 00:02:34,459
here instead of just hard coding this

00:02:32,430 --> 00:02:36,360
value let's go ahead and put in a title

00:02:34,459 --> 00:02:38,370
well this means we have to create a

00:02:36,360 --> 00:02:42,060
property so we'll create the title down

00:02:38,370 --> 00:02:43,290
here and by doing just simply that we

00:02:42,060 --> 00:02:46,140
can take the title and displayed on the

00:02:43,290 --> 00:02:48,299
page and then over here I still have got

00:02:46,140 --> 00:02:49,920
my title of air wonderful so what if I

00:02:48,299 --> 00:02:52,879
want to add a list of Heroes to my app

00:02:49,920 --> 00:02:54,959
let's go and create a hero's folder and

00:02:52,879 --> 00:02:58,739
then over in the folder we're going to

00:02:54,959 --> 00:03:00,269
create a hero's components so once I

00:02:58,739 --> 00:03:02,430
create that component it'd be nice if I

00:03:00,269 --> 00:03:04,079
had some way to quickly create the

00:03:02,430 --> 00:03:05,340
component well there's some snippets

00:03:04,079 --> 00:03:07,590
that we're going to take advantage of

00:03:05,340 --> 00:03:11,160
where I can instantly type all this in

00:03:07,590 --> 00:03:12,239
no I did not type that fast so in here I

00:03:11,160 --> 00:03:14,160
can say all right I'm going to type in

00:03:12,239 --> 00:03:15,989
my heroes there's my components and

00:03:14,160 --> 00:03:18,060
everything's up and running for this guy

00:03:15,989 --> 00:03:19,530
on him I want to have a list of heroes

00:03:18,060 --> 00:03:21,359
and again because you don't want to

00:03:19,530 --> 00:03:25,139
watch me type an array I'm going to copy

00:03:21,359 --> 00:03:26,940
the array and inside of my anit I'm

00:03:25,139 --> 00:03:28,470
going to create this hero's property

00:03:26,940 --> 00:03:30,510
which has got a bunch of hero names in

00:03:28,470 --> 00:03:32,220
it well I'm going to need a hero's

00:03:30,510 --> 00:03:34,799
property as well and I want to have a

00:03:32,220 --> 00:03:36,329
class called hero so where do I get this

00:03:34,799 --> 00:03:38,190
guy from well I'm going to have to

00:03:36,329 --> 00:03:40,919
create a new model so I'll create a new

00:03:38,190 --> 00:03:43,650
file called hero model and we better

00:03:40,919 --> 00:03:45,890
spell it right and up in here we'll

00:03:43,650 --> 00:03:49,310
create a class

00:03:45,890 --> 00:03:51,530
and this guy is going to have an ID of a

00:03:49,310 --> 00:03:54,800
number and we'll give them a name which

00:03:51,530 --> 00:03:56,840
is a string and we'll come back over

00:03:54,800 --> 00:03:59,270
here but how do we use that hero in this

00:03:56,840 --> 00:04:01,460
class we have to import him using

00:03:59,270 --> 00:04:03,620
modules so thus this were the modules

00:04:01,460 --> 00:04:05,420
come into play for us and notice that

00:04:03,620 --> 00:04:07,910
I'm pulling code in here and what am I

00:04:05,420 --> 00:04:09,440
not doing I'm not adding a script tag to

00:04:07,910 --> 00:04:11,210
my index.html I don't have to worry

00:04:09,440 --> 00:04:12,950
about this because the module loading

00:04:11,210 --> 00:04:15,020
that angular comes with is automatically

00:04:12,950 --> 00:04:16,820
going to load this code up so now that

00:04:15,020 --> 00:04:19,130
I've got this list of heroes I want to

00:04:16,820 --> 00:04:20,630
display it inside this HTML file well

00:04:19,130 --> 00:04:23,690
I've got to go create that HTML file so

00:04:20,630 --> 00:04:25,790
let's go create him as well so over here

00:04:23,690 --> 00:04:27,740
we'll create the HTML and let's create a

00:04:25,790 --> 00:04:30,530
ul and I'm going to use a special class

00:04:27,740 --> 00:04:32,990
that I've got here called heroes we'll

00:04:30,530 --> 00:04:34,310
use a little bit of Emmet to do this and

00:04:32,990 --> 00:04:37,070
inside of there I'm going to create an

00:04:34,310 --> 00:04:38,360
Li well if I want to display the Kiros

00:04:37,070 --> 00:04:41,390
I'm going to have to use a little bit of

00:04:38,360 --> 00:04:44,510
magic something called the ng 4 so I'll

00:04:41,390 --> 00:04:47,090
type in another snippet ng 2 and then I

00:04:44,510 --> 00:04:49,750
go down to 4 and I can say all right

00:04:47,090 --> 00:04:51,830
give me a hero in the list of heroes and

00:04:49,750 --> 00:04:54,770
the first thing I'll do inside of there

00:04:51,830 --> 00:04:55,850
is I'll put out the hero's name but I

00:04:54,770 --> 00:04:57,110
want to put little bit more in there too

00:04:55,850 --> 00:04:58,760
let's use a little bit of styling so

00:04:57,110 --> 00:05:01,040
we're going to create a span and that

00:04:58,760 --> 00:05:02,660
spans got a class called a badge inside

00:05:01,040 --> 00:05:06,740
of there I'm going to create a here with

00:05:02,660 --> 00:05:09,080
an ID so now I've got my list of heroes

00:05:06,740 --> 00:05:11,000
that hero that's over here that's going

00:05:09,080 --> 00:05:13,010
to be the guy who is over in this array

00:05:11,000 --> 00:05:14,960
that I created and my heroes a right

00:05:13,010 --> 00:05:16,760
well I want to use a little bit of style

00:05:14,960 --> 00:05:20,090
and you don't want to watch me type CSS

00:05:16,760 --> 00:05:22,040
believe me so I'm going to go ahead and

00:05:20,090 --> 00:05:25,340
do a little copy-paste magic close your

00:05:22,040 --> 00:05:28,130
eyes and we've got a little bit of CSS

00:05:25,340 --> 00:05:31,160
now so how do I associate that CSS with

00:05:28,130 --> 00:05:35,210
my component I come into here and I can

00:05:31,160 --> 00:05:37,370
type in style URLs and then I got my

00:05:35,210 --> 00:05:40,010
Heroes component CSS which I pass in to

00:05:37,370 --> 00:05:41,930
it one thing you'll notice I'm not doing

00:05:40,010 --> 00:05:44,630
again is I'm not typing an app slash

00:05:41,930 --> 00:05:46,250
heroes slash heroes component CSS this

00:05:44,630 --> 00:05:47,600
is a big problem in larger apps when you

00:05:46,250 --> 00:05:50,120
move files around because then you have

00:05:47,600 --> 00:05:52,010
to change the file paths to I don't need

00:05:50,120 --> 00:05:54,169
to do that because angular is using this

00:05:52,010 --> 00:05:56,120
module ID property to figure out using

00:05:54,169 --> 00:05:58,460
the module loader where am I located

00:05:56,120 --> 00:05:58,950
it's contextual so it actually prepends

00:05:58,460 --> 00:06:00,960
that

00:05:58,950 --> 00:06:02,100
for us and takes care of it so that's a

00:06:00,960 --> 00:06:04,290
little bit of magic that we don't have

00:06:02,100 --> 00:06:06,510
to worry about so now that I've got this

00:06:04,290 --> 00:06:09,000
hero's component I've got this element

00:06:06,510 --> 00:06:11,580
called tour of heroes heroes and I need

00:06:09,000 --> 00:06:13,380
to put it back on my app components so

00:06:11,580 --> 00:06:16,650
over here I'm going to change my string

00:06:13,380 --> 00:06:19,550
to a back tick that's the key nobody

00:06:16,650 --> 00:06:19,550
knew was on their keyboard

00:06:20,400 --> 00:06:23,580
and then I'm going to go up here and

00:06:22,110 --> 00:06:25,139
just type in the element right below it

00:06:23,580 --> 00:06:26,639
so the back take is going to be a

00:06:25,139 --> 00:06:28,949
multi-line string and I could put my two

00:06:26,639 --> 00:06:32,250
heroes there but wait does the browser

00:06:28,949 --> 00:06:34,500
know what at or hero's element is no so

00:06:32,250 --> 00:06:36,720
let's go ahead and import that component

00:06:34,500 --> 00:06:38,580
as well so over here we're going to go

00:06:36,720 --> 00:06:42,300
into the hero's folder and get the

00:06:38,580 --> 00:06:45,030
hero's components components like the

00:06:42,300 --> 00:06:45,840
hardest work for me to spell and it's

00:06:45,030 --> 00:06:47,310
going to reach in on getting

00:06:45,840 --> 00:06:47,850
intellisense telling me what's in that

00:06:47,310 --> 00:06:50,310
file

00:06:47,850 --> 00:06:52,530
a hero's component great so now we're

00:06:50,310 --> 00:06:54,630
going to declare to angular what I'm

00:06:52,530 --> 00:06:58,440
using on that page well there's this

00:06:54,630 --> 00:07:00,419
directive called Heroes component so now

00:06:58,440 --> 00:07:02,220
we've told the app component how to

00:07:00,419 --> 00:07:05,280
associate itself and to recognize that

00:07:02,220 --> 00:07:06,479
hero's component on the page so doing

00:07:05,280 --> 00:07:08,790
all this let's take a look at our

00:07:06,479 --> 00:07:10,380
application and now we have an

00:07:08,790 --> 00:07:15,660
application which has got a bunch of

00:07:10,380 --> 00:07:16,560
heroes over here so how many browsers do

00:07:15,660 --> 00:07:18,660
I have open that's always a good

00:07:16,560 --> 00:07:22,500
question hey actually that's the

00:07:18,660 --> 00:07:25,050
application I'm like I only had five

00:07:22,500 --> 00:07:27,539
what happened they multiplied let's kill

00:07:25,050 --> 00:07:29,460
that one so now that I've got this list

00:07:27,539 --> 00:07:31,050
I've got my little CSS running over here

00:07:29,460 --> 00:07:32,100
let's say I wanted to do something like

00:07:31,050 --> 00:07:33,960
select a hero

00:07:32,100 --> 00:07:36,570
we happen to like Rey so we'll select

00:07:33,960 --> 00:07:38,190
Rey well to do that I'm going to go back

00:07:36,570 --> 00:07:40,500
into my hero's component and use a

00:07:38,190 --> 00:07:41,940
couple more features of angular inside

00:07:40,500 --> 00:07:46,020
of here we're going to go back into here

00:07:41,940 --> 00:07:48,060
and we're going to create a click event

00:07:46,020 --> 00:07:49,919
and we're going to bind to it with the

00:07:48,060 --> 00:07:51,810
parenthesis that says go ahead and

00:07:49,919 --> 00:07:53,580
communicate back down to our component

00:07:51,810 --> 00:07:55,169
so we can call something so we're going

00:07:53,580 --> 00:07:56,729
to create a function called on select

00:07:55,169 --> 00:07:58,979
and we're going to pass the hero to it

00:07:56,729 --> 00:08:01,560
so we'll go back into the component now

00:07:58,979 --> 00:08:03,060
we've got to create that function so I'm

00:08:01,560 --> 00:08:05,630
going to put an on select function over

00:08:03,060 --> 00:08:08,580
here and it's going to get a hero and

00:08:05,630 --> 00:08:09,900
there's my code for it so the hero is

00:08:08,580 --> 00:08:11,400
going to come in but I have to set this

00:08:09,900 --> 00:08:14,370
to a property we'll create a new

00:08:11,400 --> 00:08:15,660
property called selected hero and we'll

00:08:14,370 --> 00:08:18,330
copy that because now we have to create

00:08:15,660 --> 00:08:20,880
that in our class and that's also going

00:08:18,330 --> 00:08:22,320
to be of type hero up top so now we

00:08:20,880 --> 00:08:24,090
selected it but it's not going to do

00:08:22,320 --> 00:08:26,250
anything yet we could console.log it but

00:08:24,090 --> 00:08:29,039
that's kind of cheating so let's go

00:08:26,250 --> 00:08:30,570
ahead and do a little CSS magic again up

00:08:29,039 --> 00:08:33,180
into here we can take advantage of

00:08:30,570 --> 00:08:33,550
property binding to bind to a class I

00:08:33,180 --> 00:08:36,399
have a

00:08:33,550 --> 00:08:39,310
is called selected in my CSS so what I

00:08:36,399 --> 00:08:41,140
want to do is say class not selected and

00:08:39,310 --> 00:08:43,240
I want to bind out property binding and

00:08:41,140 --> 00:08:44,980
then when I do that I want to set that

00:08:43,240 --> 00:08:47,410
to an expression I want to say when the

00:08:44,980 --> 00:08:49,570
hero that's in that row is equal to the

00:08:47,410 --> 00:08:51,730
selected hero property let's make sure

00:08:49,570 --> 00:08:53,890
that's the name that I've used and it is

00:08:51,730 --> 00:08:56,380
when that happens it's going to apply

00:08:53,890 --> 00:08:58,990
the selected class to this particular

00:08:56,380 --> 00:09:01,300
element so now if I flip over to Chrome

00:08:58,990 --> 00:09:04,600
and I highlight somebody I can select

00:09:01,300 --> 00:09:06,339
them not too bad right think about how

00:09:04,600 --> 00:09:08,170
you do that in angular 1 with different

00:09:06,339 --> 00:09:10,570
kind of things like ng class now we

00:09:08,170 --> 00:09:12,610
don't need any of those ng - directives

00:09:10,570 --> 00:09:15,370
notice we're not using those for ng

00:09:12,610 --> 00:09:18,310
click or ng class or ng style we're just

00:09:15,370 --> 00:09:19,000
using what's built into the Dom okay but

00:09:18,310 --> 00:09:21,399
we can do a bit more

00:09:19,000 --> 00:09:23,140
what about changing data when I select

00:09:21,399 --> 00:09:25,779
somebody what if I wanted to create

00:09:23,140 --> 00:09:28,029
another hero component something is show

00:09:25,779 --> 00:09:30,010
the details well let's do that let's

00:09:28,029 --> 00:09:34,839
push the limits here we'll create a hero

00:09:30,010 --> 00:09:35,980
components and inside the hero component

00:09:34,839 --> 00:09:38,290
we'll take advantage of our snippets

00:09:35,980 --> 00:09:41,709
again and I can call this guy to our

00:09:38,290 --> 00:09:43,870
hero's hero and I'll call the hero

00:09:41,709 --> 00:09:45,610
components like that and notice we're

00:09:43,870 --> 00:09:47,500
using a standard set of conventions or

00:09:45,610 --> 00:09:48,790
file naming and symbol naming which you

00:09:47,500 --> 00:09:50,890
can find all up in the style guide

00:09:48,790 --> 00:09:53,890
that's a brad announced in the keynote

00:09:50,890 --> 00:09:55,959
and in this key this component we don't

00:09:53,890 --> 00:09:57,820
actually need to do a lot we just need a

00:09:55,959 --> 00:10:00,040
hero property and it's going to be of

00:09:57,820 --> 00:10:02,230
type hero and again we want to import

00:10:00,040 --> 00:10:04,390
that because we've got that class we can

00:10:02,230 --> 00:10:06,520
take advantage of so I can go in and say

00:10:04,390 --> 00:10:08,770
hero model and I can get the hero out of

00:10:06,520 --> 00:10:10,750
here but if I want to pass the hero in

00:10:08,770 --> 00:10:13,300
to this hero detail component I need a

00:10:10,750 --> 00:10:14,560
way to get in unlike an angular 1 where

00:10:13,300 --> 00:10:16,480
directives could kind of reach out or

00:10:14,560 --> 00:10:19,240
components could reach out to other

00:10:16,480 --> 00:10:21,160
components in scope in angular 2 they're

00:10:19,240 --> 00:10:22,390
a little more strict about this where

00:10:21,160 --> 00:10:24,610
you have to actually tell it what you

00:10:22,390 --> 00:10:26,199
want to pass in or out so we're going to

00:10:24,610 --> 00:10:29,350
tell it this guy here is an input

00:10:26,199 --> 00:10:30,880
property and to get input which is a

00:10:29,350 --> 00:10:33,070
special decorator I've got to import

00:10:30,880 --> 00:10:35,320
that from angular so now we told angular

00:10:33,070 --> 00:10:37,570
that we've got this thing called a hero

00:10:35,320 --> 00:10:39,610
which we're going to use inside of our

00:10:37,570 --> 00:10:42,520
template so I'm going to go create a

00:10:39,610 --> 00:10:45,529
template and I'm going to create a div

00:10:42,520 --> 00:10:47,269
now what if I don't select a hero I

00:10:45,529 --> 00:10:48,860
want it to break on me so I'm going to

00:10:47,269 --> 00:10:51,439
use another structural directive called

00:10:48,860 --> 00:10:53,449
ng if and ng if I'm going to say if

00:10:51,439 --> 00:10:55,910
there's a hero display this otherwise

00:10:53,449 --> 00:10:57,079
don't even put it in the DOM and then

00:10:55,910 --> 00:10:58,790
we're going to do something like we

00:10:57,079 --> 00:11:02,120
selected and then put our hero's name

00:10:58,790 --> 00:11:03,709
here we'll create an input and we'll say

00:11:02,120 --> 00:11:05,540
we can change this person we're going to

00:11:03,709 --> 00:11:08,029
use a special directive called ng model

00:11:05,540 --> 00:11:11,360
which you wrap with parentheses and

00:11:08,029 --> 00:11:13,490
square brackets now ng model is going to

00:11:11,360 --> 00:11:15,079
be our two-way data-binding the square

00:11:13,490 --> 00:11:16,519
brackets you can think of as saying take

00:11:15,079 --> 00:11:18,740
the value from the component stick it in

00:11:16,519 --> 00:11:20,420
the view and then the parentheses let me

00:11:18,740 --> 00:11:22,220
say okay when I change this value in the

00:11:20,420 --> 00:11:24,529
view send that value back down to the

00:11:22,220 --> 00:11:26,899
component it gives us the ability to do

00:11:24,529 --> 00:11:29,839
our to a data binding and we can bind

00:11:26,899 --> 00:11:31,639
that to hero so now we've got our hero

00:11:29,839 --> 00:11:34,999
component set up but we have to tell our

00:11:31,639 --> 00:11:36,889
hero's components the lists about it so

00:11:34,999 --> 00:11:39,769
again we'll come down here and we'll

00:11:36,889 --> 00:11:44,269
import inside of the hero list this guy

00:11:39,769 --> 00:11:46,399
and we'll go into hero components and

00:11:44,269 --> 00:11:50,209
we'll pull him out it's actually

00:11:46,399 --> 00:11:52,639
singular and then over here we've got a

00:11:50,209 --> 00:11:54,829
declare and say you in this directives

00:11:52,639 --> 00:11:56,870
are using this particular components

00:11:54,829 --> 00:11:58,129
well let's go into our list and we'll

00:11:56,870 --> 00:12:00,529
put it at the top just so it's easy to

00:11:58,129 --> 00:12:02,329
see and I'm going to create a hero

00:12:00,529 --> 00:12:04,490
component like that and I'm going to

00:12:02,329 --> 00:12:06,680
actually add it to that list so now I

00:12:04,490 --> 00:12:08,990
need to pass in the selected hero well

00:12:06,680 --> 00:12:10,670
the property on my component was called

00:12:08,990 --> 00:12:12,829
hero so I'm going to bind to that so I

00:12:10,670 --> 00:12:14,660
use the square brackets and then inside

00:12:12,829 --> 00:12:17,509
of there I'm going to type in selected

00:12:14,660 --> 00:12:19,250
hero like that so now when I select the

00:12:17,509 --> 00:12:21,529
hero it's going to set the hero property

00:12:19,250 --> 00:12:24,019
go into my hero detail component and it

00:12:21,529 --> 00:12:25,430
should be displaying on the screen so

00:12:24,019 --> 00:12:28,129
let's flip back over to our application

00:12:25,430 --> 00:12:30,709
and when I select here I've bound to the

00:12:28,129 --> 00:12:33,230
object a little debugging on the fly

00:12:30,709 --> 00:12:35,839
notice in the hero component I've bound

00:12:33,230 --> 00:12:37,500
to the actual hero I actually want to

00:12:35,839 --> 00:12:39,570
show the name

00:12:37,500 --> 00:12:41,610
so over here we've got a list I can type

00:12:39,570 --> 00:12:43,350
in Chewbacca or Rey and I can change

00:12:41,610 --> 00:12:45,920
Ray's name to Luke because we all know

00:12:43,350 --> 00:12:50,820
where race coming from right we hope

00:12:45,920 --> 00:12:54,990
maybe Ben I don't know okay for all we

00:12:50,820 --> 00:12:56,850
know it could be this guy so we put all

00:12:54,990 --> 00:12:58,620
this in there and it loads up looks

00:12:56,850 --> 00:13:00,450
great we got to a data binding we can

00:12:58,620 --> 00:13:03,570
select different people we can edit them

00:13:00,450 --> 00:13:05,700
what about not hard coding is ever to

00:13:03,570 --> 00:13:07,290
here like the hard code I mean real

00:13:05,700 --> 00:13:09,930
applications you tend to just hard code

00:13:07,290 --> 00:13:12,050
it right into the view right let's

00:13:09,930 --> 00:13:14,040
pretend that we don't like the hard code

00:13:12,050 --> 00:13:16,140
instead we can take advantage of

00:13:14,040 --> 00:13:18,600
angular2 services so let's create a new

00:13:16,140 --> 00:13:21,000
service in our heroes folder we're

00:13:18,600 --> 00:13:23,970
called a hero service and inside of

00:13:21,000 --> 00:13:26,790
there we'll use another snippet actually

00:13:23,970 --> 00:13:29,370
angular2 snippet would be better there

00:13:26,790 --> 00:13:31,470
we go and we'll call this guy hero now

00:13:29,370 --> 00:13:34,470
notice a service is just a class there

00:13:31,470 --> 00:13:38,720
is no provider constant value factory

00:13:34,470 --> 00:13:38,720
service Thank You Igor

00:13:43,160 --> 00:13:46,890
so we just use a plain old class and I

00:13:45,510 --> 00:13:48,690
create a plain old function I think

00:13:46,890 --> 00:13:50,730
we're all pretty good at doing that and

00:13:48,690 --> 00:13:53,040
I can just return the value of get

00:13:50,730 --> 00:13:54,990
heroes for now all right so I want to

00:13:53,040 --> 00:13:57,720
use this hero service inside of my

00:13:54,990 --> 00:13:59,040
heroes component to get that list to do

00:13:57,720 --> 00:13:59,460
that of course I'm going to import up

00:13:59,040 --> 00:14:01,440
top

00:13:59,460 --> 00:14:04,710
so we'll import this guy will go to

00:14:01,440 --> 00:14:08,460
hero's that service and we'll come back

00:14:04,710 --> 00:14:10,680
to import them now once I import the

00:14:08,460 --> 00:14:13,500
hero's service actually its hero isn't

00:14:10,680 --> 00:14:15,780
it yes it is cool

00:14:13,500 --> 00:14:17,400
once I import that I now have to tell

00:14:15,780 --> 00:14:20,010
the angular injector that this service

00:14:17,400 --> 00:14:22,290
exists so to do that I've got to tell it

00:14:20,010 --> 00:14:23,910
in the providers list this is a way I

00:14:22,290 --> 00:14:25,650
tell angular that the service is

00:14:23,910 --> 00:14:28,680
available and this component or any

00:14:25,650 --> 00:14:30,240
child of it can use it so once I've got

00:14:28,680 --> 00:14:32,250
that hero's service then I can use

00:14:30,240 --> 00:14:34,170
constructor injection and say all right

00:14:32,250 --> 00:14:36,030
let's create a hero service here it's a

00:14:34,170 --> 00:14:38,310
type hero service that'll create a

00:14:36,030 --> 00:14:40,950
private property that can use and then

00:14:38,310 --> 00:14:44,600
in here I can say this hero's equals my

00:14:40,950 --> 00:14:47,040
go to this hero service dot get heroes

00:14:44,600 --> 00:14:49,470
like that so now I'm getting

00:14:47,040 --> 00:14:51,480
asynchronous set of values from my

00:14:49,470 --> 00:14:53,070
service because I set the provider up

00:14:51,480 --> 00:14:54,900
here to felt about it so the angular

00:14:53,070 --> 00:14:56,940
injector knows it's there the

00:14:54,900 --> 00:14:58,740
constructor says hey Aguilar injector do

00:14:56,940 --> 00:15:01,020
you know something known as the hero

00:14:58,740 --> 00:15:03,660
service it says why of course I do John

00:15:01,020 --> 00:15:05,910
it's right here and then it says boom we

00:15:03,660 --> 00:15:08,250
can use this to get our heroes we flip

00:15:05,910 --> 00:15:12,960
back over to our app and look we still

00:15:08,250 --> 00:15:15,630
have heroes yay all right but guys like

00:15:12,960 --> 00:15:17,339
to use HTTP as well don't we so let's

00:15:15,630 --> 00:15:19,530
pretend we had a database now I'm going

00:15:17,339 --> 00:15:21,870
to create a file called heroes Jason

00:15:19,530 --> 00:15:22,830
just to emulate it real quick and again

00:15:21,870 --> 00:15:26,690
because you don't want to watch me type

00:15:22,830 --> 00:15:29,199
JSON let's see if I can paste it in I

00:15:26,690 --> 00:15:32,749
don't think that's the right one

00:15:29,199 --> 00:15:34,550
there we go so we've got our hero's JSON

00:15:32,749 --> 00:15:36,579
file let's say we wanted our service to

00:15:34,550 --> 00:15:39,829
not explicitly hard-code this again

00:15:36,579 --> 00:15:41,029
instead we want to use HTTP well just

00:15:39,829 --> 00:15:43,220
like with the hero service we had to

00:15:41,029 --> 00:15:46,220
tell angular that it existed let's go up

00:15:43,220 --> 00:15:47,959
into our app component or our root here

00:15:46,220 --> 00:15:50,930
in our main component and let's tell it

00:15:47,959 --> 00:15:52,249
that we want to use HTTP so we're going

00:15:50,930 --> 00:15:54,259
to use an import statement again and

00:15:52,249 --> 00:15:56,589
here we're going to say hey angular it's

00:15:54,259 --> 00:15:58,610
going to say yeah John what do you want

00:15:56,589 --> 00:16:00,860
and then it's going to say oh I want

00:15:58,610 --> 00:16:05,689
these HTTP providers what angular

00:16:00,860 --> 00:16:06,949
doesn't talk to you all right so we get

00:16:05,689 --> 00:16:08,959
right through fires we've now told it

00:16:06,949 --> 00:16:11,600
that HTTP is a thing that we need to be

00:16:08,959 --> 00:16:12,889
able to get all right so inside of the

00:16:11,600 --> 00:16:14,540
service now we're going to take

00:16:12,889 --> 00:16:17,360
advantage of HTTP we're going to import

00:16:14,540 --> 00:16:20,089
it down here we're going to say ok let's

00:16:17,360 --> 00:16:22,279
go back into the angular HTTP and we're

00:16:20,089 --> 00:16:23,509
going to pull out HTTP itself and we're

00:16:22,279 --> 00:16:24,259
going to deal with the response so we'll

00:16:23,509 --> 00:16:27,410
get him out

00:16:24,259 --> 00:16:31,040
so now down in here we got to type in

00:16:27,410 --> 00:16:33,279
constructor to get our HTTP service so

00:16:31,040 --> 00:16:35,509
we're going to say okay we'll get HTTP

00:16:33,279 --> 00:16:38,149
the constructor is now going to know how

00:16:35,509 --> 00:16:40,399
to get that guy and inside of our hero's

00:16:38,149 --> 00:16:42,529
function I've got another snippet which

00:16:40,399 --> 00:16:44,749
is called HTTP GET and in there I'm

00:16:42,529 --> 00:16:47,620
going to pass in my different URL I

00:16:44,749 --> 00:16:51,199
think it's a p-- slash arrows jason and

00:16:47,620 --> 00:16:53,480
then it's going to map back a response

00:16:51,199 --> 00:16:54,889
in this case it's just my peer of Jason

00:16:53,480 --> 00:16:56,839
so I'm going to use it but I could map

00:16:54,889 --> 00:16:58,939
and modify that response if I wanted to

00:16:56,839 --> 00:17:01,699
trim it do other things with it as well

00:16:58,939 --> 00:17:04,549
and to use that I'm going to pull in a

00:17:01,699 --> 00:17:06,589
piece of RX RX for reactive extensions

00:17:04,549 --> 00:17:08,569
is where the map function comes out of

00:17:06,589 --> 00:17:11,929
so over this one we're going to type in

00:17:08,569 --> 00:17:13,189
rxjs and then I always get this wrong

00:17:11,929 --> 00:17:15,890
we're going to type it in and see what

00:17:13,189 --> 00:17:17,760
happens and then it's probably the

00:17:15,890 --> 00:17:21,240
backwards let's go look

00:17:17,760 --> 00:17:25,199
it is add operator map I always get in

00:17:21,240 --> 00:17:27,329
backwards so it's letting me pull in the

00:17:25,199 --> 00:17:29,940
map function out of rx so I can use that

00:17:27,329 --> 00:17:32,730
in my mapping now this all sounds great

00:17:29,940 --> 00:17:34,170
but I have got a problem now I'm calling

00:17:32,730 --> 00:17:36,810
HTTP and it's doing an asynchronous

00:17:34,170 --> 00:17:38,820
action well back in my heroes component

00:17:36,810 --> 00:17:40,890
I'm actually getting my heroes

00:17:38,820 --> 00:17:43,710
synchronously so that's not going to

00:17:40,890 --> 00:17:46,410
work anymore so now I can take advantage

00:17:43,710 --> 00:17:48,150
of another snippet called subscribe and

00:17:46,410 --> 00:17:50,490
I pop that in into my service I'm going

00:17:48,150 --> 00:17:51,690
to type in hero service and then I'm

00:17:50,490 --> 00:17:53,820
going to tell the function I wanted to

00:17:51,690 --> 00:17:55,350
get out of my service get heroes and my

00:17:53,820 --> 00:17:57,510
arc is going to bring me back a list of

00:17:55,350 --> 00:17:59,730
heroes and set my property called heroes

00:17:57,510 --> 00:18:03,510
so now I've eight synchronously pulled

00:17:59,730 --> 00:18:05,940
in the heroes from my JSON file from

00:18:03,510 --> 00:18:08,370
this service over here and that service

00:18:05,940 --> 00:18:10,590
is being injected inside of my heroes

00:18:08,370 --> 00:18:12,500
component in the constructor so I run

00:18:10,590 --> 00:18:15,320
back to my application

00:18:12,500 --> 00:18:18,120
subscribe is not a function in there oh

00:18:15,320 --> 00:18:19,170
I didn't put parentheses in today by the

00:18:18,120 --> 00:18:21,710
way when you call functions you need

00:18:19,170 --> 00:18:21,710
parentheses

00:18:21,970 --> 00:18:24,860
hey that's my biggest problem today I'm

00:18:24,080 --> 00:18:27,200
doing pretty good

00:18:24,860 --> 00:18:30,440
so Chewbacca can be here and we can say

00:18:27,200 --> 00:18:34,130
Jesse Liberty is now Chewbacca Rey can

00:18:30,440 --> 00:18:36,500
be Brad a Brad green and Han Solo could

00:18:34,130 --> 00:18:38,480
be war Bell there we go

00:18:36,500 --> 00:18:40,190
I don't think it looks like war that but

00:18:38,480 --> 00:18:41,690
if you see work bell around today you

00:18:40,190 --> 00:18:44,110
can tell me looks like Han Solo he loves

00:18:41,690 --> 00:18:46,160
Star Wars by the way he loves it

00:18:44,110 --> 00:18:48,590
so what we've done here is we built an

00:18:46,160 --> 00:18:50,930
application reviews HTTP to pull data in

00:18:48,590 --> 00:18:53,420
services dependency injection data

00:18:50,930 --> 00:18:55,220
binding property binding and you notice

00:18:53,420 --> 00:18:57,110
we never had to deal with a lot of ng

00:18:55,220 --> 00:18:59,660
dashes inside of a wrap which is pretty

00:18:57,110 --> 00:19:01,640
cool and the application got put

00:18:59,660 --> 00:19:03,800
together pretty quickly so I'm going to

00:19:01,640 --> 00:19:05,360
push this up to github and just to kind

00:19:03,800 --> 00:19:07,940
of wrap up show you some of the tools

00:19:05,360 --> 00:19:09,320
that we used here today so we'd save a

00:19:07,940 --> 00:19:10,850
lot of keystrokes by using these

00:19:09,320 --> 00:19:12,950
snippets that I showed you you can get

00:19:10,850 --> 00:19:15,020
these up for vs code at this link here

00:19:12,950 --> 00:19:16,520
as we add more snippets we'll put them

00:19:15,020 --> 00:19:18,020
up in the style guides people can get to

00:19:16,520 --> 00:19:19,550
them but we can do better than what I

00:19:18,020 --> 00:19:20,030
did today I wrote an app in eighteen

00:19:19,550 --> 00:19:21,860
minutes

00:19:20,030 --> 00:19:23,690
you can forget everything I just showed

00:19:21,860 --> 00:19:26,270
you if you use the angular CLI you can

00:19:23,690 --> 00:19:28,460
do it in about 15 seconds so go check

00:19:26,270 --> 00:19:30,140
out Mike's session or later this week on

00:19:28,460 --> 00:19:32,360
how to use Ingo CLI it'll show you how

00:19:30,140 --> 00:19:34,130
to do all that it's super fast super

00:19:32,360 --> 00:19:36,620
cool and then how do you get on the

00:19:34,130 --> 00:19:39,110
right path so the angular 2 style guide

00:19:36,620 --> 00:19:41,150
is now created is a living document it

00:19:39,110 --> 00:19:42,980
will be updated probably daily for a

00:19:41,150 --> 00:19:44,660
long time there's a whole bunch of

00:19:42,980 --> 00:19:46,760
people who have been really helpful in

00:19:44,660 --> 00:19:49,990
creating this and crafting it so I want

00:19:46,760 --> 00:19:49,990
to thank all these folks out here

00:19:53,960 --> 00:19:57,619
we've also gotten a lot of feedback that

00:19:55,879 --> 00:19:59,720
the vocabulary in the style guide was a

00:19:57,619 --> 00:20:02,659
little iffy sometime so now we're saying

00:19:59,720 --> 00:20:04,340
is we can tell you oh do this avoid this

00:20:02,659 --> 00:20:05,809
and this one's like a consider it's kind

00:20:04,340 --> 00:20:07,340
of like you know you should do this but

00:20:05,809 --> 00:20:09,320
if you don't want to you know it's your

00:20:07,340 --> 00:20:10,970
own choice so you can check out the

00:20:09,320 --> 00:20:12,409
style guide up on the site looks good

00:20:10,970 --> 00:20:14,809
it's actually in the angular io docks

00:20:12,409 --> 00:20:16,399
now I've taken down my github page for

00:20:14,809 --> 00:20:17,720
it that we were using and if you want to

00:20:16,399 --> 00:20:19,879
stay in the right path you want to check

00:20:17,720 --> 00:20:21,649
out minkos talk later this week on code

00:20:19,879 --> 00:20:23,269
Lizer he's working with me directly to

00:20:21,649 --> 00:20:25,220
be able to show you which styles you

00:20:23,269 --> 00:20:27,830
might be not applying and which ones you

00:20:25,220 --> 00:20:30,049
can decide not to do yourself then

00:20:27,830 --> 00:20:30,950
finally thank you for coming and if you

00:20:30,049 --> 00:20:34,659
want to learn more you can check out my

00:20:30,950 --> 00:20:34,659

YouTube URL: https://www.youtube.com/watch?v=WAPQF_GA7Qg


