Title: Ready for Readable Code? - John Papa
Publication date: 2018-11-16
Playlist: ng-conf 2018
Description: 
	ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,880 --> 00:00:05,839
what a great conference isn't it

00:00:04,000 --> 00:00:07,279
it's awesome conference great keynote i

00:00:05,839 --> 00:00:08,160
love seeing how things are getting

00:00:07,279 --> 00:00:10,000
easier

00:00:08,160 --> 00:00:12,320
from the angular team so it's wonderful

00:00:10,000 --> 00:00:14,000
thank you so much steven and rob

00:00:12,320 --> 00:00:16,160
so i want you to all start off today

00:00:14,000 --> 00:00:17,359
with a little bit of a story from me

00:00:16,160 --> 00:00:19,520
i'm going to have you close your eyes

00:00:17,359 --> 00:00:22,320
which is a little bit scary at

00:00:19,520 --> 00:00:23,279
9 00 a.m on the last day of a conference

00:00:22,320 --> 00:00:26,480
but bear with me

00:00:23,279 --> 00:00:28,240
imagine we're all back at work

00:00:26,480 --> 00:00:29,840
we had a great time this week but next

00:00:28,240 --> 00:00:30,720
week the real world starts we're back at

00:00:29,840 --> 00:00:31,679
work now

00:00:30,720 --> 00:00:33,120
and you know you're hanging out with

00:00:31,679 --> 00:00:34,640
your friends you're coding some new

00:00:33,120 --> 00:00:35,840
angular 6 application

00:00:34,640 --> 00:00:37,680
you're just loving what you're working

00:00:35,840 --> 00:00:40,719
with using some stack blitz

00:00:37,680 --> 00:00:41,840
and then a production outage happens uh

00:00:40,719 --> 00:00:43,520
oh

00:00:41,840 --> 00:00:46,239
man i should have taken an extra day off

00:00:43,520 --> 00:00:47,600
right stayed a little bit longer

00:00:46,239 --> 00:00:48,879
so you start going through the process

00:00:47,600 --> 00:00:49,680
you try to figure out what's the problem

00:00:48,879 --> 00:00:52,320
what's the error

00:00:49,680 --> 00:00:54,399
start doing your debugging so we dive in

00:00:52,320 --> 00:00:55,440
and we figure out after some time where

00:00:54,399 --> 00:00:57,280
the problem is

00:00:55,440 --> 00:00:58,559
and we see through the get history of

00:00:57,280 --> 00:01:02,719
our application

00:00:58,559 --> 00:01:02,719
that something was removed from github

00:01:03,440 --> 00:01:07,760
dear developer we found this line of

00:01:06,080 --> 00:01:09,920
code

00:01:07,760 --> 00:01:11,119
if you're reading this there may be an

00:01:09,920 --> 00:01:13,680
outage

00:01:11,119 --> 00:01:15,520
uh-oh we found our logs and they can

00:01:13,680 --> 00:01:18,400
crash the server

00:01:15,520 --> 00:01:18,400
when they're too full

00:01:18,880 --> 00:01:22,159
if you remove the code put it back

00:01:23,600 --> 00:01:27,439
now so you see something like this in

00:01:26,960 --> 00:01:29,360
there

00:01:27,439 --> 00:01:30,720
and we look at this and go well okay

00:01:29,360 --> 00:01:32,320
great we found a problem we can put the

00:01:30,720 --> 00:01:33,759
line of code back but why did this

00:01:32,320 --> 00:01:35,200
happen

00:01:33,759 --> 00:01:36,799
why did this happen in the first place

00:01:35,200 --> 00:01:38,720
could we prevented it could we have

00:01:36,799 --> 00:01:41,119
reduced the amount of time to get to

00:01:38,720 --> 00:01:44,720
this point in the first place

00:01:41,119 --> 00:01:46,399
these unfortunate events are our lives

00:01:44,720 --> 00:01:47,840
so my name is john papa and today i want

00:01:46,399 --> 00:01:49,520
to talk about readable code

00:01:47,840 --> 00:01:51,520
it's a concept that i'm very passionate

00:01:49,520 --> 00:01:53,520
about it's something that i think all of

00:01:51,520 --> 00:01:54,720
you will find that you do

00:01:53,520 --> 00:01:56,159
to the best of your abilities but

00:01:54,720 --> 00:01:56,880
sometimes when we know something really

00:01:56,159 --> 00:02:00,000
well

00:01:56,880 --> 00:02:03,439
we forget how important it is we forget

00:02:00,000 --> 00:02:05,840
to dot the eyes and cross the t's right

00:02:03,439 --> 00:02:07,119
so where do we spend our time how many

00:02:05,840 --> 00:02:11,039
of you here raise a hand

00:02:07,119 --> 00:02:12,160
think you spend more time writing code

00:02:11,039 --> 00:02:13,200
i don't see a lot of hands i don't see a

00:02:12,160 --> 00:02:14,480
lot of anything because there's a lot of

00:02:13,200 --> 00:02:16,160
bright lights so

00:02:14,480 --> 00:02:17,760
i'm going to assume nobody said that

00:02:16,160 --> 00:02:22,000
i'll tell you our little secret in the

00:02:17,760 --> 00:02:25,120
developer industry

00:02:22,000 --> 00:02:26,720
when you talk to your employers

00:02:25,120 --> 00:02:28,720
prospective employers and you ask your

00:02:26,720 --> 00:02:33,680
family what do you do for a living

00:02:28,720 --> 00:02:39,120
what do you say i write code

00:02:33,680 --> 00:02:42,319
do you really are we liars

00:02:39,120 --> 00:02:45,680
the ratio is vastly in the camp of

00:02:42,319 --> 00:02:48,000
reading our code just ask uncle bob

00:02:45,680 --> 00:02:48,959
there's been a lot of studies in this so

00:02:48,000 --> 00:02:51,599
what can we do

00:02:48,959 --> 00:02:53,280
i mean even think about code reviews we

00:02:51,599 --> 00:02:54,560
measure code reviews

00:02:53,280 --> 00:02:58,080
on the amount of time it takes to

00:02:54,560 --> 00:02:58,080
understand what's happening don't we

00:02:58,239 --> 00:03:04,319
this is what happens at work when burke

00:02:59,840 --> 00:03:06,480
holland writes code

00:03:04,319 --> 00:03:08,239
burke's a great guy so it's not about

00:03:06,480 --> 00:03:10,239
red code it's not about being clever

00:03:08,239 --> 00:03:11,360
crafty artful we always hear hey i wrote

00:03:10,239 --> 00:03:14,720
this really awesome thing

00:03:11,360 --> 00:03:18,560
it's a nested ternary function

00:03:14,720 --> 00:03:20,879
you're like get out

00:03:18,560 --> 00:03:21,760
reading code is about fast and effective

00:03:20,879 --> 00:03:24,560
communication

00:03:21,760 --> 00:03:25,760
have you ever had to read someone else's

00:03:24,560 --> 00:03:29,120
code

00:03:25,760 --> 00:03:32,319
have you ever wanted to chase them down

00:03:29,120 --> 00:03:33,599
has that ever been you

00:03:32,319 --> 00:03:35,360
you want to care about the developer

00:03:33,599 --> 00:03:36,959
behind you so think about it look at the

00:03:35,360 --> 00:03:38,640
developer behind you right now

00:03:36,959 --> 00:03:40,000
you're writing code you're out for a run

00:03:38,640 --> 00:03:41,519
you're having a good day

00:03:40,000 --> 00:03:43,840
imagine the developer behind you looks

00:03:41,519 --> 00:03:46,400
more like this

00:03:43,840 --> 00:03:47,120
readable code is the idea of making

00:03:46,400 --> 00:03:50,560
these things

00:03:47,120 --> 00:03:53,280
not happen so often all right so

00:03:50,560 --> 00:03:53,599
caringbuttercraft is a good thing right

00:03:53,280 --> 00:03:55,280
but

00:03:53,599 --> 00:03:57,360
caring about what happens after we

00:03:55,280 --> 00:03:59,040
deploy is really important we like to

00:03:57,360 --> 00:04:00,239
write code yeah yeah we like to read

00:03:59,040 --> 00:04:03,040
code too but

00:04:00,239 --> 00:04:03,360
after we deploy who's going to maintain

00:04:03,040 --> 00:04:05,280
that

00:04:03,360 --> 00:04:08,000
sometimes it's you sometimes it's the

00:04:05,280 --> 00:04:09,519
person next to you

00:04:08,000 --> 00:04:11,599
so what about the motivation for this i

00:04:09,519 --> 00:04:14,159
mean the productivity over time

00:04:11,599 --> 00:04:16,400
for a complete mess and this is what we

00:04:14,159 --> 00:04:17,840
get in a lot of our applications

00:04:16,400 --> 00:04:19,600
why do a lot of applications get

00:04:17,840 --> 00:04:20,880
rewritten because a lot of times people

00:04:19,600 --> 00:04:22,320
come into projects and can't figure out

00:04:20,880 --> 00:04:23,280
what's happening in the code base right

00:04:22,320 --> 00:04:25,360
now

00:04:23,280 --> 00:04:27,280
so hey we say we're developers we can

00:04:25,360 --> 00:04:28,400
write for angular 6 now right it's a

00:04:27,280 --> 00:04:29,440
great time it's a complete mess let's

00:04:28,400 --> 00:04:30,960
rewrite it

00:04:29,440 --> 00:04:33,120
and we're sitting at home like yeah

00:04:30,960 --> 00:04:34,960
let's go you know

00:04:33,120 --> 00:04:36,400
and you go tell your boss hey get good

00:04:34,960 --> 00:04:37,199
news i can't read any of the code let's

00:04:36,400 --> 00:04:43,840
rewrite it

00:04:37,199 --> 00:04:43,840
and they're like no don't think so

00:04:44,479 --> 00:04:48,639
so how do you make your code easier to

00:04:46,320 --> 00:04:49,759
read that's a really good question

00:04:48,639 --> 00:04:51,120
some of these things have been around

00:04:49,759 --> 00:04:52,720
for years and years and some of these i

00:04:51,120 --> 00:04:55,520
think you'll find you do

00:04:52,720 --> 00:04:57,040
in the subconscious so first start with

00:04:55,520 --> 00:04:58,880
some kind of a style guide the angular

00:04:57,040 --> 00:05:00,720
docs provide one for us

00:04:58,880 --> 00:05:02,320
uh we have several folks contribute to

00:05:00,720 --> 00:05:03,840
this and

00:05:02,320 --> 00:05:05,120
it's really nice because it gives us a

00:05:03,840 --> 00:05:06,400
lot of the common sense stuff like the

00:05:05,120 --> 00:05:07,360
one i'm pointing showing here is for

00:05:06,400 --> 00:05:08,880
naming conventions

00:05:07,360 --> 00:05:10,479
that's stuff that you do in any language

00:05:08,880 --> 00:05:12,639
anywhere it's not like these are angular

00:05:10,479 --> 00:05:14,479
specific things for the most part

00:05:12,639 --> 00:05:16,320
but they're important to have some kind

00:05:14,479 --> 00:05:17,680
of a guide one of the first things

00:05:16,320 --> 00:05:19,360
people say to me when they say hey john

00:05:17,680 --> 00:05:20,479
i love the original style guide you

00:05:19,360 --> 00:05:23,120
wrote i say thank you

00:05:20,479 --> 00:05:25,840
the next sentence is almost always this

00:05:23,120 --> 00:05:28,639
but i hated these three things i'm sorry

00:05:25,840 --> 00:05:29,039
so i made my own and i'm like don't hate

00:05:28,639 --> 00:05:30,880
on it

00:05:29,039 --> 00:05:32,960
that's great that's the whole idea of a

00:05:30,880 --> 00:05:33,520
guide make what you want for your

00:05:32,960 --> 00:05:34,720
company

00:05:33,520 --> 00:05:36,800
the important thing is you have

00:05:34,720 --> 00:05:38,560
something at your company your team

00:05:36,800 --> 00:05:40,560
so starting with those helps you avoid

00:05:38,560 --> 00:05:41,840
things like this writing a function to

00:05:40,560 --> 00:05:44,160
divide

00:05:41,840 --> 00:05:45,039
div x y with a value when somebody goes

00:05:44,160 --> 00:05:47,199
and reads this

00:05:45,039 --> 00:05:48,320
it's a lot easier if you can actually

00:05:47,199 --> 00:05:49,600
read the variable names and the

00:05:48,320 --> 00:05:51,280
functions and it doesn't take a whole

00:05:49,600 --> 00:05:52,479
lot more energy

00:05:51,280 --> 00:05:55,199
you think about this when you're writing

00:05:52,479 --> 00:05:57,680
your code not too bad

00:05:55,199 --> 00:05:59,360
what about apis for services in angular

00:05:57,680 --> 00:06:01,360
using ngrx maybe we do something like

00:05:59,360 --> 00:06:03,440
hero dispatchers get heroes

00:06:01,360 --> 00:06:04,479
make the code easier oh okay it's going

00:06:03,440 --> 00:06:06,880
to go get my heroes

00:06:04,479 --> 00:06:09,199
i'm going to open a snack bar and put a

00:06:06,880 --> 00:06:11,680
message and a title in there

00:06:09,199 --> 00:06:13,440
readable code makes a big difference now

00:06:11,680 --> 00:06:16,000
we all know the cookie rule right

00:06:13,440 --> 00:06:17,759
you drop a cookie you have five seconds

00:06:16,000 --> 00:06:19,440
to pick it up and eat it

00:06:17,759 --> 00:06:21,759
some of you five seconds is more like

00:06:19,440 --> 00:06:24,080
this

00:06:21,759 --> 00:06:24,080
one

00:06:25,039 --> 00:06:27,759
so what do we do in the coding world i

00:06:26,720 --> 00:06:29,360
have this rule i try to tell my

00:06:27,759 --> 00:06:30,960
developers on teams we have a five

00:06:29,360 --> 00:06:31,600
second rule in reading code doing code

00:06:30,960 --> 00:06:33,600
reviews

00:06:31,600 --> 00:06:35,520
if you can't understand the code in five

00:06:33,600 --> 00:06:36,479
seconds that's probably a smell that's

00:06:35,520 --> 00:06:37,759
probably an idea that you should

00:06:36,479 --> 00:06:39,840
refactor a little bit

00:06:37,759 --> 00:06:41,520
so here in five seconds can you figure

00:06:39,840 --> 00:06:45,840
this out one two three four five

00:06:41,520 --> 00:06:47,440
no you couldn't so instead

00:06:45,840 --> 00:06:49,199
what you could do is rewrite it with

00:06:47,440 --> 00:06:50,639
functions in the middle

00:06:49,199 --> 00:06:52,479
just makes a little bit easier abstract

00:06:50,639 --> 00:06:54,639
into functions is an easy way to do this

00:06:52,479 --> 00:06:56,240
and guess what all modern tools have it

00:06:54,639 --> 00:06:57,759
vs code you right click

00:06:56,240 --> 00:06:59,759
extract this into a function and you're

00:06:57,759 --> 00:07:01,199
good to go

00:06:59,759 --> 00:07:03,520
above the fold is something we hear in

00:07:01,199 --> 00:07:05,360
newspapers but for most of you that's a

00:07:03,520 --> 00:07:07,039
big piece of paper with news on it

00:07:05,360 --> 00:07:09,360
done i haven't seen those in years

00:07:07,039 --> 00:07:11,199
either so newspapers say above the fold

00:07:09,360 --> 00:07:12,560
is important stuff should go

00:07:11,199 --> 00:07:14,080
in coding we have this similar kind of

00:07:12,560 --> 00:07:14,800
concept the most important stuff should

00:07:14,080 --> 00:07:17,440
go first

00:07:14,800 --> 00:07:19,360
an angular we put our properties and our

00:07:17,440 --> 00:07:21,599
methods up top

00:07:19,360 --> 00:07:23,440
then we put all of our stuff sometimes

00:07:21,599 --> 00:07:24,160
organized alphabetically sometimes by

00:07:23,440 --> 00:07:25,440
events

00:07:24,160 --> 00:07:27,759
sometimes we break them out by

00:07:25,440 --> 00:07:28,240
decorators or not the point here is not

00:07:27,759 --> 00:07:29,680
so much

00:07:28,240 --> 00:07:31,199
how you do it and the fact that you have

00:07:29,680 --> 00:07:32,560
a consistent way of doing it to put the

00:07:31,199 --> 00:07:34,800
important information

00:07:32,560 --> 00:07:36,319
up top so you can read it especially as

00:07:34,800 --> 00:07:38,880
files get longer

00:07:36,319 --> 00:07:40,560
organizing our code is important

00:07:38,880 --> 00:07:42,160
sometimes we have code for doing like an

00:07:40,560 --> 00:07:43,680
upsert where you're doing updates and

00:07:42,160 --> 00:07:45,680
inserts in the same code

00:07:43,680 --> 00:07:46,720
this code is arguably not too hard to

00:07:45,680 --> 00:07:49,599
read but

00:07:46,720 --> 00:07:50,800
it could be easier why not just have an

00:07:49,599 --> 00:07:52,639
add speaker function

00:07:50,800 --> 00:07:54,240
and have an update speaker function and

00:07:52,639 --> 00:07:55,520
have something simpler that just calls

00:07:54,240 --> 00:07:57,599
those

00:07:55,520 --> 00:08:00,000
breaking things out into more functions

00:07:57,599 --> 00:08:01,520
constant iteration

00:08:00,000 --> 00:08:02,720
you want to look for other signs where

00:08:01,520 --> 00:08:06,080
you might want to refactor for

00:08:02,720 --> 00:08:06,080
readability in your code as well

00:08:06,319 --> 00:08:10,319
less than 20 lines this is a general

00:08:08,319 --> 00:08:10,720
guideline i have it's not hard and fast

00:08:10,319 --> 00:08:12,639
but

00:08:10,720 --> 00:08:14,080
if it's too big and some people say it

00:08:12,639 --> 00:08:15,520
can't be off screen some people can't

00:08:14,080 --> 00:08:17,280
say more than 10 lines

00:08:15,520 --> 00:08:19,280
it's really whatever your guidelines say

00:08:17,280 --> 00:08:20,960
in your company it helps you

00:08:19,280 --> 00:08:22,879
read through the code faster once you

00:08:20,960 --> 00:08:25,280
get beyond this mark though

00:08:22,879 --> 00:08:26,000
you start seeing those signs of maybe my

00:08:25,280 --> 00:08:27,520
code is doing

00:08:26,000 --> 00:08:29,360
more than one thing maybe it's doing

00:08:27,520 --> 00:08:31,120
more than seven things

00:08:29,360 --> 00:08:32,800
maybe it's time to refactor out just a

00:08:31,120 --> 00:08:34,560
little bit

00:08:32,800 --> 00:08:37,039
i worked at a company where people

00:08:34,560 --> 00:08:40,159
thought it was fun to misspell

00:08:37,039 --> 00:08:41,680
and this is actual code i'm not kidding

00:08:40,159 --> 00:08:42,959
this is going to be actual code i saw at

00:08:41,680 --> 00:08:45,200
a company

00:08:42,959 --> 00:08:46,640
and i had to literally pull this

00:08:45,200 --> 00:08:47,519
developer aside and go

00:08:46,640 --> 00:08:48,720
what are you doing and they were

00:08:47,519 --> 00:08:50,080
laughing the whole time they're like

00:08:48,720 --> 00:08:51,920
this is so funny

00:08:50,080 --> 00:08:53,440
let me share you're like who cares that

00:08:51,920 --> 00:08:58,080
misspellings right

00:08:53,440 --> 00:08:59,839
i'm han solo well writing code

00:08:58,080 --> 00:09:03,600
how many misspellings we possibly put in

00:08:59,839 --> 00:09:03,600
five lines of code i mean seriously

00:09:04,080 --> 00:09:09,839
abbreviations misspellings by the way

00:09:06,000 --> 00:09:09,839
those are customers not customers

00:09:10,720 --> 00:09:15,440
and my favorite one was here i went

00:09:13,680 --> 00:09:16,959
looking through the code to maintain it

00:09:15,440 --> 00:09:17,839
looking for any functions that did

00:09:16,959 --> 00:09:20,839
validation

00:09:17,839 --> 00:09:22,800
so silly me i searched for the word

00:09:20,839 --> 00:09:25,600
validate

00:09:22,800 --> 00:09:26,160
little did i know that validate was

00:09:25,600 --> 00:09:29,279
actually

00:09:26,160 --> 00:09:30,560
spelled wrong all my entire life

00:09:29,279 --> 00:09:32,560
these kind of things can actually hurt

00:09:30,560 --> 00:09:33,440
you in code so spelling can be a good

00:09:32,560 --> 00:09:36,959
thing

00:09:33,440 --> 00:09:38,320
stay in school kids

00:09:36,959 --> 00:09:40,480
maybe rewrite it something like this

00:09:38,320 --> 00:09:43,279
readable code people who maintain the

00:09:40,480 --> 00:09:44,880
code also lack the author's context

00:09:43,279 --> 00:09:46,640
have you ever seen someone's code and

00:09:44,880 --> 00:09:48,000
they you look at it and it's clear to

00:09:46,640 --> 00:09:49,360
them they're like why are you so dumb

00:09:48,000 --> 00:09:50,880
you can't figure this out

00:09:49,360 --> 00:09:53,120
it's because sometimes the person who

00:09:50,880 --> 00:09:54,959
wrote it had the curse of knowledge

00:09:53,120 --> 00:09:56,160
they knew something that you didn't some

00:09:54,959 --> 00:09:58,640
key piece of information

00:09:56,160 --> 00:10:01,040
that dictated how they wrote that code

00:09:58,640 --> 00:10:04,640
context is clarity

00:10:01,040 --> 00:10:06,320
for example if you saw this movie

00:10:04,640 --> 00:10:08,000
you know this was a key moment in the

00:10:06,320 --> 00:10:09,600
movie everybody in this here probably

00:10:08,000 --> 00:10:11,040
seeing some ward bell by the way

00:10:09,600 --> 00:10:13,200
make sure you make fun of ward for not

00:10:11,040 --> 00:10:15,040
seeing star wars

00:10:13,200 --> 00:10:17,519
you won't miss them so in this movie

00:10:15,040 --> 00:10:19,680
this is the moment where he reveals

00:10:17,519 --> 00:10:22,800
that he is luke's father and this is a

00:10:19,680 --> 00:10:22,800
really important turning point

00:10:22,959 --> 00:10:25,440
spoiler

00:10:26,160 --> 00:10:30,800
now imagine the first time you saw this

00:10:28,160 --> 00:10:32,880
movie ward you tuned in at this scene

00:10:30,800 --> 00:10:34,480
you'd be like yeah who cares there's

00:10:32,880 --> 00:10:36,000
some weird guy in a big black helmet

00:10:34,480 --> 00:10:37,519
telling me he's his dad

00:10:36,000 --> 00:10:39,760
and the guy's like crying about it get

00:10:37,519 --> 00:10:42,800
over it

00:10:39,760 --> 00:10:45,279
in code this is kind of important right

00:10:42,800 --> 00:10:46,959
so providing clarity through code first

00:10:45,279 --> 00:10:47,760
sometimes we look at comments as the way

00:10:46,959 --> 00:10:49,440
to go there

00:10:47,760 --> 00:10:51,920
but i'll tell you i think code is a

00:10:49,440 --> 00:10:53,200
better way while this comment works

00:10:51,920 --> 00:10:55,200
check if the hero can defeat the

00:10:53,200 --> 00:10:57,760
villains and tour heroes

00:10:55,200 --> 00:10:59,440
hey he's got more super powers but maybe

00:10:57,760 --> 00:11:01,760
she's got more energy or

00:10:59,440 --> 00:11:03,440
maybe the villain is in monster mode you

00:11:01,760 --> 00:11:06,480
know we have to check to see

00:11:03,440 --> 00:11:09,040
who can defeat who what happens if

00:11:06,480 --> 00:11:10,800
this logic changes and the comments

00:11:09,040 --> 00:11:12,880
don't because how often do you honestly

00:11:10,800 --> 00:11:16,480
update the comments when you change code

00:11:12,880 --> 00:11:16,880
i know i don't instead self-describing

00:11:16,480 --> 00:11:20,560
code

00:11:16,880 --> 00:11:22,480
write a function hero can defeat villain

00:11:20,560 --> 00:11:24,560
little things like this very easy to do

00:11:22,480 --> 00:11:27,680
refactoring abstracting

00:11:24,560 --> 00:11:30,880
always opt for self-describing code over

00:11:27,680 --> 00:11:32,720
comments to describe a what replacing

00:11:30,880 --> 00:11:34,079
magic strings arguably this isn't too

00:11:32,720 --> 00:11:35,120
hard to read we've got some nested

00:11:34,079 --> 00:11:37,519
strings in there

00:11:35,120 --> 00:11:39,040
but it might be easier if we pull those

00:11:37,519 --> 00:11:41,519
strings out into constants

00:11:39,040 --> 00:11:43,120
might even get some code reuse and then

00:11:41,519 --> 00:11:46,560
put those into our code

00:11:43,120 --> 00:11:46,560
make it more readable code

00:11:46,720 --> 00:11:51,360
comments must be readable and maintained

00:11:49,279 --> 00:11:52,959
they are technical debt

00:11:51,360 --> 00:11:54,240
how often do you look at code you see a

00:11:52,959 --> 00:11:55,279
comment and you're like i have no idea

00:11:54,240 --> 00:11:56,959
what that's referring to it's in the

00:11:55,279 --> 00:11:58,959
middle of nowhere

00:11:56,959 --> 00:12:01,839
someone else wrote it i it's probably

00:11:58,959 --> 00:12:03,600
from eons going by

00:12:01,839 --> 00:12:05,440
so when do you avoid comments this is

00:12:03,600 --> 00:12:07,360
what i recommend if you're explaining

00:12:05,440 --> 00:12:09,200
what the code does here's the beginning

00:12:07,360 --> 00:12:13,519
of the if

00:12:09,200 --> 00:12:13,519
here's the end of the if thank you

00:12:14,560 --> 00:12:19,680
i was kind of confused i thought the end

00:12:16,240 --> 00:12:21,120
if was the beginning but now i know

00:12:19,680 --> 00:12:22,880
explaining for example at the beginning

00:12:21,120 --> 00:12:24,000
of the conversation we talked about

00:12:22,880 --> 00:12:26,880
we're imagining the production

00:12:24,000 --> 00:12:28,320
outage what if it just said hey leave

00:12:26,880 --> 00:12:30,880
this code here

00:12:28,320 --> 00:12:33,839
great why why do i leave it there we go

00:12:30,880 --> 00:12:35,600
on further to explain

00:12:33,839 --> 00:12:37,440
outdated and incorrect easy to

00:12:35,600 --> 00:12:38,800
understand we don't want old comments

00:12:37,440 --> 00:12:40,399
they're actually worse than having no

00:12:38,800 --> 00:12:42,560
comments because it misleads you down

00:12:40,399 --> 00:12:44,399
the wrong way

00:12:42,560 --> 00:12:47,760
or you shoulda coulda woulda used some

00:12:44,399 --> 00:12:50,160
kind of a welding function or variable

00:12:47,760 --> 00:12:51,360
okay picking on burke i think he tweaked

00:12:50,160 --> 00:12:53,760
it tweeted this morning i loved this

00:12:51,360 --> 00:12:55,680
little quote code never lies right

00:12:53,760 --> 00:12:57,519
but sometimes developer i mean sometimes

00:12:55,680 --> 00:13:00,240
comments do

00:12:57,519 --> 00:13:01,839
sometimes comments will lie so when do

00:13:00,240 --> 00:13:02,959
you use them if it's explaining why

00:13:01,839 --> 00:13:05,600
something's there some kind of

00:13:02,959 --> 00:13:07,120
unexpended consequence too

00:13:05,600 --> 00:13:08,959
or you're doing some kind of api docs

00:13:07,120 --> 00:13:10,959
like with js docs

00:13:08,959 --> 00:13:12,399
that will clearly help you out with

00:13:10,959 --> 00:13:14,639
readable code

00:13:12,399 --> 00:13:16,800
so there's times to use comments for

00:13:14,639 --> 00:13:18,160
example regex who here can actually read

00:13:16,800 --> 00:13:21,440
or regex that's more than three

00:13:18,160 --> 00:13:23,440
characters long i mean seriously

00:13:21,440 --> 00:13:24,800
what do they say you've got a problem

00:13:23,440 --> 00:13:27,839
solve it with a regex

00:13:24,800 --> 00:13:27,839
now you have two problems

00:13:28,000 --> 00:13:31,360
great place for a comment in fact i

00:13:30,800 --> 00:13:33,040
would do

00:13:31,360 --> 00:13:34,800
a function with a writes name like

00:13:33,040 --> 00:13:35,920
validate email and put a comment then

00:13:34,800 --> 00:13:37,519
they're saying what the heck all those

00:13:35,920 --> 00:13:39,760
letters do

00:13:37,519 --> 00:13:41,120
so and comments can be helpful yes not

00:13:39,760 --> 00:13:42,720
saying don't comment at all

00:13:41,120 --> 00:13:44,480
i'm just saying think about where you do

00:13:42,720 --> 00:13:47,519
comment and how it can be helpful and

00:13:44,480 --> 00:13:47,519
who's going to update that

00:13:47,680 --> 00:13:51,360
okay so at this point you're probably

00:13:49,199 --> 00:13:53,199
feeling a little bit sad like i do a lot

00:13:51,360 --> 00:13:54,639
of those things i do them too

00:13:53,199 --> 00:13:56,480
nobody's code is perfect when they first

00:13:54,639 --> 00:13:58,560
write it but

00:13:56,480 --> 00:13:59,680
here's the thing you write your code

00:13:58,560 --> 00:14:00,880
it's dirty

00:13:59,680 --> 00:14:02,480
and then you show it to somebody and you

00:14:00,880 --> 00:14:03,279
clean it up or you show it to yourself

00:14:02,480 --> 00:14:05,120
and you clean it up

00:14:03,279 --> 00:14:07,279
and you iterate over it you read your

00:14:05,120 --> 00:14:07,680
own code put your own code down for a

00:14:07,279 --> 00:14:09,760
day

00:14:07,680 --> 00:14:12,639
and go back how often do you really

00:14:09,760 --> 00:14:15,839
understand what it did the day before

00:14:12,639 --> 00:14:16,639
if you don't that's a great sign that

00:14:15,839 --> 00:14:18,240
maybe

00:14:16,639 --> 00:14:21,760
you need to refactor to make it more

00:14:18,240 --> 00:14:21,760
readable and try some of these tips

00:14:22,320 --> 00:14:26,560
so at the end of our story dear

00:14:24,480 --> 00:14:28,320
developers this is to all of you

00:14:26,560 --> 00:14:31,519
writing code will make your app easier

00:14:28,320 --> 00:14:34,160
to maintain it'll make it live longer

00:14:31,519 --> 00:14:34,959
it'll make your bosses happier it'll

00:14:34,160 --> 00:14:38,079
help you

00:14:34,959 --> 00:14:40,800
update your apps it'll save you and the

00:14:38,079 --> 00:14:40,800
next developer

00:14:41,360 --> 00:14:44,399
that might be you might be somebody next

00:14:43,040 --> 00:14:45,839
to you as well

00:14:44,399 --> 00:14:47,519
so here's some tips just to leave you

00:14:45,839 --> 00:14:49,279
some thoughts the five second rule it's

00:14:47,519 --> 00:14:50,720
really easy we all know what it is by

00:14:49,279 --> 00:14:52,959
the cookie dropping on the floor

00:14:50,720 --> 00:14:54,160
we can do that with our code too can you

00:14:52,959 --> 00:14:56,959
read it

00:14:54,160 --> 00:14:58,240
quickly efficiently if not take another

00:14:56,959 --> 00:14:59,920
look

00:14:58,240 --> 00:15:03,279
one thing per file that's another

00:14:59,920 --> 00:15:05,760
guideline one thing per function

00:15:03,279 --> 00:15:07,440
small functions in general if you see

00:15:05,760 --> 00:15:09,839
nested ifs in a function

00:15:07,440 --> 00:15:11,600
probably a case to refactor if you see a

00:15:09,839 --> 00:15:13,920
lot of conditional logic

00:15:11,600 --> 00:15:15,279
i generally look for branches in code i

00:15:13,920 --> 00:15:17,199
don't want to have more than two inside

00:15:15,279 --> 00:15:18,560
of a function generally

00:15:17,199 --> 00:15:21,360
well thought out naming probably the

00:15:18,560 --> 00:15:23,440
hardest thing to do in coding right

00:15:21,360 --> 00:15:25,040
but good names are worth the time that

00:15:23,440 --> 00:15:27,920
we invest in those

00:15:25,040 --> 00:15:29,839
crafting your own style guide choosing

00:15:27,920 --> 00:15:30,959
comments wisely and using tools like

00:15:29,839 --> 00:15:33,600
prettier

00:15:30,959 --> 00:15:34,639
stop fighting over spaces and 80 line

00:15:33,600 --> 00:15:36,720
characters and

00:15:34,639 --> 00:15:37,920
where you should put the curly brace use

00:15:36,720 --> 00:15:40,800
tools like prettier

00:15:37,920 --> 00:15:41,440
set up a tool a prettier rc file in your

00:15:40,800 --> 00:15:43,360
project

00:15:41,440 --> 00:15:44,720
and just call it a day those things are

00:15:43,360 --> 00:15:46,320
much easier to handle and share it with

00:15:44,720 --> 00:15:48,000
your team

00:15:46,320 --> 00:15:49,759
and if you want any links to some of

00:15:48,000 --> 00:15:50,720
these resources the angular style guide

00:15:49,759 --> 00:15:51,680
is right up here brings you to the

00:15:50,720 --> 00:15:53,920
angular site

00:15:51,680 --> 00:15:55,600
vs code does a lot of this stuff for you

00:15:53,920 --> 00:15:56,639
angular essentials has a lot of this

00:15:55,600 --> 00:15:58,880
readable code stuff

00:15:56,639 --> 00:16:00,320
in it out of the box i've got some code

00:15:58,880 --> 00:16:01,199
snippets in there that a lot of people

00:16:00,320 --> 00:16:03,279
use

00:16:01,199 --> 00:16:05,519
a couple million downloads on it so

00:16:03,279 --> 00:16:07,360
thank you very much for for using those

00:16:05,519 --> 00:16:09,360
helps you put things formatted right

00:16:07,360 --> 00:16:11,839
according to the cli and the style guide

00:16:09,360 --> 00:16:13,360
also has prettier baked in and my

00:16:11,839 --> 00:16:15,040
favorite extension the world which is

00:16:13,360 --> 00:16:17,120
called setting sync

00:16:15,040 --> 00:16:18,800
so you can set up your environment with

00:16:17,120 --> 00:16:19,920
your settings and extensions and share

00:16:18,800 --> 00:16:22,480
it with your entire team

00:16:19,920 --> 00:16:24,160
by checking into github and finally

00:16:22,480 --> 00:16:25,600
since i always get asked hey what font

00:16:24,160 --> 00:16:27,120
was that

00:16:25,600 --> 00:16:28,800
you can also check out my fonts in the

00:16:27,120 --> 00:16:30,639
theme called winter is coming i use

00:16:28,800 --> 00:16:32,480
those also in the deck

00:16:30,639 --> 00:16:37,839
so thank you very much for coming and i

00:16:32,480 --> 00:16:37,839

YouTube URL: https://www.youtube.com/watch?v=56mETnrByBM


