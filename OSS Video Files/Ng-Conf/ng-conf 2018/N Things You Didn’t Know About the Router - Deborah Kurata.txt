Title: N Things You Didnâ€™t Know About the Router - Deborah Kurata
Publication date: 2018-11-16
Playlist: ng-conf 2018
Description: 
	ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,269 --> 00:00:05,460
thank you can you hear me okay yeah

00:00:03,510 --> 00:00:07,649
there it goes all right so we're gonna

00:00:05,460 --> 00:00:10,950
talk about and things that you don't

00:00:07,649 --> 00:00:12,780
know about the router why n because I'm

00:00:10,950 --> 00:00:15,089
not sure how much you all know about the

00:00:12,780 --> 00:00:18,060
router so my hope is that you will leave

00:00:15,089 --> 00:00:20,010
this session with finding out at least

00:00:18,060 --> 00:00:21,300
one thing that you didn't know before or

00:00:20,010 --> 00:00:25,199
that you might not have thought about a

00:00:21,300 --> 00:00:27,480
particular way before I have one slide

00:00:25,199 --> 00:00:29,580
on how the router works just to ensure

00:00:27,480 --> 00:00:31,380
we're all on the same page with regard

00:00:29,580 --> 00:00:34,800
to the terminology and then we're gonna

00:00:31,380 --> 00:00:37,050
jump right into our and things so how

00:00:34,800 --> 00:00:38,809
does routing work and why do I have a

00:00:37,050 --> 00:00:42,210
weird thing in the middle of my screen

00:00:38,809 --> 00:00:45,270
that's not me is that just a thing on

00:00:42,210 --> 00:00:46,440
the screen okay anyway all right

00:00:45,270 --> 00:00:48,570
hopefully you'll be able to see around

00:00:46,440 --> 00:00:50,820
that so how does routing work well

00:00:48,570 --> 00:00:54,239
frequently we have a tool bar or some

00:00:50,820 --> 00:00:56,239
kind of something around our application

00:00:54,239 --> 00:00:58,949
that allows the user to navigate around

00:00:56,239 --> 00:01:01,949
behind that we might have something like

00:00:58,949 --> 00:01:04,500
this a router link that identifies what

00:01:01,949 --> 00:01:07,260
path that we want the user to take when

00:01:04,500 --> 00:01:10,409
they click on that link when the user

00:01:07,260 --> 00:01:13,580
does click on that it changes our URL so

00:01:10,409 --> 00:01:16,259
that it has that path on it the router

00:01:13,580 --> 00:01:18,509
recognizes hey we've got a new something

00:01:16,259 --> 00:01:21,570
on the path and it goes and looks for a

00:01:18,509 --> 00:01:23,790
route configuration so what angular does

00:01:21,570 --> 00:01:26,840
is it takes any routes configured in

00:01:23,790 --> 00:01:29,970
your application and puts them in one

00:01:26,840 --> 00:01:32,280
combined list so it has one merged list

00:01:29,970 --> 00:01:34,380
of all of our routes and it starts at

00:01:32,280 --> 00:01:36,720
the top and finds the first match so in

00:01:34,380 --> 00:01:39,030
this case it'll find the path movies

00:01:36,720 --> 00:01:41,430
know to load the component movie list

00:01:39,030 --> 00:01:44,340
component so it loads that component

00:01:41,430 --> 00:01:47,009
find the Associated template loads and

00:01:44,340 --> 00:01:50,040
prepares that then it starts to look for

00:01:47,009 --> 00:01:51,930
an appropriate router outlet so it finds

00:01:50,040 --> 00:01:54,659
the router outlet and that's where it

00:01:51,930 --> 00:01:56,909
displays the components template so

00:01:54,659 --> 00:02:00,229
that's in one slide how the router works

00:01:56,909 --> 00:02:03,090
hopefully that was helpful for any more

00:02:00,229 --> 00:02:05,490
newer developer angular people here in

00:02:03,090 --> 00:02:07,879
the audience with that we're going to

00:02:05,490 --> 00:02:11,220
launch right into our first of n things

00:02:07,879 --> 00:02:12,290
- menu or not - menu this is one of the

00:02:11,220 --> 00:02:14,959
questions that

00:02:12,290 --> 00:02:17,569
get often how do we deal with the fact

00:02:14,959 --> 00:02:20,599
that some of our pages we want to route

00:02:17,569 --> 00:02:23,390
with a menu on the top and some of them

00:02:20,599 --> 00:02:25,970
like our login page we might not want to

00:02:23,390 --> 00:02:29,150
have our menu on the top so how do we

00:02:25,970 --> 00:02:32,329
deal with that well looking at our app

00:02:29,150 --> 00:02:34,599
component HTML we can see that we have

00:02:32,329 --> 00:02:37,519
our nav bar with our router links and

00:02:34,599 --> 00:02:39,590
under it is our router outlet so

00:02:37,519 --> 00:02:42,170
anything we route to that router L it's

00:02:39,590 --> 00:02:43,819
going to have our menu on top that's

00:02:42,170 --> 00:02:44,180
because we're telling it to do it that

00:02:43,819 --> 00:02:47,090
way

00:02:44,180 --> 00:02:51,500
so how do we deal with not having it do

00:02:47,090 --> 00:02:53,180
that what this will do is it will appear

00:02:51,500 --> 00:02:55,400
like this well we've got our menu across

00:02:53,180 --> 00:02:59,420
the top and then our app router outlet

00:02:55,400 --> 00:03:01,549
is the area underneath underneath it so

00:02:59,420 --> 00:03:03,290
how do we make it not do that well one

00:03:01,549 --> 00:03:06,889
option is we could have some kind of

00:03:03,290 --> 00:03:09,290
global flag with an NG F and then every

00:03:06,889 --> 00:03:11,599
component wouldn't need to turn that on

00:03:09,290 --> 00:03:14,659
or off now as soon as we hear the word

00:03:11,599 --> 00:03:16,069
global we should be thinking mmm right

00:03:14,659 --> 00:03:18,169
we don't want to we don't want to do

00:03:16,069 --> 00:03:20,510
that so what would be another way to

00:03:18,169 --> 00:03:23,530
handle this well we can change our app

00:03:20,510 --> 00:03:26,870
component from all of this to just that

00:03:23,530 --> 00:03:30,739
so that our main app component is only

00:03:26,870 --> 00:03:33,889
the router outlet then our whole browser

00:03:30,739 --> 00:03:35,720
area is our app router outlet and we can

00:03:33,889 --> 00:03:38,359
log things that we don't want the menu

00:03:35,720 --> 00:03:41,720
into that route or outlets so we can put

00:03:38,359 --> 00:03:44,690
our log in there all right

00:03:41,720 --> 00:03:47,599
so but we still need our menu somewhere

00:03:44,690 --> 00:03:52,099
so what we can do is we can create a

00:03:47,599 --> 00:03:54,709
another component I called mine shell

00:03:52,099 --> 00:03:58,030
component and this is where we then have

00:03:54,709 --> 00:04:04,069
our router link and now we have a second

00:03:58,030 --> 00:04:06,620
nested router outlet so now we've

00:04:04,069 --> 00:04:09,859
defined a hierarchy of router outlets

00:04:06,620 --> 00:04:12,229
for our application now we can simplify

00:04:09,859 --> 00:04:15,319
this code even further by taking out our

00:04:12,229 --> 00:04:17,479
menu stuff putting it into our own menu

00:04:15,319 --> 00:04:18,979
component and then we end up with our

00:04:17,479 --> 00:04:21,289
shell component looking something like

00:04:18,979 --> 00:04:24,960
that with just our nested router outlet

00:04:21,289 --> 00:04:28,080
and a reference to our menu component

00:04:24,960 --> 00:04:30,660
so then we have our a Prada Outlet which

00:04:28,080 --> 00:04:34,020
was the whole display underneath in our

00:04:30,660 --> 00:04:37,919
browser client area we can route to that

00:04:34,020 --> 00:04:41,699
then our shell component so our how our

00:04:37,919 --> 00:04:44,460
menu shows up then under nested inside a

00:04:41,699 --> 00:04:47,460
it has its own shell router outlet and

00:04:44,460 --> 00:04:49,889
then we can route into there our movie

00:04:47,460 --> 00:04:51,660
list or our movie detail or movie edit

00:04:49,889 --> 00:04:57,590
anything that we would want to appear

00:04:51,660 --> 00:04:59,789
under the menu bar nested router outlets

00:04:57,590 --> 00:05:01,590
okay well so what does that look like in

00:04:59,789 --> 00:05:05,550
code how do you actually make that work

00:05:01,590 --> 00:05:08,400
in code in our route configuration at

00:05:05,550 --> 00:05:11,419
the outermost level anything at that

00:05:08,400 --> 00:05:14,240
level is going to go to our outermost

00:05:11,419 --> 00:05:18,449
level of our router or router

00:05:14,240 --> 00:05:24,120
outlets so in this case it will be our

00:05:18,449 --> 00:05:26,639
route app router outlet anything that we

00:05:24,120 --> 00:05:29,990
want to appear in the shell components

00:05:26,639 --> 00:05:33,060
router outlet we define as children

00:05:29,990 --> 00:05:35,639
under the shell components so that way

00:05:33,060 --> 00:05:41,280
it knows which level of the hierarchy to

00:05:35,639 --> 00:05:44,340
put them in okay all right so that's to

00:05:41,280 --> 00:05:47,729
menu or not to menu our next item is

00:05:44,340 --> 00:05:50,639
preventing partial page display now when

00:05:47,729 --> 00:05:52,260
we as developers run our application we

00:05:50,639 --> 00:05:54,360
frequently get really good performance

00:05:52,260 --> 00:05:56,610
right we're frequently running our

00:05:54,360 --> 00:05:59,580
servers on the same machine or even have

00:05:56,610 --> 00:06:02,009
test servers we're running and we might

00:05:59,580 --> 00:06:03,900
not notice that when the users actually

00:06:02,009 --> 00:06:06,180
get the application it shows up like

00:06:03,900 --> 00:06:09,060
this so here's our detailed page with

00:06:06,180 --> 00:06:12,419
the static text a few moments later

00:06:09,060 --> 00:06:14,550
finally the data shows up okay so our

00:06:12,419 --> 00:06:17,039
users might not want that kind of

00:06:14,550 --> 00:06:19,139
behavior what are our options for

00:06:17,039 --> 00:06:24,030
dealing with that well one of the

00:06:19,139 --> 00:06:28,199
options that some people like to use is

00:06:24,030 --> 00:06:29,460
a resolver I kept calling this a reducer

00:06:28,199 --> 00:06:31,800
I've been doing a lot of energy are

00:06:29,460 --> 00:06:34,020
excellently calling it a reducer that's

00:06:31,800 --> 00:06:35,550
not a reducer it's a resolver so if I

00:06:34,020 --> 00:06:38,370
accidentally say reducer that's know

00:06:35,550 --> 00:06:40,560
what I mean so a resolver service

00:06:38,370 --> 00:06:42,630
and our resolver service implements

00:06:40,560 --> 00:06:44,940
resolve you tell at the data you want to

00:06:42,630 --> 00:06:47,910
resolve we're doing movie details so I

00:06:44,940 --> 00:06:51,990
want a movie I'm passing in my movie

00:06:47,910 --> 00:06:54,180
service so what is a resolver why am i

00:06:51,990 --> 00:06:57,300
passing in the service what am I really

00:06:54,180 --> 00:06:59,940
doing with this well a resolver is part

00:06:57,300 --> 00:07:03,810
of routing and what it does is it allows

00:06:59,940 --> 00:07:07,830
us to execute an asynchronous operation

00:07:03,810 --> 00:07:10,110
and have the routing wait for the

00:07:07,830 --> 00:07:12,840
completion of that asynchronous

00:07:10,110 --> 00:07:15,479
operation so what we're going to be

00:07:12,840 --> 00:07:18,180
doing here is our HTTP calls which of

00:07:15,479 --> 00:07:20,190
course are asynchronous operations so

00:07:18,180 --> 00:07:24,000
I'm passing in my movie service because

00:07:20,190 --> 00:07:27,450
that's my data access service that does

00:07:24,000 --> 00:07:29,880
my HTTP requests I go to my route to get

00:07:27,450 --> 00:07:32,160
my ID because this is a detail page so I

00:07:29,880 --> 00:07:34,860
have to know which movie I'm displaying

00:07:32,160 --> 00:07:37,530
the detail for and then I call this dumb

00:07:34,860 --> 00:07:40,500
movie service get movie and notice that

00:07:37,530 --> 00:07:42,690
I do not have a subscribe on there the

00:07:40,500 --> 00:07:46,229
resolver will automatically subscribe

00:07:42,690 --> 00:07:49,169
for me and then it will wait until the

00:07:46,229 --> 00:07:52,380
data is returned before it continues

00:07:49,169 --> 00:07:54,919
with the route because this is a service

00:07:52,380 --> 00:07:58,560
we need to add it to the providers array

00:07:54,919 --> 00:08:01,740
in our configuration we add the resolve

00:07:58,560 --> 00:08:04,440
property to our configuration specify a

00:08:01,740 --> 00:08:06,710
name and the class name and that

00:08:04,440 --> 00:08:11,630
associates a resolver with a particular

00:08:06,710 --> 00:08:15,389
path in our component a configuration

00:08:11,630 --> 00:08:16,280
then in our actual component did you

00:08:15,389 --> 00:08:20,190
want that again

00:08:16,280 --> 00:08:21,840
you got it okay in our actual component

00:08:20,190 --> 00:08:24,510
then we no longer need to use our

00:08:21,840 --> 00:08:25,139
service because our resolver already got

00:08:24,510 --> 00:08:28,979
the data

00:08:25,139 --> 00:08:31,830
so in our ng on a net we can set our

00:08:28,979 --> 00:08:34,349
data property to this dot route dot

00:08:31,830 --> 00:08:36,180
snapshot data and pass it the name the

00:08:34,349 --> 00:08:39,870
name again was the name that we had

00:08:36,180 --> 00:08:42,719
specified in the routing module there so

00:08:39,870 --> 00:08:45,240
notice that we now are treating our data

00:08:42,719 --> 00:08:48,690
as from our components point of view

00:08:45,240 --> 00:08:50,310
like it's a synchronous operation so

00:08:48,690 --> 00:08:51,800
what does that mean that means that our

00:08:50,310 --> 00:08:54,230
template no longer need

00:08:51,800 --> 00:08:55,700
NEADS ng-if at the top to deal with the

00:08:54,230 --> 00:08:58,300
fact that we might not have gotten our

00:08:55,700 --> 00:09:00,760
data yet it doesn't need safe navigation

00:08:58,300 --> 00:09:04,399
operators and so on because we will have

00:09:00,760 --> 00:09:09,440
received retrieved the data before

00:09:04,399 --> 00:09:11,690
actually even navigating ok so that's

00:09:09,440 --> 00:09:14,660
how we prevent partial page display one

00:09:11,690 --> 00:09:16,399
of the ways to do it but if you kind of

00:09:14,660 --> 00:09:19,310
think this through the user still has to

00:09:16,399 --> 00:09:21,709
wait somewhere right so in our

00:09:19,310 --> 00:09:23,720
particular case we have our list page

00:09:21,709 --> 00:09:25,430
that the user is clicking on and what

00:09:23,720 --> 00:09:27,290
we're going to want to do to not the

00:09:25,430 --> 00:09:30,110
user know that we're waiting at this

00:09:27,290 --> 00:09:33,529
point is to display a spinner so how do

00:09:30,110 --> 00:09:36,140
we display a spinner well one easy way

00:09:33,529 --> 00:09:38,420
to do it is to use routing will use

00:09:36,140 --> 00:09:41,810
routing events so we can actually

00:09:38,420 --> 00:09:44,060
subscribe to router events now in this

00:09:41,810 --> 00:09:48,260
case I'm doing it from app component

00:09:44,060 --> 00:09:50,810
which means that none none of my other

00:09:48,260 --> 00:09:53,450
components need to know anything about

00:09:50,810 --> 00:09:56,589
this spinner it will just automatically

00:09:53,450 --> 00:10:00,230
appear anytime that there is a delay in

00:09:56,589 --> 00:10:02,570
moving through the route so check router

00:10:00,230 --> 00:10:05,300
event is a method that I wrote that does

00:10:02,570 --> 00:10:09,110
this so if the event is a navigation

00:10:05,300 --> 00:10:11,870
start it sets a local property to true

00:10:09,110 --> 00:10:17,180
if it's n cancel or error it sets that

00:10:11,870 --> 00:10:19,220
local property to false then in my app

00:10:17,180 --> 00:10:21,500
component HTML remember this is the one

00:10:19,220 --> 00:10:24,260
that only had our router outlet on it

00:10:21,500 --> 00:10:26,329
I use my ng F and then whatever visual

00:10:24,260 --> 00:10:28,820
this uses the old bootstrap but whatever

00:10:26,329 --> 00:10:31,459
visual that you want and this will

00:10:28,820 --> 00:10:33,649
automatically appear anytime there's a

00:10:31,459 --> 00:10:36,130
delay in routing so you'll get the

00:10:33,649 --> 00:10:38,480
spinner anytime that there's a weight

00:10:36,130 --> 00:10:42,470
none of the other components need to

00:10:38,480 --> 00:10:45,589
know to do that all right what's going

00:10:42,470 --> 00:10:47,930
on what if your routes don't work so

00:10:45,589 --> 00:10:49,760
you've put your routing in and it's not

00:10:47,930 --> 00:10:52,790
working correctly it's either not

00:10:49,760 --> 00:10:54,740
routing or it's not changing routes or

00:10:52,790 --> 00:10:58,820
something is going on how do you do bugs

00:10:54,740 --> 00:11:00,199
ease things well you can set it up and I

00:10:58,820 --> 00:11:02,370
know this might be hard to see cuz this

00:11:00,199 --> 00:11:06,720
is kind of little but you can turn

00:11:02,370 --> 00:11:09,389
on routing such that you can see a trace

00:11:06,720 --> 00:11:11,430
of all of the routing events so all the

00:11:09,389 --> 00:11:14,189
around events I mentioned navigation

00:11:11,430 --> 00:11:16,860
start and so on if you can kind of see

00:11:14,189 --> 00:11:19,649
up in the front I've got a resolve start

00:11:16,860 --> 00:11:22,790
and then I've got data there

00:11:19,649 --> 00:11:25,980
that's my data access service going

00:11:22,790 --> 00:11:27,749
logging it's data retrieval and you can

00:11:25,980 --> 00:11:31,019
see that that's happening before it

00:11:27,749 --> 00:11:35,129
actually completes the navigation so how

00:11:31,019 --> 00:11:38,399
do you turn this on in your app routing

00:11:35,129 --> 00:11:41,910
module you just add enable tracing true

00:11:38,399 --> 00:11:43,589
okay and that turns it on and then after

00:11:41,910 --> 00:11:45,660
you've resolved whatever issue you might

00:11:43,589 --> 00:11:47,309
have with your routing you can just set

00:11:45,660 --> 00:11:52,459
it back to false or delete that a little

00:11:47,309 --> 00:11:54,720
bit again alright guards at the ready

00:11:52,459 --> 00:11:57,329
one of the other things you might want

00:11:54,720 --> 00:11:59,790
to do with your routing is guard your

00:11:57,329 --> 00:12:02,220
routes so you might want some routes

00:11:59,790 --> 00:12:04,050
that the user can only access if they're

00:12:02,220 --> 00:12:08,220
logged in and if they're not logged in

00:12:04,050 --> 00:12:11,129
have it pop up a login dialog or a login

00:12:08,220 --> 00:12:14,519
page other routes you might want to

00:12:11,129 --> 00:12:16,199
prevent them from navigating away why

00:12:14,519 --> 00:12:18,660
would you ever want to prevent someone

00:12:16,199 --> 00:12:21,120
from navigating away well say we have an

00:12:18,660 --> 00:12:23,129
edit page such as the one shown here and

00:12:21,120 --> 00:12:25,170
the users just made a whole bunch of

00:12:23,129 --> 00:12:27,569
edits and then they click back on the

00:12:25,170 --> 00:12:29,189
movie list and we don't want them to

00:12:27,569 --> 00:12:31,529
lose their edit so we could put up a

00:12:29,189 --> 00:12:33,779
little message saying hey do you really

00:12:31,529 --> 00:12:35,249
want to lose your edits or if we're

00:12:33,779 --> 00:12:37,499
pretty confident they meant to save

00:12:35,249 --> 00:12:39,360
those edits we could autosave them or we

00:12:37,499 --> 00:12:41,610
could do you know whatever that we would

00:12:39,360 --> 00:12:45,120
want there but we can capture that

00:12:41,610 --> 00:12:47,579
action we build a guard service very

00:12:45,120 --> 00:12:50,819
similar to how we build our resolve our

00:12:47,579 --> 00:12:52,800
service we implement the name of the

00:12:50,819 --> 00:12:55,519
guard so in this case it's can

00:12:52,800 --> 00:12:59,370
deactivate we could also do can activate

00:12:55,519 --> 00:13:01,620
can load and so on here I'm using the

00:12:59,370 --> 00:13:04,649
generic parameter to pass in the

00:13:01,620 --> 00:13:08,939
component that's being deactivated the

00:13:04,649 --> 00:13:11,459
can deactivate can take in the component

00:13:08,939 --> 00:13:14,040
that's being deactivated now that's a

00:13:11,459 --> 00:13:16,170
really important point because since

00:13:14,040 --> 00:13:18,000
we're getting the component

00:13:16,170 --> 00:13:20,850
that's about to be deactivated we can

00:13:18,000 --> 00:13:23,579
actually reference it so we can ask the

00:13:20,850 --> 00:13:26,190
component hey do you have dirty data so

00:13:23,579 --> 00:13:27,660
that we don't say to the user hey do you

00:13:26,190 --> 00:13:30,240
really want to save your changes and the

00:13:27,660 --> 00:13:32,250
users like I didn't change anything so

00:13:30,240 --> 00:13:35,399
that way we can check that we can access

00:13:32,250 --> 00:13:38,639
its data anything that we want we return

00:13:35,399 --> 00:13:41,579
true from the method if we want the

00:13:38,639 --> 00:13:46,019
routing to just continue as normal we

00:13:41,579 --> 00:13:49,470
return false if we want to cancel all of

00:13:46,019 --> 00:13:54,149
the future routing events for that

00:13:49,470 --> 00:13:56,610
particular route activation okay because

00:13:54,149 --> 00:13:58,970
it's a service we register the guard and

00:13:56,610 --> 00:14:01,560
then again we add it to our

00:13:58,970 --> 00:14:06,029
configuration by specifying another

00:14:01,560 --> 00:14:08,190
property which is the name of the guard

00:14:06,029 --> 00:14:11,790
so can deactivate in our case and then

00:14:08,190 --> 00:14:20,370
give it the class name of the guard

00:14:11,790 --> 00:14:25,110
service that we write okay so that's how

00:14:20,370 --> 00:14:26,790
we do guards keep constant now this one

00:14:25,110 --> 00:14:29,279
a lot of people probably already know

00:14:26,790 --> 00:14:33,360
about because a lot of examples already

00:14:29,279 --> 00:14:35,490
show how to do this here this is

00:14:33,360 --> 00:14:37,380
intentionally meant to be difficult to

00:14:35,490 --> 00:14:39,870
read the point here is that this is

00:14:37,380 --> 00:14:42,420
difficult to read now because we have

00:14:39,870 --> 00:14:46,560
all of our route stuff actually kind of

00:14:42,420 --> 00:14:48,930
connected in to our ng module decorator

00:14:46,560 --> 00:14:50,490
and that makes it hard to read it makes

00:14:48,930 --> 00:14:52,500
it hard to read the decorator because

00:14:50,490 --> 00:14:54,120
there's so much other stuff in there so

00:14:52,500 --> 00:14:56,790
the idea is we're going to pull that

00:14:54,120 --> 00:15:00,290
stuff out of there and we're going to

00:14:56,790 --> 00:15:04,740
put it into a constant at the in our

00:15:00,290 --> 00:15:07,319
class file so there's the definition of

00:15:04,740 --> 00:15:09,269
the constant and you can see now that's

00:15:07,319 --> 00:15:11,550
much easier to read you've also can see

00:15:09,269 --> 00:15:16,230
that I've added a few more I added a

00:15:11,550 --> 00:15:18,089
second level of router outlet here so

00:15:16,230 --> 00:15:19,500
now I have two sets of children one

00:15:18,089 --> 00:15:21,720
that's going to route into the shell

00:15:19,500 --> 00:15:23,399
component and another further down

00:15:21,720 --> 00:15:25,680
that's going to route into the movie

00:15:23,399 --> 00:15:28,470
edit component that allows me to have a

00:15:25,680 --> 00:15:29,350
tabbed edit dialog as you might have

00:15:28,470 --> 00:15:35,740
noticed on the

00:15:29,350 --> 00:15:38,470
prior slides ok so then our ng module

00:15:35,740 --> 00:15:40,480
decorator looks much simpler we just

00:15:38,470 --> 00:15:42,310
define our constant there and that makes

00:15:40,480 --> 00:15:48,340
that easier to read and work with as

00:15:42,310 --> 00:15:52,480
well ok it's a feature now we've all

00:15:48,340 --> 00:15:54,880
been taught that we don't put all of our

00:15:52,480 --> 00:15:56,800
code in one code file we don't put all

00:15:54,880 --> 00:16:01,780
of our angular application in one

00:15:56,800 --> 00:16:03,070
angular module oh I went hiking in Moab

00:16:01,780 --> 00:16:05,350
right before I came and I've been

00:16:03,070 --> 00:16:07,540
sneezing ever since I feel like I'm

00:16:05,350 --> 00:16:12,040
about to sneeze anyway I'll try not to

00:16:07,540 --> 00:16:14,200
do it in the mic so it's a feature so

00:16:12,040 --> 00:16:16,600
what about feature module so here we

00:16:14,200 --> 00:16:18,070
have our constant and we really want to

00:16:16,600 --> 00:16:19,480
take our movie stuff out of there

00:16:18,070 --> 00:16:22,120
because it doesn't belong in there it

00:16:19,480 --> 00:16:26,370
should be in a feature module instead so

00:16:22,120 --> 00:16:29,740
what do I do cut paste not too difficult

00:16:26,370 --> 00:16:36,450
then I do router module for child and

00:16:29,740 --> 00:16:39,850
pass in my constant but it won't work

00:16:36,450 --> 00:16:41,500
and you're like what I know that works I

00:16:39,850 --> 00:16:41,950
do that every day what are you talking

00:16:41,500 --> 00:16:43,930
about

00:16:41,950 --> 00:16:48,220
absolutely that works I put that in my

00:16:43,930 --> 00:16:53,430
code in our particular example this will

00:16:48,220 --> 00:16:56,500
not work why won't it work well

00:16:53,430 --> 00:16:59,020
somewhere in our application as soon as

00:16:56,500 --> 00:17:01,960
we decide we want feature modules we

00:16:59,020 --> 00:17:03,640
have to pull that feature module in so

00:17:01,960 --> 00:17:05,260
somewhere we're going to have an import

00:17:03,640 --> 00:17:09,490
so we're going to import our movie

00:17:05,260 --> 00:17:12,030
module into our app module or in into RF

00:17:09,490 --> 00:17:14,320
routing module or however our our

00:17:12,030 --> 00:17:19,480
standards to find where this should be

00:17:14,320 --> 00:17:22,839
imported what that's telling angular to

00:17:19,480 --> 00:17:24,939
do is to merge our routes remember I

00:17:22,839 --> 00:17:27,040
said at the very beginning that angular

00:17:24,939 --> 00:17:29,470
takes all of our routes and makes one

00:17:27,040 --> 00:17:31,930
big list of route configurations and

00:17:29,470 --> 00:17:33,820
then goes through top to bottom so what

00:17:31,930 --> 00:17:35,800
this guy is going to do is it's going to

00:17:33,820 --> 00:17:37,540
merge our routes so we're going to have

00:17:35,800 --> 00:17:39,700
our movies routes first because we've

00:17:37,540 --> 00:17:43,110
specified it first there and then it's

00:17:39,700 --> 00:17:43,110
going to have our other route

00:17:43,239 --> 00:17:52,309
where is our movie list component going

00:17:46,850 --> 00:17:54,529
to route to now at this point which

00:17:52,309 --> 00:17:59,389
router outlets going to show up is it

00:17:54,529 --> 00:18:03,169
going to show up in it's on the

00:17:59,389 --> 00:18:06,080
outermost set of our configuration so

00:18:03,169 --> 00:18:08,029
our movie list route or movie list

00:18:06,080 --> 00:18:10,009
component our movie detail component our

00:18:08,029 --> 00:18:13,190
movie at a component are going to show

00:18:10,009 --> 00:18:15,470
up without the menu is that making sense

00:18:13,190 --> 00:18:19,519
what this is doing because we're we

00:18:15,470 --> 00:18:22,609
really want that is right there how do

00:18:19,519 --> 00:18:24,919
we get that right there well there are

00:18:22,609 --> 00:18:27,889
numerous ways to handle it the easiest

00:18:24,919 --> 00:18:31,159
way to handle it is lazy loading and we

00:18:27,889 --> 00:18:34,399
should be doing lazy loading anyway so

00:18:31,159 --> 00:18:36,679
let's take talk about that I like to

00:18:34,399 --> 00:18:39,529
represent lazy loading with this image

00:18:36,679 --> 00:18:41,899
and the reason is sometimes we think of

00:18:39,529 --> 00:18:44,389
lazy like a lazy Sunday afternoon and a

00:18:41,899 --> 00:18:46,609
hammock with our favorite beverage but

00:18:44,389 --> 00:18:48,980
really lazy is more like this guy he's

00:18:46,609 --> 00:18:53,840
being lazy right now but he's really

00:18:48,980 --> 00:18:56,090
super fast we know when we build our

00:18:53,840 --> 00:18:58,369
applications it's going to build it into

00:18:56,090 --> 00:19:00,529
a bundle and if we aren't using lazy

00:18:58,369 --> 00:19:03,379
loading it's going to be one big bundle

00:19:00,529 --> 00:19:05,299
and when the user accesses our app they

00:19:03,379 --> 00:19:08,600
have to wait for that whole big bundle

00:19:05,299 --> 00:19:11,389
to come down to our to their machine to

00:19:08,600 --> 00:19:13,789
get processed by the browser before that

00:19:11,389 --> 00:19:15,830
first page will appear so what we want

00:19:13,789 --> 00:19:19,309
to do with our feature modules is we

00:19:15,830 --> 00:19:22,820
want to make them lazy loaded so what

00:19:19,309 --> 00:19:25,100
the when we build our application it

00:19:22,820 --> 00:19:29,019
will actually bundle each feature each

00:19:25,100 --> 00:19:32,239
lazy loaded feature into its own bundle

00:19:29,019 --> 00:19:35,749
ok that means when the user first hits

00:19:32,239 --> 00:19:38,299
the application only the little app

00:19:35,749 --> 00:19:40,100
module needs to come down the other

00:19:38,299 --> 00:19:43,070
modules then can come down

00:19:40,100 --> 00:19:45,619
asynchronously in the background or they

00:19:43,070 --> 00:19:48,859
can come down on demand depending upon

00:19:45,619 --> 00:19:51,590
how you have your lazy loading set up so

00:19:48,859 --> 00:19:53,779
how do we set up lazy loading well what

00:19:51,590 --> 00:19:55,430
we do I'm going to go back for a moment

00:19:53,779 --> 00:19:57,830
if you look at the

00:19:55,430 --> 00:20:00,410
all of our paths start with the prefix

00:19:57,830 --> 00:20:03,080
movies movies movies movies movies edit

00:20:00,410 --> 00:20:05,090
movies ID and so on so what we're going

00:20:03,080 --> 00:20:08,600
to do here is we're going to pull that

00:20:05,090 --> 00:20:10,190
movies path off specify at a notice here

00:20:08,600 --> 00:20:12,320
we're right in the correct place right

00:20:10,190 --> 00:20:14,960
under our shell component as part of the

00:20:12,320 --> 00:20:17,390
children and we're going to specify low

00:20:14,960 --> 00:20:20,360
children which is telling it to do lazy

00:20:17,390 --> 00:20:22,460
loading and we give it a string the

00:20:20,360 --> 00:20:25,160
reason we give it a string is because we

00:20:22,460 --> 00:20:28,160
do not want any references to our movie

00:20:25,160 --> 00:20:31,160
module in our app component anymore in

00:20:28,160 --> 00:20:35,660
our app module anywhere in our main

00:20:31,160 --> 00:20:37,910
bundle because we don't want the the

00:20:35,660 --> 00:20:40,190
build process to pull in the movie

00:20:37,910 --> 00:20:43,580
module as part of our first initial app

00:20:40,190 --> 00:20:46,850
module in the string we specify the path

00:20:43,580 --> 00:20:49,130
and we give it a hash and then the name

00:20:46,850 --> 00:20:56,540
of the class so our class was called

00:20:49,130 --> 00:20:58,580
movie module thank you then now we have

00:20:56,540 --> 00:21:01,490
our routes notice that the paths no

00:20:58,580 --> 00:21:03,710
longer contain movies because we had

00:21:01,490 --> 00:21:07,130
pulled that part off and now our router

00:21:03,710 --> 00:21:11,179
module for child will work because this

00:21:07,130 --> 00:21:12,559
tells it exactly where to put them and

00:21:11,179 --> 00:21:15,380
that's it

00:21:12,559 --> 00:21:17,030
so did anyone have at least one of those

00:21:15,380 --> 00:21:18,380
end things that they didn't know or

00:21:17,030 --> 00:21:22,670
hadn't thought about quite the same

00:21:18,380 --> 00:21:24,830
before yay okay so for more information

00:21:22,670 --> 00:21:26,990
you can reach out to me on twitter the

00:21:24,830 --> 00:21:28,520
code is a full code for the sample

00:21:26,990 --> 00:21:31,880
application that goes with this you can

00:21:28,520 --> 00:21:34,700
get off my github my slides are here and

00:21:31,880 --> 00:21:36,679
i also have a course on Pluralsight

00:21:34,700 --> 00:21:39,380
angular routing that you can find there

00:21:36,679 --> 00:21:40,640
I have free cards for a month on

00:21:39,380 --> 00:21:42,860
Pluralsight if you don't have a

00:21:40,640 --> 00:21:45,990
Pluralsight membership and with that I

00:21:42,860 --> 00:21:48,050
want to thank you all very much

00:21:45,990 --> 00:21:48,050

YouTube URL: https://www.youtube.com/watch?v=LaIAHOSKHCQ


