Title: The magic of template reference variables - Alain Chautard
Publication date: 2018-11-16
Playlist: ng-conf 2018
Description: 
	ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,530 --> 00:00:04,890
hi everyone how are you today doing

00:00:04,319 --> 00:00:09,000
great

00:00:04,890 --> 00:00:11,610
yay so today my goal with this talk is

00:00:09,000 --> 00:00:14,160
going to surprise you with a feature

00:00:11,610 --> 00:00:16,500
that pretty much everyone already knows

00:00:14,160 --> 00:00:19,949
about and that's template reference

00:00:16,500 --> 00:00:22,650
variables so the story of this start

00:00:19,949 --> 00:00:24,570
started a few months ago I was writing a

00:00:22,650 --> 00:00:27,330
blog post on template reference

00:00:24,570 --> 00:00:30,090
variables and as I did this I thought

00:00:27,330 --> 00:00:33,450
well there's actually a lot more to this

00:00:30,090 --> 00:00:36,450
feature that we usually think about so

00:00:33,450 --> 00:00:39,719
after I was done writing this blog post

00:00:36,450 --> 00:00:44,040
I said well this would be a great talk

00:00:39,719 --> 00:00:46,289
for a five-minute talk at ng-conf so I

00:00:44,040 --> 00:00:51,090
applied for it and where I am today so

00:00:46,289 --> 00:00:53,520
it's a first kind of magic already so

00:00:51,090 --> 00:00:55,800
let's dive into it now so temperature

00:00:53,520 --> 00:00:59,039
friends variables in angular are a way

00:00:55,800 --> 00:01:01,379
to get a reference to an HTML element so

00:00:59,039 --> 00:01:04,890
I usually call this the abstract syntax

00:01:01,379 --> 00:01:06,840
because when we just had this tiny hash

00:01:04,890 --> 00:01:10,080
tag here that we add to an element to

00:01:06,840 --> 00:01:12,869
get a reference to it and what we can do

00:01:10,080 --> 00:01:14,670
with that is basically if I applied to

00:01:12,869 --> 00:01:16,950
this input here what I get is a

00:01:14,670 --> 00:01:20,670
reference to the HTML element so I can

00:01:16,950 --> 00:01:24,570
access any property like the IDS yes s

00:01:20,670 --> 00:01:26,759
classes the value anything you like and

00:01:24,570 --> 00:01:29,270
in this example here I'm basically

00:01:26,759 --> 00:01:33,150
getting the value of that input and

00:01:29,270 --> 00:01:36,299
passing it to to my component whenever

00:01:33,150 --> 00:01:38,640
we click a button so because of this I

00:01:36,299 --> 00:01:41,400
don't need any data binding in my

00:01:38,640 --> 00:01:43,950
component I don't need any engine model

00:01:41,400 --> 00:01:50,189
everything it just happens in the

00:01:43,950 --> 00:01:52,619
template now when we apply this ashlag

00:01:50,189 --> 00:01:55,740
syntax on a component what we get

00:01:52,619 --> 00:01:57,719
instead of a reference to the HTML

00:01:55,740 --> 00:02:00,210
element is a reference to the actual

00:01:57,719 --> 00:02:03,030
component instance which means I can

00:02:00,210 --> 00:02:06,149
access any property or method of that

00:02:03,030 --> 00:02:08,310
component outside of the template of

00:02:06,149 --> 00:02:11,009
that component so this could be helpful

00:02:08,310 --> 00:02:12,130
if let's say this component was a pop-up

00:02:11,009 --> 00:02:14,080
window

00:02:12,130 --> 00:02:16,840
I could have a button that would just

00:02:14,080 --> 00:02:20,320
trigger the pop-up to show up outside of

00:02:16,840 --> 00:02:24,640
that template so that's a very good use

00:02:20,320 --> 00:02:26,940
case for it and surprisingly enough this

00:02:24,640 --> 00:02:30,550
also works with private or protected

00:02:26,940 --> 00:02:32,830
members in GT mode of course in a OT you

00:02:30,550 --> 00:02:36,640
would get some some issues with that but

00:02:32,830 --> 00:02:39,400
that's that's what it is so that's also

00:02:36,640 --> 00:02:43,450
work with directives the answer is easy

00:02:39,400 --> 00:02:46,210
yes and when we use this hashtag syntax

00:02:43,450 --> 00:02:47,860
with a directive so we have to pass the

00:02:46,210 --> 00:02:51,670
name of the directory that we want to

00:02:47,860 --> 00:02:53,140
get a reference to and in that case

00:02:51,670 --> 00:02:54,850
that's a very common use case you've

00:02:53,140 --> 00:02:57,250
probably seen that in the angular

00:02:54,850 --> 00:03:00,190
documentation or use it yourself in the

00:02:57,250 --> 00:03:02,710
past we're getting a reference to the

00:03:00,190 --> 00:03:05,470
energy from directive so we can display

00:03:02,710 --> 00:03:07,840
the validation state of the form so is

00:03:05,470 --> 00:03:11,800
it valid is a dirty touched untouched

00:03:07,840 --> 00:03:15,850
and so far now the thing with that

00:03:11,800 --> 00:03:18,700
syntax is that where is the Energy Forum

00:03:15,850 --> 00:03:21,570
directive actually applied to you my

00:03:18,700 --> 00:03:24,310
phone right because there is no ng form

00:03:21,570 --> 00:03:27,310
attribute up here on my phone so how

00:03:24,310 --> 00:03:30,100
does this work in order to find the

00:03:27,310 --> 00:03:32,740
answer we can go to the angular website

00:03:30,100 --> 00:03:35,380
and dive into the documentation and

00:03:32,740 --> 00:03:37,840
there is this great feature here where

00:03:35,380 --> 00:03:40,090
it is highlighted on the screen where we

00:03:37,840 --> 00:03:43,510
can just in one click get to the source

00:03:40,090 --> 00:03:46,480
code of any class of the three more so

00:03:43,510 --> 00:03:50,020
that's what I did and and that's info I

00:03:46,480 --> 00:03:51,610
got right away when we get to you the

00:03:50,020 --> 00:03:55,150
source code of the energy from directive

00:03:51,610 --> 00:03:57,880
we save that it applies to any form by

00:03:55,150 --> 00:03:59,560
default because the selector of the

00:03:57,880 --> 00:04:02,260
directive is designed that way it would

00:03:59,560 --> 00:04:04,810
apply to any form that doesn't have the

00:04:02,260 --> 00:04:07,630
engine no form nor the form Group

00:04:04,810 --> 00:04:10,150
attribute so that's how it works

00:04:07,630 --> 00:04:13,420
and that's why ng form gets applied to

00:04:10,150 --> 00:04:16,120
any form by default and the second

00:04:13,420 --> 00:04:19,330
interesting thing to see here is the

00:04:16,120 --> 00:04:22,570
export as a property of the decorator

00:04:19,330 --> 00:04:24,550
and this basically exports the directive

00:04:22,570 --> 00:04:25,510
with a public name so that whenever we

00:04:24,550 --> 00:04:28,270
want to get a RIF

00:04:25,510 --> 00:04:31,240
to that directive the public name for it

00:04:28,270 --> 00:04:33,310
is ng for me so now we know is the

00:04:31,240 --> 00:04:34,870
entire story and it was right there in

00:04:33,310 --> 00:04:38,800
the source code right right in front of

00:04:34,870 --> 00:04:41,860
us so now the icing on the cake

00:04:38,800 --> 00:04:46,150
who has this template reference

00:04:41,860 --> 00:04:48,100
variables a that we can also retrieve

00:04:46,150 --> 00:04:51,340
them from our components all directive

00:04:48,100 --> 00:04:53,140
using the add new child decorator so if

00:04:51,340 --> 00:04:56,170
you apply this abstract syntax in your

00:04:53,140 --> 00:04:58,210
template you can also get a reference to

00:04:56,170 --> 00:05:00,790
that variable in your tiles ripped code

00:04:58,210 --> 00:05:02,710
using add view child and then passing

00:05:00,790 --> 00:05:05,110
the name of the reference variable in

00:05:02,710 --> 00:05:07,390
here so that you can have access to

00:05:05,110 --> 00:05:11,980
those properties in your typescript code

00:05:07,390 --> 00:05:14,110
as well so if you take away is from this

00:05:11,980 --> 00:05:16,090
talk use template reference variables

00:05:14,110 --> 00:05:17,800
it's very easy it does bring a lot of

00:05:16,090 --> 00:05:20,550
interesting features to the table and

00:05:17,800 --> 00:05:23,380
just like many things in angular

00:05:20,550 --> 00:05:25,810
variants always interesting lesser-known

00:05:23,380 --> 00:05:27,310
use cases to all of these features so

00:05:25,810 --> 00:05:28,810
when we start diving into it we see oh

00:05:27,310 --> 00:05:30,670
there's actually much more we can do

00:05:28,810 --> 00:05:33,760
with it and in order to figure that out

00:05:30,670 --> 00:05:35,380
don't be afraid to be curious and do

00:05:33,760 --> 00:05:40,720
just like I did go to the source and

00:05:35,380 --> 00:05:43,510
you'll get me interesting answers so if

00:05:40,720 --> 00:05:45,340
you need any extra info or need any help

00:05:43,510 --> 00:05:47,440
that's what I do I run angular

00:05:45,340 --> 00:05:50,050
training.com so feel free to come to me

00:05:47,440 --> 00:05:52,630
my twitter handle is open my email is

00:05:50,050 --> 00:05:53,380
always open and sex thanks a lot for

00:05:52,630 --> 00:05:55,420
your attention

00:05:53,380 --> 00:05:58,770
that was templates reference Firebirds

00:05:55,420 --> 00:05:58,770
in five minutes thank you

00:05:59,800 --> 00:06:01,860
you

00:06:08,540 --> 00:06:10,600

YouTube URL: https://www.youtube.com/watch?v=wJwvmuK4tQw


