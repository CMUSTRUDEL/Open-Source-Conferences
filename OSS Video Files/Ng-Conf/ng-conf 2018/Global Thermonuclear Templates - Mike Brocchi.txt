Title: Global Thermonuclear Templates - Mike Brocchi
Publication date: 2018-11-16
Playlist: ng-conf 2018
Description: 
	ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:16,350 --> 00:00:23,040
mic off mic turn his mic off so great

00:00:19,320 --> 00:00:24,980
start yes and I exited my presentation -

00:00:23,040 --> 00:00:27,420
this is going great

00:00:24,980 --> 00:00:29,790
sweet alright just got lets out some

00:00:27,420 --> 00:00:34,020
games real quick figure out what we're

00:00:29,790 --> 00:00:36,480
gonna do today so maybe karaoke anyone

00:00:34,020 --> 00:00:41,190
now okay we're gonna go into global

00:00:36,480 --> 00:00:43,350
thermonuclear templates we get an update

00:00:41,190 --> 00:00:45,120
while that's updating global

00:00:43,350 --> 00:00:47,090
thermonuclear templates is basically

00:00:45,120 --> 00:00:49,170
just gonna be like a game engine a

00:00:47,090 --> 00:00:51,739
tutorial type thing to be able to teach

00:00:49,170 --> 00:00:56,159
you a little bit about schematics

00:00:51,739 --> 00:01:03,330
alright good I think that's done nice

00:00:56,159 --> 00:01:05,339
new one okay new versions up okay so um

00:01:03,330 --> 00:01:08,760
we can play we have rules that we have

00:01:05,339 --> 00:01:10,250
tutorial we'll start with the rules so

00:01:08,760 --> 00:01:13,290
the objective of global thermonuclear

00:01:10,250 --> 00:01:15,900
templates is to teach players how to

00:01:13,290 --> 00:01:18,450
customize the output of the angular CLI

00:01:15,900 --> 00:01:21,149
is generate command so the angular CLI

00:01:18,450 --> 00:01:22,649
has generate command but maybe you don't

00:01:21,149 --> 00:01:23,640
exactly like all the stuff that we've

00:01:22,649 --> 00:01:25,680
handed you out of the box

00:01:23,640 --> 00:01:28,409
we're not offended it's fine you can

00:01:25,680 --> 00:01:29,909
deploy change it around to output what

00:01:28,409 --> 00:01:30,530
you want and we're gonna learn how to do

00:01:29,909 --> 00:01:32,640
that

00:01:30,530 --> 00:01:35,640
in order to do that we're gonna go in a

00:01:32,640 --> 00:01:37,859
few terms the first one is a collection

00:01:35,640 --> 00:01:41,060
a collection is just a group of

00:01:37,859 --> 00:01:44,759
schematics it's great what's a schematic

00:01:41,060 --> 00:01:47,640
good a schematic is logic to be able to

00:01:44,759 --> 00:01:51,299
execute rules super

00:01:47,640 --> 00:01:55,170
what's a rule a rule is a transformation

00:01:51,299 --> 00:01:58,140
of a tree right the tree but what's a

00:01:55,170 --> 00:02:00,060
tree a tree is a virtual file system

00:01:58,140 --> 00:02:02,549
that's going to allow you to interact

00:02:00,060 --> 00:02:04,049
with your local file system but in a

00:02:02,549 --> 00:02:05,909
virtual manner so that you can do a lot

00:02:04,049 --> 00:02:08,429
of different operations virtually

00:02:05,909 --> 00:02:09,750
without affecting the files on your file

00:02:08,429 --> 00:02:10,850
system until you decide that you

00:02:09,750 --> 00:02:13,040
actually want to commit them and

00:02:10,850 --> 00:02:14,940
basically complete the operation

00:02:13,040 --> 00:02:18,270
synchronizing back to the actual

00:02:14,940 --> 00:02:20,190
physical disk instead of in the middle

00:02:18,270 --> 00:02:21,840
maybe get into a messed up state this

00:02:20,190 --> 00:02:24,000
way it's a fully like a database

00:02:21,840 --> 00:02:26,910
transaction type situation that you can

00:02:24,000 --> 00:02:28,680
commit or rollback in the middle of last

00:02:26,910 --> 00:02:29,400
one is the source and what a source is

00:02:28,680 --> 00:02:31,379
it's

00:02:29,400 --> 00:02:36,420
method of bringing external files into

00:02:31,379 --> 00:02:37,680
your tree okay so a tree gives you the

00:02:36,420 --> 00:02:39,599
ability to do a bunch of different

00:02:37,680 --> 00:02:41,220
things out of the box you can create

00:02:39,599 --> 00:02:42,780
files so a tree you'll have an object

00:02:41,220 --> 00:02:45,140
you'll have access to that and you can

00:02:42,780 --> 00:02:47,790
create objects whoever files with them

00:02:45,140 --> 00:02:49,290
you can overwrite files so if a file is

00:02:47,790 --> 00:02:52,519
there you can test to see if it exists

00:02:49,290 --> 00:02:55,709
and if you want you can overwrite that

00:02:52,519 --> 00:02:57,480
reading files sometimes it's a helpful

00:02:55,709 --> 00:02:59,879
to be able to read the content of an

00:02:57,480 --> 00:03:01,829
existing file to say hey I need to do

00:02:59,879 --> 00:03:03,389
some sort of operation or change to this

00:03:01,829 --> 00:03:05,340
file so I'm going to read the content

00:03:03,389 --> 00:03:09,000
make some modifications to it and then

00:03:05,340 --> 00:03:10,889
overwrite that file again with overwrite

00:03:09,000 --> 00:03:12,269
you can check to see if a file exists to

00:03:10,889 --> 00:03:14,629
be able to determine whether or not you

00:03:12,269 --> 00:03:17,220
want to overwrite it if it exists

00:03:14,629 --> 00:03:19,049
deleting the file sometimes you want to

00:03:17,220 --> 00:03:21,389
write a schematic that is going to

00:03:19,049 --> 00:03:24,889
delete a file because of whatever rules

00:03:21,389 --> 00:03:24,889
that you may have or you want to execute

00:03:26,000 --> 00:03:31,739
now now remove everything also rename it

00:03:29,609 --> 00:03:33,269
so maybe some conventions of change do

00:03:31,739 --> 00:03:36,750
you want to rename files basically

00:03:33,269 --> 00:03:37,620
functions like a move operation and to

00:03:36,750 --> 00:03:39,629
get you started

00:03:37,620 --> 00:03:41,849
schematics provide some built-in rules

00:03:39,629 --> 00:03:45,449
to be able to allow you to create your

00:03:41,849 --> 00:03:48,359
custom rules more easily template

00:03:45,449 --> 00:03:50,669
template is gives you the ability to

00:03:48,359 --> 00:03:54,359
render a file that you've already

00:03:50,669 --> 00:03:56,400
created on disk using any ejs language

00:03:54,359 --> 00:03:58,859
templating structure to be able to

00:03:56,400 --> 00:04:01,260
replace things within there to take your

00:03:58,859 --> 00:04:04,310
blueprint modify it with whatever

00:04:01,260 --> 00:04:07,620
options that you have and output it

00:04:04,310 --> 00:04:09,780
chaining is the ability to take multiple

00:04:07,620 --> 00:04:11,849
rules and processing them in order so

00:04:09,780 --> 00:04:14,699
basically taking a group of things and

00:04:11,849 --> 00:04:18,930
processing them as one in a sequential

00:04:14,699 --> 00:04:21,630
order filter gives you the ability to

00:04:18,930 --> 00:04:24,990
exclude files when you're processing so

00:04:21,630 --> 00:04:28,169
for example in the angular CLI in the

00:04:24,990 --> 00:04:29,820
default schematics if you specify that

00:04:28,169 --> 00:04:32,280
you don't want to test file if that flag

00:04:29,820 --> 00:04:34,470
is true you can filter out a given file

00:04:32,280 --> 00:04:37,070
based off of some sort of convention

00:04:34,470 --> 00:04:40,200
based off of a predicate function

00:04:37,070 --> 00:04:41,370
branching and merging this is a one

00:04:40,200 --> 00:04:42,409
that's a little bit harder to get your

00:04:41,370 --> 00:04:44,479
head around

00:04:42,409 --> 00:04:46,759
but it functions a lot like a git branch

00:04:44,479 --> 00:04:48,559
and that allows you to section off do

00:04:46,759 --> 00:04:50,149
some processing and then merge it back

00:04:48,559 --> 00:04:54,319
so that you can work with just a section

00:04:50,149 --> 00:04:57,729
of a tree at a time schematic is a rule

00:04:54,319 --> 00:05:00,649
for schematics to run another schematic

00:04:57,729 --> 00:05:02,539
so schematics the nice thinking about

00:05:00,649 --> 00:05:05,089
schematics is that they are composable

00:05:02,539 --> 00:05:07,249
so if you were a generic schematic or

00:05:05,089 --> 00:05:09,499
something that you need to reuse then

00:05:07,249 --> 00:05:12,379
you can call that schematic from another

00:05:09,499 --> 00:05:14,419
one for example the creating a new

00:05:12,379 --> 00:05:17,509
application with the angular or with the

00:05:14,419 --> 00:05:19,909
ng new schematic uses the component

00:05:17,509 --> 00:05:21,709
schematic internally to render a

00:05:19,909 --> 00:05:24,079
component this way you can reuse and in

00:05:21,709 --> 00:05:27,169
creating of a component is consistent no

00:05:24,079 --> 00:05:30,709
matter where you are external schematic

00:05:27,169 --> 00:05:32,659
same things as a schematic except for it

00:05:30,709 --> 00:05:34,639
goes outside of your collection if you

00:05:32,659 --> 00:05:36,139
want to process at a schematic that is

00:05:34,639 --> 00:05:38,239
not necessarily part of your collection

00:05:36,139 --> 00:05:40,789
that you want to override some

00:05:38,239 --> 00:05:42,139
functionality to or just execute to be

00:05:40,789 --> 00:05:44,059
able to get that output as part of your

00:05:42,139 --> 00:05:46,129
schematic it gives you that ability as

00:05:44,059 --> 00:05:49,550
well so it's not just internal for the

00:05:46,129 --> 00:05:52,490
composability it's also external so

00:05:49,550 --> 00:05:53,899
let's take a look at the tutorial and in

00:05:52,490 --> 00:05:56,979
order to get set up in order to do this

00:05:53,899 --> 00:06:01,069
two steps first step npm install

00:05:56,979 --> 00:06:04,129
globally the at angular - dev kit slash

00:06:01,069 --> 00:06:06,079
schematic CLI there's a - there - but

00:06:04,129 --> 00:06:07,879
you can read that and what that is going

00:06:06,079 --> 00:06:11,419
to provide you is the ability to run a

00:06:07,879 --> 00:06:16,159
schematics command and the schematics is

00:06:11,419 --> 00:06:19,429
a relatively bare bone CLI to be able to

00:06:16,159 --> 00:06:21,679
scale up new schematics projects nor to

00:06:19,429 --> 00:06:23,479
scale Pannu's schematics project we're

00:06:21,679 --> 00:06:25,550
on the schematics command telling it

00:06:23,479 --> 00:06:27,319
what schematic you wish to run and this

00:06:25,550 --> 00:06:29,509
costs in this case the default

00:06:27,319 --> 00:06:31,579
collection has already assumed for

00:06:29,509 --> 00:06:33,499
reference that is at schematic slash

00:06:31,579 --> 00:06:34,999
schematics but fortunately you don't

00:06:33,499 --> 00:06:37,069
have to type schematics three times

00:06:34,999 --> 00:06:40,789
there and you're gonna render the blank

00:06:37,069 --> 00:06:43,429
schematic the blank one is just a empty

00:06:40,789 --> 00:06:45,589
project with a starter schematic already

00:06:43,429 --> 00:06:47,569
there for you based off of the name in

00:06:45,589 --> 00:06:49,999
this case tutorial is the one that I

00:06:47,569 --> 00:06:52,039
just typed here so tutorial is the name

00:06:49,999 --> 00:06:53,240
of this schematic so if you wanted to

00:06:52,039 --> 00:06:56,829
create one based off of your company

00:06:53,240 --> 00:06:56,829
name you can do that

00:06:58,319 --> 00:07:03,189
all right so an overview of what we're

00:07:01,629 --> 00:07:06,639
going to go over today we're going to

00:07:03,189 --> 00:07:09,129
write a schematic to create a file we're

00:07:06,639 --> 00:07:12,729
gonna write another one to create files

00:07:09,129 --> 00:07:15,909
with a template we're going to extend an

00:07:12,729 --> 00:07:18,009
existing schematic and we're also going

00:07:15,909 --> 00:07:24,150
to use these custom schematics inside of

00:07:18,009 --> 00:07:24,150
the angular CLI so let's get started so

00:07:25,620 --> 00:07:36,520
exit code I've put those same objectives

00:07:33,610 --> 00:07:40,349
here hopefully everybody can see that if

00:07:36,520 --> 00:07:40,349
you can't I am sorry

00:07:40,409 --> 00:07:51,759
well bump it up a little bit more easier

00:07:44,680 --> 00:07:52,029
you're sitting sorry and a little bit

00:07:51,759 --> 00:07:56,499
bigger

00:07:52,029 --> 00:07:58,809
alright so out of the box and I'm gonna

00:07:56,499 --> 00:08:00,219
sexually start here whatever you do so

00:07:58,809 --> 00:08:01,749
we have a collection that it's created

00:08:00,219 --> 00:08:04,180
for us this is the definition of our

00:08:01,749 --> 00:08:07,509
collection of which we have in our

00:08:04,180 --> 00:08:10,089
schematics a single schematic and that

00:08:07,509 --> 00:08:11,860
has a description to say what is a

00:08:10,089 --> 00:08:15,009
little text to say what the schematic is

00:08:11,860 --> 00:08:17,649
doing and a factory of hey what do I

00:08:15,009 --> 00:08:19,209
process when you run this schematic so

00:08:17,649 --> 00:08:21,279
we go into the play down playground

00:08:19,209 --> 00:08:25,749
directory the index file and it's going

00:08:21,279 --> 00:08:26,949
to run something called playground so we

00:08:25,749 --> 00:08:28,149
go back into that file and we see here

00:08:26,949 --> 00:08:30,339
we have a function that we're exporting

00:08:28,149 --> 00:08:31,990
called playground so when the schematics

00:08:30,339 --> 00:08:35,469
engine runs it finds that collection

00:08:31,990 --> 00:08:38,110
information and we'll run this

00:08:35,469 --> 00:08:42,069
particular schematic so what we're going

00:08:38,110 --> 00:08:43,750
to do is we are going to use our tree

00:08:42,069 --> 00:08:45,819
object that we have here and we are

00:08:43,750 --> 00:08:47,649
going to create a file as we saw we have

00:08:45,819 --> 00:08:49,060
the create method and we're gonna create

00:08:47,649 --> 00:08:51,310
a file called hello

00:08:49,060 --> 00:08:52,569
you see the intellisense say hey we need

00:08:51,310 --> 00:08:54,250
the path of where it's going to go and

00:08:52,569 --> 00:08:58,360
then we need some content so we're gonna

00:08:54,250 --> 00:08:59,889
say hello and G cough we can come down

00:08:58,360 --> 00:09:04,230
here and we could run that we have to

00:08:59,889 --> 00:09:04,230
run an empty row npm run build and

00:09:04,730 --> 00:09:10,140
using the schematic CLI we can run

00:09:07,170 --> 00:09:11,730
schematics and here we want to run the

00:09:10,140 --> 00:09:13,380
playground schematic although we need to

00:09:11,730 --> 00:09:16,680
specify the collection is in this

00:09:13,380 --> 00:09:18,839
directory : the name of cymatics or the

00:09:16,680 --> 00:09:21,089
convention there is collection name :

00:09:18,839 --> 00:09:24,209
schematic name so the collection dot

00:09:21,089 --> 00:09:25,800
just says hey it's in this folder so we

00:09:24,209 --> 00:09:27,870
run the schematic against this one this

00:09:25,800 --> 00:09:30,510
one is called playground and there are

00:09:27,870 --> 00:09:34,440
no options so we can run that schematic

00:09:30,510 --> 00:09:36,570
hey that's schematics spelling matters

00:09:34,440 --> 00:09:41,399
on the command line in case you didn't

00:09:36,570 --> 00:09:48,089
know and it doesn't work we are off to a

00:09:41,399 --> 00:09:51,959
great start today alright schema already

00:09:48,089 --> 00:09:53,000
exists all right then we will not run it

00:09:51,959 --> 00:09:55,860
that way

00:09:53,000 --> 00:09:59,100
or MRF no no no no we're not gonna do

00:09:55,860 --> 00:10:01,980
that all right fine so instead of

00:09:59,100 --> 00:10:03,600
running it that way let's do this index

00:10:01,980 --> 00:10:05,130
and let's go to this back and let's

00:10:03,600 --> 00:10:07,620
create a test to actually test for this

00:10:05,130 --> 00:10:10,560
so what this is gives you a spec file to

00:10:07,620 --> 00:10:13,110
be able to run your schematic to be able

00:10:10,560 --> 00:10:14,339
to evaluate it so we're gonna describe

00:10:13,110 --> 00:10:16,830
the playground we had know where the

00:10:14,339 --> 00:10:18,570
collection is we're gonna run this is

00:10:16,830 --> 00:10:20,220
just an arbitrary name and the schematic

00:10:18,570 --> 00:10:22,260
we want to run this playground and we're

00:10:20,220 --> 00:10:24,420
gonna get a tree back from that and it's

00:10:22,260 --> 00:10:29,690
check in here to say hey is the files an

00:10:24,420 --> 00:10:32,370
empty or right so let's run NPM test and

00:10:29,690 --> 00:10:34,800
that should fail because hey we've

00:10:32,370 --> 00:10:36,540
actually created a file now so we can

00:10:34,800 --> 00:10:42,270
say hey we can say that we would expect

00:10:36,540 --> 00:10:46,980
the files to have a length of 1 see you

00:10:42,270 --> 00:10:48,329
then and we can rerun this test perfect

00:10:46,980 --> 00:10:49,620
so now we can say hey our tests are

00:10:48,329 --> 00:10:51,750
running successfully and we know that

00:10:49,620 --> 00:10:53,940
we've done that so let's check to see

00:10:51,750 --> 00:10:55,560
all right let's get it sorry right here

00:10:53,940 --> 00:10:58,500
we're gonna get the content of that file

00:10:55,560 --> 00:11:03,149
and the content of the file is going to

00:10:58,500 --> 00:11:06,300
come from tree dot read content just a

00:11:03,149 --> 00:11:07,950
word of information here read content

00:11:06,300 --> 00:11:11,370
does not exist on the tree object so

00:11:07,950 --> 00:11:14,520
when you're running writing your actual

00:11:11,370 --> 00:11:17,150
schematic you do not have access to read

00:11:14,520 --> 00:11:20,930
content it is just a helper method

00:11:17,150 --> 00:11:23,720
to simplify reading from a tree to make

00:11:20,930 --> 00:11:25,430
your test writing a little bit easier as

00:11:23,720 --> 00:11:27,230
you can see here returns a buffer so you

00:11:25,430 --> 00:11:28,490
have to then get the buffer or check to

00:11:27,230 --> 00:11:33,170
see if it's null and it just simplifies

00:11:28,490 --> 00:11:34,780
the process when writing tests all right

00:11:33,170 --> 00:11:37,490
we do not want that information there

00:11:34,780 --> 00:11:39,020
come back go back to our test and say

00:11:37,490 --> 00:11:41,960
all right we need to read a file out

00:11:39,020 --> 00:11:45,470
we're gonna read the file hello and then

00:11:41,960 --> 00:11:48,590
we expect to the content dot to equal

00:11:45,470 --> 00:11:52,580
and here we're just gonna make sure sure

00:11:48,590 --> 00:11:53,990
that our test is running again as that

00:11:52,580 --> 00:11:55,970
test is running I'm going to fix the

00:11:53,990 --> 00:11:58,730
test just to save a little bit of time

00:11:55,970 --> 00:12:01,700
save that see that it's not working and

00:11:58,730 --> 00:12:07,990
then we see that our test is working no

00:12:01,700 --> 00:12:10,460
no please please don't clap all right so

00:12:07,990 --> 00:12:12,080
thank you

00:12:10,460 --> 00:12:15,080
next up so we wanted to be able to

00:12:12,080 --> 00:12:16,730
create files with a template so we're

00:12:15,080 --> 00:12:17,120
just gonna back this out we're not gonna

00:12:16,730 --> 00:12:18,680
do that

00:12:17,120 --> 00:12:22,100
and before I forget because I always

00:12:18,680 --> 00:12:24,080
forget to do this where you fix the test

00:12:22,100 --> 00:12:25,940
because otherwise test breaking I always

00:12:24,080 --> 00:12:28,880
forget to do that so in order to render

00:12:25,940 --> 00:12:31,040
a component we are actually not going to

00:12:28,880 --> 00:12:33,410
need the tree directly in order to do

00:12:31,040 --> 00:12:37,130
that so in here I created a snippet

00:12:33,410 --> 00:12:38,270
already so I'm going to just need to say

00:12:37,130 --> 00:12:40,700
hey we brought in some additional

00:12:38,270 --> 00:12:43,670
references here I'm going to use apply

00:12:40,700 --> 00:12:45,800
from here I'm gonna type these by hand

00:12:43,670 --> 00:12:48,590
because it's faster template is next

00:12:45,800 --> 00:12:50,750
alphabetically and then URL and then

00:12:48,590 --> 00:12:53,450
options is here we're actually not going

00:12:50,750 --> 00:12:58,040
to use options and then we want to

00:12:53,450 --> 00:13:00,020
render that here either so then we also

00:12:58,040 --> 00:13:01,070
need to run this out and I'm just going

00:13:00,020 --> 00:13:03,260
to get this ready and then I'll explain

00:13:01,070 --> 00:13:07,160
exactly what's going on here and we're

00:13:03,260 --> 00:13:09,200
gonna - there we go

00:13:07,160 --> 00:13:14,330
another file that we need to bring in

00:13:09,200 --> 00:13:17,480
here merge with so what we want to do is

00:13:14,330 --> 00:13:20,180
render out some files from a URL so we

00:13:17,480 --> 00:13:22,100
want to apply which is gonna return us a

00:13:20,180 --> 00:13:24,620
source but in order to get things in

00:13:22,100 --> 00:13:27,800
there we're going to go to a URL and get

00:13:24,620 --> 00:13:30,050
some files where that URL is everything

00:13:27,800 --> 00:13:30,710
under the files directory so let's go

00:13:30,050 --> 00:13:33,830
ahead and create

00:13:30,710 --> 00:13:35,870
files director not with a slasher

00:13:33,830 --> 00:13:37,310
problem so now we have a files director

00:13:35,870 --> 00:13:39,290
so it's going to go into that file or

00:13:37,310 --> 00:13:42,140
that directory find all the files within

00:13:39,290 --> 00:13:44,270
there and then apply the template rule

00:13:42,140 --> 00:13:48,070
to that so let's create a file within

00:13:44,270 --> 00:13:50,540
here and we'll just call this hello

00:13:48,070 --> 00:13:52,220
because that's what we had before and

00:13:50,540 --> 00:13:54,709
we're going to fiddle off the same task

00:13:52,220 --> 00:13:57,170
anyway so in here we can render out some

00:13:54,709 --> 00:13:59,750
sort of options in which case I am going

00:13:57,170 --> 00:14:03,860
to use the syntax to be able to render

00:13:59,750 --> 00:14:05,870
out a message and there we go and you

00:14:03,860 --> 00:14:08,630
can put our ancillary text around that

00:14:05,870 --> 00:14:10,760
as well so hello : and then some sort of

00:14:08,630 --> 00:14:12,410
message and this is a property that's

00:14:10,760 --> 00:14:16,370
going to need to exist on the object

00:14:12,410 --> 00:14:21,410
that you're passing in so we're come in

00:14:16,370 --> 00:14:25,760
here and we this needs to be template

00:14:21,410 --> 00:14:27,200
source that's why okay so in here we

00:14:25,760 --> 00:14:29,630
have we're passing in options but we're

00:14:27,200 --> 00:14:33,080
not getting anything on there so what we

00:14:29,630 --> 00:14:35,770
can do is we can extend this options put

00:14:33,080 --> 00:14:41,120
that in here and then we want to have a

00:14:35,770 --> 00:14:43,730
stop a message and here we're gonna go

00:14:41,120 --> 00:14:46,240
back and word mg off anybody been to

00:14:43,730 --> 00:14:50,150
that one I've heard really good things

00:14:46,240 --> 00:14:52,550
no nobody okay so we're going to render

00:14:50,150 --> 00:14:55,190
a message of ng-conf into that file when

00:14:52,550 --> 00:14:57,200
we process that template so we can go

00:14:55,190 --> 00:14:59,420
back here and we're going to run that

00:14:57,200 --> 00:15:02,900
test again so we're gonna get the

00:14:59,420 --> 00:15:06,770
content again so we're going to put the

00:15:02,900 --> 00:15:08,209
same stuff back put content back here we

00:15:06,770 --> 00:15:10,850
know that that isn't going to match

00:15:08,209 --> 00:15:12,320
initially when we run our test because

00:15:10,850 --> 00:15:19,100
we added a different message at the

00:15:12,320 --> 00:15:25,010
beginning it doesn't declare but it's

00:15:19,100 --> 00:15:26,560
fine you're not used and I took those

00:15:25,010 --> 00:15:28,490
out sorry

00:15:26,560 --> 00:15:31,930
so the rules are a little bit strict

00:15:28,490 --> 00:15:31,930
with hunting but we'll combine them

00:15:33,550 --> 00:15:36,280
okay so now we see our test is failing

00:15:35,110 --> 00:15:39,790
because we didn't have the ancillary

00:15:36,280 --> 00:15:41,590
message at the beginning and we can the

00:15:39,790 --> 00:15:44,700
test is failing people that's not a good

00:15:41,590 --> 00:15:44,700
thing all right

00:15:45,840 --> 00:15:53,910
there were some testing talks this week

00:15:48,760 --> 00:15:56,860
you could have gone to those thank you

00:15:53,910 --> 00:15:59,170
all right so now we have that heat

00:15:56,860 --> 00:16:01,810
within here so we can go and and let's

00:15:59,170 --> 00:16:03,370
actually just create another schematic

00:16:01,810 --> 00:16:07,740
so we're gonna create another one and

00:16:03,370 --> 00:16:10,960
this is gonna be something called

00:16:07,740 --> 00:16:14,820
playground two that's two in that's too

00:16:10,960 --> 00:16:14,820
close let's create another one called

00:16:15,540 --> 00:16:20,200
sandbox thank you

00:16:17,260 --> 00:16:21,550
so shall I stop saying your name so in

00:16:20,200 --> 00:16:25,860
here we're gonna create that one inside

00:16:21,550 --> 00:16:30,970
here called sandbox and index and

00:16:25,860 --> 00:16:32,230
sandbox so I'm going to super cheat I'm

00:16:30,970 --> 00:16:35,170
gonna copy that and we're gonna call

00:16:32,230 --> 00:16:36,400
that sandbox we're gonna get rid of the

00:16:35,170 --> 00:16:38,860
files because we're not going to render

00:16:36,400 --> 00:16:45,160
any new files within here we're just

00:16:38,860 --> 00:16:49,030
going to delete that super index we're

00:16:45,160 --> 00:16:52,180
gonna come in here and we're gonna

00:16:49,030 --> 00:16:54,490
change this one around to say alright we

00:16:52,180 --> 00:16:56,470
want to run a schematic so we're going

00:16:54,490 --> 00:16:58,950
to actually change the couple operations

00:16:56,470 --> 00:17:01,090
in here so here we're going to change

00:16:58,950 --> 00:17:03,640
which work again we're going to combine

00:17:01,090 --> 00:17:05,050
some things within here and we're gonna

00:17:03,640 --> 00:17:08,230
run this schematic we want to run our

00:17:05,050 --> 00:17:16,920
playground schematic and let's bring

00:17:08,230 --> 00:17:21,370
that in here as a reference playground

00:17:16,920 --> 00:17:23,110
and it takes office as well

00:17:21,370 --> 00:17:25,330
I've way to remember that we need to

00:17:23,110 --> 00:17:26,830
pass in a message so we're not actually

00:17:25,330 --> 00:17:28,690
gonna pass options we're gonna say hey

00:17:26,830 --> 00:17:32,590
you know what oh I heard critter that in

00:17:28,690 --> 00:17:35,440
there don't know yeah we're good no hard

00:17:32,590 --> 00:17:37,960
coding that's bad okay and then from

00:17:35,440 --> 00:17:41,000
within here we're just extending that

00:17:37,960 --> 00:17:44,030
chain and we're gonna return this out

00:17:41,000 --> 00:17:47,120
so clean that out hey we haven't brought

00:17:44,030 --> 00:17:49,100
it in chained yet so and I'm actually

00:17:47,120 --> 00:17:51,110
changing anything here just running that

00:17:49,100 --> 00:17:53,330
it's gonna complain because we're not

00:17:51,110 --> 00:17:57,620
using murder if we're using schematic

00:17:53,330 --> 00:17:58,179
we're not using what hey there's a comma

00:17:57,620 --> 00:18:00,650
there

00:17:58,179 --> 00:18:03,260
it needs a common error we're not

00:18:00,650 --> 00:18:05,780
templating that's a comp really a comma

00:18:03,260 --> 00:18:07,700
like gets the fault okay things happen

00:18:05,780 --> 00:18:10,760
okay so in here we shall be able to run

00:18:07,700 --> 00:18:13,820
this apply thank you havea cream

00:18:10,760 --> 00:18:16,400
underline look at that I'm getting

00:18:13,820 --> 00:18:18,200
applause for listening this is great all

00:18:16,400 --> 00:18:19,970
right so now we can run our test and

00:18:18,200 --> 00:18:21,409
we're gonna hopefully see that that's

00:18:19,970 --> 00:18:23,059
still working because it should get the

00:18:21,409 --> 00:18:24,470
same exact result out and the test

00:18:23,059 --> 00:18:25,549
shoots don't work because all we're

00:18:24,470 --> 00:18:28,940
doing is in the extend didn't the other

00:18:25,549 --> 00:18:30,140
one and then from within here and my

00:18:28,940 --> 00:18:31,460
time is just about up so I'm not going

00:18:30,140 --> 00:18:34,520
to modify it anymore

00:18:31,460 --> 00:18:36,169
sorry inside of the sandbox one you

00:18:34,520 --> 00:18:38,000
could chain that and you can filter you

00:18:36,169 --> 00:18:39,890
can modify the tree that's coming out of

00:18:38,000 --> 00:18:41,919
that to do other things and this is all

00:18:39,890 --> 00:18:47,120
great but let's run a build here

00:18:41,919 --> 00:18:48,919
hopefully this builds it did build all

00:18:47,120 --> 00:18:49,850
right we're good there and what I'm

00:18:48,919 --> 00:18:53,630
gonna do is I'm gonna switch over to

00:18:49,850 --> 00:18:57,650
this CLI project and inside here I'm

00:18:53,630 --> 00:18:59,059
gonna run ng generate and then actually

00:18:57,650 --> 00:19:03,320
I need to install this so I need to

00:18:59,059 --> 00:19:05,090
install dot dot slash playground which

00:19:03,320 --> 00:19:06,590
is just because the files are those two

00:19:05,090 --> 00:19:08,659
projects are in the same directory so

00:19:06,590 --> 00:19:10,250
we're inside this CLI project I'm

00:19:08,659 --> 00:19:11,809
installing the playground that I had

00:19:10,250 --> 00:19:13,190
just played with it's just a local

00:19:11,809 --> 00:19:15,950
install you can see that in the

00:19:13,190 --> 00:19:18,350
package.json here it's just a local

00:19:15,950 --> 00:19:20,150
piece here so from there since I now

00:19:18,350 --> 00:19:23,000
have reference to that I can run ng

00:19:20,150 --> 00:19:25,880
generate and I am running the playground

00:19:23,000 --> 00:19:28,309
schematic and here I'm gonna run the

00:19:25,880 --> 00:19:31,640
sandbox or me the playground collection

00:19:28,309 --> 00:19:33,380
and the sandbox schematic within there

00:19:31,640 --> 00:19:36,590
and I'll see here that's actually going

00:19:33,380 --> 00:19:39,530
to gender oh it's not things happened

00:19:36,590 --> 00:19:42,010
accidents were made cannot resolve the

00:19:39,530 --> 00:19:42,010
factory

00:19:46,460 --> 00:19:55,530
other project back here yes thank you

00:19:51,420 --> 00:20:00,750
so in here sandbox sandbox good looking

00:19:55,530 --> 00:20:02,580
good I'll build it again there's loud

00:20:00,750 --> 00:20:04,710
banging if anybody could hear it it

00:20:02,580 --> 00:20:06,390
sounds like a drum roll but not really

00:20:04,710 --> 00:20:12,809
like a really sad drum and we could see

00:20:06,390 --> 00:20:14,550
that we create the file so the piece I

00:20:12,809 --> 00:20:18,450
want to leave you guys with is that

00:20:14,550 --> 00:20:20,929
while these examples are smaller I said

00:20:18,450 --> 00:20:23,400
those things okay so the thing with

00:20:20,929 --> 00:20:26,160
schematics and all these templates with

00:20:23,400 --> 00:20:29,760
basic examples to get you started but

00:20:26,160 --> 00:20:32,100
the ceiling is really way high things to

00:20:29,760 --> 00:20:33,990
know is that ng update from the CLI is

00:20:32,100 --> 00:20:35,580
purely running schematics and when you

00:20:33,990 --> 00:20:37,380
updated its they're more complicated

00:20:35,580 --> 00:20:39,809
rules and you can create your own more

00:20:37,380 --> 00:20:41,670
complicated rules to be able to do

00:20:39,809 --> 00:20:43,800
things as complicated as ng update to

00:20:41,670 --> 00:20:46,380
update a library and you add uses

00:20:43,800 --> 00:20:48,630
schematics to be able to do that and

00:20:46,380 --> 00:20:50,280
that's there's a lot of different things

00:20:48,630 --> 00:20:51,390
you can do there it's asynchronous as

00:20:50,280 --> 00:20:53,280
well so if you want to store files

00:20:51,390 --> 00:20:54,690
externally for your templates you can do

00:20:53,280 --> 00:20:56,790
that and pull those in and render those

00:20:54,690 --> 00:20:59,010
that way there's quite a few things you

00:20:56,790 --> 00:21:00,809
can do my name is Mike you can find me

00:20:59,010 --> 00:21:03,020
at at Braco I will take the repo that I

00:21:00,809 --> 00:21:05,220
created here and I will push it to that

00:21:03,020 --> 00:21:07,170
repository which exists but has nothing

00:21:05,220 --> 00:21:09,720
there at this point because I haven't

00:21:07,170 --> 00:21:12,510
committed and pushed yet thank you to

00:21:09,720 --> 00:21:14,230
hans larson for creating the schematics

00:21:12,510 --> 00:21:17,720
library that all this is built on top of

00:21:14,230 --> 00:21:17,720
[Applause]

00:21:18,309 --> 00:21:21,630
and that's all I have for you today

00:21:20,300 --> 00:21:25,549
thank you very much

00:21:21,630 --> 00:21:25,549
[Applause]

00:21:32,290 --> 00:21:34,350

YouTube URL: https://www.youtube.com/watch?v=y6uSJ4a5sMA


