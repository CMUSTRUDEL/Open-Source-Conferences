Title: RXJS Observables in Angular - Ward Bell & Sander Ellis
Publication date: 2018-11-16
Playlist: ng-conf 2018
Description: 
	ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:09,929 --> 00:00:13,679
what's this theme this is from Tron

00:00:11,940 --> 00:00:17,520
isn't it yeah it's from toilet it's like

00:00:13,679 --> 00:00:19,770
1980 something right 82 82 the beginning

00:00:17,520 --> 00:00:22,320
of the 80s and there we are with the

00:00:19,770 --> 00:00:24,810
most awful animation ever yeah didn't

00:00:22,320 --> 00:00:31,109
you see okay you did it again no you

00:00:24,810 --> 00:00:32,279
can't is I never look like that okay so

00:00:31,109 --> 00:00:35,309
have a look like that either

00:00:32,279 --> 00:00:38,040
haha no never did we're gonna MacGyver

00:00:35,309 --> 00:00:40,860
this rxjs thing yeah

00:00:38,040 --> 00:00:44,369
first we're going to cover observable

00:00:40,860 --> 00:00:47,369
anxiety which is afflicting many of many

00:00:44,369 --> 00:00:48,900
of you many of us made me and then

00:00:47,369 --> 00:00:52,710
because this is really a talk about

00:00:48,900 --> 00:00:54,689
angular in rxjs rather than rxjs sitting

00:00:52,710 --> 00:00:57,869
all by itself we're gonna look at the

00:00:54,689 --> 00:01:00,689
key api's and angular that use rxjs and

00:00:57,869 --> 00:01:04,769
see you know sort of learn rxjs by way

00:01:00,689 --> 00:01:07,020
of angular rather than watching counters

00:01:04,769 --> 00:01:09,600
and bouncing balls and then somewhere at

00:01:07,020 --> 00:01:11,460
the end if we get there and we're fast

00:01:09,600 --> 00:01:13,680
we're gonna have a little bit of fun

00:01:11,460 --> 00:01:15,600
with arcgis itself in the context of

00:01:13,680 --> 00:01:19,320
everything in an Rx is fun and easy

00:01:15,600 --> 00:01:21,780
going oh this is easy I don't know what

00:01:19,320 --> 00:01:24,470
you guys are complaining about is

00:01:21,780 --> 00:01:27,630
there's just a few operators out there

00:01:24,470 --> 00:01:28,920
so I put it a fool to don't learn them

00:01:27,630 --> 00:01:33,920
all I pity the fool

00:01:28,920 --> 00:01:38,280
remember this guy mr. t anyway there's a

00:01:33,920 --> 00:01:40,860
cure for operator anxiety which some of

00:01:38,280 --> 00:01:42,420
us have and it begins with stop worrying

00:01:40,860 --> 00:01:45,570
which is about as good advices keep your

00:01:42,420 --> 00:01:47,520
eye on the ball yeah that's um so but

00:01:45,570 --> 00:01:50,000
really just use the operators you know

00:01:47,520 --> 00:01:53,970
and let go of what you don't know and

00:01:50,000 --> 00:01:56,430
when you get stuck you can always code

00:01:53,970 --> 00:01:57,120
imperative Lee in the subscribed method

00:01:56,430 --> 00:01:59,070
and we're going to show you the

00:01:57,120 --> 00:02:01,620
SUBSCRIBE method and when everything

00:01:59,070 --> 00:02:03,450
else fails you just do it there I mean

00:02:01,620 --> 00:02:07,140
really don't be a hero don't be in rxjs

00:02:03,450 --> 00:02:09,330
hero and then there's this cool link

00:02:07,140 --> 00:02:11,610
called which operator do I use and if I

00:02:09,330 --> 00:02:15,090
click this thing it'll bring it up and

00:02:11,610 --> 00:02:17,519
what this is is a what do they call

00:02:15,090 --> 00:02:19,590
those trees decision tree decision guav

00:02:17,519 --> 00:02:20,819
yeah so you figure out what you want to

00:02:19,590 --> 00:02:22,870
do and then you keep working your way

00:02:20,819 --> 00:02:26,620
right until you find the method

00:02:22,870 --> 00:02:33,129
interested in and that is enormous ly

00:02:26,620 --> 00:02:35,409
helpful so yeah so anyway these are our

00:02:33,129 --> 00:02:37,000
steps for sort of taming the anxiety and

00:02:35,409 --> 00:02:39,700
then you just go about learning the new

00:02:37,000 --> 00:02:42,400
operator at your leisure yeah take one

00:02:39,700 --> 00:02:45,519
up all right out of the time exactly so

00:02:42,400 --> 00:02:49,870
there are four major api's and angular

00:02:45,519 --> 00:02:51,819
that use rxjs and so whether you want to

00:02:49,870 --> 00:02:53,470
you know even want to learn rxjs you're

00:02:51,819 --> 00:02:57,030
gonna face them so you might as well

00:02:53,470 --> 00:03:00,040
face into it and we have a boatload of

00:02:57,030 --> 00:03:01,810
examples to help guide you through that

00:03:00,040 --> 00:03:04,690
and we're going to do that right now

00:03:01,810 --> 00:03:06,250
with the help of david hasselhoff are

00:03:04,690 --> 00:03:09,310
you going to drive right in

00:03:06,250 --> 00:03:10,720
I'm gonna drive right into it so here is

00:03:09,310 --> 00:03:12,640
the samples this doesn't look very

00:03:10,720 --> 00:03:15,480
helpful oh there I click a button and

00:03:12,640 --> 00:03:17,980
suddenly I have a panoply of method

00:03:15,480 --> 00:03:21,190
buttons here each doing different

00:03:17,980 --> 00:03:23,560
examples so we'll try that one how about

00:03:21,190 --> 00:03:27,190
that it gets and subscribes that's a

00:03:23,560 --> 00:03:29,440
nice life better your favorites are one

00:03:27,190 --> 00:03:31,150
today I don't know how you got Star Wars

00:03:29,440 --> 00:03:35,650
into one of my presentations but you

00:03:31,150 --> 00:03:41,650
figured it out yeah okay so I got a

00:03:35,650 --> 00:03:46,870
better job so this is the service behind

00:03:41,650 --> 00:03:49,269
it and you can see that we get jeez

00:03:46,870 --> 00:03:51,069
that's HDPE there's a get method and the

00:03:49,269 --> 00:03:53,530
net result is this observable of route

00:03:51,069 --> 00:03:55,090
movies now route movies is what the API

00:03:53,530 --> 00:03:56,980
gives us usually when you're talking to

00:03:55,090 --> 00:04:00,459
something you have no control over the

00:03:56,980 --> 00:04:01,810
API and this is one of those cases so we

00:04:00,459 --> 00:04:03,940
got to kind of take what they give us

00:04:01,810 --> 00:04:06,459
and it's like it gets a count and next

00:04:03,940 --> 00:04:08,470
and all that other stuff and a lot of

00:04:06,459 --> 00:04:09,879
things we don't need it we don't need

00:04:08,470 --> 00:04:12,280
much but that's what it's gonna give us

00:04:09,879 --> 00:04:15,790
back so we got a deal with it yeah so we

00:04:12,280 --> 00:04:20,440
get it and then we got to consume it in

00:04:15,790 --> 00:04:27,220
the in the component so let's it helps

00:04:20,440 --> 00:04:29,920
us simple films component and

00:04:27,220 --> 00:04:32,620
that's pretty simple let film of films

00:04:29,920 --> 00:04:35,530
film title we've seen that before we

00:04:32,620 --> 00:04:36,730
inject the film service we get data what

00:04:35,530 --> 00:04:40,630
does that do there it is

00:04:36,730 --> 00:04:44,170
subscribe alright so you know this you

00:04:40,630 --> 00:04:46,450
get the data back the first call back in

00:04:44,170 --> 00:04:47,950
subscribe it's just like then the first

00:04:46,450 --> 00:04:50,380
call back is the good stuff

00:04:47,950 --> 00:04:52,390
it comes back now you assign the you

00:04:50,380 --> 00:04:54,610
pluck the results out of the data object

00:04:52,390 --> 00:04:56,290
and you sign it to the films array and

00:04:54,610 --> 00:05:00,160
then it goes and and you get a

00:04:56,290 --> 00:05:01,030
presentation no problem let me do

00:05:00,160 --> 00:05:03,550
something exciting

00:05:01,030 --> 00:05:05,740
oh well we could try adding we should

00:05:03,550 --> 00:05:08,860
make a new movie let's yeah we should be

00:05:05,740 --> 00:05:11,740
able to do that so let's go to silly

00:05:08,860 --> 00:05:14,380
little of - I think version - yeah

00:05:11,740 --> 00:05:19,900
that's after one this is the same thing

00:05:14,380 --> 00:05:22,270
except it's got a an ad ad movie which

00:05:19,900 --> 00:05:25,240
also returns an observable of something

00:05:22,270 --> 00:05:26,640
and it uses an HTTP POST which is kind

00:05:25,240 --> 00:05:30,340
of what you do when you add something

00:05:26,640 --> 00:05:34,090
and if we look at how that's consumed

00:05:30,340 --> 00:05:35,980
we'll go to the component - which should

00:05:34,090 --> 00:05:40,420
be here let's just I start typing until

00:05:35,980 --> 00:05:43,150
we see it simple films component - and

00:05:40,420 --> 00:05:44,620
there's our ad and there's our ad and so

00:05:43,150 --> 00:05:46,350
hey this should work great so let me

00:05:44,620 --> 00:05:48,450
close that one down come in here

00:05:46,350 --> 00:05:51,820
generate is bound to it and

00:05:48,450 --> 00:05:53,260
unprecedented everything promise me a

00:05:51,820 --> 00:05:56,050
new thing you told me it would do

00:05:53,260 --> 00:06:00,610
something we got broken example here ok

00:05:56,050 --> 00:06:02,530
everybody what did we not do anybody

00:06:00,610 --> 00:06:04,000
shout it out cuz everybody makes this

00:06:02,530 --> 00:06:11,650
mistake and they wonder why they're

00:06:04,000 --> 00:06:13,210
afters nuts the answer yes even though

00:06:11,650 --> 00:06:15,790
we don't really want anything to come

00:06:13,210 --> 00:06:17,350
back we got at least subscribed to it to

00:06:15,790 --> 00:06:18,700
execute it and yes you can have a

00:06:17,350 --> 00:06:20,140
subscribe method that doesn't have any

00:06:18,700 --> 00:06:23,020
callbacks in it it just works just great

00:06:20,140 --> 00:06:25,270
yeah it just kicks the thing off alright

00:06:23,020 --> 00:06:29,110
let's try it again we come here we

00:06:25,270 --> 00:06:30,880
generate I'm new observer and we could

00:06:29,110 --> 00:06:32,710
do more of that I want to yeah I want to

00:06:30,880 --> 00:06:37,180
see that movie like three times yeah now

00:06:32,710 --> 00:06:39,030
you can but you know things always go

00:06:37,180 --> 00:06:40,990
right for me they go right for you

00:06:39,030 --> 00:06:43,449
always I never ride

00:06:40,990 --> 00:06:45,880
my coat i beckoned some always up I

00:06:43,449 --> 00:06:48,039
never have any problems of a network so

00:06:45,880 --> 00:06:51,699
we are done we can ship this thing well

00:06:48,039 --> 00:06:53,530
we we might but I I've been a little bit

00:06:51,699 --> 00:06:58,090
evil here and I've got a button in here

00:06:53,530 --> 00:07:00,370
that will mess up our URL we just do

00:06:58,090 --> 00:07:04,150
this so Teddy the thing doesn't come

00:07:00,370 --> 00:07:06,250
that is probably not oh yeah like what

00:07:04,150 --> 00:07:07,840
API URL that's not the one you're

00:07:06,250 --> 00:07:09,300
looking for it is not the API you're

00:07:07,840 --> 00:07:13,720
looking for

00:07:09,300 --> 00:07:16,180
so that's killing me so now when we do

00:07:13,720 --> 00:07:17,770
this thing we got nothing but we can see

00:07:16,180 --> 00:07:22,930
that we're getting a 404 error behind

00:07:17,770 --> 00:07:24,520
the scenes all right I guess II error so

00:07:22,930 --> 00:07:26,020
we ship it off and say hey open the

00:07:24,520 --> 00:07:26,949
console that's what we should do we

00:07:26,020 --> 00:07:29,349
should tell them just look at the

00:07:26,949 --> 00:07:31,990
console that's what we tell users I'm a

00:07:29,349 --> 00:07:36,729
payment that III know you are but I have

00:07:31,990 --> 00:07:38,889
a higher standard Center so that is why

00:07:36,729 --> 00:07:42,550
we have this handy-dandy second

00:07:38,889 --> 00:07:45,009
parameter the second argument to

00:07:42,550 --> 00:07:46,750
subscribe which is the error argument I

00:07:45,009 --> 00:07:48,639
guess what if this was a then you have

00:07:46,750 --> 00:07:51,310
the two as well so this is it's just

00:07:48,639 --> 00:07:52,870
like a promise it's still like a promise

00:07:51,310 --> 00:07:55,120
in this respect but the promise is not

00:07:52,870 --> 00:07:58,659
the same as I'm not suitable okay so

00:07:55,120 --> 00:08:03,930
this is working now let me go and toggle

00:07:58,659 --> 00:08:07,120
the bed which is not oh we get that

00:08:03,930 --> 00:08:08,919
those're yeah he knows beautiful bit

00:08:07,120 --> 00:08:10,509
this is perfect you would ship this

00:08:08,919 --> 00:08:12,969
right yeah I thought I'd oh right

00:08:10,509 --> 00:08:15,940
because this is like the user knows what

00:08:12,969 --> 00:08:18,130
to do yeah he knows HD at 404 that's

00:08:15,940 --> 00:08:24,940
that's obvious isn't it it's obvious

00:08:18,130 --> 00:08:27,190
this app is yep I think we might I think

00:08:24,940 --> 00:08:28,570
what we would really like to do is have

00:08:27,190 --> 00:08:31,719
something that looked a little bit like

00:08:28,570 --> 00:08:33,729
that a user friendly message sorry but I

00:08:31,719 --> 00:08:35,770
can move it can get moves right now

00:08:33,729 --> 00:08:37,120
so the TR that is closed or something

00:08:35,770 --> 00:08:38,950
well at least you could yeah it could be

00:08:37,120 --> 00:08:39,159
that but you can try again later all

00:08:38,950 --> 00:08:43,930
right

00:08:39,159 --> 00:08:45,070
okay nice Sexton well that me to go

00:08:43,930 --> 00:08:48,190
that's what we're gonna do we're gonna

00:08:45,070 --> 00:08:49,839
have to look at some code and what we're

00:08:48,190 --> 00:08:52,380
going to do in there we're gonna have to

00:08:49,839 --> 00:08:54,250
change both the service and the

00:08:52,380 --> 00:08:56,110
component

00:08:54,250 --> 00:08:58,060
so let's start with the service and it

00:08:56,110 --> 00:08:59,800
you know we've put off as long as we can

00:08:58,060 --> 00:09:08,800
learning about operators but the time

00:08:59,800 --> 00:09:11,320
has come yes it is cool so here we are

00:09:08,800 --> 00:09:16,150
did I do the right one simple Philips

00:09:11,320 --> 00:09:18,700
three I think so easy that's cuz I'm in

00:09:16,150 --> 00:09:20,560
the component huh huh you should open

00:09:18,700 --> 00:09:24,370
yeah I should try the service shouldn't

00:09:20,560 --> 00:09:27,370
okay here we go so here's where we were

00:09:24,370 --> 00:09:28,900
getting the movie and now what we do is

00:09:27,370 --> 00:09:30,970
we have to do this pipe thing and I'm

00:09:28,900 --> 00:09:33,670
hoping you guys learn by a pipe you pipe

00:09:30,970 --> 00:09:36,340
you use a pipe for any stream anything

00:09:33,670 --> 00:09:37,960
I've been using a pipe for years yeah me

00:09:36,340 --> 00:09:40,150
too it's it steam smoke

00:09:37,960 --> 00:09:41,920
I've pipes in my hose that spring water

00:09:40,150 --> 00:09:44,800
I'm from San Francisco dude I have a guy

00:09:41,920 --> 00:09:48,790
I go back so we break out the old pipe

00:09:44,800 --> 00:09:52,540
and we stuff it full of operators from

00:09:48,790 --> 00:09:54,430
Eric schools like the catcherror one so

00:09:52,540 --> 00:09:57,250
you throw something and it catches there

00:09:54,430 --> 00:09:58,540
right it catches that error and it again

00:09:57,250 --> 00:10:00,550
it lets you know in the console that

00:09:58,540 --> 00:10:01,360
things didn't work out so well but what

00:10:00,550 --> 00:10:03,880
we're going to do is we're going to

00:10:01,360 --> 00:10:06,130
create that friendly or message alright

00:10:03,880 --> 00:10:08,200
and we're gonna throw that error again

00:10:06,130 --> 00:10:09,940
with another operator we're gonna return

00:10:08,200 --> 00:10:12,220
what's it simple enough it's an error

00:10:09,940 --> 00:10:17,530
observable that passes this message nice

00:10:12,220 --> 00:10:20,380
and simply back up and now I'm gonna

00:10:17,530 --> 00:10:25,630
keep this open I'm gonna do simple films

00:10:20,380 --> 00:10:28,570
three the component and now in our

00:10:25,630 --> 00:10:30,760
callback in the subscribe if things are

00:10:28,570 --> 00:10:32,710
bad we get a nice string error message

00:10:30,760 --> 00:10:35,530
that we can put in there and that's how

00:10:32,710 --> 00:10:37,450
we get a nice different from the problem

00:10:35,530 --> 00:10:39,010
it's not that much different but there

00:10:37,450 --> 00:10:41,170
is something different here and it's

00:10:39,010 --> 00:10:44,110
pretty important and it might be easier

00:10:41,170 --> 00:10:45,550
to see if I went into simple films too

00:10:44,110 --> 00:10:50,920
and put this a little bit side-by-side

00:10:45,550 --> 00:10:53,260
so let me give that a try so that's two

00:10:50,920 --> 00:10:57,190
there this is three here and you may

00:10:53,260 --> 00:10:59,950
notice that before we had that fish the

00:10:57,190 --> 00:11:01,330
results out of that data package we

00:10:59,950 --> 00:11:02,800
shouldn't be doing that in a component

00:11:01,330 --> 00:11:04,480
you know the component should with

00:11:02,800 --> 00:11:06,380
homeowner wants films it shouldn't know

00:11:04,480 --> 00:11:09,410
about anything else I agree

00:11:06,380 --> 00:11:11,660
we use services rather than have the

00:11:09,410 --> 00:11:14,090
component to HTTP it so we can push the

00:11:11,660 --> 00:11:16,820
work down into a service that's why the

00:11:14,090 --> 00:11:18,740
pattern works so we shouldn't be

00:11:16,820 --> 00:11:20,720
bubbling up some details about how it

00:11:18,740 --> 00:11:23,450
how it actually goes so while we're in

00:11:20,720 --> 00:11:25,790
here catching the error we're gonna use

00:11:23,450 --> 00:11:27,620
the map another operator this is one of

00:11:25,790 --> 00:11:29,990
the ones I know you're gonna know or you

00:11:27,620 --> 00:11:31,760
already know and we're going to stracke

00:11:29,990 --> 00:11:33,800
the results which is the film's

00:11:31,760 --> 00:11:38,000
there's the same thing as the area map

00:11:33,800 --> 00:11:40,340
does exactly and now when we look at the

00:11:38,000 --> 00:11:43,100
cat the components it's getting

00:11:40,340 --> 00:11:45,950
something that's reasonable for it to

00:11:43,100 --> 00:11:49,100
play with so so we get a sense we've

00:11:45,950 --> 00:11:51,350
given it a developer friendly result and

00:11:49,100 --> 00:11:53,240
we've given it a user friendly error

00:11:51,350 --> 00:11:55,910
message I still think there's a shitload

00:11:53,240 --> 00:11:59,290
of code can we do that here can we clean

00:11:55,910 --> 00:12:02,210
this up a little bit you think we can I

00:11:59,290 --> 00:12:04,280
suspect I forget what I don't know it

00:12:02,210 --> 00:12:08,510
was Xander but I'm gonna let that go

00:12:04,280 --> 00:12:11,270
okay sorry but movies can not be found

00:12:08,510 --> 00:12:12,350
right now and just because I don't know

00:12:11,270 --> 00:12:15,350
where at state we're in we're gonna redo

00:12:12,350 --> 00:12:18,020
this so that we're gonna use sample

00:12:15,350 --> 00:12:19,790
films this guy right yeah that's where

00:12:18,020 --> 00:12:24,200
you going that's right that's async pipe

00:12:19,790 --> 00:12:28,220
I'm still typing I'm liking it so let's

00:12:24,200 --> 00:12:30,950
go in there and that's the surface

00:12:28,220 --> 00:12:34,580
hasn't changed exactly the same there's

00:12:30,950 --> 00:12:37,100
no service exactly the same but dude or

00:12:34,580 --> 00:12:38,900
something funny in here there's their

00:12:37,100 --> 00:12:43,900
films with a dollar on and there's this

00:12:38,900 --> 00:12:43,900
AC those films are making big bucks oh

00:12:44,050 --> 00:12:48,500
that doesn't look like an array of films

00:12:46,700 --> 00:12:50,390
anymore or movies that's an array of an

00:12:48,500 --> 00:12:53,240
observable a movie I'm a head starting

00:12:50,390 --> 00:12:55,250
to explode but I'm going with you what's

00:12:53,240 --> 00:12:57,260
the dollar thing well that's our

00:12:55,250 --> 00:13:00,620
convention for saying it's an observable

00:12:57,260 --> 00:13:02,600
oh cool all right so I can I can leave

00:13:00,620 --> 00:13:04,610
that off so because that's an extra

00:13:02,600 --> 00:13:05,900
thing to type so you notice though the

00:13:04,610 --> 00:13:10,190
key thing to notice here is that we are

00:13:05,900 --> 00:13:12,470
no longer subscribing to get films now

00:13:10,190 --> 00:13:14,750
we're just taking that observable and

00:13:12,470 --> 00:13:17,150
chucking it into the template actually

00:13:14,750 --> 00:13:19,610
we're binding to this film's dollar and

00:13:17,150 --> 00:13:21,529
we're letting the film's dollar

00:13:19,610 --> 00:13:24,230
pass through the async pipe so the async

00:13:21,529 --> 00:13:26,510
pipe is going to do what we did regulate

00:13:24,230 --> 00:13:28,850
it's going to subscribe and I don't have

00:13:26,510 --> 00:13:31,279
to ship anything in temporary variable

00:13:28,850 --> 00:13:33,200
anymore this is so much cleaner it is

00:13:31,279 --> 00:13:35,060
cleaner we did a little bit of extra

00:13:33,200 --> 00:13:36,440
stuff though in there because you you

00:13:35,060 --> 00:13:38,810
know one of the things is that this only

00:13:36,440 --> 00:13:40,990
shows the happy path but we knew we

00:13:38,810 --> 00:13:43,670
wanted to display a user-friendly error

00:13:40,990 --> 00:13:46,010
but we no longer subscribing so we can't

00:13:43,670 --> 00:13:49,100
do it in a subscribe callback so we use

00:13:46,010 --> 00:13:52,790
our friend the catch the pipe and the

00:13:49,100 --> 00:13:54,019
catch error again there he is we're

00:13:52,790 --> 00:13:57,140
piping it through when we can use catch

00:13:54,019 --> 00:13:58,220
error again to set I like what you're

00:13:57,140 --> 00:14:01,010
doing with the screen that you like

00:13:58,220 --> 00:14:04,339
reminds me on the Asus vision the other

00:14:01,010 --> 00:14:05,510
things going on regularly dad we you

00:14:04,339 --> 00:14:08,290
know if we lose them we could just do

00:14:05,510 --> 00:14:12,980
this and they're gonna yeah thank you

00:14:08,290 --> 00:14:16,459
okay so we've done that and now I

00:14:12,980 --> 00:14:17,930
believe really cool again we have gone

00:14:16,459 --> 00:14:20,420
through the simple films where we have

00:14:17,930 --> 00:14:22,970
learned we've learned that HTTP client

00:14:20,420 --> 00:14:24,890
is an API that is observable we learn to

00:14:22,970 --> 00:14:27,560
subscribe to execute we've learned about

00:14:24,890 --> 00:14:29,630
piping operators we've learned that map

00:14:27,560 --> 00:14:31,310
will help you transform one value or a

00:14:29,630 --> 00:14:32,870
bag of something into the what cities

00:14:31,310 --> 00:14:35,000
did you actually want and I think I

00:14:32,870 --> 00:14:38,510
rebar a little bit ahead are we a little

00:14:35,000 --> 00:14:42,699
bit of her yeah yeah we did the catcher

00:14:38,510 --> 00:14:46,399
yeah we're cool alright so like Laverne

00:14:42,699 --> 00:14:49,370
we are we are swinging we're swinging

00:14:46,399 --> 00:14:52,519
with simple films and this for a lot of

00:14:49,370 --> 00:14:53,959
you should be familiar terra-tory but we

00:14:52,519 --> 00:14:55,610
wanted to go through it yeah we wanted

00:14:53,959 --> 00:14:57,140
to go over the basics once more oh yeah

00:14:55,610 --> 00:14:59,120
we yeah we are going to do some more

00:14:57,140 --> 00:15:02,149
basic stuff and then we go to the fun

00:14:59,120 --> 00:15:04,540
stuff so hurry yeah all right here's the

00:15:02,149 --> 00:15:06,880
fonds we're gonna talk about error

00:15:04,540 --> 00:15:10,100
wikipedia and error isolation

00:15:06,880 --> 00:15:12,470
let's do it

00:15:10,100 --> 00:15:14,870
so here's wikipedia it's a search for

00:15:12,470 --> 00:15:17,959
wikipedia we could type in I like your

00:15:14,870 --> 00:15:20,240
form it's amazing for yeah it is amazing

00:15:17,959 --> 00:15:23,269
so I said let's type in there you know

00:15:20,240 --> 00:15:25,190
and now you notice how I wait a long

00:15:23,269 --> 00:15:27,380
time and then it does the lists and

00:15:25,190 --> 00:15:29,029
there's angular that must be reactive

00:15:27,380 --> 00:15:30,920
because you're typing and it's reacting

00:15:29,029 --> 00:15:32,750
it is reacting so that's cool

00:15:30,920 --> 00:15:33,590
and there's another thing like do you

00:15:32,750 --> 00:15:36,110
spell angular with a

00:15:33,590 --> 00:15:38,180
or I don't think so no maybe you do no I

00:15:36,110 --> 00:15:40,580
don't think so maybe you do no yes no

00:15:38,180 --> 00:15:43,760
yes no yes no I think it's been three

00:15:40,580 --> 00:15:49,190
hours I never notice the list didn't

00:15:43,760 --> 00:15:50,780
update mmm they list didn't change no I

00:15:49,190 --> 00:15:53,120
programmed this thing so it's it's

00:15:50,780 --> 00:15:54,590
alright I'm glad you know why let's see

00:15:53,120 --> 00:15:58,250
if we could show them how this works

00:15:54,590 --> 00:16:00,770
okay so let's go into the week do you

00:15:58,250 --> 00:16:03,950
know what a peer oppressed cost these

00:16:00,770 --> 00:16:08,240
days there are two telling if you're

00:16:03,950 --> 00:16:09,770
killing me so this is our third API it's

00:16:08,240 --> 00:16:12,140
called it's reactive forms you may have

00:16:09,770 --> 00:16:13,460
heard of it what you are probably used

00:16:12,140 --> 00:16:15,440
to seeing in a reactive form if you'd

00:16:13,460 --> 00:16:16,970
know it is that you would expect it to

00:16:15,440 --> 00:16:21,740
see a form in here but there's no form

00:16:16,970 --> 00:16:23,840
to be seen no form to be found all right

00:16:21,740 --> 00:16:26,210
that's because we're using all the form

00:16:23,840 --> 00:16:28,490
you me are no pinfalls right we're used

00:16:26,210 --> 00:16:32,330
all we're by using their active forms

00:16:28,490 --> 00:16:33,980
module we get to do this we get to put

00:16:32,330 --> 00:16:37,250
this attribute this directive on there

00:16:33,980 --> 00:16:39,230
called form control and basically we say

00:16:37,250 --> 00:16:41,330
that this input box is under the form

00:16:39,230 --> 00:16:47,000
control of something called search term

00:16:41,330 --> 00:16:49,340
and if we're lucky there is a search

00:16:47,000 --> 00:16:51,980
term to bind to that is a new form

00:16:49,340 --> 00:16:55,420
control that's a really minimal form I

00:16:51,980 --> 00:16:58,100
think I think that's a minimal form and

00:16:55,420 --> 00:17:01,280
one of the cool things about search term

00:16:58,100 --> 00:17:05,480
the form the control is that it has a

00:17:01,280 --> 00:17:07,700
value changes property and yes you folks

00:17:05,480 --> 00:17:10,640
out there guessed it that is an

00:17:07,700 --> 00:17:12,020
observable whoa come back what there's

00:17:10,640 --> 00:17:13,280
just two major stages do it slower

00:17:12,020 --> 00:17:19,280
that's the solution

00:17:13,280 --> 00:17:21,500
dude slow come on be nice observable

00:17:19,280 --> 00:17:23,900
okay so what's an observable well now

00:17:21,500 --> 00:17:27,650
that it's an observable it's fair game

00:17:23,900 --> 00:17:29,930
to start playing with it and so what do

00:17:27,650 --> 00:17:34,700
you do with an observable you subscribe

00:17:29,930 --> 00:17:36,920
to it you you could but you know me and

00:17:34,700 --> 00:17:38,840
pipes a big on pipes

00:17:36,920 --> 00:17:41,390
so I'm pipe that are we going to stream

00:17:38,840 --> 00:17:44,060
it somewhere we're gonna we're gonna

00:17:41,390 --> 00:17:45,770
take those results and the first thing

00:17:44,060 --> 00:17:48,680
we're going to do is tap now that

00:17:45,770 --> 00:17:50,990
new one what's that one Xander I think

00:17:48,680 --> 00:17:52,220
that's a side effect well it's it's

00:17:50,990 --> 00:17:53,870
something that gives us a side effect

00:17:52,220 --> 00:17:55,850
you may wonder where the word tap comes

00:17:53,870 --> 00:17:57,620
from because in a previous life there

00:17:55,850 --> 00:18:00,320
was something called do well think

00:17:57,620 --> 00:18:03,770
wiretap I thought it was just a depth

00:18:00,320 --> 00:18:05,750
one was a pipe oh it could have been ah

00:18:03,770 --> 00:18:07,430
here here I am thinking wiretapping

00:18:05,750 --> 00:18:10,130
because you know who doesn't want a

00:18:07,430 --> 00:18:14,270
wiretap the pipe I do so it's legal

00:18:10,130 --> 00:18:15,260
though this one's legal and so we you

00:18:14,270 --> 00:18:16,820
know if there was an error message you

00:18:15,260 --> 00:18:18,140
know as soon as they type any key we

00:18:16,820 --> 00:18:20,060
were cleared up yeah you want to clear

00:18:18,140 --> 00:18:21,800
out the old arrows if they would go

00:18:20,060 --> 00:18:24,530
searching for something new you need to

00:18:21,800 --> 00:18:26,420
clear your things but we can throw

00:18:24,530 --> 00:18:28,730
another operator in the mix and this is

00:18:26,420 --> 00:18:30,680
the bounce time and this is the one that

00:18:28,730 --> 00:18:32,510
waits for them to stop typing all right

00:18:30,680 --> 00:18:34,370
so you can just type your little heart

00:18:32,510 --> 00:18:37,370
out until it's not going to do anything

00:18:34,370 --> 00:18:38,240
until one second passes so once one

00:18:37,370 --> 00:18:41,180
second is passed

00:18:38,240 --> 00:18:43,760
wait those two they are not doing

00:18:41,180 --> 00:18:46,910
anything to my observe law D ah no the

00:18:43,760 --> 00:18:48,710
observable is not what's going true

00:18:46,910 --> 00:18:50,660
booboo the an operator takes an

00:18:48,710 --> 00:18:52,700
observable inputs an observable out and

00:18:50,660 --> 00:18:53,900
each one is creating a new observable

00:18:52,700 --> 00:18:58,580
and handing it out and then so we're

00:18:53,900 --> 00:19:01,610
just check change and changing it alone

00:18:58,580 --> 00:19:03,170
so anyway after one second then we said

00:19:01,610 --> 00:19:04,850
remember what I did I can't remember how

00:19:03,170 --> 00:19:06,140
to spell angular does it have an R does

00:19:04,850 --> 00:19:07,460
it not have an R does it have an R does

00:19:06,140 --> 00:19:08,120
it not I went back and forth back and

00:19:07,460 --> 00:19:10,610
forth like that

00:19:08,120 --> 00:19:13,010
and I ended up on exactly the same

00:19:10,610 --> 00:19:15,950
search term I started on all right

00:19:13,010 --> 00:19:18,080
distinct until change says hey buddy I

00:19:15,950 --> 00:19:19,490
looked at the previous value I'm look at

00:19:18,080 --> 00:19:21,880
the current value you didn't really do

00:19:19,490 --> 00:19:26,210
anything we don't send you those squats

00:19:21,880 --> 00:19:28,210
so only if a second goes by and I've

00:19:26,210 --> 00:19:31,940
actually changed something do we get to

00:19:28,210 --> 00:19:35,540
the dreaded switch map my understanding

00:19:31,940 --> 00:19:37,430
is that maybe you now know what is so we

00:19:35,540 --> 00:19:40,040
don't have to explain that one no I

00:19:37,430 --> 00:19:43,010
don't think so all right so we do that

00:19:40,040 --> 00:19:44,660
and we catch the error and then we want

00:19:43,010 --> 00:19:46,910
to we've run through another map once we

00:19:44,660 --> 00:19:52,640
get something back there that just makes

00:19:46,910 --> 00:19:55,850
it prettier and we're done so the key

00:19:52,640 --> 00:19:57,370
lesson here in in this thing is really

00:19:55,850 --> 00:20:00,430
that so

00:19:57,370 --> 00:20:03,160
I'm gonna settle down is that you can

00:20:00,430 --> 00:20:07,210
create a form control and it has a value

00:20:03,160 --> 00:20:09,190
changes this is the third API and I have

00:20:07,210 --> 00:20:12,460
something that would let Fonzie tell it

00:20:09,190 --> 00:20:14,410
to you all right we have reactive forms

00:20:12,460 --> 00:20:16,510
the API is observable you can watch the

00:20:14,410 --> 00:20:18,760
value changes and you can pipe many

00:20:16,510 --> 00:20:20,010
operators in to transform it and you can

00:20:18,760 --> 00:20:22,570
use switch map for the win

00:20:20,010 --> 00:20:24,010
if this is a legal use form of the

00:20:22,570 --> 00:20:29,770
switch map because you want to cancel

00:20:24,010 --> 00:20:30,910
out in the previous results exactly what

00:20:29,770 --> 00:20:34,330
else did we do in here that was

00:20:30,910 --> 00:20:36,730
interesting I know we want to teach them

00:20:34,330 --> 00:20:38,200
about an easy error to make and this is

00:20:36,730 --> 00:20:42,430
why we're gonna go to another example

00:20:38,200 --> 00:20:44,140
called error isolation watch watch watch

00:20:42,430 --> 00:20:46,570
my fingers won't leave my hands watch

00:20:44,140 --> 00:20:49,450
this I I want to see one I don't know

00:20:46,570 --> 00:20:52,330
why read one see film ID one Donna a new

00:20:49,450 --> 00:20:55,870
whole new hope okay dude three for me

00:20:52,330 --> 00:20:59,950
two three minutes and I'll do four for

00:20:55,870 --> 00:21:03,160
me okay I'm going to do four Oh movie

00:20:59,950 --> 00:21:04,510
not found oh that's not the movie but

00:21:03,160 --> 00:21:07,030
looking for it's not the movie we're

00:21:04,510 --> 00:21:09,790
looking for okay grab it for okay I'm

00:21:07,030 --> 00:21:10,480
going back to four wait wait what's

00:21:09,790 --> 00:21:12,610
happening there

00:21:10,480 --> 00:21:14,620
well I don't know it looks like one of

00:21:12,610 --> 00:21:16,540
them is working in when I'm isn't if I

00:21:14,620 --> 00:21:18,730
go back nothing it's still saying movie

00:21:16,540 --> 00:21:20,080
not found it doesn't it seems like it

00:21:18,730 --> 00:21:22,000
seems like no matter what I do that

00:21:20,080 --> 00:21:24,010
first one is not changing it looks like

00:21:22,000 --> 00:21:27,280
it's complete or something it's done

00:21:24,010 --> 00:21:29,620
it's completely complete and done and

00:21:27,280 --> 00:21:31,420
over it so we got to find out what's

00:21:29,620 --> 00:21:36,430
going on under there so let's do some

00:21:31,420 --> 00:21:37,720
little IR isolation here so this is kind

00:21:36,430 --> 00:21:39,670
of like where we were with Wikipedia

00:21:37,720 --> 00:21:41,470
there's our value changes we're doing a

00:21:39,670 --> 00:21:42,670
little 2-pound saying everybody with me

00:21:41,470 --> 00:21:45,310
we're just getting those film numbers

00:21:42,670 --> 00:21:46,780
the IDS boo-boo-boo-boo-boo and this is

00:21:45,310 --> 00:21:48,610
just like go get it

00:21:46,780 --> 00:21:50,230
yes you shouldn't put an HTTP call

00:21:48,610 --> 00:21:53,770
inside that should be in a service

00:21:50,230 --> 00:21:55,510
between our you can read short on time I

00:21:53,770 --> 00:21:58,960
don't know why but there's a right way

00:21:55,510 --> 00:22:02,350
in a wrong way to consume that here's

00:21:58,960 --> 00:22:05,710
the wrong way that many of us do so

00:22:02,350 --> 00:22:07,720
we're listening to our films Andy's and

00:22:05,710 --> 00:22:09,429
then we do the old switch map yeah

00:22:07,720 --> 00:22:12,100
still looks good to me then look at this

00:22:09,429 --> 00:22:13,870
at the same level of pipe I map the

00:22:12,100 --> 00:22:15,909
error I'm sorry I mapped the results I

00:22:13,870 --> 00:22:17,830
feel great it worked remember it worked

00:22:15,909 --> 00:22:19,539
for a while remember it worked for a

00:22:17,830 --> 00:22:21,970
while but the minute I did something

00:22:19,539 --> 00:22:25,630
wrong I caught it with a catch error and

00:22:21,970 --> 00:22:27,549
I made it happy right I'm never risk

00:22:25,630 --> 00:22:30,780
etched I still don't see the problem why

00:22:27,549 --> 00:22:33,370
did it die why did it die because

00:22:30,780 --> 00:22:34,330
there's a rule these are in our chance

00:22:33,370 --> 00:22:39,880
there are a few rules and one of the

00:22:34,330 --> 00:22:43,210
rules is if an error occurs the stream

00:22:39,880 --> 00:22:46,539
the upstream is dead a permanent above

00:22:43,210 --> 00:22:49,960
isn't gum it's gone so even though we

00:22:46,539 --> 00:22:52,630
caught it and made it nice the error

00:22:49,960 --> 00:22:55,330
still happened and what is upstream of

00:22:52,630 --> 00:22:58,659
this which map is upstream film IDs is

00:22:55,330 --> 00:23:00,669
upstream get movies is it all the way

00:22:58,659 --> 00:23:04,179
back it is no longer listening to our

00:23:00,669 --> 00:23:06,070
keystrokes this is a very hard error to

00:23:04,179 --> 00:23:07,809
TechEd you just sit there you think

00:23:06,070 --> 00:23:09,250
everything's great and suddenly it stops

00:23:07,809 --> 00:23:11,679
working and you don't know why it's not

00:23:09,250 --> 00:23:13,600
starting again so to catch our addition

00:23:11,679 --> 00:23:16,390
and subscribe on everything that's above

00:23:13,600 --> 00:23:18,280
exactly oh you're totally that's very

00:23:16,390 --> 00:23:20,230
useful well it might be useful but your

00:23:18,280 --> 00:23:25,179
that's not what we want what we want

00:23:20,230 --> 00:23:28,450
what we can clearly intended was that if

00:23:25,179 --> 00:23:31,900
we got an error we caught it and then

00:23:28,450 --> 00:23:34,539
said keep living and the way you do that

00:23:31,900 --> 00:23:36,610
is you say no I don't want to

00:23:34,539 --> 00:23:38,830
immediately after the switch map start

00:23:36,610 --> 00:23:41,380
doing stuff I got to go down a level I

00:23:38,830 --> 00:23:44,770
got to create another pipe an isolation

00:23:41,380 --> 00:23:47,320
level so I pipe in I do my map and my

00:23:44,770 --> 00:23:49,299
catch error here this actually makes a

00:23:47,320 --> 00:23:52,360
lot of sense because you are piping on

00:23:49,299 --> 00:23:53,620
the get really yeah you think it makes

00:23:52,360 --> 00:23:54,250
sense how many people here think that

00:23:53,620 --> 00:23:57,460
makes sense

00:23:54,250 --> 00:24:00,909
oh good that's yeah you notice uh my

00:23:57,460 --> 00:24:03,970
hands down all right I mean it makes

00:24:00,909 --> 00:24:06,990
sense it makes sense but it's not for

00:24:03,970 --> 00:24:09,970
humans but it's the way it is alright so

00:24:06,990 --> 00:24:11,860
you just you just got a no-win when you

00:24:09,970 --> 00:24:15,309
get an error and then everything starts

00:24:11,860 --> 00:24:16,990
stops working and it shouldn't think

00:24:15,309 --> 00:24:19,090
back to this moment and say error

00:24:16,990 --> 00:24:21,170
isolation because that's what we're

00:24:19,090 --> 00:24:24,290
doing we're isolating it here when

00:24:21,170 --> 00:24:27,500
thing when this observable dies it dies

00:24:24,290 --> 00:24:29,780
in an isolation sandbox where nobody can

00:24:27,500 --> 00:24:32,360
see it so when logic yeah I logic and it

00:24:29,780 --> 00:24:36,080
cut out of it comes a good value so the

00:24:32,360 --> 00:24:38,930
switch map never saw the bad value and

00:24:36,080 --> 00:24:40,880
therefore the old Mindi's never saw the

00:24:38,930 --> 00:24:43,640
bet nobody ever saw a bad value nobody

00:24:40,880 --> 00:24:47,510
ever saw it go wrong it keeps on rolling

00:24:43,640 --> 00:24:50,360
and that is why even though we're in an

00:24:47,510 --> 00:24:54,200
error state here and so the top will

00:24:50,360 --> 00:24:56,660
never work we're doing fine down below

00:24:54,200 --> 00:24:58,700
and I can even go for 404 again now it's

00:24:56,660 --> 00:25:02,750
that no problem because we're isolating

00:24:58,700 --> 00:25:04,700
the error each time it occurs alright so

00:25:02,750 --> 00:25:06,710
remember this one you'll remember it

00:25:04,700 --> 00:25:09,130
when you wonder why your amp is stopped

00:25:06,710 --> 00:25:09,130
working

00:25:09,340 --> 00:25:15,440
ok so fond says oops

00:25:12,260 --> 00:25:18,410
remember to isolate errors what about

00:25:15,440 --> 00:25:21,040
that router thing we should do around I

00:25:18,410 --> 00:25:24,770
wish you'd done the right thing now a

00:25:21,040 --> 00:25:30,020
router is the fourth and final of the

00:25:24,770 --> 00:25:33,710
angular AP is that add dyes stuff with

00:25:30,020 --> 00:25:36,080
observable and it's just again viewed

00:25:33,710 --> 00:25:37,520
all of us movies beautiful can I can I

00:25:36,080 --> 00:25:40,190
can we give him some applause for his

00:25:37,520 --> 00:25:43,100
CSS skills yeah a lot of beautiful UI

00:25:40,190 --> 00:25:46,640
yeah so this has a next and previous

00:25:43,100 --> 00:25:49,010
button as you can tell I'm gonna like

00:25:46,640 --> 00:25:52,370
you know not let you see that for a

00:25:49,010 --> 00:25:54,110
moment so we go next and next and we

00:25:52,370 --> 00:25:56,900
come to the end and in it because there

00:25:54,110 --> 00:25:58,370
we're not there yet so seven and then it

00:25:56,900 --> 00:26:00,140
goes to no movie and then it wraps

00:25:58,370 --> 00:26:05,000
around again okay

00:26:00,140 --> 00:26:06,260
previous all right so it's not the

00:26:05,000 --> 00:26:10,310
greatest UI in the world but you get the

00:26:06,260 --> 00:26:12,520
idea what's happening is oh and one of

00:26:10,310 --> 00:26:14,930
the key things is I want you to look up

00:26:12,520 --> 00:26:17,120
look up and I don't mean straight at the

00:26:14,930 --> 00:26:18,920
ceiling I want you to look at the

00:26:17,120 --> 00:26:21,500
address bar up here see that movies too

00:26:18,920 --> 00:26:23,660
we're using the router so when I click

00:26:21,500 --> 00:26:25,970
Next it's actually using the router to

00:26:23,660 --> 00:26:27,740
move these things along so you three if

00:26:25,970 --> 00:26:29,750
we refresh the thing we should end up on

00:26:27,740 --> 00:26:32,540
the same movie well I don't know what

00:26:29,750 --> 00:26:35,059
gets right shall we try how about the

00:26:32,540 --> 00:26:36,620
arcs it works all right so we're using

00:26:35,059 --> 00:26:38,450
router but we're not really going

00:26:36,620 --> 00:26:41,149
anywhere we're kind of living in the

00:26:38,450 --> 00:26:44,299
same component and just doing this all

00:26:41,149 --> 00:26:46,730
right so that's the what is that there

00:26:44,299 --> 00:26:48,950
used to be a hula we're doing a hula

00:26:46,730 --> 00:26:51,919
we're doing the look I bet that's for

00:26:48,950 --> 00:26:57,940
from before the 80s I think that's from

00:26:51,919 --> 00:27:02,840
your earth yes thank you so much my era

00:26:57,940 --> 00:27:05,899
so I believe this is it so here's the

00:27:02,840 --> 00:27:07,279
deal when it starts we're going to

00:27:05,899 --> 00:27:09,080
listen to two things we're gonna listen

00:27:07,279 --> 00:27:10,820
to route parameters and we're gonna

00:27:09,080 --> 00:27:12,590
listen to router advanced it's two

00:27:10,820 --> 00:27:13,850
stories let's start with the story we've

00:27:12,590 --> 00:27:16,879
been talking about which is the router

00:27:13,850 --> 00:27:18,919
parameters you get by the way you get in

00:27:16,879 --> 00:27:22,039
in the constructor you get an activated

00:27:18,919 --> 00:27:23,299
route activated route is a it tells you

00:27:22,039 --> 00:27:25,940
what's going on with the route you're on

00:27:23,299 --> 00:27:27,409
so that's like a snapshot thing no it's

00:27:25,940 --> 00:27:30,049
not a snapshot be very careful about

00:27:27,409 --> 00:27:32,990
that but it is an object that lets you

00:27:30,049 --> 00:27:34,909
examine in an observable way the route

00:27:32,990 --> 00:27:37,190
that you currently are on and one of its

00:27:34,909 --> 00:27:39,350
magnificent properties is per am map

00:27:37,190 --> 00:27:42,820
which tells you about the parameters

00:27:39,350 --> 00:27:45,590
that are in the route to you and that is

00:27:42,820 --> 00:27:48,159
observable it's an observable of

00:27:45,590 --> 00:27:51,049
parameters it's kind of a bag of stuff

00:27:48,159 --> 00:27:53,179
so naturally we do we put in the pipe

00:27:51,049 --> 00:27:56,090
and we do the map to transform it and we

00:27:53,179 --> 00:27:59,509
say params get me the ID that's cool we

00:27:56,090 --> 00:28:02,330
pass the ID to switch Matt right

00:27:59,509 --> 00:28:04,100
see I switch map well because we don't

00:28:02,330 --> 00:28:06,289
care right yeah and we have something to

00:28:04,100 --> 00:28:08,539
write again it's safe for us to use

00:28:06,289 --> 00:28:10,730
switch map because we're willing to

00:28:08,539 --> 00:28:12,710
discard the previous result if you are

00:28:10,730 --> 00:28:14,389
going clicking very very far right like

00:28:12,710 --> 00:28:16,009
as I click do I care how long you know

00:28:14,389 --> 00:28:17,840
what I'm interested in the latest one

00:28:16,009 --> 00:28:21,919
not the earlier ones so it's good and

00:28:17,840 --> 00:28:23,119
you will end up with one yeah so so

00:28:21,919 --> 00:28:25,369
there you go

00:28:23,119 --> 00:28:26,899
in other respects this is just like any

00:28:25,369 --> 00:28:28,490
other observable but it's sitting in the

00:28:26,899 --> 00:28:30,289
most like the forms thing and just like

00:28:28,490 --> 00:28:31,700
every other book all the thing we saw

00:28:30,289 --> 00:28:33,950
all right but there was something else

00:28:31,700 --> 00:28:37,669
that we were doing in here so this is

00:28:33,950 --> 00:28:40,429
where I bring it back and you watch as I

00:28:37,669 --> 00:28:43,840
go next like a whole bunch of stuff

00:28:40,429 --> 00:28:45,830
happened - oh wow alright like I got

00:28:43,840 --> 00:28:48,300
events of a scene it'll guide you out

00:28:45,830 --> 00:28:53,700
the route of thing I got events

00:28:48,300 --> 00:28:55,380
a lot of events why because one of the

00:28:53,700 --> 00:28:57,840
things you may want to do is you may

00:28:55,380 --> 00:29:00,300
want to watch the router at work right

00:28:57,840 --> 00:29:02,310
you because it's often the case that you

00:29:00,300 --> 00:29:06,750
want you know when the router does

00:29:02,310 --> 00:29:09,720
something you want to respond and so

00:29:06,750 --> 00:29:11,850
they conveniently put an observable that

00:29:09,720 --> 00:29:14,010
tells you every time the router does

00:29:11,850 --> 00:29:16,050
anything interesting which is why we get

00:29:14,010 --> 00:29:17,490
a flood of these things out and they

00:29:16,050 --> 00:29:18,930
only have one of these incidents and

00:29:17,490 --> 00:29:20,760
it's called observable but as you can

00:29:18,930 --> 00:29:23,670
see that every one of these is typed in

00:29:20,760 --> 00:29:26,640
some fashion a lot of them activation

00:29:23,670 --> 00:29:28,260
stop actually started mostly the most of

00:29:26,640 --> 00:29:29,580
the time you can tell when your guards

00:29:28,260 --> 00:29:32,550
are here by the way this is a great way

00:29:29,580 --> 00:29:34,650
to diagnose programmatically what your

00:29:32,550 --> 00:29:37,050
router is doing to you you can use to

00:29:34,650 --> 00:29:40,680
notify all the options there all kinds

00:29:37,050 --> 00:29:43,680
of things but what so what we want to

00:29:40,680 --> 00:29:45,960
show you is that it's as easy as get the

00:29:43,680 --> 00:29:48,710
router listen to its advanced subscribe

00:29:45,960 --> 00:29:52,440
and here we're just login it right

00:29:48,710 --> 00:29:55,350
of course you may have noticed that this

00:29:52,440 --> 00:30:01,290
time out of the subscribe I caught the

00:29:55,350 --> 00:30:03,150
result is router events subscription who

00:30:01,290 --> 00:30:05,150
even knew that there was a result I done

00:30:03,150 --> 00:30:07,770
didn't didn't know I never needed well

00:30:05,150 --> 00:30:11,130
apparently there's something to learn

00:30:07,770 --> 00:30:13,650
here ok the thing you learn too is that

00:30:11,130 --> 00:30:15,600
when you subscribe it to something that

00:30:13,650 --> 00:30:19,790
lives longer than you do and let's

00:30:15,600 --> 00:30:19,790
remember does this actually live longer

00:30:20,990 --> 00:30:25,710
I'll go back to here and they'll go back

00:30:23,370 --> 00:30:28,500
into the router ok that created a brand

00:30:25,710 --> 00:30:30,110
new instance of the router component the

00:30:28,500 --> 00:30:33,000
router component was destroyed right

00:30:30,110 --> 00:30:35,100
happy - dude robbed robbed I me put it

00:30:33,000 --> 00:30:37,200
back in riot so clearly the router

00:30:35,100 --> 00:30:40,320
component the router itself lives longer

00:30:37,200 --> 00:30:41,700
than that component if I if I didn't

00:30:40,320 --> 00:30:43,050
unsubscribe something Bad's gonna happen

00:30:41,700 --> 00:30:47,400
but you know this is a terrible way to

00:30:43,050 --> 00:30:48,720
explore what can bad happen so let's so

00:30:47,400 --> 00:30:51,690
let's just take advantage of what we

00:30:48,720 --> 00:30:53,520
know yeah okay the router is an API rat

00:30:51,690 --> 00:30:55,580
a parappa can app can change we can

00:30:53,520 --> 00:30:57,780
monitor route events and we somehow

00:30:55,580 --> 00:30:59,770
unsubscribed we're not sure why but

00:30:57,780 --> 00:31:03,370
we're getting an inkling

00:30:59,770 --> 00:31:04,900
so last latke here what's this memory

00:31:03,370 --> 00:31:05,410
Lakes thing because that's what we're

00:31:04,900 --> 00:31:09,010
worried about

00:31:05,410 --> 00:31:11,020
i-i-i Niek a lot of memory yeah yeah

00:31:09,010 --> 00:31:12,790
sorry you got you got a leak I mean like

00:31:11,020 --> 00:31:14,470
a goldfish I've always I have a

00:31:12,790 --> 00:31:15,910
three-second memory and after that it's

00:31:14,470 --> 00:31:21,280
gone that's what I've always said about

00:31:15,910 --> 00:31:23,890
you yeah I know so so let's clear the

00:31:21,280 --> 00:31:26,230
decks here and we have a handy-dandy

00:31:23,890 --> 00:31:27,970
memory leak example that sounds like

00:31:26,230 --> 00:31:29,500
click a like a bunch of time I'm gonna

00:31:27,970 --> 00:31:30,790
click it first you notice the time is

00:31:29,500 --> 00:31:35,410
going hey this is normal right

00:31:30,790 --> 00:31:37,660
well what let me click it off oh let's

00:31:35,410 --> 00:31:39,610
go no Larry it's still run right to

00:31:37,660 --> 00:31:40,600
killed it it should go let's do it a

00:31:39,610 --> 00:31:42,160
couple more times huh

00:31:40,600 --> 00:31:46,690
let's do that we're having fun with

00:31:42,160 --> 00:31:55,120
memory leak oh that's exactly what we

00:31:46,690 --> 00:31:59,080
wanted all right so hush your mouth

00:31:55,120 --> 00:32:01,059
child what come on you got we're gonna

00:31:59,080 --> 00:32:06,190
he's Dutch please forgive him

00:32:01,059 --> 00:32:07,800
okay so fortunate we'll go by walking

00:32:06,190 --> 00:32:11,530
with able yeah that's it

00:32:07,800 --> 00:32:15,550
just somebody called TSA all right

00:32:11,530 --> 00:32:17,250
all right so clearly we don't want to

00:32:15,550 --> 00:32:19,120
have this happen because over time

00:32:17,250 --> 00:32:20,620
what's happening is the company

00:32:19,120 --> 00:32:23,860
component is being retained because

00:32:20,620 --> 00:32:25,390
there's still a little necessarily but

00:32:23,860 --> 00:32:26,920
but there's some parts of it are being

00:32:25,390 --> 00:32:27,940
retained its not being garbage collected

00:32:26,920 --> 00:32:30,160
and it's continuing that you all

00:32:27,940 --> 00:32:32,200
different it did stall so something must

00:32:30,160 --> 00:32:34,660
be right yeah so let's do something that

00:32:32,200 --> 00:32:38,200
right about this okay all right let's

00:32:34,660 --> 00:32:39,970
show you take until I've clear this all

00:32:38,200 --> 00:32:45,220
right so it's doing a time or two right

00:32:39,970 --> 00:32:48,190
but now when I stop it is this the error

00:32:45,220 --> 00:32:49,990
isolation one oh no that one we want to

00:32:48,190 --> 00:32:53,050
go away okay here's taken till it starts

00:32:49,990 --> 00:32:53,470
up and it stops that's better do it

00:32:53,050 --> 00:32:56,050
again

00:32:53,470 --> 00:32:58,929
start it up that's just what my model

00:32:56,050 --> 00:33:00,850
teach me clean off to yourself destroyed

00:32:58,929 --> 00:33:03,040
you could see it completed its destroyed

00:33:00,850 --> 00:33:05,830
completed its destroyed start it up

00:33:03,040 --> 00:33:06,970
again we're on to the next one and I've

00:33:05,830 --> 00:33:08,260
neck we've actually numbered the

00:33:06,970 --> 00:33:10,090
components as they come in so you can

00:33:08,260 --> 00:33:12,540
see it's a brand new component all right

00:33:10,090 --> 00:33:15,580
that's the behavior you're looking for

00:33:12,540 --> 00:33:17,890
when the component is destroyed so debts

00:33:15,580 --> 00:33:19,960
to think we are looking for yes that is

00:33:17,890 --> 00:33:23,200
the they're annoyed we're looking for so

00:33:19,960 --> 00:33:29,890
what do we do to get that we're gonna

00:33:23,200 --> 00:33:35,350
like add take until and there are three

00:33:29,890 --> 00:33:37,570
steps the first step is use this thing

00:33:35,350 --> 00:33:39,460
called a subject we're working our way

00:33:37,570 --> 00:33:40,960
through the rxjs here we're bringing the

00:33:39,460 --> 00:33:42,790
zoo in but at least we're bringing it in

00:33:40,960 --> 00:33:45,010
as we need it right remember we told you

00:33:42,790 --> 00:33:46,540
learn it is you need it well here's

00:33:45,010 --> 00:33:48,040
where we're gonna need it okay we're

00:33:46,540 --> 00:33:52,990
good can you tell me something more

00:33:48,040 --> 00:33:54,610
about the subject I can but I'm nice to

00:33:52,990 --> 00:33:57,160
know about the subject subject well what

00:33:54,610 --> 00:33:59,800
is the subject the subject is well in

00:33:57,160 --> 00:34:02,650
this it it's the thing it has a lovely

00:33:59,800 --> 00:34:05,290
properties it's a thing that is both a

00:34:02,650 --> 00:34:07,390
observer and an observable now we know

00:34:05,290 --> 00:34:08,860
what an observable is we've a music a

00:34:07,390 --> 00:34:11,770
well you are using them all the time

00:34:08,860 --> 00:34:13,419
what is an observer it's a fancy term

00:34:11,770 --> 00:34:15,040
let me just put it this way the way you

00:34:13,419 --> 00:34:17,500
want to use it it's a way of putting

00:34:15,040 --> 00:34:21,310
something in to be observable all right

00:34:17,500 --> 00:34:23,649
it is both a because I don't want to get

00:34:21,310 --> 00:34:25,750
lost in the in the weeds here but when

00:34:23,649 --> 00:34:28,210
you need an observable that you can

00:34:25,750 --> 00:34:30,580
stuff things into you probably want to

00:34:28,210 --> 00:34:31,960
subject because it allows you to play

00:34:30,580 --> 00:34:36,429
both sides of the game

00:34:31,960 --> 00:34:38,290
listen provide out provide listen all

00:34:36,429 --> 00:34:40,780
right so that's why we're going to use

00:34:38,290 --> 00:34:42,790
it here we're taking we're defining a

00:34:40,780 --> 00:34:44,740
variable on destroy that is something

00:34:42,790 --> 00:34:47,909
that we can control that is also an

00:34:44,740 --> 00:34:50,889
observable so then we go to step two and

00:34:47,909 --> 00:34:53,919
and we create an NG ondestroy

00:34:50,889 --> 00:34:55,510
you know that is the life cycle event

00:34:53,919 --> 00:34:59,590
hook that gets fired when the component

00:34:55,510 --> 00:35:03,550
dies right you know that stuff so what

00:34:59,590 --> 00:35:05,670
we do in there is we take that object--

00:35:03,550 --> 00:35:07,990
that we've got and we call next on it

00:35:05,670 --> 00:35:09,250
which sends a value we don't really care

00:35:07,990 --> 00:35:13,090
about the value so we didn't give it a

00:35:09,250 --> 00:35:16,060
value and so what that means is there as

00:35:13,090 --> 00:35:17,410
soon as we do that that subject which

00:35:16,060 --> 00:35:21,300
we're calling a notifier is going to

00:35:17,410 --> 00:35:23,740
emit something right so we have control

00:35:21,300 --> 00:35:25,060
when the thing is destroyed we can emit

00:35:23,740 --> 00:35:25,450
something doesn't matter what we can

00:35:25,060 --> 00:35:28,859
emit

00:35:25,450 --> 00:35:31,269
and now we're ready for step three

00:35:28,859 --> 00:35:32,589
here's our time service the time service

00:35:31,269 --> 00:35:34,960
was the thing that was clicking the time

00:35:32,589 --> 00:35:35,559
yeah that's just generating time stems

00:35:34,960 --> 00:35:37,779
yep

00:35:35,559 --> 00:35:40,000
well we're gonna pipe something on to it

00:35:37,779 --> 00:35:42,849
and it's our friend here take until this

00:35:40,000 --> 00:35:45,400
new operator and take until is kind of

00:35:42,849 --> 00:35:47,980
kind of fun wait works is like every

00:35:45,400 --> 00:35:50,109
operator it season it has an observable

00:35:47,980 --> 00:35:54,460
in an observable out just the same thing

00:35:50,109 --> 00:35:55,990
a step in this case kind of at least we

00:35:54,460 --> 00:35:57,519
tap I can look at it but it would take

00:35:55,990 --> 00:35:59,890
it till I can't look at it at all it's

00:35:57,519 --> 00:36:03,099
just going straight through but I am

00:35:59,890 --> 00:36:05,559
providing something here we know this to

00:36:03,099 --> 00:36:07,450
be an observable right we said it was in

00:36:05,559 --> 00:36:10,059
a subject and a subject is also an

00:36:07,450 --> 00:36:12,970
observable so it's an observable so we

00:36:10,059 --> 00:36:15,430
followed quite consistent we did not put

00:36:12,970 --> 00:36:17,619
an ass on that big barrel or we did he

00:36:15,430 --> 00:36:20,440
did forget the dollar we forgot the

00:36:17,619 --> 00:36:21,880
dollar he forgot to tell are we are not

00:36:20,440 --> 00:36:25,619
paid for this one we forgot the dollar

00:36:21,880 --> 00:36:27,970
all right so you got me there buddy

00:36:25,619 --> 00:36:32,799
we're gonna do live coding that's it

00:36:27,970 --> 00:36:36,640
that's all I can do okay thank you very

00:36:32,799 --> 00:36:39,400
much I'm here all week so this is an

00:36:36,640 --> 00:36:41,259
observable and went and and so the text

00:36:39,400 --> 00:36:43,180
the tech they take entails letting

00:36:41,259 --> 00:36:46,059
values fly through those timer values

00:36:43,180 --> 00:36:48,009
until it emits and as soon as it emits

00:36:46,059 --> 00:36:51,069
it says whoa we're done here

00:36:48,009 --> 00:36:52,779
and it tells the so there there is a

00:36:51,069 --> 00:36:54,849
second observable that's just sitting

00:36:52,779 --> 00:36:57,460
there yeah and after certain time you

00:36:54,849 --> 00:36:59,589
say whoa whoa stop exactly and then it

00:36:57,460 --> 00:37:01,809
stops well it does and here's how it

00:36:59,589 --> 00:37:05,490
does it okay tell me first it looks

00:37:01,809 --> 00:37:09,039
upstream the where it came from and says

00:37:05,490 --> 00:37:11,769
I'm Sun subscribing okay alright so it

00:37:09,039 --> 00:37:14,670
unsubscribes from the source and that my

00:37:11,769 --> 00:37:18,220
friends is why the time interval stops

00:37:14,670 --> 00:37:20,589
the timer stops because we unsubscribe

00:37:18,220 --> 00:37:21,339
and it's designed to stop when it

00:37:20,589 --> 00:37:24,339
unsubscribes

00:37:21,339 --> 00:37:25,990
so that's how we kill the timer all

00:37:24,339 --> 00:37:28,539
right then it does something that's

00:37:25,990 --> 00:37:30,910
really important which is downstream for

00:37:28,539 --> 00:37:35,440
everybody listening to it namely this

00:37:30,910 --> 00:37:37,690
thing it sends a complete it calls

00:37:35,440 --> 00:37:40,150
complete on the observable

00:37:37,690 --> 00:37:42,250
when you call complete on an observable

00:37:40,150 --> 00:37:46,319
it terminates when an observable

00:37:42,250 --> 00:37:49,180
terminates it lets go of any subscribers

00:37:46,319 --> 00:37:51,970
way that there was something something

00:37:49,180 --> 00:37:53,920
else that is like three parties

00:37:51,970 --> 00:37:56,109
well yes subscribe does take three

00:37:53,920 --> 00:37:58,390
parameters it takes the happy call the

00:37:56,109 --> 00:38:00,520
next channel that's happy report the

00:37:58,390 --> 00:38:02,500
time it takes the sad or the error

00:38:00,520 --> 00:38:03,819
channel and then it has a third one

00:38:02,500 --> 00:38:07,210
which will let you alert things when

00:38:03,819 --> 00:38:09,220
they're complete that's awesome and we

00:38:07,210 --> 00:38:17,130
actually saw over here when we click

00:38:09,220 --> 00:38:18,970
take until and when I do that notice

00:38:17,130 --> 00:38:21,069
there's the complete that came

00:38:18,970 --> 00:38:23,890
downstream and then the component was

00:38:21,069 --> 00:38:25,690
destroyed complete came down the end of

00:38:23,890 --> 00:38:28,180
the point was destroyed but these

00:38:25,690 --> 00:38:31,839
unsubscription happened and therefore no

00:38:28,180 --> 00:38:35,349
memory leak no memory leak so this

00:38:31,839 --> 00:38:38,260
pattern this take until pattern is the

00:38:35,349 --> 00:38:41,109
recommended way to do our component must

00:38:38,260 --> 00:38:42,430
subscribe and it has to subscribe to

00:38:41,109 --> 00:38:43,410
something that is going to live for a

00:38:42,430 --> 00:38:45,789
long time

00:38:43,410 --> 00:38:48,549
follow these one two threes of the take

00:38:45,789 --> 00:38:51,700
until and you'll be sure that you to

00:38:48,549 --> 00:38:54,910
unsubscribe properly when the component

00:38:51,700 --> 00:38:57,609
dies yeah this is what the style guys

00:38:54,910 --> 00:39:00,010
suggest you should do yeah there are

00:38:57,609 --> 00:39:02,410
other ways there is no wrong way as long

00:39:00,010 --> 00:39:03,760
as you do it now you know Xander I don't

00:39:02,410 --> 00:39:06,640
remember doing this take until in our

00:39:03,760 --> 00:39:08,980
earlier examples why do we not worry

00:39:06,640 --> 00:39:12,400
about this before we have an async pipe

00:39:08,980 --> 00:39:14,770
example it's ticking away but when I

00:39:12,400 --> 00:39:17,230
click stop let me do it again I'm gonna

00:39:14,770 --> 00:39:20,920
clear the console I'm gonna do async

00:39:17,230 --> 00:39:23,410
pipe there's the timer that ooh

00:39:20,920 --> 00:39:25,450
I still off those async thing don't you

00:39:23,410 --> 00:39:27,490
love that yeah all right notice it's

00:39:25,450 --> 00:39:29,650
destroyed no memory leak start it up

00:39:27,490 --> 00:39:31,930
again we're on to the third one no

00:39:29,650 --> 00:39:33,789
memory link it started up again goes to

00:39:31,930 --> 00:39:37,630
the fourth one no memory leak how can

00:39:33,789 --> 00:39:40,450
that be I I know you know I know let's

00:39:37,630 --> 00:39:43,420
share it with them that the thing is I

00:39:40,450 --> 00:39:44,529
was missing something there well we're

00:39:43,420 --> 00:39:46,119
just gonna have to miss it cuz we got to

00:39:44,529 --> 00:39:47,410
keep this show on the road okay let's go

00:39:46,119 --> 00:39:51,130
unless you're going to tell me what it

00:39:47,410 --> 00:39:55,390
was I miss well actually the last

00:39:51,130 --> 00:39:57,849
complete didn't fire oh right that's

00:39:55,390 --> 00:40:00,400
true notice let's see what does Anders

00:39:57,849 --> 00:40:02,949
going missing that we're gonna do a take

00:40:00,400 --> 00:40:05,319
until and you notice we had completed

00:40:02,949 --> 00:40:08,049
and then destroyed when I do the async

00:40:05,319 --> 00:40:15,009
pipe you'll notice that it we just get

00:40:08,049 --> 00:40:16,299
destroyed no no complete it so first of

00:40:15,009 --> 00:40:18,699
all let's show them that we're actually

00:40:16,299 --> 00:40:20,890
using the async pipe and let's explain

00:40:18,699 --> 00:40:22,839
to the kind folks at home what's going

00:40:20,890 --> 00:40:26,140
on yeah let's go over that by the way

00:40:22,839 --> 00:40:28,299
you can see no take until so one of the

00:40:26,140 --> 00:40:29,709
nice things about async pipe when we

00:40:28,299 --> 00:40:31,269
throw the observable up into the

00:40:29,709 --> 00:40:35,949
template and say async pipe you handle

00:40:31,269 --> 00:40:38,979
it is yes it subscribes mm-hmm but it

00:40:35,949 --> 00:40:41,799
also automatically unsubscribes when the

00:40:38,979 --> 00:40:43,809
component is destroyed so that we don't

00:40:41,799 --> 00:40:46,059
have to worry about it that is why we

00:40:43,809 --> 00:40:48,190
had no take until no we didn't have to

00:40:46,059 --> 00:40:50,109
worry about it because we let async pipe

00:40:48,190 --> 00:40:52,599
worry about it which keeps our code

00:40:50,109 --> 00:40:56,009
cleaner and this is another reason to

00:40:52,599 --> 00:40:59,529
safely use async pipe in your components

00:40:56,009 --> 00:41:01,390
now what Xander is pointing out here is

00:40:59,529 --> 00:41:03,719
that there's a subtle difference between

00:41:01,390 --> 00:41:06,789
what take until does yes and

00:41:03,719 --> 00:41:09,789
unsubscribing does and so i'll try and

00:41:06,789 --> 00:41:12,640
explain what that is you remember the

00:41:09,789 --> 00:41:18,449
take until its final act is to send

00:41:12,640 --> 00:41:21,489
complete it out that is why we have the

00:41:18,449 --> 00:41:24,369
that's why we saw a completed show up

00:41:21,489 --> 00:41:28,180
here because take until emits a

00:41:24,369 --> 00:41:30,099
completed but unsubscribing alone does

00:41:28,180 --> 00:41:32,619
not complete anything it just kills it

00:41:30,099 --> 00:41:34,599
it's just I'm not interested anymore I

00:41:32,619 --> 00:41:38,559
don't want nothing to do with you that's

00:41:34,599 --> 00:41:41,609
right wear it so so if your code should

00:41:38,559 --> 00:41:43,630
happen to come to depend on complete

00:41:41,609 --> 00:41:46,180
because you want to do something when

00:41:43,630 --> 00:41:47,619
the when the observable completes you

00:41:46,180 --> 00:41:49,119
can't just unsubscribe you'll need

00:41:47,619 --> 00:41:51,699
something like take and tell so you can

00:41:49,119 --> 00:41:53,229
get notified that it completed that's

00:41:51,699 --> 00:41:55,410
the point I think your minutes the point

00:41:53,229 --> 00:41:59,499
I was trying to make yeah well thank you

00:41:55,410 --> 00:42:03,190
everybody here is like but there you go

00:41:59,499 --> 00:42:04,960
already already all right so let's bring

00:42:03,190 --> 00:42:06,840
it on home we learned to

00:42:04,960 --> 00:42:10,300
so our first principle is this

00:42:06,840 --> 00:42:12,060
unsubscribe when you're in doubt if you

00:42:10,300 --> 00:42:15,700
don't know how the observable behaves

00:42:12,060 --> 00:42:18,040
unsubscribe when you're doing that and

00:42:15,700 --> 00:42:19,900
that you'll you know if you subscribe

00:42:18,040 --> 00:42:21,760
that's that's we're talking about you

00:42:19,900 --> 00:42:24,340
can use the take and tell pattern this

00:42:21,760 --> 00:42:27,790
is the one we're recommending for a

00:42:24,340 --> 00:42:30,220
component for unsubscribing rather than

00:42:27,790 --> 00:42:31,540
literally unsubscribe use alright so

00:42:30,220 --> 00:42:32,980
when you don't know what the observable

00:42:31,540 --> 00:42:34,810
does and you're in a component and

00:42:32,980 --> 00:42:36,910
you're subscribing to it used to take

00:42:34,810 --> 00:42:39,100
until pattern to close it down so you

00:42:36,910 --> 00:42:41,470
don't have a memory leak I want to dig

00:42:39,100 --> 00:42:44,080
in a little bit on the doubt a little

00:42:41,470 --> 00:42:46,530
bit on the dog who can stop you okay

00:42:44,080 --> 00:42:48,790
the thing is when are you in doubt

00:42:46,530 --> 00:42:51,610
basically if you're not creating the

00:42:48,790 --> 00:42:53,860
thing yourself if the if you're getting

00:42:51,610 --> 00:42:57,460
observable form or service you are you

00:42:53,860 --> 00:42:58,210
don't know if it's closing opening and

00:42:57,460 --> 00:43:00,580
subscribing

00:42:58,210 --> 00:43:02,560
you have no idea it can do anything so

00:43:00,580 --> 00:43:05,260
then you're in doubt and you need to

00:43:02,560 --> 00:43:07,600
unsubscribe to it use the take until for

00:43:05,260 --> 00:43:10,240
it or any other methods many of my

00:43:07,600 --> 00:43:13,530
customers just want their developers to

00:43:10,240 --> 00:43:16,000
assume that they are always in doubt so

00:43:13,530 --> 00:43:18,430
because it just makes for fewer bugs

00:43:16,000 --> 00:43:20,530
right so they just say I don't trust I

00:43:18,430 --> 00:43:23,290
don't trust myself I don't trust you

00:43:20,530 --> 00:43:24,850
that you really know or that somebody

00:43:23,290 --> 00:43:26,200
won't come along and change the behavior

00:43:24,850 --> 00:43:28,120
later on you because you knew at the

00:43:26,200 --> 00:43:30,490
time but it changed later so they have a

00:43:28,120 --> 00:43:32,410
policy that says if you subscribe you

00:43:30,490 --> 00:43:35,440
must have unsubscribe and if you are

00:43:32,410 --> 00:43:38,080
going to unsubscribe use the take it

00:43:35,440 --> 00:43:40,030
tell it never hurts to unsubscribe now

00:43:38,080 --> 00:43:41,530
async pipe takes care of itself and

00:43:40,030 --> 00:43:43,090
there was no subscribing our code so we

00:43:41,530 --> 00:43:45,850
know we're cool we're always been cool

00:43:43,090 --> 00:43:47,560
with async pipe yeah you don't need to

00:43:45,850 --> 00:43:50,740
understand prescribe them async pipe

00:43:47,560 --> 00:43:51,850
takes care of everything I what you know

00:43:50,740 --> 00:43:56,260
there's actually chance we could get

00:43:51,850 --> 00:43:57,910
through this okay we can't you're all

00:43:56,260 --> 00:44:00,010
right says no mildy stream does we're

00:43:57,910 --> 00:44:02,080
gonna do the my advice cool thing I wish

00:44:00,010 --> 00:44:03,280
I had the white suit I'm gonna get one

00:44:02,080 --> 00:44:05,200
of these if any of you haven't want to

00:44:03,280 --> 00:44:07,450
send me a white suit I'm all I'm happy I

00:44:05,200 --> 00:44:09,790
wanted to get some for this day

00:44:07,450 --> 00:44:13,870
basically but they're hard to find it I

00:44:09,790 --> 00:44:16,240
probably are all stained so so let's see

00:44:13,870 --> 00:44:19,210
what the multi stream does showing yeah

00:44:16,240 --> 00:44:21,190
one of the real values of rxjs

00:44:19,210 --> 00:44:23,609
where it really begins to shine is when

00:44:21,190 --> 00:44:25,809
you have a whole bunch of streams all

00:44:23,609 --> 00:44:32,680
going I think you need to zoom out a

00:44:25,809 --> 00:44:36,579
little bit either zoom out a little yeah

00:44:32,680 --> 00:44:39,519
good now so when you have a whole bunch

00:44:36,579 --> 00:44:41,200
of streams and you want there you want

00:44:39,519 --> 00:44:42,910
somehow unified and bring them together

00:44:41,200 --> 00:44:44,499
right this is one of the cool things

00:44:42,910 --> 00:44:46,809
about rxjs and the things that's hard

00:44:44,499 --> 00:44:48,160
with other ways of managing events

00:44:46,809 --> 00:44:49,359
because you've got event you know if you

00:44:48,160 --> 00:44:51,690
have a coordinate events all over the

00:44:49,359 --> 00:44:54,039
place it's hard and rxjs makes it

00:44:51,690 --> 00:44:56,799
comparatively easy so we've got an

00:44:54,039 --> 00:45:00,099
example here that does that what it does

00:44:56,799 --> 00:45:03,099
is it gets the films from the cloud it

00:45:00,099 --> 00:45:06,789
allows us to add movies here so there's

00:45:03,099 --> 00:45:11,650
Bob a new observer bill you know

00:45:06,789 --> 00:45:13,569
released in 1900 and but what it not

00:45:11,650 --> 00:45:15,099
only does it show Bob here but it asks

00:45:13,569 --> 00:45:18,519
behind the scenes that put it in local

00:45:15,099 --> 00:45:22,119
storage so if I close this down and

00:45:18,519 --> 00:45:23,710
bring it back Bob is still there even if

00:45:22,119 --> 00:45:27,940
you refresh the patient still be like

00:45:23,710 --> 00:45:31,119
there Carol and Ted and Alice which I

00:45:27,940 --> 00:45:33,880
think was in the 80s all right all right

00:45:31,119 --> 00:45:36,279
so now I've got three sources of movies

00:45:33,880 --> 00:45:37,809
I've got the ones I'm typing the ones

00:45:36,279 --> 00:45:39,789
that came from local storage and the

00:45:37,809 --> 00:45:42,999
ones that came from the cloud and I want

00:45:39,789 --> 00:45:45,190
to meld those all together how am I

00:45:42,999 --> 00:45:47,319
gonna do that and using observables you

00:45:45,190 --> 00:45:49,299
are going to compose them we are gonna

00:45:47,319 --> 00:45:53,230
compose them let's let's do that shall

00:45:49,299 --> 00:46:00,430
we so let's close this down and we're

00:45:53,230 --> 00:46:02,980
gonna go to all the thing it's not

00:46:00,430 --> 00:46:04,900
interesting okay so let's see those

00:46:02,980 --> 00:46:07,720
sources first of all here's cloud movies

00:46:04,900 --> 00:46:09,819
we've been doing it we go out to Star

00:46:07,720 --> 00:46:12,400
Wars world and we get our cloud movies

00:46:09,819 --> 00:46:14,789
and there's nothing dramatic here that's

00:46:12,400 --> 00:46:17,079
a stream we know a cloud movie stream I

00:46:14,789 --> 00:46:18,220
am shocked that you didn't put the

00:46:17,079 --> 00:46:25,299
dollar on the end there but I'm gonna

00:46:18,220 --> 00:46:27,249
let that go and then here we are in the

00:46:25,299 --> 00:46:29,289
local storage now local storage is a

00:46:27,249 --> 00:46:30,819
synchronous API in the browser it's not

00:46:29,289 --> 00:46:31,990
observable at all it's not even event

00:46:30,819 --> 00:46:34,420
based I

00:46:31,990 --> 00:46:36,869
how do I make how do I get local storage

00:46:34,420 --> 00:46:39,130
in unobservable how do I make it play

00:46:36,869 --> 00:46:41,110
well turns out you can roll your own

00:46:39,130 --> 00:46:44,290
observable you don't have to wait for

00:46:41,110 --> 00:46:46,240
Ben to do it so there's a thing called

00:46:44,290 --> 00:46:46,630
observable when I was already going on

00:46:46,240 --> 00:46:48,820
Twitter

00:46:46,630 --> 00:46:50,680
- Ben hey man yeah you want it you want

00:46:48,820 --> 00:46:52,360
a local storage I want the local storage

00:46:50,680 --> 00:46:55,060
up little tough luck buddy you're gonna

00:46:52,360 --> 00:46:57,280
have to write yourself how are they it

00:46:55,060 --> 00:46:59,619
looks like I need it that it does

00:46:57,280 --> 00:47:01,090
doesn't it so here we're creating an

00:46:59,619 --> 00:47:03,430
observable which by the way you can do

00:47:01,090 --> 00:47:04,840
new observable it's the same and you're

00:47:03,430 --> 00:47:06,760
gonna get this thing called an observer

00:47:04,840 --> 00:47:08,440
an observer is nothing more than the the

00:47:06,760 --> 00:47:10,360
thing that we're using for subscribe

00:47:08,440 --> 00:47:12,790
right it has annexed an error and a

00:47:10,360 --> 00:47:14,050
complete some combination thereof who

00:47:12,790 --> 00:47:16,390
cares it's the thing we would do and

00:47:14,050 --> 00:47:19,270
subscribe but for technical reasons

00:47:16,390 --> 00:47:22,630
called an observer and we say if the

00:47:19,270 --> 00:47:25,150
browser supports local storage then we

00:47:22,630 --> 00:47:29,130
can get the item out of local storage

00:47:25,150 --> 00:47:31,990
deserialize it and pump it into this

00:47:29,130 --> 00:47:36,040
observer that we've got here they came

00:47:31,990 --> 00:47:37,450
in remember it again to make it clear if

00:47:36,040 --> 00:47:39,760
you had that remember we have the

00:47:37,450 --> 00:47:42,250
SUBSCRIBE and we have the next and the

00:47:39,760 --> 00:47:44,320
error and the complete so we know an

00:47:42,250 --> 00:47:47,109
observer has those methods because

00:47:44,320 --> 00:47:48,550
that's the way it works so every time we

00:47:47,109 --> 00:47:50,050
get something out of local storage we

00:47:48,550 --> 00:47:56,800
can call next and we're essentially

00:47:50,050 --> 00:47:59,170
pushing those values what if we didn't

00:47:56,800 --> 00:48:01,480
have anything in look in store oh you're

00:47:59,170 --> 00:48:03,460
you're orange all right suppose local

00:48:01,480 --> 00:48:04,990
storage is empty yeah that might happen

00:48:03,460 --> 00:48:08,320
well we'll send an empty array down

00:48:04,990 --> 00:48:09,730
that's a good idea okay and then oh look

00:48:08,320 --> 00:48:13,869
at this we know this completes because

00:48:09,730 --> 00:48:16,420
we said so all right you complete and so

00:48:13,869 --> 00:48:19,800
what we have here is kind of like HTTP

00:48:16,420 --> 00:48:22,359
it's kind of like rolling HTTP GET for

00:48:19,800 --> 00:48:24,900
isolated story but for local browser

00:48:22,359 --> 00:48:27,520
storage all right we just made our own

00:48:24,900 --> 00:48:31,450
awesome you can make your own so now we

00:48:27,520 --> 00:48:32,950
got two streams right cloud may have

00:48:31,450 --> 00:48:36,040
clouds we have two local local storage

00:48:32,950 --> 00:48:37,900
and now we create our third one we saw

00:48:36,040 --> 00:48:41,430
the subject a minute ago we know about

00:48:37,900 --> 00:48:43,630
that so that as the new movies come in

00:48:41,430 --> 00:48:44,670
they're going and they're probably going

00:48:43,630 --> 00:48:45,750
to come in through this ad

00:48:44,670 --> 00:48:50,339
movie thing where they're gonna come in

00:48:45,750 --> 00:48:54,480
and we're gonna call this thing so so

00:48:50,339 --> 00:48:57,809
they're coming in and and we're going to

00:48:54,480 --> 00:48:59,160
we're gonna pipe that observable through

00:48:57,809 --> 00:49:03,329
something and this is how we're gonna

00:48:59,160 --> 00:49:04,950
learn a new operator here scan basically

00:49:03,329 --> 00:49:06,510
what happens is you've got new movies

00:49:04,950 --> 00:49:09,030
coming in we want to build up an array

00:49:06,510 --> 00:49:13,170
during the session of the movies you

00:49:09,030 --> 00:49:17,670
enter all right so the first time we put

00:49:13,170 --> 00:49:19,049
a new movie in alright well it's current

00:49:17,670 --> 00:49:21,630
well we did Carol antenna now we're

00:49:19,049 --> 00:49:26,520
doing a lot of those will tell Sally

00:49:21,630 --> 00:49:30,390
we'll do Jim okay every time I do this

00:49:26,520 --> 00:49:32,520
right a new movie is being requested its

00:49:30,390 --> 00:49:34,260
streaming into the service yeah we're

00:49:32,520 --> 00:49:36,630
pumping a new one in yep

00:49:34,260 --> 00:49:39,630
well what we want to do is accumulate

00:49:36,630 --> 00:49:41,520
those right in an array that gets longer

00:49:39,630 --> 00:49:44,670
and longer and longer is that observable

00:49:41,520 --> 00:49:46,109
keep sending values in new ones all

00:49:44,670 --> 00:49:49,920
right and that's what we're gonna use

00:49:46,109 --> 00:49:54,030
scan for scan is an accumulator it's it

00:49:49,920 --> 00:49:55,859
starts with an empty array and called

00:49:54,030 --> 00:49:58,770
movies and then every time you get a new

00:49:55,859 --> 00:50:00,960
movie in this is not this by the way is

00:49:58,770 --> 00:50:02,460
just straight array stuff it's gonna add

00:50:00,960 --> 00:50:04,410
the new movies to the kit to the array

00:50:02,460 --> 00:50:06,059
so what's gonna happen every time I type

00:50:04,410 --> 00:50:08,819
something scan is just going to keep

00:50:06,059 --> 00:50:12,380
building up that array for me all right

00:50:08,819 --> 00:50:14,940
so this is cool we've got three streams

00:50:12,380 --> 00:50:18,150
one from the cloud we rolled our own

00:50:14,940 --> 00:50:20,400
observer of the local storage and we are

00:50:18,150 --> 00:50:22,339
using scan to build up an array of new

00:50:20,400 --> 00:50:24,319
movies that the user is typing right now

00:50:22,339 --> 00:50:26,549
now we got to bring them all together

00:50:24,319 --> 00:50:28,650
yeah how do we bring them all together

00:50:26,549 --> 00:50:31,799
but by the way what's the star trade

00:50:28,650 --> 00:50:33,359
thing oh I wanted to make sure that it

00:50:31,799 --> 00:50:35,280
starts with an empty array oh that's

00:50:33,359 --> 00:50:37,260
when it has nothing which is kind of

00:50:35,280 --> 00:50:40,170
like what we did earlier when we did

00:50:37,260 --> 00:50:43,349
this right all right so I've got three

00:50:40,170 --> 00:50:44,940
streams now what I want to do is I want

00:50:43,349 --> 00:50:48,000
to take those three streams and I want

00:50:44,940 --> 00:50:49,710
to pull them together and merge them all

00:50:48,000 --> 00:50:53,670
together right so I have one stream of

00:50:49,710 --> 00:50:55,650
all the movies well we got cloud movies

00:50:53,670 --> 00:50:57,220
that's cool we gots localstorage movies

00:50:55,650 --> 00:50:59,470
that's cool we got new movies

00:50:57,220 --> 00:51:01,720
that's cool they're both all three are

00:50:59,470 --> 00:51:04,180
cool these things finish but new movies

00:51:01,720 --> 00:51:06,579
is always changing right yeah that keeps

00:51:04,180 --> 00:51:08,589
everybody nights I get a new array with

00:51:06,579 --> 00:51:13,060
the new movie in it because that's what

00:51:08,589 --> 00:51:16,180
the scan did so this has got to stay

00:51:13,060 --> 00:51:17,710
alive so what I do is I'm using we're

00:51:16,180 --> 00:51:20,740
using something called combine latest

00:51:17,710 --> 00:51:23,470
and what combine latest says is that's

00:51:20,740 --> 00:51:25,750
great I got these three things coming in

00:51:23,470 --> 00:51:29,980
if yeah you know I'm gonna take the

00:51:25,750 --> 00:51:30,430
latest value of all three again they did

00:51:29,980 --> 00:51:31,900
it again

00:51:30,430 --> 00:51:34,569
I'm gonna take the latest value of all

00:51:31,900 --> 00:51:36,099
three if any one of them changes all

00:51:34,569 --> 00:51:37,599
right I update that one and then I put

00:51:36,099 --> 00:51:39,160
them together again if a morning the

00:51:37,599 --> 00:51:42,010
first one had changed I put them

00:51:39,160 --> 00:51:43,990
together again whichever one changes I'm

00:51:42,010 --> 00:51:46,510
gonna take that latest value combine

00:51:43,990 --> 00:51:50,290
them all together and that is what you

00:51:46,510 --> 00:51:52,720
see right here if cloud changes or local

00:51:50,290 --> 00:51:56,950
changes or new movies changes put the

00:51:52,720 --> 00:51:59,950
new array out of them don't you love the

00:51:56,950 --> 00:52:01,810
new JavaScript syntax this is amazing to

00:51:59,950 --> 00:52:04,180
read I thought we did something we made

00:52:01,810 --> 00:52:06,760
this sort better why did we do this back

00:52:04,180 --> 00:52:10,180
up why we have a sort for anyway we

00:52:06,760 --> 00:52:13,450
sorted it okay so that and we're out of

00:52:10,180 --> 00:52:16,000
time the Creator the last one so for our

00:52:13,450 --> 00:52:19,329
final yes thank you very much for our

00:52:16,000 --> 00:52:21,339
final giant Johnson moment you learned

00:52:19,329 --> 00:52:22,720
about that you learned about observable

00:52:21,339 --> 00:52:25,390
you learned about skin you didn't learn

00:52:22,720 --> 00:52:27,310
about this guy so for sending people I'm

00:52:25,390 --> 00:52:29,770
glad to not tell about expanding P

00:52:27,310 --> 00:52:31,660
fortunately we will have these resources

00:52:29,770 --> 00:52:35,800
and this sample is yours to play with

00:52:31,660 --> 00:52:38,079
because we know it was a lot and we will

00:52:35,800 --> 00:52:40,540
add even more online and github there

00:52:38,079 --> 00:52:43,630
will be like 15 or 16 different examples

00:52:40,540 --> 00:52:44,050
and the rxjs Love Boat has left the

00:52:43,630 --> 00:52:47,220
building

00:52:44,050 --> 00:52:47,220
thank you very much

00:52:48,339 --> 00:52:50,400

YouTube URL: https://www.youtube.com/watch?v=q--U25yPTrA


