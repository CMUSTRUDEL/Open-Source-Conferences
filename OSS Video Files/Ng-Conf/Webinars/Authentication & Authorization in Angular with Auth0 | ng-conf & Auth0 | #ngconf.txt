Title: Authentication & Authorization in Angular with Auth0 | ng-conf & Auth0 | #ngconf
Publication date: 2020-10-27
Playlist: Webinars
Description: 
	Join ng-conf for EnterpriseNG, the world's first enterprise-focused Angular conference of its size! Nov 19-20, 2020 | Online. www.ng-conf.org! 

Adding authentication and authorization to an Angular app can be challenging. It's hard to know where everything goes, what the best practices are for working with RxJS, and what the most secure implementation is. Luckily, Auth0 has a brand new Angular SDK to make this process smooth. In this workshop, you'll learn how to allow users to log in and out of an application, how to display user attributes, how to protect routes with guards, and how to call a secured API with an access token. You'll be up and running quickly so you can focus on building features and improving your app!

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/
Captions: 
	00:00:02,770 --> 00:00:06,240
[Applause]

00:00:06,570 --> 00:00:11,549
[Music]

00:00:14,480 --> 00:00:16,880
well thanks

00:00:15,200 --> 00:00:18,960
um i'm actually gonna turn it over to

00:00:16,880 --> 00:00:23,279
anna first she's gonna do

00:00:18,960 --> 00:00:27,519
our intro uh so we'll uh we'll have anna

00:00:23,279 --> 00:00:32,160
share her screen and and jump in

00:00:27,519 --> 00:00:35,440
okay can you all see my screen

00:00:32,160 --> 00:00:37,040
yes awesome cool

00:00:35,440 --> 00:00:39,440
yeah we're really excited to be here

00:00:37,040 --> 00:00:42,800
today how are you all doing

00:00:39,440 --> 00:00:45,920
um as you already know

00:00:42,800 --> 00:00:49,039
we are all sarah and we

00:00:45,920 --> 00:00:51,360
love fingernails um with us today we

00:00:49,039 --> 00:00:54,079
have sam julene who's a developer

00:00:51,360 --> 00:00:56,399
advocate at allzero sam do you want to

00:00:54,079 --> 00:00:57,120
say hi a little something about yourself

00:00:56,399 --> 00:01:00,640
yeah sure

00:00:57,120 --> 00:01:01,120
i'm uh i'm sam i live in washington

00:01:00,640 --> 00:01:03,600
state

00:01:01,120 --> 00:01:04,720
in the u.s and i've been involved in the

00:01:03,600 --> 00:01:08,960
angular community

00:01:04,720 --> 00:01:12,320
since probably around 2013 2014

00:01:08,960 --> 00:01:14,560
and i'm a google developer expert and an

00:01:12,320 --> 00:01:15,439
angular collaborator and i've been with

00:01:14,560 --> 00:01:17,360
auth0 for

00:01:15,439 --> 00:01:19,520
a little over two years now so i'm

00:01:17,360 --> 00:01:23,200
really happy to be here and

00:01:19,520 --> 00:01:26,560
and share with you yeah thanks

00:01:23,200 --> 00:01:28,880
and next up we have luciano balmatella

00:01:26,560 --> 00:01:31,040
who's also known as lucho so we'll be

00:01:28,880 --> 00:01:34,400
probably referring to you as lucha today

00:01:31,040 --> 00:01:37,439
lucho is a senior engineer at our

00:01:34,400 --> 00:01:38,880
core sdk team so he's going to be the

00:01:37,439 --> 00:01:41,360
point of contact he's going to be able

00:01:38,880 --> 00:01:44,399
to answer all those difficult questions

00:01:41,360 --> 00:01:47,680
no children say hi

00:01:44,399 --> 00:01:50,320
oh hi guys i'm lucio as i was saying i

00:01:47,680 --> 00:01:51,840
i work for the sdks team in the

00:01:50,320 --> 00:01:52,960
auxiliary company i have been working

00:01:51,840 --> 00:01:56,320
from syria for

00:01:52,960 --> 00:01:58,960
at least five years already um

00:01:56,320 --> 00:01:59,920
always on the dx sdks team so if you

00:01:58,960 --> 00:02:02,719
have any questions

00:01:59,920 --> 00:02:03,680
about open source or our sdks especially

00:02:02,719 --> 00:02:07,119
angular

00:02:03,680 --> 00:02:09,360
feel free to keep note of those or

00:02:07,119 --> 00:02:11,920
us those in the zoom chat and we will

00:02:09,360 --> 00:02:14,640
answer both

00:02:11,920 --> 00:02:16,800
awesome and i'm anna sidri i'm also a

00:02:14,640 --> 00:02:18,720
developer advocate at all zero so sam

00:02:16,800 --> 00:02:20,239
julene's the america region

00:02:18,720 --> 00:02:21,840
i'm the email region but now

00:02:20,239 --> 00:02:23,520
everything's online so i guess we can

00:02:21,840 --> 00:02:26,400
say we're the global region

00:02:23,520 --> 00:02:27,760
i'm not quite sure i'm also very

00:02:26,400 --> 00:02:30,239
passionate about

00:02:27,760 --> 00:02:30,879
the angular community i'm the organizer

00:02:30,239 --> 00:02:33,200
of ng

00:02:30,879 --> 00:02:34,560
spain which this year isn't happening

00:02:33,200 --> 00:02:37,200
due to

00:02:34,560 --> 00:02:37,599
well obvious reasons um hopefully next

00:02:37,200 --> 00:02:39,120
year

00:02:37,599 --> 00:02:40,879
it'll be up and running again so i'm

00:02:39,120 --> 00:02:44,239
really looking forward to organizing

00:02:40,879 --> 00:02:44,720
that uh before we dive in there will be

00:02:44,239 --> 00:02:46,480
a

00:02:44,720 --> 00:02:48,959
feedback form which we'll hand out at

00:02:46,480 --> 00:02:50,879
the end so stick around please

00:02:48,959 --> 00:02:52,000
uh have you fill out the feedback form

00:02:50,879 --> 00:02:53,760
you can choose whether you want an

00:02:52,000 --> 00:02:56,560
all-zero t-shirt or an also

00:02:53,760 --> 00:02:57,440
mug you will get one of these have you

00:02:56,560 --> 00:03:00,959
filled out the form

00:02:57,440 --> 00:03:02,159
it's not a raffle and we have some

00:03:00,959 --> 00:03:04,480
questions for you

00:03:02,159 --> 00:03:06,800
which um sam i don't know if you want to

00:03:04,480 --> 00:03:09,040
pull these up in the poll

00:03:06,800 --> 00:03:11,120
yeah brooke do we do we have the ability

00:03:09,040 --> 00:03:14,560
to run a poll

00:03:11,120 --> 00:03:15,280
yeah yeah maybe you could just do a

00:03:14,560 --> 00:03:18,800
quick

00:03:15,280 --> 00:03:21,519
poll with these three questions

00:03:18,800 --> 00:03:23,840
it doesn't look like i have the power to

00:03:21,519 --> 00:03:23,840
do it

00:03:24,000 --> 00:03:28,000
let me get those in i just want to get a

00:03:25,920 --> 00:03:30,159
feel for what people's level of

00:03:28,000 --> 00:03:33,200
experience is

00:03:30,159 --> 00:03:34,640
to help us kind of tailor

00:03:33,200 --> 00:03:36,400
well i hope you like that maybe you can

00:03:34,640 --> 00:03:39,120
send these questions to brooke

00:03:36,400 --> 00:03:40,560
and i continue on listen yeah yeah

00:03:39,120 --> 00:03:42,799
that's a good idea i'll just

00:03:40,560 --> 00:03:45,440
um i'll shoot them over to brooke that

00:03:42,799 --> 00:03:47,440
way we don't waste any time so

00:03:45,440 --> 00:03:49,200
we have one hour i just want to show you

00:03:47,440 --> 00:03:50,080
today's agenda i'm going to be giving a

00:03:49,200 --> 00:03:53,120
five to ten

00:03:50,080 --> 00:03:54,879
minute intro to authentication then sam

00:03:53,120 --> 00:03:56,480
julie is going to take over and

00:03:54,879 --> 00:03:58,400
he's going to be the one that's doing

00:03:56,480 --> 00:04:00,239
the hands-on workshop

00:03:58,400 --> 00:04:02,080
and last but not least we have the q a

00:04:00,239 --> 00:04:04,080
that brooke was talking about and

00:04:02,080 --> 00:04:06,319
lucha will be the person that will be

00:04:04,080 --> 00:04:09,200
able to answer your questions

00:04:06,319 --> 00:04:12,080
so let's dive in and i'm gonna be

00:04:09,200 --> 00:04:15,040
starting with what is authentication

00:04:12,080 --> 00:04:15,840
so authentication as you may or may not

00:04:15,040 --> 00:04:18,959
know

00:04:15,840 --> 00:04:21,919
is the process of confirming an identity

00:04:18,959 --> 00:04:23,600
what do i mean by this so it's when a

00:04:21,919 --> 00:04:25,440
user or an application

00:04:23,600 --> 00:04:27,199
proves they are who they say they are by

00:04:25,440 --> 00:04:28,720
providing valid credentials

00:04:27,199 --> 00:04:30,800
now these credentials tend to be a

00:04:28,720 --> 00:04:32,400
username and password for example

00:04:30,800 --> 00:04:33,840
and they're sometimes combined with

00:04:32,400 --> 00:04:35,840
other factors

00:04:33,840 --> 00:04:37,600
which tend to fall into three categories

00:04:35,840 --> 00:04:41,520
of what you know

00:04:37,600 --> 00:04:43,600
what you have or what you are so just

00:04:41,520 --> 00:04:45,360
like go over that it's basically when

00:04:43,600 --> 00:04:47,600
you as a user

00:04:45,360 --> 00:04:49,360
or an application proves they are who

00:04:47,600 --> 00:04:51,840
they say they are by providing

00:04:49,360 --> 00:04:53,600
valid credentials tend to be username

00:04:51,840 --> 00:04:55,040
and password

00:04:53,600 --> 00:04:57,280
and i just want to clarify what

00:04:55,040 --> 00:04:57,600
authorization is because sometimes i

00:04:57,280 --> 00:05:00,080
hear

00:04:57,600 --> 00:05:01,840
authentication and authorization used

00:05:00,080 --> 00:05:02,960
interchangeably and this isn't quite

00:05:01,840 --> 00:05:05,520
right

00:05:02,960 --> 00:05:08,479
because authorization is the process of

00:05:05,520 --> 00:05:11,199
verifying what a user has access to

00:05:08,479 --> 00:05:13,440
so it's once a user or an application is

00:05:11,199 --> 00:05:15,919
granted access to an api

00:05:13,440 --> 00:05:17,199
after that the api determines the extent

00:05:15,919 --> 00:05:21,440
of the permissions that it

00:05:17,199 --> 00:05:24,320
should assign sorry so it tends to occur

00:05:21,440 --> 00:05:26,720
after after authentication i can't speak

00:05:24,320 --> 00:05:29,840
anymore i'm very sorry

00:05:26,720 --> 00:05:31,039
so once we have validated those

00:05:29,840 --> 00:05:34,080
credentials

00:05:31,039 --> 00:05:36,639
um through authentication the api then

00:05:34,080 --> 00:05:37,360
has some idea of what sort of access it

00:05:36,639 --> 00:05:40,479
should grant

00:05:37,360 --> 00:05:42,720
and that is authorization just to note

00:05:40,479 --> 00:05:43,759
that access to a resource is protected

00:05:42,720 --> 00:05:47,039
by both of these

00:05:43,759 --> 00:05:49,120
authentication and authorization

00:05:47,039 --> 00:05:50,880
so let's go into our intro to

00:05:49,120 --> 00:05:52,960
authentication for web apps and we're

00:05:50,880 --> 00:05:54,720
going to start with server side web apps

00:05:52,960 --> 00:05:56,639
and then we will dig into single page

00:05:54,720 --> 00:05:58,400
web apps and why do i want to start with

00:05:56,639 --> 00:06:00,000
server side web apps even though this is

00:05:58,400 --> 00:06:02,240
an angular workshop

00:06:00,000 --> 00:06:03,280
because we've all heard about cookies

00:06:02,240 --> 00:06:06,160
right

00:06:03,280 --> 00:06:06,800
so when i say service server side web

00:06:06,160 --> 00:06:09,199
apps

00:06:06,800 --> 00:06:11,520
i mean apps you might build with node

00:06:09,199 --> 00:06:14,160
with ruby with dot net

00:06:11,520 --> 00:06:15,759
and it's cookie based authentication

00:06:14,160 --> 00:06:18,240
it's implemented by

00:06:15,759 --> 00:06:20,000
each web platform differently though but

00:06:18,240 --> 00:06:22,560
at the end of the day they all end up

00:06:20,000 --> 00:06:24,560
setting some sort of cookie set it and

00:06:22,560 --> 00:06:25,120
that's then tied to a session on the

00:06:24,560 --> 00:06:28,880
server

00:06:25,120 --> 00:06:30,639
which represents the authenticated user

00:06:28,880 --> 00:06:32,400
to get a better understanding of this

00:06:30,639 --> 00:06:34,319
let's take a look at what the flow might

00:06:32,400 --> 00:06:37,680
look like

00:06:34,319 --> 00:06:40,160
so you have your browser and

00:06:37,680 --> 00:06:43,120
on the server you have your backend web

00:06:40,160 --> 00:06:45,440
app that might have a database

00:06:43,120 --> 00:06:47,520
and then a user submits their

00:06:45,440 --> 00:06:50,000
credentials to login

00:06:47,520 --> 00:06:52,000
and if it's successful then the server

00:06:50,000 --> 00:06:55,120
is going to set a cookie in the browser

00:06:52,000 --> 00:06:57,199
which represents the user's session

00:06:55,120 --> 00:06:58,720
therefore the user is authenticated and

00:06:57,199 --> 00:07:00,639
our web app knows it

00:06:58,720 --> 00:07:03,599
and also the browser knows it because it

00:07:00,639 --> 00:07:06,400
has a cookie

00:07:03,599 --> 00:07:06,960
right and then on following requests or

00:07:06,400 --> 00:07:09,199
if there's

00:07:06,960 --> 00:07:11,199
traffic to the site the cookie then is

00:07:09,199 --> 00:07:12,720
attached to the by the browser and sent

00:07:11,199 --> 00:07:16,000
to the server

00:07:12,720 --> 00:07:18,319
and then this um

00:07:16,000 --> 00:07:20,160
the requested page html and any

00:07:18,319 --> 00:07:22,960
sensitive data will be sent to the

00:07:20,160 --> 00:07:26,560
browser and the user can view it

00:07:22,960 --> 00:07:28,960
so if the cookie expires or

00:07:26,560 --> 00:07:31,599
if there isn't a cookie and a request is

00:07:28,960 --> 00:07:33,520
made for this protected data

00:07:31,599 --> 00:07:35,039
then the user will have to log in again

00:07:33,520 --> 00:07:38,160
and we'll receive a new cookie

00:07:35,039 --> 00:07:39,919
to use onwards and one that once that's

00:07:38,160 --> 00:07:42,400
done successfully then application can

00:07:39,919 --> 00:07:45,919
send them secure data once again

00:07:42,400 --> 00:07:49,039
so this is quite a flow but um

00:07:45,919 --> 00:07:50,400
let's take a look at single page apps

00:07:49,039 --> 00:07:53,199
because we see a lot of

00:07:50,400 --> 00:07:56,560
um token based authentication instead so

00:07:53,199 --> 00:07:58,879
let's see how that may work

00:07:56,560 --> 00:08:01,360
we have our browser again and when the

00:07:58,879 --> 00:08:04,240
user navigates to our application

00:08:01,360 --> 00:08:06,560
the app is compiled downloaded and runs

00:08:04,240 --> 00:08:09,680
in the browser itself

00:08:06,560 --> 00:08:12,240
we usually get data ah

00:08:09,680 --> 00:08:14,400
there's your poll everyone and we

00:08:12,240 --> 00:08:16,400
usually get data from an api

00:08:14,400 --> 00:08:18,960
maybe not our own api and we will get

00:08:16,400 --> 00:08:21,280
tokens from an authorization server

00:08:18,960 --> 00:08:23,280
so an authorization server is basically

00:08:21,280 --> 00:08:26,000
a set of endpoints whose purpose is to

00:08:23,280 --> 00:08:28,240
issue tokens

00:08:26,000 --> 00:08:30,319
um next the user is going to submit

00:08:28,240 --> 00:08:32,719
their credentials to login

00:08:30,319 --> 00:08:35,039
and then hit it successfully in this

00:08:32,719 --> 00:08:38,159
case and the authorization server up

00:08:35,039 --> 00:08:41,519
issues a token back

00:08:38,159 --> 00:08:42,640
and when the token will then be sent out

00:08:41,519 --> 00:08:45,839
to our api

00:08:42,640 --> 00:08:47,600
with any request for data the api

00:08:45,839 --> 00:08:49,519
is then going to verify the token with

00:08:47,600 --> 00:08:52,480
middleware and everything works

00:08:49,519 --> 00:08:55,120
that the data is returned as a json

00:08:52,480 --> 00:08:57,680
which the app then consumes

00:08:55,120 --> 00:08:59,440
so even though this seems like a

00:08:57,680 --> 00:09:02,320
complicated process and it is

00:08:59,440 --> 00:09:02,720
um we are all here i assume we're all

00:09:02,320 --> 00:09:05,839
here

00:09:02,720 --> 00:09:08,320
um application builders and we don't

00:09:05,839 --> 00:09:10,720
want to become identity experts

00:09:08,320 --> 00:09:11,680
because we have a lot on our plate and

00:09:10,720 --> 00:09:14,480
that's where the

00:09:11,680 --> 00:09:15,120
all zero angular sdk comes to the rescue

00:09:14,480 --> 00:09:18,320
right

00:09:15,120 --> 00:09:21,440
we don't have to deal too much with um

00:09:18,320 --> 00:09:23,680
identity knowledge whereas

00:09:21,440 --> 00:09:25,519
all zero angular sdk takes care of most

00:09:23,680 --> 00:09:28,160
of this for you

00:09:25,519 --> 00:09:28,880
but just to prove this to you i am going

00:09:28,160 --> 00:09:31,360
to now

00:09:28,880 --> 00:09:33,680
pass the stage on to sam julien who's

00:09:31,360 --> 00:09:36,800
actually going to do the workshop

00:09:33,680 --> 00:09:41,519
um it's the poll

00:09:36,800 --> 00:09:44,640
finished will i can i share the answers

00:09:41,519 --> 00:09:47,920
we can definitely um let me do

00:09:44,640 --> 00:09:47,920
you want me to end it right now

00:09:48,839 --> 00:09:54,480
um sure okay let's end it and then i can

00:09:52,399 --> 00:09:58,000
display

00:09:54,480 --> 00:09:58,000
cool okay

00:09:59,120 --> 00:10:03,200
okay that's really interesting and it's

00:10:01,839 --> 00:10:04,880
good to see that

00:10:03,200 --> 00:10:06,640
none of you have used osiro before

00:10:04,880 --> 00:10:09,040
because this is going to be nice and

00:10:06,640 --> 00:10:13,279
fresh and new for you all

00:10:09,040 --> 00:10:16,959
okay um sam i'm gonna leave this stage

00:10:13,279 --> 00:10:19,839
all for you okay all right let me

00:10:16,959 --> 00:10:19,839
share my screen

00:10:26,800 --> 00:10:30,480
all right so

00:10:30,800 --> 00:10:34,160
let me show um let me let me give you a

00:10:33,839 --> 00:10:36,640
quick

00:10:34,160 --> 00:10:37,200
overview of what we're going to be doing

00:10:36,640 --> 00:10:40,399
so

00:10:37,200 --> 00:10:44,160
anna has added

00:10:40,399 --> 00:10:47,440
um all of the steps to the slides

00:10:44,160 --> 00:10:48,640
uh and so if you we have a couple

00:10:47,440 --> 00:10:49,680
basically we have a couple things in

00:10:48,640 --> 00:10:52,800
place in case

00:10:49,680 --> 00:10:55,760
you uh fall behind or

00:10:52,800 --> 00:10:57,200
are you get stuck on something we have

00:10:55,760 --> 00:11:00,800
the slides here

00:10:57,200 --> 00:11:02,959
uh i think we we sent out a link to

00:11:00,800 --> 00:11:04,240
those if not we can drop them in the

00:11:02,959 --> 00:11:06,000
chat

00:11:04,240 --> 00:11:09,200
and then what we're going to do is we're

00:11:06,000 --> 00:11:09,200
going to work through

00:11:10,480 --> 00:11:14,079
this sample application and we're going

00:11:12,800 --> 00:11:16,560
to take it step by step

00:11:14,079 --> 00:11:18,800
we've got a repo that you can clone and

00:11:16,560 --> 00:11:22,079
install if you haven't already

00:11:18,800 --> 00:11:24,160
we're going to add the new auth0 angular

00:11:22,079 --> 00:11:27,279
sdk

00:11:24,160 --> 00:11:28,800
which is which has just come out

00:11:27,279 --> 00:11:30,320
what was it like a few weeks ago or

00:11:28,800 --> 00:11:34,000
something uh

00:11:30,320 --> 00:11:36,720
and uh we're going to step through

00:11:34,000 --> 00:11:37,839
all of the basics of using the new

00:11:36,720 --> 00:11:40,000
angular sdk

00:11:37,839 --> 00:11:40,959
so we're going to configure it we're

00:11:40,000 --> 00:11:43,040
going to

00:11:40,959 --> 00:11:44,000
have you able to we're going to create a

00:11:43,040 --> 00:11:46,320
login button

00:11:44,000 --> 00:11:47,200
a log out button you're going to be able

00:11:46,320 --> 00:11:51,279
to

00:11:47,200 --> 00:11:53,040
display profile information from a user

00:11:51,279 --> 00:11:54,399
and then we've also got a tiny little

00:11:53,040 --> 00:11:56,720
express api

00:11:54,399 --> 00:11:58,959
that's a part of the repo and we're

00:11:56,720 --> 00:12:02,880
going to be able to

00:11:58,959 --> 00:12:06,800
protect the routes with an auth guard

00:12:02,880 --> 00:12:08,000
and then set up the little api to where

00:12:06,800 --> 00:12:10,480
we can

00:12:08,000 --> 00:12:12,480
call both a public endpoint and a

00:12:10,480 --> 00:12:15,760
protected endpoint

00:12:12,480 --> 00:12:18,720
with what's called an http interceptor

00:12:15,760 --> 00:12:19,680
so what's cool is that the angular sdk

00:12:18,720 --> 00:12:20,959
basically what we're going to do is

00:12:19,680 --> 00:12:23,519
we're going to configure it

00:12:20,959 --> 00:12:24,399
in aut00 and do some configuration in

00:12:23,519 --> 00:12:26,160
our app

00:12:24,399 --> 00:12:27,760
um but you're going to see that there's

00:12:26,160 --> 00:12:28,399
not much else that we need to do it's

00:12:27,760 --> 00:12:31,040
going to be

00:12:28,399 --> 00:12:31,760
um you're not going to have to worry

00:12:31,040 --> 00:12:35,200
about

00:12:31,760 --> 00:12:37,519
processing the token or you know dealing

00:12:35,200 --> 00:12:40,320
with any of the behind the scenes

00:12:37,519 --> 00:12:41,680
flow of logging into the application or

00:12:40,320 --> 00:12:43,360
checking to see that there's an active

00:12:41,680 --> 00:12:47,040
session things like that

00:12:43,360 --> 00:12:50,399
so let's dive in um

00:12:47,040 --> 00:12:51,120
the repo for this if i think we can also

00:12:50,399 --> 00:12:54,079
throw a link

00:12:51,120 --> 00:12:55,279
in there but you can fork it or you can

00:12:54,079 --> 00:12:58,560
clone it

00:12:55,279 --> 00:13:02,639
but the way that we set it up

00:12:58,560 --> 00:13:04,160
to make it easy on you in case you're

00:13:02,639 --> 00:13:06,160
you know a little behind i know for me

00:13:04,160 --> 00:13:10,000
when i do workshops

00:13:06,160 --> 00:13:13,200
i always fall behind inevitably

00:13:10,000 --> 00:13:13,680
and so then i get frustrated and so what

00:13:13,200 --> 00:13:14,959
we've done

00:13:13,680 --> 00:13:17,120
is we've included a bunch of

00:13:14,959 --> 00:13:19,360
instructions for

00:13:17,120 --> 00:13:21,120
to supplement the slides in case you

00:13:19,360 --> 00:13:22,160
fall behind or you miss something that

00:13:21,120 --> 00:13:23,440
we've said

00:13:22,160 --> 00:13:25,279
and then the other thing that we've done

00:13:23,440 --> 00:13:28,720
is we've made a branch

00:13:25,279 --> 00:13:30,480
for each step and

00:13:28,720 --> 00:13:32,160
this is really helpful because what you

00:13:30,480 --> 00:13:34,880
can do is you can

00:13:32,160 --> 00:13:36,639
click on one of these branches and you

00:13:34,880 --> 00:13:39,760
can actually just

00:13:36,639 --> 00:13:40,560
see the difference between the the

00:13:39,760 --> 00:13:43,279
current branch

00:13:40,560 --> 00:13:45,360
and the previous branch so i could go

00:13:43,279 --> 00:13:47,920
over here and compare

00:13:45,360 --> 00:13:50,160
step three to step four and i can see

00:13:47,920 --> 00:13:52,720
exactly what we're going to do

00:13:50,160 --> 00:13:54,160
between those steps so this is a great

00:13:52,720 --> 00:13:56,800
way for you to

00:13:54,160 --> 00:13:58,000
be able to go back and and catch up the

00:13:56,800 --> 00:13:58,959
other thing you can do here is you can

00:13:58,000 --> 00:14:00,639
just check out

00:13:58,959 --> 00:14:02,560
whatever branch like if you fall behind

00:14:00,639 --> 00:14:04,240
at all in this session

00:14:02,560 --> 00:14:06,000
you can just check out the branch that

00:14:04,240 --> 00:14:08,800
you need to be in

00:14:06,000 --> 00:14:10,560
and just start from there so the goal

00:14:08,800 --> 00:14:12,399
here is that even if you can't

00:14:10,560 --> 00:14:14,639
get through this material just in this

00:14:12,399 --> 00:14:16,079
next half hour or so

00:14:14,639 --> 00:14:18,639
that you won't be left hanging and you

00:14:16,079 --> 00:14:18,959
can uh follow it on your own and if you

00:14:18,639 --> 00:14:21,680
do

00:14:18,959 --> 00:14:22,480
uh let us know how it goes um uh we're

00:14:21,680 --> 00:14:25,199
gonna have that

00:14:22,480 --> 00:14:26,000
survey at the end uh but we this is this

00:14:25,199 --> 00:14:27,920
is like the first

00:14:26,000 --> 00:14:29,199
iteration of this workshop since this

00:14:27,920 --> 00:14:31,120
sdk is so new

00:14:29,199 --> 00:14:33,760
so we're we definitely love feedback

00:14:31,120 --> 00:14:36,160
anything any trouble that you run into

00:14:33,760 --> 00:14:37,519
okay so without further ado i'll go

00:14:36,160 --> 00:14:40,720
ahead and jump in

00:14:37,519 --> 00:14:43,360
and um lucho and anna will be in the

00:14:40,720 --> 00:14:46,399
chat fielding questions things like that

00:14:43,360 --> 00:14:49,040
um but once you've

00:14:46,399 --> 00:14:50,639
once you've cloned the repo i'm going to

00:14:49,040 --> 00:14:53,120
hop over to

00:14:50,639 --> 00:14:54,399
visual studio code here actually let me

00:14:53,120 --> 00:14:59,839
quit

00:14:54,399 --> 00:14:59,839
this other one so i don't get confused

00:15:00,480 --> 00:15:07,360
okay so um and

00:15:04,079 --> 00:15:09,519
is this um

00:15:07,360 --> 00:15:10,800
color scheme gonna be okay i can switch

00:15:09,519 --> 00:15:13,839
it to a light theme

00:15:10,800 --> 00:15:17,199
if somebody uh if if we need to for

00:15:13,839 --> 00:15:20,320
accessibility reasons don't be shy if

00:15:17,199 --> 00:15:23,440
if uh if you need me to switch to

00:15:20,320 --> 00:15:24,800
a light colored theme let me get rid of

00:15:23,440 --> 00:15:26,480
this

00:15:24,800 --> 00:15:30,000
let i hide this little window it sure

00:15:26,480 --> 00:15:33,440
takes up a lot of screen real estate

00:15:30,000 --> 00:15:36,880
um looks like the corner is cool

00:15:33,440 --> 00:15:38,000
okay great okay so once you clone the

00:15:36,880 --> 00:15:39,920
repo

00:15:38,000 --> 00:15:41,839
uh the first thing that you'll want to

00:15:39,920 --> 00:15:43,279
do is run npm install

00:15:41,839 --> 00:15:45,600
to go ahead and install all the

00:15:43,279 --> 00:15:48,880
dependencies the way this is set up

00:15:45,600 --> 00:15:52,000
um we have uh

00:15:48,880 --> 00:15:52,880
an angular cli project in the source

00:15:52,000 --> 00:15:55,920
folder

00:15:52,880 --> 00:15:58,639
um and then i have just a

00:15:55,920 --> 00:16:00,880
really tiny little express server it

00:15:58,639 --> 00:16:04,720
literally has two end points it's not

00:16:00,880 --> 00:16:05,839
um it's not a big thing but it's part of

00:16:04,720 --> 00:16:10,000
it so what i have

00:16:05,839 --> 00:16:11,680
in the package json i have the

00:16:10,000 --> 00:16:13,120
dependencies for angular and then i also

00:16:11,680 --> 00:16:14,880
have the dependencies for the little

00:16:13,120 --> 00:16:15,360
express server so when you run npm

00:16:14,880 --> 00:16:19,360
install

00:16:15,360 --> 00:16:22,160
it'll just install all of that and then

00:16:19,360 --> 00:16:24,560
the one thing you need to do to get this

00:16:22,160 --> 00:16:27,680
running before you run npm start

00:16:24,560 --> 00:16:30,880
is you need to this um dot m

00:16:27,680 --> 00:16:32,240
file is what the server will use uh for

00:16:30,880 --> 00:16:35,040
configuration

00:16:32,240 --> 00:16:36,399
and so all you need to do is make a copy

00:16:35,040 --> 00:16:40,160
of this

00:16:36,399 --> 00:16:40,160
um let's see here

00:16:44,480 --> 00:16:50,079
with my resolution being so high i can't

00:16:46,959 --> 00:16:53,360
get to an empty spot here we go

00:16:50,079 --> 00:16:56,639
so just make a copy of that

00:16:53,360 --> 00:16:58,639
and then just take the the copy dot

00:16:56,639 --> 00:17:00,000
example off you could also just rename

00:16:58,639 --> 00:17:01,360
the file if you want but

00:17:00,000 --> 00:17:03,120
it you might find it helpful to have a

00:17:01,360 --> 00:17:04,559
reference point

00:17:03,120 --> 00:17:06,240
you don't need to worry about these

00:17:04,559 --> 00:17:08,079
values yet we're going to get there

00:17:06,240 --> 00:17:11,760
but you just need to have this file in

00:17:08,079 --> 00:17:18,880
place and so once you do that

00:17:11,760 --> 00:17:22,160
you can just run npm start

00:17:18,880 --> 00:17:26,319
and uh what will happen

00:17:22,160 --> 00:17:29,120
hold on oh i already have this

00:17:26,319 --> 00:17:30,640
in you somewhere oh yeah i was doing

00:17:29,120 --> 00:17:34,160
this before

00:17:30,640 --> 00:17:34,160
so let me close this other

00:17:35,520 --> 00:17:39,440
clear this out okay so if you run npm

00:17:37,440 --> 00:17:42,080
start what will happen is it's going to

00:17:39,440 --> 00:17:42,960
simultaneously run the little express

00:17:42,080 --> 00:17:45,760
server

00:17:42,960 --> 00:17:47,200
as well as the angular cli you don't

00:17:45,760 --> 00:17:48,000
really need to worry about the server

00:17:47,200 --> 00:17:52,480
yet

00:17:48,000 --> 00:17:55,919
we'll get to that in a little bit

00:17:52,480 --> 00:17:57,919
so once that is up and running

00:17:55,919 --> 00:17:59,120
you should be able to go to your browser

00:17:57,919 --> 00:18:02,559
and go to localhost

00:17:59,120 --> 00:18:04,400
4200 and you just see this little sample

00:18:02,559 --> 00:18:07,440
application

00:18:04,400 --> 00:18:09,440
it's got some links and things like that

00:18:07,440 --> 00:18:10,960
and this application was created by our

00:18:09,440 --> 00:18:13,120
teammate dan

00:18:10,960 --> 00:18:14,240
and it's solely for the purpose of

00:18:13,120 --> 00:18:17,360
helping you set up

00:18:14,240 --> 00:18:19,280
the auth0 angular sdk uh

00:18:17,360 --> 00:18:20,880
we'll have a route here for displaying

00:18:19,280 --> 00:18:22,559
the profile information we've got a

00:18:20,880 --> 00:18:25,280
route here for calling that protected

00:18:22,559 --> 00:18:28,400
api that we'll get to in a little bit

00:18:25,280 --> 00:18:31,679
and so that is getting it up and running

00:18:28,400 --> 00:18:33,200
so now what we need to do is we need to

00:18:31,679 --> 00:18:35,520
configure we're gonna we're gonna

00:18:33,200 --> 00:18:36,240
install the auth0 sdk and we're gonna

00:18:35,520 --> 00:18:39,360
configure

00:18:36,240 --> 00:18:43,360
the application in auth0 so

00:18:39,360 --> 00:18:47,120
to install the sdk you can either

00:18:43,360 --> 00:18:47,120
you can stop the server if you want

00:18:47,200 --> 00:18:50,799
you may need to restart it anyway once

00:18:48,799 --> 00:18:54,080
you install a new dependency

00:18:50,799 --> 00:18:56,480
but you can actually just use ng add

00:18:54,080 --> 00:18:57,440
we've that the sdk team has made this

00:18:56,480 --> 00:18:59,760
compatible with

00:18:57,440 --> 00:19:01,360
angular cli so you can do ng-add and

00:18:59,760 --> 00:19:06,080
then auth0

00:19:01,360 --> 00:19:11,840
slash auth0-angular

00:19:06,080 --> 00:19:11,840
and that will install the new sdk

00:19:17,520 --> 00:19:24,400
great and so now what we need to do

00:19:21,039 --> 00:19:28,880
is we need to tell authxero

00:19:24,400 --> 00:19:32,559
about this application so

00:19:28,880 --> 00:19:34,080
aut00 is a service basically that's

00:19:32,559 --> 00:19:38,080
going to handle

00:19:34,080 --> 00:19:41,520
creating tokens to log your users in

00:19:38,080 --> 00:19:44,480
and keep track of them in a user store

00:19:41,520 --> 00:19:45,360
so if you haven't already you'll need to

00:19:44,480 --> 00:19:47,679
sign up for

00:19:45,360 --> 00:19:50,720
a free account um the free account's

00:19:47,679 --> 00:19:52,880
very generous you won't run out of

00:19:50,720 --> 00:19:55,520
free activity it never expires or

00:19:52,880 --> 00:19:57,280
anything uh it's only limited by

00:19:55,520 --> 00:19:59,360
features and by the number of active

00:19:57,280 --> 00:20:00,960
users but i don't think in this workshop

00:19:59,360 --> 00:20:04,159
you'll have any trouble with 7

00:20:00,960 --> 00:20:05,120
000 active users so once you sign up i'm

00:20:04,159 --> 00:20:08,240
going to go ahead and log

00:20:05,120 --> 00:20:13,200
in with my one of my other ones

00:20:08,240 --> 00:20:13,200
so let me go back

00:20:13,600 --> 00:20:16,640
so we have our application but what we

00:20:15,600 --> 00:20:20,000
need is

00:20:16,640 --> 00:20:23,120
our uh we need to tell aut00 that

00:20:20,000 --> 00:20:25,280
we're going to need it to create tokens

00:20:23,120 --> 00:20:26,480
for this application so what we're going

00:20:25,280 --> 00:20:28,559
to do when you first

00:20:26,480 --> 00:20:30,080
log into ot0 it's going to take you to

00:20:28,559 --> 00:20:32,840
this dashboard

00:20:30,080 --> 00:20:34,240
and you're going to click over on this

00:20:32,840 --> 00:20:37,919
applications uh

00:20:34,240 --> 00:20:39,840
section over here and then

00:20:37,919 --> 00:20:41,039
and there's a chance if you're signing

00:20:39,840 --> 00:20:43,840
up brand new that your

00:20:41,039 --> 00:20:45,280
ui is going to look like slightly

00:20:43,840 --> 00:20:46,799
different

00:20:45,280 --> 00:20:48,400
because i know they're rolling out some

00:20:46,799 --> 00:20:51,520
new design

00:20:48,400 --> 00:20:53,360
for this and my account is

00:20:51,520 --> 00:20:55,440
pretty old at this point but it's it's

00:20:53,360 --> 00:20:57,840
going to look pretty much the same just

00:20:55,440 --> 00:20:59,440
maybe a little bit different

00:20:57,840 --> 00:21:00,880
and so next thing we're going to want to

00:20:59,440 --> 00:21:04,320
do is click create

00:21:00,880 --> 00:21:05,600
application and here is just where we're

00:21:04,320 --> 00:21:08,400
going to tell

00:21:05,600 --> 00:21:09,120
zero about our new application that

00:21:08,400 --> 00:21:11,039
we're going to

00:21:09,120 --> 00:21:13,760
need so we're going to give it a name we

00:21:11,039 --> 00:21:15,520
can just call it angular sdk workshop

00:21:13,760 --> 00:21:17,200
whatever you want to call it

00:21:15,520 --> 00:21:19,679
and we're going to tell it that it's a

00:21:17,200 --> 00:21:21,520
single page web application so

00:21:19,679 --> 00:21:23,280
you might know that there are different

00:21:21,520 --> 00:21:26,080
types of applications you've got

00:21:23,280 --> 00:21:26,880
native apps on your phone regular web

00:21:26,080 --> 00:21:29,919
apps that use

00:21:26,880 --> 00:21:31,840
a server machine to machine applications

00:21:29,919 --> 00:21:33,200
like clis and then

00:21:31,840 --> 00:21:35,039
applications that use things like

00:21:33,200 --> 00:21:37,120
angular reactor view

00:21:35,039 --> 00:21:38,480
are called single page web applications

00:21:37,120 --> 00:21:42,400
and they use a specific

00:21:38,480 --> 00:21:43,520
flow for id for identity and access

00:21:42,400 --> 00:21:44,799
management

00:21:43,520 --> 00:21:47,679
and that's what we're going to be using

00:21:44,799 --> 00:21:50,799
here so let me

00:21:47,679 --> 00:21:50,799
so you can just click create

00:21:53,840 --> 00:21:56,880
and by the way these instructions these

00:21:55,760 --> 00:22:00,400
are in the readme

00:21:56,880 --> 00:22:02,960
of the repo so if you're um if you're

00:22:00,400 --> 00:22:03,840
if you're not able to if i'm going too

00:22:02,960 --> 00:22:07,280
fast or anything

00:22:03,840 --> 00:22:08,720
you can find these in the in the readme

00:22:07,280 --> 00:22:10,480
so what we're going to do is we're going

00:22:08,720 --> 00:22:13,200
to go over to this

00:22:10,480 --> 00:22:15,440
settings tab and we're sort of creating

00:22:13,200 --> 00:22:18,480
a communication bridge between

00:22:15,440 --> 00:22:19,520
auth0 and the angular application so

00:22:18,480 --> 00:22:22,960
what we need to do

00:22:19,520 --> 00:22:23,919
is basically tell auth0 where we're

00:22:22,960 --> 00:22:27,120
expecting

00:22:23,919 --> 00:22:29,760
these uh login and log out calls

00:22:27,120 --> 00:22:31,200
to come from so there are three places

00:22:29,760 --> 00:22:34,720
that we need to add

00:22:31,200 --> 00:22:37,360
the urls

00:22:34,720 --> 00:22:39,679
for our application so the first one is

00:22:37,360 --> 00:22:40,000
in the allowed callback urls this is

00:22:39,679 --> 00:22:42,000
just

00:22:40,000 --> 00:22:44,720
meaning where we're going to redirect

00:22:42,000 --> 00:22:46,400
the the user back to the application

00:22:44,720 --> 00:22:47,919
when we log in so we're just going to

00:22:46,400 --> 00:22:51,120
add our localhost

00:22:47,919 --> 00:22:51,120
4200 here

00:22:51,679 --> 00:22:55,200
and then we're going to do the same

00:22:52,960 --> 00:22:58,400
thing in two other places the next place

00:22:55,200 --> 00:23:00,799
is in allowed logout urls

00:22:58,400 --> 00:23:01,919
so when the user clicks log out we're

00:23:00,799 --> 00:23:04,400
going to

00:23:01,919 --> 00:23:05,840
return them back to the page once

00:23:04,400 --> 00:23:08,080
they've been logged out

00:23:05,840 --> 00:23:10,080
and so we're going to tell otz0 that

00:23:08,080 --> 00:23:11,520
localhost 4200 is where we're going to

00:23:10,080 --> 00:23:14,640
do that

00:23:11,520 --> 00:23:15,520
and then the last one is for allowed web

00:23:14,640 --> 00:23:18,960
origins

00:23:15,520 --> 00:23:18,960
so this is um

00:23:19,360 --> 00:23:22,960
the angular application is going to make

00:23:21,280 --> 00:23:26,159
requests under the hood

00:23:22,960 --> 00:23:27,919
to an auth 0 url to handle

00:23:26,159 --> 00:23:30,159
auth request a handle authentication

00:23:27,919 --> 00:23:33,360
request so you need to add this

00:23:30,159 --> 00:23:35,280
application origin url for

00:23:33,360 --> 00:23:36,559
to avoid any sort of cross site cross

00:23:35,280 --> 00:23:38,159
cross-origin

00:23:36,559 --> 00:23:40,159
resource there if you've ever seen a

00:23:38,159 --> 00:23:41,919
cores error

00:23:40,159 --> 00:23:43,440
this is going to be part of that and

00:23:41,919 --> 00:23:45,200
this is used for the silent

00:23:43,440 --> 00:23:47,279
authentication like when you reload the

00:23:45,200 --> 00:23:48,240
application auth0 is going to be able to

00:23:47,279 --> 00:23:51,360
just log you back

00:23:48,240 --> 00:23:54,159
into the application and

00:23:51,360 --> 00:23:55,760
that is actually the only stuff that we

00:23:54,159 --> 00:23:56,240
need to do everything else we can just

00:23:55,760 --> 00:23:59,600
leave

00:23:56,240 --> 00:24:01,200
as defaults and hit save

00:23:59,600 --> 00:24:03,360
now don't close that yet because you're

00:24:01,200 --> 00:24:05,440
going to need a little bit of this

00:24:03,360 --> 00:24:06,880
information on the page so we're just

00:24:05,440 --> 00:24:09,919
going to go back over

00:24:06,880 --> 00:24:09,919
to the code now

00:24:10,720 --> 00:24:17,520
and uh if i pull up

00:24:15,360 --> 00:24:18,960
i can probably restart the server at

00:24:17,520 --> 00:24:20,480
this point

00:24:18,960 --> 00:24:23,039
and just leave it on in the background

00:24:20,480 --> 00:24:23,039
for a while

00:24:23,120 --> 00:24:27,039
this zoom bar is uh taking up a lot of

00:24:25,520 --> 00:24:30,159
real estate

00:24:27,039 --> 00:24:30,159
let's see here we go

00:24:30,799 --> 00:24:38,720
all right i'll close that close all this

00:24:34,799 --> 00:24:38,720
and if i pull up our readme

00:24:40,320 --> 00:24:44,640
okay so next thing we need to do is

00:24:42,320 --> 00:24:48,240
actually configure the sdk

00:24:44,640 --> 00:24:54,000
in the application so the way we do this

00:24:48,240 --> 00:24:57,360
we have this uh auth0.config.json

00:24:54,000 --> 00:25:01,279
file that we um

00:24:57,360 --> 00:25:02,880
are able to um add our

00:25:01,279 --> 00:25:04,799
our options to so what you're going to

00:25:02,880 --> 00:25:06,559
do is similar to the

00:25:04,799 --> 00:25:08,080
the end file which was used for the

00:25:06,559 --> 00:25:10,559
server you're going to

00:25:08,080 --> 00:25:11,120
use this file for the client so what we

00:25:10,559 --> 00:25:13,360
can do

00:25:11,120 --> 00:25:15,360
is you could either copy and paste it or

00:25:13,360 --> 00:25:18,400
you could rename it and just take off

00:25:15,360 --> 00:25:19,760
the dot example it's up to you

00:25:18,400 --> 00:25:21,600
depending on if you want a reference

00:25:19,760 --> 00:25:23,679
point i'm just going to go ahead and

00:25:21,600 --> 00:25:26,960
remove that

00:25:23,679 --> 00:25:29,039
so then we need two things for now

00:25:26,960 --> 00:25:30,320
we just need the domain and the client

00:25:29,039 --> 00:25:33,360
id

00:25:30,320 --> 00:25:36,400
um so we can go back over

00:25:33,360 --> 00:25:38,320
to our application and not zero

00:25:36,400 --> 00:25:39,440
and we can copy the client id this is

00:25:38,320 --> 00:25:44,080
just a unique

00:25:39,440 --> 00:25:46,559
identifier for our application um

00:25:44,080 --> 00:25:48,559
it just tells dot zero hey this is the

00:25:46,559 --> 00:25:53,120
application that i want to request

00:25:48,559 --> 00:25:56,799
login for so we'll copy the client id

00:25:53,120 --> 00:25:58,640
paste that in here and we'll do the same

00:25:56,799 --> 00:26:02,720
thing for the domain the domain

00:25:58,640 --> 00:26:06,000
is your unique domain

00:26:02,720 --> 00:26:10,640
for when you signed up for auth0 so i'll

00:26:06,000 --> 00:26:14,320
go ahead and paste that in there

00:26:10,640 --> 00:26:14,320
cool okay

00:26:15,039 --> 00:26:22,840
let's just check in is everybody

00:26:19,120 --> 00:26:25,200
following this is any uh issues coming

00:26:22,840 --> 00:26:28,559
up

00:26:25,200 --> 00:26:28,559
anything in the in the chat

00:26:30,480 --> 00:26:34,320
looks good for everybody okay okay all

00:26:33,440 --> 00:26:37,600
good

00:26:34,320 --> 00:26:39,120
okay if anyone isn't they can

00:26:37,600 --> 00:26:40,960
always send me a direct message or

00:26:39,120 --> 00:26:41,919
something and i can help them figure it

00:26:40,960 --> 00:26:44,000
out

00:26:41,919 --> 00:26:46,159
i think that's possible right or is it i

00:26:44,000 --> 00:26:50,080
think so yeah

00:26:46,159 --> 00:26:53,120
okay great so now we're ready to

00:26:50,080 --> 00:26:56,240
um configure the sdk

00:26:53,120 --> 00:26:59,360
in the actual application and there's

00:26:56,240 --> 00:27:00,000
two spots that we need to do that uh the

00:26:59,360 --> 00:27:03,279
first

00:27:00,000 --> 00:27:04,640
place that we need to do to configure is

00:27:03,279 --> 00:27:06,960
the environment file

00:27:04,640 --> 00:27:08,080
of the angular application we need to

00:27:06,960 --> 00:27:11,440
actually be able to

00:27:08,080 --> 00:27:11,760
tell angular about these values and use

00:27:11,440 --> 00:27:14,240
them

00:27:11,760 --> 00:27:15,279
in the application so what we're going

00:27:14,240 --> 00:27:18,840
to do is we're going to go

00:27:15,279 --> 00:27:22,480
over in our source folder there is this

00:27:18,840 --> 00:27:24,080
environment.t file

00:27:22,480 --> 00:27:25,919
and we're going to add a few different

00:27:24,080 --> 00:27:27,679
things here you can actually

00:27:25,919 --> 00:27:29,840
this is all just the boilerplate that

00:27:27,679 --> 00:27:34,080
the cli provides if you want to delete

00:27:29,840 --> 00:27:35,200
these comments you can

00:27:34,080 --> 00:27:37,600
so the first thing we're going to do is

00:27:35,200 --> 00:27:40,320
we're going to import our domain and our

00:27:37,600 --> 00:27:43,520
client id from that json file

00:27:40,320 --> 00:27:47,120
so we can say import

00:27:43,520 --> 00:27:50,399
and domain client id

00:27:47,120 --> 00:27:54,399
from dot dot slash and then

00:27:50,399 --> 00:27:54,399
auth config.json

00:27:58,960 --> 00:28:03,440
and then we can actually use that use

00:28:01,600 --> 00:28:06,320
those values so we're going to add

00:28:03,440 --> 00:28:06,960
a new object to our environment config

00:28:06,320 --> 00:28:10,240
here called

00:28:06,960 --> 00:28:13,440
auth so just create a new object there

00:28:10,240 --> 00:28:14,640
and we're going to use destructuring

00:28:13,440 --> 00:28:17,600
basically so we're going to

00:28:14,640 --> 00:28:19,360
give it a key of domain and use our

00:28:17,600 --> 00:28:20,559
domain as the value

00:28:19,360 --> 00:28:22,399
we're going to do the same thing with

00:28:20,559 --> 00:28:25,039
client id

00:28:22,399 --> 00:28:26,880
and then we also need to specify a

00:28:25,039 --> 00:28:29,120
redirect uri

00:28:26,880 --> 00:28:31,039
for the application so this is when we

00:28:29,120 --> 00:28:33,600
log into the application we need to tell

00:28:31,039 --> 00:28:34,960
it where to send the user by default

00:28:33,600 --> 00:28:37,120
so we're going to create a new property

00:28:34,960 --> 00:28:40,480
called redirect uri

00:28:37,120 --> 00:28:40,480
and for this we're just going to use

00:28:40,840 --> 00:28:46,080
window.location.origin

00:28:42,320 --> 00:28:49,360
that'll just tell um tell oth0 to

00:28:46,080 --> 00:28:53,520
send the user back to wherever the

00:28:49,360 --> 00:28:56,640
uh the current address is on the page

00:28:53,520 --> 00:28:59,200
cool so that is the environment config

00:28:56,640 --> 00:29:00,080
and this is um where we're at right now

00:28:59,200 --> 00:29:04,159
is um

00:29:00,080 --> 00:29:07,520
the the step two branch of the uh

00:29:04,159 --> 00:29:11,200
of the repo so the the the code that i'm

00:29:07,520 --> 00:29:12,880
writing is all in the step two branch

00:29:11,200 --> 00:29:14,240
cool and so then the other thing we need

00:29:12,880 --> 00:29:17,600
to do is we need to

00:29:14,240 --> 00:29:20,320
import the module for the sdk

00:29:17,600 --> 00:29:21,120
into our application so the the angular

00:29:20,320 --> 00:29:23,440
sdk

00:29:21,120 --> 00:29:24,880
from auth0 includes a a bunch of

00:29:23,440 --> 00:29:27,919
different stuff for you

00:29:24,880 --> 00:29:28,960
it includes um an auth service it

00:29:27,919 --> 00:29:31,919
includes a

00:29:28,960 --> 00:29:33,200
route guard it includes an interceptor

00:29:31,919 --> 00:29:36,960
um and so these are things that you

00:29:33,200 --> 00:29:39,120
would normally have to write yourself

00:29:36,960 --> 00:29:40,960
before we had this sdk you would create

00:29:39,120 --> 00:29:42,480
your own service class

00:29:40,960 --> 00:29:44,320
and you would write all these methods

00:29:42,480 --> 00:29:45,840
yourself about logging in and logging

00:29:44,320 --> 00:29:47,760
out and handling the token

00:29:45,840 --> 00:29:50,080
and what's awesome is that the new sdk

00:29:47,760 --> 00:29:53,120
actually just does all of this for you

00:29:50,080 --> 00:29:56,799
um so all we need to do is we need to

00:29:53,120 --> 00:30:00,799
import the auth module

00:29:56,799 --> 00:30:05,520
from at auth0

00:30:00,799 --> 00:30:05,520
slash 0-angular

00:30:05,679 --> 00:30:13,520
i don't know why it can't find it

00:30:10,320 --> 00:30:13,840
did i install it did i actually run ng

00:30:13,520 --> 00:30:17,679
ad

00:30:13,840 --> 00:30:18,080
i swear i did maybe my intellisense is

00:30:17,679 --> 00:30:21,520
just

00:30:18,080 --> 00:30:22,080
a little behind the times oh maybe i

00:30:21,520 --> 00:30:24,960
never actually

00:30:22,080 --> 00:30:27,279
ran that i never actually ran it let me

00:30:24,960 --> 00:30:32,880
run ng-add

00:30:27,279 --> 00:30:38,080
angular 0-angular

00:30:32,880 --> 00:30:38,080
i swear i ran 404 not fun

00:30:39,120 --> 00:30:51,840
yeah thanks

00:30:56,080 --> 00:31:00,480
while it's installing there is a

00:30:57,600 --> 00:31:02,320
question from oscar that says

00:31:00,480 --> 00:31:05,200
we should cut out the use of resolve

00:31:02,320 --> 00:31:07,200
json module in the dsconfig.base

00:31:05,200 --> 00:31:08,480
oh yeah i meant to do that i meant to do

00:31:07,200 --> 00:31:12,159
that yeah so

00:31:08,480 --> 00:31:12,799
in this uh in our sample application we

00:31:12,159 --> 00:31:16,559
added

00:31:12,799 --> 00:31:18,960
a config to our ts config

00:31:16,559 --> 00:31:19,919
that allows us to resolve json modules

00:31:18,960 --> 00:31:22,559
thanks i meant to

00:31:19,919 --> 00:31:24,159
i meant to say that so the the reason

00:31:22,559 --> 00:31:27,120
we're able to import

00:31:24,159 --> 00:31:29,200
from this json file is due to this

00:31:27,120 --> 00:31:31,279
setting in typescript for being able to

00:31:29,200 --> 00:31:33,200
resolve json modules

00:31:31,279 --> 00:31:34,640
so if you didn't want to do that or

00:31:33,200 --> 00:31:37,840
couldn't do that for some reason

00:31:34,640 --> 00:31:39,000
you could just add those variables

00:31:37,840 --> 00:31:41,679
directly into

00:31:39,000 --> 00:31:43,919
environment.ts if you wanted to but yeah

00:31:41,679 --> 00:31:47,120
that's a great point

00:31:43,919 --> 00:31:48,799
okay so now i i have that installed so

00:31:47,120 --> 00:31:49,679
i'm just going to import the auth module

00:31:48,799 --> 00:31:52,880
i'm also going to

00:31:49,679 --> 00:31:53,519
import our environment configuration so

00:31:52,880 --> 00:31:55,600
i'm going to

00:31:53,519 --> 00:31:56,799
and just import environment i'm going to

00:31:55,600 --> 00:32:00,000
i'm going to import it as

00:31:56,799 --> 00:32:02,640
end just because environment is

00:32:00,000 --> 00:32:04,799
sort of a reserved word it gets

00:32:02,640 --> 00:32:07,519
confusing

00:32:04,799 --> 00:32:08,480
and so just from dot dot slash

00:32:07,519 --> 00:32:11,760
environments

00:32:08,480 --> 00:32:11,760
slash environment

00:32:11,919 --> 00:32:19,919
and now to actually use the auth module

00:32:15,440 --> 00:32:21,440
we're going to go into our imports

00:32:19,919 --> 00:32:22,960
and underneath oh it doesn't really

00:32:21,440 --> 00:32:24,960
matter where we do it but i'm going to

00:32:22,960 --> 00:32:26,000
do it underneath the font awesome module

00:32:24,960 --> 00:32:29,360
i'm going to import

00:32:26,000 --> 00:32:29,840
auth module and then this similar to

00:32:29,360 --> 00:32:32,880
other

00:32:29,840 --> 00:32:35,679
um libraries we're going to have a

00:32:32,880 --> 00:32:37,120
for root uh function that we need to

00:32:35,679 --> 00:32:38,960
call so this is similar to like

00:32:37,120 --> 00:32:40,840
ngrx where you'd have a for root

00:32:38,960 --> 00:32:42,240
function where you pass in some

00:32:40,840 --> 00:32:44,320
configuration

00:32:42,240 --> 00:32:46,159
so this this method is going to take a

00:32:44,320 --> 00:32:49,279
configuration object

00:32:46,159 --> 00:32:52,559
and all we need to do is spread out

00:32:49,279 --> 00:32:55,600
our our auth

00:32:52,559 --> 00:32:56,000
environment variables so i'm just going

00:32:55,600 --> 00:32:58,240
to do

00:32:56,000 --> 00:33:00,000
the spread operator what's happening

00:32:58,240 --> 00:33:03,600
spread operator and then

00:33:00,000 --> 00:33:03,600
end dot auth

00:33:05,519 --> 00:33:13,360
and so now we have the um

00:33:10,000 --> 00:33:14,880
the all of the auth sdk available to us

00:33:13,360 --> 00:33:16,799
basically

00:33:14,880 --> 00:33:19,200
i'll go ahead and run the application

00:33:16,799 --> 00:33:19,200
again

00:33:20,399 --> 00:33:26,000
and um

00:33:24,480 --> 00:33:28,880
nothing really changes here because

00:33:26,000 --> 00:33:32,159
we're not actually doing anything yet so

00:33:28,880 --> 00:33:34,240
um go ahead and

00:33:32,159 --> 00:33:35,840
just close that and just check in the

00:33:34,240 --> 00:33:38,320
browser just make sure everything is

00:33:35,840 --> 00:33:40,000
still running

00:33:38,320 --> 00:33:42,480
and yeah everything's still running so

00:33:40,000 --> 00:33:46,080
now we can actually get to the fun stuff

00:33:42,480 --> 00:33:47,919
uh we will go ahead and add a login

00:33:46,080 --> 00:33:51,440
button so i'm going to go to

00:33:47,919 --> 00:33:54,720
this is going to be step 3

00:33:51,440 --> 00:33:56,640
of the branches

00:33:54,720 --> 00:33:58,960
is where you can find this the solution

00:33:56,640 --> 00:34:02,960
for this

00:33:58,960 --> 00:34:02,960
so let's go ahead and

00:34:03,919 --> 00:34:07,039
we're actually going to create a login

00:34:05,519 --> 00:34:11,839
component and we've got the

00:34:07,039 --> 00:34:15,760
cli command in here so let's

00:34:11,839 --> 00:34:15,760
create a login component now i've um

00:34:15,919 --> 00:34:20,000
i've actually set up our angular json

00:34:19,679 --> 00:34:23,119
here

00:34:20,000 --> 00:34:26,399
to skip the tests and just do inline

00:34:23,119 --> 00:34:30,240
whoops inline styles um

00:34:26,399 --> 00:34:34,320
so all we need to do is uh

00:34:30,240 --> 00:34:36,159
just run this ng-ad i mean ng generate

00:34:34,320 --> 00:34:37,919
component and then you can do component

00:34:36,159 --> 00:34:40,240
slash login dash

00:34:37,919 --> 00:34:41,440
button and that will go ahead and create

00:34:40,240 --> 00:34:44,079
the component

00:34:41,440 --> 00:34:46,240
and it'll also update the app module for

00:34:44,079 --> 00:34:46,240
us

00:34:47,359 --> 00:34:53,280
so you can see if i go to the app module

00:34:50,720 --> 00:34:55,520
close this you can see now we've got

00:34:53,280 --> 00:34:57,119
this login button component that's been

00:34:55,520 --> 00:34:58,880
added here

00:34:57,119 --> 00:35:01,280
and then in our components we now have a

00:34:58,880 --> 00:35:04,560
login button component

00:35:01,280 --> 00:35:09,440
so let's go ahead and write our actual

00:35:04,560 --> 00:35:10,880
login logic here for the component

00:35:09,440 --> 00:35:13,280
first thing we're going to do is we're

00:35:10,880 --> 00:35:14,160
going to import our auth service so i'm

00:35:13,280 --> 00:35:17,520
going to say

00:35:14,160 --> 00:35:20,800
public let's call it auth auth

00:35:17,520 --> 00:35:23,119
service and it's not

00:35:20,800 --> 00:35:24,800
going to know where this is coming from

00:35:23,119 --> 00:35:26,880
automatically probably

00:35:24,800 --> 00:35:28,839
so we're going to import it from our

00:35:26,880 --> 00:35:32,400
angular sdk so i'm going to say

00:35:28,839 --> 00:35:36,640
import off service

00:35:32,400 --> 00:35:39,359
from man that muscle memory of at

00:35:36,640 --> 00:35:41,520
angular is very strong

00:35:39,359 --> 00:35:42,880
so i've got importing the auth service

00:35:41,520 --> 00:35:46,160
here

00:35:42,880 --> 00:35:49,680
and uh the only thing we need to do

00:35:46,160 --> 00:35:52,720
in here is we need to add our function

00:35:49,680 --> 00:35:53,599
um for logging in so we're gonna create

00:35:52,720 --> 00:35:57,280
a function called

00:35:53,599 --> 00:35:59,920
login with redirect

00:35:57,280 --> 00:36:00,480
and that's just going to return void

00:35:59,920 --> 00:36:02,079
here

00:36:00,480 --> 00:36:04,480
it's not actually going to return

00:36:02,079 --> 00:36:04,480
anything

00:36:08,880 --> 00:36:12,320
and so we're just going to call our auth

00:36:11,119 --> 00:36:14,400
service the auth service

00:36:12,320 --> 00:36:16,079
already has a login with redirect

00:36:14,400 --> 00:36:17,680
function so all we're really doing is

00:36:16,079 --> 00:36:19,440
creating a little pass-through for this

00:36:17,680 --> 00:36:21,040
so we're going to say this dot auth

00:36:19,440 --> 00:36:22,960
and we can say you can you can see we've

00:36:21,040 --> 00:36:24,839
got some typescript hints here

00:36:22,960 --> 00:36:26,160
and we're going to say log in with

00:36:24,839 --> 00:36:28,800
redirect

00:36:26,160 --> 00:36:29,359
and uh and that's it so this is going to

00:36:28,800 --> 00:36:31,119
be the

00:36:29,359 --> 00:36:34,320
the function that we're going to attach

00:36:31,119 --> 00:36:37,200
to our login button

00:36:34,320 --> 00:36:38,000
so let's go ahead and create our login

00:36:37,200 --> 00:36:41,040
button

00:36:38,000 --> 00:36:43,680
man it's already 9 43. that's crazy

00:36:41,040 --> 00:36:46,560
um go ahead and you can get rid of this

00:36:43,680 --> 00:36:49,680
boilerplate here

00:36:46,560 --> 00:36:49,680
and let's just do a

00:36:50,480 --> 00:36:58,960
button with classes of

00:36:55,200 --> 00:36:59,680
uh let's start with button we're using

00:36:58,960 --> 00:37:01,520
bootstrap

00:36:59,680 --> 00:37:03,280
in here so we can add in a bunch of

00:37:01,520 --> 00:37:05,280
classes button

00:37:03,280 --> 00:37:08,400
button primary you can you can style

00:37:05,280 --> 00:37:10,240
this however you want um

00:37:08,400 --> 00:37:11,599
you can copy paste if you feel like it

00:37:10,240 --> 00:37:14,480
we'll just say

00:37:11,599 --> 00:37:15,920
login and then we just need to add a

00:37:14,480 --> 00:37:19,280
click handler to this

00:37:15,920 --> 00:37:21,760
so we'll do the click event

00:37:19,280 --> 00:37:22,640
and we'll call our login with redirect

00:37:21,760 --> 00:37:26,720
function

00:37:22,640 --> 00:37:29,440
here so let's uh let me hide that

00:37:26,720 --> 00:37:31,520
so we've got our button with login with

00:37:29,440 --> 00:37:33,920
redirect

00:37:31,520 --> 00:37:36,079
and then the last thing we need to do is

00:37:33,920 --> 00:37:38,720
we need to add this login button to

00:37:36,079 --> 00:37:40,640
our navigation so if i go over to the

00:37:38,720 --> 00:37:42,240
app

00:37:40,640 --> 00:37:43,760
we don't actually have the button

00:37:42,240 --> 00:37:44,240
showing up anywhere so we just need to

00:37:43,760 --> 00:37:46,480
add it

00:37:44,240 --> 00:37:47,920
up in this corner here so what we're

00:37:46,480 --> 00:37:50,960
going to do is we're going to go over to

00:37:47,920 --> 00:37:53,119
our nav bar component and we'll just go

00:37:50,960 --> 00:37:55,920
over to the html

00:37:53,119 --> 00:37:55,920
for the navbar

00:37:56,880 --> 00:38:03,119
and underneath our main app nav we can

00:37:59,920 --> 00:38:06,160
add our app

00:38:03,119 --> 00:38:06,160
login button

00:38:09,920 --> 00:38:14,480
and hit save there

00:38:12,960 --> 00:38:16,240
so we have the button showing the only

00:38:14,480 --> 00:38:19,200
the only thing though is

00:38:16,240 --> 00:38:21,040
let's if we try to log in you can log in

00:38:19,200 --> 00:38:24,160
the first time you're going to have to

00:38:21,040 --> 00:38:25,920
either sign up or authorize uh

00:38:24,160 --> 00:38:27,680
the application so you'll have to sign

00:38:25,920 --> 00:38:29,440
up with uh i'd suggest using

00:38:27,680 --> 00:38:31,440
just a simple username and password for

00:38:29,440 --> 00:38:33,920
now just to get through the workshop

00:38:31,440 --> 00:38:36,160
you can also set it up to use social

00:38:33,920 --> 00:38:38,480
logins like

00:38:36,160 --> 00:38:40,160
google or facebook or twitch or like

00:38:38,480 --> 00:38:41,280
literally anything you can think of

00:38:40,160 --> 00:38:43,280
for now you just might want to make it

00:38:41,280 --> 00:38:44,320
easier on yourself and do a quick login

00:38:43,280 --> 00:38:47,520
and password

00:38:44,320 --> 00:38:48,880
so i've logged in um but the the button

00:38:47,520 --> 00:38:49,680
is still showing and i can prove that

00:38:48,880 --> 00:38:53,440
i've logged in

00:38:49,680 --> 00:38:55,280
if i go over to our cookies

00:38:53,440 --> 00:38:57,280
and inspect you can see a whole bunch of

00:38:55,280 --> 00:39:00,560
stuff here that's from

00:38:57,280 --> 00:39:03,040
auth0 try to expand that out

00:39:00,560 --> 00:39:04,160
so i've got that um i think there might

00:39:03,040 --> 00:39:07,200
be a little

00:39:04,160 --> 00:39:10,079
just have like a an id in local storage

00:39:07,200 --> 00:39:11,760
um but you can see that i'm we've got an

00:39:10,079 --> 00:39:12,560
is authenticated cookie here and that's

00:39:11,760 --> 00:39:14,880
set to true

00:39:12,560 --> 00:39:16,560
so we know that i'm logged in but the

00:39:14,880 --> 00:39:18,320
login button is still showing

00:39:16,560 --> 00:39:20,000
and so what we can do is actually hide

00:39:18,320 --> 00:39:22,480
the login button if we're

00:39:20,000 --> 00:39:24,240
already authenticated so let's add that

00:39:22,480 --> 00:39:26,800
really quick

00:39:24,240 --> 00:39:28,800
so what we need to do is in our navbar

00:39:26,800 --> 00:39:32,000
component the typescript

00:39:28,800 --> 00:39:34,320
we need to import our auth service

00:39:32,000 --> 00:39:35,760
again because we're going to use another

00:39:34,320 --> 00:39:37,440
prop another

00:39:35,760 --> 00:39:39,119
thing on our auth service so i'm just

00:39:37,440 --> 00:39:42,480
going to say public

00:39:39,119 --> 00:39:44,160
auth auth service i don't know why i'm

00:39:42,480 --> 00:39:45,520
not getting intelligence for that that

00:39:44,160 --> 00:39:49,040
seems weird

00:39:45,520 --> 00:39:53,119
and then i'll import the auth service

00:39:49,040 --> 00:39:53,119
from at zero

00:39:53,359 --> 00:39:56,960
and so basically this is just going to

00:39:54,720 --> 00:39:59,599
make the auth service available to us

00:39:56,960 --> 00:40:02,720
on the navbar component so back in the

00:39:59,599 --> 00:40:05,920
actual html

00:40:02,720 --> 00:40:09,040
i can add an ngif

00:40:05,920 --> 00:40:13,359
so what we can do is do star

00:40:09,040 --> 00:40:16,319
and gf and

00:40:13,359 --> 00:40:17,359
you're going to want a parenthesis first

00:40:16,319 --> 00:40:17,839
so what we're going to say is we're

00:40:17,359 --> 00:40:21,119
going to say

00:40:17,839 --> 00:40:22,480
auth dot is authenticated this is an

00:40:21,119 --> 00:40:25,599
observable

00:40:22,480 --> 00:40:27,839
that the auth service provides uh that

00:40:25,599 --> 00:40:29,680
it exposes to you that will emit true or

00:40:27,839 --> 00:40:30,240
false whether you're logged in so what

00:40:29,680 --> 00:40:33,359
we can

00:40:30,240 --> 00:40:34,240
do is use the async pipe to subscribe to

00:40:33,359 --> 00:40:37,440
this

00:40:34,240 --> 00:40:40,000
and get that value and uh

00:40:37,440 --> 00:40:41,440
use that as a a in a boolean so i can

00:40:40,000 --> 00:40:44,800
say if

00:40:41,440 --> 00:40:47,760
that observable is admitting false

00:40:44,800 --> 00:40:48,079
then display this login button otherwise

00:40:47,760 --> 00:40:50,000
uh

00:40:48,079 --> 00:40:52,560
don't display this login button and in a

00:40:50,000 --> 00:40:53,839
second we'll do the inverse of the log

00:40:52,560 --> 00:40:55,599
out

00:40:53,839 --> 00:40:57,359
so i'm going to go back over here and

00:40:55,599 --> 00:40:59,359
now you can see that the

00:40:57,359 --> 00:41:01,359
that the button has disappeared of

00:40:59,359 --> 00:41:03,200
course now we have no way of logging out

00:41:01,359 --> 00:41:03,920
of the application so let's go ahead and

00:41:03,200 --> 00:41:05,839
add the log

00:41:03,920 --> 00:41:07,760
out button so we're going to move on to

00:41:05,839 --> 00:41:11,040
the next step here

00:41:07,760 --> 00:41:12,560
so go over um this will be the

00:41:11,040 --> 00:41:13,920
log out so we're gonna do something

00:41:12,560 --> 00:41:15,040
really similar basically i'm gonna do

00:41:13,920 --> 00:41:18,839
the same thing

00:41:15,040 --> 00:41:22,319
that we did before and go over to

00:41:18,839 --> 00:41:25,920
um create the log out button

00:41:22,319 --> 00:41:29,280
so open up my terminal

00:41:25,920 --> 00:41:34,880
and do ng generate component

00:41:29,280 --> 00:41:38,640
and then component log out button

00:41:34,880 --> 00:41:41,680
and here whoa

00:41:38,640 --> 00:41:41,680
can add the

00:41:42,000 --> 00:41:48,560
let's open up the log out button

00:41:45,040 --> 00:41:50,720
typescript file let me go over

00:41:48,560 --> 00:41:50,720
to

00:41:54,720 --> 00:42:00,240
okay so similar

00:41:58,000 --> 00:42:01,520
process we're going to add the auth

00:42:00,240 --> 00:42:05,760
service so public

00:42:01,520 --> 00:42:05,760
auth auth service

00:42:08,880 --> 00:42:17,839
and we're going to import auth service

00:42:11,920 --> 00:42:17,839
from pot zero slash angular

00:42:19,440 --> 00:42:23,520
we're also going to um

00:42:24,079 --> 00:42:27,839
we need a reference to our document and

00:42:26,319 --> 00:42:28,720
i'll show you i'll show you this in just

00:42:27,839 --> 00:42:30,560
a second

00:42:28,720 --> 00:42:32,480
first let's let's create the log out

00:42:30,560 --> 00:42:35,200
method which will return

00:42:32,480 --> 00:42:35,520
void and we're just going to call this

00:42:35,200 --> 00:42:38,800
dot

00:42:35,520 --> 00:42:42,800
auth dot log out

00:42:38,800 --> 00:42:44,000
now we need to pass a a destination to

00:42:42,800 --> 00:42:47,280
return to so we need

00:42:44,000 --> 00:42:49,040
a an options object here and we need a

00:42:47,280 --> 00:42:51,280
property called return to but

00:42:49,040 --> 00:42:52,079
where are we going to return to for that

00:42:51,280 --> 00:42:55,599
we're going to

00:42:52,079 --> 00:42:56,560
we're going to use the the actual

00:42:55,599 --> 00:42:59,359
document

00:42:56,560 --> 00:43:01,680
which angular actually has a token for

00:42:59,359 --> 00:43:05,520
this an injection token that we can use

00:43:01,680 --> 00:43:07,200
so we're going to use at inject

00:43:05,520 --> 00:43:08,800
which when we need to import from

00:43:07,200 --> 00:43:10,839
angular

00:43:08,800 --> 00:43:12,160
and we're going to use the document

00:43:10,839 --> 00:43:13,680
token

00:43:12,160 --> 00:43:15,440
and we'll create this as a private

00:43:13,680 --> 00:43:19,920
variable called

00:43:15,440 --> 00:43:22,960
doc which is of the type document

00:43:19,920 --> 00:43:22,960
now if you

00:43:25,359 --> 00:43:30,599
don't want to use this you can uh

00:43:28,400 --> 00:43:32,240
you can use something like

00:43:30,599 --> 00:43:35,119
window.location.org

00:43:32,240 --> 00:43:36,800
um this is just sort of like a really

00:43:35,119 --> 00:43:38,800
kind of like

00:43:36,800 --> 00:43:40,240
bulletproof way of knowing that you're

00:43:38,800 --> 00:43:43,599
always going to get the correct

00:43:40,240 --> 00:43:45,119
location origin for this all right so

00:43:43,599 --> 00:43:47,920
why is it yelling at me

00:43:45,119 --> 00:43:48,800
import document can't find document

00:43:47,920 --> 00:43:51,920
import

00:43:48,800 --> 00:43:54,640
it didn't give me my intellisense

00:43:51,920 --> 00:43:55,280
here we go so we need to import document

00:43:54,640 --> 00:43:58,880
from

00:43:55,280 --> 00:43:58,880
angular common for that

00:43:59,040 --> 00:44:04,000
okay so we've got our logout

00:44:02,319 --> 00:44:05,839
function here let's just create our

00:44:04,000 --> 00:44:08,480
button really quick

00:44:05,839 --> 00:44:10,160
so we'll go over to log out button

00:44:08,480 --> 00:44:11,680
component

00:44:10,160 --> 00:44:13,920
and you know what let's just for the

00:44:11,680 --> 00:44:16,160
sake of time let's copy over

00:44:13,920 --> 00:44:17,280
what we had in our login button just

00:44:16,160 --> 00:44:20,079
because it's going to be

00:44:17,280 --> 00:44:20,880
almost the same so go over to our log

00:44:20,079 --> 00:44:24,720
out button

00:44:20,880 --> 00:44:27,760
paste that in change this to log out

00:44:24,720 --> 00:44:31,280
and change this click method to

00:44:27,760 --> 00:44:33,440
log out cool and then

00:44:31,280 --> 00:44:34,319
we want to do kind of the opposite of

00:44:33,440 --> 00:44:37,520
what we did

00:44:34,319 --> 00:44:40,880
with the navbar instead of having

00:44:37,520 --> 00:44:42,400
the log in the log out button show

00:44:40,880 --> 00:44:43,839
when you're authenticated we want the

00:44:42,400 --> 00:44:45,280
opposite so what we can do is we can

00:44:43,839 --> 00:44:48,640
just

00:44:45,280 --> 00:44:53,280
duplicate this and change

00:44:48,640 --> 00:44:55,040
login to log out and then change this

00:44:53,280 --> 00:44:56,720
to true or actually we don't even need

00:44:55,040 --> 00:44:59,200
that we can just

00:44:56,720 --> 00:44:59,920
uh take that away so now we're only

00:44:59,200 --> 00:45:02,839
going to show

00:44:59,920 --> 00:45:04,240
the log out button if we are

00:45:02,839 --> 00:45:06,640
authenticated

00:45:04,240 --> 00:45:07,280
okay i know i'm moving a little quickly

00:45:06,640 --> 00:45:09,119
this i

00:45:07,280 --> 00:45:10,720
we spent a lot of time in the beginning

00:45:09,119 --> 00:45:13,920
chit chatting so

00:45:10,720 --> 00:45:17,440
uh but we do have all the sample code

00:45:13,920 --> 00:45:17,440
here for you you should be able to just

00:45:17,599 --> 00:45:22,560
step through each of those things so if

00:45:19,920 --> 00:45:24,960
i go back over to the application now

00:45:22,560 --> 00:45:25,920
you can see i've got my logout button

00:45:24,960 --> 00:45:28,319
and if i click

00:45:25,920 --> 00:45:29,520
log out i get sent back to the

00:45:28,319 --> 00:45:32,720
application

00:45:29,520 --> 00:45:35,920
and now i have the login button again so

00:45:32,720 --> 00:45:35,920
i'll log in again

00:45:36,960 --> 00:45:39,920
looks like i've gotta

00:45:43,359 --> 00:45:50,079
log in and now we've got the log

00:45:47,520 --> 00:45:51,920
out there's one little issue that we

00:45:50,079 --> 00:45:54,480
have here if you hit refresh

00:45:51,920 --> 00:45:55,680
on the page notice that there's a little

00:45:54,480 --> 00:45:59,280
bit of a ui

00:45:55,680 --> 00:46:00,560
flash there where it's logged in

00:45:59,280 --> 00:46:02,240
well it doesn't really know whether it's

00:46:00,560 --> 00:46:02,640
logged in or logged out so it doesn't

00:46:02,240 --> 00:46:04,720
show

00:46:02,640 --> 00:46:07,359
either of the buttons we can actually

00:46:04,720 --> 00:46:07,359
fix that

00:46:07,760 --> 00:46:13,119
by adding another check for whether

00:46:10,720 --> 00:46:17,040
we're authenticated so i'm going to go

00:46:13,119 --> 00:46:19,440
over to our

00:46:17,040 --> 00:46:19,440
code

00:46:20,960 --> 00:46:26,240
and this is there's a second commit in

00:46:23,599 --> 00:46:26,240
step four

00:46:26,960 --> 00:46:30,480
called fix ui flashing and that's where

00:46:28,880 --> 00:46:33,839
you can find this code

00:46:30,480 --> 00:46:34,640
so in our uh we what we need to do is we

00:46:33,839 --> 00:46:37,040
need to check

00:46:34,640 --> 00:46:38,560
in the app the actual app component

00:46:37,040 --> 00:46:41,040
whether we're still

00:46:38,560 --> 00:46:43,520
loading the authentication so what we

00:46:41,040 --> 00:46:45,359
can do is we can import the auth service

00:46:43,520 --> 00:46:47,920
into the app component so i'm going to

00:46:45,359 --> 00:46:50,960
create a constructor

00:46:47,920 --> 00:46:54,800
and uh do private auth

00:46:50,960 --> 00:46:56,640
auth service and that's all we need

00:46:54,800 --> 00:46:59,760
i don't know i still understand why

00:46:56,640 --> 00:47:03,599
we're not getting intellisense for that

00:46:59,760 --> 00:47:06,319
service from you might want to

00:47:03,599 --> 00:47:09,040
restart the ts server yeah that might

00:47:06,319 --> 00:47:11,280
that might be the uh

00:47:09,040 --> 00:47:14,160
might be the trick can i there we go

00:47:11,280 --> 00:47:16,560
yeah that's that's a good point

00:47:14,160 --> 00:47:17,520
okay so we've imported that and now we

00:47:16,560 --> 00:47:21,920
can go to

00:47:17,520 --> 00:47:24,960
our um app component html

00:47:21,920 --> 00:47:25,520
and all we're going to do is uh check to

00:47:24,960 --> 00:47:28,960
see

00:47:25,520 --> 00:47:33,119
if we're uh loading

00:47:28,960 --> 00:47:38,160
the authentication uh and if so

00:47:33,119 --> 00:47:39,760
we will display a little loading

00:47:38,160 --> 00:47:42,160
component that we've already provided

00:47:39,760 --> 00:47:43,359
for you and otherwise

00:47:42,160 --> 00:47:46,000
we'll display the rest of the

00:47:43,359 --> 00:47:48,720
application so above

00:47:46,000 --> 00:47:49,440
our app nav bar we're going to create a

00:47:48,720 --> 00:47:50,960
class

00:47:49,440 --> 00:47:52,880
and it's going to have a class of

00:47:50,960 --> 00:47:54,640
container i'm just using emmett here

00:47:52,880 --> 00:47:58,000
because it's a nice way of

00:47:54,640 --> 00:47:58,559
being able to create html it's built

00:47:58,000 --> 00:48:02,000
into

00:47:58,559 --> 00:48:02,559
visual studio code and inside of this

00:48:02,000 --> 00:48:05,359
div

00:48:02,559 --> 00:48:07,040
we're going to use our app loading

00:48:05,359 --> 00:48:09,119
component again this is already

00:48:07,040 --> 00:48:11,680
provided in the app you don't have to do

00:48:09,119 --> 00:48:11,680
it yourself

00:48:12,720 --> 00:48:18,720
and so we're going to do an ng if here

00:48:15,760 --> 00:48:18,720
and there's another

00:48:19,200 --> 00:48:23,200
observable that the sdk provides that's

00:48:21,520 --> 00:48:26,640
called is loading so i can do

00:48:23,200 --> 00:48:28,319
auth dot is loading

00:48:26,640 --> 00:48:31,040
and we'll also need the async pipe for

00:48:28,319 --> 00:48:32,240
that so we're gonna display this if

00:48:31,040 --> 00:48:35,599
that's true

00:48:32,240 --> 00:48:40,160
otherwise we can use the ng if else say

00:48:35,599 --> 00:48:40,160
else and create a variable called loaded

00:48:41,200 --> 00:48:47,280
and now we can use ng template

00:48:44,960 --> 00:48:49,760
to display the rest of our app so

00:48:47,280 --> 00:48:52,400
basically we're going to wrap

00:48:49,760 --> 00:48:53,119
the rest of the application in an ng

00:48:52,400 --> 00:48:54,640
template

00:48:53,119 --> 00:48:57,680
so i'm going to create i'm going to say

00:48:54,640 --> 00:49:00,240
ng template and then i'll move this

00:48:57,680 --> 00:49:00,240
to the bottom

00:49:01,119 --> 00:49:04,480
and we're going to use our template

00:49:03,599 --> 00:49:08,079
variable called

00:49:04,480 --> 00:49:09,520
loaded i don't understand oh i made this

00:49:08,079 --> 00:49:10,480
private by accident this is supposed to

00:49:09,520 --> 00:49:13,680
be public

00:49:10,480 --> 00:49:13,680
for our template variable

00:49:14,160 --> 00:49:18,000
so just to review here what we've done

00:49:16,480 --> 00:49:19,920
is we've created a little

00:49:18,000 --> 00:49:22,240
loading component and we're checking to

00:49:19,920 --> 00:49:24,079
see if our authentication service is

00:49:22,240 --> 00:49:26,400
still loading up all our auth stuff

00:49:24,079 --> 00:49:27,680
basically knows whether we're logged in

00:49:26,400 --> 00:49:31,040
otherwise we're going to

00:49:27,680 --> 00:49:33,680
set this template variable called loaded

00:49:31,040 --> 00:49:34,880
up and it'll have a value of true and so

00:49:33,680 --> 00:49:37,200
when that's true

00:49:34,880 --> 00:49:38,400
we're going to tell angular to display

00:49:37,200 --> 00:49:39,839
this template

00:49:38,400 --> 00:49:42,000
which is going to have the rest of our

00:49:39,839 --> 00:49:44,400
application in it

00:49:42,000 --> 00:49:46,240
so what this means is if i go back to

00:49:44,400 --> 00:49:49,440
the application

00:49:46,240 --> 00:49:50,720
uh and just refresh the page we get this

00:49:49,440 --> 00:49:53,520
nice little loading page

00:49:50,720 --> 00:49:54,880
and we don't get that ui flash as soon

00:49:53,520 --> 00:49:59,280
as the page loads

00:49:54,880 --> 00:49:59,280
we have our login button here

00:49:59,680 --> 00:50:02,720
so we are

00:50:03,359 --> 00:50:06,880
getting close to time i'd be i want to

00:50:06,319 --> 00:50:10,640
know

00:50:06,880 --> 00:50:13,839
um i i have

00:50:10,640 --> 00:50:15,680
time to keep going um so but i want to

00:50:13,839 --> 00:50:18,480
if people i want to be respectful of

00:50:15,680 --> 00:50:20,319
people's time so if you want to

00:50:18,480 --> 00:50:22,880
stop here since we've added login and

00:50:20,319 --> 00:50:24,400
log out i can answer some questions or

00:50:22,880 --> 00:50:25,520
we can just keep going we probably have

00:50:24,400 --> 00:50:28,240
another

00:50:25,520 --> 00:50:29,839
maybe 20 minutes or so but i'm happy i'm

00:50:28,240 --> 00:50:34,240
more than happy to keep going

00:50:29,839 --> 00:50:36,319
um um we can move we can keep going so

00:50:34,240 --> 00:50:37,359
uh we got one vote from johan that says

00:50:36,319 --> 00:50:40,480
keep going so

00:50:37,359 --> 00:50:40,480
i'm just gonna keep going

00:50:42,319 --> 00:50:49,200
let's see oh i closed the chat

00:50:46,720 --> 00:50:50,079
we got we got a few people saying keep

00:50:49,200 --> 00:50:54,079
going okay

00:50:50,079 --> 00:50:57,760
all right awesome all right so i'm going

00:50:54,079 --> 00:51:01,839
i um let's close that again

00:50:57,760 --> 00:51:03,200
all right so now we've got our um

00:51:01,839 --> 00:51:06,720
our app loading so now we're going to

00:51:03,200 --> 00:51:09,839
move this is going to be let me go back

00:51:06,720 --> 00:51:09,839
on my reference

00:51:13,280 --> 00:51:19,040
we are now at here

00:51:16,640 --> 00:51:21,520
step five displaying the profile

00:51:19,040 --> 00:51:24,880
information

00:51:21,520 --> 00:51:26,160
so what we're gonna do the the angular

00:51:24,880 --> 00:51:29,760
sdk

00:51:26,160 --> 00:51:32,880
um basically provides the

00:51:29,760 --> 00:51:37,839
user for you um

00:51:32,880 --> 00:51:37,839
so what we can do is

00:51:39,200 --> 00:51:43,280
we're going to we've already got the

00:51:40,720 --> 00:51:45,839
basics of a profile component

00:51:43,280 --> 00:51:47,680
in in the sample application um just so

00:51:45,839 --> 00:51:50,800
you didn't have to start it from scratch

00:51:47,680 --> 00:51:52,559
but there's some things we can do to

00:51:50,800 --> 00:51:55,359
complete it basically so i'm going to

00:51:52,559 --> 00:51:58,440
close let's just close all this for now

00:51:55,359 --> 00:52:00,079
and i'm going to open up profile

00:51:58,440 --> 00:52:03,200
component.ts

00:52:00,079 --> 00:52:06,240
right now it's just sort of a an empty

00:52:03,200 --> 00:52:06,720
uh thing here so we're gonna do a couple

00:52:06,240 --> 00:52:10,559
things

00:52:06,720 --> 00:52:13,599
first we're going to import our

00:52:10,559 --> 00:52:15,280
auth service again so public auth

00:52:13,599 --> 00:52:17,440
auth service and now we have our

00:52:15,280 --> 00:52:22,079
autocomplete thanks lucho

00:52:17,440 --> 00:52:24,960
um and in our ng on init

00:52:22,079 --> 00:52:24,960
we're going to

00:52:29,119 --> 00:52:32,480
we're going to call another or we're

00:52:30,800 --> 00:52:34,000
going to subscribe to another observable

00:52:32,480 --> 00:52:35,119
that the auth service gives us which is

00:52:34,000 --> 00:52:37,280
the user

00:52:35,119 --> 00:52:38,240
so we have um this dot off and we

00:52:37,280 --> 00:52:40,800
actually just have

00:52:38,240 --> 00:52:42,000
a user dollar sign to signify that it's

00:52:40,800 --> 00:52:44,160
an observable

00:52:42,000 --> 00:52:45,680
so we can actually just subscribe to the

00:52:44,160 --> 00:52:49,760
user and

00:52:45,680 --> 00:52:51,440
behind the scenes will handle everything

00:52:49,760 --> 00:52:53,599
that we need man it's really annoying

00:52:51,440 --> 00:52:58,000
that zoom uses escape to show

00:52:53,599 --> 00:53:00,240
the meeting controls so

00:52:58,000 --> 00:53:01,599
in our subscribe here for our callback

00:53:00,240 --> 00:53:04,240
function we're actually just going to

00:53:01,599 --> 00:53:07,119
get the profile

00:53:04,240 --> 00:53:08,480
and oh we need to set a a variable on

00:53:07,119 --> 00:53:10,720
our class so we're going to we're going

00:53:08,480 --> 00:53:13,280
to um

00:53:10,720 --> 00:53:14,000
above our constructor we'll add a public

00:53:13,280 --> 00:53:17,119
member we'll

00:53:14,000 --> 00:53:19,280
just call this profile json it's going

00:53:17,119 --> 00:53:20,480
to be a string and it's going to default

00:53:19,280 --> 00:53:22,960
to null

00:53:20,480 --> 00:53:25,839
so when we subscribe to this observable

00:53:22,960 --> 00:53:25,839
we're going to

00:53:26,079 --> 00:53:30,640
stringify we're going to say this dot

00:53:28,480 --> 00:53:33,839
profile json

00:53:30,640 --> 00:53:34,480
is equal to this profile that comes back

00:53:33,839 --> 00:53:37,559
will just

00:53:34,480 --> 00:53:39,760
actually be json so we can use

00:53:37,559 --> 00:53:44,000
json.stringify

00:53:39,760 --> 00:53:48,880
pass in the profile and then

00:53:44,000 --> 00:53:48,880
null and 2 which is the

00:53:52,160 --> 00:53:56,000
init value right and the spacing

00:53:54,559 --> 00:53:58,000
something like that i always forget what

00:53:56,000 --> 00:54:02,160
those last couple parameters are

00:53:58,000 --> 00:54:05,760
lucho probably remembers um

00:54:02,160 --> 00:54:07,280
okay and i don't need that semicolon

00:54:05,760 --> 00:54:09,280
so now we're just automatically

00:54:07,280 --> 00:54:11,280
subscribing to the user

00:54:09,280 --> 00:54:12,800
this is actually behind the scenes this

00:54:11,280 --> 00:54:15,359
is the id token

00:54:12,800 --> 00:54:17,119
that that brings back the profile but

00:54:15,359 --> 00:54:18,480
with the angular sdk you don't actually

00:54:17,119 --> 00:54:21,839
really need to worry about that

00:54:18,480 --> 00:54:24,079
it just sort of handles it for you so

00:54:21,839 --> 00:54:24,960
now let's go over to our profile

00:54:24,079 --> 00:54:29,440
component and just

00:54:24,960 --> 00:54:29,440
actually display that

00:54:29,520 --> 00:54:33,359
that's that user profile so i'm going to

00:54:32,720 --> 00:54:36,400
do

00:54:33,359 --> 00:54:41,040
um a series of

00:54:36,400 --> 00:54:44,400
divs uh let's do um

00:54:41,040 --> 00:54:48,240
div div

00:54:44,400 --> 00:54:53,839
div and then an image tag

00:54:48,240 --> 00:54:53,839
that'll get me started

00:54:55,680 --> 00:55:01,200
and uh let's see we're gonna have uh

00:54:58,880 --> 00:55:02,000
we're gonna have a couple rows here

00:55:01,200 --> 00:55:07,599
let's just uh

00:55:02,000 --> 00:55:10,480
start from the top so underneath this uh

00:55:07,599 --> 00:55:12,400
we're just going to say ng if and we're

00:55:10,480 --> 00:55:13,040
going to use our async pipe for the user

00:55:12,400 --> 00:55:17,200
so we'll say

00:55:13,040 --> 00:55:20,640
auth dot user and

00:55:17,200 --> 00:55:21,440
async pipe and we're going to give that

00:55:20,640 --> 00:55:23,680
a

00:55:21,440 --> 00:55:25,680
a variable name as user so we're just

00:55:23,680 --> 00:55:27,040
going to wait until that is available to

00:55:25,680 --> 00:55:28,559
us

00:55:27,040 --> 00:55:30,160
and then let's give this a little bit of

00:55:28,559 --> 00:55:33,280
styling we're going to

00:55:30,160 --> 00:55:36,720
give it a row we're going to say

00:55:33,280 --> 00:55:38,319
align items center and then we actually

00:55:36,720 --> 00:55:40,400
have some built-in classes

00:55:38,319 --> 00:55:43,920
um that that dan made so we're gonna

00:55:40,400 --> 00:55:47,520
give this the profile header class

00:55:43,920 --> 00:55:49,359
and then inside of here let's give this

00:55:47,520 --> 00:55:50,559
some styling as well we're going to give

00:55:49,359 --> 00:55:53,839
it a

00:55:50,559 --> 00:55:57,599
column medium of 2

00:55:53,839 --> 00:56:02,319
and a margin bottom of 3.

00:55:57,599 --> 00:56:03,680
and then for our image our profile image

00:56:02,319 --> 00:56:05,040
we'll do we're going to make this an

00:56:03,680 --> 00:56:06,319
input because we're actually going to

00:56:05,040 --> 00:56:11,200
get this

00:56:06,319 --> 00:56:13,280
from our user so i can say user.picture

00:56:11,200 --> 00:56:15,440
and give it an alt text for

00:56:13,280 --> 00:56:19,040
accessibility users

00:56:15,440 --> 00:56:20,480
profile picture we can also give this a

00:56:19,040 --> 00:56:23,119
little bit of styling so i'm going to

00:56:20,480 --> 00:56:27,200
give this some classes and say

00:56:23,119 --> 00:56:29,920
rounded circle image fluid these are all

00:56:27,200 --> 00:56:31,760
bootstrap if i am not mistaken and then

00:56:29,920 --> 00:56:33,599
profile picture i think is a class that

00:56:31,760 --> 00:56:37,760
dan made

00:56:33,599 --> 00:56:39,359
okay so we've got that section

00:56:37,760 --> 00:56:40,799
we've got our picture let's uh let's

00:56:39,359 --> 00:56:41,440
just pull it up in the browser see if

00:56:40,799 --> 00:56:44,559
we've got

00:56:41,440 --> 00:56:46,720
anything showing if i click on profile

00:56:44,559 --> 00:56:48,880
yes so we've got something there let's

00:56:46,720 --> 00:56:52,079
display the rest of the

00:56:48,880 --> 00:56:53,440
the profile information so uh we'll give

00:56:52,079 --> 00:56:57,440
it we'll make another

00:56:53,440 --> 00:57:01,280
div and this div will have a class

00:56:57,440 --> 00:57:05,040
of column medium

00:57:01,280 --> 00:57:09,520
text center uh wait text center

00:57:05,040 --> 00:57:13,760
and then text medium left

00:57:09,520 --> 00:57:15,760
and we'll do an h2 tag

00:57:13,760 --> 00:57:18,720
and here we'll do the user's name so

00:57:15,760 --> 00:57:18,720
user.name

00:57:18,880 --> 00:57:24,480
and then let's also display their email

00:57:22,240 --> 00:57:28,839
address

00:57:24,480 --> 00:57:34,559
so i'll say uh

00:57:28,839 --> 00:57:34,559
user.email let's see what we've got

00:57:35,119 --> 00:57:41,760
so now we've got that going

00:57:38,160 --> 00:57:43,920
and this is because i'm logged in cool

00:57:41,760 --> 00:57:45,040
and then lastly we can just if we want

00:57:43,920 --> 00:57:49,520
to just display

00:57:45,040 --> 00:57:54,480
the profile json underneath the

00:57:49,520 --> 00:57:56,799
um the rest of this

00:57:54,480 --> 00:57:58,640
just so you can see everything that's in

00:57:56,799 --> 00:58:01,760
that

00:57:58,640 --> 00:58:03,440
let's give this a class of row and let's

00:58:01,760 --> 00:58:06,160
also do an ng if

00:58:03,440 --> 00:58:07,280
for profile json just to make sure we

00:58:06,160 --> 00:58:11,520
have that so it's not

00:58:07,280 --> 00:58:13,920
null so we'll do a pre-tag

00:58:11,520 --> 00:58:14,640
and we can just pass profile json in

00:58:13,920 --> 00:58:15,839
there

00:58:14,640 --> 00:58:18,640
and let's give it a little bit of

00:58:15,839 --> 00:58:22,079
styling we'll do a class

00:58:18,640 --> 00:58:26,559
and we'll say column 12 text

00:58:22,079 --> 00:58:28,559
light bg dark

00:58:26,559 --> 00:58:30,880
dark background and then a padding of

00:58:28,559 --> 00:58:30,880
four

00:58:31,359 --> 00:58:36,480
and again all of this is in the diffs um

00:58:34,559 --> 00:58:38,160
so you should be able to just copy paste

00:58:36,480 --> 00:58:41,200
if you want

00:58:38,160 --> 00:58:43,680
and there you go we've got um

00:58:41,200 --> 00:58:45,200
all of our profile information um this

00:58:43,680 --> 00:58:48,640
is just coming straight from

00:58:45,200 --> 00:58:51,920
auth0 if i were to pull up my profile

00:58:48,640 --> 00:58:54,799
in at zero you would see um

00:58:51,920 --> 00:58:56,559
these similar fields this up up here you

00:58:54,799 --> 00:58:58,400
won't see this this is for another uh

00:58:56,559 --> 00:58:59,680
demo that i was doing uh for a different

00:58:58,400 --> 00:59:01,359
thing so you won't see something like

00:58:59,680 --> 00:59:04,960
that but you will see

00:59:01,359 --> 00:59:06,559
um and you may not have a a an avatar i

00:59:04,960 --> 00:59:07,599
i don't have one so it just gives me

00:59:06,559 --> 00:59:12,640
this like default

00:59:07,599 --> 00:59:14,960
one so that is how we

00:59:12,640 --> 00:59:16,160
show our profile so the big takeaways

00:59:14,960 --> 00:59:20,160
here are just the

00:59:16,160 --> 00:59:23,200
uh user observable is another observable

00:59:20,160 --> 00:59:26,799
that the sdk exposes to you

00:59:23,200 --> 00:59:29,440
okay so now we've got those things going

00:59:26,799 --> 00:59:32,000
now would be nice though if i were to

00:59:29,440 --> 00:59:35,200
log out of the app here

00:59:32,000 --> 00:59:37,280
i can click on the profile um

00:59:35,200 --> 00:59:38,799
nothing shows up but it's one of those

00:59:37,280 --> 00:59:41,599
things where like

00:59:38,799 --> 00:59:43,040
there's no reason for a logged out an

00:59:41,599 --> 00:59:44,960
anonymous person to be able to get to

00:59:43,040 --> 00:59:46,160
this page right

00:59:44,960 --> 00:59:48,480
so what we're going to do is we're

00:59:46,160 --> 00:59:49,440
actually going to prevent people from

00:59:48,480 --> 00:59:52,240
accessing

00:59:49,440 --> 00:59:53,599
the profile page or this external api

00:59:52,240 --> 00:59:55,839
page

00:59:53,599 --> 00:59:56,960
unless they're logged in and this is

00:59:55,839 --> 01:00:00,240
another area

00:59:56,960 --> 01:00:01,599
where the sdk just sort of provides

01:00:00,240 --> 01:00:03,839
everything for you you don't actually

01:00:01,599 --> 01:00:07,359
have to write these guards or anything

01:00:03,839 --> 01:00:10,960
um so let's go ahead and

01:00:07,359 --> 01:00:13,280
uh just add a guard uh

01:00:10,960 --> 01:00:14,799
in angular we call it a can activate

01:00:13,280 --> 01:00:16,720
guard

01:00:14,799 --> 01:00:18,160
to prevent this so i'm going to go over

01:00:16,720 --> 01:00:21,839
to our app

01:00:18,160 --> 01:00:25,040
routing module this is over

01:00:21,839 --> 01:00:27,359
down here towards the the root of the

01:00:25,040 --> 01:00:28,480
app folder here you have app routing

01:00:27,359 --> 01:00:31,119
module i just

01:00:28,480 --> 01:00:32,880
incidentally i just always do command p

01:00:31,119 --> 01:00:36,160
and just start typing the file so

01:00:32,880 --> 01:00:37,920
i hate browsing with uh with the mouse

01:00:36,160 --> 01:00:39,440
so that's why you keep seeing me doing

01:00:37,920 --> 01:00:42,480
that

01:00:39,440 --> 01:00:43,920
so inside of our app routing module we

01:00:42,480 --> 01:00:47,200
just need to import

01:00:43,920 --> 01:00:50,079
our um our guard that the angular sdk

01:00:47,200 --> 01:00:50,960
the auth0 sdk provides us so what we can

01:00:50,079 --> 01:00:55,200
do is say

01:00:50,960 --> 01:00:58,319
import it's called auth guard

01:00:55,200 --> 01:01:01,280
from auth zero slash

01:00:58,319 --> 01:01:01,280
hot zero angular

01:01:02,319 --> 01:01:08,160
fun fact i wrote this guard uh

01:01:05,440 --> 01:01:10,640
it was my contribution to the sdk so if

01:01:08,160 --> 01:01:13,359
there's a problem with it

01:01:10,640 --> 01:01:15,760
i guess you can blame me so for both the

01:01:13,359 --> 01:01:17,920
profile component and the external api

01:01:15,760 --> 01:01:20,559
component if you want to use

01:01:17,920 --> 01:01:21,359
multiple cursors you can just command

01:01:20,559 --> 01:01:24,559
click

01:01:21,359 --> 01:01:25,119
onto both of those lines and we're going

01:01:24,559 --> 01:01:28,319
to add

01:01:25,119 --> 01:01:29,440
can activate can activate basically

01:01:28,319 --> 01:01:32,880
tells angular

01:01:29,440 --> 01:01:36,319
whether or not a route can be

01:01:32,880 --> 01:01:40,960
navigated to act or or activated

01:01:36,319 --> 01:01:42,720
and it takes an array of um route guards

01:01:40,960 --> 01:01:44,160
so for both of these we're gonna add the

01:01:42,720 --> 01:01:47,359
auth guard

01:01:44,160 --> 01:01:50,480
from the angular sdk

01:01:47,359 --> 01:01:53,440
and uh like magic

01:01:50,480 --> 01:01:54,240
if i go back over to the application you

01:01:53,440 --> 01:01:58,000
can see that

01:01:54,240 --> 01:01:59,760
i it's already sent me over to um

01:01:58,000 --> 01:02:01,839
the login and that's because i was

01:01:59,760 --> 01:02:05,200
already on

01:02:01,839 --> 01:02:07,200
that page so if i go back to our sample

01:02:05,200 --> 01:02:08,799
here well let's actually go back to

01:02:07,200 --> 01:02:11,119
localhost 4200.

01:02:08,799 --> 01:02:12,799
so i'm logged out and if i try to click

01:02:11,119 --> 01:02:14,640
on profile

01:02:12,799 --> 01:02:15,920
it's just going to send me to the login

01:02:14,640 --> 01:02:17,839
form

01:02:15,920 --> 01:02:19,280
now there are other ways you can

01:02:17,839 --> 01:02:20,000
configure this if you want to but for

01:02:19,280 --> 01:02:24,400
now let's leave

01:02:20,000 --> 01:02:26,559
it as the default and we can click login

01:02:24,400 --> 01:02:28,319
and now i'm able to see the profile page

01:02:26,559 --> 01:02:30,079
i can navigate i can also navigate to

01:02:28,319 --> 01:02:33,039
the external api page

01:02:30,079 --> 01:02:34,000
if i were to log out and try to go to

01:02:33,039 --> 01:02:35,440
the external api

01:02:34,000 --> 01:02:37,039
page it would do the same thing and

01:02:35,440 --> 01:02:40,400
redirect me over

01:02:37,039 --> 01:02:41,760
um to the login

01:02:40,400 --> 01:02:43,599
and just like that like you didn't have

01:02:41,760 --> 01:02:46,960
to write your own route guard

01:02:43,599 --> 01:02:50,000
this blows my mind um

01:02:46,960 --> 01:02:51,119
we've come a long way so uh so that is

01:02:50,000 --> 01:02:53,680
step six

01:02:51,119 --> 01:02:55,359
in the branches there's a step six for

01:02:53,680 --> 01:02:56,000
the route guard and now we're gonna move

01:02:55,359 --> 01:03:00,480
to

01:02:56,000 --> 01:03:02,640
um step seven of configuring the api

01:03:00,480 --> 01:03:03,920
so what we want is we want to be able to

01:03:02,640 --> 01:03:06,480
call this

01:03:03,920 --> 01:03:07,839
get public message and get private or

01:03:06,480 --> 01:03:11,039
protected message

01:03:07,839 --> 01:03:14,799
so to do that um we just need to do

01:03:11,039 --> 01:03:14,799
a couple of things um

01:03:14,960 --> 01:03:21,760
and let's see here let's go

01:03:18,400 --> 01:03:21,760
actually let's go to the slides

01:03:23,119 --> 01:03:29,359
so we already have the api

01:03:26,240 --> 01:03:29,760
actually provided for you but we need to

01:03:29,359 --> 01:03:32,960
do

01:03:29,760 --> 01:03:34,720
a similar process to what we did

01:03:32,960 --> 01:03:36,559
with the angular application where we

01:03:34,720 --> 01:03:39,200
actually tell off xero

01:03:36,559 --> 01:03:40,160
about the api and then configure

01:03:39,200 --> 01:03:43,359
everything

01:03:40,160 --> 01:03:47,039
so if i go over to the code and

01:03:43,359 --> 01:03:48,480
i can show you the the little server is

01:03:47,039 --> 01:03:51,440
just in this api

01:03:48,480 --> 01:03:52,240
server file and it's going to pull in

01:03:51,440 --> 01:03:56,640
some of our

01:03:52,240 --> 01:03:59,359
auth configuration and then it just has

01:03:56,640 --> 01:04:01,520
a public endpoint and then this private

01:03:59,359 --> 01:04:03,680
endpoint is going to look for the token

01:04:01,520 --> 01:04:05,119
that we're going to send from the client

01:04:03,680 --> 01:04:05,920
and it's going to check to see if we

01:04:05,119 --> 01:04:08,960
have a token

01:04:05,920 --> 01:04:10,880
if not it's going to prevent us from

01:04:08,960 --> 01:04:12,640
accessing this endpoint

01:04:10,880 --> 01:04:14,160
so that's what we need to do so we need

01:04:12,640 --> 01:04:17,680
to we need to set up

01:04:14,160 --> 01:04:19,920
um an api in auth0

01:04:17,680 --> 01:04:21,039
and configure it so we're going to go

01:04:19,920 --> 01:04:23,760
back over to

01:04:21,039 --> 01:04:23,760
auth0

01:04:25,599 --> 01:04:28,640
it look it looks like there's some

01:04:27,440 --> 01:04:31,520
questions is there anything

01:04:28,640 --> 01:04:32,640
lucha and anna that we need to address

01:04:31,520 --> 01:04:35,119
before we

01:04:32,640 --> 01:04:35,119
move on

01:04:37,119 --> 01:04:41,039
i'm wondering if we should answer

01:04:39,440 --> 01:04:44,319
because someone asked if we can

01:04:41,039 --> 01:04:48,160
do the q a first and then finish

01:04:44,319 --> 01:04:52,000
um yeah we can do that um

01:04:48,160 --> 01:04:54,559
since we're running over we could uh

01:04:52,000 --> 01:04:55,119
this is probably like a good stopping

01:04:54,559 --> 01:04:59,599
point

01:04:55,119 --> 01:05:03,520
um we could do the q a and then uh

01:04:59,599 --> 01:05:06,799
um if people want to stay on and finish

01:05:03,520 --> 01:05:10,160
we can yeah that

01:05:06,799 --> 01:05:13,039
that might be the best way to go with it

01:05:10,160 --> 01:05:15,520
okay i'm gonna go ahead and stop sharing

01:05:13,039 --> 01:05:19,839
my screen then

01:05:15,520 --> 01:05:23,039
so we can all answer the question

01:05:19,839 --> 01:05:37,839
um all right did you

01:05:23,039 --> 01:05:37,839
let's see

01:05:38,319 --> 01:05:45,280
let's work our way through

01:05:41,520 --> 01:05:47,440
um we still have

01:05:45,280 --> 01:05:49,599
do you want me to read any questions

01:05:47,440 --> 01:05:51,520
yeah sure well you could um

01:05:49,599 --> 01:05:52,799
okay some of the questions and go

01:05:51,520 --> 01:05:55,359
through them

01:05:52,799 --> 01:05:57,599
so um one of the questions that oscar

01:05:55,359 --> 01:06:02,240
had was

01:05:57,599 --> 01:06:07,440
how to set the environments in the

01:06:02,240 --> 01:06:07,440
in no sorry oscar now cereal i think

01:06:07,760 --> 01:06:12,400
i knew i checked that question

01:06:16,480 --> 01:06:19,680
yeah there was a question about the

01:06:18,079 --> 01:06:20,720
production environments what's the best

01:06:19,680 --> 01:06:22,480
way to set the

01:06:20,720 --> 01:06:24,000
environment variables in a production

01:06:22,480 --> 01:06:26,079
environment when you are using a

01:06:24,000 --> 01:06:27,839
angular application you mentioned that

01:06:26,079 --> 01:06:30,559
we were using the json

01:06:27,839 --> 01:06:32,000
uh file in this case but you can also

01:06:30,559 --> 01:06:34,240
use the environment files

01:06:32,000 --> 01:06:36,000
as the angular documentation describes i

01:06:34,240 --> 01:06:39,680
think i answer a question that is

01:06:36,000 --> 01:06:39,680
similar to that um

01:06:39,920 --> 01:06:43,200
so you oh yeah

01:06:44,160 --> 01:06:47,280
you might want to check if that's that's

01:06:46,160 --> 01:06:49,920
enough

01:06:47,280 --> 01:06:50,640
yeah you don't have to do the json file

01:06:49,920 --> 01:06:55,599
you can

01:06:50,640 --> 01:06:58,079
um create uh you can just put the

01:06:55,599 --> 01:07:00,000
config values directly into the

01:06:58,079 --> 01:07:01,920
environment file in angular

01:07:00,000 --> 01:07:04,680
and then put different ones in for

01:07:01,920 --> 01:07:06,480
different environments so you could have

01:07:04,680 --> 01:07:07,280
environment.staging.ts for example and

01:07:06,480 --> 01:07:09,440
put in

01:07:07,280 --> 01:07:11,440
the configuration generally you'll have

01:07:09,440 --> 01:07:14,240
like a not 0

01:07:11,440 --> 01:07:15,280
tenant for each environment and so

01:07:14,240 --> 01:07:18,559
you'll have different

01:07:15,280 --> 01:07:22,160
like client id um for each

01:07:18,559 --> 01:07:24,480
environment yeah and also

01:07:22,160 --> 01:07:25,680
note that the domain and client id are

01:07:24,480 --> 01:07:28,079
public values

01:07:25,680 --> 01:07:28,720
so there is no need to hide them you

01:07:28,079 --> 01:07:32,640
know

01:07:28,720 --> 01:07:34,720
um in the end regular web apps uh

01:07:32,640 --> 01:07:36,480
single page applications are they called

01:07:34,720 --> 01:07:38,720
is there and it can be

01:07:36,480 --> 01:07:39,839
uh seen if you make a request to zero

01:07:38,720 --> 01:07:41,039
you will see that the client id and

01:07:39,839 --> 01:07:43,920
domain will be sent

01:07:41,039 --> 01:07:44,319
that request so there is no need to hide

01:07:43,920 --> 01:07:45,760
any

01:07:44,319 --> 01:07:48,079
there is no sensitive information to

01:07:45,760 --> 01:07:48,480
having in those values i understand that

01:07:48,079 --> 01:07:51,520
when you

01:07:48,480 --> 01:07:53,359
when you are doing um production bills

01:07:51,520 --> 01:07:55,359
and development wheels you are going to

01:07:53,359 --> 01:07:58,640
probably use different values

01:07:55,359 --> 01:08:00,240
for testing purposes but there is no

01:07:58,640 --> 01:08:02,000
need to hide

01:08:00,240 --> 01:08:03,359
hopefully that answers the other

01:08:02,000 --> 01:08:07,359
question on scar

01:08:03,359 --> 01:08:09,520
that also answers um soon to carr's

01:08:07,359 --> 01:08:11,280
question as well about production

01:08:09,520 --> 01:08:12,640
credentials so i'll go ahead and mark

01:08:11,280 --> 01:08:16,239
that

01:08:12,640 --> 01:08:18,400
uh cyril had asked about deployed to web

01:08:16,239 --> 01:08:20,480
and native do you want to answer that

01:08:18,400 --> 01:08:23,520
lucho

01:08:20,480 --> 01:08:26,640
so i i think the question came out when

01:08:23,520 --> 01:08:26,880
came up when you were showing how to set

01:08:26,640 --> 01:08:29,120
up

01:08:26,880 --> 01:08:30,560
a new auxiliary application and get the

01:08:29,120 --> 01:08:32,319
client at the end domain

01:08:30,560 --> 01:08:34,000
and you show how to set up a single page

01:08:32,319 --> 01:08:37,600
application i guess

01:08:34,000 --> 01:08:40,000
his question is how

01:08:37,600 --> 01:08:40,880
will you how will you go if you want to

01:08:40,000 --> 01:08:43,600
also have a

01:08:40,880 --> 01:08:44,239
mobile application in this case uh in

01:08:43,600 --> 01:08:46,480
the case of

01:08:44,239 --> 01:08:48,400
of our serial you probably need to have

01:08:46,480 --> 01:08:50,000
two separate applications one for the

01:08:48,400 --> 01:08:51,759
mobile application

01:08:50,000 --> 01:08:53,679
and one for the single page application

01:08:51,759 --> 01:08:54,640
each of them configured with the right

01:08:53,679 --> 01:08:56,799
application type

01:08:54,640 --> 01:08:58,960
in the serial dashboard that will also

01:08:56,799 --> 01:09:02,239
help you to configure the things

01:08:58,960 --> 01:09:05,759
correctly and um don't make um

01:09:02,239 --> 01:09:07,120
don't use the wrong authentication flows

01:09:05,759 --> 01:09:08,960
um

01:09:07,120 --> 01:09:10,239
so it's it's going to enforce you in a

01:09:08,960 --> 01:09:13,920
way to do

01:09:10,239 --> 01:09:17,600
like the best practice for that scenario

01:09:13,920 --> 01:09:19,679
um yeah and

01:09:17,600 --> 01:09:21,359
and internally if in the end what you

01:09:19,679 --> 01:09:22,640
what you need is sharing the user

01:09:21,359 --> 01:09:24,159
database

01:09:22,640 --> 01:09:26,319
you can do that using the same

01:09:24,159 --> 01:09:26,799
connection for example connections are

01:09:26,319 --> 01:09:32,319
shared

01:09:26,799 --> 01:09:35,520
across applications so that's another

01:09:32,319 --> 01:09:39,120
another way to do that um

01:09:35,520 --> 01:09:42,239
another question from serial is

01:09:39,120 --> 01:09:42,960
that previously the angular sdk didn't

01:09:42,239 --> 01:09:46,080
have much

01:09:42,960 --> 01:09:49,520
maintenance yes that's true

01:09:46,080 --> 01:09:50,159
um for this one he is concerned about

01:09:49,520 --> 01:09:53,440
the

01:09:50,159 --> 01:09:56,239
use of the um sorry

01:09:53,440 --> 01:09:56,719
of whether on whether we will maintain

01:09:56,239 --> 01:10:00,080
this

01:09:56,719 --> 01:10:03,520
and keep keep it maintained for our

01:10:00,080 --> 01:10:04,800
rc releases of the of the new versions

01:10:03,520 --> 01:10:07,199
of angular

01:10:04,800 --> 01:10:08,880
i i don't know if we are going to test

01:10:07,199 --> 01:10:10,480
this for rc

01:10:08,880 --> 01:10:12,480
the idea when when everything came up

01:10:10,480 --> 01:10:14,880
the idea was to make an sdk that was

01:10:12,480 --> 01:10:16,960
using or targeting the angular version

01:10:14,880 --> 01:10:19,040
that most of the people discussing today

01:10:16,960 --> 01:10:20,000
in the community we targeted one of the

01:10:19,040 --> 01:10:23,280
latest ones

01:10:20,000 --> 01:10:25,199
and the idea is to of course keep it up

01:10:23,280 --> 01:10:27,760
to date as much as possible

01:10:25,199 --> 01:10:28,960
we have a product team that is always

01:10:27,760 --> 01:10:32,320
keeping an eye

01:10:28,960 --> 01:10:34,159
on on new releases uh in everything

01:10:32,320 --> 01:10:35,679
related to technology and also the team

01:10:34,159 --> 01:10:40,480
is also aware so

01:10:35,679 --> 01:10:42,320
um we we will be um

01:10:40,480 --> 01:10:43,760
paying attention to those kind of

01:10:42,320 --> 01:10:46,080
releases and

01:10:43,760 --> 01:10:47,280
ideally we'll be maintaining those

01:10:46,080 --> 01:10:49,920
that's the goal

01:10:47,280 --> 01:10:53,040
yes yeah the new angular this this

01:10:49,920 --> 01:10:55,920
angular sdk is like part of the core

01:10:53,040 --> 01:10:57,280
of the sdks along with the react sdk and

01:10:55,920 --> 01:11:00,480
and some others

01:10:57,280 --> 01:11:03,520
so i think the target is to maintain for

01:11:00,480 --> 01:11:08,560
all major releases

01:11:03,520 --> 01:11:11,360
um cool

01:11:08,560 --> 01:11:13,040
um oh so david asked about having a

01:11:11,360 --> 01:11:15,520
custom interface for

01:11:13,040 --> 01:11:17,440
login uh yes this is actually i'm

01:11:15,520 --> 01:11:18,719
actually i'll share my screen again this

01:11:17,440 --> 01:11:21,840
is actually

01:11:18,719 --> 01:11:25,040
done through the auth0 um

01:11:21,840 --> 01:11:25,040
like i can okay

01:11:25,360 --> 01:11:29,040
oh you ready you already had it ready

01:11:27,360 --> 01:11:31,600
yeah don't worry oh okay

01:11:29,040 --> 01:11:33,440
so if you click on this universal login

01:11:31,600 --> 01:11:35,840
um

01:11:33,440 --> 01:11:37,040
section over here you can actually

01:11:35,840 --> 01:11:39,760
customize

01:11:37,040 --> 01:11:40,719
your uh login to be whatever you want

01:11:39,760 --> 01:11:44,080
you can add a

01:11:40,719 --> 01:11:47,040
company logo you can change the colors

01:11:44,080 --> 01:11:48,960
we also have a new more lightweight

01:11:47,040 --> 01:11:52,320
login page you can experiment

01:11:48,960 --> 01:11:54,080
with you can learn about the details

01:11:52,320 --> 01:11:55,840
it's fine if you use the default classic

01:11:54,080 --> 01:11:58,880
one you can also use the new one

01:11:55,840 --> 01:12:00,880
and there's some um some differences

01:11:58,880 --> 01:12:03,120
between the two but for customizing

01:12:00,880 --> 01:12:05,520
uh you just add add things here and hit

01:12:03,120 --> 01:12:08,960
save and then it'll just automatically

01:12:05,520 --> 01:12:13,120
show up so like if i change this to

01:12:08,960 --> 01:12:13,120
uh let me get uh

01:12:13,199 --> 01:12:23,120
let's change this to purple

01:12:16,640 --> 01:12:25,360
and hit save and then log out

01:12:23,120 --> 01:12:26,159
uh you can see that now my login button

01:12:25,360 --> 01:12:27,840
is purple

01:12:26,159 --> 01:12:29,280
and if i wanted to change the logo i

01:12:27,840 --> 01:12:31,760
could

01:12:29,280 --> 01:12:34,159
so that's how you customize the login

01:12:31,760 --> 01:12:34,159
screen

01:12:35,600 --> 01:12:39,840
here's a question from frederic asking

01:12:38,239 --> 01:12:42,880
if this is open source

01:12:39,840 --> 01:12:45,679
yes the repo is is there it's obsidio

01:12:42,880 --> 01:12:48,719
angular uh i'll see wrangler right or

01:12:45,679 --> 01:12:48,719
angular i'm lost

01:12:48,840 --> 01:12:54,719
uh

01:12:51,440 --> 01:12:56,320
so yeah feel free to go and check for

01:12:54,719 --> 01:12:59,520
issues or

01:12:56,320 --> 01:12:59,520
open input requests

01:13:02,840 --> 01:13:05,840
um

01:13:09,040 --> 01:13:12,400
uh dan had said looks like your login

01:13:11,760 --> 01:13:14,560
toast and

01:13:12,400 --> 01:13:15,840
token is resisting across page

01:13:14,560 --> 01:13:21,199
refreshments

01:13:15,840 --> 01:13:25,199
and yours is not um dan did you use

01:13:21,199 --> 01:13:26,800
uh login did you use login and password

01:13:25,199 --> 01:13:27,520
or did you use like a social oh he's

01:13:26,800 --> 01:13:30,880
using google

01:13:27,520 --> 01:13:32,640
so there's a thing with um google

01:13:30,880 --> 01:13:33,600
authentication i don't know if one of

01:13:32,640 --> 01:13:36,960
you have the doc

01:13:33,600 --> 01:13:38,080
handy but uh for google authentication

01:13:36,960 --> 01:13:41,840
you need to create

01:13:38,080 --> 01:13:44,320
um some cr uh some credentials

01:13:41,840 --> 01:13:45,120
uh what's it called a key like so we

01:13:44,320 --> 01:13:48,640
provide

01:13:45,120 --> 01:13:50,800
dev keys for google single sign-on

01:13:48,640 --> 01:13:52,320
um google authentication and that works

01:13:50,800 --> 01:13:53,600
for logging in and logging out but to

01:13:52,320 --> 01:13:56,080
actually use the

01:13:53,600 --> 01:13:57,760
silent authentication the refresh you

01:13:56,080 --> 01:14:00,320
need to actually create your own set

01:13:57,760 --> 01:14:01,760
of keys there's some instructions if i

01:14:00,320 --> 01:14:04,880
can

01:14:01,760 --> 01:14:09,400
find them it should be

01:14:04,880 --> 01:14:15,840
under um if we go to

01:14:09,400 --> 01:14:18,320
connections social let me find it

01:14:15,840 --> 01:14:19,440
yes so let me let me share my screen

01:14:18,320 --> 01:14:22,960
again

01:14:19,440 --> 01:14:22,960
so i can just show this really quick

01:14:26,719 --> 01:14:30,320
so if you go over here to connections

01:14:29,520 --> 01:14:33,440
and then

01:14:30,320 --> 01:14:34,320
social and then click you see how it has

01:14:33,440 --> 01:14:37,120
this

01:14:34,320 --> 01:14:37,679
this little warning sign if i click on

01:14:37,120 --> 01:14:39,679
that you

01:14:37,679 --> 01:14:43,360
see this warning here that says that

01:14:39,679 --> 01:14:46,080
it's using auth0 development keys

01:14:43,360 --> 01:14:46,880
that's why it's not able to do the

01:14:46,080 --> 01:14:48,560
refresh

01:14:46,880 --> 01:14:50,000
so what you need to do is if you click

01:14:48,560 --> 01:14:53,679
on this link

01:14:50,000 --> 01:14:53,679
it'll it'll walk you through

01:14:53,760 --> 01:14:58,080
how you can create your own uh keys and

01:14:57,120 --> 01:14:59,679
things like that

01:14:58,080 --> 01:15:00,960
that's why i kind of briefly mentioned

01:14:59,679 --> 01:15:02,480
you might just want to do like a quick

01:15:00,960 --> 01:15:05,120
login and password

01:15:02,480 --> 01:15:10,000
and set this up but that's that's what's

01:15:05,120 --> 01:15:13,199
going on there

01:15:10,000 --> 01:15:13,199
work that it's done

01:15:15,360 --> 01:15:27,840
let's see um

01:15:25,440 --> 01:15:29,360
can browser extensions somehow block the

01:15:27,840 --> 01:15:32,719
auth0js module

01:15:29,360 --> 01:15:34,239
i've never experienced that i suppose

01:15:32,719 --> 01:15:36,320
it'd be possible if you had something

01:15:34,239 --> 01:15:39,600
like

01:15:36,320 --> 01:15:43,360
privacy badger or something

01:15:39,600 --> 01:15:47,199
or a script blocking but i've never

01:15:43,360 --> 01:15:50,400
i've never had that problem with auth0

01:15:47,199 --> 01:15:50,719
um but i'd be definitely curious to know

01:15:50,400 --> 01:15:52,400
if

01:15:50,719 --> 01:15:54,880
that's possible and it looks like you

01:15:52,400 --> 01:15:58,560
had a thing with it refusing to load the

01:15:54,880 --> 01:16:01,600
image i don't know what that's

01:15:58,560 --> 01:16:05,440
from that seems like something with your

01:16:01,600 --> 01:16:07,760
environment maybe because i don't have

01:16:05,440 --> 01:16:08,560
any sort of like there's nothing special

01:16:07,760 --> 01:16:10,480
about that

01:16:08,560 --> 01:16:11,600
favicon or anything like that so there

01:16:10,480 --> 01:16:14,239
might be a

01:16:11,600 --> 01:16:16,400
i don't know what kaspersky labs is that

01:16:14,239 --> 01:16:21,280
might be something

01:16:16,400 --> 01:16:23,040
related um

01:16:21,280 --> 01:16:25,040
looks like that might be like a cyber

01:16:23,040 --> 01:16:29,440
security thing or something

01:16:25,040 --> 01:16:31,840
like a browser thing um

01:16:29,440 --> 01:16:35,040
how would you link this up to a dot net

01:16:31,840 --> 01:16:39,440
back end with identity for example

01:16:35,040 --> 01:16:42,560
um so you would oh go ahead anna no

01:16:39,440 --> 01:16:44,159
i was gonna post the blog post here that

01:16:42,560 --> 01:16:47,360
we have on angular

01:16:44,159 --> 01:16:51,280
and uh.net oh perfect

01:16:47,360 --> 01:16:53,679
yeah great you can toss that into the

01:16:51,280 --> 01:16:53,679
chat

01:16:54,800 --> 01:17:01,440
um we also have a net sdk

01:16:58,239 --> 01:17:04,960
so yeah i'm gonna

01:17:01,440 --> 01:17:04,960
throw that in there for you too

01:17:08,480 --> 01:17:15,120
um adi our good friend

01:17:12,000 --> 01:17:17,840
says uh role-based access

01:17:15,120 --> 01:17:19,679
to pages um so that's definitely beyond

01:17:17,840 --> 01:17:22,640
the scope of this little workshop but we

01:17:19,679 --> 01:17:26,719
do have a number of resources on

01:17:22,640 --> 01:17:28,800
um role-based access control let me

01:17:26,719 --> 01:17:30,640
toss in like sort of the starting point

01:17:28,800 --> 01:17:33,280
for the

01:17:30,640 --> 01:17:35,120
in the docs on that essentially you set

01:17:33,280 --> 01:17:38,159
up all the roles and permissions

01:17:35,120 --> 01:17:38,960
in auth0 and add them to the token and

01:17:38,159 --> 01:17:41,600
then you can

01:17:38,960 --> 01:17:43,600
pull those off of the token in the app

01:17:41,600 --> 01:17:44,719
and check to see

01:17:43,600 --> 01:17:47,040
and generally what you'll do is you'll

01:17:44,719 --> 01:17:49,920
have like each role be a collection

01:17:47,040 --> 01:17:50,960
of permissions and that way you can get

01:17:49,920 --> 01:17:55,199
really granular

01:17:50,960 --> 01:17:56,719
on um what you want each role to do

01:17:55,199 --> 01:17:59,040
and then you can check that in the

01:17:56,719 --> 01:18:02,400
either the front end or the back end

01:17:59,040 --> 01:18:03,440
um yeah we should we can do a follow-up

01:18:02,400 --> 01:18:04,719
we should probably do a follow-up

01:18:03,440 --> 01:18:06,480
workshop someday on

01:18:04,719 --> 01:18:10,159
roles and permissions and stuff like

01:18:06,480 --> 01:18:10,159
that yeah

01:18:10,840 --> 01:18:15,600
um karuna asks about detecting anomalies

01:18:14,080 --> 01:18:18,640
so this is actually another

01:18:15,600 --> 01:18:21,520
feature that we have i believe it's part

01:18:18,640 --> 01:18:21,520
of the

01:18:21,760 --> 01:18:26,320
which plan is that part of this is a

01:18:23,520 --> 01:18:26,320
paid feature

01:18:30,320 --> 01:18:33,360
i think anomaly protection actually

01:18:32,000 --> 01:18:38,159
doesn't come into play

01:18:33,360 --> 01:18:38,159
until like more of an enterprise

01:18:38,480 --> 01:18:45,440
let me put i'll post the uh

01:18:41,920 --> 01:18:49,360
just like the doc on that

01:18:45,440 --> 01:18:53,040
um we do have a very sophisticated

01:18:49,360 --> 01:18:56,239
anomaly detection um

01:18:53,040 --> 01:18:57,199
feature um detects breach passwords also

01:18:56,239 --> 01:19:00,800
detects like

01:18:57,199 --> 01:19:04,640
brute force attacks things like that um

01:19:00,800 --> 01:19:09,360
and those are paid features

01:19:04,640 --> 01:19:13,199
um we also have ulcera signals

01:19:09,360 --> 01:19:16,719
um ip risk

01:19:13,199 --> 01:19:18,880
yeah i'm not sure

01:19:16,719 --> 01:19:23,840
i'm not actually not sure if we're still

01:19:18,880 --> 01:19:23,840
doing that

01:19:26,080 --> 01:19:29,280
cool and then just oscar had a couple

01:19:28,159 --> 01:19:32,800
more things about

01:19:29,280 --> 01:19:36,560
got enven production um

01:19:32,800 --> 01:19:38,400
most the rest of that is gonna depend on

01:19:36,560 --> 01:19:40,960
your

01:19:38,400 --> 01:19:42,880
ci cd you know your continuous

01:19:40,960 --> 01:19:44,719
deployment and continuous integration

01:19:42,880 --> 01:19:47,199
there's nothing special necessarily

01:19:44,719 --> 01:19:49,280
about auth zeros configuration so

01:19:47,199 --> 01:19:51,600
whatever situation you're setting up

01:19:49,280 --> 01:19:53,679
with angular and your

01:19:51,600 --> 01:19:55,040
environment variables in your build

01:19:53,679 --> 01:19:58,960
process

01:19:55,040 --> 01:20:02,840
you should be able to inject

01:19:58,960 --> 01:20:05,360
into your front end so

01:20:02,840 --> 01:20:06,719
um

01:20:05,360 --> 01:20:08,000
yeah i mean i don't know if there's

01:20:06,719 --> 01:20:09,920
there's nothing really specific from the

01:20:08,000 --> 01:20:18,080
aux 0 standpoint about

01:20:09,920 --> 01:20:20,800
about doing that um

01:20:18,080 --> 01:20:22,000
uh yeah sorry can't be more hopeful it's

01:20:20,800 --> 01:20:23,920
just sort of like

01:20:22,000 --> 01:20:26,000
there's a lot of variables there on like

01:20:23,920 --> 01:20:27,360
the rest of your staging environment in

01:20:26,000 --> 01:20:29,679
your build environment and all that

01:20:27,360 --> 01:20:29,679
stuff

01:20:30,400 --> 01:20:35,199
um okay so we're at we're at 10 30. um

01:20:33,840 --> 01:20:36,880
obviously if you need to take off you

01:20:35,199 --> 01:20:39,840
can if you'd like

01:20:36,880 --> 01:20:40,960
we can continue and finish up because

01:20:39,840 --> 01:20:42,560
you're gonna have access to this

01:20:40,960 --> 01:20:46,639
recording we may as well

01:20:42,560 --> 01:20:48,639
just keep going um yeah i'm just gonna

01:20:46,639 --> 01:20:50,719
post the feedback form for those

01:20:48,639 --> 01:20:51,920
who want to fill that in and get a

01:20:50,719 --> 01:20:54,960
t-shirt or a mark

01:20:51,920 --> 01:20:54,960
yeah good good call

01:20:55,280 --> 01:21:02,960
so i posted it there on the chat awesome

01:21:00,080 --> 01:21:04,639
cool um so i'm going to go ahead and

01:21:02,960 --> 01:21:07,760
just share my screen

01:21:04,639 --> 01:21:08,880
we only have kind of a few more minutes

01:21:07,760 --> 01:21:10,880
left of

01:21:08,880 --> 01:21:12,320
what we're doing here we're just going

01:21:10,880 --> 01:21:16,480
to configure our

01:21:12,320 --> 01:21:19,520
api and uh be able to call these two

01:21:16,480 --> 01:21:20,080
endpoints so i'm going to go this is

01:21:19,520 --> 01:21:22,480
going to be

01:21:20,080 --> 01:21:23,280
steps 7 and 8 basically so if you want

01:21:22,480 --> 01:21:26,159
to follow

01:21:23,280 --> 01:21:28,960
along for setting up the api this is

01:21:26,159 --> 01:21:32,239
what we're going to be doing

01:21:28,960 --> 01:21:36,639
so i'm going to go over to

01:21:32,239 --> 01:21:40,080
auth0 again let me close these out

01:21:36,639 --> 01:21:43,280
and this time we're going to go to apis

01:21:40,080 --> 01:21:44,400
and we're going to click create api and

01:21:43,280 --> 01:21:46,480
we're going to give this

01:21:44,400 --> 01:21:48,719
a name you can call this whatever you

01:21:46,480 --> 01:21:51,920
want i'm going to call it angular sdk

01:21:48,719 --> 01:21:53,280
api and then you need to give this a an

01:21:51,920 --> 01:21:54,400
identifier and this

01:21:53,280 --> 01:21:56,159
the first time you see this it's a

01:21:54,400 --> 01:22:00,080
little weird because it's formatted like

01:21:56,159 --> 01:22:03,679
a url but it's not actually a real url

01:22:00,080 --> 01:22:05,360
so what you can do is um you can

01:22:03,679 --> 01:22:08,320
call this whatever you want i'm going to

01:22:05,360 --> 01:22:11,920
call it angular workshop demo

01:22:08,320 --> 01:22:14,960
and you just do https angular dash

01:22:11,920 --> 01:22:17,199
workshop dot dash demo and

01:22:14,960 --> 01:22:18,960
uh you can leave this signing algorithm

01:22:17,199 --> 01:22:22,960
as the default and then hit

01:22:18,960 --> 01:22:24,000
create so what this does is it's going

01:22:22,960 --> 01:22:25,840
to bring you to this quick

01:22:24,000 --> 01:22:27,920
start and you can actually click on

01:22:25,840 --> 01:22:30,480
node.js and we're going to need some of

01:22:27,920 --> 01:22:32,400
this configuration we're going to need

01:22:30,480 --> 01:22:33,920
this audience and we're going to need

01:22:32,400 --> 01:22:39,679
this issuer

01:22:33,920 --> 01:22:42,800
so um if we go back to our instructions

01:22:39,679 --> 01:22:45,840
we're going to use those in our dot m

01:22:42,800 --> 01:22:48,639
file so i'm going to go ahead and copy

01:22:45,840 --> 01:22:49,360
the audience and remember at the

01:22:48,639 --> 01:22:52,719
beginning

01:22:49,360 --> 01:22:53,199
we copied over our n file and so we're

01:22:52,719 --> 01:22:56,320
going to just

01:22:53,199 --> 01:23:00,080
paste the audience in here

01:22:56,320 --> 01:23:03,360
actually don't need the quotes there

01:23:00,080 --> 01:23:05,360
that was just because i had the string

01:23:03,360 --> 01:23:06,639
and then we're also going to need this

01:23:05,360 --> 01:23:09,280
issuer url

01:23:06,639 --> 01:23:10,159
which is down here in the node

01:23:09,280 --> 01:23:15,360
quickstart

01:23:10,159 --> 01:23:17,679
so copy that drop that into the issuer

01:23:15,360 --> 01:23:18,800
now for this workshop i've already

01:23:17,679 --> 01:23:20,560
specified

01:23:18,800 --> 01:23:22,159
the port that we're running the server

01:23:20,560 --> 01:23:24,639
on and the

01:23:22,159 --> 01:23:25,920
location of the client because i didn't

01:23:24,639 --> 01:23:28,159
want to take the time to

01:23:25,920 --> 01:23:29,840
have you have to set those up but you

01:23:28,159 --> 01:23:32,639
can also change these

01:23:29,840 --> 01:23:34,639
in your configuration so since we've

01:23:32,639 --> 01:23:37,120
changed this we need to

01:23:34,639 --> 01:23:38,320
restart our server it should do it

01:23:37,120 --> 01:23:41,520
automatically but

01:23:38,320 --> 01:23:42,480
um just in case uh since we're pulling

01:23:41,520 --> 01:23:44,080
in new

01:23:42,480 --> 01:23:46,880
environment configuration we can just

01:23:44,080 --> 01:23:50,719
restart it ourselves

01:23:46,880 --> 01:23:54,719
and um first thing we want to do

01:23:50,719 --> 01:23:57,120
is just call our public endpoint

01:23:54,719 --> 01:23:58,239
uh to do that we need to add a couple

01:23:57,120 --> 01:24:02,159
more things to

01:23:58,239 --> 01:24:04,560
our our config here so

01:24:02,159 --> 01:24:06,400
we're going to go back over to our auth

01:24:04,560 --> 01:24:09,679
config

01:24:06,400 --> 01:24:12,000
and we need that same audience in our

01:24:09,679 --> 01:24:13,440
json this time we actually do need

01:24:12,000 --> 01:24:15,520
the quotes around it so i'm going to go

01:24:13,440 --> 01:24:18,719
back and

01:24:15,520 --> 01:24:19,199
copy the audience again and paste that

01:24:18,719 --> 01:24:20,880
here

01:24:19,199 --> 01:24:22,800
so what this is doing is this is sort of

01:24:20,880 --> 01:24:23,360
establishing a connection between the

01:24:22,800 --> 01:24:26,239
front end

01:24:23,360 --> 01:24:28,080
and the back end what happens is auth0

01:24:26,239 --> 01:24:31,120
uses this information

01:24:28,080 --> 01:24:31,679
to create the correct token because the

01:24:31,120 --> 01:24:34,880
token

01:24:31,679 --> 01:24:38,080
is only going to allow access to this

01:24:34,880 --> 01:24:39,199
protected api so that way when the api

01:24:38,080 --> 01:24:40,880
gets the token

01:24:39,199 --> 01:24:43,040
it's going to say it's going to verify

01:24:40,880 --> 01:24:44,719
it it's going to say oh it looks like

01:24:43,040 --> 01:24:46,480
i'm receiving a request from this client

01:24:44,719 --> 01:24:47,920
id and it's meant for this audience and

01:24:46,480 --> 01:24:50,800
that's my audience

01:24:47,920 --> 01:24:52,000
and so it's okay to send this protected

01:24:50,800 --> 01:24:56,159
data

01:24:52,000 --> 01:24:58,000
um some can you quickly show how

01:24:56,159 --> 01:24:59,360
in what part of the of manage you

01:24:58,000 --> 01:25:02,800
actually send the audience

01:24:59,360 --> 01:25:06,000
you create the api yes

01:25:02,800 --> 01:25:11,199
the api section on the dashboard oh

01:25:06,000 --> 01:25:11,199
on the dashboard yeah um alex is asking

01:25:11,360 --> 01:25:15,760
yeah so um when we this is this is the

01:25:14,560 --> 01:25:19,280
part of the api that

01:25:15,760 --> 01:25:21,040
is actually going to uh connect to auth0

01:25:19,280 --> 01:25:23,199
and create like

01:25:21,040 --> 01:25:25,120
deal with the tokens and everything as

01:25:23,199 --> 01:25:27,679
you can see in the configuration for

01:25:25,120 --> 01:25:29,520
this jwt library

01:25:27,679 --> 01:25:31,920
we're passing in the audience and we're

01:25:29,520 --> 01:25:36,719
passing passing in the issuer

01:25:31,920 --> 01:25:36,719
there and so this little

01:25:39,280 --> 01:25:45,360
function here is is um

01:25:42,480 --> 01:25:46,639
gonna gonna create that um i'm gonna go

01:25:45,360 --> 01:25:49,760
get that token

01:25:46,639 --> 01:25:52,080
based on the configuration if that makes

01:25:49,760 --> 01:25:52,080
sense

01:25:53,199 --> 01:25:58,239
okay so now we've got um we've got this

01:25:56,560 --> 01:26:00,639
configuration we also need to add that

01:25:58,239 --> 01:26:02,400
to our environment file

01:26:00,639 --> 01:26:03,920
so we're going to pull that in i'm going

01:26:02,400 --> 01:26:04,719
to go over to our environment we're

01:26:03,920 --> 01:26:07,360
going to need

01:26:04,719 --> 01:26:08,400
um the audience and then we're also

01:26:07,360 --> 01:26:11,520
going to need the api

01:26:08,400 --> 01:26:13,360
url i already included that um just so

01:26:11,520 --> 01:26:15,360
we didn't have to configure it

01:26:13,360 --> 01:26:18,480
during the workshop but this is just the

01:26:15,360 --> 01:26:19,920
api url the port that it's running on

01:26:18,480 --> 01:26:21,760
so we're going to pull that in we're

01:26:19,920 --> 01:26:25,440
going to

01:26:21,760 --> 01:26:28,239
add our audience to our auth domain here

01:26:25,440 --> 01:26:30,159
and then we're going to create a another

01:26:28,239 --> 01:26:33,440
object just called dev

01:26:30,159 --> 01:26:37,199
for our dev environment with our

01:26:33,440 --> 01:26:37,760
api url and now we can just refer to our

01:26:37,199 --> 01:26:41,920
api

01:26:37,760 --> 01:26:41,920
url in our environment

01:26:42,080 --> 01:26:47,120
okay so let's go ahead and call our

01:26:45,199 --> 01:26:51,440
public endpoint

01:26:47,120 --> 01:26:54,960
to do that we're going to go over to our

01:26:51,440 --> 01:26:58,159
external api page so if i

01:26:54,960 --> 01:26:59,360
just pull this up under pages external

01:26:58,159 --> 01:27:02,639
api

01:26:59,360 --> 01:27:04,080
let's open this component and we need to

01:27:02,639 --> 01:27:07,679
do a couple of things here

01:27:04,080 --> 01:27:10,880
we need to um bring in

01:27:07,679 --> 01:27:13,920
our http http client so i'll do

01:27:10,880 --> 01:27:16,960
private http

01:27:13,920 --> 01:27:20,800
of the type http client and that should

01:27:16,960 --> 01:27:20,800
automatically import from angular

01:27:20,960 --> 01:27:24,400
and we are going to let's see we'll also

01:27:23,840 --> 01:27:27,360
need

01:27:24,400 --> 01:27:28,719
our environment so i'm going to do

01:27:27,360 --> 01:27:31,840
import

01:27:28,719 --> 01:27:35,040
environment as n

01:27:31,840 --> 01:27:37,679
from dot dot slash

01:27:35,040 --> 01:27:39,679
a bunch of dots three three dot dots

01:27:37,679 --> 01:27:42,159
slash environments

01:27:39,679 --> 01:27:45,120
slash environment that'll pull in our

01:27:42,159 --> 01:27:45,120
environment file

01:27:45,600 --> 01:27:51,840
and now we can make just a little call

01:27:49,600 --> 01:27:53,199
a little function that'll call our

01:27:51,840 --> 01:27:55,120
public endpoint

01:27:53,199 --> 01:27:57,840
so we're going to do our just let's just

01:27:55,120 --> 01:28:00,880
make a function called call api

01:27:57,840 --> 01:28:05,600
this is just going to be a void

01:28:00,880 --> 01:28:08,960
it's not going to return anything per se

01:28:05,600 --> 01:28:14,000
not for us at least we'll do this dot

01:28:08,960 --> 01:28:15,120
http dot get

01:28:14,000 --> 01:28:18,159
we're going to do a little string

01:28:15,120 --> 01:28:22,800
interpolation here we'll say

01:28:18,159 --> 01:28:26,560
end dot dev dot api url

01:28:22,800 --> 01:28:30,960
and then we need the path to that

01:28:26,560 --> 01:28:34,159
function which is slash api messages

01:28:30,960 --> 01:28:37,040
slash public message

01:28:34,159 --> 01:28:37,040
and i can uh

01:28:38,719 --> 01:28:44,320
subscribe to that that's going to be an

01:28:40,080 --> 01:28:44,320
observable so i'll do that subscribe

01:28:45,040 --> 01:28:48,480
what we're going to get back uh is going

01:28:47,440 --> 01:28:50,719
to be a

01:28:48,480 --> 01:28:52,639
an object with a string in it so let's

01:28:50,719 --> 01:28:54,560
go ahead and just create a little type

01:28:52,639 --> 01:28:56,159
for that just to make just to make

01:28:54,560 --> 01:29:00,400
typescript happy

01:28:56,159 --> 01:29:01,040
so um just above our component we can

01:29:00,400 --> 01:29:03,199
just

01:29:01,040 --> 01:29:06,159
create a little type just a little

01:29:03,199 --> 01:29:08,080
message interface called message

01:29:06,159 --> 01:29:10,080
and that's just gonna have a property

01:29:08,080 --> 01:29:12,400
called message which is going to be a

01:29:10,080 --> 01:29:12,400
string

01:29:12,639 --> 01:29:15,679
so we can go down to result give it a

01:29:14,800 --> 01:29:20,800
type of

01:29:15,679 --> 01:29:20,800
message and

01:29:21,040 --> 01:29:27,280
we're just going to set dot

01:29:24,239 --> 01:29:30,639
message equal to message or

01:29:27,280 --> 01:29:30,639
result.message i mean

01:29:31,679 --> 01:29:36,239
okay so we're calling our public message

01:29:35,120 --> 01:29:39,280
endpoint

01:29:36,239 --> 01:29:41,840
and subscribing and then we're setting a

01:29:39,280 --> 01:29:44,320
property called message equal to the

01:29:41,840 --> 01:29:47,679
message

01:29:44,320 --> 01:29:50,080
and then we can just um open up our

01:29:47,679 --> 01:29:51,280
html we've already got it set up to

01:29:50,080 --> 01:29:54,080
display the message

01:29:51,280 --> 01:29:55,520
over here so all we need to do is add

01:29:54,080 --> 01:29:57,280
our click handler

01:29:55,520 --> 01:29:59,120
to this button so i'm just going to add

01:29:57,280 --> 01:30:02,719
a click handler

01:29:59,120 --> 01:30:07,840
and it's just going to be our call

01:30:02,719 --> 01:30:09,920
api method

01:30:07,840 --> 01:30:11,040
and if i didn't already say this this is

01:30:09,920 --> 01:30:14,480
in step

01:30:11,040 --> 01:30:17,760
seven of configuring the api and calling

01:30:14,480 --> 01:30:18,320
the public endpoint so i go back over

01:30:17,760 --> 01:30:21,040
here

01:30:18,320 --> 01:30:21,520
so if i try to click on external api

01:30:21,040 --> 01:30:24,639
then

01:30:21,520 --> 01:30:26,000
i get sent over to authorize you might

01:30:24,639 --> 01:30:28,159
have to re-authorize

01:30:26,000 --> 01:30:29,600
uh because we've added in uh we've

01:30:28,159 --> 01:30:30,880
changed things a little bit we've added

01:30:29,600 --> 01:30:32,320
in the audience

01:30:30,880 --> 01:30:34,000
so our token is going to actually be

01:30:32,320 --> 01:30:36,719
different than it was before

01:30:34,000 --> 01:30:37,360
i'm going to click yes and then i'm

01:30:36,719 --> 01:30:39,360
going to click

01:30:37,360 --> 01:30:40,960
get public message and you can see that

01:30:39,360 --> 01:30:42,480
we get that result

01:30:40,960 --> 01:30:44,320
so this public message this actually

01:30:42,480 --> 01:30:46,880
doesn't have anything to do with auth0

01:30:44,320 --> 01:30:49,120
this is just like if we were using a

01:30:46,880 --> 01:30:50,320
regular api

01:30:49,120 --> 01:30:53,679
we would just be able to call this

01:30:50,320 --> 01:30:57,040
endpoint but our protected endpoint

01:30:53,679 --> 01:31:00,080
does require our token if i go back

01:30:57,040 --> 01:31:03,840
over to the

01:31:00,080 --> 01:31:03,840
server if i open up the server

01:31:04,080 --> 01:31:09,600
and i can show you that see how

01:31:07,760 --> 01:31:11,120
in the in this endpoint the protected

01:31:09,600 --> 01:31:13,840
endpoint we have this check

01:31:11,120 --> 01:31:15,440
jwt this is a what's called a middleware

01:31:13,840 --> 01:31:16,560
for express where it's actually going to

01:31:15,440 --> 01:31:18,480
check to see

01:31:16,560 --> 01:31:20,239
if we have that token that's what this

01:31:18,480 --> 01:31:23,280
all this configuration is

01:31:20,239 --> 01:31:25,600
but our public endpoint didn't have that

01:31:23,280 --> 01:31:27,520
so what we're going to do is we're going

01:31:25,600 --> 01:31:30,719
to

01:31:27,520 --> 01:31:34,080
attach our token

01:31:30,719 --> 01:31:37,760
to our outgoing request

01:31:34,080 --> 01:31:39,120
and that way the server can actually

01:31:37,760 --> 01:31:42,800
pull that token off

01:31:39,120 --> 01:31:45,280
of the request headers

01:31:42,800 --> 01:31:46,639
and then check to see that it's there so

01:31:45,280 --> 01:31:47,120
there's just a couple things we need to

01:31:46,639 --> 01:31:51,040
do

01:31:47,120 --> 01:31:54,880
to make this happen we need to import

01:31:51,040 --> 01:31:56,239
an http interceptor in angular an http

01:31:54,880 --> 01:31:59,520
interceptor

01:31:56,239 --> 01:32:00,719
lets you intercept a request and then do

01:31:59,520 --> 01:32:02,480
something to it and then

01:32:00,719 --> 01:32:04,080
send it along the way it's kind of like

01:32:02,480 --> 01:32:07,199
middleware but for

01:32:04,080 --> 01:32:10,560
the client so in our

01:32:07,199 --> 01:32:13,199
app module we need to

01:32:10,560 --> 01:32:14,800
import a couple of things we need to go

01:32:13,199 --> 01:32:18,560
and

01:32:14,800 --> 01:32:18,560
import under

01:32:19,760 --> 01:32:23,520
in our http import we need to import

01:32:22,719 --> 01:32:27,199
http

01:32:23,520 --> 01:32:30,560
interceptors and then in our

01:32:27,199 --> 01:32:34,960
auth 0 import we need to import

01:32:30,560 --> 01:32:34,960
auth http interceptor

01:32:38,719 --> 01:32:45,920
so next to actually use our interceptor

01:32:42,960 --> 01:32:46,800
in our application we need to create a

01:32:45,920 --> 01:32:50,719
new

01:32:46,800 --> 01:32:53,040
uh a new array for our ng model that you

01:32:50,719 --> 01:32:55,760
might have seen before called providers

01:32:53,040 --> 01:32:57,920
so providers is an array it lets us tell

01:32:55,760 --> 01:32:58,560
angular other services and providers to

01:32:57,920 --> 01:33:00,960
use

01:32:58,560 --> 01:33:01,760
so we're going to create a new object

01:33:00,960 --> 01:33:04,400
it's going to have

01:33:01,760 --> 01:33:04,800
a key called provide and this is going

01:33:04,400 --> 01:33:08,159
to be

01:33:04,800 --> 01:33:09,840
for http interceptors

01:33:08,159 --> 01:33:11,920
we're also going to give it we're going

01:33:09,840 --> 01:33:14,639
to say use class

01:33:11,920 --> 01:33:17,120
and tell it to use the auth http

01:33:14,639 --> 01:33:18,880
interceptor

01:33:17,120 --> 01:33:20,400
and then lastly we're going to set this

01:33:18,880 --> 01:33:24,719
multi property

01:33:20,400 --> 01:33:27,120
to true and uh

01:33:24,719 --> 01:33:29,280
anybody wants to remind me of what the

01:33:27,120 --> 01:33:33,280
multi-property does

01:33:29,280 --> 01:33:36,320
feel free i always forget

01:33:33,280 --> 01:33:39,360
and then now we just need to configure

01:33:36,320 --> 01:33:41,440
the aut00http interceptor so in our

01:33:39,360 --> 01:33:43,600
configuration object

01:33:41,440 --> 01:33:44,639
there's actually uh we can a property

01:33:43,600 --> 01:33:47,199
called http

01:33:44,639 --> 01:33:49,199
interceptor that takes its own options

01:33:47,199 --> 01:33:51,760
object so this is pretty cool

01:33:49,199 --> 01:33:53,360
we can actually give it an allowed list

01:33:51,760 --> 01:33:55,600
of urls

01:33:53,360 --> 01:33:57,360
that we want it to work with so that way

01:33:55,600 --> 01:33:57,840
we're not adding the token to every

01:33:57,360 --> 01:34:00,480
single

01:33:57,840 --> 01:34:01,120
outgoing request we're just giving it a

01:34:00,480 --> 01:34:03,840
list

01:34:01,120 --> 01:34:04,960
of urls that we want it to work with so

01:34:03,840 --> 01:34:08,159
what we can do

01:34:04,960 --> 01:34:08,639
is we can use our environment so n dot

01:34:08,159 --> 01:34:12,800
dev

01:34:08,639 --> 01:34:16,159
dot api url and match it with

01:34:12,800 --> 01:34:19,440
slash api slash messages slash

01:34:16,159 --> 01:34:22,480
protected message

01:34:19,440 --> 01:34:25,520
so now we're telling uh auth0 to

01:34:22,480 --> 01:34:27,760
only add the token when it matches this

01:34:25,520 --> 01:34:30,639
url

01:34:27,760 --> 01:34:32,320
and so if i go back and let's look at

01:34:30,639 --> 01:34:34,960
the network

01:34:32,320 --> 01:34:34,960
tab here

01:34:35,760 --> 01:34:39,520
and if i click get public message you

01:34:38,480 --> 01:34:42,960
can see that

01:34:39,520 --> 01:34:46,719
we're not there's no token added here

01:34:42,960 --> 01:34:49,280
i can even refresh the page

01:34:46,719 --> 01:34:50,639
and just so you know that it's actually

01:34:49,280 --> 01:34:52,800
there

01:34:50,639 --> 01:34:54,880
you can see uh there's no there's no

01:34:52,800 --> 01:34:57,600
bearer there's no authorization

01:34:54,880 --> 01:34:58,400
nothing like that so now let's add let's

01:34:57,600 --> 01:35:00,719
actually call

01:34:58,400 --> 01:35:01,520
the protected endpoint and see what

01:35:00,719 --> 01:35:03,760
happens so

01:35:01,520 --> 01:35:04,719
we can go back to our external api

01:35:03,760 --> 01:35:08,639
component

01:35:04,719 --> 01:35:08,639
you can actually just duplicate this

01:35:08,719 --> 01:35:13,040
and call it call secure api

01:35:13,440 --> 01:35:17,520
and let's just call that change this url

01:35:16,000 --> 01:35:20,560
to

01:35:17,520 --> 01:35:20,560
protected message

01:35:21,520 --> 01:35:30,159
and then we can go back to our component

01:35:25,920 --> 01:35:30,159
and let's just add a click event

01:35:30,320 --> 01:35:38,159
but change the method to call secure api

01:35:35,040 --> 01:35:41,520
and we're in this is step 8 that has

01:35:38,159 --> 01:35:44,960
this last bit of code in it

01:35:41,520 --> 01:35:47,600
so now moment of truth if i call

01:35:44,960 --> 01:35:48,960
get protected message you can see that

01:35:47,600 --> 01:35:52,800
we get the message back

01:35:48,960 --> 01:35:56,800
and why is that well if we click on

01:35:52,800 --> 01:35:58,800
the uh request here and scroll down

01:35:56,800 --> 01:36:00,639
you can see that we have this

01:35:58,800 --> 01:36:04,239
authorization and this is actually

01:36:00,639 --> 01:36:07,440
attaching our token we can actually copy

01:36:04,239 --> 01:36:11,840
this whole thing if we want

01:36:07,440 --> 01:36:11,840
go over to jwt dot io

01:36:13,040 --> 01:36:16,719
and just paste it in here and it

01:36:16,239 --> 01:36:20,639
actually

01:36:16,719 --> 01:36:24,159
shows us the the payload so we can see

01:36:20,639 --> 01:36:26,719
my issuer that we used before you can

01:36:24,159 --> 01:36:29,520
see the audience that we had

01:36:26,719 --> 01:36:30,320
um and a few other things this sub claim

01:36:29,520 --> 01:36:32,719
this is uh

01:36:30,320 --> 01:36:33,679
basically like a user id so we're

01:36:32,719 --> 01:36:38,320
actually seeing

01:36:33,679 --> 01:36:40,480
um the payload here um

01:36:38,320 --> 01:36:42,080
and so that's how we're able to actually

01:36:40,480 --> 01:36:45,920
uh get a successful

01:36:42,080 --> 01:36:45,920
request here and response

01:36:46,000 --> 01:36:49,520
so now we have both the public and the

01:36:48,159 --> 01:36:52,639
protected api

01:36:49,520 --> 01:36:55,280
and that's um that's pretty much it

01:36:52,639 --> 01:36:56,000
we've gone way over but look luckily we

01:36:55,280 --> 01:36:58,639
have a

01:36:56,000 --> 01:36:59,679
recording so you can watch it at your

01:36:58,639 --> 01:37:03,280
leisure

01:36:59,679 --> 01:37:06,159
um i think that's pretty much it did we

01:37:03,280 --> 01:37:09,520
have looks like we don't have any other

01:37:06,159 --> 01:37:09,520
questions do we have any other

01:37:10,960 --> 01:37:15,440
any other questions um let's see

01:37:15,520 --> 01:37:20,719
where are we at i think we're all good

01:37:19,360 --> 01:37:21,360
we did get a question about the

01:37:20,719 --> 01:37:25,760
recording

01:37:21,360 --> 01:37:29,840
yes it will be recorded yes

01:37:25,760 --> 01:37:29,840
and you are welcome fiaga

01:37:31,040 --> 01:37:34,480
cool well thank you so much uh for

01:37:32,800 --> 01:37:36,320
attending and

01:37:34,480 --> 01:37:37,679
if you fill out that feedback form we'll

01:37:36,320 --> 01:37:40,719
really appreciate it

01:37:37,679 --> 01:37:43,600
and um yeah i think that's it

01:37:40,719 --> 01:37:44,719
uh brooke do you have any other parting

01:37:43,600 --> 01:37:48,159
words or

01:37:44,719 --> 01:37:49,360
only just to invite you to attend any of

01:37:48,159 --> 01:37:52,480
our other webinars

01:37:49,360 --> 01:37:55,119
and then we also have a handful of

01:37:52,480 --> 01:37:56,480
free workshops so they'll be more like

01:37:55,119 --> 01:37:59,760
two three hours long

01:37:56,480 --> 01:38:01,840
and that'll be november 16th so lots of

01:37:59,760 --> 01:38:03,840
more free learning opportunities and

01:38:01,840 --> 01:38:07,280
then of course you're invited to come to

01:38:03,840 --> 01:38:09,040
enterpriseng on november 19th and 20th

01:38:07,280 --> 01:38:09,360
sam will actually be one of our speakers

01:38:09,040 --> 01:38:13,199
there

01:38:09,360 --> 01:38:16,000
so definitely go to ngcomp.org

01:38:13,199 --> 01:38:17,679
and check out the tickets there but yeah

01:38:16,000 --> 01:38:20,320
i mean those free ones are always

01:38:17,679 --> 01:38:21,520
fun and exciting so check out everything

01:38:20,320 --> 01:38:23,119
on our website

01:38:21,520 --> 01:38:25,280
um but otherwise thank you to all three

01:38:23,119 --> 01:38:29,040
of you that was really really excellent

01:38:25,280 --> 01:38:31,040
and great great learning so

01:38:29,040 --> 01:38:34,000
thank you and then yeah i will make sure

01:38:31,040 --> 01:38:36,239
that this video gets

01:38:34,000 --> 01:38:37,760
edited and put out as soon as we can so

01:38:36,239 --> 01:38:39,760
just be patient with us while we

01:38:37,760 --> 01:38:41,840
get the editing process taken care of

01:38:39,760 --> 01:38:44,080
but it shouldn't be more than

01:38:41,840 --> 01:38:45,840
i would say no more than two weeks but

01:38:44,080 --> 01:38:49,440
probably a lot less than that

01:38:45,840 --> 01:38:51,760
so look for it then

01:38:49,440 --> 01:38:52,560
all right awesome well thank you so much

01:38:51,760 --> 01:38:54,400
everybody thank you

01:38:52,560 --> 01:38:55,679
everybody and hopefully we can do it

01:38:54,400 --> 01:38:57,760
again soon

01:38:55,679 --> 01:39:01,039
awesome bye everybody

01:38:57,760 --> 01:39:01,039
[Applause]

01:39:01,240 --> 01:39:15,760
[Music]

01:39:13,679 --> 01:39:15,760

YouTube URL: https://www.youtube.com/watch?v=laLIsXg2OxM


