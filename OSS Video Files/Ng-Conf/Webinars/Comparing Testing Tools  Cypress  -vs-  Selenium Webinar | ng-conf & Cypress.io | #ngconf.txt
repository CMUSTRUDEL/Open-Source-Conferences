Title: Comparing Testing Tools  Cypress  -vs-  Selenium Webinar | ng-conf & Cypress.io | #ngconf
Publication date: 2020-05-11
Playlist: Webinars
Description: 
	When it comes to test automation, there are many tools to consider. Among the most popular are Cypress and Selenium, but which tool is best suited for YOUR testing needs? Come find out with this in-depth webinar!

ng-conf is a three-day Angular conference focused on delivering the highest quality training in the Angular JavaScript framework. 1500+ developers from across the globe converge on Salt Lake City, UT every year to attend talks and workshops by the Angular team and community experts.

Follow us on twitter https://twitter.com/ngconf
Official Website: https://www.ng-conf.org/

#ngconf
Captions: 
	00:00:07,770 --> 00:00:14,980
cool so hi everyone thank you so much

00:00:12,430 --> 00:00:18,220
for joining us today in this webinar

00:00:14,980 --> 00:00:21,189
we'll simply do an exploration between

00:00:18,220 --> 00:00:23,170
Cyprus and selenium which is arguably

00:00:21,189 --> 00:00:25,990
two of the most popular testing

00:00:23,170 --> 00:00:28,900
frameworks at the moment like Brooke

00:00:25,990 --> 00:00:31,150
said I am marine so I currently work as

00:00:28,900 --> 00:00:35,890
a principal test automation engineer at

00:00:31,150 --> 00:00:37,690
News 50 I also blog at Murray 3com about

00:00:35,890 --> 00:00:39,910
testing and test automation in general

00:00:37,690 --> 00:00:43,629
so if you want to visit that I've added

00:00:39,910 --> 00:00:45,399
the link here on this icon if you need

00:00:43,629 --> 00:00:47,800
to ask me any sort of follow-up

00:00:45,399 --> 00:00:49,480
questions I have my Twitter handle added

00:00:47,800 --> 00:00:50,800
here as well

00:00:49,480 --> 00:00:52,600
I'm just going to hand over it now at

00:00:50,800 --> 00:00:58,020
the theory so we can also introduce

00:00:52,600 --> 00:01:01,090
yourself thanks daddy thank you so much

00:00:58,020 --> 00:01:04,270
my name is Gary DevOps Kumar I'm a test

00:01:01,090 --> 00:01:06,899
automation consultant having over 11

00:01:04,270 --> 00:01:10,060
years of experience in software industry

00:01:06,899 --> 00:01:12,850
as a caster as well as a passionate

00:01:10,060 --> 00:01:15,880
developer so I'm a blonde goo and I have

00:01:12,850 --> 00:01:18,130
my own blog called non tech learned at

00:01:15,880 --> 00:01:20,680
desktops calm very publish all my

00:01:18,130 --> 00:01:22,720
articles and handbooks you can follow

00:01:20,680 --> 00:01:24,970
follow me on Twitter and also get

00:01:22,720 --> 00:01:27,909
connected by a Linden so I'm very

00:01:24,970 --> 00:01:29,500
excited to be part of this webinar where

00:01:27,909 --> 00:01:32,710
I'm going to talk about two of my

00:01:29,500 --> 00:01:34,689
favorite test automation tools in fact

00:01:32,710 --> 00:01:36,759
before we stop I would like to express

00:01:34,689 --> 00:01:39,159
that I in maybe wanted to share of and

00:01:36,759 --> 00:01:41,400
personal experiences with these two

00:01:39,159 --> 00:01:44,229
magnificent tools through this webinar

00:01:41,400 --> 00:01:47,799
be that said I will hand it over to Mary

00:01:44,229 --> 00:01:52,450
for the session over to you Mary good

00:01:47,799 --> 00:01:55,299
very cool so just a quick agenda for

00:01:52,450 --> 00:01:57,790
today first we looked at what selenium

00:01:55,299 --> 00:02:00,340
is followed by doing some Cypress

00:01:57,790 --> 00:02:03,000
introduction and then we'll then look at

00:02:00,340 --> 00:02:07,270
some architecture differences between

00:02:03,000 --> 00:02:09,729
this two tools and then we will then do

00:02:07,270 --> 00:02:12,820
a test water or and how we can automate

00:02:09,729 --> 00:02:14,170
some tests using selenium compare it to

00:02:12,820 --> 00:02:17,140
Cypress

00:02:14,170 --> 00:02:18,970
here you will then walk you through as

00:02:17,140 --> 00:02:21,100
to what the feature differences

00:02:18,970 --> 00:02:22,870
or between selenium and Cypress and then

00:02:21,100 --> 00:02:26,260
at the end we'll have some time for some

00:02:22,870 --> 00:02:28,930
questions cool

00:02:26,260 --> 00:02:31,390
so first and foremost what is selenium

00:02:28,930 --> 00:02:33,310
so selenium is just a tool that is

00:02:31,390 --> 00:02:36,760
mainly used for automating the browsers

00:02:33,310 --> 00:02:39,760
the idea behind selenium it was created

00:02:36,760 --> 00:02:43,210
to address the inefficiency of running

00:02:39,760 --> 00:02:44,980
manual test cases again and again for

00:02:43,210 --> 00:02:47,920
those of you who don't know selenium is

00:02:44,980 --> 00:02:50,290
actually a combination of this multiple

00:02:47,920 --> 00:02:53,260
tools so first we have the selenium

00:02:50,290 --> 00:02:55,870
webdriver which is arguably one of the

00:02:53,260 --> 00:02:56,500
most popular like selenium frameworks

00:02:55,870 --> 00:02:59,020
out there

00:02:56,500 --> 00:03:01,300
it supports almost all programming

00:02:59,020 --> 00:03:03,850
languages which keeps developers and QA

00:03:01,300 --> 00:03:06,430
engineers from the flexibility that they

00:03:03,850 --> 00:03:09,190
need automate possess in their

00:03:06,430 --> 00:03:13,180
programming language of choice we also

00:03:09,190 --> 00:03:16,780
have selenium IDE which is a browser

00:03:13,180 --> 00:03:19,360
extension that lets you automate simple

00:03:16,780 --> 00:03:22,510
test cases using record and playback and

00:03:19,360 --> 00:03:24,910
then we also have the selenium grid

00:03:22,510 --> 00:03:28,150
which is a tool that allows you to run

00:03:24,910 --> 00:03:29,500
your automated tests simultaneously now

00:03:28,150 --> 00:03:31,840
if we look at selenium webdriver

00:03:29,500 --> 00:03:34,959
sedately downloads as of when this image

00:03:31,840 --> 00:03:37,300
was taken there are over 1.6 million

00:03:34,959 --> 00:03:39,130
weekly bound loads which shows that size

00:03:37,300 --> 00:03:42,730
which shows that selenium is really

00:03:39,130 --> 00:03:45,340
popular because of its popularity

00:03:42,730 --> 00:03:48,970
selenium webdriver is recommended by the

00:03:45,340 --> 00:03:51,880
World Wide Web as a recommended tool

00:03:48,970 --> 00:03:54,160
so just to understand more how selenium

00:03:51,880 --> 00:03:56,890
works internally let's look at its art

00:03:54,160 --> 00:03:59,290
its architecture first so first here we

00:03:56,890 --> 00:04:02,080
have the different language bindings and

00:03:59,290 --> 00:04:05,019
support classes this different language

00:04:02,080 --> 00:04:08,260
bindings allow you to allow you to write

00:04:05,019 --> 00:04:11,019
selenium tests to be written in

00:04:08,260 --> 00:04:14,200
different programming languages now the

00:04:11,019 --> 00:04:15,760
selenium server actually they don't care

00:04:14,200 --> 00:04:18,669
what programming languages you write

00:04:15,760 --> 00:04:21,459
your tests with this is where the JSON

00:04:18,669 --> 00:04:24,130
wire protocol comes in so this different

00:04:21,459 --> 00:04:27,610
language bindings interact with the

00:04:24,130 --> 00:04:29,470
webdriver API by using JSON I suddenly

00:04:27,610 --> 00:04:32,140
zoom to communicate to the different

00:04:29,470 --> 00:04:32,529
browser drivers the browser driver on

00:04:32,140 --> 00:04:36,039
the

00:04:32,529 --> 00:04:40,149
and helps helps in communication with

00:04:36,039 --> 00:04:42,159
the actual browsers so for example if

00:04:40,149 --> 00:04:44,049
you want to automate your tests in the

00:04:42,159 --> 00:04:45,449
Chrome browser you would need to make

00:04:44,049 --> 00:04:48,219
sure that you have the chrome driver

00:04:45,449 --> 00:04:52,359
installed so that you can run your tests

00:04:48,219 --> 00:04:55,929
successfully so on the other hand let's

00:04:52,359 --> 00:04:58,269
talk about Cyprus now similar with

00:04:55,929 --> 00:05:01,589
selenium Cyprus is also a testing tool

00:04:58,269 --> 00:05:04,059
which is which is used for automating

00:05:01,589 --> 00:05:08,109
functional or end-to-end deaths

00:05:04,059 --> 00:05:10,119
now if you go to their website the first

00:05:08,109 --> 00:05:12,909
thing that you see is this message the

00:05:10,119 --> 00:05:15,549
web has evolved finally testing has - on

00:05:12,909 --> 00:05:18,689
the upcoming slides we'll see how easy

00:05:15,549 --> 00:05:22,629
they store on your first high priestess

00:05:18,689 --> 00:05:25,119
so Cyprus is also currently the second

00:05:22,629 --> 00:05:27,759
most popular JavaScript testing

00:05:25,119 --> 00:05:30,489
framework based on its weekly download

00:05:27,759 --> 00:05:32,289
from NPM it's also more than a million

00:05:30,489 --> 00:05:35,199
already we're supposed to show that a

00:05:32,289 --> 00:05:39,699
lot of developers and QA engineers are

00:05:35,199 --> 00:05:42,699
also switching to using it oh so just

00:05:39,699 --> 00:05:45,309
more information as to what Cyprus is so

00:05:42,699 --> 00:05:47,409
I mentioned that Cyprus is essentially a

00:05:45,309 --> 00:05:50,319
poll which simulates browser actions

00:05:47,409 --> 00:05:52,329
like a real user however it's worth

00:05:50,319 --> 00:05:55,499
noting here so that you can also use

00:05:52,329 --> 00:05:58,149
Cyprus for testing your API integration

00:05:55,499 --> 00:06:00,789
it provides an easy way for developers

00:05:58,149 --> 00:06:03,669
and QA engineers to write easier and

00:06:00,789 --> 00:06:06,039
more user-friendly on test

00:06:03,669 --> 00:06:08,919
Brian man who's the creator of Cyprus

00:06:06,039 --> 00:06:11,789
came up with the idea of Cyprus because

00:06:08,919 --> 00:06:14,919
he realized that existing testing tools

00:06:11,789 --> 00:06:18,339
for automating the UI are often quite

00:06:14,919 --> 00:06:20,939
difficult to set up and debunk it is

00:06:18,339 --> 00:06:24,519
often compared as a great alternative to

00:06:20,939 --> 00:06:27,129
selenium but Cyprus is actually goes

00:06:24,519 --> 00:06:31,689
differently from on selenium which shall

00:06:27,129 --> 00:06:34,839
explain the next slide oh so what I mean

00:06:31,689 --> 00:06:36,849
by that is if you compare it to the

00:06:34,839 --> 00:06:39,429
selenium architecture

00:06:36,849 --> 00:06:42,219
Cyprus restaurants directly inside your

00:06:39,429 --> 00:06:45,009
browser without any additional layers in

00:06:42,219 --> 00:06:46,180
between this means that you can offer

00:06:45,009 --> 00:06:48,460
the

00:06:46,180 --> 00:06:50,380
and even intercept network requests

00:06:48,460 --> 00:06:57,790
directly without the need of additional

00:06:50,380 --> 00:07:00,190
arm letters oh so driving to Cyprus you

00:06:57,790 --> 00:07:02,650
would need to install separate libraries

00:07:00,190 --> 00:07:05,200
to write a automated test there are also

00:07:02,650 --> 00:07:07,690
tons of different bows to choose from so

00:07:05,200 --> 00:07:10,540
if you're quite new to test automation

00:07:07,690 --> 00:07:12,490
you might feel overwhelmed and might be

00:07:10,540 --> 00:07:13,870
confused as to which tool is the best

00:07:12,490 --> 00:07:15,940
for you

00:07:13,870 --> 00:07:20,020
now Cyprus takes only all these

00:07:15,940 --> 00:07:22,780
different complexities and it just like

00:07:20,020 --> 00:07:25,000
lets you focus on what provides the most

00:07:22,780 --> 00:07:31,450
value which is actually writing the

00:07:25,000 --> 00:07:34,690
tests oh so now just to demonstrate the

00:07:31,450 --> 00:07:36,880
setup for this to testing booth so first

00:07:34,690 --> 00:07:40,480
let's look at selenium so if you're

00:07:36,880 --> 00:07:43,300
using the official the official selenium

00:07:40,480 --> 00:07:45,670
webdriver implementation for JavaScript

00:07:43,300 --> 00:07:48,250
so first you would need to install

00:07:45,670 --> 00:07:50,710
selenium-webdriver but then at the same

00:07:48,250 --> 00:07:53,530
time if you need to do some assertion

00:07:50,710 --> 00:07:55,900
you would need to install try and then

00:07:53,530 --> 00:07:58,750
for your testing framework you would

00:07:55,900 --> 00:08:01,060
have to a stone mocha now I mentioned

00:07:58,750 --> 00:08:04,420
that there is a webdriver

00:08:01,060 --> 00:08:06,670
binding that you have to download so if

00:08:04,420 --> 00:08:08,890
you're going to automate your test using

00:08:06,670 --> 00:08:10,810
Chrome you need to make sure that you

00:08:08,890 --> 00:08:13,330
have the chromedriver downloaded and

00:08:10,810 --> 00:08:15,430
then you need to set your path

00:08:13,330 --> 00:08:19,420
environment variable to include the

00:08:15,430 --> 00:08:22,360
location for this film driver now on the

00:08:19,420 --> 00:08:24,430
other hand with Cypress installation you

00:08:22,360 --> 00:08:26,860
just need to run one command which is

00:08:24,430 --> 00:08:28,350
NPM install Cypress and you should be

00:08:26,860 --> 00:08:32,860
good to go

00:08:28,350 --> 00:08:35,950
cool so great now it's time to show you

00:08:32,860 --> 00:08:37,480
a quick demo on how you can write tests

00:08:35,950 --> 00:08:39,970
using selenium webdriver

00:08:37,480 --> 00:08:42,850
the link for this public repo is

00:08:39,970 --> 00:08:46,570
available here so just feel free to play

00:08:42,850 --> 00:08:48,370
around with it after this session but

00:08:46,570 --> 00:08:50,740
before we start so I'm just going to

00:08:48,370 --> 00:08:52,300
give a walkthrough of the application

00:08:50,740 --> 00:08:54,850
that we're going to try to automate

00:08:52,300 --> 00:08:59,290
today so this is just a simple to-do app

00:08:54,850 --> 00:09:02,080
where you can and I need to do like them

00:08:59,290 --> 00:09:04,030
and then you can launch it as you know

00:09:02,080 --> 00:09:07,330
completed and then if you'd make the

00:09:04,030 --> 00:09:09,070
completed tab here you can then see

00:09:07,330 --> 00:09:15,100
which of their to-do items you've marked

00:09:09,070 --> 00:09:17,230
as completed so with selenium-webdriver

00:09:15,100 --> 00:09:20,080
the first thing that you have to do is

00:09:17,230 --> 00:09:21,790
to import the appropriate objects that

00:09:20,080 --> 00:09:26,010
you need from selenium-webdriver

00:09:21,790 --> 00:09:29,500
and also from chai an hour before each

00:09:26,010 --> 00:09:32,110
here's overages initializing the driver

00:09:29,500 --> 00:09:34,900
objects here so that it will run on the

00:09:32,110 --> 00:09:38,710
Chrome browser we're navigating to this

00:09:34,900 --> 00:09:41,620
URL that I've showed awhile ago and then

00:09:38,710 --> 00:09:44,460
here we just have to test selectors that

00:09:41,620 --> 00:09:47,710
we need to use to interact our

00:09:44,460 --> 00:09:49,540
application and then here we're just you

00:09:47,710 --> 00:09:52,570
know finding the element and we're just

00:09:49,540 --> 00:09:54,550
typing you know this text and hitting

00:09:52,570 --> 00:09:57,700
the enter so that we can add those two

00:09:54,550 --> 00:10:00,310
items so one thing that you might notice

00:09:57,700 --> 00:10:01,720
here is we're using the async and await

00:10:00,310 --> 00:10:04,750
keyword on each of the different

00:10:01,720 --> 00:10:08,080
commands now this is very important

00:10:04,750 --> 00:10:10,960
because we want to make sure that this

00:10:08,080 --> 00:10:12,940
this command here will finish before we

00:10:10,960 --> 00:10:17,080
move on to the next command so we don't

00:10:12,940 --> 00:10:19,800
have any errors in our tests okay so for

00:10:17,080 --> 00:10:22,740
our first test we're just verifying that

00:10:19,800 --> 00:10:25,390
when the to-do list element is located

00:10:22,740 --> 00:10:28,030
we just want to verify that the length

00:10:25,390 --> 00:10:32,470
of that element is equivalent to two

00:10:28,030 --> 00:10:34,480
because we identify terms and here are

00:10:32,470 --> 00:10:37,000
no very next tests you just want to

00:10:34,480 --> 00:10:39,460
write a simple test to work at the do

00:10:37,000 --> 00:10:42,130
item as completed so here we're

00:10:39,460 --> 00:10:44,290
basically clicking on the first local

00:10:42,130 --> 00:10:46,900
bottle and then we're clicking on the

00:10:44,290 --> 00:10:49,210
completed button and then we're just

00:10:46,900 --> 00:10:52,060
verifying that the first element and the

00:10:49,210 --> 00:10:55,000
completed button is equivalent to what

00:10:52,060 --> 00:10:57,640
we're expecting and then finally after

00:10:55,000 --> 00:11:00,570
you run your test you need to make sure

00:10:57,640 --> 00:11:03,220
that you create the arm driver so that

00:11:00,570 --> 00:11:04,400
there's no floating driver instances

00:11:03,220 --> 00:11:10,430
around

00:11:04,400 --> 00:11:13,130
oh so this is missus this is just a for

00:11:10,430 --> 00:11:15,470
a video recorded here to show you how

00:11:13,130 --> 00:11:17,480
you can run your test with selenium so

00:11:15,470 --> 00:11:20,270
I'm just using a command code any PM

00:11:17,480 --> 00:11:22,820
says and here you can see that okay your

00:11:20,270 --> 00:11:25,460
application is loading but it's very

00:11:22,820 --> 00:11:27,860
fast you can see as well that yet that

00:11:25,460 --> 00:11:30,590
your tests are passing but what if you

00:11:27,860 --> 00:11:33,020
want to actually debug your application

00:11:30,590 --> 00:11:36,260
real time while you're also writing the

00:11:33,020 --> 00:11:38,270
test so before I answer that I'm just

00:11:36,260 --> 00:11:42,440
gonna quickly show you how you can write

00:11:38,270 --> 00:11:44,840
the since SVC Cypress go again the

00:11:42,440 --> 00:11:49,790
github repo is here it's public so feel

00:11:44,840 --> 00:11:52,340
free to donate after this session cool

00:11:49,790 --> 00:11:54,410
so in Cypress the first thing that you

00:11:52,340 --> 00:11:56,750
do this is optional but I highly

00:11:54,410 --> 00:11:59,540
recommend that you do this is to add the

00:11:56,750 --> 00:12:02,420
Cypress reference type now what this

00:11:59,540 --> 00:12:05,390
does is if you're using like vs code

00:12:02,420 --> 00:12:07,190
editor it will automatically import all

00:12:05,390 --> 00:12:09,710
the different commands that you can do

00:12:07,190 --> 00:12:12,470
with Cypress so it just makes it handy

00:12:09,710 --> 00:12:16,610
and it and it will speed up the way that

00:12:12,470 --> 00:12:19,640
you write here Tess oh so similarly we

00:12:16,610 --> 00:12:21,320
have a before it hooks here the first

00:12:19,640 --> 00:12:23,390
thing that you might notice is we're not

00:12:21,320 --> 00:12:24,460
using async and oblique to me words

00:12:23,390 --> 00:12:27,080
anymore

00:12:24,460 --> 00:12:29,360
Cypress will automatically handle all

00:12:27,080 --> 00:12:31,640
the different asynchronous events so all

00:12:29,360 --> 00:12:33,800
we need to do is just call the different

00:12:31,640 --> 00:12:36,350
commands so the first command we're

00:12:33,800 --> 00:12:39,350
doing is for doing a site visit on our

00:12:36,350 --> 00:12:42,470
application we're using a feature here

00:12:39,350 --> 00:12:44,810
called alias so in this case we want to

00:12:42,470 --> 00:12:47,960
get the new to-do item and you want to

00:12:44,810 --> 00:12:50,090
call it the add people and then here we

00:12:47,960 --> 00:12:52,850
have the same test from a while ago

00:12:50,090 --> 00:12:58,490
where were just basically adding two

00:12:52,850 --> 00:13:01,430
items in our to-do app so how this our

00:12:58,490 --> 00:13:05,030
first test looks like so we just want to

00:13:01,430 --> 00:13:07,550
basically test that the list elements of

00:13:05,030 --> 00:13:10,340
that to-do list is equivalent to and

00:13:07,550 --> 00:13:12,710
then here to mark a to-do item as

00:13:10,340 --> 00:13:15,050
completed so again we want to get the

00:13:12,710 --> 00:13:18,260
toggle button but we want to click the

00:13:15,050 --> 00:13:20,600
first one and here we just want to check

00:13:18,260 --> 00:13:22,880
okay if we find the text that that's

00:13:20,600 --> 00:13:26,030
equivalent to completed we just want to

00:13:22,880 --> 00:13:28,210
click that and this one this is just a

00:13:26,030 --> 00:13:30,650
custom command that you can use

00:13:28,210 --> 00:13:32,540
basically what this custom command is

00:13:30,650 --> 00:13:35,000
doing is it's just getting the first two

00:13:32,540 --> 00:13:36,470
do I then and then here we're just doing

00:13:35,000 --> 00:13:41,260
an assertion that it should be

00:13:36,470 --> 00:13:44,180
equivalent to what we are expecting oh

00:13:41,260 --> 00:13:45,110
so again just to show you how we can run

00:13:44,180 --> 00:13:48,860
this test

00:13:45,110 --> 00:13:52,990
another third you know so he tests are

00:13:48,860 --> 00:13:56,270
passing but then again there's no visual

00:13:52,990 --> 00:14:00,230
demonstration on how our application

00:13:56,270 --> 00:14:02,930
looks like now this is where the Cypress

00:14:00,230 --> 00:14:05,720
test runner comes in so Cypress has this

00:14:02,930 --> 00:14:09,020
unique offering where you can see your

00:14:05,720 --> 00:14:10,850
test we England interactively so as you

00:14:09,020 --> 00:14:14,060
can see whenever your tests are running

00:14:10,850 --> 00:14:16,700
you also have a live preview of your

00:14:14,060 --> 00:14:20,260
application every time you click or

00:14:16,700 --> 00:14:22,630
hover on any of the commands here the

00:14:20,260 --> 00:14:26,150
that's your honor will automatically

00:14:22,630 --> 00:14:28,850
replay the state of your application you

00:14:26,150 --> 00:14:30,770
can click before and after to see what

00:14:28,850 --> 00:14:33,620
your application would look like before

00:14:30,770 --> 00:14:35,600
and after doing an action and if you

00:14:33,620 --> 00:14:37,940
notice here you also have access to that

00:14:35,600 --> 00:14:41,420
post console so it makes the bar being

00:14:37,940 --> 00:14:44,540
so much easier another thing to note is

00:14:41,420 --> 00:14:47,420
that whenever you make changes to any of

00:14:44,540 --> 00:14:49,820
your Cyprus test the Cypress test runner

00:14:47,420 --> 00:14:52,220
will automatically check for any flower

00:14:49,820 --> 00:14:55,390
changes and then it will run your test

00:14:52,220 --> 00:14:57,590
so you don't have to keep on like

00:14:55,390 --> 00:14:59,330
running the same command you can just

00:14:57,590 --> 00:15:01,220
leave the cypress tester and there open

00:14:59,330 --> 00:15:03,640
and then whenever you make some code

00:15:01,220 --> 00:15:08,960
changes your test will automatically

00:15:03,640 --> 00:15:12,500
which is which is very great oh so now I

00:15:08,960 --> 00:15:14,720
will hand over to Geary so that we can

00:15:12,500 --> 00:15:19,300
talk about the future comparisons in

00:15:14,720 --> 00:15:19,300
depth between these two different tools

00:15:21,280 --> 00:15:25,270
thank you Mary thank you so much

00:15:25,360 --> 00:15:27,420
you

00:15:28,550 --> 00:15:30,610
you

00:15:31,600 --> 00:15:33,660
you

00:15:36,900 --> 00:15:42,760
thank you thank you so much Mary for

00:15:39,130 --> 00:15:44,790
your a wonderful explanation about Lee

00:15:42,760 --> 00:15:48,430
our architectural differences between

00:15:44,790 --> 00:15:50,440
selenium and Cypress impact and also for

00:15:48,430 --> 00:15:55,300
giving us a wonderful demo about these

00:15:50,440 --> 00:15:56,980
two tools having said this I'll just get

00:15:55,300 --> 00:15:58,930
into the comparisons so basically

00:15:56,980 --> 00:16:01,450
speaking this is all he compares

00:15:58,930 --> 00:16:04,030
lineaments four cycles for my personal

00:16:01,450 --> 00:16:06,310
experience perspective so basically

00:16:04,030 --> 00:16:08,410
speaking like many said both are having

00:16:06,310 --> 00:16:10,180
two different architectures

00:16:08,410 --> 00:16:11,590
so basically selenium is having a

00:16:10,180 --> 00:16:13,510
different disease my protocol

00:16:11,590 --> 00:16:16,750
architecture where a cypress has a

00:16:13,510 --> 00:16:19,380
different architecture actually but also

00:16:16,750 --> 00:16:21,640
we need to understand that the primary

00:16:19,380 --> 00:16:23,530
audience for both the pools are totally

00:16:21,640 --> 00:16:26,500
different so basically from selenium

00:16:23,530 --> 00:16:29,140
perspective the primary focus is from

00:16:26,500 --> 00:16:31,480
testers point of view - if you take

00:16:29,140 --> 00:16:33,400
Cypress it's more or less you know

00:16:31,480 --> 00:16:35,800
focused from the developer front-end

00:16:33,400 --> 00:16:38,440
developers point of view but again with

00:16:35,800 --> 00:16:40,180
the features that Cypress offers us it

00:16:38,440 --> 00:16:43,120
doesn't mean that it is restricted only

00:16:40,180 --> 00:16:45,130
to our developers but it can be extended

00:16:43,120 --> 00:16:46,750
to distance to provided if we know the

00:16:45,130 --> 00:16:51,070
limitations of the particular tool

00:16:46,750 --> 00:16:53,350
impact right so so having said this we

00:16:51,070 --> 00:16:55,180
will just get into the core comparison

00:16:53,350 --> 00:16:56,920
between these two tools so this is how I

00:16:55,180 --> 00:17:00,550
have designed this particular comparison

00:16:56,920 --> 00:17:02,950
so we will see amount couple of code

00:17:00,550 --> 00:17:06,130
comparisons and then we will see how

00:17:02,950 --> 00:17:08,079
selenium is giving more advantage thank

00:17:06,130 --> 00:17:10,589
cypress and then we will just see how

00:17:08,079 --> 00:17:13,180
cycles is giving more advantage than

00:17:10,589 --> 00:17:15,459
selenium actually so first thing first

00:17:13,180 --> 00:17:19,780
is the programming language I just saw a

00:17:15,459 --> 00:17:21,640
question from one element solution so

00:17:19,780 --> 00:17:24,310
basically speaking selenium does support

00:17:21,640 --> 00:17:27,310
many languages like Java C charge Rs

00:17:24,310 --> 00:17:31,320
which would be - etc which is absolutely

00:17:27,310 --> 00:17:31,320
great for any enterprise applications

00:17:31,830 --> 00:17:37,900
these programming languages has

00:17:34,030 --> 00:17:39,910
different language but again if you take

00:17:37,900 --> 00:17:41,770
Cypress it supports from B in JavaScript

00:17:39,910 --> 00:17:44,680
the reason behind that one like I said

00:17:41,770 --> 00:17:47,170
earlier it is much focused from the

00:17:44,680 --> 00:17:48,370
front-end developers perspective the

00:17:47,170 --> 00:17:50,120
reason behind that promise like

00:17:48,370 --> 00:17:52,610
cypresses meant to

00:17:50,120 --> 00:17:55,010
the into interesting for modern web

00:17:52,610 --> 00:17:57,410
applications which news or modern web

00:17:55,010 --> 00:18:00,920
technologies like react.js languages

00:17:57,410 --> 00:18:02,840
it's a tribe completely baseless right

00:18:00,920 --> 00:18:07,809
so that's the reason why Cyprus is

00:18:02,840 --> 00:18:10,880
supporting perspective where we can just

00:18:07,809 --> 00:18:14,300
go go with the into and testing strategy

00:18:10,880 --> 00:18:16,880
there so the other cool compulsion what

00:18:14,300 --> 00:18:18,920
I personally see as a test automation

00:18:16,880 --> 00:18:21,740
consultant is support for multiple

00:18:18,920 --> 00:18:25,520
browsers so like you see here

00:18:21,740 --> 00:18:29,110
selenium supports in number of browsers

00:18:25,520 --> 00:18:32,920
which is absolutely great also Cyprus

00:18:29,110 --> 00:18:35,420
supports the same set of you know

00:18:32,920 --> 00:18:38,240
browsers except a few browsers like

00:18:35,420 --> 00:18:39,710
Safari Opera and Internet Explorer but

00:18:38,240 --> 00:18:44,630
again if you see from the Cyprus

00:18:39,710 --> 00:18:46,850
perspective there are types of roses

00:18:44,630 --> 00:18:51,200
that are available I'll come to that in

00:18:46,850 --> 00:18:54,140
a minute but if you see what you see

00:18:51,200 --> 00:18:57,620
here on what we use as part of a part of

00:18:54,140 --> 00:18:59,950
our regular testing activities from the

00:18:57,620 --> 00:19:02,240
production perspective like we use the

00:18:59,950 --> 00:19:05,240
production releases of these browsers

00:19:02,240 --> 00:19:08,300
but if you take Cypress it supports

00:19:05,240 --> 00:19:10,100
cross-sell now thanks to the version 5

00:19:08,300 --> 00:19:11,780
matrix maybe we can just execute about

00:19:10,100 --> 00:19:15,170
these cases across thrown AIDS and

00:19:11,780 --> 00:19:17,960
Firefox the reason why Cypress supports

00:19:15,170 --> 00:19:22,520
available answers like chromium beta can

00:19:17,960 --> 00:19:24,530
be and browsers browser versions it's

00:19:22,520 --> 00:19:26,750
something like thinking a bit advanced

00:19:24,530 --> 00:19:28,550
so say for example from the business

00:19:26,750 --> 00:19:31,550
perspective and you're done making an

00:19:28,550 --> 00:19:32,990
application and the complication we need

00:19:31,550 --> 00:19:35,860
to check whether it is going to support

00:19:32,990 --> 00:19:37,970
the next version of say for example age

00:19:35,860 --> 00:19:39,620
right so we need to see whether it is

00:19:37,970 --> 00:19:43,760
going to support the next version of age

00:19:39,620 --> 00:19:45,890
which means before we push our push the

00:19:43,760 --> 00:19:47,330
one application to the production we

00:19:45,890 --> 00:19:49,820
need to make sure that it supports the

00:19:47,330 --> 00:19:51,410
beta version of the next you know my

00:19:49,820 --> 00:19:53,360
beta version of the particular browser

00:19:51,410 --> 00:19:55,460
so that's why that's where Cypress is

00:19:53,360 --> 00:19:57,260
very in developer friendly where they

00:19:55,460 --> 00:20:00,140
can try to execute all the test cases

00:19:57,260 --> 00:20:03,350
across different beta versions of

00:20:00,140 --> 00:20:03,840
browsers as well right so if you are

00:20:03,350 --> 00:20:05,460
using

00:20:03,840 --> 00:20:06,539
why shouldn't we know take some Cypress

00:20:05,460 --> 00:20:08,729
I don't think so that it supports

00:20:06,539 --> 00:20:12,619
multiple browsers you need upgrade to

00:20:08,729 --> 00:20:15,539
4.8 so please keep that in mind and

00:20:12,619 --> 00:20:18,479
manage get into the request points what

00:20:15,539 --> 00:20:20,969
selenium gives us so basically speaking

00:20:18,479 --> 00:20:22,799
we are going to see what are the

00:20:20,969 --> 00:20:25,739
advantages of using selenium over

00:20:22,799 --> 00:20:28,590
cyclists so first thing first since it

00:20:25,739 --> 00:20:31,080
supports multiple languages it needs to

00:20:28,590 --> 00:20:34,200
support multiple testing frameworks as

00:20:31,080 --> 00:20:38,710
well like testing gej unit in unit X

00:20:34,200 --> 00:20:42,130
unit in combat and mocha

00:20:38,710 --> 00:20:43,650
thank you Mary so yeah so it has so

00:20:42,130 --> 00:20:46,180
basically speaking this is wrong because

00:20:43,650 --> 00:20:48,430
frameworks that have you know synonyms

00:20:46,180 --> 00:20:51,580
or words whereas if you take Cypress and

00:20:48,430 --> 00:20:54,310
suppose only maca and I also inserted

00:20:51,580 --> 00:20:56,620
patients from the qnd only more also

00:20:54,310 --> 00:20:58,690
basically speaking again it's trenton

00:20:56,620 --> 00:21:00,760
and so we want its form it's meant for

00:20:58,690 --> 00:21:02,860
Franken developers and we just wanted to

00:21:00,760 --> 00:21:05,650
make sure that all the tests are written

00:21:02,860 --> 00:21:09,550
in a simple way and that's that's we

00:21:05,650 --> 00:21:12,240
know Cypress thanks you know front and

00:21:09,550 --> 00:21:14,860
when it comes to the remote execution

00:21:12,240 --> 00:21:17,350
Cypress sorry selenium is the king of

00:21:14,860 --> 00:21:20,380
the hill whereas Cypress doesn't support

00:21:17,350 --> 00:21:22,180
any remote execution a sophomore and if

00:21:20,380 --> 00:21:25,330
you take the multiple tabs and cross

00:21:22,180 --> 00:21:26,950
domain testing selenium is wonderful so

00:21:25,330 --> 00:21:28,750
what do you mean what I mean by cross

00:21:26,950 --> 00:21:31,450
domain testing is say for example like

00:21:28,750 --> 00:21:36,370
you wanted to switch between one domain

00:21:31,450 --> 00:21:41,620
to another behind say for example to I

00:21:36,370 --> 00:21:43,120
would say that the both the domains of

00:21:41,620 --> 00:21:45,160
these two applications are totally

00:21:43,120 --> 00:21:47,560
different so what happens is that

00:21:45,160 --> 00:21:49,090
particular support in Cypress is not so

00:21:47,560 --> 00:21:51,490
great we just have to restrict within

00:21:49,090 --> 00:21:53,410
one domain whereas if you take selenium

00:21:51,490 --> 00:21:56,110
because it is across any domains that

00:21:53,410 --> 00:21:58,750
are available and the next one is it has

00:21:56,110 --> 00:22:01,390
selenium has an excellent support for

00:21:58,750 --> 00:22:05,620
the cloud-based across browser testing

00:22:01,390 --> 00:22:07,420
things like Moses sauce labs etc so if

00:22:05,620 --> 00:22:09,970
you have an application that has to be

00:22:07,420 --> 00:22:13,090
executed with the different versions of

00:22:09,970 --> 00:22:17,080
Internet Explorer or Chrome browsers or

00:22:13,090 --> 00:22:19,000
you know all this kind of bounce else

00:22:17,080 --> 00:22:21,910
you can just use the static or sauce

00:22:19,000 --> 00:22:23,500
that's kind of things - currently I

00:22:21,910 --> 00:22:25,360
don't think so that it's then the road

00:22:23,500 --> 00:22:27,820
map as well I'm not very sure about it

00:22:25,360 --> 00:22:30,640
I'm not sure whether Cypress is going to

00:22:27,820 --> 00:22:34,240
support across browser testing tools us

00:22:30,640 --> 00:22:38,050
off now but but if you take me selenium

00:22:34,240 --> 00:22:40,090
side the it has an excellent support

00:22:38,050 --> 00:22:42,310
from the mobile testing perspective of

00:22:40,090 --> 00:22:44,230
course selenium and Cypress are meant

00:22:42,310 --> 00:22:46,510
when it when it is compact here it is

00:22:44,230 --> 00:22:48,010
meant only for the applications but I

00:22:46,510 --> 00:22:50,110
just wanted to bring a note here for

00:22:48,010 --> 00:22:51,910
people for you guys to understand so

00:22:50,110 --> 00:22:52,179
basically selenium supports our mobile

00:22:51,910 --> 00:22:53,980
is

00:22:52,179 --> 00:22:56,980
thing as well as Omega mobile testing

00:22:53,980 --> 00:22:59,019
using tools like a p.m. but cycles or

00:22:56,980 --> 00:23:01,450
something else about mobile testing or

00:22:59,019 --> 00:23:03,610
because it's completely based you know

00:23:01,450 --> 00:23:06,850
it focuses more from the applications

00:23:03,610 --> 00:23:09,190
perspective and but if you have an

00:23:06,850 --> 00:23:10,960
application that has viewport testing

00:23:09,190 --> 00:23:12,809
you can just use site assessment because

00:23:10,960 --> 00:23:15,820
it's having an excellent support for

00:23:12,809 --> 00:23:17,259
viewport and from the ceiling in

00:23:15,820 --> 00:23:19,529
perspective it has an excellent

00:23:17,259 --> 00:23:22,600
community support because of its legacy

00:23:19,529 --> 00:23:24,429
I've been using selenium for past bob

00:23:22,600 --> 00:23:27,399
eight years now and I'm sure the

00:23:24,429 --> 00:23:28,659
training is there for past and became so

00:23:27,399 --> 00:23:30,399
that's the reason why it is having an

00:23:28,659 --> 00:23:31,929
excellent community support whereas if

00:23:30,399 --> 00:23:34,360
you take Cypress it is an evolving

00:23:31,929 --> 00:23:36,070
community support it's been dead in the

00:23:34,360 --> 00:23:38,289
market for just three or three years and

00:23:36,070 --> 00:23:41,980
you're having an evolving community

00:23:38,289 --> 00:23:45,720
support a sophomore and the next one is

00:23:41,980 --> 00:23:45,720
something we are going to compare

00:23:51,580 --> 00:23:57,890
yeah so now it's compiled cyclists

00:23:55,690 --> 00:24:00,080
selenium whatever the plus points at our

00:23:57,890 --> 00:24:02,750
unit Cyprus when compared to seeing you

00:24:00,080 --> 00:24:05,990
first one it's absolutely fast it it

00:24:02,750 --> 00:24:09,230
does it is fast in compactive selenium

00:24:05,990 --> 00:24:11,330
for the execution the reason behind when

00:24:09,230 --> 00:24:13,640
selenium is a bit slow mode is because

00:24:11,330 --> 00:24:17,270
of its Jason while protocol like what

00:24:13,640 --> 00:24:20,960
Mary said there is a middle there is a

00:24:17,270 --> 00:24:22,780
middle layer that that consumes the code

00:24:20,960 --> 00:24:26,960
and then execute within the browser and

00:24:22,780 --> 00:24:29,360
the second part there's no driver

00:24:26,960 --> 00:24:33,050
dependency the main advantage of using

00:24:29,360 --> 00:24:34,760
Cypress against the selenium is there is

00:24:33,050 --> 00:24:36,680
no driver defined as such so say for

00:24:34,760 --> 00:24:38,660
example there is one big flakiness

00:24:36,680 --> 00:24:42,680
within or selling them that I have

00:24:38,660 --> 00:24:45,710
observed passing like having different

00:24:42,680 --> 00:24:49,870
versions of the driver for different say

00:24:45,710 --> 00:24:53,060
for example if I have a driver if I have

00:24:49,870 --> 00:24:55,550
and if it gets too updated what happens

00:24:53,060 --> 00:24:57,320
all of a sudden is like there might be a

00:24:55,550 --> 00:24:59,720
situation that you're driving on version

00:24:57,320 --> 00:25:01,970
of the updated version so in that case

00:24:59,720 --> 00:25:03,830
what happens is you'll be thrown a flaky

00:25:01,970 --> 00:25:05,930
you'll be thrown an exception saying

00:25:03,830 --> 00:25:07,640
that there's a mismatch found so you

00:25:05,930 --> 00:25:10,490
need to obtain the red dragon abortion

00:25:07,640 --> 00:25:13,280
so that kind of has illness is not their

00:25:10,490 --> 00:25:15,610
own Cyprus and the other important

00:25:13,280 --> 00:25:18,440
advantage of using Sun cross flow

00:25:15,610 --> 00:25:21,200
developers it has a built in box over

00:25:18,440 --> 00:25:23,570
and it has spice and clocks as well and

00:25:21,200 --> 00:25:25,670
when it comes to selling them it doesn't

00:25:23,570 --> 00:25:29,870
have any mocking support as of now which

00:25:25,670 --> 00:25:32,630
is which is made which is out of the box

00:25:29,870 --> 00:25:34,790
but again you can use external tools to

00:25:32,630 --> 00:25:38,030
do this particular mocking like knots

00:25:34,790 --> 00:25:39,680
over etcetera and we may be another

00:25:38,030 --> 00:25:42,320
advantage of using cypresses the

00:25:39,680 --> 00:25:44,750
exception validation support in fact if

00:25:42,320 --> 00:25:46,930
your application is very modern and if

00:25:44,750 --> 00:25:50,270
you have suffered such our validation

00:25:46,930 --> 00:25:51,830
Cyprus is really good to use when

00:25:50,270 --> 00:25:53,540
compared to selenium of course Iranian

00:25:51,830 --> 00:25:56,690
it is possible but you have to use third

00:25:53,540 --> 00:25:58,970
party tools and the other one is the

00:25:56,690 --> 00:26:00,950
Cyprus tests funnel which I feel it is

00:25:58,970 --> 00:26:03,600
absolutely great the reason kind that

00:26:00,950 --> 00:26:06,510
Venice being a tester I have

00:26:03,600 --> 00:26:09,330
being an automation mister I used to

00:26:06,510 --> 00:26:12,750
interact with many ministers who are

00:26:09,330 --> 00:26:14,880
their non-technical as well so basically

00:26:12,750 --> 00:26:17,280
speaking those things will not be having

00:26:14,880 --> 00:26:18,840
any technical knowledge about coding so

00:26:17,280 --> 00:26:20,669
what do you need to do is I just have to

00:26:18,840 --> 00:26:22,890
hand over them the code and tell them

00:26:20,669 --> 00:26:25,320
that nice execute this divine execute

00:26:22,890 --> 00:26:27,330
execute these tests using you know this

00:26:25,320 --> 00:26:29,010
particular stroller when I say keep it

00:26:27,330 --> 00:26:30,809
singing young the main problem is like

00:26:29,010 --> 00:26:32,390
it how selenium ID who's just recording

00:26:30,809 --> 00:26:35,309
playback absolutely great

00:26:32,390 --> 00:26:36,929
but it is not as good as Cypress like I

00:26:35,309 --> 00:26:38,970
said from test run and perspective the

00:26:36,929 --> 00:26:41,760
reason behind that premise the business

00:26:38,970 --> 00:26:43,650
testers has to set up everything in

00:26:41,760 --> 00:26:45,690
their mission right from all the IDE

00:26:43,650 --> 00:26:48,419
what we are trying to execute say for

00:26:45,690 --> 00:26:50,880
example eclipse or Visual Studio or

00:26:48,419 --> 00:26:53,010
whatever you know IDE turns maybe we are

00:26:50,880 --> 00:26:54,450
trying to write to the selenium code and

00:26:53,010 --> 00:26:56,400
then only they will be able to execute

00:26:54,450 --> 00:26:57,510
it whereas if you take Cypress they

00:26:56,400 --> 00:26:59,340
don't have to worry about anything

00:26:57,510 --> 00:27:02,039
assets all they need to do is like you

00:26:59,340 --> 00:27:04,309
Cypress test Runner and and start

00:27:02,039 --> 00:27:07,770
executing with these cases from there

00:27:04,309 --> 00:27:09,539
and the next one this amount to be able

00:27:07,770 --> 00:27:12,360
testing support I really like this

00:27:09,539 --> 00:27:14,010
particular feature Cypress actually

00:27:12,360 --> 00:27:16,080
because it is an internal testing to

00:27:14,010 --> 00:27:18,750
rewrite or it has the great support for

00:27:16,080 --> 00:27:21,299
almost all the layers of the automation

00:27:18,750 --> 00:27:24,210
pyramid we it suppose a pain testing has

00:27:21,299 --> 00:27:29,940
been developers really appreciate it

00:27:24,210 --> 00:27:32,789
using with inside party tools and when

00:27:29,940 --> 00:27:36,330
it comes to selenium also from probably

00:27:32,789 --> 00:27:39,330
it doesn't support API testing since it

00:27:36,330 --> 00:27:41,610
is just a browser automation tools and

00:27:39,330 --> 00:27:44,010
the other great advantage of using side

00:27:41,610 --> 00:27:46,620
versus automatic retrace guys I really

00:27:44,010 --> 00:27:48,030
appreciate the particular feature so in

00:27:46,620 --> 00:27:50,970
it comes to selenium we have to

00:27:48,030 --> 00:27:53,970
explicitly tell what is the time it has

00:27:50,970 --> 00:27:56,490
to be all we just have to you know

00:27:53,970 --> 00:27:58,620
implicit and explicit relates they

00:27:56,490 --> 00:28:00,720
cannot sleep or assets to just wait for

00:27:58,620 --> 00:28:04,470
that particular element to load and then

00:28:00,720 --> 00:28:07,049
we execute the next constantly one line

00:28:04,470 --> 00:28:08,610
of code but if you did Cypress we don't

00:28:07,049 --> 00:28:10,350
have to explicitly tell the don't keep

00:28:08,610 --> 00:28:12,299
wait for this such time or wait until

00:28:10,350 --> 00:28:13,409
they you know this time of happens you

00:28:12,299 --> 00:28:16,380
don't have to worry about it because

00:28:13,409 --> 00:28:17,250
Cypress has an automatic retries where

00:28:16,380 --> 00:28:19,800
you can

00:28:17,250 --> 00:28:23,070
you've all the test cases all the time

00:28:19,800 --> 00:28:25,260
Denis has in which brings which brings

00:28:23,070 --> 00:28:27,450
the non flakiness within the test case

00:28:25,260 --> 00:28:30,150
execution actually so that's why Cyprus

00:28:27,450 --> 00:28:32,280
claims that we are or they're they're

00:28:30,150 --> 00:28:35,040
less flaky when compared to other tools

00:28:32,280 --> 00:28:36,420
available and the other one is the

00:28:35,040 --> 00:28:38,250
automatic screenshots and videos

00:28:36,420 --> 00:28:39,480
capturing I know that you know many

00:28:38,250 --> 00:28:42,240
people appreciate you taking the

00:28:39,480 --> 00:28:45,240
screenshots and videos when dis cases

00:28:42,240 --> 00:28:46,530
I'm getting a executed if you take

00:28:45,240 --> 00:28:48,060
sitting and we need to manually

00:28:46,530 --> 00:28:49,260
something very plain when you have to

00:28:48,060 --> 00:28:50,670
take this thing shots with them to

00:28:49,260 --> 00:28:53,130
speeding or you have to put it in the

00:28:50,670 --> 00:28:54,900
catch block or something like that and

00:28:53,130 --> 00:28:56,340
you have to use third-party libraries to

00:28:54,900 --> 00:28:58,340
start recording the particular video

00:28:56,340 --> 00:29:01,140
when it is getting executed in the

00:28:58,340 --> 00:29:02,700
pipelines but if you take cycles you

00:29:01,140 --> 00:29:04,740
don't have to worry about it because it

00:29:02,700 --> 00:29:07,380
has automatic screenshots and windows

00:29:04,740 --> 00:29:09,060
feature and you can you can configure it

00:29:07,380 --> 00:29:12,360
by toggling it office and from the

00:29:09,060 --> 00:29:14,430
config file perspective and like me and

00:29:12,360 --> 00:29:17,850
said it is fight easy to install with

00:29:14,430 --> 00:29:19,890
one command like you install our Cypress

00:29:17,850 --> 00:29:22,170
but if you take sitting in it since it

00:29:19,890 --> 00:29:23,790
is having multiple components when

00:29:22,170 --> 00:29:25,950
you're just trying to tailor multiple

00:29:23,790 --> 00:29:27,930
components for selenium so that's the

00:29:25,950 --> 00:29:30,480
reason why we need to we need to use

00:29:27,930 --> 00:29:33,240
multiple commands and multiple you have

00:29:30,480 --> 00:29:34,950
you know line of quotes to stitch the

00:29:33,240 --> 00:29:37,260
particular framework Paris in Cyprus

00:29:34,950 --> 00:29:39,600
it's quite easy to do that and the other

00:29:37,260 --> 00:29:42,000
important feature as a developer what I

00:29:39,600 --> 00:29:44,400
appreciate is clear error messages

00:29:42,000 --> 00:29:45,720
actually so when it comes to selenium we

00:29:44,400 --> 00:29:48,000
are getting error messages which are

00:29:45,720 --> 00:29:49,560
absolutely great and but at the same

00:29:48,000 --> 00:29:52,500
time it is a little bit confusing as

00:29:49,560 --> 00:29:54,870
well which uses you know messages for

00:29:52,500 --> 00:29:56,430
long start trays with the errors they

00:29:54,870 --> 00:29:58,530
will not be able to understand many

00:29:56,430 --> 00:30:00,180
things - if you take Cyprus

00:29:58,530 --> 00:30:05,670
it's quite clear we will just see a

00:30:00,180 --> 00:30:07,020
small consequence lights and the other

00:30:05,670 --> 00:30:09,210
one is when it comes to the

00:30:07,020 --> 00:30:11,040
documentation perspective I personally

00:30:09,210 --> 00:30:13,440
feel that Cyprus is having an excellent

00:30:11,040 --> 00:30:16,200
documentation no selenium has excellent

00:30:13,440 --> 00:30:19,440
community support psychosis excellent

00:30:16,200 --> 00:30:21,360
documentation but selenium has long has

00:30:19,440 --> 00:30:23,630
when we average documentation since it

00:30:21,360 --> 00:30:27,750
is completely community based actually

00:30:23,630 --> 00:30:29,840
so so with these you know differences

00:30:27,750 --> 00:30:32,150
I'll just to show

00:30:29,840 --> 00:30:34,520
simple example of how test runner is

00:30:32,150 --> 00:30:36,650
going to help us and in adopting that

00:30:34,520 --> 00:30:39,820
this case is very quickly actually so

00:30:36,650 --> 00:30:42,169
when Mary was running the test runner

00:30:39,820 --> 00:30:43,460
Mary was executing that test cases

00:30:42,169 --> 00:30:45,590
through tests from her she just

00:30:43,460 --> 00:30:47,650
instituted it by clicking on the left

00:30:45,590 --> 00:30:50,390
hand side where test cases its executed

00:30:47,650 --> 00:30:52,190
but there is one another feature which I

00:30:50,390 --> 00:30:53,299
really like which side versus selector

00:30:52,190 --> 00:30:54,980
playground actually

00:30:53,299 --> 00:30:56,360
so what was it selector playground

00:30:54,980 --> 00:31:01,100
there's something like you can sell it

00:30:56,360 --> 00:31:02,720
to be the jQuery path of this particular

00:31:01,100 --> 00:31:04,610
component directly from the

00:31:02,720 --> 00:31:06,140
questionnaire itself so I'm just going

00:31:04,610 --> 00:31:09,140
to play this video so that you will be

00:31:06,140 --> 00:31:13,220
able to see that how you see from cycnus

00:31:09,140 --> 00:31:15,320
it is to take to be a locator and place

00:31:13,220 --> 00:31:22,039
acting the code and execute the test

00:31:15,320 --> 00:31:24,020
case actually so I'm just playing it so

00:31:22,039 --> 00:31:26,539
I'm just copying the code and I'm just

00:31:24,020 --> 00:31:28,760
going to visual studio and I'm just

00:31:26,539 --> 00:31:31,730
pasting it over here so that is the new

00:31:28,760 --> 00:31:36,610
to-do locator and I'm just going to type

00:31:31,730 --> 00:31:40,010
it I'm just going to add hello world to

00:31:36,610 --> 00:31:42,380
so like we saw in the previous movie

00:31:40,010 --> 00:31:44,510
maybe was taking it just executes on its

00:31:42,380 --> 00:31:46,309
own right the moment we say in the code

00:31:44,510 --> 00:31:48,710
it executes on its own so that's what

00:31:46,309 --> 00:31:50,929
happened now so if you see here we will

00:31:48,710 --> 00:31:52,850
be able to see how to do this because

00:31:50,929 --> 00:31:54,679
that I just save the code over there in

00:31:52,850 --> 00:31:57,260
which word studio and it automatically

00:31:54,679 --> 00:31:59,510
executed here they don't mean executing

00:31:57,260 --> 00:32:01,250
the test case manually so that is one

00:31:59,510 --> 00:32:03,110
feature that I really like it and the

00:32:01,250 --> 00:32:04,880
other one is regarding the clear

00:32:03,110 --> 00:32:07,880
messages which I was talking about right

00:32:04,880 --> 00:32:10,760
so let's take an example of the to-do

00:32:07,880 --> 00:32:11,929
list application itself so for just for

00:32:10,760 --> 00:32:14,270
this particular example

00:32:11,929 --> 00:32:17,179
sake we have just a real name to this

00:32:14,270 --> 00:32:20,210
particular field so we just remove a dot

00:32:17,179 --> 00:32:21,919
here so when we executed our selenium

00:32:20,210 --> 00:32:24,350
tests it was throwing this kind of an

00:32:21,919 --> 00:32:25,789
error which is not by some work field

00:32:24,350 --> 00:32:28,940
and it is not disturb friendly or you

00:32:25,789 --> 00:32:30,200
know so I need to just know and see what

00:32:28,940 --> 00:32:32,000
is that exception that is being thrown

00:32:30,200 --> 00:32:34,970
and everything whereas if you take

00:32:32,000 --> 00:32:36,380
Cypress it just shows clearly what is it

00:32:34,970 --> 00:32:38,870
particular error is all about this is

00:32:36,380 --> 00:32:41,270
just a simple example but if you

00:32:38,870 --> 00:32:43,100
consider major business applications or

00:32:41,270 --> 00:32:43,460
any enterprise applications you will be

00:32:43,100 --> 00:32:46,880
able

00:32:43,460 --> 00:32:48,860
understand usage of Cypress arrogance

00:32:46,880 --> 00:32:51,230
exists where it shows very clearly about

00:32:48,860 --> 00:32:53,450
what is the particular failure is all

00:32:51,230 --> 00:32:56,600
about right and the other one is the

00:32:53,450 --> 00:32:59,480
support for of xhr validation so this is

00:32:56,600 --> 00:33:01,490
a simple example from Cyprus perspective

00:32:59,480 --> 00:33:03,409
so all we need to do is like use

00:33:01,490 --> 00:33:07,309
fixtures where we just have to give the

00:33:03,409 --> 00:33:09,620
mock data it's again in JSON file from

00:33:07,309 --> 00:33:12,950
Cyprus perspective where we just publish

00:33:09,620 --> 00:33:15,679
all our data which has to be marked and

00:33:12,950 --> 00:33:17,149
to invoke with that particular so let me

00:33:15,679 --> 00:33:18,710
move the particular service we just

00:33:17,149 --> 00:33:22,720
start when you see wideout server and

00:33:18,710 --> 00:33:25,220
route it to the particular URL with the

00:33:22,720 --> 00:33:26,960
test data or there are the data that has

00:33:25,220 --> 00:33:30,110
to be displayed here and it can assert

00:33:26,960 --> 00:33:31,940
it using China as well over here so this

00:33:30,110 --> 00:33:34,039
is this is how we do exits our

00:33:31,940 --> 00:33:36,409
validation in a simple meal using Cyprus

00:33:34,039 --> 00:33:38,120
but again if you take selenium it is it

00:33:36,409 --> 00:33:40,360
supports exits are like I said earlier

00:33:38,120 --> 00:33:43,460
but I gained through party libraries

00:33:40,360 --> 00:33:45,679
like browse or proxy which is little bit

00:33:43,460 --> 00:33:47,720
tedious but I mean it is achievable you

00:33:45,679 --> 00:33:50,960
and just have to have more technical

00:33:47,720 --> 00:33:54,080
knowledge to do you know Suriname using

00:33:50,960 --> 00:33:56,419
browser more proxy so now that we have

00:33:54,080 --> 00:33:58,760
seen the code differences between a

00:33:56,419 --> 00:34:00,440
selenium and Cypress we will just see

00:33:58,760 --> 00:34:03,830
what are the common things that are

00:34:00,440 --> 00:34:07,070
there between these two tools actually

00:34:03,830 --> 00:34:09,379
so both Cypress and selenium are browser

00:34:07,070 --> 00:34:13,790
automation tools of course yes we all

00:34:09,379 --> 00:34:16,280
agree with that and open source Cypress

00:34:13,790 --> 00:34:18,200
has a commercial - good alone but the

00:34:16,280 --> 00:34:20,830
usage of Cypress is completely open

00:34:18,200 --> 00:34:23,030
source you can just start you know

00:34:20,830 --> 00:34:24,260
putting it and start using it

00:34:23,030 --> 00:34:26,869
so you don't have to worry about using

00:34:24,260 --> 00:34:29,060
Cypress again the commercial dashboard

00:34:26,869 --> 00:34:30,619
is optional if you want you can use it

00:34:29,060 --> 00:34:33,859
else you can just live with the open

00:34:30,619 --> 00:34:35,540
source version of Cypress itself and the

00:34:33,859 --> 00:34:38,599
reporting is highly customizable with

00:34:35,540 --> 00:34:42,109
these two tools so since you know

00:34:38,599 --> 00:34:44,330
selenium supports multiple reporting

00:34:42,109 --> 00:34:46,040
tools like it sent reports a extent

00:34:44,330 --> 00:34:47,859
reports all do reports etcetera you can

00:34:46,040 --> 00:34:50,540
just try to use that particular

00:34:47,859 --> 00:34:53,389
reporting tools over there when you take

00:34:50,540 --> 00:34:54,859
Cypress it supports mobile reporting

00:34:53,389 --> 00:34:56,600
which is absolutely great you can just

00:34:54,859 --> 00:34:58,850
customize it as well and

00:34:56,600 --> 00:35:01,760
you smoke also muslin which is which I

00:34:58,850 --> 00:35:05,030
personally use it in my you know project

00:35:01,760 --> 00:35:07,220
as well and both are having excellent CI

00:35:05,030 --> 00:35:09,320
CD pipe-laying support actually so so

00:35:07,220 --> 00:35:12,470
you can use the Cypress within a cacb

00:35:09,320 --> 00:35:15,110
environment using Jenkins or sample CI

00:35:12,470 --> 00:35:18,350
or Travis CI whatever it is it supports

00:35:15,110 --> 00:35:20,210
seamlessly and last but not the least I

00:35:18,350 --> 00:35:21,710
have a parallel execution and also both

00:35:20,210 --> 00:35:23,810
the tools the supports final execution

00:35:21,710 --> 00:35:27,140
of executing the best cases in parallel

00:35:23,810 --> 00:35:29,420
which eventually saves more time so with

00:35:27,140 --> 00:35:32,740
my personal experience what I have seen

00:35:29,420 --> 00:35:35,660
is like using the parallel execution

00:35:32,740 --> 00:35:37,520
methodology Cypress saves more you know

00:35:35,660 --> 00:35:42,500
time when compared to selenium in fact

00:35:37,520 --> 00:35:44,510
so raqudii said I believe that you'll be

00:35:42,500 --> 00:35:47,780
able to identify the differences between

00:35:44,510 --> 00:35:51,290
these two tools and it's up to you guys

00:35:47,780 --> 00:35:54,950
to decide which tool you know offers you

00:35:51,290 --> 00:35:59,860
the best usage of your requirement and

00:35:54,950 --> 00:35:59,860
with this said we are open for patience

00:36:03,660 --> 00:36:09,490
yes yeah we should have plenty of time

00:36:06,339 --> 00:36:14,319
so you can see where to access the Q&A

00:36:09,490 --> 00:36:18,130
is that can you and Marie see that but

00:36:14,319 --> 00:36:20,260
we're on mute yes okay perfect so then

00:36:18,130 --> 00:36:24,040
let's just start at the top and work our

00:36:20,260 --> 00:36:29,560
way down a little stuff in the bulb

00:36:24,040 --> 00:36:31,270
watch me I'll read the transmission so

00:36:29,560 --> 00:36:35,140
Venus recording what they do not be sad

00:36:31,270 --> 00:36:38,020
after drink the word sorry the recording

00:36:35,140 --> 00:36:44,369
office maybe not be shared awful yes yes

00:36:38,020 --> 00:36:49,060
so I'll be part of the recording or

00:36:44,369 --> 00:36:53,290
chili cannons Jasmine with cyclists as

00:36:49,060 --> 00:37:09,040
often oh sorry Cyprus supports one be

00:36:53,290 --> 00:37:11,050
more dominant to connect the chrome and

00:37:09,040 --> 00:37:13,150
similar drivers in each browser how the

00:37:11,050 --> 00:37:16,000
Cyprus hang all that connection or is

00:37:13,150 --> 00:37:18,930
that the same drivers under the hood so

00:37:16,000 --> 00:37:22,300
if you refer back to the architecture

00:37:18,930 --> 00:37:25,630
with Cyprus there's no middle layer so

00:37:22,300 --> 00:37:28,300
your tests don't need to interact with

00:37:25,630 --> 00:37:31,000
any of this different drivers I suppose

00:37:28,300 --> 00:37:33,369
with selenium so you just really need to

00:37:31,000 --> 00:37:35,560
run your Cyprus s and you don't have to

00:37:33,369 --> 00:37:37,630
worry about installing all the similar

00:37:35,560 --> 00:37:44,290
drivers because it's just running

00:37:37,630 --> 00:37:50,440
directly on the browser yeah good you

00:37:44,290 --> 00:37:50,859
want to take the next one Gary you're

00:37:50,440 --> 00:38:02,109
pissed

00:37:50,859 --> 00:38:04,329
so no it is actually so actually no so

00:38:02,109 --> 00:38:08,920
so basically speaking being social

00:38:04,329 --> 00:38:13,470
studio to write Cyprus tests and we use

00:38:08,920 --> 00:38:13,470
tests on to execute the test cases

00:38:17,470 --> 00:38:25,020
your slides shows Liam doesn't support

00:38:20,260 --> 00:38:29,500
Romeo or canary Chrome is that accurate

00:38:25,020 --> 00:38:31,240
so I know that selenium runs with the

00:38:29,500 --> 00:38:33,520
Chrome but I'm not sure because I

00:38:31,240 --> 00:38:37,480
haven't personally used using chromium

00:38:33,520 --> 00:38:41,190
or canary Chrome with selenium do you

00:38:37,480 --> 00:38:51,760
have experience with with this one Gary

00:38:41,190 --> 00:38:54,060
no no we can maybe look at this back and

00:38:51,760 --> 00:38:57,370
then we can give much more information

00:38:54,060 --> 00:39:00,910
I like selenium support all of those

00:38:57,370 --> 00:39:02,740
things yeah it might do but then again I

00:39:00,910 --> 00:39:05,170
don't have personal experience with

00:39:02,740 --> 00:39:06,880
running selenium tests which room you

00:39:05,170 --> 00:39:09,000
for a canary Chrome so we'll have to

00:39:06,880 --> 00:39:12,370
look into it

00:39:09,000 --> 00:39:14,440
does any of these frameworks have issues

00:39:12,370 --> 00:39:28,720
with a o p / k ID

00:39:14,440 --> 00:39:31,840
what is this acronym yeah I'll take it

00:39:28,720 --> 00:39:34,510
what is just maintenance look like most

00:39:31,840 --> 00:39:36,370
modern frameworks have you writing

00:39:34,510 --> 00:39:38,650
abstraction for easier page object

00:39:36,370 --> 00:39:40,510
maintenance the cyclist is a recommended

00:39:38,650 --> 00:39:42,520
pattern like page object pattern or

00:39:40,510 --> 00:39:48,940
something else I think you can answer

00:39:42,520 --> 00:39:51,850
this actually everyone you write your

00:39:48,940 --> 00:39:54,280
tests in JavaScript and you can create

00:39:51,850 --> 00:39:56,440
your own abstraction models on top of a

00:39:54,280 --> 00:39:58,750
test if you like page objects you can

00:39:56,440 --> 00:40:02,230
write a page object and so instead of

00:39:58,750 --> 00:40:06,280
like side get selector click you can say

00:40:02,230 --> 00:40:07,870
page object click on an item and when

00:40:06,280 --> 00:40:11,800
inside the click method you will say I

00:40:07,870 --> 00:40:15,580
get select row and so you can abstract

00:40:11,800 --> 00:40:16,240
access to particular elements so feel

00:40:15,580 --> 00:40:18,700
free to do that

00:40:16,240 --> 00:40:20,980
cypress also allows you to have custom

00:40:18,700 --> 00:40:24,250
commands so I think Mary showed like

00:40:20,980 --> 00:40:26,110
side that get to-do item right like this

00:40:24,250 --> 00:40:28,059
command that's not part of Cypress core

00:40:26,110 --> 00:40:30,699
it yeah but it's something which

00:40:28,059 --> 00:40:33,369
written in four tests so it's available

00:40:30,699 --> 00:40:36,579
in a project so you can do that as well

00:40:33,369 --> 00:40:39,489
feel free I personally don't think that

00:40:36,579 --> 00:40:42,640
page object models are as useful to be

00:40:39,489 --> 00:40:44,559
honest in Cyprus because of JavaScript

00:40:42,640 --> 00:40:46,479
and built in bundler you can write

00:40:44,559 --> 00:40:48,489
little helper functions if you need them

00:40:46,479 --> 00:40:50,920
and just import them directly you never

00:40:48,489 --> 00:40:54,309
have to create complex abstractions just

00:40:50,920 --> 00:41:00,999
for the purpose of the test so but you

00:40:54,309 --> 00:41:02,799
can definitely so from friend and what

00:41:00,999 --> 00:41:05,219
are the third-party tools that can

00:41:02,799 --> 00:41:07,869
actually likes HR support for selenium

00:41:05,219 --> 00:41:14,799
so as Carrie said you can look at the

00:41:07,869 --> 00:41:16,479
browser mob proxy as an option we share

00:41:14,799 --> 00:41:18,400
learning resources for both selenium and

00:41:16,479 --> 00:41:21,819
Sai plans yes we will you just to share

00:41:18,400 --> 00:41:23,920
it to broke and oh maybe sending it how

00:41:21,819 --> 00:41:32,170
much well it's possible the parallel

00:41:23,920 --> 00:41:34,390
testing on yeah so personally I haven't

00:41:32,170 --> 00:41:36,910
used the Cypress dashboard cause

00:41:34,390 --> 00:41:40,209
apparently Albert we just used the open

00:41:36,910 --> 00:41:43,630
source but we managed to do some

00:41:40,209 --> 00:41:47,289
parallel execution with using a circle

00:41:43,630 --> 00:41:49,660
CI so what we do is we split the tests

00:41:47,289 --> 00:41:53,229
in circle CI and we run it on different

00:41:49,660 --> 00:41:55,569
containers so if your CI provider allows

00:41:53,229 --> 00:41:57,369
you to run your excess on multiple

00:41:55,569 --> 00:42:00,099
agents you can achieve that without

00:41:57,369 --> 00:42:01,809
missing the dashboard but have a look at

00:42:00,099 --> 00:42:04,539
the cypress dashboard because it's just

00:42:01,809 --> 00:42:07,239
basically it takes all these different

00:42:04,539 --> 00:42:09,699
complexities for new so you can just

00:42:07,239 --> 00:42:12,670
focus on you know they're correcting all

00:42:09,699 --> 00:42:14,619
this test like like uh simultaneously so

00:42:12,670 --> 00:42:17,319
on have a look i'm not sure if they have

00:42:14,619 --> 00:42:18,969
a free electron for the cypress

00:42:17,319 --> 00:42:28,689
dashboard but you can like have a look

00:42:18,969 --> 00:42:31,299
at driver is a free trial you can run up

00:42:28,689 --> 00:42:34,089
to I think five hundred individual tests

00:42:31,299 --> 00:42:36,689
right per month and try the dashboard

00:42:34,089 --> 00:42:38,920
and you can definitely paralyze yourself

00:42:36,689 --> 00:42:42,110
that's what just makes it easy so you

00:42:38,920 --> 00:42:44,520
don't have to fiddle with config files

00:42:42,110 --> 00:42:46,500
wonderful thanks Kate thank you so much

00:42:44,520 --> 00:42:48,480
so the next question is from any time or

00:42:46,500 --> 00:42:50,550
can either one we used to automate

00:42:48,480 --> 00:42:53,730
mobile applications so basically

00:42:50,550 --> 00:42:56,250
speaking yes selenium supports of APM to

00:42:53,730 --> 00:42:59,720
do the native mobile applications but

00:42:56,250 --> 00:43:02,130
again few application is going to be

00:42:59,720 --> 00:43:04,500
responsive and it supports multiple

00:43:02,130 --> 00:43:06,270
viewport guesting Cypress is a good

00:43:04,500 --> 00:43:08,340
option to do that because it supports it

00:43:06,270 --> 00:43:10,440
currently both feature

00:43:08,340 --> 00:43:12,630
maybe we can just set up the viewport

00:43:10,440 --> 00:43:14,010
and you can execute the tests just like

00:43:12,630 --> 00:43:17,990
how we are executing it in your web

00:43:14,010 --> 00:43:17,990
application but with less time actually

00:43:19,520 --> 00:43:26,070
from Michael can you explain the CIC be

00:43:22,860 --> 00:43:28,290
support for selenium versus Cypress so

00:43:26,070 --> 00:43:31,880
if you're quite familiar with using

00:43:28,290 --> 00:43:36,120
defer selenium has official docker

00:43:31,880 --> 00:43:39,360
images for the selenium so you can run

00:43:36,120 --> 00:43:42,330
your tests on Chrome on Firefox on

00:43:39,360 --> 00:43:44,310
Cypress is low they have a lot of like

00:43:42,330 --> 00:43:45,390
different cypress images that you could

00:43:44,310 --> 00:43:48,540
use

00:43:45,390 --> 00:43:51,270
I believe if you're using circle CI you

00:43:48,540 --> 00:43:54,570
can also use the Cypress orbs which

00:43:51,270 --> 00:43:56,190
makes it easier to basically you know

00:43:54,570 --> 00:43:59,400
like run all the different commands

00:43:56,190 --> 00:44:01,410
without doing like extra installation so

00:43:59,400 --> 00:44:03,990
have a look at the official selenium

00:44:01,410 --> 00:44:06,180
docker images and I'm sure it will be on

00:44:03,990 --> 00:44:08,220
the Cypress documentation as well or in

00:44:06,180 --> 00:44:11,130
how to use all these different docker

00:44:08,220 --> 00:44:12,800
images so you can run it on your CI CD

00:44:11,130 --> 00:44:15,060
pipeline

00:44:12,800 --> 00:44:17,610
thanks Mary thank you so much time the

00:44:15,060 --> 00:44:20,220
next question is again from Anita or so

00:44:17,610 --> 00:44:22,350
so also been sitting in well-toned a

00:44:20,220 --> 00:44:30,300
field I'm not very sure about what is

00:44:22,350 --> 00:44:32,790
what does he means here from Dallas for

00:44:30,300 --> 00:44:35,240
xhr requests any validation against the

00:44:32,790 --> 00:44:39,450
json schema if we are using an endpoint

00:44:35,240 --> 00:44:41,910
so yes if your application is using xhr

00:44:39,450 --> 00:44:43,950
so you can actually debug this with the

00:44:41,910 --> 00:44:48,240
test runner so whenever you run the test

00:44:43,950 --> 00:44:50,130
runner you can see that on your on your

00:44:48,240 --> 00:44:52,500
like side that they sit underneath you

00:44:50,130 --> 00:44:55,750
will see like a list of different xhr

00:44:52,500 --> 00:44:58,120
requests that cyprus like then listen to

00:44:55,750 --> 00:45:01,210
if the endpoint that you're trying to

00:44:58,120 --> 00:45:04,330
test is listed there then you can do all

00:45:01,210 --> 00:45:05,950
sorts of validation you can test on it

00:45:04,330 --> 00:45:08,590
like real time by using the real

00:45:05,950 --> 00:45:10,420
endpoint or ass Giri showed on one of

00:45:08,590 --> 00:45:14,050
the mapping example you can mock that

00:45:10,420 --> 00:45:16,750
particular endpoint and like stop it

00:45:14,050 --> 00:45:22,030
with a read through the data that you

00:45:16,750 --> 00:45:24,880
want it the returned the next question

00:45:22,030 --> 00:45:27,400
is do you know if there is a way to lose

00:45:24,880 --> 00:45:30,340
Cypress on an agnostic environment or

00:45:27,400 --> 00:45:33,160
cyclist has plans to do this that is

00:45:30,340 --> 00:45:36,160
testing iOS app as we can do on a plant

00:45:33,160 --> 00:45:38,500
that is very uncommon and expensive do

00:45:36,160 --> 00:45:41,440
you want to take it in yes

00:45:38,500 --> 00:45:43,630
so right now Cypress is really tied to a

00:45:41,440 --> 00:45:45,850
browser it knows how to control the

00:45:43,630 --> 00:45:48,460
browser it knows how to launch Firefox a

00:45:45,850 --> 00:45:51,010
chrome or Microsoft edge it knows how to

00:45:48,460 --> 00:45:53,680
connect remotely by the protocol and do

00:45:51,010 --> 00:45:56,230
for web testing by running inside of a

00:45:53,680 --> 00:45:58,780
browser we have no idea about iOS or

00:45:56,230 --> 00:46:01,720
Android it's completely different beasts

00:45:58,780 --> 00:46:03,610
so we cannot apply the same thing the

00:46:01,720 --> 00:46:05,350
only company but I must suggest that

00:46:03,610 --> 00:46:08,200
kind of does the same for mobile

00:46:05,350 --> 00:46:10,060
applications I believe is a tool called

00:46:08,200 --> 00:46:12,910
detox from weeks

00:46:10,060 --> 00:46:14,680
they also load with testing code inside

00:46:12,910 --> 00:46:17,620
the application and so they can control

00:46:14,680 --> 00:46:20,740
from inside we have no plans to do that

00:46:17,620 --> 00:46:22,690
in fact I think the web will take over

00:46:20,740 --> 00:46:24,880
the world and soon all native mobile

00:46:22,690 --> 00:46:26,920
applications will be rewritten in

00:46:24,880 --> 00:46:29,200
something like I'd not react native or

00:46:26,920 --> 00:46:36,940
something so we are strong believers in

00:46:29,200 --> 00:46:39,490
the web technology thanks plip can

00:46:36,940 --> 00:46:41,110
Cyprus handle window dialog boxes for

00:46:39,490 --> 00:46:44,470
example if you try to automatic

00:46:41,110 --> 00:46:48,130
uploading an image I'd like to say no

00:46:44,470 --> 00:46:49,930
but mainly because I haven't automate

00:46:48,130 --> 00:46:52,690
this particular scenario where I have to

00:46:49,930 --> 00:46:57,160
upload an image but clubs maybe you can

00:46:52,690 --> 00:46:59,860
confirm yes this is the biggest

00:46:57,160 --> 00:47:02,140
shortcoming of Cyprus right now when you

00:46:59,860 --> 00:47:05,740
do file upload file download these are

00:47:02,140 --> 00:47:08,170
native browser events Cyprus runs inside

00:47:05,740 --> 00:47:09,250
the browser so it usually uses synthetic

00:47:08,170 --> 00:47:11,560
events right

00:47:09,250 --> 00:47:13,720
you know javascript click JavaScript

00:47:11,560 --> 00:47:16,480
type when you have to do like file

00:47:13,720 --> 00:47:19,349
upload it's a native event selenium

00:47:16,480 --> 00:47:23,200
sends and native events through a like

00:47:19,349 --> 00:47:25,390
driver protocol we are working right now

00:47:23,200 --> 00:47:27,430
on adding native events through chrome

00:47:25,390 --> 00:47:29,440
debugger protocol so that we can send

00:47:27,430 --> 00:47:32,400
the same event we just have an added cat

00:47:29,440 --> 00:47:35,590
people have all sorts of workarounds

00:47:32,400 --> 00:47:37,690
going around that but it's not as easy

00:47:35,590 --> 00:47:40,510
and I definitely think this is something

00:47:37,690 --> 00:47:42,849
we will implement you know sometimes

00:47:40,510 --> 00:47:48,310
this in this year to get all native

00:47:42,849 --> 00:47:49,450
events in Cyprus as well thank you so

00:47:48,310 --> 00:47:51,910
much

00:47:49,450 --> 00:47:54,580
cantaloupe selling rune simulates charge

00:47:51,910 --> 00:48:10,240
tests a lot of users doing the same

00:47:54,580 --> 00:48:11,890
thing at the same time I think this is

00:48:10,240 --> 00:48:14,410
what we mean right a lot of people

00:48:11,890 --> 00:48:16,630
charging at the same time at my website

00:48:14,410 --> 00:48:19,060
we don't have anything out of a box

00:48:16,630 --> 00:48:21,880
right but if you can spin like Marie

00:48:19,060 --> 00:48:23,980
said many containers on UCI you can

00:48:21,880 --> 00:48:26,320
execute the same test over and over and

00:48:23,980 --> 00:48:28,030
imagine hundred machines loading your

00:48:26,320 --> 00:48:31,119
website and going through the same and

00:48:28,030 --> 00:48:33,310
to enter which kind of simulates it but

00:48:31,119 --> 00:48:35,080
it's not specific tool for it right so

00:48:33,310 --> 00:48:38,440
it's hard to say are you you're gonna

00:48:35,080 --> 00:48:41,099
hit it at the same time I think what you

00:48:38,440 --> 00:48:44,200
are really looking for is a dedicated

00:48:41,099 --> 00:48:45,250
back-end load testing software but

00:48:44,200 --> 00:48:48,099
actually we will test your back-end

00:48:45,250 --> 00:48:50,980
because the front end is all separate

00:48:48,099 --> 00:48:55,650
anyway so going through the full web

00:48:50,980 --> 00:48:55,650
application might not be no meaningful

00:48:57,150 --> 00:49:02,619
next one from Jobin is it possible to

00:49:00,609 --> 00:49:06,220
use Cypress playground in browsers other

00:49:02,619 --> 00:49:08,320
than Chrome so yes as Carrie mentioned

00:49:06,220 --> 00:49:12,490
you do have to upgrade the site up to

00:49:08,320 --> 00:49:14,380
version 4.0 Macs and if you're using the

00:49:12,490 --> 00:49:16,839
Cypress tester you can just easily

00:49:14,380 --> 00:49:18,550
switch from one browser to another so

00:49:16,839 --> 00:49:20,530
there is a drop-down menu at the top

00:49:18,550 --> 00:49:22,720
right where if you have let's say

00:49:20,530 --> 00:49:25,450
Firefox it's thought or edge better

00:49:22,720 --> 00:49:27,280
Beata installed you can just switch to

00:49:25,450 --> 00:49:34,150
those different browsers and then your

00:49:27,280 --> 00:49:36,430
process will run and the other one is

00:49:34,150 --> 00:49:38,380
from Island we use gender for

00:49:36,430 --> 00:49:42,490
performance and no testing the Cypress

00:49:38,380 --> 00:49:43,869
provide a similar feature so I'm not

00:49:42,490 --> 00:49:46,240
very much sure about you know

00:49:43,869 --> 00:49:48,609
performance testing or using Cypress

00:49:46,240 --> 00:49:51,460
assets because Cypress is spent for web

00:49:48,609 --> 00:49:57,849
applications so like lip said earlier so

00:49:51,460 --> 00:49:59,710
you need to make and can you expect

00:49:57,849 --> 00:50:02,730
cycles to support languages other than

00:49:59,710 --> 00:50:02,730
genes in the future

00:50:03,880 --> 00:50:08,829
so we already support carbon script we

00:50:06,190 --> 00:50:11,099
just released typescript support so you

00:50:08,829 --> 00:50:13,450
don't have to set up your own transpiler

00:50:11,099 --> 00:50:15,670
ultimately whatever you write your tests

00:50:13,450 --> 00:50:17,500
will have to run in a browser and the

00:50:15,670 --> 00:50:20,170
only language that runs in the browser

00:50:17,500 --> 00:50:22,119
is JavaScript not there's no B the

00:50:20,170 --> 00:50:25,660
script flash nothing so we don't have

00:50:22,119 --> 00:50:28,720
main choices right but if you have a

00:50:25,660 --> 00:50:30,970
transpiler but converse let's say Java

00:50:28,720 --> 00:50:34,260
or Python code into JavaScript you can

00:50:30,970 --> 00:50:36,250
write your tests in in Python or Java

00:50:34,260 --> 00:50:37,960
but in cypressville

00:50:36,250 --> 00:50:41,530
executed JavaScript it's just there are

00:50:37,960 --> 00:50:44,170
no good transpilers so I would say like

00:50:41,530 --> 00:50:46,569
you said there is a benefit in having a

00:50:44,170 --> 00:50:48,400
single language for your web application

00:50:46,569 --> 00:50:50,680
which is has to be typescript adjusted

00:50:48,400 --> 00:50:52,810
and your specs because then you can sure

00:50:50,680 --> 00:50:55,869
culture knowledge writers at the same

00:50:52,810 --> 00:51:02,170
time it just becomes easier right to

00:50:55,869 --> 00:51:04,990
write the test in the same language is

00:51:02,170 --> 00:51:09,099
it recommended to have Cypress where'd

00:51:04,990 --> 00:51:10,599
it go so it's the Cypress you I'd always

00:51:09,099 --> 00:51:13,060
demonstrated part of the free

00:51:10,599 --> 00:51:18,280
open-source yes the Cypress test rather

00:51:13,060 --> 00:51:21,220
is completely free okay just before the

00:51:18,280 --> 00:51:22,750
next one Cypress has automatic

00:51:21,220 --> 00:51:24,970
screenshots is there a setting that you

00:51:22,750 --> 00:51:25,540
can be set off how many screenshots will

00:51:24,970 --> 00:51:30,280
be saved

00:51:25,540 --> 00:51:32,140
free of clutter I haven't seen it

00:51:30,280 --> 00:51:33,819
personally whether we can configure how

00:51:32,140 --> 00:51:36,099
many screenshots that they can take

00:51:33,819 --> 00:51:38,650
maybe have you seen anything money

00:51:36,099 --> 00:51:42,299
where you can restrict model so that we

00:51:38,650 --> 00:51:45,430
can restrict us such yeah yeah good

00:51:42,299 --> 00:51:47,259
since cyclists automatically retraced to

00:51:45,430 --> 00:51:52,359
execute the dist is there sitting that

00:51:47,259 --> 00:51:57,789
tells how many times to meet you can

00:51:52,359 --> 00:52:00,039
answer that one right so what what

00:51:57,789 --> 00:52:03,039
presentation showed was automatically

00:52:00,039 --> 00:52:04,839
try for a command inside the test so

00:52:03,039 --> 00:52:07,180
imagine you're trying to click on the

00:52:04,839 --> 00:52:11,349
button so you say sigh get me selector

00:52:07,180 --> 00:52:13,449
and when that click so bad that click my

00:52:11,349 --> 00:52:15,099
not necessarily have a button to click

00:52:13,449 --> 00:52:17,349
right away because your application

00:52:15,099 --> 00:52:19,119
might be redrawing itself so there is no

00:52:17,349 --> 00:52:21,279
button it hasn't appeared yet it's a

00:52:19,119 --> 00:52:25,239
dynamic application so well click

00:52:21,279 --> 00:52:28,359
automatic I will retry sided get and see

00:52:25,239 --> 00:52:30,789
if a button appears up to four seconds

00:52:28,359 --> 00:52:32,829
by default right so this is what it's

00:52:30,789 --> 00:52:34,809
meant by automatically try it doesn't

00:52:32,829 --> 00:52:37,119
run the whole test no it's just every

00:52:34,809 --> 00:52:39,640
command followed by assertion that can

00:52:37,119 --> 00:52:43,029
be safely retried like find me element

00:52:39,640 --> 00:52:46,479
right it will be retried until a times

00:52:43,029 --> 00:52:49,329
out or it's found an assertion passes so

00:52:46,479 --> 00:52:52,539
this is built in automatically we have a

00:52:49,329 --> 00:52:55,619
plug-in but retries the whole test right

00:52:52,539 --> 00:52:59,380
you can use the sciples plug-in retries

00:52:55,619 --> 00:53:02,589
we are putting it inside the core of

00:52:59,380 --> 00:53:04,660
application of Cypress so you can have a

00:53:02,589 --> 00:53:07,239
setting for each test or for globally

00:53:04,660 --> 00:53:08,890
saying if my test fails retry it up to

00:53:07,239 --> 00:53:11,920
three times for example because we're

00:53:08,890 --> 00:53:13,959
slake it's a full stack that's right so

00:53:11,920 --> 00:53:16,539
it's coming you can use plug-in for now

00:53:13,959 --> 00:53:17,339
but it's coming in probably next couple

00:53:16,539 --> 00:53:20,380
weeks

00:53:17,339 --> 00:53:22,779
test retries and it's going to be

00:53:20,380 --> 00:53:26,199
unbelievable because you have hundred

00:53:22,779 --> 00:53:28,150
test one test is like fails like one

00:53:26,199 --> 00:53:30,160
percent of the time you run it and it

00:53:28,150 --> 00:53:32,680
passes and it's so frustrating to start

00:53:30,160 --> 00:53:39,910
your whole build because of that we will

00:53:32,680 --> 00:53:41,949
will have its own so from Daniel back

00:53:39,910 --> 00:53:44,650
interesting possible with Cypress

00:53:41,949 --> 00:53:49,030
so if you mean like testing api's

00:53:44,650 --> 00:53:52,360
yes that's possible with Cyprus if you

00:53:49,030 --> 00:53:53,800
mean I guess like database testing I'm

00:53:52,360 --> 00:53:55,870
not sure it's like person do that

00:53:53,800 --> 00:53:57,970
because I haven't tried this personally

00:53:55,870 --> 00:54:00,400
but if you if you just want to test it

00:53:57,970 --> 00:54:07,270
APRs then yes you can definitely in

00:54:00,400 --> 00:54:10,780
Cyprus can use adjustment of more time

00:54:07,270 --> 00:54:13,990
cycles no not at the moment because not

00:54:10,780 --> 00:54:18,130
as quite you know quite good so that's

00:54:13,990 --> 00:54:20,320
why cycle supports it and the other one

00:54:18,130 --> 00:54:33,910
is ahead of time or just in time

00:54:20,320 --> 00:54:35,830
complete compiler can you use combined

00:54:33,910 --> 00:54:39,730
with Cyprus how would it benefit yes to

00:54:35,830 --> 00:54:44,350
my favorite topic actually so so yeah

00:54:39,730 --> 00:54:46,780
yeah so we can use that Cyprus and the

00:54:44,350 --> 00:54:48,970
mainly the benefits us is something like

00:54:46,780 --> 00:54:51,010
it's again an extremely and just like

00:54:48,970 --> 00:54:55,480
how it is it singing in fact there's a

00:54:51,010 --> 00:54:57,340
layer of writing you know acceptance

00:54:55,480 --> 00:55:01,510
criteria in simple English way but

00:54:57,340 --> 00:55:04,000
whatnot also some Cyprus is ridiculous

00:55:01,510 --> 00:55:05,920
because much faster acting a being

00:55:04,000 --> 00:55:08,470
whether if you are using mocha or cocoon

00:55:05,920 --> 00:55:16,180
bar it was very impressively fast or

00:55:08,470 --> 00:55:17,890
when compared to other from we have a

00:55:16,180 --> 00:55:19,900
large base of selenium tests at our

00:55:17,890 --> 00:55:23,410
company and are considering starting to

00:55:19,900 --> 00:55:25,240
move some heart size over to Cyprus then

00:55:23,410 --> 00:55:28,630
if you guys have experience how I said

00:55:25,240 --> 00:55:31,420
yeah so over I think like in the past

00:55:28,630 --> 00:55:36,130
like six months we were actually trying

00:55:31,420 --> 00:55:39,220
to migrate our web server ioss to Cyprus

00:55:36,130 --> 00:55:42,100
and my suggestion would be to don't do

00:55:39,220 --> 00:55:44,170
it big time like do it like like feature

00:55:42,100 --> 00:55:46,390
by feature definitely do it small and

00:55:44,170 --> 00:55:48,970
don't just delete your existing Cyprus

00:55:46,390 --> 00:55:50,440
task and your existing like selenium

00:55:48,970 --> 00:55:55,270
test because you still want to make sure

00:55:50,440 --> 00:55:58,690
that the existing tests they they still

00:55:55,270 --> 00:56:01,770
don't like go in ears if our developers

00:55:58,690 --> 00:56:05,290
like pushing some new code changes so

00:56:01,770 --> 00:56:07,750
III highly recommend to do it like a

00:56:05,290 --> 00:56:11,020
very basic POC first just have a basic

00:56:07,750 --> 00:56:13,660
si press test framework and then after

00:56:11,020 --> 00:56:15,640
you've got you know all the like basic

00:56:13,660 --> 00:56:17,110
setup just start to migrate one teacher

00:56:15,640 --> 00:56:20,860
at a time

00:56:17,110 --> 00:56:24,730
if you're using CI then I would suggest

00:56:20,860 --> 00:56:27,280
to actually do the CI integration at the

00:56:24,730 --> 00:56:29,260
very beginning like don't just write all

00:56:27,280 --> 00:56:32,020
the tests and then leave the CI at a bit

00:56:29,260 --> 00:56:34,060
so once you have one feature that you

00:56:32,020 --> 00:56:36,100
have migrated from selenium to Cypress

00:56:34,060 --> 00:56:37,780
the next thing that you want to look at

00:56:36,100 --> 00:56:41,080
is the CI

00:56:37,780 --> 00:56:42,880
integration so that way you can see how

00:56:41,080 --> 00:56:47,110
your Sai process are going to run when

00:56:42,880 --> 00:56:50,290
it's run on the build pipeline thing I

00:56:47,110 --> 00:56:51,610
just wanted to add on that particular if

00:56:50,290 --> 00:56:54,690
you really want to know how this

00:56:51,610 --> 00:56:56,830
migration has to be done our first

00:56:54,690 --> 00:56:59,860
webinar is going to happen on that

00:56:56,830 --> 00:57:02,440
particular topic of migration we're from

00:56:59,860 --> 00:57:04,780
UK is going to tell her personal

00:57:02,440 --> 00:57:07,180
experience of migrating tests probably

00:57:04,780 --> 00:57:08,680
you can register to the particular event

00:57:07,180 --> 00:57:13,390
and you can just get benefit out of the

00:57:08,680 --> 00:57:16,510
customer okay well we are out of time

00:57:13,390 --> 00:57:19,330
now it's super fast but thank you to all

00:57:16,510 --> 00:57:21,520
three of you Club Kitty Murray we

00:57:19,330 --> 00:57:23,760
appreciate your time excellent

00:57:21,520 --> 00:57:23,760

YouTube URL: https://www.youtube.com/watch?v=UHgtUSAROtc


