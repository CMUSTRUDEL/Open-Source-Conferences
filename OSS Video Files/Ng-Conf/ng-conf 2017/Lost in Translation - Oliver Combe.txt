Title: Lost in Translation - Oliver Combe
Publication date: 2017-04-06
Playlist: ng-conf 2017
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,000 --> 00:00:05,850
everyone I see that you are still here

00:00:02,850 --> 00:00:11,990
so it nice at the end of the day I hope

00:00:05,850 --> 00:00:15,299
that you can stay on ppm so Who I am I'm

00:00:11,990 --> 00:00:19,020
a contractor I work for the angular core

00:00:15,299 --> 00:00:23,400
team I've joined them two month ago so

00:00:19,020 --> 00:00:26,000
I'm still new and I've worked a lot of

00:00:23,400 --> 00:00:28,470
libraries and stuff like that I'm doing

00:00:26,000 --> 00:00:30,769
that on the internet so you might know

00:00:28,470 --> 00:00:33,989
me from angular air for example and

00:00:30,769 --> 00:00:36,960
today I'm going to show you how you can

00:00:33,989 --> 00:00:41,940
use angular to translate your

00:00:36,960 --> 00:00:43,829
application and from just with just

00:00:41,940 --> 00:00:49,200
angular without any external like

00:00:43,829 --> 00:00:53,750
library so internationalization also

00:00:49,200 --> 00:01:00,000
know as I Etienne what can I do for you

00:00:53,750 --> 00:01:03,870
so the way angular does ITM is that it's

00:01:00,000 --> 00:01:07,010
pushing you toward using äôt because

00:01:03,870 --> 00:01:09,930
what we want to do at Google is that

00:01:07,010 --> 00:01:12,920
people build the application and at

00:01:09,930 --> 00:01:17,400
Build time it will replace your string

00:01:12,920 --> 00:01:19,590
with with the translations and you can

00:01:17,400 --> 00:01:24,509
still use it in just in time we will see

00:01:19,590 --> 00:01:27,990
that during this hour but we we prefer

00:01:24,509 --> 00:01:30,299
to use a ot and with angular right now

00:01:27,990 --> 00:01:33,210
you can only use ITN in your templates I

00:01:30,299 --> 00:01:36,030
know that a lot of people want to use it

00:01:33,210 --> 00:01:37,290
in your code as well so if the video I'm

00:01:36,030 --> 00:01:41,579
working on right now

00:01:37,290 --> 00:01:44,250
and should be available pretty soon in

00:01:41,579 --> 00:01:49,049
tunes also if everything goes according

00:01:44,250 --> 00:01:53,820
to plan and and so let's see how it

00:01:49,049 --> 00:01:58,170
works first use you a bit your code to

00:01:53,820 --> 00:02:00,390
use ia TN o before before I stop this if

00:01:58,170 --> 00:02:02,369
you want to code along with me you

00:02:00,390 --> 00:02:04,530
should create a new application with the

00:02:02,369 --> 00:02:09,440
CLI because if I take a while to

00:02:04,530 --> 00:02:11,510
download the packages so just

00:02:09,440 --> 00:02:13,120
create a new application you can name it

00:02:11,510 --> 00:02:18,440
however you want

00:02:13,120 --> 00:02:20,690
ITN hook works well for example and once

00:02:18,440 --> 00:02:22,840
you've created it just make sure that

00:02:20,690 --> 00:02:26,960
your date package the JSON and replace

00:02:22,840 --> 00:02:29,690
the angular dependencies with 4.1 bits

00:02:26,960 --> 00:02:34,340
are zero because I'm going to show you

00:02:29,690 --> 00:02:37,910
something that brand-new and you can

00:02:34,340 --> 00:02:44,690
still use 4.0 but it'd be nice if you

00:02:37,910 --> 00:02:48,380
had for that one okay so you update your

00:02:44,690 --> 00:02:51,260
code UI you add ITN tags and everything

00:02:48,380 --> 00:02:52,960
in your template and then the next thing

00:02:51,260 --> 00:02:55,510
that you have to do is to extract

00:02:52,960 --> 00:02:58,780
extract those messages that you added

00:02:55,510 --> 00:03:01,310
that you want to translate so we have

00:02:58,780 --> 00:03:04,940
nice CLI tools that you can use for that

00:03:01,310 --> 00:03:08,570
and it would create a file that you can

00:03:04,940 --> 00:03:13,070
then send to you translators or you can

00:03:08,570 --> 00:03:15,230
translate yourself and we don't cover

00:03:13,070 --> 00:03:18,950
the translation part you should use an

00:03:15,230 --> 00:03:20,510
external tool there are a lot of great

00:03:18,950 --> 00:03:24,290
tools out there that you can use for

00:03:20,510 --> 00:03:28,910
that I'll add some link at the end if

00:03:24,290 --> 00:03:32,480
you want some examples and once you have

00:03:28,910 --> 00:03:35,870
your translation you should add this

00:03:32,480 --> 00:03:38,330
translation back into your code and we

00:03:35,870 --> 00:03:41,360
you can do that in just in time street

00:03:38,330 --> 00:03:45,260
or in äôt we will see both of those

00:03:41,360 --> 00:03:50,240
steps and then the last part is serve

00:03:45,260 --> 00:03:53,690
your applications so with angular ATM

00:03:50,240 --> 00:03:55,100
you shuld you have to reload your

00:03:53,690 --> 00:03:59,630
application if you change the language

00:03:55,100 --> 00:04:01,340
and the reason for that is that for alt

00:03:59,630 --> 00:04:04,130
you will build your file for each

00:04:01,340 --> 00:04:06,080
language so you will have to reload

00:04:04,130 --> 00:04:10,430
those file because you don't have the

00:04:06,080 --> 00:04:13,160
compiler in äôt and then you you cannot

00:04:10,430 --> 00:04:15,980
use a APN so

00:04:13,160 --> 00:04:20,959
so it has to it have to reload the the

00:04:15,980 --> 00:04:22,490
builded file and injecting time we have

00:04:20,959 --> 00:04:25,400
the same be aware you have to reload the

00:04:22,490 --> 00:04:27,740
application because you will give the

00:04:25,400 --> 00:04:29,690
translation at bootstrap and you cannot

00:04:27,740 --> 00:04:34,820
really bootstrap your application

00:04:29,690 --> 00:04:38,060
without reloading the page okay so let's

00:04:34,820 --> 00:04:43,100
prepare the code how can you use ATM in

00:04:38,060 --> 00:04:46,990
your template the lot of different ways

00:04:43,100 --> 00:04:51,670
to do it first one is to add an ia TN

00:04:46,990 --> 00:04:56,060
tag attribute to your fuel element and

00:04:51,670 --> 00:04:59,450
you can add some some text to this

00:04:56,060 --> 00:05:02,060
attribute separated in three parts first

00:04:59,450 --> 00:05:04,310
one is the meaning then the description

00:05:02,060 --> 00:05:07,610
and then the last one is the ID

00:05:04,310 --> 00:05:10,700
all of them are optional it's just that

00:05:07,610 --> 00:05:12,800
it else to add meaning and description

00:05:10,700 --> 00:05:14,630
for the people will translate your

00:05:12,800 --> 00:05:18,140
application if it's not you they might

00:05:14,630 --> 00:05:19,760
not know that your title for example if

00:05:18,140 --> 00:05:22,220
is not the main title of your

00:05:19,760 --> 00:05:26,180
application it's just some part of it or

00:05:22,220 --> 00:05:28,160
that validate is it the button for this

00:05:26,180 --> 00:05:32,750
part of your application things like

00:05:28,160 --> 00:05:36,080
that and the ID is so that when you

00:05:32,750 --> 00:05:39,110
change the text it doesn't change the ID

00:05:36,080 --> 00:05:43,550
in your translation files because by

00:05:39,110 --> 00:05:46,430
default when you extract the strings we

00:05:43,550 --> 00:05:48,500
will generate a random ID not random we

00:05:46,430 --> 00:05:51,830
generate an ID based on the content of

00:05:48,500 --> 00:05:54,919
your tags so if you change the text the

00:05:51,830 --> 00:05:57,320
idea would be different it can be nice

00:05:54,919 --> 00:05:59,200
to set the ID yourself so that it

00:05:57,320 --> 00:06:04,370
doesn't change when you extract again

00:05:59,200 --> 00:06:07,730
your your strings and then if it just

00:06:04,370 --> 00:06:09,410
some text in the middle of a big part of

00:06:07,730 --> 00:06:13,910
your code that you want to translate you

00:06:09,410 --> 00:06:16,880
can use a command as well I usually

00:06:13,910 --> 00:06:20,000
prefer to just use the span but you can

00:06:16,880 --> 00:06:21,800
use current if you want and then if you

00:06:20,000 --> 00:06:24,490
want to translate attributes for example

00:06:21,800 --> 00:06:28,750
the alt attribute in

00:06:24,490 --> 00:06:32,500
new mg in an image you just add IAT and

00:06:28,750 --> 00:06:34,810
- at the beginning and it will take the

00:06:32,500 --> 00:06:38,530
content of out as the string to

00:06:34,810 --> 00:06:40,030
translate and the same thing that you

00:06:38,530 --> 00:06:42,370
did before you can add the meaning

00:06:40,030 --> 00:06:45,699
description and ID and it works for all

00:06:42,370 --> 00:06:48,639
attributes even if you add custom

00:06:45,699 --> 00:06:51,610
attributes you just add I ATM - before

00:06:48,639 --> 00:06:56,250
that and it has to be some it has to be

00:06:51,610 --> 00:06:59,530
a string it doesn't work with variable

00:06:56,250 --> 00:07:03,639
okay so let's see let's see this and

00:06:59,530 --> 00:07:06,520
quickly in your application so with the

00:07:03,639 --> 00:07:09,300
CLI you just created a new application

00:07:06,520 --> 00:07:14,800
and then you have this app component

00:07:09,300 --> 00:07:17,409
there so I I put the template inside of

00:07:14,800 --> 00:07:19,930
the component because it's easier for me

00:07:17,409 --> 00:07:22,690
that you can have an external template

00:07:19,930 --> 00:07:25,569
as well so if you want to translate your

00:07:22,690 --> 00:07:27,460
title here the string is in your

00:07:25,569 --> 00:07:36,400
component so you should put it back

00:07:27,460 --> 00:07:40,900
inside of your template okay you put it

00:07:36,400 --> 00:07:45,820
back here better if you remove the

00:07:40,900 --> 00:07:48,099
trailing and as tailing and leading

00:07:45,820 --> 00:07:52,030
spaces because otherwise it will be

00:07:48,099 --> 00:07:52,659
expected as well and then you add a ATM

00:07:52,030 --> 00:07:56,650
here

00:07:52,659 --> 00:08:00,060
and so when you extract it will extract

00:07:56,650 --> 00:08:04,690
the content of this tag so app works and

00:08:00,060 --> 00:08:11,080
if you want to add some meaning you can

00:08:04,690 --> 00:08:14,289
just do like this and you separate with

00:08:11,080 --> 00:08:21,639
the pipe for the description and for the

00:08:14,289 --> 00:08:24,430
ID like a double app you can use if you

00:08:21,639 --> 00:08:28,270
let's say that in your you create a div

00:08:24,430 --> 00:08:31,030
here and then it has some some text in

00:08:28,270 --> 00:08:32,990
it and you also add some of the tags in

00:08:31,030 --> 00:08:35,800
the middle for

00:08:32,990 --> 00:08:40,220
or you can have another one here with

00:08:35,800 --> 00:08:42,410
both text if you want to translate all

00:08:40,220 --> 00:08:45,530
of that you can just put a etienne on

00:08:42,410 --> 00:08:49,190
the first one and all of that will be

00:08:45,530 --> 00:08:50,900
extracted and you can also use variable

00:08:49,190 --> 00:08:55,130
in the middle they will be replaced with

00:08:50,900 --> 00:08:58,730
placeholders when you extract so if you

00:08:55,130 --> 00:09:01,840
have some I don't know hit em for

00:08:58,730 --> 00:09:10,130
example which is an area of something

00:09:01,840 --> 00:09:16,100
and you use ATMs here you will see them

00:09:10,130 --> 00:09:21,950
in in the extracted text after that okay

00:09:16,100 --> 00:09:25,250
so we added some some content yeah let's

00:09:21,950 --> 00:09:27,230
let's create an image as well and since

00:09:25,250 --> 00:09:29,540
we don't have any image you know you

00:09:27,230 --> 00:09:32,060
know code you know application right now

00:09:29,540 --> 00:09:34,540
it will sell and we will see the alt

00:09:32,060 --> 00:09:34,540
text

00:09:40,760 --> 00:09:49,380
so don't forget to add the ITN out if

00:09:46,200 --> 00:09:55,800
you want to see them the translation

00:09:49,380 --> 00:09:58,050
later you know laughter okay so let's

00:09:55,800 --> 00:10:01,080
let's stop the application right now we

00:09:58,050 --> 00:10:02,730
haven't done any translation we just

00:10:01,080 --> 00:10:05,580
added the code so it's it should work

00:10:02,730 --> 00:10:25,490
exactly the same with a widow without

00:10:05,580 --> 00:10:25,490
ITN tag attribute building

00:10:30,100 --> 00:10:38,050
okay so yeah we have the alt here so

00:10:34,450 --> 00:10:39,700
this is in English and you can write

00:10:38,050 --> 00:10:43,270
your application in any locale you can

00:10:39,700 --> 00:10:45,040
set the source local once you when you

00:10:43,270 --> 00:10:47,710
extract and when you merge the applicate

00:10:45,040 --> 00:10:52,510
your code and your translation back into

00:10:47,710 --> 00:11:01,240
your application so let's see how we can

00:10:52,510 --> 00:11:04,090
extract the strings yeah before we do

00:11:01,240 --> 00:11:08,220
that we have this nice thing in in

00:11:04,090 --> 00:11:10,060
angular named ITU which is international

00:11:08,220 --> 00:11:15,000
internationalization components for

00:11:10,060 --> 00:11:17,320
Unicode it's a it's a standout kind of

00:11:15,000 --> 00:11:20,860
thing that exists in a lot of languages

00:11:17,320 --> 00:11:26,530
and we use it in angular as well and how

00:11:20,860 --> 00:11:29,230
does it work so we can get let's say

00:11:26,530 --> 00:11:33,420
that you have some some elements which

00:11:29,230 --> 00:11:37,180
is a number you can use the ICU pool to

00:11:33,420 --> 00:11:40,390
have a different text depending on the

00:11:37,180 --> 00:11:43,480
number of elements and the other ICU

00:11:40,390 --> 00:11:46,480
that you can use is select which in this

00:11:43,480 --> 00:11:49,150
case will we will have different text

00:11:46,480 --> 00:11:51,280
depending on a screen so the first one

00:11:49,150 --> 00:11:56,890
is phone numbers the second one is for

00:11:51,280 --> 00:11:59,140
string and so through alights use you

00:11:56,890 --> 00:12:01,900
can use equal and a number any number

00:11:59,140 --> 00:12:06,250
that you want or you have some keywords

00:12:01,900 --> 00:12:11,320
such as puzzle and you also have a few

00:12:06,250 --> 00:12:15,430
mini one and two and zero that you can

00:12:11,320 --> 00:12:18,250
use they they can be used in some

00:12:15,430 --> 00:12:20,290
languages such as Russian for example

00:12:18,250 --> 00:12:23,590
where they are different rules depending

00:12:20,290 --> 00:12:26,470
on the number of elements and you will

00:12:23,590 --> 00:12:28,330
use few and many in those cases if you

00:12:26,470 --> 00:12:33,030
want to see the list of through our

00:12:28,330 --> 00:12:35,670
rules in the code we have a nice switch

00:12:33,030 --> 00:12:39,440
with all the locals

00:12:35,670 --> 00:12:42,960
and for some of them we had some rules

00:12:39,440 --> 00:12:49,590
some are more complicated another so for

00:12:42,960 --> 00:12:53,040
example the Russian see in some numbers

00:12:49,590 --> 00:12:56,970
you use few in other many and for the

00:12:53,040 --> 00:13:00,270
red other and it is this is defined in

00:12:56,970 --> 00:13:04,320
the Unicode steak so you can see this is

00:13:00,270 --> 00:13:06,360
really really really long and this is a

00:13:04,320 --> 00:13:11,280
nice thing to have when you can't play

00:13:06,360 --> 00:13:13,050
because you can use it or you can to

00:13:11,280 --> 00:13:16,530
translate or can remove it if he doesn't

00:13:13,050 --> 00:13:18,930
need to use it but you have to be aware

00:13:16,530 --> 00:13:21,720
that it depends on the locale it will

00:13:18,930 --> 00:13:25,380
apply the rules if the local ID that you

00:13:21,720 --> 00:13:29,460
provide is it one that has those special

00:13:25,380 --> 00:13:31,260
rules let's have some of these inside of

00:13:29,460 --> 00:13:38,610
applications so we can see them when we

00:13:31,260 --> 00:13:41,210
extract so we can scoop it up this in

00:13:38,610 --> 00:13:41,210
Rosasco

00:13:43,280 --> 00:13:50,760
okay so the ICU is surrounded by a

00:13:46,860 --> 00:13:54,360
simple bracket at the start and a DM

00:13:50,760 --> 00:13:56,760
then you have the divided on which to

00:13:54,360 --> 00:14:01,050
the difference so let's use items here

00:13:56,760 --> 00:14:04,650
and then you give the name of the ICU

00:14:01,050 --> 00:14:08,790
plural or select and then you define

00:14:04,650 --> 00:14:11,570
some rules and you can use inside of

00:14:08,790 --> 00:14:18,150
your text you can use variables as well

00:14:11,570 --> 00:14:20,670
so items in this case usually the IDS

00:14:18,150 --> 00:14:22,830
don't really like this kind of thing

00:14:20,670 --> 00:14:25,980
because they don't understand ICU so you

00:14:22,830 --> 00:14:29,820
might have some Euro code here but it

00:14:25,980 --> 00:14:32,370
actually works and so in this case we

00:14:29,820 --> 00:14:35,070
have zero elements so we should see no

00:14:32,370 --> 00:14:37,260
selection and it works even before you

00:14:35,070 --> 00:14:42,500
extract the text so if I say my

00:14:37,260 --> 00:14:45,480
application my good and I I checked here

00:14:42,500 --> 00:14:48,030
you see that I had no elements so it

00:14:45,480 --> 00:14:49,600
outputs node selection so this is

00:14:48,030 --> 00:14:51,069
something that you can use even if you

00:14:49,600 --> 00:14:53,110
if you don't want to translate your

00:14:51,069 --> 00:14:56,110
application but you want to add some

00:14:53,110 --> 00:14:58,089
kind of switch case for your text in

00:14:56,110 --> 00:15:01,259
your language you can use I - you just

00:14:58,089 --> 00:15:04,980
have to make sure that USB IIT and tag

00:15:01,259 --> 00:15:10,720
attributes on your on your element and

00:15:04,980 --> 00:15:14,500
if you want to add some some select as

00:15:10,720 --> 00:15:17,980
well and yeah a nice thing is that you

00:15:14,500 --> 00:15:20,980
can mix those I see you you can use

00:15:17,980 --> 00:15:23,880
another I see you inside of this one so

00:15:20,980 --> 00:15:29,829
let's say that instead of you you have

00:15:23,880 --> 00:15:32,800
one element and you want to say that she

00:15:29,829 --> 00:15:40,329
or he gave me then you would use another

00:15:32,800 --> 00:15:43,800
IP you select inside of it when I meant

00:15:40,329 --> 00:15:51,220
that I got from selected that gender

00:15:43,800 --> 00:15:54,160
here equal a female and so the different

00:15:51,220 --> 00:15:56,949
values are before the photo text so in

00:15:54,160 --> 00:15:59,500
the case the different string values of

00:15:56,949 --> 00:16:01,470
gender should be male or female but you

00:15:59,500 --> 00:16:05,529
are you can have how many you can have

00:16:01,470 --> 00:16:10,839
how many you want in this is just a

00:16:05,529 --> 00:16:13,540
simple check against the string so if I

00:16:10,839 --> 00:16:16,799
save this let's say that I am an element

00:16:13,540 --> 00:16:16,799
[Music]

00:16:19,860 --> 00:16:25,439
1 element that I got from her because

00:16:22,930 --> 00:16:29,079
the value was female

00:16:25,439 --> 00:16:34,800
okay now let's see how we can extract

00:16:29,079 --> 00:16:40,230
extract dolls so the extraction uses

00:16:34,800 --> 00:16:43,810
something called ng XY ATM which is

00:16:40,230 --> 00:16:46,149
inside the compiler compilers July the

00:16:43,810 --> 00:16:48,300
same package that contains ng see that

00:16:46,149 --> 00:16:54,339
you will use for aut

00:16:48,300 --> 00:16:56,800
when you build for a ot and so we just

00:16:54,339 --> 00:16:58,449
see Li you have some special commands

00:16:56,800 --> 00:17:00,179
that you can use that as well

00:16:58,449 --> 00:17:03,839
and the parameters are all the same

00:17:00,179 --> 00:17:09,490
widow with the tli you just remove the

00:17:03,839 --> 00:17:11,500
dash here and with the CLI they are just

00:17:09,490 --> 00:17:15,760
one thing that you can use it the output

00:17:11,500 --> 00:17:19,480
path so when you say that your file will

00:17:15,760 --> 00:17:21,519
be an XLS file you have two choices XLS

00:17:19,480 --> 00:17:25,659
or XMB I will explain later what the

00:17:21,519 --> 00:17:28,120
difference is and the elf file you can

00:17:25,659 --> 00:17:30,639
give a path here but with the CLI you

00:17:28,120 --> 00:17:34,000
can put the path in output path if you

00:17:30,639 --> 00:17:36,190
prefer and then the local is the local

00:17:34,000 --> 00:17:41,380
of the of your application before

00:17:36,190 --> 00:17:44,590
translation in this case we use en but

00:17:41,380 --> 00:17:47,980
you can put anything here just try to

00:17:44,590 --> 00:17:52,200
remember that you have to use you you'd

00:17:47,980 --> 00:17:56,200
better use one of the official language

00:17:52,200 --> 00:18:02,289
cling so you have en or en-us for

00:17:56,200 --> 00:18:04,059
example um UK FL FL SS TR and those kind

00:18:02,289 --> 00:18:07,570
of strings it's what you can get when

00:18:04,059 --> 00:18:12,669
you use the Navigator language in your

00:18:07,570 --> 00:18:22,480
browser and so let's use this one with

00:18:12,669 --> 00:18:25,929
the CLI for application so yeah we have

00:18:22,480 --> 00:18:30,549
to format excel as the one by default

00:18:25,929 --> 00:18:34,750
and it's both of the format's are XML

00:18:30,549 --> 00:18:37,510
based but XLS is what you will use in a

00:18:34,750 --> 00:18:39,990
lot of other languages as well for

00:18:37,510 --> 00:18:44,679
example if you write an iOS application

00:18:39,990 --> 00:18:48,240
you will use XLS file and XMB is

00:18:44,679 --> 00:18:51,940
something that Google uses mostly Google

00:18:48,240 --> 00:18:54,490
if you use closure you can use x mb

00:18:51,940 --> 00:18:57,639
files as well with closure but closure

00:18:54,490 --> 00:19:00,639
is from google code the file so in this

00:18:57,639 --> 00:19:03,669
case we will use XLS and the reason why

00:19:00,639 --> 00:19:07,480
I told you to use for that one beta0 is

00:19:03,669 --> 00:19:09,830
that because the IQ expression we are

00:19:07,480 --> 00:19:15,350
not extracted before

00:19:09,830 --> 00:19:18,289
for that one for xlx so if you use 4.0

00:19:15,350 --> 00:19:22,669
you won't be does this rule one be

00:19:18,289 --> 00:19:24,889
extracted in your translation file so

00:19:22,669 --> 00:19:29,629
let's run this command and see it should

00:19:24,889 --> 00:19:32,029
create a file named sauce dot XLS inside

00:19:29,629 --> 00:19:35,869
of SSDI atm

00:19:32,029 --> 00:19:38,119
and to do that the CLI will rebuild your

00:19:35,869 --> 00:19:41,090
world application so use the as well

00:19:38,119 --> 00:19:44,419
build folder click Edit folder created

00:19:41,090 --> 00:19:47,269
here because it needs to resolve all of

00:19:44,419 --> 00:19:49,399
your files if you load template for

00:19:47,269 --> 00:19:50,869
example external files and stuff like

00:19:49,399 --> 00:19:52,399
that it has to combine the whole

00:19:50,869 --> 00:19:58,239
application to make sure that you have

00:19:52,399 --> 00:20:02,779
everything and so it created a sauce XLS

00:19:58,239 --> 00:20:08,779
and this is a nice XML and we all love

00:20:02,779 --> 00:20:12,139
XML and in this case and this is all of

00:20:08,779 --> 00:20:16,669
the itn thing that we added in our

00:20:12,139 --> 00:20:19,070
template so you can see that so the

00:20:16,669 --> 00:20:24,200
first one for example is the title that

00:20:19,070 --> 00:20:28,759
we add here we added meaning description

00:20:24,200 --> 00:20:32,330
and ID and we can find them here meaning

00:20:28,759 --> 00:20:36,730
the description and the ID for this bit

00:20:32,330 --> 00:20:39,909
string this message and this hood is the

00:20:36,730 --> 00:20:42,559
actual text in your in your code and

00:20:39,909 --> 00:20:46,309
when you do your translation you will

00:20:42,559 --> 00:20:51,499
copy this style for each language that

00:20:46,309 --> 00:20:55,850
you want to do and for example if I want

00:20:51,499 --> 00:21:00,859
to translate this in French I will

00:20:55,850 --> 00:21:04,749
create another copy of this and I will

00:21:00,859 --> 00:21:04,749
add the translation inside of target

00:21:05,259 --> 00:21:18,070
here and when I load this it will

00:21:14,779 --> 00:21:21,429
replace up works with the French

00:21:18,070 --> 00:21:24,109
application from replication function

00:21:21,429 --> 00:21:26,629
and so you should do it for all of your

00:21:24,109 --> 00:21:31,340
translations and you can see that I see

00:21:26,629 --> 00:21:40,399
you let's see the variables that we add

00:21:31,340 --> 00:21:42,889
inside of some text here we had a TM we

00:21:40,399 --> 00:21:48,980
can find it here replaced with with this

00:21:42,889 --> 00:21:51,440
tag this interpolation so that when your

00:21:48,980 --> 00:21:55,009
translator take this file if you have to

00:21:51,440 --> 00:21:57,049
move around the interpolation they can

00:21:55,009 --> 00:21:59,359
move it for example at the beginning or

00:21:57,049 --> 00:22:03,100
in the middle of the sentence and it

00:21:59,359 --> 00:22:05,679
will work in the application alone and

00:22:03,100 --> 00:22:07,850
you can see that the idea here is

00:22:05,679 --> 00:22:15,259
generated by angular because we didn't

00:22:07,850 --> 00:22:18,679
set this in autumn place so for the

00:22:15,259 --> 00:22:22,460
image this is the out the alt attribute

00:22:18,679 --> 00:22:26,450
and it's extracted as well and v.i.c

00:22:22,460 --> 00:22:30,460
used you will have to two different unit

00:22:26,450 --> 00:22:35,480
parts you have the original text from

00:22:30,460 --> 00:22:41,960
here and then the IQ is extracted inside

00:22:35,480 --> 00:22:45,169
of another 20 unit here and this can be

00:22:41,960 --> 00:22:48,470
a bit hard to translate because your

00:22:45,169 --> 00:22:52,399
translator should not translate pool of

00:22:48,470 --> 00:22:54,740
after all so if for this kind of things

00:22:52,399 --> 00:22:56,990
it's nice to have a good translation

00:22:54,740 --> 00:23:00,309
tool that takes I see use into account

00:22:56,990 --> 00:23:04,639
and that will not offer to translate

00:23:00,309 --> 00:23:06,379
those keywords that only the content in

00:23:04,639 --> 00:23:10,399
this case no collection or one element

00:23:06,379 --> 00:23:14,259
and you can see the second itu is

00:23:10,399 --> 00:23:17,240
embedded inside of the cell phone and

00:23:14,259 --> 00:23:25,110
here we use the viable

00:23:17,240 --> 00:23:29,460
and okay so now that we have created one

00:23:25,110 --> 00:23:32,580
file for a French translation I will add

00:23:29,460 --> 00:23:38,400
some rotation otherwise it will create

00:23:32,580 --> 00:23:42,240
an error a one thing to know as well is

00:23:38,400 --> 00:23:45,990
that the translator can remove those if

00:23:42,240 --> 00:23:48,570
you don't need you would just lose the

00:23:45,990 --> 00:23:53,000
interpolation inside of your a few texts

00:23:48,570 --> 00:23:53,000
at the end but sometimes it's useful

00:23:55,880 --> 00:24:01,020
let's yeah I'm going to leave the other

00:23:59,040 --> 00:24:03,410
one mp4 that you can you you can see

00:24:01,020 --> 00:24:03,410
what it does

00:24:04,280 --> 00:24:13,110
so this was a translate path and let's

00:24:08,669 --> 00:24:16,559
see how we can merge a code so for

00:24:13,110 --> 00:24:18,270
just-in-time you have to add some

00:24:16,559 --> 00:24:21,540
providers at the bootstrap of your

00:24:18,270 --> 00:24:23,669
application and there are screaming

00:24:21,540 --> 00:24:29,910
providers that you can use and a fourth

00:24:23,669 --> 00:24:32,010
one that is something optional so the

00:24:29,910 --> 00:24:34,590
something that you have to provide our

00:24:32,010 --> 00:24:37,410
translation in the case I will use

00:24:34,590 --> 00:24:40,890
require that it because the CLI uses

00:24:37,410 --> 00:24:43,799
webpack so this will work but you would

00:24:40,890 --> 00:24:47,760
probably do something dynamic so that it

00:24:43,799 --> 00:24:49,460
loads the the right the correct file but

00:24:47,760 --> 00:24:53,549
in this case just so this example I will

00:24:49,460 --> 00:24:56,760
and we do it like this and the

00:24:53,549 --> 00:25:00,000
translation format you will add to

00:24:56,760 --> 00:25:01,830
specifies it's XLS or XMB that the

00:25:00,000 --> 00:25:05,130
compiler can understand the file that

00:25:01,830 --> 00:25:07,440
you will give it such a giving in the

00:25:05,130 --> 00:25:09,030
future we plan to add something that

00:25:07,440 --> 00:25:13,309
auto-detects the format so that you

00:25:09,030 --> 00:25:18,179
don't have to provide this anymore

00:25:13,309 --> 00:25:23,660
and then the last and non-optional value

00:25:18,179 --> 00:25:28,059
is local ID by default angular is en-us

00:25:23,660 --> 00:25:30,460
but you have to it's better to provide

00:25:28,059 --> 00:25:33,399
French indicates because you can use it

00:25:30,460 --> 00:25:35,080
inside of your code too for example if

00:25:33,399 --> 00:25:36,940
you have a select with the different

00:25:35,080 --> 00:25:38,879
languages you might want to say that

00:25:36,940 --> 00:25:42,639
this application is currently in French

00:25:38,879 --> 00:25:45,639
so you will use local ID for that and it

00:25:42,639 --> 00:25:49,359
also changes our ICU expression

00:25:45,639 --> 00:25:51,820
understood by the passer and how some

00:25:49,359 --> 00:25:57,789
pipes such as dead pipe or things like

00:25:51,820 --> 00:26:03,099
that will will write your date for the

00:25:57,789 --> 00:26:05,710
French language is different than for

00:26:03,099 --> 00:26:09,059
the English for the English the last one

00:26:05,710 --> 00:26:11,739
is if you want to change the meeting

00:26:09,059 --> 00:26:14,440
creation strategy so how will your

00:26:11,739 --> 00:26:17,200
application will react when some

00:26:14,440 --> 00:26:22,169
translations are missing by default it's

00:26:17,200 --> 00:26:22,169
running but you can use euro or ignore

00:26:22,559 --> 00:26:27,549
this only works with just-in-time

00:26:25,359 --> 00:26:30,599
application right now we need to edit

00:26:27,549 --> 00:26:36,339
for aut as well but it will probably be

00:26:30,599 --> 00:26:43,749
some parameter for the July of yes of

00:26:36,339 --> 00:26:51,570
July for me and so let's see how we can

00:26:43,749 --> 00:26:51,570
melt this inside of application cookies

00:26:53,669 --> 00:27:04,899
so with the line you have to edit the

00:26:56,559 --> 00:27:11,009
main we just add this here let's not use

00:27:04,899 --> 00:27:11,009
this right now so

00:27:16,910 --> 00:27:22,680
okay if I want to use require I have to

00:27:20,700 --> 00:27:29,690
add something inside of the typing

00:27:22,680 --> 00:27:29,690
otherwise said I will not will we fail

00:27:31,100 --> 00:27:50,040
okay and then time am okay is the right

00:27:38,160 --> 00:27:52,680
path I think yeah so what we are going

00:27:50,040 --> 00:27:54,600
to do here is that we we say that we

00:27:52,680 --> 00:27:58,770
want to use French translation inside of

00:27:54,600 --> 00:28:02,160
application and remember that we all

00:27:58,770 --> 00:28:04,460
need translated two of them so let's see

00:28:02,160 --> 00:28:04,460
what it does

00:28:09,800 --> 00:28:17,040
so the bubble type translated work that

00:28:14,430 --> 00:28:21,210
you cannot see the path that I didn't

00:28:17,040 --> 00:28:22,740
translated because when you when you

00:28:21,210 --> 00:28:26,240
just have the target elements like this

00:28:22,740 --> 00:28:32,190
it's like and I'm keep target element so

00:28:26,240 --> 00:28:35,600
he cube and empty and empty text if I

00:28:32,190 --> 00:28:35,600
had this and save

00:28:37,840 --> 00:28:41,610
if we compile a lot

00:28:51,210 --> 00:29:00,519
hi it was I didn't have to rid of it and

00:28:56,009 --> 00:29:02,460
so in this case you can see that it

00:29:00,519 --> 00:29:05,730
takes the French the French translation

00:29:02,460 --> 00:29:09,159
but you probably want to add something

00:29:05,730 --> 00:29:11,740
dynamic that you can change so with the

00:29:09,159 --> 00:29:21,309
CLI there it is nice feature that you

00:29:11,740 --> 00:29:24,220
can use and it's for a ot you can

00:29:21,309 --> 00:29:28,509
actually serve your application with a

00:29:24,220 --> 00:29:31,620
ot so that means that you can change

00:29:28,509 --> 00:29:34,659
those commands that you will give to the

00:29:31,620 --> 00:29:38,830
to ng cells so that you can change the

00:29:34,659 --> 00:29:41,649
file and the local with the July so this

00:29:38,830 --> 00:29:43,269
means that you can create a script for

00:29:41,649 --> 00:29:45,879
each language if you want to sell this

00:29:43,269 --> 00:29:49,149
application when you test in each

00:29:45,879 --> 00:29:52,000
language and if you want to merge the

00:29:49,149 --> 00:29:55,029
calculation without the CLI so you will

00:29:52,000 --> 00:29:58,419
pass arguments to the ng C so that it

00:29:55,029 --> 00:30:00,549
can load those translations inside of

00:29:58,419 --> 00:30:02,529
your application when it built and it

00:30:00,549 --> 00:30:06,460
would replace those elements inside of

00:30:02,529 --> 00:30:08,320
your builded files so that means that

00:30:06,460 --> 00:30:11,679
you have to build your application for

00:30:08,320 --> 00:30:15,789
each language and you will have to serve

00:30:11,679 --> 00:30:18,610
each of those depending on for example

00:30:15,789 --> 00:30:22,029
the exception language from the browser

00:30:18,610 --> 00:30:23,860
or the Navigator language of stuff like

00:30:22,029 --> 00:30:27,100
that so you have to decide how you will

00:30:23,860 --> 00:30:30,250
detect the language and if the user can

00:30:27,100 --> 00:30:33,159
change the language then you have to for

00:30:30,250 --> 00:30:36,070
example add a task to your application

00:30:33,159 --> 00:30:38,169
at the beginning which will be / SS /

00:30:36,070 --> 00:30:42,370
p.m. or something like that and that

00:30:38,169 --> 00:30:46,419
will serve different builded file for a

00:30:42,370 --> 00:30:48,340
VT which was not the case we just in

00:30:46,419 --> 00:30:51,250
time where you loaded the translation at

00:30:48,340 --> 00:30:55,029
GU stress so even you didn't need to do

00:30:51,250 --> 00:30:59,710
that and you can see the argument of the

00:30:55,029 --> 00:31:03,230
same as almost the same as for the

00:30:59,710 --> 00:31:07,160
extraction here so you had 18 formats

00:31:03,230 --> 00:31:10,429
style and local and for the melt you

00:31:07,160 --> 00:31:13,669
have 18 format a TN file instead of

00:31:10,429 --> 00:31:20,020
outside it's IT and file and I'll look

00:31:13,669 --> 00:31:34,850
Ali the same so let's see how it works

00:31:20,020 --> 00:31:36,950
if we build our application we just we

00:31:34,850 --> 00:31:40,400
just basically does the same we do the

00:31:36,950 --> 00:31:42,290
same that we did when we wanted to serve

00:31:40,400 --> 00:31:46,700
the application in Hindi language

00:31:42,290 --> 00:31:49,940
because it in this case build in this

00:31:46,700 --> 00:31:54,700
language so what seem that it's probably

00:31:49,940 --> 00:32:00,260
nice is to define the out path to be

00:31:54,700 --> 00:32:02,179
this /sf for example so that it build it

00:32:00,260 --> 00:32:05,110
because everything inside of a different

00:32:02,179 --> 00:32:05,110
folder for each language

00:32:12,630 --> 00:32:30,330
oh yes output pass link but yeah usually

00:32:24,810 --> 00:32:33,660
you will create some script for NPM to

00:32:30,330 --> 00:32:36,060
use or maybe you will have a build a gif

00:32:33,660 --> 00:32:43,470
file that you can run that will generate

00:32:36,060 --> 00:32:45,870
out of the differently I will show you

00:32:43,470 --> 00:32:48,530
after that how to serve the application

00:32:45,870 --> 00:32:55,770
I will I have a demo with different

00:32:48,530 --> 00:32:58,350
building strategies and yeah if you

00:32:55,770 --> 00:33:01,110
serve with a ot it will do exactly the

00:32:58,350 --> 00:33:03,420
same as ng serve except that when in

00:33:01,110 --> 00:33:08,070
true build it it has to rebuild

00:33:03,420 --> 00:33:11,510
everything so it's a bit longer so let's

00:33:08,070 --> 00:33:17,520
see so to serve via the application I

00:33:11,510 --> 00:33:26,700
created a small demo that is on Twitter

00:33:17,520 --> 00:33:30,050
that can use this is e QR and in this

00:33:26,700 --> 00:33:33,360
demo I created different strategies for

00:33:30,050 --> 00:33:39,540
the application it works in just in time

00:33:33,360 --> 00:33:40,820
and in a ot so it changes the bootstrap

00:33:39,540 --> 00:33:43,920
sorry

00:33:40,820 --> 00:33:46,590
it's small it changes the bootstrap

00:33:43,920 --> 00:33:48,750
depending on your environment prediction

00:33:46,590 --> 00:33:51,960
which are things that you can define

00:33:48,750 --> 00:33:54,780
with the CLI here you have files and you

00:33:51,960 --> 00:33:58,310
can define variables that you will get

00:33:54,780 --> 00:34:02,190
inside of your code thanks to web pack

00:33:58,310 --> 00:34:05,820
so in this case I assume that if its

00:34:02,190 --> 00:34:08,540
production its alt you might want to

00:34:05,820 --> 00:34:11,250
have a different thing if you want and

00:34:08,540 --> 00:34:15,600
if it's a TR just return immediately

00:34:11,250 --> 00:34:18,990
otherwise I will get the language and to

00:34:15,600 --> 00:34:22,800
do that I will either use the current

00:34:18,990 --> 00:34:23,589
path of my application if it /s s /en

00:34:22,800 --> 00:34:25,719
for example

00:34:23,589 --> 00:34:28,809
and assume that defeat the locals that

00:34:25,719 --> 00:34:30,759
you want to use if there is no path I

00:34:28,809 --> 00:34:35,649
will detect the language of the

00:34:30,759 --> 00:34:39,389
navigator of the browser and this is a

00:34:35,649 --> 00:34:42,399
bit long because depending if it's

00:34:39,389 --> 00:34:45,899
Internet Explorer or Safari or stuff

00:34:42,399 --> 00:34:49,059
like that you have some old legacy

00:34:45,899 --> 00:34:51,159
variables that you have to use and then

00:34:49,059 --> 00:34:54,519
I will return in my case I only accept

00:34:51,159 --> 00:34:58,509
en or affair but you can accept anything

00:34:54,519 --> 00:35:01,329
if you want and then I get this local

00:34:58,509 --> 00:35:04,660
and I generate the provider that I will

00:35:01,329 --> 00:35:08,259
add a bootstrap which if you remember in

00:35:04,660 --> 00:35:14,189
our case in the simple application that

00:35:08,259 --> 00:35:16,630
we had before we just provided this

00:35:14,189 --> 00:35:21,209
statically but in it case we want to

00:35:16,630 --> 00:35:23,799
have some some kind of dynamic local so

00:35:21,209 --> 00:35:28,929
this is the local that it was detected

00:35:23,799 --> 00:35:31,059
and then we'll change the base at X rest

00:35:28,929 --> 00:35:37,539
so that your application can be served

00:35:31,059 --> 00:35:44,079
from a third pass and then I return this

00:35:37,539 --> 00:35:46,059
and if you load the file dynamically it

00:35:44,079 --> 00:35:50,469
uses system dot impulse which is

00:35:46,059 --> 00:35:54,189
something that uses even if it's

00:35:50,469 --> 00:35:57,009
called system and it will import it can

00:35:54,189 --> 00:35:59,910
import files dynamically it will

00:35:57,009 --> 00:36:04,569
actually create a bundle file for each

00:35:59,910 --> 00:36:07,150
each local that you are here and to load

00:36:04,569 --> 00:36:09,339
the the correct one when you run your

00:36:07,150 --> 00:36:13,029
application so this is sort just project

00:36:09,339 --> 00:36:14,859
in time for a ot it's very simple it it

00:36:13,029 --> 00:36:17,349
returns immediately because you will

00:36:14,859 --> 00:36:22,719
provide those information with the

00:36:17,349 --> 00:36:25,119
commands of the CLI and then it will

00:36:22,719 --> 00:36:29,829
start the application with it was

00:36:25,119 --> 00:36:33,429
provided one thing that you have to

00:36:29,829 --> 00:36:35,680
provide as well in your module this one

00:36:33,429 --> 00:36:39,490
is the eight

00:36:35,680 --> 00:36:42,040
bays xref but this allows you to serve

00:36:39,490 --> 00:36:44,460
your application from a sub path and all

00:36:42,040 --> 00:36:49,450
of your routes with the router will be

00:36:44,460 --> 00:36:51,190
will use this this value so that you

00:36:49,450 --> 00:36:52,500
don't have to rewrite all of your routes

00:36:51,190 --> 00:36:55,930
every time that you change the language

00:36:52,500 --> 00:37:02,770
you just use provide this value and it

00:36:55,930 --> 00:37:07,690
will do it with the routing module okay

00:37:02,770 --> 00:37:12,850
and then in the component will create a

00:37:07,690 --> 00:37:15,490
select element which will Chen allow you

00:37:12,850 --> 00:37:18,040
to change the language in your

00:37:15,490 --> 00:37:22,720
application and in this case I will

00:37:18,040 --> 00:37:25,240
reload the application completely so I

00:37:22,720 --> 00:37:28,780
can inject the local ID that was behind

00:37:25,240 --> 00:37:32,290
a bootstrap and based on this local I

00:37:28,780 --> 00:37:38,730
can select the current value inside of

00:37:32,290 --> 00:37:38,730
this select so let's see how it works

00:37:43,050 --> 00:37:52,510
so I created some script inside of

00:37:46,540 --> 00:37:59,110
package logician this one is the simple

00:37:52,510 --> 00:38:02,640
sir so let's see in this case it will

00:37:59,110 --> 00:38:02,640
just it will use the just-in-time

00:38:02,670 --> 00:38:11,290
detection for your browser and since my

00:38:07,630 --> 00:38:16,320
computer is in French it should redirect

00:38:11,290 --> 00:38:16,320
my application to the affair bot

00:38:20,880 --> 00:38:27,240
yeah unless you concede that it that it

00:38:24,630 --> 00:38:30,000
be afraid I am and my application is in

00:38:27,240 --> 00:38:33,680
French it selected French inside of the

00:38:30,000 --> 00:38:37,109
select here and if I click on English

00:38:33,680 --> 00:38:39,359
you're changing my path to en and it

00:38:37,109 --> 00:38:47,789
will of the application and in the

00:38:39,359 --> 00:38:50,759
network actually n6 again yeah you don't

00:38:47,789 --> 00:38:56,819
see it it's bundled inside of the

00:38:50,759 --> 00:39:00,859
application the translation file so when

00:38:56,819 --> 00:39:04,799
if you reload you can see different and

00:39:00,859 --> 00:39:10,799
ok so this is what I just in time but

00:39:04,799 --> 00:39:15,000
for if I want to use the ng self with a

00:39:10,799 --> 00:39:25,799
ot like I told you before I can use this

00:39:15,000 --> 00:39:29,359
command dot F era and in this case it

00:39:25,799 --> 00:39:31,980
would just it would not load the

00:39:29,359 --> 00:39:35,940
translation file a bootstrap it's

00:39:31,980 --> 00:39:40,920
bundled inside of of the LT file because

00:39:35,940 --> 00:39:49,380
I used I I said the file here inside of

00:39:40,920 --> 00:39:52,440
the CLI I'm it does exactly is same the

00:39:49,380 --> 00:39:55,170
only thing that in this case since I

00:39:52,440 --> 00:39:57,890
loaded the application with the local

00:39:55,170 --> 00:40:01,319
affair if I want to use the English

00:39:57,890 --> 00:40:04,529
version it doesn't work you can see

00:40:01,319 --> 00:40:07,349
because en is not something that is

00:40:04,529 --> 00:40:12,990
available so it redirected again to

00:40:07,349 --> 00:40:15,920
extra because yeah so it's something

00:40:12,990 --> 00:40:18,809
that you should maybe take into account

00:40:15,920 --> 00:40:20,990
when you when you do that with the CLI

00:40:18,809 --> 00:40:24,630
with the serve command

00:40:20,990 --> 00:40:26,880
it's only to test one local with gravity

00:40:24,630 --> 00:40:29,279
if you want to test multiple locals you

00:40:26,880 --> 00:40:30,779
should do it in just in time but for the

00:40:29,279 --> 00:40:33,539
prediction application since you will

00:40:30,779 --> 00:40:34,570
build your file for each local you want

00:40:33,539 --> 00:40:39,970
to have this error

00:40:34,570 --> 00:40:43,600
we will see this right now so I created

00:40:39,970 --> 00:40:54,760
a command build all that will extract in

00:40:43,600 --> 00:41:00,190
French and English sorry and it will

00:40:54,760 --> 00:41:05,560
create a folder operated folder for each

00:41:00,190 --> 00:41:07,990
language so I used something an odd

00:41:05,560 --> 00:41:10,270
module not library that is named

00:41:07,990 --> 00:41:14,800
concurrently allows you to run both

00:41:10,270 --> 00:41:17,260
common at the same time it goes faster

00:41:14,800 --> 00:41:19,350
this way that you don't have to do it

00:41:17,260 --> 00:41:27,670
for each language

00:41:19,350 --> 00:41:31,860
okay so created both folders here and if

00:41:27,670 --> 00:41:38,320
you want to go to inside of your QT

00:41:31,860 --> 00:41:41,320
search for okay so this is the text in

00:41:38,320 --> 00:41:45,460
French this is ello world in French

00:41:41,320 --> 00:41:48,910
bottle mode and you can see that it it

00:41:45,460 --> 00:41:56,830
has replaced the English strings with

00:41:48,910 --> 00:41:59,290
the French one and then two if I want to

00:41:56,830 --> 00:42:03,510
because in this case I already extracted

00:41:59,290 --> 00:42:08,190
the strings before but when you extract

00:42:03,510 --> 00:42:12,310
one thing that it can kind of

00:42:08,190 --> 00:42:18,340
complicated is that the CLI from an

00:42:12,310 --> 00:42:21,460
grazie ng xxi Etienne will replace the

00:42:18,340 --> 00:42:24,160
source file so if you change your your

00:42:21,460 --> 00:42:25,750
strings here and then you have to merge

00:42:24,160 --> 00:42:28,660
them again instead of the French

00:42:25,750 --> 00:42:30,730
translation because the ID can be

00:42:28,660 --> 00:42:34,000
different and if you have to do this for

00:42:30,730 --> 00:42:36,730
all of your calculations here I only

00:42:34,000 --> 00:42:37,930
have two but one when I when you have a

00:42:36,730 --> 00:42:41,260
real application you have a lot of

00:42:37,930 --> 00:42:42,790
translations so if your if your

00:42:41,260 --> 00:42:45,580
translation tool doesn't allow you to

00:42:42,790 --> 00:42:47,980
merge your translation there is this

00:42:45,580 --> 00:42:50,360
nice library that

00:42:47,980 --> 00:42:50,660
Eiling I will give you the link at the

00:42:50,360 --> 00:42:58,820
end

00:42:50,660 --> 00:43:01,430
it's called NJ eggs 18 to both and this

00:42:58,820 --> 00:43:06,140
has different tools and one of them is

00:43:01,430 --> 00:43:08,510
eclipse mode which will given some

00:43:06,140 --> 00:43:10,130
coughing configuration here you can add

00:43:08,510 --> 00:43:13,430
as many language as you want and when

00:43:10,130 --> 00:43:16,280
you extract it will just took the source

00:43:13,430 --> 00:43:18,560
and merge those inside of each of your

00:43:16,280 --> 00:43:20,720
translation and it will create each of

00:43:18,560 --> 00:43:23,600
those translation for you about

00:43:20,720 --> 00:43:29,720
translation files for each language that

00:43:23,600 --> 00:43:36,020
you define so this is quite useful okay

00:43:29,720 --> 00:43:38,990
so let's see how we can serve this in

00:43:36,020 --> 00:43:45,950
this in this example I created a simple

00:43:38,990 --> 00:43:49,580
Express server if you want to use a bash

00:43:45,950 --> 00:43:51,860
for example there is a link at the end

00:43:49,580 --> 00:43:54,200
where there is an example of how to set

00:43:51,860 --> 00:43:56,990
up a bash for solving different

00:43:54,200 --> 00:44:01,130
languages languages in the same for the

00:43:56,990 --> 00:44:04,480
same application but so I spread this is

00:44:01,130 --> 00:44:11,450
really a simple simple server that will

00:44:04,480 --> 00:44:15,140
get the the header sorry that will get

00:44:11,450 --> 00:44:17,960
the accept languages from from the

00:44:15,140 --> 00:44:21,760
request that it receives and it will

00:44:17,960 --> 00:44:25,100
select one one of them if it's available

00:44:21,760 --> 00:44:27,170
and if you already have a base pass

00:44:25,100 --> 00:44:28,070
slash affair for example it will use

00:44:27,170 --> 00:44:33,290
this instead

00:44:28,070 --> 00:44:37,340
and it will serve it will observe the

00:44:33,290 --> 00:44:47,170
disk the deep folder that that

00:44:37,340 --> 00:44:47,170
correspond to this language so tyrannous

00:44:49,539 --> 00:45:00,669
and I go to the correct URL so it

00:44:56,499 --> 00:45:03,429
collected French for me because it's in

00:45:00,669 --> 00:45:10,119
the network you can see that my brother

00:45:03,429 --> 00:45:14,709
is sending this right it accept

00:45:10,119 --> 00:45:16,749
languages in my case it's French but I

00:45:14,709 --> 00:45:19,479
can also use emulation if French is not

00:45:16,749 --> 00:45:23,199
available so it's like did French for me

00:45:19,479 --> 00:45:26,169
if I change this here since I said the

00:45:23,199 --> 00:45:27,849
best pass the base pass that's what the

00:45:26,169 --> 00:45:30,999
server will use and it will serve the

00:45:27,849 --> 00:45:33,099
English application so this is one way

00:45:30,999 --> 00:45:37,179
to do it with a simple Express server

00:45:33,099 --> 00:45:39,249
but it created ants on what user what

00:45:37,179 --> 00:45:41,949
what kind of server you use the only

00:45:39,249 --> 00:45:45,369
thing that you have to do is serve the

00:45:41,949 --> 00:45:47,439
different AOC file depending on the

00:45:45,369 --> 00:45:49,749
locals that you detected or that the

00:45:47,439 --> 00:45:52,839
user selected and then it will load the

00:45:49,749 --> 00:45:57,579
application with with this correct does

00:45:52,839 --> 00:46:00,689
correct file so this is probably

00:45:57,579 --> 00:46:05,729
something that you can easily find for

00:46:00,689 --> 00:46:05,729
depending on what you use as a server

00:46:06,929 --> 00:46:17,319
okay so let's go back to the slide so

00:46:13,329 --> 00:46:20,549
what's next for ITN we have a lot of

00:46:17,319 --> 00:46:25,389
things to do some bug fixes such as

00:46:20,549 --> 00:46:28,839
ignoring pH a tu expression for ID right

00:46:25,389 --> 00:46:31,569
now is aerated bug if you change the

00:46:28,839 --> 00:46:34,269
name of your place holders your variable

00:46:31,569 --> 00:46:37,449
for example I had attempts if I change

00:46:34,269 --> 00:46:40,329
it to elements we generated at you will

00:46:37,449 --> 00:46:44,649
be different so this is a bug the time

00:46:40,329 --> 00:46:46,199
that will be fixed soon allow it keeping

00:46:44,649 --> 00:46:48,999
a few messages if you want to use

00:46:46,199 --> 00:46:51,880
brackets inside of your IP you messages

00:46:48,999 --> 00:46:54,489
this will sell right now so we need to

00:46:51,880 --> 00:46:56,559
keep this the missing translation

00:46:54,489 --> 00:47:01,119
strategy should walk with the UT as well

00:46:56,559 --> 00:47:03,069
and for the features the one I'm working

00:47:01,119 --> 00:47:05,589
on right now is to be

00:47:03,069 --> 00:47:10,599
to use ITN inside of your code and it

00:47:05,589 --> 00:47:13,049
should be available soon in the next

00:47:10,599 --> 00:47:16,299
couple of months if everything goes well

00:47:13,049 --> 00:47:19,559
we can really we just added a new

00:47:16,299 --> 00:47:22,180
expla format that we need to merge and

00:47:19,559 --> 00:47:25,029
some of the nice features such as Auto

00:47:22,180 --> 00:47:27,719
taking the format or open opening the

00:47:25,029 --> 00:47:30,279
API so that you can add your own format

00:47:27,719 --> 00:47:33,160
this is not for right now but it's

00:47:30,279 --> 00:47:37,509
something that we we consider we should

00:47:33,160 --> 00:47:38,890
do to make IT and easier for users that

00:47:37,509 --> 00:47:43,660
for example if you want to use JSON

00:47:38,890 --> 00:47:48,180
instead of exactly so I can be you

00:47:43,660 --> 00:47:48,180
should be able to do it with this

00:47:48,209 --> 00:47:56,999
sampling so a lot of translation tools

00:47:52,440 --> 00:47:59,920
don't really support Angra they don't

00:47:56,999 --> 00:48:03,999
understand placeholders or ICU

00:47:59,920 --> 00:48:07,630
expressions so those three translation

00:48:03,999 --> 00:48:09,940
tools are not perfect that they can be

00:48:07,630 --> 00:48:11,799
used with angular application detonated

00:48:09,940 --> 00:48:15,880
was fully well with it can be it's

00:48:11,799 --> 00:48:20,079
really simple to closing and one sky of

00:48:15,880 --> 00:48:23,109
both really really big solution that

00:48:20,079 --> 00:48:27,130
will allow you to have a team and share

00:48:23,109 --> 00:48:31,150
translation and even request translation

00:48:27,130 --> 00:48:33,039
from professional translators both of

00:48:31,150 --> 00:48:36,819
them are really good Croydon is free for

00:48:33,039 --> 00:48:39,849
bandsaw and one sky as a free plan where

00:48:36,819 --> 00:48:40,749
you can do your translation yourself and

00:48:39,849 --> 00:48:46,680
use it for free

00:48:40,749 --> 00:48:50,499
three two nights as well so modeling the

00:48:46,680 --> 00:48:55,749
translation spreadsheet that again that

00:48:50,499 --> 00:48:58,690
the type is told on purpose it's really

00:48:55,749 --> 00:49:02,739
nice when you do an application to be

00:48:58,690 --> 00:49:07,839
able to see some text if it will be too

00:49:02,739 --> 00:49:11,199
big for your design for example so it

00:49:07,839 --> 00:49:14,120
will use Google Translate and translate

00:49:11,199 --> 00:49:17,550
in well in all of

00:49:14,120 --> 00:49:20,160
all of the languages that google

00:49:17,550 --> 00:49:22,230
translate to boss and you can see that

00:49:20,160 --> 00:49:25,140
it counts the number of elements and

00:49:22,230 --> 00:49:28,860
gives you also the the language code

00:49:25,140 --> 00:49:32,010
that you can use so in Tamiya and this

00:49:28,860 --> 00:49:38,400
is really long should should be careful

00:49:32,010 --> 00:49:40,650
if you want to use Tamila and so yeah

00:49:38,400 --> 00:49:41,340
another link the tools of light sorry

00:49:40,650 --> 00:49:43,560
about that

00:49:41,340 --> 00:49:49,350
extract for each language and male geo

00:49:43,560 --> 00:49:51,960
translations from Martin Rob Eames app

00:49:49,350 --> 00:49:55,470
is an application that we build at

00:49:51,960 --> 00:49:59,010
Google and that we use to showcase some

00:49:55,470 --> 00:50:02,430
of our features I added some mighty and

00:49:59,010 --> 00:50:05,850
support recently so you can see how it

00:50:02,430 --> 00:50:09,060
works in a real application and then to

00:50:05,850 --> 00:50:12,450
blog articles deploying an ITN angular

00:50:09,060 --> 00:50:14,040
app with the CLI by Phillip Martin it's

00:50:12,450 --> 00:50:18,630
in this article that you will find the

00:50:14,040 --> 00:50:21,150
configuration for a bash and design for

00:50:18,630 --> 00:50:25,380
internationalization from the Dropbox

00:50:21,150 --> 00:50:27,090
design team it gives you some nice thing

00:50:25,380 --> 00:50:30,870
that you have to be careful when you

00:50:27,090 --> 00:50:33,780
create an application for example don't

00:50:30,870 --> 00:50:36,780
if you want to take right right to left

00:50:33,780 --> 00:50:40,380
into account of the kind of things if

00:50:36,780 --> 00:50:42,930
your design should take the length of

00:50:40,380 --> 00:50:44,820
the text into account and a lot of other

00:50:42,930 --> 00:50:46,710
things that you might not know when you

00:50:44,820 --> 00:50:52,730
code your first international

00:50:46,710 --> 00:50:52,730
application thank you

00:50:56,800 --> 00:51:03,500
so who here feel lost in translation

00:51:00,500 --> 00:51:08,540
after this workshop it's okay you can

00:51:03,500 --> 00:51:09,860
say it some of you here and here but

00:51:08,540 --> 00:51:14,270
come here I have something for you

00:51:09,860 --> 00:51:16,400
because each of you should get something

00:51:14,270 --> 00:51:32,180
out of this workshop so I have the knife

00:51:16,400 --> 00:51:36,470
DVD yeah so the surf pad the surf part

00:51:32,180 --> 00:51:39,650
optionally I wanted to do with universal

00:51:36,470 --> 00:51:44,960
but they merged it back into the core

00:51:39,650 --> 00:51:47,710
recently and it still a bit fresh and I

00:51:44,960 --> 00:51:50,990
did not have time to to work on this for

00:51:47,710 --> 00:51:55,580
for this workshop but I will definitely

00:51:50,990 --> 00:51:58,850
itn demo with the universal path once

00:51:55,580 --> 00:52:01,310
it's available once I can get rub 12 me

00:51:58,850 --> 00:52:04,640
or someone from the core team that does

00:52:01,310 --> 00:52:06,380
universal so this is definitely

00:52:04,640 --> 00:52:09,190
something that you can use you can use

00:52:06,380 --> 00:52:11,900
ITN with the universal you just have to

00:52:09,190 --> 00:52:14,150
to be careful when you detect the

00:52:11,900 --> 00:52:15,620
language because if you use something

00:52:14,150 --> 00:52:18,350
that are only available on the browser

00:52:15,620 --> 00:52:24,380
you have to to be careful with the

00:52:18,350 --> 00:52:27,380
universal pop it sure was a question

00:52:24,380 --> 00:52:31,960
otherwise I'm I would say around you can

00:52:27,380 --> 00:52:31,960
come to me that's a one

00:52:32,220 --> 00:52:36,360

YouTube URL: https://www.youtube.com/watch?v=dihyu1a2bPc


