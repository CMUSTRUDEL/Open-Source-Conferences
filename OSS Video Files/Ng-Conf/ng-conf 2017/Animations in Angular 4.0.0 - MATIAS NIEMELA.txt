Title: Animations in Angular 4.0.0 - MATIAS NIEMELA
Publication date: 2017-04-06
Playlist: ng-conf 2017
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:04,279 --> 00:00:11,099
okay everybody it's wonderful to be back

00:00:08,280 --> 00:00:13,799
here again at ng cops I'm here to talk

00:00:11,099 --> 00:00:16,890
about animations the key thing I work on

00:00:13,799 --> 00:00:18,150
on the angular project their link is

00:00:16,890 --> 00:00:19,289
right there for the slides don't worry

00:00:18,150 --> 00:00:26,480
it's going to show up in another slide a

00:00:19,289 --> 00:00:26,480
bit later so let's continue full screen

00:00:29,150 --> 00:00:35,880
okay full screen it is so I worked on

00:00:33,059 --> 00:00:37,440
the core team for four years now and the

00:00:35,880 --> 00:00:39,329
thing I started off with was ng animate

00:00:37,440 --> 00:00:40,920
and that just throughout the years it's

00:00:39,329 --> 00:00:43,500
carried on to bigger and bigger

00:00:40,920 --> 00:00:45,450
challenges and now with angular 4 and

00:00:43,500 --> 00:00:48,059
4.1 coming out there's a lot of cool

00:00:45,450 --> 00:00:50,160
stuff to talk about my website is your

00:00:48,059 --> 00:00:51,629
comm it spit out data there's not much

00:00:50,160 --> 00:00:55,079
content on there but there's a new

00:00:51,629 --> 00:00:58,590
design it looks pretty cool and of

00:00:55,079 --> 00:01:01,500
course let's talk about animation so

00:00:58,590 --> 00:01:03,870
here's the links that I promised you we

00:01:01,500 --> 00:01:06,150
have a full-fledged demo which shows all

00:01:03,870 --> 00:01:08,490
of the new things coming and when I say

00:01:06,150 --> 00:01:12,299
new things coming it's within the next

00:01:08,490 --> 00:01:15,390
couple of weeks for 4.1 and there's a

00:01:12,299 --> 00:01:21,270
github repo for the code and of course

00:01:15,390 --> 00:01:23,400
the slides so what to expect from this

00:01:21,270 --> 00:01:26,000
talks I'm going to stand here for 20

00:01:23,400 --> 00:01:28,790
minutes and talk about animation

00:01:26,000 --> 00:01:32,579
everything that you see here is for 4.1

00:01:28,790 --> 00:01:34,950
the goal is to have things for a 4.0 but

00:01:32,579 --> 00:01:37,530
the 4.0 API was final before this could

00:01:34,950 --> 00:01:39,900
get in therefore it will be 4.1 it has

00:01:37,530 --> 00:01:41,270
been well tested for weeks and the

00:01:39,900 --> 00:01:45,590
full-fledged demo

00:01:41,270 --> 00:01:49,979
showcases all these nice features so

00:01:45,590 --> 00:01:52,649
setup with angular 4.0 we've introduced

00:01:49,979 --> 00:01:54,149
an ending angular animations module now

00:01:52,649 --> 00:01:57,500
what this means is all of the animation

00:01:54,149 --> 00:02:00,420
specific code is stored in this module

00:01:57,500 --> 00:02:02,969
so that means that animations are

00:02:00,420 --> 00:02:04,829
completely separate from Cornell but it

00:02:02,969 --> 00:02:06,149
isn't a breaking change as long as you

00:02:04,829 --> 00:02:08,550
import your animations from there they

00:02:06,149 --> 00:02:09,899
will work fine and with 4.0 if you

00:02:08,550 --> 00:02:12,040
import them from core they will still

00:02:09,899 --> 00:02:15,530
work but the new features won't be

00:02:12,040 --> 00:02:19,340
therefore it is best that you import all

00:02:15,530 --> 00:02:22,069
your animation methods from the angular

00:02:19,340 --> 00:02:23,420
animations module and for this to

00:02:22,069 --> 00:02:26,329
actually activate into your angular

00:02:23,420 --> 00:02:27,739
application you will need to import the

00:02:26,329 --> 00:02:30,799
browser animations module and hook that

00:02:27,739 --> 00:02:32,359
up and after that you're back to where

00:02:30,799 --> 00:02:34,700
you were with angular to the animations

00:02:32,359 --> 00:02:37,069
work the same way however there have

00:02:34,700 --> 00:02:39,530
been a ton of changes not on the

00:02:37,069 --> 00:02:41,959
external API but internally there's been

00:02:39,530 --> 00:02:44,450
a huge refactor taken place animations

00:02:41,959 --> 00:02:46,250
are now 100% runtime handled which

00:02:44,450 --> 00:02:51,109
allows for a lots of cool things to be

00:02:46,250 --> 00:02:52,430
developed for them so these animation

00:02:51,109 --> 00:02:53,780
modules that I mentioned do you have the

00:02:52,430 --> 00:02:54,469
browser animations module and then you

00:02:53,780 --> 00:02:56,870
have the no-ops

00:02:54,469 --> 00:02:59,090
animations module the no op animations

00:02:56,870 --> 00:03:00,590
module is useful for testing because it

00:02:59,090 --> 00:03:02,599
can disable the animations from running

00:03:00,590 --> 00:03:03,980
however it can still run the callbacks

00:03:02,599 --> 00:03:06,319
that are associated with the animations

00:03:03,980 --> 00:03:10,639
so you don't have to change any of your

00:03:06,319 --> 00:03:13,400
application code and when it comes down

00:03:10,639 --> 00:03:15,019
for people using system j/s now there's

00:03:13,400 --> 00:03:16,909
3 bundles I'm sorry that there's so many

00:03:15,019 --> 00:03:20,930
we're trying to break this up into a

00:03:16,909 --> 00:03:22,669
nice for usable way and if you are using

00:03:20,930 --> 00:03:24,829
system j/s please have all three of

00:03:22,669 --> 00:03:29,239
these bundles and within your

00:03:24,829 --> 00:03:31,099
application so basic example for those

00:03:29,239 --> 00:03:34,870
of you who are new to how animations

00:03:31,099 --> 00:03:37,489
work and angular 2 or angular for sorry

00:03:34,870 --> 00:03:41,720
let's do the hello world of animations

00:03:37,489 --> 00:03:44,120
which is data and data here we have a

00:03:41,720 --> 00:03:47,120
div element that has a special property

00:03:44,120 --> 00:03:49,459
prefixed with an @ symbol at fade and

00:03:47,120 --> 00:03:51,829
emitted in if it's true

00:03:49,459 --> 00:03:53,329
animated out if it's false and the

00:03:51,829 --> 00:03:56,959
button will toggle that animation from

00:03:53,329 --> 00:03:59,780
happening now we need to register this

00:03:56,959 --> 00:04:02,150
app fade somewhere and we do that within

00:03:59,780 --> 00:04:04,790
the component animation metadata we

00:04:02,150 --> 00:04:07,519
specify that the trigger would fade when

00:04:04,790 --> 00:04:10,699
it's activated it will target the

00:04:07,519 --> 00:04:12,949
animation to run through a transition it

00:04:10,699 --> 00:04:14,900
can either go in animate in or animate

00:04:12,949 --> 00:04:17,060
out what does the animation look like

00:04:14,900 --> 00:04:19,760
well before we build the animations for

00:04:17,060 --> 00:04:22,039
that let's take all of the trigger code

00:04:19,760 --> 00:04:23,700
put them into a separate file so we can

00:04:22,039 --> 00:04:25,560
use that file later on

00:04:23,700 --> 00:04:28,500
so the estate animation is being

00:04:25,560 --> 00:04:30,750
imported from special file and in that

00:04:28,500 --> 00:04:33,060
file we have the trigger which contains

00:04:30,750 --> 00:04:35,790
a transition for when it gets faded in

00:04:33,060 --> 00:04:39,930
we animate from being hidden to being

00:04:35,790 --> 00:04:44,580
visible over one second and when it

00:04:39,930 --> 00:04:46,800
fades out we go to pass it easy row over

00:04:44,580 --> 00:04:49,230
one second now you don't need to put an

00:04:46,800 --> 00:04:51,810
opacity one angle er already knows that

00:04:49,230 --> 00:04:58,340
the pasty will be one or whatever value

00:04:51,810 --> 00:04:58,340
it was before the animation started so

00:05:00,680 --> 00:05:03,540
here this is just a simple idea of how

00:05:03,060 --> 00:05:05,820
it works

00:05:03,540 --> 00:05:07,380
I'll show we don't have to look at the

00:05:05,820 --> 00:05:09,030
code because it's very simple for Hayden

00:05:07,380 --> 00:05:15,480
to fade out however we will make a nice

00:05:09,030 --> 00:05:17,820
tweak for this in a minute okay also

00:05:15,480 --> 00:05:19,710
with these add simple properties you can

00:05:17,820 --> 00:05:20,970
have callbacks you can detect on the

00:05:19,710 --> 00:05:24,000
animation have started and one adds

00:05:20,970 --> 00:05:26,910
finished and the callback method that is

00:05:24,000 --> 00:05:29,610
called when that callback happens can

00:05:26,910 --> 00:05:35,040
accept an event property which contains

00:05:29,610 --> 00:05:37,080
details about the animation okay so now

00:05:35,040 --> 00:05:39,480
let's go to the new stuff first and

00:05:37,080 --> 00:05:42,150
foremost we have a new variable new verb

00:05:39,480 --> 00:05:44,370
animations called animation and what

00:05:42,150 --> 00:05:46,680
this allows for is to have reusable

00:05:44,370 --> 00:05:48,750
animations yes you can use typescript

00:05:46,680 --> 00:05:52,010
yes you can import from a file however

00:05:48,750 --> 00:05:55,470
the actual contents of the animation

00:05:52,010 --> 00:05:58,770
will not be dynamic and this allows for

00:05:55,470 --> 00:06:00,360
that to work so transition can use it

00:05:58,770 --> 00:06:02,820
and other animations can use other

00:06:00,360 --> 00:06:07,560
animations and it is invoked by a verb

00:06:02,820 --> 00:06:09,000
called animate child so let's go back to

00:06:07,560 --> 00:06:10,950
our fade animation code and instead of

00:06:09,000 --> 00:06:12,630
having a trigger which has two

00:06:10,950 --> 00:06:14,640
transitions or fade in and fade out and

00:06:12,630 --> 00:06:17,280
the transitions have the actual

00:06:14,640 --> 00:06:18,780
animation code let's just define a

00:06:17,280 --> 00:06:23,790
fade-in animation in a fade-out

00:06:18,780 --> 00:06:26,730
animation and reference those within our

00:06:23,790 --> 00:06:28,890
transition code so when it fades in we

00:06:26,730 --> 00:06:32,910
just call enemy child on that fade in

00:06:28,890 --> 00:06:34,410
animation and fade out okay well this is

00:06:32,910 --> 00:06:36,580
really cool it's a nice good start but

00:06:34,410 --> 00:06:38,500
we don't see anything dynamic in here

00:06:36,580 --> 00:06:42,909
and this is where input variables come

00:06:38,500 --> 00:06:44,979
in because what you can do is you can

00:06:42,909 --> 00:06:46,870
define input variables that are passed

00:06:44,979 --> 00:06:50,530
into an animation and then the animation

00:06:46,870 --> 00:06:52,900
can consume those input variables so if

00:06:50,530 --> 00:06:55,389
we go back to here let's imagine that

00:06:52,900 --> 00:06:57,099
the fade in has a starting value that's

00:06:55,389 --> 00:07:00,340
dynamic and an ending value that's

00:06:57,099 --> 00:07:02,139
dynamic what I've defined here is start

00:07:00,340 --> 00:07:03,969
the user needs to provide the start

00:07:02,139 --> 00:07:05,889
variable and the end variable if the

00:07:03,969 --> 00:07:07,300
user provides it it will accept it

00:07:05,889 --> 00:07:13,750
otherwise we'll use a default end

00:07:07,300 --> 00:07:15,610
variable of 1 and with the fade out you

00:07:13,750 --> 00:07:16,840
can even change the duration if you

00:07:15,610 --> 00:07:19,840
wanted to run for longer or shorter

00:07:16,840 --> 00:07:22,060
amounts of time you can override that by

00:07:19,840 --> 00:07:25,469
passing in animation data through

00:07:22,060 --> 00:07:28,300
animate child so as you can see here I

00:07:25,469 --> 00:07:30,940
am passing in start to 0 and then I'm

00:07:28,300 --> 00:07:33,610
passing in duration but hold on duration

00:07:30,940 --> 00:07:40,990
is another variable which is interpreted

00:07:33,610 --> 00:07:43,569
by the transition so and how do you get

00:07:40,990 --> 00:07:44,860
data into a transition well so far what

00:07:43,569 --> 00:07:46,330
we've been doing is we've had string

00:07:44,860 --> 00:07:48,960
variables get passed into the animation

00:07:46,330 --> 00:07:51,129
triggers and those string variables then

00:07:48,960 --> 00:07:53,319
depending on what they are to kick out

00:07:51,129 --> 00:07:55,839
the transition but what you can do with

00:07:53,319 --> 00:07:58,360
angular 4.1 is you'll be able to pass in

00:07:55,839 --> 00:07:59,979
an object and in the object 2 basically

00:07:58,360 --> 00:08:02,199
passing the value of where it's going

00:07:59,979 --> 00:08:04,750
and then any other input variables which

00:08:02,199 --> 00:08:09,729
will be interpreted in the animation

00:08:04,750 --> 00:08:11,110
itself ok query this is the biggest

00:08:09,729 --> 00:08:13,449
feature people been asking for and I've

00:08:11,110 --> 00:08:15,370
sat I've stood here on stage before

00:08:13,449 --> 00:08:17,259
telling you that it's coming it's coming

00:08:15,370 --> 00:08:20,500
and with the recent refactor now we've

00:08:17,259 --> 00:08:23,909
been able to finally do it let's take a

00:08:20,500 --> 00:08:26,680
look at a demo of query in action so

00:08:23,909 --> 00:08:28,360
this is the tanzy demo for those of you

00:08:26,680 --> 00:08:29,620
who gone to the webpage already that

00:08:28,360 --> 00:08:32,110
includes all the nice new fancy

00:08:29,620 --> 00:08:35,050
animation bits if i refresh the page you

00:08:32,110 --> 00:08:36,909
can see that a variety of images are

00:08:35,050 --> 00:08:39,940
animating at different times that is a

00:08:36,909 --> 00:08:43,089
query with a stagger across all elements

00:08:39,940 --> 00:08:45,640
within this page if I click here you can

00:08:43,089 --> 00:08:48,610
see that the inner contents have been

00:08:45,640 --> 00:08:49,130
selected with a query and a stagger and

00:08:48,610 --> 00:08:50,810
then

00:08:49,130 --> 00:08:52,759
animagus and if for those of you who

00:08:50,810 --> 00:08:54,290
don't know what a stacker is that means

00:08:52,759 --> 00:08:56,720
when you query multiple elements there's

00:08:54,290 --> 00:08:58,730
a delay in between when each element

00:08:56,720 --> 00:09:03,860
starts its animation so it's kind of

00:08:58,730 --> 00:09:05,779
like a nice curtain like effect so we

00:09:03,860 --> 00:09:07,430
have curry and we have curry all coreg

00:09:05,779 --> 00:09:09,709
selects one element query else looks

00:09:07,430 --> 00:09:14,180
multiple they all come back down to

00:09:09,709 --> 00:09:16,370
query selector but in addition we have

00:09:14,180 --> 00:09:18,170
other macros such as enter and leave we

00:09:16,370 --> 00:09:19,819
can detect for all the elements that

00:09:18,170 --> 00:09:22,160
have an active animation we can search

00:09:19,819 --> 00:09:24,350
by an animation trigger there's all this

00:09:22,160 --> 00:09:28,250
extra stuff that we add on top of query

00:09:24,350 --> 00:09:29,930
selector so with the demo code I just

00:09:28,250 --> 00:09:31,759
showed with the container opening

00:09:29,930 --> 00:09:34,459
closing there was a title there was

00:09:31,759 --> 00:09:37,430
paragraph tags and when it became true

00:09:34,459 --> 00:09:40,100
it would animate those contents we have

00:09:37,430 --> 00:09:41,839
a reveal animation right here and you'll

00:09:40,100 --> 00:09:46,279
notice the reveal animation doesn't have

00:09:41,839 --> 00:09:48,670
an expression it just has and it just

00:09:46,279 --> 00:09:53,509
attacks when the ng s is true and false

00:09:48,670 --> 00:09:55,880
so continuing when it is true we have an

00:09:53,509 --> 00:09:58,100
enter animation that kicks in now what

00:09:55,880 --> 00:10:00,620
we want to do is we want to select the

00:09:58,100 --> 00:10:02,060
container the children and animate both

00:10:00,620 --> 00:10:04,430
of those in parallel so we have a nice

00:10:02,060 --> 00:10:07,399
smooth animation so if we go over the

00:10:04,430 --> 00:10:11,389
steps here first we style the container

00:10:07,399 --> 00:10:13,339
so that it is collapsed then we query

00:10:11,389 --> 00:10:15,500
all its children hide all the children

00:10:13,339 --> 00:10:17,899
and then as a group animation meaning in

00:10:15,500 --> 00:10:24,819
parallel we animate the container and

00:10:17,899 --> 00:10:27,259
the children to become visible so that

00:10:24,819 --> 00:10:29,240
brings us to our next feature which is

00:10:27,259 --> 00:10:30,740
programmatic animations now I mentioned

00:10:29,240 --> 00:10:32,810
that we can have dynamic animations with

00:10:30,740 --> 00:10:34,250
variables but I think the best thing

00:10:32,810 --> 00:10:38,420
would be is we can have an animation be

00:10:34,250 --> 00:10:41,449
defined directly within a component so

00:10:38,420 --> 00:10:44,180
let's take a look at our next demo here

00:10:41,449 --> 00:10:45,939
I have an upload page click here it's a

00:10:44,180 --> 00:10:49,029
modal pop sub I want to upload something

00:10:45,939 --> 00:10:51,680
let's say I want to upload background

00:10:49,029 --> 00:10:53,120
flips you see this percentage indicator

00:10:51,680 --> 00:10:55,339
that's going across the screen that

00:10:53,120 --> 00:10:58,610
animation is dependent on external data

00:10:55,339 --> 00:11:01,220
it's dependent on the status of the

00:10:58,610 --> 00:11:04,250
upload but

00:11:01,220 --> 00:11:05,839
you don't want to have CSS and change

00:11:04,250 --> 00:11:07,910
the CSS value and that's happening yes

00:11:05,839 --> 00:11:08,930
that is possible yes that works but it

00:11:07,910 --> 00:11:11,720
would be nice if you could just define

00:11:08,930 --> 00:11:14,629
an animation and determine where it's

00:11:11,720 --> 00:11:17,240
going to go or even the frame label the

00:11:14,629 --> 00:11:20,899
frame where it is programmatically from

00:11:17,240 --> 00:11:22,939
the component this is possible using the

00:11:20,899 --> 00:11:24,350
animation builder the animation builder

00:11:22,939 --> 00:11:26,870
is injected into the component and

00:11:24,350 --> 00:11:29,060
allows you to build an emissions on the

00:11:26,870 --> 00:11:31,180
fly and then you gain access the player

00:11:29,060 --> 00:11:32,959
which allows for things like scrubbing

00:11:31,180 --> 00:11:34,220
speeding up and slowing down the

00:11:32,959 --> 00:11:39,319
animation and detecting when the

00:11:34,220 --> 00:11:41,029
animation finishes so you have a loading

00:11:39,319 --> 00:11:43,670
component in the demo that I just showed

00:11:41,029 --> 00:11:45,740
it has a constructor that injects the

00:11:43,670 --> 00:11:47,540
animation builder and then we have a

00:11:45,740 --> 00:11:50,810
method called start given a percentage

00:11:47,540 --> 00:11:53,149
now the start method will then take in

00:11:50,810 --> 00:11:56,029
the percentage figure out what the width

00:11:53,149 --> 00:11:58,879
is based on that and then produce a

00:11:56,029 --> 00:12:00,680
player first it produces a definition

00:11:58,879 --> 00:12:02,990
and then it produces a player when we

00:12:00,680 --> 00:12:05,839
give the element and we get back the

00:12:02,990 --> 00:12:07,490
player which then allows us to have all

00:12:05,839 --> 00:12:10,639
kinds of nice methods on them to play

00:12:07,490 --> 00:12:13,910
and pause and change position of it so

00:12:10,639 --> 00:12:15,620
scrubbing becomes super simple and of

00:12:13,910 --> 00:12:20,170
course the player will persist on the

00:12:15,620 --> 00:12:24,079
page until you destroyed all right

00:12:20,170 --> 00:12:26,149
another big one broad animations this

00:12:24,079 --> 00:12:31,069
feature has been asked as well alongside

00:12:26,149 --> 00:12:32,480
query Oh time and time again so if we

00:12:31,069 --> 00:12:34,759
think about routing routing is a little

00:12:32,480 --> 00:12:37,250
tricky because by definition it means

00:12:34,759 --> 00:12:40,939
you have two child routes and you have a

00:12:37,250 --> 00:12:43,399
parent route to control them so the way

00:12:40,939 --> 00:12:46,069
that we do this angular is that you gain

00:12:43,399 --> 00:12:48,189
access to the route outlet the route

00:12:46,069 --> 00:12:51,110
outlet exposes its own directive and

00:12:48,189 --> 00:12:52,759
that directive contains data about the

00:12:51,110 --> 00:12:53,649
active route what's going on did we

00:12:52,759 --> 00:12:57,500
click on a back button

00:12:53,649 --> 00:12:59,750
what page were actually on but it can

00:12:57,500 --> 00:13:02,990
also contain additional metadata that

00:12:59,750 --> 00:13:05,120
you provide within your routing and then

00:13:02,990 --> 00:13:07,100
that metadata is passed into the

00:13:05,120 --> 00:13:09,079
transitions and based on that metadata

00:13:07,100 --> 00:13:10,490
you can decide what kind of animation

00:13:09,079 --> 00:13:13,490
you want to run so this gives you full

00:13:10,490 --> 00:13:14,390
range of deciding what animations go in

00:13:13,490 --> 00:13:18,470
and out

00:13:14,390 --> 00:13:19,790
the router Hamish's so this is what I

00:13:18,470 --> 00:13:22,190
was mentioning with the router elements

00:13:19,790 --> 00:13:23,480
you can see here that I have router

00:13:22,190 --> 00:13:26,180
animations that's going to be an

00:13:23,480 --> 00:13:27,860
animation I'm going to define but the

00:13:26,180 --> 00:13:29,570
value that's passed in there is a

00:13:27,860 --> 00:13:33,860
function that takes in the input

00:13:29,570 --> 00:13:37,220
parameter R which is the outlet

00:13:33,860 --> 00:13:41,899
directive so what does this input

00:13:37,220 --> 00:13:44,480
function do well the input function will

00:13:41,899 --> 00:13:46,490
take in the outlet figure out if it has

00:13:44,480 --> 00:13:50,360
an active route and then examine its

00:13:46,490 --> 00:13:52,700
contact and based on that config it can

00:13:50,360 --> 00:13:53,930
decide what animation wants to run so if

00:13:52,700 --> 00:13:56,029
we're on the index page it has this

00:13:53,930 --> 00:13:58,730
animation config that hey okay we're

00:13:56,029 --> 00:14:00,079
going to the home page and we have an

00:13:58,730 --> 00:14:02,209
about page it's going to the about page

00:14:00,079 --> 00:14:04,040
but the cool thing about this is that

00:14:02,209 --> 00:14:05,720
you can pass in additional variables

00:14:04,040 --> 00:14:07,850
which will be consumed within the

00:14:05,720 --> 00:14:09,230
animation so if you want to have it when

00:14:07,850 --> 00:14:11,870
the user clicks the back button you can

00:14:09,230 --> 00:14:14,000
have you can have a value here called

00:14:11,870 --> 00:14:19,880
back but then you can provide extra data

00:14:14,000 --> 00:14:22,640
in here say slider left 100 pixels so it

00:14:19,880 --> 00:14:24,470
slides from the left of the page back to

00:14:22,640 --> 00:14:26,750
the center all that data will then be

00:14:24,470 --> 00:14:30,709
consumed by the actual animation code

00:14:26,750 --> 00:14:33,440
and then the actual transitions

00:14:30,709 --> 00:14:35,810
themselves are simple we don't have to

00:14:33,440 --> 00:14:38,329
expand the animation API to support all

00:14:35,810 --> 00:14:41,570
these crazy view router edge cases we

00:14:38,329 --> 00:14:42,769
have in this case we have when you go

00:14:41,570 --> 00:14:45,350
from the home page to the about page to

00:14:42,769 --> 00:14:47,449
run this particular animation and you're

00:14:45,350 --> 00:14:49,130
able to animate things parallel you can

00:14:47,449 --> 00:14:51,110
animate them sequentially in this case I

00:14:49,130 --> 00:14:53,440
want to animate the home page in the

00:14:51,110 --> 00:14:58,399
about page together at the same time and

00:14:53,440 --> 00:15:00,019
then you can also have dynamically run

00:14:58,399 --> 00:15:01,610
routes where it doesn't know what route

00:15:00,019 --> 00:15:03,529
page has come in and what page has left

00:15:01,610 --> 00:15:05,089
so you can just query it by enter in

00:15:03,529 --> 00:15:07,279
these these are the things that I was

00:15:05,089 --> 00:15:09,980
mentioning were we expand the nature of

00:15:07,279 --> 00:15:13,850
quarry selector to allow for additional

00:15:09,980 --> 00:15:16,570
things to be queried alright we'll see

00:15:13,850 --> 00:15:16,570
what this looks like

00:15:16,870 --> 00:15:21,320
alright so browsing around the web page

00:15:19,760 --> 00:15:23,330
to have some nice smooth animations I

00:15:21,320 --> 00:15:25,970
close this animation

00:15:23,330 --> 00:15:28,970
now on the bottom I have a bunch of

00:15:25,970 --> 00:15:30,380
links you know about at home what

00:15:28,970 --> 00:15:33,170
happens when I go to a bounce well it's

00:15:30,380 --> 00:15:35,660
going to deconstruct the page Hanan it

00:15:33,170 --> 00:15:38,029
away and animate the next page in with

00:15:35,660 --> 00:15:40,250
this fluid router API just by detecting

00:15:38,029 --> 00:15:43,480
the enter item and the removed item and

00:15:40,250 --> 00:15:49,840
delaying them when they need to be run

00:15:43,480 --> 00:15:49,840
[Applause]

00:15:50,420 --> 00:15:56,670
thank you for the applause and that is

00:15:55,559 --> 00:15:59,179
just about it

00:15:56,670 --> 00:16:02,910
here are the final notes for the slides

00:15:59,179 --> 00:16:05,309
remember 4.1 we're just getting all of

00:16:02,910 --> 00:16:09,480
the api's just to make sure that we're

00:16:05,309 --> 00:16:11,489
not doing anything crazy and I believe I

00:16:09,480 --> 00:16:13,290
have an AMA I think tomorrow I'll be

00:16:11,489 --> 00:16:14,790
happy to show more demos and to answer

00:16:13,290 --> 00:16:16,679
your questions there's a lot of stuff

00:16:14,790 --> 00:16:17,939
that I missed in here a lot of stuff

00:16:16,679 --> 00:16:20,790
coming with the 4.1 release of

00:16:17,939 --> 00:16:22,799
animations and of course thank you to

00:16:20,790 --> 00:16:25,619
the gang special thank you to Thomas and

00:16:22,799 --> 00:16:27,989
ELab these guys helped me for the past

00:16:25,619 --> 00:16:31,410
16 hours getting a whole different Mo's

00:16:27,989 --> 00:16:32,939
to work these guys are awesome and to

00:16:31,410 --> 00:16:35,819
Erica or because with Pharoah she

00:16:32,939 --> 00:16:37,079
designed the demo website and she's

00:16:35,819 --> 00:16:38,999
helped me design other things and of

00:16:37,079 --> 00:16:41,220
course Ward helped me prepare for this

00:16:38,999 --> 00:16:42,540
talk as well and the first guy Rob who

00:16:41,220 --> 00:16:44,609
used to work at Google he's not here

00:16:42,540 --> 00:16:47,100
anymore but me and him and Thomas we all

00:16:44,609 --> 00:16:48,809
designed this nice new API so everybody

00:16:47,100 --> 00:16:50,519
here deserves a super special thank you

00:16:48,809 --> 00:16:52,100
and thank you for everybody here for

00:16:50,519 --> 00:16:57,769
watching this talk

00:16:52,100 --> 00:16:57,769

YouTube URL: https://www.youtube.com/watch?v=Oh9wj-1p2BM


