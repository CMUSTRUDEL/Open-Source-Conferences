Title: When You Can’t Use the Word “BIG BANG” - ASIM HUSSAIN
Publication date: 2017-04-06
Playlist: ng-conf 2017
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,180 --> 00:00:04,220
[Applause]

00:00:02,030 --> 00:00:07,109
Thanks

00:00:04,220 --> 00:00:12,990
so welcome to the workshop on how to

00:00:07,109 --> 00:00:18,869
migrate from angular j/s okay

00:00:12,990 --> 00:00:20,279
so specifically I'm going to cover a

00:00:18,869 --> 00:00:23,330
technique that I use with my clients

00:00:20,279 --> 00:00:27,060
sorry one second

00:00:23,330 --> 00:00:36,660
apologies wrong slides two more seconds

00:00:27,060 --> 00:00:39,440
and here we go okay so as anybody who's

00:00:36,660 --> 00:00:42,180
done a large kind of transformative

00:00:39,440 --> 00:00:48,780
change in their software a refactor

00:00:42,180 --> 00:00:50,879
knows it's it's always just a little bit

00:00:48,780 --> 00:00:56,489
more complex and risky than you first

00:00:50,879 --> 00:00:58,590
thought but don't worry what I'm going

00:00:56,489 --> 00:01:01,530
to be teaching you here is a technique

00:00:58,590 --> 00:01:03,300
that I use with my larger clients those

00:01:01,530 --> 00:01:06,090
who really can't use the word Big Bang

00:01:03,300 --> 00:01:08,549
so the typically clients with you know a

00:01:06,090 --> 00:01:11,040
production application with lots of

00:01:08,549 --> 00:01:13,619
traffic perhaps they have regulatory

00:01:11,040 --> 00:01:16,080
issues but specifically they can't

00:01:13,619 --> 00:01:18,180
afford the downtime you know when we

00:01:16,080 --> 00:01:20,909
they can't just change upgrade a version

00:01:18,180 --> 00:01:23,430
number everything breaks every stops

00:01:20,909 --> 00:01:24,659
working for like three months fixes

00:01:23,430 --> 00:01:27,540
everything and then finally you get a

00:01:24,659 --> 00:01:29,189
release that you can release right what

00:01:27,540 --> 00:01:33,360
I'm going to cover is a technique that's

00:01:29,189 --> 00:01:35,520
iterative the step by step and most

00:01:33,360 --> 00:01:38,369
importantly every step in the process

00:01:35,520 --> 00:01:40,200
you have a releasable application and

00:01:38,369 --> 00:01:42,439
you can throw out into the wild

00:01:40,200 --> 00:01:42,439
right

00:01:47,659 --> 00:01:53,070
if you think so my previous talk that

00:01:50,790 --> 00:01:55,369
might make sense but I'm just gonna ask

00:01:53,070 --> 00:02:00,300
a couple of questions to begin with so

00:01:55,369 --> 00:02:02,700
who here is in the process of or perhaps

00:02:00,300 --> 00:02:05,070
the next three months are going to be in

00:02:02,700 --> 00:02:07,850
the process of migrating an angularjs

00:02:05,070 --> 00:02:09,899
application put your hands up

00:02:07,850 --> 00:02:10,530
okay fetch and keep your hands up keep

00:02:09,899 --> 00:02:13,500
your hands up

00:02:10,530 --> 00:02:15,209
give me hands up of those of you if

00:02:13,500 --> 00:02:17,730
you've got your hands up how many of you

00:02:15,209 --> 00:02:24,600
keep your hands up if your existing

00:02:17,730 --> 00:02:28,019
application is already an SP a ok maybe

00:02:24,600 --> 00:02:29,790
10% put the hands down and of those if

00:02:28,019 --> 00:02:31,350
you keep your hands up of those of you

00:02:29,790 --> 00:02:36,720
keep your hands up if you're using

00:02:31,350 --> 00:02:39,090
ui-router ok see ya most of you ok good

00:02:36,720 --> 00:02:44,390
for those of you who put your hands down

00:02:39,090 --> 00:02:44,390
when they said you sort of you hand up

00:02:46,250 --> 00:02:51,420
of those of you who put your hands down

00:02:48,989 --> 00:02:52,920
when I asked if you if you're not

00:02:51,420 --> 00:02:57,360
already an SP a I've got a bit of bad

00:02:52,920 --> 00:02:59,640
news for you angular 4 and 2 only works

00:02:57,360 --> 00:03:02,400
as an SP a so before you begin the

00:02:59,640 --> 00:03:04,769
process of migrating from your non SPR

00:03:02,400 --> 00:03:06,450
your MPA angularjs application to

00:03:04,769 --> 00:03:07,380
angular for you can have to convert it

00:03:06,450 --> 00:03:12,180
to an SP air you're gonna have to

00:03:07,380 --> 00:03:14,459
convert to an SP a join that process so

00:03:12,180 --> 00:03:16,880
how is this structured one we're going

00:03:14,459 --> 00:03:16,880
to talk about

00:03:20,490 --> 00:03:25,560
so first I'm gonna cover the theory

00:03:23,430 --> 00:03:30,210
behind what we're doing the mental model

00:03:25,560 --> 00:03:32,640
okay so this thing we're going to do

00:03:30,210 --> 00:03:34,140
this is going to be messy there's no way

00:03:32,640 --> 00:03:37,530
around it I'm not gonna show you my

00:03:34,140 --> 00:03:39,600
amazing ng migration github repo D just

00:03:37,530 --> 00:03:41,730
run it with your source folder and just

00:03:39,600 --> 00:03:44,010
migrates everything it's not right this

00:03:41,730 --> 00:03:46,650
is gonna be messy work right but

00:03:44,010 --> 00:03:48,990
underlying all of that if you're aware

00:03:46,650 --> 00:03:51,540
there's like a really simple structure

00:03:48,990 --> 00:03:54,930
really clear set of rules which if you

00:03:51,540 --> 00:03:57,060
follow give you just a really good graph

00:03:54,930 --> 00:03:59,400
what's going on and just a path through

00:03:57,060 --> 00:04:00,320
all that mess over to the other side all

00:03:59,400 --> 00:04:03,030
right

00:04:00,320 --> 00:04:04,860
so that's what if you walk away with

00:04:03,030 --> 00:04:06,510
nothing on this mental model then that's

00:04:04,860 --> 00:04:10,320
good I'm happy with that but I'm also

00:04:06,510 --> 00:04:12,750
gonna be showing you a plan a seems ten

00:04:10,320 --> 00:04:14,130
step plan for migrating it's a pretty

00:04:12,750 --> 00:04:18,930
generic one you should be able to just

00:04:14,130 --> 00:04:23,550
use it in your projects as well and I am

00:04:18,930 --> 00:04:24,990
gonna do like a case study it'll be

00:04:23,550 --> 00:04:26,790
something like as we go along I'll just

00:04:24,990 --> 00:04:29,250
dip into it and just show you for each

00:04:26,790 --> 00:04:32,520
step you know what we need to do for to

00:04:29,250 --> 00:04:34,350
implement something in code now big

00:04:32,520 --> 00:04:36,120
caveat there this is a workshop that I'd

00:04:34,350 --> 00:04:37,980
run that would normally take a full day

00:04:36,120 --> 00:04:40,740
so we've only got an hour so I'm not

00:04:37,980 --> 00:04:42,630
really going to be typing a lot of code

00:04:40,740 --> 00:04:44,940
or expecting you to type any code at all

00:04:42,630 --> 00:04:46,320
to be honest with you why I'm just going

00:04:44,940 --> 00:04:48,690
to just dive in and show you the

00:04:46,320 --> 00:04:56,430
highlights of what needs to be done for

00:04:48,690 --> 00:04:57,930
each step so the important thing is all

00:04:56,430 --> 00:05:00,090
the code for this workshop is going to

00:04:57,930 --> 00:05:02,190
be in this github repo I want to keep it

00:05:00,090 --> 00:05:05,160
on the screen for 10 seconds yet take

00:05:02,190 --> 00:05:08,000
pictures or write it down you don't need

00:05:05,160 --> 00:05:10,470
to clone it right now or anything but um

00:05:08,000 --> 00:05:12,810
wipes but you to do from this workshop

00:05:10,470 --> 00:05:13,320
is just just just sit here absorb what

00:05:12,810 --> 00:05:16,770
I'm saying

00:05:13,320 --> 00:05:19,530
and then afterwards maybe tomorrow or

00:05:16,770 --> 00:05:22,920
when you get back home watch the video

00:05:19,530 --> 00:05:25,140
again go to the source code on the on

00:05:22,920 --> 00:05:26,580
Gharib repo and then things are going to

00:05:25,140 --> 00:05:28,260
start to make sense so just use this

00:05:26,580 --> 00:05:30,690
hour just to absorb what I'm saying and

00:05:28,260 --> 00:05:32,900
just get some keywords into your head

00:05:30,690 --> 00:05:36,949
right but dude

00:05:32,900 --> 00:05:44,199
I do want to just show you quickly as if

00:05:36,949 --> 00:05:46,390
I okay hmm I had prepped this previously

00:05:44,199 --> 00:05:49,550
okay here we go mirroring

00:05:46,390 --> 00:05:49,550
[Music]

00:05:53,690 --> 00:06:00,510
okay good so that give repo I just

00:05:57,330 --> 00:06:01,620
showed you this is it so it's got to

00:06:00,510 --> 00:06:03,020
read me at the bottom with some

00:06:01,620 --> 00:06:06,120
instructions on how to set up

00:06:03,020 --> 00:06:08,790
importantly each step in my plan is

00:06:06,120 --> 00:06:10,920
available as branches so you can check

00:06:08,790 --> 00:06:12,930
out and have a look but actually I've

00:06:10,920 --> 00:06:15,390
done something a little bit different

00:06:12,930 --> 00:06:17,880
I've actually create pull requests for

00:06:15,390 --> 00:06:20,610
each of these branches so later on when

00:06:17,880 --> 00:06:22,530
you start looking up it's about diving

00:06:20,610 --> 00:06:24,990
into each of these steps you can just

00:06:22,530 --> 00:06:27,870
click on a step so let's click on step 3

00:06:24,990 --> 00:06:30,050
for instance and this is a step we

00:06:27,870 --> 00:06:32,400
upgrade the angularjs version and

00:06:30,050 --> 00:06:34,230
specifically what you're going to be

00:06:32,400 --> 00:06:37,500
able to see the code side-by-side so for

00:06:34,230 --> 00:06:39,360
each step you're going to see the the

00:06:37,500 --> 00:06:40,950
code that you need to change for that

00:06:39,360 --> 00:06:43,050
step so I just got pull request for a

00:06:40,950 --> 00:06:45,180
nice way to demonstrate all of that so

00:06:43,050 --> 00:06:46,680
later on just go to the repo look at the

00:06:45,180 --> 00:06:51,480
pull request and things going to start

00:06:46,680 --> 00:07:03,390
to make a lot more sense let me get back

00:06:51,480 --> 00:07:05,430
to the old world yes okay so Who am I so

00:07:03,390 --> 00:07:08,490
my name's assam I run a site called

00:07:05,430 --> 00:07:10,500
cocoa off TV where I do training and

00:07:08,490 --> 00:07:13,860
consulting on angular and JavaScript

00:07:10,500 --> 00:07:15,240
development and recently little just

00:07:13,860 --> 00:07:17,160
kind of happened I suppose I've been

00:07:15,240 --> 00:07:18,480
consulting with kind of large enterprise

00:07:17,160 --> 00:07:20,850
clients or those which kind of really

00:07:18,480 --> 00:07:22,950
gnarly legacy code and just we trying to

00:07:20,850 --> 00:07:25,140
help them move into the modern age so if

00:07:22,950 --> 00:07:26,970
you're perhaps somebody who's got

00:07:25,140 --> 00:07:28,530
problems like that come find me later on

00:07:26,970 --> 00:07:34,370
I'm just really like to find out all the

00:07:28,530 --> 00:07:37,610
different use cases out there you can

00:07:34,370 --> 00:07:40,230
you can find me here so twitter at joy

00:07:37,610 --> 00:07:42,210
and people are still email I mean I

00:07:40,230 --> 00:07:46,530
email all the time so you can email me

00:07:42,210 --> 00:07:48,900
at in the code craft TV something I'm

00:07:46,530 --> 00:07:50,670
really proud of is that last year I

00:07:48,900 --> 00:07:52,110
really stayed released the book on

00:07:50,670 --> 00:07:56,130
angular called angular from theory to

00:07:52,110 --> 00:07:57,870
practice it was funded through some very

00:07:56,130 --> 00:08:01,740
generous backers on Kickstarter so it's

00:07:57,870 --> 00:08:03,510
free right you can find it on Amazon

00:08:01,740 --> 00:08:05,460
iBooks just search the internet you'll

00:08:03,510 --> 00:08:06,300
find it or I prefer if you go to my

00:08:05,460 --> 00:08:08,039
website

00:08:06,300 --> 00:08:10,530
and give me your email address and I'll

00:08:08,039 --> 00:08:12,389
send you a link with all the links

00:08:10,530 --> 00:08:15,090
through Amazon and iBooks and everything

00:08:12,389 --> 00:08:23,610
and the website also has videos as well

00:08:15,090 --> 00:08:26,039
so who loves he doesn't love videos so

00:08:23,610 --> 00:08:29,190
some quick terminology and probably not

00:08:26,039 --> 00:08:34,289
the first person to tell you this based

00:08:29,190 --> 00:08:36,539
you know and when I it's very difficult

00:08:34,289 --> 00:08:38,310
to talk about an angular migration

00:08:36,539 --> 00:08:41,240
without using the words warning for

00:08:38,310 --> 00:08:43,800
anyway um when I use the word angular I

00:08:41,240 --> 00:08:47,550
mean I angular for the latest version of

00:08:43,800 --> 00:08:50,070
angular when they use word angularjs I

00:08:47,550 --> 00:08:53,610
mean the up the one version of angular

00:08:50,070 --> 00:08:55,529
now I've done this webinar workshop a

00:08:53,610 --> 00:08:59,750
couple of times and it's really

00:08:55,529 --> 00:09:03,329
confusing okay so for this room only I'm

00:08:59,750 --> 00:09:05,700
going to use word one and four okay

00:09:03,329 --> 00:09:07,290
outside of this room it's j/s and

00:09:05,700 --> 00:09:09,779
angular a capable for this room only

00:09:07,290 --> 00:09:11,940
it's gonna be warning for okay the slide

00:09:09,779 --> 00:09:14,550
is gonna say J s if it's J s it's gonna

00:09:11,940 --> 00:09:17,220
be one I'll try sometimes I'm gonna say

00:09:14,550 --> 00:09:22,440
to or just forgive me if I do I mean for

00:09:17,220 --> 00:09:26,250
okay so some other terminology in case

00:09:22,440 --> 00:09:29,579
you don't know but in in angular 1 we

00:09:26,250 --> 00:09:32,730
have filters in angular for these are

00:09:29,579 --> 00:09:35,940
pipes in angular 1 we have controllers

00:09:32,730 --> 00:09:37,589
in angular 4 we have components in

00:09:35,940 --> 00:09:39,270
angular 1 we have directive the

00:09:37,589 --> 00:09:42,089
directives which have a template which

00:09:39,270 --> 00:09:45,930
have some HTML these are now components

00:09:42,089 --> 00:09:48,390
in angular for the directives that don't

00:09:45,930 --> 00:09:51,750
have HTML might call the behavioral

00:09:48,390 --> 00:09:55,260
directives these are just directives in

00:09:51,750 --> 00:09:57,720
angular for services and factories and

00:09:55,260 --> 00:10:01,680
angular 1 are just services and angular

00:09:57,720 --> 00:10:03,510
4 and um I'm gonna use the word entity a

00:10:01,680 --> 00:10:04,890
lot throughout this talk so when I say

00:10:03,510 --> 00:10:08,910
entity I just mean one of those things

00:10:04,890 --> 00:10:13,589
like a component a service a something

00:10:08,910 --> 00:10:16,920
one entity one of those things now this

00:10:13,589 --> 00:10:19,470
might seem a bit weird but my first

00:10:16,920 --> 00:10:20,220
version of this talk I had like angular

00:10:19,470 --> 00:10:22,980
00:10:20,220 --> 00:10:24,840
this darker version of red and angular 4

00:10:22,980 --> 00:10:26,040
was this was this brighter version of

00:10:24,840 --> 00:10:27,600
red and I just got a lot of complaints

00:10:26,040 --> 00:10:29,070
and nobody could could tell the

00:10:27,600 --> 00:10:31,650
difference especially colorblind people

00:10:29,070 --> 00:10:33,120
so now if you see blue anywhere on the

00:10:31,650 --> 00:10:37,820
screen that's going to be angular for

00:10:33,120 --> 00:10:37,820
BBC red it's gonna be angular 1 okay

00:10:38,240 --> 00:10:41,270
okay so I'm gonna kind of show you we're

00:10:40,440 --> 00:10:43,410
gonna work you through an application

00:10:41,270 --> 00:10:44,910
migrate this application of angular 1 to

00:10:43,410 --> 00:10:46,670
angular forms I'm gonna show you it

00:10:44,910 --> 00:10:49,050
right now some enough to do this weird

00:10:46,670 --> 00:11:01,080
mirroring display thing again give me a

00:10:49,050 --> 00:11:02,730
second okay yeah so I teach an angular 1

00:11:01,080 --> 00:11:04,350
course and in the angular 1 course I

00:11:02,730 --> 00:11:06,750
create this application it's a simple

00:11:04,350 --> 00:11:09,090
contacts application you can kind of

00:11:06,750 --> 00:11:10,100
load different contacts at the bottom

00:11:09,090 --> 00:11:17,790
there's a spinner

00:11:10,100 --> 00:11:21,150
you can search sort and delete when you

00:11:17,790 --> 00:11:25,620
delete there's a toaster appearing you

00:11:21,150 --> 00:11:28,670
can edit and save and you can also

00:11:25,620 --> 00:11:31,080
create a new one from scratch here okay

00:11:28,670 --> 00:11:32,870
so this is the angular 1 application

00:11:31,080 --> 00:11:35,550
we're gonna be moving across now I

00:11:32,870 --> 00:11:37,230
mentioned entities earlier on so just

00:11:35,550 --> 00:11:40,770
imagine what entities are on this page

00:11:37,230 --> 00:11:42,240
right now we've got something normally

00:11:40,770 --> 00:11:44,850
like to point at things but this is just

00:11:42,240 --> 00:11:46,530
a little bit too big but there's like a

00:11:44,850 --> 00:11:49,590
search bar at the top that's kind of one

00:11:46,530 --> 00:11:52,350
entity we've got like a list here list

00:11:49,590 --> 00:11:53,730
it's another kind of entity each of

00:11:52,350 --> 00:11:56,130
these lists have these little cards that

00:11:53,730 --> 00:11:58,200
other entities we've got a edit page

00:11:56,130 --> 00:12:00,030
that's one entity a create page another

00:11:58,200 --> 00:12:02,190
entity should have spinning us another

00:12:00,030 --> 00:12:03,840
entity are those different entities on

00:12:02,190 --> 00:12:05,280
the page I just won't don't worry about

00:12:03,840 --> 00:12:07,470
it I'm going to be mentioning this one I

00:12:05,280 --> 00:12:10,130
just want to know when I talk about this

00:12:07,470 --> 00:12:17,150
stuff what it means on the screen right

00:12:10,130 --> 00:12:17,150
so let's go back to separate display

00:12:23,839 --> 00:12:39,270
drink of water from the very large

00:12:27,839 --> 00:12:42,060
bottle okay oh and as I mentioned I'm

00:12:39,270 --> 00:12:45,050
using UI Rooter I'm not using your eye

00:12:42,060 --> 00:12:46,230
router a router is one of these things

00:12:45,050 --> 00:12:49,920
okay

00:12:46,230 --> 00:12:51,149
we're using you out Rooter so as I

00:12:49,920 --> 00:12:53,550
mentioned I'm going to show you a mental

00:12:51,149 --> 00:12:54,480
model we're going to play a little quiz

00:12:53,550 --> 00:12:55,560
I'm going to show you a picture and

00:12:54,480 --> 00:13:01,860
you're going to tell me what the mental

00:12:55,560 --> 00:13:04,010
model is so that's a picture and your

00:13:01,860 --> 00:13:04,010
guesses

00:13:04,430 --> 00:13:14,010
yeah dual dual booting okay all right

00:13:09,149 --> 00:13:17,180
kind of guys so there's a simplified

00:13:14,010 --> 00:13:19,950
view of our application it's all running

00:13:17,180 --> 00:13:21,089
angular one so you can see we've got the

00:13:19,950 --> 00:13:22,920
different entities I might have

00:13:21,089 --> 00:13:25,470
mentioned earlier on cards been a list

00:13:22,920 --> 00:13:27,899
edit create we've also got some services

00:13:25,470 --> 00:13:29,370
contact service and contact weasels

00:13:27,899 --> 00:13:32,550
because it's angular war and I like

00:13:29,370 --> 00:13:35,490
using energy resource so when we dual

00:13:32,550 --> 00:13:38,640
boo what we're basically doing is we're

00:13:35,490 --> 00:13:42,959
just including both angular 4 and

00:13:38,640 --> 00:13:44,190
angular 1 in the application okay and I

00:13:42,959 --> 00:13:46,110
literally mean we both we including both

00:13:44,190 --> 00:13:47,970
libraries so for this period of

00:13:46,110 --> 00:13:49,529
transition you actually your final

00:13:47,970 --> 00:13:50,610
bundle is going to create boat is gonna

00:13:49,529 --> 00:13:52,890
have both of the minute it's gonna be

00:13:50,610 --> 00:13:54,990
larger that's just something you have to

00:13:52,890 --> 00:13:56,700
live with for a while right but the

00:13:54,990 --> 00:13:59,579
advantage of we call actual another

00:13:56,700 --> 00:14:03,450
thing we also call this hybrid mode okay

00:13:59,579 --> 00:14:05,990
so the advantage of doing that is that

00:14:03,450 --> 00:14:09,420
now we can take some other entities and

00:14:05,990 --> 00:14:12,120
we can convert them to angular 4 and

00:14:09,420 --> 00:14:16,279
they can live with our angular 1

00:14:12,120 --> 00:14:16,279
entities like side by side right

00:14:19,130 --> 00:14:25,829
animations all right

00:14:21,240 --> 00:14:27,689
and you'll hit his owns we all know

00:14:25,829 --> 00:14:30,600
zones and be pretty comfortable of what

00:14:27,689 --> 00:14:32,629
zones are and we can come up here and

00:14:30,600 --> 00:14:35,999
explain what personas are to people

00:14:32,629 --> 00:14:37,379
zones are amazing I've got to talk them

00:14:35,999 --> 00:14:38,910
planning to give um zones and and I

00:14:37,379 --> 00:14:40,189
think they're both people talk about it

00:14:38,910 --> 00:14:42,600
enough anyway

00:14:40,189 --> 00:14:44,910
when angular to an angle for we've got

00:14:42,600 --> 00:14:46,829
this thing called zones and we had scope

00:14:44,910 --> 00:14:48,509
to apply in angular 1 and zones

00:14:46,829 --> 00:14:51,509
basically mean we don't have to use

00:14:48,509 --> 00:14:52,589
scope to apply in our code ok so now

00:14:51,509 --> 00:14:54,449
that we're in this hybrid mode you

00:14:52,589 --> 00:14:58,579
actually don't need to use scope apply

00:14:54,449 --> 00:15:01,709
even in your angular 1 code alright

00:14:58,579 --> 00:15:05,300
second mental model this isn't even a

00:15:01,709 --> 00:15:10,519
guess it's very literal it's a chameleon

00:15:05,300 --> 00:15:16,189
so you've got like this angular 1 entity

00:15:10,519 --> 00:15:18,329
and we've got this angular 4 entity now

00:15:16,189 --> 00:15:21,029
you might think from what I just told

00:15:18,329 --> 00:15:22,470
you that they can both kind of live next

00:15:21,029 --> 00:15:26,549
each other in side-by-side but actually

00:15:22,470 --> 00:15:34,199
that's not exactly true ok what we have

00:15:26,549 --> 00:15:38,939
to do is we have to upgrade our angular

00:15:34,199 --> 00:15:40,379
1 entity or downgrade our angular 4

00:15:38,939 --> 00:15:41,610
entity so you're going to see this in a

00:15:40,379 --> 00:15:43,889
lot of my pictures if you see the arrow

00:15:41,610 --> 00:15:46,499
going up I mean upgrade the arrow going

00:15:43,889 --> 00:15:50,399
down is downgrade and what's advantage

00:15:46,499 --> 00:15:55,439
doing that well our upgraded angular one

00:15:50,399 --> 00:15:57,540
entity can then be used in angular 4 it

00:15:55,439 --> 00:15:59,480
can then also just be using angular 1

00:15:57,540 --> 00:16:01,679
because it's still an angular 1 entity

00:15:59,480 --> 00:16:04,170
and it could also be isn't downgrade

00:16:01,679 --> 00:16:07,139
angular 1 and the same goes vice versa

00:16:04,170 --> 00:16:09,299
you're downgraded angular 4 and so you

00:16:07,139 --> 00:16:11,910
can then just be used inside angular 1

00:16:09,299 --> 00:16:16,499
but the technique I'm showing you don't

00:16:11,910 --> 00:16:18,480
really need to do that another important

00:16:16,499 --> 00:16:21,299
thing is dependency injection okay so

00:16:18,480 --> 00:16:23,759
you've got I've got here like a service

00:16:21,299 --> 00:16:25,439
that's an angular for service that

00:16:23,759 --> 00:16:29,879
downgraded because being using angular 1

00:16:25,439 --> 00:16:32,220
and angular 4 it's not just sharing code

00:16:29,879 --> 00:16:35,120
it's sharing the same instance of data

00:16:32,220 --> 00:16:37,730
so if your angular 4 list control

00:16:35,120 --> 00:16:41,210
mr. component changed from data on the

00:16:37,730 --> 00:16:42,410
service the angular 1 entity would still

00:16:41,210 --> 00:16:44,810
see the same data so you actually

00:16:42,410 --> 00:16:49,370
sharing data as well as the same

00:16:44,810 --> 00:16:51,140
dependency injection do both now

00:16:49,370 --> 00:16:53,029
struggling to come up with pictures for

00:16:51,140 --> 00:16:58,310
mental models but anyway so this one is

00:16:53,029 --> 00:17:00,520
control freak it's not important concept

00:16:58,310 --> 00:17:03,470
to know about the migration is that each

00:17:00,520 --> 00:17:07,939
Dom element in your tree is going to be

00:17:03,470 --> 00:17:09,860
controlled by either angular one or

00:17:07,939 --> 00:17:13,480
angular 4 in this kind of hybrid mode

00:17:09,860 --> 00:17:16,939
okay so by default it's all angular one

00:17:13,480 --> 00:17:20,120
and if we wanted to change our card

00:17:16,939 --> 00:17:23,630
control to the angular for this wouldn't

00:17:20,120 --> 00:17:25,790
work the body the body tag of angular

00:17:23,630 --> 00:17:27,890
one just couldn't won't see the angular

00:17:25,790 --> 00:17:31,100
four component we need to down great

00:17:27,890 --> 00:17:34,100
loss let me sit down grade an angular

00:17:31,100 --> 00:17:36,170
for entity so that the angular 1 body

00:17:34,100 --> 00:17:38,420
tag can see it but now we've got problem

00:17:36,170 --> 00:17:40,850
because our spinner is angular 1 so now

00:17:38,420 --> 00:17:46,370
the card component can't see the spinner

00:17:40,850 --> 00:17:48,500
so we then basically have to upgrade the

00:17:46,370 --> 00:17:50,179
spinner and that's basically this game

00:17:48,500 --> 00:17:51,620
you're going to have to play during this

00:17:50,179 --> 00:17:53,300
migration process you're just going to

00:17:51,620 --> 00:17:55,610
have to upgrade and downgrade different

00:17:53,300 --> 00:18:04,460
things at different levels till together

00:17:55,610 --> 00:18:06,650
to work together and kind of the topmost

00:18:04,460 --> 00:18:08,750
component is always angular 1 it's

00:18:06,650 --> 00:18:14,900
always angularjs ok if you ever

00:18:08,750 --> 00:18:16,940
wondering and final one is plagued so

00:18:14,900 --> 00:18:18,290
this is kind of pulls it all together

00:18:16,940 --> 00:18:21,890
and explains what we're going to be

00:18:18,290 --> 00:18:23,540
doing I love explaining to clients the

00:18:21,890 --> 00:18:25,940
migration progress process using this

00:18:23,540 --> 00:18:28,190
this analogy so the way I say it is

00:18:25,940 --> 00:18:31,100
we're going to infect our angular 1

00:18:28,190 --> 00:18:32,960
application with angular 4 and then it's

00:18:31,100 --> 00:18:35,000
going to spread like a disease through

00:18:32,960 --> 00:18:37,940
your application until eventually it's

00:18:35,000 --> 00:18:40,210
going to take over right so right now

00:18:37,940 --> 00:18:42,830
we've got the resource it's an angular 4

00:18:40,210 --> 00:18:46,050
entity we had to downgrade it to make it

00:18:42,830 --> 00:18:49,990
used make it usable with an angular 1

00:18:46,050 --> 00:18:52,510
and then we basically then go RK then we

00:18:49,990 --> 00:18:53,920
do the service you have to downgrade it

00:18:52,510 --> 00:18:57,610
cause it's being used in angular 1 but

00:18:53,920 --> 00:19:00,100
now resource resource is only being used

00:18:57,610 --> 00:19:03,040
by an angular 4 entity so we just drop

00:19:00,100 --> 00:19:04,270
the downgrade code that's basically it

00:19:03,040 --> 00:19:05,980
we just start infecting your

00:19:04,270 --> 00:19:08,710
applications we start at the leaves

00:19:05,980 --> 00:19:11,490
we downgrade if we need to then we just

00:19:08,710 --> 00:19:13,720
keep on going up until they eventually

00:19:11,490 --> 00:19:17,230
kind of everything in our application is

00:19:13,720 --> 00:19:19,480
just written as angular 4 and then we

00:19:17,230 --> 00:19:25,270
just basically drop angular 1 I'm gonna

00:19:19,480 --> 00:19:27,280
go an angular clarification right but

00:19:25,270 --> 00:19:29,950
like everything is not so rosy

00:19:27,280 --> 00:19:33,790
there's still a couple of issues one of

00:19:29,950 --> 00:19:37,780
them is that filters filters in angular

00:19:33,790 --> 00:19:39,760
1 can't be migrated to angular 4 you

00:19:37,780 --> 00:19:42,610
just have to rewrite them as pipes but

00:19:39,760 --> 00:19:44,140
your filters typically should be really

00:19:42,610 --> 00:19:48,070
simple bits of code you can use just

00:19:44,140 --> 00:19:50,470
copy and paste them also some directives

00:19:48,070 --> 00:19:52,780
can't be migrated across so there's some

00:19:50,470 --> 00:19:55,630
features of directives that just need to

00:19:52,780 --> 00:19:57,400
be rewritten and as I said before if

00:19:55,630 --> 00:19:59,260
you're using a directory without HTML

00:19:57,400 --> 00:20:00,310
that doesn't translate into something

00:19:59,260 --> 00:20:05,200
called a component you just have to

00:20:00,310 --> 00:20:08,800
rewrite it so here we go acting 10 step

00:20:05,200 --> 00:20:10,660
plan right I'm going to show you the 10

00:20:08,800 --> 00:20:12,190
steps and then we're going to kind of

00:20:10,660 --> 00:20:14,230
select a few of them and I'm going to

00:20:12,190 --> 00:20:15,550
show you the code for them right so I'm

00:20:14,230 --> 00:20:17,740
just gonna initially just go through the

00:20:15,550 --> 00:20:19,630
10 steps pretty quickly so don't worry

00:20:17,740 --> 00:20:21,340
if you if I'm not explaining each one

00:20:19,630 --> 00:20:25,600
too deeply I'll go into more depth later

00:20:21,340 --> 00:20:27,610
on so step one when we all I don't know

00:20:25,600 --> 00:20:29,770
when we all started writing angular 1

00:20:27,610 --> 00:20:32,200
applications ice died four five years

00:20:29,770 --> 00:20:33,520
ago there's no style guide John Papa

00:20:32,200 --> 00:20:34,840
hadn't witnessed our guide table what I

00:20:33,520 --> 00:20:37,560
hadn't the style guy we just kind of

00:20:34,840 --> 00:20:40,930
were winging it we're Wild West right

00:20:37,560 --> 00:20:42,970
and I just say take this opportunity to

00:20:40,930 --> 00:20:45,940
kind of pick a style guide and just

00:20:42,970 --> 00:20:47,710
start matching it now you can you can

00:20:45,940 --> 00:20:49,330
pick and choose whatever you want the

00:20:47,710 --> 00:20:51,850
only one thing you really really really

00:20:49,330 --> 00:20:55,800
have to do at this stage is to make sure

00:20:51,850 --> 00:20:58,000
that each entity is a separate file

00:20:55,800 --> 00:20:58,840
that's the best the minimum each

00:20:58,000 --> 00:21:00,160
entities

00:20:58,840 --> 00:21:02,260
separate file because when we want to

00:21:00,160 --> 00:21:04,360
use module loading we've got to have

00:21:02,260 --> 00:21:06,130
them a separate file so I used to just

00:21:04,360 --> 00:21:07,510
jumble things together but now just make

00:21:06,130 --> 00:21:09,150
sure everything's in one file that's the

00:21:07,510 --> 00:21:13,360
minimum you have to do a step 1

00:21:09,150 --> 00:21:15,190
so to use typescript use build build

00:21:13,360 --> 00:21:19,900
tools if you look at the the application

00:21:15,190 --> 00:21:22,060
in the in the code that I've got I use

00:21:19,900 --> 00:21:25,560
webpack straightaway so even from step 2

00:21:22,060 --> 00:21:25,560
ease and type script I'm using webpack

00:21:25,650 --> 00:21:30,970
migrate at least upgrade at least

00:21:28,480 --> 00:21:32,170
angular 1.5 okay for you below that you

00:21:30,970 --> 00:21:34,540
need to move up today you need to move

00:21:32,170 --> 00:21:36,040
up to there because we need to use a

00:21:34,540 --> 00:21:38,580
feature that was introduced in angular 1

00:21:36,040 --> 00:21:43,570
point 5 for components these are

00:21:38,580 --> 00:21:45,910
components that are in angular 1 that

00:21:43,570 --> 00:21:47,230
map to component that angular 4 has

00:21:45,910 --> 00:21:48,490
components and this was kind of an

00:21:47,230 --> 00:21:53,410
implementation of components in angular

00:21:48,490 --> 00:21:55,330
1 if we convert our angular 1

00:21:53,410 --> 00:21:57,730
application to components angular 1

00:21:55,330 --> 00:22:00,820
components it makes it easier to convert

00:21:57,730 --> 00:22:02,110
to angular 4 components later on then

00:22:00,820 --> 00:22:03,700
this is like the really fun part it's

00:22:02,110 --> 00:22:05,500
got the es6 suffocation or the

00:22:03,700 --> 00:22:07,540
typescript if occation of your

00:22:05,500 --> 00:22:09,010
application so this is an opportunity

00:22:07,540 --> 00:22:11,770
for you your team just to go through

00:22:09,010 --> 00:22:15,120
your code start using some fun es6

00:22:11,770 --> 00:22:19,060
constructs these structuring classes

00:22:15,120 --> 00:22:21,040
lets a fat arrow syntax just basically

00:22:19,060 --> 00:22:22,330
start going through and just just

00:22:21,040 --> 00:22:25,570
converting your code to yes 6 or

00:22:22,330 --> 00:22:26,920
typescript right and you might even tree

00:22:25,570 --> 00:22:28,270
just to leave it here to be honest with

00:22:26,920 --> 00:22:30,070
you I mean now you've got a pretty

00:22:28,270 --> 00:22:32,830
decent angular 1 application it follows

00:22:30,070 --> 00:22:35,320
a foul guide using typescript misusing

00:22:32,830 --> 00:22:37,600
components and using es6 so maybe you'd

00:22:35,320 --> 00:22:39,400
be happy at this stage right but if you

00:22:37,600 --> 00:22:41,020
did really want to move to angular 2

00:22:39,400 --> 00:22:43,840
then this at the moment when you start

00:22:41,020 --> 00:22:45,160
including your for this is the moment

00:22:43,840 --> 00:22:47,590
when you add angular for your

00:22:45,160 --> 00:22:49,600
application and then what I say you

00:22:47,590 --> 00:22:53,350
start moving your services to angular

00:22:49,600 --> 00:22:55,020
for their new components are angular 1

00:22:53,350 --> 00:22:59,770
components now move to angular 4

00:22:55,020 --> 00:23:01,810
components and then if you've got

00:22:59,770 --> 00:23:05,590
routing I see that I say leave routing

00:23:01,810 --> 00:23:08,200
as far as close to the end as possible

00:23:05,590 --> 00:23:10,030
okay so do routing pretty much as the

00:23:08,200 --> 00:23:11,920
last thing that you do is put the

00:23:10,030 --> 00:23:12,700
bruiting migrating routing is really

00:23:11,920 --> 00:23:16,659
simple if every

00:23:12,700 --> 00:23:18,100
else is done right and the final thing

00:23:16,659 --> 00:23:19,299
is just basically go to your car to make

00:23:18,100 --> 00:23:25,029
sure you remove every reference to

00:23:19,299 --> 00:23:26,259
angular j/s okay let's start going

00:23:25,029 --> 00:23:28,840
through some stuff and I'm gonna skip

00:23:26,259 --> 00:23:32,259
one two three if you want that quite

00:23:28,840 --> 00:23:34,149
simple if you want to go you can have a

00:23:32,259 --> 00:23:35,799
look at the source code on the git repo

00:23:34,149 --> 00:23:38,080
does also read meat as well so you can

00:23:35,799 --> 00:23:40,029
see details for each step one two three

00:23:38,080 --> 00:23:41,529
is fairly straightforward and go have a

00:23:40,029 --> 00:23:47,049
look at it later on I'm just gonna dive

00:23:41,529 --> 00:23:50,830
into component education so some top

00:23:47,049 --> 00:23:52,299
tips for this stage I got the students

00:23:50,830 --> 00:23:53,889
asking me like where where do I start I

00:23:52,299 --> 00:23:55,419
wish component is my first component

00:23:53,889 --> 00:23:57,820
start with the components that you that

00:23:55,419 --> 00:24:02,499
you have in your rooter-man your top

00:23:57,820 --> 00:24:05,399
level Rooter configuration it cool my

00:24:02,499 --> 00:24:05,399
show you some code now

00:24:12,320 --> 00:24:16,549
this way necessary

00:24:25,680 --> 00:24:36,120
okay so I'm just going to show you the

00:24:33,540 --> 00:24:37,440
before and after so before I'm just

00:24:36,120 --> 00:24:39,600
gonna show you one to begin with so I'm

00:24:37,440 --> 00:24:42,210
going with the the list component that

00:24:39,600 --> 00:24:44,670
we have already actually let me show you

00:24:42,210 --> 00:24:46,860
the routing firstly you see that so this

00:24:44,670 --> 00:24:50,130
is just a simple UI routes a

00:24:46,860 --> 00:24:53,640
configuration I've got at the top here

00:24:50,130 --> 00:24:56,220
just kind of one route which is their

00:24:53,640 --> 00:24:57,540
controller with some template HTML so

00:24:56,220 --> 00:25:00,300
we're just going to convert this into a

00:24:57,540 --> 00:25:03,270
component now right so the person this

00:25:00,300 --> 00:25:05,190
controller is the simple angular 1

00:25:03,270 --> 00:25:09,120
controller we're injecting scope and

00:25:05,190 --> 00:25:12,240
contact service right so if I now just

00:25:09,120 --> 00:25:17,100
moves a step 4 you can see what this

00:25:12,240 --> 00:25:22,410
looks like as a angular component

00:25:17,100 --> 00:25:24,540
angular 1 component here ok let's look

00:25:22,410 --> 00:25:25,860
at the bottom this looks pretty similar

00:25:24,540 --> 00:25:28,560
to what we had before we got angular dot

00:25:25,860 --> 00:25:31,980
module and your dock component not dock

00:25:28,560 --> 00:25:34,590
controller dot component the first

00:25:31,980 --> 00:25:37,050
parameter is like the the tag name and

00:25:34,590 --> 00:25:38,760
the second parameter is an object that

00:25:37,050 --> 00:25:42,120
describes what that component will

00:25:38,760 --> 00:25:43,380
contain so the selector is the kind of

00:25:42,120 --> 00:25:50,910
tag name or that will actually just be

00:25:43,380 --> 00:25:52,530
translated to person - lists yeah and

00:25:50,910 --> 00:25:54,690
then I like to inline my template

00:25:52,530 --> 00:25:56,250
because it's easy and simple so I've

00:25:54,690 --> 00:25:57,900
inline my template here you can I have

00:25:56,250 --> 00:26:01,410
an external template file as well if you

00:25:57,900 --> 00:26:05,070
want you have binding so this is the

00:26:01,410 --> 00:26:07,410
equivalent of scope in directives let me

00:26:05,070 --> 00:26:10,590
have a controller and already I'm using

00:26:07,410 --> 00:26:12,150
es6 classes here okay but controller

00:26:10,590 --> 00:26:14,430
normal expects a function constructor

00:26:12,150 --> 00:26:15,810
and actually underneath in es6 class is

00:26:14,430 --> 00:26:18,510
just a function constructor so you could

00:26:15,810 --> 00:26:22,710
use a class directly here and anything

00:26:18,510 --> 00:26:25,500
on a constructor on a es6 class this is

00:26:22,710 --> 00:26:29,270
how you inject stuff in okay

00:26:25,500 --> 00:26:31,980
now I'm not using dollar sign scope

00:26:29,270 --> 00:26:33,690
don't need to use with this with

00:26:31,980 --> 00:26:36,150
components it defaults using controller

00:26:33,690 --> 00:26:38,590
as syntax which means that anything you

00:26:36,150 --> 00:26:41,440
add on to the this variable

00:26:38,590 --> 00:26:43,750
is available in the template as dollar

00:26:41,440 --> 00:26:48,100
sign control okay so that's how we

00:26:43,750 --> 00:26:54,539
basically change our template to work

00:26:48,100 --> 00:27:08,039
with components okay so let's go back

00:26:54,539 --> 00:27:10,210
into alright

00:27:08,039 --> 00:27:11,740
and again there's more there's more to

00:27:10,210 --> 00:27:13,600
it than that but again there's want to

00:27:11,740 --> 00:27:14,890
give you the highlight so later on look

00:27:13,600 --> 00:27:16,210
at the source code and you'll find all

00:27:14,890 --> 00:27:17,950
the other changes I've done for step

00:27:16,210 --> 00:27:22,899
four but it's all pretty much following

00:27:17,950 --> 00:27:24,850
the similar pattern all right now is the

00:27:22,899 --> 00:27:26,860
fun part now it's the es6 if ocation of

00:27:24,850 --> 00:27:28,480
your application right now all type

00:27:26,860 --> 00:27:35,940
script if occasion depending on how far

00:27:28,480 --> 00:27:35,940
you want to take it so I recommend that

00:27:37,440 --> 00:27:42,640
a great place to start is a services so

00:27:40,510 --> 00:27:43,870
the services are kind of leaves of your

00:27:42,640 --> 00:27:47,710
application so that's just a really

00:27:43,870 --> 00:27:49,750
great place to start and also angular

00:27:47,710 --> 00:27:54,399
one services angular one services that

00:27:49,750 --> 00:27:57,190
are written as es6 classes are really

00:27:54,399 --> 00:27:58,659
really easy to migrate to angular for so

00:27:57,190 --> 00:28:04,059
take your services and convert them into

00:27:58,659 --> 00:28:05,890
classes alright another top tip like who

00:28:04,059 --> 00:28:11,140
uses dollar resource in their angular 1

00:28:05,890 --> 00:28:12,730
application write 20% and there's no

00:28:11,140 --> 00:28:14,470
dollar resource there's no equivalent

00:28:12,730 --> 00:28:16,990
two dollar resource and angular 4 so

00:28:14,470 --> 00:28:22,320
take this opportunity to use dollar HTTP

00:28:16,990 --> 00:28:22,320
for which there is a direct equivalent

00:28:25,260 --> 00:28:29,919
then use factories use services because

00:28:28,659 --> 00:28:32,140
service is expected constructor

00:28:29,919 --> 00:28:33,370
functions and classes just constructor

00:28:32,140 --> 00:28:35,640
function so it makes it really easy to

00:28:33,370 --> 00:28:35,640
use

00:28:36,330 --> 00:28:41,830
don't bother with dollar q we've now got

00:28:39,460 --> 00:28:46,330
promised as a native feature in any s 6

00:28:41,830 --> 00:28:47,890
or just use promises and I used to o use

00:28:46,330 --> 00:28:50,230
a lot of angular for ease so just use

00:28:47,890 --> 00:28:53,010
things like for off like cool like ESX

00:28:50,230 --> 00:28:53,010
constructs right

00:28:53,030 --> 00:28:57,060
so I'm just going to show you a bit of

00:28:55,650 --> 00:28:59,910
code again so I'm going to show you the

00:28:57,060 --> 00:29:03,290
contact resource and I'm also going to

00:28:59,910 --> 00:29:03,290
show you the contact service as well

00:29:11,390 --> 00:29:19,360
okay

00:29:13,480 --> 00:29:20,950
so if I go yeah this is the contact

00:29:19,360 --> 00:29:23,220
resource that we've got can people see

00:29:20,950 --> 00:29:28,240
the cut is it too small at the back

00:29:23,220 --> 00:29:30,909
you're good you're good okay um so this

00:29:28,240 --> 00:29:32,980
is just a simple resource you know you

00:29:30,909 --> 00:29:34,809
have to did a lot of boilerplate code

00:29:32,980 --> 00:29:38,909
for you so it's not very big so if I

00:29:34,809 --> 00:29:41,169
flip over to the next stage Stage five

00:29:38,909 --> 00:29:44,380
you can see what I've done is a

00:29:41,169 --> 00:29:45,940
basically turned into class okay with

00:29:44,380 --> 00:29:47,980
properties and about it functions

00:29:45,940 --> 00:29:50,380
functions that just mirror the same

00:29:47,980 --> 00:29:53,620
functions I'd have on my dollar resource

00:29:50,380 --> 00:29:57,570
and at the bottom I'm just configuring

00:29:53,620 --> 00:30:00,730
it as a service yeah and I'm passing in

00:29:57,570 --> 00:30:05,769
the names contact and I'm passing in the

00:30:00,730 --> 00:30:08,019
class name the class name right so let

00:30:05,769 --> 00:30:11,970
me go back to step four so I can show

00:30:08,019 --> 00:30:14,980
you this service okay so this is that

00:30:11,970 --> 00:30:17,110
it's just like a simple service that I

00:30:14,980 --> 00:30:18,490
have it's a factory which means I'm

00:30:17,110 --> 00:30:22,510
returning an object and object with

00:30:18,490 --> 00:30:27,250
properties on it I'm calling a function

00:30:22,510 --> 00:30:30,730
at the end so flipping this over yes

00:30:27,250 --> 00:30:33,970
sixty flying this means just the same as

00:30:30,730 --> 00:30:36,010
before I'm turning into a class the

00:30:33,970 --> 00:30:38,169
constructor is where I'm injecting stuff

00:30:36,010 --> 00:30:40,570
into it I'm prepared all those

00:30:38,169 --> 00:30:45,700
properties to functions I'm using things

00:30:40,570 --> 00:30:48,480
like like like lat and four of I'm doing

00:30:45,700 --> 00:30:51,399
things like using promises instead of Q

00:30:48,480 --> 00:30:53,980
right and at the end just the same as

00:30:51,399 --> 00:30:57,279
before I'm just configuring it as a

00:30:53,980 --> 00:30:58,840
service and passing in the class name to

00:30:57,279 --> 00:31:00,880
start with services then just go through

00:30:58,840 --> 00:31:03,399
the rest of your application just start

00:31:00,880 --> 00:31:05,799
es 60 firing everything and I don't I

00:31:03,399 --> 00:31:07,570
find this the most fun part of the whole

00:31:05,799 --> 00:31:09,940
project cuz then everybody's getting to

00:31:07,570 --> 00:31:13,720
finally use all this cool stuff they've

00:31:09,940 --> 00:31:14,710
been hearing about for ages but then

00:31:13,720 --> 00:31:17,409
we've got to get into the serious

00:31:14,710 --> 00:31:19,620
business of actually migrating so that's

00:31:17,409 --> 00:31:19,620
good

00:31:27,149 --> 00:31:33,840
sorry one second

00:31:29,789 --> 00:31:33,840
my show nights are cold

00:31:38,919 --> 00:31:41,070
um

00:31:41,710 --> 00:31:46,039
okay my presenter notes have gone

00:31:43,580 --> 00:31:47,750
mouthing up the winget so at this point

00:31:46,039 --> 00:31:49,250
we're basically gonna be dual booting so

00:31:47,750 --> 00:31:53,030
if you remember what I was saying before

00:31:49,250 --> 00:31:54,890
we basically got the angularjs

00:31:53,030 --> 00:31:56,330
application angular 1 application all

00:31:54,890 --> 00:31:59,750
we're going to do at this point is just

00:31:56,330 --> 00:32:04,909
add angular for nothing else just get it

00:31:59,750 --> 00:32:08,240
working with angular 4 and just like a

00:32:04,909 --> 00:32:10,520
top tip with this one is with angular 1

00:32:08,240 --> 00:32:13,309
like one of the ways you strap it just

00:32:10,520 --> 00:32:14,659
by adding ng app in our index.html so

00:32:13,309 --> 00:32:16,940
just make sure you remove that from your

00:32:14,659 --> 00:32:17,900
index the HTML just so that you don't

00:32:16,940 --> 00:32:21,980
accidentally start bootstrapping

00:32:17,900 --> 00:32:37,210
application with angular 1 so let me

00:32:21,980 --> 00:32:37,210
show you okay

00:32:41,250 --> 00:32:47,280
so just to show you the bottom here so

00:32:44,190 --> 00:32:50,760
if I go to the package Jason this is

00:32:47,280 --> 00:32:55,560
before adding in angular for all I'm

00:32:50,760 --> 00:32:57,360
going to do step six is if you see here

00:32:55,560 --> 00:33:00,120
I've just added in angular four I was

00:32:57,360 --> 00:33:04,620
literally included in the packages all

00:33:00,120 --> 00:33:10,410
right another thing I've done let's

00:33:04,620 --> 00:33:12,210
forgo source app main is because we're

00:33:10,410 --> 00:33:13,620
using angular for I want to boost up

00:33:12,210 --> 00:33:17,820
with angular four we need to use an app

00:33:13,620 --> 00:33:19,380
module okay an NG module so we create

00:33:17,820 --> 00:33:20,940
one are we just create like a basic one

00:33:19,380 --> 00:33:22,860
a basic app module the important thing

00:33:20,940 --> 00:33:24,870
we need to do here is we to override the

00:33:22,860 --> 00:33:27,090
ng do bootstrap function and just make

00:33:24,870 --> 00:33:28,380
it do nothing we want you don't want to

00:33:27,090 --> 00:33:29,970
accidentally start boo shopping or

00:33:28,380 --> 00:33:32,580
application using some other mechanism

00:33:29,970 --> 00:33:34,170
right and then what we do so you love

00:33:32,580 --> 00:33:35,670
you doing angular to probably recognize

00:33:34,170 --> 00:33:37,080
this code this is how we would would

00:33:35,670 --> 00:33:39,150
normally boost up an angular 2

00:33:37,080 --> 00:33:41,870
application but then we do something a

00:33:39,150 --> 00:33:45,960
little bit different okay we call then

00:33:41,870 --> 00:33:47,670
platform ref we get a reference to this

00:33:45,960 --> 00:33:49,170
upgrade marginal this is the magic

00:33:47,670 --> 00:33:51,240
module that helps us it helps us do this

00:33:49,170 --> 00:33:54,030
upgrading and downgrading and migrating

00:33:51,240 --> 00:33:56,820
to angular 4 and what we do here with

00:33:54,030 --> 00:33:59,190
the upgrade module with bootstrap this

00:33:56,820 --> 00:34:01,080
is basically the angular 1 bootstrapping

00:33:59,190 --> 00:34:03,300
here and this is the angular 2

00:34:01,080 --> 00:34:05,340
bootstrapping here ok so this is the

00:34:03,300 --> 00:34:07,020
dual this is a hat running a hybrid mode

00:34:05,340 --> 00:34:11,790
where with bootstrapping using both

00:34:07,020 --> 00:34:12,840
frameworks that's there's a couple of

00:34:11,790 --> 00:34:14,460
other things a couple of the files

00:34:12,840 --> 00:34:15,899
polyfills as well and you'll see when

00:34:14,460 --> 00:34:17,669
you look at the code online you can just

00:34:15,899 --> 00:34:19,290
find that out and just just copy and

00:34:17,669 --> 00:34:21,300
paste them paste it in and this code

00:34:19,290 --> 00:34:22,950
here this will never change no matter

00:34:21,300 --> 00:34:26,480
what cut project you work on this is

00:34:22,950 --> 00:34:26,480
just copy and paste code yeah

00:34:34,030 --> 00:34:37,330
take it

00:34:45,840 --> 00:34:51,790
so then we do booted so now the next

00:34:49,690 --> 00:34:55,510
step is just to move our services over

00:34:51,790 --> 00:34:57,460
to angular for now in my opinion it's

00:34:55,510 --> 00:34:59,740
much easier to this whole process by

00:34:57,460 --> 00:35:01,120
going bottom up so choose your services

00:34:59,740 --> 00:35:03,490
that your leaves and just start

00:35:01,120 --> 00:35:06,850
converting them to angular for now in

00:35:03,490 --> 00:35:09,280
this example we've got a contact service

00:35:06,850 --> 00:35:10,960
which migrates to angular for but then

00:35:09,280 --> 00:35:13,690
I've had to downgrade it because being

00:35:10,960 --> 00:35:15,340
used in angular one contact resource is

00:35:13,690 --> 00:35:21,790
only being used by angular force you

00:35:15,340 --> 00:35:27,550
don't need to downgrade it so gain some

00:35:21,790 --> 00:35:29,740
top tips and this is kind of the really

00:35:27,550 --> 00:35:33,070
complex part of the whole migrate is how

00:35:29,740 --> 00:35:37,240
do you deal with third-party modules

00:35:33,070 --> 00:35:38,950
that you have no control over yeah this

00:35:37,240 --> 00:35:40,540
is the messy part Ivory's nodding their

00:35:38,950 --> 00:35:43,000
heads right now a breeze this probably

00:35:40,540 --> 00:35:45,220
way all that and guessing so there's no

00:35:43,000 --> 00:35:46,570
magic there's three solutions there's

00:35:45,220 --> 00:35:50,170
only three sisters that I know of anyway

00:35:46,570 --> 00:35:52,180
number one you rewrite it okay you take

00:35:50,170 --> 00:35:55,060
this third Pole and usually write it

00:35:52,180 --> 00:35:58,090
yourself now it's actually not so scary

00:35:55,060 --> 00:35:59,770
it's actually okay with zones doing a

00:35:58,090 --> 00:36:00,940
lot of this stuff in angular angular 2

00:35:59,770 --> 00:36:02,890
is actually really really simple I'm

00:36:00,940 --> 00:36:04,120
going to show you an example of one that

00:36:02,890 --> 00:36:07,420
just rewritten I'll show you how simple

00:36:04,120 --> 00:36:09,190
it is just to rewrite something the

00:36:07,420 --> 00:36:10,450
other one I mean angular 2 and angular 4

00:36:09,190 --> 00:36:11,500
they've been out for a while now so

00:36:10,450 --> 00:36:13,540
there's actually quite a large ecosystem

00:36:11,500 --> 00:36:16,780
out there so have a look maybe

00:36:13,540 --> 00:36:17,980
somebody's already created one right I'm

00:36:16,780 --> 00:36:22,060
going to show an example that as well

00:36:17,980 --> 00:36:25,350
and the third one is just upgrade so you

00:36:22,060 --> 00:36:29,260
can take temporarily take an angular 1

00:36:25,350 --> 00:36:32,800
service upgrade it so it can be used in

00:36:29,260 --> 00:36:35,050
angular for you really want to do the

00:36:32,800 --> 00:36:37,000
first two okay the first two a permanent

00:36:35,050 --> 00:36:38,590
solutions the last one isn't a permanent

00:36:37,000 --> 00:36:40,750
solution because if you ever want to get

00:36:38,590 --> 00:36:42,700
rid of angular one you need to find

00:36:40,750 --> 00:36:45,910
solutions for everything that you

00:36:42,700 --> 00:36:51,770
upgrade it right but it's useful as a

00:36:45,910 --> 00:36:56,270
technique to get you somewhere right so

00:36:51,770 --> 00:37:00,520
code right I'm going to show you the

00:36:56,270 --> 00:37:05,350
contact service and now we downgrade it

00:37:00,520 --> 00:37:05,350
toaster native could I get five hundy

00:37:06,950 --> 00:37:15,530
[Music]

00:37:10,750 --> 00:37:22,360
so let's have a look at this one okay so

00:37:15,530 --> 00:37:25,460
this is still an angular 1 service right

00:37:22,360 --> 00:37:27,920
notice we change it to classes so if I

00:37:25,460 --> 00:37:30,290
now flip this over to the next step I'm

00:37:27,920 --> 00:37:35,410
gonna be changing it to an and a

00:37:30,290 --> 00:37:35,410
downgrade angular 2 angular for service

00:37:36,369 --> 00:37:42,590
did you see that dude wait if we can

00:37:41,300 --> 00:37:44,090
have you can ask me questions at the end

00:37:42,590 --> 00:37:46,910
I think we're out of time to like ask

00:37:44,090 --> 00:37:48,350
questions really but um if you see if

00:37:46,910 --> 00:37:50,570
you saw that change it's actually really

00:37:48,350 --> 00:37:51,560
really quick there's really it's pretty

00:37:50,570 --> 00:37:53,060
much the same as before

00:37:51,560 --> 00:37:55,119
that's why I was really a big advantage

00:37:53,060 --> 00:37:57,710
to convert to classes to begin with

00:37:55,119 --> 00:38:00,170
those of you sharp eyes now have noticed

00:37:57,710 --> 00:38:01,670
that the private properties turned to

00:38:00,170 --> 00:38:03,020
public properties that was mistake I

00:38:01,670 --> 00:38:06,530
made in the code it should actually have

00:38:03,020 --> 00:38:10,850
been public all along but it might

00:38:06,530 --> 00:38:12,320
change the the code but anyway so what

00:38:10,850 --> 00:38:14,900
we do is we just decorate it with the

00:38:12,320 --> 00:38:17,840
injectable decorator annotation story

00:38:14,900 --> 00:38:19,970
and that's pretty much all all we've

00:38:17,840 --> 00:38:22,730
done so to now use this contact service

00:38:19,970 --> 00:38:28,850
in an angular for application you

00:38:22,730 --> 00:38:30,710
basically need to provide it in our app

00:38:28,850 --> 00:38:33,859
module to go into our app module and I

00:38:30,710 --> 00:38:36,290
provide that in our app module this

00:38:33,859 --> 00:38:39,740
makes this service available and usable

00:38:36,290 --> 00:38:41,810
from within angular 4 but not with an

00:38:39,740 --> 00:38:44,030
angular 1 to make this angular for

00:38:41,810 --> 00:38:50,510
service usable in angular 1 we need to

00:38:44,030 --> 00:38:52,160
downgrade it so to do that we just go to

00:38:50,510 --> 00:38:55,460
the code and I'll scroll in to the

00:38:52,160 --> 00:38:57,650
bottom and there's the magic code right

00:38:55,460 --> 00:38:59,690
there so it's the same as before

00:38:57,650 --> 00:39:01,910
angular dot module code cross dot

00:38:59,690 --> 00:39:04,550
factory and let me do something that's

00:39:01,910 --> 00:39:05,390
factory this time not service and we do

00:39:04,550 --> 00:39:08,630
something called down

00:39:05,390 --> 00:39:11,090
great injectable contact service this is

00:39:08,630 --> 00:39:12,740
downgrade injectable is another function

00:39:11,090 --> 00:39:15,460
that comes from the upgrade package and

00:39:12,740 --> 00:39:18,650
this basically takes an angular for

00:39:15,460 --> 00:39:23,120
service and makes it mashes it together

00:39:18,650 --> 00:39:25,280
so it can be used in an angular one as

00:39:23,120 --> 00:39:27,320
an angular 1 service or in an angular 1

00:39:25,280 --> 00:39:31,730
entity right that's it those three lines

00:39:27,320 --> 00:39:35,540
of code is all you need but one thing I

00:39:31,730 --> 00:39:40,420
want to show you here so we've got this

00:39:35,540 --> 00:39:42,590
toaster so if I slip back to step 6

00:39:40,420 --> 00:39:45,110
remember here I'm using this thing this

00:39:42,590 --> 00:39:47,030
third-party toaster module yeah this is

00:39:45,110 --> 00:39:50,180
the issue right it's a third party

00:39:47,030 --> 00:39:53,660
toaster what do i do how do I get this

00:39:50,180 --> 00:39:56,810
toaster that's angular one how do I get

00:39:53,660 --> 00:39:57,800
it so it can be used in angular for the

00:39:56,810 --> 00:39:59,210
way I'm going to show you in this

00:39:57,800 --> 00:40:00,650
example there's other examples through

00:39:59,210 --> 00:40:02,480
this code the way I'm going show you in

00:40:00,650 --> 00:40:06,800
this example is by using the upgrade

00:40:02,480 --> 00:40:11,390
approach right so what we do you flip

00:40:06,800 --> 00:40:14,950
the step step seven again and I'm going

00:40:11,390 --> 00:40:14,950
to go and I'm going to find a file

00:40:19,160 --> 00:40:27,920
I wish my calorie goal for today so so

00:40:25,359 --> 00:40:30,829
this is basically the codon plan zoom in

00:40:27,920 --> 00:40:33,739
a little bit okay so this is basically

00:40:30,829 --> 00:40:35,210
the code it's a bit of a problem a peg

00:40:33,739 --> 00:40:38,059
token is getting deprecated but you

00:40:35,210 --> 00:40:39,470
still use it right now and what this

00:40:38,059 --> 00:40:41,239
code is basically doing is this don't

00:40:39,470 --> 00:40:42,559
have to worry about it just it's just

00:40:41,239 --> 00:40:44,710
copy and paste code but what it

00:40:42,559 --> 00:40:47,839
basically does it takes an angular 1

00:40:44,710 --> 00:40:51,650
service and makes available or

00:40:47,839 --> 00:40:53,809
injectable as an angular 2 angular for

00:40:51,650 --> 00:40:55,700
service so how we do that so we see

00:40:53,809 --> 00:40:58,430
those functional toaster service

00:40:55,700 --> 00:41:00,799
provider here it's all we're doing is

00:40:58,430 --> 00:41:04,359
for go back to here is I'm providing it

00:41:00,799 --> 00:41:08,180
ok so I've now taken an angular 1

00:41:04,359 --> 00:41:12,289
service and I've upgraded it and

00:41:08,180 --> 00:41:13,640
provided it into the angular for intent

00:41:12,289 --> 00:41:17,660
injection framework so it can now be

00:41:13,640 --> 00:41:20,799
used in both angular 1 and angular for

00:41:17,660 --> 00:41:23,960
write that code might look a bit scary

00:41:20,799 --> 00:41:25,309
right it's just copy and paste all you

00:41:23,960 --> 00:41:27,559
pretty much good enough to do to do this

00:41:25,309 --> 00:41:28,910
with any other angular on services just

00:41:27,559 --> 00:41:30,769
find the name of the service that that's

00:41:28,910 --> 00:41:34,880
the the normal string that used in

00:41:30,769 --> 00:41:39,229
angular 1 for create a token to identify

00:41:34,880 --> 00:41:40,609
it in angular 4 and just do that sumi

00:41:39,229 --> 00:41:43,609
copy and paste or pretty much every

00:41:40,609 --> 00:41:49,729
other angular on service you can upgrade

00:41:43,609 --> 00:41:52,400
and then to use that we just dollar

00:41:49,729 --> 00:41:55,069
inject the name of the token the token

00:41:52,400 --> 00:41:57,950
we use to identify that service and then

00:41:55,069 --> 00:41:59,930
we decorate our tastes are now in our

00:41:57,950 --> 00:42:04,400
angular for service

00:41:59,930 --> 00:42:08,089
I have injected an angular 1 service

00:42:04,400 --> 00:42:10,779
right so that's one that's one way we

00:42:08,089 --> 00:42:14,119
can do that's one way to solve the the

00:42:10,779 --> 00:42:16,519
angular the third-party module issue

00:42:14,119 --> 00:42:17,779
right but not permanent we'd have to

00:42:16,519 --> 00:42:20,380
find a solution for this when we get rid

00:42:17,779 --> 00:42:20,380
of angular 1

00:42:22,290 --> 00:42:27,410
[Music]

00:42:32,430 --> 00:42:41,440
okay we're getting pretty close now the

00:42:40,180 --> 00:42:44,740
next step is just to convert our

00:42:41,440 --> 00:42:47,260
component to angular 4 so our angular 1

00:42:44,740 --> 00:42:51,610
components we now need to convert to

00:42:47,260 --> 00:42:56,050
angular 4 components right and again we

00:42:51,610 --> 00:42:59,170
start the leaves okay so very similar to

00:42:56,050 --> 00:43:00,610
the services we basically just convert

00:42:59,170 --> 00:43:01,330
them to angular 4 then downgrade them

00:43:00,610 --> 00:43:05,110
because they're going to be using

00:43:01,330 --> 00:43:07,420
angular 1 and I just call this basically

00:43:05,110 --> 00:43:10,840
the ground right you just kind of got a

00:43:07,420 --> 00:43:13,210
go through step by step and just do one

00:43:10,840 --> 00:43:14,680
or one component one service at a time

00:43:13,210 --> 00:43:17,050
but the good thing about this approach

00:43:14,680 --> 00:43:18,370
is that you can actually have to do all

00:43:17,050 --> 00:43:20,140
your components and then have a

00:43:18,370 --> 00:43:22,750
releasable application you can do one

00:43:20,140 --> 00:43:24,490
component release one component release

00:43:22,750 --> 00:43:29,080
one component release so it's always a

00:43:24,490 --> 00:43:31,690
nice iterative process okay time for a

00:43:29,080 --> 00:43:34,930
bit more code it's going to show you the

00:43:31,690 --> 00:43:42,300
person this component I don't want to

00:43:34,930 --> 00:43:42,300
show you the spinner as well yep

00:43:51,260 --> 00:43:59,720
so let's go here person list component

00:43:56,859 --> 00:44:02,630
so again this is still an angular 1

00:43:59,720 --> 00:44:04,430
component if you remember we've got the

00:44:02,630 --> 00:44:05,540
object at the top which defines a

00:44:04,430 --> 00:44:09,050
component and then we've got the code

00:44:05,540 --> 00:44:15,109
here which makes available to angular 1

00:44:09,050 --> 00:44:17,390
and now let's just flip to step eight so

00:44:15,109 --> 00:44:20,600
I've just created an angular four

00:44:17,390 --> 00:44:22,580
component okay it's just a class this is

00:44:20,600 --> 00:44:27,830
actually the same class that we had in

00:44:22,580 --> 00:44:32,359
our controller property on our component

00:44:27,830 --> 00:44:34,369
object in the previous the angular 1

00:44:32,359 --> 00:44:38,000
component just kind of copy and paste it

00:44:34,369 --> 00:44:39,890
there and kind of the important thing is

00:44:38,000 --> 00:44:42,470
now that it's saying you're the for you

00:44:39,890 --> 00:44:48,380
start having to use angular 4 syntax in

00:44:42,470 --> 00:44:50,000
your HTML ya one thing I've done here is

00:44:48,380 --> 00:44:52,609
I was using infinite scroll so this is

00:44:50,000 --> 00:44:55,700
just an example I just found an infinite

00:44:52,609 --> 00:45:00,710
scroll angular for angular 2 actually

00:44:55,700 --> 00:45:04,640
this one version of the module under

00:45:00,710 --> 00:45:05,930
started using that instead right and at

00:45:04,640 --> 00:45:08,090
the bottom you got the magic code again

00:45:05,930 --> 00:45:11,720
got a downgrade code so we've got

00:45:08,090 --> 00:45:14,180
angular module dot directive let me call

00:45:11,720 --> 00:45:17,060
downgrade component you're passing in a

00:45:14,180 --> 00:45:21,260
component object and then that's that

00:45:17,060 --> 00:45:23,090
this now makes our angular 4 component

00:45:21,260 --> 00:45:27,800
usable from within an angular 1

00:45:23,090 --> 00:45:35,780
component and another important thing to

00:45:27,800 --> 00:45:38,850
note is that if you look at the

00:45:35,780 --> 00:45:41,260
[Music]

00:45:38,850 --> 00:45:46,390
so we also have to use that at that

00:45:41,260 --> 00:45:48,490
component in our angular 4 code we have

00:45:46,390 --> 00:45:52,000
to add it to our declarations okay so it

00:45:48,490 --> 00:45:54,270
was this one but also to every just

00:45:52,000 --> 00:45:56,830
remember this one every downgraded

00:45:54,270 --> 00:46:00,640
angular four component also needs to be

00:45:56,830 --> 00:46:05,230
an entry component okay just remember

00:46:00,640 --> 00:46:08,470
that so the thing I want to show you was

00:46:05,230 --> 00:46:12,810
a spinner I want to show you that just

00:46:08,470 --> 00:46:12,810
so you'd see how easy it is just to

00:46:13,020 --> 00:46:19,450
convert that just to rewrite that one so

00:46:16,810 --> 00:46:21,070
I'll show you the original one so this

00:46:19,450 --> 00:46:23,800
is the original spinner angular 1

00:46:21,070 --> 00:46:27,940
component now I'm using the third party

00:46:23,800 --> 00:46:29,290
spinner a third party module so in this

00:46:27,940 --> 00:46:30,520
example I just want to figure out how to

00:46:29,290 --> 00:46:34,710
rewrite the whole thing from scratch

00:46:30,520 --> 00:46:34,710
right so it's actually pretty simple

00:46:35,220 --> 00:46:43,000
okay I just use a spinner library the

00:46:41,590 --> 00:46:44,770
underlying spinner lie be this was this

00:46:43,000 --> 00:46:46,660
simple right it's not that big of an

00:46:44,770 --> 00:46:51,100
issue a large part of the problems that

00:46:46,660 --> 00:46:52,690
we had in angular 1 when working with

00:46:51,100 --> 00:46:54,250
things that weren't angular was we

00:46:52,690 --> 00:46:55,870
needed to be we needed to know when

00:46:54,250 --> 00:46:58,660
things change so angular could do

00:46:55,870 --> 00:47:00,220
binding now with zones we don't need

00:46:58,660 --> 00:47:02,260
that so actually you can just pretty

00:47:00,220 --> 00:47:04,810
much use whatever library there's out

00:47:02,260 --> 00:47:07,030
there in your anger for application and

00:47:04,810 --> 00:47:18,370
it will just work right so rewriting

00:47:07,030 --> 00:47:21,580
things it's fairly simple yeah and okay

00:47:18,370 --> 00:47:25,320
and the other thing I want to show you

00:47:21,580 --> 00:47:29,290
is we're dealing with UI router okay so

00:47:25,320 --> 00:47:33,070
that's another service that is an

00:47:29,290 --> 00:47:36,310
angular 1 service an angular 1 module

00:47:33,070 --> 00:47:40,750
how do we deal with that in our now kind

00:47:36,310 --> 00:47:42,990
of sorry I'm looking to run code on

00:47:40,750 --> 00:47:42,990
second

00:47:52,470 --> 00:48:00,250
oh sorry

00:47:54,740 --> 00:48:02,780
so we use different use dollar state and

00:48:00,250 --> 00:48:05,000
dollar state params so if we want to use

00:48:02,780 --> 00:48:06,170
these in our angular 4 components we

00:48:05,000 --> 00:48:07,820
just need to do the same thing we need

00:48:06,170 --> 00:48:10,339
to upgrade them I mean to make them

00:48:07,820 --> 00:48:11,510
available to our angular 4 component and

00:48:10,339 --> 00:48:13,160
just the same as before we're just

00:48:11,510 --> 00:48:15,830
basically copying and pasting code and

00:48:13,160 --> 00:48:17,359
just doing use state params and dollar

00:48:15,830 --> 00:48:20,119
State I need to provide them in our app

00:48:17,359 --> 00:48:22,369
module so this is how we really doing

00:48:20,119 --> 00:48:23,480
that we're upgrading ui-router services

00:48:22,369 --> 00:48:25,640
because you're going to get rid of UI

00:48:23,480 --> 00:48:27,890
routes it anyway at the end so we just

00:48:25,640 --> 00:48:31,880
upgrade them temporarily then we use

00:48:27,890 --> 00:48:42,980
them in our application I just could not

00:48:31,880 --> 00:48:46,010
remember where I used it sorry here here

00:48:42,980 --> 00:48:48,470
we go so because we needed to use state

00:48:46,010 --> 00:48:51,020
params we basically have to upgrade our

00:48:48,470 --> 00:48:52,820
UI route to state params service angular

00:48:51,020 --> 00:48:57,099
1 and you are we to state just so we can

00:48:52,820 --> 00:48:57,099
use it inside angular 4 right

00:49:10,940 --> 00:49:16,620
and then we pretty much there now pretty

00:49:15,030 --> 00:49:18,630
much everything in our application we've

00:49:16,620 --> 00:49:20,550
either converted the components over to

00:49:18,630 --> 00:49:22,710
angular 4 we've moved that all the

00:49:20,550 --> 00:49:25,530
services over to angular for all that's

00:49:22,710 --> 00:49:28,020
really left is the routing and now some

00:49:25,530 --> 00:49:29,670
people will talk about this

00:49:28,020 --> 00:49:31,950
theoretically a way in which you can do

00:49:29,670 --> 00:49:35,510
kind of one route a time like one move

00:49:31,950 --> 00:49:38,190
one route to angular for at the time I

00:49:35,510 --> 00:49:39,420
don't support that method I just think

00:49:38,190 --> 00:49:41,370
it's just at this point it should be

00:49:39,420 --> 00:49:43,140
fairly simple just to move everything

00:49:41,370 --> 00:49:44,520
over to angular force I call it a tiny

00:49:43,140 --> 00:49:47,280
pop right it's not a big bang it's a

00:49:44,520 --> 00:49:48,300
tiny pop right so what are you doing

00:49:47,280 --> 00:49:49,440
you're basically at this point you're

00:49:48,300 --> 00:49:49,920
basically just going to boost up with

00:49:49,440 --> 00:49:53,130
angular

00:49:49,920 --> 00:49:56,580
so you dropping the hybrid mode right

00:49:53,130 --> 00:50:01,380
and you're also using the angular router

00:49:56,580 --> 00:50:04,500
instead of the UI router so just to show

00:50:01,380 --> 00:50:06,720
you what this looks like we're pretty

00:50:04,500 --> 00:50:07,230
good yeah I'll show you what it looks

00:50:06,720 --> 00:50:18,510
like

00:50:07,230 --> 00:50:22,080
I'll just hide this so if I go to the

00:50:18,510 --> 00:50:28,260
main file yeah you can see if I move the

00:50:22,080 --> 00:50:31,290
next step what have I done

00:50:28,260 --> 00:50:32,760
I basically removed all that hybrid code

00:50:31,290 --> 00:50:35,510
blue strapping at the bottom now it's

00:50:32,760 --> 00:50:37,680
just bootstrapping with angular 4

00:50:35,510 --> 00:50:39,330
because we're bootstrapping with angular

00:50:37,680 --> 00:50:41,370
4 we need a root component either read a

00:50:39,330 --> 00:50:46,230
boost up component so I create a very

00:50:41,370 --> 00:50:48,180
very simple app root component and then

00:50:46,230 --> 00:50:50,370
also at this point me after them how

00:50:48,180 --> 00:50:52,950
also find solutions for all those things

00:50:50,370 --> 00:50:54,630
that we previously upgraded and up all

00:50:52,950 --> 00:50:56,130
the UI routes of things they upgraded we

00:50:54,630 --> 00:50:58,010
don't care we're using angular routes

00:50:56,130 --> 00:51:00,240
now anyways we can just drop those and

00:50:58,010 --> 00:51:02,630
for the toast the one that I upgraded

00:51:00,240 --> 00:51:04,830
actually just found a third-party

00:51:02,630 --> 00:51:06,750
angular 4 toaster so just use that

00:51:04,830 --> 00:51:08,790
instead right but at this point is the

00:51:06,750 --> 00:51:11,610
point we have to start dealing with all

00:51:08,790 --> 00:51:12,810
those things you upgraded because you

00:51:11,610 --> 00:51:15,110
need to find solutions for them because

00:51:12,810 --> 00:51:18,110
you're going to lose angular 1 now right

00:51:15,110 --> 00:51:18,110
and

00:51:18,360 --> 00:51:23,260
[Music]

00:51:19,440 --> 00:51:26,350
that's good routing and are ok and the

00:51:23,260 --> 00:51:33,570
other thing is the routing so now for go

00:51:26,350 --> 00:51:36,670
into map routes put back a step

00:51:33,570 --> 00:51:38,020
this was the UI routing configuration so

00:51:36,670 --> 00:51:39,760
this point we're also just moving

00:51:38,020 --> 00:51:42,190
forward to the angular 4 root 2 so we

00:51:39,760 --> 00:51:43,960
just basically just now everything's all

00:51:42,190 --> 00:51:46,240
set up it's all components that's all

00:51:43,960 --> 00:51:48,670
pretty simple hopefully pretty simple at

00:51:46,240 --> 00:51:52,030
this moment just flip over and just

00:51:48,670 --> 00:51:55,680
configure it as an angular for ruta

00:51:52,030 --> 00:51:55,680
configuration alright

00:52:13,320 --> 00:52:16,320
okay

00:52:18,000 --> 00:52:24,520
and that's basically it to be honest

00:52:22,690 --> 00:52:28,660
with you and the final thing to do is I

00:52:24,520 --> 00:52:30,070
just recommend you really take a good

00:52:28,660 --> 00:52:31,960
look at your code at this point and make

00:52:30,070 --> 00:52:34,839
sure you remove every single reference

00:52:31,960 --> 00:52:36,160
to angularjs we're using webpack in this

00:52:34,839 --> 00:52:38,950
project so even if you have like an

00:52:36,160 --> 00:52:40,930
accidental import of angular web packs

00:52:38,950 --> 00:52:42,250
is going to pull all that in and bundle

00:52:40,930 --> 00:52:43,630
it in with your code so just make sure

00:52:42,250 --> 00:52:46,630
you go through and remove every single

00:52:43,630 --> 00:52:50,770
reference to angular one angularjs that

00:52:46,630 --> 00:52:53,440
you have and that's basically it now you

00:52:50,770 --> 00:52:55,480
basically have an angular 4 application

00:52:53,440 --> 00:52:58,750
you dropped angular 1 and you've

00:52:55,480 --> 00:53:03,310
migrated and maybe you feel something

00:52:58,750 --> 00:53:06,000
like this all right what feels something

00:53:03,310 --> 00:53:12,040
like this when you finally get it done

00:53:06,000 --> 00:53:16,480
you nailed it yeah so that's basically

00:53:12,040 --> 00:53:17,740
it so if you've got any questions is

00:53:16,480 --> 00:53:19,210
there's no time for questions at the end

00:53:17,740 --> 00:53:20,950
of the session if you want to find me or

00:53:19,210 --> 00:53:23,470
you want you can email me you can tweet

00:53:20,950 --> 00:53:26,160
me at joy I have an AMA I think I got

00:53:23,470 --> 00:53:28,780
one question maybe you can make it to or

00:53:26,160 --> 00:53:30,730
if you just see me around just grab me

00:53:28,780 --> 00:53:32,080
and and and I'll try and answer any

00:53:30,730 --> 00:53:33,370
questions that you've got all right

00:53:32,080 --> 00:53:39,219
thank you so much

00:53:33,370 --> 00:53:39,219

YouTube URL: https://www.youtube.com/watch?v=4p1jG2QNc4U


