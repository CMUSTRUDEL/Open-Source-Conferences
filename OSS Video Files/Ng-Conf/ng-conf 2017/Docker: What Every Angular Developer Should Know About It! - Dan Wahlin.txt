Title: Docker: What Every Angular Developer Should Know About It! - Dan Wahlin
Publication date: 2017-04-07
Playlist: ng-conf 2017
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,500 --> 00:00:04,700
so I'm not even positive I'll be able to

00:00:03,080 --> 00:00:07,129
do this I think every talk I've given

00:00:04,700 --> 00:00:09,080
over the last like three months John has

00:00:07,129 --> 00:00:12,590
been with me so I might not even be

00:00:09,080 --> 00:00:15,650
capable on my own we'll see but we're

00:00:12,590 --> 00:00:17,539
going to talk about what's me is one of

00:00:15,650 --> 00:00:19,130
the most exciting technologies to come

00:00:17,539 --> 00:00:21,320
out and probably the last five years now

00:00:19,130 --> 00:00:25,099
I still would say angular is one of my

00:00:21,320 --> 00:00:27,650
most exciting of all but how many happen

00:00:25,099 --> 00:00:30,529
to have an issue where you maybe have a

00:00:27,650 --> 00:00:33,740
team that works on Windows or Linux or

00:00:30,529 --> 00:00:36,320
Mac and some of your services or on this

00:00:33,740 --> 00:00:38,690
server and some over here but sometimes

00:00:36,320 --> 00:00:40,820
your VPN and in it's really hard to get

00:00:38,690 --> 00:00:43,250
the entire environment set up on your

00:00:40,820 --> 00:00:45,380
machine exactly like production or

00:00:43,250 --> 00:00:48,170
staging for that matter I'm sure nobody

00:00:45,380 --> 00:00:50,750
has this problem right how many have

00:00:48,170 --> 00:00:54,770
ever had the problem called it works on

00:00:50,750 --> 00:00:59,060
my machine yes I'm pretty good at that

00:00:54,770 --> 00:01:01,070
one and I'd love to say that so to jump

00:00:59,060 --> 00:01:04,280
on in here we're going to talk about the

00:01:01,070 --> 00:01:06,140
role that docker can play and I'm not

00:01:04,280 --> 00:01:07,730
going to go you know super deep dive

00:01:06,140 --> 00:01:09,800
into Dockers there's a lot we could

00:01:07,730 --> 00:01:11,330
cover here but I do want to kind of make

00:01:09,800 --> 00:01:13,190
it dangerous so that you can like you

00:01:11,330 --> 00:01:15,230
know cause smoke and fire back at work

00:01:13,190 --> 00:01:17,000
and you know be dangerous that way but

00:01:15,230 --> 00:01:19,280
I'll teach enough to be dangerous here

00:01:17,000 --> 00:01:22,159
and show you why even as a front-end

00:01:19,280 --> 00:01:25,640
developer it's very possible you might

00:01:22,159 --> 00:01:26,990
find docker useful now if you came to me

00:01:25,640 --> 00:01:29,780
and said you know Dan I'm only doing

00:01:26,990 --> 00:01:33,170
like node or asp net core or something

00:01:29,780 --> 00:01:34,549
like that or maybe Java locally I don't

00:01:33,170 --> 00:01:36,140
even have to hit a database we're faking

00:01:34,549 --> 00:01:37,430
the data maybe and I just have angular

00:01:36,140 --> 00:01:39,350
then in that case I'd be like you know

00:01:37,430 --> 00:01:42,409
doctor might be overkill for that but

00:01:39,350 --> 00:01:45,110
here's where it gets really cool so if

00:01:42,409 --> 00:01:47,659
you hit my company side is code with Dan

00:01:45,110 --> 00:01:49,250
com nobody can spell my name right so my

00:01:47,659 --> 00:01:51,700
wife said once you go simple because

00:01:49,250 --> 00:01:55,340
everyone know how to pronounce my name

00:01:51,700 --> 00:01:58,130
yeah I heard Whelan no Wallen no

00:01:55,340 --> 00:01:59,630
swallowing swallowing like a wall lean

00:01:58,130 --> 00:02:01,250
that's the first time I've done that I

00:01:59,630 --> 00:02:05,150
hope everybody on YouTube will remember

00:02:01,250 --> 00:02:06,680
this please but anyway I gave up only

00:02:05,150 --> 00:02:08,630
place that says the right is Sweden in

00:02:06,680 --> 00:02:10,759
Norway they say it right but it's valine

00:02:08,630 --> 00:02:13,020
so we have any normal Norwegians are

00:02:10,759 --> 00:02:14,040
sweet Swedes in here oh yeah all right

00:02:13,020 --> 00:02:16,620
you guys know how to pronounce but

00:02:14,040 --> 00:02:19,530
anyway let's jump on in here so this is

00:02:16,620 --> 00:02:21,300
something that about two years ago I had

00:02:19,530 --> 00:02:25,560
this problem where I wanted to get a

00:02:21,300 --> 00:02:26,970
wordpress blog going locally with engine

00:02:25,560 --> 00:02:28,350
X as the front end that's a reverse

00:02:26,970 --> 00:02:30,960
proxy if you haven't heard of it

00:02:28,350 --> 00:02:32,430
very fast for especially static content

00:02:30,960 --> 00:02:35,330
things like that and it can do some of

00:02:32,430 --> 00:02:38,970
your routing to your back-end node Java

00:02:35,330 --> 00:02:41,820
asp.net core stuff like that and I had

00:02:38,970 --> 00:02:45,090
Maria DB which is basically the the my

00:02:41,820 --> 00:02:48,780
sequel variant and getting that going

00:02:45,090 --> 00:02:51,750
was just hard locally to make it exactly

00:02:48,780 --> 00:02:52,950
like my production version and it got to

00:02:51,750 --> 00:02:54,540
the point where I would try something

00:02:52,950 --> 00:02:56,070
locally you know I'd do a WordPress

00:02:54,540 --> 00:02:58,910
update or whatever and then I try it

00:02:56,070 --> 00:03:00,810
remotely using the built in features and

00:02:58,910 --> 00:03:02,820
something would break and I'm like what

00:03:00,810 --> 00:03:03,240
the heck it worked here like what is the

00:03:02,820 --> 00:03:05,550
problem

00:03:03,240 --> 00:03:07,230
so I had heard about this thing called

00:03:05,550 --> 00:03:10,830
docker which is now about four years old

00:03:07,230 --> 00:03:13,290
and said this looks interesting but I'm

00:03:10,830 --> 00:03:14,910
not a DevOps guy and if you are a DevOps

00:03:13,290 --> 00:03:16,860
guy no offense but I've always viewed

00:03:14,910 --> 00:03:19,560
that as like the either a the

00:03:16,860 --> 00:03:21,209
clickety-click people or the command

00:03:19,560 --> 00:03:24,140
line you know and you're awesome at that

00:03:21,209 --> 00:03:27,180
right and I was really neither of those

00:03:24,140 --> 00:03:30,240
but let's suffice to say I've kind of

00:03:27,180 --> 00:03:32,250
got a lot better at that so I dove in

00:03:30,240 --> 00:03:34,050
and at first glance I'm like nah this is

00:03:32,250 --> 00:03:35,880
for my DevOps folks because I have some

00:03:34,050 --> 00:03:37,800
really close friends that they are in

00:03:35,880 --> 00:03:40,410
the DevOps world or you know the IT

00:03:37,800 --> 00:03:44,130
admin whatever you want to call it so as

00:03:40,410 --> 00:03:46,260
I dove in I quickly said this is pretty

00:03:44,130 --> 00:03:47,610
cool this is really neat now as we go

00:03:46,260 --> 00:03:50,070
through it I have a bunch of slides for

00:03:47,610 --> 00:03:51,510
you this link right here I'm not going

00:03:50,070 --> 00:03:52,620
to be I'm not going to have time to go

00:03:51,510 --> 00:03:53,700
through all the slides in fact we're

00:03:52,620 --> 00:03:55,620
going to do a real quick run-through of

00:03:53,700 --> 00:03:56,880
what docker is the start now that we've

00:03:55,620 --> 00:03:58,290
kind of addressed some of the problems

00:03:56,880 --> 00:04:00,060
but here's the link you can get to for

00:03:58,290 --> 00:04:02,610
the slides so I'll leave that up for

00:04:00,060 --> 00:04:04,830
just a moment so a little more history

00:04:02,610 --> 00:04:06,480
on this story then so I started playing

00:04:04,830 --> 00:04:08,430
with docker and I'm trying to get

00:04:06,480 --> 00:04:11,850
WordPress and ninja necks and I had

00:04:08,430 --> 00:04:14,340
Redis after another project and MongoDB

00:04:11,850 --> 00:04:15,750
and Postgres sequel and you get the idea

00:04:14,340 --> 00:04:17,459
you start working with more and more

00:04:15,750 --> 00:04:19,290
tech to paint on the customer we were

00:04:17,459 --> 00:04:21,840
working with and what ended up happening

00:04:19,290 --> 00:04:23,520
was once I got the hang of these docker

00:04:21,840 --> 00:04:25,050
images and containers which we're going

00:04:23,520 --> 00:04:28,020
to talk about today

00:04:25,050 --> 00:04:30,270
oh my gosh this is amazing like you said

00:04:28,020 --> 00:04:32,520
if you hit with Dan calm or blog go it

00:04:30,270 --> 00:04:34,949
then there's probably about eight docker

00:04:32,520 --> 00:04:37,620
containers running it's up in Azure up

00:04:34,949 --> 00:04:39,270
in the cloud and that's actually how

00:04:37,620 --> 00:04:40,770
those sites are actually running it's

00:04:39,270 --> 00:04:42,240
all docker behind the scenes and it's

00:04:40,770 --> 00:04:44,520
awesome because right here on this

00:04:42,240 --> 00:04:47,009
laptop I'm not going to run the blog one

00:04:44,520 --> 00:04:49,680
but I could get my entire production

00:04:47,009 --> 00:04:51,750
version of my blog with there's three

00:04:49,680 --> 00:04:53,759
containers for that one going exactly

00:04:51,750 --> 00:04:55,949
like it will be on my Linux servers

00:04:53,759 --> 00:04:56,699
right here on my laptop and it'll be

00:04:55,949 --> 00:04:58,650
exact

00:04:56,699 --> 00:05:00,509
so that when I make a change I have the

00:04:58,650 --> 00:05:02,030
confidence that when I deploy it it's

00:05:00,509 --> 00:05:04,259
just going to work just like I thought

00:05:02,030 --> 00:05:06,659
all right so let's talk about the

00:05:04,259 --> 00:05:08,159
challenge then of this so the challenge

00:05:06,659 --> 00:05:09,509
is you know maybe you're working on a

00:05:08,159 --> 00:05:12,120
project that does use these different

00:05:09,509 --> 00:05:15,960
texts we have nginx as a front end

00:05:12,120 --> 00:05:17,969
reverse proxy we have multiple maybe

00:05:15,960 --> 00:05:19,530
micro services given that were angular

00:05:17,969 --> 00:05:23,849
developers you might be calling a Java

00:05:19,530 --> 00:05:24,349
or.net or a node or PHP or something

00:05:23,849 --> 00:05:26,280
like that

00:05:24,349 --> 00:05:29,009
and then they might call different

00:05:26,280 --> 00:05:32,430
databases it could be Postgres

00:05:29,009 --> 00:05:34,919
sequel server oracle whatever then you

00:05:32,430 --> 00:05:37,169
might also have some caching all right

00:05:34,919 --> 00:05:38,880
and you know if you just got hired at

00:05:37,169 --> 00:05:40,770
the company you might as well plan on

00:05:38,880 --> 00:05:42,750
like two days of downtime just to get

00:05:40,770 --> 00:05:43,949
everything configured right right and

00:05:42,750 --> 00:05:45,690
some of you have done this before it's

00:05:43,949 --> 00:05:48,029
pretty easy to install things but it's

00:05:45,690 --> 00:05:49,500
hard to get the security right exactly

00:05:48,029 --> 00:05:52,050
like your staging or your production

00:05:49,500 --> 00:05:54,930
environment so you're going to see that

00:05:52,050 --> 00:05:57,360
with docker it's going to make it much

00:05:54,930 --> 00:05:58,919
easier I have a micro kind of a mini

00:05:57,360 --> 00:06:01,259
micro service demo I'm going to run for

00:05:58,919 --> 00:06:03,960
you at the end here where I do have

00:06:01,259 --> 00:06:05,250
these things I have nginx that's our

00:06:03,960 --> 00:06:07,229
front end that's where angular is going

00:06:05,250 --> 00:06:08,789
to be hosted one of the things we see in

00:06:07,229 --> 00:06:11,069
a lot of the demos here this week is you

00:06:08,789 --> 00:06:12,810
know ng serve and that's great for

00:06:11,069 --> 00:06:15,690
development but you know you're not

00:06:12,810 --> 00:06:16,949
going to ng serve in production so where

00:06:15,690 --> 00:06:21,539
do you put your code well you could

00:06:16,949 --> 00:06:23,159
throw it on apache iis engine x-h a

00:06:21,539 --> 00:06:24,210
proxy there's all these different

00:06:23,159 --> 00:06:25,979
options but we're actually going to do

00:06:24,210 --> 00:06:29,039
that for real here in just a minute and

00:06:25,979 --> 00:06:32,400
then angular then if it was in the nginx

00:06:29,039 --> 00:06:34,680
host container might call into Java

00:06:32,400 --> 00:06:35,729
or.net or node or PHP or whatever now I

00:06:34,680 --> 00:06:38,180
have it where it's going to call into

00:06:35,729 --> 00:06:40,220
nodejs which uses

00:06:38,180 --> 00:06:42,430
and I have another little micro-service

00:06:40,220 --> 00:06:46,610
we'll call it which is asp.net core

00:06:42,430 --> 00:06:48,080
Coleen Postgres sequel so much more of

00:06:46,610 --> 00:06:50,000
what I would call a real-world scenario

00:06:48,080 --> 00:06:52,730
for large companies where different

00:06:50,000 --> 00:06:55,760
teams are responsible for setting up

00:06:52,730 --> 00:06:57,350
these micro services all right so let's

00:06:55,760 --> 00:06:58,910
talk about how doctor can help with this

00:06:57,350 --> 00:07:02,540
so first off you know kind of what is

00:06:58,910 --> 00:07:05,210
docker well it is all about simplifying

00:07:02,540 --> 00:07:07,280
number one getting an environment going

00:07:05,210 --> 00:07:09,140
on your box first off and that's

00:07:07,280 --> 00:07:12,140
probably why most of you would be

00:07:09,140 --> 00:07:14,690
interested but if you are also in charge

00:07:12,140 --> 00:07:16,550
of some of your back-end and how many do

00:07:14,690 --> 00:07:20,300
server-side code as well as angular in

00:07:16,550 --> 00:07:22,670
here almost everybody well you know the

00:07:20,300 --> 00:07:25,430
challenge is there to get that server

00:07:22,670 --> 00:07:26,900
configured exactly the same between your

00:07:25,430 --> 00:07:29,000
you know your dev box or your dev

00:07:26,900 --> 00:07:31,670
servers or whatever and staging and

00:07:29,000 --> 00:07:33,140
production so it'll help with this we're

00:07:31,670 --> 00:07:35,630
gonna be talking about containers and

00:07:33,140 --> 00:07:38,330
containers if you look at the doctor

00:07:35,630 --> 00:07:38,810
wail image there you can think of it

00:07:38,330 --> 00:07:40,820
just like that

00:07:38,810 --> 00:07:42,500
it literally back in the old days you

00:07:40,820 --> 00:07:44,690
know go back to like 1600 s when they

00:07:42,500 --> 00:07:47,360
used to ship stuff across the ocean

00:07:44,690 --> 00:07:49,610
there was no standardization so from

00:07:47,360 --> 00:07:51,230
what I've read didn't get to see it but

00:07:49,610 --> 00:07:53,240
for when I read it was very time

00:07:51,230 --> 00:07:55,580
consuming to get stuff on and off a ship

00:07:53,240 --> 00:07:57,380
because you had different sizes and it

00:07:55,580 --> 00:07:59,000
was just hard well then they

00:07:57,380 --> 00:08:00,470
standardized you know on these shipping

00:07:59,000 --> 00:08:02,240
containers which everybody's seen at the

00:08:00,470 --> 00:08:04,640
docs and things that's kind of how

00:08:02,240 --> 00:08:06,890
docker is they provide a very consistent

00:08:04,640 --> 00:08:08,990
way to not only get environment running

00:08:06,890 --> 00:08:11,570
on your Mac or Windows or Linux machine

00:08:08,990 --> 00:08:13,760
but also to move that forward to staging

00:08:11,570 --> 00:08:16,030
production and whatever whatever else

00:08:13,760 --> 00:08:19,400
you have it can even even be used for

00:08:16,030 --> 00:08:20,690
various testing scenarios maybe you have

00:08:19,400 --> 00:08:22,910
to run all kinds of tests and you want

00:08:20,690 --> 00:08:25,730
to kill it all then reopen it and drop

00:08:22,910 --> 00:08:27,020
it again and so on and so forth now

00:08:25,730 --> 00:08:29,660
what's nice about it it does run

00:08:27,020 --> 00:08:31,430
natively on Linux now on Mac I'm on a

00:08:29,660 --> 00:08:32,990
Mac right here obviously and I can run

00:08:31,430 --> 00:08:35,690
it as well although we'll talk about how

00:08:32,990 --> 00:08:38,120
that works and then on Windows if you

00:08:35,690 --> 00:08:40,700
have Windows 10 or higher you need

00:08:38,120 --> 00:08:41,870
professional or higher you can run what

00:08:40,700 --> 00:08:43,850
I'm going to show you in just a bit here

00:08:41,870 --> 00:08:45,890
it's called the community edition of

00:08:43,850 --> 00:08:47,930
docker it's the free one now if you're

00:08:45,890 --> 00:08:49,190
on Windows 7 at work which I know a lot

00:08:47,930 --> 00:08:51,080
of you probably are at work because they

00:08:49,190 --> 00:08:52,880
just haven't upgraded

00:08:51,080 --> 00:08:55,760
you can still do it but it's called

00:08:52,880 --> 00:08:57,200
docker toolbox and that uses VirtualBox

00:08:55,760 --> 00:08:59,260
under the covers but the bottom line is

00:08:57,200 --> 00:09:01,820
by default it's going to run on Linux

00:08:59,260 --> 00:09:03,830
but if you are a Windows server company

00:09:01,820 --> 00:09:06,800
Windows Server 2016 now natively

00:09:03,830 --> 00:09:08,330
supports the same type of technology now

00:09:06,800 --> 00:09:10,570
I'm going to be running Linux containers

00:09:08,330 --> 00:09:12,410
today but you could do whatever you want

00:09:10,570 --> 00:09:14,960
all right so that's kind of what I was

00:09:12,410 --> 00:09:16,280
saying there if you're on Windows 10 Pro

00:09:14,960 --> 00:09:18,140
or higher you'll be able to run the same

00:09:16,280 --> 00:09:20,060
thing I'm going to do if you're on

00:09:18,140 --> 00:09:22,750
Windows 7 you can do it it's just a

00:09:20,060 --> 00:09:24,650
slightly different way that you do it

00:09:22,750 --> 00:09:26,750
alright let's talk about these things

00:09:24,650 --> 00:09:28,730
then called images containers so the way

00:09:26,750 --> 00:09:30,440
it works is you're going to create

00:09:28,730 --> 00:09:32,810
something called a docker image or

00:09:30,440 --> 00:09:35,420
you're going to pull one from something

00:09:32,810 --> 00:09:38,450
called docker hub and you go to hub

00:09:35,420 --> 00:09:40,250
docker comm and you get the docker hub

00:09:38,450 --> 00:09:42,110
and they have all everything you can

00:09:40,250 --> 00:09:44,360
think it was up there if you want to get

00:09:42,110 --> 00:09:46,160
Jenkins going as long as you know how to

00:09:44,360 --> 00:09:48,920
configure it so that could take a while

00:09:46,160 --> 00:09:50,720
but you could get Jenkins up on your

00:09:48,920 --> 00:09:53,090
machine literally as fast as you can

00:09:50,720 --> 00:09:54,770
pull down the the image and we'll talk

00:09:53,090 --> 00:09:56,270
about by the way these are not VM these

00:09:54,770 --> 00:09:58,520
I don't mean image like VM this is a

00:09:56,270 --> 00:09:59,720
different concept now what we're going

00:09:58,520 --> 00:10:02,570
to do with that is we're going to create

00:09:59,720 --> 00:10:06,050
a docker container then this is actually

00:10:02,570 --> 00:10:07,670
the runtime version of the image so for

00:10:06,050 --> 00:10:08,840
those that have you know the class

00:10:07,670 --> 00:10:10,430
background which if you've done

00:10:08,840 --> 00:10:13,970
typescript or any other language that

00:10:10,430 --> 00:10:15,560
uses classes really it's like the doctor

00:10:13,970 --> 00:10:17,660
image is almost like the blueprint the

00:10:15,560 --> 00:10:19,880
class and the container is almost like

00:10:17,660 --> 00:10:21,350
you nude up the class now you're going

00:10:19,880 --> 00:10:22,580
to use it for something and that's how

00:10:21,350 --> 00:10:24,890
you can kind of think of the difference

00:10:22,580 --> 00:10:26,600
between these now an image is just a

00:10:24,890 --> 00:10:28,660
read-only template what it has is a

00:10:26,600 --> 00:10:30,860
layered file system of all the stuff

00:10:28,660 --> 00:10:33,440
internet for instance is going to have

00:10:30,860 --> 00:10:36,170
all the nginx stuff that sits on top of

00:10:33,440 --> 00:10:38,270
whatever operating system now like I

00:10:36,170 --> 00:10:40,040
said I'm going to be using Linux but you

00:10:38,270 --> 00:10:42,860
could do Windows Server 2016 if you

00:10:40,040 --> 00:10:44,810
wanted which is actually super cool now

00:10:42,860 --> 00:10:46,580
the container is actually then at

00:10:44,810 --> 00:10:50,720
runtime like if you hit my website

00:10:46,580 --> 00:10:53,510
you're hitting containers live and that

00:10:50,720 --> 00:10:55,100
is kind of like the runtime version of

00:10:53,510 --> 00:10:56,720
your image so it kind of looks like this

00:10:55,100 --> 00:11:00,950
an image is going to have these file

00:10:56,720 --> 00:11:02,450
layers these are just read-only all

00:11:00,950 --> 00:11:04,670
right so that if they're actually

00:11:02,450 --> 00:11:05,480
weilong it gives these each layer gets a

00:11:04,670 --> 00:11:08,279
unique

00:11:05,480 --> 00:11:11,699
what's cool about this is if you pull

00:11:08,279 --> 00:11:13,170
let's say engine x4 reverse proxy and it

00:11:11,699 --> 00:11:16,199
has that first layer and start what is

00:11:13,170 --> 00:11:19,199
that 9 1 or something like that and that

00:11:16,199 --> 00:11:21,000
exact ID is used by another image then

00:11:19,199 --> 00:11:22,259
when you pull that image it won't repol

00:11:21,000 --> 00:11:24,720
that layer it's going to go oh you

00:11:22,259 --> 00:11:26,550
already have this and so every little

00:11:24,720 --> 00:11:28,949
layer I think of a cake think of a

00:11:26,550 --> 00:11:32,269
chocolate cake with multiple layers each

00:11:28,949 --> 00:11:34,529
layer is an instruction on files

00:11:32,269 --> 00:11:37,170
something that should happen with files

00:11:34,529 --> 00:11:40,079
it could be your source code in this

00:11:37,170 --> 00:11:42,180
case like engine X or nodejs it's going

00:11:40,079 --> 00:11:44,339
to have the node code of course it could

00:11:42,180 --> 00:11:46,769
be your npm modules could be your

00:11:44,339 --> 00:11:48,750
javascript files so you make an image

00:11:46,769 --> 00:11:50,550
and then that at runtime you make these

00:11:48,750 --> 00:11:54,240
containers and that adds a real thin

00:11:50,550 --> 00:11:55,740
readable writable layer they call it now

00:11:54,240 --> 00:11:57,630
not something to focus on now where does

00:11:55,740 --> 00:11:59,190
it run as mentioned it runs on Linux or

00:11:57,630 --> 00:12:02,730
Windows I'm going to show you the the

00:11:59,190 --> 00:12:04,769
Linux side of that today but it is not a

00:12:02,730 --> 00:12:08,399
virtual machine this is what's so really

00:12:04,769 --> 00:12:09,959
cool about it so on the left side here

00:12:08,399 --> 00:12:12,300
this is the kind of traditional way that

00:12:09,959 --> 00:12:13,889
I think most of us that work with VMs

00:12:12,300 --> 00:12:16,339
have done it

00:12:13,889 --> 00:12:18,690
you'll have your host operating system

00:12:16,339 --> 00:12:20,750
Linux is pretty popular in this world

00:12:18,690 --> 00:12:23,940
but Windows Server can do it as well or

00:12:20,750 --> 00:12:25,350
maybe something else you have then on

00:12:23,940 --> 00:12:27,720
top of that we usually have our guest

00:12:25,350 --> 00:12:31,050
OSS so that's literally a new copy of

00:12:27,720 --> 00:12:32,399
the overall OS right and we know those

00:12:31,050 --> 00:12:34,800
that how many worked with VMs that work

00:12:32,399 --> 00:12:36,000
much either pretty big right I mean

00:12:34,800 --> 00:12:39,449
they're not one of these like oh yeah

00:12:36,000 --> 00:12:42,269
it's only 10 Meg it's maybe 10 gig

00:12:39,449 --> 00:12:44,160
depends on what what it is of course now

00:12:42,269 --> 00:12:46,860
what the difference here with doctor is

00:12:44,160 --> 00:12:51,089
is you still have your hosts and this

00:12:46,860 --> 00:12:54,930
will be Linux by default or Windows 2016

00:12:51,089 --> 00:12:57,089
server but now on top of that imagine

00:12:54,930 --> 00:13:00,449
that some layers that add the missing

00:12:57,089 --> 00:13:01,860
pieces onto the host that you could kind

00:13:00,449 --> 00:13:04,410
of think of it as that runtime it almost

00:13:01,860 --> 00:13:07,199
like it merges them together now what's

00:13:04,410 --> 00:13:08,850
cool though is each container you run

00:13:07,199 --> 00:13:12,149
which would be like app 1 and app to

00:13:08,850 --> 00:13:13,920
here it could be isolated now it depends

00:13:12,149 --> 00:13:16,199
on how you do it because there are some

00:13:13,920 --> 00:13:18,620
tricks to this but you can literally

00:13:16,199 --> 00:13:22,529
think of it I could run like node

00:13:18,620 --> 00:13:24,899
heaven forbid 0.1 dot what - or whatever

00:13:22,529 --> 00:13:28,019
it was a really old one in one container

00:13:24,899 --> 00:13:30,630
and I could have knowed you know 6.10

00:13:28,019 --> 00:13:32,670
dot whatever the LCS is right now and I

00:13:30,630 --> 00:13:34,709
could have knowed seven dot what are we

00:13:32,670 --> 00:13:37,860
up to five or four something like that

00:13:34,709 --> 00:13:40,910
right now all of those on the same exact

00:13:37,860 --> 00:13:43,649
box or Java or.net or you name it and

00:13:40,910 --> 00:13:45,180
each one is in its own isolated

00:13:43,649 --> 00:13:48,209
container now think about how cool that

00:13:45,180 --> 00:13:50,100
is anybody had this scenario yeah your

00:13:48,209 --> 00:13:51,360
boss comes in and you're having a

00:13:50,100 --> 00:13:53,070
meeting you say you know we'd like to

00:13:51,360 --> 00:13:54,390
move to this version the framework it's

00:13:53,070 --> 00:13:57,750
super cool has all these awesome

00:13:54,390 --> 00:14:00,690
features and then your boss then or

00:13:57,750 --> 00:14:02,279
whoever says I can't do it this app on

00:14:00,690 --> 00:14:04,649
this server if we update it's going to

00:14:02,279 --> 00:14:06,570
break nobody's had this right and so now

00:14:04,649 --> 00:14:09,440
you have this server that kind of has to

00:14:06,570 --> 00:14:11,970
stick around or the VM hopefully and

00:14:09,440 --> 00:14:13,980
eventually you'll migrate it but for now

00:14:11,970 --> 00:14:16,890
you're kind of stuck so what do you do

00:14:13,980 --> 00:14:19,200
and you spawn up another VM for that

00:14:16,890 --> 00:14:21,690
which works but with this you can still

00:14:19,200 --> 00:14:23,519
have just one VM with multiple

00:14:21,690 --> 00:14:25,500
containers running which you're going to

00:14:23,519 --> 00:14:28,709
see in a moment so let me show you that

00:14:25,500 --> 00:14:30,990
just a quick example of this real fast

00:14:28,709 --> 00:14:38,070
here so I mentioned that there's this

00:14:30,990 --> 00:14:40,500
hub site it's called hub docker comm and

00:14:38,070 --> 00:14:43,680
you'll notice up in here I have a search

00:14:40,500 --> 00:14:45,240
area and we're going to do nginx here in

00:14:43,680 --> 00:14:49,800
just a moment so let me go search for

00:14:45,240 --> 00:14:52,589
that okay so here's an engine X it's the

00:14:49,800 --> 00:14:54,209
official image you know from the group

00:14:52,589 --> 00:14:57,000
that runs that actually so let me drill

00:14:54,209 --> 00:14:59,430
in there and then there's even different

00:14:57,000 --> 00:15:01,890
versions of it I'm a big fan of Alpine

00:14:59,430 --> 00:15:04,829
Linux because it's teeny when I can use

00:15:01,890 --> 00:15:08,000
it and but you could use a lot of them

00:15:04,829 --> 00:15:10,649
will have you know an Ubuntu or Debian

00:15:08,000 --> 00:15:13,140
or whatever it is they'll have different

00:15:10,649 --> 00:15:14,899
flavors of Linux for instance and then

00:15:13,140 --> 00:15:18,449
of course on Windows you can do the same

00:15:14,899 --> 00:15:20,570
with a Windows image so what I can do is

00:15:18,449 --> 00:15:23,690
I can actually over here to the right

00:15:20,570 --> 00:15:28,290
they have this command you can run now

00:15:23,690 --> 00:15:30,000
before we run it let's go back to the

00:15:28,290 --> 00:15:31,470
different tab here we're going to go to

00:15:30,000 --> 00:15:34,320
docker calm

00:15:31,470 --> 00:15:36,630
and while this is loading let me show

00:15:34,320 --> 00:15:40,230
you up here on the top of my kind of

00:15:36,630 --> 00:15:43,740
toolbar here area for my menu this is

00:15:40,230 --> 00:15:45,240
called a docker Community Edition dr.

00:15:43,740 --> 00:15:47,970
seee you'll notice there is an

00:15:45,240 --> 00:15:51,000
Enterprise Edition as well this one is

00:15:47,970 --> 00:15:52,380
free that one is not but this will let

00:15:51,000 --> 00:15:54,030
you get to all kinds of stuff you can

00:15:52,380 --> 00:15:55,470
create a doctor ID in fact I'm not even

00:15:54,030 --> 00:15:57,180
signed in right now for some reason but

00:15:55,470 --> 00:15:58,950
it won't affect this you know I could

00:15:57,180 --> 00:16:00,720
stop it but this little whale you'll see

00:15:58,950 --> 00:16:02,610
doctors running and what this is doing

00:16:00,720 --> 00:16:05,760
under the covers is running a very

00:16:02,610 --> 00:16:07,950
lightweight kind of hypervisor and it's

00:16:05,760 --> 00:16:10,560
running an alpine Linux VM under the

00:16:07,950 --> 00:16:12,060
covers so every demo I'm going to run

00:16:10,560 --> 00:16:14,510
I'm actually running Linux

00:16:12,060 --> 00:16:18,720
technically even though I'm on my Mac

00:16:14,510 --> 00:16:22,080
and if I was on Windows 10 or Server

00:16:18,720 --> 00:16:25,440
2016 or higher I could actually run a

00:16:22,080 --> 00:16:26,910
Windows version of the image now let me

00:16:25,440 --> 00:16:28,440
now that I've kind of shown you you can

00:16:26,910 --> 00:16:30,090
go to get docker to get it for Mac or

00:16:28,440 --> 00:16:32,580
Windows if you have Linux you can just

00:16:30,090 --> 00:16:35,310
run it natively because it's built into

00:16:32,580 --> 00:16:37,860
a Linux container option so let me go

00:16:35,310 --> 00:16:44,280
back to the command line here in fact

00:16:37,860 --> 00:16:48,750
I'm going to start a new one up and then

00:16:44,280 --> 00:16:51,180
let me zoom that just a bit okay and

00:16:48,750 --> 00:16:54,000
we'll zoom more if we need to what I'm

00:16:51,180 --> 00:16:58,800
going to do is if I do MPM or MPN wrong

00:16:54,000 --> 00:17:01,110
one docker you know whatever it is pull

00:16:58,800 --> 00:17:03,030
engine X and I'm not gonna be able to

00:17:01,110 --> 00:17:05,700
type it who wants to come up with type

00:17:03,030 --> 00:17:07,080
for me alright now I've already done

00:17:05,700 --> 00:17:08,190
this so I'm not going to run in fact it

00:17:07,080 --> 00:17:10,200
should be quick but I'm not going to

00:17:08,190 --> 00:17:12,450
trust the network here this will

00:17:10,200 --> 00:17:13,590
actually pull down the image for engine

00:17:12,450 --> 00:17:16,260
X and I'm going to show you how we could

00:17:13,590 --> 00:17:17,520
run this very quickly and you might be

00:17:16,260 --> 00:17:18,870
going I don't even know what engine X is

00:17:17,520 --> 00:17:20,880
you know what neither did I until about

00:17:18,870 --> 00:17:23,340
a year and a half ago I had never used

00:17:20,880 --> 00:17:24,390
it until I start dive into the doctor

00:17:23,340 --> 00:17:25,680
and I was like oh my gosh this is

00:17:24,390 --> 00:17:28,800
amazing I can get stuff I don't even

00:17:25,680 --> 00:17:31,350
know how to use going you know so which

00:17:28,800 --> 00:17:33,420
is kind of scary of course but let's

00:17:31,350 --> 00:17:35,700
hope you're DevOps people do know how to

00:17:33,420 --> 00:17:37,170
use it so let me go ahead in here and

00:17:35,700 --> 00:17:38,070
now I'm going to show you some commands

00:17:37,170 --> 00:17:40,440
don't feel like you need to memorize

00:17:38,070 --> 00:17:43,680
these I have some slides in the slide

00:17:40,440 --> 00:17:45,660
deck but I could say hey docker

00:17:43,680 --> 00:17:48,630
I would like to see all the images on my

00:17:45,660 --> 00:17:51,720
machine all right now you'll notice I

00:17:48,630 --> 00:17:54,750
have some node if we kind of zoom in

00:17:51,720 --> 00:17:56,760
here I have a node regular and then I

00:17:54,750 --> 00:17:59,940
have no doubt pine which is a very small

00:17:56,760 --> 00:18:01,950
version I have nginx regular that's the

00:17:59,940 --> 00:18:04,860
latest there in the middle and I have

00:18:01,950 --> 00:18:07,770
Internet's Alpine and then I have a

00:18:04,860 --> 00:18:10,200
asp.net core I have WordPress Maria DB

00:18:07,770 --> 00:18:12,210
MongoDB these are all images now this is

00:18:10,200 --> 00:18:15,750
what's so cool though if I didn't want

00:18:12,210 --> 00:18:18,570
one of these I could say docker remove

00:18:15,750 --> 00:18:21,240
image Maria

00:18:18,570 --> 00:18:23,250
DB and then actually I'll have to give

00:18:21,240 --> 00:18:26,400
an ID here the image for Maria DB would

00:18:23,250 --> 00:18:28,380
be 7 II kind of look over here in this

00:18:26,400 --> 00:18:30,150
image ID you don't have to type the

00:18:28,380 --> 00:18:31,470
whole thing you can only just type just

00:18:30,150 --> 00:18:32,970
enough to do it now I'm not going to

00:18:31,470 --> 00:18:37,290
delete it because I might need this like

00:18:32,970 --> 00:18:39,600
tonight but and hotel Wi-Fi not always

00:18:37,290 --> 00:18:41,550
good but this would actually remove that

00:18:39,600 --> 00:18:43,350
image and it there's like no trace now

00:18:41,550 --> 00:18:45,570
that ever had that there's no install I

00:18:43,350 --> 00:18:47,220
don't run an install package and then

00:18:45,570 --> 00:18:48,809
clean it up and uninstall when I'm done

00:18:47,220 --> 00:18:50,820
or you know how many have had it where

00:18:48,809 --> 00:18:52,830
new version of comes out or

00:18:50,820 --> 00:18:54,240
Postgres or whatever you use and ok now

00:18:52,830 --> 00:18:56,309
I'm going to run through that update

00:18:54,240 --> 00:18:58,140
process and you know you could use

00:18:56,309 --> 00:19:00,690
vagrant or stuff like that but with this

00:18:58,140 --> 00:19:02,580
you'll see it's very simple okay so

00:19:00,690 --> 00:19:05,340
that's the docker images now what I can

00:19:02,580 --> 00:19:08,100
do then is well let's go back so if we

00:19:05,340 --> 00:19:11,550
go to doctor images here so I have this

00:19:08,100 --> 00:19:13,320
engine X Alpine now what you do is you

00:19:11,550 --> 00:19:15,960
the left one is the name of the image

00:19:13,320 --> 00:19:18,420
and then the tag you put a colon so I'd

00:19:15,960 --> 00:19:20,700
say into next colon Alpine's let's get

00:19:18,420 --> 00:19:24,740
into the next going right here so let's

00:19:20,700 --> 00:19:28,170
pretend I did a docker pull engine X

00:19:24,740 --> 00:19:29,610
Alpine inner I'm not going to trust the

00:19:28,170 --> 00:19:30,900
network on that one because it shouldn't

00:19:29,610 --> 00:19:32,190
do anything but I don't want to screw

00:19:30,900 --> 00:19:35,100
anything up because I really need that

00:19:32,190 --> 00:19:37,080
later in the demo so let me go ahead and

00:19:35,100 --> 00:19:38,760
let's try to run it and the next command

00:19:37,080 --> 00:19:40,380
I can do is I could say hey docker I

00:19:38,760 --> 00:19:41,700
would like to run I'm going to run it

00:19:40,380 --> 00:19:44,580
what's called daemon mode that allows

00:19:41,700 --> 00:19:47,880
your console to still be active and I'm

00:19:44,580 --> 00:19:50,550
going to run it on port 8080 and then

00:19:47,880 --> 00:19:53,370
the container is going to be on port 80

00:19:50,550 --> 00:19:54,369
though nginx by default uses port 80 for

00:19:53,370 --> 00:19:57,499
that

00:19:54,369 --> 00:20:00,080
and then I could come in and say what

00:19:57,499 --> 00:20:02,029
image do I want to run on port 8080 that

00:20:00,080 --> 00:20:04,669
forwards support 80 in the container

00:20:02,029 --> 00:20:10,309
well I want Alpine well sorry in

00:20:04,669 --> 00:20:12,590
genetics okay okay so what we've done

00:20:10,309 --> 00:20:14,240
here is said hey doctor let's run this

00:20:12,590 --> 00:20:16,809
in what's called daemon mode you'll see

00:20:14,240 --> 00:20:19,519
what that doesn't just decide on a port

00:20:16,809 --> 00:20:21,799
the external port I'm going to hit in

00:20:19,519 --> 00:20:24,649
the browser is 8080 but it's going to

00:20:21,799 --> 00:20:27,529
forward to an internal port okay which

00:20:24,649 --> 00:20:29,389
is 80 now why am i showing engine X well

00:20:27,529 --> 00:20:30,889
because as I said you know yesterday

00:20:29,389 --> 00:20:32,330
today a lot of talks you're going to see

00:20:30,889 --> 00:20:34,460
they do ng serve and that's great for

00:20:32,330 --> 00:20:37,009
development but at some point you got to

00:20:34,460 --> 00:20:38,570
get that on a real server right the

00:20:37,009 --> 00:20:40,129
little light server and things is great

00:20:38,570 --> 00:20:42,200
for dev but maybe not for production

00:20:40,129 --> 00:20:44,149
well engine X and many other options

00:20:42,200 --> 00:20:45,799
again it could be a patchy if you wanted

00:20:44,149 --> 00:20:48,080
it doesn't really matter it's up to you

00:20:45,799 --> 00:20:50,059
you could do it so let's go ahead and

00:20:48,080 --> 00:20:51,350
hit this now notice that my console came

00:20:50,059 --> 00:20:54,440
back that's because it's running in the

00:20:51,350 --> 00:20:58,690
background now in daemon mode let me go

00:20:54,440 --> 00:21:04,070
ahead and try to go to the browser now

00:20:58,690 --> 00:21:06,110
we'll go to 8080 and there we go I now

00:21:04,070 --> 00:21:08,840
have nginx up and running and I've yet

00:21:06,110 --> 00:21:11,600
to do anything now it's not going to

00:21:08,840 --> 00:21:13,249
impress friends and family but that's

00:21:11,600 --> 00:21:18,559
pretty cool now if I wanted I could say

00:21:13,249 --> 00:21:22,340
docker well let's go do that in fact say

00:21:18,559 --> 00:21:24,379
hey docker show me this PS - a will show

00:21:22,340 --> 00:21:26,480
me all the running containers and you'll

00:21:24,379 --> 00:21:29,090
notice it's running 35 seconds ago

00:21:26,480 --> 00:21:30,259
approximately it came up and now what

00:21:29,090 --> 00:21:32,119
I'm going to do is stop it so I'm going

00:21:30,259 --> 00:21:33,950
to say hey doctor stop and then you give

00:21:32,119 --> 00:21:37,759
it the ID it's on the left if c2

00:21:33,950 --> 00:21:39,379
something that just stopped it now I'm

00:21:37,759 --> 00:21:42,470
going to say hey dr. let's just remove

00:21:39,379 --> 00:21:48,320
it I'm done with that container gone

00:21:42,470 --> 00:21:49,639
okay now if I do docker PS - a no

00:21:48,320 --> 00:21:51,619
containers are running right now so I

00:21:49,639 --> 00:21:53,659
still have images again if we go back to

00:21:51,619 --> 00:21:56,179
dr. images I didn't delete that there's

00:21:53,659 --> 00:21:57,619
my nginx but you'll notice that my

00:21:56,179 --> 00:21:59,269
container is gone so now I can't run

00:21:57,619 --> 00:22:02,359
anything but I could restart up the

00:21:59,269 --> 00:22:04,580
image if I wanted now that's cool but

00:22:02,359 --> 00:22:06,759
how does that help you with angular well

00:22:04,580 --> 00:22:08,709
let me show you how we could do that so

00:22:06,759 --> 00:22:11,829
let's say that let me see the end of my

00:22:08,709 --> 00:22:15,129
desktop and I think I have a demos yeah

00:22:11,829 --> 00:22:17,320
so let's do the good old ng good old

00:22:15,129 --> 00:22:19,899
what's it been out like a week

00:22:17,320 --> 00:22:21,969
officially or something but in the

00:22:19,899 --> 00:22:26,399
official release but let's go ahead and

00:22:21,969 --> 00:22:29,679
do ng and what do we want to do here

00:22:26,399 --> 00:22:32,169
John did it yesterday we want a new up a

00:22:29,679 --> 00:22:35,679
project right now this is a anybody else

00:22:32,169 --> 00:22:40,619
new to the CLI in here it'd be honest we

00:22:35,679 --> 00:22:43,569
kind of all are this is where the whoops

00:22:40,619 --> 00:22:45,039
yeah we could do that or - - h-help I

00:22:43,569 --> 00:22:47,409
think we'll do it this is where the

00:22:45,039 --> 00:22:50,079
little help will be very helpful so John

00:22:47,409 --> 00:22:52,239
showed this yesterday let me go up to

00:22:50,079 --> 00:22:54,219
the top here you'll notice that we have

00:22:52,239 --> 00:22:55,899
all the different options for building

00:22:54,219 --> 00:22:58,149
which I'm going to do in a moment we

00:22:55,899 --> 00:23:01,179
have Auto completion and you know it

00:22:58,149 --> 00:23:02,859
goes on and on and on so if you're new

00:23:01,179 --> 00:23:05,829
to this and you didn't have time yet to

00:23:02,859 --> 00:23:08,949
play with it I was actually not a huge

00:23:05,829 --> 00:23:11,589
fan of the CLI until really really

00:23:08,949 --> 00:23:13,209
recently John showed the ng object right

00:23:11,589 --> 00:23:14,440
there that's why I went cool because now

00:23:13,209 --> 00:23:17,109
I can have complete control over the

00:23:14,440 --> 00:23:19,239
like the webpack file and stuff things

00:23:17,109 --> 00:23:20,949
like that so you know we can generate

00:23:19,239 --> 00:23:22,389
new things we can get things we can lint

00:23:20,949 --> 00:23:24,819
we can new which I'm going to do here

00:23:22,389 --> 00:23:28,829
but anyway so where most demos go here

00:23:24,819 --> 00:23:32,829
though is they do this they do ng new

00:23:28,829 --> 00:23:35,829
let's call it my project I don't think

00:23:32,829 --> 00:23:40,690
that's taken and we could say - - and

00:23:35,829 --> 00:23:41,109
what is it routes or routing router yeah

00:23:40,690 --> 00:23:42,879
there we go

00:23:41,109 --> 00:23:44,019
so let's do that and this is going to go

00:23:42,879 --> 00:23:46,329
ahead and I don't even need the router

00:23:44,019 --> 00:23:48,339
but I just wanted to show it let's go

00:23:46,329 --> 00:23:49,659
ahead and spec that out now I'm hoping

00:23:48,339 --> 00:23:51,219
the network's going to cooperate here

00:23:49,659 --> 00:23:54,729
otherwise we'll have to move on but it

00:23:51,219 --> 00:23:56,649
should hopefully as I'm wired in get our

00:23:54,729 --> 00:23:59,529
NPM so while this is running what I'm

00:23:56,649 --> 00:24:02,919
going to do is once we get this I'm

00:23:59,529 --> 00:24:05,229
going to run a ng build that's going to

00:24:02,919 --> 00:24:07,209
generate a disk folder and then I'm

00:24:05,229 --> 00:24:10,839
going to actually run angular the demo

00:24:07,209 --> 00:24:12,249
that it generates in engine X with I'm

00:24:10,839 --> 00:24:13,839
going to take me about 30 seconds or

00:24:12,249 --> 00:24:14,950
something like that and then you can

00:24:13,839 --> 00:24:16,179
have a real server and again this could

00:24:14,950 --> 00:24:17,529
be a patch it could be whatever your

00:24:16,179 --> 00:24:18,009
server is to serve up your static

00:24:17,529 --> 00:24:19,509
content

00:24:18,009 --> 00:24:20,440
I like engine X some people like H a

00:24:19,509 --> 00:24:22,810
proxy

00:24:20,440 --> 00:24:24,790
some people like Apache hi is whatever

00:24:22,810 --> 00:24:26,590
maybe so let's let this run here and

00:24:24,790 --> 00:24:30,040
we'll come back I'll tell you what while

00:24:26,590 --> 00:24:31,930
this is running since there we go there

00:24:30,040 --> 00:24:34,180
we go not bad so what I'm going to do

00:24:31,930 --> 00:24:39,220
now is an NG let me clear this so you

00:24:34,180 --> 00:24:40,630
guys can see let's do ng build it has to

00:24:39,220 --> 00:24:42,670
be oh I have to be in it yes thank you

00:24:40,630 --> 00:24:46,180
so let's go in it so notice I have a my

00:24:42,670 --> 00:24:49,390
project so let's go ahead and CD into my

00:24:46,180 --> 00:24:50,980
project now we run ng build and then you

00:24:49,390 --> 00:24:52,840
have your different - - prod and all

00:24:50,980 --> 00:24:54,490
that I'm not going to do a OT quite yet

00:24:52,840 --> 00:24:57,070
but will that web pack and all that do

00:24:54,490 --> 00:25:00,460
its thing and this will generate our

00:24:57,070 --> 00:25:02,530
bundles and then we're going to try to

00:25:00,460 --> 00:25:05,860
do hopefully is get this up and running

00:25:02,530 --> 00:25:08,620
in engine X with docker containers so

00:25:05,860 --> 00:25:09,760
let's go ahead now and CD into the disc

00:25:08,620 --> 00:25:11,710
which is where it would have put the

00:25:09,760 --> 00:25:14,020
code let's make sure okay looks good and

00:25:11,710 --> 00:25:15,850
now what I'm going to do is let's see if

00:25:14,020 --> 00:25:20,410
I can remember the pass here if not I

00:25:15,850 --> 00:25:21,640
have it let's do the same thing I'm

00:25:20,410 --> 00:25:23,920
going to say on the external I want to

00:25:21,640 --> 00:25:25,150
call port 8080 but internally in the

00:25:23,920 --> 00:25:26,110
container it's going to call a tea but

00:25:25,150 --> 00:25:27,880
I'm going to create something called a

00:25:26,110 --> 00:25:30,910
volume now I put a few slides about

00:25:27,880 --> 00:25:33,580
volumes what this does is by default

00:25:30,910 --> 00:25:37,870
when you kill a container everything

00:25:33,580 --> 00:25:39,400
goes any logs any code anything that was

00:25:37,870 --> 00:25:42,610
in that container bye-bye

00:25:39,400 --> 00:25:45,610
it's gone that obviously would not work

00:25:42,610 --> 00:25:47,020
so well with databases now you take down

00:25:45,610 --> 00:25:50,230
the container and boom there's all your

00:25:47,020 --> 00:25:51,550
data hopefully you have backups so what

00:25:50,230 --> 00:25:54,040
I can do is create what's called a

00:25:51,550 --> 00:25:56,470
volume and I can say hey container I

00:25:54,040 --> 00:25:59,350
want you to point to this folder on the

00:25:56,470 --> 00:26:02,350
host now I want it to point to my disk

00:25:59,350 --> 00:26:03,940
folder and that's called the working

00:26:02,350 --> 00:26:05,830
directory so I'm going to use this

00:26:03,940 --> 00:26:08,080
little dollar PWD and it's just a

00:26:05,830 --> 00:26:11,640
shortcut for working directory and then

00:26:08,080 --> 00:26:14,560
I'm going to go to its us our share

00:26:11,640 --> 00:26:15,850
engine X HTML and if that's wrong I'll

00:26:14,560 --> 00:26:18,190
go look it up but I think that's right

00:26:15,850 --> 00:26:21,970
and then what is it I want to run well

00:26:18,190 --> 00:26:23,320
again I want to run into next alpine in

00:26:21,970 --> 00:26:26,050
this case that's the kind of smaller

00:26:23,320 --> 00:26:29,950
version of the image alright so again

00:26:26,050 --> 00:26:33,010
docker please go run in daemon mode on

00:26:29,950 --> 00:26:35,740
port 8080 for us this is where the

00:26:33,010 --> 00:26:39,100
browser is going to hit it go run this

00:26:35,740 --> 00:26:42,160
nginx Alpine but create kind of like a

00:26:39,100 --> 00:26:45,520
link between the container and this disk

00:26:42,160 --> 00:26:48,070
folder so that when nginx sees this us

00:26:45,520 --> 00:26:50,380
our share engine XHTML well that's where

00:26:48,070 --> 00:26:53,140
your spear code goes by default anyway

00:26:50,380 --> 00:26:55,570
you can change it I want it to point

00:26:53,140 --> 00:26:57,190
back to my local machine so that if I

00:26:55,570 --> 00:26:58,420
make any changes there it just

00:26:57,190 --> 00:27:00,610
automatically picks it up in the

00:26:58,420 --> 00:27:03,520
container so you can kind of think of it

00:27:00,610 --> 00:27:05,590
like just as an alias to some folder

00:27:03,520 --> 00:27:07,960
that's on your localhost which is my Mac

00:27:05,590 --> 00:27:09,820
right now okay so Linux pointing back to

00:27:07,960 --> 00:27:12,450
the Mac now we'll see if I got that

00:27:09,820 --> 00:27:14,860
right us our share I think that's right

00:27:12,450 --> 00:27:19,750
okay so let's go see though I'm gonna

00:27:14,860 --> 00:27:21,250
say docker PS - a will list it it looks

00:27:19,750 --> 00:27:22,600
like it's been up for five seconds okay

00:27:21,250 --> 00:27:26,470
that's a good start it's better than

00:27:22,600 --> 00:27:31,240
down so let's go back to the browser now

00:27:26,470 --> 00:27:33,070
and we'll hopefully now see the CLI you

00:27:31,240 --> 00:27:36,460
know little app that it generates so

00:27:33,070 --> 00:27:40,000
let's go to localhost and what did i do

00:27:36,460 --> 00:27:42,190
8080 I believe and that's that's that's

00:27:40,000 --> 00:27:46,630
cache hopefully all right there we go

00:27:42,190 --> 00:27:48,220
so now I am running my angular CLI app

00:27:46,630 --> 00:27:49,690
which is very sophisticated you know if

00:27:48,220 --> 00:27:51,220
you could sell this for $0.99 on the App

00:27:49,690 --> 00:27:54,970
Store to a million people you're rich

00:27:51,220 --> 00:27:57,580
but I'm now running that now yes that's

00:27:54,970 --> 00:28:00,280
very basic but you can see how easy with

00:27:57,580 --> 00:28:02,260
just that one command I'm now able to

00:28:00,280 --> 00:28:04,390
get angular going on a real server

00:28:02,260 --> 00:28:06,760
that's capable of handling millions of

00:28:04,390 --> 00:28:08,050
users if I wanted now I have a much more

00:28:06,760 --> 00:28:10,570
robust one I'm going to show you here in

00:28:08,050 --> 00:28:13,570
just a little bit but pretty cool right

00:28:10,570 --> 00:28:16,150
not bad I mean yeah I won't lie to you I

00:28:13,570 --> 00:28:17,860
had to i've spent a few years now doing

00:28:16,150 --> 00:28:19,360
the commands so I told you I didn't

00:28:17,860 --> 00:28:21,010
really come from the either

00:28:19,360 --> 00:28:22,690
clickety-click or the command line world

00:28:21,010 --> 00:28:25,960
I was a little more of a visual back in

00:28:22,690 --> 00:28:28,840
the day and so you know now of course I

00:28:25,960 --> 00:28:31,870
love all command line stuff but takes a

00:28:28,840 --> 00:28:33,550
little practice it's all alright so now

00:28:31,870 --> 00:28:35,680
that we've seen that let's go ahead in

00:28:33,550 --> 00:28:40,060
fact how do we how do we take it down

00:28:35,680 --> 00:28:43,960
the container anyone remember stop yeah

00:28:40,060 --> 00:28:44,680
so if I look on the left you'll see on

00:28:43,960 --> 00:28:48,490
the far left

00:28:44,680 --> 00:28:50,740
3a what is it 386 now you can name your

00:28:48,490 --> 00:28:53,500
containers by the way there's a - - name

00:28:50,740 --> 00:28:59,200
you can do I didn't do that but or you

00:28:53,500 --> 00:29:02,020
can use there's gifted Aria bata I don't

00:28:59,200 --> 00:29:03,970
know I did a course for Pluralsight and

00:29:02,020 --> 00:29:05,710
they did a random one of these that I

00:29:03,970 --> 00:29:08,950
left in didn't make it through the

00:29:05,710 --> 00:29:10,810
review process it's something I'm not

00:29:08,950 --> 00:29:12,820
allowed to say on stage we have Code of

00:29:10,810 --> 00:29:14,320
Conduct but I thought was funny so I

00:29:12,820 --> 00:29:17,680
left it in there like now you can't put

00:29:14,320 --> 00:29:20,980
that in so I had to RiRi record that

00:29:17,680 --> 00:29:24,040
clip but anyway so let me go into here

00:29:20,980 --> 00:29:25,330
and just again do it again dr. PS - a

00:29:24,040 --> 00:29:29,550
repetition is good here

00:29:25,330 --> 00:29:32,890
okay 3a so doctor I would like to stop

00:29:29,550 --> 00:29:34,510
3a and if you have a bunch of them and

00:29:32,890 --> 00:29:38,320
maybe two of them start with 3a then you

00:29:34,510 --> 00:29:40,480
go one more three a6 you know I do as

00:29:38,320 --> 00:29:45,670
few as I can and then we'll say docker

00:29:40,480 --> 00:29:47,740
remove 3a and now if we do dr. PSA

00:29:45,670 --> 00:29:49,630
you'll see it's gone okay I still up my

00:29:47,740 --> 00:29:52,240
image don't have my running container

00:29:49,630 --> 00:29:53,650
it's as if it never existed and again if

00:29:52,240 --> 00:29:55,480
I want to remove that image if I was

00:29:53,650 --> 00:29:57,670
done with it which I'm not then I would

00:29:55,480 --> 00:29:59,110
just put the image ID right here and

00:29:57,670 --> 00:30:01,660
it's gone it's as if it never existed

00:29:59,110 --> 00:30:03,670
and it instantly deletes it it's not

00:30:01,660 --> 00:30:05,380
like this big uninstall process and

00:30:03,670 --> 00:30:06,970
something like that it's very very cool

00:30:05,380 --> 00:30:09,250
alright so let's do a little bit more

00:30:06,970 --> 00:30:10,260
here and we do it on time okay we're

00:30:09,250 --> 00:30:14,710
doing good actually

00:30:10,260 --> 00:30:20,770
now can you imagine if you had a node

00:30:14,710 --> 00:30:21,760
container nginx Postgres PHP you

00:30:20,770 --> 00:30:23,770
know maybe you have this micro so

00:30:21,760 --> 00:30:26,440
everyone use micro services that work

00:30:23,770 --> 00:30:28,750
yet okay a few of you if you ever heard

00:30:26,440 --> 00:30:31,000
of the Sola concept service-oriented

00:30:28,750 --> 00:30:33,160
architecture microservices is kind of

00:30:31,000 --> 00:30:36,250
like the next evolution of that that's

00:30:33,160 --> 00:30:38,320
an extreme summation but kind of what it

00:30:36,250 --> 00:30:39,730
is it's a way where you know this team

00:30:38,320 --> 00:30:42,190
you guys over here you're all in them

00:30:39,730 --> 00:30:44,620
that's a big team but hey you're all on

00:30:42,190 --> 00:30:46,930
one team maybe you're doing note but

00:30:44,620 --> 00:30:48,190
this team over here you know you're a

00:30:46,930 --> 00:30:50,110
different part of the company or maybe

00:30:48,190 --> 00:30:53,110
contractors or something and maybe

00:30:50,110 --> 00:30:54,640
you're doing like PHP alright well I as

00:30:53,110 --> 00:30:56,200
angular

00:30:54,640 --> 00:30:58,450
I don't really care I just need the URLs

00:30:56,200 --> 00:31:00,730
but how you going to manage this can you

00:30:58,450 --> 00:31:02,680
imagine docker run yours docker run

00:31:00,730 --> 00:31:04,360
yours docker run the database docker run

00:31:02,680 --> 00:31:06,340
this docker run that I mean you be there

00:31:04,360 --> 00:31:08,470
all day you know it that would get old

00:31:06,340 --> 00:31:10,060
and while I'm okay with the command-line

00:31:08,470 --> 00:31:12,850
I'm not that okay with the command we're

00:31:10,060 --> 00:31:15,070
not that good of friends so I'm going to

00:31:12,850 --> 00:31:16,180
show you a little extra bonus thing we

00:31:15,070 --> 00:31:17,470
can do here in just a moment so let me

00:31:16,180 --> 00:31:18,400
get back to the slides real quick and

00:31:17,470 --> 00:31:20,940
then we'll jump into something called

00:31:18,400 --> 00:31:23,140
docker compose which is like phenomenal

00:31:20,940 --> 00:31:24,490
those that are going nope I don't like

00:31:23,140 --> 00:31:26,290
this too much command line already

00:31:24,490 --> 00:31:27,490
you'll probably like what I'll show you

00:31:26,290 --> 00:31:29,260
a little bit because there's only a

00:31:27,490 --> 00:31:31,600
couple commands now the benefits then of

00:31:29,260 --> 00:31:33,250
this so you know you get back to work

00:31:31,600 --> 00:31:34,600
and you're like yeah dan said this is

00:31:33,250 --> 00:31:37,420
kind of cool and then they'll probably

00:31:34,600 --> 00:31:39,640
go Oh Dan none if John said it listen

00:31:37,420 --> 00:31:44,980
but you know Dan said it's not that's

00:31:39,640 --> 00:31:47,890
what my wife does yeah we actually our

00:31:44,980 --> 00:31:49,360
families are real good friends so they

00:31:47,890 --> 00:31:52,660
hang out and who knows what they say

00:31:49,360 --> 00:31:55,570
about us but anyway the benefits here

00:31:52,660 --> 00:31:58,360
are many having done this now for two

00:31:55,570 --> 00:32:00,220
years in production and I know several

00:31:58,360 --> 00:32:02,770
companies we work in that we worked with

00:32:00,220 --> 00:32:05,830
that are using this in production number

00:32:02,770 --> 00:32:08,980
one if anybody does have contractors and

00:32:05,830 --> 00:32:11,290
it's very difficult to get them to set

00:32:08,980 --> 00:32:13,330
things up in a way that's consistent

00:32:11,290 --> 00:32:15,280
with your staging or test environment

00:32:13,330 --> 00:32:18,550
this can be cool for that we'll talk

00:32:15,280 --> 00:32:21,010
about that in a moment maybe you have

00:32:18,550 --> 00:32:23,920
some UI folks who they're tweaking the

00:32:21,010 --> 00:32:25,360
CSS and doing the images and all that

00:32:23,920 --> 00:32:30,070
stuff that you know changes our

00:32:25,360 --> 00:32:31,870
battleship gray to readable they

00:32:30,070 --> 00:32:33,820
probably aren't going to know how to get

00:32:31,870 --> 00:32:35,710
a server up potentially you know their

00:32:33,820 --> 00:32:38,140
their skills are much better than my

00:32:35,710 --> 00:32:40,210
skills they can do things like Photoshop

00:32:38,140 --> 00:32:43,690
and all that okay so we'll talk about

00:32:40,210 --> 00:32:44,950
that app conflicts again what happens

00:32:43,690 --> 00:32:47,470
when a new version of our framework

00:32:44,950 --> 00:32:49,180
comes out well for a lot of you that

00:32:47,470 --> 00:32:51,910
probably means either a new VM or a new

00:32:49,180 --> 00:32:53,110
server if you have existing apps on an

00:32:51,910 --> 00:32:54,910
older version because you don't want

00:32:53,110 --> 00:32:57,360
those conflicts going potentially now

00:32:54,910 --> 00:32:59,790
there's ways around that too but

00:32:57,360 --> 00:33:02,350
environment consistency this is huge

00:32:59,790 --> 00:33:03,990
we're on a project for I'll just say it

00:33:02,350 --> 00:33:07,770
was a large credit card company

00:33:03,990 --> 00:33:10,500
and when we got our environment going

00:33:07,770 --> 00:33:13,500
well we use their dev environment moved

00:33:10,500 --> 00:33:15,780
it to the stage environment everything

00:33:13,500 --> 00:33:17,820
broke and it turned out they had some

00:33:15,780 --> 00:33:19,170
extra firewalls and some extra stuff in

00:33:17,820 --> 00:33:21,650
place that we didn't know about

00:33:19,170 --> 00:33:23,490
okay well this can help with that

00:33:21,650 --> 00:33:29,340
getting it to production

00:33:23,490 --> 00:33:30,930
much easier AWS as your you name an app

00:33:29,340 --> 00:33:33,240
Harbor all those different things out

00:33:30,930 --> 00:33:35,640
there will allow you to do containers

00:33:33,240 --> 00:33:36,960
now so I go to something called I'm not

00:33:35,640 --> 00:33:39,420
going to have time to show it today but

00:33:36,960 --> 00:33:42,120
I go to something called cloud docker

00:33:39,420 --> 00:33:43,950
comm and literally when I have a

00:33:42,120 --> 00:33:47,490
container update I can link it either a

00:33:43,950 --> 00:33:49,770
to a hook in my I use bit bucket for my

00:33:47,490 --> 00:33:52,950
private but github for all my public

00:33:49,770 --> 00:33:54,750
most of it anyway and I can link it and

00:33:52,950 --> 00:33:56,430
I can even have a hook then when my

00:33:54,750 --> 00:33:58,800
source code changes it rebuilds the

00:33:56,430 --> 00:34:00,300
image and then I could set it up I don't

00:33:58,800 --> 00:34:02,070
have this today but where it even

00:34:00,300 --> 00:34:03,630
redeploys the container that one I like

00:34:02,070 --> 00:34:06,390
to kind of control a little bit more

00:34:03,630 --> 00:34:09,020
right now but you can even hook all that

00:34:06,390 --> 00:34:12,090
which is very cool so if you are in this

00:34:09,020 --> 00:34:16,080
mode where you have extreme mix you have

00:34:12,090 --> 00:34:19,980
server-side folks you have UI folks you

00:34:16,080 --> 00:34:23,250
have people that just managers they have

00:34:19,980 --> 00:34:24,870
no clue you know whatever then this will

00:34:23,250 --> 00:34:28,050
help you get these servers whether it's

00:34:24,870 --> 00:34:30,690
databases web servers reverse proxies

00:34:28,050 --> 00:34:32,850
you know Redis for caching maybe all

00:34:30,690 --> 00:34:34,380
going in a consistent way and I have a

00:34:32,850 --> 00:34:36,560
kind of a much bigger demo I'm going to

00:34:34,380 --> 00:34:39,170
run here to wrap up once we get to it

00:34:36,560 --> 00:34:42,270
app conflicts I've already talked about

00:34:39,170 --> 00:34:44,550
let me go back so again you have like

00:34:42,270 --> 00:34:45,810
version 1 version 2 version 3 well that

00:34:44,550 --> 00:34:47,580
can be a little bit problematic

00:34:45,810 --> 00:34:49,410
sometimes depending on how your

00:34:47,580 --> 00:34:52,130
framework works and updates and things

00:34:49,410 --> 00:34:54,690
with this we can help avoid that and

00:34:52,130 --> 00:34:56,760
then moving between the environments our

00:34:54,690 --> 00:34:58,680
staging our production things like that

00:34:56,760 --> 00:35:01,550
could be much better so in the in the

00:34:58,680 --> 00:35:04,350
end it does this it ship software faster

00:35:01,550 --> 00:35:06,390
now let's get to where it gets really

00:35:04,350 --> 00:35:07,890
cool so kind of steps again that I've

00:35:06,390 --> 00:35:11,490
already gone through is you do need to

00:35:07,890 --> 00:35:14,100
install docker Community Edition and you

00:35:11,490 --> 00:35:15,030
do have to have again Windows 10 Pro or

00:35:14,100 --> 00:35:16,800
a

00:35:15,030 --> 00:35:18,210
now if you're running Linux there's

00:35:16,800 --> 00:35:20,670
actually some commands you can run and

00:35:18,210 --> 00:35:23,940
just get it natively on Linux that's

00:35:20,670 --> 00:35:25,500
it's kind of default home you may create

00:35:23,940 --> 00:35:27,390
a custom docker file now this is a

00:35:25,500 --> 00:35:29,550
docker file is how you make your custom

00:35:27,390 --> 00:35:31,230
images and I'll show you some of that

00:35:29,550 --> 00:35:33,480
coming up here in just a moment before

00:35:31,230 --> 00:35:34,830
we run the big demo and then you're

00:35:33,480 --> 00:35:36,840
going to run these commands you're going

00:35:34,830 --> 00:35:39,390
to run the docker run docker remove

00:35:36,840 --> 00:35:42,690
docker images docker PSA all that type

00:35:39,390 --> 00:35:44,400
of stuff to get this going now if you're

00:35:42,690 --> 00:35:46,710
on a Mac what it does under the covers

00:35:44,400 --> 00:35:50,490
is uses hyper kit and with a little

00:35:46,710 --> 00:35:51,930
alpine Linux VM to host your Linux if

00:35:50,490 --> 00:35:53,460
you're on Windows it's going to use

00:35:51,930 --> 00:35:57,180
hyper-v that's why you need Windows pen

00:35:53,460 --> 00:35:59,010
Pro or higher but again you can use

00:35:57,180 --> 00:36:01,950
docker toolbox if you're on Windows 7

00:35:59,010 --> 00:36:03,120
and it works that's how I started so

00:36:01,950 --> 00:36:04,110
they have these things called docker

00:36:03,120 --> 00:36:05,760
files I'm going to show you a really

00:36:04,110 --> 00:36:07,680
simple example here of some of the

00:36:05,760 --> 00:36:09,810
images I have for my micro services that

00:36:07,680 --> 00:36:12,540
angular calls much more real life

00:36:09,810 --> 00:36:14,550
example coming up here and this contains

00:36:12,540 --> 00:36:17,640
all the instructions as it says there

00:36:14,550 --> 00:36:20,220
for how do I build the layers of the

00:36:17,640 --> 00:36:23,310
cake what files are going to be in this

00:36:20,220 --> 00:36:26,070
image might be my source code might be

00:36:23,310 --> 00:36:26,850
images you know who knows I

00:36:26,070 --> 00:36:29,010
so you're going to have these

00:36:26,850 --> 00:36:31,020
instructions and then when you do a

00:36:29,010 --> 00:36:32,820
docker build which I'm not going to do

00:36:31,020 --> 00:36:35,670
because mine are already built it will

00:36:32,820 --> 00:36:37,230
convert those docker files into an

00:36:35,670 --> 00:36:39,540
actual image so it kind of works like

00:36:37,230 --> 00:36:42,780
this so you're going to write a docker

00:36:39,540 --> 00:36:44,970
file for maybe engine X maybe in there

00:36:42,780 --> 00:36:47,220
you copy in your angular that's what I'm

00:36:44,970 --> 00:36:48,780
doing and then you're going to run it

00:36:47,220 --> 00:36:50,580
through this docker build process and

00:36:48,780 --> 00:36:52,680
now you have a custom image so the ones

00:36:50,580 --> 00:36:55,020
up on docker hub some of those are

00:36:52,680 --> 00:36:56,820
custom some of those are from the actual

00:36:55,020 --> 00:36:59,880
component vendors out there or the

00:36:56,820 --> 00:37:01,290
server vendors like nginx or some of the

00:36:59,880 --> 00:37:04,260
open source ones like Postgres and

00:37:01,290 --> 00:37:05,550
things so here's a quick example let me

00:37:04,260 --> 00:37:09,720
just write this out this is actually an

00:37:05,550 --> 00:37:11,610
asp.net core example but I could do node

00:37:09,720 --> 00:37:13,110
in fact the demo I'll have has node and

00:37:11,610 --> 00:37:16,830
SP net core and a bunch of other stuff

00:37:13,110 --> 00:37:18,420
so you you say from and you give it your

00:37:16,830 --> 00:37:21,030
base image now this is kind of like I

00:37:18,420 --> 00:37:22,470
want to inherit that from this cake now

00:37:21,030 --> 00:37:25,140
I want to add my own layers on top of

00:37:22,470 --> 00:37:26,040
that cake that's what this is doing of

00:37:25,140 --> 00:37:28,570
course you always got to put the

00:37:26,040 --> 00:37:30,880
maintainer so you know who to blame

00:37:28,570 --> 00:37:32,980
you have the copy I'm going to copy from

00:37:30,880 --> 00:37:35,380
the local folder that's the dot into

00:37:32,980 --> 00:37:36,850
this bar dub dub that would be where

00:37:35,380 --> 00:37:39,520
it's going to go in the container when

00:37:36,850 --> 00:37:41,500
it runs I'm going to use that folder as

00:37:39,520 --> 00:37:43,480
my my startup directory my working

00:37:41,500 --> 00:37:44,830
directory and then in this case I'm

00:37:43,480 --> 00:37:46,600
doing some commands specific to

00:37:44,830 --> 00:37:48,280
something called asp.net core now if it

00:37:46,600 --> 00:37:50,980
was node which I also have in this demo

00:37:48,280 --> 00:37:53,260
you know that's where you can run p.m.

00:37:50,980 --> 00:37:55,960
to or node Mon or whatever you forever

00:37:53,260 --> 00:37:57,880
whatever you like to use to start it up

00:37:55,960 --> 00:38:00,490
or maybe it's called note node server

00:37:57,880 --> 00:38:03,670
j/s or whatever you call it so then you

00:38:00,490 --> 00:38:05,140
do this you just kind of write all these

00:38:03,670 --> 00:38:07,750
out real quick so you say hey doctor I

00:38:05,140 --> 00:38:10,480
want to build an image I would like to

00:38:07,750 --> 00:38:12,310
tag it as now the thing on the left you

00:38:10,480 --> 00:38:15,760
can have your own repositories up in

00:38:12,310 --> 00:38:17,950
doctor hub or for most companies they'll

00:38:15,760 --> 00:38:19,750
have a local repository so this would be

00:38:17,950 --> 00:38:21,880
something that your IT admin would set

00:38:19,750 --> 00:38:23,290
up you as a developer then if you have

00:38:21,880 --> 00:38:25,570
rights would be able to make your own

00:38:23,290 --> 00:38:27,820
images now other people on the team

00:38:25,570 --> 00:38:29,710
would be able to pull that image down

00:38:27,820 --> 00:38:32,050
and use it on their box which is very

00:38:29,710 --> 00:38:33,820
cool you'll see in a moment then you can

00:38:32,050 --> 00:38:35,890
give it the image name in this case I

00:38:33,820 --> 00:38:37,660
called it net and then I gave it a

00:38:35,890 --> 00:38:41,290
version as well in this particular

00:38:37,660 --> 00:38:42,790
example and then dot means what's the

00:38:41,290 --> 00:38:44,710
context well use the current folder

00:38:42,790 --> 00:38:47,500
that's where the doctor file is in the

00:38:44,710 --> 00:38:49,120
current folder then I can do what you

00:38:47,500 --> 00:38:50,860
already saw then I could say hey I'd

00:38:49,120 --> 00:38:52,540
like to run it in daemon mode I'd like

00:38:50,860 --> 00:38:54,790
to name it net I would like to do that

00:38:52,540 --> 00:38:56,320
port internal/external well it's

00:38:54,790 --> 00:38:57,880
actually sorry external is the one the

00:38:56,320 --> 00:38:59,530
left internal is one on the right and

00:38:57,880 --> 00:39:02,380
then there's the name of my image I just

00:38:59,530 --> 00:39:03,880
made it to last slide okay now here's

00:39:02,380 --> 00:39:06,370
the problem though this is great if you

00:39:03,880 --> 00:39:08,470
do the demo I did but what happens when

00:39:06,370 --> 00:39:10,480
your app has ten containers can you

00:39:08,470 --> 00:39:13,270
imagine have to run it can get much

00:39:10,480 --> 00:39:16,540
longer than this and you're like I don't

00:39:13,270 --> 00:39:19,210
think so okay so the good news is let me

00:39:16,540 --> 00:39:20,890
skip forward here they have an

00:39:19,210 --> 00:39:22,900
orchestration tool built into docker

00:39:20,890 --> 00:39:26,080
which is just phenomenal especially for

00:39:22,900 --> 00:39:27,850
dev called docker compose and those in

00:39:26,080 --> 00:39:29,560
here and no one gentleman in the front

00:39:27,850 --> 00:39:32,410
row here where are you yeah you're

00:39:29,560 --> 00:39:34,330
probably using this right okay or that

00:39:32,410 --> 00:39:36,310
or that yep there's a couple options for

00:39:34,330 --> 00:39:40,880
orchestration but here's the general

00:39:36,310 --> 00:39:43,420
idea I have all these images that

00:39:40,880 --> 00:39:46,279
want to convert to a real-life

00:39:43,420 --> 00:39:50,329
production like environment exactly on

00:39:46,279 --> 00:39:52,250
my machine though you know I do not want

00:39:50,329 --> 00:39:53,750
to run docker run docker run docker run

00:39:52,250 --> 00:39:55,099
ten minutes later you finally got them

00:39:53,750 --> 00:39:56,450
all up but you realize you screwed up

00:39:55,099 --> 00:39:59,029
one of them now you got to take it down

00:39:56,450 --> 00:40:00,230
and you know it would be painful that's

00:39:59,029 --> 00:40:02,779
actually what we used to do by the way

00:40:00,230 --> 00:40:04,099
in the old days and I'm here to tell you

00:40:02,779 --> 00:40:06,769
you're catching at the right time

00:40:04,099 --> 00:40:08,990
because I spent way more time than I

00:40:06,769 --> 00:40:10,880
should have back then so let's say that

00:40:08,990 --> 00:40:13,970
we have this scenario I started to talk

00:40:10,880 --> 00:40:15,380
with we have maybe in turn X or Apache

00:40:13,970 --> 00:40:16,849
or whatever you want to have is your

00:40:15,380 --> 00:40:19,430
front end server that serves up your

00:40:16,849 --> 00:40:21,890
static content we then have some

00:40:19,430 --> 00:40:23,690
back-end API server so let's say angular

00:40:21,890 --> 00:40:26,180
in this case is in Engine X like the

00:40:23,690 --> 00:40:28,279
demo I ran it's going to call into these

00:40:26,180 --> 00:40:30,200
different API s will call these micro

00:40:28,279 --> 00:40:31,970
services and then they would have

00:40:30,200 --> 00:40:35,059
typically each micro service has its own

00:40:31,970 --> 00:40:38,329
database own cache kind of self

00:40:35,059 --> 00:40:40,789
responsible well to get all that going

00:40:38,329 --> 00:40:43,730
is actually challenging so fortunately

00:40:40,789 --> 00:40:45,410
we have a very simple way to do it you

00:40:43,730 --> 00:40:48,619
end up creating a file called a yamo

00:40:45,410 --> 00:40:51,380
file and this yamo file is basically

00:40:48,619 --> 00:40:54,410
just a file that says hey I have nginx

00:40:51,380 --> 00:40:56,329
here's where the images I have Redis

00:40:54,410 --> 00:40:58,099
here's where the images I have I have a

00:40:56,329 --> 00:41:00,950
have and then what it'll do is with one

00:40:58,099 --> 00:41:02,809
command you can bring up everything on

00:41:00,950 --> 00:41:04,759
your dev box which I'm going to attempt

00:41:02,809 --> 00:41:06,769
here in just a moment while I pull the

00:41:04,759 --> 00:41:08,119
rabbit out of the Hat we try to do those

00:41:06,769 --> 00:41:11,059
both the same time so it kind of works

00:41:08,119 --> 00:41:12,680
like this doctor composes a yam will

00:41:11,059 --> 00:41:15,529
file and this is one of those things you

00:41:12,680 --> 00:41:18,529
just go find a good one and kind of copy

00:41:15,529 --> 00:41:20,930
and paste and tweet if there's one thing

00:41:18,529 --> 00:41:23,690
I'm good at I'm really good at copy

00:41:20,930 --> 00:41:26,029
paste let me tell you I think that's my

00:41:23,690 --> 00:41:29,299
number one skill in programming that in

00:41:26,029 --> 00:41:31,250
googling right but what is going to do

00:41:29,299 --> 00:41:33,049
is orchestrate one or more images

00:41:31,250 --> 00:41:35,079
another convert the image in other words

00:41:33,049 --> 00:41:38,539
convert the image into containers and

00:41:35,079 --> 00:41:39,559
this is kind of what it looks like now

00:41:38,539 --> 00:41:41,210
we're not going to spend a lot of time

00:41:39,559 --> 00:41:42,680
on this but you'll notice and there's

00:41:41,210 --> 00:41:44,509
there's even a new version I'm not

00:41:42,680 --> 00:41:48,680
running it yet but there's even a new

00:41:44,509 --> 00:41:50,750
one but ASP is a service I have Postgres

00:41:48,680 --> 00:41:52,670
is a service I have and then you can

00:41:50,750 --> 00:41:54,680
even set up custom networks between your

00:41:52,670 --> 00:41:56,690
containers so that other container

00:41:54,680 --> 00:42:00,290
can't talk to this one if they're on the

00:41:56,690 --> 00:42:02,060
same box same VM for instance now you'll

00:42:00,290 --> 00:42:04,730
notice on the ASP one there's a build

00:42:02,060 --> 00:42:06,740
process there context is dot that means

00:42:04,730 --> 00:42:08,390
use the current folder and the docker

00:42:06,740 --> 00:42:10,310
file I'm going to use is called ASP

00:42:08,390 --> 00:42:13,010
docker no dr. in the example I'm going

00:42:10,310 --> 00:42:16,040
to have you for you Postgres whatever it

00:42:13,010 --> 00:42:17,630
is so it kind of works like this now

00:42:16,040 --> 00:42:19,220
this is what this is where it gets

00:42:17,630 --> 00:42:20,330
really cool this is where a lot of you

00:42:19,220 --> 00:42:23,660
especially if you're like you know what

00:42:20,330 --> 00:42:25,340
Dan I'm not a command-line person I do

00:42:23,660 --> 00:42:28,280
not want to use a command-line more than

00:42:25,340 --> 00:42:31,010
a few keystrokes then as long as you

00:42:28,280 --> 00:42:34,010
have docker seee installed you can run

00:42:31,010 --> 00:42:36,530
docker compose build that will now go

00:42:34,010 --> 00:42:38,480
into this file right here and create

00:42:36,530 --> 00:42:40,850
your images now there's bottom one

00:42:38,480 --> 00:42:42,170
Postgres I don't have a docker file I'm

00:42:40,850 --> 00:42:44,630
just going to pull the image up from

00:42:42,170 --> 00:42:47,090
docker hub or your personal company hub

00:42:44,630 --> 00:42:48,220
if you have one so in that case it's

00:42:47,090 --> 00:42:50,630
pretty simple

00:42:48,220 --> 00:42:52,940
so what this will do now is I say hey

00:42:50,630 --> 00:42:54,980
docker compose notice not docker dr

00:42:52,940 --> 00:42:57,560
compose build now that's going to read

00:42:54,980 --> 00:43:00,230
the yamo file and build up you know it

00:42:57,560 --> 00:43:02,930
could be 50 images who knows one command

00:43:00,230 --> 00:43:05,570
will do that now you'd have the images

00:43:02,930 --> 00:43:09,170
on your machine now you run docker

00:43:05,570 --> 00:43:10,850
compose up that now starts up all the

00:43:09,170 --> 00:43:13,000
containers and when you do the yamo file

00:43:10,850 --> 00:43:16,100
you can even say hey this container

00:43:13,000 --> 00:43:17,360
depends on this container you can kind

00:43:16,100 --> 00:43:19,760
of make sure they load in the proper

00:43:17,360 --> 00:43:21,350
order there's actually still some

00:43:19,760 --> 00:43:22,310
challenges there but and then when

00:43:21,350 --> 00:43:25,100
you're done you just live long and

00:43:22,310 --> 00:43:27,590
prosper it's pretty nice so let me show

00:43:25,100 --> 00:43:29,360
you an example of this in a much more

00:43:27,590 --> 00:43:34,970
kind of real life project this is

00:43:29,360 --> 00:43:36,470
actually kind of based on so so I think

00:43:34,970 --> 00:43:38,240
I went to bed about 3:30 last night

00:43:36,470 --> 00:43:40,760
because you know I was just going to do

00:43:38,240 --> 00:43:43,540
the nginx demo and I went now I just

00:43:40,760 --> 00:43:46,640
can't do it we got to do something big

00:43:43,540 --> 00:43:48,680
so like an idiot John texted me at like

00:43:46,640 --> 00:43:52,130
2:00 or something's like you're in bed

00:43:48,680 --> 00:43:53,930
right and I'm like nope like I got as

00:43:52,130 --> 00:43:55,310
you knew I was doing the demo but

00:43:53,930 --> 00:43:57,650
hopefully you'll like it because it's

00:43:55,310 --> 00:43:59,210
it's definitely more robust the angular

00:43:57,650 --> 00:44:01,370
apps not huge but it's hitting multiple

00:43:59,210 --> 00:44:04,730
micro-services node asp net core

00:44:01,370 --> 00:44:05,330
Postgres MongoDB and everything's doc

00:44:04,730 --> 00:44:05,900
arised

00:44:05,330 --> 00:44:08,279
if you

00:44:05,900 --> 00:44:10,559
so let me open up this file right here

00:44:08,279 --> 00:44:13,890
it's called dr. compose and then we'll

00:44:10,559 --> 00:44:16,109
run it so notice I have some services I

00:44:13,890 --> 00:44:18,719
have Engine X it has its own docker file

00:44:16,109 --> 00:44:21,209
I need to tweak things a little bit it

00:44:18,719 --> 00:44:24,180
has a volume now this volume says I want

00:44:21,209 --> 00:44:28,289
to point to the local disk folder like I

00:44:24,180 --> 00:44:30,690
ran earlier but in the container the U

00:44:28,289 --> 00:44:33,779
us our share engine XHTML well really

00:44:30,690 --> 00:44:35,819
the that's just an alias for the disk

00:44:33,779 --> 00:44:37,619
folder so the container is pointing out

00:44:35,819 --> 00:44:40,109
back to my localhost so I can make

00:44:37,619 --> 00:44:41,660
changes down the disk folder and the

00:44:40,109 --> 00:44:43,859
container since it points to that

00:44:41,660 --> 00:44:46,920
automatically gets those changes now

00:44:43,859 --> 00:44:48,180
that's not good for production but in

00:44:46,920 --> 00:44:50,279
production what you would do is in the

00:44:48,180 --> 00:44:53,849
docker file you would copy in your code

00:44:50,279 --> 00:44:55,109
into the docker image now anyone that

00:44:53,849 --> 00:44:56,459
pulls your image down they have

00:44:55,109 --> 00:44:58,049
everything they have in genetics they

00:44:56,459 --> 00:45:02,160
have all your code if I'll configure the

00:44:58,049 --> 00:45:04,799
security setup for real life I have SSL

00:45:02,160 --> 00:45:06,779
certificates for instance that I can

00:45:04,799 --> 00:45:09,359
pull in to my image now those you want

00:45:06,779 --> 00:45:11,339
to secure of course now moving on down

00:45:09,359 --> 00:45:14,549
there's the ports I'm going to hit nginx

00:45:11,339 --> 00:45:17,849
on port 80 or 443 I'm not using SSL here

00:45:14,549 --> 00:45:20,749
but you could all right there's a node

00:45:17,849 --> 00:45:24,059
container has its own docker file

00:45:20,749 --> 00:45:27,269
there's a MongoDB container there's an

00:45:24,059 --> 00:45:29,369
asp.net core container my goal was throw

00:45:27,269 --> 00:45:31,589
as many technologies as possible to

00:45:29,369 --> 00:45:34,069
simulate the typical enterprise because

00:45:31,589 --> 00:45:36,239
nobody can seem to just do one thing

00:45:34,069 --> 00:45:37,769
anybody else have that we're like the

00:45:36,239 --> 00:45:39,779
question is what database you use you're

00:45:37,769 --> 00:45:42,660
like what database don't we use you know

00:45:39,779 --> 00:45:44,309
it's so ridiculous yeah I've seen no

00:45:42,660 --> 00:45:48,479
joke and some of you probably have I've

00:45:44,309 --> 00:45:50,969
still seen access driving websites you

00:45:48,479 --> 00:45:53,999
haven't seen this by chance scary scary

00:45:50,969 --> 00:45:56,640
scary stuff out there now what you can

00:45:53,999 --> 00:45:58,109
do though from here is now that I have

00:45:56,640 --> 00:45:59,670
that docker file which you know it takes

00:45:58,109 --> 00:46:03,259
a little bit of practice to get right I

00:45:59,670 --> 00:46:05,999
will admit if I do doctor images again

00:46:03,259 --> 00:46:07,859
I've already done the docker build

00:46:05,999 --> 00:46:09,900
process now I could run through it

00:46:07,859 --> 00:46:11,219
probably here pretty quick but we're

00:46:09,900 --> 00:46:13,890
getting we got about ten minutes at the

00:46:11,219 --> 00:46:15,539
most here so but I could run through

00:46:13,890 --> 00:46:18,690
that and dude I could do this I could

00:46:15,539 --> 00:46:19,470
say docker compose see if that's big

00:46:18,690 --> 00:46:25,500
enough for the back

00:46:19,470 --> 00:46:27,510
bro and I could say built now because

00:46:25,500 --> 00:46:29,130
I've already built these unless an image

00:46:27,510 --> 00:46:31,109
up on docker hub has changed and which

00:46:29,130 --> 00:46:33,630
is why I'm not going to do it because it

00:46:31,109 --> 00:46:36,210
could be that literally ten minutes ago

00:46:33,630 --> 00:46:37,950
engine X updated and would have to pull

00:46:36,210 --> 00:46:39,599
the new layers down because I'm using

00:46:37,950 --> 00:46:41,970
the latest version which by the way is

00:46:39,599 --> 00:46:44,880
dangerous you normally want to use a

00:46:41,970 --> 00:46:46,530
specific version of an image because

00:46:44,880 --> 00:46:48,359
it's kind of like saying you know I

00:46:46,530 --> 00:46:50,369
totally trust who the wrote this

00:46:48,359 --> 00:46:51,390
JavaScript library and I'm just always

00:46:50,369 --> 00:46:54,750
going to use the latest they'll never

00:46:51,390 --> 00:46:57,270
break anything never I had a problem

00:46:54,750 --> 00:47:00,030
with anybody hit the core j/s issue a

00:46:57,270 --> 00:47:03,990
couple weeks ago by chance well I had

00:47:00,030 --> 00:47:05,940
the what is it the Hat and there was a

00:47:03,990 --> 00:47:08,880
breaking change in the metadata for a

00:47:05,940 --> 00:47:11,730
core Jas for the typing and it took down

00:47:08,880 --> 00:47:14,910
every single app I had and I went why

00:47:11,730 --> 00:47:17,340
did I do that and luckily it didn't make

00:47:14,910 --> 00:47:19,290
it to production but in Devitt took them

00:47:17,340 --> 00:47:20,490
everything down so now watch this now

00:47:19,290 --> 00:47:21,869
this is the moment of truth I'm going to

00:47:20,490 --> 00:47:23,130
hope the network's cooperating here

00:47:21,869 --> 00:47:24,839
because it will have to hit the network

00:47:23,130 --> 00:47:27,570
I'm going to say doctor compose up now

00:47:24,839 --> 00:47:32,339
for your UI person and your task is to

00:47:27,570 --> 00:47:34,680
make it look real as in good how do you

00:47:32,339 --> 00:47:36,300
do that you don't because you're like I

00:47:34,680 --> 00:47:37,830
don't know node I don't know Postgres I

00:47:36,300 --> 00:47:39,359
can't get all that set up so you'd have

00:47:37,830 --> 00:47:40,440
to spend a couple days working with

00:47:39,359 --> 00:47:42,900
something to get that set up probably

00:47:40,440 --> 00:47:45,599
you know be like me going hey Dan use a

00:47:42,900 --> 00:47:47,670
Photoshop for me or one of the other

00:47:45,599 --> 00:47:51,000
tools I'd be like yeah I don't do that

00:47:47,670 --> 00:47:53,760
not too much anyway so if I do doctor

00:47:51,000 --> 00:47:55,230
composed up so take a moment to fire up

00:47:53,760 --> 00:47:56,640
but notice it's creating all these

00:47:55,230 --> 00:47:58,500
containers and now it's giving me some

00:47:56,640 --> 00:48:01,349
logging now I didn't do the you can do a

00:47:58,500 --> 00:48:03,839
dash D for Damon I didn't do that so

00:48:01,349 --> 00:48:05,609
it's going to tie up my console here but

00:48:03,839 --> 00:48:09,420
this is actually going to pull right I

00:48:05,609 --> 00:48:11,820
didn't bake in the asp.net core packages

00:48:09,420 --> 00:48:12,900
kind of like NPM packages so it's going

00:48:11,820 --> 00:48:14,580
to have to pull these in now it's

00:48:12,900 --> 00:48:17,220
feeding the database with some fake data

00:48:14,580 --> 00:48:22,170
very important for an app for production

00:48:17,220 --> 00:48:25,470
and then let's try it so now I have

00:48:22,170 --> 00:48:27,480
nginx with angular it's hitting node

00:48:25,470 --> 00:48:30,330
which hits it's hitting Postgres

00:48:27,480 --> 00:48:32,970
which hits or sorry hitting SP net core

00:48:30,330 --> 00:48:34,349
which hits Postgres and then in

00:48:32,970 --> 00:48:36,119
the real-life half I would throw in

00:48:34,349 --> 00:48:39,510
Redis I have some reddish caches so

00:48:36,119 --> 00:48:41,250
let's see what happens here so it's good

00:48:39,510 --> 00:48:45,150
as just localhost remember it was just

00:48:41,250 --> 00:48:45,750
80 was the port alright awesome looks

00:48:45,150 --> 00:48:49,170
like it worked

00:48:45,750 --> 00:48:51,359
now I literally just got angular in

00:48:49,170 --> 00:48:53,700
engine X hitting these microservices

00:48:51,359 --> 00:48:56,430
hitting a real database now to be real

00:48:53,700 --> 00:48:58,710
honest this is all coming the names here

00:48:56,430 --> 00:49:01,380
are all coming from the node micro

00:48:58,710 --> 00:49:04,290
service and but I wanted to throw

00:49:01,380 --> 00:49:06,390
another one in which is asp.net core so

00:49:04,290 --> 00:49:10,109
it's very sophisticated that's where the

00:49:06,390 --> 00:49:12,750
states are coming from awesome I had to

00:49:10,109 --> 00:49:15,109
break it out somehow you know so anyway

00:49:12,750 --> 00:49:18,000
this has full crud operation support

00:49:15,109 --> 00:49:20,280
it's very easy literally you guys could

00:49:18,000 --> 00:49:21,750
probably get this up and running exactly

00:49:20,280 --> 00:49:22,920
like this in fact I'll give you that

00:49:21,750 --> 00:49:24,569
there's a link this is up on github

00:49:22,920 --> 00:49:26,310
right now I just put it up last night at

00:49:24,569 --> 00:49:30,300
probably three thirty years maybe three

00:49:26,310 --> 00:49:32,099
pan and this will actually does cores

00:49:30,300 --> 00:49:34,109
and all that fun stuff because I had to

00:49:32,099 --> 00:49:37,220
for microservices does the updates you

00:49:34,109 --> 00:49:39,480
know have some basic filtering paging

00:49:37,220 --> 00:49:40,859
stuff like that I won't say it's perfect

00:49:39,480 --> 00:49:43,740
because some of this was written very

00:49:40,859 --> 00:49:45,690
late last night but this is a full-on

00:49:43,740 --> 00:49:47,640
angular app in nginx hitting real

00:49:45,690 --> 00:49:50,760
databases real servers real you know

00:49:47,640 --> 00:49:53,130
micro services with docker and now that

00:49:50,760 --> 00:49:55,500
I have these images if I were to deploy

00:49:53,130 --> 00:49:57,410
these images up to a private repo or

00:49:55,500 --> 00:50:00,660
just make them public and docker hub

00:49:57,410 --> 00:50:02,730
then you actually well you can run this

00:50:00,660 --> 00:50:06,180
too by doing the docker compose build I

00:50:02,730 --> 00:50:08,190
could deploy this to AWS and Azure in

00:50:06,180 --> 00:50:09,470
probably if he gave me maybe 10 50

00:50:08,190 --> 00:50:12,210
minutes now I'm not going to prove that

00:50:09,470 --> 00:50:14,640
but I'm pretty confident that it could I

00:50:12,210 --> 00:50:15,750
would use in my case i d--'s dr cloud

00:50:14,640 --> 00:50:18,300
because that's what i'm comfortable with

00:50:15,750 --> 00:50:20,010
but there's like even other options dr.

00:50:18,300 --> 00:50:22,109
cloud will let you push these images and

00:50:20,010 --> 00:50:24,619
get the containers running in AWS and

00:50:22,109 --> 00:50:27,450
many other things like Azure and stuff

00:50:24,619 --> 00:50:29,790
all right so I think that's cool because

00:50:27,450 --> 00:50:33,569
now if we go back to the command line

00:50:29,790 --> 00:50:35,040
I have databases web servers proxy

00:50:33,569 --> 00:50:37,280
servers all kinds of fun stuff running

00:50:35,040 --> 00:50:40,619
and then when I'm done I just do this

00:50:37,280 --> 00:50:43,710
and let me clear this docker compose

00:50:40,619 --> 00:50:45,809
down so you have up and down

00:50:43,710 --> 00:50:49,250
now what that's going to do is stop all

00:50:45,809 --> 00:50:52,680
the containers basically kill my app and

00:50:49,250 --> 00:50:54,480
it's also going to remove all of my

00:50:52,680 --> 00:50:56,130
containers now you could also do some

00:50:54,480 --> 00:50:59,690
other options but give it a sec okay

00:50:56,130 --> 00:51:03,720
let's do docker PS - eh nothing

00:50:59,690 --> 00:51:05,400
dr. images there's my images okay and

00:51:03,720 --> 00:51:07,650
now I can start it back up so if you're

00:51:05,400 --> 00:51:09,359
someone who does not deal with this side

00:51:07,650 --> 00:51:11,460
you your pure JavaScript you don't do

00:51:09,359 --> 00:51:12,839
the server-side at all literally all you

00:51:11,460 --> 00:51:15,809
have to do is doctrine compose built

00:51:12,839 --> 00:51:17,819
docker compose up and boom you can now

00:51:15,809 --> 00:51:20,579
at the live source code on your machine

00:51:17,819 --> 00:51:23,130
and see it in a real-world context of

00:51:20,579 --> 00:51:24,080
exactly how it's going to be in staging

00:51:23,130 --> 00:51:25,250
or production

00:51:24,080 --> 00:51:27,900
[Applause]

00:51:25,250 --> 00:51:30,599
alright so to wrap up here let me show

00:51:27,900 --> 00:51:35,910
you have quite a few links and things

00:51:30,599 --> 00:51:37,530
for you so alright actually this is the

00:51:35,910 --> 00:51:39,059
one you need so if you came in late and

00:51:37,530 --> 00:51:41,130
didn't get it if you get this link right

00:51:39,059 --> 00:51:43,829
here it's going to have a ton of github

00:51:41,130 --> 00:51:45,329
repos that I have for you I'm going to

00:51:43,829 --> 00:51:48,119
show you the first one in just a moment

00:51:45,329 --> 00:51:51,599
that I just ran and that will have

00:51:48,119 --> 00:51:52,859
everything in there so let me go ahead

00:51:51,599 --> 00:51:54,000
and leave that up and then I have one

00:51:52,859 --> 00:51:56,450
more thing I want to wrap up with and

00:51:54,000 --> 00:51:58,470
we'll time for lunch I'm hungry

00:51:56,450 --> 00:52:00,809
alright I'll go back to that if you need

00:51:58,470 --> 00:52:02,970
it so the project I just ran is angular

00:52:00,809 --> 00:52:04,740
doc-doctor microservices is this first

00:52:02,970 --> 00:52:06,839
one and then I have a bunch of others

00:52:04,740 --> 00:52:09,480
though that also use docker with angular

00:52:06,839 --> 00:52:10,410
so if you're interested you can do that

00:52:09,480 --> 00:52:12,660
and these are going to be a little more

00:52:10,410 --> 00:52:14,760
real-life not just the ng serve you know

00:52:12,660 --> 00:52:16,410
kind of demos Jandra said I also have

00:52:14,760 --> 00:52:18,420
some courses up on Pluralsight brand new

00:52:16,410 --> 00:52:19,799
one just came out angular a note it also

00:52:18,420 --> 00:52:21,569
has some doctor but let me go back to

00:52:19,799 --> 00:52:24,020
here and with that thank you very much

00:52:21,569 --> 00:52:27,179
appreciate

00:52:24,020 --> 00:52:27,179

YouTube URL: https://www.youtube.com/watch?v=socWfhPJptE


