Title: Reducing package size and complexity with NgModule - JAMES DANIELS
Publication date: 2017-04-07
Playlist: ng-conf 2017
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,000 --> 00:00:13,139
a good time yeah yeah you guys learning

00:00:09,690 --> 00:00:15,059
some cool stuff anyone eager to take

00:00:13,139 --> 00:00:17,100
anything that they learned the past

00:00:15,059 --> 00:00:20,510
couple days and you know come Monday

00:00:17,100 --> 00:00:23,010
integrate it into an application yeah

00:00:20,510 --> 00:00:26,910
all right who hears Hudak heard of

00:00:23,010 --> 00:00:29,699
google google google anyone all right

00:00:26,910 --> 00:00:32,160
who here has heard of firebase do we

00:00:29,699 --> 00:00:36,350
have any firebase users in the crowd all

00:00:32,160 --> 00:00:38,550
right couple any angularfire users

00:00:36,350 --> 00:00:40,170
awesome well that's what I'm here to

00:00:38,550 --> 00:00:46,070
talk to you about we're going to be

00:00:40,170 --> 00:00:49,920
changing a couple things on you so

00:00:46,070 --> 00:00:59,309
angularfire to is the official library

00:00:49,920 --> 00:01:03,239
to add firebase into angular we get that

00:00:59,309 --> 00:01:05,040
a lot so that's one of the things that

00:01:03,239 --> 00:01:13,049
we're looking to I'll touch more on that

00:01:05,040 --> 00:01:16,439
later there we go so the first thing

00:01:13,049 --> 00:01:19,740
that you may notice is I am NOT David

00:01:16,439 --> 00:01:22,650
East I think the beard gives it away so

00:01:19,740 --> 00:01:25,500
David is actually now front-end

00:01:22,650 --> 00:01:27,750
engineering so he gets to go to less

00:01:25,500 --> 00:01:30,570
conferences you know travel a little bit

00:01:27,750 --> 00:01:38,189
less his United counts you know he might

00:01:30,570 --> 00:01:41,369
lose status so I have a confession I'm

00:01:38,189 --> 00:01:45,509
not David East and i'm also an angular

00:01:41,369 --> 00:01:48,840
noob so i only made my first angular app

00:01:45,509 --> 00:01:54,119
probably about two weeks ago to ramp up

00:01:48,840 --> 00:01:56,159
on angularfire so I am really excited

00:01:54,119 --> 00:01:59,899
about the angular world though there are

00:01:56,159 --> 00:01:59,899
some really exciting stuff coming up I

00:02:01,159 --> 00:02:08,369
have a lot of experience with magical

00:02:04,290 --> 00:02:10,500
SDKs and magical lands where you know

00:02:08,369 --> 00:02:12,330
things are hidden from you one of the

00:02:10,500 --> 00:02:13,180
things I like to see in the new angular

00:02:12,330 --> 00:02:16,959
is

00:02:13,180 --> 00:02:19,719
you know it's less magical especially

00:02:16,959 --> 00:02:21,310
with angular for the footprint size of

00:02:19,719 --> 00:02:25,329
getting much smaller with tree shaking

00:02:21,310 --> 00:02:27,790
and I have a lot of experience of magic

00:02:25,329 --> 00:02:29,680
if you've met me at any conferences in

00:02:27,790 --> 00:02:33,489
the past this is my first angular

00:02:29,680 --> 00:02:37,480
conference after all just came back from

00:02:33,489 --> 00:02:45,040
ember calm and if you knew me before

00:02:37,480 --> 00:02:48,120
that as a rails developer so angular is

00:02:45,040 --> 00:02:51,760
pretty refreshing to me I'm used to

00:02:48,120 --> 00:02:53,799
complexity being hidden way way way

00:02:51,760 --> 00:02:57,909
under the surface and it takes years and

00:02:53,799 --> 00:03:00,579
years and years to gain experience

00:02:57,909 --> 00:03:05,489
necessary to increase performance of

00:03:00,579 --> 00:03:10,120
your application takes a senior usually

00:03:05,489 --> 00:03:13,510
so before i get into angular fire i will

00:03:10,120 --> 00:03:17,470
touch on what fire basis for those of

00:03:13,510 --> 00:03:19,329
you that haven't heard about it and yeah

00:03:17,470 --> 00:03:24,940
we don't just make us sauce that's just

00:03:19,329 --> 00:03:28,810
our swag so firebase is Google's

00:03:24,940 --> 00:03:32,379
back-end as a service we have basically

00:03:28,810 --> 00:03:35,620
since google i/o of last taken over

00:03:32,379 --> 00:03:41,049
pretty much all of google's mobile SDKs

00:03:35,620 --> 00:03:45,879
and javascript st case it's a unified

00:03:41,049 --> 00:03:50,829
platform with monolithic SDKs for iOS

00:03:45,879 --> 00:03:51,849
Android and the mobile web and that's

00:03:50,829 --> 00:03:59,290
what I'm gonna be talking about here

00:03:51,849 --> 00:04:01,989
today so the keystone of firebase is its

00:03:59,290 --> 00:04:04,689
real-time database I say real-time

00:04:01,989 --> 00:04:07,479
database because well it's real time

00:04:04,689 --> 00:04:09,699
what does that mean so the real-time

00:04:07,479 --> 00:04:12,489
database whenever you write to the

00:04:09,699 --> 00:04:17,049
database which is just a JSON store it

00:04:12,489 --> 00:04:19,049
will stream any rights to all connected

00:04:17,049 --> 00:04:23,200
clients within a matter of milliseconds

00:04:19,049 --> 00:04:27,040
it changes how you write applications no

00:04:23,200 --> 00:04:28,750
more you know writing to a database

00:04:27,040 --> 00:04:31,210
and then having to query that database

00:04:28,750 --> 00:04:33,610
when you query it you're opening a

00:04:31,210 --> 00:04:35,800
persistent socket so the data will

00:04:33,610 --> 00:04:41,170
stream back to you sounds great for

00:04:35,800 --> 00:04:45,460
angular right so what does that look

00:04:41,170 --> 00:04:47,980
like so here I make a connection to the

00:04:45,460 --> 00:04:53,440
database under the su rest this is a

00:04:47,980 --> 00:04:59,380
plain old vanilla firebase JavaScript

00:04:53,440 --> 00:05:03,510
SDK so I'm then writing to that foo rest

00:04:59,380 --> 00:05:07,000
and then i'm reading the value out and

00:05:03,510 --> 00:05:10,390
this is the thing is a persistent socket

00:05:07,000 --> 00:05:12,390
so any time that value changes that

00:05:10,390 --> 00:05:18,520
callbacks going to get triggered and

00:05:12,390 --> 00:05:30,870
callbacks not very angular II so say we

00:05:18,520 --> 00:05:35,140
want to do a collection okay there we go

00:05:30,870 --> 00:05:38,080
so a collection very similar so we write

00:05:35,140 --> 00:05:43,240
the rest we then listen for child added

00:05:38,080 --> 00:05:49,270
child changed and removed that simple

00:05:43,240 --> 00:05:57,070
but again not very angular ish so enter

00:05:49,270 --> 00:05:59,200
angularfire too so we switch things up a

00:05:57,070 --> 00:06:01,810
little bit by giving you fire base

00:05:59,200 --> 00:06:05,050
object observables these rap are

00:06:01,810 --> 00:06:08,770
callbacks and promises so here we

00:06:05,050 --> 00:06:11,470
actually you know we pass angularfire to

00:06:08,770 --> 00:06:14,830
our constructor and similarly it's a

00:06:11,470 --> 00:06:17,350
little bit more of an angular API we

00:06:14,830 --> 00:06:19,660
then listen to that and it's an

00:06:17,350 --> 00:06:23,580
observable that will get triggered

00:06:19,660 --> 00:06:23,580
anytime there's an update to that

00:06:24,750 --> 00:06:30,820
similarly lists right so we're listening

00:06:28,000 --> 00:06:33,460
to all comments and then those will

00:06:30,820 --> 00:06:36,060
synchronize to that comment list

00:06:33,460 --> 00:06:36,060
observable

00:06:36,710 --> 00:06:42,540
so it's observables all the way down

00:06:39,360 --> 00:06:45,330
that lifts observable each of those

00:06:42,540 --> 00:06:47,340
items inside of that are unobservable so

00:06:45,330 --> 00:06:49,560
this is one of the things about fire

00:06:47,340 --> 00:06:53,100
bases whenever you're listening to

00:06:49,560 --> 00:06:55,890
something any data that changes under

00:06:53,100 --> 00:06:57,210
that ref will stream to you so it's a

00:06:55,890 --> 00:07:02,270
bit of a caveat when you're designing

00:06:57,210 --> 00:07:02,270
your schema but it gives you superpowers

00:07:03,080 --> 00:07:09,810
so that looks all fine and dandy what's

00:07:07,380 --> 00:07:11,250
the problem why am i up here why am I

00:07:09,810 --> 00:07:19,620
telling you that we're breaking things

00:07:11,250 --> 00:07:22,620
on you you know aside from the naming so

00:07:19,620 --> 00:07:27,150
yes we can see that so this is actually

00:07:22,620 --> 00:07:32,100
our source map looking at the source map

00:07:27,150 --> 00:07:35,670
Explorer and in this application I was

00:07:32,100 --> 00:07:40,110
only using authentication so a good

00:07:35,670 --> 00:07:46,190
chunk of our package is going to the

00:07:40,110 --> 00:07:49,710
pieces that we're not actually using so

00:07:46,190 --> 00:07:51,450
right now and when we started the

00:07:49,710 --> 00:07:53,630
project there was just the firebase

00:07:51,450 --> 00:07:59,960
real-time database there was just

00:07:53,630 --> 00:08:02,730
authentication now in the firebase

00:07:59,960 --> 00:08:08,460
JavaScript SDK there's also cloud

00:08:02,730 --> 00:08:09,890
storage and cloud messaging soon we're

00:08:08,460 --> 00:08:14,580
probably going to add another feature

00:08:09,890 --> 00:08:17,550
and then after that more features at

00:08:14,580 --> 00:08:21,870
this rate our package size is going to

00:08:17,550 --> 00:08:29,210
be doubling every six to eight months no

00:08:21,870 --> 00:08:29,210
good so ng modules the rescue

00:08:29,920 --> 00:08:35,020
so I was playing around a little bit so

00:08:32,380 --> 00:08:37,660
i made a proof of concept it broke a lot

00:08:35,020 --> 00:08:42,120
of things so we need to you know make a

00:08:37,660 --> 00:08:45,790
new version of thing so you can upgrade

00:08:42,120 --> 00:08:48,340
but with just that experiment I is able

00:08:45,790 --> 00:08:50,770
to reduce package size by thirty percent

00:08:48,340 --> 00:08:52,090
and I'm just talking about the firebase

00:08:50,770 --> 00:08:55,020
part of it which ended up being

00:08:52,090 --> 00:09:01,780
forty-eight percent of my vendor JS

00:08:55,020 --> 00:09:05,950
JavaScript so we can do this because the

00:09:01,780 --> 00:09:09,790
firebase JavaScript SDK is already

00:09:05,950 --> 00:09:15,310
modular so when we compile it'll tree

00:09:09,790 --> 00:09:17,740
shake and those pieces will fall out so

00:09:15,310 --> 00:09:19,990
our proposal is to actually break things

00:09:17,740 --> 00:09:22,300
in here right now it's just angularfire

00:09:19,990 --> 00:09:25,660
it's monolithic you get everything so

00:09:22,300 --> 00:09:29,050
breaking things up and then we can

00:09:25,660 --> 00:09:31,300
actually add wrappers for the new stuff

00:09:29,050 --> 00:09:37,090
that came in without increasing your

00:09:31,300 --> 00:09:40,420
package size if you're not using them so

00:09:37,090 --> 00:09:42,160
this is what our proposal looks like so

00:09:40,420 --> 00:09:44,800
you'll see that there are some red marks

00:09:42,160 --> 00:09:46,210
due to breakage but if you are familiar

00:09:44,800 --> 00:09:48,460
with the angularfire there's a couple

00:09:46,210 --> 00:09:50,770
things that have changed here aside from

00:09:48,460 --> 00:09:52,600
the scoping pulling in the different

00:09:50,770 --> 00:09:56,580
modules you notice that we're no longer

00:09:52,600 --> 00:10:00,130
passing authentication default config

00:09:56,580 --> 00:10:02,770
and a couple other little changes so

00:10:00,130 --> 00:10:04,510
nothing major it'll just you know cause

00:10:02,770 --> 00:10:07,030
a little bit of disruption but the

00:10:04,510 --> 00:10:09,070
benefit will be your package size will

00:10:07,030 --> 00:10:11,940
be reduced and we can increase

00:10:09,070 --> 00:10:11,940
functionality

00:10:13,980 --> 00:10:24,570
basically less is more right so aside

00:10:22,740 --> 00:10:26,700
from ng module we're taking a couple

00:10:24,570 --> 00:10:30,270
other steps to reduce the size and

00:10:26,700 --> 00:10:32,370
complexity after taking a peek in source

00:10:30,270 --> 00:10:35,220
map Explorer we found that thirty

00:10:32,370 --> 00:10:38,070
percent of our current SDK is just

00:10:35,220 --> 00:10:40,500
wrapping firebase off and part of the

00:10:38,070 --> 00:10:44,070
problem is that firebase off is changing

00:10:40,500 --> 00:10:46,620
so the JavaScript SDK changes and we

00:10:44,070 --> 00:10:48,990
have to update angularfire is causing a

00:10:46,620 --> 00:10:51,780
lot of complexity different browsers

00:10:48,990 --> 00:10:54,570
behave in different ways really we

00:10:51,780 --> 00:10:58,410
should be just focusing on the things

00:10:54,570 --> 00:11:00,840
that are unique about angular and making

00:10:58,410 --> 00:11:04,500
a bridge to our existing JavaScript SDK

00:11:00,840 --> 00:11:07,530
and let all however many engineers work

00:11:04,500 --> 00:11:13,410
on the JavaScript SDK you know work on

00:11:07,530 --> 00:11:15,270
that so what we're proposing is actually

00:11:13,410 --> 00:11:20,580
just taking authentication and giving

00:11:15,270 --> 00:11:22,830
you an observable there another thing a

00:11:20,580 --> 00:11:25,260
bunch of our complexity is the pre

00:11:22,830 --> 00:11:27,930
configuration of loggin this is where

00:11:25,260 --> 00:11:30,390
some of the churn comes in so in angular

00:11:27,930 --> 00:11:33,000
fire one of the things that you can do

00:11:30,390 --> 00:11:35,370
is you can pass to initialization your

00:11:33,000 --> 00:11:38,670
default sign-in method and then from

00:11:35,370 --> 00:11:40,830
there anytime you try to log in the user

00:11:38,670 --> 00:11:43,500
that default will be presented unless

00:11:40,830 --> 00:11:46,560
you override it like I said part of the

00:11:43,500 --> 00:11:49,590
problem is that's not strictly wrapping

00:11:46,560 --> 00:11:52,710
we actually have to stay up to eight a

00:11:49,590 --> 00:11:55,050
stay up to date but the firebase SDK add

00:11:52,710 --> 00:11:57,240
the pieces that they're doing when they

00:11:55,050 --> 00:12:00,330
add a new authentication provider we

00:11:57,240 --> 00:12:02,400
have to add that into ours and lots of

00:12:00,330 --> 00:12:05,490
problems anywhere where we have

00:12:02,400 --> 00:12:09,090
something that you know we're trying to

00:12:05,490 --> 00:12:15,600
add or trying to change the API that's

00:12:09,090 --> 00:12:18,900
another point of failure for us so if we

00:12:15,600 --> 00:12:22,080
reduce the package size if we reduce the

00:12:18,900 --> 00:12:25,260
complexity we can give you more angular

00:12:22,080 --> 00:12:27,020
specific behavior so we're proposing to

00:12:25,260 --> 00:12:29,930
give you router guards

00:12:27,020 --> 00:12:33,360
lazy loading and then universal support

00:12:29,930 --> 00:12:35,310
so and you know since we're using ng

00:12:33,360 --> 00:12:36,990
module since we're rewriting things

00:12:35,310 --> 00:12:40,350
about cleaning things up you'll get

00:12:36,990 --> 00:12:47,090
these virtually for free and less

00:12:40,350 --> 00:12:50,250
maintenance for us so on to naming

00:12:47,090 --> 00:12:53,850
that's that's that's the hard problem

00:12:50,250 --> 00:12:55,470
computer science right we've been

00:12:53,850 --> 00:13:01,010
discussing this a lot my favorite is

00:12:55,470 --> 00:13:03,600
angularfire to this is also angularfire

00:13:01,010 --> 00:13:06,530
angularfire we have to keep that around

00:13:03,600 --> 00:13:09,420
because it's very popular for angularjs

00:13:06,530 --> 00:13:11,640
and just our naming kind of prohibits us

00:13:09,420 --> 00:13:14,370
some of the other options we're throwing

00:13:11,640 --> 00:13:18,150
around as you know making version for a

00:13:14,370 --> 00:13:25,830
bang do a fire too and then no using

00:13:18,150 --> 00:13:28,250
package scopes under organizations so

00:13:25,830 --> 00:13:32,100
another benefit to you if you're a

00:13:28,250 --> 00:13:36,480
firebase user and angular fire is now

00:13:32,100 --> 00:13:40,410
you can dramatically reduce your client

00:13:36,480 --> 00:13:43,140
side complexity by writing your note jf

00:13:40,410 --> 00:13:45,090
code event-driven in the cloud so this

00:13:43,140 --> 00:13:48,000
is cloud functions for firebase it's a

00:13:45,090 --> 00:13:49,860
feature that just launched so really

00:13:48,000 --> 00:13:52,260
dramatically changes things in the

00:13:49,860 --> 00:13:54,180
firebase a world without the need for

00:13:52,260 --> 00:13:59,970
splitting up servers so there's a talk

00:13:54,180 --> 00:14:01,980
here later today about that so today I

00:13:59,970 --> 00:14:03,600
was hoping to show you a release

00:14:01,980 --> 00:14:07,200
candidate but we didn't quite get it

00:14:03,600 --> 00:14:11,270
ready in time so here's actually the

00:14:07,200 --> 00:14:14,400
link to the proposal we have a ticket

00:14:11,270 --> 00:14:17,160
854 and you can check that out you can

00:14:14,400 --> 00:14:19,220
chime in if anyone's using angular fire

00:14:17,160 --> 00:14:23,490
we'd really love you to jump in there

00:14:19,220 --> 00:14:26,000
give us some feedback and that's what I

00:14:23,490 --> 00:14:26,000
have for you today

00:14:27,840 --> 00:14:29,900
you

00:14:36,490 --> 00:14:38,550

YouTube URL: https://www.youtube.com/watch?v=Q6tfr23fS98


