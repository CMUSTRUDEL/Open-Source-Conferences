Title: Powering Content Driven Applications with the Worldâ€™s Most Popular CMS - ROY SIVAN
Publication date: 2017-04-06
Playlist: ng-conf 2017
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,469 --> 00:00:04,620
all right so today we're gonna be top

00:00:02,820 --> 00:00:06,440
well I'm gonna be talking not so much

00:00:04,620 --> 00:00:08,250
you guys so I don't we talked about

00:00:06,440 --> 00:00:12,860
powering content driven applications

00:00:08,250 --> 00:00:15,150
with WordPress first talk about Who am I

00:00:12,860 --> 00:00:18,150
I'm a senior software developer at the

00:00:15,150 --> 00:00:19,470
Walt Disney Company I have a couple

00:00:18,150 --> 00:00:21,720
quarter I have a course on lynda.com

00:00:19,470 --> 00:00:25,140
about to hopefully be a couple more I

00:00:21,720 --> 00:00:26,849
also teach out caldera learned comm I've

00:00:25,140 --> 00:00:28,740
been on a couple podcast of the

00:00:26,849 --> 00:00:33,120
adventures in angular as well as

00:00:28,740 --> 00:00:35,460
JavaScript jabber I do blog myself and

00:00:33,120 --> 00:00:37,590
podcast a little bit on the WP crowd you

00:00:35,460 --> 00:00:40,379
can catch my shirt as well as my own

00:00:37,590 --> 00:00:43,710
website so I'm everywhere if you need to

00:00:40,379 --> 00:00:46,379
find me royboy seven eight nine so what

00:00:43,710 --> 00:00:49,620
are we gonna cover today WordPress

00:00:46,379 --> 00:00:50,670
seriously so I'm gonna talk about why

00:00:49,620 --> 00:00:54,270
you guys should be building with

00:00:50,670 --> 00:00:56,730
WordPress cats and how to build with

00:00:54,270 --> 00:00:59,250
WordPress so the cats part actually

00:00:56,730 --> 00:01:01,410
originates from a talk I gave in

00:00:59,250 --> 00:01:03,090
Montreal a couple years back I convinced

00:01:01,410 --> 00:01:05,489
a bunch of speakers to put cats in their

00:01:03,090 --> 00:01:06,869
slides and we had a contest going who

00:01:05,489 --> 00:01:09,000
could put the most cats in their slides

00:01:06,869 --> 00:01:11,760
without being detrimental to their

00:01:09,000 --> 00:01:14,250
presentation and I put like 50 bucks and

00:01:11,760 --> 00:01:15,780
Amazon giftcards on the line and it's

00:01:14,250 --> 00:01:18,689
been going on ever since it's just been

00:01:15,780 --> 00:01:20,310
a thing I do so I will ask if you guys

00:01:18,689 --> 00:01:22,020
can count how many cats are in my slides

00:01:20,310 --> 00:01:24,509
and just tweet it royboy seven eight

00:01:22,020 --> 00:01:29,240
nine how many cats you seen in my

00:01:24,509 --> 00:01:35,310
presentation yep

00:01:29,240 --> 00:01:37,380
all right let's talk about WordPress you

00:01:35,310 --> 00:01:40,650
know it's the most popular CMS out there

00:01:37,380 --> 00:01:42,720
right now it's basically used on a huge

00:01:40,650 --> 00:01:44,939
part of the Internet and I'm curious

00:01:42,720 --> 00:01:46,860
does anyone here actually use WordPress

00:01:44,939 --> 00:01:51,810
in some capacity right now

00:01:46,860 --> 00:01:54,030
professionally awesome cool grumpy cat

00:01:51,810 --> 00:01:55,740
used to say I use Drupal once but then I

00:01:54,030 --> 00:02:00,780
met some Drupal people here so I had to

00:01:55,740 --> 00:02:03,320
change that slide so why do you want to

00:02:00,780 --> 00:02:07,619
build with WordPress

00:02:03,320 --> 00:02:10,170
according to w3 texts it's used by 27%

00:02:07,619 --> 00:02:11,819
of the Internet plus right now so it's

00:02:10,170 --> 00:02:12,930
pretty much everywhere and it's still

00:02:11,819 --> 00:02:15,060
growing

00:02:12,930 --> 00:02:17,099
and to be honest it's not just the

00:02:15,060 --> 00:02:19,230
bottom 5% of websites anymore it's not

00:02:17,099 --> 00:02:22,700
like your mom and pops grandma's blog

00:02:19,230 --> 00:02:25,409
site you know it's really coming up as a

00:02:22,700 --> 00:02:28,799
CMS that people are using for enterprise

00:02:25,409 --> 00:02:30,810
for platforms for applications people

00:02:28,799 --> 00:02:33,629
like TechCrunch Facebook and

00:02:30,810 --> 00:02:35,849
mercedes-benz use WordPress to power

00:02:33,629 --> 00:02:40,200
their websites there are even websites

00:02:35,849 --> 00:02:42,989
built in a galaxy far far away that used

00:02:40,200 --> 00:02:45,870
WordPress I know what you guys are

00:02:42,989 --> 00:02:50,010
thinking right Star Wars it's pretty

00:02:45,870 --> 00:02:52,079
cool all right so first I want to talk

00:02:50,010 --> 00:02:54,060
about some concerns that I face in the

00:02:52,079 --> 00:02:56,220
enterprise realm or I hear from

00:02:54,060 --> 00:03:01,739
enterprise developers why not to use

00:02:56,220 --> 00:03:04,470
WordPress there's no LTS it's an open

00:03:01,739 --> 00:03:07,260
source platform and question how many

00:03:04,470 --> 00:03:08,549
updates are there per year I was going

00:03:07,260 --> 00:03:09,900
to talk about all of these but then I

00:03:08,549 --> 00:03:12,209
realized you guys are angular people

00:03:09,900 --> 00:03:14,639
don't these kind of look familiar to

00:03:12,209 --> 00:03:17,099
some of you there's a correlation there

00:03:14,639 --> 00:03:18,299
I know angular the LTS was announced

00:03:17,099 --> 00:03:20,459
yesterday during the keynote which is

00:03:18,299 --> 00:03:23,389
awesome so that's definitely a plus for

00:03:20,459 --> 00:03:28,530
me and helping my cause pushing angular

00:03:23,389 --> 00:03:30,510
but ultimately haters gonna hate so just

00:03:28,530 --> 00:03:32,970
realize that today in today's world of

00:03:30,510 --> 00:03:34,669
tech there's basically a solution for

00:03:32,970 --> 00:03:38,040
every single obstacle that's out there

00:03:34,669 --> 00:03:41,099
whether it's the open source part or

00:03:38,040 --> 00:03:42,629
anything else so let's talk about some

00:03:41,099 --> 00:03:46,229
of the benefits of using WordPress

00:03:42,629 --> 00:03:48,959
I know building a CMS is like a rite of

00:03:46,229 --> 00:03:50,639
passage for all of us developers like

00:03:48,959 --> 00:03:52,799
you are not a true developer if you've

00:03:50,639 --> 00:03:54,359
not built to CMS in your life like

00:03:52,799 --> 00:03:56,729
that's just like one of those stepping

00:03:54,359 --> 00:03:59,220
stones but do you really want to build a

00:03:56,729 --> 00:04:00,569
CMS why not use the CMS that's already

00:03:59,220 --> 00:04:04,739
out there that so many people already

00:04:00,569 --> 00:04:11,190
use there's plenty of code tutorials and

00:04:04,739 --> 00:04:12,959
it's super extendable and you can be a

00:04:11,190 --> 00:04:15,239
lazy developer in the process right you

00:04:12,959 --> 00:04:18,870
don't have to build your own CMS and by

00:04:15,239 --> 00:04:20,430
lazy I mean efficient use the CMS that's

00:04:18,870 --> 00:04:23,039
already out there use the CMS that's

00:04:20,430 --> 00:04:26,370
proven and keep on doing what you

00:04:23,039 --> 00:04:28,020
actually want to be doing I know

00:04:26,370 --> 00:04:30,150
I've just convinced all of you who don't

00:04:28,020 --> 00:04:34,320
use WordPress to use WordPress but if

00:04:30,150 --> 00:04:38,280
not internet.org is a wordpress website

00:04:34,320 --> 00:04:46,919
and if the internet can use WordPress

00:04:38,280 --> 00:04:48,240
so can you let's talk about how so now

00:04:46,919 --> 00:04:50,639
that I've convinced you to use WordPress

00:04:48,240 --> 00:04:53,250
you're wondering okay how do I use it to

00:04:50,639 --> 00:04:54,120
actually build out my cool angular

00:04:53,250 --> 00:04:57,770
applications

00:04:54,120 --> 00:05:01,680
well WordPress now has this cool thing a

00:04:57,770 --> 00:05:04,169
REST API it's been in core for a little

00:05:01,680 --> 00:05:07,530
bit but as a 4.7 which is a couple

00:05:04,169 --> 00:05:09,300
cycles old already it's now completely

00:05:07,530 --> 00:05:11,750
built into core so out of the box of

00:05:09,300 --> 00:05:14,280
WordPress you get a restful api to

00:05:11,750 --> 00:05:18,770
interact with the wordpress content that

00:05:14,280 --> 00:05:25,710
you have and the data is pretty sweet

00:05:18,770 --> 00:05:27,660
check out that sweet sweet json so this

00:05:25,710 --> 00:05:30,960
is an example of something that the api

00:05:27,660 --> 00:05:32,849
would send back to your application when

00:05:30,960 --> 00:05:36,360
you do a get request this is one

00:05:32,849 --> 00:05:39,930
particular blog post it gives you the ID

00:05:36,360 --> 00:05:42,360
the title the URL and everything else

00:05:39,930 --> 00:05:44,789
you need it's pretty cool out of the box

00:05:42,360 --> 00:05:47,280
if you do have posts or you have pages

00:05:44,789 --> 00:05:48,930
there's URLs for it so let's talk about

00:05:47,280 --> 00:05:52,289
what you get out of the box just by

00:05:48,930 --> 00:05:55,650
installing WordPress don't feed JSON or

00:05:52,289 --> 00:05:59,539
essentially domain.com slash WP - json

00:05:55,650 --> 00:06:03,510
is the prefix for all routes for the api

00:05:59,539 --> 00:06:05,099
when you do WP /v - that's the namespace

00:06:03,510 --> 00:06:07,260
for all the default routes that come out

00:06:05,099 --> 00:06:09,720
of the box here's some of those examples

00:06:07,260 --> 00:06:11,910
you get slash posts you get sloshed

00:06:09,720 --> 00:06:13,530
pages you get slash comments etc etc

00:06:11,910 --> 00:06:15,240
there's a couple more that I didn't list

00:06:13,530 --> 00:06:17,310
off but you get the point there's a

00:06:15,240 --> 00:06:19,110
bunch of stuff that is out there that

00:06:17,310 --> 00:06:21,599
kind of just again comes built into the

00:06:19,110 --> 00:06:26,699
ball out of the box and if you just go

00:06:21,599 --> 00:06:28,620
to WP or W - JSON slash WP v - you'll

00:06:26,699 --> 00:06:30,419
actually see a whole list of all the

00:06:28,620 --> 00:06:32,280
routes that you have available to you

00:06:30,419 --> 00:06:32,760
the great thing about the WordPress REST

00:06:32,280 --> 00:06:35,640
API

00:06:32,760 --> 00:06:39,330
it makes route discovery super simple so

00:06:35,640 --> 00:06:40,080
you can take a lot of the stuff that you

00:06:39,330 --> 00:06:42,389
have hard

00:06:40,080 --> 00:06:46,020
maybe like assuming assumptions in your

00:06:42,389 --> 00:06:48,060
code and let the API tell you what API

00:06:46,020 --> 00:06:49,770
routes are available to you and what

00:06:48,060 --> 00:06:52,349
data you need to pass into those those

00:06:49,770 --> 00:06:54,599
are all available out of the box and

00:06:52,349 --> 00:06:58,530
then it's pretty cool you can do a lot

00:06:54,599 --> 00:07:01,349
of cool stuff with it so what if you

00:06:58,530 --> 00:07:03,240
wanted to spice it up a little bit the

00:07:01,349 --> 00:07:05,759
cool thing about the API it's highly

00:07:03,240 --> 00:07:07,560
extendable basically you can do a lot of

00:07:05,759 --> 00:07:09,300
customized stuff to it I'm not going to

00:07:07,560 --> 00:07:11,970
go too much into the customization code

00:07:09,300 --> 00:07:14,430
but if for whatever reason you have blog

00:07:11,970 --> 00:07:17,219
posts or a page and you wanted to add

00:07:14,430 --> 00:07:18,240
extra data to it it's pretty simple so

00:07:17,219 --> 00:07:23,000
I'm going to show you an example of that

00:07:18,240 --> 00:07:26,370
I really wanted to add tacos to my

00:07:23,000 --> 00:07:27,990
response I was like man you know what I

00:07:26,370 --> 00:07:31,289
need them on my blog post I need tacos

00:07:27,990 --> 00:07:33,750
so I decided to actually just hook into

00:07:31,289 --> 00:07:38,729
the default route that spits out the

00:07:33,750 --> 00:07:41,330
post data and I added in tacos so look I

00:07:38,729 --> 00:07:43,349
got a happy taco every time I get a post

00:07:41,330 --> 00:07:44,669
incidentally when I was doing these

00:07:43,349 --> 00:07:46,830
slides they said hey you should have a

00:07:44,669 --> 00:07:48,029
black background with essentially an

00:07:46,830 --> 00:07:50,639
inverted from what I'm usually looking

00:07:48,029 --> 00:07:52,949
at do you know what tacos look like when

00:07:50,639 --> 00:07:57,949
they're inverted they're really freaking

00:07:52,949 --> 00:08:00,930
creepy just thought I'd point that out

00:07:57,949 --> 00:08:02,639
all right so the real power of the

00:08:00,930 --> 00:08:04,259
WordPress REST API really comes into

00:08:02,639 --> 00:08:08,940
play when you want to build out your own

00:08:04,259 --> 00:08:11,909
API custom routes so we know I've shown

00:08:08,940 --> 00:08:13,529
you kind of high-level what comes out of

00:08:11,909 --> 00:08:14,819
the box but what if you want to do

00:08:13,529 --> 00:08:17,009
something completely different and

00:08:14,819 --> 00:08:19,050
completely unique well that's where this

00:08:17,009 --> 00:08:21,449
comes in handy you actually define

00:08:19,050 --> 00:08:24,479
yourself a new namespace you define a

00:08:21,449 --> 00:08:26,819
route and a callback and then you return

00:08:24,479 --> 00:08:29,940
essentially an object a WP rest response

00:08:26,819 --> 00:08:32,399
object and that's all you need all of a

00:08:29,940 --> 00:08:36,300
sudden you have your own API to work

00:08:32,399 --> 00:08:38,909
with so for example out of the box on

00:08:36,300 --> 00:08:45,480
the right you see the default namespaces

00:08:38,909 --> 00:08:46,860
I told you before WP / v2 and o embed is

00:08:45,480 --> 00:08:50,570
another namespace that comes out of the

00:08:46,860 --> 00:08:52,829
box on the my left your right

00:08:50,570 --> 00:08:54,060
these are namespaces out of a WordPress

00:08:52,829 --> 00:08:56,640
website that

00:08:54,060 --> 00:08:59,070
have running and essentially what

00:08:56,640 --> 00:09:01,560
happens is people are who build plugins

00:08:59,070 --> 00:09:04,020
can now add in their own namespaces and

00:09:01,560 --> 00:09:07,050
now plugins can give you API data right

00:09:04,020 --> 00:09:08,880
so Yoast is a very popular SEO plugin

00:09:07,050 --> 00:09:13,230
for the WordPress realm they have their

00:09:08,880 --> 00:09:15,740
own API now EDD is a ecommerce for a

00:09:13,230 --> 00:09:20,400
digital content it has its own API

00:09:15,740 --> 00:09:22,230
caldera as forms etc etc but if you're

00:09:20,400 --> 00:09:23,910
building out a custom application

00:09:22,230 --> 00:09:26,070
you kind of want your own API and you

00:09:23,910 --> 00:09:27,810
want to do it versioned the great thing

00:09:26,070 --> 00:09:30,690
about the version of the namespace is

00:09:27,810 --> 00:09:32,520
that should you need to add in or

00:09:30,690 --> 00:09:35,550
upgrade your application in the future

00:09:32,520 --> 00:09:37,310
and you have maybe multiple multiple

00:09:35,550 --> 00:09:39,779
applications running off the same data

00:09:37,310 --> 00:09:41,910
you can say okay well this data is going

00:09:39,779 --> 00:09:45,270
to run off v1 this one's going to run on

00:09:41,910 --> 00:09:47,730
v2 etc etc so it's really helpful to

00:09:45,270 --> 00:09:50,130
have your version in the namespace and

00:09:47,730 --> 00:09:52,260
then your whole API is now kind of

00:09:50,130 --> 00:09:54,270
underneath that namespace and it's

00:09:52,260 --> 00:09:56,339
completely decoupled from the default

00:09:54,270 --> 00:09:57,870
API which at that point you can almost

00:09:56,339 --> 00:10:02,670
just turn off if you don't need it if

00:09:57,870 --> 00:10:06,350
you only want custom data so let's do

00:10:02,670 --> 00:10:09,810
some examples here's the custom route

00:10:06,350 --> 00:10:11,240
it's not the prettiest code I prefer to

00:10:09,810 --> 00:10:15,990
put this in the classes and stuff but

00:10:11,240 --> 00:10:19,140
this is PHP basically you just tie into

00:10:15,990 --> 00:10:22,110
an it function and say I want to define

00:10:19,140 --> 00:10:27,540
a new route my route is gonna be FP

00:10:22,110 --> 00:10:27,839
custom v1 namespace right so can't see

00:10:27,540 --> 00:10:31,589
it

00:10:27,839 --> 00:10:35,040
alright FP - custom v1 namespace VRE

00:10:31,589 --> 00:10:37,650
purchased is the actual route and then I

00:10:35,040 --> 00:10:40,800
have methods so I only want this one

00:10:37,650 --> 00:10:42,660
route to take on post requests the

00:10:40,800 --> 00:10:45,320
callback is there so it's actually

00:10:42,660 --> 00:10:48,180
another method within the same class and

00:10:45,320 --> 00:10:50,580
then arguments that I need a pass to

00:10:48,180 --> 00:10:55,310
this is going are going to be product ID

00:10:50,580 --> 00:10:58,410
so this is for a product API endpoint

00:10:55,310 --> 00:11:01,410
and I said the Product ID because I need

00:10:58,410 --> 00:11:02,910
I need it in my callback function I'm

00:11:01,410 --> 00:11:05,339
gonna say required equals true so

00:11:02,910 --> 00:11:08,310
basically when there is a post request

00:11:05,339 --> 00:11:11,100
to my name space slash Rao

00:11:08,310 --> 00:11:13,680
it if the product ID is non-existent in

00:11:11,100 --> 00:11:15,600
the in the headers send it back and say

00:11:13,680 --> 00:11:18,120
it's missing so this is kind of like

00:11:15,600 --> 00:11:20,760
allowing you to do some pre check of

00:11:18,120 --> 00:11:22,080
what the data is coming in and allows

00:11:20,760 --> 00:11:25,200
you to actually clean up the code on the

00:11:22,080 --> 00:11:27,180
callback function so callback function

00:11:25,200 --> 00:11:29,430
it's a really really simple example

00:11:27,180 --> 00:11:32,279
basically it just all it does is takes

00:11:29,430 --> 00:11:35,670
the rest request I get all the

00:11:32,279 --> 00:11:38,220
parameters spits it out as an array I

00:11:35,670 --> 00:11:41,460
then just return that and then I return

00:11:38,220 --> 00:11:43,620
the response so if I were to post right

00:11:41,460 --> 00:11:46,020
if I was doing HTTP POST request to my

00:11:43,620 --> 00:11:47,310
new custom endpoint all I'd get in

00:11:46,020 --> 00:11:49,980
return is the same exact data I just

00:11:47,310 --> 00:11:51,270
sent it so really simple example really

00:11:49,980 --> 00:11:53,070
good way to test if your endpoints

00:11:51,270 --> 00:11:54,660
working if you don't want to do like

00:11:53,070 --> 00:11:55,980
unit testing or anything like that just

00:11:54,660 --> 00:11:59,370
a simple way to get up and running and

00:11:55,980 --> 00:12:03,900
say hey my endpoint works really really

00:11:59,370 --> 00:12:06,029
simple and and it's easy like we get we

00:12:03,900 --> 00:12:10,230
get up and running with our api's pretty

00:12:06,029 --> 00:12:14,070
quickly because it's so easy so let's

00:12:10,230 --> 00:12:16,860
talk about some use cases for this ionic

00:12:14,070 --> 00:12:18,150
in native script native apps so there's

00:12:16,860 --> 00:12:19,830
actually a plugin for the in the

00:12:18,150 --> 00:12:23,580
WordPress ecosystem called app presser

00:12:19,830 --> 00:12:25,920
and that presser takes is built on ionic

00:12:23,580 --> 00:12:28,500
and allows you to take your WordPress

00:12:25,920 --> 00:12:31,170
data and create a native app with ionic

00:12:28,500 --> 00:12:33,450
it's pretty cool and it's really easy to

00:12:31,170 --> 00:12:35,460
just use out-of-the-box but most of you

00:12:33,450 --> 00:12:37,530
guys are way more advanced than that so

00:12:35,460 --> 00:12:39,170
just use ionic directly or native script

00:12:37,530 --> 00:12:42,150
or anything else that you want to use

00:12:39,170 --> 00:12:44,610
the WP crowd we have a great tutorial

00:12:42,150 --> 00:12:46,470
series on native script and WordPress so

00:12:44,610 --> 00:12:49,470
if you want to check that out a good

00:12:46,470 --> 00:12:51,810
place to look at decoupled applications

00:12:49,470 --> 00:12:53,400
which is I think the coolest thing about

00:12:51,810 --> 00:12:56,160
this whole thing

00:12:53,400 --> 00:12:58,620
forget WordPress themes and all that

00:12:56,160 --> 00:13:01,410
have a WordPress website let your

00:12:58,620 --> 00:13:03,390
marketing team let your non tech team

00:13:01,410 --> 00:13:05,250
handle all the content doesn't need a

00:13:03,390 --> 00:13:08,370
theme it could be blank if you actually

00:13:05,250 --> 00:13:09,779
go to anything but you power an

00:13:08,370 --> 00:13:11,910
application built on a completely

00:13:09,779 --> 00:13:14,880
different stack using the content from

00:13:11,910 --> 00:13:16,230
that cm from that WordPress site you can

00:13:14,880 --> 00:13:17,790
also create a decoupled app that

00:13:16,230 --> 00:13:20,209
interacts with that WordPress site

00:13:17,790 --> 00:13:22,200
so if you wanted to create a custom

00:13:20,209 --> 00:13:23,610
micro CMS or

00:13:22,200 --> 00:13:25,230
you want to do something with the data

00:13:23,610 --> 00:13:27,780
in WordPress but not actually have

00:13:25,230 --> 00:13:29,610
someone logged into the CMS you could

00:13:27,780 --> 00:13:31,950
actually do that really quickly because

00:13:29,610 --> 00:13:34,530
again it's completely restful it takes

00:13:31,950 --> 00:13:36,930
all the default crud and it you could

00:13:34,530 --> 00:13:39,450
keep it completely decoupled and then

00:13:36,930 --> 00:13:41,010
micro widgets so in the past if you

00:13:39,450 --> 00:13:43,500
wanted let's say a feed from a wordpress

00:13:41,010 --> 00:13:47,090
site into another website you would

00:13:43,500 --> 00:13:50,040
catch the feed the RSS feed right and

00:13:47,090 --> 00:13:51,300
nowadays that's kind of useless because

00:13:50,040 --> 00:13:54,390
who wants to deal with all that stuff

00:13:51,300 --> 00:13:56,640
when you have a wonderful API micro

00:13:54,390 --> 00:13:59,400
widgets are kind of a cool new thing I

00:13:56,640 --> 00:14:03,090
deal a lot with micro widgets in the

00:13:59,400 --> 00:14:05,040
myspace just just to create cool little

00:14:03,090 --> 00:14:06,810
UI widgets within WordPress right like

00:14:05,040 --> 00:14:08,730
so on my website I have you know my

00:14:06,810 --> 00:14:11,490
speaking engagements my portfolio and

00:14:08,730 --> 00:14:13,770
like my github projects are all custom

00:14:11,490 --> 00:14:16,370
post types within WordPress and it's all

00:14:13,770 --> 00:14:19,260
filterable through a little angular

00:14:16,370 --> 00:14:21,180
angular app that I have just to showcase

00:14:19,260 --> 00:14:24,420
what it can do within a WordPress

00:14:21,180 --> 00:14:26,820
ecosystem it's one way to look at it I

00:14:24,420 --> 00:14:28,650
really like looking at it as using

00:14:26,820 --> 00:14:30,990
WordPress is that decoupled outside of

00:14:28,650 --> 00:14:33,060
the ecosystem kind of thing and allowing

00:14:30,990 --> 00:14:35,700
for you to actually build whatever it is

00:14:33,060 --> 00:14:37,650
you want to build in the languages you

00:14:35,700 --> 00:14:39,390
want to build them in but having the

00:14:37,650 --> 00:14:40,710
WordPress CMS just be a great back-end

00:14:39,390 --> 00:14:46,170
because the UI is there and everything's

00:14:40,710 --> 00:14:50,160
good to go okay but seriously I'm still

00:14:46,170 --> 00:14:52,830
talking about WordPress WordPress isn't

00:14:50,160 --> 00:14:55,740
your grandma's blog CMS anymore I think

00:14:52,830 --> 00:15:00,210
I've covered that restful api is easy to

00:14:55,740 --> 00:15:01,830
customize and add to check and you can

00:15:00,210 --> 00:15:05,100
still build what you want with the code

00:15:01,830 --> 00:15:06,960
you want so again use a CMS that

00:15:05,100 --> 00:15:08,640
everyone knows and loves keep the

00:15:06,960 --> 00:15:12,330
overhead of learning a new CMS down

00:15:08,640 --> 00:15:14,070
don't build a new CMS and you can still

00:15:12,330 --> 00:15:16,290
do what you want you know you're not

00:15:14,070 --> 00:15:17,850
gonna be chained into the WordPress

00:15:16,290 --> 00:15:21,060
ecosystem just because you have it on

00:15:17,850 --> 00:15:23,280
the back end so I have some awesome

00:15:21,060 --> 00:15:30,570
resources for you guys check out

00:15:23,280 --> 00:15:32,700
lynda.com/rhettandlink Uppal more talks

00:15:30,570 --> 00:15:35,910
about our courses on there with

00:15:32,700 --> 00:15:38,380
WordPress and angular

00:15:35,910 --> 00:15:40,990
because the one that's on there's one so

00:15:38,380 --> 00:15:42,550
I want to update it caldera learn we

00:15:40,990 --> 00:15:45,400
have some awesome YouTube videos on

00:15:42,550 --> 00:15:47,320
there we had done if we actually have a

00:15:45,400 --> 00:15:49,930
free series that's on YouTube that's

00:15:47,320 --> 00:15:54,340
taking apart WordPress and JavaScript

00:15:49,930 --> 00:15:57,510
frameworks so angular react and view the

00:15:54,340 --> 00:16:00,160
API Docs for WordPress are awesome

00:15:57,510 --> 00:16:02,350
there's great code examples on there

00:16:00,160 --> 00:16:04,090
take a look at them they're a great

00:16:02,350 --> 00:16:06,760
place to just copy paste it and start

00:16:04,090 --> 00:16:10,000
you know on your way obviously they're

00:16:06,760 --> 00:16:11,470
very low level and if you liked this

00:16:10,000 --> 00:16:13,150
conference if you are at energy

00:16:11,470 --> 00:16:14,650
confident you love it check out loop

00:16:13,150 --> 00:16:16,360
conf blue comfort is actually a

00:16:14,650 --> 00:16:17,110
developer conference focused on the

00:16:16,360 --> 00:16:18,520
WordPress realm

00:16:17,110 --> 00:16:22,450
it's run by a lot of the same people

00:16:18,520 --> 00:16:24,430
ng-conf is and we talk a lot about the

00:16:22,450 --> 00:16:26,470
api and building out really cool custom

00:16:24,430 --> 00:16:28,180
decoupled applications with it a lot of

00:16:26,470 --> 00:16:30,100
the speakers that loop comfortable are

00:16:28,180 --> 00:16:32,590
that's all they do and a lot of them are

00:16:30,100 --> 00:16:34,300
actually core contributors to the API

00:16:32,590 --> 00:16:36,160
I think there's potentially gonna be

00:16:34,300 --> 00:16:38,530
another one this year that's really cool

00:16:36,160 --> 00:16:41,410
definitely check it out the double Pete

00:16:38,530 --> 00:16:43,210
crowd comm that's my blog and podcast we

00:16:41,410 --> 00:16:45,790
do a lot of this kind of high end stuff

00:16:43,210 --> 00:16:48,730
talking about building all sorts of

00:16:45,790 --> 00:16:51,570
stuff with the REST API so that's it

00:16:48,730 --> 00:16:51,570
that's all I have to talk about

00:16:56,350 --> 00:16:58,410
you

00:17:05,280 --> 00:17:07,340

YouTube URL: https://www.youtube.com/watch?v=-PxlDHSgXQY


