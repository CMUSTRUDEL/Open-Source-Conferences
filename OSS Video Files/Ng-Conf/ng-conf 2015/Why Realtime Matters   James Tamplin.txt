Title: Why Realtime Matters   James Tamplin
Publication date: 2015-03-05
Playlist: ng-conf 2015
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,000 --> 00:00:02,910


00:00:02,910 --> 00:00:04,320
JAMES TAMPLIN: Hi, everyone.

00:00:04,320 --> 00:00:05,580
There we go.

00:00:05,580 --> 00:00:07,750
It's fantastic to see you all here.

00:00:07,750 --> 00:00:10,240
This is my second ng-conf.

00:00:10,240 --> 00:00:11,980
And I'm super thrilled to be back here.

00:00:11,980 --> 00:00:13,876
[CHEERS AND APPLAUSE]

00:00:13,876 --> 00:00:16,010
Let's give it up for the organizers, as well.

00:00:16,010 --> 00:00:17,050
You guys are amazing.

00:00:17,050 --> 00:00:19,330
Those prizes are fantastic.

00:00:19,330 --> 00:00:22,070
So I'm here to talk to you today about why realtime matters

00:00:22,070 --> 00:00:24,290
and building realtime applications

00:00:24,290 --> 00:00:26,750
with Firebase and Angular.

00:00:26,750 --> 00:00:29,190
So throw your hand up for me if you've heard of Firebase.

00:00:29,190 --> 00:00:29,982
AUDIENCE: Firebase.

00:00:29,982 --> 00:00:31,106
JAMES TAMPLIN: There we go.

00:00:31,106 --> 00:00:32,110
Those are some hands.

00:00:32,110 --> 00:00:35,190
And if you've used Firebase, keep them up.

00:00:35,190 --> 00:00:35,740
OK.

00:00:35,740 --> 00:00:36,240
Cool.

00:00:36,240 --> 00:00:38,140
Good to see.

00:00:38,140 --> 00:00:39,690
So my name is James Tamplin.

00:00:39,690 --> 00:00:41,970
I'm the co-founder of Firebase.

00:00:41,970 --> 00:00:44,970
And today, we're going to be covering why realtime matters,

00:00:44,970 --> 00:00:47,030
Firebase's role in realtime, and then

00:00:47,030 --> 00:00:50,370
a little bit about AngularFire, which is how Firebase plays

00:00:50,370 --> 00:00:53,020
really nicely with Angular.

00:00:53,020 --> 00:00:57,140
So first, let's all get on the same page about realtime data.

00:00:57,140 --> 00:01:00,760
So realtime data is data that is delivered immediately

00:01:00,760 --> 00:01:02,690
after collection.

00:01:02,690 --> 00:01:04,340
So in the context of the web, this

00:01:04,340 --> 00:01:07,274
is typically when a server pushes data down to a client

00:01:07,274 --> 00:01:08,690
and modifies a view in its updates

00:01:08,690 --> 00:01:10,700
without the user having to do anything.

00:01:10,700 --> 00:01:12,780
That data can come from other clients.

00:01:12,780 --> 00:01:16,950
It can come from other servers, APIs, sensors, you name it.

00:01:16,950 --> 00:01:21,350
But this notion of the server pushing data to a client

00:01:21,350 --> 00:01:23,210
wasn't around when the web actually started.

00:01:23,210 --> 00:01:25,850
Tim Berners-Lee literally built the web to be request response.

00:01:25,850 --> 00:01:28,190
So the server couldn't actually initiate.

00:01:28,190 --> 00:01:32,450
And it was kludged in in around 1996 with Java's applets

00:01:32,450 --> 00:01:34,620
and then eventually weighed its way into [? $http ?]

00:01:34,620 --> 00:01:39,180
and JavaScript around 2000 and is now the standard that we

00:01:39,180 --> 00:01:41,210
know and-- depending on the day and which way

00:01:41,210 --> 00:01:44,820
the wind's blowing-- which we love, with is WebSockets.

00:01:44,820 --> 00:01:47,890
But regardless of the technology progression,

00:01:47,890 --> 00:01:50,850
it's clear that the user experience has progressed.

00:01:50,850 --> 00:01:53,060
And now modern applications are realtime.

00:01:53,060 --> 00:01:56,040
If I post on your Facebook wall, you see it immediately.

00:01:56,040 --> 00:01:57,930
If I pull out my phone and look at Uber,

00:01:57,930 --> 00:02:00,520
I see the car's location up to the second.

00:02:00,520 --> 00:02:03,260
When I'm in Google Docs and I type a character,

00:02:03,260 --> 00:02:06,160
everyone sees that instantly.

00:02:06,160 --> 00:02:08,620
So social tools have become more social.

00:02:08,620 --> 00:02:11,360
Productivity tools have become more productive.

00:02:11,360 --> 00:02:13,790
And most importantly, users have come

00:02:13,790 --> 00:02:18,100
to expect realtime experiences, not just from these guys

00:02:18,100 --> 00:02:18,850
but from everyone.

00:02:18,850 --> 00:02:21,860


00:02:21,860 --> 00:02:25,920
So realtime matters because it drives up engagement,

00:02:25,920 --> 00:02:29,260
adds context, and fosters collaboration.

00:02:29,260 --> 00:02:30,760
So it helps engagement because users

00:02:30,760 --> 00:02:33,010
like data that's delivered to them without them

00:02:33,010 --> 00:02:34,095
having to do anything.

00:02:34,095 --> 00:02:36,670
It increases context because it doesn't

00:02:36,670 --> 00:02:39,230
matter if you get a restaurant recommendation hours or even

00:02:39,230 --> 00:02:40,960
minutes after you've gone by it.

00:02:40,960 --> 00:02:43,320
And it fosters collaboration.

00:02:43,320 --> 00:02:45,635
I can't even count how many hours

00:02:45,635 --> 00:02:47,760
have been saved through tools like Asana and Trello

00:02:47,760 --> 00:02:51,560
for project management, Cloud9 IDE or Nitrous

00:02:51,560 --> 00:02:55,040
for coding in Google Docs and the Productivity Suite.

00:02:55,040 --> 00:02:59,120
So we talked a little bit about why realtime matters.

00:02:59,120 --> 00:03:02,152
Now there are options for making your Angular app realtime.

00:03:02,152 --> 00:03:03,610
And one of the most popular methods

00:03:03,610 --> 00:03:06,070
is the open-source library Socket.IO.

00:03:06,070 --> 00:03:07,640
It's a message-parsing library.

00:03:07,640 --> 00:03:09,280
There's closed-source ones or hosted

00:03:09,280 --> 00:03:12,900
ones like PubNub and Pusher that do a similar thing.

00:03:12,900 --> 00:03:15,180
But I'm going to talk to you today about Firebase.

00:03:15,180 --> 00:03:18,720
And Firebase takes a little bit of a different approach.

00:03:18,720 --> 00:03:22,670
So Firebase is a realtime backend for your Angular app.

00:03:22,670 --> 00:03:24,750
And we've built a cool piece of technology

00:03:24,750 --> 00:03:27,280
that lets you build an application without needing

00:03:27,280 --> 00:03:31,240
to write any server code or spin up any service.

00:03:31,240 --> 00:03:33,570
You focus on the user experience.

00:03:33,570 --> 00:03:36,640
We take care of the rest.

00:03:36,640 --> 00:03:39,280
Now at the core of Firebase, there's

00:03:39,280 --> 00:03:43,810
a hosted NoSQL JSON database.

00:03:43,810 --> 00:03:46,120
And it's accessible through a variety of SDKs

00:03:46,120 --> 00:03:49,310
we have-- iOS, Android, JavaScript, and REST.

00:03:49,310 --> 00:03:51,820
And when you write data to Firebase,

00:03:51,820 --> 00:03:54,790
it saves it up to our servers and propagates

00:03:54,790 --> 00:03:59,770
it-- synchronizes it to every device in milliseconds.

00:03:59,770 --> 00:04:02,500
Now this means that every Firebase app

00:04:02,500 --> 00:04:04,775
is realtime by default.

00:04:04,775 --> 00:04:07,569


00:04:07,569 --> 00:04:09,110
In addition to our realtime database,

00:04:09,110 --> 00:04:11,150
we've got a great user management system.

00:04:11,150 --> 00:04:12,900
Stops you from having to fight with OAuth.

00:04:12,900 --> 00:04:15,420
And you can even integrate your own custom OAuth provider.

00:04:15,420 --> 00:04:16,920
And we have a hosting service, which

00:04:16,920 --> 00:04:21,740
lets you deploy your application assets up to our cloud.

00:04:21,740 --> 00:04:23,290
We have a CDN that we put them on.

00:04:23,290 --> 00:04:25,550
And we even provision your own SSL server.

00:04:25,550 --> 00:04:31,010
We actually launched it a year ago here at ng-conf 2014.

00:04:31,010 --> 00:04:33,570
Now we've got almost 10,000 sites using it,

00:04:33,570 --> 00:04:37,150
including the new Angular.io, which you saw this morning.

00:04:37,150 --> 00:04:40,810


00:04:40,810 --> 00:04:42,970
So that's a little bit about Firebase.

00:04:42,970 --> 00:04:47,380
Now let's talk about Firebase integrates with Angular.

00:04:47,380 --> 00:04:50,530
We do it through a library called AngularFire.

00:04:50,530 --> 00:04:52,610
So AngularFire is a set of services

00:04:52,610 --> 00:04:57,327
that help you bind data between Firebase and Angular.

00:04:57,327 --> 00:04:59,160
Angular's known for its two-way data mining.

00:04:59,160 --> 00:05:03,240
So you bind your view to your JavaScript models.

00:05:03,240 --> 00:05:06,180
AngularFire takes it one step further.

00:05:06,180 --> 00:05:08,080
We actually bind your JavaScript models

00:05:08,080 --> 00:05:10,250
to the Firebase database.

00:05:10,250 --> 00:05:13,110
And since the Firebase database synchronizes all clients

00:05:13,110 --> 00:05:16,500
in realtime, this means that whenever one of your end-users

00:05:16,500 --> 00:05:19,400
changes their view, it syncs up to Firebase,

00:05:19,400 --> 00:05:20,970
and that view change is reflected

00:05:20,970 --> 00:05:25,370
to every other person actually using that Firebase app.

00:05:25,370 --> 00:05:26,770
This is pretty cool.

00:05:26,770 --> 00:05:30,370
And we call it a three-way data binding.

00:05:30,370 --> 00:05:32,310
So you can find AngularFire online.

00:05:32,310 --> 00:05:33,889
On GitHub, it's an open-sourced repo.

00:05:33,889 --> 00:05:35,180
You can find it on our website.

00:05:35,180 --> 00:05:39,530
And it's also in the footer of the new Angular.io site.

00:05:39,530 --> 00:05:42,430
So let's get down into some of the nuts and bolts.

00:05:42,430 --> 00:05:44,230
So AngularFire has three services

00:05:44,230 --> 00:05:46,620
it exposes-- $firebaseArray, $firebaseObject,

00:05:46,620 --> 00:05:48,670
and $firebaseAuth.

00:05:48,670 --> 00:05:50,920
Now $firebaseArray synchronizes collections,

00:05:50,920 --> 00:05:55,490
so if you have a list of tweets-- maybe a to-do list.

00:05:55,490 --> 00:05:58,830
$firebaseObject, in an unforeseen plot twist,

00:05:58,830 --> 00:05:59,965
synchronizes objects.

00:05:59,965 --> 00:06:01,440
[LAUGHTER]

00:06:01,440 --> 00:06:06,390
So user profile data, or every single one

00:06:06,390 --> 00:06:09,360
of your fully operational fleet of mobile barbers--

00:06:09,360 --> 00:06:12,770
if you're in the mobile-barber business.

00:06:12,770 --> 00:06:14,690
And we also have $firebaseAuth.

00:06:14,690 --> 00:06:18,380
And so $firebaseAuth provides a wrap around that core Firebase

00:06:18,380 --> 00:06:19,340
authentication service.

00:06:19,340 --> 00:06:20,950
But it exposes in a way that you guys

00:06:20,950 --> 00:06:24,510
are going to be familiar with inside Angular.

00:06:24,510 --> 00:06:26,900
So how does this actually work?

00:06:26,900 --> 00:06:30,990
Well, what we first do is we add the Firebase module

00:06:30,990 --> 00:06:33,110
to your app.

00:06:33,110 --> 00:06:36,080
This then allows you to inject any one of those three services

00:06:36,080 --> 00:06:39,220
into any Angular factory provider or service.

00:06:39,220 --> 00:06:42,440
So in this case, we're using $firebaseArray.

00:06:42,440 --> 00:06:44,420
And then what we actually do is we drop down

00:06:44,420 --> 00:06:46,184
to the Firebase API.

00:06:46,184 --> 00:06:47,600
So what I'm doing here when I say,

00:06:47,600 --> 00:06:51,550
var ref equals new Firebases, I'm creating a reference.

00:06:51,550 --> 00:06:54,910
And now you can think of a reference like a pointer

00:06:54,910 --> 00:06:57,431
to a piece of data inside Firebase.

00:06:57,431 --> 00:06:58,930
One of the core concepts in Firebase

00:06:58,930 --> 00:07:02,125
is every single piece of data has its own URL.

00:07:02,125 --> 00:07:04,000
And you can do some really, really cool stuff

00:07:04,000 --> 00:07:05,791
with that URL, like punch it into a browser

00:07:05,791 --> 00:07:07,930
and see a view of your data.

00:07:07,930 --> 00:07:10,970
But now we have this reference, we can operate on it.

00:07:10,970 --> 00:07:14,806
We can write to Firebase, and we can listen for changes.

00:07:14,806 --> 00:07:17,305
So what I do here is I create an instance of $firebaseArray.

00:07:17,305 --> 00:07:19,200
I pass it that ref.

00:07:19,200 --> 00:07:21,510
And then on $scope, I have an items array.

00:07:21,510 --> 00:07:24,020
And it acts like a normal JavaScript array.

00:07:24,020 --> 00:07:25,950
So I can do things like ngRepeat over it

00:07:25,950 --> 00:07:28,940
or use any of the Angular filters.

00:07:28,940 --> 00:07:32,340
So for those of you typically warrant backends

00:07:32,340 --> 00:07:35,610
to Angular applications, you're probably thinking to yourself,

00:07:35,610 --> 00:07:36,600
OK, this is all cool.

00:07:36,600 --> 00:07:39,860
But where do you actually hook up the backend?

00:07:39,860 --> 00:07:42,700
And the answer is those two lines of code are it.

00:07:42,700 --> 00:07:43,520
This is it.

00:07:43,520 --> 00:07:45,957
This is hooking up Angular to the backend.

00:07:45,957 --> 00:07:48,540
This looks for changes, notifies Angular when there's changes,

00:07:48,540 --> 00:07:51,760
triggers dirty checking, updates the view-- the whole nine

00:07:51,760 --> 00:07:52,930
yards.

00:07:52,930 --> 00:07:54,950
And this is why AngularFire is so powerful

00:07:54,950 --> 00:07:59,980
to connect Angular and Firebase because of its simplicity.

00:07:59,980 --> 00:08:03,876
So we touched on $firebaseArray and $firebaseObject.

00:08:03,876 --> 00:08:06,940
We got some cool stuff in the authentication realm, as well.

00:08:06,940 --> 00:08:09,150
So $firebaseAuth allows you to track anonymous users

00:08:09,150 --> 00:08:10,760
with anonymous auth.

00:08:10,760 --> 00:08:14,050
You can do easily email and password auth,

00:08:14,050 --> 00:08:16,130
full OAuth with a bunch of social providers--

00:08:16,130 --> 00:08:17,667
Twitter, Facebook, GitHub, Google.

00:08:17,667 --> 00:08:20,000
And you can even integrate with your own custom solution

00:08:20,000 --> 00:08:23,480
if you already have a users table that you built.

00:08:23,480 --> 00:08:27,680
One of the coolest things is route-based security.

00:08:27,680 --> 00:08:29,960
So one of the pains with client-side authentication

00:08:29,960 --> 00:08:33,549
is figuring out if a user is allowed to do something

00:08:33,549 --> 00:08:35,940
before they do it.

00:08:35,940 --> 00:08:38,760
And typically, controllers are littered with [? if ?] [? L ?]

00:08:38,760 --> 00:08:41,479
statements to figure out if this is the case.

00:08:41,479 --> 00:08:43,020
And with AngularFire, what we've done

00:08:43,020 --> 00:08:46,040
is we've actually merged routing [? and all ?] security

00:08:46,040 --> 00:08:48,912
into this single resolve method.

00:08:48,912 --> 00:08:50,370
And this is really cool because you

00:08:50,370 --> 00:08:52,740
don't have to worry if a user's authenticated.

00:08:52,740 --> 00:08:56,620
We'll route with the appropriate place if they're not.

00:08:56,620 --> 00:09:01,132
So for those of you with eagle eyes in the audience,

00:09:01,132 --> 00:09:02,590
you're going to notice that there's

00:09:02,590 --> 00:09:04,550
been a few changes to the API that I've

00:09:04,550 --> 00:09:07,785
shown here on stage today.

00:09:07,785 --> 00:09:09,410
And that's because we're really, really

00:09:09,410 --> 00:09:13,240
excited to announce after two years of work

00:09:13,240 --> 00:09:18,250
and over 50 contributors that live today is AngularFire

00:09:18,250 --> 00:09:20,012
1.0.0.

00:09:20,012 --> 00:09:22,442
[APPLAUSE]

00:09:22,442 --> 00:09:28,280


00:09:28,280 --> 00:09:32,000
This has been an awesome effort, both from our core team

00:09:32,000 --> 00:09:34,630
and from folks across the community.

00:09:34,630 --> 00:09:36,250
So it's out of beta.

00:09:36,250 --> 00:09:39,680
Point releases are now going to be backwards compatible.

00:09:39,680 --> 00:09:42,580
The API is dramatically simplified.

00:09:42,580 --> 00:09:44,190
And like with any Firebase product,

00:09:44,190 --> 00:09:47,030
we've spent a lot of time on documentation, live code

00:09:47,030 --> 00:09:49,820
examples, really delivering the user experience

00:09:49,820 --> 00:09:53,190
that we've been known for.

00:09:53,190 --> 00:09:56,620
So now I've talked a little bit about AngularFire.

00:09:56,620 --> 00:09:59,810
Let's jump over to another piece of the Angular ecosystem

00:09:59,810 --> 00:10:02,410
where realtime is super important.

00:10:02,410 --> 00:10:04,210
And that's mobile.

00:10:04,210 --> 00:10:06,466
So Ionic is-- I'm sure all of you guys

00:10:06,466 --> 00:10:09,090
have heard of it-- it's a rising star in the Angular community.

00:10:09,090 --> 00:10:12,210
But realtime's super important on mobile.

00:10:12,210 --> 00:10:14,900
It's important for a couple of major reasons,

00:10:14,900 --> 00:10:18,860
the first of which is pull to refresh needs to die.

00:10:18,860 --> 00:10:20,720
It's a terrible user experience.

00:10:20,720 --> 00:10:22,160
It's going to seem super archaic.

00:10:22,160 --> 00:10:24,870
It probably already does to many of you.

00:10:24,870 --> 00:10:27,520
The second thing that realtime really helps with on mobile

00:10:27,520 --> 00:10:30,030
is unreliable internet connections.

00:10:30,030 --> 00:10:31,630
So Firebase, with our sync approach,

00:10:31,630 --> 00:10:33,912
the actual local client has a version of the data.

00:10:33,912 --> 00:10:35,370
So if you're going through a tunnel

00:10:35,370 --> 00:10:37,010
or your internet connection is spotty,

00:10:37,010 --> 00:10:39,706
the application still stays responsive.

00:10:39,706 --> 00:10:42,420
So I'm going to show you a quick demo here.

00:10:42,420 --> 00:10:49,270
And this demo is inspired by my love for my Rolodex--

00:10:49,270 --> 00:10:51,690
my physical Rolodex.

00:10:51,690 --> 00:10:53,530
There was a problem with this, and that's

00:10:53,530 --> 00:10:57,010
that it couldn't hold all of my friends.

00:10:57,010 --> 00:10:58,580
So I've gone ahead and fixed that.

00:10:58,580 --> 00:11:00,770
I built a mobile app that has infinite scroll

00:11:00,770 --> 00:11:03,070
to do so with Firebase.

00:11:03,070 --> 00:11:05,230
So we'll show you a quick example here.

00:11:05,230 --> 00:11:07,230
So I'm here in Ionic lab.

00:11:07,230 --> 00:11:10,559
I've got my iOS on the left, my Android on the right.

00:11:10,559 --> 00:11:12,100
Because it's all built with Firebase,

00:11:12,100 --> 00:11:13,350
new items will pop in the top.

00:11:13,350 --> 00:11:14,170
Edits will change.

00:11:14,170 --> 00:11:16,460
And as I scroll down, you can see

00:11:16,460 --> 00:11:18,170
new items load in the bottom without me

00:11:18,170 --> 00:11:20,360
having to do anything.

00:11:20,360 --> 00:11:22,210
And as I switch to the code for this,

00:11:22,210 --> 00:11:25,520
I'm going to show you just how easy it is to do.

00:11:25,520 --> 00:11:26,810
So I'm in our controller here.

00:11:26,810 --> 00:11:30,190
And as we talked about earlier, we're creating a Firebase.ref.

00:11:30,190 --> 00:11:31,870
Now here I'm creating another ref,

00:11:31,870 --> 00:11:35,906
and I'm actually using this Firebase.util library

00:11:35,906 --> 00:11:37,280
that we're also announcing today.

00:11:37,280 --> 00:11:39,360
It's got some really cool utility methods

00:11:39,360 --> 00:11:43,100
like implementing pagination and infinite scroll.

00:11:43,100 --> 00:11:47,070
So we pass that scroll ref, and we create using $firebaseArray.

00:11:47,070 --> 00:11:50,860
We add an array to [? scope.items. ?] We'll first

00:11:50,860 --> 00:11:52,590
load the first three items.

00:11:52,590 --> 00:11:55,760
And then whenever we hit the bottom, we start loading more.

00:11:55,760 --> 00:11:59,150
This is all you need to do to build realtime infinite

00:11:59,150 --> 00:12:02,940
scroll with Firebase, Ionic, and Angular.

00:12:02,940 --> 00:12:08,050


00:12:08,050 --> 00:12:11,240
So we've talked about Angular 1, we've talked about Ionic.

00:12:11,240 --> 00:12:14,320
Let's talk a little bit about Angular 2.

00:12:14,320 --> 00:12:18,070
So one of the things we're super excited about in Angular 2

00:12:18,070 --> 00:12:20,430
and one that's extremely relevant to realtime

00:12:20,430 --> 00:12:22,590
is change detection.

00:12:22,590 --> 00:12:25,410
Concretely, Angular 2 means that there's no more

00:12:25,410 --> 00:12:27,240
$scope and no more $watch.

00:12:27,240 --> 00:12:30,730


00:12:30,730 --> 00:12:32,870
So with Angular 2's change detection,

00:12:32,870 --> 00:12:36,660
instead of triggering a digest loop where the entire scope

00:12:36,660 --> 00:12:38,410
tree is traversed, you can actually

00:12:38,410 --> 00:12:41,850
specify which items to update and which items to skip.

00:12:41,850 --> 00:12:43,435
So in this example here, I am actually

00:12:43,435 --> 00:12:45,810
just going to update the items where the old value is not

00:12:45,810 --> 00:12:47,390
equal to the new value.

00:12:47,390 --> 00:12:49,290
This is going to be an incredible performance

00:12:49,290 --> 00:12:52,140
increase, and especially for realtime integrations

00:12:52,140 --> 00:12:54,980
like AngularFire.

00:12:54,980 --> 00:12:57,260
So we've talked a little bit about Angular 1.

00:12:57,260 --> 00:12:58,301
We've talked about Ionic.

00:12:58,301 --> 00:13:00,770
And we've touched briefly on Angular 2.

00:13:00,770 --> 00:13:02,790
And it's pretty clear that realtime

00:13:02,790 --> 00:13:04,530
matters more than ever.

00:13:04,530 --> 00:13:07,390


00:13:07,390 --> 00:13:10,200
So users are coming to expect these great realtime

00:13:10,200 --> 00:13:12,220
experiences and coming to expect them

00:13:12,220 --> 00:13:14,980
from more than just top-tier tech companies.

00:13:14,980 --> 00:13:17,780
If you're still using CRUD services over the coming weeks,

00:13:17,780 --> 00:13:20,320
months, years, you should evaluate your architecture

00:13:20,320 --> 00:13:25,150
and see what realtime services can offer you in the future.

00:13:25,150 --> 00:13:27,710


00:13:27,710 --> 00:13:32,110
So in the-- [LAUGHS] gave that away a little bit.

00:13:32,110 --> 00:13:36,020
In the next few remaining minutes,

00:13:36,020 --> 00:13:39,370
I want to stop briefly and take some time

00:13:39,370 --> 00:13:44,390
to thank you-- thank you, the Angular community.

00:13:44,390 --> 00:13:47,550
You guys are awesome.

00:13:47,550 --> 00:13:50,530
So Firebase is-- we've been around for a little over three

00:13:50,530 --> 00:13:52,990
years now.

00:13:52,990 --> 00:13:57,490
And we've done integrations with many pieces of technology.

00:13:57,490 --> 00:13:59,460
We haven't interacted with a community

00:13:59,460 --> 00:14:04,050
that is as engaged and truly excited as the Angular

00:14:04,050 --> 00:14:06,574
community.

00:14:06,574 --> 00:14:08,490
I can't even count the number of conversations

00:14:08,490 --> 00:14:10,470
that we've had through Google Groups,

00:14:10,470 --> 00:14:15,340
through Twitter-- the number of interactions we have on GitHub.

00:14:15,340 --> 00:14:17,317
There are countless Firebase talks

00:14:17,317 --> 00:14:21,520
that have been given at Angular groups around the world.

00:14:21,520 --> 00:14:24,600
It's really been humbling to interact with you guys

00:14:24,600 --> 00:14:26,275
and see how cool you all are.

00:14:26,275 --> 00:14:29,700
But I have one person who's my favorite.

00:14:29,700 --> 00:14:33,690
And I met him last year at ng-conf.

00:14:33,690 --> 00:14:35,294
And it's, of course, the unicorn.

00:14:35,294 --> 00:14:36,910
[LAUGHTER]

00:14:36,910 --> 00:14:40,160
I don't know if he's here this year.

00:14:40,160 --> 00:14:42,380
But seriously, thank you very much.

00:14:42,380 --> 00:14:45,830
We wouldn't be here today if it weren't for this community.

00:14:45,830 --> 00:14:48,500


00:14:48,500 --> 00:14:51,340
And so for those of you who haven't heard the news

00:14:51,340 --> 00:14:54,470
or haven't kept up where we actually are today,

00:14:54,470 --> 00:14:55,520
we've joined Google.

00:14:55,520 --> 00:15:00,200
So Google acquired Firebase in October of last year.

00:15:00,200 --> 00:15:03,550
And so our team of 23 moved over to Google SF

00:15:03,550 --> 00:15:06,110
and has grown significantly since then.

00:15:06,110 --> 00:15:09,674
We now have 160,000 developers using Firebase.

00:15:09,674 --> 00:15:11,340
And we're excited to be a part of Google

00:15:11,340 --> 00:15:15,670
and interact with Google and take advantage of the resources

00:15:15,670 --> 00:15:17,370
that Google has.

00:15:17,370 --> 00:15:20,020
I'm also excited and proud to now call the Angular Core Team

00:15:20,020 --> 00:15:20,519
colleagues.

00:15:20,519 --> 00:15:25,062


00:15:25,062 --> 00:15:27,270
One of the things I want to highlight before we leave

00:15:27,270 --> 00:15:29,470
is this transition to Google definitely

00:15:29,470 --> 00:15:32,520
means that our interactions with the community

00:15:32,520 --> 00:15:33,510
aren't going to change.

00:15:33,510 --> 00:15:36,940
We're still going to be as visible and engaged

00:15:36,940 --> 00:15:37,890
as we were before.

00:15:37,890 --> 00:15:39,715
And nothing there changes.

00:15:39,715 --> 00:15:42,250


00:15:42,250 --> 00:15:46,935
And so with that in mind, I want to lead into two more things

00:15:46,935 --> 00:15:48,360
instead of just one more thing.

00:15:48,360 --> 00:15:50,320
They're two small feature announcements

00:15:50,320 --> 00:15:54,640
that we want to announce today, the first of which

00:15:54,640 --> 00:15:57,540
available today is private backups.

00:15:57,540 --> 00:16:06,950
So you're now, starting today, able to export

00:16:06,950 --> 00:16:09,460
your entire Firebase database out

00:16:09,460 --> 00:16:13,930
to your S3 bucket or your Google Cloud Storage bucket.

00:16:13,930 --> 00:16:16,280
Now we already backup your data.

00:16:16,280 --> 00:16:19,020
But this allows you to export it for things like analytics,

00:16:19,020 --> 00:16:22,505
testing, and is available starting today for our Bonfire

00:16:22,505 --> 00:16:24,439
and up customers.

00:16:24,439 --> 00:16:25,980
The second question that we get asked

00:16:25,980 --> 00:16:29,280
quite a bit is how does Firebase play nicely

00:16:29,280 --> 00:16:31,441
with search engines and SEO?

00:16:31,441 --> 00:16:32,990
And today, we're excited to announce

00:16:32,990 --> 00:16:36,640
that we've updated our server, our client,

00:16:36,640 --> 00:16:38,710
worked with the Google Search team

00:16:38,710 --> 00:16:41,340
to provide SEO support to Firebase.

00:16:41,340 --> 00:16:44,330
So if you're using our latest SDK,

00:16:44,330 --> 00:16:45,845
search engine callers, now instead

00:16:45,845 --> 00:16:48,560
of seeing just this in your view template

00:16:48,560 --> 00:16:51,540
will actually see the content-- be able to index it.

00:16:51,540 --> 00:16:52,992
AUDIENCE: Woo!

00:16:52,992 --> 00:16:55,412
[APPLAUSE]

00:16:55,412 --> 00:17:00,567


00:17:00,567 --> 00:17:02,650
JAMES TAMPLIN: It's something that a lot of people

00:17:02,650 --> 00:17:04,000
have been asking for and a lot of people

00:17:04,000 --> 00:17:04,958
are very excited about.

00:17:04,958 --> 00:17:08,651
So we're glad we can ship that.

00:17:08,651 --> 00:17:10,109
And in true Firebase fashion, we're

00:17:10,109 --> 00:17:11,275
not just going to stop here.

00:17:11,275 --> 00:17:15,051
We're excited to integrate with prerendering services

00:17:15,051 --> 00:17:16,800
and hook those up to our hosting products.

00:17:16,800 --> 00:17:23,131
So watch out for those later on in the year.

00:17:23,131 --> 00:17:24,839
So that concludes my talk on why realtime

00:17:24,839 --> 00:17:28,139
matters in building realtime applications with Angular

00:17:28,139 --> 00:17:29,315
and Firebase.

00:17:29,315 --> 00:17:31,440
We're going to be around for the entire conference.

00:17:31,440 --> 00:17:34,690
We're just out here in the yellow shirts.

00:17:34,690 --> 00:17:37,950
David East, Jacob Wenger, and [? Keta ?] [? Wolfe ?] from

00:17:37,950 --> 00:17:39,660
our team are all here.

00:17:39,660 --> 00:17:42,590
They all have spent an enormous amount of time with Angular.

00:17:42,590 --> 00:17:44,579
So please come and say hi and have

00:17:44,579 --> 00:17:45,870
a great rest of the conference.

00:17:45,870 --> 00:17:46,470
Thank you.

00:17:46,470 --> 00:17:49,220
[APPLAUSE]


YouTube URL: https://www.youtube.com/watch?v=4nD5fjpIesk


