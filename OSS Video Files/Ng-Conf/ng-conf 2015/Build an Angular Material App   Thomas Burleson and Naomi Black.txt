Title: Build an Angular Material App   Thomas Burleson and Naomi Black
Publication date: 2015-03-06
Playlist: ng-conf 2015
Description: 
	www.ng-conf.org

ng-conf is a two day, single track conference focused on delivering the highest quality training in the Angular JavaScript framework. 500 to 700 Developers from across the country will converge on beautiful Salt Lake City, UT to participate in training sessions by the Google Angular team, and other Angular experts. In addition to the invaluable training, ng-conf will deliver a premier conference experience for attendees, providing opportunities to network with other developers, relax at social events, and engage in some of the unique entertainment opportunities available in Utah.
Captions: 
	00:00:00,000 --> 00:00:03,822


00:00:03,822 --> 00:00:04,780
NAOMI BLACK: All right.

00:00:04,780 --> 00:00:06,540
Actually, I think your name is Thomas, yes?

00:00:06,540 --> 00:00:07,610
TOM BURLESON: Yes, it is.

00:00:07,610 --> 00:00:08,350
I almost forgot.

00:00:08,350 --> 00:00:08,650
NAOMI BLACK: Yes.

00:00:08,650 --> 00:00:09,400
It's good to know.

00:00:09,400 --> 00:00:10,150
OK.

00:00:10,150 --> 00:00:12,320
So who are we?

00:00:12,320 --> 00:00:13,220
I'm Naomi Black.

00:00:13,220 --> 00:00:14,140
I work for Google.

00:00:14,140 --> 00:00:15,812
I'm a Tech Manager on the Angular Team.

00:00:15,812 --> 00:00:17,520
TOM BURLESON: My name is Thomas Burleson.

00:00:17,520 --> 00:00:19,510
I'm the Team Lead for Angular Material,

00:00:19,510 --> 00:00:21,550
and we are really excited to be here today.

00:00:21,550 --> 00:00:23,540
NAOMI BLACK: We are so excited to be here.

00:00:23,540 --> 00:00:27,120
So last year at NG-Europe, we announced Angular Material.

00:00:27,120 --> 00:00:28,650
We showed you guys some components,

00:00:28,650 --> 00:00:32,060
we pointed you to our website material.angularjs.org,

00:00:32,060 --> 00:00:34,460
where you can find demos and online docs.

00:00:34,460 --> 00:00:35,334
But we've done that.

00:00:35,334 --> 00:00:36,250
What should we do now?

00:00:36,250 --> 00:00:37,960
TOM BURLESON: Today, we're going to do something different.

00:00:37,960 --> 00:00:40,640
Today, we want to build [INAUDIBLE] an Angular Material

00:00:40,640 --> 00:00:43,732
application, from scratch.

00:00:43,732 --> 00:00:45,604
[APPLAUSE]

00:00:45,604 --> 00:00:48,880


00:00:48,880 --> 00:00:50,530
NAOMI BLACK: So what should we build?

00:00:50,530 --> 00:00:53,430
We were thinking, since we recently posted a starter app

00:00:53,430 --> 00:00:56,054
to material.angularjs.org, we would step through it,

00:00:56,054 --> 00:00:58,220
and show you how you can actually build it, and take

00:00:58,220 --> 00:00:59,686
these components that we've made,

00:00:59,686 --> 00:01:01,560
and connect them together to make a real app.

00:01:01,560 --> 00:01:01,990
TOM BURLESON: Awesome.

00:01:01,990 --> 00:01:03,500
Let's start building the app.

00:01:03,500 --> 00:01:05,281
NAOMI BLACK: All right.

00:01:05,281 --> 00:01:07,280
So let me take a step back and actually show you

00:01:07,280 --> 00:01:08,910
what we're going to build.

00:01:08,910 --> 00:01:11,894
So up here, we've got a toolbar.

00:01:11,894 --> 00:01:14,560
It looks like we're going to use some-- these look like buttons.

00:01:14,560 --> 00:01:16,250
We've got icons.

00:01:16,250 --> 00:01:19,426
We have MD list and list items, some content.

00:01:19,426 --> 00:01:21,050
This looks like bottom sheet over here.

00:01:21,050 --> 00:01:22,710
We've got a lot of components we can put together.

00:01:22,710 --> 00:01:25,010
TOM BURLESON: And it supports responsive breakpoints.

00:01:25,010 --> 00:01:25,820
NAOMI BLACK: This is exciting.

00:01:25,820 --> 00:01:26,320
All right.

00:01:26,320 --> 00:01:27,420
Let's get started.

00:01:27,420 --> 00:01:28,650
TOM BURLESON: I'm ready to start coding.

00:01:28,650 --> 00:01:28,910
NAOMI BLACK: No, not yet.

00:01:28,910 --> 00:01:29,410
Not yet.

00:01:29,410 --> 00:01:31,400
Let's tell people what we're going to do first.

00:01:31,400 --> 00:01:33,600
So first up in this talk, we're going

00:01:33,600 --> 00:01:35,170
to tell you how to plan your layout

00:01:35,170 --> 00:01:37,336
and figure out what components you're going to need.

00:01:37,336 --> 00:01:39,880
Next, we're going to talk about adding Angular Material

00:01:39,880 --> 00:01:41,089
and dependencies to your app.

00:01:41,089 --> 00:01:42,754
TOM BURLESON: And then afterwards, we're

00:01:42,754 --> 00:01:44,326
going to start adding some HTML.

00:01:44,326 --> 00:01:46,200
We're going to start off with hard-coded HTML

00:01:46,200 --> 00:01:47,520
and mock content.

00:01:47,520 --> 00:01:49,565
And then once we see that it lays out properly

00:01:49,565 --> 00:01:51,720
and looks the way we want it to, then

00:01:51,720 --> 00:01:54,590
we'll replace that with dynamic HTML and wire

00:01:54,590 --> 00:01:55,924
in our custom application logic.

00:01:55,924 --> 00:01:58,423
NAOMI BLACK: We'll also show you how to add responsive break

00:01:58,423 --> 00:02:00,550
points so that your content flows appropriately

00:02:00,550 --> 00:02:02,050
on different sized screens.

00:02:02,050 --> 00:02:03,800
And last, we're going to talk a little bit

00:02:03,800 --> 00:02:05,050
about accessibility testing.

00:02:05,050 --> 00:02:06,055
TOM BURLESON: Are we ready to start coding?

00:02:06,055 --> 00:02:06,760
NAOMI BLACK: I think so.

00:02:06,760 --> 00:02:07,400
Are you guys ready?

00:02:07,400 --> 00:02:08,691
Should we write some live code?

00:02:08,691 --> 00:02:09,450
[APPLAUSE]

00:02:09,450 --> 00:02:10,450
TOM BURLESON: All right.

00:02:10,450 --> 00:02:11,860
NAOMI BLACK: All right.

00:02:11,860 --> 00:02:12,933
Oh, false start.

00:02:12,933 --> 00:02:14,590
I misdirected you.

00:02:14,590 --> 00:02:15,690
I did this on purpose.

00:02:15,690 --> 00:02:17,890
I want you guys to really get in your heads

00:02:17,890 --> 00:02:20,790
that it's important to plan out your app and your layout

00:02:20,790 --> 00:02:21,967
before you get started.

00:02:21,967 --> 00:02:24,050
So let's think a little bit about what we actually

00:02:24,050 --> 00:02:25,630
want to build on the page.

00:02:25,630 --> 00:02:28,390
So we're going to have a toolbar area at the top.

00:02:28,390 --> 00:02:29,960
It looks like we're going to need

00:02:29,960 --> 00:02:32,554
a sidebar on the side and some content next to it,

00:02:32,554 --> 00:02:34,220
and then some kind of a div or something

00:02:34,220 --> 00:02:35,730
to hold all those pieces together.

00:02:35,730 --> 00:02:35,950
TOM BURLESON: Right.

00:02:35,950 --> 00:02:38,090
And what we're looking at here is a master detail type

00:02:38,090 --> 00:02:38,290
of view.

00:02:38,290 --> 00:02:39,630
We're all familiar with that.

00:02:39,630 --> 00:02:41,380
But more than that, this thing is actually

00:02:41,380 --> 00:02:44,442
going to adjust its layout and responsiveness and fashion.

00:02:44,442 --> 00:02:45,400
NAOMI BLACK: All right.

00:02:45,400 --> 00:02:46,430
TOM BURLESON: Now are we ready to start?

00:02:46,430 --> 00:02:47,100
NAOMI BLACK: Now we are ready.

00:02:47,100 --> 00:02:48,683
Let's switch over to your code screen.

00:02:48,683 --> 00:02:49,820
TOM BURLESON: OK.

00:02:49,820 --> 00:02:50,820
Oh, that's your machine.

00:02:50,820 --> 00:02:52,111
NAOMI BLACK: That's my machine.

00:02:52,111 --> 00:02:54,240
That won't help you.

00:02:54,240 --> 00:02:55,240
TOM BURLESON: All right.

00:02:55,240 --> 00:02:56,823
So the first thing we would need to do

00:02:56,823 --> 00:02:59,520
is we need to download our Angular Material libraries

00:02:59,520 --> 00:03:02,450
and the dependent libraries of Angular Material needs.

00:03:02,450 --> 00:03:04,890
Normally, we would use Bower, or we could use NPM,

00:03:04,890 --> 00:03:06,490
or we could use JSPM.

00:03:06,490 --> 00:03:08,740
We've already downloaded with Bower.

00:03:08,740 --> 00:03:11,580
We've download and installed the Angular Material libraries.

00:03:11,580 --> 00:03:13,640
Now what we need to do is load those libraries

00:03:13,640 --> 00:03:15,040
into our HTML page.

00:03:15,040 --> 00:03:15,210
NAOMI BLACK: All right.

00:03:15,210 --> 00:03:15,910
Let's do that.

00:03:15,910 --> 00:03:16,960
TOM BURLESON: OK.

00:03:16,960 --> 00:03:19,210
NAOMI BLACK: So what you have here is just a skeleton.

00:03:19,210 --> 00:03:21,420
I see you've got a body and not much else going on.

00:03:21,420 --> 00:03:21,570
TOM BURLESON: Right.

00:03:21,570 --> 00:03:23,611
That's a completely blank Angular JS application.

00:03:23,611 --> 00:03:30,271


00:03:30,271 --> 00:03:30,770
There we go.

00:03:30,770 --> 00:03:34,190
So now we've given the script tags to load the Angular

00:03:34,190 --> 00:03:36,166
Material libraries.

00:03:36,166 --> 00:03:37,790
So here's the Angular Material library.

00:03:37,790 --> 00:03:38,680
Oops.

00:03:38,680 --> 00:03:40,680
Let me try to reduce the size here a little bit.

00:03:40,680 --> 00:03:42,660
NAOMI BLACK: I see you're loading those from the Bower

00:03:42,660 --> 00:03:44,368
components directory and not pulling them

00:03:44,368 --> 00:03:46,660
from RawGit like I did earlier the Angular IO site.

00:03:46,660 --> 00:03:48,160
This would be a good time to mention

00:03:48,160 --> 00:03:50,930
that although it's really useful to use something like RawGit

00:03:50,930 --> 00:03:52,910
for prototyping and testing, before you

00:03:52,910 --> 00:03:54,790
go to a live production site with lots

00:03:54,790 --> 00:03:57,650
of people looking at it, it's good to point to a CDN.

00:03:57,650 --> 00:03:59,691
TOM BURLESON: Now that we've loaded the libraries

00:03:59,691 --> 00:04:01,960
into the page, the next thing we need to do

00:04:01,960 --> 00:04:03,540
is adjust our starter application

00:04:03,540 --> 00:04:06,030
to have a dependency upon Angular material.

00:04:06,030 --> 00:04:07,690
So we're just going to come down here,

00:04:07,690 --> 00:04:10,480
and we're going to add a dependency.

00:04:10,480 --> 00:04:12,110
And then last but not least, we have

00:04:12,110 --> 00:04:14,200
to remember to load the stylesheets for Angular

00:04:14,200 --> 00:04:14,787
material.

00:04:14,787 --> 00:04:17,120
So we'll go up to the top, and we'll add the stylesheet.

00:04:17,120 --> 00:04:20,592


00:04:20,592 --> 00:04:22,300
NAOMI BLACK: So there's three main things

00:04:22,300 --> 00:04:24,008
that you need to do for Angular material.

00:04:24,008 --> 00:04:26,260
One, you need to actually add angularmaterial.js

00:04:26,260 --> 00:04:29,340
plus our other JavaScript dependencies on Aria

00:04:29,340 --> 00:04:30,510
and Animate.

00:04:30,510 --> 00:04:31,662
You need to add our CSS.

00:04:31,662 --> 00:04:33,620
And you need to make sure that you're adding us

00:04:33,620 --> 00:04:35,002
into your module down here.

00:04:35,002 --> 00:04:36,960
TOM BURLESON: Now, the next thing we need to do

00:04:36,960 --> 00:04:38,880
is start adding some HTML content.

00:04:38,880 --> 00:04:40,360
And we'll use some mock content.

00:04:40,360 --> 00:04:40,720
NAOMI BLACK: All right.

00:04:40,720 --> 00:04:41,900
So let's see if I can remember.

00:04:41,900 --> 00:04:43,220
We had the toolbar at the top.

00:04:43,220 --> 00:04:44,520
Let's see if I can keep up with this.

00:04:44,520 --> 00:04:45,420
So we had the toolbar.

00:04:45,420 --> 00:04:46,110
NAOMI BLACK: And then under the toolbar,

00:04:46,110 --> 00:04:48,660
some kind of a div to hold all the content together.

00:04:48,660 --> 00:04:48,970
TOM BURLESON: Got it.

00:04:48,970 --> 00:04:50,595
NAOMI BLACK: Specify how that lays out.

00:04:50,595 --> 00:04:52,444
And then we have the sidebar.

00:04:52,444 --> 00:04:53,340
TOM BURLESON: Got it.

00:04:53,340 --> 00:04:54,510
NAOMI BLACK: And then next to that side nav,

00:04:54,510 --> 00:04:56,610
we're going to have some kind of content, right?

00:04:56,610 --> 00:04:56,990
TOM BURLESON: Got that.

00:04:56,990 --> 00:04:57,490
There we go.

00:04:57,490 --> 00:04:58,260
NAOMI BLACK: OK.

00:04:58,260 --> 00:04:59,390
Let's drop some content in.

00:04:59,390 --> 00:05:01,730
Maybe you can throw some buttons and some icons

00:05:01,730 --> 00:05:03,660
into there so we can see what this looks like on the page.

00:05:03,660 --> 00:05:04,660
TOM BURLESON: Excellent.

00:05:04,660 --> 00:05:06,650
Let's use an MD list component, and we'll

00:05:06,650 --> 00:05:08,316
add it to the side nav where we're going

00:05:08,316 --> 00:05:11,091
to display our list of users.

00:05:11,091 --> 00:05:11,590
There we go.

00:05:11,590 --> 00:05:14,320
So now we have the Angular Material list component,

00:05:14,320 --> 00:05:16,420
and we have two list items.

00:05:16,420 --> 00:05:19,040
We have two buttons, or a button in each item.

00:05:19,040 --> 00:05:23,190
And we have an icon, and then a label for the user's name.

00:05:23,190 --> 00:05:25,000
That's in the user's list.

00:05:25,000 --> 00:05:26,710
Now we have the detail view.

00:05:26,710 --> 00:05:28,295
Let's add some mock content to that.

00:05:28,295 --> 00:05:31,260


00:05:31,260 --> 00:05:31,867
There we go.

00:05:31,867 --> 00:05:32,950
I think it's looking good.

00:05:32,950 --> 00:05:34,770
Let's go look at the web page, shall we?

00:05:34,770 --> 00:05:36,353
NAOMI BLACK: Let's see how this looks.

00:05:36,353 --> 00:05:38,500


00:05:38,500 --> 00:05:41,170
TOM BURLESON: Let's close out of this.

00:05:41,170 --> 00:05:42,421
So that's looking pretty good.

00:05:42,421 --> 00:05:44,128
NAOMI BLACK: That's looking pretty sharp.

00:05:44,128 --> 00:05:45,450
But didn't we have a side nav?

00:05:45,450 --> 00:05:45,870
TOM BURLESON: We do.

00:05:45,870 --> 00:05:46,970
Let's take a look at the elements

00:05:46,970 --> 00:05:48,220
and see what's going on there.

00:05:48,220 --> 00:05:49,600
There's our toolbar.

00:05:49,600 --> 00:05:50,934
And ah.

00:05:50,934 --> 00:05:52,850
So the side nav, when you initially create it,

00:05:52,850 --> 00:05:56,120
it's rendered in a closed mode offscreen to the left.

00:05:56,120 --> 00:05:57,640
So if you want it to be visible, you

00:05:57,640 --> 00:05:59,650
need to make sure that it's in a locked open mode.

00:05:59,650 --> 00:06:01,140
NAOMI BLACK: Oh, let's go look up the API docs.

00:06:01,140 --> 00:06:02,940
I can't remember the syntaxes for that.

00:06:02,940 --> 00:06:03,773
TOM BURLESON: Right.

00:06:03,773 --> 00:06:07,202
So our documentation has a full suite of information.

00:06:07,202 --> 00:06:08,660
And let's close the service section

00:06:08,660 --> 00:06:12,310
and scroll down to the component for the side nav, shall we?

00:06:12,310 --> 00:06:14,250
Here in the side nav, if I look down,

00:06:14,250 --> 00:06:17,320
I can see that there's an attribute-- MD is locked open--

00:06:17,320 --> 00:06:20,300
that we can use to make sure that side nav is locked open.

00:06:20,300 --> 00:06:21,630
NAOMI BLACK: That looks like exactly what we need.

00:06:21,630 --> 00:06:23,505
Why don't we take that and put it in our app.

00:06:23,505 --> 00:06:25,620
TOM BURLESON: Let's add that in.

00:06:25,620 --> 00:06:27,295
I'm going to scroll back up here.

00:06:27,295 --> 00:06:28,050
Excuse me.

00:06:28,050 --> 00:06:36,430


00:06:36,430 --> 00:06:37,430
So now it's locked open.

00:06:37,430 --> 00:06:38,135
NAOMI BLACK: OK.

00:06:38,135 --> 00:06:40,468
TOM BURLESON: If we come back to the screen here-- let's

00:06:40,468 --> 00:06:42,200
go to this here.

00:06:42,200 --> 00:06:43,160
That's looking better.

00:06:43,160 --> 00:06:45,160
NAOMI BLACK: Actually, this is looking terrible.

00:06:45,160 --> 00:06:46,640
What's with all the icons that are up there?

00:06:46,640 --> 00:06:47,140
Oh, you know what?

00:06:47,140 --> 00:06:48,181
We forgot something else.

00:06:48,181 --> 00:06:50,160
We haven't actually told our app where

00:06:50,160 --> 00:06:51,550
to put this content on the page.

00:06:51,550 --> 00:06:52,090
TOM BURLESON: Correct.

00:06:52,090 --> 00:06:54,020
NAOMI BLACK: We need the responsive layout API.

00:06:54,020 --> 00:06:54,853
TOM BURLESON: Right.

00:06:54,853 --> 00:06:56,690
So we actually have not told the web page

00:06:56,690 --> 00:06:59,132
how to use the layout API available in Angular Material.

00:06:59,132 --> 00:06:59,840
So let's do that.

00:06:59,840 --> 00:07:00,400
NAOMI BLACK: All right.

00:07:00,400 --> 00:07:02,560
TOM BURLESON: But before we do that, let's go to the docs

00:07:02,560 --> 00:07:03,540
and take a look at those real quick.

00:07:03,540 --> 00:07:04,206
NAOMI BLACK: OK.

00:07:04,206 --> 00:07:06,990
So to take a step back and tell you guys about our layout API,

00:07:06,990 --> 00:07:09,362
this is based on CSS3 flexbox, but we've

00:07:09,362 --> 00:07:11,320
done a lot of thinking about it to try and make

00:07:11,320 --> 00:07:13,830
it as easy for you to use the syntax as possible

00:07:13,830 --> 00:07:15,980
and to make it really natural.

00:07:15,980 --> 00:07:17,666
So if you look here-- I don't know

00:07:17,666 --> 00:07:19,790
if you can see my laser pointer-- if you look here,

00:07:19,790 --> 00:07:21,720
we have names like layout-sm.

00:07:21,720 --> 00:07:24,360
And what that does, the dash SM says, only use that

00:07:24,360 --> 00:07:26,100
on a screen that is small.

00:07:26,100 --> 00:07:29,180
So layout-gt-sm is use this on something

00:07:29,180 --> 00:07:30,594
that is greater than small.

00:07:30,594 --> 00:07:32,510
And so we have a whole bunch of these defined,

00:07:32,510 --> 00:07:35,540
and you can use them to, in a very granular way,

00:07:35,540 --> 00:07:38,360
specify exactly how you want your content to show up

00:07:38,360 --> 00:07:39,490
on different screen sizes.

00:07:39,490 --> 00:07:41,080
TOM BURLESON: So let's go ahead and add that to the HTML.

00:07:41,080 --> 00:07:42,350
NAOMI BLACK: Let's do that.

00:07:42,350 --> 00:07:44,910
TOM BURLESON: So the layout attributes are pretty unique.

00:07:44,910 --> 00:07:47,280
We use those on containers to define

00:07:47,280 --> 00:07:50,080
how the children of the containers should be laid out.

00:07:50,080 --> 00:07:53,380
So the first thing we want to do is tell the body container

00:07:53,380 --> 00:07:54,880
that we want to lay out its children

00:07:54,880 --> 00:07:58,006
in top down fashion, so the toolbars at the top

00:07:58,006 --> 00:07:59,630
and the rest of the informations below.

00:07:59,630 --> 00:08:02,640
So we want to use a layout column mode.

00:08:02,640 --> 00:08:04,860
The next thing we want to do is tell the div area

00:08:04,860 --> 00:08:07,380
that its children-- the side nav and the content--

00:08:07,380 --> 00:08:10,130
need to be laid out left to right, side by side.

00:08:10,130 --> 00:08:11,800
So that would be layout row mode.

00:08:11,800 --> 00:08:14,610


00:08:14,610 --> 00:08:17,075
The side nav, we want to lay that out-- its content,

00:08:17,075 --> 00:08:18,450
and in this case, it's just one--

00:08:18,450 --> 00:08:21,510
but we'll lay that out in a column mode.

00:08:21,510 --> 00:08:23,231
And let me add a space there.

00:08:23,231 --> 00:08:24,772
And then the content, we're not going

00:08:24,772 --> 00:08:26,050
to have to worry about at this point,

00:08:26,050 --> 00:08:28,220
so let's save this and go back to the web page

00:08:28,220 --> 00:08:29,220
and take a look at that.

00:08:29,220 --> 00:08:31,003


00:08:31,003 --> 00:08:32,669
NAOMI BLACK: That's looking much better.

00:08:32,669 --> 00:08:34,600
TOM BURLESON: So that's looking better.

00:08:34,600 --> 00:08:36,700
Let's take a look at our markup here.

00:08:36,700 --> 00:08:39,864
So I'll screen this.

00:08:39,864 --> 00:08:40,530
NAOMI BLACK: Oh.

00:08:40,530 --> 00:08:40,970
But you know what?

00:08:40,970 --> 00:08:42,419
We're not using the full space on the page.

00:08:42,419 --> 00:08:44,960
We have all this extra space, and we're not making use of it.

00:08:44,960 --> 00:08:46,860
We should go tell our app how to do that.

00:08:46,860 --> 00:08:48,776
TOM BURLESON: So another feature of the layout

00:08:48,776 --> 00:08:50,280
API is this option called Flex where

00:08:50,280 --> 00:08:52,700
you can tell the containers how to adjust

00:08:52,700 --> 00:08:54,340
their size relative to their parent

00:08:54,340 --> 00:08:55,970
if the space is available.

00:08:55,970 --> 00:09:00,410
So let's go back to the HTML and we're

00:09:00,410 --> 00:09:03,780
going to tell the toolbar-- excuse me--

00:09:03,780 --> 00:09:08,315
we want to tell the div area here that the toolbar is going

00:09:08,315 --> 00:09:10,266
to occupy a certain vertical space,

00:09:10,266 --> 00:09:11,640
and we want the content area that

00:09:11,640 --> 00:09:13,820
has the side nav and the content to occupy

00:09:13,820 --> 00:09:16,090
the rest of the available vertical space.

00:09:16,090 --> 00:09:20,010
So we want the div to adjust in a flex fashion.

00:09:20,010 --> 00:09:22,260
The side nav has a specific by CSS

00:09:22,260 --> 00:09:23,780
width that we're going to use.

00:09:23,780 --> 00:09:25,410
But we want the content to adjust

00:09:25,410 --> 00:09:28,660
to the available horizontal space that's left over.

00:09:28,660 --> 00:09:32,350
So we'll tell the content to adjust or flexed its size

00:09:32,350 --> 00:09:34,875
to fill the available space.

00:09:34,875 --> 00:09:36,750
Now if I go back here, we can see that things

00:09:36,750 --> 00:09:38,190
are looking pretty good.

00:09:38,190 --> 00:09:40,120
NAOMI BLACK: This is looking much better.

00:09:40,120 --> 00:09:42,540
But I notice that there's not a lot of visual distinction

00:09:42,540 --> 00:09:44,180
between our side nav and the page,

00:09:44,180 --> 00:09:46,657
and I'm curious to see what happens as we resize that box.

00:09:46,657 --> 00:09:47,490
TOM BURLESON: Right.

00:09:47,490 --> 00:09:50,348
So let me close the console here.

00:09:50,348 --> 00:09:52,556
We can see that it's going to close here in a minute.

00:09:52,556 --> 00:09:54,120
Oh, it's not even doing that, is it?

00:09:54,120 --> 00:09:54,460
NAOMI BLACK: Yeah.

00:09:54,460 --> 00:09:55,626
That's not looking so great.

00:09:55,626 --> 00:09:56,252
Let's fix that.

00:09:56,252 --> 00:09:58,001
TOM BURLESON: Well, let's fix both things.

00:09:58,001 --> 00:09:59,955
First, we need to add some visual difference

00:09:59,955 --> 00:10:00,830
between the side nav.

00:10:00,830 --> 00:10:02,871
And we can use something called white frames that

00:10:02,871 --> 00:10:05,650
are part of material design.

00:10:05,650 --> 00:10:07,380
NAOMI BLACK: So material design has

00:10:07,380 --> 00:10:09,010
this idea that you want things that

00:10:09,010 --> 00:10:12,290
are online to be represented with weight and responsiveness

00:10:12,290 --> 00:10:14,400
in the same way that things in the real world

00:10:14,400 --> 00:10:15,865
have a physical interaction.

00:10:15,865 --> 00:10:17,490
And white frame is a way to represent--

00:10:17,490 --> 00:10:19,090
if you imagine two layers of paper

00:10:19,090 --> 00:10:20,910
sliding one over the other, they would have

00:10:20,910 --> 00:10:22,118
a different amount of shadow.

00:10:22,118 --> 00:10:24,330
So here we're using white frame z-2,

00:10:24,330 --> 00:10:27,820
and the z-index gives us an indication of how much depth

00:10:27,820 --> 00:10:29,141
we want that shadow to have.

00:10:29,141 --> 00:10:31,140
TOM BURLESON: So now the shadow is looking good,

00:10:31,140 --> 00:10:33,430
and it's starting to look the way we want.

00:10:33,430 --> 00:10:35,990
But it still doesn't have any response.

00:10:35,990 --> 00:10:38,170
But maybe we should fix that first.

00:10:38,170 --> 00:10:39,420
NAOMI BLACK: Let's go do that.

00:10:39,420 --> 00:10:40,467
TOM BURLESON: OK.

00:10:40,467 --> 00:10:42,050
So one of the things we did say was we

00:10:42,050 --> 00:10:44,660
told the side nav that it needed to be locked open.

00:10:44,660 --> 00:10:47,400
Well, that's only useful in a limited sense.

00:10:47,400 --> 00:10:49,930
We can actually use a media query service

00:10:49,930 --> 00:10:53,470
that Angular Material publishes to query for the break points.

00:10:53,470 --> 00:10:56,570
And then we can respond true or false whether or not

00:10:56,570 --> 00:10:58,590
the side nav should be locked open or not.

00:10:58,590 --> 00:11:00,150
NAOMI BLACK: That sounds very useful.

00:11:00,150 --> 00:11:02,150
TOM BURLESON: And in fact, a lot of our services

00:11:02,150 --> 00:11:04,689
are actually documented online here.

00:11:04,689 --> 00:11:06,480
And you can see that we have a bottom sheet

00:11:06,480 --> 00:11:10,500
service, a dialogue service, and the MD media query service.

00:11:10,500 --> 00:11:12,460
And if I click on this here, you can

00:11:12,460 --> 00:11:14,720
see that it's looking at the breakpoint attributes

00:11:14,720 --> 00:11:15,830
that you can also plug in.

00:11:15,830 --> 00:11:16,680
So let's do that.

00:11:16,680 --> 00:11:20,287
Let's replace in the HTML page-- instead of-- go ahead, Naomi.

00:11:20,287 --> 00:11:22,370
NAOMI BLACK: These are again using the same syntax

00:11:22,370 --> 00:11:24,940
that we were using in our layout elsewhere.

00:11:24,940 --> 00:11:27,140
Here, we're using gt-sm, so this is

00:11:27,140 --> 00:11:29,475
saying when it's greater than small, apply this rule.

00:11:29,475 --> 00:11:31,350
TOM BURLESON: If we go back to the web page--

00:11:31,350 --> 00:11:36,297


00:11:36,297 --> 00:11:38,130
NAOMI BLACK: Oh, that's looking much better.

00:11:38,130 --> 00:11:38,880
But you know what?

00:11:38,880 --> 00:11:41,262
On a small screen, like if I open this on my phone,

00:11:41,262 --> 00:11:42,970
how would I be able to open the side nav?

00:11:42,970 --> 00:11:44,770
We should really add a button.

00:11:44,770 --> 00:11:46,460
This isn't actually doing very much.

00:11:46,460 --> 00:11:47,250
TOM BURLESON: It isn't yet.

00:11:47,250 --> 00:11:48,080
We'll add some buttons.

00:11:48,080 --> 00:11:49,240
But the great thing that we can already

00:11:49,240 --> 00:11:51,380
see coming out of Angular Material out of the box

00:11:51,380 --> 00:11:52,930
are even transitions.

00:11:52,930 --> 00:11:56,030
You'll get transitions, and ink effects, and ripple effects all

00:11:56,030 --> 00:11:57,789
built in as part of Angular Material.

00:11:57,789 --> 00:11:59,580
So let's add some buttons, shall we, Naomi?

00:11:59,580 --> 00:12:00,538
NAOMI BLACK: All right.

00:12:00,538 --> 00:12:03,397


00:12:03,397 --> 00:12:05,105
TOM BURLESON: So now should we add some--

00:12:05,105 --> 00:12:06,390
let's do the buttons first.

00:12:06,390 --> 00:12:11,420


00:12:11,420 --> 00:12:13,810
There's a button for the menu.

00:12:13,810 --> 00:12:20,030
And we'll come down here to the content here.

00:12:20,030 --> 00:12:23,030
And we also should probably at this point, Naomi, actually

00:12:23,030 --> 00:12:25,572
modify our mock content to use some of the dynamic content.

00:12:25,572 --> 00:12:26,280
NAOMI BLACK: Yes.

00:12:26,280 --> 00:12:27,790
Let's turn this into a real angular app.

00:12:27,790 --> 00:12:28,460
TOM BURLESON: So the first thing we

00:12:28,460 --> 00:12:30,043
want to do before we even try to start

00:12:30,043 --> 00:12:32,569
doing mock content is let's hook in our application lodge.

00:12:32,569 --> 00:12:33,610
We're going to load that.

00:12:33,610 --> 00:12:36,070
Then we'll replace our mock content with dynamic,

00:12:36,070 --> 00:12:37,350
and then we can come back to the buttons.

00:12:37,350 --> 00:12:37,810
How about that?

00:12:37,810 --> 00:12:38,490
NAOMI BLACK: Let's do that.

00:12:38,490 --> 00:12:38,955
TOM BURLESON: OK.

00:12:38,955 --> 00:12:41,270
So I want to come back down to the script section here.

00:12:41,270 --> 00:12:47,080


00:12:47,080 --> 00:12:48,942
So here, we've loaded the user's module.

00:12:48,942 --> 00:12:50,400
We've loaded a user controller that

00:12:50,400 --> 00:12:52,970
will allow us to manage the interactions with these views.

00:12:52,970 --> 00:12:55,970
And we have a user service that will actually be used

00:12:55,970 --> 00:12:58,760
to load the user's data model.

00:12:58,760 --> 00:13:01,880
Now that I've gotten these modules loaded into the page,

00:13:01,880 --> 00:13:04,360
I also need to make sure I set a dependency here

00:13:04,360 --> 00:13:06,540
on that module name.

00:13:06,540 --> 00:13:07,530
We've got that.

00:13:07,530 --> 00:13:09,635
The next thing I need to do is come up to the body

00:13:09,635 --> 00:13:11,760
and make sure that I'm going to use that controller

00:13:11,760 --> 00:13:14,690
within our view.

00:13:14,690 --> 00:13:15,190
OK.

00:13:15,190 --> 00:13:15,720
Here we go.

00:13:15,720 --> 00:13:16,640
So now I've registered a controller

00:13:16,640 --> 00:13:18,170
to use the user controller.

00:13:18,170 --> 00:13:20,760
Now we can start replacing our hard-coded content

00:13:20,760 --> 00:13:23,852
with dynamic content.

00:13:23,852 --> 00:13:25,185
So we'll come back to this list.

00:13:25,185 --> 00:13:31,570


00:13:31,570 --> 00:13:34,800
So here, we've replaced the hard-coded version

00:13:34,800 --> 00:13:36,644
with a dynamic, and we're using NG repeat,

00:13:36,644 --> 00:13:38,685
and we're iterating over all available users that

00:13:38,685 --> 00:13:40,660
have been loaded.

00:13:40,660 --> 00:13:43,370
Let's go down to the Detail View and replace that

00:13:43,370 --> 00:13:47,310
with some more dynamic content.

00:13:47,310 --> 00:13:49,180
Here again, we're using a selected user,

00:13:49,180 --> 00:13:51,680
and we're updating the content based on the current selected

00:13:51,680 --> 00:13:53,070
user.

00:13:53,070 --> 00:13:55,470
And if I go back to the page now,

00:13:55,470 --> 00:13:57,486
we can see that it should be laying out-- ah,

00:13:57,486 --> 00:13:58,770
it's laying out pretty good.

00:13:58,770 --> 00:14:00,020
NAOMI BLACK: Yeah, that's looking pretty good.

00:14:00,020 --> 00:14:02,380
But what happened to the layout in your title bar?

00:14:02,380 --> 00:14:04,010
And we're also missing some icons.

00:14:04,010 --> 00:14:04,927
What's with the icons?

00:14:04,927 --> 00:14:06,426
TOM BURLESON: Well, Naomi, I thought

00:14:06,426 --> 00:14:08,750
it would be cool to-- instead of using individual URLs

00:14:08,750 --> 00:14:12,890
for our SVGs, I wanted to gather the SVGs up into an icon set

00:14:12,890 --> 00:14:13,624
and use that.

00:14:13,624 --> 00:14:14,290
NAOMI BLACK: Oh.

00:14:14,290 --> 00:14:16,170
I see you're using our talk as an excuse

00:14:16,170 --> 00:14:18,020
to show some new features in MD Icon.

00:14:18,020 --> 00:14:18,580
TOM BURLESON: We are.

00:14:18,580 --> 00:14:20,913
In fact, we try to plan for a lot of enterprise features

00:14:20,913 --> 00:14:22,230
within Angular Material.

00:14:22,230 --> 00:14:24,500
So we actually have an MD icon service

00:14:24,500 --> 00:14:28,181
where you can register icon sets and all sorts of icons.

00:14:28,181 --> 00:14:29,180
So why don't we do that?

00:14:29,180 --> 00:14:32,059
Why don't we register the icon set here for our avatars?

00:14:32,059 --> 00:14:33,350
NAOMI BLACK: That sounds great.

00:14:33,350 --> 00:14:33,849
Let's do it.

00:14:33,849 --> 00:14:35,754


00:14:35,754 --> 00:14:37,670
TOM BURLESON: So down here where I've actually

00:14:37,670 --> 00:14:41,720
created our starter app module and our application,

00:14:41,720 --> 00:14:43,470
I'm going to create a config section where

00:14:43,470 --> 00:14:46,670
I've injected a new provider for the MD icon service.

00:14:46,670 --> 00:14:50,620
And with that provider, I'm going to actually register

00:14:50,620 --> 00:14:56,240
a default icon set-- let me scroll this over here-- where

00:14:56,240 --> 00:14:59,710
I'm actually registering the avatar's icon set with the MD

00:14:59,710 --> 00:15:00,890
icon provider.

00:15:00,890 --> 00:15:02,530
And you can't quite see it here.

00:15:02,530 --> 00:15:03,030
We'll go--

00:15:03,030 --> 00:15:04,510
NAOMI BLACK: Scroll it a little further, brother.

00:15:04,510 --> 00:15:05,010
TOM BURLESON: There we go.

00:15:05,010 --> 00:15:07,910
And I've also said that every single avatar within that set

00:15:07,910 --> 00:15:11,760
is 128 by 128 pixels.

00:15:11,760 --> 00:15:14,742
If I come back to our page here, things are looking pretty good.

00:15:14,742 --> 00:15:16,450
NAOMI BLACK: They're looking pretty good.

00:15:16,450 --> 00:15:18,491
I think we probably have a typo with that button,

00:15:18,491 --> 00:15:20,370
because that title is not looking right.

00:15:20,370 --> 00:15:20,860
TOM BURLESON: I think you're right.

00:15:20,860 --> 00:15:22,050
Let's go back real quick.

00:15:22,050 --> 00:15:29,854


00:15:29,854 --> 00:15:31,312
I'm not sure what's going on there.

00:15:31,312 --> 00:15:31,650
We'll come back to that.

00:15:31,650 --> 00:15:32,560
NAOMI BLACK: Go up to the line with your controller

00:15:32,560 --> 00:15:34,239
where you added [INAUDIBLE].

00:15:34,239 --> 00:15:36,780
TOM BURLESON: Let's get rid of this button just for a moment.

00:15:36,780 --> 00:15:38,363
Let's make sure it lays out correctly.

00:15:38,363 --> 00:15:39,680
OK.

00:15:39,680 --> 00:15:45,480
And now if I come in here-- ah, we forgot.

00:15:45,480 --> 00:15:46,671
So this is a good point.

00:15:46,671 --> 00:15:47,670
What did we forget here?

00:15:47,670 --> 00:15:50,390
We forgot to say that it is going

00:15:50,390 --> 00:15:52,220
to lay out things in a horizontal fashion,

00:15:52,220 --> 00:15:52,805
its content.

00:15:52,805 --> 00:15:54,019
NAOMI BLACK: Ah, more layout.

00:15:54,019 --> 00:15:55,560
TOM BURLESON: So often, when it's not

00:15:55,560 --> 00:15:57,210
laying out the way you want, start

00:15:57,210 --> 00:15:59,920
looking at the layout API.

00:15:59,920 --> 00:16:01,817
Might want to look at it and layout row.

00:16:01,817 --> 00:16:03,400
Now it's starting to look pretty nice.

00:16:03,400 --> 00:16:04,290
NAOMI BLACK: Ah, much better.

00:16:04,290 --> 00:16:05,700
I'm having a good feeling about this.

00:16:05,700 --> 00:16:06,200
All right.

00:16:06,200 --> 00:16:08,650
So we have buttons, we can click them, they have ripples.

00:16:08,650 --> 00:16:11,180
Can you resize the screen so I can see how pretty this is?

00:16:11,180 --> 00:16:12,180
NAOMI BLACK: Yes, I can.

00:16:12,180 --> 00:16:12,692
Here we go.

00:16:12,692 --> 00:16:13,650
NAOMI BLACK: All right.

00:16:13,650 --> 00:16:15,316
And can we click on that button and have

00:16:15,316 --> 00:16:16,900
our bottom sheet pop up?

00:16:16,900 --> 00:16:18,136
TOM BURLESON: Yes.

00:16:18,136 --> 00:16:20,010
Ah, no we can't, because we haven't hooked up

00:16:20,010 --> 00:16:22,700
our buttons to our event handlers within our controller.

00:16:22,700 --> 00:16:24,440
NAOMI BLACK: Oh, we have to add them into the data model.

00:16:24,440 --> 00:16:24,650
All right.

00:16:24,650 --> 00:16:25,358
Let's go do that.

00:16:25,358 --> 00:16:27,480
TOM BURLESON: Let's do that next.

00:16:27,480 --> 00:16:33,876
So if I come back down here to our Share button right here--

00:16:33,876 --> 00:16:36,000
now we're telling it to use the share event handler

00:16:36,000 --> 00:16:37,260
feature within our controller.

00:16:37,260 --> 00:16:42,650
And let's go up here to our Menu button.

00:16:42,650 --> 00:16:45,050
We've also told it to programmatically toggle

00:16:45,050 --> 00:16:47,520
the side nav open and closed.

00:16:47,520 --> 00:16:51,139
If I come back to our web page, there we go.

00:16:51,139 --> 00:16:52,180
There's our bottom sheet.

00:16:52,180 --> 00:16:54,310
That's looking pretty nice.

00:16:54,310 --> 00:16:57,000
And ah, but that's not working.

00:16:57,000 --> 00:16:58,620
And the reason that's not working

00:16:58,620 --> 00:17:01,067
is that the side nav is currently open.

00:17:01,067 --> 00:17:02,650
And really, what we shouldn't be doing

00:17:02,650 --> 00:17:05,540
is showing this Open and Close button if the side nav is open.

00:17:05,540 --> 00:17:07,310
We really only want to see that when

00:17:07,310 --> 00:17:09,242
it's been responsively hidden.

00:17:09,242 --> 00:17:10,200
NAOMI BLACK: All right.

00:17:10,200 --> 00:17:10,825
Let's add that.

00:17:10,825 --> 00:17:13,010
TOM BURLESON: OK.

00:17:13,010 --> 00:17:15,554
So if I come back up here to the button, what I really

00:17:15,554 --> 00:17:17,970
want to say is I want to use another feature of our layout

00:17:17,970 --> 00:17:21,940
API to say that this button should be hidden

00:17:21,940 --> 00:17:24,390
when it's greater than 600 pixels,

00:17:24,390 --> 00:17:26,619
so when is greater than small.

00:17:26,619 --> 00:17:29,387
If I come back here, we can see that it's hidden.

00:17:29,387 --> 00:17:31,220
NAOMI BLACK: Ah, that's looking much better.

00:17:31,220 --> 00:17:32,345
TOM BURLESON: It's visible.

00:17:32,345 --> 00:17:35,337
And if I click on this here, now things are looking pretty nice.

00:17:35,337 --> 00:17:37,920
NAOMI BLACK: Witness the power of our fully functional Angular

00:17:37,920 --> 00:17:38,639
application.

00:17:38,639 --> 00:17:39,430
NAOMI BLACK: Wohoo!

00:17:39,430 --> 00:17:41,374
[APPLAUSE]

00:17:41,374 --> 00:17:43,790


00:17:43,790 --> 00:17:44,290
Wait.

00:17:44,290 --> 00:17:46,240
There's something I've forgotten.

00:17:46,240 --> 00:17:47,359
My friend Lucy is blind.

00:17:47,359 --> 00:17:49,150
And if she can't use this app on her phone,

00:17:49,150 --> 00:17:50,470
she's going to kill me.

00:17:50,470 --> 00:17:50,870
TOM BURLESON: That's true.

00:17:50,870 --> 00:17:51,770
NAOMI BLACK: Have we made this accessible?

00:17:51,770 --> 00:17:53,140
TOM BURLESON: It should be accessible.

00:17:53,140 --> 00:17:54,515
NAOMI BLACK: It should be, right?

00:17:54,515 --> 00:17:56,964
Because Angular Material has accessibility built in.

00:17:56,964 --> 00:17:59,130
But we actually need you, the application developer,

00:17:59,130 --> 00:18:00,120
to help us with this.

00:18:00,120 --> 00:18:05,462
We've done a lot using ngAria to infer the correct accessibility

00:18:05,462 --> 00:18:06,920
rules that we should add to things,

00:18:06,920 --> 00:18:08,500
but we don't know how you're going to put them together

00:18:08,500 --> 00:18:09,270
in an app.

00:18:09,270 --> 00:18:11,090
So when we don't have enough information,

00:18:11,090 --> 00:18:12,272
we actually post a warning.

00:18:12,272 --> 00:18:14,230
So let's go look in the console window quickly.

00:18:14,230 --> 00:18:16,230
TOM BURLESON: Certainly.

00:18:16,230 --> 00:18:19,724
Ah, we do see two warnings from the buttons.

00:18:19,724 --> 00:18:20,390
NAOMI BLACK: Ah.

00:18:20,390 --> 00:18:22,140
So this reminds us that our buttons are images,

00:18:22,140 --> 00:18:23,400
and we need to add some text.

00:18:23,400 --> 00:18:23,620
TOM BURLESON: Right.

00:18:23,620 --> 00:18:25,460
So if you don't have labels on your buttons,

00:18:25,460 --> 00:18:28,590
our Angular Material uses ngAria and actually determines

00:18:28,590 --> 00:18:31,040
that there's some information missing and will give you

00:18:31,040 --> 00:18:31,590
a warning.

00:18:31,590 --> 00:18:32,650
So let's fix that.

00:18:32,650 --> 00:18:34,160
NAOMI BLACK: Actually, we're running a little short on time.

00:18:34,160 --> 00:18:35,980
So I'm going to ask you all to trust us

00:18:35,980 --> 00:18:38,480
that we've added our Aria label correctly to these buttons.

00:18:38,480 --> 00:18:38,950
TOM BURLESON: OK.

00:18:38,950 --> 00:18:40,430
NAOMI BLACK: Let's go back to the slides.

00:18:40,430 --> 00:18:41,430
TOM BURLESON: All right.

00:18:41,430 --> 00:18:45,614


00:18:45,614 --> 00:18:46,280
NAOMI BLACK: OK.

00:18:46,280 --> 00:18:47,830
We have written code.

00:18:47,830 --> 00:18:51,090
So we've talked to you about how we can do all this in ES 5,

00:18:51,090 --> 00:18:52,630
and that was pretty exciting.

00:18:52,630 --> 00:18:55,654
We wish we had time to show you how we can do all this in ES 6.

00:18:55,654 --> 00:18:56,695
NAOMI BLACK: I love ES 6.

00:18:56,695 --> 00:18:58,028
NAOMI BLACK: We don't have time.

00:18:58,028 --> 00:18:59,970
ES 6 lets us do really cool things

00:18:59,970 --> 00:19:02,730
to make the structure of our app much tidier and cleaner.

00:19:02,730 --> 00:19:04,850
To prove this to you, we've posted this

00:19:04,850 --> 00:19:07,570
as part of our starter app, and you can go find it at the links

00:19:07,570 --> 00:19:07,900
here.

00:19:07,900 --> 00:19:09,430
Or if you don't remember them, just

00:19:09,430 --> 00:19:11,530
go look for our Angular Material main page,

00:19:11,530 --> 00:19:12,520
and there's a link through to them.

00:19:12,520 --> 00:19:14,686
And you can see how we've worked all this same stuff

00:19:14,686 --> 00:19:16,080
through in ES 6.

00:19:16,080 --> 00:19:22,490
TOM BURLESON: So you can use Angular Material 1.x right now

00:19:22,490 --> 00:19:23,190
with ES 6.

00:19:23,190 --> 00:19:25,684


00:19:25,684 --> 00:19:26,350
NAOMI BLACK: OK.

00:19:26,350 --> 00:19:27,060
TOM BURLESON: OK, so what's next?

00:19:27,060 --> 00:19:28,190
NAOMI BLACK: What's next?

00:19:28,190 --> 00:19:30,140
I think people are getting pretty eager for us

00:19:30,140 --> 00:19:31,110
to land 1.0.

00:19:31,110 --> 00:19:31,860
TOM BURLESON: Yes.

00:19:31,860 --> 00:19:33,230
We've heard some feedback.

00:19:33,230 --> 00:19:34,630
NAOMI BLACK: We have a little more work to do, though.

00:19:34,630 --> 00:19:35,760
We're missing a few components.

00:19:35,760 --> 00:19:37,010
Do you remember what they are?

00:19:37,010 --> 00:19:39,260
TOM BURLESON: So we're missing the chips component

00:19:39,260 --> 00:19:41,741
and the date picker, and I think that's it.

00:19:41,741 --> 00:19:43,240
NAOMI BLACK: Is it perhaps something

00:19:43,240 --> 00:19:44,504
that rhymes with menu?

00:19:44,504 --> 00:19:46,420
TOM BURLESON: Ah, we also need to do the menu.

00:19:46,420 --> 00:19:48,940
We've had a lot of vocal feedback on that one.

00:19:48,940 --> 00:19:49,610
NAOMI BLACK: Yeah, if we don't land menu,

00:19:49,610 --> 00:19:51,420
I think people may hunt us down and kill us.

00:19:51,420 --> 00:19:51,890
TOM BURLESON: They're definitely going

00:19:51,890 --> 00:19:53,410
to throw vegetables at me.

00:19:53,410 --> 00:19:53,800
NAOMI BLACK: All right.

00:19:53,800 --> 00:19:55,633
So we're going to land three more components

00:19:55,633 --> 00:19:56,620
before we declare 1.0.

00:19:56,620 --> 00:19:58,710
We're also going to spend some time making sure

00:19:58,710 --> 00:20:00,869
that everything is really performant and fast.

00:20:00,869 --> 00:20:02,910
We're going to look at polish on multiple devices

00:20:02,910 --> 00:20:04,940
and get everything nailed down really solidly.

00:20:04,940 --> 00:20:06,220
We're also not going to take too long.

00:20:06,220 --> 00:20:08,761
We're going to have all of this ready for you by this summer.

00:20:08,761 --> 00:20:09,490
Maybe sooner.

00:20:09,490 --> 00:20:10,190
TOM BURLESON: I hope so.

00:20:10,190 --> 00:20:10,860
With a little work.

00:20:10,860 --> 00:20:12,693
NAOMI BLACK: We're going to try really hard.

00:20:12,693 --> 00:20:15,115


00:20:15,115 --> 00:20:16,880
TOM BURLESON: I guess-- so thank you.

00:20:16,880 --> 00:20:17,790
NAOMI BLACK: This is our last slide.

00:20:17,790 --> 00:20:18,810
And we are out of time.

00:20:18,810 --> 00:20:20,930
So thank you so much for listening to us.

00:20:20,930 --> 00:20:22,751
Oh, I forgot one more thing.

00:20:22,751 --> 00:20:23,745
[APPLAUSE]

00:20:23,745 --> 00:20:24,739
I forgot--

00:20:24,739 --> 00:20:27,762
TOM BURLESON: What did you forget?

00:20:27,762 --> 00:20:28,720
NAOMI BLACK: All right.

00:20:28,720 --> 00:20:29,860
Frosty is going to kill me, but I'm

00:20:29,860 --> 00:20:31,860
going to steal two more seconds to tell you guys

00:20:31,860 --> 00:20:34,090
that you are surely wondering about Angular 2.

00:20:34,090 --> 00:20:37,120
And we are working on a full version of Angular Material

00:20:37,120 --> 00:20:38,290
in Angular 2.

00:20:38,290 --> 00:20:39,150
It's very rough now.

00:20:39,150 --> 00:20:40,130
We have nothing to show you.

00:20:40,130 --> 00:20:41,270
But later this year, you should be

00:20:41,270 --> 00:20:43,140
able to see the first sets of components.

00:20:43,140 --> 00:20:44,740
And we'll be continuing to develop

00:20:44,740 --> 00:20:47,200
Angular Material on the 1.0 branch

00:20:47,200 --> 00:20:49,282
with additional components like data table

00:20:49,282 --> 00:20:51,740
and other things that are coming out of the material design

00:20:51,740 --> 00:20:52,270
spec.

00:20:52,270 --> 00:20:53,460
TOM BURLESON: Really exciting times.

00:20:53,460 --> 00:20:54,180
NAOMI BLACK: We are super excited.

00:20:54,180 --> 00:20:54,550
OK.

00:20:54,550 --> 00:20:55,490
We've got to get off the stage.

00:20:55,490 --> 00:20:56,260
Thank you so much.

00:20:56,260 --> 00:20:57,676
TOM BURLESON: Thank you, everyone.

00:20:57,676 --> 00:20:59,610
[APPLAUSE]


YouTube URL: https://www.youtube.com/watch?v=Qi31oO5u33U


