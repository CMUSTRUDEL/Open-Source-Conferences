Title: OpenPOWER Summit 2016 - Open your Big Data solutions to gain insights with IBM
Publication date: 2016-04-29
Playlist: OpenPOWER Summit 2016
Description: 
	Presented by Christophe Menichetti of IBM
Captions: 
	00:00:00,000 --> 00:00:05,609
so good morning everyone so my name is

00:00:02,879 --> 00:00:07,680
Christopher Nikki I'm from mum pari IBM

00:00:05,609 --> 00:00:10,170
client center from employee very

00:00:07,680 --> 00:00:13,500
beautiful and sunny city of the south of

00:00:10,170 --> 00:00:15,599
France so I'm French and we have a very

00:00:13,500 --> 00:00:17,910
important tradition in France speaking

00:00:15,599 --> 00:00:21,330
with French accent so I always respect

00:00:17,910 --> 00:00:24,689
the tradition so more seriously I'm an

00:00:21,330 --> 00:00:27,660
IT architect mainly focus on big data

00:00:24,689 --> 00:00:30,449
and poor nutrition precise and i'm here

00:00:27,660 --> 00:00:33,690
to present you briefly or the big data

00:00:30,449 --> 00:00:39,120
offering on poor linux and the open

00:00:33,690 --> 00:00:42,000
strategy with IBM and and big data so

00:00:39,120 --> 00:00:44,640
this is what we we call the a big data

00:00:42,000 --> 00:00:47,820
and analytics platform on the left you

00:00:44,640 --> 00:00:49,680
can find all the the data source is the

00:00:47,820 --> 00:00:53,210
traditional one what we call operational

00:00:49,680 --> 00:00:55,829
so sees you can bring that to

00:00:53,210 --> 00:00:58,469
traditional and eighty core solutions

00:00:55,829 --> 00:01:01,170
such as reporting or predictive tools

00:00:58,469 --> 00:01:03,629
and you can see on the left as well all

00:01:01,170 --> 00:01:06,860
the new data source is what we call

00:01:03,629 --> 00:01:10,049
unstructured data such as log RFID

00:01:06,860 --> 00:01:12,390
twitter facebook and and so on so the

00:01:10,049 --> 00:01:14,930
idea is that big data brings new data

00:01:12,390 --> 00:01:18,270
sources into your already existing

00:01:14,930 --> 00:01:20,700
reporting and dashboard to discover a

00:01:18,270 --> 00:01:23,400
new business pattern and maybe to

00:01:20,700 --> 00:01:26,430
discover or to gain new insight for your

00:01:23,400 --> 00:01:30,210
for your business so a dupe air is

00:01:26,430 --> 00:01:33,000
acting as an exploring done as a landing

00:01:30,210 --> 00:01:35,520
zone where you put all your data you

00:01:33,000 --> 00:01:37,369
walk on this data you refine this data

00:01:35,520 --> 00:01:40,799
and you push this data to your

00:01:37,369 --> 00:01:42,570
enterprise warehouse and on top of that

00:01:40,799 --> 00:01:45,869
you work with your reporting and

00:01:42,570 --> 00:01:48,590
dashboard tool for sure you can find on

00:01:45,869 --> 00:01:51,990
top of that what we call trimming tools

00:01:48,590 --> 00:01:54,210
to a form across organ processing and

00:01:51,990 --> 00:01:57,439
you'll find all the things to speed up

00:01:54,210 --> 00:02:00,930
your decision pass such as appliance or

00:01:57,439 --> 00:02:03,990
enumeration for what we call data Mart

00:02:00,930 --> 00:02:06,240
ok so if you look at the IBM portfolio

00:02:03,990 --> 00:02:08,789
in term of software solution you can

00:02:06,240 --> 00:02:11,670
find in foster a big inside as a dupe

00:02:08,789 --> 00:02:13,680
big insight is a IBM aduke distribution

00:02:11,670 --> 00:02:15,890
you can find Oh

00:02:13,680 --> 00:02:18,959
secured at a solution to manage

00:02:15,890 --> 00:02:21,140
relational store such as Enterprise

00:02:18,959 --> 00:02:24,989
warehouse with pure data for operational

00:02:21,140 --> 00:02:27,689
and I tix pure data for analytics is an

00:02:24,989 --> 00:02:30,799
akita technology and you can find DB

00:02:27,689 --> 00:02:33,450
tube glue for in-memory solution

00:02:30,799 --> 00:02:36,389
classically you can find SPSS for

00:02:33,450 --> 00:02:39,930
predictive solution cognos for reporting

00:02:36,389 --> 00:02:42,659
tools and what we call Watson Explorer

00:02:39,930 --> 00:02:49,139
formerly InfoSphere data Explorer for

00:02:42,659 --> 00:02:51,540
discovery part and content analytics all

00:02:49,139 --> 00:02:53,930
of these IBM software is running on

00:02:51,540 --> 00:02:57,180
pourra system supported on power system

00:02:53,930 --> 00:02:59,310
regarding Big Data solution a Dupin

00:02:57,180 --> 00:03:02,189
streaming solution is just only

00:02:59,310 --> 00:03:04,169
supported on Linux by design as any

00:03:02,189 --> 00:03:07,250
other adult distribution just running on

00:03:04,169 --> 00:03:09,810
Linux on poor and if you look at all the

00:03:07,250 --> 00:03:13,709
business intelligence classical tools

00:03:09,810 --> 00:03:17,040
such as cognos SPSS or irrational

00:03:13,709 --> 00:03:24,930
database is supported on boss AIX and n

00:03:17,040 --> 00:03:27,449
Linux so when you you deal with big data

00:03:24,930 --> 00:03:29,790
analytics you deal with what we call

00:03:27,449 --> 00:03:32,370
that analysis and when will you deal

00:03:29,790 --> 00:03:34,439
with that analysis you deal with user

00:03:32,370 --> 00:03:36,930
getting more and more more more user

00:03:34,439 --> 00:03:38,849
getting more and more report faster and

00:03:36,930 --> 00:03:41,720
butter so at the end it means that you

00:03:38,849 --> 00:03:45,509
deal with a very well balanced workload

00:03:41,720 --> 00:03:47,849
mixing between CPU performance memory

00:03:45,509 --> 00:03:51,299
performance and I your performance this

00:03:47,849 --> 00:03:53,669
is why we we say that 480 design for big

00:03:51,299 --> 00:03:56,489
data because we increase compared to

00:03:53,669 --> 00:03:59,459
power 7 we increase the cpu performance

00:03:56,489 --> 00:04:02,759
the memory performance in terms of

00:03:59,459 --> 00:04:05,069
bandwidth and encash and where has the

00:04:02,759 --> 00:04:08,819
interior design very efficient and

00:04:05,069 --> 00:04:10,709
performance cpu processor increasing the

00:04:08,819 --> 00:04:15,269
number of core and the performance of

00:04:10,709 --> 00:04:18,780
the CPU to target multiple market laptop

00:04:15,269 --> 00:04:22,049
PC enterprise server or smartphone IBM

00:04:18,780 --> 00:04:24,240
II just focus on workload for enterprise

00:04:22,049 --> 00:04:26,290
server and for big data that's a

00:04:24,240 --> 00:04:31,390
different approach between poor

00:04:26,290 --> 00:04:33,640
processor and intel processor so this is

00:04:31,390 --> 00:04:37,230
the picture of the power system for big

00:04:33,640 --> 00:04:40,600
data analytics offering simple for

00:04:37,230 --> 00:04:42,280
offering all of them are print equity

00:04:40,600 --> 00:04:44,350
then optimized csme means that it's

00:04:42,280 --> 00:04:47,170
already install and configure for it for

00:04:44,350 --> 00:04:50,590
you and you means that is combined IBM

00:04:47,170 --> 00:04:52,930
software and 48 system the first one

00:04:50,590 --> 00:04:56,080
although the first one is what we call

00:04:52,930 --> 00:04:59,830
IV insertion for loop combining db2 blue

00:04:56,080 --> 00:05:01,630
on power system the second one is what

00:04:59,830 --> 00:05:05,410
we call IBM solution for analytics

00:05:01,630 --> 00:05:07,900
combining cognos spss on 408 this is for

00:05:05,410 --> 00:05:11,320
the analytical part of the solution and

00:05:07,900 --> 00:05:13,900
if you regard if you look at the Big

00:05:11,320 --> 00:05:15,760
Data solution true solution the first

00:05:13,900 --> 00:05:18,910
one is what we call IBN the tangent for

00:05:15,760 --> 00:05:21,550
no sequel combining registration a

00:05:18,910 --> 00:05:24,250
third-party solution with cappy flash

00:05:21,550 --> 00:05:26,550
and power 8 system and the last one is

00:05:24,250 --> 00:05:29,860
what we call IBM data engine for

00:05:26,550 --> 00:05:33,880
analytics combining a dupe with power

00:05:29,860 --> 00:05:36,070
system plus gpfs the IBM files file

00:05:33,880 --> 00:05:38,230
system is rigid and the platform

00:05:36,070 --> 00:05:45,490
computing for walk with management at

00:05:38,230 --> 00:05:49,000
one so in one word the IBM strategy

00:05:45,490 --> 00:05:51,970
regarding big data is to provide more

00:05:49,000 --> 00:05:54,610
performance and I believe that CPU and

00:05:51,970 --> 00:05:56,500
memory would be not enough to give this

00:05:54,610 --> 00:06:00,160
performance we need big data

00:05:56,500 --> 00:06:04,030
transmission is acceleration from GPU

00:06:00,160 --> 00:06:07,540
from i/o provider or cut from FPGA from

00:06:04,030 --> 00:06:10,930
disk from flush so that's the open

00:06:07,540 --> 00:06:14,140
strategy with the IBM with big data so i

00:06:10,930 --> 00:06:17,620
will give you three example not going

00:06:14,140 --> 00:06:19,210
into g0d dive detail of this solution

00:06:17,620 --> 00:06:22,090
because there is there are so many

00:06:19,210 --> 00:06:24,340
presentation with more technical detail

00:06:22,090 --> 00:06:27,370
regarding this notion but just to to

00:06:24,340 --> 00:06:29,590
explain the IBM strategy the first one

00:06:27,370 --> 00:06:32,080
is what we call IBN data engine for no

00:06:29,590 --> 00:06:35,850
sequel what does it mean means that if

00:06:32,080 --> 00:06:38,500
you would like to deploy reddy's no cql

00:06:35,850 --> 00:06:39,980
solution in memory for instance

00:06:38,500 --> 00:06:42,740
something like 6

00:06:39,980 --> 00:06:46,150
Tera Byte off of data into your no

00:06:42,740 --> 00:06:49,280
sequel database you will need to buy 24

00:06:46,150 --> 00:06:52,820
entire server with each on each server

00:06:49,280 --> 00:06:55,850
with 256 gigabyte of memory to be able

00:06:52,820 --> 00:06:58,610
to endure these six terabytes database

00:06:55,850 --> 00:07:01,970
instead of that you can deploy that into

00:06:58,610 --> 00:07:05,540
two component the first one is a poorer

00:07:01,970 --> 00:07:09,650
server to you power server press to you

00:07:05,540 --> 00:07:11,960
flash system using copy to manage all

00:07:09,650 --> 00:07:15,380
these in-memory solution with flash

00:07:11,960 --> 00:07:17,900
system so at the end three date with the

00:07:15,380 --> 00:07:20,330
ratio of 24 for your infrastructure but

00:07:17,900 --> 00:07:22,910
at the end more important you are going

00:07:20,330 --> 00:07:26,950
to save three times more doors and to

00:07:22,910 --> 00:07:32,810
save sixth time less straight fro

00:07:26,950 --> 00:07:35,570
Rackspace on the flow another example is

00:07:32,810 --> 00:07:37,340
about gzip solution is really important

00:07:35,570 --> 00:07:40,130
when you are going to deploy a dupe

00:07:37,340 --> 00:07:42,800
cluster because a deep crater is going

00:07:40,130 --> 00:07:46,280
to use a gfs and a replication of three

00:07:42,800 --> 00:07:48,800
a factor of three of your copy and to do

00:07:46,280 --> 00:07:51,440
so you need also to compress your data

00:07:48,800 --> 00:07:54,110
and you are going to use gzip very often

00:07:51,440 --> 00:07:56,780
in to your other cluster in this example

00:07:54,110 --> 00:07:59,240
is this is not a dupe is based on human

00:07:56,780 --> 00:08:02,600
genome but just to show you that if you

00:07:59,240 --> 00:08:05,600
are going to combine poor 8 + FPGA you

00:08:02,600 --> 00:08:09,320
are you can gain some performance around

00:08:05,600 --> 00:08:15,710
50 50 times faster than audio software

00:08:09,320 --> 00:08:17,840
solution for gzip compression the last

00:08:15,710 --> 00:08:21,470
example is about spark spark is a new

00:08:17,840 --> 00:08:24,230
way of managing a big data solution is

00:08:21,470 --> 00:08:27,560
something like Hadoop in memory to be

00:08:24,230 --> 00:08:30,140
faster from the solution view and it's

00:08:27,560 --> 00:08:32,570
managing order and structure data you

00:08:30,140 --> 00:08:35,090
can put into your spark with a memory

00:08:32,570 --> 00:08:38,810
solutions package in memory framework

00:08:35,090 --> 00:08:42,110
once again you are able to take benefit

00:08:38,810 --> 00:08:45,100
of PN flash solution to reduce your

00:08:42,110 --> 00:08:49,090
memory front rate compared to Intel

00:08:45,100 --> 00:08:49,090
implementation of a spark

00:08:50,800 --> 00:08:58,220
so once I to sum up everything if you

00:08:55,370 --> 00:09:01,310
look at the big data competitor

00:08:58,220 --> 00:09:04,519
battleground you can see that the IBM SH

00:09:01,310 --> 00:09:06,829
is quite simple really simple two things

00:09:04,519 --> 00:09:09,620
one provider one unique provider from

00:09:06,829 --> 00:09:12,740
the software with a do big insight to

00:09:09,620 --> 00:09:14,930
the aware with power 8 system for

00:09:12,740 --> 00:09:18,170
simplicity and quality of your solution

00:09:14,930 --> 00:09:21,170
and the second message is open to Lucien

00:09:18,170 --> 00:09:24,290
for the performance and the flexibility

00:09:21,170 --> 00:09:27,589
of your solution with also open pore

00:09:24,290 --> 00:09:31,579
solution such as Cappy fpg and so on and

00:09:27,589 --> 00:09:34,970
if you look at the competitors you can

00:09:31,579 --> 00:09:37,370
see a mix between different provider

00:09:34,970 --> 00:09:40,850
provider from cpu provider from hardware

00:09:37,370 --> 00:09:43,519
provider from a dupe solution and if you

00:09:40,850 --> 00:09:46,970
look all these competitors you can see a

00:09:43,519 --> 00:09:50,449
mix between proprietary strategy from

00:09:46,970 --> 00:09:53,930
Intel from cpu proprietary strategy from

00:09:50,449 --> 00:09:56,149
crowd aha for a dupe solution and mixing

00:09:53,930 --> 00:09:58,040
out of the order of things compared to

00:09:56,149 --> 00:10:04,790
the pre integrity than optimized system

00:09:58,040 --> 00:10:07,550
with one provider from from IBM last

00:10:04,790 --> 00:10:10,699
message but not the least is our center

00:10:07,550 --> 00:10:13,670
we can help you in defining big data

00:10:10,699 --> 00:10:16,610
solution sizing architectural design or

00:10:13,670 --> 00:10:20,500
workshop and we can help you in testing

00:10:16,610 --> 00:10:22,760
this kind of solution with POC PG or

00:10:20,500 --> 00:10:25,730
performance benchmark in one unique

00:10:22,760 --> 00:10:29,019
center why because we can combine many

00:10:25,730 --> 00:10:31,939
different ears build a task is but also

00:10:29,019 --> 00:10:35,449
HPC skills with code optimization or

00:10:31,939 --> 00:10:38,420
cluster performance with Pascal teams

00:10:35,449 --> 00:10:42,230
hpc teams and we can combine that with

00:10:38,420 --> 00:10:46,610
also all the FPGA and an accelerated

00:10:42,230 --> 00:10:49,250
technology with Jarmo royal teams so

00:10:46,610 --> 00:10:51,380
feel free to contact us free free to

00:10:49,250 --> 00:10:53,470
attend to pascal session to roll

00:10:51,380 --> 00:10:57,079
something tomorrow tomorrow morning at

00:10:53,470 --> 00:10:59,750
tomorrow afternoon at 1pm and feel free

00:10:57,079 --> 00:11:01,150
to attend to the on the friday to the

00:10:59,750 --> 00:11:04,020
fpga

00:11:01,150 --> 00:11:07,860
Ron table and so on with a with drama

00:11:04,020 --> 00:11:07,860

YouTube URL: https://www.youtube.com/watch?v=OHFSA9V1Xos


