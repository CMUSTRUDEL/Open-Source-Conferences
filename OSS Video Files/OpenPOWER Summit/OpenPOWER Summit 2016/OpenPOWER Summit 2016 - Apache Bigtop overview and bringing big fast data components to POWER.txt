Title: OpenPOWER Summit 2016 - Apache Bigtop overview and bringing big fast data components to POWER
Publication date: 2016-04-29
Playlist: OpenPOWER Summit 2016
Description: 
	Presented by Nate D'Amico of Apache Bigtop
Captions: 
	00:00:00,000 --> 00:00:03,959
okay hi my name is Nate D'Amico I'm

00:00:02,419 --> 00:00:06,210
representing the Apache Software

00:00:03,959 --> 00:00:11,190
Foundation and the Apache Big Top

00:00:06,210 --> 00:00:13,049
project I'll give you a little bit of an

00:00:11,190 --> 00:00:14,519
overview of what Big Top is how many

00:00:13,049 --> 00:00:19,260
people are familiar with big top and or

00:00:14,519 --> 00:00:22,640
other Apache foundation projects it's

00:00:19,260 --> 00:00:25,470
one of the largest Big Data hosting of

00:00:22,640 --> 00:00:29,789
open source projects things like Hadoop

00:00:25,470 --> 00:00:31,800
HBase Park and then some people from

00:00:29,789 --> 00:00:33,989
open power have done an initial port so

00:00:31,800 --> 00:00:39,300
that Big Top can build distributions for

00:00:33,989 --> 00:00:43,280
open power users so Big Top was started

00:00:39,300 --> 00:00:45,480
out of the Hadoop in HDFS team at Yahoo

00:00:43,280 --> 00:00:47,399
it wasn't called Big Top at that time

00:00:45,480 --> 00:00:49,020
but they started to build tooling and

00:00:47,399 --> 00:00:53,010
frameworks for building their own

00:00:49,020 --> 00:00:54,870
internal distribution a couple of core

00:00:53,010 --> 00:00:56,219
guys and moving on to cloud era who was

00:00:54,870 --> 00:00:58,920
the first commercialized Hadoop

00:00:56,219 --> 00:01:02,219
distribution while they're out cloud era

00:00:58,920 --> 00:01:05,100
they built what is now Big Top open

00:01:02,219 --> 00:01:06,990
sources to the foundation so over the

00:01:05,100 --> 00:01:08,130
past four plus years Big Top is

00:01:06,990 --> 00:01:10,890
basically setting the standard for

00:01:08,130 --> 00:01:12,780
testing packaging and integration of all

00:01:10,890 --> 00:01:17,850
the big and now what's dubbed this fast

00:01:12,780 --> 00:01:21,950
data components such as spark and things

00:01:17,850 --> 00:01:23,850
like flank as well in Big Top

00:01:21,950 --> 00:01:26,970
everything's kind of treated as like a

00:01:23,850 --> 00:01:30,390
component so every project is dubbed a

00:01:26,970 --> 00:01:33,509
component and so kind of mentioned a

00:01:30,390 --> 00:01:35,280
couple already these are kind of some of

00:01:33,509 --> 00:01:38,340
the more popular ones there's about

00:01:35,280 --> 00:01:40,110
twenty six in total we have a couple

00:01:38,340 --> 00:01:43,770
more coming on in time for Apache con in

00:01:40,110 --> 00:01:47,070
a few months here and really what you

00:01:43,770 --> 00:01:50,100
get is once you start using one or more

00:01:47,070 --> 00:01:51,540
of these components together you kind of

00:01:50,100 --> 00:01:54,899
have this matrix across the top of

00:01:51,540 --> 00:01:57,630
supported platforms at the OS level and

00:01:54,899 --> 00:02:00,030
down the left side you have the 20x

00:01:57,630 --> 00:02:01,380
components in Big Top so then when you

00:02:00,030 --> 00:02:03,960
take another dimension of versions you

00:02:01,380 --> 00:02:05,369
have quite a big dependency mess so Big

00:02:03,960 --> 00:02:08,220
Top kind of brings it all together into

00:02:05,369 --> 00:02:10,129
a framework so as you can see like from

00:02:08,220 --> 00:02:14,069
a boon to down to Debbie and at the end

00:02:10,129 --> 00:02:19,879
the open power people came on and did

00:02:14,069 --> 00:02:22,049
yet another one for Debian on power so

00:02:19,879 --> 00:02:24,569
solving this kind of dependency build

00:02:22,049 --> 00:02:26,640
test deploy a problem it was heavily

00:02:24,569 --> 00:02:29,760
focused on the proliferation of big data

00:02:26,640 --> 00:02:31,500
in Hadoop distributions the space has

00:02:29,760 --> 00:02:34,379
kind of consolidated down to a couple

00:02:31,500 --> 00:02:36,150
core players and at this point from a

00:02:34,379 --> 00:02:38,129
project perspective kind of the first

00:02:36,150 --> 00:02:40,379
generation of the project as its kind of

00:02:38,129 --> 00:02:41,670
mission accomplished so every major

00:02:40,379 --> 00:02:43,709
Hadoop distribution in the world is

00:02:41,670 --> 00:02:46,470
based on Big Top in some way shape or

00:02:43,709 --> 00:02:49,109
form some of the most recent ones is

00:02:46,470 --> 00:02:53,430
Amazon ported over EMR to Big Top last

00:02:49,109 --> 00:02:57,060
year and just recently last week Oh dpi

00:02:53,430 --> 00:03:00,030
which is kind of the pivotal Hortonworks

00:02:57,060 --> 00:03:03,540
IBM consortium of standardizing the

00:03:00,030 --> 00:03:05,370
Hadoop world that was just announced the

00:03:03,540 --> 00:03:12,209
v1 release that is now based on Big Talk

00:03:05,370 --> 00:03:14,909
as well so as we look ahead it's great

00:03:12,209 --> 00:03:17,549
to solve the problems for the

00:03:14,909 --> 00:03:18,930
distribution folks but we're kind of

00:03:17,549 --> 00:03:20,400
saying like okay well now people are

00:03:18,930 --> 00:03:23,040
saying like I have all this data I have

00:03:20,400 --> 00:03:24,359
this tools to store it now what can my

00:03:23,040 --> 00:03:26,220
data engineers do with it so we're

00:03:24,359 --> 00:03:27,540
starting to look and bring people in the

00:03:26,220 --> 00:03:31,620
community that are doing things like

00:03:27,540 --> 00:03:34,440
test data generators and other fun tools

00:03:31,620 --> 00:03:38,040
and tutorials and such we're also

00:03:34,440 --> 00:03:40,260
looking to enhance the operations and

00:03:38,040 --> 00:03:42,590
deployment side so out of box all the

00:03:40,260 --> 00:03:47,160
Big Top modules come with puppet modules

00:03:42,590 --> 00:03:48,660
and if you're not a puppet user you can

00:03:47,160 --> 00:03:52,590
roll your own as well using the same

00:03:48,660 --> 00:03:54,090
templates for configuration but you can

00:03:52,590 --> 00:03:55,019
get those off the shelf so we're looking

00:03:54,090 --> 00:03:58,980
at it starting to add things like

00:03:55,019 --> 00:04:00,629
orchestration and we've been adding a

00:03:58,980 --> 00:04:05,129
lot more container and docker based

00:04:00,629 --> 00:04:07,199
stuff as well so covering that kind of

00:04:05,129 --> 00:04:10,260
gives you a brief overview of Big Top so

00:04:07,199 --> 00:04:12,510
the power folks prove put together a few

00:04:10,260 --> 00:04:14,040
slides on their efforts from a couple

00:04:12,510 --> 00:04:18,329
months ago leading and they're still

00:04:14,040 --> 00:04:19,769
kind of tuning some stuff so their

00:04:18,329 --> 00:04:22,400
original goal was to get some of the big

00:04:19,769 --> 00:04:25,380
data components running in their lab and

00:04:22,400 --> 00:04:27,240
specifically the test case example was

00:04:25,380 --> 00:04:31,470
HDFS and spark

00:04:27,240 --> 00:04:34,500
and luckily the they'd have to start

00:04:31,470 --> 00:04:36,949
from zero with openjdk which kind of big

00:04:34,500 --> 00:04:40,380
top prescribes as kind of the default

00:04:36,949 --> 00:04:43,319
for the JVM with that port it kind of

00:04:40,380 --> 00:04:45,630
gave a nice foundation so it took a

00:04:43,319 --> 00:04:51,590
couple weeks to get the initial kind of

00:04:45,630 --> 00:04:53,819
bugs out and at the time there wasn't

00:04:51,590 --> 00:04:56,009
they got most of them working there's a

00:04:53,819 --> 00:04:57,690
few more patches pending that hopefully

00:04:56,009 --> 00:05:03,270
we'll get in the next release in time

00:04:57,690 --> 00:05:04,830
for Apache cone so if you're not too

00:05:03,270 --> 00:05:06,630
familiar like just like all good

00:05:04,830 --> 00:05:10,500
open-source projects a lot of the Apache

00:05:06,630 --> 00:05:12,630
projects some gonna be quite complex to

00:05:10,500 --> 00:05:14,130
build from source yourself sometimes you

00:05:12,630 --> 00:05:15,930
might just want to do it you might be

00:05:14,130 --> 00:05:17,940
into kind of learning the innards of how

00:05:15,930 --> 00:05:19,800
the systems are building work sometimes

00:05:17,940 --> 00:05:24,180
you have to based on constraints on

00:05:19,800 --> 00:05:25,860
versioning platform support or concerns

00:05:24,180 --> 00:05:28,169
they security or otherwise that your

00:05:25,860 --> 00:05:29,940
organization might have lots of

00:05:28,169 --> 00:05:31,229
dependencies varying tools across the

00:05:29,940 --> 00:05:32,940
projects and then when you bring all of

00:05:31,229 --> 00:05:36,180
them together that's where the kind of

00:05:32,940 --> 00:05:38,840
permutations explode so a big top

00:05:36,180 --> 00:05:40,650
basically the repo itself comes

00:05:38,840 --> 00:05:44,009
self-contained with everything you need

00:05:40,650 --> 00:05:46,320
and then they just prescribe a list of

00:05:44,009 --> 00:05:48,509
component of packages that the

00:05:46,320 --> 00:05:49,889
components will depend on then

00:05:48,509 --> 00:05:52,229
everything else is in the source tree so

00:05:49,889 --> 00:06:00,630
you can just clone one of the release

00:05:52,229 --> 00:06:03,810
branches and start building away so kind

00:06:00,630 --> 00:06:06,180
of looking at it kind of like a lot of

00:06:03,810 --> 00:06:08,490
people not might not want to dig in the

00:06:06,180 --> 00:06:09,780
weeds so up levelling the experience as

00:06:08,490 --> 00:06:13,500
I kind of referred to a couple slides

00:06:09,780 --> 00:06:14,880
ago we're kind of moving towards a mode

00:06:13,500 --> 00:06:16,259
where we say like well unless you really

00:06:14,880 --> 00:06:18,360
really need to you're not going to build

00:06:16,259 --> 00:06:21,449
your whole environment from scratch so

00:06:18,360 --> 00:06:24,360
just set up docker eyes environment on a

00:06:21,449 --> 00:06:30,840
supported platform clone down the kind

00:06:24,360 --> 00:06:34,159
of uber Big Top image and clone whatever

00:06:30,840 --> 00:06:36,539
version or branch big-top you want and

00:06:34,159 --> 00:06:38,070
all that's publicly available so instead

00:06:36,539 --> 00:06:39,800
of having to do the setup yourself now

00:06:38,070 --> 00:06:46,220
you can kind of get it all

00:06:39,800 --> 00:06:47,690
kind of one-shot basically two steps to

00:06:46,220 --> 00:06:50,720
kind of get your environment set up with

00:06:47,690 --> 00:06:52,159
this clone and then run the container

00:06:50,720 --> 00:06:55,729
this is of course assuming that docker

00:06:52,159 --> 00:06:57,409
is running functionally and at the end

00:06:55,729 --> 00:07:01,039
of the day what Big Top wants to do by

00:06:57,409 --> 00:07:02,569
default is it wants to you can tell it

00:07:01,039 --> 00:07:04,639
to build the whole kitchen sink so you

00:07:02,569 --> 00:07:06,289
can say build just build everything for

00:07:04,639 --> 00:07:08,930
me and that would be like the default

00:07:06,289 --> 00:07:10,789
but you can also tell it to say just

00:07:08,930 --> 00:07:12,259
build SPARC for me and there's little

00:07:10,789 --> 00:07:14,780
definitions that say well SPARC depends

00:07:12,259 --> 00:07:15,740
on these other three things and then you

00:07:14,780 --> 00:07:17,780
can create your own custom definitions

00:07:15,740 --> 00:07:20,840
if you're adding your kind of own

00:07:17,780 --> 00:07:24,560
third-party components so let's say you

00:07:20,840 --> 00:07:26,840
were going to build like SPARC it would

00:07:24,560 --> 00:07:30,620
build you know the master and kind of

00:07:26,840 --> 00:07:33,139
worker packages and at the end what it's

00:07:30,620 --> 00:07:35,030
going to do is it's going to if

00:07:33,139 --> 00:07:37,400
everything passes it'll build and spit

00:07:35,030 --> 00:07:40,400
out in this case this example would be

00:07:37,400 --> 00:07:43,370
Debian packages and it'll basically

00:07:40,400 --> 00:07:44,780
build a localhost repository so

00:07:43,370 --> 00:07:48,020
immediately afterwards if you wanted to

00:07:44,780 --> 00:07:50,690
you could just install directly from the

00:07:48,020 --> 00:07:52,490
localhost repository what we do is a

00:07:50,690 --> 00:07:56,060
community we have some infrastructure

00:07:52,490 --> 00:07:58,969
the sponsored by Amazon so you can

00:07:56,060 --> 00:08:00,409
basically build it yourself if you want

00:07:58,969 --> 00:08:03,139
to get going you can actually just

00:08:00,409 --> 00:08:07,190
install the packages at the end of the

00:08:03,139 --> 00:08:11,779
day everything is Debian and RPM

00:08:07,190 --> 00:08:13,870
packages for the platforms this is kind

00:08:11,779 --> 00:08:19,610
of the current it's a little out of date

00:08:13,870 --> 00:08:21,710
but based on big tops 1.1 release some

00:08:19,610 --> 00:08:26,080
of the guys from open power they got all

00:08:21,710 --> 00:08:29,120
these working except for the - tez and

00:08:26,080 --> 00:08:31,849
Zeppelin which is a kind of

00:08:29,120 --> 00:08:33,919
collaborative notebook research type

00:08:31,849 --> 00:08:37,190
project so those are kind of the last

00:08:33,919 --> 00:08:39,740
two components that will be coming for

00:08:37,190 --> 00:08:43,550
1.2 which is probably going to be around

00:08:39,740 --> 00:08:45,860
May or June if not sooner depending on

00:08:43,550 --> 00:08:47,450
we have three two or three new

00:08:45,860 --> 00:08:49,760
components that are coming in so we're

00:08:47,450 --> 00:08:52,840
trying to time at all for the conference

00:08:49,760 --> 00:08:55,180
so if any of you are

00:08:52,840 --> 00:08:57,400
looking at or interested in any of that

00:08:55,180 --> 00:08:59,170
on the list

00:08:57,400 --> 00:09:02,560
you basically get that for free now and

00:08:59,170 --> 00:09:04,680
power thanks to the community members so

00:09:02,560 --> 00:09:08,650
we're look kind of looking forward to

00:09:04,680 --> 00:09:09,720
ongoing collaboration we're components

00:09:08,650 --> 00:09:12,250
are being added every few months

00:09:09,720 --> 00:09:14,080
especially as new projects come into the

00:09:12,250 --> 00:09:16,360
it's not it's not restricted to Apache

00:09:14,080 --> 00:09:17,950
foundation projects but typically the

00:09:16,360 --> 00:09:24,280
majority of the big data ones are ending

00:09:17,950 --> 00:09:27,580
up there and the open power guys they

00:09:24,280 --> 00:09:31,570
kind of said one of the biggest benefits

00:09:27,580 --> 00:09:35,440
for them was building flexible build and

00:09:31,570 --> 00:09:39,040
test lab so since that's at the core of

00:09:35,440 --> 00:09:44,560
Big Top again kind of up levelling the

00:09:39,040 --> 00:09:50,170
experience we basically by default will

00:09:44,560 --> 00:09:54,640
leverage Jenkins as a CI and they set up

00:09:50,170 --> 00:09:56,080
Jenkins slaves which will deploy in in

00:09:54,640 --> 00:09:59,620
our hosted community environments

00:09:56,080 --> 00:10:01,450
running on AWS if you're running in a

00:09:59,620 --> 00:10:03,790
physical environment or OpenStack or

00:10:01,450 --> 00:10:05,290
vSphere you can use one of the the

00:10:03,790 --> 00:10:08,410
plug-in providers to deploy the notes

00:10:05,290 --> 00:10:11,170
for you and that will deploy kind of the

00:10:08,410 --> 00:10:14,020
build worker nodes and that allows you

00:10:11,170 --> 00:10:16,180
to paralyze kind of your build

00:10:14,020 --> 00:10:17,470
environments so if you have a very

00:10:16,180 --> 00:10:21,220
simplified environment you can run it

00:10:17,470 --> 00:10:25,570
all kind of single host style but if

00:10:21,220 --> 00:10:30,160
you're building multiple either x86 or

00:10:25,570 --> 00:10:32,950
variants of OS is it'll stand those up

00:10:30,160 --> 00:10:34,930
and it uses the same kind of all-in-one

00:10:32,950 --> 00:10:36,130
docker container that you can use

00:10:34,930 --> 00:10:40,660
yourself just for kind of learning

00:10:36,130 --> 00:10:44,920
purposes and all that's integrated we

00:10:40,660 --> 00:10:48,400
provide all the job stuff open-source as

00:10:44,920 --> 00:10:51,690
well if you have kind of tweaks you can

00:10:48,400 --> 00:10:54,820
always just contribute a patch pack and

00:10:51,690 --> 00:10:57,220
this is kind of another example of kind

00:10:54,820 --> 00:10:58,800
of we're trying to uplevel it so not

00:10:57,220 --> 00:11:00,610
just the distribution guys but now

00:10:58,800 --> 00:11:02,800
operations teams that are trying to

00:11:00,610 --> 00:11:05,620
provide build and test infrastructure

00:11:02,800 --> 00:11:06,830
for data engineers can provide something

00:11:05,620 --> 00:11:11,900
that's repeatable

00:11:06,830 --> 00:11:14,100
across a range of versions and OSS and

00:11:11,900 --> 00:11:22,460
that's it

00:11:14,100 --> 00:11:22,460

YouTube URL: https://www.youtube.com/watch?v=WuZvEu1MynE


