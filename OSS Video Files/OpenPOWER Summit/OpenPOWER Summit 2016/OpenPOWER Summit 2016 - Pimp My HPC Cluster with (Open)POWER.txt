Title: OpenPOWER Summit 2016 - Pimp My HPC Cluster with (Open)POWER
Publication date: 2016-04-29
Playlist: OpenPOWER Summit 2016
Description: 
	Presented by Piero Altoe of E4 Computer Engineering
Captions: 
	00:00:00,350 --> 00:00:07,890
hello good evening so this evening I

00:00:05,790 --> 00:00:10,019
want to introduce a little bit what is

00:00:07,890 --> 00:00:13,950
going on also from the European point of

00:00:10,019 --> 00:00:17,910
view on open power and what our company

00:00:13,950 --> 00:00:20,189
is doing on this specific area for

00:00:17,910 --> 00:00:24,240
developing the market and the

00:00:20,189 --> 00:00:26,789
applications on open power machines the

00:00:24,240 --> 00:00:29,519
idea is basically first of all to

00:00:26,789 --> 00:00:32,850
introduce the company and later on go

00:00:29,519 --> 00:00:36,360
through what we are doing in detail on

00:00:32,850 --> 00:00:39,600
the open power community efore is a

00:00:36,360 --> 00:00:42,149
European company it is specialized in

00:00:39,600 --> 00:00:46,219
high-performance computing and we

00:00:42,149 --> 00:00:49,950
integrate develop and create solution on

00:00:46,219 --> 00:00:52,739
clusters and solutions and storages for

00:00:49,950 --> 00:00:56,460
high-performance basically is totally

00:00:52,739 --> 00:00:59,940
dedicated to this kind of market since

00:00:56,460 --> 00:01:03,390
15 years we are active in deploying this

00:00:59,940 --> 00:01:05,460
kind of machines and we have a lot of

00:01:03,390 --> 00:01:08,820
experience on the design and the

00:01:05,460 --> 00:01:11,640
integration of the solution so actually

00:01:08,820 --> 00:01:14,159
we are a front end to the customer to

00:01:11,640 --> 00:01:16,830
speak with them collect the requirements

00:01:14,159 --> 00:01:19,650
understand what kind of application they

00:01:16,830 --> 00:01:22,170
ran and how they run this application so

00:01:19,650 --> 00:01:27,810
is exactly the conjunction between the

00:01:22,170 --> 00:01:30,000
manufacturer and the end users so we

00:01:27,810 --> 00:01:32,759
have three specialization in the company

00:01:30,000 --> 00:01:36,350
leveraging on they know how we have

00:01:32,759 --> 00:01:40,350
inside our company we first of all

00:01:36,350 --> 00:01:42,090
integrate our product so it means we

00:01:40,350 --> 00:01:44,790
integrate the server we integrate the

00:01:42,090 --> 00:01:48,600
storages we integrate a single break

00:01:44,790 --> 00:01:51,270
that create the ipad form a solution we

00:01:48,600 --> 00:01:54,140
make the high-performance solution so

00:01:51,270 --> 00:01:58,710
the cluster or the extreme large

00:01:54,140 --> 00:02:01,560
storages or we also design a specific

00:01:58,710 --> 00:02:03,090
solution for a specific customer we have

00:02:01,560 --> 00:02:05,310
seen previously presentation about

00:02:03,090 --> 00:02:07,619
genomics we have a complete full

00:02:05,310 --> 00:02:10,440
solutions for genomics since years and

00:02:07,619 --> 00:02:12,900
we talk with our customer trying to

00:02:10,440 --> 00:02:13,170
understand where are the limits they

00:02:12,900 --> 00:02:16,170
have

00:02:13,170 --> 00:02:18,270
what are the bottlenecks and to modify

00:02:16,170 --> 00:02:22,050
our solution in a way that they are able

00:02:18,270 --> 00:02:24,720
to bring the best from the hardware from

00:02:22,050 --> 00:02:27,090
the solution from the middleware because

00:02:24,720 --> 00:02:30,060
we don't have to forgot the specific

00:02:27,090 --> 00:02:33,690
middleware of tools that you need to

00:02:30,060 --> 00:02:37,890
make your solution available for the end

00:02:33,690 --> 00:02:41,160
user and we have also a part that is

00:02:37,890 --> 00:02:46,350
dedicated to our Indian prototyping new

00:02:41,160 --> 00:02:49,500
machines or new full solution in term of

00:02:46,350 --> 00:02:53,400
creating them so something that even

00:02:49,500 --> 00:02:57,269
doesn't exist so we made prototypes for

00:02:53,400 --> 00:03:00,959
European HPC centers since years and we

00:02:57,269 --> 00:03:03,660
are active in many projects funded from

00:03:00,959 --> 00:03:06,840
the European company so these are the

00:03:03,660 --> 00:03:12,299
premises of what we do and how we

00:03:06,840 --> 00:03:15,299
interact with our customers so what we

00:03:12,299 --> 00:03:19,109
what is the feeling we have what is what

00:03:15,299 --> 00:03:22,230
the community wants to see in the open

00:03:19,109 --> 00:03:24,420
power so today we are talking a lot

00:03:22,230 --> 00:03:27,000
about open power we have seen a lot of

00:03:24,420 --> 00:03:30,299
computation than on these machines but

00:03:27,000 --> 00:03:32,670
we want to make easy access to the

00:03:30,299 --> 00:03:34,290
machine to the people that wants to

00:03:32,670 --> 00:03:37,829
bring the application on run the

00:03:34,290 --> 00:03:41,190
application we need really to create a

00:03:37,829 --> 00:03:44,630
kind of community around these machines

00:03:41,190 --> 00:03:48,090
and we cannot leverage only on the IBM

00:03:44,630 --> 00:03:51,630
services because of course is one to be

00:03:48,090 --> 00:03:55,920
a foundation people that interact that

00:03:51,630 --> 00:03:59,000
collaborate to create new machines new

00:03:55,920 --> 00:04:03,709
solution new opportunities to improve

00:03:59,000 --> 00:04:08,609
what is existing we are taking care of

00:04:03,709 --> 00:04:11,370
giving to the end-user a full certified

00:04:08,609 --> 00:04:16,200
full complete solution based on open

00:04:11,370 --> 00:04:19,280
power machines ok that's the first the

00:04:16,200 --> 00:04:24,090
first and most important point for us

00:04:19,280 --> 00:04:26,520
how we do it so we had a long experience

00:04:24,090 --> 00:04:29,009
on designing hyper

00:04:26,520 --> 00:04:33,419
most computing suites of software and

00:04:29,009 --> 00:04:35,159
middlewares for our customers so we

00:04:33,419 --> 00:04:37,710
select the compiler we pre install

00:04:35,159 --> 00:04:41,159
everything the MPI library InfiniBand

00:04:37,710 --> 00:04:43,409
stacks we stress this test the system we

00:04:41,159 --> 00:04:45,419
make all the quality insurance because

00:04:43,409 --> 00:04:48,690
when we you have to deploy one hundred

00:04:45,419 --> 00:04:50,909
or thousands of machine in a row you

00:04:48,690 --> 00:04:54,180
need to have a quality assurance to the

00:04:50,909 --> 00:04:56,190
system we make all the personalized

00:04:54,180 --> 00:04:59,819
configurations of the operating system

00:04:56,190 --> 00:05:02,669
be benchmarked the solution so basically

00:04:59,819 --> 00:05:06,270
at the end of the day the customer has

00:05:02,669 --> 00:05:10,440
through open source tools a full stack

00:05:06,270 --> 00:05:14,900
of software's that they can use every

00:05:10,440 --> 00:05:19,860
day on their cluster that's the point

00:05:14,900 --> 00:05:21,870
why we want to do this because we want

00:05:19,860 --> 00:05:25,800
to make affordable the possibility to

00:05:21,870 --> 00:05:28,830
use open power machines all these things

00:05:25,800 --> 00:05:32,759
already exists most of them you have to

00:05:28,830 --> 00:05:35,490
buy they are licensed they are not free

00:05:32,759 --> 00:05:38,819
so we want to create a suite which is

00:05:35,490 --> 00:05:40,530
fully free the cost is just the pre

00:05:38,819 --> 00:05:42,719
configuration but then you can maintain

00:05:40,530 --> 00:05:47,180
by yourself we can change you can

00:05:42,719 --> 00:05:47,180
install you can modify whatever you like

00:05:47,509 --> 00:05:53,039
what's the machine where we are working

00:05:49,620 --> 00:05:56,009
now is one of the open power server you

00:05:53,039 --> 00:05:59,430
know very well is Firestone for IBM or

00:05:56,009 --> 00:06:04,139
Polaris for wisdom our code name is 0 p

00:05:59,430 --> 00:06:06,990
2 o 5 and is a dual GPU machine with the

00:06:04,139 --> 00:06:10,830
to power 8 processor and up to one

00:06:06,990 --> 00:06:12,599
terabyte of from memory this machine is

00:06:10,830 --> 00:06:14,400
dedicated to high-performance computing

00:06:12,599 --> 00:06:16,529
so that the reason because we selected

00:06:14,400 --> 00:06:20,159
this machine from wisdom we source

00:06:16,529 --> 00:06:22,680
directly from them and out of this

00:06:20,159 --> 00:06:26,250
machine we have created a cluster that

00:06:22,680 --> 00:06:30,020
we have in aus that is the cluster we

00:06:26,250 --> 00:06:33,630
use for developing our set of tools and

00:06:30,020 --> 00:06:37,430
it is also the cluster we want to as

00:06:33,630 --> 00:06:40,230
soon as we have finished almost done is

00:06:37,430 --> 00:06:41,940
we want to give for remote access to

00:06:40,230 --> 00:06:46,650
our potential customer and to the people

00:06:41,940 --> 00:06:49,440
of the community I know that there are

00:06:46,650 --> 00:06:51,810
some cluster but actually owned by IBM

00:06:49,440 --> 00:06:53,580
where you can have remote access we want

00:06:51,810 --> 00:06:57,300
to create a different one I completely

00:06:53,580 --> 00:06:59,280
open source tool cluster in fact insider

00:06:57,300 --> 00:07:01,800
are queuing system monitoring two

00:06:59,280 --> 00:07:05,040
parallel shells everything you are used

00:07:01,800 --> 00:07:09,450
to have on on the cluster the only

00:07:05,040 --> 00:07:12,900
exception we want to bring both free

00:07:09,450 --> 00:07:14,820
open-source compilers and prepare their

00:07:12,900 --> 00:07:17,280
compilers to see the difference in terms

00:07:14,820 --> 00:07:20,400
of performance to see if it is possible

00:07:17,280 --> 00:07:27,560
or not to achieve similar results in

00:07:20,400 --> 00:07:31,110
terms of time to solution so from our

00:07:27,560 --> 00:07:33,240
experience what we need to do is first

00:07:31,110 --> 00:07:36,180
of all to make stable the operative

00:07:33,240 --> 00:07:39,150
system to find a way to provision the

00:07:36,180 --> 00:07:42,270
nodes in a dramatic way without any

00:07:39,150 --> 00:07:45,840
problem so the idea is to use cobbler

00:07:42,270 --> 00:07:49,200
and puppet of course all the standard

00:07:45,840 --> 00:07:52,650
tool you know a lab to learn you can use

00:07:49,200 --> 00:07:56,820
even lsf but it's not in our idea to use

00:07:52,650 --> 00:07:59,490
the lsf stuff compilers the benchmarks

00:07:56,820 --> 00:08:02,850
tool it's really important to have a set

00:07:59,490 --> 00:08:06,540
of benchmark tool that works properly

00:08:02,850 --> 00:08:07,770
into the machine because when we create

00:08:06,540 --> 00:08:11,010
solution for high performance computing

00:08:07,770 --> 00:08:15,270
we need to have homogeneous results from

00:08:11,010 --> 00:08:17,270
every single compute nodes I can tell

00:08:15,270 --> 00:08:20,190
you but I'm sure some of you are

00:08:17,270 --> 00:08:22,290
familiar with this kind of problem when

00:08:20,190 --> 00:08:25,560
you have a large amount of compute nodes

00:08:22,290 --> 00:08:27,720
and you want to run an application fully

00:08:25,560 --> 00:08:29,520
paddle across all these nodes several

00:08:27,720 --> 00:08:32,840
time you observe differences in each

00:08:29,520 --> 00:08:37,080
single known in term of performance and

00:08:32,840 --> 00:08:39,570
how to solve this problem it can be

00:08:37,080 --> 00:08:41,370
really problematic if the system is in

00:08:39,570 --> 00:08:43,440
production we don't want this kind of

00:08:41,370 --> 00:08:46,470
problem we want to solve it in advance

00:08:43,440 --> 00:08:49,710
and that's the reason because we have a

00:08:46,470 --> 00:08:52,410
system to test extensively all the nodes

00:08:49,710 --> 00:08:53,550
to get the result to get the average of

00:08:52,410 --> 00:08:56,190
the value

00:08:53,550 --> 00:08:58,980
the time to solution and all the detail

00:08:56,190 --> 00:09:01,350
about the memory they all the subsets

00:08:58,980 --> 00:09:03,240
like the infiniband the GP news

00:09:01,350 --> 00:09:06,870
everything has to work properly with the

00:09:03,240 --> 00:09:11,040
right performance otherwise we need to

00:09:06,870 --> 00:09:14,040
identify the problem and solve it then

00:09:11,040 --> 00:09:17,660
of course all the stack for scientific

00:09:14,040 --> 00:09:21,089
libraries in parallel file system and

00:09:17,660 --> 00:09:23,910
infrastructure management you need of

00:09:21,089 --> 00:09:26,910
course something to monitor your system

00:09:23,910 --> 00:09:29,279
at the end so all these tools will be

00:09:26,910 --> 00:09:31,890
pre-configured and available for all

00:09:29,279 --> 00:09:37,040
people that wants to test the solution

00:09:31,890 --> 00:09:39,720
and it seems silly to do these things

00:09:37,040 --> 00:09:43,440
talking with people in the HPC market

00:09:39,720 --> 00:09:45,870
but is not so simple every single

00:09:43,440 --> 00:09:48,300
platform has its own peculiar

00:09:45,870 --> 00:09:50,430
differences that you have to understand

00:09:48,300 --> 00:09:52,649
and you have to solve before being

00:09:50,430 --> 00:09:55,290
production if you are talking about seed

00:09:52,649 --> 00:09:59,070
systems one or two boxes and nothing

00:09:55,290 --> 00:10:01,440
wrong to having even small problems but

00:09:59,070 --> 00:10:03,089
on a real production system and we want

00:10:01,440 --> 00:10:06,230
to go in this direction with open power

00:10:03,089 --> 00:10:11,670
we need soul first with these issues

00:10:06,230 --> 00:10:17,550
this is also an important task for a

00:10:11,670 --> 00:10:19,829
cost reduction we want to be aggressive

00:10:17,550 --> 00:10:22,950
in terms of pricing competitive in the

00:10:19,829 --> 00:10:24,600
HPC market in terms of pricing so we

00:10:22,950 --> 00:10:28,680
need to have this kind of tools

00:10:24,600 --> 00:10:32,510
available it must be everything properly

00:10:28,680 --> 00:10:35,279
done if we want to be cost effective

00:10:32,510 --> 00:10:38,699
okay this is an example of what we are

00:10:35,279 --> 00:10:43,800
doing with cobbler we are working with

00:10:38,699 --> 00:10:47,070
the centralized 7 and this is a just a

00:10:43,800 --> 00:10:49,290
simple example we are working with

00:10:47,070 --> 00:10:53,250
xscape we are working with puppet with

00:10:49,290 --> 00:10:55,890
ansible to create all the books in all

00:10:53,250 --> 00:10:58,440
the pre-configured stuff that you can

00:10:55,890 --> 00:11:00,839
basically launch automatically with

00:10:58,440 --> 00:11:04,699
cobbler you can deploy as many notes as

00:11:00,839 --> 00:11:07,930
you want all these things has been

00:11:04,699 --> 00:11:11,770
basically done everything is ready

00:11:07,930 --> 00:11:15,399
just under testing so let me briefly

00:11:11,770 --> 00:11:17,260
conclude about our work inside the open

00:11:15,399 --> 00:11:18,910
power this is there is something is

00:11:17,260 --> 00:11:23,560
missing in this list and it's really

00:11:18,910 --> 00:11:25,450
important I i just realized a couple of

00:11:23,560 --> 00:11:29,709
hours ago speaking with the people what

00:11:25,450 --> 00:11:34,839
is missing here and one information is

00:11:29,709 --> 00:11:38,589
we are doing a lot of work in a

00:11:34,839 --> 00:11:41,560
european-based is a lot of presentation

00:11:38,589 --> 00:11:43,600
and not many people comes from Europe it

00:11:41,560 --> 00:11:49,709
means that urban power is quite strong

00:11:43,600 --> 00:11:52,930
yeah I know you in fact I said not many

00:11:49,709 --> 00:11:54,910
we want to make it growing in Europe we

00:11:52,930 --> 00:11:58,089
need to have more people working on it

00:11:54,910 --> 00:12:00,459
so I just realized that one of the

00:11:58,089 --> 00:12:03,100
conclusion is we are active we are

00:12:00,459 --> 00:12:05,770
working is a message for the people that

00:12:03,100 --> 00:12:09,160
wants to join and want to to enlarge the

00:12:05,770 --> 00:12:12,040
ecosystem and then of course if or is

00:12:09,160 --> 00:12:14,920
now creating hardware solution and set

00:12:12,040 --> 00:12:16,540
of tool for manage the cluster we want

00:12:14,920 --> 00:12:18,459
to give remote access to people that

00:12:16,540 --> 00:12:20,650
wants to develop application bring the

00:12:18,459 --> 00:12:22,660
application test the machine and see how

00:12:20,650 --> 00:12:25,830
it works if there is something properly

00:12:22,660 --> 00:12:28,510
done or not if there are problems please

00:12:25,830 --> 00:12:31,720
give a feedback to us it's really

00:12:28,510 --> 00:12:35,080
important and what we can do is also a

00:12:31,720 --> 00:12:38,050
performance tuning service so when you

00:12:35,080 --> 00:12:39,820
have a machine we give all the support

00:12:38,050 --> 00:12:42,490
to understand what is not going right

00:12:39,820 --> 00:12:46,690
with your machine and we will try to do

00:12:42,490 --> 00:12:49,980
our best ok thank you if there are

00:12:46,690 --> 00:12:49,980

YouTube URL: https://www.youtube.com/watch?v=wIFZNUxfs9A


