Title: OpenPOWER Summit 2016 - A Full Featured IDE for C C++ Development
Publication date: 2016-04-29
Playlist: OpenPOWER Summit 2016
Description: 
	Presented by Rafael Sene of IBM
Captions: 
	00:00:00,000 --> 00:00:07,080
so my name is Raphael I from YB MLC from

00:00:04,680 --> 00:00:09,960
Brazil and I'm here to talk about the

00:00:07,080 --> 00:00:12,870
last decade which has a full feature ID

00:00:09,960 --> 00:00:16,410
for those who are willing to part the

00:00:12,870 --> 00:00:20,580
application from X to power or optimized

00:00:16,410 --> 00:00:24,210
for power so jessica is a free of charge

00:00:20,580 --> 00:00:25,590
solution for power it is available 4x4

00:00:24,210 --> 00:00:28,920
power lead or anything from power

00:00:25,590 --> 00:00:31,289
big-endian we integrated with advanced

00:00:28,920 --> 00:00:34,350
tool chain with we see the set of

00:00:31,289 --> 00:00:35,600
libraries in open source tools open

00:00:34,350 --> 00:00:39,450
source development tools and libraries

00:00:35,600 --> 00:00:41,190
that are optimized for power and also

00:00:39,450 --> 00:00:43,770
integrative classically next performance

00:00:41,190 --> 00:00:48,059
tools like walk around Oh profile in

00:00:43,770 --> 00:00:50,640
Perth also we provide tips and fix on

00:00:48,059 --> 00:00:52,710
migration and application to power so i

00:00:50,640 --> 00:00:54,780
will talk a little bit more in the next

00:00:52,710 --> 00:00:57,300
few slides so you can see that we

00:00:54,780 --> 00:01:00,120
provide a quick fix that analyzers

00:00:57,300 --> 00:01:02,489
analyze your source code and make

00:01:00,120 --> 00:01:06,570
suggestions on the best solutions for

00:01:02,489 --> 00:01:09,180
power of course is ready for cloud you

00:01:06,570 --> 00:01:12,330
can use the escape to connect to any vm

00:01:09,180 --> 00:01:16,979
you available on softlayer or your vm in

00:01:12,330 --> 00:01:21,479
your data center looking at what this k

00:01:16,979 --> 00:01:23,990
is it does is made there is a main part

00:01:21,479 --> 00:01:27,720
made for farming parts of this case so

00:01:23,990 --> 00:01:30,060
the first is the tool that we develop it

00:01:27,720 --> 00:01:32,250
internally that there are tools

00:01:30,060 --> 00:01:35,640
developed by IBM research from the guy

00:01:32,250 --> 00:01:38,400
is located in rifle is high oh there are

00:01:35,640 --> 00:01:42,600
set of an a bunch of open-source tools

00:01:38,400 --> 00:01:45,210
we rely on and all all of those all the

00:01:42,600 --> 00:01:49,350
tools integrated into the ecliptic

00:01:45,210 --> 00:01:52,320
platform so if you wanna start your

00:01:49,350 --> 00:01:55,530
journey to power the first first part of

00:01:52,320 --> 00:01:58,619
it is migrating your application from

00:01:55,530 --> 00:02:01,439
x86 systems to the to the power little

00:01:58,619 --> 00:02:04,259
endure or BR beginning and we have the

00:02:01,439 --> 00:02:06,719
to call it migration adviser these tools

00:02:04,259 --> 00:02:09,479
performs and static analysis of your

00:02:06,719 --> 00:02:11,910
source code then identify possible

00:02:09,479 --> 00:02:13,670
possible problems and provide quick

00:02:11,910 --> 00:02:19,010
fixes and suggestion so

00:02:13,670 --> 00:02:23,750
that d'oeuvres checkers that allows you

00:02:19,010 --> 00:02:25,550
to identify several problems for the so

00:02:23,750 --> 00:02:27,530
we are going to provide a new release by

00:02:25,550 --> 00:02:29,330
the end of this month which has much

00:02:27,530 --> 00:02:32,360
more checkers and much much more

00:02:29,330 --> 00:02:35,120
optimization on migrating any any

00:02:32,360 --> 00:02:36,739
application from X to power and we are

00:02:35,120 --> 00:02:38,720
adding the capability to migrate from

00:02:36,739 --> 00:02:43,340
while we're big engine to power a little

00:02:38,720 --> 00:02:44,959
in there as well so yeah you migrate

00:02:43,340 --> 00:02:46,790
exposing migrate your application for

00:02:44,959 --> 00:02:50,030
power you don't have a power machine to

00:02:46,790 --> 00:02:52,250
test we integrated two tools that help

00:02:50,030 --> 00:02:54,980
you or wrong running and debugging your

00:02:52,250 --> 00:02:58,250
application using our laptop your x86

00:02:54,980 --> 00:03:00,890
laptop we integrated qmu user mode and

00:02:58,250 --> 00:03:04,069
with the IBM power H functional

00:03:00,890 --> 00:03:06,560
simulator so you can get the pure the Q

00:03:04,069 --> 00:03:08,269
mu and for cross compiling for example

00:03:06,560 --> 00:03:12,650
using the cross compiling version of the

00:03:08,269 --> 00:03:14,900
advanced tool chain and ok can compile

00:03:12,650 --> 00:03:19,010
your application and execute it using

00:03:14,900 --> 00:03:20,840
user mode or you can boot use the power

00:03:19,010 --> 00:03:24,680
8 functional simulator which similar

00:03:20,840 --> 00:03:28,730
which simulates a full machine and put

00:03:24,680 --> 00:03:31,280
any any image that you want to start so

00:03:28,730 --> 00:03:33,380
we provide a add a buell a minimal

00:03:31,280 --> 00:03:35,420
debian imaging with the package is

00:03:33,380 --> 00:03:38,060
necessary to develop an application and

00:03:35,420 --> 00:03:40,519
you can use the desk a remote capability

00:03:38,060 --> 00:03:42,590
to connect that to death vm e to the

00:03:40,519 --> 00:03:45,489
power of the de parfum channel simulator

00:03:42,590 --> 00:03:52,100
and develop your application all in your

00:03:45,489 --> 00:03:54,109
laptop using our x86 laptop and once you

00:03:52,100 --> 00:03:56,569
haven't once you are able to run your

00:03:54,109 --> 00:03:59,209
application power you can optimize it we

00:03:56,569 --> 00:04:01,400
integrate with the ftp r which is the

00:03:59,209 --> 00:04:05,650
feedback directed program heck structure

00:04:01,400 --> 00:04:11,030
which reads your link at binary and

00:04:05,650 --> 00:04:12,799
optimize it so if tom i optimize it even

00:04:11,030 --> 00:04:17,329
more so if you compile it our place with

00:04:12,799 --> 00:04:20,120
03 03 for example ftp r has an option

00:04:17,329 --> 00:04:26,780
we'll call it all five which optimize it

00:04:20,120 --> 00:04:27,560
even more during the profiling the ftp I

00:04:26,780 --> 00:04:30,230
provides

00:04:27,560 --> 00:04:33,139
a journaling a journal which is an XML

00:04:30,230 --> 00:04:35,240
file and this is the input for the

00:04:33,139 --> 00:04:37,639
source code advisor the source code

00:04:35,240 --> 00:04:41,330
divisor is a tool that provided tips and

00:04:37,639 --> 00:04:44,060
hits that show possible problems with

00:04:41,330 --> 00:04:46,580
your source code so if you have any

00:04:44,060 --> 00:04:48,560
problem the source code advisor will

00:04:46,580 --> 00:04:52,340
point the problem and explain what's

00:04:48,560 --> 00:04:54,500
causing that problem for I'd SDK one at

00:04:52,340 --> 00:05:00,260
nine we have a quick fixes for those

00:04:54,500 --> 00:05:03,200
problems as well if you and so if you

00:05:00,260 --> 00:05:04,700
use it all the suggestions we provide

00:05:03,200 --> 00:05:07,220
and you are not happy with the

00:05:04,700 --> 00:05:10,010
performance of your your application you

00:05:07,220 --> 00:05:13,400
can use it the CPI break it down to it

00:05:10,010 --> 00:05:17,030
it it uses the CPI model to break down

00:05:13,400 --> 00:05:21,740
the the to use it uses the PMO event the

00:05:17,030 --> 00:05:23,960
disappear vent and and showed how show

00:05:21,740 --> 00:05:26,479
possible hotspots in our application for

00:05:23,960 --> 00:05:28,760
example this red red blocks here are hot

00:05:26,479 --> 00:05:31,940
spot so when you double-click these

00:05:28,760 --> 00:05:33,950
items in the SDK YouTube drill down the

00:05:31,940 --> 00:05:37,160
first one on to the first code that i

00:05:33,950 --> 00:05:38,990
generate on that hot spots and then the

00:05:37,160 --> 00:05:45,380
King use the order to so happy to

00:05:38,990 --> 00:05:48,310
analyze and improve the performance ok

00:05:45,380 --> 00:05:50,990
if you can so if you're not satisfied

00:05:48,310 --> 00:05:52,910
satisfied with we probe with the

00:05:50,990 --> 00:05:55,430
performance yet you can use it at the

00:05:52,910 --> 00:05:58,310
power performance advisor we should work

00:05:55,430 --> 00:06:00,919
similarly to the CPI but it group it put

00:05:58,310 --> 00:06:02,660
together groups of events and show that

00:06:00,919 --> 00:06:06,200
the values of those event when you

00:06:02,660 --> 00:06:08,300
profile your application it is important

00:06:06,200 --> 00:06:12,490
we state that this decay SDK is free you

00:06:08,300 --> 00:06:16,580
can get this in our your website it

00:06:12,490 --> 00:06:19,490
arose we have a client for x86 so you

00:06:16,580 --> 00:06:21,680
can install your laptop then use your

00:06:19,490 --> 00:06:25,039
our remote capability to connect to any

00:06:21,680 --> 00:06:27,919
machine running any power machine in any

00:06:25,039 --> 00:06:30,080
cloud or your data center and develop

00:06:27,919 --> 00:06:32,780
your application we for remote

00:06:30,080 --> 00:06:35,840
development using we will get underneath

00:06:32,780 --> 00:06:38,690
so it's very fast to synchronize the

00:06:35,840 --> 00:06:41,620
source code between your local laptop in

00:06:38,690 --> 00:06:41,620
the remote system

00:06:41,810 --> 00:06:49,220
and for the SDK 19 one of the demand so

00:06:46,580 --> 00:06:52,340
we had where we are trying to cover most

00:06:49,220 --> 00:06:55,340
of the Intel API and to migrate to power

00:06:52,340 --> 00:06:59,480
it's a little bit hard work to do and we

00:06:55,340 --> 00:07:02,060
are most i can say forty percent uncover

00:06:59,480 --> 00:07:04,880
all the demography oh but it's an

00:07:02,060 --> 00:07:06,680
ongoing subprocess so every time ever

00:07:04,880 --> 00:07:09,820
really easy we added more and more

00:07:06,680 --> 00:07:14,229
capabilities on migration and so our our

00:07:09,820 --> 00:07:16,700
aura dreaming to develop a to that it's

00:07:14,229 --> 00:07:18,830
call it one-click migration where you

00:07:16,700 --> 00:07:21,040
can just press a button with your and

00:07:18,830 --> 00:07:23,960
your application we ran on power

00:07:21,040 --> 00:07:26,270
desiccate is again is free it's

00:07:23,960 --> 00:07:31,510
available for download you can get it

00:07:26,270 --> 00:07:34,100
right now use it and help us making the

00:07:31,510 --> 00:07:36,470
moving or making the development

00:07:34,100 --> 00:07:39,770
application for those new hardware that

00:07:36,470 --> 00:07:42,380
we have behind us here easier so give it

00:07:39,770 --> 00:07:44,389
give it a try letter let me know or let

00:07:42,380 --> 00:07:46,910
anyone in the RTC know if you need

00:07:44,389 --> 00:07:49,550
anything else from the SDK and we'll

00:07:46,910 --> 00:07:52,010
review the 24 for the developers who

00:07:49,550 --> 00:07:54,880
need it so that's all they have to do

00:07:52,010 --> 00:07:54,880

YouTube URL: https://www.youtube.com/watch?v=oqKaET1pYxY


