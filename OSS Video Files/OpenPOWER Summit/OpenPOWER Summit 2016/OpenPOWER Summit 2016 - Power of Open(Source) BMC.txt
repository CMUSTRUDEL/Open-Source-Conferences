Title: OpenPOWER Summit 2016 - Power of Open(Source) BMC
Publication date: 2016-04-29
Playlist: OpenPOWER Summit 2016
Description: 
	Presented by Kenneth Wilke & Adi Gangidi of Rackspace
Captions: 
	00:00:00,110 --> 00:00:08,990
hi my name is Kenneth I'm here with

00:00:04,049 --> 00:00:08,990
Rackspace and I'm here with my colleague

00:00:09,050 --> 00:00:13,259
I'm here with my colleague Adi Gong GD

00:00:11,700 --> 00:00:15,780
I'm like I said we both work at

00:00:13,259 --> 00:00:19,650
Rackspace our day-to-day is focused on

00:00:15,780 --> 00:00:21,810
the open power barreleye server and and

00:00:19,650 --> 00:00:23,670
the barreleye server uses open BMC for

00:00:21,810 --> 00:00:25,500
its out-of-band management and things

00:00:23,670 --> 00:00:27,810
like that we're gonna talk a little bit

00:00:25,500 --> 00:00:29,340
about that today and share with us or

00:00:27,810 --> 00:00:31,349
share with you the benefits we've seen

00:00:29,340 --> 00:00:33,949
I'm using an open sourced BMC

00:00:31,349 --> 00:00:33,949
infrastructure

00:00:45,140 --> 00:00:48,290
is just to clarify I wanted to get

00:00:47,000 --> 00:00:51,890
everyone on the same page as far as what

00:00:48,290 --> 00:00:53,680
a BMC is the acronym itself stands for

00:00:51,890 --> 00:00:56,420
base board management controller

00:00:53,680 --> 00:00:58,190
essentially it's a small embedded chip

00:00:56,420 --> 00:01:01,190
that lives in your server that helps you

00:00:58,190 --> 00:01:03,890
keep a tabs on the server it's connected

00:01:01,190 --> 00:01:06,740
to a variety of sensors it lets you know

00:01:03,890 --> 00:01:09,560
how hot the server is in the intake

00:01:06,740 --> 00:01:10,940
temperature or the fans and gives you a

00:01:09,560 --> 00:01:12,440
lot of other information just to make

00:01:10,940 --> 00:01:16,580
sure that your server is in a healthy

00:01:12,440 --> 00:01:18,289
State the another feature that it has is

00:01:16,580 --> 00:01:21,289
it can show you the inventory within

00:01:18,289 --> 00:01:23,090
your server it helps you know what like

00:01:21,289 --> 00:01:26,060
memory dims you have in the server what

00:01:23,090 --> 00:01:28,340
devices you have connected and it also

00:01:26,060 --> 00:01:29,780
will keep track of a log of events that

00:01:28,340 --> 00:01:32,810
are occurring with your server this

00:01:29,780 --> 00:01:34,190
could be like a stick of RAM goes bad or

00:01:32,810 --> 00:01:35,899
maybe a you know fault with your raid

00:01:34,190 --> 00:01:37,520
battery and this can keep track of

00:01:35,899 --> 00:01:40,070
information like that to let the

00:01:37,520 --> 00:01:42,590
operations teams know whenever they need

00:01:40,070 --> 00:01:47,360
to get into the server and do some

00:01:42,590 --> 00:01:50,420
maintenance and so I also wanted to

00:01:47,360 --> 00:01:51,890
share there's several use cases for

00:01:50,420 --> 00:01:54,799
which you would which would do with the

00:01:51,890 --> 00:01:57,700
BMC for us at Rackspace there's three

00:01:54,799 --> 00:02:00,320
main main reasons why we use the BMC

00:01:57,700 --> 00:02:03,290
when the gear first hits the data center

00:02:00,320 --> 00:02:05,270
we use the bmc's to configure some of

00:02:03,290 --> 00:02:07,790
the initial booting options and turn the

00:02:05,270 --> 00:02:09,920
servers on once the servers are turned

00:02:07,790 --> 00:02:13,519
on we can use some of the features at

00:02:09,920 --> 00:02:15,260
the BMC like to attach remote media to

00:02:13,519 --> 00:02:17,930
kick an operating system on to our

00:02:15,260 --> 00:02:21,380
servers and get them into a production

00:02:17,930 --> 00:02:24,079
ready state beyond that point the main

00:02:21,380 --> 00:02:26,540
reason we would use the BMC outside of

00:02:24,079 --> 00:02:29,180
just for infrastructure monitoring would

00:02:26,540 --> 00:02:31,700
be for troubleshooting the server when a

00:02:29,180 --> 00:02:33,860
server has some kind of issue will log

00:02:31,700 --> 00:02:37,010
into the BMC we can get access to a

00:02:33,860 --> 00:02:38,840
remote console to the server we can run

00:02:37,010 --> 00:02:42,290
a few Diagnostics we can update firmware

00:02:38,840 --> 00:02:43,430
and we can do a couple things to get a

00:02:42,290 --> 00:02:45,680
little bit more insight into what's

00:02:43,430 --> 00:02:46,810
going on without having to have a DC

00:02:45,680 --> 00:02:53,170
Operations technician

00:02:46,810 --> 00:02:55,599
go inspect the server in person and so

00:02:53,170 --> 00:02:59,230
most VMC's are based on a pretty common

00:02:55,599 --> 00:03:01,090
architecture the overall design is an

00:02:59,230 --> 00:03:03,250
industry sandal or industry standard

00:03:01,090 --> 00:03:04,330
model called IPMI which is the

00:03:03,250 --> 00:03:10,000
intelligent platform management

00:03:04,330 --> 00:03:11,110
interface it basically describes a few

00:03:10,000 --> 00:03:14,410
components in the way that they

00:03:11,110 --> 00:03:28,390
communicate with each other how the BMC

00:03:14,410 --> 00:03:30,549
can be BMC has a few standard ways that

00:03:28,390 --> 00:03:32,349
it's designed the way that a little

00:03:30,549 --> 00:03:37,120
interface with the memory i/o and the

00:03:32,349 --> 00:03:38,739
subsystems of the server itself and so

00:03:37,120 --> 00:03:40,060
that we can hook up the BMC to our

00:03:38,739 --> 00:03:42,190
out-of-band management network it

00:03:40,060 --> 00:03:44,890
usually has a dedicated interface a

00:03:42,190 --> 00:03:47,650
dedicated network interface but it can

00:03:44,890 --> 00:03:49,450
use the the same interface that the main

00:03:47,650 --> 00:03:53,260
host system that it's within is attached

00:03:49,450 --> 00:03:55,209
to as well I also want to mention that

00:03:53,260 --> 00:03:57,310
it's usually on a like an embedded

00:03:55,209 --> 00:04:00,160
system on a chip very common it's an ARM

00:03:57,310 --> 00:04:01,540
based processor we have on the slide

00:04:00,160 --> 00:04:03,100
here that it's often running Linux but

00:04:01,540 --> 00:04:05,470
it's usually running some kind of a

00:04:03,100 --> 00:04:07,060
real-time operating system and the the

00:04:05,470 --> 00:04:08,920
late late trend is that at all

00:04:07,060 --> 00:04:10,780
progressed towards using a Linux

00:04:08,920 --> 00:04:16,959
operating system such as what BMC uses

00:04:10,780 --> 00:04:18,370
or open BMC uses and so typically the

00:04:16,959 --> 00:04:21,010
most of the BMC's that are out there

00:04:18,370 --> 00:04:23,770
today are like the the Drac you find in

00:04:21,010 --> 00:04:26,190
a dull server or I'll oh and an HP on

00:04:23,770 --> 00:04:29,530
the power systems you'd find there FSP

00:04:26,190 --> 00:04:31,389
BMC and typically these are provided

00:04:29,530 --> 00:04:33,729
these are built and provided for each

00:04:31,389 --> 00:04:37,300
product by the vendor who makes the

00:04:33,729 --> 00:04:40,510
product the usually the security model

00:04:37,300 --> 00:04:44,260
of a BMC is not very strong they're very

00:04:40,510 --> 00:04:46,960
heavily built around IPMI and from just

00:04:44,260 --> 00:04:50,710
a purely protocol standard IPMI is is

00:04:46,960 --> 00:04:52,340
not very secure it has authentication

00:04:50,710 --> 00:04:54,770
but it's very weak and

00:04:52,340 --> 00:04:57,740
the protocol is just very dated and very

00:04:54,770 --> 00:05:01,330
vulnerable most of the tooling to

00:04:57,740 --> 00:05:03,770
interact with the BMC is based on IP MI

00:05:01,330 --> 00:05:05,840
there's not a lot of tools and libraries

00:05:03,770 --> 00:05:07,730
that interface with ipmi generally

00:05:05,840 --> 00:05:08,960
speaking if if you want to interface

00:05:07,730 --> 00:05:13,820
with it you're going to probably be

00:05:08,960 --> 00:05:14,870
using IP mi tool and the last thing I

00:05:13,820 --> 00:05:16,850
wanted to mention was that there's

00:05:14,870 --> 00:05:19,550
there's no easy way to add your own

00:05:16,850 --> 00:05:23,120
software to - most of the BMC s that are

00:05:19,550 --> 00:05:25,190
out there typically they're they're not

00:05:23,120 --> 00:05:27,350
meant to be customized and the the

00:05:25,190 --> 00:05:29,330
licensing around customizations that you

00:05:27,350 --> 00:05:31,220
can make for some of them is very

00:05:29,330 --> 00:05:33,500
restrictive around how you can share

00:05:31,220 --> 00:05:37,280
that with with other people who might be

00:05:33,500 --> 00:05:38,780
interested in that and so we've seen

00:05:37,280 --> 00:05:42,140
that this is a lot different with an

00:05:38,780 --> 00:05:43,910
open-source BMC and Audis gonna come up

00:05:42,140 --> 00:05:47,080
here and share with us some of the

00:05:43,910 --> 00:05:47,080
differences that we see with that

00:05:53,150 --> 00:06:01,520
thank you can I'm Adi and can it can you

00:05:58,550 --> 00:06:03,350
talked about how there's a lot of

00:06:01,520 --> 00:06:06,550
limitations with a conventional flow

00:06:03,350 --> 00:06:10,070
source BMC I'm here to talk about how

00:06:06,550 --> 00:06:11,570
open BMC accounts for some of these

00:06:10,070 --> 00:06:13,520
limitations in other words I'm gonna

00:06:11,570 --> 00:06:17,510
sell you on open BMC for the next few

00:06:13,520 --> 00:06:19,910
minutes so to start with something cool

00:06:17,510 --> 00:06:24,710
with open BMC is that you can build your

00:06:19,910 --> 00:06:26,889
open own open BMC binary this is not

00:06:24,710 --> 00:06:29,360
possible with conventional be emceeing

00:06:26,889 --> 00:06:31,940
with open BMC this is possible because

00:06:29,360 --> 00:06:36,620
the open BMC source code it's readily

00:06:31,940 --> 00:06:39,820
available on github also the codes very

00:06:36,620 --> 00:06:42,710
well maintained there's timely updates

00:06:39,820 --> 00:06:46,190
being done there and the build process

00:06:42,710 --> 00:06:48,830
is extremely easy all you have to do is

00:06:46,190 --> 00:06:50,960
run those three commands that you see on

00:06:48,830 --> 00:06:53,570
screen and it would take about an hour

00:06:50,960 --> 00:06:57,200
or so to run it on our platform and

00:06:53,570 --> 00:06:59,270
there we have a open BMC binary that we

00:06:57,200 --> 00:07:01,780
can flash in our system and test it it's

00:06:59,270 --> 00:07:01,780
that easy

00:07:02,169 --> 00:07:07,849
and the cool thing with open BMC is

00:07:04,960 --> 00:07:10,190
basically the fact that you can see the

00:07:07,849 --> 00:07:13,370
source code readily available to you

00:07:10,190 --> 00:07:16,070
right and this comes up with advantages

00:07:13,370 --> 00:07:18,800
like you can do security audits on the

00:07:16,070 --> 00:07:23,210
code that's already there and you can

00:07:18,800 --> 00:07:25,099
also do do some checks on the commits

00:07:23,210 --> 00:07:27,020
that are coming in and if you feel like

00:07:25,099 --> 00:07:29,539
they they're gonna add some potential

00:07:27,020 --> 00:07:31,190
security one repair ities what you can

00:07:29,539 --> 00:07:34,340
do is kind of be a part of the review

00:07:31,190 --> 00:07:37,400
process such as changes and make sure

00:07:34,340 --> 00:07:41,210
they're resorbed also with open BMC you

00:07:37,400 --> 00:07:44,539
flash the binary you build right so that

00:07:41,210 --> 00:07:45,740
that's that's good in the end because

00:07:44,539 --> 00:07:47,810
like you don't have to worry about

00:07:45,740 --> 00:07:50,840
whether that binary was digitally signed

00:07:47,810 --> 00:07:56,720
or not or what source was that built

00:07:50,840 --> 00:08:00,849
from right you have that clarity open

00:07:56,720 --> 00:08:03,349
BMC has modern tooling compared to IPMI

00:08:00,849 --> 00:08:06,380
as we kind of mentioned as Kenneth

00:08:03,349 --> 00:08:09,080
mentioned before it was developed

00:08:06,380 --> 00:08:11,810
1998 with 8-bit microcontrollers in mind

00:08:09,080 --> 00:08:13,610
and it lacks the complexity and

00:08:11,810 --> 00:08:18,080
scalability for the modern-day data

00:08:13,610 --> 00:08:21,260
center right but I open BMC kind of like

00:08:18,080 --> 00:08:24,740
accounts for this by making some modern

00:08:21,260 --> 00:08:29,060
design choices to start with open BMC

00:08:24,740 --> 00:08:32,750
has a REST API to ease automation tasks

00:08:29,060 --> 00:08:35,539
so you can make targeted direct REST API

00:08:32,750 --> 00:08:37,280
calls to get the parameters you exactly

00:08:35,539 --> 00:08:39,650
need you don't have to run a very

00:08:37,280 --> 00:08:41,330
general tool like a PMI tool and get a

00:08:39,650 --> 00:08:44,110
bunch of text and parse it to get your

00:08:41,330 --> 00:08:46,240
parameters can just make directed calls

00:08:44,110 --> 00:08:49,190
that's a big advantage

00:08:46,240 --> 00:08:52,310
another thing with open BMC is that you

00:08:49,190 --> 00:08:54,350
can SSH into the BMC and look at the

00:08:52,310 --> 00:08:55,490
host console again you don't need a

00:08:54,350 --> 00:08:57,860
specific tool to do that

00:08:55,490 --> 00:08:59,870
you can build one if you want to if you

00:08:57,860 --> 00:09:04,700
use that kind of flow but you can all

00:08:59,870 --> 00:09:09,290
you need is basically an SSH also

00:09:04,700 --> 00:09:12,050
another good advantage of open BMC is

00:09:09,290 --> 00:09:13,610
that it runs the latest stable Linux

00:09:12,050 --> 00:09:15,650
kernel I think they're gonna move to a

00:09:13,610 --> 00:09:18,860
4.4 kernel right now so that's between

00:09:15,650 --> 00:09:23,150
you and what are some of the advantages

00:09:18,860 --> 00:09:25,040
of running latest Linux kernel right so

00:09:23,150 --> 00:09:29,630
you have a lot of security fixes that

00:09:25,040 --> 00:09:31,700
come with with the kernel right that

00:09:29,630 --> 00:09:34,670
people have contributed upstream so you

00:09:31,700 --> 00:09:38,210
can use all of that you get updated

00:09:34,670 --> 00:09:39,320
drivers and you get current new kernel

00:09:38,210 --> 00:09:41,210
functions that other people have

00:09:39,320 --> 00:09:43,850
contributed you can make use of that you

00:09:41,210 --> 00:09:49,700
don't have to write things from scratch

00:09:43,850 --> 00:09:52,670
again also the fact that running Linux

00:09:49,700 --> 00:09:55,550
kernel an open BMC helps you very easily

00:09:52,670 --> 00:10:01,760
run any average app that kind of runs on

00:09:55,550 --> 00:10:05,780
Linux another huge advantage of open BMC

00:10:01,760 --> 00:10:09,740
is that you can customize it so you can

00:10:05,780 --> 00:10:11,690
customize the open BMC source and before

00:10:09,740 --> 00:10:14,240
you just build it so you can add

00:10:11,690 --> 00:10:16,400
services remove services or change them

00:10:14,240 --> 00:10:18,680
before you build it and once you build

00:10:16,400 --> 00:10:23,089
it once you make these changes you can

00:10:18,680 --> 00:10:25,040
and tested immediately so I mean some

00:10:23,089 --> 00:10:27,440
examples of this are say you don't like

00:10:25,040 --> 00:10:29,180
the authentication model in open BMC or

00:10:27,440 --> 00:10:30,980
you think it could be done a little

00:10:29,180 --> 00:10:32,750
differently you can go ahead and

00:10:30,980 --> 00:10:34,550
contribute that or you feel like the

00:10:32,750 --> 00:10:36,740
REST API structure could be changed a

00:10:34,550 --> 00:10:39,020
little bit you can you can talk to the

00:10:36,740 --> 00:10:42,230
peer so that developers there and and

00:10:39,020 --> 00:10:44,390
you can contribute some source you you

00:10:42,230 --> 00:10:46,160
want to integrate your app with open BMC

00:10:44,390 --> 00:10:49,250
but you feel like it'll be a more snug

00:10:46,160 --> 00:10:51,980
fit if you know some things in open BMC

00:10:49,250 --> 00:10:54,200
changed you can you can you know put

00:10:51,980 --> 00:10:55,910
some comments for that let's step back

00:10:54,200 --> 00:10:58,510
for a minute and think about the

00:10:55,910 --> 00:11:02,870
significance of this with an example

00:10:58,510 --> 00:11:05,980
so like let's take an example of ironic

00:11:02,870 --> 00:11:10,490
or OpenStack integration as an app with

00:11:05,980 --> 00:11:13,610
open VM scene so I donate is our bare

00:11:10,490 --> 00:11:15,200
metal provisioning agent and OpenStack

00:11:13,610 --> 00:11:19,610
which is a superset is our cloud

00:11:15,200 --> 00:11:21,290
provisioning system that we use so if

00:11:19,610 --> 00:11:23,660
you kind of know about OpenStack

00:11:21,290 --> 00:11:25,850
developers they tend to be really picky

00:11:23,660 --> 00:11:27,950
about things they tend to want to have

00:11:25,850 --> 00:11:32,959
control on every little bit they work

00:11:27,950 --> 00:11:35,690
with so with the conventional BMC if we

00:11:32,959 --> 00:11:38,120
wanted to integrate the agent or

00:11:35,690 --> 00:11:40,790
OpenStack that kind of say in the

00:11:38,120 --> 00:11:42,470
conventional BMC they don't have direct

00:11:40,790 --> 00:11:44,240
access to access to source code that's

00:11:42,470 --> 00:11:46,520
the primary limitation so they'll have

00:11:44,240 --> 00:11:48,440
to change the way they do things in

00:11:46,520 --> 00:11:49,610
order to integrate which they don't like

00:11:48,440 --> 00:11:55,160
very much

00:11:49,610 --> 00:11:59,420
also with weather even if you did get

00:11:55,160 --> 00:12:02,839
access to an a source code of from a BMC

00:11:59,420 --> 00:12:06,079
binder a conventional BMC vendor you get

00:12:02,839 --> 00:12:08,740
very restrictive licenses so there is no

00:12:06,079 --> 00:12:12,200
way you can contribute it back and and

00:12:08,740 --> 00:12:14,870
it's hard to do that but with open BMC

00:12:12,200 --> 00:12:17,810
this integration is much it becomes much

00:12:14,870 --> 00:12:20,480
easier firstly you have REST API to make

00:12:17,810 --> 00:12:22,940
targeted calls to and you have the

00:12:20,480 --> 00:12:26,390
ability to make the changes in the

00:12:22,940 --> 00:12:29,590
source code up and push it upstream that

00:12:26,390 --> 00:12:32,210
they like very much so

00:12:29,590 --> 00:12:36,020
also talking about building applications

00:12:32,210 --> 00:12:37,880
on topic we open BMC there is an SDK

00:12:36,020 --> 00:12:41,480
available for open BMC that you can use

00:12:37,880 --> 00:12:45,230
to test your application in case you

00:12:41,480 --> 00:12:47,180
don't have the open BMC server running

00:12:45,230 --> 00:12:51,230
open BMC on your network so you can use

00:12:47,180 --> 00:12:54,880
that SDK build an open BMC VM and then

00:12:51,230 --> 00:12:54,880
test your application with it

00:13:04,100 --> 00:13:06,819
sorry

00:13:13,760 --> 00:13:18,709
so with open BMC you can contribute to

00:13:16,130 --> 00:13:20,420
the source there's already an active

00:13:18,709 --> 00:13:23,600
community of developers and engineers

00:13:20,420 --> 00:13:25,670
working on it a good number of them are

00:13:23,600 --> 00:13:26,930
from IBM some of them are from Facebook

00:13:25,670 --> 00:13:29,149
some of us are from Rackspace and

00:13:26,930 --> 00:13:31,190
there's a lot of ODMs working on

00:13:29,149 --> 00:13:34,130
contributing you can be a part of it too

00:13:31,190 --> 00:13:37,100
there's a lot of transparency in the

00:13:34,130 --> 00:13:38,709
open BMC community all the bug reports

00:13:37,100 --> 00:13:41,480
and bug-fix activity is happening

00:13:38,709 --> 00:13:43,310
publicly and there's open conversations

00:13:41,480 --> 00:13:46,370
happening about long term planning and

00:13:43,310 --> 00:13:48,139
feature goals and what's the next big

00:13:46,370 --> 00:13:51,649
priority to pick and work on as a

00:13:48,139 --> 00:13:55,040
community so also there's a lot of

00:13:51,649 --> 00:13:56,720
community support on github as IRC and

00:13:55,040 --> 00:13:57,980
mailing lists so if you want to get

00:13:56,720 --> 00:14:00,470
started you can hit up one of these

00:13:57,980 --> 00:14:04,519
three platforms to get started and it's

00:14:00,470 --> 00:14:07,459
pretty people are pretty helpful also I

00:14:04,519 --> 00:14:10,430
wanna summarize this talk by talking

00:14:07,459 --> 00:14:12,980
about how Rackspace is open BMC cough

00:14:10,430 --> 00:14:15,800
BMC model in general has changed with

00:14:12,980 --> 00:14:17,389
open BMC and this is not very specific

00:14:15,800 --> 00:14:19,130
to Rackspace if this could be you this

00:14:17,389 --> 00:14:22,310
could be your company your organization

00:14:19,130 --> 00:14:24,290
so a traditional BMC in the traditional

00:14:22,310 --> 00:14:26,720
BMC model the biggest limitation was

00:14:24,290 --> 00:14:30,680
that we didn't have direct access to BMC

00:14:26,720 --> 00:14:32,899
source so if you think of a feature

00:14:30,680 --> 00:14:35,569
request or a bug that we wanted of file

00:14:32,899 --> 00:14:38,269
what we would do is we would go and talk

00:14:35,569 --> 00:14:40,069
to the o DM to start with then the o DM

00:14:38,269 --> 00:14:43,819
would probably talk to the VM cos

00:14:40,069 --> 00:14:45,949
supplier up tears and the BMC o OS

00:14:43,819 --> 00:14:47,839
suppliers would make the change in the

00:14:45,949 --> 00:14:49,910
source code and then they would build a

00:14:47,839 --> 00:14:51,709
binary and then give it to us then we

00:14:49,910 --> 00:14:53,510
would test it and then put under the

00:14:51,709 --> 00:14:55,370
data center it's a long process

00:14:53,510 --> 00:14:56,889
there's a lot of communication happening

00:14:55,370 --> 00:14:59,480
there's a lot of steps of communication

00:14:56,889 --> 00:15:02,120
as you know communication is kind of

00:14:59,480 --> 00:15:03,740
prone to errors so we can avoid all that

00:15:02,120 --> 00:15:06,800
with the open BMC model that you're

00:15:03,740 --> 00:15:08,540
trying to follow right now so with open

00:15:06,800 --> 00:15:10,760
BMC if you don't like something and if

00:15:08,540 --> 00:15:15,290
it's small enough change what we do is

00:15:10,760 --> 00:15:16,930
we make that change and AM is aware of

00:15:15,290 --> 00:15:19,610
this change because all the

00:15:16,930 --> 00:15:22,640
conversations about you know pushing new

00:15:19,610 --> 00:15:24,290
changes is happening publicly so they're

00:15:22,640 --> 00:15:26,610
aware of that so once this code

00:15:24,290 --> 00:15:30,029
baguettes much all they have to do

00:15:26,610 --> 00:15:32,970
to get the new code is to just think

00:15:30,029 --> 00:15:34,740
with the master branch on github also

00:15:32,970 --> 00:15:37,470
with this new model we get to take

00:15:34,740 --> 00:15:41,700
advantage of everyone who's contributing

00:15:37,470 --> 00:15:44,010
to the open BMC source at Rackspace

00:15:41,700 --> 00:15:48,290
we're really excited about open BMC I

00:15:44,010 --> 00:15:48,290

YouTube URL: https://www.youtube.com/watch?v=qbnH-B0XpL0


