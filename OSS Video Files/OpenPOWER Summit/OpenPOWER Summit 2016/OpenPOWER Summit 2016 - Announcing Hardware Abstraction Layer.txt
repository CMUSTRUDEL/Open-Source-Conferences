Title: OpenPOWER Summit 2016 - Announcing Hardware Abstraction Layer
Publication date: 2016-04-29
Playlist: OpenPOWER Summit 2016
Description: 
	Presented by Ralph Christ of IBM
Captions: 
	00:00:00,060 --> 00:00:07,919
thank you so good afternoon welcome I'm

00:00:06,299 --> 00:00:11,490
here to talk about a new project that

00:00:07,919 --> 00:00:14,849
we're in the process of implementing I'm

00:00:11,490 --> 00:00:17,369
Ralph crista she said program director

00:00:14,849 --> 00:00:19,260
Linux Technology Center if you'd like

00:00:17,369 --> 00:00:20,640
more details you only only have like ten

00:00:19,260 --> 00:00:23,070
minutes or if you want more details

00:00:20,640 --> 00:00:26,369
about what we're doing and or would like

00:00:23,070 --> 00:00:27,900
to collaborate with us participate find

00:00:26,369 --> 00:00:30,590
out when this thing is available or be

00:00:27,900 --> 00:00:36,420
notified get with me after the talk and

00:00:30,590 --> 00:00:39,059
we'll set you up all right so a few

00:00:36,420 --> 00:00:41,910
months ago we're out talking to a lot of

00:00:39,059 --> 00:00:43,200
open power customers and trying to

00:00:41,910 --> 00:00:44,940
understand what their requirements were

00:00:43,200 --> 00:00:46,770
and all that and here was the key

00:00:44,940 --> 00:00:50,070
requirements that we were hearing from

00:00:46,770 --> 00:00:51,300
the from the customers whan they wanted

00:00:50,070 --> 00:00:54,300
to be running the latest and greatest

00:00:51,300 --> 00:00:55,860
power servers and our aisle you know

00:00:54,300 --> 00:00:57,180
with the features and stuff as soon as

00:00:55,860 --> 00:00:58,949
it's available they really wanted to get

00:00:57,180 --> 00:01:01,050
on it to get the price performance and

00:00:58,949 --> 00:01:03,359
all the gadgets and stuff like that

00:01:01,050 --> 00:01:06,200
another key requirement was they wanted

00:01:03,359 --> 00:01:08,280
to run both bare metal and/or

00:01:06,200 --> 00:01:10,290
virtualized environment depending on

00:01:08,280 --> 00:01:14,040
what the workloads and the situation was

00:01:10,290 --> 00:01:16,350
so that was another one interesting they

00:01:14,040 --> 00:01:19,860
also wanted to a lot of them wanted to

00:01:16,350 --> 00:01:21,930
have their own stack from top to bottom

00:01:19,860 --> 00:01:23,580
Hardware all the way up they wanted at

00:01:21,930 --> 00:01:25,830
all their own they didn't want to you

00:01:23,580 --> 00:01:28,650
know purchase something from IBM or some

00:01:25,830 --> 00:01:31,829
other vendor and that included the

00:01:28,650 --> 00:01:34,920
distribution as well they wanted a

00:01:31,829 --> 00:01:36,689
stable Linux distribution many are

00:01:34,920 --> 00:01:38,450
either building their own private like I

00:01:36,689 --> 00:01:42,000
said several of them were derivatives

00:01:38,450 --> 00:01:44,549
sent oh s or there are other things out

00:01:42,000 --> 00:01:48,210
there debian or not to have ian but yeah

00:01:44,549 --> 00:01:50,250
debian and they're also interested in

00:01:48,210 --> 00:01:52,020
little-endian if they're going into a

00:01:50,250 --> 00:01:54,240
place where they already have x86 so

00:01:52,020 --> 00:01:56,100
these are the requirements and as you

00:01:54,240 --> 00:01:57,509
see at the bottom there's a couple

00:01:56,100 --> 00:01:59,579
requirements on there that I spoke about

00:01:57,509 --> 00:02:02,369
that is sort of like trying to put a

00:01:59,579 --> 00:02:04,170
square peg in a round hole and that and

00:02:02,369 --> 00:02:07,649
that would be want the latest and

00:02:04,170 --> 00:02:10,590
greatest hardware but I want a stable

00:02:07,649 --> 00:02:12,930
operating system and as you all know

00:02:10,590 --> 00:02:13,680
developers when you have to replace the

00:02:12,930 --> 00:02:15,510
kernel

00:02:13,680 --> 00:02:17,519
a lot of different things to get the

00:02:15,510 --> 00:02:20,400
latest greatest server having the old

00:02:17,519 --> 00:02:22,469
operating system stable on it can you

00:02:20,400 --> 00:02:26,219
know just this isn't going to happen

00:02:22,469 --> 00:02:27,870
because time has moved on so anyway we

00:02:26,219 --> 00:02:29,489
put our little cap on try to figure out

00:02:27,870 --> 00:02:32,159
what look we could come up with to solve

00:02:29,489 --> 00:02:36,139
this and essentially what we're doing I

00:02:32,159 --> 00:02:41,040
have a new project open power host OS /

00:02:36,139 --> 00:02:42,569
KBM repository and so we thought of a

00:02:41,040 --> 00:02:44,280
lot of different solutions but this is

00:02:42,569 --> 00:02:47,760
the one that we thought would help

00:02:44,280 --> 00:02:50,430
everybody out so essentially what we're

00:02:47,760 --> 00:02:54,209
going to do is we're going to use host

00:02:50,430 --> 00:02:57,840
OS as an abstraction layer that allows

00:02:54,209 --> 00:03:01,769
you to them and a stable operating

00:02:57,840 --> 00:03:04,469
system on it so think of it as a hal but

00:03:01,769 --> 00:03:06,450
you could call it a host OS abstraction

00:03:04,469 --> 00:03:09,569
layer as well to get the hell from that

00:03:06,450 --> 00:03:11,129
way so so this way you could get the

00:03:09,569 --> 00:03:12,659
latest greatest hardware and run your

00:03:11,129 --> 00:03:15,209
stable operating system and I'll show

00:03:12,659 --> 00:03:16,919
you a picture of that in a minute at the

00:03:15,209 --> 00:03:18,569
same time because people wanted to build

00:03:16,919 --> 00:03:20,129
their own distros and stuff like that

00:03:18,569 --> 00:03:21,989
they wanted to get to the latest

00:03:20,129 --> 00:03:24,629
greatest technology as soon as possible

00:03:21,989 --> 00:03:27,419
we said well let's let's take what we do

00:03:24,629 --> 00:03:27,780
inside IBM we have a product in IBM

00:03:27,419 --> 00:03:32,069
called

00:03:27,780 --> 00:03:36,359
Linux on power k vm a virtualization

00:03:32,069 --> 00:03:38,030
platform for k vm and let's take it all

00:03:36,359 --> 00:03:42,359
and put it out into the community in

00:03:38,030 --> 00:03:46,379
repositories and then also let's make

00:03:42,359 --> 00:03:48,120
sure when it's open out there we we then

00:03:46,379 --> 00:03:49,889
you know have some way to collaborate

00:03:48,120 --> 00:03:53,790
with our partners and people that are

00:03:49,889 --> 00:03:56,519
interested so here's sort of the the

00:03:53,790 --> 00:04:01,650
notion of the host OS as an abstraction

00:03:56,519 --> 00:04:05,459
layer so today with power 8 or power 8

00:04:01,650 --> 00:04:07,290
plus whatever that's coming essentially

00:04:05,459 --> 00:04:09,870
on top of firmware whether it's be open

00:04:07,290 --> 00:04:13,500
BMC BMC you would pick your favorite

00:04:09,870 --> 00:04:16,109
firm or wherever we put this host OS or

00:04:13,500 --> 00:04:18,720
how so essentially a virtualization

00:04:16,109 --> 00:04:21,090
layer has the latest greatest kernel in

00:04:18,720 --> 00:04:23,789
it QM you deliver it all that so it

00:04:21,090 --> 00:04:27,050
understands the hardware below it and

00:04:23,789 --> 00:04:30,690
then on top of it you run an existing

00:04:27,050 --> 00:04:32,850
distribution of some flavor and that's

00:04:30,690 --> 00:04:34,710
how you get your stable operating system

00:04:32,850 --> 00:04:38,730
so instead of virtualizing it you just

00:04:34,710 --> 00:04:42,090
create one large guest that consumes all

00:04:38,730 --> 00:04:43,620
the hardware so use all the hardware

00:04:42,090 --> 00:04:45,720
with the one guest and you have this

00:04:43,620 --> 00:04:46,770
shim if you will or abstraction layer

00:04:45,720 --> 00:04:49,260
that's going to get you to the new

00:04:46,770 --> 00:04:50,790
hardware so then you go across time as

00:04:49,260 --> 00:04:53,940
you can see brand new hardware

00:04:50,790 --> 00:04:57,360
whether it be power a plus or power nine

00:04:53,940 --> 00:04:59,010
or whatever this this layer here needs

00:04:57,360 --> 00:05:01,220
to have a new kernel to understand how

00:04:59,010 --> 00:05:04,170
to talk to the firmware how to boot up

00:05:01,220 --> 00:05:06,660
all the new i/o features functions with

00:05:04,170 --> 00:05:10,140
all that and you don't have to go rip up

00:05:06,660 --> 00:05:12,720
the kernel in existing stable operating

00:05:10,140 --> 00:05:16,050
system so this will have the old stable

00:05:12,720 --> 00:05:20,520
kernel in it running on a brand new

00:05:16,050 --> 00:05:24,930
kernel that we've tested validated it

00:05:20,520 --> 00:05:30,830
works from here down and and and and

00:05:24,930 --> 00:05:33,090
that's what you'll get so the actual

00:05:30,830 --> 00:05:36,150
high-level implementation of this thing

00:05:33,090 --> 00:05:38,580
is IBM we are going to seed this

00:05:36,150 --> 00:05:40,890
repository from the work we do on our

00:05:38,580 --> 00:05:43,320
product that we actually have been

00:05:40,890 --> 00:05:46,830
putting out there for at least a year

00:05:43,320 --> 00:05:49,470
now we're on version 3.1 the end of the

00:05:46,830 --> 00:05:52,110
years version 3.1 ones coming out so

00:05:49,470 --> 00:05:54,120
we're gonna seed these repositories from

00:05:52,110 --> 00:05:56,790
all the libraries that we have internal

00:05:54,120 --> 00:05:58,530
dye BM today for doing our own product

00:05:56,790 --> 00:06:00,840
we're gonna put them all out there and

00:05:58,530 --> 00:06:02,010
github so it'll have the latest and

00:06:00,840 --> 00:06:04,290
greatest kernel the kernel that we're

00:06:02,010 --> 00:06:05,640
building our next product on and it'll

00:06:04,290 --> 00:06:10,560
know of all the hardware up to that

00:06:05,640 --> 00:06:12,570
point support that qmu repository live

00:06:10,560 --> 00:06:15,360
repository so that's all the sources

00:06:12,570 --> 00:06:16,800
there but having all the source we've

00:06:15,360 --> 00:06:18,479
always had this source out there but

00:06:16,800 --> 00:06:19,919
it's always been upstream and the

00:06:18,479 --> 00:06:20,790
challenge for people is figuring out how

00:06:19,919 --> 00:06:23,070
to get it

00:06:20,790 --> 00:06:24,690
what's all the latest patches the right

00:06:23,070 --> 00:06:27,960
levels and all that to make something

00:06:24,690 --> 00:06:30,210
that's coherent so all the source will

00:06:27,960 --> 00:06:32,280
be in the one place we can get it second

00:06:30,210 --> 00:06:36,240
thing that's key is we'll have build

00:06:32,280 --> 00:06:40,889
scripts such that the developer can go

00:06:36,240 --> 00:06:43,169
and pick up their their host alas they

00:06:40,889 --> 00:06:45,690
can get the build stuff and build it

00:06:43,169 --> 00:06:47,370
with their choice of distro so you can

00:06:45,690 --> 00:06:51,360
they'll be build scripts so if you want

00:06:47,370 --> 00:06:53,460
to build host OS for fedora a Debian

00:06:51,360 --> 00:06:55,319
sent to us or whatever there'll be a

00:06:53,460 --> 00:06:57,810
build script allow you to build this

00:06:55,319 --> 00:06:59,940
thing that I'm talking about and then

00:06:57,810 --> 00:07:01,770
another set of repositories that will

00:06:59,940 --> 00:07:04,259
have a validation suite that you can run

00:07:01,770 --> 00:07:07,530
against what you built to make sure what

00:07:04,259 --> 00:07:11,280
you built runs and it will get the job

00:07:07,530 --> 00:07:14,849
done so we're gonna use the same exact

00:07:11,280 --> 00:07:16,680
code these same build scripts same

00:07:14,849 --> 00:07:20,430
source same everything for our own

00:07:16,680 --> 00:07:22,889
product that our next product we're

00:07:20,430 --> 00:07:24,419
currently out there's three one our next

00:07:22,889 --> 00:07:27,900
version is three one one later in a year

00:07:24,419 --> 00:07:30,810
it'll it'll be built from from from

00:07:27,900 --> 00:07:33,240
these repositories and have all the

00:07:30,810 --> 00:07:34,740
normal open source guidelines we'll have

00:07:33,240 --> 00:07:37,979
maintained errs for each of the

00:07:34,740 --> 00:07:41,009
repositories etc we welcome people's

00:07:37,979 --> 00:07:43,020
input feedback patches or whatever will

00:07:41,009 --> 00:07:44,880
have the same rules though you know you

00:07:43,020 --> 00:07:47,699
need to push it upstream first get it

00:07:44,880 --> 00:07:50,130
community accepted if it is we'll take

00:07:47,699 --> 00:07:51,719
it into the repository if you need help

00:07:50,130 --> 00:07:52,620
get to pushed upstream is something cool

00:07:51,719 --> 00:07:54,180
and you'd our help

00:07:52,620 --> 00:07:58,259
I mean we'd be glad to do that as well

00:07:54,180 --> 00:08:01,620
but but that's essentially the the

00:07:58,259 --> 00:08:04,710
implementation at the highest level like

00:08:01,620 --> 00:08:08,639
I said the timeline we plan to seed the

00:08:04,710 --> 00:08:09,930
libraries get it all set up in beta form

00:08:08,639 --> 00:08:11,940
by July of this year

00:08:09,930 --> 00:08:15,570
it just happens to coincide when that's

00:08:11,940 --> 00:08:18,810
when we're gonna bait our 3-1-1 so we'll

00:08:15,570 --> 00:08:21,449
by then have run through some mechanics

00:08:18,810 --> 00:08:24,990
make sure it builds runs has tested it's

00:08:21,449 --> 00:08:26,699
it's good and it'll be out there we

00:08:24,990 --> 00:08:29,130
don't actually product our we don't

00:08:26,699 --> 00:08:33,950
actually GA our product what we want

00:08:29,130 --> 00:08:36,089
until november of this year and and

00:08:33,950 --> 00:08:38,760
that's when we're going to officially

00:08:36,089 --> 00:08:41,190
then say ok it's GA there's a ga version

00:08:38,760 --> 00:08:43,020
of this thing out there and then from

00:08:41,190 --> 00:08:45,779
that we'll move on you know to the next

00:08:43,020 --> 00:08:48,270
version of this host OS which is called

00:08:45,779 --> 00:08:49,230
4.1 and that's the one that's going to

00:08:48,270 --> 00:08:51,660
support

00:08:49,230 --> 00:08:53,550
all the latest and greatest power 9

00:08:51,660 --> 00:08:55,650
features functions the stuff that we'll

00:08:53,550 --> 00:08:58,350
be working on so the beauty as well as

00:08:55,650 --> 00:09:00,210
we're built building this thing you'll

00:08:58,350 --> 00:09:02,820
actually be able to see in one location

00:09:00,210 --> 00:09:05,420
all the enablement that we're putting

00:09:02,820 --> 00:09:08,880
into the kernel for power you know for

00:09:05,420 --> 00:09:10,470
for open power for the for the p9 kernel

00:09:08,880 --> 00:09:14,430
and stuff that all the work we're doing

00:09:10,470 --> 00:09:16,110
and we'll welcome anybody's input on

00:09:14,430 --> 00:09:17,790
that as well or you know for different

00:09:16,110 --> 00:09:20,400
iOS and setting the other thing so

00:09:17,790 --> 00:09:24,030
that's the gist of it so that the key

00:09:20,400 --> 00:09:26,670
like I said is a new open open power

00:09:24,030 --> 00:09:27,960
repository it's going to help speed to

00:09:26,670 --> 00:09:30,150
time to market for those who are

00:09:27,960 --> 00:09:32,520
building their own private distros it

00:09:30,150 --> 00:09:35,660
wouldn't surprise but it would be good

00:09:32,520 --> 00:09:39,420
as well if even district art or such as

00:09:35,660 --> 00:09:41,550
canonical or Red Hat and those sorts of

00:09:39,420 --> 00:09:44,160
folks as well we're gonna be encouraging

00:09:41,550 --> 00:09:46,560
them to go pick up these sources from

00:09:44,160 --> 00:09:50,400
there as well versus trying to figure

00:09:46,560 --> 00:09:52,230
out where it's at upstream said like I

00:09:50,400 --> 00:09:54,320
said a new collaboration model too lest

00:09:52,230 --> 00:09:56,790
you work with us real time as we're

00:09:54,320 --> 00:09:58,790
moving down the road to the latest and

00:09:56,790 --> 00:10:03,090
greatest open power processors and

00:09:58,790 --> 00:10:05,340
systems we're also hoping that you know

00:10:03,090 --> 00:10:07,650
as we as we go here you know canonical

00:10:05,340 --> 00:10:10,370
has a version of KVM and in their

00:10:07,650 --> 00:10:12,750
product Red Hat has something called Rev

00:10:10,370 --> 00:10:13,980
we have one other people are gonna have

00:10:12,750 --> 00:10:15,750
fun and we're hoping that if everybody

00:10:13,980 --> 00:10:17,850
again works out of their set of

00:10:15,750 --> 00:10:20,430
repositories that we don't see any

00:10:17,850 --> 00:10:24,270
divergences as well rather relative to

00:10:20,430 --> 00:10:26,400
the hypervisor level so it's also a

00:10:24,270 --> 00:10:30,870
great idea for sharing leveraging ideas

00:10:26,400 --> 00:10:33,510
so anyway and also you know like I said

00:10:30,870 --> 00:10:35,060
I think the key for that inspiration for

00:10:33,510 --> 00:10:38,220
this was just to provide some

00:10:35,060 --> 00:10:40,710
abstraction layer to allow people that

00:10:38,220 --> 00:10:42,780
need to support and the applications on

00:10:40,710 --> 00:10:45,480
an old operating system run on the

00:10:42,780 --> 00:10:49,140
latest and greatest new hardware servers

00:10:45,480 --> 00:10:52,680
with an i/o with like I said the stable

00:10:49,140 --> 00:10:54,450
operating system so with that I thank

00:10:52,680 --> 00:10:56,280
you I'll be at the back anybody

00:10:54,450 --> 00:10:58,680
interested in collaborating with us or

00:10:56,280 --> 00:10:59,660
or if you want to be on an email or

00:10:58,680 --> 00:11:01,460
something or

00:10:59,660 --> 00:11:03,920
when we make this thing available in

00:11:01,460 --> 00:11:05,450
July so that you remember to go out and

00:11:03,920 --> 00:11:07,520
look at it please get with me and I'll

00:11:05,450 --> 00:11:10,510
be happy to get in contact with you

00:11:07,520 --> 00:11:10,510

YouTube URL: https://www.youtube.com/watch?v=HQ39CUUQrGU


