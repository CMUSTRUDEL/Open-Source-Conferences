Title: OpenPOWER Summit US 2018: The Palmolive Effect
Publication date: 2018-04-04
Playlist: OpenPOWER Summit US 2018
Description: 
	Christopher Sullivan, Assistant Director for Biocomputing, Center for Genome Research and Biocomputing, Oregon State University, discusses The Palmolive Effect: a model for implementing OpenPOWER hardware into a heterogeneous infrastructure at OpenPOWER Summit 2018.

For more information, please visit: http://www.openpowerfoundation.org
Captions: 
	00:00:05,650 --> 00:00:19,869
yeah oh and I'm a talker watch out here

00:00:13,790 --> 00:00:19,869
comes up here

00:00:22,700 --> 00:00:28,830
all right so I'm gonna talk with us

00:00:26,580 --> 00:00:30,990
today about creating a heterogeneous

00:00:28,830 --> 00:00:33,540
environment I think this is really

00:00:30,990 --> 00:00:35,940
important because in the end we don't

00:00:33,540 --> 00:00:37,860
want to live with only one architecture

00:00:35,940 --> 00:00:39,330
as researchers and scientists we really

00:00:37,860 --> 00:00:41,879
want to take advantage of every single

00:00:39,330 --> 00:00:43,350
architecture that we can find value to

00:00:41,879 --> 00:00:45,540
and it will help us change the way we do

00:00:43,350 --> 00:00:48,420
science so I call this talk the

00:00:45,540 --> 00:00:51,420
Palmolive effect because my goal is to

00:00:48,420 --> 00:00:52,949
get to where users are able to take

00:00:51,420 --> 00:00:54,750
advantage of the resources without even

00:00:52,949 --> 00:00:57,170
knowing that they're doing it kind of

00:00:54,750 --> 00:00:59,460
like Madge and Palmolive back in the day

00:00:57,170 --> 00:01:01,290
when it softened your hands while you

00:00:59,460 --> 00:01:04,290
did the dishes come on guys I see you

00:01:01,290 --> 00:01:06,170
laughing there's a whole generation of

00:01:04,290 --> 00:01:08,340
kids who don't know about this okay and

00:01:06,170 --> 00:01:09,720
I talk to my students who are like what

00:01:08,340 --> 00:01:13,799
are you talking about I'm like oh gosh

00:01:09,720 --> 00:01:15,930
darn it I hope the people so this is the

00:01:13,799 --> 00:01:17,700
idea is that you really want the end

00:01:15,930 --> 00:01:20,040
user not even knowing you have to almost

00:01:17,700 --> 00:01:22,409
tell them hey by the way you're taking

00:01:20,040 --> 00:01:24,900
advantage of some really cool stuff okay

00:01:22,409 --> 00:01:26,670
so my idea is jobs are in the mid

00:01:24,900 --> 00:01:28,350
architecture while you get your coffee

00:01:26,670 --> 00:01:30,450
cuz that's really the goal here is to

00:01:28,350 --> 00:01:32,970
get our users to really make a good plan

00:01:30,450 --> 00:01:34,410
get themselves established get

00:01:32,970 --> 00:01:36,210
everything tested and when everything's

00:01:34,410 --> 00:01:37,560
ready to go watch a bunch of jobs and

00:01:36,210 --> 00:01:38,760
then go get your coffee go work on

00:01:37,560 --> 00:01:40,950
something else okay

00:01:38,760 --> 00:01:42,090
knowing that you've done tests you're

00:01:40,950 --> 00:01:43,800
going to get your stuff through and

00:01:42,090 --> 00:01:44,940
that's the way it's going to be you have

00:01:43,800 --> 00:01:46,680
faith that things are gonna get to the

00:01:44,940 --> 00:01:47,930
other end and you know that the data is

00:01:46,680 --> 00:01:51,060
gonna be good

00:01:47,930 --> 00:01:52,710
so to that end we are going to look

00:01:51,060 --> 00:01:54,120
through again a little bit of some of

00:01:52,710 --> 00:01:58,110
the stuff we saw this morning which is

00:01:54,120 --> 00:01:59,130
what is the sea GRB at Oregon State why

00:01:58,110 --> 00:02:01,290
do we put these things into our

00:01:59,130 --> 00:02:03,659
heterogeneous environment haven't how to

00:02:01,290 --> 00:02:06,960
manage the settings for multiple users

00:02:03,659 --> 00:02:09,179
across a heterogeneous environment talk

00:02:06,960 --> 00:02:12,540
a little bit about schedulers and then

00:02:09,179 --> 00:02:13,860
running jobs so and then an example of

00:02:12,540 --> 00:02:18,150
how we've been able to take advantage of

00:02:13,860 --> 00:02:21,030
it inside the center so we have a core

00:02:18,150 --> 00:02:22,170
facility and we focus in on

00:02:21,030 --> 00:02:23,819
computational science for the whole

00:02:22,170 --> 00:02:26,129
university building infrastructure for

00:02:23,819 --> 00:02:27,150
researchers is a primary goal so we

00:02:26,129 --> 00:02:29,220
don't want our researchers to have to

00:02:27,150 --> 00:02:30,450
deal with any of the hardware I think

00:02:29,220 --> 00:02:32,160
this is a good model for everybody

00:02:30,450 --> 00:02:34,230
tools for data mining and data

00:02:32,160 --> 00:02:35,459
processing is also within our scope so

00:02:34,230 --> 00:02:35,950
we are able to take researchers who

00:02:35,459 --> 00:02:38,080
aren't able

00:02:35,950 --> 00:02:40,690
get things done and we actually have

00:02:38,080 --> 00:02:42,250
faculty will help them do this we build

00:02:40,690 --> 00:02:44,739
new algorithms I have a paper coming out

00:02:42,250 --> 00:02:45,580
that I just got today that we're gonna

00:02:44,739 --> 00:02:47,680
submit today

00:02:45,580 --> 00:02:51,069
on building a new algorithm for a

00:02:47,680 --> 00:02:55,030
simulation of speech tree species in the

00:02:51,069 --> 00:02:57,340
forest so we constantly are developing

00:02:55,030 --> 00:02:59,440
new tools creating deliverables for

00:02:57,340 --> 00:03:01,630
publications again we're gonna post that

00:02:59,440 --> 00:03:03,099
stuff up for open source we also have

00:03:01,630 --> 00:03:04,810
tools that we do for a sequence

00:03:03,099 --> 00:03:06,400
alignment all of these are going out

00:03:04,810 --> 00:03:08,470
towards publications and it changes the

00:03:06,400 --> 00:03:10,330
way that we're looked at it reduces our

00:03:08,470 --> 00:03:12,640
cost because people are interested in

00:03:10,330 --> 00:03:16,390
working with us and increases the scope

00:03:12,640 --> 00:03:19,000
as we go so as we build infrastructure

00:03:16,390 --> 00:03:21,400
we started this long time ago in the

00:03:19,000 --> 00:03:24,069
year 2000 with a single machine that was

00:03:21,400 --> 00:03:25,420
four processors when I came in and I

00:03:24,069 --> 00:03:26,709
decided we were going to start changing

00:03:25,420 --> 00:03:28,090
that because I came from the physics

00:03:26,709 --> 00:03:30,610
department in the world of physics we

00:03:28,090 --> 00:03:33,459
actually used lots of machines to model

00:03:30,610 --> 00:03:34,930
atoms in a crystalline lattice and I

00:03:33,459 --> 00:03:36,700
decided this was a good model for

00:03:34,930 --> 00:03:39,670
everybody and it's been extremely

00:03:36,700 --> 00:03:42,370
successful we were able to start

00:03:39,670 --> 00:03:44,380
bringing online a small cluster and then

00:03:42,370 --> 00:03:45,790
we encourage people to buy equipment

00:03:44,380 --> 00:03:47,500
with grants and we helped them put that

00:03:45,790 --> 00:03:49,090
in there and then we would help them run

00:03:47,500 --> 00:03:50,650
that equipment and the granting agencies

00:03:49,090 --> 00:03:52,540
love this because in the end it

00:03:50,650 --> 00:03:53,680
questions were being answered and the

00:03:52,540 --> 00:03:55,269
people who didn't know how to run the

00:03:53,680 --> 00:03:58,510
computers still got to be able to take

00:03:55,269 --> 00:04:02,049
advantage of the resources okay we

00:03:58,510 --> 00:04:03,819
created a large storage server at the

00:04:02,049 --> 00:04:06,880
time it was ZFS and we basically were

00:04:03,819 --> 00:04:09,100
able to utilize that to get grants and

00:04:06,880 --> 00:04:10,690
keep that moving forward and we allowed

00:04:09,100 --> 00:04:12,850
our users to start renting resources

00:04:10,690 --> 00:04:15,670
from us and allocating that onto grants

00:04:12,850 --> 00:04:18,100
so at the end we're currently running

00:04:15,670 --> 00:04:21,099
like I said this morning about 20,000

00:04:18,100 --> 00:04:22,870
jobs a day we have closer to 5 thousand

00:04:21,099 --> 00:04:24,940
processors about 4 petabytes of

00:04:22,870 --> 00:04:26,349
redundant storage we have lots of

00:04:24,940 --> 00:04:30,160
machines with greater than a terabyte of

00:04:26,349 --> 00:04:32,320
RAM we are still moving on to the power

00:04:30,160 --> 00:04:35,169
platform but we already have six of them

00:04:32,320 --> 00:04:37,030
going and our users truly love them and

00:04:35,169 --> 00:04:38,260
we're writing them into grants and

00:04:37,030 --> 00:04:40,539
that's what's important here is that the

00:04:38,260 --> 00:04:42,460
model that we existed before this time

00:04:40,539 --> 00:04:45,580
still exists today as weak technology

00:04:42,460 --> 00:04:48,430
changes you know our big goals are

00:04:45,580 --> 00:04:52,300
degrees decrease in analysis time

00:04:48,430 --> 00:04:53,680
and increase the resources so the six

00:04:52,300 --> 00:04:55,750
power box has really helped us do

00:04:53,680 --> 00:04:57,400
exactly that those are the things that

00:04:55,750 --> 00:04:58,750
we were after at the time and that's why

00:04:57,400 --> 00:05:01,630
we started moving back onto the power

00:04:58,750 --> 00:05:03,400
platform let's look why you do

00:05:01,630 --> 00:05:04,630
computational methods and techniques

00:05:03,400 --> 00:05:09,130
need to be in a heterogeneous

00:05:04,630 --> 00:05:11,440
environment we really feel like a non

00:05:09,130 --> 00:05:14,470
heterogeneous infrastructure limits the

00:05:11,440 --> 00:05:16,419
users to one set of tools and that's a

00:05:14,470 --> 00:05:19,210
big problem because science doesn't live

00:05:16,419 --> 00:05:20,710
in one tool to answer a question we

00:05:19,210 --> 00:05:22,930
really need to run multiple linearly

00:05:20,710 --> 00:05:25,930
independent tools and converge into a

00:05:22,930 --> 00:05:28,090
space no ability negotiate price that's

00:05:25,930 --> 00:05:29,830
a really big one so if a company knows

00:05:28,090 --> 00:05:32,560
you think I got you they're never gonna

00:05:29,830 --> 00:05:34,680
want to give you back any resources to

00:05:32,560 --> 00:05:36,820
actually make a deal with you and so

00:05:34,680 --> 00:05:38,410
we've seen this for a long time with

00:05:36,820 --> 00:05:39,729
Intel they have no desire to help

00:05:38,410 --> 00:05:42,630
anybody they're basically like give us

00:05:39,729 --> 00:05:44,740
money and as their desktop market dies

00:05:42,630 --> 00:05:46,780
because people aren't using and buying

00:05:44,740 --> 00:05:48,940
desktops at the same rate they're

00:05:46,780 --> 00:05:50,259
stretching to try and make things happen

00:05:48,940 --> 00:05:51,699
and we're watching them just get rid of

00:05:50,259 --> 00:05:53,320
employees because that model that they

00:05:51,699 --> 00:05:57,520
had which was everybody comes to us

00:05:53,320 --> 00:05:59,110
automatically is dying and x86 machines

00:05:57,520 --> 00:06:01,840
get massively overloaded pretty easily

00:05:59,110 --> 00:06:04,180
so if you've got 60 processors on the

00:06:01,840 --> 00:06:05,650
next 86 machine and you start 70 jobs on

00:06:04,180 --> 00:06:08,860
that machine it starts to already become

00:06:05,650 --> 00:06:10,240
sluggish and slow you crank it up a

00:06:08,860 --> 00:06:12,190
little bit more the machine will become

00:06:10,240 --> 00:06:13,860
unresponsive to where you can't even hit

00:06:12,190 --> 00:06:16,360
enter anymore at the command line

00:06:13,860 --> 00:06:19,389
now we think this is always fun so we

00:06:16,360 --> 00:06:21,190
try and really test our hardware and so

00:06:19,389 --> 00:06:23,440
we got one of the part of the first

00:06:21,190 --> 00:06:25,510
power eight boxes and we said all is to

00:06:23,440 --> 00:06:27,970
have this fun test and but time we got

00:06:25,510 --> 00:06:29,560
to 1,500 jobs on the machine and it was

00:06:27,970 --> 00:06:32,289
still responsive and would never come

00:06:29,560 --> 00:06:34,270
down we really could not crash it we

00:06:32,289 --> 00:06:36,909
decided that this was the difference

00:06:34,270 --> 00:06:39,820
between a desktop and a server intel was

00:06:36,909 --> 00:06:41,530
really selling robust desktops to people

00:06:39,820 --> 00:06:43,720
on a server class piece of hardware and

00:06:41,530 --> 00:06:45,520
in the end iBM has a server class

00:06:43,720 --> 00:06:47,970
processor being used in a server class

00:06:45,520 --> 00:06:50,380
context it can handle the load of

00:06:47,970 --> 00:06:53,409
massive amount of jobs and workload

00:06:50,380 --> 00:06:56,139
without letting the users see that hit

00:06:53,409 --> 00:06:58,029
this is impressive the other thing is is

00:06:56,139 --> 00:07:00,900
limits to i/o this is a this is a big

00:06:58,029 --> 00:07:02,610
problem so Intel's not really interested

00:07:00,900 --> 00:07:03,990
changing the input-output pathways and

00:07:02,610 --> 00:07:06,240
other groups are not interested in that

00:07:03,990 --> 00:07:09,690
and this is where we really found the

00:07:06,240 --> 00:07:11,190
benefit to be able to scale out and get

00:07:09,690 --> 00:07:14,729
get into the data spaces we've never

00:07:11,190 --> 00:07:17,610
been able to do let's look at the

00:07:14,729 --> 00:07:19,560
heterogeneous environment so ya provides

00:07:17,610 --> 00:07:20,729
the users with a cafeteria of tools so

00:07:19,560 --> 00:07:22,979
yeah you get a set in the center now

00:07:20,729 --> 00:07:24,330
you're not limited in any piece of tool

00:07:22,979 --> 00:07:25,530
somebody wrote it on anything you can

00:07:24,330 --> 00:07:26,970
run it because we run a heterogeneous

00:07:25,530 --> 00:07:29,130
environment I can just go buy that piece

00:07:26,970 --> 00:07:31,229
of equipment plug it in add it to my

00:07:29,130 --> 00:07:33,810
cluster BAM we're up and running it

00:07:31,229 --> 00:07:36,990
doesn't matter if it's x86 arm power

00:07:33,810 --> 00:07:38,880
give it to me let's go you can negotiate

00:07:36,990 --> 00:07:40,770
a price because when Intel shows up at

00:07:38,880 --> 00:07:42,720
my office I go I don't care I don't go

00:07:40,770 --> 00:07:43,710
buy power and they look at me like well

00:07:42,720 --> 00:07:45,690
you're one of the only people who can

00:07:43,710 --> 00:07:47,610
well that's going to change other people

00:07:45,690 --> 00:07:49,590
can run it too now and we're changing

00:07:47,610 --> 00:07:53,550
that so Intel's gonna lose their stand

00:07:49,590 --> 00:07:56,400
on this we can now finally embrace new

00:07:53,550 --> 00:07:59,460
input/output pathways oh my goodness the

00:07:56,400 --> 00:08:02,190
amount of data that we deal with this is

00:07:59,460 --> 00:08:05,400
the biggest piece to us we were joking

00:08:02,190 --> 00:08:07,680
on data on machines that just could not

00:08:05,400 --> 00:08:09,270
move the data across the bus and in the

00:08:07,680 --> 00:08:10,500
end I'm spending a lot of money on these

00:08:09,270 --> 00:08:12,479
pieces of equipment and I'm just

00:08:10,500 --> 00:08:16,949
watching this go at the exact same speed

00:08:12,479 --> 00:08:18,479
okay moving on to the copy env link and

00:08:16,949 --> 00:08:21,630
the bus architecture within the IBM

00:08:18,479 --> 00:08:24,330
power and the open power devastated us

00:08:21,630 --> 00:08:27,380
we're generating in some of the projects

00:08:24,330 --> 00:08:30,270
quarter petabyte of data every month

00:08:27,380 --> 00:08:33,479
another project is almost a hundred tera

00:08:30,270 --> 00:08:35,640
every week and so we're being impacted

00:08:33,479 --> 00:08:39,419
with data massively and if we don't do

00:08:35,640 --> 00:08:41,339
this we're going to be screwed we get

00:08:39,419 --> 00:08:43,560
multiple pathways forward now with

00:08:41,339 --> 00:08:46,110
multiple vendors and that's really what

00:08:43,560 --> 00:08:47,550
we're after let's look at how to manage

00:08:46,110 --> 00:08:50,370
user settings across multiple

00:08:47,550 --> 00:08:52,140
architectures all right this is the

00:08:50,370 --> 00:08:54,600
magic and we're gonna dig into this a

00:08:52,140 --> 00:08:57,540
little bit so we actually started out I

00:08:54,600 --> 00:08:59,279
did this a long time ago when we had

00:08:57,540 --> 00:09:02,160
lots of different architectures out

00:08:59,279 --> 00:09:06,330
there everybody we had AI x264 H bucks

00:09:02,160 --> 00:09:08,910
OSF Wan Sun OS Solaris daemon and we

00:09:06,330 --> 00:09:11,400
were able to back then integrate all of

00:09:08,910 --> 00:09:12,660
them into a single cluster

00:09:11,400 --> 00:09:14,880
and be able to take advantage of them

00:09:12,660 --> 00:09:16,440
now at that time many of them were only

00:09:14,880 --> 00:09:18,450
running specific seas as a software that

00:09:16,440 --> 00:09:20,250
only ran on the specific architecture so

00:09:18,450 --> 00:09:21,960
we had to basically submit jobs to the

00:09:20,250 --> 00:09:23,490
appropriate place and I'm trying to

00:09:21,960 --> 00:09:25,890
obstruct that over the last couple years

00:09:23,490 --> 00:09:29,160
so we use environment settings to help

00:09:25,890 --> 00:09:30,510
us basically manage architecture we use

00:09:29,160 --> 00:09:32,850
things like you name I mean these are

00:09:30,510 --> 00:09:35,640
simple tools that have been out there

00:09:32,850 --> 00:09:38,040
for 40 years and we can still use them

00:09:35,640 --> 00:09:39,480
ok and there tell us exactly what we

00:09:38,040 --> 00:09:40,980
need to know about the architecture so

00:09:39,480 --> 00:09:44,280
that way I can dynamically reprovision

00:09:40,980 --> 00:09:46,260
things we have global settings for our

00:09:44,280 --> 00:09:47,610
users that manage things for them and

00:09:46,260 --> 00:09:49,800
they can then manage their own settings

00:09:47,610 --> 00:09:51,720
below that and then we maintain a

00:09:49,800 --> 00:09:53,190
separate directory path for all the

00:09:51,720 --> 00:09:55,440
binaries based upon the architectures

00:09:53,190 --> 00:09:56,790
and when they log in the system

00:09:55,440 --> 00:09:58,470
identifies the architecture and then

00:09:56,790 --> 00:10:00,270
applies the appropriate paths to

00:09:58,470 --> 00:10:01,800
everything and all the binaries

00:10:00,270 --> 00:10:04,380
regardless of where they landed will

00:10:01,800 --> 00:10:06,480
work so my users just submit happily

00:10:04,380 --> 00:10:08,010
they don't care which machine it goes to

00:10:06,480 --> 00:10:11,340
they know the binaries are there is just

00:10:08,010 --> 00:10:13,680
gonna happen ok this is why we make an

00:10:11,340 --> 00:10:17,040
environment actually work for the users

00:10:13,680 --> 00:10:19,440
so here's how we started out both in CSH

00:10:17,040 --> 00:10:21,150
and bash more users can use either we

00:10:19,440 --> 00:10:21,810
don't want to limit anyone ever this is

00:10:21,150 --> 00:10:24,600
research

00:10:21,810 --> 00:10:27,480
and so in CSH we literally can have the

00:10:24,600 --> 00:10:29,610
dot CSS hrc file the term in the

00:10:27,480 --> 00:10:32,060
architecture and then call that from

00:10:29,610 --> 00:10:34,260
there on out and basically apply

00:10:32,060 --> 00:10:35,970
individual user settings based upon

00:10:34,260 --> 00:10:39,090
architecture call everything perfectly

00:10:35,970 --> 00:10:41,700
and we're done same thing in bash and

00:10:39,090 --> 00:10:43,200
then once I've got that set we can

00:10:41,700 --> 00:10:44,850
actually just use it as a variable I can

00:10:43,200 --> 00:10:46,560
say those get this file go get that file

00:10:44,850 --> 00:10:48,540
go get another file give me different

00:10:46,560 --> 00:10:51,270
aliases do anything I want

00:10:48,540 --> 00:10:54,390
based upon architecture it's literally

00:10:51,270 --> 00:10:57,090
that easy and so with my users login

00:10:54,390 --> 00:10:58,740
they are even helping to be identified

00:10:57,090 --> 00:10:59,940
with the machine they're on that the

00:10:58,740 --> 00:11:01,860
prompt it tells them that the

00:10:59,940 --> 00:11:05,880
architecture is because we can even

00:11:01,860 --> 00:11:07,980
change that prompt ok so there is bash I

00:11:05,880 --> 00:11:09,290
believe maybe and then here CSH so

00:11:07,980 --> 00:11:12,930
there's a little bit different on both

00:11:09,290 --> 00:11:14,970
so between this we were able to have

00:11:12,930 --> 00:11:16,860
confidence that we could bring online an

00:11:14,970 --> 00:11:18,870
infrastructure that our users could take

00:11:16,860 --> 00:11:20,130
advantage of any architecture knowing

00:11:18,870 --> 00:11:21,030
that the binaries are going to be there

00:11:20,130 --> 00:11:24,030
and they just take it they just

00:11:21,030 --> 00:11:24,380
basically get to land on the hardware

00:11:24,030 --> 00:11:25,640
and

00:11:24,380 --> 00:11:27,290
use it like the Palmolive effect they

00:11:25,640 --> 00:11:29,030
don't know they're taking advantage of

00:11:27,290 --> 00:11:32,030
this hardware it's just happening for

00:11:29,030 --> 00:11:34,910
them in the backend really very quickly

00:11:32,030 --> 00:11:36,890
that schedulers obstructed the hardware

00:11:34,910 --> 00:11:39,080
from the users and allowed us to get

00:11:36,890 --> 00:11:40,850
them to just submit 10,000 jobs at a

00:11:39,080 --> 00:11:43,100
time and know that they can go get their

00:11:40,850 --> 00:11:44,480
coffee so that's the coffee part you got

00:11:43,100 --> 00:11:45,680
to be able to separate the user from the

00:11:44,480 --> 00:11:48,350
computer otherwise they'll never get

00:11:45,680 --> 00:11:49,550
coffee and so in the end schedulers

00:11:48,350 --> 00:11:50,650
helped us do that let's look at that for

00:11:49,550 --> 00:11:53,810
a second

00:11:50,650 --> 00:11:56,090
so the users submit jobs into the

00:11:53,810 --> 00:11:58,010
scheduler and the scheduler then is able

00:11:56,090 --> 00:12:00,140
to know the architecture know all the

00:11:58,010 --> 00:12:02,750
different pieces and be able to call the

00:12:00,140 --> 00:12:04,220
right pieces at the same time so legacy

00:12:02,750 --> 00:12:06,650
schedulers actually are very aware of

00:12:04,220 --> 00:12:08,210
this because we actually grew up in a

00:12:06,650 --> 00:12:11,980
mixed architecture and it's only been

00:12:08,210 --> 00:12:15,770
since 2005 or so that we actually

00:12:11,980 --> 00:12:17,810
abandon that concept and so there are

00:12:15,770 --> 00:12:20,870
some wonderful schedules out there that

00:12:17,810 --> 00:12:21,680
do exactly what we want them to do we

00:12:20,870 --> 00:12:22,880
were talked a little bit about the

00:12:21,680 --> 00:12:24,830
environment bills let's look at some

00:12:22,880 --> 00:12:26,810
schedulers so the one that we're most

00:12:24,830 --> 00:12:28,670
excited about and has actually grown

00:12:26,810 --> 00:12:30,590
over time some of you might know grid

00:12:28,670 --> 00:12:33,440
engine the original grid engine existed

00:12:30,590 --> 00:12:35,240
Sun Microsystems bought it became Sun

00:12:33,440 --> 00:12:37,580
grid engine this is where everybody

00:12:35,240 --> 00:12:39,440
actually really started to recognize and

00:12:37,580 --> 00:12:42,440
it was given out to universities for

00:12:39,440 --> 00:12:44,740
free as an enterprise class software and

00:12:42,440 --> 00:12:47,210
we started with it back in the late 90s

00:12:44,740 --> 00:12:48,950
one of the benefits was mixed

00:12:47,210 --> 00:12:50,690
architecture look at all the wonderful

00:12:48,950 --> 00:12:52,220
architectures we can run this is just a

00:12:50,690 --> 00:12:56,660
minimal list we can actually do more now

00:12:52,220 --> 00:12:59,960
and has that product grew and it became

00:12:56,660 --> 00:13:02,450
so robust Oracle ultimately bought Sun

00:12:59,960 --> 00:13:03,830
and became Oracle grid engine Oracle

00:13:02,450 --> 00:13:05,030
Grid engine could not be managed by

00:13:03,830 --> 00:13:07,790
Oracle because there was too many people

00:13:05,030 --> 00:13:09,710
utilizing the resource at which point

00:13:07,790 --> 00:13:11,420
they basically said making it a separate

00:13:09,710 --> 00:13:13,760
company so now there's an epic separate

00:13:11,420 --> 00:13:15,710
company it's called Unova so Unova is

00:13:13,760 --> 00:13:17,660
actually utilizing our development

00:13:15,710 --> 00:13:20,000
portal with the open source lab to

00:13:17,660 --> 00:13:21,470
actually port onto the power platform to

00:13:20,000 --> 00:13:22,640
make sure that all of their software can

00:13:21,470 --> 00:13:23,540
basically run a heterogeneous

00:13:22,640 --> 00:13:26,330
environment just like we're talking

00:13:23,540 --> 00:13:27,620
about since they aren't as familiar with

00:13:26,330 --> 00:13:29,870
the power and the current power but they

00:13:27,620 --> 00:13:32,060
have all the old stuff in place and so

00:13:29,870 --> 00:13:33,680
as we watch this evolution occur we

00:13:32,060 --> 00:13:34,910
realized that there was still value in

00:13:33,680 --> 00:13:37,290
the software because of the

00:13:34,910 --> 00:13:41,250
heterogeneous nature and so

00:13:37,290 --> 00:13:44,580
let's look at somebody interacting with

00:13:41,250 --> 00:13:47,760
the Machine and actually going out and

00:13:44,580 --> 00:13:49,950
doing some work so right now I'm on an

00:13:47,760 --> 00:13:52,440
x86 machine this is where my users

00:13:49,950 --> 00:13:54,300
actually land they can go out to a power

00:13:52,440 --> 00:13:55,890
box and look at the prompt it says

00:13:54,300 --> 00:13:58,470
they're on a power box I mean it knows

00:13:55,890 --> 00:13:59,970
they're on an IBM power box they can set

00:13:58,470 --> 00:14:01,530
they can look at the path they can see

00:13:59,970 --> 00:14:05,400
the all the paths are now change you go

00:14:01,530 --> 00:14:08,100
PPC 64 REM there versus what we will

00:14:05,400 --> 00:14:10,680
show you now on this other QR Sh this is

00:14:08,100 --> 00:14:12,120
on an x86 based machine and the paths

00:14:10,680 --> 00:14:14,370
are different and so it shows you that

00:14:12,120 --> 00:14:16,350
the system is dynamically identifying

00:14:14,370 --> 00:14:18,120
and provisioning the resources based

00:14:16,350 --> 00:14:21,360
upon the architecture not based upon

00:14:18,120 --> 00:14:25,410
anything else this is the benefit to

00:14:21,360 --> 00:14:27,630
what we're getting so the center started

00:14:25,410 --> 00:14:29,670
utilizing now that we were able to plug

00:14:27,630 --> 00:14:32,070
in these power boxes and be able to run

00:14:29,670 --> 00:14:34,770
them in a heterogeneous environment we

00:14:32,070 --> 00:14:36,690
have five pettite of data there is some

00:14:34,770 --> 00:14:38,400
bleeding edge technology that's out

00:14:36,690 --> 00:14:43,080
there coming down from IBM and open

00:14:38,400 --> 00:14:45,390
power especially enabling IO across the

00:14:43,080 --> 00:14:47,820
bus and so we started looking at this

00:14:45,390 --> 00:14:50,430
gzip copy card this is a card that

00:14:47,820 --> 00:14:53,220
compresses data rapidly allows us to

00:14:50,430 --> 00:14:54,450
redefine our file space and actually not

00:14:53,220 --> 00:14:56,210
have to go out there and keep buying

00:14:54,450 --> 00:14:59,220
file space just to keep up with the data

00:14:56,210 --> 00:15:01,410
so we were burning CPU time to compress

00:14:59,220 --> 00:15:03,060
data and we were burning lots of hours

00:15:01,410 --> 00:15:05,910
to CPU time to do this and that takes

00:15:03,060 --> 00:15:07,830
away resources for my users and so in

00:15:05,910 --> 00:15:09,240
the end if this card was going to come

00:15:07,830 --> 00:15:12,450
to life for us we really wanted to see

00:15:09,240 --> 00:15:15,960
it take advantage of not to you not

00:15:12,450 --> 00:15:18,210
utilizing CPU and move the the i/o off

00:15:15,960 --> 00:15:19,410
of the bus as much as possible and allow

00:15:18,210 --> 00:15:20,780
the machines to still be used in other

00:15:19,410 --> 00:15:23,520
ways

00:15:20,780 --> 00:15:24,870
we found a massive and when I say

00:15:23,520 --> 00:15:27,950
massive I don't think that's a good word

00:15:24,870 --> 00:15:27,950
yes question

00:15:31,810 --> 00:15:39,230
yeah yeah and on top of that the Jesus

00:15:37,639 --> 00:15:40,910
cabbie car has never ports on the back

00:15:39,230 --> 00:15:44,230
so you can just stream right at it you

00:15:40,910 --> 00:15:47,180
can bypass the button oh yeah yep

00:15:44,230 --> 00:15:49,940
they're incredibly a cluster in a box

00:15:47,180 --> 00:15:51,709
he's you get the core count you get the

00:15:49,940 --> 00:15:54,470
coup de coeur account you get the memory

00:15:51,709 --> 00:15:54,769
you get the bus it's a cluster in the

00:15:54,470 --> 00:16:00,470
box

00:15:54,769 --> 00:16:02,750
so ya ya crook I wish there were more

00:16:00,470 --> 00:16:04,100
slots in the back ok so there's only a

00:16:02,750 --> 00:16:07,190
limited number of slots on the minsky

00:16:04,100 --> 00:16:09,259
there's three slots yeah so you bet for

00:16:07,190 --> 00:16:11,000
a 40 gig card you bet for a gzip card

00:16:09,259 --> 00:16:12,829
and you put an nvme in there you're

00:16:11,000 --> 00:16:15,410
pretty set that's the way I would do it

00:16:12,829 --> 00:16:18,170
yep moved 100 Gig card you're gonna need

00:16:15,410 --> 00:16:22,399
it 40 gig get a little slow so it's

00:16:18,170 --> 00:16:25,130
cheap bit slow so yes a massive increase

00:16:22,399 --> 00:16:27,829
in speed so we actually were burning 70

00:16:25,130 --> 00:16:30,949
hours on a CPU to do some of the gzip

00:16:27,829 --> 00:16:34,310
that same job was completed in 47

00:16:30,949 --> 00:16:35,120
minutes on the card so to give you an

00:16:34,310 --> 00:16:38,240
idea

00:16:35,120 --> 00:16:40,250
Nasus if I don't think explains this my

00:16:38,240 --> 00:16:41,630
users immediately asked me to set up a

00:16:40,250 --> 00:16:43,730
cue instance against that and they just

00:16:41,630 --> 00:16:45,740
started to make jobs at it so they just

00:16:43,730 --> 00:16:47,180
submit jobs all day longer things just

00:16:45,740 --> 00:16:48,529
running just compressing people's data

00:16:47,180 --> 00:16:49,910
and their jobs just come up and they go

00:16:48,529 --> 00:16:54,980
on through and all the CPU hours came

00:16:49,910 --> 00:16:56,930
back I was ZFS currently but we're

00:16:54,980 --> 00:16:59,000
moving to a B GFS I've had ZFS for a

00:16:56,930 --> 00:17:01,010
long time and we had to find a solution

00:16:59,000 --> 00:17:02,480
that was fundable by the granting

00:17:01,010 --> 00:17:04,909
agencies and they don't want to see me

00:17:02,480 --> 00:17:05,870
buying bleeding bleeding edge because

00:17:04,909 --> 00:17:07,909
they think I'm just trying to spend

00:17:05,870 --> 00:17:09,740
money I have to show that it really

00:17:07,909 --> 00:17:12,559
answers the question and keeps it at low

00:17:09,740 --> 00:17:14,630
cost and so ZFS did that for us for the

00:17:12,559 --> 00:17:16,459
last I don't know how many years its

00:17:14,630 --> 00:17:18,169
charger yeah and we still get pretty

00:17:16,459 --> 00:17:20,929
good performance I mean it's not the

00:17:18,169 --> 00:17:23,919
best but it's good enough so we're able

00:17:20,929 --> 00:17:23,919
to get the work done

00:17:24,159 --> 00:17:29,179
yeah so that that was huge to my users

00:17:27,500 --> 00:17:31,220
because now I'm compressing massive

00:17:29,179 --> 00:17:33,440
quantities of data we do not see the hit

00:17:31,220 --> 00:17:34,730
on the i/o system we do not see the hit

00:17:33,440 --> 00:17:36,720
on the file spaces

00:17:34,730 --> 00:17:38,669
it's a marvelous solution

00:17:36,720 --> 00:17:40,500
and we're probably just gonna buy more

00:17:38,669 --> 00:17:42,720
cars the cost-benefit around that card

00:17:40,500 --> 00:17:44,010
is incredible okay

00:17:42,720 --> 00:17:46,380
because of the fact that I'm not buying

00:17:44,010 --> 00:17:49,289
discs so I'm gladly able to buy more of

00:17:46,380 --> 00:17:52,350
those cards we also started down the

00:17:49,289 --> 00:17:54,360
path of realizing this machine's can

00:17:52,350 --> 00:17:56,039
move data like no other and we have

00:17:54,360 --> 00:17:58,409
massive quantities of data and we really

00:17:56,039 --> 00:18:01,440
wanted to develop a new sequence

00:17:58,409 --> 00:18:03,840
alignment tool we we have lots of

00:18:01,440 --> 00:18:05,429
genomic sequences and we have some of

00:18:03,840 --> 00:18:08,220
the most bleeding-edge ones in our core

00:18:05,429 --> 00:18:10,289
facility and in the end there were some

00:18:08,220 --> 00:18:12,330
enabled sequence alignment tools out

00:18:10,289 --> 00:18:15,480
there that utilize some GPU resources

00:18:12,330 --> 00:18:17,190
but they could only leverage the GPU a

00:18:15,480 --> 00:18:19,559
little bit because of the i/o problem in

00:18:17,190 --> 00:18:20,520
the PCI bus the latency was too great

00:18:19,559 --> 00:18:21,270
with the quantities of data we're

00:18:20,520 --> 00:18:24,780
talking about

00:18:21,270 --> 00:18:26,190
so once the GPU landed on the board we

00:18:24,780 --> 00:18:29,730
had the MV link and the way that we're

00:18:26,190 --> 00:18:31,919
into that bus we decided to redevelop a

00:18:29,730 --> 00:18:33,720
new sequence alignment tool that only

00:18:31,919 --> 00:18:36,179
worked on the GPU and didn't use any CPU

00:18:33,720 --> 00:18:38,280
this allowed us to even port it again

00:18:36,179 --> 00:18:39,570
across multiple architecture so we're

00:18:38,280 --> 00:18:41,549
trying to get developers to think about

00:18:39,570 --> 00:18:44,250
this - I can narrow because it's CUDA

00:18:41,549 --> 00:18:45,330
pick it up and run it on Windows because

00:18:44,250 --> 00:18:48,179
it's all CUDA doesn't care about the

00:18:45,330 --> 00:18:50,850
processor at all and so the problem is

00:18:48,179 --> 00:18:52,890
again you don't have the i/o you get

00:18:50,850 --> 00:18:54,450
massive performance on these Minsky

00:18:52,890 --> 00:18:55,980
boxes because of the fact that you can

00:18:54,450 --> 00:18:59,549
actually move data across the bust

00:18:55,980 --> 00:19:01,679
through the GPU this is this is where

00:18:59,549 --> 00:19:05,039
they became alarming to us alright let's

00:19:01,679 --> 00:19:07,110
look at this these were standard tools

00:19:05,039 --> 00:19:08,789
that were run by our people constantly

00:19:07,110 --> 00:19:11,190
one of them is called bowtie and one of

00:19:08,789 --> 00:19:12,990
them is called bwa when you see so many

00:19:11,190 --> 00:19:15,360
jobs across our infrastructure every

00:19:12,990 --> 00:19:16,710
single day running these two tools so we

00:19:15,360 --> 00:19:17,880
thought okay we're going to run we're

00:19:16,710 --> 00:19:20,309
going to basically remake these two

00:19:17,880 --> 00:19:22,289
tools to only work on a GPU and have all

00:19:20,309 --> 00:19:26,130
their scoring algorithms in a single

00:19:22,289 --> 00:19:28,230
tool and these two blue bars you see

00:19:26,130 --> 00:19:31,169
over here are running on Intel boxes

00:19:28,230 --> 00:19:32,640
with 16 threads set perfectly so that

00:19:31,169 --> 00:19:35,010
the thread counts were right on the core

00:19:32,640 --> 00:19:36,120
cetera et cetera and that's the best

00:19:35,010 --> 00:19:39,049
performance I can get and these are

00:19:36,120 --> 00:19:43,110
thousands of sequence reads per second

00:19:39,049 --> 00:19:45,120
if I put our new tool called Casas onto

00:19:43,110 --> 00:19:48,870
a Windows box on a 1080

00:19:45,120 --> 00:19:52,559
a Windows box on a 1080 could still beat

00:19:48,870 --> 00:19:56,610
a certain Intel server okay I think

00:19:52,559 --> 00:19:58,950
that's important yeah did not have a GPU

00:19:56,610 --> 00:20:00,809
but it was one of the most expensive

00:19:58,950 --> 00:20:02,940
Intel servers you can buy was Adele are

00:20:00,809 --> 00:20:04,800
nine thirty okay

00:20:02,940 --> 00:20:06,960
it was a I mean I spent like thirty

00:20:04,800 --> 00:20:08,730
seven thousand dollars on the box and I

00:20:06,960 --> 00:20:13,230
could have four forty bought a Minsky

00:20:08,730 --> 00:20:14,550
again shame on me okay because man this

00:20:13,230 --> 00:20:18,630
performance is disgusting

00:20:14,550 --> 00:20:20,460
so when a Willys box running one GPU can

00:20:18,630 --> 00:20:23,900
beat the crap out of a desktop-based

00:20:20,460 --> 00:20:26,880
server we got a problem

00:20:23,900 --> 00:20:29,220
yeah denna did not like this plot when I

00:20:26,880 --> 00:20:30,840
showed it to them so they're like that's

00:20:29,220 --> 00:20:35,100
not our fault that's Intel I'm like yeah

00:20:30,840 --> 00:20:36,870
whatever so then we were able to show

00:20:35,100 --> 00:20:39,059
what Cossack can do on a P 100 on the

00:20:36,870 --> 00:20:41,309
IBM so what you see that green bar on

00:20:39,059 --> 00:20:44,070
the far right that's on a minsky another

00:20:41,309 --> 00:20:45,510
P 100 it's just actually untouchable

00:20:44,070 --> 00:20:46,980
people were stunned they thought we

00:20:45,510 --> 00:20:48,150
weren't doing something right but all

00:20:46,980 --> 00:20:51,000
the data came out perfect so they

00:20:48,150 --> 00:20:53,610
couldn't complain and people were like

00:20:51,000 --> 00:20:55,440
ah I'm done with the CPU looks like cuz

00:20:53,610 --> 00:20:57,240
we were actually able to complete jobs

00:20:55,440 --> 00:20:58,830
and minutes now rather than like 45

00:20:57,240 --> 00:21:00,929
minutes and so when we were sending out

00:20:58,830 --> 00:21:04,080
thousands of jobs this is a massive

00:21:00,929 --> 00:21:06,710
return okay and it's a massive less load

00:21:04,080 --> 00:21:08,940
across my file system for days on end

00:21:06,710 --> 00:21:12,870
you could also see that we can achieve

00:21:08,940 --> 00:21:15,390
our accuracy rate in our hit rate much

00:21:12,870 --> 00:21:18,630
faster than many of the other programs

00:21:15,390 --> 00:21:20,790
so we're just as accurate but our hit

00:21:18,630 --> 00:21:22,320
rate is so much faster and that's

00:21:20,790 --> 00:21:24,960
because we're able to take advantage of

00:21:22,320 --> 00:21:27,570
all the course and we're actually able

00:21:24,960 --> 00:21:29,280
to we wrote this so it's skills so we

00:21:27,570 --> 00:21:31,140
can take advantage of as many GPUs or in

00:21:29,280 --> 00:21:33,690
a box intel was getting famous for

00:21:31,140 --> 00:21:35,550
putting a single GPU in a box that's not

00:21:33,690 --> 00:21:37,140
scaling okay that doesn't meet the new

00:21:35,550 --> 00:21:40,530
model that we have to meet we need

00:21:37,140 --> 00:21:42,270
multiple GPUs in a box okay and so we

00:21:40,530 --> 00:21:44,370
want it to scale well you can put 41

00:21:42,270 --> 00:21:45,630
heads we moving to six Voltas let's take

00:21:44,370 --> 00:21:47,730
advantage of all of them so we can even

00:21:45,630 --> 00:21:52,270
get more speed if we try we're not even

00:21:47,730 --> 00:21:54,309
trying it so the summary

00:21:52,270 --> 00:21:56,470
you know the C govt was able to increase

00:21:54,309 --> 00:21:58,540
our throughput anywhere between two and

00:21:56,470 --> 00:22:02,650
ten X we had one algorithm that the

00:21:58,540 --> 00:22:04,090
group came in v search they basically

00:22:02,650 --> 00:22:06,700
recompiled it for the power E and they

00:22:04,090 --> 00:22:08,470
got 10x return and the USDA went out and

00:22:06,700 --> 00:22:10,090
bought two more machines because the

00:22:08,470 --> 00:22:11,500
USDA was just running this constantly

00:22:10,090 --> 00:22:13,270
and they saw a 10x return and they were

00:22:11,500 --> 00:22:13,960
like for that price that's a that's an

00:22:13,270 --> 00:22:15,730
easy sell

00:22:13,960 --> 00:22:19,990
you know it's hard to get that type of

00:22:15,730 --> 00:22:22,270
return anymore so we were able to work

00:22:19,990 --> 00:22:26,470
with them to pour it all the software

00:22:22,270 --> 00:22:28,990
into a a github repository and one of my

00:22:26,470 --> 00:22:31,480
students was used to do that we built

00:22:28,990 --> 00:22:32,890
Casa and Kostas actually got a paper

00:22:31,480 --> 00:22:34,750
written behind it and we are in the

00:22:32,890 --> 00:22:36,640
middle of publishing that so you know

00:22:34,750 --> 00:22:38,070
that will be available to the entire

00:22:36,640 --> 00:22:40,270
community

00:22:38,070 --> 00:22:41,890
eahhh material science really runs the

00:22:40,270 --> 00:22:43,240
gamut of research you guys we don't know

00:22:41,890 --> 00:22:44,590
where we're gonna go tomorrow and that's

00:22:43,240 --> 00:22:46,960
what the Minsky brings to the table I

00:22:44,590 --> 00:22:48,700
know that I can complete it I know I can

00:22:46,960 --> 00:22:51,429
do it on open power I know that it's

00:22:48,700 --> 00:22:53,470
gonna work and I don't have to go out

00:22:51,429 --> 00:22:56,800
there and redefine the hardware remake

00:22:53,470 --> 00:22:57,520
new pathways so on my side it's

00:22:56,800 --> 00:22:59,890
phenomenal

00:22:57,520 --> 00:23:01,540
my users don't even know again Palmolive

00:22:59,890 --> 00:23:03,670
effect they don't know that usually I've

00:23:01,540 --> 00:23:05,350
had users call me and say how come these

00:23:03,670 --> 00:23:07,210
jobs are finishing faster what's with

00:23:05,350 --> 00:23:09,100
this machine over here can I get more

00:23:07,210 --> 00:23:10,390
access to that machine I go yeah you

00:23:09,100 --> 00:23:11,590
want to give me a some more money we'll

00:23:10,390 --> 00:23:13,300
give you some more access and that's

00:23:11,590 --> 00:23:14,770
what it comes down to we give them a

00:23:13,300 --> 00:23:16,240
taste and then they have to spend some

00:23:14,770 --> 00:23:16,600
money to get more that's what it comes

00:23:16,240 --> 00:23:21,600
to

00:23:16,600 --> 00:23:21,600
I I can't give it all to him come on

00:23:26,580 --> 00:23:29,580
yeah

00:23:30,430 --> 00:23:39,860
right but in the end what's that then

00:23:37,640 --> 00:23:42,050
goes to speak and they they recognize

00:23:39,860 --> 00:23:43,940
that there's a piece of it yeah and I've

00:23:42,050 --> 00:23:46,460
communicated to them that's the IBM

00:23:43,940 --> 00:23:48,290
piece of equipment and they go oh but

00:23:46,460 --> 00:23:50,210
they don't know how do we quate that so

00:23:48,290 --> 00:23:51,500
I don't know how putting label on that's

00:23:50,210 --> 00:23:53,600
really going to change their approach

00:23:51,500 --> 00:23:55,490
because they go to the system

00:23:53,600 --> 00:23:56,930
administrators as it is and they say I

00:23:55,490 --> 00:23:58,850
need a piece of hardware to do X and

00:23:56,930 --> 00:24:00,560
they don't care what piece of hardware

00:23:58,850 --> 00:24:01,940
shows up really you've got to go after

00:24:00,560 --> 00:24:02,920
the administrators and you have to go

00:24:01,940 --> 00:24:05,090
over the people who are deploying

00:24:02,920 --> 00:24:08,150
infrastructure and they had to see this

00:24:05,090 --> 00:24:20,420
as the user benefit not as their

00:24:08,150 --> 00:24:27,880
management yeah that's right put a tag

00:24:20,420 --> 00:24:30,230
in it yeah label it pretty much I mean

00:24:27,880 --> 00:24:31,820
that's what you want you really want it

00:24:30,230 --> 00:24:33,440
to go to where they believe in it

00:24:31,820 --> 00:24:34,430
because my researchers will spend money

00:24:33,440 --> 00:24:36,500
on things that are working

00:24:34,430 --> 00:24:37,670
they will not spend money on things that

00:24:36,500 --> 00:24:38,630
don't work and if they don't if they

00:24:37,670 --> 00:24:39,740
find something it's not going to work

00:24:38,630 --> 00:24:41,600
and you can't get them over it they're

00:24:39,740 --> 00:24:43,880
just gonna circumvent you they're gonna

00:24:41,600 --> 00:24:46,550
find somebody else who can do it so it's

00:24:43,880 --> 00:24:48,800
our responsibility to again fit them

00:24:46,550 --> 00:24:52,250
into our infrastructure not make them

00:24:48,800 --> 00:24:55,370
fit around us okay so we have to mould

00:24:52,250 --> 00:24:56,510
ourselves around them okay and so that's

00:24:55,370 --> 00:24:58,460
what we're trying to do and that's what

00:24:56,510 --> 00:25:00,280
the heterogeneous is mold ourselves

00:24:58,460 --> 00:25:04,640
around them without them knowing and

00:25:00,280 --> 00:25:05,920
that's the benefit so with that I'm

00:25:04,640 --> 00:25:09,200
gonna say that

00:25:05,920 --> 00:25:11,960
we had a big relationship with OSL

00:25:09,200 --> 00:25:13,310
because OSL and I basically deployed

00:25:11,960 --> 00:25:14,270
some of the continuous and development

00:25:13,310 --> 00:25:18,260
environments for some of the new

00:25:14,270 --> 00:25:21,320
research computing I also did a lot of

00:25:18,260 --> 00:25:23,450
work with Nimbus because we found that

00:25:21,320 --> 00:25:25,750
Amazon couldn't keep up with the GPU

00:25:23,450 --> 00:25:28,010
work they were sticking us on K 80s and

00:25:25,750 --> 00:25:30,380
the amount of data would not go through

00:25:28,010 --> 00:25:32,030
and they were gonna charge us $30,000

00:25:30,380 --> 00:25:34,280
mimicks came through and said oh geez we

00:25:32,030 --> 00:25:36,140
can do that for 20 unfortunately their

00:25:34,280 --> 00:25:38,660
jobs went through so fast the Minsky's

00:25:36,140 --> 00:25:40,310
were so fast we only spent 9 so my

00:25:38,660 --> 00:25:41,360
researchers were like hey we saved

00:25:40,310 --> 00:25:44,059
11,000

00:25:41,360 --> 00:25:47,900
plus another we saved $21,000 they were

00:25:44,059 --> 00:25:50,360
like this is amazing so in the end your

00:25:47,900 --> 00:25:52,760
cloud costs are coming from the time

00:25:50,360 --> 00:25:53,929
that you spend on the machine and if you

00:25:52,760 --> 00:25:55,130
could spend less time on the machine

00:25:53,929 --> 00:25:57,110
even have cost a little bit more you're

00:25:55,130 --> 00:26:00,110
still saving a ton of money people you

00:25:57,110 --> 00:26:10,720
have to move away from Intel alright

00:26:00,110 --> 00:26:10,720
game over there you go question yep

00:26:49,410 --> 00:26:52,410
yeah

00:26:59,100 --> 00:27:02,760
it truly is otherwise we're just gonna

00:27:01,500 --> 00:27:03,840
be piled in with data we can't get

00:27:02,760 --> 00:27:06,299
through and it's gonna become useless

00:27:03,840 --> 00:27:08,490
and we really are moving to where we're

00:27:06,299 --> 00:27:10,500
putting IOT and everything I'm gonna put

00:27:08,490 --> 00:27:11,640
a transistor in everything and once I

00:27:10,500 --> 00:27:12,900
put a transistor and everything where's

00:27:11,640 --> 00:27:15,090
that data gonna go how am I gonna get

00:27:12,900 --> 00:27:16,830
through that quickly we need to scale

00:27:15,090 --> 00:27:19,080
out we need to scale out quickly and we

00:27:16,830 --> 00:27:22,650
need to stop looking at little desktop

00:27:19,080 --> 00:27:24,570
piece machines I'm sorry guys

00:27:22,650 --> 00:27:26,789
Intel is a desktop creator of a

00:27:24,570 --> 00:27:28,260
processor somehow they moved themselves

00:27:26,789 --> 00:27:30,630
into a server and all our server

00:27:28,260 --> 00:27:35,430
architectures got lost until now it's

00:27:30,630 --> 00:27:39,589
time to move back all right thank you

00:27:35,430 --> 00:27:39,589

YouTube URL: https://www.youtube.com/watch?v=qOp4fvmyX5I


