Title: OpenPOWER Summit US 2018: Zaius Barreleye G2
Publication date: 2018-04-03
Playlist: OpenPOWER Summit US 2018
Description: 
	OpenPOWER member from Rackspace discusses how Zaius and Barreleye G2 program development has progressed at the OpenPOWER Summit 2018.

Presenter:
- Adi Gangidi, Senior Systems Design Engineer, Rackspace

For more information, please visit: http://www.openpowerfoundation.org
Captions: 
	00:00:00,000 --> 00:00:05,370
thanks for coming guys so just after

00:00:03,060 --> 00:00:10,800
lunch I hope you guys had coffee right

00:00:05,370 --> 00:00:14,250
right we're in for the whirlwind oh okay

00:00:10,800 --> 00:00:17,699
that's applying I owe you I owe you all

00:00:14,250 --> 00:00:19,770
of your coffee okay so so yes I do

00:00:17,699 --> 00:00:21,900
so we have a whirlwind of a presentation

00:00:19,770 --> 00:00:25,260
as i would like to call it we have got

00:00:21,900 --> 00:00:29,460
50 slides to go in 30 slide 30 minutes

00:00:25,260 --> 00:00:32,309
so we will fly through them and i'm very

00:00:29,460 --> 00:00:34,469
eager to actually you know wait outside

00:00:32,309 --> 00:00:35,940
and take you through to some of the

00:00:34,469 --> 00:00:38,190
boards and hardware that i have and

00:00:35,940 --> 00:00:39,690
actually dig dig deeper and share some

00:00:38,190 --> 00:00:41,370
of the some of the things that we've

00:00:39,690 --> 00:00:45,620
been seeing as well

00:00:41,370 --> 00:00:48,899
so after this so without further ado

00:00:45,620 --> 00:00:51,210
let's get started adi gong GD I work for

00:00:48,899 --> 00:00:52,079
Rackspace I'm a senior systems design

00:00:51,210 --> 00:00:55,260
engineer at Rackspace

00:00:52,079 --> 00:00:57,149
I also under lead engineer for the say

00:00:55,260 --> 00:00:59,609
starlight c2 program from the Rackspace

00:00:57,149 --> 00:01:01,530
perspective so we collaborate with the

00:00:59,609 --> 00:01:04,949
Google folks quite a bit on this design

00:01:01,530 --> 00:01:07,380
and I'm here to talk about the Zayas

00:01:04,949 --> 00:01:09,600
biology 2 platform as it's called and

00:01:07,380 --> 00:01:10,860
the accelerator ecosystem surrounding it

00:01:09,600 --> 00:01:12,540
so I'm going to cover a little bit of

00:01:10,860 --> 00:01:14,549
both the mother side motherboard side of

00:01:12,540 --> 00:01:16,860
it and and the system side of it and

00:01:14,549 --> 00:01:21,360
then the accelerator side of it

00:01:16,860 --> 00:01:23,549
essentially and so let's get started

00:01:21,360 --> 00:01:25,650
so I'm dividing this talk essentially

00:01:23,549 --> 00:01:27,240
into two parts as I just said you know

00:01:25,650 --> 00:01:29,009
development update a little bit and

00:01:27,240 --> 00:01:31,320
there was a technology update and then

00:01:29,009 --> 00:01:33,600
the accelerators are the second second

00:01:31,320 --> 00:01:35,549
part of it I have some samples here some

00:01:33,600 --> 00:01:37,400
accelerator cards some max you know

00:01:35,549 --> 00:01:41,640
boats that helps support the

00:01:37,400 --> 00:01:43,290
accelerators and you know I'll have

00:01:41,640 --> 00:01:47,369
pictures of them and then I'll point out

00:01:43,290 --> 00:01:49,439
to them whenever they come up so I'm

00:01:47,369 --> 00:01:51,960
gonna pre few introduced the program he

00:01:49,439 --> 00:01:54,840
says in biology to program was started

00:01:51,960 --> 00:01:56,850
in 2016 2016 essentially a huge

00:01:54,840 --> 00:02:00,329
collaborative effort between various

00:01:56,850 --> 00:02:03,299
partners and and open foundations and

00:02:00,329 --> 00:02:05,670
and you know that was a block diagram

00:02:03,299 --> 00:02:07,439
that we started with just that block

00:02:05,670 --> 00:02:11,520
diagram a high-level kind of concept of

00:02:07,439 --> 00:02:13,500
it and then last year 2017 at OCP our

00:02:11,520 --> 00:02:16,050
Open Compute summit we

00:02:13,500 --> 00:02:18,240
showed of the first samples the first

00:02:16,050 --> 00:02:22,280
samples usually are red birds as you can

00:02:18,240 --> 00:02:24,840
see and and we kind of described all the

00:02:22,280 --> 00:02:26,910
open and emerging technologies that we

00:02:24,840 --> 00:02:30,180
were planning to or we were building

00:02:26,910 --> 00:02:32,730
this server on so we did a little deep

00:02:30,180 --> 00:02:34,170
dive I do have that recording of the

00:02:32,730 --> 00:02:36,090
video at the end of the talk and I'm

00:02:34,170 --> 00:02:39,000
going to distribute these lights so kind

00:02:36,090 --> 00:02:41,670
of go through a little bit deeper into

00:02:39,000 --> 00:02:43,080
it in 2018 you're right here to talk

00:02:41,670 --> 00:02:46,020
about a little bit of a high-level

00:02:43,080 --> 00:02:48,120
update of the program and accelerator

00:02:46,020 --> 00:02:51,000
ecosystem we have a few announcements

00:02:48,120 --> 00:02:53,190
here and there to make nothing fancy

00:02:51,000 --> 00:02:56,700
just just a lot of hardware cool things

00:02:53,190 --> 00:03:01,920
and and I'll point out to them whenever

00:02:56,700 --> 00:03:03,810
they come up so so what is say yes and

00:03:01,920 --> 00:03:06,330
paralyze itto write these words right

00:03:03,810 --> 00:03:07,890
what do they actually mean right so this

00:03:06,330 --> 00:03:10,100
is the motherboard it's a common

00:03:07,890 --> 00:03:12,750
motherboard between Google and Rackspace

00:03:10,100 --> 00:03:13,230
it's a basically a two socket power 9

00:03:12,750 --> 00:03:16,290
server

00:03:13,230 --> 00:03:18,390
it's got 48 volts input you know most

00:03:16,290 --> 00:03:20,970
servers today as you know have 12 volts

00:03:18,390 --> 00:03:23,670
input and oil heats most open compute

00:03:20,970 --> 00:03:26,100
servers have 12 volts inputs and you

00:03:23,670 --> 00:03:28,730
know it's built for front i/o and

00:03:26,100 --> 00:03:32,280
service access again that open compute

00:03:28,730 --> 00:03:34,770
ethos kind of coming in and shaping the

00:03:32,280 --> 00:03:38,550
system around we have 80 lanes of PCI

00:03:34,770 --> 00:03:41,550
Engine 4 and 32 lanes of open copy or

00:03:38,550 --> 00:03:43,769
and we link to dot o so I'm gonna put

00:03:41,550 --> 00:03:46,500
that in numbers perspective a little bit

00:03:43,769 --> 00:03:48,810
PCI agent for is twice as fast as gently

00:03:46,500 --> 00:03:51,540
as you know and open copy is you know

00:03:48,810 --> 00:03:54,840
roughly three times as fast as gen 3 in

00:03:51,540 --> 00:03:56,790
terms of bandwidth right per Lane so if

00:03:54,840 --> 00:03:58,500
you add that together and and this is

00:03:56,790 --> 00:04:01,260
real bandwidth that you can use it's

00:03:58,500 --> 00:04:04,320
essentially 250 lanes of PCI each entry

00:04:01,260 --> 00:04:05,640
right that's a lot of i/o and we think

00:04:04,320 --> 00:04:07,950
our you know I'll share some of the apps

00:04:05,640 --> 00:04:10,080
away observations later and this is not

00:04:07,950 --> 00:04:11,970
just line rate and this platform

00:04:10,080 --> 00:04:14,010
actually has strong in of course

00:04:11,970 --> 00:04:17,669
actually support that ion moves at i/o

00:04:14,010 --> 00:04:21,030
back and forth so the server is also

00:04:17,669 --> 00:04:23,430
build on open ETA's essentially so it's

00:04:21,030 --> 00:04:24,900
not just like say open hardware you know

00:04:23,430 --> 00:04:26,250
it's a know being an open compute

00:04:24,900 --> 00:04:27,000
motherboard and server all these specs

00:04:26,250 --> 00:04:29,820
and

00:04:27,000 --> 00:04:32,130
and sheets everything's you know online

00:04:29,820 --> 00:04:33,390
it's it's available I'd like to say this

00:04:32,130 --> 00:04:35,370
to people you know who kind of

00:04:33,390 --> 00:04:37,500
understand want to understand how open

00:04:35,370 --> 00:04:39,330
really it is so if you do have a PCB

00:04:37,500 --> 00:04:40,980
manufacture if you have if you are a PCB

00:04:39,330 --> 00:04:43,020
manufacturer you can just take that

00:04:40,980 --> 00:04:45,060
design essentially and you know the

00:04:43,020 --> 00:04:46,730
appropriate licenses you can build it

00:04:45,060 --> 00:04:50,550
yourself essentially it's that open

00:04:46,730 --> 00:04:53,640
essentially right so on the left you

00:04:50,550 --> 00:04:55,320
have these days shelf and insulate if

00:04:53,640 --> 00:04:57,270
this is the Google form factor of that

00:04:55,320 --> 00:04:58,920
motherboard it's a thirteen inch form

00:04:57,270 --> 00:05:02,630
factor it's a little bit I think custom

00:04:58,920 --> 00:05:05,700
to them and it's a 1.50 you tall server

00:05:02,630 --> 00:05:08,100
and it's a compact enclosure essentially

00:05:05,700 --> 00:05:11,100
of the motherboard right it's shorter

00:05:08,100 --> 00:05:14,580
then what it can fit in half hustling

00:05:11,100 --> 00:05:17,580
cards it's compatible with 48 volts open

00:05:14,580 --> 00:05:19,830
rack but you do need like a deployment

00:05:17,580 --> 00:05:22,919
shelf that that goes around it to kind

00:05:19,830 --> 00:05:26,850
of make it wide enough essentially 13 13

00:05:22,919 --> 00:05:29,100
inches to 21 and then you know that

00:05:26,850 --> 00:05:32,640
essentially to increase it to fit in the

00:05:29,100 --> 00:05:35,340
open right only on you right you have

00:05:32,640 --> 00:05:38,490
the battle I g2 server it's basically

00:05:35,340 --> 00:05:41,490
built for full that open rack v2 as I as

00:05:38,490 --> 00:05:43,979
I want to call it it's a 2 o/u tall's so

00:05:41,490 --> 00:05:45,810
we we can you know easily fit half white

00:05:43,979 --> 00:05:47,700
half length cards and 4 full full height

00:05:45,810 --> 00:05:49,440
full and cards as well we can we can fit

00:05:47,700 --> 00:05:52,260
them with a riser essentially we build a

00:05:49,440 --> 00:05:54,090
riser to support that we have hot-swap

00:05:52,260 --> 00:05:55,320
storage I'm gonna speak to what's

00:05:54,090 --> 00:05:55,560
special about the storage in a little

00:05:55,320 --> 00:05:58,380
bit

00:05:55,560 --> 00:06:00,600
we have enough wattage plan to support

00:05:58,380 --> 00:06:02,100
accelerators the motherboard itself is

00:06:00,600 --> 00:06:04,680
is a little bit tailored around

00:06:02,100 --> 00:06:07,440
supporting supporting the processor

00:06:04,680 --> 00:06:09,810
stems and and some of the i/o but but as

00:06:07,440 --> 00:06:11,550
you know some of the GPUs and and latest

00:06:09,810 --> 00:06:13,650
accelerators they need more more and

00:06:11,550 --> 00:06:16,160
more power they're very power hungry so

00:06:13,650 --> 00:06:18,660
we have provisions for supporting that

00:06:16,160 --> 00:06:20,490
so these are the couple of risers I was

00:06:18,660 --> 00:06:24,830
telling you about you know that helps

00:06:20,490 --> 00:06:27,630
you support all these accelerators here

00:06:24,830 --> 00:06:30,030
so now I'm gonna go to a little bit of a

00:06:27,630 --> 00:06:32,940
development update this is basically

00:06:30,030 --> 00:06:35,010
what Rackspace is doing to consume this

00:06:32,940 --> 00:06:37,890
a high-level update of what axe-bass is

00:06:35,010 --> 00:06:40,470
doing to consume this solution and and

00:06:37,890 --> 00:06:41,880
also in I guess in

00:06:40,470 --> 00:06:45,630
that direction it will also help other

00:06:41,880 --> 00:06:48,060
people consume the system so we started

00:06:45,630 --> 00:06:50,130
with this design this is a picture of 3d

00:06:48,060 --> 00:06:52,140
render we started with I'd like to start

00:06:50,130 --> 00:06:55,110
with this um so this is a motherboard

00:06:52,140 --> 00:06:57,630
and behind that it's an expander board

00:06:55,110 --> 00:06:59,220
and then behind the expander board you

00:06:57,630 --> 00:07:01,380
have a fan or power board that

00:06:59,220 --> 00:07:04,170
essentially supplies all the power to

00:07:01,380 --> 00:07:06,180
you know storage and GPUs and things

00:07:04,170 --> 00:07:07,980
like that and then we have a backplane

00:07:06,180 --> 00:07:10,710
universe the backplane I'll talk to that

00:07:07,980 --> 00:07:12,720
a little bit more but you know these are

00:07:10,710 --> 00:07:14,220
the boards that you know if you kind of

00:07:12,720 --> 00:07:15,810
open the server and the barreleye server

00:07:14,220 --> 00:07:17,940
this is how the boards would lay out to

00:07:15,810 --> 00:07:20,700
be in this orientation so we started

00:07:17,940 --> 00:07:24,330
with this we went to this you know this

00:07:20,700 --> 00:07:27,090
is one of the test ports DVT board that

00:07:24,330 --> 00:07:31,140
we started you know we you know started

00:07:27,090 --> 00:07:32,640
testing the hardware with you know we

00:07:31,140 --> 00:07:35,520
made a lot of optimizations through the

00:07:32,640 --> 00:07:38,580
way we found out a few tweaks and things

00:07:35,520 --> 00:07:40,950
that could improve you know more support

00:07:38,580 --> 00:07:44,370
and and you know long-term reliability

00:07:40,950 --> 00:07:46,500
of workloads and things like that so we

00:07:44,370 --> 00:07:48,600
optimized all those and then we have

00:07:46,500 --> 00:07:51,180
clean boats right so green boards are

00:07:48,600 --> 00:07:53,580
exciting for anyone who does hardware

00:07:51,180 --> 00:07:55,650
development they just represent all the

00:07:53,580 --> 00:07:58,080
time and effort that's kind of gone into

00:07:55,650 --> 00:08:00,419
optimizing the design and and and you

00:07:58,080 --> 00:08:02,729
know the designs right now you know it

00:08:00,419 --> 00:08:06,600
indicates that the designs in a Polish

00:08:02,729 --> 00:08:08,070
state if you will right so I do have the

00:08:06,600 --> 00:08:10,320
green board here I think you've seen

00:08:08,070 --> 00:08:12,030
pictures of the board in the morning as

00:08:10,320 --> 00:08:14,490
well it's very exciting

00:08:12,030 --> 00:08:15,870
this is one I'd like to point out that

00:08:14,490 --> 00:08:18,330
this is probably one of the first five

00:08:15,870 --> 00:08:20,780
motherboards or so that's that's here

00:08:18,330 --> 00:08:25,350
it's very very very new it's right now

00:08:20,780 --> 00:08:27,630
just just write out a factory so so you

00:08:25,350 --> 00:08:30,419
have a new motherboard right a 48 volts

00:08:27,630 --> 00:08:33,210
motherboard and you have processor new

00:08:30,419 --> 00:08:36,870
processor just t8 right and then you

00:08:33,210 --> 00:08:39,630
have lots of i/o cool i/o like PCI agent

00:08:36,870 --> 00:08:41,640
for open copy in we link to dot all

00:08:39,630 --> 00:08:42,839
right so we talked about that we've

00:08:41,640 --> 00:08:45,600
heard about that multiple number of

00:08:42,839 --> 00:08:48,360
times but you know how do we actually

00:08:45,600 --> 00:08:50,430
use these things right you need to go

00:08:48,360 --> 00:08:53,130
through basically i/o qualification

00:08:50,430 --> 00:08:54,630
phase of things right for actually using

00:08:53,130 --> 00:08:57,270
all these subs

00:08:54,630 --> 00:08:59,070
you know through this I oh right and

00:08:57,270 --> 00:09:01,920
that can be pretty challenging right

00:08:59,070 --> 00:09:03,000
anyone who works for an OEM or odium

00:09:01,920 --> 00:09:05,190
would attach to the fact that

00:09:03,000 --> 00:09:06,600
qualification takes a lot of time you

00:09:05,190 --> 00:09:08,520
know to get the driver right firm there

00:09:06,600 --> 00:09:09,420
right you know get the test plan passed

00:09:08,520 --> 00:09:12,150
and things like that

00:09:09,420 --> 00:09:14,460
so as kind of early adopters of this

00:09:12,150 --> 00:09:18,120
platform and what we're trying to do is

00:09:14,460 --> 00:09:21,060
basically qualify and in some cases not

00:09:18,120 --> 00:09:23,580
one not two but you know in some cases

00:09:21,060 --> 00:09:27,000
three different alternatives in each

00:09:23,580 --> 00:09:29,010
subsystem right and this is not just you

00:09:27,000 --> 00:09:31,650
know only to only subject to networking

00:09:29,010 --> 00:09:34,410
we're extending that all the way through

00:09:31,650 --> 00:09:35,790
in all the subsystems right and and I

00:09:34,410 --> 00:09:37,770
think if you think that's that's really

00:09:35,790 --> 00:09:39,810
interesting and it'll really help the

00:09:37,770 --> 00:09:42,350
adoption of the platform not just in

00:09:39,810 --> 00:09:44,670
within relaxed pace but outside as well

00:09:42,350 --> 00:09:46,170
just highlighting that you know you kind

00:09:44,670 --> 00:09:48,240
of have those sources and all the

00:09:46,170 --> 00:09:51,450
subsystems including the accelerator

00:09:48,240 --> 00:09:53,430
subsystems you know I think you know one

00:09:51,450 --> 00:09:55,500
more reason why we're doing this you

00:09:53,430 --> 00:09:58,020
know Laura playing it's this much i/o is

00:09:55,500 --> 00:10:00,180
we don't we want to play with you know

00:09:58,020 --> 00:10:02,370
we only use this system for solving

00:10:00,180 --> 00:10:04,500
various kind of workloads that means

00:10:02,370 --> 00:10:06,750
workloads today you know traditional

00:10:04,500 --> 00:10:08,070
workloads and more emerging workloads as

00:10:06,750 --> 00:10:10,050
well so that's why if some of the

00:10:08,070 --> 00:10:11,460
categories of the of the i/o are more

00:10:10,050 --> 00:10:14,850
important for one versus the other

00:10:11,460 --> 00:10:16,380
and we you know we qualify both we want

00:10:14,850 --> 00:10:18,660
to provide future flexibility as well

00:10:16,380 --> 00:10:21,660
for our product teams within Rackspace

00:10:18,660 --> 00:10:25,860
and you know some of these you know cool

00:10:21,660 --> 00:10:27,420
cool I owe the there's there are the

00:10:25,860 --> 00:10:30,750
workloads that can take advantage of it

00:10:27,420 --> 00:10:32,910
are still coming together so that that

00:10:30,750 --> 00:10:34,380
kind of you know we're trying to think

00:10:32,910 --> 00:10:35,880
of you know the future as well and

00:10:34,380 --> 00:10:37,230
qualify some of them it's obviously

00:10:35,880 --> 00:10:39,000
going to declare a decrease adoption

00:10:37,230 --> 00:10:42,150
time for people who are interested in

00:10:39,000 --> 00:10:46,740
the system as well so one of the

00:10:42,150 --> 00:10:48,930
challenges or or newness in consuming

00:10:46,740 --> 00:10:50,310
this platform is it's an open compute

00:10:48,930 --> 00:10:52,620
platform and that's not a big deal

00:10:50,310 --> 00:10:56,190
open compute is deployed for a long time

00:10:52,620 --> 00:10:58,170
right but but you know this is a 48 volt

00:10:56,190 --> 00:11:01,620
system right so you need a 48 volts

00:10:58,170 --> 00:11:03,510
track right so these you know and we

00:11:01,620 --> 00:11:05,610
need a 48 volts power shelf as well and

00:11:03,510 --> 00:11:07,470
the power shelves you know that are

00:11:05,610 --> 00:11:08,149
available today the early per 48 volts

00:11:07,470 --> 00:11:10,209
power

00:11:08,149 --> 00:11:11,899
they come up with something called

00:11:10,209 --> 00:11:14,389
something called a battery backup

00:11:11,899 --> 00:11:16,910
essentially that way of doing things

00:11:14,389 --> 00:11:18,740
versus for Rackspace and I think I know

00:11:16,910 --> 00:11:21,410
for a few other companies as well it's

00:11:18,740 --> 00:11:24,529
important to have you know local track

00:11:21,410 --> 00:11:26,180
level redundancy with an ATS so you know

00:11:24,529 --> 00:11:29,509
those are the ATS modules so that

00:11:26,180 --> 00:11:31,279
solution didn't exist before as far as I

00:11:29,509 --> 00:11:34,370
understand so what we did was we

00:11:31,279 --> 00:11:35,930
partnered with the Delta and came up

00:11:34,370 --> 00:11:39,110
with that power shelf with an integrated

00:11:35,930 --> 00:11:41,120
ATS we have the shelf in our lab that's

00:11:39,110 --> 00:11:45,110
a picture of the shelf in the lab and

00:11:41,120 --> 00:11:50,209
it's up and running so so you have

00:11:45,110 --> 00:11:53,480
server you have io you have power shelf

00:11:50,209 --> 00:11:55,699
you need a rack so and so we built the

00:11:53,480 --> 00:11:57,709
rack we integrated the power shelf

00:11:55,699 --> 00:12:00,470
you know loaded with all the systems we

00:11:57,709 --> 00:12:02,509
tested that you know I like to kind of

00:12:00,470 --> 00:12:05,089
abstract this away the detail and stuff

00:12:02,509 --> 00:12:08,029
but you know just for fun you know even

00:12:05,089 --> 00:12:09,800
to get this 48 volts open rack clip we

00:12:08,029 --> 00:12:12,620
had to go through multiple revisions and

00:12:09,800 --> 00:12:14,629
get it actually you know bang on and get

00:12:12,620 --> 00:12:18,230
the alignment between the clip and the

00:12:14,629 --> 00:12:20,779
bus bar so so you know this is the devil

00:12:18,230 --> 00:12:22,339
is in the details but it's up and

00:12:20,779 --> 00:12:24,230
running and you know things are things

00:12:22,339 --> 00:12:28,850
are working so that's exciting

00:12:24,230 --> 00:12:30,470
right so I want to point out a little

00:12:28,850 --> 00:12:31,970
bit in the past few slides or the

00:12:30,470 --> 00:12:34,220
development update and put it in

00:12:31,970 --> 00:12:36,019
perspective right Rackspace has been

00:12:34,220 --> 00:12:37,430
playing with the open platforms for

00:12:36,019 --> 00:12:40,220
about seven years now

00:12:37,430 --> 00:12:42,170
right it started with Open Compute we

00:12:40,220 --> 00:12:44,839
went to open power we did the power 8

00:12:42,170 --> 00:12:49,430
bar lie and then you know with the power

00:12:44,839 --> 00:12:51,230
9 system right now here and and you know

00:12:49,430 --> 00:12:52,610
we started playing in accelerators open

00:12:51,230 --> 00:12:56,029
copy and we linked isolate it as a

00:12:52,610 --> 00:12:58,220
little bit last year and then so later

00:12:56,029 --> 00:12:59,990
this year when we do a pilot phase with

00:12:58,220 --> 00:13:01,970
some limited customers in our data

00:12:59,990 --> 00:13:03,949
centers what we'd be doing essentially

00:13:01,970 --> 00:13:06,559
is we'll be putting all these three

00:13:03,949 --> 00:13:11,110
philosophies and learnings all of them

00:13:06,559 --> 00:13:13,850
into into this you know the biology to

00:13:11,110 --> 00:13:14,720
basically products or whatever that

00:13:13,850 --> 00:13:16,429
comes on top of it

00:13:14,720 --> 00:13:18,110
and that's kind of pretty exciting you

00:13:16,429 --> 00:13:21,800
know things take time but they do come

00:13:18,110 --> 00:13:23,809
together essentially so

00:13:21,800 --> 00:13:27,499
go a little bit more into the technology

00:13:23,809 --> 00:13:29,509
update so you know what are some of the

00:13:27,499 --> 00:13:31,160
cool technologies here right so there's

00:13:29,509 --> 00:13:33,619
a lot of innovation happening in the

00:13:31,160 --> 00:13:35,600
data centers various subsystems you know

00:13:33,619 --> 00:13:36,410
serviceability accelerators networking

00:13:35,600 --> 00:13:38,360
things like that

00:13:36,410 --> 00:13:40,160
and because of the slow down on the

00:13:38,360 --> 00:13:41,299
Moore's Law what would have what's

00:13:40,160 --> 00:13:43,730
happening is this you know this

00:13:41,299 --> 00:13:45,920
increased push for for innovating in all

00:13:43,730 --> 00:13:47,809
these areas it's pretty easy nowadays to

00:13:45,920 --> 00:13:49,790
find a server that innovates in one or

00:13:47,809 --> 00:13:52,209
two of these areas but what you know

00:13:49,790 --> 00:13:54,470
what we've done I think this system is

00:13:52,209 --> 00:13:56,209
all of them I've tried to push

00:13:54,470 --> 00:13:58,459
boundaries and all of them and the

00:13:56,209 --> 00:13:59,899
reason why we did that it's it's risky

00:13:58,459 --> 00:14:01,639
but the reason why we did that is

00:13:59,899 --> 00:14:05,029
because for these new technologies to

00:14:01,639 --> 00:14:07,389
become truly mainstream you need you

00:14:05,029 --> 00:14:10,549
need them to play along with each other

00:14:07,389 --> 00:14:12,769
these are obviously too many in number

00:14:10,549 --> 00:14:15,040
to kind of talk through the 30 minutes

00:14:12,769 --> 00:14:20,899
so I'll concentrate on these four

00:14:15,040 --> 00:14:23,809
subsystems here so so the first one is

00:14:20,899 --> 00:14:26,720
PCIe gen 4 right so we have like I was

00:14:23,809 --> 00:14:29,269
saying a deal ends of PCI agent for four

00:14:26,720 --> 00:14:31,490
by sixteen large one of them is an OC

00:14:29,269 --> 00:14:34,069
PMS form factor it's basically a load of

00:14:31,490 --> 00:14:35,600
form factor that helps you support some

00:14:34,069 --> 00:14:39,170
of the other high you know full length

00:14:35,600 --> 00:14:41,899
cards and things like that so so we have

00:14:39,170 --> 00:14:43,759
four by sixteen slot as I said in two by

00:14:41,899 --> 00:14:47,509
eight slots so to give you a little bit

00:14:43,759 --> 00:14:49,850
of perspective each by 16 slot can can

00:14:47,509 --> 00:14:52,069
add a theoretically due to 50 gigabits

00:14:49,850 --> 00:14:54,110
per second at line rate right so it can

00:14:52,069 --> 00:14:56,029
play with 250 gigabits per second and

00:14:54,110 --> 00:14:59,600
that's that's basically dub why SAS

00:14:56,029 --> 00:15:01,339
feast fastest Gen 3 so we wanted to put

00:14:59,600 --> 00:15:03,170
this to test a little bit right so we

00:15:01,339 --> 00:15:04,639
plugged kind of a couple of our net you

00:15:03,170 --> 00:15:07,819
know main networking cards there an

00:15:04,639 --> 00:15:10,100
icp-ms form factor there from Mellanox

00:15:07,819 --> 00:15:12,949
can in there basically Mellanox connect

00:15:10,100 --> 00:15:14,600
text files if you plug this into a gen 3

00:15:12,949 --> 00:15:16,519
system you would have roughly clocked

00:15:14,600 --> 00:15:18,470
out them about you know and run a knife

00:15:16,519 --> 00:15:22,489
of tests about 94 gigabits per second

00:15:18,470 --> 00:15:24,350
worth of usable bandwidth and you know

00:15:22,489 --> 00:15:26,480
what we you know we run a little bit of

00:15:24,350 --> 00:15:29,569
iperf demo what we measure is

00:15:26,480 --> 00:15:31,459
essentially 187 gigabits per second so

00:15:29,569 --> 00:15:36,260
it's not just like say line rate but

00:15:31,459 --> 00:15:41,300
it's actual usable data usable bandwidth

00:15:36,260 --> 00:15:42,770
so the other the other card that you

00:15:41,300 --> 00:15:44,930
tested with we didn't want to just you

00:15:42,770 --> 00:15:47,240
know stop testing or stop you know

00:15:44,930 --> 00:15:48,020
testing gen4 with a network we took a

00:15:47,240 --> 00:15:51,350
storage card

00:15:48,020 --> 00:15:54,290
we took an edit accom nvm nvm II Express

00:15:51,350 --> 00:15:57,260
card we plugged into our system and we

00:15:54,290 --> 00:15:59,630
feed this was a gen 3 system the fiyo

00:15:57,260 --> 00:16:02,870
would have clogged about 6.8 gigabits

00:15:59,630 --> 00:16:06,110
per second versus you know what we

00:16:02,870 --> 00:16:08,480
measure is 13.5 or so your bytes per

00:16:06,110 --> 00:16:11,510
second which is essentially double again

00:16:08,480 --> 00:16:14,180
so so both on networking in and storage

00:16:11,510 --> 00:16:16,310
and things are coming together one PCI

00:16:14,180 --> 00:16:18,500
agent for so this is one card right

00:16:16,310 --> 00:16:20,810
often you know when you know platforms

00:16:18,500 --> 00:16:22,970
prom is too much io what they do is is

00:16:20,810 --> 00:16:24,710
you know they you know when you plug few

00:16:22,970 --> 00:16:25,790
cards will be fine but if you want to

00:16:24,710 --> 00:16:27,830
plug more you know if you want to

00:16:25,790 --> 00:16:30,470
actually really use all the bandwidth

00:16:27,830 --> 00:16:32,240
it's really hard to you know to actually

00:16:30,470 --> 00:16:34,100
push that and you'll have to do all

00:16:32,240 --> 00:16:36,440
kinds of optimizations and one-off fixes

00:16:34,100 --> 00:16:39,530
to get that bandwidth so I wanted to

00:16:36,440 --> 00:16:42,530
test this so I picked a heap of connect

00:16:39,530 --> 00:16:43,940
X 5 cards Mellanox connect X 5 cards

00:16:42,530 --> 00:16:47,300
plug them all through the system

00:16:43,940 --> 00:16:49,190
essentially right you can see you know

00:16:47,300 --> 00:16:52,180
I'm not being seen I think seen so many

00:16:49,190 --> 00:16:55,820
Mellanox cards in the same system and

00:16:52,180 --> 00:17:00,710
all of them in the gentian Gen 4 which

00:16:55,820 --> 00:17:02,150
is 16 Giga transfers per second and you

00:17:00,710 --> 00:17:03,470
know plugged to servers you can't just

00:17:02,150 --> 00:17:06,260
really touched networking with one

00:17:03,470 --> 00:17:08,329
server so a big two servers per plugged

00:17:06,260 --> 00:17:11,270
all those cards connected them to a

00:17:08,329 --> 00:17:17,089
hundred cakes which run a demo type of

00:17:11,270 --> 00:17:19,490
demo and based on these numbers I like

00:17:17,089 --> 00:17:21,920
to say they were pretty confident based

00:17:19,490 --> 00:17:24,319
on these numbers and aggregating them we

00:17:21,920 --> 00:17:26,870
can essentially run one terabits per

00:17:24,319 --> 00:17:28,850
second network bandwidth on this system

00:17:26,870 --> 00:17:32,300
without drinking it running into power

00:17:28,850 --> 00:17:33,740
bottleneck so the real bandwidth will be

00:17:32,300 --> 00:17:36,440
pretty close to it usually typically

00:17:33,740 --> 00:17:38,690
about 94% 93% of that and that's that's

00:17:36,440 --> 00:17:42,050
okay but the fact that we are able to

00:17:38,690 --> 00:17:44,210
push it speaks to not just like say you

00:17:42,050 --> 00:17:47,470
know I own the system but also the

00:17:44,210 --> 00:17:50,409
strong codes that basically supported

00:17:47,470 --> 00:17:52,240
so I'm a little bit of recipe here if

00:17:50,409 --> 00:17:55,090
you want to do it at home if you want

00:17:52,240 --> 00:17:57,519
repeat this experiment at home but but

00:17:55,090 --> 00:18:03,970
it's really cool it's a testament for

00:17:57,519 --> 00:18:06,100
many things coming together so so the

00:18:03,970 --> 00:18:07,809
you know you have cards you in storage

00:18:06,100 --> 00:18:10,779
cards you have you know systems you have

00:18:07,809 --> 00:18:12,580
a network cards right but you know if

00:18:10,779 --> 00:18:14,200
you don't have Jen for switches right

00:18:12,580 --> 00:18:16,960
it's hard to kind of take advantage of

00:18:14,200 --> 00:18:19,120
that especially you know the these two

00:18:16,960 --> 00:18:21,399
subsystems the GPU expansion and storage

00:18:19,120 --> 00:18:23,799
expansion the long beam kind of like say

00:18:21,399 --> 00:18:25,960
running into bottlenecks because of

00:18:23,799 --> 00:18:28,600
because of this because you don't chain

00:18:25,960 --> 00:18:30,460
three right Jen three speeds so we're

00:18:28,600 --> 00:18:32,649
partnering with Broadcom they've just

00:18:30,460 --> 00:18:35,769
announced that they start shipping their

00:18:32,649 --> 00:18:38,919
Gen 4 switches today so we are one of

00:18:35,769 --> 00:18:40,539
the first service those those Gen 4

00:18:38,919 --> 00:18:42,549
switches would be open systems at least

00:18:40,539 --> 00:18:44,559
that'll be tested on and we'll try and

00:18:42,549 --> 00:18:46,600
enable those in on our platform

00:18:44,559 --> 00:18:49,330
those Gen 4 switches and that'll mean to

00:18:46,600 --> 00:18:53,080
both of these subsystems quite a bit you

00:18:49,330 --> 00:18:56,980
know removing that bottleneck you know

00:18:53,080 --> 00:18:59,110
the battle ID to storage it's it's it's

00:18:56,980 --> 00:19:01,960
a topic on its own and you could talk

00:18:59,110 --> 00:19:05,289
about it quite a bit so what we did is

00:19:01,960 --> 00:19:07,870
basically we added support for this

00:19:05,289 --> 00:19:10,809
system to support SAS SATA and nvme

00:19:07,870 --> 00:19:12,309
lanes in the same slot and that gives

00:19:10,809 --> 00:19:14,139
you a lot of flexibility in terms of

00:19:12,309 --> 00:19:15,759
different people using the system and

00:19:14,139 --> 00:19:16,419
some products being built on it and

00:19:15,759 --> 00:19:18,879
things like that

00:19:16,419 --> 00:19:21,009
you could have retired storage of few

00:19:18,879 --> 00:19:21,870
and mimi drives few sastras few SATA

00:19:21,009 --> 00:19:25,690
drives or something like that

00:19:21,870 --> 00:19:28,539
essentially more flexibility you know if

00:19:25,690 --> 00:19:30,100
you're interested more to find out you

00:19:28,539 --> 00:19:32,769
might have to fly an assay but I'm

00:19:30,100 --> 00:19:36,240
giving a deep deep dive into deep dive

00:19:32,769 --> 00:19:39,250
into the storage subsystem at OCP and

00:19:36,240 --> 00:19:41,980
this is really cool the concepts in

00:19:39,250 --> 00:19:43,809
embedded in this system can be actually

00:19:41,980 --> 00:19:45,879
used in any open power system any Open

00:19:43,809 --> 00:19:50,620
Compute system specifically the storage

00:19:45,879 --> 00:19:52,500
aspects of it so now I want to talk a

00:19:50,620 --> 00:19:55,330
little bit about the 48 volts part of it

00:19:52,500 --> 00:19:58,149
so you know this is one of the you know

00:19:55,330 --> 00:20:01,090
first systems with 48 volts point of

00:19:58,149 --> 00:20:02,799
load support on it so the point

00:20:01,090 --> 00:20:06,879
subsistence that support the point O

00:20:02,799 --> 00:20:09,340
Lord are CPUs and and memory today we do

00:20:06,879 --> 00:20:10,600
have in the you know in the extended

00:20:09,340 --> 00:20:13,990
system we do have a little bit of a

00:20:10,600 --> 00:20:15,700
power board that can that can convert to

00:20:13,990 --> 00:20:18,850
you know some of aspect of the incoming

00:20:15,700 --> 00:20:22,149
power to 48 volts and the others to the

00:20:18,850 --> 00:20:26,499
12 volts so say for example if the GPUs

00:20:22,149 --> 00:20:28,179
move to 48 volts then you all you would

00:20:26,499 --> 00:20:30,190
have to do is reap in that fan board and

00:20:28,179 --> 00:20:33,100
and you'll be able to support you know

00:20:30,190 --> 00:20:34,240
instead of 12 volts GPU is 48 words you

00:20:33,100 --> 00:20:36,100
don't have to be spin the motherboard at

00:20:34,240 --> 00:20:39,490
all it's very scalable and efficient our

00:20:36,100 --> 00:20:41,259
way so now I want to talk a little bit

00:20:39,490 --> 00:20:45,070
of open capi we're going to the

00:20:41,259 --> 00:20:49,929
accelerator land now so we have to open

00:20:45,070 --> 00:20:52,509
capi sockets per per processor each so

00:20:49,929 --> 00:20:55,450
all four of them put together you have

00:20:52,509 --> 00:20:57,940
about hundred gigabytes of bandwidth at

00:20:55,450 --> 00:21:00,850
line rate that's 800 gigabits per second

00:20:57,940 --> 00:21:03,009
essentially right and they use you know

00:21:00,850 --> 00:21:07,389
standard slim SAS SAS for auto

00:21:03,009 --> 00:21:10,210
connectors to to kind of deliver that

00:21:07,389 --> 00:21:12,159
bandwidth doing a lot of cool work here

00:21:10,210 --> 00:21:14,470
in terms of you know being one of the

00:21:12,159 --> 00:21:16,659
one of the first doctors and of the open

00:21:14,470 --> 00:21:18,999
copy accelerators we're doing a lot of

00:21:16,659 --> 00:21:21,429
good work with Amphenol I mean you know

00:21:18,999 --> 00:21:24,249
in developing cables of different lines

00:21:21,429 --> 00:21:27,429
you know developing in system tests for

00:21:24,249 --> 00:21:29,289
25 gig and things like that those sound

00:21:27,429 --> 00:21:31,600
a little bit boring you know cables

00:21:29,289 --> 00:21:33,220
connectors and stuff but for some of

00:21:31,600 --> 00:21:36,279
these new technologies to get mainstream

00:21:33,220 --> 00:21:38,139
all those are very essential so with

00:21:36,279 --> 00:21:42,429
that said I have a little bit of demo

00:21:38,139 --> 00:21:45,580
again for open copy so a plug for open

00:21:42,429 --> 00:21:47,529
copy cards in the system and then I ran

00:21:45,580 --> 00:21:49,749
a real bandwidth test this is not a line

00:21:47,529 --> 00:21:53,710
rate test but real bandwidth test right

00:21:49,749 --> 00:21:56,139
so pretty quick demo script that moves

00:21:53,710 --> 00:21:59,830
data you know now and these are you know

00:21:56,139 --> 00:22:03,279
each each window running on each of

00:21:59,830 --> 00:22:07,210
these systems and what will quickly see

00:22:03,279 --> 00:22:10,450
is you know 22 gigs per per link so it's

00:22:07,210 --> 00:22:12,549
essentially summarized here is you know

00:22:10,450 --> 00:22:14,830
you can support for open capi cards with

00:22:12,549 --> 00:22:16,870
SI of twenty five point seven eight

00:22:14,830 --> 00:22:20,080
round-trip latency of 80 milliseconds

00:22:16,870 --> 00:22:22,590
like 18 nanoseconds which is essentially

00:22:20,080 --> 00:22:24,670
about four to five times lower than PCIe

00:22:22,590 --> 00:22:27,730
you know the bandwidth test I just

00:22:24,670 --> 00:22:29,710
showed you guys and it's coherent so no

00:22:27,730 --> 00:22:31,540
kernel overhead overhead for moving some

00:22:29,710 --> 00:22:33,760
of the data so these three things the

00:22:31,540 --> 00:22:36,310
round-trip latency be increased

00:22:33,760 --> 00:22:38,050
bandwidth and and no kernel overhead

00:22:36,310 --> 00:22:41,980
it's like a trifecta essentially and

00:22:38,050 --> 00:22:43,420
they just have a upstream driver so you

00:22:41,980 --> 00:22:46,420
know very soon you'll be able to make

00:22:43,420 --> 00:22:48,580
use of PCIe ax you know open copy

00:22:46,420 --> 00:22:50,500
accelerators just as as if they were

00:22:48,580 --> 00:22:52,300
PCIe accelerators yep

00:22:50,500 --> 00:22:55,930
and that's you know I like to call them

00:22:52,300 --> 00:22:57,370
the cool PCIe right so accelerators are

00:22:55,930 --> 00:22:59,650
coming in different form factors I have

00:22:57,370 --> 00:23:01,210
just pictures for those we've testing

00:22:59,650 --> 00:23:01,720
those accident different different form

00:23:01,210 --> 00:23:03,520
factors

00:23:01,720 --> 00:23:05,770
you know perpendicular amount just PCI

00:23:03,520 --> 00:23:07,660
you own the accelerators perpendicular

00:23:05,770 --> 00:23:09,730
amount open copy accelerator start cab

00:23:07,660 --> 00:23:11,620
cable into it the server you know

00:23:09,730 --> 00:23:14,430
testing those as well there's a little

00:23:11,620 --> 00:23:16,690
bit of gap here in terms of like say how

00:23:14,430 --> 00:23:18,450
the connector placement is done on a

00:23:16,690 --> 00:23:20,350
different connect on different

00:23:18,450 --> 00:23:22,600
accelerators and that's a little bit of

00:23:20,350 --> 00:23:24,940
a gap and and and a blocker for

00:23:22,600 --> 00:23:27,220
mainstream at auction because you know

00:23:24,940 --> 00:23:29,170
it'll be hard to put it in some systems

00:23:27,220 --> 00:23:30,640
fit it in some systems if you want to

00:23:29,170 --> 00:23:32,530
sit fit more of these cards in the same

00:23:30,640 --> 00:23:35,230
system it gets a little bit a hassle so

00:23:32,530 --> 00:23:36,520
you know as a part of open power and you

00:23:35,230 --> 00:23:38,770
know maybe even reach out to open

00:23:36,520 --> 00:23:40,300
computer and open copy foundations we

00:23:38,770 --> 00:23:43,090
need to kind of work together to have a

00:23:40,300 --> 00:23:45,520
little bit more reference document if

00:23:43,090 --> 00:23:47,860
you will to put together some of the

00:23:45,520 --> 00:23:50,380
details of where these things should be

00:23:47,860 --> 00:23:52,080
where these connectors should be we're

00:23:50,380 --> 00:23:56,350
also testing with some parallel

00:23:52,080 --> 00:23:59,760
accelerators these are examples of these

00:23:56,350 --> 00:24:03,160
are essentially like any link GPUs or

00:23:59,760 --> 00:24:04,750
Xilinx announced some HBM to FBG FPGAs

00:24:03,160 --> 00:24:06,640
today those are most likely going to be

00:24:04,750 --> 00:24:08,590
in this form factor as well we're

00:24:06,640 --> 00:24:10,510
testing those as well we've built some

00:24:08,590 --> 00:24:13,750
boards some hardware to support these

00:24:10,510 --> 00:24:15,340
axles as well you know this is it's just

00:24:13,750 --> 00:24:17,380
an overview of the all different form

00:24:15,340 --> 00:24:21,580
factors and how the cabling and the real

00:24:17,380 --> 00:24:23,710
world implementations of those so the

00:24:21,580 --> 00:24:26,740
PCIe accelerators that we are testing

00:24:23,710 --> 00:24:28,630
with our you know the volt of e1

00:24:26,740 --> 00:24:31,000
hundreds I don't have to explain you the

00:24:28,630 --> 00:24:34,180
features of is world of e100 it's widely

00:24:31,000 --> 00:24:35,830
known it's a perfect card for me

00:24:34,180 --> 00:24:37,360
planning it's a perfect GPU for any

00:24:35,830 --> 00:24:38,980
planning if you will there's other

00:24:37,360 --> 00:24:41,800
implementations as well basic base

00:24:38,980 --> 00:24:43,990
implementations and in another card that

00:24:41,800 --> 00:24:47,380
we're testing with PCIe accelerator is a

00:24:43,990 --> 00:24:49,440
storage accelerator from nanotech it's

00:24:47,380 --> 00:24:53,020
essentially comes in two form factors

00:24:49,440 --> 00:24:55,000
cabled or onboard storage and and an

00:24:53,020 --> 00:24:57,940
incision four by eight card it's really

00:24:55,000 --> 00:24:59,680
good for a coherent memory expansion and

00:24:57,940 --> 00:25:03,070
you know implementing accelerated no

00:24:59,680 --> 00:25:05,970
sequel databases this is you know one of

00:25:03,070 --> 00:25:10,660
the cool things we built a little bit of

00:25:05,970 --> 00:25:13,210
SXM to slim SAS to a6m2 interposer to

00:25:10,660 --> 00:25:15,040
bring CPU to GPU and we linked in an

00:25:13,210 --> 00:25:16,480
Open Compute form factor I think this is

00:25:15,040 --> 00:25:18,550
the first Open Compute implementation of

00:25:16,480 --> 00:25:21,720
it you know all these bandwidth numbers

00:25:18,550 --> 00:25:26,170
that I spoke for open copy hold good for

00:25:21,720 --> 00:25:29,110
any link as well and you know additional

00:25:26,170 --> 00:25:30,370
to the deep learning models specifically

00:25:29,110 --> 00:25:32,980
this implementation I think would be

00:25:30,370 --> 00:25:34,900
really good for GPU analytics and large

00:25:32,980 --> 00:25:37,390
deep learning models essentially because

00:25:34,900 --> 00:25:39,640
of that high bandwidth what this means

00:25:37,390 --> 00:25:43,420
is basically you can probably start

00:25:39,640 --> 00:25:46,720
seeing a new generation of K bog

00:25:43,420 --> 00:25:48,430
implementations based on CPU to GPU and

00:25:46,720 --> 00:25:50,950
we link they don't exist once today

00:25:48,430 --> 00:25:53,440
and k box are becoming really you know

00:25:50,950 --> 00:25:56,560
mainstream so you know we'll start

00:25:53,440 --> 00:25:58,900
seeing that as as one of these as an

00:25:56,560 --> 00:26:02,920
extension of these first in villain-con

00:25:58,900 --> 00:26:05,860
wire kind of an implementation so we're

00:26:02,920 --> 00:26:08,470
playing with three open copy

00:26:05,860 --> 00:26:11,800
accelerators as well the flash storage I

00:26:08,470 --> 00:26:13,210
accelerated from molex this kind of you

00:26:11,800 --> 00:26:15,070
know an extension of what more I said in

00:26:13,210 --> 00:26:16,570
there in the morning you know this this

00:26:15,070 --> 00:26:19,750
this these these are the kind of like

00:26:16,570 --> 00:26:21,820
say ports that enable you a new class

00:26:19,750 --> 00:26:23,350
storage essentially with the latency

00:26:21,820 --> 00:26:25,720
that somewhere between traditional

00:26:23,350 --> 00:26:28,750
storage and and traditional memory so

00:26:25,720 --> 00:26:31,270
that new tire of storage in the in over

00:26:28,750 --> 00:26:33,820
to flex card is is it's perfect for

00:26:31,270 --> 00:26:35,950
network acceleration essentially and the

00:26:33,820 --> 00:26:38,890
Alpha data card is something that we've

00:26:35,950 --> 00:26:40,900
been using for since you know we've been

00:26:38,890 --> 00:26:42,340
playing with open copy it's a perfect

00:26:40,900 --> 00:26:44,739
development platform

00:26:42,340 --> 00:26:48,099
it's offered a lot of board Support

00:26:44,739 --> 00:26:49,840
Package resources it's good for like HPC

00:26:48,099 --> 00:26:53,080
market analysis kind of applications

00:26:49,840 --> 00:26:55,419
smart make infinite things like that so

00:26:53,080 --> 00:26:56,830
I just put this picture to kind of

00:26:55,419 --> 00:26:58,690
summarize all those features and the

00:26:56,830 --> 00:27:01,419
accelerators essentially these are very

00:26:58,690 --> 00:27:04,179
complex systems and they're almost

00:27:01,419 --> 00:27:06,399
servers on their own or systems on their

00:27:04,179 --> 00:27:08,259
own so you need to be very careful about

00:27:06,399 --> 00:27:09,159
how you program to them and it can be a

00:27:08,259 --> 00:27:12,549
little bit challenging and overwhelming

00:27:09,159 --> 00:27:14,200
in their adoption so that's where we're

00:27:12,549 --> 00:27:16,929
doing some work with these frameworks

00:27:14,200 --> 00:27:19,629
these flow for frameworks the first one

00:27:16,929 --> 00:27:21,700
is snap it's an open source framework

00:27:19,629 --> 00:27:24,879
and development framework it helps you

00:27:21,700 --> 00:27:26,679
program in high level code for various

00:27:24,879 --> 00:27:30,549
workloads and it kind of converts them

00:27:26,679 --> 00:27:33,999
to local low level languages and you

00:27:30,549 --> 00:27:35,799
know power EA and Kappa flash our IBM

00:27:33,999 --> 00:27:39,309
implementations and IBM solutions to

00:27:35,799 --> 00:27:41,229
make deep learning and databases as a

00:27:39,309 --> 00:27:43,629
service databases service very easily

00:27:41,229 --> 00:27:46,799
deployable and also take advantage of

00:27:43,629 --> 00:27:49,629
the accelerators like GPUs and and FPGAs

00:27:46,799 --> 00:27:50,589
you can also talk to solution providers

00:27:49,629 --> 00:27:52,059
if you don't if you're not in the

00:27:50,589 --> 00:27:53,289
business or if you don't have enough

00:27:52,059 --> 00:27:55,539
resources to write all that code

00:27:53,289 --> 00:27:59,019
yourself you can leverage some of these

00:27:55,539 --> 00:28:00,969
companies to essentially you know write

00:27:59,019 --> 00:28:02,320
solutions for you and these are a couple

00:28:00,969 --> 00:28:04,749
of companies that we've partnered with

00:28:02,320 --> 00:28:06,609
but there are a bunch of other partners

00:28:04,749 --> 00:28:07,989
that the board manufacturers are

00:28:06,609 --> 00:28:11,710
partnering with you can talk to them as

00:28:07,989 --> 00:28:17,049
well so that said I like to put this

00:28:11,710 --> 00:28:19,389
graphic it's a spiral ig2 server is this

00:28:17,049 --> 00:28:22,479
ace motherboard it's all the cool IO

00:28:19,389 --> 00:28:24,399
that's supported on it and and you know

00:28:22,479 --> 00:28:27,129
it's a beautiful system right I wouldn't

00:28:24,399 --> 00:28:28,659
have it's it's it's it wouldn't have

00:28:27,129 --> 00:28:29,710
come together it won't I can't stress

00:28:28,659 --> 00:28:33,460
enough it wouldn't have come together

00:28:29,710 --> 00:28:35,529
without all these companies putting

00:28:33,460 --> 00:28:37,059
significant resources on it I also want

00:28:35,529 --> 00:28:38,859
to take a moment to kind of tack thank

00:28:37,059 --> 00:28:41,259
the fame the faces behind these

00:28:38,859 --> 00:28:43,839
companies and what 250 engineers are so

00:28:41,259 --> 00:28:48,099
I did a rough count that contributed to

00:28:43,839 --> 00:28:49,719
the system coming here I want to thank

00:28:48,099 --> 00:28:52,089
all these foundations that have laid

00:28:49,719 --> 00:28:54,220
ground for such groundbreaking such huge

00:28:52,089 --> 00:28:55,869
scale collaboration between various

00:28:54,220 --> 00:28:58,130
companies would have been really hard to

00:28:55,869 --> 00:29:00,560
do that

00:28:58,130 --> 00:29:03,110
for solving bottlenecks we're using

00:29:00,560 --> 00:29:06,050
adoption doing that together together

00:29:03,110 --> 00:29:09,470
with collaboration so I hope you join us

00:29:06,050 --> 00:29:11,480
on a first-class accelerated flight and

00:29:09,470 --> 00:29:14,270
you know China is in you know for a

00:29:11,480 --> 00:29:16,970
comfortable an acceleration environment

00:29:14,270 --> 00:29:18,500
if you don't you might have to do

00:29:16,970 --> 00:29:20,840
something like this something like this

00:29:18,500 --> 00:29:23,180
to get on that flight and to catch up so

00:29:20,840 --> 00:29:26,120
maybe you want to avoid it maybe it's

00:29:23,180 --> 00:29:27,830
good to leave this for the movies so if

00:29:26,120 --> 00:29:30,770
you want to learn more have the last

00:29:27,830 --> 00:29:32,030
year's talk and that goes deep dives

00:29:30,770 --> 00:29:34,880
into deep dives into a lot of

00:29:32,030 --> 00:29:38,420
technologies of all the resources that

00:29:34,880 --> 00:29:39,890
you can find more information on if you

00:29:38,420 --> 00:29:42,380
want to participate if you want to be a

00:29:39,890 --> 00:29:44,000
if your system developer or if you want

00:29:42,380 --> 00:29:47,060
to enable this system for mass

00:29:44,000 --> 00:29:48,590
consumption talk to talk to me and I

00:29:47,060 --> 00:29:50,890
will put you in touch with the right

00:29:48,590 --> 00:29:53,900
people who can help you with that

00:29:50,890 --> 00:29:56,510
the design package is you know upstream

00:29:53,900 --> 00:29:58,530
on the open computer website and thank

00:29:56,510 --> 00:30:03,859
you thank you

00:29:58,530 --> 00:30:03,859

YouTube URL: https://www.youtube.com/watch?v=2Z6NTddpi9g


