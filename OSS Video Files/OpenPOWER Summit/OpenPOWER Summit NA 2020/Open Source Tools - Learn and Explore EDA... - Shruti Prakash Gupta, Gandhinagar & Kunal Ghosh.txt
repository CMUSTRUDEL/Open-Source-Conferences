Title: Open Source Tools - Learn and Explore EDA... - Shruti Prakash Gupta, Gandhinagar & Kunal Ghosh
Publication date: 2020-09-21
Playlist: OpenPOWER Summit NA 2020
Description: 
	Open Source Tools - Learn and Explore EDA Technology at your PC - Shruti Prakash Gupta, IIT Gandhinagar & Kunal Ghosh, VLSI System Design Corp.

Speakers: Kunal Ghosh, Shruti Prakash Gupta

VLSI industry is developing at a much faster rate and the core factor is the development in the Electronic Design Automation industry. It reduces the effort and time demanded for any design procedure, but at the same time requires high-end tools and large set up to deliver high performance. Most of the freshers aspiring to get into the industry fail to get hands on experience with the tools due to their restricted availability. Open source tools come to the rescue at this point. However, they do not provide an equal level of ease in accessing, due to the technical complexities involved or due to lacking in the user-friendliness. This is an attempt to make the procedure of accessing these tools and other utilities as simple as possible for any beginner to get started with. This project includes a detailed report about how to get access to the tools involved in front- and back-end ASIC design flow. It focuses on the openPOWER ISA soft-core but is extensible to any general purpose.
Captions: 
	00:00:00,799 --> 00:00:06,399
good morning everyone i am shruti

00:00:03,919 --> 00:00:07,759
and in this presentation i am going to

00:00:06,399 --> 00:00:10,559
give a short description

00:00:07,759 --> 00:00:11,920
about my project which i completed as a

00:00:10,559 --> 00:00:16,000
one-month internship

00:00:11,920 --> 00:00:18,000
under the mentorship of mr kunal ghosh

00:00:16,000 --> 00:00:20,640
the project was focused on

00:00:18,000 --> 00:00:22,560
exploring the scope of open source tools

00:00:20,640 --> 00:00:25,519
for the vlsi industry

00:00:22,560 --> 00:00:26,560
and especially the asic design flow the

00:00:25,519 --> 00:00:28,960
idea behind

00:00:26,560 --> 00:00:30,160
choosing this problem statement was that

00:00:28,960 --> 00:00:32,000
we realized that

00:00:30,160 --> 00:00:33,360
although there are many industry level

00:00:32,000 --> 00:00:35,840
cartoons which are

00:00:33,360 --> 00:00:36,800
very powerful in terms of performance

00:00:35,840 --> 00:00:40,000
they are not

00:00:36,800 --> 00:00:41,120
freely available for students and mainly

00:00:40,000 --> 00:00:44,079
the college students

00:00:41,120 --> 00:00:45,360
for exploration and if someone wants to

00:00:44,079 --> 00:00:48,640
get a prior knowledge

00:00:45,360 --> 00:00:50,640
before entering the industry they don't

00:00:48,640 --> 00:00:51,360
get these tools easily accessible to

00:00:50,640 --> 00:00:54,320
them

00:00:51,360 --> 00:00:55,520
so we decided uh to figure out some

00:00:54,320 --> 00:00:57,440
simple procedure

00:00:55,520 --> 00:00:58,960
for the beginners so that they can

00:00:57,440 --> 00:01:01,680
follow these steps

00:00:58,960 --> 00:01:03,440
and set up the whole tool system on

00:01:01,680 --> 00:01:06,560
their own pc

00:01:03,440 --> 00:01:07,920
and get started working with it however

00:01:06,560 --> 00:01:10,560
i would like to mention that

00:01:07,920 --> 00:01:12,400
uh although the project is focused on

00:01:10,560 --> 00:01:13,119
these open source tools it is not

00:01:12,400 --> 00:01:15,600
restricted

00:01:13,119 --> 00:01:16,560
restricted to them um so first of all

00:01:15,600 --> 00:01:18,240
i'd like to mention

00:01:16,560 --> 00:01:20,720
the main key points which i'll be

00:01:18,240 --> 00:01:22,400
presenting here the first one is open

00:01:20,720 --> 00:01:24,560
power isa

00:01:22,400 --> 00:01:26,400
i'll discuss briefly about it and then

00:01:24,560 --> 00:01:27,520
we'll move on to the power 9 functional

00:01:26,400 --> 00:01:30,560
simulator

00:01:27,520 --> 00:01:33,040
i'll show a few steps about uh how

00:01:30,560 --> 00:01:35,280
we can like what is the interface which

00:01:33,040 --> 00:01:37,680
we get with the simulator and how can we

00:01:35,280 --> 00:01:38,640
interact with it and what all things we

00:01:37,680 --> 00:01:41,360
can do

00:01:38,640 --> 00:01:42,960
in terms of exploring the micro

00:01:41,360 --> 00:01:45,600
architecture and the isa

00:01:42,960 --> 00:01:47,360
so that anyone who is interested in

00:01:45,600 --> 00:01:48,880
knowing more about the power isa to

00:01:47,360 --> 00:01:51,360
understand it better uh

00:01:48,880 --> 00:01:52,320
which will definitely be helpful uh in

00:01:51,360 --> 00:01:54,560
their

00:01:52,320 --> 00:01:55,759
of any further work may be designed or

00:01:54,560 --> 00:01:58,159
anything else

00:01:55,759 --> 00:01:59,600
they can follow these steps and get the

00:01:58,159 --> 00:02:02,320
simulator working for them

00:01:59,600 --> 00:02:03,280
and also perform separate other tasks

00:02:02,320 --> 00:02:05,920
with it

00:02:03,280 --> 00:02:07,759
then we'll briefly discuss about the gnu

00:02:05,920 --> 00:02:10,879
cross compilation two chain

00:02:07,759 --> 00:02:13,280
so that anyone can directly write a c

00:02:10,879 --> 00:02:14,480
code and get it converted for the power

00:02:13,280 --> 00:02:16,879
ism

00:02:14,480 --> 00:02:18,319
uh they can also like meanwhile they can

00:02:16,879 --> 00:02:21,440
check the assembly level code

00:02:18,319 --> 00:02:23,440
and other things which will again uh

00:02:21,440 --> 00:02:25,120
be helpful for the students to

00:02:23,440 --> 00:02:28,319
understand the isa better

00:02:25,120 --> 00:02:29,520
and how things are uh being done on the

00:02:28,319 --> 00:02:31,120
register level so

00:02:29,520 --> 00:02:32,640
it will also give a glimpse about the

00:02:31,120 --> 00:02:34,640
amount of architecture

00:02:32,640 --> 00:02:37,120
and at the end we'll discuss a bit now

00:02:34,640 --> 00:02:40,400
about the chiselward softboard

00:02:37,120 --> 00:02:43,120
so i'll show that uh what it is actually

00:02:40,400 --> 00:02:45,519
and how can we uh use the open source

00:02:43,120 --> 00:02:48,720
tools to complete the asic design flow

00:02:45,519 --> 00:02:50,720
with the softboard so let's move ahead

00:02:48,720 --> 00:02:51,920
first of all discussing about open bar

00:02:50,720 --> 00:02:54,080
isa uh

00:02:51,920 --> 00:02:56,000
why did we choose this one uh because it

00:02:54,080 --> 00:02:58,319
is an open source isa which means that

00:02:56,000 --> 00:03:00,959
anyone can freely take it up and

00:02:58,319 --> 00:03:01,840
design any hardware maybe a micro new

00:03:00,959 --> 00:03:05,519
micro

00:03:01,840 --> 00:03:09,040
uh description or anything else

00:03:05,519 --> 00:03:12,720
with the ism and they can freely

00:03:09,040 --> 00:03:14,640
use it to design and study more about it

00:03:12,720 --> 00:03:16,640
it is a simple risk load store

00:03:14,640 --> 00:03:18,879
architecture however it has

00:03:16,640 --> 00:03:20,080
highly specific instructions as well uh

00:03:18,879 --> 00:03:22,879
which are

00:03:20,080 --> 00:03:25,200
which are like mainly designed for

00:03:22,879 --> 00:03:27,519
vector multiplication addition and uh

00:03:25,200 --> 00:03:29,599
for the same applications for uh

00:03:27,519 --> 00:03:32,799
floating point numbers or maybe integers

00:03:29,599 --> 00:03:33,760
all those operations are there uh the

00:03:32,799 --> 00:03:35,440
isa

00:03:33,760 --> 00:03:37,680
mainly comes in two variants one is

00:03:35,440 --> 00:03:39,280
32-bit and the other one is 64-bit the

00:03:37,680 --> 00:03:42,799
one with which we were working

00:03:39,280 --> 00:03:43,840
was 64-bit um then it has 32 general

00:03:42,799 --> 00:03:46,400
purpose resistors

00:03:43,840 --> 00:03:48,000
um apart from them there are several

00:03:46,400 --> 00:03:51,120
specific registers as well

00:03:48,000 --> 00:03:52,640
which which are not a part of the isa

00:03:51,120 --> 00:03:53,519
but it is more micro architecture

00:03:52,640 --> 00:03:56,640
dependent

00:03:53,519 --> 00:03:58,959
and we'll see more about it in the power

00:03:56,640 --> 00:04:01,280
power 9 function simulator description

00:03:58,959 --> 00:04:02,799
and it allows out of order execution as

00:04:01,280 --> 00:04:04,799
well

00:04:02,799 --> 00:04:05,920
so uh discussing about the power name

00:04:04,799 --> 00:04:10,000
function simulator

00:04:05,920 --> 00:04:14,239
uh it is again introduced by ibm

00:04:10,000 --> 00:04:15,760
and it what it gives the user is a linux

00:04:14,239 --> 00:04:17,759
platform which boots over

00:04:15,760 --> 00:04:20,720
the host platform whichever you are

00:04:17,759 --> 00:04:22,960
using so it's just like you have to uh

00:04:20,720 --> 00:04:24,479
boot up your laptop and get your

00:04:22,960 --> 00:04:26,960
terminal running and then

00:04:24,479 --> 00:04:27,520
you can put up another linux window

00:04:26,960 --> 00:04:31,680
where

00:04:27,520 --> 00:04:33,199
the the host is power ism so whatever

00:04:31,680 --> 00:04:35,520
code you write over this

00:04:33,199 --> 00:04:36,479
system uh it provides you a command line

00:04:35,520 --> 00:04:38,479
interface so you can

00:04:36,479 --> 00:04:40,720
write your c port over there and then

00:04:38,479 --> 00:04:43,120
build it for the power isa or get the

00:04:40,720 --> 00:04:43,120
assembly

00:04:46,960 --> 00:04:51,120
system so whatever you are doing over

00:04:48,880 --> 00:04:53,040
there is being done on the power isa and

00:04:51,120 --> 00:04:56,080
not the uh host system

00:04:53,040 --> 00:04:58,240
so by that method you can directly

00:04:56,080 --> 00:04:59,600
peek into the assembly level code and

00:04:58,240 --> 00:05:01,919
see how the

00:04:59,600 --> 00:05:03,919
operations are being done um at the

00:05:01,919 --> 00:05:06,880
register level

00:05:03,919 --> 00:05:09,680
uh it the simulator simulates memory

00:05:06,880 --> 00:05:12,479
disk and network as well however

00:05:09,680 --> 00:05:13,199
discussing about the memory section so

00:05:12,479 --> 00:05:15,280
here is a

00:05:13,199 --> 00:05:17,199
screenshot from my laptop uh it shows

00:05:15,280 --> 00:05:20,080
the uh registers

00:05:17,199 --> 00:05:20,960
uh all the registers values of the 32

00:05:20,080 --> 00:05:23,680
gpis

00:05:20,960 --> 00:05:24,800
which are which are there at a

00:05:23,680 --> 00:05:27,680
particular instant

00:05:24,800 --> 00:05:28,160
of the program execution so what i did

00:05:27,680 --> 00:05:31,039
was

00:05:28,160 --> 00:05:33,440
using the simple gcc and gdp commands

00:05:31,039 --> 00:05:36,479
which are open source again

00:05:33,440 --> 00:05:37,280
tools uh with the help of this uh i took

00:05:36,479 --> 00:05:40,240
a simple c

00:05:37,280 --> 00:05:40,720
uh code and made the executable file for

00:05:40,240 --> 00:05:43,600
it

00:05:40,720 --> 00:05:44,000
and then i could uh run it also on the

00:05:43,600 --> 00:05:47,120
uh

00:05:44,000 --> 00:05:49,039
the system or i could also see inside

00:05:47,120 --> 00:05:50,000
the program that what is being uh done

00:05:49,039 --> 00:05:53,120
over there

00:05:50,000 --> 00:05:56,400
so this gdp uh utility

00:05:53,120 --> 00:05:56,960
provides me uh the power to analyze the

00:05:56,400 --> 00:06:00,240
program

00:05:56,960 --> 00:06:03,280
at every step of execution so after i

00:06:00,240 --> 00:06:05,680
like after the program uh running is

00:06:03,280 --> 00:06:08,000
program is running i can set up the

00:06:05,680 --> 00:06:10,319
breakpoints at several lines of my code

00:06:08,000 --> 00:06:12,400
and then at that breakpoint i can see

00:06:10,319 --> 00:06:13,360
what all values are being stored in the

00:06:12,400 --> 00:06:15,039
registers

00:06:13,360 --> 00:06:17,759
so from here we can directly see the

00:06:15,039 --> 00:06:20,639
values stored in all of the resistors

00:06:17,759 --> 00:06:22,160
and there are several other commands for

00:06:20,639 --> 00:06:25,199
in the gdp utility like

00:06:22,160 --> 00:06:27,680
disassemble and all which can

00:06:25,199 --> 00:06:29,520
give a glimpse of the assembly level

00:06:27,680 --> 00:06:32,720
code as well

00:06:29,520 --> 00:06:34,080
um if we uh go on discussing about the

00:06:32,720 --> 00:06:36,720
ganotool chain uh

00:06:34,080 --> 00:06:38,000
there is a complete tool game for the

00:06:36,720 --> 00:06:40,639
power pc system

00:06:38,000 --> 00:06:42,800
and uh here in this command this le

00:06:40,639 --> 00:06:45,520
refers to the little endian type

00:06:42,800 --> 00:06:46,240
so now this system uh which power nine

00:06:45,520 --> 00:06:48,400
simulator

00:06:46,240 --> 00:06:50,080
boots up is a little endian in nature

00:06:48,400 --> 00:06:53,280
and uh this is the utility for

00:06:50,080 --> 00:06:57,039
uh the system so with these

00:06:53,280 --> 00:06:59,599
commands we can take up any c code and

00:06:57,039 --> 00:07:01,039
either build it or then get the assembly

00:06:59,599 --> 00:07:04,000
code dump

00:07:01,039 --> 00:07:04,720
and link uh the header file and the code

00:07:04,000 --> 00:07:07,360
and

00:07:04,720 --> 00:07:09,280
like convert it into any format it may

00:07:07,360 --> 00:07:11,599
be hexadecimal or uh

00:07:09,280 --> 00:07:13,120
binary whichever or decimal server is

00:07:11,599 --> 00:07:16,160
convenient for us to uh

00:07:13,120 --> 00:07:19,280
read and interpret and uh here is a

00:07:16,160 --> 00:07:21,520
simple uh it demonstrates

00:07:19,280 --> 00:07:22,400
the uh assembly level code written in

00:07:21,520 --> 00:07:24,720
power pc

00:07:22,400 --> 00:07:26,960
uh power based system in the open power

00:07:24,720 --> 00:07:27,840
ism so from here we can directly see

00:07:26,960 --> 00:07:31,199
that our water

00:07:27,840 --> 00:07:34,000
what all opcodes are being used and this

00:07:31,199 --> 00:07:36,319
can be like very helpful for students to

00:07:34,000 --> 00:07:38,800
understand what is actually being done

00:07:36,319 --> 00:07:40,319
uh moving on to the last step which is

00:07:38,800 --> 00:07:41,199
discussing about the chisel what

00:07:40,319 --> 00:07:42,960
software

00:07:41,199 --> 00:07:44,639
so first of all let me mention a bit

00:07:42,960 --> 00:07:47,199
about the asic design pro

00:07:44,639 --> 00:07:48,560
so um these are the main steps involved

00:07:47,199 --> 00:07:51,440
in the asic design flow

00:07:48,560 --> 00:07:52,400
and uh the chisel what micro uh chisel

00:07:51,440 --> 00:07:55,360
word software

00:07:52,400 --> 00:07:56,080
lies somewhere over here so it's a

00:07:55,360 --> 00:07:58,160
description

00:07:56,080 --> 00:07:59,280
or like ideal level description of the

00:07:58,160 --> 00:08:02,000
micro architecture

00:07:59,280 --> 00:08:03,599
which is designed over uh power isa in

00:08:02,000 --> 00:08:06,639
the chisel what language

00:08:03,599 --> 00:08:06,960
is a language sorry so what i had to do

00:08:06,639 --> 00:08:08,960
is

00:08:06,960 --> 00:08:11,440
uh get this code and convert it into

00:08:08,960 --> 00:08:12,080
verilog or systematic and then uh

00:08:11,440 --> 00:08:14,160
synthesize

00:08:12,080 --> 00:08:16,240
it with the help of open source two

00:08:14,160 --> 00:08:20,560
tools uh after synthesis

00:08:16,240 --> 00:08:22,879
uh we were like further supposed to uh

00:08:20,560 --> 00:08:24,840
to place and route the design and

00:08:22,879 --> 00:08:28,319
perform timing analysis

00:08:24,840 --> 00:08:29,120
so all these uh all these steps require

00:08:28,319 --> 00:08:31,520
cat tools

00:08:29,120 --> 00:08:32,640
and uh here let me discuss a bit about

00:08:31,520 --> 00:08:35,279
the cat tools

00:08:32,640 --> 00:08:37,039
so what i would like to put it up uh is

00:08:35,279 --> 00:08:39,279
that

00:08:37,039 --> 00:08:40,399
the cat tools are backbone of the vlsi

00:08:39,279 --> 00:08:42,560
industry and

00:08:40,399 --> 00:08:44,320
this is not any exaggeration because

00:08:42,560 --> 00:08:46,800
actually whatever work is

00:08:44,320 --> 00:08:48,640
being done over there like right from

00:08:46,800 --> 00:08:49,680
the designing process uh to the

00:08:48,640 --> 00:08:52,480
fabrication

00:08:49,680 --> 00:08:54,160
uh all most of these these are done with

00:08:52,480 --> 00:08:56,800
the help of cad tools because

00:08:54,160 --> 00:08:57,680
hardware is very costly and so it is not

00:08:56,800 --> 00:09:00,160
possible

00:08:57,680 --> 00:09:01,680
to make all the design directly on the

00:09:00,160 --> 00:09:02,560
hardware and then check whether it is

00:09:01,680 --> 00:09:04,640
working or not

00:09:02,560 --> 00:09:06,240
so we are not allowed to make mistakes

00:09:04,640 --> 00:09:08,880
over the hardware directly

00:09:06,240 --> 00:09:10,640
so in this in case uh most of the work

00:09:08,880 --> 00:09:12,399
is done on cad tools and maybe the

00:09:10,640 --> 00:09:14,720
front-end design process or the back-end

00:09:12,399 --> 00:09:18,240
design uh cad tools are everywhere

00:09:14,720 --> 00:09:20,800
so uh for any student who is uh

00:09:18,240 --> 00:09:22,880
for any aspirant of the vlsi industry it

00:09:20,800 --> 00:09:25,440
is very helpful if they can get a prior

00:09:22,880 --> 00:09:26,320
on experience with the these care tools

00:09:25,440 --> 00:09:28,480
and so uh

00:09:26,320 --> 00:09:29,839
apart from just focusing on completing

00:09:28,480 --> 00:09:32,080
the asic design flow

00:09:29,839 --> 00:09:34,480
we also try to make the flow a bit

00:09:32,080 --> 00:09:37,200
simpler for anyone to understand so that

00:09:34,480 --> 00:09:37,519
they can um either complete the whole

00:09:37,200 --> 00:09:40,800
thing

00:09:37,519 --> 00:09:42,880
in one step or they can break at

00:09:40,800 --> 00:09:44,080
several points and see whatever is going

00:09:42,880 --> 00:09:46,399
on inside d2

00:09:44,080 --> 00:09:48,320
uh what are the uh output files which

00:09:46,399 --> 00:09:51,600
are being generated and analyze them

00:09:48,320 --> 00:09:53,279
how to read those files so this also

00:09:51,600 --> 00:09:55,360
helps in

00:09:53,279 --> 00:09:56,399
getting a better designing sense so that

00:09:55,360 --> 00:09:58,800
when you understand

00:09:56,399 --> 00:10:00,480
uh what is the output corresponding to a

00:09:58,800 --> 00:10:02,399
particular input which you give

00:10:00,480 --> 00:10:04,079
you know how you can tackle that a

00:10:02,399 --> 00:10:04,800
problem like how can you change the

00:10:04,079 --> 00:10:08,160
input to get

00:10:04,800 --> 00:10:11,519
the desired results so uh

00:10:08,160 --> 00:10:13,920
this this is just a an illustration of

00:10:11,519 --> 00:10:15,600
how many characters are being used and

00:10:13,920 --> 00:10:19,760
this is not an exhaustive list

00:10:15,600 --> 00:10:22,399
of course so all these tools are

00:10:19,760 --> 00:10:24,399
useful to a design engineer or anyone in

00:10:22,399 --> 00:10:25,279
the vlsi industry at some point of time

00:10:24,399 --> 00:10:28,800
or other

00:10:25,279 --> 00:10:29,440
and uh it may be of interest for the

00:10:28,800 --> 00:10:32,640
students

00:10:29,440 --> 00:10:34,640
so but uh the main problem

00:10:32,640 --> 00:10:36,959
with these care tools is that most of

00:10:34,640 --> 00:10:39,519
them are properly or licensed

00:10:36,959 --> 00:10:40,399
and so for any student if they want to

00:10:39,519 --> 00:10:43,279
access it

00:10:40,399 --> 00:10:45,360
it is not that easy so that's where we

00:10:43,279 --> 00:10:47,760
come to the open source tools and

00:10:45,360 --> 00:10:48,640
here is what we used for the project it

00:10:47,760 --> 00:10:52,240
is a vsd

00:10:48,640 --> 00:10:54,800
center so it is a complete tool chain

00:10:52,240 --> 00:10:56,959
so it uh it includes several synthesis

00:10:54,800 --> 00:10:57,519
pnr and timing analysis tools and it

00:10:56,959 --> 00:11:00,240
provides

00:10:57,519 --> 00:11:01,120
a automated approach for the whole

00:11:00,240 --> 00:11:03,839
procedure

00:11:01,120 --> 00:11:05,839
and the interface is very simple so uh

00:11:03,839 --> 00:11:08,959
it is all documented over there

00:11:05,839 --> 00:11:09,600
and then anyone who wants to get started

00:11:08,959 --> 00:11:12,839
with it

00:11:09,600 --> 00:11:15,920
can just set it up on their

00:11:12,839 --> 00:11:18,480
pc by a simple uh gate cloning

00:11:15,920 --> 00:11:19,360
and then uh the interface which we they

00:11:18,480 --> 00:11:22,399
get is

00:11:19,360 --> 00:11:25,200
like this so the input to the uh

00:11:22,399 --> 00:11:26,079
this flow is rdl core or the synthesized

00:11:25,200 --> 00:11:28,480
necklace

00:11:26,079 --> 00:11:29,760
and they have to give the constraint

00:11:28,480 --> 00:11:31,519
file as input

00:11:29,760 --> 00:11:32,880
then we have to select the technology

00:11:31,519 --> 00:11:35,920
node and

00:11:32,880 --> 00:11:36,399
all this can be done by simple simple uh

00:11:35,920 --> 00:11:38,720
like

00:11:36,399 --> 00:11:40,480
file formats and um so like the

00:11:38,720 --> 00:11:43,600
constraint file can be given as

00:11:40,480 --> 00:11:47,040
this dot csv file um as the input to the

00:11:43,600 --> 00:11:48,959
system and uh then

00:11:47,040 --> 00:11:50,639
these are the tools which are being used

00:11:48,959 --> 00:11:53,519
uh in the in the tool chain

00:11:50,639 --> 00:11:54,079
so uses is being used for the synthesis

00:11:53,519 --> 00:11:57,120
uh

00:11:54,079 --> 00:12:00,160
fan out for uh high final synthesis and

00:11:57,120 --> 00:12:01,519
uh variable for placement uh q router

00:12:00,160 --> 00:12:04,720
for detail routing

00:12:01,519 --> 00:12:05,440
magic for the layout and nets and for

00:12:04,720 --> 00:12:08,079
netlist comp

00:12:05,440 --> 00:12:10,240
um comparison and open timer and open

00:12:08,079 --> 00:12:12,800
stm for a static timing analysis

00:12:10,240 --> 00:12:14,880
so all these tools are already there and

00:12:12,800 --> 00:12:17,920
they are aligned in a proper manner

00:12:14,880 --> 00:12:20,720
so that one can directly give the

00:12:17,920 --> 00:12:23,120
rdl file and the constraint file as

00:12:20,720 --> 00:12:26,000
input and get the final matrix

00:12:23,120 --> 00:12:27,200
about the timing and whether the design

00:12:26,000 --> 00:12:30,160
meets all the timings

00:12:27,200 --> 00:12:31,120
and the placement route and placement

00:12:30,160 --> 00:12:34,399
and route

00:12:31,120 --> 00:12:35,680
layout and even some matrices about the

00:12:34,399 --> 00:12:37,839
power analysis

00:12:35,680 --> 00:12:39,040
um so all these things they can directly

00:12:37,839 --> 00:12:41,360
get or they can

00:12:39,040 --> 00:12:42,079
stop at several steps and analyze what

00:12:41,360 --> 00:12:45,279
is uh

00:12:42,079 --> 00:12:47,680
being done like like what is how much

00:12:45,279 --> 00:12:48,720
work is already completed and what else

00:12:47,680 --> 00:12:50,800
is going to be done

00:12:48,720 --> 00:12:52,320
and what all changes can they make at

00:12:50,800 --> 00:12:56,240
that step so

00:12:52,320 --> 00:13:00,079
uh this is all about the project and um

00:12:56,240 --> 00:13:00,079
thank you we are now open for questions

00:13:01,040 --> 00:13:04,240
all right uh so we are open for

00:13:02,959 --> 00:13:07,360
questions uh

00:13:04,240 --> 00:13:08,800
and uh so so before we take questions uh

00:13:07,360 --> 00:13:10,720
now when day is the right time to

00:13:08,800 --> 00:13:11,839
introduce myself and the entire thing oh

00:13:10,720 --> 00:13:14,079
yeah

00:13:11,839 --> 00:13:15,839
okay all right so my name is kunal ghosh

00:13:14,079 --> 00:13:18,959
and what you just heard

00:13:15,839 --> 00:13:20,000
was from a student who is in a third

00:13:18,959 --> 00:13:22,560
year graduate

00:13:20,000 --> 00:13:23,519
and uh whatever work the the level of

00:13:22,560 --> 00:13:25,360
work that you saw

00:13:23,519 --> 00:13:27,600
i mean it might be a very you know

00:13:25,360 --> 00:13:30,000
simple task for any experienced

00:13:27,600 --> 00:13:31,920
or any anyone who is who has spent

00:13:30,000 --> 00:13:34,720
around 10 to 15 years in the industry

00:13:31,920 --> 00:13:35,120
but for her the task was uh take up

00:13:34,720 --> 00:13:37,200
these

00:13:35,120 --> 00:13:38,720
uh take up the isa take up the soft core

00:13:37,200 --> 00:13:41,120
chisel board and

00:13:38,720 --> 00:13:42,880
and try to analyze and characterize that

00:13:41,120 --> 00:13:44,800
in terms of power performance in area

00:13:42,880 --> 00:13:47,199
that was the task that was given to her

00:13:44,800 --> 00:13:48,079
and and she was given just eight weeks

00:13:47,199 --> 00:13:50,160
and eight weeks

00:13:48,079 --> 00:13:51,760
she had to bring up the isa simulator

00:13:50,160 --> 00:13:52,320
she had to bring up the open source tool

00:13:51,760 --> 00:13:54,560
chain

00:13:52,320 --> 00:13:56,079
and then finally analyze and do the pp

00:13:54,560 --> 00:13:58,000
analysis of the entire thing

00:13:56,079 --> 00:14:00,399
so though the entire work looks to be

00:13:58,000 --> 00:14:03,040
you know she captured it very well

00:14:00,399 --> 00:14:04,000
in a span of 11 minutes but it took uh

00:14:03,040 --> 00:14:06,800
it took about

00:14:04,000 --> 00:14:07,519
eight weeks and i would say uh about you

00:14:06,800 --> 00:14:10,079
know

00:14:07,519 --> 00:14:12,320
she says she used to spend around i

00:14:10,079 --> 00:14:14,320
think 14 to 16 hours per day just

00:14:12,320 --> 00:14:15,760
you know analyzing and making sure

00:14:14,320 --> 00:14:16,000
things are getting connected in the

00:14:15,760 --> 00:14:19,279
right

00:14:16,000 --> 00:14:19,920
way and at the end of the week she was

00:14:19,279 --> 00:14:21,519
able to

00:14:19,920 --> 00:14:23,360
come up with an automated script which

00:14:21,519 --> 00:14:24,880
will it will just like a switch button

00:14:23,360 --> 00:14:27,920
and you install everything uh

00:14:24,880 --> 00:14:31,120
on the flow and at the time when

00:14:27,920 --> 00:14:31,760
open power was released the the flow for

00:14:31,120 --> 00:14:33,120
the

00:14:31,760 --> 00:14:35,680
um for getting the right tools at the

00:14:33,120 --> 00:14:37,279
right places those were uh somewhat uh

00:14:35,680 --> 00:14:38,800
broken and that is what she had fixed

00:14:37,279 --> 00:14:39,360
and she discussed with a lot of people

00:14:38,800 --> 00:14:42,000
in the

00:14:39,360 --> 00:14:43,120
within the ibm group so uh now that that

00:14:42,000 --> 00:14:45,920
was the entire

00:14:43,120 --> 00:14:47,120
entire journey of of her while while

00:14:45,920 --> 00:14:49,680
making the project

00:14:47,120 --> 00:14:50,959
so um yeah if you have any uh you know

00:14:49,680 --> 00:14:52,800
questions you can you can

00:14:50,959 --> 00:14:54,880
bring it up right now and the reason we

00:14:52,800 --> 00:14:55,600
wanted the student uh to present in the

00:14:54,880 --> 00:14:57,680
uh

00:14:55,600 --> 00:14:59,120
in this particular conference is because

00:14:57,680 --> 00:15:00,959
uh historically

00:14:59,120 --> 00:15:03,040
it has been proven that if we want

00:15:00,959 --> 00:15:04,240
something uh to be very popular in the

00:15:03,040 --> 00:15:06,000
open source domain

00:15:04,240 --> 00:15:07,920
uh it is that it should be built by the

00:15:06,000 --> 00:15:09,839
community rather than the experts

00:15:07,920 --> 00:15:11,519
that's why we have built uh we've built

00:15:09,839 --> 00:15:13,600
an entire community of about

00:15:11,519 --> 00:15:14,880
60 000 students currently so we have

00:15:13,600 --> 00:15:16,959
been there in the open source

00:15:14,880 --> 00:15:18,160
uh business for last uh for the last

00:15:16,959 --> 00:15:19,839
nine years

00:15:18,160 --> 00:15:21,279
and we have built an entire community of

00:15:19,839 --> 00:15:24,560
of sixty thousand student

00:15:21,279 --> 00:15:26,880
out of which uh she was the she was

00:15:24,560 --> 00:15:29,199
from one of the first batches who

00:15:26,880 --> 00:15:31,600
started looking into the open power isa

00:15:29,199 --> 00:15:32,959
so if you look into the red hat model if

00:15:31,600 --> 00:15:35,279
you look into the any a

00:15:32,959 --> 00:15:36,639
historical model about open source it

00:15:35,279 --> 00:15:38,720
has been always

00:15:36,639 --> 00:15:40,079
proved that it has to be done through

00:15:38,720 --> 00:15:42,720
community and and

00:15:40,079 --> 00:15:44,800
not by the experts and it's a big not

00:15:42,720 --> 00:15:46,320
and it is coming through

00:15:44,800 --> 00:15:48,399
through experience and that's why we

00:15:46,320 --> 00:15:49,279
wanted a student to to present her

00:15:48,399 --> 00:15:51,759
experience

00:15:49,279 --> 00:15:53,199
in the field of open source uh yeah so

00:15:51,759 --> 00:15:55,120
with that said uh

00:15:53,199 --> 00:15:56,639
i'm i'm open for questions and even if

00:15:55,120 --> 00:15:58,880
you have any queries you can

00:15:56,639 --> 00:16:01,519
either type it in the q a box or or put

00:15:58,880 --> 00:16:03,839
it in the chat box

00:16:01,519 --> 00:16:05,839
and i'm open to want to answer them so

00:16:03,839 --> 00:16:09,120
we have we have ashley kamani we have

00:16:05,839 --> 00:16:10,880
mr tj we have mandy we have uh kazuki

00:16:09,120 --> 00:16:12,800
harris carl boris

00:16:10,880 --> 00:16:13,920
andrea anyone anyone if you have any

00:16:12,800 --> 00:16:15,839
queries uh

00:16:13,920 --> 00:16:18,240
just bring it up i think this is a good

00:16:15,839 --> 00:16:19,440
time to talk about open source and the

00:16:18,240 --> 00:16:21,759
entire

00:16:19,440 --> 00:16:24,320
and then to enter infra around around

00:16:21,759 --> 00:16:24,320
open source

00:16:25,600 --> 00:16:29,120
and in case uh if you want to ask any

00:16:28,560 --> 00:16:31,040
questions

00:16:29,120 --> 00:16:33,440
uh post the webinar you can just uh you

00:16:31,040 --> 00:16:35,120
know email me drop me an email

00:16:33,440 --> 00:16:36,720
and i should be able to answer all of

00:16:35,120 --> 00:16:39,600
them

00:16:36,720 --> 00:16:39,600
over email as well

00:16:44,399 --> 00:16:48,320
okay so if there are no questions uh

00:16:46,320 --> 00:16:51,040
that should be okay i mean

00:16:48,320 --> 00:16:52,320
we will stay in touch and uh you can you

00:16:51,040 --> 00:16:53,759
can just drop me an email if you have

00:16:52,320 --> 00:16:55,920
any questions later and

00:16:53,759 --> 00:16:57,120
we can explain you the entire uh process

00:16:55,920 --> 00:17:00,480
that went behind

00:16:57,120 --> 00:17:00,480
presenting this this paper

00:17:01,920 --> 00:17:07,679
okay there is one ah keep the color okay

00:17:04,640 --> 00:17:07,679
that's from wendy okay

00:17:14,160 --> 00:17:20,000
okay that should be uh that should be

00:17:18,559 --> 00:17:22,000
all from my side uh

00:17:20,000 --> 00:17:23,360
wendy uh do you want me to stay back or

00:17:22,000 --> 00:17:25,360
uh

00:17:23,360 --> 00:17:27,280
no if ever if no one has any questions

00:17:25,360 --> 00:17:27,919
also feel free to use the raise your

00:17:27,280 --> 00:17:30,880
hand

00:17:27,919 --> 00:17:32,320
function if you'd like uh and he can

00:17:30,880 --> 00:17:34,799
take your question live

00:17:32,320 --> 00:17:35,600
but if no one has any questions then we

00:17:34,799 --> 00:17:40,080
can

00:17:35,600 --> 00:17:44,000
wrap up oh looks like we might have one

00:17:40,080 --> 00:17:46,960
so there's a slack link uh is there a

00:17:44,000 --> 00:17:48,000
is there some slack link for for open

00:17:46,960 --> 00:17:50,160
power because

00:17:48,000 --> 00:17:52,240
generally for open source we have a we

00:17:50,160 --> 00:17:55,039
all have separate slack links but for uh

00:17:52,240 --> 00:17:56,559
for this particular thing yes i just put

00:17:55,039 --> 00:18:02,240
it in the chat it's

00:17:56,559 --> 00:18:05,120
summit dash one dash isa

00:18:02,240 --> 00:18:08,720
uh did you put it in the chat box i'm

00:18:05,120 --> 00:18:08,720

YouTube URL: https://www.youtube.com/watch?v=5lglQFuoSts


