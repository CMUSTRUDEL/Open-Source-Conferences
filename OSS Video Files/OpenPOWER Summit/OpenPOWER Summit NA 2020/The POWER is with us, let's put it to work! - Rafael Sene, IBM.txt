Title: The POWER is with us, let's put it to work! - Rafael Sene, IBM
Publication date: 2020-09-21
Playlist: OpenPOWER Summit NA 2020
Description: 
	The POWER is with us, let's put it to work! - Rafael Sene, IBM

Speakers: Rafael Sene

We have the POWER, let's put it to work and expand its reach by creating a healthy ecosystem to empower developers: the fuel that keeps the ecosystem moving and evolving. Developers needs access to resources that can empower them to get the most of their applications and amaze their customers. As the architecture that is the core of the #1 and #2 fastest supercomputers in the world, POWER is where they need to be, but how developers can leverage it as part of their daily activities? This presentation will demonstrate how everyone can get free and paid access to the POWER architecture and start building, porting and tuning their applications right away. It will show how to build on POWER using GitHub, Travis CI, and GitLab, create multi-arch container images and how to deploy a build pipeline using OpenShift on Power.
Captions: 
	00:00:00,560 --> 00:00:06,240
okay so let's get

00:00:03,120 --> 00:00:08,880
started with this

00:00:06,240 --> 00:00:10,639
presentation on the open power sun so

00:00:08,880 --> 00:00:14,240
this is my third

00:00:10,639 --> 00:00:17,520
time joining the open power sum and

00:00:14,240 --> 00:00:20,400
actually covering some of the

00:00:17,520 --> 00:00:21,119
uh semi topics which is something that

00:00:20,400 --> 00:00:24,720
we are

00:00:21,119 --> 00:00:27,199
consistently trying to improve as we

00:00:24,720 --> 00:00:28,320
as we move forward with power as we make

00:00:27,199 --> 00:00:31,760
power

00:00:28,320 --> 00:00:34,960
available easily available today and

00:00:31,760 --> 00:00:37,520
today's uh my goal is to again

00:00:34,960 --> 00:00:38,079
uh give you all an update on what we are

00:00:37,520 --> 00:00:41,120
doing

00:00:38,079 --> 00:00:44,480
to ensure that everyone

00:00:41,120 --> 00:00:48,800
uh can build on power easily or better

00:00:44,480 --> 00:00:52,320
everyone can get access to power easily

00:00:48,800 --> 00:00:52,320
and moving ahead

00:00:52,559 --> 00:00:56,239
a little bit a little bit about me so my

00:00:55,280 --> 00:00:59,760
name is rafael

00:00:56,239 --> 00:01:02,879
i work for ibm out from brazil

00:00:59,760 --> 00:01:04,080
and essentially at ibm i have been

00:01:02,879 --> 00:01:08,000
working with power

00:01:04,080 --> 00:01:10,560
since i joined it uh about 80 years ago

00:01:08,000 --> 00:01:11,119
i started working on most of uh i would

00:01:10,560 --> 00:01:14,880
say

00:01:11,119 --> 00:01:18,000
light level low-level stuff like

00:01:14,880 --> 00:01:21,759
developing tools for developers

00:01:18,000 --> 00:01:26,799
for other developers and today i

00:01:21,759 --> 00:01:29,360
work on the cloud team where we we test

00:01:26,799 --> 00:01:31,520
and validate and help developing the

00:01:29,360 --> 00:01:35,040
open shift and power

00:01:31,520 --> 00:01:38,000
and also containers and i have another

00:01:35,040 --> 00:01:38,000
attributions like

00:01:38,840 --> 00:01:43,600
uh like travis on power

00:01:41,280 --> 00:01:45,119
or ensuring that we have tribes on power

00:01:43,600 --> 00:01:47,759
running at least

00:01:45,119 --> 00:01:49,920
i'll say at ibm and then of course

00:01:47,759 --> 00:01:53,200
helping the community build on power

00:01:49,920 --> 00:01:56,640
so this is a little bit of my background

00:01:53,200 --> 00:01:59,439
and yeah let's get started with

00:01:56,640 --> 00:01:59,439
the real

00:01:59,840 --> 00:02:05,680
uh real topics here and how we can make

00:02:03,439 --> 00:02:07,520
uh the act the journal the journey to

00:02:05,680 --> 00:02:08,959
power easy and what we are doing and

00:02:07,520 --> 00:02:11,760
what we are providing

00:02:08,959 --> 00:02:12,800
today so at the end of this presentation

00:02:11,760 --> 00:02:16,160
you can

00:02:12,800 --> 00:02:20,000
uh move move uh say go ahead

00:02:16,160 --> 00:02:23,040
and get started uh playing with your

00:02:20,000 --> 00:02:26,959
open source project right away without

00:02:23,040 --> 00:02:31,120
any any blocker or any

00:02:26,959 --> 00:02:34,319
issue okay and and why this is important

00:02:31,120 --> 00:02:36,319
why should we provide easy access to

00:02:34,319 --> 00:02:37,920
power why should people or should

00:02:36,319 --> 00:02:40,319
developers out there

00:02:37,920 --> 00:02:41,760
uh be able to build on power or have

00:02:40,319 --> 00:02:45,040
access access to power

00:02:41,760 --> 00:02:47,920
to ensure they can do their job

00:02:45,040 --> 00:02:48,879
and of course ensure that uh they cover

00:02:47,920 --> 00:02:52,239
and they play

00:02:48,879 --> 00:02:55,120
with the uh the necessary or if the

00:02:52,239 --> 00:02:55,680
most uh with the computer architecture

00:02:55,120 --> 00:02:59,040
that

00:02:55,680 --> 00:03:02,560
can fit their needs we are

00:02:59,040 --> 00:03:05,840
we so this is not new but we know that

00:03:02,560 --> 00:03:07,519
the world is kind of the amount of open

00:03:05,840 --> 00:03:10,560
source projects that we have seen

00:03:07,519 --> 00:03:14,159
uh are increasing constantly so uh

00:03:10,560 --> 00:03:14,720
and as as we move towards some more

00:03:14,159 --> 00:03:17,360
secure

00:03:14,720 --> 00:03:19,519
and open platforms that that reflect of

00:03:17,360 --> 00:03:22,560
course that reflects in the software

00:03:19,519 --> 00:03:26,319
and we need to ensure that

00:03:22,560 --> 00:03:29,760
uh those new open source projects or

00:03:26,319 --> 00:03:32,480
even the closet source uh can have

00:03:29,760 --> 00:03:33,280
access to the resource they need so if

00:03:32,480 --> 00:03:36,560
we look

00:03:33,280 --> 00:03:39,280
uh so and to keep the to keep the pace

00:03:36,560 --> 00:03:41,280
and i would say ensure that at the same

00:03:39,280 --> 00:03:43,840
time someone

00:03:41,280 --> 00:03:44,640
creates a brand new software uh to

00:03:43,840 --> 00:03:47,519
ensure that

00:03:44,640 --> 00:03:49,120
they can also add support for multiple

00:03:47,519 --> 00:03:51,599
architectures we should do

00:03:49,120 --> 00:03:52,560
they have the research they need so

00:03:51,599 --> 00:03:55,680
let's take a look

00:03:52,560 --> 00:03:58,720
at this uh

00:03:55,680 --> 00:04:01,920
cloud native foundation example here uh

00:03:58,720 --> 00:04:05,439
this is a kind of i'd say uh

00:04:01,920 --> 00:04:07,439
one of the young foundations that are

00:04:05,439 --> 00:04:08,319
part of the umbrella of the linux

00:04:07,439 --> 00:04:12,080
foundation

00:04:08,319 --> 00:04:13,200
uh somehow and it's interesting to see

00:04:12,080 --> 00:04:15,439
that

00:04:13,200 --> 00:04:16,720
not every day but if you look at this

00:04:15,439 --> 00:04:19,440
chart

00:04:16,720 --> 00:04:19,919
uh it's changed constantly which means

00:04:19,440 --> 00:04:23,520
that

00:04:19,919 --> 00:04:26,800
every uh frequently we have seen

00:04:23,520 --> 00:04:27,280
we have there is some new open source

00:04:26,800 --> 00:04:30,479
project

00:04:27,280 --> 00:04:34,240
that get graduated and become

00:04:30,479 --> 00:04:38,160
very highly used we see new projects

00:04:34,240 --> 00:04:41,199
that emerge from out of nowhere and it's

00:04:38,160 --> 00:04:43,680
i'll say in few months or

00:04:41,199 --> 00:04:44,400
they would say uh developers start to

00:04:43,680 --> 00:04:47,120
looking at

00:04:44,400 --> 00:04:48,320
those those new softwares and using that

00:04:47,120 --> 00:04:51,759
as part of their

00:04:48,320 --> 00:04:54,960
uh daily activities and

00:04:51,759 --> 00:04:54,960
you can imagine that

00:04:55,199 --> 00:04:58,400
if they do not talk as we are talking

00:04:57,360 --> 00:05:01,120
about power

00:04:58,400 --> 00:05:01,759
if they don't if they do not considering

00:05:01,120 --> 00:05:04,560
uh

00:05:01,759 --> 00:05:07,680
another platform uh instead of just

00:05:04,560 --> 00:05:11,039
playing with their x8664

00:05:07,680 --> 00:05:14,400
uh notebook which is of course

00:05:11,039 --> 00:05:17,280
uh the easiest way to get started we are

00:05:14,400 --> 00:05:19,120
always going to be behind them so we

00:05:17,280 --> 00:05:22,160
need to ensure that

00:05:19,120 --> 00:05:23,520
those and so here we have just a sample

00:05:22,160 --> 00:05:25,919
from the cloud

00:05:23,520 --> 00:05:27,759
from the cloud native approach but

00:05:25,919 --> 00:05:28,639
imagine all the other software that are

00:05:27,759 --> 00:05:32,960
developed

00:05:28,639 --> 00:05:35,680
and the amount of uh

00:05:32,960 --> 00:05:36,479
changes or the amount the significant

00:05:35,680 --> 00:05:39,520
effort that

00:05:36,479 --> 00:05:42,800
we from power have in our hands

00:05:39,520 --> 00:05:45,199
to ensure that when something is created

00:05:42,800 --> 00:05:46,160
or something is already available but to

00:05:45,199 --> 00:05:48,880
ensure that

00:05:46,160 --> 00:05:50,800
any new any technology can run on power

00:05:48,880 --> 00:05:53,840
easily so

00:05:50,800 --> 00:05:56,400
this is hard we do not have if uh say

00:05:53,840 --> 00:05:57,120
a lot of people to handle that uh we

00:05:56,400 --> 00:06:00,880
know that

00:05:57,120 --> 00:06:04,960
uh the resources are limited so

00:06:00,880 --> 00:06:07,600
we need to ensure that at least

00:06:04,960 --> 00:06:09,199
uh for those playing or willing to play

00:06:07,600 --> 00:06:11,600
with a different architecture and

00:06:09,199 --> 00:06:12,960
willing to move to power to ensure they

00:06:11,600 --> 00:06:14,880
can do

00:06:12,960 --> 00:06:16,160
they can do their job and they can have

00:06:14,880 --> 00:06:20,000
access to them

00:06:16,160 --> 00:06:20,800
especially because when you see that the

00:06:20,000 --> 00:06:23,520
adoption

00:06:20,800 --> 00:06:25,199
of open source comes from developers

00:06:23,520 --> 00:06:27,520
organically using it

00:06:25,199 --> 00:06:28,880
for instance if you're a developer and

00:06:27,520 --> 00:06:31,280
you are let's say

00:06:28,880 --> 00:06:32,319
at your home playing some some new cool

00:06:31,280 --> 00:06:34,720
technology

00:06:32,319 --> 00:06:36,639
uh and you see value on that uh

00:06:34,720 --> 00:06:40,000
automatically you are going to

00:06:36,639 --> 00:06:41,840
bring that to your uh daily activities

00:06:40,000 --> 00:06:44,000
and pro probably you are going to

00:06:41,840 --> 00:06:46,400
influence your co-workers on

00:06:44,000 --> 00:06:48,000
how cool that technology is and how

00:06:46,400 --> 00:06:51,520
easily that technology helped

00:06:48,000 --> 00:06:54,720
you to solve a given problem and

00:06:51,520 --> 00:06:58,479
this is what happens and let's say

00:06:54,720 --> 00:07:02,560
if if you work in a company with

00:06:58,479 --> 00:07:05,919
uh which offers power access and

00:07:02,560 --> 00:07:08,960
you try you tried your a new

00:07:05,919 --> 00:07:10,639
uh cool technology on x86 and that

00:07:08,960 --> 00:07:13,199
didn't help you out

00:07:10,639 --> 00:07:15,599
or something if in that new technology

00:07:13,199 --> 00:07:16,319
helped you to solve a very complicated

00:07:15,599 --> 00:07:19,120
problem

00:07:16,319 --> 00:07:20,400
and you try to move to an environment

00:07:19,120 --> 00:07:22,639
and you can price environment where you

00:07:20,400 --> 00:07:24,400
have power and that does not work so

00:07:22,639 --> 00:07:26,639
you feel kind of frustrated about that

00:07:24,400 --> 00:07:30,160
so we need to reduce these

00:07:26,639 --> 00:07:33,360
barriers we need to ensure things work

00:07:30,160 --> 00:07:34,880
uh easily on power and we need to ensure

00:07:33,360 --> 00:07:37,440
that the developer that plays with

00:07:34,880 --> 00:07:40,080
technology on x86 can also liberate that

00:07:37,440 --> 00:07:42,000
technology on power

00:07:40,080 --> 00:07:43,840
i'll tell that to the word the move is

00:07:42,000 --> 00:07:45,360
muchard and why they need

00:07:43,840 --> 00:07:46,960
they need this capability to leverage

00:07:45,360 --> 00:07:49,599
multiple architectures because

00:07:46,960 --> 00:07:50,319
a given solution for a big problem can

00:07:49,599 --> 00:07:52,400
involve

00:07:50,319 --> 00:07:54,240
two or three different architectures if

00:07:52,400 --> 00:07:58,000
you know how to combine it then

00:07:54,240 --> 00:07:58,639
if if you need a a very uh a platform to

00:07:58,000 --> 00:08:01,039
handle

00:07:58,639 --> 00:08:02,639
very specific workloads and data

00:08:01,039 --> 00:08:04,319
intensive workloads maybe you want to

00:08:02,639 --> 00:08:07,360
use power

00:08:04,319 --> 00:08:10,479
but if you have a a simple service

00:08:07,360 --> 00:08:12,879
that just needs to be executed for

00:08:10,479 --> 00:08:14,800
uh i'll say a very low priority job

00:08:12,879 --> 00:08:16,639
maybe you would like to use x86 so you

00:08:14,800 --> 00:08:18,000
can combine architectures you need to

00:08:16,639 --> 00:08:20,319
learn how to play with different

00:08:18,000 --> 00:08:23,280
architectures and

00:08:20,319 --> 00:08:24,400
i'll say this is a must-have skill

00:08:23,280 --> 00:08:27,840
nowadays

00:08:24,400 --> 00:08:31,280
with so we have power we have iron

00:08:27,840 --> 00:08:34,399
we have x8664 we have a

00:08:31,280 --> 00:08:35,839
z the mainframe so developers should be

00:08:34,399 --> 00:08:40,000
able to play and navigate

00:08:35,839 --> 00:08:43,279
this uh the set of architectures easily

00:08:40,000 --> 00:08:46,480
to ensure they can solve the problem uh

00:08:43,279 --> 00:08:49,120
using the best approach so

00:08:46,480 --> 00:08:51,680
the developer should be uh or the

00:08:49,120 --> 00:08:55,600
development should be much architecture

00:08:51,680 --> 00:08:57,760
and uh starting now i'll tell a little

00:08:55,600 --> 00:09:01,200
bit of a history of what we have done

00:08:57,760 --> 00:09:04,800
since since since i joined ibm

00:09:01,200 --> 00:09:06,720
on getting power easily available for

00:09:04,800 --> 00:09:09,200
others and

00:09:06,720 --> 00:09:12,560
and to ensure that the migration portion

00:09:09,200 --> 00:09:15,120
for power can be done easily so

00:09:12,560 --> 00:09:15,680
the chapter one of the chapter one of

00:09:15,120 --> 00:09:19,519
this

00:09:15,680 --> 00:09:22,959
talk is going to cover the power sdk

00:09:19,519 --> 00:09:26,240
back uh i'll say eight years ago

00:09:22,959 --> 00:09:28,880
we were working on on a

00:09:26,240 --> 00:09:31,200
integrated development environment where

00:09:28,880 --> 00:09:34,560
uh our expectations

00:09:31,200 --> 00:09:37,040
was so our focus was like so okay

00:09:34,560 --> 00:09:37,839
power is not easily available at back

00:09:37,040 --> 00:09:39,360
there

00:09:37,839 --> 00:09:41,760
and we need to ensure that the

00:09:39,360 --> 00:09:45,200
developers can run

00:09:41,760 --> 00:09:49,680
can run can compile can the bug can uh

00:09:45,200 --> 00:09:52,080
identify hotspots or look for issues

00:09:49,680 --> 00:09:52,880
in a code in a source code that targets

00:09:52,080 --> 00:09:55,040
power but

00:09:52,880 --> 00:09:55,920
they we need to ensure they can do that

00:09:55,040 --> 00:09:58,959
on their

00:09:55,920 --> 00:10:02,480
x86 64 machine so

00:09:58,959 --> 00:10:03,040
and then uh and the work we did with the

00:10:02,480 --> 00:10:06,480
sdk

00:10:03,040 --> 00:10:09,839
was much or say focus on that one

00:10:06,480 --> 00:10:12,079
we created a bunch of tools like

00:10:09,839 --> 00:10:14,320
the migration divisor for instance that

00:10:12,079 --> 00:10:16,399
could give you some hints

00:10:14,320 --> 00:10:19,279
and tips about migration source code

00:10:16,399 --> 00:10:20,640
migration when you are coming from x86

00:10:19,279 --> 00:10:21,760
and you want to move your application to

00:10:20,640 --> 00:10:24,720
power

00:10:21,760 --> 00:10:26,800
and also migrate device advisor also

00:10:24,720 --> 00:10:30,079
provides some quick fixes so

00:10:26,800 --> 00:10:32,720
you really okay you

00:10:30,079 --> 00:10:33,519
you should have an idea about what we

00:10:32,720 --> 00:10:36,000
are doing but

00:10:33,519 --> 00:10:37,279
the the ide or the integrated

00:10:36,000 --> 00:10:38,160
development environment could help you

00:10:37,279 --> 00:10:40,560
to move forward

00:10:38,160 --> 00:10:40,560
easily

00:10:41,200 --> 00:10:46,800
and of course as power was not available

00:10:44,240 --> 00:10:48,480
as part of the seca we integrated this

00:10:46,800 --> 00:10:51,279
ibm power simulator

00:10:48,480 --> 00:10:53,760
back there it was ibm power eight and

00:10:51,279 --> 00:10:55,200
then we later we added power nine

00:10:53,760 --> 00:10:56,800
uh i believe that's going to be a new

00:10:55,200 --> 00:10:58,880
version of the uh

00:10:56,800 --> 00:11:01,120
the functional simulator available soon

00:10:58,880 --> 00:11:03,600
for for general

00:11:01,120 --> 00:11:05,120
uh external available uh covering power

00:11:03,600 --> 00:11:06,480
10 so anyone will be able to play

00:11:05,120 --> 00:11:10,079
forward 10

00:11:06,480 --> 00:11:13,519
using the the power simulator okay

00:11:10,079 --> 00:11:14,320
so uh yeah so at some point we decided

00:11:13,519 --> 00:11:15,760
to move

00:11:14,320 --> 00:11:18,000
from the integrated development

00:11:15,760 --> 00:11:20,640
environment and create the

00:11:18,000 --> 00:11:21,279
command line tool so the two instead of

00:11:20,640 --> 00:11:23,760
providing

00:11:21,279 --> 00:11:24,399
an integrated tool we we started

00:11:23,760 --> 00:11:26,720
providing

00:11:24,399 --> 00:11:27,600
tools that could be integrated in a ci

00:11:26,720 --> 00:11:30,800
environment

00:11:27,600 --> 00:11:34,720
so the the cli are open source so

00:11:30,800 --> 00:11:37,200
uh anyone is welcome to try that out

00:11:34,720 --> 00:11:38,240
but yes the sdk was not enough we

00:11:37,200 --> 00:11:40,720
understand that

00:11:38,240 --> 00:11:41,600
uh back there we had a big a big

00:11:40,720 --> 00:11:44,399
software

00:11:41,600 --> 00:11:45,680
which took uh which wasn't easy to

00:11:44,399 --> 00:11:48,000
manipulate

00:11:45,680 --> 00:11:50,639
uh that could lead to a lot of errors

00:11:48,000 --> 00:11:51,839
and frustration from the developer

00:11:50,639 --> 00:11:53,839
when the developer don't people would

00:11:51,839 --> 00:11:57,360
say so

00:11:53,839 --> 00:11:59,760
uh back in and then this leads to our

00:11:57,360 --> 00:12:01,040
uh chapter two which is free access to

00:11:59,760 --> 00:12:04,160
power

00:12:01,040 --> 00:12:07,360
uh developers could do

00:12:04,160 --> 00:12:08,000
uh cross compiling and debugging and

00:12:07,360 --> 00:12:12,160
testing

00:12:08,000 --> 00:12:15,200
some somehow uh on their xa664 machine

00:12:12,160 --> 00:12:18,959
but uh this is not this it was not the

00:12:15,200 --> 00:12:22,720
same thing like if running a real power

00:12:18,959 --> 00:12:27,200
a real power resource so what do we

00:12:22,720 --> 00:12:30,880
start doing back in 2014

00:12:27,200 --> 00:12:32,480
was considering free providing free

00:12:30,880 --> 00:12:36,160
access to power

00:12:32,480 --> 00:12:38,880
for developers students and

00:12:36,160 --> 00:12:39,680
whoever was interested on starting

00:12:38,880 --> 00:12:43,200
playing with

00:12:39,680 --> 00:12:46,000
this new not new but with this platform

00:12:43,200 --> 00:12:46,560
so basically we are considering creating

00:12:46,000 --> 00:12:49,600
a

00:12:46,560 --> 00:12:52,800
flowery field where developers could get

00:12:49,600 --> 00:12:55,360
the resource they need if you are asking

00:12:52,800 --> 00:12:56,399
uh why this picture here but just to

00:12:55,360 --> 00:12:58,880
give you some

00:12:56,399 --> 00:13:00,959
idea that our b here is our developer

00:12:58,880 --> 00:13:02,480
and the flowers are the resource

00:13:00,959 --> 00:13:04,320
and this will be important because there

00:13:02,480 --> 00:13:05,040
are some reference for reference for

00:13:04,320 --> 00:13:08,160
this

00:13:05,040 --> 00:13:10,320
in the rest of this presentation uh back

00:13:08,160 --> 00:13:13,279
in 2014 we started a

00:13:10,320 --> 00:13:15,120
project in brazil called minicloud which

00:13:13,279 --> 00:13:16,480
is a partnership with the one of the

00:13:15,120 --> 00:13:20,240
biggest universities

00:13:16,480 --> 00:13:23,680
public universe in brazil uh

00:13:20,240 --> 00:13:24,480
at minicloud we provided free access to

00:13:23,680 --> 00:13:28,320
power

00:13:24,480 --> 00:13:31,440
and when we started offering

00:13:28,320 --> 00:13:34,959
initially we received 10

00:13:31,440 --> 00:13:38,560
15 requests but today we have uh we are

00:13:34,959 --> 00:13:42,079
almost near uh 2000 requests

00:13:38,560 --> 00:13:44,959
and these are requests from our

00:13:42,079 --> 00:13:45,519
all over the world so we have people

00:13:44,959 --> 00:13:47,199
from

00:13:45,519 --> 00:13:48,959
different countries using that for

00:13:47,199 --> 00:13:50,160
different proposals for different

00:13:48,959 --> 00:13:52,880
communities

00:13:50,160 --> 00:13:53,760
as also as part of the the

00:13:52,880 --> 00:13:55,760
infrastructure

00:13:53,760 --> 00:13:59,199
where we host our mini cloud you also

00:13:55,760 --> 00:14:01,279
have dedicated machines for

00:13:59,199 --> 00:14:02,720
for a giving community like we have a

00:14:01,279 --> 00:14:05,279
dedicated power machine

00:14:02,720 --> 00:14:06,720
for the alpine for the linux opera

00:14:05,279 --> 00:14:08,880
community so they can do their

00:14:06,720 --> 00:14:10,800
goods on power we have a dedicated

00:14:08,880 --> 00:14:13,360
machine is for debian so they can do

00:14:10,800 --> 00:14:15,920
their testing validation and power

00:14:13,360 --> 00:14:16,720
and we have a bunch of vms running there

00:14:15,920 --> 00:14:19,360
and

00:14:16,720 --> 00:14:21,040
people that request access to this mini

00:14:19,360 --> 00:14:24,079
cloud resource

00:14:21,040 --> 00:14:28,399
usually they do one one of these

00:14:24,079 --> 00:14:28,399
kind of activities like they

00:14:28,480 --> 00:14:31,920
they request access because they want to

00:14:30,399 --> 00:14:34,639
deploy or

00:14:31,920 --> 00:14:36,800
they want to create software in a much

00:14:34,639 --> 00:14:38,639
platform or much attacker software so

00:14:36,800 --> 00:14:41,120
they do not have power available so they

00:14:38,639 --> 00:14:43,760
want free instead of

00:14:41,120 --> 00:14:44,320
buying a power machine in the beginning

00:14:43,760 --> 00:14:46,000
of the

00:14:44,320 --> 00:14:48,800
development so they want to try that out

00:14:46,000 --> 00:14:50,560
so they request access for that

00:14:48,800 --> 00:14:52,320
they want to enable some technology for

00:14:50,560 --> 00:14:54,399
power they want to pass

00:14:52,320 --> 00:14:55,920
on power they just or they want to

00:14:54,399 --> 00:14:56,800
develop on power so they want to

00:14:55,920 --> 00:14:59,920
integrate

00:14:56,800 --> 00:15:02,160
power as part of their ci infrastructure

00:14:59,920 --> 00:15:03,360
or they just want to study linux we

00:15:02,160 --> 00:15:06,880
receive a lot of

00:15:03,360 --> 00:15:09,440
as we are part of academic uh

00:15:06,880 --> 00:15:11,760
kind of academic initiative in brazil

00:15:09,440 --> 00:15:14,240
and also as part of and unicam is part

00:15:11,760 --> 00:15:16,240
of the open power as an academic member

00:15:14,240 --> 00:15:17,360
uh we receive a lot a lot of requests

00:15:16,240 --> 00:15:19,839
from students who are

00:15:17,360 --> 00:15:21,279
just beginning their journey and they

00:15:19,839 --> 00:15:23,279
asking for access to

00:15:21,279 --> 00:15:24,880
to learn about how to use linux for

00:15:23,279 --> 00:15:26,880
instance and they

00:15:24,880 --> 00:15:29,279
the very first contact with linux is

00:15:26,880 --> 00:15:33,040
linux money on power

00:15:29,279 --> 00:15:33,360
uh for us it's good to offer this kind

00:15:33,040 --> 00:15:36,079
of

00:15:33,360 --> 00:15:36,639
access free access because free access

00:15:36,079 --> 00:15:40,720
at some

00:15:36,639 --> 00:15:43,920
uh can generate some revenue so uh

00:15:40,720 --> 00:15:45,279
this is a an old example but this is a

00:15:43,920 --> 00:15:48,240
good example that

00:15:45,279 --> 00:15:49,199
when we give access to those who really

00:15:48,240 --> 00:15:52,240
need the access

00:15:49,199 --> 00:15:55,199
to tribe power at some point today

00:15:52,240 --> 00:15:56,720
if they the year they understand that

00:15:55,199 --> 00:15:59,279
their free resources

00:15:56,720 --> 00:16:00,959
uh are no longer available and they need

00:15:59,279 --> 00:16:02,880
their own

00:16:00,959 --> 00:16:04,720
their own infrastructure so this was the

00:16:02,880 --> 00:16:08,639
case with this mono project they

00:16:04,720 --> 00:16:10,800
were trying the vms in the minicloud and

00:16:08,639 --> 00:16:12,160
at some point they saw that the

00:16:10,800 --> 00:16:15,199
resources were no

00:16:12,160 --> 00:16:16,320
uh no longer sufficient and they bought

00:16:15,199 --> 00:16:19,440
a power machine

00:16:16,320 --> 00:16:22,079
so open source can help some bringing

00:16:19,440 --> 00:16:25,279
or create revenue so this is a good a

00:16:22,079 --> 00:16:28,320
good example of that approach

00:16:25,279 --> 00:16:29,360
but offering resources for free is not

00:16:28,320 --> 00:16:32,240
enough

00:16:29,360 --> 00:16:33,519
uh we understand that there are some

00:16:32,240 --> 00:16:35,360
limitations pro

00:16:33,519 --> 00:16:37,600
probably the environments are not the

00:16:35,360 --> 00:16:40,800
best fit or

00:16:37,600 --> 00:16:42,399
providing a vm is not the way that as a

00:16:40,800 --> 00:16:43,360
developer would like to access the

00:16:42,399 --> 00:16:46,720
resource

00:16:43,360 --> 00:16:49,199
and we okay

00:16:46,720 --> 00:16:50,079
as i said though is is not sometimes the

00:16:49,199 --> 00:16:52,480
best approach

00:16:50,079 --> 00:16:53,440
and we and this leads us to the chapter

00:16:52,480 --> 00:16:56,639
three which is

00:16:53,440 --> 00:16:58,880
we need to be where developers are and

00:16:56,639 --> 00:17:03,600
this is important because

00:16:58,880 --> 00:17:06,959
uh we are in a period of time where cicd

00:17:03,600 --> 00:17:09,439
are one of the most critical part of

00:17:06,959 --> 00:17:10,720
of uh the development especially in the

00:17:09,439 --> 00:17:14,720
devops

00:17:10,720 --> 00:17:19,120
world we need to be able to write code

00:17:14,720 --> 00:17:22,400
test deploy quickly so if

00:17:19,120 --> 00:17:25,120
if we are not part of this pipeline if

00:17:22,400 --> 00:17:26,079
or if we're not a natural part of this

00:17:25,120 --> 00:17:29,039
pipeline

00:17:26,079 --> 00:17:30,160
and we are going to be we're not going

00:17:29,039 --> 00:17:32,799
to be part of the

00:17:30,160 --> 00:17:34,080
the supported uh platform so we need to

00:17:32,799 --> 00:17:37,200
ensure power is there

00:17:34,080 --> 00:17:38,080
and whoever wants to try on power is is

00:17:37,200 --> 00:17:40,000
going to be very

00:17:38,080 --> 00:17:41,919
this is going to be very simple and easy

00:17:40,000 --> 00:17:44,799
for them to do that

00:17:41,919 --> 00:17:47,039
and the most used source called

00:17:44,799 --> 00:17:50,640
repositories we have

00:17:47,039 --> 00:17:53,919
today are github and gitlab uh

00:17:50,640 --> 00:17:57,120
and those are the places where i believe

00:17:53,919 --> 00:18:00,480
we must be present

00:17:57,120 --> 00:18:03,039
as a as someone offering

00:18:00,480 --> 00:18:03,840
easy access to some rich platform like

00:18:03,039 --> 00:18:07,440
power

00:18:03,840 --> 00:18:11,280
so uh talking first about

00:18:07,440 --> 00:18:14,240
github we have enabled 12 ci

00:18:11,280 --> 00:18:15,039
to build on power and also it's built on

00:18:14,240 --> 00:18:19,200
z

00:18:15,039 --> 00:18:22,240
so travis ci is still the most used

00:18:19,200 --> 00:18:25,360
uh platform

00:18:22,240 --> 00:18:28,640
for testing open source software

00:18:25,360 --> 00:18:31,679
uh it's very very easy to use

00:18:28,640 --> 00:18:32,960
and especially if you have your your

00:18:31,679 --> 00:18:35,919
public repository

00:18:32,960 --> 00:18:37,919
in in github it's i will show how you

00:18:35,919 --> 00:18:40,240
can configure your project but

00:18:37,919 --> 00:18:42,000
with few lines of code you can start

00:18:40,240 --> 00:18:46,880
deploying and testing on

00:18:42,000 --> 00:18:50,000
power easily so

00:18:46,880 --> 00:18:52,160
as i said trevs is very very popular and

00:18:50,000 --> 00:18:54,799
very used

00:18:52,160 --> 00:18:56,160
they continue to grow and they continue

00:18:54,799 --> 00:18:58,880
to offer more

00:18:56,160 --> 00:19:00,160
resources they are expanding what they

00:18:58,880 --> 00:19:02,640
are offering

00:19:00,160 --> 00:19:03,679
and upgrading their back-end environment

00:19:02,640 --> 00:19:07,360
to ensure the

00:19:03,679 --> 00:19:08,480
users can have access to the latest and

00:19:07,360 --> 00:19:11,679
greatest

00:19:08,480 --> 00:19:15,120
solutions or packages and softwares

00:19:11,679 --> 00:19:18,480
and to build on power using travis

00:19:15,120 --> 00:19:21,039
you only need two lines of code

00:19:18,480 --> 00:19:21,679
essentially you need to set uh that you

00:19:21,039 --> 00:19:24,640
want to use

00:19:21,679 --> 00:19:25,280
to build on linux and that you want to

00:19:24,640 --> 00:19:28,799
build

00:19:25,280 --> 00:19:30,400
on a pc pc64 le architecture

00:19:28,799 --> 00:19:32,640
if you set this as part of your

00:19:30,400 --> 00:19:36,640
tracks.tml configuration

00:19:32,640 --> 00:19:40,559
your build will will

00:19:36,640 --> 00:19:43,200
run on power without any problem

00:19:40,559 --> 00:19:44,480
and how you can do that so step number

00:19:43,200 --> 00:19:47,520
one is to need side

00:19:44,480 --> 00:19:49,360
signing uh as part of traps and then you

00:19:47,520 --> 00:19:51,520
need to enable your project there

00:19:49,360 --> 00:19:53,039
it's very simple just turn on the green

00:19:51,520 --> 00:19:56,400
button and your

00:19:53,039 --> 00:19:57,200
application your your repository will be

00:19:56,400 --> 00:20:00,000
enabled to be

00:19:57,200 --> 00:20:02,320
to build on travs step number three is

00:20:00,000 --> 00:20:04,159
to create a travis.tml file

00:20:02,320 --> 00:20:05,520
which is basically a recipe that

00:20:04,159 --> 00:20:08,640
describes what should be hap

00:20:05,520 --> 00:20:10,000
what should happen with your build as

00:20:08,640 --> 00:20:10,640
you can see this is a very simple

00:20:10,000 --> 00:20:13,679
example

00:20:10,640 --> 00:20:14,080
but you can create a very very complex

00:20:13,679 --> 00:20:17,039
one

00:20:14,080 --> 00:20:17,440
if you will but as you can see so i just

00:20:17,039 --> 00:20:20,640
said

00:20:17,440 --> 00:20:23,840
os linux and arch ppc 64 le

00:20:20,640 --> 00:20:28,799
and that gives me a built-in power

00:20:23,840 --> 00:20:31,200
uh for instance this is a this keyboard

00:20:28,799 --> 00:20:32,960
which is using on our power machines

00:20:31,200 --> 00:20:35,919
they use drives to build their

00:20:32,960 --> 00:20:36,240
uh their software so as you can see so

00:20:35,919 --> 00:20:38,880
it

00:20:36,240 --> 00:20:39,919
it it cannot you you can do basically

00:20:38,880 --> 00:20:42,480
whatever you want

00:20:39,919 --> 00:20:43,200
you want to when you try to start build

00:20:42,480 --> 00:20:47,039
on travis

00:20:43,200 --> 00:20:47,039
you're going to get a free

00:20:47,200 --> 00:20:50,640
a linux vm or a linux container in fact

00:20:50,000 --> 00:20:53,120
this is an

00:20:50,640 --> 00:20:54,960
electric lxd container and inside that

00:20:53,120 --> 00:20:56,960
lxd container you can do anything you

00:20:54,960 --> 00:20:58,400
want

00:20:56,960 --> 00:21:00,400
and once you start to build you're going

00:20:58,400 --> 00:21:04,320
to get feedbacks about that

00:21:00,400 --> 00:21:06,080
in your guitar github repository

00:21:04,320 --> 00:21:07,440
as you can see you can follow the build

00:21:06,080 --> 00:21:10,720
process in a

00:21:07,440 --> 00:21:13,760
nice uh shell like ui

00:21:10,720 --> 00:21:14,960
in the browser and yeah so that's it on

00:21:13,760 --> 00:21:16,640
travis you can

00:21:14,960 --> 00:21:18,000
start to build on tracks right away

00:21:16,640 --> 00:21:22,000
without any issue

00:21:18,000 --> 00:21:22,559
go to the travis.com docs.travisci.com

00:21:22,000 --> 00:21:24,159
and

00:21:22,559 --> 00:21:25,679
take a look on the documentation how you

00:21:24,159 --> 00:21:29,360
can create mood chart

00:21:25,679 --> 00:21:31,600
uh uh i'm a build considering

00:21:29,360 --> 00:21:32,960
all the architecture supported so you

00:21:31,600 --> 00:21:36,000
can test in

00:21:32,960 --> 00:21:38,559
x power and z at the same time

00:21:36,000 --> 00:21:40,320
so a quick example here is that at ibm

00:21:38,559 --> 00:21:43,360
we also have tribes on power

00:21:40,320 --> 00:21:46,799
the travis enterprise of our enabler

00:21:43,360 --> 00:21:47,520
we started back in 2017 uh that was

00:21:46,799 --> 00:21:50,240
required

00:21:47,520 --> 00:21:52,159
even that we were doing ibm called rbn

00:21:50,240 --> 00:21:54,880
cloud private development back there

00:21:52,159 --> 00:21:55,760
and we needed to ensure development part

00:21:54,880 --> 00:21:57,679
between

00:21:55,760 --> 00:21:59,679
all the architectures especially because

00:21:57,679 --> 00:22:02,000
it was a very fast

00:21:59,679 --> 00:22:03,440
development environment where people

00:22:02,000 --> 00:22:06,720
were creating code

00:22:03,440 --> 00:22:09,120
i would say 24 hours a day and we should

00:22:06,720 --> 00:22:11,200
ensure that every code that was pushed

00:22:09,120 --> 00:22:15,520
to the internal repositories

00:22:11,200 --> 00:22:18,960
was tested on power and x86 power and z

00:22:15,520 --> 00:22:20,960
at the same time so uh since since then

00:22:18,960 --> 00:22:22,400
we have worked to enable this service

00:22:20,960 --> 00:22:24,960
internally at ibm

00:22:22,400 --> 00:22:26,000
and today any developer that try that

00:22:24,960 --> 00:22:28,240
starts using github

00:22:26,000 --> 00:22:29,440
enterprise can start building using

00:22:28,240 --> 00:22:32,480
travis enterprise

00:22:29,440 --> 00:22:34,080
and google power we are we have more

00:22:32,480 --> 00:22:34,640
than one million builds already since

00:22:34,080 --> 00:22:36,240
then so

00:22:34,640 --> 00:22:37,919
and we continue increasing this number

00:22:36,240 --> 00:22:39,919
because people we see new

00:22:37,919 --> 00:22:41,200
projects adopting travels on power

00:22:39,919 --> 00:22:44,799
internally

00:22:41,200 --> 00:22:47,600
projects that uh so people

00:22:44,799 --> 00:22:49,600
using travis on power to build kernel uh

00:22:47,600 --> 00:22:50,400
create cicd for the kernel development

00:22:49,600 --> 00:22:52,320
so this is

00:22:50,400 --> 00:22:54,480
this is very interesting so this is a

00:22:52,320 --> 00:22:57,120
good example on how

00:22:54,480 --> 00:22:59,039
on that when we offer access easily

00:22:57,120 --> 00:22:59,440
easily access to our resource people

00:22:59,039 --> 00:23:02,000
start

00:22:59,440 --> 00:23:02,640
using it even if they just want to

00:23:02,000 --> 00:23:05,679
explore

00:23:02,640 --> 00:23:08,640
it for for to ensure or

00:23:05,679 --> 00:23:09,760
export it for some particular reason or

00:23:08,640 --> 00:23:13,039
whatever

00:23:09,760 --> 00:23:14,640
so uh moving forward we have also gtlab

00:23:13,039 --> 00:23:18,400
ci cd

00:23:14,640 --> 00:23:19,440
gita lab is a the code platform similar

00:23:18,400 --> 00:23:22,880
to github

00:23:19,440 --> 00:23:24,400
where you can basically get libra offers

00:23:22,880 --> 00:23:26,640
a little bit more features

00:23:24,400 --> 00:23:28,559
if you want to control the end to end

00:23:26,640 --> 00:23:31,840
development of your application

00:23:28,559 --> 00:23:32,559
and as part of gitlab they have a gitlab

00:23:31,840 --> 00:23:34,640
runner

00:23:32,559 --> 00:23:36,559
which is a demon or i can call this is a

00:23:34,640 --> 00:23:39,760
demon that runs any uh

00:23:36,559 --> 00:23:42,480
in a given vm or bare metal machine

00:23:39,760 --> 00:23:43,600
and this allows you to similar to what

00:23:42,480 --> 00:23:46,720
happens to trevon

00:23:43,600 --> 00:23:47,840
configure a file and start the building

00:23:46,720 --> 00:23:50,159
on power

00:23:47,840 --> 00:23:51,279
or start to build your application turns

00:23:50,159 --> 00:23:53,520
out that gitlab

00:23:51,279 --> 00:23:56,000
runs on power the gitlab runner runs on

00:23:53,520 --> 00:23:59,279
power especially if you're trying ubuntu

00:23:56,000 --> 00:24:01,279
uh to configure that uh

00:23:59,279 --> 00:24:03,360
you need to sign in as part of your

00:24:01,279 --> 00:24:07,039
gitlab

00:24:03,360 --> 00:24:10,320
account and this is the different

00:24:07,039 --> 00:24:12,320
uh where travis and gitlab are different

00:24:10,320 --> 00:24:14,000
in travis you get you have you do not

00:24:12,320 --> 00:24:16,159
need to care about the back end

00:24:14,000 --> 00:24:17,520
you just need to write your traps.tml

00:24:16,159 --> 00:24:19,200
recipe

00:24:17,520 --> 00:24:21,200
with kit lab you need to we need to

00:24:19,200 --> 00:24:23,440
ensure you have a power vm of it

00:24:21,200 --> 00:24:24,559
all power bare metal machine today you

00:24:23,440 --> 00:24:28,080
can get power

00:24:24,559 --> 00:24:31,360
free power vms a small vm let's say uh

00:24:28,080 --> 00:24:33,440
in our mini cloud or you can go to ibm

00:24:31,360 --> 00:24:36,000
cloud and get a power vm

00:24:33,440 --> 00:24:36,720
in the power system virtual server which

00:24:36,000 --> 00:24:39,840
is uh

00:24:36,720 --> 00:24:41,279
available so you have options to get

00:24:39,840 --> 00:24:44,000
your power vm available

00:24:41,279 --> 00:24:45,440
and then also get the resource you you

00:24:44,000 --> 00:24:46,159
just need to install the gita gitlab

00:24:45,440 --> 00:24:49,039
runner

00:24:46,159 --> 00:24:49,679
uh if we're using ubuntu and power

00:24:49,039 --> 00:24:52,000
gitlab

00:24:49,679 --> 00:24:53,520
runner is available out of the box as

00:24:52,000 --> 00:24:56,640
part of the distribution

00:24:53,520 --> 00:24:58,840
there is work of going on on to ensure

00:24:56,640 --> 00:25:02,080
that we have the rpm based

00:24:58,840 --> 00:25:04,000
distributions uh uh supporting tribes uh

00:25:02,080 --> 00:25:07,039
sorry supporting the guitar runner

00:25:04,000 --> 00:25:10,480
but i have a i have built uh

00:25:07,039 --> 00:25:13,600
a binary which you can copy to your

00:25:10,480 --> 00:25:15,279
uh rpm based linux distribution and use

00:25:13,600 --> 00:25:18,080
gitlab runner there

00:25:15,279 --> 00:25:19,279
once you have the gitlab runner server

00:25:18,080 --> 00:25:21,600
configured

00:25:19,279 --> 00:25:24,400
you can you need to configure that as

00:25:21,600 --> 00:25:27,600
part of your cicd tooling here

00:25:24,400 --> 00:25:28,000
pretty much registering that you just

00:25:27,600 --> 00:25:30,480
need to

00:25:28,000 --> 00:25:32,480
these two variables and the gitlab

00:25:30,480 --> 00:25:33,600
application that is running your server

00:25:32,480 --> 00:25:37,520
will ask

00:25:33,600 --> 00:25:38,240
for this uh your url and for this token

00:25:37,520 --> 00:25:40,720
so you

00:25:38,240 --> 00:25:41,440
when you set this uh it automatically

00:25:40,720 --> 00:25:44,480
connects

00:25:41,440 --> 00:25:47,600
the back end with this front end and

00:25:44,480 --> 00:25:49,919
gives you the the necessary pipeline

00:25:47,600 --> 00:25:52,080
of building once you have this

00:25:49,919 --> 00:25:53,200
communication done and you are and the

00:25:52,080 --> 00:25:55,440
gitlab master

00:25:53,200 --> 00:25:56,720
is able to access your i would say you

00:25:55,440 --> 00:26:01,279
are working out

00:25:56,720 --> 00:26:02,240
in the uh in your in the infrastructure

00:26:01,279 --> 00:26:04,640
you are providing

00:26:02,240 --> 00:26:06,480
you can describe your recipe pretty much

00:26:04,640 --> 00:26:08,799
like what we did on travis

00:26:06,480 --> 00:26:10,559
is uh this is a yaml file and the

00:26:08,799 --> 00:26:15,440
difference here is that i'm set

00:26:10,559 --> 00:26:17,840
i set a tag uh which is refers to my vm

00:26:15,440 --> 00:26:19,279
now where i'm running the the gitlab

00:26:17,840 --> 00:26:22,240
runner for instance

00:26:19,279 --> 00:26:24,159
uh once i do that i can start building

00:26:22,240 --> 00:26:26,640
power from gitlab

00:26:24,159 --> 00:26:27,679
so here is a i'll say a simple a very

00:26:26,640 --> 00:26:30,320
simple example that

00:26:27,679 --> 00:26:32,000
i'm in this example here i'm using a

00:26:30,320 --> 00:26:35,520
power vm

00:26:32,000 --> 00:26:38,799
not power not kvm on power but this is a

00:26:35,520 --> 00:26:40,799
power vm in ibm cloud

00:26:38,799 --> 00:26:43,600
i'm running a vm in the power

00:26:40,799 --> 00:26:46,640
virtualization power virtual server

00:26:43,600 --> 00:26:48,000
uh offering at part of ibm cloud and

00:26:46,640 --> 00:26:51,039
there i have a centos

00:26:48,000 --> 00:26:54,080
eight and inside this centos

00:26:51,039 --> 00:26:57,200
eight i have my guitar

00:26:54,080 --> 00:26:58,799
runner running in the background and

00:26:57,200 --> 00:27:02,400
connect to my gitlab

00:26:58,799 --> 00:27:05,360
uh connected to my gitlab

00:27:02,400 --> 00:27:07,279
main risk man cicd infrastructure and

00:27:05,360 --> 00:27:11,039
from there you can start building power

00:27:07,279 --> 00:27:13,600
so without any any any issue of course

00:27:11,039 --> 00:27:15,039
as we move forward i hope to get a more

00:27:13,600 --> 00:27:18,240
formal supported

00:27:15,039 --> 00:27:21,919
uh gitlab for this uh rpm based

00:27:18,240 --> 00:27:24,640
distribution but this uh today

00:27:21,919 --> 00:27:24,960
the way the things are defined today uh

00:27:24,640 --> 00:27:28,000
we

00:27:24,960 --> 00:27:31,360
have no blocker to get that done

00:27:28,000 --> 00:27:31,919
so again as we started the discussion

00:27:31,360 --> 00:27:35,279
about

00:27:31,919 --> 00:27:37,039
gitlab power in gitlab people start to

00:27:35,279 --> 00:27:39,760
ask about how to use that

00:27:37,039 --> 00:27:40,880
and then this guy here uh approaching me

00:27:39,760 --> 00:27:43,600
asking how to get

00:27:40,880 --> 00:27:44,399
the resource to do that any few i'll say

00:27:43,600 --> 00:27:47,440
a few hours

00:27:44,399 --> 00:27:49,120
also they got access to a free vm in our

00:27:47,440 --> 00:27:52,880
mini cloud

00:27:49,120 --> 00:27:55,200
they the guys enabled his uh

00:27:52,880 --> 00:27:56,399
his his application to validate and

00:27:55,200 --> 00:27:58,960
build on power so

00:27:56,399 --> 00:27:59,440
this is the most powerful uh the example

00:27:58,960 --> 00:28:02,320
of

00:27:59,440 --> 00:28:04,000
that also we offer access people that

00:28:02,320 --> 00:28:06,000
are really willing to try that

00:28:04,000 --> 00:28:07,760
resources they will try and then you

00:28:06,000 --> 00:28:10,399
start building and using that

00:28:07,760 --> 00:28:12,799
and this is i'll say the base on how we

00:28:10,399 --> 00:28:15,200
can build a healthy ecosystem

00:28:12,799 --> 00:28:16,320
otherwise so we can provide power as the

00:28:15,200 --> 00:28:20,240
most open

00:28:16,320 --> 00:28:22,640
and secure platform but power

00:28:20,240 --> 00:28:23,360
this power without a health and living

00:28:22,640 --> 00:28:26,080
ecosystem

00:28:23,360 --> 00:28:27,840
is just power machine so we need to

00:28:26,080 --> 00:28:31,120
ensure that developers out there

00:28:27,840 --> 00:28:32,480
are able to play and use power whenever

00:28:31,120 --> 00:28:34,080
they need

00:28:32,480 --> 00:28:35,919
and for that so this is the

00:28:34,080 --> 00:28:36,960
documentation for gitlab will be the

00:28:35,919 --> 00:28:39,760
presentation next

00:28:36,960 --> 00:28:41,200
but what we need to do is say as we are

00:28:39,760 --> 00:28:44,320
all interested in power

00:28:41,200 --> 00:28:45,919
we need more power and more power i mean

00:28:44,320 --> 00:28:47,760
ensure that the resources we have

00:28:45,919 --> 00:28:49,440
available continue to be available

00:28:47,760 --> 00:28:51,600
and the resources in public cloud

00:28:49,440 --> 00:28:53,840
continue uh as a weekend

00:28:51,600 --> 00:28:55,360
can become easily available more

00:28:53,840 --> 00:28:55,679
resources and this is something that we

00:28:55,360 --> 00:28:58,320
can

00:28:55,679 --> 00:28:59,760
we can all do we need we can create a

00:28:58,320 --> 00:29:01,760
vlog a simple blog post

00:28:59,760 --> 00:29:03,840
a blog post about how to install a given

00:29:01,760 --> 00:29:04,960
package or build or compile it compiling

00:29:03,840 --> 00:29:08,399
something power

00:29:04,960 --> 00:29:10,640
uh create a tutorial on whatever we want

00:29:08,399 --> 00:29:13,200
uh record videos so this is something

00:29:10,640 --> 00:29:15,120
that uh we need to produce and that's

00:29:13,200 --> 00:29:17,600
that's simple and that's easy to produce

00:29:15,120 --> 00:29:20,480
and that helps those newcomers that are

00:29:17,600 --> 00:29:22,640
starting to play with power

00:29:20,480 --> 00:29:24,159
uh more democracy like we need to do

00:29:22,640 --> 00:29:25,840
what i'm doing here

00:29:24,159 --> 00:29:27,360
show off your work working confidence so

00:29:25,840 --> 00:29:31,360
people are aware that

00:29:27,360 --> 00:29:31,360
what about what they can do on power

00:29:31,440 --> 00:29:35,679
and more academic outreach i believe

00:29:34,240 --> 00:29:36,720
this is one of the key part of the

00:29:35,679 --> 00:29:39,679
process because

00:29:36,720 --> 00:29:40,000
if you take if you stop uh start

00:29:39,679 --> 00:29:43,120
thinking

00:29:40,000 --> 00:29:46,000
today every student

00:29:43,120 --> 00:29:47,600
leaves the uh let's say they they

00:29:46,000 --> 00:29:51,360
complete their academic journey

00:29:47,600 --> 00:29:52,720
uh with a a strong background on x86

00:29:51,360 --> 00:29:54,880
sometimes they don't even

00:29:52,720 --> 00:29:56,559
know that there is another architectures

00:29:54,880 --> 00:29:58,159
available we need to ensure that

00:29:56,559 --> 00:29:58,720
professors and students are aware of

00:29:58,159 --> 00:30:00,320
power

00:29:58,720 --> 00:30:02,159
and they understand and they know the

00:30:00,320 --> 00:30:05,200
capabilities of power for instance

00:30:02,159 --> 00:30:08,080
and for that we need to approach them

00:30:05,200 --> 00:30:08,640
offer access to resource educate them

00:30:08,080 --> 00:30:11,279
somehow

00:30:08,640 --> 00:30:12,000
and to ensure that when that student

00:30:11,279 --> 00:30:14,000
leaves the

00:30:12,000 --> 00:30:15,600
the university and they are they start

00:30:14,000 --> 00:30:19,039
to their professional

00:30:15,600 --> 00:30:22,159
life they can take decision

00:30:19,039 --> 00:30:24,559
where they can consider power as a an

00:30:22,159 --> 00:30:25,279
architecture to deploy their application

00:30:24,559 --> 00:30:26,880
otherwise

00:30:25,279 --> 00:30:28,799
they are going to only consider what

00:30:26,880 --> 00:30:31,919
they already know like

00:30:28,799 --> 00:30:34,159
using the x86 or the the famous or say

00:30:31,919 --> 00:30:35,200
the most used cloud provider have today

00:30:34,159 --> 00:30:37,919
so this

00:30:35,200 --> 00:30:38,240
is what i have for today so i believe i

00:30:37,919 --> 00:30:41,200
went

00:30:38,240 --> 00:30:42,799
a little bit further but uh sure that

00:30:41,200 --> 00:30:46,720
you can start the building power

00:30:42,799 --> 00:30:49,279
right away uh without uh any issue

00:30:46,720 --> 00:30:50,640
right now so right after this call or

00:30:49,279 --> 00:30:53,279
right after this presentation

00:30:50,640 --> 00:30:54,000
you can enable your project on github

00:30:53,279 --> 00:30:57,519
and

00:30:54,000 --> 00:30:59,760
gitlab and start building as as soon as

00:30:57,519 --> 00:31:01,120
so it's time to build your application

00:30:59,760 --> 00:31:05,679
power so

00:31:01,120 --> 00:31:07,360
thank you thank you very much

00:31:05,679 --> 00:31:09,120
if you have any questions please let me

00:31:07,360 --> 00:31:09,840
know if you need any if you need any

00:31:09,120 --> 00:31:13,039
help

00:31:09,840 --> 00:31:15,679
or assist in trying tribes on power

00:31:13,039 --> 00:31:16,240
try and get lag on power or even if you

00:31:15,679 --> 00:31:18,320
need

00:31:16,240 --> 00:31:20,799
free power vms for doing your

00:31:18,320 --> 00:31:22,480
development let me know so i can

00:31:20,799 --> 00:31:25,600
and let me know how i can help you all

00:31:22,480 --> 00:31:25,600

YouTube URL: https://www.youtube.com/watch?v=x2aTmGltVrs


