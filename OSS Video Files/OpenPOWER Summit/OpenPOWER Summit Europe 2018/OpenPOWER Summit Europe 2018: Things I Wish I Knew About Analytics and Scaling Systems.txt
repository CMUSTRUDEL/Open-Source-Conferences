Title: OpenPOWER Summit Europe 2018: Things I Wish I Knew About Analytics and Scaling Systems
Publication date: 2018-11-26
Playlist: OpenPOWER Summit Europe 2018
Description: 
	Venkatesh Sellappa, Solutions Engineer, Hortworks, speaks at OpenPOWER Summit 2018.

For more information, please visit: https://openpowerfoundation.org/summit-2018-10-eu/
Captions: 
	00:00:00,110 --> 00:00:05,930
okay so yeah that's that that's that's

00:00:03,529 --> 00:00:09,230
my name Venky and what I'm gonna talk

00:00:05,930 --> 00:00:15,650
about is I'm gonna quickly talk about a

00:00:09,230 --> 00:00:18,290
project which we did as part of a very

00:00:15,650 --> 00:00:21,380
large financial organization and what

00:00:18,290 --> 00:00:24,800
I'm gonna try and do is I'm gonna walk

00:00:21,380 --> 00:00:29,590
through what I did what we did as a team

00:00:24,800 --> 00:00:32,419
and hopefully there is some value from

00:00:29,590 --> 00:00:34,460
from that so it's it's a it's a kind of

00:00:32,419 --> 00:00:37,070
lesson learned it's a kind of project

00:00:34,460 --> 00:00:39,980
walkthrough it can be fairly technical

00:00:37,070 --> 00:00:42,500
it can also be fairly hopefully we get

00:00:39,980 --> 00:00:44,480
something in terms of understanding how

00:00:42,500 --> 00:00:46,850
that worked and you know what happened

00:00:44,480 --> 00:00:49,579
and what we could have done better and

00:00:46,850 --> 00:00:52,670
so on and the first thing just as a

00:00:49,579 --> 00:00:54,559
quick as a quick introduction is

00:00:52,670 --> 00:01:00,500
obviously my name is Venki

00:00:54,559 --> 00:01:03,410
Venkatesh xalapa Venky I'm a my official

00:01:00,500 --> 00:01:06,740
title is director partner engineering

00:01:03,410 --> 00:01:08,960
emia I'm essentially a solutions

00:01:06,740 --> 00:01:11,299
engineer and I work for a company called

00:01:08,960 --> 00:01:13,790
Hortonworks I don't know if any of you

00:01:11,299 --> 00:01:16,159
guys have heard of or no off Hortonworks

00:01:13,790 --> 00:01:19,130
anyone here who knows well there we go

00:01:16,159 --> 00:01:23,570
so that's that's that's almost sixty

00:01:19,130 --> 00:01:26,450
percent in machine learning terms so

00:01:23,570 --> 00:01:28,610
yeah so I work for Hortonworks

00:01:26,450 --> 00:01:31,490
and before that I used to be what's

00:01:28,610 --> 00:01:33,909
called as a quant anybody knows what's a

00:01:31,490 --> 00:01:33,909
quant

00:01:34,240 --> 00:01:39,470
okay so I'll give a quick background on

00:01:36,590 --> 00:01:44,240
what a corn itself is a quant is a

00:01:39,470 --> 00:01:46,549
person who works with who works in the

00:01:44,240 --> 00:01:48,830
financial side of with finance

00:01:46,549 --> 00:01:52,850
organizations largely with traders and

00:01:48,830 --> 00:01:54,979
sales people so if you do a lot of math

00:01:52,850 --> 00:01:56,720
and you know a little bit of computer

00:01:54,979 --> 00:01:59,750
science you're probably going to become

00:01:56,720 --> 00:02:03,500
a quant in any large financial

00:01:59,750 --> 00:02:06,470
organization and so I used to work for

00:02:03,500 --> 00:02:10,280
hedge funds and banks for about fourteen

00:02:06,470 --> 00:02:12,800
years I still have a soul so please

00:02:10,280 --> 00:02:13,700
don't look at me like that but I used to

00:02:12,800 --> 00:02:16,370
work for

00:02:13,700 --> 00:02:19,970
large banks doing what's called as SX

00:02:16,370 --> 00:02:21,980
options trading and so traders would be

00:02:19,970 --> 00:02:23,930
sitting there and we would be you know

00:02:21,980 --> 00:02:26,090
as a quant you would be sitting next to

00:02:23,930 --> 00:02:31,250
the trader and your job is essentially

00:02:26,090 --> 00:02:33,680
to come up with models ai models with a

00:02:31,250 --> 00:02:36,200
lot of workarounds or a Monte Carlo

00:02:33,680 --> 00:02:39,500
simulations with a lot of modeling that

00:02:36,200 --> 00:02:41,480
is now coming down into what I call as

00:02:39,500 --> 00:02:43,099
retail data signs so if you're all now

00:02:41,480 --> 00:02:45,470
called data scientist I don't

00:02:43,099 --> 00:02:47,630
particularly like that term but I think

00:02:45,470 --> 00:02:51,620
it's a it's the term everyone uses of

00:02:47,630 --> 00:02:53,569
your old data scientist now so that used

00:02:51,620 --> 00:02:56,510
to be my that's my background

00:02:53,569 --> 00:02:59,810
and what I want to do is effectively

00:02:56,510 --> 00:03:03,010
walk through how this particular project

00:02:59,810 --> 00:03:06,260
and what we could have done better now

00:03:03,010 --> 00:03:07,910
the first thing around it is if you are

00:03:06,260 --> 00:03:09,709
a data scientist and I'm talking from

00:03:07,910 --> 00:03:12,019
the perspective of someone who's doing

00:03:09,709 --> 00:03:14,780
this on a day to day basis so this is

00:03:12,019 --> 00:03:17,660
not academia a lot of people who come

00:03:14,780 --> 00:03:20,299
into the quant world who come in and do

00:03:17,660 --> 00:03:22,880
data science on a regular basis they all

00:03:20,299 --> 00:03:24,889
come in from the world of academia so

00:03:22,880 --> 00:03:26,870
you know someone like me comes in from a

00:03:24,889 --> 00:03:29,870
math background there are people who are

00:03:26,870 --> 00:03:32,810
physics and lots of physics PhDs are

00:03:29,870 --> 00:03:35,150
there and they all come in with their

00:03:32,810 --> 00:03:37,069
own toolset with their own toolkit and

00:03:35,150 --> 00:03:40,190
one of the things that happens with

00:03:37,069 --> 00:03:43,609
their own toolkit is obviously what we

00:03:40,190 --> 00:03:46,519
call as a quant workbench and a quant

00:03:43,609 --> 00:03:49,700
workbench usually has got these three or

00:03:46,519 --> 00:03:52,010
these five different types of tools I

00:03:49,700 --> 00:03:53,389
would like to call them so on one side

00:03:52,010 --> 00:03:56,900
of it you've got things like sort of

00:03:53,389 --> 00:03:59,540
Python R and MATLAB and python r and

00:03:56,900 --> 00:04:02,720
MATLAB are what we call as discovery

00:03:59,540 --> 00:04:05,329
type tools so whenever you're working on

00:04:02,720 --> 00:04:07,340
on Python or when you're doing some

00:04:05,329 --> 00:04:08,930
stuff with nowadays now you do a lot of

00:04:07,340 --> 00:04:12,079
work with tensorflow and things like

00:04:08,930 --> 00:04:15,049
that you are in essence most of the time

00:04:12,079 --> 00:04:17,090
you're trying to get or trying to

00:04:15,049 --> 00:04:20,840
discover the meaning of data behind

00:04:17,090 --> 00:04:25,159
large amounts of data and the reason why

00:04:20,840 --> 00:04:27,210
it's either Python or R or MATLAB is a

00:04:25,159 --> 00:04:29,460
specific case but it's either

00:04:27,210 --> 00:04:31,800
my son all our tends to be because it's

00:04:29,460 --> 00:04:33,990
easier for discovery so if you look at

00:04:31,800 --> 00:04:36,930
it from a 10,000 feet view it's a lot

00:04:33,990 --> 00:04:40,830
more easier to do quick and dirty things

00:04:36,930 --> 00:04:42,979
with Python and R once you have actually

00:04:40,830 --> 00:04:46,319
done that now when you try and

00:04:42,979 --> 00:04:50,210
productionize it that's a much bigger

00:04:46,319 --> 00:04:53,240
challenge and the production ization of

00:04:50,210 --> 00:04:55,680
models that are written in Python or R

00:04:53,240 --> 00:04:59,069
irrespective of the underlying framework

00:04:55,680 --> 00:05:01,530
like anaconda or taken things from you

00:04:59,069 --> 00:05:05,220
know any one of these other other

00:05:01,530 --> 00:05:08,430
libraries those coming into a production

00:05:05,220 --> 00:05:12,630
system is not something that spans and

00:05:08,430 --> 00:05:15,000
seamlessly works and at that point is

00:05:12,630 --> 00:05:16,800
where people start talking about kind of

00:05:15,000 --> 00:05:20,039
what we call as the traditional tools

00:05:16,800 --> 00:05:22,470
which is these sass and Java and C++ so

00:05:20,039 --> 00:05:24,930
the quant workbench essentially consists

00:05:22,470 --> 00:05:27,780
of these two different categories of

00:05:24,930 --> 00:05:29,970
tools one is the Python and our world

00:05:27,780 --> 00:05:32,060
which is effectively the discovery world

00:05:29,970 --> 00:05:35,099
where you go and say and especially now

00:05:32,060 --> 00:05:36,659
people who are coming in from a pure

00:05:35,099 --> 00:05:38,460
mathematical background they would

00:05:36,659 --> 00:05:40,380
essentially work with are people who are

00:05:38,460 --> 00:05:42,060
comfort from the IT background tend to

00:05:40,380 --> 00:05:44,190
work with Python because it's a lot more

00:05:42,060 --> 00:05:46,650
easier and then you get a lot of these

00:05:44,190 --> 00:05:48,690
libraries that work on top of it and you

00:05:46,650 --> 00:05:51,509
go and sell create a pipeline in this or

00:05:48,690 --> 00:05:53,370
I'll create a pipeline using one of the

00:05:51,509 --> 00:05:55,110
big data tools or I'll have something

00:05:53,370 --> 00:05:57,659
with just coming in from anaconda use

00:05:55,110 --> 00:06:00,090
numpy scifi some things like that and i

00:05:57,659 --> 00:06:01,740
will create a model now once you've done

00:06:00,090 --> 00:06:03,449
that and then you say i want to

00:06:01,740 --> 00:06:05,669
integrate the model and put it into a

00:06:03,449 --> 00:06:08,130
production like scenario that's where

00:06:05,669 --> 00:06:11,520
the traditional IT tooling comes in

00:06:08,130 --> 00:06:13,800
which is Java C++ and or SAS now I know

00:06:11,520 --> 00:06:16,050
nothing about SAS so I can't give you an

00:06:13,800 --> 00:06:17,940
answer but I've seen people use it it's

00:06:16,050 --> 00:06:21,750
apparently a really good tool I don't

00:06:17,940 --> 00:06:24,000
know with Java and C++ obviously it's

00:06:21,750 --> 00:06:26,490
more on the lines of saying how do i

00:06:24,000 --> 00:06:30,389
integrate with existing tools and that's

00:06:26,490 --> 00:06:32,639
where java and c++ really shine that's

00:06:30,389 --> 00:06:37,169
one the second thing that also happens

00:06:32,639 --> 00:06:39,080
with java and c++ is the ability to get

00:06:37,169 --> 00:06:40,830
it to a point where it's extremely

00:06:39,080 --> 00:06:42,780
performant

00:06:40,830 --> 00:06:45,120
now because I'm talking about trading

00:06:42,780 --> 00:06:47,670
system specifically trading systems and

00:06:45,120 --> 00:06:49,710
we have seen that this tends to work

00:06:47,670 --> 00:06:52,620
with other systems like you know systems

00:06:49,710 --> 00:06:54,360
in telco systems in retail systems in

00:06:52,620 --> 00:06:58,980
advertising and you know within the

00:06:54,360 --> 00:07:00,660
industry it's the speed of execution I

00:06:58,980 --> 00:07:02,520
don't know how many things are how many

00:07:00,660 --> 00:07:05,790
of you guys are Python programmers here

00:07:02,520 --> 00:07:07,950
by any chance Python programmers kind of

00:07:05,790 --> 00:07:10,580
so the one big thing that you end up

00:07:07,950 --> 00:07:12,930
getting with Python is obviously the Gil

00:07:10,580 --> 00:07:14,870
which is anyone knows what's the Gil

00:07:12,930 --> 00:07:18,720
what am I talking about

00:07:14,870 --> 00:07:21,570
it's the global interpreter lock so if

00:07:18,720 --> 00:07:24,030
you take Python libraries Python

00:07:21,570 --> 00:07:27,930
libraries any Python library that you

00:07:24,030 --> 00:07:30,690
have is not multi-threaded it's always

00:07:27,930 --> 00:07:32,430
single threaded at the end level and the

00:07:30,690 --> 00:07:35,040
reason it's single threaded at the end

00:07:32,430 --> 00:07:36,960
level is primarily because Python has

00:07:35,040 --> 00:07:40,890
what's called as a global interpreter

00:07:36,960 --> 00:07:43,940
lock there is only one thread in Python

00:07:40,890 --> 00:07:46,260
that can execute at any point in time

00:07:43,940 --> 00:07:48,330
irrespective of the number of cores you

00:07:46,260 --> 00:07:51,210
have at the background if you have one

00:07:48,330 --> 00:07:54,450
Python VM there's only one thread that

00:07:51,210 --> 00:08:00,690
is executing on it and this is just the

00:07:54,450 --> 00:08:02,640
way Python is design then you are

00:08:00,690 --> 00:08:05,220
essentially going into sort of separate

00:08:02,640 --> 00:08:07,080
yeah you're going in to see exactly and

00:08:05,220 --> 00:08:09,450
which is why I'm talking about C++ over

00:08:07,080 --> 00:08:13,380
there which is that if you are if you

00:08:09,450 --> 00:08:15,060
are so the the the reality of the

00:08:13,380 --> 00:08:17,910
situation is that you start off with

00:08:15,060 --> 00:08:21,000
trying to say I am going to do data

00:08:17,910 --> 00:08:22,680
discovery and like I said because this

00:08:21,000 --> 00:08:24,300
is the project I'll specifically talk

00:08:22,680 --> 00:08:27,720
about the kind of project we were doing

00:08:24,300 --> 00:08:29,730
we in in in trading systems one of the

00:08:27,720 --> 00:08:32,400
key things that you get is you get huge

00:08:29,730 --> 00:08:34,800
amount of noise and you have to find out

00:08:32,400 --> 00:08:38,970
what the signal is behind it and that's

00:08:34,800 --> 00:08:41,280
easier in systems like Python or in

00:08:38,970 --> 00:08:43,920
using libraries which are written in

00:08:41,280 --> 00:08:46,830
Python because it's a lot more it's a

00:08:43,920 --> 00:08:49,560
lot more less formalized it's a lot more

00:08:46,830 --> 00:08:51,750
informal it's easier to work with but it

00:08:49,560 --> 00:08:54,870
has this other side of the effect which

00:08:51,750 --> 00:08:57,780
is it's never going to be as fast

00:08:54,870 --> 00:08:59,880
what's written in Java or a C++ language

00:08:57,780 --> 00:09:01,560
and it's just the way that it it's not a

00:08:59,880 --> 00:09:04,590
good or a bad thing it's just the way it

00:09:01,560 --> 00:09:07,200
is there is something very similar in

00:09:04,590 --> 00:09:09,660
art as well R is also not something

00:09:07,200 --> 00:09:13,650
which is traditionally multi-threaded or

00:09:09,660 --> 00:09:15,870
can use multicores one of the I did a

00:09:13,650 --> 00:09:18,090
talk at the R Hui University of

00:09:15,870 --> 00:09:19,740
mathematics in Denmark and they are one

00:09:18,090 --> 00:09:21,480
of the big users of our and they had

00:09:19,740 --> 00:09:23,730
lots of people coming in from our pan

00:09:21,480 --> 00:09:25,800
and so on and so forth

00:09:23,730 --> 00:09:27,470
and their definition of big data is

00:09:25,800 --> 00:09:30,120
essentially if you have hundred rows

00:09:27,470 --> 00:09:32,220
that's effectively big data for them

00:09:30,120 --> 00:09:35,130
because that's literally the kind of

00:09:32,220 --> 00:09:37,740
level of performance that you get from

00:09:35,130 --> 00:09:39,510
something like R so when when I started

00:09:37,740 --> 00:09:40,830
working in this particular industry the

00:09:39,510 --> 00:09:43,920
first thing that I happened was I

00:09:40,830 --> 00:09:46,440
noticed this which is a lot of us were

00:09:43,920 --> 00:09:48,690
doing Python and R to kind of do the

00:09:46,440 --> 00:09:51,960
discovery side of it and then we would

00:09:48,690 --> 00:09:54,690
go into Java and C++ or SAS to go in and

00:09:51,960 --> 00:09:56,460
try and sort of make it automated or get

00:09:54,690 --> 00:09:58,830
it to a point where it can go and scale

00:09:56,460 --> 00:10:01,800
it up to a point where it can get into

00:09:58,830 --> 00:10:02,580
production and this is a lot more harder

00:10:01,800 --> 00:10:05,130
than it looks

00:10:02,580 --> 00:10:07,890
primarily because the same libraries do

00:10:05,130 --> 00:10:09,990
not translate one is to one that's

00:10:07,890 --> 00:10:13,260
number one number two these algorithms

00:10:09,990 --> 00:10:15,060
don't really work as it is because if

00:10:13,260 --> 00:10:17,010
you have an algorithm that works when

00:10:15,060 --> 00:10:19,440
it's single threaded it's not

00:10:17,010 --> 00:10:22,250
necessarily the case that it will work

00:10:19,440 --> 00:10:24,720
the same way when it's multi-threaded

00:10:22,250 --> 00:10:28,230
MATLAB is a specifically different case

00:10:24,720 --> 00:10:29,670
anyone used MATLAB here so it's MATLAB

00:10:28,230 --> 00:10:31,860
is obviously one of those things which

00:10:29,670 --> 00:10:33,780
has got tons and tons of mathematical

00:10:31,860 --> 00:10:35,610
things on the back of it and does lovely

00:10:33,780 --> 00:10:38,910
graphing and all of that there is no

00:10:35,610 --> 00:10:41,760
direct equivalent of it now after having

00:10:38,910 --> 00:10:46,050
given that sort of a background let me

00:10:41,760 --> 00:10:48,780
walk you through what we needed here so

00:10:46,050 --> 00:10:50,460
the things that we needed from again

00:10:48,780 --> 00:10:53,400
from this project perspective was two

00:10:50,460 --> 00:10:55,080
things one the ability for people to go

00:10:53,400 --> 00:10:56,790
and do trial and error which you

00:10:55,080 --> 00:10:58,410
obviously can't do in production because

00:10:56,790 --> 00:11:00,150
you know it's a bank you can't lose

00:10:58,410 --> 00:11:03,000
money just by doing trial and error like

00:11:00,150 --> 00:11:05,730
that the second thing is the ability to

00:11:03,000 --> 00:11:07,540
do large amounts of data ingestion so

00:11:05,730 --> 00:11:11,440
there are two parts of the these

00:11:07,540 --> 00:11:13,240
the two these are the two things that

00:11:11,440 --> 00:11:15,430
programmers were working on this a

00:11:13,240 --> 00:11:17,620
Kwanza were working on this needed the

00:11:15,430 --> 00:11:19,899
ability to do trial and error which is

00:11:17,620 --> 00:11:22,600
something that things like R and Python

00:11:19,899 --> 00:11:25,449
provide the ability to ingest huge

00:11:22,600 --> 00:11:28,480
amounts of data so one example that I

00:11:25,449 --> 00:11:32,980
can give you is let's say you're trying

00:11:28,480 --> 00:11:35,019
to find out the what example can I give

00:11:32,980 --> 00:11:37,540
you okay let's say you're trying to find

00:11:35,019 --> 00:11:39,149
out what the price of potato is going to

00:11:37,540 --> 00:11:41,620
be six months from now

00:11:39,149 --> 00:11:42,850
does anyone know what are the things you

00:11:41,620 --> 00:11:45,040
should be looking for so if I'm a

00:11:42,850 --> 00:11:46,990
commodity trader which means commodity

00:11:45,040 --> 00:11:50,410
traders are effectively trying to find

00:11:46,990 --> 00:11:54,670
out prices of petroleum oil and gas you

00:11:50,410 --> 00:11:58,079
could be a potato commodity trader what

00:11:54,670 --> 00:11:58,079
are the things I should be looking for

00:11:58,829 --> 00:12:03,610
monsoon is one that's actually a good

00:12:02,139 --> 00:12:10,620
way that that's a good good thing

00:12:03,610 --> 00:12:10,620
monsoon is 1 so that's weather data 3

00:12:10,740 --> 00:12:16,569
McDonald sales prediction is another and

00:12:13,089 --> 00:12:18,370
that's very very good how the crop did

00:12:16,569 --> 00:12:20,110
so because you're looking at future

00:12:18,370 --> 00:12:22,750
right so you you are supposed to get

00:12:20,110 --> 00:12:24,339
there you're not supposed to be you know

00:12:22,750 --> 00:12:25,690
you don't want to know what the spot

00:12:24,339 --> 00:12:27,519
price or spot price is today

00:12:25,690 --> 00:12:29,350
you want to know what the future is

00:12:27,519 --> 00:12:31,209
gonna look like that's where your bet is

00:12:29,350 --> 00:12:33,339
gonna be and then you create what's

00:12:31,209 --> 00:12:37,089
called as a strike price in six months

00:12:33,339 --> 00:12:39,730
time I will guarantee or I will buy

00:12:37,089 --> 00:12:42,730
potatoes off you for five dollars and

00:12:39,730 --> 00:12:44,260
the current price is three point five so

00:12:42,730 --> 00:12:45,910
I'll buy it at five dollars are you

00:12:44,260 --> 00:12:48,130
willing to strike that's the kind of

00:12:45,910 --> 00:12:49,930
that that's essentially in a ten

00:12:48,130 --> 00:12:56,139
thousand feet what else are we looking

00:12:49,930 --> 00:12:58,510
for historical data essentially

00:12:56,139 --> 00:13:00,730
historical data so these are some

00:12:58,510 --> 00:13:02,050
examples one of the examples that I can

00:13:00,730 --> 00:13:03,459
give you is and this happened this is

00:13:02,050 --> 00:13:05,410
something that we were taught when I

00:13:03,459 --> 00:13:08,920
first started working in this area was

00:13:05,410 --> 00:13:10,689
when Chernobyl happened which is I think

00:13:08,920 --> 00:13:13,209
it happened in the mid 80s or something

00:13:10,689 --> 00:13:14,589
in Russia in the mid 80s even I'm not

00:13:13,209 --> 00:13:17,529
that old so I wasn't working at that

00:13:14,589 --> 00:13:19,269
time but when it happened in the mid 80s

00:13:17,529 --> 00:13:20,560
apparently one of the traders the first

00:13:19,269 --> 00:13:23,650
thing he did

00:13:20,560 --> 00:13:26,980
was he struck a deal where he said the

00:13:23,650 --> 00:13:29,080
price of potato is going to fall in six

00:13:26,980 --> 00:13:31,420
months time because apparently that part

00:13:29,080 --> 00:13:34,510
of Russia used to be the one that made

00:13:31,420 --> 00:13:37,150
lots of potatoes now that's the kind of

00:13:34,510 --> 00:13:39,279
sort of future thinking that you have to

00:13:37,150 --> 00:13:42,279
be sorry the price of potatoes gonna

00:13:39,279 --> 00:13:44,529
rise because Chernobyl is one of the

00:13:42,279 --> 00:13:46,900
primary areas where potatoes were grown

00:13:44,529 --> 00:13:48,910
in Russia so that's the kind of data

00:13:46,900 --> 00:13:51,670
that you have to be looking at and this

00:13:48,910 --> 00:13:53,290
is big I was never in a commodity

00:13:51,670 --> 00:13:55,900
trading thing I was more on the FX

00:13:53,290 --> 00:13:59,080
option side so which means as a recent

00:13:55,900 --> 00:14:04,540
example when Britain came out of the UK

00:13:59,080 --> 00:14:07,450
which has brexit the value of the pound

00:14:04,540 --> 00:14:11,230
against the dollar fell by 10 percent

00:14:07,450 --> 00:14:15,700
overnight which means that a billion

00:14:11,230 --> 00:14:18,210
pounds changed hands overnight and the

00:14:15,700 --> 00:14:20,589
billion is just based on the amount of

00:14:18,210 --> 00:14:25,570
transactions that happen on this

00:14:20,589 --> 00:14:28,150
currency pair which is gbp/usd so it was

00:14:25,570 --> 00:14:30,250
very profitable for someone and it also

00:14:28,150 --> 00:14:32,410
meant that someone or some group of

00:14:30,250 --> 00:14:35,680
people lost a billion remember in FX

00:14:32,410 --> 00:14:37,690
options trading there are no it's a

00:14:35,680 --> 00:14:39,190
zero-sum game so someone has to win for

00:14:37,690 --> 00:14:40,620
someone else to lose it's not that

00:14:39,190 --> 00:14:42,850
you're producing anything and

00:14:40,620 --> 00:14:44,680
unfortunately a lot of our financial

00:14:42,850 --> 00:14:47,410
system is actually based on the fact

00:14:44,680 --> 00:14:49,630
that someone has to win for someone else

00:14:47,410 --> 00:14:52,660
to lose nothing is actually created it's

00:14:49,630 --> 00:14:54,760
just simply it's a zero-sum game it's

00:14:52,660 --> 00:14:58,170
basically you know money moving from one

00:14:54,760 --> 00:15:03,010
end to the other so that was the project

00:14:58,170 --> 00:15:05,770
now all of this is fine but there is one

00:15:03,010 --> 00:15:09,490
thing that is critical in finance which

00:15:05,770 --> 00:15:11,440
is Excel is king irrespective of all of

00:15:09,490 --> 00:15:13,000
the tooling that you've talked about so

00:15:11,440 --> 00:15:15,970
we talked about tooling which is Java

00:15:13,000 --> 00:15:18,430
C++ Python and R and the issues around

00:15:15,970 --> 00:15:20,350
scaling we talked about MATLAB which is

00:15:18,430 --> 00:15:21,970
slightly different then we talked about

00:15:20,350 --> 00:15:24,220
what was the requirement which is the

00:15:21,970 --> 00:15:27,490
requirements tend to be around things

00:15:24,220 --> 00:15:30,160
like trial and error the ability to do

00:15:27,490 --> 00:15:31,930
trial and error without having to you

00:15:30,160 --> 00:15:33,850
know without going on to someone else

00:15:31,930 --> 00:15:34,480
else's problems or without creating

00:15:33,850 --> 00:15:37,269
production

00:15:34,480 --> 00:15:39,850
scenario issues and obviously the

00:15:37,269 --> 00:15:42,070
ability to ingest lots of data but in

00:15:39,850 --> 00:15:45,010
spite of all of that all of these things

00:15:42,070 --> 00:15:47,410
are fine but on the front end the way

00:15:45,010 --> 00:15:49,720
that most traders work and the way that

00:15:47,410 --> 00:15:53,920
most of the Kwan's work is effectively

00:15:49,720 --> 00:15:56,500
Excel as king and I did this I did this

00:15:53,920 --> 00:15:59,139
sort of there's this study or not a

00:15:56,500 --> 00:16:02,019
study I did this sort of a talk at

00:15:59,139 --> 00:16:04,600
Spotify anyone know what Spotify is I

00:16:02,019 --> 00:16:06,459
hope everyone does yeah so Spotify is

00:16:04,600 --> 00:16:11,699
has got one of the largest data science

00:16:06,459 --> 00:16:14,410
community in in I think in amia and

00:16:11,699 --> 00:16:16,990
they've got bunches of really really

00:16:14,410 --> 00:16:18,850
smart data scientists and they bring in

00:16:16,990 --> 00:16:21,639
all of these guys from you know as soon

00:16:18,850 --> 00:16:23,019
as they come out of academia and the one

00:16:21,639 --> 00:16:25,209
thing that I asked them was what do you

00:16:23,019 --> 00:16:26,889
actually use when you're trying to you

00:16:25,209 --> 00:16:29,680
know when you're trying to see results

00:16:26,889 --> 00:16:31,060
of your of your of your model simulation

00:16:29,680 --> 00:16:32,440
or you're trying to do something where

00:16:31,060 --> 00:16:34,720
you're trying to figure out how to scale

00:16:32,440 --> 00:16:37,060
this up and so on and the first thing

00:16:34,720 --> 00:16:39,190
they said was we use Excel and the

00:16:37,060 --> 00:16:43,930
reason they use Excel is because Excel

00:16:39,190 --> 00:16:45,790
is one of those tools excuse me Excel is

00:16:43,930 --> 00:16:50,380
one of those tools that is amitabh 'el

00:16:45,790 --> 00:16:51,850
two quick fast changes anywhere if you

00:16:50,380 --> 00:16:55,529
guys use things like Jupiter and

00:16:51,850 --> 00:16:58,870
Zeppelin and so on Jupiter and Zeppelin

00:16:55,529 --> 00:17:02,199
attempt to be like excel they are about

00:16:58,870 --> 00:17:04,660
I would say they're about ten

00:17:02,199 --> 00:17:07,360
generations behind Excel probably a

00:17:04,660 --> 00:17:09,910
little bit more and this is someone who

00:17:07,360 --> 00:17:12,429
has been using if you've done VBA macro

00:17:09,910 --> 00:17:15,250
programming then you know the kind of

00:17:12,429 --> 00:17:16,809
power that Excel can wield which you

00:17:15,250 --> 00:17:19,870
cannot have so this is an additional

00:17:16,809 --> 00:17:22,179
thing I wanted to sort of mention now

00:17:19,870 --> 00:17:24,850
these are all related to the way that

00:17:22,179 --> 00:17:27,459
you want to scale your analytics bear in

00:17:24,850 --> 00:17:30,190
mind that you can scale your an Excel

00:17:27,459 --> 00:17:33,280
doesn't scale that's a problem but 60%

00:17:30,190 --> 00:17:36,940
or more of data scientists in finance

00:17:33,280 --> 00:17:38,980
use Excel Excel doesn't scale so you

00:17:36,940 --> 00:17:41,530
don't have Excel where you can say I'm

00:17:38,980 --> 00:17:43,330
gonna run Excel on a cluster that

00:17:41,530 --> 00:17:45,159
doesn't really work you've got to say

00:17:43,330 --> 00:17:47,360
I've got to run Excel on a desktop

00:17:45,159 --> 00:17:49,250
that's the only way it works but

00:17:47,360 --> 00:17:51,170
you cannot take a data scientist away

00:17:49,250 --> 00:17:54,429
from his tool and expect him to be

00:17:51,170 --> 00:17:56,840
productive it just doesn't work so

00:17:54,429 --> 00:17:59,990
anything that we do in terms of being

00:17:56,840 --> 00:18:02,360
able to scale the whole pipeline from

00:17:59,990 --> 00:18:05,450
model creation to model development to

00:18:02,360 --> 00:18:07,640
be able to look at the model and figure

00:18:05,450 --> 00:18:09,410
out how it's working in production and

00:18:07,640 --> 00:18:11,150
then the most important thing we're just

00:18:09,410 --> 00:18:14,179
after you've done your training of data

00:18:11,150 --> 00:18:16,670
how do you reinterpret the results and

00:18:14,179 --> 00:18:20,270
be able to create a new one all of these

00:18:16,670 --> 00:18:24,260
things require some way of being able to

00:18:20,270 --> 00:18:25,970
scale this now the project like I said

00:18:24,260 --> 00:18:34,429
it's it's a project that we worked does

00:18:25,970 --> 00:18:36,590
anyone know what this is I I will but

00:18:34,429 --> 00:18:45,350
does anyone know it just as an idea as

00:18:36,590 --> 00:18:49,640
to what this is and this is it's it is

00:18:45,350 --> 00:18:53,570
it's a it's a hundred thousand feet view

00:18:49,640 --> 00:18:55,820
of a particular product which needs to

00:18:53,570 --> 00:18:58,400
be assembled and which is one of the

00:18:55,820 --> 00:19:01,910
biggest products that was sold in the

00:18:58,400 --> 00:19:04,669
financial markets from the year 2000 no

00:19:01,910 --> 00:19:09,380
actually before that from 1998 till

00:19:04,669 --> 00:19:14,179
about 2005 2006 and now they're called

00:19:09,380 --> 00:19:16,270
CEOs they're called CEOs so seniors are

00:19:14,179 --> 00:19:20,870
effectively collateralized debt

00:19:16,270 --> 00:19:22,669
obligations and from a from a hundred

00:19:20,870 --> 00:19:25,730
thousand feet view if you come to a

00:19:22,669 --> 00:19:28,130
10,000 feet view what the CDO contained

00:19:25,730 --> 00:19:31,690
CDO is essentially at the bottommost

00:19:28,130 --> 00:19:34,250
level they contain subprime mortgages

00:19:31,690 --> 00:19:36,350
which is mortgages they're not really

00:19:34,250 --> 00:19:39,020
called subprime mortgages they are

00:19:36,350 --> 00:19:41,179
essentially mortgages which is mortgages

00:19:39,020 --> 00:19:44,809
is what you know you or I will pay on

00:19:41,179 --> 00:19:46,790
our particular on a loan that we take

00:19:44,809 --> 00:19:49,490
from the bank and the asset that we are

00:19:46,790 --> 00:19:53,720
paying for is the house and it used to

00:19:49,490 --> 00:19:55,580
be one of the safest instruments now if

00:19:53,720 --> 00:19:57,470
you look at mortgages essentially the

00:19:55,580 --> 00:19:59,809
way mortgages themselves work there's

00:19:57,470 --> 00:20:01,220
from a bank perspective and this is kind

00:19:59,809 --> 00:20:02,900
of important to understand

00:20:01,220 --> 00:20:05,260
from a bank perspective the way a

00:20:02,900 --> 00:20:08,960
mortgages work is that I give them money

00:20:05,260 --> 00:20:11,419
as a as an initial and then they give me

00:20:08,960 --> 00:20:12,980
a bigger chunk of money and then then

00:20:11,419 --> 00:20:15,320
say this is your asset which means

00:20:12,980 --> 00:20:17,480
you're going to buy this asset my bet is

00:20:15,320 --> 00:20:20,270
that that asset is going to inflate in

00:20:17,480 --> 00:20:22,789
value over period of time and instead of

00:20:20,270 --> 00:20:25,789
you paying me X you're going to play me

00:20:22,789 --> 00:20:28,070
X plus something and that X plus

00:20:25,789 --> 00:20:30,080
something is going to cover the risk

00:20:28,070 --> 00:20:31,549
that you might not pay but mortgages

00:20:30,080 --> 00:20:33,980
have traditionally been something that

00:20:31,549 --> 00:20:36,799
people will always pay because that's

00:20:33,980 --> 00:20:38,510
the first thing that comes into the as

00:20:36,799 --> 00:20:40,580
part of your budget so it's

00:20:38,510 --> 00:20:42,799
traditionally the way banks have looked

00:20:40,580 --> 00:20:45,350
at mortgages is to say this is one of

00:20:42,799 --> 00:20:48,230
the safest things to have is if I give

00:20:45,350 --> 00:20:51,289
mortgage what actually ended up

00:20:48,230 --> 00:20:53,539
happening as time went on is traders

00:20:51,289 --> 00:20:54,559
with the help of Kwan's who sit there

00:20:53,539 --> 00:20:58,159
and who are doing a lot of these

00:20:54,559 --> 00:21:00,140
mathematical formulas understood that by

00:20:58,159 --> 00:21:02,559
taking a lot of these mortgages which

00:21:00,140 --> 00:21:05,150
are safe instruments if I can add

00:21:02,559 --> 00:21:07,909
mortgages that are not safe which are

00:21:05,150 --> 00:21:10,309
the subprime if I can add these two

00:21:07,909 --> 00:21:13,100
things together I now have the ability

00:21:10,309 --> 00:21:15,470
of joining these two products together

00:21:13,100 --> 00:21:20,750
and sell it for a higher price and

00:21:15,470 --> 00:21:22,850
therefore trading starts so what ends up

00:21:20,750 --> 00:21:24,919
happening here is that in this

00:21:22,850 --> 00:21:28,750
particular project I was involved in

00:21:24,919 --> 00:21:32,390
which was around 2005-2006 time frame no

00:21:28,750 --> 00:21:38,830
yeah 2005-2006 I used to work for a bank

00:21:32,390 --> 00:21:43,220
called RBS RBS is Royal Bank of Scotland

00:21:38,830 --> 00:21:47,809
which had one of the largest number of

00:21:43,220 --> 00:21:50,690
deals in terms of being able to have it

00:21:47,809 --> 00:21:52,940
on the book which is subprime mortgages

00:21:50,690 --> 00:21:56,750
so they had one of the largest number of

00:21:52,940 --> 00:22:00,049
deals of CEOs now in this particular CDO

00:21:56,750 --> 00:22:03,830
there was one there's one there was one

00:22:00,049 --> 00:22:05,809
key criteria now as as asked once we all

00:22:03,830 --> 00:22:08,120
went and did all of the due diligence of

00:22:05,809 --> 00:22:09,500
being able to say here is a model here

00:22:08,120 --> 00:22:11,240
is the kind of risk you should be able

00:22:09,500 --> 00:22:12,409
to take and if you package them together

00:22:11,240 --> 00:22:14,570
as a CDO

00:22:12,409 --> 00:22:17,570
this is what we expect you to have

00:22:14,570 --> 00:22:20,750
as the end result of coming out of it in

00:22:17,570 --> 00:22:23,360
terms of profitability and so on except

00:22:20,750 --> 00:22:27,080
for one particular scenario and the one

00:22:23,360 --> 00:22:29,200
particular scenario that we had was RBS

00:22:27,080 --> 00:22:31,730
entered into a deal with Goldman Sachs

00:22:29,200 --> 00:22:34,850
Goldman Sachs came up and they did a

00:22:31,730 --> 00:22:37,970
deal that was so complex that our models

00:22:34,850 --> 00:22:41,389
took seven days to be able to actually

00:22:37,970 --> 00:22:43,159
run so it would take seven days to run

00:22:41,389 --> 00:22:45,440
on top of the portfolio and the

00:22:43,159 --> 00:22:47,809
portfolio kind of looks like this which

00:22:45,440 --> 00:22:49,879
is divided into different parts which is

00:22:47,809 --> 00:22:52,970
underrated and you know rated sort of

00:22:49,879 --> 00:22:55,009
lower a and a triple 1a a triple a is

00:22:52,970 --> 00:22:57,490
the higher rated one things that are

00:22:55,009 --> 00:23:00,980
below that or the lower rated ones and

00:22:57,490 --> 00:23:04,940
so we were kind of trying to verify

00:23:00,980 --> 00:23:06,889
these the market moved so it took seven

00:23:04,940 --> 00:23:09,679
days for you to actually calculate all

00:23:06,889 --> 00:23:11,929
of this that is written in C++ and Java

00:23:09,679 --> 00:23:13,909
and so on but then what would happen is

00:23:11,929 --> 00:23:16,460
that in those seven days by the time you

00:23:13,909 --> 00:23:19,039
would actually price it the market would

00:23:16,460 --> 00:23:22,519
move which means that these underlying

00:23:19,039 --> 00:23:24,889
assets would change value again so every

00:23:22,519 --> 00:23:27,230
time you have to price it it would take

00:23:24,889 --> 00:23:31,070
you a week to price it but by the time

00:23:27,230 --> 00:23:33,919
you price it and bring it out the price

00:23:31,070 --> 00:23:36,830
is old which means that your risk that

00:23:33,919 --> 00:23:41,179
you were taking on your books was always

00:23:36,830 --> 00:23:46,070
incorrect always this was the problem we

00:23:41,179 --> 00:23:47,659
faced so what did we do and what were

00:23:46,070 --> 00:23:50,059
the lessons that we learned on the back

00:23:47,659 --> 00:23:52,070
of it we learned a few lessons the first

00:23:50,059 --> 00:23:54,019
thing we learned was a lot of the stuff

00:23:52,070 --> 00:23:56,570
that we had done with Python which was

00:23:54,019 --> 00:23:59,240
to be run on which was single-threaded

00:23:56,570 --> 00:24:01,100
and which was running on a large system

00:23:59,240 --> 00:24:03,379
even though with multiple cores and all

00:24:01,100 --> 00:24:06,769
of it was still single threaded and as

00:24:03,379 --> 00:24:10,429
soon as we try and run it on a on a

00:24:06,769 --> 00:24:12,529
bigger system which was Intel based we

00:24:10,429 --> 00:24:14,450
still had the same problems the one

00:24:12,529 --> 00:24:17,029
place that we did find that it worked

00:24:14,450 --> 00:24:19,009
was with a power system which is kind of

00:24:17,029 --> 00:24:20,659
interesting but it was a little bit too

00:24:19,009 --> 00:24:22,820
late by the time we got into a power

00:24:20,659 --> 00:24:24,320
system or by the time the the bank

00:24:22,820 --> 00:24:26,980
decided that we should get a power

00:24:24,320 --> 00:24:29,500
system it was a little bit too late

00:24:26,980 --> 00:24:31,840
we did everything we did we did

00:24:29,500 --> 00:24:35,530
everything everything and anything we

00:24:31,840 --> 00:24:38,230
had people from we had people who had

00:24:35,530 --> 00:24:41,530
written the original Saipan numpy code

00:24:38,230 --> 00:24:43,660
to come through and do it because a lot

00:24:41,530 --> 00:24:45,850
of the lot of the locks that we were

00:24:43,660 --> 00:24:48,100
getting was simply because of the fact

00:24:45,850 --> 00:24:51,400
that on the Intel system it would always

00:24:48,100 --> 00:24:53,260
lock and it still does that just the way

00:24:51,400 --> 00:24:55,890
that it has been written but with a

00:24:53,260 --> 00:24:58,179
power system we were able to scale it

00:24:55,890 --> 00:25:01,059
vertically rather than horizontally if

00:24:58,179 --> 00:25:03,940
that makes sense and that's one of the

00:25:01,059 --> 00:25:05,590
things that was a kind of lesson learned

00:25:03,940 --> 00:25:07,360
that's sort of number one but it's not

00:25:05,590 --> 00:25:11,140
the entire lesson that's kind of number

00:25:07,360 --> 00:25:14,950
one um the second thing we had was in

00:25:11,140 --> 00:25:18,340
terms of being able to run your models

00:25:14,950 --> 00:25:20,950
the way that we were doing it we didn't

00:25:18,340 --> 00:25:25,120
because we were using tooling like

00:25:20,950 --> 00:25:27,340
Python and and R we simply did and with

00:25:25,120 --> 00:25:29,380
Excel on top of it we simply did not

00:25:27,340 --> 00:25:32,169
have the bandwidth where we could

00:25:29,380 --> 00:25:34,210
actually go in and collate all of these

00:25:32,169 --> 00:25:36,190
things together and be in a position

00:25:34,210 --> 00:25:38,190
where we could change the model quickly

00:25:36,190 --> 00:25:41,110
with version control and all of that

00:25:38,190 --> 00:25:43,330
that's another lesson that we learned on

00:25:41,110 --> 00:25:46,059
on the back of that was we needed to

00:25:43,330 --> 00:25:49,210
have tooling that allowed you to do this

00:25:46,059 --> 00:25:51,280
from a standpoint of the initial part of

00:25:49,210 --> 00:25:53,140
the pipeline development rather than

00:25:51,280 --> 00:25:55,440
retraining the model and then

00:25:53,140 --> 00:25:58,690
redeploying it on a much larger system

00:25:55,440 --> 00:26:01,270
that's something that you don't get with

00:25:58,690 --> 00:26:03,250
again with a power system we were able

00:26:01,270 --> 00:26:06,820
to solve that particular problem as well

00:26:03,250 --> 00:26:08,230
which we didn't know at that point so

00:26:06,820 --> 00:26:10,750
there were two lessons learned one was

00:26:08,230 --> 00:26:13,150
the lesson around the ability to scale

00:26:10,750 --> 00:26:14,440
vertically versus horizontally what is

00:26:13,150 --> 00:26:15,730
it does anyone know what's the

00:26:14,440 --> 00:26:21,309
difference between vertical and

00:26:15,730 --> 00:26:23,740
horizontal scaling you have to get

00:26:21,309 --> 00:26:26,200
multiple boxes for them right so that's

00:26:23,740 --> 00:26:28,299
one thing we learned which was if he had

00:26:26,200 --> 00:26:30,010
initially started off with something

00:26:28,299 --> 00:26:32,440
like a power system we would have been

00:26:30,010 --> 00:26:35,169
able to do that which we did it was a

00:26:32,440 --> 00:26:39,309
little bit too late for it that was one

00:26:35,169 --> 00:26:40,820
and so a denser system like a power

00:26:39,309 --> 00:26:43,340
system that allows

00:26:40,820 --> 00:26:45,169
you to deploy something where you can

00:26:43,340 --> 00:26:47,600
and if you need more memory or if you

00:26:45,169 --> 00:26:49,850
line or if you need more compute power

00:26:47,600 --> 00:26:52,610
and you can add on to it that's

00:26:49,850 --> 00:26:54,980
something we didn't have the second

00:26:52,610 --> 00:26:57,830
thing around this was obviously the fact

00:26:54,980 --> 00:27:00,110
that if a model as the market changes

00:26:57,830 --> 00:27:02,360
the underlying contribution as the

00:27:00,110 --> 00:27:05,029
underlying instruments change the market

00:27:02,360 --> 00:27:08,029
changes for you to be able to have a

00:27:05,029 --> 00:27:10,880
model learning system that allows you to

00:27:08,029 --> 00:27:13,190
retrain the system on its own quickly is

00:27:10,880 --> 00:27:16,669
something that we did not have at that

00:27:13,190 --> 00:27:19,309
point and that's something again which

00:27:16,669 --> 00:27:21,559
we learn is the ability for the ability

00:27:19,309 --> 00:27:24,740
to have a system that allows you to

00:27:21,559 --> 00:27:26,960
train and retrain the model and have the

00:27:24,740 --> 00:27:29,419
ability to have it version controlled

00:27:26,960 --> 00:27:31,669
within the system without having to

00:27:29,419 --> 00:27:34,129
deploy it across multiple systems again

00:27:31,669 --> 00:27:35,330
that would have been a big advantage as

00:27:34,129 --> 00:27:39,289
well

00:27:35,330 --> 00:27:41,450
one other thing before I before I and I

00:27:39,289 --> 00:27:44,559
know I'm the last one today so one other

00:27:41,450 --> 00:27:46,850
thing which I wanted to keep in mind is

00:27:44,559 --> 00:27:50,840
okay this is being recorded so I'll be

00:27:46,850 --> 00:27:52,820
slightly careful I didn't I yeah okay

00:27:50,840 --> 00:27:55,039
one of the things that you have to keep

00:27:52,820 --> 00:27:57,710
in mind with horizontally scaling

00:27:55,039 --> 00:28:01,250
systems as well as systems and tools

00:27:57,710 --> 00:28:04,340
which use things like Excel is the fact

00:28:01,250 --> 00:28:07,159
that you don't have built-in security

00:28:04,340 --> 00:28:09,710
and monitoring and the reason why you

00:28:07,159 --> 00:28:11,629
were using tools like that was simply

00:28:09,710 --> 00:28:14,480
because we could not like I said we

00:28:11,629 --> 00:28:18,169
could not scale vertically we were

00:28:14,480 --> 00:28:20,269
scaling horizontally now what's that got

00:28:18,169 --> 00:28:22,159
to do what security and monitoring got

00:28:20,269 --> 00:28:26,809
to do with this is that there were

00:28:22,159 --> 00:28:31,100
instances where traders had gone in and

00:28:26,809 --> 00:28:32,269
changed the numbers and it was possible

00:28:31,100 --> 00:28:34,669
for them to do that

00:28:32,269 --> 00:28:36,710
simply because of the fact that this was

00:28:34,669 --> 00:28:39,590
horizontally scaled across multiple

00:28:36,710 --> 00:28:42,649
systems and there was a security lapse

00:28:39,590 --> 00:28:45,500
and being able to control access to all

00:28:42,649 --> 00:28:48,019
of these multiple systems this was

00:28:45,500 --> 00:28:50,600
something again which was found out much

00:28:48,019 --> 00:28:52,340
much later on but it was a life lesson

00:28:50,600 --> 00:28:54,860
to be learned that if you're scaling

00:28:52,340 --> 00:28:57,590
horizontally and especially first

00:28:54,860 --> 00:28:59,720
Kaling across in an HPC type environment

00:28:57,590 --> 00:29:03,290
where you are effectively having agents

00:28:59,720 --> 00:29:05,090
that run on other systems it's you can't

00:29:03,290 --> 00:29:08,600
just decide that this is going to be as

00:29:05,090 --> 00:29:10,490
secure as a primary server it it was

00:29:08,600 --> 00:29:12,140
just something that wasn't even thought

00:29:10,490 --> 00:29:14,570
about it was a problem that nobody

00:29:12,140 --> 00:29:17,030
thought about but it was a problem that

00:29:14,570 --> 00:29:18,950
ended up coming in when we found out

00:29:17,030 --> 00:29:20,510
that we had all of these other agents

00:29:18,950 --> 00:29:24,020
that were running in multiple systems

00:29:20,510 --> 00:29:27,020
and these agents went and there was ways

00:29:24,020 --> 00:29:29,270
of people to go in and kind of change

00:29:27,020 --> 00:29:33,350
those agents to change the numbers on

00:29:29,270 --> 00:29:35,270
the back of it and this is this thing

00:29:33,350 --> 00:29:37,309
came out in a paper which was later on

00:29:35,270 --> 00:29:38,809
published and so on but there's a and I

00:29:37,309 --> 00:29:41,090
can give you the the address of these

00:29:38,809 --> 00:29:44,299
papers and so on but there's a very

00:29:41,090 --> 00:29:47,960
large lesson to be learned out of this

00:29:44,299 --> 00:29:50,090
so and I'm completely out of time as he

00:29:47,960 --> 00:29:53,600
has just mentioned so what I'm gonna do

00:29:50,090 --> 00:29:56,090
is I want to leave you with three things

00:29:53,600 --> 00:29:58,570
to keep in mind I'm more than happy for

00:29:56,090 --> 00:30:01,220
you guys to ask me specific questions on

00:29:58,570 --> 00:30:03,350
any one of this but three things to keep

00:30:01,220 --> 00:30:05,240
in mind which is one is if you move away

00:30:03,350 --> 00:30:07,100
from academia and do this in the

00:30:05,240 --> 00:30:10,070
industry which is what we do and which

00:30:07,100 --> 00:30:11,990
is what I did for a really long time the

00:30:10,070 --> 00:30:13,820
kind of problems that you face are

00:30:11,990 --> 00:30:16,460
different from what you would face in a

00:30:13,820 --> 00:30:18,410
much more secure closed environment

00:30:16,460 --> 00:30:21,530
that's number one the second thing is

00:30:18,410 --> 00:30:23,630
the ability for tools to be you will

00:30:21,530 --> 00:30:25,610
always have a difference in tools and

00:30:23,630 --> 00:30:28,520
the kind of tools that you have that you

00:30:25,610 --> 00:30:31,040
use for a small model learning

00:30:28,520 --> 00:30:32,720
environment might not be the same tool

00:30:31,040 --> 00:30:34,700
that you can use for a production

00:30:32,720 --> 00:30:37,250
environment where your model needs to

00:30:34,700 --> 00:30:38,480
work with much larger datasets where

00:30:37,250 --> 00:30:40,940
your model needs to be in a position

00:30:38,480 --> 00:30:42,890
where it is able to be retrained and

00:30:40,940 --> 00:30:45,169
deployed very very quickly and if you

00:30:42,890 --> 00:30:47,809
have a horizontally scaling system that

00:30:45,169 --> 00:30:50,750
makes it much more harder the third

00:30:47,809 --> 00:30:52,910
thing is security and monitoring and

00:30:50,750 --> 00:30:56,900
that's something with a large number of

00:30:52,910 --> 00:31:01,040
HPC systems in a in any kind of data

00:30:56,900 --> 00:31:03,410
center you will always have that as a as

00:31:01,040 --> 00:31:06,980
not really a bottleneck but you really

00:31:03,410 --> 00:31:08,090
have that as something that will that

00:31:06,980 --> 00:31:10,310
needs to be kept in

00:31:08,090 --> 00:31:12,050
when you're sort of retraining and

00:31:10,310 --> 00:31:13,940
writing and doing your development on

00:31:12,050 --> 00:31:17,990
these and this is just some lessons

00:31:13,940 --> 00:31:19,430
learned from a project that was that was

00:31:17,990 --> 00:31:23,180
part of the sort of biggest crash

00:31:19,430 --> 00:31:25,580
economy crash that we had at least in

00:31:23,180 --> 00:31:28,040
the last hundred years so that's all I

00:31:25,580 --> 00:31:29,330
have to say and thank you very much

00:31:28,040 --> 00:31:33,990
thank you

00:31:29,330 --> 00:31:33,990

YouTube URL: https://www.youtube.com/watch?v=MuJfYB54064


