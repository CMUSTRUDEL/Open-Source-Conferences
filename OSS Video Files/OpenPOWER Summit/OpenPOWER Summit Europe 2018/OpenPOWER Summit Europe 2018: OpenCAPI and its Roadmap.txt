Title: OpenPOWER Summit Europe 2018: OpenCAPI and its Roadmap
Publication date: 2019-02-07
Playlist: OpenPOWER Summit Europe 2018
Description: 
	Myron Slota, President, OpenCAPI Consortium, speaks at OpenPOWER Summit Europe 2018.

For more information, please visit: https://openpowerfoundation.org/summit-2018-10-eu/
Captions: 
	00:00:00,030 --> 00:00:05,279
okay let me introduce myself my Renu Oda

00:00:02,730 --> 00:00:07,319
I've been with IBM for geez maybe thirty

00:00:05,279 --> 00:00:09,240
four years now so I started out my

00:00:07,319 --> 00:00:11,190
career in silicon development technology

00:00:09,240 --> 00:00:12,750
up in Fishkill New York what we've done

00:00:11,190 --> 00:00:14,969
you know we do a lot of our silicon

00:00:12,750 --> 00:00:17,190
technology development there and then

00:00:14,969 --> 00:00:19,170
other part of the of the career has been

00:00:17,190 --> 00:00:22,710
spent in Austin doing microprocessor

00:00:19,170 --> 00:00:24,779
design and and most recently I've been

00:00:22,710 --> 00:00:26,400
spending a lot of my energy on this open

00:00:24,779 --> 00:00:29,550
initiative that IBM but created no

00:00:26,400 --> 00:00:31,260
back-end I guess around 2013 I'd say and

00:00:29,550 --> 00:00:34,739
so I've been spending my time on that

00:00:31,260 --> 00:00:36,809
since then but my specific talk here

00:00:34,739 --> 00:00:39,570
today is about open copy and the roadmap

00:00:36,809 --> 00:00:39,840
associated with open capi a reality

00:00:39,570 --> 00:00:41,280
check

00:00:39,840 --> 00:00:43,379
I don't know how many of you know that

00:00:41,280 --> 00:00:45,719
in the real world when you create a

00:00:43,379 --> 00:00:47,579
roadmap you know you start here and you

00:00:45,719 --> 00:00:48,180
say I want to get here but it's never a

00:00:47,579 --> 00:00:49,590
straight line

00:00:48,180 --> 00:00:50,520
usually you kind of bounce around you

00:00:49,590 --> 00:00:51,899
know it's a little bit like the Dow

00:00:50,520 --> 00:00:54,750
Jones and all these other places right

00:00:51,899 --> 00:00:57,719
before you get there but nonetheless we

00:00:54,750 --> 00:00:59,340
do eventually get there so on this tile

00:00:57,719 --> 00:01:00,840
typically by the way is what we show

00:00:59,340 --> 00:01:02,699
with most of our presentations for open

00:01:00,840 --> 00:01:03,000
copy on the bottom of the screen by the

00:01:02,699 --> 00:01:06,390
way

00:01:03,000 --> 00:01:07,920
AMD Google IBM etc this is the current

00:01:06,390 --> 00:01:11,790
board level members today in the

00:01:07,920 --> 00:01:14,070
consortium that exists so what I want to

00:01:11,790 --> 00:01:15,420
do today is hit these topics and to get

00:01:14,070 --> 00:01:17,790
a good understanding of what the roadmap

00:01:15,420 --> 00:01:18,930
is and why we ended up where it is you

00:01:17,790 --> 00:01:20,640
kind of have to understand what's going

00:01:18,930 --> 00:01:23,280
on in the industry I mean that's that's

00:01:20,640 --> 00:01:24,750
that's key right because that is the

00:01:23,280 --> 00:01:26,490
industry that we want to target and we

00:01:24,750 --> 00:01:27,990
want understand the industry so before

00:01:26,490 --> 00:01:29,280
you go ahead and architect something you

00:01:27,990 --> 00:01:32,250
know it's good to understand it makes

00:01:29,280 --> 00:01:34,079
sense and then we'll eventually talk

00:01:32,250 --> 00:01:36,869
about where we started and how we ended

00:01:34,079 --> 00:01:38,579
up on open capi so we had a technology

00:01:36,869 --> 00:01:40,979
girl Cappy which we start on power8

00:01:38,579 --> 00:01:42,450
which I'll spend more time on that and

00:01:40,979 --> 00:01:45,299
eventually we migrated to something

00:01:42,450 --> 00:01:47,009
called open Cappy yeah we'll talk about

00:01:45,299 --> 00:01:48,240
the architectures benefits and the

00:01:47,009 --> 00:01:51,420
consortium itself for all this

00:01:48,240 --> 00:01:52,829
information is housed and we'll go over

00:01:51,420 --> 00:01:56,540
through some potential solutions that

00:01:52,829 --> 00:01:58,860
could leverage the open Cappy technology

00:01:56,540 --> 00:02:01,790
and so ok

00:01:58,860 --> 00:02:04,350
so let's talk about the industry um

00:02:01,790 --> 00:02:05,850
certainly things haven't slowed down all

00:02:04,350 --> 00:02:07,649
right was the emergence of things like

00:02:05,850 --> 00:02:10,619
artificial intelligence and cognitive

00:02:07,649 --> 00:02:13,500
computing etc and then you've heard

00:02:10,619 --> 00:02:14,050
about all the deep analytics tons and

00:02:13,500 --> 00:02:17,230
tons of day

00:02:14,050 --> 00:02:19,420
out there right in fact even I heard it

00:02:17,230 --> 00:02:21,490
said by Ginni Rometty don't quote me on

00:02:19,420 --> 00:02:23,920
this one but I think it's like only 20%

00:02:21,490 --> 00:02:25,510
of the data is out on the web and

00:02:23,920 --> 00:02:27,970
actually a bulk of it isn't even out

00:02:25,510 --> 00:02:29,320
there but it is out there someplace the

00:02:27,970 --> 00:02:30,820
question is how do you leverage all that

00:02:29,320 --> 00:02:33,250
data alright so there's tons of data

00:02:30,820 --> 00:02:34,540
being generated but it's good that if

00:02:33,250 --> 00:02:35,940
you get your arms around this that you

00:02:34,540 --> 00:02:38,320
could leverage that to your advantage

00:02:35,940 --> 00:02:41,950
this next bull is very important it's

00:02:38,320 --> 00:02:43,450
Moore's law now we started touting we at

00:02:41,950 --> 00:02:45,670
IBM start telling that Moore's law is

00:02:43,450 --> 00:02:48,310
dead we started saying this maybe at

00:02:45,670 --> 00:02:50,590
least a couple of years ago but we had a

00:02:48,310 --> 00:02:52,570
sense that because we were doing silicon

00:02:50,590 --> 00:02:53,920
technology development ourselves we

00:02:52,570 --> 00:02:56,260
started to see the performance of

00:02:53,920 --> 00:02:58,810
silicon kneeing off and that was

00:02:56,260 --> 00:02:59,980
becoming obvious and so when we say

00:02:58,810 --> 00:03:02,200
Moore's law is dead

00:02:59,980 --> 00:03:05,080
it's a stated in the view of a

00:03:02,200 --> 00:03:06,490
traditional sense you know in the past

00:03:05,080 --> 00:03:08,770
we would take a silicon design

00:03:06,490 --> 00:03:10,510
microprocessor design take that same

00:03:08,770 --> 00:03:13,570
design and just migrate into the next

00:03:10,510 --> 00:03:15,520
technology and boom there you go you had

00:03:13,570 --> 00:03:17,590
density benefits you had performance

00:03:15,520 --> 00:03:20,290
data fits that life was beautiful right

00:03:17,590 --> 00:03:22,209
and that went on for a long time so most

00:03:20,290 --> 00:03:25,780
recently that's not happening now in

00:03:22,209 --> 00:03:28,770
fact a lot of work is done before an

00:03:25,780 --> 00:03:31,030
investment is made to make a silicon fat

00:03:28,770 --> 00:03:33,310
back in the good old days it was less

00:03:31,030 --> 00:03:35,320
than a billion dollars and then maybe

00:03:33,310 --> 00:03:37,570
about I don't know about eight years ago

00:03:35,320 --> 00:03:40,150
it was like three billion today cost

00:03:37,570 --> 00:03:41,260
about 10 billion to make a fab before

00:03:40,150 --> 00:03:43,630
you spend that kind of money you really

00:03:41,260 --> 00:03:44,830
got to think about it right and you want

00:03:43,630 --> 00:03:46,989
to make sure you get your return your

00:03:44,830 --> 00:03:48,520
investment so the fab business is

00:03:46,989 --> 00:03:51,730
becoming a little challenged in that

00:03:48,520 --> 00:03:54,160
sense but Moore's Law is from that

00:03:51,730 --> 00:03:56,709
traditional silicon scaling point of

00:03:54,160 --> 00:04:02,680
view is dead it's starting to it really

00:03:56,709 --> 00:04:05,620
significantly is need off now what's

00:04:02,680 --> 00:04:08,580
happened then and what IBM started to

00:04:05,620 --> 00:04:10,690
think and this and you gotta remember

00:04:08,580 --> 00:04:13,690
microprocessor design cycles are about

00:04:10,690 --> 00:04:15,160
five years so I'll get into this a

00:04:13,690 --> 00:04:17,200
little bit but we introduced some

00:04:15,160 --> 00:04:19,480
concepts here on what we calls power

00:04:17,200 --> 00:04:22,390
eight the last generation microprocessor

00:04:19,480 --> 00:04:23,710
so when we did that in 2014 you got to

00:04:22,390 --> 00:04:27,220
remember we started thinking about this

00:04:23,710 --> 00:04:27,880
five years before that okay so that's

00:04:27,220 --> 00:04:29,530
when we start

00:04:27,880 --> 00:04:31,600
targeting it says okay we see this

00:04:29,530 --> 00:04:34,180
happening something says there's gonna

00:04:31,600 --> 00:04:36,220
have to be a change industry somehow to

00:04:34,180 --> 00:04:38,380
stay on Moore's law but it's not going

00:04:36,220 --> 00:04:39,730
to be through silicon scaling so we got

00:04:38,380 --> 00:04:41,740
to find another pressure relief valve

00:04:39,730 --> 00:04:44,050
someplace and the more we thought this

00:04:41,740 --> 00:04:46,510
through it just became more and more

00:04:44,050 --> 00:04:50,860
clear at least to us that acceleration

00:04:46,510 --> 00:04:52,720
is going to be the answer okay so now so

00:04:50,860 --> 00:04:55,030
you have this acceleration that's

00:04:52,720 --> 00:04:57,730
becoming kind of like this solution I'll

00:04:55,030 --> 00:05:00,760
say to keep us on on Moore's law all

00:04:57,730 --> 00:05:02,200
right so that's that involved so you

00:05:00,760 --> 00:05:03,610
have the emergence of by the way right

00:05:02,200 --> 00:05:07,000
the emergence of you have hyper scale

00:05:03,610 --> 00:05:09,130
data centers high-performance computing

00:05:07,000 --> 00:05:11,950
art you know AI we talked about that and

00:05:09,130 --> 00:05:14,110
emerging memory and technologies storage

00:05:11,950 --> 00:05:16,540
technologies these are all big factors

00:05:14,110 --> 00:05:19,630
that are going to play profound impacts

00:05:16,540 --> 00:05:21,820
on computing here today and in going

00:05:19,630 --> 00:05:23,980
forward right the one that you want to

00:05:21,820 --> 00:05:25,390
keep your eye on that probably I don't

00:05:23,980 --> 00:05:28,780
know how much it's being talked outside

00:05:25,390 --> 00:05:30,700
industry is this is this storage class

00:05:28,780 --> 00:05:34,600
memory it has different different names

00:05:30,700 --> 00:05:36,310
right but once that starts taking hold

00:05:34,600 --> 00:05:38,140
that's going to change the dynamics so

00:05:36,310 --> 00:05:40,930
the data centers tremendously overnight

00:05:38,140 --> 00:05:42,610
all right today we use a lot DRAM a lot

00:05:40,930 --> 00:05:45,130
of memory inside of data centers but

00:05:42,610 --> 00:05:47,290
once you start getting massive amounts

00:05:45,130 --> 00:05:49,300
of storage and memory near the processor

00:05:47,290 --> 00:05:51,880
the whole dynamics of the whole data

00:05:49,300 --> 00:05:56,290
center is gonna change even from a cost

00:05:51,880 --> 00:05:58,150
performance basis so you know the bottom

00:05:56,290 --> 00:06:00,330
line here is that that these

00:05:58,150 --> 00:06:04,300
accelerators are really going to define

00:06:00,330 --> 00:06:05,590
what's needed in terms of buses because

00:06:04,300 --> 00:06:07,810
you know you're going to need a

00:06:05,590 --> 00:06:10,090
high-performance bus and or if these

00:06:07,810 --> 00:06:11,200
accelerators to be effective I mean the

00:06:10,090 --> 00:06:12,430
bottom line is if you're going to use

00:06:11,200 --> 00:06:14,290
these things you're going to have

00:06:12,430 --> 00:06:16,450
massive amount of data going in and out

00:06:14,290 --> 00:06:19,000
of them and you gotta move quick right

00:06:16,450 --> 00:06:21,310
so that's why you need something like a

00:06:19,000 --> 00:06:23,830
high-performance bus without that you're

00:06:21,310 --> 00:06:25,600
gonna have the next bottleneck right so

00:06:23,830 --> 00:06:27,070
you have these other items come in here

00:06:25,600 --> 00:06:29,320
you have growing Network demand

00:06:27,070 --> 00:06:31,390
you've got coherency requirements

00:06:29,320 --> 00:06:32,410
starting to filter in says wait a minute

00:06:31,390 --> 00:06:34,240
if you got the storage class memory

00:06:32,410 --> 00:06:35,979
stuff coming in and other like

00:06:34,240 --> 00:06:37,780
accelerators because accelerators have

00:06:35,979 --> 00:06:40,270
their own memory be kind of nice to have

00:06:37,780 --> 00:06:41,529
this all as a coherent space and all

00:06:40,270 --> 00:06:43,569
shared coherency

00:06:41,529 --> 00:06:47,229
amongst all these things amongst all of

00:06:43,569 --> 00:06:50,849
accelerators the processor memory etc so

00:06:47,229 --> 00:06:52,989
that that that started emerging and then

00:06:50,849 --> 00:06:53,649
yeah and then we have all these form

00:06:52,989 --> 00:06:58,989
factors

00:06:53,649 --> 00:07:01,179
you know GPUs FPU FPGAs a 6tp use and

00:06:58,989 --> 00:07:02,979
and you have different varieties of

00:07:01,179 --> 00:07:05,109
these accelerators that are keeping into

00:07:02,979 --> 00:07:07,119
the into the data centers but

00:07:05,109 --> 00:07:10,749
nonetheless it's all relevant to what we

00:07:07,119 --> 00:07:12,999
do so one thing that I think iBM is

00:07:10,749 --> 00:07:14,649
fairly proud of is that you have we have

00:07:12,999 --> 00:07:18,639
we've always had a rich and a strong

00:07:14,649 --> 00:07:19,689
leading-edge IO legacy in fact there was

00:07:18,639 --> 00:07:22,089
interesting I was sitting at one of

00:07:19,689 --> 00:07:24,819
these conferences and one of the

00:07:22,089 --> 00:07:26,859
analysts asked Google they say well why

00:07:24,819 --> 00:07:29,349
did you guys why did you guys lean

00:07:26,859 --> 00:07:31,119
toward power and it was one of the

00:07:29,349 --> 00:07:33,399
answers was surprisingly there was the

00:07:31,119 --> 00:07:36,369
first answer was because IBM's i/o

00:07:33,399 --> 00:07:38,469
capability that wasn't exactly the

00:07:36,369 --> 00:07:40,659
answer I was expecting to hear but

00:07:38,469 --> 00:07:42,549
that's what they said so we've always

00:07:40,659 --> 00:07:45,279
had this legacy of having strong i/o

00:07:42,549 --> 00:07:48,189
capability we've always pushed the edge

00:07:45,279 --> 00:07:49,839
of PCIe technology we'll talk about this

00:07:48,189 --> 00:07:51,819
a little bit later but power 9 we got

00:07:49,839 --> 00:07:54,789
Gen 4 out right we're the first to do

00:07:51,819 --> 00:07:57,249
that and then we introduced env link

00:07:54,789 --> 00:07:59,529
some time ago again this is you know

00:07:57,249 --> 00:08:02,860
taking the GPUs is a perfect example of

00:07:59,529 --> 00:08:04,719
accelerators and then we introduced the

00:08:02,860 --> 00:08:08,709
copy and then eventually open Cappy

00:08:04,719 --> 00:08:10,089
which is a new architecture so let me

00:08:08,709 --> 00:08:12,609
start off with the microprocessor

00:08:10,089 --> 00:08:14,169
roadmap from from IBM by the way guys

00:08:12,609 --> 00:08:15,369
feel free to just move up and get a

00:08:14,169 --> 00:08:17,849
chair there's no reason you don't have

00:08:15,369 --> 00:08:20,469
to snap back there and torture yourself

00:08:17,849 --> 00:08:24,249
so this is this is a little bit it with

00:08:20,469 --> 00:08:26,289
the rear view mirror so our power seven

00:08:24,249 --> 00:08:28,029
seven plus power eight now there's

00:08:26,289 --> 00:08:30,909
something I need you to observe from

00:08:28,029 --> 00:08:32,589
this if you look at if you look at what

00:08:30,909 --> 00:08:33,969
we've done in the past typically it was

00:08:32,589 --> 00:08:35,439
the tic-tock and you've guys heard this

00:08:33,969 --> 00:08:37,179
a million times right and this goes back

00:08:35,439 --> 00:08:40,300
to when we were scaling with silicon

00:08:37,179 --> 00:08:41,979
you'd have X and X plus you just moved

00:08:40,300 --> 00:08:43,360
into the next silicon technology and bam

00:08:41,979 --> 00:08:45,999
you had a great you know a better

00:08:43,360 --> 00:08:48,610
processor so we had that power for power

00:08:45,999 --> 00:08:51,370
five power six power seven and then

00:08:48,610 --> 00:08:52,720
power eight something changed this is

00:08:51,370 --> 00:08:55,000
where we started seeing well silicon

00:08:52,720 --> 00:08:56,380
technologies lasting a little bit longer

00:08:55,000 --> 00:08:58,810
and for the investment to get your

00:08:56,380 --> 00:09:00,970
return on investment so instead of just

00:08:58,810 --> 00:09:02,590
going to tick tock tick tock what ended

00:09:00,970 --> 00:09:05,890
up happening is a lot of the designs are

00:09:02,590 --> 00:09:07,450
going into families right so we did the

00:09:05,890 --> 00:09:09,820
same we introduced something called

00:09:07,450 --> 00:09:12,370
power eight and we had our variety of

00:09:09,820 --> 00:09:14,380
chips in power eight and same thing that

00:09:12,370 --> 00:09:16,420
we just announced was power nine and

00:09:14,380 --> 00:09:18,910
we're shipping with power nine today but

00:09:16,420 --> 00:09:21,040
again it was a family of processors and

00:09:18,910 --> 00:09:22,270
we'll talk a little bit about that but

00:09:21,040 --> 00:09:24,190
the bottom line is we have something

00:09:22,270 --> 00:09:26,770
like scale up scale out and there

00:09:24,190 --> 00:09:28,750
vasilich and I the design of the

00:09:26,770 --> 00:09:31,330
processors optimized for these different

00:09:28,750 --> 00:09:32,560
uses of these micro processors so that's

00:09:31,330 --> 00:09:34,990
the first thing you should observe from

00:09:32,560 --> 00:09:36,100
this roadmap that yep this is real proof

00:09:34,990 --> 00:09:37,780
that mmm

00:09:36,100 --> 00:09:39,700
you know the silicon scaling the Moore's

00:09:37,780 --> 00:09:42,160
laws we traditionally know it things

00:09:39,700 --> 00:09:43,900
were changing and so even even the

00:09:42,160 --> 00:09:46,090
design community started to react to

00:09:43,900 --> 00:09:51,430
that even back when we introduced power

00:09:46,090 --> 00:09:54,370
power eight so it was around power eight

00:09:51,430 --> 00:09:56,410
where we said and remember you know it's

00:09:54,370 --> 00:09:58,630
five years before this where we started

00:09:56,410 --> 00:10:00,070
the development cycle that said you know

00:09:58,630 --> 00:10:02,110
something's going to change so we have

00:10:00,070 --> 00:10:03,339
to introduce something here and so

00:10:02,110 --> 00:10:06,550
that's where we started introduced

00:10:03,339 --> 00:10:08,080
something called capi acceleration now

00:10:06,550 --> 00:10:10,800
copies a little bit unique in the sense

00:10:08,080 --> 00:10:13,420
that we run this over the PCI interface

00:10:10,800 --> 00:10:16,330
alright so this is a this is a protocol

00:10:13,420 --> 00:10:18,520
that the five that is used by PCIe

00:10:16,330 --> 00:10:20,830
that's a different protocol is just run

00:10:18,520 --> 00:10:23,680
over that fine but that's where we used

00:10:20,830 --> 00:10:26,440
to run it on capi technology and in a

00:10:23,680 --> 00:10:27,760
power 9 we did an extension of that and

00:10:26,440 --> 00:10:29,830
it's by the way that was Kathy called

00:10:27,760 --> 00:10:32,020
Kathy 1.0 and then we did tap you to

00:10:29,830 --> 00:10:34,210
point on power 9 so that those are the

00:10:32,020 --> 00:10:36,339
ones that run over PCI but then on power

00:10:34,210 --> 00:10:38,230
9 we introduced another one called this

00:10:36,339 --> 00:10:40,570
open Kathy and it is a different

00:10:38,230 --> 00:10:41,860
architecture so let me let me just take

00:10:40,570 --> 00:10:43,360
one step a little bit further and deep

00:10:41,860 --> 00:10:44,860
dive on this because it's important you

00:10:43,360 --> 00:10:47,200
can see where we started reacting to

00:10:44,860 --> 00:10:50,290
this so back from this chart here a

00:10:47,200 --> 00:10:52,630
power a back in the you know 2014 era

00:10:50,290 --> 00:10:54,310
this is how we this is how we started

00:10:52,630 --> 00:10:55,510
attacking this because like I said we

00:10:54,310 --> 00:10:58,810
knew back then that we had to make some

00:10:55,510 --> 00:11:00,580
kind of a change so we introduced this

00:10:58,810 --> 00:11:03,880
coherent interface and this is the one

00:11:00,580 --> 00:11:06,190
that we run over PCI right so empower

00:11:03,880 --> 00:11:08,830
eight that was running at eight gigabit

00:11:06,190 --> 00:11:11,140
per second but that was gen 3

00:11:08,830 --> 00:11:13,900
at the time so we introduced this

00:11:11,140 --> 00:11:17,590
technology this architecture called capi

00:11:13,900 --> 00:11:20,760
one that ran over the PCI and it had it

00:11:17,590 --> 00:11:23,740
had it had some interesting reactions

00:11:20,760 --> 00:11:25,680
okay from the industry but you have to

00:11:23,740 --> 00:11:28,030
keep in mind this is a power centric

00:11:25,680 --> 00:11:31,750
technology right because it is tied to

00:11:28,030 --> 00:11:35,080
power but we saw that when we first

00:11:31,750 --> 00:11:37,540
introduced this that we I want to say

00:11:35,080 --> 00:11:39,730
this it's there was some requirements on

00:11:37,540 --> 00:11:41,830
accelerator design it's in order for the

00:11:39,730 --> 00:11:44,410
processor to talk to the accelerator

00:11:41,830 --> 00:11:47,620
device so if you imagine a GPU or an

00:11:44,410 --> 00:11:49,240
FPGA that was that was working with the

00:11:47,620 --> 00:11:51,520
processor for an accelerating point of

00:11:49,240 --> 00:11:53,440
view so you had they had to talk to each

00:11:51,520 --> 00:11:56,770
other basically right so you had to put

00:11:53,440 --> 00:11:58,450
logic on that accelerator right so what

00:11:56,770 --> 00:12:00,400
we found is this there is something

00:11:58,450 --> 00:12:02,320
called a processor service Li or a PSL

00:12:00,400 --> 00:12:04,300
that had to go on to the accelerator and

00:12:02,320 --> 00:12:06,910
that was you know it's a lot of logic

00:12:04,300 --> 00:12:09,310
that you had to put on to that and and

00:12:06,910 --> 00:12:11,130
plus it was new and it was interesting

00:12:09,310 --> 00:12:14,020
the reaiiy to see how the reaction was

00:12:11,130 --> 00:12:16,150
don't forget in parallel to this we were

00:12:14,020 --> 00:12:18,790
running with with the NV link and

00:12:16,150 --> 00:12:20,080
working with Nvidia so this was kind of

00:12:18,790 --> 00:12:22,090
like thinking this is a general case and

00:12:20,080 --> 00:12:23,920
then we had the specific case where he

00:12:22,090 --> 00:12:27,490
had this GPU and working with nvidia to

00:12:23,920 --> 00:12:30,430
try to run their their GPUs on within

00:12:27,490 --> 00:12:33,610
our systems running up with the

00:12:30,430 --> 00:12:34,510
processor there but one thing that came

00:12:33,610 --> 00:12:36,460
out of all this

00:12:34,510 --> 00:12:38,650
that there was definitely the interest

00:12:36,460 --> 00:12:41,070
in showing that hardware acceleration

00:12:38,650 --> 00:12:43,600
was a need in the industry

00:12:41,070 --> 00:12:48,910
alright and I think at the time power

00:12:43,600 --> 00:12:50,440
eight we called it the box was Minsky so

00:12:48,910 --> 00:12:52,300
we introduced Minsky and that was a big

00:12:50,440 --> 00:12:56,980
success alright this is what the NVIDIA

00:12:52,300 --> 00:12:58,600
GPU over the that bus so so when we

00:12:56,980 --> 00:13:00,850
walked out of power eight that says ok

00:12:58,600 --> 00:13:02,710
the the the you can start seeing the

00:13:00,850 --> 00:13:04,650
industry already shifting and talking

00:13:02,710 --> 00:13:07,090
accelerators at that point in time so

00:13:04,650 --> 00:13:11,410
empower 9 we had to take the next step

00:13:07,090 --> 00:13:15,160
further obviously and so we continue to

00:13:11,410 --> 00:13:17,020
expand our iie o offerings

00:13:15,160 --> 00:13:18,550
I've been came out with the Gen 4 which

00:13:17,020 --> 00:13:21,430
is the first to be out there but the

00:13:18,550 --> 00:13:22,660
PCIe right so obviously should be

00:13:21,430 --> 00:13:25,029
improvement there and then we meet you

00:13:22,660 --> 00:13:26,889
do something called envying - so we took

00:13:25,029 --> 00:13:31,629
it up a notch and with additional

00:13:26,889 --> 00:13:34,000
function and performance so then now we

00:13:31,629 --> 00:13:36,009
had it you know the copy 2.0 is I

00:13:34,000 --> 00:13:38,350
mentioned a bit earlier and capi 2.0 is

00:13:36,009 --> 00:13:40,620
nothing more is just now running over

00:13:38,350 --> 00:13:43,600
the Gen 4 interface the PCIe interface

00:13:40,620 --> 00:13:45,670
so you had inherent better performance

00:13:43,600 --> 00:13:47,829
it was architected slightly different to

00:13:45,670 --> 00:13:50,290
get additional performance but it was

00:13:47,829 --> 00:13:54,220
all good but then at the same time we

00:13:50,290 --> 00:13:57,310
said ok that's that has some of its own

00:13:54,220 --> 00:13:59,410
limitations ok that says ok so now if we

00:13:57,310 --> 00:14:01,899
want to really do this and if you had to

00:13:59,410 --> 00:14:04,620
start with a clean sheet of paper to

00:14:01,899 --> 00:14:07,569
have the perfect bus minimum latency

00:14:04,620 --> 00:14:10,060
best bandwidth how would this look and

00:14:07,569 --> 00:14:12,189
what would you do so that was the

00:14:10,060 --> 00:14:15,250
genesis of what we call this open copy

00:14:12,189 --> 00:14:17,889
now open copy and it is it is confusing

00:14:15,250 --> 00:14:20,079
out there open copy is a different

00:14:17,889 --> 00:14:24,069
architecture it's not the same that runs

00:14:20,079 --> 00:14:25,839
over copy it's different alright so we

00:14:24,069 --> 00:14:28,180
said ok we're gonna we're gonna take a

00:14:25,839 --> 00:14:29,680
look at this and start with a clean

00:14:28,180 --> 00:14:31,689
sheet of paper and see how we can come

00:14:29,680 --> 00:14:34,660
up with something like this so that's

00:14:31,689 --> 00:14:36,930
when we introduced copy 3 and copy 3

00:14:34,660 --> 00:14:42,069
point look I'm sorry open cap III oh and

00:14:36,930 --> 00:14:44,139
3.1 all right so what about open copy so

00:14:42,069 --> 00:14:47,980
what is it and why is this why is this

00:14:44,139 --> 00:14:49,750
interesting so when we went forward and

00:14:47,980 --> 00:14:52,120
architected this thing we had some

00:14:49,750 --> 00:14:55,149
things in mind now this is the shortlist

00:14:52,120 --> 00:14:58,000
okay but it's a heavy duty list it had

00:14:55,149 --> 00:15:00,250
to be open right what we wanted to do is

00:14:58,000 --> 00:15:01,750
make sure that whatever we did do that

00:15:00,250 --> 00:15:04,120
the rest of the industry can use it this

00:15:01,750 --> 00:15:05,889
is not a power centric thing and tagged

00:15:04,120 --> 00:15:09,069
along with that it's you know

00:15:05,889 --> 00:15:10,630
architecture agnostic so an x86 design

00:15:09,069 --> 00:15:12,939
could pick this up an arm design could

00:15:10,630 --> 00:15:14,529
pick this up whatever so we wanted to

00:15:12,939 --> 00:15:16,540
make sure that this was flexible that

00:15:14,529 --> 00:15:19,959
other other parts of the industry can

00:15:16,540 --> 00:15:22,720
use this it is coherent so ties in all

00:15:19,959 --> 00:15:25,120
the the cache memory and and that's

00:15:22,720 --> 00:15:27,790
that's within the system together so you

00:15:25,120 --> 00:15:29,230
have coherency in that space

00:15:27,790 --> 00:15:32,079
it is architecture agnostic as I

00:15:29,230 --> 00:15:33,370
mentioned and what what the team did is

00:15:32,079 --> 00:15:34,990
when the architect is they want to

00:15:33,370 --> 00:15:36,490
minimize and to get the lowest latency

00:15:34,990 --> 00:15:38,530
they want to minimize

00:15:36,490 --> 00:15:41,920
any interference from the software and

00:15:38,530 --> 00:15:43,900
OS and hypervisor etc so they tried to

00:15:41,920 --> 00:15:45,280
take that as much as possible out of the

00:15:43,900 --> 00:15:47,290
equation essentially it is out of the

00:15:45,280 --> 00:15:49,780
equation so there's really no software

00:15:47,290 --> 00:15:51,070
overhead with this and so that's part of

00:15:49,780 --> 00:15:54,060
the reason why we have such great

00:15:51,070 --> 00:15:57,550
latency all right

00:15:54,060 --> 00:15:59,560
programming ease we use a virtual

00:15:57,550 --> 00:16:02,170
addressing which kind of assists there

00:15:59,560 --> 00:16:06,160
you also have benefits with that of

00:16:02,170 --> 00:16:09,700
security implementation we did a

00:16:06,160 --> 00:16:14,530
benchmark we took we took a Xilinx FPGA

00:16:09,700 --> 00:16:16,390
and we put the logic that's required to

00:16:14,530 --> 00:16:19,300
go on to the FPGA to be an accelerator

00:16:16,390 --> 00:16:22,330
and we said how much resources that FPGA

00:16:19,300 --> 00:16:23,920
is taken up when you do this now if you

00:16:22,330 --> 00:16:26,080
remember on the copy we had that that

00:16:23,920 --> 00:16:28,750
processor service later that PSL and

00:16:26,080 --> 00:16:31,180
that took up a decent amount of energy

00:16:28,750 --> 00:16:34,300
off that FPGA but we benchmarked this

00:16:31,180 --> 00:16:36,820
one it was around 5% resources so the

00:16:34,300 --> 00:16:39,160
overhead to program and to put the

00:16:36,820 --> 00:16:41,710
enablement into the FPGA in order to

00:16:39,160 --> 00:16:45,430
talk over open cap is very minimal so 5%

00:16:41,710 --> 00:16:48,130
is not a whole lot storage class memory

00:16:45,430 --> 00:16:49,690
so again we wanted to make sure that the

00:16:48,130 --> 00:16:51,370
interface was flexible enough that you

00:16:49,690 --> 00:16:53,470
could take in these emerging memory

00:16:51,370 --> 00:16:55,930
technologies and the neat thing about

00:16:53,470 --> 00:16:58,630
this is that it's agnostic in a way

00:16:55,930 --> 00:17:00,790
enough that as this technology and we

00:16:58,630 --> 00:17:03,400
don't expect this this storage class

00:17:00,790 --> 00:17:05,320
memory to like show up in day one and

00:17:03,400 --> 00:17:06,940
stay with us forever that way it's

00:17:05,320 --> 00:17:09,400
that's going to evolve too with time

00:17:06,940 --> 00:17:10,900
that storage class memory and so we want

00:17:09,400 --> 00:17:12,520
to make sure that that interface also

00:17:10,900 --> 00:17:14,890
was flexible enough that it can take

00:17:12,520 --> 00:17:16,630
different storage class memories as you

00:17:14,890 --> 00:17:19,330
go into the future too so you wanted

00:17:16,630 --> 00:17:20,470
that flexibility and so you put this all

00:17:19,330 --> 00:17:23,200
together we wanted to make sure was I

00:17:20,470 --> 00:17:25,270
obviously ideal for acceleration and we

00:17:23,200 --> 00:17:26,110
you know when you do this architecture

00:17:25,270 --> 00:17:28,270
definitions

00:17:26,110 --> 00:17:30,430
you always make trade-offs nothing is

00:17:28,270 --> 00:17:31,900
ever straightforward right you can you

00:17:30,430 --> 00:17:33,550
could say okay I want this thing to

00:17:31,900 --> 00:17:34,930
blast over a whole data center on a

00:17:33,550 --> 00:17:37,090
Blastoise within the system however you

00:17:34,930 --> 00:17:39,640
want to do this and so what we we

00:17:37,090 --> 00:17:43,240
consciously decided that we wanted to

00:17:39,640 --> 00:17:46,030
optimize this for within a box all right

00:17:43,240 --> 00:17:48,100
and so when you're focused that way now

00:17:46,030 --> 00:17:49,090
you know where where the boundaries are

00:17:48,100 --> 00:17:50,440
and what you want to do in the

00:17:49,090 --> 00:17:53,500
trade-offs you make is you architect

00:17:50,440 --> 00:17:56,080
this so this is really optimized this

00:17:53,500 --> 00:17:56,950
this open Cappy for within the system

00:17:56,080 --> 00:17:59,559
think of it that way

00:17:56,950 --> 00:18:01,029
within a node and it does support a

00:17:59,559 --> 00:18:02,740
heterogeneous environment I'll show you

00:18:01,029 --> 00:18:06,340
a charge area on use cases very shortly

00:18:02,740 --> 00:18:09,789
here so one of the things that we did

00:18:06,340 --> 00:18:11,980
also because of the low latency it has

00:18:09,789 --> 00:18:15,039
you know it's it has its benefits in

00:18:11,980 --> 00:18:16,450
terms of just the classic DRAM memory so

00:18:15,039 --> 00:18:18,490
in typical Michel processor you have

00:18:16,450 --> 00:18:21,009
bolting off the different buses but one

00:18:18,490 --> 00:18:23,740
of them obviously is your DRAM right the

00:18:21,009 --> 00:18:25,929
microprocessor uses that interface there

00:18:23,740 --> 00:18:28,659
there's this soap and copy was applied

00:18:25,929 --> 00:18:31,629
in that way so we took it one more step

00:18:28,659 --> 00:18:33,340
further to optimize a bit more to get

00:18:31,629 --> 00:18:37,450
the lowest latency even for that use

00:18:33,340 --> 00:18:38,669
case so let's talk about this right next

00:18:37,450 --> 00:18:40,720
here and there it is there's the

00:18:38,669 --> 00:18:43,570
heterogeneous environment so to speak

00:18:40,720 --> 00:18:45,610
right so this bus that comes off the

00:18:43,570 --> 00:18:47,799
processor you know it could be used for

00:18:45,610 --> 00:18:50,080
accelerators your network controllers

00:18:47,799 --> 00:18:53,470
that storage class memory or advanced

00:18:50,080 --> 00:18:56,259
memory that we talked about and storage

00:18:53,470 --> 00:18:58,029
controllers so that interface now is

00:18:56,259 --> 00:19:00,759
something that's flexible enough that it

00:18:58,029 --> 00:19:03,279
could deal with all these these areas of

00:19:00,759 --> 00:19:05,470
the system right and again it was

00:19:03,279 --> 00:19:07,809
optimized within the system to do just

00:19:05,470 --> 00:19:10,899
that and then we took it a step further

00:19:07,809 --> 00:19:13,779
and then that's where I said we took

00:19:10,899 --> 00:19:15,070
this 3.1 well obviously obviously if

00:19:13,779 --> 00:19:16,509
it's good with all these other things

00:19:15,070 --> 00:19:19,120
you know we could take it the next step

00:19:16,509 --> 00:19:22,389
and make that bus really good for the

00:19:19,120 --> 00:19:24,549
DRAM and that you'll see down the road

00:19:22,389 --> 00:19:26,200
we talk about the roadmap we really do

00:19:24,549 --> 00:19:29,169
leverage this in a way that we introduce

00:19:26,200 --> 00:19:31,149
buffer chips now by introducing a memory

00:19:29,169 --> 00:19:33,159
buffer chip and minimizing latency

00:19:31,149 --> 00:19:35,409
through that buffer you're able to like

00:19:33,159 --> 00:19:38,470
you know 2 X the amount of DRAM now the

00:19:35,409 --> 00:19:40,350
processor has access to and so I'll show

00:19:38,470 --> 00:19:43,629
that a little bit in a second here and

00:19:40,350 --> 00:19:45,129
so now this was the beginning of open

00:19:43,629 --> 00:19:48,159
copy so I showed you all those

00:19:45,129 --> 00:19:49,570
attributes so obviously to hit all those

00:19:48,159 --> 00:19:53,379
attributes we did how to start with a

00:19:49,570 --> 00:19:57,429
clean sheet of paper to do that by the

00:19:53,379 --> 00:20:00,100
way if you go on this website and I

00:19:57,429 --> 00:20:03,009
encourage you to do that right it's it's

00:20:00,100 --> 00:20:04,240
this open copy consortium website that's

00:20:03,009 --> 00:20:06,340
the WWE

00:20:04,240 --> 00:20:09,370
Cavan org you go there you could

00:20:06,340 --> 00:20:12,460
download these specs alright now we

00:20:09,370 --> 00:20:15,210
start off with these specifications iBM

00:20:12,460 --> 00:20:17,770
has been in a way they've been

00:20:15,210 --> 00:20:20,290
contributing the specifications to the

00:20:17,770 --> 00:20:22,929
consortium what you see there is that

00:20:20,290 --> 00:20:25,179
contributed document mm we reached the

00:20:22,929 --> 00:20:26,470
starting point so to speak now obviously

00:20:25,179 --> 00:20:28,630
in the consortium to take it a couple

00:20:26,470 --> 00:20:29,830
steps further but that is a very healthy

00:20:28,630 --> 00:20:30,880
starting point so if you want to

00:20:29,830 --> 00:20:32,380
familiarize yourself with the

00:20:30,880 --> 00:20:33,550
architecture you could just go ahead and

00:20:32,380 --> 00:20:34,540
register on the website and just

00:20:33,550 --> 00:20:38,410
download it yourself

00:20:34,540 --> 00:20:40,620
all right nothing special there so now

00:20:38,410 --> 00:20:43,030
these little little spoiler alert right

00:20:40,620 --> 00:20:46,300
yeah there's another one coming

00:20:43,030 --> 00:20:48,400
call 4.0 hmm okay we'll talk about that

00:20:46,300 --> 00:20:50,530
a little bit and then we'll all talk

00:20:48,400 --> 00:20:55,450
about you know even possibly beyond this

00:20:50,530 --> 00:21:00,550
so but nonetheless it does support a

00:20:55,450 --> 00:21:03,280
variety of interfaces use cases so now

00:21:00,550 --> 00:21:04,840
let's talk about looking forward overall

00:21:03,280 --> 00:21:06,840
for the pitcher so if you had to come up

00:21:04,840 --> 00:21:10,630
with summary page this is probably yet

00:21:06,840 --> 00:21:12,190
there's a lot of data here but you can

00:21:10,630 --> 00:21:15,130
see this goes back and this chart goes

00:21:12,190 --> 00:21:17,230
back to power 7 evolves evolves through

00:21:15,130 --> 00:21:19,630
the power 8 and power 9 and you'll see

00:21:17,230 --> 00:21:20,230
something called power 10 now I it's not

00:21:19,630 --> 00:21:21,610
a secret

00:21:20,230 --> 00:21:23,050
you know I BM has announced this and

00:21:21,610 --> 00:21:25,120
talked about this in the public space

00:21:23,050 --> 00:21:27,340
for a while I mean it's pretty

00:21:25,120 --> 00:21:31,150
predictable right we've got you know 4 5

00:21:27,340 --> 00:21:32,500
6 7 8 9 10 so you know so this is

00:21:31,150 --> 00:21:34,210
probably should not be a shocker to

00:21:32,500 --> 00:21:36,820
anybody if anybody follows any of the

00:21:34,210 --> 00:21:39,220
family here but but what I want to do is

00:21:36,820 --> 00:21:41,890
show you I power 9 is where like I say

00:21:39,220 --> 00:21:44,890
introduce the open copy specifically

00:21:41,890 --> 00:21:46,690
here that I talked about on power 9 of

00:21:44,890 --> 00:21:49,630
flavor I remember I talked about this

00:21:46,690 --> 00:21:52,690
chip family so there is a flavor in

00:21:49,630 --> 00:21:55,390
there where we do use this memory buffer

00:21:52,690 --> 00:21:56,800
all right and it falls in this realm

00:21:55,390 --> 00:21:59,740
here and you could look at the dates or

00:21:56,800 --> 00:22:01,450
it's a little bit later obviously but we

00:21:59,740 --> 00:22:04,300
introduced this this new memory

00:22:01,450 --> 00:22:05,830
subsystem and it is a buffer chip now an

00:22:04,300 --> 00:22:08,080
interesting thing is it says well Jesus

00:22:05,830 --> 00:22:10,210
you know know your reaction is if you're

00:22:08,080 --> 00:22:12,700
going to expand memory off the processor

00:22:10,210 --> 00:22:14,800
you put a buffer chip in there now so

00:22:12,700 --> 00:22:16,480
you could put more more memory there

00:22:14,800 --> 00:22:18,190
that's going to slow it down right

00:22:16,480 --> 00:22:20,500
introduce latency

00:22:18,190 --> 00:22:22,150
well actually turns out that the latency

00:22:20,500 --> 00:22:23,560
through that buffer chip to get access

00:22:22,150 --> 00:22:26,410
to this thing back and forth is only

00:22:23,560 --> 00:22:28,810
like it's less than 10 nanoseconds it's

00:22:26,410 --> 00:22:30,850
five to ten nanoseconds I mean that's

00:22:28,810 --> 00:22:33,520
extremely so when I told you extreme low

00:22:30,850 --> 00:22:34,570
latency I wasn't kidding all right and

00:22:33,520 --> 00:22:37,450
you're not going to see that anywhere

00:22:34,570 --> 00:22:38,860
else in industry so it's from that point

00:22:37,450 --> 00:22:40,960
of view it's pretty memory it's pretty

00:22:38,860 --> 00:22:43,690
amazing technology and then the other

00:22:40,960 --> 00:22:46,120
piece is they the introduction down

00:22:43,690 --> 00:22:47,740
there is going to be this for oh alright

00:22:46,120 --> 00:22:49,720
I'll talk a little bit more what the for

00:22:47,740 --> 00:22:53,770
oh this is it's just that it's one tick

00:22:49,720 --> 00:22:56,830
up in terms of optimization for the for

00:22:53,770 --> 00:22:58,660
the interface and then eventually have

00:22:56,830 --> 00:23:01,060
power 10 you're gonna see the speeds

00:22:58,660 --> 00:23:04,120
going up to 32 and 50 plus you know

00:23:01,060 --> 00:23:05,500
gigabit per second Phi's obviously I

00:23:04,120 --> 00:23:07,810
mean the industry's talking about over

00:23:05,500 --> 00:23:10,120
50 gigabit files now for a while but

00:23:07,810 --> 00:23:12,640
you'll see that come off IBM and then

00:23:10,120 --> 00:23:14,890
the advanced you know then you go back

00:23:12,640 --> 00:23:16,800
to yeah well you have cap e 3 cap e 4

00:23:14,890 --> 00:23:19,810
then as a T to be announced another

00:23:16,800 --> 00:23:22,060
version well I bet you guys can guess

00:23:19,810 --> 00:23:23,380
what kappa version that is right but

00:23:22,060 --> 00:23:25,480
anyway like I said this chart by that

00:23:23,380 --> 00:23:27,670
was used in heart and hot chips so this

00:23:25,480 --> 00:23:29,020
this charts already public domain it was

00:23:27,670 --> 00:23:31,210
that this is like less than a month ago

00:23:29,020 --> 00:23:32,620
I think was hot chips so this is one of

00:23:31,210 --> 00:23:34,960
the charts of that deck that IBM showed

00:23:32,620 --> 00:23:37,240
but the point is it's going to continue

00:23:34,960 --> 00:23:39,610
evolved so when you look forward is in

00:23:37,240 --> 00:23:42,010
terms of a roadmap obviously that's your

00:23:39,610 --> 00:23:44,020
intention right so when I started out

00:23:42,010 --> 00:23:45,910
the talk I said you know in the real

00:23:44,020 --> 00:23:48,310
world you say this is where we are today

00:23:45,910 --> 00:23:49,720
but we want to get here ideally you kind

00:23:48,310 --> 00:23:51,790
of kind of do one of these things but

00:23:49,720 --> 00:23:54,100
eventually you do get there so I think

00:23:51,790 --> 00:23:55,810
we found our pace and our steady steady

00:23:54,100 --> 00:23:58,540
point now that we're targeting in our

00:23:55,810 --> 00:24:01,450
vision and it seems that the industry is

00:23:58,540 --> 00:24:04,140
reacting positively says so that's kind

00:24:01,450 --> 00:24:04,140
of where we're headed

00:24:04,440 --> 00:24:09,940
alright so now you talk about well geez

00:24:07,630 --> 00:24:12,490
what's going on with open Cappy hmm all

00:24:09,940 --> 00:24:15,460
these areas there's work going on with

00:24:12,490 --> 00:24:17,140
open caffeine all these areas so you get

00:24:15,460 --> 00:24:19,330
the storage class memory now by the way

00:24:17,140 --> 00:24:21,400
a lot of these guys are members the

00:24:19,330 --> 00:24:22,870
consortium today and a lot of this is

00:24:21,400 --> 00:24:25,810
under I'll call it NDA

00:24:22,870 --> 00:24:27,850
it's confidential but we have a number

00:24:25,810 --> 00:24:30,070
of companies working on storage class

00:24:27,850 --> 00:24:32,080
memory iBM has a lot of interest in the

00:24:30,070 --> 00:24:34,120
space obviously so

00:24:32,080 --> 00:24:35,769
we even reached out to some and working

00:24:34,120 --> 00:24:37,600
with them directly but nonetheless

00:24:35,769 --> 00:24:40,299
there's a lot of work going on storage

00:24:37,600 --> 00:24:41,980
class memory and by the way that's

00:24:40,299 --> 00:24:43,299
another that's another whole talk by

00:24:41,980 --> 00:24:44,799
itself you can spend a whole hour in

00:24:43,299 --> 00:24:46,929
that subject right the different memory

00:24:44,799 --> 00:24:52,210
technologies and what what options there

00:24:46,929 --> 00:24:53,919
are and worse a sweet spot etc the RAM

00:24:52,210 --> 00:24:55,210
memory solutions we talked a little bit

00:24:53,919 --> 00:24:59,559
about that especially with the buffers

00:24:55,210 --> 00:25:01,720
etc FPGAs it's interesting we we had

00:24:59,559 --> 00:25:05,080
this debate and discussion originally

00:25:01,720 --> 00:25:07,000
that says well you know FPGAs are they

00:25:05,080 --> 00:25:08,679
going to be heavily used if don't you

00:25:07,000 --> 00:25:09,970
think that if anybody starts with FPGAs

00:25:08,679 --> 00:25:11,500
they're gonna probably end up on Asics

00:25:09,970 --> 00:25:12,820
anyway because you want the ultimate

00:25:11,500 --> 00:25:15,490
performance so you're gonna get off the

00:25:12,820 --> 00:25:17,679
FPGA well you know it's interesting

00:25:15,490 --> 00:25:19,630
because what we're starting to see is

00:25:17,679 --> 00:25:21,880
that now FPGA is are gonna be around a

00:25:19,630 --> 00:25:23,740
lot they're not it's not like a short

00:25:21,880 --> 00:25:25,179
thing or experimental thing that people

00:25:23,740 --> 00:25:26,380
try and say oh yeah we're gonna do an

00:25:25,179 --> 00:25:27,880
FPGA with because it's easily

00:25:26,380 --> 00:25:29,169
programmable we'll try it if it works

00:25:27,880 --> 00:25:31,809
really great then we'll make an ASIC out

00:25:29,169 --> 00:25:33,880
of it right so what happens is and what

00:25:31,809 --> 00:25:36,370
we're seeing is a lot of these emerging

00:25:33,880 --> 00:25:39,340
areas like artificial intelligence etc

00:25:36,370 --> 00:25:42,519
that stuff is not stable that stuff

00:25:39,340 --> 00:25:44,769
continually to evolve where you're gonna

00:25:42,519 --> 00:25:47,679
have to your accelerators have to evolve

00:25:44,769 --> 00:25:49,690
and one of the built-in inherent

00:25:47,679 --> 00:25:52,659
beauties of FPGA is is that it's

00:25:49,690 --> 00:25:55,360
programmable so as these as these

00:25:52,659 --> 00:25:56,950
acceleration requirements evolve it's so

00:25:55,360 --> 00:25:59,260
much easier to take what you have

00:25:56,950 --> 00:26:01,000
deployed already and change it that way

00:25:59,260 --> 00:26:03,070
as opposed to rip it all out and making

00:26:01,000 --> 00:26:05,950
brand-new hardware and then plugging it

00:26:03,070 --> 00:26:08,380
all back in and debugging etc so this

00:26:05,950 --> 00:26:11,860
FPGA is actually a very usable

00:26:08,380 --> 00:26:13,000
environment for emerging workloads like

00:26:11,860 --> 00:26:14,559
I said if you're doing the same thing

00:26:13,000 --> 00:26:15,909
over and over again it's not going to

00:26:14,559 --> 00:26:17,200
change for the next 20 years that wants

00:26:15,909 --> 00:26:19,059
something different then you want to

00:26:17,200 --> 00:26:20,440
optimize doing a sec but what we're

00:26:19,059 --> 00:26:22,630
seeing is a lot of stuff that's going on

00:26:20,440 --> 00:26:25,179
in these data centers is emerging it's

00:26:22,630 --> 00:26:26,289
not steady enough that says ok yeah

00:26:25,179 --> 00:26:28,149
we've done this for two years we're

00:26:26,289 --> 00:26:31,090
gonna go build an ASIC no not quite

00:26:28,149 --> 00:26:34,299
right so FPGA is I think gonna be around

00:26:31,090 --> 00:26:36,460
for a while and they'll be part of the

00:26:34,299 --> 00:26:38,649
mainstay for a bit

00:26:36,460 --> 00:26:40,690
obviously GPUs are already making their

00:26:38,649 --> 00:26:44,799
way smart Nix you know there's a lot

00:26:40,690 --> 00:26:46,000
going on with network cards the vision

00:26:44,799 --> 00:26:47,470
obviously being that as data

00:26:46,000 --> 00:26:49,480
flown in out of these systems you could

00:26:47,470 --> 00:26:51,250
just do computational analysis right on

00:26:49,480 --> 00:26:52,930
the data as its flying through there's

00:26:51,250 --> 00:26:55,390
no reason why to take up a processors

00:26:52,930 --> 00:26:57,010
time if you could do all that work under

00:26:55,390 --> 00:26:58,780
on the edge some people call edge

00:26:57,010 --> 00:27:00,160
computing whatever but you could do this

00:26:58,780 --> 00:27:01,600
stuff on the edge you know what makes a

00:27:00,160 --> 00:27:03,340
whole lot of sense might bog down the

00:27:01,600 --> 00:27:05,950
CPUs to do something that's you know

00:27:03,340 --> 00:27:07,450
they don't have to do so that's another

00:27:05,950 --> 00:27:08,110
application so the smart NICs are going

00:27:07,450 --> 00:27:10,480
to be interesting

00:27:08,110 --> 00:27:13,390
Asics we talked about that and obviously

00:27:10,480 --> 00:27:15,460
systems you know that you can develop

00:27:13,390 --> 00:27:18,730
systems here that could take advantage

00:27:15,460 --> 00:27:21,580
all the acceleration so here's so here's

00:27:18,730 --> 00:27:25,510
some ideas now so you know you have this

00:27:21,580 --> 00:27:26,500
technology and you say okay you know how

00:27:25,510 --> 00:27:29,200
could we use this or what are some

00:27:26,500 --> 00:27:32,830
possible solutions are or that that you

00:27:29,200 --> 00:27:34,270
can do to leverage with open copy so you

00:27:32,830 --> 00:27:37,030
have all these things going for you

00:27:34,270 --> 00:27:39,160
right the extreme bandwidth the agnostic

00:27:37,030 --> 00:27:42,150
interface and an ability to handle and

00:27:39,160 --> 00:27:44,740
you know the memory buffers etc so

00:27:42,150 --> 00:27:47,100
here's one example where it's just the

00:27:44,740 --> 00:27:49,960
classic you know DDR this is where I

00:27:47,100 --> 00:27:52,870
mentioned that the buffer chip would be

00:27:49,960 --> 00:27:55,780
introduced and if you're at hot chips

00:27:52,870 --> 00:27:57,790
they had slides that IBM shared that

00:27:55,780 --> 00:28:00,430
there's a there's one of these that's in

00:27:57,790 --> 00:28:03,280
that that power nine chip family I

00:28:00,430 --> 00:28:06,790
mentioned that we're going to have that

00:28:03,280 --> 00:28:09,600
buffer chip on one of our systems and so

00:28:06,790 --> 00:28:12,400
we'll introduce it at that point in time

00:28:09,600 --> 00:28:15,600
and again keep in mind the latency

00:28:12,400 --> 00:28:18,790
introduction here it's it's it's minimal

00:28:15,600 --> 00:28:22,000
storage class memory and we talked a lot

00:28:18,790 --> 00:28:23,440
about with that you know like I said

00:28:22,000 --> 00:28:25,420
keep your eye on that space there's a

00:28:23,440 --> 00:28:27,040
lot of work going on today there's a

00:28:25,420 --> 00:28:30,250
number of companies that are dedicated

00:28:27,040 --> 00:28:32,290
just to that cause that that they just

00:28:30,250 --> 00:28:34,030
focusing on storage class memory some of

00:28:32,290 --> 00:28:36,820
the stuff they're ahead of the other

00:28:34,030 --> 00:28:38,260
time some of this memory technology but

00:28:36,820 --> 00:28:40,270
it's just a matter of time before these

00:28:38,260 --> 00:28:42,040
the ones that they're working on now are

00:28:40,270 --> 00:28:45,370
going to pop out you know five ten years

00:28:42,040 --> 00:28:46,990
from now so but you know storage class

00:28:45,370 --> 00:28:48,880
memory obviously is a place where you

00:28:46,990 --> 00:28:50,920
want that lowly and so you want that

00:28:48,880 --> 00:28:52,510
high bandwidth so you could pack in all

00:28:50,920 --> 00:28:56,530
that stuff as close to the processor as

00:28:52,510 --> 00:28:58,120
possible and then tiered memory

00:28:56,530 --> 00:28:59,590
obviously could take all this and you

00:28:58,120 --> 00:29:01,150
could apply it

00:28:59,590 --> 00:29:02,320
you know you could have your storage

00:29:01,150 --> 00:29:04,660
class memory that's a little bit further

00:29:02,320 --> 00:29:06,580
but then you can have your you know your

00:29:04,660 --> 00:29:08,260
your extended DRAM that's close to the

00:29:06,580 --> 00:29:11,470
processor so you have different options

00:29:08,260 --> 00:29:13,750
here how to leverage this you know it's

00:29:11,470 --> 00:29:15,850
interesting one of it was I was having a

00:29:13,750 --> 00:29:17,590
conversation one person they said you

00:29:15,850 --> 00:29:19,120
know if you had to describe open copied

00:29:17,590 --> 00:29:21,850
like to a kindergarten person how would

00:29:19,120 --> 00:29:24,250
you how would you describe this and I

00:29:21,850 --> 00:29:25,870
said well you know if you look at the

00:29:24,250 --> 00:29:27,160
processor this is probably a terrible an

00:29:25,870 --> 00:29:29,680
explanation for a kindergarten person

00:29:27,160 --> 00:29:31,360
but anyway but if you look at the

00:29:29,680 --> 00:29:34,510
processor they have this thing called a

00:29:31,360 --> 00:29:36,790
fabric bus okay now this magical there

00:29:34,510 --> 00:29:39,160
you go now it's gonna garden it's a use

00:29:36,790 --> 00:29:41,950
your imagination now so this this fabric

00:29:39,160 --> 00:29:44,440
bus on the processor is this bus that

00:29:41,950 --> 00:29:46,810
ties all this stuff together so you have

00:29:44,440 --> 00:29:49,540
all these cores all the cash on the

00:29:46,810 --> 00:29:53,110
microprocessor you know your your your

00:29:49,540 --> 00:29:56,320
your your iOS and stuff like this this

00:29:53,110 --> 00:29:59,050
this thing this this fabric bus is the

00:29:56,320 --> 00:30:00,760
magic bus that you know that you become

00:29:59,050 --> 00:30:04,090
inherently part of the microprocessor

00:30:00,760 --> 00:30:07,120
right so if you were able to take a

00:30:04,090 --> 00:30:08,890
cable right and just magically take this

00:30:07,120 --> 00:30:10,690
massive amount of storage or this

00:30:08,890 --> 00:30:12,610
accelerator or whatever and take this

00:30:10,690 --> 00:30:15,580
cable and plug it into that fabric bus

00:30:12,610 --> 00:30:18,550
and become a part of that microprocessor

00:30:15,580 --> 00:30:20,290
all right that'd be pretty cool now

00:30:18,550 --> 00:30:22,150
suddenly it's like you know you are part

00:30:20,290 --> 00:30:23,650
of that microprocessor and oh by the way

00:30:22,150 --> 00:30:25,690
there's things that the processor will

00:30:23,650 --> 00:30:28,240
have access to that it never had before

00:30:25,690 --> 00:30:29,560
like massive amount of storage and and

00:30:28,240 --> 00:30:31,630
that doesn't have to sit there and wait

00:30:29,560 --> 00:30:34,330
for something to come back or whatever

00:30:31,630 --> 00:30:35,860
right so I mean that's that's the whole

00:30:34,330 --> 00:30:38,170
notion here and that's why this wide

00:30:35,860 --> 00:30:39,700
bandwidth very low latency that's why

00:30:38,170 --> 00:30:44,350
it's a special thing to have that

00:30:39,700 --> 00:30:46,210
interface so then you start taking some

00:30:44,350 --> 00:30:47,530
acceleration paradigms here right and

00:30:46,210 --> 00:30:48,370
sort of looking at that okay well that

00:30:47,530 --> 00:30:53,230
was memory now let's talk about

00:30:48,370 --> 00:30:54,700
accelerators right so this is okay we

00:30:53,230 --> 00:30:56,800
call this someone that basic offload

00:30:54,700 --> 00:30:58,450
right so you run it over the bus and

00:30:56,800 --> 00:31:01,030
then you got your accelerator so if

00:30:58,450 --> 00:31:03,520
there's a thing that if you can you know

00:31:01,030 --> 00:31:05,650
your processors and traditionally do a

00:31:03,520 --> 00:31:08,740
lot of crunching a lot of algorithm

00:31:05,650 --> 00:31:11,020
crunching if you could take and shake

00:31:08,740 --> 00:31:12,880
out that one algorithm that takes up a

00:31:11,020 --> 00:31:14,290
lot of the processor time if

00:31:12,880 --> 00:31:16,690
you can move in on the offload engine

00:31:14,290 --> 00:31:18,610
and let that thing stay busy while the

00:31:16,690 --> 00:31:21,610
processors doing other things that be a

00:31:18,610 --> 00:31:24,100
good thing so we call this this basic

00:31:21,610 --> 00:31:25,390
you know you know offloading but you

00:31:24,100 --> 00:31:28,240
know we have examples of deep learning

00:31:25,390 --> 00:31:30,100
etc that yeah that's exactly that's

00:31:28,240 --> 00:31:32,530
exactly a good example of acceleration

00:31:30,100 --> 00:31:33,940
all right so that's a great way to do it

00:31:32,530 --> 00:31:38,230
again you want that interface that's

00:31:33,940 --> 00:31:41,140
gonna be quick wide fast write something

00:31:38,230 --> 00:31:43,120
called egress and ingress this is that

00:31:41,140 --> 00:31:45,580
comment that I made to you that says

00:31:43,120 --> 00:31:47,380
like these smart NICs well heck if you

00:31:45,580 --> 00:31:50,290
got data fine in out of the server

00:31:47,380 --> 00:31:52,480
constantly right why do you want to wait

00:31:50,290 --> 00:31:55,510
for it and tie up the microprocessor to

00:31:52,480 --> 00:31:57,160
do some of the analysis this just you

00:31:55,510 --> 00:31:58,630
know crank on that data as it's rolling

00:31:57,160 --> 00:32:00,670
through all right

00:31:58,630 --> 00:32:02,500
you know I it's interesting I had some

00:32:00,670 --> 00:32:05,380
conversations I don't need to give

00:32:02,500 --> 00:32:07,630
example specifics but you know you know

00:32:05,380 --> 00:32:09,730
things like terrorist threats and things

00:32:07,630 --> 00:32:11,080
like whatever right I mean there's

00:32:09,730 --> 00:32:12,550
different there's a lot of ways to scan

00:32:11,080 --> 00:32:14,050
this data on the Internet there's no

00:32:12,550 --> 00:32:15,730
reason why I to pull into a processor

00:32:14,050 --> 00:32:17,320
and do all this stuff right you could

00:32:15,730 --> 00:32:19,270
you could monitor traffic out there just

00:32:17,320 --> 00:32:21,190
real time man you know this stuff is

00:32:19,270 --> 00:32:23,170
flying through server to server through

00:32:21,190 --> 00:32:25,210
these things just looking for you know

00:32:23,170 --> 00:32:27,220
detection 'he's right you could bucket

00:32:25,210 --> 00:32:29,170
eyes this stuff and say ah that doesn't

00:32:27,220 --> 00:32:30,790
look good you know look at this data you

00:32:29,170 --> 00:32:33,220
know look at this guy's or whatever

00:32:30,790 --> 00:32:35,080
right so there's so this and data going

00:32:33,220 --> 00:32:37,900
out and data coming in yeah you could do

00:32:35,080 --> 00:32:41,590
either way you know so there's there's

00:32:37,900 --> 00:32:43,510
examples there here's an example we

00:32:41,590 --> 00:32:45,280
called Nealon haystack you know this is

00:32:43,510 --> 00:32:47,200
what you do in searches something out

00:32:45,280 --> 00:32:49,810
there that says ok it's a broad area

00:32:47,200 --> 00:32:51,040
right it's gonna take a while but well

00:32:49,810 --> 00:32:52,180
let's give this somebody else to do

00:32:51,040 --> 00:32:55,270
while we're doing other work on the

00:32:52,180 --> 00:32:55,660
processor so yeah that's it makes sense

00:32:55,270 --> 00:32:59,410
right

00:32:55,660 --> 00:33:01,030
and then another case here is ok well

00:32:59,410 --> 00:33:02,850
this is kind of like you know doing the

00:33:01,030 --> 00:33:06,240
data back and forth and there's you know

00:33:02,850 --> 00:33:08,230
no SQL and neo4j or some examples that

00:33:06,240 --> 00:33:11,500
you know doing bi-directional

00:33:08,230 --> 00:33:14,110
transformation stuff right but these are

00:33:11,500 --> 00:33:15,970
these are all possible ways to leverage

00:33:14,110 --> 00:33:17,680
this and you know there's benefits when

00:33:15,970 --> 00:33:22,170
open copy obviously because of its

00:33:17,680 --> 00:33:24,820
latency and its and its performance so

00:33:22,170 --> 00:33:26,590
let me let me break into a different

00:33:24,820 --> 00:33:29,260
conversation now

00:33:26,590 --> 00:33:31,420
you know this is where you want industry

00:33:29,260 --> 00:33:32,680
participation so one of the things that

00:33:31,420 --> 00:33:35,320
you saw those key attributes when I

00:33:32,680 --> 00:33:37,150
started discussion was is open we wanted

00:33:35,320 --> 00:33:38,920
this to be open to any industry player

00:33:37,150 --> 00:33:40,240
that wants to come in and play so it

00:33:38,920 --> 00:33:42,310
could be any clients it could be

00:33:40,240 --> 00:33:43,750
development partners whatever but we

00:33:42,310 --> 00:33:45,730
have this thing called this open Cappy

00:33:43,750 --> 00:33:48,520
consortium and this is where live

00:33:45,730 --> 00:33:50,950
activity is now we're less than let's

00:33:48,520 --> 00:33:53,290
see is that right yeah we're still less

00:33:50,950 --> 00:33:57,520
than 2 years old it's coming up on two

00:33:53,290 --> 00:33:59,470
years pretty soon here so so we've

00:33:57,520 --> 00:34:01,900
formed about two years ago all right and

00:33:59,470 --> 00:34:06,190
the and the original the original five

00:34:01,900 --> 00:34:08,050
was AMD Google Mellanox and micron so if

00:34:06,190 --> 00:34:10,060
you look at those companies it gives you

00:34:08,050 --> 00:34:13,000
a flavor right it kind of gives you a

00:34:10,060 --> 00:34:14,919
sense of even who was interested in this

00:34:13,000 --> 00:34:16,929
right why would they be interested in

00:34:14,919 --> 00:34:18,429
this but that alone if you just stare at

00:34:16,929 --> 00:34:21,790
the names it said it gives you a little

00:34:18,429 --> 00:34:23,950
tell telling sign there that okay so we

00:34:21,790 --> 00:34:26,230
talked about you know accelerators and

00:34:23,950 --> 00:34:28,380
GPUs we talked about you know now you

00:34:26,230 --> 00:34:30,909
know large data centers we talked about

00:34:28,380 --> 00:34:32,620
you know smart Nix and things like that

00:34:30,909 --> 00:34:34,720
I've talked about storage class memories

00:34:32,620 --> 00:34:37,000
blah blah blah you know so you're

00:34:34,720 --> 00:34:38,409
starting to see okay yeah I could see

00:34:37,000 --> 00:34:40,060
why these guys would want to form this

00:34:38,409 --> 00:34:43,690
and you know create something called

00:34:40,060 --> 00:34:44,830
open cavity consortium now the other

00:34:43,690 --> 00:34:46,060
thing that's somebody asks that I always

00:34:44,830 --> 00:34:47,440
get asked this question is oh well jeez

00:34:46,060 --> 00:34:48,429
how come it's just not part of open

00:34:47,440 --> 00:34:50,740
power foundation

00:34:48,429 --> 00:34:53,409
well is it a simple answer because it's

00:34:50,740 --> 00:34:55,120
agnostic you know the hope is that we

00:34:53,409 --> 00:35:00,100
get at least one other microprocessor

00:34:55,120 --> 00:35:04,540
provider to dot this or even even a GPU

00:35:00,100 --> 00:35:06,790
provider to adopt this so it's an open

00:35:04,540 --> 00:35:08,470
area where anybody could participate and

00:35:06,790 --> 00:35:11,200
that's what we're that's what we were

00:35:08,470 --> 00:35:13,600
seeding out there it's well-established

00:35:11,200 --> 00:35:16,210
this point it's about two years now that

00:35:13,600 --> 00:35:17,500
in my view I saw that leading tile I had

00:35:16,210 --> 00:35:19,750
those companies in the bottom that tile

00:35:17,500 --> 00:35:21,490
but these are the what I would call the

00:35:19,750 --> 00:35:24,070
voting members today so it's the

00:35:21,490 --> 00:35:25,660
original five and then Nvidia and

00:35:24,070 --> 00:35:28,240
Western Digital and eiling's jumped in

00:35:25,660 --> 00:35:31,060
right so it they're now part of the

00:35:28,240 --> 00:35:33,970
board for the consortium so they'll also

00:35:31,060 --> 00:35:35,080
have vested interest obviously so by the

00:35:33,970 --> 00:35:36,700
way if you go to our website that I

00:35:35,080 --> 00:35:38,590
mentioned you know all the stuff is on

00:35:36,700 --> 00:35:40,390
there you know we have our bylaws I pair

00:35:38,590 --> 00:35:43,450
our policies than anybody can join

00:35:40,390 --> 00:35:45,220
by the way academia all right so it

00:35:43,450 --> 00:35:48,309
turns out universities can join for free

00:35:45,220 --> 00:35:50,140
as usual for most consortiums right so

00:35:48,309 --> 00:35:51,789
if you guys going to deep dive on this

00:35:50,140 --> 00:35:54,130
stuff and get access to all this

00:35:51,789 --> 00:35:56,799
information you know from the consortium

00:35:54,130 --> 00:35:59,559
you can do that it's free membership so

00:35:56,799 --> 00:36:00,970
you just jump in I'll spend a couple

00:35:59,559 --> 00:36:03,010
seconds here on what some of the

00:36:00,970 --> 00:36:04,599
benefits are you know something called

00:36:03,010 --> 00:36:06,940
technical steering committee today it's

00:36:04,599 --> 00:36:09,279
headed up by Google guy by name of Chris

00:36:06,940 --> 00:36:14,260
Johnson he's like one of theirs you know

00:36:09,279 --> 00:36:17,529
CTO guys he heads up the the the

00:36:14,260 --> 00:36:19,650
technology steering committee and we

00:36:17,529 --> 00:36:23,829
have now the marketing communications

00:36:19,650 --> 00:36:25,210
you know subcommittee right so we decide

00:36:23,829 --> 00:36:27,010
how we want to communicate this get this

00:36:25,210 --> 00:36:29,859
out there so again we're about two years

00:36:27,010 --> 00:36:31,390
into it and so we're finding our way and

00:36:29,859 --> 00:36:35,019
again I encourage you to take a look at

00:36:31,390 --> 00:36:36,519
that website so and you could in those

00:36:35,019 --> 00:36:39,160
specs as I mention a little bit earlier

00:36:36,519 --> 00:36:41,410
that 4.0 spec was posted out there on

00:36:39,160 --> 00:36:43,329
that website too by the way so you can

00:36:41,410 --> 00:36:45,309
go out there take a look at it but all

00:36:43,329 --> 00:36:48,599
you got to do is just register you name

00:36:45,309 --> 00:36:48,599
email then there you go

00:36:48,970 --> 00:36:53,500
so we've had a lot of work groups formed

00:36:51,670 --> 00:36:56,559
actually there's a lot going on in terms

00:36:53,500 --> 00:36:58,150
of specifications you know one of the

00:36:56,559 --> 00:36:59,529
beauties here is that IBM contributes a

00:36:58,150 --> 00:37:01,420
lot of this information the consortium

00:36:59,529 --> 00:37:03,069
so it's not like we're standing with you

00:37:01,420 --> 00:37:06,460
know starting from a clean you know

00:37:03,069 --> 00:37:08,799
piece of paper here so we're excuse me

00:37:06,460 --> 00:37:10,950
and so we're able to get to you know go

00:37:08,799 --> 00:37:14,470
through specs you know quite a bit

00:37:10,950 --> 00:37:16,210
fairly quickly you know what we're

00:37:14,470 --> 00:37:17,710
finding out is it's after you do all the

00:37:16,210 --> 00:37:20,440
debates and discussions the workgroups

00:37:17,710 --> 00:37:22,660
or finding out is this that extra five

00:37:20,440 --> 00:37:24,099
yards the go that says okay now put this

00:37:22,660 --> 00:37:26,349
in a nice little template into something

00:37:24,099 --> 00:37:27,880
nice and clean and post it it said for

00:37:26,349 --> 00:37:30,549
some reason that that last part is very

00:37:27,880 --> 00:37:32,920
difficult the engineers will get through

00:37:30,549 --> 00:37:34,509
at 95 yards man they'll do all that

00:37:32,920 --> 00:37:35,650
other stuff the last five yards you know

00:37:34,509 --> 00:37:37,869
you got to kind of twist it a couple

00:37:35,650 --> 00:37:41,019
arms so we got we were in the frosted

00:37:37,869 --> 00:37:42,430
trying to get to that last step so we

00:37:41,019 --> 00:37:44,799
have this what would cause the TL

00:37:42,430 --> 00:37:47,289
specification the the datalink that

00:37:44,799 --> 00:37:50,829
layer specification five signify

00:37:47,289 --> 00:37:52,750
mechanical the compliance we have an

00:37:50,829 --> 00:37:54,220
enablement workgroup the neat thing

00:37:52,750 --> 00:37:55,930
about joining the consortium is that

00:37:54,220 --> 00:37:57,880
you have access to all the naval men I

00:37:55,930 --> 00:37:59,650
think we have I think I have a chart

00:37:57,880 --> 00:38:01,780
here that that quickly goes through them

00:37:59,650 --> 00:38:03,640
but bottom line is that you have all the

00:38:01,780 --> 00:38:05,680
enablement all the specifications and

00:38:03,640 --> 00:38:08,380
then the 4.0 as I mentioned was added

00:38:05,680 --> 00:38:09,550
very recently so IBM's contribution is

00:38:08,380 --> 00:38:10,870
out there so if you register on our

00:38:09,550 --> 00:38:13,780
website and download it you could get

00:38:10,870 --> 00:38:15,910
all 150 pages and knock yourself out so

00:38:13,780 --> 00:38:19,180
I think it's like a hundred fifty pages

00:38:15,910 --> 00:38:21,850
isn't like that okay so a couple of key

00:38:19,180 --> 00:38:23,680
things up for oh the we're here data

00:38:21,850 --> 00:38:27,340
caching of the system memory then you

00:38:23,680 --> 00:38:28,360
got the address translation caching so

00:38:27,340 --> 00:38:30,310
you know this is some of the

00:38:28,360 --> 00:38:32,170
improvements right that we've taken this

00:38:30,310 --> 00:38:35,220
open Cappy thing and it'll continue

00:38:32,170 --> 00:38:37,540
evolve as we try to improve it further

00:38:35,220 --> 00:38:38,980
here's some of the members and I guess

00:38:37,540 --> 00:38:41,380
the best way to pick this is you got

00:38:38,980 --> 00:38:43,570
accelerators you got you know your your

00:38:41,380 --> 00:38:46,120
memory solutions and products services

00:38:43,570 --> 00:38:47,440
etc so here's the beginning of what we

00:38:46,120 --> 00:38:51,190
hope has eventually become a large

00:38:47,440 --> 00:38:53,530
family and you know that's the way we

00:38:51,190 --> 00:38:54,970
depict it the some of you guys are in

00:38:53,530 --> 00:38:57,340
this audience here that are actually

00:38:54,970 --> 00:39:00,070
members of this already but that is that

00:38:57,340 --> 00:39:02,050
is the family as we know today there is

00:39:00,070 --> 00:39:03,430
the membership levels by the way we have

00:39:02,050 --> 00:39:05,410
a strategic and it goes down to

00:39:03,430 --> 00:39:07,270
something called observing so you know

00:39:05,410 --> 00:39:09,130
for those companies that are recognized

00:39:07,270 --> 00:39:10,920
as corporations 5k is the lowest level

00:39:09,130 --> 00:39:14,320
which is not that bad for an annual

00:39:10,920 --> 00:39:16,060
annual fee for membership and academia

00:39:14,320 --> 00:39:19,360
as I mentioned is nonprofit and

00:39:16,060 --> 00:39:21,850
nonprofits are free but you still have

00:39:19,360 --> 00:39:23,820
access to all the specifications and you

00:39:21,850 --> 00:39:26,980
still could participate in work groups

00:39:23,820 --> 00:39:29,380
and you have all the enablement when you

00:39:26,980 --> 00:39:30,640
join the consortium so you know when

00:39:29,380 --> 00:39:33,130
you're asking what were to get this from

00:39:30,640 --> 00:39:38,290
that from I mean it's it's all there so

00:39:33,130 --> 00:39:39,790
it's a benefit there so here's something

00:39:38,290 --> 00:39:41,440
that this is some of the enablement I

00:39:39,790 --> 00:39:43,540
mean I don't think we need to go through

00:39:41,440 --> 00:39:45,940
it all but that gives you idea of what

00:39:43,540 --> 00:39:48,130
exists today so if you want to start

00:39:45,940 --> 00:39:50,440
going you know start developing for

00:39:48,130 --> 00:39:52,300
accelerators today there's a lot out

00:39:50,440 --> 00:39:55,510
there it's just for FPGAs to get you

00:39:52,300 --> 00:39:57,490
moving on this all right you're gonna

00:39:55,510 --> 00:40:00,760
love my timing five minutes man I can

00:39:57,490 --> 00:40:01,930
nail this one yeah that we have we

00:40:00,760 --> 00:40:04,870
mentioned we've got the different work

00:40:01,930 --> 00:40:06,460
groups now the one that's of interest

00:40:04,870 --> 00:40:08,689
that's going to be next is the

00:40:06,460 --> 00:40:10,609
accelerator or memory work

00:40:08,689 --> 00:40:13,339
so we're gonna be targeting that create

00:40:10,609 --> 00:40:14,689
that shortly but the all these are up

00:40:13,339 --> 00:40:16,669
and running today and then we have two

00:40:14,689 --> 00:40:17,689
committees that we run and of course the

00:40:16,669 --> 00:40:20,839
technical steering committee as I

00:40:17,689 --> 00:40:22,279
mentioned that Google CJ runs that he

00:40:20,839 --> 00:40:26,299
chairs I should say and the you have the

00:40:22,279 --> 00:40:29,029
marketing communications committee and

00:40:26,299 --> 00:40:30,559
then of course there's besides as I

00:40:29,029 --> 00:40:33,589
mentioned besides all this other

00:40:30,559 --> 00:40:35,659
enablement you know we have Smart TV

00:40:33,589 --> 00:40:38,389
I came out with their verification IP to

00:40:35,659 --> 00:40:40,669
enable us there too so it's very simple

00:40:38,389 --> 00:40:42,380
you know I get to join that it's a it's

00:40:40,669 --> 00:40:46,309
a wealth of information on that website

00:40:42,380 --> 00:40:47,809
and the enablement etc so I think that's

00:40:46,309 --> 00:40:50,649
pretty much the end of what I was that

00:40:47,809 --> 00:40:50,649

YouTube URL: https://www.youtube.com/watch?v=K4dhx0ctjkQ


