Title: OpenPOWER Summit NA 2019: OpenPower Solution Builder Community
Publication date: 2019-08-20
Playlist: OpenPOWER Summit NA 2019
Description: 
	Presented by John Pace, Mark III & Christopher Sullivan, Oregon State University

The OpenPower Solution Builder Community is for those who design, implement, operate and maintain Power and OpenPower solution stacks. The Group is self-governing and provides a means for builders to share insights and innovation. There are three primary elements 1) questions & answers and pointers to relevant information, 2) best practices on building hardware-software solution stacks and reference architectures, 3) innovations of applications, libraries, methods, and approaches. The initial focus is solution stacks around the IBM POWER9 AC922 integrated GPU Server but will expand to additional systems and workloads. You do not need to be an OpenPower member to participate. This talk will discuss the community formation, topics that are active, and will solicit participation.
Captions: 
	00:00:00,060 --> 00:00:07,859
Mission Control all right good deal

00:00:03,270 --> 00:00:10,019
okay good afternoon this is a session on

00:00:07,859 --> 00:00:13,009
what we call the open power solution

00:00:10,019 --> 00:00:15,389
builder community that we are forming

00:00:13,009 --> 00:00:18,690
and you will find out that this is not

00:00:15,389 --> 00:00:21,720
IBM lead this is for consumers of the

00:00:18,690 --> 00:00:24,449
technology to form a group so my name is

00:00:21,720 --> 00:00:27,269
Linton Ward we actually have our names

00:00:24,449 --> 00:00:28,680
listed in reverse order so we're gonna

00:00:27,269 --> 00:00:32,700
we're going in reverse alphabetical

00:00:28,680 --> 00:00:36,329
order here so you must you guys know

00:00:32,700 --> 00:00:38,190
Chris Sullivan from Oregon State you may

00:00:36,329 --> 00:00:40,649
or may not know John pace senior data

00:00:38,190 --> 00:00:43,260
scientist at mark 3 one of our partners

00:00:40,649 --> 00:00:49,680
and so they're gonna do most of the

00:00:43,260 --> 00:00:51,449
talking today so we have a problem in in

00:00:49,680 --> 00:00:53,670
describing this problem I don't mean to

00:00:51,449 --> 00:00:56,940
be negative but I want to set a stage of

00:00:53,670 --> 00:00:59,730
reality but first a disclaimer the first

00:00:56,940 --> 00:01:03,059
of this claimer is trying to be cute

00:00:59,730 --> 00:01:05,760
this is not IBM lead this will be a

00:01:03,059 --> 00:01:10,950
community led event and the IBM will be

00:01:05,760 --> 00:01:12,979
a participant contributor supporting and

00:01:10,950 --> 00:01:16,290
so that's what we've been doing so far

00:01:12,979 --> 00:01:17,670
this is for people who are builders now

00:01:16,290 --> 00:01:19,909
when I talked to Jeff she'll he's

00:01:17,670 --> 00:01:23,729
thinking build means software build

00:01:19,909 --> 00:01:26,250
right but this includes the hardware

00:01:23,729 --> 00:01:29,100
stack the the adapters the firmware the

00:01:26,250 --> 00:01:32,759
whole bit single server through multi

00:01:29,100 --> 00:01:35,790
server hardware software and so the guys

00:01:32,759 --> 00:01:38,820
will get into that more and so why are

00:01:35,790 --> 00:01:43,350
we doing this what we are finding is

00:01:38,820 --> 00:01:44,880
that there are there's a lot to know if

00:01:43,350 --> 00:01:47,970
you look at all the vendors that come

00:01:44,880 --> 00:01:51,810
together as a part of a solution the

00:01:47,970 --> 00:01:53,909
knowledge bases if you look at the

00:01:51,810 --> 00:01:56,250
ability to Google some of the answers

00:01:53,909 --> 00:01:59,520
some of the answers simply aren't on the

00:01:56,250 --> 00:02:01,850
internet and some are but there's a lot

00:01:59,520 --> 00:02:04,950
of information so this is really about

00:02:01,850 --> 00:02:07,649
creating the ability to share and

00:02:04,950 --> 00:02:10,270
collaborate and to innovate so we'll see

00:02:07,649 --> 00:02:13,150
a little bit of that here today but

00:02:10,270 --> 00:02:14,500
more to come initially this will be just

00:02:13,150 --> 00:02:17,200
a forum and we'll talk through the

00:02:14,500 --> 00:02:19,240
mechanics so I'm going to give you some

00:02:17,200 --> 00:02:21,670
of the intro introduction stuff Chris is

00:02:19,240 --> 00:02:23,110
going to talk about some of the

00:02:21,670 --> 00:02:25,210
reference architecture and the

00:02:23,110 --> 00:02:29,530
benchmarks and then John's going to talk

00:02:25,210 --> 00:02:33,970
about some of his demos around WL MA and

00:02:29,530 --> 00:02:37,870
power AI vision and then some asks of

00:02:33,970 --> 00:02:40,600
the community I got a I got an email

00:02:37,870 --> 00:02:42,910
today from one of my colleagues is in a

00:02:40,600 --> 00:02:46,900
start-up just left in C state this year

00:02:42,910 --> 00:02:49,600
to form a company his question was where

00:02:46,900 --> 00:02:53,800
do I get or can I get a build of Chrome

00:02:49,600 --> 00:02:56,650
on power Linux of course and so I go to

00:02:53,800 --> 00:02:59,260
Gerrits OS pad tool and oh my gosh

00:02:56,650 --> 00:03:01,300
I actually found one and so I set him

00:02:59,260 --> 00:03:04,840
back an email with the link and that's

00:03:01,300 --> 00:03:08,590
an example from just two days ago of the

00:03:04,840 --> 00:03:10,510
kind of thing that we intend to support

00:03:08,590 --> 00:03:12,780
with this kind of activity there's

00:03:10,510 --> 00:03:18,040
hundreds of these questions they

00:03:12,780 --> 00:03:23,530
PowerPort tune reflector within IBM has

00:03:18,040 --> 00:03:25,510
probably what half dozen a week or so we

00:03:23,530 --> 00:03:28,090
also have everybody's got email threads

00:03:25,510 --> 00:03:31,320
of questions that come in so the ability

00:03:28,090 --> 00:03:33,459
to have a Google searchable means to

00:03:31,320 --> 00:03:35,320
allow the community to support

00:03:33,459 --> 00:03:38,530
themselves we think is a very critical

00:03:35,320 --> 00:03:41,500
answer so we have three goals first goal

00:03:38,530 --> 00:03:44,560
is just best practices so you'll so

00:03:41,500 --> 00:03:46,560
Chris will talk to that a little bit you

00:03:44,560 --> 00:03:49,000
know IBM did a reference architecture

00:03:46,560 --> 00:03:52,420
including full-blown software stack

00:03:49,000 --> 00:03:55,410
clusters it turns out a lot of the

00:03:52,420 --> 00:04:00,190
community wants give me a single server

00:03:55,410 --> 00:04:01,840
give me a stack that's optimized get the

00:04:00,190 --> 00:04:03,820
right lives and all that stuff very

00:04:01,840 --> 00:04:09,790
simple right

00:04:03,820 --> 00:04:12,100
ask a question innovation so today as I

00:04:09,790 --> 00:04:14,350
mentioned lots of knowledge bases

00:04:12,100 --> 00:04:16,660
there's a little bit of a shock moment

00:04:14,350 --> 00:04:18,650
to try to pull apart the knowledge graph

00:04:16,660 --> 00:04:21,260
of what we need to know

00:04:18,650 --> 00:04:23,300
I do you know again this is a Jeff

00:04:21,260 --> 00:04:26,389
shield question wait a minute we already

00:04:23,300 --> 00:04:30,050
have a lot of things out there what is

00:04:26,389 --> 00:04:33,380
the what is this going to do so the idea

00:04:30,050 --> 00:04:36,470
the concept is a place where we can

00:04:33,380 --> 00:04:39,440
formulate a small article with a pointer

00:04:36,470 --> 00:04:42,620
to existing knowledge bases github etc

00:04:39,440 --> 00:04:46,070
not to replace any of those things but

00:04:42,620 --> 00:04:48,889
to assist with the information and

00:04:46,070 --> 00:04:50,330
synthesis of that information so with

00:04:48,889 --> 00:04:53,060
that I'm going to call Chris to come up

00:04:50,330 --> 00:05:00,710
and then we'll go immediately after that

00:04:53,060 --> 00:05:03,139
John will present all right thank you

00:05:00,710 --> 00:05:04,580
for those of you here who don't know I'm

00:05:03,139 --> 00:05:05,720
Chris Sullivan I'm from Oregon State

00:05:04,580 --> 00:05:08,270
University and from the Center for

00:05:05,720 --> 00:05:10,430
Genome Research and bio computing and we

00:05:08,270 --> 00:05:12,470
deal a lot with research computing and

00:05:10,430 --> 00:05:14,600
trying to bring technologies forward

00:05:12,470 --> 00:05:15,710
into this space we get a lot of

00:05:14,600 --> 00:05:17,389
questions

00:05:15,710 --> 00:05:21,889
probably both between myself and Lance

00:05:17,389 --> 00:05:23,330
about how to bring open power IBM based

00:05:21,889 --> 00:05:25,070
hardware power and I'm power8

00:05:23,330 --> 00:05:26,510
into existence so somebody gets a box

00:05:25,070 --> 00:05:28,010
somebody gets something they want to

00:05:26,510 --> 00:05:30,050
turn it on and make it work and they

00:05:28,010 --> 00:05:32,150
have a specific desire to make that work

00:05:30,050 --> 00:05:33,410
and so when you initially go out there

00:05:32,150 --> 00:05:35,930
and you start looking around there's

00:05:33,410 --> 00:05:41,860
very little out there for people to pull

00:05:35,930 --> 00:05:44,419
from so we enucleated a open power

00:05:41,860 --> 00:05:46,160
builders group on the open power

00:05:44,419 --> 00:05:48,949
foundation and there's a forum up there

00:05:46,160 --> 00:05:51,440
and we're starting to put those links

00:05:48,949 --> 00:05:53,150
that you saw on that last slide into the

00:05:51,440 --> 00:05:57,860
different spaces like github and things

00:05:53,150 --> 00:06:00,080
like this we also have started a github

00:05:57,860 --> 00:06:01,849
page where we can start putting all

00:06:00,080 --> 00:06:04,910
kinds of build scripts and things like

00:06:01,849 --> 00:06:07,729
that and we'll look at that here so the

00:06:04,910 --> 00:06:09,289
hardware reference architecture we

00:06:07,729 --> 00:06:10,880
recognize that a lot of people have

00:06:09,289 --> 00:06:13,370
problems at the very beginning with

00:06:10,880 --> 00:06:15,260
these machines racking them realizing

00:06:13,370 --> 00:06:17,060
their power and cooling constraints and

00:06:15,260 --> 00:06:18,199
the types of plugs and the and the

00:06:17,060 --> 00:06:21,530
things that they're gonna need to make

00:06:18,199 --> 00:06:23,120
these things come online network people

00:06:21,530 --> 00:06:25,789
have to start thinking about this ahead

00:06:23,120 --> 00:06:27,110
of time because these machines don't get

00:06:25,789 --> 00:06:29,479
the performance you want unless you can

00:06:27,110 --> 00:06:30,650
keep them hopped up and so people have

00:06:29,479 --> 00:06:32,490
to think about these things ahead of

00:06:30,650 --> 00:06:34,020
time and they don't want to be

00:06:32,490 --> 00:06:36,030
reactive we need them to be proactive

00:06:34,020 --> 00:06:38,310
and proactive means that we have to have

00:06:36,030 --> 00:06:40,110
data out there accessible and in place

00:06:38,310 --> 00:06:41,690
for people to help them make the

00:06:40,110 --> 00:06:45,270
decision before they make a purchase

00:06:41,690 --> 00:06:47,759
okay one of the things that we really

00:06:45,270 --> 00:06:51,449
want to see up there is how to interact

00:06:47,759 --> 00:06:55,710
with the open BMC that's an M and whoops

00:06:51,449 --> 00:06:57,360
and the IP mi because that's the basics

00:06:55,710 --> 00:06:59,370
under which most people with large

00:06:57,360 --> 00:07:01,169
infrastructures start deploying and

00:06:59,370 --> 00:07:02,310
start interacting with technology and

00:07:01,169 --> 00:07:04,259
they don't want to have to have a

00:07:02,310 --> 00:07:05,550
one-off solution they want to be able to

00:07:04,259 --> 00:07:07,530
have a solution that works like all the

00:07:05,550 --> 00:07:09,300
other solutions so they can kickstart

00:07:07,530 --> 00:07:12,380
machines and do all that and we really

00:07:09,300 --> 00:07:15,120
want to put those pieces into the github

00:07:12,380 --> 00:07:16,919
make them accessible and allow people to

00:07:15,120 --> 00:07:20,220
reference them in that forum and see

00:07:16,919 --> 00:07:22,080
that they're accessible there's a lot of

00:07:20,220 --> 00:07:24,180
software that has to make the hardware

00:07:22,080 --> 00:07:25,409
work and we spend a lot of time talking

00:07:24,180 --> 00:07:27,240
with people about how to make the

00:07:25,409 --> 00:07:29,699
operating system do what it needs to do

00:07:27,240 --> 00:07:33,060
to enable the hardware so this is the

00:07:29,699 --> 00:07:34,800
GPU VMs and the the Dockers and all the

00:07:33,060 --> 00:07:36,659
different pieces and how they take

00:07:34,800 --> 00:07:38,909
advantage of those different aspects

00:07:36,659 --> 00:07:41,880
while not losing their performance okay

00:07:38,909 --> 00:07:44,490
and so from the operating system which

00:07:41,880 --> 00:07:45,990
kernel you're running how that kernel is

00:07:44,490 --> 00:07:48,360
interacting with other various pieces of

00:07:45,990 --> 00:07:50,340
hardware external cards that you've put

00:07:48,360 --> 00:07:52,259
in all of this comes into play even

00:07:50,340 --> 00:07:54,690
right down to the raid configurations we

00:07:52,259 --> 00:07:56,039
put on the box people have questions

00:07:54,690 --> 00:07:57,870
about how to get those raids deployed

00:07:56,039 --> 00:07:59,909
especially on Ubuntu some I've got

00:07:57,870 --> 00:08:01,440
people who want to run ZFS on the

00:07:59,909 --> 00:08:03,389
operating system and it's hard to get

00:08:01,440 --> 00:08:05,310
that to go at first and so what we

00:08:03,389 --> 00:08:07,050
really want to have is not just build

00:08:05,310 --> 00:08:08,610
scripts and mechanisms but we want to

00:08:07,050 --> 00:08:10,020
have pathways for people to know

00:08:08,610 --> 00:08:11,669
confidently that they can accomplish

00:08:10,020 --> 00:08:12,990
this and it looks similar to what

00:08:11,669 --> 00:08:16,500
they've done before there may be some

00:08:12,990 --> 00:08:17,969
changes okay lots of different things

00:08:16,500 --> 00:08:20,039
about the file space because in the end

00:08:17,969 --> 00:08:21,630
the file space ultimately is something

00:08:20,039 --> 00:08:23,130
you have to make decisions on before you

00:08:21,630 --> 00:08:24,449
start deploying hardware how is this

00:08:23,130 --> 00:08:25,500
machine gonna interact with the

00:08:24,449 --> 00:08:27,360
different file spaces

00:08:25,500 --> 00:08:29,340
what file spaces are gonna be coming in

00:08:27,360 --> 00:08:31,020
and what networks do you need and so as

00:08:29,340 --> 00:08:34,409
we go up and down the different stacks

00:08:31,020 --> 00:08:37,200
we need to have images for people to

00:08:34,409 --> 00:08:40,110
potentially just grab the image dd it

00:08:37,200 --> 00:08:42,000
onto a disk plug in the hardware as it's

00:08:40,110 --> 00:08:44,699
been defined and started up and watch it

00:08:42,000 --> 00:08:45,840
go and that really lowers the activation

00:08:44,699 --> 00:08:47,610
energy

00:08:45,840 --> 00:08:52,080
we need that searchable so people can

00:08:47,610 --> 00:08:53,700
see that that's accessible there's a lot

00:08:52,080 --> 00:08:55,770
of software related problems and

00:08:53,700 --> 00:08:58,110
information that's not accessible right

00:08:55,770 --> 00:09:00,690
now so solutions out there and all of us

00:08:58,110 --> 00:09:03,480
are going right now to an IBM or that we

00:09:00,690 --> 00:09:05,190
know and we say hey IBM are I'm having a

00:09:03,480 --> 00:09:07,110
problem with this or I need something to

00:09:05,190 --> 00:09:09,900
do this and that person then hits the

00:09:07,110 --> 00:09:12,120
network of IBM errs or knows exactly

00:09:09,900 --> 00:09:14,730
where to go and funnels us into the

00:09:12,120 --> 00:09:17,430
right spot and so what you're doing is

00:09:14,730 --> 00:09:19,110
you have this barrier between you and

00:09:17,430 --> 00:09:22,140
the information and you're creating

00:09:19,110 --> 00:09:24,420
secondary work on IBM to actually get

00:09:22,140 --> 00:09:26,279
that into position for their users we

00:09:24,420 --> 00:09:27,930
need to remove that middle layer we need

00:09:26,279 --> 00:09:29,730
the community become responsible for

00:09:27,930 --> 00:09:31,650
this and we need the community to push

00:09:29,730 --> 00:09:33,779
this forward so you can see there's a

00:09:31,650 --> 00:09:35,430
lot of people in this community holy

00:09:33,779 --> 00:09:38,850
mackerel I mean we're way up there in

00:09:35,430 --> 00:09:41,250
the on the top right and this community

00:09:38,850 --> 00:09:42,839
isn't working together in terms of

00:09:41,250 --> 00:09:44,670
publishing this information and this

00:09:42,839 --> 00:09:46,440
Community Builder group should help us

00:09:44,670 --> 00:09:49,500
do that we would like to see a lot of

00:09:46,440 --> 00:09:51,300
these different groups either putting

00:09:49,500 --> 00:09:53,070
information up or us linking to

00:09:51,300 --> 00:09:55,380
information about what they're doing in

00:09:53,070 --> 00:09:57,300
open power ok there's a lot of different

00:09:55,380 --> 00:10:00,030
software stacks software I keep telling

00:09:57,300 --> 00:10:01,800
people the hardware creates limits to

00:10:00,030 --> 00:10:04,800
what we can do in the software sells the

00:10:01,800 --> 00:10:06,000
hardware ok so in the end the software

00:10:04,800 --> 00:10:07,710
every one of these software stacks you

00:10:06,000 --> 00:10:09,240
see here is what we live for the

00:10:07,710 --> 00:10:12,030
hardware is meaningless without the

00:10:09,240 --> 00:10:14,730
software stacks ok but to make

00:10:12,030 --> 00:10:17,190
tensorflow OpenCV and these things work

00:10:14,730 --> 00:10:18,540
on these machines optimized which is

00:10:17,190 --> 00:10:20,790
what John's going to potentially talk to

00:10:18,540 --> 00:10:23,730
you about takes time and it takes effort

00:10:20,790 --> 00:10:25,800
if you can't know your pathway and what

00:10:23,730 --> 00:10:28,170
we want to do is lower that barrier to

00:10:25,800 --> 00:10:30,150
enter in and take advantage of PI torch

00:10:28,170 --> 00:10:32,100
tensorflow cares all these different

00:10:30,150 --> 00:10:34,200
things with full bandwidth and full

00:10:32,100 --> 00:10:36,000
optimization that means we have to have

00:10:34,200 --> 00:10:39,870
these things already up accessible to

00:10:36,000 --> 00:10:41,700
the community so you know see GRB

00:10:39,870 --> 00:10:44,130
collaborates with IBM pretty heavily and

00:10:41,700 --> 00:10:47,130
we understood that there was a limit to

00:10:44,130 --> 00:10:48,750
the software the software became what

00:10:47,130 --> 00:10:49,800
enabled people to use the technology and

00:10:48,750 --> 00:10:50,970
they weren't going to go over there if

00:10:49,800 --> 00:10:52,470
they didn't see the software was

00:10:50,970 --> 00:10:54,990
accessible already compiled or already

00:10:52,470 --> 00:10:57,180
worked and so we had undergraduates

00:10:54,990 --> 00:10:57,529
spend a lot of time actually not a lot

00:10:57,180 --> 00:10:59,629
of time

00:10:57,529 --> 00:11:03,769
paid him $10 an hour it's just one

00:10:59,629 --> 00:11:04,939
summer ported over 2,000 programs and

00:11:03,769 --> 00:11:06,529
these were the programs that were most

00:11:04,939 --> 00:11:08,209
interesting to us at Oregon State

00:11:06,529 --> 00:11:10,100
University and the ones that we wanted

00:11:08,209 --> 00:11:12,019
but at that point we started having

00:11:10,100 --> 00:11:13,790
groups come to us saying they look port

00:11:12,019 --> 00:11:15,470
this will port this and so what we

00:11:13,790 --> 00:11:19,100
really wanted to see is that there is a

00:11:15,470 --> 00:11:20,089
pathway for people to find technologies

00:11:19,100 --> 00:11:21,920
that have already been poured had

00:11:20,089 --> 00:11:24,170
already been compiled and put faith in

00:11:21,920 --> 00:11:27,680
that or even potentially communicate to

00:11:24,170 --> 00:11:29,240
a community a builder community hey do

00:11:27,680 --> 00:11:30,920
we know if this has been ported hey can

00:11:29,240 --> 00:11:33,740
we get this ported and let the community

00:11:30,920 --> 00:11:35,720
come in and say hey I can do that no

00:11:33,740 --> 00:11:39,829
problem we don't have to rely on IBM at

00:11:35,720 --> 00:11:42,920
every single minute okay you know open

00:11:39,829 --> 00:11:44,689
power cgb we deployed power aid thanks

00:11:42,920 --> 00:11:48,470
to Charlie Charlie got me back involved

00:11:44,689 --> 00:11:50,089
and you know we we actually run a lot of

00:11:48,470 --> 00:11:52,069
different software stacks I want to make

00:11:50,089 --> 00:11:53,600
people understand that we don't care

00:11:52,069 --> 00:11:55,339
what somebody wants to run on these

00:11:53,600 --> 00:11:57,170
boxes we want people to come in with

00:11:55,339 --> 00:11:58,939
their own ideas and we want to enable

00:11:57,170 --> 00:12:00,050
them so that means that I have no idea

00:11:58,939 --> 00:12:01,819
what's going to come at us

00:12:00,050 --> 00:12:03,709
and I'm sure that a lot of groups have

00:12:01,819 --> 00:12:05,389
that as well having the builder

00:12:03,709 --> 00:12:08,569
community means that somebody can take

00:12:05,389 --> 00:12:09,680
that question or whatever it is push it

00:12:08,569 --> 00:12:12,019
out to the community and they have a

00:12:09,680 --> 00:12:14,689
resource to help answer that person

00:12:12,019 --> 00:12:17,360
appropriately and get them through what

00:12:14,689 --> 00:12:19,420
they want so lance helps us provide a

00:12:17,360 --> 00:12:23,269
continuous development environment for

00:12:19,420 --> 00:12:25,009
the sea GRB and Lance here raise your

00:12:23,269 --> 00:12:27,319
hand Lance there we go he runs the open

00:12:25,009 --> 00:12:29,120
source lab and so what I'm showing up

00:12:27,319 --> 00:12:29,569
here is in part with Lance we do this

00:12:29,120 --> 00:12:30,860
together

00:12:29,569 --> 00:12:32,930
and I want to make sure that people

00:12:30,860 --> 00:12:34,610
understand that so he helps us deploy

00:12:32,930 --> 00:12:36,949
this continuous development environment

00:12:34,610 --> 00:12:38,029
he helps maintain our jenkins and all

00:12:36,949 --> 00:12:39,769
the different pieces and a lot of the

00:12:38,029 --> 00:12:41,179
builds are coming out we need that to be

00:12:39,769 --> 00:12:42,889
more visible through the open builder

00:12:41,179 --> 00:12:44,689
community as well we need to make sure

00:12:42,889 --> 00:12:46,250
people are able to see what's going on

00:12:44,689 --> 00:12:50,089
and even ask to be plugged into that

00:12:46,250 --> 00:12:52,279
system right now we we're asking people

00:12:50,089 --> 00:12:53,480
we want to change that that modus of

00:12:52,279 --> 00:12:57,079
operandi

00:12:53,480 --> 00:12:57,889
so yeah whoops that was I suppose to be

00:12:57,079 --> 00:13:01,730
on the github here we go

00:12:57,889 --> 00:13:04,009
so our collaboration with IBM really is

00:13:01,730 --> 00:13:08,559
and has been started with OSU OSL and

00:13:04,009 --> 00:13:10,610
the OSU OSL helps us maintain that we

00:13:08,559 --> 00:13:12,829
started out with page

00:13:10,610 --> 00:13:14,839
is where people can come in and start

00:13:12,829 --> 00:13:17,089
finding some of this information but in

00:13:14,839 --> 00:13:18,800
the end I really like the concept that

00:13:17,089 --> 00:13:22,040
Jeff has put on the last talk which is

00:13:18,800 --> 00:13:24,890
creating a hub where the OSL myself and

00:13:22,040 --> 00:13:28,010
everybody involved can actually plug in

00:13:24,890 --> 00:13:29,839
their piece of this arm or their leg of

00:13:28,010 --> 00:13:32,810
this art of this system and actually

00:13:29,839 --> 00:13:37,480
show how we're all working together and

00:13:32,810 --> 00:13:40,610
how you can you can leverage this so

00:13:37,480 --> 00:13:44,029
let's go here here we go OSU OSL and

00:13:40,610 --> 00:13:46,250
then the GPU request so we realized that

00:13:44,029 --> 00:13:48,860
there was a lot of limits associated to

00:13:46,250 --> 00:13:50,630
people moving onto GPU hardware and we

00:13:48,860 --> 00:13:53,329
constantly got this question because

00:13:50,630 --> 00:13:54,829
we're working in this space and as I

00:13:53,329 --> 00:13:56,959
keep getting these emails and these

00:13:54,829 --> 00:13:58,670
phone calls what we realized was a lot

00:13:56,959 --> 00:13:59,930
of people were just intimidated by them

00:13:58,670 --> 00:14:02,329
and they needed to interact with the

00:13:59,930 --> 00:14:03,589
hardware and so they didn't know what to

00:14:02,329 --> 00:14:05,120
do they didn't know how to do it and

00:14:03,589 --> 00:14:07,820
they were intimidated at the beginning

00:14:05,120 --> 00:14:09,829
of just even compiling and so we created

00:14:07,820 --> 00:14:13,070
this request form so people could get

00:14:09,829 --> 00:14:14,390
access to GPU Hardware on a c9 22s and

00:14:13,070 --> 00:14:17,390
Minsky's all kinds of different things

00:14:14,390 --> 00:14:19,820
and we compile the software for them and

00:14:17,390 --> 00:14:21,769
we deploy that for them so that way they

00:14:19,820 --> 00:14:24,140
can initially start to use it once they

00:14:21,769 --> 00:14:25,699
get on the thing they're in they love

00:14:24,140 --> 00:14:27,620
the performance and they're willing to

00:14:25,699 --> 00:14:29,540
start spending more time compiling their

00:14:27,620 --> 00:14:31,910
own things this is where we find them

00:14:29,540 --> 00:14:34,070
pulling down already compiled packages

00:14:31,910 --> 00:14:36,019
for power8 that aren't optimized for

00:14:34,070 --> 00:14:37,579
power 9 and they don't know about these

00:14:36,019 --> 00:14:39,620
things and that's the problem is that

00:14:37,579 --> 00:14:41,600
the builder community will help us

00:14:39,620 --> 00:14:43,579
communicate to them that they don't want

00:14:41,600 --> 00:14:45,920
to be installing binaries that were

00:14:43,579 --> 00:14:46,970
optimized on the power 8 boxes because

00:14:45,920 --> 00:14:49,790
you're not getting your throughput on

00:14:46,970 --> 00:14:51,560
the power 9 and so we need to show them

00:14:49,790 --> 00:14:53,180
these things exist and how to overcome

00:14:51,560 --> 00:14:54,050
those problems to get back all the value

00:14:53,180 --> 00:14:57,980
that the hardware they've been

00:14:54,050 --> 00:15:00,199
purchasing ok now I have some numbers we

00:14:57,980 --> 00:15:02,209
love benchmarks ok and this is what

00:15:00,199 --> 00:15:04,760
brings people to the table is the

00:15:02,209 --> 00:15:07,670
benchmarks we actually tested the epics

00:15:04,760 --> 00:15:11,120
70601 for AMD we were the group who got

00:15:07,670 --> 00:15:13,190
those in the front of everybody else we

00:15:11,120 --> 00:15:14,089
won those against a really fast Xeon

00:15:13,190 --> 00:15:16,070
that we had a thirty four hundred

00:15:14,089 --> 00:15:19,160
megahertz Xeon and we ran that against

00:15:16,070 --> 00:15:21,140
our power 9 and as you can see the power

00:15:19,160 --> 00:15:23,810
nine wins just with one thread but as

00:15:21,140 --> 00:15:27,410
you thread up oh my goodness

00:15:23,810 --> 00:15:30,680
okay and so what we really want to show

00:15:27,410 --> 00:15:32,480
is that if people join into this builder

00:15:30,680 --> 00:15:33,949
community they're going to be able to

00:15:32,480 --> 00:15:34,999
see these values they're gonna be able

00:15:33,949 --> 00:15:37,129
to take advantage of this and they're

00:15:34,999 --> 00:15:38,720
gonna be able to request these kinds of

00:15:37,129 --> 00:15:40,629
things to be done so they can see what

00:15:38,720 --> 00:15:42,800
the impact is on this different Hardware

00:15:40,629 --> 00:15:45,709
people when I started showing them this

00:15:42,800 --> 00:15:47,779
information immediately started to pay

00:15:45,709 --> 00:15:49,670
attention to the power boxes okay

00:15:47,779 --> 00:15:51,680
because when you're going at less than

00:15:49,670 --> 00:15:54,230
half the time and simulations are going

00:15:51,680 --> 00:15:56,809
for weeks on end in research world you

00:15:54,230 --> 00:16:00,259
just cut the time in half that's massive

00:15:56,809 --> 00:16:05,389
okay so we also did a lot of

00:16:00,259 --> 00:16:07,430
benchmarking on the GPUs and this became

00:16:05,389 --> 00:16:08,930
alarming to us and this is what needs to

00:16:07,430 --> 00:16:12,230
be up in the open builder community as

00:16:08,930 --> 00:16:13,879
well so if you look over here this is

00:16:12,230 --> 00:16:15,319
the total number of events that can be

00:16:13,879 --> 00:16:17,209
accomplished in the same amount of time

00:16:15,319 --> 00:16:19,819
and I want you guys to appreciate that

00:16:17,209 --> 00:16:23,180
that DG x2 is a brand new bleeding edge

00:16:19,819 --> 00:16:25,879
piece of equipment and it's running at

00:16:23,180 --> 00:16:28,839
2.7 gigahertz okay

00:16:25,879 --> 00:16:32,300
compared to our 2.2 s on the others now

00:16:28,839 --> 00:16:36,740
an AC 922 just on the CPU will do almost

00:16:32,300 --> 00:16:40,029
3 to 4x the number of iterations in the

00:16:36,740 --> 00:16:42,139
same amount of time that right there

00:16:40,029 --> 00:16:45,800
fundamentally causes people to start

00:16:42,139 --> 00:16:47,720
buying the power 9 box ok just because I

00:16:45,800 --> 00:16:50,930
mean it's just just pure numbers you've

00:16:47,720 --> 00:16:53,569
got a faster plant Platinum Xeon being

00:16:50,930 --> 00:16:57,199
beat by the power 9 that's been out for

00:16:53,569 --> 00:16:59,959
a couple years ok so as you can see as

00:16:57,199 --> 00:17:02,899
you go down we continue this process

00:16:59,959 --> 00:17:04,880
yeah the empty box kept winning the

00:17:02,899 --> 00:17:06,949
memory and that was an important one it

00:17:04,880 --> 00:17:11,720
was because the benchmark tool that we

00:17:06,949 --> 00:17:13,039
were running had sse sse2 3 for MMX

00:17:11,720 --> 00:17:14,480
based libraries in it and they were

00:17:13,039 --> 00:17:17,419
taking advantage of that on the Intel

00:17:14,480 --> 00:17:18,709
side and so we recognized that people

00:17:17,419 --> 00:17:19,939
will misunderstand these and we need to

00:17:18,709 --> 00:17:22,069
explain these in the open builder

00:17:19,939 --> 00:17:23,870
community when you'd explain why things

00:17:22,069 --> 00:17:25,429
are certain ways and what benefits

00:17:23,870 --> 00:17:26,270
you're getting and why they would be

00:17:25,429 --> 00:17:29,210
looking different with different

00:17:26,270 --> 00:17:33,110
benchmarks as we continue down we broke

00:17:29,210 --> 00:17:35,110
out SSD versus nvme so on on some of

00:17:33,110 --> 00:17:37,090
them we can run SSDs

00:17:35,110 --> 00:17:39,580
the SSD comparison and others we run the

00:17:37,090 --> 00:17:43,030
nvme in all cases I want you guys to

00:17:39,580 --> 00:17:45,850
appreciate the AC 922 wins on the CPU

00:17:43,030 --> 00:17:47,350
and the i/o this is really really

00:17:45,850 --> 00:17:49,990
important because this is the world

00:17:47,350 --> 00:17:53,200
we're moving to data data data data data

00:17:49,990 --> 00:17:56,200
it's only about data and so as you move

00:17:53,200 --> 00:18:00,790
forward CPU and i/o became the limiting

00:17:56,200 --> 00:18:11,260
steps in everything with that I am going

00:18:00,790 --> 00:18:13,000
to hand it off to John thank you

00:18:11,260 --> 00:18:15,040
everyone for coming and thank you Linton

00:18:13,000 --> 00:18:16,630
thank you Chris I am gonna completely

00:18:15,040 --> 00:18:18,010
switch gears here

00:18:16,630 --> 00:18:19,270
Chris's talked about it from the

00:18:18,010 --> 00:18:20,470
hardware perspective I'm gonna talk

00:18:19,270 --> 00:18:22,179
about it from the data science

00:18:20,470 --> 00:18:25,990
perspective any data scientists in here

00:18:22,179 --> 00:18:29,410
oh good very good so I'm gonna approach

00:18:25,990 --> 00:18:32,830
it from the the part that I use all the

00:18:29,410 --> 00:18:34,780
time which is power AI or Watson machine

00:18:32,830 --> 00:18:36,220
learning community edition y'all I'm

00:18:34,780 --> 00:18:38,169
just gonna say power AI if that's okay

00:18:36,220 --> 00:18:39,970
because it's always going to be power AI

00:18:38,169 --> 00:18:42,850
no matter how many times I BM remark

00:18:39,970 --> 00:18:46,240
it's it there's community edition that's

00:18:42,850 --> 00:18:50,260
the one we use power AI we have not had

00:18:46,240 --> 00:18:52,390
any success in moving to the bigger

00:18:50,260 --> 00:18:54,820
version they call it accelerator now but

00:18:52,390 --> 00:18:56,950
if you don't know what power AI is it's

00:18:54,820 --> 00:18:59,590
it's basically a bunch of frameworks

00:18:56,950 --> 00:19:01,870
that come pre-installed on the AC 922

00:18:59,590 --> 00:19:03,309
and they're optimized for the AC 922

00:19:01,870 --> 00:19:05,410
we've got some of the developers back

00:19:03,309 --> 00:19:08,650
there who who work on making these

00:19:05,410 --> 00:19:10,780
things run well on power on the AC 922

00:19:08,650 --> 00:19:12,309
in particular and I'm very grateful for

00:19:10,780 --> 00:19:12,790
them because they make my life much

00:19:12,309 --> 00:19:16,630
easier

00:19:12,790 --> 00:19:19,470
so you can see the the frameworks that

00:19:16,630 --> 00:19:22,030
are there tensorflow Cafe tensor board

00:19:19,470 --> 00:19:26,590
Nvidia Rapids and I'll talk about those

00:19:22,030 --> 00:19:29,650
as we get okay so Community Edition this

00:19:26,590 --> 00:19:31,299
is also known as power AI vision or I'm

00:19:29,650 --> 00:19:34,000
sorry as power AI but then there's

00:19:31,299 --> 00:19:35,890
another one called Watson machine

00:19:34,000 --> 00:19:37,660
learning accelerator which is sort of a

00:19:35,890 --> 00:19:41,980
bundle of several servers put together

00:19:37,660 --> 00:19:43,510
that has spark that's utilized to manage

00:19:41,980 --> 00:19:46,120
the jobs and and all of that other stuff

00:19:43,510 --> 00:19:47,990
it's a little bit bigger than than what

00:19:46,120 --> 00:19:50,690
we dealt with with customers

00:19:47,990 --> 00:19:52,190
okay and power AI vision if you've never

00:19:50,690 --> 00:19:53,900
seen power AI vision I'm going to show

00:19:52,190 --> 00:19:56,480
you some demos of what we've done or

00:19:53,900 --> 00:19:58,340
what I've done with it power a a vision

00:19:56,480 --> 00:20:00,680
is a pretty cool tool which will allow

00:19:58,340 --> 00:20:02,630
you to it's all GUI based allows you to

00:20:00,680 --> 00:20:04,400
import images label them for

00:20:02,630 --> 00:20:06,860
classification object detection

00:20:04,400 --> 00:20:10,040
segmentation and now even action

00:20:06,860 --> 00:20:11,720
detection which is kind of cool and then

00:20:10,040 --> 00:20:13,310
you can you can label them then you can

00:20:11,720 --> 00:20:15,440
create models and then you can even

00:20:13,310 --> 00:20:17,120
export those models which can be used

00:20:15,440 --> 00:20:19,370
for inferencing on you know other

00:20:17,120 --> 00:20:22,130
servers on power servers Intel servers

00:20:19,370 --> 00:20:23,810
FPGAs think even on your phone if you

00:20:22,130 --> 00:20:26,180
are able to get your model down small

00:20:23,810 --> 00:20:29,300
enough so this is fantastic we use power

00:20:26,180 --> 00:20:31,750
AI vision all the time and I think I can

00:20:29,300 --> 00:20:34,820
say this out loud is this being recorded

00:20:31,750 --> 00:20:38,320
okay we use it we use this as a tool to

00:20:34,820 --> 00:20:40,970
be able to sell power servers right

00:20:38,320 --> 00:20:42,770
anything you do visually with computer

00:20:40,970 --> 00:20:45,680
vision people stand up and they notice

00:20:42,770 --> 00:20:47,840
it and with AI power AI vision it makes

00:20:45,680 --> 00:20:50,180
it very easy and so it's a great way to

00:20:47,840 --> 00:20:52,490
talk to customers and show them look

00:20:50,180 --> 00:20:53,960
this is what the AC 922 is capable of

00:20:52,490 --> 00:20:57,590
and then we can go into more detail from

00:20:53,960 --> 00:21:00,680
there okay so with the demos here's what

00:20:57,590 --> 00:21:03,350
I'm hoping to accomplish is from what I

00:21:00,680 --> 00:21:05,060
can tell and from all the workshops that

00:21:03,350 --> 00:21:07,430
have been been out with Charlie and and

00:21:05,060 --> 00:21:09,560
and others there are not a lot of people

00:21:07,430 --> 00:21:12,920
who are doing into n solutions with

00:21:09,560 --> 00:21:15,020
power AI or power AI vision and we need

00:21:12,920 --> 00:21:16,640
that all right this stuff is very good

00:21:15,020 --> 00:21:18,500
it's running on very good hard work but

00:21:16,640 --> 00:21:23,020
we don't have anybody doing end to end

00:21:18,500 --> 00:21:25,370
why is that any answers I don't know

00:21:23,020 --> 00:21:26,930
we're working on it and then we need

00:21:25,370 --> 00:21:27,980
other people to work on it part of the

00:21:26,930 --> 00:21:31,550
problem is I don't think enough people

00:21:27,980 --> 00:21:33,380
know about this and I know that in my

00:21:31,550 --> 00:21:35,720
daily work of using this there are some

00:21:33,380 --> 00:21:39,500
challenges that I hit especially with

00:21:35,720 --> 00:21:41,300
the the frameworks that are out there

00:21:39,500 --> 00:21:44,480
and even things like invidious Rapids

00:21:41,300 --> 00:21:46,160
all the documentation for tensorflow is

00:21:44,480 --> 00:21:48,440
written by Google they write it for

00:21:46,160 --> 00:21:49,790
Intel processors so sometimes it's hard

00:21:48,440 --> 00:21:50,960
to make it work on power because you

00:21:49,790 --> 00:21:52,970
have to change it up a little bit and

00:21:50,960 --> 00:21:56,030
there's no documentation Rapids does the

00:21:52,970 --> 00:21:58,010
same thing so as a community rather than

00:21:56,030 --> 00:21:59,870
me spending four hours figuring out an

00:21:58,010 --> 00:22:01,799
answer one of you guys may have already

00:21:59,870 --> 00:22:03,869
done it okay and we can share

00:22:01,799 --> 00:22:06,629
that if you go to stack overflow and you

00:22:03,869 --> 00:22:08,429
type power nine tensorflow I'm having

00:22:06,629 --> 00:22:10,409
this error you're probably not going to

00:22:08,429 --> 00:22:13,049
get anything that's what we need is

00:22:10,409 --> 00:22:15,029
something like that we can be so much

00:22:13,049 --> 00:22:17,610
more productive we can sell so much more

00:22:15,029 --> 00:22:18,989
power hardware if we are communicating

00:22:17,610 --> 00:22:20,730
with each other there's no telling what

00:22:18,989 --> 00:22:23,190
you guys have done that I could really

00:22:20,730 --> 00:22:26,059
use your information on and vice versa

00:22:23,190 --> 00:22:27,899
we can go a lot further with that so

00:22:26,059 --> 00:22:30,239
what are some of the applications that

00:22:27,899 --> 00:22:33,059
you guys are creating or you see you see

00:22:30,239 --> 00:22:34,379
people creating that are out there you

00:22:33,059 --> 00:22:36,779
know I've seen people do all kinds of

00:22:34,379 --> 00:22:37,980
interesting stuff with it but I'm not

00:22:36,779 --> 00:22:40,379
sure everybody knows about that

00:22:37,980 --> 00:22:41,940
so share our experiences what are the

00:22:40,379 --> 00:22:43,710
challenges that we're facing when

00:22:41,940 --> 00:22:45,359
building our applications I've gone to

00:22:43,710 --> 00:22:47,789
Chris with some of these you know we had

00:22:45,359 --> 00:22:49,739
a customer who I can't say who it is but

00:22:47,789 --> 00:22:51,299
they had an Intel server several Intel

00:22:49,739 --> 00:22:52,590
servers there cancer researchers they

00:22:51,299 --> 00:22:55,169
had this nice pipeline that worked

00:22:52,590 --> 00:22:58,379
fantastic ran great we sold them an AC

00:22:55,169 --> 00:23:01,109
922 they go to rent it it doesn't open

00:22:58,379 --> 00:23:03,899
CL doesn't work on power their pipeline

00:23:01,109 --> 00:23:07,859
doesn't work anymore they're like oh

00:23:03,899 --> 00:23:09,570
yeah send us for more ac 922 so I'm

00:23:07,859 --> 00:23:11,549
being very facetious there but you get

00:23:09,570 --> 00:23:13,350
the idea so we need to work with them to

00:23:11,549 --> 00:23:17,009
overcome those challenges and those

00:23:13,350 --> 00:23:17,489
barriers that are there that's how we do

00:23:17,009 --> 00:23:18,659
this together

00:23:17,489 --> 00:23:20,909
tips and tricks for improving

00:23:18,659 --> 00:23:22,830
applications and then how do our

00:23:20,909 --> 00:23:24,929
applications perform in comparison to

00:23:22,830 --> 00:23:26,039
Intel based solutions Chris mentioned

00:23:24,929 --> 00:23:30,179
that a little bit and I'll show you some

00:23:26,039 --> 00:23:31,499
more and then other documentation so I'm

00:23:30,179 --> 00:23:34,019
going to show you a couple I'm going to

00:23:31,499 --> 00:23:35,850
show you a one bit one-minute video of

00:23:34,019 --> 00:23:38,609
some demos before you start that it's

00:23:35,850 --> 00:23:41,190
gonna be two things one is a demo that I

00:23:38,609 --> 00:23:42,929
did for city of Tyler in Texas it was

00:23:41,190 --> 00:23:44,879
done completely with tower AI vision

00:23:42,929 --> 00:23:47,399
this is object detection it's done from

00:23:44,879 --> 00:23:49,200
a dashcam out of a police car and it

00:23:47,399 --> 00:23:50,100
detects cars and police officers and

00:23:49,200 --> 00:23:51,720
some other things

00:23:50,100 --> 00:23:53,429
it was literally about a two hour

00:23:51,720 --> 00:23:55,590
project and you'll see how well it came

00:23:53,429 --> 00:24:00,690
out quickly the other one is to stone

00:23:55,590 --> 00:24:02,580
where I've created a pipeline that will

00:24:00,690 --> 00:24:04,409
you can take video of a tombstone and

00:24:02,580 --> 00:24:06,809
I'll actually transcribe it and that was

00:24:04,409 --> 00:24:08,460
done using tower AI not AI vision but

00:24:06,809 --> 00:24:10,170
power AI so you'll see both of them so

00:24:08,460 --> 00:24:12,130
go ahead

00:24:10,170 --> 00:24:13,630
and if you've never seen object

00:24:12,130 --> 00:24:15,220
detection what you're gonna see is video

00:24:13,630 --> 00:24:17,260
playing and there's gonna be boxes

00:24:15,220 --> 00:24:19,300
around the various things that it's

00:24:17,260 --> 00:24:24,220
finding it's only one minute but I'll

00:24:19,300 --> 00:24:25,440
kind of explain it as we go wrong screen

00:24:24,220 --> 00:24:34,930
okay

00:24:25,440 --> 00:24:36,490
it's not up there awesome demo huh it is

00:24:34,930 --> 00:24:45,610
a little sandy yeah you'll see the cars

00:24:36,490 --> 00:24:55,180
going by in a second yeah it's agile I

00:24:45,610 --> 00:24:56,650
am so this is the dashcam video each of

00:24:55,180 --> 00:24:58,530
the different boxes that you see they're

00:24:56,650 --> 00:25:01,000
like the paint one is finding your truck

00:24:58,530 --> 00:25:04,330
yellow is finding a person these are

00:25:01,000 --> 00:25:06,580
cops working in an accident that

00:25:04,330 --> 00:25:08,950
happened it literally this was done in

00:25:06,580 --> 00:25:10,360
two hours I took other video from from

00:25:08,950 --> 00:25:13,690
YouTube and some other stuff we labeled

00:25:10,360 --> 00:25:16,360
pictures all done in our AI vision this

00:25:13,690 --> 00:25:17,950
is a great way for us to talk to the the

00:25:16,360 --> 00:25:20,560
customer about what can be done with

00:25:17,950 --> 00:25:21,730
with computer vision and how quickly it

00:25:20,560 --> 00:25:23,920
can be done especially with power

00:25:21,730 --> 00:25:25,480
reactors in the next one that you're

00:25:23,920 --> 00:25:28,120
going to turn to you is this is a two

00:25:25,480 --> 00:25:30,910
stone and you'll notice each of the

00:25:28,120 --> 00:25:32,890
various boxes is for a letter and it

00:25:30,910 --> 00:25:35,080
starts to find the letters and then it

00:25:32,890 --> 00:25:36,550
actually transcribes it onto into a text

00:25:35,080 --> 00:25:38,320
file it's going to be important in to

00:25:36,550 --> 00:25:41,230
something like ancestry.com or something

00:25:38,320 --> 00:25:42,730
this one was not a two-hour project this

00:25:41,230 --> 00:25:48,970
has been going on for quite a while this

00:25:42,730 --> 00:25:50,230
is much more complicated you want more

00:25:48,970 --> 00:25:53,610
details on this but I'll be happy to

00:25:50,230 --> 00:25:55,810
share cos I'm very proud of that one

00:25:53,610 --> 00:25:57,430
okay so that was done with power AI

00:25:55,810 --> 00:25:58,780
these are just two things that I've

00:25:57,430 --> 00:26:00,340
worked on okay I've got a whole bunch

00:25:58,780 --> 00:26:01,600
more what are the things your customers

00:26:00,340 --> 00:26:03,430
have worked on I'll be more than happy

00:26:01,600 --> 00:26:04,900
to share this code all right I'll be

00:26:03,430 --> 00:26:07,120
more than happy to tell how it's been

00:26:04,900 --> 00:26:08,920
done if you need the the datasets that

00:26:07,120 --> 00:26:10,870
we used you know all that label pictures

00:26:08,920 --> 00:26:13,090
have no problem sharing those for

00:26:10,870 --> 00:26:14,100
tombstone I've got over 51,000 labeled

00:26:13,090 --> 00:26:17,680
tombstones

00:26:14,100 --> 00:26:19,060
alright I'll share that great let's

00:26:17,680 --> 00:26:20,600
let's make it you know let's do

00:26:19,060 --> 00:26:36,160
something good with this

00:26:20,600 --> 00:26:36,160
and I'm not a Matt guy all right now

00:26:38,880 --> 00:26:48,300
there we go yay no windows guy did it

00:27:01,710 --> 00:27:12,490
yep yeah right and you know if you've

00:27:09,700 --> 00:27:13,690
used tensorflow you've got all these pre

00:27:12,490 --> 00:27:15,820
trained models that are out there the

00:27:13,690 --> 00:27:19,810
Google's done we've got those same

00:27:15,820 --> 00:27:21,340
things too we did a demo where it counts

00:27:19,810 --> 00:27:22,360
Domino's so you put them under the

00:27:21,340 --> 00:27:24,070
webcam it'll tell you what your score is

00:27:22,360 --> 00:27:26,260
I had two of my daughters label those

00:27:24,070 --> 00:27:27,910
15,000 Domino's they labeled more than

00:27:26,260 --> 00:27:29,470
happy to share that with you they needed

00:27:27,910 --> 00:27:31,660
a job there were $10 an hour

00:27:29,470 --> 00:27:33,430
it worked out pretty well all right so

00:27:31,660 --> 00:27:35,350
some of the benchmarks that we've done I

00:27:33,430 --> 00:27:38,190
did a some recent benchmarking between

00:27:35,350 --> 00:27:41,260
DJ x1 and RAC 922 s that were in the lab

00:27:38,190 --> 00:27:43,090
using time series data and this was

00:27:41,260 --> 00:27:45,040
strictly it wasn't a matter of getting

00:27:43,090 --> 00:27:46,960
it really good predict or making super

00:27:45,040 --> 00:27:48,640
great predictions versus not super great

00:27:46,960 --> 00:27:51,880
predictions it was a matter of how does

00:27:48,640 --> 00:27:53,890
the dgx run against the AC 922 and it's

00:27:51,880 --> 00:27:56,920
not quite apples to apples the big

00:27:53,890 --> 00:28:00,010
difference is that the DG x had 32 gig

00:27:56,920 --> 00:28:02,890
v1 hundreds in it whereas the the AC

00:28:00,010 --> 00:28:04,450
nine 22 we have the 16 gig be 100 but

00:28:02,890 --> 00:28:07,300
Charlie's hooking us up with some 32

00:28:04,450 --> 00:28:09,100
gigs so we had four versus day but this

00:28:07,300 --> 00:28:10,840
was only running on one I wasn't doing

00:28:09,100 --> 00:28:11,260
all four and all eight this is one to

00:28:10,840 --> 00:28:14,380
one

00:28:11,260 --> 00:28:16,150
yeah one to one so I did two different

00:28:14,380 --> 00:28:17,910
kinds of models I did ARIMA which is

00:28:16,150 --> 00:28:20,470
just a standard machine learning

00:28:17,910 --> 00:28:22,780
algorithm for time series detection just

00:28:20,470 --> 00:28:24,940
runs on the CPU and then I did something

00:28:22,780 --> 00:28:26,980
called LS TMS which is a type of

00:28:24,940 --> 00:28:29,230
recurrent neural network the training

00:28:26,980 --> 00:28:30,730
for it happens on the GPU and then the

00:28:29,230 --> 00:28:32,560
inference or predictions happens on the

00:28:30,730 --> 00:28:33,760
CPU and it was kind of interesting what

00:28:32,560 --> 00:28:36,160
I found I'm gonna show you the dirty

00:28:33,760 --> 00:28:38,770
part okay I'm not gonna just make

00:28:36,160 --> 00:28:40,750
everything all peaches and roses for the

00:28:38,770 --> 00:28:43,210
ARIMA the dgx was significantly faster

00:28:40,750 --> 00:28:44,680
okay I don't know why that is maybe it's

00:28:43,210 --> 00:28:46,720
a code thing maybe we need guys like you

00:28:44,680 --> 00:28:48,820
who can optimize the code to make it run

00:28:46,720 --> 00:28:50,530
faster again this is just running on CPU

00:28:48,820 --> 00:28:53,950
for the LS TMS the

00:28:50,530 --> 00:28:56,800
training on the dgx was 8% faster than

00:28:53,950 --> 00:28:58,960
the AC 922 not really a statistically

00:28:56,800 --> 00:29:00,580
significant difference that a percent

00:28:58,960 --> 00:29:02,680
may just be because of the 32 gig

00:29:00,580 --> 00:29:05,530
version versus the 16 gig version I

00:29:02,680 --> 00:29:06,760
don't know for sure but for the one of

00:29:05,530 --> 00:29:08,830
the important parts was the predictions

00:29:06,760 --> 00:29:11,230
the inference the AC 922 actually

00:29:08,830 --> 00:29:13,060
performed faster than the dgx one the

00:29:11,230 --> 00:29:16,720
inference are the predictions for the LS

00:29:13,060 --> 00:29:19,390
TM run on the CPU so in one case the dgx

00:29:16,720 --> 00:29:22,450
one using just a CPU and other case it

00:29:19,390 --> 00:29:24,820
didn't so the question becomes well

00:29:22,450 --> 00:29:26,380
which is more important to your customer

00:29:24,820 --> 00:29:28,000
well do they need it for training or do

00:29:26,380 --> 00:29:29,590
they need it for inference so I wrote a

00:29:28,000 --> 00:29:31,120
blog on this I can share it with you if

00:29:29,590 --> 00:29:32,140
you want this is something you can share

00:29:31,120 --> 00:29:34,210
with your customers if they're really

00:29:32,140 --> 00:29:37,960
looking for prediction speeds quickly

00:29:34,210 --> 00:29:39,430
this is this is better than the djx but

00:29:37,960 --> 00:29:39,610
not in everything so questions for you

00:29:39,430 --> 00:29:42,250
guys

00:29:39,610 --> 00:29:44,860
why did the dgx outperform they see 922

00:29:42,250 --> 00:29:46,300
I don't know the answer I can play with

00:29:44,860 --> 00:29:47,770
it some more and look at it but if you

00:29:46,300 --> 00:29:50,500
guys are really good at optimizing code

00:29:47,770 --> 00:29:52,300
I'll give you the code and you know

00:29:50,500 --> 00:29:54,670
Chris has access to all of these servers

00:29:52,300 --> 00:29:56,320
we have a dgx if you want to get on and

00:29:54,670 --> 00:29:58,990
try around with it you got an inbox you

00:29:56,320 --> 00:30:00,430
got all these other companies let's

00:29:58,990 --> 00:30:02,770
optimize this code let's make it faster

00:30:00,430 --> 00:30:05,470
on everything and then Nvidia Rapids if

00:30:02,770 --> 00:30:06,700
you don't know what rabbit is in when

00:30:05,470 --> 00:30:08,680
you when you use Python there's

00:30:06,700 --> 00:30:10,090
something called a data frame it's sort

00:30:08,680 --> 00:30:12,220
of an in-memory spreadsheets probably

00:30:10,090 --> 00:30:15,640
the easiest way to think about it and it

00:30:12,220 --> 00:30:17,020
runs on the CPU Rapids allows you to

00:30:15,640 --> 00:30:20,080
take that data frame and put it on the

00:30:17,020 --> 00:30:23,170
GPU and it becomes super fast like in

00:30:20,080 --> 00:30:26,110
some cases it'll run the the same the

00:30:23,170 --> 00:30:28,240
same process on the GPU 2200 times

00:30:26,110 --> 00:30:30,070
faster than it can on the on the

00:30:28,240 --> 00:30:33,000
processor so it's significantly faster

00:30:30,070 --> 00:30:35,650
so I did a bunch of testing here between

00:30:33,000 --> 00:30:37,810
the standard pandas data frames that run

00:30:35,650 --> 00:30:41,020
on the CPU versus the GPU version or the

00:30:37,810 --> 00:30:42,640
GD F and the G d/f in most cases was

00:30:41,020 --> 00:30:44,850
between say four and twenty five hundred

00:30:42,640 --> 00:30:47,440
times faster than running on the CPU

00:30:44,850 --> 00:30:49,180
there was a couple tests where it wasn't

00:30:47,440 --> 00:30:51,220
faster but I won't go into all of that

00:30:49,180 --> 00:30:52,780
but I'll give you an example of why this

00:30:51,220 --> 00:30:55,060
is important and why this is something

00:30:52,780 --> 00:30:56,920
we should be talking to people about and

00:30:55,060 --> 00:30:59,890
how it runs how well it runs on the AC

00:30:56,920 --> 00:31:01,510
922 is the same Cancer Research I was

00:30:59,890 --> 00:31:03,500
telling you about earlier but they're

00:31:01,510 --> 00:31:06,220
working on it they have a pipeline of

00:31:03,500 --> 00:31:09,230
molecular simulation that they do where

00:31:06,220 --> 00:31:11,150
the they load lots and lots of records

00:31:09,230 --> 00:31:13,570
up into a data frame and then that thing

00:31:11,150 --> 00:31:15,440
gets manipulated for about ten days

00:31:13,570 --> 00:31:17,150
they're just doing data frame

00:31:15,440 --> 00:31:18,950
manipulations sounds like let's put this

00:31:17,150 --> 00:31:21,440
on Rapids and see how much faster it can

00:31:18,950 --> 00:31:23,540
go so we're in the process of doing it

00:31:21,440 --> 00:31:24,860
they've been kind of dragging their feet

00:31:23,540 --> 00:31:26,120
a little bit but what if we could get

00:31:24,860 --> 00:31:27,830
that down to five days or three days

00:31:26,120 --> 00:31:30,590
think of how much more productive they

00:31:27,830 --> 00:31:32,900
could be now where do you guys come in

00:31:30,590 --> 00:31:35,630
the documentation that Nvidia has four

00:31:32,900 --> 00:31:37,850
Rapids is all written for Intel every

00:31:35,630 --> 00:31:40,220
bit of it and it's it doesn't always

00:31:37,850 --> 00:31:42,620
work on power so like even something as

00:31:40,220 --> 00:31:45,260
simple as reading a CSV file and loading

00:31:42,620 --> 00:31:47,060
it up into the GPU is different there's

00:31:45,260 --> 00:31:48,320
there's different syntax to it you have

00:31:47,060 --> 00:31:50,930
to do a bunch of different stuff and

00:31:48,320 --> 00:31:52,220
there's no documentation on it so you

00:31:50,930 --> 00:31:53,660
start to do and then you start working

00:31:52,220 --> 00:31:55,820
through the error codes that you get and

00:31:53,660 --> 00:31:57,380
then trying to figure it out I've got

00:31:55,820 --> 00:31:59,120
documentation on it maybe you guys have

00:31:57,380 --> 00:32:01,730
documentation on it but this is

00:31:59,120 --> 00:32:03,380
something that's a part of power AI now

00:32:01,730 --> 00:32:05,870
right and this still just integrated

00:32:03,380 --> 00:32:09,290
within it let's use it it's it's super

00:32:05,870 --> 00:32:11,270
fast so I talked about the the

00:32:09,290 --> 00:32:15,140
documentation invidious not documenting

00:32:11,270 --> 00:32:16,280
this I loved Nvidia but there sometimes

00:32:15,140 --> 00:32:19,280
you talk to them and they're like well

00:32:16,280 --> 00:32:21,260
go talk to IBM and then you start

00:32:19,280 --> 00:32:23,000
googling IBM stuff and then you talk to

00:32:21,260 --> 00:32:24,590
an IBM ER and they start searching

00:32:23,000 --> 00:32:25,790
through four hundred thousand people you

00:32:24,590 --> 00:32:27,170
know with an IBM trying to find the

00:32:25,790 --> 00:32:29,480
answer and it's tough it's the same

00:32:27,170 --> 00:32:33,440
stuff we've all been talking about so

00:32:29,480 --> 00:32:36,050
how can we how can it the tests were the

00:32:33,440 --> 00:32:39,530
the the GPU data frames didn't rent that

00:32:36,050 --> 00:32:41,570
faster than the CPU data frames why was

00:32:39,530 --> 00:32:42,950
that can we optimize the code Rapids is

00:32:41,570 --> 00:32:45,320
open source pretty much they'll let you

00:32:42,950 --> 00:32:47,660
do your own your own development on it

00:32:45,320 --> 00:32:49,730
you know why can't we often my set and

00:32:47,660 --> 00:32:51,050
make it even faster and then what are

00:32:49,730 --> 00:32:52,580
the benchmarks use performed Chris

00:32:51,050 --> 00:32:55,130
showed some of his have you done

00:32:52,580 --> 00:32:56,900
benchmarks with Rapids or with any of

00:32:55,130 --> 00:32:58,310
these other things these are stuff these

00:32:56,900 --> 00:33:00,380
are things we can take to our customers

00:32:58,310 --> 00:33:01,640
whether you know it's us we're selling

00:33:00,380 --> 00:33:03,110
to people or whether you're Chris and

00:33:01,640 --> 00:33:05,960
you're selling within your university or

00:33:03,110 --> 00:33:07,610
whoever it might be you know let's talk

00:33:05,960 --> 00:33:09,290
about this stuff you know as a hardware

00:33:07,610 --> 00:33:10,940
person as a data scientist there's all

00:33:09,290 --> 00:33:14,540
of these things that's why we're trying

00:33:10,940 --> 00:33:17,290
to build this community oh yeah so this

00:33:14,540 --> 00:33:17,290
is just some of the

00:33:17,429 --> 00:33:22,419
the values that we got for loading the

00:33:20,200 --> 00:33:24,690
data frames so if you look over there on

00:33:22,419 --> 00:33:27,669
the far right loading 40 million records

00:33:24,690 --> 00:33:30,010
the load time for the loading it onto

00:33:27,669 --> 00:33:32,110
the GPU the CUDA data frame was one

00:33:30,010 --> 00:33:35,530
point five two seconds versus loading it

00:33:32,110 --> 00:33:37,780
you know just at in the CPU was a 76

00:33:35,530 --> 00:33:39,789
seconds forty million records look how

00:33:37,780 --> 00:33:41,350
much faster that is that's it's an

00:33:39,789 --> 00:33:44,620
enormous speed-up you show that to your

00:33:41,350 --> 00:33:47,289
customers piece of cake okay so

00:33:44,620 --> 00:33:49,299
benchmarks I've talked about this share

00:33:47,289 --> 00:33:50,860
what you've done right and this is

00:33:49,299 --> 00:33:52,690
really the asks for the community share

00:33:50,860 --> 00:33:54,010
what you've done with us whether it's

00:33:52,690 --> 00:33:55,570
benchmarking whether it's software

00:33:54,010 --> 00:33:57,400
whether it's code whether it's

00:33:55,570 --> 00:33:59,140
optimizations whether it's a new kernel

00:33:57,400 --> 00:33:59,500
whether it's a new binary whether it's a

00:33:59,140 --> 00:34:01,900
whatever

00:33:59,500 --> 00:34:03,909
Chris was talking earlier about the out

00:34:01,900 --> 00:34:05,679
there somewhere about the versions of

00:34:03,909 --> 00:34:06,850
tensorflow that you've got you put on

00:34:05,679 --> 00:34:08,470
one version and it's really not

00:34:06,850 --> 00:34:09,760
optimized for power so you do some other

00:34:08,470 --> 00:34:11,200
stuff and all of a sudden it's a totally

00:34:09,760 --> 00:34:13,210
different ballgame it's running much

00:34:11,200 --> 00:34:15,280
quicker I didn't know that I learned

00:34:13,210 --> 00:34:17,859
that from him today so it could be out

00:34:15,280 --> 00:34:19,840
there give me the image let's get that

00:34:17,859 --> 00:34:22,629
going yeah

00:34:19,840 --> 00:34:26,260
share your best practices on power AI

00:34:22,629 --> 00:34:27,580
and then you know how do you make this

00:34:26,260 --> 00:34:30,399
how do you make this better

00:34:27,580 --> 00:34:32,290
so our big ask is help us out let's all

00:34:30,399 --> 00:34:35,739
work together on this we've got a great

00:34:32,290 --> 00:34:38,250
product it's um let's do it thank you

00:34:35,739 --> 00:34:41,139
[Music]

00:34:38,250 --> 00:34:44,290
are there any questions in terms of

00:34:41,139 --> 00:34:48,760
engaging these guys you know or we often

00:34:44,290 --> 00:34:51,129
depend what kinds of things would would

00:34:48,760 --> 00:34:53,349
benefit I see Garrett here I know

00:34:51,129 --> 00:34:55,810
there's folks who can help answer some

00:34:53,349 --> 00:34:57,129
of the questions that get asked you know

00:34:55,810 --> 00:34:59,040
just can we just take a second and

00:34:57,129 --> 00:35:01,450
engage in a little bit of dialogue here

00:34:59,040 --> 00:35:03,450
as we go forward we're looking for

00:35:01,450 --> 00:35:06,369
engagement this is only going to work

00:35:03,450 --> 00:35:07,810
with engagement I think there are some

00:35:06,369 --> 00:35:09,339
groups out there that are holding a

00:35:07,810 --> 00:35:13,859
bunch of information that we can

00:35:09,339 --> 00:35:13,859
leverage in this builder community

00:35:17,359 --> 00:35:22,380
note we're we're already live we have

00:35:20,640 --> 00:35:24,720
the form established with the open power

00:35:22,380 --> 00:35:27,030
foundation people can join into that

00:35:24,720 --> 00:35:28,559
form right now the links were up there

00:35:27,030 --> 00:35:30,650
but we'll make sure that people can get

00:35:28,559 --> 00:35:33,839
them we have the github repository

00:35:30,650 --> 00:35:35,369
already up and since last week people

00:35:33,839 --> 00:35:37,440
have been populating them not myself

00:35:35,369 --> 00:35:39,030
other people as well so what we're

00:35:37,440 --> 00:35:41,430
really looking for is to have

00:35:39,030 --> 00:35:43,470
established a pathway for people to

00:35:41,430 --> 00:35:46,470
start putting stuff in and for them to

00:35:43,470 --> 00:35:48,150
engage with us and and I think that

00:35:46,470 --> 00:35:51,059
every single time somebody asks a

00:35:48,150 --> 00:35:53,369
question to an IBM or an IBM or should

00:35:51,059 --> 00:35:54,869
send them towards the community and that

00:35:53,369 --> 00:35:56,280
question should go to the community and

00:35:54,869 --> 00:35:58,559
let the people who already in the

00:35:56,280 --> 00:36:00,690
community help answer that even if they

00:35:58,559 --> 00:36:02,910
have to leverage their IBM er but start

00:36:00,690 --> 00:36:05,280
having the conversation from the IBM or

00:36:02,910 --> 00:36:07,410
be there is a builder community let's

00:36:05,280 --> 00:36:10,230
see if we can leverage that okay and

00:36:07,410 --> 00:36:12,030
then as that goes down that path we

00:36:10,230 --> 00:36:14,280
should see more people joining into that

00:36:12,030 --> 00:36:18,500
community and making it a much more

00:36:14,280 --> 00:36:18,500
robust situation Jeff

00:36:20,420 --> 00:36:29,139
[Music]

00:36:59,990 --> 00:37:06,109
I totally agree I think there's also an

00:37:04,560 --> 00:37:07,920
aspect where we need people to

00:37:06,109 --> 00:37:08,520
automatically who are part of the

00:37:07,920 --> 00:37:11,310
Builder Cree

00:37:08,520 --> 00:37:13,290
put their documentation into that system

00:37:11,310 --> 00:37:14,970
I've got a group who's then this is what

00:37:13,290 --> 00:37:17,280
I've had is a person pushing their data

00:37:14,970 --> 00:37:18,750
from their get lab or posit ori where

00:37:17,280 --> 00:37:21,480
they documented everything and just

00:37:18,750 --> 00:37:22,890
pushing into github and so i think that

00:37:21,480 --> 00:37:24,650
we need to get it out and we need to get

00:37:22,890 --> 00:37:26,460
them who are already holding

00:37:24,650 --> 00:37:29,869
documentation about how they did what

00:37:26,460 --> 00:37:29,869
they did and push that up

00:37:48,990 --> 00:37:52,130
[Music]

00:38:03,680 --> 00:38:09,600
yeah and and that's why I bring up that

00:38:07,440 --> 00:38:11,160
concept of documentation somebody's

00:38:09,600 --> 00:38:12,780
going to have documented how they did

00:38:11,160 --> 00:38:14,460
what they did so that way if they had to

00:38:12,780 --> 00:38:16,380
do it again but getting them to not

00:38:14,460 --> 00:38:18,870
capture that on their local space but to

00:38:16,380 --> 00:38:20,850
capture that into this builder community

00:38:18,870 --> 00:38:22,320
and get that tone established so that we

00:38:20,850 --> 00:38:24,060
get more data like Stack Overflow

00:38:22,320 --> 00:38:25,830
sakharova's got thousands and thousands

00:38:24,060 --> 00:38:27,720
of people putting in because the return

00:38:25,830 --> 00:38:29,970
to them is massive and so what we have

00:38:27,720 --> 00:38:33,290
to do is create value so people will

00:38:29,970 --> 00:38:33,290
come and keep putting more stuff in

00:38:40,930 --> 00:38:52,219
yep I don't know how we're gonna deal

00:38:44,269 --> 00:38:54,729
with that but yeah I think there's some

00:38:52,219 --> 00:38:58,519
curation that's going to have to happen

00:38:54,729 --> 00:38:59,900
and we have to realize that if people

00:38:58,519 --> 00:39:01,849
are putting up junk and is starting to

00:38:59,900 --> 00:39:02,989
search through junk people are not going

00:39:01,849 --> 00:39:04,700
to have faith in it not come back

00:39:02,989 --> 00:39:06,319
because of curation is gonna have to

00:39:04,700 --> 00:39:07,789
happen at the beginning it's gonna have

00:39:06,319 --> 00:39:09,920
to be robust at the beginning so that

00:39:07,789 --> 00:39:22,219
way people establish a tone and that

00:39:09,920 --> 00:39:24,440
tone is carried through so Jeff we're

00:39:22,219 --> 00:39:29,390
probably out of time right pretty much

00:39:24,440 --> 00:39:31,880
any other questions comments these these

00:39:29,390 --> 00:39:36,200
guys will be around for the next day or

00:39:31,880 --> 00:39:38,210
so please you know at the social at the

00:39:36,200 --> 00:39:41,089
happy hour here tonight have have some

00:39:38,210 --> 00:39:43,339
further conversation so we as users have

00:39:41,089 --> 00:39:45,619
been putting the burden upon IBM too

00:39:43,339 --> 00:39:46,940
much mainly because we spent money with

00:39:45,619 --> 00:39:49,630
them and we want them to solve the

00:39:46,940 --> 00:39:51,710
problem and that they're trying to

00:39:49,630 --> 00:39:53,599
struggle because what we're bringing is

00:39:51,710 --> 00:39:55,519
a unique situation every single time

00:39:53,599 --> 00:39:57,710
they're trying to find a solution to the

00:39:55,519 --> 00:39:58,789
unique situation where as many of us in

00:39:57,710 --> 00:40:00,559
the community where you address that

00:39:58,789 --> 00:40:02,839
unique situation and I've already solved

00:40:00,559 --> 00:40:05,360
it let's let's work through that process

00:40:02,839 --> 00:40:10,550
okay thank you very much

00:40:05,360 --> 00:40:10,550

YouTube URL: https://www.youtube.com/watch?v=HR6dRhmLh60


