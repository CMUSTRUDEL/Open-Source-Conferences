Title: OpenPOWER Summit NA 2019: Overview of the SMC 1000 8x25G: OMI to DDR4 Memory Controller
Publication date: 2019-08-28
Playlist: OpenPOWER Summit NA 2019
Description: 
	Presented by Sanjay Goyal, Microchip
Captions: 
	00:00:04,910 --> 00:00:12,830
many cases thanks for being here I'm

00:00:09,769 --> 00:00:17,100
Sanjay Goyal one of the architects and

00:00:12,830 --> 00:00:21,060
microchip we have data center division

00:00:17,100 --> 00:00:25,260
or DCs and I would like to take you

00:00:21,060 --> 00:00:31,289
through the overview of our first serial

00:00:25,260 --> 00:00:34,880
memory controller SMC 1000 thanks to IBM

00:00:31,289 --> 00:00:40,739
team they have been really good partner

00:00:34,880 --> 00:00:44,910
ok so with this chip we entered memory

00:00:40,739 --> 00:00:48,360
infrastructure market for high

00:00:44,910 --> 00:00:52,289
performance to us in the computing we

00:00:48,360 --> 00:00:57,090
announced it in FMS and we believe it's

00:00:52,289 --> 00:00:59,640
the first of its kind it enables CPUs

00:00:57,090 --> 00:01:02,420
and other compute centric SOC is to

00:00:59,640 --> 00:01:05,970
utilize four times the memory channels

00:01:02,420 --> 00:01:09,360
because we use eight lanes of omi which

00:01:05,970 --> 00:01:12,330
is about 34 signals for says you need

00:01:09,360 --> 00:01:16,229
150 ddr signals if you need to connect

00:01:12,330 --> 00:01:18,090
to parallel ddr4 SiC interface so it

00:01:16,229 --> 00:01:22,560
roughly four times the memory channels

00:01:18,090 --> 00:01:25,670
we get if we use over my interface it

00:01:22,560 --> 00:01:29,250
delivers high memory bandwidth and

00:01:25,670 --> 00:01:33,299
interesting part is that it it gives you

00:01:29,250 --> 00:01:36,299
media independence for these compute

00:01:33,299 --> 00:01:41,159
intensive intensive platforms with

00:01:36,299 --> 00:01:45,329
ultra-low latency these are some of the

00:01:41,159 --> 00:01:47,369
offerings dcs has we have been in SAS

00:01:45,329 --> 00:01:50,390
and PCIe business for many many

00:01:47,369 --> 00:01:54,540
generations we've been contributing to

00:01:50,390 --> 00:01:58,079
many specifications and we have endpoint

00:01:54,540 --> 00:02:00,060
solutions which are our SSD controllers

00:01:58,079 --> 00:02:05,490
and the the NVA

00:02:00,060 --> 00:02:07,469
nvm drives and with PM eighty-five

00:02:05,490 --> 00:02:12,090
ninety six or SMC 1000 and we have

00:02:07,469 --> 00:02:16,020
entered memory infest infrastructure now

00:02:12,090 --> 00:02:20,520
so why is this becoming an important

00:02:16,020 --> 00:02:24,230
thing if you look at this graph memory

00:02:20,520 --> 00:02:26,790
latency per core is increasing because

00:02:24,230 --> 00:02:28,950
DM buses are limited in number and

00:02:26,790 --> 00:02:33,450
number of cores are increasing with

00:02:28,950 --> 00:02:36,300
every generation so it's the D line

00:02:33,450 --> 00:02:38,520
buses are not scaling as number of

00:02:36,300 --> 00:02:41,160
course are going up in numbers so i/o

00:02:38,520 --> 00:02:43,200
bandwidth per core is going down this is

00:02:41,160 --> 00:02:48,120
why having something like where mi is

00:02:43,200 --> 00:02:52,170
very important for next generation SOC

00:02:48,120 --> 00:02:55,830
SoC pea use the emerging memory

00:02:52,170 --> 00:02:58,920
infrastructure market has need for near

00:02:55,830 --> 00:03:04,230
memory innovation and farm memory in

00:02:58,920 --> 00:03:07,470
composable architectures we believe PC

00:03:04,230 --> 00:03:12,660
and SATA interfaces are not meant for

00:03:07,470 --> 00:03:16,230
memory expansion so open KP is is one of

00:03:12,660 --> 00:03:20,030
the one of the very low latency high

00:03:16,230 --> 00:03:24,180
bandwidth interfaces for memory

00:03:20,030 --> 00:03:27,780
expansion there are other protocols

00:03:24,180 --> 00:03:34,170
coming up see excel Gen Z which would

00:03:27,780 --> 00:03:35,579
probably coexist with open capi so you

00:03:34,170 --> 00:03:39,269
might have seen the slide in other

00:03:35,579 --> 00:03:41,690
presentations it just emphasizes that we

00:03:39,269 --> 00:03:45,030
need increased memory bandwidth we need

00:03:41,690 --> 00:03:49,200
media independence and we need lower

00:03:45,030 --> 00:03:55,049
solution cost so we get at all with

00:03:49,200 --> 00:03:57,959
devices like SMC 1000 so how do we get

00:03:55,049 --> 00:04:01,620
more bandwidth it's because we are able

00:03:57,959 --> 00:04:05,760
to pack or have more channels more of my

00:04:01,620 --> 00:04:07,829
channels for the same number of pins as

00:04:05,760 --> 00:04:10,950
I mentioned 32 pins for 8 lanes of

00:04:07,829 --> 00:04:15,090
serial interface and 2 4 o'clock so 34

00:04:10,950 --> 00:04:17,940
verses ddr4 which requires about 150 160

00:04:15,090 --> 00:04:21,080
signals we can pack many more remember

00:04:17,940 --> 00:04:24,310
all my channels versus DDR interface and

00:04:21,080 --> 00:04:27,580
then it gives us media independence and

00:04:24,310 --> 00:04:30,970
I think it was mentioned by IBM person

00:04:27,580 --> 00:04:34,200
that the SOC packaging you don't need it

00:04:30,970 --> 00:04:37,630
if if you are not having as many DDR

00:04:34,200 --> 00:04:41,760
channels we don't need as many balls and

00:04:37,630 --> 00:04:41,760
the SOC size packet size also goes down

00:04:42,900 --> 00:04:48,790
so just emphasizing it further you can

00:04:45,730 --> 00:04:52,470
have lpddr3 airforce

00:04:48,790 --> 00:04:57,910
G DDR and then you are decoupled from

00:04:52,470 --> 00:05:04,650
CPU innovation you can you can have it

00:04:57,910 --> 00:05:04,650
independently independently develop

00:05:06,480 --> 00:05:13,570
lower solution cost as as I mentioned

00:05:11,140 --> 00:05:17,050
the package size if you would like to

00:05:13,570 --> 00:05:19,150
have similar number of channels because

00:05:17,050 --> 00:05:22,330
of number of pins less number often

00:05:19,150 --> 00:05:24,610
require the site the package size would

00:05:22,330 --> 00:05:29,800
go down which results into overall cost

00:05:24,610 --> 00:05:33,669
saving so it's just emphasize that this

00:05:29,800 --> 00:05:36,490
is the block diagram of SMC 1000 on the

00:05:33,669 --> 00:05:40,210
left side you see open copy or omi eight

00:05:36,490 --> 00:05:42,280
lanes which goes through open KP data

00:05:40,210 --> 00:05:44,350
layer then goes through the transaction

00:05:42,280 --> 00:05:47,380
layer and then into the memory

00:05:44,350 --> 00:05:51,640
controller and on the other side we have

00:05:47,380 --> 00:05:59,380
ddr4 72 pins at 3200 mega transfer per

00:05:51,640 --> 00:06:03,390
second MIPS processor is is for the the

00:05:59,380 --> 00:06:08,350
boot up of the chip for error logging

00:06:03,390 --> 00:06:16,620
and we have root of trust on this device

00:06:08,350 --> 00:06:20,550
so it provides us with security aspects

00:06:16,620 --> 00:06:26,260
we have hashing and we have integrity

00:06:20,550 --> 00:06:30,280
Rass implemented and there are a few

00:06:26,260 --> 00:06:33,010
peripherals to boot up to help us on

00:06:30,280 --> 00:06:36,880
boot up and for the temperature sensors

00:06:33,010 --> 00:06:38,700
and and controlling the voltage monitors

00:06:36,880 --> 00:06:44,560
have needed

00:06:38,700 --> 00:06:47,040
this is the feature list we have two

00:06:44,560 --> 00:06:52,180
modes eight-lane mode and fall in more

00:06:47,040 --> 00:06:57,490
the thigh or the Saudis are over 528 GI

00:06:52,180 --> 00:06:59,440
mark on compliant they're running it on

00:06:57,490 --> 00:07:02,850
up to twenty five point six so there are

00:06:59,440 --> 00:07:05,860
three different rates they run ad and

00:07:02,850 --> 00:07:07,930
OMI interface supports dynamic low-power

00:07:05,860 --> 00:07:11,740
mode which means if the bandwidth

00:07:07,930 --> 00:07:14,530
required on the interface is not is not

00:07:11,740 --> 00:07:17,200
twenty-five gigabytes per second you can

00:07:14,530 --> 00:07:22,260
reduce it to eight lanes to four lane or

00:07:17,200 --> 00:07:22,260
two up to two lanes with very very small

00:07:22,320 --> 00:07:29,830
within a very small time factor in

00:07:25,110 --> 00:07:31,720
nanoseconds not even in microseconds we

00:07:29,830 --> 00:07:35,590
support up to four ranks on the DDR

00:07:31,720 --> 00:07:37,150
memory interface and we support for

00:07:35,590 --> 00:07:43,240
eight and sixteen gigabyte memory

00:07:37,150 --> 00:07:48,070
devices and four ranks or 3ds tag for

00:07:43,240 --> 00:07:52,539
high memories there is there are hookups

00:07:48,070 --> 00:07:54,880
in the device for persistent memory we

00:07:52,539 --> 00:07:58,330
are going to open source the firmware on

00:07:54,880 --> 00:08:01,990
this device and the purpose of the forum

00:07:58,330 --> 00:08:05,440
where is DDR OMA initialization invent

00:08:01,990 --> 00:08:08,139
temperature and error monitoring chip

00:08:05,440 --> 00:08:10,889
lingua is our industry standard tool we

00:08:08,139 --> 00:08:13,539
share it with our all our customers to

00:08:10,889 --> 00:08:18,180
to do the debug to look at the Saudis

00:08:13,539 --> 00:08:21,430
eyes it is just very nice given to

00:08:18,180 --> 00:08:24,970
security and data protection we have

00:08:21,430 --> 00:08:27,490
hardware root of trust built on built

00:08:24,970 --> 00:08:30,520
with boot ROM we have secure boot and

00:08:27,490 --> 00:08:36,729
secure update means firmware updates are

00:08:30,520 --> 00:08:41,229
also checked for integrity integrity and

00:08:36,729 --> 00:08:43,120
authentication both actually single

00:08:41,229 --> 00:08:47,050
symbol correction and double symbol

00:08:43,120 --> 00:08:49,840
detection it's on the DDR interface over

00:08:47,050 --> 00:08:54,580
64 bytes eight bytes of easy

00:08:49,840 --> 00:08:58,060
is sent into the ddr media and sector is

00:08:54,580 --> 00:09:00,310
implemented part of that rear controller

00:08:58,060 --> 00:09:04,270
also has this feature of memory scrub

00:09:00,310 --> 00:09:06,460
with auto correction on errors it's a

00:09:04,270 --> 00:09:08,380
really small package if anyone of you

00:09:06,460 --> 00:09:11,980
got a chance to look at a smart model or

00:09:08,380 --> 00:09:18,330
a booth outside it's a 17 by 17 package

00:09:11,980 --> 00:09:21,930
and it's a very power optimizer its

00:09:18,330 --> 00:09:24,940
peripheral support as just for the

00:09:21,930 --> 00:09:29,500
temperature sensors voltage monitors and

00:09:24,940 --> 00:09:34,390
debug a few more items from the feature

00:09:29,500 --> 00:09:39,160
list this chip supports chip kill if

00:09:34,390 --> 00:09:42,130
used by for DRAM devices it has data

00:09:39,160 --> 00:09:46,420
integrity throughout the chip required

00:09:42,130 --> 00:09:48,250
for enterprise applications and less

00:09:46,420 --> 00:09:50,230
than 64 byte writes result into

00:09:48,250 --> 00:09:53,950
read-modify-write so it's all handled in

00:09:50,230 --> 00:09:57,010
the hardware and in the chip there is

00:09:53,950 --> 00:10:00,520
protection against address collision and

00:09:57,010 --> 00:10:05,440
it supports DM sizes from 16 to 256

00:10:00,520 --> 00:10:07,600
gigabyte which is a big range and this

00:10:05,440 --> 00:10:10,090
is the DLP D or the dynamically in power

00:10:07,600 --> 00:10:12,130
down feature that oh my link dynamically

00:10:10,090 --> 00:10:15,010
dynamically can switch between eight

00:10:12,130 --> 00:10:20,290
four and two lanes and this saves quite

00:10:15,010 --> 00:10:23,410
a bit of power so this is the chart on

00:10:20,290 --> 00:10:26,050
latency we are very proud of our

00:10:23,410 --> 00:10:29,620
partnership with IBM team and we are

00:10:26,050 --> 00:10:31,000
able to achieve a very low latency which

00:10:29,620 --> 00:10:35,110
is just three point nine four

00:10:31,000 --> 00:10:40,420
nanoseconds extra loaded latency versus

00:10:35,110 --> 00:10:43,390
lrdimm so lot of work went into it in

00:10:40,420 --> 00:10:49,180
achieving this and this is probably one

00:10:43,390 --> 00:10:50,560
of the big features of this device so

00:10:49,180 --> 00:10:53,550
these are the applications DRAM

00:10:50,560 --> 00:10:57,160
application and on the left side is what

00:10:53,550 --> 00:10:59,490
we have from a smart modular team and

00:10:57,160 --> 00:11:03,520
just showing the comparison in size of

00:10:59,490 --> 00:11:06,370
our divorce is a 1u DM

00:11:03,520 --> 00:11:09,339
other DD providers are Samsung in micron

00:11:06,370 --> 00:11:13,990
and the sizes of D limbs are one un to

00:11:09,339 --> 00:11:17,709
you other other applications are chipped

00:11:13,990 --> 00:11:22,480
down application and we have been able

00:11:17,709 --> 00:11:28,920
to validate ddr4 running at 2667 in this

00:11:22,480 --> 00:11:31,510
in this mode and this is the last

00:11:28,920 --> 00:11:33,670
application which is Nvidia main

00:11:31,510 --> 00:11:35,380
application so we have hooks but there

00:11:33,670 --> 00:11:40,290
is a lot more work which is required to

00:11:35,380 --> 00:11:43,500
make it work ok this is my last slide

00:11:40,290 --> 00:11:43,500
thank you

00:11:45,210 --> 00:11:48,399
[Applause]

00:12:32,210 --> 00:12:35,279
[Music]

00:12:37,440 --> 00:12:44,230
so that side is that I picture on the

00:12:41,110 --> 00:12:46,089
right side what is that sentiment on the

00:12:44,230 --> 00:12:50,019
left side when if the beam reaches the

00:12:46,089 --> 00:12:53,500
p.m. and the vapor hits are punished to

00:12:50,019 --> 00:12:56,079
the c4 bomb in the dividers how long

00:12:53,500 --> 00:12:59,550
does it take for it to pass through the

00:12:56,079 --> 00:13:04,029
memory controller so we become the order

00:12:59,550 --> 00:13:08,950
allegiance to that and similarly when we

00:13:04,029 --> 00:13:12,450
get the different 1000 DQ belly bump

00:13:08,950 --> 00:13:15,910
from the pellet comes upon the poem I

00:13:12,450 --> 00:13:20,829
see purple hot on the page the latency

00:13:15,910 --> 00:13:27,399
so we met - accenting one commonly can

00:13:20,829 --> 00:13:31,800
see two degrees - that's how we arrived

00:13:27,399 --> 00:13:31,800
at most of it

00:13:50,840 --> 00:13:53,979
[Music]

00:14:16,649 --> 00:14:22,500
from that position how much memory I'll

00:14:19,410 --> 00:14:26,910
be able to address or access to a larger

00:14:22,500 --> 00:14:29,519
courses to you they might engage will

00:14:26,910 --> 00:14:32,519
you be him yes we are directly

00:14:29,519 --> 00:14:36,360
connecting media but we are able to work

00:14:32,519 --> 00:14:38,040
256 gigabyte sideways running at 3200

00:14:36,360 --> 00:14:40,820
which is what you can achieve with a

00:14:38,040 --> 00:14:40,820
logarithm so

00:15:12,680 --> 00:15:18,210
there are certain certain people we have

00:15:15,510 --> 00:15:20,390
to do in in all our IP means to bring it

00:15:18,210 --> 00:15:20,390
down

00:15:35,210 --> 00:15:49,790
by a ghost yes so we have extracted

00:15:46,450 --> 00:15:51,980
using the firmware on maps we have

00:15:49,790 --> 00:15:54,500
created API is for pretty much all the

00:15:51,980 --> 00:15:58,070
resources on which other so host word

00:15:54,500 --> 00:16:00,080
host now has access to all the registers

00:15:58,070 --> 00:16:02,240
in the chip it's better to communicate

00:16:00,080 --> 00:16:04,280
with them in somewhere because it is

00:16:02,240 --> 00:16:12,050
sort of the master for all the

00:16:04,280 --> 00:16:15,220
resolution but it has direct access from

00:16:12,050 --> 00:16:15,220
users perspective yeah

00:16:24,350 --> 00:16:30,860
thank you so much okay

00:16:26,260 --> 00:16:30,860

YouTube URL: https://www.youtube.com/watch?v=rgpiqCXvD5k


