Title: OpenPOWER Summit NA 2019: Composable AI Solution For Power 9
Publication date: 2019-08-28
Playlist: OpenPOWER Summit NA 2019
Description: 
	Presented by Brian Pan, H3 Platform Inc. 

H3 Platform will talk about their Composable AI box â€“ Falcon II. This is the 1 st PCIe Gen4 Fabric GPU box, and could connect with Power 9 server, the only model with PCIe 4.0 capability, as a GPU expansion box. Falcon II could load up to sixteen GPGPUs and share the GPGPU up to four Power 9 servers. With the dynamical allocation capability, &nbsp;Falcon II could compose systems with different GPGPU and host ratio to meet the different resource requirement of AI applications. For example, 16 GPGPUs to 1 Power 9 server, 2 groups of 8 GPGPUs to 1 Power 9 server, and 4 groups of 4 GPGPUs to 1 Power 9 server.
Captions: 
	00:00:00,089 --> 00:00:08,090
good afternoon my name is Brian I'm from

00:00:03,959 --> 00:00:10,650
history prefer we have been doing pje

00:00:08,090 --> 00:00:12,990
expansion box disaggregated are we

00:00:10,650 --> 00:00:15,030
starting from the Chancery and now we do

00:00:12,990 --> 00:00:17,220
die by Gen 4 so they don't really

00:00:15,030 --> 00:00:19,470
explain a little bit of the functional

00:00:17,220 --> 00:00:21,689
feature over the box and then we do the

00:00:19,470 --> 00:00:25,380
demo and then we go back to the

00:00:21,689 --> 00:00:28,019
architectures so then you understand why

00:00:25,380 --> 00:00:32,730
we build up this box where it being used

00:00:28,019 --> 00:00:36,030
I think it's a this is a new new a new

00:00:32,730 --> 00:00:39,920
trend because I think it's I will start

00:00:36,030 --> 00:00:43,020
first from the notification motivation I

00:00:39,920 --> 00:00:46,289
think the motivation I use the IP ins

00:00:43,020 --> 00:00:49,649
Wasson's lab because they they have been

00:00:46,289 --> 00:00:52,050
doing the POC fanpage agency with us and

00:00:49,649 --> 00:00:56,100
then they are going to deploy to and for

00:00:52,050 --> 00:01:00,090
for there is a usage where usage is

00:00:56,100 --> 00:01:03,480
because once I have a plenty like 50

00:01:00,090 --> 00:01:05,700
people's - in the AI and then that AIS

00:01:03,480 --> 00:01:08,490
has a very different requirement for

00:01:05,700 --> 00:01:11,790
example if you do a voice say you need

00:01:08,490 --> 00:01:14,340
one CPU - one GPU you have lots of data

00:01:11,790 --> 00:01:16,439
pre-processing in a CPU then go to the

00:01:14,340 --> 00:01:20,159
GPU - overall then go back to the CPU

00:01:16,439 --> 00:01:23,100
and then you have the image if you do

00:01:20,159 --> 00:01:28,890
imagery you needed like for GPU and one

00:01:23,100 --> 00:01:31,970
CPU to do the lot of imagery

00:01:28,890 --> 00:01:35,130
recognitions but if you do the AI

00:01:31,970 --> 00:01:38,250
especially image you probably need a one

00:01:35,130 --> 00:01:41,990
to eight so there is a so many diverse

00:01:38,250 --> 00:01:45,329
requirements and the key problem is that

00:01:41,990 --> 00:01:47,340
you usually cannot ask the researchers

00:01:45,329 --> 00:01:49,170
say hey please use this machine and then

00:01:47,340 --> 00:01:50,970
next day saying please use their

00:01:49,170 --> 00:01:52,409
machines it's very difficult for them

00:01:50,970 --> 00:01:54,689
because they they have the day that I

00:01:52,409 --> 00:01:56,820
have the ugly and they stay in the in

00:01:54,689 --> 00:02:00,350
one machines they won't want they don't

00:01:56,820 --> 00:02:03,390
want to changed so the problem is that

00:02:00,350 --> 00:02:04,740
how how you can make it managed all this

00:02:03,390 --> 00:02:06,330
requirement

00:02:04,740 --> 00:02:09,030
the only thing that are you buy a lot of

00:02:06,330 --> 00:02:12,060
machines but they say no we don't buy so

00:02:09,030 --> 00:02:14,870
many different one GPU server to GPU

00:02:12,060 --> 00:02:16,170
server for each of us a religious PI

00:02:14,870 --> 00:02:21,390
server

00:02:16,170 --> 00:02:24,180
plus lots of the server plus this is our

00:02:21,390 --> 00:02:26,790
density products so it will come out

00:02:24,180 --> 00:02:27,510
like this it's a dynamical case all the

00:02:26,790 --> 00:02:31,350
difference

00:02:27,510 --> 00:02:35,310
GPU to a server to do that GPU

00:02:31,350 --> 00:02:40,170
composable assistance mr. AI composable

00:02:35,310 --> 00:02:42,390
AI motivations in his part since we have

00:02:40,170 --> 00:02:44,130
a small group so feel free to ask any

00:02:42,390 --> 00:02:45,660
questions during the presentation

00:02:44,130 --> 00:02:57,270
because if you have any question is

00:02:45,660 --> 00:03:02,900
easier than yeah please no after then

00:02:57,270 --> 00:03:07,050
it's a suite at 7:00 the Linux HP HP

00:03:02,900 --> 00:03:14,700
Linux a car park has been fully utilized

00:03:07,050 --> 00:03:18,269
PJ hawk oh good questions there's a

00:03:14,700 --> 00:03:20,549
certain level of a hot park so this step

00:03:18,269 --> 00:03:22,440
back a little bit of the storage hopper

00:03:20,549 --> 00:03:24,360
story how about no matter you are

00:03:22,440 --> 00:03:25,680
assessing or you are reading you just

00:03:24,360 --> 00:03:29,160
came prager the drive

00:03:25,680 --> 00:03:33,560
no matter it's MVA ye SAS or SATA and

00:03:29,160 --> 00:03:36,209
enjoy when GPU is not in GPU in sir in

00:03:33,560 --> 00:03:38,400
various environments when they are

00:03:36,209 --> 00:03:40,560
starting to use the CUDA to map in the

00:03:38,400 --> 00:03:42,810
older device memory and to maybe in the

00:03:40,560 --> 00:03:45,570
system memory he need to know all the

00:03:42,810 --> 00:03:48,299
devices where it is and to making it and

00:03:45,570 --> 00:03:50,549
then when he run it honey can you call

00:03:48,299 --> 00:03:51,959
cooter our library so he was transfer

00:03:50,549 --> 00:03:56,489
all the data's in between all their

00:03:51,959 --> 00:04:00,570
memories it not allowed to get in of any

00:03:56,489 --> 00:04:04,260
GPU or get our pending GPU during the

00:04:00,570 --> 00:04:07,290
process is running yeah still is if it's

00:04:04,260 --> 00:04:10,620
running then it's just stopped his hand

00:04:07,290 --> 00:04:13,590
there is not cured care assistance but

00:04:10,620 --> 00:04:14,680
it's just don't work so what do we do is

00:04:13,590 --> 00:04:18,160
that

00:04:14,680 --> 00:04:22,300
that driver is not working then we do

00:04:18,160 --> 00:04:24,669
the hop rock the GPU then it then no

00:04:22,300 --> 00:04:28,180
generally mounted then a CUDA well see

00:04:24,669 --> 00:04:30,610
olam device memory so the hot rock is

00:04:28,180 --> 00:04:34,180
that you don't need to report a system

00:04:30,610 --> 00:04:44,020
but sure you need to stop yours process

00:04:34,180 --> 00:04:46,840
and then restores process so no no

00:04:44,020 --> 00:04:48,840
needed it just you just need to the

00:04:46,840 --> 00:04:52,870
traveler will recognize it by himself

00:04:48,840 --> 00:04:54,669
but it could have warmed so usually you

00:04:52,870 --> 00:05:04,240
could I won't so usually you use it you

00:04:54,669 --> 00:05:07,750
know more you I use the CUDA library no

00:05:04,240 --> 00:05:09,490
we don't support it I think they don't

00:05:07,750 --> 00:05:13,570
suppose there's some reason the reason

00:05:09,490 --> 00:05:18,340
is that because you want to optimize the

00:05:13,570 --> 00:05:20,770
memory mapping that's so I mean the old

00:05:18,340 --> 00:05:23,860
GPU device memory and map into the

00:05:20,770 --> 00:05:28,510
system memory so he is easier for them

00:05:23,860 --> 00:05:30,880
to to the like big wall synchronization

00:05:28,510 --> 00:05:35,110
for synchronization they kind of things

00:05:30,880 --> 00:05:38,800
so if so they need topology away and

00:05:35,110 --> 00:05:41,409
topology fixed for a CUDA in order to

00:05:38,800 --> 00:05:43,030
atomize if you don't fix it CUDA it's

00:05:41,409 --> 00:05:45,340
very difficult to automate that kind of

00:05:43,030 --> 00:05:50,199
things so that's why they could atom

00:05:45,340 --> 00:05:53,169
support this kind of a hot rock but as

00:05:50,199 --> 00:05:55,800
long as you give different application

00:05:53,169 --> 00:05:59,080
with different process you can stop it

00:05:55,800 --> 00:06:01,750
so there's a few thing I want to

00:05:59,080 --> 00:06:04,060
emphasize if you have a two different

00:06:01,750 --> 00:06:07,330
process and then your second process

00:06:04,060 --> 00:06:09,789
want to have a from two GPU to for GPU

00:06:07,330 --> 00:06:14,800
you only need to stop second process

00:06:09,789 --> 00:06:17,889
because it's adding GPU for that so it's

00:06:14,800 --> 00:06:19,780
a the most important is a process where

00:06:17,889 --> 00:06:23,469
you are you are running it's not how

00:06:19,780 --> 00:06:25,979
profitable underneath that everything is

00:06:23,469 --> 00:06:25,979
applicable

00:06:42,290 --> 00:06:45,420
No yeah I need a little bit more you

00:06:44,940 --> 00:06:54,600
spin

00:06:45,420 --> 00:06:56,850
okay go questions let me go back to it's

00:06:54,600 --> 00:06:59,550
good because we said discussion is

00:06:56,850 --> 00:07:02,810
easier to understand the PGI because I

00:06:59,550 --> 00:07:07,350
think Pizza Hut Park is not done very

00:07:02,810 --> 00:07:10,320
very it's very new is not a existing in

00:07:07,350 --> 00:07:16,050
the interest for a long time I used this

00:07:10,320 --> 00:07:19,860
as an example that when the device - we

00:07:16,050 --> 00:07:23,880
have the we have the firmware in the GPO

00:07:19,860 --> 00:07:28,919
box now GB box to the PJ emulation to

00:07:23,880 --> 00:07:31,940
the host so when a piece when a like a

00:07:28,919 --> 00:07:36,770
power when when I do the ski boot device

00:07:31,940 --> 00:07:39,780
skin we were extant to reserve more

00:07:36,770 --> 00:07:43,290
devices first number and the posi the

00:07:39,780 --> 00:07:45,660
power part to memory address that is

00:07:43,290 --> 00:07:48,390
reserved reservation is a father GPU

00:07:45,660 --> 00:07:51,210
because you know that even PCI devices

00:07:48,390 --> 00:07:53,370
that I have a different memory address

00:07:51,210 --> 00:07:57,030
required virtual memory address required

00:07:53,370 --> 00:08:01,710
so we ask the biggest resources in order

00:07:57,030 --> 00:08:07,229
to do the GPU pop rock so usually in our

00:08:01,710 --> 00:08:11,160
implementation we ask 18 one eight past

00:08:07,229 --> 00:08:12,060
number and each bus number we act 32

00:08:11,160 --> 00:08:17,419
Giga

00:08:12,060 --> 00:08:21,600
by memory address because of the 100 so

00:08:17,419 --> 00:08:25,770
so every host when you scan it he will

00:08:21,600 --> 00:08:29,970
reserve the kind of resources in every

00:08:25,770 --> 00:08:34,289
PC hmph or carnations so when we assign

00:08:29,970 --> 00:08:35,350
a GPU it will looks like someone prac

00:08:34,289 --> 00:08:38,320
one

00:08:35,350 --> 00:08:42,160
GPU and their virtual past number so we

00:08:38,320 --> 00:08:44,410
do the immigrations for a host so that

00:08:42,160 --> 00:08:49,540
that's quite that we can yeah

00:08:44,410 --> 00:08:51,960
and that then there's above underneath

00:08:49,540 --> 00:08:54,550
we also virtualized older PCI devices

00:08:51,960 --> 00:08:56,950
then appreciate devices they won't see

00:08:54,550 --> 00:09:01,030
each other's it's been virtualized by

00:08:56,950 --> 00:09:06,160
ours management CPU so it's been okay by

00:09:01,030 --> 00:09:11,460
ours CPU so it's mean that they they

00:09:06,160 --> 00:09:15,360
don't know there is a GPU there okay

00:09:11,460 --> 00:09:15,360
any other questions

00:09:17,380 --> 00:09:33,290
yeah in a - yes yes this is what

00:09:24,250 --> 00:09:35,600
each this is one so this is the

00:09:33,290 --> 00:09:38,450
composable a is a motivation we see the

00:09:35,600 --> 00:09:40,130
second motivations is like this it's a

00:09:38,450 --> 00:09:42,380
in a rendering industry they have a

00:09:40,130 --> 00:09:44,780
interactive render in the in the morning

00:09:42,380 --> 00:09:47,480
in the daytime but they want to

00:09:44,780 --> 00:09:50,360
consolidate oh the GPU in a 19-2 to the

00:09:47,480 --> 00:09:52,730
pasture injury so a dentist situation is

00:09:50,360 --> 00:09:54,950
very difficult for them to find a good

00:09:52,730 --> 00:09:57,440
machines to fulfill that kind of

00:09:54,950 --> 00:10:01,610
requirement so they use like four

00:09:57,440 --> 00:10:04,250
machines and in a1 this kind of box to

00:10:01,610 --> 00:10:07,250
allocate the GPU in the morning to all

00:10:04,250 --> 00:10:10,610
the server and then during night time

00:10:07,250 --> 00:10:13,160
only he can sorry they order GPU to the

00:10:10,610 --> 00:10:16,040
most powerful one or two servers to do

00:10:13,160 --> 00:10:20,630
the bachelor injury okay so this is a

00:10:16,040 --> 00:10:24,170
two major modifications I think it's a I

00:10:20,630 --> 00:10:26,660
will talk a bit about this right he said

00:10:24,170 --> 00:10:28,160
that there's a another application you

00:10:26,660 --> 00:10:32,360
said I just say that you have a

00:10:28,160 --> 00:10:34,940
difference a career into the AI he said

00:10:32,360 --> 00:10:37,490
that they had to another things they

00:10:34,940 --> 00:10:40,490
wanted to that called scale abilities

00:10:37,490 --> 00:10:43,760
test you know usually you use a one core

00:10:40,490 --> 00:10:47,270
and the GPU sorry more GPU are

00:10:43,760 --> 00:10:50,780
scalability you have a cord and put you

00:10:47,270 --> 00:10:53,810
can put in two GPUs server it could run

00:10:50,780 --> 00:10:57,560
well but how about put a GPU server does

00:10:53,810 --> 00:11:00,790
a co really take a GPU power to do it

00:10:57,560 --> 00:11:05,000
quicker so they also do this kind of

00:11:00,790 --> 00:11:10,820
experiment and it in a to see how the

00:11:05,000 --> 00:11:12,980
cost scale and also the GPU sorry the co

00:11:10,820 --> 00:11:15,320
operate in different hydrogenous

00:11:12,980 --> 00:11:20,410
computing environment for example this

00:11:15,320 --> 00:11:23,480
working in Aurelia CUDA and AMD open 0

00:11:20,410 --> 00:11:25,220
and also in science environments they

00:11:23,480 --> 00:11:26,670
also have a really different environment

00:11:25,220 --> 00:11:30,210
but it

00:11:26,670 --> 00:11:32,790
again to put all these devices in

00:11:30,210 --> 00:11:35,310
different server in the more people to

00:11:32,790 --> 00:11:39,120
move so they put inner Samba in a box

00:11:35,310 --> 00:11:43,320
and assigned to the another host to test

00:11:39,120 --> 00:11:47,550
there's a comoving to different devices

00:11:43,320 --> 00:11:49,350
to see the province okay so they the a I

00:11:47,550 --> 00:11:51,870
not just because of the ugly and

00:11:49,350 --> 00:11:53,850
different is also because of the the

00:11:51,870 --> 00:11:56,670
device difference and also the

00:11:53,850 --> 00:12:00,410
scalability so this there are three

00:11:56,670 --> 00:12:09,270
majors motivation in a compostable way I

00:12:00,410 --> 00:12:12,450
okay this is from Cisco yeah they're

00:12:09,270 --> 00:12:17,060
talking about the whole interchange

00:12:12,450 --> 00:12:20,550
starting from the very in th integrase

00:12:17,060 --> 00:12:22,110
machines and Ontario compost ball so

00:12:20,550 --> 00:12:25,080
this is a technology trend that

00:12:22,110 --> 00:12:28,730
everybody wanted to desegregate scenes

00:12:25,080 --> 00:12:32,280
because in the future is its data

00:12:28,730 --> 00:12:35,010
centric computing not system come

00:12:32,280 --> 00:12:37,140
century called CPU central computing so

00:12:35,010 --> 00:12:41,490
that that's why data you wanted to

00:12:37,140 --> 00:12:44,730
segregate all our devices and then try

00:12:41,490 --> 00:12:47,790
to leverage the flexibility and the

00:12:44,730 --> 00:12:51,090
microdata has to be compute at a data

00:12:47,790 --> 00:12:52,620
place okay so you see that I've been

00:12:51,090 --> 00:12:56,340
also talking about the memory to

00:12:52,620 --> 00:13:00,570
segregate in a in a portent because they

00:12:56,340 --> 00:13:02,850
want to make a memory memory usually is

00:13:00,570 --> 00:13:05,430
the data in fact memory circuits data

00:13:02,850 --> 00:13:10,470
centric is the same so they want to do

00:13:05,430 --> 00:13:14,330
that there seems to okay and of course

00:13:10,470 --> 00:13:14,330
they departed and most difficult part

00:13:14,930 --> 00:13:20,550
this is the architecture I just

00:13:17,040 --> 00:13:23,850
explained a little bit of how we reserve

00:13:20,550 --> 00:13:27,240
the resources and how we in rated the

00:13:23,850 --> 00:13:29,580
PGI resources for the server and I'm

00:13:27,240 --> 00:13:32,340
going to the hop rock then the device

00:13:29,580 --> 00:13:36,060
will be there and we remove then don't

00:13:32,340 --> 00:13:37,680
need shutdown or a system but there is a

00:13:36,060 --> 00:13:38,820
some limitation in fact there are three

00:13:37,680 --> 00:13:40,800
different limitation I

00:13:38,820 --> 00:13:44,100
as mentioned the filth in the first is a

00:13:40,800 --> 00:13:47,940
ski boot our SAT six piles they need to

00:13:44,100 --> 00:13:51,210
support that under one blue countries as

00:13:47,940 --> 00:13:54,540
a multiple multiple devices and multiple

00:13:51,210 --> 00:13:56,700
past number is allowed in the sub

00:13:54,540 --> 00:13:59,850
infinity they don't a lot because they

00:13:56,700 --> 00:14:02,370
think it's there's no way you ask so

00:13:59,850 --> 00:14:05,130
many past number in the resources under

00:14:02,370 --> 00:14:07,380
one p shy by sixteen now made a change

00:14:05,130 --> 00:14:10,500
to your chain for in our experience but

00:14:07,380 --> 00:14:12,510
now people is getting knowing that in

00:14:10,500 --> 00:14:14,970
the desegregate architectures especially

00:14:12,510 --> 00:14:18,510
in via e the past number usually should

00:14:14,970 --> 00:14:22,230
not in some way in some way you would by

00:14:18,510 --> 00:14:25,050
sixteen you're probably given a million

00:14:22,230 --> 00:14:27,720
uses the eight so it probably can give

00:14:25,050 --> 00:14:30,980
eight but usually it's very difficult to

00:14:27,720 --> 00:14:34,970
give eighteen this is the first problem

00:14:30,980 --> 00:14:38,180
the resource the second thing is that

00:14:34,970 --> 00:14:42,030
the driver itself the device driver

00:14:38,180 --> 00:14:44,790
weather device driver is allow hop rock

00:14:42,030 --> 00:14:46,350
or not you know I think it's a lots of

00:14:44,790 --> 00:14:48,210
people know if in the past if you

00:14:46,350 --> 00:14:51,120
appreciate your asset I you got proof

00:14:48,210 --> 00:14:54,270
screen that's any PGA device die if it

00:14:51,120 --> 00:14:57,180
this talk talk about like four years ago

00:14:54,270 --> 00:15:01,320
five years ago if any PCI device dies is

00:14:57,180 --> 00:15:03,870
a proof screen then now I think this no

00:15:01,320 --> 00:15:04,530
longer to be a problem because 2015 or

00:15:03,870 --> 00:15:06,930
00:15:04,530 --> 00:15:10,010
industry already work on the Linux

00:15:06,930 --> 00:15:13,050
kernel mainstream to solve their issues

00:15:10,010 --> 00:15:15,690
so but device try to stay on a problem

00:15:13,050 --> 00:15:21,770
the devices still need to allow the

00:15:15,690 --> 00:15:25,190
device to be added or removed okay then

00:15:21,770 --> 00:15:29,010
this is the key issues of the

00:15:25,190 --> 00:15:31,500
implementations for the for this kind of

00:15:29,010 --> 00:15:35,690
architectures how many resources could

00:15:31,500 --> 00:15:38,730
be allocate another driver so this is a

00:15:35,690 --> 00:15:42,420
but we see the industry already suffer

00:15:38,730 --> 00:15:45,420
the ratio a lot so we work with the SAT

00:15:42,420 --> 00:15:47,340
six and open now in the open power if

00:15:45,420 --> 00:15:49,400
you manage the ski boot it will be soft

00:15:47,340 --> 00:15:51,370
and SAT six already

00:15:49,400 --> 00:15:58,270
most of our server

00:15:51,370 --> 00:16:00,760
should be okay okay so this is the

00:15:58,270 --> 00:16:01,780
chases are just very quick if your chest

00:16:00,760 --> 00:16:05,400
is for you

00:16:01,780 --> 00:16:08,770
16 GPU there's a lot of density of the

00:16:05,400 --> 00:16:11,740
GPU and we have a very quick cooling

00:16:08,770 --> 00:16:15,760
design it's in fact it's made by we

00:16:11,740 --> 00:16:18,940
strong its IB ins how I partners we just

00:16:15,760 --> 00:16:23,040
made a soft whey protein also well on

00:16:18,940 --> 00:16:25,600
top of this box okay

00:16:23,040 --> 00:16:26,080
the subway feature that we do in this

00:16:25,600 --> 00:16:28,600
box

00:16:26,080 --> 00:16:32,860
is that we can do the anaemic elongation

00:16:28,600 --> 00:16:38,410
of the GPU to CPU basically we in fact

00:16:32,860 --> 00:16:40,480
we can do all the devices I mean like

00:16:38,410 --> 00:16:43,600
main UPS connects for connects fight

00:16:40,480 --> 00:16:45,880
Weaver to it in IBM I being used

00:16:43,600 --> 00:16:50,560
connects for in tonight's fight to

00:16:45,880 --> 00:16:53,740
manage all a GPU cluster okay also do

00:16:50,560 --> 00:16:56,830
the sense of mes st they also put us in

00:16:53,740 --> 00:17:02,800
some VST image we also put in some of

00:16:56,830 --> 00:17:07,660
the Intel bifurcation car or some kind

00:17:02,800 --> 00:17:11,290
of MD MD GPU with putting a lot of us

00:17:07,660 --> 00:17:14,200
since in this kind of a fisheye box as

00:17:11,290 --> 00:17:17,020
long as it's a standard PCIe then it

00:17:14,200 --> 00:17:19,810
could be used however some of us

00:17:17,020 --> 00:17:22,209
different functions probably not an

00:17:19,810 --> 00:17:25,000
industry standard it's option standards

00:17:22,209 --> 00:17:27,340
would be some compatibility issues for

00:17:25,000 --> 00:17:30,700
example if you have optional they need

00:17:27,340 --> 00:17:35,980
to put from optional there is a some

00:17:30,700 --> 00:17:39,190
problems in a PCI devices okay so we

00:17:35,980 --> 00:17:41,740
also to the Hipparchus PCI device it's

00:17:39,190 --> 00:17:44,560
like we I just explained we emulate a

00:17:41,740 --> 00:17:47,050
PCI device to a host and we do protein

00:17:44,560 --> 00:17:49,330
in the program to do dynamic or okay so

00:17:47,050 --> 00:17:53,680
for once every is plug-in for once for

00:17:49,330 --> 00:17:55,300
another service protocol appreciate

00:17:53,680 --> 00:18:00,010
[Music]

00:17:55,300 --> 00:18:02,440
poor could be host or device port and we

00:18:00,010 --> 00:18:04,720
can also do the pose monitoring what I

00:18:02,440 --> 00:18:08,710
mean like I talked about you know

00:18:04,720 --> 00:18:13,299
no because the problem is that most

00:18:08,710 --> 00:18:16,390
people think is the GPU is very busy but

00:18:13,299 --> 00:18:19,500
in fact there are three factors and a so

00:18:16,390 --> 00:18:22,330
called GPU PC is whether it's IO or

00:18:19,500 --> 00:18:23,250
memory caching or its community

00:18:22,330 --> 00:18:27,520
relations

00:18:23,250 --> 00:18:30,760
usually what we call collisions very few

00:18:27,520 --> 00:18:34,390
people can reach over 35% in our panel

00:18:30,760 --> 00:18:36,490
experience I mean including IBM I mean

00:18:34,390 --> 00:18:39,340
how how they calculate calculate the

00:18:36,490 --> 00:18:42,929
whole months including the holidays in

00:18:39,340 --> 00:18:48,360
garena night is a in average it's very

00:18:42,929 --> 00:18:52,750
very difficult to reach over 35% so

00:18:48,360 --> 00:18:55,510
there's a one motive the most important

00:18:52,750 --> 00:18:58,710
modification for motivation for this

00:18:55,510 --> 00:19:01,090
part is that if we can give some of the

00:18:58,710 --> 00:19:03,730
flexibility price management information

00:19:01,090 --> 00:19:06,700
from the box because there's some

00:19:03,730 --> 00:19:09,780
difficulty to get their information from

00:19:06,700 --> 00:19:14,049
embed because most of the time the

00:19:09,780 --> 00:19:16,539
aqueon or a dataset is confidential

00:19:14,049 --> 00:19:19,630
there's no one can really touch the

00:19:16,539 --> 00:19:22,150
assistance except the people who who do

00:19:19,630 --> 00:19:24,340
the best smoting can touch the system

00:19:22,150 --> 00:19:26,620
all the other people cannot touch it so

00:19:24,340 --> 00:19:30,970
but you can attach you how you can you

00:19:26,620 --> 00:19:35,530
get the management informations so we

00:19:30,970 --> 00:19:39,820
did from the Box open to monitors the

00:19:35,530 --> 00:19:44,940
Terra transaction to monitor cohesion to

00:19:39,820 --> 00:19:47,200
monitor the memorization which that

00:19:44,940 --> 00:19:49,450
developer and their assistant

00:19:47,200 --> 00:19:52,830
administrator know how to pay to utilize

00:19:49,450 --> 00:19:56,700
the call you know how to better utilize

00:19:52,830 --> 00:19:56,700
the highway resources

00:19:58,399 --> 00:20:06,120
then we also of course we do the p2p and

00:20:01,980 --> 00:20:18,690
imagine GUI any question now if now I go

00:20:06,120 --> 00:20:22,500
to see the table yeah please oh sorry I

00:20:18,690 --> 00:20:26,010
denied experience we use the CD FP

00:20:22,500 --> 00:20:28,890
cables see the OB cables being used in

00:20:26,010 --> 00:20:33,120
the network industry and it's wrong

00:20:28,890 --> 00:20:36,120
25 GT per second so chamber is only 16

00:20:33,120 --> 00:20:41,429
GT per second so we wrong that one to

00:20:36,120 --> 00:20:45,149
use the wrong picture for protocol so

00:20:41,429 --> 00:20:48,059
there is a nicer cables it's up to 1.5

00:20:45,149 --> 00:20:51,120
meters long so theoretical is you know

00:20:48,059 --> 00:20:53,549
in a rack is not able to cross a rack if

00:20:51,120 --> 00:21:05,490
you though it's a plate such as next a

00:20:53,549 --> 00:21:07,889
wreck probably sauce okay good questions

00:21:05,490 --> 00:21:11,779
later on what demo will show you in fact

00:21:07,889 --> 00:21:15,899
we have a topology the topology can know

00:21:11,779 --> 00:21:19,740
which server being connected to or we

00:21:15,899 --> 00:21:22,559
build up management's of where another

00:21:19,740 --> 00:21:28,769
of virtual machine on another server

00:21:22,559 --> 00:21:30,450
here are every every the Box were report

00:21:28,769 --> 00:21:33,240
what did the connection in the devices

00:21:30,450 --> 00:21:35,220
available to that a management center so

00:21:33,240 --> 00:21:37,919
the Romanian says no all a topology and

00:21:35,220 --> 00:21:41,130
all available resources and which

00:21:37,919 --> 00:21:43,470
resources physically in which slot being

00:21:41,130 --> 00:21:47,309
assigned to which hosts and in there

00:21:43,470 --> 00:21:50,190
have the single UID so they know on if

00:21:47,309 --> 00:21:53,159
there's at one device fail it's easy to

00:21:50,190 --> 00:21:55,740
use for you to track which trap it's

00:21:53,159 --> 00:21:58,279
been has been fair which device should

00:21:55,740 --> 00:21:58,279
be changed

00:21:59,149 --> 00:22:04,860
this is different it's a different

00:22:00,990 --> 00:22:06,059
machine because yes it's like a

00:22:04,860 --> 00:22:08,009
management software

00:22:06,059 --> 00:22:10,139
it's like menu service and install in

00:22:08,009 --> 00:22:12,029
another VM machine and there will be a

00:22:10,139 --> 00:22:14,250
machine correct all that information

00:22:12,029 --> 00:22:22,649
from all these machines so he can draw a

00:22:14,250 --> 00:22:26,669
topology yeah it's like IBM storage

00:22:22,649 --> 00:22:28,799
systems major GUI similar like that you

00:22:26,669 --> 00:22:30,179
have a cluster you have all across value

00:22:28,799 --> 00:22:31,889
are different machines you have a

00:22:30,179 --> 00:22:34,740
different host in the different storage

00:22:31,889 --> 00:22:48,139
and you then you know the connection of

00:22:34,740 --> 00:22:48,139
a different storage now the agency

00:22:49,940 --> 00:23:05,519
HMC is ya know it's analogous is a

00:23:01,519 --> 00:23:09,840
building internals internal to talk to

00:23:05,519 --> 00:23:12,059
each other but yes similar to HMC seem a

00:23:09,840 --> 00:23:16,519
little bit yeah yeah similar motivations

00:23:12,059 --> 00:23:16,519
yeah yeah yeah changing yeah

00:23:16,870 --> 00:23:20,300
[Music]

00:23:24,620 --> 00:23:40,289
yes yes sure sure yes yes but here I

00:23:35,909 --> 00:23:42,510
want to emphasize if using FPGA there's

00:23:40,289 --> 00:23:44,820
a encounter lots of different

00:23:42,510 --> 00:23:47,220
compatibility issues for example the

00:23:44,820 --> 00:23:50,850
scene that I Jax is praying that I can

00:23:47,220 --> 00:23:52,860
get a commutation information from I

00:23:50,850 --> 00:23:54,750
square see different FPGA have a

00:23:52,860 --> 00:23:57,240
different permutation way so the berries

00:23:54,750 --> 00:24:02,809
and some probably need to integrate in a

00:23:57,240 --> 00:24:05,809
box in order to make it work any

00:24:02,809 --> 00:24:05,809
questions

00:24:26,400 --> 00:24:33,610
[Music]

00:24:28,499 --> 00:24:36,549
we have our OS installed in the BMC of

00:24:33,610 --> 00:24:39,999
the toolbox so the BMC will

00:24:36,549 --> 00:24:42,690
report all the information so BMC one

00:24:39,999 --> 00:24:45,429
gigabit management Paul back to the

00:24:42,690 --> 00:24:56,610
management center so the manual centered

00:24:45,429 --> 00:24:56,610
know everything of the machines yes yes

00:25:06,029 --> 00:25:17,049
yes yes so what the information that we

00:25:13,600 --> 00:25:18,789
connect we connect from the is the

00:25:17,049 --> 00:25:21,309
system wise of course we could also find

00:25:18,789 --> 00:25:23,740
information or the power information but

00:25:21,309 --> 00:25:26,440
we also connected to the I square C of

00:25:23,740 --> 00:25:27,999
every single slot so we collect all

00:25:26,440 --> 00:25:31,090
information from singles I think it

00:25:27,999 --> 00:25:35,019
asked us expect more I mean I'll be

00:25:31,090 --> 00:25:37,929
inspectors more complete in a B&E the

00:25:35,019 --> 00:25:40,480
most complete I mean you have a mere my

00:25:37,929 --> 00:25:43,570
spec identified so it's very complete

00:25:40,480 --> 00:25:45,850
and then a video have their own

00:25:43,570 --> 00:25:49,649
proprietary implementation way to give

00:25:45,850 --> 00:25:49,649
the information from the I square see

00:26:07,440 --> 00:26:15,740
you mean our I mean if we do the dynamic

00:26:11,640 --> 00:26:15,740
collocations we don't

00:26:35,770 --> 00:26:39,650
no we don't do that

00:26:37,610 --> 00:26:43,010
I think it's GPU memory GPU driver will

00:26:39,650 --> 00:26:45,190
do that they know they lost the GB

00:26:43,010 --> 00:26:48,700
driver so attribute driver where noise

00:26:45,190 --> 00:26:48,700
our loss it

00:26:54,520 --> 00:27:21,400
yes yes yeah so there's good questions

00:27:16,790 --> 00:27:26,419
in fact we have a some preventing

00:27:21,400 --> 00:27:29,900
McKenzie on if you want to remove one

00:27:26,419 --> 00:27:33,530
GPU from one server assigned to another

00:27:29,900 --> 00:27:36,290
if we find there's a some mutation and

00:27:33,530 --> 00:27:38,750
some sort of put we want Apple phone

00:27:36,290 --> 00:27:41,270
twice say are you sure you want to

00:27:38,750 --> 00:27:44,240
remove because we see that number number

00:27:41,270 --> 00:27:47,600
number number if you remove some process

00:27:44,240 --> 00:27:48,220
would be killed but if they want to

00:27:47,600 --> 00:27:53,020
remove that

00:27:48,220 --> 00:27:56,110
it's just removed so raven because

00:27:53,020 --> 00:27:58,160
theoretical this is being used by

00:27:56,110 --> 00:28:00,890
administrators they should know this

00:27:58,160 --> 00:28:03,110
system very well it's not being used by

00:28:00,890 --> 00:28:06,140
user because user usually if they do it

00:28:03,110 --> 00:28:08,270
then well it's a disaster so usually

00:28:06,140 --> 00:28:12,169
used by administrator than a machine

00:28:08,270 --> 00:28:14,500
know how serious of the effect so we

00:28:12,169 --> 00:28:19,000
will provide information to then say hey

00:28:14,500 --> 00:28:19,000
look someone is still using

00:28:28,350 --> 00:28:33,580
there

00:28:30,400 --> 00:28:37,090
yes yes in fact we have allegory we have

00:28:33,580 --> 00:28:40,800
a refuge and also a restful we have this

00:28:37,090 --> 00:28:40,800
that kind of a standard that you can use

00:28:43,830 --> 00:28:52,170
so the demo environment is that we have

00:28:47,170 --> 00:28:54,910
the environments in Taiwan Sri so even

00:28:52,170 --> 00:28:56,950
our research environment so you will see

00:28:54,910 --> 00:28:59,170
some of the data rate which is using

00:28:56,950 --> 00:29:03,160
butter we are not due to in all the

00:28:59,170 --> 00:29:05,590
informations because because we we

00:29:03,160 --> 00:29:07,390
cannot there are two substrates you will

00:29:05,590 --> 00:29:09,850
see the son of the data transfers in it

00:29:07,390 --> 00:29:18,059
and then of course there is our

00:29:09,850 --> 00:29:18,059
implementations so how we monitoring

00:29:28,400 --> 00:29:32,540
any other questions

00:29:39,510 --> 00:29:43,980
but maybe

00:29:54,410 --> 00:29:57,469
[Music]

00:30:08,320 --> 00:30:11,359
[Music]

00:30:18,580 --> 00:30:29,800
I extended the architecture because I

00:30:26,470 --> 00:30:35,920
mean usage they use with no morning no

00:30:29,800 --> 00:30:36,790
one it's a foster connected to 60 GB but

00:30:35,920 --> 00:30:40,630
it's full

00:30:36,790 --> 00:30:53,200
so if across so it's mean that he could

00:30:40,630 --> 00:31:04,570
have to forgive you or so in for gqh of

00:30:53,200 --> 00:31:09,850
you or or in their experiment that shows

00:31:04,570 --> 00:31:12,520
that II because the PDC was inefficient

00:31:09,850 --> 00:31:14,920
a bike so it's a we do remember a

00:31:12,520 --> 00:31:17,170
generation so they don't go back to the

00:31:14,920 --> 00:31:21,900
system memory if you go back to the

00:31:17,170 --> 00:31:23,080
memory they see even the sensor in the

00:31:21,900 --> 00:31:33,070
caucus

00:31:23,080 --> 00:31:37,170
QPR is we have fortunately a TPU 1040

00:31:33,070 --> 00:31:37,170
view on one one one CPU

00:32:10,200 --> 00:32:13,249
[Music]

00:32:27,260 --> 00:32:30,299
[Music]

00:32:41,470 --> 00:32:48,230
but which I have these limitations the

00:32:45,679 --> 00:32:53,269
key limitation is the scalability you

00:32:48,230 --> 00:32:55,789
can like if you want like over 32 64 GPU

00:32:53,269 --> 00:32:59,090
is very difficult to use the GPU

00:32:55,789 --> 00:33:04,580
preciate fabric to do it it's probably

00:32:59,090 --> 00:33:06,820
can reach like a 16 is good 30 study to

00:33:04,580 --> 00:33:12,019
probably Vasily you it's already crossed

00:33:06,820 --> 00:33:15,049
another CPU 16 is the highest that a

00:33:12,019 --> 00:33:18,120
state in SN P high fiber in our current

00:33:15,049 --> 00:33:21,560
permutations so that is the

00:33:18,120 --> 00:33:27,000
the limitation of the scalability of the

00:33:21,560 --> 00:33:30,360
GPU but no quality is there it got

00:33:27,000 --> 00:33:33,540
another very bad number if they data

00:33:30,360 --> 00:33:36,840
another test if they test a for GPU in a

00:33:33,540 --> 00:33:40,350
single piece a tree and each server gate

00:33:36,840 --> 00:33:42,540
at one GPU at that scenario the promise

00:33:40,350 --> 00:33:46,020
is just reduced to like only 30% of the

00:33:42,540 --> 00:33:47,970
for GPU on SNP tree because you can

00:33:46,020 --> 00:33:50,310
imagine that a lot of time is just

00:33:47,970 --> 00:33:52,740
waiting the i/o to the back wall and

00:33:50,310 --> 00:34:02,670
falling backwards in Galatians that kind

00:33:52,740 --> 00:34:09,020
of things is waiting okay so yeah we

00:34:02,670 --> 00:34:09,020
have a some connection problem here I

00:34:10,070 --> 00:34:15,740
can do it any questions

00:34:21,500 --> 00:34:58,340
I change to my mobile phone network and

00:34:35,030 --> 00:35:04,160
it's work have anyone tried pichia are

00:34:58,340 --> 00:35:06,460
composable no Colleen don't you see it's

00:35:04,160 --> 00:35:06,460
an error

00:35:06,790 --> 00:35:16,250
finally we've got it

00:35:09,580 --> 00:35:31,400
okay this is so cool has two

00:35:16,250 --> 00:35:35,089
identical pho draw so okay here is it

00:35:31,400 --> 00:35:41,720
2:01 and the draw tool and each tool can

00:35:35,089 --> 00:35:50,050
put a GPU and a to host mention so not

00:35:41,720 --> 00:35:54,589
so one we put a 2 P 101 t4 also want me

00:35:50,050 --> 00:35:59,690
so now they are one host County

00:35:54,589 --> 00:36:06,830
connected to this PC I switch and I'm

00:35:59,690 --> 00:36:11,349
going to show your GPU Hapuku let me

00:36:06,830 --> 00:36:11,349
going to server for two

00:36:11,390 --> 00:36:17,820
you know we put the GPU indifference

00:36:14,340 --> 00:36:20,280
piece which we do it on purpose because

00:36:17,820 --> 00:36:22,560
then you do the pedo bit and you can see

00:36:20,280 --> 00:36:28,080
it's going through different pieces

00:36:22,560 --> 00:36:31,500
which and we also put a different

00:36:28,080 --> 00:36:35,930
picture devices okay this is the

00:36:31,500 --> 00:36:41,610
appreciate topology here and this tree

00:36:35,930 --> 00:36:43,800
is from four come to in order to support

00:36:41,610 --> 00:36:47,670
a preciate Ibaka

00:36:43,800 --> 00:36:53,070
so which synthesizes some preciate extry

00:36:47,670 --> 00:36:57,510
porky and together PGI resource with one

00:36:53,070 --> 00:36:59,910
host a server like we asking hostess

00:36:57,510 --> 00:37:05,150
able to reserve with some fish eye

00:36:59,910 --> 00:37:09,000
passes and also fisheye memory mapping

00:37:05,150 --> 00:37:12,600
resources so that's why we can do

00:37:09,000 --> 00:37:16,080
appreciate her Park and you don't need

00:37:12,600 --> 00:37:22,950
to shut down a post a server or reap or

00:37:16,080 --> 00:37:25,400
host a server okay no it's not cheap you

00:37:22,950 --> 00:37:25,400
here

00:37:34,759 --> 00:37:58,229
okay not a few here okay I'm going to

00:37:39,479 --> 00:38:04,969
assign one pure hundred host detect 1 to

00:37:58,229 --> 00:38:04,969
100 here and that we check our PHP

00:38:06,660 --> 00:38:11,539
[Music]

00:38:12,580 --> 00:38:15,210
yeah

00:38:16,720 --> 00:38:24,300
pure hundra

00:38:19,770 --> 00:38:36,390
and also we use in a media as the night

00:38:24,300 --> 00:38:44,250
we check okay one pure hundred and then

00:38:36,390 --> 00:38:46,790
now I'm going to assign second what P

00:38:44,250 --> 00:38:46,790
00:38:50,670 --> 00:38:59,420
okay also one SST

00:39:16,100 --> 00:39:36,780
okay check out a PCI topology - pure

00:39:24,060 --> 00:39:39,680
hundred here and also one intel SSD -

00:39:36,780 --> 00:39:39,680
pure Android

00:39:41,150 --> 00:39:52,390
[Music]

00:39:45,690 --> 00:39:56,890
and one intel SSD here okay I'm not

00:39:52,390 --> 00:40:03,580
going to do 30 memory sizes between

00:39:56,890 --> 00:40:06,250
these two GPU when the omni's page we

00:40:03,580 --> 00:40:12,960
will we monitor a PCIe trafficker and

00:40:06,250 --> 00:40:12,960
also monitor PCIe at all stages so

00:40:13,950 --> 00:40:20,100
that's wrong the mineral program first

00:40:28,800 --> 00:40:36,800
and tweener memo memory copy between

00:40:33,960 --> 00:40:36,800
these two of you

00:40:45,349 --> 00:40:56,170
two women made happy okay we can check

00:40:53,150 --> 00:40:56,170
out a trafficker here

00:41:03,380 --> 00:41:13,580
okay it's not strong so we can see the

00:41:08,740 --> 00:41:19,250
GPO inquest and that equates data

00:41:13,580 --> 00:41:22,610
traffic between these two GPO miss P 100

00:41:19,250 --> 00:41:26,210
here and here because it's a

00:41:22,610 --> 00:41:30,350
peer-to-peer so the data not go through

00:41:26,210 --> 00:41:34,550
to the hostel server memory so host

00:41:30,350 --> 00:41:38,620
memory traffic is no traffic here only

00:41:34,550 --> 00:41:38,620
between these two GPU

00:41:40,990 --> 00:41:47,369
yeah yeah that's way

00:41:44,210 --> 00:41:47,369
[Music]

00:41:55,510 --> 00:42:08,680
okay mrs. traffic increase and the

00:42:01,060 --> 00:42:15,270
equation and we here on this page we

00:42:08,680 --> 00:42:18,460
also monitor PCIe pedal status like

00:42:15,270 --> 00:42:23,280
translation epic arrow or they'd had

00:42:18,460 --> 00:42:27,700
incurred the arrow and we also monitor

00:42:23,280 --> 00:42:30,130
the basic receiver I'll come to in in

00:42:27,700 --> 00:42:33,580
order to get a better proposal so we are

00:42:30,130 --> 00:42:36,180
a monitor we sure appreciate for our

00:42:33,580 --> 00:42:36,180
students

00:42:41,620 --> 00:42:45,150
okay that's that demo

00:42:45,380 --> 00:42:53,570
[Music]

00:42:55,510 --> 00:43:15,910
things aren't you doing today what's

00:43:00,640 --> 00:43:19,750
next we want to do the other device or

00:43:15,910 --> 00:43:25,180
an older memory may be suitably shy it's

00:43:19,750 --> 00:43:27,850
like internal CSL kind of things yeah

00:43:25,180 --> 00:43:31,690
because all the BGA device if they are

00:43:27,850 --> 00:43:35,190
under the since I mean of course we we

00:43:31,690 --> 00:43:39,490
can cross different MC butyl men and

00:43:35,190 --> 00:43:42,430
basically in this MC butyl men he will

00:43:39,490 --> 00:43:46,330
submit his device memory mapping to

00:43:42,430 --> 00:43:46,720
older PGI fabric order to host so all

00:43:46,330 --> 00:43:49,000
host

00:43:46,720 --> 00:43:51,580
although the device from two to one of

00:43:49,000 --> 00:43:56,970
the host but there a memory still can be

00:43:51,580 --> 00:43:59,410
reached by other devices or by other CPU

00:43:56,970 --> 00:44:01,660
yeah that is what we want to do in the

00:43:59,410 --> 00:44:04,180
future because it will be suitable to

00:44:01,660 --> 00:44:06,210
four PCI to shoot for the kind of our

00:44:04,180 --> 00:44:06,210
target

00:44:07,790 --> 00:44:12,020

YouTube URL: https://www.youtube.com/watch?v=kQr5sfpraLk


