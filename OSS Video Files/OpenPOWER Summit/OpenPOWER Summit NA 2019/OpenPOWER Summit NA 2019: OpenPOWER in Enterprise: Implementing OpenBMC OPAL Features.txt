Title: OpenPOWER Summit NA 2019: OpenPOWER in Enterprise: Implementing OpenBMC OPAL Features
Publication date: 2019-08-20
Playlist: OpenPOWER Summit NA 2019
Description: 
	Presented by Alexey Stepanov, Yadro cloud

Enterprises engaged in the digital transformation are welcoming high performance, low latency and speedy data access of OpenPOWER-based solutions. Unlike their counterparts in research institutions and labs, they must be confident that these solutions will also provide familiar Enterprise level of reliability, manageability, and serviceability.
From YADRO diverse field expertise and deep interaction with Enterprise customers, we’ve collected a selection of tech requirements for systems to fit in Enterprise infrastructure. In this talk, we’ll walk you through YADRO experience and lessons learned.
Captions: 
	00:00:00,030 --> 00:00:07,799
so we continue a discussion about the

00:00:03,419 --> 00:00:11,210
open power in the enterprise and if

00:00:07,799 --> 00:00:15,599
you've been to our previous session I

00:00:11,210 --> 00:00:23,240
told that in the open BMC we've had

00:00:15,599 --> 00:00:23,240
quite a lot of identified quite a lot of

00:00:23,570 --> 00:00:38,570
enhancement requests or whatever we need

00:00:27,750 --> 00:00:38,570
for changes so and when our when our

00:00:39,079 --> 00:00:48,600
server platform was almost ready we

00:00:42,960 --> 00:00:52,800
decided that we need to to compile that

00:00:48,600 --> 00:00:55,140
list of features that we want to

00:00:52,800 --> 00:00:58,289
implement and get to the customers and

00:00:55,140 --> 00:01:01,609
ask them what priorities for these

00:00:58,289 --> 00:01:05,840
features they would like to have because

00:01:01,609 --> 00:01:10,460
well we want to do many things but

00:01:05,840 --> 00:01:13,860
there's not enough time like always so

00:01:10,460 --> 00:01:17,610
so we approached our a couple of our big

00:01:13,860 --> 00:01:20,700
enterprise customers and asked them so

00:01:17,610 --> 00:01:24,630
that's that's the features that we we

00:01:20,700 --> 00:01:27,060
can do for you and do you think is it

00:01:24,630 --> 00:01:30,030
good or not and what what priorities do

00:01:27,060 --> 00:01:33,810
you want to have and in what what order

00:01:30,030 --> 00:01:35,790
and maybe you have any other ideas and

00:01:33,810 --> 00:01:44,790
there was a very interesting discussion

00:01:35,790 --> 00:01:48,829
around that so these are really large

00:01:44,790 --> 00:01:55,530
enterprise customers who used to deploy

00:01:48,829 --> 00:02:01,110
many different systems from the high end

00:01:55,530 --> 00:02:04,409
like IBM PC Riis Oracle's Park servers

00:02:01,110 --> 00:02:09,989
huge MCD that she storage systems etc

00:02:04,409 --> 00:02:11,920
etcetera and at the same time we needed

00:02:09,989 --> 00:02:14,950
to involve in that discussion the peep

00:02:11,920 --> 00:02:16,750
who are normally managing the line of

00:02:14,950 --> 00:02:23,140
servers because we are targeting the

00:02:16,750 --> 00:02:25,270
this market and that's why we wanted to

00:02:23,140 --> 00:02:27,819
talk to these guys as well and they are

00:02:25,270 --> 00:02:31,959
of course they are mainly experienced

00:02:27,819 --> 00:02:36,370
with the x86 systems provided by

00:02:31,959 --> 00:02:40,989
well-known vendors like HPE Dell and so

00:02:36,370 --> 00:02:43,480
on no and that's why the discussion was

00:02:40,989 --> 00:02:45,100
very interesting because the Heinz

00:02:43,480 --> 00:02:47,920
people they've been talking about

00:02:45,100 --> 00:02:50,890
high-end features and the x86 people

00:02:47,920 --> 00:02:56,430
have been talking about the what they

00:02:50,890 --> 00:02:56,430
used to see in the in the Intel world so

00:03:02,580 --> 00:03:10,709
so here is the list that features we've

00:03:07,150 --> 00:03:14,800
got as I said some of them are

00:03:10,709 --> 00:03:21,010
implemented in our hardware some of them

00:03:14,800 --> 00:03:25,420
are in progress and a couple of points

00:03:21,010 --> 00:03:29,260
here are customer requests and we also

00:03:25,420 --> 00:03:39,340
sort of managed to resolve them you can

00:03:29,260 --> 00:03:40,900
see nmi well the term is not correct of

00:03:39,340 --> 00:03:42,519
course for open power because we all

00:03:40,900 --> 00:03:45,790
know that and then why is a non-maskable

00:03:42,519 --> 00:03:49,769
interrupt it was implemented by IBM and

00:03:45,790 --> 00:03:53,410
Intel in the early days of x86 era and

00:03:49,769 --> 00:03:56,769
initially it was intended to just to

00:03:53,410 --> 00:04:01,329
give user ability to reset the hang

00:03:56,769 --> 00:04:05,320
server well we all know the term is not

00:04:01,329 --> 00:04:08,459
correct the in power specification this

00:04:05,320 --> 00:04:11,109
is called something like a system reset

00:04:08,459 --> 00:04:13,540
but when you are we are talking to the

00:04:11,109 --> 00:04:16,000
x86 people we have to use this term

00:04:13,540 --> 00:04:19,209
because they speak this language and yes

00:04:16,000 --> 00:04:21,200
even in all our internal nodes we refer

00:04:19,209 --> 00:04:27,170
as and my

00:04:21,200 --> 00:04:31,960
funny first it appeared that this kind

00:04:27,170 --> 00:04:33,890
of feature was not even designed and

00:04:31,960 --> 00:04:37,880
implemented in the Powerade

00:04:33,890 --> 00:04:42,290
because our our server is based on the

00:04:37,880 --> 00:04:44,920
Powerade not in the in not in the system

00:04:42,290 --> 00:04:49,370
for we're not even open BMC as well and

00:04:44,920 --> 00:04:53,300
we were but customer said this is a top

00:04:49,370 --> 00:04:55,970
priority and and they must have feature

00:04:53,300 --> 00:04:58,010
for for the enterprise environment

00:04:55,970 --> 00:05:00,560
because in case if system is not

00:04:58,010 --> 00:05:04,970
responsive or maybe well seems like

00:05:00,560 --> 00:05:07,160
hyung you need to do a reset and collect

00:05:04,970 --> 00:05:09,620
the kernel dump and send it to support

00:05:07,160 --> 00:05:16,160
to diagnose it and you know see what

00:05:09,620 --> 00:05:18,320
what what's happening inside so later on

00:05:16,160 --> 00:05:22,220
after some additional research and with

00:05:18,320 --> 00:05:24,890
kind of help from IBM engineering we

00:05:22,220 --> 00:05:28,220
finally found some couple lines of

00:05:24,890 --> 00:05:33,170
commented code it has to be uncommented

00:05:28,220 --> 00:05:36,070
i didn't work it has to include some

00:05:33,170 --> 00:05:37,300
other changes as well and finally we

00:05:36,070 --> 00:05:41,120
[Music]

00:05:37,300 --> 00:05:46,010
implemented in in opal in open BMC as

00:05:41,120 --> 00:05:49,790
well and now our server is doing the

00:05:46,010 --> 00:05:57,560
system reset like it should involve

00:05:49,790 --> 00:06:01,940
Linux kernel dump component it appears

00:05:57,560 --> 00:06:05,290
that Linux should run a rather fresh

00:06:01,940 --> 00:06:13,070
kernel version and it supports only

00:06:05,290 --> 00:06:15,830
starting from 444 14 later on not all

00:06:13,070 --> 00:06:18,470
operating systems yet transition to that

00:06:15,830 --> 00:06:24,350
the kernel version for example the Red

00:06:18,470 --> 00:06:28,880
Hat I think only the better preview of 7

00:06:24,350 --> 00:06:30,710
7 is now able to run for 14 well not not

00:06:28,880 --> 00:06:35,330
able to run but I mean

00:06:30,710 --> 00:06:39,129
for 14 as an option but earlier or it

00:06:35,330 --> 00:06:44,719
had releases did not support that

00:06:39,129 --> 00:06:48,999
Colonel and we are waiting for a redhead

00:06:44,719 --> 00:06:48,999
to catch up on this Ubuntu works well

00:06:51,039 --> 00:06:57,830
interesting is that now we learned that

00:06:54,080 --> 00:07:04,789
the IBM is also IBM and the open power

00:06:57,830 --> 00:07:08,719
community also working on porting the

00:07:04,789 --> 00:07:11,479
firmware assisted dump into the open

00:07:08,719 --> 00:07:13,879
power from the P series and this will be

00:07:11,479 --> 00:07:16,789
interesting to see how it develops

00:07:13,879 --> 00:07:19,520
because it will increase the enterprise

00:07:16,789 --> 00:07:25,369
capabilities of the platform and it will

00:07:19,520 --> 00:07:28,999
be good for everybody so now we we are

00:07:25,369 --> 00:07:33,199
going to the audit of user activities in

00:07:28,999 --> 00:07:35,930
the enterprise environment it is very

00:07:33,199 --> 00:07:39,080
important to know who is doing what and

00:07:35,930 --> 00:07:41,029
what time this first of all this is

00:07:39,080 --> 00:07:42,979
required for like troubleshooting

00:07:41,029 --> 00:07:46,490
because well something has changed

00:07:42,979 --> 00:07:52,099
something and well after that nothing is

00:07:46,490 --> 00:07:54,409
working and who is guilty and another

00:07:52,099 --> 00:07:57,379
reason is compliance because for

00:07:54,409 --> 00:07:59,300
security purposes the financial

00:07:57,379 --> 00:08:01,729
institutions for example they have to

00:07:59,300 --> 00:08:05,059
keep the track of all the user actions

00:08:01,729 --> 00:08:08,689
and things things like that so that's a

00:08:05,059 --> 00:08:14,990
very important feature and we were legit

00:08:08,689 --> 00:08:17,959
develop it this as a logging and display

00:08:14,990 --> 00:08:21,379
of of the user activities as an audit

00:08:17,959 --> 00:08:25,999
dump here is the sample output it was

00:08:21,379 --> 00:08:28,069
taken from the early release because you

00:08:25,999 --> 00:08:31,399
can see that it doesn't include the IP

00:08:28,069 --> 00:08:33,380
address of the Associated user which is

00:08:31,399 --> 00:08:36,740
very important in the final release

00:08:33,380 --> 00:08:37,519
which is going like I think at the end

00:08:36,740 --> 00:08:42,229
of September

00:08:37,519 --> 00:08:43,590
very so a this output it also will also

00:08:42,229 --> 00:08:45,570
include the IP addresses

00:08:43,590 --> 00:08:49,260
and so you can see the date the

00:08:45,570 --> 00:08:52,320
timestamp of the action the interface it

00:08:49,260 --> 00:08:59,029
is coming from like ipmi CLI or rest

00:08:52,320 --> 00:09:02,820
they the the digit column next is the

00:08:59,029 --> 00:09:06,089
exit code so she were success and then

00:09:02,820 --> 00:09:10,140
to create dump by the way that was a

00:09:06,089 --> 00:09:16,290
test of the feature of the system reset

00:09:10,140 --> 00:09:18,029
and it didn't succeed because the the

00:09:16,290 --> 00:09:21,089
operating system is not yet running so

00:09:18,029 --> 00:09:24,630
you see that the host Corey said was

00:09:21,089 --> 00:09:27,960
don't just a few minutes ago so the OS

00:09:24,630 --> 00:09:30,810
is not it booted but anyway it shows you

00:09:27,960 --> 00:09:32,640
that some action was successful some

00:09:30,810 --> 00:09:34,470
another action was not successful that

00:09:32,640 --> 00:09:38,940
setter etcetera and the action itself so

00:09:34,470 --> 00:09:40,620
like host reset and you know use a root

00:09:38,940 --> 00:09:55,440
logged in and things like that very

00:09:40,620 --> 00:10:00,800
useful yes it's in the open beam scene

00:09:55,440 --> 00:10:08,670
yeah anyhow probably in our in our fork

00:10:00,800 --> 00:10:14,430
maybe not in the main code well I'm in

00:10:08,670 --> 00:10:19,130
doubt I I can tell actually so from what

00:10:14,430 --> 00:10:23,850
I know that this will also probably be

00:10:19,130 --> 00:10:29,160
implemented in some other way and let

00:10:23,850 --> 00:10:31,650
later on you will see why a so right now

00:10:29,160 --> 00:10:34,560
we needed a kind of a quick solution for

00:10:31,650 --> 00:10:37,830
our own purposes and later on it will be

00:10:34,560 --> 00:10:39,560
probably in the third version of open B

00:10:37,830 --> 00:10:43,130
it will be implemented in a bigger

00:10:39,560 --> 00:10:43,130
amount extent

00:10:43,279 --> 00:10:52,619
uh-huh something like that

00:10:48,419 --> 00:10:54,709
yep quick and dirty but the good

00:10:52,619 --> 00:10:58,639
solution

00:10:54,709 --> 00:11:03,959
now that's was another interesting

00:10:58,639 --> 00:11:06,329
feature well the system takes some time

00:11:03,959 --> 00:11:09,929
to get through the self-test for example

00:11:06,329 --> 00:11:14,039
our server takes like 10 minutes to get

00:11:09,929 --> 00:11:16,739
up to the operating system or at least

00:11:14,039 --> 00:11:21,840
the pitted boot and the users already

00:11:16,739 --> 00:11:23,629
want to change the boot device entries

00:11:21,840 --> 00:11:28,139
[Music]

00:11:23,629 --> 00:11:30,809
we are sort of how implementing this

00:11:28,139 --> 00:11:33,209
because the first fast phase that we've

00:11:30,809 --> 00:11:35,099
done is we can do switching between the

00:11:33,209 --> 00:11:37,349
generic disk network and removable

00:11:35,099 --> 00:11:40,499
devices and the second phase that we are

00:11:37,349 --> 00:11:44,819
working right now and will be available

00:11:40,499 --> 00:11:48,809
like I think in November or October

00:11:44,819 --> 00:11:52,619
that's a even you can tell a specific

00:11:48,809 --> 00:11:54,689
UUID of a boot device that you want to

00:11:52,619 --> 00:11:59,399
boot interesting that in office that

00:11:54,689 --> 00:12:02,039
this feature was also requested not not

00:11:59,399 --> 00:12:05,129
only by our customers but also by our

00:12:02,039 --> 00:12:06,869
own internal storage development team

00:12:05,129 --> 00:12:11,629
who is working the guys who are working

00:12:06,869 --> 00:12:11,629
on the storage controller solution

00:12:18,320 --> 00:12:27,680
so you see I'm not a developer I you

00:12:22,500 --> 00:12:31,710
know I'm I helped them so I kind of I I

00:12:27,680 --> 00:12:33,810
helped them do to do the design what is

00:12:31,710 --> 00:12:36,450
required then I do the tests and things

00:12:33,810 --> 00:12:39,480
like that but I'm not a developer so I

00:12:36,450 --> 00:12:45,590
can't tell you exactly what we're in

00:12:39,480 --> 00:12:49,140
what they did code so I think I think

00:12:45,590 --> 00:12:54,680
this is also yeah this should be

00:12:49,140 --> 00:12:58,590
available everywhere so yeah I hope so

00:12:54,680 --> 00:13:00,570
well our idea is not to develop only our

00:12:58,590 --> 00:13:03,030
own product but also to help everybody

00:13:00,570 --> 00:13:08,960
to develop the entire line of products

00:13:03,030 --> 00:13:08,960
that the entire community should benefit

00:13:10,850 --> 00:13:18,240
access to the video console over lon

00:13:13,410 --> 00:13:21,110
so the thing is again it is already

00:13:18,240 --> 00:13:26,850
supported in the latest generation of

00:13:21,110 --> 00:13:29,820
BMC hardware but in the generation that

00:13:26,850 --> 00:13:32,430
we have in our platform it was never

00:13:29,820 --> 00:13:36,270
implemented at never even planet to be

00:13:32,430 --> 00:13:38,310
implemented the the discussion around

00:13:36,270 --> 00:13:42,150
this topic so this request came from the

00:13:38,310 --> 00:13:45,120
x86 guys they say that they really need

00:13:42,150 --> 00:13:48,570
it and we we didn't for for a long time

00:13:45,120 --> 00:13:51,830
we could not understand why and at the

00:13:48,570 --> 00:13:54,840
same time the high end team say that

00:13:51,830 --> 00:13:56,220
this request is ridiculous and it was

00:13:54,840 --> 00:14:00,020
never implemented in the high end

00:13:56,220 --> 00:14:03,420
systems and well forget about it but

00:14:00,020 --> 00:14:06,930
later on we understood so that the x86

00:14:03,420 --> 00:14:12,270
guys if the system is dead is doing a

00:14:06,930 --> 00:14:17,610
kernel panic and power of they at least

00:14:12,270 --> 00:14:20,960
can attach a video terminal and see what

00:14:17,610 --> 00:14:25,470
are the last words saying by the hosts

00:14:20,960 --> 00:14:27,770
when it was there but luckily the open

00:14:25,470 --> 00:14:31,710
beam she has a

00:14:27,770 --> 00:14:33,480
console log file and we just after when

00:14:31,710 --> 00:14:36,090
we understood the reason we just say oh

00:14:33,480 --> 00:14:37,680
come on guys that that's not difficult

00:14:36,090 --> 00:14:40,380
you can just have a look at that file

00:14:37,680 --> 00:14:46,080
they say oh now we know we are happy so

00:14:40,380 --> 00:14:50,790
we are resolved this request now this

00:14:46,080 --> 00:14:53,460
one this came from the high end guys the

00:14:50,790 --> 00:14:56,300
BMC car they say if it's a single point

00:14:53,460 --> 00:14:59,730
of failure that's bad

00:14:56,300 --> 00:15:02,730
well okay we said okay it's a high-end

00:14:59,730 --> 00:15:05,250
feature and it's a we are not doing a

00:15:02,730 --> 00:15:07,340
fault-tolerant system some components in

00:15:05,250 --> 00:15:09,870
our system are single points of failure

00:15:07,340 --> 00:15:13,260
we are really sorry but this is the

00:15:09,870 --> 00:15:17,580
market we are working on that our system

00:15:13,260 --> 00:15:22,650
is a two-unit linux box you will never

00:15:17,580 --> 00:15:25,620
find a similar computer from anybody

00:15:22,650 --> 00:15:32,780
else that will have some redundant beams

00:15:25,620 --> 00:15:35,690
here I lower drag card well at least we

00:15:32,780 --> 00:15:38,730
convinced them that this is not

00:15:35,690 --> 00:15:50,360
necessary to be done in the in our

00:15:38,730 --> 00:15:50,360
hardware and interesting is that the

00:15:50,380 --> 00:15:58,330
as I said in the young in a previous

00:15:54,370 --> 00:16:02,020
session the CPUs and memory are the

00:15:58,330 --> 00:16:06,220
single points of failure but we float

00:16:02,020 --> 00:16:08,410
the high mobility features to the

00:16:06,220 --> 00:16:10,360
operating system like to the clustering

00:16:08,410 --> 00:16:15,430
software the data replication and thing

00:16:10,360 --> 00:16:19,180
that things like that so on but we also

00:16:15,430 --> 00:16:23,080
know that that open power community is

00:16:19,180 --> 00:16:24,700
working on on the life CPU core D

00:16:23,080 --> 00:16:26,890
configuration and live memory D

00:16:24,700 --> 00:16:29,050
configuration features and not only the

00:16:26,890 --> 00:16:31,960
configuration but also configuration and

00:16:29,050 --> 00:16:34,990
this will greatly increase the

00:16:31,960 --> 00:16:37,000
enterprise core of the open power

00:16:34,990 --> 00:16:41,280
platform it will be great to see the

00:16:37,000 --> 00:16:41,280
development in this area

00:16:49,380 --> 00:16:58,000
okay I think this will probably be

00:16:53,650 --> 00:16:59,560
useful for the big systems where you

00:16:58,000 --> 00:17:01,720
know we could because I know that

00:16:59,560 --> 00:17:04,150
p-series will sooner or later migrated

00:17:01,720 --> 00:17:08,589
to open BMC is about right so if you

00:17:04,150 --> 00:17:17,500
have a big box like a one rack yeah yeah

00:17:08,589 --> 00:17:22,959
yeah yeah yeah yeah but not for the

00:17:17,500 --> 00:17:26,080
small systems of course yeah no not

00:17:22,959 --> 00:17:31,060
intended to be to be that way not

00:17:26,080 --> 00:17:40,620
expected okay and now this is a little

00:17:31,060 --> 00:17:43,690
bit in relation with the audit log so we

00:17:40,620 --> 00:17:50,890
we are sorry we understood that the

00:17:43,690 --> 00:17:56,680
users they need to have at least one

00:17:50,890 --> 00:17:59,980
more user account read-only for example

00:17:56,680 --> 00:18:03,250
the use cases like the night shift due

00:17:59,980 --> 00:18:06,820
to shift so people who don't very

00:18:03,250 --> 00:18:09,670
well-known this system but they could be

00:18:06,820 --> 00:18:12,400
required to access the system and at

00:18:09,670 --> 00:18:14,460
least read some logs and read some you

00:18:12,400 --> 00:18:18,130
know sensor values and things like that

00:18:14,460 --> 00:18:21,850
the access the console to to get to the

00:18:18,130 --> 00:18:23,950
host but the difference they don't have

00:18:21,850 --> 00:18:26,410
to change anything

00:18:23,950 --> 00:18:33,430
in the system right now open beams he

00:18:26,410 --> 00:18:37,690
has only two built-in users is a root

00:18:33,430 --> 00:18:40,390
and admin and the root is like well it's

00:18:37,690 --> 00:18:43,300
our engineering user we don't give an

00:18:40,390 --> 00:18:45,640
access to user to our customers with the

00:18:43,300 --> 00:18:47,620
root access and then they are left with

00:18:45,640 --> 00:18:49,780
the only one account it's a admin with

00:18:47,620 --> 00:18:51,760
the simplified CLI where they

00:18:49,780 --> 00:18:57,580
essentially can do anything like a

00:18:51,760 --> 00:18:58,490
reboot a host and whatever so now phase

00:18:57,580 --> 00:19:02,110
one

00:18:58,490 --> 00:19:07,610
is that we are probably we will develop

00:19:02,110 --> 00:19:10,759
a read-only user and the phase 2 is a

00:19:07,610 --> 00:19:13,999
few featured role based access control

00:19:10,759 --> 00:19:17,960
with the enterprise directory

00:19:13,999 --> 00:19:20,360
integration I think it is in progress in

00:19:17,960 --> 00:19:22,610
the open BMC community and we are sort

00:19:20,360 --> 00:19:26,749
of waiting for that feature to appear

00:19:22,610 --> 00:19:38,269
and is this will greatly improve the

00:19:26,749 --> 00:19:44,360
open BMC functionality yep now this

00:19:38,269 --> 00:19:46,639
feature also is in development after the

00:19:44,360 --> 00:19:49,220
page boot is able to load the bootable

00:19:46,639 --> 00:19:54,019
images from network location spike for

00:19:49,220 --> 00:19:56,149
FTP from HTTP the x86 people are used to

00:19:54,019 --> 00:19:58,490
occasionally boot from a file or folder

00:19:56,149 --> 00:20:01,179
image which is stored right on the

00:19:58,490 --> 00:20:09,950
workstation where they operate is

00:20:01,179 --> 00:20:12,889
working this is very often happens in

00:20:09,950 --> 00:20:16,429
scenarios like when they have to do a

00:20:12,889 --> 00:20:18,860
firmware or software update or like

00:20:16,429 --> 00:20:24,320
troubleshooting Diagnostics and recovery

00:20:18,860 --> 00:20:28,669
and things like that in many of these

00:20:24,320 --> 00:20:31,159
situations the the maintenance window is

00:20:28,669 --> 00:20:35,720
very short and date time is running very

00:20:31,159 --> 00:20:38,210
fast and the it's difficult to fit in

00:20:35,720 --> 00:20:40,820
that time so that for the user to upload

00:20:38,210 --> 00:20:44,149
the image to some FTP location and then

00:20:40,820 --> 00:20:46,999
fiddle with the long URL to put it in

00:20:44,149 --> 00:20:48,710
the pit at Google and so that the system

00:20:46,999 --> 00:20:51,140
can boot out of there it will be much

00:20:48,710 --> 00:20:53,809
more easy like when

00:20:51,140 --> 00:20:57,159
on a web browser user can click open

00:20:53,809 --> 00:21:00,769
image and just upload it from their own

00:20:57,159 --> 00:21:04,730
computer workstation and the system

00:21:00,769 --> 00:21:08,390
óbuda are there very straightforward

00:21:04,730 --> 00:21:11,210
process so we know that mmm

00:21:08,390 --> 00:21:16,850
this feature is being developed in the

00:21:11,210 --> 00:21:18,830
open BMC project and which means that

00:21:16,850 --> 00:21:20,720
this enterprise requirement is clearly

00:21:18,830 --> 00:21:32,960
understood by the community and that's

00:21:20,720 --> 00:21:37,399
great good now now I see that yeah you

00:21:32,960 --> 00:21:41,779
probably know more more than me this

00:21:37,399 --> 00:21:44,000
entire topic yes yes that's a clear yeah

00:21:41,779 --> 00:21:44,960
that's a clear request they say that's a

00:21:44,000 --> 00:21:46,760
very good

00:21:44,960 --> 00:21:48,380
they don't say that's a top priority

00:21:46,760 --> 00:21:50,330
because really they say that top

00:21:48,380 --> 00:21:52,639
priority was not the only the end of

00:21:50,330 --> 00:21:54,409
mine that we've done yeah and that

00:21:52,639 --> 00:21:57,860
already exists and working on the power

00:21:54,409 --> 00:22:05,620
9 as well power and the my and the mine

00:21:57,860 --> 00:22:09,440
again so yeah now go home

00:22:05,620 --> 00:22:12,740
so enterprise solutions are impossible

00:22:09,440 --> 00:22:15,320
to imagine without 24 by 7 support and

00:22:12,740 --> 00:22:18,350
the co home feature has always been an

00:22:15,320 --> 00:22:22,039
important part of that process we are

00:22:18,350 --> 00:22:24,320
currently developing the cajon solution

00:22:22,039 --> 00:22:26,659
that will be available for our server

00:22:24,320 --> 00:22:29,029
platform and also for our storage

00:22:26,659 --> 00:22:35,120
storage process that will be a unified

00:22:29,029 --> 00:22:37,940
solution for all our product lines it

00:22:35,120 --> 00:22:41,059
should include the open beam see

00:22:37,940 --> 00:22:43,549
embedded agent that will sort of upload

00:22:41,059 --> 00:22:45,590
the log files and require down or at

00:22:43,549 --> 00:22:50,539
least sell that everything is ok so like

00:22:45,590 --> 00:22:52,789
I said the heartbeat it will we we think

00:22:50,539 --> 00:22:55,820
we're also thinking we need to develop

00:22:52,789 --> 00:22:58,720
the host operating system basis module

00:22:55,820 --> 00:23:01,639
the agent because not everything is

00:22:58,720 --> 00:23:05,210
available from the BMC in the system

00:23:01,639 --> 00:23:07,310
like PCI devices

00:23:05,210 --> 00:23:11,150
and Vimy devices are not visible on and

00:23:07,310 --> 00:23:16,610
BMC level and they their health is also

00:23:11,150 --> 00:23:20,900
required to be reported to to the Khan

00:23:16,610 --> 00:23:23,870
Center and the most important is that

00:23:20,900 --> 00:23:26,360
the we also thinking to develop the

00:23:23,870 --> 00:23:28,130
intelligent mecan't data processing

00:23:26,360 --> 00:23:31,190
system that will be able to timely

00:23:28,130 --> 00:23:34,370
process the failure logs and the regular

00:23:31,190 --> 00:23:37,280
telemetry uploads and it will integrate

00:23:34,370 --> 00:23:39,680
into the customer support service desk

00:23:37,280 --> 00:23:42,530
and the installed base tracking systems

00:23:39,680 --> 00:23:45,650
that so that all the information will be

00:23:42,530 --> 00:23:52,670
like a collected and stored in the

00:23:45,650 --> 00:23:56,750
appropriate places right now

00:23:52,670 --> 00:23:59,630
so i i've seen in the in the in the

00:23:56,750 --> 00:24:08,140
development plan for like for like a

00:23:59,630 --> 00:24:08,140
year of 20 no did they call home yes

00:24:18,320 --> 00:24:25,240
great

00:24:20,460 --> 00:24:31,210
only to the telemetry the year what

00:24:25,240 --> 00:24:35,500
about the error logs yeah yes that's all

00:24:31,210 --> 00:24:37,570
there you can get alerts the we're

00:24:35,500 --> 00:24:39,460
working on the full system where you're

00:24:37,570 --> 00:24:40,840
gonna have the airlocks and everything

00:24:39,460 --> 00:24:41,530
is going to be passed back that's not

00:24:40,840 --> 00:24:43,420
there yet

00:24:41,530 --> 00:24:45,070
where you get where you get where you

00:24:43,420 --> 00:24:46,570
can call home the air logged that's in

00:24:45,070 --> 00:24:50,530
the works for it well we have right now

00:24:46,570 --> 00:24:52,059
is telemetry data and you can get alerts

00:24:50,530 --> 00:24:54,940
for when certain things would change

00:24:52,059 --> 00:24:56,890
like if you if you want to set up a like

00:24:54,940 --> 00:24:58,960
a temperature trip point or something to

00:24:56,890 --> 00:25:01,080
set that and then it would mm-hmm and

00:24:58,960 --> 00:25:05,340
then you get that but we should maybe

00:25:01,080 --> 00:25:13,000
further okay thank you thank you

00:25:05,340 --> 00:25:15,570
and the the dream is to develop a mass

00:25:13,000 --> 00:25:21,429
monitoring management and deployment to

00:25:15,570 --> 00:25:23,890
the imagine is that if you have a number

00:25:21,429 --> 00:25:26,290
of quite a number of systems installed

00:25:23,890 --> 00:25:28,419
in your data center there is a short

00:25:26,290 --> 00:25:30,340
maintenance window when some of them

00:25:28,419 --> 00:25:32,679
maybe not even all of them but some of

00:25:30,340 --> 00:25:38,350
them are available to perform a firmware

00:25:32,679 --> 00:25:39,940
update because it is rolling out what if

00:25:38,350 --> 00:25:42,429
you need to boot a number of systems

00:25:39,940 --> 00:25:44,860
from the same network image or maybe

00:25:42,429 --> 00:25:49,380
change like some common beam see

00:25:44,860 --> 00:25:52,840
settings on a set of systems like maybe

00:25:49,380 --> 00:25:55,470
NTP or some P configuration or whatever

00:25:52,840 --> 00:26:00,610
so something that is not unique to

00:25:55,470 --> 00:26:06,090
single BMC but like should be across the

00:26:00,610 --> 00:26:09,340
set of beam sees well it's clear that

00:26:06,090 --> 00:26:10,870
open power systems should have this kind

00:26:09,340 --> 00:26:14,710
of tool that will help to do some

00:26:10,870 --> 00:26:19,240
maintenance tasks as in parallel this

00:26:14,710 --> 00:26:21,910
tool could also perform basic inventory

00:26:19,240 --> 00:26:25,260
and monitoring all the systems like for

00:26:21,910 --> 00:26:28,770
a customer not for not like a co home

00:26:25,260 --> 00:26:32,140
solution that will report this data to

00:26:28,770 --> 00:26:33,249
to a vendor to a hardware vendor but for

00:26:32,140 --> 00:26:36,519
a customer that

00:26:33,249 --> 00:26:38,649
systems are good you know the green the

00:26:36,519 --> 00:26:42,220
defense are rotating the power is okay

00:26:38,649 --> 00:26:45,580
and the temperature is good and maybe

00:26:42,220 --> 00:26:48,340
all of some third party products

00:26:45,580 --> 00:26:52,749
integration maybe even like Nagios or

00:26:48,340 --> 00:26:57,220
Patrol or tivoli who knows we probably

00:26:52,749 --> 00:26:59,739
will initiate this project later this

00:26:57,220 --> 00:27:02,340
year and it will require significant

00:26:59,739 --> 00:27:06,099
resources and a fourth but should be

00:27:02,340 --> 00:27:09,940
getting up to speed because wow that

00:27:06,099 --> 00:27:13,330
will be a good tool for so you could use

00:27:09,940 --> 00:27:16,359
X have you heard of X cat but have you

00:27:13,330 --> 00:27:20,259
heard of the the South Africa called X

00:27:16,359 --> 00:27:22,929
cat it's open source does I don't know

00:27:20,259 --> 00:27:24,789
everything you want but well yes well we

00:27:22,929 --> 00:27:27,309
understand that there there is a number

00:27:24,789 --> 00:27:31,389
of solutions that can can do that or but

00:27:27,309 --> 00:27:35,289
we either that's a good idea so probably

00:27:31,389 --> 00:27:38,229
we think that we may take one of these

00:27:35,289 --> 00:27:40,029
open source solutions but we need to at

00:27:38,229 --> 00:27:42,279
least to deploy the templates and you

00:27:40,029 --> 00:27:43,869
know that these scripts they ordered a

00:27:42,279 --> 00:27:50,879
car how do you call that the receipts

00:27:43,869 --> 00:27:53,889
the receipts for the for these tasks I

00:27:50,879 --> 00:27:55,779
don't know what you mean but what we

00:27:53,889 --> 00:27:57,549
have it I mean this works that are in

00:27:55,779 --> 00:27:59,799
our big National Labs or that scale

00:27:57,549 --> 00:28:01,899
right so we've got X cat running with

00:27:59,799 --> 00:28:05,679
all kinds of our p9s with running open

00:28:01,899 --> 00:28:07,869
BMC and it does all it does your code

00:28:05,679 --> 00:28:12,940
update and monitoring and everything so

00:28:07,869 --> 00:28:15,639
it's already working so he uses even you

00:28:12,940 --> 00:28:18,639
can do a firmware update firmware update

00:28:15,639 --> 00:28:21,190
oriini yeah interesting

00:28:18,639 --> 00:28:23,710
yeah show you some pointers today well

00:28:21,190 --> 00:28:26,679
you know at least this this is something

00:28:23,710 --> 00:28:28,570
that we should develop not the custom

00:28:26,679 --> 00:28:31,779
because well actually the customer can

00:28:28,570 --> 00:28:34,599
do it themselves right but and the mice

00:28:31,779 --> 00:28:36,009
customers are not doing that and because

00:28:34,599 --> 00:28:38,349
they don't want to take this

00:28:36,009 --> 00:28:39,789
responsibility what happens if the

00:28:38,349 --> 00:28:43,479
something goes wrong and the firmware

00:28:39,789 --> 00:28:45,129
date will fail yeah and what if this

00:28:43,479 --> 00:28:46,370
happens on a dozen of systems at the

00:28:45,129 --> 00:28:49,940
same time that's

00:28:46,370 --> 00:28:51,860
total failure if you're gonna sell like

00:28:49,940 --> 00:28:53,420
a cluster I mean you definitely have to

00:28:51,860 --> 00:28:55,580
sell the software that manages that

00:28:53,420 --> 00:28:58,130
cluster yes include that which is not

00:28:55,580 --> 00:28:59,630
you can use ex-cat and not leave another

00:28:58,130 --> 00:29:03,740
class because you know customer might

00:28:59,630 --> 00:29:06,290
have a number of clusters right yes but

00:29:03,740 --> 00:29:08,630
we just saw it not as a cluster but just

00:29:06,290 --> 00:29:12,050
as a bunch of servers like recommend

00:29:08,630 --> 00:29:19,790
servers yeah that's the idea behind yeah

00:29:12,050 --> 00:29:22,340
sure you know so that's it

00:29:19,790 --> 00:29:26,150
so that was a list of enterprise

00:29:22,340 --> 00:29:28,640
features and as you already noticed it's

00:29:26,150 --> 00:29:30,860
good that we we've done it in

00:29:28,640 --> 00:29:34,550
cooperation with customers so that we

00:29:30,860 --> 00:29:35,770
are not just talking like from ourselves

00:29:34,550 --> 00:29:38,300
[Music]

00:29:35,770 --> 00:29:41,690
we know that we are not along this track

00:29:38,300 --> 00:29:44,180
so we rely only upon BMC community and

00:29:41,690 --> 00:29:49,310
open power community as well and we hope

00:29:44,180 --> 00:29:52,340
that sooner or later we make it the

00:29:49,310 --> 00:29:59,890
major ecosystem around the open BMC and

00:29:52,340 --> 00:30:03,449
the open power servers thank you

00:29:59,890 --> 00:30:03,449

YouTube URL: https://www.youtube.com/watch?v=jHPF2y9NPI0


