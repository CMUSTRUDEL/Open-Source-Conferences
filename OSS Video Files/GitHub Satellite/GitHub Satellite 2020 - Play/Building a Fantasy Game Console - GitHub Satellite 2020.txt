Title: Building a Fantasy Game Console - GitHub Satellite 2020
Publication date: 2020-05-07
Playlist: GitHub Satellite 2020 - Play
Description: 
	In this talk, Jesse Freeman, will walk you through how he created his open source Fantasy Game Console, Pixel Vision 8.
 He'll also cover the general architecture of Pixel Vision 8, how #Lua 
is used on top of C# for scripting, and finally how to build the engine 
from the GitHub source code. At the end of the talk, you'll know everything you need to start making PV8 games in C# or Lua.

Twitter: @jessefreeman

GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the worldâ€™s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:02,180 --> 00:00:07,929
[Music]

00:00:13,120 --> 00:00:16,080
hi

00:00:14,000 --> 00:00:18,240
so tonight i wanted to talk about a

00:00:16,080 --> 00:00:20,080
passion project of mine in a new space

00:00:18,240 --> 00:00:21,520
that's been rapidly gaining popularity

00:00:20,080 --> 00:00:24,080
in the indie gaming development

00:00:21,520 --> 00:00:24,080
communities

00:00:24,560 --> 00:00:27,920
so my name is jesse freeman i'm the head

00:00:26,720 --> 00:00:31,439
of developer

00:00:27,920 --> 00:00:33,600
relations at samsung next and before i

00:00:31,439 --> 00:00:35,120
got into developer relations and even

00:00:33,600 --> 00:00:37,120
evangelism

00:00:35,120 --> 00:00:38,559
i started building websites in the

00:00:37,120 --> 00:00:40,079
early.com days

00:00:38,559 --> 00:00:42,079
so my background comes from building

00:00:40,079 --> 00:00:42,559
websites for arista records the new york

00:00:42,079 --> 00:00:45,920
jets

00:00:42,559 --> 00:00:47,680
major league baseball hbo and more and

00:00:45,920 --> 00:00:49,920
eventually i made the switch from

00:00:47,680 --> 00:00:51,840
building web develop websites to my true

00:00:49,920 --> 00:00:54,800
passion which was game development

00:00:51,840 --> 00:00:56,320
so i joined microsoft and amazon and

00:00:54,800 --> 00:00:57,920
over the course of eight years worked

00:00:56,320 --> 00:00:58,879
directly with indie game developers

00:00:57,920 --> 00:01:02,000
around the world

00:00:58,879 --> 00:01:03,760
to help them build their own games

00:01:02,000 --> 00:01:05,760
and i've tried to be a champion for

00:01:03,760 --> 00:01:08,479
indie game developers and i also wrote

00:01:05,760 --> 00:01:10,720
one of the first books on html5 games

00:01:08,479 --> 00:01:13,040
so in addition i also worked on several

00:01:10,720 --> 00:01:14,159
amazon teams that helped build hardware

00:01:13,040 --> 00:01:16,320
and software

00:01:14,159 --> 00:01:18,560
to allow developers to build innovative

00:01:16,320 --> 00:01:21,759
and profitable games

00:01:18,560 --> 00:01:22,960
but about a year ago i decided to make

00:01:21,759 --> 00:01:25,280
another switch

00:01:22,960 --> 00:01:26,479
and was getting very interested in ai

00:01:25,280 --> 00:01:29,680
and machine learning

00:01:26,479 --> 00:01:31,759
so i joined samsung next and a big part

00:01:29,680 --> 00:01:34,000
of this motivation was really to see

00:01:31,759 --> 00:01:34,960
how much further i can push technology

00:01:34,000 --> 00:01:36,640
so of course i

00:01:34,960 --> 00:01:38,320
approached machine learning like i do

00:01:36,640 --> 00:01:39,040
any other new programming language and i

00:01:38,320 --> 00:01:41,600
tried to see

00:01:39,040 --> 00:01:43,680
how can i make a game with it so one of

00:01:41,600 --> 00:01:44,320
the earliest examples i did was teaching

00:01:43,680 --> 00:01:46,720
a machine

00:01:44,320 --> 00:01:48,399
and a model how to actually generate out

00:01:46,720 --> 00:01:50,560
text adventure stories and this is an

00:01:48,399 --> 00:01:52,479
article i wrote for towards data science

00:01:50,560 --> 00:01:54,240
it talks about how i fed all of the

00:01:52,479 --> 00:01:55,200
terminal text from a game called

00:01:54,240 --> 00:01:57,520
marathon

00:01:55,200 --> 00:01:58,960
into a model and had it output uh its

00:01:57,520 --> 00:02:02,240
own generic

00:01:58,960 --> 00:02:03,920
text for a game so currently

00:02:02,240 --> 00:02:06,399
some of the stuff that me and my team

00:02:03,920 --> 00:02:09,759
are working on is how we can pair

00:02:06,399 --> 00:02:11,520
ai and food and one of the things is a

00:02:09,759 --> 00:02:12,080
product that we're working on at samsung

00:02:11,520 --> 00:02:14,000
x called

00:02:12,080 --> 00:02:15,760
whisk which allows developers to tap

00:02:14,000 --> 00:02:17,760
into a large food database

00:02:15,760 --> 00:02:20,400
that is powered by ai to help suggest

00:02:17,760 --> 00:02:22,000
recipes find ingredients online

00:02:20,400 --> 00:02:23,520
and better understand the food that you

00:02:22,000 --> 00:02:26,640
eat

00:02:23,520 --> 00:02:28,080
but this talk tonight isn't really about

00:02:26,640 --> 00:02:30,080
jesse today

00:02:28,080 --> 00:02:31,200
it's actually about jesse almost 35

00:02:30,080 --> 00:02:33,440
years ago

00:02:31,200 --> 00:02:34,640
so this story really starts back in the

00:02:33,440 --> 00:02:36,879
early 80s

00:02:34,640 --> 00:02:38,800
when i first started using a computer

00:02:36,879 --> 00:02:40,640
and i came from the last generation of

00:02:38,800 --> 00:02:41,519
kids who remember using computers on

00:02:40,640 --> 00:02:43,599
monochromatic

00:02:41,519 --> 00:02:44,640
displays that ran solely from the

00:02:43,599 --> 00:02:46,239
command line

00:02:44,640 --> 00:02:49,040
and while this may have been how i got

00:02:46,239 --> 00:02:51,599
my start my true passion for computing

00:02:49,040 --> 00:02:53,680
began when i got my first macintosh and

00:02:51,599 --> 00:02:56,080
from an early age i was an artist

00:02:53,680 --> 00:02:57,840
drawing painting sculpting until i

00:02:56,080 --> 00:02:59,840
taught myself how to code

00:02:57,840 --> 00:03:04,000
and became one of the early pioneers of

00:02:59,840 --> 00:03:06,959
the interactive web days

00:03:04,000 --> 00:03:08,800
so indie games which gave rise sort of

00:03:06,959 --> 00:03:10,640
about 10 years ago as i started making

00:03:08,800 --> 00:03:11,599
the transition into evangelism at

00:03:10,640 --> 00:03:13,280
microsoft

00:03:11,599 --> 00:03:14,800
really spoke to me because i really

00:03:13,280 --> 00:03:17,280
liked the idea of these small

00:03:14,800 --> 00:03:18,080
teams building retro style games which

00:03:17,280 --> 00:03:19,920
reminded me

00:03:18,080 --> 00:03:22,000
of the stuff that i used to play and

00:03:19,920 --> 00:03:24,480
build in the early 90s

00:03:22,000 --> 00:03:25,200
and so six years ago this indie game

00:03:24,480 --> 00:03:27,840
aesthetic

00:03:25,200 --> 00:03:29,200
gave rise to the first fantasy console

00:03:27,840 --> 00:03:31,920
now a fantasy console

00:03:29,200 --> 00:03:33,680
revolves around three key points the

00:03:31,920 --> 00:03:35,120
first is that it's a self-contained

00:03:33,680 --> 00:03:37,519
development environment

00:03:35,120 --> 00:03:38,959
and what that means is that not only is

00:03:37,519 --> 00:03:41,599
it a place for you to

00:03:38,959 --> 00:03:43,519
build a game and play a game but it also

00:03:41,599 --> 00:03:44,560
has all the tools you need such as a

00:03:43,519 --> 00:03:47,040
sprite editor

00:03:44,560 --> 00:03:49,200
a tile map editor and tools for building

00:03:47,040 --> 00:03:51,360
sounds and even coding

00:03:49,200 --> 00:03:53,280
the next is that a fantasy console

00:03:51,360 --> 00:03:54,959
usually has very strict limitations

00:03:53,280 --> 00:03:57,760
these are designed to emulate

00:03:54,959 --> 00:03:59,680
early 8-bit game consoles so because of

00:03:57,760 --> 00:04:00,879
that there are strict limitations around

00:03:59,680 --> 00:04:03,920
resolution

00:04:00,879 --> 00:04:06,480
memory graphics and sounds

00:04:03,920 --> 00:04:08,560
and finally each fantasy console has a

00:04:06,480 --> 00:04:10,400
very unique ecosystem around it

00:04:08,560 --> 00:04:12,239
and that's due in part to the

00:04:10,400 --> 00:04:14,480
limitations that they have

00:04:12,239 --> 00:04:15,599
since each fantasy console has its own

00:04:14,480 --> 00:04:17,680
color palette

00:04:15,599 --> 00:04:18,720
and its own way of rendering graphics to

00:04:17,680 --> 00:04:20,400
the display

00:04:18,720 --> 00:04:22,400
you get very unique games that you can

00:04:20,400 --> 00:04:23,919
tell come from very specific fantasy

00:04:22,400 --> 00:04:24,880
consoles just like if you look at

00:04:23,919 --> 00:04:26,320
certain games

00:04:24,880 --> 00:04:28,240
you can tell which ones came from

00:04:26,320 --> 00:04:29,919
nintendo versus sega

00:04:28,240 --> 00:04:32,400
based on the colors and the size of the

00:04:29,919 --> 00:04:32,400
sprites

00:04:33,280 --> 00:04:38,080
so the first fantasy console was pico 8

00:04:36,320 --> 00:04:39,919
and at the time it was incredibly clear

00:04:38,080 --> 00:04:40,560
to me how this was the natural counter

00:04:39,919 --> 00:04:42,560
movement

00:04:40,560 --> 00:04:44,639
to the large and more complicated game

00:04:42,560 --> 00:04:45,919
development software tools such as unity

00:04:44,639 --> 00:04:48,080
and unreal

00:04:45,919 --> 00:04:49,440
but unlike those tools pico 8 was more

00:04:48,080 --> 00:04:51,199
than just a game engine

00:04:49,440 --> 00:04:52,880
it was entirely self-contained

00:04:51,199 --> 00:04:56,080
development environment and i was

00:04:52,880 --> 00:04:57,919
instantly hooked

00:04:56,080 --> 00:04:59,440
there was one thing that i felt was

00:04:57,919 --> 00:05:01,440
holding it back

00:04:59,440 --> 00:05:02,639
and to kick things off you needed to use

00:05:01,440 --> 00:05:04,720
the command line

00:05:02,639 --> 00:05:07,680
and while i use bash daily to commit

00:05:04,720 --> 00:05:08,320
code run node and execute my automation

00:05:07,680 --> 00:05:10,560
tools

00:05:08,320 --> 00:05:12,639
my earliest days of coding really began

00:05:10,560 --> 00:05:14,960
on the more user-friendly and graphical

00:05:12,639 --> 00:05:17,120
rich ui of the macintosh

00:05:14,960 --> 00:05:19,680
so while i learned basic and c at an

00:05:17,120 --> 00:05:21,680
early age it wasn't until hypercard

00:05:19,680 --> 00:05:22,720
that i truly fell in love with merging

00:05:21,680 --> 00:05:25,280
both my artistic

00:05:22,720 --> 00:05:26,639
and coding sides of my brain which later

00:05:25,280 --> 00:05:29,199
gave birth to my career in web

00:05:26,639 --> 00:05:29,199
development

00:05:30,080 --> 00:05:33,680
so i set off to build my own version of

00:05:32,479 --> 00:05:36,080
a fantasy console

00:05:33,680 --> 00:05:37,520
called pixel vision8 and not only did i

00:05:36,080 --> 00:05:38,000
want to make a more user-friendly

00:05:37,520 --> 00:05:40,720
development

00:05:38,000 --> 00:05:42,000
environment for people like me i wanted

00:05:40,720 --> 00:05:43,759
something more approachable to

00:05:42,000 --> 00:05:47,039
generations the developers that came

00:05:43,759 --> 00:05:48,880
after me and grew up where design ux and

00:05:47,039 --> 00:05:53,039
rich uis were at the forefront of the

00:05:48,880 --> 00:05:54,880
computing experience

00:05:53,039 --> 00:05:56,960
so while it's easy to build a clone of

00:05:54,880 --> 00:05:57,840
pico 8 in fact there are lots of them

00:05:56,960 --> 00:05:59,840
out there

00:05:57,840 --> 00:06:02,000
my vision was to push the concept

00:05:59,840 --> 00:06:04,479
forward and to do this i built a

00:06:02,000 --> 00:06:06,000
custom engine from the ground up and an

00:06:04,479 --> 00:06:09,360
os on top of it

00:06:06,000 --> 00:06:11,199
that supported a desktop disks allowed

00:06:09,360 --> 00:06:13,759
customizing the specs

00:06:11,199 --> 00:06:15,440
and i made it fully extendable so that

00:06:13,759 --> 00:06:17,280
people can build their own tools on top

00:06:15,440 --> 00:06:19,440
of the ones that i created

00:06:17,280 --> 00:06:21,199
in short i wanted a fantasy console that

00:06:19,440 --> 00:06:24,560
was completely customizable

00:06:21,199 --> 00:06:24,560
with modern workflows

00:06:26,000 --> 00:06:30,240
so pixel vision 8 is built in c-sharp

00:06:28,400 --> 00:06:30,639
with a lua interpreter that's sitting on

00:06:30,240 --> 00:06:32,840
top

00:06:30,639 --> 00:06:34,080
and exposes the underlying game engine's

00:06:32,840 --> 00:06:35,919
apis

00:06:34,080 --> 00:06:37,680
and what this allows you to do is to

00:06:35,919 --> 00:06:38,720
build games in lua without having to

00:06:37,680 --> 00:06:40,960
recompile

00:06:38,720 --> 00:06:43,039
in order to see the changes and this is

00:06:40,960 --> 00:06:44,800
pretty common with fantasy consoles

00:06:43,039 --> 00:06:47,120
a lot of them are written in a lower

00:06:44,800 --> 00:06:49,199
level language and what you get to use

00:06:47,120 --> 00:06:51,440
is sort of a scripting language on top

00:06:49,199 --> 00:06:54,800
to make iterating through game designs

00:06:51,440 --> 00:06:54,800
rather quick and fast

00:06:55,520 --> 00:07:00,080
so since the lua apis are also the same

00:06:58,560 --> 00:07:02,400
as the c-sharp ones

00:07:00,080 --> 00:07:04,479
it offers an upgrade path to easily port

00:07:02,400 --> 00:07:06,240
to c-sharp if you want more power or you

00:07:04,479 --> 00:07:09,680
want to add features that are not

00:07:06,240 --> 00:07:11,360
actually part of the core lua api set

00:07:09,680 --> 00:07:12,560
and what this means is that there's

00:07:11,360 --> 00:07:14,080
complete parity and one of the

00:07:12,560 --> 00:07:16,160
frustrations i saw with

00:07:14,080 --> 00:07:17,840
modern fantasy consoles is that once you

00:07:16,160 --> 00:07:19,360
built a really great game

00:07:17,840 --> 00:07:21,120
you were sort of stuck in that little

00:07:19,360 --> 00:07:22,240
sandbox so if you wanted to turn that

00:07:21,120 --> 00:07:23,759
into something bigger

00:07:22,240 --> 00:07:26,720
there really was no way to do it unless

00:07:23,759 --> 00:07:29,280
you ported it to some other game engine

00:07:26,720 --> 00:07:31,199
with pixel vision 8 all you need to do

00:07:29,280 --> 00:07:33,039
is take the same apis that you're using

00:07:31,199 --> 00:07:34,880
in lua and just port the differences

00:07:33,039 --> 00:07:37,039
between the two languages over to c

00:07:34,880 --> 00:07:39,680
sharp and you can now build on top of

00:07:37,039 --> 00:07:39,680
monogame

00:07:40,240 --> 00:07:45,759
so because of this shared api

00:07:43,360 --> 00:07:48,000
there's a consistency between both of

00:07:45,759 --> 00:07:50,000
the different types of coding languages

00:07:48,000 --> 00:07:52,160
you can use to build your games

00:07:50,000 --> 00:07:54,000
because really at its core i didn't want

00:07:52,160 --> 00:07:55,840
to lock developers in

00:07:54,000 --> 00:07:57,360
and while pixel vision 8 has its own

00:07:55,840 --> 00:07:59,520
built-in tools

00:07:57,360 --> 00:08:00,560
i really created a workflow that allows

00:07:59,520 --> 00:08:02,080
you to use external

00:08:00,560 --> 00:08:04,080
code that allows you to use external

00:08:02,080 --> 00:08:06,800
code editors and create artwork

00:08:04,080 --> 00:08:08,800
with your own art tools as well in fact

00:08:06,800 --> 00:08:11,680
i actually released an atom plug-in that

00:08:08,800 --> 00:08:12,960
offers the lua api code completion i

00:08:11,680 --> 00:08:13,599
don't want you to be locked into

00:08:12,960 --> 00:08:15,759
anything

00:08:13,599 --> 00:08:17,520
so use the tools that you're comfortable

00:08:15,759 --> 00:08:18,240
with or try to use the ones that i've

00:08:17,520 --> 00:08:21,280
been building

00:08:18,240 --> 00:08:22,400
inside of the fantasy console

00:08:21,280 --> 00:08:24,560
so i'll talk a little bit about the

00:08:22,400 --> 00:08:26,479
architecture at its core

00:08:24,560 --> 00:08:28,319
pixel vision 8 is built around this

00:08:26,479 --> 00:08:29,759
modular set of chips

00:08:28,319 --> 00:08:31,919
and they control everything from the

00:08:29,759 --> 00:08:33,200
screen's resolution to how many sprites

00:08:31,919 --> 00:08:35,519
or can be displayed

00:08:33,200 --> 00:08:38,240
to what kind of sound effects are played

00:08:35,519 --> 00:08:41,120
and even how things are rendered

00:08:38,240 --> 00:08:41,440
you can even build out a cart chip that

00:08:41,120 --> 00:08:43,919
ex

00:08:41,440 --> 00:08:46,240
that gets a limitation on how big a game

00:08:43,919 --> 00:08:46,240
can be

00:08:47,360 --> 00:08:51,680
so and each ship is implemented with a c

00:08:50,240 --> 00:08:53,279
sharp core engine

00:08:51,680 --> 00:08:55,920
um and they're designed to be easily

00:08:53,279 --> 00:08:56,720
swappable so what that means is that um

00:08:55,920 --> 00:09:00,080
as long as you

00:08:56,720 --> 00:09:02,160
implement the i s the i chip interface

00:09:00,080 --> 00:09:04,000
uh you can actually tap into the

00:09:02,160 --> 00:09:06,959
engine's native update and draw

00:09:04,000 --> 00:09:08,800
methods so in this case uh when you go

00:09:06,959 --> 00:09:11,360
to build a c-sharp game

00:09:08,800 --> 00:09:13,040
you wind up getting just a game chip and

00:09:11,360 --> 00:09:14,560
if you want to build a lua game you wind

00:09:13,040 --> 00:09:16,320
up getting the lula game chip

00:09:14,560 --> 00:09:18,480
which adds in the lu interpreter and

00:09:16,320 --> 00:09:19,920
exposes the apis to the lewis side of

00:09:18,480 --> 00:09:21,200
things

00:09:19,920 --> 00:09:23,040
you can do this for anything if you

00:09:21,200 --> 00:09:24,480
wanted to build your 3d engine

00:09:23,040 --> 00:09:26,399
inside of pixel vision 8 you can

00:09:24,480 --> 00:09:29,680
actually build a new display chip

00:09:26,399 --> 00:09:29,680
that would handle that as well

00:09:29,839 --> 00:09:32,880
but i want to talk a little bit about

00:09:31,279 --> 00:09:34,800
rendering because one of the big

00:09:32,880 --> 00:09:37,200
challenges of building an 8-bit game

00:09:34,800 --> 00:09:40,240
engine on top of modern game engines

00:09:37,200 --> 00:09:41,680
is rendering i grew up specializing in

00:09:40,240 --> 00:09:43,360
something called blitting

00:09:41,680 --> 00:09:44,959
and i wrote lots and lots of blitting

00:09:43,360 --> 00:09:46,959
engines and basically what bleeding is

00:09:44,959 --> 00:09:48,399
is that you draw pixel data directly to

00:09:46,959 --> 00:09:50,320
the display

00:09:48,399 --> 00:09:52,160
so i did this throughout my flash career

00:09:50,320 --> 00:09:53,200
and it allowed me to bypass the slow

00:09:52,160 --> 00:09:55,279
vector rendering

00:09:53,200 --> 00:09:57,920
in flash and i actually created one of

00:09:55,279 --> 00:10:00,080
the first early 3d websites with it

00:09:57,920 --> 00:10:01,760
um but the downside of it is that modern

00:10:00,080 --> 00:10:03,760
game engines don't really do this

00:10:01,760 --> 00:10:04,640
anymore they all use textures and

00:10:03,760 --> 00:10:06,959
shaders and

00:10:04,640 --> 00:10:09,360
uh really primarily are focused more on

00:10:06,959 --> 00:10:09,360
3d

00:10:09,519 --> 00:10:13,600
so what i wound up doing was building a

00:10:11,760 --> 00:10:15,200
custom software render

00:10:13,600 --> 00:10:17,040
and the reason for that is that i wanted

00:10:15,200 --> 00:10:18,480
to use some old techniques such as

00:10:17,040 --> 00:10:20,640
palette swapping

00:10:18,480 --> 00:10:22,959
and what happens is that every time a

00:10:20,640 --> 00:10:25,360
sprite is loaded into a game

00:10:22,959 --> 00:10:27,600
each of the color pixels are pointing to

00:10:25,360 --> 00:10:29,360
a color id and memory

00:10:27,600 --> 00:10:30,800
and what that allows me to do is if i

00:10:29,360 --> 00:10:32,560
change the color and memory

00:10:30,800 --> 00:10:34,079
the sprite automatically changes

00:10:32,560 --> 00:10:36,000
instantly because it's

00:10:34,079 --> 00:10:37,360
referencing that color and you may be

00:10:36,000 --> 00:10:39,760
familiar with this when you've seen

00:10:37,360 --> 00:10:40,560
games where you have a green enemy on

00:10:39,760 --> 00:10:42,959
one level

00:10:40,560 --> 00:10:44,640
and then later on it becomes stronger

00:10:42,959 --> 00:10:45,920
and it's now red

00:10:44,640 --> 00:10:47,680
also as you can see from this little

00:10:45,920 --> 00:10:49,920
animation that i created here

00:10:47,680 --> 00:10:51,760
um if you want to fade up and down

00:10:49,920 --> 00:10:52,560
artwork especially on like a start

00:10:51,760 --> 00:10:55,519
screen

00:10:52,560 --> 00:10:57,200
mario 3 for example does this you can't

00:10:55,519 --> 00:10:59,920
actually use alpha because

00:10:57,200 --> 00:11:01,600
8-bit game engines didn't have alpha so

00:10:59,920 --> 00:11:03,519
what you wind up having to do is just

00:11:01,600 --> 00:11:04,959
change through and cycle the colors out

00:11:03,519 --> 00:11:08,720
through different palettes

00:11:04,959 --> 00:11:08,720
and this can create the similar effect

00:11:10,320 --> 00:11:15,120
so another part of it is how i actually

00:11:13,279 --> 00:11:17,040
display the pixel data

00:11:15,120 --> 00:11:18,880
um so i use a custom built software

00:11:17,040 --> 00:11:20,959
render as i mentioned before

00:11:18,880 --> 00:11:22,000
and the final output from the pixel

00:11:20,959 --> 00:11:25,360
vision 8's

00:11:22,000 --> 00:11:25,920
own software render is basically dumped

00:11:25,360 --> 00:11:28,959
into

00:11:25,920 --> 00:11:30,399
a texture and displayed on the screen

00:11:28,959 --> 00:11:32,079
and some of the other things that i do

00:11:30,399 --> 00:11:34,240
is i have some shaders that can sit on

00:11:32,079 --> 00:11:35,760
top of it to give you a crt filter for a

00:11:34,240 --> 00:11:37,600
more authentic look

00:11:35,760 --> 00:11:39,920
so early on when i was building pixel

00:11:37,600 --> 00:11:41,440
vision 8 i started using unity

00:11:39,920 --> 00:11:43,519
and i was running into a lot of problems

00:11:41,440 --> 00:11:44,240
because unity is primarily designed for

00:11:43,519 --> 00:11:46,640
3d

00:11:44,240 --> 00:11:48,560
games and trying to just do stuff where

00:11:46,640 --> 00:11:50,639
you're blitting directly into a texture

00:11:48,560 --> 00:11:52,639
wound up being incredibly slow

00:11:50,639 --> 00:11:54,000
so when i ported it over to monogame

00:11:52,639 --> 00:11:56,320
which is an open source

00:11:54,000 --> 00:11:58,000
game engine i was able to actually strip

00:11:56,320 --> 00:11:59,680
out all of the 3d stuff

00:11:58,000 --> 00:12:02,000
and what all the parts that i didn't

00:11:59,680 --> 00:12:03,760
need of monogame and whittled it down to

00:12:02,000 --> 00:12:05,279
its core which is built around something

00:12:03,760 --> 00:12:07,920
called sdl2

00:12:05,279 --> 00:12:10,000
and this is a very low level game

00:12:07,920 --> 00:12:12,240
library that accesses controllers

00:12:10,000 --> 00:12:13,440
displays for opengl and is

00:12:12,240 --> 00:12:15,040
cross-platform

00:12:13,440 --> 00:12:17,519
and this is really the key to how i'm

00:12:15,040 --> 00:12:18,160
able to build pixel vision 8 and its

00:12:17,519 --> 00:12:19,760
games

00:12:18,160 --> 00:12:22,480
cross-platform with very little

00:12:19,760 --> 00:12:22,480
additional work

00:12:23,200 --> 00:12:27,440
so the other big part of the game engine

00:12:25,519 --> 00:12:30,560
is the sound and the music

00:12:27,440 --> 00:12:32,000
so i built a custom sound chip on top of

00:12:30,560 --> 00:12:34,079
a open source project called

00:12:32,000 --> 00:12:35,360
sfxr and if you're not familiar with

00:12:34,079 --> 00:12:38,320
that it actually

00:12:35,360 --> 00:12:39,600
is a set of templates that allow you to

00:12:38,320 --> 00:12:42,160
randomly create

00:12:39,600 --> 00:12:44,000
sound effects for a game i don't come

00:12:42,160 --> 00:12:45,120
from a music background so it's really

00:12:44,000 --> 00:12:46,240
good especially when you're in a game

00:12:45,120 --> 00:12:47,839
jam i usually let

00:12:46,240 --> 00:12:50,720
the sound and music i leave that to the

00:12:47,839 --> 00:12:52,480
very end so i can just go into sfx or

00:12:50,720 --> 00:12:55,600
click a few buttons and get

00:12:52,480 --> 00:12:58,320
all the sounds that i need and

00:12:55,600 --> 00:12:59,519
this also gave me the idea to can we

00:12:58,320 --> 00:13:02,560
extend this

00:12:59,519 --> 00:13:02,560
into making music

00:13:02,800 --> 00:13:06,639
so pixel vision 8's music tool is rather

00:13:05,519 --> 00:13:08,639
unique

00:13:06,639 --> 00:13:10,800
while it does have a tracker and the

00:13:08,639 --> 00:13:14,160
tracker uses the sound effects for

00:13:10,800 --> 00:13:15,680
its uh for its instruments

00:13:14,160 --> 00:13:17,200
what you see here in the animation is

00:13:15,680 --> 00:13:18,000
that you can actually click this magic

00:13:17,200 --> 00:13:19,600
wand

00:13:18,000 --> 00:13:21,200
and the magic wands will automatically

00:13:19,600 --> 00:13:22,720
generate music for you

00:13:21,200 --> 00:13:24,320
so going back to what i had mentioned

00:13:22,720 --> 00:13:25,200
earlier about my interest in machine

00:13:24,320 --> 00:13:27,200
learning

00:13:25,200 --> 00:13:28,560
this is an early example of me trying to

00:13:27,200 --> 00:13:32,160
figure out how can

00:13:28,560 --> 00:13:32,959
we train and teach pixel vision 8 for

00:13:32,160 --> 00:13:35,760
example

00:13:32,959 --> 00:13:36,720
to generate out music so a lot of the

00:13:35,760 --> 00:13:39,199
music it creates

00:13:36,720 --> 00:13:40,000
isn't very good but it gets me close

00:13:39,199 --> 00:13:41,760
enough to

00:13:40,000 --> 00:13:44,480
go in and start cleaning it up by hand

00:13:41,760 --> 00:13:46,320
when normally looking at a blank tracker

00:13:44,480 --> 00:13:49,199
sort of intimidates me and i wouldn't

00:13:46,320 --> 00:13:51,040
even know where to begin

00:13:49,199 --> 00:13:52,320
so the other thing i'll mention too what

00:13:51,040 --> 00:13:54,240
i find interesting and why i'm

00:13:52,320 --> 00:13:57,760
fascinated with machine learning

00:13:54,240 --> 00:13:59,920
is the idea of well generating music is

00:13:57,760 --> 00:14:01,519
pretty simple one day i hope to be able

00:13:59,920 --> 00:14:04,160
to create artwork

00:14:01,519 --> 00:14:04,880
or have the pixel vision 8 even generate

00:14:04,160 --> 00:14:07,279
out levels

00:14:04,880 --> 00:14:08,800
or play test them for you so all of

00:14:07,279 --> 00:14:10,800
these are things i've been seeing online

00:14:08,800 --> 00:14:13,040
that people have been experimenting with

00:14:10,800 --> 00:14:14,880
and eventually this might be easy enough

00:14:13,040 --> 00:14:18,560
to just implement into not only my game

00:14:14,880 --> 00:14:18,560
engine but other game engines as well

00:14:19,120 --> 00:14:22,880
so next i'll talk a little bit about

00:14:20,480 --> 00:14:24,399
input and the way that i've handled

00:14:22,880 --> 00:14:25,040
input in pixel vision 8 is that i

00:14:24,399 --> 00:14:27,040
exposed

00:14:25,040 --> 00:14:29,120
three different input methods there are

00:14:27,040 --> 00:14:30,959
controllers so you can plug in usb

00:14:29,120 --> 00:14:33,120
or bluetooth controllers there's

00:14:30,959 --> 00:14:36,000
keyboard support for entering in text

00:14:33,120 --> 00:14:37,360
and then there's mouse support and one

00:14:36,000 --> 00:14:38,639
of the things that i wound up having to

00:14:37,360 --> 00:14:42,160
do especially when

00:14:38,639 --> 00:14:42,800
i was switching over from unity to mono

00:14:42,160 --> 00:14:45,120
game

00:14:42,800 --> 00:14:46,240
and trying to build out a very uh simple

00:14:45,120 --> 00:14:48,320
input system

00:14:46,240 --> 00:14:49,680
was that i wound up abstracting out the

00:14:48,320 --> 00:14:50,959
way that input works through the

00:14:49,680 --> 00:14:52,399
controller chip

00:14:50,959 --> 00:14:55,440
and what winds up happening is that

00:14:52,399 --> 00:14:56,639
there are a set of core apis that hide

00:14:55,440 --> 00:14:58,959
all the complexity

00:14:56,639 --> 00:15:00,320
of dealing with input it makes it easy

00:14:58,959 --> 00:15:03,920
where all you have to do is say

00:15:00,320 --> 00:15:05,920
is button a been pressed or released

00:15:03,920 --> 00:15:09,279
and you can do the same thing with any

00:15:05,920 --> 00:15:09,279
key or with the mouse

00:15:11,279 --> 00:15:14,720
but the most important thing for me was

00:15:13,360 --> 00:15:17,199
the desire to make all of this

00:15:14,720 --> 00:15:18,560
open source so that i can contribute to

00:15:17,199 --> 00:15:20,560
uh the community

00:15:18,560 --> 00:15:22,720
and also that others can take what i've

00:15:20,560 --> 00:15:24,560
built and maybe build their own fantasy

00:15:22,720 --> 00:15:26,320
consoles on top of it

00:15:24,560 --> 00:15:28,399
so from the very beginning the whole

00:15:26,320 --> 00:15:29,519
reason for me building this uh modular

00:15:28,399 --> 00:15:31,680
architecture

00:15:29,519 --> 00:15:35,040
was to allow other people to go in and

00:15:31,680 --> 00:15:35,040
customize and do what they want

00:15:37,279 --> 00:15:41,680
so there isn't really a lot of time for

00:15:38,959 --> 00:15:43,759
me to go into actually building a game

00:15:41,680 --> 00:15:45,600
but what i do want to show you is a

00:15:43,759 --> 00:15:47,759
quick example of just how to compile the

00:15:45,600 --> 00:15:50,399
code from scratch

00:15:47,759 --> 00:15:50,800
and before i dig into that what i want

00:15:50,399 --> 00:15:53,600
to show

00:15:50,800 --> 00:15:54,720
is if you go to pixelvision8.com what

00:15:53,600 --> 00:15:58,720
you can actually do

00:15:54,720 --> 00:15:59,440
is download a copy of the pre-compiled

00:15:58,720 --> 00:16:01,199
version

00:15:59,440 --> 00:16:02,480
and this has everything you need to

00:16:01,199 --> 00:16:04,320
start building a game

00:16:02,480 --> 00:16:06,240
built in it has the operating system

00:16:04,320 --> 00:16:09,199
already configured and installed

00:16:06,240 --> 00:16:10,240
it has pro tools which um i've recently

00:16:09,199 --> 00:16:11,920
just made free

00:16:10,240 --> 00:16:13,279
during what's going on with everything i

00:16:11,920 --> 00:16:15,360
want people to make more games and i'll

00:16:13,279 --> 00:16:17,440
talk a little bit about that later

00:16:15,360 --> 00:16:19,759
and also there's documentation and code

00:16:17,440 --> 00:16:20,959
examples and you can go and click on the

00:16:19,759 --> 00:16:23,920
source code

00:16:20,959 --> 00:16:25,360
so when you open up the source code and

00:16:23,920 --> 00:16:28,000
you go to github

00:16:25,360 --> 00:16:29,920
you'll see the project all the commits

00:16:28,000 --> 00:16:32,240
and everything that's going on

00:16:29,920 --> 00:16:33,120
master is always the most stable build

00:16:32,240 --> 00:16:35,759
and below

00:16:33,120 --> 00:16:36,160
is instructions on how to actually build

00:16:35,759 --> 00:16:39,360
a

00:16:36,160 --> 00:16:40,480
simple c-sharp game using the included

00:16:39,360 --> 00:16:42,079
project

00:16:40,480 --> 00:16:44,160
so i'll switch over real quick i've

00:16:42,079 --> 00:16:46,720
already gone ahead and downloaded it

00:16:44,160 --> 00:16:48,320
and when you open it up or you clone it

00:16:46,720 --> 00:16:50,240
to your computer what you'll wind up

00:16:48,320 --> 00:16:51,839
seeing are a few different visual studio

00:16:50,240 --> 00:16:54,639
solutions

00:16:51,839 --> 00:16:56,399
the first one is a mono game runner and

00:16:54,639 --> 00:16:58,800
what this does is a project that

00:16:56,399 --> 00:16:59,279
includes a simple c-sharp runner and a

00:16:58,800 --> 00:17:01,920
simple

00:16:59,279 --> 00:17:02,880
lua runner and this shows you a way to

00:17:01,920 --> 00:17:06,079
just either build

00:17:02,880 --> 00:17:08,559
a c-sharp game from scratch or lua game

00:17:06,079 --> 00:17:09,360
there's a way of generating out dlls if

00:17:08,559 --> 00:17:11,280
you want to

00:17:09,360 --> 00:17:13,199
incorporate pixel vision 8 into another

00:17:11,280 --> 00:17:14,400
project but the one i'm going to talk

00:17:13,199 --> 00:17:17,120
about right now

00:17:14,400 --> 00:17:19,039
is the pixel vision 8 runner and this is

00:17:17,120 --> 00:17:21,600
actually how to build and compile the

00:17:19,039 --> 00:17:23,919
entire operating system from scratch

00:17:21,600 --> 00:17:26,160
so i'll switch over to visual studio if

00:17:23,919 --> 00:17:28,880
you're using a mac you can use rider

00:17:26,160 --> 00:17:30,640
and all you need to do is once you

00:17:28,880 --> 00:17:32,320
download the project

00:17:30,640 --> 00:17:34,640
go into the references and you'll need

00:17:32,320 --> 00:17:37,200
to probably fix the nougat

00:17:34,640 --> 00:17:38,160
packages so there are two of them that i

00:17:37,200 --> 00:17:40,880
use

00:17:38,160 --> 00:17:42,640
one of them is called sharp zip which is

00:17:40,880 --> 00:17:43,360
for dealing with zipping up the disk

00:17:42,640 --> 00:17:45,280
files

00:17:43,360 --> 00:17:46,960
and the other is called monovision which

00:17:45,280 --> 00:17:48,960
is another open source project

00:17:46,960 --> 00:17:50,000
that allows me to use the uh lu

00:17:48,960 --> 00:17:53,120
interpreter

00:17:50,000 --> 00:17:53,840
and then once all the references are set

00:17:53,120 --> 00:17:56,720
up

00:17:53,840 --> 00:17:58,080
all you need to do is hit start and

00:17:56,720 --> 00:18:00,640
it'll go ahead and

00:17:58,080 --> 00:18:01,840
compile it for you so as you see it'll

00:18:00,640 --> 00:18:04,240
boot up into

00:18:01,840 --> 00:18:05,760
pixel vision 8 give you all the credits

00:18:04,240 --> 00:18:06,799
for everyone who's helped contribute to

00:18:05,760 --> 00:18:09,120
the project

00:18:06,799 --> 00:18:10,480
and then you'll see this error um so

00:18:09,120 --> 00:18:10,880
since we're building it from the source

00:18:10,480 --> 00:18:12,640
code

00:18:10,880 --> 00:18:14,000
the operating system isn't included with

00:18:12,640 --> 00:18:15,600
the build so we're going to have

00:18:14,000 --> 00:18:17,600
to actually just mount it off of the

00:18:15,600 --> 00:18:20,880
disk so inside

00:18:17,600 --> 00:18:23,360
of the project folder there is a

00:18:20,880 --> 00:18:24,320
disks folder and you'll see pixel vision

00:18:23,360 --> 00:18:26,400
os

00:18:24,320 --> 00:18:27,440
we simply drag this onto the window

00:18:26,400 --> 00:18:29,919
you'll see the disk

00:18:27,440 --> 00:18:31,520
it's inserted and if this is your first

00:18:29,919 --> 00:18:33,600
time using pixel vision 8

00:18:31,520 --> 00:18:35,440
it'll ask you to create a workspace on

00:18:33,600 --> 00:18:37,760
your computer where you can access the

00:18:35,440 --> 00:18:40,320
files that pixel vision 8 are editing

00:18:37,760 --> 00:18:43,280
and then if you hit ok it'll create your

00:18:40,320 --> 00:18:44,960
first project for you so inside of this

00:18:43,280 --> 00:18:46,960
you'll see all the different files that

00:18:44,960 --> 00:18:49,120
make up a game each one of them is

00:18:46,960 --> 00:18:51,760
associated to a unique editor

00:18:49,120 --> 00:18:54,000
and if you hit run you'll see your first

00:18:51,760 --> 00:18:56,320
hello world project

00:18:54,000 --> 00:18:58,320
going quickly you can simply just open

00:18:56,320 --> 00:19:00,559
up the code editor here

00:18:58,320 --> 00:19:02,960
um and type in the code that you want or

00:19:00,559 --> 00:19:05,679
you can use an external code editor

00:19:02,960 --> 00:19:06,320
there are tools for building out custom

00:19:05,679 --> 00:19:10,000
colors

00:19:06,320 --> 00:19:11,600
and system palettes so here is a full uh

00:19:10,000 --> 00:19:13,360
color picker if you want to design your

00:19:11,600 --> 00:19:15,440
own uh custom

00:19:13,360 --> 00:19:16,480
colors um one of the other things that

00:19:15,440 --> 00:19:18,880
i'm really uh

00:19:16,480 --> 00:19:20,320
proud of is this idea of i talked about

00:19:18,880 --> 00:19:22,320
the chips under the hood

00:19:20,320 --> 00:19:24,240
of how the c sharp engine works but on

00:19:22,320 --> 00:19:26,559
the lewis side of things there

00:19:24,240 --> 00:19:27,520
is a chip editor and what this does is

00:19:26,559 --> 00:19:30,720
it allows you to

00:19:27,520 --> 00:19:32,720
pull out some pre-configured chips so

00:19:30,720 --> 00:19:34,160
there are different settings for the

00:19:32,720 --> 00:19:37,200
nintendo

00:19:34,160 --> 00:19:39,039
for the early master system even the

00:19:37,200 --> 00:19:39,679
game boy you can change out the cart

00:19:39,039 --> 00:19:41,760
types

00:19:39,679 --> 00:19:43,360
which change the size and also how big

00:19:41,760 --> 00:19:45,120
of a tile map you can have

00:19:43,360 --> 00:19:46,799
and you can even change out the sound

00:19:45,120 --> 00:19:49,280
render so

00:19:46,799 --> 00:19:50,640
what happens is even for sound you can

00:19:49,280 --> 00:19:55,120
go through and define

00:19:50,640 --> 00:19:55,120
what audio channel plays what wave sound

00:19:55,600 --> 00:19:59,520
so and i won't be able to go through all

00:19:57,280 --> 00:20:02,159
of these but there is a built-in

00:19:59,520 --> 00:20:03,760
font editor um i talked about the text

00:20:02,159 --> 00:20:04,880
editor and then there's also a built-in

00:20:03,760 --> 00:20:08,240
sprite editor

00:20:04,880 --> 00:20:08,559
and a tile map editor so all of these

00:20:08,240 --> 00:20:10,720
things

00:20:08,559 --> 00:20:11,600
are here to help you build your own

00:20:10,720 --> 00:20:13,840
games

00:20:11,600 --> 00:20:15,440
and the other thing is that there's a

00:20:13,840 --> 00:20:18,400
full set of documentation

00:20:15,440 --> 00:20:19,679
so on the github project there's

00:20:18,400 --> 00:20:22,000
actually a wiki

00:20:19,679 --> 00:20:23,840
and the wiki has everything you need to

00:20:22,000 --> 00:20:25,799
get started with a c-sharp

00:20:23,840 --> 00:20:27,520
um but if you go to

00:20:25,799 --> 00:20:28,960
docs.pixelvision8.com it'll show you all

00:20:27,520 --> 00:20:30,559
the documentation

00:20:28,960 --> 00:20:33,360
for either building a game in lua or

00:20:30,559 --> 00:20:34,000
c-sharp and there's a full set of api

00:20:33,360 --> 00:20:36,880
examples

00:20:34,000 --> 00:20:37,840
so every single api example has a

00:20:36,880 --> 00:20:40,000
project

00:20:37,840 --> 00:20:42,159
and the projects will show you how to

00:20:40,000 --> 00:20:46,400
run them and do the code in either lua

00:20:42,159 --> 00:20:46,400
or c-sharp and give you a preview of it

00:20:46,799 --> 00:20:50,720
so the reason i talk about documentation

00:20:49,120 --> 00:20:53,200
is an important one

00:20:50,720 --> 00:20:54,640
because um when building a fantasy

00:20:53,200 --> 00:20:55,360
console on my own it's been like an

00:20:54,640 --> 00:20:58,559
incredibly

00:20:55,360 --> 00:21:00,480
time consuming uh project but it also

00:20:58,559 --> 00:21:01,200
has a lot of non-technical challenges as

00:21:00,480 --> 00:21:03,039
well

00:21:01,200 --> 00:21:04,640
so one of the things is having to build

00:21:03,039 --> 00:21:05,440
all the documentation for the game

00:21:04,640 --> 00:21:07,360
engine

00:21:05,440 --> 00:21:09,679
for the tools for the operating system

00:21:07,360 --> 00:21:11,919
the workflows and all these other things

00:21:09,679 --> 00:21:13,520
so a lot of the content overlaps and is

00:21:11,919 --> 00:21:16,000
shared between different places

00:21:13,520 --> 00:21:17,919
based on the context so i started

00:21:16,000 --> 00:21:18,400
treating my documentation just like i

00:21:17,919 --> 00:21:20,799
would

00:21:18,400 --> 00:21:23,200
building any code project so i built a

00:21:20,799 --> 00:21:25,520
series of scripts on top of google docs

00:21:23,200 --> 00:21:27,120
that allow me to combine multiple docs

00:21:25,520 --> 00:21:29,520
convert them into markdown

00:21:27,120 --> 00:21:31,360
and output different formats so one

00:21:29,520 --> 00:21:34,000
output will go to git book

00:21:31,360 --> 00:21:35,360
and the other one can go to github wikis

00:21:34,000 --> 00:21:37,919
and this allows me to keep all the

00:21:35,360 --> 00:21:40,000
documentation centralized in one place

00:21:37,919 --> 00:21:41,360
and whenever i need to update it i can

00:21:40,000 --> 00:21:44,799
just easily push it out

00:21:41,360 --> 00:21:46,400
to either the different locations

00:21:44,799 --> 00:21:48,080
but perhaps the thing that i'm most

00:21:46,400 --> 00:21:49,600
proud of and

00:21:48,080 --> 00:21:51,440
one of the things is i love building

00:21:49,600 --> 00:21:54,320
automation tools is

00:21:51,440 --> 00:21:56,240
a tutorial generator so i wrote a plugin

00:21:54,320 --> 00:21:59,280
in atom that allows me to

00:21:56,240 --> 00:22:00,880
actually take code examples from lua

00:21:59,280 --> 00:22:02,960
and convert them into step-by-step

00:22:00,880 --> 00:22:04,880
instructions and this is sort of based

00:22:02,960 --> 00:22:06,799
on the idea of a decompiler

00:22:04,880 --> 00:22:07,919
but instead of it giving you back code

00:22:06,799 --> 00:22:09,840
it unwraps

00:22:07,919 --> 00:22:11,919
the code and gives you these

00:22:09,840 --> 00:22:12,640
step-by-step instructions including line

00:22:11,919 --> 00:22:14,320
numbers

00:22:12,640 --> 00:22:16,559
and will tell you if you enter a

00:22:14,320 --> 00:22:18,720
function what code goes in

00:22:16,559 --> 00:22:20,159
and also how it changes the line numbers

00:22:18,720 --> 00:22:21,600
as you go through the tutorial

00:22:20,159 --> 00:22:23,520
and what's really cool about this is

00:22:21,600 --> 00:22:25,360
that as i'm writing code

00:22:23,520 --> 00:22:27,280
it automatically is updating in the

00:22:25,360 --> 00:22:29,280
window next to it so i get a live

00:22:27,280 --> 00:22:30,799
preview of the tutorial i'm writing

00:22:29,280 --> 00:22:32,640
this means that i get to focus on what i

00:22:30,799 --> 00:22:34,240
really love most which is writing little

00:22:32,640 --> 00:22:35,919
games or code examples

00:22:34,240 --> 00:22:40,640
and the tutorials automatically get

00:22:35,919 --> 00:22:43,280
generated while i work

00:22:40,640 --> 00:22:45,039
so pixel vision 8 has been a nights and

00:22:43,280 --> 00:22:47,440
weekend project for the past five

00:22:45,039 --> 00:22:49,600
years and throughout the project i

00:22:47,440 --> 00:22:51,679
collaborated with two developers

00:22:49,600 --> 00:22:53,600
three pixel artists and maintained the

00:22:51,679 --> 00:22:56,320
project both on itch

00:22:53,600 --> 00:22:57,760
github and my own site and while this

00:22:56,320 --> 00:22:58,640
isn't something that i set out to make

00:22:57,760 --> 00:23:00,799
money with

00:22:58,640 --> 00:23:02,640
a big motivating factor for me was to be

00:23:00,799 --> 00:23:03,520
able to help support a lot of the indie

00:23:02,640 --> 00:23:06,480
developers

00:23:03,520 --> 00:23:08,240
and artists that i love with them also

00:23:06,480 --> 00:23:09,200
being able to contribute back to pixel

00:23:08,240 --> 00:23:11,360
vision 8.

00:23:09,200 --> 00:23:13,919
and collectively what we've been trying

00:23:11,360 --> 00:23:15,919
to do is push the fantasy console space

00:23:13,919 --> 00:23:17,760
forward in a meaningful way

00:23:15,919 --> 00:23:19,280
so while i continue to build a healthy

00:23:17,760 --> 00:23:21,200
community of developers

00:23:19,280 --> 00:23:22,400
using my background in game dev and

00:23:21,200 --> 00:23:24,280
evangelism

00:23:22,400 --> 00:23:25,440
i'm proud to say that we now have over

00:23:24,280 --> 00:23:29,360
5.6

00:23:25,440 --> 00:23:32,559
000 active users and 3.7 user

00:23:29,360 --> 00:23:34,400
3.7 000 users on twitter so and i was

00:23:32,559 --> 00:23:36,320
also one of the first developers to get

00:23:34,400 --> 00:23:38,880
a verified discord channel

00:23:36,320 --> 00:23:39,840
and i try to be as active on it as

00:23:38,880 --> 00:23:42,159
possible

00:23:39,840 --> 00:23:43,760
um there's a good community of people

00:23:42,159 --> 00:23:44,559
who are out there who are willing to

00:23:43,760 --> 00:23:46,320
help you

00:23:44,559 --> 00:23:48,159
and if you have problems you can go on

00:23:46,320 --> 00:23:49,520
there if you're just getting started

00:23:48,159 --> 00:23:51,279
but a lot of the things that we also

00:23:49,520 --> 00:23:52,559
like to see are what are you dealing

00:23:51,279 --> 00:23:54,400
what are the works in progress

00:23:52,559 --> 00:23:56,720
you can share that with the rest of the

00:23:54,400 --> 00:23:58,880
community on the discord channel in fact

00:23:56,720 --> 00:24:01,039
uh ludum dari which is a very popular

00:23:58,880 --> 00:24:03,360
game jam that happened the past weekend

00:24:01,039 --> 00:24:05,120
i set up a special channel for it and

00:24:03,360 --> 00:24:06,640
myself and a couple of other developers

00:24:05,120 --> 00:24:08,640
were constantly sharing back our

00:24:06,640 --> 00:24:10,240
feedback and sort of what we were doing

00:24:08,640 --> 00:24:13,120
and the games that we were building with

00:24:10,240 --> 00:24:13,120
pixel vision 8.

00:24:14,480 --> 00:24:18,080
so this brings me really close to the

00:24:17,600 --> 00:24:21,360
end of

00:24:18,080 --> 00:24:23,120
my talk and i'm sure you've heard a lot

00:24:21,360 --> 00:24:24,640
now lately about how this is really

00:24:23,120 --> 00:24:26,960
unprecedented time

00:24:24,640 --> 00:24:28,400
so i live in new york and we've been hit

00:24:26,960 --> 00:24:29,440
especially hard by everything that's

00:24:28,400 --> 00:24:31,200
been going on

00:24:29,440 --> 00:24:33,520
so it's actually been over eight weeks

00:24:31,200 --> 00:24:35,120
since we've been able to leave the house

00:24:33,520 --> 00:24:36,960
i wouldn't notice because as long as i

00:24:35,120 --> 00:24:39,039
have a computer and some video games i'm

00:24:36,960 --> 00:24:40,480
pretty content just staying inside

00:24:39,039 --> 00:24:43,039
but i think the rest of my family is

00:24:40,480 --> 00:24:46,159
itching to get outside but that being at

00:24:43,039 --> 00:24:48,640
said it's never been a better time

00:24:46,159 --> 00:24:49,919
to build a game than now especially if

00:24:48,640 --> 00:24:51,600
you've always wanted to

00:24:49,919 --> 00:24:53,840
or if you have a project that's been

00:24:51,600 --> 00:24:56,960
sitting on the back burner

00:24:53,840 --> 00:24:58,000
use this time to create and build out

00:24:56,960 --> 00:25:00,480
your skills

00:24:58,000 --> 00:25:01,120
i mentioned really early on in the talk

00:25:00,480 --> 00:25:03,120
that

00:25:01,120 --> 00:25:04,559
one of the things that i've always done

00:25:03,120 --> 00:25:06,320
when i learned different programming

00:25:04,559 --> 00:25:07,279
languages is that i started by building

00:25:06,320 --> 00:25:09,600
a game

00:25:07,279 --> 00:25:11,760
and well some people may not know what

00:25:09,600 --> 00:25:13,279
the future holds especially if you feel

00:25:11,760 --> 00:25:14,960
that you're going to lose your job or

00:25:13,279 --> 00:25:17,039
maybe that you want to

00:25:14,960 --> 00:25:18,159
have a different job when things calm

00:25:17,039 --> 00:25:21,039
down

00:25:18,159 --> 00:25:22,240
i highly suggest picking up a game

00:25:21,039 --> 00:25:23,039
engine it doesn't have to be pixel

00:25:22,240 --> 00:25:24,559
vision 8

00:25:23,039 --> 00:25:25,919
it could be any other game engine out

00:25:24,559 --> 00:25:28,159
there there are so many different game

00:25:25,919 --> 00:25:30,880
engines in different languages

00:25:28,159 --> 00:25:33,520
and just start building games and maybe

00:25:30,880 --> 00:25:35,200
the game itself is not the

00:25:33,520 --> 00:25:37,200
end result it may not give you the

00:25:35,200 --> 00:25:38,400
skills that you need particularly to go

00:25:37,200 --> 00:25:39,840
into the game industry

00:25:38,400 --> 00:25:42,000
but it may give you the skills to be a

00:25:39,840 --> 00:25:44,799
better developer and since a lot of my

00:25:42,000 --> 00:25:46,000
time running a team of evangelists

00:25:44,799 --> 00:25:48,640
really revolves around

00:25:46,000 --> 00:25:50,720
management using this project has been

00:25:48,640 --> 00:25:53,279
able to keep my development skills sharp

00:25:50,720 --> 00:25:54,320
and also share things back with the rest

00:25:53,279 --> 00:25:58,000
of the community

00:25:54,320 --> 00:26:01,440
so please take the time um be productive

00:25:58,000 --> 00:26:03,440
be creative and use it as an outlet

00:26:01,440 --> 00:26:05,679
i much rather sit at home and code and

00:26:03,440 --> 00:26:06,880
build games than watch tv and do other

00:26:05,679 --> 00:26:10,480
things that are

00:26:06,880 --> 00:26:13,200
passive so create create create

00:26:10,480 --> 00:26:14,799
and that being said this sort of gets me

00:26:13,200 --> 00:26:17,200
to the end of the talk

00:26:14,799 --> 00:26:20,159
um hopefully this is enough to interest

00:26:17,200 --> 00:26:23,120
you into giving pixel vision 8 a try

00:26:20,159 --> 00:26:25,039
it's still a work in progress and i try

00:26:23,120 --> 00:26:27,039
really hard to push out new updates and

00:26:25,039 --> 00:26:28,960
bug fixes every few months

00:26:27,039 --> 00:26:30,080
um again since this is a nights and

00:26:28,960 --> 00:26:32,400
weekends project

00:26:30,080 --> 00:26:33,279
i am not able to do it as much as i

00:26:32,400 --> 00:26:34,960
would like to

00:26:33,279 --> 00:26:37,440
and there are still things that are very

00:26:34,960 --> 00:26:40,159
buggy um i'm very close to reaching

00:26:37,440 --> 00:26:41,120
a beta we've been in alpha for a very

00:26:40,159 --> 00:26:44,000
long time

00:26:41,120 --> 00:26:46,000
over the past couple of years and i

00:26:44,000 --> 00:26:47,279
really strive hard to build

00:26:46,000 --> 00:26:49,919
really good code examples and

00:26:47,279 --> 00:26:50,400
documentation so all of this is out

00:26:49,919 --> 00:26:52,400
there

00:26:50,400 --> 00:26:55,679
and it's ready for you to poke around to

00:26:52,400 --> 00:26:57,840
take a look and to build something fun

00:26:55,679 --> 00:26:59,360
and if there's anything that you run

00:26:57,840 --> 00:27:01,520
into any problems

00:26:59,360 --> 00:27:03,520
feel free to go to the website there's a

00:27:01,520 --> 00:27:05,520
way to message me on the website

00:27:03,520 --> 00:27:06,799
you can email me directly the emails

00:27:05,520 --> 00:27:08,720
below or

00:27:06,799 --> 00:27:10,960
even uh reach out to me on twitter and

00:27:08,720 --> 00:27:14,960
of course the discord channel

00:27:10,960 --> 00:27:17,840
and again um just

00:27:14,960 --> 00:27:19,600
for me this has been uh i sort of joke

00:27:17,840 --> 00:27:22,000
around with my friends that uh

00:27:19,600 --> 00:27:23,520
it's i've hit my sort of mid-life crisis

00:27:22,000 --> 00:27:24,000
and while some people go out and they

00:27:23,520 --> 00:27:26,320
build

00:27:24,000 --> 00:27:27,760
uh they go out and they buy expensive

00:27:26,320 --> 00:27:29,919
sports cars or

00:27:27,760 --> 00:27:31,760
they you know go through and change

00:27:29,919 --> 00:27:33,360
their entire lifestyle

00:27:31,760 --> 00:27:35,840
uh one of the things that i've tried to

00:27:33,360 --> 00:27:37,279
do is actually just build my childhood

00:27:35,840 --> 00:27:40,000
and that's like the thing i think i'm

00:27:37,279 --> 00:27:42,080
the most proud of when i look back at

00:27:40,000 --> 00:27:43,760
the last five years of working on this

00:27:42,080 --> 00:27:45,360
project because some days it's

00:27:43,760 --> 00:27:46,640
frustrating when i don't feel like i'm

00:27:45,360 --> 00:27:49,200
making the progress

00:27:46,640 --> 00:27:50,720
um but other days when i can sit down

00:27:49,200 --> 00:27:52,640
and i can play with the operating system

00:27:50,720 --> 00:27:54,480
i can go into the tools i see things

00:27:52,640 --> 00:27:55,440
work i see other people creating stuff

00:27:54,480 --> 00:27:57,840
with it

00:27:55,440 --> 00:27:59,520
and it really gives me that sense at

00:27:57,840 --> 00:28:02,000
least i feel like i've captured

00:27:59,520 --> 00:28:02,880
what really got me into computers to

00:28:02,000 --> 00:28:04,799
begin with

00:28:02,880 --> 00:28:06,480
and that was that curiosity the

00:28:04,799 --> 00:28:08,880
fascination of

00:28:06,480 --> 00:28:10,960
opening up an empty text file and

00:28:08,880 --> 00:28:14,080
turning it into a game

00:28:10,960 --> 00:28:14,399
using my ability to create art mixing it

00:28:14,080 --> 00:28:17,520
with

00:28:14,399 --> 00:28:19,919
sound doing coding even writing

00:28:17,520 --> 00:28:20,880
the story that goes along with it all of

00:28:19,919 --> 00:28:23,679
these things

00:28:20,880 --> 00:28:25,600
um have now become the art outlet that

00:28:23,679 --> 00:28:28,480
i've always had as a child

00:28:25,600 --> 00:28:29,600
and it makes me so happy just to be able

00:28:28,480 --> 00:28:31,600
to play around with something that

00:28:29,600 --> 00:28:32,480
really reminds me of my early macintosh

00:28:31,600 --> 00:28:35,600
days

00:28:32,480 --> 00:28:37,600
so that being said um i'm going to wrap

00:28:35,600 --> 00:28:38,399
up just a little bit early but i'm going

00:28:37,600 --> 00:28:41,440
to

00:28:38,399 --> 00:28:42,640
hop on over into the chat and i'll hang

00:28:41,440 --> 00:28:44,399
out for a little bit it's a little bit

00:28:42,640 --> 00:28:46,799
late here in new york but

00:28:44,399 --> 00:28:48,240
please feel free to reach out even if

00:28:46,799 --> 00:28:49,200
you don't make games now i'm always

00:28:48,240 --> 00:28:51,279
happy to point you

00:28:49,200 --> 00:28:52,960
into the right direction um i've done

00:28:51,279 --> 00:28:54,480
lots of linda courses

00:28:52,960 --> 00:28:56,159
if you go to lynda.com or i think it's

00:28:54,480 --> 00:28:57,120
called linkedin learning i've done

00:28:56,159 --> 00:28:59,440
almost

00:28:57,120 --> 00:29:00,240
30 courses now on game development and

00:28:59,440 --> 00:29:01,760
programming

00:29:00,240 --> 00:29:04,080
so there are lots of resources out there

00:29:01,760 --> 00:29:05,840
that i've done as well as others to get

00:29:04,080 --> 00:29:08,000
you started

00:29:05,840 --> 00:29:08,960
and with that i want to thank github and

00:29:08,000 --> 00:29:11,200
everyone else for

00:29:08,960 --> 00:29:12,000
having me come and speak and i

00:29:11,200 --> 00:29:21,360
appreciate the time

00:29:12,000 --> 00:29:21,360

YouTube URL: https://www.youtube.com/watch?v=UKVNmHCxwk4


