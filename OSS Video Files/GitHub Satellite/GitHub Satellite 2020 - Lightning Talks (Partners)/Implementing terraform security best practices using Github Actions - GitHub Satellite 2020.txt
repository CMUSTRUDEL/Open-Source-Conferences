Title: Implementing terraform security best practices using Github Actions - GitHub Satellite 2020
Publication date: 2020-05-06
Playlist: GitHub Satellite 2020 - Lightning Talks (Partners)
Description: 
	Presented by Nimrod Ko, Bridgecrew

GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the worldâ€™s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:00,060 --> 00:00:04,650
hey everyone animal core and I'm a

00:00:02,790 --> 00:00:06,060
solution architect at bridge crew the

00:00:04,650 --> 00:00:08,460
DevOps security platform for

00:00:06,060 --> 00:00:10,110
infrastructure engineers I'm going to

00:00:08,460 --> 00:00:12,150
talk about an open-source security tool

00:00:10,110 --> 00:00:14,280
chekhov and the matching gate of action

00:00:12,150 --> 00:00:18,210
that was interpreted to it by Chris

00:00:14,280 --> 00:00:20,400
Morales first a bit about Cheka Cheka is

00:00:18,210 --> 00:00:21,960
an open-source Python library that

00:00:20,400 --> 00:00:24,000
identifies misconfigurations and

00:00:21,960 --> 00:00:25,410
infrastructure is called frameworks such

00:00:24,000 --> 00:00:27,810
as telephone platform asia and

00:00:25,410 --> 00:00:29,400
kubernetes identifying these nice

00:00:27,810 --> 00:00:31,140
configurations can be crucial to

00:00:29,400 --> 00:00:33,480
maintaining a secure base line in the

00:00:31,140 --> 00:00:35,239
cloud due to the natural growth in scale

00:00:33,480 --> 00:00:37,559
that comes with working in the cloud

00:00:35,239 --> 00:00:39,930
chekhov comes pre-built with a library

00:00:37,559 --> 00:00:41,879
of over 100 best practice checks that

00:00:39,930 --> 00:00:44,100
are based on widely accepted security

00:00:41,879 --> 00:00:47,460
films for a tiberias Microsoft Azure

00:00:44,100 --> 00:00:49,379
mgcp so how can you use check outs

00:00:47,460 --> 00:00:52,500
github action to leverage this great oh

00:00:49,379 --> 00:00:56,640
let's see a short demo I'll share my

00:00:52,500 --> 00:00:59,100
screen and what you see now is one of

00:00:56,640 --> 00:01:00,989
produced tariffs or modules and you can

00:00:59,100 --> 00:01:03,570
take a closer look and see that it

00:01:00,989 --> 00:01:04,530
failed the latest build let's see what

00:01:03,570 --> 00:01:07,710
caused it to fail

00:01:04,530 --> 00:01:10,590
well it's a check off gate of action

00:01:07,710 --> 00:01:12,510
let's see why it's failed and you can

00:01:10,590 --> 00:01:15,600
see that there's one fail check and you

00:01:12,510 --> 00:01:18,659
go look for it will see that it found an

00:01:15,600 --> 00:01:21,750
s3 bucket setup this is the actual

00:01:18,659 --> 00:01:23,880
terraform resource and you see that it

00:01:21,750 --> 00:01:26,250
doesn't have everything to be flag

00:01:23,880 --> 00:01:29,310
enabled inside the visioning block right

00:01:26,250 --> 00:01:33,990
so how can we fix it since this is cold

00:01:29,310 --> 00:01:35,909
let's do it using the request so this is

00:01:33,990 --> 00:01:37,500
the pull request I open to fix it and

00:01:35,909 --> 00:01:40,290
see the first commit did not fix the

00:01:37,500 --> 00:01:43,350
issue but the second did and all the

00:01:40,290 --> 00:01:46,399
change that was added was to add the NFA

00:01:43,350 --> 00:01:49,549
deletes flag that's as simple as it gets

00:01:46,399 --> 00:01:52,110
for take a look at this bill this time

00:01:49,549 --> 00:01:54,360
github check about check up github

00:01:52,110 --> 00:01:59,579
action you see that their filters are

00:01:54,360 --> 00:02:01,320
now zero how cool is that so if you like

00:01:59,579 --> 00:02:03,390
to interpret check it up action it's

00:02:01,320 --> 00:02:05,850
really very simple this is the entirely

00:02:03,390 --> 00:02:09,060
I'm off to the workflow that I added you

00:02:05,850 --> 00:02:11,790
can see that there are basically two

00:02:09,060 --> 00:02:13,599
steps one checks out the repository and

00:02:11,790 --> 00:02:17,709
the second is just to run the

00:02:13,599 --> 00:02:19,930
check back in on the repository if you

00:02:17,709 --> 00:02:22,420
want to learn more about the github

00:02:19,930 --> 00:02:24,489
action just go to get accomplished

00:02:22,420 --> 00:02:26,709
partner place such actions it's that

00:02:24,489 --> 00:02:29,079
simple get up action you'll have an

00:02:26,709 --> 00:02:32,019
example here of pommel have to configure

00:02:29,079 --> 00:02:34,900
it and clicking one usually this version

00:02:32,019 --> 00:02:36,760
will give you the actual step the

00:02:34,900 --> 00:02:40,269
updated version so you don't need to

00:02:36,760 --> 00:02:42,909
look any further cool

00:02:40,269 --> 00:02:44,590
other than that chuckles as I said

00:02:42,909 --> 00:02:48,340
completely open-source you can find

00:02:44,590 --> 00:02:51,129
github check out and we love

00:02:48,340 --> 00:02:52,629
contributions so feel free to 4k add

00:02:51,129 --> 00:02:55,870
whatever you think is worthwhile and

00:02:52,629 --> 00:02:58,209
tributed bet there are melons here hard

00:02:55,870 --> 00:03:03,939
to get started how to contribute feel

00:02:58,209 --> 00:03:05,889
free it's really really cool taking it

00:03:03,939 --> 00:03:07,599
one step further you can connect to the

00:03:05,889 --> 00:03:09,430
bridge crew you can connect the bridge

00:03:07,599 --> 00:03:12,310
could be a hub add to your closet or to

00:03:09,430 --> 00:03:14,079
scan your default branch using Rachel's

00:03:12,310 --> 00:03:15,579
console you can then easily find the

00:03:14,079 --> 00:03:16,930
specific lines that should be fixed in

00:03:15,579 --> 00:03:23,139
your current infrastructure it's code

00:03:16,930 --> 00:03:26,139
and how let's see an example of that so

00:03:23,139 --> 00:03:27,609
once you sign up for pretty cool which

00:03:26,139 --> 00:03:30,599
is completely free install require

00:03:27,609 --> 00:03:33,159
credit card you'll be able to go to the

00:03:30,599 --> 00:03:35,819
integrations tab and clicking on github

00:03:33,159 --> 00:03:37,000
as you see here obviously for a new

00:03:35,819 --> 00:03:39,250
account

00:03:37,000 --> 00:03:41,409
this page will be empty but what you can

00:03:39,250 --> 00:03:43,449
do is click authorize you will be

00:03:41,409 --> 00:03:46,000
redirected to the github marketplace for

00:03:43,449 --> 00:03:49,000
you authorize our app and set the

00:03:46,000 --> 00:03:50,650
repository that you allow it to scan and

00:03:49,000 --> 00:03:54,340
when you click confirm you'll be

00:03:50,650 --> 00:03:56,439
redirected to this page and it'll be

00:03:54,340 --> 00:03:58,180
open like this where you can select the

00:03:56,439 --> 00:04:02,259
repositories you want to integrate with

00:03:58,180 --> 00:04:08,019
our console once you selected we will

00:04:02,259 --> 00:04:10,389
scan your repository for you and and the

00:04:08,019 --> 00:04:13,870
fines will be found in the incidence lab

00:04:10,389 --> 00:04:16,560
let's take a look at it so this is an

00:04:13,870 --> 00:04:18,969
example incident that we found

00:04:16,560 --> 00:04:21,070
EBI snapshot that does not have

00:04:18,969 --> 00:04:23,139
encryption and when you click on the

00:04:21,070 --> 00:04:25,950
research you'll see the exact what is

00:04:23,139 --> 00:04:29,130
that it's in the the

00:04:25,950 --> 00:04:34,680
and exam file from the repository route

00:04:29,130 --> 00:04:37,460
and what should be fixed it's really

00:04:34,680 --> 00:04:39,720
doesn't get any simpler than that so

00:04:37,460 --> 00:04:43,430
thank you for your time and I hope you

00:04:39,720 --> 00:04:43,430

YouTube URL: https://www.youtube.com/watch?v=uNX3Rty_QzA


