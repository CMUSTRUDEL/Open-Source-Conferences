Title: Code risk, compliance and security action for PRs on Node.js - GitHub Satellite 2020
Publication date: 2020-05-06
Playlist: GitHub Satellite 2020 - Lightning Talks (Partners)
Description: 
	Presented by Mike Nedelko, Nodesource

GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the worldâ€™s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:00,880 --> 00:00:04,720
hello wonderful get up community my name

00:00:02,800 --> 00:00:05,200
is mike i'm the vp of product at node

00:00:04,720 --> 00:00:07,120
source

00:00:05,200 --> 00:00:09,440
and today we are very excited to show

00:00:07,120 --> 00:00:11,679
you our upcoming github action

00:00:09,440 --> 00:00:13,599
it highlights code risk code quality

00:00:11,679 --> 00:00:14,960
compliance and security concerns in your

00:00:13,599 --> 00:00:16,880
nodejs applications

00:00:14,960 --> 00:00:18,240
and enables a lightweight ci workflow

00:00:16,880 --> 00:00:21,359
that runs those checks on your

00:00:18,240 --> 00:00:21,359
organization's prs

00:00:23,600 --> 00:00:26,800
this is a new way to consume one of our

00:00:25,439 --> 00:00:29,279
existing products called

00:00:26,800 --> 00:00:30,160
node certified modules 2 also known as

00:00:29,279 --> 00:00:31,519
ncm2

00:00:30,160 --> 00:00:34,320
and we would love to hear your thoughts

00:00:31,519 --> 00:00:36,559
on what we're about to show you

00:00:34,320 --> 00:00:38,640
currently our customers use ncm2 to

00:00:36,559 --> 00:00:39,680
understand the security compliance and

00:00:38,640 --> 00:00:41,120
risk posture

00:00:39,680 --> 00:00:44,000
reflected in the application's

00:00:41,120 --> 00:00:46,480
dependency tree

00:00:44,000 --> 00:00:48,719
the way we accomplish this is by our ncm

00:00:46,480 --> 00:00:50,640
certification pipeline

00:00:48,719 --> 00:00:52,399
using a series of tests we score every

00:00:50,640 --> 00:00:54,640
single package on npm to look for a

00:00:52,399 --> 00:00:57,039
number of weighted criteria

00:00:54,640 --> 00:00:58,800
with the ncm2 cli you can then scan your

00:00:57,039 --> 00:01:00,320
projects in development for existing

00:00:58,800 --> 00:01:02,559
security vulnerabilities

00:01:00,320 --> 00:01:05,359
license concerns code quality and code

00:01:02,559 --> 00:01:05,359
risk attributes

00:01:08,240 --> 00:01:11,280
depending on the results each package is

00:01:10,000 --> 00:01:14,240
assigned a risk score

00:01:11,280 --> 00:01:16,400
from no risk detected to low risk medium

00:01:14,240 --> 00:01:17,680
high and critical risk

00:01:16,400 --> 00:01:19,759
some examples of things that are

00:01:17,680 --> 00:01:21,360
considered risky are packages that

00:01:19,759 --> 00:01:23,119
include code which could have severe

00:01:21,360 --> 00:01:24,880
implications if misused

00:01:23,119 --> 00:01:26,720
those packages which are likely to cease

00:01:24,880 --> 00:01:27,439
functioning in a future node.js major

00:01:26,720 --> 00:01:29,040
upgrade

00:01:27,439 --> 00:01:30,640
or packages which have poor error

00:01:29,040 --> 00:01:32,079
handling

00:01:30,640 --> 00:01:34,000
our github action enables this

00:01:32,079 --> 00:01:35,040
functionality for your organization's

00:01:34,000 --> 00:01:36,960
github prs

00:01:35,040 --> 00:01:39,119
by integrating it into workflow that

00:01:36,960 --> 00:01:40,560
passes all fails pr checks based on a

00:01:39,119 --> 00:01:42,560
package's risk score

00:01:40,560 --> 00:01:44,960
and provides annotations with details

00:01:42,560 --> 00:01:46,960
for each package's assessment

00:01:44,960 --> 00:01:48,320
here you can see a pr that clearly fill

00:01:46,960 --> 00:01:49,759
its checks

00:01:48,320 --> 00:01:51,759
when we go and check it out you can

00:01:49,759 --> 00:01:55,840
immediately see a package featuring

00:01:51,759 --> 00:01:55,840
critical risk

00:02:03,520 --> 00:02:09,840
we can then check out the details in our

00:02:06,840 --> 00:02:09,840
annotations

00:02:11,599 --> 00:02:14,879
and as you can see our solution also

00:02:13,440 --> 00:02:18,000
supports white listing

00:02:14,879 --> 00:02:19,360
which you can do via the ncm2 cli

00:02:18,000 --> 00:02:21,040
this is generally where you can make

00:02:19,360 --> 00:02:22,560
informed decisions during development

00:02:21,040 --> 00:02:25,680
before you submit a pr

00:02:22,560 --> 00:02:26,959
simply by running a report

00:02:25,680 --> 00:02:28,959
i hope you enjoyed our little lightning

00:02:26,959 --> 00:02:29,840
talk if you happen to have any feedback

00:02:28,959 --> 00:02:31,840
or suggestions

00:02:29,840 --> 00:02:33,519
our dms are always open and we would

00:02:31,840 --> 00:02:35,120
love to hear from you

00:02:33,519 --> 00:02:37,200
as always you can learn more about node

00:02:35,120 --> 00:02:39,200
source on our website shout out to our

00:02:37,200 --> 00:02:40,000
mvp geo who was our principal engineer

00:02:39,200 --> 00:02:41,680
on this project

00:02:40,000 --> 00:02:45,360
and if you liked what you saw feel free

00:02:41,680 --> 00:02:45,360

YouTube URL: https://www.youtube.com/watch?v=07FfdeekVqI


