Title: Training ML models directly from GitHub - GitHub Satellite 2020
Publication date: 2020-05-06
Playlist: GitHub Satellite 2020 - Lightning Talks (Partners)
Description: 
	Presented by Yochay Ettun, Convrg.io

GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the worldâ€™s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:00,030 --> 00:00:04,170
hi in this talk I'm going to show you

00:00:02,310 --> 00:00:05,870
how you can train machinery models

00:00:04,170 --> 00:00:07,950
directly from github

00:00:05,870 --> 00:00:09,660
my name is your hi and I'm co-founder

00:00:07,950 --> 00:00:11,550
and CEO converge

00:00:09,660 --> 00:00:13,309
machine learning platform is built to

00:00:11,550 --> 00:00:16,710
help data scientists to build and

00:00:13,309 --> 00:00:18,930
deployment models to production we all

00:00:16,710 --> 00:00:22,020
know software's the ICD you code you

00:00:18,930 --> 00:00:23,699
build your test you release with machine

00:00:22,020 --> 00:00:25,529
learning it's quite different it's

00:00:23,699 --> 00:00:27,960
similar but different you start with

00:00:25,529 --> 00:00:30,060
data you do some sort of like data

00:00:27,960 --> 00:00:33,180
validation you train the model on a

00:00:30,060 --> 00:00:36,239
remote GPU or a specific cluster that

00:00:33,180 --> 00:00:38,670
you have you run model validation you

00:00:36,239 --> 00:00:41,309
deploy the model you doing predictions

00:00:38,670 --> 00:00:43,649
you monitor predictions and then you

00:00:41,309 --> 00:00:47,219
might even retrain the model based on

00:00:43,649 --> 00:00:50,670
that what we're suggesting in this talk

00:00:47,219 --> 00:00:53,789
is a simple way to train models directly

00:00:50,670 --> 00:00:57,180
from github a github plus ml ops

00:00:53,789 --> 00:00:59,250
solution so it all starts with going so

00:00:57,180 --> 00:01:02,579
you write code you push it back to

00:00:59,250 --> 00:01:06,540
github to create a pull request and then

00:01:02,579 --> 00:01:09,720
with training the slash train come

00:01:06,540 --> 00:01:11,640
comment on your github pull request it

00:01:09,720 --> 00:01:14,520
will automatically trigger model

00:01:11,640 --> 00:01:16,320
training pipeline this model training

00:01:14,520 --> 00:01:18,540
pipeline is training a tensorflow model

00:01:16,320 --> 00:01:20,820
on a remote GPU it's doing model

00:01:18,540 --> 00:01:25,040
deployment on kubernetes and then

00:01:20,820 --> 00:01:28,049
eventually publish metrics back to get

00:01:25,040 --> 00:01:30,780
this is a real example of how this

00:01:28,049 --> 00:01:34,770
github action that we built is working

00:01:30,780 --> 00:01:38,729
so as you can see I posted new code into

00:01:34,770 --> 00:01:40,759
github I push new code then there the

00:01:38,729 --> 00:01:43,920
slash train commits

00:01:40,759 --> 00:01:45,960
comments on my pull request then

00:01:43,920 --> 00:01:48,360
converts started model training and

00:01:45,960 --> 00:01:53,670
pushed back the results to this pool

00:01:48,360 --> 00:01:56,670
request so this is how the training

00:01:53,670 --> 00:01:58,770
pipeline looks like in converge and as

00:01:56,670 --> 00:02:01,369
you can see it's at the end of the

00:01:58,770 --> 00:02:04,350
pipeline it's pushing the results back

00:02:01,369 --> 00:02:06,689
this is all the model tracking is

00:02:04,350 --> 00:02:07,460
working so we track all the different

00:02:06,689 --> 00:02:10,640
models that

00:02:07,460 --> 00:02:13,250
data scientist is building and this is

00:02:10,640 --> 00:02:16,430
exactly how we built it - step by step

00:02:13,250 --> 00:02:18,620
so we use chat apps to track and listen

00:02:16,430 --> 00:02:22,310
to the different kind of comments on the

00:02:18,620 --> 00:02:24,530
poor request we use Ruby to install the

00:02:22,310 --> 00:02:27,050
convert CLI and then we use the convert

00:02:24,530 --> 00:02:31,630
CLI to train the machine learning

00:02:27,050 --> 00:02:31,630

YouTube URL: https://www.youtube.com/watch?v=hkEMANziAvA


