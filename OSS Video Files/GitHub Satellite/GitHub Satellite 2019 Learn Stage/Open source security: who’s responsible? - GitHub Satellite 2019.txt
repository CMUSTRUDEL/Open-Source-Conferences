Title: Open source security: who’s responsible? - GitHub Satellite 2019
Publication date: 2019-05-25
Playlist: GitHub Satellite 2019 Learn Stage
Description: 
	Presented by Rimas Silkaitis, Senior Director, Product Management
Lothar Schulz, Engineering Manager, Moovel Group GmbH
Anna Debenham, Director of Product, Snyk
Per Ploug, Open Source Community Manager, Zalando SE
Tracy Miranda, Director of Open Source Community, CloudBees

With always-evolving open source software and growing dependencies within it, staying on top of security can feel like an impossible task. That’s why it’s vital for any organization to have the right people and products for the job.

The speakers in this panel will explore different roles within development teams that keep code safe and how the open source community can work together to prioritize and collaborate on security solutions. 

About GitHub Satellite 2019
A community connected by code

Explore our interconnected community—and how collaboration turns ideas into innovations.

Join us in November at San Francisco's Palace of Fine Arts for GitHub Universe - https://githubuniverse.com/
Captions: 
	00:00:01,400 --> 00:00:05,090
[Music]

00:00:09,060 --> 00:00:11,120
you

00:00:18,540 --> 00:00:24,330
hello everyone I'm super excited to be

00:00:20,790 --> 00:00:27,750
here my name is Rima silk itis and today

00:00:24,330 --> 00:00:29,490
we've got a panel of guests here let me

00:00:27,750 --> 00:00:31,980
tell you a little bit about myself

00:00:29,490 --> 00:00:33,989
I'm a senior product manager a senior

00:00:31,980 --> 00:00:36,690
director of product management here at

00:00:33,989 --> 00:00:38,309
github I'm mostly concerned with how

00:00:36,690 --> 00:00:40,290
teams and individuals on those teams

00:00:38,309 --> 00:00:42,840
actually work through the entire

00:00:40,290 --> 00:00:44,790
software development lifecycle and today

00:00:42,840 --> 00:00:47,390
on our panel we're gonna talk about this

00:00:44,790 --> 00:00:49,460
intersection between DevOps

00:00:47,390 --> 00:00:52,680
the software development lifecycle

00:00:49,460 --> 00:00:54,809
developers and security and we're mainly

00:00:52,680 --> 00:00:56,940
gonna circle around the question you

00:00:54,809 --> 00:00:59,760
know whose responsibility is it when you

00:00:56,940 --> 00:01:02,879
have open source security and all of

00:00:59,760 --> 00:01:04,140
those concerns so why don't each of the

00:01:02,879 --> 00:01:06,900
panelists introduce themselves today

00:01:04,140 --> 00:01:09,120
Tracy why don't you go forth hi

00:01:06,900 --> 00:01:11,250
everybody I'm Tracy Miranda and I'm

00:01:09,120 --> 00:01:15,870
director of open source community at

00:01:11,250 --> 00:01:17,700
cloudBees and I focus on building up the

00:01:15,870 --> 00:01:19,729
so I work very closely with the Jenkins

00:01:17,700 --> 00:01:21,869
and Jenkins X open source communities

00:01:19,729 --> 00:01:23,760
and the mission there is you know just

00:01:21,869 --> 00:01:25,830
to help those communities really grow

00:01:23,760 --> 00:01:31,170
and thrive and of course kind of deal

00:01:25,830 --> 00:01:34,560
with aspects like security and I work at

00:01:31,170 --> 00:01:35,880
snick I'm a director of product and it's

00:01:34,560 --> 00:01:39,380
Nick we find a fix

00:01:35,880 --> 00:01:42,780
open source vulnerabilities fantastic

00:01:39,380 --> 00:01:45,180
right my name is Pierre I am an open

00:01:42,780 --> 00:01:47,910
source manager at solando I am

00:01:45,180 --> 00:01:49,230
responsible for how we adopt open source

00:01:47,910 --> 00:01:52,350
software and how we release open source

00:01:49,230 --> 00:01:55,290
software as well and southland are over

00:01:52,350 --> 00:01:58,290
I'm Laura I'm an engineering manager

00:01:55,290 --> 00:01:58,990
with move air I try to make engineers

00:01:58,290 --> 00:02:01,980
happy

00:01:58,990 --> 00:02:03,540
[Laughter]

00:02:01,980 --> 00:02:06,860
why don't we get a round of applause and

00:02:03,540 --> 00:02:06,860
say thank you to our panelists today

00:02:09,080 --> 00:02:14,010
okay Anna I'm gonna start with you first

00:02:11,370 --> 00:02:15,600
because your company is recently

00:02:14,010 --> 00:02:17,940
released or they actually released

00:02:15,600 --> 00:02:21,300
yearly this state of open source

00:02:17,940 --> 00:02:23,130
security kind of survey right in that

00:02:21,300 --> 00:02:24,540
report there were two metrics that

00:02:23,130 --> 00:02:27,660
really kind of stood out to me the first

00:02:24,540 --> 00:02:29,490
being there's been an 88 88 percent

00:02:27,660 --> 00:02:31,170
increase in application library

00:02:29,490 --> 00:02:34,080
vulnerabilities over the last two years

00:02:31,170 --> 00:02:35,880
and 81 percent of users believe that

00:02:34,080 --> 00:02:39,180
developers should be responsible for

00:02:35,880 --> 00:02:40,380
open source security so my question but

00:02:39,180 --> 00:02:42,900
first one is like when you say

00:02:40,380 --> 00:02:45,900
developers like need to be responsible

00:02:42,900 --> 00:02:47,460
does that mean staff at companies does

00:02:45,900 --> 00:02:49,890
that mean the folks that are actually

00:02:47,460 --> 00:02:53,820
implementing open source software like

00:02:49,890 --> 00:02:56,160
who is developers in that context so the

00:02:53,820 --> 00:02:59,580
onus can't completely be on open-source

00:02:56,160 --> 00:03:00,930
maintainer so I don't know how many

00:02:59,580 --> 00:03:02,910
developers are in the room how many

00:03:00,930 --> 00:03:08,190
people have created a open source

00:03:02,910 --> 00:03:10,410
repository I see that's a lot and keep

00:03:08,190 --> 00:03:12,060
your hand up if you would feel confident

00:03:10,410 --> 00:03:16,800
being able to fix a vulnerability in

00:03:12,060 --> 00:03:20,010
your package that's that's not me

00:03:16,800 --> 00:03:23,970
well our state of open source security

00:03:20,010 --> 00:03:26,370
report found the only 70% of open-source

00:03:23,970 --> 00:03:29,220
maintainer x' wouldn't feel comfortable

00:03:26,370 --> 00:03:30,570
i wouldn't feel like they had the

00:03:29,220 --> 00:03:33,480
knowledge to be able to fix a

00:03:30,570 --> 00:03:35,300
vulnerability in their code and actually

00:03:33,480 --> 00:03:39,120
have like a personal story of this i

00:03:35,300 --> 00:03:41,820
years ago I set up a an open source

00:03:39,120 --> 00:03:43,680
repository which contained a framework

00:03:41,820 --> 00:03:46,350
that I'd written which was a design

00:03:43,680 --> 00:03:48,090
system and it got kind of quite a bit of

00:03:46,350 --> 00:03:50,580
publicity yeah there were quite a few

00:03:48,090 --> 00:03:53,280
people using it and a few days after I

00:03:50,580 --> 00:03:55,590
published it I was checking Twitter and

00:03:53,280 --> 00:03:59,010
someone was pointing out that there was

00:03:55,590 --> 00:04:00,989
a massive under ability in it and yeah I

00:03:59,010 --> 00:04:02,970
found out about this it was a weekend

00:04:00,989 --> 00:04:05,430
and they wouldn't tell me what it was it

00:04:02,970 --> 00:04:07,110
would just say it's really really bad so

00:04:05,430 --> 00:04:08,220
I kind of asked a few of my friends like

00:04:07,110 --> 00:04:11,840
can you take a look what are they

00:04:08,220 --> 00:04:14,040
talking about and we found out it was a

00:04:11,840 --> 00:04:16,170
basically anyone who hosted that

00:04:14,040 --> 00:04:18,870
framework on their server ended up

00:04:16,170 --> 00:04:20,790
basically opening it up to the world

00:04:18,870 --> 00:04:22,650
like any public server and

00:04:20,790 --> 00:04:24,750
could kind of like suddenly access it

00:04:22,650 --> 00:04:26,700
I'd basically written this massive

00:04:24,750 --> 00:04:28,050
vulnerability and I was really

00:04:26,700 --> 00:04:29,730
embarrassed I felt like I you know

00:04:28,050 --> 00:04:31,920
should I have published this in the

00:04:29,730 --> 00:04:34,260
first place I didn't and didn't have the

00:04:31,920 --> 00:04:37,050
skills to fix it but what was really

00:04:34,260 --> 00:04:39,300
nice was that people stepped in to help

00:04:37,050 --> 00:04:41,280
so they stepped in they provided their

00:04:39,300 --> 00:04:42,930
knowledge they wrote a fix

00:04:41,280 --> 00:04:46,890
they helped me write a kind of practice

00:04:42,930 --> 00:04:48,270
release doing responsible disclosure and

00:04:46,890 --> 00:04:51,660
the way that I found out about it was

00:04:48,270 --> 00:04:54,750
actually quite typical 48% of people who

00:04:51,660 --> 00:04:56,760
have their like who do open source find

00:04:54,750 --> 00:04:59,940
out about a vulnerability in their code

00:04:56,760 --> 00:05:02,720
via a public channel like Twitter which

00:04:59,940 --> 00:05:06,780
really sucks but at the end of the day

00:05:02,720 --> 00:05:08,820
the code is fixed and as far as I know

00:05:06,780 --> 00:05:11,940
there were no exploits but it really

00:05:08,820 --> 00:05:14,040
kind of sunk home to me about you know

00:05:11,940 --> 00:05:15,810
I'm a front-end developer and I I'm not

00:05:14,040 --> 00:05:18,870
confident that I can release code that's

00:05:15,810 --> 00:05:20,490
cure so I think in that situation we

00:05:18,870 --> 00:05:22,230
don't want to put people off writing

00:05:20,490 --> 00:05:23,850
code and publishing code it's really

00:05:22,230 --> 00:05:26,790
important that they feel confident in

00:05:23,850 --> 00:05:28,470
doing that so I think it's kind of up to

00:05:26,790 --> 00:05:30,060
everyone everyone who consumes open

00:05:28,470 --> 00:05:33,590
source packages to be a kind of

00:05:30,060 --> 00:05:36,230
responsible citizen and follow kind of

00:05:33,590 --> 00:05:40,260
disguise of processor sort of thing so

00:05:36,230 --> 00:05:42,270
you you got this vulnerability and you'd

00:05:40,260 --> 00:05:45,090
like you weren't sure what to do with it

00:05:42,270 --> 00:05:47,250
and so like what did you do in that time

00:05:45,090 --> 00:05:49,110
before that fix is actually manifested

00:05:47,250 --> 00:05:51,030
did you ask somebody to say hey can you

00:05:49,110 --> 00:05:51,930
fix it you ask somebody has said hey can

00:05:51,030 --> 00:05:53,850
you fix it for me

00:05:51,930 --> 00:05:56,640
I didn't ask I was immediately offered

00:05:53,850 --> 00:05:58,320
you know easily we found it first of all

00:05:56,640 --> 00:06:00,420
they had a go at the person who publicly

00:05:58,320 --> 00:06:01,680
disposed it without you know giving a

00:06:00,420 --> 00:06:04,800
heads up first yeah

00:06:01,680 --> 00:06:06,180
but they then helped me fix it they knew

00:06:04,800 --> 00:06:08,340
immediately what the problem was

00:06:06,180 --> 00:06:10,080
it was quite a simple fix but then the

00:06:08,340 --> 00:06:11,280
whole process of telling people about it

00:06:10,080 --> 00:06:13,770
making sure that they were on the latest

00:06:11,280 --> 00:06:14,910
version that really opened my eyes and

00:06:13,770 --> 00:06:16,550
that was actually what kind of

00:06:14,910 --> 00:06:19,260
encouraged me to join a security company

00:06:16,550 --> 00:06:21,720
interesting and so

00:06:19,260 --> 00:06:23,610
one more thing on that had you not

00:06:21,720 --> 00:06:26,300
gotten that assistance what would you

00:06:23,610 --> 00:06:29,730
have done I would probably have given up

00:06:26,300 --> 00:06:31,650
just like fished my keyboard away and

00:06:29,730 --> 00:06:33,690
said I'm done with this oh gosh

00:06:31,650 --> 00:06:35,520
Tracy let me ask you you know with cloud

00:06:33,690 --> 00:06:37,740
bees in the community that you manage

00:06:35,520 --> 00:06:39,870
there do you see that same kind of

00:06:37,740 --> 00:06:41,630
behavior with developers and you know

00:06:39,870 --> 00:06:45,570
assisting in that kind of security

00:06:41,630 --> 00:06:48,510
yeah absolutely and like working with

00:06:45,570 --> 00:06:51,330
the Jenkins community which is you know

00:06:48,510 --> 00:06:54,930
the scale of it is huge in terms of like

00:06:51,330 --> 00:06:57,480
users there's millions of users lots of

00:06:54,930 --> 00:06:59,910
developers working on different plugins

00:06:57,480 --> 00:07:04,500
so this there's definitely challenges

00:06:59,910 --> 00:07:05,670
there because when you have an exploit

00:07:04,500 --> 00:07:07,740
in something like Jenkins which

00:07:05,670 --> 00:07:10,410
everybody is using the scale is

00:07:07,740 --> 00:07:13,020
ridiculous so a lot of people had seen

00:07:10,410 --> 00:07:15,750
of like a couple of years back there was

00:07:13,020 --> 00:07:17,760
this exploit where it was like the

00:07:15,750 --> 00:07:19,590
biggest Bitcoin mining exploit was

00:07:17,760 --> 00:07:23,340
something like they'd made three million

00:07:19,590 --> 00:07:24,570
of unpatched Jenkins servers they were

00:07:23,340 --> 00:07:27,240
out there because they run on these

00:07:24,570 --> 00:07:29,940
really powerful machines so I think the

00:07:27,240 --> 00:07:33,030
challenge we have it's like the

00:07:29,940 --> 00:07:35,850
community will help and they will do

00:07:33,030 --> 00:07:39,960
things but just getting the message out

00:07:35,850 --> 00:07:41,370
like patch your servers and people get

00:07:39,960 --> 00:07:44,430
into this habit you know they'll just

00:07:41,370 --> 00:07:46,170
ignore the updates on on the jenkins

00:07:44,430 --> 00:07:47,670
dashboard that says you know this is you

00:07:46,170 --> 00:07:50,250
know they'll be like I don't want things

00:07:47,670 --> 00:07:52,740
to break now I can't handle this so I'm

00:07:50,250 --> 00:07:54,210
just gonna leave it so that's always the

00:07:52,740 --> 00:07:56,790
biggest thing we're thinking about you

00:07:54,210 --> 00:08:00,000
know how do we make it so it's easier

00:07:56,790 --> 00:08:02,520
for people and you know tweeting on

00:08:00,000 --> 00:08:05,940
Twitter almost is one way to get the

00:08:02,520 --> 00:08:07,140
attention but you know we always want to

00:08:05,940 --> 00:08:09,000
know how to deal with those sort of

00:08:07,140 --> 00:08:11,130
challenges at that scale so you're

00:08:09,000 --> 00:08:12,990
providing you know assistance in the

00:08:11,130 --> 00:08:15,300
interfaces they're saying hey you know

00:08:12,990 --> 00:08:18,300
you do this thing and there's this like

00:08:15,300 --> 00:08:19,740
natural inclination to say well maybe

00:08:18,300 --> 00:08:21,420
not because I have other things they

00:08:19,740 --> 00:08:24,360
could take care of and there's like a

00:08:21,420 --> 00:08:26,730
concern I might break something in that

00:08:24,360 --> 00:08:28,200
so you know to take the kind of internal

00:08:26,730 --> 00:08:28,960
view I'm gonna look to like one of you

00:08:28,200 --> 00:08:31,690
both are

00:08:28,960 --> 00:08:34,210
her on the on the inside of that how do

00:08:31,690 --> 00:08:41,110
you like help folks inside companies say

00:08:34,210 --> 00:08:43,479
like yeah let's let's go and do it not

00:08:41,110 --> 00:08:45,190
not easy of course yeah I mean you just

00:08:43,479 --> 00:08:47,020
email them all the time you tell your

00:08:45,190 --> 00:08:48,790
like employee like all the developers in

00:08:47,020 --> 00:08:51,490
your company like hey just go do it I

00:08:48,790 --> 00:08:54,730
try I try to avoid that noise that that

00:08:51,490 --> 00:08:58,540
pushy noise yeah I I'd rather like to

00:08:54,730 --> 00:09:01,060
focus on give give them incentives right

00:08:58,540 --> 00:09:03,160
try to try to build a community within

00:09:01,060 --> 00:09:07,120
the company as you do outside with open

00:09:03,160 --> 00:09:10,300
source communities as well and within a

00:09:07,120 --> 00:09:12,459
vivid community those pushes are not

00:09:10,300 --> 00:09:14,110
needed anymore people are interested and

00:09:12,459 --> 00:09:16,779
they're are proud of what they do and

00:09:14,110 --> 00:09:18,700
then they have a big incentive to fix it

00:09:16,779 --> 00:09:20,980
themselves without letting me know and

00:09:18,700 --> 00:09:22,830
there is also no need to notify me about

00:09:20,980 --> 00:09:26,170
it

00:09:22,830 --> 00:09:29,440
in order to have that you have to set up

00:09:26,170 --> 00:09:31,060
such a community and this this is small

00:09:29,440 --> 00:09:34,720
steps you have to do this again and

00:09:31,060 --> 00:09:37,870
again and this is a marathon basically

00:09:34,720 --> 00:09:39,700
and we we just started this journey so

00:09:37,870 --> 00:09:42,209
what what are the levers do you have as

00:09:39,700 --> 00:09:44,860
an engineering manager to help in that

00:09:42,209 --> 00:09:47,380
journey that maybe other folks in the

00:09:44,860 --> 00:09:50,350
audience can take away today well I

00:09:47,380 --> 00:09:53,080
learned from pair of course we've been

00:09:50,350 --> 00:09:58,839
together at solando and this was great

00:09:53,080 --> 00:10:01,089
and and being a role model trying trying

00:09:58,839 --> 00:10:05,140
to actually do what you ask others to do

00:10:01,089 --> 00:10:07,660
helps show that you do not know

00:10:05,140 --> 00:10:09,520
everything you are vulnerable you you do

00:10:07,660 --> 00:10:13,060
not know every technology but there are

00:10:09,520 --> 00:10:15,670
there are certain ideas and things that

00:10:13,060 --> 00:10:17,350
work for others that you can give a try

00:10:15,670 --> 00:10:20,320
and if that works for you as well in

00:10:17,350 --> 00:10:22,480
your organization why not try to spread

00:10:20,320 --> 00:10:24,850
the word why not try to make that

00:10:22,480 --> 00:10:27,310
broader in the whole organization and

00:10:24,850 --> 00:10:29,410
push the community does your

00:10:27,310 --> 00:10:31,060
organization have incentives that say if

00:10:29,410 --> 00:10:33,430
you know you do these things like you

00:10:31,060 --> 00:10:36,190
know there's performance related you

00:10:33,430 --> 00:10:37,600
know bonuses or something else you know

00:10:36,190 --> 00:10:40,780
if you do that

00:10:37,600 --> 00:10:43,090
I say we don't have direct incentives

00:10:40,780 --> 00:10:45,100
there are more indirect so there are

00:10:43,090 --> 00:10:48,790
there are a lot of opportunities to

00:10:45,100 --> 00:10:50,620
speak up there are conference like

00:10:48,790 --> 00:10:53,620
internal formats where you can present

00:10:50,620 --> 00:10:57,280
and there are syllable showing up and

00:10:53,620 --> 00:11:01,210
this this helps apart from all the

00:10:57,280 --> 00:11:03,540
Twitter likes like like technology that

00:11:01,210 --> 00:11:05,410
you have in any company anyway right

00:11:03,540 --> 00:11:07,300
understood

00:11:05,410 --> 00:11:10,120
so para I wanted to ask you a question

00:11:07,300 --> 00:11:12,580
now so as part of your work you know you

00:11:10,120 --> 00:11:15,430
kind of you know you help the company

00:11:12,580 --> 00:11:17,500
both consume external open-source as

00:11:15,430 --> 00:11:19,630
well as organized how the company

00:11:17,500 --> 00:11:22,570
publishes its own open source projects

00:11:19,630 --> 00:11:24,160
you know how do those concepts of open

00:11:22,570 --> 00:11:25,900
source security and responsibilities

00:11:24,160 --> 00:11:27,880
apply with you know with the work that

00:11:25,900 --> 00:11:29,620
you're doing for the folks that that do

00:11:27,880 --> 00:11:31,540
that kind of work yeah the company and

00:11:29,620 --> 00:11:34,000
so solando is a company that very much

00:11:31,540 --> 00:11:35,770
relies on like customer trusts if they

00:11:34,000 --> 00:11:37,150
don't trust that our store is secure

00:11:35,770 --> 00:11:39,160
they don't want to buy anything from us

00:11:37,150 --> 00:11:43,090
so ever say everyone depends on our

00:11:39,160 --> 00:11:44,260
customers trusting us and so far for the

00:11:43,090 --> 00:11:46,060
way we release things we don't

00:11:44,260 --> 00:11:48,010
specifically talk about security with

00:11:46,060 --> 00:11:50,800
our developers but more we we talk about

00:11:48,010 --> 00:11:52,960
responsibility and taking responsibility

00:11:50,800 --> 00:11:55,990
for what we release as open source

00:11:52,960 --> 00:11:57,550
projects because we do not just want to

00:11:55,990 --> 00:11:59,350
throw code over the fence and just leave

00:11:57,550 --> 00:12:01,210
it there just sharing it for the sake of

00:11:59,350 --> 00:12:05,080
just sharing it I mean I love the rink

00:12:01,210 --> 00:12:06,310
yes it's great yeah take it up there and

00:12:05,080 --> 00:12:08,920
then you're the writer

00:12:06,310 --> 00:12:11,290
and so we asked several questions during

00:12:08,920 --> 00:12:13,330
this release process where I would say

00:12:11,290 --> 00:12:15,790
the three most crucial ones here are

00:12:13,330 --> 00:12:17,320
first of all why do you want to open

00:12:15,790 --> 00:12:19,150
source this what is the value and the

00:12:17,320 --> 00:12:21,070
motivation for you as a developer what

00:12:19,150 --> 00:12:22,570
is the motivation for solando as a

00:12:21,070 --> 00:12:25,030
company what do we actually get out of

00:12:22,570 --> 00:12:26,620
it and we asked a specific question not

00:12:25,030 --> 00:12:28,000
to be a gate keeper but actually to

00:12:26,620 --> 00:12:30,010
ensure that there's a long term

00:12:28,000 --> 00:12:31,360
motivation if you have a motivation you

00:12:30,010 --> 00:12:34,750
take responsibility for you take

00:12:31,360 --> 00:12:36,460
ownership of it um just one part the

00:12:34,750 --> 00:12:38,560
other part is is asking the specific

00:12:36,460 --> 00:12:40,090
questions of how many work hours have

00:12:38,560 --> 00:12:41,320
you actually been granted to maintain

00:12:40,090 --> 00:12:44,410
this project do you actually have

00:12:41,320 --> 00:12:45,730
company time to maintain it and how many

00:12:44,410 --> 00:12:48,400
maintain is are you actually on this

00:12:45,730 --> 00:12:49,260
team are you just a one guy operation if

00:12:48,400 --> 00:12:51,000
not you

00:12:49,260 --> 00:12:52,710
do it because that is too fragile that

00:12:51,000 --> 00:12:54,270
that one person leaves the company and

00:12:52,710 --> 00:12:56,550
that project is basically just deserted

00:12:54,270 --> 00:12:58,680
even if even if you get folks from

00:12:56,550 --> 00:13:00,630
external to the company to help assist

00:12:58,680 --> 00:13:02,610
the project that's still too fragile

00:13:00,630 --> 00:13:05,190
it's too still too fragile because we

00:13:02,610 --> 00:13:07,770
see that a lot of open source projects

00:13:05,190 --> 00:13:10,020
are run by a core group of people who

00:13:07,770 --> 00:13:11,220
care very much about this project but a

00:13:10,020 --> 00:13:12,750
lot of the reason why they actually care

00:13:11,220 --> 00:13:13,950
about it is because in the context of

00:13:12,750 --> 00:13:15,150
their work at least force Atlanta

00:13:13,950 --> 00:13:18,450
because we use a lot of this open source

00:13:15,150 --> 00:13:20,160
quote inside our store and so when they

00:13:18,450 --> 00:13:22,260
leave for another job at another company

00:13:20,160 --> 00:13:25,950
they stop caring about it because it's

00:13:22,260 --> 00:13:27,180
not part of their work anymore so so

00:13:25,950 --> 00:13:29,340
these are the things we need to ensure

00:13:27,180 --> 00:13:31,740
happens during the release process that

00:13:29,340 --> 00:13:33,090
we take responsibility for resources

00:13:31,740 --> 00:13:36,270
being available to our developers that

00:13:33,090 --> 00:13:37,410
we have time and people on it and that

00:13:36,270 --> 00:13:39,450
we actually have a long-term motivation

00:13:37,410 --> 00:13:41,190
to maintain it otherwise we will lose

00:13:39,450 --> 00:13:42,390
interest and eventually tell the

00:13:41,190 --> 00:13:45,480
developers to do something else that's

00:13:42,390 --> 00:13:47,460
just how it works and again that is

00:13:45,480 --> 00:13:49,290
those to take long term ownership

00:13:47,460 --> 00:13:52,050
because if we don't have that ownership

00:13:49,290 --> 00:13:53,790
we will not fix the box there will be no

00:13:52,050 --> 00:13:55,470
one in that inbox that gets that per

00:13:53,790 --> 00:13:58,260
request that's trying to fix an issue

00:13:55,470 --> 00:13:59,820
no one will respond to it so it sounds

00:13:58,260 --> 00:14:02,160
like it's less so about security and

00:13:59,820 --> 00:14:04,980
more about just that responsibility

00:14:02,160 --> 00:14:07,440
which then leads to trust that that that

00:14:04,980 --> 00:14:09,480
component will be there over yeah it

00:14:07,440 --> 00:14:11,250
goes way beyond security because it is

00:14:09,480 --> 00:14:12,900
also about how do we interact with the

00:14:11,250 --> 00:14:15,570
people actually approaching us that

00:14:12,900 --> 00:14:17,070
might just be a design fix for a piece

00:14:15,570 --> 00:14:18,960
of bit could also might as well be a

00:14:17,070 --> 00:14:20,340
crucial piece of information about a

00:14:18,960 --> 00:14:22,650
vulnerability it doesn't really matter

00:14:20,340 --> 00:14:25,590
we have to be responsible for a

00:14:22,650 --> 00:14:27,480
community around these things as well so

00:14:25,590 --> 00:14:29,310
let me take that again go back to the

00:14:27,480 --> 00:14:30,780
outside approach to this and Tracy I'm

00:14:29,310 --> 00:14:32,700
gonna go back to you with me like

00:14:30,780 --> 00:14:35,580
distributed nature of Jenkins and all

00:14:32,700 --> 00:14:37,350
the plugins that work with that yeah how

00:14:35,580 --> 00:14:40,410
do you deal with that kind of

00:14:37,350 --> 00:14:42,330
responsibility concept you know in the

00:14:40,410 --> 00:14:45,000
world that you're in today it does that

00:14:42,330 --> 00:14:48,870
exist does it not or is it just a

00:14:45,000 --> 00:14:52,590
community come and help us out yeah it

00:14:48,870 --> 00:14:55,350
definitely has its challenges and again

00:14:52,590 --> 00:14:58,560
similar to like as the company cloudBees

00:14:55,350 --> 00:15:00,810
we kind of at the company level get

00:14:58,560 --> 00:15:01,030
involved with with the project so a lot

00:15:00,810 --> 00:15:03,790
of

00:15:01,030 --> 00:15:07,120
Jenkins security team work at cloudBees

00:15:03,790 --> 00:15:10,510
and the things we're seeing there that

00:15:07,120 --> 00:15:13,060
make it really challenging as that the

00:15:10,510 --> 00:15:15,700
whole security area has become really

00:15:13,060 --> 00:15:17,620
professionalized recently which is a

00:15:15,700 --> 00:15:20,530
very good thing for the industry but

00:15:17,620 --> 00:15:23,770
what that means for open-source so if

00:15:20,530 --> 00:15:25,240
you take the example of Jenkins we in

00:15:23,770 --> 00:15:28,120
the history of the project there have

00:15:25,240 --> 00:15:31,360
been eight security vulnerabilities

00:15:28,120 --> 00:15:33,430
which were reported with coordinated

00:15:31,360 --> 00:15:35,290
disclosure dates so you're getting the

00:15:33,430 --> 00:15:39,190
report and you've got a ticking clock

00:15:35,290 --> 00:15:40,810
and those all happened in 2018 so now if

00:15:39,190 --> 00:15:43,330
you're getting a vulnerability you know

00:15:40,810 --> 00:15:44,500
there's a time countdown so how do you

00:15:43,330 --> 00:15:46,480
do that when you've got a community

00:15:44,500 --> 00:15:50,590
where that vulnerability could be in a

00:15:46,480 --> 00:15:52,270
plug-in that an individual wrote or even

00:15:50,590 --> 00:15:53,500
if it's in a company the team is focused

00:15:52,270 --> 00:15:55,450
on something else and all of a sudden

00:15:53,500 --> 00:15:59,740
it's like okay drop everything and deal

00:15:55,450 --> 00:16:04,030
with this so it's something we think a

00:15:59,740 --> 00:16:05,650
lot about like a cloud ease we can we

00:16:04,030 --> 00:16:07,750
have to keep that trust with the

00:16:05,650 --> 00:16:09,520
customer like you're saying but we're

00:16:07,750 --> 00:16:12,490
also looking at how do we solve this in

00:16:09,520 --> 00:16:14,290
a in a bigger fashion and it has to be

00:16:12,490 --> 00:16:16,390
everybody's responsibility and we can't

00:16:14,290 --> 00:16:19,420
throw open-source developers under the

00:16:16,390 --> 00:16:22,390
bus so well how do you deal with that

00:16:19,420 --> 00:16:23,950
like you say hey you're not being

00:16:22,390 --> 00:16:26,470
responsible for this thing how do you

00:16:23,950 --> 00:16:29,470
like walk that line well one of the

00:16:26,470 --> 00:16:31,780
things we have done very recently we've

00:16:29,470 --> 00:16:33,400
got together a bunch of the projects in

00:16:31,780 --> 00:16:34,840
the space and a bunch of companies and

00:16:33,400 --> 00:16:36,310
we've started a new foundation called

00:16:34,840 --> 00:16:39,070
the continuous delivery foundation

00:16:36,310 --> 00:16:41,380
fantastic and that is so we can take

00:16:39,070 --> 00:16:44,080
this long-term view of you know how can

00:16:41,380 --> 00:16:46,390
we focus on cross-cutting issues like

00:16:44,080 --> 00:16:48,160
security so the hope there is we can

00:16:46,390 --> 00:16:50,590
have you know working groups focused on

00:16:48,160 --> 00:16:52,990
these best practices approach it from a

00:16:50,590 --> 00:16:55,960
way that we can use this community to

00:16:52,990 --> 00:16:58,810
spread the message extend best practices

00:16:55,960 --> 00:17:01,300
and get everybody involved open source

00:16:58,810 --> 00:17:02,890
projects companies individuals so just

00:17:01,300 --> 00:17:04,510
just be more organized about it because

00:17:02,890 --> 00:17:06,520
I think that's what it takes and so and

00:17:04,510 --> 00:17:09,010
so that that should help that that

00:17:06,520 --> 00:17:11,370
notion of folks not necessarily I'm not

00:17:09,010 --> 00:17:12,780
taking responsibility for

00:17:11,370 --> 00:17:15,810
the security vulnerability or whatever

00:17:12,780 --> 00:17:18,750
so then we can set you know we can set

00:17:15,810 --> 00:17:21,390
requirements to say like you know you

00:17:18,750 --> 00:17:23,280
have to meet these things or we we can't

00:17:21,390 --> 00:17:26,040
highlight your plug-in and promote it

00:17:23,280 --> 00:17:27,420
and in some cases or you give the

00:17:26,040 --> 00:17:29,760
community permission or the security

00:17:27,420 --> 00:17:32,550
team permission to push out fixes to

00:17:29,760 --> 00:17:33,810
your repository and you know I really

00:17:32,550 --> 00:17:35,820
like the features announced at the

00:17:33,810 --> 00:17:38,310
keynote today because we can start to

00:17:35,820 --> 00:17:40,440
think about okay these now we have the

00:17:38,310 --> 00:17:43,170
tooling tooling is another big part of

00:17:40,440 --> 00:17:45,240
it so how do we use that thank you for

00:17:43,170 --> 00:17:48,960
mentioning the keynote too so I'll make

00:17:45,240 --> 00:17:50,490
sure to pay you afterwards yes so yeah I

00:17:48,960 --> 00:17:52,200
mean with all the stuff that we launched

00:17:50,490 --> 00:17:54,090
at the Keene at the keynote today like I

00:17:52,200 --> 00:17:55,800
think a lot of that can be valuable to

00:17:54,090 --> 00:17:57,690
this concept of like taking

00:17:55,800 --> 00:18:00,570
responsibility and like reducing the

00:17:57,690 --> 00:18:02,600
friction for developers on your team or

00:18:00,570 --> 00:18:05,040
if you're even working an open source to

00:18:02,600 --> 00:18:07,320
get those vulnerabilities patched as

00:18:05,040 --> 00:18:08,940
soon as possible because it sounds like

00:18:07,320 --> 00:18:10,770
it is really a team effort right we

00:18:08,940 --> 00:18:12,630
talked about interconnected community

00:18:10,770 --> 00:18:16,380
and it's kind of important for all of us

00:18:12,630 --> 00:18:19,410
to you know chip in on that front I'm

00:18:16,380 --> 00:18:21,600
kind of curious you know and I want to

00:18:19,410 --> 00:18:24,150
ask you again so you know have you ever

00:18:21,600 --> 00:18:25,680
run into situations or you know even

00:18:24,150 --> 00:18:28,380
based on your state of open source

00:18:25,680 --> 00:18:29,760
security report where developers are

00:18:28,380 --> 00:18:31,710
kind of pointing to one another and

00:18:29,760 --> 00:18:33,240
saying like hey you're responsible

00:18:31,710 --> 00:18:35,370
you're responsible and never really like

00:18:33,240 --> 00:18:37,920
taking care of the thing just like is

00:18:35,370 --> 00:18:41,460
that show up in your report I think the

00:18:37,920 --> 00:18:45,210
finger-pointing is it usually comes down

00:18:41,460 --> 00:18:48,900
to maintain is who either unresponsive

00:18:45,210 --> 00:18:49,950
or or their root you know you you tell

00:18:48,900 --> 00:18:51,600
them about a vulnerability and they're

00:18:49,950 --> 00:18:53,700
very kind of abrasive about it like I I

00:18:51,600 --> 00:18:56,910
don't I don't have from abilities of my

00:18:53,700 --> 00:18:59,610
kind I'm a perfect developer but I don't

00:18:56,910 --> 00:19:02,070
have any in mind yeah but I write for

00:18:59,610 --> 00:19:07,080
obscure languages crystals they don't

00:19:02,070 --> 00:19:09,300
have firm abilities yeah but foreign

00:19:07,080 --> 00:19:13,320
abilities a fact of life and and what's

00:19:09,300 --> 00:19:15,690
important to know is on the whole open

00:19:13,320 --> 00:19:19,020
source maintain is a very good we we

00:19:15,690 --> 00:19:20,820
asked how quickly developers would fix a

00:19:19,020 --> 00:19:23,340
vulnerability if they found out about

00:19:20,820 --> 00:19:26,300
one in their code and 84%

00:19:23,340 --> 00:19:28,560
they do it within a week so I think the

00:19:26,300 --> 00:19:31,740
really good sign it's really good sign

00:19:28,560 --> 00:19:33,090
the the people take it seriousiy and

00:19:31,740 --> 00:19:36,770
it's also really great to see things

00:19:33,090 --> 00:19:39,990
like having a security dome defaul

00:19:36,770 --> 00:19:42,600
really increases like by a massive

00:19:39,990 --> 00:19:44,520
proportion the number of reports that

00:19:42,600 --> 00:19:46,050
you will get versus not having one at

00:19:44,520 --> 00:19:49,200
all but as soon as you could put a

00:19:46,050 --> 00:19:52,860
security md file up then you're going to

00:19:49,200 --> 00:19:55,500
get much more private disclosure as

00:19:52,860 --> 00:19:57,360
opposed to tweets saying that your code

00:19:55,500 --> 00:19:59,670
is vulnerable and what other what other

00:19:57,360 --> 00:20:02,550
things can an open sit an open-source

00:19:59,670 --> 00:20:04,620
maintainer do to like help that process

00:20:02,550 --> 00:20:06,990
and or what can other folks do to

00:20:04,620 --> 00:20:08,550
encourage you know a project to you know

00:20:06,990 --> 00:20:11,180
take that path to being better at this

00:20:08,550 --> 00:20:14,270
it's a bit of a trickle effect we've got

00:20:11,180 --> 00:20:16,950
$0.78 of vulnerabilities are in direct

00:20:14,270 --> 00:20:18,750
indirect dependencies so not your direct

00:20:16,950 --> 00:20:22,980
dependencies it's the other packages

00:20:18,750 --> 00:20:25,350
that use so it needs more kind of people

00:20:22,980 --> 00:20:28,410
taking ownership more people auditing

00:20:25,350 --> 00:20:32,130
their code they're like it's Nick we

00:20:28,410 --> 00:20:34,740
have a plugin for ideas we have you know

00:20:32,130 --> 00:20:36,360
CI tools we have a CLI there's every

00:20:34,740 --> 00:20:38,520
single stage of the development

00:20:36,360 --> 00:20:41,880
lifecycle we have a way for you to

00:20:38,520 --> 00:20:44,730
monitor find and fix vulnerabilities and

00:20:41,880 --> 00:20:46,830
that's that's crucial we can't have it

00:20:44,730 --> 00:20:48,930
like I imagine the most of you in the

00:20:46,830 --> 00:20:56,820
audience work agile does anyone not work

00:20:48,930 --> 00:20:58,470
agile yeah the security team can't be

00:20:56,820 --> 00:20:59,790
just blocking bills you know they're not

00:20:58,470 --> 00:21:01,320
they don't want to be the gatekeeper

00:20:59,790 --> 00:21:02,970
they want to be they want to be the

00:21:01,320 --> 00:21:04,590
superheroes not the villains

00:21:02,970 --> 00:21:06,210
whereas developers want to feel

00:21:04,590 --> 00:21:07,680
empowered you know they own the code

00:21:06,210 --> 00:21:10,320
they don't want some telling them no you

00:21:07,680 --> 00:21:11,970
can't merge this they want to be kind of

00:21:10,320 --> 00:21:14,760
owning that and making those decisions

00:21:11,970 --> 00:21:17,040
and having those tools in place at that

00:21:14,760 --> 00:21:18,660
every stage of the lifecycle means that

00:21:17,040 --> 00:21:20,820
they can fix vulnerabilities before

00:21:18,660 --> 00:21:22,350
they've even made a commit and the

00:21:20,820 --> 00:21:24,210
sooner that they can fix our abilities

00:21:22,350 --> 00:21:26,220
the last time they have to spend on them

00:21:24,210 --> 00:21:27,840
so what you're talking about it sounds

00:21:26,220 --> 00:21:29,700
like we have to make that just kind of

00:21:27,840 --> 00:21:31,410
natural as part of our everyday

00:21:29,700 --> 00:21:33,540
development across the whole lifecycle

00:21:31,410 --> 00:21:34,330
otherwise like we have no chance if we

00:21:33,540 --> 00:21:35,440
wait

00:21:34,330 --> 00:21:37,090
and it's really important for those

00:21:35,440 --> 00:21:38,950
developers who aren't confident and you

00:21:37,090 --> 00:21:40,750
know that 70% of open-source maintainer

00:21:38,950 --> 00:21:42,640
x' he said they don't feel confident

00:21:40,750 --> 00:21:45,070
fixing vulnerabilities in their code

00:21:42,640 --> 00:21:46,600
that they have the tools in place I mean

00:21:45,070 --> 00:21:48,400
that they don't have to have that

00:21:46,600 --> 00:21:50,830
knowledge it just it's self-healing it

00:21:48,400 --> 00:21:52,170
does it for them I think that is the

00:21:50,830 --> 00:21:54,690
only way we're going to get kind of

00:21:52,170 --> 00:21:57,040
reducing the vulnerabilities and code

00:21:54,690 --> 00:21:58,510
okay so I'm gonna go back to the

00:21:57,040 --> 00:22:00,640
internal perspective on this all right

00:21:58,510 --> 00:22:02,200
do are you doing that today within your

00:22:00,640 --> 00:22:04,260
company are you trying to provide that

00:22:02,200 --> 00:22:11,950
along every step of the lifecycle I

00:22:04,260 --> 00:22:15,070
really like and I would like to

00:22:11,950 --> 00:22:17,740
underline that just you know those those

00:22:15,070 --> 00:22:21,340
teams and those quotes in our case if

00:22:17,740 --> 00:22:23,470
they don't own the service the code then

00:22:21,340 --> 00:22:26,200
this is just a job for them but we want

00:22:23,470 --> 00:22:28,390
them we want to change parts of the

00:22:26,200 --> 00:22:30,340
world and we want them also to be with

00:22:28,390 --> 00:22:32,620
us on the journey and with their service

00:22:30,340 --> 00:22:36,150
to help us to change parts of the world

00:22:32,620 --> 00:22:38,560
and once this ownership applies then

00:22:36,150 --> 00:22:40,480
that there is no finger-pointing there

00:22:38,560 --> 00:22:42,730
is no question is it yours or is it my

00:22:40,480 --> 00:22:47,470
problem this is just about fixing the

00:22:42,730 --> 00:22:50,200
problem and also the lifecycle aspect is

00:22:47,470 --> 00:22:52,930
really crucial and I see that every day

00:22:50,200 --> 00:22:55,990
and I'm really happy about it that you

00:22:52,930 --> 00:22:57,730
don't focus certain iteration on certain

00:22:55,990 --> 00:22:59,980
topics like security like throughput

00:22:57,730 --> 00:23:02,710
like performance you try that you try to

00:22:59,980 --> 00:23:04,480
make that an ongoing effort for all

00:23:02,710 --> 00:23:06,700
those non-functional and functional

00:23:04,480 --> 00:23:09,160
requirements for for all the changes

00:23:06,700 --> 00:23:12,520
that you do in the code for those quotes

00:23:09,160 --> 00:23:15,870
I work closer with they come up with

00:23:12,520 --> 00:23:18,280
so-called tech talks so there are

00:23:15,870 --> 00:23:20,170
bi-weekly iterations where the whole

00:23:18,280 --> 00:23:23,050
team meets together and we'll talk about

00:23:20,170 --> 00:23:25,120
all those technical aspects that may not

00:23:23,050 --> 00:23:26,950
be so much focus on when talking about

00:23:25,120 --> 00:23:29,740
business requirements and so on and so

00:23:26,950 --> 00:23:33,790
forth and this is this is the squad's

00:23:29,740 --> 00:23:36,190
way to make sure all those technical

00:23:33,790 --> 00:23:38,530
considerations are also end up in

00:23:36,190 --> 00:23:40,210
tickets as well as business requirements

00:23:38,530 --> 00:23:41,460
to end up in tickets and have to be

00:23:40,210 --> 00:23:44,399
provided by

00:23:41,460 --> 00:23:46,799
school on an ongoing basis understood

00:23:44,399 --> 00:23:48,899
and so para I'm gonna ask you you know

00:23:46,799 --> 00:23:51,360
how I want to know some details like how

00:23:48,899 --> 00:23:53,610
does security remediation work you know

00:23:51,360 --> 00:23:55,919
within the scope of what you do and for

00:23:53,610 --> 00:23:58,320
the folks that work with you yeah and so

00:23:55,919 --> 00:24:00,000
there's different ways of doing so our

00:23:58,320 --> 00:24:01,230
team to get all their github security

00:24:00,000 --> 00:24:03,029
alerts and a lot of the teams just

00:24:01,230 --> 00:24:04,470
proactively fix these as they come in

00:24:03,029 --> 00:24:06,149
with a I heard that correctly you are

00:24:04,470 --> 00:24:08,429
using github security oh yeah are you

00:24:06,149 --> 00:24:10,770
doing yes yes we use github Enterprise

00:24:08,429 --> 00:24:13,679
we also use the public it hub and I'll

00:24:10,770 --> 00:24:15,289
get my money afterwards I guess thank

00:24:13,679 --> 00:24:18,480
you

00:24:15,289 --> 00:24:20,010
but so these teams get get notified and

00:24:18,480 --> 00:24:21,299
it's it's a good good process for the

00:24:20,010 --> 00:24:23,220
team because then they can work it into

00:24:21,299 --> 00:24:24,690
the sprint planning and so on then

00:24:23,220 --> 00:24:26,760
there's the more critical things which

00:24:24,690 --> 00:24:28,770
actually reaches into production

00:24:26,760 --> 00:24:31,500
actually reaches our in customers and

00:24:28,770 --> 00:24:34,169
our security operations center work with

00:24:31,500 --> 00:24:36,000
companies like hacker one and pentesters

00:24:34,169 --> 00:24:38,070
and we discover these a lot of these

00:24:36,000 --> 00:24:39,480
vulnerabilities ourselves and then it

00:24:38,070 --> 00:24:41,730
goes through like an internal process

00:24:39,480 --> 00:24:43,529
saying this is this is affecting our

00:24:41,730 --> 00:24:45,539
customers affecting customer trust so

00:24:43,529 --> 00:24:46,919
this must be fixed so those it's like a

00:24:45,539 --> 00:24:48,270
hard mandate so that's not a lot of

00:24:46,919 --> 00:24:52,529
finger-pointing here it just must be

00:24:48,270 --> 00:24:54,779
fixed so I think remediation is is

00:24:52,529 --> 00:24:56,159
interesting in itself but first that's

00:24:54,779 --> 00:24:58,860
rather simple because it just must be

00:24:56,159 --> 00:25:01,380
done I think for us the more interesting

00:24:58,860 --> 00:25:03,539
question is how do you avoid getting to

00:25:01,380 --> 00:25:06,450
that point how can you be more

00:25:03,539 --> 00:25:08,279
proactively aware about what is when you

00:25:06,450 --> 00:25:10,649
adopt the dependency for instance if you

00:25:08,279 --> 00:25:12,360
look at an open source dependency that

00:25:10,649 --> 00:25:14,460
typically happens in the team itself

00:25:12,360 --> 00:25:17,340
they have complete autonomy to do so and

00:25:14,460 --> 00:25:19,049
they typically go on and github and they

00:25:17,340 --> 00:25:21,000
look at the project's they look at the

00:25:19,049 --> 00:25:22,799
readme and say this looks nice and then

00:25:21,000 --> 00:25:24,690
they adopt it and it becomes part of

00:25:22,799 --> 00:25:26,130
what they're building and then it goes

00:25:24,690 --> 00:25:28,380
into production and then the alerts

00:25:26,130 --> 00:25:32,159
start coming so how do they find those

00:25:28,380 --> 00:25:33,539
tools and I think I think the again I

00:25:32,159 --> 00:25:35,130
would also like to mention the keynote

00:25:33,539 --> 00:25:37,500
is very nice to see things are getting

00:25:35,130 --> 00:25:39,630
done but I think the key thing that's

00:25:37,500 --> 00:25:41,549
missing here is to be able to assess

00:25:39,630 --> 00:25:43,140
this before you adopt the dependency

00:25:41,549 --> 00:25:45,990
developers have very little knowledge

00:25:43,140 --> 00:25:47,610
and very little noise is exposed to them

00:25:45,990 --> 00:25:49,950
when they look at a project on github

00:25:47,610 --> 00:25:51,299
it's all about all the great things that

00:25:49,950 --> 00:25:52,950
it can do but it doesn't actually talk

00:25:51,299 --> 00:25:54,720
about the risks so a developer is not

00:25:52,950 --> 00:25:55,049
really in a position to assess the risk

00:25:54,720 --> 00:25:56,940
of it

00:25:55,049 --> 00:26:01,139
Dependencies he's about to well depend

00:25:56,940 --> 00:26:02,549
on and live with for a long time so I

00:26:01,139 --> 00:26:06,539
think that that that part is still

00:26:02,549 --> 00:26:08,220
missing and well I think here the only

00:26:06,539 --> 00:26:09,629
actor in the open source world that can

00:26:08,220 --> 00:26:12,269
do that and lift that burden it is

00:26:09,629 --> 00:26:13,710
github because you are very central

00:26:12,269 --> 00:26:16,409
piece of that ecosystem and could

00:26:13,710 --> 00:26:17,580
provide this information yeah I mean I

00:26:16,409 --> 00:26:20,970
think the way that we look at it its

00:26:17,580 --> 00:26:22,289
github is like you know we yeah we can

00:26:20,970 --> 00:26:24,509
be central to a lot of where the

00:26:22,289 --> 00:26:26,039
developer works like and you know my you

00:26:24,509 --> 00:26:27,330
know interests especially along the

00:26:26,039 --> 00:26:29,489
entire software development lifecycle

00:26:27,330 --> 00:26:31,619
right but you know there are things and

00:26:29,489 --> 00:26:33,090
other companies that provide services as

00:26:31,619 --> 00:26:34,950
well that can plug into that entire

00:26:33,090 --> 00:26:38,299
lifecycle that we're still very

00:26:34,950 --> 00:26:41,580
important to making sure developers can

00:26:38,299 --> 00:26:42,720
yes they can actually you know get

00:26:41,580 --> 00:26:45,470
everything that they need to get done

00:26:42,720 --> 00:26:48,570
along every single step of the way and

00:26:45,470 --> 00:26:50,100
you know that's what you know it that's

00:26:48,570 --> 00:26:51,869
what it means for us to be open and have

00:26:50,100 --> 00:26:54,239
that an interconnected community from

00:26:51,869 --> 00:26:56,460
the get-go and this is not to say what's

00:26:54,239 --> 00:26:58,440
Nick is doing is not good it's great I

00:26:56,460 --> 00:27:00,299
just think I would just love to know

00:26:58,440 --> 00:27:02,100
these things way earlier then when it

00:27:00,299 --> 00:27:04,139
gets into my CI I would love to have

00:27:02,100 --> 00:27:06,529
that developers have this knowledge

00:27:04,139 --> 00:27:08,580
before they actually do npm install

00:27:06,529 --> 00:27:10,259
that's where i think that's the most

00:27:08,580 --> 00:27:11,609
valuable thing the longer you get into

00:27:10,259 --> 00:27:13,200
the developer journey the more expensive

00:27:11,609 --> 00:27:17,609
will it be to fix these security issues

00:27:13,200 --> 00:27:20,509
they'll pop up eventually so I think you

00:27:17,609 --> 00:27:23,909
should be talking if you're not a

00:27:20,509 --> 00:27:29,369
customer you might want to figure okay

00:27:23,909 --> 00:27:31,320
so Tracy I want to ask you again so I

00:27:29,369 --> 00:27:34,200
want to go to like you know kind of the

00:27:31,320 --> 00:27:37,549
broader community are you noticing any

00:27:34,200 --> 00:27:40,200
trends you know regarding security like

00:27:37,549 --> 00:27:42,059
you know it's been a hot topic and you

00:27:40,200 --> 00:27:45,200
know given today's keynote it was one of

00:27:42,059 --> 00:27:48,179
the three pillars that we had up there

00:27:45,200 --> 00:27:50,639
you know in your perspective do you see

00:27:48,179 --> 00:27:52,499
it despite all the talk getting better

00:27:50,639 --> 00:27:53,970
is it getting worse you know kind of

00:27:52,499 --> 00:27:55,230
give us kind of a State of the Union in

00:27:53,970 --> 00:27:58,109
banana I'm gonna ask you probably the

00:27:55,230 --> 00:28:02,609
same thing yeah I think we have to

00:27:58,109 --> 00:28:04,710
acknowledge that up to now the way as an

00:28:02,609 --> 00:28:06,869
industry we've dealt with security has

00:28:04,710 --> 00:28:08,519
been just a trash fire it's just

00:28:06,869 --> 00:28:11,980
horrendous

00:28:08,519 --> 00:28:13,960
so I think it's really good that we are

00:28:11,980 --> 00:28:15,460
having these conversations I think the

00:28:13,960 --> 00:28:18,250
the fact that people are starting to

00:28:15,460 --> 00:28:20,130
highlight it is it's a good start but

00:28:18,250 --> 00:28:22,840
there's a lot of ground to make up

00:28:20,130 --> 00:28:24,940
but again as we're saying it's getting

00:28:22,840 --> 00:28:27,580
more professionalized which is good I

00:28:24,940 --> 00:28:30,460
think once we start doing that then we

00:28:27,580 --> 00:28:32,289
start saying okay well how do we do this

00:28:30,460 --> 00:28:35,169
and then it comes down to you know open

00:28:32,289 --> 00:28:37,179
source and how are you going to fund the

00:28:35,169 --> 00:28:38,380
people who are maintaining it so I think

00:28:37,179 --> 00:28:41,019
that's the other side of it you know

00:28:38,380 --> 00:28:42,730
just making sure all these open source

00:28:41,019 --> 00:28:45,700
projects which we depend on can be

00:28:42,730 --> 00:28:47,919
sustained in the face of you know these

00:28:45,700 --> 00:28:51,940
vulnerabilities with ticking clocks and

00:28:47,919 --> 00:28:54,010
software in everything so I think it's a

00:28:51,940 --> 00:28:55,899
good start and I think if we keep going

00:28:54,010 --> 00:28:58,059
like taking it seriously and working

00:28:55,899 --> 00:29:00,789
together it just has to happen that way

00:28:58,059 --> 00:29:03,159
so it sounds so to summarize it sounds

00:29:00,789 --> 00:29:05,769
like we're on the right path but we

00:29:03,159 --> 00:29:10,110
still got a long way to go yeah and just

00:29:05,769 --> 00:29:13,389
taking kind of a long long term view and

00:29:10,110 --> 00:29:15,370
you know what do you think I think it's

00:29:13,389 --> 00:29:16,570
really great what github is doing it's

00:29:15,370 --> 00:29:19,059
really important that security becomes

00:29:16,570 --> 00:29:22,120
kind of the default like you have to go

00:29:19,059 --> 00:29:23,350
in and turn off the alerts you you they

00:29:22,120 --> 00:29:25,450
were on by default it's telling you

00:29:23,350 --> 00:29:27,700
about them I think there's still a way

00:29:25,450 --> 00:29:30,940
to go and like what I said earlier about

00:29:27,700 --> 00:29:32,350
transitive vulnerabilities so for an

00:29:30,940 --> 00:29:34,630
ability to are in your indirect

00:29:32,350 --> 00:29:37,000
dependencies as well as making sure that

00:29:34,630 --> 00:29:37,840
we don't make it too noisy so if we make

00:29:37,000 --> 00:29:39,669
it too noisy

00:29:37,840 --> 00:29:41,679
then people will turn it off or they'll

00:29:39,669 --> 00:29:43,659
ignore it they become desensitized to it

00:29:41,679 --> 00:29:45,669
so it's about making sure that they're

00:29:43,659 --> 00:29:48,610
every piece of advice we give is

00:29:45,669 --> 00:29:52,120
actionable and that that action is just

00:29:48,610 --> 00:29:54,909
seamless it just just works speaking of

00:29:52,120 --> 00:29:56,830
that actionability do you have any like

00:29:54,909 --> 00:29:59,620
in interesting information on that

00:29:56,830 --> 00:30:02,559
regard or I mean do folks like you know

00:29:59,620 --> 00:30:04,929
I don't know maybe never do anything I

00:30:02,559 --> 00:30:07,960
wish I had like the stats off the top of

00:30:04,929 --> 00:30:09,909
my head but generally if it's not

00:30:07,960 --> 00:30:11,760
actionable then people went to do

00:30:09,909 --> 00:30:13,260
anything about it I would love to hear

00:30:11,760 --> 00:30:15,210
that we're saying earlier about all of

00:30:13,260 --> 00:30:17,550
the kind of issues that have been opened

00:30:15,210 --> 00:30:20,130
all of the kind of notifications that

00:30:17,550 --> 00:30:21,390
they'd send about vulnerabilities I'd

00:30:20,130 --> 00:30:24,360
love to know how many of those were

00:30:21,390 --> 00:30:26,430
actually resolved afterwards so I think

00:30:24,360 --> 00:30:28,080
as long as you make it easy as long as

00:30:26,430 --> 00:30:30,090
it's kind of just part of the life cycle

00:30:28,080 --> 00:30:32,580
either you click on a button to fix it

00:30:30,090 --> 00:30:34,590
or it just fixes itself opens pull

00:30:32,580 --> 00:30:37,260
requests that sort of thing then I think

00:30:34,590 --> 00:30:38,670
it's going to it's got more chance of

00:30:37,260 --> 00:30:42,300
catching on and being kind of the

00:30:38,670 --> 00:30:44,760
standard part of developers workflow and

00:30:42,300 --> 00:30:46,740
so going to the internal perspective I'm

00:30:44,760 --> 00:30:49,770
gonna look at the other two folks of the

00:30:46,740 --> 00:30:52,020
other side of the table speaking of that

00:30:49,770 --> 00:30:53,120
actionability and/or prioritization of

00:30:52,020 --> 00:30:57,660
that we know we've been talking about

00:30:53,120 --> 00:31:00,330
responsibility but to what extent do you

00:30:57,660 --> 00:31:03,000
have as like a product philosophy that

00:31:00,330 --> 00:31:04,740
hey we have to fix these things or we

00:31:03,000 --> 00:31:06,690
prioritize this above maybe feature

00:31:04,740 --> 00:31:09,360
requests and things like that I mean do

00:31:06,690 --> 00:31:12,240
you have that level of maybe extrinsic

00:31:09,360 --> 00:31:15,330
levers the to push the teams to do those

00:31:12,240 --> 00:31:17,010
things so I get the Lando engineering

00:31:15,330 --> 00:31:19,140
teams are largely autonomous about how

00:31:17,010 --> 00:31:20,700
they prioritize their work but there is

00:31:19,140 --> 00:31:22,200
a shared understanding that Security's

00:31:20,700 --> 00:31:23,880
importance it does assist among the

00:31:22,200 --> 00:31:26,340
teams how are you going to attack these

00:31:23,880 --> 00:31:28,530
problems but yeah if we have something

00:31:26,340 --> 00:31:31,290
that has customer impacts then it is is

00:31:28,530 --> 00:31:32,820
priority one that's that's when

00:31:31,290 --> 00:31:34,260
something like yeah shows up immediately

00:31:32,820 --> 00:31:35,820
I need to take care of it but then

00:31:34,260 --> 00:31:38,490
there's sometimes these like lower grade

00:31:35,820 --> 00:31:40,710
bugs that show up that you know maybe

00:31:38,490 --> 00:31:43,770
there are lower severity but need to be

00:31:40,710 --> 00:31:45,630
taken care of at some point so like do

00:31:43,770 --> 00:31:48,150
those things get prioritized or do they

00:31:45,630 --> 00:31:49,650
no they don't and that is the only

00:31:48,150 --> 00:31:51,210
honest answer we don't have a company

00:31:49,650 --> 00:31:53,700
policy that says like prioritize all

00:31:51,210 --> 00:31:55,590
books we don't have that we try to do in

00:31:53,700 --> 00:31:57,450
a different way saying when you have a

00:31:55,590 --> 00:31:59,310
project like this sighs what is the time

00:31:57,450 --> 00:32:01,440
you need for this how much time do you

00:31:59,310 --> 00:32:03,210
want to privately have for this like in

00:32:01,440 --> 00:32:04,950
company time to make sure that it gets

00:32:03,210 --> 00:32:07,260
done then it's your responsibility to

00:32:04,950 --> 00:32:08,850
maintain it but we grind you the time to

00:32:07,260 --> 00:32:10,320
do it and the resources so you can do it

00:32:08,850 --> 00:32:12,720
in company time we don't expect you to

00:32:10,320 --> 00:32:14,280
do it at home for fun so that's how we

00:32:12,720 --> 00:32:16,950
try to do it we give people the

00:32:14,280 --> 00:32:18,170
resources and the time to do it and but

00:32:16,950 --> 00:32:21,810
then they also have to take

00:32:18,170 --> 00:32:23,940
responsibility for their work right I I

00:32:21,810 --> 00:32:24,840
still am slide challenged with you know

00:32:23,940 --> 00:32:26,279
you have business school

00:32:24,840 --> 00:32:28,259
right and you're trying to launch things

00:32:26,279 --> 00:32:30,990
to customers but then you have these

00:32:28,259 --> 00:32:32,249
lower grade bugs like yes I'm the

00:32:30,990 --> 00:32:34,200
product manager here and I should know

00:32:32,249 --> 00:32:37,169
how to prioritize things but you know

00:32:34,200 --> 00:32:39,090
how do you I'm still struggling with

00:32:37,169 --> 00:32:42,389
that yeah right and it just sounds like

00:32:39,090 --> 00:32:47,399
in your perspective like just let the

00:32:42,389 --> 00:32:49,049
team decide themselves yeah that is the

00:32:47,399 --> 00:32:50,340
answer because it's only the team who

00:32:49,049 --> 00:32:51,960
can actually assess it properly it's

00:32:50,340 --> 00:32:53,909
also the team that know the context of

00:32:51,960 --> 00:32:55,320
their projects it's also the team that

00:32:53,909 --> 00:32:56,730
knows their entire backlog and the

00:32:55,320 --> 00:32:58,740
importance of that area of the business

00:32:56,730 --> 00:33:01,200
so it must be up to the team again

00:32:58,740 --> 00:33:02,340
certain level it must be mandated there

00:33:01,200 --> 00:33:04,409
are certain things that's too important

00:33:02,340 --> 00:33:05,970
to be ignored but again it is the team's

00:33:04,409 --> 00:33:07,529
responsibility to take care of this of

00:33:05,970 --> 00:33:10,019
course if we monitor our different

00:33:07,529 --> 00:33:11,039
projects and we see where okay let's say

00:33:10,019 --> 00:33:12,779
we have an open source project that

00:33:11,039 --> 00:33:14,970
hasn't received an update for months

00:33:12,779 --> 00:33:16,980
then we have a conversation about is

00:33:14,970 --> 00:33:19,379
this actually something we are using and

00:33:16,980 --> 00:33:21,509
maintaining if we are not let's let's

00:33:19,379 --> 00:33:23,369
archive it let's say that this is not

00:33:21,509 --> 00:33:26,369
used anymore there are processes in

00:33:23,369 --> 00:33:28,200
place though for my like umbrella

00:33:26,369 --> 00:33:29,519
perspective so even though we're saying

00:33:28,200 --> 00:33:31,529
you know it's your responsibility

00:33:29,519 --> 00:33:33,990
developer to go do this thing there are

00:33:31,529 --> 00:33:35,190
still like processes that exist that you

00:33:33,990 --> 00:33:37,379
know you kind of look at these things

00:33:35,190 --> 00:33:39,960
and say you know based on these

00:33:37,379 --> 00:33:42,330
variables or characteristics it kicks

00:33:39,960 --> 00:33:44,070
off another conversation which I think

00:33:42,330 --> 00:33:47,100
from a product manager perspective that

00:33:44,070 --> 00:33:50,279
says oh maybe I should prioritize this

00:33:47,100 --> 00:33:51,269
thing for the team because you know we

00:33:50,279 --> 00:33:53,999
are getting called out on this and

00:33:51,269 --> 00:33:55,950
maintainability is in question yeah

00:33:53,999 --> 00:33:57,840
and it's tough because we have we have

00:33:55,950 --> 00:33:59,159
200 open source projects so we have to

00:33:57,840 --> 00:34:01,379
kind of look at the broad view and see

00:33:59,159 --> 00:34:03,840
what are the outliers and said 200 yeah

00:34:01,379 --> 00:34:06,869
200 before I think with you okay who's

00:34:03,840 --> 00:34:08,639
counting all right great if you could

00:34:06,869 --> 00:34:10,290
prioritize those based on like whether

00:34:08,639 --> 00:34:11,190
they're called a run time no that would

00:34:10,290 --> 00:34:16,069
be terrible

00:34:11,190 --> 00:34:18,720
[Laughter]

00:34:16,069 --> 00:34:20,369
okay well it's solos are you would you

00:34:18,720 --> 00:34:23,879
would you agree with what he said would

00:34:20,369 --> 00:34:25,679
with everything being said there yes but

00:34:23,879 --> 00:34:29,099
for me it's all about context and

00:34:25,679 --> 00:34:30,750
options right so I don't see a

00:34:29,099 --> 00:34:32,129
distinction between the product manager

00:34:30,750 --> 00:34:33,919
and the team I think he's part of the

00:34:32,129 --> 00:34:36,799
team right and he he should

00:34:33,919 --> 00:34:38,750
his or her view on security or business

00:34:36,799 --> 00:34:41,230
features and it's for the team about

00:34:38,750 --> 00:34:44,299
options so in case there are even lower

00:34:41,230 --> 00:34:47,210
lower prioritized bugs like bugs to be

00:34:44,299 --> 00:34:49,010
privatized not taken care of this will

00:34:47,210 --> 00:34:50,750
have consequences and the team should be

00:34:49,010 --> 00:34:52,879
aware of the consequences and should

00:34:50,750 --> 00:34:54,649
deal with them and you should also take

00:34:52,879 --> 00:34:56,569
responsibility in the ownership about

00:34:54,649 --> 00:35:02,480
either the consequences of fixing or not

00:34:56,569 --> 00:35:05,480
fixing it and this is part of the

00:35:02,480 --> 00:35:08,390
ongoing engineering effort that happens

00:35:05,480 --> 00:35:11,420
hopefully in every company and so this

00:35:08,390 --> 00:35:13,010
is the way we we try to do that and in

00:35:11,420 --> 00:35:15,859
terms of context I want to add another

00:35:13,010 --> 00:35:19,400
perspective which is zero friction and

00:35:15,859 --> 00:35:22,819
seamless and I mentioned that already so

00:35:19,400 --> 00:35:25,520
those developers I observe and I work

00:35:22,819 --> 00:35:27,260
with their there are mainly working in

00:35:25,520 --> 00:35:30,170
free environments it's either the

00:35:27,260 --> 00:35:34,900
terminal or their IDE or the source code

00:35:30,170 --> 00:35:37,609
management system and we and I try to

00:35:34,900 --> 00:35:40,130
reduce the context switches as much as

00:35:37,609 --> 00:35:42,049
often so I try to not approach them in

00:35:40,130 --> 00:35:44,119
person I try to select them and they

00:35:42,049 --> 00:35:46,339
pick up the slack message whenever it

00:35:44,119 --> 00:35:48,470
feels appropriate for them same with

00:35:46,339 --> 00:35:51,230
security alerts right imagine those

00:35:48,470 --> 00:35:53,599
happen in the context that you are

00:35:51,230 --> 00:35:56,630
working on you don't need to go to a

00:35:53,599 --> 00:35:59,540
certain website or to some service to do

00:35:56,630 --> 00:36:03,200
experience those and there are there was

00:35:59,540 --> 00:36:05,960
so frictionless actionable that you

00:36:03,200 --> 00:36:09,130
maybe just do one click or you to just

00:36:05,960 --> 00:36:13,280
issue one command and 10 of those gets

00:36:09,130 --> 00:36:17,920
fixed by reasonable recommendations this

00:36:13,280 --> 00:36:21,349
is this is the division I have this is

00:36:17,920 --> 00:36:24,200
even a I see that vision and happening

00:36:21,349 --> 00:36:27,589
today with with the news today and I see

00:36:24,200 --> 00:36:30,799
even more steps to what as seamless

00:36:27,589 --> 00:36:34,849
fully integrated options for for the

00:36:30,799 --> 00:36:36,530
engineers hopefully having soon okay so

00:36:34,849 --> 00:36:37,819
we're almost out of time any parting

00:36:36,530 --> 00:36:40,640
thoughts and I'll go down the line here

00:36:37,819 --> 00:36:44,020
for the audience today with regard to

00:36:40,640 --> 00:36:46,810
the topic so you want to kick us off

00:36:44,020 --> 00:36:50,230
it's all about to come

00:36:46,810 --> 00:36:52,270
it's about taking care about your

00:36:50,230 --> 00:36:54,730
co-workers about your colleagues in the

00:36:52,270 --> 00:36:57,760
community and also about the stuff to it

00:36:54,730 --> 00:36:59,410
that you are building yes I think the

00:36:57,760 --> 00:37:01,660
topic of security fits into the larger

00:36:59,410 --> 00:37:04,360
story about open-source sustainability

00:37:01,660 --> 00:37:06,610
as well a lot of the securities that we

00:37:04,360 --> 00:37:07,930
see is also because maintainer lose

00:37:06,610 --> 00:37:09,730
interest or don't have the time and

00:37:07,930 --> 00:37:11,530
don't have the resources to maintain the

00:37:09,730 --> 00:37:13,180
projects that all of us depend on so I

00:37:11,530 --> 00:37:15,250
think not just security but

00:37:13,180 --> 00:37:17,310
sustainability of open source and

00:37:15,250 --> 00:37:20,650
general is important in this aspect I

00:37:17,310 --> 00:37:22,630
think companies consume open source

00:37:20,650 --> 00:37:25,330
they're kind of tapping into this really

00:37:22,630 --> 00:37:27,670
great resource and one way that they can

00:37:25,330 --> 00:37:29,770
give back is by giving their developers

00:37:27,670 --> 00:37:33,400
who have those skills either the

00:37:29,770 --> 00:37:35,050
training or the kind of the time to fix

00:37:33,400 --> 00:37:37,300
open source vulnerabilities if they know

00:37:35,050 --> 00:37:43,240
how and then give back to the community

00:37:37,300 --> 00:37:45,820
that way I say yep prioritize kind of

00:37:43,240 --> 00:37:48,370
the the long-term security fixes keep

00:37:45,820 --> 00:37:51,460
talking about it so it's top of mind for

00:37:48,370 --> 00:37:55,240
people and yeah pass your jenkins

00:37:51,460 --> 00:37:57,190
service make sure they updated my

00:37:55,240 --> 00:37:58,030
takeaway from today's panel is i've

00:37:57,190 --> 00:38:00,580
learned that there's a bunch of

00:37:58,030 --> 00:38:03,490
intrinsic or extrinsic levers for folks

00:38:00,580 --> 00:38:04,990
that you know on this path of security

00:38:03,490 --> 00:38:06,760
that you can use as an engineering

00:38:04,990 --> 00:38:08,530
matter eat engineering managers

00:38:06,760 --> 00:38:10,990
developer yourself or even within the

00:38:08,530 --> 00:38:12,940
community to say hey there's some things

00:38:10,990 --> 00:38:14,350
that you can do and by doing X you know

00:38:12,940 --> 00:38:16,990
this is the outcome on the other side

00:38:14,350 --> 00:38:18,730
right and then the other part of this is

00:38:16,990 --> 00:38:20,350
like really reducing friction and

00:38:18,730 --> 00:38:23,130
helping developers understand and

00:38:20,350 --> 00:38:26,380
assessing risk earlier on and the

00:38:23,130 --> 00:38:27,670
software development lifecycle I want to

00:38:26,380 --> 00:38:29,020
say thank you to all the panelists for

00:38:27,670 --> 00:38:31,540
being here today and I want to thank you

00:38:29,020 --> 00:38:33,520
all for listening security it's the

00:38:31,540 --> 00:38:34,450
thing we all got to do it thanks

00:38:33,520 --> 00:38:36,920
everyone

00:38:34,450 --> 00:38:37,490
[Applause]

00:38:36,920 --> 00:38:46,039
you

00:38:37,490 --> 00:38:46,039

YouTube URL: https://www.youtube.com/watch?v=HpqM7kL_ACY


