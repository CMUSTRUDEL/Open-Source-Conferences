Title: Open source security: advisories and workflows to keep open source secure - GitHub Satellite 2019
Publication date: 2019-05-25
Playlist: GitHub Satellite 2019 Learn Stage
Description: 
	Presented by Bryan Clark, Senior Manager, Product Management, and Justin Hutchings, Senior Product Manager, Security/OSS Intelligence

Security is the most critical challenge in open source today, and the GitHub Team is investing in helping developers and teams work through their pain points. In this session, you'll learn how GitHub's tools are helping security researchers, maintainers, developers, and enterprises keep code secure. 

About GitHub Satellite 2019
A community connected by code

Explore our interconnected communityâ€”and how collaboration turns ideas into innovations.

Join us in November at San Francisco's Palace of Fine Arts for GitHub Universe - https://githubuniverse.com/
Captions: 
	00:00:01,220 --> 00:00:04,910
[Music]

00:00:07,660 --> 00:00:12,310
[Music]

00:00:14,660 --> 00:00:19,810
how's everybody doing whoo I got a loof

00:00:19,870 --> 00:00:25,880
hey I'm Brian Clark I'm the director of

00:00:23,119 --> 00:00:27,650
product for open source at github and

00:00:25,880 --> 00:00:29,150
I'm Justin Hutchings I'm a senior

00:00:27,650 --> 00:00:32,300
product manager on all the security

00:00:29,150 --> 00:00:35,000
features that we've shipped today we're

00:00:32,300 --> 00:00:39,260
gonna talk about open source security

00:00:35,000 --> 00:00:41,210
yeah thank you so here's that we're

00:00:39,260 --> 00:00:42,860
gonna do this on this breakout session

00:00:41,210 --> 00:00:45,620
we're going to talk about two things

00:00:42,860 --> 00:00:48,290
kind of in-depth so one is gonna be key

00:00:45,620 --> 00:00:50,000
aspects of the security advisories the

00:00:48,290 --> 00:00:51,199
thing that we shipped today and then

00:00:50,000 --> 00:00:52,909
we're gonna walk through a bit of a demo

00:00:51,199 --> 00:00:55,010
so we want you to see some of the like

00:00:52,909 --> 00:00:56,479
real details of what security advisories

00:00:55,010 --> 00:00:58,760
it does and we're gonna give you like

00:00:56,479 --> 00:01:00,559
the overview of how you see it in action

00:00:58,760 --> 00:01:02,449
you can also follow along at home if you

00:01:00,559 --> 00:01:05,390
want we'll give you some instructions on

00:01:02,449 --> 00:01:07,130
that later so first let's start with

00:01:05,390 --> 00:01:09,320
some kind of common security processes

00:01:07,130 --> 00:01:11,780
so we talked to a number of different

00:01:09,320 --> 00:01:13,670
open source industry groups about how

00:01:11,780 --> 00:01:15,650
they handle vulnerabilities and what

00:01:13,670 --> 00:01:17,870
they do and we've been looking at this

00:01:15,650 --> 00:01:20,930
process kind of from the lens of the

00:01:17,870 --> 00:01:22,909
reporter on one aspect here which is up

00:01:20,930 --> 00:01:24,320
over there and then the maintainer on

00:01:22,909 --> 00:01:26,570
the other side so you're seeing like two

00:01:24,320 --> 00:01:29,090
personas and how they deal with this

00:01:26,570 --> 00:01:30,979
security vulnerability process

00:01:29,090 --> 00:01:32,990
so first let's imagine we have a

00:01:30,979 --> 00:01:35,390
researcher who found a vulnerability and

00:01:32,990 --> 00:01:37,039
they'd like to report it first step

00:01:35,390 --> 00:01:38,570
there as they need to find the

00:01:37,039 --> 00:01:41,240
repository they need to find the source

00:01:38,570 --> 00:01:42,799
code hopefully this is pretty easy from

00:01:41,240 --> 00:01:45,500
there what they need to do is understand

00:01:42,799 --> 00:01:47,649
how we report the security vulnerability

00:01:45,500 --> 00:01:50,289
how-do-you-do cloak like disclose this

00:01:47,649 --> 00:01:52,509
often this is like embedded in a readme

00:01:50,289 --> 00:01:55,130
this is somewhere in the docs

00:01:52,509 --> 00:01:56,479
whatever the security process is it's a

00:01:55,130 --> 00:01:59,030
little bit hidden at first sometimes

00:01:56,479 --> 00:02:01,670
because this isn't a common event for

00:01:59,030 --> 00:02:03,229
open source repositories to deal with so

00:02:01,670 --> 00:02:05,689
what we've done is we've created a new

00:02:03,229 --> 00:02:07,640
type of standard community file in order

00:02:05,689 --> 00:02:11,030
to help github projects maintain this

00:02:07,640 --> 00:02:12,620
and if you did the keynote this morning

00:02:11,030 --> 00:02:15,080
you might have heard about the security

00:02:12,620 --> 00:02:17,480
policy and you know the key aspects that

00:02:15,080 --> 00:02:20,150
we've done here are provide really good

00:02:17,480 --> 00:02:22,010
discoverability on the security policy

00:02:20,150 --> 00:02:24,740
we've we've added it to our new repo

00:02:22,010 --> 00:02:27,230
security tab and what we've done is make

00:02:24,740 --> 00:02:28,069
this also very easy for organizations to

00:02:27,230 --> 00:02:31,159
set

00:02:28,069 --> 00:02:34,310
once for all of their repos so we know

00:02:31,159 --> 00:02:36,260
that if you happen to be a CNA or happen

00:02:34,310 --> 00:02:38,299
to have your own security team

00:02:36,260 --> 00:02:39,829
you've probably got one process for

00:02:38,299 --> 00:02:42,500
everyone in the organization and you can

00:02:39,829 --> 00:02:46,909
set it once and be done but that's not

00:02:42,500 --> 00:02:49,189
all click yeah thank you

00:02:46,909 --> 00:02:51,140
we also wanted to make sure that we

00:02:49,189 --> 00:02:53,629
actually interrupt users when they're

00:02:51,140 --> 00:02:54,939
about to file an issue because one of

00:02:53,629 --> 00:02:58,159
the biggest problems that we've seen

00:02:54,939 --> 00:03:00,620
with security vulnerability reports is

00:02:58,159 --> 00:03:02,420
when people go and file a public issue

00:03:00,620 --> 00:03:03,920
as soon as you do that you've just

00:03:02,420 --> 00:03:06,919
released a zero-day onto the world

00:03:03,920 --> 00:03:08,840
congratulations and so now what happens

00:03:06,919 --> 00:03:12,319
is if you have a security policy in your

00:03:08,840 --> 00:03:14,120
repo will actually prompt you during the

00:03:12,319 --> 00:03:15,590
issue template selection to say if

00:03:14,120 --> 00:03:17,650
you're reporting a security

00:03:15,590 --> 00:03:23,000
vulnerability please read the policy and

00:03:17,650 --> 00:03:25,519
report it the right way okay so now in

00:03:23,000 --> 00:03:28,400
our process a researcher can use what is

00:03:25,519 --> 00:03:30,739
hopefully a private channel email or a

00:03:28,400 --> 00:03:32,959
mailing list whatever the project has

00:03:30,739 --> 00:03:35,000
disclosed as their processes for

00:03:32,959 --> 00:03:36,500
connecting with the maintainer x' from

00:03:35,000 --> 00:03:38,569
there usually the researcher once

00:03:36,500 --> 00:03:40,669
connected discusses the vulnerability

00:03:38,569 --> 00:03:42,650
that they found they're talking about

00:03:40,669 --> 00:03:45,139
version ranges they're talking about

00:03:42,650 --> 00:03:46,669
severity and then the maintainer often

00:03:45,139 --> 00:03:50,209
agrees okay this is a vulnerability

00:03:46,669 --> 00:03:51,859
we're gonna go ahead to the next step so

00:03:50,209 --> 00:03:54,709
now we kind of jump over to the

00:03:51,859 --> 00:03:56,239
maintainer perspective at this point the

00:03:54,709 --> 00:03:58,010
maintainer job here is to kind of

00:03:56,239 --> 00:04:00,560
coordinate with anyone else in the

00:03:58,010 --> 00:04:02,810
project so it could be other maintainer

00:04:00,560 --> 00:04:05,329
x' it could be if they have like a

00:04:02,810 --> 00:04:08,239
larger group has security advisors or

00:04:05,329 --> 00:04:09,680
like a security team that can help often

00:04:08,239 --> 00:04:12,439
the maintainer x' do this coordination

00:04:09,680 --> 00:04:16,549
in an issue and what we call a shadow

00:04:12,439 --> 00:04:19,699
repository so shadow repos are a private

00:04:16,549 --> 00:04:22,010
copy of an open source project that

00:04:19,699 --> 00:04:24,159
someone has cloned into another space so

00:04:22,010 --> 00:04:27,050
they can have a private space to discuss

00:04:24,159 --> 00:04:28,970
so they use this to work in private and

00:04:27,050 --> 00:04:31,099
trying to coordinate what's happening

00:04:28,970 --> 00:04:34,280
and what their plan is for fixing this

00:04:31,099 --> 00:04:35,750
vulnerability and you know the the big

00:04:34,280 --> 00:04:39,169
challenge that we get with these shadow

00:04:35,750 --> 00:04:41,610
repos is obviously other than the pain

00:04:39,169 --> 00:04:43,800
of just managing a separate repo

00:04:41,610 --> 00:04:46,319
see you can go hide from your public

00:04:43,800 --> 00:04:48,150
users and contributors you try and do

00:04:46,319 --> 00:04:50,460
things like that are clever

00:04:48,150 --> 00:04:52,590
so someone reported an issue to you

00:04:50,460 --> 00:04:55,289
maybe through your hacker one or your

00:04:52,590 --> 00:04:56,939
email address and you say I'm gonna

00:04:55,289 --> 00:04:59,370
bring that person in so they can help me

00:04:56,939 --> 00:05:01,199
validate this particular vulnerability

00:04:59,370 --> 00:05:04,080
and all the patches I've made for it

00:05:01,199 --> 00:05:06,870
great sounds good so far the challenge

00:05:04,080 --> 00:05:09,719
is after you finish that issue did you

00:05:06,870 --> 00:05:12,419
remember to delete them or did you just

00:05:09,719 --> 00:05:15,090
let somebody that's seeking bounties sit

00:05:12,419 --> 00:05:17,009
on your shadow repo with full access to

00:05:15,090 --> 00:05:19,139
all of the security patches that you

00:05:17,009 --> 00:05:21,509
mean to make that are not yet publicly

00:05:19,139 --> 00:05:24,240
disclosed it's a really common problem

00:05:21,509 --> 00:05:27,449
and we want to make sure that anything

00:05:24,240 --> 00:05:31,080
you do in this space we we make really

00:05:27,449 --> 00:05:33,690
easy to revoke and control next please

00:05:31,080 --> 00:05:35,819
so in the maintainer security advisories

00:05:33,690 --> 00:05:38,099
what we've done is we've defaulted the

00:05:35,819 --> 00:05:40,740
security set to the smallest set

00:05:38,099 --> 00:05:42,569
possible by default so when you come in

00:05:40,740 --> 00:05:44,310
with a new maintainer security advisory

00:05:42,569 --> 00:05:46,229
you start out just with your

00:05:44,310 --> 00:05:48,060
organisation owners and your repo admins

00:05:46,229 --> 00:05:51,539
we think those are the people that are

00:05:48,060 --> 00:05:52,770
most trusted for security fixes and if

00:05:51,539 --> 00:05:54,090
you have people you need to bring in

00:05:52,770 --> 00:05:57,389
whether it's part of your engineering

00:05:54,090 --> 00:05:59,639
team that aren't admins or if it's an

00:05:57,389 --> 00:06:02,190
outside collaborator one of your best

00:05:59,639 --> 00:06:03,870
users one of the security researchers

00:06:02,190 --> 00:06:07,229
you can bring them in and give them

00:06:03,870 --> 00:06:09,180
access just to this particular advisory

00:06:07,229 --> 00:06:11,819
and all of the collateral that goes with

00:06:09,180 --> 00:06:14,729
that and whenever you decide that you're

00:06:11,819 --> 00:06:19,169
done with that particular user you can

00:06:14,729 --> 00:06:21,900
remove them just as easily so the next

00:06:19,169 --> 00:06:24,240
step here maintainer is create pull

00:06:21,900 --> 00:06:25,650
requests to start generating these fixes

00:06:24,240 --> 00:06:26,550
they're working within a shadow

00:06:25,650 --> 00:06:28,469
repository

00:06:26,550 --> 00:06:30,300
they've coordinated understood the

00:06:28,469 --> 00:06:33,060
problem and now they're trying to make

00:06:30,300 --> 00:06:35,759
different branches fixes against those

00:06:33,060 --> 00:06:37,589
branches in order to finally publish

00:06:35,759 --> 00:06:40,139
something that it will actually address

00:06:37,589 --> 00:06:42,060
the vulnerability and if you've had to

00:06:40,139 --> 00:06:44,190
deal with this before you know just how

00:06:42,060 --> 00:06:47,699
painful it is right you're trying to

00:06:44,190 --> 00:06:50,219
target like five release branches you

00:06:47,699 --> 00:06:52,319
know your cordoning possibly several

00:06:50,219 --> 00:06:53,750
vulnerabilities at the same time the

00:06:52,319 --> 00:06:55,880
bigger your project the more like

00:06:53,750 --> 00:06:57,460
this is you know we talked to the folks

00:06:55,880 --> 00:07:00,860
from rails and they were telling us just

00:06:57,460 --> 00:07:02,960
how painful this is for them as they try

00:07:00,860 --> 00:07:05,030
and target multiple versions and deal

00:07:02,960 --> 00:07:08,450
with all of the combinations of

00:07:05,030 --> 00:07:11,240
permissions and permutations so we put

00:07:08,450 --> 00:07:13,790
together a space in the security

00:07:11,240 --> 00:07:14,030
vulnerability security advisory excuse

00:07:13,790 --> 00:07:16,610
me

00:07:14,030 --> 00:07:19,160
where you can create a temporary private

00:07:16,610 --> 00:07:22,040
Fork what this gives you is one repo

00:07:19,160 --> 00:07:24,140
that is directly associated with that

00:07:22,040 --> 00:07:26,600
advisory and you can put all of your

00:07:24,140 --> 00:07:29,330
patches there and merge them in one go

00:07:26,600 --> 00:07:30,950
let's a look at the next one so you can

00:07:29,330 --> 00:07:32,780
see after you've created your temporary

00:07:30,950 --> 00:07:35,180
private Fork this looks normal it looks

00:07:32,780 --> 00:07:37,550
like a normal repo and it is it's just

00:07:35,180 --> 00:07:39,200
locked down to that same user list that

00:07:37,550 --> 00:07:42,919
we talked about in the previous slides

00:07:39,200 --> 00:07:45,050
and you can go ahead next please thank

00:07:42,919 --> 00:07:47,360
you you can go ahead and tack on as many

00:07:45,050 --> 00:07:49,130
pull requests as you need to target all

00:07:47,360 --> 00:07:54,080
of the release assets that you care

00:07:49,130 --> 00:07:57,350
about well so what we're doing is trying

00:07:54,080 --> 00:07:59,990
to wrap up the entire security advisory

00:07:57,350 --> 00:08:01,340
system into one section one thing like

00:07:59,990 --> 00:08:03,800
one place where you can kind of view

00:08:01,340 --> 00:08:05,570
here's the discussion here are all the

00:08:03,800 --> 00:08:07,850
fixes we've been working on here the

00:08:05,570 --> 00:08:09,440
people we have access to because now

00:08:07,850 --> 00:08:11,060
you're at the stage where it's time to

00:08:09,440 --> 00:08:12,530
publish right it's time to reveal the

00:08:11,060 --> 00:08:15,470
work that you've been doing in private

00:08:12,530 --> 00:08:17,120
and make it public so here you're gonna

00:08:15,470 --> 00:08:19,130
merge changes into your public

00:08:17,120 --> 00:08:22,100
repository you're gonna publish packages

00:08:19,130 --> 00:08:24,169
you can often do this via CI so when the

00:08:22,100 --> 00:08:25,790
merge changes from your private work go

00:08:24,169 --> 00:08:27,650
out to the public repository you can

00:08:25,790 --> 00:08:30,200
trigger off a CI build which then

00:08:27,650 --> 00:08:32,210
publishes into whatever package registry

00:08:30,200 --> 00:08:34,070
system you're using and then you want to

00:08:32,210 --> 00:08:36,530
publish the CDE in the advisory and

00:08:34,070 --> 00:08:39,500
again here we we've implemented some

00:08:36,530 --> 00:08:40,789
stuff that will help you out yeah

00:08:39,500 --> 00:08:43,099
absolutely you know one of the things

00:08:40,789 --> 00:08:45,500
that we think is so important out of

00:08:43,099 --> 00:08:49,400
security advisories is the ability to

00:08:45,500 --> 00:08:51,950
alert downstream dependencies and so you

00:08:49,400 --> 00:08:53,750
know we put together a brief form most

00:08:51,950 --> 00:08:56,570
of the fields on this are completely

00:08:53,750 --> 00:08:58,370
optional just asking for some basic

00:08:56,570 --> 00:09:01,339
things that github can use to help

00:08:58,370 --> 00:09:03,380
codify this to target the right people

00:09:01,339 --> 00:09:05,530
with security alerts so we asked for

00:09:03,380 --> 00:09:06,819
affected versions and patched versions

00:09:05,530 --> 00:09:08,739
but very

00:09:06,819 --> 00:09:10,929
importantly we also really care about

00:09:08,739 --> 00:09:13,720
what package you're actually fixing if

00:09:10,929 --> 00:09:16,539
it's a package we know that many

00:09:13,720 --> 00:09:18,789
repositories have many packages I picked

00:09:16,539 --> 00:09:21,160
on rails earlier there are a mega mono

00:09:18,789 --> 00:09:23,079
repo that has like 10 or 12 packages

00:09:21,160 --> 00:09:24,369
that drop out of it and so it's

00:09:23,079 --> 00:09:28,179
important that you tell us what

00:09:24,369 --> 00:09:29,829
specifically you're fixing and then you

00:09:28,179 --> 00:09:32,619
know give your users as much information

00:09:29,829 --> 00:09:34,989
as they can to assess the impact of

00:09:32,619 --> 00:09:36,100
exactly what the vulnerability was we

00:09:34,989 --> 00:09:38,139
know not everyone's gonna patch

00:09:36,100 --> 00:09:40,419
immediately so you want to provide as

00:09:38,139 --> 00:09:42,850
much information as you can so people

00:09:40,419 --> 00:09:45,339
can make the determination on what's the

00:09:42,850 --> 00:09:47,799
right you know risk to reward on taking

00:09:45,339 --> 00:09:50,160
the patch now versus waiting until maybe

00:09:47,799 --> 00:09:52,299
they have a better time to release

00:09:50,160 --> 00:09:54,669
finally on here I want to mention we

00:09:52,299 --> 00:09:56,949
also would love for you to

00:09:54,669 --> 00:10:00,519
cross-reference with your CVEs so if

00:09:56,949 --> 00:10:02,589
you're a CNA or work with the CNA if you

00:10:00,519 --> 00:10:04,089
drop that in we will go ahead and link

00:10:02,589 --> 00:10:06,369
all those things together we won't

00:10:04,089 --> 00:10:09,160
double alert and so that'll really help

00:10:06,369 --> 00:10:13,169
with the alerting process downstream so

00:10:09,160 --> 00:10:15,789
your users don't see anything too noisy

00:10:13,169 --> 00:10:18,729
yeah all this data that you're filling

00:10:15,789 --> 00:10:20,319
out here this is what goes into security

00:10:18,729 --> 00:10:22,479
alerts so this is what users are gonna

00:10:20,319 --> 00:10:23,889
see when they get a security alert on

00:10:22,479 --> 00:10:25,899
the package that you've created an

00:10:23,889 --> 00:10:28,629
advisory for so we're really taking a

00:10:25,899 --> 00:10:30,879
lot of that like ability to alert your

00:10:28,629 --> 00:10:32,589
downstream users and kind of bringing it

00:10:30,879 --> 00:10:34,179
in-house so that maintain errs have that

00:10:32,589 --> 00:10:35,589
option and this is where you're filling

00:10:34,179 --> 00:10:38,589
out this information to say here's the

00:10:35,589 --> 00:10:40,269
full impact here is a recommended fix in

00:10:38,589 --> 00:10:44,679
order to reduce the kind of burden on

00:10:40,269 --> 00:10:47,799
downstream users so next up Justin here

00:10:44,679 --> 00:10:50,739
is gonna walk through a demo all right

00:10:47,799 --> 00:10:53,139
so I normally like to do these live we

00:10:50,739 --> 00:10:56,379
don't have the AV for that but what

00:10:53,139 --> 00:10:59,679
we're gonna do is I have baked a demo

00:10:56,379 --> 00:11:01,809
beforehand and if our folks in AV will

00:10:59,679 --> 00:11:03,759
play the video please we will walk

00:11:01,809 --> 00:11:08,859
through exactly all this I'll narrate

00:11:03,759 --> 00:11:10,179
live there we go it is alright so you

00:11:08,859 --> 00:11:11,350
know as we've talked about Security's

00:11:10,179 --> 00:11:12,459
really one of the biggest problems

00:11:11,350 --> 00:11:14,799
facing software today

00:11:12,459 --> 00:11:17,169
so I have a demo repo that we put

00:11:14,799 --> 00:11:20,019
together and github this is nothing

00:11:17,169 --> 00:11:20,900
special but I learned about a security

00:11:20,019 --> 00:11:23,360
vulnerability

00:11:20,900 --> 00:11:24,529
I have an eval in my HTML or my

00:11:23,360 --> 00:11:27,500
index.html

00:11:24,529 --> 00:11:28,760
it's a terrible move I know but at least

00:11:27,500 --> 00:11:31,250
I can now fix it

00:11:28,760 --> 00:11:34,070
right so I'm gonna go to the security

00:11:31,250 --> 00:11:36,830
tab and start by creating a new draft

00:11:34,070 --> 00:11:40,040
Advisory there are no tricks here this

00:11:36,830 --> 00:11:42,350
is one cut so you know if I'm being slow

00:11:40,040 --> 00:11:45,500
on the screen it's just because I talk

00:11:42,350 --> 00:11:46,790
too much so we're gonna type in some of

00:11:45,500 --> 00:11:49,190
the basic details and what you'll notice

00:11:46,790 --> 00:11:50,750
about this is it looks like an issue and

00:11:49,190 --> 00:11:52,520
that's deliberate we really want to make

00:11:50,750 --> 00:11:54,920
sure that when we're going through and

00:11:52,520 --> 00:11:57,080
creating these advisories we create the

00:11:54,920 --> 00:11:58,940
smallest amount of friction possible to

00:11:57,080 --> 00:12:00,770
get you started and working with the

00:11:58,940 --> 00:12:03,050
other collaborators on your repository

00:12:00,770 --> 00:12:05,420
we want to make sure that you get the

00:12:03,050 --> 00:12:13,580
conversation started so that you can get

00:12:05,420 --> 00:12:15,740
into the fix as fast as possible at this

00:12:13,580 --> 00:12:17,330
point we have a draft Advisory now I

00:12:15,740 --> 00:12:19,310
showed you earlier how you can add

00:12:17,330 --> 00:12:21,170
collaborators but you know in this case

00:12:19,310 --> 00:12:22,520
I think the best move is just to go

00:12:21,170 --> 00:12:24,920
straight to the patch I know where the

00:12:22,520 --> 00:12:26,690
bug is I know how to fix it so what I'll

00:12:24,920 --> 00:12:29,630
do is I'll go ahead and create a

00:12:26,690 --> 00:12:31,190
temporary private Fork on large repos

00:12:29,630 --> 00:12:33,380
this might take a couple minutes that

00:12:31,190 --> 00:12:35,390
you know we're actually creating a fork

00:12:33,380 --> 00:12:37,580
if it's a big repo it might take a

00:12:35,390 --> 00:12:40,029
minute this one's really small so this

00:12:37,580 --> 00:12:42,560
will not take us very long at all and

00:12:40,029 --> 00:12:50,680
you can see on the right-hand side there

00:12:42,560 --> 00:12:50,680
is the access list there we are

00:12:54,270 --> 00:12:59,100
okay so from here all we're gonna do is

00:12:56,910 --> 00:13:00,300
we're gonna open the repo and you could

00:12:59,100 --> 00:13:02,700
click on that link I didn't actually

00:13:00,300 --> 00:13:04,770
know that until a couple days ago so I

00:13:02,700 --> 00:13:06,570
copied and pasted and I'm just gonna go

00:13:04,770 --> 00:13:09,870
into the repo and make a change in index

00:13:06,570 --> 00:13:11,760
dot HTML so I mentioned there was an

00:13:09,870 --> 00:13:13,950
eval here you can see right there in the

00:13:11,760 --> 00:13:16,230
search text we have the eval statement

00:13:13,950 --> 00:13:18,330
that was clearly a terrible mistake that

00:13:16,230 --> 00:13:19,560
should have been removed earlier so

00:13:18,330 --> 00:13:24,240
we'll just go ahead and knock that out

00:13:19,560 --> 00:13:25,620
and create a pull request you know none

00:13:24,240 --> 00:13:27,870
of this should look weird this is all

00:13:25,620 --> 00:13:30,000
your normal process even though you're

00:13:27,870 --> 00:13:31,709
part of a security advisory here

00:13:30,000 --> 00:13:33,870
everything should feel really natural

00:13:31,709 --> 00:13:36,660
and like you don't have to bring a lot

00:13:33,870 --> 00:13:37,800
of extra knowledge or tools one thing

00:13:36,660 --> 00:13:40,610
that's really important here we don't

00:13:37,800 --> 00:13:43,740
run any CI and we don't run any tests at

00:13:40,610 --> 00:13:45,920
PR time and the reason for that is we

00:13:43,740 --> 00:13:48,300
don't want a risk disclosure of the

00:13:45,920 --> 00:13:50,220
vulnerability before you're ready to

00:13:48,300 --> 00:13:53,279
publish so once you have all of your

00:13:50,220 --> 00:13:57,750
patches ready then your your base repos

00:13:53,279 --> 00:13:59,610
CI can run all right so we have the the

00:13:57,750 --> 00:14:02,100
pull request ready and you can see that

00:13:59,610 --> 00:14:03,899
it's one click if I want to merge this

00:14:02,100 --> 00:14:06,089
and get it ready to go as Brian

00:14:03,899 --> 00:14:08,430
mentioned earlier we know a lot of repos

00:14:06,089 --> 00:14:12,000
have a continuous integration suite that

00:14:08,430 --> 00:14:14,850
may take minutes or hours or days to run

00:14:12,000 --> 00:14:17,459
we hope it's not days but we want to get

00:14:14,850 --> 00:14:19,740
you unblocked on getting the packages

00:14:17,459 --> 00:14:21,810
published if you have any assets like

00:14:19,740 --> 00:14:24,839
that we know that might take a while and

00:14:21,810 --> 00:14:27,000
so we'll just one click to merge the

00:14:24,839 --> 00:14:28,950
pull request and this will kick off all

00:14:27,000 --> 00:14:31,709
of the normal things that happen in the

00:14:28,950 --> 00:14:35,220
parent repo around taking those changes

00:14:31,709 --> 00:14:37,649
in and then as soon as I've done that

00:14:35,220 --> 00:14:39,329
I'm now ready to get on to the publish

00:14:37,649 --> 00:14:42,120
stage which is filling out that

00:14:39,329 --> 00:14:44,430
necessary metadata to help alert users

00:14:42,120 --> 00:14:46,470
as to what's happening now in this case

00:14:44,430 --> 00:14:48,870
there's no there's no package there's no

00:14:46,470 --> 00:14:51,149
library so all I really need to do is

00:14:48,870 --> 00:14:52,940
type in a version number I could go into

00:14:51,149 --> 00:14:55,829
more detail about some of the things

00:14:52,940 --> 00:14:57,630
around the impact but for the sake of

00:14:55,829 --> 00:15:00,120
expediency I'm just going to go ahead

00:14:57,630 --> 00:15:03,210
and publish and what happens when we

00:15:00,120 --> 00:15:05,160
finish this publish process

00:15:03,210 --> 00:15:07,230
when we hit the publish button this will

00:15:05,160 --> 00:15:08,970
immediately become public to all users

00:15:07,230 --> 00:15:10,890
in the repo so if you go to the security

00:15:08,970 --> 00:15:13,260
tab you'll be able to see any of the

00:15:10,890 --> 00:15:14,490
published advisories available there so

00:15:13,260 --> 00:15:16,290
regardless of whether you have

00:15:14,490 --> 00:15:18,780
downstream dependencies or not your

00:15:16,290 --> 00:15:20,250
users will have transparency into the

00:15:18,780 --> 00:15:27,600
security things that you've made the

00:15:20,250 --> 00:15:29,720
choice to fix so last button here is the

00:15:27,600 --> 00:15:32,730
publish button and we will press that

00:15:29,720 --> 00:15:37,680
one final comment that I want to make on

00:15:32,730 --> 00:15:39,630
this one is once you've published this

00:15:37,680 --> 00:15:41,580
goes into a review queue that we run at

00:15:39,630 --> 00:15:43,830
github and the key point that we're

00:15:41,580 --> 00:15:45,810
trying to make there is we want to make

00:15:43,830 --> 00:15:47,670
sure that anytime you use one of these

00:15:45,810 --> 00:15:49,380
advisories that we have all the right

00:15:47,670 --> 00:15:51,120
metadata and that we can target the

00:15:49,380 --> 00:15:52,680
alerts to the right people if we don't

00:15:51,120 --> 00:15:54,420
need to send alerts we certainly won't

00:15:52,680 --> 00:15:56,550
but we want to make sure we don't have

00:15:54,420 --> 00:15:57,690
duplication you know we talked about all

00:15:56,550 --> 00:16:00,840
the white source data that we're pulling

00:15:57,690 --> 00:16:03,690
in we do not want to have multiple

00:16:00,840 --> 00:16:06,570
alerts so we have individual engineers

00:16:03,690 --> 00:16:09,530
that evaluate each one of those alerts

00:16:06,570 --> 00:16:13,350
and make sure that we don't double alert

00:16:09,530 --> 00:16:15,690
with that five minutes in and we've gone

00:16:13,350 --> 00:16:18,870
through the entire process of creating a

00:16:15,690 --> 00:16:22,310
draft working on a patch merging the

00:16:18,870 --> 00:16:25,230
patch and publishing it back to github

00:16:22,310 --> 00:16:28,020
so yeah like we want to encourage you to

00:16:25,230 --> 00:16:31,470
actually try this out like security is a

00:16:28,020 --> 00:16:35,550
process you can create your own test

00:16:31,470 --> 00:16:38,730
repository you can then generate a fake

00:16:35,550 --> 00:16:42,170
package JSON file if you want and then

00:16:38,730 --> 00:16:44,340
go to your Security tab open up a draft

00:16:42,170 --> 00:16:46,440
security advisory and kind of run

00:16:44,340 --> 00:16:48,510
through this whole thing yourself don't

00:16:46,440 --> 00:16:52,260
publish it to us because we don't want

00:16:48,510 --> 00:16:54,480
those things you can you can try but

00:16:52,260 --> 00:16:56,550
like run through the whole process like

00:16:54,480 --> 00:16:58,050
test it out because when this actually

00:16:56,550 --> 00:17:00,180
happens when you actually get a

00:16:58,050 --> 00:17:02,550
vulnerability reported you want to have

00:17:00,180 --> 00:17:05,010
like seeing the whole process like have

00:17:02,550 --> 00:17:07,620
familiarity with it before that kind of

00:17:05,010 --> 00:17:10,550
Black Swan event happens to you or one

00:17:07,620 --> 00:17:13,520
of the projects you maintain absolutely

00:17:10,550 --> 00:17:16,279
next up we have

00:17:13,520 --> 00:17:17,720
we have a mic and we have some time for

00:17:16,279 --> 00:17:20,240
questions if we want to take some in the

00:17:17,720 --> 00:17:22,010
room but we want to also end a little

00:17:20,240 --> 00:17:24,169
early because I know some of the other

00:17:22,010 --> 00:17:26,059
sessions have been running late so let's

00:17:24,169 --> 00:17:28,549
just keep that in mind and our plan is

00:17:26,059 --> 00:17:30,980
to we're gonna come down front and kind

00:17:28,549 --> 00:17:33,500
of be available Justin and I will also

00:17:30,980 --> 00:17:36,080
be I'm pointing to wherever the ask

00:17:33,500 --> 00:17:37,250
github group is it's like down through

00:17:36,080 --> 00:17:38,809
the floor

00:17:37,250 --> 00:17:40,970
we'll also be down there to kind of

00:17:38,809 --> 00:17:42,740
field questions if you have questions or

00:17:40,970 --> 00:17:45,950
concerns you'd like to bring up we'd

00:17:42,740 --> 00:17:46,880
love to talk through those so any

00:17:45,950 --> 00:17:52,970
questions out there in the audience

00:17:46,880 --> 00:17:54,260
anyone want to come up all right it

00:17:52,970 --> 00:17:56,480
doesn't look like it it looks like an

00:17:54,260 --> 00:18:00,159
easy crowd oh we have a we've got a

00:17:56,480 --> 00:18:06,529
microphone right up here come run on up

00:18:00,159 --> 00:18:09,549
hi quick question how does it look okay

00:18:06,529 --> 00:18:12,110
how does it look the main repository

00:18:09,549 --> 00:18:14,210
after the pull request has been merged

00:18:12,110 --> 00:18:16,010
in the Advisory repository is it just

00:18:14,210 --> 00:18:18,740
like a comment or there is a pull

00:18:16,010 --> 00:18:22,039
request about it so it's a it ends up

00:18:18,740 --> 00:18:24,830
being a merge pull request so it's a lot

00:18:22,039 --> 00:18:27,770
like when you emerge from a fork so the

00:18:24,830 --> 00:18:30,590
pull request is visible also on the list

00:18:27,770 --> 00:18:32,539
of pull requesters on the main

00:18:30,590 --> 00:18:35,450
repository or not but the mean is

00:18:32,539 --> 00:18:37,549
because sometimes between tagging the

00:18:35,450 --> 00:18:39,500
repository with the release sure and

00:18:37,549 --> 00:18:42,169
merging up the requests and times it

00:18:39,500 --> 00:18:45,080
could take him at some time so yeah I'd

00:18:42,169 --> 00:18:46,370
have to double-check on that I'm not

00:18:45,080 --> 00:18:48,740
actually sure off the top of my head

00:18:46,370 --> 00:18:50,149
exactly what it looks like but it does

00:18:48,740 --> 00:18:51,440
go back to the the main repo and it's

00:18:50,149 --> 00:18:53,419
part of the commit tree and all of that

00:18:51,440 --> 00:18:55,779
so okay thank you

00:18:53,419 --> 00:18:55,779
of course

00:19:00,059 --> 00:19:08,190
all right last call for any other

00:19:02,999 --> 00:19:10,080
questions any hands no I just want to

00:19:08,190 --> 00:19:12,809
finish by saying thank you everyone in

00:19:10,080 --> 00:19:14,070
the community for caring about this you

00:19:12,809 --> 00:19:17,580
know one of the things that we really

00:19:14,070 --> 00:19:20,159
hope to do with this tool is help make

00:19:17,580 --> 00:19:22,349
it easier for all of you to disclose and

00:19:20,159 --> 00:19:25,649
fix your security vulnerabilities in the

00:19:22,349 --> 00:19:28,799
right way because ultimately you know

00:19:25,649 --> 00:19:31,320
software runs on trust and you know NAT

00:19:28,799 --> 00:19:35,029
showed this morning the data that we

00:19:31,320 --> 00:19:36,839
have about exactly you know how many

00:19:35,029 --> 00:19:38,999
contributors you have how many

00:19:36,839 --> 00:19:42,059
open-source dependencies everyone has

00:19:38,999 --> 00:19:44,849
and you know security relies on all of

00:19:42,059 --> 00:19:46,289
us we're all security engineers and we

00:19:44,849 --> 00:19:48,509
all have to take responsibility for

00:19:46,289 --> 00:19:50,279
doing disclosure and patching in the

00:19:48,509 --> 00:19:52,080
right way so we hope these tools will

00:19:50,279 --> 00:19:54,330
help you and we appreciate everybody's

00:19:52,080 --> 00:19:56,399
attention to this problem because it's

00:19:54,330 --> 00:19:59,239
it's super amazing to see this kind of

00:19:56,399 --> 00:20:02,609
turnout thank you and reach out to us

00:19:59,239 --> 00:20:04,919
either if you want to work on this

00:20:02,609 --> 00:20:07,679
advisories if you want improvements or

00:20:04,919 --> 00:20:09,809
changes connect with us however you can

00:20:07,679 --> 00:20:11,700
if you have a vulnerability that's being

00:20:09,809 --> 00:20:13,889
reported and you're actively working in

00:20:11,700 --> 00:20:15,989
a security advisory also reach out we

00:20:13,889 --> 00:20:19,379
can be you can use the collaborators

00:20:15,989 --> 00:20:20,879
list to add us add people from our team

00:20:19,379 --> 00:20:22,979
into there to help you out like this

00:20:20,879 --> 00:20:24,779
this shouldn't be a thing that you do

00:20:22,979 --> 00:20:26,700
alone just like NAT said in the keynote

00:20:24,779 --> 00:20:29,489
right this this isn't a solitary

00:20:26,700 --> 00:20:30,929
activity this is a team sport and we

00:20:29,489 --> 00:20:32,700
want to get better at this as we move

00:20:30,929 --> 00:20:34,220
along so thank you very much everyone

00:20:32,700 --> 00:20:36,630
really appreciate your time

00:20:34,220 --> 00:20:39,620
[Applause]

00:20:36,630 --> 00:20:41,680
[Music]

00:20:39,620 --> 00:20:41,680
you

00:20:41,940 --> 00:20:45,640

YouTube URL: https://www.youtube.com/watch?v=T9QCKPoaQJ0


