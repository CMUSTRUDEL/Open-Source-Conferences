Title: GitHub Satellite India 2021 - What's new with GitHub Actions
Publication date: 2021-03-28
Playlist: GitHub Satellite India 2021 - DevOps: Day 1
Description: 
	Presented by Chris Patterson, Staff Product Manager @ GitHub

Since its release, GitHub Actions has seen massive adoption by open source projects, teams, and organizations looking to automate their software workflows. Improvements and new features are continuously being shipped to help better serve the needs of developers worldwide. In this session, Chris Patterson, the Staff Product Manager at GitHub, will walk you through some of the newer features of GitHub Actions that can help you better automate your workflows. He'll also share insights on how Actions is being used worldwide, and give you a peek at whatâ€™s on the roadmap for the future!

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:04,400 --> 00:00:08,000
um

00:00:06,080 --> 00:00:09,679
thank you so much davian mohit for that

00:00:08,000 --> 00:00:12,480
very kind introduction

00:00:09,679 --> 00:00:15,280
as i say my name is chris patterson i am

00:00:12,480 --> 00:00:17,680
a staff program manager here at github

00:00:15,280 --> 00:00:19,439
and today i am coming with you coming to

00:00:17,680 --> 00:00:20,640
you from kerry north carolina in the

00:00:19,439 --> 00:00:22,720
united states

00:00:20,640 --> 00:00:24,400
um and we're going to give kind of a

00:00:22,720 --> 00:00:25,760
tour of some of the new things that we

00:00:24,400 --> 00:00:27,920
have been working on

00:00:25,760 --> 00:00:29,519
with github actions over the past

00:00:27,920 --> 00:00:32,320
several months

00:00:29,519 --> 00:00:33,520
but before we do that i do want to give

00:00:32,320 --> 00:00:35,360
a big shout out to

00:00:33,520 --> 00:00:37,760
a bunch of my colleagues in india who

00:00:35,360 --> 00:00:40,320
i've worked with for almost 15 years

00:00:37,760 --> 00:00:42,879
i'm incredibly excited that github is

00:00:40,320 --> 00:00:44,480
now in india and that i'm able to

00:00:42,879 --> 00:00:47,039
work with the developer community there

00:00:44,480 --> 00:00:50,000
more than all we have here's some photos

00:00:47,039 --> 00:00:50,640
of me during several of my trips uh to

00:00:50,000 --> 00:00:52,399
india

00:00:50,640 --> 00:00:54,399
uh hyderabad has been the primary

00:00:52,399 --> 00:00:55,440
location so i've got gokanda and i've

00:00:54,399 --> 00:00:57,920
even driven

00:00:55,440 --> 00:00:59,920
um in india one of my colleagues uh

00:00:57,920 --> 00:01:02,320
loaned me his car and that was a quite

00:00:59,920 --> 00:01:05,119
an exciting experience

00:01:02,320 --> 00:01:07,520
but enough about me let's go on to talk

00:01:05,119 --> 00:01:10,960
more about actions

00:01:07,520 --> 00:01:12,080
so today i want to cover four different

00:01:10,960 --> 00:01:14,159
areas

00:01:12,080 --> 00:01:15,119
that we have been working on in github

00:01:14,159 --> 00:01:17,520
actions

00:01:15,119 --> 00:01:18,640
uh to help improve things and for a

00:01:17,520 --> 00:01:20,720
number of different

00:01:18,640 --> 00:01:21,759
places so we're talking about continuous

00:01:20,720 --> 00:01:23,840
delivery

00:01:21,759 --> 00:01:25,200
uh we shipped a bunch of new features

00:01:23,840 --> 00:01:27,520
about continuous delivery

00:01:25,200 --> 00:01:29,840
at universe we've made some enhancements

00:01:27,520 --> 00:01:31,680
since then and really been working to

00:01:29,840 --> 00:01:33,600
take the feedback from the community and

00:01:31,680 --> 00:01:36,240
improve those things

00:01:33,600 --> 00:01:37,759
we've been working very hard on making

00:01:36,240 --> 00:01:40,560
actions more secure and

00:01:37,759 --> 00:01:42,000
this is a big focus of mine personally

00:01:40,560 --> 00:01:44,079
actually and if you think about things

00:01:42,000 --> 00:01:46,240
like the recent solarwinds issues

00:01:44,079 --> 00:01:47,119
where you know ci can absolutely be a

00:01:46,240 --> 00:01:49,520
potential

00:01:47,119 --> 00:01:50,720
uh place where security can you know you

00:01:49,520 --> 00:01:52,159
can create security holes in your

00:01:50,720 --> 00:01:53,759
software development infrastructure

00:01:52,159 --> 00:01:56,079
github actions being secure is

00:01:53,759 --> 00:01:58,719
incredibly important

00:01:56,079 --> 00:01:59,759
enterprise as erica mentioned in the

00:01:58,719 --> 00:02:02,399
keynote

00:01:59,759 --> 00:02:03,600
enterprise server has got a very

00:02:02,399 --> 00:02:06,000
important place

00:02:03,600 --> 00:02:06,719
uh in the overall portfolio github and

00:02:06,000 --> 00:02:10,479
we've just seen

00:02:06,719 --> 00:02:12,400
huge adoption of it over the past year

00:02:10,479 --> 00:02:13,599
and one of the key features that a lot

00:02:12,400 --> 00:02:15,120
of our customers on

00:02:13,599 --> 00:02:17,040
enterprise server have been waiting for

00:02:15,120 --> 00:02:17,680
is github actions and it's it's finally

00:02:17,040 --> 00:02:20,959
here

00:02:17,680 --> 00:02:23,599
and then finally scale on github.com

00:02:20,959 --> 00:02:26,000
in our cloud we have hundreds of

00:02:23,599 --> 00:02:27,920
thousands of repos that rely on actions

00:02:26,000 --> 00:02:29,440
every day and we need to make sure we

00:02:27,920 --> 00:02:32,160
can scale to

00:02:29,440 --> 00:02:34,720
reach to to provide all of the necessary

00:02:32,160 --> 00:02:34,720
resources

00:02:34,800 --> 00:02:38,080
so a little bit about actions and how

00:02:37,200 --> 00:02:40,480
it's grown

00:02:38,080 --> 00:02:42,160
uh github actions is just a bit over a

00:02:40,480 --> 00:02:44,480
year old at this point

00:02:42,160 --> 00:02:45,440
um and from a perspective of the

00:02:44,480 --> 00:02:47,599
community

00:02:45,440 --> 00:02:48,560
embracing it it's just been absolutely

00:02:47,599 --> 00:02:50,560
incredible

00:02:48,560 --> 00:02:52,400
in the marketplace there's about seven

00:02:50,560 --> 00:02:54,160
thousand or a little more than seven

00:02:52,400 --> 00:02:56,400
thousand available different actions you

00:02:54,160 --> 00:02:59,280
can use in your github actions workflows

00:02:56,400 --> 00:02:59,680
and if i look across github.com it only

00:02:59,280 --> 00:03:02,560
not

00:02:59,680 --> 00:03:04,400
at um all of the actions that are used

00:03:02,560 --> 00:03:06,959
kind of on a monthly basis it's really

00:03:04,400 --> 00:03:08,720
closer to about 15 000 different

00:03:06,959 --> 00:03:10,080
actions used in workflows and so that

00:03:08,720 --> 00:03:10,959
means there's a lot of people who are

00:03:10,080 --> 00:03:12,959
using them

00:03:10,959 --> 00:03:15,440
uh just within their own organizations

00:03:12,959 --> 00:03:17,920
and that's incredible to see

00:03:15,440 --> 00:03:18,480
from a scale perspective you know the

00:03:17,920 --> 00:03:21,680
growth

00:03:18,480 --> 00:03:23,840
is just skyrocketing we're now just in

00:03:21,680 --> 00:03:25,920
the github.com cloud this this only

00:03:23,840 --> 00:03:28,720
includes the runners that we host

00:03:25,920 --> 00:03:30,879
more than 125 million jobs a month and

00:03:28,720 --> 00:03:33,040
growing at an astounding rate

00:03:30,879 --> 00:03:34,239
and all of that in the community has

00:03:33,040 --> 00:03:37,120
really brought us to be

00:03:34,239 --> 00:03:38,159
the number one ci platform on github in

00:03:37,120 --> 00:03:40,080
just over a year

00:03:38,159 --> 00:03:41,760
and it's incredible and we're incredibly

00:03:40,080 --> 00:03:45,519
honored to have you guys

00:03:41,760 --> 00:03:46,480
as part of that now get up enterprise

00:03:45,519 --> 00:03:49,360
server

00:03:46,480 --> 00:03:51,040
um actions is generally available on

00:03:49,360 --> 00:03:52,720
github enterprise server three

00:03:51,040 --> 00:03:54,400
you can set up your enterprise server

00:03:52,720 --> 00:03:55,439
you can configure actions you can run

00:03:54,400 --> 00:03:58,239
workflows

00:03:55,439 --> 00:04:00,159
you can use actions in your workflows

00:03:58,239 --> 00:04:01,760
locally in your server as well as

00:04:00,159 --> 00:04:03,439
through github connect you can take

00:04:01,760 --> 00:04:04,319
advantage of that incredible actions

00:04:03,439 --> 00:04:06,720
community

00:04:04,319 --> 00:04:07,519
that i just talked about so we've really

00:04:06,720 --> 00:04:09,439
enabled

00:04:07,519 --> 00:04:13,120
github enterprise server to reach out

00:04:09,439 --> 00:04:13,120
and take advantage of the cloud

00:04:13,680 --> 00:04:18,400
now the next thing i want to talk about

00:04:15,599 --> 00:04:20,799
is continuous delivery

00:04:18,400 --> 00:04:22,240
so when we started down this journey

00:04:20,799 --> 00:04:24,080
everybody said well i you know github

00:04:22,240 --> 00:04:25,919
actions is an automation platform i can

00:04:24,080 --> 00:04:29,440
do continuous delivery with it today

00:04:25,919 --> 00:04:30,880
and of course you can but um

00:04:29,440 --> 00:04:32,560
the thing that we wanted to do is make

00:04:30,880 --> 00:04:33,440
sure that you could do continuous

00:04:32,560 --> 00:04:36,240
delivery

00:04:33,440 --> 00:04:37,520
in a way uh that was more secure that

00:04:36,240 --> 00:04:39,040
could be better that had

00:04:37,520 --> 00:04:40,560
some of the core capabilities that

00:04:39,040 --> 00:04:42,880
people expect

00:04:40,560 --> 00:04:45,120
uh things like you know manual approvals

00:04:42,880 --> 00:04:48,800
and and other kinds of rules

00:04:45,120 --> 00:04:50,880
and so as part of the conversation today

00:04:48,800 --> 00:04:51,840
i want to talk about sort of five-ish

00:04:50,880 --> 00:04:54,000
new uh

00:04:51,840 --> 00:04:56,000
capabilities some we've talked a little

00:04:54,000 --> 00:04:58,639
bit about at universe some are new

00:04:56,000 --> 00:05:00,479
uh since then that we're bringing in the

00:04:58,639 --> 00:05:03,440
overall space around

00:05:00,479 --> 00:05:05,840
uh continuous delivery devops security

00:05:03,440 --> 00:05:08,160
for github actions

00:05:05,840 --> 00:05:09,840
so the first one was just the simple i

00:05:08,160 --> 00:05:11,520
want to be able to visualize and see

00:05:09,840 --> 00:05:13,600
what's going on in my workflows

00:05:11,520 --> 00:05:14,960
and this is a feature we did ship at

00:05:13,600 --> 00:05:16,240
universe so we've enhanced it quite a

00:05:14,960 --> 00:05:18,800
bit since then to

00:05:16,240 --> 00:05:19,360
improve the performance and um add a few

00:05:18,800 --> 00:05:21,840
little more

00:05:19,360 --> 00:05:22,960
tweaks to it to make it better but it's

00:05:21,840 --> 00:05:24,400
great to be able to see

00:05:22,960 --> 00:05:25,759
how your workflow is progressing

00:05:24,400 --> 00:05:27,280
particularly if you have a complex

00:05:25,759 --> 00:05:29,759
deployment pipeline or

00:05:27,280 --> 00:05:31,600
a large matrix to help understand what's

00:05:29,759 --> 00:05:33,919
left what's going on

00:05:31,600 --> 00:05:37,039
it's just a great addition to the

00:05:33,919 --> 00:05:39,440
overall experience

00:05:37,039 --> 00:05:41,600
the second area to talk about is the

00:05:39,440 --> 00:05:42,880
environment protection rules

00:05:41,600 --> 00:05:44,479
whenever you've got a continuous

00:05:42,880 --> 00:05:46,000
delivery workflow that's deployed into

00:05:44,479 --> 00:05:47,520
say a production environment

00:05:46,000 --> 00:05:49,280
it can be important for a lot of

00:05:47,520 --> 00:05:50,479
organizations to make sure there's two

00:05:49,280 --> 00:05:52,240
sets of eyes

00:05:50,479 --> 00:05:53,600
uh who are approving these things so

00:05:52,240 --> 00:05:54,800
there's the developer that approved the

00:05:53,600 --> 00:05:57,520
source code

00:05:54,800 --> 00:05:58,800
and then there is some other person a

00:05:57,520 --> 00:06:01,199
release manager

00:05:58,800 --> 00:06:02,720
engineer somebody who says it's okay to

00:06:01,199 --> 00:06:05,199
deploy to production

00:06:02,720 --> 00:06:06,960
um with the environment protection rules

00:06:05,199 --> 00:06:08,960
we've we started out with just two and

00:06:06,960 --> 00:06:11,039
we've actually added one since then

00:06:08,960 --> 00:06:12,720
and over time we plan to make this an

00:06:11,039 --> 00:06:14,479
extensibility point

00:06:12,720 --> 00:06:16,639
to enable you to plug in your own

00:06:14,479 --> 00:06:19,520
systems to allow you to control

00:06:16,639 --> 00:06:21,680
when things deploy the main protection

00:06:19,520 --> 00:06:23,840
rules are this required reviewers

00:06:21,680 --> 00:06:24,800
uh rule that basically says that

00:06:23,840 --> 00:06:27,600
somebody within

00:06:24,800 --> 00:06:29,120
a team or an individual has to approve a

00:06:27,600 --> 00:06:30,479
job before it goes through

00:06:29,120 --> 00:06:32,160
and then we'll talk a little bit more

00:06:30,479 --> 00:06:35,759
through the demo about exactly what

00:06:32,160 --> 00:06:39,680
happens at that point

00:06:35,759 --> 00:06:40,560
secrets um github actions has had

00:06:39,680 --> 00:06:43,600
secrets since

00:06:40,560 --> 00:06:44,960
it first launched but those secrets were

00:06:43,600 --> 00:06:46,880
bound to the repository in the

00:06:44,960 --> 00:06:48,000
repository only and that meant that any

00:06:46,880 --> 00:06:50,160
workflow

00:06:48,000 --> 00:06:52,400
in that repository could just reference

00:06:50,160 --> 00:06:54,240
a secret and get that value

00:06:52,400 --> 00:06:55,759
and obviously that works fine for a

00:06:54,240 --> 00:06:57,280
number of scenarios but in something

00:06:55,759 --> 00:07:00,560
like a production deployment

00:06:57,280 --> 00:07:02,319
it's just not sufficient so we wanted

00:07:00,560 --> 00:07:03,520
the ability to scope these secrets to an

00:07:02,319 --> 00:07:05,840
environment so we introduced

00:07:03,520 --> 00:07:07,520
environment specific secrets and those

00:07:05,840 --> 00:07:09,680
work by

00:07:07,520 --> 00:07:11,840
making sure that whenever uh github

00:07:09,680 --> 00:07:13,120
actions workflow runs and references an

00:07:11,840 --> 00:07:15,440
environment

00:07:13,120 --> 00:07:17,360
the protection rules have to pass before

00:07:15,440 --> 00:07:18,880
that job starts and before it gets

00:07:17,360 --> 00:07:19,759
access to the secrets and so you could

00:07:18,880 --> 00:07:21,599
have

00:07:19,759 --> 00:07:24,000
a secret called deploy key that is

00:07:21,599 --> 00:07:26,560
scoped to say the repository that

00:07:24,000 --> 00:07:28,560
the development environment can use and

00:07:26,560 --> 00:07:29,440
then another secret that's the same name

00:07:28,560 --> 00:07:32,240
so you don't have to change your

00:07:29,440 --> 00:07:33,440
workflow but has a different value that

00:07:32,240 --> 00:07:37,919
is protected by

00:07:33,440 --> 00:07:37,919
the protection rules for production

00:07:39,759 --> 00:07:44,400
it's always important to know what has

00:07:42,319 --> 00:07:46,000
been deployed where and

00:07:44,400 --> 00:07:48,240
this is one of these capabilities that

00:07:46,000 --> 00:07:49,840
github has actually had for a long time

00:07:48,240 --> 00:07:51,039
if you're very familiar with github you

00:07:49,840 --> 00:07:52,400
might know there's this thing called the

00:07:51,039 --> 00:07:54,960
deployments api

00:07:52,400 --> 00:07:56,560
and that really shows you a list of the

00:07:54,960 --> 00:07:58,240
activity of deployments to different

00:07:56,560 --> 00:07:59,360
environments and can tell you exactly

00:07:58,240 --> 00:08:00,960
which commit

00:07:59,360 --> 00:08:03,599
has been deployed to a particular

00:08:00,960 --> 00:08:05,919
environment and so as part of our

00:08:03,599 --> 00:08:07,919
goal to really build actions and build

00:08:05,919 --> 00:08:09,759
it deeply integrated into github

00:08:07,919 --> 00:08:11,280
we instead of creating something new to

00:08:09,759 --> 00:08:12,720
track your deployments actions just

00:08:11,280 --> 00:08:14,080
plugs right into this

00:08:12,720 --> 00:08:15,440
and this is also nice because it's

00:08:14,080 --> 00:08:17,520
another place that's extensible in

00:08:15,440 --> 00:08:19,199
github or even third parties

00:08:17,520 --> 00:08:21,199
and we'll look at how actions plugs into

00:08:19,199 --> 00:08:22,160
the deployment api to give you that

00:08:21,199 --> 00:08:26,000
strong

00:08:22,160 --> 00:08:28,800
element of history and finally

00:08:26,000 --> 00:08:30,560
security features uh this is a actually

00:08:28,800 --> 00:08:32,880
a preview of a feature that hasn't quite

00:08:30,560 --> 00:08:35,360
shipped yet but will be shipping soon

00:08:32,880 --> 00:08:36,320
um we've done a bunch of work in github

00:08:35,360 --> 00:08:38,320
actions to

00:08:36,320 --> 00:08:39,360
improve security we've done some blog

00:08:38,320 --> 00:08:40,719
posts we've done a bunch of

00:08:39,360 --> 00:08:42,800
documentation

00:08:40,719 --> 00:08:44,480
uh we've made some changes to the way we

00:08:42,800 --> 00:08:46,080
process environment variables and things

00:08:44,480 --> 00:08:47,440
and they're continuing to

00:08:46,080 --> 00:08:49,279
work with the security security

00:08:47,440 --> 00:08:51,920
community both at github

00:08:49,279 --> 00:08:54,640
and out in other security researchers to

00:08:51,920 --> 00:08:56,560
find and fix any issues one of the core

00:08:54,640 --> 00:08:57,519
tenets of security obviously is least

00:08:56,560 --> 00:08:59,760
access

00:08:57,519 --> 00:09:01,200
and by default when github action

00:08:59,760 --> 00:09:03,200
shipped it had

00:09:01,200 --> 00:09:05,440
this secret called github token which is

00:09:03,200 --> 00:09:07,600
really just a github apps token

00:09:05,440 --> 00:09:09,040
and it had pretty broad permissions

00:09:07,600 --> 00:09:10,480
within the repo it could read and write

00:09:09,040 --> 00:09:12,000
source code read and write issues pull

00:09:10,480 --> 00:09:15,360
requests etc

00:09:12,000 --> 00:09:17,600
and it works well in a lot of cases but

00:09:15,360 --> 00:09:19,519
you know because github actions is such

00:09:17,600 --> 00:09:20,720
so much of an automation platform

00:09:19,519 --> 00:09:22,720
there's lots of different kinds of

00:09:20,720 --> 00:09:23,680
things people do like this example of a

00:09:22,720 --> 00:09:25,920
cleanup pr

00:09:23,680 --> 00:09:27,440
or i've got a workflow that just looks

00:09:25,920 --> 00:09:30,160
at issue comments and

00:09:27,440 --> 00:09:31,760
does some processing in those cases i

00:09:30,160 --> 00:09:33,519
don't need those broad permissions i

00:09:31,760 --> 00:09:35,120
really want to have a very narrow set of

00:09:33,519 --> 00:09:36,800
permissions and so we're introducing a

00:09:35,120 --> 00:09:38,240
new permissions block

00:09:36,800 --> 00:09:40,240
which is actually available at the

00:09:38,240 --> 00:09:42,800
workflow level and the job level

00:09:40,240 --> 00:09:43,519
and you can go in and change the

00:09:42,800 --> 00:09:45,360
permissions

00:09:43,519 --> 00:09:47,120
for this particular workflow and so in

00:09:45,360 --> 00:09:48,640
this example i've got just contents read

00:09:47,120 --> 00:09:50,480
so all i can do is read the source i

00:09:48,640 --> 00:09:51,920
can't write the source and having the

00:09:50,480 --> 00:09:54,000
ability to control that

00:09:51,920 --> 00:09:55,600
with uh give you least access we think

00:09:54,000 --> 00:09:58,720
is going to be

00:09:55,600 --> 00:10:00,480
very valuable and just continue to help

00:09:58,720 --> 00:10:02,560
improve the security of github actions

00:10:00,480 --> 00:10:04,480
in the future

00:10:02,560 --> 00:10:06,399
so what i want to do is walk you through

00:10:04,480 --> 00:10:08,800
a demo of how some of these things come

00:10:06,399 --> 00:10:08,800
together

00:10:09,120 --> 00:10:12,720
so i'm going to switch over to a repo

00:10:10,720 --> 00:10:14,560
here which is a popular

00:10:12,720 --> 00:10:16,079
github repos by language it's a pretty

00:10:14,560 --> 00:10:17,760
simple application

00:10:16,079 --> 00:10:19,120
that basically just looks at all the

00:10:17,760 --> 00:10:21,600
github repos and

00:10:19,120 --> 00:10:23,680
lets you sort them by language and in

00:10:21,600 --> 00:10:26,240
this particular case

00:10:23,680 --> 00:10:27,760
i've got um a couple of different

00:10:26,240 --> 00:10:30,320
workflows set up to do

00:10:27,760 --> 00:10:30,959
some different things for me so to get

00:10:30,320 --> 00:10:33,200
started

00:10:30,959 --> 00:10:34,160
i'm gonna go add a new feature or a new

00:10:33,200 --> 00:10:37,600
language

00:10:34,160 --> 00:10:39,279
simply go into my code pull this up

00:10:37,600 --> 00:10:43,040
i'm gonna edit this and i'm just gonna

00:10:39,279 --> 00:10:43,040
add i don't know let's go with ruby

00:10:43,680 --> 00:10:50,560
so really simple ad ruby go down

00:10:47,600 --> 00:10:52,640
we'll create a branch for it call it

00:10:50,560 --> 00:10:57,680
chris pat patch three that's fine

00:10:52,640 --> 00:10:59,120
adding ruby and propose this change

00:10:57,680 --> 00:11:02,079
get presented with our normal pull

00:10:59,120 --> 00:11:04,160
request dialog create that pull request

00:11:02,079 --> 00:11:05,200
and wait for actions to kick off and

00:11:04,160 --> 00:11:06,720
then

00:11:05,200 --> 00:11:09,920
in a couple of seconds here we should

00:11:06,720 --> 00:11:11,600
see uh actions jobs kicking off to start

00:11:09,920 --> 00:11:13,120
working through the various workflows

00:11:11,600 --> 00:11:14,320
various parts of my workflow and so the

00:11:13,120 --> 00:11:16,079
first thing it's going to do is go build

00:11:14,320 --> 00:11:17,760
this pull request

00:11:16,079 --> 00:11:18,880
and let's go take a look at while we're

00:11:17,760 --> 00:11:20,480
waiting for that to build we're going to

00:11:18,880 --> 00:11:22,079
take a look at what this workflow is

00:11:20,480 --> 00:11:23,360
doing

00:11:22,079 --> 00:11:26,079
so in this case i've got a couple of

00:11:23,360 --> 00:11:28,160
different workflows i've got my deploy

00:11:26,079 --> 00:11:30,079
and we can see it's triggered off a pull

00:11:28,160 --> 00:11:32,240
request when it's targeting main

00:11:30,079 --> 00:11:34,000
it is uh triggered off or triggered off

00:11:32,240 --> 00:11:35,440
a push for main it does a couple of

00:11:34,000 --> 00:11:36,160
different things so i've got a build job

00:11:35,440 --> 00:11:39,120
here

00:11:36,160 --> 00:11:41,200
checks out sets up node um using our

00:11:39,120 --> 00:11:44,480
caching capability it caches the node

00:11:41,200 --> 00:11:46,640
modules which should speed things up

00:11:44,480 --> 00:11:48,880
and then uses a couple of different

00:11:46,640 --> 00:11:50,720
other actions which are really great so

00:11:48,880 --> 00:11:52,639
we had a basic script one but the ones i

00:11:50,720 --> 00:11:55,360
want to call attention to here are

00:11:52,639 --> 00:11:57,120
these docker login and the docker of the

00:11:55,360 --> 00:11:59,040
setup build x docker login and then the

00:11:57,120 --> 00:12:02,079
docker build and push action

00:11:59,040 --> 00:12:04,160
um these are built by docker uh in

00:12:02,079 --> 00:12:05,600
concert with uh with github we worked

00:12:04,160 --> 00:12:08,800
with them on it and they are just

00:12:05,600 --> 00:12:10,240
a great example of a partner who's taken

00:12:08,800 --> 00:12:12,480
the power of github actions and built

00:12:10,240 --> 00:12:14,399
some great core functionality

00:12:12,480 --> 00:12:17,360
and made it available for the community

00:12:14,399 --> 00:12:19,440
that we like to rely on

00:12:17,360 --> 00:12:21,279
now in this next job i've got this

00:12:19,440 --> 00:12:22,560
deploy to review environment so what

00:12:21,279 --> 00:12:25,360
this does is

00:12:22,560 --> 00:12:26,800
it creates a review of my app so it

00:12:25,360 --> 00:12:30,000
creates a unique

00:12:26,800 --> 00:12:31,279
website with a new unique url for my app

00:12:30,000 --> 00:12:32,880
in the review lab

00:12:31,279 --> 00:12:34,320
and i can see it only runs on pull

00:12:32,880 --> 00:12:35,680
requests so i'm using the power of

00:12:34,320 --> 00:12:37,600
github actions and the conditional

00:12:35,680 --> 00:12:39,839
syntax there

00:12:37,600 --> 00:12:40,800
and i can also see that i'm taking

00:12:39,839 --> 00:12:42,480
advantage of

00:12:40,800 --> 00:12:44,720
one of the core capabilities of actions

00:12:42,480 --> 00:12:47,760
of having them output information

00:12:44,720 --> 00:12:50,720
so we see this other action that is from

00:12:47,760 --> 00:12:52,800
azure another one of our partners and it

00:12:50,720 --> 00:12:54,160
knows how to deploy to azure web apps

00:12:52,800 --> 00:12:55,760
and what it does is it takes the

00:12:54,160 --> 00:12:57,360
container in this case that i built

00:12:55,760 --> 00:12:58,240
deploys to azure web apps and outputs

00:12:57,360 --> 00:13:00,800
the url

00:12:58,240 --> 00:13:02,000
and lets me bind it directly in here and

00:13:00,800 --> 00:13:05,120
we'll show how that

00:13:02,000 --> 00:13:05,760
pulls together some core traceability so

00:13:05,120 --> 00:13:08,399
we go back

00:13:05,760 --> 00:13:09,600
and take a look at our actions workflow

00:13:08,399 --> 00:13:11,519
we should see

00:13:09,600 --> 00:13:13,920
that it's moving along so we can see

00:13:11,519 --> 00:13:15,519
that deployed review is started

00:13:13,920 --> 00:13:18,000
and as one of these nice features in the

00:13:15,519 --> 00:13:19,120
visualization i can see the progress

00:13:18,000 --> 00:13:21,200
it's made

00:13:19,120 --> 00:13:23,600
but i can also see right here in my

00:13:21,200 --> 00:13:25,680
actions view the url it goes to

00:13:23,600 --> 00:13:27,920
and even further if i happen to come

00:13:25,680 --> 00:13:29,680
into the pull request first

00:13:27,920 --> 00:13:31,279
i get this nice view right here in the

00:13:29,680 --> 00:13:33,279
pull request i can see the exact

00:13:31,279 --> 00:13:35,519
environments this was deployed to

00:13:33,279 --> 00:13:37,040
i can get a link to the actions run that

00:13:35,519 --> 00:13:38,320
it went to and of course i can click on

00:13:37,040 --> 00:13:41,519
and view that deployment

00:13:38,320 --> 00:13:43,120
and i can see that ruby has been added

00:13:41,519 --> 00:13:45,440
and that is just awesome so i can click

00:13:43,120 --> 00:13:47,839
on ruby it looks great

00:13:45,440 --> 00:13:49,920
so what i'm going to do is go in and

00:13:47,839 --> 00:13:53,600
merge this pull request

00:13:49,920 --> 00:13:53,920
and confirm the merge and let that code

00:13:53,600 --> 00:13:56,160
go

00:13:53,920 --> 00:13:58,000
and it's going to start my next workflow

00:13:56,160 --> 00:14:01,839
so if everything worked out well

00:13:58,000 --> 00:14:03,120
we see that our merge pull request is

00:14:01,839 --> 00:14:04,560
kicked off and it's going to start the

00:14:03,120 --> 00:14:05,680
next build job so let's go take a look

00:14:04,560 --> 00:14:06,320
and see how this workflow is going to

00:14:05,680 --> 00:14:08,160
complete

00:14:06,320 --> 00:14:09,839
and actually we can see in this case two

00:14:08,160 --> 00:14:12,880
different workflows picked off

00:14:09,839 --> 00:14:15,040
i clicked off this uh this cleanup pr so

00:14:12,880 --> 00:14:16,000
in this case i've got a job that's going

00:14:15,040 --> 00:14:17,680
to delete my review

00:14:16,000 --> 00:14:20,320
slot and this is taking advantage of

00:14:17,680 --> 00:14:23,360
that new capability we talked about

00:14:20,320 --> 00:14:25,120
for limiting permissions so in this case

00:14:23,360 --> 00:14:28,240
my cleanup pr

00:14:25,120 --> 00:14:29,839
um workflow goes and deletes that and

00:14:28,240 --> 00:14:31,600
deletes that deployment of my

00:14:29,839 --> 00:14:32,720
application that i made for the pull

00:14:31,600 --> 00:14:34,639
request

00:14:32,720 --> 00:14:36,399
and so i'm not wasting money right cloud

00:14:34,639 --> 00:14:37,040
resources cost money i want to make sure

00:14:36,399 --> 00:14:39,839
there

00:14:37,040 --> 00:14:41,519
they go but in this case i only need

00:14:39,839 --> 00:14:43,120
read of the source code i actually don't

00:14:41,519 --> 00:14:43,519
need any other permissions so i was able

00:14:43,120 --> 00:14:45,440
to

00:14:43,519 --> 00:14:47,360
lock down the permissions for this

00:14:45,440 --> 00:14:50,399
particular workflow

00:14:47,360 --> 00:14:50,880
and make sure that it just it um it only

00:14:50,399 --> 00:14:52,959
does

00:14:50,880 --> 00:14:54,480
exactly what it needs to do that way if

00:14:52,959 --> 00:14:57,440
for whatever reason

00:14:54,480 --> 00:14:59,279
i've done something not quite right or

00:14:57,440 --> 00:15:02,800
there's some other issue

00:14:59,279 --> 00:15:05,680
i'm protecting myself now in the

00:15:02,800 --> 00:15:07,600
workflow that does the deployment

00:15:05,680 --> 00:15:09,199
if i go look at the next set of jobs so

00:15:07,600 --> 00:15:11,199
i had deployed a review

00:15:09,199 --> 00:15:13,680
we see i also have deployed a staging in

00:15:11,199 --> 00:15:16,959
this case this one only runs

00:15:13,680 --> 00:15:18,240
if the ref is on main and this gets

00:15:16,959 --> 00:15:19,600
important for some of the environment

00:15:18,240 --> 00:15:20,800
protection rules that we'll take a look

00:15:19,600 --> 00:15:22,320
at here in a second

00:15:20,800 --> 00:15:25,279
so in this case i'm going to deploy to

00:15:22,320 --> 00:15:28,639
staging it's very similar to the other

00:15:25,279 --> 00:15:30,560
job and then after that it deploys this

00:15:28,639 --> 00:15:31,759
aging if everything looks good it's

00:15:30,560 --> 00:15:33,199
going to go under production but of

00:15:31,759 --> 00:15:34,720
course i don't want things to just

00:15:33,199 --> 00:15:36,480
immediately go to production right i

00:15:34,720 --> 00:15:38,399
want to have some sort of

00:15:36,480 --> 00:15:39,600
approval or step in there to make sure

00:15:38,399 --> 00:15:43,440
things

00:15:39,600 --> 00:15:45,440
aren't just moving along so to do that

00:15:43,440 --> 00:15:46,959
in my settings i have this new section

00:15:45,440 --> 00:15:49,360
called environments

00:15:46,959 --> 00:15:50,800
and we see here that i've got review lab

00:15:49,360 --> 00:15:52,240
staging and production if i look at

00:15:50,800 --> 00:15:54,000
production

00:15:52,240 --> 00:15:56,560
i have two protection rules configured

00:15:54,000 --> 00:15:58,480
on this so in this case i got required

00:15:56,560 --> 00:16:00,320
reviewers which i happen to be one for

00:15:58,480 --> 00:16:01,040
this demo but you can also make sure

00:16:00,320 --> 00:16:03,040
that it's

00:16:01,040 --> 00:16:05,279
somebody else on your team or some other

00:16:03,040 --> 00:16:05,680
team but i also have this other one that

00:16:05,279 --> 00:16:07,600
we've

00:16:05,680 --> 00:16:09,440
introduced recently called deployment

00:16:07,600 --> 00:16:11,120
branches and what this says is

00:16:09,440 --> 00:16:13,279
only workflows that are triggered from

00:16:11,120 --> 00:16:16,320
the main bridge in this case

00:16:13,279 --> 00:16:17,759
are able to deploy to this environment

00:16:16,320 --> 00:16:19,519
in fact we've got a couple of different

00:16:17,759 --> 00:16:22,000
settings so i can say

00:16:19,519 --> 00:16:23,920
all branches i could say only protected

00:16:22,000 --> 00:16:24,639
branches or in this case my selected

00:16:23,920 --> 00:16:26,160
branch

00:16:24,639 --> 00:16:28,399
and you also see i have my azure

00:16:26,160 --> 00:16:31,120
subscription secret and this is a

00:16:28,399 --> 00:16:33,360
the same name but a different secret

00:16:31,120 --> 00:16:36,160
from the one in my repository

00:16:33,360 --> 00:16:37,519
and my workflow only gets access to this

00:16:36,160 --> 00:16:40,720
secret

00:16:37,519 --> 00:16:43,120
when it runs against this

00:16:40,720 --> 00:16:44,320
um this environment and it can only run

00:16:43,120 --> 00:16:47,519
against the environment

00:16:44,320 --> 00:16:47,920
after the rules have passed so if we go

00:16:47,519 --> 00:16:51,600
back

00:16:47,920 --> 00:16:53,279
and look here at our actions workflow

00:16:51,600 --> 00:16:55,519
we can see it's deploying to staging in

00:16:53,279 --> 00:16:58,480
just a second it should complete that

00:16:55,519 --> 00:17:00,079
and go to production and then we'll get

00:16:58,480 --> 00:17:02,959
a notification

00:17:00,079 --> 00:17:05,199
that i need to approve it notifications

00:17:02,959 --> 00:17:06,880
are incredibly important at github and

00:17:05,199 --> 00:17:08,319
you know whether it's a pull request

00:17:06,880 --> 00:17:11,679
review or

00:17:08,319 --> 00:17:12,799
um or anything else being able to get

00:17:11,679 --> 00:17:14,559
that notification

00:17:12,799 --> 00:17:16,000
when and where you need it uh

00:17:14,559 --> 00:17:18,000
particularly in the web

00:17:16,000 --> 00:17:19,120
in email or in the incredible github

00:17:18,000 --> 00:17:20,480
mobile app

00:17:19,120 --> 00:17:22,799
so you can unblock your team is

00:17:20,480 --> 00:17:24,559
important another feature that we're

00:17:22,799 --> 00:17:27,360
launching very soon in

00:17:24,559 --> 00:17:28,640
uh concert with the mobile team is the

00:17:27,360 --> 00:17:31,440
ability to have

00:17:28,640 --> 00:17:32,000
these review notifications on the mobile

00:17:31,440 --> 00:17:33,600
app

00:17:32,000 --> 00:17:35,200
you'll see more about that soon but

00:17:33,600 --> 00:17:36,720
again this is a kind of a quick sneak

00:17:35,200 --> 00:17:38,799
peek

00:17:36,720 --> 00:17:40,240
of course it'll be there for ios and

00:17:38,799 --> 00:17:43,520
android

00:17:40,240 --> 00:17:47,840
go back and take a look here

00:17:43,520 --> 00:17:47,840
it's taking a quick second

00:17:48,720 --> 00:17:54,240
and of course click through it's fully

00:17:51,679 --> 00:17:58,080
interactive to see what's going on

00:17:54,240 --> 00:18:01,840
go back and take a look here at

00:17:58,080 --> 00:18:01,840
my old notifications

00:18:18,320 --> 00:18:21,600
all right how many there let's go back

00:18:21,039 --> 00:18:22,880
and look

00:18:21,600 --> 00:18:25,360
all right so now we're deployed to

00:18:22,880 --> 00:18:27,679
production so we see here

00:18:25,360 --> 00:18:29,280
it's popped up it's stopped so the

00:18:27,679 --> 00:18:30,480
workflow is paused it's no longer

00:18:29,280 --> 00:18:32,240
running on a runner

00:18:30,480 --> 00:18:33,919
it's simply waiting for somebody to come

00:18:32,240 --> 00:18:35,520
along improvement and says

00:18:33,919 --> 00:18:37,280
me chris pack because i triggered this

00:18:35,520 --> 00:18:38,160
workflow as request review to play to

00:18:37,280 --> 00:18:39,919
production

00:18:38,160 --> 00:18:41,679
i can of course click review deployments

00:18:39,919 --> 00:18:43,440
here and if

00:18:41,679 --> 00:18:45,280
company look at notifications i can see

00:18:43,440 --> 00:18:47,600
right here that i see

00:18:45,280 --> 00:18:49,200
this nice notification that tells me

00:18:47,600 --> 00:18:51,600
that i'm looking for review

00:18:49,200 --> 00:18:53,280
and i can rapidly get the information i

00:18:51,600 --> 00:18:54,799
need to unblock the team so if i click

00:18:53,280 --> 00:18:57,360
on that

00:18:54,799 --> 00:18:58,480
it'll navigate me here click on review

00:18:57,360 --> 00:19:03,679
requested

00:18:58,480 --> 00:19:03,679
say it looks good good ship it

00:19:05,840 --> 00:19:10,000
proven deploy and this job will pick up

00:19:09,200 --> 00:19:12,240
and deploy my

00:19:10,000 --> 00:19:13,200
application to the production version of

00:19:12,240 --> 00:19:16,720
my website

00:19:13,200 --> 00:19:18,720
and keep on going so that's a quick tour

00:19:16,720 --> 00:19:21,440
of some of the new capabilities we have

00:19:18,720 --> 00:19:22,880
in github actions in fact i've got one

00:19:21,440 --> 00:19:27,200
more little thing i want to show you

00:19:22,880 --> 00:19:28,640
so there there's always a case where

00:19:27,200 --> 00:19:30,559
a particular environment typically

00:19:28,640 --> 00:19:32,720
production wants to make sure that only

00:19:30,559 --> 00:19:33,919
one thing can deploy to it at a time

00:19:32,720 --> 00:19:36,720
and so we're introducing a new

00:19:33,919 --> 00:19:38,080
capability that will ship in a few weeks

00:19:36,720 --> 00:19:39,760
that's being tested right here which

00:19:38,080 --> 00:19:40,559
will allow me to serialize those

00:19:39,760 --> 00:19:42,880
deployments

00:19:40,559 --> 00:19:44,720
so keep an eye out for that it should be

00:19:42,880 --> 00:19:47,600
really interesting i've got some great

00:19:44,720 --> 00:19:49,120
uh content coming to to really help you

00:19:47,600 --> 00:19:51,120
again drive those continuous delivery

00:19:49,120 --> 00:19:53,840
workflows and just use github actions to

00:19:51,120 --> 00:19:53,840
its fullest

00:19:53,919 --> 00:19:57,440
so with that said i want to thank you so

00:19:55,679 --> 00:20:00,400
much for

00:19:57,440 --> 00:20:01,840
coming to my talk and hopefully using

00:20:00,400 --> 00:20:03,520
github actions

00:20:01,840 --> 00:20:05,360
i look forward to spending the next

00:20:03,520 --> 00:20:08,559
little bit answering your questions

00:20:05,360 --> 00:20:08,559
and helping you learn more

00:20:16,159 --> 00:20:21,120
that means thank you chris that was

00:20:18,840 --> 00:20:23,120
awesome

00:20:21,120 --> 00:20:24,240
thank you huge shout out to our

00:20:23,120 --> 00:20:26,640
developer community

00:20:24,240 --> 00:20:30,159
in the west india we love you all and

00:20:26,640 --> 00:20:30,159
welcome to getup satellite

00:20:31,360 --> 00:20:35,840
and for that let's jump into the q a

00:20:36,320 --> 00:20:42,880
awesome so the first question uh

00:20:39,760 --> 00:20:43,760
craze that we see here is we've talked

00:20:42,880 --> 00:20:46,799
about

00:20:43,760 --> 00:20:49,840
continuous development and that being in

00:20:46,799 --> 00:20:51,600
the beta can you speak more about that

00:20:49,840 --> 00:20:53,440
and share like when would that be

00:20:51,600 --> 00:20:56,000
generally available

00:20:53,440 --> 00:20:56,640
absolutely so all the features i showed

00:20:56,000 --> 00:20:59,679
you today

00:20:56,640 --> 00:21:00,799
minus the um i think the mobile app

00:20:59,679 --> 00:21:02,400
hasn't quite shipped and that

00:21:00,799 --> 00:21:02,640
serialization feature that we're looking

00:21:02,400 --> 00:21:04,640
at

00:21:02,640 --> 00:21:05,679
have shipped to github.com and are

00:21:04,640 --> 00:21:09,360
available

00:21:05,679 --> 00:21:10,960
um we chose to make the features that we

00:21:09,360 --> 00:21:12,080
shipped at universa beta because we

00:21:10,960 --> 00:21:12,640
wanted to have some time to get some

00:21:12,080 --> 00:21:14,000
feedback

00:21:12,640 --> 00:21:16,080
and we also knew that we weren't quite

00:21:14,000 --> 00:21:18,080
done with the core set of features that

00:21:16,080 --> 00:21:20,320
we wanted to have available for

00:21:18,080 --> 00:21:21,919
our customers and finally from just an

00:21:20,320 --> 00:21:23,280
engineering health perspective

00:21:21,919 --> 00:21:25,200
we wanted to make sure that we could

00:21:23,280 --> 00:21:26,480
monitor them we could support them we we

00:21:25,200 --> 00:21:28,000
knew what was happening all of the

00:21:26,480 --> 00:21:29,600
things that you you know you have to do

00:21:28,000 --> 00:21:32,159
when you run a service

00:21:29,600 --> 00:21:33,520
so we think we're about a month away

00:21:32,159 --> 00:21:36,159
from calling them ga

00:21:33,520 --> 00:21:36,880
a couple of small things left to ship a

00:21:36,159 --> 00:21:39,600
few more

00:21:36,880 --> 00:21:41,120
small bugs to fix and sometime during uh

00:21:39,600 --> 00:21:42,400
the month of april we think we'll call

00:21:41,120 --> 00:21:44,960
these ga

00:21:42,400 --> 00:21:46,240
and then make them and they're already

00:21:44,960 --> 00:21:48,080
widely available at everybody it's

00:21:46,240 --> 00:21:50,240
completely open beta but

00:21:48,080 --> 00:21:52,000
uh that general availability also

00:21:50,240 --> 00:21:53,679
unlocks it so we can ship them in the

00:21:52,000 --> 00:21:55,440
next version of github enterprise server

00:21:53,679 --> 00:21:57,919
so github enterprise server

00:21:55,440 --> 00:21:59,280
uh there's i think an update three one

00:21:57,919 --> 00:22:00,960
is coming soon

00:21:59,280 --> 00:22:02,320
um and then there'll be another one

00:22:00,960 --> 00:22:03,919
after that so it won't be in the three

00:22:02,320 --> 00:22:05,520
one version but we want to make sure all

00:22:03,919 --> 00:22:09,600
these hit the

00:22:05,520 --> 00:22:09,600
3.2 that comes after that

00:22:09,679 --> 00:22:15,679
awesome that's very insightful chris

00:22:12,720 --> 00:22:16,640
you also mentioned that github action is

00:22:15,679 --> 00:22:18,640
ga

00:22:16,640 --> 00:22:20,880
on the enterprise server why is it

00:22:18,640 --> 00:22:23,919
important

00:22:20,880 --> 00:22:25,679
so as we heard in the keynote from erica

00:22:23,919 --> 00:22:27,520
github enterprise server is just a very

00:22:25,679 --> 00:22:28,640
important part of the overall github

00:22:27,520 --> 00:22:30,799
product family

00:22:28,640 --> 00:22:32,080
and we have lots of customers for a wide

00:22:30,799 --> 00:22:35,280
variety of reasons

00:22:32,080 --> 00:22:36,720
that need to use it and not having every

00:22:35,280 --> 00:22:38,080
single feature that's available on

00:22:36,720 --> 00:22:40,000
github.com

00:22:38,080 --> 00:22:42,240
is is just not acceptable right they

00:22:40,000 --> 00:22:44,320
want to have all of the power of github

00:22:42,240 --> 00:22:46,000
but run in their own data centers

00:22:44,320 --> 00:22:47,840
github actions was one of the largest

00:22:46,000 --> 00:22:49,919
features that just wasn't there yet

00:22:47,840 --> 00:22:51,440
um and it took us a long time it took

00:22:49,919 --> 00:22:54,000
almost a full year of

00:22:51,440 --> 00:22:55,520
very uh dedicated development from a

00:22:54,000 --> 00:22:58,000
good percentage of the team

00:22:55,520 --> 00:22:59,360
in order to take github actions and

00:22:58,000 --> 00:23:01,760
bring it to github enterprise server

00:22:59,360 --> 00:23:05,120
there was a significant amount of effort

00:23:01,760 --> 00:23:07,360
um to do that and you

00:23:05,120 --> 00:23:08,640
now that it's there a lot of customers

00:23:07,360 --> 00:23:10,320
very large customers who have been

00:23:08,640 --> 00:23:11,520
asking for it are happy and starting to

00:23:10,320 --> 00:23:13,440
adopt

00:23:11,520 --> 00:23:15,919
and again it's all about making sure

00:23:13,440 --> 00:23:17,760
that github enterprise server

00:23:15,919 --> 00:23:19,520
sells the full vision and the full value

00:23:17,760 --> 00:23:20,720
that people expect from github.com but

00:23:19,520 --> 00:23:22,240
in your data center

00:23:20,720 --> 00:23:24,240
i think one of the other unique things

00:23:22,240 --> 00:23:26,720
we did with actions which i'm not

00:23:24,240 --> 00:23:28,400
which is kind of been done before is

00:23:26,720 --> 00:23:30,000
really start to think about github

00:23:28,400 --> 00:23:31,440
enterprise server as an extension of

00:23:30,000 --> 00:23:33,440
github.com

00:23:31,440 --> 00:23:35,120
so through github enterprise connect you

00:23:33,440 --> 00:23:36,159
can connect your server to your

00:23:35,120 --> 00:23:39,280
github.com

00:23:36,159 --> 00:23:40,799
enterprise and allow your developers who

00:23:39,280 --> 00:23:42,400
are running workflows there to take

00:23:40,799 --> 00:23:44,480
advantage of the marketplace of the

00:23:42,400 --> 00:23:47,440
community of actions that's available

00:23:44,480 --> 00:23:48,720
on github.com there's some controls and

00:23:47,440 --> 00:23:51,039
things you have in there

00:23:48,720 --> 00:23:52,559
to make sure to to provide some rails

00:23:51,039 --> 00:23:54,320
and some guidelines

00:23:52,559 --> 00:23:55,840
but we do think it's important that just

00:23:54,320 --> 00:23:57,760
because you need to run

00:23:55,840 --> 00:24:00,159
everything in your data center for very

00:23:57,760 --> 00:24:02,000
good reasons that you're also able to

00:24:00,159 --> 00:24:02,559
take advantage of the open source

00:24:02,000 --> 00:24:05,840
community

00:24:02,559 --> 00:24:05,840
as much as possible

00:24:06,080 --> 00:24:09,600
oh yes that is especially github connect

00:24:09,039 --> 00:24:12,480
will

00:24:09,600 --> 00:24:13,520
be really really useful for enterprises

00:24:12,480 --> 00:24:15,600
now coming to again

00:24:13,520 --> 00:24:16,640
enterprise need and that whole devops

00:24:15,600 --> 00:24:18,960
cycle you

00:24:16,640 --> 00:24:20,960
talked a little about granular

00:24:18,960 --> 00:24:24,320
permissions control feature

00:24:20,960 --> 00:24:27,200
do you want to share more about that

00:24:24,320 --> 00:24:28,400
sure um as i mentioned in the demo one

00:24:27,200 --> 00:24:31,520
of the key things

00:24:28,400 --> 00:24:32,000
is to make sure that um or one a key

00:24:31,520 --> 00:24:35,440
security

00:24:32,000 --> 00:24:37,200
tenant um is leased access

00:24:35,440 --> 00:24:39,279
right and all things you do you want to

00:24:37,200 --> 00:24:41,760
make sure that you give people the least

00:24:39,279 --> 00:24:43,600
access possible or you give a process

00:24:41,760 --> 00:24:46,720
especially automation that's a that's a

00:24:43,600 --> 00:24:50,799
really ripe area for attack

00:24:46,720 --> 00:24:53,120
and uh as we started github actions

00:24:50,799 --> 00:24:54,720
just for a variety of reasons we we

00:24:53,120 --> 00:24:57,039
built it where we actually did

00:24:54,720 --> 00:24:59,120
narrow the permissions from a standard

00:24:57,039 --> 00:25:00,720
github app so typically

00:24:59,120 --> 00:25:02,880
when you have a standard github app you

00:25:00,720 --> 00:25:05,760
give it a list of repos you say this has

00:25:02,880 --> 00:25:07,600
some set of permissions to this set of

00:25:05,760 --> 00:25:09,200
repos well with github actions

00:25:07,600 --> 00:25:11,679
we at least narrowed that to a single

00:25:09,200 --> 00:25:13,120
repo now within that repo you still had

00:25:11,679 --> 00:25:15,039
fairly broad permissions because we

00:25:13,120 --> 00:25:16,640
wanted people to be able to automate

00:25:15,039 --> 00:25:19,200
all kinds of things you know they want

00:25:16,640 --> 00:25:22,559
to automate ci but they also automate

00:25:19,200 --> 00:25:25,679
issue bots and we see amazing

00:25:22,559 --> 00:25:27,600
variety of different things so the

00:25:25,679 --> 00:25:29,360
github apps token can read write source

00:25:27,600 --> 00:25:30,240
can read write issues read write prs et

00:25:29,360 --> 00:25:31,360
cetera you can go look at the

00:25:30,240 --> 00:25:34,000
documentation and see

00:25:31,360 --> 00:25:34,799
all of the capabilities it has but of

00:25:34,000 --> 00:25:37,679
course

00:25:34,799 --> 00:25:39,520
any given workflow doesn't necessarily

00:25:37,679 --> 00:25:41,520
need to be able to do all those things

00:25:39,520 --> 00:25:42,880
and we have had requests from this in

00:25:41,520 --> 00:25:45,360
the community uh

00:25:42,880 --> 00:25:46,960
and certainly as we wanted to get there

00:25:45,360 --> 00:25:48,400
it just took us a while but as part of

00:25:46,960 --> 00:25:51,039
this push that we've been

00:25:48,400 --> 00:25:51,919
really working on uh this past couple of

00:25:51,039 --> 00:25:53,520
months

00:25:51,919 --> 00:25:55,760
we thought it was the right time to go

00:25:53,520 --> 00:25:57,440
and implement this new feature and so

00:25:55,760 --> 00:25:59,279
what it lets you do is that permissions

00:25:57,440 --> 00:26:00,559
lock basically lets you customize the

00:25:59,279 --> 00:26:02,720
permissions of the

00:26:00,559 --> 00:26:04,400
github token that are generated for

00:26:02,720 --> 00:26:05,919
every specific run and you can actually

00:26:04,400 --> 00:26:08,720
do it at two levels

00:26:05,919 --> 00:26:10,799
you can say the whole workflow has a

00:26:08,720 --> 00:26:13,279
token of this set of permissions or

00:26:10,799 --> 00:26:14,000
you can say just a job and why that's

00:26:13,279 --> 00:26:16,720
important is

00:26:14,000 --> 00:26:18,240
i could do something like say um have a

00:26:16,720 --> 00:26:21,520
depend about workflow

00:26:18,240 --> 00:26:22,400
and maybe it can the first job that

00:26:21,520 --> 00:26:25,840
actually

00:26:22,400 --> 00:26:28,080
pulls the untrusted source from

00:26:25,840 --> 00:26:28,880
the pull request opened by dependable

00:26:28,080 --> 00:26:31,039
has

00:26:28,880 --> 00:26:32,240
just read source option like it only can

00:26:31,039 --> 00:26:33,600
only read source or maybe it can

00:26:32,240 --> 00:26:34,640
resource and write issues or something

00:26:33,600 --> 00:26:36,559
like that

00:26:34,640 --> 00:26:38,400
and so i can run that potentially

00:26:36,559 --> 00:26:40,400
untrusted workload in a very

00:26:38,400 --> 00:26:43,360
narrow set of permissions and then if

00:26:40,400 --> 00:26:45,440
that passes i can then have a second job

00:26:43,360 --> 00:26:46,720
that maybe merges the pr or does

00:26:45,440 --> 00:26:47,679
something else that requires higher

00:26:46,720 --> 00:26:50,080
permissions

00:26:47,679 --> 00:26:51,520
but i don't execute any untrusted code

00:26:50,080 --> 00:26:52,000
as part of that so i don't have the

00:26:51,520 --> 00:26:54,880
ability

00:26:52,000 --> 00:26:55,120
for say a compromise dependency to come

00:26:54,880 --> 00:26:57,279
in

00:26:55,120 --> 00:26:58,559
and insert something into my repo so

00:26:57,279 --> 00:27:01,360
it's really about that

00:26:58,559 --> 00:27:02,880
fine grain control to really give you

00:27:01,360 --> 00:27:06,799
that least access for whatever

00:27:02,880 --> 00:27:09,200
the scenario is

00:27:06,799 --> 00:27:10,000
wow that's that's very very insightful

00:27:09,200 --> 00:27:11,279
uh chris

00:27:10,000 --> 00:27:14,240
we're getting a lot of questions and

00:27:11,279 --> 00:27:17,520
we'll take just one last here

00:27:14,240 --> 00:27:20,880
any idea by when private repos would get

00:27:17,520 --> 00:27:22,640
environments in actions so private repos

00:27:20,880 --> 00:27:24,480
have environments with actions today

00:27:22,640 --> 00:27:26,559
but they're only part of the enterprise

00:27:24,480 --> 00:27:27,360
sku so you have to have an enterprise

00:27:26,559 --> 00:27:29,360
plan

00:27:27,360 --> 00:27:30,640
to use environments with private repos

00:27:29,360 --> 00:27:32,000
it's something that we're taking you

00:27:30,640 --> 00:27:33,679
know we certainly have seen the feedback

00:27:32,000 --> 00:27:34,480
from the community that people wanted in

00:27:33,679 --> 00:27:35,919
team

00:27:34,480 --> 00:27:38,159
um it is something that we are

00:27:35,919 --> 00:27:41,360
discussing uh but today we

00:27:38,159 --> 00:27:43,039
we sort of because the environments uh

00:27:41,360 --> 00:27:43,679
protection rules and things like that

00:27:43,039 --> 00:27:46,480
are very

00:27:43,679 --> 00:27:46,720
um compliance oriented et cetera we sort

00:27:46,480 --> 00:27:48,159
of

00:27:46,720 --> 00:27:49,919
group them with the other sets of

00:27:48,159 --> 00:27:52,960
features that tend to be

00:27:49,919 --> 00:27:52,960
in that enterprise plan

00:27:53,039 --> 00:27:56,480
great great and this question was from

00:27:54,880 --> 00:27:59,679
the pain

00:27:56,480 --> 00:28:01,279
thanks a lot chris and for our audience

00:27:59,679 --> 00:28:03,039
let me share with you that chris is not

00:28:01,279 --> 00:28:05,440
going anywhere he is with you all

00:28:03,039 --> 00:28:06,240
for the next 30 minutes at github

00:28:05,440 --> 00:28:09,039
discussions

00:28:06,240 --> 00:28:10,240
so post all your queries get all his all

00:28:09,039 --> 00:28:13,039
your answers

00:28:10,240 --> 00:28:14,960
uh from him and he's joining you at his

00:28:13,039 --> 00:28:17,440
midnight so take as much as possible

00:28:14,960 --> 00:28:19,279
from him bye bye chris we'll let you go

00:28:17,440 --> 00:28:21,039
and enjoy your time with our viewers at

00:28:19,279 --> 00:28:29,200
get up discussions

00:28:21,039 --> 00:28:29,200

YouTube URL: https://www.youtube.com/watch?v=3-Sz2gfim1M


