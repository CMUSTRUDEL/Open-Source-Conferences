Title: GitHub Satellite India 2021 - Building the Julia programming language and its community
Publication date: 2021-03-28
Playlist: GitHub Satellite India 2021 - Open Source: Day 2
Description: 
	Presented by Dr. Viral B. Shah, Co-Founder & CEO, Julia Computing

Julia is one of the popular programming languages for technical computing, widely used in domains like pharmaceutical development, space missions, financial modeling, and others. Julia is being actively developed on GitHubâ€”with more than a thousand contributors from across the world. In this session, the co-creator of JuliaLang, Viral Shah, will speak about the journey of building Julia in the open and the challenges the team faced, and share some insights from their journey in open source.


As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:01,199 --> 00:00:04,560
hello hi

00:00:03,120 --> 00:00:06,160
thanks karin for that wonderful

00:00:04,560 --> 00:00:08,080
introduction and

00:00:06,160 --> 00:00:09,760
i'm viral shah one of the creators of

00:00:08,080 --> 00:00:11,599
the julia programming language

00:00:09,760 --> 00:00:14,400
and also co-founder and ceo of julia

00:00:11,599 --> 00:00:15,280
computing i'm going to talk about how we

00:00:14,400 --> 00:00:18,160
build julia

00:00:15,280 --> 00:00:18,560
and our community out in the open a lot

00:00:18,160 --> 00:00:21,279
of it

00:00:18,560 --> 00:00:22,320
mostly on github and and everything i'm

00:00:21,279 --> 00:00:24,720
going to talk about

00:00:22,320 --> 00:00:30,640
is is not just about me but about what

00:00:24,720 --> 00:00:33,120
the broader julia community has built

00:00:30,640 --> 00:00:35,280
so julia has been a long journey it's

00:00:33,120 --> 00:00:38,879
been around for

00:00:35,280 --> 00:00:41,440
almost 11 years now and we started this

00:00:38,879 --> 00:00:43,360
journey in 2009 with an urge to solve

00:00:41,440 --> 00:00:45,840
the two language problem

00:00:43,360 --> 00:00:47,360
the two language problem very simply put

00:00:45,840 --> 00:00:49,600
is

00:00:47,360 --> 00:00:52,160
is a phrase that we coined actually

00:00:49,600 --> 00:00:53,680
after after starting the julia project

00:00:52,160 --> 00:00:55,440
and the reason why we had to come up

00:00:53,680 --> 00:00:56,320
with it was because it was hard to

00:00:55,440 --> 00:00:58,160
explain what

00:00:56,320 --> 00:00:59,840
why why the world needed a new

00:00:58,160 --> 00:01:01,120
programming language why did the world

00:00:59,840 --> 00:01:02,960
need julia

00:01:01,120 --> 00:01:05,199
and the reason it the reason is as

00:01:02,960 --> 00:01:08,159
follows right you everyone's used to

00:01:05,199 --> 00:01:10,240
programming with python with r with

00:01:08,159 --> 00:01:13,439
matlab with all of these

00:01:10,240 --> 00:01:15,759
interpreted languages that are you know

00:01:13,439 --> 00:01:17,360
not not really great for performance but

00:01:15,759 --> 00:01:18,320
then you always end up writing your

00:01:17,360 --> 00:01:21,040
programs in c

00:01:18,320 --> 00:01:22,799
c plus plus fortran java in order to get

00:01:21,040 --> 00:01:23,520
higher performance so people like to

00:01:22,799 --> 00:01:25,280
have

00:01:23,520 --> 00:01:28,159
a certain kind of language for data

00:01:25,280 --> 00:01:31,200
exploration for interactive exploration

00:01:28,159 --> 00:01:32,560
for um you know for for just sort of

00:01:31,200 --> 00:01:33,920
interacting with your algorithms and

00:01:32,560 --> 00:01:34,880
then another language for getting

00:01:33,920 --> 00:01:36,799
performance

00:01:34,880 --> 00:01:39,360
and it's really odd to write the same

00:01:36,799 --> 00:01:41,600
program twice and this is why

00:01:39,360 --> 00:01:43,439
we started out by creating julia to

00:01:41,600 --> 00:01:44,560
solve this two language problems so that

00:01:43,439 --> 00:01:46,960
you can have

00:01:44,560 --> 00:01:50,320
the ease of python and the speed of c

00:01:46,960 --> 00:01:52,399
all in one package in one language

00:01:50,320 --> 00:01:54,560
so in 2009 we wrote the first line of

00:01:52,399 --> 00:01:56,719
code and in 2012

00:01:54,560 --> 00:01:58,479
we actually published a post a blog post

00:01:56,719 --> 00:01:59,920
called why we created julia if you if

00:01:58,479 --> 00:02:00,799
you google that term you'll land up

00:01:59,920 --> 00:02:02,719
right there

00:02:00,799 --> 00:02:03,920
and you'll see what what it was about

00:02:02,719 --> 00:02:05,759
and

00:02:03,920 --> 00:02:07,439
a lot of what we wrote back then still

00:02:05,759 --> 00:02:09,200
holds true and this is how julia got

00:02:07,439 --> 00:02:12,080
started it was the four of us

00:02:09,200 --> 00:02:14,319
um with uh jeff bizanson stefan

00:02:12,080 --> 00:02:16,160
karpinsky and alan edelman

00:02:14,319 --> 00:02:18,480
those were three of my co-creators with

00:02:16,160 --> 00:02:20,640
whom i started the julia project

00:02:18,480 --> 00:02:22,000
and just like many open source projects

00:02:20,640 --> 00:02:24,480
it completely started out with

00:02:22,000 --> 00:02:26,239
an email conversation i was actually

00:02:24,480 --> 00:02:27,440
based out of bangalore when i started

00:02:26,239 --> 00:02:29,360
this project

00:02:27,440 --> 00:02:30,879
and and three of my collaborators were

00:02:29,360 --> 00:02:32,480
based out of the us

00:02:30,879 --> 00:02:34,720
but all of us were in very different

00:02:32,480 --> 00:02:37,040
geographies and

00:02:34,720 --> 00:02:38,480
it was a completely distributed setup in

00:02:37,040 --> 00:02:41,040
in where we started uh

00:02:38,480 --> 00:02:43,120
you know talking by email set up a git

00:02:41,040 --> 00:02:45,120
server this was this was not yet on

00:02:43,120 --> 00:02:46,080
github back then we actually had a git

00:02:45,120 --> 00:02:48,319
server

00:02:46,080 --> 00:02:49,120
at uh the university of california santa

00:02:48,319 --> 00:02:51,599
barbara

00:02:49,120 --> 00:02:53,120
that stefan used to maintain and very

00:02:51,599 --> 00:02:54,239
early on in the project's life we

00:02:53,120 --> 00:02:56,239
actually ended up

00:02:54,239 --> 00:02:57,760
moving to github some of the other

00:02:56,239 --> 00:03:01,280
milestones for the project

00:02:57,760 --> 00:03:02,959
julia became the ju in jupiter in 2013

00:03:01,280 --> 00:03:04,000
the second language that was added to

00:03:02,959 --> 00:03:06,159
jupiter

00:03:04,000 --> 00:03:08,560
for those of you who do not uh know this

00:03:06,159 --> 00:03:10,400
jupiter notebooks uh

00:03:08,560 --> 00:03:12,480
are extremely common for data science

00:03:10,400 --> 00:03:13,519
and they stand for julia python and r

00:03:12,480 --> 00:03:16,720
and so julius j

00:03:13,519 --> 00:03:18,400
in jupiter in 2015 we actually founded

00:03:16,720 --> 00:03:20,159
julia computing because of all the

00:03:18,400 --> 00:03:21,200
interest around the julia programming

00:03:20,159 --> 00:03:22,800
language and

00:03:21,200 --> 00:03:24,640
some of the first companies started

00:03:22,800 --> 00:03:27,920
using julia commercially

00:03:24,640 --> 00:03:31,200
we hit 1 million downloads in 2017.

00:03:27,920 --> 00:03:32,159
1.0 was released in 2018 in julia con in

00:03:31,200 --> 00:03:35,120
london

00:03:32,159 --> 00:03:36,959
and 2019 saw 10 million julia downloads

00:03:35,120 --> 00:03:37,680
we were extremely thrilled to receive

00:03:36,959 --> 00:03:39,680
the

00:03:37,680 --> 00:03:41,120
the wilkinson prize for our

00:03:39,680 --> 00:03:44,319
contributions to julia

00:03:41,120 --> 00:03:47,040
and also the sydney fernbark prize last

00:03:44,319 --> 00:03:49,200
year was a couple of years ago now

00:03:47,040 --> 00:03:50,400
and we are now close to 25 million

00:03:49,200 --> 00:03:53,040
downloads

00:03:50,400 --> 00:03:54,799
and even though my slide says julia 1.5

00:03:53,040 --> 00:03:56,879
released in fact yesterday we just

00:03:54,799 --> 00:03:58,000
released julia 1.6 it has been getting

00:03:56,879 --> 00:03:59,840
rave reviews

00:03:58,000 --> 00:04:01,280
um it was trending on hacker news just

00:03:59,840 --> 00:04:03,760
about yesterday and

00:04:01,280 --> 00:04:04,560
uh it's it's it's obviously the best

00:04:03,760 --> 00:04:08,319
release for

00:04:04,560 --> 00:04:10,480
of julia ever so far

00:04:08,319 --> 00:04:12,159
so while julia as a programming language

00:04:10,480 --> 00:04:14,080
solved the two language problem for

00:04:12,159 --> 00:04:16,880
scientists and engineers uh

00:04:14,080 --> 00:04:18,479
you know it it really is making impact

00:04:16,880 --> 00:04:21,040
in the real world

00:04:18,479 --> 00:04:21,840
people are using julia for faster drug

00:04:21,040 --> 00:04:24,000
development

00:04:21,840 --> 00:04:26,240
um you know companies like paiser and

00:04:24,000 --> 00:04:27,360
moderna are using julia to come up with

00:04:26,240 --> 00:04:30,320
new drugs

00:04:27,360 --> 00:04:32,400
and and take them through the drug the

00:04:30,320 --> 00:04:35,840
the drug pipeline process

00:04:32,400 --> 00:04:37,600
in a faster way companies

00:04:35,840 --> 00:04:39,759
like mitsubishi electric are working

00:04:37,600 --> 00:04:41,759
with us mitsubishi electric research

00:04:39,759 --> 00:04:43,280
labs on energy efficient buildings and

00:04:41,759 --> 00:04:45,520
air conditioning systems

00:04:43,280 --> 00:04:47,520
with julia we were able to simulate some

00:04:45,520 --> 00:04:49,520
of these air conditioning systems 500

00:04:47,520 --> 00:04:51,440
times faster than was possible

00:04:49,520 --> 00:04:53,120
before and that means that a year's

00:04:51,440 --> 00:04:55,280
worth of simulation of how

00:04:53,120 --> 00:04:57,040
an air conditioning system might react

00:04:55,280 --> 00:04:58,720
to all the changes in

00:04:57,040 --> 00:05:00,400
in temperature and weather and so on and

00:04:58,720 --> 00:05:02,000
so forth can now be done in a few days

00:05:00,400 --> 00:05:03,440
because of julia

00:05:02,000 --> 00:05:05,360
we're working with a team at carnegie

00:05:03,440 --> 00:05:06,160
mellon with professor venkat

00:05:05,360 --> 00:05:09,280
vishwanathan

00:05:06,160 --> 00:05:11,919
on coming up with a new battery

00:05:09,280 --> 00:05:14,080
new new and efficient batteries uh like

00:05:11,919 --> 00:05:15,600
the kinds that go into electric aircraft

00:05:14,080 --> 00:05:17,199
coming up with new materials for these

00:05:15,600 --> 00:05:18,320
batteries and new simulation

00:05:17,199 --> 00:05:21,039
technologies

00:05:18,320 --> 00:05:21,919
uh for for sort of putting batteries

00:05:21,039 --> 00:05:25,039
into new uh

00:05:21,919 --> 00:05:27,280
electric aircraft hardware or you know

00:05:25,039 --> 00:05:29,280
there's a lot of work by the climate

00:05:27,280 --> 00:05:30,160
machine project between mit and caltech

00:05:29,280 --> 00:05:32,240
where julia

00:05:30,160 --> 00:05:33,280
and its scientific machine learning

00:05:32,240 --> 00:05:36,160
ecosystem

00:05:33,280 --> 00:05:37,280
are being used for climate science and

00:05:36,160 --> 00:05:40,320
climate modeling

00:05:37,280 --> 00:05:42,320
and its impact on agriculture and and on

00:05:40,320 --> 00:05:44,960
just a number of many different

00:05:42,320 --> 00:05:47,360
applications so these are some really

00:05:44,960 --> 00:05:48,560
difficult scientific problems that julia

00:05:47,360 --> 00:05:50,800
is addressing

00:05:48,560 --> 00:05:53,039
today and what i'm going to talk about

00:05:50,800 --> 00:05:55,120
is the journey from

00:05:53,039 --> 00:05:56,319
developing the julia language developing

00:05:55,120 --> 00:05:58,720
a community

00:05:56,319 --> 00:06:00,880
you know building out julia computing

00:05:58,720 --> 00:06:04,319
and then being able to actually work on

00:06:00,880 --> 00:06:06,160
some of these cutting edge problems

00:06:04,319 --> 00:06:07,840
so here's the the julia project on

00:06:06,160 --> 00:06:10,160
github it's um

00:06:07,840 --> 00:06:12,080
you know just uh julia lang slash julia

00:06:10,160 --> 00:06:13,120
julia lang is the organization julia's

00:06:12,080 --> 00:06:16,479
the project

00:06:13,120 --> 00:06:19,600
it has 33 000

00:06:16,479 --> 00:06:21,280
stars and tons and tons of comments uh

00:06:19,600 --> 00:06:22,160
yeah there you go close to 50 000

00:06:21,280 --> 00:06:24,479
comments

00:06:22,160 --> 00:06:26,319
and um you know all these many forks so

00:06:24,479 --> 00:06:29,600
it is a living breathing project

00:06:26,319 --> 00:06:32,560
with over over 1 100 contributors to the

00:06:29,600 --> 00:06:32,560
main julia project

00:06:33,039 --> 00:06:37,680
i don't like this little red check box

00:06:35,360 --> 00:06:39,440
here as as anyone who's been on github

00:06:37,680 --> 00:06:41,360
likes it this is this is a screenshot

00:06:39,440 --> 00:06:44,000
that i just took before this talk

00:06:41,360 --> 00:06:46,639
but we worked very hard to make our ci

00:06:44,000 --> 00:06:49,360
green but this ci is very demanding

00:06:46,639 --> 00:06:50,160
we actually run our own uh ci systems

00:06:49,360 --> 00:06:53,520
that

00:06:50,160 --> 00:06:54,880
test every commit of julia on 32-bit

00:06:53,520 --> 00:06:57,680
64-bit intel

00:06:54,880 --> 00:06:58,639
arm you know and and and all sorts of

00:06:57,680 --> 00:07:00,720
architectures

00:06:58,639 --> 00:07:02,560
on windows mac linux so it is it is a

00:07:00,720 --> 00:07:04,479
difficult ci to pass

00:07:02,560 --> 00:07:05,919
but we take it very seriously as i said

00:07:04,479 --> 00:07:08,880
we released 1.6

00:07:05,919 --> 00:07:10,479
just a couple of days ago one of the

00:07:08,880 --> 00:07:10,800
things i wanted to do for this talk was

00:07:10,479 --> 00:07:13,120
that

00:07:10,800 --> 00:07:15,039
the dig back into my own first commit

00:07:13,120 --> 00:07:16,880
out of uh you know into julian turns out

00:07:15,039 --> 00:07:20,400
that was in september

00:07:16,880 --> 00:07:22,560
of 2009 where we uh had uh

00:07:20,400 --> 00:07:23,840
where my first commit was actually to

00:07:22,560 --> 00:07:26,960
add some of the

00:07:23,840 --> 00:07:28,720
array array operations into julia and

00:07:26,960 --> 00:07:30,160
it's it's just all looks so different i

00:07:28,720 --> 00:07:32,800
mean we didn't even have

00:07:30,160 --> 00:07:34,160
jl extensions back then they were dot j

00:07:32,800 --> 00:07:35,360
and then you can sort of see how the

00:07:34,160 --> 00:07:37,120
project's going

00:07:35,360 --> 00:07:39,120
we added the plus method right there

00:07:37,120 --> 00:07:39,919
implemented edition for double scalars

00:07:39,120 --> 00:07:44,000
and

00:07:39,919 --> 00:07:45,440
and you know we're off to the races

00:07:44,000 --> 00:07:48,000
one of the things i like to highlight

00:07:45,440 --> 00:07:49,680
about julia is that we started out

00:07:48,000 --> 00:07:51,840
you know i personally started out my

00:07:49,680 --> 00:07:52,800
work and my contributions to julia in

00:07:51,840 --> 00:07:55,680
india and i

00:07:52,800 --> 00:07:58,000
i wrote a majority of my julia code out

00:07:55,680 --> 00:07:59,680
of india for the first several years

00:07:58,000 --> 00:08:01,360
this is a picture of many of the early

00:07:59,680 --> 00:08:04,400
contributors to julia from

00:08:01,360 --> 00:08:06,160
julia corn india 2015 and

00:08:04,400 --> 00:08:07,599
we we wish to be able to do more julia

00:08:06,160 --> 00:08:09,840
cons in india going

00:08:07,599 --> 00:08:13,120
going forward but this is a small team

00:08:09,840 --> 00:08:15,199
that got started

00:08:13,120 --> 00:08:17,280
indian indian open source contributors

00:08:15,199 --> 00:08:19,520
have had an outsize uh

00:08:17,280 --> 00:08:21,360
impact on the julia language apart from

00:08:19,520 --> 00:08:23,039
some of the people i have here

00:08:21,360 --> 00:08:24,400
i should also mention that uh

00:08:23,039 --> 00:08:27,360
contributors from india

00:08:24,400 --> 00:08:28,639
are are a part of the google summer of

00:08:27,360 --> 00:08:30,560
core project

00:08:28,639 --> 00:08:32,240
every year at least you know anywhere

00:08:30,560 --> 00:08:34,000
between one third and one half of the

00:08:32,240 --> 00:08:36,159
contributors that we

00:08:34,000 --> 00:08:37,760
uh that we mentor in the google summer

00:08:36,159 --> 00:08:40,320
of course program are actually

00:08:37,760 --> 00:08:42,399
uh out of indian universities and so

00:08:40,320 --> 00:08:45,040
it's not only sort of people

00:08:42,399 --> 00:08:45,760
contributing to julia from the industry

00:08:45,040 --> 00:08:47,839
but we have

00:08:45,760 --> 00:08:48,959
a lot of people from indian universities

00:08:47,839 --> 00:08:50,399
undergraduates

00:08:48,959 --> 00:08:52,240
especially that are contributing to

00:08:50,399 --> 00:08:53,600
julia and the community has seen

00:08:52,240 --> 00:08:55,839
exponential growth

00:08:53,600 --> 00:08:57,600
it has been you know we've seen 25

00:08:55,839 --> 00:08:59,760
million downloads so far

00:08:57,600 --> 00:09:02,000
they've been compounding year on year

00:08:59,760 --> 00:09:04,160
tons and tons of youtube views check out

00:09:02,000 --> 00:09:07,440
alan edelman's computational thinking

00:09:04,160 --> 00:09:08,800
class computational thinking.mit.edu

00:09:07,440 --> 00:09:10,480
which i think is the best way to learn

00:09:08,800 --> 00:09:11,839
julia and some of the scientific machine

00:09:10,480 --> 00:09:14,399
learning

00:09:11,839 --> 00:09:15,519
examples that i showed before we have a

00:09:14,399 --> 00:09:17,760
forum views on

00:09:15,519 --> 00:09:18,800
uh we have we use this course for our

00:09:17,760 --> 00:09:20,160
forums

00:09:18,800 --> 00:09:22,160
you know the number of news articles the

00:09:20,160 --> 00:09:23,600
number of julia packages 5000 julia

00:09:22,160 --> 00:09:26,320
packages per day

00:09:23,600 --> 00:09:28,560
and it has been a phenomenal journey not

00:09:26,320 --> 00:09:29,440
only can you call these 5000 packages

00:09:28,560 --> 00:09:31,519
from julia

00:09:29,440 --> 00:09:34,000
but you can also call every python and

00:09:31,519 --> 00:09:36,720
our package and every cn fortran library

00:09:34,000 --> 00:09:38,480
every java library ever written so often

00:09:36,720 --> 00:09:39,839
people ask me that you know hey it's a

00:09:38,480 --> 00:09:41,519
new language

00:09:39,839 --> 00:09:43,519
and maybe it doesn't have enough

00:09:41,519 --> 00:09:45,360
packages and i say not only can we call

00:09:43,519 --> 00:09:47,519
the 5000 packages in julia

00:09:45,360 --> 00:09:49,519
but just about everything else and

00:09:47,519 --> 00:09:50,959
especially python packages

00:09:49,519 --> 00:09:53,440
are a breeze to call python in our

00:09:50,959 --> 00:09:56,800
packages you pretty much do not have to

00:09:53,440 --> 00:09:58,720
do any boilerplate to call them

00:09:56,800 --> 00:10:01,120
julia has now entered the mainstream we

00:09:58,720 --> 00:10:04,240
were number 19 on ieee spectrum

00:10:01,120 --> 00:10:05,519
and in 2020 we went from 47 to 23 on the

00:10:04,240 --> 00:10:07,360
tyobi index

00:10:05,519 --> 00:10:09,120
uh some of these indexes are very noisy

00:10:07,360 --> 00:10:10,079
but you know directionally julia has

00:10:09,120 --> 00:10:12,480
been doing

00:10:10,079 --> 00:10:14,399
really well on many measures of

00:10:12,480 --> 00:10:15,680
popularity of programming languages as

00:10:14,399 --> 00:10:18,480
flawed as they all are

00:10:15,680 --> 00:10:20,560
i think they do pitch they do sort of uh

00:10:18,480 --> 00:10:22,640
paint a long-term picture

00:10:20,560 --> 00:10:24,560
my personal estimate is that the julia

00:10:22,640 --> 00:10:27,519
community is over

00:10:24,560 --> 00:10:29,440
a million users now worldwide we've seen

00:10:27,519 --> 00:10:30,640
downloads from over 10 000 companies

00:10:29,440 --> 00:10:32,880
from

00:10:30,640 --> 00:10:34,320
julia computing you're seeing it being

00:10:32,880 --> 00:10:36,160
used and taught at over 1500

00:10:34,320 --> 00:10:37,040
universities including some of the best

00:10:36,160 --> 00:10:40,399
ones

00:10:37,040 --> 00:10:40,800
out there and you know here's some of

00:10:40,399 --> 00:10:42,320
the

00:10:40,800 --> 00:10:44,959
the universities that are actually

00:10:42,320 --> 00:10:47,040
teaching and using julia

00:10:44,959 --> 00:10:49,360
there's over 100 github organizations

00:10:47,040 --> 00:10:51,200
and this is this is unique about julia

00:10:49,360 --> 00:10:53,440
i think compared to many open source

00:10:51,200 --> 00:10:55,680
languages because julia was developed on

00:10:53,440 --> 00:10:57,600
github from a very early

00:10:55,680 --> 00:10:58,720
stage and so the github community

00:10:57,600 --> 00:11:02,720
structure match

00:10:58,720 --> 00:11:03,120
matches and maps to github organizations

00:11:02,720 --> 00:11:05,279
uh

00:11:03,120 --> 00:11:06,160
it's just something that has uh been

00:11:05,279 --> 00:11:08,160
built up uh

00:11:06,160 --> 00:11:10,320
organically over time and you can look

00:11:08,160 --> 00:11:12,959
at this right there's a climate

00:11:10,320 --> 00:11:14,320
org there's a eco julia which is for

00:11:12,959 --> 00:11:16,880
ecology flux ml

00:11:14,320 --> 00:11:19,440
is our machine learning organization

00:11:16,880 --> 00:11:21,680
julia actions is where a lot of our

00:11:19,440 --> 00:11:23,600
ci work uh you know and the github

00:11:21,680 --> 00:11:25,600
actions are held or julia bury for

00:11:23,600 --> 00:11:28,079
raspberry pi or turing lang here for

00:11:25,600 --> 00:11:30,240
example for probabilistic programming

00:11:28,079 --> 00:11:31,760
uh julia images for image processing so

00:11:30,240 --> 00:11:32,800
these these are just fantastic

00:11:31,760 --> 00:11:35,360
organizations

00:11:32,800 --> 00:11:36,000
um that that we've been seeing people

00:11:35,360 --> 00:11:38,079
put up

00:11:36,000 --> 00:11:39,600
and i just love all the all the logos

00:11:38,079 --> 00:11:41,360
that people have come up with

00:11:39,600 --> 00:11:45,440
which are sort of based on the julia

00:11:41,360 --> 00:11:45,440
logo itself and the colors and the theme

00:11:46,160 --> 00:11:50,639
how fast is julia it is really fast this

00:11:48,560 --> 00:11:52,399
is the benchmark that is on the the

00:11:50,639 --> 00:11:54,720
computer language benchmarks came on

00:11:52,399 --> 00:11:55,839
debian julia is in the top five with c

00:11:54,720 --> 00:11:58,800
rust in

00:11:55,839 --> 00:11:59,760
fortran you have julia right up there

00:11:58,800 --> 00:12:01,200
and

00:11:59,760 --> 00:12:02,800
you know really fast with graph

00:12:01,200 --> 00:12:05,200
processing you know with

00:12:02,800 --> 00:12:06,959
with basic data science machine learning

00:12:05,200 --> 00:12:08,880
loading csv files

00:12:06,959 --> 00:12:10,720
turns out to be really really fast in

00:12:08,880 --> 00:12:13,360
julia because of multi-threading

00:12:10,720 --> 00:12:15,680
and some of our data frames benchmarks

00:12:13,360 --> 00:12:18,639
also show julia comparing very well with

00:12:15,680 --> 00:12:20,240
some very um you know some very

00:12:18,639 --> 00:12:24,320
optimized tools like spark

00:12:20,240 --> 00:12:26,079
and pandas so so julia is fast but

00:12:24,320 --> 00:12:28,079
don't take my word for it try it out

00:12:26,079 --> 00:12:29,440
yourself there's a growing collection of

00:12:28,079 --> 00:12:31,040
julia books out there

00:12:29,440 --> 00:12:33,279
that that have been all contributed by

00:12:31,040 --> 00:12:35,839
the community many of these are from

00:12:33,279 --> 00:12:37,839
uh professors at stanford especially

00:12:35,839 --> 00:12:39,360
linear algebra and optimization are two

00:12:37,839 --> 00:12:40,639
of my favorite books i would highly

00:12:39,360 --> 00:12:42,079
recommend

00:12:40,639 --> 00:12:44,000
looking at some of these books these are

00:12:42,079 --> 00:12:46,000
beautifully produced books but then at

00:12:44,000 --> 00:12:48,079
the other extreme we have a book by

00:12:46,000 --> 00:12:49,760
ahansen gupta which is the little book

00:12:48,079 --> 00:12:52,079
of julia algorithms for

00:12:49,760 --> 00:12:52,959
for kids to learn julia and and we've

00:12:52,079 --> 00:12:54,720
seen kids as

00:12:52,959 --> 00:12:57,839
young as 10 years old learning julia

00:12:54,720 --> 00:12:57,839
from from that book

00:12:58,000 --> 00:13:01,360
one of the one of the most interesting

00:12:59,600 --> 00:13:04,000
things about julia i think

00:13:01,360 --> 00:13:05,839
is in terms of user experiences is pluto

00:13:04,000 --> 00:13:08,079
notebooks of course visual studio code

00:13:05,839 --> 00:13:09,279
has now become the ide of choice for

00:13:08,079 --> 00:13:11,440
julia users

00:13:09,279 --> 00:13:13,200
but pluto notebooks have been developed

00:13:11,440 --> 00:13:16,800
by by fonz van der pla

00:13:13,200 --> 00:13:19,360
from amsterdam and and

00:13:16,800 --> 00:13:20,560
this is a reactive lightweight notebook

00:13:19,360 --> 00:13:22,480
so jupyter is

00:13:20,560 --> 00:13:25,040
a general purpose notebook environment

00:13:22,480 --> 00:13:25,920
that is a language agnostic whereas

00:13:25,040 --> 00:13:28,240
pluto is

00:13:25,920 --> 00:13:28,959
a julia specific notebook which means

00:13:28,240 --> 00:13:30,720
that

00:13:28,959 --> 00:13:32,320
it is reactive when you update a cell

00:13:30,720 --> 00:13:33,440
out there it will automatically update

00:13:32,320 --> 00:13:35,360
the calculations

00:13:33,440 --> 00:13:36,720
in all the other cells i would highly

00:13:35,360 --> 00:13:40,639
recommend checking out

00:13:36,720 --> 00:13:43,120
the juliacon 2020 um talk by fonz

00:13:40,639 --> 00:13:45,040
i will also point out that juliacon 2021

00:13:43,120 --> 00:13:46,880
is coming up very soon it's going to be

00:13:45,040 --> 00:13:49,199
at the end of july

00:13:46,880 --> 00:13:50,800
sign up at juliacon.org sign ups are

00:13:49,199 --> 00:13:52,720
free and the conference is online this

00:13:50,800 --> 00:13:54,720
year

00:13:52,720 --> 00:13:57,120
so all this is great now how do we go

00:13:54,720 --> 00:14:00,240
from you know building a community

00:13:57,120 --> 00:14:02,079
building out julia to sort of

00:14:00,240 --> 00:14:03,600
you know solving all those interesting

00:14:02,079 --> 00:14:05,199
problems that i talked about right

00:14:03,600 --> 00:14:06,959
problems that the world is facing

00:14:05,199 --> 00:14:10,240
problems in you know in climate

00:14:06,959 --> 00:14:11,040
and uh problems you know in in combating

00:14:10,240 --> 00:14:13,760
a pandemic

00:14:11,040 --> 00:14:15,040
or you know how how do you cool your

00:14:13,760 --> 00:14:16,560
houses when the weather

00:14:15,040 --> 00:14:19,199
keeps heating up or the climate keeps

00:14:16,560 --> 00:14:20,000
heating up machine learning is a major

00:14:19,199 --> 00:14:22,720
part of this

00:14:20,000 --> 00:14:24,560
and and what julia does fantastically

00:14:22,720 --> 00:14:27,199
compared to many of the other

00:14:24,560 --> 00:14:28,160
programming languages is that it takes

00:14:27,199 --> 00:14:30,399
machine learning

00:14:28,160 --> 00:14:31,760
to the next level by integrating it

00:14:30,399 --> 00:14:33,519
deeply into the language

00:14:31,760 --> 00:14:36,720
a concept that we refer to as

00:14:33,519 --> 00:14:38,560
differentiable programming

00:14:36,720 --> 00:14:40,720
and and the way this all works out is as

00:14:38,560 --> 00:14:42,399
follows right everyone's familiar with

00:14:40,720 --> 00:14:44,079
machine learning enormous data sets

00:14:42,399 --> 00:14:44,959
distributed computing lots of new

00:14:44,079 --> 00:14:46,720
hardware

00:14:44,959 --> 00:14:48,720
got around on raspberry pi's gotta run

00:14:46,720 --> 00:14:49,120
on android but what really makes it all

00:14:48,720 --> 00:14:51,519
happen

00:14:49,120 --> 00:14:53,600
is automatic differentiation the ability

00:14:51,519 --> 00:14:55,120
to differentiate your programs not just

00:14:53,600 --> 00:14:56,160
your neural networks and do back

00:14:55,120 --> 00:14:58,399
propagation

00:14:56,160 --> 00:15:01,040
but can i do back propagation through my

00:14:58,399 --> 00:15:02,480
entire julia programs through my solvers

00:15:01,040 --> 00:15:04,480
you know through my optimization

00:15:02,480 --> 00:15:05,839
routines through you know

00:15:04,480 --> 00:15:07,360
through just about everything right

00:15:05,839 --> 00:15:08,720
through differential equation solvers

00:15:07,360 --> 00:15:11,440
and so on and so forth

00:15:08,720 --> 00:15:13,279
and that is this basic idea is at the

00:15:11,440 --> 00:15:15,680
crux of all of julius iml

00:15:13,279 --> 00:15:17,440
ecosystem and it's possible because

00:15:15,680 --> 00:15:18,639
julia's machine learning libraries have

00:15:17,440 --> 00:15:21,920
been natively written

00:15:18,639 --> 00:15:23,839
in julia itself so for example if you

00:15:21,920 --> 00:15:27,440
look at pytorch or tensorflow

00:15:23,839 --> 00:15:29,279
there's tons of cuda and c

00:15:27,440 --> 00:15:30,560
but but julia's machine learning

00:15:29,279 --> 00:15:34,959
libraries are written

00:15:30,560 --> 00:15:34,959
in native julia itself

00:15:35,279 --> 00:15:41,360
here's julia gpu so so julia also runs

00:15:38,320 --> 00:15:43,040
natively on gpus and

00:15:41,360 --> 00:15:44,480
this is just these are benchmarks

00:15:43,040 --> 00:15:45,279
compared to cuda c as you can see

00:15:44,480 --> 00:15:47,360
they're

00:15:45,279 --> 00:15:48,560
you know almost as fast in some cases

00:15:47,360 --> 00:15:51,279
faster than cuda c

00:15:48,560 --> 00:15:53,279
and some cases a little bit slower but

00:15:51,279 --> 00:15:54,000
native gpu programming in julia is

00:15:53,279 --> 00:15:56,399
essential for

00:15:54,000 --> 00:15:57,519
the julia machine learning ecosystem and

00:15:56,399 --> 00:15:59,120
the scientific machine learning

00:15:57,519 --> 00:16:00,880
ecosystem in julia

00:15:59,120 --> 00:16:02,800
it's been used for tons of interesting

00:16:00,880 --> 00:16:03,920
projects i would love to call out a

00:16:02,800 --> 00:16:06,320
project by jonathan

00:16:03,920 --> 00:16:08,560
jonathan laura from carnegie mellon

00:16:06,320 --> 00:16:09,839
university or called alphazero.jl which

00:16:08,560 --> 00:16:11,680
is

00:16:09,839 --> 00:16:13,199
alpha zero implemented in just a few

00:16:11,680 --> 00:16:14,240
hundred maybe a couple of thousands of

00:16:13,199 --> 00:16:16,959
lines of julia

00:16:14,240 --> 00:16:17,920
and it you know hear more about it at

00:16:16,959 --> 00:16:21,519
juliacon

00:16:17,920 --> 00:16:21,519
or download the package and try it out

00:16:21,680 --> 00:16:25,279
so all of this comes together the gpu

00:16:23,680 --> 00:16:26,959
capabilities the flux

00:16:25,279 --> 00:16:29,360
machine learning capabilities and just

00:16:26,959 --> 00:16:30,959
about everything in julia comes together

00:16:29,360 --> 00:16:32,399
in you know with what we call

00:16:30,959 --> 00:16:34,399
differentiable programming

00:16:32,399 --> 00:16:36,639
and and what julia offers is

00:16:34,399 --> 00:16:38,240
language-wide differentiable programming

00:16:36,639 --> 00:16:40,560
which means that not only with your

00:16:38,240 --> 00:16:41,440
neural networks but any arbitrary julia

00:16:40,560 --> 00:16:43,360
code

00:16:41,440 --> 00:16:45,040
is amenable to differentiation which

00:16:43,360 --> 00:16:46,240
means it's amenable to be put into a

00:16:45,040 --> 00:16:47,920
machine learning loop

00:16:46,240 --> 00:16:50,560
it's amenable to stochastic gradient

00:16:47,920 --> 00:16:52,399
descent and optimization and this is

00:16:50,560 --> 00:16:53,360
something that scientists and engineers

00:16:52,399 --> 00:16:56,399
around the world

00:16:53,360 --> 00:16:57,519
are combining they're taking julia's

00:16:56,399 --> 00:16:58,880
traditional machine learning

00:16:57,519 --> 00:17:01,040
capabilities and deep learning

00:16:58,880 --> 00:17:03,920
capabilities like the flux library

00:17:01,040 --> 00:17:04,640
and combining that with all the

00:17:03,920 --> 00:17:05,919
scientific

00:17:04,640 --> 00:17:08,319
and machine learning and image

00:17:05,919 --> 00:17:10,559
processing and data processing

00:17:08,319 --> 00:17:11,360
and differential equation libraries

00:17:10,559 --> 00:17:13,360
together

00:17:11,360 --> 00:17:14,559
so that you can apply some of these

00:17:13,360 --> 00:17:18,079
ideas

00:17:14,559 --> 00:17:21,039
into into just about every julia program

00:17:18,079 --> 00:17:22,880
ever written and combined your

00:17:21,039 --> 00:17:24,559
data-driven machine learning that comes

00:17:22,880 --> 00:17:26,240
out of deep learning with

00:17:24,559 --> 00:17:28,880
model driven scientific learning and

00:17:26,240 --> 00:17:30,320
sort of get the best of both worlds

00:17:28,880 --> 00:17:32,400
i would highly recommend looking at

00:17:30,320 --> 00:17:34,799
christopher caucus's talks online

00:17:32,400 --> 00:17:36,320
where he talks about you know he's the

00:17:34,799 --> 00:17:37,520
author of julius scientific machine

00:17:36,320 --> 00:17:39,039
learning ecosystem

00:17:37,520 --> 00:17:40,559
and he talks about all these different

00:17:39,039 --> 00:17:42,480
applications if you just

00:17:40,559 --> 00:17:44,000
look at look him up on youtube

00:17:42,480 --> 00:17:45,200
applications in pharmaceuticals in

00:17:44,000 --> 00:17:47,919
engineering and chemistry in

00:17:45,200 --> 00:17:49,840
manufacturing in batteries in climate

00:17:47,919 --> 00:17:52,400
this is this is how the ecosystem comes

00:17:49,840 --> 00:17:54,160
together and this is why i personally

00:17:52,400 --> 00:17:55,840
believe that a programming language can

00:17:54,160 --> 00:17:57,679
really change the world

00:17:55,840 --> 00:17:59,600
it's it's all built by the julia

00:17:57,679 --> 00:18:01,280
community it builds up

00:17:59,600 --> 00:18:03,840
one foundation you know builds up from

00:18:01,280 --> 00:18:06,799
the foundation one step at a time

00:18:03,840 --> 00:18:09,280
and goes up all the way to solving

00:18:06,799 --> 00:18:12,640
amazing and interesting problems

00:18:09,280 --> 00:18:14,400
out there what do we do at julia

00:18:12,640 --> 00:18:15,919
computing i'd like to sort of leave you

00:18:14,400 --> 00:18:18,160
guys with a small advertisement about

00:18:15,919 --> 00:18:21,280
julia hub julia hub is a platform

00:18:18,160 --> 00:18:22,160
that is built to provide the best julia

00:18:21,280 --> 00:18:24,480
experience

00:18:22,160 --> 00:18:26,480
where you can explore build run scale

00:18:24,480 --> 00:18:28,799
and visualize your julia programs

00:18:26,480 --> 00:18:29,520
you get online vs code editing along

00:18:28,799 --> 00:18:32,240
with

00:18:29,520 --> 00:18:34,960
scaling julia programs to large numbers

00:18:32,240 --> 00:18:37,280
of gpus and cpus on the cloud

00:18:34,960 --> 00:18:38,880
and all these amazing workflows right

00:18:37,280 --> 00:18:39,840
from the julia language and the julia

00:18:38,880 --> 00:18:42,000
compiler

00:18:39,840 --> 00:18:43,360
the thousands of libraries all the

00:18:42,000 --> 00:18:44,720
machine learning ecosystem the

00:18:43,360 --> 00:18:46,080
scientific machine learning tools the

00:18:44,720 --> 00:18:49,120
parallelization

00:18:46,080 --> 00:18:50,880
the gpu computing all the way up to

00:18:49,120 --> 00:18:53,280
you know solving some of these uh

00:18:50,880 --> 00:18:54,480
problems these entire ecosystems are

00:18:53,280 --> 00:18:56,320
being put together

00:18:54,480 --> 00:18:58,720
on julia hub so that they're available

00:18:56,320 --> 00:19:00,320
to everyone from students to

00:18:58,720 --> 00:19:02,640
scientists at some of the best companies

00:19:00,320 --> 00:19:05,200
out there at uh you know

00:19:02,640 --> 00:19:07,360
just just put it all uh on their

00:19:05,200 --> 00:19:09,360
fingertips that's what julia hub enables

00:19:07,360 --> 00:19:11,600
so i would urge you all to try it out

00:19:09,360 --> 00:19:14,240
you know try it out at juliahub.com

00:19:11,600 --> 00:19:15,039
and let us know what your experience is

00:19:14,240 --> 00:19:17,120
out there

00:19:15,039 --> 00:19:19,039
come join the julia community on github

00:19:17,120 --> 00:19:22,559
and i'm going to be

00:19:19,039 --> 00:19:26,640
talking on um on the discussions

00:19:22,559 --> 00:19:26,640
right after my talk thank you very much

00:19:32,080 --> 00:19:39,760
wow okay that was uh you know

00:19:36,080 --> 00:19:40,160
viraja who has gave such a nice overview

00:19:39,760 --> 00:19:43,039
of

00:19:40,160 --> 00:19:44,240
uh julia hey viral you know we're just

00:19:43,039 --> 00:19:46,640
having a little bit of

00:19:44,240 --> 00:19:47,919
you know an early holi celebration out

00:19:46,640 --> 00:19:50,320
here so all of these

00:19:47,919 --> 00:19:51,120
uh colors and confetti is what you can

00:19:50,320 --> 00:19:52,960
see

00:19:51,120 --> 00:19:55,120
but uh thanks a lot that was that was a

00:19:52,960 --> 00:19:58,080
really nice session about julia and we

00:19:55,120 --> 00:20:00,960
have quite some questions uh coming in

00:19:58,080 --> 00:20:01,600
so uh the first thing uh you know vidal

00:20:00,960 --> 00:20:05,039
that

00:20:01,600 --> 00:20:06,000
the developers want to know is julia

00:20:05,039 --> 00:20:08,799
being an open

00:20:06,000 --> 00:20:09,360
source programming language as well as

00:20:08,799 --> 00:20:11,280
uh

00:20:09,360 --> 00:20:13,280
you know where you have a business so

00:20:11,280 --> 00:20:15,520
how does how does julia computing build

00:20:13,280 --> 00:20:17,200
an open source business

00:20:15,520 --> 00:20:19,039
that's a very that's a very good

00:20:17,200 --> 00:20:19,520
question actually and one that i often

00:20:19,039 --> 00:20:21,520
get

00:20:19,520 --> 00:20:22,960
that you know what's what's open source

00:20:21,520 --> 00:20:24,880
and what's not and

00:20:22,960 --> 00:20:26,559
and how does an open source company make

00:20:24,880 --> 00:20:28,960
money and um

00:20:26,559 --> 00:20:30,640
you know we are we are committed to the

00:20:28,960 --> 00:20:33,039
open source community that's what

00:20:30,640 --> 00:20:35,919
created julia and the company exists

00:20:33,039 --> 00:20:36,720
to sort of leverage the community add to

00:20:35,919 --> 00:20:39,919
the community

00:20:36,720 --> 00:20:41,039
and and just sort of uh you know grow

00:20:39,919 --> 00:20:43,280
the community uh

00:20:41,039 --> 00:20:44,480
going forward so the way we the way we

00:20:43,280 --> 00:20:46,799
do it is that

00:20:44,480 --> 00:20:48,400
all of julia is open source the language

00:20:46,799 --> 00:20:50,799
the compiler the ecosystem

00:20:48,400 --> 00:20:51,440
and we are major contributors to it all

00:20:50,799 --> 00:20:53,919
the

00:20:51,440 --> 00:20:56,000
co-creators of the julia language are

00:20:53,919 --> 00:20:56,720
co-founders of julia computing and we

00:20:56,000 --> 00:20:59,039
have

00:20:56,720 --> 00:21:00,480
uh the best interests of the communities

00:20:59,039 --> 00:21:02,480
at heart

00:21:00,480 --> 00:21:04,960
what we like to do for our business for

00:21:02,480 --> 00:21:08,240
our customers is build a cloud-based

00:21:04,960 --> 00:21:09,039
software as a service product which is

00:21:08,240 --> 00:21:11,600
julia hub

00:21:09,039 --> 00:21:13,840
which is what was my last slide and we

00:21:11,600 --> 00:21:16,400
expect that by providing julia hub

00:21:13,840 --> 00:21:18,559
on the cloud to all the julia users out

00:21:16,400 --> 00:21:19,120
there in in enterprises and around the

00:21:18,559 --> 00:21:21,520
world

00:21:19,120 --> 00:21:23,039
is how we'll build a successful business

00:21:21,520 --> 00:21:24,640
and um

00:21:23,039 --> 00:21:26,159
these are these are very well aligned

00:21:24,640 --> 00:21:27,600
incentives because

00:21:26,159 --> 00:21:29,760
this means that there is not going to

00:21:27,600 --> 00:21:30,320
it's not an open core model it's not

00:21:29,760 --> 00:21:32,480
that

00:21:30,320 --> 00:21:35,120
optimization level dash o3 is only

00:21:32,480 --> 00:21:37,039
available by julia computing uh

00:21:35,120 --> 00:21:38,400
you know to its customers but that

00:21:37,039 --> 00:21:40,960
everything out there is

00:21:38,400 --> 00:21:42,240
in the open source is in the open domain

00:21:40,960 --> 00:21:44,559
and the company actually

00:21:42,240 --> 00:21:47,360
integrates it into a cloud service for

00:21:44,559 --> 00:21:47,360
enterprise users

00:21:47,679 --> 00:21:52,640
so i love that julia's open source right

00:21:50,880 --> 00:21:54,240
where can someone go and learn more

00:21:52,640 --> 00:21:55,600
about julia are there like online

00:21:54,240 --> 00:21:58,240
courses or is there anything that you

00:21:55,600 --> 00:21:58,240
can point us to

00:21:59,200 --> 00:22:03,919
so there's um if you go to julia

00:22:01,919 --> 00:22:05,600
lang.org which is the julia website or

00:22:03,919 --> 00:22:08,240
if you just google julia

00:22:05,600 --> 00:22:10,080
you you know instead of getting um you

00:22:08,240 --> 00:22:12,240
know uh

00:22:10,080 --> 00:22:13,360
actresses named julia you nowadays get

00:22:12,240 --> 00:22:14,799
the julia language

00:22:13,360 --> 00:22:17,039
especially if you're a programmer on the

00:22:14,799 --> 00:22:17,679
google top hit if you go to the julia

00:22:17,039 --> 00:22:20,559
website

00:22:17,679 --> 00:22:23,520
um there's a learning section and we

00:22:20,559 --> 00:22:25,440
also have juliacademy.com which are

00:22:23,520 --> 00:22:27,200
a free online courses for getting

00:22:25,440 --> 00:22:28,640
started with julia in addition to all

00:22:27,200 --> 00:22:31,200
the books that i mentioned

00:22:28,640 --> 00:22:33,520
but the julia learning the the learning

00:22:31,200 --> 00:22:37,200
page on julia langar org

00:22:33,520 --> 00:22:37,200
puts everything together for learning

00:22:38,000 --> 00:22:41,120
that is that is viral that's gonna be

00:22:40,080 --> 00:22:43,840
probably my

00:22:41,120 --> 00:22:44,799
favorite sentence for the day that you

00:22:43,840 --> 00:22:46,320
said you know like

00:22:44,799 --> 00:22:48,480
when you go on the search engine and

00:22:46,320 --> 00:22:49,919
search for julia instead of actresses

00:22:48,480 --> 00:22:50,720
you'll find the open source programming

00:22:49,919 --> 00:22:52,880
language that's

00:22:50,720 --> 00:22:53,760
that's that's really my best code for

00:22:52,880 --> 00:22:57,360
today you know

00:22:53,760 --> 00:22:57,760
so uh that's really great so uh coming

00:22:57,360 --> 00:23:01,360
back

00:22:57,760 --> 00:23:03,039
there's one more question so uh

00:23:01,360 --> 00:23:04,400
if you had to do you know one thing

00:23:03,039 --> 00:23:06,159
differently building the julia

00:23:04,400 --> 00:23:09,840
programming language today

00:23:06,159 --> 00:23:09,840
uh what would you have done

00:23:10,080 --> 00:23:13,840
yeah that's uh that's a very hard

00:23:12,080 --> 00:23:15,919
question actually what what would we

00:23:13,840 --> 00:23:17,440
have done differently uh if if we were

00:23:15,919 --> 00:23:21,280
to build julia today right

00:23:17,440 --> 00:23:23,280
and uh i i i mean there are

00:23:21,280 --> 00:23:25,280
it's it's hard to say right because had

00:23:23,280 --> 00:23:26,320
we taken a slightly different path would

00:23:25,280 --> 00:23:29,360
things have been

00:23:26,320 --> 00:23:31,679
been different in some way um

00:23:29,360 --> 00:23:33,520
i to be honest you know it's all about

00:23:31,679 --> 00:23:36,480
the community and the journey

00:23:33,520 --> 00:23:38,320
and uh you know that's sort of far more

00:23:36,480 --> 00:23:39,039
interesting than any sort of technical

00:23:38,320 --> 00:23:42,080
decision

00:23:39,039 --> 00:23:42,480
around the language itself if anything i

00:23:42,080 --> 00:23:45,120
think

00:23:42,480 --> 00:23:46,400
um you know what what i would love to

00:23:45,120 --> 00:23:49,520
see happen in julia

00:23:46,400 --> 00:23:51,520
is you know some of the decisions that

00:23:49,520 --> 00:23:54,080
if if you were to start out now there

00:23:51,520 --> 00:23:56,000
are just so many more mature open source

00:23:54,080 --> 00:23:57,360
language frameworks that we can use

00:23:56,000 --> 00:23:58,720
today that were not available when we

00:23:57,360 --> 00:24:02,000
started 2009

00:23:58,720 --> 00:24:02,640
llvm had just come out back then and it

00:24:02,000 --> 00:24:04,960
was

00:24:02,640 --> 00:24:06,480
it was not what it is today but it has

00:24:04,960 --> 00:24:08,880
it has definitely been

00:24:06,480 --> 00:24:10,799
difficult for us working with llvm and

00:24:08,880 --> 00:24:12,640
seeing sort of some of the

00:24:10,799 --> 00:24:13,840
the challenges and so on and so forth so

00:24:12,640 --> 00:24:15,120
we might we might do a few things

00:24:13,840 --> 00:24:17,360
differently today it's not

00:24:15,120 --> 00:24:18,960
it's not clear what exactly would they

00:24:17,360 --> 00:24:20,400
be but um

00:24:18,960 --> 00:24:22,000
i you know i guess one of the things i

00:24:20,400 --> 00:24:24,159
would say is that i would

00:24:22,000 --> 00:24:25,600
work for even deeper integration of some

00:24:24,159 --> 00:24:27,840
of the machine learning

00:24:25,600 --> 00:24:29,679
uh tools that we talked about during my

00:24:27,840 --> 00:24:30,559
talk and and they would become even more

00:24:29,679 --> 00:24:32,320
first class

00:24:30,559 --> 00:24:34,080
as part of the julia language than they

00:24:32,320 --> 00:24:37,279
are today given just how important

00:24:34,080 --> 00:24:37,279
some of these technologies are

00:24:39,440 --> 00:24:42,960
nice you know so so you mentioned i like

00:24:41,520 --> 00:24:44,559
how you mentioned you know it was

00:24:42,960 --> 00:24:46,159
it's more about the community and the

00:24:44,559 --> 00:24:47,760
journey so uh

00:24:46,159 --> 00:24:49,039
where can where can someone go and then

00:24:47,760 --> 00:24:49,919
you know interact with the julia

00:24:49,039 --> 00:24:52,799
community

00:24:49,919 --> 00:24:54,799
find peers or find someone really to uh

00:24:52,799 --> 00:24:56,640
help them grow in their journey

00:24:54,799 --> 00:25:01,120
in learning the language and kind of

00:24:56,640 --> 00:25:06,159
like exploring it to its depth

00:25:01,120 --> 00:25:07,840
yeah if so so again on julialang.org you

00:25:06,159 --> 00:25:10,559
have the community section

00:25:07,840 --> 00:25:11,760
which has all the community pointers we

00:25:10,559 --> 00:25:14,919
use discourse for

00:25:11,760 --> 00:25:16,240
our mailing list and discussion forum so

00:25:14,919 --> 00:25:19,120
discourse.julialang.org

00:25:16,240 --> 00:25:21,039
is a very vibrant community out there um

00:25:19,120 --> 00:25:23,440
we also have the julia lang slack which

00:25:21,039 --> 00:25:26,720
has over 5000 people on it

00:25:23,440 --> 00:25:28,240
and it's just insane um so that that's

00:25:26,720 --> 00:25:30,799
that's a good way for interactive

00:25:28,240 --> 00:25:32,480
communication but a lot of our community

00:25:30,799 --> 00:25:33,200
interactions also happen on github

00:25:32,480 --> 00:25:35,360
because you know

00:25:33,200 --> 00:25:37,039
you know if you post in a github comment

00:25:35,360 --> 00:25:39,039
and someone replies to you

00:25:37,039 --> 00:25:40,159
it's almost like chat it happens in real

00:25:39,039 --> 00:25:43,039
time and

00:25:40,159 --> 00:25:43,679
a lot of uh a lot of those commun a lot

00:25:43,039 --> 00:25:45,919
of those

00:25:43,679 --> 00:25:46,960
communications actually get you know

00:25:45,919 --> 00:25:48,880
archived and are

00:25:46,960 --> 00:25:50,799
crawlable by google and someone else can

00:25:48,880 --> 00:25:52,320
come a few months later a year later

00:25:50,799 --> 00:25:54,240
join into the discussion

00:25:52,320 --> 00:25:55,760
so there's there's many different forums

00:25:54,240 --> 00:25:57,200
uh for four people

00:25:55,760 --> 00:25:59,440
there's chat there's mailing lists

00:25:57,200 --> 00:26:03,200
there's github and all of them

00:25:59,440 --> 00:26:06,880
are are phenomenal also julia packages

00:26:03,200 --> 00:26:08,320
are all 100 on github well maybe not 100

00:26:06,880 --> 00:26:10,480
but definitely 99

00:26:08,320 --> 00:26:12,559
on github and all of them have their own

00:26:10,480 --> 00:26:14,640
issue trackers on github as well

00:26:12,559 --> 00:26:16,159
so i would say that you know if you're

00:26:14,640 --> 00:26:17,760
engaging with the community

00:26:16,159 --> 00:26:19,760
there's the language but then there's

00:26:17,760 --> 00:26:21,279
also all the packages and and a lot of

00:26:19,760 --> 00:26:22,159
people end up often working on the

00:26:21,279 --> 00:26:23,679
packages

00:26:22,159 --> 00:26:26,000
one of the things we've done over the

00:26:23,679 --> 00:26:27,760
last few years is is actually made it

00:26:26,000 --> 00:26:29,840
easy for people to do

00:26:27,760 --> 00:26:31,120
things in packages rather than in core

00:26:29,840 --> 00:26:33,919
julia itself

00:26:31,120 --> 00:26:35,679
and and sort of uh make it easy to

00:26:33,919 --> 00:26:37,039
extend julie and that's

00:26:35,679 --> 00:26:38,880
that's where we see a lot of discussion

00:26:37,039 --> 00:26:41,279
actually moving into packages going

00:26:38,880 --> 00:26:41,279
forward

00:26:42,559 --> 00:26:46,559
great thank you so much for awesome

00:26:44,799 --> 00:26:48,480
fantastic

00:26:46,559 --> 00:26:50,159
and so yeah everyone head on over to

00:26:48,480 --> 00:26:51,679
github discussions uh is going to be

00:26:50,159 --> 00:26:53,279
there for the next 30 minutes to

00:26:51,679 --> 00:26:54,720
continue answering your questions and

00:26:53,279 --> 00:26:56,880
you can post your questions at github

00:26:54,720 --> 00:27:00,159
satellite forward slash discussions

00:26:56,880 --> 00:27:01,120
see you later vera thank you thanks for

00:27:00,159 --> 00:27:07,840
asking

00:27:01,120 --> 00:27:07,840

YouTube URL: https://www.youtube.com/watch?v=cLFfTE2KWrk


