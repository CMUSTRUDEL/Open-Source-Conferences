Title: GitHub Satellite India 2021 - How GitHub uses GitHub for collaboration
Publication date: 2021-03-28
Playlist: GitHub Satellite India 2021 - DevOps: Day 2
Description: 
	Presented by Satish Kumar Nankani, Staff Engineering Manager @ GitHub

GitHub uses GitHub for building GitHub! In this session, Satish Nankani, the Staff Engineering Manager at GitHub, will provide a walkthrough of how GitHub uses GitHub for collaborative development, and how your teams can do the same in order to build and ship faster than ever.


As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:04,790 --> 00:00:10,480
[Music]

00:00:09,040 --> 00:00:13,040
namaste everyone

00:00:10,480 --> 00:00:16,160
welcome to github satellite github is a

00:00:13,040 --> 00:00:18,320
place where people build software

00:00:16,160 --> 00:00:19,199
every day millions of developers use

00:00:18,320 --> 00:00:21,600
github

00:00:19,199 --> 00:00:22,960
to create things that touch billions of

00:00:21,600 --> 00:00:25,199
people

00:00:22,960 --> 00:00:26,960
to be at github is an awesome

00:00:25,199 --> 00:00:29,359
responsibility

00:00:26,960 --> 00:00:30,400
and elite the chat ops integration theme

00:00:29,359 --> 00:00:32,480
in github

00:00:30,400 --> 00:00:33,440
building products like slack and teams

00:00:32,480 --> 00:00:35,600
github

00:00:33,440 --> 00:00:37,600
with a goal to amplify engineering

00:00:35,600 --> 00:00:41,840
productivity

00:00:37,600 --> 00:00:45,440
i am satish satish nankani

00:00:41,840 --> 00:00:47,039
let's start with numbers chat ops is a

00:00:45,440 --> 00:00:49,680
team of nine engineers

00:00:47,039 --> 00:00:51,600
and the team has done 80 deployments in

00:00:49,680 --> 00:00:54,239
last four weeks

00:00:51,600 --> 00:00:56,160
making the average to four deployments

00:00:54,239 --> 00:00:58,239
per working day

00:00:56,160 --> 00:01:00,399
it is truly awesome from a devops

00:00:58,239 --> 00:01:02,640
metrics point of view

00:01:00,399 --> 00:01:04,239
i'll let you all guess what the other

00:01:02,640 --> 00:01:06,720
phone numbers are

00:01:04,239 --> 00:01:09,280
and post your answers in the github

00:01:06,720 --> 00:01:09,280
discussion

00:01:10,560 --> 00:01:16,400
or twitter and use hashtag github

00:01:13,840 --> 00:01:16,400
satellite

00:01:17,200 --> 00:01:21,119
there is a story behind these numbers

00:01:19,600 --> 00:01:24,240
that makes them magical

00:01:21,119 --> 00:01:28,320
and absolutely motivating for my team

00:01:24,240 --> 00:01:29,680
the story of emotions started last year

00:01:28,320 --> 00:01:31,759
in march 2020

00:01:29,680 --> 00:01:33,439
and i still remember sitting in a

00:01:31,759 --> 00:01:35,520
conference room

00:01:33,439 --> 00:01:36,799
with leadership team pitching the idea

00:01:35,520 --> 00:01:40,640
to build the vision

00:01:36,799 --> 00:01:44,000
of building a unified chat ops platform

00:01:40,640 --> 00:01:45,680
my team was super excited to build this

00:01:44,000 --> 00:01:49,759
vision

00:01:45,680 --> 00:01:49,759
project execution barely started

00:01:51,520 --> 00:01:54,720
and everyone in the company was asked to

00:01:53,600 --> 00:01:58,719
work from home

00:01:54,720 --> 00:01:59,600
due to pandemic major blow to team

00:01:58,719 --> 00:02:04,240
collaboration

00:01:59,600 --> 00:02:04,240
resulted in reduced team velocity

00:02:04,799 --> 00:02:09,840
keeping the team velocity aside every

00:02:07,840 --> 00:02:12,400
engineer was

00:02:09,840 --> 00:02:13,440
going through varying emotions making

00:02:12,400 --> 00:02:17,599
them feel

00:02:13,440 --> 00:02:21,040
anxious isolated annoyed worried

00:02:17,599 --> 00:02:24,879
and sometimes frozen and stuck

00:02:21,040 --> 00:02:27,599
but this is past coming back to present

00:02:24,879 --> 00:02:29,360
we are just a couple of weeks away from

00:02:27,599 --> 00:02:30,560
shipping our fourth deliverable and

00:02:29,360 --> 00:02:34,080
making the

00:02:30,560 --> 00:02:37,200
vision a reality in april

00:02:34,080 --> 00:02:38,800
in next couple of weeks i am super

00:02:37,200 --> 00:02:41,920
excited

00:02:38,800 --> 00:02:45,760
to share the journey of unified chat

00:02:41,920 --> 00:02:49,120
i'm super excited my team's journey

00:02:45,760 --> 00:02:49,120
and give a walkthrough of

00:02:49,440 --> 00:02:56,400
how github uses github for collaboration

00:02:53,200 --> 00:02:58,640
i mean inclusive collaboration and

00:02:56,400 --> 00:03:00,480
along the way share practices and

00:02:58,640 --> 00:03:02,480
processes in engineering

00:03:00,480 --> 00:03:03,599
that help us shift faster whether we

00:03:02,480 --> 00:03:07,680
work from home

00:03:03,599 --> 00:03:08,159
or office in simple words collaboration

00:03:07,680 --> 00:03:10,720
means

00:03:08,159 --> 00:03:11,519
working with others by end of this

00:03:10,720 --> 00:03:13,760
session

00:03:11,519 --> 00:03:14,560
we will learn about eight key elements

00:03:13,760 --> 00:03:16,959
to enable an

00:03:14,560 --> 00:03:18,000
effective and inclusive collaboration

00:03:16,959 --> 00:03:22,159
collaborative culture

00:03:18,000 --> 00:03:22,159
in organization using github

00:03:23,200 --> 00:03:26,879
the code that powers github.com mostly

00:03:26,080 --> 00:03:29,120
resides

00:03:26,879 --> 00:03:30,400
in a mono repo it's surprising but

00:03:29,120 --> 00:03:34,239
that's the facts

00:03:30,400 --> 00:03:37,120
and to enable team academy every team

00:03:34,239 --> 00:03:39,519
own repository setup specifically for

00:03:37,120 --> 00:03:41,360
the issues and team documentation

00:03:39,519 --> 00:03:42,720
allowing them to tune their day-to-day

00:03:41,360 --> 00:03:44,720
process

00:03:42,720 --> 00:03:46,959
there are also teams which maintain

00:03:44,720 --> 00:03:51,360
their code in dedicated repo

00:03:46,959 --> 00:03:51,360
i have got a picture of slack repository

00:03:51,519 --> 00:03:56,239
which stores the chat ops code and the

00:03:53,760 --> 00:03:58,840
team has

00:03:56,239 --> 00:04:00,000
enabled almost all the features of

00:03:58,840 --> 00:04:02,640
github

00:04:00,000 --> 00:04:03,760
structurally everything in github

00:04:02,640 --> 00:04:06,720
organization

00:04:03,760 --> 00:04:07,920
starts with the repository there is a

00:04:06,720 --> 00:04:11,040
repository for

00:04:07,920 --> 00:04:14,480
everything literally for onboarding

00:04:11,040 --> 00:04:17,519
job posting benefits values even

00:04:14,480 --> 00:04:19,519
entitlements are maintained in a

00:04:17,519 --> 00:04:23,120
repository

00:04:19,519 --> 00:04:25,040
the best part of the setup is it helps

00:04:23,120 --> 00:04:26,880
everyone in the company to find the

00:04:25,040 --> 00:04:29,840
information quickly

00:04:26,880 --> 00:04:29,840
and easily

00:04:30,080 --> 00:04:34,080
planning and tracking is standardized

00:04:31,919 --> 00:04:36,240
across teams in github

00:04:34,080 --> 00:04:39,280
the goals translate into small

00:04:36,240 --> 00:04:43,040
consistently sized issues classified as

00:04:39,280 --> 00:04:46,320
initiatives epics features and tasks

00:04:43,040 --> 00:04:48,960
to track work across all of engineering

00:04:46,320 --> 00:04:50,720
and this facilitates us to speak a

00:04:48,960 --> 00:04:52,960
consistent language

00:04:50,720 --> 00:04:56,479
in terms of scoping and prioritization

00:04:52,960 --> 00:04:59,199
while collaborating with teams

00:04:56,479 --> 00:05:01,600
project boards are used across teams to

00:04:59,199 --> 00:05:03,280
organize and prioritize the work

00:05:01,600 --> 00:05:04,800
project boards are made up of issues

00:05:03,280 --> 00:05:06,400
pull requests and notes that are

00:05:04,800 --> 00:05:08,400
categorized as cards in different

00:05:06,400 --> 00:05:10,639
columns

00:05:08,400 --> 00:05:12,479
team project boards are accessible

00:05:10,639 --> 00:05:15,039
across organization

00:05:12,479 --> 00:05:15,919
and anybody in github can discover this

00:05:15,039 --> 00:05:18,960
project board

00:05:15,919 --> 00:05:20,400
easily just by searching and they can

00:05:18,960 --> 00:05:21,759
start collaborating either by

00:05:20,400 --> 00:05:22,880
subscribing to an issue of their

00:05:21,759 --> 00:05:25,120
interest or maybe

00:05:22,880 --> 00:05:27,440
share their thoughts or comments to

00:05:25,120 --> 00:05:30,639
enhance the future

00:05:27,440 --> 00:05:33,199
if something is a priority yes it's a

00:05:30,639 --> 00:05:35,199
priority for the whole team

00:05:33,199 --> 00:05:36,479
and we limit the number of in-progress

00:05:35,199 --> 00:05:40,000
epics to

00:05:36,479 --> 00:05:40,479
two for a team of size 8 and this has

00:05:40,000 --> 00:05:43,840
been a

00:05:40,479 --> 00:05:47,520
great way to have a focused execution on

00:05:43,840 --> 00:05:50,560
delivering high customer value faster

00:05:47,520 --> 00:05:53,120
we have seen increased team bonding

00:05:50,560 --> 00:05:54,080
as there is developer engagement among

00:05:53,120 --> 00:05:56,240
people

00:05:54,080 --> 00:05:58,720
as there is deeper engagement among team

00:05:56,240 --> 00:06:03,039
members to work together

00:05:58,720 --> 00:06:03,039
closely towards a common and shared goal

00:06:03,440 --> 00:06:07,360
issue templates issue templates play a

00:06:06,400 --> 00:06:09,840
wider

00:06:07,360 --> 00:06:12,319
thinking consistency by customization

00:06:09,840 --> 00:06:14,240
and standardization of the information

00:06:12,319 --> 00:06:15,759
captured and get of issues when they are

00:06:14,240 --> 00:06:20,319
created

00:06:15,759 --> 00:06:23,199
let us take an example of a github issue

00:06:20,319 --> 00:06:25,199
which is created using epics which is

00:06:23,199 --> 00:06:27,440
created using templates

00:06:25,199 --> 00:06:30,720
the labels are automatically included

00:06:27,440 --> 00:06:32,560
when an issue is opened using templates

00:06:30,720 --> 00:06:34,000
labels are used to classify different

00:06:32,560 --> 00:06:37,600
types of issues epic

00:06:34,000 --> 00:06:40,960
feature and others and issues can have

00:06:37,600 --> 00:06:43,840
as many labels as we want

00:06:40,960 --> 00:06:44,639
a epic is focused on a specific problem

00:06:43,840 --> 00:06:47,039
statement

00:06:44,639 --> 00:06:48,000
and epic acts as a shared goal for a

00:06:47,039 --> 00:06:51,599
group of

00:06:48,000 --> 00:06:53,360
engineers working on it an epic is a

00:06:51,599 --> 00:06:56,960
group of features

00:06:53,360 --> 00:07:00,000
captured as task list inscription

00:06:56,960 --> 00:07:02,479
and task list has clickable check boxes

00:07:00,000 --> 00:07:04,560
we just go and select and unselect this

00:07:02,479 --> 00:07:06,800
check boxes

00:07:04,560 --> 00:07:08,080
to track the progress of if a feature is

00:07:06,800 --> 00:07:10,080
complete or not

00:07:08,080 --> 00:07:12,000
and these help us to track the progress

00:07:10,080 --> 00:07:16,080
easily with minimal

00:07:12,000 --> 00:07:17,919
follow-ups and if you see

00:07:16,080 --> 00:07:19,520
there are milestones set which sets the

00:07:17,919 --> 00:07:21,280
right expectation with the steel

00:07:19,520 --> 00:07:24,240
stakeholders on when this epic is going

00:07:21,280 --> 00:07:27,120
to be shipped and the same epic

00:07:24,240 --> 00:07:28,160
shows up in multiple project dashboards

00:07:27,120 --> 00:07:30,400
for tracking

00:07:28,160 --> 00:07:32,479
at different management levels if you

00:07:30,400 --> 00:07:34,080
see the c chat of project dashboard is

00:07:32,479 --> 00:07:36,160
the dashboard owned by my team

00:07:34,080 --> 00:07:37,759
apart from that this epic is also

00:07:36,160 --> 00:07:40,400
getting tracked into two other

00:07:37,759 --> 00:07:40,400
dashboards

00:07:40,639 --> 00:07:46,879
moving to feature a feature acts as a

00:07:44,400 --> 00:07:49,520
unit of work for around two weeks

00:07:46,879 --> 00:07:51,360
and anything greater than two weeks is

00:07:49,520 --> 00:07:53,440
moved to different feature

00:07:51,360 --> 00:07:56,000
thereby enabling us to do work

00:07:53,440 --> 00:07:58,080
parallelization

00:07:56,000 --> 00:07:59,840
so in this way we can have multiple

00:07:58,080 --> 00:08:02,080
engineers working on the same epic and

00:07:59,840 --> 00:08:04,400
different features

00:08:02,080 --> 00:08:05,520
a feature is usually assigned to one

00:08:04,400 --> 00:08:08,080
engineer

00:08:05,520 --> 00:08:10,240
giving them an opportunity to take

00:08:08,080 --> 00:08:12,720
complete accountability to drive the

00:08:10,240 --> 00:08:15,120
feature to completion

00:08:12,720 --> 00:08:17,039
and feature is a group of tasks and

00:08:15,120 --> 00:08:18,560
similarly the way we use in epics we

00:08:17,039 --> 00:08:21,840
make use of task list to track the

00:08:18,560 --> 00:08:21,840
progress of all these tasks

00:08:22,400 --> 00:08:26,800
the best part of using task this year is

00:08:25,199 --> 00:08:27,199
we have something called definition of

00:08:26,800 --> 00:08:28,879
done

00:08:27,199 --> 00:08:30,960
and capturing a list of tasks to be

00:08:28,879 --> 00:08:33,200
completed as task sets the right

00:08:30,960 --> 00:08:35,360
expectation with the engineer

00:08:33,200 --> 00:08:38,240
working on the feature in terms of what

00:08:35,360 --> 00:08:41,120
needs to be completed

00:08:38,240 --> 00:08:42,719
and features only show up in the team

00:08:41,120 --> 00:08:45,200
dashboard

00:08:42,719 --> 00:08:47,440
but no one is stopping them to monitor

00:08:45,200 --> 00:08:49,440
in other dashboards too

00:08:47,440 --> 00:08:51,120
and features are shipped as and when

00:08:49,440 --> 00:08:53,440
they are complete

00:08:51,120 --> 00:08:54,399
empowering the team to ship often he

00:08:53,440 --> 00:08:57,279
trade fast

00:08:54,399 --> 00:08:58,240
and encourage calculated risk taking

00:08:57,279 --> 00:09:00,240
unlike epic

00:08:58,240 --> 00:09:03,680
feature is only tracked in team level

00:09:00,240 --> 00:09:03,680
project dashboard as i mentioned

00:09:04,560 --> 00:09:08,000
is the discussion happening all the

00:09:07,600 --> 00:09:11,519
action

00:09:08,000 --> 00:09:14,320
happens in issues github issues

00:09:11,519 --> 00:09:15,600
let's take an example of a issue created

00:09:14,320 --> 00:09:19,839
in a bug bash

00:09:15,600 --> 00:09:22,720
done by the team the issue was created

00:09:19,839 --> 00:09:24,320
by a product manager putting a title in

00:09:22,720 --> 00:09:26,720
the details in the description

00:09:24,320 --> 00:09:27,600
and then a senior engineer trages the

00:09:26,720 --> 00:09:30,720
issue

00:09:27,600 --> 00:09:31,120
and the engineer questionnaire makes use

00:09:30,720 --> 00:09:34,560
of the

00:09:31,120 --> 00:09:37,040
ad mention functionality to

00:09:34,560 --> 00:09:38,800
start the collaboration from github

00:09:37,040 --> 00:09:40,640
issues

00:09:38,800 --> 00:09:42,480
ed mentioned results in sending a

00:09:40,640 --> 00:09:44,480
notification to the engineer who was

00:09:42,480 --> 00:09:46,880
mentioned

00:09:44,480 --> 00:09:48,839
and it mentions provide a flexible way

00:09:46,880 --> 00:09:50,080
to get the right people involved in the

00:09:48,839 --> 00:09:52,399
issue

00:09:50,080 --> 00:09:54,080
once the engineer gets the notification

00:09:52,399 --> 00:09:55,279
they click the link available in the

00:09:54,080 --> 00:09:57,360
notification

00:09:55,279 --> 00:09:59,200
come back to get our issue and the

00:09:57,360 --> 00:10:01,440
collaboration starts from there

00:09:59,200 --> 00:10:02,720
and if you can see the bug was closed in

00:10:01,440 --> 00:10:04,800
the same day

00:10:02,720 --> 00:10:07,200
and primarily because the entire

00:10:04,800 --> 00:10:10,320
collaboration started from github issue

00:10:07,200 --> 00:10:12,399
and apart from getting things done

00:10:10,320 --> 00:10:13,760
capturing everything at one place in

00:10:12,399 --> 00:10:16,800
github issues

00:10:13,760 --> 00:10:18,480
helps us to maintain the context and the

00:10:16,800 --> 00:10:21,680
history of actions

00:10:18,480 --> 00:10:23,680
which enables information discovery

00:10:21,680 --> 00:10:25,839
and the decisions taken can be referred

00:10:23,680 --> 00:10:27,519
in future

00:10:25,839 --> 00:10:28,880
by the way if you are wondering what all

00:10:27,519 --> 00:10:31,760
goes into the issue

00:10:28,880 --> 00:10:32,800
then literally everything is captured

00:10:31,760 --> 00:10:36,160
every detail

00:10:32,800 --> 00:10:38,720
from spec clarification design proposals

00:10:36,160 --> 00:10:41,519
design chatter meeting notes decision

00:10:38,720 --> 00:10:44,399
taken literally everything

00:10:41,519 --> 00:10:46,079
you also use discussions discussions are

00:10:44,399 --> 00:10:47,600
used for brainstorming

00:10:46,079 --> 00:10:49,839
when there are new initiatives and when

00:10:47,600 --> 00:10:54,000
we know it's going to take longer

00:10:49,839 --> 00:10:56,640
they're also used for team building like

00:10:54,000 --> 00:10:58,560
how was the weekend what were you doing

00:10:56,640 --> 00:11:00,320
what's your plan for the coming weekend

00:10:58,560 --> 00:11:02,399
and all these gets into discussion

00:11:00,320 --> 00:11:05,120
discussions are we use

00:11:02,399 --> 00:11:06,160
not only for technical but also for fun

00:11:05,120 --> 00:11:08,320
elements and

00:11:06,160 --> 00:11:09,440
increasing the collaboration in the team

00:11:08,320 --> 00:11:11,440
now how do we keep

00:11:09,440 --> 00:11:13,120
everybody in the entire organization to

00:11:11,440 --> 00:11:15,600
be aligned on the status

00:11:13,120 --> 00:11:16,880
then we have a concept of status update

00:11:15,600 --> 00:11:20,160
comment

00:11:16,880 --> 00:11:23,120
it is just like a comment on the epic

00:11:20,160 --> 00:11:24,320
which covers the status whether it is

00:11:23,120 --> 00:11:27,519
red green or yellow

00:11:24,320 --> 00:11:30,880
towards the projected ship date

00:11:27,519 --> 00:11:32,160
apart from that we encourage having

00:11:30,880 --> 00:11:34,880
video

00:11:32,160 --> 00:11:35,600
demo video links and these demo video

00:11:34,880 --> 00:11:37,760
links

00:11:35,600 --> 00:11:40,079
can be from anywhere it could be a small

00:11:37,760 --> 00:11:42,399
working prototype coming from a

00:11:40,079 --> 00:11:43,360
developer environment or production or

00:11:42,399 --> 00:11:46,000
staging

00:11:43,360 --> 00:11:46,640
they don't need to be only collected or

00:11:46,000 --> 00:11:50,480
recorded

00:11:46,640 --> 00:11:54,639
in production and we believe in demos

00:11:50,480 --> 00:11:57,279
and not memos so the other part of

00:11:54,639 --> 00:11:59,040
standard status update event is risks

00:11:57,279 --> 00:12:01,120
and mitigations

00:11:59,040 --> 00:12:02,480
this helps us to set right expectation

00:12:01,120 --> 00:12:04,160
with our stakeholders

00:12:02,480 --> 00:12:06,240
and we call out dependencies

00:12:04,160 --> 00:12:08,720
dependencies and risks that we have

00:12:06,240 --> 00:12:10,000
which can delay our shift date and we

00:12:08,720 --> 00:12:13,600
also share the mitigation

00:12:10,000 --> 00:12:16,959
plan moving to next once the design

00:12:13,600 --> 00:12:19,360
is closed the core part of the engineer

00:12:16,959 --> 00:12:21,200
who wants to go and develop and ship the

00:12:19,360 --> 00:12:22,959
product as soon as possible

00:12:21,200 --> 00:12:24,240
in the whole exercise of shipping this

00:12:22,959 --> 00:12:27,440
after coding

00:12:24,240 --> 00:12:30,079
i want to talk about a bit chat ops

00:12:27,440 --> 00:12:31,279
chat ops is about conversation driven

00:12:30,079 --> 00:12:35,519
development

00:12:31,279 --> 00:12:37,440
by bringing the tools into conversation

00:12:35,519 --> 00:12:39,360
every organization or most of the

00:12:37,440 --> 00:12:40,480
organization makes use of slack and

00:12:39,360 --> 00:12:43,519
teams

00:12:40,480 --> 00:12:46,480
for day-to-day interactions in chat and

00:12:43,519 --> 00:12:47,680
chat ops is one which brings all the

00:12:46,480 --> 00:12:49,600
tools and processes

00:12:47,680 --> 00:12:50,959
into the conversation where the

00:12:49,600 --> 00:12:53,120
engineers are

00:12:50,959 --> 00:12:54,959
this is an example of a pull request

00:12:53,120 --> 00:12:57,760
created by an engineer

00:12:54,959 --> 00:12:58,560
we encourage engineers to capture design

00:12:57,760 --> 00:13:01,120
changes

00:12:58,560 --> 00:13:03,040
and also user experience and if the

00:13:01,120 --> 00:13:03,519
change results in a user experience

00:13:03,040 --> 00:13:07,279
change

00:13:03,519 --> 00:13:09,519
then putting before and after experience

00:13:07,279 --> 00:13:10,959
helps the reviewers to get the context

00:13:09,519 --> 00:13:13,279
and review faster

00:13:10,959 --> 00:13:15,360
this pr is also linked to an issue and

00:13:13,279 --> 00:13:15,839
as soon as this pr is merged that issue

00:13:15,360 --> 00:13:19,360
will

00:13:15,839 --> 00:13:19,360
get automatically closed

00:13:19,760 --> 00:13:25,760
the pr is assigned to reviewers and

00:13:23,600 --> 00:13:27,680
to make sure none of the prs are getting

00:13:25,760 --> 00:13:30,240
into production without review

00:13:27,680 --> 00:13:31,600
we have branch protection rules set on

00:13:30,240 --> 00:13:34,639
our repository

00:13:31,600 --> 00:13:36,639
which helps us to ensure that

00:13:34,639 --> 00:13:40,000
every line of code getting into

00:13:36,639 --> 00:13:42,160
production is reviewed by the engineer

00:13:40,000 --> 00:13:45,600
apart from this the quality is also

00:13:42,160 --> 00:13:49,199
baked into the whole pr workflow process

00:13:45,600 --> 00:13:50,160
we leverage actions and actions help us

00:13:49,199 --> 00:13:52,560
to automate

00:13:50,160 --> 00:13:54,560
customize and execute our software

00:13:52,560 --> 00:13:57,920
development workflows

00:13:54,560 --> 00:14:00,800
these are the list of actions available

00:13:57,920 --> 00:14:01,760
in my team's repository and to give an

00:14:00,800 --> 00:14:04,800
example we use

00:14:01,760 --> 00:14:06,639
code coverage as part of our pr workflow

00:14:04,800 --> 00:14:09,600
and as soon as the pr is raised

00:14:06,639 --> 00:14:10,240
the code coverage tool runs and post the

00:14:09,600 --> 00:14:12,959
outcome

00:14:10,240 --> 00:14:15,279
of that in a tabular format and if there

00:14:12,959 --> 00:14:16,480
is a dip of even 0.5 percent in unit

00:14:15,279 --> 00:14:20,320
testage

00:14:16,480 --> 00:14:21,120
then the pr even if it's uprooted can't

00:14:20,320 --> 00:14:23,760
be merged

00:14:21,120 --> 00:14:26,720
okay now let's go to the pr workflow the

00:14:23,760 --> 00:14:29,279
author creates the pr and adds reviewers

00:14:26,720 --> 00:14:32,560
and then the reviewer receives the

00:14:29,279 --> 00:14:34,800
request notification on slack github app

00:14:32,560 --> 00:14:35,680
slack github app is the chat ops

00:14:34,800 --> 00:14:38,720
offering

00:14:35,680 --> 00:14:39,920
from github apart from slack we also

00:14:38,720 --> 00:14:43,600
have teams github

00:14:39,920 --> 00:14:45,600
app available in the teams marketplace

00:14:43,600 --> 00:14:48,000
so once the notification is received by

00:14:45,600 --> 00:14:49,839
the reviewer they navigate to the pr

00:14:48,000 --> 00:14:51,680
from the link in the notification

00:14:49,839 --> 00:14:53,600
reviews the pr and leaves the comment

00:14:51,680 --> 00:14:55,600
for changes

00:14:53,600 --> 00:14:57,360
and once the comments are left in this

00:14:55,600 --> 00:14:58,000
case the reviewer is asking for a couple

00:14:57,360 --> 00:15:00,240
of changes

00:14:58,000 --> 00:15:02,240
from the author and then the author

00:15:00,240 --> 00:15:05,600
receives the notification

00:15:02,240 --> 00:15:06,160
and modifies comes addresses the pr

00:15:05,600 --> 00:15:08,480
comment

00:15:06,160 --> 00:15:09,680
then ed mentions the reviewer since the

00:15:08,480 --> 00:15:11,519
comments are addressed

00:15:09,680 --> 00:15:12,880
the reviewer gets a notification goes to

00:15:11,519 --> 00:15:16,079
the pr

00:15:12,880 --> 00:15:19,680
reviews the changes and approves the pr

00:15:16,079 --> 00:15:22,560
that's it and once the pr is approved

00:15:19,680 --> 00:15:23,600
the author of the pr gets a notification

00:15:22,560 --> 00:15:26,880
on the github

00:15:23,600 --> 00:15:29,120
app what next

00:15:26,880 --> 00:15:31,279
the pr is approved ford is ready to get

00:15:29,120 --> 00:15:33,839
births deployed in production

00:15:31,279 --> 00:15:34,800
and deployment in one way is a complex

00:15:33,839 --> 00:15:36,639
process

00:15:34,800 --> 00:15:40,000
if even there is a new engineer in the

00:15:36,639 --> 00:15:43,839
team right they need to understand a lot

00:15:40,000 --> 00:15:46,959
but in github deployments are simplified

00:15:43,839 --> 00:15:50,320
right now i'm going to show you

00:15:46,959 --> 00:15:53,120
the real power of chat ops the engineer

00:15:50,320 --> 00:15:54,240
in this case heads to chat ops of slack

00:15:53,120 --> 00:15:56,160
channel and

00:15:54,240 --> 00:15:59,759
delegates the work of deployment by

00:15:56,160 --> 00:16:03,519
running a simple dot deploy command

00:15:59,759 --> 00:16:07,600
the work is delegated to none other than

00:16:03,519 --> 00:16:10,959
hubot huboid is github's most friendly

00:16:07,600 --> 00:16:13,920
efficient and collaborative employee

00:16:10,959 --> 00:16:14,800
almost every github developer interacts

00:16:13,920 --> 00:16:18,000
with you god

00:16:14,800 --> 00:16:21,759
literally every day multiple times

00:16:18,000 --> 00:16:23,839
and hubot is a robot we just ask the

00:16:21,759 --> 00:16:25,600
huebot to do the deployment

00:16:23,839 --> 00:16:26,880
with a single command and the job is

00:16:25,600 --> 00:16:30,160
taken care

00:16:26,880 --> 00:16:32,560
the deployment is done what next

00:16:30,160 --> 00:16:33,279
time for a party the engineer is super

00:16:32,560 --> 00:16:35,519
happy

00:16:33,279 --> 00:16:37,199
and the engineer goes to the channel and

00:16:35,519 --> 00:16:41,040
shares the completion of the epic

00:16:37,199 --> 00:16:43,199
the team the team starts to

00:16:41,040 --> 00:16:45,680
sparkle the engineers who contributed

00:16:43,199 --> 00:16:48,480
towards team goal by shipping their epic

00:16:45,680 --> 00:16:50,560
the dot dot sparkle command that you are

00:16:48,480 --> 00:16:53,199
seeing on the screen is a huge command

00:16:50,560 --> 00:16:56,480
used to recognize team members effort

00:16:53,199 --> 00:16:58,720
cubot not only does complex things

00:16:56,480 --> 00:17:00,160
it plays an instrumental role in

00:16:58,720 --> 00:17:05,280
bringing fun

00:17:00,160 --> 00:17:08,480
and spread joy within the organization

00:17:05,280 --> 00:17:08,480
this brings me back

00:17:08,559 --> 00:17:12,880
to how chat ops team used github for

00:17:11,760 --> 00:17:15,280
collaboration

00:17:12,880 --> 00:17:17,199
as i said earlier was an emotional

00:17:15,280 --> 00:17:18,000
journey when i think about the last year

00:17:17,199 --> 00:17:21,839
when we started

00:17:18,000 --> 00:17:25,120
in march and the team used github

00:17:21,839 --> 00:17:26,640
for collaboration and the product helped

00:17:25,120 --> 00:17:30,400
us to navigate

00:17:26,640 --> 00:17:34,480
a transition from our emotions of

00:17:30,400 --> 00:17:38,559
isolation nervousness helplessness

00:17:34,480 --> 00:17:41,919
out of control to being creative

00:17:38,559 --> 00:17:44,640
confident inquisitive amazed

00:17:41,919 --> 00:17:46,160
and joyful now let's do a quick recap

00:17:44,640 --> 00:17:50,559
here is the glimpse of

00:17:46,160 --> 00:17:52,880
github features showcased in the session

00:17:50,559 --> 00:17:53,919
embracing the right practices and

00:17:52,880 --> 00:17:57,039
processes

00:17:53,919 --> 00:17:59,760
along with these github features

00:17:57,039 --> 00:18:01,679
act as a catalyst in boosting the key

00:17:59,760 --> 00:18:04,160
elements of collaboration

00:18:01,679 --> 00:18:05,840
and creates a culture of effective and

00:18:04,160 --> 00:18:06,799
inclusive collaboration in an

00:18:05,840 --> 00:18:09,919
organization

00:18:06,799 --> 00:18:11,440
going to the puzzle i am hoping everyone

00:18:09,919 --> 00:18:13,440
was able to

00:18:11,440 --> 00:18:14,559
crack this and post the answers either

00:18:13,440 --> 00:18:18,799
in github discussion

00:18:14,559 --> 00:18:21,440
or on twitter let me decode this for you

00:18:18,799 --> 00:18:23,200
i said 80 deployments by team in last

00:18:21,440 --> 00:18:25,360
four weeks

00:18:23,200 --> 00:18:26,480
making an average of four deployments

00:18:25,360 --> 00:18:29,200
per working day

00:18:26,480 --> 00:18:31,440
the rest of the numbers are and you're

00:18:29,200 --> 00:18:34,160
able to achieve this 80 deployments

00:18:31,440 --> 00:18:36,080
by working on 66 issues which were

00:18:34,160 --> 00:18:38,640
closed in last four weeks

00:18:36,080 --> 00:18:40,840
351 issue comments which shows the

00:18:38,640 --> 00:18:44,000
amount of collaboration we do on these

00:18:40,840 --> 00:18:46,880
issues 72 prs were raised and almost

00:18:44,000 --> 00:18:49,760
every pr lands into production

00:18:46,880 --> 00:18:51,200
253 pr comments to ensure the code is

00:18:49,760 --> 00:18:54,080
sent with high quality

00:18:51,200 --> 00:18:55,039
that's it from my side thank you oh my

00:18:54,080 --> 00:18:57,440
god satish

00:18:55,039 --> 00:18:58,559
what an amazing rendition of that one

00:18:57,440 --> 00:19:00,880
year journey

00:18:58,559 --> 00:19:01,600
hats off to you for that and what those

00:19:00,880 --> 00:19:04,880
numbers

00:19:01,600 --> 00:19:06,400
really blew my mind up right before we

00:19:04,880 --> 00:19:09,760
jump into q a we heard

00:19:06,400 --> 00:19:12,880
that you are in-house rapper at github

00:19:09,760 --> 00:19:17,039
so will you just do a small bit

00:19:12,880 --> 00:19:17,039
for us and all our viewers right away

00:19:17,440 --> 00:19:21,200
are you sure you want me to do that

00:19:22,320 --> 00:19:29,120
100 waiting for it okay

00:19:25,520 --> 00:19:29,120
i have to get in the mood first then

00:19:32,080 --> 00:19:37,840
code issues pr discussions are action

00:19:35,280 --> 00:19:39,280
code issues pr discussions and actions

00:19:37,840 --> 00:19:42,080
every feature is

00:19:39,280 --> 00:19:43,600
built with passion it mentions and

00:19:42,080 --> 00:19:46,880
notifications

00:19:43,600 --> 00:19:50,320
enables inclusive collaboration

00:19:46,880 --> 00:19:53,840
oh my future generation do check out

00:19:50,320 --> 00:19:55,280
github education code spaces is the new

00:19:53,840 --> 00:19:57,919
workstation

00:19:55,280 --> 00:19:59,039
github is developers ultimate

00:19:57,919 --> 00:20:02,240
destination

00:19:59,039 --> 00:20:02,240
ultimate destination

00:20:02,559 --> 00:20:09,679
what a drum roll

00:20:06,320 --> 00:20:14,400
yes like once more once more

00:20:09,679 --> 00:20:14,400
that was awesome satish i love it

00:20:14,559 --> 00:20:19,520
we should read yeah by the way i don't

00:20:16,640 --> 00:20:22,000
rap i just try to rhyme lines

00:20:19,520 --> 00:20:23,600
come on it was amazing it was amazing

00:20:22,000 --> 00:20:24,880
let's submit to q a now we've got a

00:20:23,600 --> 00:20:26,559
bunch for you

00:20:24,880 --> 00:20:28,410
i have to now get back in the zone to

00:20:26,559 --> 00:20:30,960
ask you questions

00:20:28,410 --> 00:20:33,440
[Laughter]

00:20:30,960 --> 00:20:34,000
okay so you talked about uh the

00:20:33,440 --> 00:20:36,320
emotional

00:20:34,000 --> 00:20:37,200
journey what was the biggest turning

00:20:36,320 --> 00:20:40,000
point

00:20:37,200 --> 00:20:41,679
there for you as well as your team yeah

00:20:40,000 --> 00:20:43,520
so

00:20:41,679 --> 00:20:44,720
if i reconnect correctly to be very

00:20:43,520 --> 00:20:47,360
honest

00:20:44,720 --> 00:20:47,760
personally i was also struggling through

00:20:47,360 --> 00:20:50,960
the

00:20:47,760 --> 00:20:54,000
through that phase right

00:20:50,960 --> 00:20:57,360
uh this was the second time in my

00:20:54,000 --> 00:20:58,480
entire professional career where i was

00:20:57,360 --> 00:21:01,280
feeling helpless

00:20:58,480 --> 00:21:02,480
and out of control to help my team and

00:21:01,280 --> 00:21:07,280
you have to think what

00:21:02,480 --> 00:21:10,000
help really it's not a big thing

00:21:07,280 --> 00:21:13,039
but i think the weekly check-ins that we

00:21:10,000 --> 00:21:15,360
started after our scrum every monday

00:21:13,039 --> 00:21:16,080
we have scrum every day right and then

00:21:15,360 --> 00:21:20,159
we started

00:21:16,080 --> 00:21:23,840
this way of interacting with folks

00:21:20,159 --> 00:21:26,080
doing a weekly check-in on mondays

00:21:23,840 --> 00:21:27,280
where we used to share with each other

00:21:26,080 --> 00:21:29,760
how everyone is go

00:21:27,280 --> 00:21:31,360
what everyone is going through just

00:21:29,760 --> 00:21:34,480
speak out

00:21:31,360 --> 00:21:37,679
and what is working for them that's it

00:21:34,480 --> 00:21:40,480
right and this whole concept

00:21:37,679 --> 00:21:42,640
made everyone realize everyone is going

00:21:40,480 --> 00:21:44,559
through the same phase we are not alone

00:21:42,640 --> 00:21:46,000
the whole world is going through this

00:21:44,559 --> 00:21:50,159
and we need to work together

00:21:46,000 --> 00:21:53,080
as a team to find out how to

00:21:50,159 --> 00:21:54,240
come out of or how to handle this

00:21:53,080 --> 00:21:56,720
unprecedented

00:21:54,240 --> 00:21:59,360
complicated and hard situation that the

00:21:56,720 --> 00:22:00,880
whole world started seeing last year

00:21:59,360 --> 00:22:02,559
so if i have to pick one thing then it

00:22:00,880 --> 00:22:04,240
was that weekly

00:22:02,559 --> 00:22:07,039
check-ins that we started doing with the

00:22:04,240 --> 00:22:08,720
team very insightful thanks for being so

00:22:07,039 --> 00:22:09,600
honest and transparently kind of

00:22:08,720 --> 00:22:11,679
bringing these

00:22:09,600 --> 00:22:12,960
and talking about these things we got

00:22:11,679 --> 00:22:15,280
one more for you

00:22:12,960 --> 00:22:16,240
what was the most challenging key

00:22:15,280 --> 00:22:18,799
element

00:22:16,240 --> 00:22:21,280
in leveling up on collaboration across

00:22:18,799 --> 00:22:21,280
the teams

00:22:22,240 --> 00:22:25,520
interesting so what i showed was eight

00:22:25,039 --> 00:22:28,640
key

00:22:25,520 --> 00:22:30,400
elements of collaboration see in

00:22:28,640 --> 00:22:33,120
simplicity collaboration means

00:22:30,400 --> 00:22:34,640
working with others but that is not that

00:22:33,120 --> 00:22:36,640
easy when we work with

00:22:34,640 --> 00:22:38,400
like 2000 people in the organization or

00:22:36,640 --> 00:22:40,559
even when we work with 10 people or when

00:22:38,400 --> 00:22:43,200
we have five people at phone rights

00:22:40,559 --> 00:22:45,679
the most challenging one is always

00:22:43,200 --> 00:22:49,200
bringing in that inclusion part

00:22:45,679 --> 00:22:50,799
in the whole collaboration story

00:22:49,200 --> 00:22:53,520
that is the most difficult one we talk

00:22:50,799 --> 00:22:57,200
about diversity a lot right

00:22:53,520 --> 00:22:59,840
but if there is no inclusion

00:22:57,200 --> 00:23:02,080
it is very difficult to make the

00:22:59,840 --> 00:23:04,720
diversity successful

00:23:02,080 --> 00:23:06,080
in an environment and this is something

00:23:04,720 --> 00:23:09,280
that we achieved

00:23:06,080 --> 00:23:11,280
by writing a lot in this async mode

00:23:09,280 --> 00:23:12,320
and we started sharing and putting those

00:23:11,280 --> 00:23:14,960
in discussions

00:23:12,320 --> 00:23:17,360
issues everywhere where the team was

00:23:14,960 --> 00:23:20,000
able to see who is doing what

00:23:17,360 --> 00:23:22,640
and they had an opportunity to come back

00:23:20,000 --> 00:23:23,280
read about the proposals share their

00:23:22,640 --> 00:23:25,600
thoughts

00:23:23,280 --> 00:23:26,400
and contribute and share the diverse

00:23:25,600 --> 00:23:29,840
opinions

00:23:26,400 --> 00:23:33,039
in this way as a team

00:23:29,840 --> 00:23:36,080
able to come to a inclusive

00:23:33,039 --> 00:23:38,480
and conclusive conclusion

00:23:36,080 --> 00:23:40,480
yeah but it's a journey we are fully not

00:23:38,480 --> 00:23:43,600
there yet we are still learning

00:23:40,480 --> 00:23:45,120
it's not that we are perfect but i'm

00:23:43,600 --> 00:23:48,240
extremely happy

00:23:45,120 --> 00:23:51,039
to see the graph the way it went

00:23:48,240 --> 00:23:52,559
up and you're still learning and there's

00:23:51,039 --> 00:23:55,279
a lot to learn

00:23:52,559 --> 00:23:56,559
and github is the way to make use of all

00:23:55,279 --> 00:23:59,679
these in the right way

00:23:56,559 --> 00:24:02,720
to make everything successful

00:23:59,679 --> 00:24:05,279
i'm joyful too thank you sateesh thank

00:24:02,720 --> 00:24:08,799
you again for your vulnerability and

00:24:05,279 --> 00:24:09,919
sharing from your heart this was really

00:24:08,799 --> 00:24:12,159
insightful and

00:24:09,919 --> 00:24:13,919
again things that everybody around us

00:24:12,159 --> 00:24:17,360
can learn as well

00:24:13,919 --> 00:24:19,840
again thank you for a great session and

00:24:17,360 --> 00:24:20,640
remember folks satish will be with us in

00:24:19,840 --> 00:24:22,400
discussions

00:24:20,640 --> 00:24:23,760
so you can have your heart to heart

00:24:22,400 --> 00:24:26,240
chats with him

00:24:23,760 --> 00:24:27,039
there as well and ask him all the

00:24:26,240 --> 00:24:30,480
questions

00:24:27,039 --> 00:24:33,679
folks discuss with satish on discussions

00:24:30,480 --> 00:24:47,200
thank you thank you again bye-bye

00:24:33,679 --> 00:24:47,200

YouTube URL: https://www.youtube.com/watch?v=0oEYJzb7nD0


