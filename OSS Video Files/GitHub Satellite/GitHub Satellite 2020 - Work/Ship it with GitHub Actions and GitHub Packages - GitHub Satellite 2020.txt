Title: Ship it with GitHub Actions and GitHub Packages - GitHub Satellite 2020
Publication date: 2020-05-07
Playlist: GitHub Satellite 2020 - Work
Description: 
	Presented by Chris Patterson, GitHub

In this demo-packed session, you'll learn how to deploy to any cloud and on-premises with GitHub Actions, a powerful community-powered automation and CI/CD system built directly into GitHub.

GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the worldâ€™s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:00,000 --> 00:00:05,450
Plus github so emoji we've got another

00:00:02,610 --> 00:00:08,880
session coming up who's up next

00:00:05,450 --> 00:00:10,889
next is Chris Patterson with ship it

00:00:08,880 --> 00:00:13,049
would get up actions and get up packages

00:00:10,889 --> 00:00:15,690
Chris is a product manager here at

00:00:13,049 --> 00:00:18,150
github and is had an interesting career

00:00:15,690 --> 00:00:21,539
in tech has started off with classic ASP

00:00:18,150 --> 00:00:24,869
then went on to Visual Basic to Java

00:00:21,539 --> 00:00:29,480
and.net now is even dabbling in

00:00:24,869 --> 00:00:29,480
JavaScript so now over to you Chris

00:00:30,980 --> 00:00:34,030
[Applause]

00:00:38,090 --> 00:00:44,190
hey thanks a mojo and Chino I really

00:00:41,370 --> 00:00:46,320
appreciate that introduction as emoji

00:00:44,190 --> 00:00:48,330
said I am a product manager at github

00:00:46,320 --> 00:00:51,350
actions and the alright github and I

00:00:48,330 --> 00:00:53,699
specifically work on github actions

00:00:51,350 --> 00:00:56,100
first off I want to thank everybody for

00:00:53,699 --> 00:00:57,809
joining us this virtual conference has

00:00:56,100 --> 00:00:59,460
been a lot of fun I certainly learned a

00:00:57,809 --> 00:01:01,920
lot today and seen a lot of really cool

00:00:59,460 --> 00:01:03,629
things it's great to be able to share

00:01:01,920 --> 00:01:05,729
this time with you and interact with the

00:01:03,629 --> 00:01:08,729
community even though we can't be

00:01:05,729 --> 00:01:11,460
together so today I'm going to go

00:01:08,729 --> 00:01:14,009
through a little bit more about github

00:01:11,460 --> 00:01:15,390
actions as Matt mentioned in the keynote

00:01:14,009 --> 00:01:17,250
this morning we launched it last

00:01:15,390 --> 00:01:18,840
November made it generally or last

00:01:17,250 --> 00:01:21,600
August actually made it generally

00:01:18,840 --> 00:01:24,479
available in November for all your repos

00:01:21,600 --> 00:01:27,030
and I could not be more impressed with

00:01:24,479 --> 00:01:28,680
what I've seen so far the uptake from

00:01:27,030 --> 00:01:30,869
the community and the interaction has

00:01:28,680 --> 00:01:32,340
been amazing and it's really really

00:01:30,869 --> 00:01:35,250
great to see what you guys are doing

00:01:32,340 --> 00:01:36,300
with actions so today we're going to

00:01:35,250 --> 00:01:38,160
walk through a couple of different

00:01:36,300 --> 00:01:40,470
things while actions has been out for a

00:01:38,160 --> 00:01:42,420
few months you know not everybody is

00:01:40,470 --> 00:01:43,860
completely familiar with it so I want to

00:01:42,420 --> 00:01:45,270
make sure we go through and just get a

00:01:43,860 --> 00:01:47,640
little bit of an introduction on how to

00:01:45,270 --> 00:01:49,170
get started with actions we'll talk a

00:01:47,640 --> 00:01:51,270
little bit about the details about

00:01:49,170 --> 00:01:53,490
action some of the things that to help

00:01:51,270 --> 00:01:55,890
you orient yourself then we're going to

00:01:53,490 --> 00:01:58,740
do a really quick getting started basic

00:01:55,890 --> 00:02:00,990
CI demo of how I can just do a simple

00:01:58,740 --> 00:02:03,000
website and then I'm going to take all

00:02:00,990 --> 00:02:05,220
of the things that we've talked about

00:02:03,000 --> 00:02:07,229
and just put some interesting spins on

00:02:05,220 --> 00:02:08,700
it and talk a little bit more about some

00:02:07,229 --> 00:02:13,349
of the great things that I've seen from

00:02:08,700 --> 00:02:15,690
the community so getting started get up

00:02:13,349 --> 00:02:17,610
actions obviously at its core is a great

00:02:15,690 --> 00:02:20,099
automation system that's really what we

00:02:17,610 --> 00:02:21,810
want to build we want to make sure that

00:02:20,099 --> 00:02:26,250
we have a very very powerful and

00:02:21,810 --> 00:02:27,989
flexible CI and eventually CD system to

00:02:26,250 --> 00:02:29,760
allow you to automate those workflows to

00:02:27,989 --> 00:02:31,470
automate that continuous testing to

00:02:29,760 --> 00:02:33,720
automate that continuous integration and

00:02:31,470 --> 00:02:35,610
continuous delivery but at the same time

00:02:33,720 --> 00:02:37,860
our vision for actions goes beyond them

00:02:35,610 --> 00:02:39,209
we want to make sure that we have a

00:02:37,860 --> 00:02:41,430
system that can allow you to automate

00:02:39,209 --> 00:02:43,739
any workflow on github and you can see

00:02:41,430 --> 00:02:46,860
this in action through the wide variety

00:02:43,739 --> 00:02:48,990
of events that we support everything

00:02:46,860 --> 00:02:50,940
from triaging issues

00:02:48,990 --> 00:02:52,860
to labeling and categorizing pull

00:02:50,940 --> 00:02:54,150
requests and other incredible things

00:02:52,860 --> 00:02:56,910
that I've seen the community do

00:02:54,150 --> 00:02:59,370
and finally that community aspect we

00:02:56,910 --> 00:03:01,170
want to make we want to enable our

00:02:59,370 --> 00:03:03,270
community to take advantage of these

00:03:01,170 --> 00:03:05,340
automation workflows and reusable bits

00:03:03,270 --> 00:03:08,010
in the same way that we do in our in our

00:03:05,340 --> 00:03:09,750
applications by taking advantage of open

00:03:08,010 --> 00:03:12,780
source libraries that have been created

00:03:09,750 --> 00:03:14,880
by other members of the community so

00:03:12,780 --> 00:03:16,620
getting started in order to get started

00:03:14,880 --> 00:03:19,920
with github actions all you have to do

00:03:16,620 --> 00:03:21,570
is go up to a repo that you own click on

00:03:19,920 --> 00:03:23,790
the actions tab and you'll be presented

00:03:21,570 --> 00:03:25,950
with a screen with a wide variety of

00:03:23,790 --> 00:03:27,570
different templates we'll walk through

00:03:25,950 --> 00:03:30,900
this in more detail later but these

00:03:27,570 --> 00:03:32,760
templates come from today they come from

00:03:30,900 --> 00:03:35,730
a repository that's actually open source

00:03:32,760 --> 00:03:38,100
it's in the actions org on github it's

00:03:35,730 --> 00:03:41,370
called started workflows a variety of

00:03:38,100 --> 00:03:42,480
ones we have created ourselves as part

00:03:41,370 --> 00:03:45,150
of the product team but we've also

00:03:42,480 --> 00:03:48,120
incorporated ones from partners such as

00:03:45,150 --> 00:03:50,610
Amazon or Google hashey Corp Tencent

00:03:48,120 --> 00:03:52,980
asher as well as from the community for

00:03:50,610 --> 00:03:54,630
example most recently we switched over

00:03:52,980 --> 00:03:56,400
the Ruby workflow to be one that is

00:03:54,630 --> 00:03:59,280
actually maintained by the Ruby

00:03:56,400 --> 00:04:01,770
community over time we have a vision to

00:03:59,280 --> 00:04:03,450
expand this to allow anybody to

00:04:01,770 --> 00:04:05,580
potentially show up on this page by

00:04:03,450 --> 00:04:07,140
creating a starter workflow and

00:04:05,580 --> 00:04:12,540
publishing it to a marketplace just like

00:04:07,140 --> 00:04:14,160
you can an action or an app simply get

00:04:12,540 --> 00:04:16,530
started you click the new workflow

00:04:14,160 --> 00:04:19,250
you'll be presented with the editor you

00:04:16,530 --> 00:04:21,720
can commit it and off you go

00:04:19,250 --> 00:04:22,980
so as I've gone through I've used a

00:04:21,720 --> 00:04:24,690
couple of different terms and I want to

00:04:22,980 --> 00:04:27,360
make sure we're all on the same page the

00:04:24,690 --> 00:04:29,790
terminology we get hub actions the

00:04:27,360 --> 00:04:32,130
product we have two major things that we

00:04:29,790 --> 00:04:34,050
think about with respect to road ology

00:04:32,130 --> 00:04:36,630
is a workflow which is the file you use

00:04:34,050 --> 00:04:38,160
to orchestrate what you want to do it's

00:04:36,630 --> 00:04:40,530
where you declare the event that you

00:04:38,160 --> 00:04:43,230
want to listen on you declare your jobs

00:04:40,530 --> 00:04:46,770
the job is just a set of steps that runs

00:04:43,230 --> 00:04:50,280
on a particular computer Mac Windows or

00:04:46,770 --> 00:04:53,430
Linux and then a series of steps which

00:04:50,280 --> 00:04:55,980
are the individual actions an action is

00:04:53,430 --> 00:04:58,410
that core reusable bit today they can

00:04:55,980 --> 00:05:00,840
either be written in JavaScript or as a

00:04:58,410 --> 00:05:02,490
docker container and in that action you

00:05:00,840 --> 00:05:04,560
describe with some metadata

00:05:02,490 --> 00:05:06,599
it does what kinds of inputs you want to

00:05:04,560 --> 00:05:08,759
take from it as well as what sort of

00:05:06,599 --> 00:05:10,770
outputs you want where it goes these

00:05:08,759 --> 00:05:12,599
actions are simply stored in repos and

00:05:10,770 --> 00:05:15,569
they're referenced across the github

00:05:12,599 --> 00:05:18,120
graph there's over 3,000 actions in the

00:05:15,569 --> 00:05:20,940
github marketplace today and as we walk

00:05:18,120 --> 00:05:22,710
through the demos for this presentation

00:05:20,940 --> 00:05:26,009
we'll definitely take advantage of them

00:05:22,710 --> 00:05:29,160
and of course community powers github

00:05:26,009 --> 00:05:31,560
actions as I mentioned we have actions

00:05:29,160 --> 00:05:33,479
from various partners we have actions

00:05:31,560 --> 00:05:38,190
that we create and of course actions

00:05:33,479 --> 00:05:39,900
from the community all right so enough

00:05:38,190 --> 00:05:42,120
with the kind of overview let's get

00:05:39,900 --> 00:05:46,319
started and take a quick look at a basic

00:05:42,120 --> 00:05:48,780
CI scenario so I have this application

00:05:46,319 --> 00:05:51,930
that I wrote and what it does is it

00:05:48,780 --> 00:05:54,360
shows sort of the most popular repos by

00:05:51,930 --> 00:05:56,849
language on github and it just gives me

00:05:54,360 --> 00:05:59,400
a nice presentation and layout of those

00:05:56,849 --> 00:06:03,840
but what I want to do is today I want to

00:05:59,400 --> 00:06:07,289
actually deploy this out to a cloud so

00:06:03,840 --> 00:06:08,880
if I go over to the actions tab I can go

00:06:07,289 --> 00:06:10,590
through and the first thing you'll

00:06:08,880 --> 00:06:12,300
notice is this action happens this

00:06:10,590 --> 00:06:15,240
application happens to be written in

00:06:12,300 --> 00:06:17,490
JavaScript so we've recognized that by

00:06:15,240 --> 00:06:19,800
looking at the language that github

00:06:17,490 --> 00:06:21,960
knows is primary to that particular repo

00:06:19,800 --> 00:06:24,000
and we've offered you a couple of

00:06:21,960 --> 00:06:26,969
different options for what you can do

00:06:24,000 --> 00:06:29,880
so you can do a very very basic node

00:06:26,969 --> 00:06:32,130
workflow so if we click on that we'll

00:06:29,880 --> 00:06:34,380
see that out of the box this is going to

00:06:32,130 --> 00:06:35,819
set you up to test to run your test

00:06:34,380 --> 00:06:40,169
across a couple of different versions of

00:06:35,819 --> 00:06:43,289
node using a matrix and across in for

00:06:40,169 --> 00:06:45,090
push and pull requests what I really

00:06:43,289 --> 00:06:47,729
want to do is this is a web app so I

00:06:45,090 --> 00:06:50,069
want to deploy it out and we can see a

00:06:47,729 --> 00:06:52,590
couple of different options here so

00:06:50,069 --> 00:06:54,840
today I happen to be most familiar with

00:06:52,590 --> 00:06:57,930
Azure so I'm going to use this template

00:06:54,840 --> 00:07:00,569
provided by them to deploy a node.js web

00:06:57,930 --> 00:07:02,819
site to an azure web app so when I click

00:07:00,569 --> 00:07:05,159
on this I get presented with a template

00:07:02,819 --> 00:07:06,690
to do a couple of different things I get

00:07:05,159 --> 00:07:09,449
some instructions about what I need to

00:07:06,690 --> 00:07:11,250
do to set up these things so I'm going

00:07:09,449 --> 00:07:12,900
to go ahead and change this environment

00:07:11,250 --> 00:07:16,120
repo and I've got

00:07:12,900 --> 00:07:16,120
[Music]

00:07:17,520 --> 00:07:25,000
no I think that was the name of a

00:07:21,310 --> 00:07:27,160
popular repose oh yeah and so I create

00:07:25,000 --> 00:07:29,320
heaven as your web app created from a

00:07:27,160 --> 00:07:32,200
package path it's just gonna my whole

00:07:29,320 --> 00:07:34,810
repo is good and then I'm gonna use

00:07:32,200 --> 00:07:36,490
no.12 and if I look down here I've got a

00:07:34,810 --> 00:07:39,250
couple of basic things happening I'm

00:07:36,490 --> 00:07:41,310
going to set up a projector repo it's

00:07:39,250 --> 00:07:43,990
going to set up a version of node to use

00:07:41,310 --> 00:07:46,600
I'm gonna run kind of a basic set of

00:07:43,990 --> 00:07:50,770
dependencies and then publish so let's

00:07:46,600 --> 00:07:51,970
go ahead and commit this guy and in this

00:07:50,770 --> 00:07:53,830
case I'm gonna be a little bit naughty

00:07:51,970 --> 00:07:56,800
and dangerous and just commit directly

00:07:53,830 --> 00:08:02,140
to the master branch if I go and click

00:07:56,800 --> 00:08:05,350
on the actions tab oh sorry you know

00:08:02,140 --> 00:08:07,660
what I think that I forgot to change one

00:08:05,350 --> 00:08:09,310
thing in this particular template up

00:08:07,660 --> 00:08:11,770
here at the top we can see this template

00:08:09,310 --> 00:08:15,669
runs on release created I actually want

00:08:11,770 --> 00:08:18,460
to run this guy on push and we look here

00:08:15,669 --> 00:08:20,200
in the editor right away I get some help

00:08:18,460 --> 00:08:22,900
to tell me what's going on so I want to

00:08:20,200 --> 00:08:25,830
run on push in fact I want to only one

00:08:22,900 --> 00:08:28,360
on run on pushes to the master branch

00:08:25,830 --> 00:08:30,910
and while the editor helps you with that

00:08:28,360 --> 00:08:32,620
syntax if I forget we've got

00:08:30,910 --> 00:08:36,510
documentation right here to help you

00:08:32,620 --> 00:08:39,219
along so let's commit that back and

00:08:36,510 --> 00:08:41,140
maybe this time we should yep so we see

00:08:39,219 --> 00:08:43,479
we we recognize there's a new workflow

00:08:41,140 --> 00:08:46,810
file committed and we're gonna start

00:08:43,479 --> 00:08:50,260
running it so in this case we're gonna

00:08:46,810 --> 00:08:53,140
run this particular workflow on runners

00:08:50,260 --> 00:08:55,270
that are hosted by github and we have

00:08:53,140 --> 00:08:57,310
runners available that are on all of the

00:08:55,270 --> 00:09:00,970
major operating systems so Windows Mac

00:08:57,310 --> 00:09:02,290
and Linux as well as the ability to host

00:09:00,970 --> 00:09:04,089
your own runners which i think is

00:09:02,290 --> 00:09:06,220
another great feature of actions in fact

00:09:04,089 --> 00:09:08,800
recently we ship the ability to host

00:09:06,220 --> 00:09:12,570
runners not only for an individual repo

00:09:08,800 --> 00:09:16,000
but also for the entire organization

00:09:12,570 --> 00:09:18,970
alright so while that goes we'll go

00:09:16,000 --> 00:09:21,339
ahead and we see it's built my action

00:09:18,970 --> 00:09:23,709
built my app I can go through here I can

00:09:21,339 --> 00:09:27,670
look the logs and see what happens and

00:09:23,709 --> 00:09:30,550
now it's deploying up to a sure

00:09:27,670 --> 00:09:34,030
I actually did this earlier so let's go

00:09:30,550 --> 00:09:49,900
ahead and take a quick look at this

00:09:34,030 --> 00:09:51,340
application running so we see here's my

00:09:49,900 --> 00:09:55,870
application running I deployed it

00:09:51,340 --> 00:09:57,160
earlier it looks pretty nice but there's

00:09:55,870 --> 00:09:59,980
a couple of things about that process

00:09:57,160 --> 00:10:02,590
that just aren't great for me so first

00:09:59,980 --> 00:10:04,770
off I think that we're missing a pretty

00:10:02,590 --> 00:10:06,790
important language here so I see no Ruby

00:10:04,770 --> 00:10:08,920
projects mentioned so I think we need to

00:10:06,790 --> 00:10:10,350
fix that and secondly you know I don't

00:10:08,920 --> 00:10:13,690
like the fact that we just you know

00:10:10,350 --> 00:10:14,890
pointed right at production you know we

00:10:13,690 --> 00:10:16,510
just said you know we're just going to

00:10:14,890 --> 00:10:18,550
push and push to production I think that

00:10:16,510 --> 00:10:20,710
could be fine even for a simple

00:10:18,550 --> 00:10:22,510
application like this but using some of

00:10:20,710 --> 00:10:25,620
the power github actions and some of the

00:10:22,510 --> 00:10:27,640
community I think we can do a lot better

00:10:25,620 --> 00:10:29,770
so what I've done is I have another

00:10:27,640 --> 00:10:32,260
version of my application that I've done

00:10:29,770 --> 00:10:35,890
a few different things to first off I've

00:10:32,260 --> 00:10:37,960
got a docker file so I decided that

00:10:35,890 --> 00:10:39,790
instead of just kind of using whatever

00:10:37,960 --> 00:10:41,800
node runtime I get I want to control

00:10:39,790 --> 00:10:44,860
those things so I've docker eyes this

00:10:41,800 --> 00:10:48,250
application and in addition I've added a

00:10:44,860 --> 00:10:50,020
bunch of different workflows and you can

00:10:48,250 --> 00:10:52,090
see I've got one that does a build I got

00:10:50,020 --> 00:10:55,060
this thing called chat ups here clean up

00:10:52,090 --> 00:10:59,130
PR etc so we're gonna walk through this

00:10:55,060 --> 00:11:01,960
more richer continuous delivery syrup

00:10:59,130 --> 00:11:04,900
scenario that I've built so as I

00:11:01,960 --> 00:11:07,510
mentioned my application is missing that

00:11:04,900 --> 00:11:09,820
core important language Ruby so what I'm

00:11:07,510 --> 00:11:11,470
going to do is I'm going to go in and

00:11:09,820 --> 00:11:12,880
make a quick change now I could open

00:11:11,470 --> 00:11:14,200
this up in a code space that would've

00:11:12,880 --> 00:11:16,450
been a really cool thing to do I think

00:11:14,200 --> 00:11:18,130
I'll try that later but for now since

00:11:16,450 --> 00:11:19,510
it's just a simple job simple change to

00:11:18,130 --> 00:11:21,520
JavaScript I'm gonna edit right in the

00:11:19,510 --> 00:11:24,610
browser so I'm gonna go over here and

00:11:21,520 --> 00:11:26,700
put Ruby that's the first language after

00:11:24,610 --> 00:11:29,350
all I think that looks good

00:11:26,700 --> 00:11:32,350
alright so we go down here gonna commit

00:11:29,350 --> 00:11:33,940
changes and in this case I can't commit

00:11:32,350 --> 00:11:35,470
directly to master branch because I've

00:11:33,940 --> 00:11:40,060
got branch protection setup so I'm going

00:11:35,470 --> 00:11:45,270
to say an ADD Ruby

00:11:40,060 --> 00:11:55,360
a ruby and we'll put a nice comment say

00:11:45,270 --> 00:11:59,020
Mona was sad ahead and proposes file

00:11:55,360 --> 00:12:01,030
change immediately will get dropped into

00:11:59,020 --> 00:12:02,560
the PR experience you guys are all

00:12:01,030 --> 00:12:06,550
probably very familiar with go and

00:12:02,560 --> 00:12:08,980
create this full request and then right

00:12:06,550 --> 00:12:10,750
away couple of things happen so as

00:12:08,980 --> 00:12:12,190
before we just kind of pushed and it

00:12:10,750 --> 00:12:13,540
kicked off immediately now we're in a

00:12:12,190 --> 00:12:16,000
pull request and we have a couple of

00:12:13,540 --> 00:12:19,230
required checks coming up and we can see

00:12:16,000 --> 00:12:21,550
them starting to run and click here go

00:12:19,230 --> 00:12:24,130
start to look at the details of running

00:12:21,550 --> 00:12:26,740
and we'll see we're doing a bunch more

00:12:24,130 --> 00:12:28,570
interesting things here in fact we've

00:12:26,740 --> 00:12:30,880
added a whole bunch of features to our

00:12:28,570 --> 00:12:32,380
build as compared to what was in the

00:12:30,880 --> 00:12:36,160
default template let's go take a look at

00:12:32,380 --> 00:12:38,380
that so this is the deploy PR workflow

00:12:36,160 --> 00:12:40,180
that goes off you can see I've called

00:12:38,380 --> 00:12:42,220
this deploy to Azure for review so

00:12:40,180 --> 00:12:43,870
what's happening here is first thing I'm

00:12:42,220 --> 00:12:45,340
doing is I've got pull requests

00:12:43,870 --> 00:12:46,990
targeting the master branch so this is

00:12:45,340 --> 00:12:49,300
gonna run anytime somebody raises a pull

00:12:46,990 --> 00:12:51,100
request to targets the master branch I

00:12:49,300 --> 00:12:53,440
have a job that's going to build my

00:12:51,100 --> 00:12:55,210
application and in order to help improve

00:12:53,440 --> 00:12:57,070
the speed of my build I'm using this

00:12:55,210 --> 00:12:59,020
action that we ship called cache and

00:12:57,070 --> 00:13:00,340
what it does is it lets me take some

00:12:59,020 --> 00:13:02,140
files that I don't think you're going to

00:13:00,340 --> 00:13:03,460
change very often in fact like these

00:13:02,140 --> 00:13:05,830
node modules probably are not going to

00:13:03,460 --> 00:13:08,350
change beyond whenever my lock file

00:13:05,830 --> 00:13:10,090
changes and store those out into fast

00:13:08,350 --> 00:13:11,740
store and so I can restore them quickly

00:13:10,090 --> 00:13:12,600
versus trying to always down them from

00:13:11,740 --> 00:13:15,880
NPM

00:13:12,600 --> 00:13:17,260
but I can also use a conditional which

00:13:15,880 --> 00:13:19,870
is another very powerful feature of

00:13:17,260 --> 00:13:22,480
action to say well if I don't find the

00:13:19,870 --> 00:13:24,970
exact version I want I can go ahead and

00:13:22,480 --> 00:13:26,500
run that NPM install if I want to of

00:13:24,970 --> 00:13:28,750
course we're going to build and then we

00:13:26,500 --> 00:13:31,570
hit our first action from a partner in

00:13:28,750 --> 00:13:33,880
this case docker has created a great set

00:13:31,570 --> 00:13:37,000
of actions for building and pushing

00:13:33,880 --> 00:13:39,280
docker containers as you can see this is

00:13:37,000 --> 00:13:40,960
a really nice action it made it super

00:13:39,280 --> 00:13:43,240
easy for me just to supply some

00:13:40,960 --> 00:13:43,720
credentials and it kind of takes care of

00:13:43,240 --> 00:13:45,580
the rest

00:13:43,720 --> 00:13:47,800
includes nice features like being able

00:13:45,580 --> 00:13:50,260
to say which which docker image I want

00:13:47,800 --> 00:13:53,260
to try to use as a cache for building

00:13:50,260 --> 00:13:55,510
this docker image to make it faster

00:13:53,260 --> 00:14:08,860
all right so let's go back and see how

00:13:55,510 --> 00:14:11,230
we're doing here all right so it looks

00:14:08,860 --> 00:14:14,020
like if I look at my deployed to review

00:14:11,230 --> 00:14:15,850
here and ruby has finished that's great

00:14:14,020 --> 00:14:19,210
so if I go back and look at the pull

00:14:15,850 --> 00:14:21,100
request I should now have an environment

00:14:19,210 --> 00:14:23,740
so the first thing that's happened is

00:14:21,100 --> 00:14:25,630
that workflow automatically created a

00:14:23,740 --> 00:14:27,850
new environment so a new version of my

00:14:25,630 --> 00:14:30,640
app for me and if I go click right

00:14:27,850 --> 00:14:32,860
clicking on that we can see yep we have

00:14:30,640 --> 00:14:35,050
our nice new version it's got its own

00:14:32,860 --> 00:14:36,820
URL so it's taking advantage of a nice

00:14:35,050 --> 00:14:37,540
feature of this particular cloud service

00:14:36,820 --> 00:14:40,750
that I'm using

00:14:37,540 --> 00:14:42,640
we got Ruby sweet I can see rails being

00:14:40,750 --> 00:14:47,110
that number one starred Ruby application

00:14:42,640 --> 00:14:49,150
Ruby repository on github fantastic so

00:14:47,110 --> 00:14:51,250
I've gone through and I said you know I

00:14:49,150 --> 00:14:54,310
think this looks good it's reviewed but

00:14:51,250 --> 00:14:56,580
you know what I'm not admin right so I'm

00:14:54,310 --> 00:14:58,900
just a developer I can write code

00:14:56,580 --> 00:15:00,220
perhaps but I can't necessarily deploy

00:14:58,900 --> 00:15:01,210
it up to production so what I want to do

00:15:00,220 --> 00:15:03,820
is I could have somebody else come in

00:15:01,210 --> 00:15:08,230
and I want to go ahead and deploy this

00:15:03,820 --> 00:15:10,720
guy the staging and comment on that and

00:15:08,230 --> 00:15:13,450
right away I'm so this is kind of

00:15:10,720 --> 00:15:15,790
interesting so I've added this command

00:15:13,450 --> 00:15:18,520
here I said okay deploy to staging what

00:15:15,790 --> 00:15:20,470
does that do so I've got you can see a

00:15:18,520 --> 00:15:22,360
couple reactions we can see github

00:15:20,470 --> 00:15:24,490
actions has seen this and it's

00:15:22,360 --> 00:15:26,650
dispatched it so let's go take a look

00:15:24,490 --> 00:15:28,630
and see what's happening here so we go

00:15:26,650 --> 00:15:30,520
back and we look at our workflows again

00:15:28,630 --> 00:15:32,440
we can see I've got this chat ops

00:15:30,520 --> 00:15:35,290
workflow and here I'm taking advantage

00:15:32,440 --> 00:15:36,910
of a community action so this guy no

00:15:35,290 --> 00:15:39,490
idea who is he is but Peter Evans wrote

00:15:36,910 --> 00:15:42,070
this really really cool we call slash

00:15:39,490 --> 00:15:43,540
command dispatch action and in this case

00:15:42,070 --> 00:15:45,750
what it's going to let me do is I've got

00:15:43,540 --> 00:15:49,960
two different commands that it supports

00:15:45,750 --> 00:15:52,570
deploy and swap the permission is set to

00:15:49,960 --> 00:15:54,700
only admins of the repo and this

00:15:52,570 --> 00:15:58,210
actually does work because in the case

00:15:54,700 --> 00:16:00,610
of issue comment event in this case it

00:15:58,210 --> 00:16:02,650
only runs out of the default master

00:16:00,610 --> 00:16:04,810
branch or the default branch for the

00:16:02,650 --> 00:16:06,390
repo and so you can put protections on

00:16:04,810 --> 00:16:08,670
that to make sure somebody doesn't go in

00:16:06,390 --> 00:16:10,140
change this here if you want to it's

00:16:08,670 --> 00:16:12,600
only going to run for pull request issue

00:16:10,140 --> 00:16:14,010
types and then it's going to give some

00:16:12,600 --> 00:16:16,140
reactions and what this does is this

00:16:14,010 --> 00:16:19,050
rate raises a repo dispatch of it and

00:16:16,140 --> 00:16:21,030
the repo dispatch event is something

00:16:19,050 --> 00:16:23,280
that we have that lets you kind of

00:16:21,030 --> 00:16:25,440
create your own custom events and github

00:16:23,280 --> 00:16:27,570
actions and really expand on what they

00:16:25,440 --> 00:16:29,340
can do so in this case we see I've got

00:16:27,570 --> 00:16:32,490
this deployed a staging workflow and

00:16:29,340 --> 00:16:35,610
what it does is it takes this reap

00:16:32,490 --> 00:16:37,560
repository dispatch for the deployed

00:16:35,610 --> 00:16:40,470
command and then does a bunch of really

00:16:37,560 --> 00:16:43,230
cool stuff with it so it's going to take

00:16:40,470 --> 00:16:44,550
and look at it's going to log me into a

00:16:43,230 --> 00:16:46,200
shirks I happen to be using edge should

00:16:44,550 --> 00:16:47,490
I get this secret and then the first

00:16:46,200 --> 00:16:49,590
thing it does is use yet another

00:16:47,490 --> 00:16:51,720
community action that sets up these

00:16:49,590 --> 00:16:54,090
deployment events so you saw the fact

00:16:51,720 --> 00:16:55,890
that I had that nice environment and

00:16:54,090 --> 00:16:58,310
deployment for my pull request that

00:16:55,890 --> 00:17:00,870
included a link out to everything now

00:16:58,310 --> 00:17:03,390
this this is the action that takes care

00:17:00,870 --> 00:17:05,490
of it does it for me and with this

00:17:03,390 --> 00:17:07,980
dispatch event you can see I've got this

00:17:05,490 --> 00:17:09,870
custom client payload so here I'm able

00:17:07,980 --> 00:17:12,180
to use the fact that github actions

00:17:09,870 --> 00:17:15,060
contains a lot of detailed information

00:17:12,180 --> 00:17:17,250
about what triggered them in the case of

00:17:15,060 --> 00:17:19,140
the repository dispatch event it can

00:17:17,250 --> 00:17:21,270
have a custom payload in that great

00:17:19,140 --> 00:17:23,310
action written by Peter Evans actually

00:17:21,270 --> 00:17:25,440
attach the pull request information so

00:17:23,310 --> 00:17:27,329
I'm able to even though this workflow is

00:17:25,440 --> 00:17:28,890
running out of the default branch go

00:17:27,329 --> 00:17:30,450
ahead and grab the pull request Shah

00:17:28,890 --> 00:17:32,730
from it so I know I'm deploying the

00:17:30,450 --> 00:17:35,070
right thing and then it's going to go

00:17:32,730 --> 00:17:37,590
ahead and deploy my deployment to

00:17:35,070 --> 00:17:43,080
staging so if we go back and look at our

00:17:37,590 --> 00:17:44,940
pull request we can see yep done a bunch

00:17:43,080 --> 00:17:48,090
of things so hey it's the successfully

00:17:44,940 --> 00:17:49,950
deployed PR 13 to staging which is

00:17:48,090 --> 00:17:51,660
really cool if I click here I want to

00:17:49,950 --> 00:17:54,660
see well what happened it takes me right

00:17:51,660 --> 00:17:56,010
to the run that did it I can see the

00:17:54,660 --> 00:18:00,320
comment happening I can see the

00:17:56,010 --> 00:18:03,750
deployment to Azure and if we go back I

00:18:00,320 --> 00:18:05,430
can certainly click on this or go here

00:18:03,750 --> 00:18:07,620
and look at the environment and say yep

00:18:05,430 --> 00:18:10,280
staged he's been deployed let's go up

00:18:07,620 --> 00:18:14,100
and see that I've got a new URL here

00:18:10,280 --> 00:18:17,190
complete with that ruby language that's

00:18:14,100 --> 00:18:18,390
fantastic and then the last thing I want

00:18:17,190 --> 00:18:19,559
to do is you know what I want to make

00:18:18,390 --> 00:18:21,330
sure that's

00:18:19,559 --> 00:18:26,879
reduction so I'm gonna run one more

00:18:21,330 --> 00:18:28,620
command it takes and does VIP swap into

00:18:26,879 --> 00:18:31,399
production so it's going to take my

00:18:28,620 --> 00:18:33,749
staging slot and it's simply going to

00:18:31,399 --> 00:18:35,070
swap it over to production

00:18:33,749 --> 00:18:38,059
make sure it's warmed up make sure it's

00:18:35,070 --> 00:18:40,679
ready to go and do some additional

00:18:38,059 --> 00:18:42,990
checks for me and then when it's all

00:18:40,679 --> 00:18:45,269
done I'll get one more entry here into

00:18:42,990 --> 00:18:47,970
this environment so I can see what's

00:18:45,269 --> 00:18:50,629
going on so while we're waiting for

00:18:47,970 --> 00:18:52,889
takes a couple of seconds to do this

00:18:50,629 --> 00:18:55,409
let's go ahead and check on the progress

00:18:52,889 --> 00:18:57,419
here so we've got my nice deploy to

00:18:55,409 --> 00:19:01,129
production I can see it's running swap

00:18:57,419 --> 00:19:03,869
command there let's go check on our job

00:19:01,129 --> 00:19:06,929
alright so this is at a swap with

00:19:03,869 --> 00:19:08,610
production can take a minute or so in

00:19:06,929 --> 00:19:10,499
this particular case I actually do have

00:19:08,610 --> 00:19:14,820
this running on one of those self-hosted

00:19:10,499 --> 00:19:17,639
runners that I mentioned I'm gonna go

00:19:14,820 --> 00:19:20,429
take a look at the workflow as we can

00:19:17,639 --> 00:19:23,759
see it looks awfully similar to the one

00:19:20,429 --> 00:19:24,869
that we did for for staging but we can

00:19:23,759 --> 00:19:26,820
also see that we're not rebuilding

00:19:24,869 --> 00:19:28,139
anything so we're taking advantage of

00:19:26,820 --> 00:19:29,639
some good practices we built that

00:19:28,139 --> 00:19:31,850
container once we tagged it with a

00:19:29,639 --> 00:19:34,440
particular shot and so we know that

00:19:31,850 --> 00:19:36,629
every time we deploy it you know whether

00:19:34,440 --> 00:19:38,759
to any environment we're not rebuilding

00:19:36,629 --> 00:19:40,019
we're not getting a new dependency we're

00:19:38,759 --> 00:19:42,570
deploying exactly what we're testing

00:19:40,019 --> 00:19:46,769
exactly what we're validating in every

00:19:42,570 --> 00:19:53,190
single case alright so got one more see

00:19:46,769 --> 00:19:55,710
if we're done here all right so now it's

00:19:53,190 --> 00:20:02,419
pending being deployed on this

00:19:55,710 --> 00:20:02,419
particular environment let's go see if

00:20:06,860 --> 00:20:11,400
it's still working

00:20:08,880 --> 00:20:15,300
so we'll move on and take a look at that

00:20:11,400 --> 00:20:17,640
one more workflow that we have so when

00:20:15,300 --> 00:20:18,840
this is all done I'm gonna check this

00:20:17,640 --> 00:20:20,700
deployed production I'm going to merge

00:20:18,840 --> 00:20:23,790
this pull request but I want to make

00:20:20,700 --> 00:20:26,700
sure that I don't leave any cloud

00:20:23,790 --> 00:20:28,710
resources out out there to be spending

00:20:26,700 --> 00:20:30,690
money so I have one more workflow that

00:20:28,710 --> 00:20:32,190
I'm running on pull request closed again

00:20:30,690 --> 00:20:33,930
back to that power of be able to run

00:20:32,190 --> 00:20:35,730
different workflows for different

00:20:33,930 --> 00:20:37,410
scenarios for different events every

00:20:35,730 --> 00:20:39,300
time a pull request is closed that is

00:20:37,410 --> 00:20:41,070
targeting master I'm going to go and I'm

00:20:39,300 --> 00:20:42,900
going to delete the review app that I

00:20:41,070 --> 00:20:45,900
had created for that so now I can make

00:20:42,900 --> 00:20:48,240
sure that my application I get that

00:20:45,900 --> 00:20:51,270
great review cycle I get that each

00:20:48,240 --> 00:20:52,920
instance my pull request is built I can

00:20:51,270 --> 00:20:54,900
push them through to different

00:20:52,920 --> 00:20:56,940
environments using chat ups all driven

00:20:54,900 --> 00:20:58,590
through actions and even make sure I

00:20:56,940 --> 00:21:03,930
clean up and you know keep that cloud

00:20:58,590 --> 00:21:07,260
spin down with actions so I was sort of

00:21:03,930 --> 00:21:09,570
going beyond the icd so I want to thank

00:21:07,260 --> 00:21:10,980
everybody for coming today and and

00:21:09,570 --> 00:21:13,950
really think about in this section

00:21:10,980 --> 00:21:15,720
section what we covered is you know sort

00:21:13,950 --> 00:21:17,160
of the overall power of actions what we

00:21:15,720 --> 00:21:20,340
can do with it how you can use it for

00:21:17,160 --> 00:21:22,170
cin CD how you can use github actions to

00:21:20,340 --> 00:21:25,370
automate things to Azure you can do the

00:21:22,170 --> 00:21:27,570
same thing to Amazon AWS to Google gke

00:21:25,370 --> 00:21:29,640
you know using there are some actions

00:21:27,570 --> 00:21:32,670
out there for terraform and other clouds

00:21:29,640 --> 00:21:34,710
and finally how community is really part

00:21:32,670 --> 00:21:36,930
of our vision and and how we want to

00:21:34,710 --> 00:21:39,060
take actions forward and you know that

00:21:36,930 --> 00:21:40,740
demo that I did all of those cool things

00:21:39,060 --> 00:21:43,050
I did would have taken me a very long

00:21:40,740 --> 00:21:46,880
time without definitely all of the

00:21:43,050 --> 00:21:50,400
community contributing to make that easy

00:21:46,880 --> 00:21:56,630
so thank you very much again and talk to

00:21:50,400 --> 00:22:00,200
you discussions thank you so much Chris

00:21:56,630 --> 00:22:03,390
thank you so much Chris for that amazing

00:22:00,200 --> 00:22:06,090
presentation on get up actions the

00:22:03,390 --> 00:22:08,700
ability to turn infrastructure into code

00:22:06,090 --> 00:22:10,880
not only that what I find the most

00:22:08,700 --> 00:22:13,980
fascinating about actions is the

00:22:10,880 --> 00:22:16,080
community add into actions whether it's

00:22:13,980 --> 00:22:17,730
an individual developer or it's a

00:22:16,080 --> 00:22:20,100
partner putting the actions in the

00:22:17,730 --> 00:22:21,330
marketplace and coming to market place

00:22:20,100 --> 00:22:24,150
and seeing it grow day

00:22:21,330 --> 00:22:26,220
by day it is stick taking us one step

00:22:24,150 --> 00:22:28,410
closer to what I've always dreamed about

00:22:26,220 --> 00:22:30,720
which is solving problems in a

00:22:28,410 --> 00:22:32,400
declarative manner which is which is

00:22:30,720 --> 00:22:34,860
some of the things we already do right

00:22:32,400 --> 00:22:36,360
now is if I want to do a dev up step and

00:22:34,860 --> 00:22:38,220
I don't exactly know what I want to do

00:22:36,360 --> 00:22:40,320
more than likely somebody has written an

00:22:38,220 --> 00:22:43,890
action in marketplace and all I have to

00:22:40,320 --> 00:22:46,470
do is search for it so remember after

00:22:43,890 --> 00:22:49,290
every single session we can you can ask

00:22:46,470 --> 00:22:50,970
questions and discussions and we can ask

00:22:49,290 --> 00:22:54,270
those questions live right now

00:22:50,970 --> 00:22:57,470
so moving right along I have a few

00:22:54,270 --> 00:23:00,180
questions for you Chris from the people

00:22:57,470 --> 00:23:03,360
somebody asked will actually support

00:23:00,180 --> 00:23:07,980
some kind of user interaction like input

00:23:03,360 --> 00:23:10,860
step in Jenkins some so some action that

00:23:07,980 --> 00:23:13,500
young girl could ask for human input to

00:23:10,860 --> 00:23:15,780
approve or decline to continue workflow

00:23:13,500 --> 00:23:18,450
or I bought it with canceled or fill

00:23:15,780 --> 00:23:21,330
what is the general roadmap of Arab

00:23:18,450 --> 00:23:23,370
action so that's a lot of very long

00:23:21,330 --> 00:23:25,560
sentence I'm just gonna read it over

00:23:23,370 --> 00:23:30,510
again so that we are all on the same

00:23:25,560 --> 00:23:33,810
page so gross WS get abused across ws Oh

00:23:30,510 --> 00:23:35,910
gross WS says will actually support some

00:23:33,810 --> 00:23:38,850
kind of user interaction like input step

00:23:35,910 --> 00:23:41,370
in Jenkins for example some action that

00:23:38,850 --> 00:23:43,740
Yama could ask a human in for input to

00:23:41,370 --> 00:23:48,030
approve or decline to continue or cloak

00:23:43,740 --> 00:23:49,590
or bought it with a canceled or fail yes

00:23:48,030 --> 00:23:52,320
it is absolutely something that is on

00:23:49,590 --> 00:23:54,030
our roadmap to do we have a lot of great

00:23:52,320 --> 00:23:56,130
things kind of coming in that particular

00:23:54,030 --> 00:23:59,670
area you know that idea of having sort

00:23:56,130 --> 00:24:01,470
of manual approvals for deployments more

00:23:59,670 --> 00:24:04,230
than just the chat UPS thing I showed

00:24:01,470 --> 00:24:07,800
the ability to trigger manual workflows

00:24:04,230 --> 00:24:09,780
manually to request specific input you

00:24:07,800 --> 00:24:11,040
know a great example that is I've got a

00:24:09,780 --> 00:24:12,600
deployment workflow that I want to

00:24:11,040 --> 00:24:13,920
trigger but when I when somebody

00:24:12,600 --> 00:24:15,510
triggers it I want to request a

00:24:13,920 --> 00:24:16,860
particular version of a docker container

00:24:15,510 --> 00:24:18,780
that they want to deploy or something

00:24:16,860 --> 00:24:23,610
like that so those are absolutely things

00:24:18,780 --> 00:24:25,650
that we do intend to provide great jeido

00:24:23,610 --> 00:24:31,380
do you want to try means you have any

00:24:25,650 --> 00:24:33,120
more questions get up actions I have

00:24:31,380 --> 00:24:34,680
right before this I tried to like start

00:24:33,120 --> 00:24:36,420
playing with it for like 20 minutes do

00:24:34,680 --> 00:24:37,980
not know be a bad idea to get in the

00:24:36,420 --> 00:24:40,980
zone right before I need to go be social

00:24:37,980 --> 00:24:44,340
so what are some of the coolest actions

00:24:40,980 --> 00:24:46,560
you've seen so far well I showed a

00:24:44,340 --> 00:24:48,420
couple of them like the The Dispatch one

00:24:46,560 --> 00:24:50,490
is really really neat I had a lot of fun

00:24:48,420 --> 00:24:53,760
playing with that so whoever created

00:24:50,490 --> 00:24:56,130
that mr. Peter Evans on github that was

00:24:53,760 --> 00:24:58,590
a lot of fun it was really cool you know

00:24:56,130 --> 00:25:01,080
one of our our maintain errs male who

00:24:58,590 --> 00:25:02,460
works on the yarn project early on with

00:25:01,080 --> 00:25:04,170
actions and this has been a few months

00:25:02,460 --> 00:25:06,540
ago but he created a really really cool

00:25:04,170 --> 00:25:11,280
action that whenever somebody posted an

00:25:06,540 --> 00:25:13,020
issue about yarn he would he would check

00:25:11,280 --> 00:25:14,760
that if there was a code block in that

00:25:13,020 --> 00:25:16,530
issue he would take that code and he

00:25:14,760 --> 00:25:18,690
would run it against the latest version

00:25:16,530 --> 00:25:21,690
of the yarn code and the idea being that

00:25:18,690 --> 00:25:22,950
perhaps the user filed a bug on an old

00:25:21,690 --> 00:25:24,270
version and it might have already been

00:25:22,950 --> 00:25:26,400
fixed because that happens all the time

00:25:24,270 --> 00:25:28,890
I mean developers find bugs and they fix

00:25:26,400 --> 00:25:30,450
them that they don't necessarily file or

00:25:28,890 --> 00:25:32,160
it doesn't go through a big process and

00:25:30,450 --> 00:25:36,720
so I thought was really really really

00:25:32,160 --> 00:25:39,000
cool very very neat use of actions so

00:25:36,720 --> 00:25:41,450
I'm gonna step in and ask more questions

00:25:39,000 --> 00:25:44,640
while we have Chris right here in life

00:25:41,450 --> 00:25:47,850
good abuser Atul - ahsoka

00:25:44,640 --> 00:25:50,040
- tulasi has a question when will

00:25:47,850 --> 00:25:53,550
actions and packages be available in

00:25:50,040 --> 00:25:56,010
enterprise on Prem well there is some

00:25:53,550 --> 00:25:59,670
curated version of the marketplace along

00:25:56,010 --> 00:26:02,400
with it when it is released on Prem

00:25:59,670 --> 00:26:04,260
so as NAT mentioned this morning github

00:26:02,400 --> 00:26:07,020
actions and getup packages are both

00:26:04,260 --> 00:26:09,210
coming to github Enterprise Server we

00:26:07,020 --> 00:26:12,390
plan to ship that later on this year

00:26:09,210 --> 00:26:14,040
I can't divulge the exact exact date but

00:26:12,390 --> 00:26:16,770
it is absolutely happening this year we

00:26:14,040 --> 00:26:18,450
are working incredibly hard on that we

00:26:16,770 --> 00:26:19,530
have a couple of different plans for how

00:26:18,450 --> 00:26:23,520
we're going to let people use the

00:26:19,530 --> 00:26:25,170
community so in the in the box or with

00:26:23,520 --> 00:26:27,000
Enterprise Server we will ship the

00:26:25,170 --> 00:26:30,090
actions that we github have produced

00:26:27,000 --> 00:26:31,980
that we deem safe and have been you know

00:26:30,090 --> 00:26:33,320
we check the security and we know who

00:26:31,980 --> 00:26:35,430
builds them and all that kind of stuff

00:26:33,320 --> 00:26:37,710
we will also have a way for you to

00:26:35,430 --> 00:26:40,470
configure your Enterprise Server to

00:26:37,710 --> 00:26:41,850
reach out to the marketplace and be able

00:26:40,470 --> 00:26:43,860
to potentially use anything in the

00:26:41,850 --> 00:26:44,500
entire marketplace and then finally

00:26:43,860 --> 00:26:45,400
obviously

00:26:44,500 --> 00:26:47,830
for those security conscious

00:26:45,400 --> 00:26:49,540
organizations we actually have the need

00:26:47,830 --> 00:26:51,190
for this on github.com as well let's get

00:26:49,540 --> 00:26:53,890
up Enterprise Server we will provide a

00:26:51,190 --> 00:26:55,570
way for administrators to go in and

00:26:53,890 --> 00:26:57,340
limit the set of actions maybe there's

00:26:55,570 --> 00:27:00,160
particular orgs or so they're saying hey

00:26:57,340 --> 00:27:02,650
we're absolutely happy to use actions

00:27:00,160 --> 00:27:04,780
from AWS or from Asia or from a Shi Corp

00:27:02,650 --> 00:27:05,920
or docker but we don't want to use the

00:27:04,780 --> 00:27:07,600
random ones in the marketplace just

00:27:05,920 --> 00:27:09,940
because we don't know the Providence or

00:27:07,600 --> 00:27:16,210
if there's two factor auth or those

00:27:09,940 --> 00:27:17,640
kinds of things so there's some more

00:27:16,210 --> 00:27:21,130
questions

00:27:17,640 --> 00:27:23,350
this user says guy use get up actions

00:27:21,130 --> 00:27:25,600
for some actions like welcome a new

00:27:23,350 --> 00:27:29,020
member of my team and keep using circle

00:27:25,600 --> 00:27:30,610
CI for push to merge you know if you

00:27:29,020 --> 00:27:32,680
want to just use actions for some of

00:27:30,610 --> 00:27:35,110
those sort of we call sdlc events you're

00:27:32,680 --> 00:27:37,210
absolutely welcome to in fact we do have

00:27:35,110 --> 00:27:39,310
some actions that we ship that are sort

00:27:37,210 --> 00:27:40,450
of breeding our first time contributor

00:27:39,310 --> 00:27:42,640
ones there's a whole bunch of other ones

00:27:40,450 --> 00:27:44,700
in the marketplace so if that's where

00:27:42,640 --> 00:27:47,770
you'd like to start I think that's great

00:27:44,700 --> 00:27:51,190
I'll take the next one mode you so we

00:27:47,770 --> 00:27:53,770
have one from Tinney tenem laker

00:27:51,190 --> 00:27:55,900
I'm sorry if I butchered that that's the

00:27:53,770 --> 00:27:58,390
house that's the handle but um it's a

00:27:55,900 --> 00:27:59,860
great demo where do you see actions have

00:27:58,390 --> 00:28:02,830
the biggest advantages compared to other

00:27:59,860 --> 00:28:04,450
CI /cs may be that most supposed to be

00:28:02,830 --> 00:28:09,100
CD products like jenkins

00:28:04,450 --> 00:28:11,110
or get lat pipelines I really think that

00:28:09,100 --> 00:28:12,460
the the coolest feature of actions and

00:28:11,110 --> 00:28:14,620
the thing that makes a difference is the

00:28:12,460 --> 00:28:17,080
fact that we are trying to focus beyond

00:28:14,620 --> 00:28:19,090
just CI CD we absolutely want to have a

00:28:17,080 --> 00:28:21,880
very very flexible a very powerful

00:28:19,090 --> 00:28:23,650
enterprise class CI CD system but there

00:28:21,880 --> 00:28:26,530
are so many more things that developers

00:28:23,650 --> 00:28:28,990
automate and as we add more things into

00:28:26,530 --> 00:28:31,060
github and into the github family take

00:28:28,990 --> 00:28:33,070
it take a look at the NPM acquisition

00:28:31,060 --> 00:28:35,470
like as you know and we have that plus

00:28:33,070 --> 00:28:38,080
we have dependent but over time we can

00:28:35,470 --> 00:28:40,030
do really great scenarios like hey every

00:28:38,080 --> 00:28:43,030
time dependable recognizes there's a

00:28:40,030 --> 00:28:44,740
dependent new dependency of your new

00:28:43,030 --> 00:28:46,810
version of a dependency of your repo

00:28:44,740 --> 00:28:48,370
could we fire an event and let you run

00:28:46,810 --> 00:28:50,680
all your unit tests against that new

00:28:48,370 --> 00:28:53,260
dependency automatically to kind of get

00:28:50,680 --> 00:28:54,820
yourself a litmus test of did they break

00:28:53,260 --> 00:28:55,929
you and maybe you can just automatically

00:28:54,820 --> 00:28:57,519
take it

00:28:55,929 --> 00:28:59,080
you know beyond just the security fix

00:28:57,519 --> 00:29:00,309
but I think there's a lot of really cool

00:28:59,080 --> 00:29:03,309
things that in that sort of broader

00:29:00,309 --> 00:29:08,080
ecosystem and broader set of events that

00:29:03,309 --> 00:29:11,889
we can do so I think that will have to

00:29:08,080 --> 00:29:14,799
be our last question for right now thank

00:29:11,889 --> 00:29:16,090
you Chris thank you so much I look

00:29:14,799 --> 00:29:18,299
forward to talking to you guys in the

00:29:16,090 --> 00:29:18,299

YouTube URL: https://www.youtube.com/watch?v=-2UgL63_yB4


