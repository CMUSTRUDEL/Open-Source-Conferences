Title: Using GitHub Actions and HashiCorp Terraform - GitHub Satellite 2020
Publication date: 2020-05-07
Playlist: GitHub Satellite 2020 - Work
Description: 
	Presented by Anubhav Mishra, Technical Advisor to the CTO, HashiCorp

Speed is an important success metric for modern development teams. As enterprises start to scale in multi-cloud environments, the Continuous Integration/Continuous Deployment (CI/CD) process is no longer just a developer specific workflow, but a DevOps workflow where both development and operations coordinate their tasks to move forward rapidly. GitHub and HashiCorp are working closely to build an end-to-end DevOps workflow encompassing the entire application development lifecycle. Together we help provide a powerful CI/CD solution that prevents developers and operators from having to wait for their respective tasks to be completed, accelerating delivery. Join this session to learn and see how an updated GitHub Actions and HashiCorp Terraform workflow can simplify collaboration and increase your development team’s velocity through infrastructure automation and applications both delivered as code and on-demand.
GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the world’s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:00,299 --> 00:00:04,799
oh yeah I know you're excited about this

00:00:02,879 --> 00:00:07,379
one you're excited about older I told

00:00:04,799 --> 00:00:08,550
you that but go on your favorite excited

00:00:07,379 --> 00:00:11,460
about this one for a while

00:00:08,550 --> 00:00:15,330
who've we got alright so our next

00:00:11,460 --> 00:00:17,880
speaker is a DJ but we didn't have him

00:00:15,330 --> 00:00:20,039
come on to be on the turntable actually

00:00:17,880 --> 00:00:21,630
he's the technical advisor to the CTO of

00:00:20,039 --> 00:00:23,789
hashey Corp and I'm so excited about

00:00:21,630 --> 00:00:25,590
this because we use Hoshi court here at

00:00:23,789 --> 00:00:27,449
github so I'm really excited to hear

00:00:25,590 --> 00:00:29,730
what he has to say yeah the name of his

00:00:27,449 --> 00:00:31,800
talk is collaborative application and

00:00:29,730 --> 00:00:34,410
infrastructure workflow using github

00:00:31,800 --> 00:00:37,200
actions and hashey cork terraform please

00:00:34,410 --> 00:00:40,219
please help me introduce the one and

00:00:37,200 --> 00:00:40,219
only Mishra

00:00:40,450 --> 00:00:45,880
[Music]

00:00:53,620 --> 00:00:55,680
you

00:01:00,790 --> 00:01:04,180
I apologize my mic was muted say hello

00:01:03,400 --> 00:01:06,520
everyone

00:01:04,180 --> 00:01:07,840
say I'd really really appreciate you

00:01:06,520 --> 00:01:09,580
know having me at the conference this is

00:01:07,840 --> 00:01:11,920
one of the confidence that look you're

00:01:09,580 --> 00:01:13,600
gonna look forward to presenting at for

00:01:11,920 --> 00:01:15,430
a while now so this is should be an

00:01:13,600 --> 00:01:17,530
exciting talk so today I'm going to be

00:01:15,430 --> 00:01:20,050
presenting collaborative application and

00:01:17,530 --> 00:01:21,370
infrastructure workflow using get up

00:01:20,050 --> 00:01:23,890
actions and how she could terraform

00:01:21,370 --> 00:01:25,540
switch and we talked about how get up

00:01:23,890 --> 00:01:27,640
actions and hashcode perform work

00:01:25,540 --> 00:01:29,680
together and we will talk about a few

00:01:27,640 --> 00:01:31,780
workflows I talked about the industry

00:01:29,680 --> 00:01:33,700
shift and things like that and so yeah

00:01:31,780 --> 00:01:36,550
so my name is Misha I'm the technical

00:01:33,700 --> 00:01:38,320
advisor to the CTO at Hoshi Corp but my

00:01:36,550 --> 00:01:40,600
background is in Computer Engineering so

00:01:38,320 --> 00:01:42,490
I've done I've done a bunch of operation

00:01:40,600 --> 00:01:44,380
engineering work I've also tons of

00:01:42,490 --> 00:01:47,020
engineering work so I empathize with

00:01:44,380 --> 00:01:49,300
both operators and developers and I know

00:01:47,020 --> 00:01:52,150
it's not easy to ship software today and

00:01:49,300 --> 00:01:54,880
so a lot of empathy Act words both sides

00:01:52,150 --> 00:01:56,619
here now as a role as a technical

00:01:54,880 --> 00:01:58,270
advisor to the city where I work on few

00:01:56,619 --> 00:02:01,450
strategic projects for Hoshi curve I

00:01:58,270 --> 00:02:03,310
span all of open-source projects so yeah

00:02:01,450 --> 00:02:05,680
it's an exciting exciting gig so in

00:02:03,310 --> 00:02:07,780
terms of open source I have contributed

00:02:05,680 --> 00:02:09,729
and created a few projects one of them

00:02:07,780 --> 00:02:11,680
is Atlantis which helps you kind of cool

00:02:09,729 --> 00:02:13,660
a bit of infrastructure using terraform

00:02:11,680 --> 00:02:15,730
and then I'm also provide a mangina for

00:02:13,660 --> 00:02:17,590
virtual cubelet and more recently I

00:02:15,730 --> 00:02:20,590
gotten into the new projects that have

00:02:17,590 --> 00:02:21,970
come out from Microsoft open-source one

00:02:20,590 --> 00:02:24,430
of them is Stafford which allows you to

00:02:21,970 --> 00:02:26,830
kind of distribute Li build distributed

00:02:24,430 --> 00:02:29,260
applications I've contributed a few

00:02:26,830 --> 00:02:31,450
things there but the most exciting part

00:02:29,260 --> 00:02:33,489
of my job you know in the past few years

00:02:31,450 --> 00:02:36,100
has been creating a podcast for Hoshi

00:02:33,489 --> 00:02:38,769
cos my co-host that filled a bunch of

00:02:36,100 --> 00:02:41,830
folks at her she cast her she called and

00:02:38,769 --> 00:02:43,390
developer advocacy team ok a bit about

00:02:41,830 --> 00:02:46,690
her she code but for those who don't

00:02:43,390 --> 00:02:48,670
know about the company they're a cloud

00:02:46,690 --> 00:02:50,470
infrastructure automation company we

00:02:48,670 --> 00:02:52,720
focused on four different areas

00:02:50,470 --> 00:02:54,610
provisioning and securing applications

00:02:52,720 --> 00:02:57,310
connecting them and then running them at

00:02:54,610 --> 00:02:59,890
scale in terms of the company we were

00:02:57,310 --> 00:03:02,860
founded in 2012 by Mitchell Hashimoto

00:02:59,890 --> 00:03:05,200
and our man that car it's been a it's

00:03:02,860 --> 00:03:07,420
been a bit a couple of years exciting

00:03:05,200 --> 00:03:09,730
years and then in terms of employees we

00:03:07,420 --> 00:03:12,669
have 900 plus employees you're almost

00:03:09,730 --> 00:03:14,220
fully remote and we work on these six

00:03:12,669 --> 00:03:16,920
open source projects that are free

00:03:14,220 --> 00:03:19,020
use free to download very proudly hosted

00:03:16,920 --> 00:03:20,610
on github and so I'll kind of we have a

00:03:19,020 --> 00:03:22,290
quick intro into you know kind of each

00:03:20,610 --> 00:03:23,970
one of these tools and I think we'll

00:03:22,290 --> 00:03:26,520
only focus on terraform for this stop

00:03:23,970 --> 00:03:27,900
and so I'll start from the lower left so

00:03:26,520 --> 00:03:29,940
we have vegan which is a developer

00:03:27,900 --> 00:03:31,860
environments tool helps you know create

00:03:29,940 --> 00:03:33,780
develop environments share them you have

00:03:31,860 --> 00:03:35,190
Packer which is a silver imaging tool it

00:03:33,780 --> 00:03:37,770
helps you kind of create several images

00:03:35,190 --> 00:03:39,300
on RAM cloud we have terraform which is

00:03:37,770 --> 00:03:40,920
the infrastructure as code tool you know

00:03:39,300 --> 00:03:43,050
kind of you can drag things in plain

00:03:40,920 --> 00:03:45,210
text files and make them happen and this

00:03:43,050 --> 00:03:47,250
is this is kind of the focus of the talk

00:03:45,210 --> 00:03:48,720
and then we have what which is a secrets

00:03:47,250 --> 00:03:51,390
management tool helps you kind of manage

00:03:48,720 --> 00:03:53,340
secrets in one place I can help you with

00:03:51,390 --> 00:03:54,990
that crazy secret sprawl that we see in

00:03:53,340 --> 00:03:57,750
our data centers and then we have

00:03:54,990 --> 00:03:59,430
console which is a distributed service

00:03:57,750 --> 00:04:01,230
mesh a kind of helps you connect

00:03:59,430 --> 00:04:03,750
application securely and gives you the

00:04:01,230 --> 00:04:05,610
l7 routing and Canary deployments and

00:04:03,750 --> 00:04:07,350
things like that then we have Nomad

00:04:05,610 --> 00:04:09,060
which is a journal purpose cluster

00:04:07,350 --> 00:04:10,830
scheduler very in line with kubernetes

00:04:09,060 --> 00:04:11,700
but it can actually schedule

00:04:10,830 --> 00:04:13,860
containerized

00:04:11,700 --> 00:04:15,990
and non-continuous applications and even

00:04:13,860 --> 00:04:18,540
vm so if you like that was a bit of a

00:04:15,990 --> 00:04:20,519
hardship so kind of taking a step back

00:04:18,540 --> 00:04:23,280
before you get into github actions and

00:04:20,519 --> 00:04:24,840
formally gonna take a look la what is

00:04:23,280 --> 00:04:27,540
happening in the industry right like the

00:04:24,840 --> 00:04:30,240
Hashi core view right which is there's

00:04:27,540 --> 00:04:31,740
this transition into the box and the bit

00:04:30,240 --> 00:04:33,450
the big the big the big change that's

00:04:31,740 --> 00:04:35,010
happening is we're going from this like

00:04:33,450 --> 00:04:36,960
traditional data center approach in

00:04:35,010 --> 00:04:38,610
which you had you know hardware you have

00:04:36,960 --> 00:04:41,280
to manage like you know networking

00:04:38,610 --> 00:04:43,290
cooling you know black them up figure

00:04:41,280 --> 00:04:45,870
out power into things things like you

00:04:43,290 --> 00:04:47,550
know the public cloud right we have the

00:04:45,870 --> 00:04:49,530
the modern data center approach in which

00:04:47,550 --> 00:04:51,479
things have you know dynamic in nature

00:04:49,530 --> 00:04:52,650
they can come up and down and you can

00:04:51,479 --> 00:04:55,350
just sign up for a cloud provider

00:04:52,650 --> 00:04:57,300
account and you know you get you get

00:04:55,350 --> 00:04:59,310
access to amazing computing you can do

00:04:57,300 --> 00:05:00,810
we can scale up applications fairly

00:04:59,310 --> 00:05:02,729
easily so this is the big change right

00:05:00,810 --> 00:05:05,100
in terms of process we're going from

00:05:02,729 --> 00:05:07,560
this like very ticket driven approach in

00:05:05,100 --> 00:05:09,210
which you had to create tickets and then

00:05:07,560 --> 00:05:11,160
work on them and then you know wait for

00:05:09,210 --> 00:05:13,650
hardware wait for like you know the

00:05:11,160 --> 00:05:15,360
teams to line behind them into this idea

00:05:13,650 --> 00:05:16,470
of like devops right maybe use the

00:05:15,360 --> 00:05:18,540
DevOps philosophy

00:05:16,470 --> 00:05:20,040
kind of you know do things which are

00:05:18,540 --> 00:05:22,500
which you know drive systems that are

00:05:20,040 --> 00:05:26,099
API driven and give you like that cell

00:05:22,500 --> 00:05:27,540
service so why are we

00:05:26,099 --> 00:05:29,160
you know why this chef

00:05:27,540 --> 00:05:31,080
like what is it there's many reasons for

00:05:29,160 --> 00:05:33,710
this but one of the critical reasons is

00:05:31,080 --> 00:05:36,060
increasing developer velocity which is

00:05:33,710 --> 00:05:38,070
how how fast can be shipped to

00:05:36,060 --> 00:05:39,570
production how fast can we ship a

00:05:38,070 --> 00:05:41,670
feature to production kind of empower

00:05:39,570 --> 00:05:43,770
the developers and kind of make an

00:05:41,670 --> 00:05:47,070
efficient use and you can make the time

00:05:43,770 --> 00:05:48,720
to plan very efficient and what helps

00:05:47,070 --> 00:05:51,120
you achieve this this is the kind of a

00:05:48,720 --> 00:05:53,670
DevOps philosophy right you have your

00:05:51,120 --> 00:05:56,340
core teams like operations platform

00:05:53,670 --> 00:05:59,670
teams security teams kind of build ap is

00:05:56,340 --> 00:06:00,960
that the developers could use all right

00:05:59,670 --> 00:06:02,460
so this is where we kind of introduced

00:06:00,960 --> 00:06:04,530
era foam and then we talked about if you

00:06:02,460 --> 00:06:06,360
guys talk about making things happen we

00:06:04,530 --> 00:06:08,820
introduced Hasek up there foam which is

00:06:06,360 --> 00:06:10,230
free to use free to download and the the

00:06:08,820 --> 00:06:12,150
primary goal of terraform is to kind of

00:06:10,230 --> 00:06:14,430
provide you with this unified workflow

00:06:12,150 --> 00:06:16,830
using infrastructure as code so that's

00:06:14,430 --> 00:06:18,720
the core of the of the product the idea

00:06:16,830 --> 00:06:20,220
here is to kind of have you know you

00:06:18,720 --> 00:06:22,140
write the index files and make them

00:06:20,220 --> 00:06:23,640
happen and use the same software

00:06:22,140 --> 00:06:25,950
engineering philosophy that we've been

00:06:23,640 --> 00:06:28,080
using for a while in and pull that into

00:06:25,950 --> 00:06:30,150
infrastructure right like and and use it

00:06:28,080 --> 00:06:32,460
to like version infrastructure and kind

00:06:30,150 --> 00:06:34,380
of iterate over it safely the idea here

00:06:32,460 --> 00:06:36,000
is to go from one stage to the other you

00:06:34,380 --> 00:06:37,500
know kind of a safe manner so from

00:06:36,000 --> 00:06:40,890
nothing to something and maybe they want

00:06:37,500 --> 00:06:41,880
a to operations and then the the key

00:06:40,890 --> 00:06:43,530
thing here is if you want to be

00:06:41,880 --> 00:06:45,090
provisioning anything anywhere and then

00:06:43,530 --> 00:06:48,360
I mean anything anywhere I literally

00:06:45,090 --> 00:06:51,120
mean it like on trim cloud DNS providers

00:06:48,360 --> 00:06:52,980
CDN providers if you have an API that

00:06:51,120 --> 00:06:56,850
can do crud operations you should be

00:06:52,980 --> 00:06:59,250
able to work on that music there so how

00:06:56,850 --> 00:07:01,800
does provisioning work whatever form so

00:06:59,250 --> 00:07:03,480
you have you have guitar foam core and

00:07:01,800 --> 00:07:05,730
telephone provider so as a user what you

00:07:03,480 --> 00:07:08,580
see is you know you just download this

00:07:05,730 --> 00:07:09,720
binary and use it but in real life there

00:07:08,580 --> 00:07:12,090
is the turf form core that is

00:07:09,720 --> 00:07:14,370
responsible for operations like you know

00:07:12,090 --> 00:07:16,020
parsing the config file you know and

00:07:14,370 --> 00:07:17,430
doing things like state management and

00:07:16,020 --> 00:07:19,470
stuff like that and it doesn't really

00:07:17,430 --> 00:07:21,480
know about like the implementation

00:07:19,470 --> 00:07:22,860
details of the provider which is like

00:07:21,480 --> 00:07:25,170
you know how do you manage a server or

00:07:22,860 --> 00:07:26,850
so on and then the providers are the

00:07:25,170 --> 00:07:29,910
ones that actually makes the API calls

00:07:26,850 --> 00:07:32,160
to Amazon github and kubernetes and so

00:07:29,910 --> 00:07:33,990
on you have 200 plus providers that are

00:07:32,160 --> 00:07:36,570
open sourced and a build on top of the

00:07:33,990 --> 00:07:38,520
open source model we have 1200 plus

00:07:36,570 --> 00:07:40,200
contributors that actually maintain and

00:07:38,520 --> 00:07:41,550
help us kind of drive that ecosystem

00:07:40,200 --> 00:07:45,610
which is pretty

00:07:41,550 --> 00:07:47,980
so one of my favorite examples is to use

00:07:45,610 --> 00:07:51,400
github to use terraform to manage github

00:07:47,980 --> 00:07:53,020
which is kind of meta in this case so

00:07:51,400 --> 00:07:55,570
even at hajikko what we do is we create

00:07:53,020 --> 00:07:58,390
repositories we manage permissions all

00:07:55,570 --> 00:08:00,520
using data form and can provide this

00:07:58,390 --> 00:08:02,110
like really simple Etsy a language where

00:08:00,520 --> 00:08:03,820
you can write like what you want in this

00:08:02,110 --> 00:08:06,070
case we are creating a repository and

00:08:03,820 --> 00:08:08,860
maybe assigning a certain troll to a

00:08:06,070 --> 00:08:11,050
member right fairly easy so a typical

00:08:08,860 --> 00:08:13,210
workflow for a terraform user is like

00:08:11,050 --> 00:08:14,830
for a single user maybe smaller team is

00:08:13,210 --> 00:08:16,330
as a developer and operator you just

00:08:14,830 --> 00:08:18,280
download the binary and you write some

00:08:16,330 --> 00:08:20,230
tear form the first thing you run is

00:08:18,280 --> 00:08:22,300
something called a tear form that that

00:08:20,230 --> 00:08:23,830
helps you preview what's gonna happen

00:08:22,300 --> 00:08:25,570
before it actually happens so in this

00:08:23,830 --> 00:08:29,740
case you can see we are adding one

00:08:25,570 --> 00:08:31,330
github repository and you're able to

00:08:29,740 --> 00:08:33,370
kind of preview things this is just a

00:08:31,330 --> 00:08:34,900
video only operation that doesn't really

00:08:33,370 --> 00:08:37,120
do anything and this is how you can have

00:08:34,900 --> 00:08:38,680
safely iterate over it it's structure so

00:08:37,120 --> 00:08:40,450
in this case you see now we can actually

00:08:38,680 --> 00:08:41,919
if you diffuse this plan looks good to

00:08:40,450 --> 00:08:45,310
you you can go ahead and apply it and

00:08:41,919 --> 00:08:46,930
you can use the plan as in an input for

00:08:45,310 --> 00:08:48,520
the apply and only that plan will be

00:08:46,930 --> 00:08:51,010
executed this is where the fun kind of

00:08:48,520 --> 00:08:52,900
gives you that guarantee that you know

00:08:51,010 --> 00:08:54,790
only the change that you want to go out

00:08:52,900 --> 00:08:56,350
will go out and it's in real life

00:08:54,790 --> 00:08:58,510
something changed for example like

00:08:56,350 --> 00:09:00,790
someone went to the Amazon console and

00:08:58,510 --> 00:09:02,710
github you I hated something which you

00:09:00,790 --> 00:09:04,780
can fix with this plan then this apply

00:09:02,710 --> 00:09:06,490
will safely fail and you don't get your

00:09:04,780 --> 00:09:09,490
resource which is what we want in

00:09:06,490 --> 00:09:11,350
reality right and if everything works we

00:09:09,490 --> 00:09:13,930
get your Amazon server you get your cube

00:09:11,350 --> 00:09:16,780
in any spot you get your you know it has

00:09:13,930 --> 00:09:18,850
a tree none of this happens using the

00:09:16,780 --> 00:09:20,950
CLI as well on your computer this is for

00:09:18,850 --> 00:09:24,460
like a 1:1 you know one user may be a

00:09:20,950 --> 00:09:25,690
smaller team so how do collaboration

00:09:24,460 --> 00:09:27,070
work with terraform so this is where I

00:09:25,690 --> 00:09:29,050
can the whole time ops philosophy

00:09:27,070 --> 00:09:31,210
something to play let's say a developer

00:09:29,050 --> 00:09:33,430
joins an organization you can create a

00:09:31,210 --> 00:09:34,930
bunch of HCl and say hey I want this

00:09:33,430 --> 00:09:37,570
role for the sweep or something like

00:09:34,930 --> 00:09:39,250
that a quest for kit of ashes you have

00:09:37,570 --> 00:09:41,350
an Operations team that can actually

00:09:39,250 --> 00:09:43,390
view the plan let's say and then give

00:09:41,350 --> 00:09:45,040
them access that looks good to them this

00:09:43,390 --> 00:09:46,480
is how you can onboard users if you like

00:09:45,040 --> 00:09:47,860
which is pretty interesting and this is

00:09:46,480 --> 00:09:51,070
what we do at Hasek office well

00:09:47,860 --> 00:09:53,380
internally so that was the workflow that

00:09:51,070 --> 00:09:54,010
you saw which which is basically you

00:09:53,380 --> 00:09:56,800
know that the base

00:09:54,010 --> 00:09:59,320
that works for a smaller team and maybe

00:09:56,800 --> 00:10:01,090
a group of you know a smaller team or

00:09:59,320 --> 00:10:02,470
like maybe an individual or two people

00:10:01,090 --> 00:10:03,970
kind of just you know where you have to

00:10:02,470 --> 00:10:06,130
coordinate a lot of changes and things

00:10:03,970 --> 00:10:08,170
like that so how does you know the

00:10:06,130 --> 00:10:10,420
larger organizations with many teams

00:10:08,170 --> 00:10:12,520
work with cell phones this is my github

00:10:10,420 --> 00:10:14,710
can actually help right so we want to

00:10:12,520 --> 00:10:16,920
use the same you know pull request

00:10:14,710 --> 00:10:18,760
really nice data book so to achieve

00:10:16,920 --> 00:10:21,340
infrastructure and application changes

00:10:18,760 --> 00:10:23,800
as well and you'll see how like actions

00:10:21,340 --> 00:10:26,380
coming scums is to play as well so let's

00:10:23,800 --> 00:10:29,740
say we have a developer asking for up

00:10:26,380 --> 00:10:32,290
the M or something and they push certain

00:10:29,740 --> 00:10:34,390
HCl code up to github then what can

00:10:32,290 --> 00:10:36,880
happen is you can actually take place in

00:10:34,390 --> 00:10:38,860
github which will be generated using you

00:10:36,880 --> 00:10:41,230
know maybe some CI system can actually

00:10:38,860 --> 00:10:42,580
have a little fun planning with you give

00:10:41,230 --> 00:10:44,380
you that plan output and maybe an

00:10:42,580 --> 00:10:46,660
Operations team can actually review the

00:10:44,380 --> 00:10:48,160
review the plan if that looks good to

00:10:46,660 --> 00:10:49,840
them they can actually you know make

00:10:48,160 --> 00:10:52,030
that thing happen for you and then again

00:10:49,840 --> 00:10:53,890
some system has to run terraform apply

00:10:52,030 --> 00:10:55,540
right now ideally we would want the

00:10:53,890 --> 00:10:57,010
whole thing to happen in the cloud so

00:10:55,540 --> 00:10:58,960
this is an ideal situation

00:10:57,010 --> 00:11:00,430
so this is where is like the perfect

00:10:58,960 --> 00:11:02,410
integration and most of you know where

00:11:00,430 --> 00:11:05,170
I'm going with this I'm really happy to

00:11:02,410 --> 00:11:07,960
announce California have actions 1.0

00:11:05,170 --> 00:11:10,360
version it is completely revamped it

00:11:07,960 --> 00:11:13,360
uses the new JavaScript framework to

00:11:10,360 --> 00:11:15,340
make things happen and I really want to

00:11:13,360 --> 00:11:16,990
thank the github engineering team the

00:11:15,340 --> 00:11:18,940
Hasek of engineering team for working

00:11:16,990 --> 00:11:21,640
together I'm just a face to this this

00:11:18,940 --> 00:11:23,920
amazing you know collaboration so here's

00:11:21,640 --> 00:11:25,360
a quick demo I've recorded it for for

00:11:23,920 --> 00:11:27,370
kind of time purposes I don't have much

00:11:25,360 --> 00:11:29,470
time here so I just recorded it I love

00:11:27,370 --> 00:11:31,030
doing live demos but unfortunately this

00:11:29,470 --> 00:11:34,570
one is recorded and it's fast-forwarding

00:11:31,030 --> 00:11:36,160
portions to save time so here's what

00:11:34,570 --> 00:11:37,570
we're going to work on today in terms of

00:11:36,160 --> 00:11:39,610
the demo right this is the overall

00:11:37,570 --> 00:11:42,070
picture you have an s3 bucket that's

00:11:39,610 --> 00:11:44,500
just hosting a static site it has an

00:11:42,070 --> 00:11:46,480
index page that an error page then we

00:11:44,500 --> 00:11:48,670
have a CloudFlare dns that's pointing to

00:11:46,480 --> 00:11:51,130
this s3 bucket and both of these things

00:11:48,670 --> 00:11:53,050
are managed using terraform and we're

00:11:51,130 --> 00:11:55,450
using the new get up and telephone

00:11:53,050 --> 00:11:57,310
action to make things happen on it

00:11:55,450 --> 00:11:59,050
upside and we're using data from cloud

00:11:57,310 --> 00:12:00,220
to do the kind of the remote actions and

00:11:59,050 --> 00:12:01,990
things like that so fairly

00:12:00,220 --> 00:12:05,560
straightforward and you see how this all

00:12:01,990 --> 00:12:08,090
progresses so here's the user demo right

00:12:05,560 --> 00:12:10,400
so this repo that you see here it's

00:12:08,090 --> 00:12:11,360
already open source I'll put a link to

00:12:10,400 --> 00:12:12,950
the people at the end of the

00:12:11,360 --> 00:12:16,430
presentation you can check it out

00:12:12,950 --> 00:12:18,050
yourself it has all the code all the

00:12:16,430 --> 00:12:20,780
things that you need to kind of make

00:12:18,050 --> 00:12:22,430
things happen in this case the HTML code

00:12:20,780 --> 00:12:23,860
and the telephone code so you can fork

00:12:22,430 --> 00:12:27,050
it and try it yourself if you like

00:12:23,860 --> 00:12:29,900
somebody cloned this repo I can open

00:12:27,050 --> 00:12:32,420
visual studio code and start working on

00:12:29,900 --> 00:12:34,310
this so here I have the s3 bucket

00:12:32,420 --> 00:12:37,010
defined already then host our website

00:12:34,310 --> 00:12:39,590
which is public and then I have my I

00:12:37,010 --> 00:12:41,870
have my IM policy set up to expose that

00:12:39,590 --> 00:12:43,760
bucket out to the Internet and then I

00:12:41,870 --> 00:12:46,340
also have a bucket object which just is

00:12:43,760 --> 00:12:48,980
uploading the index dot HTML file up to

00:12:46,340 --> 00:12:51,230
after that stream market so here for

00:12:48,980 --> 00:12:53,900
time I provisioned it already and this

00:12:51,230 --> 00:12:55,850
is all managed using telephone and you

00:12:53,900 --> 00:12:58,490
can see the index dot HTML file that's

00:12:55,850 --> 00:12:59,720
already present all right so now let's

00:12:58,490 --> 00:13:01,640
say you're an operator you want to

00:12:59,720 --> 00:13:03,590
create at the NS record that points to

00:13:01,640 --> 00:13:04,850
this packet right so here we have the

00:13:03,590 --> 00:13:07,510
flower flavor for whatever way you can

00:13:04,850 --> 00:13:10,490
manage you know sow it directly from

00:13:07,510 --> 00:13:14,150
directly using CLI here so sorry

00:13:10,490 --> 00:13:15,830
directly using the HCL code so what

00:13:14,150 --> 00:13:17,300
we'll do here is we'll add another entry

00:13:15,830 --> 00:13:19,880
so here you can see that dub dub dub

00:13:17,300 --> 00:13:22,550
entry that's pointing to that long s3

00:13:19,880 --> 00:13:25,040
URL which cannot be seen and everything

00:13:22,550 --> 00:13:26,390
is proxy to out there and so what we

00:13:25,040 --> 00:13:29,000
lose we'll add another entry which is

00:13:26,390 --> 00:13:31,700
for the subdomain to point to the www

00:13:29,000 --> 00:13:34,430
entry as well so what we lose will I

00:13:31,700 --> 00:13:36,710
just add another resource and and

00:13:34,430 --> 00:13:38,060
basically use the pipe off your app

00:13:36,710 --> 00:13:40,100
which is a domain you can check it out

00:13:38,060 --> 00:13:42,380
right now it should be live so in this

00:13:40,100 --> 00:13:45,020
case we will create the subdomain that

00:13:42,380 --> 00:13:46,670
points to the dub dub dub dub right and

00:13:45,020 --> 00:13:49,850
we are providing it with cloud fair you

00:13:46,670 --> 00:13:51,680
know zone ID and email NPI keys now if

00:13:49,850 --> 00:13:54,290
you're an operator you have the keys to

00:13:51,680 --> 00:13:56,390
the kingdom you can pretty much like run

00:13:54,290 --> 00:13:59,960
a telephone plan you have the clarity I

00:13:56,390 --> 00:14:01,550
keys you have the AWS you know API key

00:13:59,960 --> 00:14:04,340
so you pretty much run terraform plan

00:14:01,550 --> 00:14:06,680
and this will work like as a as a sole

00:14:04,340 --> 00:14:08,630
operator you know have the keys to the

00:14:06,680 --> 00:14:11,120
kingdom so this is there from there from

00:14:08,630 --> 00:14:12,700
flower that's running the plan here so

00:14:11,120 --> 00:14:14,930
you see we are adding that one resource

00:14:12,700 --> 00:14:16,280
but ideally you want to share this with

00:14:14,930 --> 00:14:18,650
your team like you want this to happen

00:14:16,280 --> 00:14:19,339
in in a collaborative way so how would

00:14:18,650 --> 00:14:20,689
that work

00:14:19,339 --> 00:14:23,779
so that's where you use the github

00:14:20,689 --> 00:14:25,459
action this is the telephone it have

00:14:23,779 --> 00:14:27,439
action then you can see like there's

00:14:25,459 --> 00:14:28,759
different steps defined it's called

00:14:27,439 --> 00:14:30,829
setup terraform this is already

00:14:28,759 --> 00:14:32,959
published in the marketplace and you can

00:14:30,829 --> 00:14:34,850
use all the different terraform stages

00:14:32,959 --> 00:14:38,689
like there for minute there from format

00:14:34,850 --> 00:14:40,639
validate plan and apply and apply will

00:14:38,689 --> 00:14:42,170
only happen when we merge two master

00:14:40,639 --> 00:14:44,480
which is the key right you you really

00:14:42,170 --> 00:14:46,100
want you know the key are to be approved

00:14:44,480 --> 00:14:50,149
first before applying and making things

00:14:46,100 --> 00:14:52,309
happen okay so now what'll happen is we

00:14:50,149 --> 00:14:54,139
just create a pull request and I do not

00:14:52,309 --> 00:14:55,879
type this fast I wish I was

00:14:54,139 --> 00:14:58,850
I always like that fast of a diaper but

00:14:55,879 --> 00:15:00,860
I'm not and so you switch back to switch

00:14:58,850 --> 00:15:02,720
back to the repo here and you create the

00:15:00,860 --> 00:15:05,029
pull request they very straightforward

00:15:02,720 --> 00:15:06,680
workflow for an operator to create the

00:15:05,029 --> 00:15:09,860
pull request immediately this should

00:15:06,680 --> 00:15:11,569
fire it up there for mation so

00:15:09,860 --> 00:15:13,249
immediately you see like we have an

00:15:11,569 --> 00:15:16,100
expected it's a check and make sure you

00:15:13,249 --> 00:15:17,720
do branch protection on these repos so

00:15:16,100 --> 00:15:20,149
that you know only approved for requests

00:15:17,720 --> 00:15:22,129
can get merged in if you see our change

00:15:20,149 --> 00:15:24,740
that's a record that's being added if

00:15:22,129 --> 00:15:27,980
you switch back and we open up the

00:15:24,740 --> 00:15:30,139
details for that terraform action we see

00:15:27,980 --> 00:15:31,759
this this is perform validate in it and

00:15:30,139 --> 00:15:33,709
plan that's running at fast forwarded

00:15:31,759 --> 00:15:35,300
this again you can see we're adding that

00:15:33,709 --> 00:15:37,730
one record as soon as this thing

00:15:35,300 --> 00:15:39,559
finishes you'll notice that the dev form

00:15:37,730 --> 00:15:43,579
of line did not run because this is not

00:15:39,559 --> 00:15:45,439
the master branch all right so now we

00:15:43,579 --> 00:15:47,059
have the github bot that comments in the

00:15:45,439 --> 00:15:48,199
plan which is really nice so you can see

00:15:47,059 --> 00:15:50,000
the telephone plan what's going to

00:15:48,199 --> 00:15:51,860
happen before it actually happens see

00:15:50,000 --> 00:15:53,899
the code change and if it looks good to

00:15:51,860 --> 00:15:56,480
you know I guess the teammate you know

00:15:53,899 --> 00:15:58,639
they can do a +1 I'm pretty lonely here

00:15:56,480 --> 00:16:01,309
because this is just my my repo with and

00:15:58,639 --> 00:16:03,379
the only facility quite unfortunate but

00:16:01,309 --> 00:16:06,800
that's ok and will squash and merge this

00:16:03,379 --> 00:16:09,139
this change in and remember to do the

00:16:06,800 --> 00:16:10,819
most important thing which is to delete

00:16:09,139 --> 00:16:12,949
the branch right after this otherwise

00:16:10,819 --> 00:16:14,420
you have this dangling dead branches

00:16:12,949 --> 00:16:16,790
right you don't want that in your repos

00:16:14,420 --> 00:16:18,889
I'm sure your teammates will appreciate

00:16:16,790 --> 00:16:21,230
that so now if you go to the commits

00:16:18,889 --> 00:16:23,509
here and you see the apply actually

00:16:21,230 --> 00:16:25,490
started running here checking the

00:16:23,509 --> 00:16:26,779
details we run all the steps again we

00:16:25,490 --> 00:16:28,759
don't an again you don't need to do that

00:16:26,779 --> 00:16:31,850
you can just run apply but in this case

00:16:28,759 --> 00:16:33,100
I'm running plan and then and then wait

00:16:31,850 --> 00:16:34,990
for the fly to finish

00:16:33,100 --> 00:16:37,360
and what we can do is we can actually

00:16:34,990 --> 00:16:39,340
see this is getting triggered in inter

00:16:37,360 --> 00:16:40,780
form from cloud as well so you don't

00:16:39,340 --> 00:16:42,370
have to use their from cloud in this

00:16:40,780 --> 00:16:44,500
example and music there from cloud it's

00:16:42,370 --> 00:16:47,290
fairly easy for me to set it up this is

00:16:44,500 --> 00:16:49,540
kind of my own Prem for me so in this

00:16:47,290 --> 00:16:51,100
case it's running telephone apply as

00:16:49,540 --> 00:16:53,320
soon as this thing finishes it takes

00:16:51,100 --> 00:16:56,290
about a minute or so and fast forwarded

00:16:53,320 --> 00:16:58,300
this for times sake we can go back to go

00:16:56,290 --> 00:17:02,170
back to our master branch and make sure

00:16:58,300 --> 00:17:03,670
the the checks are fast and you'll see

00:17:02,170 --> 00:17:06,070
there's a green tick mark that means I

00:17:03,670 --> 00:17:08,500
apply successfully finished we go back

00:17:06,070 --> 00:17:11,320
to cloud fair with your fresh DNS

00:17:08,500 --> 00:17:13,750
provider and we see a subdomain entry

00:17:11,320 --> 00:17:15,610
pointing to the dub dub dub by Farid our

00:17:13,750 --> 00:17:18,130
app domain which is again proxy through

00:17:15,610 --> 00:17:19,900
cloud flat which is awesome and if i

00:17:18,130 --> 00:17:22,270
refresh here we see that this is working

00:17:19,900 --> 00:17:24,280
I can order more coffees more and more

00:17:22,270 --> 00:17:26,170
coffees keep placing those orders I'm

00:17:24,280 --> 00:17:28,450
sure someone's gonna like break this I

00:17:26,170 --> 00:17:30,010
am really bad in UI and UX design so

00:17:28,450 --> 00:17:32,890
this is the best I could come up with

00:17:30,010 --> 00:17:34,630
but I hope I hope I hope this works

00:17:32,890 --> 00:17:36,370
so here so if you go to any other page

00:17:34,630 --> 00:17:39,310
for that application you see there's a

00:17:36,370 --> 00:17:40,840
404 page right like this is a basic s3

00:17:39,310 --> 00:17:42,460
page you don't really want that let's

00:17:40,840 --> 00:17:44,440
say developer wants to change the 404

00:17:42,460 --> 00:17:45,910
page right so they can easily add

00:17:44,440 --> 00:17:47,470
another object and they don't have to

00:17:45,910 --> 00:17:48,670
use the you know clone the repo and

00:17:47,470 --> 00:17:50,830
stuff like that you can do this using

00:17:48,670 --> 00:17:52,600
the github UI but in this case I'm

00:17:50,830 --> 00:17:55,000
actually I'm actually showing you the

00:17:52,600 --> 00:17:57,220
full end-to-end workflow here so here I

00:17:55,000 --> 00:17:58,840
just defined interface index and use the

00:17:57,220 --> 00:18:00,700
error dot HTML file fairly

00:17:58,840 --> 00:18:01,540
straightforward and nothing complicated

00:18:00,700 --> 00:18:03,550
again

00:18:01,540 --> 00:18:06,160
I create my I check out a new branch and

00:18:03,550 --> 00:18:08,470
create a new pull request ok so this is

00:18:06,160 --> 00:18:10,510
how I type this is how slow it is and

00:18:08,470 --> 00:18:12,370
this I do a lot of mistakes as well as

00:18:10,510 --> 00:18:14,740
you can see right there and this is my

00:18:12,370 --> 00:18:19,710
normal speed okay so I can push this

00:18:14,740 --> 00:18:23,500
branch up to upstream go back to my repo

00:18:19,710 --> 00:18:25,390
and and we checked the and we treated

00:18:23,500 --> 00:18:27,130
the pull request you know create the

00:18:25,390 --> 00:18:29,620
pull request hit the create the pull

00:18:27,130 --> 00:18:31,180
request button here and then that will

00:18:29,620 --> 00:18:32,830
fire off the get up action again same

00:18:31,180 --> 00:18:34,930
workflow for the developers as well as

00:18:32,830 --> 00:18:37,540
you know this same repo in this case in

00:18:34,930 --> 00:18:39,370
have multiple repos that's alright you

00:18:37,540 --> 00:18:40,960
know you can now you can wait for like

00:18:39,370 --> 00:18:42,670
this check to pass and what can happen

00:18:40,960 --> 00:18:43,420
is like a lot of times things don't go

00:18:42,670 --> 00:18:45,580
exactly right

00:18:43,420 --> 00:18:46,870
like things are things are you know

00:18:45,580 --> 00:18:49,030
invalid sometimes and

00:18:46,870 --> 00:18:50,650
is the validator minefield and we want

00:18:49,030 --> 00:18:52,240
to see why it fit like you want to see

00:18:50,650 --> 00:18:54,670
the check has failed we can merge this

00:18:52,240 --> 00:18:56,440
let's go back and see that so when we

00:18:54,670 --> 00:18:58,690
see the log we see there's a duplicate

00:18:56,440 --> 00:19:00,700
name for the object the s3 bucket object

00:18:58,690 --> 00:19:02,530
so you can easily fix that developers

00:19:00,700 --> 00:19:04,270
don't have to clone the repo again it's

00:19:02,530 --> 00:19:06,430
all in one context you have just the

00:19:04,270 --> 00:19:09,670
pull request you create you just edit

00:19:06,430 --> 00:19:11,770
this file right here and you fix the

00:19:09,670 --> 00:19:13,510
error which is a simple dipole of the

00:19:11,770 --> 00:19:16,570
copy pasting errors that we all have had

00:19:13,510 --> 00:19:18,220
in our lifetime so we fix that by just

00:19:16,570 --> 00:19:20,110
changing it making it unique I'll just

00:19:18,220 --> 00:19:23,350
call it edit commit to the same branch

00:19:20,110 --> 00:19:25,480
it really triggers the the github action

00:19:23,350 --> 00:19:27,730
again hopefully we scroll that yeah

00:19:25,480 --> 00:19:29,530
immediately the action goes and if it's

00:19:27,730 --> 00:19:31,480
successful you'll see a valid plan in

00:19:29,530 --> 00:19:33,700
the pull request and this is fairly easy

00:19:31,480 --> 00:19:35,950
again the same workflow for developers

00:19:33,700 --> 00:19:37,390
and operators you see right there is a

00:19:35,950 --> 00:19:38,530
plan you can see the plan right there

00:19:37,390 --> 00:19:40,660
what's gonna happen before it actually

00:19:38,530 --> 00:19:41,890
happens the operation operations folks

00:19:40,660 --> 00:19:43,900
look at that they look at the file

00:19:41,890 --> 00:19:45,670
change they say it's a fairly small

00:19:43,900 --> 00:19:49,840
change but it's safe to do they can give

00:19:45,670 --> 00:19:52,540
us a thumbs up right but their thumbs up

00:19:49,840 --> 00:19:55,330
and you squash and merge it remember to

00:19:52,540 --> 00:19:57,220
delete the branch go back to the repo

00:19:55,330 --> 00:19:59,950
we'll wait for the apply to finish here

00:19:57,220 --> 00:20:02,790
I've fast forwarded this the finish is

00:19:59,950 --> 00:20:06,580
quite quickly here and we we scroll back

00:20:02,790 --> 00:20:08,320
there you refresh this page and see

00:20:06,580 --> 00:20:09,520
their ever face right there it's just

00:20:08,320 --> 00:20:12,460
perfect which is what you want to see

00:20:09,520 --> 00:20:13,929
that was a quick demo of of using the

00:20:12,460 --> 00:20:16,750
thing end-to-end for developers and

00:20:13,929 --> 00:20:18,640
operators now that might be maybe a bit

00:20:16,750 --> 00:20:20,620
too much you can actually immediately

00:20:18,640 --> 00:20:22,059
use our starter workflow that's

00:20:20,620 --> 00:20:24,520
available you just go to your actions

00:20:22,059 --> 00:20:26,830
tab you'll find that the setup terraform

00:20:24,520 --> 00:20:28,570
CLI feature there you just click that

00:20:26,830 --> 00:20:30,520
and it'll just set you up to on your on

00:20:28,570 --> 00:20:33,040
on your infrastructure journey and then

00:20:30,520 --> 00:20:36,010
let us know what you think in terms of

00:20:33,040 --> 00:20:39,670
highlights like the actual github action

00:20:36,010 --> 00:20:41,800
1.0 you know the the new version is

00:20:39,670 --> 00:20:43,240
actually available on the github market

00:20:41,800 --> 00:20:46,750
based in search for it you can go to

00:20:43,240 --> 00:20:48,910
this URL which is get out there form it

00:20:46,750 --> 00:20:50,679
have actions and you can find the demo

00:20:48,910 --> 00:20:53,110
and my slides they're already open

00:20:50,679 --> 00:20:56,350
sourced and you can find them at get

00:20:53,110 --> 00:20:58,690
iota from get upset like demo and if you

00:20:56,350 --> 00:21:00,650
wanna learn more about how github and

00:20:58,690 --> 00:21:02,720
Hasek are working together in terms

00:21:00,650 --> 00:21:04,130
pallets and and what a vision is we have

00:21:02,720 --> 00:21:06,110
a white paper that's available it's

00:21:04,130 --> 00:21:09,050
called increasing develop of velocity in

00:21:06,110 --> 00:21:11,600
the model and I really really appreciate

00:21:09,050 --> 00:21:13,280
having me thank you if you have any

00:21:11,600 --> 00:21:17,240
questions I'm in the github discussions

00:21:13,280 --> 00:21:21,400
or even DME my DMS are open my Twitter

00:21:17,240 --> 00:21:21,400
handles build 1.0 thank you so much

00:21:21,700 --> 00:21:28,610
thank you so much Vishal that fantastic

00:21:26,500 --> 00:21:30,650
presentation it's really really cool to

00:21:28,610 --> 00:21:32,750
see how the integration of github

00:21:30,650 --> 00:21:35,090
actions is happening with so many cool

00:21:32,750 --> 00:21:35,990
things now for jump into questions we've

00:21:35,090 --> 00:21:39,860
got a fault

00:21:35,990 --> 00:21:42,800
first on the screen welcome to John one

00:21:39,860 --> 00:21:44,960
of our own from github he is an expert

00:21:42,800 --> 00:21:48,260
in github actions and we're very excited

00:21:44,960 --> 00:21:50,270
to have John here answering all the

00:21:48,260 --> 00:21:52,370
amazing of questions are coming in about

00:21:50,270 --> 00:21:54,980
github action so we have time for a

00:21:52,370 --> 00:21:57,560
couple of questions Jared you've been on

00:21:54,980 --> 00:21:59,540
the discussions before you the question

00:21:57,560 --> 00:22:02,930
tell me what your favorite part of the

00:21:59,540 --> 00:22:05,630
talk was honestly my mind still kind of

00:22:02,930 --> 00:22:10,270
blown so Mishra you're a podcaster

00:22:05,630 --> 00:22:13,250
you're a DJ you're a maintainer you're a

00:22:10,270 --> 00:22:15,080
technical adviser like what what have

00:22:13,250 --> 00:22:16,370
you not done like the year at the

00:22:15,080 --> 00:22:21,620
beginning of your talk just made me feel

00:22:16,370 --> 00:22:23,480
lazy I'm not the best at cutting

00:22:21,620 --> 00:22:30,920
vegetables actually like that's one of

00:22:23,480 --> 00:22:32,270
my struggles not be good I think if I

00:22:30,920 --> 00:22:34,160
could be good at all the other things

00:22:32,270 --> 00:22:36,500
and don't be able to cut vegetables I

00:22:34,160 --> 00:22:42,260
would take that as a win just put it out

00:22:36,500 --> 00:22:44,000
there yeah okay all right it's okay yeah

00:22:42,260 --> 00:22:45,920
I figured with the other things you do

00:22:44,000 --> 00:22:48,350
you're probably doing pretty pretty

00:22:45,920 --> 00:22:50,030
awesome but enough of my questions let's

00:22:48,350 --> 00:22:53,540
get into the discussion question so

00:22:50,030 --> 00:22:57,830
first one how can folks get started with

00:22:53,540 --> 00:23:01,120
terraform github actions John you want

00:22:57,830 --> 00:23:03,860
to take this one yeah sure so we

00:23:01,120 --> 00:23:05,720
provided a starter workflow that's now

00:23:03,860 --> 00:23:08,240
available from the actions tab of any

00:23:05,720 --> 00:23:10,250
repository that you own you had there

00:23:08,240 --> 00:23:13,730
and you see that the terraform sort of

00:23:10,250 --> 00:23:14,470
work so this just recommends a way to

00:23:13,730 --> 00:23:16,630
get started

00:23:14,470 --> 00:23:18,640
them and of course you can edit that and

00:23:16,630 --> 00:23:22,169
change it as you need to but we think

00:23:18,640 --> 00:23:22,169
that's a good place to get started

00:23:22,559 --> 00:23:27,520
outstanding outstanding all right we

00:23:24,970 --> 00:23:31,600
have another question and coming in and

00:23:27,520 --> 00:23:33,309
it is from at AG Packer ad IG Packer

00:23:31,600 --> 00:23:35,440
wants to know is there a way to analyze

00:23:33,309 --> 00:23:40,840
the plan in the master branch before

00:23:35,440 --> 00:23:42,610
applying yeah so that's that's what ends

00:23:40,840 --> 00:23:45,220
up happening in the in the actual work

00:23:42,610 --> 00:23:46,929
flow actually so you're able to run the

00:23:45,220 --> 00:23:49,179
plan in the pull request before it

00:23:46,929 --> 00:23:50,710
actually merges in and I'll show you

00:23:49,179 --> 00:23:52,659
like you know you can actually get it

00:23:50,710 --> 00:23:54,190
commented in in my demo I've shown out

00:23:52,659 --> 00:23:56,470
how you're able to just use another

00:23:54,190 --> 00:23:58,720
action which basically does a create

00:23:56,470 --> 00:24:00,820
comment you can take the output from the

00:23:58,720 --> 00:24:01,960
deform plan positive that action that

00:24:00,820 --> 00:24:04,750
action should be able to create the

00:24:01,960 --> 00:24:06,309
comment she able to gonna preview what's

00:24:04,750 --> 00:24:08,080
gonna happen and then you can add your

00:24:06,309 --> 00:24:10,120
own actions that you can do many things

00:24:08,080 --> 00:24:12,010
for the plan if you like so like Dan

00:24:10,120 --> 00:24:13,780
output in in our case is something

00:24:12,010 --> 00:24:15,280
that's human readable but you also have

00:24:13,780 --> 00:24:17,830
adjacent options so you can actually

00:24:15,280 --> 00:24:19,419
like dump it as adjacent file and you

00:24:17,830 --> 00:24:20,919
can analyze and do things with it and

00:24:19,419 --> 00:24:22,900
you can write anything anything you want

00:24:20,919 --> 00:24:24,400
actions just allows you to do pretty

00:24:22,900 --> 00:24:26,470
much anything you want this is pretty

00:24:24,400 --> 00:24:28,240
awesome to have this like really like

00:24:26,470 --> 00:24:30,610
amazing flexibility and pretty much

00:24:28,240 --> 00:24:32,289
everything it runs in parallel so it's

00:24:30,610 --> 00:24:33,850
it like saves you time it probably

00:24:32,289 --> 00:24:37,480
wouldn't be that time-consuming if

00:24:33,850 --> 00:24:39,760
you're not doing something face like one

00:24:37,480 --> 00:24:41,980
of my favorite things about actions is

00:24:39,760 --> 00:24:43,360
it like if something doesn't exist

00:24:41,980 --> 00:24:46,000
you know like essentially just build an

00:24:43,360 --> 00:24:48,070
action to like just make it happen and

00:24:46,000 --> 00:24:49,870
it's just it's just so cool like I'm so

00:24:48,070 --> 00:24:52,299
glad we added in this picture this is

00:24:49,870 --> 00:24:54,460
amazing just gives developers like all

00:24:52,299 --> 00:24:55,720
the powers to do all the things yeah

00:24:54,460 --> 00:25:03,039
John do you have any more questions

00:24:55,720 --> 00:25:04,390
coming through I think to try and get as

00:25:03,039 --> 00:25:08,530
many as we can you know have all the

00:25:04,390 --> 00:25:10,870
time but I think you were mentioning it

00:25:08,530 --> 00:25:12,820
before me sure I mean we actions has

00:25:10,870 --> 00:25:15,789
been out for a couple years now and now

00:25:12,820 --> 00:25:17,799
it is the most popular CI possible so I

00:25:15,789 --> 00:25:19,299
think it's just it's amazing what people

00:25:17,799 --> 00:25:21,280
are able to do with actions and I'm so

00:25:19,299 --> 00:25:23,260
happy to see what hashey Corp has done

00:25:21,280 --> 00:25:24,520
as well now enough about me I keep

00:25:23,260 --> 00:25:26,860
talking too much we have another

00:25:24,520 --> 00:25:27,539
question coming in and this is from at

00:25:26,860 --> 00:25:31,139
our

00:25:27,539 --> 00:25:33,539
kzm interested he is or she is or this

00:25:31,139 --> 00:25:35,850
wonderful person is interested in seeing

00:25:33,539 --> 00:25:38,279
how we can drive test infrastructure

00:25:35,850 --> 00:25:41,850
using terraform packer and github

00:25:38,279 --> 00:25:44,100
actions hmm cool this is this is an

00:25:41,850 --> 00:25:45,989
interesting one yeah so I have some

00:25:44,100 --> 00:25:47,700
comments here so I actually prior to

00:25:45,989 --> 00:25:50,340
joining Hoshi Corp like I was already a

00:25:47,700 --> 00:25:52,739
Packer user so backers the IQ that helps

00:25:50,340 --> 00:25:54,330
you create server images and this was

00:25:52,739 --> 00:25:56,519
one of the first block books that I've

00:25:54,330 --> 00:25:59,070
ever written online I think a rich

00:25:56,519 --> 00:26:00,479
create basically uses backer and and

00:25:59,070 --> 00:26:02,489
service pack which is another open

00:26:00,479 --> 00:26:04,470
source product amazing project and you

00:26:02,489 --> 00:26:06,779
can use them hand-in-hand and kind of

00:26:04,470 --> 00:26:08,729
validate packet images as well so you

00:26:06,779 --> 00:26:10,739
can actually run write an action that

00:26:08,729 --> 00:26:13,259
does that for you and you can actually

00:26:10,739 --> 00:26:15,629
use terraform to spin-off infrastructure

00:26:13,259 --> 00:26:17,460
that's kind of test infrastructure and

00:26:15,629 --> 00:26:19,259
basically let's say you have an image

00:26:17,460 --> 00:26:22,229
that you just build using Packer and

00:26:19,259 --> 00:26:23,429
it's like Ubuntu 1604 for your web

00:26:22,229 --> 00:26:26,099
server or something like that

00:26:23,429 --> 00:26:27,509
you use the you use a get up action you

00:26:26,099 --> 00:26:29,609
know trigger terraform to create you

00:26:27,509 --> 00:26:31,259
that infrastructure I that can actually

00:26:29,609 --> 00:26:33,299
run your service pack tests and then

00:26:31,259 --> 00:26:34,979
provide the output again based on that

00:26:33,299 --> 00:26:37,080
you can fail or pass the full request

00:26:34,979 --> 00:26:38,789
you do all kinds of like interesting

00:26:37,080 --> 00:26:40,499
things with just this amazing open

00:26:38,789 --> 00:26:43,429
source ecosystem you know it's very

00:26:40,499 --> 00:26:49,649
pluggable so it's fairly easy to do

00:26:43,429 --> 00:26:51,419
that's now that's pretty sweet I I think

00:26:49,649 --> 00:26:53,309
that actually leads in to the next

00:26:51,419 --> 00:26:55,139
question we're actually gonna have some

00:26:53,309 --> 00:26:58,019
what so this is the next question is

00:26:55,139 --> 00:27:01,379
from at Sevilla Lamba does it work for

00:26:58,019 --> 00:27:05,399
all cloud platforms like Adger and GCP

00:27:01,379 --> 00:27:07,169
Google cloud platform yeah so actually

00:27:05,399 --> 00:27:08,669
most of our products with like pretty

00:27:07,169 --> 00:27:10,830
much all our products that Hoshi called

00:27:08,669 --> 00:27:13,919
we're a very cloud agnostic company so

00:27:10,830 --> 00:27:15,840
we launched terraform and it was you

00:27:13,919 --> 00:27:18,960
know I don't know how many years ago but

00:27:15,840 --> 00:27:21,179
it was already you know basically multi

00:27:18,960 --> 00:27:23,789
a cloud agnostic you could use you could

00:27:21,179 --> 00:27:25,859
use AWS you can use Azure and you can

00:27:23,789 --> 00:27:28,080
use CCP you can use Alabama card that's

00:27:25,859 --> 00:27:30,029
200 plus providers so if you go down the

00:27:28,080 --> 00:27:31,799
list there's pretty much all your you

00:27:30,029 --> 00:27:33,479
know you're happening cloud providers

00:27:31,799 --> 00:27:35,669
you have the small cloud providers as

00:27:33,479 --> 00:27:37,649
well I just illusion things like that so

00:27:35,669 --> 00:27:39,450
you can use pretty much any anything

00:27:37,649 --> 00:27:41,220
that has a crowd API and if there isn't

00:27:39,450 --> 00:27:42,930
one you can just try to

00:27:41,220 --> 00:27:45,060
which is very easy to plug in to

00:27:42,930 --> 00:27:46,650
terraform as well very easy to write a

00:27:45,060 --> 00:27:48,780
provider there's a full documentation

00:27:46,650 --> 00:27:52,080
and guides on on our learning website

00:27:48,780 --> 00:27:55,070
slash comm they can follow and and and

00:27:52,080 --> 00:27:55,070
kind of go with that process

00:27:56,180 --> 00:28:00,240
outstanding I think for one more

00:27:59,670 --> 00:28:02,460
question

00:28:00,240 --> 00:28:04,500
do we have one more if it's if it's a

00:28:02,460 --> 00:28:07,830
very quick answer we've got about 30

00:28:04,500 --> 00:28:11,280
seconds sorry guard break okay quick

00:28:07,830 --> 00:28:12,810
question from Dee Greenfield zero do

00:28:11,280 --> 00:28:17,150
actions integrate with Terra phone

00:28:12,810 --> 00:28:20,430
destroy and other management commands

00:28:17,150 --> 00:28:23,640
yes you that's up okay yeah John you

00:28:20,430 --> 00:28:25,740
want to take this yeah sure so this is a

00:28:23,640 --> 00:28:27,660
rapper on the terraform CLI which you've

00:28:25,740 --> 00:28:30,750
probably already used to and all the the

00:28:27,660 --> 00:28:35,520
CLI verbs are supported in this v1 dot o

00:28:30,750 --> 00:28:37,560
action awesome strands the hell the

00:28:35,520 --> 00:28:41,040
question it with like five seconds to go

00:28:37,560 --> 00:28:42,780
love it thank you so much John and

00:28:41,040 --> 00:28:44,520
Michelle for joining us now I don't

00:28:42,780 --> 00:28:46,530
Misha is gonna be over the discussions

00:28:44,520 --> 00:28:48,600
the necks off now John will you be

00:28:46,530 --> 00:28:51,660
joining him I'll be there

00:28:48,600 --> 00:28:53,400
see you there awesome Bojana Misha I'll

00:28:51,660 --> 00:28:57,440
be there I catch my over discussions

00:28:53,400 --> 00:28:57,440

YouTube URL: https://www.youtube.com/watch?v=7P9JDf4Lc0Y


