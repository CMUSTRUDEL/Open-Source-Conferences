Title: Opening Keynote - GitHub Satellite 2020
Publication date: 2020-05-07
Playlist: GitHub Satellite 2020 - Work
Description: 
	GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the worldâ€™s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:00,400 --> 00:00:05,110
[Music]

00:00:08,130 --> 00:00:11,199
[Music]

00:00:14,240 --> 00:00:17,289
[Music]

00:00:23,990 --> 00:00:27,090
[Music]

00:00:29,370 --> 00:00:35,600
[Music]

00:00:45,420 --> 00:00:48,599
[Music]

00:00:51,530 --> 00:01:03,150
hello what am i doing I'm eating

00:00:56,129 --> 00:01:06,229
Cheerios yeah what what time is it oh my

00:01:03,150 --> 00:01:06,229
goodness okay I'll be right there

00:01:10,280 --> 00:01:23,090
hmm all right okay let's do this thing

00:01:19,860 --> 00:01:25,830
good morning welcome to satellite 20/20

00:01:23,090 --> 00:01:26,909
I'm coming to you from my home here in

00:01:25,830 --> 00:01:28,740
San Francisco

00:01:26,909 --> 00:01:31,980
I'm sure most of you are in your homes

00:01:28,740 --> 00:01:35,070
as well so from my home to yours welcome

00:01:31,980 --> 00:01:36,390
I was just eating some Cheerios but I'd

00:01:35,070 --> 00:01:39,630
rather be here talking to you about

00:01:36,390 --> 00:01:41,880
github so we have a lot of really great

00:01:39,630 --> 00:01:43,440
announcements to make today but I

00:01:41,880 --> 00:01:45,810
thought it would be great to start off

00:01:43,440 --> 00:01:47,370
with just a recap of some of the stuff

00:01:45,810 --> 00:01:49,890
we've been doing at github over the last

00:01:47,370 --> 00:01:52,350
few months last year many of you know we

00:01:49,890 --> 00:01:54,030
launched github actions and the whole

00:01:52,350 --> 00:01:55,530
idea of github actions was to make it

00:01:54,030 --> 00:01:57,659
possible for you to automate any

00:01:55,530 --> 00:01:59,220
workflow on github including continuous

00:01:57,659 --> 00:02:01,799
integration and continuous deployment

00:01:59,220 --> 00:02:03,299
and in November we made it generally

00:02:01,799 --> 00:02:05,490
available to pretty much anyone who

00:02:03,299 --> 00:02:07,049
wants to use it I'm really proud to say

00:02:05,490 --> 00:02:10,229
that now it's been less than six months

00:02:07,049 --> 00:02:12,540
since that event in November and github

00:02:10,229 --> 00:02:15,510
actions is already the number one CI

00:02:12,540 --> 00:02:17,189
service on github it's used by more

00:02:15,510 --> 00:02:19,709
repos than any other service either

00:02:17,189 --> 00:02:22,080
private repos or public repos it's a

00:02:19,709 --> 00:02:24,150
pretty big milestone and because actions

00:02:22,080 --> 00:02:25,620
makes it so easy for you to share the

00:02:24,150 --> 00:02:29,099
actions that you write with the whole

00:02:25,620 --> 00:02:30,420
world there's now over 3,400 actions

00:02:29,099 --> 00:02:32,670
that have been shared in the get up

00:02:30,420 --> 00:02:33,520
marketplace that you can use so that's

00:02:32,670 --> 00:02:36,160
pretty cool

00:02:33,520 --> 00:02:38,500
now in March we've launched native apps

00:02:36,160 --> 00:02:40,000
for iOS and Android and if you haven't

00:02:38,500 --> 00:02:41,650
tried them yet you should because I

00:02:40,000 --> 00:02:42,820
think they're just they're gorgeous I

00:02:41,650 --> 00:02:45,850
mean they're beautiful they're buttery

00:02:42,820 --> 00:02:48,820
smooth and one interesting fact about

00:02:45,850 --> 00:02:50,110
the apps is that the number one action

00:02:48,820 --> 00:02:51,700
that people take with our mobile apps is

00:02:50,110 --> 00:02:54,040
actually to review and approve pull

00:02:51,700 --> 00:02:55,960
requests not exactly what I expected but

00:02:54,040 --> 00:02:58,000
it kind of makes sense I mean if you're

00:02:55,960 --> 00:02:58,870
out and about or maybe you're just like

00:02:58,000 --> 00:03:00,970
in your backyard

00:02:58,870 --> 00:03:02,110
reading Cheerios and one of your

00:03:00,970 --> 00:03:03,940
colleagues is trying to get something

00:03:02,110 --> 00:03:05,080
done and you're blocking them you don't

00:03:03,940 --> 00:03:07,540
want to block them you want to unblock

00:03:05,080 --> 00:03:09,700
them so it's sort of an unblocking your

00:03:07,540 --> 00:03:11,830
colleagues app it's turned out hundreds

00:03:09,700 --> 00:03:12,700
of thousands of people are using it they

00:03:11,830 --> 00:03:15,370
really seem to like it

00:03:12,700 --> 00:03:18,340
we hope you'll give it a try too we also

00:03:15,370 --> 00:03:20,350
recently expanded github sponsors to 32

00:03:18,340 --> 00:03:22,480
countries and now in less than six

00:03:20,350 --> 00:03:24,460
months we've actually paid out millions

00:03:22,480 --> 00:03:26,710
of dollars to open source contributors

00:03:24,460 --> 00:03:28,450
maintainer x' already our goal is to

00:03:26,710 --> 00:03:31,150
give every developer the option of

00:03:28,450 --> 00:03:33,340
actually making a living working on open

00:03:31,150 --> 00:03:36,040
source it's an ambitious goal and it's

00:03:33,340 --> 00:03:37,780
one we're excited about in general we

00:03:36,040 --> 00:03:39,850
think price shouldn't be a barrier to

00:03:37,780 --> 00:03:41,740
joining the communities that live on

00:03:39,850 --> 00:03:44,500
github whether their work is public or

00:03:41,740 --> 00:03:46,270
even private and so last month in April

00:03:44,500 --> 00:03:48,580
we actually made a huge pricing change

00:03:46,270 --> 00:03:50,290
this is a major event where we made it

00:03:48,580 --> 00:03:52,750
possible for you to add unlimited

00:03:50,290 --> 00:03:55,810
collaborators to your private repos for

00:03:52,750 --> 00:03:58,480
free and we've already seen teams around

00:03:55,810 --> 00:04:01,990
the world picking this up in pretty big

00:03:58,480 --> 00:04:03,460
numbers so one example is India where

00:04:01,990 --> 00:04:05,620
we've seen two times as many

00:04:03,460 --> 00:04:08,890
organizations choosing github now than

00:04:05,620 --> 00:04:10,360
ever before and then the day after we

00:04:08,890 --> 00:04:12,430
did that actually we completed the

00:04:10,360 --> 00:04:14,680
acquisition of NPM which I'm standing

00:04:12,430 --> 00:04:17,440
here with this t-shirt we were really

00:04:14,680 --> 00:04:19,450
excited I was personally excited and

00:04:17,440 --> 00:04:22,240
honored actually to welcome NPM into the

00:04:19,450 --> 00:04:24,550
github family you all probably know NPM

00:04:22,240 --> 00:04:25,840
is the largest JavaScript registry in

00:04:24,550 --> 00:04:29,260
the world there's over a million

00:04:25,840 --> 00:04:31,570
packages and fun fact last month in

00:04:29,260 --> 00:04:34,480
April there were over 84 billion

00:04:31,570 --> 00:04:36,250
downloads from NPM so it's basically

00:04:34,480 --> 00:04:38,590
used by nearly every JavaScript

00:04:36,250 --> 00:04:41,080
developer and probably nearly every

00:04:38,590 --> 00:04:42,910
company that writes software we take the

00:04:41,080 --> 00:04:44,710
responsibility of running NPM seriously

00:04:42,910 --> 00:04:47,020
and we're already working really hard to

00:04:44,710 --> 00:04:47,390
improve NPM and we're excited to hear

00:04:47,020 --> 00:04:50,660
your

00:04:47,390 --> 00:04:52,250
and your feedback okay and then another

00:04:50,660 --> 00:04:54,980
big milestone I was just last week

00:04:52,250 --> 00:04:57,350
actually the 50 millionth developer

00:04:54,980 --> 00:05:00,590
signed up for github this was on Sunday

00:04:57,350 --> 00:05:03,280
April 26th at 406 p.m. local time and

00:05:00,590 --> 00:05:06,050
this developer was from Great Britain so

00:05:03,280 --> 00:05:07,610
welcome to github anonymous github

00:05:06,050 --> 00:05:10,910
developer from Great Britain and we're

00:05:07,610 --> 00:05:12,740
glad you're here and with all the things

00:05:10,910 --> 00:05:14,270
that are going on in the world right now

00:05:12,740 --> 00:05:17,930
like lots of people have been asking me

00:05:14,270 --> 00:05:19,970
how behavior and github has changed with

00:05:17,930 --> 00:05:22,610
world events are people spending more

00:05:19,970 --> 00:05:24,620
time on github they engaging less they

00:05:22,610 --> 00:05:25,970
working with us what's happening exactly

00:05:24,620 --> 00:05:28,670
and we've been looking over the data and

00:05:25,970 --> 00:05:31,190
I wanted to share a few of the things we

00:05:28,670 --> 00:05:33,740
found with you so since January we've

00:05:31,190 --> 00:05:36,680
actually seen a 25% increase in the

00:05:33,740 --> 00:05:38,090
number of issues created on github so

00:05:36,680 --> 00:05:40,460
people are basically collaborating more

00:05:38,090 --> 00:05:42,980
on issues and coordinating their work

00:05:40,460 --> 00:05:45,920
more in open source projects in

00:05:42,980 --> 00:05:48,770
particular we've seen pull requests take

00:05:45,920 --> 00:05:50,630
four hours less to get reviewed and

00:05:48,770 --> 00:05:52,700
merged on average which is pretty

00:05:50,630 --> 00:05:54,410
interesting and then on the whole

00:05:52,700 --> 00:05:56,900
developers are spending about an hour

00:05:54,410 --> 00:05:58,730
more per day on github and that might be

00:05:56,900 --> 00:06:01,430
because maybe they don't have a commute

00:05:58,730 --> 00:06:05,210
anymore and so that time that was spent

00:06:01,430 --> 00:06:06,770
commuting can now be spent working or it

00:06:05,210 --> 00:06:08,570
might be hey you know you're you're

00:06:06,770 --> 00:06:10,040
inside and you're not able to pursue

00:06:08,570 --> 00:06:12,050
some of your other hobbies so you spend

00:06:10,040 --> 00:06:13,610
a little bit more time on the weekends

00:06:12,050 --> 00:06:16,190
or in the evening writing code and

00:06:13,610 --> 00:06:19,100
sharing it with the world but basically

00:06:16,190 --> 00:06:22,160
the trend is we see more collaboration

00:06:19,100 --> 00:06:23,990
than ever before and that's kind of

00:06:22,160 --> 00:06:26,870
amazing to see it's sort of in any age

00:06:23,990 --> 00:06:29,660
of social distancing people are turning

00:06:26,870 --> 00:06:30,670
to social coding and so we take that

00:06:29,660 --> 00:06:33,200
super seriously

00:06:30,670 --> 00:06:35,540
all right that's a recap of some of the

00:06:33,200 --> 00:06:37,610
stuff we did recently and we have a lot

00:06:35,540 --> 00:06:40,940
of exciting new announcements today - in

00:06:37,610 --> 00:06:43,700
four areas communities code Enterprise

00:06:40,940 --> 00:06:46,010
and security and first up is communities

00:06:43,700 --> 00:06:47,600
now communities are such an important

00:06:46,010 --> 00:06:50,180
topic to github but they're an

00:06:47,600 --> 00:06:53,060
especially important topic for all of us

00:06:50,180 --> 00:06:55,760
right now the way we think about it is

00:06:53,060 --> 00:06:59,240
that an online community is the basic

00:06:55,760 --> 00:07:00,230
unit of 21st century society and github

00:06:59,240 --> 00:07:02,930
is a platform

00:07:00,230 --> 00:07:05,230
for communities you can understand the

00:07:02,930 --> 00:07:07,460
history of github as the history of us

00:07:05,230 --> 00:07:09,470
identifying what communities need to do

00:07:07,460 --> 00:07:12,860
and then giving them a platform to do

00:07:09,470 --> 00:07:14,720
that so early on we heard that

00:07:12,860 --> 00:07:16,730
developers needed a place to track their

00:07:14,720 --> 00:07:19,760
work and coordinate with each other and

00:07:16,730 --> 00:07:21,590
so we built github issues and then

00:07:19,760 --> 00:07:24,410
obviously we know that developers need a

00:07:21,590 --> 00:07:25,820
place to collaborate in review code it's

00:07:24,410 --> 00:07:27,170
a great place to learn from each other

00:07:25,820 --> 00:07:28,250
where you can share what you've learned

00:07:27,170 --> 00:07:30,650
at a code review and you learn from

00:07:28,250 --> 00:07:33,770
someone else and so we built the pull

00:07:30,650 --> 00:07:36,530
request now lately we've heard that

00:07:33,770 --> 00:07:38,050
communities need a place to connect this

00:07:36,530 --> 00:07:40,850
is a place where you could have

00:07:38,050 --> 00:07:43,010
open-ended conversations and ask a

00:07:40,850 --> 00:07:45,380
question and get an answer or maybe

00:07:43,010 --> 00:07:47,600
brainstorm about a new idea that might

00:07:45,380 --> 00:07:49,700
turn out to be a brilliant idea or just

00:07:47,600 --> 00:07:51,920
a place to get recognition for the work

00:07:49,700 --> 00:07:53,810
that you're already doing to help build

00:07:51,920 --> 00:07:55,430
a community or support the project which

00:07:53,810 --> 00:07:57,440
may not be coding not all of the

00:07:55,430 --> 00:07:58,790
productive work that drives communities

00:07:57,440 --> 00:07:59,990
forward is actually writing code there's

00:07:58,790 --> 00:08:02,630
lots of other important things that

00:07:59,990 --> 00:08:05,860
happen also and also maybe just a place

00:08:02,630 --> 00:08:08,810
to say thanks now some people might say

00:08:05,860 --> 00:08:11,750
why not just have these conversations in

00:08:08,810 --> 00:08:14,690
github issues but getting up issues it's

00:08:11,750 --> 00:08:18,200
fundamentally a productivity tool

00:08:14,690 --> 00:08:20,300
imagine if thousands of people had right

00:08:18,200 --> 00:08:22,370
access to your personal to-do list and

00:08:20,300 --> 00:08:24,740
they were using it to have open-ended

00:08:22,370 --> 00:08:26,840
conversations about all the things that

00:08:24,740 --> 00:08:29,180
they think that maybe you should do

00:08:26,840 --> 00:08:30,950
someday now look some of their ideas are

00:08:29,180 --> 00:08:33,650
probably great so you want to encourage

00:08:30,950 --> 00:08:35,420
that conversation to happen but in order

00:08:33,650 --> 00:08:37,729
to keep your to-do list kind of an order

00:08:35,420 --> 00:08:38,720
and not intermingle lots of other stuff

00:08:37,729 --> 00:08:40,910
you might want to move those

00:08:38,720 --> 00:08:42,920
conversations to another place so that

00:08:40,910 --> 00:08:45,680
those discussions can have their own

00:08:42,920 --> 00:08:48,140
space to take place so sort of in short

00:08:45,680 --> 00:08:50,330
like every every community needs a Town

00:08:48,140 --> 00:08:53,030
Square and so today I'm happy to

00:08:50,330 --> 00:08:55,760
announce that we're building it and it's

00:08:53,030 --> 00:08:57,320
called github discussions so get up

00:08:55,760 --> 00:08:59,390
discussions is all about building

00:08:57,320 --> 00:09:01,520
thriving communities and giving you a

00:08:59,390 --> 00:09:04,130
place to recognize whole new categories

00:09:01,520 --> 00:09:05,480
of contributions it gives your community

00:09:04,130 --> 00:09:07,250
a home on the Internet

00:09:05,480 --> 00:09:10,870
so to tell you more about this please

00:09:07,250 --> 00:09:10,870
welcome my colleague Becka

00:09:11,920 --> 00:09:17,800
snap github discussions is more than

00:09:15,430 --> 00:09:20,470
just a space for conversations on github

00:09:17,800 --> 00:09:23,290
it's a configurable home for your entire

00:09:20,470 --> 00:09:25,089
community so let's take a quick look

00:09:23,290 --> 00:09:28,870
around discussions because there are so

00:09:25,089 --> 00:09:31,209
many great features to unpack here with

00:09:28,870 --> 00:09:32,740
discussions we've provided a home for

00:09:31,209 --> 00:09:35,740
your community right where they exist

00:09:32,740 --> 00:09:37,839
today in your repository at the top of

00:09:35,740 --> 00:09:40,449
the page you can see spotlights where

00:09:37,839 --> 00:09:43,510
communities can configure discussions to

00:09:40,449 --> 00:09:45,100
look and feel just like your home and it

00:09:43,510 --> 00:09:47,290
also makes sure that the most important

00:09:45,100 --> 00:09:49,959
discussions are super visible to the

00:09:47,290 --> 00:09:52,690
community members but most important of

00:09:49,959 --> 00:09:55,000
all we have a space dedicated to the

00:09:52,690 --> 00:09:57,250
links for your code of conduct and other

00:09:55,000 --> 00:09:59,139
critical resources that new folks should

00:09:57,250 --> 00:10:02,399
be aware of so you know how to best

00:09:59,139 --> 00:10:02,399
participate in your community

00:10:03,329 --> 00:10:08,290
discussions is not just a place for

00:10:05,500 --> 00:10:09,820
questions answers and up votes that we

00:10:08,290 --> 00:10:12,670
do have all of those awesome features

00:10:09,820 --> 00:10:15,850
for you today this is where folks come

00:10:12,670 --> 00:10:17,140
together talk give thanks show off all

00:10:15,850 --> 00:10:19,269
the incredible work that they're doing

00:10:17,140 --> 00:10:23,640
and even sharing ideas for brand new

00:10:19,269 --> 00:10:26,199
work this is the home for your community

00:10:23,640 --> 00:10:28,540
next I guess has been one of the early

00:10:26,199 --> 00:10:30,250
adopters of discussions and we've been

00:10:28,540 --> 00:10:32,470
iterating on this feature thanks to all

00:10:30,250 --> 00:10:34,449
of their feedback next I guess and

00:10:32,470 --> 00:10:36,279
others have been experimenting with just

00:10:34,449 --> 00:10:38,649
how they might use new types of

00:10:36,279 --> 00:10:40,870
conversations in their community that

00:10:38,649 --> 00:10:43,240
were previously not so easy to track or

00:10:40,870 --> 00:10:46,630
share publicly but now can become

00:10:43,240 --> 00:10:48,790
community conversations take this

00:10:46,630 --> 00:10:51,010
discussion for example with over a

00:10:48,790 --> 00:10:53,380
hundred participants Tim was able to

00:10:51,010 --> 00:10:55,480
start a community thread where everyone

00:10:53,380 --> 00:10:59,190
wanted to publicly share the work that

00:10:55,480 --> 00:10:59,190
they've been building using next jas

00:10:59,519 --> 00:11:04,630
another example of how other communities

00:11:02,319 --> 00:11:06,970
are using discussions right now is this

00:11:04,630 --> 00:11:11,290
RFC that tim created for incremental

00:11:06,970 --> 00:11:12,639
static generation with next is community

00:11:11,290 --> 00:11:14,889
members have been uploading this

00:11:12,639 --> 00:11:17,170
discussion as being a great idea that

00:11:14,889 --> 00:11:19,269
they value highly and numerous people

00:11:17,170 --> 00:11:20,829
have been providing active feedback and

00:11:19,269 --> 00:11:25,440
thoughts on this request for a proposal

00:11:20,829 --> 00:11:25,440
to help Tim move toward the resolution

00:11:25,499 --> 00:11:31,089
to bring fluidity of conversations on

00:11:28,389 --> 00:11:32,709
github into your core workflows we have

00:11:31,089 --> 00:11:36,220
discussions right where your community

00:11:32,709 --> 00:11:38,439
is in your repository now for questions

00:11:36,220 --> 00:11:40,509
your community no longer has to sift

00:11:38,439 --> 00:11:42,819
through long issue threads to find an

00:11:40,509 --> 00:11:44,860
answer we give authors and admins the

00:11:42,819 --> 00:11:46,749
ability to mark comments as an answer so

00:11:44,860 --> 00:11:48,959
you can find them super easily right at

00:11:46,749 --> 00:11:51,629
the top where the question is

00:11:48,959 --> 00:11:54,069
furthermore with threaded replies

00:11:51,629 --> 00:11:55,929
conversations can be even easier to

00:11:54,069 --> 00:11:57,579
follow without having to read through

00:11:55,929 --> 00:11:59,350
tons of comment references that were

00:11:57,579 --> 00:12:02,499
copied and pasted over and over again

00:11:59,350 --> 00:12:04,059
through an endless timeline now I know

00:12:02,499 --> 00:12:06,910
this is already a lot of great features

00:12:04,059 --> 00:12:09,339
but we have even more available like

00:12:06,910 --> 00:12:10,540
issues converting into discussions since

00:12:09,339 --> 00:12:13,059
we know that's where so many

00:12:10,540 --> 00:12:14,529
conversations are happening and soon

00:12:13,059 --> 00:12:17,019
you'll have the ability to elevate

00:12:14,529 --> 00:12:19,420
really great ideas and conversations

00:12:17,019 --> 00:12:22,720
that are happening in discuss back into

00:12:19,420 --> 00:12:24,639
issues and what more could you want then

00:12:22,720 --> 00:12:27,610
a centralized github notification

00:12:24,639 --> 00:12:29,559
experience with the notification

00:12:27,610 --> 00:12:31,480
experience that we have right now that's

00:12:29,559 --> 00:12:33,489
been generally made available to you and

00:12:31,480 --> 00:12:35,619
the github mobile apps on iOS and

00:12:33,489 --> 00:12:37,509
Android we can provide you with the full

00:12:35,619 --> 00:12:39,759
experience to keep up to date with

00:12:37,509 --> 00:12:43,709
discussions in the space that best suits

00:12:39,759 --> 00:12:46,689
your needs last but certainly not least

00:12:43,709 --> 00:12:49,209
discussions is not just a space for your

00:12:46,689 --> 00:12:51,579
community to connect this is a critical

00:12:49,209 --> 00:12:53,350
space for newcomers and others to

00:12:51,579 --> 00:12:56,439
receive recognition that goes beyond

00:12:53,350 --> 00:12:58,149
code we know that projects don't exist

00:12:56,439 --> 00:13:00,459
without the help that you're getting

00:12:58,149 --> 00:13:02,619
from other community members to answer

00:13:00,459 --> 00:13:04,299
your questions and all of that great

00:13:02,619 --> 00:13:07,360
work should be applauded and recognized

00:13:04,299 --> 00:13:09,459
publicly so we're excited to be bringing

00:13:07,360 --> 00:13:11,290
discussions into the contribution graph

00:13:09,459 --> 00:13:13,509
to recognize all of the work that

00:13:11,290 --> 00:13:17,199
community members are doing outside of

00:13:13,509 --> 00:13:18,759
code we've been iterating for the past

00:13:17,199 --> 00:13:20,799
few months in the open and getting

00:13:18,759 --> 00:13:23,709
feedback so we can make this space just

00:13:20,799 --> 00:13:25,749
for you we have over 60 communities in

00:13:23,709 --> 00:13:27,639
the beta already and have been so

00:13:25,749 --> 00:13:29,889
grateful to be working hand in hand with

00:13:27,639 --> 00:13:32,470
hundreds of maintainer zhh for this

00:13:29,889 --> 00:13:34,839
product we know that it's crucial to get

00:13:32,470 --> 00:13:38,480
all of these dynamics right which is why

00:13:34,839 --> 00:13:41,120
your feedback is so important to us

00:13:38,480 --> 00:13:43,340
with all of that being said I am so

00:13:41,120 --> 00:13:45,500
excited for discussions to be arriving

00:13:43,340 --> 00:13:47,960
to a repository near you this summer

00:13:45,500 --> 00:13:49,670
in the meantime come back with us in the

00:13:47,960 --> 00:13:51,950
satellite repository so you can use

00:13:49,670 --> 00:13:53,900
discussions right now to connect with us

00:13:51,950 --> 00:13:58,940
in the github community and with that

00:13:53,900 --> 00:14:01,070
I'm gonna hand it back to you not thanks

00:13:58,940 --> 00:14:03,530
Becca discussions is awesome I'm really

00:14:01,070 --> 00:14:05,390
excited about that and it kind of fits

00:14:03,530 --> 00:14:07,100
the theme of everything we work on at

00:14:05,390 --> 00:14:09,110
github I mean everything we do at github

00:14:07,100 --> 00:14:11,300
is really about making software

00:14:09,110 --> 00:14:13,400
development more collaborative and more

00:14:11,300 --> 00:14:15,230
approachable and discussions is

00:14:13,400 --> 00:14:18,410
obviously a big piece of that for

00:14:15,230 --> 00:14:19,790
communities but what about code now over

00:14:18,410 --> 00:14:22,430
the years a lot of people have asked me

00:14:19,790 --> 00:14:23,690
the question hey like I'm a developer I

00:14:22,430 --> 00:14:25,160
want to become an open-source

00:14:23,690 --> 00:14:27,710
contributor how do I do that how do I

00:14:25,160 --> 00:14:29,510
become an open-source contributor my

00:14:27,710 --> 00:14:31,310
answer has always been just super simple

00:14:29,510 --> 00:14:33,230
and concrete first you have to find a

00:14:31,310 --> 00:14:35,180
project that you want to improve and

00:14:33,230 --> 00:14:37,700
then you have to get it running on your

00:14:35,180 --> 00:14:39,050
local machine you know get it to build

00:14:37,700 --> 00:14:41,330
on your local machine and get a dev

00:14:39,050 --> 00:14:43,400
environment set up and the reason is you

00:14:41,330 --> 00:14:44,780
can't make a change until you have the

00:14:43,400 --> 00:14:46,520
source code and you've gotten it to

00:14:44,780 --> 00:14:48,980
build and run so that's always the first

00:14:46,520 --> 00:14:51,440
step but way too often that first step

00:14:48,980 --> 00:14:53,210
is actually a real barrier you know in

00:14:51,440 --> 00:14:55,970
theory you can just read the readme and

00:14:53,210 --> 00:14:57,920
run the magical script that sets

00:14:55,970 --> 00:15:00,020
everything up but in practice there's

00:14:57,920 --> 00:15:01,490
often prerequisites to install and maybe

00:15:00,020 --> 00:15:02,930
those prerequisites actually conflict

00:15:01,490 --> 00:15:04,970
with some stuff that's already installed

00:15:02,930 --> 00:15:07,910
on your machine or like if you're like

00:15:04,970 --> 00:15:10,310
me you've messed up your Python paths

00:15:07,910 --> 00:15:12,890
again and so Python 2.7 is not playing

00:15:10,310 --> 00:15:14,000
nicely with Python 3 and so before you

00:15:12,890 --> 00:15:16,310
can even get started

00:15:14,000 --> 00:15:18,440
learning how the code is structured you

00:15:16,310 --> 00:15:20,750
end up spending all this time and energy

00:15:18,440 --> 00:15:22,940
just getting things to build and run

00:15:20,750 --> 00:15:23,630
locally but it doesn't actually have to

00:15:22,940 --> 00:15:25,430
be this hard

00:15:23,630 --> 00:15:26,840
and today we're taking a new approach to

00:15:25,430 --> 00:15:29,120
lower the barrier to becoming a

00:15:26,840 --> 00:15:32,480
developer on any project by introducing

00:15:29,120 --> 00:15:34,730
code spaces code spaces gives you a

00:15:32,480 --> 00:15:35,420
world class editor running in the

00:15:34,730 --> 00:15:37,310
browser

00:15:35,420 --> 00:15:39,680
backed by a containerized development

00:15:37,310 --> 00:15:40,760
environment it's hosted in the cloud so

00:15:39,680 --> 00:15:42,770
instead of spending all your precious

00:15:40,760 --> 00:15:44,150
time setting up dev environments and

00:15:42,770 --> 00:15:46,040
trying to get them to work across all

00:15:44,150 --> 00:15:48,290
the projects you're working on you can

00:15:46,040 --> 00:15:49,490
get started as a developer on a project

00:15:48,290 --> 00:15:52,040
with just one click

00:15:49,490 --> 00:15:55,280
and so best of all codes

00:15:52,040 --> 00:15:58,100
is powered by vs code and supports every

00:15:55,280 --> 00:15:59,390
V s code extension out of the box you've

00:15:58,100 --> 00:16:01,190
got to see this to understand how

00:15:59,390 --> 00:16:06,050
awesome it is so to show you a demo

00:16:01,190 --> 00:16:07,640
please welcome Allison thanks Matt I'm

00:16:06,050 --> 00:16:09,920
really excited to show you more about

00:16:07,640 --> 00:16:12,230
code spaces and how revolutionary I

00:16:09,920 --> 00:16:14,660
think it is but first I want to tell you

00:16:12,230 --> 00:16:16,910
a little bit about myself I'm a mom of

00:16:14,660 --> 00:16:19,670
two young kids which basically means I

00:16:16,910 --> 00:16:22,010
have no time and in addition to being a

00:16:19,670 --> 00:16:23,630
mom I'm an engineering director I like

00:16:22,010 --> 00:16:26,150
to play around with new technologies

00:16:23,630 --> 00:16:28,210
jump into side projects or open source

00:16:26,150 --> 00:16:30,860
and make changes and commits on the go

00:16:28,210 --> 00:16:33,590
code spaces gives me the power and

00:16:30,860 --> 00:16:36,860
ability to tinker and add value to my

00:16:33,590 --> 00:16:39,350
team no matter how much time I have so

00:16:36,860 --> 00:16:41,060
here I have a super simple app to help

00:16:39,350 --> 00:16:44,480
me manage everything going on right now

00:16:41,060 --> 00:16:46,460
called pre-school call tracker now if I

00:16:44,480 --> 00:16:48,830
wanted someone to contribute to this app

00:16:46,460 --> 00:16:51,110
first they'd have to clone the repo then

00:16:48,830 --> 00:16:53,120
they have to follow the readme now this

00:16:51,110 --> 00:16:54,680
one is pretty simple simple but most of

00:16:53,120 --> 00:16:55,430
us have experience with really complex

00:16:54,680 --> 00:16:57,380
ones

00:16:55,430 --> 00:17:00,830
that have a ton of different instruction

00:16:57,380 --> 00:17:03,550
steps installations and a high

00:17:00,830 --> 00:17:06,079
likelihood of me losing hours of time

00:17:03,550 --> 00:17:08,949
troubleshooting some obscure setup error

00:17:06,079 --> 00:17:12,140
this was a problem that we wanted to fix

00:17:08,949 --> 00:17:15,589
on our main repository page you'll see a

00:17:12,140 --> 00:17:17,390
brand new code menu clicking on that

00:17:15,589 --> 00:17:19,190
menu includes some options you're

00:17:17,390 --> 00:17:22,280
already familiar with like cloning a

00:17:19,190 --> 00:17:24,260
repo and opening and github desktop we

00:17:22,280 --> 00:17:26,449
also have a new option to open with an

00:17:24,260 --> 00:17:29,120
editor and in the future you'll be able

00:17:26,449 --> 00:17:30,500
to open the repo using any code editor

00:17:29,120 --> 00:17:34,100
so will be compatible with your

00:17:30,500 --> 00:17:36,140
preferred desktop IDE in addition to

00:17:34,100 --> 00:17:38,810
opening a repo with these options I'm

00:17:36,140 --> 00:17:42,080
delighted to introduce you to a new

00:17:38,810 --> 00:17:42,590
faster choice a way to develop in the

00:17:42,080 --> 00:17:46,820
cloud

00:17:42,590 --> 00:17:49,100
let's open with code spaces so this

00:17:46,820 --> 00:17:52,940
takes a few seconds to spin up I already

00:17:49,100 --> 00:17:56,090
have a code space ready to go what

00:17:52,940 --> 00:18:00,170
you're looking at is vs code the editor

00:17:56,090 --> 00:18:03,010
itself running in my browser in a VM

00:18:00,170 --> 00:18:05,450
with two cores and 4 gigabytes of RAM

00:18:03,010 --> 00:18:07,600
completely set up with

00:18:05,450 --> 00:18:10,519
all of my dependencies running

00:18:07,600 --> 00:18:13,789
automatically logged into my github

00:18:10,519 --> 00:18:17,720
account with even my personal fat files

00:18:13,789 --> 00:18:22,519
installed everything works everything is

00:18:17,720 --> 00:18:26,480
ready to go so wait like the entire real

00:18:22,519 --> 00:18:29,679
editor yeah the real real editor let me

00:18:26,480 --> 00:18:35,510
show you real quick I can open a file

00:18:29,679 --> 00:18:36,889
type I have yes intellisense and Intelli

00:18:35,510 --> 00:18:39,049
code stars the most appropriate

00:18:36,889 --> 00:18:43,070
suggestions I've got full colorization

00:18:39,049 --> 00:18:44,149
I've got mini-map since any BS code

00:18:43,070 --> 00:18:46,010
extension works

00:18:44,149 --> 00:18:48,169
I have es lint and can click on the

00:18:46,010 --> 00:18:50,120
bottom here to see any warnings or

00:18:48,169 --> 00:18:54,620
issues in my code I can even put a

00:18:50,120 --> 00:18:57,919
breakpoint in here to debug all I had to

00:18:54,620 --> 00:19:00,649
do to set up this dev environment was

00:18:57,919 --> 00:19:04,340
click one button and it was completely

00:19:00,649 --> 00:19:08,000
tailored to this project so how do we

00:19:04,340 --> 00:19:10,190
enable all this well by default code

00:19:08,000 --> 00:19:12,350
spaces build a container using an

00:19:10,190 --> 00:19:14,840
out-of-the-box image that already has

00:19:12,350 --> 00:19:17,600
most of what you need but I can also

00:19:14,840 --> 00:19:20,240
create additional specifications using a

00:19:17,600 --> 00:19:22,309
new standard a dev container directory

00:19:20,240 --> 00:19:24,740
that can define additional container

00:19:22,309 --> 00:19:27,289
requirements like extensions to install

00:19:24,740 --> 00:19:30,049
since remember you can run any extension

00:19:27,289 --> 00:19:32,240
a port to forward to and a variety of

00:19:30,049 --> 00:19:36,200
additional options that are specific to

00:19:32,240 --> 00:19:38,929
this project and if I wanted or needed

00:19:36,200 --> 00:19:41,600
to further tailor my setup I could

00:19:38,929 --> 00:19:44,179
create a docker file in my repo that

00:19:41,600 --> 00:19:46,490
dictates a custom image that would be

00:19:44,179 --> 00:19:48,740
used to create this container that I'm

00:19:46,490 --> 00:19:50,750
developing in without having to go

00:19:48,740 --> 00:19:53,510
through all of those painful readme

00:19:50,750 --> 00:19:56,690
steps let's start the server because

00:19:53,510 --> 00:19:58,309
there's more to explore there we open up

00:19:56,690 --> 00:20:02,210
the terminal which is something we can

00:19:58,309 --> 00:20:04,460
do because we're in a VM and for those

00:20:02,210 --> 00:20:07,220
of you following closely you'll see that

00:20:04,460 --> 00:20:10,340
my bash prompt looks custom and that's

00:20:07,220 --> 00:20:12,529
because it is remember in addition to

00:20:10,340 --> 00:20:14,480
all of your vs code extensions coming

00:20:12,529 --> 00:20:16,039
with you and any additional

00:20:14,480 --> 00:20:18,180
configuration you've written into the

00:20:16,039 --> 00:20:21,540
dev container your personal

00:20:18,180 --> 00:20:23,610
are also automatically available because

00:20:21,540 --> 00:20:27,960
they're being cloned from your personal

00:20:23,610 --> 00:20:30,300
files repo my dot files repo contains

00:20:27,960 --> 00:20:34,230
all of my personal customizations for

00:20:30,300 --> 00:20:37,860
bash did team ox and more if a dot files

00:20:34,230 --> 00:20:40,500
repo exists in your github account code

00:20:37,860 --> 00:20:44,460
spaces makes an immediate connection and

00:20:40,500 --> 00:20:47,070
copies them into your code space this

00:20:44,460 --> 00:20:49,290
even includes shell aliases and any

00:20:47,070 --> 00:20:52,380
other customizations that make your

00:20:49,290 --> 00:20:54,740
developer flow yours so it always feels

00:20:52,380 --> 00:20:57,150
like home

00:20:54,740 --> 00:20:59,190
we started our server in the terminal

00:20:57,150 --> 00:21:01,430
and you'll notice that I can hover over

00:20:59,190 --> 00:21:04,740
this link and click through to a new URL

00:21:01,430 --> 00:21:09,440
but the link is to a local host and

00:21:04,740 --> 00:21:12,000
we're not on my laptop were in the cloud

00:21:09,440 --> 00:21:14,520
what's happening is that we've specified

00:21:12,000 --> 00:21:17,040
in the dev container that we want to run

00:21:14,520 --> 00:21:19,680
this app on port 3000 and forward is

00:21:17,040 --> 00:21:22,920
that port on from your cloud hosted

00:21:19,680 --> 00:21:25,050
machines securely to you so you can see

00:21:22,920 --> 00:21:27,690
your app running live just like you

00:21:25,050 --> 00:21:29,580
would locally let's make sure this thing

00:21:27,690 --> 00:21:31,890
is really working so I have a meeting

00:21:29,580 --> 00:21:33,450
title in here right now and I don't need

00:21:31,890 --> 00:21:36,060
the meeting title I just need to know

00:21:33,450 --> 00:21:39,390
when it is not what it is we'll come

00:21:36,060 --> 00:21:42,450
back into the code and delete this

00:21:39,390 --> 00:21:44,520
meeting credo now that it's deleted we

00:21:42,450 --> 00:21:46,710
have this unused Quran being passed in

00:21:44,520 --> 00:21:49,260
here and to see the full power of vs

00:21:46,710 --> 00:21:51,780
code we see that intellisense has dimmed

00:21:49,260 --> 00:21:54,570
the pram and hovering over it gives me

00:21:51,780 --> 00:21:57,540
the ability to click quick fix and clean

00:21:54,570 --> 00:21:59,820
up our code we can go back to our app

00:21:57,540 --> 00:22:03,060
refresh and see that there's no more

00:21:59,820 --> 00:22:06,320
meeting title ok so I really like this

00:22:03,060 --> 00:22:09,450
change let's commit and push from here

00:22:06,320 --> 00:22:11,310
I'll use the good extension right now

00:22:09,450 --> 00:22:13,530
we're on master which you can see at the

00:22:11,310 --> 00:22:15,450
bottom but you can also spin up a code

00:22:13,530 --> 00:22:18,450
space from a branch as well and push

00:22:15,450 --> 00:22:20,700
directly to that branch so we'll create

00:22:18,450 --> 00:22:23,820
a new branch called meetings

00:22:20,700 --> 00:22:31,530
stage we'll do a quick commit message

00:22:23,820 --> 00:22:34,350
and commit and push ok so to recap in

00:22:31,530 --> 00:22:36,660
just the last few minutes we've cloned a

00:22:34,350 --> 00:22:38,550
repository set up an entire cloud

00:22:36,660 --> 00:22:41,040
environment that functions exactly like

00:22:38,550 --> 00:22:42,870
our local one would fun up a server made

00:22:41,040 --> 00:22:47,220
a code change committed and push that

00:22:42,870 --> 00:22:50,460
change to a new branch now we can go

00:22:47,220 --> 00:22:52,380
back to our repo page and see that that

00:22:50,460 --> 00:22:57,540
branch and commit or showing up right

00:22:52,380 --> 00:23:00,960
here code spaces allows me to maximize

00:22:57,540 --> 00:23:03,240
the time I have available I mean if I

00:23:00,960 --> 00:23:05,670
can get all of this done within a couple

00:23:03,240 --> 00:23:08,610
of minutes imagine what I could do

00:23:05,670 --> 00:23:11,250
during a kids nap time even if it was a

00:23:08,610 --> 00:23:13,800
short one whenever you want to get

00:23:11,250 --> 00:23:17,660
started and wherever you're starting

00:23:13,800 --> 00:23:25,350
from now you can just click code

00:23:17,660 --> 00:23:27,150
thanks everyone back to you net Alison

00:23:25,350 --> 00:23:29,190
that was awesome thank you so much all

00:23:27,150 --> 00:23:31,080
right there was a lot in that demo so

00:23:29,190 --> 00:23:34,050
let's do a quick recap of what we just

00:23:31,080 --> 00:23:36,320
saw code spaces gives you all the full

00:23:34,050 --> 00:23:38,940
power of vs code running in your browser

00:23:36,320 --> 00:23:40,650
with a container a containerized cloud

00:23:38,940 --> 00:23:42,780
based development environment that's

00:23:40,650 --> 00:23:45,600
fully integrated with github all ready

00:23:42,780 --> 00:23:47,070
to go you just click code now we plan to

00:23:45,600 --> 00:23:48,570
offer code spaces with really simple

00:23:47,070 --> 00:23:50,040
pay-as-you-go pricing

00:23:48,570 --> 00:23:51,210
that'll be built into github so you

00:23:50,040 --> 00:23:53,010
don't have to sign up for any other

00:23:51,210 --> 00:23:56,100
subscriptions you can just use your

00:23:53,010 --> 00:23:57,090
github account to get access to it and

00:23:56,100 --> 00:23:59,550
it's going to come in several

00:23:57,090 --> 00:24:01,950
configurations so if you need more CPUs

00:23:59,550 --> 00:24:04,260
or you need more RAM or maybe you need a

00:24:01,950 --> 00:24:05,850
GPU for what you're doing you can choose

00:24:04,260 --> 00:24:07,140
the configuration that works for you and

00:24:05,850 --> 00:24:08,670
your project and you can even have a

00:24:07,140 --> 00:24:11,100
different configuration for different

00:24:08,670 --> 00:24:13,320
projects in addition to the container

00:24:11,100 --> 00:24:16,050
backed code spaces that Alison is demoed

00:24:13,320 --> 00:24:16,890
we're also working on offering rich

00:24:16,050 --> 00:24:18,360
serverless

00:24:16,890 --> 00:24:20,250
editing to so that you don't actually

00:24:18,360 --> 00:24:21,960
need to consume cloud resources if

00:24:20,250 --> 00:24:23,250
you're running in the browser so that

00:24:21,960 --> 00:24:25,950
will be coming at some point in the

00:24:23,250 --> 00:24:27,870
future we're launching code spaces in

00:24:25,950 --> 00:24:30,240
private beta today and you can go to the

00:24:27,870 --> 00:24:33,870
code spaces website to sign up get early

00:24:30,240 --> 00:24:36,120
access and learn more about it ok that

00:24:33,870 --> 00:24:38,670
was code let's move to chapter 3

00:24:36,120 --> 00:24:40,470
Enterprise now we talked

00:24:38,670 --> 00:24:42,420
about the communities on github and

00:24:40,470 --> 00:24:44,670
interest some of the most important

00:24:42,420 --> 00:24:46,740
communities are actually companies we're

00:24:44,670 --> 00:24:49,320
proud that github hosts more than 3

00:24:46,740 --> 00:24:51,480
million organizations including more

00:24:49,320 --> 00:24:54,240
than half of the Fortune 100 who

00:24:51,480 --> 00:24:56,010
actually rely on github to power their

00:24:54,240 --> 00:24:58,950
internal software development at huge

00:24:56,010 --> 00:25:02,160
scale now enterprises want the same

00:24:58,950 --> 00:25:04,440
thing all of us want love I mean agility

00:25:02,160 --> 00:25:06,090
they want agility and innovation just

00:25:04,440 --> 00:25:08,880
like the best software teams they want

00:25:06,090 --> 00:25:10,500
to attract the best developers and they

00:25:08,880 --> 00:25:13,830
want to create the conditions to make

00:25:10,500 --> 00:25:15,060
them really productive and happy so the

00:25:13,830 --> 00:25:16,890
best person to tell you about the work

00:25:15,060 --> 00:25:21,470
we're doing in enterprise is Mario

00:25:16,890 --> 00:25:24,630
Rodriguez Mario are you here yes I am

00:25:21,470 --> 00:25:26,610
gracias not an excellent today give up

00:25:24,630 --> 00:25:29,010
Enterprise comes in two topologies

00:25:26,610 --> 00:25:32,340
server which you can deploy on premises

00:25:29,010 --> 00:25:33,840
and cloud or SAS offering quick aside on

00:25:32,340 --> 00:25:35,910
cloud if you look at the engagement

00:25:33,840 --> 00:25:38,460
metrics which as the product manager I

00:25:35,910 --> 00:25:40,980
love to do it is easily outpaces the

00:25:38,460 --> 00:25:43,500
rest of Gale comm so there's pretty good

00:25:40,980 --> 00:25:45,240
demand there as you can expect we're

00:25:43,500 --> 00:25:46,980
constantly meeting with customers that

00:25:45,240 --> 00:25:49,260
want to migrate to the cloud I mean

00:25:46,980 --> 00:25:51,810
those casual conversations you find

00:25:49,260 --> 00:25:52,980
there is a subset of them that face very

00:25:51,810 --> 00:25:55,380
strict regulations

00:25:52,980 --> 00:25:59,040
this results in advanced security and

00:25:55,380 --> 00:26:01,440
compliance aspect to us now today

00:25:59,040 --> 00:26:03,420
there's not an offer in the entire in

00:26:01,440 --> 00:26:05,670
the entire market that would meet those

00:26:03,420 --> 00:26:08,280
requirements which you know honestly

00:26:05,670 --> 00:26:10,590
made us reflect and so we decided to

00:26:08,280 --> 00:26:13,200
build it and today I'm happy to be

00:26:10,590 --> 00:26:16,410
announcing get her private instances a

00:26:13,200 --> 00:26:18,870
good way to think about this is as the

00:26:16,410 --> 00:26:21,120
most compliant and secure way of working

00:26:18,870 --> 00:26:24,630
in the cloud even for the most stringent

00:26:21,120 --> 00:26:26,850
of customers as you would expect it's a

00:26:24,630 --> 00:26:27,750
fully managed github enterprise no

00:26:26,850 --> 00:26:31,230
surprises there

00:26:27,750 --> 00:26:33,780
but it does differentiate in a couple of

00:26:31,230 --> 00:26:36,120
capabilities for example it has Priyank

00:26:33,780 --> 00:26:38,280
a encryption it has private connections

00:26:36,120 --> 00:26:40,830
and it also has the highest compliance

00:26:38,280 --> 00:26:43,260
standards an example that would be we

00:26:40,830 --> 00:26:45,870
plan to certify for FedRAMP high to

00:26:43,260 --> 00:26:48,540
allow government use we've only have a

00:26:45,870 --> 00:26:49,920
couple of pilot customers in flight and

00:26:48,540 --> 00:26:51,539
we're looking forward to get it to

00:26:49,920 --> 00:26:56,529
market

00:26:51,539 --> 00:26:58,269
now last year was a busy year for us we

00:26:56,529 --> 00:27:00,399
extended give up across the DevOps

00:26:58,269 --> 00:27:02,350
workflow you search one and and that

00:27:00,399 --> 00:27:04,480
integrated offering from code to cloud

00:27:02,350 --> 00:27:06,490
and we made that possible with the

00:27:04,480 --> 00:27:08,889
releases of github packages and github

00:27:06,490 --> 00:27:10,899
actions the reception of both products

00:27:08,889 --> 00:27:12,999
has been incredible and in all the

00:27:10,899 --> 00:27:15,279
presentations I do which is quite a lot

00:27:12,999 --> 00:27:18,460
action is by far the most requested

00:27:15,279 --> 00:27:20,710
agenda topic this is why I'm thrilled to

00:27:18,460 --> 00:27:22,929
tell you that both actions and packages

00:27:20,710 --> 00:27:25,269
will be available in github Enterprise

00:27:22,929 --> 00:27:27,149
Server later this year so big shout out

00:27:25,269 --> 00:27:30,399
to the internal teams for this milestone

00:27:27,149 --> 00:27:32,289
this gives you on premise access to the

00:27:30,399 --> 00:27:37,360
same tools and workflows as on

00:27:32,289 --> 00:27:40,200
github.com and that is pretty cool so we

00:27:37,360 --> 00:27:42,549
also know that you need more customers

00:27:40,200 --> 00:27:44,529
you as a customer you want to know how

00:27:42,549 --> 00:27:46,509
are we doing how how do we measure

00:27:44,529 --> 00:27:48,999
progress how do we understand what's

00:27:46,509 --> 00:27:51,340
functioning well and where the areas to

00:27:48,999 --> 00:27:53,470
improve in software development as you

00:27:51,340 --> 00:27:55,779
know this is a very hard problem we

00:27:53,470 --> 00:27:57,100
haven't figured this out entirely and

00:27:55,779 --> 00:27:59,619
that is the reason why we're building

00:27:57,100 --> 00:28:02,619
github insights to give you answers to

00:27:59,619 --> 00:28:05,409
these questions and a lot more let's

00:28:02,619 --> 00:28:08,379
play there Jeff absolutely love this one

00:28:05,409 --> 00:28:10,269
so out of the box you see industry

00:28:08,379 --> 00:28:14,019
proven metrics like code review to a

00:28:10,269 --> 00:28:15,700
runtime pull request size and more I'd

00:28:14,019 --> 00:28:18,070
really like that you be able to easily

00:28:15,700 --> 00:28:20,850
set team goals and make it yours

00:28:18,070 --> 00:28:23,710
customize it and also a little fun to it

00:28:20,850 --> 00:28:25,899
further in the year we're also be gonna

00:28:23,710 --> 00:28:28,450
be enabling our communities to create

00:28:25,899 --> 00:28:32,559
unsure new metrics and reports based on

00:28:28,450 --> 00:28:33,299
github and third-party data and there

00:28:32,559 --> 00:28:36,610
you have it

00:28:33,299 --> 00:28:38,320
actions packages and insights it is

00:28:36,610 --> 00:28:41,320
Devils with built-in continuous

00:28:38,320 --> 00:28:42,759
improvements so here's a link if you

00:28:41,320 --> 00:28:48,119
want to check out and learn a little bit

00:28:42,759 --> 00:28:48,119
more and with that over to you not

00:28:48,179 --> 00:28:54,669
all right thanks Mario okay finally

00:28:51,549 --> 00:28:56,049
let's turn to security now I think we

00:28:54,669 --> 00:28:59,049
all know and it's increasingly obvious

00:28:56,049 --> 00:29:00,399
the world runs on software and it

00:28:59,049 --> 00:29:03,730
especially runs on open-source software

00:29:00,399 --> 00:29:06,730
so this is clearly true of every

00:29:03,730 --> 00:29:08,230
or website that you might use but it's

00:29:06,730 --> 00:29:09,970
also true of most of the physical

00:29:08,230 --> 00:29:11,650
devices that we're buying in one way or

00:29:09,970 --> 00:29:14,290
another or the services that we depend

00:29:11,650 --> 00:29:15,610
on if you buy a car from Ford today the

00:29:14,290 --> 00:29:17,500
user manual actually includes

00:29:15,610 --> 00:29:19,570
open-source license disclosures in it

00:29:17,500 --> 00:29:22,300
because the car contains open source

00:29:19,570 --> 00:29:25,020
software so from a security perspective

00:29:22,300 --> 00:29:27,160
what's happened is that this web of

00:29:25,020 --> 00:29:29,140
software dependencies that we've all

00:29:27,160 --> 00:29:31,810
collectively built has become a web of

00:29:29,140 --> 00:29:33,610
trust and kind of everything depends on

00:29:31,810 --> 00:29:34,960
this and so that's why it's so important

00:29:33,610 --> 00:29:37,480
that everything we do to make this

00:29:34,960 --> 00:29:40,030
software secure we do so we've been

00:29:37,480 --> 00:29:41,110
thinking about this a lot of github with

00:29:40,030 --> 00:29:44,200
some of the acquisitions we've done

00:29:41,110 --> 00:29:46,630
recently a Semillon QL and certainly

00:29:44,200 --> 00:29:48,400
with NPM recently too and we've been

00:29:46,630 --> 00:29:49,840
studying a lot of the open source code

00:29:48,400 --> 00:29:52,150
that's out there and there's a trend

00:29:49,840 --> 00:29:54,370
that we've identified what we've learned

00:29:52,150 --> 00:29:56,530
is that the number of vulnerabilities in

00:29:54,370 --> 00:29:58,150
your codebase tends to rise linearly

00:29:56,530 --> 00:30:01,960
with the number of lines of code that

00:29:58,150 --> 00:30:05,440
you have in that codebase so more code

00:30:01,960 --> 00:30:07,090
more vulnerabilities as an industry that

00:30:05,440 --> 00:30:08,980
means we need an approach that will

00:30:07,090 --> 00:30:10,690
actually scale as we produce all this

00:30:08,980 --> 00:30:13,240
code we have to find a way to secure it

00:30:10,690 --> 00:30:15,760
at scale and our current approach isn't

00:30:13,240 --> 00:30:17,260
scaling so as we thought about this at

00:30:15,760 --> 00:30:19,690
github we've decided to take a new

00:30:17,260 --> 00:30:21,820
approach and it has two parts the first

00:30:19,690 --> 00:30:24,160
part is we want a community powered

00:30:21,820 --> 00:30:26,200
solution and our view is basically that

00:30:24,160 --> 00:30:27,850
the open source community built all the

00:30:26,200 --> 00:30:29,470
software and is building and maintaining

00:30:27,850 --> 00:30:31,150
all the software and so only the

00:30:29,470 --> 00:30:34,210
community really has the expertise and

00:30:31,150 --> 00:30:36,220
the scale to actually make it secure we

00:30:34,210 --> 00:30:37,810
can't fix this problem outside of the

00:30:36,220 --> 00:30:39,520
community it has to be fixed in the

00:30:37,810 --> 00:30:41,890
community in the way we work in the work

00:30:39,520 --> 00:30:44,830
that we all do this is what makes this

00:30:41,890 --> 00:30:46,480
an area where github can help and can

00:30:44,830 --> 00:30:48,340
play a role in helping to improve

00:30:46,480 --> 00:30:51,490
security practices in the security of

00:30:48,340 --> 00:30:53,350
code overall second the tools that we

00:30:51,490 --> 00:30:55,930
often use for code security these days

00:30:53,350 --> 00:30:58,090
they frequently live outside of the

00:30:55,930 --> 00:31:00,100
developer workflow and sometimes they're

00:30:58,090 --> 00:31:03,190
even a little bit at odds with how

00:31:00,100 --> 00:31:04,840
developers want to work so I think

00:31:03,190 --> 00:31:06,670
what's what's clear is we want to make

00:31:04,840 --> 00:31:08,410
it natural for developers to do the

00:31:06,670 --> 00:31:10,570
right thing with security we want to

00:31:08,410 --> 00:31:12,600
incorporate security processes just

00:31:10,570 --> 00:31:14,980
naturally into the developer workflow

00:31:12,600 --> 00:31:17,380
okay so with all this in mind we're

00:31:14,980 --> 00:31:19,600
excited today to announce github codes

00:31:17,380 --> 00:31:21,250
get up code scanning will proactively

00:31:19,600 --> 00:31:22,990
scan your code and identify

00:31:21,250 --> 00:31:25,810
vulnerabilities directly in your code

00:31:22,990 --> 00:31:27,460
review workflow and it does this with

00:31:25,810 --> 00:31:29,290
the power of code QL which is the

00:31:27,460 --> 00:31:32,830
world's most advanced semantic analysis

00:31:29,290 --> 00:31:34,540
engine together with code QL queries

00:31:32,830 --> 00:31:36,550
that have been written and shared by the

00:31:34,540 --> 00:31:38,740
entire security researcher and

00:31:36,550 --> 00:31:40,840
open-source community so to show you

00:31:38,740 --> 00:31:45,550
this please welcome great Baker

00:31:40,840 --> 00:31:47,380
great thanks Matt code scanning is going

00:31:45,550 --> 00:31:49,690
to change the way you think about

00:31:47,380 --> 00:31:50,950
security and software development what

00:31:49,690 --> 00:31:52,570
I'm about to show you isn't about

00:31:50,950 --> 00:31:54,700
sending more alerts it's about

00:31:52,570 --> 00:31:56,650
preventing vulnerabilities from ever

00:31:54,700 --> 00:32:00,370
being introduced into your software and

00:31:56,650 --> 00:32:03,580
the software you depend on so every repo

00:32:00,370 --> 00:32:05,560
on github has a security tab and we've

00:32:03,580 --> 00:32:08,920
recently overhauled the experience here

00:32:05,560 --> 00:32:11,860
to contain two great new features code

00:32:08,920 --> 00:32:13,990
scanning and secret scanning I'm gonna

00:32:11,860 --> 00:32:18,730
click through and show you just how easy

00:32:13,990 --> 00:32:21,070
it is to setup code scanning code

00:32:18,730 --> 00:32:23,590
scanning can work with any analysis

00:32:21,070 --> 00:32:25,690
engine all the interfaces I'm about to

00:32:23,590 --> 00:32:27,310
show you would work just as well with

00:32:25,690 --> 00:32:30,520
one of the partners from our marketplace

00:32:27,310 --> 00:32:33,460
like shift left or woo bo kaap and we

00:32:30,520 --> 00:32:36,600
have more partners coming soon however I

00:32:33,460 --> 00:32:39,520
want to show you the power of code QL

00:32:36,600 --> 00:32:41,740
it's a sophisticated program analysis

00:32:39,520 --> 00:32:45,010
engine with decades of research behind

00:32:41,740 --> 00:32:47,740
it and as you'll see it can find very

00:32:45,010 --> 00:32:50,190
nuanced vulnerability patterns let's

00:32:47,740 --> 00:32:50,190
click through it

00:32:51,690 --> 00:32:58,919
code scanning and code QL run on actions

00:32:55,509 --> 00:33:01,509
so I need to set up a workflow file

00:32:58,919 --> 00:33:03,009
everything's pre-populated for me and as

00:33:01,509 --> 00:33:05,350
you can see code scanning is going to

00:33:03,009 --> 00:33:09,249
run on every push and on a schedule

00:33:05,350 --> 00:33:10,929
which is Saturdays at 2:00 a.m. I love

00:33:09,249 --> 00:33:13,830
that actions has this mouse over

00:33:10,929 --> 00:33:16,379
I always forget the crontab syntax

00:33:13,830 --> 00:33:18,330
let's go ahead and commit that I'm gonna

00:33:16,379 --> 00:33:21,639
put it straight on master it's a little

00:33:18,330 --> 00:33:24,159
bit naughty but hey this is just a demo

00:33:21,639 --> 00:33:27,279
if you were counting that was just four

00:33:24,159 --> 00:33:29,589
clicks to set up code scanning it'll now

00:33:27,279 --> 00:33:32,379
run on every push to this repository and

00:33:29,589 --> 00:33:34,329
if I click over to the actions tab I can

00:33:32,379 --> 00:33:36,999
see that the first analysis has already

00:33:34,329 --> 00:33:39,219
started it's gonna take about three

00:33:36,999 --> 00:33:41,889
minutes to finish so here's one I made

00:33:39,219 --> 00:33:44,079
earlier and as you can see code scanning

00:33:41,889 --> 00:33:46,450
has already run on my master branch and

00:33:44,079 --> 00:33:48,389
it's also run on a feature branch I've

00:33:46,450 --> 00:33:50,919
created to add some new functionality

00:33:48,389 --> 00:33:54,249
let's take a look at some results from

00:33:50,919 --> 00:33:57,309
code scanning in the pull request I can

00:33:54,249 --> 00:33:58,719
click through and immediately see that

00:33:57,309 --> 00:34:00,849
code scanning has found a vulnerability

00:33:58,719 --> 00:34:05,950
in the code that I was planning to add

00:34:00,849 --> 00:34:10,149
if I click across to the deer I can see

00:34:05,950 --> 00:34:12,039
more details here it looks like code QL

00:34:10,149 --> 00:34:14,980
thinks that I have a database query

00:34:12,039 --> 00:34:17,980
built from user controlled sources

00:34:14,980 --> 00:34:22,270
how did it know that this bit is

00:34:17,980 --> 00:34:24,070
seriously cool I can click in and see

00:34:22,270 --> 00:34:26,409
how the data flows through my

00:34:24,070 --> 00:34:29,919
application from the point where the

00:34:26,409 --> 00:34:32,919
user inputs it right way through to

00:34:29,919 --> 00:34:34,270
where it's used in the database and if

00:34:32,919 --> 00:34:36,550
you were paying attention there was no

00:34:34,270 --> 00:34:38,580
sanitization along the way this is a

00:34:36,550 --> 00:34:40,260
real vulnerability

00:34:38,580 --> 00:34:42,510
if I need to know more about this

00:34:40,260 --> 00:34:45,480
vulnerability I can click in and get

00:34:42,510 --> 00:34:48,150
more details for every query that Coke

00:34:45,480 --> 00:34:52,490
ul uses there were full details and

00:34:48,150 --> 00:34:55,860
recommendations on how to fix any result

00:34:52,490 --> 00:34:58,290
in fact the pull request that I just

00:34:55,860 --> 00:35:00,450
showed you was a recreation of a real

00:34:58,290 --> 00:35:02,700
commit on an open source project the

00:35:00,450 --> 00:35:05,610
Flint CMS JavaScript project

00:35:02,700 --> 00:35:07,500
it caused a real vulnerability three

00:35:05,610 --> 00:35:09,690
months later when this was discovered

00:35:07,500 --> 00:35:13,080
the maintainer patched it and had a

00:35:09,690 --> 00:35:14,730
critical severity CVE issued but that

00:35:13,080 --> 00:35:17,370
vulnerability could have been prevented

00:35:14,730 --> 00:35:20,000
entirely if code scanning had been

00:35:17,370 --> 00:35:23,550
available when that commit was made and

00:35:20,000 --> 00:35:26,760
it's not just database vulnerabilities

00:35:23,550 --> 00:35:29,160
like this one that ko QL can find I'm

00:35:26,760 --> 00:35:30,990
going to show you a bunch of other CVS

00:35:29,160 --> 00:35:33,810
that code scanning could have prevented

00:35:30,990 --> 00:35:35,670
in each case the maintainer has given us

00:35:33,810 --> 00:35:37,530
permission to show their repository

00:35:35,670 --> 00:35:40,680
there were no zero days being dropped

00:35:37,530 --> 00:35:42,420
here but in each case code QL could have

00:35:40,680 --> 00:35:45,960
prevented this from ever entering

00:35:42,420 --> 00:35:47,880
production first up let's take a look at

00:35:45,960 --> 00:35:51,480
this code injection vulnerability in

00:35:47,880 --> 00:35:54,210
 Express this was issued a CVE in

00:35:51,480 --> 00:35:55,770
2019 it was critical severity and the

00:35:54,210 --> 00:35:57,810
maintainer followed a totally

00:35:55,770 --> 00:36:00,780
best-practice process they had their CVA

00:35:57,810 --> 00:36:03,570
issued through github what happens here

00:36:00,780 --> 00:36:07,080
is that a user can input data that

00:36:03,570 --> 00:36:10,020
includes code and then that data will

00:36:07,080 --> 00:36:12,210
flow through 14 steps across file and

00:36:10,020 --> 00:36:15,950
function boundaries to a point where

00:36:12,210 --> 00:36:15,950
it's used in a very unsafe way

00:36:16,140 --> 00:36:23,380
this vulnerability could have been

00:36:18,940 --> 00:36:24,400
prevented by code scanning next up let's

00:36:23,380 --> 00:36:26,680
take a look at a completely different

00:36:24,400 --> 00:36:29,320
kind of vulnerability prototype

00:36:26,680 --> 00:36:31,750
pollution in JavaScript prototype

00:36:29,320 --> 00:36:34,030
Volusia pollution is an instance of

00:36:31,750 --> 00:36:36,850
modification of what should be immutable

00:36:34,030 --> 00:36:39,850
in this case the immutable object should

00:36:36,850 --> 00:36:42,520
be the object prototype object in

00:36:39,850 --> 00:36:44,830
JavaScript if an attacker can change

00:36:42,520 --> 00:36:46,780
that because that gets inherited in so

00:36:44,830 --> 00:36:48,490
many places they can normally escalate

00:36:46,780 --> 00:36:51,160
to remote code execution or cross-site

00:36:48,490 --> 00:36:53,200
scripting vulnerabilities Koki well

00:36:51,160 --> 00:36:55,060
founded in the same way it traced

00:36:53,200 --> 00:36:58,540
through from where the user could input

00:36:55,060 --> 00:37:02,290
the data to the place where way down the

00:36:58,540 --> 00:37:05,500
stack that data is used to update the

00:37:02,290 --> 00:37:07,420
object with code scanning this

00:37:05,500 --> 00:37:09,820
vulnerability could have been prevented

00:37:07,420 --> 00:37:13,900
from ever having him been introduced a

00:37:09,820 --> 00:37:19,600
mixing deep is a is a dependency of 1.5

00:37:13,900 --> 00:37:22,720
million projects he's a vulnerability in

00:37:19,600 --> 00:37:25,540
go code in this case it's an open

00:37:22,720 --> 00:37:27,880
redirect for mobility open redirects

00:37:25,540 --> 00:37:30,250
happen when an attacker can provide a

00:37:27,880 --> 00:37:31,750
redirect URL that takes you not to the

00:37:30,250 --> 00:37:34,120
site you think it's going but to a

00:37:31,750 --> 00:37:36,160
second redirect beyond that and they're

00:37:34,120 --> 00:37:38,440
particularly dangerous in both

00:37:36,160 --> 00:37:40,810
applications which is what o auth to

00:37:38,440 --> 00:37:43,270
proxy is they could have allowed an

00:37:40,810 --> 00:37:45,550
attacker to harvest the credentials of

00:37:43,270 --> 00:37:48,130
users who were clicking through on

00:37:45,550 --> 00:37:51,600
Google github or any other awards

00:37:48,130 --> 00:37:54,180
provider this one

00:37:51,600 --> 00:37:56,700
ability CVE but it could have been

00:37:54,180 --> 00:37:59,250
prevented entirely by code scanning and

00:37:56,700 --> 00:38:01,790
in fact the old to proxy repo is now

00:37:59,250 --> 00:38:01,790
using

00:38:06,300 --> 00:38:10,800
the vulnerability that we found in

00:38:08,460 --> 00:38:12,780
github code itself as we were alpha

00:38:10,800 --> 00:38:15,150
testing code scanning this is in our

00:38:12,780 --> 00:38:16,440
Learning Lab application and again it's

00:38:15,150 --> 00:38:19,860
a completely different kind of

00:38:16,440 --> 00:38:22,770
vulnerability in this case Koki well has

00:38:19,860 --> 00:38:24,660
identified that we had a root that

00:38:22,770 --> 00:38:28,550
didn't have any kind of rate limiting

00:38:24,660 --> 00:38:31,170
but was performing file system access

00:38:28,550 --> 00:38:33,240
doing that could have opened it up up to

00:38:31,170 --> 00:38:35,010
a denial-of-service attack because

00:38:33,240 --> 00:38:38,400
filesystem access is a resource

00:38:35,010 --> 00:38:40,410
intensive operation this was caught in a

00:38:38,400 --> 00:38:43,020
pull request it never made it onto

00:38:40,410 --> 00:38:45,869
master so code scanning did prevent this

00:38:43,020 --> 00:38:47,430
vulnerability okay one more example

00:38:45,869 --> 00:38:49,319
because you get the idea

00:38:47,430 --> 00:38:51,300
in this case we're looking at a Java

00:38:49,319 --> 00:38:53,220
vulnerability it's in the micronaut

00:38:51,300 --> 00:38:54,960
framework which the framework developed

00:38:53,220 --> 00:38:56,579
by the co-creator of Grails

00:38:54,960 --> 00:38:58,890
somebody who knows exactly what they're

00:38:56,579 --> 00:39:01,980
doing on security everybody can make

00:38:58,890 --> 00:39:03,450
these mistakes but in this case I don't

00:39:01,980 --> 00:39:04,920
want to talk you through the result I

00:39:03,450 --> 00:39:08,310
want to talk you through the query

00:39:04,920 --> 00:39:11,010
because every default code ql query is

00:39:08,310 --> 00:39:14,700
open source so i can click through and

00:39:11,010 --> 00:39:17,520
see details of that query it's not a

00:39:14,700 --> 00:39:20,730
complicated query it's just 40 lines in

00:39:17,520 --> 00:39:23,069
this file and in this case the query was

00:39:20,730 --> 00:39:25,950
completed by a member of the Gradle

00:39:23,069 --> 00:39:28,170
security team Jonathan lightship and in

00:39:25,950 --> 00:39:30,750
fact Jonathan went further than just

00:39:28,170 --> 00:39:33,990
submitting this query and open-sourcing

00:39:30,750 --> 00:39:35,670
it he also opened 1,600 pull requests

00:39:33,990 --> 00:39:38,730
for instances of this vulnerability he

00:39:35,670 --> 00:39:40,619
found in open source projects and this

00:39:38,730 --> 00:39:43,020
is a great example of the transformative

00:39:40,619 --> 00:39:45,660
approach of code scanning and Kokua

00:39:43,020 --> 00:39:46,950
it means everyone can benefit from the

00:39:45,660 --> 00:39:49,109
expertise of leading security

00:39:46,950 --> 00:39:51,210
researchers and that those researchers

00:39:49,109 --> 00:39:53,430
can help prevent vulnerabilities and

00:39:51,210 --> 00:39:53,880
start to eliminate entire bug classes

00:39:53,430 --> 00:39:57,150
forever

00:39:53,880 --> 00:39:59,010
it makes security research scale it

00:39:57,150 --> 00:40:02,609
makes security research collaborative

00:39:59,010 --> 00:40:05,609
and it brings security review natively

00:40:02,609 --> 00:40:07,349
into the developer workflow code

00:40:05,609 --> 00:40:09,390
scanning is going to change the way you

00:40:07,349 --> 00:40:13,609
think about security and software

00:40:09,390 --> 00:40:13,609
development thanks Matt back to you

00:40:13,880 --> 00:40:19,530
thanks gray as you can see code QL is

00:40:17,280 --> 00:40:21,480
just incredibly powerful and the power

00:40:19,530 --> 00:40:23,970
of combining that with all these

00:40:21,480 --> 00:40:25,710
community-created queries and be able to

00:40:23,970 --> 00:40:28,200
run those across all of open source is a

00:40:25,710 --> 00:40:30,720
huge deal now everything you just saw is

00:40:28,200 --> 00:40:32,370
free for open source in fact it's

00:40:30,720 --> 00:40:34,620
expensive to run a lot of this stuff

00:40:32,370 --> 00:40:36,630
react as you saw from Gray's demo we

00:40:34,620 --> 00:40:39,450
actually run all this code QL analysis

00:40:36,630 --> 00:40:41,880
on top of actions and so if you want to

00:40:39,450 --> 00:40:43,290
integrate it into your project all the

00:40:41,880 --> 00:40:44,880
functionality is free and we will pay

00:40:43,290 --> 00:40:47,310
for the compute it will cost github

00:40:44,880 --> 00:40:49,830
millions of dollars to pay for the

00:40:47,310 --> 00:40:51,720
compute to run could ql analysis across

00:40:49,830 --> 00:40:53,180
all of open source but we will gladly do

00:40:51,720 --> 00:40:56,370
it because it is the right thing to do

00:40:53,180 --> 00:40:57,090
so just to quickly summarize some of

00:40:56,370 --> 00:40:59,010
what you just saw

00:40:57,090 --> 00:41:00,630
you see code scanning is a capability

00:40:59,010 --> 00:41:02,700
that's natively integrated into github

00:41:00,630 --> 00:41:04,740
workflows and it makes it super easy to

00:41:02,700 --> 00:41:07,890
find these security issues and then fix

00:41:04,740 --> 00:41:09,570
them and even to learn from the from the

00:41:07,890 --> 00:41:11,100
vulnerability information about these

00:41:09,570 --> 00:41:12,360
types of security patterns that you

00:41:11,100 --> 00:41:13,230
might want to avoid in the future so

00:41:12,360 --> 00:41:15,750
it's educational

00:41:13,230 --> 00:41:18,900
also it's powered by code QL and we have

00:41:15,750 --> 00:41:20,970
over 1,700 community submitted code QL

00:41:18,900 --> 00:41:23,100
queries that are available and we've

00:41:20,970 --> 00:41:26,430
created the github security lab as an

00:41:23,100 --> 00:41:29,310
organization that Nico Wiseman leads at

00:41:26,430 --> 00:41:31,590
github it's a collaboration between

00:41:29,310 --> 00:41:32,640
github employees and employees of lots

00:41:31,590 --> 00:41:34,650
of different tech companies who are

00:41:32,640 --> 00:41:37,830
basically all writing code QL queries

00:41:34,650 --> 00:41:39,150
our goal is that for every CVE in open

00:41:37,830 --> 00:41:42,420
source that gets found that could be

00:41:39,150 --> 00:41:43,980
generalized we create code QL query that

00:41:42,420 --> 00:41:46,320
would cover that so that instead of

00:41:43,980 --> 00:41:48,390
manually and sort of artisanally finding

00:41:46,320 --> 00:41:50,490
and fixing bugs one by one we can

00:41:48,390 --> 00:41:53,400
eradicate whole categories of

00:41:50,490 --> 00:41:55,380
vulnerabilities across software you

00:41:53,400 --> 00:41:57,480
should also know that code scanning

00:41:55,380 --> 00:41:58,470
supports a pluggable architecture so if

00:41:57,480 --> 00:42:00,660
you want to use something other than

00:41:58,470 --> 00:42:03,150
code QL or used to QL and something else

00:42:00,660 --> 00:42:06,030
you can plug in third-party static

00:42:03,150 --> 00:42:07,620
security tools buzzing tools dynamic

00:42:06,030 --> 00:42:10,560
tools whatever you want and they can

00:42:07,620 --> 00:42:13,050
show up in the same user experience you

00:42:10,560 --> 00:42:15,330
can also try code scanning for private

00:42:13,050 --> 00:42:17,010
repos as well too and we've just

00:42:15,330 --> 00:42:19,200
launched secret scanning for private

00:42:17,010 --> 00:42:20,370
repos as well we've been doing secret

00:42:19,200 --> 00:42:22,920
scanning for a number of years in public

00:42:20,370 --> 00:42:24,810
repos and we're now trying that out in

00:42:22,920 --> 00:42:27,070
private repos so if you accidentally

00:42:24,810 --> 00:42:28,990
commit your Cloud tokens or passwords

00:42:27,070 --> 00:42:30,280
to private repos we can use the code

00:42:28,990 --> 00:42:34,060
scanning interface to help you find

00:42:30,280 --> 00:42:36,670
those as well okay that's pretty much

00:42:34,060 --> 00:42:39,130
what we have for today let's recap what

00:42:36,670 --> 00:42:40,570
we announced we announced a new place

00:42:39,130 --> 00:42:43,600
for communities to connect with each

00:42:40,570 --> 00:42:45,400
other with get up discussions we're

00:42:43,600 --> 00:42:47,800
making contributing code to projects

00:42:45,400 --> 00:42:48,520
open source projects private projects in

00:42:47,800 --> 00:42:50,800
your company

00:42:48,520 --> 00:42:53,110
totally frictionless with code spaces

00:42:50,800 --> 00:42:56,200
which gives you vs code in the browser

00:42:53,110 --> 00:42:58,630
with just a click we're bringing the

00:42:56,200 --> 00:43:01,120
best tools and workflows to enterprises

00:42:58,630 --> 00:43:03,400
with getup actions and packages and with

00:43:01,120 --> 00:43:05,290
our new getup insights products and

00:43:03,400 --> 00:43:07,690
we're making using github in the cloud

00:43:05,290 --> 00:43:09,610
safe and compliant for highly regulated

00:43:07,690 --> 00:43:12,130
customers and industries with github

00:43:09,610 --> 00:43:14,470
private instances and finally with code

00:43:12,130 --> 00:43:15,790
scanning and code QL we're enabling the

00:43:14,470 --> 00:43:18,970
developer community to make software

00:43:15,790 --> 00:43:20,980
secure now I was asked I want you should

00:43:18,970 --> 00:43:23,290
know that this stuff doesn't come easy

00:43:20,980 --> 00:43:25,210
there are thousands of people at github

00:43:23,290 --> 00:43:27,520
and in the villa's code team who've

00:43:25,210 --> 00:43:29,860
worked incredibly hard to make the last

00:43:27,520 --> 00:43:31,780
35 minutes of stuff you saw possible and

00:43:29,860 --> 00:43:34,000
so I have been asked to blow this

00:43:31,780 --> 00:43:36,100
ceremonial kazoo in their honor so to

00:43:34,000 --> 00:43:37,660
all the hovers to all the vias code

00:43:36,100 --> 00:43:43,690
developers to everyone who's made all

00:43:37,660 --> 00:43:44,320
this possible I do this for you and see

00:43:43,690 --> 00:43:50,070
if this works

00:43:44,320 --> 00:43:52,840
I said that up myself I just want to say

00:43:50,070 --> 00:43:53,920
alright so thank you to everyone who for

00:43:52,840 --> 00:43:56,380
all the hard work that made all the

00:43:53,920 --> 00:43:57,790
sudden how it's been possible we've got

00:43:56,380 --> 00:44:00,220
a really exciting day ahead

00:43:57,790 --> 00:44:03,340
github satellite of hands-on demos

00:44:00,220 --> 00:44:06,070
there's product deep dives but you can

00:44:03,340 --> 00:44:08,110
hear from some of the best github users

00:44:06,070 --> 00:44:10,540
and customers in the world how are they

00:44:08,110 --> 00:44:13,150
dealing with remote work right now how

00:44:10,540 --> 00:44:15,550
are they implementing DevOps in their

00:44:13,150 --> 00:44:17,440
organization all those things are

00:44:15,550 --> 00:44:19,750
available throughout the day or you

00:44:17,440 --> 00:44:21,130
could spend the day in our play track so

00:44:19,750 --> 00:44:22,210
if you like the live coding and music

00:44:21,130 --> 00:44:24,970
that you heard earlier we have a lot

00:44:22,210 --> 00:44:27,790
more of that we have music and we have a

00:44:24,970 --> 00:44:28,990
lot of live coding and we have an AI rap

00:44:27,790 --> 00:44:31,300
battle which should be pretty

00:44:28,990 --> 00:44:33,100
interesting and a whole lot more so we

00:44:31,300 --> 00:44:37,410
really hope you enjoyed the show please

00:44:33,100 --> 00:44:37,410

YouTube URL: https://www.youtube.com/watch?v=L618Pp0n7us


