Title: Save precious time with GitHub Actions - GitHub Satellite 2020
Publication date: 2020-05-07
Playlist: GitHub Satellite 2020 - Work
Description: 
	Presented by Luca Cipriani, CIO, Arduino

The process of taking software from the development stage through testing and into production can be labor-intensive, expensive, and most of all, time consuming. Whether you're a hobbyist, an open source maintainer, or an organization, the single truth remains: We can’t buy time. Success is often determined by how efficiently we are using our time. In order to increase our efficiencies, we turned to GitHub Actions to automate our workflows for both the software and hardware we produce. We are now able to reprogram our Arduino board, test the input/output of the hardware, and then send the results back to GitHub Actions. We can completely automate not just a continuous integration of the software but also of the hardware using solely online tools. In this talk, we'll run through the workflows Arduino has implemented with GitHub Actions and show attendees ways that they can take the first steps into bringing GitHub Actions into their development cycle.

GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the world’s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:03,069 --> 00:00:07,340
I've got a fantastic session coming up

00:00:05,600 --> 00:00:10,039
now Dana really excited about this one

00:00:07,340 --> 00:00:12,110
so this one's coming from the legend

00:00:10,039 --> 00:00:14,690
Lucca Kapoor Yanni who's from joining us

00:00:12,110 --> 00:00:17,179
from Arduino so yeah it's going to be

00:00:14,690 --> 00:00:19,310
talking to us about how to save precious

00:00:17,179 --> 00:00:20,779
time with give up actions so let's

00:00:19,310 --> 00:00:23,390
without further ado let's head straight

00:00:20,779 --> 00:00:26,410
in and go talk to Lucas Lucas coming up

00:00:23,390 --> 00:00:26,410
next let's go now

00:00:27,810 --> 00:00:33,920
[Music]

00:00:38,190 --> 00:00:43,530
you know everyone I'm Lu can see are you

00:00:40,559 --> 00:00:47,010
at Arduino I'm here with every Porter

00:00:43,530 --> 00:00:50,370
and they get up octopus our mascot of

00:00:47,010 --> 00:00:53,070
the way here so today I'm going to spend

00:00:50,370 --> 00:00:56,070
some time to explain you how to save

00:00:53,070 --> 00:01:00,479
time with get up action and now we use

00:00:56,070 --> 00:01:05,369
them at Arduino so it's going to be an

00:01:00,479 --> 00:01:08,460
overview of before I will start with

00:01:05,369 --> 00:01:10,950
explaining you what Arduino is doing

00:01:08,460 --> 00:01:15,479
with open source more in general share

00:01:10,950 --> 00:01:20,490
some data with you and WZ also tell you

00:01:15,479 --> 00:01:23,130
the story and the idea we got after we

00:01:20,490 --> 00:01:26,039
are seeing that the get up action were

00:01:23,130 --> 00:01:29,850
available and then we are using them in

00:01:26,039 --> 00:01:33,240
the daily activities and also what we

00:01:29,850 --> 00:01:36,119
plan for the future so are doing

00:01:33,240 --> 00:01:38,970
obviously is very popular for the boards

00:01:36,119 --> 00:01:41,130
and the electronics but actually became

00:01:38,970 --> 00:01:44,219
popular for two main different reason

00:01:41,130 --> 00:01:46,170
one is the software behind that but more

00:01:44,219 --> 00:01:49,110
importantly is the community of people

00:01:46,170 --> 00:01:52,350
that are continuously contributing or

00:01:49,110 --> 00:01:55,500
together and helping us in delivering a

00:01:52,350 --> 00:01:57,509
lot more examples tutorials for

00:01:55,500 --> 00:02:00,420
newcomers but also professional people

00:01:57,509 --> 00:02:02,310
started inventing within so that came

00:02:00,420 --> 00:02:04,560
out of a lot of I don't know the 3d

00:02:02,310 --> 00:02:06,929
printers drones and many other things

00:02:04,560 --> 00:02:09,959
and as of now people also in the

00:02:06,929 --> 00:02:12,209
industries are using Arduino for daily

00:02:09,959 --> 00:02:14,340
activities and this is whole happening

00:02:12,209 --> 00:02:16,560
in the open-source ecosystem so

00:02:14,340 --> 00:02:20,310
obviously get up is a big part of it as

00:02:16,560 --> 00:02:22,709
well and so we are not just an

00:02:20,310 --> 00:02:25,739
electronic company but more like an

00:02:22,709 --> 00:02:28,170
open-source platform for everyone to

00:02:25,739 --> 00:02:30,600
give you some numbers there are really

00:02:28,170 --> 00:02:34,079
millions of people more than 20 minutes

00:02:30,600 --> 00:02:37,380
from here that use our own IDE which is

00:02:34,079 --> 00:02:39,390
obviously open source congedo and also

00:02:37,380 --> 00:02:41,819
hundred thousand peoples that are using

00:02:39,390 --> 00:02:43,980
currently our new Arduino command line

00:02:41,819 --> 00:02:47,669
tool that is something I'm gonna to

00:02:43,980 --> 00:02:51,120
speak about later today but more injera

00:02:47,669 --> 00:02:51,810
is a open source contributor we

00:02:51,120 --> 00:02:54,810
continues

00:02:51,810 --> 00:02:57,599
we developed more than 250 public

00:02:54,810 --> 00:03:00,239
repositories on our account which is

00:02:57,599 --> 00:03:02,819
quite interesting because our company is

00:03:00,239 --> 00:03:05,190
not really huge but this is coming out

00:03:02,819 --> 00:03:07,440
especially from the contributors and

00:03:05,190 --> 00:03:11,040
external contributors and obviously we

00:03:07,440 --> 00:03:17,330
draw and we maintain the eye security

00:03:11,040 --> 00:03:20,510
and quality standards of the code so the

00:03:17,330 --> 00:03:27,630
different components that are really

00:03:20,510 --> 00:03:32,580
famous are mobile screen okay so we were

00:03:27,630 --> 00:03:34,560
using github action and before using

00:03:32,580 --> 00:03:38,459
github action we were using different

00:03:34,560 --> 00:03:41,430
tools wildly popular tools really I

00:03:38,459 --> 00:03:45,180
think everyone knows them and they are

00:03:41,430 --> 00:03:48,209
good for doing CI and CD but what is

00:03:45,180 --> 00:03:50,700
really hard it is maintaining them and

00:03:48,209 --> 00:03:53,340
for as I said we are not super big

00:03:50,700 --> 00:03:56,549
corporate maintaining tools he's really

00:03:53,340 --> 00:03:58,859
a pain and also sometimes it can lend to

00:03:56,549 --> 00:04:01,109
have I don't know all dated software it

00:03:58,859 --> 00:04:04,680
sound secure the implication and can

00:04:01,109 --> 00:04:08,489
give us some issues so I think it was

00:04:04,680 --> 00:04:11,609
two years ago in 2018 and probably in

00:04:08,489 --> 00:04:15,870
October so it was a kid up really

00:04:11,609 --> 00:04:17,669
launched those new key dub actions so I

00:04:15,870 --> 00:04:20,700
was pretty excited about it because it

00:04:17,669 --> 00:04:24,120
was an online event and it became a

00:04:20,700 --> 00:04:25,770
private better I think and I say okay

00:04:24,120 --> 00:04:30,210
this is really interesting because it's

00:04:25,770 --> 00:04:32,039
going to change not just how CI CD works

00:04:30,210 --> 00:04:36,450
but more in general how do you develop

00:04:32,039 --> 00:04:38,490
something because he's really tours also

00:04:36,450 --> 00:04:42,000
my my culture which is really the

00:04:38,490 --> 00:04:42,870
observable oriented this is mixing up a

00:04:42,000 --> 00:04:45,270
bit

00:04:42,870 --> 00:04:47,550
having the developers feel confident

00:04:45,270 --> 00:04:50,039
also to run their own pipeline for

00:04:47,550 --> 00:04:52,460
continuous integration also to deploy

00:04:50,039 --> 00:04:55,830
directly on stage or to release

00:04:52,460 --> 00:04:59,340
something online publicly available so

00:04:55,830 --> 00:04:59,970
this is really interesting for for

00:04:59,340 --> 00:05:01,190
everybody

00:04:59,970 --> 00:05:04,940
[Music]

00:05:01,190 --> 00:05:07,910
so when really

00:05:04,940 --> 00:05:10,310
not Friedman elucidate is a okay this is

00:05:07,910 --> 00:05:12,140
America a completely new idea and

00:05:10,310 --> 00:05:14,960
changing the basis but not just for

00:05:12,140 --> 00:05:18,650
technical reason but mainly because of

00:05:14,960 --> 00:05:20,810
the get up community because every new

00:05:18,650 --> 00:05:23,690
interesting technology that is being

00:05:20,810 --> 00:05:26,300
figured up by the leader community is

00:05:23,690 --> 00:05:28,400
going to be the standard for a new

00:05:26,300 --> 00:05:30,200
generation of developers and this is

00:05:28,400 --> 00:05:32,540
extremely important for us so it's not

00:05:30,200 --> 00:05:36,140
just a matter of technology but a matter

00:05:32,540 --> 00:05:40,310
of people so that's what really gave us

00:05:36,140 --> 00:05:41,960
a new interesting view about continuous

00:05:40,310 --> 00:05:44,660
integration continuous development and

00:05:41,960 --> 00:05:47,660
deployment and a lot of different things

00:05:44,660 --> 00:05:50,870
we're gonna see but now there is really

00:05:47,660 --> 00:05:52,820
our own challenge the Arduino challenge

00:05:50,870 --> 00:05:56,390
is not about just testing the software

00:05:52,820 --> 00:05:59,180
but also about testing the artwork and I

00:05:56,390 --> 00:06:00,980
my background is really in the software

00:05:59,180 --> 00:06:04,490
industry and then when I joined Arduino

00:06:00,980 --> 00:06:07,910
I started playing with these boards so

00:06:04,490 --> 00:06:10,400
you know they are really tiny and there

00:06:07,910 --> 00:06:14,840
is some something physical and tangible

00:06:10,400 --> 00:06:16,940
you have to wait interrupts so you can't

00:06:14,840 --> 00:06:19,370
retry to may time something because

00:06:16,940 --> 00:06:22,360
maybe it could electronically break so

00:06:19,370 --> 00:06:26,180
you need to be extremely careful and

00:06:22,360 --> 00:06:29,090
also you want to orchestrate all those

00:06:26,180 --> 00:06:30,950
tests on physical Hardware externally by

00:06:29,090 --> 00:06:33,919
some software so there is a tight

00:06:30,950 --> 00:06:37,310
interaction between Arbour and software

00:06:33,919 --> 00:06:39,740
this is extremely challenging because we

00:06:37,310 --> 00:06:41,960
do have a set a lot of libraries

00:06:39,740 --> 00:06:44,720
directly created by us

00:06:41,960 --> 00:06:47,419
so more than 90s but there are out dart

00:06:44,720 --> 00:06:50,030
really thousands of libraries created by

00:06:47,419 --> 00:06:51,830
the community and you want to run tests

00:06:50,030 --> 00:06:54,110
on top of them you want to check

00:06:51,830 --> 00:06:57,740
compatibility with different kind of

00:06:54,110 --> 00:07:00,980
ports want to at the community in having

00:06:57,740 --> 00:07:05,180
high standards and you can also suggest

00:07:00,980 --> 00:07:07,100
some good libraries across others so

00:07:05,180 --> 00:07:09,320
testing everything obviously is a

00:07:07,100 --> 00:07:11,930
complex text and it's not finished yet

00:07:09,320 --> 00:07:13,910
but this tool is really helping us in

00:07:11,930 --> 00:07:16,880
achieving that the same applies with

00:07:13,910 --> 00:07:18,529
integration tests so not just a unit

00:07:16,880 --> 00:07:20,809
test internally for the library

00:07:18,529 --> 00:07:23,409
but also understand if they are working

00:07:20,809 --> 00:07:25,999
across many different platform adjust

00:07:23,409 --> 00:07:28,639
platform in the sense of Arduino so

00:07:25,999 --> 00:07:31,219
really microcontrollers but also the

00:07:28,639 --> 00:07:33,649
tools that we use like HR ideally the

00:07:31,219 --> 00:07:37,849
common line tool and many other they

00:07:33,649 --> 00:07:39,949
work on Mac on Linux or Windows really

00:07:37,849 --> 00:07:42,289
on a ton of different machines we use

00:07:39,949 --> 00:07:45,529
the go programming language and they

00:07:42,289 --> 00:07:48,619
also have to run on x86 or our machines

00:07:45,529 --> 00:07:50,719
and you know all those different

00:07:48,619 --> 00:07:53,019
combination have to work all together

00:07:50,719 --> 00:07:56,149
because millions of people are using

00:07:53,019 --> 00:07:57,829
those products and in libraries you have

00:07:56,149 --> 00:08:03,049
to guarantee that they are gonna work

00:07:57,829 --> 00:08:05,359
always let's say we started we were

00:08:03,049 --> 00:08:07,669
really confident about because it was an

00:08:05,359 --> 00:08:09,229
internally new project our Arduino

00:08:07,669 --> 00:08:13,129
command line tool is a tool that allows

00:08:09,229 --> 00:08:15,409
you to program on Arduino board directly

00:08:13,129 --> 00:08:18,229
from the command line so it's pretty

00:08:15,409 --> 00:08:23,059
nice for developers obviously and for

00:08:18,229 --> 00:08:26,299
professionals we had to test the Arduino

00:08:23,059 --> 00:08:29,629
CLI itself so we started writing some go

00:08:26,299 --> 00:08:31,459
tests and then we had to rub them every

00:08:29,629 --> 00:08:33,889
time we created a new request so we

00:08:31,459 --> 00:08:35,839
started creating a key table action

00:08:33,889 --> 00:08:38,149
because was really easy to start with

00:08:35,839 --> 00:08:40,789
and then if we made mistake wasn't

00:08:38,149 --> 00:08:44,089
really a big deal because we didn't need

00:08:40,789 --> 00:08:47,779
a separate team like collaboration team

00:08:44,089 --> 00:08:49,970
to set up a new server with some CI tool

00:08:47,779 --> 00:08:52,699
on it and so forth we were just

00:08:49,970 --> 00:08:55,639
experimenting with it see how it was and

00:08:52,699 --> 00:08:58,029
then eventually decide and we decided to

00:08:55,639 --> 00:09:00,920
beat this technology because from

00:08:58,029 --> 00:09:04,069
starting a prototype to actually having

00:09:00,920 --> 00:09:06,679
those functional tests in production was

00:09:04,069 --> 00:09:09,559
really a few clicks away and writing a

00:09:06,679 --> 00:09:12,769
young file so extremely easy or any kind

00:09:09,559 --> 00:09:17,899
of professional developers and the other

00:09:12,769 --> 00:09:20,449
big thing was it was announced a bit

00:09:17,899 --> 00:09:25,040
later but github action allows you to

00:09:20,449 --> 00:09:28,579
run your own self hosted runners on any

00:09:25,040 --> 00:09:29,839
kind of hardware you want included arm

00:09:28,579 --> 00:09:31,900
and obviously

00:09:29,839 --> 00:09:34,120
raspberry run haha

00:09:31,900 --> 00:09:36,010
so we decided to experiment a bit with

00:09:34,120 --> 00:09:38,350
it and because they come online tool

00:09:36,010 --> 00:09:41,890
already runs on her you can magically

00:09:38,350 --> 00:09:45,730
attach a lot of different boards on on a

00:09:41,890 --> 00:09:49,570
raspberry run the heat up action

00:09:45,730 --> 00:09:53,529
self-hosted runner inside the raspberry

00:09:49,570 --> 00:09:55,589
beam and use that to test the arbor

00:09:53,529 --> 00:09:58,810
connected to it which is really

00:09:55,589 --> 00:10:01,839
something Eddy completely new today to

00:09:58,810 --> 00:10:04,150
the industry so this is our test Rick is

00:10:01,839 --> 00:10:07,029
still under development but as you can

00:10:04,150 --> 00:10:09,790
see there is an LCD display that he was

00:10:07,029 --> 00:10:12,820
the output of the test and also the risk

00:10:09,790 --> 00:10:14,680
physical equipment and as I said the

00:10:12,820 --> 00:10:16,360
complexity is the interaction between

00:10:14,680 --> 00:10:19,410
the software and the physical system

00:10:16,360 --> 00:10:22,180
there are those pogo pins that

00:10:19,410 --> 00:10:25,420
physically connect with the electronics

00:10:22,180 --> 00:10:27,850
of the hardware as you can see this is

00:10:25,420 --> 00:10:30,279
the the board so it's really really

00:10:27,850 --> 00:10:34,140
connected physically to those pin and

00:10:30,279 --> 00:10:36,240
then we can thanks to an FPGA board

00:10:34,140 --> 00:10:38,770
understand what's going on at

00:10:36,240 --> 00:10:43,330
electronical level and then put all

00:10:38,770 --> 00:10:50,290
those reports in as an output of the kit

00:10:43,330 --> 00:10:53,250
of action so this this is and one of

00:10:50,290 --> 00:10:56,680
those boards so this is an example and

00:10:53,250 --> 00:10:59,080
the interesting thing is that for us the

00:10:56,680 --> 00:11:01,839
guild of action is kind of gluing

00:10:59,080 --> 00:11:05,020
everything together so is hiding the

00:11:01,839 --> 00:11:09,540
complexity which is also one of the main

00:11:05,020 --> 00:11:13,089
goal of Arduino that means we all know

00:11:09,540 --> 00:11:15,250
nervous to be to understand what they

00:11:13,089 --> 00:11:19,209
are or they are doing but at the same

00:11:15,250 --> 00:11:21,250
time we let professional to save a ton

00:11:19,209 --> 00:11:24,920
of time and that's another main goal for

00:11:21,250 --> 00:11:27,859
us so for

00:11:24,920 --> 00:11:30,649
arguing ortley what we did as you can

00:11:27,859 --> 00:11:33,319
see there is I give up directory then we

00:11:30,649 --> 00:11:35,480
also started creating new release so we

00:11:33,319 --> 00:11:40,069
we started with the test and now we said

00:11:35,480 --> 00:11:42,980
ok we can even release the CLI with by

00:11:40,069 --> 00:11:45,980
using github action so everything is

00:11:42,980 --> 00:11:49,999
open source and you can check it out but

00:11:45,980 --> 00:11:53,720
this is the way on how we release new

00:11:49,999 --> 00:11:56,679
command line tool really every two weeks

00:11:53,720 --> 00:11:59,569
or so to the general public audience

00:11:56,679 --> 00:12:03,439
while we are doing that because Allah

00:11:59,569 --> 00:12:06,649
has not to do every task automatically

00:12:03,439 --> 00:12:09,410
but it alo has to spot issues

00:12:06,649 --> 00:12:10,759
immediately and that's a matter of thing

00:12:09,410 --> 00:12:13,249
for us because the beginning is

00:12:10,759 --> 00:12:17,389
extremely important I say there are many

00:12:13,249 --> 00:12:20,149
pieces going on together so spotting

00:12:17,389 --> 00:12:22,850
errors is crucial for us because we save

00:12:20,149 --> 00:12:26,269
us a lot of time you can really filter

00:12:22,850 --> 00:12:28,730
everything for I know failure status you

00:12:26,269 --> 00:12:32,629
can click on the interface immediately

00:12:28,730 --> 00:12:34,819
get what's going on and also understand

00:12:32,629 --> 00:12:37,249
what is the last line that has been

00:12:34,819 --> 00:12:38,899
brown and failed and eventually you

00:12:37,249 --> 00:12:43,069
decide what is going to be the strategy

00:12:38,899 --> 00:12:47,660
about that so this is extremely not just

00:12:43,069 --> 00:12:50,209
useful but really saving time for us so

00:12:47,660 --> 00:12:52,189
once we did that on this project

00:12:50,209 --> 00:12:54,410
obviously the developer started to be

00:12:52,189 --> 00:12:57,249
extremely excited about that and they

00:12:54,410 --> 00:13:02,779
wanted to use it pretty much everywhere

00:12:57,249 --> 00:13:05,299
so we had in the same project we needed

00:13:02,779 --> 00:13:07,549
to create a documentation for the

00:13:05,299 --> 00:13:10,939
command line tool and we say ok why

00:13:07,549 --> 00:13:13,329
don't we set up another github action to

00:13:10,939 --> 00:13:16,339
automatically generate the documentation

00:13:13,329 --> 00:13:18,649
coming from the source code and from

00:13:16,339 --> 00:13:21,889
other resources that's what we did

00:13:18,649 --> 00:13:24,919
it was pretty linear so we started doing

00:13:21,889 --> 00:13:27,769
that and the output of this G Direction

00:13:24,919 --> 00:13:31,309
is this beautiful website that is again

00:13:27,769 --> 00:13:34,309
running on Arduino dot GW what's the

00:13:31,309 --> 00:13:37,339
main advantage is that really a low has

00:13:34,309 --> 00:13:38,720
to not having an infraction like

00:13:37,339 --> 00:13:42,260
registering onion

00:13:38,720 --> 00:13:45,590
setting up a new server before going

00:13:42,260 --> 00:13:48,970
online we are we are still we are a fast

00:13:45,590 --> 00:13:51,740
startup kind of company even if we exist

00:13:48,970 --> 00:13:54,650
in the last many years I think were less

00:13:51,740 --> 00:13:56,960
14 years or so and we still act as a

00:13:54,650 --> 00:14:00,260
start-up so the interesting thing is

00:13:56,960 --> 00:14:02,360
that this allow us to quickly have a

00:14:00,260 --> 00:14:04,850
prototype put it in production and now

00:14:02,360 --> 00:14:06,560
at least the users have the proper

00:14:04,850 --> 00:14:09,190
documentation that is automatically

00:14:06,560 --> 00:14:12,230
updated it's extremely important because

00:14:09,190 --> 00:14:16,010
Arduino is really a user facing company

00:14:12,230 --> 00:14:18,320
and our community is also our users and

00:14:16,010 --> 00:14:21,140
our customers at the same time so we

00:14:18,320 --> 00:14:25,700
want to deliver very fast and daily and

00:14:21,140 --> 00:14:27,710
this is perfect for us so once obviously

00:14:25,700 --> 00:14:31,790
people started writing more and more

00:14:27,710 --> 00:14:36,050
code then our developer became kind of

00:14:31,790 --> 00:14:38,840
enthusiastic inhuman crazy about github

00:14:36,050 --> 00:14:41,030
action so we started having our own key

00:14:38,840 --> 00:14:43,460
direction which is again interesting

00:14:41,030 --> 00:14:46,940
because now if you want to test your own

00:14:43,460 --> 00:14:50,450
artwork that is Arduino compatible you

00:14:46,940 --> 00:14:52,280
can use the Arduino CLI as a github

00:14:50,450 --> 00:14:57,110
action so you can include the Arduino

00:14:52,280 --> 00:14:59,660
CLI itself as a github action and and so

00:14:57,110 --> 00:15:02,150
we are enriching the ecosystem and we

00:14:59,660 --> 00:15:04,820
are letting other people create on top

00:15:02,150 --> 00:15:08,290
of it so it's again a community and

00:15:04,820 --> 00:15:12,200
open-source goal all together but also

00:15:08,290 --> 00:15:17,150
raising the bar of the quality for the

00:15:12,200 --> 00:15:20,450
industry as well so I think I got you a

00:15:17,150 --> 00:15:23,540
pretty good overview of all the tools

00:15:20,450 --> 00:15:27,860
and they set up that is needed for for

00:15:23,540 --> 00:15:29,600
running a CLI past project I will speak

00:15:27,860 --> 00:15:33,680
about this with closed source but just

00:15:29,600 --> 00:15:35,900
because it is an internal project but

00:15:33,680 --> 00:15:38,750
would like to show you even if it is

00:15:35,900 --> 00:15:40,880
this internal what are the full

00:15:38,750 --> 00:15:44,060
capabilities of the key direction and

00:15:40,880 --> 00:15:48,530
now we leverage them the nice thing is

00:15:44,060 --> 00:15:50,720
there is not just for continuous

00:15:48,530 --> 00:15:52,470
integration in contains delivery but you

00:15:50,720 --> 00:15:55,230
can do a lot more like

00:15:52,470 --> 00:15:59,250
in those action that I'm going to show

00:15:55,230 --> 00:16:01,620
you right now we set up an entire new

00:15:59,250 --> 00:16:04,560
kubernetes cluster by using a github

00:16:01,620 --> 00:16:06,410
action we can deploy a new staging

00:16:04,560 --> 00:16:09,810
environment to developer environment

00:16:06,410 --> 00:16:11,870
with just single click and there are

00:16:09,810 --> 00:16:15,860
just a few

00:16:11,870 --> 00:16:18,120
yum file with with some recipe in it and

00:16:15,860 --> 00:16:21,660
everyone in the company can understand

00:16:18,120 --> 00:16:23,899
it that's another big goal so because we

00:16:21,660 --> 00:16:26,160
are going to align to this strategy

00:16:23,899 --> 00:16:28,470
everyone in the company if these are

00:16:26,160 --> 00:16:31,800
front-end developer became developer or

00:16:28,470 --> 00:16:33,959
a free more engineer it doesn't matter

00:16:31,800 --> 00:16:36,389
we are going to use the same tool you

00:16:33,959 --> 00:16:39,300
are share across the company so we have

00:16:36,389 --> 00:16:42,000
easily action to turn down out the

00:16:39,300 --> 00:16:44,399
vermin environment and create a new

00:16:42,000 --> 00:16:47,610
cluster or just run tests on a specific

00:16:44,399 --> 00:16:50,490
application or even tagging and Lebanon

00:16:47,610 --> 00:16:53,069
the pull request and Ankita Bishop which

00:16:50,490 --> 00:16:54,990
is extremely interesting for a company

00:16:53,069 --> 00:16:59,519
that is mainly doing an open source

00:16:54,990 --> 00:17:02,970
obviously so I hope that you understood

00:16:59,519 --> 00:17:06,000
a bit more our github action work but I

00:17:02,970 --> 00:17:09,689
also hope that you just don't trust only

00:17:06,000 --> 00:17:10,799
myself by you give it a try alone and

00:17:09,689 --> 00:17:13,709
for yourself

00:17:10,799 --> 00:17:16,650
and because you can't damage anything is

00:17:13,709 --> 00:17:19,650
everything lost it just configure

00:17:16,650 --> 00:17:22,049
everything there is also a nice UI

00:17:19,650 --> 00:17:24,569
interface you click you test it and

00:17:22,049 --> 00:17:26,520
that's it I invite you also to ask me

00:17:24,569 --> 00:17:27,240
any question in the question and answer

00:17:26,520 --> 00:17:29,309
session

00:17:27,240 --> 00:17:32,030
and I want to thank you all of you

00:17:29,309 --> 00:17:32,030
thanks

00:17:38,060 --> 00:17:56,880
fascinating actions is really easy you

00:17:41,340 --> 00:17:59,250
know if you ordering a self-hosted

00:17:56,880 --> 00:18:01,830
runners and being able to you know in

00:17:59,250 --> 00:18:03,660
parallel go and run all of your actions

00:18:01,830 --> 00:18:04,710
for your CICP pipeline it's just awesome

00:18:03,660 --> 00:18:08,480
it's just awesome

00:18:04,710 --> 00:18:11,850
but Martin um you know what did you like

00:18:08,480 --> 00:18:13,950
um I'm a big fan of Arduino as you know

00:18:11,850 --> 00:18:15,600
Dana and then anything IOT and all that

00:18:13,950 --> 00:18:15,900
sort of okay I just want to show you

00:18:15,600 --> 00:18:18,960
this

00:18:15,900 --> 00:18:21,120
yeah Bridge you know I dug is that one

00:18:18,960 --> 00:18:23,930
of the original you know very long time

00:18:21,120 --> 00:18:26,340
ago yeah and what's fantastic is the

00:18:23,930 --> 00:18:28,770
just the way that everything is

00:18:26,340 --> 00:18:30,720
open-source all the designs everything

00:18:28,770 --> 00:18:32,160
and in fact you know all your actions

00:18:30,720 --> 00:18:33,990
were open source as well that's just

00:18:32,160 --> 00:18:36,300
phenomenal when people want to figure

00:18:33,990 --> 00:18:37,770
out how you've done this stuff like that

00:18:36,300 --> 00:18:39,570
hardware in the loop testing you were

00:18:37,770 --> 00:18:43,320
doing that just blew my mind

00:18:39,570 --> 00:18:44,760
so was that working with so that was

00:18:43,320 --> 00:18:47,670
calling down running a self-hosted

00:18:44,760 --> 00:18:49,410
runner locally it was talking back up to

00:18:47,670 --> 00:18:51,150
actions in the cloud and then that's how

00:18:49,410 --> 00:18:51,950
it was able to talk to the devices is

00:18:51,150 --> 00:18:54,960
that how that works

00:18:51,950 --> 00:18:56,880
yeah actually is running in the factory

00:18:54,960 --> 00:18:59,910
so in the factory this there is this

00:18:56,880 --> 00:19:03,210
district with the raspberry meat so you

00:18:59,910 --> 00:19:05,550
can flash a program every single board

00:19:03,210 --> 00:19:08,040
because we test every single port before

00:19:05,550 --> 00:19:09,840
going online and so yeah that is

00:19:08,040 --> 00:19:11,580
incredible because it's really allow us

00:19:09,840 --> 00:19:13,770
to have some kind of mix to the

00:19:11,580 --> 00:19:16,080
environment obviously once you start

00:19:13,770 --> 00:19:18,360
working lightly with the hardware

00:19:16,080 --> 00:19:21,000
initially if you are coming from a web

00:19:18,360 --> 00:19:23,160
background it fits this range now

00:19:21,000 --> 00:19:25,470
because you know there is physical

00:19:23,160 --> 00:19:28,350
hardware and you can trigger it and but

00:19:25,470 --> 00:19:31,890
also it feels really empowering because

00:19:28,350 --> 00:19:34,980
you are changing the the physics of in

00:19:31,890 --> 00:19:39,300
the bits for real not just on our

00:19:34,980 --> 00:19:40,710
virtual environment as fantastic so as

00:19:39,300 --> 00:19:42,660
you mentioned you're gonna be in the

00:19:40,710 --> 00:19:45,570
discussions area and you're gonna be I'm

00:19:42,660 --> 00:19:47,040
taking Q&A from the audience

00:19:45,570 --> 00:19:48,300
we've got some questions in already so

00:19:47,040 --> 00:19:49,860
if it's okay with you just want to take

00:19:48,300 --> 00:19:51,600
you through a couple so we've got the

00:19:49,860 --> 00:19:52,830
first one here and this is related just

00:19:51,600 --> 00:19:56,820
what we were talking about actually is

00:19:52,830 --> 00:19:58,350
from tinny m-lok are I think that is

00:19:56,820 --> 00:20:00,320
anyway whoa no no apologies for

00:19:58,350 --> 00:20:03,420
butchering your handle bear whatever

00:20:00,320 --> 00:20:07,440
yeah yeah sorry

00:20:03,420 --> 00:20:09,810
so the so they wanted to know can can

00:20:07,440 --> 00:20:13,530
you use actions then to push the code to

00:20:09,810 --> 00:20:15,180
the Arduino device and how do you do

00:20:13,530 --> 00:20:16,440
that how does that work people more

00:20:15,180 --> 00:20:18,990
people want to understand this hardware

00:20:16,440 --> 00:20:22,350
in the loop stuff yes that's the nice

00:20:18,990 --> 00:20:25,500
thing because the Arduino CLI is not

00:20:22,350 --> 00:20:29,220
just a CLI in the let's say classical

00:20:25,500 --> 00:20:31,980
sense but what is really nobody vote

00:20:29,220 --> 00:20:34,020
about it it is not going to be pretty

00:20:31,980 --> 00:20:38,280
technical here but I think everyone here

00:20:34,020 --> 00:20:40,560
is probably a developer so it has a GRDC

00:20:38,280 --> 00:20:43,440
interface on top of it so you can

00:20:40,560 --> 00:20:47,220
interact with it also by using basically

00:20:43,440 --> 00:20:50,340
WebSocket or kind of a GDP like

00:20:47,220 --> 00:20:53,970
interface and simplifying a bit but but

00:20:50,340 --> 00:20:56,460
yes and you also can use the CLI so our

00:20:53,970 --> 00:20:58,140
own let's say official action your

00:20:56,460 --> 00:21:01,410
pipeline so you can create your own

00:20:58,140 --> 00:21:06,540
action hold this yell I have your own

00:21:01,410 --> 00:21:08,100
environment and the directly upload your

00:21:06,540 --> 00:21:12,110
sketch or your board

00:21:08,100 --> 00:21:12,110
so yes it's absolutely possible

00:21:13,730 --> 00:21:19,000
contrasting

00:21:14,860 --> 00:21:21,100
Dana is there any other questions well I

00:21:19,000 --> 00:21:23,620
just wanted to know DD's github actions

00:21:21,100 --> 00:21:26,860
in other projects and teams um you know

00:21:23,620 --> 00:21:30,190
how widespread has this adoption been it

00:21:26,860 --> 00:21:33,460
aren't we now absolutely stunning

00:21:30,190 --> 00:21:36,670
because really this week was the content

00:21:33,460 --> 00:21:40,299
and marketing team started using the

00:21:36,670 --> 00:21:44,980
github actions to publish new tutorials

00:21:40,299 --> 00:21:47,710
on our public website because we use we

00:21:44,980 --> 00:21:50,230
are used to create statically copy of

00:21:47,710 --> 00:21:53,290
our website and publish it on some kind

00:21:50,230 --> 00:21:56,200
of Cydia so they started themselves by

00:21:53,290 --> 00:21:59,220
using a new direction and they are

00:21:56,200 --> 00:22:01,540
really able to at least have a POC

00:21:59,220 --> 00:22:04,809
completely working on get up and that's

00:22:01,540 --> 00:22:06,760
it Wow

00:22:04,809 --> 00:22:10,690
that is awesome so you heard it here

00:22:06,760 --> 00:22:11,500
from Lucca open-source products coming

00:22:10,690 --> 00:22:13,660
from Arduino

00:22:11,500 --> 00:22:16,059
we're excited you know Martin's a huge

00:22:13,660 --> 00:22:17,919
fan but yeah I want to thank even just a

00:22:16,059 --> 00:22:20,169
reminder Lucca will be available for the

00:22:17,919 --> 00:22:21,910
next 30 minutes doing more Q&A in our

00:22:20,169 --> 00:22:24,250
discussions you can hit him up at get

00:22:21,910 --> 00:22:27,520
loves github satellite comm slash

00:22:24,250 --> 00:22:28,630
discussions so yeah so Martin I thought

00:22:27,520 --> 00:22:30,549
I've been seeing you take a look at your

00:22:28,630 --> 00:22:33,880
phone a couple of times if you took and

00:22:30,549 --> 00:22:35,140
Twitter why we've been streaming oh okay

00:22:33,880 --> 00:22:37,000
well that's so before we get into that

00:22:35,140 --> 00:22:39,570
let's say goodbye to Lucas oh hey Luca

00:22:37,000 --> 00:22:39,570
we'll see you later

00:22:40,700 --> 00:22:43,749
[Music]

00:22:43,830 --> 00:22:45,890

YouTube URL: https://www.youtube.com/watch?v=ZLQzMSItzcU


