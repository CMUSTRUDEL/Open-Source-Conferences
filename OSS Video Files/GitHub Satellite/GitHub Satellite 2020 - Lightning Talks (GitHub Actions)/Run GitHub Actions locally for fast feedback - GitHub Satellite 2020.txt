Title: Run GitHub Actions locally for fast feedback - GitHub Satellite 2020
Publication date: 2020-05-07
Playlist: GitHub Satellite 2020 - Lightning Talks (GitHub Actions)
Description: 
	Presented by Casey P Lee

GitHub Satellite: A community connected by code

On May 6th, we threw a free virtual event featuring developers working together on the worldâ€™s software, announcements from the GitHub team, and inspiring performances by artists who code.

More information: https://githubsatellite.com
Schedule: https://githubsatellite.com/schedule/
Captions: 
	00:00:00,030 --> 00:00:05,370
hey how's it going my name is Casey Lee

00:00:02,210 --> 00:00:07,970
github handles CP Lee and today I want

00:00:05,370 --> 00:00:11,219
to talk about a pro tip on how to

00:00:07,970 --> 00:00:12,809
efficiently build actions with github

00:00:11,219 --> 00:00:14,670
actions so we've got a sample

00:00:12,809 --> 00:00:17,279
application here just a node.js app

00:00:14,670 --> 00:00:19,859
simple hello world Express application

00:00:17,279 --> 00:00:22,619
and what I want to show is I built a

00:00:19,859 --> 00:00:25,320
simple workflow using github actions it

00:00:22,619 --> 00:00:28,769
uses the boon to latest runner and then

00:00:25,320 --> 00:00:31,679
uses the checkout action use a setup

00:00:28,769 --> 00:00:33,809
node to set up all the node tools that

00:00:31,679 --> 00:00:37,440
are needed for this workflow and then I

00:00:33,809 --> 00:00:40,020
run npm install and npm test really

00:00:37,440 --> 00:00:41,940
straightforward workflow probably seen

00:00:40,020 --> 00:00:43,079
many like this but here's the problem

00:00:41,940 --> 00:00:45,690
the problem is when you're building

00:00:43,079 --> 00:00:47,850
these workflows with github actions the

00:00:45,690 --> 00:00:49,860
feedback cycle can be painful you have

00:00:47,850 --> 00:00:51,539
to commit and push and commit and push

00:00:49,860 --> 00:00:53,670
to get feedback on if your tests work

00:00:51,539 --> 00:00:55,500
and if you're anything like me your get

00:00:53,670 --> 00:00:58,260
history ends up looking like this where

00:00:55,500 --> 00:00:59,879
you've got this very long drawn-out set

00:00:58,260 --> 00:01:02,190
of commits where you're just testing

00:00:59,879 --> 00:01:04,830
github actions over and over and over

00:01:02,190 --> 00:01:06,060
again makes for not the best process so

00:01:04,830 --> 00:01:08,549
I want to introduce you to this tool

00:01:06,060 --> 00:01:11,369
it's available something that I created

00:01:08,549 --> 00:01:13,770
on the neck toast org the tool is called

00:01:11,369 --> 00:01:16,380
act so you can find it an ecto slash act

00:01:13,770 --> 00:01:17,549
you can install through brew or choco or

00:01:16,380 --> 00:01:19,020
scoop whatever you like

00:01:17,549 --> 00:01:20,490
you install this tool it's a small

00:01:19,020 --> 00:01:22,259
command-line tool and so here we're

00:01:20,490 --> 00:01:24,570
gonna demo it so I've got my repo

00:01:22,259 --> 00:01:27,990
checked out here you can see my node.js

00:01:24,570 --> 00:01:30,140
app and we're gonna make a change to the

00:01:27,990 --> 00:01:32,670
workflow so I'm gonna open up my

00:01:30,140 --> 00:01:35,189
workflow file and what I want to do is

00:01:32,670 --> 00:01:37,650
add a linting step to the workflow so

00:01:35,189 --> 00:01:39,450
I'm gonna type in NPM lint normally I'd

00:01:37,650 --> 00:01:41,430
have to commit and push this up to

00:01:39,450 --> 00:01:42,390
github to test the action but now I'm

00:01:41,430 --> 00:01:44,610
gonna just run an act

00:01:42,390 --> 00:01:48,630
I run act locally and you see that act

00:01:44,610 --> 00:01:51,240
starts running each step of the workflow

00:01:48,630 --> 00:01:53,009
in its own docker container I see that

00:01:51,240 --> 00:01:55,079
my source code was checked out node was

00:01:53,009 --> 00:01:57,719
set up right now it's running npm

00:01:55,079 --> 00:02:00,270
install for me in a container locally i

00:01:57,719 --> 00:02:02,880
get feedback npm test runs and then oh

00:02:00,270 --> 00:02:05,040
look at this NPM lint fails well that's

00:02:02,880 --> 00:02:07,229
because npm linson on a command right so

00:02:05,040 --> 00:02:08,970
i need to edit edit that again

00:02:07,229 --> 00:02:12,000
let's change that and say the NPM lint

00:02:08,970 --> 00:02:14,040
let's do NPM Ron Lind

00:02:12,000 --> 00:02:16,770
I tried that again save that go ahead

00:02:14,040 --> 00:02:18,989
and run act again we go ahead and run

00:02:16,770 --> 00:02:21,450
our workflow locally does the same

00:02:18,989 --> 00:02:25,860
things check out now we're doing the

00:02:21,450 --> 00:02:26,730
setup of nodejs npm install' is running

00:02:25,860 --> 00:02:29,790
tests

00:02:26,730 --> 00:02:31,739
and now we've got NPM lint yes lint

00:02:29,790 --> 00:02:33,239
gives us back our feedback boom now

00:02:31,739 --> 00:02:35,970
we're good to go we can commit and push

00:02:33,239 --> 00:02:38,819
that up and we're good to go so check

00:02:35,970 --> 00:02:41,940
this tool out neck dos act install it

00:02:38,819 --> 00:02:44,280
use it to help build your workflows

00:02:41,940 --> 00:02:47,269
faster and if you like it give it a

00:02:44,280 --> 00:02:47,269

YouTube URL: https://www.youtube.com/watch?v=jzdHKwGVjvk


