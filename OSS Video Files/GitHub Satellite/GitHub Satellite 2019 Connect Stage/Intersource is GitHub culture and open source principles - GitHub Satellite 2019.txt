Title: Intersource is GitHub culture and open source principles - GitHub Satellite 2019
Publication date: 2019-05-28
Playlist: GitHub Satellite 2019 Connect Stage
Description: 
	Presented by Thomas Aiden Curran, Co-Founder and Co-CTO, Ory sh

About GitHub Satellite 2019
A community connected by code

Explore our interconnected communityâ€”and how collaboration turns ideas into innovations.

Join us in November at San Francisco's Palace of Fine Arts for GitHub Universe - https://githubuniverse.com/
Captions: 
	00:00:01,230 --> 00:00:04,910
[Music]

00:00:07,650 --> 00:00:13,240
[Music]

00:00:11,459 --> 00:00:17,590
so good morning

00:00:13,240 --> 00:00:18,310
I'm Thomas Curran welcome to this

00:00:17,590 --> 00:00:22,750
session

00:00:18,310 --> 00:00:26,079
it's about inter source and just has a

00:00:22,750 --> 00:00:30,520
background perhaps for you I am a

00:00:26,079 --> 00:00:33,670
co-founder and co-ceo of Ori Ori is a

00:00:30,520 --> 00:00:38,950
very popular open-source project on

00:00:33,670 --> 00:00:42,970
github please take a look at it it's the

00:00:38,950 --> 00:00:46,060
topics are very much in a security realm

00:00:42,970 --> 00:00:49,329
open authentication open ID connect ap

00:00:46,060 --> 00:00:51,700
security and of course we love your

00:00:49,329 --> 00:00:55,960
support what I want to talk about today

00:00:51,700 --> 00:00:59,220
is actually how you build inside your

00:00:55,960 --> 00:01:04,110
enterprise or inside your company a

00:00:59,220 --> 00:01:08,140
community of developers that work on

00:01:04,110 --> 00:01:12,040
github and collaborate on github more or

00:01:08,140 --> 00:01:17,100
less like an open source project would

00:01:12,040 --> 00:01:19,780
work so I have have done some different

00:01:17,100 --> 00:01:22,120
projects in the past and had different

00:01:19,780 --> 00:01:25,780
roles and larger companies and I'm going

00:01:22,120 --> 00:01:29,080
to use that experience to draw on and as

00:01:25,780 --> 00:01:32,619
I go through the next 10 slides and help

00:01:29,080 --> 00:01:35,110
you understand some of the opportunities

00:01:32,619 --> 00:01:38,110
you have to use github in your company

00:01:35,110 --> 00:01:41,020
and not only the tools and technologies

00:01:38,110 --> 00:01:42,909
but also some of the methodologies so

00:01:41,020 --> 00:01:45,310
for the managers out there I mean one

00:01:42,909 --> 00:01:47,670
thing that's often asked besides the

00:01:45,310 --> 00:01:50,439
price of any new software platform

00:01:47,670 --> 00:01:54,880
infrastructure is you know why do you

00:01:50,439 --> 00:01:56,549
need this and most companies today are

00:01:54,880 --> 00:01:59,080
using some kind of source code control

00:01:56,549 --> 00:02:01,600
some kind of configuration management

00:01:59,080 --> 00:02:04,570
some kind of deployment pipeline all

00:02:01,600 --> 00:02:06,790
these things are absolutely typical so

00:02:04,570 --> 00:02:11,560
the question of why github is a very

00:02:06,790 --> 00:02:16,780
valid question and I met a post last

00:02:11,560 --> 00:02:19,060
year we had a similar talk at cbut I'm

00:02:16,780 --> 00:02:21,190
very happy by the way that I was one of

00:02:19,060 --> 00:02:22,060
the last speakers in the last seebut

00:02:21,190 --> 00:02:26,230
ever

00:02:22,060 --> 00:02:27,970
so that was good one of the things

00:02:26,230 --> 00:02:30,520
github does besides solve all these

00:02:27,970 --> 00:02:32,110
software issues is it lets you find

00:02:30,520 --> 00:02:35,380
things in your company and you know this

00:02:32,110 --> 00:02:38,410
is not a very funny problem most

00:02:35,380 --> 00:02:40,450
organizations especially you know they

00:02:38,410 --> 00:02:43,420
have email systems they have databases

00:02:40,450 --> 00:02:47,260
etc but for source code is extremely

00:02:43,420 --> 00:02:49,930
difficult to find and maintain across an

00:02:47,260 --> 00:02:52,560
organization a lot of the intellectual

00:02:49,930 --> 00:02:55,570
property and just any property that

00:02:52,560 --> 00:02:57,459
software developers have done combined

00:02:55,570 --> 00:02:59,410
with the fact that most companies today

00:02:57,459 --> 00:03:02,200
don't do that themselves I mean they do

00:02:59,410 --> 00:03:04,060
a lot of stuff outsource and so bringing

00:03:02,200 --> 00:03:07,269
that into the company and being able to

00:03:04,060 --> 00:03:10,209
have one very easy thing being able to

00:03:07,269 --> 00:03:12,989
search across the different products and

00:03:10,209 --> 00:03:16,290
projects and source code in order to

00:03:12,989 --> 00:03:19,480
understand risks security issues

00:03:16,290 --> 00:03:21,670
opportunities to reuse software etc

00:03:19,480 --> 00:03:24,280
these things are very important another

00:03:21,670 --> 00:03:26,170
thing that you obviously need and don't

00:03:24,280 --> 00:03:29,980
often have especially if you're in a

00:03:26,170 --> 00:03:33,250
managerial role is insight into who does

00:03:29,980 --> 00:03:34,750
what in the company now again this is no

00:03:33,250 --> 00:03:37,239
joke I mean if you're managing a

00:03:34,750 --> 00:03:39,640
thousand or 2,000 or more developers

00:03:37,239 --> 00:03:42,100
it's very important to know what people

00:03:39,640 --> 00:03:46,260
are doing and sort of getting companies

00:03:42,100 --> 00:03:48,730
to real-time is is a big challenge so

00:03:46,260 --> 00:03:51,459
being able to understand what people do

00:03:48,730 --> 00:03:53,799
and then spotting and developing and

00:03:51,459 --> 00:03:57,579
helping talent much the way maintain

00:03:53,799 --> 00:03:59,739
errs do in open source projects is is a

00:03:57,579 --> 00:04:02,110
very good opportunity and of course the

00:03:59,739 --> 00:04:03,900
last thing today you could argue

00:04:02,110 --> 00:04:06,489
[Music]

00:04:03,900 --> 00:04:09,340
software being a very imperfect world

00:04:06,489 --> 00:04:12,070
and science to some extent speed is very

00:04:09,340 --> 00:04:14,440
important but also the ability to be

00:04:12,070 --> 00:04:18,729
resilient and change things and move

00:04:14,440 --> 00:04:20,979
fast is is a goal for many operations

00:04:18,729 --> 00:04:23,280
that are software companies and of

00:04:20,979 --> 00:04:27,039
course many companies banks insurance

00:04:23,280 --> 00:04:29,470
production of cars etc these companies

00:04:27,039 --> 00:04:32,289
in the past have not moved that fast

00:04:29,470 --> 00:04:34,220
some of the reasons are their customers

00:04:32,289 --> 00:04:36,980
don't want that or you know they

00:04:34,220 --> 00:04:39,080
many reasons but in the end and today

00:04:36,980 --> 00:04:42,770
especially there's no reason for any

00:04:39,080 --> 00:04:47,260
company to be slow anymore especially if

00:04:42,770 --> 00:04:49,880
you have github supporting all of the

00:04:47,260 --> 00:04:55,370
DevOps infrastructure that we'll need

00:04:49,880 --> 00:04:57,920
and we'll talk about that so the first

00:04:55,370 --> 00:05:01,670
thing I would say insight and learning

00:04:57,920 --> 00:05:04,220
from open source is how do you build

00:05:01,670 --> 00:05:06,790
software products now again many

00:05:04,220 --> 00:05:11,470
organizations are structured around

00:05:06,790 --> 00:05:13,370
business lines different sort of IT

00:05:11,470 --> 00:05:15,140
conventions you have a database

00:05:13,370 --> 00:05:18,350
Department you have a security

00:05:15,140 --> 00:05:21,200
department you might have QA which is

00:05:18,350 --> 00:05:23,030
separate from those as well and one of

00:05:21,200 --> 00:05:25,220
the things and the learnings I think we

00:05:23,030 --> 00:05:27,830
can draw on from the last 30 years of

00:05:25,220 --> 00:05:30,560
open source is that that doesn't really

00:05:27,830 --> 00:05:35,780
work you need an integrated product team

00:05:30,560 --> 00:05:37,640
with the skill sets that are that are

00:05:35,780 --> 00:05:39,560
sufficient first of all to build the

00:05:37,640 --> 00:05:41,510
software that's not only coding that's

00:05:39,560 --> 00:05:44,330
also we'll get into that a lot of

00:05:41,510 --> 00:05:48,290
testing QA and of course the operational

00:05:44,330 --> 00:05:51,919
part of it as well and those product

00:05:48,290 --> 00:05:57,260
teams need to be managed as if it's

00:05:51,919 --> 00:05:59,720
really a multi-dimensional what's the

00:05:57,260 --> 00:06:02,660
right word sort of different skill sets

00:05:59,720 --> 00:06:05,720
put into one organization so that the

00:06:02,660 --> 00:06:07,910
team can operate and again this is not

00:06:05,720 --> 00:06:11,060
just about technology this is more about

00:06:07,910 --> 00:06:12,979
how do you organize your teams to your

00:06:11,060 --> 00:06:15,380
org how do you organize your developers

00:06:12,979 --> 00:06:18,110
to take advantage of the technology

00:06:15,380 --> 00:06:19,340
platform that github brings to bear now

00:06:18,110 --> 00:06:22,580
you might have seen it today this

00:06:19,340 --> 00:06:24,470
morning etc a lot of the even the new

00:06:22,580 --> 00:06:26,540
things that github is doing is really

00:06:24,470 --> 00:06:29,390
focused on bringing the power to these

00:06:26,540 --> 00:06:33,710
teams and operational capabilities that

00:06:29,390 --> 00:06:35,830
they have to deliver software another

00:06:33,710 --> 00:06:38,570
thing that's again just based on my

00:06:35,830 --> 00:06:42,680
observation and work with some large

00:06:38,570 --> 00:06:43,830
organizations is that often even if they

00:06:42,680 --> 00:06:46,680
have

00:06:43,830 --> 00:06:50,700
a team that or people that are good at

00:06:46,680 --> 00:06:53,250
things they are often not organized in a

00:06:50,700 --> 00:06:56,580
way that lets them bring that capability

00:06:53,250 --> 00:06:58,410
to bear on any specific product by the

00:06:56,580 --> 00:07:01,230
way even if they're not working on that

00:06:58,410 --> 00:07:06,810
product themselves so community of

00:07:01,230 --> 00:07:11,670
practice is is is a is a methodology and

00:07:06,810 --> 00:07:14,100
approach to building competencies inside

00:07:11,670 --> 00:07:18,260
an organization in a way that's

00:07:14,100 --> 00:07:21,330
orthogonal to any other hierarchical

00:07:18,260 --> 00:07:24,410
structure that you may have why is this

00:07:21,330 --> 00:07:27,300
important again today we have a lot of

00:07:24,410 --> 00:07:30,510
new technologies that affect the way you

00:07:27,300 --> 00:07:33,300
build and deliver software just give you

00:07:30,510 --> 00:07:36,210
an example docker might be a good one or

00:07:33,300 --> 00:07:38,400
cloud might be another one and having

00:07:36,210 --> 00:07:40,620
people that you know like to go home and

00:07:38,400 --> 00:07:42,690
look at these things and do things when

00:07:40,620 --> 00:07:45,360
they come back to the office why not

00:07:42,690 --> 00:07:47,580
organize them into community support

00:07:45,360 --> 00:07:50,180
those communities give them some cookies

00:07:47,580 --> 00:07:52,860
or some coffee and a place to do stuff

00:07:50,180 --> 00:07:55,260
it's not that hard but I think the main

00:07:52,860 --> 00:07:56,580
thing is that especially on github and

00:07:55,260 --> 00:07:59,400
especially the way you can build

00:07:56,580 --> 00:08:02,190
communities using give up these practice

00:07:59,400 --> 00:08:06,990
communities helped really drive a lot of

00:08:02,190 --> 00:08:11,780
the new inventions and the way you

00:08:06,990 --> 00:08:15,260
experiment with deployment systems so

00:08:11,780 --> 00:08:19,680
they look into that next thing it was

00:08:15,260 --> 00:08:22,530
again observation let's face it a lot of

00:08:19,680 --> 00:08:26,970
so-called IT organizations or big

00:08:22,530 --> 00:08:31,440
enterprise production departments are

00:08:26,970 --> 00:08:34,200
really managing projects oftentimes you

00:08:31,440 --> 00:08:38,520
find that people are not that familiar

00:08:34,200 --> 00:08:40,740
due to other job responsibilities with

00:08:38,520 --> 00:08:43,770
the software stack that developers are

00:08:40,740 --> 00:08:49,260
using github gives you a very unique way

00:08:43,770 --> 00:08:51,720
of being able to interact with with the

00:08:49,260 --> 00:08:53,340
technologies with the software you can

00:08:51,720 --> 00:08:57,020
set things up it can be highly automated

00:08:53,340 --> 00:09:00,070
we'll get into that but the good news is

00:08:57,020 --> 00:09:01,760
Hubb is a platform that also makes

00:09:00,070 --> 00:09:05,600
learning-by-doing

00:09:01,760 --> 00:09:08,090
a very easy task to get into especially

00:09:05,600 --> 00:09:11,870
for people that are not day-to-day

00:09:08,090 --> 00:09:15,830
involved in in a project an open-source

00:09:11,870 --> 00:09:18,770
has really made itself evolved almost

00:09:15,830 --> 00:09:20,420
like an animal evolved to be you know if

00:09:18,770 --> 00:09:22,370
you want people to do stuff for your

00:09:20,420 --> 00:09:26,270
project it has to be easy to get into

00:09:22,370 --> 00:09:29,330
you have to for instance in Ori we have

00:09:26,270 --> 00:09:31,550
a five minute demo and we really time it

00:09:29,330 --> 00:09:33,770
so you can go there you can look at

00:09:31,550 --> 00:09:36,410
everything you have all the tools we use

00:09:33,770 --> 00:09:38,390
docker to deploy it similar things

00:09:36,410 --> 00:09:42,230
inside companies even with all the

00:09:38,390 --> 00:09:45,380
security firewalls etc you have new

00:09:42,230 --> 00:09:48,920
opportunities to do do things and

00:09:45,380 --> 00:09:51,410
learning by doing I think is a very big

00:09:48,920 --> 00:09:57,680
benefit of having for instance github

00:09:51,410 --> 00:10:00,140
Enterprise deployed the next thing you

00:09:57,680 --> 00:10:03,920
want to be very cautious about I think

00:10:00,140 --> 00:10:06,350
is collecting data but you want to also

00:10:03,920 --> 00:10:10,910
be very ambitious about the amount of

00:10:06,350 --> 00:10:15,500
information you can you can collect over

00:10:10,910 --> 00:10:18,410
time because one you help teams by

00:10:15,500 --> 00:10:21,020
getting that information to github gives

00:10:18,410 --> 00:10:26,120
you a lot of things that you would not

00:10:21,020 --> 00:10:29,180
otherwise have as an actor in any kind

00:10:26,120 --> 00:10:31,130
of organization so one of the nice

00:10:29,180 --> 00:10:33,500
things about github repositories as an

00:10:31,130 --> 00:10:36,020
example is you can see the build health

00:10:33,500 --> 00:10:39,470
of any repository you can also collect

00:10:36,020 --> 00:10:42,230
that data and make that publishable to

00:10:39,470 --> 00:10:47,120
other people that might be involved in

00:10:42,230 --> 00:10:51,680
the process now a lot of companies do

00:10:47,120 --> 00:10:55,430
this on a very sort of siloed way and I

00:10:51,680 --> 00:10:57,890
think the advantage of a tool like

00:10:55,430 --> 00:11:00,470
github is you you're able to really look

00:10:57,890 --> 00:11:04,800
at this data in a consolidated view

00:11:00,470 --> 00:11:10,380
across repositories now

00:11:04,800 --> 00:11:12,540
when when companies deploy github in the

00:11:10,380 --> 00:11:14,220
beginning it's very seldom again as I

00:11:12,540 --> 00:11:17,970
mentioned you know you're not starting

00:11:14,220 --> 00:11:23,130
from scratch you have subversion you

00:11:17,970 --> 00:11:24,959
have bitbucket you might have PVCs some

00:11:23,130 --> 00:11:26,850
type of clearcase some type of

00:11:24,959 --> 00:11:30,750
environment that you would have been

00:11:26,850 --> 00:11:33,240
using prior to deploying github and all

00:11:30,750 --> 00:11:36,450
of those environments also come with

00:11:33,240 --> 00:11:40,740
their own sort of data set and the way

00:11:36,450 --> 00:11:42,660
they manage configuration so creating

00:11:40,740 --> 00:11:45,240
something that's consolidated and github

00:11:42,660 --> 00:11:49,110
will take a little bit of time and

00:11:45,240 --> 00:11:52,230
energy and let me just explain some of

00:11:49,110 --> 00:11:54,300
the things that I've seen companies do

00:11:52,230 --> 00:11:57,779
one thing that again when you're

00:11:54,300 --> 00:12:00,570
deploying new platforms you have often

00:11:57,779 --> 00:12:03,570
the opportunity also to insert new

00:12:00,570 --> 00:12:07,620
processes and new ways of working github

00:12:03,570 --> 00:12:11,010
as an example keeps the whole idea of

00:12:07,620 --> 00:12:14,010
working in parallel that's manifested in

00:12:11,010 --> 00:12:17,100
github is designed to let teams work

00:12:14,010 --> 00:12:20,430
very fast but also keep sort of in sync

00:12:17,100 --> 00:12:24,829
with branches etc so pull requests

00:12:20,430 --> 00:12:28,110
become a very new and important dynamic

00:12:24,829 --> 00:12:30,899
for companies and especially teams in

00:12:28,110 --> 00:12:34,079
order to augment their day-to-day work

00:12:30,899 --> 00:12:37,470
without getting left behind so how do

00:12:34,079 --> 00:12:39,959
was it you know before github it was you

00:12:37,470 --> 00:12:42,000
checked out some code you did some stuff

00:12:39,959 --> 00:12:43,920
you were a little bit nervous it didn't

00:12:42,000 --> 00:12:45,870
build so you didn't really want to check

00:12:43,920 --> 00:12:50,430
it back in so you went for a week or

00:12:45,870 --> 00:12:53,550
maybe more of basically frozen code in a

00:12:50,430 --> 00:12:55,860
repository and github and of course for

00:12:53,550 --> 00:12:58,709
Linux was really disastrous so that's

00:12:55,860 --> 00:13:00,930
why I get became a tool that lets you a

00:12:58,709 --> 00:13:03,480
lot of people work in parallel ways

00:13:00,930 --> 00:13:05,399
without needing to create what we would

00:13:03,480 --> 00:13:10,170
call long pull requests long

00:13:05,399 --> 00:13:12,000
transactions so instead one of the for

00:13:10,170 --> 00:13:12,560
instance data points you might want to

00:13:12,000 --> 00:13:15,800
look at

00:13:12,560 --> 00:13:18,529
is the velocity of pull requests across

00:13:15,800 --> 00:13:21,200
all repositories this gives you also a

00:13:18,529 --> 00:13:23,000
sense of other things that you might

00:13:21,200 --> 00:13:27,200
want to look at and try to help teams

00:13:23,000 --> 00:13:30,950
with as an example you find people that

00:13:27,200 --> 00:13:34,210
move from subversion to github in

00:13:30,950 --> 00:13:38,270
companies they used many different

00:13:34,210 --> 00:13:42,020
deployment systems and they might have

00:13:38,270 --> 00:13:44,270
you know 10 20 30 repositories because

00:13:42,020 --> 00:13:47,600
of that deployment infrastructure that

00:13:44,270 --> 00:13:50,450
they're using to operate their their

00:13:47,600 --> 00:13:53,150
product and one of the things that I

00:13:50,450 --> 00:13:55,580
think big companies that are mostly

00:13:53,150 --> 00:13:59,779
software companies Facebook as an

00:13:55,580 --> 00:14:02,960
example they really learned how to build

00:13:59,779 --> 00:14:05,779
mono repositories so you can consolidate

00:14:02,960 --> 00:14:08,690
all of that code base into one place and

00:14:05,779 --> 00:14:12,800
then basically data fie that whole

00:14:08,690 --> 00:14:14,839
repository and give the entire flavor of

00:14:12,800 --> 00:14:17,089
what's going on to people that are

00:14:14,839 --> 00:14:20,330
potentially affected they could be s

00:14:17,089 --> 00:14:22,940
Ari's they could be DevOps they could be

00:14:20,330 --> 00:14:24,920
just programmers or managers etc but you

00:14:22,940 --> 00:14:27,410
want to be able to give the entire

00:14:24,920 --> 00:14:30,170
dynamic of a repository and an

00:14:27,410 --> 00:14:33,440
infrastructure to everyone affected by

00:14:30,170 --> 00:14:35,390
it and so github has the get-up

00:14:33,440 --> 00:14:38,960
Enterprise or github the product gives

00:14:35,390 --> 00:14:42,320
you some opportunities to collect and

00:14:38,960 --> 00:14:47,030
analyze data around now now the other

00:14:42,320 --> 00:14:49,280
good thing about the github system is

00:14:47,030 --> 00:14:52,339
that there are many other obviously open

00:14:49,280 --> 00:14:54,800
source products but even any products

00:14:52,339 --> 00:14:58,030
that are hooked in to github and give

00:14:54,800 --> 00:15:01,430
you additional give you additional

00:14:58,030 --> 00:15:04,250
information and data about what's going

00:15:01,430 --> 00:15:07,880
on in the product development so as an

00:15:04,250 --> 00:15:11,000
example if you're using coveralls for Co

00:15:07,880 --> 00:15:13,279
coverage or if you're using Cypress for

00:15:11,000 --> 00:15:15,320
integrated testing you have quite a lot

00:15:13,279 --> 00:15:19,300
of data points that you can then bring

00:15:15,320 --> 00:15:21,890
back into some system things like

00:15:19,300 --> 00:15:24,620
Prometheus then give you a bigger

00:15:21,890 --> 00:15:26,029
infrastructure graph on ax for operating

00:15:24,620 --> 00:15:30,860
on that data all those

00:15:26,029 --> 00:15:34,490
are built using github and have a very

00:15:30,860 --> 00:15:40,550
good interface with the rest of the

00:15:34,490 --> 00:15:43,129
github API s and services that's really

00:15:40,550 --> 00:15:45,470
what you need to do in order to start

00:15:43,129 --> 00:15:47,839
automating things so automation of

00:15:45,470 --> 00:15:50,000
course depends on data if you want to

00:15:47,839 --> 00:15:54,410
you know a lot of companies today have

00:15:50,000 --> 00:15:58,750
elaborate gardener group based reports

00:15:54,410 --> 00:16:03,769
on RP a robotic process automation and

00:15:58,750 --> 00:16:06,410
all this stuff they want to do and you

00:16:03,769 --> 00:16:09,050
look at it and today I mean again going

00:16:06,410 --> 00:16:11,750
into some companies it just seems like

00:16:09,050 --> 00:16:13,490
well isn't that what you're doing isn't

00:16:11,750 --> 00:16:16,069
that software development I mean you're

00:16:13,490 --> 00:16:19,310
taking this process you put some stuff

00:16:16,069 --> 00:16:21,529
into Excel you fill out some forms you

00:16:19,310 --> 00:16:24,110
put it on a website and then you check

00:16:21,529 --> 00:16:26,240
it and see if everything's okay and you

00:16:24,110 --> 00:16:28,639
need a scripting tool to do that well

00:16:26,240 --> 00:16:31,129
the problem is again but automating

00:16:28,639 --> 00:16:33,740
processes when they get disjunct from

00:16:31,129 --> 00:16:36,740
what else is going on in the business

00:16:33,740 --> 00:16:38,839
it becomes by itself a future time bomb

00:16:36,740 --> 00:16:41,809
because that becomes something that's

00:16:38,839 --> 00:16:43,879
hard to maintain etc so one thing about

00:16:41,809 --> 00:16:46,970
automating processes and one things

00:16:43,879 --> 00:16:48,889
important about getting github into your

00:16:46,970 --> 00:16:52,279
enterprise is that you have to go all-in

00:16:48,889 --> 00:16:54,439
and believe me I'm very radical about

00:16:52,279 --> 00:16:56,870
that everything goes in github or else

00:16:54,439 --> 00:16:59,149
you don't do it the reason for that is

00:16:56,870 --> 00:17:03,139
then you have visibility again search

00:16:59,149 --> 00:17:06,980
talent etc but you can also augment the

00:17:03,139 --> 00:17:09,159
data with new processes new scripts and

00:17:06,980 --> 00:17:12,250
look at all the stuff that's coming out

00:17:09,159 --> 00:17:15,140
console terraform all of the deployment

00:17:12,250 --> 00:17:17,240
technologies imagine now applying them

00:17:15,140 --> 00:17:22,209
in your company and being able to

00:17:17,240 --> 00:17:25,669
automate many things that people do

00:17:22,209 --> 00:17:28,090
compliance there are people in the

00:17:25,669 --> 00:17:32,059
financial industry in banking insurance

00:17:28,090 --> 00:17:34,370
food production etc you know step by

00:17:32,059 --> 00:17:36,450
step by step by step they have to check

00:17:34,370 --> 00:17:38,789
things and

00:17:36,450 --> 00:17:42,210
it's not just see to your pants that's

00:17:38,789 --> 00:17:45,200
good we all benefit from that but you

00:17:42,210 --> 00:17:48,509
need an infrastructure that helps you

00:17:45,200 --> 00:17:52,019
implement that compliance over time and

00:17:48,509 --> 00:17:54,659
github can also do that why why it

00:17:52,019 --> 00:17:57,419
github creates audit trails github lets

00:17:54,659 --> 00:18:00,960
you go back and forth almost in along a

00:17:57,419 --> 00:18:03,840
timeline github produces a interface to

00:18:00,960 --> 00:18:07,409
testing tools github also produces the

00:18:03,840 --> 00:18:10,739
interface to Jenkins or circle CI or

00:18:07,409 --> 00:18:13,649
Travis having all of those things

00:18:10,739 --> 00:18:16,200
integrated gives you a much better data

00:18:13,649 --> 00:18:18,749
set about compliance and you would get

00:18:16,200 --> 00:18:20,669
by asking you know two guys in the

00:18:18,749 --> 00:18:23,489
compliance department to take a look at

00:18:20,669 --> 00:18:25,289
this repository so believe me automation

00:18:23,489 --> 00:18:27,809
of compliance is a very big opportunity

00:18:25,289 --> 00:18:30,779
that companies have today when they

00:18:27,809 --> 00:18:33,289
deploy github Enterprise and by the way

00:18:30,779 --> 00:18:35,460
we're not talking in this slide about

00:18:33,289 --> 00:18:38,149
deployment but you want to basically

00:18:35,460 --> 00:18:42,059
automate almost everything possible and

00:18:38,149 --> 00:18:44,340
think about open source projects yeah

00:18:42,059 --> 00:18:47,129
you know in order to really get people

00:18:44,340 --> 00:18:49,409
excited about any open source product

00:18:47,129 --> 00:18:51,690
they need to be able to see at work that

00:18:49,409 --> 00:18:54,570
it needs to be really the automation

00:18:51,690 --> 00:18:56,309
needs to be in place in order for the

00:18:54,570 --> 00:18:58,830
audience to have immediate feedback

00:18:56,309 --> 00:19:00,779
about their contributions and I think

00:18:58,830 --> 00:19:03,629
companies more and more are coming to

00:19:00,779 --> 00:19:06,179
that point where even developers and and

00:19:03,629 --> 00:19:08,279
other parties again integrated teams

00:19:06,179 --> 00:19:10,109
product teams you know people for

00:19:08,279 --> 00:19:12,619
marketing also want to see stuff work

00:19:10,109 --> 00:19:17,249
and I think that's important for

00:19:12,619 --> 00:19:19,710
integrating and working with the github

00:19:17,249 --> 00:19:23,249
enterprise infrastructure but also just

00:19:19,710 --> 00:19:25,859
getting the community of people that you

00:19:23,249 --> 00:19:28,559
need involved in more and more products

00:19:25,859 --> 00:19:30,929
a lot of companies talked about this

00:19:28,559 --> 00:19:32,909
today you know they want to interface

00:19:30,929 --> 00:19:35,999
with customers they want to understand

00:19:32,909 --> 00:19:38,009
customers they but really isn't that

00:19:35,999 --> 00:19:40,710
part of a bigger issue which is they

00:19:38,009 --> 00:19:43,259
don't really understand the products

00:19:40,710 --> 00:19:44,759
they produce and they can't because they

00:19:43,259 --> 00:19:46,470
don't have the visibility they don't

00:19:44,759 --> 00:19:50,160
have the contact they don't know where

00:19:46,470 --> 00:19:52,380
to go to ask people even a website

00:19:50,160 --> 00:19:55,320
a lot of times today even in even in

00:19:52,380 --> 00:19:57,240
modern companies it's very seldom that

00:19:55,320 --> 00:19:59,460
you can just call up someone say how

00:19:57,240 --> 00:20:01,590
does this work I'm on a chat system I

00:19:59,460 --> 00:20:04,770
have a call from a customer so bringing

00:20:01,590 --> 00:20:07,260
the community aspect of github again I

00:20:04,770 --> 00:20:08,760
don't know I saw 36 million today if

00:20:07,260 --> 00:20:12,240
that's right or wrong let's say it is

00:20:08,760 --> 00:20:14,460
right so lots of people are in a

00:20:12,240 --> 00:20:16,800
community across the globe that are

00:20:14,460 --> 00:20:19,830
working on one infrastructure think of

00:20:16,800 --> 00:20:23,390
getting everyone in your development in

00:20:19,830 --> 00:20:26,700
github on an enterprise so first of all

00:20:23,390 --> 00:20:29,040
this sounds strange but it's not strange

00:20:26,700 --> 00:20:31,110
if you're in a company you know you can

00:20:29,040 --> 00:20:33,360
communicate with someone that you didn't

00:20:31,110 --> 00:20:35,280
know that works in another department

00:20:33,360 --> 00:20:37,950
you don't need to send an email to his

00:20:35,280 --> 00:20:40,850
boss and ask him if it's ok to talk to

00:20:37,950 --> 00:20:43,050
him you can do everything in one github

00:20:40,850 --> 00:20:45,000
community and I think that's super

00:20:43,050 --> 00:20:46,740
important the other thing is again when

00:20:45,000 --> 00:20:51,780
you're automating and when you're using

00:20:46,740 --> 00:20:55,380
DevOps many tools you have the whole

00:20:51,780 --> 00:20:58,170
repository build up and tool integration

00:20:55,380 --> 00:21:01,260
that you can do in one place which makes

00:20:58,170 --> 00:21:01,980
it much easier for companies to see what

00:21:01,260 --> 00:21:04,350
they're doing

00:21:01,980 --> 00:21:06,870
across the board but it also makes it

00:21:04,350 --> 00:21:11,010
easier for maintainer ''s inside your

00:21:06,870 --> 00:21:14,040
company to get the automation effects

00:21:11,010 --> 00:21:16,950
that they would otherwise be expected to

00:21:14,040 --> 00:21:23,850
have from implementing a system like

00:21:16,950 --> 00:21:28,590
github Enterprise again toolchain look

00:21:23,850 --> 00:21:32,910
we're in a probably I guess one of the

00:21:28,590 --> 00:21:35,150
best errors I can imagine in software

00:21:32,910 --> 00:21:38,190
I've been doing this for 30 years or so

00:21:35,150 --> 00:21:41,370
there's so many new tools there's so

00:21:38,190 --> 00:21:43,680
many people building stuff individuals

00:21:41,370 --> 00:21:47,250
open source teams small software

00:21:43,680 --> 00:21:49,410
companies every day more or less you get

00:21:47,250 --> 00:21:52,320
something new that comes out that you

00:21:49,410 --> 00:21:54,160
want to look at and try out with your

00:21:52,320 --> 00:21:57,250
software

00:21:54,160 --> 00:21:59,350
the github community the public github

00:21:57,250 --> 00:22:01,630
community I think is very ambitious

00:21:59,350 --> 00:22:04,300
about embracing things and testing

00:22:01,630 --> 00:22:06,220
things and by the way if it's not good

00:22:04,300 --> 00:22:08,500
you get your teeth kicked in you know

00:22:06,220 --> 00:22:10,630
that's it peer review is extremely

00:22:08,500 --> 00:22:12,310
important and it should be happening

00:22:10,630 --> 00:22:15,930
inside your company as well you should

00:22:12,310 --> 00:22:17,740
be able to without having a lot of

00:22:15,930 --> 00:22:19,810
questions asked to have an

00:22:17,740 --> 00:22:22,090
infrastructure where you can make a

00:22:19,810 --> 00:22:24,730
contribution as a software developer

00:22:22,090 --> 00:22:28,300
you're honestly one of the most

00:22:24,730 --> 00:22:31,270
important pieces of employment that the

00:22:28,300 --> 00:22:33,280
company probably has today and getting

00:22:31,270 --> 00:22:35,320
you and keeping you and making you happy

00:22:33,280 --> 00:22:37,690
is extremely important for every

00:22:35,320 --> 00:22:40,990
business because software really is

00:22:37,690 --> 00:22:43,570
eating up the world so having this

00:22:40,990 --> 00:22:46,480
capability to get new things in new

00:22:43,570 --> 00:22:49,120
inventions be able to try them put them

00:22:46,480 --> 00:22:51,700
in a github tool train or in a DevOps

00:22:49,120 --> 00:22:54,040
tool chain and having that capability to

00:22:51,700 --> 00:22:56,770
interact with the system gives you a

00:22:54,040 --> 00:23:00,400
whole new way of working and I think

00:22:56,770 --> 00:23:02,470
we'll see in this era of software that

00:23:00,400 --> 00:23:05,860
that's really a good thing for business

00:23:02,470 --> 00:23:08,500
and by the way you have a proving ground

00:23:05,860 --> 00:23:11,170
of now 36 million people that have

00:23:08,500 --> 00:23:16,690
tested this and see that it's actually

00:23:11,170 --> 00:23:18,370
ok to get the big benefits though it a

00:23:16,690 --> 00:23:21,300
big bang out of a lot of these things

00:23:18,370 --> 00:23:25,930
you need to be able to get to real time

00:23:21,300 --> 00:23:28,120
from a business standpoint what does

00:23:25,930 --> 00:23:32,080
that mean that means you need to be able

00:23:28,120 --> 00:23:35,710
to implement communication

00:23:32,080 --> 00:23:39,070
infrastructures that don't work on email

00:23:35,710 --> 00:23:41,860
because email kills almost any good idea

00:23:39,070 --> 00:23:44,440
it's bad for software development it's

00:23:41,860 --> 00:23:48,060
bad for software developers it's also

00:23:44,440 --> 00:23:51,130
cumbersome it tends to reinforce

00:23:48,060 --> 00:23:53,440
unnecessary hierarchies in business and

00:23:51,130 --> 00:23:55,780
you know most of the time it's just a

00:23:53,440 --> 00:23:57,910
pain in the ass to read so you have all

00:23:55,780 --> 00:24:01,660
this email and you want to do your code

00:23:57,910 --> 00:24:04,330
and instead you have stuff to do that's

00:24:01,660 --> 00:24:06,670
disjunct that's out of sync that was

00:24:04,330 --> 00:24:07,830
yesterday's problem and that's called

00:24:06,670 --> 00:24:10,420
email

00:24:07,830 --> 00:24:13,420
in order to get your developers and this

00:24:10,420 --> 00:24:15,070
is very important part of of integrating

00:24:13,420 --> 00:24:18,100
with github is to get the information

00:24:15,070 --> 00:24:21,700
that github produces into your company

00:24:18,100 --> 00:24:24,820
in some way a lot of people probably use

00:24:21,700 --> 00:24:26,559
slack you know I've used and implemented

00:24:24,820 --> 00:24:33,549
slack in numerous companies

00:24:26,559 --> 00:24:36,700
it tends to be it tend it tends to be a

00:24:33,549 --> 00:24:38,530
very big moment of truth for businesses

00:24:36,700 --> 00:24:40,990
because they thought they knew what they

00:24:38,530 --> 00:24:42,970
were doing and then implemented system

00:24:40,990 --> 00:24:44,590
like slack people start building

00:24:42,970 --> 00:24:46,960
communities because they're allowed to

00:24:44,590 --> 00:24:49,480
do that they get information that they

00:24:46,960 --> 00:24:52,380
otherwise wouldn't have had and they can

00:24:49,480 --> 00:24:55,059
do it all very quickly and they can

00:24:52,380 --> 00:24:57,370
operate on that information in a way

00:24:55,059 --> 00:25:00,610
that's also archived and and

00:24:57,370 --> 00:25:04,960
synchronized so first of all you can do

00:25:00,610 --> 00:25:06,820
every automation from github in slack so

00:25:04,960 --> 00:25:09,220
everything every time you do a pull

00:25:06,820 --> 00:25:11,350
request every time you do a release all

00:25:09,220 --> 00:25:15,429
that information can be provided via

00:25:11,350 --> 00:25:17,710
robots into slack if you're dealing with

00:25:15,429 --> 00:25:19,660
customers slack also helps you do that

00:25:17,710 --> 00:25:21,610
slack is not part of the github

00:25:19,660 --> 00:25:24,130
enterprise platform just to make that

00:25:21,610 --> 00:25:26,530
clear it's part of another platform

00:25:24,130 --> 00:25:29,429
that's revolutionizing the way companies

00:25:26,530 --> 00:25:31,929
and employees and companies communicate

00:25:29,429 --> 00:25:35,100
one thing that slack does do though is

00:25:31,929 --> 00:25:37,630
it gives you also branches to and

00:25:35,100 --> 00:25:40,480
capabilities or channels to work with

00:25:37,630 --> 00:25:43,929
with companies that you would partner

00:25:40,480 --> 00:25:47,880
with as a business or customers at Horry

00:25:43,929 --> 00:25:50,460
we use discord to communicate with our

00:25:47,880 --> 00:25:52,990
developer community

00:25:50,460 --> 00:25:54,820
discord for those that haven't heard

00:25:52,990 --> 00:25:58,650
about it is popular in the gaming

00:25:54,820 --> 00:25:58,650
community it's extremely

00:25:59,500 --> 00:26:04,190
targeted I would say to that type of

00:26:01,850 --> 00:26:06,410
community but for us and working with

00:26:04,190 --> 00:26:10,460
software developers around the globe

00:26:06,410 --> 00:26:12,550
that are in in Horry we find it a very

00:26:10,460 --> 00:26:15,260
good way to get immediate feedback

00:26:12,550 --> 00:26:17,690
real-time information about what's going

00:26:15,260 --> 00:26:19,760
on with the software we build and the

00:26:17,690 --> 00:26:23,630
customers and community of contributors

00:26:19,760 --> 00:26:25,820
that we want to connect with those are

00:26:23,630 --> 00:26:30,200
just two examples there are other things

00:26:25,820 --> 00:26:32,750
out there that that are able to

00:26:30,200 --> 00:26:36,230
facilitate and and help but I think a

00:26:32,750 --> 00:26:38,120
very important thing when you decide to

00:26:36,230 --> 00:26:40,400
go with a platform like this be

00:26:38,120 --> 00:26:43,100
realistic about the real-time

00:26:40,400 --> 00:26:45,890
opportunities that companies like github

00:26:43,100 --> 00:26:48,350
platform will provide your business and

00:26:45,890 --> 00:26:51,410
then you have to really exercise on

00:26:48,350 --> 00:26:54,170
doing that so it's a change on many

00:26:51,410 --> 00:26:56,510
different levels and by the way you know

00:26:54,170 --> 00:26:59,270
it's just like websites and blogs

00:26:56,510 --> 00:27:00,950
you know managers also go on slack and

00:26:59,270 --> 00:27:03,500
they have channels and people can read

00:27:00,950 --> 00:27:07,610
the stuff that they talk about but they

00:27:03,500 --> 00:27:09,680
can also get some advantages by seeing

00:27:07,610 --> 00:27:13,390
what developers are doing what's

00:27:09,680 --> 00:27:16,340
deployed what customers are saying etc

00:27:13,390 --> 00:27:19,670
again that gives the whole company a way

00:27:16,340 --> 00:27:23,770
of getting feedback and in some sense a

00:27:19,670 --> 00:27:28,400
way of interacting with customers now

00:27:23,770 --> 00:27:31,820
you know I've been around quite a long

00:27:28,400 --> 00:27:34,820
time in the software area and I don't

00:27:31,820 --> 00:27:37,160
think you really you can do and build

00:27:34,820 --> 00:27:38,990
great software by just asking customers

00:27:37,160 --> 00:27:42,230
what they want I don't think that's

00:27:38,990 --> 00:27:45,020
really a great approach because software

00:27:42,230 --> 00:27:47,270
by itself is art it's it's not science

00:27:45,020 --> 00:27:51,280
it's something that you need to think

00:27:47,270 --> 00:27:54,500
about imagine and create but feedback

00:27:51,280 --> 00:27:56,600
helps especially if something's broken

00:27:54,500 --> 00:28:01,280
and especially if you want to get

00:27:56,600 --> 00:28:03,800
information about new new features that

00:28:01,280 --> 00:28:07,340
you thought of and creating a scenario

00:28:03,800 --> 00:28:09,860
and a system by the way using github

00:28:07,340 --> 00:28:12,050
maybe even using a public github

00:28:09,860 --> 00:28:15,080
repository outside of your

00:28:12,050 --> 00:28:17,540
enterprise gives you a capability and

00:28:15,080 --> 00:28:19,640
gives customers a capability of of

00:28:17,540 --> 00:28:24,890
working together I'll just give you an

00:28:19,640 --> 00:28:29,020
example a year ago I was helping a big

00:28:24,890 --> 00:28:32,990
organization with their data

00:28:29,020 --> 00:28:36,530
infrastructure and getting helping them

00:28:32,990 --> 00:28:38,390
build a public data set okay and then

00:28:36,530 --> 00:28:41,690
the build of public data set is not

00:28:38,390 --> 00:28:44,030
trivial but of course in this case it

00:28:41,690 --> 00:28:46,180
was built with one of the that's just

00:28:44,030 --> 00:28:48,680
called a bigger cloud cloud

00:28:46,180 --> 00:28:50,780
infrastructures now in order to work

00:28:48,680 --> 00:28:52,850
with that cloud company we needed to

00:28:50,780 --> 00:28:55,700
have a way of giving them the capability

00:28:52,850 --> 00:28:58,610
of cooperating and developing and

00:28:55,700 --> 00:29:02,930
testing all the source code and some of

00:28:58,610 --> 00:29:05,330
the data that was provided and every day

00:29:02,930 --> 00:29:06,920
the teams could get feedback from each

00:29:05,330 --> 00:29:08,960
other what was working you know they

00:29:06,920 --> 00:29:10,820
would try stuff they were located in

00:29:08,960 --> 00:29:12,680
Seattle doesn't matter they could try

00:29:10,820 --> 00:29:14,840
stuff in their office we could do stuff

00:29:12,680 --> 00:29:16,640
here in Germany and having that

00:29:14,840 --> 00:29:19,670
interaction and that sort of way of

00:29:16,640 --> 00:29:23,750
working was extremely effective and

00:29:19,670 --> 00:29:25,190
github was the base for that and you

00:29:23,750 --> 00:29:29,360
know I can say honestly there wasn't

00:29:25,190 --> 00:29:32,030
even a discussion we had one phone call

00:29:29,360 --> 00:29:34,550
we set up the project we got everyone on

00:29:32,030 --> 00:29:37,340
github everyone already had their github

00:29:34,550 --> 00:29:40,270
users the company is in Microsoft by the

00:29:37,340 --> 00:29:43,310
way so you know this is again how old

00:29:40,270 --> 00:29:45,200
work and how you get interaction and

00:29:43,310 --> 00:29:47,810
feedback for new software and new

00:29:45,200 --> 00:29:50,390
inventions today depends a lot on your

00:29:47,810 --> 00:29:52,880
ability to structure things and work

00:29:50,390 --> 00:29:55,640
with things and get your company

00:29:52,880 --> 00:29:58,250
involved in that now we talked about

00:29:55,640 --> 00:30:01,250
compliance we talked about security but

00:29:58,250 --> 00:30:03,440
let's also just talk about mindset you

00:30:01,250 --> 00:30:05,930
know the single biggest challenge that

00:30:03,440 --> 00:30:08,570
every company has it's not technology

00:30:05,930 --> 00:30:11,750
it's not policies it's the way you think

00:30:08,570 --> 00:30:14,210
about things and letting employees work

00:30:11,750 --> 00:30:17,000
in a way that where they can collaborate

00:30:14,210 --> 00:30:19,610
with Google or Microsoft or github and

00:30:17,000 --> 00:30:23,390
do stuff and exchange information is

00:30:19,610 --> 00:30:25,320
very very difficult for Joe manager to

00:30:23,390 --> 00:30:27,630
understand why is that were

00:30:25,320 --> 00:30:29,880
how is that going I might lose my job if

00:30:27,630 --> 00:30:32,130
somebody you know provides the wrong

00:30:29,880 --> 00:30:34,259
information that mindset is not going to

00:30:32,130 --> 00:30:37,230
change because you implement github

00:30:34,259 --> 00:30:39,750
enterprise or any other technology but

00:30:37,230 --> 00:30:41,880
that mindset will change because you've

00:30:39,750 --> 00:30:44,759
changed the way you work and the

00:30:41,880 --> 00:30:49,529
potential to work in new ways is a

00:30:44,759 --> 00:30:52,440
highly effective way of shifting the

00:30:49,529 --> 00:30:55,490
thought process in companies so that's a

00:30:52,440 --> 00:30:58,820
benefit that you would get from

00:30:55,490 --> 00:31:02,700
implementing this whole infrastructure

00:30:58,820 --> 00:31:06,149
so when I say that that's because you

00:31:02,700 --> 00:31:10,230
know the silos and companies are built

00:31:06,149 --> 00:31:13,620
around politics power money not

00:31:10,230 --> 00:31:17,250
technology not software not developers

00:31:13,620 --> 00:31:19,470
so some of these structures that you

00:31:17,250 --> 00:31:21,090
want to break down you also need

00:31:19,470 --> 00:31:22,710
structures to break down the old

00:31:21,090 --> 00:31:25,200
structures and one of the things I think

00:31:22,710 --> 00:31:27,389
I would encourage along with the

00:31:25,200 --> 00:31:29,639
implementation and rollout of inter

00:31:27,389 --> 00:31:32,610
source in general is to really have a

00:31:29,639 --> 00:31:35,100
dedicated product development lab now

00:31:32,610 --> 00:31:37,830
everyone here knows you can do that

00:31:35,100 --> 00:31:40,080
virtually you don't need to go ask Joe

00:31:37,830 --> 00:31:42,179
manager for budget or get some

00:31:40,080 --> 00:31:45,600
permission from someone you can set up a

00:31:42,179 --> 00:31:48,960
lab as part of an organization inside

00:31:45,600 --> 00:31:51,179
github and then get people to come and

00:31:48,960 --> 00:31:53,669
collaborate on new things let me give

00:31:51,179 --> 00:31:55,549
you some examples new programming

00:31:53,669 --> 00:31:58,649
languages you want to set up a go

00:31:55,549 --> 00:32:01,889
infrastructure with JavaScript and have

00:31:58,649 --> 00:32:04,889
some simple apps deployed oh by the way

00:32:01,889 --> 00:32:07,860
my manager wants to see how you program

00:32:04,889 --> 00:32:10,799
an app on the iPhone or program an app

00:32:07,860 --> 00:32:13,110
on any phone just simple things where

00:32:10,799 --> 00:32:15,389
you can then get people come show push

00:32:13,110 --> 00:32:17,940
this button look at this code make a

00:32:15,389 --> 00:32:19,919
change do a pull request try this out

00:32:17,940 --> 00:32:22,649
it's not gonna break anything no

00:32:19,919 --> 00:32:25,529
customer's going to see this but getting

00:32:22,649 --> 00:32:28,409
people in this lab and teaching them how

00:32:25,529 --> 00:32:30,629
to do things is a critical part again

00:32:28,409 --> 00:32:32,159
because of the mindset because of the

00:32:30,629 --> 00:32:34,440
fact that you know we don't have the

00:32:32,159 --> 00:32:36,149
luxury in business of going back to

00:32:34,440 --> 00:32:38,620
school every day I think that's a shame

00:32:36,149 --> 00:32:40,960
I think people should be learning

00:32:38,620 --> 00:32:43,390
more but again using this infrastructure

00:32:40,960 --> 00:32:46,120
to set up a lab and give people the

00:32:43,390 --> 00:32:48,309
permissions is important when you

00:32:46,120 --> 00:32:52,840
implement github Enterprise there are

00:32:48,309 --> 00:32:55,030
many different ways to do it speaking

00:32:52,840 --> 00:32:59,080
here from my own perspective and

00:32:55,030 --> 00:33:01,120
experience make one organization don't

00:32:59,080 --> 00:33:03,520
try to make the organization that was

00:33:01,120 --> 00:33:05,559
there today or is there yesterday don't

00:33:03,520 --> 00:33:07,990
try to implement that organization and

00:33:05,559 --> 00:33:10,600
get up because you'll fail you'll fail

00:33:07,990 --> 00:33:13,210
because the benefit of inter source and

00:33:10,600 --> 00:33:16,150
getting to inter source as a sort of

00:33:13,210 --> 00:33:19,270
business philosophy requires you to open

00:33:16,150 --> 00:33:21,970
up the whole kimono now you might have

00:33:19,270 --> 00:33:24,880
some secret sauce if you're coca-cola or

00:33:21,970 --> 00:33:27,550
whatever company and you can protect

00:33:24,880 --> 00:33:30,809
different repositories but the benefit

00:33:27,550 --> 00:33:33,730
of implementing new types of software

00:33:30,809 --> 00:33:36,490
production platforms is that you get

00:33:33,730 --> 00:33:38,710
maximum involvement from everyone in the

00:33:36,490 --> 00:33:41,380
company even people that don't do

00:33:38,710 --> 00:33:42,880
software should be on github and the

00:33:41,380 --> 00:33:45,070
reason for that is they can do other

00:33:42,880 --> 00:33:47,770
things they can write documentation they

00:33:45,070 --> 00:33:50,740
can write customer stories they can add

00:33:47,770 --> 00:33:52,179
things including issues they can look at

00:33:50,740 --> 00:33:55,750
how the software is working

00:33:52,179 --> 00:33:58,690
don't look at github enterprise and

00:33:55,750 --> 00:34:02,440
Inter source in general as an experiment

00:33:58,690 --> 00:34:06,630
that you use to reduce cost big mistake

00:34:02,440 --> 00:34:09,730
look at this as a way of all-inclusive

00:34:06,630 --> 00:34:12,909
changing the philosophy about how people

00:34:09,730 --> 00:34:18,429
view and look at your software today you

00:34:12,909 --> 00:34:20,169
know again just one example the a lot of

00:34:18,429 --> 00:34:22,240
times companies can't maintain the

00:34:20,169 --> 00:34:24,700
software they have the reason for that

00:34:22,240 --> 00:34:27,129
is they have people that worked on that

00:34:24,700 --> 00:34:29,350
software that are no longer alive or no

00:34:27,129 --> 00:34:31,960
longer in the company so giving those

00:34:29,350 --> 00:34:34,210
repositories an option to have other

00:34:31,960 --> 00:34:36,340
people look at it and you know I'm happy

00:34:34,210 --> 00:34:37,990
to admit I developed stuff on the

00:34:36,340 --> 00:34:40,540
mainframe you know I can look at that

00:34:37,990 --> 00:34:42,879
today and still make some assessment of

00:34:40,540 --> 00:34:45,460
whether it can be changed or not a lot

00:34:42,879 --> 00:34:47,590
of companies have opportunities to open

00:34:45,460 --> 00:34:50,140
up what they've done in the past to

00:34:47,590 --> 00:34:53,140
their current employee base and

00:34:50,140 --> 00:34:56,650
gain information from that so thank you

00:34:53,140 --> 00:34:59,320
very much I hope that that was helpful

00:34:56,650 --> 00:35:02,590
for you and I look forward to being

00:34:59,320 --> 00:35:05,650
around and talking to you about any of

00:35:02,590 --> 00:35:09,070
the topics here or of course my favorite

00:35:05,650 --> 00:35:10,660
topic of today ory and I have even

00:35:09,070 --> 00:35:13,030
brought the whole company with me in

00:35:10,660 --> 00:35:14,800
case you have some security and API

00:35:13,030 --> 00:35:17,180
challenges that you want to discuss as

00:35:14,800 --> 00:35:20,980
well thank you very much

00:35:17,180 --> 00:35:29,550
[Applause]

00:35:20,980 --> 00:35:29,550

YouTube URL: https://www.youtube.com/watch?v=Kg3k_K65J5o


