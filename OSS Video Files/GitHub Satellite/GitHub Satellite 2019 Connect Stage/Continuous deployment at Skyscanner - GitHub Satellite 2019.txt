Title: Continuous deployment at Skyscanner - GitHub Satellite 2019
Publication date: 2019-05-28
Playlist: GitHub Satellite 2019 Connect Stage
Description: 
	Presented by Stuart Davidson, Senior Engineering, Mana

Skyscanner practice Continuous Deployment wherever possible and have a robust deployment system in place – but it’s not been easy and there’s been plenty of bumps and unintended consequences along the way. Tools that work at a smaller scale become strategic roadblocks as you try to move your team into a faster and safer path to production. Stuart will hope to dispel the myth that you need to be "all-in" from the start and walk through how Skyscanner got to where they are, one step and one transition at a time.

About GitHub Satellite 2019
A community connected by code

Explore our interconnected community—and how collaboration turns ideas into innovations.

Join us in November at San Francisco's Palace of Fine Arts for GitHub Universe - https://githubuniverse.com/
Captions: 
	00:00:01,240 --> 00:00:04,930
[Music]

00:00:07,660 --> 00:00:12,330
[Music]

00:00:12,629 --> 00:00:16,689
right a couple of services there public

00:00:15,639 --> 00:00:18,730
service announcements before we get

00:00:16,689 --> 00:00:22,029
started and you know there's a much

00:00:18,730 --> 00:00:24,189
better talk going on upstairs right yeah

00:00:22,029 --> 00:00:26,649
okay I'm assuming this is the lunchtime

00:00:24,189 --> 00:00:27,880
effect everybody's had a huge lunch and

00:00:26,649 --> 00:00:29,919
can't be bothered walking up the stairs

00:00:27,880 --> 00:00:33,010
thank you all for coming along though I

00:00:29,919 --> 00:00:35,559
really appreciate it I got a new watch

00:00:33,010 --> 00:00:38,890
recently and it's got this this heart

00:00:35,559 --> 00:00:40,690
rate monitor on it and for the last five

00:00:38,890 --> 00:00:41,290
minutes has been going up and up and up

00:00:40,690 --> 00:00:43,390
and up

00:00:41,290 --> 00:00:46,120
if it starts bleeping I'm probably

00:00:43,390 --> 00:00:50,050
clinically dead as long as I'm moving

00:00:46,120 --> 00:00:52,030
don't panic okay it'll be fine final

00:00:50,050 --> 00:00:55,060
thing I've sent this link to the live

00:00:52,030 --> 00:00:59,110
stream to my mum and dad and my wife so

00:00:55,060 --> 00:01:00,940
hello mum and dad hello wife let's just

00:00:59,110 --> 00:01:02,890
to prove that all the hours that I spent

00:01:00,940 --> 00:01:05,110
in front of a computer instead of being

00:01:02,890 --> 00:01:08,049
outside have actually come to something

00:01:05,110 --> 00:01:10,240
there's actually look at this or it gave

00:01:08,049 --> 00:01:11,979
up satellite it's amazing it's a meeting

00:01:10,240 --> 00:01:15,640
for a venue and a keynote and all ah

00:01:11,979 --> 00:01:19,380
it's been awesome so far right have we

00:01:15,640 --> 00:01:19,380
started the timing hasn't started yet

00:01:21,420 --> 00:01:27,460
we've started right good okay so my name

00:01:25,210 --> 00:01:29,110
is Stuart Davidson I'm here to talk to

00:01:27,460 --> 00:01:30,659
you about continuous deployment as

00:01:29,110 --> 00:01:33,909
Skyscanner

00:01:30,659 --> 00:01:36,250
I'm not a vendor I'm not someone who's

00:01:33,909 --> 00:01:38,290
here to sell you things I'm hoping to

00:01:36,250 --> 00:01:40,720
walk you through some stories some

00:01:38,290 --> 00:01:44,080
anecdotes of how Skyscanner got to a

00:01:40,720 --> 00:01:47,409
place of continuous deployment it's not

00:01:44,080 --> 00:01:48,040
been easy there's been a lot of a lot of

00:01:47,409 --> 00:01:50,320
mistakes

00:01:48,040 --> 00:01:51,700
basically with me that we've made a lot

00:01:50,320 --> 00:01:53,280
of mistakes I would use stronger

00:01:51,700 --> 00:01:58,030
language but we're in a public setting

00:01:53,280 --> 00:02:00,159
and hopefully by doing this talk I can

00:01:58,030 --> 00:02:02,320
share the learnings that we've had so

00:02:00,159 --> 00:02:04,479
our mistakes aren't nearly as bad if you

00:02:02,320 --> 00:02:06,040
take something away from this then

00:02:04,479 --> 00:02:08,439
there's value to the mistakes and we

00:02:06,040 --> 00:02:10,319
don't we don't feel nearly as bad right

00:02:08,439 --> 00:02:12,939
so continuous deployment Scott yeah I

00:02:10,319 --> 00:02:14,079
meant to introduce myself I'm Stuart

00:02:12,939 --> 00:02:17,800
Davidson there was a big picture of me

00:02:14,079 --> 00:02:20,170
on previously my my handle is spec Arts

00:02:17,800 --> 00:02:21,430
page Twitter github LinkedIn if you've

00:02:20,170 --> 00:02:23,049
got any

00:02:21,430 --> 00:02:24,909
half of the reason that I come and do

00:02:23,049 --> 00:02:27,129
this is to hear where you are with your

00:02:24,909 --> 00:02:29,590
organization and what you're doing

00:02:27,129 --> 00:02:31,329
because we're just one small

00:02:29,590 --> 00:02:33,340
organization who's managed to do this

00:02:31,329 --> 00:02:34,599
we're quite were relatively small

00:02:33,340 --> 00:02:36,549
compared to some of the companies out

00:02:34,599 --> 00:02:38,109
there I was talking to a lady that was

00:02:36,549 --> 00:02:40,239
working at SAP recently that's a big

00:02:38,109 --> 00:02:41,769
company so coming

00:02:40,239 --> 00:02:43,359
talk to me about where you are what

00:02:41,769 --> 00:02:45,400
you're doing I'm sure I can learn

00:02:43,359 --> 00:02:46,390
something from you so I'm really keen

00:02:45,400 --> 00:02:49,030
that it continues

00:02:46,390 --> 00:02:51,819
I'm the tribe leader of a tribe in

00:02:49,030 --> 00:02:53,680
Skyscanner called the platform tribe we

00:02:51,819 --> 00:02:56,470
run all the infrastructure so we've got

00:02:53,680 --> 00:02:58,420
enormous big kubernetes clusters kicking

00:02:56,470 --> 00:03:01,090
around the globe we do all the the

00:02:58,420 --> 00:03:04,480
routing we do our EWS account management

00:03:01,090 --> 00:03:05,379
all that sort of stuff and yeah get hub

00:03:04,480 --> 00:03:09,129
have asked me to come and talk about

00:03:05,379 --> 00:03:11,260
this journey before we get into the

00:03:09,129 --> 00:03:13,359
governs of it I just wanted to very

00:03:11,260 --> 00:03:15,700
quickly discuss the difference between

00:03:13,359 --> 00:03:20,019
continuous delivery and continuous

00:03:15,700 --> 00:03:22,930
deployment we talk about CI CD right but

00:03:20,019 --> 00:03:24,400
CD is overloaded because CD could mean

00:03:22,930 --> 00:03:26,410
continuous delivery or continuous

00:03:24,400 --> 00:03:28,750
deployment and I have sat through

00:03:26,410 --> 00:03:30,549
conference talks where the they actually

00:03:28,750 --> 00:03:33,220
get the names in the wrong place and

00:03:30,549 --> 00:03:35,260
that hurts me so I just wanted to very

00:03:33,220 --> 00:03:37,030
quickly walk you through continuous

00:03:35,260 --> 00:03:38,620
delivery is where you you package up

00:03:37,030 --> 00:03:41,669
your code and you get it to a place

00:03:38,620 --> 00:03:45,069
where it's tested and it is ready to go

00:03:41,669 --> 00:03:47,079
but there's someone in your organization

00:03:45,069 --> 00:03:49,750
that decides if it goes into production

00:03:47,079 --> 00:03:51,190
or not so that maybe your QA department

00:03:49,750 --> 00:03:52,870
it might be a release manager or

00:03:51,190 --> 00:03:55,329
something for someone like that but

00:03:52,870 --> 00:03:57,819
there's there's a manual step between

00:03:55,329 --> 00:03:59,349
getting your code from your package

00:03:57,819 --> 00:04:02,400
management or whatever you store it into

00:03:59,349 --> 00:04:05,409
production whereas continuous deployment

00:04:02,400 --> 00:04:07,690
every commit that is merged into your

00:04:05,409 --> 00:04:10,540
master branch ends up in production

00:04:07,690 --> 00:04:12,519
right it's all automated so there's no

00:04:10,540 --> 00:04:15,609
one that there's no one that's going

00:04:12,519 --> 00:04:18,190
boom this sort of fuels the right weight

00:04:15,609 --> 00:04:20,289
you know like these random things that

00:04:18,190 --> 00:04:22,539
we think about these arbitrary metrics

00:04:20,289 --> 00:04:25,210
that we decided that a release is good

00:04:22,539 --> 00:04:26,470
enough or not that's that's the big

00:04:25,210 --> 00:04:29,080
difference so I'm going to talk about

00:04:26,470 --> 00:04:30,669
continuous deployment we throw all of

00:04:29,080 --> 00:04:34,710
our marriages straight into production

00:04:30,669 --> 00:04:37,860
most of our merges into production right

00:04:34,710 --> 00:04:39,900
we're speaking the the conversations

00:04:37,860 --> 00:04:42,480
I've had over even just last last night

00:04:39,900 --> 00:04:44,070
um the three things people want to know

00:04:42,480 --> 00:04:45,840
and I hope I cover these and if I don't

00:04:44,070 --> 00:04:48,180
please please come and talk to me

00:04:45,840 --> 00:04:50,340
how did Skyscanner get to continuous

00:04:48,180 --> 00:04:52,410
deployment what impact did it have on

00:04:50,340 --> 00:04:54,180
our business and what lessons did we

00:04:52,410 --> 00:04:55,710
learn I felt I should call these owners

00:04:54,180 --> 00:04:58,830
now because the rest of this talk is

00:04:55,710 --> 00:05:00,870
just stories and so yeah well hopefully

00:04:58,830 --> 00:05:04,470
I cover these three things if I don't

00:05:00,870 --> 00:05:05,130
please please get in touch right let's

00:05:04,470 --> 00:05:08,660
star

00:05:05,130 --> 00:05:13,080
once upon a time cast your mind back

00:05:08,660 --> 00:05:17,520
we're we're talking 2016 end of 2015

00:05:13,080 --> 00:05:20,820
start 2016 I'm in a squad called release

00:05:17,520 --> 00:05:24,120
engineering there's about six of us and

00:05:20,820 --> 00:05:26,580
most of our tank we run our source

00:05:24,120 --> 00:05:29,970
control we have an enormous team city

00:05:26,580 --> 00:05:31,080
instance and then we have a package

00:05:29,970 --> 00:05:32,340
management tool and we don't really

00:05:31,080 --> 00:05:34,830
focus on the source control the package

00:05:32,340 --> 00:05:37,230
management because most of our time is

00:05:34,830 --> 00:05:39,840
spent administrating this massive team

00:05:37,230 --> 00:05:42,390
and their team city instance and I see

00:05:39,840 --> 00:05:44,940
massive we have like 50 agents but we're

00:05:42,390 --> 00:05:47,430
perpetually working on trying to upgrade

00:05:44,940 --> 00:05:49,980
these agents to cover all of the use

00:05:47,430 --> 00:05:52,920
cases in our business we've got a

00:05:49,980 --> 00:05:54,570
backlog that obviously that would choke

00:05:52,920 --> 00:05:56,640
a horse that's a that's a Scottish

00:05:54,570 --> 00:05:59,310
freeze to see it was a very large

00:05:56,640 --> 00:06:03,690
backlog of work to do and we were

00:05:59,310 --> 00:06:05,760
getting absolutely nowhere and then we

00:06:03,690 --> 00:06:08,730
got this new CTO a guy called Brian dove

00:06:05,760 --> 00:06:11,610
and and he started to talk to us and

00:06:08,730 --> 00:06:14,970
that was odd like see see X always

00:06:11,610 --> 00:06:17,070
talking to - you know sis admins it felt

00:06:14,970 --> 00:06:18,660
a bit weird but he was he knew what he

00:06:17,070 --> 00:06:21,060
was talking about right he was clever

00:06:18,660 --> 00:06:22,860
and he was asking good questions and he

00:06:21,060 --> 00:06:25,140
was listening and we started to feel

00:06:22,860 --> 00:06:27,090
like people and it was it was weird but

00:06:25,140 --> 00:06:30,450
it was a good feeling right we were

00:06:27,090 --> 00:06:32,670
getting attention if only we'd seen the

00:06:30,450 --> 00:06:35,340
signs earlier right because and I've

00:06:32,670 --> 00:06:37,290
picked a bad picture of him specifically

00:06:35,340 --> 00:06:39,390
because of this question he he came down

00:06:37,290 --> 00:06:42,270
I remember really clearly he came down

00:06:39,390 --> 00:06:43,560
one one day and um we were all sitting

00:06:42,270 --> 00:06:45,820
in our desks and he came and he's a

00:06:43,560 --> 00:06:47,890
higher IQ my folks days ago on the other

00:06:45,820 --> 00:06:51,660
and he goes I want you to create a

00:06:47,890 --> 00:06:55,210
platform that will deploy 10,000 changes

00:06:51,660 --> 00:06:56,470
ID to our website right now I want to

00:06:55,210 --> 00:06:57,670
start off by saying this is all poetic

00:06:56,470 --> 00:06:59,950
license okay

00:06:57,670 --> 00:07:01,900
yes there was this conversation but

00:06:59,950 --> 00:07:03,850
there was also lots of emails and your

00:07:01,900 --> 00:07:05,080
plans and PowerPoint presentations but

00:07:03,850 --> 00:07:07,120
they're not nearly as interesting for a

00:07:05,080 --> 00:07:09,370
talk like this so this is kind of how it

00:07:07,120 --> 00:07:11,740
went right I want you to create a

00:07:09,370 --> 00:07:17,110
platform that will deploy 10,000 changes

00:07:11,740 --> 00:07:19,360
a day to our website now we we weren't

00:07:17,110 --> 00:07:22,870
sure if he was kidding or not we weren't

00:07:19,360 --> 00:07:27,280
sure if he was making it up and so we we

00:07:22,870 --> 00:07:29,110
can I think you mean 10 now these

00:07:27,280 --> 00:07:31,660
characters if you're not wrecking Marty

00:07:29,110 --> 00:07:35,350
fans these are the meeseeks and there

00:07:31,660 --> 00:07:37,300
there are I guess a race of beings that

00:07:35,350 --> 00:07:40,480
are dedicated to helping other people

00:07:37,300 --> 00:07:43,900
and their downfall was trying to teach

00:07:40,480 --> 00:07:46,360
people how to play golf as a Scotsman

00:07:43,900 --> 00:07:47,620
that it just it was the best episode in

00:07:46,360 --> 00:07:49,120
the world and we look a lot like that

00:07:47,620 --> 00:07:51,160
with the ginger hair and the blue skin

00:07:49,120 --> 00:07:54,040
because we see we have lost the daylight

00:07:51,160 --> 00:07:55,450
so this is this is almost real life if

00:07:54,040 --> 00:08:01,210
you can imagine that as a Skyscanner

00:07:55,450 --> 00:08:04,750
office we think you mean 10 he clarified

00:08:01,210 --> 00:08:08,560
no I actually mean 10,000 maybe he's got

00:08:04,750 --> 00:08:13,390
his his reference of data wrong maybe he

00:08:08,560 --> 00:08:18,460
means a year no he means 10,000

00:08:13,390 --> 00:08:21,600
deployments parody every day so we

00:08:18,460 --> 00:08:23,890
thought we'd maybe ask him well how

00:08:21,600 --> 00:08:26,230
because he's obviously seen this this

00:08:23,890 --> 00:08:29,350
great grand idea I'm not willing to

00:08:26,230 --> 00:08:32,860
suggest we're so how do we go about this

00:08:29,350 --> 00:08:34,450
Brian you worked and what do we do he

00:08:32,860 --> 00:08:35,800
said well I don't really know but that's

00:08:34,450 --> 00:08:38,229
what we pay you for

00:08:35,800 --> 00:08:40,540
but if you need anything support

00:08:38,229 --> 00:08:44,169
messaging that sort of thing you let me

00:08:40,540 --> 00:08:48,850
know and as he walked away I asked for

00:08:44,169 --> 00:08:50,800
gin but it didn't really happen and he's

00:08:48,850 --> 00:08:53,560
yet to actually give me any sort of

00:08:50,800 --> 00:08:57,820
beverage so I'll follow that up

00:08:53,560 --> 00:08:59,540
afterwards but this was haha this souse

00:08:57,820 --> 00:09:02,150
into a flat spin right we were late

00:08:59,540 --> 00:09:04,490
how do you even go about doing something

00:09:02,150 --> 00:09:06,200
like this we'd heard stories right you

00:09:04,490 --> 00:09:09,170
hear these big internet economy

00:09:06,200 --> 00:09:10,790
companies Facebook Amazon Google you

00:09:09,170 --> 00:09:14,900
know these these companies that have

00:09:10,790 --> 00:09:16,490
like 40,000 people doing what well in

00:09:14,900 --> 00:09:20,090
our company at the moment it would be

00:09:16,490 --> 00:09:22,130
grant Kaitlyn Fergal and nobuta right

00:09:20,090 --> 00:09:26,030
they and Carla's so that's five

00:09:22,130 --> 00:09:27,920
individuals trying to trying to do the

00:09:26,030 --> 00:09:31,550
same thing like how do you get to there

00:09:27,920 --> 00:09:36,290
how do you do that and then we realized

00:09:31,550 --> 00:09:38,690
actually this set us up to investigate

00:09:36,290 --> 00:09:40,490
other things he's he's cleared all the

00:09:38,690 --> 00:09:42,470
assumptions that we had before about how

00:09:40,490 --> 00:09:44,120
we had to continue to do things and we

00:09:42,470 --> 00:09:46,820
started to look at our tooling in a

00:09:44,120 --> 00:09:49,040
different way because we knew we

00:09:46,820 --> 00:09:51,440
absolutely knew that the tools that we

00:09:49,040 --> 00:09:54,110
were using were never going to scale to

00:09:51,440 --> 00:09:56,000
where we wanted to get to so we've got

00:09:54,110 --> 00:09:59,690
the CTOs permission to start changing

00:09:56,000 --> 00:10:02,090
things right so the first thing that we

00:09:59,690 --> 00:10:03,770
we investigated was our CI tooling and I

00:10:02,090 --> 00:10:05,240
call this the Jenkins paradox because

00:10:03,770 --> 00:10:08,990
more people know about Jenkins than

00:10:05,240 --> 00:10:11,150
teamcity but it still stands when we

00:10:08,990 --> 00:10:13,280
took a more holistic view of what our CI

00:10:11,150 --> 00:10:15,130
tooling was all about we we actually

00:10:13,280 --> 00:10:18,020
realized that our tiny little squad

00:10:15,130 --> 00:10:20,240
we're setting the technical direction of

00:10:18,020 --> 00:10:22,280
the whole company right because it all

00:10:20,240 --> 00:10:24,290
depended on who you knew in the squad to

00:10:22,280 --> 00:10:26,690
get the tickets along the backlog if you

00:10:24,290 --> 00:10:29,660
wanted the the latest version of Java C

00:10:26,690 --> 00:10:31,970
you you have to get on the build agents

00:10:29,660 --> 00:10:34,580
and to get on the build agents you had

00:10:31,970 --> 00:10:36,680
to talk to us so just depending on you

00:10:34,580 --> 00:10:38,780
know how much time we had depended on

00:10:36,680 --> 00:10:41,270
what the technology choices we're of the

00:10:38,780 --> 00:10:43,610
whole company and so yeah how do we find

00:10:41,270 --> 00:10:45,320
out they were in a strategic enabler how

00:10:43,610 --> 00:10:47,720
did we find out we were this force

00:10:45,320 --> 00:10:49,520
multiplier for good in the company when

00:10:47,720 --> 00:10:51,890
we realized that we were this massive

00:10:49,520 --> 00:10:56,060
strategic roadblock to getting anything

00:10:51,890 --> 00:10:59,480
done in the company so yeah the Jenkins

00:10:56,060 --> 00:11:01,070
paradox is this this I don't know I've

00:10:59,480 --> 00:11:04,010
been trying to trying to get a good way

00:11:01,070 --> 00:11:08,510
of explaining it but basically you have

00:11:04,010 --> 00:11:09,950
this expectation that every single bit

00:11:08,510 --> 00:11:12,020
of code that you've maybe written in the

00:11:09,950 --> 00:11:13,790
last six months and that's generous some

00:11:12,020 --> 00:11:16,040
companies think the last three years

00:11:13,790 --> 00:11:18,319
you should be able to rebuild and put

00:11:16,040 --> 00:11:20,480
into production right so you need the

00:11:18,319 --> 00:11:22,100
stability you need the ability to to

00:11:20,480 --> 00:11:23,869
build code at any point in the day

00:11:22,100 --> 00:11:26,600
because there's a 24/7 thing you might

00:11:23,869 --> 00:11:29,179
need to suddenly push out a change so

00:11:26,600 --> 00:11:31,429
you need a stable and you need the the

00:11:29,179 --> 00:11:33,589
actual installation of code on your

00:11:31,429 --> 00:11:35,839
agents to be stable so that you can re

00:11:33,589 --> 00:11:39,199
release that code so that's that's one

00:11:35,839 --> 00:11:41,240
force but the other force is all the new

00:11:39,199 --> 00:11:43,519
stuff that people want to try out I

00:11:41,240 --> 00:11:46,429
don't want to try out like Kotlin and

00:11:43,519 --> 00:11:48,529
Lanigan and java 11 and i want to try

00:11:46,429 --> 00:11:50,749
all these new things but how do you

00:11:48,529 --> 00:11:53,209
build an agent that does all of that

00:11:50,749 --> 00:11:56,149
it's impossible you can't you you

00:11:53,209 --> 00:11:58,129
actually can't do it or if you do you

00:11:56,149 --> 00:12:00,139
know we're hiring right so can I come

00:11:58,129 --> 00:12:05,089
and talk to us but we couldn't make it

00:12:00,139 --> 00:12:07,850
work so we started to look at how our CI

00:12:05,089 --> 00:12:10,519
system worked and we discovered an

00:12:07,850 --> 00:12:13,220
open-source project called drone drone

00:12:10,519 --> 00:12:15,199
CI and we've been using it for about 18

00:12:13,220 --> 00:12:17,240
to 24 months now it's an excellent

00:12:15,199 --> 00:12:18,889
project and I'm so glad about like the

00:12:17,240 --> 00:12:20,420
github sponsorship thing that we're

00:12:18,889 --> 00:12:22,610
gonna have to send a few critters we cuz

00:12:20,420 --> 00:12:24,980
he it was Brad visits key he was a

00:12:22,610 --> 00:12:27,290
single contributor to this project and

00:12:24,980 --> 00:12:30,799
he created this open-source CI tool

00:12:27,290 --> 00:12:33,470
called drone it's it's not that unusual

00:12:30,799 --> 00:12:35,119
know how drone works but fundamentally

00:12:33,470 --> 00:12:37,790
it's based in containers these are

00:12:35,119 --> 00:12:40,899
ephemeral containers and what happens is

00:12:37,790 --> 00:12:44,449
you have a container with get in it and

00:12:40,899 --> 00:12:46,639
it it spins up and it takes the cord

00:12:44,449 --> 00:12:49,339
into into Europe sorry start again

00:12:46,639 --> 00:12:51,889
apologies you've got a scratch container

00:12:49,339 --> 00:12:53,660
you put a get container on top the get

00:12:51,889 --> 00:12:55,939
container pulls your cords into the

00:12:53,660 --> 00:12:58,850
scratch container and then it disappears

00:12:55,939 --> 00:13:01,429
alright then and this is the critical

00:12:58,850 --> 00:13:03,879
one you put an another container on top

00:13:01,429 --> 00:13:06,649
that contains your build environment and

00:13:03,879 --> 00:13:08,990
then you build the code this in your

00:13:06,649 --> 00:13:11,389
scratch container and then you get rid

00:13:08,990 --> 00:13:13,939
of that container that is an absolute

00:13:11,389 --> 00:13:16,279
game changer that allows each squad to

00:13:13,939 --> 00:13:18,259
decide their own build environment that

00:13:16,279 --> 00:13:20,869
takes all the responsibility away for

00:13:18,259 --> 00:13:24,230
agents fro from our squad we've suddenly

00:13:20,869 --> 00:13:26,300
got like 70% more time back as crazy

00:13:24,230 --> 00:13:28,880
I haven't finished here sorry um

00:13:26,300 --> 00:13:31,640
you you then put a container with like

00:13:28,880 --> 00:13:33,620
artifact or like artifactory plugin or

00:13:31,640 --> 00:13:35,660
something like that and take your code

00:13:33,620 --> 00:13:38,060
and push it to artifactory get rid of

00:13:35,660 --> 00:13:39,500
your factory container and then that's

00:13:38,060 --> 00:13:41,750
the work done so you get rid of your

00:13:39,500 --> 00:13:44,300
ephemeral your scratch container it's

00:13:41,750 --> 00:13:45,590
all ephemeral now my team only needs to

00:13:44,300 --> 00:13:48,410
worry about the infrastructure of

00:13:45,590 --> 00:13:50,360
running drawn and not the build agents

00:13:48,410 --> 00:13:54,440
and not the different software tooling

00:13:50,360 --> 00:13:58,730
that was it I can't describe how big a

00:13:54,440 --> 00:14:01,640
deal this was and we had such a quick

00:13:58,730 --> 00:14:03,830
uptick because squads across the company

00:14:01,640 --> 00:14:05,990
they all wanted this they all wanted to

00:14:03,830 --> 00:14:08,180
control their own destiny we were

00:14:05,990 --> 00:14:10,610
working like a squads and trades model

00:14:08,180 --> 00:14:13,250
and Skyscanner so each squad wants

00:14:10,610 --> 00:14:19,330
autonomy and they can now run what they

00:14:13,250 --> 00:14:24,200
want this led to our an amazing

00:14:19,330 --> 00:14:26,600
discovery and it was not intentional but

00:14:24,200 --> 00:14:29,180
I see it now because I think this is

00:14:26,600 --> 00:14:30,950
this is maybe a really big key learning

00:14:29,180 --> 00:14:33,920
for a company that's trying to get into

00:14:30,950 --> 00:14:37,670
this area we had inadvertently trained

00:14:33,920 --> 00:14:39,970
at least one person in every squad how

00:14:37,670 --> 00:14:42,260
to use containers right in docker

00:14:39,970 --> 00:14:43,370
because they needed it for their build

00:14:42,260 --> 00:14:45,200
environment and they were really

00:14:43,370 --> 00:14:49,460
empowered like they really really wanted

00:14:45,200 --> 00:14:50,900
to get into this so we had trained every

00:14:49,460 --> 00:14:53,630
every engineering squadron Skyscanner

00:14:50,900 --> 00:14:55,040
how to use containers so and that led us

00:14:53,630 --> 00:14:56,780
to think right well we've got the spare

00:14:55,040 --> 00:14:58,370
time and we've got all these educated

00:14:56,780 --> 00:15:01,880
engineers now what are we gonna do with

00:14:58,370 --> 00:15:05,000
it here's the big plan right so again

00:15:01,880 --> 00:15:08,080
this isn't like kubernetes this isn't

00:15:05,000 --> 00:15:11,720
massive this this is a very simple

00:15:08,080 --> 00:15:16,640
diagram of what we did in ECS right AWS

00:15:11,720 --> 00:15:19,400
ECS we've got a Bluegreen deployment

00:15:16,640 --> 00:15:23,720
system right okay Bluegreen methodology

00:15:19,400 --> 00:15:28,790
with an ELB and a route 53 in front 18

00:15:23,720 --> 00:15:30,290
months ago this was amazing amazing so

00:15:28,790 --> 00:15:33,890
what we could do while there was traffic

00:15:30,290 --> 00:15:35,900
coming in was deploy it was to see this

00:15:33,890 --> 00:15:38,600
traffic coming into blue we add one

00:15:35,900 --> 00:15:40,280
container and and then the traffic's

00:15:38,600 --> 00:15:42,200
flowing between three containers

00:15:40,280 --> 00:15:44,990
and then we got rid of the blue one and

00:15:42,200 --> 00:15:46,130
that mean we were on sort of 50 50 50

00:15:44,990 --> 00:15:49,460
because we'd have that one and that one

00:15:46,130 --> 00:15:51,290
so that's a split over and then we added

00:15:49,460 --> 00:15:53,990
another green container and then we

00:15:51,290 --> 00:15:55,700
removed the blue one and the you know we

00:15:53,990 --> 00:15:56,990
still dealt with production traffic it

00:15:55,700 --> 00:15:58,970
was coming in but we upgraded our

00:15:56,990 --> 00:16:02,030
software we didn't need to have outages

00:15:58,970 --> 00:16:04,640
anymore what like that's that's a huge

00:16:02,030 --> 00:16:06,860
thing but it was it was a pretty simple

00:16:04,640 --> 00:16:08,390
thing to orchestrate right and it's n

00:16:06,860 --> 00:16:09,800
containers and the more containers you

00:16:08,390 --> 00:16:11,840
have the more granular you can be with

00:16:09,800 --> 00:16:13,280
your traffic we didn't try and control

00:16:11,840 --> 00:16:15,680
the traffic at the elbe layer or

00:16:13,280 --> 00:16:18,350
anything clever like that we just dealt

00:16:15,680 --> 00:16:20,150
with it as a container level we still do

00:16:18,350 --> 00:16:22,340
in some of the places right this still

00:16:20,150 --> 00:16:26,930
works this still makes money for us but

00:16:22,340 --> 00:16:29,270
it was an absolute game changer then we

00:16:26,930 --> 00:16:31,430
thought because it started to get ad

00:16:29,270 --> 00:16:32,810
option right this was good but people

00:16:31,430 --> 00:16:34,970
were a little nervous about what was

00:16:32,810 --> 00:16:36,740
actually going on with their containers

00:16:34,970 --> 00:16:39,590
and the traffic that was coming in so we

00:16:36,740 --> 00:16:41,210
took the blue container your awesome

00:16:39,590 --> 00:16:43,880
idea right and it's never finished so

00:16:41,210 --> 00:16:46,370
it's version all one and then all the

00:16:43,880 --> 00:16:50,480
traffic coming into this container what

00:16:46,370 --> 00:16:52,839
we did again not like this isn't this

00:16:50,480 --> 00:16:55,490
isn't rocket science this isn't you know

00:16:52,839 --> 00:16:57,770
visualizing a black hole this is really

00:16:55,490 --> 00:16:59,750
simple stuff what we did was we put a

00:16:57,770 --> 00:17:01,280
Nietzsche proxy in front of it so

00:16:59,750 --> 00:17:02,960
because we controlled the deployment

00:17:01,280 --> 00:17:04,780
mechanism we could we could add a site

00:17:02,960 --> 00:17:06,949
car container of a Nietzsche proxy

00:17:04,780 --> 00:17:09,829
container and have the traffic go

00:17:06,949 --> 00:17:12,290
through it and then what we did was we

00:17:09,829 --> 00:17:14,660
put all of the traffic or all the stats

00:17:12,290 --> 00:17:16,939
and the traffic into open TS DB and

00:17:14,660 --> 00:17:20,329
visualized it through graph Anna alright

00:17:16,939 --> 00:17:22,790
that blew people's minds they were like

00:17:20,329 --> 00:17:25,400
wow the visibility we have on our

00:17:22,790 --> 00:17:28,280
services all of a sudden we can start to

00:17:25,400 --> 00:17:30,890
automate our are met we can start to do

00:17:28,280 --> 00:17:33,320
metrics checks on our containers as we

00:17:30,890 --> 00:17:36,650
rolled it out so we could assess if we

00:17:33,320 --> 00:17:39,110
had a spike in 500s and then roll back

00:17:36,650 --> 00:17:42,110
our services if we had that spike

00:17:39,110 --> 00:17:45,830
because the data was an open TS DB but

00:17:42,110 --> 00:17:48,890
we did it just it was like a change over

00:17:45,830 --> 00:17:51,040
a day somebody puts 980 proxy container

00:17:48,890 --> 00:17:53,620
boopadoo got the config bush and

00:17:51,040 --> 00:17:55,540
happens and then what we did was we put

00:17:53,620 --> 00:17:57,850
a log forwarder the other end we thought

00:17:55,540 --> 00:17:59,200
well this was popular enough let's do it

00:17:57,850 --> 00:18:02,560
let's do the other reason we put all the

00:17:59,200 --> 00:18:06,430
logs into into their network stack this

00:18:02,560 --> 00:18:08,980
like this was this got Brian seeing

00:18:06,430 --> 00:18:10,960
things like ah we can deploy an idea and

00:18:08,980 --> 00:18:12,580
so I was a terrible American accent I'm

00:18:10,960 --> 00:18:16,660
sorry especially with all the Americans

00:18:12,580 --> 00:18:18,880
and the audience he was like yeah we can

00:18:16,660 --> 00:18:22,120
we can take an idea and put it into

00:18:18,880 --> 00:18:24,580
production and have production like

00:18:22,120 --> 00:18:28,090
monitoring and logging within half an

00:18:24,580 --> 00:18:29,800
hour like that is a strategic enabler

00:18:28,090 --> 00:18:32,670
that no but as you can see like the

00:18:29,800 --> 00:18:35,500
steps weren't crazy they were just a an

00:18:32,670 --> 00:18:37,140
incremental you know trial and error

00:18:35,500 --> 00:18:43,150
type thing and we ended up with this

00:18:37,140 --> 00:18:46,570
amazing system and it's pretty simple so

00:18:43,150 --> 00:18:51,840
our high-level architecture at Canas end

00:18:46,570 --> 00:18:51,840
of 2017 looked a bit like this get lab I

00:18:53,460 --> 00:18:57,520
assumed it'd be like seeing Baltimore in

00:18:55,810 --> 00:19:01,930
a Harry Potter conference right he's

00:18:57,520 --> 00:19:03,400
like Gil get labs there and then our

00:19:01,930 --> 00:19:04,750
continuous integration pipeline well we

00:19:03,400 --> 00:19:07,480
had drawn

00:19:04,750 --> 00:19:10,840
we built our containers and then we

00:19:07,480 --> 00:19:13,510
pushed it into artifactory J frog then

00:19:10,840 --> 00:19:15,760
our continues deployment pipeline we

00:19:13,510 --> 00:19:19,030
called our system slingshot and

00:19:15,760 --> 00:19:22,030
slingshot was an epi that dealt with a

00:19:19,030 --> 00:19:24,730
system called simple workflow in EWS no

00:19:22,030 --> 00:19:26,320
this is a service in AWS that few people

00:19:24,730 --> 00:19:30,670
have heard of but it's a speed engine

00:19:26,320 --> 00:19:32,560
essentially people I believe don't hold

00:19:30,670 --> 00:19:35,380
me to it but I think people do all of

00:19:32,560 --> 00:19:38,440
their transactions using SWF right so we

00:19:35,380 --> 00:19:41,410
had an epi that pushed the state of the

00:19:38,440 --> 00:19:43,270
deployment intense WF we said we want to

00:19:41,410 --> 00:19:45,040
start a deployment and SW have said you

00:19:43,270 --> 00:19:47,110
want to start deployments the API said

00:19:45,040 --> 00:19:50,170
write about it deploy a better fire

00:19:47,110 --> 00:19:52,420
route 53 and say okay you want to deploy

00:19:50,170 --> 00:19:58,090
route 52 right the speech was held in

00:19:52,420 --> 00:20:00,520
SWF we the reason we moved to SWF rather

00:19:58,090 --> 00:20:02,590
than it being in a bash script was in

00:20:00,520 --> 00:20:04,810
the early adoption of the early system

00:20:02,590 --> 00:20:07,090
of this we had a deployment

00:20:04,810 --> 00:20:09,670
in Iran a bash script the field halfway

00:20:07,090 --> 00:20:11,830
through and the service owner asked well

00:20:09,670 --> 00:20:13,330
how do I fix this because I'm kinda

00:20:11,830 --> 00:20:15,640
halfway through a deployment we don't

00:20:13,330 --> 00:20:18,370
know what the state is and we said don't

00:20:15,640 --> 00:20:20,620
worry just fully uninstall your service

00:20:18,370 --> 00:20:22,450
and then fully reinstall your service

00:20:20,620 --> 00:20:23,770
and that wasn't cool because there was

00:20:22,450 --> 00:20:26,130
production traffic coming in and it was

00:20:23,770 --> 00:20:28,780
making money and things so and yeah we

00:20:26,130 --> 00:20:30,610
we quickly moved away from that model

00:20:28,780 --> 00:20:33,130
and that's a key learning okay

00:20:30,610 --> 00:20:38,440
don't orchestrate your deployments using

00:20:33,130 --> 00:20:40,660
a batch script SWF ste engine we use DC

00:20:38,440 --> 00:20:43,030
s as our scheduler again it's not as

00:20:40,660 --> 00:20:44,920
glamorous as kubernetes but we learned

00:20:43,030 --> 00:20:46,990
an awful lot it was there it was ready

00:20:44,920 --> 00:20:49,900
to go we don't need to administrate it

00:20:46,990 --> 00:20:51,520
very much it's running in AWS and so we

00:20:49,900 --> 00:20:53,200
really thought like the benefits we've

00:20:51,520 --> 00:20:56,080
got we still run a massive workload in

00:20:53,200 --> 00:20:59,200
ECS we are moving a lot of our stuff to

00:20:56,080 --> 00:21:00,580
kubernetes but I feel we're getting more

00:20:59,200 --> 00:21:03,220
out of kubernetes because we now

00:21:00,580 --> 00:21:05,260
understand the benefits that certain

00:21:03,220 --> 00:21:07,240
parts of kubernetes brings you don't

00:21:05,260 --> 00:21:08,710
need to go straight into kubernetes have

00:21:07,240 --> 00:21:12,940
a look at what's on offer in your cloud

00:21:08,710 --> 00:21:14,140
provider yeah and and we started because

00:21:12,940 --> 00:21:15,670
we could doing containers we actually

00:21:14,140 --> 00:21:17,500
started doing lambdas as well and that

00:21:15,670 --> 00:21:20,470
what again not a huge change to what we

00:21:17,500 --> 00:21:22,420
were doing and yeah you go from source

00:21:20,470 --> 00:21:24,790
code to your service which give the the

00:21:22,420 --> 00:21:27,940
really management phrase of from source

00:21:24,790 --> 00:21:29,740
to service and zero clicks all right so

00:21:27,940 --> 00:21:31,900
yeah our CTO you'll love that phrase and

00:21:29,740 --> 00:21:33,580
he used it all the time and we got to

00:21:31,900 --> 00:21:35,020
stand in front of our investors and see

00:21:33,580 --> 00:21:36,030
things like that and they loved it as

00:21:35,020 --> 00:21:40,030
well

00:21:36,030 --> 00:21:42,490
right so this was our in that that's the

00:21:40,030 --> 00:21:45,070
end of 2017 obviously we've progressed

00:21:42,490 --> 00:21:46,900
since then I did want to talk a little

00:21:45,070 --> 00:21:49,810
bit about some of the benefits of

00:21:46,900 --> 00:21:52,270
continuous deployment because the

00:21:49,810 --> 00:21:54,370
initial reaction to the idea of every

00:21:52,270 --> 00:21:57,700
commit going into production is one of

00:21:54,370 --> 00:22:01,180
sheer terror right it's like ah you

00:21:57,700 --> 00:22:03,430
can't you put what if we think with the

00:22:01,180 --> 00:22:05,980
QA Department and the Excel spreadsheet

00:22:03,430 --> 00:22:08,500
how do you how do you how do you

00:22:05,980 --> 00:22:11,260
mitigate the risk this is a massive risk

00:22:08,500 --> 00:22:13,090
you're imposing every commit is going

00:22:11,260 --> 00:22:16,030
into production without a human

00:22:13,090 --> 00:22:17,500
verifying it how how can you do that how

00:22:16,030 --> 00:22:18,850
can you take that risk on in the

00:22:17,500 --> 00:22:21,830
business

00:22:18,850 --> 00:22:25,460
it's a good question

00:22:21,830 --> 00:22:27,920
I want III would I would flip round the

00:22:25,460 --> 00:22:29,960
argument right and Richard in the

00:22:27,920 --> 00:22:31,550
audience we talked about this last night

00:22:29,960 --> 00:22:36,950
so it's good to have practice this

00:22:31,550 --> 00:22:39,590
argument the would you rather would you

00:22:36,950 --> 00:22:42,830
rather take all of the commits that

00:22:39,590 --> 00:22:45,320
you've made and your squad has made and

00:22:42,830 --> 00:22:48,200
potentially your tribe has made over the

00:22:45,320 --> 00:22:50,840
course of the week and then throw it on

00:22:48,200 --> 00:22:55,270
to production and see what happens right

00:22:50,840 --> 00:22:58,580
or would you rather take each change

00:22:55,270 --> 00:23:01,160
individual change to do on to production

00:22:58,580 --> 00:23:03,230
and see what happens see what the effect

00:23:01,160 --> 00:23:05,000
is take another one

00:23:03,230 --> 00:23:10,190
put on to production take another one

00:23:05,000 --> 00:23:12,290
put on to production I would rather see

00:23:10,190 --> 00:23:15,050
what each change what affects what

00:23:12,290 --> 00:23:17,510
regressions it had on my platform I

00:23:15,050 --> 00:23:19,010
would rather do them one by one that

00:23:17,510 --> 00:23:21,800
seems less risky

00:23:19,010 --> 00:23:23,450
that's mitigating the risk right so

00:23:21,800 --> 00:23:28,090
continuous deployment is potentially

00:23:23,450 --> 00:23:31,070
less risky than bundling up you know

00:23:28,090 --> 00:23:32,600
months of people effort and throwing

00:23:31,070 --> 00:23:35,660
onto production and just seeing what

00:23:32,600 --> 00:23:37,520
happens right the other one is if you

00:23:35,660 --> 00:23:40,460
notice there's a problem on that big

00:23:37,520 --> 00:23:43,280
week's worth of of effort what do you do

00:23:40,460 --> 00:23:46,160
you roll back a week's worth of effort

00:23:43,280 --> 00:23:49,670
so that's put you back a whole week

00:23:46,160 --> 00:23:51,710
right and not only that all of your

00:23:49,670 --> 00:23:53,600
developers are a week from there maybe

00:23:51,710 --> 00:23:55,520
even two weeks further on right you've

00:23:53,600 --> 00:23:56,630
got a week of your release that was

00:23:55,520 --> 00:23:58,490
going to production you've maybe got a

00:23:56,630 --> 00:24:00,920
week's worth of effort in your QA

00:23:58,490 --> 00:24:03,470
department and then your developers are

00:24:00,920 --> 00:24:05,690
potentially a week's worth of

00:24:03,470 --> 00:24:08,440
development ahead you might be two three

00:24:05,690 --> 00:24:12,170
weeks behind by rejecting that release

00:24:08,440 --> 00:24:14,000
or what you could do is put one small

00:24:12,170 --> 00:24:16,309
change on your platforms see if it

00:24:14,000 --> 00:24:19,400
breaks anything if it doesn't you roll

00:24:16,309 --> 00:24:21,559
back one change and one change alone

00:24:19,400 --> 00:24:24,020
that developers may be gone for coffee

00:24:21,559 --> 00:24:26,360
right they've come back and they've said

00:24:24,020 --> 00:24:28,700
hmm that didn't work but I know why

00:24:26,360 --> 00:24:29,380
right okay the context is still in their

00:24:28,700 --> 00:24:31,360
heads

00:24:29,380 --> 00:24:33,820
the impact isn't nearly as big because

00:24:31,360 --> 00:24:37,000
it's just a very small change and if it

00:24:33,820 --> 00:24:39,640
is then you know exactly the change that

00:24:37,000 --> 00:24:41,320
caused the issue rather than digging

00:24:39,640 --> 00:24:43,360
through a week's worth of effort and

00:24:41,320 --> 00:24:48,610
trying to discover what went wrong right

00:24:43,360 --> 00:24:51,150
this is it's more risk mitigation the

00:24:48,610 --> 00:24:54,120
third thing and this is something that

00:24:51,150 --> 00:24:57,549
maybe drives me to get up in the morning

00:24:54,120 --> 00:24:58,750
but when I was a graduate is to work for

00:24:57,549 --> 00:24:59,950
a company and I won't mention the

00:24:58,750 --> 00:25:02,799
company but I used to work for a company

00:24:59,950 --> 00:25:05,140
and I was involved in the release

00:25:02,799 --> 00:25:06,610
engineering area and I remember

00:25:05,140 --> 00:25:08,980
distinctly it's 3:00 in the morning

00:25:06,610 --> 00:25:12,159
getting up to do a production release

00:25:08,980 --> 00:25:14,830
right so my girlfriend at the time and

00:25:12,159 --> 00:25:17,230
my wife my wife and was really pretty

00:25:14,830 --> 00:25:18,460
angry at me for disturbing her sleep at

00:25:17,230 --> 00:25:21,520
3:00 in the morning so already I've got

00:25:18,460 --> 00:25:23,289
that angst I get my laptop out and I set

00:25:21,520 --> 00:25:24,970
it up on my dining table and I'm really

00:25:23,289 --> 00:25:27,730
tired because I've had a busy day before

00:25:24,970 --> 00:25:29,830
and I'm looking at this document this

00:25:27,730 --> 00:25:32,650
word document describing all of the

00:25:29,830 --> 00:25:34,000
steps that are meant to be there but of

00:25:32,650 --> 00:25:36,190
course no one updates a Word document

00:25:34,000 --> 00:25:38,020
when they're updating the code right so

00:25:36,190 --> 00:25:40,570
there's a bit of ambiguity if this is

00:25:38,020 --> 00:25:42,730
accurate or not and I'm taking these

00:25:40,570 --> 00:25:45,159
steps in this word document and I'm

00:25:42,730 --> 00:25:47,200
typing in config into text boxes that

00:25:45,159 --> 00:25:51,039
aren't doing any validation or any sort

00:25:47,200 --> 00:25:54,970
of things like that and then I hit go

00:25:51,039 --> 00:25:58,030
and it broke the system write production

00:25:54,970 --> 00:26:00,039
failure outage yes it was at 3 in the

00:25:58,030 --> 00:26:03,370
morning yes there were no customers

00:26:00,039 --> 00:26:05,169
affected but I had no support I had no

00:26:03,370 --> 00:26:07,990
one was awake to help me out I had no

00:26:05,169 --> 00:26:10,179
idea of what to do next because there

00:26:07,990 --> 00:26:11,740
was everybody was asleep right and as a

00:26:10,179 --> 00:26:13,380
graduate are you gonna go and wake up

00:26:11,740 --> 00:26:16,780
your boss because you've you know

00:26:13,380 --> 00:26:19,630
stumbled in a you know config mistake

00:26:16,780 --> 00:26:22,090
and have to admit to him that you give

00:26:19,630 --> 00:26:26,500
or or heard that you've made a terrible

00:26:22,090 --> 00:26:28,659
you know mistake that's just distress

00:26:26,500 --> 00:26:31,299
that you're putting on your people how

00:26:28,659 --> 00:26:33,460
dare you how dare you through that

00:26:31,299 --> 00:26:36,880
stress on individuals like that that's

00:26:33,460 --> 00:26:38,620
not cool right so you know mental health

00:26:36,880 --> 00:26:40,120
is a massive issue in in software

00:26:38,620 --> 00:26:42,250
engineering these days and I think

00:26:40,120 --> 00:26:43,000
that's a real aspect of what we're doing

00:26:42,250 --> 00:26:44,110
here we

00:26:43,000 --> 00:26:46,360
can deploy during the business day

00:26:44,110 --> 00:26:48,160
everybody's fresh everyone's alert

00:26:46,360 --> 00:26:50,530
everyone knows what's going on and if

00:26:48,160 --> 00:26:52,750
there is a problem we fix it and there

00:26:50,530 --> 00:26:54,310
are ways of mitigating your blast radius

00:26:52,750 --> 00:26:56,890
right you can work in different regions

00:26:54,310 --> 00:26:58,180
rather than have only one server you can

00:26:56,890 --> 00:27:00,460
you can do all sorts of things to

00:26:58,180 --> 00:27:02,410
mitigate your risk but don't put that

00:27:00,460 --> 00:27:03,340
risk on these these pure individuals

00:27:02,410 --> 00:27:05,620
that are just trying to meet your

00:27:03,340 --> 00:27:08,590
company work wow that got a bit deep

00:27:05,620 --> 00:27:13,300
dinner sorry right where was I um yeah

00:27:08,590 --> 00:27:16,540
right yeah okay container registries

00:27:13,300 --> 00:27:19,360
right another another learning key

00:27:16,540 --> 00:27:20,740
learning we got into containers pretty

00:27:19,360 --> 00:27:23,230
heavily we started using them in

00:27:20,740 --> 00:27:24,550
production when others didn't right you

00:27:23,230 --> 00:27:26,800
would go to these conferences and it's

00:27:24,550 --> 00:27:29,200
all like who's using containers who's

00:27:26,800 --> 00:27:31,710
using the reproduction boom right so and

00:27:29,200 --> 00:27:35,590
we started using them in production and

00:27:31,710 --> 00:27:37,180
we we discovered very quickly that one

00:27:35,590 --> 00:27:40,060
of the most important parts of your

00:27:37,180 --> 00:27:42,790
infrastructure is your your container

00:27:40,060 --> 00:27:44,920
registry and so if there's anybody from

00:27:42,790 --> 00:27:47,860
the packaged registry team here I would

00:27:44,920 --> 00:27:50,530
I would strongly advise to understand

00:27:47,860 --> 00:27:52,420
the the nuance between the two our code

00:27:50,530 --> 00:27:55,090
packages were stored in our two Factory

00:27:52,420 --> 00:27:57,070
and it didn't need to be up 24/7 because

00:27:55,090 --> 00:27:59,080
if we couldn't build code that wasn't

00:27:57,070 --> 00:28:01,630
necessarily a big problem I mean it was

00:27:59,080 --> 00:28:03,520
but it wasn't if your container registry

00:28:01,630 --> 00:28:04,960
is down and you're trying to auto scale

00:28:03,520 --> 00:28:06,820
or you're trying to do a deployment or

00:28:04,960 --> 00:28:09,310
your you have dealt with a catastrophic

00:28:06,820 --> 00:28:12,040
failure which we did and you're trying

00:28:09,310 --> 00:28:14,830
to spin up your cluster again which we

00:28:12,040 --> 00:28:16,660
we tried like there is a much bigger

00:28:14,830 --> 00:28:19,330
emphasis on your container registry

00:28:16,660 --> 00:28:22,630
system than your code packaging system

00:28:19,330 --> 00:28:25,630
it's not just another code type right

00:28:22,630 --> 00:28:27,130
this thing needs to be up 24/7 and we

00:28:25,630 --> 00:28:29,890
had an instance where a whole cluster

00:28:27,130 --> 00:28:32,320
failed and then it spun back up again

00:28:29,890 --> 00:28:35,260
because it's cloak native EWS and then

00:28:32,320 --> 00:28:37,320
it tried to grab 450 containers of

00:28:35,260 --> 00:28:40,240
different sizes and shapes all at once

00:28:37,320 --> 00:28:42,570
which immediately made our container

00:28:40,240 --> 00:28:45,820
registry fall over because yeah just a

00:28:42,570 --> 00:28:47,890
memory failure and again I'll say if

00:28:45,820 --> 00:28:49,210
anybody was clever enough to spot if we

00:28:47,890 --> 00:28:50,650
could have put a proxy in front of it

00:28:49,210 --> 00:28:52,630
and had like a rate limiting thing if

00:28:50,650 --> 00:28:54,610
you thought that come and talk to me

00:28:52,630 --> 00:28:56,830
because we're hiring right cuz that was

00:28:54,610 --> 00:28:58,179
that was not something we thought about

00:28:56,830 --> 00:28:59,830
then we had to do on the fly we had to

00:28:58,179 --> 00:29:04,000
put like a proxy in aha

00:28:59,830 --> 00:29:06,010
that was a bad 48 hours that was sad so

00:29:04,000 --> 00:29:07,419
yeah this is a big warning when you need

00:29:06,010 --> 00:29:09,220
it when you really need it it will fail

00:29:07,419 --> 00:29:14,019
on you it's waiting for a chance to get

00:29:09,220 --> 00:29:15,820
you source control the reason I'm here

00:29:14,019 --> 00:29:17,380
the reason I'm here I've just seen the

00:29:15,820 --> 00:29:20,460
next slide I apologize for the animation

00:29:17,380 --> 00:29:24,640
is all gone weird sorry source control

00:29:20,460 --> 00:29:27,340
we started to move fast we started to

00:29:24,640 --> 00:29:29,559
make lots and lots and lots of changes

00:29:27,340 --> 00:29:32,769
on our platform and our source control

00:29:29,559 --> 00:29:34,659
system started to creak at the edges now

00:29:32,769 --> 00:29:38,080
I'm not sure how much depth I can go

00:29:34,659 --> 00:29:40,090
into here but I will say that github was

00:29:38,080 --> 00:29:42,190
tremendous and Vitor who's sitting over

00:29:40,090 --> 00:29:44,860
the front and Marco who's sitting

00:29:42,190 --> 00:29:46,600
somewhere the two of them put together

00:29:44,860 --> 00:29:49,330
such a great story about github

00:29:46,600 --> 00:29:52,240
enterprise server and our adoption was

00:29:49,330 --> 00:29:55,029
slaw of github Enterprise because the

00:29:52,240 --> 00:29:56,470
operation model of and in for a github

00:29:55,029 --> 00:29:59,309
enterprise server you just spin up a

00:29:56,470 --> 00:30:02,740
single ec2 instance right all of the

00:29:59,309 --> 00:30:04,419
storage is local the elasticsearch stuff

00:30:02,740 --> 00:30:05,889
is all in there they've got loads of

00:30:04,419 --> 00:30:08,529
scripts that copy the data over to

00:30:05,889 --> 00:30:10,720
another ec2 instance whereas with the

00:30:08,529 --> 00:30:12,730
other vendor we had to run her own NFS

00:30:10,720 --> 00:30:14,019
we had to run her own elasticsearch we

00:30:12,730 --> 00:30:17,529
had to run a whole lot of other things

00:30:14,019 --> 00:30:19,600
like this was amazing and another

00:30:17,529 --> 00:30:21,880
enabler for our ops teams and our

00:30:19,600 --> 00:30:26,139
release engineering teams to just get a

00:30:21,880 --> 00:30:27,970
bit more time in the day so we ran this

00:30:26,139 --> 00:30:29,049
massive migration and if I've got time

00:30:27,970 --> 00:30:31,360
I'll talk through some of the bits and

00:30:29,049 --> 00:30:34,029
pieces I'm a bit nervous but I know I've

00:30:31,360 --> 00:30:37,769
only got five minutes so yeah we

00:30:34,029 --> 00:30:43,750
migrated 8500 Reapers over ten weeks

00:30:37,769 --> 00:30:47,110
that was a massive logistic endeavor I

00:30:43,750 --> 00:30:49,720
think it went well I think it went too

00:30:47,110 --> 00:30:52,269
well because no one's banked to me yet

00:30:49,720 --> 00:30:53,679
and I imagine like that's a good thing

00:30:52,269 --> 00:30:56,110
right if you're working as a sysadmin

00:30:53,679 --> 00:30:58,059
you make such a fundamental change and

00:30:56,110 --> 00:30:59,350
everybody's like yeah go out the next

00:30:58,059 --> 00:31:01,210
day and you know we were in github Rob

00:30:59,350 --> 00:31:04,059
and get lab and the CI worked and you

00:31:01,210 --> 00:31:05,919
know you know all of the issues and like

00:31:04,059 --> 00:31:07,480
PRS and stuff got migrated over and we

00:31:05,919 --> 00:31:09,669
didn't really notice yeah well you know

00:31:07,480 --> 00:31:10,850
good job you like ah that's that's

00:31:09,669 --> 00:31:13,160
what's being a systems admin

00:31:10,850 --> 00:31:15,560
is right you only you only get noticed

00:31:13,160 --> 00:31:18,860
when things go wrong but yeah massive

00:31:15,560 --> 00:31:20,510
reduction in our ops overhead one of the

00:31:18,860 --> 00:31:22,760
big things as we were going to

00:31:20,510 --> 00:31:25,190
continuous deployment we need to really

00:31:22,760 --> 00:31:27,740
consider our automated testing and move

00:31:25,190 --> 00:31:29,780
using checks this is an API that get

00:31:27,740 --> 00:31:32,990
help have that maybe you've not looked

00:31:29,780 --> 00:31:35,450
into but it's really cool you can you

00:31:32,990 --> 00:31:38,300
want to move your testing as far left as

00:31:35,450 --> 00:31:39,770
you can so you can use your checks when

00:31:38,300 --> 00:31:42,020
you're doing an mr something like that

00:31:39,770 --> 00:31:44,780
you can you can look at your code at

00:31:42,020 --> 00:31:47,240
that point and run up a smorgasbord of

00:31:44,780 --> 00:31:48,620
checks at that point yet don't wait till

00:31:47,240 --> 00:31:50,240
you're in production that's a bad thing

00:31:48,620 --> 00:31:52,580
move them move them lengths in fact

00:31:50,240 --> 00:31:54,080
you've got BOTS no that will look at

00:31:52,580 --> 00:31:56,000
your your code reviews and give you

00:31:54,080 --> 00:31:59,060
comments we've moved so far left or

00:31:56,000 --> 00:32:00,710
actually into the developer so yeah

00:31:59,060 --> 00:32:02,000
that's that's cool that's that's a

00:32:00,710 --> 00:32:05,680
really appropriate use

00:32:02,000 --> 00:32:09,410
so when sorry for the the animations

00:32:05,680 --> 00:32:12,170
2018 we're using github we're using ECR

00:32:09,410 --> 00:32:15,010
so that's EWS is hosted container

00:32:12,170 --> 00:32:17,540
registry drone still darker still

00:32:15,010 --> 00:32:20,120
continuous deployment still using

00:32:17,540 --> 00:32:24,110
slingshot simple workflow ECS and

00:32:20,120 --> 00:32:25,220
kubernetes no ha yeah I don't know why

00:32:24,110 --> 00:32:28,820
I'm there okay I don't work in

00:32:25,220 --> 00:32:31,370
PowerPoint sorry infrastructure is code

00:32:28,820 --> 00:32:33,620
is the next big thing for us we're we're

00:32:31,370 --> 00:32:35,420
like it's not that we've solved the

00:32:33,620 --> 00:32:36,590
software deployment model it like we're

00:32:35,420 --> 00:32:37,760
still the things to do but we're

00:32:36,590 --> 00:32:40,850
iterating on it right we're learning

00:32:37,760 --> 00:32:42,980
things but infrastructure is code is the

00:32:40,850 --> 00:32:45,200
next big thing for us how do we keep up

00:32:42,980 --> 00:32:47,360
with the kubernetes release cycle of

00:32:45,200 --> 00:32:49,370
like a major release every ten weeks

00:32:47,360 --> 00:32:51,020
that's fast when it comes to

00:32:49,370 --> 00:32:53,330
infrastructure there's not enough people

00:32:51,020 --> 00:32:55,070
thinking about that as a problem and how

00:32:53,330 --> 00:32:58,370
to actually do it deployments at that

00:32:55,070 --> 00:33:00,860
piece in an environment where if you get

00:32:58,370 --> 00:33:03,290
a cluster deployment wrong that has a

00:33:00,860 --> 00:33:06,770
big blast radius that's not just an API

00:33:03,290 --> 00:33:08,810
that's you know all of these posts sort

00:33:06,770 --> 00:33:10,760
of thing right so yeah we're working

00:33:08,810 --> 00:33:13,910
heavily on that sort of area at the

00:33:10,760 --> 00:33:17,330
moment and we're doing around 21,000

00:33:13,910 --> 00:33:19,160
deploys a month now yeah wow that's huge

00:33:17,330 --> 00:33:22,900
no it's not that's the point right we're

00:33:19,160 --> 00:33:24,620
for a text box change or a you know a

00:33:22,900 --> 00:33:27,400
spelling error

00:33:24,620 --> 00:33:30,440
we make a change right so we can make

00:33:27,400 --> 00:33:32,210
21,000 distinct changes a month on our

00:33:30,440 --> 00:33:34,340
platform so it's just a different way of

00:33:32,210 --> 00:33:36,260
approaching it but our risk and the

00:33:34,340 --> 00:33:38,600
amount of outages we have and things has

00:33:36,260 --> 00:33:40,580
just so substantially dropped and

00:33:38,600 --> 00:33:42,590
Skyscanner I'd have to deal with weird

00:33:40,580 --> 00:33:44,990
and wonderful geopolitical situations

00:33:42,590 --> 00:33:48,950
like the the president of Kazakhstan at

00:33:44,990 --> 00:33:51,890
left his post he retired and he changed

00:33:48,950 --> 00:33:53,900
the name of the capital after him you're

00:33:51,890 --> 00:33:55,669
like okay so if you're doing a flight

00:33:53,900 --> 00:33:58,700
search in sky Scout that's a big deal

00:33:55,669 --> 00:34:00,039
right we have to change things with like

00:33:58,700 --> 00:34:02,419
IATA codes as well

00:34:00,039 --> 00:34:04,730
Chucky's Airport changed their IATA code

00:34:02,419 --> 00:34:07,820
one of these static bits of data that

00:34:04,730 --> 00:34:09,500
never changes it changed right on fact

00:34:07,820 --> 00:34:11,060
no the IATA code didn't change the

00:34:09,500 --> 00:34:12,260
airport dead right they moved that they

00:34:11,060 --> 00:34:16,190
changed the airport they had to move

00:34:12,260 --> 00:34:19,639
enemy so being able to change quickly

00:34:16,190 --> 00:34:21,349
safely being able to react to situations

00:34:19,639 --> 00:34:24,290
that we can't we have no control over

00:34:21,349 --> 00:34:27,530
but we can have control over how quickly

00:34:24,290 --> 00:34:30,230
we can react to it it's a it's a big

00:34:27,530 --> 00:34:32,149
deal for us is a big game-changing deal

00:34:30,230 --> 00:34:37,609
when our companies really invested in

00:34:32,149 --> 00:34:39,169
this sort of work right one yeah okay so

00:34:37,609 --> 00:34:40,520
next things that we're looking at

00:34:39,169 --> 00:34:43,220
continuous deployment of kubernetes I've

00:34:40,520 --> 00:34:44,929
talked about package management I may be

00:34:43,220 --> 00:34:46,820
one of the only people in the world to

00:34:44,929 --> 00:34:48,859
be really excited about package

00:34:46,820 --> 00:34:51,909
management except for people that github

00:34:48,859 --> 00:34:54,260
now the announcement of this was was

00:34:51,909 --> 00:34:55,909
I've been talking about the fact that

00:34:54,260 --> 00:34:58,670
package management needs to evolve over

00:34:55,909 --> 00:35:00,890
the last like 18 months to two years if

00:34:58,670 --> 00:35:02,839
you look at my github I had I built one

00:35:00,890 --> 00:35:05,330
in go because I felt there needed to be

00:35:02,839 --> 00:35:06,770
a cloud native solution for this and

00:35:05,330 --> 00:35:09,740
there's a killer feature because of the

00:35:06,770 --> 00:35:12,170
number of builds that we do getting the

00:35:09,740 --> 00:35:13,880
packages onto the ephemeral build agents

00:35:12,170 --> 00:35:15,470
that you know we're off to scaling we're

00:35:13,880 --> 00:35:16,790
using spot instances these build agents

00:35:15,470 --> 00:35:19,070
are disappearing and starting up

00:35:16,790 --> 00:35:20,599
disappearance so caching the artifacts

00:35:19,070 --> 00:35:22,700
in the right place at the right time

00:35:20,599 --> 00:35:25,040
it's going to be critical to us going

00:35:22,700 --> 00:35:26,750
forward and scaling as a company so I'm

00:35:25,040 --> 00:35:29,089
really into again put a bit pressure and

00:35:26,750 --> 00:35:30,410
get our bomb here so this is that's

00:35:29,089 --> 00:35:32,990
something I really want to see from

00:35:30,410 --> 00:35:34,869
package management working harder

00:35:32,990 --> 00:35:37,190
reducing technical obsolete

00:35:34,869 --> 00:35:37,980
we build a lot of stuff so there's no

00:35:37,190 --> 00:35:40,500
this tree

00:35:37,980 --> 00:35:45,290
of you know systems that never happened

00:35:40,500 --> 00:35:49,260
so yeah we're working to improve that Oh

00:35:45,290 --> 00:35:51,690
seconds left right okay big deep

00:35:49,260 --> 00:35:53,630
thoughts things that I have learned and

00:35:51,690 --> 00:35:54,900
observed over the last little while

00:35:53,630 --> 00:35:57,420
enable Minh

00:35:54,900 --> 00:36:00,180
if you have a team that focuses on the

00:35:57,420 --> 00:36:03,570
enablement of others source control CI

00:36:00,180 --> 00:36:05,940
things like that enablement isn't doing

00:36:03,570 --> 00:36:09,300
things for other people it's enabling it

00:36:05,940 --> 00:36:12,359
to do them to do it for themselves so

00:36:09,300 --> 00:36:14,550
don't focus on what you can do for a

00:36:12,359 --> 00:36:17,369
squad what can a squad do for themselves

00:36:14,550 --> 00:36:19,920
right that's a huge distinction in how

00:36:17,369 --> 00:36:21,869
you run this software if you're

00:36:19,920 --> 00:36:24,359
experimenting with a Toula process try

00:36:21,869 --> 00:36:26,100
something tricep don't don't think about

00:36:24,359 --> 00:36:28,500
a six-month Gantt chart with like

00:36:26,100 --> 00:36:30,450
kubernetes try something and you will

00:36:28,500 --> 00:36:31,920
learn and you will iterate and then you

00:36:30,450 --> 00:36:34,500
can pick something that's more relevant

00:36:31,920 --> 00:36:36,359
rather than just hypothesizing about it

00:36:34,500 --> 00:36:38,340
I don't think we would have got to where

00:36:36,359 --> 00:36:40,350
we are today had we gone in with

00:36:38,340 --> 00:36:42,270
kubernetes or measles we just went for

00:36:40,350 --> 00:36:46,380
ECS because it was there and we tried it

00:36:42,270 --> 00:36:47,850
we learned and we iterated there's a lot

00:36:46,380 --> 00:36:50,010
of change in the ecosystem at the moment

00:36:47,850 --> 00:36:52,410
um lots of tools coming out lots of new

00:36:50,010 --> 00:36:53,880
things embrace this as software

00:36:52,410 --> 00:36:55,410
engineers right embrace this as

00:36:53,880 --> 00:36:56,640
engineers because that's one of the

00:36:55,410 --> 00:36:59,100
reasons you got into this industry

00:36:56,640 --> 00:37:01,140
there's lots of change there's lots of

00:36:59,100 --> 00:37:03,030
interesting things try not to get too

00:37:01,140 --> 00:37:05,160
hung up on all tools and old ways of

00:37:03,030 --> 00:37:07,410
doing things that's part of the joy of

00:37:05,160 --> 00:37:09,000
what you do and the journey of a

00:37:07,410 --> 00:37:11,609
thousand miles starts for the single

00:37:09,000 --> 00:37:13,470
step we didn't think where we were going

00:37:11,609 --> 00:37:15,210
to be in eighteen months we just had a

00:37:13,470 --> 00:37:17,369
vague idea of where we wanted to head to

00:37:15,210 --> 00:37:19,020
and we iterated and we did one small

00:37:17,369 --> 00:37:20,640
thing after another and I would advocate

00:37:19,020 --> 00:37:24,270
to anybody that's trying to take that

00:37:20,640 --> 00:37:25,980
path to do exactly the same thank you

00:37:24,270 --> 00:37:27,450
very much I appreciate your time

00:37:25,980 --> 00:37:29,640
everybody and if anybody's got any

00:37:27,450 --> 00:37:33,980
questions just please reach out to me in

00:37:29,640 --> 00:37:33,980
the social media Cheers thank you

00:37:34,740 --> 00:37:36,800
you

00:37:40,540 --> 00:37:44,239

YouTube URL: https://www.youtube.com/watch?v=8IM85gmpVVQ


