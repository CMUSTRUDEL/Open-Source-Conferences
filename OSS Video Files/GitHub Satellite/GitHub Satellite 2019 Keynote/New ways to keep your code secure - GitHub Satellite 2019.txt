Title: New ways to keep your code secure - GitHub Satellite 2019
Publication date: 2019-05-25
Playlist: GitHub Satellite 2019 Keynote
Description: 
	We’re all part of a deeply interconnected community, where the software we write builds on the work of others. Ninety-nine percent of new software projects depend on open source code. This extensive code reuse helps everyone build better software faster than ever before, but it also puts us all at risk of distributing security vulnerabilities from our dependencies. It’s more important than ever that every developer becomes a security developer—that they responsibly disclose vulnerabilities and patch vulnerable code quickly.

Today, we’re excited to announce several new security features designed to make it easier for developers to secure their code. 

About GitHub Satellite 2019
A community connected by code

Explore our interconnected community—and how collaboration turns ideas into innovations.

Join us in November at San Francisco's Palace of Fine Arts for GitHub Universe - https://githubuniverse.com/
Captions: 
	00:00:00,829 --> 00:00:09,450
good morning everyone wow those those

00:00:04,799 --> 00:00:12,690
inspiring wasn't it yeah it is amazing

00:00:09,450 --> 00:00:14,280
to think of what the interconnected

00:00:12,690 --> 00:00:16,080
community can do for software

00:00:14,280 --> 00:00:18,990
development right like think about

00:00:16,080 --> 00:00:21,869
strangers from across the world coming

00:00:18,990 --> 00:00:23,850
together collaborating and building

00:00:21,869 --> 00:00:26,939
amazing things and even creating human

00:00:23,850 --> 00:00:29,390
progress right that's so powerful with

00:00:26,939 --> 00:00:31,410
that power there's also a need for

00:00:29,390 --> 00:00:33,930
responsibility we've got to build

00:00:31,410 --> 00:00:37,290
software that is secure and trustworthy

00:00:33,930 --> 00:00:39,149
because the strength of this community

00:00:37,290 --> 00:00:41,489
is built on trust right we have to trust

00:00:39,149 --> 00:00:44,879
each other and the software that we're

00:00:41,489 --> 00:00:46,890
building is for a purpose it's for our

00:00:44,879 --> 00:00:49,079
users right and our users need to be

00:00:46,890 --> 00:00:52,920
able to trust that software and trust us

00:00:49,079 --> 00:00:55,410
so the challenge of open source security

00:00:52,920 --> 00:00:57,449
and Trust isn't some abstract thing it's

00:00:55,410 --> 00:01:00,210
something that we all need to take a

00:00:57,449 --> 00:01:03,539
part in and for sure there are

00:01:00,210 --> 00:01:06,840
challenges let me tell you a story this

00:01:03,539 --> 00:01:10,790
is the story of something called event

00:01:06,840 --> 00:01:13,350
stream event stream is a node module

00:01:10,790 --> 00:01:15,900
it's used in tens of thousands of

00:01:13,350 --> 00:01:18,479
projects including in a lot of

00:01:15,900 --> 00:01:20,369
enterprises and event stream is

00:01:18,479 --> 00:01:22,560
maintained by one developer and an

00:01:20,369 --> 00:01:25,259
amazing developer who builds a lot of

00:01:22,560 --> 00:01:27,509
other popular software projects and one

00:01:25,259 --> 00:01:29,909
day he got approached by another

00:01:27,509 --> 00:01:32,250
developer who offered to make event

00:01:29,909 --> 00:01:33,990
stream better and of course he accepted

00:01:32,250 --> 00:01:35,790
that offer right it's what you do in

00:01:33,990 --> 00:01:38,820
this open source community when people

00:01:35,790 --> 00:01:41,549
want to help you you trust them but this

00:01:38,820 --> 00:01:44,640
person was a malicious actor and what

00:01:41,549 --> 00:01:48,630
they did was they put a vulnerability

00:01:44,640 --> 00:01:52,200
into event stream and they got it

00:01:48,630 --> 00:01:54,090
published and they did it actually very

00:01:52,200 --> 00:01:57,060
cleverly they put it in a dependency and

00:01:54,090 --> 00:01:59,759
made it very hard to detect and it took

00:01:57,060 --> 00:02:02,250
almost a month for that issue to be

00:01:59,759 --> 00:02:05,490
found and in that time the package got

00:02:02,250 --> 00:02:07,829
downloaded millions of times this could

00:02:05,490 --> 00:02:09,780
have been a disaster except that they

00:02:07,829 --> 00:02:11,640
decided to do a very specific attack

00:02:09,780 --> 00:02:13,530
they didn't attack everyone they

00:02:11,640 --> 00:02:15,540
attacked one app that was

00:02:13,530 --> 00:02:17,700
using event stream it was a Bitcoin

00:02:15,540 --> 00:02:20,310
wallet app called copay and sure enough

00:02:17,700 --> 00:02:22,530
copay picked up that package they ended

00:02:20,310 --> 00:02:24,870
up having to deal with their users and

00:02:22,530 --> 00:02:27,120
send them warnings but it could have

00:02:24,870 --> 00:02:29,069
been a lot worse all right and these

00:02:27,120 --> 00:02:31,950
kinds of challenges are gonna happen and

00:02:29,069 --> 00:02:34,080
and not just because there are malicious

00:02:31,950 --> 00:02:36,420
actors out there but because of us

00:02:34,080 --> 00:02:38,130
because we're humans right humans make

00:02:36,420 --> 00:02:40,140
mistakes and when those lead to

00:02:38,130 --> 00:02:42,720
vulnerability issues we need to deal

00:02:40,140 --> 00:02:47,040
with them so we can all use better tools

00:02:42,720 --> 00:02:48,870
to help us do that now github we believe

00:02:47,040 --> 00:02:50,519
that the power of that interconnected

00:02:48,870 --> 00:02:52,650
community that helps you build software

00:02:50,519 --> 00:02:55,290
also helps you build more secure

00:02:52,650 --> 00:02:57,150
software if you think about all the

00:02:55,290 --> 00:02:58,590
people involved in this right and

00:02:57,150 --> 00:03:00,269
keeping stuff secure

00:02:58,590 --> 00:03:02,730
you've got researchers who are finding

00:03:00,269 --> 00:03:05,790
issues maintain errs were having to go

00:03:02,730 --> 00:03:07,560
fix them developers we're having to stay

00:03:05,790 --> 00:03:09,989
on top of their dependencies and make

00:03:07,560 --> 00:03:11,790
pickup those changes and then security

00:03:09,989 --> 00:03:14,130
teams or we're kind of keeping an eye on

00:03:11,790 --> 00:03:16,440
it all we need to help everyone

00:03:14,130 --> 00:03:19,590
collaborate better so we can be more

00:03:16,440 --> 00:03:21,780
secure and I want to share today some of

00:03:19,590 --> 00:03:24,690
the tools that github is providing to

00:03:21,780 --> 00:03:27,239
help do that so let's start with

00:03:24,690 --> 00:03:29,910
developers and administrators now in

00:03:27,239 --> 00:03:32,100
November 2017 we release something

00:03:29,910 --> 00:03:36,120
called security vulnerability alerts for

00:03:32,100 --> 00:03:37,980
github with this github now actually

00:03:36,120 --> 00:03:40,380
scans all of your dependencies and

00:03:37,980 --> 00:03:42,510
continuously compares them against

00:03:40,380 --> 00:03:44,310
vulnerability data and sends you an

00:03:42,510 --> 00:03:48,209
alert whenever you've got a vulnerable

00:03:44,310 --> 00:03:51,480
dependency because we're github we can

00:03:48,209 --> 00:03:53,910
do this on a planet scale so in just the

00:03:51,480 --> 00:03:57,930
last 12 months we have actually sent

00:03:53,910 --> 00:04:01,320
almost 27 million vulnerability alerts

00:03:57,930 --> 00:04:02,970
to developers now you're probably

00:04:01,320 --> 00:04:06,500
wondering how many of them actually got

00:04:02,970 --> 00:04:06,500
addressed we'll talk about that later

00:04:06,750 --> 00:04:11,920
but if you don't have owner ability

00:04:09,580 --> 00:04:14,350
alerts signed up today you can go to

00:04:11,920 --> 00:04:15,870
github and sign up but I'm also excited

00:04:14,350 --> 00:04:18,549
to announce today that we're now

00:04:15,870 --> 00:04:20,440
generally making available github

00:04:18,549 --> 00:04:25,030
vulnerability alerts for github

00:04:20,440 --> 00:04:27,100
Enterprise Server so with this even if

00:04:25,030 --> 00:04:29,530
you're doing local development insert on

00:04:27,100 --> 00:04:31,720
your server you can connect to github

00:04:29,530 --> 00:04:35,800
and you can get the same alerts to help

00:04:31,720 --> 00:04:37,630
keep your code secure I'm also excited

00:04:35,800 --> 00:04:41,260
to announce today that we're partnering

00:04:37,630 --> 00:04:43,690
with white source and white source is an

00:04:41,260 --> 00:04:45,820
industry leader in vulnerability data

00:04:43,690 --> 00:04:48,550
they collect vulnerability data from

00:04:45,820 --> 00:04:50,650
lots of different places and thanks to

00:04:48,550 --> 00:04:52,630
white source we are now making that

00:04:50,650 --> 00:04:55,720
vulnerability data available through

00:04:52,630 --> 00:04:59,650
alerts in github so we're very excited

00:04:55,720 --> 00:05:01,960
about that partnership now alerts are

00:04:59,650 --> 00:05:04,810
great but what if you want to keep on

00:05:01,960 --> 00:05:07,720
top of all of your dependencies right

00:05:04,810 --> 00:05:10,180
github dependency insights helps you do

00:05:07,720 --> 00:05:13,660
that think of github dependency insights

00:05:10,180 --> 00:05:15,390
as a full overview of all of your

00:05:13,660 --> 00:05:18,220
dependencies so you can go and

00:05:15,390 --> 00:05:20,590
understand each dependency you can go

00:05:18,220 --> 00:05:24,220
look at what's changed there who's

00:05:20,590 --> 00:05:26,050
working on it you can get this overview

00:05:24,220 --> 00:05:28,530
of all of the security state of your

00:05:26,050 --> 00:05:31,570
dependencies we're also including

00:05:28,530 --> 00:05:33,190
license information so that you can

00:05:31,570 --> 00:05:36,210
actually understand your license

00:05:33,190 --> 00:05:38,800
compliance state of all your code so

00:05:36,210 --> 00:05:41,020
dependency insights is kind of an

00:05:38,800 --> 00:05:43,900
essential tool for developers and

00:05:41,020 --> 00:05:46,360
security teams and compliance teams to

00:05:43,900 --> 00:05:48,160
work together to understand the security

00:05:46,360 --> 00:05:52,990
and compliance state of your software

00:05:48,160 --> 00:05:57,010
and it's available today now let's go

00:05:52,990 --> 00:06:00,490
ahead and look at how bugs get found and

00:05:57,010 --> 00:06:02,740
fixed now at github we've got a

00:06:00,490 --> 00:06:04,900
dedicated team that works on security

00:06:02,740 --> 00:06:07,120
issues it's an amazing team but if

00:06:04,900 --> 00:06:09,970
you've got an open source project right

00:06:07,120 --> 00:06:12,460
for a maintainer this is a hard problem

00:06:09,970 --> 00:06:15,210
right because if a security issue comes

00:06:12,460 --> 00:06:19,889
in from somewhere all of a sudden this

00:06:15,210 --> 00:06:23,759
interconnected community becomes a very

00:06:19,889 --> 00:06:26,340
our place right you've got to go race

00:06:23,759 --> 00:06:28,499
against time to go investigate the issue

00:06:26,340 --> 00:06:31,349
figure out what happened we've got to go

00:06:28,499 --> 00:06:33,389
figure out a patch get that patch built

00:06:31,349 --> 00:06:36,569
and tested get it out there issue an

00:06:33,389 --> 00:06:38,099
advisory and all the time you're hoping

00:06:36,569 --> 00:06:41,849
that you don't show up on Hacker News

00:06:38,099 --> 00:06:44,969
right right it's not not fun is it fun

00:06:41,849 --> 00:06:47,789
no so what you need is better tools to

00:06:44,969 --> 00:06:51,259
do that and today we're announcing a

00:06:47,789 --> 00:06:54,120
tool set of tools to help you so first

00:06:51,259 --> 00:06:56,520
how does a security researcher find you

00:06:54,120 --> 00:06:58,800
well in the industry there's a

00:06:56,520 --> 00:07:00,930
convention for this every big project

00:06:58,800 --> 00:07:03,569
has it it's called a security policy

00:07:00,930 --> 00:07:05,969
it helps researchers understand how to

00:07:03,569 --> 00:07:08,490
disclose bugs responsibly to you now you

00:07:05,969 --> 00:07:12,270
can have a security policy too because

00:07:08,490 --> 00:07:14,219
we're building that into github so with

00:07:12,270 --> 00:07:15,960
github security policy you can now

00:07:14,219 --> 00:07:17,939
author a security policy for your

00:07:15,960 --> 00:07:19,589
project or you can author it for your

00:07:17,939 --> 00:07:22,499
entire org and it will automatically

00:07:19,589 --> 00:07:24,150
cascade down to every repo and now

00:07:22,499 --> 00:07:28,560
researchers know how to work with you

00:07:24,150 --> 00:07:30,629
that's an important first step now once

00:07:28,560 --> 00:07:33,089
you've got that what happens when an

00:07:30,629 --> 00:07:34,800
issue comes in right like what you'd

00:07:33,089 --> 00:07:38,639
like to do is you'd like to go to a nice

00:07:34,800 --> 00:07:40,349
place with the people you trust in a

00:07:38,639 --> 00:07:43,229
private environment and be able to

00:07:40,349 --> 00:07:45,509
investigate that issue and you can now

00:07:43,229 --> 00:07:48,449
do that with something called maintainer

00:07:45,509 --> 00:07:51,199
security advisories let's take a look at

00:07:48,449 --> 00:07:53,849
how it works so a new issue comes in and

00:07:51,199 --> 00:07:56,099
what I can do is go ahead and create

00:07:53,849 --> 00:07:58,169
something called a draft advisory this

00:07:56,099 --> 00:08:01,800
is something new in github that we are

00:07:58,169 --> 00:08:04,110
announcing today so once you've done

00:08:01,800 --> 00:08:05,939
that what what you now create is this

00:08:04,110 --> 00:08:08,219
kind of entire private workspace where

00:08:05,939 --> 00:08:09,870
you can work on the problem so you can

00:08:08,219 --> 00:08:11,849
invite in the people you trust

00:08:09,870 --> 00:08:14,460
maybe that security researcher the file

00:08:11,849 --> 00:08:16,169
the issue you can go discuss you can go

00:08:14,460 --> 00:08:20,430
investigate in a completely private

00:08:16,169 --> 00:08:22,289
space when you're ready you can create

00:08:20,430 --> 00:08:25,469
something called a temporary private

00:08:22,289 --> 00:08:28,529
Fork this is a completely private Fork

00:08:25,469 --> 00:08:30,360
of your code that is available only to

00:08:28,529 --> 00:08:31,969
the people that you invite and now you

00:08:30,360 --> 00:08:34,909
can work with them honestly

00:08:31,969 --> 00:08:38,300
purity issue you can build and test the

00:08:34,909 --> 00:08:40,789
patch you'll get a unique get URL so you

00:08:38,300 --> 00:08:43,129
can use it with your get tools and when

00:08:40,789 --> 00:08:46,879
you're ready you can go ahead and merge

00:08:43,129 --> 00:08:49,639
that pull request back into your code we

00:08:46,879 --> 00:08:52,040
also provide a set of tools to help you

00:08:49,639 --> 00:08:54,800
author that advisory and submit it to

00:08:52,040 --> 00:08:57,439
get up and when you do that will take

00:08:54,800 --> 00:09:00,860
care of the rest for you we will publish

00:08:57,439 --> 00:09:03,680
that advisory and voila there's a

00:09:00,860 --> 00:09:05,509
published advisory ready to go so what

00:09:03,680 --> 00:09:09,139
we're doing with this set of tools is

00:09:05,509 --> 00:09:11,660
really helping build security best

00:09:09,139 --> 00:09:15,949
practices in open source and that's good

00:09:11,660 --> 00:09:20,689
for everyone right so with these tools

00:09:15,949 --> 00:09:23,810
and working together with our great

00:09:20,689 --> 00:09:25,430
security vendors such as hacker one we

00:09:23,810 --> 00:09:27,860
want to build these kinds of security

00:09:25,430 --> 00:09:33,079
best practices directly in the github

00:09:27,860 --> 00:09:35,089
now organizations like the CN CF have a

00:09:33,079 --> 00:09:37,879
bunch of custom security tools today and

00:09:35,089 --> 00:09:39,680
they're going to be switching to using a

00:09:37,879 --> 00:09:41,959
lot of our github tools and we're going

00:09:39,680 --> 00:09:43,970
to be working with them but you can have

00:09:41,959 --> 00:09:46,370
these tools too because our maintainer

00:09:43,970 --> 00:09:49,279
security tools are going to be available

00:09:46,370 --> 00:09:51,490
to every single open source project for

00:09:49,279 --> 00:09:51,490
free

00:09:59,580 --> 00:10:07,000
so now let's get to the hard part doing

00:10:02,920 --> 00:10:11,770
those patches yeah now it turns out the

00:10:07,000 --> 00:10:13,600
industry data shows that more than 70%

00:10:11,770 --> 00:10:17,860
of vulnerabilities actually remain

00:10:13,600 --> 00:10:20,050
unpatched for three months a lot of them

00:10:17,860 --> 00:10:22,660
go over a year and you've probably seen

00:10:20,050 --> 00:10:23,350
some news stories about this right we

00:10:22,660 --> 00:10:27,640
can do better

00:10:23,350 --> 00:10:29,200
right so we went looking at how people

00:10:27,640 --> 00:10:30,790
have tried to solve this problem how

00:10:29,200 --> 00:10:33,040
people are dealing with it what we

00:10:30,790 --> 00:10:35,290
actually found was a number of partners

00:10:33,040 --> 00:10:39,120
in our ecosystem have tried to already

00:10:35,290 --> 00:10:42,940
go solve this problem and one of them is

00:10:39,120 --> 00:10:46,030
dependable so dependable is a product

00:10:42,940 --> 00:10:48,010
that takes a great approach to trying

00:10:46,030 --> 00:10:50,230
addressing this problem of patching

00:10:48,010 --> 00:10:50,500
vulnerabilities so to tell us more about

00:10:50,230 --> 00:10:51,970
it

00:10:50,500 --> 00:10:54,980
I'd like to invite the co-founder of

00:10:51,970 --> 00:10:58,910
dependable gray Baker to the stage great

00:10:54,980 --> 00:11:04,490
[Applause]

00:10:58,910 --> 00:11:06,380
hi great thank you so tell us about how

00:11:04,490 --> 00:11:07,640
dependable came about what would what

00:11:06,380 --> 00:11:10,970
was the problem you were trying to solve

00:11:07,640 --> 00:11:13,190
well in 2004 I was working at a start-up

00:11:10,970 --> 00:11:15,860
and one of my Jobs was managing our

00:11:13,190 --> 00:11:18,590
dependencies we were payments company so

00:11:15,860 --> 00:11:20,660
we really cared about stability but we

00:11:18,590 --> 00:11:23,180
also didn't want to end up on outdated

00:11:20,660 --> 00:11:25,250
or insecure dependencies we wanted all

00:11:23,180 --> 00:11:28,130
the great features that maintainer czar

00:11:25,250 --> 00:11:30,080
pushing all the time and what we decided

00:11:28,130 --> 00:11:32,330
was that the best approach was to update

00:11:30,080 --> 00:11:33,770
our dependencies little and often so we

00:11:32,330 --> 00:11:35,360
always knew exactly what we were

00:11:33,770 --> 00:11:38,450
deploying they were always just small

00:11:35,360 --> 00:11:41,570
changes the problem was that that

00:11:38,450 --> 00:11:43,090
required me to create dozens of pull

00:11:41,570 --> 00:11:45,260
requests to update our dependencies

00:11:43,090 --> 00:11:46,970
every single week and they were

00:11:45,260 --> 00:11:48,470
beautiful pull requests I was pulling in

00:11:46,970 --> 00:11:50,300
the change log you know any release

00:11:48,470 --> 00:11:52,700
notes that were there but it was tedious

00:11:50,300 --> 00:11:54,890
manual work creating them and that's

00:11:52,700 --> 00:11:57,110
what we built depend a lot to solve so

00:11:54,890 --> 00:12:00,170
you build a baaad to automate yourself

00:11:57,110 --> 00:12:03,800
right yeah so so tell us what happened

00:12:00,170 --> 00:12:06,320
next well we used to get up by API to

00:12:03,800 --> 00:12:08,510
build this bot and it's basically like

00:12:06,320 --> 00:12:13,540
having me on your team of they seal

00:12:08,510 --> 00:12:15,980
dependencies for you so everyday

00:12:13,540 --> 00:12:17,450
dependable checks whether or not you're

00:12:15,980 --> 00:12:19,340
using the latest version of everything

00:12:17,450 --> 00:12:21,680
that you depend on and if you're not

00:12:19,340 --> 00:12:23,990
then it opens individual pull requests

00:12:21,680 --> 00:12:28,070
to update you I think we've got an

00:12:23,990 --> 00:12:29,630
example pull request to show so in that

00:12:28,070 --> 00:12:32,300
pull request you can see it's just doing

00:12:29,630 --> 00:12:33,710
a very small update it's a patch and it

00:12:32,300 --> 00:12:35,660
pulled in the change log the release

00:12:33,710 --> 00:12:37,820
notes and in this case because it's

00:12:35,660 --> 00:12:40,430
fixing a vulnerability details of the

00:12:37,820 --> 00:12:42,230
vulnerability that's being fixed the

00:12:40,430 --> 00:12:45,350
idea is to make that pull request that's

00:12:42,230 --> 00:12:48,650
easy to merge as possible so if I make a

00:12:45,350 --> 00:12:51,230
change everyone who's using my code now

00:12:48,650 --> 00:12:52,940
gets a pull request with the change and

00:12:51,230 --> 00:12:55,490
all the information they need to be able

00:12:52,940 --> 00:12:58,010
to accept that pull request yeah exactly

00:12:55,490 --> 00:13:00,680
so if you were maintainer and you push a

00:12:58,010 --> 00:13:02,240
new version then pretty soon dependable

00:13:00,680 --> 00:13:04,100
will create pull requests for everybody

00:13:02,240 --> 00:13:07,460
that's using it to update to that

00:13:04,100 --> 00:13:09,140
version and we've had over 500,000 of

00:13:07,460 --> 00:13:12,180
these pull requests merged just in the

00:13:09,140 --> 00:13:13,920
last year including by some

00:13:12,180 --> 00:13:15,870
fantastic customers who have really

00:13:13,920 --> 00:13:17,550
helped us along the way with grateful

00:13:15,870 --> 00:13:19,800
for all the feedback from folks of

00:13:17,550 --> 00:13:23,760
webpack mastodons and many others

00:13:19,800 --> 00:13:25,170
wonderful now there is one pull request

00:13:23,760 --> 00:13:28,080
that i think you and i are very excited

00:13:25,170 --> 00:13:29,820
about yeah there is shall we show them I

00:13:28,080 --> 00:13:34,220
think we should all right

00:13:29,820 --> 00:13:36,690
I am super thrilled to announce that

00:13:34,220 --> 00:13:43,970
dependable is now a part of the github

00:13:36,690 --> 00:13:49,560
family welcome to github great and

00:13:43,970 --> 00:13:51,420
that's not all is it it's not we

00:13:49,560 --> 00:13:53,580
couldn't be more excited to be joining

00:13:51,420 --> 00:13:55,530
github and we've got a feature to

00:13:53,580 --> 00:13:57,330
announce for everybody today which is

00:13:55,530 --> 00:14:00,570
that we've built automated security

00:13:57,330 --> 00:14:02,970
fixes so now whenever you receive a

00:14:00,570 --> 00:14:05,820
security alert from github you'll also

00:14:02,970 --> 00:14:09,570
get a pull request to fix that insecure

00:14:05,820 --> 00:14:11,750
vulnerability awesome how does one sign

00:14:09,570 --> 00:14:11,750
up

00:14:16,329 --> 00:14:21,019
automated security fixes are available

00:14:18,800 --> 00:14:23,450
today you can opt-in from the repo

00:14:21,019 --> 00:14:25,610
settings page on any repo they support

00:14:23,450 --> 00:14:27,350
all of the languages that security alert

00:14:25,610 --> 00:14:29,920
supports and we'll be rolling them out

00:14:27,350 --> 00:14:34,510
to everybody over the next two months

00:14:29,920 --> 00:14:34,510
wonderful thank you gray Thank You Janki

00:14:36,130 --> 00:14:42,670
so this interconnected community we have

00:14:40,310 --> 00:14:45,920
we believe that using that power

00:14:42,670 --> 00:14:48,709
together with great tools helps us write

00:14:45,920 --> 00:14:50,449
more secure code be able to use other

00:14:48,709 --> 00:14:52,880
people's code with more confidence and

00:14:50,449 --> 00:14:55,100
ultimately build applications our users

00:14:52,880 --> 00:14:56,990
trust and today we're giving you a set

00:14:55,100 --> 00:14:58,220
of tools to do that and we want to we'll

00:14:56,990 --> 00:14:59,600
continue to work with you

00:14:58,220 --> 00:15:06,989
thank you

00:14:59,600 --> 00:15:06,989

YouTube URL: https://www.youtube.com/watch?v=e01LOzSqDCI


