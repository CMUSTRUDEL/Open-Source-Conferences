Title: OSDC 2019: Single Sign On with Keycloak: why and how by Julien Pivotto
Publication date: 2019-05-21
Playlist: OSDC 2019 | Open Source Data Center Conference
Description: 
	Modern infrastructures come distributed. Laws require you to log more information. Because of those two aspects, using single sign on is almost mandatory. Letâ€™s focus on Keycloak and what it can bring to your entreprise, from the faster login time to the centralized users and permissions management. We will also cover the automation and monitoring of the solution.

NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de
Blog: http://blog.netways.de
Webinare: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh

https://www.frametraxx.de/
Captions: 
	00:00:01,140 --> 00:00:10,550
[Music]

00:00:16,220 --> 00:00:25,650
so in Taurus we my in which basically I

00:00:21,689 --> 00:00:27,840
work on automation and monitoring and

00:00:25,650 --> 00:00:29,310
what you need to know about in which is

00:00:27,840 --> 00:00:31,309
that we have an open-source company

00:00:29,310 --> 00:00:34,559
across Europe and we help our customers

00:00:31,309 --> 00:00:37,190
dealing with all kind of challenges

00:00:34,559 --> 00:00:41,579
using open source technologies

00:00:37,190 --> 00:00:45,090
so let's first that to talk a bit about

00:00:41,579 --> 00:00:49,739
security because we all know what

00:00:45,090 --> 00:00:52,170
security is and we all know like what we

00:00:49,739 --> 00:00:55,170
need to do when we use passwords at work

00:00:52,170 --> 00:00:57,390
usually you will have one password for

00:00:55,170 --> 00:00:59,640
your big company email service you will

00:00:57,390 --> 00:01:01,890
have the same for your maybe your

00:00:59,640 --> 00:01:05,010
desktop and then you will have a local

00:01:01,890 --> 00:01:06,990
service maybe just look at it to the

00:01:05,010 --> 00:01:08,670
country which will provide you another

00:01:06,990 --> 00:01:10,530
password that will be a different one

00:01:08,670 --> 00:01:12,119
and then you will have a customer

00:01:10,530 --> 00:01:15,090
infrastructure when you will have

00:01:12,119 --> 00:01:17,250
another password and at the end you f3

00:01:15,090 --> 00:01:19,200
old wiki's that no one wants to update

00:01:17,250 --> 00:01:23,820
anymore but where you still have local

00:01:19,200 --> 00:01:27,000
users and local passwords so passwords

00:01:23,820 --> 00:01:30,210
are difficult and updating them or

00:01:27,000 --> 00:01:33,659
keeping track of all of them is often

00:01:30,210 --> 00:01:37,590
difficult to and when you look at the

00:01:33,659 --> 00:01:40,200
plastic login workflow in infrastructure

00:01:37,590 --> 00:01:41,820
what you will have is usually a form on

00:01:40,200 --> 00:01:44,040
your application with your anonymous

00:01:41,820 --> 00:01:46,229
password then you will send that

00:01:44,040 --> 00:01:48,240
password to the application so it will

00:01:46,229 --> 00:01:51,360
know your password and then it would go

00:01:48,240 --> 00:01:54,090
to the LDAP Active Directory or open

00:01:51,360 --> 00:01:57,030
LDAP or anything and CA is that user

00:01:54,090 --> 00:01:58,979
using that password is that correct so

00:01:57,030 --> 00:02:02,520
at the annual application will get your

00:01:58,979 --> 00:02:04,560
username and your password which is

00:02:02,520 --> 00:02:08,789
something which is not really nice

00:02:04,560 --> 00:02:11,400
because we have multiple applications so

00:02:08,789 --> 00:02:13,230
the password they have in the Active

00:02:11,400 --> 00:02:14,670
Directory database but

00:02:13,230 --> 00:02:17,519
sometimes they are just taught in plain

00:02:14,670 --> 00:02:19,349
text sometimes it's in a database and

00:02:17,519 --> 00:02:20,760
you also have that in your kind of

00:02:19,349 --> 00:02:22,650
password manager because you can not

00:02:20,760 --> 00:02:26,190
remember them so basically your password

00:02:22,650 --> 00:02:29,730
is everywhere and it doesn't even count

00:02:26,190 --> 00:02:31,860
when it goes from the front end to the

00:02:29,730 --> 00:02:33,870
back end for example so you know lots of

00:02:31,860 --> 00:02:34,950
companies still think that between the

00:02:33,870 --> 00:02:37,709
front and the back end you can just

00:02:34,950 --> 00:02:40,379
leave with HTTP and just send basic

00:02:37,709 --> 00:02:46,140
authentication so yeah your password is

00:02:40,379 --> 00:02:49,459
basically everywhere so every

00:02:46,140 --> 00:02:52,829
application can know the password and

00:02:49,459 --> 00:02:57,299
LDAP is binding your application twelth

00:02:52,829 --> 00:02:59,160
app is not solution for that and when

00:02:57,299 --> 00:03:00,420
you look at the classic well for ask a

00:02:59,160 --> 00:03:01,950
while you just need to type your

00:03:00,420 --> 00:03:03,690
password everywhere and all the

00:03:01,950 --> 00:03:06,510
application will know your password and

00:03:03,690 --> 00:03:08,220
go to the LDAP directory and you also

00:03:06,510 --> 00:03:12,209
have to do our application we just

00:03:08,220 --> 00:03:14,430
thought the password in the local user

00:03:12,209 --> 00:03:16,049
database and because you are lazy you

00:03:14,430 --> 00:03:18,299
will just put the same password

00:03:16,049 --> 00:03:22,530
everywhere so basically anyone knows

00:03:18,299 --> 00:03:24,750
your password now hopefully you can fix

00:03:22,530 --> 00:03:27,540
that by adding a small remember me

00:03:24,750 --> 00:03:29,099
checkbox so that you will just get a

00:03:27,540 --> 00:03:32,250
cookies forever and you don't need to

00:03:29,099 --> 00:03:36,239
log in again so that's how most of the

00:03:32,250 --> 00:03:38,519
IT department fix that sea of password

00:03:36,239 --> 00:03:41,190
just yeah you know just put remember me

00:03:38,519 --> 00:03:45,569
so that we you don't send your password

00:03:41,190 --> 00:03:47,760
you just send the cookie all the time so

00:03:45,569 --> 00:03:49,950
why do we still use password that's a

00:03:47,760 --> 00:03:51,690
good question I guess the reason we use

00:03:49,950 --> 00:03:54,030
to lose passwords is very simple anyone

00:03:51,690 --> 00:03:56,310
knows you type your username you type

00:03:54,030 --> 00:03:58,319
your password and also a lot of

00:03:56,310 --> 00:03:59,750
application cannot deal with anything

00:03:58,319 --> 00:04:01,709
else than passwords

00:03:59,750 --> 00:04:03,950
apart from this reason yeah I don't

00:04:01,709 --> 00:04:06,930
really know why we use password

00:04:03,950 --> 00:04:09,299
especially since when you speak about

00:04:06,930 --> 00:04:11,010
password nowadays you have P key I so

00:04:09,299 --> 00:04:13,620
some companies provide you with a smart

00:04:11,010 --> 00:04:15,239
card you have two-factor authentication

00:04:13,620 --> 00:04:19,139
so that you need your phone you need

00:04:15,239 --> 00:04:20,940
another item to do that and then we did

00:04:19,139 --> 00:04:22,140
the last point which is Federation a

00:04:20,940 --> 00:04:25,530
single sign-on which means that

00:04:22,140 --> 00:04:26,919
basically you don't send your password

00:04:25,530 --> 00:04:33,039
to the application but you

00:04:26,919 --> 00:04:35,499
another proof of identity so next to all

00:04:33,039 --> 00:04:36,960
those passwords that we have what do we

00:04:35,499 --> 00:04:40,900
have nowadays

00:04:36,960 --> 00:04:43,749
well we have something called security

00:04:40,900 --> 00:04:45,789
requirements which means that if someone

00:04:43,749 --> 00:04:48,729
gets successful application you should

00:04:45,789 --> 00:04:51,669
be able to know who why and when

00:04:48,729 --> 00:04:53,919
basically and when you have access to

00:04:51,669 --> 00:04:56,710
some resources you should always get

00:04:53,919 --> 00:04:59,139
only like the minimum privilege for the

00:04:56,710 --> 00:05:01,659
application so like if you want to get

00:04:59,139 --> 00:05:03,520
access to database you should only get

00:05:01,659 --> 00:05:06,250
access if you don't need write access

00:05:03,520 --> 00:05:08,080
all that kind of stiff of things are

00:05:06,250 --> 00:05:10,629
stuff that we see all the time nowadays

00:05:08,080 --> 00:05:14,169
you should also be able to revoke the

00:05:10,629 --> 00:05:17,860
access of someone so if someone is fired

00:05:14,169 --> 00:05:20,409
tomorrow and you have a unique admin

00:05:17,860 --> 00:05:23,139
password for I don't know any

00:05:20,409 --> 00:05:25,150
application then will you change all

00:05:23,139 --> 00:05:27,129
those passwords or just say I know it

00:05:25,150 --> 00:05:29,589
will not do anything but know that yes

00:05:27,129 --> 00:05:30,939
you have the company so he working

00:05:29,589 --> 00:05:34,270
access is also something that's

00:05:30,939 --> 00:05:37,270
important to do and that is not scalable

00:05:34,270 --> 00:05:40,270
if you don't have a way to centralize

00:05:37,270 --> 00:05:42,039
all of that and then two-factor

00:05:40,270 --> 00:05:44,639
authentication is also important because

00:05:42,039 --> 00:05:47,860
at the end your password will end up

00:05:44,639 --> 00:05:50,199
everywhere and being a girl able to

00:05:47,860 --> 00:05:52,569
prove but that it's Ryu and that it's

00:05:50,199 --> 00:05:53,919
not some someone else using your

00:05:52,569 --> 00:06:01,000
password is something that's really

00:05:53,919 --> 00:06:02,919
important too so being able to know who

00:06:01,000 --> 00:06:06,849
you are and what you can do is really

00:06:02,919 --> 00:06:09,159
important and that's what I am means so

00:06:06,849 --> 00:06:13,120
I am means identity and access

00:06:09,159 --> 00:06:18,270
management so identity just means hi hi

00:06:13,120 --> 00:06:22,389
I'm Ginny avato and I am a sysadmin

00:06:18,270 --> 00:06:24,339
access will mean yeah is what I am see

00:06:22,389 --> 00:06:26,830
that Mina so I have the rights to do

00:06:24,339 --> 00:06:29,110
what the season means do and when you

00:06:26,830 --> 00:06:31,180
think about I am it's for people for

00:06:29,110 --> 00:06:32,800
machines and for application so the

00:06:31,180 --> 00:06:35,620
application should also be able to

00:06:32,800 --> 00:06:38,409
authenticate themselves so that if an

00:06:35,620 --> 00:06:39,639
application try to with the database you

00:06:38,409 --> 00:06:40,720
should be able to check that it's

00:06:39,639 --> 00:06:42,850
written can

00:06:40,720 --> 00:06:44,590
the database and not someone else about

00:06:42,850 --> 00:06:47,230
internet there are multiple ways to do

00:06:44,590 --> 00:06:55,210
this so that is basically a very

00:06:47,230 --> 00:06:57,490
simplified view of a I am and I am in

00:06:55,210 --> 00:07:00,910
this presentation will use the protocol

00:06:57,490 --> 00:07:03,490
open ID Connect which basically it's a

00:07:00,910 --> 00:07:07,210
standard that is used by a lot of people

00:07:03,490 --> 00:07:10,270
and the whole point about Open ID

00:07:07,210 --> 00:07:14,670
Connect is to use tokens and that the

00:07:10,270 --> 00:07:18,040
token is provided by a third party which

00:07:14,670 --> 00:07:20,440
which you will own well which you know

00:07:18,040 --> 00:07:25,000
here will be like key o'clock so

00:07:20,440 --> 00:07:27,880
basically it is a flow using open and

00:07:25,000 --> 00:07:29,500
connect so instead of providing your

00:07:27,880 --> 00:07:32,410
username and your password to your

00:07:29,500 --> 00:07:34,419
application which is on this side you

00:07:32,410 --> 00:07:38,919
will have you will say I want to login

00:07:34,419 --> 00:07:41,770
now so you will go to an application key

00:07:38,919 --> 00:07:45,130
clock that will get your username and

00:07:41,770 --> 00:07:49,510
your password met that application will

00:07:45,130 --> 00:07:52,419
be dedicated to just doing the Identity

00:07:49,510 --> 00:07:54,310
and Access Management what that

00:07:52,419 --> 00:07:56,410
application will do then it will check

00:07:54,310 --> 00:07:59,560
your username and your password to the

00:07:56,410 --> 00:08:01,810
other database and then send you back to

00:07:59,560 --> 00:08:05,590
the application with what is called an

00:08:01,810 --> 00:08:08,080
authorization code the authorization

00:08:05,590 --> 00:08:10,120
code will enable the application at the

00:08:08,080 --> 00:08:13,630
bottom to go back to click look and say

00:08:10,120 --> 00:08:16,240
hey who is that user that come to me

00:08:13,630 --> 00:08:19,180
with that with that authorization good

00:08:16,240 --> 00:08:21,640
and then that application will get from

00:08:19,180 --> 00:08:25,090
the geek rogue a token that will say hey

00:08:21,640 --> 00:08:28,570
this is G a pivot oh and he is a Siddha

00:08:25,090 --> 00:08:30,729
mean so that I never provided my

00:08:28,570 --> 00:08:33,820
password to the first application and

00:08:30,729 --> 00:08:35,860
the first application trust the key

00:08:33,820 --> 00:08:38,830
clocks are brought to know Who am I Who

00:08:35,860 --> 00:08:42,460
am I Who I am because I have the token

00:08:38,830 --> 00:08:44,440
from the application that token is that

00:08:42,460 --> 00:08:46,990
authorization code is very short leaf so

00:08:44,440 --> 00:08:49,300
if it gets thrown on the way well you

00:08:46,990 --> 00:08:51,730
will probably not be able to use it so

00:08:49,300 --> 00:08:54,700
now the application knows Who am I and

00:08:51,730 --> 00:08:56,680
what I can do and because the token is

00:08:54,700 --> 00:09:02,650
science it also know that this is the

00:08:56,680 --> 00:09:04,840
reality and when you have that workflow

00:09:02,650 --> 00:09:07,240
a skill so you have multiple

00:09:04,840 --> 00:09:08,860
applications well only the first time

00:09:07,240 --> 00:09:11,500
you need to type your username and your

00:09:08,860 --> 00:09:13,570
password because the next time key clock

00:09:11,500 --> 00:09:16,570
will see that you have already logged in

00:09:13,570 --> 00:09:19,450
so it will just redirect you directly

00:09:16,570 --> 00:09:20,950
into the 2g application so basically you

00:09:19,450 --> 00:09:23,440
don't need to log in anymore anyway

00:09:20,950 --> 00:09:25,810
anymore and you will just get new

00:09:23,440 --> 00:09:28,540
authorization codes so that the other

00:09:25,810 --> 00:09:32,500
applications can fetch the - another

00:09:28,540 --> 00:09:33,010
token - so basically that's what single

00:09:32,500 --> 00:09:35,320
sign-on

00:09:33,010 --> 00:09:38,560
is about it's basically you sign one you

00:09:35,320 --> 00:09:40,750
sign in once to an application and then

00:09:38,560 --> 00:09:42,610
you don't need to sign in again and all

00:09:40,750 --> 00:09:45,010
of that is based on the open data

00:09:42,610 --> 00:09:48,340
collect protocol so on those signed

00:09:45,010 --> 00:09:52,900
tokens and those cytokines are really

00:09:48,340 --> 00:09:58,420
important because they tell exactly they

00:09:52,900 --> 00:10:01,150
will secure all the process so that's

00:09:58,420 --> 00:10:03,640
one of those tokens so it's protocol

00:10:01,150 --> 00:10:06,580
name JSON web token and this is

00:10:03,640 --> 00:10:10,570
basically an access token that Key Club

00:10:06,580 --> 00:10:13,600
can provide you it's split in three

00:10:10,570 --> 00:10:16,420
parts so which I will explain and

00:10:13,600 --> 00:10:19,300
basically you have a website that where

00:10:16,420 --> 00:10:21,580
you can put your web tokens and just see

00:10:19,300 --> 00:10:24,130
them decrypt it which you should not do

00:10:21,580 --> 00:10:27,640
with your pollution tokens anyway

00:10:24,130 --> 00:10:29,560
so therefore sorry so the first part of

00:10:27,640 --> 00:10:32,560
the token will be the header like it

00:10:29,560 --> 00:10:37,500
will say okay this is a GWT token and

00:10:32,560 --> 00:10:42,400
the algorithm to that is uses a chest

00:10:37,500 --> 00:10:45,220
256 easy the second part will be the

00:10:42,400 --> 00:10:51,370
payload like a decision pivotal this

00:10:45,220 --> 00:10:54,130
token was made for OS DC and his name is

00:10:51,370 --> 00:10:58,570
well appeared in wizard EU and then is a

00:10:54,130 --> 00:11:00,940
speaker and then you have the time where

00:10:58,570 --> 00:11:04,600
the token was issued and the time when

00:11:00,940 --> 00:11:08,259
it will expire usually the expiry time

00:11:04,600 --> 00:11:09,850
is quite short because

00:11:08,259 --> 00:11:12,579
you have to kind of talk and so I will

00:11:09,850 --> 00:11:15,339
come back just in a second so this is

00:11:12,579 --> 00:11:20,169
the payload this is a JSON file that

00:11:15,339 --> 00:11:23,139
just tells who I am and what can I do

00:11:20,169 --> 00:11:27,999
this is Colt claims so this is the

00:11:23,139 --> 00:11:30,729
claims of the token and the last part is

00:11:27,999 --> 00:11:33,699
just the signature so that an attacker

00:11:30,729 --> 00:11:37,269
cannot make a fake token instead of kick

00:11:33,699 --> 00:11:39,609
lock so the signature is signed with a

00:11:37,269 --> 00:11:41,919
public key and a public key while the

00:11:39,609 --> 00:11:45,339
application already knows it it fetches

00:11:41,919 --> 00:11:50,129
it at the key o'clock he had the

00:11:45,339 --> 00:11:53,859
well-known endpoint so the web token

00:11:50,129 --> 00:11:55,479
there are two kind of tokens in open a

00:11:53,859 --> 00:11:57,759
deacon act you have an access token and

00:11:55,479 --> 00:12:00,009
a refresh token all you need to know

00:11:57,759 --> 00:12:01,539
from now is just the access token will

00:12:00,009 --> 00:12:06,489
grant you access to the resources it

00:12:01,539 --> 00:12:08,769
will usually be like five minutes long

00:12:06,489 --> 00:12:10,539
or twenty minutes and then you have the

00:12:08,769 --> 00:12:13,660
Refresh token and the Refresh token

00:12:10,539 --> 00:12:16,989
basically is used to be able to renew

00:12:13,660 --> 00:12:18,910
the access token so it means that the

00:12:16,989 --> 00:12:21,069
Refresh token you must stop it very

00:12:18,910 --> 00:12:28,419
carefully because if you have it you can

00:12:21,069 --> 00:12:33,039
always when you the access token so the

00:12:28,419 --> 00:12:35,049
claims as I told you before it they tell

00:12:33,039 --> 00:12:38,169
you who you are and what you can do but

00:12:35,049 --> 00:12:40,089
what's important is because it is signed

00:12:38,169 --> 00:12:42,879
by the key clock server I don't need to

00:12:40,089 --> 00:12:44,769
register to the first application so if

00:12:42,879 --> 00:12:47,410
my user is not knowing the application

00:12:44,769 --> 00:12:48,999
it is nothing because key clock

00:12:47,410 --> 00:12:51,069
transmitter is a use of coal junior

00:12:48,999 --> 00:12:53,199
pivot oh so I should probably create it

00:12:51,069 --> 00:12:55,269
because I know it's true I know it's key

00:12:53,199 --> 00:12:56,559
clock so basically you don't need to

00:12:55,269 --> 00:12:59,199
register all all the different

00:12:56,559 --> 00:13:00,909
applications and it also means that all

00:12:59,199 --> 00:13:03,639
the application does not know all the

00:13:00,909 --> 00:13:05,559
users in advance you can use a Panaji

00:13:03,639 --> 00:13:07,539
connect to log in with your github

00:13:05,559 --> 00:13:10,629
account to a third-party application and

00:13:07,539 --> 00:13:12,819
the tappety application will not get all

00:13:10,629 --> 00:13:17,919
the get abused or they will just get the

00:13:12,819 --> 00:13:20,669
ones who are actually singing in so

00:13:17,919 --> 00:13:22,060
basically the passwords that we send to

00:13:20,669 --> 00:13:26,790
applications

00:13:22,060 --> 00:13:26,790
gun except for the kickoff server itself

00:13:27,120 --> 00:13:32,770
so the that kick look will never send

00:13:30,310 --> 00:13:35,230
your password to anyone else except if

00:13:32,770 --> 00:13:38,650
you use well that back-end but that's

00:13:35,230 --> 00:13:40,630
out of the scope and the application

00:13:38,650 --> 00:13:43,780
never gets your password so they cannot

00:13:40,630 --> 00:13:47,170
use your identity for some anything else

00:13:43,780 --> 00:13:49,960
also in the token you all you have an

00:13:47,170 --> 00:13:52,570
audience which is basically for who that

00:13:49,960 --> 00:13:55,210
token was made so if I want to go to my

00:13:52,570 --> 00:13:57,700
application a and take a token that was

00:13:55,210 --> 00:13:59,770
made for my application B application B

00:13:57,700 --> 00:14:04,770
will normally just reject the token si

00:13:59,770 --> 00:14:08,080
hey ty token was not made for me and

00:14:04,770 --> 00:14:10,990
because you have kick rogue and Kiku

00:14:08,080 --> 00:14:13,090
comes with auditing built in you have

00:14:10,990 --> 00:14:16,870
auditing for anyone that locks into any

00:14:13,090 --> 00:14:19,510
application in your in your environment

00:14:16,870 --> 00:14:21,700
so instead of looking at we connected to

00:14:19,510 --> 00:14:24,100
that the hilt wiki where do I find its

00:14:21,700 --> 00:14:26,710
information is that India patchy Docs

00:14:24,100 --> 00:14:28,360
yes and the other one is since some

00:14:26,710 --> 00:14:30,520
crappy locks and the last one we don't

00:14:28,360 --> 00:14:32,770
know who logged in with Key Club yes

00:14:30,520 --> 00:14:34,960
exactly okay that user was authorized to

00:14:32,770 --> 00:14:37,750
access that application at that time and

00:14:34,960 --> 00:14:39,760
as a user you can also say okay you want

00:14:37,750 --> 00:14:42,070
to revoke my tokens I want to log out of

00:14:39,760 --> 00:14:49,030
everything and all your tokens will be

00:14:42,070 --> 00:14:52,180
just revoked so it also enables you to

00:14:49,030 --> 00:14:55,450
tell okay we have single sign-on on

00:14:52,180 --> 00:14:56,589
place we know where anyone locks in so

00:14:55,450 --> 00:14:59,830
we don't need anything else for the

00:14:56,589 --> 00:15:04,930
moment we have checked a lot of stuff in

00:14:59,830 --> 00:15:07,000
the security list the well known is also

00:15:04,930 --> 00:15:13,780
important it is the URL that you can

00:15:07,000 --> 00:15:17,140
give to your to your clients that will

00:15:13,780 --> 00:15:19,690
tell okay in here is all the addresses

00:15:17,140 --> 00:15:23,410
to get the token and the certificates so

00:15:19,690 --> 00:15:26,890
if I go to it lab dot comes dot

00:15:23,410 --> 00:15:29,110
well-known open ID configuration then

00:15:26,890 --> 00:15:33,580
you will see okay Isis if I want to

00:15:29,110 --> 00:15:35,590
connect a user against against gitlab

00:15:33,580 --> 00:15:38,980
then here is the you

00:15:35,590 --> 00:15:42,490
that I need to use so this is when I

00:15:38,980 --> 00:15:45,060
need to send them to login it is where I

00:15:42,490 --> 00:15:47,890
can get the token here is when I can get

00:15:45,060 --> 00:15:51,040
the information about the user and his

00:15:47,890 --> 00:15:54,040
for example the keys so with that URL I

00:15:51,040 --> 00:15:58,120
know what we were in with which keys

00:15:54,040 --> 00:16:01,750
gitlab will sign the tokens and I can

00:15:58,120 --> 00:16:06,940
just validate the signature so this is

00:16:01,750 --> 00:16:10,150
built-in in the open ID protocol under

00:16:06,940 --> 00:16:12,520
the dot well-known so basically if you

00:16:10,150 --> 00:16:16,240
know well known is poly because of let's

00:16:12,520 --> 00:16:25,060
encrypt but you it is also used for open

00:16:16,240 --> 00:16:29,200
ID connect so key club there will be a

00:16:25,060 --> 00:16:31,050
few demo today I hope they will work we

00:16:29,200 --> 00:16:34,330
will see it will be interesting

00:16:31,050 --> 00:16:38,770
so keep log key clock is from reddit

00:16:34,330 --> 00:16:41,589
it's a database project and basically

00:16:38,770 --> 00:16:45,220
it's support not only OpenID connect but

00:16:41,589 --> 00:16:47,680
also like sam'l 2.0 and basically what

00:16:45,220 --> 00:16:51,250
it is it's a java application so if you

00:16:47,680 --> 00:16:53,350
don't like Java and it's a Wi-Fi

00:16:51,250 --> 00:16:56,170
application server so if you don't like

00:16:53,350 --> 00:16:59,280
gypos okay

00:16:56,170 --> 00:17:01,630
the upside of it being a Jebus

00:16:59,280 --> 00:17:04,510
application server is that if you are in

00:17:01,630 --> 00:17:06,730
2g possible fly you can really tune key

00:17:04,510 --> 00:17:09,730
clock like you want you can easily put

00:17:06,730 --> 00:17:12,760
it in i've ability in cluster anything

00:17:09,730 --> 00:17:15,010
you want if you don't really know what

00:17:12,760 --> 00:17:17,709
gee boss is or what while fly is you

00:17:15,010 --> 00:17:20,079
don't need to know because key clock

00:17:17,709 --> 00:17:24,390
comes with a single package and

00:17:20,079 --> 00:17:24,390
everything is into that so

00:17:36,830 --> 00:17:54,960
okay so so when you get kicked look you

00:17:49,830 --> 00:17:57,000
have a bunch of files so 4,000 files

00:17:54,960 --> 00:18:02,970
because it's Java and it's riffing into

00:17:57,000 --> 00:18:04,950
that and you have a bin directory with a

00:18:02,970 --> 00:18:11,180
standalone data series that you can just

00:18:04,950 --> 00:18:17,850
launch to to see key clock running so

00:18:11,180 --> 00:18:20,460
let's just don't kick lock now because I

00:18:17,850 --> 00:18:25,070
I start with a clean database so this is

00:18:20,460 --> 00:18:35,880
a completely new key clock so now I will

00:18:25,070 --> 00:18:38,400
open get log pop 8080 and then I have a

00:18:35,880 --> 00:18:40,050
page that tells me hey welcome to kick

00:18:38,400 --> 00:18:44,970
lock and then I can create my

00:18:40,050 --> 00:18:48,750
administrator password you can actually

00:18:44,970 --> 00:18:56,190
like I will put admin admin because I

00:18:48,750 --> 00:19:00,150
can but basically you can also do all of

00:18:56,190 --> 00:19:03,470
that with command line and just it's

00:19:00,150 --> 00:19:07,290
easier to show you know that no so no no

00:19:03,470 --> 00:19:08,970
I am I can access the administration

00:19:07,290 --> 00:19:10,860
console because my admin user has

00:19:08,970 --> 00:19:13,320
created so I need to log in so this is

00:19:10,860 --> 00:19:17,160
the login form of kick lock by default

00:19:13,320 --> 00:19:22,280
so if I put admin admin now I am locked

00:19:17,160 --> 00:19:25,230
in in the kick lock interface okay so

00:19:22,280 --> 00:19:29,370
you see it's a big wall fly it's very

00:19:25,230 --> 00:19:32,130
easy to start and to set up so what key

00:19:29,370 --> 00:19:35,010
clock can also do and we won't show

00:19:32,130 --> 00:19:36,240
everything today but because it's put up

00:19:35,010 --> 00:19:40,560
an ad connect you can have users are

00:19:36,240 --> 00:19:42,540
connecting from beat up or good luck it

00:19:40,560 --> 00:19:44,670
can do Phaedo so fiddle is like the

00:19:42,540 --> 00:19:47,670
small you bikies when you click on them

00:19:44,670 --> 00:19:48,670
and then you are logged in two-factor

00:19:47,670 --> 00:19:52,540
authentication

00:19:48,670 --> 00:19:54,780
is way you need your phone and to scan a

00:19:52,540 --> 00:19:57,310
QR code and then until one time password

00:19:54,780 --> 00:19:59,200
you can have custom loading looking

00:19:57,310 --> 00:20:01,810
workflow so that if you want your user

00:19:59,200 --> 00:20:03,690
to do something special at the middle of

00:20:01,810 --> 00:20:08,620
the login procedure you can do that like

00:20:03,690 --> 00:20:12,460
adding an extra screen asking for some

00:20:08,620 --> 00:20:15,940
questions you can also ask for a consent

00:20:12,460 --> 00:20:18,790
of terms and conditions so that you will

00:20:15,940 --> 00:20:21,250
access that service please validate that

00:20:18,790 --> 00:20:23,170
you agree with those rules and then the

00:20:21,250 --> 00:20:25,810
user needs to consent otherwise it

00:20:23,170 --> 00:20:28,240
cannot access the application you can

00:20:25,810 --> 00:20:29,770
use it to log into OpenShift which is

00:20:28,240 --> 00:20:30,610
something which is new I have not tested

00:20:29,770 --> 00:20:35,200
that yet

00:20:30,610 --> 00:20:37,300
I think it's released now and then you

00:20:35,200 --> 00:20:39,340
can do the u.s. management so that if

00:20:37,300 --> 00:20:41,920
you want application when user can

00:20:39,340 --> 00:20:44,290
register change that password put a

00:20:41,920 --> 00:20:47,350
password policy all of that can also be

00:20:44,290 --> 00:20:50,950
done with by key clock so Key Club can

00:20:47,350 --> 00:20:53,620
do just from the minimum thing like just

00:20:50,950 --> 00:20:55,810
to the login path to everything like

00:20:53,620 --> 00:20:57,880
merging all the users and also

00:20:55,810 --> 00:21:00,670
synchronizing them to an activity or

00:20:57,880 --> 00:21:07,540
LDAP server all of that is possible with

00:21:00,670 --> 00:21:11,140
key clock so there are three things in

00:21:07,540 --> 00:21:12,490
Key Club that I want to show you now so

00:21:11,140 --> 00:21:15,340
that you will understand the rest of the

00:21:12,490 --> 00:21:20,080
torque the first word is rhythm so

00:21:15,340 --> 00:21:24,040
basically it is a set of users a set of

00:21:20,080 --> 00:21:26,850
groups a set of clients so basically in

00:21:24,040 --> 00:21:29,590
this case I would hit him example and

00:21:26,850 --> 00:21:31,840
that is where I will log in for the

00:21:29,590 --> 00:21:37,120
moment so basically key o'clock comes

00:21:31,840 --> 00:21:39,190
with a master him and that master you

00:21:37,120 --> 00:21:42,070
should not use it because it has all the

00:21:39,190 --> 00:21:45,670
rights on all the other realms so anyone

00:21:42,070 --> 00:21:47,530
we can log into the master rail so the

00:21:45,670 --> 00:21:52,890
default one can do anything on the key

00:21:47,530 --> 00:21:52,890
o'clock so I create an example ring I

00:21:53,280 --> 00:21:58,770
can put a display name of gmail name

00:21:55,990 --> 00:21:58,770
anything and

00:21:59,320 --> 00:22:14,500
so now I have an example where my users

00:22:02,140 --> 00:22:22,110
can login so good in example login I

00:22:14,500 --> 00:22:24,930
guess anyway we will find that later on

00:22:22,110 --> 00:22:28,270
then you have the clients so the clients

00:22:24,930 --> 00:22:30,940
the list of the application that can ask

00:22:28,270 --> 00:22:33,760
peacock for login so that I want to

00:22:30,940 --> 00:22:36,910
login to application a then I need to

00:22:33,760 --> 00:22:39,400
have the token for application a well

00:22:36,910 --> 00:22:42,040
application a needs to sign the login

00:22:39,400 --> 00:22:47,740
request so that not anyone can actually

00:22:42,040 --> 00:22:49,900
log in with key club so that's what the

00:22:47,740 --> 00:22:52,210
client is so it's an application

00:22:49,900 --> 00:22:53,280
basically that will ask you to

00:22:52,210 --> 00:22:55,810
authenticate

00:22:53,280 --> 00:23:01,630
the last thing is the identity provider

00:22:55,810 --> 00:23:04,510
so that the identity provider it is

00:23:01,630 --> 00:23:08,850
basically a third party application the

00:23:04,510 --> 00:23:13,570
third party open ID connect some other

00:23:08,850 --> 00:23:17,260
application that will just behave like

00:23:13,570 --> 00:23:21,190
an external identity provider so if in

00:23:17,260 --> 00:23:25,930
our use case it could be like get lab it

00:23:21,190 --> 00:23:28,390
could be sometimes the organization own

00:23:25,930 --> 00:23:30,220
single sign-on so some organization have

00:23:28,390 --> 00:23:31,510
single sign-on and sometimes you can

00:23:30,220 --> 00:23:33,700
just plug to that so that you can

00:23:31,510 --> 00:23:36,610
authenticate users so you have multiple

00:23:33,700 --> 00:23:38,140
choices as identity providers and the

00:23:36,610 --> 00:23:40,660
last thing is the use of Federation

00:23:38,140 --> 00:23:43,630
because like even if key clock has a

00:23:40,660 --> 00:23:45,700
local database with users you often want

00:23:43,630 --> 00:23:50,020
to check them against LDAP that will

00:23:45,700 --> 00:23:51,580
contain the group so LDAP is the use of

00:23:50,020 --> 00:23:53,740
Federation back-end to kick Rock on

00:23:51,580 --> 00:23:56,110
where you can store the users and

00:23:53,740 --> 00:23:58,030
retrieve them the adapt support in Key

00:23:56,110 --> 00:24:00,010
Club can be just read only or it can be

00:23:58,030 --> 00:24:04,530
with write so that you can also update

00:24:00,010 --> 00:24:08,020
the users or just read the users so

00:24:04,530 --> 00:24:10,420
that's what I have told you so that you

00:24:08,020 --> 00:24:12,370
have multiple names the master and we

00:24:10,420 --> 00:24:13,719
should not touch it except I think the

00:24:12,370 --> 00:24:15,609
relevant user

00:24:13,719 --> 00:24:17,589
because you should not use the default

00:24:15,609 --> 00:24:19,929
to admit visa that you have created you

00:24:17,589 --> 00:24:22,210
should instead do something more clever

00:24:19,929 --> 00:24:25,299
like connecting that to and next our

00:24:22,210 --> 00:24:28,570
identity provider or some users then you

00:24:25,299 --> 00:24:30,609
have the young for improv Union for the

00:24:28,570 --> 00:24:32,469
customers when you see that they can

00:24:30,609 --> 00:24:35,080
login with three different third-party

00:24:32,469 --> 00:24:37,779
applications and they can log in from

00:24:35,080 --> 00:24:39,759
with two application so basically the

00:24:37,779 --> 00:24:42,849
customers film will be like hey your

00:24:39,759 --> 00:24:47,979
customer you can log in with Gita

00:24:42,849 --> 00:24:50,950
get up Google I don't know what and then

00:24:47,979 --> 00:24:55,359
you have the companion where you only

00:24:50,950 --> 00:25:02,070
trust local users so if I go for example

00:24:55,359 --> 00:25:02,070
to get lapto calm then you actually see

00:25:03,659 --> 00:25:10,749
sign-in so you actually see at the

00:25:07,749 --> 00:25:19,349
bottom so these are open ID Connect

00:25:10,749 --> 00:25:23,139
providers that you can use to log in so

00:25:19,349 --> 00:25:26,379
now we will secure an application with

00:25:23,139 --> 00:25:29,169
key look so I have picked up graph

00:25:26,379 --> 00:25:34,919
enough for this demo so that now I have

00:25:29,169 --> 00:25:34,919
I will first start a graph for instance

00:25:45,160 --> 00:25:52,460
so Havana is a dashboard application and

00:25:49,640 --> 00:25:59,330
basically it's a box key code of open

00:25:52,460 --> 00:26:03,040
data connect out of the box so first I

00:25:59,330 --> 00:26:08,410
will start it to show you that it is not

00:26:03,040 --> 00:26:11,840
okay it is just protected by a email by

00:26:08,410 --> 00:26:14,300
an admin account which is admin admin by

00:26:11,840 --> 00:26:18,800
default so I can log in as admin admin

00:26:14,300 --> 00:26:21,560
if I want but okay that's not really

00:26:18,800 --> 00:26:24,590
relevant so I signed out and now I will

00:26:21,560 --> 00:26:26,870
enable login via my kick look the first

00:26:24,590 --> 00:26:30,170
thing I will do first I will create a

00:26:26,870 --> 00:26:34,510
user in my kick lock this one will be in

00:26:30,170 --> 00:26:36,910
the local database so I recreate like

00:26:34,510 --> 00:26:45,380
[Music]

00:26:36,910 --> 00:26:49,400
quadruply I put an email I will put my

00:26:45,380 --> 00:26:56,150
first name my last name okay and then I

00:26:49,400 --> 00:27:00,320
save and then I will directly like I do

00:26:56,150 --> 00:27:04,580
password to my user so test and test you

00:27:00,320 --> 00:27:08,360
see that I have Mac there that says if

00:27:04,580 --> 00:27:10,580
the password is tamper or not so it

00:27:08,360 --> 00:27:12,830
means that the user would be able to he

00:27:10,580 --> 00:27:15,080
said the password itself if when it will

00:27:12,830 --> 00:27:17,090
log in the first time key clock has a

00:27:15,080 --> 00:27:18,350
lot of do small tooltips everywhere so

00:27:17,090 --> 00:27:20,510
if you don't understand something you

00:27:18,350 --> 00:27:26,240
actually look at that and understand

00:27:20,510 --> 00:27:28,580
what is behind that so let's click the

00:27:26,240 --> 00:27:30,970
reset password button yes I want to

00:27:28,580 --> 00:27:35,810
change the user password

00:27:30,970 --> 00:27:37,430
what was it again anyway so now I shut

00:27:35,810 --> 00:27:40,540
down my wife and I we look what I need

00:27:37,430 --> 00:27:40,540
to put in the configuration

00:27:49,440 --> 00:27:58,600
so open and connect is actually on top

00:27:53,530 --> 00:28:02,049
of another specification which is wood

00:27:58,600 --> 00:28:07,059
so basically I will not go into the

00:28:02,049 --> 00:28:10,480
details but what work is out we

00:28:07,059 --> 00:28:14,950
generally work with open ID connect so I

00:28:10,480 --> 00:28:18,419
will enable it and then I need a client

00:28:14,950 --> 00:28:20,980
ID and a client secret because to get

00:28:18,419 --> 00:28:23,919
the information about the user I need a

00:28:20,980 --> 00:28:25,630
secret so that I need to generate an ID

00:28:23,919 --> 00:28:27,970
and a secret for micro fur application

00:28:25,630 --> 00:28:32,080
so I get back in my key clock and I will

00:28:27,970 --> 00:28:33,700
just do clients I will use it at the

00:28:32,080 --> 00:28:35,289
allow a bunch of crayons because by

00:28:33,700 --> 00:28:37,330
default Key Club deploy applications

00:28:35,289 --> 00:28:40,480
that you can see a profile you can see

00:28:37,330 --> 00:28:44,470
your sessions so I will just create a

00:28:40,480 --> 00:28:48,900
new client which will be Havana open ID

00:28:44,470 --> 00:28:56,470
connect and the hotel will be localhost

00:28:48,900 --> 00:28:58,150
port 3000 and just HTTP okay so my

00:28:56,470 --> 00:28:59,860
client has been set there is just one

00:28:58,150 --> 00:29:02,950
last thing is I need to change the

00:28:59,860 --> 00:29:04,690
access type to confidential I will not

00:29:02,950 --> 00:29:07,690
go into the details about that but if

00:29:04,690 --> 00:29:11,380
you have the choice always pick

00:29:07,690 --> 00:29:13,299
confidential because public is when you

00:29:11,380 --> 00:29:14,830
want to have the token and also in

00:29:13,299 --> 00:29:17,080
JavaScript or that kind of things which

00:29:14,830 --> 00:29:23,230
is not what I went there so I save this

00:29:17,080 --> 00:29:25,830
and now I can see my my secret and I put

00:29:23,230 --> 00:29:25,830
my secret

00:29:38,650 --> 00:29:44,809
and my client ID is kappanna

00:29:42,230 --> 00:29:46,700
so this is the first thing that I type

00:29:44,809 --> 00:29:53,660
and then I need to provide the following

00:29:46,700 --> 00:29:57,890
URLs so a notification URL and those URL

00:29:53,660 --> 00:30:00,830
basically I will find them in lavona so

00:29:57,890 --> 00:30:02,270
when I go to my rim settings actually I

00:30:00,830 --> 00:30:04,520
have the link to the well-known

00:30:02,270 --> 00:30:08,510
configuration that I've shown you so

00:30:04,520 --> 00:30:20,299
that I can get the the the cracklings so

00:30:08,510 --> 00:30:24,679
this is one the token URL API URL is not

00:30:20,299 --> 00:30:29,240
needed I think that's all so now

00:30:24,679 --> 00:30:36,230
hopefully when I will start my graph

00:30:29,240 --> 00:30:40,309
Anna I will be able to login okay so now

00:30:36,230 --> 00:30:43,450
I have a link signing whiskey clock what

00:30:40,309 --> 00:30:48,370
I will do now is just opening that in a

00:30:43,450 --> 00:30:53,299
private pricing tab so localhost

00:30:48,370 --> 00:30:56,510
mm and then I can just signing this key

00:30:53,299 --> 00:30:59,630
clock and I am in kick look and my user

00:30:56,510 --> 00:31:04,340
was whether a pre and then the password

00:30:59,630 --> 00:31:06,530
was test and then because I change the

00:31:04,340 --> 00:31:13,130
password busy I mean I no need to change

00:31:06,530 --> 00:31:15,140
my password which I will put test to you

00:31:13,130 --> 00:31:16,150
want me to use the same password yeah of

00:31:15,140 --> 00:31:24,700
course

00:31:16,150 --> 00:31:24,700
okay yep let me check my configuration

00:31:28,179 --> 00:31:37,850
okay that one apparently I need to have

00:31:31,700 --> 00:31:40,510
it so I will find it so this must be the

00:31:37,850 --> 00:31:40,510
user info

00:31:51,489 --> 00:31:57,109
okay so now I need to login again

00:31:53,659 --> 00:32:00,879
because I lost my session and now I can

00:31:57,109 --> 00:32:03,859
login with key clock and I am locked in

00:32:00,879 --> 00:32:05,749
and you see that key clock has got my

00:32:03,859 --> 00:32:10,489
name she happy photo and he has got my

00:32:05,749 --> 00:32:14,029
email - so I'm no ISA if I sign out I am

00:32:10,489 --> 00:32:21,799
actually not signed out of key clock yet

00:32:14,029 --> 00:32:26,659
so let's fix that so I will take the log

00:32:21,799 --> 00:32:40,489
out and I will put that in my craw flag

00:32:26,659 --> 00:32:43,219
configuration so I put the robot in my

00:32:40,489 --> 00:32:46,129
sign not without you I'll I will add a

00:32:43,219 --> 00:32:49,539
dialect you had at the end to get back

00:32:46,129 --> 00:32:49,539
to my Havana

00:32:51,009 --> 00:32:57,559
so that should do it now

00:32:54,609 --> 00:33:01,700
so now I should have a graph on a server

00:32:57,559 --> 00:33:03,019
when I can actually sign out and when I

00:33:01,700 --> 00:33:05,089
standing with key clock

00:33:03,019 --> 00:33:07,489
I need to enter my password again so

00:33:05,089 --> 00:33:09,259
what happened there is that at the end

00:33:07,489 --> 00:33:10,879
of the workflow I have told off not to

00:33:09,259 --> 00:33:12,950
hit I like me to kick Luke to say hey

00:33:10,879 --> 00:33:18,349
that user wants to disconnect so I am

00:33:12,950 --> 00:33:20,259
also is connected from key look okay so

00:33:18,349 --> 00:33:22,940
we have connected our first application

00:33:20,259 --> 00:33:26,629
I have another application that I want

00:33:22,940 --> 00:33:28,909
to connect and it's an application that

00:33:26,629 --> 00:33:31,099
does not support open ad Connect which

00:33:28,909 --> 00:33:37,190
is still most of the application

00:33:31,099 --> 00:33:39,369
nowadays so if I go to OS DC 2019 then I

00:33:37,190 --> 00:33:39,369
will

00:33:44,900 --> 00:33:53,300
yeah but permit use is really stupid

00:33:49,610 --> 00:33:55,400
like adding security like they just say

00:33:53,300 --> 00:33:58,100
that it's not their responsibility so if

00:33:55,400 --> 00:34:01,190
I open a forest consult and I just have

00:33:58,100 --> 00:34:02,930
full access and that's it so basically

00:34:01,190 --> 00:34:10,250
what I will do is I will deploy another

00:34:02,930 --> 00:34:14,300
application next to it which is code the

00:34:10,250 --> 00:34:19,280
key globe gatekeeper which is a single

00:34:14,300 --> 00:34:22,929
binary which I don't have my other

00:34:19,280 --> 00:34:22,929
configuration so I will take my backup

00:34:23,860 --> 00:34:32,590
where is it gatekeeper

00:34:36,060 --> 00:34:41,740
so I will first need to set up a new

00:34:40,060 --> 00:34:46,899
client of course so I set up a new

00:34:41,740 --> 00:34:51,070
client in my cake log what I do now is I

00:34:46,899 --> 00:34:53,710
will there is a bug in key clock so I

00:34:51,070 --> 00:35:00,400
need to do something broad key clock I

00:34:53,710 --> 00:35:08,140
will click back and I basically need it

00:35:00,400 --> 00:35:09,910
is and here I want to create I first

00:35:08,140 --> 00:35:13,619
need to create the client so I will

00:35:09,910 --> 00:35:13,619
create a client which I will name

00:35:13,680 --> 00:35:26,680
primitives and then kind portal open it

00:35:16,780 --> 00:35:30,730
connects which will be at 1 2 7 0 1 1991

00:35:26,680 --> 00:35:33,490
I will put localhost actually it is

00:35:30,730 --> 00:35:35,800
important to put localhost and one two

00:35:33,490 --> 00:35:38,410
seven zero zero one well it's important

00:35:35,800 --> 00:35:41,020
which one you choose because the user

00:35:38,410 --> 00:35:45,190
will only be redirected to a white list

00:35:41,020 --> 00:35:47,680
of URL so if I put this then only locals

00:35:45,190 --> 00:35:50,170
will be able to request tokens for that

00:35:47,680 --> 00:35:53,190
client so the user will get an error if

00:35:50,170 --> 00:35:56,410
I try to use the token for someone else

00:35:53,190 --> 00:35:58,780
so I apologize I put it in a

00:35:56,410 --> 00:36:03,850
confidential like the other one I see if

00:35:58,780 --> 00:36:06,730
to get the password and I will do my

00:36:03,850 --> 00:36:08,800
magic which is to change the audience

00:36:06,730 --> 00:36:14,740
which is something they will hopefully

00:36:08,800 --> 00:36:21,910
fix so if I look at audience and the

00:36:14,740 --> 00:36:28,540
audience of formatives that I see if ok

00:36:21,910 --> 00:36:30,790
like this so now I go back to my

00:36:28,540 --> 00:36:38,560
primitive client and I just Lu right

00:36:30,790 --> 00:36:42,180
client scopes bug okay so I need my

00:36:38,560 --> 00:36:45,180
secret now to configure it inside my

00:36:42,180 --> 00:36:45,180
gatekeeper

00:36:52,390 --> 00:37:00,799
okay so this is the key club gatekeeper

00:36:56,509 --> 00:37:03,049
configuration it what we have there is

00:37:00,799 --> 00:37:05,240
at the bottom we say we want

00:37:03,049 --> 00:37:07,579
although associates to be protected it

00:37:05,240 --> 00:37:11,180
could just be the API or the API could

00:37:07,579 --> 00:37:13,339
require admin access of Tobias isn't

00:37:11,180 --> 00:37:18,799
mean where the other ones would just

00:37:13,339 --> 00:37:20,630
require standard standards you are well

00:37:18,799 --> 00:37:22,150
stand the whole rights so in this case I

00:37:20,630 --> 00:37:24,920
just want to protect everything and

00:37:22,150 --> 00:37:27,619
basically I have an encryption key which

00:37:24,920 --> 00:37:29,630
is for internal use and I have some

00:37:27,619 --> 00:37:32,630
other settings like secure cookies

00:37:29,630 --> 00:37:34,579
because I'm using HTTP and F same URL is

00:37:32,630 --> 00:37:37,190
basically the address of my politics

00:37:34,579 --> 00:37:40,309
over so what I will actually need to use

00:37:37,190 --> 00:37:43,220
his localhost 1991 and that's what I

00:37:40,309 --> 00:37:53,119
need to expose to my users so now

00:37:43,220 --> 00:38:01,970
hopefully I can start it and now I open

00:37:53,119 --> 00:38:10,039
a private tab on localhost 9 - what did

00:38:01,970 --> 00:38:13,700
I pick and now I am interacting to my

00:38:10,039 --> 00:38:19,430
geek look when I can say whether a plea

00:38:13,700 --> 00:38:23,029
and test and I am locked in on my prom

00:38:19,430 --> 00:38:29,529
it is over and now if I open microphone

00:38:23,029 --> 00:38:29,529
again I will be locked in on kavana 300

00:38:29,740 --> 00:38:38,690
if I click sign-in whiskey o'clock I am

00:38:33,440 --> 00:38:41,180
locked in so there is an option in a

00:38:38,690 --> 00:38:42,559
furnace so that you don't first two

00:38:41,180 --> 00:38:44,450
options interesting the first one is

00:38:42,559 --> 00:38:45,920
that you can disable the login from

00:38:44,450 --> 00:38:48,259
there so you cannot log in with the

00:38:45,920 --> 00:38:50,240
local users in Garifuna and the second

00:38:48,259 --> 00:38:52,130
option is to automatically redirect you

00:38:50,240 --> 00:38:53,779
to the key Krogh so that you don't see

00:38:52,130 --> 00:38:58,549
that page and you are directly related

00:38:53,779 --> 00:38:59,660
to kick look so now I need to log in

00:38:58,549 --> 00:39:01,850
again

00:38:59,660 --> 00:39:05,960
but probably that my token is still

00:39:01,850 --> 00:39:09,410
valid there yeah so I'm still locked in

00:39:05,960 --> 00:39:13,010
in the primitives until my token will

00:39:09,410 --> 00:39:15,320
expire so so that was our first demo so

00:39:13,010 --> 00:39:17,330
we have seen oh I see queuing up

00:39:15,320 --> 00:39:20,270
natively like wife Anna just by setting

00:39:17,330 --> 00:39:22,460
the code you else because it is owed to

00:39:20,270 --> 00:39:24,800
an autopen I do connect I need to put

00:39:22,460 --> 00:39:26,150
all the URLs if it was open I to connect

00:39:24,800 --> 00:39:29,180
just the one known would be enough and

00:39:26,150 --> 00:39:35,450
then you have key club gatekeeper for

00:39:29,180 --> 00:39:37,340
application that just no HTTP so you can

00:39:35,450 --> 00:39:41,840
also log into a channel identity

00:39:37,340 --> 00:39:44,690
provider so let's try let's try a demo

00:39:41,840 --> 00:39:50,920
to login with skit lab so I will log in

00:39:44,690 --> 00:39:54,650
to my github calm I use git lab because

00:39:50,920 --> 00:39:58,400
it's mostly open source and they do cool

00:39:54,650 --> 00:40:05,090
stuff so I will sign in actually signing

00:39:58,400 --> 00:40:08,150
whiskey table okay because I so that I

00:40:05,090 --> 00:40:11,750
can show you open ID connect and in my

00:40:08,150 --> 00:40:17,450
profile I can actually like it's it's my

00:40:11,750 --> 00:40:22,100
settings I can just say applications so

00:40:17,450 --> 00:40:23,660
I need a beer screen ok applications and

00:40:22,100 --> 00:40:29,150
then I can add in your application so

00:40:23,660 --> 00:40:38,510
you could read key clock OS DC and I

00:40:29,150 --> 00:40:42,940
need to put the real activity so I what

00:40:38,510 --> 00:40:42,940
what should we do 24 kick log

00:40:46,600 --> 00:40:59,590
I don't know what is the food I I hope

00:40:56,720 --> 00:41:02,090
this will work so I want like open ID

00:40:59,590 --> 00:41:04,250
profile an email which is a standard for

00:41:02,090 --> 00:41:06,260
panetta connect so you see it is just

00:41:04,250 --> 00:41:08,270
right under I knew it of course but it's

00:41:06,260 --> 00:41:10,369
also it under so you I can now save the

00:41:08,270 --> 00:41:12,660
application and now I have an

00:41:10,369 --> 00:41:16,350
application ID and a secret

00:41:12,660 --> 00:41:22,220
so now hopefully I can go to Mikey clock

00:41:16,350 --> 00:41:22,220
server and go to identity providers

00:41:24,050 --> 00:41:32,810
maybe I can I will try no the other one

00:41:28,950 --> 00:41:35,190
I will add open ID connect provider and

00:41:32,810 --> 00:41:39,150
basically what I will need is due to

00:41:35,190 --> 00:41:44,220
addition URL token UL I think I can just

00:41:39,150 --> 00:41:47,940
like say no I can say Key Club dot coms

00:41:44,220 --> 00:41:55,350
well known open ID configuration so if I

00:41:47,940 --> 00:41:57,180
say that in my key clock it will just

00:41:55,350 --> 00:42:04,080
fill in all the fields if I find the

00:41:57,180 --> 00:42:05,580
code tab okay and I click import okay so

00:42:04,080 --> 00:42:06,000
now I have although you have heard the

00:42:05,580 --> 00:42:08,130
tada

00:42:06,000 --> 00:42:20,700
I just need my client ID my client

00:42:08,130 --> 00:42:28,290
secret my client ID my client secret and

00:42:20,700 --> 00:42:35,060
safe okay so now I am in the example him

00:42:28,290 --> 00:42:36,240
so now if I start again by login

00:42:35,060 --> 00:42:43,080
localhost

00:42:36,240 --> 00:42:45,510
mm I login with key clock and now it has

00:42:43,080 --> 00:42:48,270
changed so I can login with with the say

00:42:45,510 --> 00:42:53,850
which basically should have been renamed

00:42:48,270 --> 00:43:03,290
like I just put a very bad name so let's

00:42:53,850 --> 00:43:03,290
call it get lab I see if below 3000

00:43:03,770 --> 00:43:09,030
sending whisky clock and then I have the

00:43:07,200 --> 00:43:12,860
choice to login with get lab instead of

00:43:09,030 --> 00:43:16,820
log in with my user and password I click

00:43:12,860 --> 00:43:16,820
OK I sign in with github

00:43:17,960 --> 00:43:20,660
I will not be able to sign em you get up

00:43:20,150 --> 00:43:26,299
there

00:43:20,660 --> 00:43:29,569
maybe that's why we work anyway so this

00:43:26,299 --> 00:43:31,539
should work except that I don't have my

00:43:29,569 --> 00:43:36,650
my two factor authentication there

00:43:31,539 --> 00:43:39,559
except that oh Emily if I go out of the

00:43:36,650 --> 00:43:41,960
private that I will be able to log in

00:43:39,559 --> 00:43:43,720
there because I am logged in to get lab

00:43:41,960 --> 00:43:49,970
so that should work

00:43:43,720 --> 00:43:57,160
okay I need restarting lock me in this

00:43:49,970 --> 00:43:57,160
is interesting it must break right

00:43:57,640 --> 00:44:08,059
login with kik look good lab ok so now

00:44:05,240 --> 00:44:14,500
the URL that I provided is just not

00:44:08,059 --> 00:44:14,500
working and basically I will just try to

00:44:15,609 --> 00:44:21,829
maybe I can find it quickly otherwise I

00:44:18,559 --> 00:44:30,140
will just keep what do you think that I

00:44:21,829 --> 00:44:31,819
will find it rim settings yeah I need to

00:44:30,140 --> 00:44:38,480
change it a bit I don't know what I need

00:44:31,819 --> 00:44:54,069
to put actually I can just find that

00:44:38,480 --> 00:44:54,069
there seems example broker EDC endpoint

00:44:58,150 --> 00:45:15,759
ok so I go to my applications and I can

00:45:08,029 --> 00:45:24,910
change that Wims

00:45:15,759 --> 00:45:24,910
example broker we say endpoint

00:45:25,290 --> 00:45:42,120
okay so no I can log into my graph and I

00:45:33,210 --> 00:45:57,840
using gitlab almost okay yeah I know why

00:45:42,120 --> 00:46:08,280
no I know why yeah I will put both and

00:45:57,840 --> 00:46:10,830
this time okay so now github is asking

00:46:08,280 --> 00:46:13,470
me hey short key clock be able to use

00:46:10,830 --> 00:46:15,270
your account and history me here is what

00:46:13,470 --> 00:46:17,760
the clock will do it will basically

00:46:15,270 --> 00:46:19,620
authenticate yourself you can actually

00:46:17,760 --> 00:46:21,210
ask for more so you can ask to have the

00:46:19,620 --> 00:46:21,870
permission to with the repositories I

00:46:21,210 --> 00:46:23,550
can of stuff

00:46:21,870 --> 00:46:26,880
in this case just want to login i

00:46:23,550 --> 00:46:34,980
authorize application and i need now to

00:46:26,880 --> 00:46:40,380
register and key clock okay first name

00:46:34,980 --> 00:46:41,970
all the pre last name also submit okay

00:46:40,380 --> 00:46:46,080
so now I am logged in in Key Club but

00:46:41,970 --> 00:46:50,070
with my information with my user from

00:46:46,080 --> 00:46:52,500
github so now if I sign out I need to

00:46:50,070 --> 00:46:55,860
log in again and I can again do it

00:46:52,500 --> 00:46:59,100
except that in this case I am not locked

00:46:55,860 --> 00:47:00,990
in a locked out of a key lock of kid lab

00:46:59,100 --> 00:47:07,800
which is something that you can also

00:47:00,990 --> 00:47:10,800
configure okay so of course what you can

00:47:07,800 --> 00:47:13,200
do also is I will not demo it but you

00:47:10,800 --> 00:47:15,480
can also connect to get lab to kick lock

00:47:13,200 --> 00:47:17,280
with another kick rock him so we have a

00:47:15,480 --> 00:47:20,400
key cooking for the internal user and

00:47:17,280 --> 00:47:21,990
for the clients then the the on the

00:47:20,400 --> 00:47:26,150
client's home you could say okay also

00:47:21,990 --> 00:47:30,120
the internal users can connect so

00:47:26,150 --> 00:47:32,820
operation so basically to configure hick

00:47:30,120 --> 00:47:34,980
look you can use the API you the API is

00:47:32,820 --> 00:47:38,410
building into a shell scripts that will

00:47:34,980 --> 00:47:44,829
do the girl for you so if I just do for

00:47:38,410 --> 00:47:49,059
sample let's find Mikey look again being

00:47:44,829 --> 00:47:52,569
kisi at the m I need to login first my

00:47:49,059 --> 00:47:59,349
password is admin ok and then I can do

00:47:52,569 --> 00:48:02,619
like this idiom get anything so I get

00:47:59,349 --> 00:48:06,549
the use of my own password so with Acree

00:48:02,619 --> 00:48:10,089
KCM is a shell script that can use the

00:48:06,549 --> 00:48:11,859
api it's quite easy to use you also have

00:48:10,089 --> 00:48:16,450
a telephone provider that is in the

00:48:11,859 --> 00:48:18,910
works so that that's what we configure

00:48:16,450 --> 00:48:20,559
kick lock basically most of the aims and

00:48:18,910 --> 00:48:25,690
the configuration is in the database so

00:48:20,559 --> 00:48:28,240
you have auto shortened using that so by

00:48:25,690 --> 00:48:31,539
default it's file database so don't use

00:48:28,240 --> 00:48:33,789
that put that on a real database please

00:48:31,539 --> 00:48:36,730
and also auditing is not enabled by

00:48:33,789 --> 00:48:41,230
default so if I go back to my home I can

00:48:36,730 --> 00:48:43,059
actually like I have my event sir I need

00:48:41,230 --> 00:48:45,670
to configure that and say okay I want

00:48:43,059 --> 00:48:48,789
the events and you can choose which one

00:48:45,670 --> 00:48:50,770
you want and I also want the admin

00:48:48,789 --> 00:48:53,740
events and I save and now I will have

00:48:50,770 --> 00:48:56,380
all the events that will appear in Key

00:48:53,740 --> 00:48:59,500
Club so it's strange that auditing is

00:48:56,380 --> 00:49:02,140
not enabled by default but it's like

00:48:59,500 --> 00:49:06,279
that so now if I log in I will actually

00:49:02,140 --> 00:49:09,579
see that I locked it and what we also do

00:49:06,279 --> 00:49:11,890
is that we log to file so if you have

00:49:09,579 --> 00:49:16,630
afraid of gee boss I will not serve that

00:49:11,890 --> 00:49:19,809
today so basically we what we do is that

00:49:16,630 --> 00:49:23,170
we put all the logs to a file and then

00:49:19,809 --> 00:49:25,390
we actually pass that file photo

00:49:23,170 --> 00:49:27,520
monitoring purpose for example but it

00:49:25,390 --> 00:49:29,289
also enable us to see okay if the

00:49:27,520 --> 00:49:31,839
database if someone gets into the

00:49:29,289 --> 00:49:33,339
database and changes the audits then we

00:49:31,839 --> 00:49:36,430
can still check the file so you need to

00:49:33,339 --> 00:49:38,710
tamper the both sources which is more

00:49:36,430 --> 00:49:42,089
difficult not just one source so that's

00:49:38,710 --> 00:49:45,309
why we have both auditing in place

00:49:42,089 --> 00:49:47,170
monitoring o'clock so what we are

00:49:45,309 --> 00:49:50,230
interested in when we monitor he cookies

00:49:47,170 --> 00:49:51,549
first the JVM which has not been a

00:49:50,230 --> 00:49:52,210
program for now like to get

00:49:51,549 --> 00:49:54,040
collection

00:49:52,210 --> 00:49:56,290
everything all the problems you can have

00:49:54,040 --> 00:49:59,589
is a JVM you can have it whiskey clock

00:49:56,290 --> 00:50:04,500
and em til is what we used to look at

00:49:59,589 --> 00:50:07,210
the logs so I have empty configuration

00:50:04,500 --> 00:50:08,680
so I only have ten minutes left so I

00:50:07,210 --> 00:50:11,140
will not be able to show you a lot but

00:50:08,680 --> 00:50:13,750
basically we take the logs that we write

00:50:11,140 --> 00:50:15,820
and with em tail we can actually tell

00:50:13,750 --> 00:50:18,730
that look and make matrix out of that

00:50:15,820 --> 00:50:21,190
that can then should be shown to a graph

00:50:18,730 --> 00:50:25,570
and that's helped us to see okay

00:50:21,190 --> 00:50:27,250
is someone logging in no do they succeed

00:50:25,570 --> 00:50:29,530
because we use X and our identity

00:50:27,250 --> 00:50:32,230
providers and you know when you have

00:50:29,530 --> 00:50:34,599
user die cannot login it does not matter

00:50:32,230 --> 00:50:38,320
if it is your database that is done of

00:50:34,599 --> 00:50:40,570
your identity provider so am tell and

00:50:38,320 --> 00:50:42,400
audit logs enables to see if the

00:50:40,570 --> 00:50:49,300
business of the key clock is actually

00:50:42,400 --> 00:50:50,980
working so we can go further now a new

00:50:49,300 --> 00:50:54,820
ski club to get access to database

00:50:50,980 --> 00:50:58,119
because volt for massacre can basically

00:50:54,820 --> 00:51:04,150
provide you open ID Connect integration

00:50:58,119 --> 00:51:06,670
so I will try to show you that so volt

00:51:04,150 --> 00:51:10,510
can create tokens for you to access to

00:51:06,670 --> 00:51:15,130
anything like a database generic

00:51:10,510 --> 00:51:18,550
passwords or cloud instances SSH access

00:51:15,130 --> 00:51:20,650
also so basically you log into to volton

00:51:18,550 --> 00:51:22,839
and you say I want to get access to that

00:51:20,650 --> 00:51:24,359
machine and you get with SH key that is

00:51:22,839 --> 00:51:35,099
valid for five minutes

00:51:24,359 --> 00:51:37,780
so oh yeah for what I do it's fine so I

00:51:35,099 --> 00:51:46,839
will cheat a bit first I will create a

00:51:37,780 --> 00:51:50,250
vault client create a vault and the

00:51:46,839 --> 00:51:53,980
client I will put it in confidential and

00:51:50,250 --> 00:51:59,520
see if new I need at least one redirect

00:51:53,980 --> 00:51:59,520
wing local host

00:51:59,700 --> 00:52:10,280
ok like this

00:52:04,640 --> 00:52:14,520
and a second one which would be used for

00:52:10,280 --> 00:52:26,340
command line login okay so now I have

00:52:14,520 --> 00:52:28,620
credentials I can copy this and then so

00:52:26,340 --> 00:52:31,130
if you have you can ignore the telephone

00:52:28,620 --> 00:52:34,530
para use telephone to configure a vault

00:52:31,130 --> 00:52:43,140
but it's not really relevant there so I

00:52:34,530 --> 00:52:46,530
have my client secret okay so what I am

00:52:43,140 --> 00:52:49,290
creating there in two words is I will

00:52:46,530 --> 00:52:51,300
put a one-time password in a vault that

00:52:49,290 --> 00:52:53,010
will change every second and I will be

00:52:51,300 --> 00:52:55,680
able to retrieve that using my open ID

00:52:53,010 --> 00:53:14,130
connect a token so this is the vault

00:52:55,680 --> 00:53:16,350
oaken so this is a vault just for

00:53:14,130 --> 00:53:28,560
developments of the token is in the

00:53:16,350 --> 00:53:31,740
output okay so I have my fault now and

00:53:28,560 --> 00:53:39,350
basically if I go there now I should be

00:53:31,740 --> 00:53:44,250
able to login I need to put localhost

00:53:39,350 --> 00:53:46,020
okay so now I can log into vault just by

00:53:44,250 --> 00:53:47,930
clicking that button and then I will be

00:53:46,020 --> 00:53:52,140
authenticated to vote using my open ID

00:53:47,930 --> 00:53:54,240
token so I am signed in so now I am

00:53:52,140 --> 00:53:56,930
inside vault and I connect it with key

00:53:54,240 --> 00:54:01,470
clock and because I was already

00:53:56,930 --> 00:54:03,000
connected to to kid lab and all that

00:54:01,470 --> 00:54:05,850
stuff I am already logged in now

00:54:03,000 --> 00:54:09,150
something more interesting is what I can

00:54:05,850 --> 00:54:10,740
do is that so first let me log in

00:54:09,150 --> 00:54:15,190
locally to my fault but using the

00:54:10,740 --> 00:54:21,040
command line design so

00:54:15,190 --> 00:54:24,430
photo login and now what is going on it

00:54:21,040 --> 00:54:27,040
is probably bla bla bla bla

00:54:24,430 --> 00:54:34,870
it should print his activity in the

00:54:27,040 --> 00:54:38,470
bottom oh yeah that thing again

00:54:34,870 --> 00:54:43,810
okay so let's go again in my Kiko

00:54:38,470 --> 00:54:52,600
configuration what time is it

00:54:43,810 --> 00:55:00,790
yeah okay so settings up

00:54:52,600 --> 00:55:06,360
I just saved this I know so now I can

00:55:00,790 --> 00:55:06,360
login like user user know what a

00:55:06,480 --> 00:55:11,320
pre-test

00:55:08,730 --> 00:55:13,660
okay now I am locked in I can close my

00:55:11,320 --> 00:55:17,290
browser because behind us in my in

00:55:13,660 --> 00:55:20,140
opt-in and I cannot do volt get world

00:55:17,290 --> 00:55:22,000
read and now I have my one-time password

00:55:20,140 --> 00:55:25,540
code so I have access to resource

00:55:22,000 --> 00:55:27,640
thanks to my open ID connect login its

00:55:25,540 --> 00:55:29,830
mineral even for stuff that are more

00:55:27,640 --> 00:55:31,150
complicated like database access that

00:55:29,830 --> 00:55:33,070
kind of thing you can actually do that

00:55:31,150 --> 00:55:35,200
with world thanks to a parent I connect

00:55:33,070 --> 00:55:38,230
so basically that is all the things that

00:55:35,200 --> 00:55:40,090
you can connect to volt so it is a lot

00:55:38,230 --> 00:55:42,700
of cloud resources but also like you can

00:55:40,090 --> 00:55:45,030
generate certificates generate SSH keys

00:55:42,700 --> 00:55:47,710
connect to database is all the headings

00:55:45,030 --> 00:55:52,840
can be easily connected with open ID

00:55:47,710 --> 00:55:54,550
connect know okay some extra notes your

00:55:52,840 --> 00:55:56,560
application the application that is

00:55:54,550 --> 00:55:59,260
connected to an ID connect it was

00:55:56,560 --> 00:56:02,560
responsible to ready - token also to do

00:55:59,260 --> 00:56:04,420
the authorization so you ask for a scope

00:56:02,560 --> 00:56:06,100
so you will know that I am a season mean

00:56:04,420 --> 00:56:08,620
but then the application is to know a

00:56:06,100 --> 00:56:10,660
Asus I mean Julian can write to that

00:56:08,620 --> 00:56:13,390
file or Julian I can do this or this so

00:56:10,660 --> 00:56:15,820
the authorization is the application

00:56:13,390 --> 00:56:19,300
that needs to check what is inside the

00:56:15,820 --> 00:56:21,250
token that he will get key clock is

00:56:19,300 --> 00:56:23,020
business critical which means that you

00:56:21,250 --> 00:56:25,780
cannot just install key look and say hey

00:56:23,020 --> 00:56:27,550
I am done no you need to think about

00:56:25,780 --> 00:56:28,740
automation the appeal occurs because the

00:56:27,550 --> 00:56:31,440
day you arrived at

00:56:28,740 --> 00:56:33,810
and per se no one can login today and

00:56:31,440 --> 00:56:35,880
you like to which application and they

00:56:33,810 --> 00:56:38,990
say like any of them

00:56:35,880 --> 00:56:38,990
it's not funny

00:56:39,690 --> 00:56:48,390
the master in just don't use it well use

00:56:44,850 --> 00:56:51,930
it to configure your Durham's but don't

00:56:48,390 --> 00:56:53,880
use it for third-party applications and

00:56:51,930 --> 00:56:57,030
his list of open source clients so I

00:56:53,880 --> 00:56:59,820
have shown you world graph Anna you can

00:56:57,030 --> 00:57:01,440
also do that with key clock and if you

00:56:59,820 --> 00:57:03,810
don't like the gatekeeper from quick

00:57:01,440 --> 00:57:07,619
look you can also do that at Apache with

00:57:03,810 --> 00:57:09,990
mode Auto Panetta Connect openness cough

00:57:07,619 --> 00:57:12,080
elasticsearch the Laster from Amazon

00:57:09,990 --> 00:57:13,820
also supports Open ID connect

00:57:12,080 --> 00:57:17,580
[Music]

00:57:13,820 --> 00:57:20,490
interestingly enough some in Belgium and

00:57:17,580 --> 00:57:22,260
France the governments are putting in

00:57:20,490 --> 00:57:25,530
place open ID providers - so you can

00:57:22,260 --> 00:57:27,750
login as a citizen to different website

00:57:25,530 --> 00:57:31,170
using a point ID connect so that's

00:57:27,750 --> 00:57:34,080
interesting to know - that it's not only

00:57:31,170 --> 00:57:36,300
like the big github and github and all

00:57:34,080 --> 00:57:37,859
all those ones that use the panel

00:57:36,300 --> 00:57:41,340
connect but also not governments are

00:57:37,859 --> 00:57:43,619
starting to use that github can do open

00:57:41,340 --> 00:57:46,050
ID connect you have also Dex which is an

00:57:43,619 --> 00:57:48,420
identity provider also which can also do

00:57:46,050 --> 00:57:51,619
that so those are the alternatives to to

00:57:48,420 --> 00:57:55,140
pick look if you want it and at the end

00:57:51,619 --> 00:57:57,150
single sign-on so it makes humans life

00:57:55,140 --> 00:57:59,700
easier so if you just need to login once

00:57:57,150 --> 00:58:02,220
in the morning it's very easy because

00:57:59,700 --> 00:58:05,640
we're easy to work and you can work with

00:58:02,220 --> 00:58:07,140
multiple micro services and you don't

00:58:05,640 --> 00:58:09,480
need to type your password 10 times so

00:58:07,140 --> 00:58:11,760
that's very cool Habanera connected

00:58:09,480 --> 00:58:14,220
right by this growing lots of people

00:58:11,760 --> 00:58:15,869
implement that so and there is no reason

00:58:14,220 --> 00:58:18,600
why you should not start thinking about

00:58:15,869 --> 00:58:21,060
that and also I do recommend key group

00:58:18,600 --> 00:58:22,710
because like you have a lot of features

00:58:21,060 --> 00:58:24,630
built in directly and you don't need to

00:58:22,710 --> 00:58:27,420
look around it's about a lot of

00:58:24,630 --> 00:58:31,050
different use cases which I have only

00:58:27,420 --> 00:58:32,280
shown you like five percenter so okay

00:58:31,050 --> 00:58:35,100
thank you

00:58:32,280 --> 00:58:37,490
no you have exactly 60 seconds for the

00:58:35,100 --> 00:58:37,490
questions

00:58:37,670 --> 00:58:41,110
[Applause]

00:58:42,290 --> 00:58:48,980
so thanks very much too much Julien are

00:58:46,140 --> 00:58:48,980
there any questions

00:58:54,450 --> 00:58:58,320
[Music]

00:58:55,970 --> 00:59:01,140
where does Kerberos play into this world

00:58:58,320 --> 00:59:03,060
and there's some similarities it seems

00:59:01,140 --> 00:59:07,290
but maybe it's not fashionable I don't

00:59:03,060 --> 00:59:09,750
know cameras is not part of this you can

00:59:07,290 --> 00:59:11,520
use cable house as a national identity

00:59:09,750 --> 00:59:13,650
provider but that's whole and I don't

00:59:11,520 --> 00:59:17,130
know anything about camera so I won't

00:59:13,650 --> 00:59:23,130
lie book I have never seen cameras used

00:59:17,130 --> 00:59:28,740
anywhere sir so it's not used in open

00:59:23,130 --> 00:59:31,380
and you connect yes another question so

00:59:28,740 --> 00:59:34,260
when you use some external identity

00:59:31,380 --> 00:59:39,210
provider which definitely will not have

00:59:34,260 --> 00:59:41,460
the claims that my application will need

00:59:39,210 --> 00:59:44,430
let's say so can I have something like

00:59:41,460 --> 00:59:49,140
okay the identification is done by an

00:59:44,430 --> 00:59:51,210
external IDP but the claims will come

00:59:49,140 --> 00:59:55,500
out of club yes

00:59:51,210 --> 00:59:58,380
so keep willing anyway at the claims of

00:59:55,500 --> 01:00:00,090
the last film but you can also say that

00:59:58,380 --> 01:00:02,490
the claim from another scene where he

01:00:00,090 --> 01:00:04,890
used or you can add a claim like if you

01:00:02,490 --> 01:00:07,790
have a customer in any way you can login

01:00:04,890 --> 01:00:10,560
with externally with your organization

01:00:07,790 --> 01:00:12,540
internal organized you can it provider

01:00:10,560 --> 01:00:14,520
then you can say a if that comes from

01:00:12,540 --> 01:00:17,910
that provider I automatically add a

01:00:14,520 --> 01:00:19,500
claim or I use that that claim which has

01:00:17,910 --> 01:00:25,520
a different name so you can play with

01:00:19,500 --> 01:00:25,520
the claims of identity providers so

01:00:28,109 --> 01:00:33,489
no so if I look down you have mappers

01:00:32,109 --> 01:00:38,710
and you can basically create a mapper

01:00:33,489 --> 01:00:41,979
which is you can output a claim so that

01:00:38,710 --> 01:00:44,460
when you I log in to to kick look I am

01:00:41,979 --> 01:00:48,009
to magically have a hole or you can just

01:00:44,460 --> 01:00:51,099
do some mapping or say a the username

01:00:48,009 --> 01:00:58,420
it's that field so you can do mappers to

01:00:51,099 --> 01:01:10,479
the identity providers okay does that

01:00:58,420 --> 01:01:12,819
answer the question looking at

01:01:10,479 --> 01:01:15,940
applications that do not support instead

01:01:12,819 --> 01:01:20,880
of the extra application that you run

01:01:15,940 --> 01:01:28,329
the gatekeeper does this also work with

01:01:20,880 --> 01:01:31,749
nginx Lua Open ID Open ID connects I

01:01:28,329 --> 01:01:33,719
don't have experience with nginx I knew

01:01:31,749 --> 01:01:36,009
that for Apache there is a module and

01:01:33,719 --> 01:01:39,160
basically the gatekeeper will work for

01:01:36,009 --> 01:01:40,900
any application you just need to be

01:01:39,160 --> 01:01:44,200
careful that if you put that next to the

01:01:40,900 --> 01:01:45,640
front-end then it means that your

01:01:44,200 --> 01:01:48,190
application in the back end is still not

01:01:45,640 --> 01:01:49,479
secure so I prefer the gatekeeper

01:01:48,190 --> 01:01:51,099
because it will be close to the

01:01:49,479 --> 01:01:52,450
application and I don't need to do the

01:01:51,099 --> 01:01:55,059
login at the front and either I can

01:01:52,450 --> 01:01:56,739
directly do it at the application itself

01:01:55,059 --> 01:01:59,200
so that it will also be secured from the

01:01:56,739 --> 01:02:00,940
internal network point of view but there

01:01:59,200 --> 01:02:04,660
is probably plug-ins for nginx I don't

01:02:00,940 --> 01:02:06,609
know about that so and also a bit

01:02:04,660 --> 01:02:10,359
complementary to the Kerberos question

01:02:06,609 --> 01:02:12,759
for pom so for SSH or whatever other

01:02:10,359 --> 01:02:15,789
authentication mechanisms that can be

01:02:12,759 --> 01:02:20,680
used natively on a linux or other unix

01:02:15,789 --> 01:02:24,430
you have any solution no I know I don't

01:02:20,680 --> 01:02:26,619
know about that specifically I guess it

01:02:24,430 --> 01:02:30,489
would be possible I shown you that you

01:02:26,619 --> 01:02:34,200
can log in with a command line tool so

01:02:30,489 --> 01:02:34,200
maybe there is a pom module I don't know

01:02:35,190 --> 01:02:42,540
yeah the response 50s goes I'm sorry we

01:02:40,590 --> 01:02:47,280
cut we have to cut it here because time

01:02:42,540 --> 01:02:49,960
is out over thanks Julian people tow for

01:02:47,280 --> 01:02:53,119
the insights thank you very much

01:02:49,960 --> 01:02:53,119
[Applause]

01:02:56,650 --> 01:03:00,739

YouTube URL: https://www.youtube.com/watch?v=lFBX_J2Y7wU


