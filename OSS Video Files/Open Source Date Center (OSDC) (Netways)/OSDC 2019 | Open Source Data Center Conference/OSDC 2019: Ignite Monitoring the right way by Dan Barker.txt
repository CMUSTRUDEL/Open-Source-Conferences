Title: OSDC 2019: Ignite Monitoring the right way by Dan Barker
Publication date: 2019-05-28
Playlist: OSDC 2019 | Open Source Data Center Conference
Description: 
	
Captions: 
	00:00:01,140 --> 00:00:10,550
[Music]

00:00:12,200 --> 00:00:17,609
hey I'm Dan Barker I work at RSA

00:00:15,210 --> 00:00:18,060
security which is a Dell technologies

00:00:17,609 --> 00:00:21,689
company

00:00:18,060 --> 00:00:22,830
I'm the chief architect there and we're

00:00:21,689 --> 00:00:26,430
going to talk a little bit about my

00:00:22,830 --> 00:00:28,289
opinions on monitoring so first we'll

00:00:26,430 --> 00:00:30,840
cover the different pieces of monitoring

00:00:28,289 --> 00:00:32,880
or observability as it's often called as

00:00:30,840 --> 00:00:36,239
a buzzword and that's metrics

00:00:32,880 --> 00:00:38,989
aggregation log aggregation alerting and

00:00:36,239 --> 00:00:42,719
visualizations and distributed tracing

00:00:38,989 --> 00:00:44,940
and I put these in order of the way I

00:00:42,719 --> 00:00:47,370
would prioritize them of getting them

00:00:44,940 --> 00:00:48,510
done and executing on them not

00:00:47,370 --> 00:00:49,950
necessarily that they all have to be

00:00:48,510 --> 00:00:54,690
done a hundred percent and some sort of

00:00:49,950 --> 00:00:56,640
flow but I find that there is more value

00:00:54,690 --> 00:00:58,829
at the top and it's easier to get

00:00:56,640 --> 00:01:00,480
started with like metrics aggregation a

00:00:58,829 --> 00:01:01,829
lot of times you can just install an

00:01:00,480 --> 00:01:05,010
agent and you can get all of your CPU

00:01:01,829 --> 00:01:07,830
and memory metrics a lot of tools these

00:01:05,010 --> 00:01:09,960
days have metrics built into them so you

00:01:07,830 --> 00:01:13,439
can get information from the application

00:01:09,960 --> 00:01:16,830
very quickly like Ruby Ruby on Rails log

00:01:13,439 --> 00:01:19,009
aggregation has some built in into the

00:01:16,830 --> 00:01:22,860
system of like Linux operating systems

00:01:19,009 --> 00:01:24,840
some built into dev frameworks but

00:01:22,860 --> 00:01:27,330
usually requires more dev work and their

00:01:24,840 --> 00:01:28,770
security risks alerting and

00:01:27,330 --> 00:01:30,509
visualization requires more

00:01:28,770 --> 00:01:32,729
understanding of the system so I usually

00:01:30,509 --> 00:01:35,600
delay this or do very simple

00:01:32,729 --> 00:01:38,670
visualizations and simple learning and

00:01:35,600 --> 00:01:41,280
alerting too often it has negative

00:01:38,670 --> 00:01:43,979
impacts on the people's ability to

00:01:41,280 --> 00:01:46,140
respond to it distributed tracing is

00:01:43,979 --> 00:01:47,610
often not necessary in most systems so

00:01:46,140 --> 00:01:50,189
it's probably something you should

00:01:47,610 --> 00:01:52,290
tackle last it's generally not built-in

00:01:50,189 --> 00:01:54,630
although increasingly it is built-in and

00:01:52,290 --> 00:01:58,049
it's much less mature than the other

00:01:54,630 --> 00:02:00,420
forms of monitoring for monitoring or

00:01:58,049 --> 00:02:02,939
metrics who knows about the push versus

00:02:00,420 --> 00:02:05,909
pull debate all right a few of you yes

00:02:02,939 --> 00:02:09,149
so mostly I don't think it matters so

00:02:05,909 --> 00:02:10,950
push and pull are both good they both

00:02:09,149 --> 00:02:12,990
have some trade-offs but overall they

00:02:10,950 --> 00:02:14,610
equal out open

00:02:12,990 --> 00:02:17,520
Metrix who here sort of open metrics

00:02:14,610 --> 00:02:19,770
it's a standard that is slowly being

00:02:17,520 --> 00:02:22,470
pushed out from the Prometheus

00:02:19,770 --> 00:02:26,220
exposition format Prometheus which was

00:02:22,470 --> 00:02:29,640
created in Germany which is awesome you

00:02:26,220 --> 00:02:32,670
should also use business metrics no one

00:02:29,640 --> 00:02:33,630
cares if CPU is running high or memory

00:02:32,670 --> 00:02:36,360
is running out

00:02:33,630 --> 00:02:39,810
they only care if a negative customer

00:02:36,360 --> 00:02:43,550
impact is experienced so try to measure

00:02:39,810 --> 00:02:46,200
that log aggregation tools are for logs

00:02:43,550 --> 00:02:49,170
please don't put time series data in

00:02:46,200 --> 00:02:52,440
your log database met time series

00:02:49,170 --> 00:02:54,690
databases are have data structures and

00:02:52,440 --> 00:02:56,130
have enhancements that allow them to

00:02:54,690 --> 00:02:58,470
process time series data much more

00:02:56,130 --> 00:03:01,710
effectively there's a session an hour on

00:02:58,470 --> 00:03:03,390
that as well for there's some do's and

00:03:01,710 --> 00:03:05,190
don'ts of logging so we'll cover the

00:03:03,390 --> 00:03:06,840
do's you should actually have logs and

00:03:05,190 --> 00:03:08,730
you should have them in JSON format so

00:03:06,840 --> 00:03:11,190
that your computer systems can process

00:03:08,730 --> 00:03:13,230
those and move them around the these

00:03:11,190 --> 00:03:16,350
other systems you should include a

00:03:13,230 --> 00:03:18,510
timestamp that time should be in UTC if

00:03:16,350 --> 00:03:19,980
it is not new TC that is technical debt

00:03:18,510 --> 00:03:22,590
and you should start migrating that or

00:03:19,980 --> 00:03:24,930
figuring out how to every company I go

00:03:22,590 --> 00:03:28,830
to has this problem and it is a

00:03:24,930 --> 00:03:29,910
challenge log all application errors if

00:03:28,830 --> 00:03:33,060
you're handling an error in your

00:03:29,910 --> 00:03:35,310
application you should probably tell

00:03:33,060 --> 00:03:36,660
someone that that happened and you

00:03:35,310 --> 00:03:39,060
should write these in human readable

00:03:36,660 --> 00:03:40,800
form there's nothing worse than being an

00:03:39,060 --> 00:03:43,650
operator and getting a message that is

00:03:40,800 --> 00:03:47,580
cryptic when you're trying to fight an

00:03:43,650 --> 00:03:50,220
outage do not log info data and prod so

00:03:47,580 --> 00:03:53,040
informational warnings things like that

00:03:50,220 --> 00:03:55,680
are not useful in prod and will overflow

00:03:53,040 --> 00:03:58,910
your system very quickly don't log PII

00:03:55,680 --> 00:04:02,730
I see everybody do that for some reason

00:03:58,910 --> 00:04:04,230
this is about visualizations a joke that

00:04:02,730 --> 00:04:06,390
works as complete knowledge in a

00:04:04,230 --> 00:04:07,740
nanosecond from Steve Martin and that's

00:04:06,390 --> 00:04:09,000
the way your visualizations should work

00:04:07,740 --> 00:04:10,830
someone should be able to look at the

00:04:09,000 --> 00:04:12,590
dashboard and understand what's

00:04:10,830 --> 00:04:15,870
happening in the system very quickly

00:04:12,590 --> 00:04:17,459
there are no informational alerts if you

00:04:15,870 --> 00:04:19,230
are alerting someone about something

00:04:17,459 --> 00:04:21,780
that is not actually a problem not

00:04:19,230 --> 00:04:23,340
impacting a customer then that is

00:04:21,780 --> 00:04:25,500
probably negatively impacting their life

00:04:23,340 --> 00:04:26,790
and you should stop those are called

00:04:25,500 --> 00:04:29,160
notifications

00:04:26,790 --> 00:04:31,560
they don't need to be dealt with open

00:04:29,160 --> 00:04:34,760
tracing is another standard like open

00:04:31,560 --> 00:04:38,040
metrics it comes originally from the

00:04:34,760 --> 00:04:41,910
system in Zipkin and you should look for

00:04:38,040 --> 00:04:44,910
tools that use this standard open census

00:04:41,910 --> 00:04:47,910
because it wasn't confusing enough open

00:04:44,910 --> 00:04:50,610
census is something that integrates with

00:04:47,910 --> 00:04:52,740
kind of open tracing so open tracing is

00:04:50,610 --> 00:04:54,330
more about the spec open census includes

00:04:52,740 --> 00:04:57,030
libraries and things like that and some

00:04:54,330 --> 00:04:58,650
of the implementation details and here's

00:04:57,030 --> 00:05:02,130
some additional resources you can check

00:04:58,650 --> 00:05:03,930
out I wrote a little ebook for open

00:05:02,130 --> 00:05:06,630
source comm and the link is at the top

00:05:03,930 --> 00:05:08,340
and then practical monitoring was

00:05:06,630 --> 00:05:10,560
written by a friend of mine Mike Julian

00:05:08,340 --> 00:05:11,970
it's a really really good book and then

00:05:10,560 --> 00:05:13,620
if anybody wants to write for

00:05:11,970 --> 00:05:16,230
open-source comm about open source

00:05:13,620 --> 00:05:19,260
things contact me or someone on the

00:05:16,230 --> 00:05:25,389
website thank you

00:05:19,260 --> 00:05:25,389
[Applause]

00:05:25,940 --> 00:05:30,040
[Music]

00:05:30,060 --> 00:05:32,120

YouTube URL: https://www.youtube.com/watch?v=l93EhJ4puQY


