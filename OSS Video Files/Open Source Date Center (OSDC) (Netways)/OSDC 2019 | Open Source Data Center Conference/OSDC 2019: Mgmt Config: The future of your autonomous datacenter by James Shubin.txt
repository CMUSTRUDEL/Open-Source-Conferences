Title: OSDC 2019: Mgmt Config: The future of your autonomous datacenter by James Shubin
Publication date: 2019-05-21
Playlist: OSDC 2019 | Open Source Data Center Conference
Description: 
	Mgmt is a real-time automation tool that is fast and safe. One goal of the tool is to allow users to model and manage infrastructure that was previously very difficult or impossible to do so previously.
To showcase this future, we’ll show some exciting real-time demos that include scheduling, distributed state machines, and remote execution. As we get closer to a 0.1 release that we’ll recommend as “production ready”, we’ll look at the last remaining features that we’re aiming to land by then.

NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de
Blog: http://blog.netways.de
Webinare: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh

https://www.frametraxx.de/
Captions: 
	00:00:01,140 --> 00:00:10,550
[Music]

00:00:13,009 --> 00:00:19,740
okay everyone here for this talk what is

00:00:18,180 --> 00:00:21,210
this girl in the front she's still

00:00:19,740 --> 00:00:22,920
filming I'm gonna be all over Facebook

00:00:21,210 --> 00:00:24,660
right now so I have this software called

00:00:22,920 --> 00:00:25,920
MGMT I'm going to talk about what's

00:00:24,660 --> 00:00:28,260
possible right now and show you a lot of

00:00:25,920 --> 00:00:29,970
demos I talk really fast so if you're

00:00:28,260 --> 00:00:31,920
really lost just let me know but I have

00:00:29,970 --> 00:00:33,329
only 30 minutes so I'm going to try and

00:00:31,920 --> 00:00:35,520
go really really quickly and you can ask

00:00:33,329 --> 00:00:37,260
me questions after 2:00 and also I'm

00:00:35,520 --> 00:00:39,420
giving in a super-advanced talk tomorrow

00:00:37,260 --> 00:00:41,309
so you can check out that I'm a hacker I

00:00:39,420 --> 00:00:42,570
work on config management stuff I write

00:00:41,309 --> 00:00:43,980
a technical blog called the technical

00:00:42,570 --> 00:00:46,020
blog of James who's seen my blog just

00:00:43,980 --> 00:00:47,250
raise your hand if you haven't just

00:00:46,020 --> 00:00:49,500
raise your hand so I seem really popular

00:00:47,250 --> 00:00:51,570
everyone raise your hands

00:00:49,500 --> 00:00:54,149
the Germans are still sleeping I'm

00:00:51,570 --> 00:00:54,899
actually physiologist by training so if

00:00:54,149 --> 00:00:56,610
you actually want to talk about

00:00:54,899 --> 00:00:58,109
cardiology I love talking about that

00:00:56,610 --> 00:01:00,539
stuff and earning out and I'm big into

00:00:58,109 --> 00:01:02,340
DevOps stuff and just some background I

00:01:00,539 --> 00:01:04,229
used to do like puppet for many many

00:01:02,340 --> 00:01:05,580
years and beakers just screaming because

00:01:04,229 --> 00:01:08,790
everything's on fire and it's pretty

00:01:05,580 --> 00:01:10,799
terrible nowadays everybody like

00:01:08,790 --> 00:01:13,890
everyone's yeah milling like ansible

00:01:10,799 --> 00:01:15,750
like kubernetes and like what's going on

00:01:13,890 --> 00:01:17,130
like I don't understand and someone has

00:01:15,750 --> 00:01:19,470
made this like yeah mole assembler I

00:01:17,130 --> 00:01:21,630
don't even know what this is do you know

00:01:19,470 --> 00:01:24,000
what this is part of this it's like you

00:01:21,630 --> 00:01:26,130
can look at the terrible link there's

00:01:24,000 --> 00:01:27,930
this like really fancy project that

00:01:26,130 --> 00:01:30,270
Google just released that does this like

00:01:27,930 --> 00:01:31,890
super fancy yeah mole generating with

00:01:30,270 --> 00:01:34,890
this language thing it's just completely

00:01:31,890 --> 00:01:36,570
nonsense everyone writes some code so

00:01:34,890 --> 00:01:38,040
like build infrastructure but to tell

00:01:36,570 --> 00:01:39,630
this code what to do we blast a whole

00:01:38,040 --> 00:01:40,920
bunch of llamó at it I just think it

00:01:39,630 --> 00:01:42,270
doesn't make any sense so the real

00:01:40,920 --> 00:01:46,530
question is do you really want to be

00:01:42,270 --> 00:01:48,360
Yama programmers oh who said yes oh my

00:01:46,530 --> 00:01:50,310
goodness this is the gentleman who will

00:01:48,360 --> 00:01:55,140
answer answer appropriately I'm

00:01:50,310 --> 00:01:57,119
definitely in the nope camp fun Yama

00:01:55,140 --> 00:01:58,799
fact so like if you truncate a Yama file

00:01:57,119 --> 00:02:00,869
somewhere in the middle it's potentially

00:01:58,799 --> 00:02:02,340
still valid llamo so if your code gets

00:02:00,869 --> 00:02:04,049
truncated for different reasons it can

00:02:02,340 --> 00:02:07,290
actually happen you might run run like

00:02:04,049 --> 00:02:08,789
partial code oh and it's all bad so long

00:02:07,290 --> 00:02:10,140
story short some time ago I started this

00:02:08,789 --> 00:02:11,610
project called MGMT we have its cool

00:02:10,140 --> 00:02:13,319
logo and stickers so if you want come

00:02:11,610 --> 00:02:13,650
get sticker at the end I actually have

00:02:13,319 --> 00:02:15,989
talked

00:02:13,650 --> 00:02:17,489
two years ago this is me not as

00:02:15,989 --> 00:02:19,110
good-looking as I was back then but you

00:02:17,489 --> 00:02:20,430
can see this great YouTube talk about

00:02:19,110 --> 00:02:22,500
what I was presenting and quite a lot

00:02:20,430 --> 00:02:24,480
has happened in those last two years so

00:02:22,500 --> 00:02:25,980
I'm gonna sort of build on this and

00:02:24,480 --> 00:02:28,439
assume a bit of knowledge but I'll show

00:02:25,980 --> 00:02:31,290
you what's going on these days 2017 look

00:02:28,439 --> 00:02:32,760
at that we this is like a slide I had

00:02:31,290 --> 00:02:33,959
with future work of stuff to do so we

00:02:32,760 --> 00:02:38,040
didn't have a language so a lecture

00:02:33,959 --> 00:02:39,540
parser wasn't declarative all these

00:02:38,040 --> 00:02:41,370
things these lightning bolts that I've

00:02:39,540 --> 00:02:43,079
made in Libre Office mean that they're

00:02:41,370 --> 00:02:44,670
done now so all the stuff that I

00:02:43,079 --> 00:02:46,440
promised to do two years later is

00:02:44,670 --> 00:02:48,540
actually done this is only half done but

00:02:46,440 --> 00:02:49,709
it's not important and anyways the tool

00:02:48,540 --> 00:02:51,329
has two main parts it has an engine

00:02:49,709 --> 00:02:53,459
which actually does work on the machine

00:02:51,329 --> 00:02:54,930
and a language and back to this whole

00:02:53,459 --> 00:02:57,900
thing why I don't like the Amal approach

00:02:54,930 --> 00:03:00,870
the goal we're really trying to solve is

00:02:57,900 --> 00:03:02,340
we have like some sort of infrastructure

00:03:00,870 --> 00:03:05,220
that we want to build in our data center

00:03:02,340 --> 00:03:06,569
right and we have to use our minds to

00:03:05,220 --> 00:03:08,400
somehow convince the computers to do

00:03:06,569 --> 00:03:10,139
what we want and we can't just like

00:03:08,400 --> 00:03:11,489
mind-meld that would that would be so

00:03:10,139 --> 00:03:13,609
awesome if we could just like warp

00:03:11,489 --> 00:03:15,750
mind-meld everything would be perfect

00:03:13,609 --> 00:03:18,000
except the computers we would know what

00:03:15,750 --> 00:03:19,949
we're thinking that's bad but so instead

00:03:18,000 --> 00:03:21,930
we need to actually describe how we want

00:03:19,949 --> 00:03:24,000
our data center to look over time and

00:03:21,930 --> 00:03:25,739
for me I don't think that's really

00:03:24,000 --> 00:03:27,269
possible with llamó we need to actually

00:03:25,739 --> 00:03:29,280
describe the time components and

00:03:27,269 --> 00:03:31,409
everything so so there's these two parts

00:03:29,280 --> 00:03:32,790
the engine itself it's very similar to

00:03:31,409 --> 00:03:35,069
puppet who's done something like puppet

00:03:32,790 --> 00:03:36,209
before ok so I'm gonna assume some

00:03:35,069 --> 00:03:38,069
knowledge so basically we have a graph

00:03:36,209 --> 00:03:40,319
of resources that we run somewhere to

00:03:38,069 --> 00:03:41,699
puppet the difference is ours actually

00:03:40,319 --> 00:03:43,079
can run in parallel and it's

00:03:41,699 --> 00:03:44,430
event-driven and it works as a

00:03:43,079 --> 00:03:46,169
distributed system as well which I'll

00:03:44,430 --> 00:03:51,019
show you in a moment you want to see a

00:03:46,169 --> 00:03:54,690
quick demo of this no come on wake up

00:03:51,019 --> 00:03:55,859
okay cool so I've actually running this

00:03:54,690 --> 00:03:58,199
all on my laptop is that big enough for

00:03:55,859 --> 00:04:02,040
everyone to see in the back yeah ok good

00:03:58,199 --> 00:04:04,229
so I just actually gonna run a simple

00:04:02,040 --> 00:04:06,870
example this end spawn run so I'm

00:04:04,229 --> 00:04:09,720
running MGMT on the left over here just

00:04:06,870 --> 00:04:11,669
type my password which is password so

00:04:09,720 --> 00:04:18,419
MGMT is running it runs continuously and

00:04:11,669 --> 00:04:19,650
if I do this machine CTL oops she's

00:04:18,419 --> 00:04:22,680
gonna show you what machines are running

00:04:19,650 --> 00:04:26,340
so you can see Mt MT is running and it

00:04:22,680 --> 00:04:27,570
started up an end spawn container and

00:04:26,340 --> 00:04:29,460
spawns like container things

00:04:27,570 --> 00:04:31,830
a better talker and you can see it's

00:04:29,460 --> 00:04:35,310
running and if I machine see tail again

00:04:31,830 --> 00:04:36,510
if I actually terminate it you can see

00:04:35,310 --> 00:04:39,120
it comes right back

00:04:36,510 --> 00:04:41,400
so MGMT notices that the state changed

00:04:39,120 --> 00:04:43,560
but I was annoying and I poked it and it

00:04:41,400 --> 00:04:45,540
woke up and it put this machine right

00:04:43,560 --> 00:04:47,640
back see it right here it's still

00:04:45,540 --> 00:04:49,920
running and so this is the whole point

00:04:47,640 --> 00:04:51,450
so everything is live and in real time

00:04:49,920 --> 00:04:53,010
now hopefully you're not a system in

00:04:51,450 --> 00:04:55,620
that pokes things on your machine to

00:04:53,010 --> 00:04:56,940
break them but if you do it will repair

00:04:55,620 --> 00:04:58,230
the state and the reason we do this is

00:04:56,940 --> 00:04:59,940
actually different but that's just the

00:04:58,230 --> 00:05:02,250
sort of general idea we can have these

00:04:59,940 --> 00:05:03,960
real time running resources then manage

00:05:02,250 --> 00:05:05,940
their state and that means also that if

00:05:03,960 --> 00:05:07,710
we want to change the state we can do it

00:05:05,940 --> 00:05:09,090
in milliseconds we don't have to wait

00:05:07,710 --> 00:05:11,970
another 30 minutes for puppet to run

00:05:09,090 --> 00:05:13,650
again cool this guy's face is like wow I

00:05:11,970 --> 00:05:15,600
did not know this was possible well

00:05:13,650 --> 00:05:19,100
that's what I'm assuming am i right yeah

00:05:15,600 --> 00:05:21,300
he says yeah okay so make sense no

00:05:19,100 --> 00:05:23,280
everyone's quiet if you don't answer me

00:05:21,300 --> 00:05:24,840
I'll never know if I'm going way over

00:05:23,280 --> 00:05:28,920
your heads do you want to see more demos

00:05:24,840 --> 00:05:31,020
or if you had enough more burn get them

00:05:28,920 --> 00:05:33,300
get these guys to wake up and girls okay

00:05:31,020 --> 00:05:34,680
so now let's talk about the language

00:05:33,300 --> 00:05:36,300
I'll show you actually just I'll show

00:05:34,680 --> 00:05:40,350
you were actually really quickly how I

00:05:36,300 --> 00:05:41,790
actually built this oops all this code

00:05:40,350 --> 00:05:44,280
by the way it's all open-source all in

00:05:41,790 --> 00:05:46,500
github you can see basically I just have

00:05:44,280 --> 00:05:48,900
an end spawn resource and it looks very

00:05:46,500 --> 00:05:50,400
similar to puppet so you say I want the

00:05:48,900 --> 00:05:52,590
state of this container or this resource

00:05:50,400 --> 00:05:54,300
to be running or whatever and here's a

00:05:52,590 --> 00:05:56,220
few things how I actually caused this to

00:05:54,300 --> 00:05:57,660
build the container from scratch so you

00:05:56,220 --> 00:06:00,570
can actually run all this on your own

00:05:57,660 --> 00:06:02,430
and look at it slowly let's go back here

00:06:00,570 --> 00:06:04,320
so the way we describe things is in this

00:06:02,430 --> 00:06:05,670
language and we want a language which is

00:06:04,320 --> 00:06:07,620
safe right because if you make a mistake

00:06:05,670 --> 00:06:09,180
you know on a blow away a data center we

00:06:07,620 --> 00:06:10,260
want it to be very powerful so our

00:06:09,180 --> 00:06:11,430
language is something that's called

00:06:10,260 --> 00:06:13,260
reactive which I'll show you in a moment

00:06:11,430 --> 00:06:15,570
and we wanted to be easy to reason about

00:06:13,260 --> 00:06:18,180
so it's a DSL that gives you tools that

00:06:15,570 --> 00:06:19,590
are just for this job so here's the

00:06:18,180 --> 00:06:21,600
first time I'm going to show you so you

00:06:19,590 --> 00:06:24,780
can see here I have this date time

00:06:21,600 --> 00:06:26,700
function and then I add it to a year

00:06:24,780 --> 00:06:29,100
which is this variable down here and

00:06:26,700 --> 00:06:31,920
then we put that value into this big

00:06:29,100 --> 00:06:34,440
struct which gets put into this template

00:06:31,920 --> 00:06:36,030
which goes into this file so temp

00:06:34,440 --> 00:06:38,740
whatever so what's going on let's

00:06:36,030 --> 00:06:41,020
actually run this

00:06:38,740 --> 00:06:43,730
okay so I'm gonna run this on the left

00:06:41,020 --> 00:06:49,580
now I'm Jim T's running continuously and

00:06:43,730 --> 00:06:52,220
if I watch I'm just gonna watch this

00:06:49,580 --> 00:06:54,320
file so what I'm doing is MGMT is

00:06:52,220 --> 00:06:56,120
actually running and for whatever reason

00:06:54,320 --> 00:06:57,889
it's continuously changing this text

00:06:56,120 --> 00:07:00,770
file that I'm putting over here on your

00:06:57,889 --> 00:07:02,660
right and what that is is just whatever

00:07:00,770 --> 00:07:03,830
it happens to want to do and in this

00:07:02,660 --> 00:07:05,990
case remember it has this date time

00:07:03,830 --> 00:07:07,610
function that I showed this date time

00:07:05,990 --> 00:07:08,990
function is not a normal function that

00:07:07,610 --> 00:07:10,820
you would find in a regular programming

00:07:08,990 --> 00:07:12,919
language it's a function instead of

00:07:10,820 --> 00:07:14,750
turning returning one value it returns a

00:07:12,919 --> 00:07:16,330
stream of values and that stream of

00:07:14,750 --> 00:07:18,470
values gets pushed through the system

00:07:16,330 --> 00:07:20,840
re-evaluating the code that needs

00:07:18,470 --> 00:07:23,479
reevaluation so in this case it's the

00:07:20,840 --> 00:07:25,190
number of seconds since 1970 so we take

00:07:23,479 --> 00:07:27,830
that value we add it to this other value

00:07:25,190 --> 00:07:29,030
push this all through and then add a

00:07:27,830 --> 00:07:30,950
whole bunch of other things together

00:07:29,030 --> 00:07:33,110
including the system load which comes

00:07:30,950 --> 00:07:34,460
from a system load function and if you

00:07:33,110 --> 00:07:36,680
look you can actually see these values

00:07:34,460 --> 00:07:39,380
are changing in real time does that make

00:07:36,680 --> 00:07:40,940
sense and just to show off a little bit

00:07:39,380 --> 00:07:43,039
so this last thing at the bottom I

00:07:40,940 --> 00:07:44,780
actually built a vu meter function which

00:07:43,039 --> 00:07:47,750
is actually using my laptop microphone

00:07:44,780 --> 00:07:49,970
right now and if you make noise you can

00:07:47,750 --> 00:07:52,100
see that it goes up and so what this is

00:07:49,970 --> 00:07:54,289
really doing is we're taking all these

00:07:52,100 --> 00:07:58,039
real-time values or integrating them in

00:07:54,289 --> 00:07:59,840
a closed feedback system and doing some

00:07:58,039 --> 00:08:01,880
result in this case it's just sort of

00:07:59,840 --> 00:08:02,660
silly we're doing a vu meter for fun but

00:08:01,880 --> 00:08:04,700
it could be something completely

00:08:02,660 --> 00:08:06,440
different so just to test this if I'm

00:08:04,700 --> 00:08:07,820
really quiet when I point to you I want

00:08:06,440 --> 00:08:09,289
you to make as much noise as possible

00:08:07,820 --> 00:08:17,720
and see how far you can get are you

00:08:09,289 --> 00:08:19,789
ready let's be quiet pretty good so not

00:08:17,720 --> 00:08:21,440
fake and what could you use this for I

00:08:19,789 --> 00:08:22,700
always make this joke that like you can

00:08:21,440 --> 00:08:24,620
have this running in your server room

00:08:22,700 --> 00:08:25,490
and if you hear a lot of screaming maybe

00:08:24,620 --> 00:08:26,750
there's a fight and you could

00:08:25,490 --> 00:08:28,940
automatically set everything read-only

00:08:26,750 --> 00:08:31,240
right just to wait until people stop

00:08:28,940 --> 00:08:34,250
fighting okay does that make sense

00:08:31,240 --> 00:08:35,539
okay so I've showed this demo before but

00:08:34,250 --> 00:08:37,010
let's make this a little bit harder

00:08:35,539 --> 00:08:39,919
let's do some fancier things you want do

00:08:37,010 --> 00:08:42,409
some fancier things this side wants

00:08:39,919 --> 00:08:44,360
fancy this side is like in shock you

00:08:42,409 --> 00:08:46,730
want to see some fancier stuff okay

00:08:44,360 --> 00:08:48,680
let's keep going so I'm just a really

00:08:46,730 --> 00:08:50,870
quick sort of less fun note we actually

00:08:48,680 --> 00:08:51,620
have this whole module system so unlike

00:08:50,870 --> 00:08:53,270
puppet where you can

00:08:51,620 --> 00:08:55,460
actually namespace things this is all

00:08:53,270 --> 00:08:56,510
super easy to namespace here's a little

00:08:55,460 --> 00:08:58,070
slide you can look at so you can

00:08:56,510 --> 00:08:59,810
actually build different modules and

00:08:58,070 --> 00:09:02,360
import them as something or other and

00:08:59,810 --> 00:09:03,440
use that so that's how it works you can

00:09:02,360 --> 00:09:05,510
run the language in a whole bunch of

00:09:03,440 --> 00:09:09,890
different ways but let's do something

00:09:05,510 --> 00:09:12,200
magic one sees some magic CPUs okay so I

00:09:09,890 --> 00:09:15,260
have to just first I have to start up

00:09:12,200 --> 00:09:23,180
this virtual machine she's gonna have

00:09:15,260 --> 00:09:24,620
MGMT just okay that's good so what I'm

00:09:23,180 --> 00:09:28,100
gonna do in right here is on the right

00:09:24,620 --> 00:09:33,380
I'm just going to login to this VM that

00:09:28,100 --> 00:09:34,210
I've started up if it's starting up okay

00:09:33,380 --> 00:09:39,110
oops

00:09:34,210 --> 00:09:42,380
root my password is secret so I have a

00:09:39,110 --> 00:09:44,180
VM running on the right and I'm just

00:09:42,380 --> 00:09:45,560
gonna run some kernel stuff just as it's

00:09:44,180 --> 00:09:47,779
gonna turn off logging so that we don't

00:09:45,560 --> 00:09:50,630
see too much noise from the kernel and

00:09:47,779 --> 00:09:52,880
I'm gonna run this display CPUs command

00:09:50,630 --> 00:09:56,209
and what this is doing is it's just

00:09:52,880 --> 00:09:57,709
running over and over again the loop and

00:09:56,209 --> 00:10:01,130
it's gonna show you the number of CPUs

00:09:57,709 --> 00:10:02,150
on this virtual machine and also what

00:10:01,130 --> 00:10:04,940
I'm going to do let me just actually

00:10:02,150 --> 00:10:08,029
start screen sorry so we can have two

00:10:04,940 --> 00:10:10,160
windows on that and I'm gonna run on

00:10:08,029 --> 00:10:11,810
this machine normally you would have the

00:10:10,160 --> 00:10:13,310
VM boot up and MGMT would run

00:10:11,810 --> 00:10:14,660
automatically but I want you to actually

00:10:13,310 --> 00:10:16,700
see the logs of what's happening so I

00:10:14,660 --> 00:10:19,550
can actually just run it manually this

00:10:16,700 --> 00:10:21,380
little script okay and then over here

00:10:19,550 --> 00:10:23,029
I'm just running the shell script which

00:10:21,380 --> 00:10:25,040
is just gonna loop and print out a

00:10:23,029 --> 00:10:29,390
number of CPUs in that machines that

00:10:25,040 --> 00:10:33,620
make sense now over here I'm gonna run

00:10:29,390 --> 00:10:35,209
MGMT on my local machine the host and so

00:10:33,620 --> 00:10:38,890
MGMT is running and I'll just show you

00:10:35,209 --> 00:10:38,890
the code that MGMT is actually running

00:10:39,550 --> 00:10:49,220
and all this you can do at home or two I

00:10:46,070 --> 00:10:51,980
think and what MGMT is doing it just has

00:10:49,220 --> 00:10:54,230
some code here that basically reads an

00:10:51,980 --> 00:10:57,470
integer from this text file on my

00:10:54,230 --> 00:10:59,150
computer and if it takes that integer

00:10:57,470 --> 00:11:01,520
and it puts it into this virtual machine

00:10:59,150 --> 00:11:05,600
resource right here into the CPU count

00:11:01,520 --> 00:11:10,700
and here's what happens if we go

00:11:05,600 --> 00:11:12,110
and we echo say to to that file what's

00:11:10,700 --> 00:11:13,640
going to happen is MGMT is going to

00:11:12,110 --> 00:11:14,930
notice that that file changed because

00:11:13,640 --> 00:11:16,880
we're watching that with this real-time

00:11:14,930 --> 00:11:18,470
input source just how we took the

00:11:16,880 --> 00:11:20,270
microphone input here we're taking a

00:11:18,470 --> 00:11:22,220
text file input we're gonna take that

00:11:20,270 --> 00:11:23,900
text file we're gonna read the integer

00:11:22,220 --> 00:11:26,000
out of it and in this case it'll be a

00:11:23,900 --> 00:11:27,860
two or a seven or whatever and we'll

00:11:26,000 --> 00:11:30,980
take that that value and stick it into

00:11:27,860 --> 00:11:32,780
the MGMT language in the CPUs field for

00:11:30,980 --> 00:11:34,940
the vertice nuri source which is the

00:11:32,780 --> 00:11:37,010
thing writing running over there now in

00:11:34,940 --> 00:11:40,640
the moment we change that CPU count the

00:11:37,010 --> 00:11:43,340
VM is gonna say oh I am the wrong number

00:11:40,640 --> 00:11:47,390
and so MGMT will hot plug or hot unplug

00:11:43,340 --> 00:11:49,280
a CPU for us now the MGMT inside that vm

00:11:47,390 --> 00:11:51,160
is going to notice that hey the cpu

00:11:49,280 --> 00:11:54,020
count changed and it will actually

00:11:51,160 --> 00:11:55,670
change the text file which we actually

00:11:54,020 --> 00:11:58,190
see printing out this little message we

00:11:55,670 --> 00:11:59,540
see number of one CPUs that's just MGMT

00:11:58,190 --> 00:12:03,770
printing out that message does that make

00:11:59,540 --> 00:12:07,160
sense sure you run it hey ready boom

00:12:03,770 --> 00:12:09,020
it's done and we can do that again so

00:12:07,160 --> 00:12:12,290
you see I'll run it to four for example

00:12:09,020 --> 00:12:14,810
so I press Enter MGMT notices that it

00:12:12,290 --> 00:12:17,390
changed it quickly hot plugs the CPUs on

00:12:14,810 --> 00:12:19,940
the right it sees those new CPUs very

00:12:17,390 --> 00:12:22,610
quickly and it runs MGMT with that new

00:12:19,940 --> 00:12:25,550
change and you can go back down to two

00:12:22,610 --> 00:12:26,540
for example and just to show off should

00:12:25,550 --> 00:12:31,040
we show off a little bit more is that

00:12:26,540 --> 00:12:33,410
cool do you like that yes you can clap

00:12:31,040 --> 00:12:35,600
thank you so just to show off a little

00:12:33,410 --> 00:12:37,910
bit I have this little Delta CPU script

00:12:35,600 --> 00:12:39,830
that basically just echoes to a text

00:12:37,910 --> 00:12:43,310
file just for fun for theatrics and

00:12:39,830 --> 00:12:44,420
basically if I do plus or minus I don't

00:12:43,310 --> 00:12:47,480
know if you can see me pushing the key

00:12:44,420 --> 00:12:52,040
but in real time it's very very quick

00:12:47,480 --> 00:12:53,720
you like that and so the whole point of

00:12:52,040 --> 00:12:55,930
this is we're building these real-time

00:12:53,720 --> 00:12:59,000
dynamic systems where we integrate data

00:12:55,930 --> 00:13:00,460
in milliseconds in seconds so the whole

00:12:59,000 --> 00:13:02,690
idea is you would look at the load and

00:13:00,460 --> 00:13:05,260
when you have a lot of load and you eat

00:13:02,690 --> 00:13:08,330
more CPU because like automatically add

00:13:05,260 --> 00:13:09,950
some VMs hot plugging them add some sea

00:13:08,330 --> 00:13:11,840
views to your VMs hot plugging them

00:13:09,950 --> 00:13:13,610
doing that job and when it settles down

00:13:11,840 --> 00:13:14,990
like automatically rebalancing your

00:13:13,610 --> 00:13:16,660
workloads or any sort of crazy thing

00:13:14,990 --> 00:13:18,680
that you want

00:13:16,660 --> 00:13:19,340
MGMT doesn't care what you build with it

00:13:18,680 --> 00:13:21,530
we're just

00:13:19,340 --> 00:13:22,730
tool that is hopefully giving you a tool

00:13:21,530 --> 00:13:24,590
on a language that lets you be

00:13:22,730 --> 00:13:26,960
expressive the way you want and here's

00:13:24,590 --> 00:13:29,900
just one example cool you want to see

00:13:26,960 --> 00:13:32,000
more is that enough okay they're getting

00:13:29,900 --> 00:13:34,220
slightly louder burned every time I show

00:13:32,000 --> 00:13:37,100
more demos they they wake up even more

00:13:34,220 --> 00:13:39,350
so okay so we actually have to kill MGMT

00:13:37,100 --> 00:13:42,080
will just kill all this quickly just so

00:13:39,350 --> 00:13:48,410
that we don't have to watch it all shut

00:13:42,080 --> 00:13:50,290
down okay so I'm just gonna destroy this

00:13:48,410 --> 00:13:52,030
VM because we don't need it right now

00:13:50,290 --> 00:13:55,340
okay

00:13:52,030 --> 00:13:57,110
so magic CPUs so this actually showed a

00:13:55,340 --> 00:13:58,490
few different features one we have a

00:13:57,110 --> 00:14:00,290
virtual machine resource

00:13:58,490 --> 00:14:02,480
it's spaced on the levert so it can use

00:14:00,290 --> 00:14:05,030
anything that levert does and it lets

00:14:02,480 --> 00:14:08,300
you hot plug in a hot plug hot hot plug

00:14:05,030 --> 00:14:10,250
and hot unplug machines CPUs and we also

00:14:08,300 --> 00:14:12,470
have a variable like it's a basically a

00:14:10,250 --> 00:14:14,360
special function in the MGMT language to

00:14:12,470 --> 00:14:16,460
detects how many CPUs are on the machine

00:14:14,360 --> 00:14:18,620
so that's what we use if we want to do

00:14:16,460 --> 00:14:20,390
an expression you know if CPU count is

00:14:18,620 --> 00:14:22,340
greater than something do this otherwise

00:14:20,390 --> 00:14:24,170
do that or just print out the value and

00:14:22,340 --> 00:14:24,620
that actually gets messages from the

00:14:24,170 --> 00:14:26,360
kernel

00:14:24,620 --> 00:14:28,610
every time the CPU count changes and

00:14:26,360 --> 00:14:30,290
feeds that into MGMT and there's

00:14:28,610 --> 00:14:31,760
hundreds of these little functions many

00:14:30,290 --> 00:14:33,980
of which we haven't even written yet to

00:14:31,760 --> 00:14:35,450
get new data sources into MGMT and

00:14:33,980 --> 00:14:37,520
they're very simple to write and you

00:14:35,450 --> 00:14:38,540
could write one in in a few hours or or

00:14:37,520 --> 00:14:41,090
less cool

00:14:38,540 --> 00:14:42,440
you're all gonna write one for some cool

00:14:41,090 --> 00:14:44,540
thing all right you want to see

00:14:42,440 --> 00:14:48,860
something about scheduling scheduling

00:14:44,540 --> 00:14:53,330
anyone no okay I'm waiting until I hear

00:14:48,860 --> 00:14:55,070
a solid yes from the crowd do you want

00:14:53,330 --> 00:14:58,280
to see a really cool distributed

00:14:55,070 --> 00:15:00,200
scheduling demo oh my god

00:14:58,280 --> 00:15:05,210
burn I'm sorry I'm not coming back next

00:15:00,200 --> 00:15:07,010
year they're very quiet okay so here's

00:15:05,210 --> 00:15:08,780
what I'm going to show you so I've told

00:15:07,010 --> 00:15:11,000
you we've all been doing basically

00:15:08,780 --> 00:15:13,340
single machine things but turns out this

00:15:11,000 --> 00:15:15,440
quest this MGMT it runs as an agent and

00:15:13,340 --> 00:15:17,150
you can run it on multiple machines and

00:15:15,440 --> 00:15:19,100
they actually all cluster together using

00:15:17,150 --> 00:15:20,570
an algorithm called raft has to do with

00:15:19,100 --> 00:15:22,490
distributed consensus and all sorts of

00:15:20,570 --> 00:15:24,650
fancy stuff none of us understand we're

00:15:22,490 --> 00:15:26,390
just gonna pretend it does work for the

00:15:24,650 --> 00:15:28,100
moment so here's some code that I'm

00:15:26,390 --> 00:15:29,210
gonna run and I'm gonna run this on each

00:15:28,100 --> 00:15:30,950
machine in the cluster

00:15:29,210 --> 00:15:32,750
now it could spin out four different VMs

00:15:30,950 --> 00:15:33,300
but just to keep things simple I'm gonna

00:15:32,750 --> 00:15:35,190
run everything

00:15:33,300 --> 00:15:37,890
my local machine just because it's way

00:15:35,190 --> 00:15:39,570
faster is that cool the only catch is we

00:15:37,890 --> 00:15:40,740
have to specify different ports manually

00:15:39,570 --> 00:15:42,839
because normally they all use the same

00:15:40,740 --> 00:15:43,800
port and what the code is gonna look

00:15:42,839 --> 00:15:46,230
like is something like this so we have

00:15:43,800 --> 00:15:48,050
this options variable which is a struct

00:15:46,230 --> 00:15:51,750
which just takes some fields so strategy

00:15:48,050 --> 00:15:54,570
equals RR max equals to TTL equals 10

00:15:51,750 --> 00:15:56,459
and this options variable goes into this

00:15:54,570 --> 00:15:59,279
schedule function remember functions

00:15:56,459 --> 00:16:01,649
return streams of values it has a name

00:15:59,279 --> 00:16:03,630
space and the options and what it will

00:16:01,649 --> 00:16:06,899
do is this this function will run on

00:16:03,630 --> 00:16:09,120
every machine in the cluster and every

00:16:06,899 --> 00:16:11,329
machine in the cluster will tell the

00:16:09,120 --> 00:16:13,980
rest of the cluster its hostname and

00:16:11,329 --> 00:16:15,870
somehow with distributed consensus magic

00:16:13,980 --> 00:16:18,570
the function on each machine will

00:16:15,870 --> 00:16:21,000
independently agree on which machines to

00:16:18,570 --> 00:16:22,260
choose from the available set so if you

00:16:21,000 --> 00:16:24,149
have three machines running and we've

00:16:22,260 --> 00:16:26,670
asked it to pick two it'll return an

00:16:24,149 --> 00:16:28,769
array of those two chosen machines and

00:16:26,670 --> 00:16:32,970
then down here at the bottom what we do

00:16:28,769 --> 00:16:35,519
is we just pick which machine to run it

00:16:32,970 --> 00:16:37,320
on and do something so if you're

00:16:35,519 --> 00:16:38,940
scheduled if you're in the set run the

00:16:37,320 --> 00:16:40,649
thing now we can do this as a regular

00:16:38,940 --> 00:16:43,980
demo or we can do this with a docker

00:16:40,649 --> 00:16:46,920
container which would you prefer you

00:16:43,980 --> 00:16:48,360
really want the docker thing okay okay

00:16:46,920 --> 00:16:50,850
we'll do the doctor thing so I'm gonna

00:16:48,360 --> 00:16:55,880
run just a multiple MGMT agents right

00:16:50,850 --> 00:16:58,020
here and let's see what's the command

00:16:55,880 --> 00:17:01,529
okay so I'm gonna run this big watch

00:16:58,020 --> 00:17:03,029
command here which should show you

00:17:01,529 --> 00:17:05,640
what's happening so what I did I had the

00:17:03,029 --> 00:17:09,360
code create a docker container on each

00:17:05,640 --> 00:17:10,949
machine and run a little thing saying

00:17:09,360 --> 00:17:15,000
who's scheduled and who's the set of

00:17:10,949 --> 00:17:16,490
scheduling so I ran one machine and so

00:17:15,000 --> 00:17:18,689
now I'm gonna start up a second one

00:17:16,490 --> 00:17:20,970
again so it looks a little scary but

00:17:18,689 --> 00:17:22,140
it's basically just the URLs to change

00:17:20,970 --> 00:17:25,260
stuff so I'm running a second machine

00:17:22,140 --> 00:17:27,270
there grouping together and you can see

00:17:25,260 --> 00:17:29,970
in a moment this is basically the output

00:17:27,270 --> 00:17:32,820
from the first machine it says I'm h1

00:17:29,970 --> 00:17:34,530
hostname h1 I'm scheduled and the people

00:17:32,820 --> 00:17:37,950
who are scheduled or the machines are h1

00:17:34,530 --> 00:17:39,870
and h2 on h2 you can see it also thinks

00:17:37,950 --> 00:17:42,330
that it's scheduled and it sees that h1

00:17:39,870 --> 00:17:43,740
and h2 are also scheduled and if you

00:17:42,330 --> 00:17:46,230
look down here I'm just running a docker

00:17:43,740 --> 00:17:47,220
PS you can see that I've started up two

00:17:46,230 --> 00:17:50,280
containers

00:17:47,220 --> 00:17:52,500
it's called dh2 which is the one that

00:17:50,280 --> 00:17:55,350
the second host schedules and this one

00:17:52,500 --> 00:17:57,750
is called D dot H one okay does that

00:17:55,350 --> 00:17:59,010
make sense it's a bit stick bit tricky

00:17:57,750 --> 00:18:01,320
to see but watch what happens when I

00:17:59,010 --> 00:18:05,570
start up a third one so um starting up a

00:18:01,320 --> 00:18:09,750
third one they're clustering together

00:18:05,570 --> 00:18:11,850
and you can see that nothing has changed

00:18:09,750 --> 00:18:14,250
because if you remember in the code we

00:18:11,850 --> 00:18:16,980
said max of two so the scheduler was

00:18:14,250 --> 00:18:19,110
told pick a maximum of two host fleas

00:18:16,980 --> 00:18:22,440
and assuming there's no bugs in my code

00:18:19,110 --> 00:18:25,049
watch what happens when I kill H - if I

00:18:22,440 --> 00:18:29,850
kill H - you can see something happens

00:18:25,049 --> 00:18:32,130
and boom this one switch to being h3 so

00:18:29,850 --> 00:18:34,440
noticed hey I'm missing a host now we

00:18:32,130 --> 00:18:37,110
need to have a new one and so h3 took

00:18:34,440 --> 00:18:39,750
over and is now scheduling the third

00:18:37,110 --> 00:18:41,970
docker container so it's docker h3 and

00:18:39,750 --> 00:18:47,220
docker h1 so everyone see that

00:18:41,970 --> 00:18:50,070
and what if we start up h2 again usually

00:18:47,220 --> 00:18:51,450
it doesn't change so it has it

00:18:50,070 --> 00:18:53,549
recognizes that doesn't want you to

00:18:51,450 --> 00:18:56,039
flip-flop so you can see that h1 and h3

00:18:53,549 --> 00:19:00,570
are still there until maybe you kill h3

00:18:56,039 --> 00:19:05,669
again and it'll switch over to h2 you

00:19:00,570 --> 00:19:09,659
see that is that cool okay oh we got

00:19:05,669 --> 00:19:11,070
some enthusiastic clap so the idea

00:19:09,659 --> 00:19:13,380
behind this is you might want a

00:19:11,070 --> 00:19:15,090
scheduler you might want to do auto

00:19:13,380 --> 00:19:17,190
scaling with vm's you might want to make

00:19:15,090 --> 00:19:18,960
some decision that impacts a whole bunch

00:19:17,190 --> 00:19:20,460
of machines in your cluster so which one

00:19:18,960 --> 00:19:21,150
to elect is the primary host or

00:19:20,460 --> 00:19:23,460
something like that

00:19:21,150 --> 00:19:25,440
all these complex logical things you

00:19:23,460 --> 00:19:27,059
just cannot express them with all the

00:19:25,440 --> 00:19:29,039
different possible variations of Yama

00:19:27,059 --> 00:19:30,900
files out there it's just not possible I

00:19:29,039 --> 00:19:32,789
don't think it's possible it's only

00:19:30,900 --> 00:19:35,340
possible if you constrain yourself to

00:19:32,789 --> 00:19:36,929
very small common types of

00:19:35,340 --> 00:19:38,280
infrastructure and if you want to build

00:19:36,929 --> 00:19:40,500
different things it's really much more

00:19:38,280 --> 00:19:42,059
custom for infrastructure the language

00:19:40,500 --> 00:19:43,980
hopefully gives you the power and the

00:19:42,059 --> 00:19:46,950
flexibility to build the custom thing

00:19:43,980 --> 00:19:48,419
that's very safe that makes sense

00:19:46,950 --> 00:19:52,980
I have 10 more minutes do I see more

00:19:48,419 --> 00:19:54,419
demos are you fed up for the day okay if

00:19:52,980 --> 00:19:55,919
I don't hear a resounding more demos

00:19:54,419 --> 00:19:57,540
like I'm going home you want to hear

00:19:55,919 --> 00:20:00,060
more demos

00:19:57,540 --> 00:20:02,580
oh come on okay I try burn I'm trying to

00:20:00,060 --> 00:20:04,830
give them some energy so I'll show you

00:20:02,580 --> 00:20:07,320
another here's a little fun thing so

00:20:04,830 --> 00:20:08,730
here's some coding and to show you let

00:20:07,320 --> 00:20:10,470
me just kill all this for the moment I

00:20:08,730 --> 00:20:12,440
have to just uninstall docker as quickly

00:20:10,470 --> 00:20:16,500
as possible so it makes me feel not good

00:20:12,440 --> 00:20:21,810
all right I'm just joking just joking I

00:20:16,500 --> 00:20:24,300
don't hate docker that much so here's

00:20:21,810 --> 00:20:27,900
our date time function it returns a

00:20:24,300 --> 00:20:29,760
stream of integers right which is the

00:20:27,900 --> 00:20:31,350
number of seconds since 1917 because

00:20:29,760 --> 00:20:32,930
that's how computer people like to

00:20:31,350 --> 00:20:35,910
measure time which is totally weird but

00:20:32,930 --> 00:20:37,650
nevertheless this is that DT value or

00:20:35,910 --> 00:20:40,020
storing it there and then down here I'm

00:20:37,650 --> 00:20:43,860
just putting four random variables zero

00:20:40,020 --> 00:20:48,150
X I X 0 1 2 3 and I'm using this special

00:20:43,860 --> 00:20:49,620
syntax DT with curly brackets 1 2 3 & 4

00:20:48,150 --> 00:20:52,680
or 0 1 2 & 3

00:20:49,620 --> 00:20:56,610
and what this means is the value from

00:20:52,680 --> 00:20:58,440
date time is current value but if you do

00:20:56,610 --> 00:21:00,540
curly brackets 1 that means it's the

00:20:58,440 --> 00:21:02,730
previous value curly brackets 2 is the

00:21:00,540 --> 00:21:03,780
previous value before that and so on so

00:21:02,730 --> 00:21:06,300
we can actually look back in the past

00:21:03,780 --> 00:21:08,010
and see what value something was and

00:21:06,300 --> 00:21:11,070
that's really cool so I'll show you this

00:21:08,010 --> 00:21:13,110
for I'll show you this quickly just to

00:21:11,070 --> 00:21:21,570
prove to you that it works so I'm

00:21:13,110 --> 00:21:23,010
running this on the left just oops so

00:21:21,570 --> 00:21:24,270
you can see here I'm just printing out

00:21:23,010 --> 00:21:26,460
this stuff you can see this is the

00:21:24,270 --> 00:21:27,960
current time a second ago a second ago

00:21:26,460 --> 00:21:31,530
and so on and that's running in real

00:21:27,960 --> 00:21:35,850
time okay make sense is that possible

00:21:31,530 --> 00:21:37,470
yes so why is this useful here's a

00:21:35,850 --> 00:21:40,880
picture of something from my house in

00:21:37,470 --> 00:21:43,710
Canada what is this for anyone who has a

00:21:40,880 --> 00:21:44,850
thermostat and thermostats have a very

00:21:43,710 --> 00:21:46,680
interesting property does anyone know

00:21:44,850 --> 00:21:48,740
what it is besides controlling the

00:21:46,680 --> 00:21:51,620
temperature of your house or apartment

00:21:48,740 --> 00:21:55,680
anyone yes it's something called

00:21:51,620 --> 00:21:57,030
hysteresis and this is a some sort of

00:21:55,680 --> 00:21:59,100
weird thermostat it's a clear picture

00:21:57,030 --> 00:22:00,810
but I don't know what the units are it's

00:21:59,100 --> 00:22:01,050
from some other country that doesn't

00:22:00,810 --> 00:22:06,000
matter

00:22:01,050 --> 00:22:08,040
and what hysteresis is is hysteresis is

00:22:06,000 --> 00:22:10,020
a property you have a certain set point

00:22:08,040 --> 00:22:11,000
so I want my house at 20 Celsius for

00:22:10,020 --> 00:22:12,530
example and

00:22:11,000 --> 00:22:16,130
if it goes up a little bit higher than

00:22:12,530 --> 00:22:18,020
that the heaters gonna turn off and then

00:22:16,130 --> 00:22:20,210
the temperatures gonna drop and it's

00:22:18,020 --> 00:22:22,010
gonna click back on and if if the heater

00:22:20,210 --> 00:22:23,420
was super efficient and the thermostat

00:22:22,010 --> 00:22:25,910
had no hysteresis he would click back

00:22:23,420 --> 00:22:27,860
and off that click on and off again

00:22:25,910 --> 00:22:29,510
quickly cook very quickly and if this

00:22:27,860 --> 00:22:30,560
was something like a VM we wouldn't want

00:22:29,510 --> 00:22:32,000
this topic we don't want to flip-flop

00:22:30,560 --> 00:22:34,070
things very quickly

00:22:32,000 --> 00:22:35,900
so hysteresis actually can tell you I

00:22:34,070 --> 00:22:38,270
want a bit of a threshold before I go

00:22:35,900 --> 00:22:40,550
back on that make sense so I can

00:22:38,270 --> 00:22:43,070
actually model this in MGMT you wanna

00:22:40,550 --> 00:22:47,660
see a demo of this all right so I'm

00:22:43,070 --> 00:22:49,370
gonna run MGMT on the left and I'm just

00:22:47,660 --> 00:22:51,020
gonna run this command here it's again

00:22:49,370 --> 00:22:52,700
I'm printing out what's in the text file

00:22:51,020 --> 00:22:53,900
just for observability so we can see

00:22:52,700 --> 00:22:57,290
what's actually happening and I'm

00:22:53,900 --> 00:22:58,940
running verse list - - all right just so

00:22:57,290 --> 00:23:00,500
we can see the state I'm just being

00:22:58,940 --> 00:23:01,610
annoying I'm saying libvirt how many

00:23:00,500 --> 00:23:03,860
machines are running how many machines

00:23:01,610 --> 00:23:05,990
are running and you can see that MGMT is

00:23:03,860 --> 00:23:09,110
actually started up these first two VMs

00:23:05,990 --> 00:23:11,030
MGMT 1 and gmt 2 and it's also printing

00:23:09,110 --> 00:23:12,950
out this load here at the top that's my

00:23:11,030 --> 00:23:14,960
current system load and the threshold

00:23:12,950 --> 00:23:16,550
right here the code here is about 10

00:23:14,960 --> 00:23:19,550
lines of code so it's really simple and

00:23:16,550 --> 00:23:22,670
what I've done is I've asked MGMT when I

00:23:19,550 --> 00:23:24,530
hit the threshold of 1.5 I want you to

00:23:22,670 --> 00:23:27,230
shut down one of these two VMs please

00:23:24,530 --> 00:23:29,990
and in addition to just shutting down

00:23:27,230 --> 00:23:33,290
that VM I want to stay shut down until

00:23:29,990 --> 00:23:35,480
I've dropped below 1.5 for 10 seconds

00:23:33,290 --> 00:23:36,650
and only then will I reschedule the VM

00:23:35,480 --> 00:23:39,200
that makes sense

00:23:36,650 --> 00:23:40,910
so normally these would be bit Bitcoin

00:23:39,200 --> 00:23:42,410
mining or doing whatever but just to

00:23:40,910 --> 00:23:44,780
fake the load I'm just gonna actually

00:23:42,410 --> 00:23:46,700
run a whole bunch of tree commands to

00:23:44,780 --> 00:23:49,490
heat up my laptop and watch when this

00:23:46,700 --> 00:23:51,140
hits 1.5 this value one of these two VMs

00:23:49,490 --> 00:23:54,970
hopefully should shut down and just

00:23:51,140 --> 00:23:59,780
disappear all right so keep an eye on it

00:23:54,970 --> 00:24:02,030
okay it's going up maybe you live 64 or

00:23:59,780 --> 00:24:05,290
something boring okay one point for

00:24:02,030 --> 00:24:10,060
getting pretty close

00:24:05,290 --> 00:24:13,960
and boom there see MGMT - is gone just

00:24:10,060 --> 00:24:16,540
have MGMT running so MGM t1 is the only

00:24:13,960 --> 00:24:19,030
VM running and we're at 1.7 so watch

00:24:16,540 --> 00:24:20,770
once we go below 1.5 nothing's gonna

00:24:19,030 --> 00:24:24,100
happen until we've been below for 10

00:24:20,770 --> 00:24:28,930
seconds so let's watch not touching

00:24:24,100 --> 00:24:30,670
anything okay 1.8 the kernel reclick

00:24:28,930 --> 00:24:31,900
calculates the load every 5 seconds

00:24:30,670 --> 00:24:33,250
that's just internally how the kernel

00:24:31,900 --> 00:24:36,460
does it so that's why you only see a

00:24:33,250 --> 00:24:38,380
change in the value every 5 seconds 1.6

00:24:36,460 --> 00:24:42,160
so it's still dropping down you can see

00:24:38,380 --> 00:24:44,580
the Machine still shut off one point

00:24:42,160 --> 00:24:47,020
five zero I think that's not quite there

00:24:44,580 --> 00:24:50,890
so next one okay one point three so now

00:24:47,020 --> 00:24:56,350
we're waiting ten seconds okay five

00:24:50,890 --> 00:24:58,600
seconds four three two one boom and you

00:24:56,350 --> 00:25:05,590
can see it started back up is that cool

00:24:58,600 --> 00:25:07,720
you like that you can clap Yeah right so

00:25:05,590 --> 00:25:09,430
this is a completely simple example this

00:25:07,720 --> 00:25:11,740
is just a silly example of scheduling

00:25:09,430 --> 00:25:13,330
one VM but now if you start to think in

00:25:11,740 --> 00:25:14,770
your mind about combining the auto

00:25:13,330 --> 00:25:17,530
scaling stuff that we did with

00:25:14,770 --> 00:25:19,930
hysteresis or different resources

00:25:17,530 --> 00:25:21,640
container resources vert resources all

00:25:19,930 --> 00:25:23,590
this stuff is completely agnostic to

00:25:21,640 --> 00:25:24,970
what resources you do so for some reason

00:25:23,590 --> 00:25:27,010
you didn't want to do this with a vert

00:25:24,970 --> 00:25:28,630
machine you want to use containers you

00:25:27,010 --> 00:25:30,310
can do that the whole concept for

00:25:28,630 --> 00:25:31,750
example of kubernetes where you're fixed

00:25:30,310 --> 00:25:34,150
to the like container resources or

00:25:31,750 --> 00:25:36,100
basically it's to to structure to hard

00:25:34,150 --> 00:25:38,110
core and I think this general approach

00:25:36,100 --> 00:25:39,550
with a DSL this friendly language that

00:25:38,110 --> 00:25:41,800
allows you to program these things is

00:25:39,550 --> 00:25:43,420
much much better and all the examples

00:25:41,800 --> 00:25:45,190
I'm showing today there in the github

00:25:43,420 --> 00:25:46,660
project in the example slash lining

00:25:45,190 --> 00:25:50,440
folder and you can try these out at home

00:25:46,660 --> 00:25:52,810
on your own laptops cool all right I

00:25:50,440 --> 00:25:55,360
kind of only about 5 minutes left so I'm

00:25:52,810 --> 00:25:57,490
just gonna go through the end so the

00:25:55,360 --> 00:25:58,600
MGMT project it's still pretty new in

00:25:57,490 --> 00:26:00,220
the grand scheme of things it's not a

00:25:58,600 --> 00:26:02,230
big fancy project with millions of

00:26:00,220 --> 00:26:04,420
dollars of Google development money it's

00:26:02,230 --> 00:26:06,210
just me working on it and all of the

00:26:04,420 --> 00:26:08,740
people on the Internet's which is huge

00:26:06,210 --> 00:26:10,180
when you get patches from people so

00:26:08,740 --> 00:26:13,060
there are still some bugs it's not

00:26:10,180 --> 00:26:14,680
perfect I think most of the bugs I've

00:26:13,060 --> 00:26:16,690
only actually know of one bug that's

00:26:14,680 --> 00:26:18,550
probably a little annoying but I only

00:26:16,690 --> 00:26:19,250
found about it yesterday but basically

00:26:18,550 --> 00:26:21,260
most of the

00:26:19,250 --> 00:26:22,580
are all gone so any bugs you find are

00:26:21,260 --> 00:26:24,410
probably very small things that need

00:26:22,580 --> 00:26:26,180
fixing and we're just sort of polishing

00:26:24,410 --> 00:26:28,340
right now it's sort of in the final

00:26:26,180 --> 00:26:30,560
stretch functions that are built into

00:26:28,340 --> 00:26:32,330
the language for example like all the

00:26:30,560 --> 00:26:34,130
math functions and random things like

00:26:32,330 --> 00:26:36,650
that some of these need to be added

00:26:34,130 --> 00:26:38,480
there's still some missing maybe there's

00:26:36,650 --> 00:26:39,800
some new real time event source for

00:26:38,480 --> 00:26:41,180
example for a temperature sensor or

00:26:39,800 --> 00:26:43,370
something like that that you'd like to

00:26:41,180 --> 00:26:44,660
add so there's still some things missing

00:26:43,370 --> 00:26:47,210
but you can get a lot done today and

00:26:44,660 --> 00:26:49,070
very easy to add new ones new resources

00:26:47,210 --> 00:26:50,720
so we have resources for virtual

00:26:49,070 --> 00:26:52,790
machines containers and files and

00:26:50,720 --> 00:26:54,350
packages and services and all bunch of

00:26:52,790 --> 00:26:56,390
other stuff but it would be nice to even

00:26:54,350 --> 00:26:58,550
have more cloud type resources kind of

00:26:56,390 --> 00:27:00,410
like terraform we have an ec2 resource

00:26:58,550 --> 00:27:02,030
but nothing else right now that's cloud

00:27:00,410 --> 00:27:04,610
like if you're into that sort of thing

00:27:02,030 --> 00:27:06,800
so that EXO scale or EXO scale company

00:27:04,610 --> 00:27:09,350
they could like you know add an EXO

00:27:06,800 --> 00:27:11,060
scale management thingy I don't know new

00:27:09,350 --> 00:27:13,340
features we actually don't have function

00:27:11,060 --> 00:27:15,320
values which is kind of obscure in terms

00:27:13,340 --> 00:27:16,610
of programming but it might be fun you

00:27:15,320 --> 00:27:19,190
can't actually store extremely large

00:27:16,610 --> 00:27:21,320
files in MGMT so if you want to store is

00:27:19,190 --> 00:27:23,240
OS I'll tell you about how this works on

00:27:21,320 --> 00:27:25,580
my talk tomorrow but it's not perfect

00:27:23,240 --> 00:27:27,230
but it's it's pretty darn close and

00:27:25,580 --> 00:27:29,630
there's a few bugs but nothing serious

00:27:27,230 --> 00:27:33,230
um how can you help do you all want to

00:27:29,630 --> 00:27:35,180
help maybe fair enough

00:27:33,230 --> 00:27:36,590
so you can use this tested patch it

00:27:35,180 --> 00:27:38,300
share with your friends document it

00:27:36,590 --> 00:27:39,860
start on github if you're into that you

00:27:38,300 --> 00:27:40,250
can blog it you can tweet it if you have

00:27:39,860 --> 00:27:42,050
tweeter

00:27:40,250 --> 00:27:43,580
I'm purple idea you can like hit me up

00:27:42,050 --> 00:27:45,710
you're like hey hack on it with your

00:27:43,580 --> 00:27:46,130
friends hack on this stuff and the sad

00:27:45,710 --> 00:27:48,110
thing is

00:27:46,130 --> 00:27:50,000
MGMT needs funding because basically i

00:27:48,110 --> 00:27:51,410
left my job at this linux company to

00:27:50,000 --> 00:27:53,960
work on this free software stuff which

00:27:51,410 --> 00:27:56,840
totally is bad financially so you'd like

00:27:53,960 --> 00:28:00,410
to donate money sign up I have a patreon

00:27:56,840 --> 00:28:02,230
thing and finding a hacker is very sexy

00:28:00,410 --> 00:28:07,280
so you should definitely get on this

00:28:02,230 --> 00:28:08,660
let's just recap it's a very bad

00:28:07,280 --> 00:28:09,140
recapping joke that I'm making all my

00:28:08,660 --> 00:28:11,330
talks

00:28:09,140 --> 00:28:13,760
he puts the cat back on his pen so we

00:28:11,330 --> 00:28:17,060
have an IRC channel or about 70 some-odd

00:28:13,760 --> 00:28:19,760
people hanging out on freenode in MGMT

00:28:17,060 --> 00:28:21,740
config so come show us there's a tweeter

00:28:19,760 --> 00:28:22,910
account if you don't like hearing crap

00:28:21,740 --> 00:28:25,040
that I have to say but you want to hear

00:28:22,910 --> 00:28:26,960
just MGMT news and we have a mailing

00:28:25,040 --> 00:28:28,310
list as well where there's announcements

00:28:26,960 --> 00:28:30,350
and light discussion which you can also

00:28:28,310 --> 00:28:31,640
join there's the technical blog of James

00:28:30,350 --> 00:28:33,010
you all know about the technical blog of

00:28:31,640 --> 00:28:34,780
James now right

00:28:33,010 --> 00:28:36,520
purple idea come check it out there's

00:28:34,780 --> 00:28:38,440
some old talks online whole bunch of

00:28:36,520 --> 00:28:39,670
blog posts and I've got two and a half

00:28:38,440 --> 00:28:41,680
blog posts that are written right now

00:28:39,670 --> 00:28:43,540
and I'm going to be putting out shortly

00:28:41,680 --> 00:28:44,950
and you get early access if you donate

00:28:43,540 --> 00:28:49,090
money on patreon

00:28:44,950 --> 00:28:50,470
o SDC that's here tomorrow I'm giving

00:28:49,090 --> 00:28:52,510
the super advance talk which would be

00:28:50,470 --> 00:28:54,130
much less fun but super informative so

00:28:52,510 --> 00:28:55,720
you want to see stuff that almost no

00:28:54,130 --> 00:28:58,290
people in the world know about I will be

00:28:55,720 --> 00:29:00,610
showing that tomorrow for your pleasure

00:28:58,290 --> 00:29:02,830
you all have to help me out if you like

00:29:00,610 --> 00:29:04,780
this talk see the very tall man who's

00:29:02,830 --> 00:29:06,880
hiding in the back of the room his name

00:29:04,780 --> 00:29:08,830
is burned it looks like this whenever

00:29:06,880 --> 00:29:12,820
he's holding a water bottle before you

00:29:08,830 --> 00:29:14,560
leave today anytime today 1 a.m. in the

00:29:12,820 --> 00:29:16,210
morning doesn't matter go up to him be

00:29:14,560 --> 00:29:18,490
like hey burned James's talk was really

00:29:16,210 --> 00:29:21,160
cool I like his software could you ask

00:29:18,490 --> 00:29:22,870
net ways to help us do this stuff if

00:29:21,160 --> 00:29:24,910
everyone bothers him for two seconds

00:29:22,870 --> 00:29:27,010
it'll be super hilarious you know he's

00:29:24,910 --> 00:29:28,960
just he's talking to some girl trying to

00:29:27,010 --> 00:29:30,100
be cool like super tall and someone's

00:29:28,960 --> 00:29:31,840
like hey excuse me burn I've to tell you

00:29:30,100 --> 00:29:33,550
something James talk was great

00:29:31,840 --> 00:29:38,650
think about if all hundred of you did

00:29:33,550 --> 00:29:40,090
that would that be funny yes okay if you

00:29:38,650 --> 00:29:42,340
promise to stick these on your laptops

00:29:40,090 --> 00:29:43,390
come up I'll hide over on the corner and

00:29:42,340 --> 00:29:46,930
I'll give you a free sticker if you

00:29:43,390 --> 00:29:49,290
promise to use them it's not cool thank

00:29:46,930 --> 00:29:49,290
you very much

00:29:54,090 --> 00:30:00,240
I have one minute for questions or zero

00:29:58,050 --> 00:30:01,920
minutes zero seconds

00:30:00,240 --> 00:30:04,470
I have zero seconds so I'm around here

00:30:01,920 --> 00:30:07,020
tomorrow and today so feel free to come

00:30:04,470 --> 00:30:08,450
grab me if you have a question and yeah

00:30:07,020 --> 00:30:10,100
that's it

00:30:08,450 --> 00:30:15,590
thank you James

00:30:10,100 --> 00:30:15,590
[Applause]

00:30:17,740 --> 00:30:21,839

YouTube URL: https://www.youtube.com/watch?v=g61sCtTb5lM


