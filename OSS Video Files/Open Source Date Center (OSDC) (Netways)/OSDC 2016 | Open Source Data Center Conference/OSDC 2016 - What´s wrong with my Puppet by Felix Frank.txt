Title: OSDC 2016 - WhatÂ´s wrong with my Puppet by Felix Frank
Publication date: 2016-05-02
Playlist: OSDC 2016 | Open Source Data Center Conference
Description: 
	Configuration management is great, and it's here to stay. Among the available tools, Puppet has been holding a prominent position for a long time. Born in Ruby, it's on the verge of turning into compiled binaries. Until that happens, and we're all updated, Puppet can and will fail in amazing ways and yield cryptic Ruby exceptions and other confusing messages.
This presentation gives you a set of tools and approaches to shine some light into the darkness of Puppet related failures.
Captions: 
	00:00:11,680 --> 00:00:19,369
so welcome back everybody we will start

00:00:15,680 --> 00:00:20,810
our next talk with Felix Frank and he

00:00:19,369 --> 00:00:32,660
will talk about what's wrong about

00:00:20,810 --> 00:00:35,570
puppet enjoy Thanks hi I'm feelings and

00:00:32,660 --> 00:00:37,640
yeah we are talking about puppet and I

00:00:35,570 --> 00:00:42,980
think there's nothing wrong with puppet

00:00:37,640 --> 00:00:46,370
per se but yeah we get to that so a bit

00:00:42,980 --> 00:00:48,140
about me I'm an Operations person I have

00:00:46,370 --> 00:00:53,060
been an Operations person for quite a

00:00:48,140 --> 00:00:56,660
while my first assignment was at a

00:00:53,060 --> 00:00:59,780
physics Institute which which is

00:00:56,660 --> 00:01:01,400
actually a CF engine shop that was

00:00:59,780 --> 00:01:05,200
interesting although I didn't get to do

00:01:01,400 --> 00:01:09,470
much with CF engine in my time there and

00:01:05,200 --> 00:01:13,579
then I spent six years at a managed

00:01:09,470 --> 00:01:15,500
hosting provider and did all the things

00:01:13,579 --> 00:01:19,070
with puppet there was that was pretty

00:01:15,500 --> 00:01:21,170
neat and just a few months ago I switch

00:01:19,070 --> 00:01:25,909
to yet another managed services provider

00:01:21,170 --> 00:01:28,640
the unbelievable machine company we we

00:01:25,909 --> 00:01:31,700
do managed hosting managed services but

00:01:28,640 --> 00:01:33,979
there's a focus on big data and we do

00:01:31,700 --> 00:01:37,250
some things beyond that I'll get a bit

00:01:33,979 --> 00:01:41,260
more into that later and well puppet was

00:01:37,250 --> 00:01:44,450
nice enough to rebrand right in this ah

00:01:41,260 --> 00:01:47,330
time frame so this slide is nicely

00:01:44,450 --> 00:01:50,470
balanced I do have a Twitter I do have a

00:01:47,330 --> 00:01:55,040
blog I'll check those out if that's

00:01:50,470 --> 00:01:57,020
things that interest you ok with that

00:01:55,040 --> 00:01:59,420
out of the other the way we already

00:01:57,020 --> 00:02:03,170
tested that everything is readable can

00:01:59,420 --> 00:02:05,450
everybody understand what I'm saying can

00:02:03,170 --> 00:02:09,200
you hear me breathing that's been an

00:02:05,450 --> 00:02:14,510
issue in this venue so guess this works

00:02:09,200 --> 00:02:17,000
all right so software right I mean does

00:02:14,510 --> 00:02:19,730
it even work most of the time or is it

00:02:17,000 --> 00:02:21,739
more like oh yeah you have the software

00:02:19,730 --> 00:02:25,200
and this time around and even did what I

00:02:21,739 --> 00:02:28,920
wanted to do and and I didn't spend days

00:02:25,200 --> 00:02:31,260
thing with it but through this most

00:02:28,920 --> 00:02:33,840
software will behave erratically and pop

00:02:31,260 --> 00:02:37,340
it is a fairly complex piece of software

00:02:33,840 --> 00:02:40,650
in it and it can and will fail and very

00:02:37,340 --> 00:02:43,650
exciting ways matter of fact there's so

00:02:40,650 --> 00:02:46,440
many ways in which puppet can do things

00:02:43,650 --> 00:02:53,370
wrong for you that I cannot possibly

00:02:46,440 --> 00:02:55,590
cover all the bases so I'm going going

00:02:53,370 --> 00:02:57,900
to focus on a couple of things that

00:02:55,590 --> 00:03:01,530
typically can go wrong and trip you up

00:02:57,900 --> 00:03:04,380
and see if I can give you some help

00:03:01,530 --> 00:03:08,610
towards getting a grip on on these

00:03:04,380 --> 00:03:14,400
scenarios so one thing that that we see

00:03:08,610 --> 00:03:16,530
in everyday operation is that the you

00:03:14,400 --> 00:03:18,599
you configure puppet and you're pretty

00:03:16,530 --> 00:03:21,510
sure that it will now do the thing that

00:03:18,599 --> 00:03:24,269
you want to do but somehow configuration

00:03:21,510 --> 00:03:27,540
that isn't isn't quite what you what you

00:03:24,269 --> 00:03:31,680
expected some component we get the

00:03:27,540 --> 00:03:34,109
master BFD agent just won't are like

00:03:31,680 --> 00:03:36,389
consume these new files that you have

00:03:34,109 --> 00:03:39,930
deployed and you expect to be read and

00:03:36,389 --> 00:03:42,120
used and that can be pretty interesting

00:03:39,930 --> 00:03:44,850
and frustrating and I'll just show you

00:03:42,120 --> 00:03:48,150
some ways that I use to get a handle on

00:03:44,850 --> 00:03:51,630
those cases of course it's always fun

00:03:48,150 --> 00:03:56,010
when your manifest plainly won't compile

00:03:51,630 --> 00:03:58,170
or will run and pop it just won't work I

00:03:56,010 --> 00:04:00,989
mean that's that's pretty much something

00:03:58,170 --> 00:04:04,739
that can happen any other day but uh

00:04:00,989 --> 00:04:06,980
there's there's some ways to navigate

00:04:04,739 --> 00:04:12,120
those as well and I'd like to show those

00:04:06,980 --> 00:04:16,200
and finally sometimes things do compile

00:04:12,120 --> 00:04:18,959
and they will run but they won't do what

00:04:16,200 --> 00:04:22,620
you want to do my favorite is play me

00:04:18,959 --> 00:04:25,260
nothing happens so yeah I edit this new

00:04:22,620 --> 00:04:28,770
file resource to my manifest or this ex

00:04:25,260 --> 00:04:33,060
extra now fire nothing so what do we do

00:04:28,770 --> 00:04:36,240
let's find out also just yesterday i

00:04:33,060 --> 00:04:38,700
found this relevant book which is which

00:04:36,240 --> 00:04:39,030
is really interesting and which which in

00:04:38,700 --> 00:04:41,130
caps

00:04:39,030 --> 00:04:44,460
pretty well the the state of affairs

00:04:41,130 --> 00:04:47,160
which is sometimes puppet tells you that

00:04:44,460 --> 00:04:52,410
something went wrong but it's it's so a

00:04:47,160 --> 00:04:54,480
park and and so nondescript that that

00:04:52,410 --> 00:04:58,410
it's pretty much impossible to glean

00:04:54,480 --> 00:05:02,850
what's going on thanks to Craig done by

00:04:58,410 --> 00:05:07,740
the way for this one okay so our first

00:05:02,850 --> 00:05:09,450
first scenario is public behaving some

00:05:07,740 --> 00:05:15,300
way and you want it to behave another

00:05:09,450 --> 00:05:19,770
way but nada so there's there's two

00:05:15,300 --> 00:05:23,400
tools that I bring into play for this so

00:05:19,770 --> 00:05:25,980
11 I'm designating the hammer which is

00:05:23,400 --> 00:05:30,360
not not very subtle approach but it's

00:05:25,980 --> 00:05:32,370
it's a very ah using using estres you

00:05:30,360 --> 00:05:35,160
can analyze all kind of things you can

00:05:32,370 --> 00:05:37,080
also use it to to watch your other

00:05:35,160 --> 00:05:40,800
pieces of software not only puppet so

00:05:37,080 --> 00:05:43,110
it's something that I like using uh not

00:05:40,800 --> 00:05:46,590
if all else fails but when i'm too lazy

00:05:43,110 --> 00:05:50,670
to to get more into depth and usually

00:05:46,590 --> 00:05:53,310
I'm pretty lazy if you want to be a

00:05:50,670 --> 00:05:57,300
little more subtle about it puppet bring

00:05:53,310 --> 00:05:59,550
some tools of its own um being the

00:05:57,300 --> 00:06:03,750
conflict print suit and we will see

00:05:59,550 --> 00:06:11,310
those in action as well so it's a live

00:06:03,750 --> 00:06:13,530
demo time focus okay this will be

00:06:11,310 --> 00:06:18,540
interesting because I cannot see what

00:06:13,530 --> 00:06:26,310
I'm typing here so all all errors on my

00:06:18,540 --> 00:06:28,820
own so a simple example you you run your

00:06:26,310 --> 00:06:32,010
running puppet and you want to find out

00:06:28,820 --> 00:06:34,380
what Papa Doc on file is actually being

00:06:32,010 --> 00:06:36,150
read because there could be more than

00:06:34,380 --> 00:06:38,250
one puppet on file in your system for

00:06:36,150 --> 00:06:41,220
whatever reason like you are running

00:06:38,250 --> 00:06:44,610
puppet in different contexts different

00:06:41,220 --> 00:06:48,450
groups have different puppet agent

00:06:44,610 --> 00:06:52,000
environments so the estres approach is

00:06:48,450 --> 00:06:59,490
simple enough we wrap our

00:06:52,000 --> 00:07:10,890
usual call with estrace ah let's do a

00:06:59,490 --> 00:07:10,890
simple fly oops yeah off to a good start

00:07:12,480 --> 00:07:20,260
alright so um I like using puppet apply

00:07:17,980 --> 00:07:23,110
for four simple testing because I can

00:07:20,260 --> 00:07:26,110
just pass manifest code right on the CLI

00:07:23,110 --> 00:07:28,360
that's probably something that folks who

00:07:26,110 --> 00:07:30,940
use master an agent don't do often and

00:07:28,360 --> 00:07:33,640
the folks who use masterless puppet do

00:07:30,940 --> 00:07:36,820
all the time but at it's pretty neat

00:07:33,640 --> 00:07:39,520
it's pretty helpful and so this is this

00:07:36,820 --> 00:07:44,050
is just a call to do a simple statement

00:07:39,520 --> 00:07:46,960
on the console and estres of its own

00:07:44,050 --> 00:07:49,390
will will dump a whole lot of

00:07:46,960 --> 00:07:51,370
information on us about all the system

00:07:49,390 --> 00:08:00,910
calls that are being done it's a good

00:07:51,370 --> 00:08:02,650
idea to to limit those to the operations

00:08:00,910 --> 00:08:07,210
that are pertinent to to the file system

00:08:02,650 --> 00:08:08,770
and that's still quite a lot so what you

00:08:07,210 --> 00:08:15,340
want to do is of course you grab that

00:08:08,770 --> 00:08:17,440
but since s tries helpfully puts all the

00:08:15,340 --> 00:08:19,330
information on on the standard error you

00:08:17,440 --> 00:08:22,630
want to redirect that to stand it out

00:08:19,330 --> 00:08:26,229
before you pipe that anywhere so now

00:08:22,630 --> 00:08:32,760
that's done let's look for the puppet

00:08:26,229 --> 00:08:32,760
account what

00:08:36,060 --> 00:08:42,630
huh that that's not a lot going on

00:08:52,900 --> 00:09:16,640
notice thank you what that you know I I

00:09:14,510 --> 00:09:20,630
shouldn't have prepared this live demo

00:09:16,640 --> 00:09:24,680
on a Linux system rather than a Mac so

00:09:20,630 --> 00:09:26,480
bummer I think estres is not an option

00:09:24,680 --> 00:09:28,820
at the moment i'll i won't bore you with

00:09:26,480 --> 00:09:31,160
me reading lots of men pages on finding

00:09:28,820 --> 00:09:35,630
out how s trazer works on a mac because

00:09:31,160 --> 00:09:37,300
oh man seriously though ok that's you

00:09:35,630 --> 00:09:41,600
know what let's just look at Mike and

00:09:37,300 --> 00:09:46,040
slides about that so I would have done

00:09:41,600 --> 00:09:50,810
pretty much just that and on a Linux

00:09:46,040 --> 00:09:55,010
system this is what happens you get get

00:09:50,810 --> 00:09:57,890
some some nines of output in this case

00:09:55,010 --> 00:10:00,920
really not much just that a puppet

00:09:57,890 --> 00:10:03,350
dhadkan file was found and was opened

00:10:00,920 --> 00:10:08,540
and in this case because i'm not running

00:10:03,350 --> 00:10:11,000
his route it's being pulled from my home

00:10:08,540 --> 00:10:12,920
directory and there's a dog puppet labs

00:10:11,000 --> 00:10:15,200
tree there and this is puppet for

00:10:12,920 --> 00:10:17,630
running so things are in dot puppet labs

00:10:15,200 --> 00:10:20,390
if you're running Papa 3 you'll find

00:10:17,630 --> 00:10:22,940
things in dot puppet or if you're rude

00:10:20,390 --> 00:10:30,530
it's an Etsy puppet and four puppeteers

00:10:22,940 --> 00:10:32,300
at sea puppet labs okay now I think

00:10:30,530 --> 00:10:35,170
looking for what puppet comp is being

00:10:32,300 --> 00:10:38,330
used as we're at a quaint example

00:10:35,170 --> 00:10:40,370
something more interesting is where as a

00:10:38,330 --> 00:10:43,070
specific provider loaded but because in

00:10:40,370 --> 00:10:45,290
some cases your system can become a

00:10:43,070 --> 00:10:46,870
little unwieldy with the Ruby code

00:10:45,290 --> 00:10:50,480
floating around and can be hard to

00:10:46,870 --> 00:10:55,430
discern what Ruby code is loaded as a

00:10:50,480 --> 00:10:58,730
matter of fact um Ruby will go all over

00:10:55,430 --> 00:11:02,990
the place looking for stuff so if you do

00:10:58,730 --> 00:11:05,600
this you get a wall of text and it all

00:11:02,990 --> 00:11:10,499
says things like oh I looked in

00:11:05,600 --> 00:11:12,569
hey I see you've got the CF property

00:11:10,499 --> 00:11:14,790
list gem so let's see if their puppet

00:11:12,569 --> 00:11:18,269
providers in there oh there are none

00:11:14,790 --> 00:11:22,249
okay I'm gonna keep looking and so on

00:11:18,269 --> 00:11:25,800
and so forth and if you do some Ruby

00:11:22,249 --> 00:11:28,350
development type stuff you'll have lots

00:11:25,800 --> 00:11:30,749
of gems on your system so there's a lot

00:11:28,350 --> 00:11:35,069
of lookups but if you wade through all

00:11:30,749 --> 00:11:38,759
that you will finally find that yeah it

00:11:35,069 --> 00:11:41,189
found the puppet gem and there's provide

00:11:38,759 --> 00:11:45,959
us in there and yes it load the app

00:11:41,189 --> 00:11:48,959
provider fun fact just yesterday I had a

00:11:45,959 --> 00:11:51,600
case where one of our agents behaved

00:11:48,959 --> 00:11:57,029
weirdly and and couldn't apply a

00:11:51,600 --> 00:12:00,230
resource from that we added a file line

00:11:57,029 --> 00:12:03,389
resource um from standard lip right and

00:12:00,230 --> 00:12:05,550
turned out one of the agents had a local

00:12:03,389 --> 00:12:08,790
installation of the standard lip module

00:12:05,550 --> 00:12:10,679
so at some point someone had done a

00:12:08,790 --> 00:12:15,569
puppet module install of standard lip

00:12:10,679 --> 00:12:18,660
but I was pretty old and so the aging on

00:12:15,569 --> 00:12:22,139
that box will load the wrong file line

00:12:18,660 --> 00:12:24,119
type and it wouldn't work didn't didn't

00:12:22,139 --> 00:12:26,579
support other parameters and yea high

00:12:24,119 --> 00:12:28,799
jinks ensue so that's pretty dangerous

00:12:26,579 --> 00:12:33,569
and and that's something that you can

00:12:28,799 --> 00:12:40,980
very well trace using this method and

00:12:33,569 --> 00:12:43,259
matter of fact I did okay so back to

00:12:40,980 --> 00:12:47,100
Papac conf and I thought you we don't

00:12:43,259 --> 00:12:50,579
need to use estres for everything and as

00:12:47,100 --> 00:12:54,629
a matter of fact let's go back to demo

00:12:50,579 --> 00:13:01,110
mode so the let's call it the real way

00:12:54,629 --> 00:13:03,959
to find a public conf is to use this

00:13:01,110 --> 00:13:06,049
neat a tool you can you can print all

00:13:03,959 --> 00:13:08,730
the configuration values from habit and

00:13:06,049 --> 00:13:12,389
the location of the puppet conf is yet

00:13:08,730 --> 00:13:14,869
another customizable value so what I

00:13:12,389 --> 00:13:14,869
like doing

00:13:16,010 --> 00:13:22,360
when I don't know what and what an

00:13:18,170 --> 00:13:24,410
option is called I will just print all

00:13:22,360 --> 00:13:28,370
configuration and grab for whatever i'm

00:13:24,410 --> 00:13:34,390
looking for so let's see about puppet

00:13:28,370 --> 00:13:37,960
conf okay so there's there's like two

00:13:34,390 --> 00:13:40,820
matches one is the config file name

00:13:37,960 --> 00:13:44,240
which is puppet conf so I can change

00:13:40,820 --> 00:13:49,130
that to like chef conf that will be

00:13:44,240 --> 00:13:52,610
confusing but what happens is this is

00:13:49,130 --> 00:13:55,730
used to build the the full path to the

00:13:52,610 --> 00:13:57,620
to the public comps that is used so the

00:13:55,730 --> 00:14:03,830
value that is actually if interest here

00:13:57,620 --> 00:14:11,150
is the config configuration which is a

00:14:03,830 --> 00:14:14,060
great example well done so what you can

00:14:11,150 --> 00:14:17,420
do instead is you tell her tell that the

00:14:14,060 --> 00:14:18,890
tool just give me the value of config so

00:14:17,420 --> 00:14:22,640
that I can tell where puppet compass

00:14:18,890 --> 00:14:26,360
being locked up which just gives us this

00:14:22,640 --> 00:14:29,870
without the are key value notation so

00:14:26,360 --> 00:14:35,720
this is something that you can then use

00:14:29,870 --> 00:14:38,330
in your shell scripts right kind of like

00:14:35,720 --> 00:14:42,410
this and yay now we know where puppet

00:14:38,330 --> 00:14:45,080
confess again that that is not the most

00:14:42,410 --> 00:14:47,210
powerful example but we can you can put

00:14:45,080 --> 00:14:49,850
it to good use if you want to find out

00:14:47,210 --> 00:14:52,670
more information about what puppet does

00:14:49,850 --> 00:14:56,450
where it looks for stuff um also we'll

00:14:52,670 --> 00:15:02,060
get back to that and later demo all

00:14:56,450 --> 00:15:05,900
right now one thing that's important is

00:15:02,060 --> 00:15:07,910
to take note of in which section of the

00:15:05,900 --> 00:15:11,180
configuration you're you're removing

00:15:07,910 --> 00:15:13,460
about right you can configure the agent

00:15:11,180 --> 00:15:16,040
differently from the master this is

00:15:13,460 --> 00:15:18,710
something that is usually not used

00:15:16,040 --> 00:15:20,450
extensively but for for some for some

00:15:18,710 --> 00:15:24,440
distinct values it's it's pretty

00:15:20,450 --> 00:15:27,970
important to make sure that mass and

00:15:24,440 --> 00:15:34,259
agent use the correct

00:15:27,970 --> 00:15:42,069
terms so usually you want to pass the

00:15:34,259 --> 00:15:45,519
section option and can say like if a if

00:15:42,069 --> 00:15:48,220
I run puppet SD agent what is the puppet

00:15:45,519 --> 00:15:51,129
conf but and if I if I run is master

00:15:48,220 --> 00:15:57,129
instead what is that let's do something

00:15:51,129 --> 00:16:01,089
useful for fun so let's see what a

00:15:57,129 --> 00:16:02,829
certain name is in use so someone

00:16:01,089 --> 00:16:06,129
configured the master to use localhost

00:16:02,829 --> 00:16:15,029
for the certificate CN that's pretty

00:16:06,129 --> 00:16:18,339
crazy right but for the agent that's

00:16:15,029 --> 00:16:25,300
even less useful so that's actually my

00:16:18,339 --> 00:16:28,449
my fqdn here and so this is pretty basic

00:16:25,300 --> 00:16:31,089
I could just look this up in puppet conf

00:16:28,449 --> 00:16:32,740
and I get a pretty clear view of what's

00:16:31,089 --> 00:16:37,079
different between agent and master but

00:16:32,740 --> 00:16:39,009
there are some one what are the other

00:16:37,079 --> 00:16:41,279
configuration value has different

00:16:39,009 --> 00:16:44,490
defaults for agent and master and

00:16:41,279 --> 00:16:48,220
usually it's it's not a not an issue but

00:16:44,490 --> 00:16:51,910
you don't want to be a caught by this

00:16:48,220 --> 00:16:54,459
and at a bad moment don't take note of

00:16:51,910 --> 00:16:58,230
which section you're looking into with

00:16:54,459 --> 00:17:00,730
with your puppet config print call and

00:16:58,230 --> 00:17:04,089
work on wrong assumptions because that

00:17:00,730 --> 00:17:05,709
can send you into the kind of debugging

00:17:04,089 --> 00:17:11,589
rabbit holes that you want don't want to

00:17:05,709 --> 00:17:14,169
find yourself in but then doing this

00:17:11,589 --> 00:17:17,289
dash dash section feels pretty clunky to

00:17:14,169 --> 00:17:21,000
me what what I use instead all the time

00:17:17,289 --> 00:17:21,000
is this notation

00:17:23,520 --> 00:17:29,430
so i'll just call whatever tool i want

00:17:26,880 --> 00:17:31,320
to invoke like puppet agent but aging is

00:17:29,430 --> 00:17:33,750
something that most of you probably type

00:17:31,320 --> 00:17:35,790
a lot throughout the course of a day and

00:17:33,750 --> 00:17:39,420
then at the dash dash convict print

00:17:35,790 --> 00:17:42,060
option so this way you get configuration

00:17:39,420 --> 00:17:44,070
values only for the agent and you can

00:17:42,060 --> 00:17:49,080
use it with master you can use it with

00:17:44,070 --> 00:17:51,720
apply and puppet apply is supported by

00:17:49,080 --> 00:17:55,230
the section parameter but you have to

00:17:51,720 --> 00:17:58,110
supply the user section which is a not

00:17:55,230 --> 00:17:59,580
very intuitive to me and you can use it

00:17:58,110 --> 00:18:03,120
with all the other sub commands that are

00:17:59,580 --> 00:18:07,740
there as well so yay for the config

00:18:03,120 --> 00:18:17,850
print alternative add any questions so

00:18:07,740 --> 00:18:20,370
far please whether it's whether it's

00:18:17,850 --> 00:18:25,980
possible to get the parameters that has

00:18:20,370 --> 00:18:30,800
had on the command line oh if you're

00:18:25,980 --> 00:18:30,800
configuring through the form and well um

00:18:32,960 --> 00:18:39,450
I'm not really sure so so I'm not really

00:18:37,020 --> 00:18:45,150
familiar with using puppet through the

00:18:39,450 --> 00:18:49,110
foreman but whatever way the the

00:18:45,150 --> 00:18:51,270
parameters are being trend transferred

00:18:49,110 --> 00:18:54,870
from from the foreman to the agent

00:18:51,270 --> 00:18:57,710
should be visible to this invocation at

00:18:54,870 --> 00:18:57,710
that it has a comment

00:19:01,080 --> 00:19:26,340
oh I think sorry to interrupt um I

00:19:24,020 --> 00:19:29,160
believe we're talking about two

00:19:26,340 --> 00:19:33,480
different concepts here because the the

00:19:29,160 --> 00:19:36,140
enc will usually pass some some values

00:19:33,480 --> 00:19:40,700
that are being used to compile the

00:19:36,140 --> 00:19:44,210
catalog for each individual agent but

00:19:40,700 --> 00:19:47,460
these these configuration values here

00:19:44,210 --> 00:19:51,090
those don't really have anything to do

00:19:47,460 --> 00:19:53,310
with note specific values that you pass

00:19:51,090 --> 00:19:55,500
through your ANC or through your

00:19:53,310 --> 00:20:00,150
manifest where you can set note

00:19:55,500 --> 00:20:04,710
variables I mean these are really let's

00:20:00,150 --> 00:20:07,560
just see it so yeah that's that's a

00:20:04,710 --> 00:20:08,970
great example but I think other things

00:20:07,560 --> 00:20:12,720
that you can pass on the on the command

00:20:08,970 --> 00:20:16,920
line right like the wait for cert option

00:20:12,720 --> 00:20:20,670
or the the state file or all the all the

00:20:16,920 --> 00:20:24,090
information that the agent needs to to

00:20:20,670 --> 00:20:27,210
do its operation and to to save its its

00:20:24,090 --> 00:20:32,400
stuff to know where to send its reports

00:20:27,210 --> 00:20:35,340
etc etc I hope this somehow clears this

00:20:32,400 --> 00:20:40,590
up a little but otherwise let's let's

00:20:35,340 --> 00:20:44,540
talk later other questions ok let's move

00:20:40,590 --> 00:20:44,540
right on to the next

00:20:44,550 --> 00:20:57,240
issue focus there we go um so assuming

00:20:54,900 --> 00:20:59,880
you have everything configured okay and

00:20:57,240 --> 00:21:06,150
your start working but then pop it just

00:20:59,880 --> 00:21:11,870
falls on its face which it does and I've

00:21:06,150 --> 00:21:14,880
looked up some some of the most exciting

00:21:11,870 --> 00:21:18,060
error messages and these are my

00:21:14,880 --> 00:21:24,140
favorites where puppet will tell you hey

00:21:18,060 --> 00:21:26,940
I cannot invoke a method on new class I

00:21:24,140 --> 00:21:29,490
mean I don't know if you're lucky you've

00:21:26,940 --> 00:21:34,140
never seen this but if you do it's never

00:21:29,490 --> 00:21:36,530
fun because this is basically the Ruby

00:21:34,140 --> 00:21:40,410
equivalent of the null pointer exception

00:21:36,530 --> 00:21:45,510
which if you're not really deep in the

00:21:40,410 --> 00:21:48,660
co-pays just won't tell you much so it

00:21:45,510 --> 00:21:50,730
will you can you can glean an idea of

00:21:48,660 --> 00:21:53,880
what's going on if you if you look at

00:21:50,730 --> 00:21:57,750
the stack trace of where the error

00:21:53,880 --> 00:22:03,470
actually happen and for that you need to

00:21:57,750 --> 00:22:08,840
just pass the dash dash trace option to

00:22:03,470 --> 00:22:13,580
your puppet invocation and you know I

00:22:08,840 --> 00:22:19,280
just remember that I think i forgot to

00:22:13,580 --> 00:22:19,280
let's see if I if I handle that

00:22:34,669 --> 00:22:45,779
it's extra fun when you have a german

00:22:37,139 --> 00:22:47,940
keyboard but use us layout so great okay

00:22:45,779 --> 00:22:52,429
so that's that's pretty normal nothing

00:22:47,940 --> 00:23:02,549
to see here um you know what let's just

00:22:52,429 --> 00:23:06,470
head back to the canned things so what

00:23:02,549 --> 00:23:10,499
I've prepared in advance is a case where

00:23:06,470 --> 00:23:16,679
you here on your agent and you get a

00:23:10,499 --> 00:23:19,429
cryptic error and in this case it's it's

00:23:16,679 --> 00:23:28,559
not even so bad because you get a

00:23:19,429 --> 00:23:31,409
manifest location oops focus like in

00:23:28,559 --> 00:23:33,359
this instance you would of course a look

00:23:31,409 --> 00:23:35,909
at the manifest at that point to see

00:23:33,359 --> 00:23:39,989
what the compiler was trying to do here

00:23:35,909 --> 00:23:43,049
but let's just assume that this is very

00:23:39,989 --> 00:23:47,119
innocuous piece of code and you you

00:23:43,049 --> 00:23:47,119
don't know why it's fading this way and

00:23:49,009 --> 00:23:59,009
huh sorry and and yeah watch what you

00:23:55,109 --> 00:24:05,129
want to do is see why why why I doing

00:23:59,009 --> 00:24:09,739
this so um let's look at traces so uh if

00:24:05,129 --> 00:24:14,580
you if you just add the trace option

00:24:09,739 --> 00:24:18,210
then you're met with the same error

00:24:14,580 --> 00:24:20,970
message that I truncated here so so here

00:24:18,210 --> 00:24:25,909
just imagine that that the whole shebang

00:24:20,970 --> 00:24:31,590
appeared and then there's stack trace

00:24:25,909 --> 00:24:35,249
and this one actually cannot really tell

00:24:31,590 --> 00:24:38,919
you much so what it's saying is yeah I

00:24:35,249 --> 00:24:42,039
was doing a rest call and I

00:24:38,919 --> 00:24:46,989
I was looking at whether I was getting

00:24:42,039 --> 00:24:51,450
at 200 ok response and the context was I

00:24:46,989 --> 00:24:54,580
was trying to get my catalog as so yeah

00:24:51,450 --> 00:24:56,980
thanks captain obvious I know that I was

00:24:54,580 --> 00:25:07,239
trying to get a catalog and that didn't

00:24:56,980 --> 00:25:11,230
work so what you want to keep in mind is

00:25:07,239 --> 00:25:13,509
that this is happening on the master so

00:25:11,230 --> 00:25:15,340
you have to trace the master you you

00:25:13,509 --> 00:25:21,369
cannot get away with tracing on the

00:25:15,340 --> 00:25:22,929
agent so another helpful thing that you

00:25:21,369 --> 00:25:25,690
can do on your master rather than the

00:25:22,929 --> 00:25:29,249
agent is our if you cut a shell on the

00:25:25,690 --> 00:25:33,629
master you can log into there and just

00:25:29,249 --> 00:25:38,529
compile the catalog for one specific

00:25:33,629 --> 00:25:40,989
node that you specify so in my

00:25:38,529 --> 00:25:47,019
preparations the the fqdn of my note was

00:25:40,989 --> 00:25:49,379
FF laptop the local edit with the dash

00:25:47,019 --> 00:25:53,739
dash compile option and of course I

00:25:49,379 --> 00:25:58,179
requested a trace and what puppet will

00:25:53,739 --> 00:26:01,450
tell you is okay I'm compiling and then

00:25:58,179 --> 00:26:05,230
the cryptic error message that is not so

00:26:01,450 --> 00:26:08,730
cryptic but the trace this time is a

00:26:05,230 --> 00:26:11,649
rather telling because you see uh-huh um

00:26:08,730 --> 00:26:13,539
there was some pausing going on if

00:26:11,649 --> 00:26:16,539
you're if you're familiar with the whole

00:26:13,539 --> 00:26:20,710
a ruby deal then you can't even guess

00:26:16,539 --> 00:26:22,539
that as psych is involved that this was

00:26:20,710 --> 00:26:26,999
probably some some sort of yellow

00:26:22,539 --> 00:26:30,460
problem but otherwise the the fact that

00:26:26,999 --> 00:26:35,559
this happened in the the yellow back end

00:26:30,460 --> 00:26:38,679
of huayra when it did some look up

00:26:35,559 --> 00:26:41,739
operation this could indicate to you

00:26:38,679 --> 00:26:44,590
that oh yeah there's some llamo that is

00:26:41,739 --> 00:26:47,559
malformed in some kind of way and now

00:26:44,590 --> 00:26:50,619
you can go ahead and hunt the actual

00:26:47,559 --> 00:26:52,540
error so that's one example where the

00:26:50,619 --> 00:26:57,490
trays can be actually help

00:26:52,540 --> 00:26:59,650
for to you now in the real world so this

00:26:57,490 --> 00:27:02,590
is this is the trace that I took from an

00:26:59,650 --> 00:27:08,850
issue that we had with one of the

00:27:02,590 --> 00:27:11,740
modules that we that I worked with and

00:27:08,850 --> 00:27:14,820
there was something fishy going on I

00:27:11,740 --> 00:27:18,400
think it wasn't was a puppet bug

00:27:14,820 --> 00:27:21,940
concerning a class containment code

00:27:18,400 --> 00:27:26,560
whatever and and this is this prettier

00:27:21,940 --> 00:27:30,130
park so all this is telling you okay the

00:27:26,560 --> 00:27:35,170
compiler class had been in the process

00:27:30,130 --> 00:27:38,410
of compiling something and it it called

00:27:35,170 --> 00:27:42,550
a method that is named to resource and

00:27:38,410 --> 00:27:46,300
and that in turn tried to convert

00:27:42,550 --> 00:27:48,700
something to a catalog perhaps but but

00:27:46,300 --> 00:27:52,450
it's it really is nondescript as well

00:27:48,700 --> 00:27:56,560
what what you could do is jump into the

00:27:52,450 --> 00:27:58,990
code right here into the co place to try

00:27:56,560 --> 00:28:01,960
and get a feeling for what's being done

00:27:58,990 --> 00:28:05,370
and then perhaps guess what what value

00:28:01,960 --> 00:28:08,290
isn't there that it's being expected but

00:28:05,370 --> 00:28:10,480
yeah this is this level of debugging

00:28:08,290 --> 00:28:16,720
that you usually don't want to descend

00:28:10,480 --> 00:28:19,060
into so the most useful a part of this

00:28:16,720 --> 00:28:20,830
trace is that you can attach it to the

00:28:19,060 --> 00:28:25,870
back report that you can file with

00:28:20,830 --> 00:28:28,690
puppet that's pretty much it okay enough

00:28:25,870 --> 00:28:34,260
with the tracing any questions or can we

00:28:28,690 --> 00:28:37,240
just move along let's move along okay so

00:28:34,260 --> 00:28:40,090
assuming yes you have everything

00:28:37,240 --> 00:28:43,600
configured ride and there's no weird

00:28:40,090 --> 00:28:45,730
error messages but as I described

00:28:43,600 --> 00:28:49,630
earlier so you you've built something

00:28:45,730 --> 00:28:53,080
cool you have exported resources say and

00:28:49,630 --> 00:28:58,140
and you you are expecting your LS know

00:28:53,080 --> 00:28:58,140
to to tell the backup server how to

00:28:58,230 --> 00:29:04,060
configure its back up and on the backup

00:29:01,180 --> 00:29:09,460
node you import all the jobs

00:29:04,060 --> 00:29:11,740
and it just won't and this isn't even

00:29:09,460 --> 00:29:13,750
limited to two exported resources

00:29:11,740 --> 00:29:15,550
constructs that this can happen with all

00:29:13,750 --> 00:29:17,800
forms of manifests like the simple

00:29:15,550 --> 00:29:20,140
simplest of manifests that should just

00:29:17,800 --> 00:29:24,330
put a file or start a service on your

00:29:20,140 --> 00:29:30,490
node and it and it won't and that's

00:29:24,330 --> 00:29:35,950
that's yeah I if I encounter this it's

00:29:30,490 --> 00:29:38,170
pretty d demotivational and of course

00:29:35,950 --> 00:29:40,410
the first thing you usually do is you

00:29:38,170 --> 00:29:43,270
you enable the back mode like call

00:29:40,410 --> 00:29:46,210
publication with dash dash debug and get

00:29:43,270 --> 00:29:49,990
this wall of text that may tell you

00:29:46,210 --> 00:29:53,740
about okay I'm looking at the resource

00:29:49,990 --> 00:29:56,710
but I'm for whatever reason I'm I think

00:29:53,740 --> 00:29:58,030
I don't have to do any work on it in

00:29:56,710 --> 00:30:03,820
other cases you do just don't find

00:29:58,030 --> 00:30:06,640
anything and it's inconclusive so what i

00:30:03,820 --> 00:30:09,730
will do in this situation is I'll really

00:30:06,640 --> 00:30:11,530
grab the catalog that the the master has

00:30:09,730 --> 00:30:19,570
generated from the manifest and sent to

00:30:11,530 --> 00:30:24,670
the agent and inspect that okay we can

00:30:19,570 --> 00:30:33,010
try and do this life okay let's see what

00:30:24,670 --> 00:30:42,750
ah this agent who does ah you kidding me

00:30:33,010 --> 00:30:42,750
yes you the hell

00:30:46,119 --> 00:30:58,719
okay that that literally worked like

00:30:48,669 --> 00:31:04,379
half an hour ago ah ok debugging right

00:30:58,719 --> 00:31:13,029
right exactly yeah that's exactly it so

00:31:04,379 --> 00:31:20,409
that's tiny oops forget the master how

00:31:13,029 --> 00:31:23,529
can I forget the master another neat

00:31:20,409 --> 00:31:27,249
debugging tool just launched a

00:31:23,529 --> 00:31:29,349
standalone master somewhere you can do

00:31:27,249 --> 00:31:34,959
this on your local box I do this on my

00:31:29,349 --> 00:31:37,899
local box all the time BAM and yeah this

00:31:34,959 --> 00:31:40,269
is still possible somehow this doing

00:31:37,899 --> 00:31:42,639
this is deprecated I really hope that it

00:31:40,269 --> 00:31:46,329
just stays deprecated and isn't removed

00:31:42,639 --> 00:31:49,569
but uh yeah barking up the wrong tree

00:31:46,329 --> 00:31:54,849
you know so now we got a master running

00:31:49,569 --> 00:31:57,909
on on the local host remember how this

00:31:54,849 --> 00:32:01,089
is weird that the the certificate is

00:31:57,909 --> 00:32:04,329
signed for local host but this is all

00:32:01,089 --> 00:32:08,319
right necessary because yay local

00:32:04,329 --> 00:32:13,089
networks and now the mass is up and the

00:32:08,319 --> 00:32:16,779
agent runs and it doesn't do much what

00:32:13,089 --> 00:32:20,679
it's doing is it writes a nice message

00:32:16,779 --> 00:32:22,929
to the terminal so the easiest way to

00:32:20,679 --> 00:32:28,949
look at the catalog that is responsible

00:32:22,929 --> 00:32:28,949
for this action is yet another

00:32:30,209 --> 00:32:35,919
subcommand that is not used often and

00:32:34,209 --> 00:32:39,219
that's the puppet catalogue subcommand

00:32:35,919 --> 00:32:43,869
and you have to tell it what the action

00:32:39,219 --> 00:32:46,019
is and this kind is just fine let's do

00:32:43,869 --> 00:32:46,019
it

00:32:47,960 --> 00:33:01,280
so let's just scroll okay here's where

00:32:57,350 --> 00:33:05,870
it starts right and what you what you

00:33:01,280 --> 00:33:08,510
get is a nicely formatted JSON that is

00:33:05,870 --> 00:33:13,130
the information that is passed from the

00:33:08,510 --> 00:33:16,810
master to the agent with some

00:33:13,130 --> 00:33:20,270
boilerplate information like uuid and

00:33:16,810 --> 00:33:23,750
the environment that can be interesting

00:33:20,270 --> 00:33:25,940
in debugging and then there's the

00:33:23,750 --> 00:33:29,540
resources again there's there's some

00:33:25,940 --> 00:33:33,470
boilerplate stuff in here like a stage

00:33:29,540 --> 00:33:35,690
main I mean really who cares and class

00:33:33,470 --> 00:33:37,880
settings they can be confusing this is

00:33:35,690 --> 00:33:40,040
just something that that puppet uses

00:33:37,880 --> 00:33:42,650
internally that that you don't really

00:33:40,040 --> 00:33:45,830
define yourself anywhere but if you keep

00:33:42,650 --> 00:33:49,310
looking you eventually find the one

00:33:45,830 --> 00:33:51,230
resource that we actually add it to the

00:33:49,310 --> 00:33:56,690
manifest and it ends up in the catalog

00:33:51,230 --> 00:33:59,780
so this is if you're wondering why

00:33:56,690 --> 00:34:01,850
you're notified doesn't show up and I'm

00:33:59,780 --> 00:34:05,930
not sure whether it's actually in the

00:34:01,850 --> 00:34:09,970
catalog you can use this to just take a

00:34:05,930 --> 00:34:13,400
look and see if the things are there and

00:34:09,970 --> 00:34:15,380
and this is pretty boring because

00:34:13,400 --> 00:34:21,460
there's not much going on this resource

00:34:15,380 --> 00:34:29,180
but let's look at a more complex example

00:34:21,460 --> 00:34:34,670
and yeah what I'm doing is I I have

00:34:29,180 --> 00:34:38,200
prepared a node in my my site manifest

00:34:34,670 --> 00:34:38,200
that has a little more going on

00:34:41,480 --> 00:34:50,590
I think it's this and you know what

00:34:51,700 --> 00:35:09,280
guess that's safer because compiling all

00:35:01,190 --> 00:35:13,730
right so again lots of JSON and here we

00:35:09,280 --> 00:35:17,930
actually encounter some resources so

00:35:13,730 --> 00:35:23,900
this is a defined type i'm using not

00:35:17,930 --> 00:35:30,320
that much to see so i'm creating lots of

00:35:23,900 --> 00:35:34,670
users so let's see if we find some user

00:35:30,320 --> 00:35:37,190
type resources and there's one right so

00:35:34,670 --> 00:35:38,780
so he is a user resource that is

00:35:37,190 --> 00:35:43,700
actually from the manifest or you know

00:35:38,780 --> 00:35:49,930
what let's let's look at the manifest or

00:35:43,700 --> 00:35:49,930
should I I mean yeah why not

00:36:08,380 --> 00:36:26,120
because literally I I keep forgetting

00:36:11,420 --> 00:36:28,130
how this is set up oops see conflict

00:36:26,120 --> 00:36:38,780
point can be helpful for forgetful

00:36:28,130 --> 00:36:40,970
people as well okay so what I wanted to

00:36:38,780 --> 00:36:42,740
do was build a simple manifest that adds

00:36:40,970 --> 00:36:47,740
lots of resources to my catalog so I

00:36:42,740 --> 00:36:51,610
have something to show and I built some

00:36:47,740 --> 00:36:56,510
defined types to make this easier and

00:36:51,610 --> 00:36:59,330
what this does is I can just pass a user

00:36:56,510 --> 00:37:03,200
name and it will create a user by the

00:36:59,330 --> 00:37:08,030
name it will create the home directory

00:37:03,200 --> 00:37:10,610
and a couple of dot files in this home

00:37:08,030 --> 00:37:17,660
directory also an authorized key for

00:37:10,610 --> 00:37:24,140
good measure so I've just built a list

00:37:17,660 --> 00:37:26,960
of our names and I limited this it used

00:37:24,140 --> 00:37:29,000
to be 50 but that led to pretty serious

00:37:26,960 --> 00:37:32,390
compilation times on my machine so we

00:37:29,000 --> 00:37:38,180
just used around 20 or so and then just

00:37:32,390 --> 00:37:42,980
declare these okay so here's one of

00:37:38,180 --> 00:37:45,170
these users and in this view we can very

00:37:42,980 --> 00:37:47,750
easily check how did end up looking in

00:37:45,170 --> 00:37:50,630
the catalog like okay it's in shoe

00:37:47,750 --> 00:37:52,490
present this is his home this can be

00:37:50,630 --> 00:37:55,750
really helpful if your manifest does

00:37:52,490 --> 00:37:58,720
some let's say evil tricks like

00:37:55,750 --> 00:38:03,260
overriding parameter values that can be

00:37:58,720 --> 00:38:04,820
pretty difficult to to debug if there if

00:38:03,260 --> 00:38:08,150
your overrides are all over the place

00:38:04,820 --> 00:38:10,700
and and this is the truth like here you

00:38:08,150 --> 00:38:13,310
see what's getting sent to the agent and

00:38:10,700 --> 00:38:16,010
that could very well well explain why

00:38:13,310 --> 00:38:16,770
the agent is not doing what you expect

00:38:16,010 --> 00:38:22,220
looking at

00:38:16,770 --> 00:38:25,860
manifest same with the files right and

00:38:22,220 --> 00:38:30,380
here are all the parameters that keep

00:38:25,860 --> 00:38:33,510
floating in so this is need-to-know and

00:38:30,380 --> 00:38:37,410
and you get a comprehensive view but

00:38:33,510 --> 00:38:40,190
it's to be quite honest it's only half

00:38:37,410 --> 00:38:44,250
the truth because this is what

00:38:40,190 --> 00:38:50,010
internally referred to as the resource

00:38:44,250 --> 00:38:53,490
catalog and if you if you want to look

00:38:50,010 --> 00:38:55,890
even deeper at what's going on inside

00:38:53,490 --> 00:39:00,870
the puppet process you you have to throw

00:38:55,890 --> 00:39:08,820
some ruby edit and the way to do this is

00:39:00,870 --> 00:39:11,100
a puppet will will always catch the

00:39:08,820 --> 00:39:23,190
catalog it received before applying it

00:39:11,100 --> 00:39:31,460
so um let's look at the whoops I always

00:39:23,190 --> 00:39:31,460
forget the all all the configs so

00:39:35,090 --> 00:39:45,360
there's there's lots of lots of caching

00:39:37,800 --> 00:39:52,470
going on and what's most important is

00:39:45,360 --> 00:39:58,710
the right here is the where do we have

00:39:52,470 --> 00:40:02,250
it catalog cash terminus easy to

00:39:58,710 --> 00:40:05,310
remember right and it's either Jason or

00:40:02,250 --> 00:40:09,900
ya know and the default is Jason so

00:40:05,310 --> 00:40:13,080
puppet will put a JSON file somewhere

00:40:09,900 --> 00:40:18,210
that has just this catalog information

00:40:13,080 --> 00:40:21,030
so i keep forgetting that as well i

00:40:18,210 --> 00:40:26,110
think it's here so that the Jason

00:40:21,030 --> 00:40:29,630
terminus puts things in the client data

00:40:26,110 --> 00:40:34,690
whereas if you choose y mo it uses

00:40:29,630 --> 00:40:37,580
client y MLD which has no underscore and

00:40:34,690 --> 00:40:44,500
everything is really confusing I suppose

00:40:37,580 --> 00:40:44,500
its history so um let's see if we have a

00:40:45,400 --> 00:40:58,760
cached catalog and we do um right

00:40:53,680 --> 00:41:02,660
there's the one that's the mouse there

00:40:58,760 --> 00:41:07,700
is the one with the just notify and then

00:41:02,660 --> 00:41:20,270
there's our complex our catalog we just

00:41:07,700 --> 00:41:21,380
looked at and oops so Jays on right some

00:41:20,270 --> 00:41:23,480
great things about JSON it's pretty

00:41:21,380 --> 00:41:30,440
compact is very portable and it's very

00:41:23,480 --> 00:41:32,710
readable yeah that was joke so of course

00:41:30,440 --> 00:41:35,180
you can you can load this into any

00:41:32,710 --> 00:41:40,040
what-have-you Python Ruby script

00:41:35,180 --> 00:41:43,670
whatever your poisonous I prefer Ruby

00:41:40,040 --> 00:41:49,930
but let's let's do the the whole shebang

00:41:43,670 --> 00:41:49,930
and actually request a

00:41:55,960 --> 00:42:04,720
a y ml catalog because that allows some

00:41:59,740 --> 00:42:10,990
even neater tricks and that is not what

00:42:04,720 --> 00:42:14,500
we can use we have to do this by the way

00:42:10,990 --> 00:42:17,290
if you if you run with there's no up

00:42:14,500 --> 00:42:21,310
then recent version of puppet will not

00:42:17,290 --> 00:42:23,290
write a cash catalog that's that's just

00:42:21,310 --> 00:42:26,980
for security it will be awkward if you

00:42:23,290 --> 00:42:29,290
like doing no up against your crazy

00:42:26,980 --> 00:42:31,540
experimental environment and that gets

00:42:29,290 --> 00:42:33,670
cached and then for some reason the next

00:42:31,540 --> 00:42:35,980
run uses the cached catalog because

00:42:33,670 --> 00:42:38,200
something fails on the master and you

00:42:35,980 --> 00:42:40,630
have your weird experimental stuff

00:42:38,200 --> 00:42:43,270
applied that will be bed so there's no

00:42:40,630 --> 00:42:45,040
caching going on which means we cannot

00:42:43,270 --> 00:42:47,170
do know what we have to do an actual run

00:42:45,040 --> 00:42:50,470
which is fun with this manifest because

00:42:47,170 --> 00:42:54,970
it tries to create users and stuff but

00:42:50,470 --> 00:42:59,760
I'm running without root so expecting

00:42:54,970 --> 00:42:59,760
some red on the console right now

00:43:03,390 --> 00:43:19,630
compiling got some salt all right some

00:43:17,650 --> 00:43:28,420
red some yellow but that's not the

00:43:19,630 --> 00:43:31,000
important part we want to look at the at

00:43:28,420 --> 00:43:34,290
the cash catalog and as I said it's now

00:43:31,000 --> 00:43:38,650
in the in the client demo directory and

00:43:34,290 --> 00:43:42,339
here we go so this is somewhat more

00:43:38,650 --> 00:43:47,260
readable but what was really important

00:43:42,339 --> 00:43:50,349
is that this y mo is is annotated um so

00:43:47,260 --> 00:43:52,930
that Ruby can actually load it and and

00:43:50,349 --> 00:43:57,130
bless it into an actual object and not

00:43:52,930 --> 00:44:04,050
just this hash structure so let's do

00:43:57,130 --> 00:44:11,350
this um do even

00:44:04,050 --> 00:44:22,020
oops there it is ok let's start with IRB

00:44:11,350 --> 00:44:28,960
so how much time do I have left cool so

00:44:22,020 --> 00:44:33,070
IRB is your interactive Ruby shell and

00:44:28,960 --> 00:44:36,010
you can run your Ruby code here and what

00:44:33,070 --> 00:44:40,570
we want Ruby to do now is load that yeah

00:44:36,010 --> 00:44:43,570
Mel that we just looked at and and give

00:44:40,570 --> 00:44:49,450
us an object that we can expect inspect

00:44:43,570 --> 00:44:56,160
so for one you want to load the yellow

00:44:49,450 --> 00:44:59,500
module and it was pretty cool you can

00:44:56,160 --> 00:45:01,750
just load puppet as a library and now

00:44:59,500 --> 00:45:05,890
now all the things that puppet can do we

00:45:01,750 --> 00:45:15,460
can do from our interactive shell so

00:45:05,890 --> 00:45:17,560
let's try and say let's call it cat so

00:45:15,460 --> 00:45:27,520
let's make a local variable named cat

00:45:17,560 --> 00:45:32,520
and we want to load some llamo from a

00:45:27,520 --> 00:45:32,520
file and it's this one

00:45:39,900 --> 00:45:56,400
see if this works it did so we have

00:45:50,279 --> 00:46:04,079
catalog and this is nice and all and you

00:45:56,400 --> 00:46:06,089
can do things like a pretty print the

00:46:04,079 --> 00:46:09,089
catalog which is not really helpful

00:46:06,089 --> 00:46:19,250
because it's just a huge wall of text um

00:46:09,089 --> 00:46:19,250
right or we can say inspect the catalog

00:46:19,940 --> 00:46:26,309
which is mildly more helpful but not

00:46:23,039 --> 00:46:30,359
ready so what we really want is yet

00:46:26,309 --> 00:46:34,170
another piece from the Ruby toolbox

00:46:30,359 --> 00:46:37,410
which is the pry debugger and pry is

00:46:34,170 --> 00:46:41,279
another gem that you can install next to

00:46:37,410 --> 00:46:47,760
pop it in everything and let's load it

00:46:41,279 --> 00:46:50,779
and let's enter it so this is this is

00:46:47,760 --> 00:46:53,400
kind of a mantra require pry binding pry

00:46:50,779 --> 00:46:55,859
this is pretty much what I do whenever I

00:46:53,400 --> 00:46:58,920
face any Ruby troubles I can I can also

00:46:55,859 --> 00:47:02,160
put this right into some Ruby code file

00:46:58,920 --> 00:47:05,069
where something goes bleak and it's

00:47:02,160 --> 00:47:09,960
essentially a breakpoint and puts me

00:47:05,069 --> 00:47:14,670
into this debugger so and what this does

00:47:09,960 --> 00:47:20,880
for me is for one let's see what happens

00:47:14,670 --> 00:47:27,029
if I just yeah this did not work oh dude

00:47:20,880 --> 00:47:30,270
we do even retain our catalog we do okay

00:47:27,029 --> 00:47:35,880
so so pry allows some some interesting

00:47:30,270 --> 00:47:39,450
stuff like I can CD into this variable

00:47:35,880 --> 00:47:41,609
that I have created earlier so I've done

00:47:39,450 --> 00:47:44,339
a city cat and cat is the variable name

00:47:41,609 --> 00:47:49,319
and now I'm in the catalogue if you will

00:47:44,339 --> 00:47:52,780
and I can use LS to see what what's

00:47:49,319 --> 00:47:54,760
what's going on what what are the

00:47:52,780 --> 00:47:56,710
the local what are the methods that i

00:47:54,760 --> 00:48:02,500
can use here that have been defined for

00:47:56,710 --> 00:48:08,400
such a catalog and what are they what

00:48:02,500 --> 00:48:14,980
are the local member values right so i

00:48:08,400 --> 00:48:20,760
can now oops i can now just look at say

00:48:14,980 --> 00:48:34,510
the version of this all the what have we

00:48:20,760 --> 00:48:36,520
environment so the this is the resources

00:48:34,510 --> 00:48:44,950
that's that's a pretty big list of

00:48:36,520 --> 00:48:52,830
resources and it's a it's a huge array

00:48:44,950 --> 00:48:57,910
and somehow I expected this to be more

00:48:52,830 --> 00:49:00,430
insightful ah that is better ok so the

00:48:57,910 --> 00:49:03,280
the add resources the the member

00:49:00,430 --> 00:49:06,880
variable it just holds a list of of

00:49:03,280 --> 00:49:12,010
these key values and if instead we

00:49:06,880 --> 00:49:18,310
invoke the method save lot of resources

00:49:12,010 --> 00:49:21,190
then then we get actual information but

00:49:18,310 --> 00:49:23,890
still again that's that's not a huge

00:49:21,190 --> 00:49:28,420
improvement over the or what we what we

00:49:23,890 --> 00:49:30,820
had earlier and the J's on but the good

00:49:28,420 --> 00:49:35,370
part is that we are now in this in this

00:49:30,820 --> 00:49:35,370
Ruby world and we can we can start

00:49:35,910 --> 00:49:48,580
looking into things so let's make

00:49:41,560 --> 00:49:54,610
another variable um res list and again

00:49:48,580 --> 00:49:57,070
we can CD into there and this is just an

00:49:54,610 --> 00:50:00,310
array but I like doing this because I

00:49:57,070 --> 00:50:03,670
always forget how the how the filtering

00:50:00,310 --> 00:50:06,550
and and selection methods of Ruby arrays

00:50:03,670 --> 00:50:12,610
work and here I just

00:50:06,550 --> 00:50:21,760
got them on hand and I can do cool

00:50:12,610 --> 00:50:35,220
things like that give me the description

00:50:21,760 --> 00:50:40,110
mm sorry a description of methods like

00:50:35,220 --> 00:50:42,970
find all and filter and what have you so

00:50:40,110 --> 00:50:46,360
this is really the most comfortable way

00:50:42,970 --> 00:50:48,940
to navigate my Ruby resources and to

00:50:46,360 --> 00:50:52,660
look at things and to get help along the

00:50:48,940 --> 00:50:58,660
way so if you're in doubt about what

00:50:52,660 --> 00:51:01,110
puppet is doing consider using lots of

00:50:58,660 --> 00:51:01,110
Prai oh

00:51:10,570 --> 00:51:26,660
here even the slide says so okay we're

00:51:22,670 --> 00:51:28,790
almost done so of course you don't want

00:51:26,660 --> 00:51:31,550
to get debugging any time you encounter

00:51:28,790 --> 00:51:34,670
some issue puppet so it's often it's a

00:51:31,550 --> 00:51:37,880
much better idea to get some help good

00:51:34,670 --> 00:51:44,540
place for that is pop it pop its own ask

00:51:37,880 --> 00:51:47,710
side hmm which is basically stack

00:51:44,540 --> 00:51:49,970
overflow but just for puppet it's cool

00:51:47,710 --> 00:51:54,290
then there's the puppet fault of course

00:51:49,970 --> 00:51:56,300
um many things in puppet you don't even

00:51:54,290 --> 00:52:00,530
have to solve yourself there are modules

00:51:56,300 --> 00:52:02,780
for a wide range of applications and if

00:52:00,530 --> 00:52:05,450
all that else fails you can at least

00:52:02,780 --> 00:52:09,080
look at other people's code perhaps get

00:52:05,450 --> 00:52:11,590
some inspiration the mailing list was

00:52:09,080 --> 00:52:14,810
pretty good that's a Google Group um

00:52:11,590 --> 00:52:17,390
there's IRC there's a slack now that's

00:52:14,810 --> 00:52:21,950
pretty new there's the packs the puppet

00:52:17,390 --> 00:52:25,520
user groups hi Martin and yeah you're

00:52:21,950 --> 00:52:29,000
not alone reach out get help puppet

00:52:25,520 --> 00:52:32,980
community is there for you so thanks for

00:52:29,000 --> 00:52:38,510
listening before we go to final Q&A some

00:52:32,980 --> 00:52:40,340
final notes yeah we two are hiring as I

00:52:38,510 --> 00:52:43,010
said there's there's managed services

00:52:40,340 --> 00:52:46,370
there's lots of operation roles roles

00:52:43,010 --> 00:52:49,010
but not only those there's also a data

00:52:46,370 --> 00:52:52,400
science department we we can outfit our

00:52:49,010 --> 00:52:57,170
customers with custom Big Data solutions

00:52:52,400 --> 00:53:00,220
and yeah if you know anyone who's

00:52:57,170 --> 00:53:03,920
looking for a role in this kind of

00:53:00,220 --> 00:53:07,370
alternative tech sector yeah just reach

00:53:03,920 --> 00:53:12,050
out talk to me or check out our careers

00:53:07,370 --> 00:53:16,700
page there's lots of cool roles uh yeah

00:53:12,050 --> 00:53:19,940
I I think it's pretty pretty nice deal

00:53:16,700 --> 00:53:22,370
check it out that's kind of books that

00:53:19,940 --> 00:53:23,279
you can read I personally vouch for

00:53:22,370 --> 00:53:25,409
their quality

00:53:23,279 --> 00:53:29,909
I think Martin over there will also

00:53:25,409 --> 00:53:34,079
vouch for them and finally there's

00:53:29,909 --> 00:53:36,390
another tool that I'd like to yeah

00:53:34,079 --> 00:53:38,849
inform you about it's it's a it's an

00:53:36,390 --> 00:53:42,119
early stage of development but it's it's

00:53:38,849 --> 00:53:45,509
pretty neat it takes some ideas from

00:53:42,119 --> 00:53:48,659
puppet but expands on them and then has

00:53:45,509 --> 00:53:52,199
some pretty fresh designs and yeah it's

00:53:48,659 --> 00:53:54,539
called MGMT it's written by James and

00:53:52,199 --> 00:54:00,029
all the infos on the the technical blog

00:53:54,539 --> 00:54:02,849
of James and yeah if you're if you want

00:54:00,029 --> 00:54:05,099
to see some some fresh new innovative

00:54:02,849 --> 00:54:09,679
ideas on configuration management you

00:54:05,099 --> 00:54:23,880
might want to look at MGMT as well and

00:54:09,679 --> 00:54:26,609
that's it more questions yeah i bet that

00:54:23,880 --> 00:54:28,759
pride was really not not a good idea to

00:54:26,609 --> 00:54:32,699
give you right after lunch right it's

00:54:28,759 --> 00:54:40,319
that's a lot of stomach so do we have

00:54:32,699 --> 00:54:41,909
any questions you know anyone but yeah

00:54:40,319 --> 00:54:44,909
there thanks for watching me ramble on

00:54:41,909 --> 00:54:49,189
about Ruby and all the other internals

00:54:44,909 --> 00:54:49,189

YouTube URL: https://www.youtube.com/watch?v=5lAHhgnuHEM


