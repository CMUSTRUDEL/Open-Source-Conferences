Title: ODSC 2016 - Another 7 tools for your #devops stack by Kris Buytaert
Publication date: 2016-05-02
Playlist: OSDC 2016 | Open Source Data Center Conference
Description: 
	The abstract will be online soon.
Captions: 
	00:00:11,580 --> 00:00:19,890
welcome back again don't follow me so

00:00:17,760 --> 00:00:21,630
next here is it's chris boyd heart I'm

00:00:19,890 --> 00:00:24,029
talking about seven tools in the DevOps

00:00:21,630 --> 00:00:30,680
tech so thanks for coming over again and

00:00:24,029 --> 00:00:30,680
it's your stage good morning who's awake

00:00:30,740 --> 00:00:34,320
okay there's a bunch of people make I

00:00:32,850 --> 00:00:35,850
specifically asked this question because

00:00:34,320 --> 00:00:37,920
in Germany when I asked question nobody

00:00:35,850 --> 00:00:41,220
raises her hands so without using

00:00:37,920 --> 00:00:45,860
OpenStack here see nobody uses their

00:00:41,220 --> 00:00:48,809
hands sorry that's a joke from last year

00:00:45,860 --> 00:00:52,140
this talk is titled another seven tools

00:00:48,809 --> 00:00:53,699
for your DevOps stack and it kind of an

00:00:52,140 --> 00:00:55,110
originates because I had absolutely no

00:00:53,699 --> 00:00:57,210
clue what I was going to talk about when

00:00:55,110 --> 00:01:00,420
burns asked me to come here and I've

00:00:57,210 --> 00:01:02,430
been doing this talk seven tools for

00:01:00,420 --> 00:01:07,799
your well open source dev up stack even

00:01:02,430 --> 00:01:10,229
and that was a talk which i think i gave

00:01:07,799 --> 00:01:12,720
that about 10 to 15 times and i got

00:01:10,229 --> 00:01:15,240
really bored of it but people wanted to

00:01:12,720 --> 00:01:17,030
see that over and over again so now

00:01:15,240 --> 00:01:20,880
we're talking about another seven tools

00:01:17,030 --> 00:01:23,580
for those who haven't seen me speak

00:01:20,880 --> 00:01:26,430
before my name is Lizbeth art I'm this

00:01:23,580 --> 00:01:28,620
weird guy from Belgium I started my

00:01:26,430 --> 00:01:30,570
career in open source by writing the

00:01:28,620 --> 00:01:32,400
open mosaics how to like Don just

00:01:30,570 --> 00:01:34,230
mentioned then I actually started

00:01:32,400 --> 00:01:37,590
patching open mosaics and doing colonel

00:01:34,230 --> 00:01:41,190
contributions and stuff like that became

00:01:37,590 --> 00:01:43,110
they release manager and since then I've

00:01:41,190 --> 00:01:45,030
been active in a zillion open source

00:01:43,110 --> 00:01:47,820
communities like don't just figured out

00:01:45,030 --> 00:01:50,310
I've been in the my seagull community

00:01:47,820 --> 00:01:52,680
pretty active I've been pretty active in

00:01:50,310 --> 00:01:54,030
the Drupal community I've been pretty

00:01:52,680 --> 00:01:56,430
active in the pepperdine infrastructure

00:01:54,030 --> 00:01:58,350
as code community somewhere along the

00:01:56,430 --> 00:02:00,420
line by accident patrick the boy and I

00:01:58,350 --> 00:02:04,050
started to organize a conference in

00:02:00,420 --> 00:02:06,600
Ghent which also kind of made a lot of

00:02:04,050 --> 00:02:09,899
waves in the industry that was DevOps

00:02:06,600 --> 00:02:12,030
days and then we also started organizing

00:02:09,899 --> 00:02:14,879
conflict management camp which Don was

00:02:12,030 --> 00:02:16,170
also talking about where we brought

00:02:14,879 --> 00:02:17,670
together different open source

00:02:16,170 --> 00:02:20,520
communities in infrastructure escote

00:02:17,670 --> 00:02:23,910
space so I mentioned DevOps who knows

00:02:20,520 --> 00:02:25,500
what DevOps is ok burns can you come up

00:02:23,910 --> 00:02:30,260
stage and explain me

00:02:25,500 --> 00:02:33,510
I'm just kidding you cured yeah i know

00:02:30,260 --> 00:02:35,190
for me DevOps is pretty much what Damon

00:02:33,510 --> 00:02:37,550
hydrogen John Willis figured out in

00:02:35,190 --> 00:02:39,600
their podcast DevOps Kia fades it's

00:02:37,550 --> 00:02:42,060
professional and cultural movement

00:02:39,600 --> 00:02:44,130
moving our industry forward trying to

00:02:42,060 --> 00:02:46,800
help people to deliver software better

00:02:44,130 --> 00:02:50,130
faster stronger and when we talk about

00:02:46,800 --> 00:02:51,959
DevOps we mainly talked about 45 key

00:02:50,130 --> 00:02:54,900
components and it's the culture of the

00:02:51,959 --> 00:02:56,310
organization it's how we automate

00:02:54,900 --> 00:02:57,900
everything I mean we automate everything

00:02:56,310 --> 00:02:59,880
we mean everything its infrastructure

00:02:57,900 --> 00:03:01,920
it's built environments test

00:02:59,880 --> 00:03:04,320
environments it's really automating

00:03:01,920 --> 00:03:06,630
everything it's how we do monitoring and

00:03:04,320 --> 00:03:08,610
measurement different than five to ten

00:03:06,630 --> 00:03:10,380
years ago and burn to figure that out

00:03:08,610 --> 00:03:14,700
and started doing in another conference

00:03:10,380 --> 00:03:18,810
on that ah December I here Oh smc

00:03:14,700 --> 00:03:21,209
December yeah yeah December find that

00:03:18,810 --> 00:03:23,310
guy he'll know so monitoring and

00:03:21,209 --> 00:03:25,470
measurement and then given that the

00:03:23,310 --> 00:03:27,330
DevOps movement was started by a bunch

00:03:25,470 --> 00:03:29,340
of open-source guys don't forget that

00:03:27,330 --> 00:03:32,670
when you go back to the office don't buy

00:03:29,340 --> 00:03:35,130
stuff use open source tools we share our

00:03:32,670 --> 00:03:36,930
experiences we share our code and the

00:03:35,130 --> 00:03:42,570
evolution we've seen there is that a lot

00:03:36,930 --> 00:03:45,360
of research a lot of the infrastructure

00:03:42,570 --> 00:03:47,430
noise we get a lot of the infrastructure

00:03:45,360 --> 00:03:50,489
people that used to write documentation

00:03:47,430 --> 00:03:53,970
now start also sharing their code their

00:03:50,489 --> 00:03:58,410
puppet code there chef cookbooks and all

00:03:53,970 --> 00:04:01,920
that stuff so that's what DevOps is

00:03:58,410 --> 00:04:05,900
about DevOps is mainly about culture it

00:04:01,920 --> 00:04:08,850
is less about tools but tools are fun so

00:04:05,900 --> 00:04:11,340
let give let me give you a recap of what

00:04:08,850 --> 00:04:18,150
the original seven tools I was talking

00:04:11,340 --> 00:04:20,970
about were the first seven tools um I'm

00:04:18,150 --> 00:04:22,500
from Belgium one of the reasons we claim

00:04:20,970 --> 00:04:24,960
the DevOps started there is because we

00:04:22,500 --> 00:04:28,860
have good quality beer and beer also

00:04:24,960 --> 00:04:31,110
brings together people so we meet we

00:04:28,860 --> 00:04:33,030
discuss then there's a bunch of other

00:04:31,110 --> 00:04:34,470
tools I've actually graded them

00:04:33,030 --> 00:04:35,970
collective because it's not a my top

00:04:34,470 --> 00:04:38,280
favorite list anymore I've seen way too

00:04:35,970 --> 00:04:39,420
much problems with it specifically in

00:04:38,280 --> 00:04:41,400
scaling it but

00:04:39,420 --> 00:04:44,460
it was one of the tools it was awesome

00:04:41,400 --> 00:04:48,720
to the orchestration but i'll talk about

00:04:44,460 --> 00:04:53,220
a bunch of alternatives here who uses

00:04:48,720 --> 00:04:55,350
fpm here maybe I should run the slides

00:04:53,220 --> 00:05:00,030
from three years ago again if you're not

00:04:55,350 --> 00:05:02,670
using fpm fbm is one of the many awesome

00:05:00,030 --> 00:05:04,380
tools bill by jordan sizzle it's the

00:05:02,670 --> 00:05:06,240
 package manager because he was

00:05:04,380 --> 00:05:10,080
frustrated with everything which is

00:05:06,240 --> 00:05:12,450
packaging I actually know that was not

00:05:10,080 --> 00:05:15,870
here last year that was this older of

00:05:12,450 --> 00:05:17,910
two years ago fpm basically allows you

00:05:15,870 --> 00:05:20,460
to package anything really simple it's a

00:05:17,910 --> 00:05:22,890
one line command which takes source code

00:05:20,460 --> 00:05:26,070
which takes different kinds of packages

00:05:22,890 --> 00:05:27,990
which takes gems Python packages all

00:05:26,070 --> 00:05:29,730
those things and turns them into the

00:05:27,990 --> 00:05:31,650
actual package you want to use RPM

00:05:29,730 --> 00:05:33,030
debian package whatever it's not the

00:05:31,650 --> 00:05:34,950
kind of package you're going to end up

00:05:33,030 --> 00:05:36,330
having in the distro but it is the

00:05:34,950 --> 00:05:40,200
perfect tool to packaged software

00:05:36,330 --> 00:05:42,410
internally for your organization another

00:05:40,200 --> 00:05:46,290
tool we were talking about was logstash

00:05:42,410 --> 00:05:47,970
today better known as the elk stack this

00:05:46,290 --> 00:05:50,100
is what you do with your log files we

00:05:47,970 --> 00:05:51,810
stopped just chipping log files and

00:05:50,100 --> 00:05:54,180
ignoring them now we're actually making

00:05:51,810 --> 00:05:59,090
sense of it was using locks that here or

00:05:54,180 --> 00:06:02,850
the Elks deck okay so that you know the

00:05:59,090 --> 00:06:06,540
fifth tool I was talking about back then

00:06:02,850 --> 00:06:10,650
was graphite because graphite made the

00:06:06,540 --> 00:06:13,050
first attempts at making metrics easy it

00:06:10,650 --> 00:06:15,360
was it still is it still is in my stack

00:06:13,050 --> 00:06:18,180
but its component on top of which we

00:06:15,360 --> 00:06:21,510
built I was talking about vagrant back

00:06:18,180 --> 00:06:24,240
then we're still using vagrant everybody

00:06:21,510 --> 00:06:26,280
should still be using vagrant because

00:06:24,240 --> 00:06:29,400
it's still one of the best tools around

00:06:26,280 --> 00:06:32,240
to build test environments and to test

00:06:29,400 --> 00:06:35,760
your code and to work locally and

00:06:32,240 --> 00:06:38,570
obviously one of the other things we

00:06:35,760 --> 00:06:42,390
figured out on all of the DevOps events

00:06:38,570 --> 00:06:45,300
everywhere their sushi even a little

00:06:42,390 --> 00:06:47,670
small tiny bit and also the sushi in the

00:06:45,300 --> 00:06:49,380
beer together that is what we share that

00:06:47,670 --> 00:06:52,460
is where we discuss that is where we

00:06:49,380 --> 00:06:54,919
talk about our experiences

00:06:52,460 --> 00:06:58,460
friends to friends over there could be

00:06:54,919 --> 00:07:00,590
pizza but for some reason levels day's

00:06:58,460 --> 00:07:05,750
events tens we have much more sushi

00:07:00,590 --> 00:07:10,520
tandem pizza so are you ready for seven

00:07:05,750 --> 00:07:15,620
more tools so let me start with the very

00:07:10,520 --> 00:07:23,810
first one docker was using docker here

00:07:15,620 --> 00:07:29,259
in production not in a CI pipeline but

00:07:23,810 --> 00:07:32,599
really front end production three people

00:07:29,259 --> 00:07:34,970
yeah so there was a third tool on the

00:07:32,599 --> 00:07:40,910
other tool Tucker Tucker Tucker Tucker

00:07:34,970 --> 00:07:50,870
Tucker my at seven yet yeah okay thanks

00:07:40,910 --> 00:07:53,210
see you guys this could have been

00:07:50,870 --> 00:07:57,530
Michael duties ignite from the pup days

00:07:53,210 --> 00:08:01,039
after damn he basically had 20 slides

00:07:57,530 --> 00:08:04,039
only claiming docker to meet doctor is

00:08:01,039 --> 00:08:07,370
not one of the seven tools it's not even

00:08:04,039 --> 00:08:09,860
close I have a love-hate relationship

00:08:07,370 --> 00:08:12,680
with docker i love them i see i pipeline

00:08:09,860 --> 00:08:15,620
to spin up a box to package something

00:08:12,680 --> 00:08:18,169
running vm inside a shrewd then destroy

00:08:15,620 --> 00:08:19,940
it and get rid of it again and it's

00:08:18,169 --> 00:08:22,340
awesome for that and once you get it to

00:08:19,940 --> 00:08:24,680
use for a bunch of use cases it's meant

00:08:22,340 --> 00:08:27,680
for its really awesome but my biggest

00:08:24,680 --> 00:08:31,880
problem i have with daughter is that it

00:08:27,680 --> 00:08:36,349
gives me more culture problems than I

00:08:31,880 --> 00:08:40,729
had before ducker is the new tarble

00:08:36,349 --> 00:08:42,260
ducker is the new there's a bunch of

00:08:40,729 --> 00:08:44,570
developers in the corner they've built

00:08:42,260 --> 00:08:47,149
something they throw it over the corner

00:08:44,570 --> 00:08:48,680
they throw it over the wall at five p.m.

00:08:47,149 --> 00:08:49,850
on a friday afternoon and say here's a

00:08:48,680 --> 00:08:53,570
docker container please put it in

00:08:49,850 --> 00:08:55,700
production what just happened this is

00:08:53,570 --> 00:08:59,810
exactly what the devops movement try to

00:08:55,700 --> 00:09:01,490
prevent we get an artifact which we have

00:08:59,810 --> 00:09:04,550
no clue how it's built well there's a

00:09:01,490 --> 00:09:06,290
docker file but it's a different distro

00:09:04,550 --> 00:09:08,300
so development in a you

00:09:06,290 --> 00:09:09,920
fedora the other one used ubuntu then

00:09:08,300 --> 00:09:11,480
there's a debian box around was going to

00:09:09,920 --> 00:09:15,759
maintain security was going to maintain

00:09:11,480 --> 00:09:18,230
authentication doctor is not a solution

00:09:15,759 --> 00:09:21,910
for a lot of people blocker generates

00:09:18,230 --> 00:09:24,230
problems if you do it right it's awesome

00:09:21,910 --> 00:09:27,440
but if you walk into an organization

00:09:24,230 --> 00:09:29,420
where they say hey we run ducker and the

00:09:27,440 --> 00:09:31,730
CIO comes to use this so we have a

00:09:29,420 --> 00:09:34,130
problem with our doctors because I was

00:09:31,730 --> 00:09:36,800
giving a demo last week and the

00:09:34,130 --> 00:09:38,990
container crashed and they couldn't pin

00:09:36,800 --> 00:09:41,690
it up anymore so you started talking to

00:09:38,990 --> 00:09:43,819
the guys so show me the dockerfile how

00:09:41,690 --> 00:09:48,440
do you build it all we log onto it and

00:09:43,819 --> 00:09:51,079
we what yeah we'll look down to it we

00:09:48,440 --> 00:09:53,709
change with manual do stuff so what are

00:09:51,079 --> 00:09:59,569
you running inside oh so there's um

00:09:53,709 --> 00:10:01,190
websphere db2 I can give you the phone

00:09:59,569 --> 00:10:05,529
number of the CIO who had that problem

00:10:01,190 --> 00:10:09,589
this is not a joke this is reality and

00:10:05,529 --> 00:10:11,389
that's a culture problem it's a big one

00:10:09,589 --> 00:10:14,029
and we need to fight it we need to start

00:10:11,389 --> 00:10:16,339
bringing out the real good docker use

00:10:14,029 --> 00:10:18,529
case it's not the rent I'm having today

00:10:16,339 --> 00:10:22,130
and I want to see the balance shift too

00:10:18,529 --> 00:10:23,449
i love using docker and not oh no just

00:10:22,130 --> 00:10:25,010
another guy we use a stalker as a

00:10:23,449 --> 00:10:27,560
virtual machine and doesn't manage to

00:10:25,010 --> 00:10:34,220
reproduce it because there's way too

00:10:27,560 --> 00:10:36,920
many of those out there so that's my

00:10:34,220 --> 00:10:39,680
rant so now about tools are really like

00:10:36,920 --> 00:10:43,430
to use today so who is using hangouts

00:10:39,680 --> 00:10:44,959
here not that many people how many

00:10:43,430 --> 00:10:47,089
people have tried doing hangouts with

00:10:44,959 --> 00:10:52,579
more than 10 people with good quality

00:10:47,089 --> 00:10:55,149
not publicly do you like the license on

00:10:52,579 --> 00:10:55,149
google hangouts

00:10:55,240 --> 00:11:01,510
so we had that problem internally we

00:10:59,110 --> 00:11:04,180
didn't want to have the meetings we have

00:11:01,510 --> 00:11:07,450
online to be on google and we started

00:11:04,180 --> 00:11:09,690
looking for a tool we found a tool we're

00:11:07,450 --> 00:11:12,700
currently using jitsi for this and it's

00:11:09,690 --> 00:11:15,279
much better quality we can run itself

00:11:12,700 --> 00:11:17,830
host it there's a bunch of demo sites

00:11:15,279 --> 00:11:20,410
out there which allow you to run jitsi

00:11:17,830 --> 00:11:22,270
and tested and public it doesn't need

00:11:20,410 --> 00:11:26,649
any plugins if you've got a modern

00:11:22,270 --> 00:11:28,089
recent browser it just works there's no

00:11:26,649 --> 00:11:29,980
10 personal limits I mean for the

00:11:28,089 --> 00:11:32,260
organization of conflict management lost

00:11:29,980 --> 00:11:34,120
here well note this year but the

00:11:32,260 --> 00:11:35,560
organization was last year we kind of

00:11:34,120 --> 00:11:37,959
ran into the point where there were more

00:11:35,560 --> 00:11:40,420
than 10 people in the discussion so the

00:11:37,959 --> 00:11:43,450
first time we because the years before

00:11:40,420 --> 00:11:45,880
we were using hangouts was like oh wait

00:11:43,450 --> 00:11:47,920
that guy is not getting into the meeting

00:11:45,880 --> 00:11:49,690
room he's not oh wait were more than 10

00:11:47,920 --> 00:11:51,490
we have a problem with jittery we never

00:11:49,690 --> 00:11:54,100
had that problem we can just add more

00:11:51,490 --> 00:11:56,890
people and add more memory or CPU it's

00:11:54,100 --> 00:11:59,010
going to scale more and one of the

00:11:56,890 --> 00:12:01,209
culture hacks we do is we have offices

00:11:59,010 --> 00:12:02,200
because i work for innovates which is

00:12:01,209 --> 00:12:04,450
one of the larger open-source

00:12:02,200 --> 00:12:09,220
consultancy companies in Europe we have

00:12:04,450 --> 00:12:12,370
offices in Ghent and Ferb Rotterdam Kiev

00:12:09,220 --> 00:12:14,560
but no Prague and we want to get the

00:12:12,370 --> 00:12:16,240
team to connect so one of the things we

00:12:14,560 --> 00:12:18,300
have we have an open chat room which is

00:12:16,240 --> 00:12:21,520
open all the time no two-hour limit and

00:12:18,300 --> 00:12:23,589
people just pop in and they go like hey

00:12:21,520 --> 00:12:27,520
I've got a question and then in

00:12:23,589 --> 00:12:28,930
different rooms we have stand-ups so

00:12:27,520 --> 00:12:30,670
people are constantly capable of seeing

00:12:28,930 --> 00:12:32,680
each other there's a couple of offices

00:12:30,670 --> 00:12:35,620
we just have one big TV screen worthy to

00:12:32,680 --> 00:12:37,450
look into the other offices it's a

00:12:35,620 --> 00:12:45,839
really good tool to keep communication

00:12:37,450 --> 00:12:49,660
up and it's open source another thing

00:12:45,839 --> 00:12:51,880
we're building culture is how you

00:12:49,660 --> 00:12:54,250
release software who's doing your

00:12:51,880 --> 00:12:57,100
release management out here yeah there

00:12:54,250 --> 00:12:58,600
is going to be a complete different

00:12:57,100 --> 00:13:00,190
topic and I'm going to jump to different

00:12:58,600 --> 00:13:04,089
tools because it's going to be seven

00:13:00,190 --> 00:13:08,640
tools for your stack who's involved in

00:13:04,089 --> 00:13:08,640
release management we're still awake

00:13:09,570 --> 00:13:13,180
are you sure you're not involved in

00:13:11,650 --> 00:13:15,220
release management do you never have to

00:13:13,180 --> 00:13:19,810
figure out which components fit together

00:13:15,220 --> 00:13:23,230
who's writing say ansible code here how

00:13:19,810 --> 00:13:24,970
do you group together working roles for

00:13:23,230 --> 00:13:27,040
your infrastructure how do you pick the

00:13:24,970 --> 00:13:29,140
roles which together make your

00:13:27,040 --> 00:13:31,720
infrastructure which don't block each

00:13:29,140 --> 00:13:37,170
other which don't break each other you

00:13:31,720 --> 00:13:43,630
don't how do you live with puppet Felix

00:13:37,170 --> 00:13:45,070
how do you deal with puppet no grouping

00:13:43,630 --> 00:13:53,920
modules together which are functionally

00:13:45,070 --> 00:13:56,410
not breaking each other you would like

00:13:53,920 --> 00:14:00,280
to do it where I think a so the puppet

00:13:56,410 --> 00:14:02,740
guys figured out one tool the Ruby guys

00:14:00,280 --> 00:14:05,590
figured out another tool they have a gem

00:14:02,740 --> 00:14:07,840
spec file somewhere and they say these

00:14:05,590 --> 00:14:11,290
these in these versions the Java guys

00:14:07,840 --> 00:14:13,150
figured out another tool and I remember

00:14:11,290 --> 00:14:15,910
back in the days when we were building

00:14:13,150 --> 00:14:18,850
software at a large tylko manufacturer

00:14:15,910 --> 00:14:21,340
where we had subversion we were putting

00:14:18,850 --> 00:14:24,730
the same tag on all the different

00:14:21,340 --> 00:14:26,740
projects like tens of them which we were

00:14:24,730 --> 00:14:28,570
trying to release together and trying to

00:14:26,740 --> 00:14:30,340
get through a pipeline together then we

00:14:28,570 --> 00:14:33,310
had a user interface build on top of

00:14:30,340 --> 00:14:35,880
that it was actually building Ruby where

00:14:33,310 --> 00:14:38,860
we have pulldown menus like so this

00:14:35,880 --> 00:14:41,350
project this version this project this

00:14:38,860 --> 00:14:44,500
version this project this version group

00:14:41,350 --> 00:14:47,320
them all together this whole package

00:14:44,500 --> 00:14:49,150
together it's one release and that's the

00:14:47,320 --> 00:14:52,720
thing we're going to do together and

00:14:49,150 --> 00:14:54,880
every single team I run into figures out

00:14:52,720 --> 00:14:55,870
that they need to manage that they need

00:14:54,880 --> 00:14:58,380
to manage the dependencies between

00:14:55,870 --> 00:15:04,060
software they need to manage what

00:14:58,380 --> 00:15:07,750
components together will work and we've

00:15:04,060 --> 00:15:11,320
all got that too already right in front

00:15:07,750 --> 00:15:13,690
of us it's called get it's called get

00:15:11,320 --> 00:15:17,440
with sub modules you take one main

00:15:13,690 --> 00:15:19,000
project you add the sub modules and when

00:15:17,440 --> 00:15:20,050
you add the sub modules you have the

00:15:19,000 --> 00:15:22,690
reference hash

00:15:20,050 --> 00:15:28,089
to this point in time where you are

00:15:22,690 --> 00:15:29,470
using that sub project and once you get

00:15:28,089 --> 00:15:30,610
that point you don't need another go be

00:15:29,470 --> 00:15:32,649
on top of that you don't need another

00:15:30,610 --> 00:15:35,500
tool on top of that and what Felix

00:15:32,649 --> 00:15:38,170
mentioned is our 10k and our 10k correct

00:15:35,500 --> 00:15:41,290
me if I'm wrong is basically an

00:15:38,170 --> 00:15:43,660
evolution of puppet librarian which was

00:15:41,290 --> 00:15:47,680
bitten by written by Tim sharp which

00:15:43,660 --> 00:15:53,560
kind of looks like this you got a module

00:15:47,680 --> 00:15:58,779
in puppet which says the engine X module

00:15:53,560 --> 00:16:01,450
written by Henrik felt its location is

00:15:58,779 --> 00:16:05,200
on github and this is the get hash

00:16:01,450 --> 00:16:08,529
pointing to it and every single language

00:16:05,200 --> 00:16:10,350
has figured out something like that this

00:16:08,529 --> 00:16:13,120
is actually the equivalent thing yet

00:16:10,350 --> 00:16:15,160
these are the remotes these are the give

00:16:13,120 --> 00:16:17,589
hash if you rewrite this it's exactly

00:16:15,160 --> 00:16:21,700
the same now i'm a big fan of this

00:16:17,589 --> 00:16:24,399
approach but it makes me use yet another

00:16:21,700 --> 00:16:27,250
tool if i use this approach which on the

00:16:24,399 --> 00:16:29,140
left is it gets up modules i can delete

00:16:27,250 --> 00:16:31,720
our puppet code i can do it for the java

00:16:29,140 --> 00:16:33,430
team i can do it for puppet for the ruby

00:16:31,720 --> 00:16:36,250
team i can do that for the drupal team

00:16:33,430 --> 00:16:39,310
and I give them all the same pattern and

00:16:36,250 --> 00:16:42,070
that makes life so much easier for me

00:16:39,310 --> 00:16:43,750
because I don't need to figure out which

00:16:42,070 --> 00:16:45,670
tool they use for release management

00:16:43,750 --> 00:16:48,399
because they're all using the same tool

00:16:45,670 --> 00:16:51,040
and yes there might be more elegant

00:16:48,399 --> 00:16:54,040
tools out there to solve this problem

00:16:51,040 --> 00:16:56,020
but this one kind of solves it for a lot

00:16:54,040 --> 00:16:57,910
of different use cases and when you

00:16:56,020 --> 00:16:59,589
start introducing DevOps when you start

00:16:57,910 --> 00:17:02,620
introducing best practices into an

00:16:59,589 --> 00:17:04,689
organization getting the ops people to

00:17:02,620 --> 00:17:08,709
start to do continuous delivery to start

00:17:04,689 --> 00:17:11,620
pushing their code out at speed that's a

00:17:08,709 --> 00:17:13,059
really valuable lesson because those are

00:17:11,620 --> 00:17:15,459
the people were going to need to support

00:17:13,059 --> 00:17:17,079
the application teams and if they don't

00:17:15,459 --> 00:17:19,120
know how to do it they're going to have

00:17:17,079 --> 00:17:22,120
a real hard time explaining to the

00:17:19,120 --> 00:17:24,939
developers how to do it so this is a

00:17:22,120 --> 00:17:26,169
really good start to experiment you need

00:17:24,939 --> 00:17:28,990
to figure out something how to do that

00:17:26,169 --> 00:17:31,900
what do you wrap it into librarian or

00:17:28,990 --> 00:17:33,510
our 10k or I mean we'll be used as

00:17:31,900 --> 00:17:38,190
librarian to I guess

00:17:33,510 --> 00:17:42,480
or you use just playing get the idea is

00:17:38,190 --> 00:17:45,300
if you figure out how to do this one

00:17:42,480 --> 00:17:48,330
step ahead and I prefer get because it

00:17:45,300 --> 00:17:51,720
give me one pattern and that's guilt

00:17:48,330 --> 00:17:58,670
rating so how many tools did I mention

00:17:51,720 --> 00:18:04,830
yet you guys really are asleep three

00:17:58,670 --> 00:18:08,900
really three I think too that the one I

00:18:04,830 --> 00:18:11,610
was ranting about was not in the list so

00:18:08,900 --> 00:18:16,520
when we talk about culture when we talk

00:18:11,610 --> 00:18:16,520
about donation the a is the second part

00:18:16,850 --> 00:18:21,140
we've seen the landscape evolve when we

00:18:19,260 --> 00:18:23,490
were doing infrastructure as code a

00:18:21,140 --> 00:18:25,560
couple of years ago we basically were

00:18:23,490 --> 00:18:28,890
building something which was pretty

00:18:25,560 --> 00:18:31,920
static which did not have machine

00:18:28,890 --> 00:18:33,450
spinning up left and right where we did

00:18:31,920 --> 00:18:36,930
not have to reconfigure our load

00:18:33,450 --> 00:18:40,040
balancers I'd like hey new machine spin

00:18:36,930 --> 00:18:42,830
it up reconfigure it we did not have

00:18:40,040 --> 00:18:45,750
really good service registration needs

00:18:42,830 --> 00:18:48,180
we didn't have developers asking for

00:18:45,750 --> 00:18:49,950
three machines that spun up like where's

00:18:48,180 --> 00:18:54,900
the service for this now we didn't have

00:18:49,950 --> 00:18:58,140
that yet we use DNS for that so the

00:18:54,900 --> 00:19:00,030
world has evolved the rule has also

00:18:58,140 --> 00:19:01,680
evolved into a bad way where Gardner now

00:19:00,030 --> 00:19:05,220
figures out hey there's a bunch of our

00:19:01,680 --> 00:19:07,590
companies who don't want to adopt Pete

00:19:05,220 --> 00:19:09,660
who haven't understood when Deming said

00:19:07,590 --> 00:19:11,730
survival is optional that the optional

00:19:09,660 --> 00:19:13,320
part is they're going to actually die so

00:19:11,730 --> 00:19:14,820
we need to give them a new cool thing

00:19:13,320 --> 00:19:18,180
and they called it by model so you have

00:19:14,820 --> 00:19:19,920
the old legacy environment and the part

00:19:18,180 --> 00:19:22,710
which is going HR which is kind of a

00:19:19,920 --> 00:19:27,030
complete anti-pattern because they're

00:19:22,710 --> 00:19:28,440
now telling that speed and agility does

00:19:27,030 --> 00:19:30,120
not mean you can actually have a stable

00:19:28,440 --> 00:19:31,680
platform where speed and agility and

00:19:30,120 --> 00:19:33,060
doing continuous delivery and doing

00:19:31,680 --> 00:19:34,710
smaller increments actually means you're

00:19:33,060 --> 00:19:37,020
going to have a higher and a more stable

00:19:34,710 --> 00:19:41,280
platform so I've been trying to redefine

00:19:37,020 --> 00:19:43,770
by model to you have a fully managed

00:19:41,280 --> 00:19:46,590
fully automated stack where you do

00:19:43,770 --> 00:19:49,140
changes like every 30 minutes when

00:19:46,590 --> 00:19:51,360
a puppet run or Chevron passes by and

00:19:49,140 --> 00:19:53,309
then you have the really fast part where

00:19:51,360 --> 00:19:55,380
you do changes instantaneously and I

00:19:53,309 --> 00:19:56,549
called that by model I hope it catches

00:19:55,380 --> 00:20:00,450
on because then the gardener guys can

00:19:56,549 --> 00:20:02,610
stop with a but you need new

00:20:00,450 --> 00:20:05,700
tools for that your new tools that can

00:20:02,610 --> 00:20:06,990
instantly react on a change and one of

00:20:05,700 --> 00:20:11,549
the tools I like to do that with is

00:20:06,990 --> 00:20:15,080
console was using console here okay so

00:20:11,549 --> 00:20:17,460
i've been using council mainly to do

00:20:15,080 --> 00:20:21,770
automatically configuration of reverse

00:20:17,460 --> 00:20:21,770
proxies and that kind of stuff for a

00:20:22,039 --> 00:20:26,850
year and a half two years something like

00:20:24,809 --> 00:20:29,880
that i mean i had the luxury of working

00:20:26,850 --> 00:20:32,159
with a customer who was really trying to

00:20:29,880 --> 00:20:34,770
speed up stuff and I think the moment

00:20:32,159 --> 00:20:36,149
council template came out Henry told me

00:20:34,770 --> 00:20:38,520
like we're gonna play with this today

00:20:36,149 --> 00:20:42,330
and we were like we're gonna play with

00:20:38,520 --> 00:20:46,830
this today it's going to be fun Council

00:20:42,330 --> 00:20:49,049
is built by Mitchell mihashi Corp it

00:20:46,830 --> 00:20:52,320
kind of does much more than service

00:20:49,049 --> 00:20:55,649
discovery it capable of registering

00:20:52,320 --> 00:20:58,200
services based on health it pretty much

00:20:55,649 --> 00:21:01,789
doesn't crash it has awareness of notes

00:20:58,200 --> 00:21:05,220
living next to each other and it's

00:21:01,789 --> 00:21:08,669
really fun to play with if you want to

00:21:05,220 --> 00:21:13,010
set console up there's public modules

00:21:08,669 --> 00:21:16,440
for that which allow you to set up a

00:21:13,010 --> 00:21:19,320
console a master a server which is a

00:21:16,440 --> 00:21:22,620
bootstrap and then a bunch of agents so

00:21:19,320 --> 00:21:24,330
you can have multi data centers it's

00:21:22,620 --> 00:21:26,600
going to find the other nodes when you

00:21:24,330 --> 00:21:29,669
tell them where the master is and it

00:21:26,600 --> 00:21:33,630
basically if you do it manually it's

00:21:29,669 --> 00:21:36,330
just the simple JSON string one of the

00:21:33,630 --> 00:21:38,429
things it does is it's going to show you

00:21:36,330 --> 00:21:40,559
which members it has so you can list the

00:21:38,429 --> 00:21:42,120
members you can see this is a test set

00:21:40,559 --> 00:21:44,520
up actually this vagrant box is on

00:21:42,120 --> 00:21:46,890
github you can pull it in you can do

00:21:44,520 --> 00:21:49,200
vagrant up and then file me all the

00:21:46,890 --> 00:21:51,240
books because i haven't been maintaining

00:21:49,200 --> 00:21:54,240
it for a couple of months so probably it

00:21:51,240 --> 00:21:58,590
won't work at this point but at some

00:21:54,240 --> 00:21:59,940
point in time it did you can use council

00:21:58,590 --> 00:22:00,269
members to figure out what's running

00:21:59,940 --> 00:22:03,899
where

00:22:00,269 --> 00:22:08,690
and then you start defining a service so

00:22:03,899 --> 00:22:13,200
who recognizes this kind of health check

00:22:08,690 --> 00:22:19,529
burnt wake up a bit you're not leaning

00:22:13,200 --> 00:22:21,599
you should recognize this he's not even

00:22:19,529 --> 00:22:23,190
crying I wrote nodules on the screen at

00:22:21,599 --> 00:22:32,609
the nodules at the net waste conference

00:22:23,190 --> 00:22:36,119
and he's not crying that was before Sam

00:22:32,609 --> 00:22:38,789
started repackaging stuff so basically

00:22:36,119 --> 00:22:42,089
console leverages the community they

00:22:38,789 --> 00:22:43,409
just egg you're really good community

00:22:42,089 --> 00:22:45,179
check and let's say hey I'm going to

00:22:43,409 --> 00:22:47,969
define a service which in this case is

00:22:45,179 --> 00:22:49,499
Apache I'm going to check this and I'm

00:22:47,969 --> 00:22:51,149
only going to register the service as

00:22:49,499 --> 00:22:53,009
being active when the check is

00:22:51,149 --> 00:22:54,629
successful at the moment that check is

00:22:53,009 --> 00:23:00,859
not successful it's going to remove it

00:22:54,629 --> 00:23:00,859
from where is it going to remove it from

00:23:01,909 --> 00:23:07,309
TNS you know might the title of my blog

00:23:05,249 --> 00:23:15,119
everything is a dns problem

00:23:07,309 --> 00:23:16,739
where's JP ah bummer i think i already

00:23:15,119 --> 00:23:21,359
explained in this chaotic to the NS

00:23:16,739 --> 00:23:24,450
setup but well it actually is going to

00:23:21,359 --> 00:23:27,570
populate your dns and it's going to say

00:23:24,450 --> 00:23:29,159
look this those two nodes these are

00:23:27,570 --> 00:23:31,769
running apache or the service you call

00:23:29,159 --> 00:23:32,820
it now if you're an application

00:23:31,769 --> 00:23:34,529
developer there is an interesting

00:23:32,820 --> 00:23:37,499
challenge what if both application

00:23:34,529 --> 00:23:44,099
service what if both Apaches go down but

00:23:37,499 --> 00:23:46,309
if you're rica is going to end up you're

00:23:44,099 --> 00:23:48,599
not even going to be able to resolve it

00:23:46,309 --> 00:23:54,599
think about that that's one of the

00:23:48,599 --> 00:23:55,979
things you are going to run into so it's

00:23:54,599 --> 00:23:57,509
going to put up the services you're

00:23:55,979 --> 00:23:59,309
going to be able to query them you can

00:23:57,509 --> 00:24:00,869
also create them from the key values or

00:23:59,309 --> 00:24:03,570
you can have your applications actually

00:24:00,869 --> 00:24:05,579
call console directory and read it there

00:24:03,570 --> 00:24:07,859
and that's probably a better matter much

00:24:05,579 --> 00:24:12,380
better alternative but council does much

00:24:07,859 --> 00:24:15,330
more um I had great out and collective

00:24:12,380 --> 00:24:18,300
console to me is one of the yet another

00:24:15,330 --> 00:24:20,190
and collective alternatives one of the

00:24:18,300 --> 00:24:22,260
things I like to do with them collective

00:24:20,190 --> 00:24:23,610
is basically run made this comment on

00:24:22,260 --> 00:24:25,800
all the nodes that are running Apache

00:24:23,610 --> 00:24:28,830
and because I now have exported using

00:24:25,800 --> 00:24:30,690
puppet by the way all the notes I tagged

00:24:28,830 --> 00:24:33,150
the Mazarin Apache I can now say console

00:24:30,690 --> 00:24:35,430
exact me give me the IP address of all

00:24:33,150 --> 00:24:40,560
the machines with the tag Apache which

00:24:35,430 --> 00:24:42,390
are running service Apache in a bit less

00:24:40,560 --> 00:24:45,510
complex way to do it then we dem

00:24:42,390 --> 00:24:50,780
collective and I'll come back to this

00:24:45,510 --> 00:24:54,330
kind of approaches later today obviously

00:24:50,780 --> 00:24:56,040
there's a puppet module for that it was

00:24:54,330 --> 00:25:01,050
pretty actively developed when I was

00:24:56,040 --> 00:25:02,730
playing with it but I said most of the

00:25:01,050 --> 00:25:05,760
times i'm using this it's because i want

00:25:02,730 --> 00:25:08,280
to have real-time reconfiguration of a

00:25:05,760 --> 00:25:11,460
service and to do that you need another

00:25:08,280 --> 00:25:14,070
tool you need the combination of counsel

00:25:11,460 --> 00:25:15,780
with console template what console

00:25:14,070 --> 00:25:17,820
template does it actually watches the

00:25:15,780 --> 00:25:21,030
key value store of counsel and when

00:25:17,820 --> 00:25:23,040
there's a change in a certain key value

00:25:21,030 --> 00:25:24,450
it's going to reconfigure or it's going

00:25:23,040 --> 00:25:29,250
to trigger an action based on that

00:25:24,450 --> 00:25:32,550
change so for example this is an engine

00:25:29,250 --> 00:25:36,270
exhibit well is actually the console

00:25:32,550 --> 00:25:39,270
template go format where we say well all

00:25:36,270 --> 00:25:41,450
the upstream servers all the ones with

00:25:39,270 --> 00:25:43,980
Apache give me the addresses and

00:25:41,450 --> 00:25:46,410
reconfigure this automatically when you

00:25:43,980 --> 00:25:50,070
see there is one up two up three up or

00:25:46,410 --> 00:25:52,800
once there's a bunch reappearing or

00:25:50,070 --> 00:25:55,620
disappearing and that means that now I

00:25:52,800 --> 00:25:57,450
can spin up a machine and when you're in

00:25:55,620 --> 00:25:59,040
a puppet ecosystem you should have

00:25:57,450 --> 00:26:01,470
waited before there's an exported

00:25:59,040 --> 00:26:03,360
resource and then your engineer server

00:26:01,470 --> 00:26:05,880
collects the resources and reconfigures

00:26:03,360 --> 00:26:09,300
itself which is like if you have 30

00:26:05,880 --> 00:26:11,730
minute intervals the maximum of 2 x 29

00:26:09,300 --> 00:26:13,470
minutes which is way too long for a

00:26:11,730 --> 00:26:15,810
service reconfiguration or you need to

00:26:13,470 --> 00:26:17,610
figure out hey let me trigger those from

00:26:15,810 --> 00:26:21,360
say I'm collective or ansible to

00:26:17,610 --> 00:26:22,680
actually get them done faster I really

00:26:21,360 --> 00:26:24,780
like the combination of counsel and

00:26:22,680 --> 00:26:25,900
counsel template because it allows me to

00:26:24,780 --> 00:26:28,510
do that with

00:26:25,900 --> 00:26:35,730
pretty much no manual interactions at

00:26:28,510 --> 00:26:38,440
all so you see this guy popping up I

00:26:35,730 --> 00:26:41,200
tend to work with customers I tend to

00:26:38,440 --> 00:26:44,350
work with managers we want stuff they

00:26:41,200 --> 00:26:48,670
want reports they want to figure out

00:26:44,350 --> 00:26:52,270
what broke when and they also want the I

00:26:48,670 --> 00:26:54,670
want to click here for a new vm I've

00:26:52,270 --> 00:26:56,920
been the guy who actually said I want to

00:26:54,670 --> 00:26:58,780
see a git log and see we defined the new

00:26:56,920 --> 00:27:00,460
vm sin hira or will actually saw the

00:26:58,780 --> 00:27:05,140
resource definition somewhere but they

00:27:00,460 --> 00:27:06,520
won't have a click button and there's so

00:27:05,140 --> 00:27:09,310
many platforms they want to support

00:27:06,520 --> 00:27:11,620
they've got proprietary stuff they got

00:27:09,310 --> 00:27:14,500
lipford they got public clouds they got

00:27:11,620 --> 00:27:17,380
all kinds of stuff and I won't have a

00:27:14,500 --> 00:27:19,180
one place to click and one place to

00:27:17,380 --> 00:27:23,130
figure out how to our environment is

00:27:19,180 --> 00:27:25,840
working and my favorite tool for this is

00:27:23,130 --> 00:27:27,430
foreman and I see a bunch of people

00:27:25,840 --> 00:27:31,500
already heís going to the puppet

00:27:27,430 --> 00:27:35,950
ecosystem again which kind of is true

00:27:31,500 --> 00:27:38,920
but it's also not true yes Foreman

00:27:35,950 --> 00:27:41,410
started out as a puppet dashboard it

00:27:38,920 --> 00:27:43,030
started out as a way to figure out how

00:27:41,410 --> 00:27:45,040
good your environment was which had

00:27:43,030 --> 00:27:47,290
great reports of your nodes where you

00:27:45,040 --> 00:27:49,960
had a good view into how many nodes were

00:27:47,290 --> 00:27:52,570
reporting I took the snapshot when we

00:27:49,960 --> 00:27:54,400
were spinning up a bunch of new boxes

00:27:52,570 --> 00:27:56,380
but it shows me the state of my

00:27:54,400 --> 00:27:58,540
environment there's like only for hosts

00:27:56,380 --> 00:28:01,990
there that need attention on a conflict

00:27:58,540 --> 00:28:05,110
management point of view so we have

00:28:01,990 --> 00:28:07,540
reports we could use it as an external

00:28:05,110 --> 00:28:09,670
node classifier we could use a bunch of

00:28:07,540 --> 00:28:12,190
the plugins there but we can also use it

00:28:09,670 --> 00:28:14,080
for provisioning and I think these are

00:28:12,190 --> 00:28:17,290
kind of all the stacks we have been

00:28:14,080 --> 00:28:21,850
provisioning with it our own livered

00:28:17,290 --> 00:28:23,830
base tag on Zeb a stack Italy has w

00:28:21,850 --> 00:28:26,710
there's the lotion OpenStack cloudstack

00:28:23,830 --> 00:28:28,270
we played a bit with opennebula and

00:28:26,710 --> 00:28:29,620
there's the small footprint in there

00:28:28,270 --> 00:28:32,140
that told me not to put the important

00:28:29,620 --> 00:28:34,900
stuff on the lower part of the slide so

00:28:32,140 --> 00:28:36,660
the less important stuff it's kind of

00:28:34,900 --> 00:28:38,860
hoping it's fell off but

00:28:36,660 --> 00:28:41,590
so we've been provisioning all of those

00:28:38,860 --> 00:28:42,970
stacks with create new nodes use the

00:28:41,590 --> 00:28:46,210
computer resource and spin em up

00:28:42,970 --> 00:28:48,880
automatically register them and play

00:28:46,210 --> 00:28:51,460
with them what we're seeing today is

00:28:48,880 --> 00:28:53,500
that because in the other configuration

00:28:51,460 --> 00:28:55,240
management ecosystems they don't have

00:28:53,500 --> 00:28:56,920
these kind of tools they're writing all

00:28:55,240 --> 00:28:58,840
kind of plugins gives the people

00:28:56,920 --> 00:29:00,220
adopting ansible I also want to see

00:28:58,840 --> 00:29:03,100
reports i also want to see what's

00:29:00,220 --> 00:29:04,809
failing where this is actually the

00:29:03,100 --> 00:29:09,070
report with failing as a bull run

00:29:04,809 --> 00:29:10,630
informant daniel one of our Dutch guys

00:29:09,070 --> 00:29:13,450
one of our chef guys he's doing the same

00:29:10,630 --> 00:29:15,100
with chef so we're actually having

00:29:13,450 --> 00:29:16,900
environments where there's a bunch of

00:29:15,100 --> 00:29:19,030
people working with one tool a bunch of

00:29:16,900 --> 00:29:20,860
people with another tool they launch

00:29:19,030 --> 00:29:23,679
notes from the same environment they

00:29:20,860 --> 00:29:27,100
give the same reports so different

00:29:23,679 --> 00:29:30,610
language they use but it's kind of

00:29:27,100 --> 00:29:32,050
getting fun this guy somewhere hiding in

00:29:30,610 --> 00:29:34,390
the audience is going to talk more about

00:29:32,050 --> 00:29:37,750
what he's doing with Foreman I think

00:29:34,390 --> 00:29:40,510
tomorrow with 9 30 by then you should

00:29:37,750 --> 00:29:43,360
all be awake have sufficient coffee and

00:29:40,510 --> 00:29:47,140
not be drunk anymore so that's also

00:29:43,360 --> 00:29:52,059
going to be interesting so that was

00:29:47,140 --> 00:29:54,010
Foreman so this guy pops up again when

00:29:52,059 --> 00:29:55,750
we talk about DevOps we talk about

00:29:54,010 --> 00:29:58,600
giving developers access to the platform

00:29:55,750 --> 00:30:00,610
we use log stash to give them access to

00:29:58,600 --> 00:30:02,559
the platform to give them access to log

00:30:00,610 --> 00:30:04,720
files we use graphite to give them

00:30:02,559 --> 00:30:10,950
access to instant metrics so they can

00:30:04,720 --> 00:30:18,429
build their own dashboards but I also

00:30:10,950 --> 00:30:21,160
want to give them access to comments

00:30:18,429 --> 00:30:22,750
like so if you're developing and you

00:30:21,160 --> 00:30:26,350
want to really restart that tomcat

00:30:22,750 --> 00:30:28,840
server sure go ahead but I don't want to

00:30:26,350 --> 00:30:31,390
log on to the machine really you don't

00:30:28,840 --> 00:30:33,460
and then we show them and collective

00:30:31,390 --> 00:30:35,110
this is too difficult i need to have too

00:30:33,460 --> 00:30:37,240
much parameter sleep raise and collect

00:30:35,110 --> 00:30:41,890
the food a shell script that calls them

00:30:37,240 --> 00:30:43,750
collective or calls console and but it's

00:30:41,890 --> 00:30:45,610
too difficult because we want to have a

00:30:43,750 --> 00:30:48,669
user interface we want to have a weapon

00:30:45,610 --> 00:30:49,720
der face and the manager says i want to

00:30:48,669 --> 00:30:50,330
have an audit trail i'm going to have

00:30:49,720 --> 00:30:54,110
locks on

00:30:50,330 --> 00:30:56,840
of that so we use a little tool called

00:30:54,110 --> 00:30:59,299
run deck for that um basically what

00:30:56,840 --> 00:31:01,789
rednecks does is it gives you a way to

00:30:59,299 --> 00:31:07,250
give everybody access to a comment on a

00:31:01,789 --> 00:31:09,470
platform where we can log it they have

00:31:07,250 --> 00:31:13,909
to be logged on so we know boo run that

00:31:09,470 --> 00:31:17,330
comment win and we give them access to a

00:31:13,909 --> 00:31:22,880
bunch of really trivial actions as an

00:31:17,330 --> 00:31:25,580
example we created a bunch of boxes we

00:31:22,880 --> 00:31:28,130
actually get the list of notes from in

00:31:25,580 --> 00:31:29,510
this case Papa DB which gives us these

00:31:28,130 --> 00:31:31,700
are the talent machines you have in the

00:31:29,510 --> 00:31:33,620
network with all the parameters with all

00:31:31,700 --> 00:31:36,110
effects where we can filter them from a

00:31:33,620 --> 00:31:39,019
GUI which makes it easier for them but

00:31:36,110 --> 00:31:42,590
you could get the data from any single

00:31:39,019 --> 00:31:44,809
data source you want so you want to know

00:31:42,590 --> 00:31:47,809
what files are in the directory I mean

00:31:44,809 --> 00:31:51,669
typical actions which we use this for is

00:31:47,809 --> 00:31:55,240
in a Drupal for example clean the cash

00:31:51,669 --> 00:31:58,360
varnish cash cleaning or restarts

00:31:55,240 --> 00:32:00,470
figuring out if a backup has succeeded

00:31:58,360 --> 00:32:03,409
checking if files are still at a certain

00:32:00,470 --> 00:32:06,710
place so a simple LS on like five nodes

00:32:03,409 --> 00:32:10,429
together is something we use run back

00:32:06,710 --> 00:32:12,380
for these are two test nodes and we get

00:32:10,429 --> 00:32:16,130
output that it was all successful that

00:32:12,380 --> 00:32:21,070
we run it and it works and this is

00:32:16,130 --> 00:32:23,419
pretty much the same so we give people

00:32:21,070 --> 00:32:27,230
how many times have I copy this off

00:32:23,419 --> 00:32:30,260
crazy some duplicates lights in dirt so

00:32:27,230 --> 00:32:33,830
we give people a user interface on top

00:32:30,260 --> 00:32:35,450
of trivial actions and we know that now

00:32:33,830 --> 00:32:38,120
that they have access to the actions

00:32:35,450 --> 00:32:40,639
they know we can version them because we

00:32:38,120 --> 00:32:43,639
can put all those jobs in and get we can

00:32:40,639 --> 00:32:45,919
build new run deck servers from those

00:32:43,639 --> 00:32:47,419
sources and obviously the whole stack is

00:32:45,919 --> 00:32:50,230
fully automated so we can spin up new

00:32:47,419 --> 00:32:52,940
stacks in data centers when we want and

00:32:50,230 --> 00:32:55,340
a lot of the developers are happy with

00:32:52,940 --> 00:32:57,110
this because now they don't have to run

00:32:55,340 --> 00:33:00,169
into a machine anymore they don't have

00:32:57,110 --> 00:33:01,990
to type as as H which is I mean to me it

00:33:00,169 --> 00:33:03,140
scary that they don't want that but

00:33:01,990 --> 00:33:08,720
gives

00:33:03,140 --> 00:33:10,190
a better happier place so what's the

00:33:08,720 --> 00:33:13,850
next part we're going to talk about in

00:33:10,190 --> 00:33:19,640
the camps part monitoring our metrics

00:33:13,850 --> 00:33:21,680
right there used to be a time when we

00:33:19,640 --> 00:33:26,630
were using graphite was using just

00:33:21,680 --> 00:33:31,010
graphite nothing on top of it then there

00:33:26,630 --> 00:33:32,450
used to be G dash there used to be when

00:33:31,010 --> 00:33:37,000
they would tattle there were there was

00:33:32,450 --> 00:33:43,190
so many dashboards on top of graphite

00:33:37,000 --> 00:33:46,700
that you couldn't keep can't graph on a

00:33:43,190 --> 00:33:50,740
popped up and it kind of became the

00:33:46,700 --> 00:33:53,750
standard dashboard management tool

00:33:50,740 --> 00:33:55,220
people started improving on graphite and

00:33:53,750 --> 00:33:59,030
they started using influx they start

00:33:55,220 --> 00:34:01,760
using from issues but we have the one

00:33:59,030 --> 00:34:04,700
dashboard we have the one from 10th for

00:34:01,760 --> 00:34:09,560
a bunch of those back ends and that's

00:34:04,700 --> 00:34:13,520
graph owner we really can just go into

00:34:09,560 --> 00:34:15,649
the UI pull down the list of nodes grade

00:34:13,520 --> 00:34:18,530
graphs click and point and within

00:34:15,649 --> 00:34:20,390
minutes we have dashboards that people

00:34:18,530 --> 00:34:22,610
can use this is a dashboard at one of

00:34:20,390 --> 00:34:24,100
our robes guys one of our customer says

00:34:22,610 --> 00:34:27,740
we're going to do a performance test on

00:34:24,100 --> 00:34:31,550
that platform and they call us like an

00:34:27,740 --> 00:34:32,990
hour in advance can you show us the

00:34:31,550 --> 00:34:35,110
dashboard so here we have our own

00:34:32,990 --> 00:34:37,280
dashboards but what do you care about

00:34:35,110 --> 00:34:40,760
well I want to see that that death can

00:34:37,280 --> 00:34:41,840
you yeah sure ten minutes later we click

00:34:40,760 --> 00:34:43,909
together all the metrics we were

00:34:41,840 --> 00:34:46,010
collecting in one dashboard for depth

00:34:43,909 --> 00:34:48,380
customer where we could just point into

00:34:46,010 --> 00:34:51,200
one link so here's the dashboard this

00:34:48,380 --> 00:34:52,820
what you need and they went back and

00:34:51,200 --> 00:34:56,300
forth a bit and said okay this works

00:34:52,820 --> 00:34:57,740
this is good dashboard for us they could

00:34:56,300 --> 00:35:00,020
use it they can modify it himself they

00:34:57,740 --> 00:35:01,400
could template it we can then take that

00:35:00,020 --> 00:35:05,330
same dashboard but for different

00:35:01,400 --> 00:35:08,420
environments something that really

00:35:05,330 --> 00:35:10,490
really saves a lot of time I haven't

00:35:08,420 --> 00:35:13,910
played with the elastic search back and

00:35:10,490 --> 00:35:17,000
yet there was a time when I was hoping

00:35:13,910 --> 00:35:20,920
at both Ravana and Cabana were heading

00:35:17,000 --> 00:35:26,570
direction but at some point they kind of

00:35:20,920 --> 00:35:30,320
lost track so there's obviously slides

00:35:26,570 --> 00:35:32,780
missing that happens when you modify

00:35:30,320 --> 00:35:36,490
your dick like 10 minutes before I talk

00:35:32,780 --> 00:35:40,490
I kind of get to be an expert in that

00:35:36,490 --> 00:35:41,750
the slides that missing is that there's

00:35:40,490 --> 00:35:43,610
this new thing popping up which is

00:35:41,750 --> 00:35:50,630
metrics do dodo who sort of metrics to

00:35:43,610 --> 00:35:53,420
that oh hmm so there's a great talk from

00:35:50,630 --> 00:35:57,430
a guy over at the Mayo Belgian guy

00:35:53,420 --> 00:35:59,450
forget his name again who talks about

00:35:57,430 --> 00:36:02,330
correlations who talks about the fact

00:35:59,450 --> 00:36:04,760
that we are missing out on a couple of

00:36:02,330 --> 00:36:06,620
things event correlation how do you

00:36:04,760 --> 00:36:08,060
store an event in graphite and all that

00:36:06,620 --> 00:36:13,660
kind of stuff and he was when he was

00:36:08,060 --> 00:36:17,990
working at vmail what's his name again

00:36:13,660 --> 00:36:21,770
weren't you know no I've got his picture

00:36:17,990 --> 00:36:23,960
and said yeah so he works used to work

00:36:21,770 --> 00:36:26,930
at female he's now actually working for

00:36:23,960 --> 00:36:29,270
the guys for doing Ravana and that's

00:36:26,930 --> 00:36:31,720
where I was pointing at the metrics to

00:36:29,270 --> 00:36:34,220
do stuff which is at the vmail github

00:36:31,720 --> 00:36:36,770
public repository it's kind of been

00:36:34,220 --> 00:36:39,650
disbanded and all of those features all

00:36:36,770 --> 00:36:43,940
of those IDs and are slowly finding the

00:36:39,650 --> 00:36:46,250
way into graph Anna so there's active

00:36:43,940 --> 00:36:48,800
development there oh by the way there's

00:36:46,250 --> 00:36:51,980
this huge misconception that graphite is

00:36:48,800 --> 00:36:54,440
dead that's the thread that pops up on

00:36:51,980 --> 00:36:55,700
Twitter every now in a while and then

00:36:54,440 --> 00:36:56,870
there's people who say like yeah

00:36:55,700 --> 00:37:00,110
graphite is dead hasn't been released

00:36:56,870 --> 00:37:01,670
for like what do you mean go to the get

00:37:00,110 --> 00:37:03,380
ripples three last commit is three hours

00:37:01,670 --> 00:37:07,220
ago this is absolutely not that this is

00:37:03,380 --> 00:37:09,380
thriving so don't get mistaken there

00:37:07,220 --> 00:37:15,230
there's still a lot of development going

00:37:09,380 --> 00:37:17,270
on this is what we do min metrics this

00:37:15,230 --> 00:37:22,450
is what we do with graphs but there's

00:37:17,270 --> 00:37:26,180
more data there's who's on call there's

00:37:22,450 --> 00:37:28,250
how is traffic looking today there's how

00:37:26,180 --> 00:37:30,260
many kinga alerts do we have and how

00:37:28,250 --> 00:37:30,770
many boxes are how many backups did we

00:37:30,260 --> 00:37:32,120
fail

00:37:30,770 --> 00:37:34,130
how many issues do we have in redmine

00:37:32,120 --> 00:37:36,770
there are so many other data sources

00:37:34,130 --> 00:37:38,690
which we pulled out so yes I scrapped

00:37:36,770 --> 00:37:40,940
out the name of a bunch of customers our

00:37:38,690 --> 00:37:44,240
Jenkins builds were all pretty green on

00:37:40,940 --> 00:37:45,680
that one Jenkins servers we have

00:37:44,240 --> 00:37:48,290
different people on call for different

00:37:45,680 --> 00:37:49,640
topics like there's people for one

00:37:48,290 --> 00:37:51,530
customer which are application

00:37:49,640 --> 00:37:53,000
developers and then there's people were

00:37:51,530 --> 00:37:54,680
on called a time and then there's people

00:37:53,000 --> 00:37:55,910
on a night shift and I didn't want to

00:37:54,680 --> 00:37:59,570
put their name on there you can google

00:37:55,910 --> 00:38:02,420
them anyhow but you want to see that in

00:37:59,570 --> 00:38:06,410
a big dashboard and we use dashing to do

00:38:02,420 --> 00:38:08,300
that now dashing is floss tool I have in

00:38:06,410 --> 00:38:11,680
the list but I have a love-hate

00:38:08,300 --> 00:38:14,450
relationship with dashing I mean it's

00:38:11,680 --> 00:38:17,330
awesome when you look at the amount of

00:38:14,450 --> 00:38:19,850
plugins were there and the simple way on

00:38:17,330 --> 00:38:22,610
how to build a dashboard and how to get

00:38:19,850 --> 00:38:25,400
there I mean it's get something from a

00:38:22,610 --> 00:38:27,740
red is data back end um that's a tree

00:38:25,400 --> 00:38:29,300
line Ruby script which all of you can

00:38:27,740 --> 00:38:32,960
write because I can and I cannot write

00:38:29,300 --> 00:38:34,580
code there's really awesome debugging

00:38:32,960 --> 00:38:37,100
features like if you figure out how to

00:38:34,580 --> 00:38:38,780
events dreamworks you can just curl that

00:38:37,100 --> 00:38:41,480
and see if pause by and see what's

00:38:38,780 --> 00:38:44,030
happening in clear-text also but for

00:38:41,480 --> 00:38:48,200
debugging that's great but then there's

00:38:44,030 --> 00:38:50,320
the way how to deploy it I mean you're

00:38:48,200 --> 00:38:53,900
there really picking on the ruby version

00:38:50,320 --> 00:38:56,510
so you stick with the one that works and

00:38:53,900 --> 00:39:00,680
don't even try changing the dependencies

00:38:56,510 --> 00:39:04,910
on how to build it it's horrible and

00:39:00,680 --> 00:39:08,840
their way of sharing dashlets is curl

00:39:04,910 --> 00:39:11,360
from a gift like really do you really

00:39:08,840 --> 00:39:13,160
want to have code version in a gift not

00:39:11,360 --> 00:39:14,600
a full git repository but a kissed

00:39:13,160 --> 00:39:18,920
which is like the only place where you

00:39:14,600 --> 00:39:21,560
can put it is github the way you build

00:39:18,920 --> 00:39:23,480
up your dashboard is awesome but the way

00:39:21,560 --> 00:39:26,600
you have to do release management on the

00:39:23,480 --> 00:39:30,170
tree where the jobs and the widgets and

00:39:26,600 --> 00:39:31,490
all that so far it's playing hell if you

00:39:30,170 --> 00:39:33,770
look at ninety percent of the widgets

00:39:31,490 --> 00:39:35,690
and I'm sorry ninety percent of the jobs

00:39:33,770 --> 00:39:37,970
they basically go like big block of

00:39:35,690 --> 00:39:40,460
comfrey on top and Ruby and then the

00:39:37,970 --> 00:39:42,290
actual code so i want to do this for

00:39:40,460 --> 00:39:43,820
multiple environments which means i kind

00:39:42,290 --> 00:39:44,450
of need to have multiple copies or just

00:39:43,820 --> 00:39:46,810
patch all the

00:39:44,450 --> 00:39:48,710
scripts and use them and have

00:39:46,810 --> 00:39:50,930
configuration parameters in there so you

00:39:48,710 --> 00:39:55,070
can actually read the conflict from a

00:39:50,930 --> 00:40:01,430
file is anybody here riding dashing jobs

00:39:55,070 --> 00:40:04,760
is your conflict in the script yep did

00:40:01,430 --> 00:40:08,390
you 4get from julia is that the nadi

00:40:04,760 --> 00:40:09,800
kinga one okay because you king upon

00:40:08,390 --> 00:40:11,750
which he started writing on which is

00:40:09,800 --> 00:40:14,619
still living I'll still does not have no

00:40:11,750 --> 00:40:16,880
that one actually has conflict separated

00:40:14,619 --> 00:40:24,320
not in your version but in the fort from

00:40:16,880 --> 00:40:26,780
net ways it does so if you start writing

00:40:24,320 --> 00:40:29,089
those little gems put the conflict

00:40:26,780 --> 00:40:31,190
separately thank you it's going to save

00:40:29,089 --> 00:40:33,829
us all a lot of time but apart from that

00:40:31,190 --> 00:40:36,200
it's a great tool because managers like

00:40:33,829 --> 00:40:38,150
this kind of view it's all groan oh it's

00:40:36,200 --> 00:40:40,790
not all green so when I walk into the

00:40:38,150 --> 00:40:45,140
office I say tree on red and you go like

00:40:40,790 --> 00:40:47,290
oh crap they start fixing stuff but

00:40:45,140 --> 00:40:52,420
usually it's green and the goal is

00:40:47,290 --> 00:40:52,420
you're not going home unless it's great

00:40:54,339 --> 00:41:15,770
so what tool did I forget docker you can

00:41:07,579 --> 00:41:21,829
do a better guess command burned you

00:41:15,770 --> 00:41:24,200
don't know coffee yeah coffee would be a

00:41:21,829 --> 00:41:25,730
good one no I mean there's this

00:41:24,200 --> 00:41:28,579
tradition that I need to see a king of

00:41:25,730 --> 00:41:34,490
if I'm on stage here right yeah so I mr.

00:41:28,579 --> 00:41:37,220
kinga yeah okay thanks the tools I I

00:41:34,490 --> 00:41:38,990
missed and it's not nice but it's not

00:41:37,220 --> 00:41:41,839
the king it because I've been playing

00:41:38,990 --> 00:41:43,760
with leaking a lot but the tools i

00:41:41,839 --> 00:41:45,680
missed is because i didn't spend enough

00:41:43,760 --> 00:41:47,240
time with it yet one of the tools i'm

00:41:45,680 --> 00:41:50,210
really looking forward to play with this

00:41:47,240 --> 00:41:52,730
vault key management in an

00:41:50,210 --> 00:41:54,310
infrastructure shared secrets at

00:41:52,730 --> 00:41:57,280
something which is really difficult

00:41:54,310 --> 00:42:00,130
Hachey corp release the tool there

00:41:57,280 --> 00:42:01,840
I need to take some fun holiday like Don

00:42:00,130 --> 00:42:03,070
explained but I need to explain that to

00:42:01,840 --> 00:42:07,540
my wife so probably should take a

00:42:03,070 --> 00:42:09,720
holiday and just go to the office to

00:42:07,540 --> 00:42:12,490
play with vault to do stuff like that

00:42:09,720 --> 00:42:13,870
another hachey corp to terraform

00:42:12,490 --> 00:42:15,220
actually did play with a reformed but

00:42:13,870 --> 00:42:17,620
not any extent i really want to play

00:42:15,220 --> 00:42:19,210
with it just putting up a bunch of AWS

00:42:17,620 --> 00:42:22,060
boxes together it's fun but i want to go

00:42:19,210 --> 00:42:24,520
much further and there's stuff like

00:42:22,060 --> 00:42:27,610
kubernetes and nasals but the next stock

00:42:24,520 --> 00:42:33,730
is going to be about those right see in

00:42:27,610 --> 00:42:35,500
the room yet Jonah oh oh yeah so those

00:42:33,730 --> 00:42:37,090
tools were not in there yet because well

00:42:35,500 --> 00:42:38,980
I did not have time to play with them

00:42:37,090 --> 00:42:42,250
yet so maybe that's for the third

00:42:38,980 --> 00:42:44,230
edition of another stack of DevOps tools

00:42:42,250 --> 00:42:53,860
but really what's the most important

00:42:44,230 --> 00:42:55,360
tool I can talk tools all day but DevOps

00:42:53,860 --> 00:42:57,970
is not going to be solved with tools

00:42:55,360 --> 00:43:00,730
you're not going to fix culture by

00:42:57,970 --> 00:43:03,490
putting puppet or chef or ansible in

00:43:00,730 --> 00:43:09,360
your infrastructure and specifically not

00:43:03,490 --> 00:43:11,920
daughter but you will get improvements

00:43:09,360 --> 00:43:13,600
when you start working together when you

00:43:11,920 --> 00:43:15,580
start behaving like human beings and not

00:43:13,600 --> 00:43:17,470
like and you started working

00:43:15,580 --> 00:43:21,040
together with the people which code you

00:43:17,470 --> 00:43:24,040
are deploying so yes have fun with the

00:43:21,040 --> 00:43:27,790
tools but take them out for beer and

00:43:24,040 --> 00:43:30,070
sushi too and that's my message for

00:43:27,790 --> 00:43:35,400
today and for down and burnt and JP you

00:43:30,070 --> 00:43:35,400
can do Jin too but I don't like to thank

00:43:41,020 --> 00:43:53,810
questions I'm hiring too but I don't

00:43:49,640 --> 00:44:00,910
have the bumpy flight yet somebody who's

00:43:53,810 --> 00:44:00,910
not hiring okay you guess it questions

00:44:01,720 --> 00:44:05,930
feeders Germans it's not you they just

00:44:04,010 --> 00:44:08,660
down there to ask questions we invented

00:44:05,930 --> 00:44:14,570
the sitting ovation that's our thing

00:44:08,660 --> 00:44:16,460
that the what the sitting ovation yeah

00:44:14,570 --> 00:44:19,420
maybe just a quick one about your

00:44:16,460 --> 00:44:22,970
console slides um you talked about tags

00:44:19,420 --> 00:44:26,330
and just cleared up is it possible to

00:44:22,970 --> 00:44:28,250
read our puppet exported resource tags

00:44:26,330 --> 00:44:34,490
in your console script or in your

00:44:28,250 --> 00:44:37,100
console config hmm i'm usually

00:44:34,490 --> 00:44:40,490
configuring the services I monitor and

00:44:37,100 --> 00:44:44,750
the full council and config with puppet

00:44:40,490 --> 00:44:48,170
so if I export something i can probably

00:44:44,750 --> 00:44:50,410
already do it there maybe you can

00:44:48,170 --> 00:44:53,560
explain more what exactly as an example

00:44:50,410 --> 00:44:56,660
you talked about reverse proxy

00:44:53,560 --> 00:44:59,960
configurations and we do that with

00:44:56,660 --> 00:45:02,330
exported resources on puppet yeah so I

00:44:59,960 --> 00:45:04,280
was just thinking about why do I need

00:45:02,330 --> 00:45:07,700
console for that because I already got

00:45:04,280 --> 00:45:10,760
it in the exporter resource speed when I

00:45:07,700 --> 00:45:14,450
run an engineer's reverse proxy or an

00:45:10,760 --> 00:45:16,640
Apache reverse proxy I add two more back

00:45:14,450 --> 00:45:18,950
ends on a note completely different ones

00:45:16,640 --> 00:45:23,330
I run puppet on that note it gets

00:45:18,950 --> 00:45:25,550
configured it exports the resource when

00:45:23,330 --> 00:45:30,080
do you reconfigure the engine X or the

00:45:25,550 --> 00:45:33,910
Apache at its next puppet run how long

00:45:30,080 --> 00:45:37,130
does rabbit run take the Delta between

00:45:33,910 --> 00:45:39,170
the exported resource aiming in poverty

00:45:37,130 --> 00:45:41,180
be your next puppet run being triggered

00:45:39,170 --> 00:45:44,030
for some people if that's half an hour

00:45:41,180 --> 00:45:45,560
or 58 minutes or whatever it's fine but

00:45:44,030 --> 00:45:49,640
for other people they want it's

00:45:45,560 --> 00:45:51,650
configured change and that's what I call

00:45:49,640 --> 00:45:53,970
by model

00:45:51,650 --> 00:45:57,060
that's where I want to speed and that's

00:45:53,970 --> 00:45:59,220
where I use console because there is

00:45:57,060 --> 00:46:04,830
something puppet cannot do probably can

00:45:59,220 --> 00:46:17,640
do de it's there but not that that's the

00:46:04,830 --> 00:46:19,560
only difference more questions so just a

00:46:17,640 --> 00:46:21,750
quick one are you still using graphite

00:46:19,560 --> 00:46:24,930
or are ya using something like mountain

00:46:21,750 --> 00:46:26,700
flux we're using graphite and most of

00:46:24,930 --> 00:46:28,880
the infrastructures we manage we don't

00:46:26,700 --> 00:46:32,400
reach the scalability limits of graphite

00:46:28,880 --> 00:46:34,410
I've been looking into a go rebuilds of

00:46:32,400 --> 00:46:37,920
graphite I've been looking into the ng

00:46:34,410 --> 00:46:39,660
builds but we're still happy with

00:46:37,920 --> 00:46:42,060
graphite in most of the sex we manage

00:46:39,660 --> 00:46:53,730
yeah thank you we're not Google we're

00:46:42,060 --> 00:46:56,160
not github or knots so Felix um I so you

00:46:53,730 --> 00:46:59,220
you pointed out how from your point of

00:46:56,160 --> 00:47:02,160
view or the release management tools out

00:46:59,220 --> 00:47:05,460
there are broken and you went ahead and

00:47:02,160 --> 00:47:06,720
propose but they're not all looking

00:47:05,460 --> 00:47:10,410
they're actually a bunch of them do a

00:47:06,720 --> 00:47:13,230
good thing right so then you proposed

00:47:10,410 --> 00:47:15,570
get sub modules and as you are probably

00:47:13,230 --> 00:47:18,390
aware you're pretty much the only person

00:47:15,570 --> 00:47:22,110
ever who said that using git submodules

00:47:18,390 --> 00:47:25,350
is a good idea so do you have any advice

00:47:22,110 --> 00:47:28,920
for the four they you know uninitiated

00:47:25,350 --> 00:47:34,590
on how to use that without losing their

00:47:28,920 --> 00:47:39,960
mind there's a bunch of others that use

00:47:34,590 --> 00:47:42,930
get sub modules there's a lot of people

00:47:39,960 --> 00:47:46,790
when I show them a puppet file with the

00:47:42,930 --> 00:47:51,810
get hashes and get sub modules they see

00:47:46,790 --> 00:47:53,460
no difference in doing it I think the

00:47:51,810 --> 00:47:55,470
key to me is that you realize that

00:47:53,460 --> 00:47:56,910
you're working one project isolated and

00:47:55,470 --> 00:47:58,950
you can just keep committing that when

00:47:56,910 --> 00:48:01,980
you actually decide to group something

00:47:58,950 --> 00:48:03,190
you need to update hashes and then you

00:48:01,980 --> 00:48:07,480
get push

00:48:03,190 --> 00:48:09,339
and it's about using that word flow a

00:48:07,480 --> 00:48:11,859
couple of times sitting next to somebody

00:48:09,339 --> 00:48:15,579
explaining the workflow and once they

00:48:11,859 --> 00:48:17,829
seen how the get sub module actually is

00:48:15,579 --> 00:48:19,869
a pointer to another project which they

00:48:17,829 --> 00:48:23,740
have control over they usually get the

00:48:19,869 --> 00:48:25,180
point we've seen the location where

00:48:23,740 --> 00:48:29,170
people don't update their sub modules

00:48:25,180 --> 00:48:30,130
and where people are while getting to a

00:48:29,170 --> 00:48:34,780
point where their branches are

00:48:30,130 --> 00:48:39,190
completely this joint but we see that

00:48:34,780 --> 00:48:40,420
with the regular get usage also maybe we

00:48:39,190 --> 00:48:41,890
should sit down together and figure out

00:48:40,420 --> 00:48:44,440
what your problem is and why people

00:48:41,890 --> 00:48:46,660
don't like it sub modules but to me this

00:48:44,440 --> 00:48:49,420
is one of the things that once I

00:48:46,660 --> 00:48:50,740
understood that workflow it made me

00:48:49,420 --> 00:48:53,650
forget all the other things I mean

00:48:50,740 --> 00:48:55,480
compared is to get to subversion tagging

00:48:53,650 --> 00:48:57,339
and tagging on all projects and creating

00:48:55,480 --> 00:49:00,099
scripts that did it plus one tag on all

00:48:57,339 --> 00:49:01,900
the things because we we were writing we

00:49:00,099 --> 00:49:04,630
were increasing the tag numbers and all

00:49:01,900 --> 00:49:06,609
that stuff and that just didn't work I

00:49:04,630 --> 00:49:08,589
mean taking an abstraction layer and

00:49:06,609 --> 00:49:10,119
moving the same concert because it's

00:49:08,589 --> 00:49:12,760
pretty much the same concepts into

00:49:10,119 --> 00:49:15,490
public library on our 10k I can see the

00:49:12,760 --> 00:49:17,650
point in doing that but if you have

00:49:15,490 --> 00:49:19,480
multiple tools you need to support you

00:49:17,650 --> 00:49:22,859
need to figure out the same pattern for

00:49:19,480 --> 00:49:28,569
another tool that is basically my point

00:49:22,859 --> 00:49:31,390
if only thing you do is using librarian

00:49:28,569 --> 00:49:33,790
and it works for all the tools you have

00:49:31,390 --> 00:49:37,359
to support by all means use librarian

00:49:33,790 --> 00:49:39,490
because it might be less scary than get

00:49:37,359 --> 00:49:41,710
sub modules but if you also need to

00:49:39,490 --> 00:49:44,020
manage a Java project and you also need

00:49:41,710 --> 00:49:47,619
to manage a symphony project and you

00:49:44,020 --> 00:49:51,220
need to figure out another way of doing

00:49:47,619 --> 00:49:52,599
the same work with different tools you

00:49:51,220 --> 00:49:53,740
might actually buy true and say hey

00:49:52,599 --> 00:49:55,150
let's do it with sub modules because

00:49:53,740 --> 00:49:57,460
that's going to work for everybody and

00:49:55,150 --> 00:49:59,140
we can actually put the whole team

00:49:57,460 --> 00:50:01,210
developers and operations people to get

00:49:59,140 --> 00:50:08,109
a renter and say guys this is how get

00:50:01,210 --> 00:50:10,390
sub modules work does that make sense I

00:50:08,109 --> 00:50:13,119
think so what I just took from that is

00:50:10,390 --> 00:50:16,300
you should you should not view your

00:50:13,119 --> 00:50:16,780
project as okay we used sub modules and

00:50:16,300 --> 00:50:19,720
now we

00:50:16,780 --> 00:50:22,000
this large tree that that is not just

00:50:19,720 --> 00:50:25,090
one git repo but multiple repos but

00:50:22,000 --> 00:50:27,310
instead you you say ok you we've got

00:50:25,090 --> 00:50:30,630
several things that have dependencies

00:50:27,310 --> 00:50:34,000
and we we have links to these

00:50:30,630 --> 00:50:36,460
dependencies but that's all that is it's

00:50:34,000 --> 00:50:39,040
not magic and it's not like a large tree

00:50:36,460 --> 00:50:43,600
that manages itself it's it's just just

00:50:39,040 --> 00:50:50,110
logic yeah cool see you got it it's not

00:50:43,600 --> 00:50:58,270
that hard apparently I mean yeah more

00:50:50,110 --> 00:51:00,700
questions isn't this more of a problem

00:50:58,270 --> 00:51:02,020
with the tools you're consuming that

00:51:00,700 --> 00:51:04,210
they're not doing enough release

00:51:02,020 --> 00:51:05,260
engineering such that everybody that

00:51:04,210 --> 00:51:07,000
wants to use a bunch of the tools

00:51:05,260 --> 00:51:12,430
together has to delete their own release

00:51:07,000 --> 00:51:15,060
engineering of it um should I bring up

00:51:12,430 --> 00:51:17,560
my slides which I used to open the

00:51:15,060 --> 00:51:19,120
distribution room at folsom which was

00:51:17,560 --> 00:51:20,560
basically that topic yeah so the

00:51:19,120 --> 00:51:24,790
languages tried to reinvent their own

00:51:20,560 --> 00:51:26,530
tools the developers don't talk to each

00:51:24,790 --> 00:51:27,970
other and figure out hey we need to do

00:51:26,530 --> 00:51:30,460
this and never look at what's on the

00:51:27,970 --> 00:51:31,930
other side yes they might be open source

00:51:30,460 --> 00:51:33,970
communities but I don't look at what the

00:51:31,930 --> 00:51:35,980
other communities are doing I mean one

00:51:33,970 --> 00:51:37,390
up one of the best feedback I got I

00:51:35,980 --> 00:51:46,210
think it was actually during don't start

00:51:37,390 --> 00:51:48,340
at foss UK was wears white belt where is

00:51:46,210 --> 00:51:49,990
he still here yet I'm Colin Colin

00:51:48,340 --> 00:51:51,310
actually said look at what you did with

00:51:49,990 --> 00:51:52,930
conflict management camp you brought

00:51:51,310 --> 00:51:56,710
together all the different communities

00:51:52,930 --> 00:51:58,390
so they killed talked we kind of did the

00:51:56,710 --> 00:52:00,370
same way to my sequel community couple

00:51:58,390 --> 00:52:01,360
of years ago when we had open DB camp we

00:52:00,370 --> 00:52:02,560
were bringing together all the different

00:52:01,360 --> 00:52:06,340
communities so they could learn from

00:52:02,560 --> 00:52:08,020
each other and in languages you don't

00:52:06,340 --> 00:52:10,540
see that there's drupalcon well actually

00:52:08,020 --> 00:52:12,220
drupal kind of is merging more together

00:52:10,540 --> 00:52:13,900
with a symphony community but there's

00:52:12,220 --> 00:52:16,060
the Python community they figured out

00:52:13,900 --> 00:52:18,450
they way of doing stuff there's the java

00:52:16,060 --> 00:52:20,860
community they figured out something and

00:52:18,450 --> 00:52:24,130
they're all trying to reinvent the same

00:52:20,860 --> 00:52:27,210
release management problem with their

00:52:24,130 --> 00:52:29,760
tooling and it doesn't work for anybody

00:52:27,210 --> 00:52:32,000
so maybe if we all step back to basics

00:52:29,760 --> 00:52:34,380
we can build on one common ground and

00:52:32,000 --> 00:52:37,140
fix get sub modules for all it's worth

00:52:34,380 --> 00:52:40,170
but that's basically what we're trying

00:52:37,140 --> 00:52:43,080
to do put out a project and say this is

00:52:40,170 --> 00:52:45,839
this this together that's what I want to

00:52:43,080 --> 00:52:47,640
release would it make sense do you have

00:52:45,839 --> 00:52:50,700
something like that that wasn't just

00:52:47,640 --> 00:52:52,200
internal maybe yeah so that everybody

00:52:50,700 --> 00:52:55,830
doesn't have to redo that same work over

00:52:52,200 --> 00:52:57,420
and over again the tool we built six

00:52:55,830 --> 00:53:01,369
seven years ago which was the Google

00:52:57,420 --> 00:53:04,170
would force based on subversion tags

00:53:01,369 --> 00:53:06,000
three to four years ago one was kind of

00:53:04,170 --> 00:53:07,530
trying to convince the management of the

00:53:06,000 --> 00:53:09,390
customer to actually release it as open

00:53:07,530 --> 00:53:11,460
source because it was pretty good back

00:53:09,390 --> 00:53:13,650
then and then we started working with

00:53:11,460 --> 00:53:17,190
with sub modules which was like I don't

00:53:13,650 --> 00:53:18,960
need to you I but as I also said a bunch

00:53:17,190 --> 00:53:20,520
of the developers we use stuff like run

00:53:18,960 --> 00:53:23,369
deck because they want the UI and

00:53:20,520 --> 00:53:25,500
managers wants the fancy stuff so maybe

00:53:23,369 --> 00:53:27,180
if there's a shared community who

00:53:25,500 --> 00:53:29,010
figures out how to do that for a couple

00:53:27,180 --> 00:53:31,410
of tools and build something on top of

00:53:29,010 --> 00:53:33,930
that or puts an abstraction layer on top

00:53:31,410 --> 00:53:35,839
of different tools that might definitely

00:53:33,930 --> 00:53:38,400
be an interesting open source project

00:53:35,839 --> 00:53:48,290
have you just reinvented the previously

00:53:38,400 --> 00:53:48,290
ports tree at that point maybe thank you

00:53:48,720 --> 00:53:55,110
I have a question regarding the Chitty

00:53:53,160 --> 00:53:57,150
thing you mentioned are you only using

00:53:55,110 --> 00:53:59,190
it for for collaboration also as a chat

00:53:57,150 --> 00:54:01,590
solution means not as a chat solution we

00:53:59,190 --> 00:54:04,380
have our own I think we're still running

00:54:01,590 --> 00:54:05,940
now we're running the fire now we're

00:54:04,380 --> 00:54:09,630
running the airline based one which

00:54:05,940 --> 00:54:12,120
should a jeopardy we're running a

00:54:09,630 --> 00:54:15,780
jeopardy okay which is talking to our

00:54:12,120 --> 00:54:17,460
internal ldap and actually jitsi part GT

00:54:15,780 --> 00:54:21,300
is completely public has a new

00:54:17,460 --> 00:54:23,430
authentication whatever is that the only

00:54:21,300 --> 00:54:25,530
reason why you're using to tools and of

00:54:23,430 --> 00:54:30,000
cheat seaforth because it's I think the

00:54:25,530 --> 00:54:31,740
main reason it's time we should one of

00:54:30,000 --> 00:54:32,970
the things we should do is actually

00:54:31,740 --> 00:54:35,040
we've got a digital asset management

00:54:32,970 --> 00:54:37,200
platform and what we do want to do is

00:54:35,040 --> 00:54:39,750
automatically record all our internal

00:54:37,200 --> 00:54:41,390
meetings and put them in a store so we

00:54:39,750 --> 00:54:43,590
can transcribe them and all that stuff

00:54:41,390 --> 00:54:45,360
we want to hook it up to our internal

00:54:43,590 --> 00:54:46,680
ldap we won't have two instances one

00:54:45,360 --> 00:54:48,600
public for meetings with customers and

00:54:46,680 --> 00:54:50,130
the community stuff and one for internal

00:54:48,600 --> 00:54:53,310
meeting the basically currently now we

00:54:50,130 --> 00:54:55,190
have two running there is one which we

00:54:53,310 --> 00:54:57,690
use internally the other publicly and

00:54:55,190 --> 00:55:00,930
there's no user management whatsoever

00:54:57,690 --> 00:55:03,590
yet okay that's basically time

00:55:00,930 --> 00:55:03,590
constraints

00:55:15,080 --> 00:55:26,430
yeah okay yeah okay okay we go through

00:55:23,640 --> 00:55:28,850
thank you again Chris for a great talk

00:55:26,430 --> 00:55:28,850

YouTube URL: https://www.youtube.com/watch?v=KLkTsCX1cLY


