Title: OSDC 2016: Hybrid Cloud - A Cloud Migration Strategy by Schlomo Schapiro
Publication date: 2016-05-04
Playlist: OSDC 2016 | Open Source Data Center Conference
Description: 
	Do you use Cloud? Why? What about the 15 year legacy of your data center? How many Enterprise vendors tried to sell you their "Hybrid Cloud" solution? What actually is a Hybrid Cloud?

Cloud computing is not just a new way of running servers or Docker containers. The interesting part of any Cloud offering are managed services that provide solutions to difficult problems. Prime examples are messaging (SNS/SQS), distributed storage (S3), managed databases (RDS) and especially turn-key solutions like managed Hadoop (EMR).

Hybrid Cloud is usually understood as a way to unify or standardize server hosting across private data centers and Public Cloud vendors. Some Hybrid Cloud solutions even go as far as providing a unified API that abstracts away all the differences between different platforms. Unfortunately that approach focuses on the lowest common denominator and effectively prevents using the advanced services that each Cloud vendor also offers. However, these services are the true value of Public Cloud vendors.

Another approach to integrating Public Cloud and private data centers is using services from both worlds depending on the problems to solve. Don't hide the cloud technologies but make it simple to use them - both from within the data center and the cloud instances. Create a bridge between the old world of the data center and the new world of the Public Cloud. A good bridge will motivate your developers to move the company to the cloud.

Based upon recent developments at ImmobilienScout24, this talk tries to suggest a sustainable Cloud migration strategy from private data centers through a Hybrid Cloud into the AWS Cloud.

Bridging the security model of the data center with the security model of AWS.
Integrating the AWS identity management (IAM) with the existing servers in the data center.
Secure communication between services running in the data center and in AWS.
Deploying data center servers and Cloud resources together.
Service discovery for services running both in the data center and AWS.
Most of the tools used are Open Source and this talk will show how they come together to support this strategy:

AWS credential provider for employees and data center servers: http://immobilienscout24.github.io/afp/ 
Cloud Formation automation: https://github.com/ImmobilienScout24/cfn-sphere 
Compliancy with European privacy laws: https://github.com/ImmobilienScout24/aws-monocyte
Captions: 
	00:00:11,750 --> 00:00:17,369
ok ladies and gentlemen welcome for the

00:00:14,639 --> 00:00:19,710
second tone of today we are starting now

00:00:17,369 --> 00:00:23,880
with Shroomish of Hiro I hope I've

00:00:19,710 --> 00:00:27,570
pronounced it correctly and let's start

00:00:23,880 --> 00:00:30,240
with not migration strategy good morning

00:00:27,570 --> 00:00:33,449
you might be wondering why I stand here

00:00:30,240 --> 00:00:36,420
and talk to you about the cloud at a

00:00:33,449 --> 00:00:40,230
data center conference the reason is

00:00:36,420 --> 00:00:43,589
simple I believe that the cloud is here

00:00:40,230 --> 00:00:45,379
and it won't go away so no matter what

00:00:43,589 --> 00:00:48,299
you do and what kind of business you run

00:00:45,379 --> 00:00:50,820
you at least have to face the cloud and

00:00:48,299 --> 00:00:52,500
think about how to do business in the

00:00:50,820 --> 00:00:54,629
cloud or why not to do business in the

00:00:52,500 --> 00:00:58,350
cloud and you need to have the right

00:00:54,629 --> 00:01:00,900
answers for your bosses for your budget

00:00:58,350 --> 00:01:03,080
owners as to why you still run an

00:01:00,900 --> 00:01:05,670
expensive data center where while

00:01:03,080 --> 00:01:09,750
computing costs next to nothing in the

00:01:05,670 --> 00:01:11,729
cloud on the other hand maybe you want

00:01:09,750 --> 00:01:13,799
to get rid of your data center and then

00:01:11,729 --> 00:01:17,210
I can show you a way how you can achieve

00:01:13,799 --> 00:01:19,770
that as well or you realize that all

00:01:17,210 --> 00:01:22,230
extremist opinions are actually flawed

00:01:19,770 --> 00:01:24,210
and you simply want to find the right

00:01:22,230 --> 00:01:26,280
balance between cloud and data center

00:01:24,210 --> 00:01:29,460
and that's actually what this talk is

00:01:26,280 --> 00:01:31,200
about if you remember my previous talks

00:01:29,460 --> 00:01:33,060
at this conference they were about rpm

00:01:31,200 --> 00:01:35,790
and packaging and how to run your data

00:01:33,060 --> 00:01:39,150
center very professionally we're still

00:01:35,790 --> 00:01:40,860
doing that it just works well and the

00:01:39,150 --> 00:01:44,159
fact that our data center runs well

00:01:40,860 --> 00:01:47,130
actually gave us the Headroom to build

00:01:44,159 --> 00:01:49,470
our new cloud cloud platform at the end

00:01:47,130 --> 00:01:52,050
I also share with you some tools which

00:01:49,470 --> 00:01:54,479
you can use which are github and I hope

00:01:52,050 --> 00:01:57,390
they will be useful to you but this talk

00:01:54,479 --> 00:01:59,940
is more about ideas concepts and

00:01:57,390 --> 00:02:02,070
architecture and also a little bit about

00:01:59,940 --> 00:02:08,399
the business and not only about the

00:02:02,070 --> 00:02:14,580
tools so who uses the cloud any cloud

00:02:08,399 --> 00:02:17,099
already ok who would leave his company

00:02:14,580 --> 00:02:20,120
if somebody would decide that the

00:02:17,099 --> 00:02:20,120
business goes to the cloud

00:02:21,720 --> 00:02:32,670
well so are you sure that's a good

00:02:26,070 --> 00:02:36,360
choice ah okay so that's the goal right

00:02:32,670 --> 00:02:37,440
half our data center in the cloud don't

00:02:36,360 --> 00:02:41,430
need to get up at night any more

00:02:37,440 --> 00:02:43,650
hopefully actually our goal is a

00:02:41,430 --> 00:02:47,660
completely different goal as a mobile

00:02:43,650 --> 00:02:50,760
Scout we make money through technology

00:02:47,660 --> 00:02:53,430
but technology is just a means to help

00:02:50,760 --> 00:02:56,190
our business so going to the cloud for

00:02:53,430 --> 00:02:58,080
us means going to a world where

00:02:56,190 --> 00:03:00,570
innovation happens on its own and we can

00:02:58,080 --> 00:03:02,760
just benefit from that instead of

00:03:00,570 --> 00:03:05,610
inventing our own wheels over and over

00:03:02,760 --> 00:03:07,410
again and that's the main motivation for

00:03:05,610 --> 00:03:10,170
going to the cloud it's not financial

00:03:07,410 --> 00:03:17,310
it's not the cloud is pool it's much

00:03:10,170 --> 00:03:19,380
more let's achieve more with less so the

00:03:17,310 --> 00:03:21,300
cloud migration your manager stands in

00:03:19,380 --> 00:03:23,310
front of your desk and says I read in

00:03:21,300 --> 00:03:25,410
computer build that there's now this

00:03:23,310 --> 00:03:28,920
cloud thingy and it's all cool and let's

00:03:25,410 --> 00:03:33,209
do that and you look at him and above

00:03:28,920 --> 00:03:36,959
his head you see this a plan how to move

00:03:33,209 --> 00:03:39,739
to the cloud right who had this

00:03:36,959 --> 00:03:39,739
experience already

00:03:40,880 --> 00:03:45,840
I'm so sorry you'll have to spoil that

00:03:43,890 --> 00:03:49,709
vision it doesn't work like that

00:03:45,840 --> 00:03:53,160
and here's why okay use this picture

00:03:49,709 --> 00:03:56,040
don't say anything but in fact just ask

00:03:53,160 --> 00:03:57,750
about stuff like the timeline how long

00:03:56,040 --> 00:04:01,920
do you think it will take us to go to

00:03:57,750 --> 00:04:04,440
the cloud or how will we play security

00:04:01,920 --> 00:04:06,000
and resilience in the cloud we have a

00:04:04,440 --> 00:04:08,430
data center now we know how to do this

00:04:06,000 --> 00:04:11,250
stuff in the data center in the cloud it

00:04:08,430 --> 00:04:13,680
all works different how and when will we

00:04:11,250 --> 00:04:17,880
learn how to engineer our applications

00:04:13,680 --> 00:04:20,459
and services for the cloud and last of

00:04:17,880 --> 00:04:23,520
course but not least the budget how much

00:04:20,459 --> 00:04:25,620
can it cost how much will it cost if you

00:04:23,520 --> 00:04:27,450
tell your manager that the cloud is

00:04:25,620 --> 00:04:31,080
twice as expensive as the data center

00:04:27,450 --> 00:04:33,330
he'll ask you why if you say it's cost

00:04:31,080 --> 00:04:34,460
only half is that what you pay in the

00:04:33,330 --> 00:04:37,759
data center

00:04:34,460 --> 00:04:40,069
also ask you why because one case you

00:04:37,759 --> 00:04:41,690
maybe blow it out of proportion the

00:04:40,069 --> 00:04:44,630
other case maybe you know too expensive

00:04:41,690 --> 00:04:46,370
right now so no way how it goes you lose

00:04:44,630 --> 00:04:49,729
actually as long as you don't have the

00:04:46,370 --> 00:04:52,180
right answers so the interesting part is

00:04:49,729 --> 00:04:57,229
actually time and money

00:04:52,180 --> 00:04:59,210
this is a typical budget plan for data

00:04:57,229 --> 00:05:02,990
center heavily simplified for this

00:04:59,210 --> 00:05:05,180
conference where you have blocks that

00:05:02,990 --> 00:05:08,900
typically happen in a range of three to

00:05:05,180 --> 00:05:11,539
five years and each block is like

00:05:08,900 --> 00:05:14,509
something expensive like central storage

00:05:11,539 --> 00:05:16,849
1 million euro server hardware another

00:05:14,509 --> 00:05:18,590
million euro the course which is

00:05:16,849 --> 00:05:21,259
networking and stuff another million

00:05:18,590 --> 00:05:23,150
euro and so on and all that is bought on

00:05:21,259 --> 00:05:25,880
a regular base with off over three to

00:05:23,150 --> 00:05:28,159
five years and then bought again so in

00:05:25,880 --> 00:05:31,460
the end you have some kind of a budget

00:05:28,159 --> 00:05:34,039
curve over the years that represent the

00:05:31,460 --> 00:05:36,139
investment into your data center and one

00:05:34,039 --> 00:05:39,860
problem is this is capital expense

00:05:36,139 --> 00:05:43,400
that's investment and if you go to the

00:05:39,860 --> 00:05:45,590
cloud it looks different in the cloud

00:05:43,400 --> 00:05:46,669
you have operational expenses and there

00:05:45,590 --> 00:05:48,979
are some tricks to turn that into

00:05:46,669 --> 00:05:50,750
capital expenses but trust me they're

00:05:48,979 --> 00:05:53,090
tricks and it's a lot of work to get

00:05:50,750 --> 00:05:56,000
them done so let's say you start moving

00:05:53,090 --> 00:05:58,539
to the cloud in the first year you start

00:05:56,000 --> 00:06:01,639
obviously with nothing and move on and

00:05:58,539 --> 00:06:04,940
then happens something we call the

00:06:01,639 --> 00:06:08,870
miracle cloud is cool and your costs

00:06:04,940 --> 00:06:11,300
explode and then in the next year you

00:06:08,870 --> 00:06:13,880
tell your engineers to event this little

00:06:11,300 --> 00:06:17,330
device and they hope this off in you

00:06:13,880 --> 00:06:19,190
hope that this will solve the problem or

00:06:17,330 --> 00:06:21,680
your engineers tell you that it won't

00:06:19,190 --> 00:06:23,270
work this way and then you come to this

00:06:21,680 --> 00:06:26,330
kind of idea okay

00:06:23,270 --> 00:06:29,419
let's reduce costs in the datacenter to

00:06:26,330 --> 00:06:31,639
free a budget for the cloud and let's

00:06:29,419 --> 00:06:34,849
make a cloud migration that will somehow

00:06:31,639 --> 00:06:37,639
balance those two processes data center

00:06:34,849 --> 00:06:42,580
cost going down cloud cost going up so

00:06:37,639 --> 00:06:45,770
that the total cost won't explode and

00:06:42,580 --> 00:06:47,510
actually as a business owner I want the

00:06:45,770 --> 00:06:49,730
total cost to go down

00:06:47,510 --> 00:06:52,460
so I'm ready now to invest into the

00:06:49,730 --> 00:06:55,730
cloud migration in order to get future

00:06:52,460 --> 00:06:57,980
savings and some eventual return of

00:06:55,730 --> 00:07:01,400
invest on my investment into the cloud

00:06:57,980 --> 00:07:02,900
migration and that's what we did at the

00:07:01,400 --> 00:07:04,910
Milvian Scott we actually started by

00:07:02,900 --> 00:07:08,720
writing a business plan that looked

00:07:04,910 --> 00:07:11,990
approximately like that and for saw a

00:07:08,720 --> 00:07:14,960
cloud migration over several years with

00:07:11,990 --> 00:07:17,510
an eventual return of invest after don't

00:07:14,960 --> 00:07:22,310
remember something like seven or ten

00:07:17,510 --> 00:07:22,790
years and that was the first chukker so

00:07:22,310 --> 00:07:26,030
okay

00:07:22,790 --> 00:07:30,680
cloud is cool but actually you don't go

00:07:26,030 --> 00:07:34,010
to the cloud to really save money you go

00:07:30,680 --> 00:07:36,770
to the cloud to do more with less you go

00:07:34,010 --> 00:07:39,140
to the cloud to be faster and to stop

00:07:36,770 --> 00:07:42,130
inventing stuff that exists already and

00:07:39,140 --> 00:07:44,210
that was a very big lesson for me when I

00:07:42,130 --> 00:07:46,570
started to really understand what's

00:07:44,210 --> 00:07:49,550
going on with cloud datacenter

00:07:46,570 --> 00:07:51,080
and that's actually the reason why I

00:07:49,550 --> 00:07:53,390
believe that in ten years from now

00:07:51,080 --> 00:07:57,770
data centers will be something of a

00:07:53,390 --> 00:07:59,990
specialty just because everybody has the

00:07:57,770 --> 00:08:03,770
problem that they need to do more with

00:07:59,990 --> 00:08:06,680
less more services with less people more

00:08:03,770 --> 00:08:10,310
features and less time and so on so you

00:08:06,680 --> 00:08:12,830
can't do that while you still dig your

00:08:10,310 --> 00:08:14,930
own coals and mind your own metals and

00:08:12,830 --> 00:08:17,600
build your own tools and everything if

00:08:14,930 --> 00:08:19,570
you want to build a car you buy all that

00:08:17,600 --> 00:08:22,850
ready-made and then you build your car

00:08:19,570 --> 00:08:25,180
same god IT and especially Web IT where

00:08:22,850 --> 00:08:25,180
I work now

00:08:25,570 --> 00:08:29,300
the question is and that's something you

00:08:28,010 --> 00:08:31,430
have to find out for yourself how many

00:08:29,300 --> 00:08:34,460
use does that take how long is this

00:08:31,430 --> 00:08:38,050
process and that's really a business

00:08:34,460 --> 00:08:41,030
decision not a tech decision you as

00:08:38,050 --> 00:08:43,250
technicians as engineers can make that

00:08:41,030 --> 00:08:45,740
happen very quickly you'd love to make

00:08:43,250 --> 00:08:47,750
that happen quickly nothing is greater

00:08:45,740 --> 00:08:49,250
than a three-month rush to the cloud

00:08:47,750 --> 00:08:51,700
where you work day and night and then

00:08:49,250 --> 00:08:53,750
you pulled it off and everything is cool

00:08:51,700 --> 00:08:57,160
but your business won't like that

00:08:53,750 --> 00:08:57,160
because it's way too expensive

00:08:57,579 --> 00:09:03,319
let's look a little bit at engineering

00:09:00,230 --> 00:09:05,899
questions that arise and the stuff I'll

00:09:03,319 --> 00:09:07,970
show you now is basically stuff that I

00:09:05,899 --> 00:09:10,629
learned over the last two years and I'm

00:09:07,970 --> 00:09:13,910
happy to share some experiences with you

00:09:10,629 --> 00:09:16,339
so please keep this in mind print it out

00:09:13,910 --> 00:09:16,970
hang it over your desk whatever keep it

00:09:16,339 --> 00:09:20,149
in mind

00:09:16,970 --> 00:09:21,949
cloud means scale out if you do

00:09:20,149 --> 00:09:25,790
something in the cloud that does not

00:09:21,949 --> 00:09:29,389
scale out it will fail and it will fail

00:09:25,790 --> 00:09:31,310
when you don't expect it we don't need

00:09:29,389 --> 00:09:34,040
to talk about DevOps anymore so the

00:09:31,310 --> 00:09:37,040
essence is automate or die those who

00:09:34,040 --> 00:09:40,879
don't automate will die out that's just

00:09:37,040 --> 00:09:44,000
natural evolution if you automate please

00:09:40,879 --> 00:09:45,560
do test-driven development and actually

00:09:44,000 --> 00:09:49,189
you can't do test-driven development

00:09:45,560 --> 00:09:50,870
without a really good automation because

00:09:49,189 --> 00:09:52,430
if you code everything if you call the

00:09:50,870 --> 00:09:54,709
infrastructure then you can also write

00:09:52,430 --> 00:09:56,839
tests for that and then you can make a

00:09:54,709 --> 00:09:59,930
change and just see how it rolls through

00:09:56,839 --> 00:10:01,850
your platform without any worries and in

00:09:59,930 --> 00:10:04,040
the cloud even more than in the data

00:10:01,850 --> 00:10:06,079
center everything will fail Amazon

00:10:04,040 --> 00:10:10,459
actually guarantees you that components

00:10:06,079 --> 00:10:12,889
will fail yeah it's just a fact and if

00:10:10,459 --> 00:10:14,959
you don't build for failing components

00:10:12,889 --> 00:10:17,269
then they will fail when it doesn't fit

00:10:14,959 --> 00:10:18,910
your plan for example when you sit in

00:10:17,269 --> 00:10:22,399
the cinema for your wedding anniversary

00:10:18,910 --> 00:10:27,769
then it will fail because that's just

00:10:22,399 --> 00:10:30,709
how this so let's move to the cloud

00:10:27,769 --> 00:10:34,910
right we have a data center and a

00:10:30,709 --> 00:10:42,350
migration plan and a cloud right who is

00:10:34,910 --> 00:10:45,730
doing that startups okay well does it

00:10:42,350 --> 00:10:49,790
scale is any scale in this picture

00:10:45,730 --> 00:10:51,790
where's the scale exactly there's no

00:10:49,790 --> 00:10:56,720
scale okay let's move to two clouds

00:10:51,790 --> 00:10:59,089
right still scale no this is scale if

00:10:56,720 --> 00:11:01,009
you move to the cloud I believe that you

00:10:59,089 --> 00:11:03,379
will be moving to many clouds and you'll

00:11:01,009 --> 00:11:05,600
be moving from one data center to lots

00:11:03,379 --> 00:11:08,870
of data centers they won't be in Scout

00:11:05,600 --> 00:11:11,070
we now have something like 50 data

00:11:08,870 --> 00:11:15,060
centers I actually didn't count

00:11:11,070 --> 00:11:18,660
anymore because we create AWS accounts

00:11:15,060 --> 00:11:20,790
for everybody who needs one and each AWS

00:11:18,660 --> 00:11:22,800
account is like it's complete own data

00:11:20,790 --> 00:11:25,110
center it's actually a multitude of data

00:11:22,800 --> 00:11:27,000
centers because the closest thing that

00:11:25,110 --> 00:11:30,660
you can compare with a physical data

00:11:27,000 --> 00:11:32,280
center is a V PC in Amazon and if you

00:11:30,660 --> 00:11:35,700
have multiple V pcs then you already

00:11:32,280 --> 00:11:38,280
have multiple data centers we actually

00:11:35,700 --> 00:11:40,290
have two physical data centers but in

00:11:38,280 --> 00:11:41,820
the cloud will be having fifty or

00:11:40,290 --> 00:11:45,030
hundred or maybe two hundred and maybe

00:11:41,820 --> 00:11:47,100
thousands we don't know but we built our

00:11:45,030 --> 00:11:49,200
tooling so that it doesn't matter and

00:11:47,100 --> 00:11:51,330
that's the thing about cloud you always

00:11:49,200 --> 00:11:54,750
have to scale out no matter what you do

00:11:51,330 --> 00:11:56,670
think about scale scale at every level

00:11:54,750 --> 00:11:58,860
if you want to know more about that look

00:11:56,670 --> 00:12:01,050
at the stuff that these Alando people

00:11:58,860 --> 00:12:01,500
are doing they really scale at every

00:12:01,050 --> 00:12:04,530
level

00:12:01,500 --> 00:12:07,080
they'll scale people teams technology

00:12:04,530 --> 00:12:09,510
everything and they understood why they

00:12:07,080 --> 00:12:11,310
need to scale at every level to meet

00:12:09,510 --> 00:12:15,960
their business demands which is extreme

00:12:11,310 --> 00:12:18,900
growth it actually doesn't matter how

00:12:15,960 --> 00:12:20,640
you purpose those multiple accounts it's

00:12:18,900 --> 00:12:22,620
possible that you say I have a life

00:12:20,640 --> 00:12:25,740
account of staging in a play account or

00:12:22,620 --> 00:12:28,410
you can say I have business cards where

00:12:25,740 --> 00:12:30,750
you have one business unit that search

00:12:28,410 --> 00:12:32,610
and the other does user management or

00:12:30,750 --> 00:12:34,590
you have team accounts it doesn't matter

00:12:32,610 --> 00:12:36,720
what's important that you have many

00:12:34,590 --> 00:12:40,110
accounts and if you need one argument to

00:12:36,720 --> 00:12:42,440
convince somebody take the following if

00:12:40,110 --> 00:12:46,610
you have everything in one account you

00:12:42,440 --> 00:12:49,460
will fail on Amazon resource limits

00:12:46,610 --> 00:12:52,950
meaning let's say you have everything

00:12:49,460 --> 00:12:56,090
live staging playground production

00:12:52,950 --> 00:12:58,680
whatever in the same account and

00:12:56,090 --> 00:13:00,810
somebody decides I want to see what

00:12:58,680 --> 00:13:03,170
happens if I scale my Hadoop cluster

00:13:00,810 --> 00:13:05,790
from hundred nodes to thousand nodes

00:13:03,170 --> 00:13:09,090
Amazon will be happy to oblige and you

00:13:05,790 --> 00:13:11,520
pay for that the problem is that in the

00:13:09,090 --> 00:13:14,640
next minute your production web cluster

00:13:11,520 --> 00:13:16,560
needs another ten instances and it won't

00:13:14,640 --> 00:13:18,870
get them because you hit the Amazon

00:13:16,560 --> 00:13:20,220
resource limit it's always there you can

00:13:18,870 --> 00:13:23,610
actually check with us and you can

00:13:20,220 --> 00:13:24,780
increase the limit by a ticket but

00:13:23,610 --> 00:13:28,140
there's no guarantee

00:13:24,780 --> 00:13:30,660
unless you manage those things that your

00:13:28,140 --> 00:13:32,280
production system systems will get the

00:13:30,660 --> 00:13:35,130
resources they need to automatically

00:13:32,280 --> 00:13:38,960
scale up if you have other stuff running

00:13:35,130 --> 00:13:38,960
in that account which you don't control

00:13:40,880 --> 00:13:46,140
argument for me this is a very big

00:13:43,230 --> 00:13:49,020
argument just containment of all kind of

00:13:46,140 --> 00:13:52,140
risks a breach in one account contained

00:13:49,020 --> 00:13:55,770
within the account resource abuse

00:13:52,140 --> 00:13:58,350
contain it within that account high

00:13:55,770 --> 00:14:00,060
security requirements compliance

00:13:58,350 --> 00:14:03,030
requirements whatever contain it in one

00:14:00,060 --> 00:14:04,980
account contain stuff in accounts to

00:14:03,030 --> 00:14:07,680
make your life easier and to keep things

00:14:04,980 --> 00:14:09,780
under control don't have this big super

00:14:07,680 --> 00:14:11,340
tanker account have a lot of little

00:14:09,780 --> 00:14:17,010
boats that can go quickly in the

00:14:11,340 --> 00:14:21,240
direction that you need there's another

00:14:17,010 --> 00:14:24,930
thing that really wasn't obvious from

00:14:21,240 --> 00:14:27,090
the beginning which is communication in

00:14:24,930 --> 00:14:30,390
the data center you typically have

00:14:27,090 --> 00:14:32,970
something like that which is an enclosed

00:14:30,390 --> 00:14:38,760
space with lots of servers talking to

00:14:32,970 --> 00:14:41,970
each other and you have parameter

00:14:38,760 --> 00:14:44,370
security you have some outside wall that

00:14:41,970 --> 00:14:45,990
protects the data center and that also

00:14:44,370 --> 00:14:47,730
actually protects your office because

00:14:45,990 --> 00:14:49,500
from the office you talk to the data

00:14:47,730 --> 00:14:53,790
center through some kind of a tunnel and

00:14:49,500 --> 00:14:57,120
that is secure in the cloud that changes

00:14:53,790 --> 00:14:59,220
each cloud account is now its own data

00:14:57,120 --> 00:15:01,170
center and if you have services

00:14:59,220 --> 00:15:02,940
communicating between the cloud accounts

00:15:01,170 --> 00:15:06,390
they will do that over the public

00:15:02,940 --> 00:15:12,420
Internet just keep that in mind this is

00:15:06,390 --> 00:15:15,240
a fundamental change for example you

00:15:12,420 --> 00:15:16,830
have a different kind of latency in your

00:15:15,240 --> 00:15:20,250
own data center you have local area

00:15:16,830 --> 00:15:21,930
network latency in the cloud even

00:15:20,250 --> 00:15:26,580
between accounts running in the same

00:15:21,930 --> 00:15:28,800
region on Amazon you have medium latency

00:15:26,580 --> 00:15:31,200
you don't you don't yet have high

00:15:28,800 --> 00:15:34,020
latency like going to another continent

00:15:31,200 --> 00:15:35,790
or country but you have medium latency

00:15:34,020 --> 00:15:37,880
and you don't have the low latency

00:15:35,790 --> 00:15:41,450
guarantee that you used from the

00:15:37,880 --> 00:15:44,240
Center keep that in mind also you need

00:15:41,450 --> 00:15:46,550
back doors for admin access because you

00:15:44,240 --> 00:15:49,160
don't want everybody to be able to use

00:15:46,550 --> 00:15:50,900
the admin access in the data center you

00:15:49,160 --> 00:15:54,140
have the backdoor because you come from

00:15:50,900 --> 00:15:56,510
behind through your or whatever VPN into

00:15:54,140 --> 00:15:58,910
the data center or you have an office in

00:15:56,510 --> 00:16:01,510
the data center and that's easy in the

00:15:58,910 --> 00:16:04,160
cloud you have to do something for that

00:16:01,510 --> 00:16:06,530
keep those things in mind that change

00:16:04,160 --> 00:16:08,840
the way how you do your IT in a

00:16:06,530 --> 00:16:11,350
fundamental way and that's not obvious

00:16:08,840 --> 00:16:14,170
from the beginning paint pictures

00:16:11,350 --> 00:16:17,270
visualize where you put the components

00:16:14,170 --> 00:16:19,310
and if you haven't thought about

00:16:17,270 --> 00:16:22,280
micro-services so far now's the time to

00:16:19,310 --> 00:16:25,850
do that because you can take the same

00:16:22,280 --> 00:16:28,400
picture and write here cloud migration

00:16:25,850 --> 00:16:31,610
or you can write here micro services and

00:16:28,400 --> 00:16:33,740
the picture is correct some while ago

00:16:31,610 --> 00:16:36,560
that was the micro-services meet our

00:16:33,740 --> 00:16:38,720
conference here in berlin and they're

00:16:36,560 --> 00:16:40,910
interesting for me to see how all the

00:16:38,720 --> 00:16:43,280
micro services people talk now about

00:16:40,910 --> 00:16:46,420
stuff which we talked about for cloud

00:16:43,280 --> 00:16:48,770
migration and I realized that basically

00:16:46,420 --> 00:16:52,250
micro-service conferences are for

00:16:48,770 --> 00:16:55,580
developers and devops confer cloud

00:16:52,250 --> 00:16:57,680
conferences are for ops people but this

00:16:55,580 --> 00:16:59,180
structure change they talk about is the

00:16:57,680 --> 00:17:02,000
same and that's that you go from one

00:16:59,180 --> 00:17:04,010
monolith to many smaller units and this

00:17:02,000 --> 00:17:06,050
same pattern repeats itself over and

00:17:04,010 --> 00:17:08,360
over at different scales at the large

00:17:06,050 --> 00:17:10,189
scale and at the small scale the pattern

00:17:08,360 --> 00:17:12,530
is the same we build smaller units from

00:17:10,189 --> 00:17:14,420
larger ones and then we start to pay

00:17:12,530 --> 00:17:17,150
attention to communication and cost and

00:17:14,420 --> 00:17:23,390
orchestration which start to be a major

00:17:17,150 --> 00:17:26,990
part of the solution and finally please

00:17:23,390 --> 00:17:30,380
automate your stuff the era of doing

00:17:26,990 --> 00:17:31,730
things manually is over and I don't know

00:17:30,380 --> 00:17:34,310
what you want to give your kids as a

00:17:31,730 --> 00:17:36,710
legacy but please don't teach them how

00:17:34,310 --> 00:17:42,050
to do stuff manually teach them how to

00:17:36,710 --> 00:17:44,950
automate why is that important if you

00:17:42,050 --> 00:17:46,790
look at the typical data center stack

00:17:44,950 --> 00:17:48,650
simplify it

00:17:46,790 --> 00:17:50,690
starting from hardware networking stores

00:17:48,650 --> 00:17:53,110
in the bottom and going for application

00:17:50,690 --> 00:17:56,690
configuration to the load balancer then

00:17:53,110 --> 00:18:00,980
the typical degree of automation looks

00:17:56,690 --> 00:18:03,830
like that in the bottom you have very

00:18:00,980 --> 00:18:05,780
little automation and nobody has a robot

00:18:03,830 --> 00:18:10,040
that plugs hardware into the racket

00:18:05,780 --> 00:18:12,230
maybe Google does but we don't most

00:18:10,040 --> 00:18:14,050
people have solid automation for

00:18:12,230 --> 00:18:16,460
configuration and for the application

00:18:14,050 --> 00:18:18,680
some have solid automation for the

00:18:16,460 --> 00:18:22,790
operating system if you've seen my

00:18:18,680 --> 00:18:25,250
previous talks and actually amazingly

00:18:22,790 --> 00:18:27,920
few people have little to no automation

00:18:25,250 --> 00:18:33,440
for stuff like load balancer DNS and

00:18:27,920 --> 00:18:35,330
other front facing technologies and for

00:18:33,440 --> 00:18:36,860
the data center that works because you

00:18:35,330 --> 00:18:39,140
can still count the unit's you have

00:18:36,860 --> 00:18:41,540
there it's still kind of manageable and

00:18:39,140 --> 00:18:45,290
maybe the effort to automate all that is

00:18:41,540 --> 00:18:47,450
not worth the benefit actually that was

00:18:45,290 --> 00:18:49,640
part of our motivation to look at the

00:18:47,450 --> 00:18:53,150
cloud that we realized after automating

00:18:49,640 --> 00:18:55,220
all that automating all that stuff will

00:18:53,150 --> 00:18:58,010
be way too expensive for a company like

00:18:55,220 --> 00:19:00,160
an Indian scout so if you look at the

00:18:58,010 --> 00:19:03,500
cloud the picture looks different you

00:19:00,160 --> 00:19:06,260
still have the same things but you have

00:19:03,500 --> 00:19:07,790
a uniform way of automating them with

00:19:06,260 --> 00:19:10,340
something for example called cloud

00:19:07,790 --> 00:19:12,290
formation in Amazon terraform in others

00:19:10,340 --> 00:19:14,240
or whatever everybody has that now

00:19:12,290 --> 00:19:17,210
yesterday there was a nice talk about

00:19:14,240 --> 00:19:19,840
that and in addition to the traditional

00:19:17,210 --> 00:19:22,130
data center services you have also more

00:19:19,840 --> 00:19:25,310
services that are part of the same

00:19:22,130 --> 00:19:27,740
automation and all that is actually just

00:19:25,310 --> 00:19:28,910
coat if you use cloud formation then you

00:19:27,740 --> 00:19:31,840
have one large

00:19:28,910 --> 00:19:35,480
J'son file which is code in this case

00:19:31,840 --> 00:19:37,700
describing the entire environment so you

00:19:35,480 --> 00:19:41,000
must actually do infrastructure as code

00:19:37,700 --> 00:19:43,840
and you must automate that because if

00:19:41,000 --> 00:19:46,160
you don't you'll be afraid to change it

00:19:43,840 --> 00:19:50,230
and if you're afraid to change it you'll

00:19:46,160 --> 00:19:50,230
be stuck and you won't progress anymore

00:19:51,270 --> 00:19:58,470
the next thing we have to think about is

00:19:53,280 --> 00:20:00,660
resilience resilience is for me simply

00:19:58,470 --> 00:20:02,580
this thingy here which is how doesn't

00:20:00,660 --> 00:20:05,820
matter how you push it it stands up

00:20:02,580 --> 00:20:08,010
again that's resilience for me I want to

00:20:05,820 --> 00:20:10,380
be my data center or my services so that

00:20:08,010 --> 00:20:13,350
no matter who kicks them who hits them

00:20:10,380 --> 00:20:15,870
what uses them a little bit later they

00:20:13,350 --> 00:20:21,240
will stand again and continue to do that

00:20:15,870 --> 00:20:23,700
job so for those of you who already do

00:20:21,240 --> 00:20:27,320
stuff in the cloud here is a very

00:20:23,700 --> 00:20:30,830
typical example of a standard textbook

00:20:27,320 --> 00:20:34,290
web application in the cloud you have

00:20:30,830 --> 00:20:35,910
the user you have a load balancer you

00:20:34,290 --> 00:20:38,040
have an auto scaling group with a few

00:20:35,910 --> 00:20:40,830
ec2 instances you have some database

00:20:38,040 --> 00:20:44,220
under that which has kind of its own

00:20:40,830 --> 00:20:47,100
shadow copy and the verticals by the way

00:20:44,220 --> 00:20:50,280
are available availability zones just

00:20:47,100 --> 00:20:52,710
imagined and all that is surrounded by V

00:20:50,280 --> 00:20:56,700
PC because it runs in the V PC and all

00:20:52,710 --> 00:20:59,309
that runs in a region and all that is

00:20:56,700 --> 00:21:02,850
set up with one or two cloud formation

00:20:59,309 --> 00:21:06,780
stacks looks familiar

00:21:02,850 --> 00:21:08,750
ooh a few does stuff this way who set up

00:21:06,780 --> 00:21:11,940
stuff like that

00:21:08,750 --> 00:21:15,809
nobody you all do something different

00:21:11,940 --> 00:21:22,590
hey good morning so do you think that

00:21:15,809 --> 00:21:27,870
this is resilient is this a resilient

00:21:22,590 --> 00:21:30,030
setup no why because there's a really

00:21:27,870 --> 00:21:33,840
large amount of single points of failure

00:21:30,030 --> 00:21:36,450
in this setup take the words single

00:21:33,840 --> 00:21:38,340
everything that exists only once in the

00:21:36,450 --> 00:21:41,280
set up is a single point of failure you

00:21:38,340 --> 00:21:46,650
have 1lb you have one V PC you have one

00:21:41,280 --> 00:21:48,000
region you have one RDS thingy it's a

00:21:46,650 --> 00:21:49,530
single point of failure you have one

00:21:48,000 --> 00:21:55,830
CloudFormation template it's a single

00:21:49,530 --> 00:21:57,809
point of failure yes please it's one

00:21:55,830 --> 00:22:00,679
thing e if you miss configure it it's

00:21:57,809 --> 00:22:00,679
broken and you are down

00:22:01,590 --> 00:22:08,610
it's a single point of failure yes it in

00:22:06,210 --> 00:22:12,480
itself has redundancy but this is only

00:22:08,610 --> 00:22:15,450
technical redundancy if you miss

00:22:12,480 --> 00:22:18,150
configure an ec2 instance on the

00:22:15,450 --> 00:22:20,070
opposite the auto scaling group if you

00:22:18,150 --> 00:22:22,860
did it correctly will recognize that the

00:22:20,070 --> 00:22:24,930
ec2 instance is broken and it will stop

00:22:22,860 --> 00:22:29,340
the upgrade and roll back to the

00:22:24,930 --> 00:22:31,800
previous version that's why this setup

00:22:29,340 --> 00:22:34,320
the only thing that is really redundant

00:22:31,800 --> 00:22:36,180
and reliably redundant is the ec2

00:22:34,320 --> 00:22:40,200
instance everything else is a single

00:22:36,180 --> 00:22:42,120
point of failure and in the data center

00:22:40,200 --> 00:22:43,910
we're better than that we have two data

00:22:42,120 --> 00:22:47,730
centers they're completely independent

00:22:43,910 --> 00:22:49,650
they're really to low balances that

00:22:47,730 --> 00:22:52,350
don't share their configuration except

00:22:49,650 --> 00:22:54,360
by copy means if I mess up one load

00:22:52,350 --> 00:22:57,390
balancer the other is not messed up and

00:22:54,360 --> 00:23:00,840
so on so we have more resilience than

00:22:57,390 --> 00:23:02,760
that in our data centers and to get the

00:23:00,840 --> 00:23:06,330
same level of resilience in the cloud

00:23:02,760 --> 00:23:08,280
you have to go the same way you need to

00:23:06,330 --> 00:23:09,350
double everything even if that's totally

00:23:08,280 --> 00:23:11,850
stupid

00:23:09,350 --> 00:23:13,590
but that's how you get resilience in the

00:23:11,850 --> 00:23:16,490
cloud you have multiples of everything

00:23:13,590 --> 00:23:18,750
and you manage that with automation and

00:23:16,490 --> 00:23:21,390
that's really hard that's a lot of work

00:23:18,750 --> 00:23:23,310
don't take it easy it's more work than

00:23:21,390 --> 00:23:25,410
in the data center because you won't be

00:23:23,310 --> 00:23:27,230
doing that manually you'll be automating

00:23:25,410 --> 00:23:30,710
that and you'll need to invent

00:23:27,230 --> 00:23:33,390
frameworks and data models and

00:23:30,710 --> 00:23:37,580
orchestration and whatever to handle a

00:23:33,390 --> 00:23:37,580
rolling upgrade that covers both parts

00:23:39,350 --> 00:23:46,890
what about security I hope that

00:23:43,560 --> 00:23:49,050
everybody now thinks of security as

00:23:46,890 --> 00:23:50,760
something basic and built into

00:23:49,050 --> 00:23:56,750
everything we do and not as something we

00:23:50,760 --> 00:24:01,230
add on later after the first audit so

00:23:56,750 --> 00:24:05,880
security for me is about 60% really

00:24:01,230 --> 00:24:10,170
related to static credentials whose you

00:24:05,880 --> 00:24:12,000
setec credentials okay everybody who

00:24:10,170 --> 00:24:14,280
didn't show his hand didn't understand

00:24:12,000 --> 00:24:15,870
the question what are static credential

00:24:14,280 --> 00:24:19,290
static credentials a credentials that

00:24:15,870 --> 00:24:21,180
don't change he had the key with which

00:24:19,290 --> 00:24:26,040
you open your door at home is a static

00:24:21,180 --> 00:24:28,170
credential it doesn't change your car

00:24:26,040 --> 00:24:30,510
key actually maybe not a static

00:24:28,170 --> 00:24:36,300
credential because the co did since the

00:24:30,510 --> 00:24:39,150
car changes over time so again who's

00:24:36,300 --> 00:24:40,980
using static credentials thank you

00:24:39,150 --> 00:24:43,550
everybody and that's a big problem

00:24:40,980 --> 00:24:46,170
because they're just broken by design

00:24:43,550 --> 00:24:48,810
they come from you know they come from

00:24:46,170 --> 00:24:52,080
the last century it's old stuff Philip

00:24:48,810 --> 00:24:54,690
actually pre IT stuff even

00:24:52,080 --> 00:24:56,490
static credentials they make things easy

00:24:54,690 --> 00:24:59,010
to try out but actually not good for

00:24:56,490 --> 00:25:00,300
production because you don't know when

00:24:59,010 --> 00:25:01,830
they're copied you don't know when they

00:25:00,300 --> 00:25:04,770
used you don't know anything about them

00:25:01,830 --> 00:25:07,950
you can't track them let's have some

00:25:04,770 --> 00:25:11,580
examples my favorite example as is age

00:25:07,950 --> 00:25:13,610
keys I always say copy and crack at home

00:25:11,580 --> 00:25:17,520
because that's what you can do with them

00:25:13,610 --> 00:25:19,110
yeah rainbow tables whatever just copy

00:25:17,520 --> 00:25:24,060
them and do it with them whatever you

00:25:19,110 --> 00:25:26,820
want their alternatives SSH whole space

00:25:24,060 --> 00:25:29,610
authentication maybe don't use SSH if

00:25:26,820 --> 00:25:31,860
you don't need it at least use the SSH

00:25:29,610 --> 00:25:34,950
agent don't ever copy your personal as a

00:25:31,860 --> 00:25:37,290
sage key anywhere and please don't use

00:25:34,950 --> 00:25:40,410
user as a sage keys for service

00:25:37,290 --> 00:25:43,980
communication as a sage is a human

00:25:40,410 --> 00:25:45,810
protocol not a machine protocol machines

00:25:43,980 --> 00:25:49,530
have much better ways to talk to each

00:25:45,810 --> 00:25:53,370
other the next example and a classic for

00:25:49,530 --> 00:25:56,340
conferences are AWS credentials they are

00:25:53,370 --> 00:25:58,710
static credentials and if I see somebody

00:25:56,340 --> 00:26:01,200
flashing here his credentials I'll make

00:25:58,710 --> 00:26:03,600
a photo and I'll install my happy nice

00:26:01,200 --> 00:26:08,490
Bitcoin mining porn whatever a

00:26:03,600 --> 00:26:10,590
distribution in his account for free and

00:26:08,490 --> 00:26:12,630
if he's a dummy and flashes me master

00:26:10,590 --> 00:26:14,400
credentials with I am permissions I'll

00:26:12,630 --> 00:26:16,920
just set up my own users there and hide

00:26:14,400 --> 00:26:19,860
them in his system and I'll name them

00:26:16,920 --> 00:26:23,140
something obvious like

00:26:19,860 --> 00:26:25,980
AWS system account which he probably

00:26:23,140 --> 00:26:25,980
won't even realize

00:26:26,070 --> 00:26:34,270
don't use static credentials period okay

00:26:31,510 --> 00:26:37,750
Amazon has other means of authentication

00:26:34,270 --> 00:26:39,160
use them we have software for that use

00:26:37,750 --> 00:26:42,480
our software if you don't have your own

00:26:39,160 --> 00:26:45,220
and please watch your cloud try locks

00:26:42,480 --> 00:26:47,620
and of course username password really

00:26:45,220 --> 00:26:48,250
this is yesterday so don't don't do that

00:26:47,620 --> 00:26:52,030
anymore

00:26:48,250 --> 00:26:55,210
don't do back-end admin access with a

00:26:52,030 --> 00:26:57,420
password that never changes like how do

00:26:55,210 --> 00:27:01,840
you log into the monitoring web UI

00:26:57,420 --> 00:27:04,930
monitoring monitoring disable it please

00:27:01,840 --> 00:27:07,030
or integrate the log in with your Active

00:27:04,930 --> 00:27:10,030
Directory whatever employee management

00:27:07,030 --> 00:27:12,970
system but don't do username password

00:27:10,030 --> 00:27:15,400
stuff it will fail it will be stole

00:27:12,970 --> 00:27:20,050
you'll never know when and it will be a

00:27:15,400 --> 00:27:22,270
big big annoyance let's look again at

00:27:20,050 --> 00:27:26,350
this data center and try to understand

00:27:22,270 --> 00:27:29,620
the built-in challenges if we want to

00:27:26,350 --> 00:27:32,980
move to the cloud so as I said we have a

00:27:29,620 --> 00:27:34,780
lot of blind trust going on because when

00:27:32,980 --> 00:27:36,760
the data center nobody can get in there

00:27:34,780 --> 00:27:38,710
we have this parameter security and so

00:27:36,760 --> 00:27:40,450
on and we did a lot of stuff without

00:27:38,710 --> 00:27:42,850
authentication because in the data

00:27:40,450 --> 00:27:45,430
center that just works and it's ok it's

00:27:42,850 --> 00:27:47,890
good enough yeah it doesn't matter if

00:27:45,430 --> 00:27:51,600
whatever the secretary or the boss can

00:27:47,890 --> 00:27:54,310
also read my server configuration page I

00:27:51,600 --> 00:27:56,290
probably want but they could so it's

00:27:54,310 --> 00:27:59,350
still ok because there's still part of

00:27:56,290 --> 00:28:04,480
our company we trust them so how to

00:27:59,350 --> 00:28:07,450
mitigate all those well in the end an

00:28:04,480 --> 00:28:10,420
app has to be completely responsible for

00:28:07,450 --> 00:28:12,670
its security there's no way around that

00:28:10,420 --> 00:28:15,490
forget about web application firewalls

00:28:12,670 --> 00:28:18,760
and offloading security concerns to

00:28:15,490 --> 00:28:21,280
other teams you write an app that runs

00:28:18,760 --> 00:28:23,920
on the internet you are responsible and

00:28:21,280 --> 00:28:26,050
you have to make a security audit or ask

00:28:23,920 --> 00:28:29,160
somebody to do that and you have to fix

00:28:26,050 --> 00:28:29,160
everything that they find

00:28:32,660 --> 00:28:38,130
the blind trust in the data center is

00:28:35,100 --> 00:28:40,500
not a big problem services in the data

00:28:38,130 --> 00:28:43,290
center usually can communicate to other

00:28:40,500 --> 00:28:44,970
services just like that I don't know

00:28:43,290 --> 00:28:47,910
many data centers that have really

00:28:44,970 --> 00:28:51,630
firewalls built in like host-based

00:28:47,910 --> 00:28:53,490
firewalls so again the answer is local

00:28:51,630 --> 00:28:55,110
firewalls in the clouds you have

00:28:53,490 --> 00:28:56,640
something called security groups which

00:28:55,110 --> 00:28:58,200
makes it really really simple because

00:28:56,640 --> 00:29:01,010
you just say who should talk to each

00:28:58,200 --> 00:29:03,540
other and everything else is forbidden

00:29:01,010 --> 00:29:07,350
but you have to think about local

00:29:03,540 --> 00:29:09,780
firewalls not global firewalls because

00:29:07,350 --> 00:29:12,930
the enemy will be within a hacked server

00:29:09,780 --> 00:29:15,750
is your enemy not the evil internet and

00:29:12,930 --> 00:29:20,340
please remember firewalls have open

00:29:15,750 --> 00:29:21,930
ports for your work yeah the the main

00:29:20,340 --> 00:29:23,580
business ports are always open the

00:29:21,930 --> 00:29:26,160
firewall the firewalls only protect

00:29:23,580 --> 00:29:29,640
protect against the Nedley negligent

00:29:26,160 --> 00:29:31,010
admin who forgot to close my sequel to

00:29:29,640 --> 00:29:34,640
the outside or something like that

00:29:31,010 --> 00:29:38,070
that's the only use of firewalls

00:29:34,640 --> 00:29:42,260
now authentication is a big no-no so

00:29:38,070 --> 00:29:45,630
please do federated employee logins

00:29:42,260 --> 00:29:48,180
everybody of you has a work email within

00:29:45,630 --> 00:29:50,550
work account in the work log in use that

00:29:48,180 --> 00:29:53,850
for what it's there to identify people

00:29:50,550 --> 00:29:55,980
versus machines you said everywhere

00:29:53,850 --> 00:29:59,670
build frameworks to make it simple for

00:29:55,980 --> 00:30:02,730
your developers to integrate employee

00:29:59,670 --> 00:30:04,620
login everywhere once you do that once

00:30:02,730 --> 00:30:06,390
you provide those frameworks you won't

00:30:04,620 --> 00:30:08,310
have any more discussions about static

00:30:06,390 --> 00:30:11,370
credentials because nobody needs them

00:30:08,310 --> 00:30:12,690
anymore look at Google you can log in

00:30:11,370 --> 00:30:16,170
with your Google account every word

00:30:12,690 --> 00:30:21,750
Google right it's so easy so normal why

00:30:16,170 --> 00:30:26,310
not have that internally as well and we

00:30:21,750 --> 00:30:28,470
don't use VPNs so instead of having some

00:30:26,310 --> 00:30:30,900
special backdoors we will jump holes we

00:30:28,470 --> 00:30:32,910
trust our jump holes and we say the jump

00:30:30,900 --> 00:30:35,430
host checks the identity of the person

00:30:32,910 --> 00:30:37,590
who comes and then the jump host is a

00:30:35,430 --> 00:30:41,810
trusted source of communication within

00:30:37,590 --> 00:30:41,810
each data center or network

00:30:42,630 --> 00:30:48,270
and the biggest thing is service to

00:30:45,270 --> 00:30:52,320
service communication it goes over the

00:30:48,270 --> 00:30:55,020
public internet and this is a real

00:30:52,320 --> 00:30:57,390
biggie because over the public internet

00:30:55,020 --> 00:31:01,370
you can't trust anything can trust

00:30:57,390 --> 00:31:04,890
anybody so here you have to do something

00:31:01,370 --> 00:31:07,740
my advice is HTTPS only secure

00:31:04,890 --> 00:31:10,020
communication and use Identity

00:31:07,740 --> 00:31:13,470
Management together with federated

00:31:10,020 --> 00:31:15,090
authentication for example a wall - we

00:31:13,470 --> 00:31:16,470
wrote something for that which is not

00:31:15,090 --> 00:31:19,770
open source because it's heavily

00:31:16,470 --> 00:31:23,250
integrated with our other API systems

00:31:19,770 --> 00:31:26,460
but core OS published something called

00:31:23,250 --> 00:31:29,549
Dex de X which might solve this problem

00:31:26,460 --> 00:31:32,070
because it's an OAuth 2 or my D Connect

00:31:29,549 --> 00:31:35,280
provider which a lot of with a lot of

00:31:32,070 --> 00:31:37,980
flexible backends so probably you can

00:31:35,280 --> 00:31:40,350
solve this problem with Dex and this is

00:31:37,980 --> 00:31:43,409
a very big problem and if you go to the

00:31:40,350 --> 00:31:44,820
cloud without thinking about service to

00:31:43,409 --> 00:31:49,950
service communication you will have a

00:31:44,820 --> 00:31:54,900
big problem down the road so what about

00:31:49,950 --> 00:31:57,539
hybrid cloud this is a hybrid cloud

00:31:54,900 --> 00:32:03,570
right there's a little bit of everything

00:31:57,539 --> 00:32:05,909
but nothing real so one way of defining

00:32:03,570 --> 00:32:07,980
hybrid cloud is this my virtual machine

00:32:05,909 --> 00:32:11,400
or docker container can run on premise

00:32:07,980 --> 00:32:17,340
on the cloud who came to this talk with

00:32:11,400 --> 00:32:19,200
this opinion thank you

00:32:17,340 --> 00:32:21,240
it's called IaaS like

00:32:19,200 --> 00:32:24,030
infrastructure-as-a-service I have a

00:32:21,240 --> 00:32:26,220
virtual machine and VMware and others

00:32:24,030 --> 00:32:27,870
offer you cloud services where they

00:32:26,220 --> 00:32:30,059
allow you to bridge between your

00:32:27,870 --> 00:32:32,940
on-premise VMware stuff and some cloudy

00:32:30,059 --> 00:32:35,220
and worse stuff and AWS has some

00:32:32,940 --> 00:32:38,760
migration wizard and Microsoft has that

00:32:35,220 --> 00:32:41,190
and so on there's another definition

00:32:38,760 --> 00:32:45,809
which is like this use the best tool for

00:32:41,190 --> 00:32:49,980
the job some apps ran better on-premise

00:32:45,809 --> 00:32:53,040
and some apps run better or benefit more

00:32:49,980 --> 00:32:56,970
from the cloud embrace cloud services as

00:32:53,040 --> 00:33:00,750
part of obligations and integrate with

00:32:56,970 --> 00:33:04,480
who came with this opinion to the saqqaq

00:33:00,750 --> 00:33:06,730
okay nice because that's actually my

00:33:04,480 --> 00:33:09,250
opinion and I strongly believe that

00:33:06,730 --> 00:33:12,490
going to the cloud without embracing

00:33:09,250 --> 00:33:14,500
that what the cloud offers doesn't make

00:33:12,490 --> 00:33:16,960
much sense it doesn't give you much

00:33:14,500 --> 00:33:20,130
benefit you could also go to heads gnaw

00:33:16,960 --> 00:33:24,250
on other bare-metal hosting provider

00:33:20,130 --> 00:33:29,740
probably cheaper even so how do those

00:33:24,250 --> 00:33:31,240
compare running your stuff anywhere of

00:33:29,740 --> 00:33:34,660
course has the advantage that you don't

00:33:31,240 --> 00:33:38,620
have a heavy vendor lock-in yes that's a

00:33:34,660 --> 00:33:41,050
big advantage right once one every word

00:33:38,620 --> 00:33:42,700
runs from my desktop for the data center

00:33:41,050 --> 00:33:45,280
in the cloud

00:33:42,700 --> 00:33:48,280
I have unified tooling and I can even

00:33:45,280 --> 00:33:50,980
say I have one standardized abstraction

00:33:48,280 --> 00:33:53,470
layer that knows how to orchestrate my

00:33:50,980 --> 00:33:57,190
on-premise cloud cloud on-premise

00:33:53,470 --> 00:33:59,020
virtualization form and my cloud

00:33:57,190 --> 00:34:04,540
provider one and cloud provider two and

00:33:59,020 --> 00:34:06,430
so on yes there is a benefit to that the

00:34:04,540 --> 00:34:07,780
downside is you have to still invent all

00:34:06,430 --> 00:34:10,810
your own stuff you have to roll your own

00:34:07,780 --> 00:34:13,030
database system you need your own people

00:34:10,810 --> 00:34:18,730
who will create databases that run and

00:34:13,030 --> 00:34:20,820
in an automated fashion so the other

00:34:18,730 --> 00:34:23,290
thing is use the best tool for the job

00:34:20,820 --> 00:34:26,020
biggest advantage is you can actually do

00:34:23,290 --> 00:34:28,840
stuff without servers look up server

00:34:26,020 --> 00:34:30,850
list or serverless peyten there

00:34:28,840 --> 00:34:33,730
frameworks that allow you to host web

00:34:30,850 --> 00:34:35,590
applications without a server where

00:34:33,730 --> 00:34:37,620
everything is in the cloud you just take

00:34:35,590 --> 00:34:40,510
some cloud components wire them together

00:34:37,620 --> 00:34:43,630
intelligently and you're done it's

00:34:40,510 --> 00:34:45,760
amazing and the amazing thing is that if

00:34:43,630 --> 00:34:48,520
you do that and it's a low volume

00:34:45,760 --> 00:34:52,390
application you can run it for a euro

00:34:48,520 --> 00:34:57,160
per month and there's no way how you can

00:34:52,390 --> 00:34:59,290
run a website for a year or a month with

00:34:57,160 --> 00:35:02,770
back-end and storage and persistence and

00:34:59,290 --> 00:35:03,820
interaction and security and so on with

00:35:02,770 --> 00:35:07,690
other technologies

00:35:03,820 --> 00:35:10,330
it's just technically impossible even

00:35:07,690 --> 00:35:13,030
the lowest smallest tiniest in

00:35:10,330 --> 00:35:14,740
since costs you're only ten euro per

00:35:13,030 --> 00:35:19,780
month and it doesn't even have

00:35:14,740 --> 00:35:22,120
persistent storage and in your data

00:35:19,780 --> 00:35:23,740
center I don't believe that you get down

00:35:22,120 --> 00:35:29,440
to one euro per month per virtual

00:35:23,740 --> 00:35:32,440
machine okay so think about the benefit

00:35:29,440 --> 00:35:34,890
you can take actually get out of taking

00:35:32,440 --> 00:35:36,850
the cloud at its full potential and

00:35:34,890 --> 00:35:38,440
that's why I believe that you should

00:35:36,850 --> 00:35:40,780
always use the best tool for the job

00:35:38,440 --> 00:35:43,750
right even if the tool is the hammer

00:35:40,780 --> 00:35:46,750
then not every problem is a nail so

00:35:43,750 --> 00:35:48,220
let's use the best tool another thing to

00:35:46,750 --> 00:35:52,870
keep in mind you probably all know this

00:35:48,220 --> 00:35:54,730
80/20 thingy which you can apply to all

00:35:52,870 --> 00:35:58,660
kind of arguments so I applied to this

00:35:54,730 --> 00:36:02,950
argument with managed services you have

00:35:58,660 --> 00:36:05,560
80% benefit for 20% work and with

00:36:02,950 --> 00:36:08,200
virtual machine hosting of any kind you

00:36:05,560 --> 00:36:11,650
have the opposite you have 80% work for

00:36:08,200 --> 00:36:13,540
20% benefit because the moment you start

00:36:11,650 --> 00:36:17,020
virtual machine hosting you have this

00:36:13,540 --> 00:36:20,500
big bag full of complexity and problems

00:36:17,020 --> 00:36:23,230
and things you need to automate using

00:36:20,500 --> 00:36:25,480
managed services is just a little bit

00:36:23,230 --> 00:36:27,880
J'son to create it and then just API

00:36:25,480 --> 00:36:29,830
calls to talk with it and that's it

00:36:27,880 --> 00:36:34,050
nothing else you can do with that and

00:36:29,830 --> 00:36:34,050
it's just so easy and so cheap to use

00:36:35,490 --> 00:36:42,160
feel free to use this argument anywhere

00:36:38,140 --> 00:36:44,620
you like so I'm a strong believer in

00:36:42,160 --> 00:36:46,870
cloud enablement meaning I don't want to

00:36:44,620 --> 00:36:48,370
force people anywhere neither to the

00:36:46,870 --> 00:36:51,790
cloud north of the data center I want to

00:36:48,370 --> 00:36:55,300
enable people to do their own choices

00:36:51,790 --> 00:36:57,010
based on what's best for them and that's

00:36:55,300 --> 00:37:01,000
my advice for the cloud migration

00:36:57,010 --> 00:37:04,780
strategy and Eddie Moonbeam scout we

00:37:01,000 --> 00:37:07,740
kind of follow this plan we had a more

00:37:04,780 --> 00:37:12,040
aggressive plan some time ago but we

00:37:07,740 --> 00:37:14,680
changed that towards a more measure plan

00:37:12,040 --> 00:37:16,690
that really takes the time that

00:37:14,680 --> 00:37:19,060
everybody needs to go into the cloud and

00:37:16,690 --> 00:37:22,530
also allows people to use the data

00:37:19,060 --> 00:37:22,530
center if the data center is better

00:37:22,680 --> 00:37:27,480
so what's the cloud migration strategy

00:37:24,770 --> 00:37:30,870
establish a cloud platform that's the

00:37:27,480 --> 00:37:32,730
first step you can't ask people to

00:37:30,870 --> 00:37:37,440
decide about something which they can't

00:37:32,730 --> 00:37:39,600
try out the next step is integrate the

00:37:37,440 --> 00:37:41,190
cloud with your data center embrace the

00:37:39,600 --> 00:37:44,150
fact that you will have two or more

00:37:41,190 --> 00:37:46,950
platforms for the foreseeable future

00:37:44,150 --> 00:37:48,420
don't play this like okay we build now

00:37:46,950 --> 00:37:50,340
and everything in the cloud and we

00:37:48,420 --> 00:37:53,570
neglect the data center we'll just

00:37:50,340 --> 00:37:57,750
switch it off anyway that's

00:37:53,570 --> 00:38:00,240
expect an embrace a long migration

00:37:57,750 --> 00:38:03,200
period if you then can make it shorter

00:38:00,240 --> 00:38:07,470
that's okay that's great but first plan

00:38:03,200 --> 00:38:09,420
for a hybrid world and optimize for that

00:38:07,470 --> 00:38:12,540
build technology for the hybrid world

00:38:09,420 --> 00:38:14,940
that really makes everybody see the

00:38:12,540 --> 00:38:16,710
benefit of being able to use both to

00:38:14,940 --> 00:38:19,200
have the free choice between cloud and

00:38:16,710 --> 00:38:21,060
data center or multiple clouds because

00:38:19,200 --> 00:38:23,790
different cloud providers actually have

00:38:21,060 --> 00:38:26,430
different advantages whatever Microsoft

00:38:23,790 --> 00:38:27,750
is better with machine learning Amazon

00:38:26,430 --> 00:38:31,050
is better with everything else

00:38:27,750 --> 00:38:33,600
I don't know these things change

00:38:31,050 --> 00:38:35,610
Google suddenly develops in your service

00:38:33,600 --> 00:38:37,880
and you want to use it so integrate

00:38:35,610 --> 00:38:42,330
those clouds into your data center and

00:38:37,880 --> 00:38:43,830
then look whether it takes you build the

00:38:42,330 --> 00:38:46,050
applications in the cloud I think that's

00:38:43,830 --> 00:38:48,570
an obvious step if you invest

00:38:46,050 --> 00:38:50,280
engineering into a new application the

00:38:48,570 --> 00:38:53,070
overhead to build that on a new platform

00:38:50,280 --> 00:38:55,700
is usually pretty small compared to the

00:38:53,070 --> 00:38:59,240
overall effort of that new product and

00:38:55,700 --> 00:39:02,250
then it's ok to say ok we have a 10%

00:38:59,240 --> 00:39:04,350
engineering overhead to go to the new

00:39:02,250 --> 00:39:05,910
platform but that is future proof of

00:39:04,350 --> 00:39:07,830
what's technical depth and so on and

00:39:05,910 --> 00:39:10,020
then everybody will be happy with it

00:39:07,830 --> 00:39:12,180
especially since product almost know

00:39:10,020 --> 00:39:14,160
that any estimation you give in the

00:39:12,180 --> 00:39:17,750
beginning is actually wrong so they

00:39:14,160 --> 00:39:21,260
don't care about 10 percent more or less

00:39:17,750 --> 00:39:25,470
then start to migrate existing services

00:39:21,260 --> 00:39:28,020
and then repeat until done because

00:39:25,470 --> 00:39:32,940
obviously that's not the end of the

00:39:28,020 --> 00:39:35,220
story in detail the cloud platform as a

00:39:32,940 --> 00:39:37,170
platform is

00:39:35,220 --> 00:39:39,960
is important as your data center

00:39:37,170 --> 00:39:44,900
platform and please take your cloud

00:39:39,960 --> 00:39:46,440
platform as professionally as stable as

00:39:44,900 --> 00:39:49,260
well-engineered

00:39:46,440 --> 00:39:51,119
as your data center don't play this okay

00:39:49,260 --> 00:39:52,830
we on the data center everybody can go

00:39:51,119 --> 00:39:56,310
to the cloud we don't care how they do

00:39:52,830 --> 00:39:58,830
stuff because in the end you'll be still

00:39:56,310 --> 00:40:01,859
responsible you the ops people will

00:39:58,830 --> 00:40:03,869
still be responsible for the mistakes

00:40:01,859 --> 00:40:06,119
that others do in the cloud we actually

00:40:03,869 --> 00:40:07,740
don't deal with so better you embrace it

00:40:06,119 --> 00:40:10,619
you deal with it you make it your own

00:40:07,740 --> 00:40:13,880
and you provide a platform both from the

00:40:10,619 --> 00:40:18,270
data center and in the cloud that means

00:40:13,880 --> 00:40:21,990
provide basic solutions for logging

00:40:18,270 --> 00:40:28,140
monitoring deployment provide good

00:40:21,990 --> 00:40:31,050
solutions for security compliance and

00:40:28,140 --> 00:40:34,849
cost control I actually forgot that on

00:40:31,050 --> 00:40:37,800
the slide that's very important because

00:40:34,849 --> 00:40:40,500
security compliance and cost control are

00:40:37,800 --> 00:40:43,050
topics which nobody cares about nobody

00:40:40,500 --> 00:40:45,630
who writes applications cares about

00:40:43,050 --> 00:40:48,630
those things but your company cares

00:40:45,630 --> 00:40:51,180
about those things so somebody has to be

00:40:48,630 --> 00:40:52,740
responsible to implement software and

00:40:51,180 --> 00:40:56,910
technology to care about those things

00:40:52,740 --> 00:40:58,859
and if you are now an ops department

00:40:56,910 --> 00:41:02,040
looking for new purpose then take this

00:40:58,859 --> 00:41:04,380
as your purpose taking care of things

00:41:02,040 --> 00:41:06,869
that nobody wants to care about like the

00:41:04,380 --> 00:41:10,200
overall responsibility make that your

00:41:06,869 --> 00:41:15,480
business and be excellent at that and

00:41:10,200 --> 00:41:18,030
you won't be out of a job very important

00:41:15,480 --> 00:41:20,760
also give your users easy and secure

00:41:18,030 --> 00:41:23,130
access to the cloud don't let them

00:41:20,760 --> 00:41:27,630
create iam users don't let them create

00:41:23,130 --> 00:41:30,570
static credentials use if you need our

00:41:27,630 --> 00:41:33,089
open source products to provide access

00:41:30,570 --> 00:41:36,720
to the cloud but don't let them create

00:41:33,089 --> 00:41:38,849
users this is evil and please decide

00:41:36,720 --> 00:41:41,400
upon the macro architecture the big

00:41:38,849 --> 00:41:44,040
questions like do we have multiple iws

00:41:41,400 --> 00:41:46,200
accounts how are they cut how do we do

00:41:44,040 --> 00:41:48,140
communication how do we do whatever

00:41:46,200 --> 00:41:50,789
service

00:41:48,140 --> 00:41:52,799
try to decide upon some standards like

00:41:50,789 --> 00:41:54,599
we use CloudFormation to automate

00:41:52,799 --> 00:41:57,599
everything or we use terraform to

00:41:54,599 --> 00:42:01,410
automate everything set policies you

00:41:57,599 --> 00:42:04,259
should use all services at AWS please

00:42:01,410 --> 00:42:06,509
don't use anything except ec2 and s3 or

00:42:04,259 --> 00:42:08,519
whatever set policies give the people

00:42:06,509 --> 00:42:12,900
some boundaries within which they can

00:42:08,519 --> 00:42:18,960
freely go to the cloud freely explore

00:42:12,900 --> 00:42:21,900
their abilities in the cloud the next

00:42:18,960 --> 00:42:24,539
step is bring the cloud to your data

00:42:21,900 --> 00:42:26,759
center don't see the cloud in the data

00:42:24,539 --> 00:42:29,880
center as two separate entities see them

00:42:26,759 --> 00:42:32,880
as one process one platform one immobilo

00:42:29,880 --> 00:42:35,880
platform and the one MOV installed

00:42:32,880 --> 00:42:40,349
platform has drivers for the data center

00:42:35,880 --> 00:42:42,269
and drivers for the cloud drivers we

00:42:40,349 --> 00:42:45,269
actually don't have any abstraction

00:42:42,269 --> 00:42:46,739
layers that overarching because we want

00:42:45,269 --> 00:42:50,099
people to understand the tools they use

00:42:46,739 --> 00:42:53,789
so in our world people use VMware native

00:42:50,099 --> 00:42:56,549
or through our very slim automation and

00:42:53,789 --> 00:42:59,400
they use AWS native through cloud

00:42:56,549 --> 00:43:00,690
formation and we have a very very slim

00:42:59,400 --> 00:43:01,859
wrapper that allows you to buy cloud

00:43:00,690 --> 00:43:04,920
formation in Yama

00:43:01,859 --> 00:43:06,269
because Yama is shorter than jz but

00:43:04,920 --> 00:43:08,999
that's it everybody actually writes

00:43:06,269 --> 00:43:11,609
cloud formation and people hate it but I

00:43:08,999 --> 00:43:13,380
still think that in the long run the

00:43:11,609 --> 00:43:15,539
company is better off with everybody

00:43:13,380 --> 00:43:17,309
knowing cloud formation then if people

00:43:15,539 --> 00:43:19,319
would learn some other abstraction tool

00:43:17,309 --> 00:43:20,789
that again will limit them in the way

00:43:19,319 --> 00:43:26,160
how they can express themselves in the

00:43:20,789 --> 00:43:29,969
cloud go native always go native provide

00:43:26,160 --> 00:43:31,920
a secure communication framework if you

00:43:29,969 --> 00:43:33,749
don't solve these challenges how to

00:43:31,920 --> 00:43:36,319
communicate between the data center and

00:43:33,749 --> 00:43:38,940
the cloud in a central level your

00:43:36,319 --> 00:43:41,880
developers will solve the problem for

00:43:38,940 --> 00:43:45,690
themselves in a way that doesn't scale

00:43:41,880 --> 00:43:48,930
and that maybe isn't even compliant with

00:43:45,690 --> 00:43:52,589
your own requirements so go ahead take

00:43:48,930 --> 00:43:55,170
the step forward invest into a solid

00:43:52,589 --> 00:43:57,119
framework solutions that allow your

00:43:55,170 --> 00:43:59,460
developers to be quick and efficient

00:43:57,119 --> 00:44:00,970
with what they do and that's in my

00:43:59,460 --> 00:44:04,210
opinion the job of every and

00:44:00,970 --> 00:44:05,590
structure department and then start

00:44:04,210 --> 00:44:08,920
using cloud services from the data

00:44:05,590 --> 00:44:12,849
center for example prime example SNS and

00:44:08,920 --> 00:44:14,260
SQS is a queueing solution and if you

00:44:12,849 --> 00:44:17,590
run a queueing solution in the data

00:44:14,260 --> 00:44:20,830
center check how much it costs check how

00:44:17,590 --> 00:44:25,410
much you paid for building it and then

00:44:20,830 --> 00:44:25,410
compare that with the prices of SNS sqs

00:44:25,619 --> 00:44:32,200
in our example that actually was a big

00:44:28,330 --> 00:44:34,720
big win a couple years ago we'll have

00:44:32,200 --> 00:44:38,320
had to take the decision to rebuild the

00:44:34,720 --> 00:44:40,450
next mega a large queueing system for

00:44:38,320 --> 00:44:43,720
all the events happening in the data

00:44:40,450 --> 00:44:46,480
center or do we just use Amazon the

00:44:43,720 --> 00:44:48,369
decision was just used Amazon the price

00:44:46,480 --> 00:44:52,180
tag was something like a thousand euros

00:44:48,369 --> 00:44:54,070
per month and actually the amount of

00:44:52,180 --> 00:44:56,230
meetings we save by taking that

00:44:54,070 --> 00:44:58,540
decisions already brought us a return of

00:44:56,230 --> 00:45:01,270
invest not to talk about engineering

00:44:58,540 --> 00:45:05,280
time that would have that it would have

00:45:01,270 --> 00:45:05,280
cost to build a solution on premise and

00:45:05,580 --> 00:45:11,980
think about migrating storage to the

00:45:08,140 --> 00:45:14,109
cloud because if you look at a migration

00:45:11,980 --> 00:45:17,290
you always have storage and code that

00:45:14,109 --> 00:45:19,510
you need to migrate and if you migrate

00:45:17,290 --> 00:45:21,420
this storage first in the code second

00:45:19,510 --> 00:45:24,220
the migration will be much easier

00:45:21,420 --> 00:45:28,210
especially since cloud storage is a web

00:45:24,220 --> 00:45:30,700
service like s3 or dynamo DB so if you

00:45:28,210 --> 00:45:33,430
use the cloud storage from the data

00:45:30,700 --> 00:45:36,670
center then you can actually shift the

00:45:33,430 --> 00:45:39,400
web servers or the workloads to the

00:45:36,670 --> 00:45:41,740
cloud without moving the data anymore

00:45:39,400 --> 00:45:44,619
and that means you can do a seamless

00:45:41,740 --> 00:45:48,390
migration a transparent migration from

00:45:44,619 --> 00:45:51,220
the data center to the cloud build the

00:45:48,390 --> 00:45:52,839
data migration into your application

00:45:51,220 --> 00:45:56,680
because the application knows best how

00:45:52,839 --> 00:45:58,390
to store data so if your application now

00:45:56,680 --> 00:46:01,450
writes into a database let it right also

00:45:58,390 --> 00:46:02,830
into a cloud storage in parallel and

00:46:01,450 --> 00:46:05,190
then eventually you can switch off the

00:46:02,830 --> 00:46:05,190
database

00:46:07,140 --> 00:46:10,430
and very important improve automation

00:46:09,089 --> 00:46:12,779
and gather operational experience

00:46:10,430 --> 00:46:15,839
because you will have failures you will

00:46:12,779 --> 00:46:17,670
have errors you will have fuck-ups you

00:46:15,839 --> 00:46:19,710
will have human error most of all and

00:46:17,670 --> 00:46:24,089
you need time to learn how to deal with

00:46:19,710 --> 00:46:26,369
that there's no money in the world

00:46:24,089 --> 00:46:28,980
advice you experience only time buy so

00:46:26,369 --> 00:46:30,930
experience in doing it so use the time

00:46:28,980 --> 00:46:33,720
to build up experience within your

00:46:30,930 --> 00:46:38,029
company within your developers within

00:46:33,720 --> 00:46:41,880
your admins that they know how to run

00:46:38,029 --> 00:46:44,279
resilient platforms in the cloud how

00:46:41,880 --> 00:46:45,930
they can run available services in the

00:46:44,279 --> 00:46:51,089
cloud with different means how to

00:46:45,930 --> 00:46:52,710
achieve that availability then you're

00:46:51,089 --> 00:46:56,640
ready to build new applications into the

00:46:52,710 --> 00:46:58,410
cloud start small go big whatever it

00:46:56,640 --> 00:47:02,279
doesn't matter this is a business

00:46:58,410 --> 00:47:03,779
decision because here you need to talk

00:47:02,279 --> 00:47:06,690
to your business you need to involve

00:47:03,779 --> 00:47:08,940
them and you make sell to them this idea

00:47:06,690 --> 00:47:10,710
of let's go to the cloud and this

00:47:08,940 --> 00:47:12,359
project will take longer about all the

00:47:10,710 --> 00:47:15,029
next projects that will take only half

00:47:12,359 --> 00:47:18,869
the time because we'll be faster that's

00:47:15,029 --> 00:47:20,309
the main argument here and this is the

00:47:18,869 --> 00:47:23,190
step where you really learn how to

00:47:20,309 --> 00:47:25,980
architect for the cloud how to actually

00:47:23,190 --> 00:47:27,180
design your application to work well and

00:47:25,980 --> 00:47:29,789
the cloud with the tools that are

00:47:27,180 --> 00:47:33,269
available there and you will learn how

00:47:29,789 --> 00:47:36,180
to control your costs because you learn

00:47:33,269 --> 00:47:38,400
that setting up a Cassandra cluster with

00:47:36,180 --> 00:47:41,099
several availability zones is just very

00:47:38,400 --> 00:47:45,019
expensive because you pay for Interzone

00:47:41,099 --> 00:47:47,609
traffic on Amazon and you will make

00:47:45,019 --> 00:47:51,390
expensive mistakes that will cost your

00:47:47,609 --> 00:47:54,059
company $5,000 over one weekend and

00:47:51,390 --> 00:47:55,769
you'll be have to be ready for that your

00:47:54,059 --> 00:47:58,259
management has to be ready to forgive

00:47:55,769 --> 00:48:05,910
those mistakes otherwise you'll never

00:47:58,259 --> 00:48:08,220
learn so develop an architect for the

00:48:05,910 --> 00:48:09,809
cloud and for the costs is something

00:48:08,220 --> 00:48:11,880
completely new which we didn't do in the

00:48:09,809 --> 00:48:15,089
data center the inter center the

00:48:11,880 --> 00:48:17,880
smallest box was very powerful there are

00:48:15,089 --> 00:48:19,680
no tiny boxes in the data center there

00:48:17,880 --> 00:48:20,460
are no fractional boxes in the data

00:48:19,680 --> 00:48:21,630
center

00:48:20,460 --> 00:48:23,790
and the data center everything is

00:48:21,630 --> 00:48:26,670
powerful Network performance

00:48:23,790 --> 00:48:30,810
no big deal storage performance no big

00:48:26,670 --> 00:48:33,840
deal memory how many gigabytes do you

00:48:30,810 --> 00:48:35,370
want it's cheap in the data center and

00:48:33,840 --> 00:48:37,530
the cloud you have to engineer for that

00:48:35,370 --> 00:48:40,590
and for really keeping your cost under

00:48:37,530 --> 00:48:42,060
control and again improve automation and

00:48:40,590 --> 00:48:44,490
gather operational experience because

00:48:42,060 --> 00:48:46,470
you will fail again you will learn that

00:48:44,490 --> 00:48:48,420
you make an eclair a cloud formation

00:48:46,470 --> 00:48:50,250
update and that gets stuck and you are

00:48:48,420 --> 00:48:53,070
downed and you will learn how to deal

00:48:50,250 --> 00:48:55,860
with that and if you skip this step then

00:48:53,070 --> 00:48:58,050
you will fail big in the next step which

00:48:55,860 --> 00:48:59,610
is to migrate existing services and here

00:48:58,050 --> 00:49:02,460
we go back to the business plan which I

00:48:59,610 --> 00:49:05,280
showed in the beginning because most

00:49:02,460 --> 00:49:07,620
likely the business plan or the

00:49:05,280 --> 00:49:11,250
investment plan for your data center

00:49:07,620 --> 00:49:13,710
will dictate your cloud migration you

00:49:11,250 --> 00:49:15,930
will ask yourself which services do I

00:49:13,710 --> 00:49:18,860
have to migrate now so that I can avoid

00:49:15,930 --> 00:49:22,380
the next million storage investment in

00:49:18,860 --> 00:49:24,330
autumn and then you realized that you

00:49:22,380 --> 00:49:28,250
have a really big project in front of

00:49:24,330 --> 00:49:30,480
you because everybody is using storage

00:49:28,250 --> 00:49:32,160
obviously right that's why we have

00:49:30,480 --> 00:49:35,070
central storage so that everybody uses

00:49:32,160 --> 00:49:37,860
it so then you ask yourself ok

00:49:35,070 --> 00:49:39,440
what do I have to migrate now into the

00:49:37,860 --> 00:49:41,700
cloud so that the next storage

00:49:39,440 --> 00:49:45,270
investment will be only half as

00:49:41,700 --> 00:49:47,040
expensive as the current one and then

00:49:45,270 --> 00:49:50,310
you find some things you can migrate to

00:49:47,040 --> 00:49:51,810
pull that off but the downside is you

00:49:50,310 --> 00:49:53,340
actually bought another storage which

00:49:51,810 --> 00:49:55,680
you have to write off another five years

00:49:53,340 --> 00:50:00,510
so there you go another five years on

00:49:55,680 --> 00:50:02,270
the data center for sure and that's the

00:50:00,510 --> 00:50:04,980
things you need to discuss at this step

00:50:02,270 --> 00:50:06,860
and you need to prioritize cloud

00:50:04,980 --> 00:50:09,450
migrations against future development

00:50:06,860 --> 00:50:11,730
because migrating existing services

00:50:09,450 --> 00:50:13,200
doesn't create new features and it maybe

00:50:11,730 --> 00:50:16,920
doesn't even make anything better so

00:50:13,200 --> 00:50:19,350
maybe you try to integrate your cloud

00:50:16,920 --> 00:50:21,570
migration into some refactoring or some

00:50:19,350 --> 00:50:23,160
new feature that is much easier to

00:50:21,570 --> 00:50:25,710
implement with the cloud than in the

00:50:23,160 --> 00:50:27,270
data center and again please improve

00:50:25,710 --> 00:50:31,380
automation and gather operational

00:50:27,270 --> 00:50:33,960
experience repeat until done obviously

00:50:31,380 --> 00:50:36,630
after you migrated everything you

00:50:33,960 --> 00:50:38,430
to think would we go next right after

00:50:36,630 --> 00:50:40,980
you migrated everything from our old

00:50:38,430 --> 00:50:43,560
legacy platform to the new shiny rpm

00:50:40,980 --> 00:50:46,619
based fully automated virtualized data

00:50:43,560 --> 00:50:48,510
center we go to the cloud and we go to

00:50:46,619 --> 00:50:51,599
the card earlier than later because we

00:50:48,510 --> 00:50:53,250
actually know that one migration is just

00:50:51,599 --> 00:50:55,589
the preparation for the next migration

00:50:53,250 --> 00:50:58,560
and I know that once why might we

00:50:55,589 --> 00:51:00,480
migrate most of our stuff to Amazon will

00:50:58,560 --> 00:51:04,109
be in a much better position to discuss

00:51:00,480 --> 00:51:05,700
how to migrate who the stuff that would

00:51:04,109 --> 00:51:08,160
benefit from it to Google or to

00:51:05,700 --> 00:51:10,080
Microsoft but they're really much easier

00:51:08,160 --> 00:51:12,030
because we're already in Amazon and if

00:51:10,080 --> 00:51:13,589
you and one if you work in one cloud

00:51:12,030 --> 00:51:14,820
going to the next cloud is much easier

00:51:13,589 --> 00:51:20,130
than if you don't work in the cloud at

00:51:14,820 --> 00:51:21,570
all and very interesting the less stuff

00:51:20,130 --> 00:51:23,580
you have in the data center the more

00:51:21,570 --> 00:51:27,720
expensive the data center gets per

00:51:23,580 --> 00:51:29,280
service or per application so in the end

00:51:27,720 --> 00:51:32,220
you can play a very simple game you see

00:51:29,280 --> 00:51:36,180
I give you a data center I give you the

00:51:32,220 --> 00:51:37,830
cloud you my dear internal customer can

00:51:36,180 --> 00:51:40,680
use whatever you want I'll just tell you

00:51:37,830 --> 00:51:42,030
how much it cost and suddenly the

00:51:40,680 --> 00:51:43,890
remaining data center users will

00:51:42,030 --> 00:51:45,720
discover how expensive it is to run in

00:51:43,890 --> 00:51:47,849
the data center because they get all

00:51:45,720 --> 00:51:53,690
this overhead that the data center

00:51:47,849 --> 00:51:57,750
incurs assigned to them 10 admins

00:51:53,690 --> 00:52:00,480
housing energy whatever all that it

00:51:57,750 --> 00:52:03,420
takes for data center up links suddenly

00:52:00,480 --> 00:52:06,839
goes on five applications and then those

00:52:03,420 --> 00:52:09,270
five applications have a new way how to

00:52:06,839 --> 00:52:10,920
decide if they better want to be in the

00:52:09,270 --> 00:52:13,760
cloud or if it's worth for them to pay

00:52:10,920 --> 00:52:16,080
the data center for what they do

00:52:13,760 --> 00:52:18,180
please improve automation and gather

00:52:16,080 --> 00:52:21,050
operational experience also at this step

00:52:18,180 --> 00:52:23,780
because otherwise you will fail and

00:52:21,050 --> 00:52:26,220
please always change the running system

00:52:23,780 --> 00:52:33,030
because if you stop innovating you'll

00:52:26,220 --> 00:52:36,790
just get stuck so all that comes with a

00:52:33,030 --> 00:52:39,040
tool box which we publish on github

00:52:36,790 --> 00:52:40,660
which you can use freely and we'll be

00:52:39,040 --> 00:52:41,440
happy to get your feedback and pour

00:52:40,660 --> 00:52:43,510
requests

00:52:41,440 --> 00:52:45,850
there's much more than what I list here

00:52:43,510 --> 00:52:47,460
but these are the major things that are

00:52:45,850 --> 00:52:50,590
worth looking at

00:52:47,460 --> 00:52:53,710
so compliance is a big thing in Germany

00:52:50,590 --> 00:52:55,530
and we wrote a tool that deletes

00:52:53,710 --> 00:52:58,810
resources that do not run in Germany

00:52:55,530 --> 00:53:01,720
because we say just delete them instead

00:52:58,810 --> 00:53:04,660
of tolerating tolerating them for some

00:53:01,720 --> 00:53:06,790
time and we just have a policy that says

00:53:04,660 --> 00:53:09,100
though shalt not run stuff outside the

00:53:06,790 --> 00:53:13,840
EU and then we are fine with all this

00:53:09,100 --> 00:53:16,240
data privacy laws very important is

00:53:13,840 --> 00:53:18,730
security so we wrote a solution that

00:53:16,240 --> 00:53:20,800
gives AWS credentials to our employees

00:53:18,730 --> 00:53:24,640
and to our data center servers

00:53:20,800 --> 00:53:26,530
it's called Amazon Federation proxy go

00:53:24,640 --> 00:53:28,720
to this link there are slides

00:53:26,530 --> 00:53:34,240
screenshots talks and you can just

00:53:28,720 --> 00:53:37,810
install it and use it and this software

00:53:34,240 --> 00:53:41,710
really takes away all excuses for using

00:53:37,810 --> 00:53:45,310
static credentials it's in patent feel

00:53:41,710 --> 00:53:48,240
free to modify it and it integrates with

00:53:45,310 --> 00:53:50,710
your employee login by using the Linux

00:53:48,240 --> 00:53:53,050
authentication so if you have a Linux

00:53:50,710 --> 00:53:55,090
server where you can login with your

00:53:53,050 --> 00:53:58,150
employee user account then you can use

00:53:55,090 --> 00:54:00,850
our software and of course it supports

00:53:58,150 --> 00:54:04,360
multiple AWS accounts and you can assign

00:54:00,850 --> 00:54:07,930
I am roles in the AWS accounts based on

00:54:04,360 --> 00:54:10,120
group membership very important we have

00:54:07,930 --> 00:54:13,600
a jump host that users of my deck

00:54:10,120 --> 00:54:16,870
connect to authenticate users problem

00:54:13,600 --> 00:54:19,360
here is that if you run in the cloud you

00:54:16,870 --> 00:54:21,610
don't usually have your employee user

00:54:19,360 --> 00:54:24,100
database available as a back-end service

00:54:21,610 --> 00:54:26,890
and I wouldn't recommend extending your

00:54:24,100 --> 00:54:29,950
LDAP or whatever through a VPN into the

00:54:26,890 --> 00:54:34,090
cloud so we decided is to build a web

00:54:29,950 --> 00:54:36,580
solution which is a jump host we can log

00:54:34,090 --> 00:54:40,420
in with o2 which is of Mighty connect

00:54:36,580 --> 00:54:42,310
and upload here as a sage key and then

00:54:40,420 --> 00:54:48,040
you can open an SSH session and do

00:54:42,310 --> 00:54:49,690
whatever you want and we said okay we

00:54:48,040 --> 00:54:50,200
want to be sure that only humans use

00:54:49,690 --> 00:54:52,960
that and

00:54:50,200 --> 00:54:56,020
no machine communication so every night

00:54:52,960 --> 00:54:58,119
we just kill this instance so that every

00:54:56,020 --> 00:55:01,000
morning you have to re-authenticate so

00:54:58,119 --> 00:55:02,710
that people who were or left the company

00:55:01,000 --> 00:55:06,099
actually can't continue to use that gym

00:55:02,710 --> 00:55:08,260
host and this gem host is actually not

00:55:06,099 --> 00:55:10,150
tied to Amazon so you can also use it in

00:55:08,260 --> 00:55:13,180
the data center on any other place where

00:55:10,150 --> 00:55:17,859
you want to have a secure and reliable

00:55:13,180 --> 00:55:19,810
jump host we have a tool that simplifies

00:55:17,859 --> 00:55:22,420
working with clot formation because

00:55:19,810 --> 00:55:25,210
cloud formation does not handle the

00:55:22,420 --> 00:55:27,910
orchestration between multiple stacks so

00:55:25,210 --> 00:55:29,829
see if n sphere will allow you to set up

00:55:27,910 --> 00:55:33,310
an application that consists of many

00:55:29,829 --> 00:55:35,650
stacks and it will make it easy for you

00:55:33,310 --> 00:55:38,700
to connect the outputs from one stack to

00:55:35,650 --> 00:55:42,430
the parameters of the other stack and

00:55:38,700 --> 00:55:45,280
using that for example allows us to have

00:55:42,430 --> 00:55:47,500
a stack that contains the V PC and then

00:55:45,280 --> 00:55:49,270
to use this V PC ID in all the other

00:55:47,500 --> 00:55:52,420
stakes where we have to use a v pc ID

00:55:49,270 --> 00:55:54,130
but we do that via variable referencing

00:55:52,420 --> 00:55:58,420
similar to what terraform showed

00:55:54,130 --> 00:56:00,640
yesterday and last if you use lambda

00:55:58,420 --> 00:56:03,430
functions and write them in peyten and

00:56:00,640 --> 00:56:05,290
take a look at this little tool PI

00:56:03,430 --> 00:56:07,990
builder AWS plug-in it will greatly

00:56:05,290 --> 00:56:09,940
simplify writing lambda functions in

00:56:07,990 --> 00:56:12,790
Python uploading them to packaging them

00:56:09,940 --> 00:56:15,369
as a zip file uploading that to s3 and

00:56:12,790 --> 00:56:19,000
registering it with lumber with lambda

00:56:15,369 --> 00:56:21,910
which is a typical process for lambda

00:56:19,000 --> 00:56:23,680
deployment they're much more tools on

00:56:21,910 --> 00:56:26,589
our github please also look at the

00:56:23,680 --> 00:56:28,630
github of autoscout24 who also work in

00:56:26,589 --> 00:56:31,270
the cloud and to also have a whole bunch

00:56:28,630 --> 00:56:35,050
of interesting tools its github chrome

00:56:31,270 --> 00:56:38,920
slash autoscout24 and you'll find my

00:56:35,050 --> 00:56:40,839
talk at this address the other address

00:56:38,920 --> 00:56:42,640
you'll find my previous presentations

00:56:40,839 --> 00:56:45,160
and please contact me for example by

00:56:42,640 --> 00:56:47,609
twitter if you have any questions thank

00:56:45,160 --> 00:56:47,609
you very much

00:56:52,250 --> 00:57:00,410
Thanks

00:56:53,730 --> 00:57:03,450
any questions I my first question is

00:57:00,410 --> 00:57:05,970
what is your internal policy regarding

00:57:03,450 --> 00:57:10,109
vendor walk can developers use all the

00:57:05,970 --> 00:57:12,420
services from Amazon or yes yes the we

00:57:10,109 --> 00:57:14,520
decided that Amazon is not a bad vendor

00:57:12,420 --> 00:57:16,770
to be locked in with and definitely

00:57:14,520 --> 00:57:18,750
preferable over Oracle for example with

00:57:16,770 --> 00:57:28,619
only half and vendor lock-in in the data

00:57:18,750 --> 00:57:31,460
center my second question is how did you

00:57:28,619 --> 00:57:34,380
solve the connectivity legacy

00:57:31,460 --> 00:57:36,090
connectivity latency during this

00:57:34,380 --> 00:57:37,950
migration period if you have some

00:57:36,090 --> 00:57:39,570
services running in your data center and

00:57:37,950 --> 00:57:42,840
some of them on IV s do you have a

00:57:39,570 --> 00:57:46,619
dedicated connection between your data

00:57:42,840 --> 00:57:48,810
data center Amazon or no we don't yet

00:57:46,619 --> 00:57:50,640
have a direct connect but you should

00:57:48,810 --> 00:57:54,420
know that if you exceed a certain amount

00:57:50,640 --> 00:57:56,330
of volume in your traffic with Amazon it

00:57:54,420 --> 00:57:58,589
actually pays to have Direct Connect

00:57:56,330 --> 00:58:01,440
because that will reduce your traffic

00:57:58,589 --> 00:58:05,550
costs but the other question was about

00:58:01,440 --> 00:58:08,730
having a single domain like WWE in Scout

00:58:05,550 --> 00:58:12,150
24 dot de and behind that you have slash

00:58:08,730 --> 00:58:15,510
search in the cloud and slash offer in

00:58:12,150 --> 00:58:18,420
the data center so for that the easiest

00:58:15,510 --> 00:58:21,660
way is to use CDN as your routing

00:58:18,420 --> 00:58:23,790
solution you can use cloud fund you can

00:58:21,660 --> 00:58:26,880
use any other CDN that can simply route

00:58:23,790 --> 00:58:31,200
different slash paths to different

00:58:26,880 --> 00:58:33,440
back-end services thank you any further

00:58:31,200 --> 00:58:33,440
questions

00:58:37,890 --> 00:58:41,940
do you expected everything from a data

00:58:39,840 --> 00:58:44,190
centers move to the cloud in the next

00:58:41,940 --> 00:58:47,370
years or we think you will keep

00:58:44,190 --> 00:58:49,860
something in a data center I think that

00:58:47,370 --> 00:58:52,020
will be having the data centers for I

00:58:49,860 --> 00:58:53,900
don't know five years more so my

00:58:52,020 --> 00:58:57,380
personal opinion this is not official

00:58:53,900 --> 00:58:59,820
but I also think that in 10 or 15 years

00:58:57,380 --> 00:59:03,680
nobody will be running data centers

00:58:59,820 --> 00:59:06,720
unless they have very very special needs

00:59:03,680 --> 00:59:10,200
in my opinion physical data centers will

00:59:06,720 --> 00:59:12,000
become a thing of special needs like you

00:59:10,200 --> 00:59:15,780
I don't know you need to run use super

00:59:12,000 --> 00:59:19,620
large Hadoop cluster that runs 24/7

00:59:15,780 --> 00:59:23,220
heavy jobs then probably it's cheaper to

00:59:19,620 --> 00:59:28,050
have that in your own data center but

00:59:23,220 --> 00:59:30,480
for commodity and standard software web

00:59:28,050 --> 00:59:32,640
services I don't believe that it pays to

00:59:30,480 --> 00:59:35,310
have a data center the questions only

00:59:32,640 --> 00:59:38,670
when same like about electrical cars the

00:59:35,310 --> 00:59:40,950
question is not if but when so the

00:59:38,670 --> 00:59:42,630
question is do you want to jump on the

00:59:40,950 --> 00:59:46,080
wagon in the beginning on the end of the

00:59:42,630 --> 01:00:25,860
journey how long do you want to run to

00:59:46,080 --> 01:00:26,880
the Train before you jump on kind of I'm

01:00:25,860 --> 01:00:28,680
not surprised

01:00:26,880 --> 01:00:31,740
same about us the lift and shift

01:00:28,680 --> 01:00:33,840
migration is never a good idea what you

01:00:31,740 --> 01:00:36,030
describe is a lift and shift model just

01:00:33,840 --> 01:00:38,850
take what we have matched some instances

01:00:36,030 --> 01:00:40,230
to our existing services and take the

01:00:38,850 --> 01:00:42,150
storage costs and that's it

01:00:40,230 --> 01:00:44,210
it won't work that's not how the clock

01:00:42,150 --> 01:00:44,210
works

01:00:45,390 --> 01:00:51,400
no you need to re-engineer your existing

01:00:48,400 --> 01:00:53,320
software to work for for the cloud to be

01:00:51,400 --> 01:00:55,210
optimized for the cloud you have

01:00:53,320 --> 01:00:57,550
completely different architectures and

01:00:55,210 --> 01:00:59,110
design patterns in the cloud and as long

01:00:57,550 --> 01:01:01,690
as you don't embrace them you'll be

01:00:59,110 --> 01:01:03,130
always way too expensive there what you

01:01:01,690 --> 01:01:04,960
can do is you can do a quick lift and

01:01:03,130 --> 01:01:07,480
shift and then start to optimize in the

01:01:04,960 --> 01:01:10,030
cloud if you want to be done with the

01:01:07,480 --> 01:01:13,030
migration very quickly or you can draw

01:01:10,030 --> 01:01:16,180
out the migration and re-engineer your

01:01:13,030 --> 01:01:17,920
software while you're migrated depends a

01:01:16,180 --> 01:01:19,870
little bit on your business and your

01:01:17,920 --> 01:01:21,610
requirements and I don't know maybe now

01:01:19,870 --> 01:01:23,500
you have the money to invest it in two

01:01:21,610 --> 01:01:30,960
years you won't have so they better do

01:01:23,500 --> 01:01:30,960
it now it's a difficult topic I know

01:01:43,890 --> 01:01:48,070
look the question is do you run

01:01:46,420 --> 01:01:55,420
third-party software do you run your own

01:01:48,070 --> 01:01:56,590
software ok if you run your own software

01:01:55,420 --> 01:01:59,050
then you can change it and then you can

01:01:56,590 --> 01:02:01,090
optimize it for the cloud that's what we

01:01:59,050 --> 01:02:03,460
do a moonbeam Scout of course once 90

01:02:01,090 --> 01:02:06,520
percent owned software or web platform

01:02:03,460 --> 01:02:09,640
or web services so we can change it and

01:02:06,520 --> 01:02:11,710
adjust it to be always optimized for the

01:02:09,640 --> 01:02:14,380
platform it runs on if you run

01:02:11,710 --> 01:02:17,080
third-party software like some open the

01:02:14,380 --> 01:02:19,660
box insert the CD style of software then

01:02:17,080 --> 01:02:21,820
you're lost you can't change how build

01:02:19,660 --> 01:02:24,090
so then you more on the left and shift

01:02:21,820 --> 01:02:24,090
world

01:02:34,550 --> 01:02:40,560
yeah but we believe that Amazon is not a

01:02:38,430 --> 01:02:42,120
bad partner for lock-in we have

01:02:40,560 --> 01:02:45,930
enterprise support and that works really

01:02:42,120 --> 01:02:47,790
really well and so far they their pace

01:02:45,930 --> 01:02:51,630
of innovation is much higher than our

01:02:47,790 --> 01:02:54,060
pace of needing stuff and we constantly

01:02:51,630 --> 01:02:57,960
discover new services that simplify

01:02:54,060 --> 01:02:59,910
things for us and we believe that Amazon

01:02:57,960 --> 01:03:03,510
will hold true to their promise not to

01:02:59,910 --> 01:03:05,910
Ray Rice pray raise prices but to only

01:03:03,510 --> 01:03:07,830
maybe expand services whatever and we

01:03:05,910 --> 01:03:11,400
believe that we will always be able to

01:03:07,830 --> 01:03:15,120
go to the next cloud vendor if there

01:03:11,400 --> 01:03:17,340
will be a business need for that yes

01:03:15,120 --> 01:03:19,260
it's a decision you have to take and in

01:03:17,340 --> 01:03:23,250
the end you and your management have to

01:03:19,260 --> 01:03:25,500
sit down and agree upon something how

01:03:23,250 --> 01:03:30,810
happily are you using reserved instances

01:03:25,500 --> 01:03:33,450
because this is a good thing to put your

01:03:30,810 --> 01:03:37,230
costs down but then you're bound three

01:03:33,450 --> 01:03:40,080
years as other service in your data

01:03:37,230 --> 01:03:42,720
center as well I would say cost

01:03:40,080 --> 01:03:47,300
optimization and Amazon is the topic for

01:03:42,720 --> 01:03:50,280
its on Talk look at spot ins for example

01:03:47,300 --> 01:03:53,100
it's a third party solution that

01:03:50,280 --> 01:03:56,460
automates a lot of that and will use

01:03:53,100 --> 01:03:59,100
both reserved instances and spot

01:03:56,460 --> 01:04:01,800
instances for your auto scaling clusters

01:03:59,100 --> 01:04:03,870
and EMR clusters but it's a it's a big

01:04:01,800 --> 01:04:06,060
challenge and no other companies who

01:04:03,870 --> 01:04:11,490
just have two three guys doing only cost

01:04:06,060 --> 01:04:14,250
optimization okay I would close now so

01:04:11,490 --> 01:04:16,650
we have at least five minutes of coffee

01:04:14,250 --> 01:04:19,490
break before we go to the next talk so

01:04:16,650 --> 01:04:19,490

YouTube URL: https://www.youtube.com/watch?v=GrflbPLgaEQ


