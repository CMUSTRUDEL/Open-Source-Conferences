Title: OSDC 2016 - Ingesting Logs with Style by Pere Urbon Bayes
Publication date: 2016-05-03
Playlist: OSDC 2016 | Open Source Data Center Conference
Description: 
	The log shipping scene been between us for a long time: from syslog, rsyslog to nowadays Fluentd, Flume and Logstash. Logstash been pushing hard to introduce new features that make the experience better for everyone. At the end of the day, a healthy shipper means a happy sysadmin. The latest Logstash includes persistence to reduce the chance of data loss, monitoring to find how everything is going and configuration management to make your life a lot easier. But wait, there’s more! Offline support, improved shutdown semantics, etc … features that will make your logs shipped and you a rested sysadmin. 
In this talk we’ll see this features in action thought a real live sensor monitoring example. By the end of the session, you will be able to use the full power of Logstash in your own deployments.
Captions: 
	00:00:12,390 --> 00:00:17,190
the vases now i'm working at the elastic

00:00:14,970 --> 00:00:20,070
search and i'm in the in part of the log

00:00:17,190 --> 00:00:23,820
stash team i used to run the graph deb

00:00:20,070 --> 00:00:26,670
room at for them so i guess everyone

00:00:23,820 --> 00:00:30,300
here knows about for them someone

00:00:26,670 --> 00:00:31,529
doesn't know what for them is ok for

00:00:30,300 --> 00:00:34,140
them is the free and open source

00:00:31,529 --> 00:00:37,260
european development meeting in bed in

00:00:34,140 --> 00:00:39,210
Belgium with all my respects to this

00:00:37,260 --> 00:00:41,730
conference this is the best conference

00:00:39,210 --> 00:00:43,800
ever it's completely for free so if you

00:00:41,730 --> 00:00:47,190
like the ultimate chocolate is the best

00:00:43,800 --> 00:00:49,859
excuse to go yeah in half an awesome

00:00:47,190 --> 00:00:52,590
family myself and I I like to enjoy life

00:00:49,859 --> 00:00:55,530
and running that's going to be a big

00:00:52,590 --> 00:00:58,289
important thing here and let's try to

00:00:55,530 --> 00:00:59,699
make this happens this is basically what

00:00:58,289 --> 00:01:06,150
you're going to see at the end more or

00:00:59,699 --> 00:01:07,980
less if you want to ingest locks it's

00:01:06,150 --> 00:01:10,140
basically like like a long process you

00:01:07,980 --> 00:01:12,600
dump your data you process it and you do

00:01:10,140 --> 00:01:16,380
yeah a few steps what I'm going to try

00:01:12,600 --> 00:01:19,970
to show here is how to do it with the

00:01:16,380 --> 00:01:23,220
elastic stack and this means basically

00:01:19,970 --> 00:01:24,990
trying to make this this demo happen to

00:01:23,220 --> 00:01:30,210
make this demo what I'm what i will do

00:01:24,990 --> 00:01:35,009
is ingesting yeah as I said I liked

00:01:30,210 --> 00:01:36,780
running and and this is kind of a sports

00:01:35,009 --> 00:01:40,500
that you get all this gadget you know

00:01:36,780 --> 00:01:43,920
you get drunk keeper you get strava you

00:01:40,500 --> 00:01:46,229
get so into things yeah but yeah I like

00:01:43,920 --> 00:01:48,899
it to make it my own and in here what

00:01:46,229 --> 00:01:55,409
you're going to see is is how to ingest

00:01:48,899 --> 00:02:01,439
this data yeah item and this a lot of DC

00:01:55,409 --> 00:02:04,590
x-files this is a bunch of XML that

00:02:01,439 --> 00:02:06,570
looks like this this is actually from

00:02:04,590 --> 00:02:08,550
mike from my oak watch that I use when I

00:02:06,570 --> 00:02:12,140
when I train yeah you get things like

00:02:08,550 --> 00:02:14,880
maximum speed distance total distance

00:02:12,140 --> 00:02:18,000
position the time that happened latitude

00:02:14,880 --> 00:02:20,070
longitude yeah you can send all this

00:02:18,000 --> 00:02:22,140
data to get me into all these places but

00:02:20,070 --> 00:02:25,050
yeah I try to make it myself so I don't

00:02:22,140 --> 00:02:26,180
send all this data to them to ingest

00:02:25,050 --> 00:02:28,790
this data we are

00:02:26,180 --> 00:02:31,969
to use first of all very nice tool

00:02:28,790 --> 00:02:35,450
that's what Monica presented yesterday

00:02:31,969 --> 00:02:37,670
this is called file bid file bit is

00:02:35,450 --> 00:02:41,329
going to be the responsible of reading

00:02:37,670 --> 00:02:46,159
this bunch of XML files doing something

00:02:41,329 --> 00:02:49,000
extra important that is to shrink them

00:02:46,159 --> 00:02:52,579
in one line so apply multi-line yeah and

00:02:49,000 --> 00:02:54,680
send them to log stash log stash is

00:02:52,579 --> 00:02:57,170
going to do some processing on it like

00:02:54,680 --> 00:02:59,239
interpreting these XML files extracting

00:02:57,170 --> 00:03:01,819
the data and sending them to

00:02:59,239 --> 00:03:03,799
elasticsearch and from elasticsearch

00:03:01,819 --> 00:03:07,609
what we are going to do is to create

00:03:03,799 --> 00:03:10,040
nice touch dashboards with cabana yeah

00:03:07,609 --> 00:03:14,239
that will let us basically have our own

00:03:10,040 --> 00:03:17,359
sports tracker this means getting us

00:03:14,239 --> 00:03:21,709
something like yeah this that we see

00:03:17,359 --> 00:03:23,810
here by the end of the day so let's

00:03:21,709 --> 00:03:28,370
start making this happen so everything

00:03:23,810 --> 00:03:30,620
is running first of all before I just

00:03:28,370 --> 00:03:34,430
jump here everyone knows what

00:03:30,620 --> 00:03:41,479
elasticsearch is everyone uses it in

00:03:34,430 --> 00:03:43,579
production so elastic saves 500 very

00:03:41,479 --> 00:03:47,750
important this is going to be the new

00:03:43,579 --> 00:03:50,269
release for everything this is going to

00:03:47,750 --> 00:03:53,989
be around summer and you all are

00:03:50,269 --> 00:03:58,400
encouraged to download it test it and

00:03:53,989 --> 00:04:00,099
find bugs there is something called yeah

00:03:58,400 --> 00:04:04,609
I don't remember the exact name but

00:04:00,099 --> 00:04:06,650
there is a program that if you find bugs

00:04:04,609 --> 00:04:14,109
and report it you are going to be

00:04:06,650 --> 00:04:16,609
somehow gratification later on so

00:04:14,109 --> 00:04:21,289
elastic search basically runs as a

00:04:16,609 --> 00:04:23,360
turkey set file LPM but I'm going to be

00:04:21,289 --> 00:04:27,650
using here the turkey set you basically

00:04:23,360 --> 00:04:30,130
unter it and you executed this means

00:04:27,650 --> 00:04:34,690
elasticsearch starts to do somethings

00:04:30,130 --> 00:04:34,690
next tough to actually run

00:04:35,430 --> 00:04:47,830
is lock / upset f same thing here but as

00:04:45,280 --> 00:04:50,379
I said logstash needs his own

00:04:47,830 --> 00:04:54,729
configuration file and this means i

00:04:50,379 --> 00:04:57,759
already aren't at it this means going to

00:04:54,729 --> 00:05:01,960
his own language everyone knows what log

00:04:57,759 --> 00:05:05,979
stash is yeah basically is a tool that

00:05:01,960 --> 00:05:08,610
you can ingest all your data to to

00:05:05,979 --> 00:05:12,099
elasticsearch here it uses the bit input

00:05:08,610 --> 00:05:14,199
which input is basically that the IMP

00:05:12,099 --> 00:05:16,860
the plugin in log stash that lets you

00:05:14,199 --> 00:05:20,620
connect the file width with log stash

00:05:16,860 --> 00:05:22,360
this is hearing to one port that you can

00:05:20,620 --> 00:05:23,830
change it obviously and it has something

00:05:22,360 --> 00:05:27,940
very nice that's the congestion

00:05:23,830 --> 00:05:31,949
threshold here this means if log that is

00:05:27,940 --> 00:05:35,020
too busy because of any reason it tells

00:05:31,949 --> 00:05:37,629
ya which amount of size have a mount of

00:05:35,020 --> 00:05:39,639
time have to be waiting and the file bit

00:05:37,629 --> 00:05:42,849
is very important for this thing because

00:05:39,639 --> 00:05:45,190
file bit is always way it's always going

00:05:42,849 --> 00:05:48,219
to wait so it's never going to lost any

00:05:45,190 --> 00:05:51,270
event that you're trying to send to log

00:05:48,219 --> 00:05:55,810
stash we're going to see this later on

00:05:51,270 --> 00:06:00,639
this filter GPX is actually this thing

00:05:55,810 --> 00:06:04,779
here not this one yeah is this thing

00:06:00,639 --> 00:06:08,110
here this is a custom filter that I made

00:06:04,779 --> 00:06:11,529
myself to actually filter the data that

00:06:08,110 --> 00:06:13,419
we saw before is all of you know all of

00:06:11,529 --> 00:06:17,020
you know how to make a log stash filled

00:06:13,419 --> 00:06:21,580
a log stash plugin so you basically have

00:06:17,020 --> 00:06:24,610
to know a bit of Ruby you get a bunch of

00:06:21,580 --> 00:06:26,770
examples in the log stash client

00:06:24,610 --> 00:06:31,180
organization that you can use to copy

00:06:26,770 --> 00:06:32,650
and paste somehow n yeah you basically I

00:06:31,180 --> 00:06:35,949
have to rice these things like this you

00:06:32,650 --> 00:06:39,580
always in head it from some filter or

00:06:35,949 --> 00:06:41,560
import or whatever class give it a name

00:06:39,580 --> 00:06:43,380
bunch of configuration things yeah I

00:06:41,560 --> 00:06:47,080
basically what this is doing is this

00:06:43,380 --> 00:06:48,820
this stuff here for GPX GPX is one kind

00:06:47,080 --> 00:06:51,820
of xml that you can generate

00:06:48,820 --> 00:06:56,230
it calculates this and it interprets the

00:06:51,820 --> 00:06:58,870
the it loads the GPA the xml file yeah

00:06:56,230 --> 00:07:01,930
same thing for here it calculates the

00:06:58,870 --> 00:07:04,450
distance max speed calories times in

00:07:01,930 --> 00:07:06,730
check timing second piece yeah all the

00:07:04,450 --> 00:07:09,370
processing that's necessary to extract

00:07:06,730 --> 00:07:10,780
this information from here yeah this is

00:07:09,370 --> 00:07:12,550
basically how this filter looks like

00:07:10,780 --> 00:07:19,210
this is obviously on the internet if you

00:07:12,550 --> 00:07:21,700
want to play with it yeah and then it's

00:07:19,210 --> 00:07:25,090
gonna outputting the stuff to do a

00:07:21,700 --> 00:07:27,190
elastic search um so one important thing

00:07:25,090 --> 00:07:29,550
from here if you use log stash in

00:07:27,190 --> 00:07:32,920
production or in your environment

00:07:29,550 --> 00:07:36,250
logstash provides a default template the

00:07:32,920 --> 00:07:40,720
default template is good but my best tip

00:07:36,250 --> 00:07:42,790
for you is don't use it try to use your

00:07:40,720 --> 00:07:46,900
own because the fall template is there

00:07:42,790 --> 00:07:49,900
for a general case and you all know your

00:07:46,900 --> 00:07:52,540
particular case and how to create your

00:07:49,900 --> 00:07:55,570
own mappings and your old things are ya

00:07:52,540 --> 00:07:58,090
to be more efficient so bestest by

00:07:55,570 --> 00:07:59,710
advice is try to use your own and here

00:07:58,090 --> 00:08:07,740
is how you can actually override your

00:07:59,710 --> 00:08:11,290
template yeah oops let's not scrub this

00:08:07,740 --> 00:08:13,240
this whole template looks like i'm not

00:08:11,290 --> 00:08:14,920
going to go through it but basically why

00:08:13,240 --> 00:08:16,570
i created the new template is to explain

00:08:14,920 --> 00:08:19,990
this that you should create your own and

00:08:16,570 --> 00:08:23,680
basically because i got some properties

00:08:19,990 --> 00:08:26,230
here that are required to be like geo

00:08:23,680 --> 00:08:30,870
points because the six mls have 20

00:08:26,230 --> 00:08:38,260
points on it that i want to map somehow

00:08:30,870 --> 00:08:40,900
yeah so before we move forward we

00:08:38,260 --> 00:08:43,990
actually need to cut to the one thing

00:08:40,900 --> 00:08:55,140
that's very important clocks ash plugins

00:08:43,990 --> 00:08:55,140
install plugins folder

00:08:57,520 --> 00:09:03,380
what I'm doing here I'm trying to

00:09:00,470 --> 00:09:06,080
install this GPX custom filter that we

00:09:03,380 --> 00:09:07,970
saw before we have too many options to

00:09:06,080 --> 00:09:10,460
intersect in log stash we can install it

00:09:07,970 --> 00:09:12,770
from a gem from a local file system we

00:09:10,460 --> 00:09:15,440
can insulate from you from Ruby gems on

00:09:12,770 --> 00:09:18,350
the internet we can install offline the

00:09:15,440 --> 00:09:20,030
stuff yeah so we got you more or less

00:09:18,350 --> 00:09:24,490
covered for all the situations that you

00:09:20,030 --> 00:09:32,990
can did you want to install your plugins

00:09:24,490 --> 00:09:35,920
basically install this plugin here yeah

00:09:32,990 --> 00:09:44,630
run successful so now we can tell

00:09:35,920 --> 00:09:46,280
logstash to run and he's going to take a

00:09:44,630 --> 00:09:49,010
bit of time because it's Java you know

00:09:46,280 --> 00:09:56,720
so you have to wait and it's going to

00:09:49,010 --> 00:09:58,390
run yes so we got elasticsearch up and

00:09:56,720 --> 00:10:01,880
running we got this thing up and running

00:09:58,390 --> 00:10:09,920
net input next important stuff to get on

00:10:01,880 --> 00:10:13,370
s file bit file weight comes like the

00:10:09,920 --> 00:10:17,690
other guys in a tar.gz LPM Deb it comes

00:10:13,370 --> 00:10:19,510
super for windows for many things you

00:10:17,690 --> 00:10:24,800
see donate I already entered this

00:10:19,510 --> 00:10:26,330
important things to see here is this

00:10:24,800 --> 00:10:28,880
stuff so far we'd get a set of

00:10:26,330 --> 00:10:32,090
prospectors that basically means the

00:10:28,880 --> 00:10:36,140
data that is going to process here what

00:10:32,090 --> 00:10:38,890
i'm doing here is i tol file bit to read

00:10:36,140 --> 00:10:42,820
a bunch of files you know a pattern

00:10:38,890 --> 00:10:45,380
that's us that is 36 in this directory

00:10:42,820 --> 00:10:47,030
you've got it as it works on Windows you

00:10:45,380 --> 00:10:49,820
can do the same thing on windows yeah

00:10:47,030 --> 00:10:51,320
you don't have to do the extension you

00:10:49,820 --> 00:10:54,950
can do this aesthetics like everyone

00:10:51,320 --> 00:11:00,500
yeah you can use encoding you can give

00:10:54,950 --> 00:11:02,780
it a type and best things ever here

00:11:00,500 --> 00:11:05,010
actually because it's something I really

00:11:02,780 --> 00:11:08,390
like this

00:11:05,010 --> 00:11:11,220
stuff here this is the multi-line filter

00:11:08,390 --> 00:11:14,040
multiline been in log stash a pain a

00:11:11,220 --> 00:11:16,380
real pain because for multi line what is

00:11:14,040 --> 00:11:18,780
important is that you get the sense of

00:11:16,380 --> 00:11:21,810
the identity because you get a bunch of

00:11:18,780 --> 00:11:26,190
lines and you have to reunite them after

00:11:21,810 --> 00:11:29,370
all right yeah this is so if you do

00:11:26,190 --> 00:11:31,280
multi-line best advice for you is to it

00:11:29,370 --> 00:11:35,210
at the source level because in this case

00:11:31,280 --> 00:11:37,590
file bit when it's reading the xml knows

00:11:35,210 --> 00:11:40,080
the identity knows i'm reading a file

00:11:37,590 --> 00:11:41,970
i'm starting this stuff here and i'm

00:11:40,080 --> 00:11:44,400
reading a bunch of lines and i know this

00:11:41,970 --> 00:11:47,640
file ends it's better to do this multi

00:11:44,400 --> 00:11:50,930
line staff at the source then doing it

00:11:47,640 --> 00:11:54,000
you know add at the log stash level

00:11:50,930 --> 00:11:57,150
because yeah multi-line a multi-line in

00:11:54,000 --> 00:11:59,220
here can be easily done more or less so

00:11:57,150 --> 00:12:04,490
what this is doing this is actually

00:11:59,220 --> 00:12:07,500
looking for a pattern xml is saying that

00:12:04,490 --> 00:12:09,900
much after this you can do several i

00:12:07,500 --> 00:12:13,590
stir this is here an important thing

00:12:09,900 --> 00:12:16,410
that i changed the default is the max

00:12:13,590 --> 00:12:18,120
lines so that is a somehow have to be

00:12:16,410 --> 00:12:20,460
this maximum lines that are combined it

00:12:18,120 --> 00:12:26,940
in one in one event but my xml czar huge

00:12:20,460 --> 00:12:28,590
so i need to change it somehow yeah is

00:12:26,940 --> 00:12:30,720
there are questions you can interrupt

00:12:28,590 --> 00:12:34,830
don't worry um but i'm going to move

00:12:30,720 --> 00:12:37,140
forward so best advice from here and dip

00:12:34,830 --> 00:12:39,210
from here is if you do multi line to the

00:12:37,140 --> 00:12:43,140
third level file be it is your friend

00:12:39,210 --> 00:12:45,570
for this multi line is a pain because

00:12:43,140 --> 00:12:47,220
every stack trace looks different and

00:12:45,570 --> 00:12:51,770
every kind of multiliner been looks

00:12:47,220 --> 00:12:55,050
different so don't hesitate to

00:12:51,770 --> 00:12:58,080
contribute this to the information

00:12:55,050 --> 00:13:00,870
talked to the logs allowed to the file

00:12:58,080 --> 00:13:03,930
bit repository to discuss forums because

00:13:00,870 --> 00:13:05,910
as much kind as much different stack

00:13:03,930 --> 00:13:08,730
traces or multi-line events that we have

00:13:05,910 --> 00:13:11,250
we can compile more information about

00:13:08,730 --> 00:13:16,110
these patterns and actually make them

00:13:11,250 --> 00:13:17,470
available for all of you yeah so how do

00:13:16,110 --> 00:13:22,750
you run this

00:13:17,470 --> 00:13:26,290
oh no catch again so basically like this

00:13:22,750 --> 00:13:30,640
valve it is a command is a binary right

00:13:26,290 --> 00:13:32,950
inning go that yeah you can just execute

00:13:30,640 --> 00:13:35,650
and runs file with it's going to keep a

00:13:32,950 --> 00:13:37,600
file called lot file bit that's going to

00:13:35,650 --> 00:13:40,030
be like the registry that's taking care

00:13:37,600 --> 00:13:44,440
to know what things happen and how this

00:13:40,030 --> 00:13:51,010
stuff is evolving as we see here it

00:13:44,440 --> 00:13:54,100
should work ah you see here we see some

00:13:51,010 --> 00:13:56,860
dots these odds are a good sign because

00:13:54,100 --> 00:14:01,150
this means that is a processing some

00:13:56,860 --> 00:14:03,370
stuff yeah this is important one thing

00:14:01,150 --> 00:14:06,910
that I hope you we see Sonja is this one

00:14:03,370 --> 00:14:10,570
here so as far as the XML processing is

00:14:06,910 --> 00:14:13,630
a slow yeah it takes a lot of time for

00:14:10,570 --> 00:14:16,090
the log stash to process and to get ltd

00:14:13,630 --> 00:14:18,700
n so this is giving you this warning is

00:14:16,090 --> 00:14:20,560
telling you there is a secret breaker in

00:14:18,700 --> 00:14:25,330
the input that del that tells you I'm

00:14:20,560 --> 00:14:27,160
very busy and tells the gap the file bit

00:14:25,330 --> 00:14:29,560
you have to what you have to wait your

00:14:27,160 --> 00:14:32,320
closing connections and I'm making sure

00:14:29,560 --> 00:14:34,120
that the pipeline gets all the

00:14:32,320 --> 00:14:39,880
information processed before you can

00:14:34,120 --> 00:14:44,050
continue yeah make sense so now we got

00:14:39,880 --> 00:14:47,980
all this set up and last but not least

00:14:44,050 --> 00:14:50,410
important bit because we want to

00:14:47,980 --> 00:14:57,790
actually make some nice dashboard is

00:14:50,410 --> 00:15:00,310
giovanna giovanna comes with like the

00:14:57,790 --> 00:15:02,640
all the rest of the stack or in many

00:15:00,310 --> 00:15:06,700
flavors but i'm going to use the 30 set

00:15:02,640 --> 00:15:08,590
because it is one qivana is is all of

00:15:06,700 --> 00:15:12,910
you knows about Kiana anyone doesn't

00:15:08,590 --> 00:15:16,570
know about cabana no one knows about

00:15:12,910 --> 00:15:19,720
Havana I'm surprised no one knows of a

00:15:16,570 --> 00:15:22,600
Cabana yeah so with cabana you can make

00:15:19,720 --> 00:15:24,720
dashboards that are basically yeah the

00:15:22,600 --> 00:15:27,940
best things to understands your data

00:15:24,720 --> 00:15:29,950
because we all love Jason we all love

00:15:27,940 --> 00:15:31,209
log lines button of the day we need some

00:15:29,950 --> 00:15:33,779
nice pictures

00:15:31,209 --> 00:15:36,369
understand how these things evolve yeah

00:15:33,779 --> 00:15:40,119
cabana comes in many flavors because

00:15:36,369 --> 00:15:42,519
this is an OTS application so you have

00:15:40,119 --> 00:15:45,369
to download your own packet for Darwin

00:15:42,519 --> 00:15:49,209
as I made or Linux or Windows yeah on

00:15:45,369 --> 00:15:55,949
everything in cabana is real easy to

00:15:49,209 --> 00:16:00,040
execute vin cabana and he will start

00:15:55,949 --> 00:16:04,119
hopefully yeah and it always listens to

00:16:00,040 --> 00:16:05,649
this port to the 5601 you can change it

00:16:04,119 --> 00:16:15,009
obviously in the configuration to draw

00:16:05,649 --> 00:16:19,240
but yeah and if we go here nope if we go

00:16:15,009 --> 00:16:22,209
here and we like this give a nice

00:16:19,240 --> 00:16:39,610
working welcome this is so keep on a 50

00:16:22,209 --> 00:16:41,410
looks like one second ah yeah important

00:16:39,610 --> 00:16:45,189
things on cabana you have to tell cabana

00:16:41,410 --> 00:16:47,110
from which index you are reading so this

00:16:45,189 --> 00:16:50,019
is this important bit here like blogs

00:16:47,110 --> 00:16:52,480
dash dash and this asterisk this means

00:16:50,019 --> 00:16:56,799
cabana is going to take all the log

00:16:52,480 --> 00:16:58,689
stash dash indexes as you know in log

00:16:56,799 --> 00:17:02,589
stash by default we create an index per

00:16:58,689 --> 00:17:06,819
day this is a very important tip as you

00:17:02,589 --> 00:17:09,189
create this date based in excess when

00:17:06,819 --> 00:17:11,140
something is too old you can just simply

00:17:09,189 --> 00:17:13,929
close it and put it to a call the

00:17:11,140 --> 00:17:15,850
storage etc yeah so for time based data

00:17:13,929 --> 00:17:18,490
is very important to follow this pattern

00:17:15,850 --> 00:17:20,559
we create this in exponent and we see

00:17:18,490 --> 00:17:25,839
like you know all this is schema schema

00:17:20,559 --> 00:17:28,149
has been loaded here okay so now we

00:17:25,839 --> 00:17:33,010
started the demo we will let the demo go

00:17:28,149 --> 00:17:35,909
through it and we will yeah continue

00:17:33,010 --> 00:17:40,320
with some explanations here just let me

00:17:35,909 --> 00:17:40,320
oops what happened now yeah

00:17:42,419 --> 00:17:50,280
so while the demo is running we will

00:17:47,049 --> 00:17:50,280
make cure

00:17:56,230 --> 00:18:03,340
we let the demo work for a bit and we

00:17:59,980 --> 00:18:05,500
continue trying to tell you what is

00:18:03,340 --> 00:18:06,880
cooking in log stash and the rest of the

00:18:05,500 --> 00:18:09,280
stack yeah it takes a while to process

00:18:06,880 --> 00:18:13,270
that's huge amount of XML it's my last

00:18:09,280 --> 00:18:15,910
year of training this means a lot so

00:18:13,270 --> 00:18:17,830
what's cooking in log stash 520 most

00:18:15,910 --> 00:18:21,160
important thing ever that happened

00:18:17,830 --> 00:18:23,830
recently is metrics one of the biggest

00:18:21,160 --> 00:18:25,600
complaint for log stash is why log stash

00:18:23,830 --> 00:18:27,100
is not working what is throughput that

00:18:25,600 --> 00:18:29,980
happened that's going through the whole

00:18:27,100 --> 00:18:32,080
pipelines so we introduced it matrix to

00:18:29,980 --> 00:18:33,910
provide you basically initial answers to

00:18:32,080 --> 00:18:36,520
all these questions what's the current

00:18:33,910 --> 00:18:38,559
through put this information is broken

00:18:36,520 --> 00:18:41,710
by plugging instance so you can actually

00:18:38,559 --> 00:18:45,929
know if one plugging is being extremely

00:18:41,710 --> 00:18:48,790
lazy like my xml filter you know you can

00:18:45,929 --> 00:18:52,059
ask a log stash about the memory

00:18:48,790 --> 00:18:56,770
consumption so you can you know be sure

00:18:52,059 --> 00:18:59,110
that you are maybe gonna be oom you can

00:18:56,770 --> 00:19:01,480
ask for the hot threads this is very

00:18:59,110 --> 00:19:04,630
important because if something is a

00:19:01,480 --> 00:19:07,090
stale or yeah it's not willing to do any

00:19:04,630 --> 00:19:11,890
more work you can look here look it here

00:19:07,090 --> 00:19:14,429
n not now but on the filter lock status

00:19:11,890 --> 00:19:17,860
will have many nodes because you can

00:19:14,429 --> 00:19:19,990
have 2 3 100 different locks lashes

00:19:17,860 --> 00:19:23,559
together and we are working on on

00:19:19,990 --> 00:19:28,299
feeders to actually yeah let them

00:19:23,559 --> 00:19:30,700
communicate somehow this is how the ipi

00:19:28,299 --> 00:19:34,090
looks like so it's basically like a Web

00:19:30,700 --> 00:19:36,760
API Jason yes Jason base if you used

00:19:34,090 --> 00:19:39,910
have ever used the elastic search web

00:19:36,760 --> 00:19:41,980
api this looks similar as similar as

00:19:39,910 --> 00:19:45,730
possible yeah we get hot collect

00:19:41,980 --> 00:19:47,460
information like this we get a start one

00:19:45,730 --> 00:19:51,370
important thing that we introduce is

00:19:47,460 --> 00:19:53,830
this end kind of event the terminal

00:19:51,370 --> 00:19:55,510
thing here so this is stat a resource is

00:19:53,830 --> 00:19:58,090
going to give you all the start of the

00:19:55,510 --> 00:20:00,150
note and for every key you can actually

00:19:58,090 --> 00:20:03,640
narrow down if you just want the event

00:20:00,150 --> 00:20:06,400
you get JVM information you get plugins

00:20:03,640 --> 00:20:07,659
information yeah because you want to

00:20:06,400 --> 00:20:10,029
know for example which kind of plugins

00:20:07,659 --> 00:20:11,590
you have installed or

00:20:10,029 --> 00:20:15,999
the throughput that happens in in a

00:20:11,590 --> 00:20:21,419
given plugging or not this is how the

00:20:15,999 --> 00:20:24,099
the hot set API looks like yep we see

00:20:21,419 --> 00:20:27,460
percentage of scipio time the state of

00:20:24,099 --> 00:20:30,580
the thread the stack trace same thing

00:20:27,460 --> 00:20:33,389
here if you ever use or consume the hot

00:20:30,580 --> 00:20:36,190
threads API for 4 from elasticsearch

00:20:33,389 --> 00:20:38,859
this does basically similar thing

00:20:36,190 --> 00:20:40,840
because we are here in JRuby world we

00:20:38,859 --> 00:20:42,369
need to take some to do down change some

00:20:40,840 --> 00:20:44,979
stuff but it's doing basically same

00:20:42,369 --> 00:20:48,940
thing one nice thing from this stuff

00:20:44,979 --> 00:20:51,309
here it is that it especially for this

00:20:48,940 --> 00:20:54,369
one but its correlates to another two

00:20:51,309 --> 00:20:57,129
other stuff tolerate the ice too we have

00:20:54,369 --> 00:20:59,710
this human interface his human parameter

00:20:57,129 --> 00:21:01,929
so if you just put here the human

00:20:59,710 --> 00:21:05,649
parameter to this API it gives you plain

00:21:01,929 --> 00:21:07,899
tex if not it if you Jason because a

00:21:05,649 --> 00:21:10,149
good idea would be to actually for

00:21:07,899 --> 00:21:12,849
example apologies from your log stash

00:21:10,149 --> 00:21:15,519
locks sorry Joe from your luggage API

00:21:12,849 --> 00:21:18,099
and and try to monitor if you log stash

00:21:15,519 --> 00:21:24,219
is still alive or yeah and sinner

00:21:18,099 --> 00:21:26,529
through board is it ready draw and not

00:21:24,219 --> 00:21:29,799
but not least last but not least app

00:21:26,529 --> 00:21:32,080
this is what's coming next so we make

00:21:29,799 --> 00:21:35,039
this Web API and for now is just

00:21:32,080 --> 00:21:38,109
reporting from one one single log stash

00:21:35,039 --> 00:21:40,029
this means that it's not storing any

00:21:38,109 --> 00:21:42,969
data is just telling you the current

00:21:40,029 --> 00:21:45,789
pipeline studs Korean instalok such a

00:21:42,969 --> 00:21:47,919
strategy Hydra but on the feeder we want

00:21:45,789 --> 00:21:50,919
to actually get this data sent to

00:21:47,919 --> 00:21:55,389
elasticsearch node end of the day this

00:21:50,919 --> 00:22:01,859
means we have we can have the marble or

00:21:55,389 --> 00:22:01,859
monitoring for for log stash here yeah

00:22:02,940 --> 00:22:08,879
questions about the API no questions

00:22:10,190 --> 00:22:16,850
next important bit for logstash the

00:22:14,659 --> 00:22:21,019
change it recently is configuration

00:22:16,850 --> 00:22:22,460
management whoever had the problem in

00:22:21,019 --> 00:22:25,309
logstash configuration like a grog

00:22:22,460 --> 00:22:28,879
filter that need to be updated and need

00:22:25,309 --> 00:22:31,210
to stop blocks that will change the

00:22:28,879 --> 00:22:33,580
configuration start locs touch again

00:22:31,210 --> 00:22:38,240
discover that the pattern is wrong

00:22:33,580 --> 00:22:42,460
iterate iterate iterate I know this is a

00:22:38,240 --> 00:22:48,139
pain so what we did is we introduced

00:22:42,460 --> 00:22:50,809
configure loading this means in 520 you

00:22:48,139 --> 00:22:53,299
get a config file that if you change

00:22:50,809 --> 00:22:56,090
something in this config file log stash

00:22:53,299 --> 00:22:58,070
is have a watchdog that's trying to see

00:22:56,090 --> 00:23:00,980
when change it and reloading the

00:22:58,070 --> 00:23:04,309
pipeline it basically takes care that

00:23:00,980 --> 00:23:06,740
the current pipeline is a stop that's

00:23:04,309 --> 00:23:10,279
the config validation and if everything

00:23:06,740 --> 00:23:14,690
is correct it's restart himself you can

00:23:10,279 --> 00:23:17,389
trigger with a sick up your some yea it

00:23:14,690 --> 00:23:21,610
is was it this was introduced into the

00:23:17,389 --> 00:23:24,919
three but you need to update it yourself

00:23:21,610 --> 00:23:30,850
you need to adjust enable yourself this

00:23:24,919 --> 00:23:36,289
this feeder yeah so very important stuff

00:23:30,850 --> 00:23:37,820
for the pipeline configure loading yep

00:23:36,289 --> 00:23:40,330
so you don't need to actually restart

00:23:37,820 --> 00:23:40,330
anymore

00:23:41,190 --> 00:23:45,280
another stuff that's very important in

00:23:43,570 --> 00:23:50,080
that actually the computer loading is

00:23:45,280 --> 00:23:56,010
the first step is how do you share this

00:23:50,080 --> 00:23:57,970
configuration so yeah oops Oh Tori

00:23:56,010 --> 00:24:02,470
transitions in the slider the worst

00:23:57,970 --> 00:24:05,710
thing ever so you get your collection of

00:24:02,470 --> 00:24:09,309
flux ashes and this is coming this is

00:24:05,710 --> 00:24:11,799
still not in master or any branch this

00:24:09,309 --> 00:24:14,049
is coming but the idea so after you get

00:24:11,799 --> 00:24:17,140
config you loading is you get a config

00:24:14,049 --> 00:24:19,150
file yeah that you share by many come by

00:24:17,140 --> 00:24:22,270
many lock stashes so you can actually

00:24:19,150 --> 00:24:27,270
create something here upload your

00:24:22,270 --> 00:24:31,809
configuration to elasticsearch and then

00:24:27,270 --> 00:24:36,039
you send this configuration to the your

00:24:31,809 --> 00:24:39,700
collection of log stashes yeah this

00:24:36,039 --> 00:24:41,559
means yeah then when they get this new

00:24:39,700 --> 00:24:43,179
file this new configuration they can

00:24:41,559 --> 00:24:45,730
apply it because you get computer

00:24:43,179 --> 00:24:48,280
loading and you are basically doing this

00:24:45,730 --> 00:24:50,440
conflict management thing for for log

00:24:48,280 --> 00:24:52,720
stash because another pain in config in

00:24:50,440 --> 00:24:57,250
when you manage a huge amount of

00:24:52,720 --> 00:24:59,919
collection of of log stashes is how do

00:24:57,250 --> 00:25:06,429
you update I know three or four

00:24:59,919 --> 00:25:09,400
configurations all at once next

00:25:06,429 --> 00:25:14,590
important beat that change it presently

00:25:09,400 --> 00:25:20,440
to is the Java event so all of you Bluff

00:25:14,590 --> 00:25:22,809
Ruby I guess in a hope but Ruby and it's

00:25:20,440 --> 00:25:24,490
still you know like this supermagic

00:25:22,809 --> 00:25:27,850
language that lets you do a lot of

00:25:24,490 --> 00:25:30,400
things but in our case in log stash is

00:25:27,850 --> 00:25:33,250
living on top of the JVM so if you want

00:25:30,400 --> 00:25:35,860
to get more speed you have to go down to

00:25:33,250 --> 00:25:38,230
the JVM to the pure java this is what we

00:25:35,860 --> 00:25:41,080
try to do here but not just because of

00:25:38,230 --> 00:25:44,700
speed and performance we try to do it

00:25:41,080 --> 00:25:47,830
because not everyone is a ruby lover

00:25:44,700 --> 00:25:49,870
some of you like Scala some of you might

00:25:47,830 --> 00:25:53,200
like closure or some of you might like

00:25:49,870 --> 00:25:54,490
Python what happens if we go down to the

00:25:53,200 --> 00:25:57,370
Java level

00:25:54,490 --> 00:26:00,250
enable people to create plugins in the

00:25:57,370 --> 00:26:02,530
language they want or they use because

00:26:00,250 --> 00:26:06,670
if you are in a in a company that have

00:26:02,530 --> 00:26:08,500
full of Jebel expertise you maybe not

00:26:06,670 --> 00:26:12,370
feel so comfortable to create your if

00:26:08,500 --> 00:26:14,530
your your your filters with Ruby this

00:26:12,370 --> 00:26:17,440
was introduced into the tree was

00:26:14,530 --> 00:26:20,820
reverted into the three third one and is

00:26:17,440 --> 00:26:23,200
on track for 520 why it was reverted

00:26:20,820 --> 00:26:26,400
because one of the things that we

00:26:23,200 --> 00:26:30,850
introduced with the Java event is

00:26:26,400 --> 00:26:32,950
mutation constraints in the Ruby wall we

00:26:30,850 --> 00:26:37,059
like to mutate everything you know and

00:26:32,950 --> 00:26:40,120
but yeah as the ones who likes who like

00:26:37,059 --> 00:26:42,640
some functional programming mutation is

00:26:40,120 --> 00:26:44,559
not good so every time you mutate your

00:26:42,640 --> 00:26:46,990
event you have to be aware that you

00:26:44,559 --> 00:26:48,850
mutate your event because otherwise you

00:26:46,990 --> 00:26:51,640
can introduce slightly different changes

00:26:48,850 --> 00:26:53,559
maybe a datatype change maybe yeah

00:26:51,640 --> 00:26:55,450
something else and then you get problems

00:26:53,559 --> 00:26:59,470
so one of the things that we are working

00:26:55,450 --> 00:27:02,470
very hard is to make all this yeah

00:26:59,470 --> 00:27:06,460
events transformations less and less

00:27:02,470 --> 00:27:08,590
painful that's why it was word reverted

00:27:06,460 --> 00:27:11,620
because and one important thing that we

00:27:08,590 --> 00:27:13,990
try to focus our self is only break

00:27:11,620 --> 00:27:16,390
things and measure agent on major

00:27:13,990 --> 00:27:20,050
versions this never been like this in

00:27:16,390 --> 00:27:23,050
log stash I know but we try to keep to

00:27:20,050 --> 00:27:26,200
this so if we if we break something it's

00:27:23,050 --> 00:27:28,050
major version release it obviously

00:27:26,200 --> 00:27:32,950
provides the foundation to the

00:27:28,050 --> 00:27:35,530
persistency we are working very hard to

00:27:32,950 --> 00:27:38,440
deliver persistency for log stash this

00:27:35,530 --> 00:27:41,140
means logstash get an event and keep it

00:27:38,440 --> 00:27:44,730
on disk so you don't have all the events

00:27:41,140 --> 00:27:47,620
in memory that's what happened currently

00:27:44,730 --> 00:27:51,100
yeah and enable not just through be

00:27:47,620 --> 00:27:54,640
plugins this is very important talking

00:27:51,100 --> 00:27:58,390
about performance do you see this thing

00:27:54,640 --> 00:28:01,540
here this is actually from our

00:27:58,390 --> 00:28:05,440
performance side benchmarks that tries

00:28:01,540 --> 00:28:07,630
to benchmarks the the filter filtering

00:28:05,440 --> 00:28:11,980
performance oh

00:28:07,630 --> 00:28:14,650
that's nice our filtering performance

00:28:11,980 --> 00:28:18,460
yeah so this was the jump that happens

00:28:14,650 --> 00:28:23,230
so we get from something like nine

00:28:18,460 --> 00:28:26,410
million events to more than 12 just to

00:28:23,230 --> 00:28:28,510
change the event class because this was

00:28:26,410 --> 00:28:31,300
when the event class change it from Ruby

00:28:28,510 --> 00:28:34,560
to Java you can imagine when we change

00:28:31,300 --> 00:28:37,510
the pipeline execution from Ruby to Java

00:28:34,560 --> 00:28:43,330
so this is kind of growing growing and

00:28:37,510 --> 00:28:51,130
growing this is important and the other

00:28:43,330 --> 00:28:59,290
changes you don't get the joke that's a

00:28:51,130 --> 00:29:01,210
movie called the other offline how many

00:28:59,290 --> 00:29:03,070
of you are doing half of line

00:29:01,210 --> 00:29:05,080
environments as any of you working in a

00:29:03,070 --> 00:29:09,370
big bang that they don't let you install

00:29:05,080 --> 00:29:12,850
stings from the internet yeah so offline

00:29:09,370 --> 00:29:15,370
is really a pain for any system and in

00:29:12,850 --> 00:29:18,580
log stash we introduce it a feature that

00:29:15,370 --> 00:29:21,130
lets you dump all your plugins for mum

00:29:18,580 --> 00:29:24,700
so you get your connected to the

00:29:21,130 --> 00:29:26,560
Internet to the real life logstash you

00:29:24,700 --> 00:29:28,900
install your plugins there and then you

00:29:26,560 --> 00:29:31,000
can dump all your current plugging a

00:29:28,900 --> 00:29:34,810
status to attach to that file or a zip

00:29:31,000 --> 00:29:38,760
file that you can use to install or your

00:29:34,810 --> 00:29:42,190
plugins in the offline environment yes

00:29:38,760 --> 00:29:44,620
another thing that we updated we enabled

00:29:42,190 --> 00:29:47,160
or in facilitated in documentation and

00:29:44,620 --> 00:29:51,040
everything is how to use your custom

00:29:47,160 --> 00:29:52,540
rubygems server because if you are in a

00:29:51,040 --> 00:29:55,750
know in an offline environment you might

00:29:52,540 --> 00:29:57,940
not want to access rubygems that's

00:29:55,750 --> 00:30:01,990
that's a public one but you might want

00:29:57,940 --> 00:30:04,990
to actually access your yeah your local

00:30:01,990 --> 00:30:06,520
gem server here so two things important

00:30:04,990 --> 00:30:09,730
to know you can dump all this offline

00:30:06,520 --> 00:30:11,650
and install your client directly from a

00:30:09,730 --> 00:30:14,110
file system file or you can actually

00:30:11,650 --> 00:30:17,490
insulate from your local or your very

00:30:14,110 --> 00:30:17,490
own plugin repository

00:30:19,750 --> 00:30:29,260
we change it one thing here is not not

00:30:23,560 --> 00:30:32,440
that from 50 on log stash uses the same

00:30:29,260 --> 00:30:36,550
kind of experience for all the elastic

00:30:32,440 --> 00:30:41,250
stack so we change it bin log stash been

00:30:36,550 --> 00:30:43,600
plugin to be bin logstash plugging yeah

00:30:41,250 --> 00:30:45,550
this is important these are the set of

00:30:43,600 --> 00:30:47,920
commands that you can do so if you are

00:30:45,550 --> 00:30:50,140
working in an offline in vitamin you can

00:30:47,920 --> 00:30:51,910
create your pack of plugins you can

00:30:50,140 --> 00:30:54,880
unpack a pack of plugins and you can

00:30:51,910 --> 00:30:57,280
install something local and this is a

00:30:54,880 --> 00:31:00,130
collection of gem files that you can use

00:30:57,280 --> 00:31:06,120
gem servers that you can use to work in

00:31:00,130 --> 00:31:08,620
your offline and vitamin um the pipeline

00:31:06,120 --> 00:31:11,410
as anyone knows where this picture is

00:31:08,620 --> 00:31:13,990
coming from this is the Alaska Pipeline

00:31:11,410 --> 00:31:17,980
who takes all the gas and petrol from

00:31:13,990 --> 00:31:19,870
the Alaska to the US pipeline components

00:31:17,980 --> 00:31:24,850
this is how the pipeline used to look

00:31:19,870 --> 00:31:28,690
like before 2 dot 3 before to the 2 dot

00:31:24,850 --> 00:31:33,340
something how it looks like now is like

00:31:28,690 --> 00:31:35,560
this so we change it from having

00:31:33,340 --> 00:31:38,620
different stages input filter and

00:31:35,560 --> 00:31:42,550
outputs to ask only one stage filter and

00:31:38,620 --> 00:31:45,460
outputs this means that we don't have

00:31:42,550 --> 00:31:48,790
anymore a conflict between filter and

00:31:45,460 --> 00:31:51,790
output and we can scale this unit two

00:31:48,790 --> 00:31:54,640
more so all your configuration got

00:31:51,790 --> 00:31:56,790
changes in the command line level to

00:31:54,640 --> 00:31:59,830
enable this batch processing here

00:31:56,790 --> 00:32:02,050
because this takes batches of a band

00:31:59,830 --> 00:32:05,800
from the input and put it on the output

00:32:02,050 --> 00:32:07,150
yeah this is very important because this

00:32:05,800 --> 00:32:10,360
gives you a lot of more performance

00:32:07,150 --> 00:32:16,450
because there is no need of more context

00:32:10,360 --> 00:32:22,450
switching on the threads etc yeah file

00:32:16,450 --> 00:32:24,760
bit file bit is the successor of log

00:32:22,450 --> 00:32:28,660
stash for water I'm Monica already told

00:32:24,760 --> 00:32:30,940
all of you about it yesterday log stash

00:32:28,660 --> 00:32:33,220
for water is deprecated if you use log

00:32:30,940 --> 00:32:35,860
stash for water move to file bit

00:32:33,220 --> 00:32:39,610
simple to enable this transition

00:32:35,860 --> 00:32:42,460
bayberry be less painful we enabled the

00:32:39,610 --> 00:32:46,450
file bit input to actually listen to the

00:32:42,460 --> 00:32:48,610
same protocol in the same port so we are

00:32:46,450 --> 00:32:52,539
working very hard to make this

00:32:48,610 --> 00:32:54,549
transition very easy for you logstash 45

00:32:52,539 --> 00:32:56,650
bit is right in and go as a general

00:32:54,549 --> 00:33:00,220
configuration file is here for you in

00:32:56,650 --> 00:33:02,409
there p.m. Linux etc has similar

00:33:00,220 --> 00:33:05,230
features from loksat for water it's in

00:33:02,409 --> 00:33:07,630
Seita directly to elasticsearch so you

00:33:05,230 --> 00:33:10,929
don't have to go for sugar only to log

00:33:07,630 --> 00:33:14,260
stash but you can go to log stash if you

00:33:10,929 --> 00:33:17,260
want it has security ICT PSD ls4

00:33:14,260 --> 00:33:18,789
logstash etc and this is what I show you

00:33:17,260 --> 00:33:22,380
before this holder configuration looked

00:33:18,789 --> 00:33:24,970
like including the multi-line pattern

00:33:22,380 --> 00:33:26,559
pieces so the output looks like I didn't

00:33:24,970 --> 00:33:29,710
show it before but you can actually send

00:33:26,559 --> 00:33:32,320
stuff to log stash or sent the stuff

00:33:29,710 --> 00:33:34,480
directly to to elasticsearch i'm not

00:33:32,320 --> 00:33:38,500
sure if you all know but elasticsearch

00:33:34,480 --> 00:33:40,809
got the inches note ingest note is

00:33:38,500 --> 00:33:46,179
basically the power of log stash filters

00:33:40,809 --> 00:33:48,940
going to elasticsearch so maybe for your

00:33:46,179 --> 00:33:52,120
use case you already got Jason you move

00:33:48,940 --> 00:33:54,309
this JSON through file bit directly to

00:33:52,120 --> 00:33:58,360
elasticsearch and do the processing king

00:33:54,309 --> 00:34:02,500
thing here yeah so we get you many ways

00:33:58,360 --> 00:34:03,610
of putting data to elasticsearch yeah

00:34:02,500 --> 00:34:10,000
this is what I was telling you before

00:34:03,610 --> 00:34:12,099
about the immigration um one thing that

00:34:10,000 --> 00:34:13,929
everyone is aware and why Laxus is so

00:34:12,099 --> 00:34:16,990
great is because we have a ton of

00:34:13,929 --> 00:34:18,820
plugins but a ton of plugins with a very

00:34:16,990 --> 00:34:20,679
small team that needs to key takes care

00:34:18,820 --> 00:34:23,230
of core things to take scale of issues

00:34:20,679 --> 00:34:27,369
etcetera means we cannot maintain

00:34:23,230 --> 00:34:29,800
everything so we enabled the community

00:34:27,369 --> 00:34:32,200
maintenance program this means that

00:34:29,800 --> 00:34:35,950
basically we have to think a lot of

00:34:32,200 --> 00:34:38,349
people that takes ownership of their

00:34:35,950 --> 00:34:40,750
plugins and maintains maybe not just

00:34:38,349 --> 00:34:45,159
their plugins but another ones that are

00:34:40,750 --> 00:34:46,810
community-based and yeah I don't know

00:34:45,159 --> 00:34:50,110
what to say but this is like

00:34:46,810 --> 00:34:51,670
thank you because one of the best thing

00:34:50,110 --> 00:34:56,260
that can happen is that the same

00:34:51,670 --> 00:34:58,720
community is is is self healing or non

00:34:56,260 --> 00:35:01,150
trying to fix stuff here if you are

00:34:58,720 --> 00:35:04,330
interested to become community

00:35:01,150 --> 00:35:08,110
maintainer look for it on the Internet I

00:35:04,330 --> 00:35:11,470
know the URL is not friendly but you can

00:35:08,110 --> 00:35:16,360
google for it and yeah I know that's

00:35:11,470 --> 00:35:19,500
just to say thank you in this slide very

00:35:16,360 --> 00:35:22,300
important slide breaking changes I

00:35:19,500 --> 00:35:25,330
introduced this before with the Java

00:35:22,300 --> 00:35:27,700
event we try to make sure that we don't

00:35:25,330 --> 00:35:33,280
break anything unless you are in a major

00:35:27,700 --> 00:35:37,420
version what changes in 500 new event

00:35:33,280 --> 00:35:38,890
API in 520 we don't let mutation to

00:35:37,420 --> 00:35:41,830
happen in something in terms of

00:35:38,890 --> 00:35:43,810
consensus because mutation is able if

00:35:41,830 --> 00:35:46,900
you had the configuration in log stash

00:35:43,810 --> 00:35:50,320
that did this mutation events that

00:35:46,900 --> 00:35:52,150
happen it this mutation is going to

00:35:50,320 --> 00:35:53,860
break in 530 row so basically you're

00:35:52,150 --> 00:35:56,260
going to start your you're all

00:35:53,860 --> 00:35:59,080
configuration in lakhs and lakhs as

00:35:56,260 --> 00:36:02,410
she's going to complain as i said before

00:35:59,080 --> 00:36:05,320
bin plugin is now log stash plugins we

00:36:02,410 --> 00:36:07,960
require java 8 because i love all of you

00:36:05,320 --> 00:36:11,890
know each other seven is gone the end of

00:36:07,960 --> 00:36:14,140
life yeah another important thing now we

00:36:11,890 --> 00:36:18,760
have fixed for the string interpolation

00:36:14,140 --> 00:36:22,740
problem so before everything was

00:36:18,760 --> 00:36:26,620
converted to string now we are sure that

00:36:22,740 --> 00:36:28,000
you use the right type there so for

00:36:26,620 --> 00:36:31,600
example if you are doing geolocation

00:36:28,000 --> 00:36:34,030
fill the geolocation transformations be

00:36:31,600 --> 00:36:38,710
sure that what your store is an integer

00:36:34,030 --> 00:36:44,590
or a number not actually string we add

00:36:38,710 --> 00:36:48,400
support for xbox xbox is the collection

00:36:44,590 --> 00:36:51,340
of plugins that elastic is working on

00:36:48,400 --> 00:36:54,250
and enable the enabling the community to

00:36:51,340 --> 00:36:57,280
work on alternate to have verticals so

00:36:54,250 --> 00:36:59,860
this means that the idea is that you get

00:36:57,280 --> 00:37:00,790
a pack for monitoring and you get your

00:36:59,860 --> 00:37:03,160
monitoring things

00:37:00,790 --> 00:37:06,700
elasticsearch former afore for cabana

00:37:03,160 --> 00:37:08,730
for loksat I should be too Deidre we

00:37:06,700 --> 00:37:13,090
need to turn off runner runner clean up

00:37:08,730 --> 00:37:17,680
this means basically that don't use the

00:37:13,090 --> 00:37:19,240
Asian option anymore try to yeah we did

00:37:17,680 --> 00:37:23,290
a lot of cleanup because we introduced

00:37:19,240 --> 00:37:25,390
the settings file so we want to move

00:37:23,290 --> 00:37:30,340
stuff that usually happen it in the

00:37:25,390 --> 00:37:33,130
command options to the settings yeah so

00:37:30,340 --> 00:37:36,250
you get more question any question about

00:37:33,130 --> 00:37:43,330
changes in logstash know all of you are

00:37:36,250 --> 00:37:48,490
sleeping or hungry so now let's see how

00:37:43,330 --> 00:37:51,210
this look like here just put the this

00:37:48,490 --> 00:37:51,210
place again

00:37:58,550 --> 00:38:07,000
so how this was going it was going yeah

00:38:03,580 --> 00:38:13,370
no complains created a lot of shards

00:38:07,000 --> 00:38:16,370
yeah loading some stuff here file with

00:38:13,370 --> 00:38:20,450
this processing so important things that

00:38:16,370 --> 00:38:22,790
I wanted to show now is we executed file

00:38:20,450 --> 00:38:25,100
bit from this directory so as I said

00:38:22,790 --> 00:38:28,400
before file we created this file with

00:38:25,100 --> 00:38:30,500
file the one that we saw here this is

00:38:28,400 --> 00:38:34,490
the registry this is basically telling

00:38:30,500 --> 00:38:37,730
that i read this file this source this

00:38:34,490 --> 00:38:40,010
upset in this device design old yeah so

00:38:37,730 --> 00:38:49,600
if making sure that if you stop it you

00:38:40,010 --> 00:38:53,150
can continue let's go to cabana cabana

00:38:49,600 --> 00:38:56,590
so this is cabana 50 we already saw all

00:38:53,150 --> 00:39:00,170
the stuff that happened it's here let's

00:38:56,590 --> 00:39:01,820
if you use qivana is very important to

00:39:00,170 --> 00:39:05,900
keep a word of one thing if you see this

00:39:01,820 --> 00:39:08,600
the sad face do you all see the sad face

00:39:05,900 --> 00:39:12,320
over there it's usually because of the

00:39:08,600 --> 00:39:15,440
time picker we work with some base data

00:39:12,320 --> 00:39:18,470
so in that case i'm seeing the last 15

00:39:15,440 --> 00:39:21,650
minutes here it's hard to see but it

00:39:18,470 --> 00:39:25,550
likes last 15 minutes but I load the

00:39:21,650 --> 00:39:29,300
last year of data so now i select the

00:39:25,550 --> 00:39:31,970
last year in the time picker and i start

00:39:29,300 --> 00:39:38,420
to see some stuff here being loaded if

00:39:31,970 --> 00:39:40,430
my machine responds yeah it takes a

00:39:38,420 --> 00:39:43,580
while because it's my laptop and is very

00:39:40,430 --> 00:39:46,070
old and respectful laptop but yeah you

00:39:43,580 --> 00:39:49,010
see so here we are in the discover side

00:39:46,070 --> 00:39:51,800
of cabana and we start to see the event

00:39:49,010 --> 00:39:56,870
that were loaded important things in

00:39:51,800 --> 00:40:00,290
cabana 50 actually keep on a 50 made the

00:39:56,870 --> 00:40:02,810
right use of space so we don't have any

00:40:00,290 --> 00:40:05,840
more like this big level on top we have

00:40:02,810 --> 00:40:08,360
all the options on the left and we try

00:40:05,840 --> 00:40:11,980
to use all the pixels as wise as poss as

00:40:08,360 --> 00:40:11,980
wise and intelligent as possible

00:40:12,020 --> 00:40:18,140
this is still a JavaScript application a

00:40:15,920 --> 00:40:19,790
client application so if you want to try

00:40:18,140 --> 00:40:24,020
to load like the whole year like I did

00:40:19,790 --> 00:40:27,160
and also it is its second turn time yeah

00:40:24,020 --> 00:40:30,620
important things to remember for cabana

00:40:27,160 --> 00:40:33,800
complete rest style we got something

00:40:30,620 --> 00:40:35,600
cool for cabana 50 thats plugins it's

00:40:33,800 --> 00:40:37,730
actually introduced it in for for the

00:40:35,600 --> 00:40:41,450
three that one this basically means that

00:40:37,730 --> 00:40:43,310
if you have your own dashboard your own

00:40:41,450 --> 00:40:47,000
chart that you want to create for

00:40:43,310 --> 00:40:50,060
example in my case for this we got a

00:40:47,000 --> 00:40:51,920
bunch of languages do then latitude so

00:40:50,060 --> 00:40:54,110
buddy nice to create the plugging that

00:40:51,920 --> 00:40:57,170
shows a map and shows this this route

00:40:54,110 --> 00:40:59,450
somehow you can do it with locks with

00:40:57,170 --> 00:41:01,490
with a cabana five okay with cabana and

00:40:59,450 --> 00:41:04,490
you get the generator so you just need

00:41:01,490 --> 00:41:06,200
to know a bit of JavaScript yeah so this

00:41:04,490 --> 00:41:09,890
is more more or less loading something

00:41:06,200 --> 00:41:22,760
and if I go to the visualize level here

00:41:09,890 --> 00:41:24,590
or yeah demos why'd ya so let's do

00:41:22,760 --> 00:41:30,140
something intelligent now and work with

00:41:24,590 --> 00:41:34,040
Alexis amount of data yeah so we are

00:41:30,140 --> 00:41:40,280
here we not select the last year because

00:41:34,040 --> 00:41:46,550
the browser is getting crazy yeah sorry

00:41:40,280 --> 00:41:51,800
demo gods are not with me today we just

00:41:46,550 --> 00:41:54,140
select the last six months now it's a

00:41:51,800 --> 00:41:56,299
bit more faster

00:41:54,140 --> 00:41:58,069
we select the time frame here we can

00:41:56,299 --> 00:42:00,349
discover the our data we can explore our

00:41:58,069 --> 00:42:03,410
data we can see here in the left the

00:42:00,349 --> 00:42:05,000
different fields that were created but

00:42:03,410 --> 00:42:06,859
we want to create a chart so we can go

00:42:05,000 --> 00:42:09,460
here for example to the visualize and

00:42:06,859 --> 00:42:12,950
when awesome kind of chart is a tile map

00:42:09,460 --> 00:42:15,650
we can go to the dial map here and we

00:42:12,950 --> 00:42:18,109
can yeah we select our index on the left

00:42:15,650 --> 00:42:20,779
one important feature of Cubana that's

00:42:18,109 --> 00:42:24,039
very handful is the searches or the

00:42:20,779 --> 00:42:26,720
filters if you want to narrow down your

00:42:24,039 --> 00:42:29,390
dashboard you can create a search that

00:42:26,720 --> 00:42:32,630
means for example looking for all cities

00:42:29,390 --> 00:42:36,260
that have San Antonio or you can create

00:42:32,630 --> 00:42:38,569
a filter i want to see only the IPS like

00:42:36,260 --> 00:42:41,059
to looks like this i want to see the

00:42:38,569 --> 00:42:42,859
city berlin and the filters are good

00:42:41,059 --> 00:42:46,549
because you can create it enable and

00:42:42,859 --> 00:42:50,299
disable it so for this case i'm going to

00:42:46,549 --> 00:42:54,460
create a tile map chart with coordinates

00:42:50,299 --> 00:42:58,279
yeah i selected your harsh type and i

00:42:54,460 --> 00:42:59,809
just look for the geoip location what

00:42:58,279 --> 00:43:05,990
this is going to show is the city's I

00:42:59,809 --> 00:43:08,119
was actually training and if OOP yeah ah

00:43:05,990 --> 00:43:17,509
I know what happens I did the nail

00:43:08,119 --> 00:43:21,440
enable the internet yeah very bad one of

00:43:17,509 --> 00:43:23,450
the nice things of the of the map that I

00:43:21,440 --> 00:43:27,700
the tile chart it is that you can load

00:43:23,450 --> 00:43:33,259
your own maps so if you have a BMI

00:43:27,700 --> 00:43:36,740
compiler BMI enable map you can do this

00:43:33,259 --> 00:43:39,289
thing here this means that if you don't

00:43:36,740 --> 00:43:43,849
like this but your company got something

00:43:39,289 --> 00:43:47,539
of their own you can do it here you can

00:43:43,849 --> 00:43:50,359
actually create hash maps yeah so now

00:43:47,539 --> 00:43:54,200
let's wanna see this you see now we have

00:43:50,359 --> 00:43:56,509
something awesome yeah what is doing

00:43:54,200 --> 00:44:00,940
this this is the ring account on this

00:43:56,509 --> 00:44:00,940
location so we see like I live in Berlin

00:44:01,089 --> 00:44:09,050
no I live in Berlin

00:44:05,210 --> 00:44:14,060
I used to do some running in Santiago

00:44:09,050 --> 00:44:16,700
and it's not on their time range but the

00:44:14,060 --> 00:44:19,000
time range it actually says something

00:44:16,700 --> 00:44:22,220
that I was running in San Francisco to

00:44:19,000 --> 00:44:24,560
you know on one medical another medical

00:44:22,220 --> 00:44:26,900
figure of this is if we change this to

00:44:24,560 --> 00:44:28,490
this another file here so what is

00:44:26,900 --> 00:44:30,140
activities lab stat points that

00:44:28,490 --> 00:44:33,560
coordinate our the collection of

00:44:30,140 --> 00:44:37,430
coordinates of every run i made so if we

00:44:33,560 --> 00:44:39,590
execute it like this we see basically

00:44:37,430 --> 00:44:47,780
the same thing at the high level but if

00:44:39,590 --> 00:44:52,880
we zoom to the Berlin side we get on a

00:44:47,780 --> 00:44:54,950
spoiler of this you know do you see that

00:44:52,880 --> 00:44:58,880
thing here is basically means what I

00:44:54,950 --> 00:45:00,620
used to run of every morning no so this

00:44:58,880 --> 00:45:02,750
is cool because with this map you can

00:45:00,620 --> 00:45:04,370
actually create different visuals

00:45:02,750 --> 00:45:08,590
different kind of visualization of your

00:45:04,370 --> 00:45:15,410
data another very nice feature of Cabana

00:45:08,590 --> 00:45:19,340
it is the yeah the scoop that fills so

00:45:15,410 --> 00:45:21,740
if you go to your index and you go to

00:45:19,340 --> 00:45:23,690
this Phil here what is scripted fills in

00:45:21,740 --> 00:45:26,540
Havana in Cuba this basically means that

00:45:23,690 --> 00:45:29,240
I got some information coming from my

00:45:26,540 --> 00:45:31,640
elastic search database but what I want

00:45:29,240 --> 00:45:34,070
is to actually do some processing on the

00:45:31,640 --> 00:45:39,350
only visualization level what I'm gonna

00:45:34,070 --> 00:45:42,080
create now is so I'm not a calories

00:45:39,350 --> 00:45:44,360
freak but it's something that people

00:45:42,080 --> 00:45:45,560
like to count the calories at the barn

00:45:44,360 --> 00:45:48,530
in the training because then they can

00:45:45,560 --> 00:45:51,610
eat more chocolate so there is actually

00:45:48,530 --> 00:45:56,990
a function to do this and it's like here

00:45:51,610 --> 00:46:01,840
because I copied to remember it it's

00:45:56,990 --> 00:46:01,840
like this one here oops no drilling yet

00:46:04,150 --> 00:46:11,150
do you see the stuff here so this

00:46:06,530 --> 00:46:14,060
basically means my age this means what

00:46:11,150 --> 00:46:17,000
amount of kilos I weight and my hair

00:46:14,060 --> 00:46:19,450
trade and this is an average to

00:46:17,000 --> 00:46:22,130
calculate your the color is your barn

00:46:19,450 --> 00:46:24,740
pair an activity by the time you are

00:46:22,130 --> 00:46:30,800
doing something this is a formula

00:46:24,740 --> 00:46:32,570
developed by yeah intelligent people but

00:46:30,800 --> 00:46:34,520
is still on average so what i'm doing

00:46:32,570 --> 00:46:36,680
here is creating a script filled that

00:46:34,520 --> 00:46:39,320
for every document is going to create

00:46:36,680 --> 00:46:42,290
something you know doing this applying

00:46:39,320 --> 00:46:43,760
this this math here and yeah in creating

00:46:42,290 --> 00:46:46,070
this new field that only be available in

00:46:43,760 --> 00:46:50,540
Havana be aware of something this is

00:46:46,070 --> 00:46:53,630
slow this is something that you have to

00:46:50,540 --> 00:46:56,410
use with a lot of care because it is

00:46:53,630 --> 00:47:00,140
something that's very resource consuming

00:46:56,410 --> 00:47:02,450
and it uses the leucine expression

00:47:00,140 --> 00:47:04,520
syntax so if you always forget about

00:47:02,450 --> 00:47:09,050
which enough syntax aha should I use

00:47:04,520 --> 00:47:10,820
here is loosing expressions I'm creating

00:47:09,050 --> 00:47:13,730
the field now you see we see color is

00:47:10,820 --> 00:47:16,780
here and we can do something cool that

00:47:13,730 --> 00:47:21,740
we can go to the visualize and we can go

00:47:16,780 --> 00:47:26,080
for example matrix what is no no let's

00:47:21,740 --> 00:47:29,600
do something different um let's go here

00:47:26,080 --> 00:47:33,020
create a new dashboard and create a data

00:47:29,600 --> 00:47:35,869
table so one of the important metrics of

00:47:33,020 --> 00:47:38,840
everyone that's that some sport is how

00:47:35,869 --> 00:47:41,300
much of running to you the per week so

00:47:38,840 --> 00:47:44,030
here we see like the number of events we

00:47:41,300 --> 00:47:49,900
can split the rose with a date histogram

00:47:44,030 --> 00:47:49,900
and rub them up bi-weekly basis

00:47:50,370 --> 00:47:56,070
here counting the number of times of a

00:47:53,430 --> 00:47:57,780
band that happens every week but we can

00:47:56,070 --> 00:48:00,600
change this matrix and add another

00:47:57,780 --> 00:48:08,460
metric for example we can do the average

00:48:00,600 --> 00:48:12,510
of peace so how fast I was going every

00:48:08,460 --> 00:48:20,270
training in average per week we can add

00:48:12,510 --> 00:48:23,520
an automatic that's the average of speed

00:48:20,270 --> 00:48:29,100
average speed that happens every week we

00:48:23,520 --> 00:48:33,360
can sort these things like this weekend

00:48:29,100 --> 00:48:36,300
yeah sort every field here and we spoke

00:48:33,360 --> 00:48:38,730
about the we spoke about the scripted

00:48:36,300 --> 00:48:46,260
filton qivana so we can use them here

00:48:38,730 --> 00:48:47,760
like the average calories yeah and we

00:48:46,260 --> 00:48:50,580
see here the average calories and

00:48:47,760 --> 00:48:52,320
another an awesome chart failure but

00:48:50,580 --> 00:48:53,880
this is basically doing the calculation

00:48:52,320 --> 00:48:59,040
fetching the data and doing the

00:48:53,880 --> 00:49:00,960
calculation for it here yeah this is

00:48:59,040 --> 00:49:03,570
interesting because yeah it's giving you

00:49:00,960 --> 00:49:06,360
a good sense of information and is using

00:49:03,570 --> 00:49:08,400
the different things here another nice

00:49:06,360 --> 00:49:13,110
chart that we can build and another

00:49:08,400 --> 00:49:15,060
awesome feature of Cabana is this thing

00:49:13,110 --> 00:49:17,100
for a bar chart for example let's say I

00:49:15,060 --> 00:49:23,780
want to calculate how many kilometers I

00:49:17,100 --> 00:49:28,710
run per week so I do a date Lisa R am i

00:49:23,780 --> 00:49:34,110
do like weekly I go to the x-axis and I

00:49:28,710 --> 00:49:37,620
do like the sum of distance is here

00:49:34,110 --> 00:49:39,210
activities distance yeah this is

00:49:37,620 --> 00:49:41,780
actually the number of kilometers run

00:49:39,210 --> 00:49:46,800
per week one week 70 another will be 73

00:49:41,780 --> 00:49:49,260
another week 20 another week 18 yeah but

00:49:46,800 --> 00:49:52,620
we got this inner green thing in a green

00:49:49,260 --> 00:49:54,330
color what happened if this maybe is not

00:49:52,620 --> 00:49:56,580
like the number of kilometers but it's

00:49:54,330 --> 00:49:58,920
the number of failures or if something

00:49:56,580 --> 00:50:02,280
is positive and negative so we don't

00:49:58,920 --> 00:50:03,960
want these colors to be you don't want

00:50:02,280 --> 00:50:05,790
the green color to be me

00:50:03,960 --> 00:50:09,500
doing something bad because it couldnt

00:50:05,790 --> 00:50:12,630
is good so you can actually go here and

00:50:09,500 --> 00:50:15,990
tips you can go here and pick up your

00:50:12,630 --> 00:50:18,510
color one of the things that Cabana was

00:50:15,990 --> 00:50:20,700
not kind of good enough isn't picking

00:50:18,510 --> 00:50:23,190
the right color we always go like this

00:50:20,700 --> 00:50:26,520
slightly different reds for two

00:50:23,190 --> 00:50:28,109
different things or yeah red thing for

00:50:26,520 --> 00:50:30,119
something good on the ladies so you can

00:50:28,109 --> 00:50:33,450
change here and now everything is blue

00:50:30,119 --> 00:50:37,440
or everything is like this or like this

00:50:33,450 --> 00:50:39,510
yeah or we keep it like this another

00:50:37,440 --> 00:50:43,589
important thing and that happens in a

00:50:39,510 --> 00:50:46,349
ton of situations is the levels here it

00:50:43,589 --> 00:50:49,109
says in this distillation it says some

00:50:46,349 --> 00:50:50,430
of activities distant but what I want to

00:50:49,109 --> 00:50:55,050
do for example is to say that this is

00:50:50,430 --> 00:50:57,330
distance in kilometers so I can use the

00:50:55,050 --> 00:51:01,650
custom level field to basically change

00:50:57,330 --> 00:51:04,440
this thing here yeah this is kind of

00:51:01,650 --> 00:51:06,930
cool the bareword of one thing this is

00:51:04,440 --> 00:51:09,900
taking just this level here so if you

00:51:06,930 --> 00:51:11,790
get like a multilingual environment you

00:51:09,900 --> 00:51:13,380
cannot do that you have to get only a

00:51:11,790 --> 00:51:15,859
different cabanas four different

00:51:13,380 --> 00:51:21,570
languages in if you want to apply this

00:51:15,859 --> 00:51:26,300
let's save this um here we give it a

00:51:21,570 --> 00:51:29,700
name like you know wake kilometers and

00:51:26,300 --> 00:51:31,290
we go to that word one of the things

00:51:29,700 --> 00:51:35,880
that window here obviously is to add

00:51:31,290 --> 00:51:40,050
this chart stuff so I think all of you

00:51:35,880 --> 00:51:42,630
will relate to my appreciation to this

00:51:40,050 --> 00:51:46,410
feeder because biggest complain for thi

00:51:42,630 --> 00:51:48,570
part is when they're white right because

00:51:46,410 --> 00:51:52,500
we don't want white things we like black

00:51:48,570 --> 00:52:01,190
stuff so Cabana recently introduced it

00:51:52,500 --> 00:52:01,190
in the added options I'm like here

00:52:03,140 --> 00:52:16,520
let's look for this black oh no it's

00:52:12,110 --> 00:52:19,610
dark yeah default that same here yeah so

00:52:16,520 --> 00:52:25,910
we get an option to change the white for

00:52:19,610 --> 00:52:33,380
the black and now our dashboards should

00:52:25,910 --> 00:52:36,170
be black ah well let's get anyone I see

00:52:33,380 --> 00:52:42,710
now ya know it applies the stuff so now

00:52:36,170 --> 00:52:46,940
our dash worked out like I mean it's a

00:52:42,710 --> 00:52:49,010
very small change but very powerful to

00:52:46,940 --> 00:52:55,100
get these things here I especially like

00:52:49,010 --> 00:52:59,090
it yeah things that are important to

00:52:55,100 --> 00:53:01,850
know is in cabana you can export and

00:52:59,090 --> 00:53:03,260
import everything so what I did

00:53:01,850 --> 00:53:04,880
previously because I have a very bad

00:53:03,260 --> 00:53:07,940
memory and obviously due to demos and

00:53:04,880 --> 00:53:11,120
you forget about the stuff so i imported

00:53:07,940 --> 00:53:13,370
i exported my whole set of dashboards

00:53:11,120 --> 00:53:15,500
here but in this case you can actually

00:53:13,370 --> 00:53:18,080
do import and export so if you want to

00:53:15,500 --> 00:53:28,630
import something you go to the import

00:53:18,080 --> 00:53:28,630
stuff yeah and you can go yep so sorry

00:53:32,770 --> 00:53:48,200
here here here yeah well I have

00:53:46,280 --> 00:53:53,240
something missing but you will see it

00:53:48,200 --> 00:53:55,220
now anyways if we denote the stuff you

00:53:53,240 --> 00:53:58,760
see like this created a lot of stuff

00:53:55,220 --> 00:54:01,220
what's missing actually is is in my

00:53:58,760 --> 00:54:04,640
export I created another skill to fill

00:54:01,220 --> 00:54:07,640
that called distance in kilometers so

00:54:04,640 --> 00:54:10,730
that's what it was complaining yeah so

00:54:07,640 --> 00:54:15,589
now we can go here and maybe we can just

00:54:10,730 --> 00:54:17,810
load I know total calories of stuff so

00:54:15,589 --> 00:54:19,550
this is the dash I got a che ora created

00:54:17,810 --> 00:54:20,869
this is very important because I don't

00:54:19,550 --> 00:54:22,910
know how many of you are testing your

00:54:20,869 --> 00:54:25,970
dashboards improv or they go to

00:54:22,910 --> 00:54:27,800
production so in some cases people want

00:54:25,970 --> 00:54:29,390
to test it in a staging environment and

00:54:27,800 --> 00:54:31,280
then they want to move everything and to

00:54:29,390 --> 00:54:36,170
do that you can do this export or you

00:54:31,280 --> 00:54:40,339
can actually dumped your Cabana index so

00:54:36,170 --> 00:54:42,319
this is basically all and end of the day

00:54:40,339 --> 00:54:46,760
your dashboards should look like

00:54:42,319 --> 00:54:48,440
something like this and it's the one

00:54:46,760 --> 00:54:54,020
that's complaining is missing distance

00:54:48,440 --> 00:54:57,349
so yeah but we can actually do it so we

00:54:54,020 --> 00:55:02,450
have time um just look for the formula

00:54:57,349 --> 00:55:04,819
nope this one not so you have like four

00:55:02,450 --> 00:55:06,020
minutes time so yeah I will do this

00:55:04,819 --> 00:55:10,069
formula and then we can have some

00:55:06,020 --> 00:55:14,030
awesome questions or some lunch or food

00:55:10,069 --> 00:55:16,819
for this good too um so you go this here

00:55:14,030 --> 00:55:19,750
you go to the index staff and you create

00:55:16,819 --> 00:55:19,750
a new script and fill

00:55:24,090 --> 00:55:36,520
now we create the field and now our

00:55:27,250 --> 00:55:38,380
dashboards are going to be awesome not

00:55:36,520 --> 00:55:41,500
know picking up anyways no picking up

00:55:38,380 --> 00:55:44,200
the change yeah so this is the default

00:55:41,500 --> 00:55:53,770
including the failure in the script it

00:55:44,200 --> 00:56:03,370
fills stuff and not but not list thank

00:55:53,770 --> 00:56:07,240
you very much so this has been all I did

00:56:03,370 --> 00:56:10,060
my best to the a good demo but so do you

00:56:07,240 --> 00:56:14,650
have any questions or you all are super

00:56:10,060 --> 00:56:19,860
hungry and wanna go get some food no

00:56:14,650 --> 00:56:19,860
questions yeah

00:56:26,769 --> 00:56:33,500
so the question is if it's possible to

00:56:30,049 --> 00:56:35,869
add metadata to your log entries it is

00:56:33,500 --> 00:56:37,789
possible to enrich your event and it's

00:56:35,869 --> 00:56:40,460
possible to query things like elastic

00:56:37,789 --> 00:56:42,859
search and their omq and other systems

00:56:40,460 --> 00:56:56,000
in the filter stage to get more data

00:56:42,859 --> 00:57:00,890
into your event yeah yeah on the browser

00:56:56,000 --> 00:57:02,299
side so it may abide with the scripted

00:57:00,890 --> 00:57:07,400
field is they organized but use it with

00:57:02,299 --> 00:57:08,930
a lot of love and care usually you want

00:57:07,400 --> 00:57:10,760
to do this program put this this /

00:57:08,930 --> 00:57:15,069
competitions before you don't want to do

00:57:10,760 --> 00:57:23,000
it in the browser side more questions

00:57:15,069 --> 00:57:25,910
yeah file bit is the Asian that's going

00:57:23,000 --> 00:57:29,510
to be responsible to send your data to

00:57:25,910 --> 00:57:32,329
the server to the servers as far as i

00:57:29,510 --> 00:57:34,039
know is not possible to parse this time

00:57:32,329 --> 00:57:36,589
stamps like it is with log stash and

00:57:34,039 --> 00:57:42,910
filters but yeah i'm not sure the

00:57:36,589 --> 00:57:47,470
direction of the things more questions

00:57:42,910 --> 00:57:47,470
so be shy you can have questioned i

00:57:48,849 --> 00:57:55,839
think everyone is sangria yeah

00:57:58,210 --> 00:58:13,460
yeah I'm not sure how to answer this but

00:58:10,760 --> 00:58:17,540
we have Monica over there who is going

00:58:13,460 --> 00:58:21,410
to be able to enter for sure yes siree

00:58:17,540 --> 00:58:23,300
the question was if logstash I always

00:58:21,410 --> 00:58:25,250
forget to repeat the questions and he

00:58:23,300 --> 00:58:27,830
asked me for that before so the question

00:58:25,250 --> 00:58:30,110
was in flux that is 58 is able to output

00:58:27,830 --> 00:58:32,720
to elasticsearch and log stash at the

00:58:30,110 --> 00:58:41,200
same time like both in same time and the

00:58:32,720 --> 00:58:41,200
answer is yes thank you more questions

00:58:41,260 --> 00:58:47,440
no more questions yeah

00:58:50,109 --> 00:59:16,670
yeah yes ah yes I know but the only

00:59:15,500 --> 00:59:18,650
bought options that you off with a

00:59:16,670 --> 00:59:27,710
multi-line is is to actually put and

00:59:18,650 --> 00:59:29,900
provide this button so the the the

00:59:27,710 --> 00:59:31,730
situation is you get file with valve it

00:59:29,900 --> 00:59:35,600
is a responsible of harvesting your

00:59:31,730 --> 00:59:37,220
locks so we get the data and if you ask

00:59:35,600 --> 00:59:39,140
him to do the multi-line is going to

00:59:37,220 --> 00:59:41,060
like look for a pattern you know and

00:59:39,140 --> 00:59:43,550
when this pattern again appears like

00:59:41,060 --> 00:59:47,210
compile everything into one line it's

00:59:43,550 --> 00:59:49,040
not going to do xml processing or JSON

00:59:47,210 --> 00:59:51,740
processing in that level in a file with

00:59:49,040 --> 00:59:54,440
option so what happens is if you get the

00:59:51,740 --> 00:59:56,510
wrong XML is either a failure of your

00:59:54,440 --> 00:59:59,650
application level or something you have

00:59:56,510 --> 01:00:03,280
to detect later on after your shipping

00:59:59,650 --> 01:00:05,240
you know what I mean so it's not

01:00:03,280 --> 01:00:07,400
something that file weight is going to

01:00:05,240 --> 01:00:09,350
do in this case is something that you

01:00:07,400 --> 01:00:11,450
have to do like or yourself before or in

01:00:09,350 --> 01:00:16,580
the lock / level when he understand the

01:00:11,450 --> 01:00:18,020
xml and says no it's not a good xml in

01:00:16,580 --> 01:00:20,119
that case it works because i created my

01:00:18,020 --> 01:00:23,000
own examiner's and it was with a lot of

01:00:20,119 --> 01:00:25,010
love there but in the skin that case who

01:00:23,000 --> 01:00:32,930
is going to complain this log stash it's

01:00:25,010 --> 01:00:36,580
not valid yeah food I think food for

01:00:32,930 --> 01:00:36,580
thanks again thank

01:00:39,380 --> 01:00:41,440

YouTube URL: https://www.youtube.com/watch?v=jtRB0FZglis


