Title: OSDC 2017 | Mgmt Config: Autonomous systems by James Shubin
Publication date: 2017-06-02
Playlist: OSDC 2017 | Open Source Data Center Conference
Description: 
	Mgmt is a next gen config management tool that takes a fresh look at existing automation problems. Three of the main design features of the tool include:
* Parallel execution
* Event driven mechanism
* Distributed architecture
This presentation will briefly introduce the tool and spend most of the time presenting and demoing some of the newer features in the project. We'll present some of the new resources (virt, password, etc) new features (libified mgmt, send/recv, DSL) and how these can be used to build autonomous systems. Finally we'll talk about some of the future designs we're planning and make it easy for new users to get involved and help shape the project.
Captions: 
	00:00:10,959 --> 00:00:20,750
you don't like rap then this is for no

00:00:19,189 --> 00:00:22,669
particular reason at all I just have

00:00:20,750 --> 00:00:25,550
random music and stuff on my computer to

00:00:22,669 --> 00:00:30,550
test the mound because you don't want to

00:00:25,550 --> 00:00:32,540
like now in the part way through and

00:00:30,550 --> 00:00:35,899
ever we starts up you

00:00:32,540 --> 00:00:44,449
oh wait to turn that mean I get two or

00:00:35,899 --> 00:00:49,609
three minutes extra you wanna hear

00:00:44,449 --> 00:00:51,679
boring stories yes no okay so this is

00:00:49,609 --> 00:00:53,120
just my dumb story about this music my

00:00:51,679 --> 00:00:53,870
grandmother used to play piano is used

00:00:53,120 --> 00:00:56,769
to play the song

00:00:53,870 --> 00:00:58,999
that's not her event look much older but

00:00:56,769 --> 00:01:00,319
so when she died I kept this counter

00:00:58,999 --> 00:01:02,929
music but no one's ever heard about and

00:01:00,319 --> 00:01:04,760
I started trying to buy some I couldn't

00:01:02,929 --> 00:01:05,979
find me so I posted online and made a

00:01:04,760 --> 00:01:08,300
Wikipedia page for it

00:01:05,979 --> 00:01:09,740
and then after that about six months

00:01:08,300 --> 00:01:12,140
later I started finding copies of it

00:01:09,740 --> 00:01:13,549
online like on eBay and stuff I think

00:01:12,140 --> 00:01:15,560
that happens when people's grandmothers

00:01:13,549 --> 00:01:17,270
die they search on the internet and if

00:01:15,560 --> 00:01:20,270
there's like something in the search

00:01:17,270 --> 00:01:21,829
result they like put it online to buy so

00:01:20,270 --> 00:01:24,079
I started buying up all the copies of

00:01:21,829 --> 00:01:26,180
people would put online to be like buy a

00:01:24,079 --> 00:01:28,520
cleaning dollars it's like twelve hero

00:01:26,180 --> 00:01:30,469
centers and now in the world's largest

00:01:28,520 --> 00:01:33,789
group is completely unknown kiss music

00:01:30,469 --> 00:01:39,590
and now you get to have your tooth so

00:01:33,789 --> 00:01:41,509
completely stupid stories from when I do

00:01:39,590 --> 00:01:44,119
a little fat fire to keep helix topic

00:01:41,509 --> 00:01:48,789
wake you up after lunch i sleeping for

00:01:44,119 --> 00:01:57,829
lunch or no no alright now you're not

00:01:48,789 --> 00:02:00,729
yeah alright fill this you go alright

00:01:57,829 --> 00:02:05,050
welcome back

00:02:00,729 --> 00:02:07,349
our next speaker James should be great

00:02:05,050 --> 00:02:10,720
[Music]

00:02:07,349 --> 00:02:17,290
yeah about the next-generation convict

00:02:10,720 --> 00:02:20,380
management which is all right thank you

00:02:17,290 --> 00:02:22,300
everyone so I hope you don't mind I'm

00:02:20,380 --> 00:02:23,980
gonna sit down part of this talk because

00:02:22,300 --> 00:02:25,780
I want to type and I speak a little

00:02:23,980 --> 00:02:27,010
quickly so if you really lost something

00:02:25,780 --> 00:02:28,239
and you're really really confused let me

00:02:27,010 --> 00:02:29,950
know but otherwise have a lot of

00:02:28,239 --> 00:02:31,150
material I want to cover because I want

00:02:29,950 --> 00:02:31,629
to see what I can do in an hour that's

00:02:31,150 --> 00:02:33,819
not okay

00:02:31,629 --> 00:02:35,500
yes are you confused who's really

00:02:33,819 --> 00:02:37,180
confused just let me know right now I'll

00:02:35,500 --> 00:02:39,099
start off so really quickly my name is

00:02:37,180 --> 00:02:40,450
James I work at Red Hat I work for the

00:02:39,099 --> 00:02:43,209
storage engineering team now so I'm

00:02:40,450 --> 00:02:45,099
helping with automation and I showed you

00:02:43,209 --> 00:02:47,260
this video so am I can you turn down

00:02:45,099 --> 00:02:49,269
that mic one tiny bit more thank you

00:02:47,260 --> 00:02:50,709
that's okay so I'm a hacker I work on

00:02:49,269 --> 00:02:52,239
config management stuff as I said I

00:02:50,709 --> 00:02:53,950
write technical blog called the

00:02:52,239 --> 00:02:55,930
technical volume James who's seen it

00:02:53,950 --> 00:02:56,980
before just raise your hand if you

00:02:55,930 --> 00:02:59,010
haven't seen it just raise your hand

00:02:56,980 --> 00:03:01,390
anyway so I seem really popular go on

00:02:59,010 --> 00:03:03,099
excellent thank you I'm actually

00:03:01,390 --> 00:03:04,569
physiologist by training so if you want

00:03:03,099 --> 00:03:06,609
to talk about cardiology just pinging

00:03:04,569 --> 00:03:07,840
after it's what I used to do and I'm

00:03:06,609 --> 00:03:08,859
really into DevOps so I'm going to talk

00:03:07,840 --> 00:03:11,170
about that can you guys still hear me

00:03:08,859 --> 00:03:12,450
okay there's a little like noise but

00:03:11,170 --> 00:03:15,190
that's okay I think we'll work with it

00:03:12,450 --> 00:03:17,760
anyways so you might remember some of my

00:03:15,190 --> 00:03:20,790
puppet hacks from back in the day

00:03:17,760 --> 00:03:24,750
oh that sounds write it down I'll just

00:03:20,790 --> 00:03:27,329
play that again for you because

00:03:24,750 --> 00:03:28,530
everything's on fire um so I did quite a

00:03:27,329 --> 00:03:31,019
lot of puppet who has no idea what

00:03:28,530 --> 00:03:32,730
puppet is by the way don't be shy who's

00:03:31,019 --> 00:03:33,720
shy and really hates raising their hands

00:03:32,730 --> 00:03:35,489
please let me know where you are

00:03:33,720 --> 00:03:37,349
raise your hands excellent so the

00:03:35,489 --> 00:03:38,730
gentleman in the back so I started

00:03:37,349 --> 00:03:41,640
hacking with puppet quite a long time

00:03:38,730 --> 00:03:43,409
ago I think I got fairly good at it and

00:03:41,640 --> 00:03:45,030
I wanted to really build truly

00:03:43,409 --> 00:03:47,879
autonomous systems I wanted to build

00:03:45,030 --> 00:03:49,920
like really powerful infrastructure has

00:03:47,879 --> 00:03:51,299
code and I sort of announced the stuff

00:03:49,920 --> 00:03:53,129
that I was working on and puppet quite a

00:03:51,299 --> 00:03:54,599
long time ago I built some crazy hacks

00:03:53,129 --> 00:03:56,549
so you can actually build recursion in

00:03:54,599 --> 00:03:57,389
puppet in the puppet DSL probably don't

00:03:56,549 --> 00:03:58,950
want to do this but it was just

00:03:57,389 --> 00:04:00,810
experimenting how far I can push the

00:03:58,950 --> 00:04:02,280
tool the codes at the bottom if you look

00:04:00,810 --> 00:04:04,290
at this you can build this thing where

00:04:02,280 --> 00:04:06,150
puppet runs and the double Forks an

00:04:04,290 --> 00:04:08,250
exact process that waits for the paint

00:04:06,150 --> 00:04:10,049
main puppet to quit and then runs it

00:04:08,250 --> 00:04:12,540
again so you can run multiple puppet

00:04:10,049 --> 00:04:13,920
runs very quickly you actually do need

00:04:12,540 --> 00:04:16,079
to do this when you have more than one

00:04:13,920 --> 00:04:17,070
system that converges together you can

00:04:16,079 --> 00:04:18,690
do this thing where you have timers

00:04:17,070 --> 00:04:20,789
which I also built where you run

00:04:18,690 --> 00:04:22,740
something it does double fork and then

00:04:20,789 --> 00:04:25,199
this gentleman's like you're talking too

00:04:22,740 --> 00:04:26,400
fast slow it down sorry I have so much

00:04:25,199 --> 00:04:28,229
stuff to show you I'm gonna try and slow

00:04:26,400 --> 00:04:30,180
down the good thing is everything I've

00:04:28,229 --> 00:04:31,410
shown you before is online I've logged

00:04:30,180 --> 00:04:33,360
about the stuff so if there's some weird

00:04:31,410 --> 00:04:35,729
thing I missed you can check it online

00:04:33,360 --> 00:04:37,560
and all the materials available yeah so

00:04:35,729 --> 00:04:39,990
timers basically you would start say a

00:04:37,560 --> 00:04:41,370
decoy building and then it would wait

00:04:39,990 --> 00:04:42,990
two hours for the cluster to converge

00:04:41,370 --> 00:04:44,580
then run puppet again that sort of thing

00:04:42,990 --> 00:04:46,800
and you can even build finite state

00:04:44,580 --> 00:04:48,000
machines in puppet which is a little bit

00:04:46,800 --> 00:04:49,530
absurd but if you want to see how this

00:04:48,000 --> 00:04:51,360
works check it out

00:04:49,530 --> 00:04:54,360
all this was really to build more

00:04:51,360 --> 00:04:56,099
powerful automation and I sat down and I

00:04:54,360 --> 00:04:57,449
really sort of had this conversation is

00:04:56,099 --> 00:04:59,370
this the right way to do it

00:04:57,449 --> 00:05:00,889
are these hacks inside a puppet on top

00:04:59,370 --> 00:05:03,960
of a puppet the right way to do things

00:05:00,889 --> 00:05:06,449
anybody don't be shy I call it out yes

00:05:03,960 --> 00:05:08,849
no we have some wheels so let's here's

00:05:06,449 --> 00:05:13,460
the guy who will answer this for me he's

00:05:08,849 --> 00:05:13,460
my friend he's the nope

00:05:16,250 --> 00:05:25,200
have you seen this so the nope guy for

00:05:22,890 --> 00:05:26,280
the video people working by the way you

00:05:25,200 --> 00:05:27,570
don't want to look at me if you're

00:05:26,280 --> 00:05:28,950
recording you probably want to see just

00:05:27,570 --> 00:05:30,660
the slides so everything fun was gonna

00:05:28,950 --> 00:05:32,940
happen on the screen and I'm just going

00:05:30,660 --> 00:05:34,980
to type furiously so basically I sat

00:05:32,940 --> 00:05:36,120
down and I finally took the time to

00:05:34,980 --> 00:05:37,440
build what I thought was the correct

00:05:36,120 --> 00:05:39,540
thing and now we have a thing called

00:05:37,440 --> 00:05:40,740
MGMT we even have stickers so if you're

00:05:39,540 --> 00:05:42,480
really nice and you promise to use them

00:05:40,740 --> 00:05:44,970
come I'll give you a sticker after but

00:05:42,480 --> 00:05:47,310
let's really talk about what the tool is

00:05:44,970 --> 00:05:48,750
about skip this stuff there's three main

00:05:47,310 --> 00:05:50,370
design points of the tool that are the

00:05:48,750 --> 00:05:52,260
core to everything and I'm going to go

00:05:50,370 --> 00:05:55,410
show go through and show these one at a

00:05:52,260 --> 00:05:57,390
time so it sound good I think lunch is

00:05:55,410 --> 00:05:58,740
still working is that sound good alright

00:05:57,390 --> 00:06:00,450
thank you alright so there's three main

00:05:58,740 --> 00:06:02,160
things the first the tool runs in

00:06:00,450 --> 00:06:03,480
parallel which I'll show you where event

00:06:02,160 --> 00:06:04,920
driven so we can respond very quickly

00:06:03,480 --> 00:06:06,690
and sort of know the current state of

00:06:04,920 --> 00:06:07,740
things and we work as a distributed

00:06:06,690 --> 00:06:09,660
system which I'm also going to show you

00:06:07,740 --> 00:06:11,520
so let's just go over here and show you

00:06:09,660 --> 00:06:13,830
the first thing so here's the graph the

00:06:11,520 --> 00:06:15,720
blue boxes represent resources so in

00:06:13,830 --> 00:06:17,310
puppet or Schaaf or any sort of tool you

00:06:15,720 --> 00:06:19,770
have a resource which is a unit of work

00:06:17,310 --> 00:06:22,140
that you want to do the black arrows if

00:06:19,770 --> 00:06:23,790
you can see them okay is are the

00:06:22,140 --> 00:06:25,680
dependencies so that means I want for to

00:06:23,790 --> 00:06:27,810
happen before five and six and so on and

00:06:25,680 --> 00:06:29,490
current tools can only typically run one

00:06:27,810 --> 00:06:31,290
thing at a time so if you look very

00:06:29,490 --> 00:06:32,910
closely there's this red arrow and what

00:06:31,290 --> 00:06:34,650
tools do is they basically do something

00:06:32,910 --> 00:06:36,300
called a topological sort and they just

00:06:34,650 --> 00:06:38,520
run through and they pick one safe path

00:06:36,300 --> 00:06:40,320
through this graph since you can only do

00:06:38,520 --> 00:06:42,330
one thing in time so in this case we do

00:06:40,320 --> 00:06:43,950
one two three four five six and then

00:06:42,330 --> 00:06:45,030
seven just for example but you could

00:06:43,950 --> 00:06:47,670
pick a different path it doesn't matter

00:06:45,030 --> 00:06:49,740
make sense but the truth is what we can

00:06:47,670 --> 00:06:51,540
actually do is if the dependencies are

00:06:49,740 --> 00:06:53,100
correct everything on the Left can

00:06:51,540 --> 00:06:54,420
happen that the same thing as same time

00:06:53,100 --> 00:06:55,770
as everything on the right because

00:06:54,420 --> 00:06:58,140
there's no dependencies between these

00:06:55,770 --> 00:07:00,390
two graphs and one a here once this is

00:06:58,140 --> 00:07:02,160
finished running 2a and 2b can both run

00:07:00,390 --> 00:07:05,250
in parallel and then once they both

00:07:02,160 --> 00:07:07,770
finish 3a can run that makes sense no

00:07:05,250 --> 00:07:09,120
who's come on who's shy don't be shy

00:07:07,770 --> 00:07:10,320
it's going to be fun if you interact

00:07:09,120 --> 00:07:12,420
with me I don't know if you're really

00:07:10,320 --> 00:07:15,960
lost and I talk too fast so you want to

00:07:12,420 --> 00:07:18,120
see a demo of this they're very shy how

00:07:15,960 --> 00:07:19,380
do I do it sass try German thing okay

00:07:18,120 --> 00:07:22,860
sorry about that

00:07:19,380 --> 00:07:25,040
so all right fair enough so I'm going to

00:07:22,860 --> 00:07:25,040
show you

00:07:25,160 --> 00:07:31,340
ah all right cool German hecklers all

00:07:30,230 --> 00:07:33,590
right so I'm going to show you this

00:07:31,340 --> 00:07:35,960
graph here we have three resources here

00:07:33,590 --> 00:07:37,610
each take about 10 seconds to run and we

00:07:35,960 --> 00:07:39,500
have one over here that takes 15 seconds

00:07:37,610 --> 00:07:43,400
run so if we run this at the same time

00:07:39,500 --> 00:07:47,690
how long is it going to take to run how

00:07:43,400 --> 00:07:49,130
long 10 seconds 10 seconds 10 seconds

00:07:47,690 --> 00:07:52,280
and then there's another 15 second one

00:07:49,130 --> 00:07:54,020
here so yeah it'll take 30 seconds right

00:07:52,280 --> 00:07:55,070
because the longest path is the the

00:07:54,020 --> 00:07:55,790
thing that's going to be limiting the

00:07:55,070 --> 00:07:58,400
whole operation

00:07:55,790 --> 00:07:59,870
now MGMT runs continuously so i can

00:07:58,400 --> 00:08:01,520
actually ask it to shut down when the

00:07:59,870 --> 00:08:03,740
graph is converged so I'm going to run

00:08:01,520 --> 00:08:05,960
that over here is that big enough can

00:08:03,740 --> 00:08:07,370
you see that I'm gonna run this graph

00:08:05,960 --> 00:08:10,040
and they have this converged time out

00:08:07,370 --> 00:08:12,140
option equals 5 so I can say hey when

00:08:10,040 --> 00:08:13,670
the graph has converged for 5 seconds

00:08:12,140 --> 00:08:15,410
shut down and I'm going to time this

00:08:13,670 --> 00:08:16,760
whole thing so we'll see how long it

00:08:15,410 --> 00:08:19,460
should take it should take we said 30

00:08:16,760 --> 00:08:23,630
seconds plus 5 for this converge timeout

00:08:19,460 --> 00:08:25,340
how long 35 seconds let's run it so it's

00:08:23,630 --> 00:08:27,320
just starting up you can see that 10

00:08:25,340 --> 00:08:28,490
second thing and that 15 second thing

00:08:27,320 --> 00:08:30,800
are both running at the same time

00:08:28,490 --> 00:08:32,030
they're both going through 10 seconds in

00:08:30,800 --> 00:08:34,729
we should see the first thing finish

00:08:32,030 --> 00:08:36,530
should happen right about now and that

00:08:34,729 --> 00:08:39,229
finishes that second part finishes

00:08:36,530 --> 00:08:41,630
running to 5 seconds after that which is

00:08:39,229 --> 00:08:43,520
just coming up five more seconds after

00:08:41,630 --> 00:08:44,420
that middle piece is going to finish

00:08:43,520 --> 00:08:46,820
running which you'll see at the bottom

00:08:44,420 --> 00:08:48,170
and then that last resource at the very

00:08:46,820 --> 00:08:49,790
bottom if you can see that that's

00:08:48,170 --> 00:08:54,200
starting to run that's going to go

00:08:49,790 --> 00:08:56,420
through 6 7 8 9 10 seconds go by it

00:08:54,200 --> 00:08:59,600
finishes 5 seconds we expect it to shut

00:08:56,420 --> 00:09:01,820
down let's see if that happens it does

00:08:59,600 --> 00:09:05,180
and the whole thing finished running in

00:09:01,820 --> 00:09:07,250
this case about 37 seconds so the whole

00:09:05,180 --> 00:09:09,260
tool is very very efficient very very

00:09:07,250 --> 00:09:12,680
fast two seconds of overhead in this

00:09:09,260 --> 00:09:13,910
case make sense I don't know why tools

00:09:12,680 --> 00:09:16,910
didn't do this before but we're doing

00:09:13,910 --> 00:09:18,980
this so the tools written in going makes

00:09:16,910 --> 00:09:20,120
it very very quick and I got more stuff

00:09:18,980 --> 00:09:24,200
to show you if you're interested

00:09:20,120 --> 00:09:26,300
yeah or demos ok good so another problem

00:09:24,200 --> 00:09:28,760
with a lot of current tools is basically

00:09:26,300 --> 00:09:30,280
they pull so you run puppet

00:09:28,760 --> 00:09:32,570
it goes through checks everything

00:09:30,280 --> 00:09:34,130
potentially applies the state will start

00:09:32,570 --> 00:09:36,530
over go through do that whole work all

00:09:34,130 --> 00:09:38,570
over again some other tools we talked

00:09:36,530 --> 00:09:39,770
about today also pole and

00:09:38,570 --> 00:09:41,420
is fundamentally a problem because if

00:09:39,770 --> 00:09:43,400
something changed in the middle of those

00:09:41,420 --> 00:09:45,770
two runs you won't be able to fix it

00:09:43,400 --> 00:09:47,120
until that run starts again or if you

00:09:45,770 --> 00:09:48,530
want to change something you have to

00:09:47,120 --> 00:09:50,410
wait to the tool runs or have a way to

00:09:48,530 --> 00:09:52,670
poke it so we actually do everything

00:09:50,410 --> 00:09:53,900
event-driven so I'll show you a little

00:09:52,670 --> 00:09:55,850
demo of this because it's much more

00:09:53,900 --> 00:09:58,340
illustrative so this is all just running

00:09:55,850 --> 00:10:00,320
at the moment on my machine on the right

00:09:58,340 --> 00:10:02,120
we just have a folder which is empty and

00:10:00,320 --> 00:10:06,200
on the left I'm going to run this graph

00:10:02,120 --> 00:10:07,610
and the graph is I'm just going to show

00:10:06,200 --> 00:10:10,280
you the raw data structure of the graph

00:10:07,610 --> 00:10:12,380
just so you see how it runs it's right

00:10:10,280 --> 00:10:14,720
here

00:10:12,380 --> 00:10:18,050
I basically I'm going to ask it to

00:10:14,720 --> 00:10:19,790
create three files f1 f2 and f3 and you

00:10:18,050 --> 00:10:22,840
can see they have contents I'm f1

00:10:19,790 --> 00:10:24,470
I'm f2 and I'm f3 okay very simple stuff

00:10:22,840 --> 00:10:26,840
nothing fancy

00:10:24,470 --> 00:10:28,640
the fourth file f4 says ensure that the

00:10:26,840 --> 00:10:30,200
state is absent so do not create this

00:10:28,640 --> 00:10:32,630
file am i blocking the screen with my

00:10:30,200 --> 00:10:34,580
body in the back all right so let's just

00:10:32,630 --> 00:10:36,410
run this and see how it happens so we're

00:10:34,580 --> 00:10:37,700
going to run it on the Left and then I'm

00:10:36,410 --> 00:10:39,230
going to very quickly go over here to

00:10:37,700 --> 00:10:41,210
the right and LS and you can see that

00:10:39,230 --> 00:10:43,490
basically almost instantly we have the

00:10:41,210 --> 00:10:45,710
three files that got created you can tap

00:10:43,490 --> 00:10:47,360
them and see how the contents are there

00:10:45,710 --> 00:10:49,310
as requested and the cool thing is if

00:10:47,360 --> 00:10:51,020
you remove f2 you're going to list and

00:10:49,310 --> 00:10:53,030
it's already right back because the

00:10:51,020 --> 00:10:55,640
agent is running continuously so you can

00:10:53,030 --> 00:10:57,440
remove f2 and before I even do something

00:10:55,640 --> 00:10:59,570
you don't even notice it's right back

00:10:57,440 --> 00:11:03,110
and it's so quick you can even remove f2

00:10:59,570 --> 00:11:04,460
and cat f2 and just even before the

00:11:03,110 --> 00:11:06,920
second part of the command runs it's

00:11:04,460 --> 00:11:08,810
just right there going ok again tool

00:11:06,920 --> 00:11:10,670
very very efficient doesn't have to

00:11:08,810 --> 00:11:12,320
waste CPU cycles rechecking every time

00:11:10,670 --> 00:11:14,390
it pulls and just to show you really

00:11:12,320 --> 00:11:16,850
that it is quite fast if anyone knows

00:11:14,390 --> 00:11:18,260
the watch command watch just run

00:11:16,850 --> 00:11:20,330
something over and over again as fast as

00:11:18,260 --> 00:11:22,250
it can so if I just run this you can see

00:11:20,330 --> 00:11:24,650
that the tool is buzzing away very very

00:11:22,250 --> 00:11:26,480
quickly in this debug mode and the file

00:11:24,650 --> 00:11:29,690
is basically always keeping that state

00:11:26,480 --> 00:11:32,780
or virtually makes sense do you like

00:11:29,690 --> 00:11:34,190
this cool so this is the primitive that

00:11:32,780 --> 00:11:35,900
I think is very very powerful and we

00:11:34,190 --> 00:11:37,760
don't do this just for files we do this

00:11:35,900 --> 00:11:40,490
for every kind of resource files

00:11:37,760 --> 00:11:41,870
packages services and even virtual

00:11:40,490 --> 00:11:44,600
machines which I'll show you a bit a

00:11:41,870 --> 00:11:47,480
little bit later all right let's move on

00:11:44,600 --> 00:11:48,920
I'm just going to kill this so that's

00:11:47,480 --> 00:11:50,990
the event stuff lots of different

00:11:48,920 --> 00:11:52,430
resources higher-level resources that

00:11:50,990 --> 00:11:54,380
weren't Populi possible in

00:11:52,430 --> 00:11:57,020
puppet and terraform and all these other

00:11:54,380 --> 00:11:59,210
tools are now really quite possible so

00:11:57,020 --> 00:12:00,620
this is what I think config management

00:11:59,210 --> 00:12:02,240
as I like to call it should have been

00:12:00,620 --> 00:12:04,220
some people think it's a higher-level

00:12:02,240 --> 00:12:06,320
technology a choreography sort of thing

00:12:04,220 --> 00:12:07,910
but I see this as another technology in

00:12:06,320 --> 00:12:09,290
addition to the automation stuff

00:12:07,910 --> 00:12:11,990
what is that technology that I'm

00:12:09,290 --> 00:12:15,320
thinking of if we're sort of merging two

00:12:11,990 --> 00:12:17,000
worlds anyone don't be shy if you've

00:12:15,320 --> 00:12:18,560
seen the talk then you know don't cheat

00:12:17,000 --> 00:12:20,540
and tell everyone I think this is

00:12:18,560 --> 00:12:22,130
actually a bit like monitoring so if you

00:12:20,540 --> 00:12:23,960
think about what a system in or DevOps

00:12:22,130 --> 00:12:25,190
person might do they set up a whole

00:12:23,960 --> 00:12:26,480
bunch of stuff they define their

00:12:25,190 --> 00:12:29,030
infrastructure and they push to

00:12:26,480 --> 00:12:30,710
production right but no you shouldn't do

00:12:29,030 --> 00:12:32,210
that you have to first set up everything

00:12:30,710 --> 00:12:33,860
so that it's monitored as well and

00:12:32,210 --> 00:12:36,620
you're all good system ins and you do

00:12:33,860 --> 00:12:38,090
this right you don't put in right you

00:12:36,620 --> 00:12:40,220
always wait till it's monitor before it

00:12:38,090 --> 00:12:44,300
goes in production yeah you're all liars

00:12:40,220 --> 00:12:46,130
but but now if we can actually build in

00:12:44,300 --> 00:12:48,290
at the resource level some sort of

00:12:46,130 --> 00:12:49,700
reporting that that watch stuff we can

00:12:48,290 --> 00:12:51,620
actually get a little bit of information

00:12:49,700 --> 00:12:53,510
about what's going on and to fix things

00:12:51,620 --> 00:12:54,890
very quickly and maybe tell the user hey

00:12:53,510 --> 00:12:56,450
something is change state you should

00:12:54,890 --> 00:12:58,250
look into this so it's not a full

00:12:56,450 --> 00:13:00,710
monitoring story but it's something that

00:12:58,250 --> 00:13:02,390
we're we think adds some value any

00:13:00,710 --> 00:13:04,280
questions is anyone really really lost

00:13:02,390 --> 00:13:06,860
as I want to show you more stuff I want

00:13:04,280 --> 00:13:09,860
to see more stuff we're getting slightly

00:13:06,860 --> 00:13:11,300
more enthusiastic all right so I'm going

00:13:09,860 --> 00:13:12,650
to show you a few topologies so this is

00:13:11,300 --> 00:13:14,450
a first apology where you have a whole

00:13:12,650 --> 00:13:15,560
bunch of clients that go off in Ishi

00:13:14,450 --> 00:13:18,790
eight a connection to a server

00:13:15,560 --> 00:13:20,690
what's this topology called call it out

00:13:18,790 --> 00:13:22,760
client-server everyone's familiar with

00:13:20,690 --> 00:13:26,530
this right what are some problems with

00:13:22,760 --> 00:13:28,730
this topology anybody call it out

00:13:26,530 --> 00:13:30,110
redundancy is missing so single point of

00:13:28,730 --> 00:13:33,440
failure what's another problem with this

00:13:30,110 --> 00:13:35,090
topology load distribution right so if

00:13:33,440 --> 00:13:37,310
you have many many many clients this

00:13:35,090 --> 00:13:38,570
could be a big problem this is a very

00:13:37,310 --> 00:13:40,100
good topology though it's a very well

00:13:38,570 --> 00:13:41,840
understood topology it's a classical

00:13:40,100 --> 00:13:43,760
topology nothing wrong with it but it

00:13:41,840 --> 00:13:45,050
does have some weaknesses this is what

00:13:43,760 --> 00:13:46,520
puppet uses for example

00:13:45,050 --> 00:13:48,260
not to bash on puppet that was what

00:13:46,520 --> 00:13:50,270
people are doing at the time here's a

00:13:48,260 --> 00:13:52,340
slightly different topology this is what

00:13:50,270 --> 00:13:53,750
I call a central Orchestrator so when

00:13:52,340 --> 00:13:55,940
you call something an Orchestrator as

00:13:53,750 --> 00:13:57,920
far as I'm concerned that means de facto

00:13:55,940 --> 00:14:00,290
by definition there's one central point

00:13:57,920 --> 00:14:02,240
that goes out and initiates connections

00:14:00,290 --> 00:14:04,610
to in this case a bunch of machines okay

00:14:02,240 --> 00:14:06,209
make sense they look very similar just

00:14:04,610 --> 00:14:07,350
the arrows are pointing the other way

00:14:06,209 --> 00:14:11,639
what are some problems with this

00:14:07,350 --> 00:14:12,629
topology call it out oh you know this

00:14:11,639 --> 00:14:13,829
but you're shy don't worry I won't

00:14:12,629 --> 00:14:15,959
screaming you what

00:14:13,829 --> 00:14:17,220
yeah scaling so if you have many many

00:14:15,959 --> 00:14:18,449
machines this can be a bit of a

00:14:17,220 --> 00:14:21,480
bottleneck what's another problem with

00:14:18,449 --> 00:14:24,199
this firewalling can be a problem what's

00:14:21,480 --> 00:14:26,429
another problem even before following

00:14:24,199 --> 00:14:28,649
yeah single point of failure so same

00:14:26,429 --> 00:14:30,959
problem sort of exists here's what we

00:14:28,649 --> 00:14:32,429
don't do in MGMT here's where every peer

00:14:30,959 --> 00:14:33,869
connects to every other peer this

00:14:32,429 --> 00:14:35,279
quickly doesn't work because you end up

00:14:33,869 --> 00:14:38,279
having far too many servers and

00:14:35,279 --> 00:14:40,679
connection counts at you know N equals

00:14:38,279 --> 00:14:42,869
10 or 20 or so on here's what we

00:14:40,679 --> 00:14:45,480
actually do an MGM team so an MGM T

00:14:42,869 --> 00:14:47,850
every every agent basically every

00:14:45,480 --> 00:14:50,459
machine runs this little agent and they

00:14:47,850 --> 00:14:52,079
self assemble into a cluster using the

00:14:50,459 --> 00:14:54,240
raft protocol which is thankfully

00:14:52,079 --> 00:14:57,600
written by the STD folks so thanks you

00:14:54,240 --> 00:14:59,490
guys and what they do is this small

00:14:57,600 --> 00:15:01,860
inner circle that gets elected to form

00:14:59,490 --> 00:15:04,199
these primary servers they run raft and

00:15:01,860 --> 00:15:05,879
everyone else is a client that connects

00:15:04,199 --> 00:15:07,170
to one of these machines and the really

00:15:05,879 --> 00:15:08,970
cool thing about this is one of these

00:15:07,170 --> 00:15:11,279
central machines dies that's okay

00:15:08,970 --> 00:15:14,670
another one can be promoted to be a new

00:15:11,279 --> 00:15:17,459
server that makes sense now we do a

00:15:14,670 --> 00:15:19,410
second cool thing now that we have this

00:15:17,459 --> 00:15:21,269
this rafts thing running we can make

00:15:19,410 --> 00:15:23,309
some distributed consensus decisions

00:15:21,269 --> 00:15:25,889
quite easily the other thing we do is we

00:15:23,309 --> 00:15:27,809
use EDD as a database for temporary

00:15:25,889 --> 00:15:28,980
storage of some stuff and we store that

00:15:27,809 --> 00:15:30,990
in the cluster that's this database

00:15:28,980 --> 00:15:32,910
that's highly available that lives among

00:15:30,990 --> 00:15:34,170
this potentially constantly changing

00:15:32,910 --> 00:15:35,759
cluster I'm going to show you a little

00:15:34,170 --> 00:15:40,519
demo of this so what I'm going to do

00:15:35,759 --> 00:15:40,519
here oops I'm just going to go over here

00:15:41,509 --> 00:15:49,949
I'm just going to make some directories

00:15:44,660 --> 00:15:51,149
oops okay and I'm just going to tree you

00:15:49,949 --> 00:15:53,459
can see there's five directories here

00:15:51,149 --> 00:15:55,259
that are empty and I'm just going to

00:15:53,459 --> 00:15:57,119
watch this whole thing so on the right

00:15:55,259 --> 00:15:58,049
instead of me making five VMs because

00:15:57,119 --> 00:15:59,999
that would be really slow on my

00:15:58,049 --> 00:16:01,199
obviously really crappy laptop I'm just

00:15:59,999 --> 00:16:02,730
going to create all of these folders so

00:16:01,199 --> 00:16:04,319
you can pretend they're five different

00:16:02,730 --> 00:16:06,119
machines does that make sense

00:16:04,319 --> 00:16:08,429
so what I'm going to do is I'm going to

00:16:06,119 --> 00:16:11,160
start up here and you start up the first

00:16:08,429 --> 00:16:13,649
MGMT all the commands are doing is I'm

00:16:11,160 --> 00:16:15,299
running it I pass it the graphs that I

00:16:13,649 --> 00:16:17,249
wanted to run so it's these directed

00:16:15,299 --> 00:16:19,230
acyclic graphs I'm cheating by saying

00:16:17,249 --> 00:16:19,750
your host name is h1 because we're going

00:16:19,230 --> 00:16:21,400
to have

00:16:19,750 --> 00:16:22,660
multiple on the same machine and these

00:16:21,400 --> 00:16:25,240
last two options are because I'm running

00:16:22,660 --> 00:16:27,220
in a debug environment so lots of things

00:16:25,240 --> 00:16:28,450
break on my machine sometimes so I'm

00:16:27,220 --> 00:16:30,670
just going to run this now what each

00:16:28,450 --> 00:16:32,260
machine is going to do each machine is

00:16:30,670 --> 00:16:35,530
going to run and it's going to create

00:16:32,260 --> 00:16:37,600
one virtual file in the database okay

00:16:35,530 --> 00:16:39,010
one virtual resource in the database

00:16:37,600 --> 00:16:40,300
the second thing it's going to do is

00:16:39,010 --> 00:16:42,190
it's going to look in the database and

00:16:40,300 --> 00:16:44,020
it's going to pull down all of the

00:16:42,190 --> 00:16:46,300
resources that it sees and hopefully

00:16:44,020 --> 00:16:48,550
they should appear in this folder so if

00:16:46,300 --> 00:16:50,140
I just run one machine it puts one thing

00:16:48,550 --> 00:16:51,700
up and pulls everything down how many

00:16:50,140 --> 00:16:55,060
things will we see in that folder call

00:16:51,700 --> 00:16:57,070
it out one you're all that shy you can

00:16:55,060 --> 00:16:59,560
all count to one so let's see this run

00:16:57,070 --> 00:17:01,630
you want to see this run alright so

00:16:59,560 --> 00:17:03,820
we'll run this it starts up very quickly

00:17:01,630 --> 00:17:05,400
one file appears right this is just

00:17:03,820 --> 00:17:07,630
watching that directory structure live

00:17:05,400 --> 00:17:08,680
let's do a second thing we'll start

00:17:07,630 --> 00:17:09,790
normally we just start up all your

00:17:08,680 --> 00:17:11,860
machines but I want to show you the

00:17:09,790 --> 00:17:15,220
process so let's say start up a second

00:17:11,860 --> 00:17:17,050
machine same algorithm is going to

00:17:15,220 --> 00:17:18,760
happen it puts one thing up in the

00:17:17,050 --> 00:17:23,709
database and pulls everything down how

00:17:18,760 --> 00:17:25,420
many files are going to see on B no the

00:17:23,709 --> 00:17:26,740
gentleman had it right here too right so

00:17:25,420 --> 00:17:28,540
you put one up there's already one up

00:17:26,740 --> 00:17:30,460
there so there's two we pull them both

00:17:28,540 --> 00:17:32,380
down but that first machine is also

00:17:30,460 --> 00:17:34,240
watching this database in real-time and

00:17:32,380 --> 00:17:35,770
I told it to suck everything down in

00:17:34,240 --> 00:17:37,990
this particular case so it's going to

00:17:35,770 --> 00:17:39,210
get updated as well just before I run

00:17:37,990 --> 00:17:41,770
that I just want to show you the CLI

00:17:39,210 --> 00:17:43,780
right here I pointed at the graph I say

00:17:41,770 --> 00:17:45,070
that it's h2 all you have to do to

00:17:43,780 --> 00:17:47,440
automatically cluster these things

00:17:45,070 --> 00:17:49,540
together is any new machine points to

00:17:47,440 --> 00:17:51,580
anyone in the cluster any existing

00:17:49,540 --> 00:17:52,810
member so this is the IP address of the

00:17:51,580 --> 00:17:54,580
first member because there's only one

00:17:52,810 --> 00:17:56,290
the other things here are just separate

00:17:54,580 --> 00:17:58,150
ports because we're all running locally

00:17:56,290 --> 00:18:01,810
and they would clash of ports otherwise

00:17:58,150 --> 00:18:03,640
and so let's just run this boom and in

00:18:01,810 --> 00:18:05,650
basically under a second you've got two

00:18:03,640 --> 00:18:08,320
machines both of the two files that make

00:18:05,650 --> 00:18:11,650
sense you want to see a third one three

00:18:08,320 --> 00:18:13,180
let's say we had a third one and we do

00:18:11,650 --> 00:18:16,570
the same algorithm how many files are we

00:18:13,180 --> 00:18:18,940
going to see now on every one what total

00:18:16,570 --> 00:18:20,650
yes nine so three per machine right

00:18:18,940 --> 00:18:23,890
you put one into the database and pull

00:18:20,650 --> 00:18:25,870
it down to run that and it's all done so

00:18:23,890 --> 00:18:27,100
it converges very very quickly you don't

00:18:25,870 --> 00:18:28,900
have to wait five minutes or ten minutes

00:18:27,100 --> 00:18:30,940
for the next puppet button or anything

00:18:28,900 --> 00:18:33,190
like that so this is what actually is

00:18:30,940 --> 00:18:33,760
most similar to puppet that they call

00:18:33,190 --> 00:18:35,320
export

00:18:33,760 --> 00:18:37,480
resources we're a little bit different

00:18:35,320 --> 00:18:39,550
because we work live but fundamentally

00:18:37,480 --> 00:18:41,440
the same sort of design and here's why

00:18:39,550 --> 00:18:42,970
it's important here's an algorithm which

00:18:41,440 --> 00:18:44,110
I've just described to you which is

00:18:42,970 --> 00:18:45,790
something that might happen in a

00:18:44,110 --> 00:18:47,080
boardroom let's say you're going in for

00:18:45,790 --> 00:18:49,210
a meeting you go into the boardroom

00:18:47,080 --> 00:18:51,010
everyone basically puts their name into

00:18:49,210 --> 00:18:52,690
the middle of the table and reads all

00:18:51,010 --> 00:18:54,370
the names that are already there so once

00:18:52,690 --> 00:18:56,350
you get in the room it's only you in the

00:18:54,370 --> 00:18:58,480
room and you already know yourself once

00:18:56,350 --> 00:19:00,070
the second person joins the room that

00:18:58,480 --> 00:19:01,570
they put their name into the room and

00:19:00,070 --> 00:19:03,100
then they see there's two names so we're

00:19:01,570 --> 00:19:04,870
actually doing a sort of peer exchange

00:19:03,100 --> 00:19:06,910
to see who's actually a member in this

00:19:04,870 --> 00:19:09,310
cluster and exchanging data amongst

00:19:06,910 --> 00:19:10,330
ourselves another common pattern you

00:19:09,310 --> 00:19:12,940
might want to do instead of this

00:19:10,330 --> 00:19:14,650
algorithm if you use MGMT is suppose you

00:19:12,940 --> 00:19:17,110
have a whole bunch of web servers and a

00:19:14,650 --> 00:19:19,330
big load balancer as each web server

00:19:17,110 --> 00:19:21,160
starts up it might actually export some

00:19:19,330 --> 00:19:23,260
firewall rules which it puts into the

00:19:21,160 --> 00:19:25,390
database the load balancer might be

00:19:23,260 --> 00:19:27,370
watching that database and sees oh

00:19:25,390 --> 00:19:28,930
there's some firewall rules here I'm

00:19:27,370 --> 00:19:30,850
going to pull those down and create

00:19:28,930 --> 00:19:33,130
those firewall rules thus opening those

00:19:30,850 --> 00:19:36,010
ports and those forwarding mechanisms in

00:19:33,130 --> 00:19:37,180
real-time that make sense so these are

00:19:36,010 --> 00:19:39,460
the things we want to do we want to make

00:19:37,180 --> 00:19:42,970
it easy for you to describe your complex

00:19:39,460 --> 00:19:44,590
distributed to Paulo G's in a tool I'll

00:19:42,970 --> 00:19:45,850
show you another really quick demo on

00:19:44,590 --> 00:19:47,920
this if you want

00:19:45,850 --> 00:19:50,080
does anyone confused on this so far or

00:19:47,920 --> 00:19:51,970
does anyone you have a quick question

00:19:50,080 --> 00:19:53,290
sir no good ask me later

00:19:51,970 --> 00:19:54,910
he's shy but that's okay he's a

00:19:53,290 --> 00:19:57,550
colleague so he's going to be like hey

00:19:54,910 --> 00:19:58,900
ask me what have you built I'll just

00:19:57,550 --> 00:20:02,380
show you one of the quick things so I

00:19:58,900 --> 00:20:04,570
can actually even just talk to the

00:20:02,380 --> 00:20:06,130
cluster manually and I can say I want

00:20:04,570 --> 00:20:07,540
there to be remember over here we had

00:20:06,130 --> 00:20:10,480
these different servers I want there to

00:20:07,540 --> 00:20:11,830
be a maximum of three central servers so

00:20:10,480 --> 00:20:14,080
I can just tell it that right here and

00:20:11,830 --> 00:20:16,690
it's going to say okay and now what I'm

00:20:14,080 --> 00:20:20,500
gonna do is start up a fourth machine so

00:20:16,690 --> 00:20:21,760
just start up if we start up a fourth

00:20:20,500 --> 00:20:26,920
how many are we going to see now files

00:20:21,760 --> 00:20:29,770
on each machine 16 total that's right so

00:20:26,920 --> 00:20:31,990
that works very quickly they're all for

00:20:29,770 --> 00:20:35,170
running if we actually now query the

00:20:31,990 --> 00:20:37,450
cluster membership we can actually see

00:20:35,170 --> 00:20:39,100
that there's only three central servers

00:20:37,450 --> 00:20:41,740
and everyone else is a client because I

00:20:39,100 --> 00:20:44,500
said maximum of three please but now if

00:20:41,740 --> 00:20:45,640
I change my mind and I say no you know

00:20:44,500 --> 00:20:47,740
what I changed my mind I want there to

00:20:45,640 --> 00:20:51,190
be up to five

00:20:47,740 --> 00:20:52,809
servers maximum I say okay now if I

00:20:51,190 --> 00:20:56,020
query the membership you can actually

00:20:52,809 --> 00:20:57,669
see that through this election process

00:20:56,020 --> 00:21:00,190
we've actually promoted that fourth

00:20:57,669 --> 00:21:02,530
server to be a central core server as

00:21:00,190 --> 00:21:05,260
well okay so this is sort of an elastic

00:21:02,530 --> 00:21:07,539
CD implementation that's built into MGMT

00:21:05,260 --> 00:21:08,620
for the core OS gentleman in the room

00:21:07,539 --> 00:21:10,539
this is the sort of thing I wanted to

00:21:08,620 --> 00:21:12,610
see in core it's unfortunately not

00:21:10,539 --> 00:21:13,900
upstream in core it's in MGMT but this

00:21:12,610 --> 00:21:15,970
is the sort of thing that we want to do

00:21:13,900 --> 00:21:17,410
because we want the EDD part of the

00:21:15,970 --> 00:21:19,240
cluster which is really fundamental to

00:21:17,410 --> 00:21:22,210
sort of manage itself automatically

00:21:19,240 --> 00:21:23,650
so just improve for thought that's it

00:21:22,210 --> 00:21:26,530
for this demo I've got a few more things

00:21:23,650 --> 00:21:28,659
if you want to see some more yes okay

00:21:26,530 --> 00:21:30,570
I'm just going to kill this stuff at

00:21:28,659 --> 00:21:33,669
great speed because I don't want to wait

00:21:30,570 --> 00:21:35,049
I'm going to show you okay you can

00:21:33,669 --> 00:21:37,690
actually shut it down cleanly but I'm

00:21:35,049 --> 00:21:39,070
short on time so I've showed you this

00:21:37,690 --> 00:21:41,440
stuff you can review this all online

00:21:39,070 --> 00:21:43,179
this is my really bad infographic if you

00:21:41,440 --> 00:21:46,289
can draw better in like Libre Office

00:21:43,179 --> 00:21:48,760
please help me I am really bad at this

00:21:46,289 --> 00:21:51,669
so there's a few more things I want to

00:21:48,760 --> 00:21:52,720
talk about so I'm going to skip this

00:21:51,669 --> 00:21:54,360
example I can show you this a bit a

00:21:52,720 --> 00:21:57,909
little bit later

00:21:54,360 --> 00:21:59,380
skipping I'll show you this example so

00:21:57,909 --> 00:22:00,610
sorry my slides are not doing exactly

00:21:59,380 --> 00:22:01,870
the right order because I kind of

00:22:00,610 --> 00:22:03,880
changed things depending on the audience

00:22:01,870 --> 00:22:06,039
when people look really confused I go

00:22:03,880 --> 00:22:07,480
faster you guys don't look really

00:22:06,039 --> 00:22:09,669
confused but you look really shy so I'm

00:22:07,480 --> 00:22:12,429
going to show you this example here is a

00:22:09,669 --> 00:22:14,230
graph with a bunch of resources it's not

00:22:12,429 --> 00:22:16,150
a very pretty graph there's three

00:22:14,230 --> 00:22:18,010
packages two files and a service

00:22:16,150 --> 00:22:20,260
resource now if I were to run this graph

00:22:18,010 --> 00:22:21,640
on a traditional tool what would be one

00:22:20,260 --> 00:22:26,650
of the problems with this graph or

00:22:21,640 --> 00:22:28,450
things that suck performance-wise it's a

00:22:26,650 --> 00:22:30,130
little bit tricky don't worry you don't

00:22:28,450 --> 00:22:31,510
get it what happens who's done some

00:22:30,130 --> 00:22:33,429
puppet has run something with a few

00:22:31,510 --> 00:22:34,870
packages files and services I know

00:22:33,429 --> 00:22:38,470
you've done package file service this is

00:22:34,870 --> 00:22:39,669
like ABCs don't be shy no one all right

00:22:38,470 --> 00:22:41,470
I'll tell you so what will actually

00:22:39,669 --> 00:22:44,409
happen as you know since we can only run

00:22:41,470 --> 00:22:46,210
one thing at a time what actually will

00:22:44,409 --> 00:22:47,590
happen is puppet will start up it'll say

00:22:46,210 --> 00:22:50,380
okay I'm gonna install this first

00:22:47,590 --> 00:22:51,580
package it'll shut down you don't solve

00:22:50,380 --> 00:22:52,990
the second package starting up the

00:22:51,580 --> 00:22:55,030
package manager all over again which

00:22:52,990 --> 00:22:57,370
takes a lot of time to check the caches

00:22:55,030 --> 00:22:59,290
check the package DB shut down and do

00:22:57,370 --> 00:23:01,159
the third thing all at the same time so

00:22:59,290 --> 00:23:03,289
an MGMT we actually have this

00:23:01,159 --> 00:23:05,509
notion of automatic grouping should be a

00:23:03,289 --> 00:23:07,340
giveaway in the slide title so what we

00:23:05,509 --> 00:23:09,979
actually do is we analyze this graph at

00:23:07,340 --> 00:23:12,019
runtime dynamically and since this graph

00:23:09,979 --> 00:23:14,210
is actually functional equivalent to

00:23:12,019 --> 00:23:16,369
this graph we do this rearrangement and

00:23:14,210 --> 00:23:18,590
now these three packages are actually

00:23:16,369 --> 00:23:20,269
grouped into a single resource so now we

00:23:18,590 --> 00:23:22,159
can perform that operation as a single

00:23:20,269 --> 00:23:25,279
step install these three packages and

00:23:22,159 --> 00:23:26,899
this happens very very quickly that

00:23:25,279 --> 00:23:28,999
makes sense we can do this for any

00:23:26,899 --> 00:23:34,999
resource primitives it supports it so

00:23:28,999 --> 00:23:37,539
let me show you a quick demo so you see

00:23:34,999 --> 00:23:39,799
Auto group so I think this is the demo

00:23:37,539 --> 00:23:41,779
my password is password if you're

00:23:39,799 --> 00:23:43,309
listening at home so I'm just running

00:23:41,779 --> 00:23:45,349
this graph it has those three things

00:23:43,309 --> 00:23:47,149
it's not as flashy as a demo but if you

00:23:45,349 --> 00:23:48,889
look closely you can see that it did

00:23:47,149 --> 00:23:51,710
this auto group thing and you can see

00:23:48,889 --> 00:23:53,509
cows a power top and SL are all being

00:23:51,710 --> 00:23:55,070
installed or checked at the right time

00:23:53,509 --> 00:23:57,049
so we can just check if cows a is

00:23:55,070 --> 00:24:00,169
working hey cows a is working that's

00:23:57,049 --> 00:24:02,179
good you can say hey net ways that's

00:24:00,169 --> 00:24:04,879
good too now we can actually if we want

00:24:02,179 --> 00:24:07,729
just to show you let's remove cows a I

00:24:04,879 --> 00:24:10,789
know this is bad but we're just going to

00:24:07,729 --> 00:24:11,419
remove cows a yes let's hope the

00:24:10,789 --> 00:24:13,249
internet works

00:24:11,419 --> 00:24:15,710
if this doesn't it will be less exciting

00:24:13,249 --> 00:24:18,470
of a demo so it's removing cows a and if

00:24:15,710 --> 00:24:21,200
you notice MGMT right here saw that it

00:24:18,470 --> 00:24:23,389
got removed and it quickly went and

00:24:21,200 --> 00:24:26,450
moved it installed it right back and cal

00:24:23,389 --> 00:24:28,729
say hey it is back cool so same thing

00:24:26,450 --> 00:24:30,859
the packages also have this event system

00:24:28,729 --> 00:24:33,679
and if you change the state or if as the

00:24:30,859 --> 00:24:36,470
user you request a new state it fixes it

00:24:33,679 --> 00:24:38,720
right away makes sense I just like doing

00:24:36,470 --> 00:24:40,669
this because I'm weird nerd you can even

00:24:38,720 --> 00:24:42,409
cow say inside of cow say if you've

00:24:40,669 --> 00:24:44,090
never done this and you can do this like

00:24:42,409 --> 00:24:45,200
crazy so if you want to have something

00:24:44,090 --> 00:24:47,419
fun to play with and you hate my

00:24:45,200 --> 00:24:55,340
software at least enjoy cow say all

00:24:47,419 --> 00:24:57,080
right really ah Felix is describing how

00:24:55,340 --> 00:25:02,659
to save the cows and to not squish them

00:24:57,080 --> 00:25:05,090
up into bubbles thanks Felix so so

00:25:02,659 --> 00:25:07,549
anyways this works for actually not just

00:25:05,090 --> 00:25:09,499
package resources any resource primitive

00:25:07,549 --> 00:25:11,299
that supports this can happen so we

00:25:09,499 --> 00:25:12,799
actually don't have an AWS resource

00:25:11,299 --> 00:25:14,659
which is quite sad I would love to have

00:25:12,799 --> 00:25:17,059
an AWS resource in MGMT

00:25:14,659 --> 00:25:19,729
for example or reserve whatever you know

00:25:17,059 --> 00:25:21,289
cool cloud the Google people are selling

00:25:19,729 --> 00:25:22,940
these days and if you think about it

00:25:21,289 --> 00:25:25,070
making those API requests to the server

00:25:22,940 --> 00:25:27,340
if they had a batch operation we could

00:25:25,070 --> 00:25:30,049
actually group these together not to

00:25:27,340 --> 00:25:31,519
make it parallel onto my machine but to

00:25:30,049 --> 00:25:33,499
save connection counts or other things

00:25:31,519 --> 00:25:35,359
so the auto grouping API really has lots

00:25:33,499 --> 00:25:38,359
of uses far beyond what I'm going to

00:25:35,359 --> 00:25:41,479
talk about today cool like this is this

00:25:38,359 --> 00:25:43,759
dope oh come on so here's just some

00:25:41,479 --> 00:25:46,009
quick data I took if you look actually

00:25:43,759 --> 00:25:48,200
this is just running puppet MGMT and the

00:25:46,009 --> 00:25:49,940
raw package managers red is this really

00:25:48,200 --> 00:25:51,799
long thing that's when you're installing

00:25:49,940 --> 00:25:53,749
three packages so it's taking two to

00:25:51,799 --> 00:25:55,249
three times longer when you install them

00:25:53,749 --> 00:25:56,929
one at a time so the grouping will

00:25:55,249 --> 00:25:59,690
actually save the environment and you

00:25:56,929 --> 00:26:03,470
love the environment right yes CPU

00:25:59,690 --> 00:26:05,479
cycles anyways so we're actually very

00:26:03,470 --> 00:26:07,669
lucky today because we have mr. Felix

00:26:05,479 --> 00:26:10,789
Frank right in the front when I first

00:26:07,669 --> 00:26:12,619
talked about MGMT I postulated that it

00:26:10,789 --> 00:26:15,440
would be possible although perhaps a bit

00:26:12,619 --> 00:26:17,809
annoying to write a compiler that takes

00:26:15,440 --> 00:26:19,789
existing puppet code and compiles it so

00:26:17,809 --> 00:26:22,369
that it runs on MGMT which would now

00:26:19,789 --> 00:26:24,200
make it run faster in parallel and with

00:26:22,369 --> 00:26:28,220
events on all of this magic and it turns

00:26:24,200 --> 00:26:30,200
out to my happy happy happy amazement

00:26:28,220 --> 00:26:32,659
Felix actually wrote this and it's

00:26:30,200 --> 00:26:34,249
beautiful it's really fantastic and this

00:26:32,659 --> 00:26:35,869
is not the best example but if you want

00:26:34,249 --> 00:26:37,460
to check this out this works great so if

00:26:35,869 --> 00:26:39,229
you have all this legacy puppy puppet

00:26:37,460 --> 00:26:40,639
code and you want to run it in a faster

00:26:39,229 --> 00:26:42,739
way it's not perfect but it's pretty

00:26:40,639 --> 00:26:44,720
damn good and check it out so just a

00:26:42,739 --> 00:26:46,669
quick plug these are the resources we

00:26:44,720 --> 00:26:48,139
have an MGMT at the moment it's not an

00:26:46,669 --> 00:26:50,509
exhaustive list of what we're going to

00:26:48,139 --> 00:26:51,559
build but just to show you some ideas we

00:26:50,509 --> 00:26:52,940
have all sorts of different kinds of

00:26:51,559 --> 00:26:54,889
resource like password what does that

00:26:52,940 --> 00:26:56,629
even do also check my blog if you want

00:26:54,889 --> 00:26:58,759
more information on those and we'd love

00:26:56,629 --> 00:27:02,330
for you to write your own resource we

00:26:58,759 --> 00:27:04,099
have a resource guide it's on github you

00:27:02,330 --> 00:27:06,200
can actually see how this works and

00:27:04,099 --> 00:27:07,820
implement the API it's very simple and

00:27:06,200 --> 00:27:10,220
straightforward so hopefully we can have

00:27:07,820 --> 00:27:13,639
some like heroes of new resources cloud

00:27:10,220 --> 00:27:16,399
resources whatever resources you want so

00:27:13,639 --> 00:27:18,139
just ping me I'm going to skip over this

00:27:16,399 --> 00:27:20,720
stuff I want to show you some more demos

00:27:18,139 --> 00:27:22,999
don't see some more demos all right

00:27:20,720 --> 00:27:25,920
we're getting we're warming up good good

00:27:22,999 --> 00:27:28,950
they're good so

00:27:25,920 --> 00:27:30,660
I have here a very simple resource which

00:27:28,950 --> 00:27:34,080
just declares the state of a virtual

00:27:30,660 --> 00:27:37,800
machine so I'm going to go over here if

00:27:34,080 --> 00:27:40,170
you see I have one stopped Fedora 18 for

00:27:37,800 --> 00:27:42,210
some reason old VM no idea why I'm just

00:27:40,170 --> 00:27:43,530
going to run MGMT on the left you'll

00:27:42,210 --> 00:27:45,870
notice nothing is running his route here

00:27:43,530 --> 00:27:47,940
and you see here domain defined domain

00:27:45,870 --> 00:27:51,330
started you actually see it actually

00:27:47,940 --> 00:27:52,890
started up a VM declaratively so as I

00:27:51,330 --> 00:27:55,860
said because we have this event system

00:27:52,890 --> 00:27:58,490
we can actually do VMs for example and

00:27:55,860 --> 00:28:02,940
the cool thing is if I first destroy

00:27:58,490 --> 00:28:05,010
that VM you can see it started right

00:28:02,940 --> 00:28:06,540
back up so same sort of thing you can

00:28:05,010 --> 00:28:09,570
actually change the state of running VMs

00:28:06,540 --> 00:28:10,620
on the fly in milliseconds so this is

00:28:09,570 --> 00:28:12,510
what I'm talking about higher-level

00:28:10,620 --> 00:28:14,700
resources use your imagination what else

00:28:12,510 --> 00:28:17,220
can we build I want to take this a

00:28:14,700 --> 00:28:21,120
little bit further just going to destroy

00:28:17,220 --> 00:28:24,270
this one oops and define that so I

00:28:21,120 --> 00:28:28,020
wanted to think about what a higher

00:28:24,270 --> 00:28:29,510
level design might look like so I just

00:28:28,020 --> 00:28:31,710
need to check out a feature branch here

00:28:29,510 --> 00:28:33,840
called cockpit I'm just going to build a

00:28:31,710 --> 00:28:36,600
new version and over here I'm going to

00:28:33,840 --> 00:28:39,210
go into my browser and there's this

00:28:36,600 --> 00:28:41,250
project called cockpit set my password I

00:28:39,210 --> 00:28:43,260
made a little cockpit plugin for MGMT

00:28:41,250 --> 00:28:45,360
just to sort of simulate how this would

00:28:43,260 --> 00:28:47,730
actually work and I'm just going to go

00:28:45,360 --> 00:28:50,760
down here so what's going to happen is

00:28:47,730 --> 00:28:54,780
um the system ins I don't mind the

00:28:50,760 --> 00:28:57,690
squeaking alright anyway it's all good I

00:28:54,780 --> 00:28:59,760
will talk louder what I want to show you

00:28:57,690 --> 00:29:01,710
is suppose we have a higher level

00:28:59,760 --> 00:29:03,540
interface that the user want to wants to

00:29:01,710 --> 00:29:05,070
see people like web UIs people want to

00:29:03,540 --> 00:29:07,440
see like from the top of their whole

00:29:05,070 --> 00:29:08,940
cluster how we can actually make cluster

00:29:07,440 --> 00:29:10,890
Y decisions and use these sorts of

00:29:08,940 --> 00:29:12,630
things so I built this cockpit plugin

00:29:10,890 --> 00:29:14,150
what I'm going to first do is I can

00:29:12,630 --> 00:29:18,840
actually just run

00:29:14,150 --> 00:29:21,750
MGMT right here so MGMT is going to be

00:29:18,840 --> 00:29:23,520
running see that's working now I'm going

00:29:21,750 --> 00:29:25,350
to hide MGMT just because it's not just

00:29:23,520 --> 00:29:28,170
fun to look at as cockpit so that's

00:29:25,350 --> 00:29:30,990
hidden right here and I'm just going to

00:29:28,170 --> 00:29:33,570
run right here I'm going to run verse

00:29:30,990 --> 00:29:35,160
list in a little loop so that you can

00:29:33,570 --> 00:29:37,440
hopefully see if my machine is not too

00:29:35,160 --> 00:29:39,090
slow the real-time state of the VMS on

00:29:37,440 --> 00:29:39,870
the cluster and now if you look right

00:29:39,090 --> 00:29:42,030
here I have this

00:29:39,870 --> 00:29:46,290
lighter and as I move this slider over

00:29:42,030 --> 00:29:48,120
to two and I click Save you actually it

00:29:46,290 --> 00:29:50,360
says oh two VMs are running I can

00:29:48,120 --> 00:29:53,220
actually move this over to say four

00:29:50,360 --> 00:29:55,080
click Save it'll change the new state to

00:29:53,220 --> 00:29:57,180
two VMs running this is really happening

00:29:55,080 --> 00:30:00,000
on my actual shitty laptop I can move it

00:29:57,180 --> 00:30:01,380
down to one click save three of them

00:30:00,000 --> 00:30:03,600
will shut down now here's what's

00:30:01,380 --> 00:30:05,580
happening every time I click Save every

00:30:03,600 --> 00:30:07,650
time I click save this shitty web UI

00:30:05,580 --> 00:30:09,930
plug-in that I wrote pushes a new graph

00:30:07,650 --> 00:30:12,059
into MGMT so you got the currently

00:30:09,930 --> 00:30:13,230
running graph and the new graph then

00:30:12,059 --> 00:30:15,450
what it does it does an extremely

00:30:13,230 --> 00:30:17,520
efficient graph diff looking at the old

00:30:15,450 --> 00:30:19,470
state in the new state and then it runs

00:30:17,520 --> 00:30:21,210
that new graph and because it knew that

00:30:19,470 --> 00:30:23,070
it was running continuously and it's

00:30:21,210 --> 00:30:24,690
watching the events it knows that it

00:30:23,070 --> 00:30:26,820
only has to recheck things that are

00:30:24,690 --> 00:30:28,950
brand new or have some dependency that

00:30:26,820 --> 00:30:30,330
then needs to be treated so that graphs

00:30:28,950 --> 00:30:32,730
which can happen really really quickly

00:30:30,330 --> 00:30:34,320
and now you have a brand new run that

00:30:32,730 --> 00:30:35,700
sort of happened transparently this is

00:30:34,320 --> 00:30:37,860
like running puppet over and over again

00:30:35,700 --> 00:30:39,480
or terraform over and over again except

00:30:37,860 --> 00:30:41,550
it happens really really quickly and

00:30:39,480 --> 00:30:43,290
what I mean really quickly just to show

00:30:41,550 --> 00:30:45,780
you that I'm not lying I had this little

00:30:43,290 --> 00:30:48,360
live checkbox right here so now as I

00:30:45,780 --> 00:30:51,840
move this in real time you'll actually

00:30:48,360 --> 00:30:55,050
will see this actually is happening many

00:30:51,840 --> 00:30:57,150
many times per second every milliseconds

00:30:55,050 --> 00:30:58,860
or so it's just going through and real

00:30:57,150 --> 00:31:01,820
time I'm actually changing the

00:30:58,860 --> 00:31:04,290
properties of my cluster is that cool

00:31:01,820 --> 00:31:06,630
now this in this case I'm just going to

00:31:04,290 --> 00:31:08,370
shut these all off in this case this is

00:31:06,630 --> 00:31:10,140
VMs but this could have been something

00:31:08,370 --> 00:31:12,260
much more complicated this could have

00:31:10,140 --> 00:31:15,240
been the state of your hybrid cloud or

00:31:12,260 --> 00:31:17,400
you know different parameters that are

00:31:15,240 --> 00:31:18,660
really beyond my imagination just think

00:31:17,400 --> 00:31:20,550
of what you want to dynamically build

00:31:18,660 --> 00:31:22,559
and then just declare the state of what

00:31:20,550 --> 00:31:24,570
you want and the MGMT engine will

00:31:22,559 --> 00:31:27,270
replicate itself and make you take you

00:31:24,570 --> 00:31:29,700
to that state that cool you want to see

00:31:27,270 --> 00:31:31,290
another demo or a fed-up of demos so I

00:31:29,700 --> 00:31:33,330
wanted to take this a little bit further

00:31:31,290 --> 00:31:36,059
this one requires internet so let's see

00:31:33,330 --> 00:31:39,840
if the Internet's working I need to SSH

00:31:36,059 --> 00:31:45,540
to my crappy oops first I need to SSH to

00:31:39,840 --> 00:31:46,890
my firewall open up some SSH tunnels so

00:31:45,540 --> 00:31:49,980
please stop torrenting if you are

00:31:46,890 --> 00:31:52,200
torrenting this is a person who wants

00:31:49,980 --> 00:31:53,370
free help on the internet and help them

00:31:52,200 --> 00:31:55,410
write down

00:31:53,370 --> 00:31:58,650
so I'm just going to so this is going to

00:31:55,410 --> 00:32:00,180
be two windows on this remote server

00:31:58,650 --> 00:32:01,590
it's actually a crappy laptop but it's

00:32:00,180 --> 00:32:03,450
slightly less crappy than my current

00:32:01,590 --> 00:32:05,160
laptop and I have a screen session

00:32:03,450 --> 00:32:06,870
running here so I'm just going to open

00:32:05,160 --> 00:32:10,460
up in both windows so you can see what's

00:32:06,870 --> 00:32:13,380
going on so on the right hand side here

00:32:10,460 --> 00:32:16,590
so on the server on this laptop I'm

00:32:13,380 --> 00:32:19,380
running MGMT now on that machine I've

00:32:16,590 --> 00:32:21,660
declared MGMT which is running right now

00:32:19,380 --> 00:32:25,110
I'm just want to hide this to create one

00:32:21,660 --> 00:32:27,059
virtual machine and that virtual machine

00:32:25,110 --> 00:32:30,210
I'm logged in to right here on the left

00:32:27,059 --> 00:32:33,540
I can see it's a virtual machine it's

00:32:30,210 --> 00:32:35,340
got one virtual CPU and whoops don't

00:32:33,540 --> 00:32:37,320
paste and just to make this more fun I'm

00:32:35,340 --> 00:32:41,850
going to run this command on that

00:32:37,320 --> 00:32:44,309
machine so it's it's watching every half

00:32:41,850 --> 00:32:47,670
a second it's running LS CPU and it's

00:32:44,309 --> 00:32:48,809
grepping the CPU count makes sense so

00:32:47,670 --> 00:32:50,370
I'm going to watch that just so you can

00:32:48,809 --> 00:32:53,850
see now watch this number right here

00:32:50,370 --> 00:32:57,720
this one over here oh man I'm like

00:32:53,850 --> 00:32:59,429
pasting like crazy on on that server I

00:32:57,720 --> 00:33:00,690
actually made a crappy little shell

00:32:59,429 --> 00:33:02,610
script which is basically like having

00:33:00,690 --> 00:33:04,650
that slider so instead of having a

00:33:02,610 --> 00:33:06,390
slider in a web UI and just have the

00:33:04,650 --> 00:33:09,000
shell script and now watch what happens

00:33:06,390 --> 00:33:11,790
when I push the UP button you can

00:33:09,000 --> 00:33:15,270
actually see that the CPU count on that

00:33:11,790 --> 00:33:17,910
VM is going up or down so in addition in

00:33:15,270 --> 00:33:19,860
my vert resource I declare not

00:33:17,910 --> 00:33:22,380
imperative like I declare the number of

00:33:19,860 --> 00:33:24,270
CPUs that VM should have and MGMT will

00:33:22,380 --> 00:33:25,830
look at that number and if the number is

00:33:24,270 --> 00:33:30,050
wrong in the guest it will hot-plug

00:33:25,830 --> 00:33:31,620
or hot unplug them for you that cool

00:33:30,050 --> 00:33:36,720
just to show you what's actually

00:33:31,620 --> 00:33:39,210
happening even if I go into the raw data

00:33:36,720 --> 00:33:42,990
structure and I just changed the CPU to

00:33:39,210 --> 00:33:45,420
four and I hit save you see it really

00:33:42,990 --> 00:33:47,190
happens in in under a second so imagine

00:33:45,420 --> 00:33:49,650
now you have this cluster it's managed

00:33:47,190 --> 00:33:51,570
by MGMT and boom you got the load that

00:33:49,650 --> 00:33:52,290
goes up in your cluster now in a

00:33:51,570 --> 00:33:54,330
millisecond

00:33:52,290 --> 00:33:56,429
you could add CPUs to all those hosts

00:33:54,330 --> 00:33:57,720
and hopefully handle some initial

00:33:56,429 --> 00:33:59,100
buffering from the load that way or

00:33:57,720 --> 00:34:01,590
something else this is just an example

00:33:59,100 --> 00:34:03,300
whatever resources you want to build is

00:34:01,590 --> 00:34:05,730
really up to you so I just want you to

00:34:03,300 --> 00:34:07,800
imagine what's possible with MGMT like

00:34:05,730 --> 00:34:10,500
that if you had it with demo

00:34:07,800 --> 00:34:11,610
or I need a little bit more

00:34:10,500 --> 00:34:16,380
encouragement if you want to see more

00:34:11,610 --> 00:34:19,770
demos I I think they're quiet that's it

00:34:16,380 --> 00:34:21,600
demos no yes you guys are very shy I

00:34:19,770 --> 00:34:30,870
think you're possibly my most shy

00:34:21,600 --> 00:34:32,280
audience so so that's that example if

00:34:30,870 --> 00:34:34,200
you want to see a few more demos I got

00:34:32,280 --> 00:34:37,440
some time I've got basically a half hour

00:34:34,200 --> 00:34:38,670
so right just honor you actually want to

00:34:37,440 --> 00:34:41,610
see some more demos or do you have any

00:34:38,670 --> 00:34:43,320
questions all right thank you so what

00:34:41,610 --> 00:34:44,850
I'm going to do just to show you a demo

00:34:43,320 --> 00:34:47,190
that I skipped is I'm just going to

00:34:44,850 --> 00:34:48,990
start up a vagrant VM this will take a

00:34:47,190 --> 00:34:51,990
little bit of time because my laptop

00:34:48,990 --> 00:34:55,350
again is super old we can actually even

00:34:51,990 --> 00:35:06,300
kill all - 9 Firefox to get even more

00:34:55,350 --> 00:35:10,970
RAM so I'm going to check out now Chrome

00:35:06,300 --> 00:35:13,260
is crap real hackers use Firefox come on

00:35:10,970 --> 00:35:15,210
so I'm just starting up this vagrant VM

00:35:13,260 --> 00:35:27,510
and I'm just gonna check my notes for

00:35:15,210 --> 00:35:28,620
something so my set list okay if you're

00:35:27,510 --> 00:35:29,640
listening at home they're talking in

00:35:28,620 --> 00:35:36,350
German I have no idea what they're

00:35:29,640 --> 00:35:36,350
saying what Oh

00:35:37,110 --> 00:35:42,300
qui tchen alright that's fine I'll make

00:35:40,350 --> 00:35:53,670
fun of them in French later so it's fine

00:35:42,300 --> 00:35:56,910
oh so oh wait I think I see if my all

00:35:53,670 --> 00:35:59,910
the vagrant stuff is running okay see if

00:35:56,910 --> 00:36:01,350
these VMs are running okay I started

00:35:59,910 --> 00:36:04,950
them up in parallel which is sometimes a

00:36:01,350 --> 00:36:06,240
little bit risky but so this is vm one

00:36:04,950 --> 00:36:09,660
that seems to be working

00:36:06,240 --> 00:36:11,880
thanks vagrant I'm just going to go here

00:36:09,660 --> 00:36:13,620
and I'm going to just set some IP

00:36:11,880 --> 00:36:16,530
addresses because I really hate DNS and

00:36:13,620 --> 00:36:17,580
this VM is running on IP address 42

00:36:16,530 --> 00:36:24,840
which I'm just going to store in this

00:36:17,580 --> 00:36:27,540
file let's go into the second one this

00:36:24,840 --> 00:36:29,940
is a little bit of setup but more fun so

00:36:27,540 --> 00:36:34,190
this is the second VM everything looks

00:36:29,940 --> 00:36:36,260
okay you can see that this IP address is

00:36:34,190 --> 00:36:45,290
two five one

00:36:36,260 --> 00:36:48,840
okay I think we're good to go oops okay

00:36:45,290 --> 00:36:51,660
good so here's a problem that I wanted

00:36:48,840 --> 00:36:54,830
to solve so you have a data center it's

00:36:51,660 --> 00:36:54,830
all beautifully managed

00:37:00,010 --> 00:37:02,070
you

00:37:29,220 --> 00:37:34,230
config management tools right now your

00:37:31,440 --> 00:37:35,670
data center goes on fire and this is bad

00:37:34,230 --> 00:37:37,320
because you play with fire in the data

00:37:35,670 --> 00:37:39,330
center which you should not do and your

00:37:37,320 --> 00:37:42,510
boss is very angry but he has a very big

00:37:39,330 --> 00:37:43,890
charge card and he gives you the charge

00:37:42,510 --> 00:37:45,599
card and you buy like ten million

00:37:43,890 --> 00:37:47,490
dollars of new equipment and you rack

00:37:45,599 --> 00:37:49,980
all this stuff which is great because

00:37:47,490 --> 00:37:51,480
you have a rack robot and then you go in

00:37:49,980 --> 00:37:53,700
with your laptop you plug it into a

00:37:51,480 --> 00:37:55,410
switch you run some stuff and within

00:37:53,700 --> 00:37:57,240
some amount of time everything is built

00:37:55,410 --> 00:37:59,310
out from scratch brand-new whose

00:37:57,240 --> 00:38:02,550
infrastructure works like this right now

00:37:59,310 --> 00:38:04,349
raise your hand we have one liar in the

00:38:02,550 --> 00:38:05,970
audience and everyone else is honest so

00:38:04,349 --> 00:38:08,369
that's good keep note of this gentleman

00:38:05,970 --> 00:38:10,109
I'm joking maybe you have a really good

00:38:08,369 --> 00:38:12,030
system set up that can do this but in

00:38:10,109 --> 00:38:14,310
general this is a use case that we still

00:38:12,030 --> 00:38:15,690
haven't finished Google even has like

00:38:14,310 --> 00:38:17,700
well-known problems with bootstrapping

00:38:15,690 --> 00:38:20,280
their infrastructure and that's been a

00:38:17,700 --> 00:38:21,900
problem so if we wanted to do this it

00:38:20,280 --> 00:38:23,369
would be nice to have a tool it would be

00:38:21,900 --> 00:38:26,160
nice to have a tool that runs on our

00:38:23,369 --> 00:38:28,260
laptop which can remotely do some

00:38:26,160 --> 00:38:30,510
operations and then get in there and

00:38:28,260 --> 00:38:32,400
replicate and MGMT actually does this we

00:38:30,510 --> 00:38:34,380
call it remote execution and I can show

00:38:32,400 --> 00:38:36,270
you how it works so what we do is we

00:38:34,380 --> 00:38:37,740
originally have MGMT running in this

00:38:36,270 --> 00:38:39,900
case it's going to be on my laptop and

00:38:37,740 --> 00:38:43,619
it will SSH in this case to these two

00:38:39,900 --> 00:38:45,359
VMs that I've ran and then it will run

00:38:43,619 --> 00:38:46,920
that process it will copy itself over

00:38:45,359 --> 00:38:49,410
it's a single going binary so that's

00:38:46,920 --> 00:38:51,270
quite easy copy itself over and then it

00:38:49,410 --> 00:38:52,890
will run on those machines the other

00:38:51,270 --> 00:38:54,690
thing that it does is if you remember we

00:38:52,890 --> 00:38:56,190
have this EDD traffic between the

00:38:54,690 --> 00:38:58,980
members in our cluster so we actually

00:38:56,190 --> 00:39:01,320
tunnel the entity traffic from those two

00:38:58,980 --> 00:39:03,330
remote machines through that SSH tunnel

00:39:01,320 --> 00:39:05,339
back to the host so they can all

00:39:03,330 --> 00:39:07,349
communicate across at CD they're going

00:39:05,339 --> 00:39:10,170
to converge and I'll show you this in

00:39:07,349 --> 00:39:12,050
real time so if you remember we have

00:39:10,170 --> 00:39:14,400
that thing where we push the file up and

00:39:12,050 --> 00:39:18,780
we pulled it back down so we're going to

00:39:14,400 --> 00:39:24,000
run that same sort of example let's just

00:39:18,780 --> 00:39:26,880
do a screen root at only one let's just

00:39:24,000 --> 00:39:30,420
log into this first machine you can see

00:39:26,880 --> 00:39:32,640
there's no files here and I'm going to

00:39:30,420 --> 00:39:34,859
run this on the left and on the right

00:39:32,640 --> 00:39:37,190
you can see one of the VMS I don't know

00:39:34,859 --> 00:39:39,810
if I'm to show you both let's run this

00:39:37,190 --> 00:39:42,119
MGMT starts up it copies the binary over

00:39:39,810 --> 00:39:43,050
it pushes and before I can even go over

00:39:42,119 --> 00:39:44,730
here you can

00:39:43,050 --> 00:39:47,310
see now the files are actually created I

00:39:44,730 --> 00:39:48,690
actually cat these files you can see

00:39:47,310 --> 00:39:51,630
that it has one file which it just

00:39:48,690 --> 00:39:53,910
created locally for fun and it has one

00:39:51,630 --> 00:39:55,350
file from the first host and one file

00:39:53,910 --> 00:39:57,690
from the second host because they pushed

00:39:55,350 --> 00:40:00,140
both those files up and then they copied

00:39:57,690 --> 00:40:04,830
each other's files down that makes sense

00:40:00,140 --> 00:40:07,440
so let me just watch this so you can

00:40:04,830 --> 00:40:10,650
actually see those files in real time

00:40:07,440 --> 00:40:12,000
now on the first machine okay now here's

00:40:10,650 --> 00:40:15,360
what I'm going to do just to make this

00:40:12,000 --> 00:40:19,440
really fun I'm going to go in the graph

00:40:15,360 --> 00:40:21,450
definition of the second machine so

00:40:19,440 --> 00:40:22,860
that's over here so this is basically

00:40:21,450 --> 00:40:24,540
the definition of what that second

00:40:22,860 --> 00:40:27,570
machine should do you can see here that

00:40:24,540 --> 00:40:29,400
it has a file to be that it put in the

00:40:27,570 --> 00:40:31,160
database and then the first machine

00:40:29,400 --> 00:40:33,960
pulled that file down from the database

00:40:31,160 --> 00:40:40,680
okay so what I'm going to do is I can

00:40:33,960 --> 00:40:45,090
edit this file here and you say hey net

00:40:40,680 --> 00:40:46,710
weighs what is up so I'm going to save

00:40:45,090 --> 00:40:47,850
this file in a second but I want to

00:40:46,710 --> 00:40:50,460
discuss what's really going to happen

00:40:47,850 --> 00:40:53,220
when I press save when I press save on

00:40:50,460 --> 00:40:55,590
my local laptop MGMT is going to notice

00:40:53,220 --> 00:40:58,530
that the configuration of that I

00:40:55,590 --> 00:41:00,240
requested changed what it's going to

00:40:58,530 --> 00:41:02,790
then do is going to push that file that

00:41:00,240 --> 00:41:05,190
new configuration over SSH to that

00:41:02,790 --> 00:41:06,210
second machine the second machine is

00:41:05,190 --> 00:41:08,580
going to say hey I've got a new

00:41:06,210 --> 00:41:10,590
configuration I'm going to run this new

00:41:08,580 --> 00:41:12,600
graph it will run that new graph and in

00:41:10,590 --> 00:41:14,730
doing so it's going to push that new

00:41:12,600 --> 00:41:17,280
data to Ed CD basically back through

00:41:14,730 --> 00:41:19,200
that cluster that other machine that

00:41:17,280 --> 00:41:22,230
first VM which is what we see on the

00:41:19,200 --> 00:41:24,750
left here is watching ed CD for new keys

00:41:22,230 --> 00:41:26,700
and changes and new resources that get

00:41:24,750 --> 00:41:29,400
stored in that database again all over

00:41:26,700 --> 00:41:31,230
SSH it's going to see now that there's

00:41:29,400 --> 00:41:33,510
an update because that second machine

00:41:31,230 --> 00:41:35,130
pushed that new file and so it's going

00:41:33,510 --> 00:41:37,110
to pull down that file which we are

00:41:35,130 --> 00:41:40,230
watching in real time so it says I'm

00:41:37,110 --> 00:41:41,910
file to be exported from host B alright

00:41:40,230 --> 00:41:44,250
is anyone confused on this because this

00:41:41,910 --> 00:41:46,190
is like the cool demo so if you have a

00:41:44,250 --> 00:41:49,310
question ask now before I press enter

00:41:46,190 --> 00:41:51,420
anyone confused or does this make sense

00:41:49,310 --> 00:41:53,640
who is silent don't be shy if you're

00:41:51,420 --> 00:41:54,840
confused raise your hand if you

00:41:53,640 --> 00:41:56,580
completely know what's going on raise

00:41:54,840 --> 00:41:58,110
your hand all right

00:41:56,580 --> 00:41:59,400
so I think we've got some shy people but

00:41:58,110 --> 00:42:00,090
so I'm going to press ENTER and watch

00:41:59,400 --> 00:42:03,510
what happens

00:42:00,090 --> 00:42:05,790
boom happens very very quickly you like

00:42:03,510 --> 00:42:10,410
that you can clap if you want it's

00:42:05,790 --> 00:42:11,790
alright alright okay so what have I

00:42:10,410 --> 00:42:12,450
actually done here let's think about the

00:42:11,790 --> 00:42:14,130
implications

00:42:12,450 --> 00:42:16,140
what I'm doing is MGMT is running

00:42:14,130 --> 00:42:18,180
continuously not using much CPU because

00:42:16,140 --> 00:42:20,790
it sleeps of course and now I'm actually

00:42:18,180 --> 00:42:23,670
just live editing my config and pushing

00:42:20,790 --> 00:42:25,590
it in real time to my data center so I

00:42:23,670 --> 00:42:27,900
probably don't recommend you do this in

00:42:25,590 --> 00:42:30,240
production but this might be very very

00:42:27,900 --> 00:42:32,520
useful for testing out and building dev

00:42:30,240 --> 00:42:34,320
clusters or if you're really brave right

00:42:32,520 --> 00:42:36,300
so you can just edit the things you

00:42:34,320 --> 00:42:37,950
don't have to run puppet apply over and

00:42:36,300 --> 00:42:39,870
over again or wait you just hack on the

00:42:37,950 --> 00:42:41,520
thing if you break things build a new

00:42:39,870 --> 00:42:43,410
cluster and then hopefully you can do

00:42:41,520 --> 00:42:44,940
this quite safely and also it's quite

00:42:43,410 --> 00:42:50,040
useful for the remote execution case

00:42:44,940 --> 00:42:52,020
well so you can say whatever hey and you

00:42:50,040 --> 00:42:53,220
know save it whatever same thing change

00:42:52,020 --> 00:42:57,210
it to whatever you want different

00:42:53,220 --> 00:43:00,060
resources whatever just one little bit

00:42:57,210 --> 00:43:02,580
to take this further so as you can see

00:43:00,060 --> 00:43:05,160
MGMT is still running continuously but I

00:43:02,580 --> 00:43:07,350
can actually kill it or you could have

00:43:05,160 --> 00:43:09,630
it for example take over and build

00:43:07,350 --> 00:43:12,560
itself and with a life of its own

00:43:09,630 --> 00:43:16,260
but actually there's this converged

00:43:12,560 --> 00:43:17,400
timeout option which was that same one I

00:43:16,260 --> 00:43:20,460
showed you in the beginning remember the

00:43:17,400 --> 00:43:22,590
converged cyma thing so what I can do is

00:43:20,460 --> 00:43:24,240
it actually is going to run it wait for

00:43:22,590 --> 00:43:26,250
the whole cluster as a whole to converge

00:43:24,240 --> 00:43:28,500
and when that whole thing is converged

00:43:26,250 --> 00:43:30,300
then shut down so this is good for one

00:43:28,500 --> 00:43:31,830
shot deploys that you don't want to

00:43:30,300 --> 00:43:34,020
continuously manage and so on so let's

00:43:31,830 --> 00:43:34,830
run this and let's time it just to see

00:43:34,020 --> 00:43:38,700
how long this takes

00:43:34,830 --> 00:43:40,080
so five second converge runs it copies

00:43:38,700 --> 00:43:42,060
the binary is over it actually caches

00:43:40,080 --> 00:43:45,420
them if you want nothing's happening for

00:43:42,060 --> 00:43:47,370
five seconds two three four five and the

00:43:45,420 --> 00:43:49,530
whole thing shuts down and here it took

00:43:47,370 --> 00:43:52,290
eight seconds so three seconds of

00:43:49,530 --> 00:43:57,090
overhead to do all this operation so

00:43:52,290 --> 00:43:59,010
yeah cool this is basically the drawing

00:43:57,090 --> 00:44:01,050
I did again really drawings if

00:43:59,010 --> 00:44:02,790
you're bad at code and good at art I'm

00:44:01,050 --> 00:44:05,550
bad at both but send me a nice or

00:44:02,790 --> 00:44:08,070
drawing other ideas for this that it

00:44:05,550 --> 00:44:09,960
aren't implemented so this runs over SSH

00:44:08,070 --> 00:44:10,170
and I showed you all the stuff but if

00:44:09,960 --> 00:44:12,060
you

00:44:10,170 --> 00:44:14,490
wanted you could actually build as a

00:44:12,060 --> 00:44:16,290
next step a hierarchical version of this

00:44:14,490 --> 00:44:19,140
so imagine instead that the first

00:44:16,290 --> 00:44:21,600
machine SSH is to say 10 hosts and then

00:44:19,140 --> 00:44:22,950
each of those 10 go to 10 other hosts or

00:44:21,600 --> 00:44:25,440
something like that if you really wanted

00:44:22,950 --> 00:44:27,150
to do a crazy one-shot run or something

00:44:25,440 --> 00:44:28,920
like that that would be quite easy to

00:44:27,150 --> 00:44:29,790
add to MGMT and if that's a feature that

00:44:28,920 --> 00:44:31,640
you'd like to work on

00:44:29,790 --> 00:44:33,870
please ping me it might be fun to do

00:44:31,640 --> 00:44:36,660
it's actually useful for a completely

00:44:33,870 --> 00:44:38,130
other different use case suppose you're

00:44:36,660 --> 00:44:39,960
like me you're working remotely and

00:44:38,130 --> 00:44:42,660
you're hacking in a coffee shop on

00:44:39,960 --> 00:44:44,670
shitty Wi-Fi cuz I live in Canada and

00:44:42,660 --> 00:44:47,010
your data center it's obviously on like

00:44:44,670 --> 00:44:49,080
some fast local Ethernet 10 gig or

00:44:47,010 --> 00:44:51,720
whatever your first top of the remote

00:44:49,080 --> 00:44:53,880
executor could be into the data center

00:44:51,720 --> 00:44:55,560
and then from there that machine splays

00:44:53,880 --> 00:44:57,510
out to as many machines as you want so

00:44:55,560 --> 00:45:00,930
that's another good use for the

00:44:57,510 --> 00:45:03,240
hierarchical design make sense so just

00:45:00,930 --> 00:45:05,190
it's a little bonus again the

00:45:03,240 --> 00:45:06,600
distributed system is the main thing but

00:45:05,190 --> 00:45:10,440
this is a little bonus that we built in

00:45:06,600 --> 00:45:15,540
because we thought it was a nice fit so

00:45:10,440 --> 00:45:17,220
a few other things I'm going to just go

00:45:15,540 --> 00:45:19,260
to the end I want to just sort of close

00:45:17,220 --> 00:45:20,760
last some questions and then if we have

00:45:19,260 --> 00:45:23,070
more time we can look at a few more

00:45:20,760 --> 00:45:25,260
things if you're bored I showed you the

00:45:23,070 --> 00:45:27,270
resource guide we have an MGMT the

00:45:25,260 --> 00:45:28,980
concept of meta parameters so meta

00:45:27,270 --> 00:45:30,720
parameters are bits of code that are

00:45:28,980 --> 00:45:32,400
implemented in the engine which is what

00:45:30,720 --> 00:45:34,500
I've been showing you and in that engine

00:45:32,400 --> 00:45:35,820
they can do magic things to any existing

00:45:34,500 --> 00:45:37,410
resource that would you doing something

00:45:35,820 --> 00:45:39,240
special these are all we have at the

00:45:37,410 --> 00:45:41,100
moment we have Auto grouping which I

00:45:39,240 --> 00:45:43,350
showed you we have an OOP so if you want

00:45:41,100 --> 00:45:45,240
to not touch a resource and just make

00:45:43,350 --> 00:45:46,980
sure that applies you can see what's

00:45:45,240 --> 00:45:49,170
going to happen but not make any changes

00:45:46,980 --> 00:45:50,850
kind of like puppet we have that if a

00:45:49,170 --> 00:45:54,300
resource fails we can actually set a

00:45:50,850 --> 00:45:56,160
retry timer that's the delay and also

00:45:54,300 --> 00:45:58,050
retry count so try this forever

00:45:56,160 --> 00:46:00,780
or try this up to three times and then

00:45:58,050 --> 00:46:02,040
permanently fail if you really don't

00:46:00,780 --> 00:46:03,720
want to do the watch thing for some

00:46:02,040 --> 00:46:05,580
reason you can actually use the poll

00:46:03,720 --> 00:46:07,530
meta parameter so instead of watching

00:46:05,580 --> 00:46:09,330
live and detecting when something

00:46:07,530 --> 00:46:11,070
changes you can say pull every 10

00:46:09,330 --> 00:46:13,860
seconds or every 5 minutes or whatever

00:46:11,070 --> 00:46:16,050
you want if you really like we have a

00:46:13,860 --> 00:46:18,150
limit and burst meta parameters these do

00:46:16,050 --> 00:46:19,560
this weird computer science thing called

00:46:18,150 --> 00:46:21,750
a token bucket so if you want to

00:46:19,560 --> 00:46:23,010
actually limit the events coming in so

00:46:21,750 --> 00:46:23,890
that you don't make changes to a

00:46:23,010 --> 00:46:25,420
resource

00:46:23,890 --> 00:46:26,829
more than three times per second or

00:46:25,420 --> 00:46:28,510
something like that this can be quite

00:46:26,829 --> 00:46:30,130
useful if people are changing the

00:46:28,510 --> 00:46:32,140
environment very very quickly and you

00:46:30,130 --> 00:46:34,000
want to just even out the load and we

00:46:32,140 --> 00:46:36,130
even have a newer thing called a

00:46:34,000 --> 00:46:38,710
semaphore and basically this is a lock

00:46:36,130 --> 00:46:40,599
so in the graph you can say don't let

00:46:38,710 --> 00:46:43,450
more than two of these things run at the

00:46:40,599 --> 00:46:46,119
same time so for systems that really are

00:46:43,450 --> 00:46:47,680
big are smaller systems that don't want

00:46:46,119 --> 00:46:49,750
to run the hundred resources at the same

00:46:47,680 --> 00:46:52,359
time you can easily add a semaphore to

00:46:49,750 --> 00:46:56,019
reduce the parallelism I know what a

00:46:52,359 --> 00:46:59,710
crazy idea or make sure that you only

00:46:56,019 --> 00:47:01,089
run this set of operations but not at

00:46:59,710 --> 00:47:02,410
the same time as this set of operations

00:47:01,089 --> 00:47:04,690
so if there's some dependency between

00:47:02,410 --> 00:47:05,740
the two more ideas are planned so if you

00:47:04,690 --> 00:47:08,710
have other things you want to work on

00:47:05,740 --> 00:47:11,470
this could be fun too a few other

00:47:08,710 --> 00:47:13,930
concepts so MGMT it's written golang and

00:47:11,470 --> 00:47:16,059
the code is actually written a bit like

00:47:13,930 --> 00:47:18,190
a library that has a very small front

00:47:16,059 --> 00:47:21,119
end with the CLI stuff so you can

00:47:18,190 --> 00:47:23,260
actually take MGMT and instead of

00:47:21,119 --> 00:47:25,029
writing a whole management thing for

00:47:23,260 --> 00:47:28,240
your new piece of software you can embed

00:47:25,029 --> 00:47:30,279
MGMT natively into a goal-line binary

00:47:28,240 --> 00:47:32,619
and use all of the built-in graph stuff

00:47:30,279 --> 00:47:35,289
and utilities for your management

00:47:32,619 --> 00:47:37,180
project so you can use golang to program

00:47:35,289 --> 00:47:38,859
the graphs to describe the graphs to

00:47:37,180 --> 00:47:40,809
describe the graph Henderson and a whole

00:47:38,859 --> 00:47:42,940
bunch of other things one of the things

00:47:40,809 --> 00:47:45,190
we're considering doing with at Red Hat

00:47:42,940 --> 00:47:47,710
is Red Hat has this cluster FS storage

00:47:45,190 --> 00:47:49,480
project and I've recently joined the

00:47:47,710 --> 00:47:51,130
Gloucester and Ceph team and they're

00:47:49,480 --> 00:47:52,869
working on a new replacement for the

00:47:51,130 --> 00:47:54,309
Gloucester management software so that

00:47:52,869 --> 00:47:56,799
Gloucester Dee's its part of Gloucester

00:47:54,309 --> 00:47:59,380
FS and one of the designs that I

00:47:56,799 --> 00:48:01,569
proposed is actually embedding MGMT into

00:47:59,380 --> 00:48:02,980
the core of Gloucester d2 and that way

00:48:01,569 --> 00:48:04,660
you can actually describe what you want

00:48:02,980 --> 00:48:07,630
to do all these operations as graphs and

00:48:04,660 --> 00:48:09,789
hopefully this will be a good path to

00:48:07,630 --> 00:48:11,680
making the storage system autonomous and

00:48:09,789 --> 00:48:13,630
having it self manage itself and so on

00:48:11,680 --> 00:48:15,099
so if you're interested in storage and

00:48:13,630 --> 00:48:15,970
you want to help make cluster management

00:48:15,099 --> 00:48:17,440
really awesome

00:48:15,970 --> 00:48:19,539
please ping me I'm more than happy to

00:48:17,440 --> 00:48:22,150
talk about that there's a few other

00:48:19,539 --> 00:48:23,920
things I'm not talking about this today

00:48:22,150 --> 00:48:26,500
but I have blog post about it

00:48:23,920 --> 00:48:29,289
resources can actually accept and

00:48:26,500 --> 00:48:30,700
produce data along the graph edges so

00:48:29,289 --> 00:48:33,039
this is actually kind of similar to what

00:48:30,700 --> 00:48:35,890
terraform does where it has variables

00:48:33,039 --> 00:48:37,509
that are produced that take data out say

00:48:35,890 --> 00:48:39,429
the IP address of some

00:48:37,509 --> 00:48:40,569
AWS host you made and push it into

00:48:39,429 --> 00:48:42,309
something else so we have something

00:48:40,569 --> 00:48:44,409
called send/receive which if you're

00:48:42,309 --> 00:48:46,299
interested in describing things this

00:48:44,409 --> 00:48:48,130
might be a cool thing to look into this

00:48:46,299 --> 00:48:49,779
is basically to replace the kind of code

00:48:48,130 --> 00:48:52,539
you might have seen in puppet where you

00:48:49,779 --> 00:48:54,789
have a big exact resource that does like

00:48:52,539 --> 00:48:57,729
W get and pipes it to a file and so on

00:48:54,789 --> 00:48:59,289
that sort of stuff so something to look

00:48:57,729 --> 00:49:01,630
into future work

00:48:59,289 --> 00:49:03,789
MGMT is unfortunately not finished I

00:49:01,630 --> 00:49:05,979
wish it was when it's already finished

00:49:03,789 --> 00:49:08,709
anyways but there's quite a lot of stuff

00:49:05,979 --> 00:49:11,559
to do I've shown you these things at the

00:49:08,709 --> 00:49:13,269
moment to describe the graphs we have

00:49:11,559 --> 00:49:13,599
these raw data structures which are in

00:49:13,269 --> 00:49:15,789
llamó

00:49:13,599 --> 00:49:17,619
they're fairly simple you can generate

00:49:15,789 --> 00:49:20,259
them you can also use puppet code to

00:49:17,619 --> 00:49:21,939
describe your graphs but fundamentally

00:49:20,259 --> 00:49:24,099
there's a much safer better way to

00:49:21,939 --> 00:49:26,109
describe the graphs and unfortunately

00:49:24,099 --> 00:49:27,789
that involves a new language and there's

00:49:26,109 --> 00:49:29,499
some very good reasons why we can't use

00:49:27,789 --> 00:49:31,119
any existing language and I'm very

00:49:29,499 --> 00:49:34,539
excited to tell you more about the

00:49:31,119 --> 00:49:36,339
language it's just not ready yet so this

00:49:34,539 --> 00:49:37,509
is a work in progress but it is coming

00:49:36,339 --> 00:49:39,159
so there will be a language and

00:49:37,509 --> 00:49:41,079
hopefully you like it the idea is to

00:49:39,159 --> 00:49:42,309
make it very very safe very easy to

00:49:41,079 --> 00:49:43,959
reason about and so that you can

00:49:42,309 --> 00:49:46,119
actually describe these complex

00:49:43,959 --> 00:49:48,699
distributed systems very easily so this

00:49:46,119 --> 00:49:51,339
is coming if you love lectures and

00:49:48,699 --> 00:49:52,389
parsers and languages and reactive

00:49:51,339 --> 00:49:53,769
programming and functional reactive

00:49:52,389 --> 00:49:55,749
programming all these cool things

00:49:53,769 --> 00:49:59,229
please ping me we'd love to have your

00:49:55,749 --> 00:50:00,669
contributions new resources we have a

00:49:59,229 --> 00:50:02,109
vert resource there's always more things

00:50:00,669 --> 00:50:04,299
we could add to it hot plugging of

00:50:02,109 --> 00:50:06,159
memory chips for example we're working

00:50:04,299 --> 00:50:07,659
on an N spawn resource for containers if

00:50:06,159 --> 00:50:09,069
you'd like to do that or if you really

00:50:07,659 --> 00:50:10,719
like docker or some other container

00:50:09,069 --> 00:50:12,969
thing and you want to help us build a

00:50:10,719 --> 00:50:15,399
resource primitive for that network card

00:50:12,969 --> 00:50:17,889
resource to actually set up your network

00:50:15,399 --> 00:50:19,839
cards all sorts of things are possible

00:50:17,889 --> 00:50:22,179
even ideas I haven't mentioned so if you

00:50:19,839 --> 00:50:25,899
want to build these quite cool you get

00:50:22,179 --> 00:50:27,309
like pro code evaluations for like

00:50:25,899 --> 00:50:29,549
sending your patches so hopefully that

00:50:27,309 --> 00:50:31,719
helps you if you're not a goal-line pro

00:50:29,549 --> 00:50:34,779
there's some stuff we want to fix in the

00:50:31,719 --> 00:50:36,219
EDD clustering code that's just random

00:50:34,779 --> 00:50:37,899
things going on and there's lots of

00:50:36,219 --> 00:50:39,880
other things just to keep it clear keep

00:50:37,899 --> 00:50:41,529
in mind this is a community project this

00:50:39,880 --> 00:50:43,989
is not a product you cannot buy this

00:50:41,529 --> 00:50:45,939
from Red Hat please don't bug Red Hat to

00:50:43,989 --> 00:50:48,909
buy this because it does not exist it's

00:50:45,939 --> 00:50:51,550
just an upstream and hopefully I'll be a

00:50:48,909 --> 00:50:54,850
good mentor or steward of the upstream

00:50:51,550 --> 00:50:56,820
for now the language I talked about this

00:50:54,850 --> 00:50:59,440
is about you guys so how can you help

00:50:56,820 --> 00:51:01,360
how can you help you can use this you

00:50:59,440 --> 00:51:03,400
can test it you can patch it if you like

00:51:01,360 --> 00:51:05,410
sending patches we have a few we have

00:51:03,400 --> 00:51:09,010
two great MGMT contributors in the front

00:51:05,410 --> 00:51:12,100
Felix and Julia who's firstly writing a

00:51:09,010 --> 00:51:14,460
new MGMT patch I'm sure so if you want

00:51:12,100 --> 00:51:16,570
to become famous like them send patches

00:51:14,460 --> 00:51:18,310
you can share this with your friends you

00:51:16,570 --> 00:51:21,550
can document it you can start on github

00:51:18,310 --> 00:51:23,110
purple idea / MGMT start it show that

00:51:21,550 --> 00:51:25,090
you're interested in the project you can

00:51:23,110 --> 00:51:27,160
blog about it there's a nice group in

00:51:25,090 --> 00:51:29,290
France who didn't even tell me but they

00:51:27,160 --> 00:51:30,880
did a little Meetup and played with MGMT

00:51:29,290 --> 00:51:33,430
and wrote a nice blog post about it so

00:51:30,880 --> 00:51:35,170
if you're into talking about your first

00:51:33,430 --> 00:51:36,910
experiences and telling your friends do

00:51:35,170 --> 00:51:39,190
that if you have Twitter you can tweet

00:51:36,910 --> 00:51:41,140
it discuss it and just hack on this

00:51:39,190 --> 00:51:43,270
stuff it's all about hacking good

00:51:41,140 --> 00:51:45,850
that we want I have one marketing slide

00:51:43,270 --> 00:51:47,770
because Red Hat keeps paying me and I'm

00:51:45,850 --> 00:51:50,410
glad that they pay my salary so if you

00:51:47,770 --> 00:51:52,570
do want like to you know give them money

00:51:50,410 --> 00:51:54,280
please see them to have all sorts of

00:51:52,570 --> 00:51:55,810
things that you can give the money for

00:51:54,280 --> 00:51:58,720
and they're good they're good to work

00:51:55,810 --> 00:52:00,280
for so yeah thanks right head just to

00:51:58,720 --> 00:52:02,500
clarify though again this is an upstream

00:52:00,280 --> 00:52:05,110
community project it's not a product so

00:52:02,500 --> 00:52:07,630
I can't help you there let's just recap

00:52:05,110 --> 00:52:10,630
what we've gone through so far now let

00:52:07,630 --> 00:52:12,130
me recap I don't know if you can see it

00:52:10,630 --> 00:52:16,750
some Arthur Benjamin putting the cap

00:52:12,130 --> 00:52:18,640
back on this pen it's not funny so a few

00:52:16,750 --> 00:52:20,470
links there's the technical blog of

00:52:18,640 --> 00:52:21,730
James now you know about it so next time

00:52:20,470 --> 00:52:23,920
if I see what a conference you don't

00:52:21,730 --> 00:52:25,630
raise your hand you're in trouble we

00:52:23,920 --> 00:52:28,600
have the github page purple idea slash

00:52:25,630 --> 00:52:31,300
MGMT so if you want to check it out all

00:52:28,600 --> 00:52:33,160
the code docs at the very bottom of the

00:52:31,300 --> 00:52:35,200
github page are some videos to some

00:52:33,160 --> 00:52:37,120
existing talks some of which have a lot

00:52:35,200 --> 00:52:38,740
of the same material some covered in

00:52:37,120 --> 00:52:40,510
different ways and so on so if I said

00:52:38,740 --> 00:52:42,700
something to quickly go at the bottom

00:52:40,510 --> 00:52:44,050
watch a talk there's also a list of blog

00:52:42,700 --> 00:52:44,680
posts I've written about each of these

00:52:44,050 --> 00:52:46,210
topics

00:52:44,680 --> 00:52:47,860
ad nauseam so if you really want to

00:52:46,210 --> 00:52:50,050
drill into how one of these concepts

00:52:47,860 --> 00:52:53,530
work go through the blog posts they're

00:52:50,050 --> 00:52:55,870
an English sorry but hopefully they're

00:52:53,530 --> 00:52:58,240
understandable and I'm on the Internet

00:52:55,870 --> 00:53:00,820
I'm purple idea you can find me on IRC

00:52:58,240 --> 00:53:04,120
on freenode on Twitter github at

00:53:00,820 --> 00:53:05,200
gmail.com at red hakam don't be shy

00:53:04,120 --> 00:53:08,260
reach out if you want to get into

00:53:05,200 --> 00:53:10,090
volved and yeah this is just some dumb

00:53:08,260 --> 00:53:13,000
slide I found on the internet because I

00:53:10,090 --> 00:53:15,400
do magic things sometimes I need all a

00:53:13,000 --> 00:53:17,140
big favor from you so if you see I

00:53:15,400 --> 00:53:18,580
always am afraid of prancing your name

00:53:17,140 --> 00:53:19,810
on but if you see burned he is one of

00:53:18,580 --> 00:53:21,490
the main organizers or the main

00:53:19,810 --> 00:53:23,350
organizer of this conference and if you

00:53:21,490 --> 00:53:25,180
like this talk I need you to help me

00:53:23,350 --> 00:53:27,220
coordinating a distributed denial

00:53:25,180 --> 00:53:29,680
service attack on him I need you after

00:53:27,220 --> 00:53:31,300
this talk to take five seconds go up to

00:53:29,680 --> 00:53:33,220
him and tell him hey I really like

00:53:31,300 --> 00:53:34,870
James's talk I really like purple ideas

00:53:33,220 --> 00:53:37,180
talk do this it will be a little

00:53:34,870 --> 00:53:38,440
hilarious and he'll have like 50 people

00:53:37,180 --> 00:53:40,360
come up to him which would be great so

00:53:38,440 --> 00:53:42,060
if you have 5 seconds 5 seconds don't

00:53:40,360 --> 00:53:44,800
send me a patch but at least bother him

00:53:42,060 --> 00:53:49,630
cool he looks like this this is the

00:53:44,800 --> 00:53:51,880
Internet's photo so please get involved

00:53:49,630 --> 00:53:52,480
we have an IRC channel with about 50 or

00:53:51,880 --> 00:53:55,480
60 people

00:53:52,480 --> 00:53:57,610
MGMT config on freenode join hangout i

00:53:55,480 --> 00:53:59,410
talk about secret things I'm working on

00:53:57,610 --> 00:54:00,760
or not so secret in the channel so if

00:53:59,410 --> 00:54:03,040
you're there you'll be involved

00:54:00,760 --> 00:54:05,590
we have tweeter we have like a bot and a

00:54:03,040 --> 00:54:06,670
hashtag if you're into twittering and we

00:54:05,590 --> 00:54:09,070
actually have a mailing list it's

00:54:06,670 --> 00:54:10,870
extremely low volume when there's MGMT

00:54:09,070 --> 00:54:13,090
stuff happening mini hackathons we had

00:54:10,870 --> 00:54:15,010
one in Berlin other stuff new

00:54:13,090 --> 00:54:16,960
announcements new releases join the list

00:54:15,010 --> 00:54:19,930
Red Hat's hosting it which is nice also

00:54:16,960 --> 00:54:22,990
because finding hosting from analysts is

00:54:19,930 --> 00:54:25,870
impossible so MGMT config you can check

00:54:22,990 --> 00:54:29,590
that out as well and that is the bulk of

00:54:25,870 --> 00:54:30,370
my talk we have we have sometimes so I

00:54:29,590 --> 00:54:33,990
want to OH

00:54:30,370 --> 00:54:33,990
what does that please says great talk

00:54:34,620 --> 00:54:42,730
yeah I have like IRC stuff and so can

00:54:39,100 --> 00:54:44,440
like pop-up messages if you want so I

00:54:42,730 --> 00:54:46,990
want to take a bit of time for questions

00:54:44,440 --> 00:54:51,070
and I think that's a good place to start

00:54:46,990 --> 00:54:53,560
in case you have any questions yes the

00:54:51,070 --> 00:54:55,000
gentleman from a chic work please

00:54:53,560 --> 00:54:56,230
he's smiling he was looking at his

00:54:55,000 --> 00:54:57,670
laptop a lot but I think he was

00:54:56,230 --> 00:54:59,260
listening a bit in the background I

00:54:57,670 --> 00:55:03,100
listen all right aeneas liao

00:54:59,260 --> 00:55:04,960
so I think this was really cool good job

00:55:03,100 --> 00:55:07,170
good talk thank you my question is

00:55:04,960 --> 00:55:08,650
around like the edge triggering

00:55:07,170 --> 00:55:10,690
particularly when it comes to like

00:55:08,650 --> 00:55:12,400
config changes for something that's not

00:55:10,690 --> 00:55:16,270
a package like say I change a config for

00:55:12,400 --> 00:55:18,730
my app and I push out a bad change is it

00:55:16,270 --> 00:55:20,560
possible to integrate

00:55:18,730 --> 00:55:22,600
you said about some befores and kind of

00:55:20,560 --> 00:55:23,830
likes playing the the push out is it

00:55:22,600 --> 00:55:26,500
possible to integrate that with like a

00:55:23,830 --> 00:55:27,700
health check so that if say I make the

00:55:26,500 --> 00:55:30,369
config change two at a time

00:55:27,700 --> 00:55:32,440
and those two now are unhealthy can it

00:55:30,369 --> 00:55:32,680
just stop okay kind of like a kill

00:55:32,440 --> 00:55:36,220
switch

00:55:32,680 --> 00:55:38,050
I'm pattern great question I'm going to

00:55:36,220 --> 00:55:39,400
answer it in different levels I think

00:55:38,050 --> 00:55:40,990
it'll be more comprehensive and you'll

00:55:39,400 --> 00:55:42,790
like it so the first thing people say is

00:55:40,990 --> 00:55:44,950
like all your tools so fast I can't

00:55:42,790 --> 00:55:46,840
control see it in time to this I respond

00:55:44,950 --> 00:55:48,730
that is stupid if you really want it to

00:55:46,840 --> 00:55:50,530
be slower we will add a meta parameter

00:55:48,730 --> 00:55:52,540
that you will write that will do an

00:55:50,530 --> 00:55:54,640
operation wait five seconds and then do

00:55:52,540 --> 00:55:57,550
another operation so yes I think fast is

00:55:54,640 --> 00:55:59,560
better if that's bad that's your mistake

00:55:57,550 --> 00:56:00,880
in the response to fixing that that's

00:55:59,560 --> 00:56:02,050
why we're working on this language one

00:56:00,880 --> 00:56:03,910
of the reasons is to make sure it's very

00:56:02,050 --> 00:56:06,820
very safe so by the time you push

00:56:03,910 --> 00:56:08,260
something hopefully the compiler has

00:56:06,820 --> 00:56:09,880
stopped you from doing off-by-one errors

00:56:08,260 --> 00:56:12,390
and all sorts of dangerous things you

00:56:09,880 --> 00:56:14,560
might have made a mistake on part two

00:56:12,390 --> 00:56:16,750
when you push this out to a cluster of

00:56:14,560 --> 00:56:18,670
machines yes that might go very quickly

00:56:16,750 --> 00:56:22,119
now we're not at the point where we have

00:56:18,670 --> 00:56:24,220
the sort of deployment scenarios built

00:56:22,119 --> 00:56:25,630
yet that's still in progress it's not

00:56:24,220 --> 00:56:27,460
completely finished it's not the

00:56:25,630 --> 00:56:30,070
gentleman who is working on this had a

00:56:27,460 --> 00:56:32,260
child and so now it spends time off his

00:56:30,070 --> 00:56:35,140
child instead of mgmg which is absurd

00:56:32,260 --> 00:56:36,520
but I at least can't fault him on it so

00:56:35,140 --> 00:56:38,020
at the moment that's a little bit on

00:56:36,520 --> 00:56:40,270
pause so someone wants to help build

00:56:38,020 --> 00:56:42,460
that out we're more than happy to sort

00:56:40,270 --> 00:56:43,780
of have a splay sort of option and

00:56:42,460 --> 00:56:44,350
that's you know totally up for

00:56:43,780 --> 00:56:46,240
discussion

00:56:44,350 --> 00:56:48,520
just isn't built yet because we're still

00:56:46,240 --> 00:56:53,440
quite new was there one other aspect

00:56:48,520 --> 00:56:55,480
that you wanted to talk about right yes

00:56:53,440 --> 00:56:57,790
yes so alright so what I wanted to say

00:56:55,480 --> 00:56:59,380
is so the the whole thing where for

00:56:57,790 --> 00:57:00,520
example like terraform does this plan

00:56:59,380 --> 00:57:02,320
and tells you what it does

00:57:00,520 --> 00:57:03,280
I think that's quite neat I don't know

00:57:02,320 --> 00:57:05,350
if we're going to build something like

00:57:03,280 --> 00:57:06,580
that but those sort of conversations I'm

00:57:05,350 --> 00:57:08,410
willing to have if people are really

00:57:06,580 --> 00:57:10,210
interested in doing the work so we're

00:57:08,410 --> 00:57:12,609
very much open to all sorts of designs

00:57:10,210 --> 00:57:14,050
and ideas I haven't built in there but I

00:57:12,609 --> 00:57:16,210
have to prioritize the ones that are

00:57:14,050 --> 00:57:18,310
useful for me first so if those things

00:57:16,210 --> 00:57:19,930
are valuable to you we're more than

00:57:18,310 --> 00:57:22,330
happy to look into adding api's to the

00:57:19,930 --> 00:57:25,030
resources for health and so on we will

00:57:22,330 --> 00:57:27,010
probably be adding a status API which

00:57:25,030 --> 00:57:28,510
will give resource level information for

00:57:27,010 --> 00:57:30,760
other things as well which could

00:57:28,510 --> 00:57:32,410
probably be used for that as well so we

00:57:30,760 --> 00:57:34,540
don't have something currently but

00:57:32,410 --> 00:57:36,280
happy to talk about it and please get

00:57:34,540 --> 00:57:39,220
involved love to collaborate with more

00:57:36,280 --> 00:57:41,290
people great questions anymore who are

00:57:39,220 --> 00:57:42,640
not so shy I won't tease you if your

00:57:41,290 --> 00:57:48,010
question is bad unless your name is

00:57:42,640 --> 00:57:51,160
Felix gentlemen over here and the snazzy

00:57:48,010 --> 00:57:53,620
t-shirts Thanks

00:57:51,160 --> 00:57:56,140
I'm not sure what the scope of this is

00:57:53,620 --> 00:57:58,420
actually so is it supposed to be a

00:57:56,140 --> 00:58:00,940
replacement for puppet or chef or this

00:57:58,420 --> 00:58:02,410
is more like I really like the fact that

00:58:00,940 --> 00:58:04,180
you can embed it into your own programs

00:58:02,410 --> 00:58:05,740
have a really like but I'm not sure what

00:58:04,180 --> 00:58:09,300
this what's the scope of this yeah great

00:58:05,740 --> 00:58:12,190
question about the scope so the truth is

00:58:09,300 --> 00:58:13,900
the embedding into your own programs is

00:58:12,190 --> 00:58:15,880
I think an interesting use case but I

00:58:13,900 --> 00:58:18,160
expect that's probably one percent of

00:58:15,880 --> 00:58:20,140
all views cases I'm to get software

00:58:18,160 --> 00:58:21,580
authors who typically build distributed

00:58:20,140 --> 00:58:23,200
software and have their own management

00:58:21,580 --> 00:58:25,180
daemon that does cluster membership and

00:58:23,200 --> 00:58:26,710
all that stuff is a big hassle for those

00:58:25,180 --> 00:58:28,300
authors and I think we could help them

00:58:26,710 --> 00:58:30,250
if they're interested but that's again

00:58:28,300 --> 00:58:33,070
just a bonus thing that I think is cool

00:58:30,250 --> 00:58:35,020
not the main thing I don't want to talk

00:58:33,070 --> 00:58:36,040
about are we a replacement for puppet or

00:58:35,020 --> 00:58:38,710
chef or something like that

00:58:36,040 --> 00:58:40,600
we're definitely in that space I'm not

00:58:38,710 --> 00:58:41,980
looking at this scheme link I'm not

00:58:40,600 --> 00:58:43,330
looking at this in a competitive point

00:58:41,980 --> 00:58:46,780
of view because I like many of the chef

00:58:43,330 --> 00:58:48,370
people and I think you know there's it's

00:58:46,780 --> 00:58:50,530
a completely different tool but I think

00:58:48,370 --> 00:58:52,270
for new generations of tools we need

00:58:50,530 --> 00:58:53,800
this event stuff built-in it has to be a

00:58:52,270 --> 00:58:55,420
primitive and so I just thought about

00:58:53,800 --> 00:58:57,310
what is the correct design for my

00:58:55,420 --> 00:58:59,380
infrastructure as code and this is the

00:58:57,310 --> 00:59:02,140
tool that aims to solve that there's a

00:58:59,380 --> 00:59:05,260
few more things planned that will be

00:59:02,140 --> 00:59:06,940
part of the tool but probably that sort

00:59:05,260 --> 00:59:09,490
of thing so possibly a combination of

00:59:06,940 --> 00:59:09,910
chef's may be terraform that sort of

00:59:09,490 --> 00:59:11,770
thing

00:59:09,910 --> 00:59:13,090
but to be honest when I started this I

00:59:11,770 --> 00:59:16,300
didn't really know much about terraform

00:59:13,090 --> 00:59:18,520
for example so get involved and help

00:59:16,300 --> 00:59:20,380
shape the tool the way you want to build

00:59:18,520 --> 00:59:22,600
it yeah great question any more

00:59:20,380 --> 00:59:24,700
I should mention if I didn't mention if

00:59:22,600 --> 00:59:26,320
you ask questions or you're really nice

00:59:24,700 --> 00:59:28,120
and you come up after and promised users

00:59:26,320 --> 00:59:30,010
I have stickers which you can have

00:59:28,120 --> 00:59:31,930
they're crazy expensive because the

00:59:30,010 --> 00:59:32,620
sticker cartels charge a fortune but if

00:59:31,930 --> 00:59:34,570
you're going to stick them on your

00:59:32,620 --> 00:59:36,880
laptops I will give you one so don't be

00:59:34,570 --> 00:59:38,680
shy ask a question or just come up and

00:59:36,880 --> 00:59:43,080
get a sticker anyways at the end more

00:59:38,680 --> 00:59:43,080
questions a gentleman over here

00:59:46,110 --> 00:59:52,360
thank you epitaph maybe um how about

00:59:50,440 --> 00:59:54,370
something like hero in your new language

00:59:52,360 --> 00:59:55,780
because we use that quite a lot in our

00:59:54,370 --> 00:59:57,790
patters configs

00:59:55,780 --> 00:59:59,440
the hero question is a great question

00:59:57,790 --> 01:00:01,900
I've been thinking about this a lot I

00:59:59,440 --> 01:00:02,800
have there's a few problems I have with

01:00:01,900 --> 01:00:05,650
hero

01:00:02,800 --> 01:00:07,300
higher or whatever it is based on thing

01:00:05,650 --> 01:00:09,340
the thing I hate the most about here is

01:00:07,300 --> 01:00:12,040
how it merges the different layers

01:00:09,340 --> 01:00:12,940
together I think that that is probably

01:00:12,040 --> 01:00:14,950
something that I would not want

01:00:12,940 --> 01:00:17,320
implement I do expect there to be some

01:00:14,950 --> 01:00:20,230
sort of way to have a yama or XML or

01:00:17,320 --> 01:00:22,600
JSON file that puts the data into the

01:00:20,230 --> 01:00:24,250
top-level resources and so on it just

01:00:22,600 --> 01:00:25,330
we're not that far along yet into the

01:00:24,250 --> 01:00:26,920
language I don't know what's going to

01:00:25,330 --> 01:00:30,310
look like but if you want to be involved

01:00:26,920 --> 01:00:33,040
please let me know and get involved in

01:00:30,310 --> 01:00:35,050
building out what that looks like what

01:00:33,040 --> 01:00:38,380
did I want to tell you that's most of it

01:00:35,050 --> 01:00:40,060
yeah we will have some way of doing this

01:00:38,380 --> 01:00:42,550
it's not it's not coded yet though

01:00:40,060 --> 01:00:47,350
that's for sure

01:00:42,550 --> 01:00:49,240
good question any more questions sorry

01:00:47,350 --> 01:00:51,730
don't be so shy it's okay I don't bite

01:00:49,240 --> 01:00:53,770
I'm Canadian I don't have any weapons so

01:00:51,730 --> 01:00:57,790
it's like safe not from United States if

01:00:53,770 --> 01:01:00,520
you look has a question yeah since you

01:00:57,790 --> 01:01:03,880
promised to burn me anyway I think I can

01:01:00,520 --> 01:01:08,110
be the guy who gives an opinion and then

01:01:03,880 --> 01:01:11,080
masks a question so uh wouldn't you

01:01:08,110 --> 01:01:13,330
agree that that the name MGMT is a

01:01:11,080 --> 01:01:14,830
little unwieldy and makes it difficult

01:01:13,330 --> 01:01:16,330
to go yeah

01:01:14,830 --> 01:01:18,360
who's a programmer here who's good at

01:01:16,330 --> 01:01:20,530
naming variables please raise your hand

01:01:18,360 --> 01:01:20,950
finally they all he's going to call you

01:01:20,530 --> 01:01:26,380
Alya

01:01:20,950 --> 01:01:29,070
don't do it yeah I mean I for like six

01:01:26,380 --> 01:01:31,300
months I tried to think of a better name

01:01:29,070 --> 01:01:33,100
ansible is a great name for example but

01:01:31,300 --> 01:01:35,800
that's taken I couldn't have used that

01:01:33,100 --> 01:01:37,180
hey this is ansible no it doesn't work I

01:01:35,800 --> 01:01:41,950
just I'm sorry

01:01:37,180 --> 01:01:45,280
so ice why MGMT config and Google or dr.

01:01:41,950 --> 01:01:46,750
Koh or whatever kids use should find it

01:01:45,280 --> 01:01:49,170
I'm sorry feel like it's short it's hot

01:01:46,750 --> 01:01:52,420
descriptive so if anyone has a good idea

01:01:49,170 --> 01:01:54,190
it's James so yeah if you if you submit

01:01:52,420 --> 01:01:55,840
like a significant amount of patches and

01:01:54,190 --> 01:01:56,980
you have a different name we'll consider

01:01:55,840 --> 01:01:59,340
changing it but

01:01:56,980 --> 01:02:02,890
I'm not into renames at the moment sorry

01:01:59,340 --> 01:02:05,080
more questions we have we have we're

01:02:02,890 --> 01:02:07,240
basically on the nose unfortunately we

01:02:05,080 --> 01:02:09,520
don't have time and I'm sorry

01:02:07,240 --> 01:02:11,470
so thank you very much if you want to

01:02:09,520 --> 01:02:13,780
sticker come up and please get involved

01:02:11,470 --> 01:02:14,370
so James thank you very much for this

01:02:13,780 --> 01:02:20,150
amazing talk

01:02:14,370 --> 01:02:20,150

YouTube URL: https://www.youtube.com/watch?v=LkEtBVLfygE


