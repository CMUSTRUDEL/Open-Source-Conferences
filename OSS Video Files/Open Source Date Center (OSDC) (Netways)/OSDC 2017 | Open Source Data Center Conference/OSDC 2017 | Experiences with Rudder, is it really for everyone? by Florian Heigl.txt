Title: OSDC 2017 | Experiences with Rudder, is it really for everyone? by Florian Heigl
Publication date: 2017-06-02
Playlist: OSDC 2017 | Open Source Data Center Conference
Description: 
	Rudder is a quite new configuration management system. You get a graphical interface that allows for easy editing of your policy, and includes very detailed reporting on your systems' compliance. Your policy is applied every few minutes, broken things are fixed till the system takes the right course again. All changes and the current state are reported visually to allow easy debugging, even for people who aren't the system's designer. Rudder is very much concerned with accessibility - let more people understand and enhance your environment. On the one end that's via the GUI, on the other end it's via APIs that let you access things you might not have dreamed of. I've made use of some of those features over the last two years, in a handful of setups. It's proven more helpful than I ever expected. I'd like to share my experiences with the tool and the project, many of them were quite exciting!
Captions: 
	00:00:09,559 --> 00:00:15,590
so welcome everyone to florian Hegel who

00:00:13,610 --> 00:00:17,180
will be talking about his experience

00:00:15,590 --> 00:00:21,700
with Radha and whether you should also

00:00:17,180 --> 00:00:24,680
have some experiences with it okay hi

00:00:21,700 --> 00:00:28,669
very happy to be here and I hope the

00:00:24,680 --> 00:00:31,540
stock will like be in the between of

00:00:28,669 --> 00:00:34,340
going into deep technical stuff and

00:00:31,540 --> 00:00:36,200
actually covering the experiences so I

00:00:34,340 --> 00:00:38,930
had to rewrite it a few times because I

00:00:36,200 --> 00:00:42,769
always go I was going over to their

00:00:38,930 --> 00:00:44,510
direction of a showcase or to only

00:00:42,769 --> 00:00:46,160
having technical screenshots or

00:00:44,510 --> 00:00:48,620
something ever I really want to speak

00:00:46,160 --> 00:00:55,760
about experiences from a few years with

00:00:48,620 --> 00:00:58,100
using it now so what I'm doing is I'm a

00:00:55,760 --> 00:01:00,469
consultant in UNIX administration and I

00:00:58,100 --> 00:01:04,159
try to really also fix processes if I'm

00:01:00,469 --> 00:01:07,159
somewhere and I work a lot with rudder

00:01:04,159 --> 00:01:08,900
and OpenNebula so this is why I also

00:01:07,159 --> 00:01:12,560
have a lab which is running on open

00:01:08,900 --> 00:01:15,259
amulet and is running rudder and I hope

00:01:12,560 --> 00:01:17,509
I can't get through the slides fast

00:01:15,259 --> 00:01:22,939
enough without dropping all the content

00:01:17,509 --> 00:01:24,920
and we can still see some demo I've been

00:01:22,939 --> 00:01:29,829
using a few config management tools in

00:01:24,920 --> 00:01:32,149
the past I started using ansible in 2011

00:01:29,829 --> 00:01:33,680
basically it was a cobbler user and

00:01:32,149 --> 00:01:35,479
Michel de Haan came into the channel in

00:01:33,680 --> 00:01:38,359
it so I have this new thing try it out

00:01:35,479 --> 00:01:41,180
and it was really good and I think most

00:01:38,359 --> 00:01:46,939
people who use it know why it's really

00:01:41,180 --> 00:01:52,310
helpful for some tasks and I'm still

00:01:46,939 --> 00:01:56,090
using it for some some points but there

00:01:52,310 --> 00:02:00,320
was an like we had to pick a tool for

00:01:56,090 --> 00:02:02,149
more continuous fixing of servers

00:02:00,320 --> 00:02:04,130
keeping stuff in shape and so on and it

00:02:02,149 --> 00:02:09,470
should really run quite hands off and

00:02:04,130 --> 00:02:12,530
also be powerful and a few tools I

00:02:09,470 --> 00:02:14,960
looked at warily with this attitude of

00:02:12,530 --> 00:02:17,690
if our two doesn't do that then just

00:02:14,960 --> 00:02:21,409
change your problems and and we don't

00:02:17,690 --> 00:02:23,060
have to like really think hard just you

00:02:21,409 --> 00:02:23,420
just do it differently so it fits out

00:02:23,060 --> 00:02:25,520
too

00:02:23,420 --> 00:02:31,000
and in rather I haven't seen that a lot

00:02:25,520 --> 00:02:34,099
and I like that I really like that their

00:02:31,000 --> 00:02:38,900
idea is to do continuous configuration

00:02:34,099 --> 00:02:40,970
that means rather is running as a tool

00:02:38,900 --> 00:02:45,440
quite constantly it's every five minutes

00:02:40,970 --> 00:02:49,400
and it also adjusts to what changes in

00:02:45,440 --> 00:02:52,819
the system so if you for example have a

00:02:49,400 --> 00:02:57,680
rule on a system that should configure

00:02:52,819 --> 00:03:00,890
Apache that's easy but how would you do

00:02:57,680 --> 00:03:02,030
it in another tool if Apache should

00:03:00,890 --> 00:03:05,030
happen to be installed

00:03:02,030 --> 00:03:07,670
I want it configured for security within

00:03:05,030 --> 00:03:11,569
a few minutes and that's something which

00:03:07,670 --> 00:03:13,370
could happen with rudder and it comes

00:03:11,569 --> 00:03:15,430
from a compliance direction so it's not

00:03:13,370 --> 00:03:18,319
just config management it's also about

00:03:15,430 --> 00:03:19,910
finding out what has changed on the

00:03:18,319 --> 00:03:24,049
systems and having very very good

00:03:19,910 --> 00:03:30,859
reporting on these things the project

00:03:24,049 --> 00:03:32,989
exists since 2011 and the idea and why

00:03:30,859 --> 00:03:34,609
it's called rudder was about looking at

00:03:32,989 --> 00:03:38,930
system script so imagine you have a

00:03:34,609 --> 00:03:40,609
fleet of servers and suddenly 20 of them

00:03:38,930 --> 00:03:42,890
go a different way you would like to

00:03:40,609 --> 00:03:45,019
know that and that's the basic idea and

00:03:42,890 --> 00:03:48,620
how it got its name and then you want to

00:03:45,019 --> 00:03:50,690
really assess what could I do to improve

00:03:48,620 --> 00:03:55,730
my configuration to get those back on

00:03:50,690 --> 00:03:58,130
course what I like from Raiders history

00:03:55,730 --> 00:04:00,079
is that it wasn't just started by

00:03:58,130 --> 00:04:03,700
somebody who wanted to have a better

00:04:00,079 --> 00:04:05,900
tool for himself by consultants

00:04:03,700 --> 00:04:08,390
instead it was started by consultants

00:04:05,900 --> 00:04:10,910
who already did configuration management

00:04:08,390 --> 00:04:17,200
consulting and wanted to make something

00:04:10,910 --> 00:04:20,359
better for everybody else it has a

00:04:17,200 --> 00:04:22,789
limited focus so they don't try to roll

00:04:20,359 --> 00:04:27,889
out applications but they want to do

00:04:22,789 --> 00:04:30,160
good infrastructure so for example if

00:04:27,889 --> 00:04:32,780
you had an open shift cluster and

00:04:30,160 --> 00:04:36,169
everything on top is really running

00:04:32,780 --> 00:04:39,210
nicely you deploy your applications

00:04:36,169 --> 00:04:41,160
but you have certain issues on the

00:04:39,210 --> 00:04:46,560
teaching side and so on that's something

00:04:41,160 --> 00:04:48,660
where you could look at rather and yeah

00:04:46,560 --> 00:04:50,400
there are a very old slogans

00:04:48,660 --> 00:04:51,870
configuration management for the masses

00:04:50,400 --> 00:04:55,860
so if you've seen that somewhere else

00:04:51,870 --> 00:04:58,230
this is where it's coming from and their

00:04:55,860 --> 00:04:59,790
idea is not to just make the

00:04:58,230 --> 00:05:02,490
configuration management

00:04:59,790 --> 00:05:07,230
language easy or something it's about

00:05:02,490 --> 00:05:10,800
making the whole tool easy so that not

00:05:07,230 --> 00:05:13,800
only the two DevOps guys are able to use

00:05:10,800 --> 00:05:18,710
it but maybe the whole IT staff is able

00:05:13,800 --> 00:05:21,120
to understand what's going on in it and

00:05:18,710 --> 00:05:23,250
yet that's that's the questions I was

00:05:21,120 --> 00:05:25,950
asking myself now if I want to talk

00:05:23,250 --> 00:05:29,389
about experiences what does get easier

00:05:25,950 --> 00:05:29,389
to use and for whom

00:05:31,580 --> 00:05:40,830
so as I've collected infos about what

00:05:35,430 --> 00:05:44,010
changed with my use of rudder I things

00:05:40,830 --> 00:05:47,370
got really convenient I just add this

00:05:44,010 --> 00:05:50,340
agent to a system and at that point and

00:05:47,370 --> 00:05:52,260
basically done because my policy in the

00:05:50,340 --> 00:05:56,250
back end decides what things should

00:05:52,260 --> 00:05:57,810
happen on the system and this policy is

00:05:56,250 --> 00:06:00,360
also influenced by which operating

00:05:57,810 --> 00:06:02,700
system on that single note has and it

00:06:00,360 --> 00:06:06,090
will just get to an ideal state I want

00:06:02,700 --> 00:06:08,280
so it's very far out of my mind that's

00:06:06,090 --> 00:06:11,160
something I noticed I don't have to

00:06:08,280 --> 00:06:13,889
trigger anything I just add the system

00:06:11,160 --> 00:06:18,600
and it will be being maintained forever

00:06:13,889 --> 00:06:19,950
just this continuous thing if you want

00:06:18,600 --> 00:06:23,100
to have a really nice policy you should

00:06:19,950 --> 00:06:25,740
think or should try to extract operating

00:06:23,100 --> 00:06:28,200
systems away because you don't want to

00:06:25,740 --> 00:06:31,229
have Apache County for a cent or six

00:06:28,200 --> 00:06:34,050
Apache config for CentOS 7 as single

00:06:31,229 --> 00:06:39,000
config items you want an overarching

00:06:34,050 --> 00:06:46,590
thing which says Apache or even more

00:06:39,000 --> 00:06:48,450
reasonable web web serving because you

00:06:46,590 --> 00:06:49,930
end up building more what your business

00:06:48,450 --> 00:06:53,550
requires than just your technical

00:06:49,930 --> 00:06:58,539
things and rather that's quite nice um

00:06:53,550 --> 00:07:00,610
yeah and what I've noticed is I often

00:06:58,539 --> 00:07:02,590
try to rebuild my policy after some time

00:07:00,610 --> 00:07:05,410
not because it doesn't work but because

00:07:02,590 --> 00:07:07,630
I as I gain experience just think okay

00:07:05,410 --> 00:07:09,910
this is not perfect enough yet I want to

00:07:07,630 --> 00:07:12,130
do it again so like in like a very good

00:07:09,910 --> 00:07:14,440
game where you finish the level and then

00:07:12,130 --> 00:07:16,090
think I could have done it like this I

00:07:14,440 --> 00:07:18,220
start it again

00:07:16,090 --> 00:07:21,400
of course that's not something you do

00:07:18,220 --> 00:07:23,110
all day but I really look at the

00:07:21,400 --> 00:07:25,210
policies now and try to improve them so

00:07:23,110 --> 00:07:32,520
it's like normal refactoring or

00:07:25,210 --> 00:07:32,520
something and yeah that's basically it

00:07:33,449 --> 00:07:40,360
long term or medium term what I've also

00:07:37,240 --> 00:07:42,699
noticed is if you run the CMDB data or

00:07:40,360 --> 00:07:44,050
something like that so you import

00:07:42,699 --> 00:07:49,180
external infrastructure information

00:07:44,050 --> 00:07:52,389
basically you can get into trouble if

00:07:49,180 --> 00:07:55,210
that information is very wrong so for

00:07:52,389 --> 00:07:59,440
almost all information we import there

00:07:55,210 --> 00:08:02,380
we have a little validation now to make

00:07:59,440 --> 00:08:06,280
sure that for example the hostname field

00:08:02,380 --> 00:08:10,720
really contains a host name or a classy

00:08:06,280 --> 00:08:13,810
one is you have a CMDB information it

00:08:10,720 --> 00:08:15,490
can be set to ABCD and then somebody

00:08:13,810 --> 00:08:18,250
comes along and writes down not required

00:08:15,490 --> 00:08:21,479
and so we have a lot of validation on

00:08:18,250 --> 00:08:24,280
these things because in rudder ta

00:08:21,479 --> 00:08:25,900
directly influence the policy and will

00:08:24,280 --> 00:08:31,050
be automatically processed so you have

00:08:25,900 --> 00:08:34,630
to clean up your data first a bit and

00:08:31,050 --> 00:08:36,579
the nicest thing is if the systems

00:08:34,630 --> 00:08:38,200
really get continuously maintained so I

00:08:36,579 --> 00:08:40,360
don't have to run something every hour

00:08:38,200 --> 00:08:43,450
but with the five minute interval it's

00:08:40,360 --> 00:08:45,820
basically like it's always in shape you

00:08:43,450 --> 00:08:48,279
can be read quite relaxed about having

00:08:45,820 --> 00:08:50,380
errors in there or security issues or

00:08:48,279 --> 00:08:54,730
anything like that because you basically

00:08:50,380 --> 00:08:59,800
patch it away so fast that you yeah yeah

00:08:54,730 --> 00:09:01,779
it keeps you a peace of mind so where

00:08:59,800 --> 00:09:03,440
there undesired results was running with

00:09:01,779 --> 00:09:07,019
rudder

00:09:03,440 --> 00:09:11,449
I've done a few setups now small

00:09:07,019 --> 00:09:15,180
startups labs which I wanted to automate

00:09:11,449 --> 00:09:17,130
some larger ones too and no there was

00:09:15,180 --> 00:09:19,470
not anything which didn't go the way I

00:09:17,130 --> 00:09:20,550
wanted it which is really nice and I

00:09:19,470 --> 00:09:27,120
think if you see the web interface

00:09:20,550 --> 00:09:29,190
you'll also know why as for benefits

00:09:27,120 --> 00:09:33,990
there was a few things I didn't like

00:09:29,190 --> 00:09:37,410
expect and in the start first since it's

00:09:33,990 --> 00:09:39,329
a web interface driven tool naming

00:09:37,410 --> 00:09:41,670
conventions meant a lot if you want to

00:09:39,329 --> 00:09:44,220
have a good overview if you want to use

00:09:41,670 --> 00:09:46,410
your brain fully and to to to

00:09:44,220 --> 00:09:49,110
subconsciously just find out what is my

00:09:46,410 --> 00:09:53,160
architecture in this thing I have some

00:09:49,110 --> 00:09:55,019
kind of architecture I can think far

00:09:53,160 --> 00:09:57,240
further than just creating a few folders

00:09:55,019 --> 00:09:58,769
and dropping policy files in there I can

00:09:57,240 --> 00:10:00,839
really think about how should I align

00:09:58,769 --> 00:10:02,610
this does it match with I don't know the

00:10:00,839 --> 00:10:05,850
organizational model of my company or

00:10:02,610 --> 00:10:07,889
something like that a naming conventions

00:10:05,850 --> 00:10:11,759
were really them for a most important

00:10:07,889 --> 00:10:13,949
thing there and also having an agent I

00:10:11,759 --> 00:10:16,199
found out that it's quite good it means

00:10:13,949 --> 00:10:19,800
out of band management so like if you

00:10:16,199 --> 00:10:21,569
have a networks which you would normally

00:10:19,800 --> 00:10:22,980
like to have a serial console attached

00:10:21,569 --> 00:10:25,589
by or some different network or

00:10:22,980 --> 00:10:27,449
something a maintenance port and that's

00:10:25,589 --> 00:10:31,110
what this agent turned out to be I

00:10:27,449 --> 00:10:32,819
managed to fry as a sage it did not

00:10:31,110 --> 00:10:35,449
matter because they could just add

00:10:32,819 --> 00:10:38,730
another policy with which fixes it

00:10:35,449 --> 00:10:40,380
that's really nice if I could choose I

00:10:38,730 --> 00:10:42,209
would have that agent as a statically

00:10:40,380 --> 00:10:44,339
linked binary which is locked into

00:10:42,209 --> 00:10:46,649
memory because then I could even wipe

00:10:44,339 --> 00:10:48,620
the disk or something and fix it but

00:10:46,649 --> 00:10:49,860
it's already quite good like this oh

00:10:48,620 --> 00:10:55,459
sorry

00:10:49,860 --> 00:10:58,560
losing my microphone yeah and then I

00:10:55,459 --> 00:11:02,850
skipped over the last one things that

00:10:58,560 --> 00:11:06,540
just fix themselves so imagine you have

00:11:02,850 --> 00:11:10,319
a weird service which needs to restart

00:11:06,540 --> 00:11:14,699
after an update I'm at a point where I

00:11:10,319 --> 00:11:16,649
don't care because it would update break

00:11:14,699 --> 00:11:19,649
and within five minutes

00:11:16,649 --> 00:11:21,420
running again if I get a ticket and have

00:11:19,649 --> 00:11:25,920
to react and to close the ticket

00:11:21,420 --> 00:11:29,399
I've also need five minutes so this is

00:11:25,920 --> 00:11:31,769
what it looks to me operationally I

00:11:29,399 --> 00:11:34,470
don't I assume everybody here has seen

00:11:31,769 --> 00:11:39,360
matrix has anybody not seen the matrix

00:11:34,470 --> 00:11:41,519
long ago okay so there is this guy and

00:11:39,360 --> 00:11:43,860
he says I don't have to know about every

00:11:41,519 --> 00:11:47,369
single detail and especially I don't

00:11:43,860 --> 00:11:50,550
have to know when it happens so in in in

00:11:47,369 --> 00:11:52,829
rather terms I get compliance reporting

00:11:50,550 --> 00:11:54,689
so if something broke I will know it I

00:11:52,829 --> 00:11:56,970
will know that it restarted something

00:11:54,689 --> 00:11:58,499
but I don't have to know it what ikut or

00:11:56,970 --> 00:12:01,019
anything like that I don't have to know

00:11:58,499 --> 00:12:02,839
it now now I'm standing here I don't

00:12:01,019 --> 00:12:08,550
need to be paged or anything

00:12:02,839 --> 00:12:11,689
it's a tools job to work about that we

00:12:08,550 --> 00:12:14,040
had one long discussion about testing a

00:12:11,689 --> 00:12:16,499
certain file rollout or something

00:12:14,040 --> 00:12:19,139
because the old method was why as this.h

00:12:16,499 --> 00:12:22,230
day-after-day copied it they checked if

00:12:19,139 --> 00:12:24,019
it's alright and I felt that because in

00:12:22,230 --> 00:12:28,829
the rudder model we didn't have that and

00:12:24,019 --> 00:12:31,139
then I stopped wait a minute rudder is

00:12:28,829 --> 00:12:32,699
doing that every five minutes can we

00:12:31,139 --> 00:12:41,040
just skip that part because that's the

00:12:32,699 --> 00:12:46,379
basic functionality so I'm going towards

00:12:41,040 --> 00:12:49,170
user experience now first on a technical

00:12:46,379 --> 00:12:51,899
side there's a thing called dynamic

00:12:49,170 --> 00:12:56,100
groups a dynamic group is like a gabber

00:12:51,899 --> 00:12:58,319
filter I gather and a group matching in

00:12:56,100 --> 00:13:01,790
and zaboo and I don't know whatever

00:12:58,319 --> 00:13:04,139
tools have for dit something I'm sure

00:13:01,790 --> 00:13:06,389
the thing is rather collects a really

00:13:04,139 --> 00:13:09,809
large inventory of the remote system so

00:13:06,389 --> 00:13:13,290
I have a snapshot of running processes

00:13:09,809 --> 00:13:14,699
all installed software and so on and I

00:13:13,290 --> 00:13:16,709
can make groups based on that very

00:13:14,699 --> 00:13:19,769
easily and that can combine these things

00:13:16,709 --> 00:13:22,920
so I can look for systems which don't

00:13:19,769 --> 00:13:24,990
have the admin tools for certain rate

00:13:22,920 --> 00:13:27,480
controller installed if that control is

00:13:24,990 --> 00:13:31,850
in there and has an old from the version

00:13:27,480 --> 00:13:37,980
and that makes it quite easy

00:13:31,850 --> 00:13:41,760
then having metrics if I open the web

00:13:37,980 --> 00:13:43,970
interface it will tell me if things are

00:13:41,760 --> 00:13:43,970
working

00:13:44,190 --> 00:13:51,180
that means if my boss is calling me and

00:13:47,460 --> 00:13:54,480
asking is everything fine I can say yeah

00:13:51,180 --> 00:13:57,030
mostly we have 5% errors on just a

00:13:54,480 --> 00:13:58,830
moment uh he has something with Apache

00:13:57,030 --> 00:14:02,790
but it's it's not a really important

00:13:58,830 --> 00:14:04,920
detail this data is also gathered every

00:14:02,790 --> 00:14:07,050
five minutes because each run of the

00:14:04,920 --> 00:14:10,110
agent collects all this information it's

00:14:07,050 --> 00:14:13,440
automatically processed and you feed

00:14:10,110 --> 00:14:15,690
within say ten seconds or something and

00:14:13,440 --> 00:14:20,280
that's quite good because you can simply

00:14:15,690 --> 00:14:22,710
answer people you can detect if

00:14:20,280 --> 00:14:24,510
something white keeps crashing and

00:14:22,710 --> 00:14:28,290
restarts all the time that's also easy

00:14:24,510 --> 00:14:31,470
and yeah so fixing we had that one sorry

00:14:28,290 --> 00:14:32,910
for the duplicate things which are still

00:14:31,470 --> 00:14:39,120
hard and tricky and didn't magically

00:14:32,910 --> 00:14:41,910
magically go away if we try since it is

00:14:39,120 --> 00:14:44,100
hard a compliance tool if we try to push

00:14:41,910 --> 00:14:46,830
in some things which were not meant to

00:14:44,100 --> 00:14:52,290
be in there it is not as easy as I would

00:14:46,830 --> 00:14:54,240
want say you want to drastically change

00:14:52,290 --> 00:14:57,750
the way how it works or something you

00:14:54,240 --> 00:14:58,890
will be unhappy and it might also turn

00:14:57,750 --> 00:15:01,950
out that it has a lot of maintenance

00:14:58,890 --> 00:15:03,750
cost if you do that the thing it's a

00:15:01,950 --> 00:15:06,060
compliance tool so I'm not really sure

00:15:03,750 --> 00:15:09,570
but I think it's my fault if I try to

00:15:06,060 --> 00:15:12,120
mess it into something else

00:15:09,570 --> 00:15:15,420
Auto acceptance well the term doesn't

00:15:12,120 --> 00:15:19,920
tell you anything um you add a new

00:15:15,420 --> 00:15:22,170
system it will like go home to rather

00:15:19,920 --> 00:15:25,080
and you have to accept it that's

00:15:22,170 --> 00:15:28,020
basically the PKI setup so in a moment

00:15:25,080 --> 00:15:31,050
where you click accept full key exchange

00:15:28,020 --> 00:15:33,089
is happening and both nodes know like

00:15:31,050 --> 00:15:37,050
like if you use free mail and just hold

00:15:33,089 --> 00:15:41,010
the phones together or something that

00:15:37,050 --> 00:15:43,620
process is meant to be triggered by

00:15:41,010 --> 00:15:44,440
somebody who knows but at some times I

00:15:43,620 --> 00:15:47,830
would just like to

00:15:44,440 --> 00:15:50,350
they are just any system which comes

00:15:47,830 --> 00:15:51,870
along should get in and that part is not

00:15:50,350 --> 00:15:56,130
easy to automate

00:15:51,870 --> 00:15:59,350
but there is it's possible to solve and

00:15:56,130 --> 00:16:02,110
also expressing clusters is not the

00:15:59,350 --> 00:16:03,850
easiest thing especially if I don't want

00:16:02,110 --> 00:16:06,370
to just group things by clusters but I

00:16:03,850 --> 00:16:08,530
also want to say yeah you cannot be

00:16:06,370 --> 00:16:10,840
doing updates if the other one is was

00:16:08,530 --> 00:16:14,200
doing an update and it didn't work well

00:16:10,840 --> 00:16:17,200
and you also can't do an update if he's

00:16:14,200 --> 00:16:19,090
doing an update to and you can't do an

00:16:17,200 --> 00:16:21,010
update if he's going to do an update

00:16:19,090 --> 00:16:25,000
within the nerfs 30 minutes because it's

00:16:21,010 --> 00:16:27,870
going to run for 45 these things I've

00:16:25,000 --> 00:16:30,790
not seen a tool which makes them easy

00:16:27,870 --> 00:16:33,670
you have a few options like disabling

00:16:30,790 --> 00:16:36,370
things for next 40 minutes or something

00:16:33,670 --> 00:16:40,240
but the cross chatter between systems is

00:16:36,370 --> 00:16:45,600
really not good yet but from what I've

00:16:40,240 --> 00:16:45,600
seen they tend to add things like that

00:16:48,660 --> 00:16:57,100
so my question marks things I'm not good

00:16:53,770 --> 00:17:00,640
at yet I have a hard time telling how

00:16:57,100 --> 00:17:02,970
easy those are policy and building how

00:17:00,640 --> 00:17:06,100
easy will it be to maintain over years

00:17:02,970 --> 00:17:08,770
because I've not been using it for 10

00:17:06,100 --> 00:17:14,079
years or something so it's hard to have

00:17:08,770 --> 00:17:15,819
the experience there I try and I also

00:17:14,079 --> 00:17:19,270
try to make each environment I'm

00:17:15,819 --> 00:17:21,640
visiting similar but I also to end up

00:17:19,270 --> 00:17:24,030
improving on the next one and yeah

00:17:21,640 --> 00:17:27,720
that's that's not too easy

00:17:24,030 --> 00:17:30,610
my big dream item is having a clockwork

00:17:27,720 --> 00:17:32,850
kind of thing which does rollouts so I

00:17:30,610 --> 00:17:35,500
can tell it this is a high risk change

00:17:32,850 --> 00:17:38,680
which you can calculate because this is

00:17:35,500 --> 00:17:42,250
an important server and this package is

00:17:38,680 --> 00:17:44,800
related to its service so you can roll

00:17:42,250 --> 00:17:47,410
out it on a weekend and this package

00:17:44,800 --> 00:17:50,020
goes to a large group of systems start

00:17:47,410 --> 00:17:51,910
rolling it out and test and if 70% of

00:17:50,020 --> 00:17:55,030
tests have passed go to integration and

00:17:51,910 --> 00:17:57,670
so on it's just a dream but that's

00:17:55,030 --> 00:17:58,330
really the thing I'm thinking about

00:17:57,670 --> 00:18:00,809
because the

00:17:58,330 --> 00:18:05,169
basic role of stuff works just so well

00:18:00,809 --> 00:18:07,149
and the last one also I would really

00:18:05,169 --> 00:18:09,580
have liked to have darker support in

00:18:07,149 --> 00:18:11,919
there basically that in the last layer

00:18:09,580 --> 00:18:13,840
of a container it just injects itself

00:18:11,919 --> 00:18:17,169
runs the company security policy and

00:18:13,840 --> 00:18:19,830
passes it on it would be not too hard

00:18:17,169 --> 00:18:24,309
but nobody's done it yet

00:18:19,830 --> 00:18:27,429
so as for user experience it's a

00:18:24,309 --> 00:18:29,830
graphical tool many of you will have

00:18:27,429 --> 00:18:34,090
heard that joke like oh yeah we need to

00:18:29,830 --> 00:18:38,380
have metrics we need pictures excel

00:18:34,090 --> 00:18:42,490
files for management so this tool can

00:18:38,380 --> 00:18:46,210
produce them the question is am I losing

00:18:42,490 --> 00:18:49,210
my own functionality if I have suddenly

00:18:46,210 --> 00:18:52,350
graphics and then all the gizmos a web

00:18:49,210 --> 00:18:55,990
interface which can be used by let's say

00:18:52,350 --> 00:18:59,350
not config management experienced IT

00:18:55,990 --> 00:19:01,799
professionals does that take away power

00:18:59,350 --> 00:19:04,000
from me or it does it stay the same and

00:19:01,799 --> 00:19:06,370
what does it look like for the Deaf's

00:19:04,000 --> 00:19:09,309
was like dedicated working in this tool

00:19:06,370 --> 00:19:11,190
only or doing their rollout does it get

00:19:09,309 --> 00:19:13,779
in their way

00:19:11,190 --> 00:19:15,970
so use the experience I mean it's a

00:19:13,779 --> 00:19:19,750
graphical tool so obviously this is

00:19:15,970 --> 00:19:23,409
gonna matter and this is a comment I got

00:19:19,750 --> 00:19:26,169
a month ago it was a project manager

00:19:23,409 --> 00:19:29,169
junior project manager I think he's 22

00:19:26,169 --> 00:19:30,490
or something and he's smart but of

00:19:29,169 --> 00:19:33,190
course he's not seen many config

00:19:30,490 --> 00:19:36,370
management also anything he read about

00:19:33,190 --> 00:19:39,549
them and then I showed it to him for 15

00:19:36,370 --> 00:19:43,990
minutes or something and I couldn't

00:19:39,549 --> 00:19:46,720
imagine it could be this simple or this

00:19:43,990 --> 00:19:49,600
intuitive because he could understand

00:19:46,720 --> 00:19:51,429
what I'm doing in there and that is the

00:19:49,600 --> 00:19:57,029
point was the graphical thing which is

00:19:51,429 --> 00:19:59,649
really helpful so but can it help us to

00:19:57,029 --> 00:20:02,710
how about having documentation you can

00:19:59,649 --> 00:20:06,580
look at in the tool I mean I can write

00:20:02,710 --> 00:20:08,470
inline documentation yeah sure I can do

00:20:06,580 --> 00:20:13,020
that here too I could open it in VI and

00:20:08,470 --> 00:20:15,700
right over CI I could extract it here

00:20:13,020 --> 00:20:18,220
but in this thing it's still quite

00:20:15,700 --> 00:20:20,230
easier because there's a field which is

00:20:18,220 --> 00:20:22,020
called description another one which is

00:20:20,230 --> 00:20:26,590
called short description I can tag

00:20:22,020 --> 00:20:30,870
policy components and search for them

00:20:26,590 --> 00:20:33,400
and without pulling out grep or anything

00:20:30,870 --> 00:20:34,780
if you have a graph graphical

00:20:33,400 --> 00:20:37,299
representation of things

00:20:34,780 --> 00:20:40,660
conformity gets easier because you will

00:20:37,299 --> 00:20:43,240
notice the wise user spells lower case

00:20:40,660 --> 00:20:45,070
here and upper case there I think we've

00:20:43,240 --> 00:20:46,780
been spelling it upper case for the last

00:20:45,070 --> 00:20:49,960
three months so maybe we should change

00:20:46,780 --> 00:20:52,809
that the benefit is your

00:20:49,960 --> 00:20:55,990
subconsciousness will read things faster

00:20:52,809 --> 00:21:00,790
meaning you're safer less risk of errors

00:20:55,990 --> 00:21:02,650
and so on a web interface can also be a

00:21:00,790 --> 00:21:04,900
tie breaker if you have team members

00:21:02,650 --> 00:21:09,010
that are less experienced it gives them

00:21:04,900 --> 00:21:12,280
safety even more important if it's large

00:21:09,010 --> 00:21:13,780
teams and the thing I'm having a hard

00:21:12,280 --> 00:21:18,640
time to describe is really having a

00:21:13,780 --> 00:21:20,169
design and making sure the tool yeah I

00:21:18,640 --> 00:21:22,500
don't know coming up with a kinetic

00:21:20,169 --> 00:21:25,540
management architecture that is nice and

00:21:22,500 --> 00:21:28,540
the last one is really also important

00:21:25,540 --> 00:21:30,640
building bridges so the same tool can be

00:21:28,540 --> 00:21:32,740
used by management and IT staff and they

00:21:30,640 --> 00:21:34,240
click like in this step they see the

00:21:32,740 --> 00:21:37,510
technical details in the other one they

00:21:34,240 --> 00:21:39,760
see the compliance information meaning

00:21:37,510 --> 00:21:46,390
each can look at the others view and

00:21:39,760 --> 00:21:48,340
understand it so but I also have one

00:21:46,390 --> 00:21:52,110
picture about the visible documentation

00:21:48,340 --> 00:21:55,870
so I found it funny that Chris also had

00:21:52,110 --> 00:22:00,940
a Space Oddity thing yesterday

00:21:55,870 --> 00:22:03,070
I think this web interface and

00:22:00,940 --> 00:22:06,400
documentation thing is super important

00:22:03,070 --> 00:22:08,260
because if I just write my files in VI

00:22:06,400 --> 00:22:09,910
and I'm like two people who are allowed

00:22:08,260 --> 00:22:12,490
to do that or something and have the

00:22:09,910 --> 00:22:15,309
skill level I will always end up the

00:22:12,490 --> 00:22:17,440
things which are not documented I still

00:22:15,309 --> 00:22:21,820
experience it with my config management

00:22:17,440 --> 00:22:23,440
there guys they are the right

00:22:21,820 --> 00:22:26,920
documentation

00:22:23,440 --> 00:22:30,130
in a wiki which is super great its

00:22:26,920 --> 00:22:32,110
structured all fine but if I dig down

00:22:30,130 --> 00:22:34,900
into the source code I will not find a

00:22:32,110 --> 00:22:37,870
single comment which is something I know

00:22:34,900 --> 00:22:41,080
it's it's too experienced you have to

00:22:37,870 --> 00:22:42,790
check on that but basically if I if I

00:22:41,080 --> 00:22:45,210
take any production application with

00:22:42,790 --> 00:22:47,680
this which has been around for some time

00:22:45,210 --> 00:22:49,870
this is how I imagine the operations

00:22:47,680 --> 00:22:51,730
team going there and digging in and

00:22:49,870 --> 00:22:54,640
finding out what is this thing supposed

00:22:51,730 --> 00:22:55,810
to do and how is it supposed to run if I

00:22:54,640 --> 00:23:01,120
have a web interface

00:22:55,810 --> 00:23:02,890
I might let's say not need an protection

00:23:01,120 --> 00:23:05,500
suit or something to open up this old

00:23:02,890 --> 00:23:08,530
application if there is documentation in

00:23:05,500 --> 00:23:12,130
a web interface if not of course there

00:23:08,530 --> 00:23:15,670
is no defense so I've said well web

00:23:12,130 --> 00:23:18,820
interface I think 40 times now 50 this

00:23:15,670 --> 00:23:21,340
is what it looked like years ago you see

00:23:18,820 --> 00:23:23,110
it's cut off here I took the liberty

00:23:21,340 --> 00:23:25,840
because it goes until down here it

00:23:23,110 --> 00:23:29,770
didn't even properly fit a web browser

00:23:25,840 --> 00:23:32,410
but they've worked on that so this was

00:23:29,770 --> 00:23:36,610
just a welcome screen this is what it

00:23:32,410 --> 00:23:38,680
ended up a few years later um the idea

00:23:36,610 --> 00:23:44,290
was to start displaying this compliance

00:23:38,680 --> 00:23:46,150
information telling you so out of my

00:23:44,290 --> 00:23:50,530
free systems here only one is working

00:23:46,150 --> 00:23:52,420
something like that the overview gets

00:23:50,530 --> 00:23:56,440
more helpful if you have more systems of

00:23:52,420 --> 00:23:59,110
course and the most recent iteration is

00:23:56,440 --> 00:24:02,830
this one same information but rewritten

00:23:59,110 --> 00:24:06,280
and fast now so in the old version if

00:24:02,830 --> 00:24:09,600
you had I don't know a thousand systems

00:24:06,280 --> 00:24:13,510
it was ok if you had many more it was

00:24:09,600 --> 00:24:15,190
slow to the point of death this one I

00:24:13,510 --> 00:24:19,180
don't know if I have a screenshot in

00:24:15,190 --> 00:24:22,150
there or not we've run a lab instance

00:24:19,180 --> 00:24:26,740
with seven thousand nodes and the list

00:24:22,150 --> 00:24:28,780
of all nodes takes about 10 seconds to

00:24:26,740 --> 00:24:30,970
load including the compliance details

00:24:28,780 --> 00:24:33,400
for your systems and once it's loaded

00:24:30,970 --> 00:24:35,560
its instantaneous which is OK

00:24:33,400 --> 00:24:36,940
performance for that scale I mean it's

00:24:35,560 --> 00:24:42,190
great I love it

00:24:36,940 --> 00:24:45,549
but it was different so if you have a

00:24:42,190 --> 00:24:48,269
tool which is web-based which does log

00:24:45,549 --> 00:24:53,340
file processing all the time

00:24:48,269 --> 00:24:53,340
what's how much performance does it eat

00:24:54,659 --> 00:25:01,359
like there is an agent do you notice the

00:24:58,450 --> 00:25:04,629
agents performance needs does it does it

00:25:01,359 --> 00:25:08,739
like to waste your CPU or anything

00:25:04,629 --> 00:25:11,979
the agent is really not noticeable needs

00:25:08,739 --> 00:25:15,009
a few I don't know the full install is

00:25:11,979 --> 00:25:18,249
100 mega or something but it takes like

00:25:15,009 --> 00:25:23,379
five megabytes of mam and CPU is

00:25:18,249 --> 00:25:25,840
neglible the rest of the system gets

00:25:23,379 --> 00:25:28,330
faster at all times that's really true

00:25:25,840 --> 00:25:31,929
so each version that has come out was

00:25:28,330 --> 00:25:33,669
faster than the last one then they tend

00:25:31,929 --> 00:25:35,139
to add a feature which is really great

00:25:33,669 --> 00:25:37,389
and good and then the performance goes

00:25:35,139 --> 00:25:39,309
down to hell and then I fix that and in

00:25:37,389 --> 00:25:43,210
the end result is faster again than it

00:25:39,309 --> 00:25:46,809
was initially and so this is typically

00:25:43,210 --> 00:25:50,859
agent run time of a basic set setup so

00:25:46,809 --> 00:25:53,080
one and a half second that's checking I

00:25:50,859 --> 00:25:56,859
think this was the router server yeah

00:25:53,080 --> 00:25:59,080
so it actually checks a lot of processes

00:25:56,859 --> 00:26:02,499
restarts them is needed which would take

00:25:59,080 --> 00:26:06,820
a bit longer checks if all the correct

00:26:02,499 --> 00:26:11,129
software is installed yeah and quite a

00:26:06,820 --> 00:26:14,259
few more things I think its third year

00:26:11,129 --> 00:26:15,940
if you have a heavily overloaded system

00:26:14,259 --> 00:26:17,320
you might end up with a run time of a

00:26:15,940 --> 00:26:18,970
hundred seconds or something but that's

00:26:17,320 --> 00:26:22,690
not because of the agent but because the

00:26:18,970 --> 00:26:26,919
system is beyond rescue the basic run

00:26:22,690 --> 00:26:31,149
time is extremely good and since each

00:26:26,919 --> 00:26:32,799
node is independent and they spread out

00:26:31,149 --> 00:26:36,960
when the agent runs you also don't get

00:26:32,799 --> 00:26:36,960
load spikes on the network itself

00:26:38,909 --> 00:26:48,190
okay so here's 50 qui thing that's a

00:26:43,739 --> 00:26:50,799
list of nodes and rather this is their

00:26:48,190 --> 00:26:51,130
compliance status so with one glance I

00:26:50,799 --> 00:26:54,070
can

00:26:51,130 --> 00:26:58,030
can can see that most systems are

00:26:54,070 --> 00:27:01,450
slightly unhappy but it can be a big

00:26:58,030 --> 00:27:03,070
thing and I can also tell there's a few

00:27:01,450 --> 00:27:04,990
which are okay so I know it's probably

00:27:03,070 --> 00:27:12,250
an environment thing and not just a

00:27:04,990 --> 00:27:16,230
basic may a big policy error yeah that's

00:27:12,250 --> 00:27:18,880
the one I was going for before what is

00:27:16,230 --> 00:27:22,330
what what are the requirements of the

00:27:18,880 --> 00:27:24,039
web interface like or the main server so

00:27:22,330 --> 00:27:26,770
you have a main server which generates

00:27:24,039 --> 00:27:29,020
all the policy its fetched by the nodes

00:27:26,770 --> 00:27:31,620
and the server doesn't have to be around

00:27:29,020 --> 00:27:34,450
if you take it and put it in a trash can

00:27:31,620 --> 00:27:36,580
the system's will stay intact and it

00:27:34,450 --> 00:27:38,559
will stay they will keep doing their job

00:27:36,580 --> 00:27:41,440
and and running the agent and upholding

00:27:38,559 --> 00:27:44,080
the policy but yeah what if you have a

00:27:41,440 --> 00:27:48,210
normal environment so this is what I

00:27:44,080 --> 00:27:50,980
have a rather master on including

00:27:48,210 --> 00:27:54,789
monitoring an elastic search instance

00:27:50,980 --> 00:27:58,720
for double processing of the locks it's

00:27:54,789 --> 00:28:02,260
a sex 16 gig into nook with not the

00:27:58,720 --> 00:28:03,909
biggest CPU and then SSD that's it so

00:28:02,260 --> 00:28:08,200
there is no issue with performance or

00:28:03,909 --> 00:28:12,460
anything it's a it's a java application

00:28:08,200 --> 00:28:14,530
or scala so you want to have a bit of

00:28:12,460 --> 00:28:17,260
RAM I wouldn't run it with less than 2

00:28:14,530 --> 00:28:21,460
gig for is probably okay if you don't

00:28:17,260 --> 00:28:25,659
throw 5,000 boxes at it 8 gig will also

00:28:21,460 --> 00:28:27,820
know to 5,000 but will be fast and yeah

00:28:25,659 --> 00:28:30,159
my biggest mistake and experience

00:28:27,820 --> 00:28:31,960
learning whatever is if you do this

00:28:30,159 --> 00:28:34,299
thing that you also co-locate and

00:28:31,960 --> 00:28:37,809
elasticsearch don't do that on the small

00:28:34,299 --> 00:28:40,059
amazon versatile instances because

00:28:37,809 --> 00:28:42,010
elastic search has some weird pattern

00:28:40,059 --> 00:28:45,070
very sometimes really gets busy and

00:28:42,010 --> 00:28:49,150
cleaning up and it completely exhausts

00:28:45,070 --> 00:28:57,280
the cpu credits you got and it will

00:28:49,150 --> 00:28:59,080
never recover ever ok so there's one

00:28:57,280 --> 00:29:01,809
more thing it's the so called relay

00:28:59,080 --> 00:29:04,570
which is a distribution node so you have

00:29:01,809 --> 00:29:07,179
master server single nodes and

00:29:04,570 --> 00:29:10,350
Lay's because you don't want to attach

00:29:07,179 --> 00:29:13,389
all your systems to one central server

00:29:10,350 --> 00:29:14,980
because you might have offices in

00:29:13,389 --> 00:29:16,840
different continents or something and

00:29:14,980 --> 00:29:19,029
you don't want to cross talk over a van

00:29:16,840 --> 00:29:22,419
link all the time so this is real a

00:29:19,029 --> 00:29:26,380
thing and I'll show you later it has

00:29:22,419 --> 00:29:28,419
just no load at all you shouldn't go to

00:29:26,380 --> 00:29:30,519
more than I don't know two and a half

00:29:28,419 --> 00:29:33,429
thousand systems because then it hits

00:29:30,519 --> 00:29:36,549
some bug and gets spiked use two CPU but

00:29:33,429 --> 00:29:38,019
we recently saw we had one we've changed

00:29:36,549 --> 00:29:41,039
the interval to fifteen minutes because

00:29:38,019 --> 00:29:44,080
that's enough and we have one with three

00:29:41,039 --> 00:29:49,240
3800 nodes and nobody noticed the load

00:29:44,080 --> 00:29:52,419
just doesn't go up I go to the web

00:29:49,240 --> 00:29:57,159
interface now for a moment so find the

00:29:52,419 --> 00:29:59,799
right screen okay so this is not showing

00:29:57,159 --> 00:30:03,700
our like a 100 perfect 100 percent

00:29:59,799 --> 00:30:07,480
perfect shape because I trashed my test

00:30:03,700 --> 00:30:11,230
environment just this afternoon this is

00:30:07,480 --> 00:30:13,590
the shape of what's right here now but

00:30:11,230 --> 00:30:16,870
that's also more bit more realistic

00:30:13,590 --> 00:30:20,409
you'll see this is the overall shape of

00:30:16,870 --> 00:30:21,100
the environment with no excuses or

00:30:20,409 --> 00:30:25,659
anything

00:30:21,100 --> 00:30:29,919
I can see 70 percent 76% of things are

00:30:25,659 --> 00:30:32,529
ok and it did are gray undefined

00:30:29,919 --> 00:30:34,629
it just doesn't know why doesn't it know

00:30:32,529 --> 00:30:37,539
probably because I hit some buck and

00:30:34,629 --> 00:30:39,730
some systems are off easy enough it

00:30:37,539 --> 00:30:42,340
doesn't tell me lies it just doesn't

00:30:39,730 --> 00:30:45,659
magically make them disappear anything

00:30:42,340 --> 00:30:45,659
it tells me they're gone

00:30:46,409 --> 00:30:54,129
over here I can see I have one percent

00:30:50,049 --> 00:30:55,990
of arrows actually and three percent

00:30:54,129 --> 00:30:59,679
which didn't report back which is likely

00:30:55,990 --> 00:31:01,799
a bug and till 19 percent on the right

00:30:59,679 --> 00:31:05,230
that's the systems which are not there

00:31:01,799 --> 00:31:07,509
they just didn't call back so that's

00:31:05,230 --> 00:31:09,370
because I don't know I create VMs that

00:31:07,509 --> 00:31:10,790
didn't work or something doesn't really

00:31:09,370 --> 00:31:12,600
matter

00:31:10,790 --> 00:31:15,490
[Music]

00:31:12,600 --> 00:31:16,929
lifecycle wise or just information it's

00:31:15,490 --> 00:31:18,190
interesting so they're 16 nodes right

00:31:16,929 --> 00:31:22,330
now

00:31:18,190 --> 00:31:25,120
18 are waiting to be let in so they they

00:31:22,330 --> 00:31:27,130
haven't been allowed in yet and there's

00:31:25,120 --> 00:31:29,530
a few rules which define the actual

00:31:27,130 --> 00:31:31,480
policy so first I take care of these

00:31:29,530 --> 00:31:34,030
nodes which are not inside yet or

00:31:31,480 --> 00:31:36,789
another loud in that's the list of the

00:31:34,030 --> 00:31:38,830
systems so it's I can see it's a Debian

00:31:36,789 --> 00:31:42,039
Doc's can see the network information

00:31:38,830 --> 00:31:44,860
and if I want I can see some more about

00:31:42,039 --> 00:31:48,789
it which is the information rudder

00:31:44,860 --> 00:31:56,110
always collects can you see that from

00:31:48,789 --> 00:31:57,490
back there okay just a moment I don't

00:31:56,110 --> 00:31:59,590
think I can make it any bigger so you

00:31:57,490 --> 00:32:02,830
get the memory information the UUID of

00:31:59,590 --> 00:32:05,620
the system and some some core metrics

00:32:02,830 --> 00:32:10,600
when it lost showed up you can get

00:32:05,620 --> 00:32:13,659
hardware information file systems well

00:32:10,600 --> 00:32:16,929
don't care networking the installed

00:32:13,659 --> 00:32:18,909
software this is stored in an LDAP

00:32:16,929 --> 00:32:21,340
directory so it's fast with grouping and

00:32:18,909 --> 00:32:24,159
the query time is also quite fine I

00:32:21,340 --> 00:32:26,260
think you can see environment variables

00:32:24,159 --> 00:32:29,289
which are defined at least for the root

00:32:26,260 --> 00:32:31,780
user around that system and you can see

00:32:29,289 --> 00:32:36,640
running processes that's quite

00:32:31,780 --> 00:32:40,600
interesting I mentioned Apache as a

00:32:36,640 --> 00:32:43,330
detail let's say Apache or Tomcat or

00:32:40,600 --> 00:32:45,370
some weird java processes like every

00:32:43,330 --> 00:32:46,630
second vendor if they give you hardware

00:32:45,370 --> 00:32:48,940
management tools of the canvas

00:32:46,630 --> 00:32:50,230
management homepage and you get one more

00:32:48,940 --> 00:32:54,340
rep ecchi process you don't know about

00:32:50,230 --> 00:32:56,110
or a Java process if I'm able to search

00:32:54,340 --> 00:32:59,320
or running processes in my config

00:32:56,110 --> 00:33:05,500
management I can have rules which detect

00:32:59,320 --> 00:33:07,059
that kind of stuff it's helpful and yeah

00:33:05,500 --> 00:33:10,330
it would show me if there is little

00:33:07,059 --> 00:33:13,770
machines running on it and I think

00:33:10,330 --> 00:33:17,250
that's it so I'll just say I want to

00:33:13,770 --> 00:33:17,250
accept these nodes

00:33:21,000 --> 00:33:25,600
which means now there are no their

00:33:23,380 --> 00:33:27,970
public keys are accepted and stored on

00:33:25,600 --> 00:33:29,200
the server this information will be

00:33:27,970 --> 00:33:31,450
pushed back to the relay they're

00:33:29,200 --> 00:33:34,090
connected to and then they're allowed to

00:33:31,450 --> 00:33:35,769
download policy will probably not have

00:33:34,090 --> 00:33:37,389
enough time to wait for that but

00:33:35,769 --> 00:33:47,590
basically they download it and start

00:33:37,389 --> 00:33:52,809
applying it oops I'm sorry I'm stuck in

00:33:47,590 --> 00:33:54,519
PowerPoint not my core skill ok so right

00:33:52,809 --> 00:33:57,370
now it looks happier I don't know

00:33:54,519 --> 00:34:00,009
probably the calculation changed somehow

00:33:57,370 --> 00:34:01,600
because so many new notes came in which

00:34:00,009 --> 00:34:03,190
don't have to give good results yet

00:34:01,600 --> 00:34:11,619
because they're fresh it knows about

00:34:03,190 --> 00:34:14,679
that what else can I see I can look at

00:34:11,619 --> 00:34:16,810
my actual rules on a system which I've

00:34:14,679 --> 00:34:18,609
tried to structure here so this does the

00:34:16,810 --> 00:34:23,440
OpenNebula set up for the hosting

00:34:18,609 --> 00:34:25,540
environment below these VMs this is the

00:34:23,440 --> 00:34:27,669
status of that and you can see ok I have

00:34:25,540 --> 00:34:28,960
some small bugs in there which is

00:34:27,669 --> 00:34:31,480
because I was quite rushed with the

00:34:28,960 --> 00:34:34,450
setup I've seen generally in rudder it's

00:34:31,480 --> 00:34:37,060
good to work careful and not rush things

00:34:34,450 --> 00:34:39,190
you will have a better end result and be

00:34:37,060 --> 00:34:44,139
faster than if you just try to do

00:34:39,190 --> 00:34:47,980
crowbar time through um if we look at

00:34:44,139 --> 00:34:53,560
this in detail this would be the setup

00:34:47,980 --> 00:34:55,329
of a single OpenNebula node and here I

00:34:53,560 --> 00:34:58,720
can see which components are being run

00:34:55,329 --> 00:35:03,089
for that so it will set up an epoch F

00:34:58,720 --> 00:35:06,490
triple do something with labert

00:35:03,089 --> 00:35:07,960
monitoring setup and so on if I open

00:35:06,490 --> 00:35:11,349
these I will get the actual default

00:35:07,960 --> 00:35:14,740
information and you will see my most

00:35:11,349 --> 00:35:16,960
ugly hack that I did I think yesterday I

00:35:14,740 --> 00:35:19,750
ran out of time so I pushed something to

00:35:16,960 --> 00:35:24,220
RC local but you can actually quite

00:35:19,750 --> 00:35:26,020
easily find that in here and if we look

00:35:24,220 --> 00:35:30,010
at something which actually froze an

00:35:26,020 --> 00:35:31,180
error up here this is where it gets

00:35:30,010 --> 00:35:33,430
interesting

00:35:31,180 --> 00:35:35,859
we can even tell that the Liberty

00:35:33,430 --> 00:35:38,680
restart didn't probably work which is

00:35:35,859 --> 00:35:42,369
true which is because of some small miss

00:35:38,680 --> 00:35:44,740
configuration I made and now imagine

00:35:42,369 --> 00:35:47,049
your nightshift colleague who doesn't

00:35:44,740 --> 00:35:50,170
know anything about the setup of this

00:35:47,049 --> 00:35:53,079
individual rule for OpenNebula he'll be

00:35:50,170 --> 00:35:55,900
able to tell you I've seen something's

00:35:53,079 --> 00:35:58,390
wrong with the bird and he doesn't have

00:35:55,900 --> 00:36:02,039
to even log in for that so if you if you

00:35:58,390 --> 00:36:04,470
speak about not SS aging into systems

00:36:02,039 --> 00:36:06,970
you should have a good reporting on that

00:36:04,470 --> 00:36:08,950
people can actually debug with all this

00:36:06,970 --> 00:36:14,650
is aging and and this is quite at the

00:36:08,950 --> 00:36:17,650
level I could also browse logs and check

00:36:14,650 --> 00:36:22,960
the last run off the system it does not

00:36:17,650 --> 00:36:24,880
so and well that's not so cool here I

00:36:22,960 --> 00:36:26,589
see the distribution over the system so

00:36:24,880 --> 00:36:29,049
I can also tell these free don't have

00:36:26,589 --> 00:36:31,450
any problems it's only the ones down

00:36:29,049 --> 00:36:35,680
here so those are running at scale way

00:36:31,450 --> 00:36:37,359
those are at packet net and they have a

00:36:35,680 --> 00:36:39,190
different networking configuration and

00:36:37,359 --> 00:36:41,589
some other details which just differ and

00:36:39,190 --> 00:36:43,630
that's why I got an error on the one and

00:36:41,589 --> 00:36:46,390
not on the other one and down here

00:36:43,630 --> 00:36:52,059
that's also interesting I can see the

00:36:46,390 --> 00:36:54,069
change volume over time so any policy

00:36:52,059 --> 00:36:56,740
adjustment you make normally should

00:36:54,069 --> 00:36:59,970
stabilize at some point and stop doing

00:36:56,740 --> 00:37:02,589
changes this is visible right here and

00:36:59,970 --> 00:37:04,809
yeah normally will always just end down

00:37:02,589 --> 00:37:06,730
here without any further changes because

00:37:04,809 --> 00:37:15,420
it's stabilized it's working system is

00:37:06,730 --> 00:37:18,180
properly configured and I spoke about

00:37:15,420 --> 00:37:21,640
technical side here is the configuration

00:37:18,180 --> 00:37:23,680
so if I want to for some reason

00:37:21,640 --> 00:37:26,170
stop trying to configure the bird if I

00:37:23,680 --> 00:37:31,569
don't probably get it configured I can

00:37:26,170 --> 00:37:34,180
just remove this here and safe arm this

00:37:31,569 --> 00:37:36,839
will now be rolled out and yeah we'll

00:37:34,180 --> 00:37:40,089
just stop demanding that this is done I

00:37:36,839 --> 00:37:41,680
have a more corporate environment I

00:37:40,089 --> 00:37:43,990
probably don't want anybody to do it

00:37:41,680 --> 00:37:44,950
just like I did now so I can turn on

00:37:43,990 --> 00:37:48,130
some some

00:37:44,950 --> 00:37:49,570
mode or audit log entries or even

00:37:48,130 --> 00:37:52,060
require that somebody else looks might

00:37:49,570 --> 00:37:58,030
change over and Daisy a visual of what I

00:37:52,060 --> 00:38:02,099
did it's quite nice okay I'm not gonna

00:37:58,030 --> 00:38:02,099
jump around in the web interface for now

00:38:02,130 --> 00:38:11,829
PowerPoint okay so things we built on

00:38:07,930 --> 00:38:14,740
the sidelines of our projects we've

00:38:11,829 --> 00:38:16,750
heard about open s cap so we introduced

00:38:14,740 --> 00:38:21,760
that a few years ago it's all done by

00:38:16,750 --> 00:38:23,619
rudder so the Ovilus files the XML stuff

00:38:21,760 --> 00:38:27,070
from the bender is sketched on a central

00:38:23,619 --> 00:38:29,530
system is there validated so I'm

00:38:27,070 --> 00:38:31,300
checking this is actually if this

00:38:29,530 --> 00:38:33,880
actually XML what I download it from

00:38:31,300 --> 00:38:37,150
there and if there are no binary in

00:38:33,880 --> 00:38:40,119
it and so on if it passes that it will

00:38:37,150 --> 00:38:42,280
deploy to will be deployed to all the

00:38:40,119 --> 00:38:47,290
end systems so just an XML file you

00:38:42,280 --> 00:38:49,300
download and automatically each night

00:38:47,290 --> 00:38:51,849
there will be a run there it validates

00:38:49,300 --> 00:38:54,069
and then or checks all the security

00:38:51,849 --> 00:38:56,260
things and then it pushes the results

00:38:54,069 --> 00:38:57,940
back to the central server and you can

00:38:56,260 --> 00:39:02,220
view it in the web interface so that's

00:38:57,940 --> 00:39:08,829
been less than a day to setup I think

00:39:02,220 --> 00:39:12,940
except for the validation part yeah

00:39:08,829 --> 00:39:15,069
the agent is the one who decides

00:39:12,940 --> 00:39:18,280
whatever will be run so you can turn it

00:39:15,069 --> 00:39:20,079
off obviously and it will just stop

00:39:18,280 --> 00:39:23,470
doing anything which gives a lot of

00:39:20,079 --> 00:39:26,980
safety to the end users it can also get

00:39:23,470 --> 00:39:28,510
like include files which disabled

00:39:26,980 --> 00:39:30,339
certain things which you post from the

00:39:28,510 --> 00:39:32,470
central site so if you have a delegated

00:39:30,339 --> 00:39:38,530
setup where people are kings of their

00:39:32,470 --> 00:39:40,510
own systems that can be used what we

00:39:38,530 --> 00:39:42,760
also did was just rolling out et CCL

00:39:40,510 --> 00:39:45,369
something you always too lazy to and

00:39:42,760 --> 00:39:47,260
with the tool change we got to a point

00:39:45,369 --> 00:39:49,540
where we wouldn't accept any shitty

00:39:47,260 --> 00:39:51,430
environment anymore so we started

00:39:49,540 --> 00:39:54,880
touching that my recommendation

00:39:51,430 --> 00:39:56,859
basically put your dot SSH directory in

00:39:54,880 --> 00:40:00,330
scale and it will be available for

00:39:56,859 --> 00:40:04,240
everyone and you save everybody time

00:40:00,330 --> 00:40:07,870
I've done wherever I'm allowed I started

00:40:04,240 --> 00:40:09,790
to do Otto patching of systems so in the

00:40:07,870 --> 00:40:11,890
Debian world I just do apt-get

00:40:09,790 --> 00:40:15,460
unattended upgrade so that's not a big

00:40:11,890 --> 00:40:18,940
thing on the redhead side I've done a

00:40:15,460 --> 00:40:20,770
few excludes in the young wrap house so

00:40:18,940 --> 00:40:23,860
that they don't get to the really

00:40:20,770 --> 00:40:27,250
dangerous stuff but for anything normal

00:40:23,860 --> 00:40:32,260
like kernel updates or SSL that's done

00:40:27,250 --> 00:40:38,080
via Rada basically what I do is I

00:40:32,260 --> 00:40:42,160
prefetch the the updates arm verify

00:40:38,080 --> 00:40:45,430
their I prefetch them I install them and

00:40:42,160 --> 00:40:47,440
I run post transaction hooks so if it

00:40:45,430 --> 00:40:49,510
was an SSL update it will restart the

00:40:47,440 --> 00:40:53,590
most important as a sell down processes

00:40:49,510 --> 00:40:55,450
for example the only thing which was

00:40:53,590 --> 00:40:59,680
getting really troublesome was there was

00:40:55,450 --> 00:41:01,630
fire body I first thought it's a linux

00:40:59,680 --> 00:41:03,940
issue but it is file body and it just

00:41:01,630 --> 00:41:06,220
dropped my firewall rules at some point

00:41:03,940 --> 00:41:10,990
during the update and so that thing is

00:41:06,220 --> 00:41:13,090
going to go also I'm running security

00:41:10,990 --> 00:41:14,890
scans with leanness which is a really

00:41:13,090 --> 00:41:17,440
good baseline tool which gives you a

00:41:14,890 --> 00:41:19,600
score of the system and tells you okay

00:41:17,440 --> 00:41:22,090
does look safe and I'm pushing that

00:41:19,600 --> 00:41:24,430
information into monitoring combining it

00:41:22,090 --> 00:41:26,740
with the compliance from rudder so we

00:41:24,430 --> 00:41:29,800
have one view where you can see our key

00:41:26,740 --> 00:41:31,510
systems fine and you can actually see a

00:41:29,800 --> 00:41:34,000
drop so if you miss configure something

00:41:31,510 --> 00:41:37,990
and your score like security score in

00:41:34,000 --> 00:41:44,980
Linda's drops from I don't know 85 to 75

00:41:37,990 --> 00:41:47,470
you know you messed up yeah application

00:41:44,980 --> 00:41:50,860
setup is something I normally don't do

00:41:47,470 --> 00:41:52,540
with rudder but it depends on the

00:41:50,860 --> 00:41:55,090
applications if it's something modern

00:41:52,540 --> 00:41:58,150
which automatically forms the cluster

00:41:55,090 --> 00:42:01,270
and so on it's fine if it's something

00:41:58,150 --> 00:42:03,790
that has a real state so for example a

00:42:01,270 --> 00:42:05,200
Postgres database I can I install all

00:42:03,790 --> 00:42:08,230
the packages or other but I don't

00:42:05,200 --> 00:42:09,490
initialize the database I don't want to

00:42:08,230 --> 00:42:12,430
check every five minutes should I

00:42:09,490 --> 00:42:16,540
initialize the database it's it's

00:42:12,430 --> 00:42:21,280
activity the benefit to risk ratio is

00:42:16,540 --> 00:42:24,760
shitty bad with that I don't want it if

00:42:21,280 --> 00:42:26,500
you want to and there are so-called node

00:42:24,760 --> 00:42:30,070
properties which are like CMDB

00:42:26,500 --> 00:42:32,410
information you can push things in there

00:42:30,070 --> 00:42:34,090
and you can build something with

00:42:32,410 --> 00:42:39,850
triggers so that is a one time trigger

00:42:34,090 --> 00:42:43,900
which has to be externally unlocked and

00:42:39,850 --> 00:42:46,810
we had to swing with flea control or

00:42:43,900 --> 00:42:48,790
drift assessment there is a new feature

00:42:46,810 --> 00:42:52,210
which is called audit mode so it's a

00:42:48,790 --> 00:42:53,650
policy test many tools have that but

00:42:52,210 --> 00:42:56,160
it's it's really nicely done

00:42:53,650 --> 00:42:58,360
because it we have two reporting so

00:42:56,160 --> 00:43:01,360
before you do a change you can actually

00:42:58,360 --> 00:43:04,030
deploy it turned off wait for the

00:43:01,360 --> 00:43:07,990
results to come in assess if it's safe

00:43:04,030 --> 00:43:10,180
and then turn it on and since this is

00:43:07,990 --> 00:43:16,000
API accessible you can actually automate

00:43:10,180 --> 00:43:20,140
with that you know something they added

00:43:16,000 --> 00:43:23,370
also is so called real ARP it allows you

00:43:20,140 --> 00:43:26,290
to trigger agent runs instantaneously

00:43:23,370 --> 00:43:27,940
which means you can run your agent at

00:43:26,290 --> 00:43:32,950
the same time everywhere if you want

00:43:27,940 --> 00:43:37,900
that another new thing from the last

00:43:32,950 --> 00:43:40,120
versions is a cross node file copy so I

00:43:37,900 --> 00:43:42,460
can take a file from any managed system

00:43:40,120 --> 00:43:48,910
and via policy put it everywhere else

00:43:42,460 --> 00:43:51,340
for example it's quite fast I know from

00:43:48,910 --> 00:43:53,290
yesterday somebody used it to deploy

00:43:51,340 --> 00:44:00,430
Java I think it was meant for config

00:43:53,290 --> 00:44:03,640
files but it works and having this

00:44:00,430 --> 00:44:05,530
transfer in a few minutes is quite cool

00:44:03,640 --> 00:44:07,630
and I think this is what's going to

00:44:05,530 --> 00:44:10,720
happen in most people's policy now

00:44:07,630 --> 00:44:12,790
because they can actually start managing

00:44:10,720 --> 00:44:15,280
their systems from a very high level and

00:44:12,790 --> 00:44:21,820
just I take that from here put it there

00:44:15,280 --> 00:44:26,290
and so on ok umm yeah something I also

00:44:21,820 --> 00:44:26,830
use is inventory plugin for ansible so I

00:44:26,290 --> 00:44:28,240
have

00:44:26,830 --> 00:44:31,890
the groups from rather available in

00:44:28,240 --> 00:44:34,570
ansible and that means I don't have to

00:44:31,890 --> 00:44:37,090
gather in Angela for example if the

00:44:34,570 --> 00:44:39,640
information is just there and I can also

00:44:37,090 --> 00:44:42,610
separate like all the continuous stuff

00:44:39,640 --> 00:44:47,050
isn't rather the one-shot stuff is

00:44:42,610 --> 00:44:49,210
intangible and also from I think two

00:44:47,050 --> 00:44:51,400
weeks ago there is an armed agent now

00:44:49,210 --> 00:44:53,290
for Debian so you can also put the

00:44:51,400 --> 00:44:55,690
rather agent all those small funny

00:44:53,290 --> 00:44:57,700
systems because it's small enough to fit

00:44:55,690 --> 00:45:10,840
in there and the law doesn't do anything

00:44:57,700 --> 00:45:12,760
bad oh that's idle okay okay so right

00:45:10,840 --> 00:45:15,790
now I have one problem are the

00:45:12,760 --> 00:45:18,220
development has sped up extremely and I

00:45:15,790 --> 00:45:21,160
don't even know everything they did in

00:45:18,220 --> 00:45:22,900
there anymore but that's cool I think

00:45:21,160 --> 00:45:27,400
that's also what what everybody would

00:45:22,900 --> 00:45:31,090
want in an open source project yeah and

00:45:27,400 --> 00:45:36,190
then that's basically my last thing my

00:45:31,090 --> 00:45:40,390
experience was it's very stable as for

00:45:36,190 --> 00:45:43,840
management of the system goes it's

00:45:40,390 --> 00:45:45,730
extremely fast which isn't even that

00:45:43,840 --> 00:45:47,830
important if I'm not looking at it and

00:45:45,730 --> 00:45:52,510
it just does its job on its own but

00:45:47,830 --> 00:45:55,570
still I like that it's fast it's really

00:45:52,510 --> 00:45:58,570
there to save me if I mess up because

00:45:55,570 --> 00:46:00,370
I've already learned if I use rather to

00:45:58,570 --> 00:46:03,130
fix the things I broke it would be

00:46:00,370 --> 00:46:06,250
faster than anything I do and the best

00:46:03,130 --> 00:46:09,430
thing is maybe I don't have the good fix

00:46:06,250 --> 00:46:12,310
around yet then I create certain more

00:46:09,430 --> 00:46:14,490
specific rules for bug fixing and just

00:46:12,310 --> 00:46:17,020
put them on the affected systems wire

00:46:14,490 --> 00:46:20,590
automated grouping so it knows where do

00:46:17,020 --> 00:46:22,690
six stuff and when I finally have a good

00:46:20,590 --> 00:46:26,320
box exciter knopf the other one it's

00:46:22,690 --> 00:46:28,810
really easy yeah and if you want to try

00:46:26,320 --> 00:46:31,170
it out or I would ask you to at least

00:46:28,810 --> 00:46:35,230
have a look at it because I've seen

00:46:31,170 --> 00:46:36,790
things like dashboards pop up in

00:46:35,230 --> 00:46:37,420
different products which look extremely

00:46:36,790 --> 00:46:40,510
similar

00:46:37,420 --> 00:46:42,850
I see terms like configuration

00:46:40,510 --> 00:46:46,030
for the monsters popping up every else

00:46:42,850 --> 00:46:48,580
there and a few more like that which is

00:46:46,030 --> 00:46:50,290
fine because the ideas are good but if

00:46:48,580 --> 00:46:51,460
you have time you should at least check

00:46:50,290 --> 00:46:56,080
out the ones who actually do the

00:46:51,460 --> 00:46:58,330
innovation there and the ideal thing

00:46:56,080 --> 00:47:00,700
would be if you have time to test it

00:46:58,330 --> 00:47:03,130
test it and give some feedback even if

00:47:00,700 --> 00:47:04,810
you don't like something unless they

00:47:03,130 --> 00:47:07,750
know about it they can't adjust it and

00:47:04,810 --> 00:47:10,720
like I said in a start this product is

00:47:07,750 --> 00:47:12,580
made by consultants for their customers

00:47:10,720 --> 00:47:14,830
or for the people they work with

00:47:12,580 --> 00:47:17,140
so they're not going to say yeah but

00:47:14,830 --> 00:47:19,240
that doesn't fit our product scope they

00:47:17,140 --> 00:47:20,370
will probably listen and that's a good

00:47:19,240 --> 00:47:23,260
thing

00:47:20,370 --> 00:47:26,320
yeah and finally if you want to try it

00:47:23,260 --> 00:47:28,090
the easiest way is a vagrant box which

00:47:26,320 --> 00:47:30,880
is on github you can just search for it

00:47:28,090 --> 00:47:36,520
and then you wake run it up and you have

00:47:30,880 --> 00:47:47,620
your rudder master running okay thank

00:47:36,520 --> 00:47:49,480
you and we can have questions so thank

00:47:47,620 --> 00:47:50,470
you very much for your talk we have some

00:47:49,480 --> 00:47:55,870
time for questions

00:47:50,470 --> 00:47:57,400
once you go first well then okay at

00:47:55,870 --> 00:47:59,020
least you should answer the question you

00:47:57,400 --> 00:48:04,690
asked yourself in the title is rather

00:47:59,020 --> 00:48:09,970
for everyone ah good point is for almost

00:48:04,690 --> 00:48:13,000
everyone is as long as your systems are

00:48:09,970 --> 00:48:14,830
needed within a minute or 300

00:48:13,000 --> 00:48:18,550
milliseconds after the initial creation

00:48:14,830 --> 00:48:22,090
and they're going to run for more ten

00:48:18,550 --> 00:48:23,980
ten minutes it makes sense scale doesn't

00:48:22,090 --> 00:48:26,470
matter as much so there's people who run

00:48:23,980 --> 00:48:28,320
it with ten boxes or something or twenty

00:48:26,470 --> 00:48:30,820
because they want reproducibility and

00:48:28,320 --> 00:48:35,170
that works really well with that tool

00:48:30,820 --> 00:48:37,600
and if you have a larger scale and look

00:48:35,170 --> 00:48:39,910
for a tool which actually isn't too

00:48:37,600 --> 00:48:43,210
reckless with how it creates the systems

00:48:39,910 --> 00:48:46,659
it's very good okay thank you very much

00:48:43,210 --> 00:48:46,659

YouTube URL: https://www.youtube.com/watch?v=lQWxzRVNYFI


