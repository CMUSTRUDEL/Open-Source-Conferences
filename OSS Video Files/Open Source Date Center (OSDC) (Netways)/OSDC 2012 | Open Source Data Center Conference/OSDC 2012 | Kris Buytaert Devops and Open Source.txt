Title: OSDC 2012 | Kris Buytaert Devops and Open Source
Publication date: 2015-01-14
Playlist: OSDC 2012 | Open Source Data Center Conference
Description: 
	Was ist „Devops" eigentlich genau? Wozu ist es wichtig...und was hat es überhaupt mit Open Source zu tun?
Captions: 
	00:00:07,019 --> 00:00:17,349
hello welcome again now we're going for

00:00:12,039 --> 00:00:20,140
quiz budget and he's speaking on seven

00:00:17,349 --> 00:00:26,649
tools for your desktop stick no no

00:00:20,140 --> 00:00:31,300
devops attack did a different topic very

00:00:26,649 --> 00:00:34,680
different topic yeah sorry for that just

00:00:31,300 --> 00:00:37,690
a little bit entertaining to start to

00:00:34,680 --> 00:00:39,130
speak seven tools for your desktop stack

00:00:37,690 --> 00:00:41,320
I wonder what a nobis or datacenter

00:00:39,130 --> 00:00:47,260
conference would do with it but I deal

00:00:41,320 --> 00:00:49,150
with Firefox and more that's it so seven

00:00:47,260 --> 00:00:51,790
tools for your DevOps tak something

00:00:49,150 --> 00:00:55,870
totally different let me first introduce

00:00:51,790 --> 00:00:57,700
myself I'm Chris I'm from Belgium but 10

00:00:55,870 --> 00:01:00,220
to 15 years ago when i started my career

00:00:57,700 --> 00:01:01,660
i used to be a software developer I did

00:01:00,220 --> 00:01:06,100
stuff in all kind of weird languages

00:01:01,660 --> 00:01:08,649
some java and perl some PHP even some

00:01:06,100 --> 00:01:10,360
propriety oracle stuff and I was always

00:01:08,649 --> 00:01:11,679
the guy who was putting these things in

00:01:10,360 --> 00:01:13,810
production I was always the guy who was

00:01:11,679 --> 00:01:15,819
putting up the web servers putting up

00:01:13,810 --> 00:01:18,280
the database servers and deploying his

00:01:15,819 --> 00:01:20,409
stuff to making sure it kept running so

00:01:18,280 --> 00:01:24,240
I basically became an operations person

00:01:20,409 --> 00:01:29,259
out of necessity today my role is

00:01:24,240 --> 00:01:31,030
basically the guy who teases is jr's and

00:01:29,259 --> 00:01:33,369
teases his colleagues to be better at

00:01:31,030 --> 00:01:36,399
their job to find new challenges and to

00:01:33,369 --> 00:01:38,369
solve different problems and well that's

00:01:36,399 --> 00:01:42,310
what I like to do solving problems and

00:01:38,369 --> 00:01:43,630
playing with new stuff my blog is titled

00:01:42,310 --> 00:01:46,209
everything is a Nina's problem

00:01:43,630 --> 00:01:49,060
you might remember from that and and

00:01:46,209 --> 00:01:51,819
well for the past couple of years I've

00:01:49,060 --> 00:01:53,380
been doing everything regarding higher

00:01:51,819 --> 00:01:55,389
performance computing large-scale

00:01:53,380 --> 00:01:58,810
deployment configuration management

00:01:55,389 --> 00:02:00,969
automation all that stuff so building

00:01:58,810 --> 00:02:05,139
virtual environments even before it was

00:02:00,969 --> 00:02:07,569
a bookstore calling in the cloud so the

00:02:05,139 --> 00:02:09,700
thing I mostly right to do is being good

00:02:07,569 --> 00:02:11,800
at my job so this talk is seven tools

00:02:09,700 --> 00:02:14,970
for your devil sack let's figure out

00:02:11,800 --> 00:02:17,400
what did step up this thing anyhow

00:02:14,970 --> 00:02:19,290
so over the past decade I've been

00:02:17,400 --> 00:02:22,350
talking and going to a lot of

00:02:19,290 --> 00:02:24,540
conferences I meeting people talking to

00:02:22,350 --> 00:02:27,270
people and trying to figure out how to

00:02:24,540 --> 00:02:29,520
deploy software had to keep it running

00:02:27,270 --> 00:02:31,590
and how to scale it and how to make it

00:02:29,520 --> 00:02:33,930
performance and was constantly running

00:02:31,590 --> 00:02:35,970
into a group of people which constantly

00:02:33,930 --> 00:02:39,380
was encountering himself or Patrick

00:02:35,970 --> 00:02:42,350
Gilda's there was just humble there was

00:02:39,380 --> 00:02:45,960
Julian lubes and some other people and

00:02:42,350 --> 00:02:47,700
we were discussing how to do this how do

00:02:45,960 --> 00:02:50,550
you deploy software how do you manage

00:02:47,700 --> 00:02:53,640
uptime how do you deal with performance

00:02:50,550 --> 00:02:54,959
how do you deal with failure and in the

00:02:53,640 --> 00:02:56,490
state's there was a conference called

00:02:54,959 --> 00:02:59,400
velocity and there were some other

00:02:56,490 --> 00:03:00,720
events going on and suddenly Patrick and

00:02:59,400 --> 00:03:03,330
I we figured out look there's something

00:03:00,720 --> 00:03:05,459
missing in Europe there is no real event

00:03:03,330 --> 00:03:06,780
where these people both development

00:03:05,459 --> 00:03:10,050
people and operations people talk

00:03:06,780 --> 00:03:12,750
together and that's how DevOps days

00:03:10,050 --> 00:03:14,910
started so that hope today's first

00:03:12,750 --> 00:03:19,260
edition in games almost three years ago

00:03:14,910 --> 00:03:22,470
was a small conference problemy as big

00:03:19,260 --> 00:03:24,870
as this one but the format was different

00:03:22,470 --> 00:03:26,610
it was in the morning a couple of formal

00:03:24,870 --> 00:03:28,350
talks in the afternoon we had open

00:03:26,610 --> 00:03:31,290
spaces in the open spaces for people

00:03:28,350 --> 00:03:33,000
talking about your experience how they

00:03:31,290 --> 00:03:35,310
did configuration management how they

00:03:33,000 --> 00:03:37,920
did performance tuning how they scale

00:03:35,310 --> 00:03:39,930
their file systems and it was actual

00:03:37,920 --> 00:03:41,790
people with real problems with real

00:03:39,930 --> 00:03:45,630
solutions in with real experiences

00:03:41,790 --> 00:03:49,739
talking to each other experiencing and

00:03:45,630 --> 00:03:51,570
sharing their experiences so that one

00:03:49,739 --> 00:03:54,360
event kicked off there were people from

00:03:51,570 --> 00:03:55,890
all over the world we had some weirdos

00:03:54,360 --> 00:03:59,010
flying in from Atlanta and from

00:03:55,890 --> 00:04:01,980
Australia to a small event in the end

00:03:59,010 --> 00:04:07,100
and after that we had a bunch of other

00:04:01,980 --> 00:04:11,220
conferences and well all over the world

00:04:07,100 --> 00:04:13,769
so it's growing movement where people

00:04:11,220 --> 00:04:16,709
are discussing the problems when you

00:04:13,769 --> 00:04:18,150
deploy software it's definitely not

00:04:16,709 --> 00:04:21,780
something where we know all the answers

00:04:18,150 --> 00:04:24,510
yet we still trying to look and find out

00:04:21,780 --> 00:04:26,880
better solutions and find out how to do

00:04:24,510 --> 00:04:28,740
things different but we're trying to

00:04:26,880 --> 00:04:30,930
talk to as much as people spell

00:04:28,740 --> 00:04:33,000
and trying to convince people that

00:04:30,930 --> 00:04:35,550
there's a need for development and

00:04:33,000 --> 00:04:37,410
operations people to talk and to discuss

00:04:35,550 --> 00:04:38,400
their problems together so we've been

00:04:37,410 --> 00:04:41,550
reaching out to different communities

00:04:38,400 --> 00:04:43,710
like the Java people VHB people there's

00:04:41,550 --> 00:04:45,120
a going trend where different

00:04:43,710 --> 00:04:47,039
conferences different technology

00:04:45,120 --> 00:04:49,410
conferences are actually organizing it

00:04:47,039 --> 00:04:51,150
dedicated track on DevOps on integrating

00:04:49,410 --> 00:04:52,979
development and operations in their

00:04:51,150 --> 00:04:55,340
conference for example drupalcon in

00:04:52,979 --> 00:04:58,259
munich this year we'll have a full track

00:04:55,340 --> 00:05:02,430
focused on DevOps figuring out how you

00:04:58,259 --> 00:05:06,780
can clearly correctly performance deploy

00:05:02,430 --> 00:05:09,300
Drupal instances stuff like that so this

00:05:06,780 --> 00:05:11,490
thing definitely isn't in you I mean we

00:05:09,300 --> 00:05:14,729
I've been doing the same line of work

00:05:11,490 --> 00:05:17,300
for about seven to eight years but the

00:05:14,729 --> 00:05:21,750
thing we have now is that there's a name

00:05:17,300 --> 00:05:24,889
now there is a common technology a

00:05:21,750 --> 00:05:29,060
common word where we say this is Devil's

00:05:24,889 --> 00:05:29,060
so let's define this thing

00:05:42,190 --> 00:05:55,440
would you like to work like this who

00:05:46,120 --> 00:05:58,900
knows who wrote this aside mark nobody

00:05:55,440 --> 00:06:02,590
this piece of texts is ancient it's a

00:05:58,900 --> 00:06:06,310
summary of Demings book out of the

00:06:02,590 --> 00:06:08,980
crisis which he wrote in 86 and his

00:06:06,310 --> 00:06:12,820
research work was years and years before

00:06:08,980 --> 00:06:15,190
that so it's definitely not new and when

00:06:12,820 --> 00:06:18,580
we were having I actually had the same

00:06:15,190 --> 00:06:20,830
list of thingies printed out on sheets

00:06:18,580 --> 00:06:22,770
put in front of me in in Mountain View

00:06:20,830 --> 00:06:25,120
and we started discussing it was like

00:06:22,770 --> 00:06:30,030
yeah this all makes sense this is dev up

00:06:25,120 --> 00:06:30,030
this is what we're doing and then

00:06:30,090 --> 00:06:33,940
basically the cat came out of the core

00:06:32,830 --> 00:06:35,950
and said look this is all this is

00:06:33,940 --> 00:06:37,780
nothing new and when you start thinking

00:06:35,950 --> 00:06:41,980
about it DevOps is absolutely nothing

00:06:37,780 --> 00:06:44,770
you so short definition is like Adam

00:06:41,980 --> 00:06:46,510
Jacobs tells us it's a professional and

00:06:44,770 --> 00:06:50,860
cultural movement but that still doesn't

00:06:46,510 --> 00:06:52,660
tell us anything there's two people who

00:06:50,860 --> 00:06:55,060
talk about it and they were looking for

00:06:52,660 --> 00:06:56,830
a better definition and that's at damen

00:06:55,060 --> 00:06:58,060
edwards and john willis back then when

00:06:56,830 --> 00:07:01,150
they were working together and ETO

00:06:58,060 --> 00:07:05,050
solutions and they basically defined F

00:07:01,150 --> 00:07:06,790
ups as for things it's about culture how

00:07:05,050 --> 00:07:08,740
does an organization deal with failure I

00:07:06,790 --> 00:07:10,870
think Christian laid a really great talk

00:07:08,740 --> 00:07:13,810
this morning on how booking.com deals

00:07:10,870 --> 00:07:16,660
with failure how they bring along new

00:07:13,810 --> 00:07:19,180
colleagues how do you work together as a

00:07:16,660 --> 00:07:20,470
team did you really have isolated silos

00:07:19,180 --> 00:07:22,450
where there's the up skies there's the

00:07:20,470 --> 00:07:25,210
developers or the he work as a group

00:07:22,450 --> 00:07:27,310
it's about automation it's about being

00:07:25,210 --> 00:07:29,560
able to reproduce your environment being

00:07:27,310 --> 00:07:31,690
able to redeploy being able to rebuild

00:07:29,560 --> 00:07:33,580
everything you do and being able that

00:07:31,690 --> 00:07:35,919
being sure that every time you do it

00:07:33,580 --> 00:07:38,050
it's going to be the same and it's about

00:07:35,919 --> 00:07:40,300
measurement what's going on in our

00:07:38,050 --> 00:07:42,460
infrastructure how many failures do we

00:07:40,300 --> 00:07:46,570
have how many users do we have how many

00:07:42,460 --> 00:07:49,240
times a day do we deploy how many memory

00:07:46,570 --> 00:07:51,900
usage is going on what what's the

00:07:49,240 --> 00:07:55,360
evolution never usage all of that stuff

00:07:51,900 --> 00:07:57,310
measuring it but also

00:07:55,360 --> 00:07:59,969
measuring how many go changes there have

00:07:57,310 --> 00:08:03,370
been and sharing those experiences

00:07:59,969 --> 00:08:06,879
scaring both the codes you're right but

00:08:03,370 --> 00:08:08,770
also how do you deal with this the

00:08:06,879 --> 00:08:11,409
example Christian was doing this morning

00:08:08,770 --> 00:08:12,849
ten years ago I cannot imagine that an

00:08:11,409 --> 00:08:15,639
organization like booking would be

00:08:12,849 --> 00:08:21,340
telling us how they do this how they run

00:08:15,639 --> 00:08:23,020
operations today it's it's common so

00:08:21,340 --> 00:08:27,310
this culture thing where do you come

00:08:23,020 --> 00:08:28,990
from who still works like this I mean

00:08:27,310 --> 00:08:30,669
developers and operations people

00:08:28,990 --> 00:08:34,390
fighting Friday evening five o'clock

00:08:30,669 --> 00:08:37,599
here's a tarball deploy it and see

00:08:34,390 --> 00:08:41,019
people howling so it's still happening

00:08:37,599 --> 00:08:42,640
why well we've not been the most

00:08:41,019 --> 00:08:46,140
friendly people to work with we've been

00:08:42,640 --> 00:08:49,899
writing and reading books like this and

00:08:46,140 --> 00:08:52,930
how do you expect developers to deal

00:08:49,899 --> 00:08:55,450
with us if we just say oh you're running

00:08:52,930 --> 00:08:57,279
out of this case once you've username we

00:08:55,450 --> 00:09:00,430
laugh at them that's really not the way

00:08:57,279 --> 00:09:03,010
how you want to treat people so what we

00:09:00,430 --> 00:09:06,010
really should do is start to play

00:09:03,010 --> 00:09:09,160
together start to have like small kids

00:09:06,010 --> 00:09:11,350
when they grow up this first they play

00:09:09,160 --> 00:09:13,779
in a corner they wrote to the own toys

00:09:11,350 --> 00:09:15,699
their own small pieces but when they

00:09:13,779 --> 00:09:19,600
grow up they actually start to play

00:09:15,699 --> 00:09:21,160
together and get along and yes we all

00:09:19,600 --> 00:09:23,890
like to play with the new fancy tools

00:09:21,160 --> 00:09:27,339
yes our developers like to play with the

00:09:23,890 --> 00:09:29,680
new latest developing languages and we

00:09:27,339 --> 00:09:31,089
want to play with it use tools if we can

00:09:29,680 --> 00:09:33,490
do it together it's going to be much

00:09:31,089 --> 00:09:39,449
more fun it's going to be much easier to

00:09:33,490 --> 00:09:39,449
do so what tool would you use for that

00:09:46,430 --> 00:09:57,600
okay so either everybody's asleep or are

00:09:49,649 --> 00:10:01,589
you guys are really clueless nobody is

00:09:57,600 --> 00:10:03,899
this my preferred tool for this I get

00:10:01,589 --> 00:10:06,600
people together we start drinking we

00:10:03,899 --> 00:10:08,130
start talking and you get communications

00:10:06,600 --> 00:10:10,800
going on between developers and

00:10:08,130 --> 00:10:12,779
operations and people start sharing

00:10:10,800 --> 00:10:15,029
their experiences their sharks sharing

00:10:12,779 --> 00:10:17,759
their pain and you get problem-solve

00:10:15,029 --> 00:10:19,769
because once you've been at the office

00:10:17,759 --> 00:10:20,940
at ten o'clock in the morning with a guy

00:10:19,769 --> 00:10:25,800
sitting next to you with the same

00:10:20,940 --> 00:10:32,490
hangover then you know what's working

00:10:25,800 --> 00:10:36,050
together so culture automation there's a

00:10:32,490 --> 00:10:39,959
bunch of solve problems out here well

00:10:36,050 --> 00:10:41,370
none of these are really solved but for

00:10:39,959 --> 00:10:43,259
the past five to ten years we've been

00:10:41,370 --> 00:10:45,300
talking enough about them so you

00:10:43,259 --> 00:10:47,339
probably should already be using them

00:10:45,300 --> 00:10:49,620
you should be using some kind of

00:10:47,339 --> 00:10:52,230
automated deployment framework would it

00:10:49,620 --> 00:10:54,329
be fight kickstart whatever by now you

00:10:52,230 --> 00:10:58,949
should be using any of the configuration

00:10:54,329 --> 00:11:00,480
management tools out there who is not

00:10:58,949 --> 00:11:05,819
using a configuration management tool

00:11:00,480 --> 00:11:07,110
yet okay so we got to that point where

00:11:05,819 --> 00:11:08,670
people are using configuration

00:11:07,110 --> 00:11:13,880
management who's throwing is conflict

00:11:08,670 --> 00:11:17,550
management in version control well

00:11:13,880 --> 00:11:24,990
that's like seven hands or the rest of

00:11:17,550 --> 00:11:26,819
you guys doing eight nine okay so we're

00:11:24,990 --> 00:11:29,790
doing automated deployment we're doing

00:11:26,819 --> 00:11:31,139
coughing management for our development

00:11:29,790 --> 00:11:33,930
environments we're doing build

00:11:31,139 --> 00:11:36,240
automation so that there's tools out

00:11:33,930 --> 00:11:37,470
there that can help us there's plenty of

00:11:36,240 --> 00:11:40,529
tools out there but there's going to be

00:11:37,470 --> 00:11:42,180
new challenges the new challenges are

00:11:40,529 --> 00:11:44,819
how do you deal with those changes at

00:11:42,180 --> 00:11:46,920
scale how do you tell a data center or

00:11:44,819 --> 00:11:49,199
how do you tell your infrastructure now

00:11:46,920 --> 00:11:51,509
do this upgrade but only in data center

00:11:49,199 --> 00:11:54,810
a or do this upgrade but only on

00:11:51,509 --> 00:11:58,300
machines with a cpu generation from that

00:11:54,810 --> 00:12:01,240
year or do it only on machines that

00:11:58,300 --> 00:12:04,300
have only less than 4 gigabytes of RAM

00:12:01,240 --> 00:12:06,690
so you need to be able to instruct your

00:12:04,300 --> 00:12:08,770
machines on a different level than

00:12:06,690 --> 00:12:10,780
modifying a file somewhere and

00:12:08,770 --> 00:12:13,750
restarting a service you need a tool

00:12:10,780 --> 00:12:15,100
like and collective or run deck or know

00:12:13,750 --> 00:12:18,910
what to actually orchestrate your

00:12:15,100 --> 00:12:22,210
infrastructure and then another thing

00:12:18,910 --> 00:12:24,760
that's really coming up as a real

00:12:22,210 --> 00:12:26,320
problem is good repository management

00:12:24,760 --> 00:12:29,320
there's a bunch of proprietary tools out

00:12:26,320 --> 00:12:30,970
there redhead has its solution they are

00:12:29,320 --> 00:12:33,250
trying to build it as open source but

00:12:30,970 --> 00:12:35,260
they're still not succeeding it but

00:12:33,250 --> 00:12:37,660
there's the oil tools coming out like 12

00:12:35,260 --> 00:12:40,720
combined with sponge and tools that make

00:12:37,660 --> 00:12:43,210
package managers easier so let's look a

00:12:40,720 --> 00:12:47,790
bit at I'm collective and who knows in

00:12:43,210 --> 00:12:50,110
collective who's using it ok so I'm

00:12:47,790 --> 00:12:53,800
collective although area doesn't like me

00:12:50,110 --> 00:12:57,250
saying it best way to describe it is a

00:12:53,800 --> 00:13:00,670
distributed ssl SSH on steroids it's a

00:12:57,250 --> 00:13:02,680
tool that uses the Q you throw a comment

00:13:00,670 --> 00:13:04,600
at the Q and all the machines that are

00:13:02,680 --> 00:13:06,760
listening you're going to execute if

00:13:04,600 --> 00:13:08,920
their match criteria you're going to

00:13:06,760 --> 00:13:11,920
execute that comment and are going to

00:13:08,920 --> 00:13:13,870
give you feedback on what happened so

00:13:11,920 --> 00:13:15,160
you can do stuff like query which

00:13:13,870 --> 00:13:17,470
version you have installed on your

00:13:15,160 --> 00:13:21,070
platform figure out where a service is

00:13:17,470 --> 00:13:24,580
running and then do regular expressions

00:13:21,070 --> 00:13:26,560
based on I can accept which data center

00:13:24,580 --> 00:13:28,270
they're running in or whatever if you're

00:13:26,560 --> 00:13:31,150
running puppet and you just route your

00:13:28,270 --> 00:13:33,490
puppet master you need to Reese on all

00:13:31,150 --> 00:13:35,500
your certificates you can do it with

00:13:33,490 --> 00:13:37,150
them collective you can just say remove

00:13:35,500 --> 00:13:41,200
these these in these files restarts

00:13:37,150 --> 00:13:44,170
stuff like that so as an example we had

00:13:41,200 --> 00:13:46,930
an environment where was a testing

00:13:44,170 --> 00:13:48,430
environment and development really

00:13:46,930 --> 00:13:51,310
didn't know anymore where they actually

00:13:48,430 --> 00:13:54,040
were running Apache it was just a bunch

00:13:51,310 --> 00:13:58,660
of machines that were using I was like a

00:13:54,040 --> 00:14:01,690
couple of 80 of them he's actually

00:13:58,660 --> 00:14:03,280
clearly showed you and we need to figure

00:14:01,690 --> 00:14:05,950
out where the patch is still running

00:14:03,280 --> 00:14:08,500
well turnout was running on the web

00:14:05,950 --> 00:14:10,980
server was running on some devtools site

00:14:08,500 --> 00:14:14,680
and all the other boxes were stopped so

00:14:10,980 --> 00:14:15,850
that was easy and when you're talking

00:14:14,680 --> 00:14:17,980
with developers especially Java

00:14:15,850 --> 00:14:19,930
developers and one you've in an

00:14:17,980 --> 00:14:21,940
environment where it has been lots of

00:14:19,930 --> 00:14:24,880
wild draw lots of people doing several

00:14:21,940 --> 00:14:26,709
machines you come to the situation where

00:14:24,880 --> 00:14:29,380
sometimes they've installed packages

00:14:26,709 --> 00:14:31,779
manually over and over and over again

00:14:29,380 --> 00:14:33,490
and you start figuring out bugs where

00:14:31,779 --> 00:14:35,680
they've deployed an application on one

00:14:33,490 --> 00:14:37,570
application server it works there and on

00:14:35,680 --> 00:14:38,889
the next machine doesn't work why

00:14:37,570 --> 00:14:41,410
because their job operations are

00:14:38,889 --> 00:14:44,230
different so I'm collective is also easy

00:14:41,410 --> 00:14:47,370
to use the MC package plug in and figure

00:14:44,230 --> 00:14:51,430
out which GD case you have deployed and

00:14:47,370 --> 00:14:54,610
well that's a lot of different versions

00:14:51,430 --> 00:14:57,040
right this is actually a real-life

00:14:54,610 --> 00:14:59,199
situation where I have developments

00:14:57,040 --> 00:15:02,230
coming in and they asked me what

00:14:59,199 --> 00:15:04,149
versions are we running and with this

00:15:02,230 --> 00:15:07,120
just one command line result we could

00:15:04,149 --> 00:15:09,519
tell them look there's way too many

00:15:07,120 --> 00:15:10,630
versions of them either how do we deal

00:15:09,519 --> 00:15:13,660
with this and we could start the

00:15:10,630 --> 00:15:15,490
conversation on what's going wrong and

00:15:13,660 --> 00:15:17,560
why do they need these different version

00:15:15,490 --> 00:15:19,570
turn that they really didn't need all

00:15:17,560 --> 00:15:21,250
these versions it was just the latest

00:15:19,570 --> 00:15:25,750
available version they downloaded from

00:15:21,250 --> 00:15:28,870
the internet and installed so getting

00:15:25,750 --> 00:15:33,550
these tools in use means you can start a

00:15:28,870 --> 00:15:35,949
conversation with your developers GD

00:15:33,550 --> 00:15:38,800
kazar cleanly packaged their

00:15:35,949 --> 00:15:42,250
applications were not they were just war

00:15:38,800 --> 00:15:45,160
finals deployed but they learn that hang

00:15:42,250 --> 00:15:48,160
on if we can use that tool to figure out

00:15:45,160 --> 00:15:50,680
inquiry on all our machines what

00:15:48,160 --> 00:15:53,620
versions are installed maybe we should

00:15:50,680 --> 00:15:56,860
start packaging stuff but packaging is

00:15:53,620 --> 00:16:01,569
hard who likes packaging there anybody

00:15:56,860 --> 00:16:05,680
maintaining packages here upstream to

00:16:01,569 --> 00:16:07,899
distributions how many times do you run

00:16:05,680 --> 00:16:09,220
into the fact that there the version of

00:16:07,899 --> 00:16:11,290
the software you want in the

00:16:09,220 --> 00:16:15,760
distribution you're using is three years

00:16:11,290 --> 00:16:17,250
behind very often oh let's say

00:16:15,760 --> 00:16:19,750
constantly

00:16:17,250 --> 00:16:22,420
you could choose for a bleeding edge

00:16:19,750 --> 00:16:23,740
distribution or you could sail I'm going

00:16:22,420 --> 00:16:25,060
to package this yourself but the new

00:16:23,740 --> 00:16:26,830
range packaging hell again because you

00:16:25,060 --> 00:16:31,570
need to package all the dependencies and

00:16:26,830 --> 00:16:33,070
so on so if you want to contribute that

00:16:31,570 --> 00:16:34,960
stuff into this you should it's gonna

00:16:33,070 --> 00:16:36,460
cost you a lot of more effort more

00:16:34,960 --> 00:16:38,830
effort than your bosses probably willing

00:16:36,460 --> 00:16:40,150
to pay because all he wants is having a

00:16:38,830 --> 00:16:41,920
software running it doesn't care about

00:16:40,150 --> 00:16:44,500
having a distribution which has exactly

00:16:41,920 --> 00:16:46,330
the same version your developers want so

00:16:44,500 --> 00:16:49,390
if you're into rpm world there there's a

00:16:46,330 --> 00:16:51,640
huge book next to Mar p.m. which tells

00:16:49,390 --> 00:16:53,500
you how packaging works but it is

00:16:51,640 --> 00:16:55,450
something that's needed you want to

00:16:53,500 --> 00:16:57,220
package stuff you want to be able to use

00:16:55,450 --> 00:16:58,630
all the features packaging gives you

00:16:57,220 --> 00:17:00,730
like consistency in dependencies

00:16:58,630 --> 00:17:03,250
management and all that tools and you

00:17:00,730 --> 00:17:06,430
want to package software your developers

00:17:03,250 --> 00:17:09,400
of building so Jordan is sisal he was

00:17:06,430 --> 00:17:11,230
frustrated with that problem and out of

00:17:09,400 --> 00:17:15,760
frustration he started building a tool

00:17:11,230 --> 00:17:18,400
called fpn so I p.m. basically takes

00:17:15,760 --> 00:17:19,960
bunch of inputs could be an RPM could be

00:17:18,400 --> 00:17:22,570
a ruby gem could be a Debian package

00:17:19,960 --> 00:17:26,110
could be a Python package I think he

00:17:22,570 --> 00:17:30,180
currently also support PHP packages or

00:17:26,110 --> 00:17:33,760
just a directory or a bunch of files and

00:17:30,180 --> 00:17:37,150
fpm eats that and the output is going to

00:17:33,760 --> 00:17:40,330
be RPM debian package a large package

00:17:37,150 --> 00:17:43,960
whatever it's really easy it's just one

00:17:40,330 --> 00:17:47,200
comment line targets in this example RPM

00:17:43,960 --> 00:17:49,210
its source the directory I'm gonna pack

00:17:47,200 --> 00:17:51,790
a torrid QE or this is the version and

00:17:49,210 --> 00:17:54,760
this is a directory and out comes a

00:17:51,790 --> 00:17:56,230
package which is usable it's not a

00:17:54,760 --> 00:17:57,610
package which is going to be accepted in

00:17:56,230 --> 00:17:59,440
any of strain distribution but it's

00:17:57,610 --> 00:18:01,060
going to solve our local problem you can

00:17:59,440 --> 00:18:05,590
put this in your local repository and

00:18:01,060 --> 00:18:07,600
you have a clean version package so we

00:18:05,590 --> 00:18:09,730
def p.m. in mind we actually we were

00:18:07,600 --> 00:18:11,080
doing a lot of Ruby deployments and we

00:18:09,730 --> 00:18:12,370
were constantly running it to the point

00:18:11,080 --> 00:18:15,700
that not the Ruby stuff is packaged

00:18:12,370 --> 00:18:18,310
cleanly fpm allows me to package every

00:18:15,700 --> 00:18:20,500
tool really fast so I sort of a gift of

00:18:18,310 --> 00:18:22,570
ripples three were basically I have a

00:18:20,500 --> 00:18:25,570
list of rpms some specified for

00:18:22,570 --> 00:18:27,220
diversion some not and if you send me a

00:18:25,570 --> 00:18:29,320
pull request for that repository our

00:18:27,220 --> 00:18:30,340
Jenkins instance will automatically pull

00:18:29,320 --> 00:18:32,710
the listing

00:18:30,340 --> 00:18:34,419
and run fpm over all the packages in the

00:18:32,710 --> 00:18:36,669
dependencies and push that into our

00:18:34,419 --> 00:18:39,159
repository and then you have a free ruby

00:18:36,669 --> 00:18:41,080
gem build service and it's so truly it's

00:18:39,159 --> 00:18:43,809
like two or three lines of code but it

00:18:41,080 --> 00:18:47,080
works and it's if we run into a

00:18:43,809 --> 00:18:49,299
dependency at a customer or somewhere

00:18:47,080 --> 00:18:53,980
internally where we need another ruby

00:18:49,299 --> 00:18:55,240
gem it's just editing one file Jenkins

00:18:53,980 --> 00:18:56,679
will pick it up or continuous

00:18:55,240 --> 00:19:01,929
integration framework will just build

00:18:56,679 --> 00:19:04,750
the new package we need so culture some

00:19:01,929 --> 00:19:10,750
automation let's talk about measuring

00:19:04,750 --> 00:19:15,370
and monitoring so John Vincent losses on

00:19:10,750 --> 00:19:17,830
Twitter he started a trend it's actually

00:19:15,370 --> 00:19:20,380
a sub movement of DevOps and some way

00:19:17,830 --> 00:19:24,190
you could call it like that where he

00:19:20,380 --> 00:19:25,840
stated look monitoring sucks we all like

00:19:24,190 --> 00:19:28,720
monitoring but there's so many problems

00:19:25,840 --> 00:19:30,580
I mean you if you want to have metrics

00:19:28,720 --> 00:19:32,649
and graphing and alerting you need to

00:19:30,580 --> 00:19:35,559
collect your data once or twice but

00:19:32,649 --> 00:19:37,659
twice or three times the same data in

00:19:35,559 --> 00:19:40,750
order to do something with it there's

00:19:37,659 --> 00:19:42,909
still a way to fixed model of finding a

00:19:40,750 --> 00:19:44,590
host to a service I mean services float

00:19:42,909 --> 00:19:46,899
around they're not fixed to a model and

00:19:44,590 --> 00:19:53,080
most tools are not capable of dealing

00:19:46,899 --> 00:19:56,049
with that those a lot of open source or

00:19:53,080 --> 00:19:58,270
stools around and a couple of years we

00:19:56,049 --> 00:19:59,830
evaluated a bunch of them and we came

00:19:58,270 --> 00:20:01,330
back to the conclusion that the only way

00:19:59,830 --> 00:20:04,240
to actually deploy monitoring tools at

00:20:01,330 --> 00:20:06,610
scale was to fall back to nodules or

00:20:04,240 --> 00:20:10,029
one's of his friends because hyperic

00:20:06,610 --> 00:20:13,630
zabbix xenos all of those didn't have a

00:20:10,029 --> 00:20:15,760
clean API and if you were doing stuff at

00:20:13,630 --> 00:20:19,090
scale you had no way to do configuration

00:20:15,760 --> 00:20:20,830
management of them today Zeno's on

00:20:19,090 --> 00:20:22,419
zabbix the api's are getting better you

00:20:20,830 --> 00:20:25,000
can actually configure them remotely but

00:20:22,419 --> 00:20:29,950
it's still not at a point where stuff is

00:20:25,000 --> 00:20:31,750
really working so stuff isn't changing

00:20:29,950 --> 00:20:34,870
lots of people think monitoring sites

00:20:31,750 --> 00:20:37,299
muttering is way too complex that

00:20:34,870 --> 00:20:38,500
there's new tools coming out but if you

00:20:37,299 --> 00:20:40,120
want to build a monitoring framework

00:20:38,500 --> 00:20:40,920
that really works you need to build

00:20:40,120 --> 00:20:44,280
something like this

00:20:40,920 --> 00:20:47,700
and that's chaos and you can collect

00:20:44,280 --> 00:20:49,290
your data you can use collecti you can

00:20:47,700 --> 00:20:51,300
get some not just metrics you can get

00:20:49,290 --> 00:20:54,630
some type of reports you can parse your

00:20:51,300 --> 00:20:57,650
apache logs java applications expose

00:20:54,630 --> 00:21:00,420
their stuff using gmx and then you can

00:20:57,650 --> 00:21:04,590
mangle all that data with some tools

00:21:00,420 --> 00:21:06,480
using jmx trends or using lobster and

00:21:04,590 --> 00:21:09,600
then showed it into tools that are going

00:21:06,480 --> 00:21:11,130
to display your data but then you still

00:21:09,600 --> 00:21:13,290
want to start on top of that you want to

00:21:11,130 --> 00:21:15,120
parse the data and make out of the data

00:21:13,290 --> 00:21:16,950
you have you want to make information

00:21:15,120 --> 00:21:19,200
out of that but if you have information

00:21:16,950 --> 00:21:22,620
you don't you need to build knowledge on

00:21:19,200 --> 00:21:24,030
top of that so people start

00:21:22,620 --> 00:21:25,650
experimenting with these tools and they

00:21:24,030 --> 00:21:28,830
solve a couple of problems but they

00:21:25,650 --> 00:21:31,020
don't solve everything there's one in

00:21:28,830 --> 00:21:32,910
the monitoring sucks movement there's

00:21:31,020 --> 00:21:37,980
one tool in the middle that comes back

00:21:32,910 --> 00:21:42,750
every time it's logstash locks that by

00:21:37,980 --> 00:21:46,980
default is a tool that allows you to do

00:21:42,750 --> 00:21:48,690
search on your centralized logs there is

00:21:46,980 --> 00:21:52,290
other tools out there like veil up to

00:21:48,690 --> 00:21:55,710
and Elsa but the ID that locks that

00:21:52,290 --> 00:21:58,800
works with a queue in you can throw

00:21:55,710 --> 00:22:01,680
anything at it that makes it a really

00:21:58,800 --> 00:22:04,500
powerful tool by default you just ship

00:22:01,680 --> 00:22:06,330
your log files over the queue to the

00:22:04,500 --> 00:22:07,950
indexer Linux or processes and stores it

00:22:06,330 --> 00:22:11,160
by default a plastic surgeon even from

00:22:07,950 --> 00:22:14,580
them the query elasticsearch but you can

00:22:11,160 --> 00:22:16,890
also get it from other places you can

00:22:14,580 --> 00:22:20,490
get it from gulf which is a great log

00:22:16,890 --> 00:22:23,160
extended format or you can get XMPP data

00:22:20,490 --> 00:22:25,950
in there or Twitter data and you can

00:22:23,160 --> 00:22:28,020
mangle all that data you can put filters

00:22:25,950 --> 00:22:29,820
on top of that and throw that into all

00:22:28,020 --> 00:22:32,310
the deist fault is elastic search but

00:22:29,820 --> 00:22:36,440
you can also throw all of the data into

00:22:32,310 --> 00:22:41,640
ganglia into graphite into stats d or

00:22:36,440 --> 00:22:43,830
into anything else and that ID is an

00:22:41,640 --> 00:22:45,330
idea that starting become more popular

00:22:43,830 --> 00:22:47,670
where people basically one we want to

00:22:45,330 --> 00:22:52,890
have a bunch of small tools that can

00:22:47,670 --> 00:22:53,760
either generate data throw it on a bus

00:22:52,890 --> 00:22:56,640
and then we want to have a

00:22:53,760 --> 00:22:59,280
tools actually consume that data and

00:22:56,640 --> 00:23:02,730
start doing things with it and maybe

00:22:59,280 --> 00:23:06,780
oops other way and then maybe we can

00:23:02,730 --> 00:23:08,250
clean this out and have clear isolated

00:23:06,780 --> 00:23:11,100
parts where this is data collection this

00:23:08,250 --> 00:23:13,440
is data angling business actual data

00:23:11,100 --> 00:23:16,080
displaying and the other parts are

00:23:13,440 --> 00:23:19,170
alerting alerting and reporting where

00:23:16,080 --> 00:23:22,010
you come back to initial UNIX ID where

00:23:19,170 --> 00:23:25,800
small tools work together really great

00:23:22,010 --> 00:23:28,740
so a default logs dive front-end not

00:23:25,800 --> 00:23:31,350
really a pretty one right um I hear a

00:23:28,740 --> 00:23:33,150
lot of people using Grail up to on top

00:23:31,350 --> 00:23:35,030
of log stash just because of the user

00:23:33,150 --> 00:23:37,080
interface of log stash not being good

00:23:35,030 --> 00:23:39,630
there's another tool around which is

00:23:37,080 --> 00:23:41,850
kodama a Cabana is just a lightweight

00:23:39,630 --> 00:23:45,510
PHP front end for luggage it's just

00:23:41,850 --> 00:23:49,410
talking to elasticsearch back end and it

00:23:45,510 --> 00:23:51,930
looks much nicer that brings us to it's

00:23:49,410 --> 00:23:53,940
a really small application talking to an

00:23:51,930 --> 00:23:56,220
elastic search back end and that's

00:23:53,940 --> 00:23:59,310
something our developers also like so

00:23:56,220 --> 00:24:04,080
they write a lot of log files they spawn

00:23:59,310 --> 00:24:06,810
out java stack traces and then hundreds

00:24:04,080 --> 00:24:10,230
of megabytes a day but they're not doing

00:24:06,810 --> 00:24:12,270
anything with that why because they're

00:24:10,230 --> 00:24:14,760
not really keen on to parsing into log

00:24:12,270 --> 00:24:16,950
files if you give them a tool like log

00:24:14,760 --> 00:24:18,570
stash with elastic search based back end

00:24:16,950 --> 00:24:21,150
they give an API where they can actually

00:24:18,570 --> 00:24:23,100
query their data the data they generated

00:24:21,150 --> 00:24:25,110
and they can start learning from it and

00:24:23,100 --> 00:24:27,510
you can start discussing with them look

00:24:25,110 --> 00:24:29,310
what's going on inside the application

00:24:27,510 --> 00:24:32,370
why are we generating so much locks and

00:24:29,310 --> 00:24:34,710
what's inside a lot and this is a tool

00:24:32,370 --> 00:24:37,080
that allows developers and operations

00:24:34,710 --> 00:24:38,820
people to talk about their log files

00:24:37,080 --> 00:24:43,770
which is a really critical important

00:24:38,820 --> 00:24:46,860
part so you get some graphs on top here

00:24:43,770 --> 00:24:48,720
but those are really not the ones you

00:24:46,860 --> 00:24:50,880
want and you want to have something

00:24:48,720 --> 00:24:54,450
really fancy to show to your management

00:24:50,880 --> 00:24:56,280
you want to show them how many well how

00:24:54,450 --> 00:24:58,980
many bookings you have per hour how many

00:24:56,280 --> 00:25:03,150
people are actually logging onto the

00:24:58,980 --> 00:25:05,899
site and buying stuff so there's another

00:25:03,150 --> 00:25:09,179
great tool either which is graphite

00:25:05,899 --> 00:25:13,259
is anybody here currently using cacti

00:25:09,179 --> 00:25:17,429
and you guys use a giver fighter Tac toy

00:25:13,259 --> 00:25:19,259
anybody how many DBAs do you need to

00:25:17,429 --> 00:25:24,599
manage their ways of a big cacti

00:25:19,259 --> 00:25:26,759
environment so I've seen a bunch of

00:25:24,599 --> 00:25:29,729
cacti set up that basically they were

00:25:26,759 --> 00:25:32,249
too big the fact that you needed a

00:25:29,729 --> 00:25:34,379
dedicated database tool to manage it

00:25:32,249 --> 00:25:37,709
because it was throwing so many stuff

00:25:34,379 --> 00:25:40,320
there that was a problem graphite takes

00:25:37,709 --> 00:25:44,519
that stuff away it's making graphing

00:25:40,320 --> 00:25:47,129
really easy anything you can think of

00:25:44,519 --> 00:25:49,109
which is a key value pair it's something

00:25:47,129 --> 00:25:51,359
you can graph it's as easy as just

00:25:49,109 --> 00:25:53,159
echoing some string with some value with

00:25:51,359 --> 00:25:55,320
a timestamp to net count on your

00:25:53,159 --> 00:25:57,719
graphics aust to netcat and pilots

00:25:55,320 --> 00:26:01,559
report 2003 our graph writers and you've

00:25:57,719 --> 00:26:07,169
got a graph you do two of them that's it

00:26:01,559 --> 00:26:08,940
and it's so fun to play with it's gone

00:26:07,169 --> 00:26:13,349
ugly weather web interface just like

00:26:08,940 --> 00:26:15,299
lobster but it allows you to do multiple

00:26:13,349 --> 00:26:17,429
things with the graph so you get a bunch

00:26:15,299 --> 00:26:21,119
of values these are your metrics on the

00:26:17,429 --> 00:26:23,099
left and you can then click to them and

00:26:21,119 --> 00:26:25,229
group them and some them and average

00:26:23,099 --> 00:26:27,839
them and do some other calculations on

00:26:25,229 --> 00:26:30,059
top of them and graphite then we'll

00:26:27,839 --> 00:26:34,919
build this image for you now this image

00:26:30,059 --> 00:26:38,309
is actually URL so you can use an API to

00:26:34,919 --> 00:26:40,799
generate this image and you can go to a

00:26:38,309 --> 00:26:42,989
developer and say look you know that

00:26:40,799 --> 00:26:45,599
data you want it you know the averages

00:26:42,989 --> 00:26:47,459
of the throughput time of that file when

00:26:45,599 --> 00:26:49,709
you were passing that file and you are

00:26:47,459 --> 00:26:51,389
starting to write a timestamp and then

00:26:49,709 --> 00:26:53,879
you write a timestamp again when you

00:26:51,389 --> 00:26:55,139
finish parsing that look you can

00:26:53,879 --> 00:26:58,649
actually grab that and you can actually

00:26:55,139 --> 00:27:01,440
build a dashboard yourself and make it

00:26:58,649 --> 00:27:02,909
visible to everybody and you can start

00:27:01,440 --> 00:27:06,179
playing with this data here are the data

00:27:02,909 --> 00:27:08,419
here's an API and developers will start

00:27:06,179 --> 00:27:11,190
playing with it because they love to see

00:27:08,419 --> 00:27:13,349
figures they'd love to see what's going

00:27:11,190 --> 00:27:15,209
on inside your system and now they can

00:27:13,349 --> 00:27:17,039
because they have the data and they can

00:27:15,209 --> 00:27:19,240
turn it into information

00:27:17,039 --> 00:27:23,049
so there's a bunch of tools that are

00:27:19,240 --> 00:27:25,690
complementary to graphite stats d which

00:27:23,049 --> 00:27:27,039
allows you to send a metric and you send

00:27:25,690 --> 00:27:28,659
it values and it's going to do

00:27:27,039 --> 00:27:30,309
calculations on top of that so if you

00:27:28,659 --> 00:27:32,980
want to know how many queries you do on

00:27:30,309 --> 00:27:34,389
a minute each time you send the one to

00:27:32,980 --> 00:27:35,919
stats d it's going to add that and then

00:27:34,389 --> 00:27:38,830
after a minute kind of flush it to

00:27:35,919 --> 00:27:41,250
graphite you can get default operating

00:27:38,830 --> 00:27:43,840
system matrix using tools like collect d

00:27:41,250 --> 00:27:46,750
if you're a java shop and you're looking

00:27:43,840 --> 00:27:50,679
at the java statistics messages using

00:27:46,750 --> 00:27:53,350
GMS or java heap space you can use to

00:27:50,679 --> 00:27:56,500
like gmx trends and get all the gmx data

00:27:53,350 --> 00:27:59,590
out of the application and throw that to

00:27:56,500 --> 00:28:02,049
graphite actually GMS trans also shows

00:27:59,590 --> 00:28:04,990
stuff into that reactor or you can use

00:28:02,049 --> 00:28:07,179
tools like lobster and count the number

00:28:04,990 --> 00:28:10,259
of access lots can't your tongue

00:28:07,179 --> 00:28:12,820
catalogs see how many 404 pages you get

00:28:10,259 --> 00:28:16,570
parse your post fixed lots and drove

00:28:12,820 --> 00:28:20,230
them to graphite there's also a bunch of

00:28:16,570 --> 00:28:22,059
people that didn't like it's kind of

00:28:20,230 --> 00:28:24,159
screens and they started building their

00:28:22,059 --> 00:28:26,289
own dashboards because there's an API so

00:28:24,159 --> 00:28:29,889
you can build new dashboards on top of

00:28:26,289 --> 00:28:33,159
that um there's g dash there's title

00:28:29,889 --> 00:28:35,769
those other dashboards are around

00:28:33,159 --> 00:28:37,750
there's a really huge ecosystem of new

00:28:35,769 --> 00:28:40,960
open source tools being built on top of

00:28:37,750 --> 00:28:43,450
all these tools title for examples

00:28:40,960 --> 00:28:45,250
allows you to define thresholds and when

00:28:43,450 --> 00:28:46,960
stuff happens when you go beyond a

00:28:45,250 --> 00:28:50,080
certain threshold which could be an

00:28:46,960 --> 00:28:52,389
average or which could be a deviation of

00:28:50,080 --> 00:28:58,899
something it allows you to send emails

00:28:52,389 --> 00:29:03,820
and do stuff like that so what about

00:28:58,899 --> 00:29:07,360
sharing stuff these days open source is

00:29:03,820 --> 00:29:09,279
all over the place five to ten years ago

00:29:07,360 --> 00:29:10,600
when you were a system administrator and

00:29:09,279 --> 00:29:13,840
you wanted to contribute to an open

00:29:10,600 --> 00:29:16,179
source project there was little else you

00:29:13,840 --> 00:29:18,700
could do besides writing bug reports

00:29:16,179 --> 00:29:21,279
writing documentation or explaining

00:29:18,700 --> 00:29:24,070
people about how it works but these days

00:29:21,279 --> 00:29:25,510
you can actually lots of stuff is

00:29:24,070 --> 00:29:27,309
written in shell scripts is within

00:29:25,510 --> 00:29:29,600
scripting languages which you can easily

00:29:27,309 --> 00:29:32,539
understand or you can actually

00:29:29,600 --> 00:29:34,610
publish the code you use to deploy your

00:29:32,539 --> 00:29:36,049
software you can publish your chef

00:29:34,610 --> 00:29:38,630
cookbooks you can publish your puppet

00:29:36,049 --> 00:29:41,660
manifests Wikimedia publish their whole

00:29:38,630 --> 00:29:43,250
puppetry and I wouldn't look at it

00:29:41,660 --> 00:29:45,440
because I call the anti pattern of how

00:29:43,250 --> 00:29:48,620
you should do it but they did publish it

00:29:45,440 --> 00:29:50,600
people can actually pull a patch request

00:29:48,620 --> 00:29:53,260
send it to wikimedia and they'll might

00:29:50,600 --> 00:29:55,660
even apply to their infrastructure

00:29:53,260 --> 00:29:58,730
sharing is also talking about

00:29:55,660 --> 00:30:00,590
experiences it's also fact that more and

00:29:58,730 --> 00:30:03,289
more organizations and environments and

00:30:00,590 --> 00:30:07,159
conferences are tapping into open space

00:30:03,289 --> 00:30:08,750
formats but when you're talking about

00:30:07,159 --> 00:30:11,330
development and operations working

00:30:08,750 --> 00:30:13,220
together one of the biggest problems is

00:30:11,330 --> 00:30:15,409
that the environments where the

00:30:13,220 --> 00:30:17,210
developers are working in are not the

00:30:15,409 --> 00:30:20,000
same as the environment that you are

00:30:17,210 --> 00:30:21,590
deploying your software on there's a lot

00:30:20,000 --> 00:30:23,720
of developers working on their local

00:30:21,590 --> 00:30:26,240
workstation and when they build

00:30:23,720 --> 00:30:29,990
something they ship it they say works

00:30:26,240 --> 00:30:32,630
for me works on my machine and there's

00:30:29,990 --> 00:30:35,360
lots of environments where you have

00:30:32,630 --> 00:30:37,850
developers working on Windows your test

00:30:35,360 --> 00:30:41,360
environments are some local machines and

00:30:37,850 --> 00:30:44,059
your production setup is in a data

00:30:41,360 --> 00:30:48,400
center or on the clouds in a big farm

00:30:44,059 --> 00:30:51,620
with a totally different architecture so

00:30:48,400 --> 00:30:54,020
you want to be able to share the way you

00:30:51,620 --> 00:30:56,179
build your infrastructure with your

00:30:54,020 --> 00:30:59,000
developer you want to be able to share

00:30:56,179 --> 00:31:01,760
code because developers write

00:30:59,000 --> 00:31:04,539
applications applications of config

00:31:01,760 --> 00:31:09,669
files who's the owner of the config file

00:31:04,539 --> 00:31:14,150
could be a shared ownership you have so

00:31:09,669 --> 00:31:18,620
tools are around to help us I'm a big

00:31:14,150 --> 00:31:20,770
fan of using vagrant and fragrant is an

00:31:18,620 --> 00:31:24,350
abstraction layer to virtual box and

00:31:20,770 --> 00:31:27,200
when i was first using it i was

00:31:24,350 --> 00:31:29,450
basically exam person i was doing exam

00:31:27,200 --> 00:31:33,980
all the way I have my puppet masters and

00:31:29,450 --> 00:31:36,409
my chef setups all engine and I had one

00:31:33,980 --> 00:31:37,669
dedicated configuration management so

00:31:36,409 --> 00:31:39,630
ever that was the one I worked and I

00:31:37,669 --> 00:31:41,370
constantly launched a virtual machine

00:31:39,630 --> 00:31:44,420
connecting to that configuration

00:31:41,370 --> 00:31:49,230
management server applying my manifests

00:31:44,420 --> 00:31:52,890
and it worked but I was flooding my disk

00:31:49,230 --> 00:31:55,140
i had not enough resources I always had

00:31:52,890 --> 00:31:56,580
the one server instance running and it

00:31:55,140 --> 00:31:58,890
was being cluttered with different

00:31:56,580 --> 00:32:01,950
versions and different variants of

00:31:58,890 --> 00:32:06,780
installation profiles and it really

00:32:01,950 --> 00:32:09,030
wasn't helping me virtualbox well wasn't

00:32:06,780 --> 00:32:12,600
really my favorite but the advantage is

00:32:09,030 --> 00:32:14,640
vagrant gave me the easiness of playing

00:32:12,600 --> 00:32:16,740
with a virtual machine bringing it up

00:32:14,640 --> 00:32:20,760
and down and not having to worry about

00:32:16,740 --> 00:32:23,700
all the other stuff that's really um the

00:32:20,760 --> 00:32:27,210
power so if you're working with a

00:32:23,700 --> 00:32:29,160
development team what we frequently have

00:32:27,210 --> 00:32:31,290
is a github is get repository where

00:32:29,160 --> 00:32:34,170
there is a vagrant file a bunch of

00:32:31,290 --> 00:32:37,350
puppet manifests and a bunch of sub

00:32:34,170 --> 00:32:39,780
modules that are top of modules were

00:32:37,350 --> 00:32:41,580
using and then a bunch of sub modules

00:32:39,780 --> 00:32:43,860
and gate which are the actual

00:32:41,580 --> 00:32:46,650
application code of the developers so we

00:32:43,860 --> 00:32:50,040
check out one project which has both the

00:32:46,650 --> 00:32:52,920
description of our virtual machines has

00:32:50,040 --> 00:32:54,780
both the code of the developers and it

00:32:52,920 --> 00:32:57,300
has both the code of the people building

00:32:54,780 --> 00:32:59,370
the infrastructure it's small its

00:32:57,300 --> 00:33:01,200
version able you can actually see wus

00:32:59,370 --> 00:33:05,040
changing what it's a shared code base

00:33:01,200 --> 00:33:06,680
it's something you can easily transfer

00:33:05,040 --> 00:33:08,970
and easily ship to different locations

00:33:06,680 --> 00:33:12,330
the only thing you need on top of that

00:33:08,970 --> 00:33:15,240
is a big fat fragrant box or if you

00:33:12,330 --> 00:33:17,190
don't want to you can if provided with

00:33:15,240 --> 00:33:19,110
the definition on how to build them

00:33:17,190 --> 00:33:21,630
yourself Patrick the Bois wrote a tool

00:33:19,110 --> 00:33:25,880
called V we which allows you to build a

00:33:21,630 --> 00:33:28,140
vagrant box from a config file so

00:33:25,880 --> 00:33:31,530
sharing code sharing your infrastructure

00:33:28,140 --> 00:33:33,510
becomes really easy now if you look at

00:33:31,530 --> 00:33:36,570
the vagrant file basically a vagrant

00:33:33,510 --> 00:33:38,640
file is a piece of Ruby code inside this

00:33:36,570 --> 00:33:42,500
config file you can add additional Ruby

00:33:38,640 --> 00:33:45,090
code if you want and this one example I

00:33:42,500 --> 00:33:47,860
defines me that the base box i'm using

00:33:45,090 --> 00:33:49,840
is my second synthesis instance

00:33:47,860 --> 00:33:53,260
because the first one was not really

00:33:49,840 --> 00:33:56,650
working i define IP address i define a

00:33:53,260 --> 00:33:59,700
hostname and i define where to find my

00:33:56,650 --> 00:34:02,440
puppet modules manifests and i apply

00:33:59,700 --> 00:34:04,690
cited PP and i actually have two

00:34:02,440 --> 00:34:06,760
machines inside that config file so i

00:34:04,690 --> 00:34:08,560
can create a setup where there's a

00:34:06,760 --> 00:34:10,960
database server and application server

00:34:08,560 --> 00:34:13,540
there's multiple no sequel instances and

00:34:10,960 --> 00:34:17,139
bring it up all with one single comment

00:34:13,540 --> 00:34:20,200
and it looks exactly like a developer

00:34:17,139 --> 00:34:24,639
would use in a real data center because

00:34:20,200 --> 00:34:26,139
he needs four or five machines so if you

00:34:24,639 --> 00:34:29,169
start from scratch you do in it and it

00:34:26,139 --> 00:34:31,000
generates you an empty template but as

00:34:29,169 --> 00:34:34,119
of that you just do vagrants up and what

00:34:31,000 --> 00:34:35,919
it will do is it will boots machine it

00:34:34,119 --> 00:34:37,869
will provision it knit runs all the

00:34:35,919 --> 00:34:39,550
puppet manifest or the chef cookbooks on

00:34:37,869 --> 00:34:41,649
a sea of engine or just shell scripts

00:34:39,550 --> 00:34:44,050
and you get to a point where the

00:34:41,649 --> 00:34:47,169
developer is in exactly the same setup

00:34:44,050 --> 00:34:50,290
as you would be when you would deploy it

00:34:47,169 --> 00:34:52,270
in production if you make changes if you

00:34:50,290 --> 00:34:54,550
make changes to your codebase you do to

00:34:52,270 --> 00:34:56,169
vagrant provision and if at the end of

00:34:54,550 --> 00:34:59,170
the day you want to go home you just do

00:34:56,169 --> 00:35:02,050
vagrant down or and it's going to show

00:34:59,170 --> 00:35:03,880
that a machine if you don't want to work

00:35:02,050 --> 00:35:06,340
on a project for a couple of days you

00:35:03,880 --> 00:35:08,350
just do destroy and it's going to use no

00:35:06,340 --> 00:35:10,420
disk space at all and if you're

00:35:08,350 --> 00:35:11,890
absolutely sure that you can already if

00:35:10,420 --> 00:35:13,510
your code is in a state where it's

00:35:11,890 --> 00:35:15,640
working you can do they will destroy

00:35:13,510 --> 00:35:17,770
every five minutes because your build

00:35:15,640 --> 00:35:20,650
box your infrastructure is fully

00:35:17,770 --> 00:35:23,200
reproducible you're fully capable of

00:35:20,650 --> 00:35:25,300
saying to a developer look you can

00:35:23,200 --> 00:35:30,820
destroy it if you broke it it's going to

00:35:25,300 --> 00:35:32,740
be back in two minutes and there's use

00:35:30,820 --> 00:35:34,750
cases where not only developers were

00:35:32,740 --> 00:35:37,150
using this that only operations people

00:35:34,750 --> 00:35:39,670
were using this but actual sales people

00:35:37,150 --> 00:35:42,340
just got the vagrant bugs definitions

00:35:39,670 --> 00:35:44,680
one box and they could take the full

00:35:42,340 --> 00:35:46,450
application on the road and when they

00:35:44,680 --> 00:35:47,920
were demoing to customers they just it's

00:35:46,450 --> 00:35:50,200
a grown up and there was a full

00:35:47,920 --> 00:35:51,640
application they were selling and if

00:35:50,200 --> 00:35:52,990
there was a new version of the

00:35:51,640 --> 00:35:54,430
application the only thing they had to

00:35:52,990 --> 00:35:57,970
do with git fetch and they had a new

00:35:54,430 --> 00:35:59,200
version and it worked and that's really

00:35:57,970 --> 00:36:00,940
powerful because then you're really

00:35:59,200 --> 00:36:02,230
sharing across all the partner

00:36:00,940 --> 00:36:04,480
of your organization not just

00:36:02,230 --> 00:36:06,190
development not just operations but

00:36:04,480 --> 00:36:10,359
really all departments are seeing the

00:36:06,190 --> 00:36:12,130
benefits of tools like this so what else

00:36:10,359 --> 00:36:20,500
do developers and operations people like

00:36:12,130 --> 00:36:28,060
to share hmm success yeah I was thinking

00:36:20,500 --> 00:36:31,079
about tsushima so what's the biggest

00:36:28,060 --> 00:36:31,079
tool I actually forgot

00:36:42,280 --> 00:36:55,400
yes yeah yeah I didn't specifically

00:36:52,220 --> 00:36:57,380
mention testing but you could indeed you

00:36:55,400 --> 00:37:06,010
need to do a lot of testing obviously

00:36:57,380 --> 00:37:08,810
everything and we a brain yeah I brain

00:37:06,010 --> 00:37:11,720
the biggest tool I didn't cover it's

00:37:08,810 --> 00:37:14,000
basically the human we can use all the

00:37:11,720 --> 00:37:17,960
tools we want we can build the most

00:37:14,000 --> 00:37:20,180
perfect solutions and at the end of the

00:37:17,960 --> 00:37:21,920
day it comes down to the people working

00:37:20,180 --> 00:37:23,840
together it comes down to the operations

00:37:21,920 --> 00:37:26,270
people and developing people talking to

00:37:23,840 --> 00:37:29,270
each other and solving problems and

00:37:26,270 --> 00:37:32,690
creating value for an organization it

00:37:29,270 --> 00:37:36,620
comes down to talking's not hiding in a

00:37:32,690 --> 00:37:40,190
corner but working together the brain

00:37:36,620 --> 00:37:42,350
the human being is the most important

00:37:40,190 --> 00:37:45,260
tool that's around and all the other can

00:37:42,350 --> 00:37:50,360
just help us to point out things we

00:37:45,260 --> 00:37:53,870
already know so I put up a bunch of

00:37:50,360 --> 00:37:55,970
links to all the tools i mentioned on my

00:37:53,870 --> 00:37:58,130
github repository you cannot find

00:37:55,970 --> 00:38:00,410
vagrant boxes to install a bunch of them

00:37:58,130 --> 00:38:01,730
and play with them I probably broke a

00:38:00,410 --> 00:38:07,430
couple of them so you can send in

00:38:01,730 --> 00:38:11,590
patches if they don't work and we did I

00:38:07,430 --> 00:38:15,250
guess we're almost back in schedule so

00:38:11,590 --> 00:38:15,250
there was any questions

00:38:20,880 --> 00:38:29,700
very very ill practic in practice I

00:38:26,519 --> 00:38:33,219
often phase that in a lot of

00:38:29,700 --> 00:38:37,799
organizations these parts are strictly

00:38:33,219 --> 00:38:43,469
separated so when I talk to developers I

00:38:37,799 --> 00:38:48,339
break internal rules because we are not

00:38:43,469 --> 00:38:53,319
using the hierarchy yeah and do you like

00:38:48,339 --> 00:39:03,099
where you're working do you want an real

00:38:53,319 --> 00:39:05,349
answer or you're hiring Tuesday now I

00:39:03,099 --> 00:39:09,670
try to convince our developers to

00:39:05,349 --> 00:39:12,670
develop on the target platform still

00:39:09,670 --> 00:39:16,479
they I cannot convince them they are

00:39:12,670 --> 00:39:21,249
used to work on their local PC since use

00:39:16,479 --> 00:39:24,219
and they do not want to miss notepad

00:39:21,249 --> 00:39:26,619
plus and something like that yeah with

00:39:24,219 --> 00:39:28,749
vagrant they don't need to digest I know

00:39:26,619 --> 00:39:30,130
if I the Royal files as theirs and

00:39:28,749 --> 00:39:31,660
there's other tools by the way i use

00:39:30,130 --> 00:39:33,420
vagrant as a good example because i know

00:39:31,660 --> 00:39:38,650
it but there's other tools out there and

00:39:33,420 --> 00:39:41,410
i say in in the moat now in ninety nine

00:39:38,650 --> 00:39:44,769
percent of all java projects we face

00:39:41,410 --> 00:39:47,949
problems with incompatible development

00:39:44,769 --> 00:39:50,619
platform and target platform so you

00:39:47,949 --> 00:39:52,599
experience i have after talking about

00:39:50,619 --> 00:39:54,099
this topic for a couple of years now is

00:39:52,599 --> 00:39:57,670
that we get more and more organizations

00:39:54,099 --> 00:39:59,680
that realize there's a problem obviously

00:39:57,670 --> 00:40:01,839
there's always going to be organizations

00:39:59,680 --> 00:40:04,109
that are going to hide and gonna say no

00:40:01,839 --> 00:40:07,380
there's not an issue when we get

00:40:04,109 --> 00:40:09,880
feedback we get questions from

00:40:07,380 --> 00:40:12,009
organizations that have figured out the

00:40:09,880 --> 00:40:14,049
problem is there sometimes they had to

00:40:12,009 --> 00:40:16,390
have an apollo incident sometimes they

00:40:14,049 --> 00:40:18,130
really had to crash badly before they

00:40:16,390 --> 00:40:20,499
started realizing with a problem yeah

00:40:18,130 --> 00:40:23,079
but it's not a bottom-up movement

00:40:20,499 --> 00:40:24,789
anymore it's actually c-level executives

00:40:23,079 --> 00:40:27,219
that calls in and say look are our

00:40:24,789 --> 00:40:28,359
development and operations people the

00:40:27,219 --> 00:40:29,680
work they're doing

00:40:28,359 --> 00:40:31,180
they're doing great work but they need

00:40:29,680 --> 00:40:34,989
to work together can you please come in

00:40:31,180 --> 00:40:38,049
and help us and there's once you get to

00:40:34,989 --> 00:40:39,940
that point the ball starts rolling and

00:40:38,049 --> 00:40:43,680
you'll figure out that the people like

00:40:39,940 --> 00:40:46,690
yourself they want to work together and

00:40:43,680 --> 00:40:48,279
then it's a matter of figuring out who

00:40:46,690 --> 00:40:50,079
wants to do what putting them together

00:40:48,279 --> 00:40:53,980
on the same team putting them together

00:40:50,079 --> 00:40:55,779
in the same office but indeed there

00:40:53,980 --> 00:40:58,390
there's always going to be the old

00:40:55,779 --> 00:41:00,670
school legacy environment where nothing

00:40:58,390 --> 00:41:02,710
is going to change yeah but there is a

00:41:00,670 --> 00:41:04,710
growing question there's a growing

00:41:02,710 --> 00:41:08,440
amount of people that want to change and

00:41:04,710 --> 00:41:09,670
it's not like garnet claims somewhere in

00:41:08,440 --> 00:41:12,160
the cloud environment because it's

00:41:09,670 --> 00:41:15,249
already in the enterprise I do I did a

00:41:12,160 --> 00:41:17,380
lot of work five to six years ago in

00:41:15,249 --> 00:41:19,420
enterprise environments in the Benelux

00:41:17,380 --> 00:41:23,799
where we were integrating development

00:41:19,420 --> 00:41:25,650
operations people in organizations where

00:41:23,799 --> 00:41:29,559
you really wouldn't expect it to happen

00:41:25,650 --> 00:41:31,900
so it's definitely culture is changing

00:41:29,559 --> 00:41:35,289
within those organizations and I hope

00:41:31,900 --> 00:41:37,839
for you that either you realize what you

00:41:35,289 --> 00:41:39,430
just said and find something else or the

00:41:37,839 --> 00:41:44,289
problem is that we address this problem

00:41:39,430 --> 00:41:50,079
since use to our forces when are they

00:41:44,289 --> 00:41:52,960
gonna retire yeah and they always say

00:41:50,079 --> 00:41:57,009
yes we need some change but in reality

00:41:52,960 --> 00:42:00,279
nothing happens the same the same

00:41:57,009 --> 00:42:03,279
procedure for new projects is as years

00:42:00,279 --> 00:42:05,049
ago well I know that there's

00:42:03,279 --> 00:42:07,450
organization in Belgium now that have

00:42:05,049 --> 00:42:10,059
put up budget of one and a half million

00:42:07,450 --> 00:42:12,119
euros just to refactor their complete

00:42:10,059 --> 00:42:14,230
infrastructure and to integrate

00:42:12,119 --> 00:42:18,569
development and operations they said

00:42:14,230 --> 00:42:18,569
that really huge budgets to do that

00:42:19,619 --> 00:42:23,200
there was going to be used case about

00:42:21,730 --> 00:42:26,349
that and maybe you can point your

00:42:23,200 --> 00:42:31,319
management to them that's evolution

00:42:26,349 --> 00:42:31,319
that's how stuff works more questions

00:42:31,330 --> 00:42:37,030
do you know that there are serious plans

00:42:33,880 --> 00:42:41,710
to include something like who live there

00:42:37,030 --> 00:42:45,070
to port into vagrant there's plans

00:42:41,710 --> 00:42:51,060
Patrick promised me to have a test

00:42:45,070 --> 00:42:54,430
version available by June last year

00:42:51,060 --> 00:42:56,530
great the thing is having the word

00:42:54,430 --> 00:42:59,470
support in there if you just take

00:42:56,530 --> 00:43:01,180
virtualbox it's up down local instance

00:42:59,470 --> 00:43:02,740
you don't talk over network stuff you

00:43:01,180 --> 00:43:04,090
don't talk about adding storage you

00:43:02,740 --> 00:43:06,490
don't talk about all these things and

00:43:04,090 --> 00:43:08,530
once you start adding lead words it

00:43:06,490 --> 00:43:10,390
means you need to take care about our

00:43:08,530 --> 00:43:12,670
team with virtualbox authentication

00:43:10,390 --> 00:43:15,010
non-existing it's you local road access

00:43:12,670 --> 00:43:17,590
even not real dicks s you just access it

00:43:15,010 --> 00:43:19,510
and we live for it it means adding

00:43:17,590 --> 00:43:22,450
authentication at work adding networking

00:43:19,510 --> 00:43:24,370
stuff adding all those things Patrick

00:43:22,450 --> 00:43:26,200
ran into another problem he ran to the

00:43:24,370 --> 00:43:28,540
situation where he had to deploy more

00:43:26,200 --> 00:43:31,830
than virtual machines then he had

00:43:28,540 --> 00:43:34,750
available on his physical machine and he

00:43:31,830 --> 00:43:36,550
basically it's not really for their

00:43:34,750 --> 00:43:38,800
they're working together with different

00:43:36,550 --> 00:43:42,790
set of libraries it's called McCloud as

00:43:38,800 --> 00:43:46,870
doing exactly the same as vagrant but on

00:43:42,790 --> 00:43:51,070
amazon instances so there's work with

00:43:46,870 --> 00:43:52,870
Jamie's front fog trying to do work with

00:43:51,070 --> 00:43:54,780
fog so they can actually talk to VMware

00:43:52,870 --> 00:43:58,150
and talk to the difference clouds

00:43:54,780 --> 00:44:01,390
providers so you'd have something which

00:43:58,150 --> 00:44:03,400
is vagrant but not vagrant but giving

00:44:01,390 --> 00:44:06,430
you the same features but on remote

00:44:03,400 --> 00:44:08,170
machines and I'm not sure with the state

00:44:06,430 --> 00:44:10,810
of support for the Varden focus

00:44:08,170 --> 00:44:13,660
currently but it's an ongoing process

00:44:10,810 --> 00:44:16,240
there's people working on it but the lid

00:44:13,660 --> 00:44:18,000
work supports for vagrants is it's it's

00:44:16,240 --> 00:44:20,530
hiding somewhere in a branch I know

00:44:18,000 --> 00:44:24,220
there's some code that's supposed to be

00:44:20,530 --> 00:44:27,460
work but i think that Rick wants fig

00:44:24,220 --> 00:44:29,140
back for that so can I can look up where

00:44:27,460 --> 00:44:32,910
where the branch is hiding and pointed

00:44:29,140 --> 00:44:32,910
with but it's definitely not functional

00:44:34,230 --> 00:44:37,800
some more questions

00:44:39,370 --> 00:44:44,530

YouTube URL: https://www.youtube.com/watch?v=8MUXPKyQDm4


