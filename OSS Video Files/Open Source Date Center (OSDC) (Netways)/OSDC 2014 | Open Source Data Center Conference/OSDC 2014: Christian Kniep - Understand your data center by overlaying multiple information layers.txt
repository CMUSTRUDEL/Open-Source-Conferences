Title: OSDC 2014: Christian Kniep - Understand your data center by overlaying multiple information layers
Publication date: 2015-01-05
Playlist: OSDC 2014 | Open Source Data Center Conference
Description: 
	Today's data center managers are burdened by a lack of aligned information of multiple layers. Work-flow events like 'job starts' aligned with performance metrics and events extracted from log facilities are low-hanging fruit that is on the edge to become use-able due to open-source software like Graphite, StatsD, logstash and alike.
This talk aims to show off the benefits of merging multiple layers of information within an InfiniBand cluster by using use-cases for level 1/2/3 personnel. 

Find the full program and all slides here: 
http://www.netways.de/osdc/osdc2014/programm
Captions: 
	00:00:13,560 --> 00:00:20,910
in our last talk for today overlay data

00:00:17,550 --> 00:00:25,550
center information by just yank my nib

00:00:20,910 --> 00:00:29,130
soy no problem yeah hello and welcome

00:00:25,550 --> 00:00:32,009
I'm pleased to to talk on this this

00:00:29,130 --> 00:00:35,340
conference and i'm concluding kind of

00:00:32,009 --> 00:00:37,380
this session or this this track and i

00:00:35,340 --> 00:00:39,030
had very nice discussions and very

00:00:37,380 --> 00:00:42,210
interesting talks that I intended and

00:00:39,030 --> 00:00:46,890
during the breaks that was quite nice so

00:00:42,210 --> 00:00:52,110
thanks Ned ways for this opportunity and

00:00:46,890 --> 00:00:55,380
yeah maybe we give him a loss so me i

00:00:52,110 --> 00:00:57,450
spawned roughly 30 years ago and i

00:00:55,380 --> 00:01:00,300
started ten years ago as a normal

00:00:57,450 --> 00:01:03,030
sysadmin so normal in case of a little

00:01:00,300 --> 00:01:07,310
University where I do did the user help

00:01:03,030 --> 00:01:10,140
desk and little little things and

00:01:07,310 --> 00:01:14,430
fortunately they the university was

00:01:10,140 --> 00:01:16,609
using mac and unix or linux so i get

00:01:14,430 --> 00:01:20,909
infected and I got rid of my windows

00:01:16,609 --> 00:01:24,060
history and after the friendship I

00:01:20,909 --> 00:01:26,999
started working on behalf of Audi not

00:01:24,060 --> 00:01:31,590
for audi so I worked on behalf of audion

00:01:26,999 --> 00:01:36,030
did rd administration and support so it

00:01:31,590 --> 00:01:39,060
was so yeah no matter what after two

00:01:36,030 --> 00:01:42,149
years of this environment i decided to

00:01:39,060 --> 00:01:44,670
to get my bachelor degree because first

00:01:42,149 --> 00:01:48,990
I did bash scripting and then I decided

00:01:44,670 --> 00:01:51,359
ok bash scripting is maybe not scaling

00:01:48,990 --> 00:01:54,869
to the extent that I used that I needed

00:01:51,359 --> 00:01:57,990
to have so I did my bachelor degree and

00:01:54,869 --> 00:02:02,759
then tubing and worked for on behalf of

00:01:57,990 --> 00:02:06,689
Daimler so i'm bundled to the automotive

00:02:02,759 --> 00:02:09,090
world i guess so during this period i

00:02:06,689 --> 00:02:12,120
maybe i merged somehow into their folks

00:02:09,090 --> 00:02:15,090
because I I into the the problem

00:02:12,120 --> 00:02:18,240
scripted my way around and try to be

00:02:15,090 --> 00:02:21,629
open and share and learn the death of

00:02:18,240 --> 00:02:25,590
tools let's say and since one year I

00:02:21,629 --> 00:02:26,730
start working at pool so booth as we say

00:02:25,590 --> 00:02:29,489
in France it

00:02:26,730 --> 00:02:32,640
is the mother company of science and

00:02:29,489 --> 00:02:36,450
computing and I start as an RD engineer

00:02:32,640 --> 00:02:39,629
last year in January and work now as an

00:02:36,450 --> 00:02:42,690
OP staff if this word is existing so I'm

00:02:39,629 --> 00:02:46,590
coming from the ops world and now I'm

00:02:42,690 --> 00:02:51,060
working for or creating supercomputer

00:02:46,590 --> 00:02:53,310
cluster management so large machines or

00:02:51,060 --> 00:02:57,540
large cluster machines and it's quite

00:02:53,310 --> 00:02:59,069
fun actually so the agenda today I would

00:02:57,540 --> 00:03:02,910
like to talk a little bit about the

00:02:59,069 --> 00:03:05,459
cluster stack and in particular or the

00:03:02,910 --> 00:03:08,250
the motivation of the talk comes from my

00:03:05,459 --> 00:03:12,450
history and InfiniBand so i did a time

00:03:08,250 --> 00:03:14,910
where I I administrated with others 3000

00:03:12,450 --> 00:03:17,760
node cluster that two crash tests all

00:03:14,910 --> 00:03:20,819
day and we had infiniband and I was in

00:03:17,760 --> 00:03:24,209
charge of that so I had some paint and I

00:03:20,819 --> 00:03:27,989
will explain what pain I had as a

00:03:24,209 --> 00:03:31,260
response i created InfiniBand monitoring

00:03:27,989 --> 00:03:34,049
framework leverage leveraging

00:03:31,260 --> 00:03:38,730
open-source oh and and this I will

00:03:34,049 --> 00:03:40,620
explain as well and at the end I would

00:03:38,730 --> 00:03:44,190
like to talk about a virtual cluster

00:03:40,620 --> 00:03:46,410
that I start developing on as a

00:03:44,190 --> 00:03:51,690
preparation of this talk and it kind of

00:03:46,410 --> 00:03:55,079
goes wild so this I would like to to

00:03:51,690 --> 00:03:59,340
include as well and in which bandwidth

00:03:55,079 --> 00:04:00,720
or in which portions that is also

00:03:59,340 --> 00:04:04,739
depending on you so if you have any

00:04:00,720 --> 00:04:08,489
questions then don't be afraid and query

00:04:04,739 --> 00:04:12,959
me or yell at me or just ask a question

00:04:08,489 --> 00:04:14,970
that's also possible and as well I'm as

00:04:12,959 --> 00:04:16,709
I said I'm a little bit limited let's

00:04:14,970 --> 00:04:19,349
say unlimited but I I have this

00:04:16,709 --> 00:04:23,010
automative automotive world view and

00:04:19,349 --> 00:04:25,789
this hpc view and as I realized the

00:04:23,010 --> 00:04:30,389
other day there are others now there

00:04:25,789 --> 00:04:32,610
they are vet at locations and so if you

00:04:30,389 --> 00:04:34,830
think that this doesn't apply to your

00:04:32,610 --> 00:04:37,020
world or you say that that exactly

00:04:34,830 --> 00:04:40,200
applies to your world then don't

00:04:37,020 --> 00:04:42,570
hesitate to throw this in and start

00:04:40,200 --> 00:04:47,010
quick chat about this because I'm very

00:04:42,570 --> 00:04:49,350
interested in other opinions so who

00:04:47,010 --> 00:04:52,800
shall we start class the stack that's my

00:04:49,350 --> 00:04:54,930
working environment so my girlfriend

00:04:52,800 --> 00:04:57,690
said you should first discuss what a

00:04:54,930 --> 00:05:00,720
cluster is because not everyone has the

00:04:57,690 --> 00:05:02,940
same cluster for instance what we heard

00:05:00,720 --> 00:05:04,680
about or what we want we might her or

00:05:02,940 --> 00:05:08,940
you might heard about it elasticsearch

00:05:04,680 --> 00:05:11,640
and the elastic search cluster is kind

00:05:08,940 --> 00:05:15,180
of you have one node and you talk to one

00:05:11,640 --> 00:05:18,330
node if another node is joining then you

00:05:15,180 --> 00:05:20,820
do not talk to two nodes you for you is

00:05:18,330 --> 00:05:23,070
transparent so it's afterwards it's a

00:05:20,820 --> 00:05:26,550
it's one big elasticsearch cluster for

00:05:23,070 --> 00:05:29,400
you so the application or the end user

00:05:26,550 --> 00:05:32,550
do not care how many nodes he has it's

00:05:29,400 --> 00:05:37,350
just a shouting or a high-availability

00:05:32,550 --> 00:05:39,930
feature that the cluster is for for me

00:05:37,350 --> 00:05:44,070
and h cluster is an HP see cluster so

00:05:39,930 --> 00:05:47,760
you have a big or a lot of cabinets in a

00:05:44,070 --> 00:05:49,500
data center and a lot of nodes currently

00:05:47,760 --> 00:05:52,500
let's say five five thousand notes in

00:05:49,500 --> 00:05:56,670
the current data center next to my

00:05:52,500 --> 00:06:00,330
workplace and this cluster is working on

00:05:56,670 --> 00:06:02,040
one big problem and it's doing HPC so

00:06:00,330 --> 00:06:06,240
HPC do needs high performance computing

00:06:02,040 --> 00:06:07,860
and the a good chance in a nutshell one

00:06:06,240 --> 00:06:10,950
could say it's surfing the bottleneck so

00:06:07,860 --> 00:06:14,780
you try to saturate all resources you

00:06:10,950 --> 00:06:18,960
have in your cluster and you try to

00:06:14,780 --> 00:06:20,910
saturate it as as good as you could if

00:06:18,960 --> 00:06:22,680
you do it quite well then you would

00:06:20,910 --> 00:06:25,110
saturate the memory bandwidth because

00:06:22,680 --> 00:06:27,240
this is the fastest bottleneck you you

00:06:25,110 --> 00:06:31,170
might have but maybe you were limited by

00:06:27,240 --> 00:06:34,170
cpu limited by I oh but are you limited

00:06:31,170 --> 00:06:36,420
by a bandwidth of your interconnect so

00:06:34,170 --> 00:06:38,700
what you try to saturate your resources

00:06:36,420 --> 00:06:40,290
as much as you can and the weakest link

00:06:38,700 --> 00:06:43,620
breaks your performance so if you have

00:06:40,290 --> 00:06:45,960
an cluster job that's running on two

00:06:43,620 --> 00:06:48,860
thousand nodes and one note is not

00:06:45,960 --> 00:06:51,030
working well or it's misbehaving then

00:06:48,860 --> 00:06:53,880
normally your application will suffer a

00:06:51,030 --> 00:06:56,520
lot and it will be not

00:06:53,880 --> 00:07:00,180
forming any more and this is due to the

00:06:56,520 --> 00:07:04,170
usual workloads you might have so the

00:07:00,180 --> 00:07:07,460
workloads are iterative computation so

00:07:04,170 --> 00:07:10,590
for instance this computation does some

00:07:07,460 --> 00:07:14,820
computational fluid dynamics so you have

00:07:10,590 --> 00:07:16,710
a mesh if it's Reedy or 2d and you have

00:07:14,820 --> 00:07:19,560
time steps and every time step is

00:07:16,710 --> 00:07:22,290
computed by a portion of of the nodes

00:07:19,560 --> 00:07:24,120
and after each time step they they wait

00:07:22,290 --> 00:07:26,340
for the others they sink and then they

00:07:24,120 --> 00:07:28,620
will read they will return over they

00:07:26,340 --> 00:07:30,390
will use the next iteration so every

00:07:28,620 --> 00:07:32,210
iteration they think wait for the others

00:07:30,390 --> 00:07:37,140
zinc wait for the others and so on and

00:07:32,210 --> 00:07:38,940
if some node is slow then ninety-nine

00:07:37,140 --> 00:07:41,040
percent of your cluster is waiting for

00:07:38,940 --> 00:07:44,850
the one node to finish its work so if

00:07:41,040 --> 00:07:48,000
one note is not responding then you're

00:07:44,850 --> 00:07:50,520
screwed and the job could be restarted

00:07:48,000 --> 00:07:54,510
and this applications might run for days

00:07:50,520 --> 00:07:56,880
for weeks on a lot of nodes and this is

00:07:54,510 --> 00:08:01,190
kind of expensive as well that's why we

00:07:56,880 --> 00:08:04,290
try to source this so cluster layers I

00:08:01,190 --> 00:08:06,990
said rough estimate because I think that

00:08:04,290 --> 00:08:08,580
everyone has maybe different opinion

00:08:06,990 --> 00:08:12,780
about class the layers and it's what I

00:08:08,580 --> 00:08:15,930
put together and it's not something that

00:08:12,780 --> 00:08:18,870
you will look up into in a book and it's

00:08:15,930 --> 00:08:20,820
exactly what I say here so there might

00:08:18,870 --> 00:08:23,820
be some some differences but a rough

00:08:20,820 --> 00:08:26,910
estimate about layers and each layer

00:08:23,820 --> 00:08:29,700
will present us events like lock events

00:08:26,910 --> 00:08:32,940
or user events or other events and

00:08:29,700 --> 00:08:34,860
metrics that you can catch from any

00:08:32,940 --> 00:08:37,620
event as well so maybe in web server

00:08:34,860 --> 00:08:40,080
will tell you the response time and this

00:08:37,620 --> 00:08:42,380
could be a metric for you so on the

00:08:40,080 --> 00:08:45,090
bottom we have the hardware the hardware

00:08:42,380 --> 00:08:48,380
gives you temperatures gives you fence

00:08:45,090 --> 00:08:51,870
fan speeds it will give you the hardware

00:08:48,380 --> 00:08:53,640
counters of components you have you can

00:08:51,870 --> 00:08:57,860
touch so like in Philip encounters you

00:08:53,640 --> 00:09:00,810
can query them directly on top of that

00:08:57,860 --> 00:09:02,700
you somehow have the operating system

00:09:00,810 --> 00:09:06,089
with a kernel performance counters

00:09:02,700 --> 00:09:07,990
Colonel Locke events and userland tools

00:09:06,089 --> 00:09:10,890
you can throw it you're up

00:09:07,990 --> 00:09:14,830
writing system and get events from that

00:09:10,890 --> 00:09:16,540
then I placed middleware like MPI which

00:09:14,830 --> 00:09:19,510
is a messin passing a message passing

00:09:16,540 --> 00:09:21,930
interface so it's a it's a it's a

00:09:19,510 --> 00:09:24,430
language or it's a it's a way to

00:09:21,930 --> 00:09:28,839
communicate between processes if they

00:09:24,430 --> 00:09:30,279
are spread on a big cluster or libraries

00:09:28,839 --> 00:09:33,040
that are from independent software

00:09:30,279 --> 00:09:37,480
vendors so you have not much control of

00:09:33,040 --> 00:09:39,040
that then you sure have some services

00:09:37,480 --> 00:09:41,860
that you rely on your cluster have

00:09:39,040 --> 00:09:45,850
storage it has a home storage it has

00:09:41,860 --> 00:09:49,899
might has a fast storage that worked as

00:09:45,850 --> 00:09:52,540
a force for scratch so your job will

00:09:49,899 --> 00:09:54,130
want to write an intermediate data point

00:09:52,540 --> 00:09:55,600
and it doesn't want to write it in the

00:09:54,130 --> 00:09:58,779
home directory course it's slow so he

00:09:55,600 --> 00:10:01,959
uses some fast scratch storage for that

00:09:58,779 --> 00:10:05,320
and you have a job scheduler that will

00:10:01,959 --> 00:10:08,980
dispatch the job that you requested the

00:10:05,320 --> 00:10:11,740
cluster to run so you might say I want

00:10:08,980 --> 00:10:13,990
to run this script or this program on

00:10:11,740 --> 00:10:16,060
200 notes and then you will tell him ok

00:10:13,990 --> 00:10:20,529
this grip 200 notes go and then you do

00:10:16,060 --> 00:10:22,149
not you do not interact much because

00:10:20,529 --> 00:10:23,980
then the job scream you will do is work

00:10:22,149 --> 00:10:27,160
and schedule the drop so that's what's

00:10:23,980 --> 00:10:31,240
the name stands for right and oh and you

00:10:27,160 --> 00:10:33,029
have also no sorry here we go and you

00:10:31,240 --> 00:10:37,420
have also services that are simple but

00:10:33,029 --> 00:10:40,270
necessary like sshd or others without

00:10:37,420 --> 00:10:43,510
sshd you cannot initiate the job on the

00:10:40,270 --> 00:10:46,450
host because the communication is maybe

00:10:43,510 --> 00:10:48,640
reliant the communication relies on such

00:10:46,450 --> 00:10:50,890
services so the service you should not

00:10:48,640 --> 00:10:55,120
forget to start our to monitor or to

00:10:50,890 --> 00:10:56,920
event it to log events on this and then

00:10:55,120 --> 00:11:00,220
you have finally the end user

00:10:56,920 --> 00:11:01,959
application that is the application that

00:11:00,220 --> 00:11:05,500
does this computation i showed you

00:11:01,959 --> 00:11:09,670
before or other computations for sure

00:11:05,500 --> 00:11:12,779
here and with this five layers roughly

00:11:09,670 --> 00:11:16,000
speaking you you could have different

00:11:12,779 --> 00:11:18,100
angles on them so there might be the end

00:11:16,000 --> 00:11:20,110
user who's only looking at his

00:11:18,100 --> 00:11:21,220
application and he wants to know when it

00:11:20,110 --> 00:11:24,579
fails he wants

00:11:21,220 --> 00:11:28,240
no rough metrics about how long it's

00:11:24,579 --> 00:11:30,759
running and he wants to compare maybe

00:11:28,240 --> 00:11:33,189
the the run to Dave and the run

00:11:30,759 --> 00:11:35,560
yesterday and he wants to know okay if

00:11:33,189 --> 00:11:37,240
it's if it's fine if it's five percent

00:11:35,560 --> 00:11:40,930
slower than I don't care if it's five

00:11:37,240 --> 00:11:43,720
wasn't faster than I'm happy but he does

00:11:40,930 --> 00:11:46,060
not dig deep into all layers and that

00:11:43,720 --> 00:11:49,089
was true for for customers that I

00:11:46,060 --> 00:11:51,699
support so the customer says it should

00:11:49,089 --> 00:11:54,129
not look too much into all the problems

00:11:51,699 --> 00:11:55,870
that might occur you just run the job

00:11:54,129 --> 00:11:58,089
the test job that I provide you and I

00:11:55,870 --> 00:12:01,089
give you a time frame that it should run

00:11:58,089 --> 00:12:03,850
and if it's that's a time ray a time

00:12:01,089 --> 00:12:07,029
frame and the check of the result

00:12:03,850 --> 00:12:08,829
afterwards is the same then stop yeah I

00:12:07,029 --> 00:12:12,699
pay I do not pay you for looking for

00:12:08,829 --> 00:12:16,329
trouble I pay you for doing the job or

00:12:12,699 --> 00:12:19,959
keeping the job to be done so it's very

00:12:16,329 --> 00:12:22,509
limited you in some cases then you might

00:12:19,959 --> 00:12:24,970
have power users among the end-user so

00:12:22,509 --> 00:12:27,850
this is maybe the guy that's working on

00:12:24,970 --> 00:12:29,589
this on the in this department for 20

00:12:27,850 --> 00:12:33,160
years and he saw the first version of

00:12:29,589 --> 00:12:35,860
your application and he's he's very deep

00:12:33,160 --> 00:12:38,949
into most of the layers maybe it's not

00:12:35,860 --> 00:12:40,569
down to the very button but maybe a

00:12:38,949 --> 00:12:43,420
little bit father but he will have a

00:12:40,569 --> 00:12:47,379
view and this depends on the specific

00:12:43,420 --> 00:12:49,660
user I guess how deep you will go so he

00:12:47,379 --> 00:12:52,720
looks further down into the layers and

00:12:49,660 --> 00:12:55,059
he knows okay the storage seems to be a

00:12:52,720 --> 00:12:56,829
little bit Lykke and my gut says it's a

00:12:55,059 --> 00:12:59,920
middleware um maybe you tweak the

00:12:56,829 --> 00:13:02,040
colonel and I think that's not good so

00:12:59,920 --> 00:13:05,740
he will have gut feelings that you

00:13:02,040 --> 00:13:10,209
should take into account as well and the

00:13:05,740 --> 00:13:12,670
isv it's also one power user so he

00:13:10,209 --> 00:13:16,389
invented the the tool so he might be a

00:13:12,670 --> 00:13:19,029
power user and there are a lot of sites

00:13:16,389 --> 00:13:22,120
where you have a dedicated developer or

00:13:19,029 --> 00:13:26,559
developed dedicated support guy sitting

00:13:22,120 --> 00:13:28,420
on site paid by by the isv and he is a

00:13:26,559 --> 00:13:31,589
power user if there is no other power

00:13:28,420 --> 00:13:34,400
user so if you views on this side and

00:13:31,589 --> 00:13:36,200
then you have another layer

00:13:34,400 --> 00:13:38,780
that is excellent layer that I might

00:13:36,200 --> 00:13:42,290
call it it's a management that doesn't

00:13:38,780 --> 00:13:44,440
care about much but KPI so key

00:13:42,290 --> 00:13:47,030
performance indicators how much work

00:13:44,440 --> 00:13:49,700
gets done currently and how much work

00:13:47,030 --> 00:13:52,280
should get done and are the server level

00:13:49,700 --> 00:13:54,710
service level agreements are are matched

00:13:52,280 --> 00:13:57,650
by the guys that are doing the support

00:13:54,710 --> 00:13:59,870
so this layer is not really a real

00:13:57,650 --> 00:14:02,410
cluster layer but this is a real

00:13:59,870 --> 00:14:05,000
important layer because he's paying your

00:14:02,410 --> 00:14:07,610
yard where he's paying for the service

00:14:05,000 --> 00:14:10,670
and you should satisfy him in terms of

00:14:07,610 --> 00:14:15,200
this indicators and his view so you

00:14:10,670 --> 00:14:18,710
should be able to take his Walker some

00:14:15,200 --> 00:14:23,240
some meters and his shoes and try to be

00:14:18,710 --> 00:14:25,100
in line with this his values and then we

00:14:23,240 --> 00:14:28,010
have the other way around so the sis Ops

00:14:25,100 --> 00:14:30,860
guys or the support guys the Service

00:14:28,010 --> 00:14:33,950
guys they are looking from the from the

00:14:30,860 --> 00:14:36,650
bottom up the stack and depending on

00:14:33,950 --> 00:14:39,950
what kind of service you have what kind

00:14:36,650 --> 00:14:42,920
of level you are in when you start maybe

00:14:39,950 --> 00:14:44,900
it's a youngster you use service level

00:14:42,920 --> 00:14:46,970
one that means that you are in touch

00:14:44,900 --> 00:14:48,920
with the end user he will call you

00:14:46,970 --> 00:14:51,560
nothing works and then you have to say

00:14:48,920 --> 00:14:53,300
okay I do not want to go deep into every

00:14:51,560 --> 00:14:55,580
layer I just want to have a rough

00:14:53,300 --> 00:14:56,900
overview maybe you have a chinga running

00:14:55,580 --> 00:15:00,950
and then you can see okay everything is

00:14:56,900 --> 00:15:02,570
green there seems to be another problem

00:15:00,950 --> 00:15:05,720
that we are not covering but he won't

00:15:02,570 --> 00:15:09,110
dig deep into every and every layer he

00:15:05,720 --> 00:15:13,250
just tried to fix the problem that is at

00:15:09,110 --> 00:15:15,980
hand and they're mostly barrier said

00:15:13,250 --> 00:15:17,990
that they should six ninety percent of

00:15:15,980 --> 00:15:20,390
the problems that are coming in in the

00:15:17,990 --> 00:15:22,580
first five minutes like someone wants to

00:15:20,390 --> 00:15:24,080
have a user account and he can create

00:15:22,580 --> 00:15:26,630
the user account someone wants to know

00:15:24,080 --> 00:15:30,860
is everything okay then okay then he

00:15:26,630 --> 00:15:32,690
will open a ticket user ask everything

00:15:30,860 --> 00:15:37,310
is ok I said yes close the ticket

00:15:32,690 --> 00:15:40,820
directly so this as I said he won't dig

00:15:37,310 --> 00:15:43,910
too much in the layer and then we have

00:15:40,820 --> 00:15:47,340
level to personnel so where I place and

00:15:43,910 --> 00:15:50,370
how long I i took the this arrows is

00:15:47,340 --> 00:15:52,490
no much need to to pin it directly

00:15:50,370 --> 00:15:54,840
because the depending on every

00:15:52,490 --> 00:15:57,060
expectations on every experience of the

00:15:54,840 --> 00:15:59,190
of the administrator he will place

00:15:57,060 --> 00:16:02,460
himself there so leather too might be

00:15:59,190 --> 00:16:06,090
only the guys that are on the top of the

00:16:02,460 --> 00:16:09,360
layers and layers ream ABR deep into all

00:16:06,090 --> 00:16:11,340
layers or you have a department that is

00:16:09,360 --> 00:16:14,540
only responsible for one layer so you

00:16:11,340 --> 00:16:20,160
have all kinds of permutations of this

00:16:14,540 --> 00:16:22,170
layers in general and then you have the

00:16:20,160 --> 00:16:25,350
sits of management which are also

00:16:22,170 --> 00:16:28,050
includes the extra layer on top and you

00:16:25,350 --> 00:16:32,820
also have the isv management which also

00:16:28,050 --> 00:16:36,780
try to satisfy the Excel layer so there

00:16:32,820 --> 00:16:40,370
are a lot of layers here I guess a lot

00:16:36,780 --> 00:16:43,670
of angles to look at this layers and

00:16:40,370 --> 00:16:46,680
would you say that it applies to your

00:16:43,670 --> 00:16:48,690
environment as well or do you have less

00:16:46,680 --> 00:16:51,090
layers or do you have more layers or did

00:16:48,690 --> 00:16:52,710
I miss some layer or do you think the

00:16:51,090 --> 00:16:57,050
placement of the layers is totally

00:16:52,710 --> 00:16:59,520
ridiculous or some comments on that

00:16:57,050 --> 00:17:06,209
because as I said I would like to have

00:16:59,520 --> 00:17:08,070
some opinion know if it isn't the

00:17:06,209 --> 00:17:14,550
customer the end user or for me I think

00:17:08,070 --> 00:17:16,890
the customer is the management guy right

00:17:14,550 --> 00:17:24,900
if they complain too much to the

00:17:16,890 --> 00:17:27,990
management then yeah 90% of yeah true

00:17:24,900 --> 00:17:30,600
and what we what's not included here and

00:17:27,990 --> 00:17:33,210
I'm not sure where to put it a customer

00:17:30,600 --> 00:17:36,510
of a web service or if you have a

00:17:33,210 --> 00:17:39,060
website running then it's not really an

00:17:36,510 --> 00:17:40,950
end user the end user might be the

00:17:39,060 --> 00:17:42,780
developer of the applications that you

00:17:40,950 --> 00:17:44,730
are serving so maybe there's one

00:17:42,780 --> 00:17:46,560
additional layer somewhere or maybe it's

00:17:44,730 --> 00:17:51,060
not a layer it's completely somewhere

00:17:46,560 --> 00:17:52,700
else and like the user of the of the

00:17:51,060 --> 00:17:55,740
service that is provided by the end user

00:17:52,700 --> 00:17:58,080
so yeah so it's a very shaky thing and I

00:17:55,740 --> 00:18:00,840
think nailing it down it it's ridiculous

00:17:58,080 --> 00:18:06,460
because it's floating a little bit

00:18:00,840 --> 00:18:10,420
okay and layers we have layers in every

00:18:06,460 --> 00:18:12,850
layer and so this light is from renton

00:18:10,420 --> 00:18:15,040
gak who is a perfect system linux

00:18:12,850 --> 00:18:18,190
performance guy or not linux and unix

00:18:15,040 --> 00:18:20,500
performance guy and as you see the

00:18:18,190 --> 00:18:24,130
operating system but this layers are

00:18:20,500 --> 00:18:25,990
interconnected so you there are you you

00:18:24,130 --> 00:18:28,090
have layers and layers and they are

00:18:25,990 --> 00:18:31,570
connected in between so the question is

00:18:28,090 --> 00:18:34,570
how deep to go and it depends on as well

00:18:31,570 --> 00:18:38,490
as experience of the soups or the devops

00:18:34,570 --> 00:18:42,850
or the guy that is digging into the lair

00:18:38,490 --> 00:18:46,660
yeah okay and we have multiple data

00:18:42,850 --> 00:18:48,250
sources as we saw but we have sometimes

00:18:46,660 --> 00:18:51,940
we have little data sometimes we have

00:18:48,250 --> 00:18:55,300
much data but it's mostly garbage so we

00:18:51,940 --> 00:18:59,440
have multiple data sources and not no

00:18:55,300 --> 00:19:03,700
way maybe it's too harsh not often an

00:18:59,440 --> 00:19:05,950
obvious way to connect them and excuse

00:19:03,700 --> 00:19:09,640
me you're connecting is mostly manual

00:19:05,950 --> 00:19:12,700
labor so when I started and I had a

00:19:09,640 --> 00:19:14,920
problem then I noted on my notepad which

00:19:12,700 --> 00:19:18,840
was maybe pen and paper but maybe it was

00:19:14,920 --> 00:19:21,540
an editor I noted to pm seven minutes

00:19:18,840 --> 00:19:24,309
problem one and it was from layer

00:19:21,540 --> 00:19:25,840
operating system and then I got to the

00:19:24,309 --> 00:19:28,360
other layer and say okay what happened

00:19:25,840 --> 00:19:31,780
in this layer to this time and then in

00:19:28,360 --> 00:19:33,280
the other layer and when the the page

00:19:31,780 --> 00:19:36,100
was full and I throw it away and start

00:19:33,280 --> 00:19:39,250
again or maybe I I detected an anomaly

00:19:36,100 --> 00:19:44,260
that I thought were connecting and

00:19:39,250 --> 00:19:47,440
digging and this was quite hard let's

00:19:44,260 --> 00:19:49,179
say and it's experience driven so when

00:19:47,440 --> 00:19:51,760
you're a youngster you an administrator

00:19:49,179 --> 00:19:53,800
and you do not know much of every layer

00:19:51,760 --> 00:19:55,270
then you fiddle around and you try to

00:19:53,800 --> 00:19:58,059
figure out what's the problem and if you

00:19:55,270 --> 00:20:00,280
are lucky you find it but then it's very

00:19:58,059 --> 00:20:01,870
frustrating to see the guy that's

00:20:00,280 --> 00:20:04,240
working ten years and he said yeah you

00:20:01,870 --> 00:20:09,220
know we are now in version 2 but in

00:20:04,240 --> 00:20:11,620
version 0 0 1 I had the same issue and I

00:20:09,220 --> 00:20:13,690
think they just failed and they

00:20:11,620 --> 00:20:14,320
introduced the buck again so this might

00:20:13,690 --> 00:20:16,450
be this and

00:20:14,320 --> 00:20:18,399
you should dig into this and maybe he's

00:20:16,450 --> 00:20:22,090
not dead verbose you said yeah this is

00:20:18,399 --> 00:20:25,029
clear you know it's obvious and then you

00:20:22,090 --> 00:20:30,490
say okay how did he know that and it's

00:20:25,029 --> 00:20:34,630
kind of sad and I said niche solutions

00:20:30,490 --> 00:20:37,600
are misleading what I saw is that some

00:20:34,630 --> 00:20:40,480
vendors or some hardware vendors and

00:20:37,600 --> 00:20:42,370
they they got said that everyone is

00:20:40,480 --> 00:20:44,860
complaining and they decided okay you

00:20:42,370 --> 00:20:46,779
know i will provide something for my

00:20:44,860 --> 00:20:48,940
lair and for the segment of the layer

00:20:46,779 --> 00:20:52,269
you you are looking into and then i say

00:20:48,940 --> 00:20:54,460
they are great but you know it's still

00:20:52,269 --> 00:20:57,070
it's not fiddling in locks for this

00:20:54,460 --> 00:20:59,590
specific layer it's looking into your

00:20:57,070 --> 00:21:04,240
tool and then i note on my notepad and

00:20:59,590 --> 00:21:06,639
then we continuing the thing so they

00:21:04,240 --> 00:21:09,250
think they do get they did good we're

00:21:06,639 --> 00:21:11,320
good to provide such a tool but without

00:21:09,250 --> 00:21:16,269
connecting connectiveness and openness

00:21:11,320 --> 00:21:18,820
and and api's to drive this not much to

00:21:16,269 --> 00:21:20,649
do so I nagios the singer and stuff they

00:21:18,820 --> 00:21:26,559
are good tools to to get an overview

00:21:20,649 --> 00:21:29,500
with digging deep into it hard ok so the

00:21:26,559 --> 00:21:32,559
motivation of this is as I said I i was

00:21:29,500 --> 00:21:35,679
doing InfiniBand two years or no four

00:21:32,559 --> 00:21:37,720
years ago 2010 I think I started and we

00:21:35,679 --> 00:21:40,320
had a big cluster it was a flat one but

00:21:37,720 --> 00:21:44,470
we had a lot of notes and it was a very

00:21:40,320 --> 00:21:47,830
unconvincing busy cluster but anyway we

00:21:44,470 --> 00:21:50,259
had such switches so this is one big box

00:21:47,830 --> 00:21:52,960
and it looked like one switch but in

00:21:50,259 --> 00:21:55,750
fact you see here that there are boards

00:21:52,960 --> 00:22:00,549
attached so in fact it's a chassis with

00:21:55,750 --> 00:22:02,889
a network in a box so you have here you

00:22:00,549 --> 00:22:05,769
have eight ports and this eight ports

00:22:02,889 --> 00:22:08,620
are connected two switches that have for

00:22:05,769 --> 00:22:11,559
porters it has four pots and they are in

00:22:08,620 --> 00:22:15,850
a three in itself so it composes is

00:22:11,559 --> 00:22:17,799
composed of a network and for the

00:22:15,850 --> 00:22:19,480
obvious of photo for the user that is

00:22:17,799 --> 00:22:23,080
only a for the admin that is only used

00:22:19,480 --> 00:22:27,700
to ethernet he thinks okay that's a box

00:22:23,080 --> 00:22:27,970
and thought one is a part of a of a

00:22:27,700 --> 00:22:30,460
switch

00:22:27,970 --> 00:22:34,030
so what's the problem but inside of this

00:22:30,460 --> 00:22:36,880
you have routes taken by packages that

00:22:34,030 --> 00:22:38,860
might introduce the first fabric board

00:22:36,880 --> 00:22:41,350
from the green to the other green they

00:22:38,860 --> 00:22:44,860
are may be served by the second fabric

00:22:41,350 --> 00:22:46,780
board or there might be one fabric board

00:22:44,860 --> 00:22:48,190
for one direction and one fabric board

00:22:46,780 --> 00:22:50,560
for the other direction and this is

00:22:48,190 --> 00:22:54,610
transparent to you so if your job fails

00:22:50,560 --> 00:22:58,180
or your copy fails you do not know how

00:22:54,610 --> 00:23:01,020
the the route was and this is only two

00:22:58,180 --> 00:23:04,450
fabric pots and for line board so it's

00:23:01,020 --> 00:23:08,220
not real a real use case but the debug

00:23:04,450 --> 00:23:10,660
nightmare was for me we had a 96 port

00:23:08,220 --> 00:23:13,540
chassis that has eight line words and

00:23:10,660 --> 00:23:16,840
for fabric pots and three links in

00:23:13,540 --> 00:23:19,740
between every line and fabric body so

00:23:16,840 --> 00:23:22,240
and there was a job running that

00:23:19,740 --> 00:23:25,240
multiple jobs running that seemed to

00:23:22,240 --> 00:23:30,340
fail in because there was a bad link in

00:23:25,240 --> 00:23:34,780
between the chassis and we had ssl 60 a

00:23:30,340 --> 00:23:37,360
96 port switch and on the switch we had

00:23:34,780 --> 00:23:40,060
on the eight plan boats we had multiple

00:23:37,360 --> 00:23:42,970
islets of computation so four loads

00:23:40,060 --> 00:23:45,480
working together as a team solving a

00:23:42,970 --> 00:23:48,040
problem and these four nodes are not

00:23:45,480 --> 00:23:50,800
connected to only one switch on one line

00:23:48,040 --> 00:23:52,780
boards or 11 leaf of the tree inside the

00:23:50,800 --> 00:23:58,180
chassis they are connected widely

00:23:52,780 --> 00:24:00,520
throughout the switch and what you need

00:23:58,180 --> 00:24:02,950
you need information about just drop

00:24:00,520 --> 00:24:04,720
status so if a job status fails then you

00:24:02,950 --> 00:24:06,940
have to recognize okay there's a problem

00:24:04,720 --> 00:24:10,720
and you have to know which route were

00:24:06,940 --> 00:24:13,540
taken inside the chassis and with what

00:24:10,720 --> 00:24:16,810
are the counters of the infiniband ports

00:24:13,540 --> 00:24:18,430
the internal parts the external ports so

00:24:16,810 --> 00:24:20,710
there are a lot of information that you

00:24:18,430 --> 00:24:23,440
have to scrap out of it and the funny

00:24:20,710 --> 00:24:26,530
thing is if you disconnect and reconnect

00:24:23,440 --> 00:24:29,620
a port change the configuration all

00:24:26,530 --> 00:24:32,800
routes are gone they are recomputed and

00:24:29,620 --> 00:24:34,720
you have no no knowledge about the new

00:24:32,800 --> 00:24:36,970
routes anymore so you cannot say okay

00:24:34,720 --> 00:24:39,160
it's clearer i unplug this and i plug it

00:24:36,970 --> 00:24:41,190
there and if it doesn't work then i can

00:24:39,160 --> 00:24:43,170
say okay these two notes they have

00:24:41,190 --> 00:24:44,640
saying wrong and then you would plug

00:24:43,170 --> 00:24:45,900
something else and then you can rely on

00:24:44,640 --> 00:24:48,390
the information you had previously

00:24:45,900 --> 00:24:50,040
because the next iteration everything

00:24:48,390 --> 00:24:57,180
might change and then you screwed as

00:24:50,040 --> 00:24:59,400
well so what I what I did was I had ugly

00:24:57,180 --> 00:25:01,230
bash scripts for the counters ugly bash

00:24:59,400 --> 00:25:04,110
scripts for the roots and I tried to

00:25:01,230 --> 00:25:06,510
fiddle around with it and I was pretty

00:25:04,110 --> 00:25:08,130
sure that it was fabric bought one but

00:25:06,510 --> 00:25:10,320
then the customer the management guy was

00:25:08,130 --> 00:25:13,140
the excel sheet he came you know how

00:25:10,320 --> 00:25:16,440
long did it take take it out put another

00:25:13,140 --> 00:25:18,180
one in and it runs then it's okay and I

00:25:16,440 --> 00:25:19,620
said ah damn it i would like to know

00:25:18,180 --> 00:25:21,540
which one and i would like to know why

00:25:19,620 --> 00:25:24,600
and he said no put it in and then i

00:25:21,540 --> 00:25:27,000
swapped it the arrow was gone and i was

00:25:24,600 --> 00:25:29,670
left behind without knowledge and then

00:25:27,000 --> 00:25:33,450
was said that was really sad so i

00:25:29,670 --> 00:25:36,840
decided okay i would like to to to

00:25:33,450 --> 00:25:39,360
dedicate my bachelor thesis to create an

00:25:36,840 --> 00:25:41,760
open source framework for infiniment net

00:25:39,360 --> 00:25:44,280
monitoring and it was something that you

00:25:41,760 --> 00:25:47,070
cannot you cannot you couldn't buy it or

00:25:44,280 --> 00:25:49,320
you can you could buy this leash

00:25:47,070 --> 00:25:51,330
solution this is misleading that was

00:25:49,320 --> 00:25:56,340
provided by one vendor of infiniment

00:25:51,330 --> 00:25:59,250
where you paid license fees and it's

00:25:56,340 --> 00:26:01,680
plank license fees kind of not not men

00:25:59,250 --> 00:26:05,310
maybe not that much but it was a couple

00:26:01,680 --> 00:26:07,770
of euros per node and we had a lot of

00:26:05,310 --> 00:26:09,930
notes so it was kind of expensive and it

00:26:07,770 --> 00:26:11,580
had an ex oh ex port that was nice for

00:26:09,930 --> 00:26:13,530
the admitted for the management Excel

00:26:11,580 --> 00:26:14,940
part but for the administrator it was

00:26:13,530 --> 00:26:20,010
useless because you could not connect

00:26:14,940 --> 00:26:24,030
the dots to other layers so sadly so i

00:26:20,010 --> 00:26:26,340
use openness em open this m is an open

00:26:24,030 --> 00:26:28,560
source sublet miniature and the subject

00:26:26,340 --> 00:26:31,110
manager is this service that provides

00:26:28,560 --> 00:26:33,300
routing information so computes routing

00:26:31,110 --> 00:26:35,700
information for the whole network he

00:26:33,300 --> 00:26:38,400
assigns kind of IP addresses for every

00:26:35,700 --> 00:26:39,690
note and he's a guy or he said he does

00:26:38,400 --> 00:26:43,790
is a piece of software that's in charge

00:26:39,690 --> 00:26:46,800
of the infiniband installation and this

00:26:43,790 --> 00:26:47,820
openness em has a plug-in or in

00:26:46,800 --> 00:26:51,470
performed and I'm not applying a

00:26:47,820 --> 00:26:55,230
performance manager that you can use to

00:26:51,470 --> 00:26:57,720
to trigger performance tokens so

00:26:55,230 --> 00:27:01,049
it triggers every port in the sub in the

00:26:57,720 --> 00:27:02,940
in the fabric to send the matrix

00:27:01,049 --> 00:27:06,540
information so the triggers a report and

00:27:02,940 --> 00:27:09,330
it receives the metrics for every port

00:27:06,540 --> 00:27:11,549
and this is done indent so in philly

00:27:09,330 --> 00:27:15,030
when does every management stuff in band

00:27:11,549 --> 00:27:17,460
and it uses a very high prioritized or

00:27:15,030 --> 00:27:21,120
the highest priority for communication

00:27:17,460 --> 00:27:22,740
so this information was very synced so

00:27:21,120 --> 00:27:25,080
the problem with my basket was I

00:27:22,740 --> 00:27:27,179
iterated over everything that it's near

00:27:25,080 --> 00:27:30,690
the switch I want to monitor and then it

00:27:27,179 --> 00:27:33,120
starts at t 0 and 10 seconds later I had

00:27:30,690 --> 00:27:34,770
every metric but there was a delay

00:27:33,120 --> 00:27:37,559
between every metric so you could not

00:27:34,770 --> 00:27:40,380
say this port sends to this port and

00:27:37,559 --> 00:27:42,929
this value should be the same as a

00:27:40,380 --> 00:27:45,270
corresponding receiving a counter of the

00:27:42,929 --> 00:27:48,090
port because it was queried 10 seconds

00:27:45,270 --> 00:27:50,400
later and then the information was

00:27:48,090 --> 00:27:52,470
useless so you have to have linked

00:27:50,400 --> 00:27:54,900
information and this was provided by

00:27:52,470 --> 00:27:57,870
this mechanism which took only a couple

00:27:54,900 --> 00:28:01,950
of milliseconds to to sync and then

00:27:57,870 --> 00:28:03,660
you're good yeah and this triggers a

00:28:01,950 --> 00:28:05,610
call back within the performance manager

00:28:03,660 --> 00:28:08,549
where you can handle this metric

00:28:05,610 --> 00:28:13,080
information by default there is an

00:28:08,549 --> 00:28:16,770
plugin that catches this callback and it

00:28:13,080 --> 00:28:18,090
will write a file that's where that can

00:28:16,770 --> 00:28:20,179
show you all the information so you can

00:28:18,090 --> 00:28:23,400
write a big file and then you can try to

00:28:20,179 --> 00:28:27,179
analyze this file so this is first thing

00:28:23,400 --> 00:28:28,559
if you decide to to use InfiniBand

00:28:27,179 --> 00:28:30,240
someday you will stumble upon this

00:28:28,559 --> 00:28:32,700
plugin and then you say okay that would

00:28:30,240 --> 00:28:34,799
be nice and then you change this plugin

00:28:32,700 --> 00:28:36,990
to write more information than you

00:28:34,799 --> 00:28:40,049
should see here it will write the

00:28:36,990 --> 00:28:43,200
performance counter for every port and

00:28:40,049 --> 00:28:46,549
then you can run more interesting things

00:28:43,200 --> 00:28:49,500
to on this file but I thought okay

00:28:46,549 --> 00:28:51,900
thumbs into file I thought okay this

00:28:49,500 --> 00:28:54,330
fire stuff is nice but I would like to

00:28:51,900 --> 00:28:56,400
have something else and I invented this

00:28:54,330 --> 00:28:58,260
or I changed the C code and I'm not a

00:28:56,400 --> 00:29:02,309
sea programmer so please don't look at

00:28:58,260 --> 00:29:04,710
github I changed it to send the metrics

00:29:02,309 --> 00:29:07,710
to our d tool and send events to

00:29:04,710 --> 00:29:13,230
postgres so

00:29:07,710 --> 00:29:15,860
RT tool is interesting but if you cope

00:29:13,230 --> 00:29:21,149
the first time then we are very

00:29:15,860 --> 00:29:23,429
frustrated i think but i managed to get

00:29:21,149 --> 00:29:27,419
performance information of let's say 20

00:29:23,429 --> 00:29:30,690
host so and then I was screwed because

00:29:27,419 --> 00:29:34,470
this our d tool management and I'm not a

00:29:30,690 --> 00:29:36,929
not a big d tool developer so maybe my

00:29:34,470 --> 00:29:39,210
my measurements were wrong in the first

00:29:36,929 --> 00:29:42,390
place and my Postgres database also was

00:29:39,210 --> 00:29:44,460
not the best proof may may be the best /

00:29:42,390 --> 00:29:47,279
and postgrad had a base in the world so

00:29:44,460 --> 00:29:50,659
that skates to 20 notes and therefore

00:29:47,279 --> 00:29:53,970
was not as practical as it could be for

00:29:50,659 --> 00:29:56,100
synthetic studies to say okay we have a

00:29:53,970 --> 00:29:58,500
test network with 20 nodes and we want

00:29:56,100 --> 00:30:03,210
to see what what happens it was fine

00:29:58,500 --> 00:30:07,169
that for production not so so since i'm

00:30:03,210 --> 00:30:09,960
now in rd i get the touched with log

00:30:07,169 --> 00:30:12,630
stash and graphite so i decided to

00:30:09,960 --> 00:30:15,169
create the new version of the plugin and

00:30:12,630 --> 00:30:18,929
I call it next generation so I'm very

00:30:15,169 --> 00:30:22,260
creative and this sense metrics to

00:30:18,929 --> 00:30:24,659
graphite and events to log stash and log

00:30:22,260 --> 00:30:28,140
stash sends events to graphite as well

00:30:24,659 --> 00:30:31,770
so you can overlay information and you

00:30:28,140 --> 00:30:34,140
can you can see events so in event and

00:30:31,770 --> 00:30:35,789
graphite and you have this so you may be

00:30:34,140 --> 00:30:38,299
you you attend to the graphite talk and

00:30:35,789 --> 00:30:41,669
maybe you've got touched with graphite

00:30:38,299 --> 00:30:43,500
virus you have events in graford i think

00:30:41,669 --> 00:30:46,980
it was not mentioned by where the talk

00:30:43,500 --> 00:30:48,570
you can send a curl or just opposed to

00:30:46,980 --> 00:30:51,779
to graphite and it will create an event

00:30:48,570 --> 00:30:55,529
and i created events for poor down

00:30:51,779 --> 00:30:57,809
thought up something restarts in within

00:30:55,529 --> 00:31:01,049
soap openness em and stuff like that and

00:30:57,809 --> 00:31:04,770
you can overlay this information to your

00:31:01,049 --> 00:31:08,640
graphic graph so here we see my very big

00:31:04,770 --> 00:31:13,649
for node cluster and you see the receive

00:31:08,640 --> 00:31:16,350
and send bytes for every node and this

00:31:13,649 --> 00:31:20,120
black line of this red line is the event

00:31:16,350 --> 00:31:21,710
of a port is down and you see that

00:31:20,120 --> 00:31:23,390
the subnet manager note so the node

00:31:21,710 --> 00:31:25,100
where the subnet manager lives is the

00:31:23,390 --> 00:31:28,340
one with the highest peak and the

00:31:25,100 --> 00:31:33,350
highest receive part he's getting events

00:31:28,340 --> 00:31:37,820
and he the other nodes are also getting

00:31:33,350 --> 00:31:41,390
getting a sink and at the end you see

00:31:37,820 --> 00:31:44,930
the green bar is that the port is coming

00:31:41,390 --> 00:31:47,750
up again and then you see some spikes in

00:31:44,930 --> 00:31:50,620
the open sm note as well and if you zoom

00:31:47,750 --> 00:31:54,710
in then you can even see that the nodes

00:31:50,620 --> 00:31:59,180
metric stopped so no no counters were

00:31:54,710 --> 00:32:01,130
sent and it goes flat and this scales

00:31:59,180 --> 00:32:02,750
too so in infinity vent you have a knife

00:32:01,130 --> 00:32:05,960
in Philippines simulator which is kind

00:32:02,750 --> 00:32:08,540
of nice so you you create a theoretical

00:32:05,960 --> 00:32:10,730
topology file which is very simple and

00:32:08,540 --> 00:32:13,820
then you can start this infiniband

00:32:10,730 --> 00:32:15,380
simulator you preload a little library

00:32:13,820 --> 00:32:17,540
and then you can use all infiniband

00:32:15,380 --> 00:32:22,070
tools so all the ugly bash script tools

00:32:17,540 --> 00:32:25,870
are used and and and query the infinite

00:32:22,070 --> 00:32:28,820
network that is attached to your virtual

00:32:25,870 --> 00:32:31,250
network card and you can run this

00:32:28,820 --> 00:32:32,780
openness em subnet manager on this

00:32:31,250 --> 00:32:34,880
virtual network as well which is kind of

00:32:32,780 --> 00:32:36,140
a nice thing so you can spawn a couple

00:32:34,880 --> 00:32:39,550
of hundred nodes if you have enough

00:32:36,140 --> 00:32:43,250
memory and CPU and then you can run this

00:32:39,550 --> 00:32:49,010
this tool and you can play around with

00:32:43,250 --> 00:32:51,850
it so this was InfiniBand any questions

00:32:49,010 --> 00:32:56,840
so far or any your comments on infant

00:32:51,850 --> 00:33:03,910
who knows in fib and by the way who uses

00:32:56,840 --> 00:33:03,910
it on daily basis who hates InfiniBand

00:33:04,120 --> 00:33:08,930
now whether the thing is about

00:33:06,050 --> 00:33:10,310
InfiniBand that you approach a free man

00:33:08,930 --> 00:33:12,650
and you think okay it's like ethernet

00:33:10,310 --> 00:33:14,450
and then you you since it's a very

00:33:12,650 --> 00:33:16,520
reliable thing so you plug it in it will

00:33:14,450 --> 00:33:19,880
work because the subnet manager runs on

00:33:16,520 --> 00:33:23,180
a switch and the switch can serve as I

00:33:19,880 --> 00:33:26,060
think they they say 700 something nodes

00:33:23,180 --> 00:33:28,670
so until then you and and you have the

00:33:26,060 --> 00:33:31,040
simplest routing algorithm which is min

00:33:28,670 --> 00:33:32,890
hope so it just compute roots the

00:33:31,040 --> 00:33:35,740
minimal route between all the

00:33:32,890 --> 00:33:37,600
notes and then it runs fine so the move

00:33:35,740 --> 00:33:41,290
smallest cluster installed was four

00:33:37,600 --> 00:33:43,810
notes perfectly fine if you have 100

00:33:41,290 --> 00:33:46,450
notes everything is fine if you have

00:33:43,810 --> 00:33:48,280
problems with this cluster then you

00:33:46,450 --> 00:33:50,200
might first dig into every other layer

00:33:48,280 --> 00:33:51,910
before you touch this layer because you

00:33:50,200 --> 00:33:55,080
think okay it's hard to be back because

00:33:51,910 --> 00:33:57,460
you have only this arrows that you can

00:33:55,080 --> 00:34:02,560
obtain with the command line interface

00:33:57,460 --> 00:34:04,270
and as I said it's pretty ugly to to

00:34:02,560 --> 00:34:06,190
handle but normally it works fine and

00:34:04,270 --> 00:34:08,679
every other layer is less reliable than

00:34:06,190 --> 00:34:11,200
infiniband so normally you check it

00:34:08,679 --> 00:34:13,179
maybe you have the most common issues

00:34:11,200 --> 00:34:15,669
within filament our connector issues so

00:34:13,179 --> 00:34:17,740
you might unplug the cable plug it in

00:34:15,669 --> 00:34:20,800
again and then you're happy because it

00:34:17,740 --> 00:34:23,530
works so replug ninety percent of the

00:34:20,800 --> 00:34:25,450
problems change the cable nine percent

00:34:23,530 --> 00:34:26,860
of the rest although so you have

00:34:25,450 --> 00:34:30,190
ninety-nine percent and the rest are

00:34:26,860 --> 00:34:33,580
errors you call someone and the infinium

00:34:30,190 --> 00:34:35,950
and therefore it's it's a nice thing but

00:34:33,580 --> 00:34:39,909
it's also if it scales or if you try to

00:34:35,950 --> 00:34:42,429
scale it's hard anyway so I have a

00:34:39,909 --> 00:34:44,649
infiniband event and metrics but there

00:34:42,429 --> 00:34:47,020
are not enough that's one layer and we

00:34:44,649 --> 00:34:49,120
have other layers so I want to get

00:34:47,020 --> 00:34:52,390
real-world behavior and it's not only

00:34:49,120 --> 00:34:55,419
for my own sake partly but also because

00:34:52,390 --> 00:34:57,880
i work at pool and we create cluster

00:34:55,419 --> 00:34:59,980
management software and creating cluster

00:34:57,880 --> 00:35:03,400
management software for clusters two

00:34:59,980 --> 00:35:06,310
years ahead is pretty harsh because you

00:35:03,400 --> 00:35:09,280
have no clusters so I would like to have

00:35:06,310 --> 00:35:10,720
and it's a wish that I have that I had

00:35:09,280 --> 00:35:13,510
three months three weeks ago and I still

00:35:10,720 --> 00:35:15,610
have I want to get real world examples

00:35:13,510 --> 00:35:17,830
of this cluster stack so I want the

00:35:15,610 --> 00:35:21,010
slurm which is a resource scheduler that

00:35:17,830 --> 00:35:25,690
we use in its open source so I choose

00:35:21,010 --> 00:35:28,780
this and I want compute nodes that are

00:35:25,690 --> 00:35:31,300
running real jobs for real MTI jobs and

00:35:28,780 --> 00:35:33,370
I want as much additional cluster stack

00:35:31,300 --> 00:35:35,740
as I can get so I want graphite I want

00:35:33,370 --> 00:35:38,860
elasticsearch logstash cabana each inger

00:35:35,740 --> 00:35:41,800
somehow and I want all the other stuff

00:35:38,860 --> 00:35:43,450
and I want this because I want to put in

00:35:41,800 --> 00:35:45,010
a chinger and then I want to put in

00:35:43,450 --> 00:35:46,520
nagios and then say okay no I have to

00:35:45,010 --> 00:35:48,560
change back to reaching her because the

00:35:46,520 --> 00:35:50,990
web interface is ugly so I want to

00:35:48,560 --> 00:35:55,250
compare the difference text and I want

00:35:50,990 --> 00:35:57,440
to play around with it so and what as

00:35:55,250 --> 00:35:59,750
first it is ok which will box with

00:35:57,440 --> 00:36:01,400
vagrant is kind of nice to have an done

00:35:59,750 --> 00:36:03,230
tonight too nice to use as well and you

00:36:01,400 --> 00:36:05,330
can even orchestrate bigger cluster so

00:36:03,230 --> 00:36:09,320
you can have a vagrant file I'm who

00:36:05,330 --> 00:36:11,150
knows where ground ok perfect so you can

00:36:09,320 --> 00:36:12,770
have a vagrant file which has a for loop

00:36:11,150 --> 00:36:14,810
and then you can start trying to corrupt

00:36:12,770 --> 00:36:17,420
plenty 20 notes or 10 notes and

00:36:14,810 --> 00:36:19,850
depending on your system but for every

00:36:17,420 --> 00:36:21,320
node you you resource or you pin

00:36:19,850 --> 00:36:25,790
resources to the node so you say ok you

00:36:21,320 --> 00:36:28,220
have you guy.you you have one cpu you

00:36:25,790 --> 00:36:30,320
cap at fifty percent and the other one

00:36:28,220 --> 00:36:33,380
has the other cpu and in my environment

00:36:30,320 --> 00:36:36,920
i have fairly big machines with 32 corso

00:36:33,380 --> 00:36:40,160
and 500 gigabytes of ram so i can spawn

00:36:36,920 --> 00:36:42,980
some but if i have this cluster and i

00:36:40,160 --> 00:36:45,050
have jobs that are using one third of

00:36:42,980 --> 00:36:47,420
the cluster for one given time and then

00:36:45,050 --> 00:36:49,220
five minutes later i spawn a job that

00:36:47,420 --> 00:36:51,920
uses the other third and then i have

00:36:49,220 --> 00:36:57,290
spawned job that run the other side then

00:36:51,920 --> 00:37:00,050
the resources are limited to this kept

00:36:57,290 --> 00:37:03,920
cpu and kept around that I dedicated to

00:37:00,050 --> 00:37:06,560
the note so I cannot I cannot run high

00:37:03,920 --> 00:37:09,560
high workload on one third of the

00:37:06,560 --> 00:37:13,370
cluster because they are limited in the

00:37:09,560 --> 00:37:15,980
box and all the resources are the guest

00:37:13,370 --> 00:37:18,080
OS and stuff they are they are they are

00:37:15,980 --> 00:37:19,850
the same in every node and if I respond

00:37:18,080 --> 00:37:22,760
so i want to spawn hopefully i will

00:37:19,850 --> 00:37:26,320
someday 500 notes let's say then i have

00:37:22,760 --> 00:37:31,840
500 times the same operating system and

00:37:26,320 --> 00:37:34,460
yeah i think this doesn't get far so I

00:37:31,840 --> 00:37:36,620
went out to the internet and I found

00:37:34,460 --> 00:37:39,500
Tucker and that was something that was

00:37:36,620 --> 00:37:41,750
one on my list anyway and i was looking

00:37:39,500 --> 00:37:47,270
for a use case to use docker and this

00:37:41,750 --> 00:37:50,870
was perfect match so a docker we we have

00:37:47,270 --> 00:37:54,110
this virtualization which shares the

00:37:50,870 --> 00:37:58,100
same kernel as the host system and which

00:37:54,110 --> 00:37:59,390
does funny things like you if you deploy

00:37:58,100 --> 00:38:01,730
an image and the

00:37:59,390 --> 00:38:05,000
which is used by different containers

00:38:01,730 --> 00:38:08,779
then you you safe a lot of resources so

00:38:05,000 --> 00:38:11,359
and it's basically it's and I have not I

00:38:08,779 --> 00:38:13,579
have the three weeks experience so if

00:38:11,359 --> 00:38:15,170
you know there maybe I'll get it wrong

00:38:13,579 --> 00:38:18,819
but I've for me it's like change route

00:38:15,170 --> 00:38:22,849
on steroids because you spawn a bash and

00:38:18,819 --> 00:38:25,700
its encapsulated so you type pie a PS

00:38:22,849 --> 00:38:29,510
minus EF and you only see your bash the

00:38:25,700 --> 00:38:31,819
PS and the grep that I autocomplete PS

00:38:29,510 --> 00:38:35,119
so if I type PS minus ears took me three

00:38:31,819 --> 00:38:38,029
days PS minus EF and then automatically

00:38:35,119 --> 00:38:40,099
as i type grab and then I thought okay

00:38:38,029 --> 00:38:41,869
well what I what do I I'm grabbing for

00:38:40,099 --> 00:38:43,700
and then I deleted it I press ENTER and

00:38:41,869 --> 00:38:45,440
I had two processes and then I said okay

00:38:43,700 --> 00:38:47,269
you have to get rid of this pipe grab

00:38:45,440 --> 00:38:49,760
because it doesn't get you something

00:38:47,269 --> 00:38:52,309
somewhere so you have only this couple

00:38:49,760 --> 00:38:54,440
of processes and you have your dedicated

00:38:52,309 --> 00:38:57,109
network device and with graphite you can

00:38:54,440 --> 00:38:59,299
just collect metrics for this dedicated

00:38:57,109 --> 00:39:02,119
network device and you have very as you

00:38:59,299 --> 00:39:05,930
have very limited processes you get very

00:39:02,119 --> 00:39:08,690
cool clean metrics for this processes so

00:39:05,930 --> 00:39:12,250
if you s copy within then you do not

00:39:08,690 --> 00:39:15,049
have metrics on other processes that

00:39:12,250 --> 00:39:17,839
that send metrics that you that you that

00:39:15,049 --> 00:39:19,849
you do not initiate it initially thought

00:39:17,839 --> 00:39:22,400
of and another thing that i didn't use

00:39:19,849 --> 00:39:26,539
now what I will is see groups see groups

00:39:22,400 --> 00:39:29,720
pretty nice you can pin a process and

00:39:26,539 --> 00:39:32,539
say okay you are only allowed to use one

00:39:29,720 --> 00:39:35,569
kilobit per second on the block device

00:39:32,539 --> 00:39:37,519
you are only allowed to use 50 kilobit

00:39:35,569 --> 00:39:39,349
per second on the network device or you

00:39:37,519 --> 00:39:43,730
are only allowed to use such and such

00:39:39,349 --> 00:39:45,859
cpu performance so with this I should be

00:39:43,730 --> 00:39:49,369
able to create a cluster with 500 nodes

00:39:45,859 --> 00:39:53,150
where every cluster node is only capable

00:39:49,369 --> 00:39:56,359
of running one thousands of cpu cores

00:39:53,150 --> 00:39:59,180
performance and then I can use normal

00:39:56,359 --> 00:40:00,589
let's say applications so MPI

00:39:59,180 --> 00:40:02,690
applications that are normally running

00:40:00,589 --> 00:40:04,819
on a cluster and I can tell ok you are

00:40:02,690 --> 00:40:07,730
normally you are a very big guy and you

00:40:04,819 --> 00:40:09,259
you you you measure the performance of

00:40:07,730 --> 00:40:12,320
supercomputers or Lin take for instance

00:40:09,259 --> 00:40:14,930
and I can limit the

00:40:12,320 --> 00:40:17,060
notes capacity or the notes resources

00:40:14,930 --> 00:40:19,580
that he is allowed to consume and then i

00:40:17,060 --> 00:40:21,710
can run untouched a coat on this machine

00:40:19,580 --> 00:40:24,620
and it will give me cool performance

00:40:21,710 --> 00:40:28,820
metrics and it's highly automated will

00:40:24,620 --> 00:40:31,760
as well so this is some nice and it's a

00:40:28,820 --> 00:40:35,030
nice tool so now for the guys are

00:40:31,760 --> 00:40:39,140
watching i will make a break and you can

00:40:35,030 --> 00:40:41,390
watch the talk from two BS a couple of

00:40:39,140 --> 00:40:47,080
hours ago was it crowded so you can do

00:40:41,390 --> 00:40:50,600
that and then you click play again and

00:40:47,080 --> 00:40:53,030
so we have this host this is virtual

00:40:50,600 --> 00:40:55,550
this host where all my clusters a class

00:40:53,030 --> 00:40:58,370
a notes are living on and i have one

00:40:55,550 --> 00:41:01,070
master node which uses etcd as an

00:40:58,370 --> 00:41:03,890
inventory kind of and it should provide

00:41:01,070 --> 00:41:05,570
dns service and it should provide a slum

00:41:03,890 --> 00:41:09,550
control demon which is the master of

00:41:05,570 --> 00:41:13,190
this job scheduler I have a monitoring

00:41:09,550 --> 00:41:15,080
container which has graphite and stats

00:41:13,190 --> 00:41:18,890
the installed so see I'm not using it

00:41:15,080 --> 00:41:20,960
but still and I have a lot management

00:41:18,890 --> 00:41:25,610
which is elastic church and lock stash

00:41:20,960 --> 00:41:27,850
cabana so ill yeah elk are okay and i

00:41:25,610 --> 00:41:31,670
have compute nodes and the compute nodes

00:41:27,850 --> 00:41:33,230
running slum client so they connect to

00:41:31,670 --> 00:41:36,230
the master and say okay here i am give

00:41:33,230 --> 00:41:37,910
me a job and they i would like as i said

00:41:36,230 --> 00:41:42,830
i would like to end to be at least 500

00:41:37,910 --> 00:41:46,960
to have a huge cluster maybe i can get

00:41:42,830 --> 00:41:46,960
more but let's say i run so far I run

00:41:46,990 --> 00:41:54,560
160 or so and i but i think i will tell

00:41:52,070 --> 00:41:56,720
or i will talk about it later and i

00:41:54,560 --> 00:42:00,260
would like to have alarming a chinga or

00:41:56,720 --> 00:42:02,570
a goose or shinken or maybe all of them

00:42:00,260 --> 00:42:06,910
to compare them but it's not integrated

00:42:02,570 --> 00:42:09,950
yet so the master node and this is so

00:42:06,910 --> 00:42:12,710
how doctor is used and as you saw the

00:42:09,950 --> 00:42:16,760
talk of Tobias I think you will

00:42:12,710 --> 00:42:18,770
recognize and you tell image to run in a

00:42:16,760 --> 00:42:21,410
container and you tell them that you

00:42:18,770 --> 00:42:24,880
would like to run a bash inside of it so

00:42:21,410 --> 00:42:27,250
here we go and it runs

00:42:24,880 --> 00:42:30,130
ET CD which is a key value a higher

00:42:27,250 --> 00:42:34,120
villa p high-availability a key value

00:42:30,130 --> 00:42:37,780
store which is very very nice and it

00:42:34,120 --> 00:42:40,780
provides a dns so if in compute nodes

00:42:37,780 --> 00:42:42,790
comes up he sends okay I'm compute not 0

00:42:40,780 --> 00:42:46,810
and I have this IP address this

00:42:42,790 --> 00:42:49,870
information is encapsulated into the dns

00:42:46,810 --> 00:42:52,900
server and you can then ssh into the

00:42:49,870 --> 00:42:57,010
compute node and for ssh you will need

00:42:52,900 --> 00:43:01,090
to reverse lookup so this is also also

00:42:57,010 --> 00:43:03,190
done yeah and this is my automation so

00:43:01,090 --> 00:43:05,320
far but I think I should integrate radar

00:43:03,190 --> 00:43:07,720
and the bill or whatever fits this need

00:43:05,320 --> 00:43:10,780
to have a upcoming hosts that I didn't

00:43:07,720 --> 00:43:13,170
saw before and configure the slum d and

00:43:10,780 --> 00:43:16,390
in chinger and all the services i have

00:43:13,170 --> 00:43:18,130
appropriately so all the non master

00:43:16,390 --> 00:43:21,310
hosts they are started with the master

00:43:18,130 --> 00:43:23,620
as a dns server so they will look into

00:43:21,310 --> 00:43:27,040
their et Cie resolve and they will know

00:43:23,620 --> 00:43:28,600
what the master is they will query the

00:43:27,040 --> 00:43:31,030
dns server of the master that's the

00:43:28,600 --> 00:43:34,960
purpose of a dns server they will run

00:43:31,030 --> 00:43:37,150
amount various files or various and

00:43:34,960 --> 00:43:39,070
directories from the host so scratch for

00:43:37,150 --> 00:43:41,530
instance so this is a file system that

00:43:39,070 --> 00:43:44,680
where you can use you can use as a temp

00:43:41,530 --> 00:43:47,440
let's say and say whether we have a/c

00:43:44,680 --> 00:43:49,780
home which is a cluster home and this

00:43:47,440 --> 00:43:54,160
hopefully sits on SSD so in my case does

00:43:49,780 --> 00:43:57,670
and then supervisor d kicks in and who

00:43:54,160 --> 00:43:58,930
knows supervisor d oh you should you

00:43:57,670 --> 00:44:02,110
should look it up that's pretty nice

00:43:58,930 --> 00:44:05,350
it's like a system d in on python and

00:44:02,110 --> 00:44:08,950
it's pretty pretty easy to set up and

00:44:05,350 --> 00:44:11,740
pretty easy to use and since dr. has you

00:44:08,950 --> 00:44:13,420
since dr. and if you if you are in the

00:44:11,740 --> 00:44:15,910
same kernel as the host so if you need

00:44:13,420 --> 00:44:17,680
something from the host Colonel to to a

00:44:15,910 --> 00:44:19,960
lot of module or something you are not

00:44:17,680 --> 00:44:23,140
allowed so this is why systemd kinds of

00:44:19,960 --> 00:44:26,650
not work maybe now they work but I

00:44:23,140 --> 00:44:28,870
didn't get it up and running so and

00:44:26,650 --> 00:44:32,310
supervisor d is kind of the common sense

00:44:28,870 --> 00:44:36,100
if you look at dhaka files and other

00:44:32,310 --> 00:44:38,050
another other projects and you will see

00:44:36,100 --> 00:44:38,779
that they all use system and supervisor

00:44:38,050 --> 00:44:40,429
deep

00:44:38,779 --> 00:44:44,239
and then it starts sending metrics to

00:44:40,429 --> 00:44:47,119
graphite locks to log stash and yeah

00:44:44,239 --> 00:44:50,359
that's that's how it's how every non

00:44:47,119 --> 00:44:54,650
master node works so the darker compute

00:44:50,359 --> 00:44:56,599
node he sets up and it's not not very

00:44:54,650 --> 00:44:59,900
visible so this is if if you do not

00:44:56,599 --> 00:45:02,239
provide a command that the compute node

00:44:59,900 --> 00:45:04,130
should start with it will start with the

00:45:02,239 --> 00:45:06,919
command that you provided in your build

00:45:04,130 --> 00:45:10,489
process of this image so I provide

00:45:06,919 --> 00:45:13,549
supervisor d as a as a normal start

00:45:10,489 --> 00:45:17,239
command and this is the output of

00:45:13,549 --> 00:45:20,299
supervisor d so he spawns a setup script

00:45:17,239 --> 00:45:23,359
that just sends the IP and then hostname

00:45:20,299 --> 00:45:24,949
to EDC d it then starts as HD server it

00:45:23,359 --> 00:45:26,839
starts diamond which is a metric

00:45:24,949 --> 00:45:29,239
collector which is also nice so if you

00:45:26,839 --> 00:45:32,569
do not know how to get the metrics on a

00:45:29,239 --> 00:45:34,599
system you should use diamond it starts

00:45:32,569 --> 00:45:37,819
managed with this a server to

00:45:34,599 --> 00:45:39,619
authenticate slurm and it starts low md

00:45:37,819 --> 00:45:43,369
which is as I said the client for the

00:45:39,619 --> 00:45:46,179
job scheduler and it starts log stash

00:45:43,369 --> 00:45:48,799
for water ik a lumberjack with just

00:45:46,179 --> 00:45:52,249
right and recent files and send it to

00:45:48,799 --> 00:45:54,859
log stash so and it's that's okay it has

00:45:52,249 --> 00:45:58,669
libraries for open mpi and it has a

00:45:54,859 --> 00:46:01,669
queue proof which is a tool that can run

00:45:58,669 --> 00:46:05,119
TCP latency and benchmarks on the

00:46:01,669 --> 00:46:07,640
bandwidth and not only TCP also in FIBA

00:46:05,119 --> 00:46:10,939
and benchmarks and I start this to be

00:46:07,640 --> 00:46:12,109
able to to to to connect the client for

00:46:10,939 --> 00:46:15,140
every node and just run some benchmarks

00:46:12,109 --> 00:46:18,559
oh this is nice as well then I have a

00:46:15,140 --> 00:46:20,839
darker graphite note that is a has a

00:46:18,559 --> 00:46:24,999
full come for graphite stack with stats

00:46:20,839 --> 00:46:28,329
t it stresses the i/o which is kind of

00:46:24,999 --> 00:46:31,609
weird but I love as as these and I had

00:46:28,329 --> 00:46:33,259
to for now and they are saturated to

00:46:31,609 --> 00:46:35,390
thirty percent even with a couple of

00:46:33,259 --> 00:46:38,900
notes so it's kind of weird I need to

00:46:35,390 --> 00:46:44,209
take much more care about this but as

00:46:38,900 --> 00:46:47,089
far as I I get it it worked and I have

00:46:44,209 --> 00:46:51,440
this yoke k it's a elasticsearch la

00:46:47,089 --> 00:46:54,410
cubana a bundle that is just a note with

00:46:51,440 --> 00:46:57,440
Laxus forward our input so he receives

00:46:54,410 --> 00:46:59,720
this the locks from the notes I have no

00:46:57,440 --> 00:47:02,270
filter applied so if you you know a log

00:46:59,720 --> 00:47:04,310
stash you normally you you will pass

00:47:02,270 --> 00:47:07,310
what you get and you will do things with

00:47:04,310 --> 00:47:10,040
it so I didn't do this now but I will

00:47:07,310 --> 00:47:11,960
and everything is put into an elastic

00:47:10,040 --> 00:47:16,190
search and then you can use key banga

00:47:11,960 --> 00:47:20,660
for the stuff to look at and now it's a

00:47:16,190 --> 00:47:23,240
life i had a little best function in my

00:47:20,660 --> 00:47:26,870
better see where i can just start a note

00:47:23,240 --> 00:47:28,910
i will just spawn the container and then

00:47:26,870 --> 00:47:30,770
I send an event if it's successful i

00:47:28,910 --> 00:47:32,630
send an event to graphite that the

00:47:30,770 --> 00:47:35,420
container has started and if it's not

00:47:32,630 --> 00:47:39,500
even then i will send a event that it

00:47:35,420 --> 00:47:42,710
failed and if i do this over a couple of

00:47:39,500 --> 00:47:45,470
notes then i will get this dashboard

00:47:42,710 --> 00:47:48,260
view so i have this horizontal lines on

00:47:45,470 --> 00:47:50,840
the container start events and in the

00:47:48,260 --> 00:47:52,970
background we see that the I 08 user and

00:47:50,840 --> 00:47:55,310
system of my host system so we see that

00:47:52,970 --> 00:47:58,250
if I start a container he has to do

00:47:55,310 --> 00:48:00,920
something it's it's normal i guess and

00:47:58,250 --> 00:48:04,640
this is on a three core AMD at my

00:48:00,920 --> 00:48:08,530
mother's place so it's not very fast but

00:48:04,640 --> 00:48:12,890
I it's okay and if I start a slum host

00:48:08,530 --> 00:48:16,460
client a domain a compute client then I

00:48:12,890 --> 00:48:18,290
see this computer is within slurm so i

00:48:16,460 --> 00:48:19,730
can see okay i have the first notes i

00:48:18,290 --> 00:48:22,130
started earlier so they are an idle

00:48:19,730 --> 00:48:24,860
there waiting and the other nodes are

00:48:22,130 --> 00:48:27,500
down because learn things okay if you if

00:48:24,860 --> 00:48:29,060
you if notes are coming back to the

00:48:27,500 --> 00:48:31,730
configuration you should look at it and

00:48:29,060 --> 00:48:34,160
then you should say I i have this

00:48:31,730 --> 00:48:36,410
highlighted you should say updates and

00:48:34,160 --> 00:48:38,780
node status to idle and then they are

00:48:36,410 --> 00:48:40,490
available for running jobs and running

00:48:38,780 --> 00:48:43,700
jobs in SLO ms pretty easy or in every

00:48:40,490 --> 00:48:47,030
job scheduler you have commands to run

00:48:43,700 --> 00:48:50,810
commands or to run things interactively

00:48:47,030 --> 00:48:53,120
so with s run- n16 I say okay I would

00:48:50,810 --> 00:48:56,320
like to run a command on every 6 on 16

00:48:53,120 --> 00:48:59,570
notes and this command is host name and

00:48:56,320 --> 00:49:03,230
then the output will be brought back to

00:48:59,570 --> 00:49:05,060
to the submission host and this you see

00:49:03,230 --> 00:49:06,800
it's not ordered because

00:49:05,060 --> 00:49:10,430
responses of the different nodes are

00:49:06,800 --> 00:49:12,770
coming back in wild order so i got the

00:49:10,430 --> 00:49:15,590
response and it tells me that everything

00:49:12,770 --> 00:49:17,600
worked fine and to this for this to run

00:49:15,590 --> 00:49:23,540
you have to ssh part what lesson every

00:49:17,600 --> 00:49:26,990
host so and I had a little MPI job so

00:49:23,540 --> 00:49:30,740
the job is to do a matrix multiplication

00:49:26,990 --> 00:49:32,390
so we have 20 m I do not I'm not a big

00:49:30,740 --> 00:49:34,430
fan of this mathematics tough but you

00:49:32,390 --> 00:49:38,330
have two matrices that you want to

00:49:34,430 --> 00:49:40,520
multiply and there is a formula to do

00:49:38,330 --> 00:49:43,780
this and you can spread the word or the

00:49:40,520 --> 00:49:47,770
work pretty pretty nicely so this

00:49:43,780 --> 00:49:50,570
creates or this job is just simply

00:49:47,770 --> 00:49:53,780
multiplying the matrices and iterating

00:49:50,570 --> 00:49:57,200
through all the steps and if you do this

00:49:53,780 --> 00:49:58,820
without slowing down the computation

00:49:57,200 --> 00:50:02,750
then it will saturate the host pretty

00:49:58,820 --> 00:50:06,410
pretty much so what I did I was help of

00:50:02,750 --> 00:50:09,410
colleagues I i did a delay or asleep

00:50:06,410 --> 00:50:12,170
within every iteration so the the notes

00:50:09,410 --> 00:50:15,740
are computing the metrics and the

00:50:12,170 --> 00:50:18,590
matrices as they normally do but I sleep

00:50:15,740 --> 00:50:20,750
every iteration for 200 milliseconds so

00:50:18,590 --> 00:50:23,990
I by default it's 500 milliseconds so

00:50:20,750 --> 00:50:26,840
they sleep then they do the next so by

00:50:23,990 --> 00:50:32,000
this by doing this the application is

00:50:26,840 --> 00:50:34,330
not using much CPU and I I even if they

00:50:32,000 --> 00:50:36,530
do not much computation I get all the

00:50:34,330 --> 00:50:38,030
communication for the or the

00:50:36,530 --> 00:50:40,160
communications pedals are still the same

00:50:38,030 --> 00:50:41,960
they also scaled down so normally they

00:50:40,160 --> 00:50:44,000
will set you rate the network but with

00:50:41,960 --> 00:50:46,160
the sleeping they only do a couple of

00:50:44,000 --> 00:50:48,140
kilobytes per per second but I do not

00:50:46,160 --> 00:50:50,060
care about the scale of the performance

00:50:48,140 --> 00:50:52,190
matters in when we see a picture I just

00:50:50,060 --> 00:50:55,010
care about patterns so that's pretty

00:50:52,190 --> 00:50:57,080
nice and when the job starts i sent an

00:50:55,010 --> 00:51:00,890
event when the job and I sent him in as

00:50:57,080 --> 00:51:03,710
well so and by submitting this so s

00:51:00,890 --> 00:51:06,380
batch is a command to send a job to the

00:51:03,710 --> 00:51:09,560
queue and I said okay with 16 host

00:51:06,380 --> 00:51:14,050
should use this script and they should

00:51:09,560 --> 00:51:16,520
run metrics is that I have 65 k sighs

00:51:14,050 --> 00:51:18,980
this job is submitted to the queue and

00:51:16,520 --> 00:51:20,420
he you see it's instead of run

00:51:18,980 --> 00:51:24,950
it's running for three seconds now and

00:51:20,420 --> 00:51:28,940
it's doing the magic work and then when

00:51:24,950 --> 00:51:31,609
I turn to graphite to the graph at web

00:51:28,940 --> 00:51:34,220
interface then I can see that here the

00:51:31,609 --> 00:51:37,040
drop is starting he's doing some heavy

00:51:34,220 --> 00:51:40,070
lifting its as well the three co-host so

00:51:37,040 --> 00:51:44,600
he's not very powerful and then the

00:51:40,070 --> 00:51:47,330
communication starts to flow and the

00:51:44,600 --> 00:51:50,030
first job is doing 250 milliseconds

00:51:47,330 --> 00:51:51,830
every iteration and the next job is

00:51:50,030 --> 00:51:54,350
doing 500 milliseconds every iteration

00:51:51,830 --> 00:51:56,650
and you see that even the communication

00:51:54,350 --> 00:51:59,869
patterns within the matrix

00:51:56,650 --> 00:52:02,780
multiplication you could see that there

00:51:59,869 --> 00:52:05,180
is some iteration groups that I do not

00:52:02,780 --> 00:52:07,460
understand completely but my colleagues

00:52:05,180 --> 00:52:10,160
that it was his PhD work that he

00:52:07,460 --> 00:52:12,070
provided he said yeah that that's that's

00:52:10,160 --> 00:52:14,750
as I thought it would look like so

00:52:12,070 --> 00:52:16,640
that's kind of nice and you can with

00:52:14,750 --> 00:52:19,990
this if you just inject sleeps then you

00:52:16,640 --> 00:52:22,550
can see how the pattern works without

00:52:19,990 --> 00:52:24,170
having a big cluster and I do not care

00:52:22,550 --> 00:52:30,170
about the result i don't know i only

00:52:24,170 --> 00:52:33,920
care about the patterns and since i

00:52:30,170 --> 00:52:37,310
start this q perv I can also do a TCP

00:52:33,920 --> 00:52:41,830
bandwidth benchmark on every node so I

00:52:37,310 --> 00:52:44,869
start on computer oh and spawn a

00:52:41,830 --> 00:52:49,000
two-minute TCP benchmark to every other

00:52:44,869 --> 00:52:52,850
node so this head of this line here is

00:52:49,000 --> 00:52:56,060
the sending of the first node and this

00:52:52,850 --> 00:52:59,330
lines here other receiving this is a

00:52:56,060 --> 00:53:02,060
receiving of the of the service and as I

00:52:59,330 --> 00:53:05,680
see my little host is pretty busy with

00:53:02,060 --> 00:53:08,450
this so it's not only for the synthetic

00:53:05,680 --> 00:53:14,119
mmpi benchmarks I run it could be also

00:53:08,450 --> 00:53:17,090
be used for other stuff so future work

00:53:14,119 --> 00:53:19,790
so this may be the over a curated in the

00:53:17,090 --> 00:53:21,560
picture but what I would like to do in

00:53:19,790 --> 00:53:24,020
the next couple of days weeks months

00:53:21,560 --> 00:53:27,160
whatever it takes I would like to

00:53:24,020 --> 00:53:31,160
provide any ginger or nagios or bows

00:53:27,160 --> 00:53:32,270
image when American see the states of

00:53:31,160 --> 00:53:35,450
the different layers

00:53:32,270 --> 00:53:40,010
because this is kind of state-of-the-art

00:53:35,450 --> 00:53:42,800
word is used in every cluster so i will

00:53:40,010 --> 00:53:44,420
like to bundle this with cabana and with

00:53:42,800 --> 00:53:47,030
graphite as well and I think it's not a

00:53:44,420 --> 00:53:49,490
not a big deal so question is for me

00:53:47,030 --> 00:53:53,240
will it's gay and so now we are at 5000

00:53:49,490 --> 00:53:56,780
notes and this is pretty ugly if we have

00:53:53,240 --> 00:53:58,970
50,000 notes in two years who is

00:53:56,780 --> 00:54:01,250
clicking on graphite I was clicking on

00:53:58,970 --> 00:54:02,960
on nagios and was clicking on the

00:54:01,250 --> 00:54:07,130
chinger and I think this will be a very

00:54:02,960 --> 00:54:10,250
very tough tough thing on this cluster I

00:54:07,130 --> 00:54:12,290
I was supervising daimler we had 4,000

00:54:10,250 --> 00:54:15,980
dots and we had graphite anyway nagios

00:54:12,290 --> 00:54:19,130
with this very ugly web interface but at

00:54:15,980 --> 00:54:21,920
least we we get some information and

00:54:19,130 --> 00:54:26,510
with what we what we were we really need

00:54:21,920 --> 00:54:28,940
was this parent relationship so we have

00:54:26,510 --> 00:54:31,730
we had an in-house monitoring solution

00:54:28,940 --> 00:54:33,830
that has no parents and so if one switch

00:54:31,730 --> 00:54:35,540
goes down then everything was was red

00:54:33,830 --> 00:54:37,370
and you did not know where the root

00:54:35,540 --> 00:54:40,010
cause was okay that was an improvement

00:54:37,370 --> 00:54:41,720
that was very good but with five

00:54:40,010 --> 00:54:43,760
thousand or 4,000 nodes and we're

00:54:41,720 --> 00:54:45,500
talking only about notes we know talking

00:54:43,760 --> 00:54:48,920
about all the infrastructure in between

00:54:45,500 --> 00:54:53,750
so we might have 7,000 notes and every

00:54:48,920 --> 00:54:56,560
rate of every file server as also as

00:54:53,750 --> 00:54:59,510
well it was also an item in naga so if

00:54:56,560 --> 00:55:00,890
something went wrong then we'll have

00:54:59,510 --> 00:55:02,620
everything right again and you cannot

00:55:00,890 --> 00:55:06,140
manage this and I think this is very

00:55:02,620 --> 00:55:08,030
serious threat let's say two two big

00:55:06,140 --> 00:55:10,160
clusters or two big installation so I

00:55:08,030 --> 00:55:11,750
don't know how to how to figure out how

00:55:10,160 --> 00:55:14,150
to deal with it but maybe we will

00:55:11,750 --> 00:55:16,640
hopefully with and what I also would

00:55:14,150 --> 00:55:19,360
like to have is a cluster file system so

00:55:16,640 --> 00:55:22,910
in a cluster you you you want to store

00:55:19,360 --> 00:55:25,700
snapshots so if the note dies then your

00:55:22,910 --> 00:55:28,430
application is dead so you if the job is

00:55:25,700 --> 00:55:30,680
running for two days then you might want

00:55:28,430 --> 00:55:32,480
to be able to restart from not from the

00:55:30,680 --> 00:55:34,610
beginning but from intermediate steps

00:55:32,480 --> 00:55:38,330
and to do this you have to dump the

00:55:34,610 --> 00:55:41,390
whole memory of every node and this is

00:55:38,330 --> 00:55:43,460
called checkpointing so but if you do

00:55:41,390 --> 00:55:45,350
this and every node has every core a

00:55:43,460 --> 00:55:46,490
rough estimate is three to four

00:55:45,350 --> 00:55:49,289
gigabytes

00:55:46,490 --> 00:55:52,440
everyone have four minutes 0 Gav right

00:55:49,289 --> 00:55:55,799
but there's no other speaker so you can

00:55:52,440 --> 00:55:58,710
flee maybe anyway and so you have four

00:55:55,799 --> 00:56:00,809
gigabytes per core and you have 32 cores

00:55:58,710 --> 00:56:03,660
so you have a lot of memory to dump and

00:56:00,809 --> 00:56:07,500
you want to have a fast scratch for this

00:56:03,660 --> 00:56:09,480
and that's where luster and GPFS and or

00:56:07,500 --> 00:56:11,490
home oh you call them all this

00:56:09,480 --> 00:56:15,990
classifier systems came in and they a

00:56:11,490 --> 00:56:17,880
very central infrastructure element in

00:56:15,990 --> 00:56:20,490
the cluster so you want to be sure that

00:56:17,880 --> 00:56:23,039
this is dealt with and so I would like

00:56:20,490 --> 00:56:26,099
to introduce this into my cluster as

00:56:23,039 --> 00:56:30,779
well but since all of them are using

00:56:26,099 --> 00:56:32,609
kernel modules it's kind of not obvious

00:56:30,779 --> 00:56:34,650
how to use it with sauber i think if i

00:56:32,609 --> 00:56:37,579
compile the host Colonel with the

00:56:34,650 --> 00:56:40,980
modules than I should be fine but I

00:56:37,579 --> 00:56:43,559
didn't so this might be pushed somewhere

00:56:40,980 --> 00:56:45,990
else and I'm close to the finish so it

00:56:43,559 --> 00:56:49,500
would be but yeah if you have questions

00:56:45,990 --> 00:56:52,589
and you you like to ask so throw at me

00:56:49,500 --> 00:56:54,900
right as i said and i think another

00:56:52,589 --> 00:56:57,599
thread another thread something to deal

00:56:54,900 --> 00:56:59,400
with this human so if we introduce stuff

00:56:57,599 --> 00:57:01,170
like lost log stash if we introduce

00:56:59,400 --> 00:57:03,809
stuff like ref ID if we introduce

00:57:01,170 --> 00:57:07,170
something else which is this fancy new

00:57:03,809 --> 00:57:10,400
stuff that we have a fifty-year-old

00:57:07,170 --> 00:57:13,769
sysadmin working at a cluster and

00:57:10,400 --> 00:57:15,329
mastering grab a BK and stuff he will be

00:57:13,769 --> 00:57:18,900
very frightened that he will be replaced

00:57:15,329 --> 00:57:23,009
that hit all his knowledge will be 44

00:57:18,900 --> 00:57:25,430
worthless and so I think we have to

00:57:23,009 --> 00:57:28,440
figure out how to interact with this

00:57:25,430 --> 00:57:31,559
administrators and to introduce ways for

00:57:28,440 --> 00:57:33,660
new guys form into me or for for medium

00:57:31,559 --> 00:57:36,029
needed me for for guys that are working

00:57:33,660 --> 00:57:38,609
for five years there and guys that are

00:57:36,029 --> 00:57:42,119
working for a long time and that are

00:57:38,609 --> 00:57:44,069
maybe has a fear and maybe real fear to

00:57:42,119 --> 00:57:46,740
be replaced because I do not understand

00:57:44,069 --> 00:57:50,670
this new click way to to handle the

00:57:46,740 --> 00:57:54,089
cluster I think this it to be um to be

00:57:50,670 --> 00:57:57,240
dealt with in some way so that's a

00:57:54,089 --> 00:57:59,730
concern that we have end we have a

00:57:57,240 --> 00:58:01,350
truckload of events we have a truckload

00:57:59,730 --> 00:58:04,170
of metrics we have a truckload of

00:58:01,350 --> 00:58:07,230
interactions and the question is how do

00:58:04,170 --> 00:58:10,280
we store everything and there are ways

00:58:07,230 --> 00:58:14,010
to store them but you have to decide

00:58:10,280 --> 00:58:17,930
beforehand how to store it and after two

00:58:14,010 --> 00:58:21,750
weeks years or decades you might say I

00:58:17,930 --> 00:58:24,090
should have started another way and then

00:58:21,750 --> 00:58:26,160
you screwed for instance we have a job

00:58:24,090 --> 00:58:30,869
running on four nodes and we want to

00:58:26,160 --> 00:58:34,619
know the metric usage of the memory then

00:58:30,869 --> 00:58:37,740
we can do this this query in knox and

00:58:34,619 --> 00:58:41,490
graphite where we just say okay not 134

00:58:37,740 --> 00:58:43,380
3595 but if you have 1,000 nodes and you

00:58:41,490 --> 00:58:45,780
have to create this query then it's kind

00:58:43,380 --> 00:58:47,880
of lame so you might say okay I

00:58:45,780 --> 00:58:51,330
organized it in a different way so every

00:58:47,880 --> 00:58:53,700
job has or there's a prefix for every

00:58:51,330 --> 00:58:55,830
job and if the job starts then you

00:58:53,700 --> 00:58:57,480
forward all the metrics to a different

00:58:55,830 --> 00:59:01,710
destination and therefore you you have

00:58:57,480 --> 00:59:06,150
easier queries to to to throw it at

00:59:01,710 --> 00:59:09,000
graphite and to cope with the load but I

00:59:06,150 --> 00:59:12,470
don't know how to I'll deal with it yet

00:59:09,000 --> 00:59:14,220
I think we will go there somehow and

00:59:12,470 --> 00:59:18,480
another thing I would like to do is

00:59:14,220 --> 00:59:21,270
create a real network so now i have i

00:59:18,480 --> 00:59:24,420
have this docker 0 bridge on the host

00:59:21,270 --> 00:59:25,770
system and every container is connected

00:59:24,420 --> 00:59:28,350
to this bridge so it's flat network

00:59:25,770 --> 00:59:29,970
which kind of lame I would like to have

00:59:28,350 --> 00:59:31,440
virtual switches where everyone is

00:59:29,970 --> 00:59:33,480
connected so that you can create

00:59:31,440 --> 00:59:37,140
bottlenecks between switches and that

00:59:33,480 --> 00:59:42,240
you can mock up real clusters or be

00:59:37,140 --> 00:59:45,960
closer to the real world and that's

00:59:42,240 --> 00:59:48,900
about it this is how you create docker

00:59:45,960 --> 00:59:53,300
images you create docker files and you

00:59:48,900 --> 00:59:56,250
kind of have a really good how to that

00:59:53,300 --> 00:59:58,920
describes how the image was created and

00:59:56,250 --> 01:00:02,520
I put this on github and I create an

00:59:58,920 --> 01:00:04,740
index or repository on docker I oh and i

01:00:02,520 --> 01:00:08,580
will add all the other nodes that i use

01:00:04,740 --> 01:00:11,040
in my cluster and the best case you just

01:00:08,580 --> 01:00:12,760
use federal 20 for instance or your boon

01:00:11,040 --> 01:00:17,590
to install docker

01:00:12,760 --> 01:00:20,020
and say docker run clip / graphite and

01:00:17,590 --> 01:00:24,250
then it will download the image and it

01:00:20,020 --> 01:00:26,470
will run the docker graphite image on

01:00:24,250 --> 01:00:28,810
your on your system and the same with

01:00:26,470 --> 01:00:31,420
compute nodes and you can spawn your own

01:00:28,810 --> 01:00:33,610
cluster without much hassle that's the

01:00:31,420 --> 01:00:37,450
theory we didn't see how this works out

01:00:33,610 --> 01:00:41,050
in practice but I i have a link here for

01:00:37,450 --> 01:00:43,780
my private block it has only one default

01:00:41,050 --> 01:00:47,530
entry but I would like to put this into

01:00:43,780 --> 01:00:50,470
a blog entry and then you should be able

01:00:47,530 --> 01:00:54,160
to easily create this this cluster that

01:00:50,470 --> 01:00:58,540
i just presented yeah that's about it

01:00:54,160 --> 01:01:01,690
and i'm in time but not in time i should

01:00:58,540 --> 01:01:04,720
have ten minutes to ask to it or equal

01:01:01,690 --> 01:01:08,340
to ask questions so if you have

01:01:04,720 --> 01:01:11,220
questions I'm here I leave tomorrow so

01:01:08,340 --> 01:01:14,730
you can ask me now you can ask me later

01:01:11,220 --> 01:01:14,730
whatever fits your needs

01:01:19,960 --> 01:01:23,799
okay thank you Krista

01:01:29,780 --> 01:01:31,840

YouTube URL: https://www.youtube.com/watch?v=VoS9uV5YCdI


