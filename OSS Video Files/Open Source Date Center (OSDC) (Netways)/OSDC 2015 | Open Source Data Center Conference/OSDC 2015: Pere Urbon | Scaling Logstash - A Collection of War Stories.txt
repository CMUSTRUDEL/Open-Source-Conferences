Title: OSDC 2015: Pere Urbon | Scaling Logstash - A Collection of War Stories
Publication date: 2015-04-30
Playlist: OSDC 2015 | Open Source Data Center Conference
Description: 
	In this talk, we will cover several strategies for successfully scaling Logstash. Through the lens of several real-life war stories, you willl learn how to make Logstash sing alongside RabbitMQ, Redis, ZeroMQ, Kafka and much more. If you are ready to grow at scale and make your infrastructure more resilient, this talk is for you.
Captions: 
	00:00:07,670 --> 00:00:14,430
hi listen to me okay yeah i'm peter i

00:00:11,730 --> 00:00:17,730
work for the elastic search doing

00:00:14,430 --> 00:00:19,800
logstash genet i'm going to try to

00:00:17,730 --> 00:00:23,130
explain you a lot of stories about the

00:00:19,800 --> 00:00:26,099
scaling log stacking here I used to

00:00:23,130 --> 00:00:28,980
always be a software engineer doing data

00:00:26,099 --> 00:00:32,669
databases persistency graph databases

00:00:28,980 --> 00:00:36,690
back in the days data analysis you

00:00:32,669 --> 00:00:38,520
organize a worship at force them force

00:00:36,690 --> 00:00:40,500
them is a free and open source European

00:00:38,520 --> 00:00:43,020
development meeting America that happens

00:00:40,500 --> 00:00:45,300
in Brazil's it's very nice and it

00:00:43,020 --> 00:00:49,969
completely free so we encourage you all

00:00:45,300 --> 00:00:49,969
of you to go yeah that's basically me

00:00:50,000 --> 00:00:57,329
before we start I want to ask you a few

00:00:53,370 --> 00:01:03,120
things and tell you a few things too how

00:00:57,329 --> 00:01:06,930
many of you here use log stash how many

00:01:03,120 --> 00:01:11,610
of you use it in production okay more or

00:01:06,930 --> 00:01:16,320
less the same another thing it's

00:01:11,610 --> 00:01:19,260
important today it is we got this so I

00:01:16,320 --> 00:01:22,890
got three books that somehow I need to

00:01:19,260 --> 00:01:24,900
get rid off so in the QA who asked

00:01:22,890 --> 00:01:27,330
questions whatever we will decide and

00:01:24,900 --> 00:01:30,660
see what do we do it and this is because

00:01:27,330 --> 00:01:32,640
of this that happens today today is and

00:01:30,660 --> 00:01:34,400
jordy it's a cutter on tradition in

00:01:32,640 --> 00:01:38,070
Barcelona I'm actually from Barcelona

00:01:34,400 --> 00:01:40,320
that where the women give books to the

00:01:38,070 --> 00:01:43,020
men and the men gift roses and actually

00:01:40,320 --> 00:01:45,630
nowadays also books to the women it's

00:01:43,020 --> 00:01:48,210
kind of the Sun valentine's day for the

00:01:45,630 --> 00:01:52,680
Catalan so it's good to give books to

00:01:48,210 --> 00:01:54,540
everybody it's yeah this is what we are

00:01:52,680 --> 00:01:58,140
going to talk today we're going to see

00:01:54,540 --> 00:01:59,910
what's log what is log stash because not

00:01:58,140 --> 00:02:01,950
all of you know it so should be some

00:01:59,910 --> 00:02:04,170
kind of a bit of interaction we are

00:02:01,950 --> 00:02:06,420
going to see actually the main focus of

00:02:04,170 --> 00:02:09,420
this is how to scale logstash entry

00:02:06,420 --> 00:02:12,030
alive different options that we can do

00:02:09,420 --> 00:02:15,439
it recommendations different other

00:02:12,030 --> 00:02:18,269
things and actually seeing a bunch of

00:02:15,439 --> 00:02:21,200
experience from from people dealing with

00:02:18,269 --> 00:02:21,200
these kind of architectures

00:02:21,330 --> 00:02:25,390
so let's try to introduce logstash for

00:02:24,190 --> 00:02:28,600
the ones of you that doesn't know it

00:02:25,390 --> 00:02:31,660
logstash is a tool that was created in

00:02:28,600 --> 00:02:34,030
order to shape blocks all of us hate

00:02:31,660 --> 00:02:35,950
being on call I mean who don't hate

00:02:34,030 --> 00:02:38,340
being on call it's not a human I mean

00:02:35,950 --> 00:02:42,850
being wake up at 3am in the more in

00:02:38,340 --> 00:02:45,550
silly am it's not it's not good you just

00:02:42,850 --> 00:02:49,060
see your your phone ringing ringing and

00:02:45,550 --> 00:02:50,770
just say no no matter what and actually

00:02:49,060 --> 00:02:52,690
you wake up at 3am and you wake up

00:02:50,770 --> 00:02:56,650
sleepy you don't know where the problem

00:02:52,690 --> 00:02:59,650
is you don't know what happened etc and

00:02:56,650 --> 00:03:02,560
you wake up and just start saying oh the

00:02:59,650 --> 00:03:04,239
database was the database was broken but

00:03:02,560 --> 00:03:07,000
do we have a database which set ablaze

00:03:04,239 --> 00:03:09,130
whatever I mean you need to focus a lot

00:03:07,000 --> 00:03:11,650
in order to know the problem and to look

00:03:09,130 --> 00:03:16,690
what the problem it really is so you see

00:03:11,650 --> 00:03:19,330
cars with these kind of wheels and the

00:03:16,690 --> 00:03:22,330
next day we are always sleepy because we

00:03:19,330 --> 00:03:24,790
try to play the hero of Game and working

00:03:22,330 --> 00:03:26,860
hard on night the next day you're not

00:03:24,790 --> 00:03:28,900
yeah you feel like this poor cat

00:03:26,860 --> 00:03:31,450
sleeping all day that's actually not

00:03:28,900 --> 00:03:36,489
good too so we should get all this

00:03:31,450 --> 00:03:38,709
information together and analyze it so

00:03:36,489 --> 00:03:42,220
we can understand it easily because if

00:03:38,709 --> 00:03:45,700
we try to the back this manually by crap

00:03:42,220 --> 00:03:49,359
and by ssh into different servers

00:03:45,700 --> 00:03:51,010
whatever it's not easy it makes no sense

00:03:49,359 --> 00:03:52,840
i mean i cannot really understand and

00:03:51,010 --> 00:03:55,359
see what's in something place here I

00:03:52,840 --> 00:03:58,269
mean it's an Apache log but it's it's

00:03:55,359 --> 00:04:03,640
tricky and it's hard to to make

00:03:58,269 --> 00:04:05,950
decisions on here so as I said it would

00:04:03,640 --> 00:04:08,230
to ship logs and it's good to put it in

00:04:05,950 --> 00:04:10,030
in central it plays I mean that's no

00:04:08,230 --> 00:04:11,920
discussion in here because like this

00:04:10,030 --> 00:04:13,450
then we can go to the database and see

00:04:11,920 --> 00:04:16,329
all this is the pattern that was

00:04:13,450 --> 00:04:19,600
happened this is the then maybe the

00:04:16,329 --> 00:04:23,590
number of 500 was the scale sk rotting

00:04:19,600 --> 00:04:26,740
or we got no memory left and it's easier

00:04:23,590 --> 00:04:29,380
than just doing some grapes in the in

00:04:26,740 --> 00:04:32,080
files and actually it's very good

00:04:29,380 --> 00:04:33,650
because then we can also use this and we

00:04:32,080 --> 00:04:37,550
can show to all our managers

00:04:33,650 --> 00:04:41,360
shiny pictures with colors that I mean

00:04:37,550 --> 00:04:43,160
be honest we like logs we like files but

00:04:41,360 --> 00:04:46,970
it's easier to understand this when

00:04:43,160 --> 00:04:49,160
something happens and it's cool so with

00:04:46,970 --> 00:04:51,770
this kind of tools we can archive this

00:04:49,160 --> 00:04:53,360
can't this this solutions and we try to

00:04:51,770 --> 00:04:55,360
understand we it's easier for us to

00:04:53,360 --> 00:05:00,680
understand the problem what happened and

00:04:55,360 --> 00:05:02,870
for this someone created log stash so

00:05:00,680 --> 00:05:05,690
this guy jordan says L was basically

00:05:02,870 --> 00:05:07,760
working and suffering all the things

00:05:05,690 --> 00:05:11,270
that we suffer every day and he decided

00:05:07,760 --> 00:05:13,250
to do that and it's a cool thing that we

00:05:11,270 --> 00:05:16,270
all use so if you find this get him a

00:05:13,250 --> 00:05:18,860
beer actually he was here last last year

00:05:16,270 --> 00:05:21,080
so and he got a very good impression of

00:05:18,860 --> 00:05:23,750
this conference now we I'm here to I

00:05:21,080 --> 00:05:28,580
hope to be on the same level but very

00:05:23,750 --> 00:05:32,300
complicated an important thing is we

00:05:28,580 --> 00:05:35,930
release the kraken today so log stash 1

00:05:32,300 --> 00:05:39,250
dot 50 air c3 it's fresh out of the box

00:05:35,930 --> 00:05:44,080
in a few minutes I think then a 10 a.m.

00:05:39,250 --> 00:05:47,810
pacific time so NGA is very very close

00:05:44,080 --> 00:05:50,449
so this means some think it was the last

00:05:47,810 --> 00:05:53,720
eight or nine months of effort in order

00:05:50,449 --> 00:05:55,849
to bring kinuha and it release out so

00:05:53,720 --> 00:05:58,639
you should all of you check if you use

00:05:55,849 --> 00:06:01,000
it and actually report issues because

00:05:58,639 --> 00:06:04,070
it's what makes an open source project

00:06:01,000 --> 00:06:08,780
very good that the community reports

00:06:04,070 --> 00:06:11,030
issues but let's go to the focus of this

00:06:08,780 --> 00:06:13,430
dog trying to scale logstash and

00:06:11,030 --> 00:06:15,680
actually not like this because this is a

00:06:13,430 --> 00:06:19,970
very huge plane so what we try to do is

00:06:15,680 --> 00:06:24,860
to have a small boxes small instances of

00:06:19,970 --> 00:06:27,169
log stash that are focused and and doing

00:06:24,860 --> 00:06:29,750
the history of all it all the time so

00:06:27,169 --> 00:06:32,240
yeah and having many of them so we can

00:06:29,750 --> 00:06:35,780
actually process a lot of information

00:06:32,240 --> 00:06:38,150
and we try to see a stories of real life

00:06:35,780 --> 00:06:40,340
because that's what mothers theory is

00:06:38,150 --> 00:06:44,570
very nice but practice is more

00:06:40,340 --> 00:06:46,430
interesting the first stage of when you

00:06:44,570 --> 00:06:46,950
try to let deploy your juice logstash is

00:06:46,430 --> 00:06:49,020
when you are

00:06:46,950 --> 00:06:51,630
you'll see development whatever and this

00:06:49,020 --> 00:06:54,270
looks like this you get log stash block

00:06:51,630 --> 00:06:57,710
stash is a shiny binary a long-running

00:06:54,270 --> 00:07:00,780
process that can get data from one place

00:06:57,710 --> 00:07:03,510
process it and put data in another place

00:07:00,780 --> 00:07:07,530
in here it's yeah get everything in your

00:07:03,510 --> 00:07:10,770
machine so you basically can experiment

00:07:07,530 --> 00:07:13,560
then you can do a lot of stuff just by

00:07:10,770 --> 00:07:15,570
this um we have something that I like in

00:07:13,560 --> 00:07:17,760
the community that's if something

00:07:15,570 --> 00:07:21,770
happens to we try to make the experiment

00:07:17,760 --> 00:07:24,410
experience of the newbie is very nice so

00:07:21,770 --> 00:07:26,760
actually children always says that if

00:07:24,410 --> 00:07:28,710
someone that rice log stash for the

00:07:26,760 --> 00:07:30,720
first time have a problem it's probably

00:07:28,710 --> 00:07:32,550
a back I would like to extend this if

00:07:30,720 --> 00:07:35,280
someone have a problem you guys should

00:07:32,550 --> 00:07:38,280
go and look at the mailing list look at

00:07:35,280 --> 00:07:39,720
their issues in that github and in

00:07:38,280 --> 00:07:42,510
different places because maybe another

00:07:39,720 --> 00:07:44,820
one is having the same problem and if we

00:07:42,510 --> 00:07:46,710
don't put everything in the same in one

00:07:44,820 --> 00:07:49,050
repository we are really not aware that

00:07:46,710 --> 00:07:53,610
this is very important for for a bunch

00:07:49,050 --> 00:07:56,340
of people but we are here to talk about

00:07:53,610 --> 00:07:59,220
the performance and scaling and

00:07:56,340 --> 00:08:01,440
installation the first tip that I'm will

00:07:59,220 --> 00:08:04,470
try to enforce the right to say two days

00:08:01,440 --> 00:08:08,040
we have grog grog it's a nice way of

00:08:04,470 --> 00:08:11,340
writing regular expressions I mean who

00:08:08,040 --> 00:08:14,070
of here like circular expressions know

00:08:11,340 --> 00:08:17,280
all of you are lying all of you are

00:08:14,070 --> 00:08:20,640
lying I mean do you remember this very

00:08:17,280 --> 00:08:23,130
big file but if Ichabod a file I mean to

00:08:20,640 --> 00:08:25,710
write a regular expression by the metal

00:08:23,130 --> 00:08:28,440
and like this it's very complicated so

00:08:25,710 --> 00:08:31,650
for this Jordan created crock that's

00:08:28,440 --> 00:08:34,200
basically a way of having names to a

00:08:31,650 --> 00:08:36,360
bunch of smaller regular expressions

00:08:34,200 --> 00:08:38,390
that are easy to understand and this in

00:08:36,360 --> 00:08:42,840
log stash is very nice but it's actually

00:08:38,390 --> 00:08:44,730
in the same way as regular expressions

00:08:42,840 --> 00:08:46,950
it's actually a problem too so you

00:08:44,730 --> 00:08:49,790
should be careful when you create a grog

00:08:46,950 --> 00:08:53,370
expression and trying to optimize it and

00:08:49,790 --> 00:08:55,470
and think about it also too that's doing

00:08:53,370 --> 00:08:58,860
a lot of work in that very easy it's

00:08:55,470 --> 00:09:00,329
very good but it's also very good that

00:08:58,860 --> 00:09:04,619
you guys when

00:09:00,329 --> 00:09:06,809
for this kind of this kind of way here

00:09:04,619 --> 00:09:08,100
you also take care of the regular of

00:09:06,809 --> 00:09:10,649
your drug expression because it's

00:09:08,100 --> 00:09:12,569
ninety-nine percent most most of the

00:09:10,649 --> 00:09:14,699
time it's a source of funness slowness

00:09:12,569 --> 00:09:17,999
you have a big pattern you have a

00:09:14,699 --> 00:09:23,189
complicated pattern and yeah it what

00:09:17,999 --> 00:09:24,989
makes a slow and another important tool

00:09:23,189 --> 00:09:29,040
that I want to share here it's something

00:09:24,989 --> 00:09:31,829
that bunch of us are working that's a

00:09:29,040 --> 00:09:33,360
tool that was originated to do

00:09:31,829 --> 00:09:34,980
integration testing but it's completely

00:09:33,360 --> 00:09:37,019
wrong because it's really doing

00:09:34,980 --> 00:09:40,139
performance testing that the gem to ruby

00:09:37,019 --> 00:09:42,420
gem that you can install in your indoor

00:09:40,139 --> 00:09:46,009
logstash installation in your smaller

00:09:42,420 --> 00:09:48,869
one so just one box and it performs a

00:09:46,009 --> 00:09:52,049
bunch of performance test it basically

00:09:48,869 --> 00:09:54,779
have a log stash configuration it gets a

00:09:52,049 --> 00:09:56,610
bunch of data and it run it and it gets

00:09:54,779 --> 00:09:58,799
the it gives you a lot of information

00:09:56,610 --> 00:10:01,649
like the purge the top person till the

00:09:58,799 --> 00:10:05,519
top ten to twenty percent of times etc

00:10:01,649 --> 00:10:07,589
so it's good it's actually helping us to

00:10:05,519 --> 00:10:10,799
do performance testing and it's actually

00:10:07,589 --> 00:10:13,649
helping a lot of some people in the

00:10:10,799 --> 00:10:16,679
internal in our in elasticsearch in our

00:10:13,649 --> 00:10:18,209
team but it's I wanted to help all of

00:10:16,679 --> 00:10:19,619
you because it's good that when you do

00:10:18,209 --> 00:10:21,869
that then when you have a problem a

00:10:19,619 --> 00:10:26,509
performance balm in you you go here you

00:10:21,869 --> 00:10:26,509
use it you tested yeah so you know it

00:10:28,399 --> 00:10:33,689
another this next step when you start

00:10:31,739 --> 00:10:35,610
doing something you start with the same

00:10:33,689 --> 00:10:40,649
box so you start with the same one log

00:10:35,610 --> 00:10:42,749
stash one output and but the second way

00:10:40,649 --> 00:10:46,230
of doing things it is you have one log

00:10:42,749 --> 00:10:48,209
stash in many outputs that's kind of for

00:10:46,230 --> 00:10:50,639
example you want to store the stuff in

00:10:48,209 --> 00:10:52,649
elasticsearch but you also want to send

00:10:50,639 --> 00:10:55,619
the notifications to pagerduty or you

00:10:52,649 --> 00:10:57,660
want to send emails whatever the most

00:10:55,619 --> 00:11:00,209
important thing in here to take a lot to

00:10:57,660 --> 00:11:03,299
be aware of it is that if you have one

00:11:00,209 --> 00:11:05,989
output that's very very slow you are as

00:11:03,299 --> 00:11:10,470
fast as the slowest output you have

00:11:05,989 --> 00:11:13,470
nowadays so it's important to when you

00:11:10,470 --> 00:11:13,800
have a situation like this and you see

00:11:13,470 --> 00:11:16,529
some

00:11:13,800 --> 00:11:20,550
slow performance that you try to think

00:11:16,529 --> 00:11:25,550
which ho how fast are the different

00:11:20,550 --> 00:11:25,550
outputs that that you guys are using

00:11:27,769 --> 00:11:34,019
yeah after seeing this very beginner or

00:11:30,930 --> 00:11:37,339
this early stages I want to show some

00:11:34,019 --> 00:11:40,680
architectures that are use it to scale

00:11:37,339 --> 00:11:42,300
the first piece of stuff that use it to

00:11:40,680 --> 00:11:45,630
scale is the lightweight chippers

00:11:42,300 --> 00:11:47,490
because logstash is writing in JRuby jet

00:11:45,630 --> 00:11:50,149
rob is very fast it's very nice but it

00:11:47,490 --> 00:11:54,720
is still the JVM in Java and in some

00:11:50,149 --> 00:11:57,480
situations or machines or BMS do I mean

00:11:54,720 --> 00:12:00,390
it's not feasible to have this this this

00:11:57,480 --> 00:12:03,089
virtual machine and it's actually some a

00:12:00,390 --> 00:12:04,860
lot of people don't like to have the

00:12:03,089 --> 00:12:07,260
Java Virtual Machine hanging around in

00:12:04,860 --> 00:12:09,540
involve boxes so that's lightweight

00:12:07,260 --> 00:12:13,200
seabirds dislike worshippers basically

00:12:09,540 --> 00:12:17,100
help you transform data or packet from

00:12:13,200 --> 00:12:20,520
one place to another place they are a

00:12:17,100 --> 00:12:23,459
few of them and yeah it basically helps

00:12:20,520 --> 00:12:26,820
you to transform send data from one

00:12:23,459 --> 00:12:29,040
small bugs or one given box to another

00:12:26,820 --> 00:12:30,690
player to another destination and

00:12:29,040 --> 00:12:34,860
sometimes also can be another log stash

00:12:30,690 --> 00:12:39,020
stuff the first one of them is log stash

00:12:34,860 --> 00:12:41,399
for water this is the former lumberjack

00:12:39,020 --> 00:12:52,529
how many of you here use log stash for

00:12:41,399 --> 00:12:54,420
water not so much do you like it yes I

00:12:52,529 --> 00:12:57,270
would one thing that electrum here it is

00:12:54,420 --> 00:13:00,000
that I was at the conference in march

00:12:57,270 --> 00:13:03,300
and one guy from a university they had

00:13:00,000 --> 00:13:05,520
in a small in each computer in their

00:13:03,300 --> 00:13:08,610
labs they had a small log stash for the

00:13:05,520 --> 00:13:10,949
order asian so they could send all the

00:13:08,610 --> 00:13:14,579
stud whether the disturbance were to the

00:13:10,949 --> 00:13:16,620
students were doing in in this machines

00:13:14,579 --> 00:13:18,600
to the centralized log stash and then

00:13:16,620 --> 00:13:20,370
they could analyze it I have something I

00:13:18,600 --> 00:13:22,890
forget is I tend to speak a very very

00:13:20,370 --> 00:13:25,500
fast so if you guys don't understand me

00:13:22,890 --> 00:13:27,750
or something you can't do like this or

00:13:25,500 --> 00:13:32,190
whatever in order to say is

00:13:27,750 --> 00:13:34,740
slow down yeah one thing very nice from

00:13:32,190 --> 00:13:37,080
logstash for water it that it supports

00:13:34,740 --> 00:13:39,390
TLS and security because if you have

00:13:37,080 --> 00:13:42,270
this very small boxes in a lab you made

00:13:39,390 --> 00:13:45,630
want to do encrypt it and to secure this

00:13:42,270 --> 00:13:47,970
communication it has low latency and low

00:13:45,630 --> 00:13:50,310
footprint it uses the lumberjack

00:13:47,970 --> 00:13:52,200
protocol and when a good things from the

00:13:50,310 --> 00:13:56,100
lumberjack protocol it is that it

00:13:52,200 --> 00:13:58,950
ensures that something is delivered so

00:13:56,100 --> 00:14:00,420
if nothing buried wrong or nothing you

00:13:58,950 --> 00:14:02,400
know like you go there with a bazooka

00:14:00,420 --> 00:14:04,290
and you kill the rock stations the locks

00:14:02,400 --> 00:14:06,900
the instance or you kill the the for

00:14:04,290 --> 00:14:09,960
water instance what you are sending it's

00:14:06,900 --> 00:14:15,810
going to be deliver so it's reliable and

00:14:09,960 --> 00:14:18,090
it's ready dingo so it's not java this

00:14:15,810 --> 00:14:20,060
is how you configure a log stash for

00:14:18,090 --> 00:14:23,430
water configuration Association lag

00:14:20,060 --> 00:14:26,490
adjacent style configuration file you

00:14:23,430 --> 00:14:29,540
can have yeah your servers your SSL

00:14:26,490 --> 00:14:33,150
certificate you can specify a time out

00:14:29,540 --> 00:14:35,880
you can have regular expressions in the

00:14:33,150 --> 00:14:38,400
in the file patterns you can ask stuff

00:14:35,880 --> 00:14:40,140
from the ester dean and one very

00:14:38,400 --> 00:14:41,970
important thing it is this server

00:14:40,140 --> 00:14:44,100
configuration in there if you have

00:14:41,970 --> 00:14:46,350
multiple of them basically it picks one

00:14:44,100 --> 00:14:48,420
randomly and if it's not responsive it

00:14:46,350 --> 00:14:50,730
gets another the other one it would be

00:14:48,420 --> 00:14:52,350
so before about having different output

00:14:50,730 --> 00:14:54,630
different shippers send in two different

00:14:52,350 --> 00:14:59,010
places so you get a bit more high

00:14:54,630 --> 00:15:01,500
availability another one another like

00:14:59,010 --> 00:15:04,380
the lightweight the cheaper it's low

00:15:01,500 --> 00:15:10,410
career how many of you here know or nu

00:15:04,380 --> 00:15:12,780
slow career not so much so the other

00:15:10,410 --> 00:15:14,970
ones just use log stash a bear by the

00:15:12,780 --> 00:15:18,690
metal I mean like the whole Java I

00:15:14,970 --> 00:15:21,500
thinking that's good um it's also right

00:15:18,690 --> 00:15:24,620
didn't go it's basically a fork of Las

00:15:21,500 --> 00:15:26,760
03 that one lobsters for water because

00:15:24,620 --> 00:15:30,300
one other thing that happened with log

00:15:26,760 --> 00:15:34,080
stash for the water and and lumberjack

00:15:30,300 --> 00:15:37,290
it is that is a lot of effort to get it

00:15:34,080 --> 00:15:41,480
done in up and and and it's go to and

00:15:37,290 --> 00:15:43,190
most of us are we developers so

00:15:41,480 --> 00:15:44,540
one thing that most of you might be

00:15:43,190 --> 00:15:46,339
aware that something is going to change

00:15:44,540 --> 00:15:50,720
with logstash for whatever even if it

00:15:46,339 --> 00:15:52,940
was one release and the thing one month

00:15:50,720 --> 00:15:54,199
ago with a lot of patches so it's gonna

00:15:52,940 --> 00:15:55,670
it's going to take one direction because

00:15:54,199 --> 00:15:58,250
it's not good when you have for

00:15:55,670 --> 00:16:00,050
something there that's not up to date so

00:15:58,250 --> 00:16:03,110
then you have the good thing of open

00:16:00,050 --> 00:16:05,510
source that you get Forks so this has a

00:16:03,110 --> 00:16:07,339
this was it's coming from a long search

00:16:05,510 --> 00:16:11,089
for were there it has a lot of more

00:16:07,339 --> 00:16:13,339
features it ships to 0 mq to disappear

00:16:11,089 --> 00:16:16,519
it can be monitored it can do some

00:16:13,339 --> 00:16:17,779
pre-processing in the low career there's

00:16:16,519 --> 00:16:21,250
something that looks as for water is not

00:16:17,779 --> 00:16:24,860
doing you can reload configurations yeah

00:16:21,250 --> 00:16:29,300
it is nice a piece of Sabrina to

00:16:24,860 --> 00:16:31,760
actually also write any go after we saw

00:16:29,300 --> 00:16:34,430
this like this law these lightweight

00:16:31,760 --> 00:16:36,860
chippers we have the message brokers

00:16:34,430 --> 00:16:39,139
it's the next step you start by sending

00:16:36,860 --> 00:16:41,199
but having a small workstation as more

00:16:39,139 --> 00:16:43,579
pms that you don't want to use a lot of

00:16:41,199 --> 00:16:46,819
bandwidth footprints you want to have a

00:16:43,579 --> 00:16:49,519
small asian and to ship stuff to another

00:16:46,819 --> 00:16:50,990
place but if you want to scale out an

00:16:49,519 --> 00:16:52,940
architecture you are using a message

00:16:50,990 --> 00:16:56,120
broker you're using ready if you are

00:16:52,940 --> 00:17:00,319
using RabbitMQ you're using Kafka you're

00:16:56,120 --> 00:17:04,549
using all these guys and you get this at

00:17:00,319 --> 00:17:06,890
the end so you get the shippers wine in

00:17:04,549 --> 00:17:09,679
one side you get the broker in front of

00:17:06,890 --> 00:17:12,169
that of the indexers and usually the

00:17:09,679 --> 00:17:15,740
shippers used to be lost as for water

00:17:12,169 --> 00:17:18,339
used to be locks the low career also can

00:17:15,740 --> 00:17:21,110
be also a log stash as a nation that

00:17:18,339 --> 00:17:24,079
view given the old versions the minnows

00:17:21,110 --> 00:17:26,510
asian option you get just a small the

00:17:24,079 --> 00:17:29,929
smallest set of capabilities unloaded

00:17:26,510 --> 00:17:32,090
and it's a bit motor more agile let's

00:17:29,929 --> 00:17:34,460
see like this but the important thing in

00:17:32,090 --> 00:17:37,130
here it is this broker site here because

00:17:34,460 --> 00:17:39,110
if something happened to the indexer

00:17:37,130 --> 00:17:42,230
site or do something happen the shipper

00:17:39,110 --> 00:17:44,030
side you get some buffer in there how

00:17:42,230 --> 00:17:48,260
many of you are building this kind of

00:17:44,030 --> 00:17:51,740
architectures okay so most of you can go

00:17:48,260 --> 00:17:54,640
home because that i'm just kidding um

00:17:51,740 --> 00:17:57,170
yeah mmm

00:17:54,640 --> 00:18:00,980
this is very good especially because in

00:17:57,170 --> 00:18:04,400
the indexer site logstash in one dot

00:18:00,980 --> 00:18:07,549
five until one dot five it's not having

00:18:04,400 --> 00:18:08,929
a purchasing cues so it has a buffer so

00:18:07,549 --> 00:18:10,850
basically you get an input you get a

00:18:08,929 --> 00:18:14,510
filter you get an output and it has a

00:18:10,850 --> 00:18:16,190
buffer of 20 events being in memory so

00:18:14,510 --> 00:18:19,429
if something happens to these 20 events

00:18:16,190 --> 00:18:21,890
and if something happens and you kill

00:18:19,429 --> 00:18:24,920
the machine the machine with a sickie

00:18:21,890 --> 00:18:28,730
nose up with a sick term its enforce it

00:18:24,920 --> 00:18:31,130
in 105 to gracefully they die so we're

00:18:28,730 --> 00:18:33,980
grateful you stop it sends Shout Out

00:18:31,130 --> 00:18:36,470
event so it's it's taking care of all

00:18:33,980 --> 00:18:39,200
this process but it is still not perfect

00:18:36,470 --> 00:18:41,870
so if you for example have an exception

00:18:39,200 --> 00:18:44,600
in a lock in a in a message that's not

00:18:41,870 --> 00:18:47,150
sanitized properly that's not an issue

00:18:44,600 --> 00:18:51,140
for now so it's good to have somehow

00:18:47,150 --> 00:18:55,610
these buffers in front if you yeah so

00:18:51,140 --> 00:18:58,640
you you get some kind of buffers again

00:18:55,610 --> 00:19:02,030
in the beginning another important thing

00:18:58,640 --> 00:19:05,049
it is that when you have a log stash

00:19:02,030 --> 00:19:09,340
node and plan and cluster or bunch of

00:19:05,049 --> 00:19:11,630
100 different log stashes personal blogs

00:19:09,340 --> 00:19:13,820
you cannot drill out the configuration

00:19:11,630 --> 00:19:15,980
and that's an issue that's a problem if

00:19:13,820 --> 00:19:17,809
you turn said to unlock such incidents

00:19:15,980 --> 00:19:20,179
down because you want to change

00:19:17,809 --> 00:19:22,580
something um this events are not

00:19:20,179 --> 00:19:23,929
processed if you want to keep it that's

00:19:22,580 --> 00:19:26,450
a good thing of having this broker

00:19:23,929 --> 00:19:28,160
installation here all this stuff is

00:19:26,450 --> 00:19:30,350
going to change I don't know if you are

00:19:28,160 --> 00:19:33,440
aware but we put it in github at the

00:19:30,350 --> 00:19:37,220
roadmap for the 20 release it's

00:19:33,440 --> 00:19:39,290
basically having a not the whole tree

00:19:37,220 --> 00:19:42,440
right but it's having a lot of features

00:19:39,290 --> 00:19:43,910
on top like this that you have the

00:19:42,440 --> 00:19:46,100
option of reloading the configuration

00:19:43,910 --> 00:19:48,290
that the different locks the instances

00:19:46,100 --> 00:19:50,210
can talk to each other and one very nice

00:19:48,290 --> 00:19:53,150
feature that's that we are going to have

00:19:50,210 --> 00:19:55,280
persistent cues so if something happened

00:19:53,150 --> 00:19:58,490
to the log stash instance in the middle

00:19:55,280 --> 00:20:00,110
of the event editing process all this

00:19:58,490 --> 00:20:03,380
information is going to be like pipe it

00:20:00,110 --> 00:20:06,690
in the in the in the log stash pipeline

00:20:03,380 --> 00:20:09,630
so we're swimming in a fittin on disk

00:20:06,690 --> 00:20:10,920
yeah but it still yeah not keeping out

00:20:09,630 --> 00:20:13,590
with this broken figured it's very good

00:20:10,920 --> 00:20:16,890
but I encourage all of you to take a

00:20:13,590 --> 00:20:21,860
look at the github two for the road map

00:20:16,890 --> 00:20:27,410
because it's a very next anything um

00:20:21,860 --> 00:20:29,760
yeah a lot of people or unless is my

00:20:27,410 --> 00:20:32,880
precondition over conception is starting

00:20:29,760 --> 00:20:36,060
to scale logstash be a radius so we are

00:20:32,880 --> 00:20:39,060
using this broker site here credit ready

00:20:36,060 --> 00:20:42,750
gdzies to start it start it works so

00:20:39,060 --> 00:20:45,090
it's basically the same thing about the

00:20:42,750 --> 00:20:47,010
locks that it's basically working how

00:20:45,090 --> 00:20:56,160
many of you here use logs and log stash

00:20:47,010 --> 00:20:58,080
with with radius so most of you one of

00:20:56,160 --> 00:21:01,800
the first stories that they want to

00:20:58,080 --> 00:21:03,270
share it is about monitoring so this is

00:21:01,800 --> 00:21:05,850
actually from a company here in Berlin

00:21:03,270 --> 00:21:07,710
they want to monitor the status of the

00:21:05,850 --> 00:21:11,210
different services they had and they

00:21:07,710 --> 00:21:14,010
needed to provide the different views

00:21:11,210 --> 00:21:15,510
one problem with monitoring is that you

00:21:14,010 --> 00:21:17,370
don't you want to be aware of something

00:21:15,510 --> 00:21:19,890
happened you want to be aware if a

00:21:17,370 --> 00:21:22,170
system is up and running and getting all

00:21:19,890 --> 00:21:24,330
the metrics so you want to actually have

00:21:22,170 --> 00:21:27,480
a unless are an architecture that that

00:21:24,330 --> 00:21:29,640
scales and for them the first move was

00:21:27,480 --> 00:21:33,000
to use Redis like I see from majority of

00:21:29,640 --> 00:21:37,350
you here read easy to start it works and

00:21:33,000 --> 00:21:40,200
now we we have also the cluster

00:21:37,350 --> 00:21:44,040
capabilities for Freddie's so you get a

00:21:40,200 --> 00:21:45,030
lot of power out of it and they

00:21:44,040 --> 00:21:48,570
basically build out a couple

00:21:45,030 --> 00:21:51,660
architecture using riders as a broker as

00:21:48,570 --> 00:21:55,680
a set rate is easy to scale it's simple

00:21:51,660 --> 00:21:57,720
it works and the coupling is good it

00:21:55,680 --> 00:21:59,580
gives you tons of freedom to extend you

00:21:57,720 --> 00:22:01,650
would not realize how many people is

00:21:59,580 --> 00:22:04,170
still building architectures that are

00:22:01,650 --> 00:22:05,700
highly coupler coupled so they are all

00:22:04,170 --> 00:22:07,500
working together and you have single

00:22:05,700 --> 00:22:09,120
point of thrillers so if something

00:22:07,500 --> 00:22:14,060
happened to this to this system

00:22:09,120 --> 00:22:16,740
everything blow up one of the

00:22:14,060 --> 00:22:18,810
not-so-good things that these guys took

00:22:16,740 --> 00:22:20,600
from from a scaling locks eyes that way

00:22:18,810 --> 00:22:22,250
it is that the

00:22:20,600 --> 00:22:24,710
not exactly from radius or from this

00:22:22,250 --> 00:22:30,010
architecture but for them was very

00:22:24,710 --> 00:22:31,790
important to set the the right mappings

00:22:30,010 --> 00:22:34,340
sometimes do you know the different

00:22:31,790 --> 00:22:38,030
right I guess in the left fault

00:22:34,340 --> 00:22:41,180
elasticsearch output we have a mapping

00:22:38,030 --> 00:22:43,130
that tries to say the way that the data

00:22:41,180 --> 00:22:45,260
is going to be starting in elastic

00:22:43,130 --> 00:22:48,050
search and we have to kind of feels we

00:22:45,260 --> 00:22:50,390
have the raw file and we have the other

00:22:48,050 --> 00:22:53,030
field so you have the IP for example you

00:22:50,390 --> 00:22:55,280
have the ipod row and the IP what it

00:22:53,030 --> 00:22:58,690
means that the a Pedro is not analyze it

00:22:55,280 --> 00:23:01,430
so if you are you have the full the full

00:22:58,690 --> 00:23:03,230
name for example Berlin if its name

00:23:01,430 --> 00:23:05,180
about the city it would be Berlin

00:23:03,230 --> 00:23:07,730
capital but if you have the analyzer

00:23:05,180 --> 00:23:09,230
field is going to be all equal so you

00:23:07,730 --> 00:23:11,450
can do search actually in there it's

00:23:09,230 --> 00:23:13,580
important to take a look at the mappings

00:23:11,450 --> 00:23:15,650
because yeah you that you can distort

00:23:13,580 --> 00:23:18,320
everything and you can use this default

00:23:15,650 --> 00:23:20,060
stuff it's good but it's actually when

00:23:18,320 --> 00:23:23,540
you want to scale an architecture very

00:23:20,060 --> 00:23:25,730
important to be aware of in another

00:23:23,540 --> 00:23:33,950
stick away from them was that it was not

00:23:25,730 --> 00:23:35,090
easy to monitor logstash that's actually

00:23:33,950 --> 00:23:37,760
one of the things that we want to change

00:23:35,090 --> 00:23:40,670
a 4 lakhs like 20 we want to move it to

00:23:37,760 --> 00:23:43,670
an API driving logstash so it easy for

00:23:40,670 --> 00:23:46,040
you guys to go there and ask an API and

00:23:43,670 --> 00:23:47,840
say how are you doing how many memory

00:23:46,040 --> 00:23:52,010
are you using what's the status of your

00:23:47,840 --> 00:23:54,050
of your queue and that is very good

00:23:52,010 --> 00:23:55,910
because like this you can set up a lot

00:23:54,050 --> 00:23:57,830
of monitoring tools right now to model

00:23:55,910 --> 00:23:59,180
block size is a good tool to build the

00:23:57,830 --> 00:24:05,270
monitoring system but it's not about

00:23:59,180 --> 00:24:08,500
Pluto model himself yeah and what I said

00:24:05,270 --> 00:24:11,060
learning from them from them was that

00:24:08,500 --> 00:24:14,750
that you store everything that is

00:24:11,060 --> 00:24:16,520
possible to store everything it doesn't

00:24:14,750 --> 00:24:18,680
mean that you have to do it and that's

00:24:16,520 --> 00:24:21,290
one of the most important takeaways a

00:24:18,680 --> 00:24:23,870
boot like to turn to uh to share today

00:24:21,290 --> 00:24:26,210
but in general that the database is a

00:24:23,870 --> 00:24:29,150
depressing system a pilum system like

00:24:26,210 --> 00:24:30,530
log stash can do a lot of stuff it

00:24:29,150 --> 00:24:33,470
doesn't mean that you have to do it so

00:24:30,530 --> 00:24:34,490
it's good to stop a bit and think what

00:24:33,470 --> 00:24:36,650
are we doing in

00:24:34,490 --> 00:24:38,929
our daily life it happens to me every

00:24:36,650 --> 00:24:40,970
day at work we had in pressure we have

00:24:38,929 --> 00:24:43,820
to the thing we have to deliver we offer

00:24:40,970 --> 00:24:45,080
to implement new stuff because we get

00:24:43,820 --> 00:24:47,510
the pressure of other people asking us

00:24:45,080 --> 00:24:49,700
to do it but it's good to think about it

00:24:47,510 --> 00:24:53,000
because then in the long run it's going

00:24:49,700 --> 00:24:54,920
to be more safe for your Bridget be here

00:24:53,000 --> 00:25:00,080
duty calls they're going to be less for

00:24:54,920 --> 00:25:02,540
sure that's one story another story it

00:25:00,080 --> 00:25:07,220
is about an intrusion detection system

00:25:02,540 --> 00:25:09,500
actually built in Australia what these

00:25:07,220 --> 00:25:12,679
guys try to do they had a problem they

00:25:09,500 --> 00:25:15,200
need to detect the performance of their

00:25:12,679 --> 00:25:17,270
firewall what happened there what what

00:25:15,200 --> 00:25:19,730
are the rules being used it with red

00:25:17,270 --> 00:25:21,710
Deidre and what they did it well it is

00:25:19,730 --> 00:25:24,559
what it is seen here down here so they

00:25:21,710 --> 00:25:27,470
got a TCP input to last it to log stash

00:25:24,559 --> 00:25:30,920
to a broker Polacks the plastic surg and

00:25:27,470 --> 00:25:33,170
then to cabana did a couple of all this

00:25:30,920 --> 00:25:34,840
architect abusing readies again because

00:25:33,170 --> 00:25:38,270
it was the easiest thing to start with

00:25:34,840 --> 00:25:41,630
they God are really a very cheap

00:25:38,270 --> 00:25:46,190
intrusion detection in China built with

00:25:41,630 --> 00:25:48,320
this kind of pieces of software it's

00:25:46,190 --> 00:25:50,090
very cheap compared to other IDs and

00:25:48,320 --> 00:25:52,220
very quick to return of investment and

00:25:50,090 --> 00:25:53,720
that's a good thing when you want to

00:25:52,220 --> 00:25:56,090
start something similar like this it's

00:25:53,720 --> 00:25:57,980
like we saw yesterday we saw a packet

00:25:56,090 --> 00:26:01,280
bit back a bit is basically getting

00:25:57,980 --> 00:26:03,860
packets getting low level network

00:26:01,280 --> 00:26:06,170
information and putting this through

00:26:03,860 --> 00:26:08,030
logstash to elasticsearch to get analyze

00:26:06,170 --> 00:26:12,380
it they basically build something very

00:26:08,030 --> 00:26:16,040
similar the bad things it is disappear

00:26:12,380 --> 00:26:20,030
disappear in put in Ruby alkylene JRuby

00:26:16,040 --> 00:26:22,700
and and and log stash ya tebya trick a

00:26:20,030 --> 00:26:25,280
big tricky so if you guys are using the

00:26:22,700 --> 00:26:28,790
the TCP input and you are having

00:26:25,280 --> 00:26:32,090
problems please report them because it

00:26:28,790 --> 00:26:35,900
has happened a lot in the previous in

00:26:32,090 --> 00:26:38,390
there in the past that this was leaky

00:26:35,900 --> 00:26:41,690
having a memory leaks having a bit of

00:26:38,390 --> 00:26:43,190
issues in here and something that they

00:26:41,690 --> 00:26:46,750
encounter here is that they needed to

00:26:43,190 --> 00:26:46,750
have the different

00:26:46,860 --> 00:26:53,040
setups two different databases so if

00:26:49,170 --> 00:26:57,330
Anelka set up separately insecure

00:26:53,040 --> 00:26:59,580
because yet they wanted that it was

00:26:57,330 --> 00:27:02,670
painful for them the very beginning and

00:26:59,580 --> 00:27:05,910
it's actually not the Lord logstash only

00:27:02,670 --> 00:27:08,670
related but from now on there is a

00:27:05,910 --> 00:27:12,210
security product made by elasticsearch

00:27:08,670 --> 00:27:14,160
that's called shield that's basically

00:27:12,210 --> 00:27:17,010
providing all these capabilities to have

00:27:14,160 --> 00:27:18,660
security and access control etc there

00:27:17,010 --> 00:27:20,190
are also another plugins that are open

00:27:18,660 --> 00:27:22,169
to that provides something similar or

00:27:20,190 --> 00:27:26,400
you actually can do it yourself via

00:27:22,169 --> 00:27:27,780
proxies or so yeah it's it's one of the

00:27:26,400 --> 00:27:29,520
not-so-good things so try to build the

00:27:27,780 --> 00:27:31,950
systems that yeah you need to provide

00:27:29,520 --> 00:27:37,490
some these two different clusters to

00:27:31,950 --> 00:27:40,980
analyze the data yeah learning from them

00:27:37,490 --> 00:27:44,250
not to have fear of using UDP maybe for

00:27:40,980 --> 00:27:45,720
you guys is not that good news or

00:27:44,250 --> 00:27:48,780
something very new that would appease

00:27:45,720 --> 00:27:50,880
video is working somehow good thora for

00:27:48,780 --> 00:27:53,760
local network and for a small and in

00:27:50,880 --> 00:27:56,760
yeah but for a lot of developers this is

00:27:53,760 --> 00:27:57,929
kind of rocket science so yeah no fear

00:27:56,760 --> 00:27:59,549
of using wood EP is actually working

00:27:57,929 --> 00:28:02,520
better in the Ruby environment or the

00:27:59,549 --> 00:28:04,230
herobrine vitamin yeah and the time

00:28:02,520 --> 00:28:05,970
before she'll keeping data silhouette

00:28:04,230 --> 00:28:07,620
and security was a difficult thing

00:28:05,970 --> 00:28:11,160
shield is this thing but there are a lot

00:28:07,620 --> 00:28:16,770
of other options open source options in

00:28:11,160 --> 00:28:18,480
the market and you all of you use it but

00:28:16,770 --> 00:28:21,270
that's how a configuration might look

00:28:18,480 --> 00:28:24,169
like for a radius input here basically

00:28:21,270 --> 00:28:26,640
as I said we have inputs and outputs and

00:28:24,169 --> 00:28:29,010
one of the good things of log stash is

00:28:26,640 --> 00:28:30,870
that we have a lot of default and this

00:28:29,010 --> 00:28:33,120
goes for very good from one side but

00:28:30,870 --> 00:28:34,500
also very bad from the other side it is

00:28:33,120 --> 00:28:37,860
very good because you can get the start

00:28:34,500 --> 00:28:40,140
that up and running very easy but it's

00:28:37,860 --> 00:28:41,640
actually very recommended and and if you

00:28:40,140 --> 00:28:42,990
have a complex thingy and you want to

00:28:41,640 --> 00:28:44,700
know what's going on under the hood

00:28:42,990 --> 00:28:47,220
whatever that you try to understand what

00:28:44,700 --> 00:28:49,710
this defaults are doing and in the case

00:28:47,220 --> 00:28:53,790
of a loss of rabies yeah of your name

00:28:49,710 --> 00:28:55,770
host the port passport timeout data type

00:28:53,790 --> 00:28:58,080
you want to use the number of batch

00:28:55,770 --> 00:29:00,360
thingy but no one of them is mandatory

00:28:58,080 --> 00:29:00,750
no one of them is required so you can

00:29:00,360 --> 00:29:03,030
have

00:29:00,750 --> 00:29:06,150
you actually have only an input radius

00:29:03,030 --> 00:29:11,940
and forget and there is an output with

00:29:06,150 --> 00:29:14,580
similar configuration options n the next

00:29:11,940 --> 00:29:17,970
one is all kind of recommended is to use

00:29:14,580 --> 00:29:23,030
RabbitMQ to have this broker this work

00:29:17,970 --> 00:29:23,030
your site is someone here using RabbitMQ

00:29:23,840 --> 00:29:31,590
okay not so much rabbeting do you all

00:29:29,640 --> 00:29:40,890
know what racketing view is right q

00:29:31,590 --> 00:29:45,920
system secure somehow fast yeah this

00:29:40,890 --> 00:29:48,210
example they had to manage 3 3500

00:29:45,920 --> 00:29:52,230
servers in two different in 12 different

00:29:48,210 --> 00:29:56,010
platforms this was for a big bank in the

00:29:52,230 --> 00:29:57,870
UK this was very painful and had a lot

00:29:56,010 --> 00:30:00,210
of problems building they they're

00:29:57,870 --> 00:30:04,680
managing architecture and they're

00:30:00,210 --> 00:30:06,570
logging server and their platform to get

00:30:04,680 --> 00:30:11,490
data but what was really happening in

00:30:06,570 --> 00:30:14,040
this very big set of machines and after

00:30:11,490 --> 00:30:17,070
they had some pain they start using a

00:30:14,040 --> 00:30:19,950
rabbit in view to separate the system so

00:30:17,070 --> 00:30:21,450
it could for example turn down some some

00:30:19,950 --> 00:30:23,790
of the intermediate systems in the

00:30:21,450 --> 00:30:27,140
pipeline they could turn down logstash

00:30:23,790 --> 00:30:29,250
they could upgrade something else and

00:30:27,140 --> 00:30:31,710
actually have the batter of rabbit imp

00:30:29,250 --> 00:30:34,680
you waiting there in order to deliver

00:30:31,710 --> 00:30:37,350
all the events important thing you want

00:30:34,680 --> 00:30:40,530
to share his that the after some pain so

00:30:37,350 --> 00:30:42,590
it's a bit of correlation happen to me

00:30:40,530 --> 00:30:45,480
always people start thinking about the

00:30:42,590 --> 00:30:48,030
escalade scalability and start thinking

00:30:45,480 --> 00:30:52,260
about how to make something bigger and

00:30:48,030 --> 00:30:54,210
more reliable and in beak after they

00:30:52,260 --> 00:30:58,170
have some pain and that's something we

00:30:54,210 --> 00:31:01,200
should try to avoid anything good news

00:30:58,170 --> 00:31:03,480
what things that they learn num that's

00:31:01,200 --> 00:31:06,780
what I said each platform was completely

00:31:03,480 --> 00:31:09,300
separated so this led them to turn take

00:31:06,780 --> 00:31:11,760
down for a while elasticsearch to take

00:31:09,300 --> 00:31:14,669
down for a while whatever and rabid MP

00:31:11,760 --> 00:31:18,029
was taking buffer and the bad things

00:31:14,669 --> 00:31:20,460
al has all of you that use it is using

00:31:18,029 --> 00:31:27,090
or have used Dravid impure is that it

00:31:20,460 --> 00:31:28,759
can be not so fast yeah and one very

00:31:27,090 --> 00:31:32,159
good thing that we have to be a bit

00:31:28,759 --> 00:31:35,460
careful but it's very powerful in log

00:31:32,159 --> 00:31:39,090
stash we have the worker idea so

00:31:35,460 --> 00:31:41,609
actually we can spin up for some inputs

00:31:39,090 --> 00:31:44,549
for some filters and for some outputs

00:31:41,609 --> 00:31:47,249
different threads it works in different

00:31:44,549 --> 00:31:50,669
ways but it's just they did their this

00:31:47,249 --> 00:31:52,919
very same idea in the three places you

00:31:50,669 --> 00:31:54,450
should do it but for them it was

00:31:52,919 --> 00:31:57,450
complicated because for example if you

00:31:54,450 --> 00:32:01,200
are using the multi-line filter yep then

00:31:57,450 --> 00:32:04,109
you cannot do it so it's this very

00:32:01,200 --> 00:32:10,309
similar some idea to be aware what you

00:32:04,109 --> 00:32:10,309
are doing and thinking a bit about sorry

00:32:12,889 --> 00:32:19,859
no but I guess it would be something

00:32:17,009 --> 00:32:25,230
similar I mean it's this media it's amp

00:32:19,859 --> 00:32:27,330
accused working learnings from these

00:32:25,230 --> 00:32:29,879
guys dacing to scale horizontally and

00:32:27,330 --> 00:32:32,489
vertically in vertically from the very

00:32:29,879 --> 00:32:34,109
beginning if the stuff is big you put

00:32:32,489 --> 00:32:36,809
not realize i was talking this morning

00:32:34,109 --> 00:32:39,690
to a company in barcelona building an ad

00:32:36,809 --> 00:32:42,090
server and in the ad market to beat to

00:32:39,690 --> 00:32:44,580
give adds two people in the internet we

00:32:42,090 --> 00:32:48,330
all hit ahead at but it's a very

00:32:44,580 --> 00:32:50,940
challenging environment to work they

00:32:48,330 --> 00:32:52,710
have the same problem they didn't

00:32:50,940 --> 00:32:54,899
thought about the scalability now they

00:32:52,710 --> 00:32:57,779
hit the limit in their in their platform

00:32:54,899 --> 00:33:00,119
so there the database is going down

00:32:57,779 --> 00:33:03,450
every time and that's cost money so

00:33:00,119 --> 00:33:05,309
eventually you will need it do it and if

00:33:03,450 --> 00:33:07,559
your manager your manager tells you do

00:33:05,309 --> 00:33:09,779
we have no time it's like when my

00:33:07,559 --> 00:33:12,720
manager told me in my previous life we

00:33:09,779 --> 00:33:15,149
have no time for test so it's just kind

00:33:12,720 --> 00:33:17,730
of a contradiction and the last one I

00:33:15,149 --> 00:33:20,039
want to share in here and actually one

00:33:17,730 --> 00:33:22,739
of the most interesting ones this is a

00:33:20,039 --> 00:33:25,049
another monitoring use case I tried to

00:33:22,739 --> 00:33:26,279
say that like to say 201 but because the

00:33:25,049 --> 00:33:28,559
kind of the extension of the previous

00:33:26,279 --> 00:33:31,110
one they were monitoring

00:33:28,559 --> 00:33:34,289
an Internet and IPTV network a crib

00:33:31,110 --> 00:33:36,299
equipment over the whole city of the

00:33:34,289 --> 00:33:39,120
node city but over the whole country of

00:33:36,299 --> 00:33:40,769
Portugal and they needed another editing

00:33:39,120 --> 00:33:42,870
system because if something happens to

00:33:40,769 --> 00:33:45,690
the machines to the rotors to the any

00:33:42,870 --> 00:33:47,460
kind of equipment happening here then

00:33:45,690 --> 00:33:51,330
there is a problem because yeah do you

00:33:47,460 --> 00:33:54,419
want to see the TV again after some pain

00:33:51,330 --> 00:33:59,580
they start using rubbing you who will

00:33:54,419 --> 00:34:04,080
see the architecture at the end good

00:33:59,580 --> 00:34:05,970
things again any component in his way of

00:34:04,080 --> 00:34:07,769
doing can generate the matrix can

00:34:05,970 --> 00:34:10,649
generate information and can put it to a

00:34:07,769 --> 00:34:12,929
pipeline to a buffer that's getting all

00:34:10,649 --> 00:34:15,329
this information buffered to another

00:34:12,929 --> 00:34:17,369
system that's going to be persisted in

00:34:15,329 --> 00:34:20,669
their situation it's very common to have

00:34:17,369 --> 00:34:23,460
a machine's broken so the graph abuse

00:34:20,669 --> 00:34:26,490
storm can be something else network

00:34:23,460 --> 00:34:31,560
filers so it had a biggest tolerant when

00:34:26,490 --> 00:34:33,810
something went wrong and the bad things

00:34:31,560 --> 00:34:35,879
they had more components to manage

00:34:33,810 --> 00:34:38,129
that's a biggest read off when you try

00:34:35,879 --> 00:34:39,810
to scale an architecture like this or

00:34:38,129 --> 00:34:42,329
any kind of architecture you have to

00:34:39,810 --> 00:34:43,770
think twice what's your knowledge base

00:34:42,329 --> 00:34:45,720
what's your number of people you are

00:34:43,770 --> 00:34:47,550
trying you are having photo/bill this

00:34:45,720 --> 00:34:50,579
kind of stuff yeah because more

00:34:47,550 --> 00:34:54,470
resources means more cost and more time

00:34:50,579 --> 00:34:54,470
in order to manage all these platforms

00:34:55,609 --> 00:35:01,680
as I said again same architecture

00:34:58,950 --> 00:35:06,180
pattern broker provides a lot of

00:35:01,680 --> 00:35:09,599
flexibility even if it readies mpq Kafka

00:35:06,180 --> 00:35:12,990
zeromq whatever do it it's going to

00:35:09,599 --> 00:35:16,500
provide you a lot of power and iteration

00:35:12,990 --> 00:35:17,849
of responsibilities this at the end it

00:35:16,500 --> 00:35:20,130
gives you a clear view of what's

00:35:17,849 --> 00:35:21,869
happening if you have a small boxes that

00:35:20,130 --> 00:35:24,150
are doing whatever they are so puzzling

00:35:21,869 --> 00:35:26,579
even if it's also only for forward slash

00:35:24,150 --> 00:35:29,790
if you have any small box as processing

00:35:26,579 --> 00:35:33,450
one type of lock if you have a 1000

00:35:29,790 --> 00:35:35,520
lines configuration for log stash it's

00:35:33,450 --> 00:35:38,099
going to be hard to understand so it's

00:35:35,520 --> 00:35:39,660
better in order to get one for one side

00:35:38,099 --> 00:35:42,420
more performant and for the other side

00:35:39,660 --> 00:35:46,530
an easy of management to have a smaller

00:35:42,420 --> 00:35:49,650
figuration files I mean I've seen huges

00:35:46,530 --> 00:35:52,380
configuration logstash so I think it's

00:35:49,650 --> 00:35:54,420
not good and actually my anytime I see a

00:35:52,380 --> 00:36:00,240
big configuration file photo for log

00:35:54,420 --> 00:36:01,859
stash it's like pain sure it yeah this

00:36:00,240 --> 00:36:04,170
is what I was talking about this was the

00:36:01,859 --> 00:36:06,000
architecture for these guys in endless

00:36:04,170 --> 00:36:09,089
van in porterville they basically had

00:36:06,000 --> 00:36:11,819
all the equipment sending information to

00:36:09,089 --> 00:36:15,420
log stash be a TCP UDP syslog whatever

00:36:11,819 --> 00:36:20,430
and then all this pipe but kind of

00:36:15,420 --> 00:36:23,520
alerting route roll system that was

00:36:20,430 --> 00:36:25,980
called expert yeah this was yeah getting

00:36:23,520 --> 00:36:28,650
data from a database and then generating

00:36:25,980 --> 00:36:31,440
logs that again with a pipe it to a log

00:36:28,650 --> 00:36:33,780
stash through a file TCP and then to the

00:36:31,440 --> 00:36:36,900
letting system what happened if Esper

00:36:33,780 --> 00:36:38,670
goes down what happened if the first log

00:36:36,900 --> 00:36:40,890
stash goes down you cannot really change

00:36:38,670 --> 00:36:44,460
any any company in here without having

00:36:40,890 --> 00:36:49,710
pain this is more common that what we

00:36:44,460 --> 00:36:51,780
think still now and this is how they

00:36:49,710 --> 00:36:55,049
build it at the end they had the same

00:36:51,780 --> 00:36:57,390
thing but with a RabbitMQ buffer what

00:36:55,049 --> 00:37:00,180
happened here they could change expert

00:36:57,390 --> 00:37:05,790
they could change one of the blog stash

00:37:00,180 --> 00:37:09,299
boxes in here yeah it's more it consider

00:37:05,790 --> 00:37:12,170
half thing with log stash from RabbitMQ

00:37:09,299 --> 00:37:17,880
to graphite in order to get the matrix

00:37:12,170 --> 00:37:20,849
it's very powerful so it only needs us

00:37:17,880 --> 00:37:23,520
to stop a bit more and think about what

00:37:20,849 --> 00:37:25,859
we are trying to to build because all

00:37:23,520 --> 00:37:30,180
this decision from them was based on

00:37:25,859 --> 00:37:32,670
pain so my poor don't take away from

00:37:30,180 --> 00:37:38,220
today to it is don't wait for pain pain

00:37:32,670 --> 00:37:41,040
is bad I don't like pain and how do you

00:37:38,220 --> 00:37:42,990
make it happen like this very easy only

00:37:41,040 --> 00:37:44,970
the host is needed for rapid mq to work

00:37:42,990 --> 00:37:49,140
at the beginning you only you have to

00:37:44,970 --> 00:37:50,970
say the server others the rest are good

00:37:49,140 --> 00:37:53,490
defaults for the RabbitMQ configuration

00:37:50,970 --> 00:37:56,069
that's a button for log stash if there

00:37:53,490 --> 00:37:58,440
is a good default we use it

00:37:56,069 --> 00:38:01,319
you can do a lot of things here use ssl

00:37:58,440 --> 00:38:05,190
verify SS validate the ssl certificate

00:38:01,319 --> 00:38:06,769
in a belated debugging USB host yeah and

00:38:05,190 --> 00:38:11,279
it is also an output for that thingy

00:38:06,769 --> 00:38:13,140
that has very similar options but we

00:38:11,279 --> 00:38:17,910
have more it's not only that logstash

00:38:13,140 --> 00:38:20,819
Rupert radius and RabbitMQ we have Kafka

00:38:17,910 --> 00:38:22,979
from one dot five I think before one dot

00:38:20,819 --> 00:38:26,160
five it was a kind of a country plugin

00:38:22,979 --> 00:38:28,319
Kafka but nowadays it's also supported

00:38:26,160 --> 00:38:32,940
by elasticsearch it's a lot of azor

00:38:28,319 --> 00:38:35,249
working in this in this input Kafka is a

00:38:32,940 --> 00:38:38,249
kind of a very log fire I'm very

00:38:35,249 --> 00:38:40,319
distributed lock system that lets you

00:38:38,249 --> 00:38:42,059
mostly do the same thing here it led to

00:38:40,319 --> 00:38:46,109
implement queues it led to implement

00:38:42,059 --> 00:38:50,269
public subscrib patterns yeah and it

00:38:46,109 --> 00:38:53,819
works very very well same thing here

00:38:50,269 --> 00:38:57,359
configuration easy anything that's here

00:38:53,819 --> 00:38:58,890
it's a default so yeah it's very easy to

00:38:57,359 --> 00:39:02,459
get started but it's actually very

00:38:58,890 --> 00:39:04,499
important to know all this configuration

00:39:02,459 --> 00:39:08,309
option in order that when you want to to

00:39:04,499 --> 00:39:10,319
get some how important things in if you

00:39:08,309 --> 00:39:11,630
are using Kafka it important to know how

00:39:10,319 --> 00:39:14,910
many topics that you want to create

00:39:11,630 --> 00:39:18,449
because yeah this would kind of narrow

00:39:14,910 --> 00:39:21,499
your search and your performance to a

00:39:18,449 --> 00:39:24,119
given set of yeah logstash instances

00:39:21,499 --> 00:39:27,079
there is more options in here so it's

00:39:24,119 --> 00:39:31,440
not like this this is very big the kafka

00:39:27,079 --> 00:39:38,069
different capabilities and we also have

00:39:31,440 --> 00:39:40,609
0 and Q 0 m qi is a system to kind of I

00:39:38,069 --> 00:39:44,239
like to say they are socket on asteroid

00:39:40,609 --> 00:39:47,430
it is very nice for example in my last

00:39:44,239 --> 00:39:49,259
employee before elasticsearch we were

00:39:47,430 --> 00:39:51,809
building ask actually also on that

00:39:49,259 --> 00:39:53,009
platform and using zeromq lot in order

00:39:51,809 --> 00:39:56,130
to speed up the communication between

00:39:53,009 --> 00:39:57,959
the systems yeah and you can use it with

00:39:56,130 --> 00:40:01,769
with logstash very simple lonely you

00:39:57,959 --> 00:40:04,529
need to specify the topology it is

00:40:01,769 --> 00:40:06,509
what's actually in the in the example

00:40:04,529 --> 00:40:08,219
that we saw before one of the biggest

00:40:06,509 --> 00:40:11,059
things for them to speed up the

00:40:08,219 --> 00:40:14,430
communication between the components

00:40:11,059 --> 00:40:17,519
but we have many others we have bieber

00:40:14,430 --> 00:40:21,109
we have mattila hecka may ask you how

00:40:17,519 --> 00:40:26,880
many of you if some one of us using haga

00:40:21,109 --> 00:40:29,700
don't you know what it is okay Bieber it

00:40:26,880 --> 00:40:33,869
too I didn't Python hecka it's

00:40:29,700 --> 00:40:35,400
frightening rest i think rest Golic d we

00:40:33,869 --> 00:40:38,130
have a lot of options for the good thing

00:40:35,400 --> 00:40:41,519
it is go there and try to build your own

00:40:38,130 --> 00:40:44,490
or your use whatever it is if it looks

00:40:41,519 --> 00:40:47,700
like its logs type obviously better but

00:40:44,490 --> 00:40:51,329
if anything here we should go and remove

00:40:47,700 --> 00:40:53,700
the idea of having this kind of super

00:40:51,329 --> 00:40:59,180
effort thingy and have all the logs ship

00:40:53,700 --> 00:41:02,579
it to somewhere that's basically me so

00:40:59,180 --> 00:41:05,549
only 45 minutes me talking do you have

00:41:02,579 --> 00:41:07,230
questions keep in mind we're either half

00:41:05,549 --> 00:41:21,769
book so I have a way to bribe you for

00:41:07,230 --> 00:41:21,769
asking questions yeah tell me sorry yep

00:41:40,490 --> 00:41:47,580
yeah but children's please repeat to

00:41:44,310 --> 00:41:51,300
crush yeah sorry he was asking about the

00:41:47,580 --> 00:41:53,430
the he had the problem of that nope not

00:41:51,300 --> 00:41:54,900
any one is allowed to see everything and

00:41:53,430 --> 00:41:57,270
when a situation that happened with with

00:41:54,900 --> 00:41:59,190
elastic search is that before shield and

00:41:57,270 --> 00:42:02,820
before many other plugins use it to do

00:41:59,190 --> 00:42:04,770
this thing everyone can see anything so

00:42:02,820 --> 00:42:09,420
you can you could have a manager that

00:42:04,770 --> 00:42:12,300
can ask a question to your database and

00:42:09,420 --> 00:42:15,690
you can have yeah everyone doing the

00:42:12,300 --> 00:42:17,580
same thing no rules no users whatever so

00:42:15,690 --> 00:42:19,710
he was asking about the shield if she'll

00:42:17,580 --> 00:42:22,440
can do that she'll can do that but jill

00:42:19,710 --> 00:42:25,230
has a contra part of that that's a

00:42:22,440 --> 00:42:27,990
commercial plugin so if you are in

00:42:25,230 --> 00:42:33,630
subscription whatever you get it but

00:42:27,990 --> 00:42:40,050
yeah it's not open source yeah or

00:42:33,630 --> 00:42:48,620
questioned you yeah you were you were

00:42:40,050 --> 00:42:48,620
the first to say yep

00:43:01,480 --> 00:43:09,410
Davy office so basically the question is

00:43:03,950 --> 00:43:11,660
are the shippers or is good to do some

00:43:09,410 --> 00:43:13,370
kind of transformation or that or

00:43:11,660 --> 00:43:15,370
adaptation of your messages and your log

00:43:13,370 --> 00:43:18,680
formats in the shippers or in the

00:43:15,370 --> 00:43:21,560
indexers may take away until is that too

00:43:18,680 --> 00:43:23,600
complicated question so our idea for the

00:43:21,560 --> 00:43:25,610
or my idea for the shippers is that

00:43:23,600 --> 00:43:28,130
something very small very simple that

00:43:25,610 --> 00:43:30,620
gets data from a pc station for a

00:43:28,130 --> 00:43:32,720
workstation for a meal for IBM and send

00:43:30,620 --> 00:43:36,620
it to someone else with more resources

00:43:32,720 --> 00:43:41,030
and more RAM memory CPU whatever that

00:43:36,620 --> 00:43:44,210
lets you do that as I said before it's

00:43:41,030 --> 00:43:46,430
kind of a you know logstash career does

00:43:44,210 --> 00:43:50,780
some of this processing in the shipper

00:43:46,430 --> 00:43:52,370
side logstash forward there is not in my

00:43:50,780 --> 00:43:54,140
experience is very good it's better when

00:43:52,370 --> 00:43:56,030
you do this processing in the indexer

00:43:54,140 --> 00:43:58,400
side because you have more resources and

00:43:56,030 --> 00:44:00,080
you can actually get there you know and

00:43:58,400 --> 00:44:05,810
you are not polluting your you're a

00:44:00,080 --> 00:44:08,230
small machine that does this um yeah you

00:44:05,810 --> 00:44:08,230
sorry

00:44:34,170 --> 00:44:39,580
the question was about the data

00:44:37,060 --> 00:44:43,750
retention and kind of best practices for

00:44:39,580 --> 00:44:48,010
for data retention do you guys know

00:44:43,750 --> 00:44:50,230
creator yeah so the basic idea of

00:44:48,010 --> 00:44:51,910
creator is to do that to a schedule

00:44:50,230 --> 00:44:54,160
something from time to time and move

00:44:51,910 --> 00:44:58,690
indexes from one place to another that's

00:44:54,160 --> 00:45:01,180
actually the way we try to say that

00:44:58,690 --> 00:45:03,040
people does this job otherwise you will

00:45:01,180 --> 00:45:04,990
have to somehow create something similar

00:45:03,040 --> 00:45:08,290
like whereas log stash is not intended

00:45:04,990 --> 00:45:10,270
to do data yeah to apply retention

00:45:08,290 --> 00:45:11,740
policies simple as someone that sends

00:45:10,270 --> 00:45:32,670
stuff from one place to another and

00:45:11,740 --> 00:45:32,670
enrich it on the process okay okay

00:45:36,819 --> 00:45:41,839
okay so all that in open issues for

00:45:39,980 --> 00:45:43,970
curator open another issue and say this

00:45:41,839 --> 00:45:55,430
is very important for me I wasn't aware

00:45:43,970 --> 00:45:57,619
of that thank you ma'am yeah basically

00:45:55,430 --> 00:46:00,410
the same ideas or you go created or you

00:45:57,619 --> 00:46:02,260
go yourself if greater is not giving you

00:46:00,410 --> 00:46:05,000
the disp our you need will need to the

00:46:02,260 --> 00:46:18,049
do-it-yourselfer do it something else I

00:46:05,000 --> 00:46:20,569
think was you down there the question

00:46:18,049 --> 00:46:22,280
was about event correlation and when you

00:46:20,569 --> 00:46:24,410
are I mean you have one event that's the

00:46:22,280 --> 00:46:26,180
start another event at the end whatever

00:46:24,410 --> 00:46:39,069
there are a few filters that does the

00:46:26,180 --> 00:46:39,069
job in different ways you yeah

00:46:53,599 --> 00:47:04,290
no it's no in purpose basically because

00:46:57,750 --> 00:47:06,960
i wanted to show two very similar small

00:47:04,290 --> 00:47:11,040
lightweight chippers that does the work

00:47:06,960 --> 00:47:13,890
if i must say the way we handle syslog

00:47:11,040 --> 00:47:16,230
it's going to change too because there

00:47:13,890 --> 00:47:18,900
is many different options of syslog and

00:47:16,230 --> 00:47:21,329
and many different options of sin taxes

00:47:18,900 --> 00:47:26,390
etc but yeah it's a very good option too

00:47:21,329 --> 00:47:26,390
if it works sorry

00:47:38,220 --> 00:47:53,980
if it can hear ya I forget the order I

00:47:45,820 --> 00:48:01,630
don't know you can you say it again

00:47:53,980 --> 00:48:03,970
please aax I think there is an open

00:48:01,630 --> 00:48:07,330
issue for for supporting a 84 logstash

00:48:03,970 --> 00:48:19,380
for water but I really cannot answer to

00:48:07,330 --> 00:48:19,380
this question I'm sorry is that yeah

00:48:28,170 --> 00:48:39,400
yeah yeah so the question was about

00:48:37,090 --> 00:48:48,060
having buffers between the log stash for

00:48:39,400 --> 00:48:48,060
water and log stash instance right yeah

00:48:48,480 --> 00:48:52,930
actually that the important thing we

00:48:51,220 --> 00:48:55,000
have to take a we're here it is that any

00:48:52,930 --> 00:49:00,220
kind of buffer that you put before clock

00:48:55,000 --> 00:49:01,900
stash it good so that in some places I

00:49:00,220 --> 00:49:10,830
didn't do it it doesn't mean that you

00:49:01,900 --> 00:49:10,830
don't have to do it yeah

00:49:17,690 --> 00:49:22,680
did you open an issue for that because

00:49:19,800 --> 00:49:24,720
it should not be an issue so go there

00:49:22,680 --> 00:49:28,850
and open an issue for that because it

00:49:24,720 --> 00:49:28,850
should not be a I mean if it's a problem

00:49:51,599 --> 00:49:55,960
about that this is a very good thing I

00:49:54,190 --> 00:49:58,030
mean you I mean I encourage you to open

00:49:55,960 --> 00:50:01,750
an issue there and we might investigate

00:49:58,030 --> 00:50:03,280
it more because it should not drop in

00:50:01,750 --> 00:50:13,390
some in a lot of situation you

00:50:03,280 --> 00:50:15,609
should not drop drop messages there are

00:50:13,390 --> 00:50:19,540
a lot of a lot of fixes I can I don't

00:50:15,609 --> 00:50:21,520
know it all of them by memory but yeah

00:50:19,540 --> 00:50:24,099
there is a lot of improvement I mean

00:50:21,520 --> 00:50:27,010
improvement of robustness shutdown

00:50:24,099 --> 00:50:38,349
sequence it's got improve its mean the

00:50:27,010 --> 00:50:46,619
list is huge yeah ah it's this is being

00:50:38,349 --> 00:50:49,150
recorded right it's complicated to say

00:50:46,619 --> 00:50:51,940
what I can say is what it took to make

00:50:49,150 --> 00:50:56,410
one dot five it took more than eight

00:50:51,940 --> 00:50:59,710
months the idea is not to wait until

00:50:56,410 --> 00:51:03,640
until to the 0 to have newer stuff from

00:50:59,710 --> 00:51:06,960
the 20 roadmap in so the idea is to have

00:51:03,640 --> 00:51:11,050
one that's it from the tavern tetrahedra

00:51:06,960 --> 00:51:16,140
um yeah so I cannot promise anything I'm

00:51:11,050 --> 00:51:16,140
sorry say

00:51:18,589 --> 00:51:21,769
until the question is what about

00:51:20,269 --> 00:51:24,969
implementation insistently can you

00:51:21,769 --> 00:51:24,969
elaborate the ghost in a bit more I

00:51:36,609 --> 00:51:42,969
recall some things seemed something but

00:51:40,489 --> 00:51:45,349
I'm not sure you should to look at the

00:51:42,969 --> 00:51:47,119
log stash client organization in github

00:51:45,349 --> 00:51:49,519
because I think it's something there I

00:51:47,119 --> 00:51:52,670
mean it's more than 180 different

00:51:49,519 --> 00:51:55,969
plugins in the locks organization so I

00:51:52,670 --> 00:52:00,829
don't know all of them by hand more

00:51:55,969 --> 00:52:03,039
questions do you really want a book

00:52:00,829 --> 00:52:03,039
right

00:52:13,120 --> 00:52:18,650
that's a very it's a very good good

00:52:15,710 --> 00:52:20,420
question how do you archiving of logs

00:52:18,650 --> 00:52:24,650
because they have to have it for ten

00:52:20,420 --> 00:52:27,980
years that's a lot I really cannot

00:52:24,650 --> 00:52:30,110
recommend you anything because I mean

00:52:27,980 --> 00:52:33,740
it's very tricky very tricky my Dominion

00:52:30,110 --> 00:52:37,250
actually to do archiving of data in a

00:52:33,740 --> 00:52:52,040
secure way for ten years it's a whole

00:52:37,250 --> 00:52:53,510
release science yeah yeah yeah yeah yeah

00:52:52,040 --> 00:52:55,010
but but it's right or something else is

00:52:53,510 --> 00:52:57,140
the easy thing but where do you write it

00:52:55,010 --> 00:53:01,070
that's a good question because I that's

00:52:57,140 --> 00:53:12,950
something I cannot do sorry yeah it's

00:53:01,070 --> 00:53:16,520
eff for 10 years interesting sorry give

00:53:12,950 --> 00:53:20,390
me this 10 years I think I don't have

00:53:16,520 --> 00:53:24,040
this as much of all dvds yeah poor

00:53:20,390 --> 00:53:24,040
probably sorry

00:53:52,060 --> 00:53:59,360
you say very expensive things more

00:53:56,480 --> 00:54:03,980
questions we need to figure it out a way

00:53:59,360 --> 00:54:06,310
to give these three books out so no more

00:54:03,980 --> 00:54:06,310
questions

00:54:17,600 --> 00:54:24,930
so the question was about multi dated

00:54:21,690 --> 00:54:28,920
the multi-tenancy stuff for log stars in

00:54:24,930 --> 00:54:30,840
elastic searcher for rock stash now it's

00:54:28,920 --> 00:54:33,270
just the binary thingy it's just a

00:54:30,840 --> 00:54:34,920
process that's running there in its all

00:54:33,270 --> 00:54:37,950
your responsibility to manage different

00:54:34,920 --> 00:54:40,650
instances and to build different yeah

00:54:37,950 --> 00:54:43,350
multiple stuff and put it whatever you

00:54:40,650 --> 00:54:46,020
want so it's just a beam log stash that

00:54:43,350 --> 00:54:50,250
gets your data and the ships to another

00:54:46,020 --> 00:54:51,860
place and for elastic search it is it's

00:54:50,250 --> 00:54:55,530
actually possible to do multi-tenancy

00:54:51,860 --> 00:54:57,450
and to have it in different nodes and to

00:54:55,530 --> 00:55:01,560
have stuff routed to one place and a

00:54:57,450 --> 00:55:04,860
stuffed with it to another place if

00:55:01,560 --> 00:55:10,230
they're asking too many questions very

00:55:04,860 --> 00:55:12,120
good keep going so this is some big

00:55:10,230 --> 00:55:13,770
question there is a tool within the

00:55:12,120 --> 00:55:16,980
system they get your poster which is

00:55:13,770 --> 00:55:18,960
called journal CTL to gilf and that

00:55:16,980 --> 00:55:24,630
pretty much solves it because then you

00:55:18,960 --> 00:55:28,070
can use a GILF input disclaimer I don't

00:55:24,630 --> 00:55:28,070
pay him he's doing this for free

00:55:50,600 --> 00:56:03,330
did you create a pull request to update

00:55:53,130 --> 00:56:28,380
it to one that one or why um yo down

00:56:03,330 --> 00:56:31,220
there don't use it you always should

00:56:28,380 --> 00:56:31,220
have this emergent

00:56:35,359 --> 00:56:52,109
yes always so the question was about the

00:56:49,319 --> 00:56:55,559
DHD embedded elastic search option in

00:56:52,109 --> 00:57:00,450
the elastic search output if it's not

00:56:55,559 --> 00:57:03,479
for development don't do it use the HTTP

00:57:00,450 --> 00:57:05,220
or put would use something else this is

00:57:03,479 --> 00:57:08,190
something that's only for development

00:57:05,220 --> 00:57:10,109
for playing for dying yeah and whatever

00:57:08,190 --> 00:57:12,329
it's not an option it's like a lot of

00:57:10,109 --> 00:57:14,309
people using it in real life try to use

00:57:12,329 --> 00:57:17,579
this client to go to another cluster

00:57:14,309 --> 00:57:20,819
whatever no go to transfer cry and go to

00:57:17,579 --> 00:57:22,650
HTTP client go to something that you

00:57:20,819 --> 00:57:28,829
build your own but don't use the name

00:57:22,650 --> 00:57:38,099
edit option we have time from one or two

00:57:28,829 --> 00:57:40,430
more questions keep in mind so more

00:57:38,099 --> 00:57:40,430
questions

00:57:58,680 --> 00:58:02,380
it's problem it's problematic it's

00:58:00,940 --> 00:58:08,140
always feel so it's very problematic

00:58:02,380 --> 00:58:09,280
yeah not a great solution now but you

00:58:08,140 --> 00:58:13,080
are not getting away from log stuff

00:58:09,280 --> 00:58:17,250
right you are reducing logstash anymore

00:58:13,080 --> 00:58:17,250
okay all right what it was like what

00:58:17,280 --> 00:58:26,170
yeah yeah I mean log stash is the

00:58:19,600 --> 00:58:34,600
delivery men so more questions no more

00:58:26,170 --> 00:58:38,020
questions okay so who want a book now

00:58:34,600 --> 00:58:43,930
only three can I do like this and you

00:58:38,020 --> 00:58:48,220
fight so let's try to send this you for

00:58:43,930 --> 00:58:58,450
asking a lot of questions please the

00:58:48,220 --> 00:59:00,640
other one don't kill me just try to make

00:58:58,450 --> 00:59:10,000
something even I lifted them here do

00:59:00,640 --> 00:59:13,780
whatever you want no like here I don't

00:59:10,000 --> 00:59:16,170
want to decide so thank you thank you

00:59:13,780 --> 00:59:16,170
very much

00:59:18,510 --> 00:59:20,570

YouTube URL: https://www.youtube.com/watch?v=TcjdxMCJI7s


