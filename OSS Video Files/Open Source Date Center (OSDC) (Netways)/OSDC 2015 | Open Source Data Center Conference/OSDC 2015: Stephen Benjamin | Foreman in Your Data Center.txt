Title: OSDC 2015: Stephen Benjamin | Foreman in Your Data Center
Publication date: 2015-04-30
Playlist: OSDC 2015 | Open Source Data Center Conference
Description: 
	An introductory talk to Foreman, with an overview of how Foreman's plugin ecosystem can help you manage your data center.  We'll talk about Discovery, Katello, Docker, and additional configuration management platforms beyond Puppet.
Captions: 
	00:00:07,500 --> 00:00:12,500
hooks and Foreman plug-ins including a

00:00:11,680 --> 00:00:15,800
demo of

00:00:12,500 --> 00:00:19,640
of the plugins that I like how many of

00:00:15,800 --> 00:00:22,580
you all are using form in today oh cool

00:00:19,640 --> 00:00:27,710
quite a few is anyone using form in with

00:00:22,580 --> 00:00:30,140
something other than puppet Wow no one

00:00:27,710 --> 00:00:32,059
okay in case you didn't know we do have

00:00:30,140 --> 00:00:34,010
support for chef and salt and there's

00:00:32,059 --> 00:00:40,460
even a few ansible scripts floating

00:00:34,010 --> 00:00:43,210
around in the wild so Foreman's realm is

00:00:40,460 --> 00:00:45,559
managing the lifecycle of your systems

00:00:43,210 --> 00:00:47,930
from installation initial configuration

00:00:45,559 --> 00:00:50,899
and monitoring update center for

00:00:47,930 --> 00:00:53,030
management on your machines this

00:00:50,899 --> 00:00:54,410
translates to three primary activities

00:00:53,030 --> 00:00:58,850
you'll do with Foreman provisioning

00:00:54,410 --> 00:01:00,559
configuration and monitoring so Foreman

00:00:58,850 --> 00:01:03,770
has the unique ability to provision to

00:01:00,559 --> 00:01:06,350
almost about anything bare metal over

00:01:03,770 --> 00:01:09,170
libvirt VMware and the list goes on and

00:01:06,350 --> 00:01:11,149
on and on if we don't have support for

00:01:09,170 --> 00:01:14,360
today we can quite easily through

00:01:11,149 --> 00:01:15,920
plugins there is a community community

00:01:14,360 --> 00:01:18,170
guy who came along and won a digital

00:01:15,920 --> 00:01:20,570
ocean support I think the initial plugin

00:01:18,170 --> 00:01:21,890
only took two or three days so if

00:01:20,570 --> 00:01:24,260
there's something new out there that you

00:01:21,890 --> 00:01:25,820
want to have support for you can come

00:01:24,260 --> 00:01:29,030
talk to us about an IRC whereas

00:01:25,820 --> 00:01:30,710
receptive to new ideas and it's really

00:01:29,030 --> 00:01:34,850
not too difficult to build these kind of

00:01:30,710 --> 00:01:37,909
plugins performing so we support to

00:01:34,850 --> 00:01:39,950
provisioning types pixie this is your

00:01:37,909 --> 00:01:42,229
normal kickstart precede auto yes

00:01:39,950 --> 00:01:43,579
there's a few other things you support I

00:01:42,229 --> 00:01:47,210
think there's even some network devices

00:01:43,579 --> 00:01:49,130
that we can provision an image-based so

00:01:47,210 --> 00:01:52,070
with image base this is your VMware

00:01:49,130 --> 00:01:54,470
templates or OpenStack images which we

00:01:52,070 --> 00:01:57,350
can configure with ssh so we create the

00:01:54,470 --> 00:02:00,470
vm we ssh2 and configure it or if you're

00:01:57,350 --> 00:02:02,060
using something like ec2 that means you

00:02:00,470 --> 00:02:05,180
can use user data so something like

00:02:02,060 --> 00:02:07,660
cloud in it so for every virtualization

00:02:05,180 --> 00:02:09,709
provider we create the vm for you and

00:02:07,660 --> 00:02:12,410
for everything we orchestrate everything

00:02:09,709 --> 00:02:15,200
that's around the vm so we'll create DNS

00:02:12,410 --> 00:02:17,860
records for you forward and reverse will

00:02:15,200 --> 00:02:20,629
add DHCP entries configure t ftp servers

00:02:17,860 --> 00:02:22,819
if you're using free IPA we can go up to

00:02:20,629 --> 00:02:24,890
free IPA and create the machine for you

00:02:22,819 --> 00:02:26,510
get a one-time password back and do the

00:02:24,890 --> 00:02:28,430
all the registration for you

00:02:26,510 --> 00:02:29,689
and of course the configuration

00:02:28,430 --> 00:02:34,549
management platform that you're using

00:02:29,689 --> 00:02:36,140
will automate registration including

00:02:34,549 --> 00:02:38,930
auto signing and keys for whatever using

00:02:36,140 --> 00:02:41,560
so Foreman is traditionally very puppet

00:02:38,930 --> 00:02:43,849
centric it has been since the beginning

00:02:41,560 --> 00:02:46,099
in the last couple years we've added

00:02:43,849 --> 00:02:50,150
support for chef and this year we have

00:02:46,099 --> 00:02:53,000
plugins for salt with both puppet insult

00:02:50,150 --> 00:02:55,010
you have the ability to define the

00:02:53,000 --> 00:02:57,049
configuration of the machines so you can

00:02:55,010 --> 00:03:00,650
select which classes or states to apply

00:02:57,049 --> 00:03:02,390
for puppet we support parameters classes

00:03:00,650 --> 00:03:04,430
you can store your parameters inside a

00:03:02,390 --> 00:03:07,900
foreman and with salt you can actually

00:03:04,430 --> 00:03:10,159
use for min to store your pillar data

00:03:07,900 --> 00:03:12,170
from all of the configuration management

00:03:10,159 --> 00:03:15,680
hot forms you get inventory data so

00:03:12,170 --> 00:03:18,760
facts grains attributes whichever they

00:03:15,680 --> 00:03:21,079
call it you can view this in four min

00:03:18,760 --> 00:03:23,889
and the results of the configuration

00:03:21,079 --> 00:03:26,420
runs so state a high state puppet apply

00:03:23,889 --> 00:03:27,950
whatever the equivalent is in chef you

00:03:26,420 --> 00:03:30,170
get these nice reports and formulas show

00:03:27,950 --> 00:03:33,859
you current state of your machines what

00:03:30,170 --> 00:03:35,989
happened I kind of thing so for the

00:03:33,859 --> 00:03:39,169
inventory data you have the ability to

00:03:35,989 --> 00:03:42,049
search it display trends create charts

00:03:39,169 --> 00:03:43,639
on the data the reports you get from

00:03:42,049 --> 00:03:46,220
puppet run salt high state and chef you

00:03:43,639 --> 00:03:47,510
can view in the UI and recently we

00:03:46,220 --> 00:03:49,430
started to see an increase the number of

00:03:47,510 --> 00:03:52,849
plugins around reporting so we have a

00:03:49,430 --> 00:03:55,519
brt which is a bug reporting tool and

00:03:52,849 --> 00:03:57,590
open SCAP which is a security compliance

00:03:55,519 --> 00:03:59,870
framework so you have to deal with

00:03:57,590 --> 00:04:01,040
complying with like US law you have to

00:03:59,870 --> 00:04:05,239
make sure your machines are compliant

00:04:01,040 --> 00:04:07,010
with some ridiculous 3300 page security

00:04:05,239 --> 00:04:11,000
policy open SCAP can help you stay

00:04:07,010 --> 00:04:12,799
compliant with that kind of stuff so for

00:04:11,000 --> 00:04:15,230
min when you first install a basic

00:04:12,799 --> 00:04:17,690
Foreman you just run form an installer

00:04:15,230 --> 00:04:19,099
on a single machine it's all going to be

00:04:17,690 --> 00:04:20,599
confined to one machine you're going to

00:04:19,099 --> 00:04:22,789
get a smart proxy that runs on the local

00:04:20,599 --> 00:04:25,159
host which is managing all those

00:04:22,789 --> 00:04:28,669
services like dns tcp and things like

00:04:25,159 --> 00:04:31,909
that as your data center grows or you

00:04:28,669 --> 00:04:33,440
branch out to other data center Foreman

00:04:31,909 --> 00:04:34,969
has the ability to have a distributed

00:04:33,440 --> 00:04:36,950
architecture with smart proxies in

00:04:34,969 --> 00:04:39,349
multiple places so it might end up

00:04:36,950 --> 00:04:39,920
looking something like this you can have

00:04:39,349 --> 00:04:43,240
a smart proud

00:04:39,920 --> 00:04:48,980
each data center managing the dhcp dns

00:04:43,240 --> 00:04:50,390
services in them and for me to talk to

00:04:48,980 --> 00:04:55,640
the smart proxies over an authenticated

00:04:50,390 --> 00:04:58,640
restful api so that's the quick 10

00:04:55,640 --> 00:04:59,870
minute feel about foreman let me do a

00:04:58,640 --> 00:05:02,300
demo because that's probably more

00:04:59,870 --> 00:05:11,110
interesting will poke around in the UI

00:05:02,300 --> 00:05:11,110
and create a new host display here

00:05:33,950 --> 00:05:39,470
so when you first log into Foreman this

00:05:36,530 --> 00:05:43,910
is the dashboard that you see this is

00:05:39,470 --> 00:05:47,030
telling you basically the state of your

00:05:43,910 --> 00:05:50,120
hosts most of mine are okay a few aren't

00:05:47,030 --> 00:05:56,810
checking in you get chart showing the

00:05:50,120 --> 00:05:58,040
latest events run distribution let's

00:05:56,810 --> 00:06:00,920
create a new host we can kick that off

00:05:58,040 --> 00:06:02,270
it takes about 10 minutes to build so

00:06:00,920 --> 00:06:04,700
when you create a new host informant you

00:06:02,270 --> 00:06:06,350
get this field if you've used for min

00:06:04,700 --> 00:06:07,880
before you'll notice this field is quite

00:06:06,350 --> 00:06:09,920
a bit bigger because I have every

00:06:07,880 --> 00:06:14,450
plug-in known to man installed on this

00:06:09,920 --> 00:06:15,950
thing so this is quite a long so form it

00:06:14,450 --> 00:06:17,290
has a concept of host groups which is

00:06:15,950 --> 00:06:19,790
basically a template for your machines

00:06:17,290 --> 00:06:22,610
this makes filling out this form really

00:06:19,790 --> 00:06:24,500
easy I'm going to pick my production

00:06:22,610 --> 00:06:28,780
rail 7 and it's going to fill in

00:06:24,500 --> 00:06:28,780
everything for me except for the name

00:06:32,860 --> 00:06:39,770
I'm going to deploy this on a Lib verte

00:06:36,830 --> 00:06:47,750
box but this could just as easily be Rev

00:06:39,770 --> 00:06:50,570
or anything else so you can see that so

00:06:47,750 --> 00:06:53,150
my my Foreman instance I only really use

00:06:50,570 --> 00:06:54,740
salt but you could it looks the same

00:06:53,150 --> 00:06:57,500
with your using public so I've selected

00:06:54,740 --> 00:07:00,740
a salt environment insult master I've

00:06:57,500 --> 00:07:03,230
got a very basic salt state that's been

00:07:00,740 --> 00:07:04,670
coming from the host group and then if I

00:07:03,230 --> 00:07:08,390
wanted to I could add some additional

00:07:04,670 --> 00:07:11,380
state could apply some public classes if

00:07:08,390 --> 00:07:15,410
I really wanted I can add additional

00:07:11,380 --> 00:07:17,200
interfaces then your face is already

00:07:15,410 --> 00:07:20,780
configured it's already pulled an IP

00:07:17,200 --> 00:07:22,340
from the smart proxy the only thing I

00:07:20,780 --> 00:07:26,840
need to do here is actually to change

00:07:22,340 --> 00:07:29,810
the bridge it's already picked an

00:07:26,840 --> 00:07:36,020
operating system for me it's configure

00:07:29,810 --> 00:07:37,490
the virtual machine and if I wanted to I

00:07:36,020 --> 00:07:40,790
could add parameters and these translate

00:07:37,490 --> 00:07:43,930
to public global parameters or in this

00:07:40,790 --> 00:07:43,930
case it would be assault the way

00:07:44,000 --> 00:07:47,540
so I'll create the new host and if you

00:07:45,830 --> 00:07:50,750
look really quickly you'll see this

00:07:47,540 --> 00:07:52,370
green box pop up on the screen this is

00:07:50,750 --> 00:07:54,110
creating the DNS record it's adding the

00:07:52,370 --> 00:07:57,740
host of free rpa it's creating libvirt

00:07:54,110 --> 00:08:06,140
vm and then it's booting it so I can

00:07:57,740 --> 00:08:07,940
actually look at the console and 10 15

00:08:06,140 --> 00:08:10,160
minutes or so depending on how fast this

00:08:07,940 --> 00:08:11,600
is the box will be up it'll be

00:08:10,160 --> 00:08:14,600
registered to salt will be registered to

00:08:11,600 --> 00:08:17,450
free IPA if I love dns records there's

00:08:14,600 --> 00:08:19,640
nothing for me to do then it will have

00:08:17,450 --> 00:08:23,810
run salt and get all the configuration

00:08:19,640 --> 00:08:25,010
for this box so when salt our puppet or

00:08:23,810 --> 00:08:27,260
whatever you're using runs for the first

00:08:25,010 --> 00:08:35,900
time or whenever it runs you're going to

00:08:27,260 --> 00:08:39,650
get a report by default the filter here

00:08:35,900 --> 00:08:41,599
is a vengeful equals true I remove the

00:08:39,650 --> 00:08:45,350
filter you're going to see all this

00:08:41,599 --> 00:08:46,760
stuff like every report hopefully your

00:08:45,350 --> 00:08:51,280
most of them are not showing any

00:08:46,760 --> 00:08:53,330
activity I click on a specific report I

00:08:51,280 --> 00:08:55,880
can see everything that happened on the

00:08:53,330 --> 00:08:58,040
box this instance the format is not

00:08:55,880 --> 00:09:02,210
really so exciting i'm only doing i have

00:08:58,040 --> 00:09:04,580
one salt state managing one file but

00:09:02,210 --> 00:09:06,980
when so the file changes i get a report

00:09:04,580 --> 00:09:09,730
from formula that changed i can actually

00:09:06,980 --> 00:09:11,960
even view a diff of the file changes a

00:09:09,730 --> 00:09:13,370
lot of puppet users don't know that this

00:09:11,960 --> 00:09:15,560
is actually possible for puppet

00:09:13,370 --> 00:09:17,810
informant as well there's just a setting

00:09:15,560 --> 00:09:20,210
that you have to turn on a lump master

00:09:17,810 --> 00:09:23,450
to send form in the diff I think it's a

00:09:20,210 --> 00:09:24,830
really cool feature especially with

00:09:23,450 --> 00:09:27,230
puppet when you have really complex

00:09:24,830 --> 00:09:29,350
catalogs and you're curious about why is

00:09:27,230 --> 00:09:31,370
this catalog taking 45 minutes to run

00:09:29,350 --> 00:09:32,690
forming is really useful because we

00:09:31,370 --> 00:09:35,600
break down exactly how long each

00:09:32,690 --> 00:09:37,190
resource took so it's really useful for

00:09:35,600 --> 00:09:39,860
kind of digging in and finding out

00:09:37,190 --> 00:09:47,240
exactly what are the slow points in your

00:09:39,860 --> 00:09:49,940
manifest we also have facts in this case

00:09:47,240 --> 00:09:55,450
this is showing salt grains you can

00:09:49,940 --> 00:10:00,790
search them say let's do

00:09:55,450 --> 00:10:02,380
salt version is a simple one so I can

00:10:00,790 --> 00:10:04,390
see the the value for the salt version

00:10:02,380 --> 00:10:06,250
all of my host if you look at this

00:10:04,390 --> 00:10:09,130
little button right here I can actually

00:10:06,250 --> 00:10:11,500
chart the values so it will build a par

00:10:09,130 --> 00:10:12,850
chart really quick so I can see the

00:10:11,500 --> 00:10:18,220
distribution of salt versions that I

00:10:12,850 --> 00:10:19,540
have you can create trends on the data

00:10:18,220 --> 00:10:24,060
so you can watch these values change

00:10:19,540 --> 00:10:26,740
over time so you go to monitor trend

00:10:24,060 --> 00:10:31,300
I've got a couple set up here selinux

00:10:26,740 --> 00:10:32,800
status you can see the change of trends

00:10:31,300 --> 00:10:35,530
over time of weather machines are

00:10:32,800 --> 00:10:37,630
enforcing a permissive you can set this

00:10:35,530 --> 00:10:39,640
trend on anything obviously some fact

00:10:37,630 --> 00:10:41,350
values are not particularly interesting

00:10:39,640 --> 00:10:43,180
for transit charts because they're

00:10:41,350 --> 00:10:47,140
unique to every host like Costain likey

00:10:43,180 --> 00:10:48,700
but the OS version escalating status

00:10:47,140 --> 00:10:52,810
these kind of things you can do trends

00:10:48,700 --> 00:10:54,550
on you also get this eat little

00:10:52,810 --> 00:10:56,800
statistics page that kind of breaks down

00:10:54,550 --> 00:10:59,140
the status of your environment based on

00:10:56,800 --> 00:11:01,290
what West you have or architecture you

00:10:59,140 --> 00:11:01,290
have

00:11:17,230 --> 00:11:27,700
yeah that's that's going to be a one so

00:11:26,440 --> 00:11:29,020
we can jump in to talking about

00:11:27,700 --> 00:11:30,820
customization but before I do that

00:11:29,020 --> 00:11:31,900
doesn't have any janeiro general

00:11:30,820 --> 00:11:47,890
questions about four min about anything

00:11:31,900 --> 00:11:51,820
i showed so far sorry get ah ok i'll

00:11:47,890 --> 00:11:53,950
talk a bit louder than thanks is it the

00:11:51,820 --> 00:12:04,380
font on the presentation or the font on

00:11:53,950 --> 00:12:04,380
the foreman instance ok

00:12:09,190 --> 00:12:15,970
is that better I don't know if I can get

00:12:13,310 --> 00:12:15,970
much bigger than that

00:12:23,120 --> 00:12:30,740
well the Flies okay or is that too small

00:12:25,700 --> 00:12:33,800
as well back there okay so form in

00:12:30,740 --> 00:12:37,250
itself is quite customizable we provide

00:12:33,800 --> 00:12:38,540
you a API and CLI for automation you can

00:12:37,250 --> 00:12:40,720
hook on to basically anything that

00:12:38,540 --> 00:12:44,240
happens in 24 min with your own scripts

00:12:40,720 --> 00:12:46,880
we have the ability to write your own

00:12:44,240 --> 00:12:50,600
plugins or use quite a few that we have

00:12:46,880 --> 00:12:53,779
already existing and out there so

00:12:50,600 --> 00:12:54,980
Foreman provides a full restful api if

00:12:53,779 --> 00:12:57,620
you want to view the api documentation

00:12:54,980 --> 00:13:00,050
it's just slash api doc on your Foreman

00:12:57,620 --> 00:13:02,330
server you can interact it with it with

00:13:00,050 --> 00:13:04,190
any language that you would like there's

00:13:02,330 --> 00:13:08,750
an example here with curl for grabbing

00:13:04,190 --> 00:13:10,220
the list of salt keys from a machine the

00:13:08,750 --> 00:13:12,950
hammer CLI is more useful if you're

00:13:10,220 --> 00:13:15,410
working with shell scripts hammer CLI

00:13:12,950 --> 00:13:17,779
and API will have basic basically parity

00:13:15,410 --> 00:13:20,510
between the two so everything you can do

00:13:17,779 --> 00:13:22,520
in the CLI and API can also do in the UI

00:13:20,510 --> 00:13:28,430
we try very hard to make sure that they

00:13:22,520 --> 00:13:31,820
stay consistent hooks is really useful

00:13:28,430 --> 00:13:34,100
when you want to extend for min to have

00:13:31,820 --> 00:13:36,950
form and do some automation for you that

00:13:34,100 --> 00:13:39,110
it doesn't already support so whenever

00:13:36,950 --> 00:13:42,800
you create a host and Foreman update a

00:13:39,110 --> 00:13:45,589
host delete a host whenever hosts build

00:13:42,800 --> 00:13:48,350
is complete you add an architecture 24

00:13:45,589 --> 00:13:49,820
min you have an operating system you can

00:13:48,350 --> 00:13:52,339
basically hook on to most things

00:13:49,820 --> 00:13:56,420
informant and you can have it run a

00:13:52,339 --> 00:13:57,890
script that can be shell Python Ruby you

00:13:56,420 --> 00:14:01,430
can automatically add machines to your

00:13:57,890 --> 00:14:03,920
monitoring system configure them for

00:14:01,430 --> 00:14:06,350
your backup system send an email if

00:14:03,920 --> 00:14:08,720
you'd like they're really quite powerful

00:14:06,350 --> 00:14:10,459
to use there's some really great

00:14:08,720 --> 00:14:13,670
examples if you go to the github page

00:14:10,459 --> 00:14:15,320
for forming hooks there's one that I did

00:14:13,670 --> 00:14:17,690
before form and had for your IPA

00:14:15,320 --> 00:14:21,170
integration I was doing an action with

00:14:17,690 --> 00:14:22,580
hooks so Foreman would create a host it

00:14:21,170 --> 00:14:25,209
would run a little shell script that

00:14:22,580 --> 00:14:28,220
would fetch a one-time password from

00:14:25,209 --> 00:14:31,120
free IPA and then it would configure it

00:14:28,220 --> 00:14:31,120
informant as a parameter

00:14:32,409 --> 00:14:38,119
both the smart proxy in form in itself

00:14:35,539 --> 00:14:39,559
have a pluggable architecture there's

00:14:38,119 --> 00:14:41,539
information on our wiki about it if

00:14:39,559 --> 00:14:43,039
you'd like to write your own you do need

00:14:41,539 --> 00:14:47,359
a little bit of Ruby knowledge and some

00:14:43,039 --> 00:14:49,579
rails knowledge there's a tutorial and a

00:14:47,359 --> 00:14:53,029
template that you can use to start

00:14:49,579 --> 00:14:54,769
writing your own but we are sulli we

00:14:53,029 --> 00:14:58,039
already have a rich ecosystem existing

00:14:54,769 --> 00:15:01,789
plugins that you can pull from I'll go

00:14:58,039 --> 00:15:04,819
through some of these in detail whew i

00:15:01,789 --> 00:15:06,649
won't a boot disk is pretty cool if you

00:15:04,819 --> 00:15:08,629
don't have dhcp in your environment and

00:15:06,649 --> 00:15:11,209
a lot of companies for whatever reason

00:15:08,629 --> 00:15:13,159
don't let you have it boot disk lets you

00:15:11,209 --> 00:15:15,709
download an iso from the foreman that

00:15:13,159 --> 00:15:20,079
you can upload to vmware or over it and

00:15:15,709 --> 00:15:22,279
have the host provision through the ISO

00:15:20,079 --> 00:15:27,999
column view is neat if you want to add

00:15:22,279 --> 00:15:30,409
some additional columns to the UI setup

00:15:27,999 --> 00:15:32,539
there's a plugin called form and set up

00:15:30,409 --> 00:15:33,619
that helps you set up provisioning so

00:15:32,539 --> 00:15:34,999
there's a little wizard that'll walk

00:15:33,619 --> 00:15:38,989
through about setting up a tftp server

00:15:34,999 --> 00:15:41,539
and dhcp server and there's a full list

00:15:38,989 --> 00:15:44,899
right here we're probably about 50

00:15:41,539 --> 00:15:46,699
plugins or so and I'd say more than half

00:15:44,899 --> 00:15:51,529
of those are packaged and available with

00:15:46,699 --> 00:15:52,939
just young installer apt-get install so

00:15:51,529 --> 00:15:54,309
there's a few plugins that I want to

00:15:52,939 --> 00:15:56,919
talk about that I think are really cool

00:15:54,309 --> 00:16:01,069
the first one is form and discovery

00:15:56,919 --> 00:16:05,839
which is metal as a service so for me

00:16:01,069 --> 00:16:07,759
discovery is when you order a bunch of

00:16:05,839 --> 00:16:09,470
new hardware from HP or dell you put it

00:16:07,759 --> 00:16:11,629
in your data center you plug it into the

00:16:09,470 --> 00:16:14,119
network and what happens is it boots

00:16:11,629 --> 00:16:15,529
from the formal server and it becomes

00:16:14,119 --> 00:16:18,229
available informant is what we call a

00:16:15,529 --> 00:16:19,339
discovered host and you can configure

00:16:18,229 --> 00:16:21,109
form and such that you can actually

00:16:19,339 --> 00:16:23,629
provision these hosts with as few as no

00:16:21,109 --> 00:16:26,689
interactions in the UI so you can set

00:16:23,629 --> 00:16:28,579
automatic provisioning rules so when

00:16:26,689 --> 00:16:30,559
Foreman sees a host that has less than

00:16:28,579 --> 00:16:33,259
eight cpus it goes up this is web server

00:16:30,559 --> 00:16:34,759
and immediately provisions it you can do

00:16:33,259 --> 00:16:37,759
the same if it's got more than eat CPUs

00:16:34,759 --> 00:16:40,129
there's a number of bits of information

00:16:37,759 --> 00:16:43,369
you can use to base on the rules and you

00:16:40,129 --> 00:16:45,689
can even alter the image yourself and

00:16:43,369 --> 00:16:55,689
add additional values

00:16:45,689 --> 00:16:58,959
so let me do demo form of discovery so

00:16:55,689 --> 00:17:05,439
i've got a vm here i don't think i can

00:16:58,959 --> 00:17:07,839
make this any bigger that Foreman

00:17:05,439 --> 00:17:09,610
doesn't know about what's going to

00:17:07,839 --> 00:17:12,539
happen is going to pick C and DGP off

00:17:09,610 --> 00:17:12,539
the foreman server

00:17:22,810 --> 00:17:30,080
the image is about 150 megabytes or so

00:17:26,600 --> 00:17:32,440
it's a small fedora image I believe our

00:17:30,080 --> 00:17:32,440
centos based

00:17:55,270 --> 00:17:59,230
so you see or maybe not if you're far

00:17:57,820 --> 00:18:00,910
back there but at the bottom here it

00:17:59,230 --> 00:18:02,380
says registering house with Foreman so

00:18:00,910 --> 00:18:04,390
what it's doing is it's actually running

00:18:02,380 --> 00:18:05,950
factor on the host and sending that

00:18:04,390 --> 00:18:07,150
information to format so you have all of

00:18:05,950 --> 00:18:08,920
the information that factor knows about

00:18:07,150 --> 00:18:15,670
the host and it's going to be available

00:18:08,920 --> 00:18:17,170
in the menu under discovered hosts so

00:18:15,670 --> 00:18:20,050
you can see that this is the new hosts

00:18:17,170 --> 00:18:27,190
that it found and if you click on it you

00:18:20,050 --> 00:18:31,500
can see the factor information if i want

00:18:27,190 --> 00:18:33,670
i can click this provision button and

00:18:31,500 --> 00:18:35,650
actually fill out the normal host form

00:18:33,670 --> 00:18:37,150
that you see for anything else so what

00:18:35,650 --> 00:18:38,710
will happen is here when i click submit

00:18:37,150 --> 00:18:41,110
form going to reboot the host and build

00:18:38,710 --> 00:18:42,940
it like you've defined here but the real

00:18:41,110 --> 00:18:49,630
power of forming discovery comes with

00:18:42,940 --> 00:18:52,000
discovery rules so I've got a predefined

00:18:49,630 --> 00:18:53,830
rule here that says this machine's web

00:18:52,000 --> 00:18:56,620
server if it's got less than eight CPUs

00:18:53,830 --> 00:18:59,250
and if it sees a host like that it'll

00:18:56,620 --> 00:19:07,960
provision it as production rail seven I

00:18:59,250 --> 00:19:10,860
can add additional rules something like

00:19:07,960 --> 00:19:13,300
that you can do a based on this size IP

00:19:10,860 --> 00:19:19,300
you can write custom facts and load them

00:19:13,300 --> 00:19:21,070
into the image via zip file by default

00:19:19,300 --> 00:19:25,090
form and won't automatically provision

00:19:21,070 --> 00:19:29,320
hosts what I would have to do is go to

00:19:25,090 --> 00:19:31,750
this discovered host menu and click this

00:19:29,320 --> 00:19:35,020
Auto provision button but what I want to

00:19:31,750 --> 00:19:37,090
show you is what it looks like when the

00:19:35,020 --> 00:19:41,760
automatic provisioning is enabled so

00:19:37,090 --> 00:19:41,760
there's a setting for Foreman discovery

00:19:43,320 --> 00:19:49,020
discovery auto i will turn that on

00:19:49,140 --> 00:19:52,500
reboot this host

00:20:28,070 --> 00:20:31,460
so what's going to happen here is the

00:20:29,990 --> 00:20:33,020
same thing that happened before it's

00:20:31,460 --> 00:20:34,880
going to register the form and upload

00:20:33,020 --> 00:20:36,110
its facts but what's going to happen is

00:20:34,880 --> 00:20:38,510
for me is going to see that this host

00:20:36,110 --> 00:20:39,890
matches a discovery rule when it does

00:20:38,510 --> 00:20:42,950
that the host is going to automatically

00:20:39,890 --> 00:20:50,330
reboot and come up as a host based on

00:20:42,950 --> 00:20:51,440
that rule so see the host is already

00:20:50,330 --> 00:20:53,540
rebooting and it's going to start

00:20:51,440 --> 00:20:55,940
provisioning in a second so this is

00:20:53,540 --> 00:20:57,530
really cool if you get 100 boxes

00:20:55,940 --> 00:20:59,030
hardware boxes you have to rack on the

00:20:57,530 --> 00:21:03,590
servers provisioning them as as simple

00:20:59,030 --> 00:21:08,840
as turning them on so if we go to the

00:21:03,590 --> 00:21:11,180
normal host all hosts you're going to

00:21:08,840 --> 00:21:14,240
see a new host here that format

00:21:11,180 --> 00:21:20,840
automatically created you can see in the

00:21:14,240 --> 00:21:24,520
comment it was auto discovered autos

00:21:20,840 --> 00:21:24,520
discovered in provision via the rule

00:21:30,450 --> 00:21:34,750
with discovery rules you can also do

00:21:32,830 --> 00:21:36,460
things like set host limits so you can

00:21:34,750 --> 00:21:39,880
say okay I don't want to provision any

00:21:36,460 --> 00:21:42,370
more than 10 web servers you can have

00:21:39,880 --> 00:21:44,380
rules based on priority so if web

00:21:42,370 --> 00:21:45,760
servers at the top priority and DB

00:21:44,380 --> 00:21:48,160
servers of the second priority and they

00:21:45,760 --> 00:21:50,020
both match the same set of rules Foreman

00:21:48,160 --> 00:21:52,270
will build 10 web servers when it's full

00:21:50,020 --> 00:21:53,800
it'll go to the next one build however

00:21:52,270 --> 00:22:03,250
many DB servers you've allowed and so

00:21:53,800 --> 00:22:05,940
forth any questions about discovery

00:22:03,250 --> 00:22:05,940
before I move on

00:22:20,030 --> 00:22:25,830
docker unfortunately I don't have a demo

00:22:22,830 --> 00:22:29,640
about docker I didn't have time to set

00:22:25,830 --> 00:22:31,860
up a docker host the website right here

00:22:29,640 --> 00:22:33,990
for forming docker they've got some nice

00:22:31,860 --> 00:22:35,549
screenshots about how to set it up you

00:22:33,990 --> 00:22:36,900
can manage many docker host you can

00:22:35,549 --> 00:22:38,700
deploy new containers with a couple of

00:22:36,900 --> 00:22:40,980
clicks like just like you do a normal

00:22:38,700 --> 00:22:44,070
form and host instead of a new host you

00:22:40,980 --> 00:22:45,690
click new container you can pull from

00:22:44,070 --> 00:22:48,360
the docker registry itself you can

00:22:45,690 --> 00:22:50,039
configure some custom registry and if

00:22:48,360 --> 00:22:51,870
you're using the cotillo plug-in which

00:22:50,039 --> 00:22:54,630
is a content management plugin for

00:22:51,870 --> 00:22:59,539
Foreman you can actually manage your own

00:22:54,630 --> 00:22:59,539
local repository or registry sorry

00:23:00,770 --> 00:23:05,970
cattell o is the primary project that I

00:23:03,179 --> 00:23:07,830
actually work on katella is about

00:23:05,970 --> 00:23:13,640
content lifecycle management there's

00:23:07,830 --> 00:23:17,210
anyone using katella okay few people

00:23:13,640 --> 00:23:22,860
satellites except the commercial version

00:23:17,210 --> 00:23:24,870
so Katella is a plug-in for a minute you

00:23:22,860 --> 00:23:27,240
can sync RPM darker and puppet puppet

00:23:24,870 --> 00:23:30,210
content you can spin these repositories

00:23:27,240 --> 00:23:34,169
with filters you can use content views

00:23:30,210 --> 00:23:35,580
to limit what a host can see and then

00:23:34,169 --> 00:23:39,210
you can manage these things through a

00:23:35,580 --> 00:23:43,260
life cycle so you could sink down centos

00:23:39,210 --> 00:23:45,870
epale puppet and whatever other repos

00:23:43,260 --> 00:23:47,340
you want you throw these into a content

00:23:45,870 --> 00:23:50,010
view and you take a snapshot in the

00:23:47,340 --> 00:23:51,360
point in time you can promote this to

00:23:50,010 --> 00:23:53,669
the development environment hand it over

00:23:51,360 --> 00:23:55,530
to the developers to test you can pass

00:23:53,669 --> 00:23:56,730
this on to the QA team and when they

00:23:55,530 --> 00:24:00,720
sign off you can push this into

00:23:56,730 --> 00:24:07,049
production so it looks a little bit

00:24:00,720 --> 00:24:10,289
something like this so you'd promote a

00:24:07,049 --> 00:24:14,130
version to development we go to the QA

00:24:10,289 --> 00:24:15,539
team all the q18 finds of their some bug

00:24:14,130 --> 00:24:18,539
and you have to regenerate the content

00:24:15,539 --> 00:24:20,880
view you create version to you can do

00:24:18,539 --> 00:24:22,740
this not a little greater because ah I

00:24:20,880 --> 00:24:26,470
guess sorry dupla hind lines concede

00:24:22,740 --> 00:24:30,100
that okay

00:24:26,470 --> 00:24:35,470
you can pro to development to QA and

00:24:30,100 --> 00:24:37,240
then to production and then continue

00:24:35,470 --> 00:24:38,919
again say you have some patch like oh

00:24:37,240 --> 00:24:40,150
that's three months or so you would

00:24:38,919 --> 00:24:42,070
promote version three and three months

00:24:40,150 --> 00:24:48,220
and going through the whole cycle over

00:24:42,070 --> 00:24:50,320
again Katella also provides patch

00:24:48,220 --> 00:24:53,200
management so if you're familiar with

00:24:50,320 --> 00:24:55,179
red hats arata you get a view of the

00:24:53,200 --> 00:24:58,419
router that are applicable to your host

00:24:55,179 --> 00:25:02,860
based on security bug fixes and

00:24:58,419 --> 00:25:04,059
enhancements the only can you see the

00:25:02,860 --> 00:25:06,070
router that applied to it from the

00:25:04,059 --> 00:25:09,130
current content view you can see what's

00:25:06,070 --> 00:25:11,620
waiting for it in the library

00:25:09,130 --> 00:25:13,780
environment which means that so if

00:25:11,620 --> 00:25:15,400
you're using spacewalk and you're using

00:25:13,780 --> 00:25:17,679
clone channels which nearly everyone who

00:25:15,400 --> 00:25:20,320
spacewalk dos it's really a nightmare

00:25:17,679 --> 00:25:21,909
because you end up with thousands of

00:25:20,320 --> 00:25:25,360
clone channels after a couple years and

00:25:21,909 --> 00:25:27,190
it's really difficult for you to see if

00:25:25,360 --> 00:25:29,559
you've taken a snapshot of the channels

00:25:27,190 --> 00:25:32,289
what arata actually applies to the host

00:25:29,559 --> 00:25:36,610
from the current state of what's in the

00:25:32,289 --> 00:25:38,169
repos now so we can poke around in the

00:25:36,610 --> 00:25:41,400
cat lui a little bit I can show you what

00:25:38,169 --> 00:25:41,400
it looks like

00:25:57,049 --> 00:26:05,739
I don't think this is this UI is really

00:25:59,799 --> 00:26:05,739
geared towards being on the one let's go

00:26:07,570 --> 00:26:12,379
so when you look at the list of content

00:26:10,399 --> 00:26:14,149
hosts you can see the current state of

00:26:12,379 --> 00:26:16,669
the machines if they have any updates

00:26:14,149 --> 00:26:23,440
that are available now click on these

00:26:16,669 --> 00:26:25,700
and actually see what security fixes are

00:26:23,440 --> 00:26:29,389
or what errata are applicable to this

00:26:25,700 --> 00:26:37,279
house gosh this is really bad on our way

00:26:29,389 --> 00:26:38,899
for question there yeah I know so the

00:26:37,279 --> 00:26:43,369
question is if this is a plug-in of the

00:26:38,899 --> 00:26:46,220
normal format 18 so this is the Katella

00:26:43,369 --> 00:26:48,139
plugin for Forbin all right and actually

00:26:46,220 --> 00:26:49,909
it's not just a normal kiss hello it's

00:26:48,139 --> 00:26:51,080
not just a normal plugin for forming so

00:26:49,909 --> 00:26:53,299
you can't install four min and then

00:26:51,080 --> 00:26:56,299
install Katella later we're currently

00:26:53,299 --> 00:26:59,809
working on that but part of the issue is

00:26:56,299 --> 00:27:01,249
Katella is really complex there's a lot

00:26:59,809 --> 00:27:03,580
of different components we're installing

00:27:01,249 --> 00:27:05,659
the pulp project the candlepin project

00:27:03,580 --> 00:27:08,989
elasticsearch and a massive dependencies

00:27:05,659 --> 00:27:10,759
we have to configure for mini really

00:27:08,989 --> 00:27:14,299
specific ways so there's actually a

00:27:10,759 --> 00:27:15,830
cataldo installer all of the core

00:27:14,299 --> 00:27:17,059
foreman plugins also work so you can use

00:27:15,830 --> 00:27:19,190
salt chef with all these kinds of things

00:27:17,059 --> 00:27:21,889
with each other as well but you do have

00:27:19,190 --> 00:27:25,749
to install katella it is almost separate

00:27:21,889 --> 00:27:28,190
than format for min 19 or form in 110

00:27:25,749 --> 00:27:29,450
we're working on being able to install

00:27:28,190 --> 00:27:33,019
contento just like you would a normal

00:27:29,450 --> 00:27:35,450
plugin with a format installer and if

00:27:33,019 --> 00:27:37,299
you if you do notice that the UI does

00:27:35,450 --> 00:27:40,159
look a little bit different than for men

00:27:37,299 --> 00:27:43,279
it's because Katella is using angularjs

00:27:40,159 --> 00:27:52,159
and Foreman is using jquery and its own

00:27:43,279 --> 00:27:54,919
its own theme and bootstrap so with

00:27:52,159 --> 00:27:57,019
gatillo if let's say heartbleed or

00:27:54,919 --> 00:28:01,399
poodle or whatever cute security

00:27:57,019 --> 00:28:06,649
vulnerability comes out you can actually

00:28:01,399 --> 00:28:24,080
search in the UI by cvd number so

00:28:06,649 --> 00:28:30,629
let's find the number four maybe not

00:28:24,080 --> 00:28:36,179
area why is that poodle yeah that's not

00:28:30,629 --> 00:28:43,679
the right one I would have expected more

00:28:36,179 --> 00:28:46,889
to come up yeah so this is this is the

00:28:43,679 --> 00:28:50,700
fix for poodle for so you can search by

00:28:46,889 --> 00:28:52,919
CD number català has email report so you

00:28:50,700 --> 00:28:56,210
get notifications when there's important

00:28:52,919 --> 00:28:56,210
security alerts that are out there

00:29:01,009 --> 00:29:07,950
recently of katella 21 or 22 added

00:29:06,509 --> 00:29:09,869
support for docker so you now can create

00:29:07,950 --> 00:29:11,460
your own custom registries you can

00:29:09,869 --> 00:29:18,389
create content views with dr. content

00:29:11,460 --> 00:29:19,559
just like you can with rpms so yeah so

00:29:18,389 --> 00:29:20,730
if you're looking for a patch mine as a

00:29:19,559 --> 00:29:29,820
management solution that's worth

00:29:20,730 --> 00:29:33,629
checking out salt so like I said in the

00:29:29,820 --> 00:29:35,700
last year or so two years we've been

00:29:33,629 --> 00:29:38,519
working on making form unless puppet

00:29:35,700 --> 00:29:41,879
centric inform in 18 you'll even notice

00:29:38,519 --> 00:29:43,769
that we've started to try to make things

00:29:41,879 --> 00:29:47,360
a little bit more generic you'll start

00:29:43,769 --> 00:29:52,049
to see the word puppet less in the UI

00:29:47,360 --> 00:29:54,799
and we are working on making salt and

00:29:52,049 --> 00:29:57,480
the chef plugins have parity with puppet

00:29:54,799 --> 00:29:59,129
we're interested in adding sport forenza

00:29:57,480 --> 00:30:01,220
bowl or any other configuration

00:29:59,129 --> 00:30:04,429
management platforms that are out there

00:30:01,220 --> 00:30:08,159
so the two that we have right now are

00:30:04,429 --> 00:30:10,350
salt so we support importing the reports

00:30:08,159 --> 00:30:11,759
just like we do for puppet from state

00:30:10,350 --> 00:30:14,759
high state results which is the

00:30:11,759 --> 00:30:17,460
equivalent of puppet apply you can get

00:30:14,759 --> 00:30:18,700
the grains into form in which is

00:30:17,460 --> 00:30:20,730
equivalent effects

00:30:18,700 --> 00:30:23,110
you can automatically bootstrap notes

00:30:20,730 --> 00:30:25,810
you can define the states and pillars

00:30:23,110 --> 00:30:27,820
right in the format interface and you

00:30:25,810 --> 00:30:30,940
can manage the keys and the auto sign

00:30:27,820 --> 00:30:33,520
there's a UI for it just like there is

00:30:30,940 --> 00:30:36,280
for the puppet side there's also API and

00:30:33,520 --> 00:30:38,050
CLI we're not a hundred percent there

00:30:36,280 --> 00:30:40,690
with parody with puppet there are some

00:30:38,050 --> 00:30:43,570
things that are missing config groups is

00:30:40,690 --> 00:30:47,020
one automatically importing the states

00:30:43,570 --> 00:30:48,280
from the salt master is another but the

00:30:47,020 --> 00:30:51,640
list is growing smaller with each

00:30:48,280 --> 00:30:53,230
release so probably the next few months

00:30:51,640 --> 00:30:57,640
I would expect to see it get quite a bit

00:30:53,230 --> 00:30:59,290
better chef was the first plug-in for

00:30:57,640 --> 00:31:02,410
additional configuration management with

00:30:59,290 --> 00:31:04,000
Foreman salt has the advantage of

00:31:02,410 --> 00:31:07,780
sharing a lot of the same paradigms as

00:31:04,000 --> 00:31:10,740
puppet they have this idea of state on

00:31:07,780 --> 00:31:13,510
high state they can even directly import

00:31:10,740 --> 00:31:15,340
the external node classifier data that

00:31:13,510 --> 00:31:18,190
puppet uses salt uses his back same

00:31:15,340 --> 00:31:21,700
format so salt is a bit more mature than

00:31:18,190 --> 00:31:23,980
the chef plugin in terms of configuring

00:31:21,700 --> 00:31:26,650
the machines but you can still get

00:31:23,980 --> 00:31:28,180
reports and attributes into Foreman you

00:31:26,650 --> 00:31:30,070
could automatically bootstrap clients

00:31:28,180 --> 00:31:31,630
and when you decommission a node

00:31:30,070 --> 00:31:39,340
informant when you delete it it also

00:31:31,630 --> 00:31:42,810
gets deleted in chef and if you're

00:31:39,340 --> 00:31:42,810
interested in writing your own plugin

00:31:44,100 --> 00:31:50,920
you can go to this wiki page the

00:31:47,200 --> 00:31:52,830
tutorial about the most common things

00:31:50,920 --> 00:31:55,720
that you want to change if you want to

00:31:52,830 --> 00:32:01,120
add some fields to the host forum if you

00:31:55,720 --> 00:32:02,350
want to change the UI at menus we've got

00:32:01,120 --> 00:32:04,750
tutorials on how to do all that with a

00:32:02,350 --> 00:32:07,150
plug-in there's a demo plugin that you

00:32:04,750 --> 00:32:10,210
can download and setup it's fairly easy

00:32:07,150 --> 00:32:11,680
to do I don't think you need a lot of

00:32:10,210 --> 00:32:14,020
rails knowledge couple tutorials is

00:32:11,680 --> 00:32:16,480
probably enough especially if you're

00:32:14,020 --> 00:32:18,610
looking to do something simple and we're

00:32:16,480 --> 00:32:21,580
always around on IRC so if you go to

00:32:18,610 --> 00:32:24,040
freenode pound the form in dash dev I'm

00:32:21,580 --> 00:32:25,060
there there's a bunch of others we're

00:32:24,040 --> 00:32:27,850
always happy to help if you run into

00:32:25,060 --> 00:32:30,100
problems there's been quite a few people

00:32:27,850 --> 00:32:32,480
who use for men who've written plugins

00:32:30,100 --> 00:32:34,970
that are specific to just their own

00:32:32,480 --> 00:32:36,500
environment simple things like even

00:32:34,970 --> 00:32:38,510
changing the color of the foreman banner

00:32:36,500 --> 00:32:40,370
to match the company logo and things

00:32:38,510 --> 00:32:43,730
like that so you can do all that with a

00:32:40,370 --> 00:33:12,169
former plugin so let's check on the

00:32:43,730 --> 00:33:14,450
hosts that we had built before so this

00:33:12,169 --> 00:33:22,669
is the host that i created the beginning

00:33:14,450 --> 00:33:25,160
and it's already up in online it's got a

00:33:22,669 --> 00:33:30,169
DNS record forward and reverse available

00:33:25,160 --> 00:33:47,450
and it's should be configured with free

00:33:30,169 --> 00:33:53,450
IPA it's doing something I think it's

00:33:47,450 --> 00:33:54,650
registered you know oh but when that

00:33:53,450 --> 00:34:04,160
works it would have been registered to

00:33:54,650 --> 00:34:09,470
free our PA sorry this is really tiny I

00:34:04,160 --> 00:34:20,149
know maybe yeah that's the same

00:34:09,470 --> 00:34:22,540
better and can you may be enlarged t

00:34:20,149 --> 00:34:22,540
yeah

00:34:31,940 --> 00:34:38,070
how's that just one more could you

00:34:36,450 --> 00:34:39,540
switch the call around so it's a white

00:34:38,070 --> 00:34:42,389
background and black color so I guess

00:34:39,540 --> 00:34:46,609
it's a CA be better or I don't know you

00:34:42,389 --> 00:34:46,609
guys you guys tell me is it ok oh

00:34:48,859 --> 00:34:56,399
there's a variety of choices we can do

00:34:52,050 --> 00:35:00,570
am beyond Solarize gray on black let's

00:34:56,399 --> 00:35:08,760
try white on black oh that's my weight

00:35:00,570 --> 00:35:22,530
I'm black black on white black online is

00:35:08,760 --> 00:35:24,240
that better oh that's unreadable I was

00:35:22,530 --> 00:35:28,560
just curious real quick why it didn't

00:35:24,240 --> 00:35:31,940
run it didn't run it for whatever reason

00:35:28,560 --> 00:35:31,940
I don't know

00:35:44,440 --> 00:35:54,349
alright the discovery host finished as

00:35:46,819 --> 00:35:57,470
well so it's online and provision so

00:35:54,349 --> 00:36:05,240
that's really it for me I went a bit

00:35:57,470 --> 00:36:06,880
faster than I expected if you go to the

00:36:05,240 --> 00:36:09,490
forum org you can read the manual

00:36:06,880 --> 00:36:12,020
there's manuals for some of the plugins

00:36:09,490 --> 00:36:14,690
if you do something cool with Foreman

00:36:12,020 --> 00:36:18,589
you should let us know one of the things

00:36:14,690 --> 00:36:20,180
are always finding out is that users of

00:36:18,589 --> 00:36:21,410
Foreman airways off doing something cool

00:36:20,180 --> 00:36:23,630
in their own little data center or not

00:36:21,410 --> 00:36:25,130
telling anyone about it so we really

00:36:23,630 --> 00:36:27,470
really like to hear when you guys have

00:36:25,130 --> 00:36:28,970
come with some solution even if it's not

00:36:27,470 --> 00:36:30,200
polished let's send a mail to the

00:36:28,970 --> 00:36:31,520
mailing doesn't say hey I did this

00:36:30,200 --> 00:36:35,900
really cool thing with Foreman check it

00:36:31,520 --> 00:36:37,490
out tell us on IRC the foreman or the

00:36:35,900 --> 00:36:41,140
forum in dev and we also have mailing

00:36:37,490 --> 00:36:45,950
lists for Foreman users and form a dev

00:36:41,140 --> 00:36:47,000
so we have time for some questions or if

00:36:45,950 --> 00:36:48,650
there's anything you want to see in the

00:36:47,000 --> 00:36:49,940
UI again if you missed in the beginning

00:36:48,650 --> 00:36:54,290
because it was too small i can show you

00:36:49,940 --> 00:37:01,000
again nope thank you very much any

00:36:54,290 --> 00:37:01,000
questions yep

00:37:11,150 --> 00:37:21,540
hmm yeah so the question is what Foreman

00:37:18,450 --> 00:37:23,460
uses to store the data so it's starting

00:37:21,540 --> 00:37:26,329
a postgres or my sequel database it's

00:37:23,460 --> 00:37:26,329
your choice what you use

00:37:39,099 --> 00:37:45,440
you probably don't want to interact with

00:37:41,570 --> 00:37:46,849
the database directly because rails has

00:37:45,440 --> 00:37:48,619
all kind of magic that's going on in the

00:37:46,849 --> 00:37:51,080
background so you're better off using

00:37:48,619 --> 00:37:53,869
the form an API or you can use the

00:37:51,080 --> 00:37:55,540
hammer CLI tool if you want to export

00:37:53,869 --> 00:37:57,980
the data and import it somewhere else

00:37:55,540 --> 00:38:01,280
there's a plugin for hammer called

00:37:57,980 --> 00:38:03,770
hammer CSV or something like this that

00:38:01,280 --> 00:38:08,330
can dump out a CSV file of various bits

00:38:03,770 --> 00:38:10,250
of information it's not perfect you can

00:38:08,330 --> 00:38:13,099
also backup the database and restore it

00:38:10,250 --> 00:38:17,890
elsewhere well you have the API or the

00:38:13,099 --> 00:38:17,890
CLI is probably the best choice okay

00:38:18,310 --> 00:38:32,510
anything else yep yeah so sorry where

00:38:28,670 --> 00:38:33,890
it's the physical location so the

00:38:32,510 --> 00:38:38,180
question is if you can store where the

00:38:33,890 --> 00:38:43,940
physical location is so form it has the

00:38:38,180 --> 00:38:49,210
concept of locations so uh you look tiny

00:38:43,940 --> 00:38:54,200
I know you can define multiple locations

00:38:49,210 --> 00:38:57,290
so you could have a location called

00:38:54,200 --> 00:39:01,060
Berlin if you're using a pure form in

00:38:57,290 --> 00:39:03,890
this is disabled oh it's not should be

00:39:01,060 --> 00:39:07,339
you can do nested locations so you could

00:39:03,890 --> 00:39:11,570
say Brill in DC one rack nine even to

00:39:07,339 --> 00:39:14,750
that level if you wanted that feature is

00:39:11,570 --> 00:39:18,589
a the multi organization it's part of

00:39:14,750 --> 00:39:22,099
the organization's feature I would say

00:39:18,589 --> 00:39:27,260
don't use it if you don't have to it's a

00:39:22,099 --> 00:39:28,910
bit buggy and perfectly honest about it

00:39:27,260 --> 00:39:32,859
but do you have the ability to store

00:39:28,910 --> 00:39:32,859
parameters on host so if you look

00:39:37,040 --> 00:39:42,000
at the host form you have this just free

00:39:40,230 --> 00:39:44,130
space to put in whatever information you

00:39:42,000 --> 00:39:50,640
want so you can store things like

00:39:44,130 --> 00:39:58,890
location so you can have a perimeter

00:39:50,640 --> 00:40:01,260
here this is something like that you can

00:39:58,890 --> 00:40:02,700
also use factor facts so if you actually

00:40:01,260 --> 00:40:04,980
store this information on the machine

00:40:02,700 --> 00:40:07,290
itself you can use a factor custom fact

00:40:04,980 --> 00:40:10,680
to upload the data there's also this

00:40:07,290 --> 00:40:15,090
additional information field where you

00:40:10,680 --> 00:40:18,120
can put in a comment and if you're using

00:40:15,090 --> 00:40:19,680
the form in column view plug-in you can

00:40:18,120 --> 00:40:22,800
even add this little comment field to

00:40:19,680 --> 00:40:24,300
the host list so you can see the

00:40:22,800 --> 00:40:25,650
comments right that list so you could

00:40:24,300 --> 00:40:26,940
use the comment field for location you

00:40:25,650 --> 00:40:38,580
can use perimeter so there's there's a

00:40:26,940 --> 00:40:39,660
few options yeah uh how yeah so you

00:40:38,580 --> 00:40:42,060
could get that you can get the data I

00:40:39,660 --> 00:40:43,650
always take a question sorry the

00:40:42,060 --> 00:40:46,920
question is how do you get the data out

00:40:43,650 --> 00:41:01,020
of form and into cmdb I guess all the

00:40:46,920 --> 00:41:04,620
other the other yeah so uh you could use

00:41:01,020 --> 00:41:07,080
format hooks for this for example so you

00:41:04,620 --> 00:41:09,480
can have 4 min you can write a little

00:41:07,080 --> 00:41:12,330
shell script on the create hook for host

00:41:09,480 --> 00:41:15,240
so when a new host is created it could

00:41:12,330 --> 00:41:16,410
query the CMDB to find out various

00:41:15,240 --> 00:41:19,350
information about it that's certainly

00:41:16,410 --> 00:41:21,600
possible there's nothing out of the box

00:41:19,350 --> 00:41:23,880
that we have you could also write a

00:41:21,600 --> 00:41:26,490
plug-in to integrate with your cmdb so

00:41:23,880 --> 00:41:27,990
you could write it you could easily I

00:41:26,490 --> 00:41:30,720
don't think would be too difficult to

00:41:27,990 --> 00:41:32,880
write a plug-in to add a tab to the host

00:41:30,720 --> 00:41:34,590
display page called cmdb that pulls the

00:41:32,880 --> 00:41:36,950
data live so you can do all kinds of

00:41:34,590 --> 00:41:36,950
stuff like that

00:41:40,290 --> 00:41:45,160
so for the other discovery one more

00:41:42,640 --> 00:41:48,430
question we're having multiple rule sets

00:41:45,160 --> 00:41:50,950
for example on how to configure it it's

00:41:48,430 --> 00:41:53,560
there a way to find out if for example

00:41:50,950 --> 00:41:56,800
you have multiple types defined that

00:41:53,560 --> 00:42:00,190
would match both types so yeah so this

00:41:56,800 --> 00:42:04,630
is the priority feature right here so

00:42:00,190 --> 00:42:06,160
what happens is a if I have so this rule

00:42:04,630 --> 00:42:08,470
right here CPU countless an eight I

00:42:06,160 --> 00:42:10,780
could have theoretically two rules

00:42:08,470 --> 00:42:13,030
called web server and some other server

00:42:10,780 --> 00:42:15,460
for CPU count less than eight so that

00:42:13,030 --> 00:42:18,400
would mean a discovery hosted match two

00:42:15,460 --> 00:42:19,990
rules Foreman resolves that first based

00:42:18,400 --> 00:42:24,040
on my priority so it picks the first

00:42:19,990 --> 00:42:27,010
priority one and then it then basis it

00:42:24,040 --> 00:42:30,100
on the house count so if this is

00:42:27,010 --> 00:42:31,870
priority 0 so it's the first but i'm

00:42:30,100 --> 00:42:34,210
already at the host limit it moves on to

00:42:31,870 --> 00:42:46,390
the next rule so yeah so you can

00:42:34,210 --> 00:42:49,380
organize it like that yeah uh so it

00:42:46,390 --> 00:42:51,880
works with our campus Christian sorry

00:42:49,380 --> 00:42:55,630
kid can you use katella with other

00:42:51,880 --> 00:42:57,880
operating systems I like Ubuntu so a

00:42:55,630 --> 00:43:08,890
bunch of Debian know we use the pulp

00:42:57,880 --> 00:43:11,130
project which is not working I can't

00:43:08,890 --> 00:43:11,130
spell

00:43:14,200 --> 00:43:20,810
this is the the backend for katella's

00:43:16,870 --> 00:43:22,520
for katella's repo storage if pulp ever

00:43:20,810 --> 00:43:24,500
supports debian and we really really

00:43:22,520 --> 00:43:26,870
wish it would we can quite easily add

00:43:24,500 --> 00:43:27,950
the support and see Foreman but other

00:43:26,870 --> 00:43:32,030
things other than right hand are

00:43:27,950 --> 00:43:34,910
supported you can use / or scientific

00:43:32,030 --> 00:43:37,250
linux of phantoms those all work fun but

00:43:34,910 --> 00:43:38,960
if you are a Python developer and you

00:43:37,250 --> 00:43:40,160
know debian really well i'm sure the

00:43:38,960 --> 00:43:53,450
Pope guys would really like to talk to

00:43:40,160 --> 00:44:01,820
you okay any more questions guess not

00:43:53,450 --> 00:44:05,390
okay then okay yeah so there is somebody

00:44:01,820 --> 00:44:07,880
came along yeah so he was saying there

00:44:05,390 --> 00:44:10,790
is there was an attempt at a debian

00:44:07,880 --> 00:44:13,100
provider for pulp this I'm this was I

00:44:10,790 --> 00:44:16,400
heard about it first time a year or two

00:44:13,100 --> 00:44:18,620
ago but I don't think it really got off

00:44:16,400 --> 00:44:20,030
the ground but it's something we want to

00:44:18,620 --> 00:44:22,310
revive but it's just a matter of having

00:44:20,030 --> 00:44:24,080
the resources to do it but if Pope

00:44:22,310 --> 00:44:32,930
supports debian we can add a ticket ello

00:44:24,080 --> 00:44:37,600
very easily okay anyone else all right

00:44:32,930 --> 00:44:37,600

YouTube URL: https://www.youtube.com/watch?v=wSpPjUPIEVU


