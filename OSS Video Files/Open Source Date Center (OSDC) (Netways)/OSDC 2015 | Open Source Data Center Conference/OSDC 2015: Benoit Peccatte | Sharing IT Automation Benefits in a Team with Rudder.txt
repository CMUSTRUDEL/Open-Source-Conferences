Title: OSDC 2015: Benoit Peccatte | Sharing IT Automation Benefits in a Team with Rudder
Publication date: 2015-04-30
Playlist: OSDC 2015 | Open Source Data Center Conference
Description: 
	Implementing a tool to automate IT infrastructure management has many undeniable benefits and is quickly becoming an industry standard. But using a tool like this usually has a pretty significant impact: new processes, new language(s) to learn, new way of doing pretty much everything on your infrastructure. Doing so in coordination with different profiles having a different view on the same infrastructure can be challenging. Moreover, there is a big risk that a &quot;devops hero&quot; holding the project becomes a bottleneck of the new process.
Some tools need a minimal skillset that must be acquired before using them. That is not an option for everyone in the team when they don't have enough time and willingness dedicated to learning a new language. Rudder is an easy to use, web-driven, role-based solution for IT Infrastructure Automation & Compliance. As such it lets different user profiles, from technical experts to manager and junior sysadmin concentrate on their part of the work and gives feedback on the infrastructure status at different levels.
This talk will show the advantages of Rudder when working in a team, how this product helps working together on infrastructure automation. You will see a real world scenario with a project carried out by different profiles such as an IT automation expert, a manager or a security officer, collaborating to install and use Rudder on an existing platform.
Captions: 
	00:00:06,850 --> 00:00:13,709
alright so welcome to the

00:00:10,440 --> 00:00:17,070
provided by by the way p then watch I

00:00:13,709 --> 00:00:20,119
get sorry with sharing iti automation

00:00:17,070 --> 00:00:24,300
benefits in the team was rather enjoy

00:00:20,119 --> 00:00:26,520
hello everyone I'm here to to talk to

00:00:24,300 --> 00:00:29,279
you about Radha and especially what it's

00:00:26,520 --> 00:00:34,790
used why it is useful to use it within a

00:00:29,279 --> 00:00:38,480
team so first let's talk about me and

00:00:34,790 --> 00:00:42,270
I'm a sysadmin and the developer to and

00:00:38,480 --> 00:00:46,140
now i work at no mission with the

00:00:42,270 --> 00:00:47,820
company producing rudder and ngf so red

00:00:46,140 --> 00:00:50,940
eyes the tool we are going to talk about

00:00:47,820 --> 00:00:53,569
and ncf is a framework to to write

00:00:50,940 --> 00:00:58,140
through techniques and rules easily

00:00:53,569 --> 00:01:02,760
configuration rules isn't um I'm French

00:00:58,140 --> 00:01:07,560
I think you can hear it and so I hope

00:01:02,760 --> 00:01:13,080
you'll understand me so what is Radha do

00:01:07,560 --> 00:01:15,810
how many of you know rather okay I was

00:01:13,080 --> 00:01:18,720
expecting that so that's why i have a

00:01:15,810 --> 00:01:23,250
few slides to to explain you what radar

00:01:18,720 --> 00:01:26,000
is and then i'll say i'll talk about why

00:01:23,250 --> 00:01:30,720
it is interesting in face of other

00:01:26,000 --> 00:01:35,490
configuration tools and i'll talk about

00:01:30,720 --> 00:01:37,860
how people use it on a day under the

00:01:35,490 --> 00:01:44,670
early life so that I can show you a

00:01:37,860 --> 00:01:46,590
little demonstration so brother is a an

00:01:44,670 --> 00:01:49,800
automatic configuration tool like you

00:01:46,590 --> 00:01:52,340
know perpetuo fan lot of other one so

00:01:49,800 --> 00:01:56,370
you know the benefits of using using one

00:01:52,340 --> 00:01:58,040
you can deploy faster you can deploy you

00:01:56,370 --> 00:02:00,570
can be more responsive you can have

00:01:58,040 --> 00:02:04,170
managed a lot of machines with the same

00:02:00,570 --> 00:02:08,159
configuration tool and so just you can

00:02:04,170 --> 00:02:12,180
scale easily and you can really prove

00:02:08,159 --> 00:02:16,110
reliability which means that arrows are

00:02:12,180 --> 00:02:20,040
tracked and so you can see why and when

00:02:16,110 --> 00:02:23,040
the they have been in a row what's

00:02:20,040 --> 00:02:24,240
specific about rather it's that it has

00:02:23,040 --> 00:02:26,850
from the start

00:02:24,240 --> 00:02:29,400
designed to be a to be a tool for

00:02:26,850 --> 00:02:32,100
automation and compliance soda machine

00:02:29,400 --> 00:02:35,310
you know and compliance is the the fact

00:02:32,100 --> 00:02:38,130
that you can at all the time know what

00:02:35,310 --> 00:02:43,320
the the status of the of your rules are

00:02:38,130 --> 00:02:46,410
and you can know you can write rules

00:02:43,320 --> 00:02:49,470
just to check something not to configure

00:02:46,410 --> 00:02:54,470
it but to check example if you need to

00:02:49,470 --> 00:02:56,760
have a comply to some legal rules you

00:02:54,470 --> 00:03:01,250
may want to check things without

00:02:56,760 --> 00:03:04,170
changing anything its goal is to have a

00:03:01,250 --> 00:03:06,630
simplified user experience you can

00:03:04,170 --> 00:03:09,390
easily use it if you don't know how to

00:03:06,630 --> 00:03:11,640
write code and so there's a web

00:03:09,390 --> 00:03:14,790
interface that allows you to configure

00:03:11,640 --> 00:03:17,970
things well you can't do everything with

00:03:14,790 --> 00:03:21,240
the web interface but most of it can be

00:03:17,970 --> 00:03:24,090
done via the web interface it's based on

00:03:21,240 --> 00:03:27,720
it's based on CF engine so we'll see why

00:03:24,090 --> 00:03:30,750
later it has a graphical reporting and

00:03:27,720 --> 00:03:34,380
can work on almost everything so from

00:03:30,750 --> 00:03:37,380
Windows Linux Android and a lot of all

00:03:34,380 --> 00:03:41,010
the platforms and it's really open

00:03:37,380 --> 00:03:47,340
source there's no Enterprise Edition

00:03:41,010 --> 00:03:51,540
it's a fully GPL so why did we choose GF

00:03:47,340 --> 00:03:55,530
engine safe engine is a is not easy to

00:03:51,540 --> 00:03:59,370
use but it it doesn't eat a lot of

00:03:55,530 --> 00:04:02,660
graham so it can it can it can use

00:03:59,370 --> 00:04:07,380
between 10 and 14 megabytes of RAM and

00:04:02,660 --> 00:04:09,750
it takes really few seconds to run most

00:04:07,380 --> 00:04:15,420
often in less than a second it can work

00:04:09,750 --> 00:04:17,630
on almost every system and so with this

00:04:15,420 --> 00:04:22,070
approach we can do continuous checking

00:04:17,630 --> 00:04:25,710
we check the most all the time and the

00:04:22,070 --> 00:04:27,990
CF engine can still work even if there's

00:04:25,710 --> 00:04:31,200
a problem with the network on where or

00:04:27,990 --> 00:04:33,990
with the main server save the server

00:04:31,200 --> 00:04:36,990
dies as a vengeance continues to apply

00:04:33,990 --> 00:04:38,129
its own rules as if the server the

00:04:36,990 --> 00:04:40,770
server was still there

00:04:38,129 --> 00:04:43,860
and when the server comes back it just

00:04:40,770 --> 00:04:48,360
updates its own rules and it continues

00:04:43,860 --> 00:04:51,239
to work and our could push all the

00:04:48,360 --> 00:04:57,269
reporting we did in the meantime and you

00:04:51,239 --> 00:05:01,589
have the reporting so with CF engine we

00:04:57,269 --> 00:05:05,009
can now have a really fast checking most

00:05:01,589 --> 00:05:06,899
of the time we use five minutes interval

00:05:05,009 --> 00:05:11,069
and we check every five minutes

00:05:06,899 --> 00:05:17,129
everything and people can adjust the

00:05:11,069 --> 00:05:20,849
this this interval so the one of the the

00:05:17,129 --> 00:05:22,649
goal that made rather possible was to

00:05:20,849 --> 00:05:25,619
separate configuration from

00:05:22,649 --> 00:05:27,719
implementation some people know how to

00:05:25,619 --> 00:05:31,019
write code and some people don't and

00:05:27,719 --> 00:05:35,189
don't want to learn so we just separated

00:05:31,019 --> 00:05:38,459
this the code that implements how to

00:05:35,189 --> 00:05:40,469
configure or something and the the

00:05:38,459 --> 00:05:43,050
settings of its parameters so all

00:05:40,469 --> 00:05:47,069
parameters are applied via the web

00:05:43,050 --> 00:05:50,009
interface and the road already said it

00:05:47,069 --> 00:05:55,559
works on as many platform as possible

00:05:50,009 --> 00:05:58,050
and have a reporting so when you start a

00:05:55,559 --> 00:06:01,589
configuration management project what do

00:05:58,050 --> 00:06:03,839
you do I'm sure you already did I'm

00:06:01,589 --> 00:06:08,819
moving your company so you choose a tool

00:06:03,839 --> 00:06:12,689
and you write code and it works but

00:06:08,819 --> 00:06:14,550
that's not exactly how it works there's

00:06:12,689 --> 00:06:17,309
a steep learning curve which means that

00:06:14,550 --> 00:06:19,379
a lot of people have to take time to

00:06:17,309 --> 00:06:21,509
learn the new tool you have to take time

00:06:19,379 --> 00:06:24,899
to learn how to code for this

00:06:21,509 --> 00:06:28,979
configuration management tool and they

00:06:24,899 --> 00:06:32,369
use new concept new the specific syntax

00:06:28,979 --> 00:06:33,990
and some people don't know what they

00:06:32,369 --> 00:06:37,559
will gain because they have to take a

00:06:33,990 --> 00:06:40,499
lot of time to to use this tool and so

00:06:37,559 --> 00:06:43,709
it's not obvious that it will be a game

00:06:40,499 --> 00:06:46,589
and some people just think that it's

00:06:43,709 --> 00:06:51,360
easy to to write a shell script and the

00:06:46,589 --> 00:06:54,300
right but it's not again so if if

00:06:51,360 --> 00:06:57,770
this is if those are really problems why

00:06:54,300 --> 00:07:01,050
do confusion management project work

00:06:57,770 --> 00:07:03,990
well often is because of our hero that's

00:07:01,050 --> 00:07:08,699
someone who try to to put its preferred

00:07:03,990 --> 00:07:11,580
tool and it succeed so I'm sure one of

00:07:08,699 --> 00:07:16,080
you are as already than that and put

00:07:11,580 --> 00:07:18,810
potato chef or another one into the your

00:07:16,080 --> 00:07:21,060
company that's the problem is that

00:07:18,810 --> 00:07:26,550
you're the only one who knows how to use

00:07:21,060 --> 00:07:30,569
it so um you may be two or three but not

00:07:26,550 --> 00:07:34,379
the whole team so that's a problem with

00:07:30,569 --> 00:07:36,539
this it's that the this hero the man who

00:07:34,379 --> 00:07:42,120
knows everything can become a bottleneck

00:07:36,539 --> 00:07:45,990
and can have he has to do things for

00:07:42,120 --> 00:07:48,000
other people my example if I if and a

00:07:45,990 --> 00:07:50,340
developer I want to make something work

00:07:48,000 --> 00:07:53,550
but I don't want to learn this tool I

00:07:50,340 --> 00:07:56,430
don't want to I don't know how to use it

00:07:53,550 --> 00:08:01,050
I have to ask this hero the guy who

00:07:56,430 --> 00:08:02,849
knows everything to do it for me so the

00:08:01,050 --> 00:08:05,550
result is that is that you have more

00:08:02,849 --> 00:08:10,050
work after you have put a configuration

00:08:05,550 --> 00:08:14,159
as room tool and as another another

00:08:10,050 --> 00:08:17,639
example is how this is the supervision

00:08:14,159 --> 00:08:20,009
team we have a problem but the problem I

00:08:17,639 --> 00:08:22,800
think it comes from the configuration

00:08:20,009 --> 00:08:24,870
tool and it has been a change today but

00:08:22,800 --> 00:08:27,870
we don't know how to use it you'll have

00:08:24,870 --> 00:08:32,519
to wait you up at night to know how to

00:08:27,870 --> 00:08:35,490
use it and to have your help so now this

00:08:32,519 --> 00:08:41,130
hero has to wake up at night whereas it

00:08:35,490 --> 00:08:45,240
didn't has to before so this is this

00:08:41,130 --> 00:08:47,910
typical solution if is you want to do

00:08:45,240 --> 00:08:50,640
something that will be easier and faster

00:08:47,910 --> 00:08:52,949
for you and at the end you you end up by

00:08:50,640 --> 00:08:58,940
only developing you tool but not doing

00:08:52,949 --> 00:09:02,700
the optional task so what can we do for

00:08:58,940 --> 00:09:07,430
for this hero well first

00:09:02,700 --> 00:09:10,230
to avoid the steep learning curve we can

00:09:07,430 --> 00:09:13,800
separate content and control meaning

00:09:10,230 --> 00:09:17,910
that if you know how to write the

00:09:13,800 --> 00:09:19,860
configuration and techniques you can

00:09:17,910 --> 00:09:22,040
write them but you don't have to cheat

00:09:19,860 --> 00:09:24,990
to teach how to write them to everyone

00:09:22,040 --> 00:09:27,360
just write them and reuse them in a

00:09:24,990 --> 00:09:32,630
different form from the web interface

00:09:27,360 --> 00:09:36,360
and so the the control which means the

00:09:32,630 --> 00:09:38,990
parameters in themselves I can put the

00:09:36,360 --> 00:09:41,880
port on which the CH is listening or

00:09:38,990 --> 00:09:45,270
anything that is strictly a parameter is

00:09:41,880 --> 00:09:49,170
not into the technique is nothing to the

00:09:45,270 --> 00:09:53,190
code so people can use it without

00:09:49,170 --> 00:09:58,020
knowing how it works for people who

00:09:53,190 --> 00:10:00,180
lacks motivation you can show the

00:09:58,020 --> 00:10:02,670
benefits because we have a constant

00:10:00,180 --> 00:10:05,310
reporting so you always know where it is

00:10:02,670 --> 00:10:07,490
when you're working on a project you

00:10:05,310 --> 00:10:11,010
know if it has been completed or not

00:10:07,490 --> 00:10:16,010
because you know how many machine has

00:10:11,010 --> 00:10:16,010
applied this rule that you were writing

00:10:16,310 --> 00:10:24,690
and to to avoid the frustration of

00:10:22,680 --> 00:10:27,720
people wanting just to write your script

00:10:24,690 --> 00:10:32,880
we provide tools to make it easy to

00:10:27,720 --> 00:10:37,320
write your own your own rules and we

00:10:32,880 --> 00:10:41,670
provide a lot of techniques from from

00:10:37,320 --> 00:10:44,010
within the shelf already have them so

00:10:41,670 --> 00:10:47,250
the advantage of red eyes it's easy to

00:10:44,010 --> 00:10:52,020
use and almost everybody can use it well

00:10:47,250 --> 00:10:55,310
I must but that's very theoretical so

00:10:52,020 --> 00:11:00,570
you may want to know what it looks like

00:10:55,310 --> 00:11:03,900
because that's these are just light so

00:11:00,570 --> 00:11:08,520
first I'll talk to you about how it

00:11:03,900 --> 00:11:13,410
works within the product let's look this

00:11:08,520 --> 00:11:16,050
looks like a bit complex streamer but

00:11:13,410 --> 00:11:19,800
we'll see it later and see how

00:11:16,050 --> 00:11:22,500
and how they interact it should please

00:11:19,800 --> 00:11:24,839
interact with the other ones just have

00:11:22,500 --> 00:11:27,690
to know that the other people intervene

00:11:24,839 --> 00:11:30,920
almost everywhere and depending on their

00:11:27,690 --> 00:11:36,180
role and the and the knowledge they can

00:11:30,920 --> 00:11:40,620
they can do things on different parts of

00:11:36,180 --> 00:11:42,600
the product so in theory when you work

00:11:40,620 --> 00:11:44,790
in a team there are people defining

00:11:42,600 --> 00:11:47,459
policies depot defining what we should

00:11:44,790 --> 00:11:51,470
change what we should do that people

00:11:47,459 --> 00:11:54,149
writing the code writing the technique

00:11:51,470 --> 00:11:57,000
so they are mostly experts that's our

00:11:54,149 --> 00:12:00,000
hero from before and there are a lot of

00:11:57,000 --> 00:12:02,810
different people that configure and that

00:12:00,000 --> 00:12:06,089
put parameters in those techniques and

00:12:02,810 --> 00:12:09,029
you have a continuous verification you

00:12:06,089 --> 00:12:10,709
have validation so you know you know

00:12:09,029 --> 00:12:12,450
what's going on and have reporting for

00:12:10,709 --> 00:12:17,370
everyone and this is the diamond wheel

00:12:12,450 --> 00:12:19,140
and you continue and continue but we see

00:12:17,370 --> 00:12:29,399
that in practice it's not always the

00:12:19,140 --> 00:12:33,779
case here is an example so I'm Hollis

00:12:29,399 --> 00:12:36,420
hello I want to know if there's any more

00:12:33,779 --> 00:12:39,300
debian six service because i want to

00:12:36,420 --> 00:12:43,589
remove the the mirror so to have some

00:12:39,300 --> 00:12:49,260
space so can i do it well let's check on

00:12:43,589 --> 00:12:51,630
rather so i've already installed rather

00:12:49,260 --> 00:12:55,050
and the on the small platform it's

00:12:51,630 --> 00:12:57,410
running very good vagrant and so i'll

00:12:55,050 --> 00:12:57,410
connect

00:13:06,779 --> 00:13:18,459
okay um it's a bit okay okay so you you

00:13:15,819 --> 00:13:20,980
you have the home page of the of the

00:13:18,459 --> 00:13:23,249
tool yeah you know how the current

00:13:20,980 --> 00:13:25,569
compliance the problems and the

00:13:23,249 --> 00:13:29,410
breakdown of the content of your

00:13:25,569 --> 00:13:32,110
platform so all nodes and how they are

00:13:29,410 --> 00:13:34,959
well here it's easy because almost all

00:13:32,110 --> 00:13:38,470
my agents are similar so you don't have

00:13:34,959 --> 00:13:40,660
any a lot of things to see but first

00:13:38,470 --> 00:13:45,399
let's go and search notes that are due

00:13:40,660 --> 00:13:55,049
beyond 6 so let's choose the pressure in

00:13:45,399 --> 00:14:02,910
system name will be TN and and return

00:13:55,049 --> 00:14:06,009
the version will be six dot anything

00:14:02,910 --> 00:14:09,149
let's search and we can see that there's

00:14:06,009 --> 00:14:13,809
one machine that high that is DB antics

00:14:09,149 --> 00:14:15,839
if you have seen recently and we can

00:14:13,809 --> 00:14:19,389
have more details if I click here

00:14:15,839 --> 00:14:21,610
details about the machine so you see

00:14:19,389 --> 00:14:24,009
that's it's a virtual box and it's

00:14:21,610 --> 00:14:27,999
hardwired file system everything that we

00:14:24,009 --> 00:14:30,579
can get from the inventory because

00:14:27,999 --> 00:14:34,689
rather comes with an inventory to let

00:14:30,579 --> 00:14:37,449
collect everything and the on the agent

00:14:34,689 --> 00:14:40,929
to know what's going to know what the

00:14:37,449 --> 00:14:46,029
the machine looked like so the answer

00:14:40,929 --> 00:14:50,319
the answer is no you can't remove your

00:14:46,029 --> 00:14:54,970
Libyan de enero because we still have

00:14:50,319 --> 00:14:59,100
the advantix but there's only one

00:14:54,970 --> 00:15:03,459
machine so it will soon be possible so

00:14:59,100 --> 00:15:06,369
from the what way I said before and we

00:15:03,459 --> 00:15:11,610
have in rota we have nodes and notice is

00:15:06,369 --> 00:15:14,049
the machine yet that you manage and

00:15:11,610 --> 00:15:16,869
understand this node we have a an

00:15:14,049 --> 00:15:19,569
inventory agent let's collect a lot of

00:15:16,869 --> 00:15:24,040
data that we use to configure the

00:15:19,569 --> 00:15:27,279
machine and we use it you will use them

00:15:24,040 --> 00:15:28,929
to make groups that make it easy to

00:15:27,279 --> 00:15:34,299
apply configuration to a group of

00:15:28,929 --> 00:15:37,089
similar nodes so Hannah another another

00:15:34,299 --> 00:15:42,339
example so I'm the security officer and

00:15:37,089 --> 00:15:45,610
we shouldn't allow ssh to be route to

00:15:42,339 --> 00:15:48,490
connect via ssh and so the question is

00:15:45,610 --> 00:15:52,629
have we done that and if you have not

00:15:48,490 --> 00:15:56,379
done that we should do it now so even if

00:15:52,629 --> 00:16:00,129
you're not a assisted mean even if you

00:15:56,379 --> 00:16:06,339
don't know how to to write code you can

00:16:00,129 --> 00:16:09,369
do it so I show you the next part is

00:16:06,339 --> 00:16:11,949
just have to write a directive let's

00:16:09,369 --> 00:16:18,039
change the stage configuration and apply

00:16:11,949 --> 00:16:20,949
it to the nodes you want to to change so

00:16:18,039 --> 00:16:25,689
here's how you do it in the application

00:16:20,949 --> 00:16:31,269
and we'll do it live so first right

00:16:25,689 --> 00:16:35,019
directive which are parameters for a

00:16:31,269 --> 00:16:38,879
host for anything in flight and we come

00:16:35,019 --> 00:16:41,619
from a large library of a pretty fun

00:16:38,879 --> 00:16:46,059
technique that can be used and one of

00:16:41,619 --> 00:16:50,980
them allows you to configure SSH so

00:16:46,059 --> 00:16:57,029
let's configure SSH and give a name to

00:16:50,980 --> 00:16:57,029
this technique and a bit redundant but

00:16:57,509 --> 00:17:06,250
um you can provide a description but i

00:17:00,129 --> 00:17:10,510
want for now so this here you can see

00:17:06,250 --> 00:17:12,459
the details and what you configure a

00:17:10,510 --> 00:17:14,289
sample if you have more than once ssh

00:17:12,459 --> 00:17:17,380
server you can get more than another

00:17:14,289 --> 00:17:19,659
configuration file and there are a lot

00:17:17,380 --> 00:17:21,689
of parameters i want to tell you each

00:17:19,659 --> 00:17:25,720
parameter because it will be a bit long

00:17:21,689 --> 00:17:29,530
and for some complex pointers you have a

00:17:25,720 --> 00:17:33,700
help so my goal is to disable

00:17:29,530 --> 00:17:37,810
um root login it's here so it will be

00:17:33,700 --> 00:17:40,960
disabled by default and I save this

00:17:37,810 --> 00:17:44,560
technique and each time I do something

00:17:40,960 --> 00:17:46,750
within this software it asked me to to

00:17:44,560 --> 00:17:49,750
provide a reason an explanation of the

00:17:46,750 --> 00:17:51,550
change well I don't have to fill it but

00:17:49,750 --> 00:17:53,680
it's a good idea to fill it because you

00:17:51,550 --> 00:18:00,270
then have a history of everything you've

00:17:53,680 --> 00:18:00,270
done in the on your infrastructure so

00:18:06,570 --> 00:18:15,280
okay so this is what I call before a

00:18:11,230 --> 00:18:17,710
directive yes so directive is just a

00:18:15,280 --> 00:18:20,950
bunch of amateurs it's not applied to

00:18:17,710 --> 00:18:23,980
anything now so i'll create a rule that

00:18:20,950 --> 00:18:31,390
apply this directive to some submissions

00:18:23,980 --> 00:18:33,720
so let's go on rules and create a rule

00:18:31,390 --> 00:18:33,720
and

00:18:39,410 --> 00:18:48,920
okay and now i can say i'm going to

00:18:44,360 --> 00:18:51,710
apply this directive to let's say all

00:18:48,920 --> 00:19:13,610
managed nodes because we want to apply

00:18:51,710 --> 00:19:17,330
to everyone ok and now um okay so we can

00:19:13,610 --> 00:19:20,420
see that the this is just in application

00:19:17,330 --> 00:19:23,960
which means that the the reagent and all

00:19:20,420 --> 00:19:26,390
the machines don't already have their

00:19:23,960 --> 00:19:30,080
role I don't have until it applied it

00:19:26,390 --> 00:19:33,620
now so we can have details and we can

00:19:30,080 --> 00:19:38,900
see that this directive is waiting for

00:19:33,620 --> 00:19:43,400
more data to know what's going on so I'm

00:19:38,900 --> 00:19:45,350
going to wait that you can run for the

00:19:43,400 --> 00:19:53,210
agent to run on everything to have

00:19:45,350 --> 00:19:56,390
information faster um so we've seen that

00:19:53,210 --> 00:19:59,360
it's easy to write to change the

00:19:56,390 --> 00:20:00,880
configuration of by example SSH without

00:19:59,360 --> 00:20:03,710
without knowing anything about

00:20:00,880 --> 00:20:12,890
configuration management without knowing

00:20:03,710 --> 00:20:15,170
a language um here's another example so

00:20:12,890 --> 00:20:18,440
we need what service so I just want to

00:20:15,170 --> 00:20:22,370
two other server to the older servers we

00:20:18,440 --> 00:20:26,870
have and managed it like before like the

00:20:22,370 --> 00:20:29,090
other one before so it's the same thing

00:20:26,870 --> 00:20:33,380
as before which means that we have an

00:20:29,090 --> 00:20:35,600
inventory and this node and we use this

00:20:33,380 --> 00:20:38,300
inventory to automatically add this note

00:20:35,600 --> 00:20:42,620
to a group by example the developer

00:20:38,300 --> 00:20:44,870
group and it will all the rules that are

00:20:42,620 --> 00:20:51,850
applied to this group will be applied to

00:20:44,870 --> 00:20:51,850
this new machine so

00:20:52,670 --> 00:20:58,140
this node is already installed I did it

00:20:55,500 --> 00:20:59,550
earlier if you want what do you know

00:20:58,140 --> 00:21:03,990
what I did just to install the engine

00:20:59,550 --> 00:21:06,690
the agent i installed with a single

00:21:03,990 --> 00:21:08,970
package it has no dependencies so you

00:21:06,690 --> 00:21:13,110
can install it using dpkg or anything

00:21:08,970 --> 00:21:16,590
you want and i configured the server it

00:21:13,110 --> 00:21:20,100
we is going to talk to and that's all

00:21:16,590 --> 00:21:23,910
well i sent the inventory to two so that

00:21:20,100 --> 00:21:26,490
the the server knows it so now i can see

00:21:23,910 --> 00:21:30,330
that within accept new nodes there's

00:21:26,490 --> 00:21:35,310
note that have a old information i

00:21:30,330 --> 00:21:38,460
wanted and its name agent five and we

00:21:35,310 --> 00:21:42,620
have only its inventory so we know what

00:21:38,460 --> 00:21:47,460
what the machine is and if i click here

00:21:42,620 --> 00:21:49,980
it saves me it tells me that when it

00:21:47,460 --> 00:21:52,370
wants that all these rules will be

00:21:49,980 --> 00:21:55,230
applied automatically to this machine

00:21:52,370 --> 00:21:59,280
but i don't have many rules but if i had

00:21:55,230 --> 00:22:01,260
a hundred ones it will list them and we

00:21:59,280 --> 00:22:06,090
would know what will be the state of the

00:22:01,260 --> 00:22:09,020
machine after it has been accepted so

00:22:06,090 --> 00:22:09,020
that's it accepted

00:22:13,810 --> 00:22:20,470
okay so there's no new node I have to

00:22:17,050 --> 00:22:26,620
accept but if I go to the list of nodes

00:22:20,470 --> 00:22:28,330
I will see that on this one too so let's

00:22:26,620 --> 00:22:31,750
see the reports of this node and this

00:22:28,330 --> 00:22:33,400
one too it's still waiting because we

00:22:31,750 --> 00:22:35,890
still don't know what has been done on

00:22:33,400 --> 00:22:41,860
the agent is probably trying to apply

00:22:35,890 --> 00:22:44,770
something now so once again we were able

00:22:41,860 --> 00:22:47,110
to to add a machine to a group to a

00:22:44,770 --> 00:22:50,890
machine to developer group by example

00:22:47,110 --> 00:22:59,170
and without knowing anything about how

00:22:50,890 --> 00:23:03,700
to code and another feature of Radha is

00:22:59,170 --> 00:23:06,520
the visibility of what you do so by

00:23:03,700 --> 00:23:09,780
example I they won't hear it's a someone

00:23:06,520 --> 00:23:12,640
want to know how the migration goes

00:23:09,780 --> 00:23:16,650
migration for a certificate change by

00:23:12,640 --> 00:23:20,200
example so we'll see that I made a rule

00:23:16,650 --> 00:23:25,090
22 to apply this change so we'll see if

00:23:20,200 --> 00:23:29,710
it's okay or not so I'm still connected

00:23:25,090 --> 00:23:43,840
and I'm going to the role that apply

00:23:29,710 --> 00:23:46,330
this change okay it's this one okay

00:23:43,840 --> 00:23:54,340
still the plan because it still find new

00:23:46,330 --> 00:23:58,980
rules we made earlier and how to wait a

00:23:54,340 --> 00:24:02,670
bit because we don't have the real data

00:23:58,980 --> 00:24:09,340
well you can you can already see that

00:24:02,670 --> 00:24:14,530
that some rules are applied web part of

00:24:09,340 --> 00:24:17,170
the rules okay okay and you have the

00:24:14,530 --> 00:24:20,890
breakdown from machine to machine for

00:24:17,170 --> 00:24:22,650
this machine just applied a higher

00:24:20,890 --> 00:24:26,890
command execution on its technique and

00:24:22,650 --> 00:24:27,190
it was not necessary to do it it wanted

00:24:26,890 --> 00:24:33,720
to

00:24:27,190 --> 00:24:36,640
via file good it did it it's updated the

00:24:33,720 --> 00:24:38,760
package and did it well it didn't do

00:24:36,640 --> 00:24:45,090
anything because it was right there and

00:24:38,760 --> 00:24:49,650
change permissions so on other agents

00:24:45,090 --> 00:24:49,650
wanted to see to show you one of them

00:24:50,970 --> 00:24:55,270
okay so here we see that the the

00:24:53,830 --> 00:24:57,280
progress is not completely finished

00:24:55,270 --> 00:25:00,760
because there's five percent of our on

00:24:57,280 --> 00:25:04,410
this role so we know that that's the

00:25:00,760 --> 00:25:04,410
problem somewhere and it's not finished

00:25:05,220 --> 00:25:13,090
rodion it so here on the agent to you

00:25:09,550 --> 00:25:16,450
can dig down and and see what's going on

00:25:13,090 --> 00:25:19,120
and the package install step was not

00:25:16,450 --> 00:25:21,760
right they have a problem they couldn t

00:25:19,120 --> 00:25:26,020
start it the the the engine couldn't

00:25:21,760 --> 00:25:27,580
install Python 3 openssl library and if

00:25:26,020 --> 00:25:32,020
you recall correctly it's because agent

00:25:27,580 --> 00:25:34,480
2 is the last debian 6 i'm this

00:25:32,020 --> 00:25:37,630
infrastructure and there's no such

00:25:34,480 --> 00:25:39,790
package and advantix so you know where

00:25:37,630 --> 00:25:44,650
you are you know if it's finished or not

00:25:39,790 --> 00:25:47,400
and if if within some time this agent is

00:25:44,650 --> 00:25:50,320
this machine is abraded you'll be in

00:25:47,400 --> 00:25:59,980
debian 7 and everything will be ok

00:25:50,320 --> 00:26:04,560
instantly well after a few minutes so we

00:25:59,980 --> 00:26:07,360
have the main the main page shows you

00:26:04,560 --> 00:26:10,390
the global compliance the details of

00:26:07,360 --> 00:26:12,370
everything on your platform so currently

00:26:10,390 --> 00:26:16,660
that we have only sixty-four percent a

00:26:12,370 --> 00:26:22,420
compliance which means that there's some

00:26:16,660 --> 00:26:23,920
problems and here it is a detail on with

00:26:22,420 --> 00:26:25,600
a clock code and that means that four

00:26:23,920 --> 00:26:27,400
percent not need to do anything

00:26:25,600 --> 00:26:30,520
thirty-five percent are correctly

00:26:27,400 --> 00:26:33,460
applied for seven percent are waiting

00:26:30,520 --> 00:26:38,140
for something and ten percent certain

00:26:33,460 --> 00:26:39,730
percent of Eros so we already have

00:26:38,140 --> 00:26:48,880
enough of you of our

00:26:39,730 --> 00:26:52,630
platform hmm so on every rule every node

00:26:48,880 --> 00:26:55,330
everything can be detailed and you can

00:26:52,630 --> 00:26:58,300
drill down to know what the what the

00:26:55,330 --> 00:27:00,850
status of each component is so if you

00:26:58,300 --> 00:27:03,610
run a command within a technique you can

00:27:00,850 --> 00:27:05,650
have the statues of this command then

00:27:03,610 --> 00:27:10,980
you don't only have the status of your

00:27:05,650 --> 00:27:10,980
own rule you have everything in detail

00:27:11,610 --> 00:27:16,360
so here is an internal another example

00:27:14,280 --> 00:27:17,980
we have an excessive load in our

00:27:16,360 --> 00:27:26,920
database I think something has changed

00:27:17,980 --> 00:27:29,140
but what so let's see um so we we track

00:27:26,920 --> 00:27:33,250
everything that's going on within rather

00:27:29,140 --> 00:27:36,340
and so it everything generates an event

00:27:33,250 --> 00:27:40,330
and we have the list of all events here

00:27:36,340 --> 00:27:41,860
and some events are half details so you

00:27:40,330 --> 00:27:44,610
know what has changed and have the

00:27:41,860 --> 00:27:49,480
details of this so let's look for

00:27:44,610 --> 00:27:53,080
postgresql and we see that yesterday

00:27:49,480 --> 00:27:56,860
there was a change on the directive so

00:27:53,080 --> 00:28:00,250
on a bunch of configuration sample and

00:27:56,860 --> 00:28:03,460
we can see that here the shape of a

00:28:00,250 --> 00:28:05,470
usage has changed someone has changed

00:28:03,460 --> 00:28:11,830
the parameter for share buffer on Pascal

00:28:05,470 --> 00:28:16,300
screen so we know that it was yesterday

00:28:11,830 --> 00:28:18,430
at that time we know that the the guy

00:28:16,300 --> 00:28:24,100
put a reason so explaining why you did

00:28:18,430 --> 00:28:26,230
that we know who did it um Bob and we

00:28:24,100 --> 00:28:29,140
can roll back we can come back to this

00:28:26,230 --> 00:28:32,230
state and change everything and if that

00:28:29,140 --> 00:28:34,900
has been done after it can be rolled

00:28:32,230 --> 00:28:39,820
back to just before or just after this

00:28:34,900 --> 00:28:43,330
state and but if you look you can find

00:28:39,820 --> 00:28:46,210
other interesting informations and y 0

00:28:43,330 --> 00:28:48,310
and postgres by example what was the

00:28:46,210 --> 00:28:51,390
first rule the first modification when

00:28:48,310 --> 00:28:51,390
it was down

00:28:52,330 --> 00:28:58,419
you have some things that have no

00:28:54,370 --> 00:29:01,779
rollback possibility it's just because

00:28:58,419 --> 00:29:04,360
the the rudder desta matically things I

00:29:01,779 --> 00:29:06,190
feel if it's automatic it will redo it

00:29:04,360 --> 00:29:14,110
again when you roll back so it's you

00:29:06,190 --> 00:29:25,059
can't roll back um so this is what we've

00:29:14,110 --> 00:29:28,000
just seen so another use case yes now

00:29:25,059 --> 00:29:30,070
you know that the hull has been a

00:29:28,000 --> 00:29:32,529
problem with postgresql so we want

00:29:30,070 --> 00:29:35,139
everything to fit to be to have a double

00:29:32,529 --> 00:29:40,389
validation to be very dated by someone

00:29:35,139 --> 00:29:44,590
else okay so how do we do this well it

00:29:40,389 --> 00:29:47,019
is possible within rather and so there's

00:29:44,590 --> 00:29:53,440
a lot of settings within the application

00:29:47,019 --> 00:29:57,070
and you can force people to to go

00:29:53,440 --> 00:29:59,320
through change requests and if you go to

00:29:57,070 --> 00:30:02,409
through trench request someone else has

00:29:59,320 --> 00:30:03,850
to validate what you just did and for

00:30:02,409 --> 00:30:06,669
the demonstration we can allow

00:30:03,850 --> 00:30:12,850
self-validation but you know it's not a

00:30:06,669 --> 00:30:14,470
good idea but I'll do it and another

00:30:12,850 --> 00:30:18,990
thing is that you've seen that

00:30:14,470 --> 00:30:23,769
everything we we did there was a change

00:30:18,990 --> 00:30:25,659
a message it was asked to the user you

00:30:23,769 --> 00:30:28,570
can either disable it or make it

00:30:25,659 --> 00:30:34,600
mandatory that everybody has to write

00:30:28,570 --> 00:30:38,019
something so i won't change it so now

00:30:34,600 --> 00:30:40,690
that's new and try here and each time

00:30:38,019 --> 00:30:48,970
you want to change something my example

00:30:40,690 --> 00:30:52,080
will change um this postgresql hmm okay

00:30:48,970 --> 00:30:52,080
with it

00:30:52,940 --> 00:30:57,890
okay so if you want to see the technique

00:30:54,920 --> 00:31:02,120
it's it's an addition of a configuration

00:30:57,890 --> 00:31:10,520
file that does essentially replacement

00:31:02,120 --> 00:31:14,050
of line ok so here it is it put the

00:31:10,520 --> 00:31:14,050
value like this

00:31:19,980 --> 00:31:27,299
okay so now it's a different message you

00:31:23,940 --> 00:31:30,120
have you can't validate it to just

00:31:27,299 --> 00:31:32,400
submit it for validation so it's not

00:31:30,120 --> 00:31:36,540
nothing has changed when I will submit

00:31:32,400 --> 00:31:40,350
it I have to okay so now there's one

00:31:36,540 --> 00:31:45,080
change request we already on it and you

00:31:40,350 --> 00:31:45,080
can have to connect with another account

00:31:45,590 --> 00:32:00,870
example let's say Bob and Bob can

00:31:56,370 --> 00:32:04,860
validate this and say yes I agree is the

00:32:00,870 --> 00:32:07,049
change we wanted so it's the the the

00:32:04,860 --> 00:32:09,030
story of the change request and the diff

00:32:07,049 --> 00:32:11,059
is a row technical detail and what is

00:32:09,030 --> 00:32:14,040
going to change that we can see that

00:32:11,059 --> 00:32:20,520
here we're going to change the shed the

00:32:14,040 --> 00:32:23,040
first line and I can validate and we'll

00:32:20,520 --> 00:32:27,450
see here that test two steps validation

00:32:23,040 --> 00:32:29,750
you can put it in pending deployment you

00:32:27,450 --> 00:32:32,970
can put it in deployed which means that

00:32:29,750 --> 00:32:35,700
if you want to accept things but not

00:32:32,970 --> 00:32:39,090
deployed right now because by example if

00:32:35,700 --> 00:32:43,049
you do change only on monday on friday

00:32:39,090 --> 00:32:45,510
if your dishes and you can just put it

00:32:43,049 --> 00:32:48,450
in pending deployment and wait for

00:32:45,510 --> 00:32:53,340
someone to deploy it later or if i say

00:32:48,450 --> 00:32:58,620
deployed and i'm ok this will validate

00:32:53,340 --> 00:33:02,929
the change so now it's if it's on other

00:32:58,620 --> 00:33:02,929
missions well the SQL machine

00:33:06,210 --> 00:33:15,720
okay so he's okay and the workflow the

00:33:10,800 --> 00:33:19,290
workflow is so three steps first you put

00:33:15,720 --> 00:33:21,030
a change request in Nevada you make a

00:33:19,290 --> 00:33:24,120
change request then you put it in

00:33:21,030 --> 00:33:28,380
pending validation maybe because you

00:33:24,120 --> 00:33:30,360
just make it made it and then you can

00:33:28,380 --> 00:33:33,650
put it in pending deployment or go

00:33:30,360 --> 00:33:38,130
straight to deployed depending on your

00:33:33,650 --> 00:33:44,940
workflow and how you you work and of

00:33:38,130 --> 00:33:47,850
course you can cancel it so another one

00:33:44,940 --> 00:33:51,180
so I'm a developer I don't know how to

00:33:47,850 --> 00:33:53,460
use any tool but I want a new

00:33:51,180 --> 00:33:56,610
configuration file for our application

00:33:53,460 --> 00:33:59,250
and I want to put it on our all our

00:33:56,610 --> 00:34:02,160
servers and this configuration file will

00:33:59,250 --> 00:34:06,060
have some content that will be different

00:34:02,160 --> 00:34:10,380
from one server to another so how do you

00:34:06,060 --> 00:34:14,000
do that well it's now that you right

00:34:10,380 --> 00:34:17,160
technique you start to write code and

00:34:14,000 --> 00:34:20,250
this code you will write it you can then

00:34:17,160 --> 00:34:24,210
share it with other people and you'll

00:34:20,250 --> 00:34:28,620
see that since a few months you can

00:34:24,210 --> 00:34:30,630
write code not only from the from your

00:34:28,620 --> 00:34:33,810
text editor but you can write it from

00:34:30,630 --> 00:34:40,950
the web interface too so I show you this

00:34:33,810 --> 00:34:43,590
method and so let's write a new

00:34:40,950 --> 00:34:49,170
technique so it's code that says how to

00:34:43,590 --> 00:34:51,440
do things so we'll try to and configure

00:34:49,170 --> 00:34:51,440
the application

00:35:03,160 --> 00:35:17,920
okay and so the technique is made of

00:35:12,750 --> 00:35:22,690
successive call of a method method so I

00:35:17,920 --> 00:35:25,540
add one mitten which will be copy a file

00:35:22,690 --> 00:35:28,480
from remote sauce Alka purified from the

00:35:25,540 --> 00:35:34,420
the server to the local machine to the

00:35:28,480 --> 00:35:37,150
agent we can't see it okay tell put

00:35:34,420 --> 00:35:39,880
burritos ah here it's just the source

00:35:37,150 --> 00:35:48,090
file path and the destination file path

00:35:39,880 --> 00:35:48,090
and little and so i hope i have it here

00:35:51,810 --> 00:35:58,090
so there's a shared file directory that

00:35:54,430 --> 00:36:00,040
you can share with other people and what

00:35:58,090 --> 00:36:04,720
I've not said is that our developer just

00:36:00,040 --> 00:36:07,780
put the configuration file here and you

00:36:04,720 --> 00:36:09,730
want us to put the host name here so

00:36:07,780 --> 00:36:12,610
first thing is that we're going to use

00:36:09,730 --> 00:36:17,110
mustache as templating management

00:36:12,610 --> 00:36:24,300
competing code so i'll put the mustache

00:36:17,110 --> 00:36:27,430
form of the variable so this is our

00:36:24,300 --> 00:36:33,030
configuration file that will go we're

00:36:27,430 --> 00:36:37,000
going to put so the source path is this

00:36:33,030 --> 00:36:39,910
one the source file not just the path to

00:36:37,000 --> 00:36:42,970
the directory and this nation file will

00:36:39,910 --> 00:36:45,970
be a temporary file under this nation

00:36:42,970 --> 00:36:49,990
because we want to first download it and

00:36:45,970 --> 00:36:53,880
then apply the the templating so this

00:36:49,990 --> 00:36:53,880
nation file will be something like

00:36:58,540 --> 00:37:11,610
here there's a temporary directory for

00:37:02,290 --> 00:37:14,700
for that okay

00:37:11,610 --> 00:37:17,010
so we just kept I the file we just wrote

00:37:14,700 --> 00:37:21,720
a code to compile file from the server

00:37:17,010 --> 00:37:23,790
to the agent now we want this this to be

00:37:21,720 --> 00:37:28,080
a template that will be put somewhere

00:37:23,790 --> 00:37:34,620
and the energy station agent so there's

00:37:28,080 --> 00:37:38,490
a file and then play tone so I want to

00:37:34,620 --> 00:37:44,460
use it mustache template and the file

00:37:38,490 --> 00:37:52,760
will be this one and I want to put it

00:37:44,460 --> 00:37:56,970
somewhere let's say sorry that okay and

00:37:52,760 --> 00:38:00,150
that's it so now we've got a technique

00:37:56,970 --> 00:38:03,000
that is able to configure your your

00:38:00,150 --> 00:38:06,720
application from a template let's put on

00:38:03,000 --> 00:38:10,650
the server and this configuration will

00:38:06,720 --> 00:38:15,120
be put on agent wherever you apply this

00:38:10,650 --> 00:38:16,680
technique so I as we did before to apply

00:38:15,120 --> 00:38:18,960
this technique you just create directive

00:38:16,680 --> 00:38:28,340
with parameters there's no parameter

00:38:18,960 --> 00:38:28,340
here where is it I'm not specific enough

00:38:34,560 --> 00:38:42,080
they forget it they forget to save

00:38:44,829 --> 00:38:49,319
let's get some minutes yeah

00:38:53,890 --> 00:39:05,200
okay it's here so we just create a bunch

00:38:56,830 --> 00:39:10,920
of parameters and there's no parameter I

00:39:05,200 --> 00:39:14,980
didn't put any here's a message again i

00:39:10,920 --> 00:39:19,600
think i will remove the change request

00:39:14,980 --> 00:39:27,730
because it's a bit it's not easy to make

00:39:19,600 --> 00:39:31,800
change with it okay and so let's apply

00:39:27,730 --> 00:39:31,800
this rule to new servers

00:39:37,190 --> 00:39:48,020
I don't know what groups I have ok so

00:39:45,380 --> 00:39:53,210
now I just apply this what I've done to

00:39:48,020 --> 00:39:56,300
a bunch of machine so it was this

00:39:53,210 --> 00:39:59,980
directive and I can apply to either

00:39:56,300 --> 00:40:04,369
groups that I made our global groups

00:39:59,980 --> 00:40:10,700
let's say to the test server it's travis

00:40:04,369 --> 00:40:13,250
it's a group we don't know yet ok so now

00:40:10,700 --> 00:40:15,260
this will be applied on altar servers

00:40:13,250 --> 00:40:17,839
and the configuration file will be

00:40:15,260 --> 00:40:22,400
applied with template unaltered service

00:40:17,839 --> 00:40:24,470
and this time had to write some code but

00:40:22,400 --> 00:40:27,980
again it was not difficult we just had

00:40:24,470 --> 00:40:35,210
to click on a few methods and it could

00:40:27,980 --> 00:40:38,210
send the those files but this is a this

00:40:35,210 --> 00:40:40,339
interface is at its beginning so there

00:40:38,210 --> 00:40:42,560
may be some things you can't do with it

00:40:40,339 --> 00:40:50,780
and you'll have to rely on the writing

00:40:42,560 --> 00:40:52,430
code on VI or something else so you can

00:40:50,780 --> 00:40:54,500
see here that the the history of

00:40:52,430 --> 00:40:57,140
applying and things have been applied

00:40:54,500 --> 00:41:05,329
today and yesterday so you can search

00:40:57,140 --> 00:41:08,089
what has changed if you want so I won't

00:41:05,329 --> 00:41:12,920
show you how how to write code with VI

00:41:08,089 --> 00:41:19,160
it would be at the clangor so what

00:41:12,920 --> 00:41:22,910
you've seen within the interface is what

00:41:19,160 --> 00:41:25,490
we call ngf ngf is the those methods

00:41:22,910 --> 00:41:29,930
that are used to prove to produce a

00:41:25,490 --> 00:41:32,510
technique so it's it's a bunch of easy

00:41:29,930 --> 00:41:35,540
to use methods to copy a file to make

00:41:32,510 --> 00:41:38,000
templates and out over the things i

00:41:35,540 --> 00:41:39,800
didn't detail everything and it's made

00:41:38,000 --> 00:41:41,720
to be independent of radha if you want

00:41:39,800 --> 00:41:44,960
to use it you can just use it without

00:41:41,720 --> 00:41:48,280
using rather just to make it easy to

00:41:44,960 --> 00:41:48,280
write a technique

00:41:49,420 --> 00:41:57,720
so that's 1 i'd like to know if there's

00:41:54,160 --> 00:42:00,549
a rules that are not blind anymore and

00:41:57,720 --> 00:42:03,730
to do that you can click everywhere and

00:42:00,549 --> 00:42:06,430
interface but clicking clicking is not

00:42:03,730 --> 00:42:09,069
fun and you may have a lot of rules so

00:42:06,430 --> 00:42:11,260
you may want to automate this so rather

00:42:09,069 --> 00:42:15,069
is based on the fully rest restful

00:42:11,260 --> 00:42:18,510
interface a restful api so you can ask

00:42:15,069 --> 00:42:24,700
anything to rather using a come online

00:42:18,510 --> 00:42:38,980
so i'll show you how i did that ok so i

00:42:24,700 --> 00:42:40,930
wrote a little script data so and this

00:42:38,980 --> 00:42:44,559
is the command i use to list all the

00:42:40,930 --> 00:42:49,450
directives this single command returns a

00:42:44,559 --> 00:42:53,380
list of jason structures and you can do

00:42:49,450 --> 00:42:57,089
whatever you want with it and i use JQ

00:42:53,380 --> 00:43:00,520
to pass it do you know Jake you should

00:42:57,089 --> 00:43:04,420
it's very powerful you can do almost

00:43:00,520 --> 00:43:06,700
anything with it over Jason so at least

00:43:04,420 --> 00:43:09,369
all the directives and just get the ID

00:43:06,700 --> 00:43:12,160
so with JQ I get only the list of our

00:43:09,369 --> 00:43:16,480
diet if and get only the ID and for each

00:43:12,160 --> 00:43:18,220
ID I list all the rules and filters only

00:43:16,480 --> 00:43:22,089
the one that has this directive within

00:43:18,220 --> 00:43:27,040
it and then just display something

00:43:22,089 --> 00:43:36,010
display the directive name and ID so

00:43:27,040 --> 00:43:39,819
let's let's run this and it works so you

00:43:36,010 --> 00:43:42,130
can easily extend and the mail plate

00:43:39,819 --> 00:43:44,680
rather server and its rules its

00:43:42,130 --> 00:43:48,160
techniques it's a directive everything

00:43:44,680 --> 00:43:51,700
within rather we are a REST API so you

00:43:48,160 --> 00:43:54,250
didn't see the rest api here because we

00:43:51,700 --> 00:43:57,819
built a command-line interface over it

00:43:54,250 --> 00:44:01,660
but it's still a REST API and we wrote

00:43:57,819 --> 00:44:04,020
the command line in Python and so it's

00:44:01,660 --> 00:44:04,020
easy to use

00:44:09,069 --> 00:44:15,859
yes this this API is based on tokens so

00:44:13,730 --> 00:44:18,589
you can you have used token to

00:44:15,859 --> 00:44:21,160
authenticate here it's written within a

00:44:18,589 --> 00:44:26,390
configuration file for the command line

00:44:21,160 --> 00:44:28,730
so it's taken is here and this token is

00:44:26,390 --> 00:44:31,819
can be accessed from within the

00:44:28,730 --> 00:44:34,160
interface and so we can know who did

00:44:31,819 --> 00:44:37,640
something and why what not why but who

00:44:34,160 --> 00:44:41,839
did something in one so here's the IP

00:44:37,640 --> 00:44:44,450
icons and is the token husband's one I

00:44:41,839 --> 00:44:47,420
know its name is it was made for an

00:44:44,450 --> 00:44:53,690
admin script so you can see in the event

00:44:47,420 --> 00:45:03,160
log 20 you can see what has been done so

00:44:53,690 --> 00:45:03,160
does um so there's a problem and ok

00:45:08,530 --> 00:45:11,430
it works

00:45:13,180 --> 00:45:22,130
okay now you'll have to trust me and so

00:45:19,009 --> 00:45:25,279
you can see even within the even if you

00:45:22,130 --> 00:45:27,640
if you are using the API you can see

00:45:25,279 --> 00:45:30,650
what is going on and who did something

00:45:27,640 --> 00:45:39,769
not only when you go through the

00:45:30,650 --> 00:45:42,890
interface so so I've been through what

00:45:39,769 --> 00:45:46,249
roller is I hope you know you now know

00:45:42,890 --> 00:45:49,249
what is roller and I hope you find it

00:45:46,249 --> 00:45:51,709
interesting may want to try it we have

00:45:49,249 --> 00:45:55,219
on our website and it's not here it's

00:45:51,709 --> 00:45:57,410
rather project a dog we have a sample

00:45:55,219 --> 00:45:59,719
demos and you can build your own ones

00:45:57,410 --> 00:46:01,999
using a vagrant so we have a vagrant

00:45:59,719 --> 00:46:07,039
project on github if you want to try it

00:46:01,999 --> 00:46:18,109
and the and I show you how to use it and

00:46:07,039 --> 00:46:23,359
the real-life problems oh thank you well

00:46:18,109 --> 00:46:25,969
thank you very much questions so the

00:46:23,359 --> 00:46:30,319
question is is rather on every on the

00:46:25,969 --> 00:46:33,049
repository for every system yes it is

00:46:30,319 --> 00:46:35,719
you I'm surprised you can find it for

00:46:33,049 --> 00:46:41,719
Hogan to its for 12 we don't have every

00:46:35,719 --> 00:46:44,959
winter version but we have a yes this is

00:46:41,719 --> 00:46:48,109
a public repository yes yes yes you can

00:46:44,959 --> 00:46:50,509
you can use it and we have our

00:46:48,109 --> 00:46:52,339
repository we have already versions too

00:46:50,509 --> 00:46:55,009
so if you want to use a specific version

00:46:52,339 --> 00:46:59,630
another one you can still use it from

00:46:55,009 --> 00:47:02,709
the repository thank you for the

00:46:59,630 --> 00:47:02,709

YouTube URL: https://www.youtube.com/watch?v=32mouYxRxdQ


