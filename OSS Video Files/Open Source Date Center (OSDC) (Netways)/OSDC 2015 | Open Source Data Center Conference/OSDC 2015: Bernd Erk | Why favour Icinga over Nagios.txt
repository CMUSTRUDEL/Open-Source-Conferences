Title: OSDC 2015: Bernd Erk | Why favour Icinga over Nagios
Publication date: 2015-04-30
Playlist: OSDC 2015 | Open Source Data Center Conference
Description: 
	Most sys admins have a love-hate relationship with Nagios based monitoring solutions. Backed by a sizable community, users have learned to live with it’s shortcomings in scaling, configuration, and modern integration options.

Taking advantage of the tremendous number of supported hard- and software, Icinga leaves all legacy limitations behind. It delivers an easily scalable solution, with clustering, load balancing, automated replication, and even business process monitoring out-of-the-box. Based on a new configuration format with advanced language features - like conditional processing and complex type support - monitoring agile environments works like a breeze. Existing modules for Puppet, Chef and Ansible ramp up the rollout time and ensure a continuous and up to date monitoring environment.

The talk will demonstrate how popular tools such as Graphite, Logstash, or Graylog integrate better and easier than ever before. In addition to that we’ll introduce the new Icinga Web 2 interface and give a brief introduction into the technical architecture.
Captions: 
	00:00:06,580 --> 00:00:12,019
yeah good afternoon thanks for for come

00:00:09,740 --> 00:00:15,080
so some of you look really tired like me

00:00:12,019 --> 00:00:19,939
perhaps but I hope you can join me for

00:00:15,080 --> 00:00:22,009
the next three hours perhaps some of you

00:00:19,939 --> 00:00:23,810
noticed i'm i'm working at net waste my

00:00:22,009 --> 00:00:26,000
name is Amanda which sounds a little bit

00:00:23,810 --> 00:00:27,980
stupid in English you can reach me by

00:00:26,000 --> 00:00:31,279
email or follow me on twitter if you

00:00:27,980 --> 00:00:32,390
want to do that I'm India singer project

00:00:31,279 --> 00:00:35,269
since the beginning so it's nearly

00:00:32,390 --> 00:00:39,430
nearly six years so we reformed naggers

00:00:35,269 --> 00:00:44,659
about in I think was a tenth of may 2009

00:00:39,430 --> 00:00:46,640
I'm I'm in there since that I give a

00:00:44,659 --> 00:00:48,769
little bit introduction what I singer is

00:00:46,640 --> 00:00:50,809
I assume that that most of you have a

00:00:48,769 --> 00:00:52,670
have an idea what I singer is what

00:00:50,809 --> 00:00:55,580
monitoring is but just a couple of

00:00:52,670 --> 00:00:58,820
slides that you get an expression what

00:00:55,580 --> 00:01:01,360
we think i think is so for us it's it's

00:00:58,820 --> 00:01:06,049
an open sores enterprise monitoring tool

00:01:01,360 --> 00:01:08,510
focusing on on monitoring stuff alerting

00:01:06,049 --> 00:01:10,490
stuff so do something react and probably

00:01:08,510 --> 00:01:14,299
generate data for performance monitoring

00:01:10,490 --> 00:01:17,020
or reporting so the histories that we we

00:01:14,299 --> 00:01:20,240
 the project I told you in 2009

00:01:17,020 --> 00:01:22,119
and we still running the the old I

00:01:20,240 --> 00:01:25,969
singer one so we still in maintenance

00:01:22,119 --> 00:01:28,100
but since 2014 we are out with icing at

00:01:25,969 --> 00:01:31,520
two so we did I think it's stable since

00:01:28,100 --> 00:01:35,420
june or july 2014 so we started it with

00:01:31,520 --> 00:01:37,130
three years ago and so our focus is on

00:01:35,420 --> 00:01:40,759
icinga too and this is also the focus of

00:01:37,130 --> 00:01:44,090
the talk focusing on that so the project

00:01:40,759 --> 00:01:47,149
is run by all these people spread across

00:01:44,090 --> 00:01:49,609
the world and we are open for you so

00:01:47,149 --> 00:01:52,069
somebody of you has a great idea or has

00:01:49,609 --> 00:01:55,520
knowledge in C++ or ansible puppet chef

00:01:52,069 --> 00:01:57,109
or documentation whatever so please feel

00:01:55,520 --> 00:02:01,579
free get in touch with us we are

00:01:57,109 --> 00:02:03,170
everywhere social media IRC so if you

00:02:01,579 --> 00:02:06,499
want to contribute we would really

00:02:03,170 --> 00:02:08,569
appreciate that um another thing that's

00:02:06,499 --> 00:02:11,209
probably my two marketing slides we have

00:02:08,569 --> 00:02:13,040
our own plug in exchange the major

00:02:11,209 --> 00:02:15,290
reason is because I singer users were

00:02:13,040 --> 00:02:16,790
not allowed to take I singer plugins on

00:02:15,290 --> 00:02:19,400
August exchange anymore they kick their

00:02:16,790 --> 00:02:20,960
plugins out there which was the reason

00:02:19,400 --> 00:02:23,120
we have an all platform now so if you

00:02:20,960 --> 00:02:26,360
have a plug-in or module or something

00:02:23,120 --> 00:02:28,640
related to icinga or shrinking or Nagas

00:02:26,360 --> 00:02:31,040
this is pretty okay for us you can

00:02:28,640 --> 00:02:32,569
upload it here and we have also a cool

00:02:31,040 --> 00:02:34,549
feature that we can sing it with your

00:02:32,569 --> 00:02:36,140
github repository so if ever plugin or

00:02:34,549 --> 00:02:38,360
something in your github repository you

00:02:36,140 --> 00:02:40,610
can log in and then you perhaps you

00:02:38,360 --> 00:02:43,400
cannot see it but normally it is there

00:02:40,610 --> 00:02:44,569
it lists your repositories you have at

00:02:43,400 --> 00:02:46,519
github and then you can sync your

00:02:44,569 --> 00:02:48,620
project that you don't have to re upload

00:02:46,519 --> 00:02:50,180
your plugin or add on every time you you

00:02:48,620 --> 00:02:52,760
do some stuff with it so this is a

00:02:50,180 --> 00:02:54,860
pretty cool feature and user base is

00:02:52,760 --> 00:02:57,319
growing the last the last month so it's

00:02:54,860 --> 00:02:58,970
online since October last year and this

00:02:57,319 --> 00:03:02,480
is a really good place to to find stuff

00:02:58,970 --> 00:03:04,150
reisinger what I singer the project in

00:03:02,480 --> 00:03:06,829
general is a little bit more than the

00:03:04,150 --> 00:03:09,440
software itself so we have at the moment

00:03:06,829 --> 00:03:11,750
these two cores like a single one and I

00:03:09,440 --> 00:03:13,700
singer too we have a couple of web

00:03:11,750 --> 00:03:17,780
interfaces that will tell more about

00:03:13,700 --> 00:03:19,250
that later we have reporting it's not

00:03:17,780 --> 00:03:20,629
under heavy maintenance at the moment so

00:03:19,250 --> 00:03:23,930
we have the chest / paste based

00:03:20,629 --> 00:03:25,430
reporting we will try to integrate more

00:03:23,930 --> 00:03:28,669
and more reports in the web interface in

00:03:25,430 --> 00:03:30,290
the future so Jasper will be will lose a

00:03:28,669 --> 00:03:31,700
little bit of its importance for the

00:03:30,290 --> 00:03:32,989
project but we will keep it on

00:03:31,700 --> 00:03:35,150
maintenance and we try to figure out

00:03:32,989 --> 00:03:38,299
what we do with it in the future and

00:03:35,150 --> 00:03:40,389
documentation is important we we have a

00:03:38,299 --> 00:03:43,160
documentation based on unmarked down

00:03:40,389 --> 00:03:46,269
it's really good so especially the I

00:03:43,160 --> 00:03:49,519
singer to documentation is really really

00:03:46,269 --> 00:03:51,709
detailed so you can see all the columns

00:03:49,519 --> 00:03:53,810
whatever we expose with live status and

00:03:51,709 --> 00:03:56,180
database model everything so it's really

00:03:53,810 --> 00:03:57,859
make sense to to check this out so but

00:03:56,180 --> 00:04:00,620
today I will focus on I singer too

00:03:57,859 --> 00:04:04,160
because this is our our new hot and

00:04:00,620 --> 00:04:06,049
i want to show you that a short

00:04:04,160 --> 00:04:08,840
introduction what what I singer what I

00:04:06,049 --> 00:04:11,239
singer is so one of the approaches we

00:04:08,840 --> 00:04:13,609
would like to monitor everything and you

00:04:11,239 --> 00:04:15,230
can monitor everything so if it has a

00:04:13,609 --> 00:04:18,919
network interface it's easier to monitor

00:04:15,230 --> 00:04:20,780
it but if is no interface available you

00:04:18,919 --> 00:04:22,970
can do something with this context you

00:04:20,780 --> 00:04:24,320
can yeah you can monitor your fridge is

00:04:22,970 --> 00:04:27,800
somebody put up the milk at night you

00:04:24,320 --> 00:04:29,810
can do it with whatever you want to an

00:04:27,800 --> 00:04:31,669
important thing is that we do it in a

00:04:29,810 --> 00:04:33,260
regular interval so going to the server

00:04:31,669 --> 00:04:36,380
every five minutes is one of the basic

00:04:33,260 --> 00:04:36,750
concepts in our singer or every second

00:04:36,380 --> 00:04:40,020
if you

00:04:36,750 --> 00:04:41,610
12 that we get the status out and we

00:04:40,020 --> 00:04:44,310
also get the performance data out of

00:04:41,610 --> 00:04:45,990
this check the other thing which is

00:04:44,310 --> 00:04:48,720
important like reacting on that so we

00:04:45,990 --> 00:04:51,980
notifying on the channel you like so

00:04:48,720 --> 00:04:54,960
email text message voice alert chava or

00:04:51,980 --> 00:04:58,230
just a like traffic sign on your desk

00:04:54,960 --> 00:05:00,210
which goes red whatever you want to we

00:04:58,230 --> 00:05:01,830
we have a we have the chance to detect

00:05:00,210 --> 00:05:04,140
dependencies of if you have configured

00:05:01,830 --> 00:05:06,060
it so we can see the ruder is offline

00:05:04,140 --> 00:05:09,000
that you probably not able to reach the

00:05:06,060 --> 00:05:10,470
network's own behind it and you can also

00:05:09,000 --> 00:05:13,260
do something like event handlers so

00:05:10,470 --> 00:05:15,750
react on specific down times or you can

00:05:13,260 --> 00:05:17,430
react on specific situations and I don't

00:05:15,750 --> 00:05:19,530
know restart the web server call

00:05:17,430 --> 00:05:22,170
somebody shut down the data center

00:05:19,530 --> 00:05:25,170
whatever you want to and the third thing

00:05:22,170 --> 00:05:27,540
is like we forward stuff so we want to

00:05:25,170 --> 00:05:29,430
do something with the data you can

00:05:27,540 --> 00:05:31,110
forward locks to grey log or log stash

00:05:29,430 --> 00:05:33,420
if you want to using using the Gulf

00:05:31,110 --> 00:05:36,540
export you can write data directly to

00:05:33,420 --> 00:05:38,250
graphite or in flux DB which is really

00:05:36,540 --> 00:05:40,350
advanced feature compared to what you

00:05:38,250 --> 00:05:42,150
can do with Nagas so we can export Nagas

00:05:40,350 --> 00:05:43,320
data to graphite but it's a mess you

00:05:42,150 --> 00:05:45,750
have to do everything on your own and

00:05:43,320 --> 00:05:50,940
and using a single it's just like an

00:05:45,750 --> 00:05:53,250
able feature and that's it in general I

00:05:50,940 --> 00:05:54,780
singer too has no line of code from

00:05:53,250 --> 00:05:56,910
icinga one so it's totally rewritten

00:05:54,780 --> 00:05:59,640
from scratch it's written in C++ and

00:05:56,910 --> 00:06:02,160
using boost library it runs on every

00:05:59,640 --> 00:06:04,050
linux unix distribution it also runs on

00:06:02,160 --> 00:06:06,420
Raspberry Pi if we want to use it it

00:06:04,050 --> 00:06:08,940
also runs on windows so we can you can

00:06:06,420 --> 00:06:10,620
launch it on windows perhaps running as

00:06:08,940 --> 00:06:12,930
a server on windows is not the primary

00:06:10,620 --> 00:06:15,060
target but you can monitor windows

00:06:12,930 --> 00:06:16,380
server and you can perhaps use a Windows

00:06:15,060 --> 00:06:18,570
Server as a nexus bridge to another

00:06:16,380 --> 00:06:20,430
network so on if you want to so it

00:06:18,570 --> 00:06:23,280
really works and we did take care that

00:06:20,430 --> 00:06:24,750
it it works in the future hunting it

00:06:23,280 --> 00:06:29,220
through the build server and testing it

00:06:24,750 --> 00:06:31,650
and this works really good we support my

00:06:29,220 --> 00:06:33,150
sequel and postgres so for now and

00:06:31,650 --> 00:06:34,920
hopefully for the near future we don't

00:06:33,150 --> 00:06:37,590
have any Oracle support it's not planned

00:06:34,920 --> 00:06:39,570
we don't have to some people complaining

00:06:37,590 --> 00:06:41,010
that we don't have oracle support but it

00:06:39,570 --> 00:06:44,490
didn't work so well in the old version

00:06:41,010 --> 00:06:46,290
so we decided to not do it again depends

00:06:44,490 --> 00:06:49,350
it it's hard to support Oracle because

00:06:46,290 --> 00:06:50,360
of their library and code oci things you

00:06:49,350 --> 00:06:53,130
need

00:06:50,360 --> 00:06:55,290
so for now I don't think that we did we

00:06:53,130 --> 00:06:56,910
make it and we have one and really

00:06:55,290 --> 00:06:58,230
extensive template library it's a little

00:06:56,910 --> 00:06:59,670
bit hidden because it sits somewhere

00:06:58,230 --> 00:07:02,460
delivered with the packages and we

00:06:59,670 --> 00:07:07,440
really would like you to use the

00:07:02,460 --> 00:07:09,780
packages gives on hard but all these

00:07:07,440 --> 00:07:11,370
things to to configure plug in an HTTP

00:07:09,780 --> 00:07:13,380
and all the stuff you normally need for

00:07:11,370 --> 00:07:15,480
monitoring system is still there so you

00:07:13,380 --> 00:07:17,850
don't have to to reinvent the wheel

00:07:15,480 --> 00:07:19,770
again and we get a lot of contribution

00:07:17,850 --> 00:07:22,560
on that on these items so this is saying

00:07:19,770 --> 00:07:27,030
a template library it's important that

00:07:22,560 --> 00:07:29,490
you forget the other ice or not ITIL and

00:07:27,030 --> 00:07:31,020
this is really interesting to use and

00:07:29,490 --> 00:07:34,200
the current version just to just to

00:07:31,020 --> 00:07:36,300
complete that that area 2 3 4 is out

00:07:34,200 --> 00:07:38,880
since a couple of days it's our current

00:07:36,300 --> 00:07:40,800
version our our next major version is

00:07:38,880 --> 00:07:43,740
planned and I will repeat this later and

00:07:40,800 --> 00:07:45,960
I think for November then to that for

00:07:43,740 --> 00:07:48,180
will come out we have extensive public

00:07:45,960 --> 00:07:50,460
chef ansible and all this thing support

00:07:48,180 --> 00:07:53,310
so it's really easy to use config

00:07:50,460 --> 00:07:55,470
management to install it distributed and

00:07:53,310 --> 00:07:57,690
we have a lovely vagrant boxes where you

00:07:55,470 --> 00:07:59,580
can install I singer with a cluster

00:07:57,690 --> 00:08:00,930
setup graphite everything was just the

00:07:59,580 --> 00:08:02,280
way current up and can decide what you

00:08:00,930 --> 00:08:07,860
want to do so if you want to play around

00:08:02,280 --> 00:08:09,510
it's really cool okay this talk looks a

00:08:07,860 --> 00:08:13,260
little bit like an Argo special but it's

00:08:09,510 --> 00:08:15,960
it's not as so one of the reasons so we

00:08:13,260 --> 00:08:18,450
we forked narcosis because we loved the

00:08:15,960 --> 00:08:20,550
concept of nagios so in general we like

00:08:18,450 --> 00:08:24,060
the the basic concept Nagas has because

00:08:20,550 --> 00:08:26,850
we think Nagas is good in a in some way

00:08:24,060 --> 00:08:29,580
so one big advantage in in August is

00:08:26,850 --> 00:08:31,950
it's it's really easy so an ape can

00:08:29,580 --> 00:08:33,900
write a plug-in for Nagas it's just the

00:08:31,950 --> 00:08:35,550
code just some sentence it's okay and

00:08:33,900 --> 00:08:38,219
pretty lips perhaps performance data if

00:08:35,550 --> 00:08:41,490
you want to but it's really easy it's a

00:08:38,219 --> 00:08:43,020
really simple software stack so Nagas is

00:08:41,490 --> 00:08:46,320
just an install you don't have to have a

00:08:43,020 --> 00:08:48,089
database or RabbitMQ or whatever you

00:08:46,320 --> 00:08:50,700
don't have a need a cloud to run it it's

00:08:48,089 --> 00:08:52,320
really easy just the process you don't

00:08:50,700 --> 00:08:54,930
have any external dependencies so it's

00:08:52,320 --> 00:08:59,070
really easy easy to just execute some

00:08:54,930 --> 00:09:00,990
stuff am this active check thing so you

00:08:59,070 --> 00:09:03,900
can do agent-based checks with I singer

00:09:00,990 --> 00:09:05,760
as well or with nagios but

00:09:03,900 --> 00:09:07,470
tective Texas is a very powerful thing

00:09:05,760 --> 00:09:09,870
that pressing a button and really see

00:09:07,470 --> 00:09:11,760
the status which going on now gathering

00:09:09,870 --> 00:09:14,280
the performance data and nevertheless

00:09:11,760 --> 00:09:16,320
also the the huge community so which is

00:09:14,280 --> 00:09:18,060
one of the biggest advantages nargis and

00:09:16,320 --> 00:09:21,150
icing it has that there are thousands of

00:09:18,060 --> 00:09:23,460
plugins millions of users using it so

00:09:21,150 --> 00:09:27,660
the general idea of Nagas was it's it's

00:09:23,460 --> 00:09:30,300
okay well then the question is why I

00:09:27,660 --> 00:09:33,090
singer if nagas is okay and there are

00:09:30,300 --> 00:09:36,810
several problems with nagios one big

00:09:33,090 --> 00:09:38,760
thing Nagas does not scale so if you

00:09:36,810 --> 00:09:40,080
have time and you have service and you

00:09:38,760 --> 00:09:42,210
are focusing in your monitoring the

00:09:40,080 --> 00:09:45,330
whole day you can make it scale but the

00:09:42,210 --> 00:09:47,910
basic concept is that nagas is a single

00:09:45,330 --> 00:09:49,320
loop it's just running and running and

00:09:47,910 --> 00:09:51,630
if you have a server with a couple of

00:09:49,320 --> 00:09:53,610
CPUs it's only using one and this is

00:09:51,630 --> 00:09:56,250
going to be hot and the other cpus do

00:09:53,610 --> 00:09:58,470
nothing go to bed this is a really big

00:09:56,250 --> 00:10:00,200
issue and there are a lot of limitations

00:09:58,470 --> 00:10:02,430
if you want to if you do massive

00:10:00,200 --> 00:10:04,830
monitoring talking to the external

00:10:02,430 --> 00:10:07,380
interfacing putting data to the external

00:10:04,830 --> 00:10:10,380
command file was in the earlier versions

00:10:07,380 --> 00:10:11,790
writing data to the database could could

00:10:10,380 --> 00:10:14,490
lead you to totally log out of your

00:10:11,790 --> 00:10:17,520
system so scaling is a really big issue

00:10:14,490 --> 00:10:20,580
with with nargis and they did some work

00:10:17,520 --> 00:10:23,310
in the last years 22 yeah to tell that

00:10:20,580 --> 00:10:25,710
but it's still a big thing like pushing

00:10:23,310 --> 00:10:27,300
a lot of data in the in their service

00:10:25,710 --> 00:10:30,360
check Reaper still does not work very

00:10:27,300 --> 00:10:32,250
good so I think I true this was one of

00:10:30,360 --> 00:10:33,810
the basic architectural concept we said

00:10:32,250 --> 00:10:36,390
we need something multi-threaded because

00:10:33,810 --> 00:10:38,640
I singer is it's a fork engine it's like

00:10:36,390 --> 00:10:42,660
we forking millions of times executing

00:10:38,640 --> 00:10:45,300
plugins the load is really good

00:10:42,660 --> 00:10:47,100
distributed so you can do massive checks

00:10:45,300 --> 00:10:49,650
on a single box and you can also add

00:10:47,100 --> 00:10:53,010
boxing and scale horizontal if you want

00:10:49,650 --> 00:10:55,500
to and you can monitor thousands of

00:10:53,010 --> 00:10:57,210
devices in a second interval and this is

00:10:55,500 --> 00:11:00,480
a little bit of a marketing benchmark I

00:10:57,210 --> 00:11:02,550
will name it because benchmarking I

00:11:00,480 --> 00:11:04,950
singer is really hot because the real

00:11:02,550 --> 00:11:07,440
time and the real ability of my singer

00:11:04,950 --> 00:11:09,180
is mostly related to your plugins so if

00:11:07,440 --> 00:11:12,480
you're executing a 40 megabyte per

00:11:09,180 --> 00:11:15,600
monster every second then it will be not

00:11:12,480 --> 00:11:17,520
so good and this is just an example so

00:11:15,600 --> 00:11:21,240
we executed 1 million service check

00:11:17,520 --> 00:11:26,310
1 million service check in a 60 second

00:11:21,240 --> 00:11:30,990
interval okay oh yeah that's my problem

00:11:26,310 --> 00:11:32,970
that I always like to walk her yeah so

00:11:30,990 --> 00:11:35,330
the important thing is that the the

00:11:32,970 --> 00:11:38,130
first part is a standard I singer one

00:11:35,330 --> 00:11:40,050
the second bar is a singer one with gmn

00:11:38,130 --> 00:11:41,280
demon is a pretty cool solution if

00:11:40,050 --> 00:11:43,350
you're still on i sing i want to

00:11:41,280 --> 00:11:47,100
distribute the load using gilman brokers

00:11:43,350 --> 00:11:50,940
it works very well but but using icinga

00:11:47,100 --> 00:11:54,540
two works better another thing is like

00:11:50,940 --> 00:11:56,670
adding modules so if you if using if

00:11:54,540 --> 00:11:59,130
you're using na goes I singer in the in

00:11:56,670 --> 00:12:02,910
the earlier versions adding live status

00:11:59,130 --> 00:12:06,300
editing I do stuff is really hard so for

00:12:02,910 --> 00:12:08,400
example if you want to enable if you

00:12:06,300 --> 00:12:15,890
want to enable and Microsoft PowerPoint

00:12:08,400 --> 00:12:15,890
encounter the problem okay

00:12:25,980 --> 00:12:41,160
okay okay my name is Bernard we start

00:12:29,940 --> 00:12:44,280
again no we don't do that sorry i call

00:12:41,160 --> 00:12:45,960
microsoft later but this is an

00:12:44,280 --> 00:12:55,410
unlicensed version of those this could

00:12:45,960 --> 00:13:00,150
be a problem okay I hopefully did I hope

00:12:55,410 --> 00:13:01,470
that it's not crashing again okay so for

00:13:00,150 --> 00:13:03,180
example if you want to eat live status

00:13:01,470 --> 00:13:05,490
true to I sing I want an Argus it's like

00:13:03,180 --> 00:13:07,350
getting the packages compiling the stuff

00:13:05,490 --> 00:13:09,090
you've on trade you have to the

00:13:07,350 --> 00:13:11,370
configure you have to the make so it's

00:13:09,090 --> 00:13:13,500
doable no problem you can do it then you

00:13:11,370 --> 00:13:15,360
have to copy over the libraries and then

00:13:13,500 --> 00:13:18,570
you need to define the broker

00:13:15,360 --> 00:13:20,610
configuration waive the file and this is

00:13:18,570 --> 00:13:23,190
pretty hard so the old broker concept

00:13:20,610 --> 00:13:25,170
and I singer was it was able to you were

00:13:23,190 --> 00:13:26,970
able to do so it but they were only a

00:13:25,170 --> 00:13:28,680
couple of modules for for Nagas and I

00:13:26,970 --> 00:13:30,750
singer one I would say it's about five

00:13:28,680 --> 00:13:33,470
or six modules existing which you really

00:13:30,750 --> 00:13:37,170
be able talking to that event broker

00:13:33,470 --> 00:13:40,290
mapi and we totally changed that concept

00:13:37,170 --> 00:13:42,420
than I singer too I singer too as a

00:13:40,290 --> 00:13:45,090
feature-based concept so there's there's

00:13:42,420 --> 00:13:47,580
a core a core core so the heart of I

00:13:45,090 --> 00:13:50,730
singer which always runs and then we

00:13:47,580 --> 00:13:52,050
have a lot of features and you can

00:13:50,730 --> 00:13:54,150
decide which features you want to have

00:13:52,050 --> 00:13:56,460
so you don't have to enable all of them

00:13:54,150 --> 00:13:58,350
so the basic which which makes total

00:13:56,460 --> 00:13:59,640
sense is to enable the checker because

00:13:58,350 --> 00:14:02,550
if you don't enable the checker you will

00:13:59,640 --> 00:14:04,860
not receive any result perhaps if you

00:14:02,550 --> 00:14:07,860
enter a passive results it makes sense

00:14:04,860 --> 00:14:09,300
anyway and all the other things is

00:14:07,860 --> 00:14:10,560
really it's up to you what you want to

00:14:09,300 --> 00:14:12,630
do so we're in a cluster if you're

00:14:10,560 --> 00:14:14,880
distributed and you can also run I

00:14:12,630 --> 00:14:17,280
singer to on a client so you can use I

00:14:14,880 --> 00:14:19,170
singer to as a monitoring agent it

00:14:17,280 --> 00:14:25,350
consumes about I don't know 20 megabytes

00:14:19,170 --> 00:14:27,780
of memory is it right more or less okay

00:14:25,350 --> 00:14:30,210
for 30,000 services we consume about 20

00:14:27,780 --> 00:14:34,490
mega buzz if you have 30,000 services on

00:14:30,210 --> 00:14:34,490
one box chapeau

00:14:34,540 --> 00:14:40,970
okay um we have a powerful CLI so

00:14:38,809 --> 00:14:42,740
invested a lot of time like all that

00:14:40,970 --> 00:14:45,829
features we have are really easy to

00:14:42,740 --> 00:14:47,689
achievable and making them easy for us

00:14:45,829 --> 00:14:50,329
it's a chance like adding features buy

00:14:47,689 --> 00:14:51,860
time so because we started um I think

00:14:50,329 --> 00:14:53,930
graphite was not there in the first

00:14:51,860 --> 00:14:56,720
version so we added graphite then we

00:14:53,930 --> 00:14:59,110
added open TTP's aboard then we added in

00:14:56,720 --> 00:15:01,639
Flook no net influx influx is graphite

00:14:59,110 --> 00:15:03,290
open TST be in the net last version so

00:15:01,639 --> 00:15:05,360
for us it's easy to deliver more and

00:15:03,290 --> 00:15:09,259
more with I singer without breaking some

00:15:05,360 --> 00:15:11,720
configuration stuff and another thing is

00:15:09,259 --> 00:15:13,999
you can really do crazy things with it

00:15:11,720 --> 00:15:15,589
you can have meshed up clusters and a

00:15:13,999 --> 00:15:18,439
lot of a single notes and sew ins and

00:15:15,589 --> 00:15:21,170
everything but we wanted to make it easy

00:15:18,439 --> 00:15:23,420
further for the big user base because

00:15:21,170 --> 00:15:25,309
the big user base using nagas a singer

00:15:23,420 --> 00:15:27,439
they have 20 hosts this is ninety

00:15:25,309 --> 00:15:29,420
percent of all the people using nagios I

00:15:27,439 --> 00:15:31,639
singer and all the monitoring tools out

00:15:29,420 --> 00:15:33,170
there they have 20 or 30 hosts not more

00:15:31,639 --> 00:15:35,180
they don't have thousand clouds things

00:15:33,170 --> 00:15:37,189
to monitor and for them we really want

00:15:35,180 --> 00:15:39,259
to make like installing a package up

00:15:37,189 --> 00:15:41,029
getting store whatever and then have it

00:15:39,259 --> 00:15:43,309
without configuring a lot of brokers

00:15:41,029 --> 00:15:45,379
stuff so make it easy for them but you

00:15:43,309 --> 00:15:49,220
can make it complex and we see later how

00:15:45,379 --> 00:15:50,929
you can do it and for example due to go

00:15:49,220 --> 00:15:53,779
back to the lead back to the live

00:15:50,929 --> 00:15:56,329
starters installation so installing live

00:15:53,779 --> 00:15:58,519
shadows on our singer to is is this one

00:15:56,329 --> 00:16:00,110
if you want to enable I've status it's

00:15:58,519 --> 00:16:01,519
in a singer feature enable I've stutters

00:16:00,110 --> 00:16:03,649
then you have to restart I singer too

00:16:01,519 --> 00:16:06,499
and that's it is everything you have to

00:16:03,649 --> 00:16:09,829
do it's delivered with a code also if

00:16:06,499 --> 00:16:12,379
you want to use the ID utils and I know

00:16:09,829 --> 00:16:14,929
in the old world I do ND Utahns was not

00:16:12,379 --> 00:16:18,709
very popular because it's it was not

00:16:14,929 --> 00:16:20,120
good now it is if you want to enable the

00:16:18,709 --> 00:16:23,449
distressed and feature enable I do my

00:16:20,120 --> 00:16:29,259
sequel or I do post Cree and and that's

00:16:23,449 --> 00:16:29,259
it and how this works I shall we now um

00:16:29,529 --> 00:16:38,389
or not okay I just would like to pray

00:16:36,319 --> 00:16:40,879
aloud play around a little bit with a

00:16:38,389 --> 00:16:43,899
console so with that I think are to

00:16:40,879 --> 00:16:45,610
command can you see it can you read it

00:16:43,899 --> 00:16:53,330
okay

00:16:45,610 --> 00:16:55,310
yeah okay with the a single to come and

00:16:53,330 --> 00:16:57,350
we have top completion so if you're

00:16:55,310 --> 00:16:59,630
executing I sing a to you see all that

00:16:57,350 --> 00:17:02,570
features we have for now and for example

00:16:59,630 --> 00:17:04,370
if use a singer feature list you can see

00:17:02,570 --> 00:17:05,930
what's going on so what the features are

00:17:04,370 --> 00:17:08,000
disabled at the moment what features are

00:17:05,930 --> 00:17:10,010
enabled and it's really easy to enable

00:17:08,000 --> 00:17:12,170
other features so for now checker is

00:17:10,010 --> 00:17:13,970
enabled which should go so but for

00:17:12,170 --> 00:17:16,370
example if we want to enable graphite so

00:17:13,970 --> 00:17:19,090
it's a ok graphite is really hot i want

00:17:16,370 --> 00:17:24,050
to have it it's just like any singer to

00:17:19,090 --> 00:17:25,610
feature enable graphite and that's it we

00:17:24,050 --> 00:17:27,830
just have to restart I singer too and

00:17:25,610 --> 00:17:29,450
then it's done it's it's from the from

00:17:27,830 --> 00:17:31,910
the concept it works a little bit like a

00:17:29,450 --> 00:17:33,590
patch if side enabled side disabled

00:17:31,910 --> 00:17:35,960
concept it's just creating a soft link

00:17:33,590 --> 00:17:45,920
which is very easy and if we go to the

00:17:35,960 --> 00:17:47,840
config features enabled you see what's

00:17:45,920 --> 00:17:50,960
going on with a graphite conf for

00:17:47,840 --> 00:17:52,430
example you have just to configure the

00:17:50,960 --> 00:17:54,530
host and the part where graphite sits

00:17:52,430 --> 00:17:59,330
and and that's it you don't have to do

00:17:54,530 --> 00:18:03,140
more another thing you can do with our

00:17:59,330 --> 00:18:05,090
singer you have a chance to so if you

00:18:03,140 --> 00:18:06,620
have a complex configuration so if you

00:18:05,090 --> 00:18:08,270
inherit objects if you're using

00:18:06,620 --> 00:18:09,320
templates and override specific

00:18:08,270 --> 00:18:11,390
thresholds over time in new

00:18:09,320 --> 00:18:14,030
configuration with Nagas it's really

00:18:11,390 --> 00:18:15,770
hard to determine what is the original

00:18:14,030 --> 00:18:17,750
of a specific attribute so you're

00:18:15,770 --> 00:18:19,430
overriding I don't know a grip this

00:18:17,750 --> 00:18:21,020
critical and some places using a

00:18:19,430 --> 00:18:22,220
template here using other template there

00:18:21,020 --> 00:18:23,810
and then you're asking yourself

00:18:22,220 --> 00:18:25,850
sometimes okay where does this come from

00:18:23,810 --> 00:18:27,110
there were ever a critical at fifty

00:18:25,850 --> 00:18:30,140
percent whatever and I don't know where

00:18:27,110 --> 00:18:32,570
it is and I think it too is really easy

00:18:30,140 --> 00:18:38,420
to do that so we have something like an

00:18:32,570 --> 00:18:41,510
object list where you can go a name and

00:18:38,420 --> 00:18:47,330
i hope this i hit the right name I think

00:18:41,510 --> 00:18:49,100
this server must exist yeah so I repeat

00:18:47,330 --> 00:18:51,080
the command so repeat is like object

00:18:49,100 --> 00:18:54,020
list you search for a specific object

00:18:51,080 --> 00:18:56,570
you can also limit it to specific object

00:18:54,020 --> 00:18:58,220
types if you want to and say okay I have

00:18:56,570 --> 00:18:59,030
a host name in my monitoring system and

00:18:58,220 --> 00:19:00,920
I want to know what's going

00:18:59,030 --> 00:19:02,750
where's the configuration located and

00:19:00,920 --> 00:19:06,050
this is a pretty cool thing because if

00:19:02,750 --> 00:19:07,400
you have more of it you really see from

00:19:06,050 --> 00:19:10,190
which config file you see we're using

00:19:07,400 --> 00:19:13,670
template which we're custom variables

00:19:10,190 --> 00:19:16,430
come like this wreck or test com you can

00:19:13,670 --> 00:19:18,350
see exactly the file the line and the

00:19:16,430 --> 00:19:19,940
column so it's really easy if you're

00:19:18,350 --> 00:19:21,700
using iterate configuration if you're

00:19:19,940 --> 00:19:24,650
losing apply rules we come to the later

00:19:21,700 --> 00:19:27,530
to come back to the original this is

00:19:24,650 --> 00:19:32,960
really powerful to find perhaps errors

00:19:27,530 --> 00:19:36,350
or to get a clue what's going on we have

00:19:32,960 --> 00:19:38,000
also something like a live console we

00:19:36,350 --> 00:19:39,110
also have that on the website so if you

00:19:38,000 --> 00:19:41,000
want to play around with it on the

00:19:39,110 --> 00:19:43,700
website there's a live console because

00:19:41,000 --> 00:19:46,490
in the next versions we want to be I

00:19:43,700 --> 00:19:50,240
singer to more interactive so it's it's

00:19:46,490 --> 00:19:51,500
not how can I say this the configuration

00:19:50,240 --> 00:19:53,000
is a little bit more than a

00:19:51,500 --> 00:19:55,130
configuration it's like a language you

00:19:53,000 --> 00:19:57,470
can do more and more things with it we

00:19:55,130 --> 00:19:59,540
have now we have if-else conditions we

00:19:57,470 --> 00:20:02,260
have break so we can really ride your

00:19:59,540 --> 00:20:04,850
own coat in our singer configuration

00:20:02,260 --> 00:20:06,770
which gives you the ability to really

00:20:04,850 --> 00:20:08,510
work with which functions we have

00:20:06,770 --> 00:20:10,580
mathematical functions we can loop

00:20:08,510 --> 00:20:11,870
through a race perhaps pack all the

00:20:10,580 --> 00:20:13,580
virtual host you have on a machine an

00:20:11,870 --> 00:20:17,690
array and then loop it and create

00:20:13,580 --> 00:20:23,710
specific checks based on the data and to

00:20:17,690 --> 00:20:25,790
show that example is like we do a C and

00:20:23,710 --> 00:20:28,310
and this is not a real production

00:20:25,790 --> 00:20:31,790
example just I hope that nobody have

00:20:28,310 --> 00:20:34,970
used in ACB setup but just to give you a

00:20:31,790 --> 00:20:40,130
coup so I defined an array and then I

00:20:34,970 --> 00:20:43,960
could do a sword which is say okay this

00:20:40,130 --> 00:20:46,550
is program our number one hello world

00:20:43,960 --> 00:20:48,800
but it's this is really talking to the

00:20:46,550 --> 00:20:50,510
icinga core and you can do a lot of we

00:20:48,800 --> 00:20:52,340
have all that functions are documented

00:20:50,510 --> 00:20:54,580
so you can really play around you can

00:20:52,340 --> 00:20:57,800
define a race here loop to them and

00:20:54,580 --> 00:20:59,510
perhaps in the in the future we will

00:20:57,800 --> 00:21:01,520
create a way that you directly can

00:20:59,510 --> 00:21:04,010
connect to your core and include

00:21:01,520 --> 00:21:06,920
configuration at hosts delete hosts in

00:21:04,010 --> 00:21:10,040
during the running system and we make it

00:21:06,920 --> 00:21:12,290
really more and more more and more able

00:21:10,040 --> 00:21:12,980
to do crazy stuff with it you do crazy

00:21:12,290 --> 00:21:27,740
stuff with it

00:21:12,980 --> 00:21:29,570
no yes yes I have to repeat the question

00:21:27,740 --> 00:21:31,460
though the question was if we add a new

00:21:29,570 --> 00:21:34,250
host via API which we are not we are not

00:21:31,460 --> 00:21:35,870
able to do that at the moment what will

00:21:34,250 --> 00:21:37,669
you do with the do we store it in a file

00:21:35,870 --> 00:21:39,320
or something like that so this is not

00:21:37,669 --> 00:21:41,960
for sure we don't know what the right

00:21:39,320 --> 00:21:43,580
thing is because we did a couple of

00:21:41,960 --> 00:21:45,890
workshops the last weeks and the problem

00:21:43,580 --> 00:21:48,830
is if you have hi Kelsey if you have a

00:21:45,890 --> 00:21:50,600
couple of files and for example you have

00:21:48,830 --> 00:21:52,340
hundred hosts which come from a

00:21:50,600 --> 00:21:55,460
configuration file and then you add one

00:21:52,340 --> 00:21:57,830
so what do you want after restart do you

00:21:55,460 --> 00:22:00,110
want to have this again or do you say

00:21:57,830 --> 00:22:07,910
okay if I do a restart then I only want

00:22:00,110 --> 00:22:10,190
back the files and yeah this is this is

00:22:07,910 --> 00:22:13,100
hard so at the moment we think about if

00:22:10,190 --> 00:22:14,419
you if you I don't know let's say we

00:22:13,100 --> 00:22:16,580
have 20 hosts coming out from the

00:22:14,419 --> 00:22:18,350
configuration file and you add 5 hosts

00:22:16,580 --> 00:22:20,720
after that and then perhaps you change

00:22:18,350 --> 00:22:23,510
attributes then you delete a host that

00:22:20,720 --> 00:22:26,059
we kind like a replay after you restart

00:22:23,510 --> 00:22:28,580
I singer that we replay your your

00:22:26,059 --> 00:22:30,080
dynamically commands or web scan

00:22:28,580 --> 00:22:32,750
something like a flash and say I want to

00:22:30,080 --> 00:22:35,390
forget what i did on a dynamic way but

00:22:32,750 --> 00:22:40,490
this is I don't know if there's a right

00:22:35,390 --> 00:22:41,570
way it depends on what you need ya think

00:22:40,490 --> 00:22:43,970
about a committee option in doing

00:22:41,570 --> 00:22:45,620
something like a row peg this this is

00:22:43,970 --> 00:22:47,690
also needed because perhaps you you

00:22:45,620 --> 00:22:49,520
cannot delete a template if another host

00:22:47,690 --> 00:22:51,440
is using this template or you have host

00:22:49,520 --> 00:22:52,850
dependencies so there are a lot of

00:22:51,440 --> 00:22:56,179
dependencies in the monitoring system

00:22:52,850 --> 00:22:59,840
which is which is really not so easy to

00:22:56,179 --> 00:23:01,850
work with it for now you cannot do it so

00:22:59,840 --> 00:23:04,340
for now if you add object you have to

00:23:01,850 --> 00:23:05,690
restart I singer but it works in a

00:23:04,340 --> 00:23:07,640
really good way that you are not blind

00:23:05,690 --> 00:23:09,260
for a second so one thing is it's really

00:23:07,640 --> 00:23:11,690
fast and on the other hand it validates

00:23:09,260 --> 00:23:14,299
the configuration resets another process

00:23:11,690 --> 00:23:17,000
and then switches the workload so if you

00:23:14,299 --> 00:23:18,500
restarted hundreds times a day then it's

00:23:17,000 --> 00:23:21,559
not a big issue like in the old word way

00:23:18,500 --> 00:23:24,049
if we went blind for 10 minutes and also

00:23:21,559 --> 00:23:26,059
the database of using the database it's

00:23:24,049 --> 00:23:26,419
it's really updated and in August the

00:23:26,059 --> 00:23:28,549
database

00:23:26,419 --> 00:23:30,859
was totally cleaned so if you restart

00:23:28,549 --> 00:23:32,690
nagas and then the database was was

00:23:30,859 --> 00:23:34,369
truncated and then all the data come

00:23:32,690 --> 00:23:36,950
back later and this is does not happen

00:23:34,369 --> 00:23:39,109
anymore so we we look what's were

00:23:36,950 --> 00:23:41,779
changed and update these tables so you

00:23:39,109 --> 00:23:47,869
still able to see everything and have

00:23:41,779 --> 00:23:51,980
the configuration okay anything else I

00:23:47,869 --> 00:23:54,230
want to show you I don't think so all

00:23:51,980 --> 00:23:57,320
the other things so like adding notes or

00:23:54,230 --> 00:23:59,239
doing doing cluster configuration I

00:23:57,320 --> 00:24:02,299
would not show you in the demo because

00:23:59,239 --> 00:24:03,830
it takes too much time and other things

00:24:02,299 --> 00:24:06,470
that we want to stay so long in the room

00:24:03,830 --> 00:24:08,269
with me but play around with the console

00:24:06,470 --> 00:24:11,499
on the website or just just install the

00:24:08,269 --> 00:24:23,269
vagrant box and play with it on your own

00:24:11,499 --> 00:24:25,100
yeah okay so the question was if we if

00:24:23,269 --> 00:24:34,489
you want to keep eyes the classic web

00:24:25,100 --> 00:24:36,470
interface um no no no it's it's not our

00:24:34,489 --> 00:24:38,899
strategy so for now we have we have the

00:24:36,470 --> 00:24:41,600
classic UI which is which has its roots

00:24:38,899 --> 00:24:43,549
in the old Nagas Mui but we we did a lot

00:24:41,600 --> 00:24:44,989
of work so Ricardo did a lot of work

00:24:43,549 --> 00:24:47,450
like making it easier having an

00:24:44,989 --> 00:24:49,159
multi-select having chasing exports so

00:24:47,450 --> 00:24:51,859
it's really enhanced compared to the

00:24:49,159 --> 00:24:55,759
Nagas classic UI and we have the icinga

00:24:51,859 --> 00:24:57,769
web an hour our target is that we can we

00:24:55,759 --> 00:24:59,600
bring all the interfaces together that

00:24:57,769 --> 00:25:01,850
at the end on the long road we want to

00:24:59,600 --> 00:25:03,619
have one interface which which works for

00:25:01,850 --> 00:25:06,080
a small environment without like role

00:25:03,619 --> 00:25:08,389
concepts and ldap whatever multi-user

00:25:06,080 --> 00:25:10,669
multi-tenancy environments and also

00:25:08,389 --> 00:25:13,779
works for for enterprise and also works

00:25:10,669 --> 00:25:16,039
for mobile so using responsive web stuff

00:25:13,779 --> 00:25:18,379
but it's not the case that we will

00:25:16,039 --> 00:25:20,239
discontinue and so we like shut down the

00:25:18,379 --> 00:25:22,970
classic UI for us it's it's there it's

00:25:20,239 --> 00:25:25,609
it's good enough so we can keep it there

00:25:22,970 --> 00:25:27,409
so you can still use it but the new

00:25:25,609 --> 00:25:29,809
interface for example will not read the

00:25:27,409 --> 00:25:31,999
status dead anymore so we will not able

00:25:29,809 --> 00:25:33,919
to parse that status data file with the

00:25:31,999 --> 00:25:36,109
classic you I needs so we don't have it

00:25:33,919 --> 00:25:39,260
anymore because this is really crap and

00:25:36,109 --> 00:25:45,500
sometimes it's time to forget all things

00:25:39,260 --> 00:25:51,430
I think okay I'm good in time or not I

00:25:45,500 --> 00:25:54,160
all depends on your opinion okay demo

00:25:51,430 --> 00:25:58,610
coming back to the worst thing in August

00:25:54,160 --> 00:26:01,280
no clustering a distribution in August

00:25:58,610 --> 00:26:03,110
you had no integrated failure mechanism

00:26:01,280 --> 00:26:05,600
you can do that you can install a couple

00:26:03,110 --> 00:26:08,300
of Nagas you can do some pacemaker or

00:26:05,600 --> 00:26:11,330
heartbeat setups to cluster it but there

00:26:08,300 --> 00:26:13,730
was no there was no included application

00:26:11,330 --> 00:26:16,130
clusters leg the configuration is not

00:26:13,730 --> 00:26:19,070
distributed so if you want to do that

00:26:16,130 --> 00:26:21,860
you can use rsync SCP or el cajon slave

00:26:19,070 --> 00:26:23,690
deploy to deploy the configuration and

00:26:21,860 --> 00:26:25,250
also you don't have any shared

00:26:23,690 --> 00:26:27,380
monitoring information so if you have a

00:26:25,250 --> 00:26:29,270
couple of nagios servers you have to

00:26:27,380 --> 00:26:31,610
take care that you aggregate the data

00:26:29,270 --> 00:26:32,990
together or put them in a single

00:26:31,610 --> 00:26:35,390
database which you can do using

00:26:32,990 --> 00:26:38,930
different instance IDs for example but

00:26:35,390 --> 00:26:41,600
there is no no single brain and this is

00:26:38,930 --> 00:26:44,690
what we changed as well so we have we

00:26:41,600 --> 00:26:46,160
have sown support so we can you can

00:26:44,690 --> 00:26:48,020
logically measure up a couple of I

00:26:46,160 --> 00:26:49,610
single service to a couple of songs

00:26:48,020 --> 00:26:51,560
which enables you to have moved in

00:26:49,610 --> 00:26:53,240
Tennessee support you can have a big

00:26:51,560 --> 00:26:54,980
icinga set up where you can see

00:26:53,240 --> 00:26:58,070
everything and you have a couple of

00:26:54,980 --> 00:27:00,500
customers locked to specific zones where

00:26:58,070 --> 00:27:02,510
they only see their environment you can

00:27:00,500 --> 00:27:04,190
do logic splits in your configuration so

00:27:02,510 --> 00:27:06,170
I singer takes care that the

00:27:04,190 --> 00:27:10,100
configuration is is copied out to all

00:27:06,170 --> 00:27:12,050
the systems in its own it's easy to

00:27:10,100 --> 00:27:14,120
scale because if you have in one's own

00:27:12,050 --> 00:27:15,470
you have more than one checker then

00:27:14,120 --> 00:27:17,270
automatically the checks gets

00:27:15,470 --> 00:27:19,040
distributed on the other nodes so you

00:27:17,270 --> 00:27:20,540
just add a node and then they recognize

00:27:19,040 --> 00:27:22,610
that there's someone else in that area

00:27:20,540 --> 00:27:24,530
which is able to do the work and then

00:27:22,610 --> 00:27:27,200
the chicks could get redistributed and

00:27:24,530 --> 00:27:29,360
then all the agents take care of it and

00:27:27,200 --> 00:27:31,130
if one checker and its own goes down the

00:27:29,360 --> 00:27:32,990
others take care of the checks taking

00:27:31,130 --> 00:27:37,370
over it and taking care that the

00:27:32,990 --> 00:27:39,710
monitoring is going on and how this

00:27:37,370 --> 00:27:41,570
could look like in this scenario is that

00:27:39,710 --> 00:27:43,310
we are totally distributed and open so

00:27:41,570 --> 00:27:45,110
in this in this example we have three I

00:27:43,310 --> 00:27:47,480
single service and they have different

00:27:45,110 --> 00:27:50,270
components enabled so it's important

00:27:47,480 --> 00:27:51,530
that if you have once owned that in that

00:27:50,270 --> 00:27:52,700
zone the chicken needs to be enabled

00:27:51,530 --> 00:27:55,340
everywhere in

00:27:52,700 --> 00:27:57,440
in one's own but you can decide that

00:27:55,340 --> 00:28:00,110
just on a specific server because the

00:27:57,440 --> 00:28:02,810
database sits there you want to write on

00:28:00,110 --> 00:28:05,000
the database on this node and you want

00:28:02,810 --> 00:28:06,770
for example right gallop data to log

00:28:05,000 --> 00:28:09,740
stash on this node but they all share

00:28:06,770 --> 00:28:10,880
the same information so if you I don't

00:28:09,740 --> 00:28:12,440
know insert a command on an

00:28:10,880 --> 00:28:15,500
acknowledgement or get new monitoring

00:28:12,440 --> 00:28:17,060
information it's all shared it's stored

00:28:15,500 --> 00:28:21,590
the connection goes down then it's

00:28:17,060 --> 00:28:23,210
replayed and what you can do and we take

00:28:21,590 --> 00:28:26,210
the other server way for this example

00:28:23,210 --> 00:28:28,280
you can create zones for example you can

00:28:26,210 --> 00:28:31,940
say this a specific monitoring area or

00:28:28,280 --> 00:28:34,250
is this a specific customer and you can

00:28:31,940 --> 00:28:36,320
group multiple songs together and inner

00:28:34,250 --> 00:28:38,900
it and you can calculate it so you can

00:28:36,320 --> 00:28:40,430
do complex things but you will only do

00:28:38,900 --> 00:28:43,310
that hopefully if you really need it but

00:28:40,430 --> 00:28:46,640
you can split up configuration in many

00:28:43,310 --> 00:28:48,710
ways which I probably need 20 slides to

00:28:46,640 --> 00:28:50,360
explain all the scenarios but the

00:28:48,710 --> 00:28:52,880
important thing is you can do something

00:28:50,360 --> 00:28:54,770
like availability so you can have two I

00:28:52,880 --> 00:28:57,650
singer notes and one zone to just take

00:28:54,770 --> 00:29:00,830
care that you're monitoring runs you can

00:28:57,650 --> 00:29:02,630
use two databases you can use two

00:29:00,830 --> 00:29:04,880
databases with replication you can use

00:29:02,630 --> 00:29:06,500
one database with a high option where

00:29:04,880 --> 00:29:08,930
the is singer automatically can see

00:29:06,500 --> 00:29:12,340
which notice actively riding to the

00:29:08,930 --> 00:29:15,260
database you can do nearly everything

00:29:12,340 --> 00:29:18,260
another bad thing is security is really

00:29:15,260 --> 00:29:20,950
a mess in the old world and this is many

00:29:18,260 --> 00:29:24,740
reason one thing is any CA if using nsca

00:29:20,950 --> 00:29:27,710
this is really crap and we used it for

00:29:24,740 --> 00:29:29,930
years on our own so not complaining it

00:29:27,710 --> 00:29:32,450
works but it has a lot of issues it's

00:29:29,930 --> 00:29:34,310
totally insecure nsca have the problem

00:29:32,450 --> 00:29:36,830
that it it totally mixes up the time

00:29:34,310 --> 00:29:40,430
stems so if you transfer your data using

00:29:36,830 --> 00:29:41,900
nsca then inserting into nagas nagas

00:29:40,430 --> 00:29:44,600
replaces all the time stems from the

00:29:41,900 --> 00:29:46,490
file with the local time means reporting

00:29:44,600 --> 00:29:48,800
afterwards makes no sense you can throw

00:29:46,490 --> 00:29:50,540
this data away because everything is

00:29:48,800 --> 00:29:53,210
wrong the time sims are totally crash so

00:29:50,540 --> 00:29:57,230
if we using NSA now think about using

00:29:53,210 --> 00:29:59,930
something else nrpe has a lot of

00:29:57,230 --> 00:30:03,440
security issues and it's not my

00:29:59,930 --> 00:30:05,750
generated story so you've used nrpe and

00:30:03,440 --> 00:30:06,559
security on Google so please don't do it

00:30:05,750 --> 00:30:09,049
now because I

00:30:06,559 --> 00:30:11,659
the wireless later you see a lot of

00:30:09,049 --> 00:30:13,129
issues on the nrpe stuff because the the

00:30:11,659 --> 00:30:16,700
encryption and there is a way to do it

00:30:13,129 --> 00:30:18,799
is really hard and it leads that that

00:30:16,700 --> 00:30:20,929
all that uses and also our setups we had

00:30:18,799 --> 00:30:23,360
in the past that you you scripted

00:30:20,929 --> 00:30:26,389
something on your own so you used ssh to

00:30:23,360 --> 00:30:28,850
transfer the data so there are hundreds

00:30:26,389 --> 00:30:31,220
of tools and add-ons and python scripts

00:30:28,850 --> 00:30:34,789
to do that case but there is no standard

00:30:31,220 --> 00:30:36,259
way to to distribute data in the nagas

00:30:34,789 --> 00:30:37,610
world and sometimes this is really big

00:30:36,259 --> 00:30:39,769
issue because normally from your

00:30:37,610 --> 00:30:41,629
monitoring system you can see you can

00:30:39,769 --> 00:30:43,100
see everything and security and

00:30:41,629 --> 00:30:45,230
monitoring is often really

00:30:43,100 --> 00:30:46,970
underestimated because it opens your

00:30:45,230 --> 00:30:49,369
data center to everyone so if you if you

00:30:46,970 --> 00:30:50,869
hi check your monitoring server normally

00:30:49,369 --> 00:30:53,389
have all the keys store there perhaps

00:30:50,869 --> 00:30:55,279
you don't do that but it's the case so

00:30:53,389 --> 00:30:58,730
we can really go everywhere so security

00:30:55,279 --> 00:31:00,980
is really a big thing and this is the

00:30:58,730 --> 00:31:03,230
reason why we we put that cluster

00:31:00,980 --> 00:31:06,289
communication on SSL so everything

00:31:03,230 --> 00:31:08,629
between nodes works on SSL unser

00:31:06,289 --> 00:31:10,580
tificate so you can use an existing

00:31:08,629 --> 00:31:12,169
certificate authorities or if you if

00:31:10,580 --> 00:31:13,789
you're still using puppet for example

00:31:12,169 --> 00:31:16,970
you can using the same certificates or

00:31:13,789 --> 00:31:18,889
you can create your own we have

00:31:16,970 --> 00:31:20,779
something like Binh LOC retention where

00:31:18,889 --> 00:31:22,700
we store local events so if the network

00:31:20,779 --> 00:31:24,950
connection goes down that we replaying

00:31:22,700 --> 00:31:26,720
that events and then you can you are

00:31:24,950 --> 00:31:30,679
able to do an availability report

00:31:26,720 --> 00:31:33,350
afterwards you are able to do a

00:31:30,679 --> 00:31:35,809
bi-directional communication means that

00:31:33,350 --> 00:31:38,029
you care for example a specific Network

00:31:35,809 --> 00:31:39,889
zone in a master you can connect from

00:31:38,029 --> 00:31:41,450
the master to the zone or from the zone

00:31:39,889 --> 00:31:43,639
to the master it's totally unimportant

00:31:41,450 --> 00:31:45,889
you can connect from anywhere to

00:31:43,639 --> 00:31:47,779
everywhere you can also define multiple

00:31:45,889 --> 00:31:49,789
endpoints that you for example connect

00:31:47,779 --> 00:31:52,549
from a distributed server to multiple

00:31:49,789 --> 00:31:54,769
master holes if someone goes down it's

00:31:52,549 --> 00:31:57,379
up to you but important is you need a

00:31:54,769 --> 00:31:59,809
single network port so everything status

00:31:57,379 --> 00:32:01,249
data all that internal data for writing

00:31:59,809 --> 00:32:03,169
some photographer on another note

00:32:01,249 --> 00:32:05,779
comments acknowledgments everything runs

00:32:03,169 --> 00:32:09,169
through a stringer fireball port on SSL

00:32:05,779 --> 00:32:11,119
and this is preps on the on the first

00:32:09,169 --> 00:32:13,249
step it's a little bit ok certificates

00:32:11,119 --> 00:32:15,200
if you ever played with certificates and

00:32:13,249 --> 00:32:16,580
if no clue it's perhaps a one hour thing

00:32:15,200 --> 00:32:18,799
what it is what is the certificate

00:32:16,580 --> 00:32:19,980
authority how that works but then it's

00:32:18,799 --> 00:32:26,370
pretty easy

00:32:19,980 --> 00:32:28,110
and it's super secure configuration the

00:32:26,370 --> 00:32:30,570
old configuration is not compatible with

00:32:28,110 --> 00:32:34,710
our singer too so the singer to

00:32:30,570 --> 00:32:36,660
configuration is is different we talked

00:32:34,710 --> 00:32:38,400
about that often and really so can we do

00:32:36,660 --> 00:32:41,669
that so can we change the configuration

00:32:38,400 --> 00:32:43,049
because people yelling the loudest that

00:32:41,669 --> 00:32:45,660
the old configuration is not good enough

00:32:43,049 --> 00:32:49,169
will yell if we change it because then

00:32:45,660 --> 00:32:50,790
they have to learn new things but we

00:32:49,169 --> 00:32:53,130
really have to because there are so much

00:32:50,790 --> 00:32:56,400
limits in the old configuration and just

00:32:53,130 --> 00:32:58,020
give you a couple of examples for

00:32:56,400 --> 00:32:59,549
example if you have a specific service

00:32:58,020 --> 00:33:01,650
and you add new hosts you had to add

00:32:59,549 --> 00:33:04,200
this this host to the service definition

00:33:01,650 --> 00:33:06,179
again and again so we add new host to

00:33:04,200 --> 00:33:08,429
the monitoring system and you do it

00:33:06,179 --> 00:33:10,200
manually not using a config tool or your

00:33:08,429 --> 00:33:12,600
scripts where you export your sim DB

00:33:10,200 --> 00:33:15,660
data you have to go that config file and

00:33:12,600 --> 00:33:17,220
at a specific host in a single to you

00:33:15,660 --> 00:33:20,220
can do that with an apply rule for

00:33:17,220 --> 00:33:22,830
example so you can say I want to apply a

00:33:20,220 --> 00:33:25,790
specific services age to every host

00:33:22,830 --> 00:33:28,620
which has an address and it's linux and

00:33:25,790 --> 00:33:30,570
and then every host you add with it

00:33:28,620 --> 00:33:32,460
given attributes then it's automatically

00:33:30,570 --> 00:33:34,470
edit this service you don't have to edit

00:33:32,460 --> 00:33:37,260
the service configuration again and

00:33:34,470 --> 00:33:39,840
again it's just you have to do it the

00:33:37,260 --> 00:33:42,150
right way set specific attributes for

00:33:39,840 --> 00:33:44,820
example the the host variable you can

00:33:42,150 --> 00:33:47,429
imagine is kind of facts and puppet kind

00:33:44,820 --> 00:33:48,990
of and say it's a linux and then

00:33:47,429 --> 00:33:51,270
automatically if you add a new host and

00:33:48,990 --> 00:33:54,960
say it's a custom fact linux then ssh is

00:33:51,270 --> 00:33:57,780
added to the server you can also enhance

00:33:54,960 --> 00:33:59,400
it a little bit like ignore so it's

00:33:57,780 --> 00:34:00,690
really powerful you can set i want to

00:33:59,400 --> 00:34:02,490
add this service for every server but

00:34:00,690 --> 00:34:04,890
not to the service which are in test

00:34:02,490 --> 00:34:07,200
mode for example and you can combine

00:34:04,890 --> 00:34:10,350
these these rules with more assigns and

00:34:07,200 --> 00:34:11,850
more ignores which could be so long you

00:34:10,350 --> 00:34:14,850
can use templates but this is really

00:34:11,850 --> 00:34:17,010
powerful to work with it another example

00:34:14,850 --> 00:34:19,830
is host group definition if you're using

00:34:17,010 --> 00:34:22,830
host groups you define a host group and

00:34:19,830 --> 00:34:26,129
then add the host group members in a

00:34:22,830 --> 00:34:28,230
single to you define a host and you say

00:34:26,129 --> 00:34:30,720
okay check this host group and I'll

00:34:28,230 --> 00:34:32,909
assign to that host group every host

00:34:30,720 --> 00:34:33,310
which name is equal in it for example um

00:34:32,909 --> 00:34:35,350
I see

00:34:33,310 --> 00:34:37,210
will host group you can do regular

00:34:35,350 --> 00:34:38,530
expression and they every host with an m

00:34:37,210 --> 00:34:40,840
is equal I want to add to this host

00:34:38,530 --> 00:34:42,840
group so perhaps you have a seam DB you

00:34:40,840 --> 00:34:44,800
configure you configure your templates

00:34:42,840 --> 00:34:46,690
somewhere and you fold and then you have

00:34:44,800 --> 00:34:49,240
a seam DB we generate all the data out

00:34:46,690 --> 00:34:52,810
put it in a file restore I sing and I

00:34:49,240 --> 00:34:56,470
sing automatically assigns this specific

00:34:52,810 --> 00:35:00,460
host two hours group another thing you

00:34:56,470 --> 00:35:02,830
can do is this one perhaps take five

00:35:00,460 --> 00:35:04,390
seconds to to read it and perhaps

00:35:02,830 --> 00:35:13,150
somebody has an idea what it what it

00:35:04,390 --> 00:35:17,550
does perhaps not everyone at the same

00:35:13,150 --> 00:35:17,550
time somebody has an idea what it does

00:35:19,830 --> 00:35:30,870
no yes yes that's it so what we do we

00:35:27,580 --> 00:35:33,340
have on all objects in in the core and

00:35:30,870 --> 00:35:35,290
the same like here in this example in

00:35:33,340 --> 00:35:37,540
the time period we can access them and

00:35:35,290 --> 00:35:39,910
in this example we can say if this time

00:35:37,540 --> 00:35:41,920
here at nine to five is it active then

00:35:39,910 --> 00:35:44,050
we have this threshold and if it's not

00:35:41,920 --> 00:35:45,910
active we have another threshold which

00:35:44,050 --> 00:35:48,070
makes sense for example like this checks

00:35:45,910 --> 00:35:49,810
because you want to notice during the

00:35:48,070 --> 00:35:53,020
day either you have eighty percent disk

00:35:49,810 --> 00:35:54,490
space but perhaps you don't want to hear

00:35:53,020 --> 00:35:57,370
it at five in the morning that you have

00:35:54,490 --> 00:35:59,650
eighty percent and you can extend it

00:35:57,370 --> 00:36:01,750
like more and more whatever you can loop

00:35:59,650 --> 00:36:03,580
around it you have to find a way how it

00:36:01,750 --> 00:36:05,500
makes sense for you but this is really

00:36:03,580 --> 00:36:08,380
powerful because you can access every

00:36:05,500 --> 00:36:14,970
object in the monitoring environment so

00:36:08,380 --> 00:36:14,970
thank you very much yeah

00:36:25,279 --> 00:36:40,739
ok yeah it's ok I just try to repeat the

00:36:38,970 --> 00:36:42,739
idea was like to have a central place

00:36:40,739 --> 00:36:46,200
where we can share that that code snips

00:36:42,739 --> 00:36:47,789
what we have there we have the wiki it's

00:36:46,200 --> 00:36:49,799
a conference wiki where you can edit I

00:36:47,789 --> 00:36:51,630
don't know if it's the highly frequent

00:36:49,799 --> 00:36:53,400
use thing I think it's not so hot

00:36:51,630 --> 00:36:55,829
because people do it somewhere else and

00:36:53,400 --> 00:36:57,299
gifts and get help somewhere and we are

00:36:55,829 --> 00:36:59,549
thinking about think providing some

00:36:57,299 --> 00:37:01,170
space on that I singer exchange because

00:36:59,549 --> 00:37:03,210
of the a singer web two modules will

00:37:01,170 --> 00:37:04,319
have a future there perhaps we can we

00:37:03,210 --> 00:37:06,660
can add something there where you can

00:37:04,319 --> 00:37:10,829
just store these snips or something like

00:37:06,660 --> 00:37:12,989
that yeah that's a pretty cool idea ok

00:37:10,829 --> 00:37:14,940
so just to get a conclusion for the

00:37:12,989 --> 00:37:16,529
config it's really different so if you

00:37:14,940 --> 00:37:19,680
have an existing configuration and I

00:37:16,529 --> 00:37:21,269
hope you have one it's really time

00:37:19,680 --> 00:37:23,430
thinking about it doing it different

00:37:21,269 --> 00:37:25,140
using these apply assign things and

00:37:23,430 --> 00:37:27,239
because you can really do a lot of

00:37:25,140 --> 00:37:30,479
things very dynamically using templates

00:37:27,239 --> 00:37:32,160
using inherits and all that stuff and if

00:37:30,479 --> 00:37:34,799
you play around with it a little bit I

00:37:32,160 --> 00:37:38,009
don't know perhaps i would say four or

00:37:34,799 --> 00:37:39,809
five months then you will love it no it

00:37:38,009 --> 00:37:41,160
takes really two hours so the first row

00:37:39,809 --> 00:37:42,329
is just like you have to forget the old

00:37:41,160 --> 00:37:44,579
things to learn the new things and you

00:37:42,329 --> 00:37:49,680
will love it in the first day and and if

00:37:44,579 --> 00:37:55,170
not please please call us I hand you the

00:37:49,680 --> 00:37:57,509
number later on leaving the core going

00:37:55,170 --> 00:37:59,819
going to the interfaces so principal is

00:37:57,509 --> 00:38:03,839
what you see is what you get and talking

00:37:59,819 --> 00:38:06,719
about Nagas it's hopefully not because

00:38:03,839 --> 00:38:08,999
and this is our demo system so I'm able

00:38:06,719 --> 00:38:12,509
to complain about this is really

00:38:08,999 --> 00:38:15,029
horrible means horrible that that also

00:38:12,509 --> 00:38:17,009
to be fair the icing a classic looks

00:38:15,029 --> 00:38:19,739
pretty much the same so we have a little

00:38:17,009 --> 00:38:23,789
bit nicer seem but it is the same

00:38:19,739 --> 00:38:28,349
ugliest I don't know not existing user

00:38:23,789 --> 00:38:29,770
experience design other thing is for

00:38:28,349 --> 00:38:33,790
example it's our mo

00:38:29,770 --> 00:38:35,320
in the face and yeah we did a quick

00:38:33,790 --> 00:38:38,320
prototype a couple of years ago during a

00:38:35,320 --> 00:38:39,760
singer MOBA it still works I recognize

00:38:38,320 --> 00:38:44,830
today that we have still an existing

00:38:39,760 --> 00:38:46,690
demo set up for it but ya we we made

00:38:44,830 --> 00:38:48,790
some experience in the in the last years

00:38:46,690 --> 00:38:51,460
and something which are not so cool one

00:38:48,790 --> 00:38:53,140
thing is if you have 20 or 30 service

00:38:51,460 --> 00:38:55,180
then the classic guy is pretty cool it's

00:38:53,140 --> 00:38:57,430
easy bill to install but one big issue

00:38:55,180 --> 00:38:59,920
is that the classic you I parses the

00:38:57,430 --> 00:39:01,870
status that so the core writes down the

00:38:59,920 --> 00:39:04,300
data everything about the car monitoring

00:39:01,870 --> 00:39:07,620
service to a file and if you have 20,000

00:39:04,300 --> 00:39:10,300
servers this is really unusable

00:39:07,620 --> 00:39:12,610
executing commands is a little bit hard

00:39:10,300 --> 00:39:14,590
so if you try to or perhaps if you use

00:39:12,610 --> 00:39:17,170
Nagas or a singer one if you try to

00:39:14,590 --> 00:39:19,690
reschedule a service check it's like

00:39:17,170 --> 00:39:22,210
marking the service going I want to risk

00:39:19,690 --> 00:39:24,640
all want to do it now and then send

00:39:22,210 --> 00:39:27,250
command so it's it's if you really do a

00:39:24,640 --> 00:39:30,220
lot with the interface it's it's not

00:39:27,250 --> 00:39:33,190
it's not nice and the architecture is

00:39:30,220 --> 00:39:36,250
really inflexible because the status

00:39:33,190 --> 00:39:38,590
data is written and this also is true

00:39:36,250 --> 00:39:40,270
for our singer a single one it's written

00:39:38,590 --> 00:39:41,860
on the host verizon guy runs means the

00:39:40,270 --> 00:39:44,200
status data is written on that on that

00:39:41,860 --> 00:39:46,480
server means you have to install your

00:39:44,200 --> 00:39:48,850
your classic you I on the monitoring

00:39:46,480 --> 00:39:50,980
host so there are ways we can transfer

00:39:48,850 --> 00:39:52,500
the data and write the data somewhere

00:39:50,980 --> 00:39:54,790
else and I know that you can for example

00:39:52,500 --> 00:39:57,790
write something to the command file

00:39:54,790 --> 00:39:59,740
using SSH it's it's doable so it's one

00:39:57,790 --> 00:40:02,280
of the one of the reasons why nagas is

00:39:59,740 --> 00:40:04,570
so successful because it's so uncomplete

00:40:02,280 --> 00:40:06,340
because people can play with it and you

00:40:04,570 --> 00:40:11,670
can always find a solution to fix the

00:40:06,340 --> 00:40:15,040
problem but it's not very sexy and

00:40:11,670 --> 00:40:18,610
coming to our interfaces we have some

00:40:15,040 --> 00:40:20,560
limitations in our interfaces as well so

00:40:18,610 --> 00:40:23,260
then the the current I singer web is

00:40:20,560 --> 00:40:24,760
really hard to extend so the basic

00:40:23,260 --> 00:40:26,980
framework where I sing a web-based

00:40:24,760 --> 00:40:30,040
version is that a gobby framework it's a

00:40:26,980 --> 00:40:32,350
lot of XML JavaScript so if you want to

00:40:30,040 --> 00:40:34,660
write your own module it's you really

00:40:32,350 --> 00:40:35,680
have to learn a lot and probably the

00:40:34,660 --> 00:40:37,330
reason is that the people are not

00:40:35,680 --> 00:40:39,790
willing to do so that there are no

00:40:37,330 --> 00:40:42,900
modules exists outside our independent

00:40:39,790 --> 00:40:42,900
from the stuff we write on our own

00:40:43,150 --> 00:40:47,290
and the other thing to answer that

00:40:45,730 --> 00:40:48,910
question again we don't have any unified

00:40:47,290 --> 00:40:51,010
interface so at the moment we had three

00:40:48,910 --> 00:40:53,250
interfaces out there and we want to have

00:40:51,010 --> 00:40:57,880
a future where we have where we have one

00:40:53,250 --> 00:41:00,700
so what we did we did another shot and

00:40:57,880 --> 00:41:04,270
this looks really good for now we build

00:41:00,700 --> 00:41:06,550
I singer web 2 which is a very

00:41:04,270 --> 00:41:08,530
lightweight interface it's easy to

00:41:06,550 --> 00:41:10,690
extend which we can see that there are

00:41:08,530 --> 00:41:12,820
people writing modules so a couple of

00:41:10,690 --> 00:41:15,220
days ago somebody right is there a

00:41:12,820 --> 00:41:17,170
graphite module for a single web too and

00:41:15,220 --> 00:41:19,600
they say we said no and is it but I

00:41:17,170 --> 00:41:21,340
found one on github so somebody else

00:41:19,600 --> 00:41:22,960
wrote a one and somebody else wrote a

00:41:21,340 --> 00:41:24,460
module for knock with so people out

00:41:22,960 --> 00:41:26,650
there riding modules for a singer web

00:41:24,460 --> 00:41:29,350
it's not yet stable but people writing

00:41:26,650 --> 00:41:30,990
modules for it we have multiple

00:41:29,350 --> 00:41:33,250
authentication providers so you can

00:41:30,990 --> 00:41:35,680
authenticate users against an internal

00:41:33,250 --> 00:41:39,370
DB you can use an ldap you can use the

00:41:35,680 --> 00:41:41,890
battery methods to authenticate them we

00:41:39,370 --> 00:41:43,900
support DB and live status so for the

00:41:41,890 --> 00:41:46,270
web interface you need to run a database

00:41:43,900 --> 00:41:49,090
post Chris on my sequel or live status

00:41:46,270 --> 00:41:50,620
and but to clarify that live service is

00:41:49,090 --> 00:41:52,750
not implemented at the moment so on the

00:41:50,620 --> 00:41:55,570
final version which is targeted for form

00:41:52,750 --> 00:41:58,090
a live service will be in there for now

00:41:55,570 --> 00:42:00,310
the basic the connections are there you

00:41:58,090 --> 00:42:01,660
can configure it and perhaps you have if

00:42:00,310 --> 00:42:03,940
you have luck you can get some

00:42:01,660 --> 00:42:06,730
information but live shadows is not yet

00:42:03,940 --> 00:42:09,640
ready but we are not stable so we on the

00:42:06,730 --> 00:42:11,770
development at the end of the road but

00:42:09,640 --> 00:42:14,190
if we finish that then will support the

00:42:11,770 --> 00:42:16,930
database and live starters as well and

00:42:14,190 --> 00:42:19,390
it's responsive and the architecture

00:42:16,930 --> 00:42:20,950
looks like the the case that we have on

00:42:19,390 --> 00:42:22,780
a single web to framework which takes

00:42:20,950 --> 00:42:24,820
care of the authentication stuff it

00:42:22,780 --> 00:42:27,820
takes care about users and back ends and

00:42:24,820 --> 00:42:31,030
and all the other things including the

00:42:27,820 --> 00:42:34,150
monitoring module itself is a module so

00:42:31,030 --> 00:42:36,250
a single web the basic foundation could

00:42:34,150 --> 00:42:38,650
be could be the foundation for something

00:42:36,250 --> 00:42:40,240
totally else but we ship monitoring and

00:42:38,650 --> 00:42:42,400
dock with it so this is the modules

00:42:40,240 --> 00:42:44,260
coming with the installation and all the

00:42:42,400 --> 00:42:46,990
other things for example the business

00:42:44,260 --> 00:42:50,560
process they're on a show later the

00:42:46,990 --> 00:42:51,910
graphite or PNP is a module so the basic

00:42:50,560 --> 00:42:54,190
I say go back ribs chest your framework

00:42:51,910 --> 00:42:57,750
and everything else is in module and I

00:42:54,190 --> 00:42:57,750
will show you how this looks like

00:43:01,529 --> 00:43:08,529
okay so this is the dashboard or vice

00:43:05,170 --> 00:43:09,999
inga web to the current version so if

00:43:08,529 --> 00:43:11,819
you're familiar with the principal

00:43:09,999 --> 00:43:14,019
concept of monitoring it's like we have

00:43:11,819 --> 00:43:17,049
normally a lot of red and green and

00:43:14,019 --> 00:43:21,430
orange colors where you can see this can

00:43:17,049 --> 00:43:26,589
you read it is it readable I can try to

00:43:21,430 --> 00:43:28,420
oh no it's not better and it reduce them

00:43:26,589 --> 00:43:32,950
another column okay we have to go this

00:43:28,420 --> 00:43:35,559
way sorry what you can see on the

00:43:32,950 --> 00:43:38,140
dashboard is you have the service

00:43:35,559 --> 00:43:39,880
problems here on the left side and and a

00:43:38,140 --> 00:43:41,859
basic concept of a singer web to that

00:43:39,880 --> 00:43:44,229
every time you click on a specific

00:43:41,859 --> 00:43:48,599
service host host group whatever then

00:43:44,229 --> 00:43:51,099
you get the details on the right side so

00:43:48,599 --> 00:43:53,289
recently recovered service is a specific

00:43:51,099 --> 00:43:54,609
view as well so if you come come back

00:43:53,289 --> 00:43:57,099
from lunch break you see what what

00:43:54,609 --> 00:43:58,749
happened and what's up again and if you

00:43:57,099 --> 00:44:01,329
go on a specific service then you see

00:43:58,749 --> 00:44:03,819
the detail on the right and it works the

00:44:01,329 --> 00:44:07,599
same way so for example I click the

00:44:03,819 --> 00:44:10,150
service or ping on see windows I see the

00:44:07,599 --> 00:44:13,809
service data see a pnp graph over here

00:44:10,150 --> 00:44:15,309
and if I want to do a recheck and if you

00:44:13,809 --> 00:44:18,549
can remember how that works in August

00:44:15,309 --> 00:44:20,200
it's like that's it that's everything

00:44:18,549 --> 00:44:22,839
you have to do this is a recheck command

00:44:20,200 --> 00:44:25,239
which is probably you save the half of

00:44:22,839 --> 00:44:28,329
your day if we work with the whole thing

00:44:25,239 --> 00:44:30,940
and it's really easy to do the basic

00:44:28,329 --> 00:44:32,170
things or say adding a comment or adding

00:44:30,940 --> 00:44:35,469
an acknowledgement it's pretty easy

00:44:32,170 --> 00:44:37,239
everything works in that box so adding a

00:44:35,469 --> 00:44:40,690
comment as well it's like the box is

00:44:37,239 --> 00:44:47,440
here adding a comment that said I think

00:44:40,690 --> 00:44:51,099
some okay if you have if you have this

00:44:47,440 --> 00:44:53,739
checks to preps can you recognize these

00:44:51,099 --> 00:44:55,390
small pie chart so if you have a couple

00:44:53,739 --> 00:44:57,190
of disco performance data which makes

00:44:55,390 --> 00:44:58,509
sense you have something like a pie

00:44:57,190 --> 00:45:01,059
chart where you can see that your risk

00:44:58,509 --> 00:45:03,160
is nearly full also if you come to a

00:45:01,059 --> 00:45:04,599
specific hosts you can see what's up

00:45:03,160 --> 00:45:08,499
with the other services on that on that

00:45:04,599 --> 00:45:10,060
note so in this and this host we have

00:45:08,499 --> 00:45:11,380
one configured service

00:45:10,060 --> 00:45:13,690
which is up in all the others is down

00:45:11,380 --> 00:45:16,690
and it's directly clickable so you can

00:45:13,690 --> 00:45:18,610
go to every host and for example leave

00:45:16,690 --> 00:45:21,070
the detail for that and then you go to

00:45:18,610 --> 00:45:23,380
other service and go here and have the

00:45:21,070 --> 00:45:25,810
details over there and compared to all

00:45:23,380 --> 00:45:28,270
the other things and you can reach every

00:45:25,810 --> 00:45:30,280
column every situation you have using

00:45:28,270 --> 00:45:32,470
the browser history so it really works

00:45:30,280 --> 00:45:34,270
to get the same said we can copy the

00:45:32,470 --> 00:45:37,120
link so all the everything you see all

00:45:34,270 --> 00:45:39,400
the filtered stuff is completing in the

00:45:37,120 --> 00:45:42,550
UL so give shower to somewhere else and

00:45:39,400 --> 00:45:44,590
he gets the same result so it can walk

00:45:42,550 --> 00:45:46,690
down the street if you in a singer web

00:45:44,590 --> 00:45:49,240
if you use that getting the same state

00:45:46,690 --> 00:45:54,670
after reload it's not so so it's cool

00:45:49,240 --> 00:45:57,700
but it's not super cool for every object

00:45:54,670 --> 00:45:59,770
you get a full history so if you go to

00:45:57,700 --> 00:46:02,050
object you can have the complete history

00:45:59,770 --> 00:46:03,910
which is we got the power of the

00:46:02,050 --> 00:46:05,710
database so also if you have 100,000

00:46:03,910 --> 00:46:09,160
whole subject it's really easy to get

00:46:05,710 --> 00:46:13,690
everything which which happened on that

00:46:09,160 --> 00:46:15,280
specific node we can do something like a

00:46:13,690 --> 00:46:17,680
search which is important if you have a

00:46:15,280 --> 00:46:19,330
lot of objects if you type here win for

00:46:17,680 --> 00:46:21,460
example then you see the host the

00:46:19,330 --> 00:46:23,530
services you can see the host groups

00:46:21,460 --> 00:46:25,690
containing wayness the word you can also

00:46:23,530 --> 00:46:28,360
see the details for the host group here

00:46:25,690 --> 00:46:30,700
so how many services in total in which

00:46:28,360 --> 00:46:33,490
state they are and for example gets to

00:46:30,700 --> 00:46:35,920
pending over here and you get the

00:46:33,490 --> 00:46:38,110
details which service is going to happen

00:46:35,920 --> 00:46:39,910
so it's really to care about that

00:46:38,110 --> 00:46:44,800
everything you need normally is

00:46:39,910 --> 00:46:49,690
reachable very easy you can do something

00:46:44,800 --> 00:46:53,890
like a multi-select pressing shift or

00:46:49,690 --> 00:46:55,840
pressing not shift no it worked and then

00:46:53,890 --> 00:46:57,670
you see the details for that and you can

00:46:55,840 --> 00:47:00,280
do a check now for all the host of

00:46:57,670 --> 00:47:01,780
eights for example and that's it so it's

00:47:00,280 --> 00:47:06,370
pretty easy to work with a couple of

00:47:01,780 --> 00:47:12,000
hosts and services I go back to the

00:47:06,370 --> 00:47:12,000
dashboard sorry

00:47:13,650 --> 00:47:27,730
overlay the service charge yeah to get

00:47:22,300 --> 00:47:29,470
the detail for the chart known that this

00:47:27,730 --> 00:47:31,210
view body can create a dashboard for

00:47:29,470 --> 00:47:33,700
that but you can get the detail for the

00:47:31,210 --> 00:47:35,680
PNP graph it's not it's not though

00:47:33,700 --> 00:47:37,540
beautiful because we have that the PMP

00:47:35,680 --> 00:47:39,460
basic framework out there we will cut

00:47:37,540 --> 00:47:43,030
this out in the next in the next version

00:47:39,460 --> 00:47:44,470
that you have this rd graph so we can

00:47:43,030 --> 00:47:46,300
reach the detail but but it's not

00:47:44,470 --> 00:47:49,829
possible to add a couple of hosts in in

00:47:46,300 --> 00:47:49,829
a dashboard graph now that not for now

00:47:50,940 --> 00:47:57,609
how much time do okay okay so we have

00:47:55,240 --> 00:47:59,859
the typical views perhaps if you miss

00:47:57,609 --> 00:48:01,630
these normally which takes thirty

00:47:59,859 --> 00:48:04,630
percent of the screen is this bar over

00:48:01,630 --> 00:48:07,150
there wheres and I have 1000 1000 hosts

00:48:04,630 --> 00:48:09,099
okay so we throw that out because it

00:48:07,150 --> 00:48:10,750
doesn't make sense perhaps you will miss

00:48:09,099 --> 00:48:13,089
it and say okay you like to show

00:48:10,750 --> 00:48:15,970
somebody I have everything on green but

00:48:13,089 --> 00:48:17,710
we try to prepare everything that you

00:48:15,970 --> 00:48:19,900
can focus on the things which are not in

00:48:17,710 --> 00:48:21,970
a good state so we throw out this

00:48:19,900 --> 00:48:23,500
performance bar perhaps somebody writes

00:48:21,970 --> 00:48:27,250
a module to bring it back again if

00:48:23,500 --> 00:48:29,859
somebody loves it we will not do it so

00:48:27,250 --> 00:48:38,260
we really try to focus on the things

00:48:29,859 --> 00:48:41,290
which are not in a good shape another

00:48:38,260 --> 00:48:44,230
thing we have which is can see we have a

00:48:41,290 --> 00:48:46,540
powerful filter engine so all the views

00:48:44,230 --> 00:48:48,910
you have are filtered so for example i

00:48:46,540 --> 00:48:52,150
used the multi-select feature to select

00:48:48,910 --> 00:48:54,700
a couple of services over there and then

00:48:52,150 --> 00:48:56,980
i just see the details what it generates

00:48:54,700 --> 00:48:59,920
and this is also in the UL so it's it's

00:48:56,980 --> 00:49:02,140
a combination of or an end i'm adding

00:48:59,920 --> 00:49:06,910
these specific hosts and i could do more

00:49:02,140 --> 00:49:09,310
so I I can filter on nearly everything

00:49:06,910 --> 00:49:11,800
on every attribute a house has you can

00:49:09,310 --> 00:49:13,599
create your own dashboards and if you

00:49:11,800 --> 00:49:19,290
say this is pretty cool I want to store

00:49:13,599 --> 00:49:24,460
exactly this one to a dashboard but up

00:49:19,290 --> 00:49:27,110
no why not you can edit to the dashboard

00:49:24,460 --> 00:49:31,910
and say this is the exactly the data I

00:49:27,110 --> 00:49:36,100
want to have I want to assure current

00:49:31,910 --> 00:49:41,390
incidents and then you can see it here

00:49:36,100 --> 00:49:47,360
now you cannot see it where is it you

00:49:41,390 --> 00:49:51,830
have the wrong dashboard hold on here is

00:49:47,360 --> 00:49:56,060
it 00 SDC but every I kicked out the

00:49:51,830 --> 00:49:57,890
filter which was not a clue ID and you

00:49:56,060 --> 00:50:01,190
can also sort out so we have something

00:49:57,890 --> 00:50:04,430
we deliver one thing is the business

00:50:01,190 --> 00:50:10,310
process that on which you can show you

00:50:04,430 --> 00:50:12,320
now I am familiar with the basic concept

00:50:10,310 --> 00:50:15,020
of their business process ideas that

00:50:12,320 --> 00:50:17,060
normally the system relates on hosting

00:50:15,020 --> 00:50:19,370
service checks and burn sitting here he

00:50:17,060 --> 00:50:21,890
is the original creator of the business

00:50:19,370 --> 00:50:24,680
process I don't for nagios and the ideas

00:50:21,890 --> 00:50:26,480
getting a service result and for more

00:50:24,680 --> 00:50:29,570
than a specific host or service because

00:50:26,480 --> 00:50:31,460
a service in business is more than a

00:50:29,570 --> 00:50:33,290
single host or service it's it's your

00:50:31,460 --> 00:50:37,370
web application it's your email server

00:50:33,290 --> 00:50:38,840
it's it's a thing and your customers pay

00:50:37,370 --> 00:50:40,670
for perhaps your internal or external

00:50:38,840 --> 00:50:43,430
customers but a service is more than a

00:50:40,670 --> 00:50:45,680
single a single state and you can do

00:50:43,430 --> 00:50:49,070
that with with their business rules for

00:50:45,680 --> 00:50:50,540
example here you see a dns service but

00:50:49,070 --> 00:50:52,310
the dns service consists of a lot of

00:50:50,540 --> 00:50:54,920
components so you need a couple of dns

00:50:52,310 --> 00:50:56,720
servers and and what we have we have a

00:50:54,920 --> 00:51:00,830
combination of or intend rules as well

00:50:56,720 --> 00:51:03,560
so we say dns service is green if one of

00:51:00,830 --> 00:51:05,270
these dns service is ok you can do also

00:51:03,560 --> 00:51:07,760
something like a minimum have to say

00:51:05,270 --> 00:51:09,230
minimum to service needs to be okay in a

00:51:07,760 --> 00:51:14,870
load-balanced cluster or something like

00:51:09,230 --> 00:51:22,220
that just to show another example the

00:51:14,870 --> 00:51:23,840
web service where you see we need my

00:51:22,220 --> 00:51:26,210
sequel server and we need a web server

00:51:23,840 --> 00:51:29,560
it and you can see in this example oh

00:51:26,210 --> 00:51:34,840
I'm not able to to press that button

00:51:29,560 --> 00:51:37,870
that for example what sorry try to ah

00:51:34,840 --> 00:51:37,870
thank you

00:51:38,400 --> 00:51:43,359
you see that one of the mice equal

00:51:40,630 --> 00:51:45,130
servers is down but it's in or rule that

00:51:43,359 --> 00:51:47,349
one of these servers needs to be up so

00:51:45,130 --> 00:51:50,609
this service is okay does it does it in

00:51:47,349 --> 00:51:53,260
general make sense what what it does

00:51:50,609 --> 00:51:57,010
what you can do you can you can simulate

00:51:53,260 --> 00:52:04,900
some stuff so you can say I would assume

00:51:57,010 --> 00:52:07,390
that C server is down for example say

00:52:04,900 --> 00:52:08,799
okay this is critical then you can see

00:52:07,390 --> 00:52:11,049
this one is critical what happens to

00:52:08,799 --> 00:52:13,750
your service and this is not it's not

00:52:11,049 --> 00:52:16,299
powering down the real server it's just

00:52:13,750 --> 00:52:17,829
a simulation in this process is easy so

00:52:16,299 --> 00:52:19,720
you are able to see what's going on but

00:52:17,829 --> 00:52:22,030
if you have a lot of services and you

00:52:19,720 --> 00:52:23,500
have a lot of end on or is it could be

00:52:22,030 --> 00:52:26,950
hard sometimes to say what what really

00:52:23,500 --> 00:52:30,220
happens if this server goes down and and

00:52:26,950 --> 00:52:31,869
the simulation is pretty cool for it so

00:52:30,220 --> 00:52:33,579
you can use the web interface to create

00:52:31,869 --> 00:52:35,589
new process it's file-based you can

00:52:33,579 --> 00:52:37,240
generate them using Papa danceable

00:52:35,589 --> 00:52:40,900
whatever but you can also use the web

00:52:37,240 --> 00:52:43,630
interface for it and other things that

00:52:40,900 --> 00:52:46,839
we have different views for example we

00:52:43,630 --> 00:52:49,359
have that the basic grids and we also

00:52:46,839 --> 00:52:51,609
have that the tiles and the tiles is

00:52:49,359 --> 00:52:54,520
pretty cool for monitoring it's just

00:52:51,609 --> 00:52:55,869
like green red and if you have problems

00:52:54,520 --> 00:52:57,549
with you can just make a green screen

00:52:55,869 --> 00:53:00,880
shot and leave it there looks pretty

00:52:57,549 --> 00:53:03,040
nicer but sometimes this is enough for a

00:53:00,880 --> 00:53:04,569
monitoring to see if something is going

00:53:03,040 --> 00:53:06,490
on and you don't want to go into the

00:53:04,569 --> 00:53:08,740
detail or perhaps you don't want to see

00:53:06,490 --> 00:53:13,150
a rate failure on your dashboard in the

00:53:08,740 --> 00:53:15,819
company and also in the dashboard we can

00:53:13,150 --> 00:53:18,160
use the tiles in a reduced size over

00:53:15,819 --> 00:53:20,380
here and we can go to that click here

00:53:18,160 --> 00:53:22,720
and then we see the process on the right

00:53:20,380 --> 00:53:26,849
side so independent forever module use

00:53:22,720 --> 00:53:30,119
every detail comes on the right side

00:53:26,849 --> 00:53:33,369
something I missed another cool feature

00:53:30,119 --> 00:53:34,720
which doesn't look so good here but the

00:53:33,369 --> 00:53:37,049
main reason is because I created this

00:53:34,720 --> 00:53:39,520
virtual machine today if we using github

00:53:37,049 --> 00:53:40,930
you know something like an activity grid

00:53:39,520 --> 00:53:42,520
if you come on the landing page and get

00:53:40,930 --> 00:53:44,770
up and see what's going on in a specific

00:53:42,520 --> 00:53:47,319
date and this is what we do with the

00:53:44,770 --> 00:53:48,579
event grid so we will do some graphic

00:53:47,319 --> 00:53:50,210
work on that because we know that this

00:53:48,579 --> 00:53:52,849
is not the super sexy view at

00:53:50,210 --> 00:53:56,480
the moment but just to understand the

00:53:52,849 --> 00:54:00,170
concept is that every every quarter

00:53:56,480 --> 00:54:02,540
represents a day and if it went happens

00:54:00,170 --> 00:54:05,300
on the day we mark it red and then more

00:54:02,540 --> 00:54:07,700
events on the day happen then read it

00:54:05,300 --> 00:54:10,339
gets means if you if you have a look on

00:54:07,700 --> 00:54:13,070
a year you can really say I have a lot

00:54:10,339 --> 00:54:14,810
of alerts every time on the first monday

00:54:13,070 --> 00:54:17,150
of a month for example because the

00:54:14,810 --> 00:54:19,670
accounting generates the loan or

00:54:17,150 --> 00:54:22,040
whatever so it's really interesting

00:54:19,670 --> 00:54:23,300
because on a short term normally you

00:54:22,040 --> 00:54:24,740
know whats going and you know that you

00:54:23,300 --> 00:54:26,750
have your same friends in your company

00:54:24,740 --> 00:54:29,030
which crashing the system every Thursday

00:54:26,750 --> 00:54:31,160
whatever because they play pictures but

00:54:29,030 --> 00:54:32,630
but for a bigger time range it's really

00:54:31,160 --> 00:54:36,470
hard to get these constraints between

00:54:32,630 --> 00:54:38,510
specific actions and results and this is

00:54:36,470 --> 00:54:41,630
cool and and for now you see the

00:54:38,510 --> 00:54:43,300
generated went first for today then you

00:54:41,630 --> 00:54:46,339
can click on that you see that we have

00:54:43,300 --> 00:54:47,869
137 service criticals on that day you

00:54:46,339 --> 00:54:49,970
see it on the right side the detail and

00:54:47,869 --> 00:54:53,660
if the system runs a little bit longer

00:54:49,970 --> 00:55:05,210
and will bring something on on the right

00:54:53,660 --> 00:55:06,890
side as well yeah the question was if

00:55:05,210 --> 00:55:10,700
this view can be filtered for specific

00:55:06,890 --> 00:55:13,670
services um no we can specific on types

00:55:10,700 --> 00:55:15,440
services in host for now but we cannot

00:55:13,670 --> 00:55:17,359
filter on specific service groups

00:55:15,440 --> 00:55:19,609
perhaps we can add that if if this is

00:55:17,359 --> 00:55:22,010
interesting so in when we played around

00:55:19,609 --> 00:55:23,900
recognize these kind of use make sense

00:55:22,010 --> 00:55:25,730
with a lot of data so if you really look

00:55:23,900 --> 00:55:27,800
into the database after months and

00:55:25,730 --> 00:55:32,890
really see the whole system what's going

00:55:27,800 --> 00:55:32,890
on but that would be an interesting idea

00:55:33,910 --> 00:55:50,020
sorry sorry I didn't get it ya know so

00:55:46,070 --> 00:55:52,240
the question is bye-bye please use it

00:55:50,020 --> 00:55:58,520
you're running away or you have to leave

00:55:52,240 --> 00:56:01,339
okay that's okay thank you now for now

00:55:58,520 --> 00:56:04,040
you cannot because perhaps you don't

00:56:01,339 --> 00:56:06,440
have 20,000 of it in the basic tile you

00:56:04,040 --> 00:56:08,720
see everything so you can you can use

00:56:06,440 --> 00:56:10,580
them there is a check delivered with it

00:56:08,720 --> 00:56:12,589
where you can check your service state

00:56:10,580 --> 00:56:14,240
because what's happened here it's just

00:56:12,589 --> 00:56:15,800
the visualization of the process but

00:56:14,240 --> 00:56:17,990
there's a check plugin where you really

00:56:15,800 --> 00:56:20,540
can check your process and this is in

00:56:17,990 --> 00:56:23,830
the system a real service like all the

00:56:20,540 --> 00:56:27,130
others and then you can filter that one

00:56:23,830 --> 00:56:30,770
another new view is that service grip

00:56:27,130 --> 00:56:33,589
which shows you listed problems of the

00:56:30,770 --> 00:56:35,750
same type or area for all hosts and

00:56:33,589 --> 00:56:37,520
services which have not a good state so

00:56:35,750 --> 00:56:39,619
you see the host on the left side and

00:56:37,520 --> 00:56:42,349
you see the services and then you can

00:56:39,619 --> 00:56:44,180
see for example windows does not work on

00:56:42,349 --> 00:56:48,859
any server which is the standard

00:56:44,180 --> 00:56:53,869
situation you know from your office so

00:56:48,859 --> 00:56:56,780
it's real data so we have you have this

00:56:53,869 --> 00:56:58,880
here it also totally makes sense if you

00:56:56,780 --> 00:57:00,260
have you have an outage in a storage or

00:56:58,880 --> 00:57:01,790
you're monitoring your storage from the

00:57:00,260 --> 00:57:03,530
specific virtual machines or from

00:57:01,790 --> 00:57:06,260
hypervisors have a look on your on your

00:57:03,530 --> 00:57:08,690
central staff or whatever then you you

00:57:06,260 --> 00:57:10,849
go on that metrics and it's it's it's

00:57:08,690 --> 00:57:12,380
really just a 2-second view to see okay

00:57:10,849 --> 00:57:13,430
this is wrong I have a problem with the

00:57:12,380 --> 00:57:16,190
network I have a problem with the

00:57:13,430 --> 00:57:17,960
storage so it gives you even if you not

00:57:16,190 --> 00:57:19,520
have a specific server error state if

00:57:17,960 --> 00:57:22,730
you just want to get an overview what's

00:57:19,520 --> 00:57:24,500
wrong and this is a pretty cool view you

00:57:22,730 --> 00:57:26,859
can fill the vet on specific problems

00:57:24,500 --> 00:57:29,480
you can see the filter area over here

00:57:26,859 --> 00:57:33,290
like I said we are still in the process

00:57:29,480 --> 00:57:35,720
of finishing it but this is a pretty

00:57:33,290 --> 00:57:39,619
cool view and it also works with a lot

00:57:35,720 --> 00:57:41,810
of data so these demo goes uses a my

00:57:39,619 --> 00:57:43,970
sequel database which is not so big

00:57:41,810 --> 00:57:46,849
because it's just the demo setup but if

00:57:43,970 --> 00:57:49,400
you have a million of services in it the

00:57:46,849 --> 00:57:51,830
interface works the same performance

00:57:49,400 --> 00:57:54,410
all the needed stuff is indexed and

00:57:51,830 --> 00:57:56,900
therefore the database is invented for

00:57:54,410 --> 00:58:00,850
doing such stuff so datum a database in

00:57:56,900 --> 00:58:03,140
a big environment really make sense ok

00:58:00,850 --> 00:58:11,450
anyone has a specific questions for the

00:58:03,140 --> 00:58:13,130
web interface for now yes yes the

00:58:11,450 --> 00:58:15,200
question is if it's possible to disable

00:58:13,130 --> 00:58:18,920
monitoring you can do that it's it's a

00:58:15,200 --> 00:58:20,390
downtime in icing guys there's a fixed

00:58:18,920 --> 00:58:22,370
down time where you can say on saturday

00:58:20,390 --> 00:58:23,930
morning from two to four and there's

00:58:22,370 --> 00:58:26,300
something like a flexible downtown where

00:58:23,930 --> 00:58:27,590
you can say it starts somewhere and when

00:58:26,300 --> 00:58:30,680
it starts so when the server goes down

00:58:27,590 --> 00:58:34,400
then the time counts you can just select

00:58:30,680 --> 00:58:36,890
the service or more service and then say

00:58:34,400 --> 00:58:38,690
here scheduled downtime and then you can

00:58:36,890 --> 00:58:40,880
say it's a fixed or a flexible downtime

00:58:38,690 --> 00:58:43,280
you can set the date you can write a

00:58:40,880 --> 00:58:44,960
comment so i don't know flexible down

00:58:43,280 --> 00:58:47,360
them because they do updating the system

00:58:44,960 --> 00:58:49,160
and that's it and then the monitoring so

00:58:47,360 --> 00:58:52,220
you don't get any notifications or stuff

00:58:49,160 --> 00:58:56,050
like that more questions on the web

00:58:52,220 --> 00:58:56,050
interface ok

00:59:01,200 --> 00:59:06,520
yes so you can have select multiple

00:59:04,150 --> 00:59:12,300
services and then set a downtown that's

00:59:06,520 --> 00:59:14,530
possible and I'm only over time I think

00:59:12,300 --> 00:59:16,330
so you can play with the web interface

00:59:14,530 --> 00:59:18,190
it works so we know a lot of people

00:59:16,330 --> 00:59:20,530
using it in production because all the

00:59:18,190 --> 00:59:22,630
monitoring stuff is is pretty good there

00:59:20,530 --> 00:59:24,970
are some some designs in the backend

00:59:22,630 --> 00:59:27,640
some dialogues which are in the face we

00:59:24,970 --> 00:59:30,430
want to finish them so the release we

00:59:27,640 --> 00:59:33,760
retargeting i would say retargeting

00:59:30,430 --> 00:59:36,070
early May I would say end of May will be

00:59:33,760 --> 00:59:38,110
the logical result of it but it's it's

00:59:36,070 --> 00:59:43,300
really close so in the in the next two

00:59:38,110 --> 00:59:44,740
months we will finish it and I'm nearly

00:59:43,300 --> 00:59:48,700
finished with my talk as well so don't

00:59:44,740 --> 00:59:50,650
be afraid just to give you giving idea

00:59:48,700 --> 00:59:52,450
the problem is we have no clue who is

00:59:50,650 --> 00:59:53,920
using our singer because we don't have

00:59:52,450 --> 00:59:55,240
to register you don't have sign up we

00:59:53,920 --> 00:59:58,210
know that a lot of people using the

00:59:55,240 --> 00:59:59,800
packages so it was really important if

00:59:58,210 --> 01:00:01,330
you're using it please let us know we

00:59:59,800 --> 01:00:02,980
have on the website a forum where you

01:00:01,330 --> 01:00:05,260
can type your name and what do you do

01:00:02,980 --> 01:00:06,520
with it so if you allow to for us it

01:00:05,260 --> 01:00:08,560
would be really interesting to know who

01:00:06,520 --> 01:00:10,240
is using I singer perhaps if you had a

01:00:08,560 --> 01:00:12,670
shiny logo we would put this on the

01:00:10,240 --> 01:00:14,350
website as well so these are some

01:00:12,670 --> 01:00:16,630
companies we know that they're using it

01:00:14,350 --> 01:00:18,190
and we allowed to use the logo probably

01:00:16,630 --> 01:00:19,960
i'm not allowed to use the adobe logo

01:00:18,190 --> 01:00:24,160
but i like it and so i put it on the on

01:00:19,960 --> 01:00:26,410
the slide so I they use it and they used

01:00:24,160 --> 01:00:28,360
I singer too we have that I singer came

01:00:26,410 --> 01:00:30,640
in San Francisco last year at github

01:00:28,360 --> 01:00:33,430
thanks to James he made it possible and

01:00:30,640 --> 01:00:35,200
and some guy from from Adobe came and

01:00:33,430 --> 01:00:37,300
and I singer too was yeah it was very

01:00:35,200 --> 01:00:38,320
new and we knew there's some work to do

01:00:37,300 --> 01:00:39,940
in the background say yeah we're using

01:00:38,320 --> 01:00:42,100
it in production works pretty cool and

01:00:39,940 --> 01:00:43,930
another girl from HP said yeah we are

01:00:42,100 --> 01:00:45,730
using it for monitoring our internal

01:00:43,930 --> 01:00:47,560
private cloud and then we said you're

01:00:45,730 --> 01:00:51,610
from HP you have your own monitoring

01:00:47,560 --> 01:00:53,740
tools yeah but it doesn't work so we

01:00:51,610 --> 01:00:56,470
have a it's a real story as so we have

01:00:53,740 --> 01:00:59,650
my singer too that's it so if you have

01:00:56,470 --> 01:01:02,080
it please let us know and then we have a

01:00:59,650 --> 01:01:03,820
couple of events going on and we have

01:01:02,080 --> 01:01:05,770
these icinga cams so if you're familiar

01:01:03,820 --> 01:01:08,020
with the concept of a puppet camp it's

01:01:05,770 --> 01:01:11,050
probably the same but you can get it

01:01:08,020 --> 01:01:12,490
it's about a singer the next thing will

01:01:11,050 --> 01:01:13,560
be in Kuala Lumpur so if you have time

01:01:12,490 --> 01:01:16,140
for holiday

01:01:13,560 --> 01:01:18,960
in the middle of June and we also have

01:01:16,140 --> 01:01:21,570
one in Portland so if you go into puppet

01:01:18,960 --> 01:01:23,840
cones in Portland it will be the

01:01:21,570 --> 01:01:26,310
saturday after puppet conf at the puppet

01:01:23,840 --> 01:01:28,290
laps headquarter they will the puppet

01:01:26,310 --> 01:01:30,690
Kim and perhaps we have one in New York

01:01:28,290 --> 01:01:32,010
as well in summer but the problems we

01:01:30,690 --> 01:01:34,740
don't have a location in New York and

01:01:32,010 --> 01:01:37,200
doing it an open session on Times Square

01:01:34,740 --> 01:01:39,300
is a little bit hard so we're working on

01:01:37,200 --> 01:01:41,970
a location day and we have some some

01:01:39,300 --> 01:01:43,980
ideas which looks really promising but

01:01:41,970 --> 01:01:46,290
we would like to do so and if you come

01:01:43,980 --> 01:01:52,470
over to these kind of events it really

01:01:46,290 --> 01:01:54,240
makes sense to fly in a conclusion just

01:01:52,470 --> 01:01:55,830
an important thing what what describes

01:01:54,240 --> 01:01:57,780
what we want to do we want to be

01:01:55,830 --> 01:01:59,160
compatible with all these Hot Tools but

01:01:57,780 --> 01:02:01,530
we don't want to reinvent the wheel

01:01:59,160 --> 01:02:04,740
again and again so we want to focus on

01:02:01,530 --> 01:02:06,390
on monitoring and api's which is the

01:02:04,740 --> 01:02:08,430
major target for the next version the

01:02:06,390 --> 01:02:10,290
tutor for is our main reason that we

01:02:08,430 --> 01:02:12,660
want to a PFI everything that you can

01:02:10,290 --> 01:02:15,300
get all the data you can create house

01:02:12,660 --> 01:02:17,370
delete hosts do everything using a

01:02:15,300 --> 01:02:19,650
concrete ABI this is one of the major

01:02:17,370 --> 01:02:21,240
targets and we want to be able to

01:02:19,650 --> 01:02:23,670
connect to all this stuff so using locks

01:02:21,240 --> 01:02:25,560
this using influx to be or graphite but

01:02:23,670 --> 01:02:27,990
we don't want to invent our own locking

01:02:25,560 --> 01:02:30,150
tool because they are great tools out

01:02:27,990 --> 01:02:32,460
there and really really focusing on our

01:02:30,150 --> 01:02:34,890
stuff and being open to all the cool

01:02:32,460 --> 01:02:37,670
tools out there that that makes your own

01:02:34,890 --> 01:02:39,780
tool chain possible in the data center

01:02:37,670 --> 01:02:42,360
so what you definitely should do if you

01:02:39,780 --> 01:02:44,460
leave that room download a singer to

01:02:42,360 --> 01:02:46,890
rethink your configuration it really

01:02:44,460 --> 01:02:49,230
makes sense to do so install the new web

01:02:46,890 --> 01:02:51,180
interface play around with it and give

01:02:49,230 --> 01:02:54,510
us feedback we would be around here if

01:02:51,180 --> 01:02:57,120
you want to catch with us here or on any

01:02:54,510 --> 01:02:58,880
channel on every facebook and every

01:02:57,120 --> 01:03:00,870
social net on world you can reach us

01:02:58,880 --> 01:03:03,140
thank you very much have safe travels

01:03:00,870 --> 01:03:03,140
home

01:03:09,050 --> 01:03:14,070
other question if somebody wants to do

01:03:11,790 --> 01:03:18,960
so or if I don't know if you have time

01:03:14,070 --> 01:03:20,730
but if if their questions okay there's

01:03:18,960 --> 01:03:23,099
still lunch boxes out there perhaps of

01:03:20,730 --> 01:03:25,320
this more important for now more food

01:03:23,099 --> 01:03:27,410
okay safe travel home thanks for coming

01:03:25,320 --> 01:03:27,410

YouTube URL: https://www.youtube.com/watch?v=ZEqx9WqRps4


