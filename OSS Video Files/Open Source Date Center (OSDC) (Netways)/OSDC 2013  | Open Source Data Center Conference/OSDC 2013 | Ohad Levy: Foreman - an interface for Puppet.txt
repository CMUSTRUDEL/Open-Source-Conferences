Title: OSDC 2013 | Ohad Levy: Foreman - an interface for Puppet
Publication date: 2015-01-13
Playlist: OSDC 2013  | Open Source Data Center Conference
Description: 
	Foreman is a complete lifecycle management tool for physical and virtual servers.
Captions: 
	00:00:03,520 --> 00:00:10,990
alright thanks for coming everyone my

00:00:06,580 --> 00:00:15,610
name is odd i work at Red Hat where I

00:00:10,990 --> 00:00:18,130
mostly work informant before working at

00:00:15,610 --> 00:00:19,720
reddit I worked at a company German

00:00:18,130 --> 00:00:24,450
company called infineon maybe some of

00:00:19,720 --> 00:00:28,740
you knows it where I was trying to solve

00:00:24,450 --> 00:00:31,570
real problems for as a sysadmin where

00:00:28,740 --> 00:00:33,489
initially the background was having lots

00:00:31,570 --> 00:00:35,260
and lots of data centers lots and lots

00:00:33,489 --> 00:00:40,210
of resources and trying to figure out

00:00:35,260 --> 00:00:42,430
how to simplify using them both for the

00:00:40,210 --> 00:00:45,190
guy responsible maintaining them and

00:00:42,430 --> 00:00:47,649
also for the ones consuming them so just

00:00:45,190 --> 00:00:50,500
out of curiosity how many guys know form

00:00:47,649 --> 00:00:51,850
in here use it awesome for those who

00:00:50,500 --> 00:00:55,090
don't know you how many of you use

00:00:51,850 --> 00:00:58,630
puppet or all right great then the rest

00:00:55,090 --> 00:01:01,270
is is great so I hope that in this talk

00:00:58,630 --> 00:01:03,190
for those of you use it already you'll

00:01:01,270 --> 00:01:05,170
learn something new for those who don't

00:01:03,190 --> 00:01:08,170
use it maybe I'll convince you to start

00:01:05,170 --> 00:01:10,090
looking into it in other case feel free

00:01:08,170 --> 00:01:13,329
to ask any question whatsoever at any

00:01:10,090 --> 00:01:17,770
point in time I like big question a lot

00:01:13,329 --> 00:01:20,859
so let's start what's Foreman so overall

00:01:17,770 --> 00:01:25,420
Foreman tries to manage systems

00:01:20,859 --> 00:01:28,149
lifecycle caring for all of this initial

00:01:25,420 --> 00:01:30,340
setup that is required whether it's the

00:01:28,149 --> 00:01:33,249
actual machine that needs to vm that

00:01:30,340 --> 00:01:37,689
needs to be running or maybe even stuff

00:01:33,249 --> 00:01:40,509
before that like dns IP addresses and

00:01:37,689 --> 00:01:42,399
things like that then obviously get the

00:01:40,509 --> 00:01:45,939
system running and then take care for

00:01:42,399 --> 00:01:47,200
its long you know kind of workflow what

00:01:45,939 --> 00:01:49,149
happens after the system is running

00:01:47,200 --> 00:01:53,679
could be a year could be a month

00:01:49,149 --> 00:01:56,020
whatever all life cycle so we're talking

00:01:53,679 --> 00:01:58,840
about provisioning configuration and

00:01:56,020 --> 00:02:02,159
monitoring of that setup so provisioning

00:01:58,840 --> 00:02:06,549
basically we do can do either bare metal

00:02:02,159 --> 00:02:08,500
virtualization or cloud we try to be

00:02:06,549 --> 00:02:11,890
agnostic to the platform you end up

00:02:08,500 --> 00:02:14,500
using or whether it's a bare metal or

00:02:11,890 --> 00:02:16,790
not we think that the process is should

00:02:14,500 --> 00:02:18,469
be from an operator point of view should

00:02:16,790 --> 00:02:20,569
be more or less the same thing whether

00:02:18,469 --> 00:02:23,359
you created on the vm will create on a

00:02:20,569 --> 00:02:25,219
bare metal overall the experience the

00:02:23,359 --> 00:02:28,489
user experience should be as simple as

00:02:25,219 --> 00:02:31,099
similar as possible when we talk about

00:02:28,489 --> 00:02:34,459
configuration Foreman has a very tight

00:02:31,099 --> 00:02:36,409
integration with puppet there's a

00:02:34,459 --> 00:02:39,319
something called an enc external node

00:02:36,409 --> 00:02:42,260
classifier which basically means puppet

00:02:39,319 --> 00:02:44,420
ask for man hey I got this system can

00:02:42,260 --> 00:02:47,750
you tell me what what is it about what

00:02:44,420 --> 00:02:49,220
should it be doing tell me I'll

00:02:47,750 --> 00:02:53,120
implement just tell me so we basically

00:02:49,220 --> 00:02:55,189
classify and say and alternately we also

00:02:53,120 --> 00:02:57,560
have for those of you new puppet

00:02:55,189 --> 00:03:00,739
supports for Parma ties classes and a

00:02:57,560 --> 00:03:05,150
hierarchal beckons storage I'll talk

00:03:00,739 --> 00:03:06,739
about that a bit later and when we talk

00:03:05,150 --> 00:03:10,250
about monitoring it's not your average

00:03:06,739 --> 00:03:12,439
nagios monitoring but rather showing you

00:03:10,250 --> 00:03:14,480
the state of your system where they

00:03:12,439 --> 00:03:15,889
actually ran pepper puppet did it do any

00:03:14,480 --> 00:03:19,099
changes was there and we're there any

00:03:15,889 --> 00:03:21,169
failures so basically giving you a state

00:03:19,099 --> 00:03:23,810
of your configuration management so

00:03:21,169 --> 00:03:26,359
monitor what's going on additionally you

00:03:23,810 --> 00:03:30,139
get things like inventory and trends

00:03:26,359 --> 00:03:31,879
over time so let's go and try to go back

00:03:30,139 --> 00:03:34,280
with a little bit and explain on the

00:03:31,879 --> 00:03:37,940
high level architecture so we have

00:03:34,280 --> 00:03:41,359
Foreman in the middle we have either web

00:03:37,940 --> 00:03:44,720
users or API users logging in to Foreman

00:03:41,359 --> 00:03:48,260
and then one Foreman needs to for

00:03:44,720 --> 00:03:51,229
example create a virtual machine or bare

00:03:48,260 --> 00:03:53,659
metal it has an extension call the

00:03:51,229 --> 00:03:56,169
proxies Foreman smart proxies the idea

00:03:53,659 --> 00:03:58,699
behind the proxies as they actually do

00:03:56,169 --> 00:04:01,189
the changes that are required so form

00:03:58,699 --> 00:04:02,750
and orchestrate across its proxies and

00:04:01,189 --> 00:04:05,750
ask for example there is a proxy to

00:04:02,750 --> 00:04:08,299
implement DNS so maybe you have a

00:04:05,750 --> 00:04:09,919
Microsoft DNS server or maybe a bind

00:04:08,299 --> 00:04:11,720
though each one of them could be a

00:04:09,919 --> 00:04:14,030
different proxy and the foreman

00:04:11,720 --> 00:04:16,130
basically will just say okay create me a

00:04:14,030 --> 00:04:18,560
DNS tree for this system and the same

00:04:16,130 --> 00:04:21,739
goes for various services could be DHCP

00:04:18,560 --> 00:04:25,849
could be a puppet certificate authority

00:04:21,739 --> 00:04:29,450
could be the BMC for power management

00:04:25,849 --> 00:04:30,169
and so on ideally or the idea behind it

00:04:29,450 --> 00:04:32,659
that the

00:04:30,169 --> 00:04:35,180
proxies are basically federated out

00:04:32,659 --> 00:04:36,800
where you have maybe multiple data

00:04:35,180 --> 00:04:40,279
centers and you have a centralized

00:04:36,800 --> 00:04:41,870
Foreman and have many proxies running on

00:04:40,279 --> 00:04:43,849
different data centers or maybe

00:04:41,870 --> 00:04:46,729
segmented networks or something like

00:04:43,849 --> 00:04:48,319
that so this gives you from a single

00:04:46,729 --> 00:04:50,360
place you could actually view your

00:04:48,319 --> 00:04:53,180
entire infrastructure and orchestrate

00:04:50,360 --> 00:05:00,259
across your entire infrastructure across

00:04:53,180 --> 00:05:01,669
one's cross whatever TMZ's and so on the

00:05:00,259 --> 00:05:04,580
other integration of course is with

00:05:01,669 --> 00:05:07,849
puppet where we have known interfaces

00:05:04,580 --> 00:05:09,860
we've known interfaces with puppet so we

00:05:07,849 --> 00:05:13,099
know how to get the inventory from

00:05:09,860 --> 00:05:15,319
factor we know how to parse reports

00:05:13,099 --> 00:05:18,139
about what Papa did and we can tell

00:05:15,319 --> 00:05:21,529
puppet what to do in terms of any and

00:05:18,139 --> 00:05:23,089
see now a side note is that many people

00:05:21,529 --> 00:05:25,249
choose to use form and only for some

00:05:23,089 --> 00:05:26,779
parts so really don't need to use for

00:05:25,249 --> 00:05:29,389
men for provisioning you can just use it

00:05:26,779 --> 00:05:31,279
for reporting like completely read only

00:05:29,389 --> 00:05:33,770
separated from your infrastructure just

00:05:31,279 --> 00:05:36,379
give you at a glance you know your state

00:05:33,770 --> 00:05:38,270
of puppet you don't have to do the whole

00:05:36,379 --> 00:05:40,009
thing some people so basically with the

00:05:38,270 --> 00:05:42,139
idea from design from the design is that

00:05:40,009 --> 00:05:43,819
you can mix and match the features that

00:05:42,139 --> 00:05:45,349
you care about and the rest you know

00:05:43,819 --> 00:05:49,189
either implement them at later time or

00:05:45,349 --> 00:05:51,080
or don't implement them at all and the

00:05:49,189 --> 00:05:54,199
other part is really talking to various

00:05:51,080 --> 00:05:57,710
cloud providers so bare metal Rev am

00:05:54,199 --> 00:06:00,139
over it which is the same thing maybe

00:05:57,710 --> 00:06:03,169
you saw yesterday easy to vmware vsphere

00:06:00,139 --> 00:06:06,439
OpenStack Rackspace maybe opennebula

00:06:03,169 --> 00:06:09,830
soon all this stuff form and basically

00:06:06,439 --> 00:06:12,110
reach out and ask or behind the scene

00:06:09,830 --> 00:06:13,639
kind of create the vm for you you don't

00:06:12,110 --> 00:06:17,120
need to know the details there is a kind

00:06:13,639 --> 00:06:22,339
of simplified API you I napi so we can

00:06:17,120 --> 00:06:24,919
just consume it besides that Foreman has

00:06:22,339 --> 00:06:27,259
a database it's a rails application Ruby

00:06:24,919 --> 00:06:31,689
on Rails so the database could be

00:06:27,259 --> 00:06:34,759
whatever mysql postgresql light

00:06:31,689 --> 00:06:37,370
theoretically Oracle as well and talks

00:06:34,759 --> 00:06:39,409
to active directory or LDAP or has its

00:06:37,370 --> 00:06:41,620
own internal user management you can

00:06:39,409 --> 00:06:43,780
basically mix and match the whole thing

00:06:41,620 --> 00:06:45,490
because we know that different users

00:06:43,780 --> 00:06:47,830
have different setups so we try to

00:06:45,490 --> 00:06:51,100
support all of the various combinations

00:06:47,830 --> 00:06:52,960
that people might have out there right

00:06:51,100 --> 00:06:55,710
so in terms of inventory for Mumbai

00:06:52,960 --> 00:06:59,350
default kind of collect your inventory

00:06:55,710 --> 00:07:01,500
knows about what's what's is running on

00:06:59,350 --> 00:07:05,650
its system depending on your factor

00:07:01,500 --> 00:07:06,820
inventory and you could easily do a lot

00:07:05,650 --> 00:07:09,160
of interesting things so for example

00:07:06,820 --> 00:07:12,280
generate your own charts based on your

00:07:09,160 --> 00:07:15,789
own custom facts you could have all kind

00:07:12,280 --> 00:07:18,039
of states that happens you basically

00:07:15,789 --> 00:07:20,530
Foreman reacts to your setup so whatever

00:07:18,039 --> 00:07:22,270
you have in your setup that's what

00:07:20,530 --> 00:07:23,949
you'll see in four minutes not the form

00:07:22,270 --> 00:07:26,410
and dictates the data but you actually

00:07:23,949 --> 00:07:27,639
see your own whatever it is your own

00:07:26,410 --> 00:07:29,889
systems you are in fact your own

00:07:27,639 --> 00:07:34,389
networks you own customized facts and so

00:07:29,889 --> 00:07:35,919
on same goes for reporting so kind of a

00:07:34,389 --> 00:07:38,590
dashboard we use the word dashboard

00:07:35,919 --> 00:07:41,560
before dashboard for you what's

00:07:38,590 --> 00:07:43,690
happening in your setup telling you in

00:07:41,560 --> 00:07:46,000
great detail what what did Papa do you

00:07:43,690 --> 00:07:48,400
could search easily give me all of the

00:07:46,000 --> 00:07:50,710
machines that had packet changes or

00:07:48,400 --> 00:07:53,020
maybe a specific change happen to them

00:07:50,710 --> 00:07:56,680
you could easily search through Foreman

00:07:53,020 --> 00:07:59,470
and gives you all kind of capabilities

00:07:56,680 --> 00:08:02,169
like audit log or send emails to the

00:07:59,470 --> 00:08:04,389
system owner based on arrows or whatever

00:08:02,169 --> 00:08:08,050
it is so you'd get something like

00:08:04,389 --> 00:08:10,690
simplified view of here is that what

00:08:08,050 --> 00:08:12,610
puppet did this file was changed you

00:08:10,690 --> 00:08:17,440
could see a diff of the file that was

00:08:12,610 --> 00:08:19,840
changed and things like that obviously

00:08:17,440 --> 00:08:22,690
we have the classification of system so

00:08:19,840 --> 00:08:25,630
you could just say this system belongs

00:08:22,690 --> 00:08:27,880
to this group for example that group

00:08:25,630 --> 00:08:32,459
represents something your application

00:08:27,880 --> 00:08:34,570
your whatever and you could then assign

00:08:32,459 --> 00:08:37,089
classes either to the group or to a

00:08:34,570 --> 00:08:38,979
specific systems and you can sign

00:08:37,089 --> 00:08:43,240
parameters you can assign all kinds of

00:08:38,979 --> 00:08:45,820
things especially around pharma types

00:08:43,240 --> 00:08:48,820
classes pretty interesting if we have

00:08:45,820 --> 00:08:51,700
time oh I'll show real demo and so on so

00:08:48,820 --> 00:08:53,740
this is just you know where Foreman

00:08:51,700 --> 00:08:54,940
imports your classes and you see your

00:08:53,740 --> 00:09:00,580
actual puppet module

00:08:54,940 --> 00:09:03,160
manifest within Foreman when we come to

00:09:00,580 --> 00:09:05,830
provisioning so mentioned we do private

00:09:03,160 --> 00:09:07,780
and public clouds we can do it a pixie

00:09:05,830 --> 00:09:10,270
based or image-based depending on the

00:09:07,780 --> 00:09:12,520
provider obviously PC doesn't work on a

00:09:10,270 --> 00:09:14,530
cloud provider but on a very very

00:09:12,520 --> 00:09:19,510
platform you can do either peaks your

00:09:14,530 --> 00:09:23,820
image based we handle dns dhcp tftp and

00:09:19,510 --> 00:09:26,740
so on through the proxies we have a very

00:09:23,820 --> 00:09:28,420
easy to use templating where if you're

00:09:26,740 --> 00:09:30,340
using puppet you already know the

00:09:28,420 --> 00:09:33,970
templating language how to create your

00:09:30,340 --> 00:09:35,140
own kick-starts and snippets and we

00:09:33,970 --> 00:09:38,560
basically support all of the major

00:09:35,140 --> 00:09:42,270
operating system so from forming you can

00:09:38,560 --> 00:09:45,760
install as easily Ubuntu or rail or

00:09:42,270 --> 00:09:47,680
Susie or solaris or whatever just same

00:09:45,760 --> 00:09:52,150
process just you get different operating

00:09:47,680 --> 00:09:53,770
system at the end there's also layer

00:09:52,150 --> 00:09:58,030
orchestration when you create for

00:09:53,770 --> 00:10:00,880
example a new machine a lot of things

00:09:58,030 --> 00:10:02,590
hat needs to happen so let's take a

00:10:00,880 --> 00:10:04,780
virtual machine created creation for

00:10:02,590 --> 00:10:06,250
example we can create a storage for the

00:10:04,780 --> 00:10:07,960
virtual machine but if there is a

00:10:06,250 --> 00:10:09,730
failure for some reason maybe it's torch

00:10:07,960 --> 00:10:11,170
not available then we know how to roll

00:10:09,730 --> 00:10:13,240
back so we don't leave like we don't

00:10:11,170 --> 00:10:15,670
allocate IP address for you create a DNS

00:10:13,240 --> 00:10:16,840
record and then OOP storage died so it's

00:10:15,670 --> 00:10:19,510
not sourcing all available so we

00:10:16,840 --> 00:10:21,910
actually have a way to rollback create

00:10:19,510 --> 00:10:24,280
the changes rollback and things like

00:10:21,910 --> 00:10:25,960
that we also know how to handle

00:10:24,280 --> 00:10:29,920
conflicts so if you have let's say a

00:10:25,960 --> 00:10:32,620
leftover reverse PTR DNS record will say

00:10:29,920 --> 00:10:34,420
oh there is a record here maybe it's not

00:10:32,620 --> 00:10:36,460
supposed to you make the decision

00:10:34,420 --> 00:10:39,130
whether you want to remove that leftover

00:10:36,460 --> 00:10:41,140
for maybe an older server that used it

00:10:39,130 --> 00:10:43,450
or something like that and it's pretty

00:10:41,140 --> 00:10:45,520
easy also to add your own actions to it

00:10:43,450 --> 00:10:48,970
I'll mention the plug-in architecture

00:10:45,520 --> 00:10:51,430
later down the road but we support

00:10:48,970 --> 00:10:53,140
basically we have hooks to everything so

00:10:51,430 --> 00:10:55,000
you could you know if you have a certain

00:10:53,140 --> 00:10:56,800
action you want to happen when you

00:10:55,000 --> 00:10:59,650
create a VM there's no problem you just

00:10:56,800 --> 00:11:04,510
go and update your cmdb or something

00:10:59,650 --> 00:11:07,630
else that might make sense for you in

00:11:04,510 --> 00:11:08,150
terms of users we support ldap active

00:11:07,630 --> 00:11:11,720
director

00:11:08,150 --> 00:11:14,150
authentication we have a really robust

00:11:11,720 --> 00:11:17,630
role-based access control that means you

00:11:14,150 --> 00:11:21,530
can really define every action in the UI

00:11:17,630 --> 00:11:24,740
and the API fair user or peer groups and

00:11:21,530 --> 00:11:26,660
assign the users groups so you can

00:11:24,740 --> 00:11:29,510
really say okay this user can only

00:11:26,660 --> 00:11:31,370
deploy systems here and that another

00:11:29,510 --> 00:11:33,800
user can you know maybe I only have

00:11:31,370 --> 00:11:35,510
viewing capability of that but can so

00:11:33,800 --> 00:11:37,010
let's say in one domain you can create

00:11:35,510 --> 00:11:39,010
systems on the other you can only view

00:11:37,010 --> 00:11:40,940
or whatever so something that fits

00:11:39,010 --> 00:11:43,910
potentially to a large organization

00:11:40,940 --> 00:11:46,580
where different people don't necessarily

00:11:43,910 --> 00:11:50,020
have permissions to everything or could

00:11:46,580 --> 00:11:52,220
be also for different tendency we have

00:11:50,020 --> 00:11:54,430
sent another slide but we have also

00:11:52,220 --> 00:11:57,230
support for multi-tenancy multi-location

00:11:54,430 --> 00:12:01,760
organizations or sub organizations and

00:11:57,230 --> 00:12:03,170
so on so basically just about that you

00:12:01,760 --> 00:12:05,270
could also restrict that the user only

00:12:03,170 --> 00:12:06,950
sees own systems so it's kind of a

00:12:05,270 --> 00:12:09,260
self-service portal where he can

00:12:06,950 --> 00:12:11,270
actually only create maybe only create

00:12:09,260 --> 00:12:14,840
systems in a lab or only create systems

00:12:11,270 --> 00:12:17,690
on his own machine I know for example a

00:12:14,840 --> 00:12:20,270
company that they have their developers

00:12:17,690 --> 00:12:21,650
actually developer workstations are

00:12:20,270 --> 00:12:23,420
actually connected to form and and they

00:12:21,650 --> 00:12:25,730
go to form and create VMs on their own

00:12:23,420 --> 00:12:28,280
instance so they can get the same setup

00:12:25,730 --> 00:12:32,420
so there's tons of different use cases

00:12:28,280 --> 00:12:36,140
with this kind of stuff it's pretty easy

00:12:32,420 --> 00:12:38,510
to install foreman that means we have an

00:12:36,140 --> 00:12:40,100
installer its puppet based so you can

00:12:38,510 --> 00:12:42,440
you know hack around and easily

00:12:40,100 --> 00:12:46,970
understand what's going on it actually

00:12:42,440 --> 00:12:49,910
we try to handle their all of the what

00:12:46,970 --> 00:12:52,250
you know normally would be required so

00:12:49,910 --> 00:12:55,370
obviously form in itself but we also can

00:12:52,250 --> 00:12:56,840
set up pop it for you we can you know

00:12:55,370 --> 00:12:58,250
puppet master if you don't know if

00:12:56,840 --> 00:13:00,380
you're just starting with puppet master

00:12:58,250 --> 00:13:01,970
and we'll set it up with passenger and

00:13:00,380 --> 00:13:03,920
all of the details you know all the

00:13:01,970 --> 00:13:06,580
compliments maybe someone some of you

00:13:03,920 --> 00:13:09,380
actually deployed puppet felt the pain

00:13:06,580 --> 00:13:11,930
we also try to do the complicated stuff

00:13:09,380 --> 00:13:14,060
like support git branching dynamic

00:13:11,930 --> 00:13:15,890
environments or so it's all options you

00:13:14,060 --> 00:13:18,279
get a basically you get a menu where you

00:13:15,890 --> 00:13:21,939
can say i want puppet master and

00:13:18,279 --> 00:13:27,339
I want dynamic environments so you can

00:13:21,939 --> 00:13:29,350
mix and match easily so this is a list

00:13:27,339 --> 00:13:31,509
of plugins that people from the

00:13:29,350 --> 00:13:33,490
community created the foreman is fully

00:13:31,509 --> 00:13:35,470
extendable that means everyone can

00:13:33,490 --> 00:13:38,110
create his own plug-in add another tab

00:13:35,470 --> 00:13:42,370
in the UI or how to add something that

00:13:38,110 --> 00:13:46,509
happens wherever when within the

00:13:42,370 --> 00:13:48,279
application a few examples like the you

00:13:46,509 --> 00:13:50,559
who bought notify that means you get an

00:13:48,279 --> 00:13:53,829
RC notification when something happens

00:13:50,559 --> 00:13:55,930
on Foreman maybe when an audit entry is

00:13:53,829 --> 00:13:58,559
created or something someone else

00:13:55,930 --> 00:14:02,019
created a discovery plugin which means

00:13:58,559 --> 00:14:04,420
unknown systems can automatically boot

00:14:02,019 --> 00:14:06,579
into discovery where they report the

00:14:04,420 --> 00:14:08,529
inventory to form and then form and can

00:14:06,579 --> 00:14:10,230
consume them so there's no manual

00:14:08,529 --> 00:14:12,910
process you don't have to type in

00:14:10,230 --> 00:14:14,949
specifically for Matt just for bama bare

00:14:12,910 --> 00:14:17,379
metal but you don't have to type in mac

00:14:14,949 --> 00:14:21,069
addresses and down the road we plan to

00:14:17,379 --> 00:14:23,050
do rate configuration and firmware

00:14:21,069 --> 00:14:25,660
upgrades whatever all of that kind of

00:14:23,050 --> 00:14:27,430
stuff could be also done so the what I

00:14:25,660 --> 00:14:30,069
wanted to show is that this the plugins

00:14:27,430 --> 00:14:32,110
infrastructure can really be for really

00:14:30,069 --> 00:14:35,589
minor changes but then they could also

00:14:32,110 --> 00:14:37,509
be huge features and you know this

00:14:35,589 --> 00:14:41,139
puppet DB plug-in that the guys from

00:14:37,509 --> 00:14:42,850
certain roads or someone else that you

00:14:41,139 --> 00:14:45,610
know if there's pretty much a lot of

00:14:42,850 --> 00:14:48,180
plugins you know someone that's another

00:14:45,610 --> 00:14:51,970
column in the list of systems and so on

00:14:48,180 --> 00:14:57,459
so really extensible Foreman has a

00:14:51,970 --> 00:14:59,019
complete rest api meaning that you can

00:14:57,459 --> 00:15:03,000
actually do everything you can do in the

00:14:59,019 --> 00:15:05,679
UI you can do from the API pretty pretty

00:15:03,000 --> 00:15:08,410
straightforward we have an automatically

00:15:05,679 --> 00:15:10,509
generated API documentation so they're

00:15:08,410 --> 00:15:13,149
always up to date we actually support

00:15:10,509 --> 00:15:14,860
multiple API versions so we can ensure

00:15:13,149 --> 00:15:17,920
that if you develop something over the

00:15:14,860 --> 00:15:20,319
API we won't break it next version so

00:15:17,920 --> 00:15:23,679
we'll have official apia versions and

00:15:20,319 --> 00:15:26,079
their release cycle and this way you we

00:15:23,679 --> 00:15:29,829
can know that you know we're not

00:15:26,079 --> 00:15:31,170
breaking people's stuff something that

00:15:29,829 --> 00:15:33,400
I'll show

00:15:31,170 --> 00:15:35,560
hopefully I think well I probably will

00:15:33,400 --> 00:15:38,410
have enough time and the demo is the

00:15:35,560 --> 00:15:41,530
search functionality where Foreman is

00:15:38,410 --> 00:15:43,510
really search driven that means you

00:15:41,530 --> 00:15:45,190
could really search for every object and

00:15:43,510 --> 00:15:48,460
everything in the system pretty fast and

00:15:45,190 --> 00:15:50,260
you can consume that I'll show example

00:15:48,460 --> 00:15:51,850
but you can really consume that and

00:15:50,260 --> 00:15:53,860
that's something that all the people are

00:15:51,850 --> 00:15:58,870
doing is an alternative to store configs

00:15:53,860 --> 00:16:00,310
or Papa TB where within the API or in

00:15:58,870 --> 00:16:03,850
your puppet manifest you can just say

00:16:00,310 --> 00:16:06,280
give me all of the systems that belong

00:16:03,850 --> 00:16:08,950
to this group and report it successfully

00:16:06,280 --> 00:16:10,680
in the last hour and I don't know

00:16:08,950 --> 00:16:13,060
whatever conditions that you might have

00:16:10,680 --> 00:16:14,830
and then you can use them in your puppet

00:16:13,060 --> 00:16:18,640
code maybe for cross systems

00:16:14,830 --> 00:16:21,040
relationships or things like that there

00:16:18,640 --> 00:16:23,500
is also a CLI that use the API and there

00:16:21,040 --> 00:16:25,060
is a mobile app called remote admin done

00:16:23,500 --> 00:16:29,700
by someone from the community that runs

00:16:25,060 --> 00:16:29,700
on iPhones iPads and Android devices

00:16:29,910 --> 00:16:36,250
right besides that we have organizations

00:16:33,610 --> 00:16:40,090
and location support that's pretty

00:16:36,250 --> 00:16:42,210
useful feature when you have large you

00:16:40,090 --> 00:16:45,100
know multiple data centers or maybe

00:16:42,210 --> 00:16:47,950
multiple organizations within your

00:16:45,100 --> 00:16:51,460
organization like sales development

00:16:47,950 --> 00:16:54,730
engineering whatever or maybe you have a

00:16:51,460 --> 00:16:57,280
mix of them both let's say engineering

00:16:54,730 --> 00:16:59,820
and in five different sites and you want

00:16:57,280 --> 00:17:02,470
to restrict resources based on that so

00:16:59,820 --> 00:17:05,290
for example I want to allow my

00:17:02,470 --> 00:17:07,630
engineering to create systems and data

00:17:05,290 --> 00:17:09,970
center a datacenter p data center c and

00:17:07,630 --> 00:17:12,490
only that and i want to show them only

00:17:09,970 --> 00:17:14,319
the relevant options and the rest is

00:17:12,490 --> 00:17:18,850
restricted or they don't see systems or

00:17:14,319 --> 00:17:21,730
or things like that we also collect

00:17:18,850 --> 00:17:25,360
trending over time that means if you

00:17:21,730 --> 00:17:27,819
want to know for example if you're maybe

00:17:25,360 --> 00:17:29,470
migrating from one operating system to

00:17:27,819 --> 00:17:31,810
another and you want to see the progress

00:17:29,470 --> 00:17:33,900
of the change of operating system here

00:17:31,810 --> 00:17:36,760
for those who are you using their eyes

00:17:33,900 --> 00:17:39,130
so if you want to track for example over

00:17:36,760 --> 00:17:40,660
time a change in something maybe you're

00:17:39,130 --> 00:17:41,980
upgrading from one puppet version to

00:17:40,660 --> 00:17:44,250
another or maybe you're changing from

00:17:41,980 --> 00:17:46,020
one OS to another or whatever it is you

00:17:44,250 --> 00:17:48,210
see over time what's the trend looks

00:17:46,020 --> 00:17:49,800
like how many machines you have on

00:17:48,210 --> 00:17:52,470
VMware how many machines you have on

00:17:49,800 --> 00:17:54,270
that basically you can either do you can

00:17:52,470 --> 00:17:56,280
either do it based on facts or you can

00:17:54,270 --> 00:18:02,340
do it on based on stuff the former knows

00:17:56,280 --> 00:18:06,330
about very easily a few of Foreman users

00:18:02,340 --> 00:18:08,820
so we have sharon's basics ABC and so on

00:18:06,330 --> 00:18:10,290
I'm you know the challenge of open

00:18:08,820 --> 00:18:14,700
source is really don't know who is using

00:18:10,290 --> 00:18:16,320
it unless there is a complaint so every

00:18:14,700 --> 00:18:19,050
week I cannot hear and I think also

00:18:16,320 --> 00:18:22,770
happened in this conference it happened

00:18:19,050 --> 00:18:24,960
that I learned about 10 different users

00:18:22,770 --> 00:18:27,660
that I had no idea about so it's kind of

00:18:24,960 --> 00:18:30,180
awesome that you know people using it

00:18:27,660 --> 00:18:33,630
happy with it there's large

00:18:30,180 --> 00:18:35,850
organizations small organizations kind

00:18:33,630 --> 00:18:39,330
of apparently it fits them all so I'm

00:18:35,850 --> 00:18:40,620
very pleased about that so if you know

00:18:39,330 --> 00:18:44,130
you want to add yourself to the list

00:18:40,620 --> 00:18:47,400
that we in the wiki Foreman has who uses

00:18:44,130 --> 00:18:49,680
foreman page entry in terms of community

00:18:47,400 --> 00:18:52,050
so first of all the main entry point is

00:18:49,680 --> 00:18:55,170
the foreman talorg you can get all of

00:18:52,050 --> 00:18:57,810
the information there we have we just

00:18:55,170 --> 00:19:00,510
cross the hundred contributors which is

00:18:57,810 --> 00:19:03,630
awesome really if you haven't any one of

00:19:00,510 --> 00:19:06,870
you contributed really thank you we hang

00:19:03,630 --> 00:19:09,960
a lot on ioc so you can find us on d

00:19:06,870 --> 00:19:13,620
foreman or deform and dev channels we

00:19:09,960 --> 00:19:16,860
have a Google+ community page and also

00:19:13,620 --> 00:19:18,870
our mailing lists Devon users mailing

00:19:16,860 --> 00:19:22,470
list on google groups and there's a

00:19:18,870 --> 00:19:24,150
github organization now I think I'll do

00:19:22,470 --> 00:19:29,900
a demo but before I start doing them or

00:19:24,150 --> 00:19:29,900
any questions all right demo days

00:19:32,540 --> 00:19:42,420
okay so somehow it didn't survive the

00:19:38,610 --> 00:19:44,850
screen resize ok so in here you know

00:19:42,420 --> 00:19:48,450
what let's do a real demo I hope VPN

00:19:44,850 --> 00:19:53,340
will not fail me I'll try to provision

00:19:48,450 --> 00:19:57,840
the system just that you guys but VPN

00:19:53,340 --> 00:20:02,670
fail me hold on let me try to reconnect

00:19:57,840 --> 00:20:13,350
to the VPN sorry demos are always bound

00:20:02,670 --> 00:20:15,540
to two failures on unreal systems ok

00:20:13,350 --> 00:20:17,760
before we go to the demo I'll just

00:20:15,540 --> 00:20:19,740
browse a bit I have a snapshot of the

00:20:17,760 --> 00:20:23,220
data from a few hours ago from my system

00:20:19,740 --> 00:20:25,890
so just go over a little bit over the

00:20:23,220 --> 00:20:27,630
tabs in here this is the dashboard page

00:20:25,890 --> 00:20:30,300
where you can see what's going on

00:20:27,630 --> 00:20:33,000
obviously most of the systems i have are

00:20:30,300 --> 00:20:34,500
out of sync because i think that a

00:20:33,000 --> 00:20:36,810
couple of hours ago so they all seem

00:20:34,500 --> 00:20:40,400
like they're not responding but it gives

00:20:36,810 --> 00:20:42,540
you a very quick Lucan understanding of

00:20:40,400 --> 00:20:44,520
what's your state of our infrastructure

00:20:42,540 --> 00:20:48,990
did puppet run did it change anything

00:20:44,520 --> 00:20:51,000
was anything broken or everything's ok

00:20:48,990 --> 00:20:54,000
clearly gives you a very quick overview

00:20:51,000 --> 00:20:58,020
instead of passing logs or things like

00:20:54,000 --> 00:21:00,420
that then you can always also search

00:20:58,020 --> 00:21:03,630
like you all see only want to care about

00:21:00,420 --> 00:21:05,910
the production environment maybe all the

00:21:03,630 --> 00:21:07,560
rest you're not that interested so you

00:21:05,910 --> 00:21:09,750
could just you know basically filter it

00:21:07,560 --> 00:21:12,510
down pretty much looks the same in this

00:21:09,750 --> 00:21:15,510
craft but you can easily search and

00:21:12,510 --> 00:21:17,310
create bookmarks here like what

00:21:15,510 --> 00:21:20,070
apparently I had the production bookmark

00:21:17,310 --> 00:21:21,720
already like prettifying searches that

00:21:20,070 --> 00:21:26,460
you can you know if you care about

00:21:21,720 --> 00:21:29,030
certain views you can either use that in

00:21:26,460 --> 00:21:31,440
the API or here to get that information

00:21:29,030 --> 00:21:33,540
the other tab here is would be the host

00:21:31,440 --> 00:21:38,070
tab this is where we actually see the

00:21:33,540 --> 00:21:39,120
systems may be in again search is

00:21:38,070 --> 00:21:41,370
probably the best thing if you're

00:21:39,120 --> 00:21:44,160
looking interested in some things and

00:21:41,370 --> 00:21:46,800
there's an autocomplete ER which tries

00:21:44,160 --> 00:21:48,780
to help you to realize what you can

00:21:46,800 --> 00:21:53,750
search maybe on a search based on domain

00:21:48,780 --> 00:21:58,560
or whatever it is groups of systems and

00:21:53,750 --> 00:22:03,690
so on like all of my puppet masters have

00:21:58,560 --> 00:22:10,380
none but whatever it is so all of my web

00:22:03,690 --> 00:22:13,530
servers got one okay and you could see

00:22:10,380 --> 00:22:16,230
information probably ok since i don't

00:22:13,530 --> 00:22:18,360
have connectivity to my virtualization I

00:22:16,230 --> 00:22:21,390
don't know why my phone is kind of dying

00:22:18,360 --> 00:22:23,340
on me I I don't have connectivity here

00:22:21,390 --> 00:22:24,990
to my virtualization so it doesn't

00:22:23,340 --> 00:22:26,460
really know what the power

00:22:24,990 --> 00:22:30,630
state so that's why it's kind of a

00:22:26,460 --> 00:22:33,570
yellowish orange but we can still see

00:22:30,630 --> 00:22:36,030
like what puppet some inventor some

00:22:33,570 --> 00:22:38,970
basic inventory but the system we can

00:22:36,030 --> 00:22:43,670
see you know this is like a graph of

00:22:38,970 --> 00:22:46,920
what puppet did how much time and so on

00:22:43,670 --> 00:22:48,750
we you know can see the reports from

00:22:46,920 --> 00:22:52,440
this is a new system so it doesn't have

00:22:48,750 --> 00:22:55,890
so many but here's an report for what

00:22:52,440 --> 00:23:01,350
Papa did this is a long list but there

00:22:55,890 --> 00:23:05,550
was one error here you could see and we

00:23:01,350 --> 00:23:08,820
can probably just get that error all the

00:23:05,550 --> 00:23:14,040
same goes for we can see the inventory

00:23:08,820 --> 00:23:15,990
of this system let's say processor count

00:23:14,040 --> 00:23:20,190
I don't know and then we could see some

00:23:15,990 --> 00:23:22,559
graphs of other facts how many

00:23:20,190 --> 00:23:24,150
processors I have I don't know and you

00:23:22,559 --> 00:23:28,350
could be you can use your own customized

00:23:24,150 --> 00:23:30,360
facts to generate whatever makes sense

00:23:28,350 --> 00:23:33,000
like what is the puppet client version

00:23:30,360 --> 00:23:34,740
or your application you know probably if

00:23:33,000 --> 00:23:37,559
you know if you know puppet you you know

00:23:34,740 --> 00:23:40,770
how yet you can easily extend it and put

00:23:37,559 --> 00:23:42,809
your own code there especially when the

00:23:40,770 --> 00:23:46,920
17 release that it makes it even easier

00:23:42,809 --> 00:23:50,820
to add your own custom facts we also

00:23:46,920 --> 00:23:53,640
have auditing so we can see here well

00:23:50,820 --> 00:23:55,920
what happens let's say I take the system

00:23:53,640 --> 00:23:57,929
I could see that the system was

00:23:55,920 --> 00:23:59,850
installed I could see the history where

00:23:57,929 --> 00:24:04,110
I created at about three hours ago and

00:23:59,850 --> 00:24:07,730
it was successfully created that means

00:24:04,110 --> 00:24:10,740
and we could track here objects really

00:24:07,730 --> 00:24:13,920
all the way to the when the when formal

00:24:10,740 --> 00:24:16,559
was installed so just probably you know

00:24:13,920 --> 00:24:20,880
history here and you can search through

00:24:16,559 --> 00:24:24,570
that history usually unless you unless

00:24:20,880 --> 00:24:27,380
you deleted it doesn't you know it's

00:24:24,570 --> 00:24:27,380
stays forever

00:24:28,350 --> 00:24:34,060
there's also some sugar synthetic nice

00:24:31,660 --> 00:24:36,160
graph like show you the various always

00:24:34,060 --> 00:24:40,090
distribution and some graphs that we

00:24:36,160 --> 00:24:42,400
fought our interesting like you could

00:24:40,090 --> 00:24:44,440
click on it and see and you want to see

00:24:42,400 --> 00:24:46,000
the actual system so you can see that

00:24:44,440 --> 00:24:48,600
they actually redirect with the search

00:24:46,000 --> 00:24:52,090
pre create the search for you and

00:24:48,600 --> 00:24:54,370
basically shows you the system this is

00:24:52,090 --> 00:24:57,520
and the same goes for trends where you

00:24:54,370 --> 00:25:00,670
could just look over time what are the

00:24:57,520 --> 00:25:03,310
trends are given in here you can see

00:25:00,670 --> 00:25:06,160
that my virtualization is mostly live

00:25:03,310 --> 00:25:11,830
earth but I have OpenStack and some

00:25:06,160 --> 00:25:14,140
other systems as well we have plenty of

00:25:11,830 --> 00:25:17,530
screens actually for various things like

00:25:14,140 --> 00:25:20,200
configuring your puppet classes your

00:25:17,530 --> 00:25:24,360
environments your proxies and the same

00:25:20,200 --> 00:25:26,980
thing goes for the provisioning part

00:25:24,360 --> 00:25:30,370
where we provision for example whether

00:25:26,980 --> 00:25:33,310
it's easy to live very OpenStack all of

00:25:30,370 --> 00:25:38,650
that this is the interface to when you

00:25:33,310 --> 00:25:41,020
create a new provider let's say I could

00:25:38,650 --> 00:25:43,300
choose which kind of interface I want to

00:25:41,020 --> 00:25:46,570
use and let's say I chose VMware and I

00:25:43,300 --> 00:25:49,750
put in the vcenter and data center

00:25:46,570 --> 00:25:51,430
information if it's in our rec space is

00:25:49,750 --> 00:25:53,970
something different and so on so it

00:25:51,430 --> 00:25:58,140
really customized for each and every

00:25:53,970 --> 00:26:00,970
provider but from the look and feel it's

00:25:58,140 --> 00:26:04,570
afterwards after you configure that it's

00:26:00,970 --> 00:26:06,820
pretty much the same like a system on

00:26:04,570 --> 00:26:08,530
you can see the system than running on

00:26:06,820 --> 00:26:10,510
amazon and the system running on your

00:26:08,530 --> 00:26:12,220
data center more or less the same tool

00:26:10,510 --> 00:26:14,520
you see their status more less the same

00:26:12,220 --> 00:26:20,770
thing you can create them destroy them

00:26:14,520 --> 00:26:22,960
pretty much in the same manner i can go

00:26:20,770 --> 00:26:25,120
for for a long time showing you all the

00:26:22,960 --> 00:26:27,120
screens but any any question anything

00:26:25,120 --> 00:26:32,400
someone of you want to ask something

00:26:27,120 --> 00:26:37,290
between until i get my VPN running again

00:26:32,400 --> 00:26:37,290
no okay so yeah go ahead

00:26:37,350 --> 00:26:49,320
oh okay you talked about all the

00:26:47,130 --> 00:26:53,520
features and the extensibility that

00:26:49,320 --> 00:26:56,880
performing has and what does a minimal

00:26:53,520 --> 00:27:01,919
system of form and look like just for

00:26:56,880 --> 00:27:05,580
provisioning and dns dhcp and perhaps

00:27:01,919 --> 00:27:08,370
some puppet integration what do you mean

00:27:05,580 --> 00:27:10,650
by what is it viewing hardware or what

00:27:08,370 --> 00:27:13,080
your requirements or what does what what

00:27:10,650 --> 00:27:17,570
and what would you know how complicated

00:27:13,080 --> 00:27:21,000
this is to get a minimal form and okay

00:27:17,570 --> 00:27:23,340
so i'll now that i have network this is

00:27:21,000 --> 00:27:27,090
forming website there are a couple of

00:27:23,340 --> 00:27:29,250
screenshots a screencast here quick

00:27:27,090 --> 00:27:32,190
start installation to get puppet

00:27:29,250 --> 00:27:35,220
basically and which is less than 10

00:27:32,190 --> 00:27:37,380
minutes and talk and another demo

00:27:35,220 --> 00:27:40,890
another time more or less 10 minutes

00:27:37,380 --> 00:27:43,710
just for the provisioning part so if you

00:27:40,890 --> 00:27:46,409
use our installer i'm guessing that

00:27:43,710 --> 00:27:50,909
we've in less than an hour you can get

00:27:46,409 --> 00:27:53,250
it to work you know the whole thing in

00:27:50,909 --> 00:27:56,970
the year takes 10 minutes to explain and

00:27:53,250 --> 00:27:59,880
to do so the installer you know assuming

00:27:56,970 --> 00:28:03,900
given you have an operating system like

00:27:59,880 --> 00:28:06,030
a cent OS or whatever running debian you

00:28:03,900 --> 00:28:09,150
run the installer it takes a minute or

00:28:06,030 --> 00:28:11,100
two to install all of the packages and

00:28:09,150 --> 00:28:13,080
then it takes you know within this video

00:28:11,100 --> 00:28:16,200
it takes 10 minutes to go over explain

00:28:13,080 --> 00:28:19,860
everything and also to you know

00:28:16,200 --> 00:28:21,150
configure so technically let's say if

00:28:19,860 --> 00:28:27,630
you don't know anything about it maybe

00:28:21,150 --> 00:28:29,039
an hour hopefully so roughly I you know

00:28:27,630 --> 00:28:33,900
the setup or Foreman is probably the

00:28:29,039 --> 00:28:36,360
more difficult than using Foreman but we

00:28:33,900 --> 00:28:38,280
try all the time to improve so I I can't

00:28:36,360 --> 00:28:42,690
give you an exact number like it's not a

00:28:38,280 --> 00:28:45,210
week right it's an hour or two that

00:28:42,690 --> 00:28:47,790
answering your question or okay okay

00:28:45,210 --> 00:28:49,840
cool so okay so I got network again so

00:28:47,790 --> 00:28:53,380
I'll try

00:28:49,840 --> 00:28:59,590
doing a demo now of provisioning a

00:28:53,380 --> 00:29:01,600
system right so this is my productive

00:28:59,590 --> 00:29:04,750
foreman server running back home in

00:29:01,600 --> 00:29:11,380
Israel in Israel this is the new host

00:29:04,750 --> 00:29:13,779
form or just puppet camp de I can change

00:29:11,380 --> 00:29:16,690
choose like the organization or location

00:29:13,779 --> 00:29:18,010
because i'm an admin user here so it's

00:29:16,690 --> 00:29:19,809
like route i have access to everything

00:29:18,010 --> 00:29:22,299
so i could choose where I'm deploying

00:29:19,809 --> 00:29:25,090
and then based on that it can tell me

00:29:22,299 --> 00:29:27,130
what can I where I can deploy this case

00:29:25,090 --> 00:29:30,340
I have only lived with over it an ec2

00:29:27,130 --> 00:29:32,710
configured I'll just choose libvirt just

00:29:30,340 --> 00:29:35,260
for fun and let's say I want to deploy a

00:29:32,710 --> 00:29:37,120
web server web server by definition

00:29:35,260 --> 00:29:40,149
implies a lot of things that I've

00:29:37,120 --> 00:29:43,360
already pre-selected for example the

00:29:40,149 --> 00:29:45,730
puppet classes apache and ganglia for

00:29:43,360 --> 00:29:49,299
monitoring whatever whatever you choose

00:29:45,730 --> 00:29:53,919
or make I could you know add stuff like

00:29:49,299 --> 00:29:56,500
i want to add ssl maybe and you could

00:29:53,919 --> 00:30:01,110
see already that it automatically

00:29:56,500 --> 00:30:03,820
assigned IP address for me based on the

00:30:01,110 --> 00:30:05,740
selection of location and a group it

00:30:03,820 --> 00:30:07,510
knew how to find the default domain that

00:30:05,740 --> 00:30:09,610
i want to deploy in and the default

00:30:07,510 --> 00:30:12,690
network that i want to deploy in this

00:30:09,610 --> 00:30:15,610
case this domain doesn't have more than

00:30:12,690 --> 00:30:18,039
one network but we definitely support

00:30:15,610 --> 00:30:20,799
multiple networks multiple VLANs all of

00:30:18,039 --> 00:30:23,320
that stuff and we also suggest IP

00:30:20,799 --> 00:30:26,890
address automatically by reading your

00:30:23,320 --> 00:30:28,690
DHCP configuration and dns and and

00:30:26,890 --> 00:30:31,299
checking weather systems are actually

00:30:28,690 --> 00:30:32,590
alive and using those IP addresses so we

00:30:31,299 --> 00:30:37,000
actually give you an IP address which is

00:30:32,590 --> 00:30:38,799
not used automatically so it just

00:30:37,000 --> 00:30:40,929
happens while i was moving between these

00:30:38,799 --> 00:30:44,500
forms it went in the background figured

00:30:40,929 --> 00:30:47,289
it out now here we can choose you know

00:30:44,500 --> 00:30:49,480
various operating system we want to run

00:30:47,289 --> 00:30:51,669
on we can choose the OP architecture

00:30:49,480 --> 00:30:53,740
operating system I don't know if you

00:30:51,669 --> 00:30:56,380
have a preference I just take the latest

00:30:53,740 --> 00:30:58,809
video or 18 for example I can enjoy

00:30:56,380 --> 00:31:02,080
choose where I'm installing from what is

00:30:58,809 --> 00:31:03,380
the disk layout you know it's up to you

00:31:02,080 --> 00:31:05,150
to the final that content

00:31:03,380 --> 00:31:07,550
there is a default set of content but

00:31:05,150 --> 00:31:09,380
you can overwrite it you know maybe you

00:31:07,550 --> 00:31:11,720
have a specific specific Hardware you

00:31:09,380 --> 00:31:13,010
want to have a special rate for Hardware

00:31:11,720 --> 00:31:17,090
a different harder you want something

00:31:13,010 --> 00:31:19,670
else and so on you can even put for a

00:31:17,090 --> 00:31:21,650
specific server specific this clear you

00:31:19,670 --> 00:31:25,220
know this specific Hager has a special

00:31:21,650 --> 00:31:27,530
set up you can put in here some ARB

00:31:25,220 --> 00:31:30,980
template that eventually gets triggered

00:31:27,530 --> 00:31:34,790
into this cloud because I've chosen a vm

00:31:30,980 --> 00:31:38,510
i can simply choose here you know basic

00:31:34,790 --> 00:31:40,640
storage and network preferences and also

00:31:38,510 --> 00:31:43,280
i'll leave it to the end but this all

00:31:40,640 --> 00:31:47,360
they're all Parma ties classes and stuff

00:31:43,280 --> 00:31:50,810
happening here anyway I'm i clicked on

00:31:47,360 --> 00:31:52,850
submit and we could see here there's a

00:31:50,810 --> 00:31:54,110
progress bar probably I don't know if

00:31:52,850 --> 00:31:56,600
you could you could have follow that

00:31:54,110 --> 00:31:59,360
went pretty quickly it created all of

00:31:56,600 --> 00:32:02,630
the dns entries and and all of that was

00:31:59,360 --> 00:32:05,990
that kind of stuff and we have an

00:32:02,630 --> 00:32:09,140
integration in this case i think this is

00:32:05,990 --> 00:32:10,700
VNC so you can actually see the console

00:32:09,140 --> 00:32:14,120
within the browser without installing

00:32:10,700 --> 00:32:16,400
anything so this is a javascript-based

00:32:14,120 --> 00:32:20,300
VNC there is the same thing if we're

00:32:16,400 --> 00:32:22,640
using SPICE i don't know if you know

00:32:20,300 --> 00:32:26,540
spice with an alternative to VNC so we

00:32:22,640 --> 00:32:30,080
also support in the same fashion spice

00:32:26,540 --> 00:32:33,890
as well and basically any air ok it's a

00:32:30,080 --> 00:32:35,540
bit bigger than my resolution but you

00:32:33,890 --> 00:32:38,660
know system is now being created and

00:32:35,540 --> 00:32:42,980
there is an handoff where to Papa or pop

00:32:38,660 --> 00:32:44,810
it will start running and Foreman will

00:32:42,980 --> 00:32:46,700
handle all of the certificates and all

00:32:44,810 --> 00:32:50,150
of that stuff that puppet normally you

00:32:46,700 --> 00:32:52,820
need to do manually and afterwards the

00:32:50,150 --> 00:32:54,710
system is ready so Franz puppet assuming

00:32:52,820 --> 00:32:56,330
your manifest that's what it's supposed

00:32:54,710 --> 00:33:02,930
to be doing you don't need to do

00:32:56,330 --> 00:33:06,830
anything else system is running so yeah

00:33:02,930 --> 00:33:11,029
we can install in exactly the same way

00:33:06,830 --> 00:33:20,210
let's try oops let's try to do another

00:33:11,029 --> 00:33:21,980
demo maybe this time on sorry I have

00:33:20,210 --> 00:33:25,669
some apparently I have some garbage in

00:33:21,980 --> 00:33:27,559
my database great so that's the problem

00:33:25,669 --> 00:33:30,529
when you have multiple people playing

00:33:27,559 --> 00:33:33,769
with your database my development

00:33:30,529 --> 00:33:38,179
database okay anyway i'll create another

00:33:33,769 --> 00:33:41,539
system demo to this time I'll do it an

00:33:38,179 --> 00:33:44,419
openstack I guess how many of you guys

00:33:41,539 --> 00:33:45,919
have ever used OpenStack great so no one

00:33:44,419 --> 00:33:48,169
here knows how to use open sac which is

00:33:45,919 --> 00:33:49,870
a great example for how you can deploy

00:33:48,169 --> 00:33:58,690
something you don't know anything about

00:33:49,870 --> 00:33:58,690
so again I'll choose my web server and

00:33:59,019 --> 00:34:05,000
unless someone really broke my system Oh

00:34:01,639 --> 00:34:06,740
No okay so more or less the same thing

00:34:05,000 --> 00:34:08,690
in here you can see that because it's a

00:34:06,740 --> 00:34:11,750
cloud is no IP addresses right the

00:34:08,690 --> 00:34:15,409
network tab really there's no subnet

00:34:11,750 --> 00:34:17,720
selection or anything like that and the

00:34:15,409 --> 00:34:20,810
virtual machine here Tan has a different

00:34:17,720 --> 00:34:23,330
content like like I need to select maybe

00:34:20,810 --> 00:34:25,010
an image because only works on image and

00:34:23,330 --> 00:34:26,089
I need to assign floating IPS you need

00:34:25,010 --> 00:34:33,560
to know a little bit about the

00:34:26,089 --> 00:34:36,470
architecture just a bit but I think more

00:34:33,560 --> 00:34:41,720
or less this is pretty straightforward I

00:34:36,470 --> 00:34:44,990
click on submit and pretty much the same

00:34:41,720 --> 00:34:47,119
progress bar just different actions now

00:34:44,990 --> 00:34:51,820
it won't take a little bit more because

00:34:47,119 --> 00:34:56,780
more time because the vm actually is

00:34:51,820 --> 00:34:59,180
getting created and we wait for the vm

00:34:56,780 --> 00:35:01,460
to actually to respond because if it's a

00:34:59,180 --> 00:35:03,200
cloud instance we actually the ssh into

00:35:01,460 --> 00:35:05,440
the system afterwards so there is a

00:35:03,200 --> 00:35:07,820
whole key ssh key stuff that happens

00:35:05,440 --> 00:35:11,060
multiple cloud provider like easy to in

00:35:07,820 --> 00:35:13,910
an OpenStack has a way to inject an ssh

00:35:11,060 --> 00:35:15,710
public key into the running instance and

00:35:13,910 --> 00:35:18,200
that happens just for so you could

00:35:15,710 --> 00:35:19,650
provision it so we have different ways

00:35:18,200 --> 00:35:25,140
of how to inject data

00:35:19,650 --> 00:35:27,150
into the instance and in this case yeah

00:35:25,140 --> 00:35:29,310
probably takes a minute for the

00:35:27,150 --> 00:35:33,930
operating system actually to response to

00:35:29,310 --> 00:35:37,260
IP and ssh whereas sh can be yeah here

00:35:33,930 --> 00:35:38,820
it is so created certificate now

00:35:37,260 --> 00:35:43,820
actually running the state script that

00:35:38,820 --> 00:35:43,820
installs puppet and basically that's it

00:35:43,850 --> 00:35:48,750
how does the content basically gets

00:35:46,680 --> 00:35:52,910
pulled pushed in this where we have

00:35:48,750 --> 00:35:55,440
provisioning templates the templates are

00:35:52,910 --> 00:35:58,020
again ERV beso very similar to the

00:35:55,440 --> 00:36:02,720
standard puppet templates and maybe I

00:35:58,020 --> 00:36:07,500
guess let's take a proceed for example

00:36:02,720 --> 00:36:11,150
this is probably should you use my local

00:36:07,500 --> 00:36:15,600
version instead of VPN it's not too slow

00:36:11,150 --> 00:36:18,390
yeah so I'll switch to my let me switch

00:36:15,600 --> 00:36:22,650
back to my local system so it's a bit

00:36:18,390 --> 00:36:26,040
faster so take the proceed templates for

00:36:22,650 --> 00:36:30,900
example and here we can see we got an

00:36:26,040 --> 00:36:34,200
editor this is I guess I hope you can

00:36:30,900 --> 00:36:38,310
see this size is this readable I guess

00:36:34,200 --> 00:36:41,130
so so for example you could you have

00:36:38,310 --> 00:36:43,260
this rackets where you could replace

00:36:41,130 --> 00:36:45,090
variables and that will generate your

00:36:43,260 --> 00:36:47,850
actual kick start or proceed or whatever

00:36:45,090 --> 00:36:51,780
text that you want to generate could be

00:36:47,850 --> 00:36:57,120
a ssh script that does something and so

00:36:51,780 --> 00:37:01,920
on and provisioning templates have a

00:36:57,120 --> 00:37:04,050
history so maybe not this one we choose

00:37:01,920 --> 00:37:07,530
one with some history I never I guess we

00:37:04,050 --> 00:37:09,240
never changed that default one but here

00:37:07,530 --> 00:37:11,790
you could see that someone changed

00:37:09,240 --> 00:37:15,600
something and you can track the change

00:37:11,790 --> 00:37:18,990
over time here's a diff for someone

00:37:15,600 --> 00:37:20,460
change added my commented out the no

00:37:18,990 --> 00:37:22,350
base from the package section I don't

00:37:20,460 --> 00:37:24,210
know but basically we keep track of

00:37:22,350 --> 00:37:25,830
whatever happens to the templates

00:37:24,210 --> 00:37:27,510
obviously there are full permission who

00:37:25,830 --> 00:37:30,300
is allowed to edit those templates and

00:37:27,510 --> 00:37:32,260
you know all of that stuff we could also

00:37:30,300 --> 00:37:35,380
so CA templates with

00:37:32,260 --> 00:37:36,820
the operating system obviously so you

00:37:35,380 --> 00:37:39,640
have to say okay this template actually

00:37:36,820 --> 00:37:41,800
work on these operating system obviously

00:37:39,640 --> 00:37:43,860
a kickstart doesn't work on a bunt or

00:37:41,800 --> 00:37:47,620
write or maybe it does but not that well

00:37:43,860 --> 00:37:49,210
but anyway you can assign it and then

00:37:47,620 --> 00:37:51,910
you can even restrict it further saying

00:37:49,210 --> 00:37:57,490
okay this template actually is good for

00:37:51,910 --> 00:38:00,790
only my web servers or whatever my web

00:37:57,490 --> 00:38:02,980
servers in production so you can kind of

00:38:00,790 --> 00:38:04,870
restrict down the the possible

00:38:02,980 --> 00:38:08,770
combinations who gets the templates in

00:38:04,870 --> 00:38:12,160
which scenario and so on and we have all

00:38:08,770 --> 00:38:16,390
kinds of templates so it's not just a

00:38:12,160 --> 00:38:20,830
kickstart you can really do for example

00:38:16,390 --> 00:38:23,440
the post section this is the script

00:38:20,830 --> 00:38:28,390
which is get gets run on the for example

00:38:23,440 --> 00:38:32,850
the OpenStack instance or or we have the

00:38:28,390 --> 00:38:39,040
actual for those of you who do use pixie

00:38:32,850 --> 00:38:43,900
search pc linux for example this is

00:38:39,040 --> 00:38:47,110
actually generating the default THC

00:38:43,900 --> 00:38:49,510
content like menus and you can do

00:38:47,110 --> 00:38:51,670
whatever you want here like the whatever

00:38:49,510 --> 00:38:53,890
do your tftp server is actually serving

00:38:51,670 --> 00:38:56,350
so you can create custom menus you can

00:38:53,890 --> 00:39:00,820
update all of your Pixies I don't know

00:38:56,350 --> 00:39:02,440
whatever you could use GPC or I pxe I

00:39:00,820 --> 00:39:06,220
don't know anyone here knows that

00:39:02,440 --> 00:39:10,630
technology but it's pretty awesome to be

00:39:06,220 --> 00:39:12,430
able to consume over HTTP for example

00:39:10,630 --> 00:39:16,240
instead of tftp which is really slow and

00:39:12,430 --> 00:39:21,010
you can do a lot of dynamic stuff with

00:39:16,240 --> 00:39:23,040
that again depends on your use case so

00:39:21,010 --> 00:39:25,390
everything that Foreman basically

00:39:23,040 --> 00:39:27,040
deliver in terms of content it's very

00:39:25,390 --> 00:39:30,090
easy to consume and edit here create

00:39:27,040 --> 00:39:33,000
your own change and so on really so and

00:39:30,090 --> 00:39:35,860
just today someone mentioned that he

00:39:33,000 --> 00:39:40,780
imported is old cobbler snippets very

00:39:35,860 --> 00:39:44,680
easily to this kind of equivalent setup

00:39:40,780 --> 00:39:47,410
when we talk about puppet classes how

00:39:44,680 --> 00:39:51,450
many you guys know what r of paradise

00:39:47,410 --> 00:39:56,050
classes in puppet okay a few of you so

00:39:51,450 --> 00:39:58,300
so when we import classes form puppet we

00:39:56,050 --> 00:40:02,080
actually know how to import all of the

00:39:58,300 --> 00:40:07,690
permit in parameters and let's say for

00:40:02,080 --> 00:40:09,690
example the absolute the foreman class

00:40:07,690 --> 00:40:14,020
actually has quite a few parameters and

00:40:09,690 --> 00:40:18,070
here you can see the puppet class and we

00:40:14,020 --> 00:40:20,050
can define the we can see here all of

00:40:18,070 --> 00:40:23,050
the classes they're also all of the

00:40:20,050 --> 00:40:26,350
parameters and we could even configure

00:40:23,050 --> 00:40:29,230
each and every parameter to let's say

00:40:26,350 --> 00:40:32,050
whether we allow the user who actually

00:40:29,230 --> 00:40:34,120
deploy a system to consume that or to

00:40:32,050 --> 00:40:36,460
override that so let's say you have a

00:40:34,120 --> 00:40:38,950
puppet class that you got from phone

00:40:36,460 --> 00:40:40,540
puppets Forge and it has ten different

00:40:38,950 --> 00:40:42,850
parameters because they try to relieve

00:40:40,540 --> 00:40:44,740
generic but you only care about one so

00:40:42,850 --> 00:40:46,960
you can say I only care about this one

00:40:44,740 --> 00:40:50,170
all the rest leave the default just for

00:40:46,960 --> 00:40:52,120
this one let's say just for the forming

00:40:50,170 --> 00:40:55,000
URL I actually care I want to override

00:40:52,120 --> 00:40:56,890
it and later on when you go and create a

00:40:55,000 --> 00:40:58,330
new host only then you would see that

00:40:56,890 --> 00:41:01,450
parameter all the rest will be hidden

00:40:58,330 --> 00:41:03,040
from you so kind of simplify from so

00:41:01,450 --> 00:41:04,720
there's always the assumption that there

00:41:03,040 --> 00:41:06,040
is someone who knows puppet knows the

00:41:04,720 --> 00:41:07,480
puppet manifest understand what's going

00:41:06,040 --> 00:41:09,460
on and there's someone who doesn't know

00:41:07,480 --> 00:41:12,250
anything he just wants to get a system

00:41:09,460 --> 00:41:13,390
and and we need to make their life

00:41:12,250 --> 00:41:16,480
easier the ones who are actually

00:41:13,390 --> 00:41:19,000
consuming those services and you know

00:41:16,480 --> 00:41:20,800
you could really do this higher

00:41:19,000 --> 00:41:23,440
alternative I don't know if I want to go

00:41:20,800 --> 00:41:25,510
into this details here but for those of

00:41:23,440 --> 00:41:27,730
you use Huayra there's a whole

00:41:25,510 --> 00:41:31,030
alternative for that to figuring out

00:41:27,730 --> 00:41:34,810
what is the value for a given system

00:41:31,030 --> 00:41:36,400
let's say my ntp server if i'm in this

00:41:34,810 --> 00:41:37,990
domain i want to get this value if i'm

00:41:36,400 --> 00:41:39,700
using this cloud provider i want to get

00:41:37,990 --> 00:41:42,220
that value you know kind of a way to

00:41:39,700 --> 00:41:44,590
realize what is the right value based on

00:41:42,220 --> 00:41:49,050
the system that I'm interested in so

00:41:44,590 --> 00:41:49,050
that's what i mean by our articles yep

00:41:53,840 --> 00:42:04,470
so so Foreman creates the hero backends

00:42:01,380 --> 00:42:06,600
no it's actually an alternative it's an

00:42:04,470 --> 00:42:08,670
alternative okay because there is some

00:42:06,600 --> 00:42:11,520
more additional metadata that you can

00:42:08,670 --> 00:42:14,160
use so however only knows about facts

00:42:11,520 --> 00:42:16,560
and puppet internal but Foreman also

00:42:14,160 --> 00:42:18,990
knows for example the owner of the

00:42:16,560 --> 00:42:21,600
system so if i'm the owner i want my my

00:42:18,990 --> 00:42:23,280
ssh key to get deployed for example so

00:42:21,600 --> 00:42:25,680
this is an additional information that

00:42:23,280 --> 00:42:29,100
Foreman knows about and can inject the

00:42:25,680 --> 00:42:31,500
data where it doesn't always necessarily

00:42:29,100 --> 00:42:33,720
the puppet is aware and so basically

00:42:31,500 --> 00:42:36,690
this is a complete alternative and how

00:42:33,720 --> 00:42:39,119
is that connected there's a couple of

00:42:36,690 --> 00:42:40,440
ways to first for the NC interface you

00:42:39,119 --> 00:42:43,500
can get all of the values up front

00:42:40,440 --> 00:42:46,500
unlike IRA or the data binding in

00:42:43,500 --> 00:42:48,359
puppetry where it asks on the fly every

00:42:46,500 --> 00:42:50,190
time you can read the manifest it holds

00:42:48,359 --> 00:42:53,910
up IRA higher goals and parse and

00:42:50,190 --> 00:42:58,710
Foreman basically creates a yamel file

00:42:53,910 --> 00:43:00,690
maybe I can show that let's say this

00:42:58,710 --> 00:43:05,430
system this is the NC interface

00:43:00,690 --> 00:43:08,790
basically this thing here is what puppet

00:43:05,430 --> 00:43:11,520
gets from Foreman and then then puppet

00:43:08,790 --> 00:43:14,520
knows what to do so for example I have a

00:43:11,520 --> 00:43:17,130
ganglia client and it has a parameter

00:43:14,520 --> 00:43:20,040
called cluster and inside there is a

00:43:17,130 --> 00:43:21,240
value which was decided by form and

00:43:20,040 --> 00:43:24,300
based on the hierarchy that you've

00:43:21,240 --> 00:43:28,260
selected so actually puppet gets this

00:43:24,300 --> 00:43:30,180
information up front and it doesn't need

00:43:28,260 --> 00:43:33,090
to go call out to jairo anything else

00:43:30,180 --> 00:43:34,980
and you could cash this this is actually

00:43:33,090 --> 00:43:37,380
cached by default on the puppet master

00:43:34,980 --> 00:43:39,600
so Foreman is not available or something

00:43:37,380 --> 00:43:42,630
like that that data is available as a

00:43:39,600 --> 00:43:44,700
kind of a compiled version you can

00:43:42,630 --> 00:43:48,570
easily put it in version control or you

00:43:44,700 --> 00:43:50,070
know just for archiving dis dis content

00:43:48,570 --> 00:43:55,520
which basically what Foreman's

00:43:50,070 --> 00:43:55,520
generating thank you you're welcome

00:43:57,030 --> 00:44:05,650
right so this plenty of things maybe I

00:44:03,070 --> 00:44:10,330
can briefly talk about locations on

00:44:05,650 --> 00:44:13,420
organization so you could configure for

00:44:10,330 --> 00:44:15,550
every location for example the users

00:44:13,420 --> 00:44:17,500
that you care about in this organization

00:44:15,550 --> 00:44:19,480
the proxies that you care about in the

00:44:17,500 --> 00:44:23,260
organization organization maybe in the

00:44:19,480 --> 00:44:25,150
networks and so on like really you can

00:44:23,260 --> 00:44:27,910
go up to every resource the foreman

00:44:25,150 --> 00:44:30,730
knows about and say okay oh this mirror

00:44:27,910 --> 00:44:32,619
exists here so you can use it but the

00:44:30,730 --> 00:44:34,030
the mirror the other mirrors are located

00:44:32,619 --> 00:44:37,240
maybe in different countries doesn't

00:44:34,030 --> 00:44:39,369
make any sense to use them and so on or

00:44:37,240 --> 00:44:42,280
maybe you could say I don't care about

00:44:39,369 --> 00:44:43,660
subnets make all subnets available so

00:44:42,280 --> 00:44:45,790
they always be available in this

00:44:43,660 --> 00:44:47,260
location also the ones that create in

00:44:45,790 --> 00:44:49,930
the future but I don't want to handle

00:44:47,260 --> 00:44:52,630
substance I don't care so really it's

00:44:49,930 --> 00:44:55,150
it's it gives you a way that when you go

00:44:52,630 --> 00:44:58,540
back to this form here when you create

00:44:55,150 --> 00:45:01,750
something you only get the relevant drop

00:44:58,540 --> 00:45:04,420
downs so when I'm in Tel Aviv I want to

00:45:01,750 --> 00:45:08,619
see only this this list of domains maybe

00:45:04,420 --> 00:45:10,330
when I'm in in I don't know if I have

00:45:08,619 --> 00:45:11,890
okay I don't have a good example but

00:45:10,330 --> 00:45:14,830
when I'm somewhere else I want to see a

00:45:11,890 --> 00:45:16,570
different list right so only make sure

00:45:14,830 --> 00:45:19,270
that for the operator to actually end up

00:45:16,570 --> 00:45:20,830
using it I am a customer i'm getting

00:45:19,270 --> 00:45:22,750
access to form and i'm only seeing my

00:45:20,830 --> 00:45:24,700
environment I won't want I only want to

00:45:22,750 --> 00:45:26,560
deploy in my environment I don't you

00:45:24,700 --> 00:45:29,980
know and then obviously when I change

00:45:26,560 --> 00:45:32,830
the context let me change the context of

00:45:29,980 --> 00:45:35,619
the user everything in the application

00:45:32,830 --> 00:45:37,930
get scoped so here I chose the cloud I

00:45:35,619 --> 00:45:41,170
don't have any host here like the

00:45:37,930 --> 00:45:44,200
location glad I will choose the Tel Aviv

00:45:41,170 --> 00:45:47,230
location and let's say the formal

00:45:44,200 --> 00:45:50,260
organization I only only see the

00:45:47,230 --> 00:45:53,320
relevant stuff to me and everywhere

00:45:50,260 --> 00:45:56,130
horse lyst whatever it is subnets and so

00:45:53,320 --> 00:45:56,130
on yep

00:46:13,730 --> 00:46:24,140
yeah you could when you edit a user for

00:46:18,540 --> 00:46:28,340
example let's take dominic for example

00:46:24,140 --> 00:46:31,320
you could say that he has access only

00:46:28,340 --> 00:46:33,360
okay I'm already scoped to a location so

00:46:31,320 --> 00:46:35,730
I'm only seeing these compute resources

00:46:33,360 --> 00:46:38,940
but i can say he only act he can only

00:46:35,730 --> 00:46:41,490
deploy on this computer resource nothing

00:46:38,940 --> 00:46:44,670
else and that's all the only and you

00:46:41,490 --> 00:46:46,830
can't like create instances on ec2 or

00:46:44,670 --> 00:46:51,140
stuff like that another user may be good

00:46:46,830 --> 00:46:51,140
but he can't so that what you mean or

00:47:06,319 --> 00:47:16,880
okay so the so if you care about let's

00:47:14,630 --> 00:47:20,059
say quotas or other features that had

00:47:16,880 --> 00:47:22,369
the that's a vsphere has then I would

00:47:20,059 --> 00:47:24,440
suggest that you create a customized

00:47:22,369 --> 00:47:27,799
account with permissions that has

00:47:24,440 --> 00:47:29,299
permissions and then let's say quota is

00:47:27,799 --> 00:47:31,910
something that you know Foreman can't

00:47:29,299 --> 00:47:33,529
know about but if the user will say and

00:47:31,910 --> 00:47:36,380
give you an error by saying you're

00:47:33,529 --> 00:47:37,759
overcommitted your quota then when I use

00:47:36,380 --> 00:47:40,959
it that tries to use that computer

00:47:37,759 --> 00:47:42,890
resource you will obviously fail so

00:47:40,959 --> 00:47:46,190
that's probably the better way to

00:47:42,890 --> 00:47:51,739
approach that hopefully I answered the

00:47:46,190 --> 00:47:53,630
question okay so in terms of users we

00:47:51,739 --> 00:47:56,900
just mention it so you did you know you

00:47:53,630 --> 00:47:59,859
could assign users to only let's say

00:47:56,900 --> 00:48:02,989
it's given domains or only based on the

00:47:59,859 --> 00:48:05,029
role it can access only his web servers

00:48:02,989 --> 00:48:08,719
or things like that or you can even do

00:48:05,029 --> 00:48:11,900
things like based on facts like I don't

00:48:08,719 --> 00:48:14,299
know only the fact the operating system

00:48:11,900 --> 00:48:16,190
fact that we've had no solaris someone

00:48:14,299 --> 00:48:19,729
who can only see his solaris systems if

00:48:16,190 --> 00:48:21,380
there's still such a beast or whatever

00:48:19,729 --> 00:48:24,849
you can so you can really restrict fair

00:48:21,380 --> 00:48:28,339
permissions really in a dynamic fashion

00:48:24,849 --> 00:48:31,039
allowing people to only see what they're

00:48:28,339 --> 00:48:36,609
supposed to be seeing in terms of

00:48:31,039 --> 00:48:39,199
permissions just ups just to show you

00:48:36,609 --> 00:48:41,900
high level you can create report roles

00:48:39,199 --> 00:48:44,209
and so on and you can see here this is

00:48:41,900 --> 00:48:46,969
here the list of different roles that I

00:48:44,209 --> 00:48:50,239
have in my system like a manager of your

00:48:46,969 --> 00:48:52,779
default user and so on and then you you

00:48:50,239 --> 00:48:55,759
really have for every action in the UI

00:48:52,779 --> 00:48:57,529
like view environments create

00:48:55,759 --> 00:49:00,849
environments edit environments and so on

00:48:57,529 --> 00:49:04,249
and kind of everything here you could

00:49:00,849 --> 00:49:06,979
really restrict down all the way down to

00:49:04,249 --> 00:49:08,869
whatever the user needs to be doing and

00:49:06,979 --> 00:49:10,779
that's it like otherwise you won't you

00:49:08,869 --> 00:49:13,759
won't have access to to to it and that

00:49:10,779 --> 00:49:16,130
also works for API so the same

00:49:13,759 --> 00:49:18,920
permission works also for the API so you

00:49:16,130 --> 00:49:19,520
can have a really customize a p.i user

00:49:18,920 --> 00:49:21,980
that can

00:49:19,520 --> 00:49:26,660
fetched monitoring data or you know

00:49:21,980 --> 00:49:31,310
status or whatever whatever it is so

00:49:26,660 --> 00:49:34,550
really kind of useful we have also as I

00:49:31,310 --> 00:49:39,770
mentioned ldap pretty easy both active

00:49:34,550 --> 00:49:42,290
directory and normal ldap there is also

00:49:39,770 --> 00:49:48,920
integration not here but integration

00:49:42,290 --> 00:49:51,020
with forgot identity management yeah

00:49:48,920 --> 00:49:57,200
forgot the name the one where that is

00:49:51,020 --> 00:49:59,120
doing sorry I PA yeah thank you so

00:49:57,200 --> 00:50:01,460
there's also integration with IPA an IPA

00:49:59,120 --> 00:50:03,230
actually has interface to DCP and DNS by

00:50:01,460 --> 00:50:04,880
itself and one-time passwords and all of

00:50:03,230 --> 00:50:07,850
that stuff so that's going to happen as

00:50:04,880 --> 00:50:12,190
well pretty soon so really this

00:50:07,850 --> 00:50:18,020
integration with OpenStack identities

00:50:12,190 --> 00:50:25,760
and so on yeah questions guys you're

00:50:18,020 --> 00:50:31,370
quiet nothing yeah go ahead I can repeat

00:50:25,760 --> 00:50:36,650
the question how is provisioning working

00:50:31,370 --> 00:50:39,680
on bare metal machines to have to give

00:50:36,650 --> 00:50:42,350
the IP address and use of an IPM I

00:50:39,680 --> 00:50:45,020
interface and Foreman is starting the

00:50:42,350 --> 00:50:47,510
machine from the IP my interface or how

00:50:45,020 --> 00:50:51,050
is this exactly working I didn't show

00:50:47,510 --> 00:50:54,380
that so I when I deploy on bare metal I

00:50:51,050 --> 00:50:57,730
could add an interfaith network

00:50:54,380 --> 00:51:00,200
interface which is the EFC interface and

00:50:57,730 --> 00:51:03,710
I would need to put in the mac address

00:51:00,200 --> 00:51:06,230
off the BMC and and the username and

00:51:03,710 --> 00:51:08,240
password and Foreman will automatically

00:51:06,230 --> 00:51:10,460
give it an IP address if it doesn't have

00:51:08,240 --> 00:51:13,130
one like what I just doing now you can

00:51:10,460 --> 00:51:15,980
see just so I just allocated here an IP

00:51:13,130 --> 00:51:18,800
address for it so even if it's not

00:51:15,980 --> 00:51:21,560
configured it will be able to configure

00:51:18,800 --> 00:51:22,790
it create a DNS for it so you know it

00:51:21,560 --> 00:51:27,010
could be on a completely different

00:51:22,790 --> 00:51:30,260
network from your server and and

00:51:27,010 --> 00:51:32,260
basically then the way works is that the

00:51:30,260 --> 00:51:34,150
systems are defaulting to net

00:51:32,260 --> 00:51:35,470
from network so there's a one-time

00:51:34,150 --> 00:51:37,660
effort you have to configure your bare

00:51:35,470 --> 00:51:40,480
metal to in the boot order to boot from

00:51:37,660 --> 00:51:42,640
network and then every time the system

00:51:40,480 --> 00:51:44,970
boots it boots into form informants

00:51:42,640 --> 00:51:47,920
decides whether it needs to boot from

00:51:44,970 --> 00:51:49,450
local disk or from network so if you

00:51:47,920 --> 00:51:53,430
want to reprovision you don't need to

00:51:49,450 --> 00:51:56,800
physically go into the server you know

00:51:53,430 --> 00:52:00,670
do something you actually just from this

00:51:56,800 --> 00:52:08,860
UI you can reboot it and it reinstalls

00:52:00,670 --> 00:52:16,090
itself yeah yeah next time you should

00:52:08,860 --> 00:52:20,700
sit closer Foreman is also part of the

00:52:16,090 --> 00:52:23,440
bigger ecosystem of the new Red Hat

00:52:20,700 --> 00:52:26,920
management system of cattle oh can you

00:52:23,440 --> 00:52:32,080
quickly talk about how it relates to cut

00:52:26,920 --> 00:52:34,150
LOL and pulp yeah so some of you might

00:52:32,080 --> 00:52:37,330
know reddit is working on the next

00:52:34,150 --> 00:52:39,280
generation of satellite satellite 6 or

00:52:37,330 --> 00:52:43,450
whatever it will end up be called being

00:52:39,280 --> 00:52:46,360
called where it has two components one

00:52:43,450 --> 00:52:48,930
component is handling content like yum

00:52:46,360 --> 00:52:53,650
repositories handling puppet modules

00:52:48,930 --> 00:52:56,110
repositories handles subscriptions for

00:52:53,650 --> 00:52:58,570
reddit systems and that's basically

00:52:56,110 --> 00:53:00,340
cutolo the other part which is

00:52:58,570 --> 00:53:02,800
provisioning and config management this

00:53:00,340 --> 00:53:04,710
Foreman and satellite will basically

00:53:02,800 --> 00:53:09,490
consists of these two products together

00:53:04,710 --> 00:53:13,810
so they'll sit side by side and with a

00:53:09,490 --> 00:53:16,810
lot of integrations between them behind

00:53:13,810 --> 00:53:19,690
the scene and yet you could provision

00:53:16,810 --> 00:53:22,600
systems and assigned subscriptions and

00:53:19,690 --> 00:53:29,280
content and so on like yum repose and

00:53:22,600 --> 00:53:29,280
things like that yeah good

00:53:31,730 --> 00:53:37,190
such a question what will happen to

00:53:33,560 --> 00:53:39,770
cobbler cobbler is an excellent open

00:53:37,190 --> 00:53:43,400
source project as far as I know red hot

00:53:39,770 --> 00:53:50,020
is one of the major developer it used to

00:53:43,400 --> 00:53:53,330
be Mike the hand the guy who is now into

00:53:50,020 --> 00:53:58,790
yeah yeah ansible have some memory

00:53:53,330 --> 00:54:01,010
problem today ansible project is is no

00:53:58,790 --> 00:54:04,970
longer try that for I guess few years

00:54:01,010 --> 00:54:08,630
four years or so and reddit supports

00:54:04,970 --> 00:54:11,210
cobbler internally in satellite so set

00:54:08,630 --> 00:54:15,109
the old version of satellite is using

00:54:11,210 --> 00:54:17,480
cobbler but as a internal component like

00:54:15,109 --> 00:54:21,140
an engine not it's not exposed to the

00:54:17,480 --> 00:54:24,109
user necessarily and they'll support it

00:54:21,140 --> 00:54:26,720
as long as satellite is there but I

00:54:24,109 --> 00:54:30,440
don't know of any active development in

00:54:26,720 --> 00:54:34,580
cobbler it has obviously an open in our

00:54:30,440 --> 00:54:37,430
community but not from reddits point of

00:54:34,580 --> 00:54:40,780
view my asking another one question the

00:54:37,430 --> 00:54:43,700
technical one when you're when you

00:54:40,780 --> 00:54:46,070
showed the dashboard when you're

00:54:43,700 --> 00:54:48,590
monitoring the situation status of the

00:54:46,070 --> 00:54:50,390
network of computers can you easily add

00:54:48,590 --> 00:54:53,960
some editable fields like for instance

00:54:50,390 --> 00:54:56,060
here you can search based on the

00:54:53,960 --> 00:54:59,300
information which you pick up from the

00:54:56,060 --> 00:55:01,730
factors as far as I understood and then

00:54:59,300 --> 00:55:06,230
for instance if I want to add the some

00:55:01,730 --> 00:55:08,660
comments or on the pure horse base like

00:55:06,230 --> 00:55:13,160
room number or building can I do it

00:55:08,660 --> 00:55:15,380
easily yes we already have this comment

00:55:13,160 --> 00:55:19,990
field I don't know if maybe I went very

00:55:15,380 --> 00:55:22,820
quickly here but like a free text and

00:55:19,990 --> 00:55:25,609
you could I think you could easily

00:55:22,820 --> 00:55:27,530
search for it if not it's trivial to fix

00:55:25,609 --> 00:55:30,790
it that you could search for based on

00:55:27,530 --> 00:55:36,140
comments like you could in the search

00:55:30,790 --> 00:55:38,330
you have let's say I actually yeah

00:55:36,140 --> 00:55:40,880
you're right comment is not exposed for

00:55:38,330 --> 00:55:42,980
searching but we can trivially expose it

00:55:40,880 --> 00:55:45,319
but we have an operator you know like

00:55:42,980 --> 00:55:48,829
equal we as there's like

00:55:45,319 --> 00:55:52,279
and I could say all systems that have I

00:55:48,829 --> 00:55:54,289
don't know okay autocompletes but you

00:55:52,279 --> 00:55:57,969
can see that two results and I did like

00:55:54,289 --> 00:56:01,699
dtp so you could equivalently search for

00:55:57,969 --> 00:56:05,209
90 lab two or whatever your texted you

00:56:01,699 --> 00:56:06,859
put in a comment so definitely and i'll

00:56:05,209 --> 00:56:09,859
tell you more than that if there is an

00:56:06,859 --> 00:56:12,140
automatic way to figure out for example

00:56:09,859 --> 00:56:15,380
sometimes you can fetch information like

00:56:12,140 --> 00:56:17,599
tweets which you're connected to and

00:56:15,380 --> 00:56:20,119
then there is a way that we could maybe

00:56:17,599 --> 00:56:23,719
automatically understand where you're

00:56:20,119 --> 00:56:25,249
connected to or obviously things like

00:56:23,719 --> 00:56:27,529
the IP address and subnet is very

00:56:25,249 --> 00:56:28,969
trivial if you know the subnet is

00:56:27,529 --> 00:56:31,249
located in a certain place you want to

00:56:28,969 --> 00:56:33,289
kill you you're certain rack or you know

00:56:31,249 --> 00:56:35,029
all of that stuff can you could also you

00:56:33,289 --> 00:56:37,699
know search even without and all of that

00:56:35,029 --> 00:56:39,499
day that is automatically uploaded to

00:56:37,699 --> 00:56:40,969
Foreman so you don't necessarily even

00:56:39,499 --> 00:56:45,469
need to put the comment in the first

00:56:40,969 --> 00:56:47,809
place but I'll make sure that the next

00:56:45,469 --> 00:56:50,959
release will search on comment as well

00:56:47,809 --> 00:56:56,259
that's trivial have another question

00:56:50,959 --> 00:57:00,160
yeah puppet is developed by puppet labs

00:56:56,259 --> 00:57:03,529
is there any involvement of puppet labs

00:57:00,160 --> 00:57:08,660
informant or is this just let us just

00:57:03,529 --> 00:57:12,349
use the open-source version and with no

00:57:08,660 --> 00:57:15,319
involvement of puppet labs so the short

00:57:12,349 --> 00:57:19,549
answer is now there's no involvement the

00:57:15,319 --> 00:57:21,979
long answer is at some history in a

00:57:19,549 --> 00:57:24,680
couple of sentences when I started

00:57:21,979 --> 00:57:26,420
developing Foreman three years ago three

00:57:24,680 --> 00:57:27,920
and a half years ago one of the first

00:57:26,420 --> 00:57:29,569
thing I and I always knew it's going to

00:57:27,920 --> 00:57:33,559
be open source so one of the first thing

00:57:29,569 --> 00:57:35,299
I offered it to look you know use a web

00:57:33,559 --> 00:57:38,859
interface why don't we work together and

00:57:35,299 --> 00:57:42,190
what looks valid concern it was that

00:57:38,859 --> 00:57:46,369
Luxio perhaps while it concern was that

00:57:42,190 --> 00:57:48,380
he fought that enterprise consoles you

00:57:46,369 --> 00:57:51,709
know management web you eyes and so on

00:57:48,380 --> 00:57:53,749
is something that he wants to make

00:57:51,709 --> 00:57:57,289
profit out that's their business you

00:57:53,749 --> 00:57:58,599
know valid business and as such he

00:57:57,289 --> 00:58:02,769
wanted to own

00:57:58,599 --> 00:58:04,329
intellectual property and at that point

00:58:02,769 --> 00:58:06,789
in time I kind of felt I need a lawyer

00:58:04,329 --> 00:58:09,039
you know I didn't know what's what does

00:58:06,789 --> 00:58:10,720
it mean you know he wanted the copyright

00:58:09,039 --> 00:58:14,799
and so on I didn't agree and the stand

00:58:10,720 --> 00:58:17,380
back then anything about licenses and it

00:58:14,799 --> 00:58:19,150
kind of be you know his valid argument

00:58:17,380 --> 00:58:20,589
is that he wants to own the copyright

00:58:19,150 --> 00:58:22,630
you know if he's going to build the

00:58:20,589 --> 00:58:26,739
business on top of something he needs to

00:58:22,630 --> 00:58:32,099
have you no good foundations and then

00:58:26,739 --> 00:58:36,099
such they started Papa dashboard and

00:58:32,099 --> 00:58:43,210
later on the enterprise console so sadly

00:58:36,099 --> 00:58:48,220
there's no real in mall involvement okay

00:58:43,210 --> 00:58:52,170
any other questions then thank you thank

00:58:48,220 --> 00:58:52,170

YouTube URL: https://www.youtube.com/watch?v=hdKwKJimCn8


