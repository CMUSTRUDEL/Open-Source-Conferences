Title: Chris Lilley - The State of WebFonts
Publication date: 2017-11-20
Playlist: View Source 2017 (London)
Description: 
	View Source 2017.

View Source is a conference for front-end web developers. The goal of this event is to provide an in-depth, practical look at current and on-the-horizon technologies, with plenty of opportunities for conversation.
Captions: 
	00:00:02,850 --> 00:00:07,889
so that's me I've already we've already

00:00:05,430 --> 00:00:10,710
established this I'm technical

00:00:07,889 --> 00:00:13,440
Directorate w3c and have done various

00:00:10,710 --> 00:00:16,950
other things that's already been

00:00:13,440 --> 00:00:19,019
mentioned so is that more relevantly I

00:00:16,950 --> 00:00:22,380
chaired the working group to produce

00:00:19,019 --> 00:00:25,259
that font face so that's nice and some

00:00:22,380 --> 00:00:27,300
other staff and things so what we're

00:00:25,259 --> 00:00:28,500
going to talk about today first of all

00:00:27,300 --> 00:00:29,849
some basics I want to make sure

00:00:28,500 --> 00:00:32,009
everyone's on the same page we're using

00:00:29,849 --> 00:00:34,550
the same terminology then they're going

00:00:32,009 --> 00:00:37,050
to talk about open type features and CSS

00:00:34,550 --> 00:00:37,980
then a little bit about performance not

00:00:37,050 --> 00:00:39,750
much but a little

00:00:37,980 --> 00:00:41,129
and then less thing I'm going to use my

00:00:39,750 --> 00:00:45,780
crystal ball and tell you what's coming

00:00:41,129 --> 00:00:47,640
up in the future so first of all basics

00:00:45,780 --> 00:00:49,280
what is this by the way do people know

00:00:47,640 --> 00:00:53,129
what that is what they're looking at

00:00:49,280 --> 00:00:56,940
shout out if you do yes why is it

00:00:53,129 --> 00:01:00,059
backwards yes exactly

00:00:56,940 --> 00:01:02,429
good so first of all terminology a

00:01:00,059 --> 00:01:04,620
character a character is a number it's a

00:01:02,429 --> 00:01:06,780
Unicode code point and it has some

00:01:04,620 --> 00:01:07,830
properties it tells you things like I'm

00:01:06,780 --> 00:01:10,890
a capital letter

00:01:07,830 --> 00:01:13,110
I am punctuation I'm a numeral and then

00:01:10,890 --> 00:01:17,189
a glyph is the actual via the thing you

00:01:13,110 --> 00:01:20,490
see the visual representation of it so

00:01:17,189 --> 00:01:22,229
what are we looking at here a glyph yes

00:01:20,490 --> 00:01:24,240
it's a ligature as well so too fast

00:01:22,229 --> 00:01:27,600
though it's it's also a good so how many

00:01:24,240 --> 00:01:29,850
characters are involved here too yes

00:01:27,600 --> 00:01:31,380
if you were thinking one because there's

00:01:29,850 --> 00:01:32,640
one of those in Unicode do not ever use

00:01:31,380 --> 00:01:35,280
that when your site becomes not

00:01:32,640 --> 00:01:36,829
searchable so that's two characters but

00:01:35,280 --> 00:01:38,670
it is one glyph

00:01:36,829 --> 00:01:42,600
here's another example how many

00:01:38,670 --> 00:01:44,549
characters here one yes any advanced one

00:01:42,600 --> 00:01:46,950
one you could also be right with two if

00:01:44,549 --> 00:01:48,899
you using a combining accent it would

00:01:46,950 --> 00:01:50,869
actually be two characters but it's

00:01:48,899 --> 00:01:54,450
still one glyph

00:01:50,869 --> 00:01:56,280
it could actually be using two fonts

00:01:54,450 --> 00:01:57,630
that would be really bad those who don't

00:01:56,280 --> 00:01:59,759
ever do that but if you have a combining

00:01:57,630 --> 00:02:01,619
acute accent in one font and that's

00:01:59,759 --> 00:02:03,329
that's just gonna look terrible yeah and

00:02:01,619 --> 00:02:06,860
none of its gonna match up and try not

00:02:03,329 --> 00:02:09,629
to do that ever so some more terminology

00:02:06,860 --> 00:02:11,390
myriad Pro is an example of a font

00:02:09,629 --> 00:02:15,319
family there are a group of related

00:02:11,390 --> 00:02:15,319
faces in that family

00:02:16,819 --> 00:02:20,940
now properties and descriptors so

00:02:19,410 --> 00:02:22,799
everyone knows what CSS property is

00:02:20,940 --> 00:02:24,870
right obviously who could tell me what a

00:02:22,799 --> 00:02:26,190
descriptor is it's okay I'm not gonna

00:02:24,870 --> 00:02:27,720
ask you to do that but I will explain

00:02:26,190 --> 00:02:29,760
the difference so if you look here

00:02:27,720 --> 00:02:33,900
there's font family and this font weight

00:02:29,760 --> 00:02:36,030
and there twice right so the ones in the

00:02:33,900 --> 00:02:37,590
top in the app font face are descriptors

00:02:36,030 --> 00:02:40,290
what they're doing is they're telling

00:02:37,590 --> 00:02:42,930
you what this font can do this font can

00:02:40,290 --> 00:02:45,060
do bold and then the h1 there we've got

00:02:42,930 --> 00:02:47,340
front weight bold we're requesting we

00:02:45,060 --> 00:02:53,040
want headings to be user bold font you

00:02:47,340 --> 00:02:57,269
see the difference good and I just said

00:02:53,040 --> 00:02:58,739
that right so you of course you don't

00:02:57,269 --> 00:03:00,120
always use a single font you tend to

00:02:58,739 --> 00:03:02,579
have a stack of them you have a comma

00:03:00,120 --> 00:03:05,700
separated list and the first one will be

00:03:02,579 --> 00:03:07,470
used that a actually exists and B has

00:03:05,700 --> 00:03:11,280
glyphs for the characters you're trying

00:03:07,470 --> 00:03:13,139
to display so here's a common problem if

00:03:11,280 --> 00:03:14,910
you've ever looked at a Japanese font

00:03:13,139 --> 00:03:17,220
and you've seen english-language text

00:03:14,910 --> 00:03:19,049
then it often kind of sucks because they

00:03:17,220 --> 00:03:21,150
were added as an afterthought the Lassen

00:03:19,049 --> 00:03:23,910
glyphs so the way you get around that is

00:03:21,150 --> 00:03:25,910
you put a Latin font first so any Latin

00:03:23,910 --> 00:03:30,510
characters will come from Latin font

00:03:25,910 --> 00:03:32,160
like this the problem is after a while

00:03:30,510 --> 00:03:33,690
the font designer who did the lashing

00:03:32,160 --> 00:03:35,579
font goes hey there's these things

00:03:33,690 --> 00:03:36,989
called hiragana there's not very many of

00:03:35,579 --> 00:03:38,880
those I'll throw some of these into my

00:03:36,989 --> 00:03:40,590
font and they also suck because it's the

00:03:38,880 --> 00:03:43,680
first time they did it and you can't put

00:03:40,590 --> 00:03:46,319
both of them first so how do you get

00:03:43,680 --> 00:03:48,500
around this does anyone know how you get

00:03:46,319 --> 00:03:53,090
around this

00:03:48,500 --> 00:03:56,330
yes tries to them yes exactly

00:03:53,090 --> 00:03:58,580
use Unicode range now Unicode range the

00:03:56,330 --> 00:04:00,650
the initial value for that is the whole

00:03:58,580 --> 00:04:02,150
of Unicode so what but that's not

00:04:00,650 --> 00:04:03,650
claiming that the font has all the

00:04:02,150 --> 00:04:04,580
possible glyphs it just says that you

00:04:03,650 --> 00:04:06,680
can use them

00:04:04,580 --> 00:04:10,850
what Unicode range does is that lets you

00:04:06,680 --> 00:04:14,390
restrict the range so here's an example

00:04:10,850 --> 00:04:17,959
of unicode range in use as you can see

00:04:14,390 --> 00:04:20,390
this range here covers yen then kanji

00:04:17,959 --> 00:04:24,260
then hiragana and then katakana as you

00:04:20,390 --> 00:04:31,670
can tell from the numbers okay I will

00:04:24,260 --> 00:04:33,710
now make my public apology it seemed

00:04:31,670 --> 00:04:35,960
like a good idea at the time the Unicode

00:04:33,710 --> 00:04:39,410
was new U+ as how everyone was writing

00:04:35,960 --> 00:04:40,850
it and I could pose this syntax and I

00:04:39,410 --> 00:04:44,600
said I don't really like this but I

00:04:40,850 --> 00:04:46,090
can't think of a better one silence okay

00:04:44,600 --> 00:04:48,560
I'm going to put it in the spec then

00:04:46,090 --> 00:04:52,520
silence we can't get rid of it now it's

00:04:48,560 --> 00:04:55,280
it's it's there but I'm very sorry so

00:04:52,520 --> 00:04:57,650
here's an example we want what we want

00:04:55,280 --> 00:05:01,790
to do is have this and that with a nice

00:04:57,650 --> 00:05:03,640
swooshy ampersand so let's try that

00:05:01,790 --> 00:05:08,090
shall we

00:05:03,640 --> 00:05:11,919
so first of all we'll add this swishy to

00:05:08,090 --> 00:05:14,870
it thank you love

00:05:11,919 --> 00:05:18,940
yes okay so that changed the whole thing

00:05:14,870 --> 00:05:18,940
but now we want to say

00:05:25,740 --> 00:05:32,020
did he and it works good lovely and just

00:05:30,550 --> 00:05:33,460
to show you you wouldn't want to have to

00:05:32,020 --> 00:05:35,920
put a span around there or anything

00:05:33,460 --> 00:05:39,550
we're just using unicode range we get

00:05:35,920 --> 00:05:40,810
past that so now we all got the basics

00:05:39,550 --> 00:05:43,090
under our belt let's go on to the

00:05:40,810 --> 00:05:47,980
interesting stuff that's fairly

00:05:43,090 --> 00:05:50,110
interesting so open type features are

00:05:47,980 --> 00:05:51,940
basically the the range of adjustability

00:05:50,110 --> 00:05:53,980
were fond some optional features

00:05:51,940 --> 00:05:55,270
there'll be a set that's turned on by

00:05:53,980 --> 00:05:57,010
default and the others you have to

00:05:55,270 --> 00:05:58,960
switch on yourself if you've used

00:05:57,010 --> 00:06:00,580
desktop publishing then you'll be used

00:05:58,960 --> 00:06:02,260
to these and when you come to the web

00:06:00,580 --> 00:06:05,620
you go oh I don't get to use those

00:06:02,260 --> 00:06:07,330
anymore but with CSS we can now in CSS

00:06:05,620 --> 00:06:11,020
fonts three we can actually do this

00:06:07,330 --> 00:06:13,990
stuff so the syntax I'm giving these

00:06:11,020 --> 00:06:15,520
talk in Firefox by the way which does

00:06:13,990 --> 00:06:17,560
support the syntax I'm going to show you

00:06:15,520 --> 00:06:20,200
which is font variant there is also

00:06:17,560 --> 00:06:22,960
another syntax called feature settings

00:06:20,200 --> 00:06:24,760
which does the same thing except it uses

00:06:22,960 --> 00:06:26,200
cryptic little four-letter codes and

00:06:24,760 --> 00:06:27,700
it's a pain in the ass and you have to

00:06:26,200 --> 00:06:29,920
always look up the spec to see which one

00:06:27,700 --> 00:06:32,830
does what unfortunately that is very

00:06:29,920 --> 00:06:35,200
widespread in use whereas font variant

00:06:32,830 --> 00:06:39,100
values in Firefox it's some of it's in

00:06:35,200 --> 00:06:40,990
chrome hello Internet Explorer sorry

00:06:39,100 --> 00:06:45,640
what's edge if edge could actually add

00:06:40,990 --> 00:06:47,410
it that would be great and so here's an

00:06:45,640 --> 00:06:49,360
example if you look at these two lines

00:06:47,410 --> 00:06:51,310
of text you can see that the bottom one

00:06:49,360 --> 00:06:53,320
has lowercase letters and you see these

00:06:51,310 --> 00:06:55,330
have ascenders and descenders and you

00:06:53,320 --> 00:06:57,640
notice that numbers don't so they don't

00:06:55,330 --> 00:06:59,860
really fit with it whereas what we can

00:06:57,640 --> 00:07:02,920
do is just change this one property here

00:06:59,860 --> 00:07:04,930
and now he is old-style figures which

00:07:02,920 --> 00:07:06,400
have ascenders and descenders obviously

00:07:04,930 --> 00:07:08,230
you wouldn't do it globally like I've

00:07:06,400 --> 00:07:10,540
just done you do it depending on what

00:07:08,230 --> 00:07:16,270
the content is of your actual headline

00:07:10,540 --> 00:07:18,400
or whatever you wanted to style here's

00:07:16,270 --> 00:07:20,650
another example so fractions

00:07:18,400 --> 00:07:22,360
yeah Unicode does have some fractions it

00:07:20,650 --> 00:07:25,330
has a half and a quarter of stuff like

00:07:22,360 --> 00:07:28,120
that it certainly does not have 1327

00:07:25,330 --> 00:07:31,300
however also if you use that code point

00:07:28,120 --> 00:07:34,060
if you use a quarter then someone

00:07:31,300 --> 00:07:34,360
searching 1/4 in google is not going to

00:07:34,060 --> 00:07:36,069
find

00:07:34,360 --> 00:07:38,349
psychos you use the different character

00:07:36,069 --> 00:07:40,389
right instead what you want to do is put

00:07:38,349 --> 00:07:42,909
them like this with a slash and then

00:07:40,389 --> 00:07:45,129
just tell it to display those as

00:07:42,909 --> 00:07:51,370
fractions again one property pretty

00:07:45,129 --> 00:07:53,080
simple makes it nice and easy to read so

00:07:51,370 --> 00:07:55,000
this example let's look at this and

00:07:53,080 --> 00:07:56,530
which is the biggest number maybe the

00:07:55,000 --> 00:07:58,810
ones starting with 8 that looks like a

00:07:56,530 --> 00:08:00,219
bigger number than 1 or 2 but actually

00:07:58,810 --> 00:08:02,530
you know you'd be wrong because these

00:08:00,219 --> 00:08:04,060
numbers don't line up now of course you

00:08:02,530 --> 00:08:05,680
could make them line up by just putting

00:08:04,060 --> 00:08:07,569
a minus space font on that but that

00:08:05,680 --> 00:08:09,550
would make the text the rest of the text

00:08:07,569 --> 00:08:12,099
would suck it would not look good what

00:08:09,550 --> 00:08:15,430
you actually want is a proportional font

00:08:12,099 --> 00:08:17,889
but with tabular numbers so they line up

00:08:15,430 --> 00:08:19,900
nicely in a table again just one

00:08:17,889 --> 00:08:22,120
property and it makes it just improves

00:08:19,900 --> 00:08:26,259
the typography of your site if used in

00:08:22,120 --> 00:08:27,969
the right place obviously and here is an

00:08:26,259 --> 00:08:31,479
example I started with this font has

00:08:27,969 --> 00:08:33,729
some nice little ligatures and stuff so

00:08:31,479 --> 00:08:35,890
the font whenever we add a new property

00:08:33,729 --> 00:08:37,630
in CSS the initial value always has to

00:08:35,890 --> 00:08:39,849
be whatever the browser used to do to

00:08:37,630 --> 00:08:44,769
maintain web compatibility so let's

00:08:39,849 --> 00:08:46,779
change that now to discretionary

00:08:44,769 --> 00:08:49,920
ligatures and now we get this arrow in

00:08:46,779 --> 00:08:51,820
the le and it's all very nice and pretty

00:08:49,920 --> 00:08:52,990
you'll probably want to do it I'm

00:08:51,820 --> 00:08:56,230
heading and you probably wouldn't want

00:08:52,990 --> 00:09:00,459
to do that and body text and now let's

00:08:56,230 --> 00:09:02,079
set it to none so notice the FL ligature

00:09:00,459 --> 00:09:08,680
went away as well it's literally as

00:09:02,079 --> 00:09:10,870
forcing no ligatures to be used here so

00:09:08,680 --> 00:09:13,329
you may have noticed if you link a

00:09:10,870 --> 00:09:15,490
single web font to your page and then

00:09:13,329 --> 00:09:17,920
you use bold or italic you get bold and

00:09:15,490 --> 00:09:19,600
italic even if the font you're using

00:09:17,920 --> 00:09:22,060
doesn't actually provide them what

00:09:19,600 --> 00:09:23,500
happens the browser fakes it up alright

00:09:22,060 --> 00:09:26,410
it's not in a nice how it gets an

00:09:23,500 --> 00:09:28,779
oblique it's slanted over and it makes

00:09:26,410 --> 00:09:32,860
fake bold well now we have a property to

00:09:28,779 --> 00:09:35,350
stop it doing there so I can say you're

00:09:32,860 --> 00:09:37,149
only allowed to fake up the bold or I

00:09:35,350 --> 00:09:41,439
can say you're only allowed to fake up

00:09:37,149 --> 00:09:45,170
the oblique or I can say

00:09:41,439 --> 00:09:46,670
don't do any of that and there we go now

00:09:45,170 --> 00:09:48,230
that that's actually the single font

00:09:46,670 --> 00:09:50,509
that I've downloaded without any fake

00:09:48,230 --> 00:09:56,769
eNOS let's change to a different one

00:09:50,509 --> 00:09:56,769
let's change to Rochester no didn't

00:09:56,829 --> 00:10:03,680
there and now let's switch back on the

00:10:00,769 --> 00:10:05,810
the aloud stuff and now we have a fake

00:10:03,680 --> 00:10:08,089
italic italic which is a really hideous

00:10:05,810 --> 00:10:10,990
creation and I'll take this off screen

00:10:08,089 --> 00:10:10,990
as soon as I can

00:10:11,350 --> 00:10:18,889
turning do people not kerning is yes

00:10:15,110 --> 00:10:20,689
good kerning is how you the font says

00:10:18,889 --> 00:10:23,509
particular pairs of letters how they

00:10:20,689 --> 00:10:26,810
wants them to go together because the

00:10:23,509 --> 00:10:29,240
spacing so now font kerning again Auto

00:10:26,810 --> 00:10:31,759
is the default value and I'm going to

00:10:29,240 --> 00:10:33,920
change it to normal and nothing happens

00:10:31,759 --> 00:10:36,170
the reason nothing happens is because

00:10:33,920 --> 00:10:38,360
Firefox actually does the correct thing

00:10:36,170 --> 00:10:41,360
here it switches kerning on by default

00:10:38,360 --> 00:10:42,860
but if I was using Chrome you would have

00:10:41,360 --> 00:10:44,300
seen a change there certainly kerning

00:10:42,860 --> 00:10:46,279
would be applied because they care more

00:10:44,300 --> 00:10:48,829
about speed than they do about

00:10:46,279 --> 00:10:56,300
typographic legibility so by default

00:10:48,829 --> 00:10:57,800
they switch it off and that's none

00:10:56,300 --> 00:10:59,209
that's switching it off that's what it

00:10:57,800 --> 00:11:00,949
looks like with it off so this is

00:10:59,209 --> 00:11:03,199
actually a handy little property if you

00:11:00,949 --> 00:11:04,910
want to normalize what things look like

00:11:03,199 --> 00:11:06,800
what your site looks like across

00:11:04,910 --> 00:11:09,259
different browsers if you set font

00:11:06,800 --> 00:11:12,050
kerning then they all do the same and

00:11:09,259 --> 00:11:14,120
it's different from letter spacing right

00:11:12,050 --> 00:11:17,809
letter spacing as a constant increment

00:11:14,120 --> 00:11:21,170
added to all the letters and yes you can

00:11:17,809 --> 00:11:23,440
make it negative way negative if you

00:11:21,170 --> 00:11:29,450
don't have to do this

00:11:23,440 --> 00:11:31,430
right performance the first thing you

00:11:29,450 --> 00:11:34,870
can do to have better font performance

00:11:31,430 --> 00:11:37,430
is to subset the font and lots this is a

00:11:34,870 --> 00:11:39,050
screenshot from font squirrel but lots

00:11:37,430 --> 00:11:41,540
of different sites that provide fonts

00:11:39,050 --> 00:11:44,120
will do this for you so for example if

00:11:41,540 --> 00:11:45,770
your site it only has sections in

00:11:44,120 --> 00:11:48,320
European languages and the font you're

00:11:45,770 --> 00:11:50,660
using covers Chinese you can say a lot

00:11:48,320 --> 00:11:56,780
of space just by telling it to drop the

00:11:50,660 --> 00:11:58,430
Chinese characters you can also try to

00:11:56,780 --> 00:12:01,670
subset some of the other open type

00:11:58,430 --> 00:12:03,560
tables apart from the glyphs use extreme

00:12:01,670 --> 00:12:05,510
caution if you do that it's very easy to

00:12:03,560 --> 00:12:07,520
break stuff like you think it looks okay

00:12:05,510 --> 00:12:09,350
and it's smaller but now Arabic doesn't

00:12:07,520 --> 00:12:10,850
work and it's all separate letters

00:12:09,350 --> 00:12:12,410
rather than joined up letters that sort

00:12:10,850 --> 00:12:14,840
of thing they use a tool that does it

00:12:12,410 --> 00:12:16,640
these slides are online on my github and

00:12:14,840 --> 00:12:21,620
I've got links here to some tools that

00:12:16,640 --> 00:12:23,390
will do that for you the other thing you

00:12:21,620 --> 00:12:25,070
can do is append instead of sending an

00:12:23,390 --> 00:12:26,990
open try for a true type font you can

00:12:25,070 --> 00:12:29,570
use something that's designed to be

00:12:26,990 --> 00:12:31,370
distributed on the web so wofe one it

00:12:29,570 --> 00:12:34,100
was the first example when I first

00:12:31,370 --> 00:12:35,960
started getting into involved in fonts I

00:12:34,100 --> 00:12:37,910
would go to typography conferences and

00:12:35,960 --> 00:12:39,830
there would be typographers gap on stage

00:12:37,910 --> 00:12:42,830
and it's a hell we are the last

00:12:39,830 --> 00:12:44,990
generation the typographers the people

00:12:42,830 --> 00:12:46,640
on the web will steal all our livelyhood

00:12:44,990 --> 00:12:49,250
my children will starve etcetera

00:12:46,640 --> 00:12:51,140
etcetera and meanwhile the browser guys

00:12:49,250 --> 00:12:54,230
are said those people over there they

00:12:51,140 --> 00:12:55,400
want DRM and the web it's terrible

00:12:54,230 --> 00:12:57,800
they're going to force us to be

00:12:55,400 --> 00:12:58,940
policemen and actually they had a point

00:12:57,800 --> 00:13:01,100
you know Digital Millennium Copyright

00:12:58,940 --> 00:13:03,080
Act you can be an accessory to

00:13:01,100 --> 00:13:05,210
infringement so if a browser displays a

00:13:03,080 --> 00:13:07,520
font that's not allowed to be used in a

00:13:05,210 --> 00:13:09,560
particular website are they an accessory

00:13:07,520 --> 00:13:12,110
could they have like financial penalties

00:13:09,560 --> 00:13:13,970
it was a reasonable thing and then we

00:13:12,110 --> 00:13:16,370
actually got those two groups to talk to

00:13:13,970 --> 00:13:18,560
each other and the font guy said no

00:13:16,370 --> 00:13:22,520
actually what we want is like a link to

00:13:18,560 --> 00:13:24,080
the license oh well that's easy we can

00:13:22,520 --> 00:13:26,180
just add a bit of metadata that does

00:13:24,080 --> 00:13:28,850
that so what we were doing that we added

00:13:26,180 --> 00:13:30,650
rid of compression as well so wofe one

00:13:28,850 --> 00:13:32,150
uses gzip compression this was an easy

00:13:30,650 --> 00:13:35,120
sell to get this in the browsers because

00:13:32,150 --> 00:13:36,870
it's already used in HTTP so using PNG

00:13:35,120 --> 00:13:38,820
so there we go there's a

00:13:36,870 --> 00:13:41,400
scription or what wofe wonders it adds

00:13:38,820 --> 00:13:43,650
some metadata optionally some private

00:13:41,400 --> 00:13:45,210
data as well the private data can have

00:13:43,650 --> 00:13:47,310
anything that the font vendor wants to

00:13:45,210 --> 00:13:49,140
put in there and the only thing that the

00:13:47,310 --> 00:13:51,600
Waffen spec says about it is that it

00:13:49,140 --> 00:13:54,240
must not affect rendering you will fail

00:13:51,600 --> 00:13:56,430
if you do in other words if I put some

00:13:54,240 --> 00:13:59,250
fancy data like a license key in there

00:13:56,430 --> 00:14:01,170
and then you use it and you haven't paid

00:13:59,250 --> 00:14:02,790
for it it's between your lawyer and the

00:14:01,170 --> 00:14:04,050
font guys lawyer it's got nothing to do

00:14:02,790 --> 00:14:07,020
with the browser the browser does not

00:14:04,050 --> 00:14:09,270
have to get involved so what to one

00:14:07,020 --> 00:14:11,790
swarf one was a success we added woth 2

00:14:09,270 --> 00:14:14,220
which has some much cleverer compression

00:14:11,790 --> 00:14:17,640
so here's an example this is at the HM

00:14:14,220 --> 00:14:20,040
TX table horizontal metrics and you can

00:14:17,640 --> 00:14:23,070
see that this glyph here has an X min Y

00:14:20,040 --> 00:14:24,930
min x max Y max and it also has what's

00:14:23,070 --> 00:14:27,060
called a left side bearing which is how

00:14:24,930 --> 00:14:29,040
far away's is from the axis that's the

00:14:27,060 --> 00:14:31,410
same as X min that information is in

00:14:29,040 --> 00:14:33,060
there twice and it's identical so we

00:14:31,410 --> 00:14:35,990
throw one of them away because we can

00:14:33,060 --> 00:14:38,580
calculate it when we get the font back

00:14:35,990 --> 00:14:40,410
similarly the glyph table which is where

00:14:38,580 --> 00:14:42,450
the actual outline data is stored has

00:14:40,410 --> 00:14:44,190
lots of dirt it has bytes it has long in

00:14:42,450 --> 00:14:45,900
it has all sorts of stuff if you put

00:14:44,190 --> 00:14:48,600
those in separate streams and compress

00:14:45,900 --> 00:14:52,290
them it's better than compressing the

00:14:48,600 --> 00:14:54,060
whole lot the locker table that's a set

00:14:52,290 --> 00:14:57,150
of pointers for each character where

00:14:54,060 --> 00:14:58,260
does the corresponding glyphs start well

00:14:57,150 --> 00:14:59,910
we're gonna have to recalculate that

00:14:58,260 --> 00:15:04,040
anyway we throw the whole table away

00:14:59,910 --> 00:15:07,400
great compression if you compressing 0

00:15:04,040 --> 00:15:11,640
so that's off to compression summarized

00:15:07,400 --> 00:15:13,140
better compression we also cover true

00:15:11,640 --> 00:15:16,230
type collections which is where you have

00:15:13,140 --> 00:15:22,020
multiple fonts in in one font file one

00:15:16,230 --> 00:15:24,330
font file so when I say it's better if

00:15:22,020 --> 00:15:26,640
so this hundred percent here that is the

00:15:24,330 --> 00:15:29,550
entire Google font corpus and the entire

00:15:26,640 --> 00:15:31,680
Adobe font corpus taken as 100% that

00:15:29,550 --> 00:15:34,500
size if you compress that whole lot with

00:15:31,680 --> 00:15:39,270
wofe one you get down to 45% with rough

00:15:34,500 --> 00:15:41,520
to 32% it does vary a little so if

00:15:39,270 --> 00:15:44,770
you're using true type glyphs you get

00:15:41,520 --> 00:15:48,230
good compression 68%

00:15:44,770 --> 00:15:49,850
if you using type 1 glyphs or postscript

00:15:48,230 --> 00:15:54,100
glyphs you get slightly worse

00:15:49,850 --> 00:15:54,100
compression it's still pretty good

00:15:55,060 --> 00:16:00,050
now we already L saw the descriptors and

00:15:58,250 --> 00:16:02,000
the properties and stuff so on the

00:16:00,050 --> 00:16:04,040
left-hand side we've got some CSS which

00:16:02,000 --> 00:16:06,380
has a bunch of descriptors on the right

00:16:04,040 --> 00:16:08,870
we have some code which looks remarkably

00:16:06,380 --> 00:16:11,200
similar it has the same stuff the weight

00:16:08,870 --> 00:16:13,730
and the style and the family and the URL

00:16:11,200 --> 00:16:18,080
but what we declared there is an object

00:16:13,730 --> 00:16:20,450
and then we just it returns a promise

00:16:18,080 --> 00:16:22,220
once it's loaded and then what our

00:16:20,450 --> 00:16:23,690
script does is it throws a class on

00:16:22,220 --> 00:16:25,700
there so the font actually gets applied

00:16:23,690 --> 00:16:28,550
so this means you can control it

00:16:25,700 --> 00:16:35,810
yourself and you can decide when it gets

00:16:28,550 --> 00:16:37,190
loaded ok the future it's not that far

00:16:35,810 --> 00:16:39,980
future what I've been talking about

00:16:37,190 --> 00:16:43,480
mostly is CSS fonts 3 and I'm going to

00:16:39,980 --> 00:16:43,480
tell you basically what's in France for

00:16:44,710 --> 00:16:50,000
don't we all mourn illuminated

00:16:48,260 --> 00:16:52,340
manuscripts everyone wants to put one on

00:16:50,000 --> 00:16:54,440
their website right it's it's everyone

00:16:52,340 --> 00:16:58,990
is itching ok that's not really why we

00:16:54,440 --> 00:16:58,990
did it that's why we added color fonts

00:17:02,230 --> 00:17:06,920
so this this reminds me there was a

00:17:05,000 --> 00:17:09,230
typography conference I went to and the

00:17:06,920 --> 00:17:11,480
guy showed these amazing like the length

00:17:09,230 --> 00:17:13,280
of this stage painted cloth things

00:17:11,480 --> 00:17:15,560
because this is tradition in India a

00:17:13,280 --> 00:17:18,170
sign painting where people actually hand

00:17:15,560 --> 00:17:20,150
paint the signs and it's kind of a dying

00:17:18,170 --> 00:17:21,890
art because now it's cheaper to just get

00:17:20,150 --> 00:17:24,050
it done on a vinyl printer or something

00:17:21,890 --> 00:17:25,280
so this guy was wandering around talking

00:17:24,050 --> 00:17:26,449
to these people these traditional

00:17:25,280 --> 00:17:28,430
painters and getting them to design

00:17:26,449 --> 00:17:30,830
fonts for him and I like what we don't

00:17:28,430 --> 00:17:32,510
have computers that's fine you can paint

00:17:30,830 --> 00:17:35,000
them out for me as you normally do so

00:17:32,510 --> 00:17:36,620
they provided them all in full color

00:17:35,000 --> 00:17:38,000
like they would normally it's like oh

00:17:36,620 --> 00:17:42,010
you can't do that you can't put that in

00:17:38,000 --> 00:17:45,700
the font when they can which is good

00:17:42,010 --> 00:17:45,700
like this see

00:17:46,010 --> 00:17:49,950
not so fast so this is a traditional way

00:17:49,320 --> 00:17:52,410
to do it

00:17:49,950 --> 00:17:53,610
you stick all these in illustrator you

00:17:52,410 --> 00:17:55,590
get in all different colors you

00:17:53,610 --> 00:17:57,120
carefully line them up and when you go

00:17:55,590 --> 00:17:59,400
to print no one can tell that you did

00:17:57,120 --> 00:18:01,290
that on the web you really can you put

00:17:59,400 --> 00:18:03,420
the same text in nine times your search

00:18:01,290 --> 00:18:04,950
engine optimization goes down the tubes

00:18:03,420 --> 00:18:09,960
because you're not allowed to repeat

00:18:04,950 --> 00:18:11,730
text like that however as I mentioned

00:18:09,960 --> 00:18:14,910
now you can there are different ways to

00:18:11,730 --> 00:18:15,420
in OpenType 1.7 you can have colored

00:18:14,910 --> 00:18:16,980
lips

00:18:15,420 --> 00:18:19,710
there's actually four or five different

00:18:16,980 --> 00:18:20,940
ways to do that and I'm only going to

00:18:19,710 --> 00:18:22,920
talk about two of them because the

00:18:20,940 --> 00:18:24,510
others suck because they are using

00:18:22,920 --> 00:18:27,750
bitmap fonts and we shouldn't really be

00:18:24,510 --> 00:18:29,160
doing that so here's the first one it's

00:18:27,750 --> 00:18:31,520
called color and see pal

00:18:29,160 --> 00:18:34,650
two new tables in the open tables file

00:18:31,520 --> 00:18:36,690
color holds a stack of true type

00:18:34,650 --> 00:18:39,990
outlines so instead of one it has

00:18:36,690 --> 00:18:41,820
multiple and then see pal has a color

00:18:39,990 --> 00:18:43,350
palette it tells you what each outline

00:18:41,820 --> 00:18:48,480
what color it uses just a solid color

00:18:43,350 --> 00:18:51,990
fill nothing fancy like this see that's

00:18:48,480 --> 00:18:59,270
real text I can select it I can delete

00:18:51,990 --> 00:19:04,050
it change it isn't that cool is it no no

00:18:59,270 --> 00:19:08,100
it's not cool it sucks I put those

00:19:04,050 --> 00:19:08,790
colors in the font that's not where they

00:19:08,100 --> 00:19:14,880
belong

00:19:08,790 --> 00:19:17,490
they belong in the style sheet so in CSS

00:19:14,880 --> 00:19:19,140
four we have a font palette property

00:19:17,490 --> 00:19:20,970
which so fonts can have multiple

00:19:19,140 --> 00:19:22,800
palettes like one for light backgrounds

00:19:20,970 --> 00:19:24,480
a month or dark backgrounds okay cool

00:19:22,800 --> 00:19:27,300
you get to select between them more

00:19:24,480 --> 00:19:29,840
interesting font power values you can

00:19:27,300 --> 00:19:33,150
actually override or completely override

00:19:29,840 --> 00:19:34,830
individual values in the font power so

00:19:33,150 --> 00:19:36,480
that's is that's much better now we

00:19:34,830 --> 00:19:40,200
actually get to put the colors in the

00:19:36,480 --> 00:19:42,900
style sheet so here's another example in

00:19:40,200 --> 00:19:47,220
OpenType you can also have SVG glyphs so

00:19:42,900 --> 00:19:49,080
who uses SVG fonts good don't ever do

00:19:47,220 --> 00:19:50,670
that that was a kind of a quick hack

00:19:49,080 --> 00:19:53,310
that we did because in the early days

00:19:50,670 --> 00:19:55,500
especially on mobile phones before they

00:19:53,310 --> 00:19:57,390
were smartphones there were no access to

00:19:55,500 --> 00:19:58,260
the fonts and people wanted their SVG to

00:19:57,390 --> 00:20:00,480
have a font

00:19:58,260 --> 00:20:02,880
we made this quick hack of SVG fonts

00:20:00,480 --> 00:20:05,160
this is different this is just this is

00:20:02,880 --> 00:20:09,270
an open type file except the glyphs are

00:20:05,160 --> 00:20:11,160
drawn using SVG the same palette but

00:20:09,270 --> 00:20:12,860
this time we've got what I just said you

00:20:11,160 --> 00:20:16,590
can alter the power so here's an example

00:20:12,860 --> 00:20:18,750
that's so both of these are supported by

00:20:16,590 --> 00:20:20,220
Mozilla so they're actually displaying

00:20:18,750 --> 00:20:28,440
using the technologies that I'm talking

00:20:20,220 --> 00:20:32,570
about here okay so there we go so let's

00:20:28,440 --> 00:20:32,570
have a look at this let's change this to

00:20:34,490 --> 00:20:43,200
yellow for example ooh oops that's

00:20:42,840 --> 00:20:46,560
better

00:20:43,200 --> 00:20:49,050
or I can I can change the hue or

00:20:46,560 --> 00:20:53,160
whatever I can rotate it around there we

00:20:49,050 --> 00:20:55,830
go and this is fake by the way it's not

00:20:53,160 --> 00:20:57,870
actually implemented in Firefox yet so I

00:20:55,830 --> 00:20:59,460
faked it up with a bit of script but

00:20:57,870 --> 00:21:00,690
that shows you how that will work you

00:20:59,460 --> 00:21:03,900
can see how this would work in your

00:21:00,690 --> 00:21:05,850
stash sheet so what it takes is OUTFRONT

00:21:03,900 --> 00:21:07,830
palette values then you give it a name I

00:21:05,850 --> 00:21:09,210
call this optimal because it's kind of

00:21:07,830 --> 00:21:11,070
or tunnel colors you can make it

00:21:09,210 --> 00:21:13,440
whatever you want you say which font it

00:21:11,070 --> 00:21:14,520
applies to you say which palette it

00:21:13,440 --> 00:21:16,620
applies to because there could be

00:21:14,520 --> 00:21:25,320
multiple ones and then you just override

00:21:16,620 --> 00:21:27,870
some or all of the palette values okay

00:21:25,320 --> 00:21:30,180
so earlier I showed font synthesis which

00:21:27,870 --> 00:21:32,670
is actually how you disable synthesis

00:21:30,180 --> 00:21:34,770
and I said you could get rid of fake

00:21:32,670 --> 00:21:37,260
Boldin you could get rid of faith italic

00:21:34,770 --> 00:21:41,010
in CSS for you can also get rid of fake

00:21:37,260 --> 00:21:43,410
small caps so when small caps exist in

00:21:41,010 --> 00:21:46,470
the front they're designed to be small

00:21:43,410 --> 00:21:48,330
cap size if the browser sees that they

00:21:46,470 --> 00:21:50,220
need you need small caps but it doesn't

00:21:48,330 --> 00:21:52,260
have them it takes the uppercase letter

00:21:50,220 --> 00:21:53,940
and it squashes it which makes it kind

00:21:52,260 --> 00:21:56,280
of too thin and it doesn't really fit

00:21:53,940 --> 00:21:58,170
very well so you might prefer to use

00:21:56,280 --> 00:22:00,450
this property and say disable small caps

00:21:58,170 --> 00:22:02,580
if so you can use that support something

00:22:00,450 --> 00:22:04,200
like that disable small caps and instead

00:22:02,580 --> 00:22:06,090
use a different color make it grey or

00:22:04,200 --> 00:22:08,780
something like that so it's capitals but

00:22:06,090 --> 00:22:11,430
a little less prominent

00:22:08,780 --> 00:22:13,560
there are also some you so remember the

00:22:11,430 --> 00:22:18,480
traditional font family values the

00:22:13,560 --> 00:22:20,160
generic one serif sans serif fantasy has

00:22:18,480 --> 00:22:20,940
anyone ever used fantasy in the

00:22:20,160 --> 00:22:23,790
stylesheet

00:22:20,940 --> 00:22:25,560
I did once for a test but apart from

00:22:23,790 --> 00:22:27,240
that no it's a stupid idea but these

00:22:25,560 --> 00:22:29,130
ones are more relevant so math for

00:22:27,240 --> 00:22:31,260
example means that you want whatever

00:22:29,130 --> 00:22:35,670
font is best at displaying the equations

00:22:31,260 --> 00:22:38,640
useful emoji obviously frank song so

00:22:35,670 --> 00:22:40,410
this is for Chinese so we have Seraphin

00:22:38,640 --> 00:22:42,270
son serif and there are basically three

00:22:40,410 --> 00:22:43,830
categories in Chinese there's one that

00:22:42,270 --> 00:22:45,450
looks kinda sarahfey it has the sort of

00:22:43,830 --> 00:22:47,490
bits at the end of the strokes and one

00:22:45,450 --> 00:22:48,690
that's very blocky and looks like a son

00:22:47,490 --> 00:22:50,700
serif and there's one that's sort of in

00:22:48,690 --> 00:22:54,930
between which they didn't get access to

00:22:50,700 --> 00:22:56,390
so we've added that okay a quick

00:22:54,930 --> 00:22:59,370
question

00:22:56,390 --> 00:23:01,530
so I set font weight to 400 and then he

00:22:59,370 --> 00:23:03,990
use calc to set it to the result of nine

00:23:01,530 --> 00:23:07,410
times 100 what do I get

00:23:03,990 --> 00:23:11,820
do I get 400 or do I get 900 hands up

00:23:07,410 --> 00:23:16,170
for 400 hands up for 900 hands up for

00:23:11,820 --> 00:23:20,910
who thinks this is a trick question yeah

00:23:16,170 --> 00:23:22,920
the answer is 400 that looks like the

00:23:20,910 --> 00:23:24,930
value of font weight is a number it

00:23:22,920 --> 00:23:28,080
isn't if you look in the spec it's one

00:23:24,930 --> 00:23:32,910
of a set of strings 100 is one of those

00:23:28,080 --> 00:23:34,560
strings 200 etcetera mainly because

00:23:32,910 --> 00:23:36,570
that's the way that the platforms in

00:23:34,560 --> 00:23:41,910
particular windows did that which kind

00:23:36,570 --> 00:23:44,100
of sucks but we're changing that in CSS

00:23:41,910 --> 00:23:46,680
for font weight is actually a number and

00:23:44,100 --> 00:23:49,020
goes from 1 to 999 like the open type

00:23:46,680 --> 00:23:50,870
spec says it should much better you'll

00:23:49,020 --> 00:23:53,460
see why that matters in a minute

00:23:50,870 --> 00:23:56,990
variable fonts who's heard of variable

00:23:53,460 --> 00:24:00,090
fonts yes good nice

00:23:56,990 --> 00:24:03,030
variable fonts is a way of putting in a

00:24:00,090 --> 00:24:06,090
font not only the base design that you

00:24:03,030 --> 00:24:07,890
want but also some axes of variation so

00:24:06,090 --> 00:24:11,100
for example you can cover a range of

00:24:07,890 --> 00:24:14,460
weights or a range of widths condensed

00:24:11,100 --> 00:24:17,520
expanded or the slant or whether it has

00:24:14,460 --> 00:24:19,260
optical sizing which means that big a

00:24:17,520 --> 00:24:19,810
big version the small version actually

00:24:19,260 --> 00:24:21,760
use

00:24:19,810 --> 00:24:23,980
or different designs and the most

00:24:21,760 --> 00:24:25,870
interesting one custom you can have a

00:24:23,980 --> 00:24:29,440
custom access to do basically whatever

00:24:25,870 --> 00:24:33,010
you want and so the interesting thing is

00:24:29,440 --> 00:24:35,710
that you download a single font and you

00:24:33,010 --> 00:24:38,410
say how you want it to be used like this

00:24:35,710 --> 00:24:40,750
so here's an example oh look it's

00:24:38,410 --> 00:24:42,670
changing is going from a light to a

00:24:40,750 --> 00:24:46,360
heavier weight and also the x height is

00:24:42,670 --> 00:24:49,180
changing as well so that's quite

00:24:46,360 --> 00:24:52,120
interesting how do we do that like this

00:24:49,180 --> 00:24:53,710
so look at the descriptors firstly you

00:24:52,120 --> 00:24:55,750
notice they now have two numbers this

00:24:53,710 --> 00:24:57,580
one says font weight goes from 100 to

00:24:55,750 --> 00:25:00,790
900 meaning it can do anything in

00:24:57,580 --> 00:25:05,770
between font stretch so fun stretches

00:25:00,790 --> 00:25:07,720
are not another of my apologies there

00:25:05,770 --> 00:25:09,520
isn't really a word in English for

00:25:07,720 --> 00:25:11,650
condensed and expanded and all the

00:25:09,520 --> 00:25:13,300
ranges in between so I called it front

00:25:11,650 --> 00:25:15,160
stretch and everyone thinks that means

00:25:13,300 --> 00:25:17,830
it takes the font design and stretches

00:25:15,160 --> 00:25:19,510
it it doesn't and typographers told me

00:25:17,830 --> 00:25:20,770
why do you have that I'm telling what it

00:25:19,510 --> 00:25:23,470
does the like why do you have such a

00:25:20,770 --> 00:25:25,390
shot sucky name it's like well again I

00:25:23,470 --> 00:25:27,850
asked them no one had the better name so

00:25:25,390 --> 00:25:29,650
that's what we're stuck with and font

00:25:27,850 --> 00:25:32,950
style they can do any slant between

00:25:29,650 --> 00:25:35,110
minus 10 degrees and 40 okay and then in

00:25:32,950 --> 00:25:38,080
the actual properties we say what value

00:25:35,110 --> 00:25:39,850
we want with a font weight of 234 it's

00:25:38,080 --> 00:25:42,460
no longer restricted to multiples of 100

00:25:39,850 --> 00:25:44,320
we can have any weight we want and we

00:25:42,460 --> 00:25:47,040
want we want a slightly condensed than

00:25:44,320 --> 00:25:47,040
we want to oblique

00:25:47,490 --> 00:25:50,920
unfortunately at the moment you have to

00:25:49,240 --> 00:25:52,630
do this using these hideous font

00:25:50,920 --> 00:25:54,490
variation settings with their cryptic

00:25:52,630 --> 00:25:56,680
stuff which is horrible

00:25:54,490 --> 00:25:58,300
I notice the weight is two point four

00:25:56,680 --> 00:26:00,160
two point four no no

00:25:58,300 --> 00:26:05,950
because it goes from zero to three point

00:26:00,160 --> 00:26:07,510
two not not - 909 like it should do but

00:26:05,950 --> 00:26:09,550
okay that's fine we can deal with this

00:26:07,510 --> 00:26:12,460
this is very early on issue so if you're

00:26:09,550 --> 00:26:15,460
using Safari technical preview on OS X

00:26:12,460 --> 00:26:19,090
or if you using Chrome 62 and above on

00:26:15,460 --> 00:26:20,950
Windows or OS X then it will work on the

00:26:19,090 --> 00:26:22,520
others not yet Firefox

00:26:20,950 --> 00:26:25,310
not yet

00:26:22,520 --> 00:26:26,990
and you can animate it as well so

00:26:25,310 --> 00:26:28,580
there's an example where animating front

00:26:26,990 --> 00:26:30,410
variation setting so the weight will go

00:26:28,580 --> 00:26:32,630
from point three to three point one

00:26:30,410 --> 00:26:41,390
yeah the syntax here is a bit sucky but

00:26:32,630 --> 00:26:43,040
there we are mmm breathy so this is

00:26:41,390 --> 00:26:46,010
Chrome I'm switching from Firefox to

00:26:43,040 --> 00:26:49,190
Chrome and you can see a gratuitous Lee

00:26:46,010 --> 00:26:51,020
animated example which has taken the

00:26:49,190 --> 00:26:57,770
same font and used it to produce three

00:26:51,020 --> 00:27:00,800
different weights this is a tape that

00:26:57,770 --> 00:27:02,090
there's a famous people used to paint

00:27:00,800 --> 00:27:03,350
horses and they didn't know how they

00:27:02,090 --> 00:27:04,670
actually ran because they didn't have

00:27:03,350 --> 00:27:06,200
cameras and once they had cameras they

00:27:04,670 --> 00:27:09,080
figure about how they work and this is

00:27:06,200 --> 00:27:16,820
using jisub to substitute lifts to

00:27:09,080 --> 00:27:20,450
produce a running horse oh this is a

00:27:16,820 --> 00:27:23,270
more reasonable example so you can take

00:27:20,450 --> 00:27:27,920
text and you can make it fit whatever

00:27:23,270 --> 00:27:30,740
space you have available look at that so

00:27:27,920 --> 00:27:33,710
that's using a variable font so that it

00:27:30,740 --> 00:27:35,270
exactly fits the available space that's

00:27:33,710 --> 00:27:43,070
cool that's your thing you can actually

00:27:35,270 --> 00:27:47,780
do something useful with or you can do

00:27:43,070 --> 00:27:49,520
stupid like that this this is

00:27:47,780 --> 00:27:51,560
basically this font has a single

00:27:49,520 --> 00:27:58,040
animated square that makes everything

00:27:51,560 --> 00:27:59,930
else from that yeah this was a more

00:27:58,040 --> 00:28:02,000
serious example so you notice that as

00:27:59,930 --> 00:28:04,100
this gets bolder the line down the

00:28:02,000 --> 00:28:05,750
middle starts getting in the way it's

00:28:04,100 --> 00:28:07,820
not very clear so beyond a certain point

00:28:05,750 --> 00:28:11,270
it drops it and just has it at the top

00:28:07,820 --> 00:28:12,980
and bottom makes it clearer so it's not

00:28:11,270 --> 00:28:14,330
just animating weight or whatever the

00:28:12,980 --> 00:28:15,860
variable fonts can do it can do all

00:28:14,330 --> 00:28:18,980
sorts of nice stuff and generally

00:28:15,860 --> 00:28:23,450
improve things oh now look at this

00:28:18,980 --> 00:28:25,550
example so the weight is being animated

00:28:23,450 --> 00:28:27,500
and the height of the central bar is

00:28:25,550 --> 00:28:30,050
being animated and the spacings being

00:28:27,500 --> 00:28:31,970
animated the end result is wherever you

00:28:30,050 --> 00:28:34,970
go in this design space it takes the

00:28:31,970 --> 00:28:36,140
same amount of space so you can animate

00:28:34,970 --> 00:28:38,330
it without reflowing

00:28:36,140 --> 00:28:40,310
or you can actually make it as part of a

00:28:38,330 --> 00:28:46,070
responsive design so that it fits the

00:28:40,310 --> 00:28:49,160
available space so Jason Parman tell who

00:28:46,070 --> 00:28:51,020
wrote a book on responsive design said

00:28:49,160 --> 00:28:52,910
that he thought this was the variable

00:28:51,020 --> 00:28:54,710
fonts the most significant design

00:28:52,910 --> 00:28:56,390
development force on the web since

00:28:54,710 --> 00:28:58,070
responsive design itself he thinks is

00:28:56,390 --> 00:29:01,300
going to produce a whole new revolution

00:28:58,070 --> 00:29:04,640
in responsive design just by using these

00:29:01,300 --> 00:29:07,180
and that's me I have finished any

00:29:04,640 --> 00:29:07,180
questions

00:29:07,890 --> 00:29:14,130

YouTube URL: https://www.youtube.com/watch?v=WavFhB6NwHw


