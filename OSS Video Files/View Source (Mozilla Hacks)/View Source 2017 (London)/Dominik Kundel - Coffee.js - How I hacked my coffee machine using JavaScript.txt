Title: Dominik Kundel - Coffee.js - How I hacked my coffee machine using JavaScript
Publication date: 2017-11-20
Playlist: View Source 2017 (London)
Description: 
	View Source 2017.

View Source is a conference for front-end web developers. The goal of this event is to provide an in-depth, practical look at current and on-the-horizon technologies, with plenty of opportunities for conversation.
Captions: 
	00:00:03,060 --> 00:00:08,590
so yeah hi everyone my name is Dominic

00:00:05,800 --> 00:00:11,139
as mentioned before I work as developer

00:00:08,590 --> 00:00:12,969
evangelist for Twilio Giulio's basically

00:00:11,139 --> 00:00:15,219
and cloud communications platform so we

00:00:12,969 --> 00:00:16,810
have a bunch of different API that allow

00:00:15,219 --> 00:00:19,720
you to do crazy things like sending and

00:00:16,810 --> 00:00:23,199
receiving SMS building video chat or

00:00:19,720 --> 00:00:26,380
voice calls into your applications but

00:00:23,199 --> 00:00:28,869
today I'm here to talk about how I act

00:00:26,380 --> 00:00:31,630
my coffee machine or rather this was

00:00:28,869 --> 00:00:34,269
more like the sort of short title and

00:00:31,630 --> 00:00:36,460
fit into an like call for papers the

00:00:34,269 --> 00:00:38,920
correct title is how I turned this

00:00:36,460 --> 00:00:43,420
coffee machine of my flat main into this

00:00:38,920 --> 00:00:46,239
slightly tuned coffee machine in like

00:00:43,420 --> 00:00:49,629
with with the help of my flatmate a

00:00:46,239 --> 00:00:51,400
couple of beers and a Friday evening so

00:00:49,629 --> 00:00:53,260
the first thing typically when I tell

00:00:51,400 --> 00:00:55,059
people that I have a coffee machine that

00:00:53,260 --> 00:00:57,699
has an API

00:00:55,059 --> 00:01:00,549
they are asking why why would you hack

00:00:57,699 --> 00:01:02,290
your coffee machine and the main reason

00:01:00,549 --> 00:01:04,150
for me was that it's interesting when I

00:01:02,290 --> 00:01:06,430
was a kid I used to love taking apart my

00:01:04,150 --> 00:01:07,660
computer taking on taking a peek under

00:01:06,430 --> 00:01:09,520
the hood trying to understand what's

00:01:07,660 --> 00:01:11,730
actually going on my mom wasn't too

00:01:09,520 --> 00:01:13,900
really excited about this

00:01:11,730 --> 00:01:15,550
mainly because she was scared that I'm

00:01:13,900 --> 00:01:17,470
gonna break this and not gonna like to

00:01:15,550 --> 00:01:18,730
set it put it all together again

00:01:17,470 --> 00:01:22,540
especially once I took apart the

00:01:18,730 --> 00:01:24,550
computer of my neighbors but kind of

00:01:22,540 --> 00:01:27,700
today we can't do this a lot anymore

00:01:24,550 --> 00:01:29,860
because the people that manufacture most

00:01:27,700 --> 00:01:32,050
of the electronics that we use put a lot

00:01:29,860 --> 00:01:34,240
of effort and us not taking a big gun

00:01:32,050 --> 00:01:36,550
under the hood so like I can't even

00:01:34,240 --> 00:01:38,920
replace the battery in my laptop or my

00:01:36,550 --> 00:01:41,290
phone and I figured let's kind of get

00:01:38,920 --> 00:01:43,480
back to understanding what house stuff

00:01:41,290 --> 00:01:46,030
actually works the other thing is I have

00:01:43,480 --> 00:01:48,010
an Amazon Alexa at home and I like

00:01:46,030 --> 00:01:49,690
controlling my stuff and it's great if

00:01:48,010 --> 00:01:51,159
you can turn on the lights but my

00:01:49,690 --> 00:01:54,159
flatmate was like it would be great if

00:01:51,159 --> 00:01:56,050
we could control our coffee and so far

00:01:54,159 --> 00:01:59,200
everything that we had in our apartment

00:01:56,050 --> 00:02:01,900
was kind of bought with IOT

00:01:59,200 --> 00:02:03,159
compatibility and so it was another

00:02:01,900 --> 00:02:07,360
challenge to figure out how we can

00:02:03,159 --> 00:02:10,239
actually make this work with with IOT

00:02:07,360 --> 00:02:12,670
like building our own IOT device and get

00:02:10,239 --> 00:02:14,890
that integrated into Alexa and then the

00:02:12,670 --> 00:02:16,400
other thing is I said I work for Twilio

00:02:14,890 --> 00:02:17,750
we have api's for everything

00:02:16,400 --> 00:02:20,209
and therefore I think everything should

00:02:17,750 --> 00:02:23,480
have an API and I figured why not my

00:02:20,209 --> 00:02:25,250
coffee machine so and then the other

00:02:23,480 --> 00:02:26,959
thing is why would I use JavaScript

00:02:25,250 --> 00:02:28,610
because typically when you think of

00:02:26,959 --> 00:02:32,720
hardware hacking you think of like some

00:02:28,610 --> 00:02:34,340
low-level C or C++ using an Arduino and

00:02:32,720 --> 00:02:36,920
not necessarily using something like

00:02:34,340 --> 00:02:38,720
JavaScript and there were multiple

00:02:36,920 --> 00:02:42,200
reasons the first thing is I haven't

00:02:38,720 --> 00:02:43,700
written JavaScript C++ in ages last time

00:02:42,200 --> 00:02:46,730
it was in University and I kind of like

00:02:43,700 --> 00:02:48,739
dropped that out of my hat and then

00:02:46,730 --> 00:02:51,769
while JavaScript is something I use

00:02:48,739 --> 00:02:53,690
daily so I was fairly confident in being

00:02:51,769 --> 00:02:56,180
able to quickly debug things kind of

00:02:53,690 --> 00:02:57,829
prototype things and so I thought it

00:02:56,180 --> 00:03:00,470
would be a more suitable thing from that

00:02:57,829 --> 00:03:02,090
perspective the other thing is we wanted

00:03:00,470 --> 00:03:04,220
to have a web server and since

00:03:02,090 --> 00:03:06,799
JavaScript is kind of like always bound

00:03:04,220 --> 00:03:08,389
to the web anyways writing a web server

00:03:06,799 --> 00:03:11,420
there's way easier than kind of

00:03:08,389 --> 00:03:13,549
implementing the same thing in C++ and

00:03:11,420 --> 00:03:15,349
there's also more challenging because if

00:03:13,549 --> 00:03:17,510
you try to Google like coffee machine

00:03:15,349 --> 00:03:20,169
and Arduino you will probably find one

00:03:17,510 --> 00:03:22,190
or two results if you try to find

00:03:20,169 --> 00:03:26,599
JavaScript and coffee machine you will

00:03:22,190 --> 00:03:29,900
find this one so kind of like playing

00:03:26,599 --> 00:03:31,040
with no rulebook was sort of way more

00:03:29,900 --> 00:03:34,340
interesting because we couldn't just

00:03:31,040 --> 00:03:35,750
copy/paste code and kind of try that and

00:03:34,340 --> 00:03:37,489
then the other thing is I have this

00:03:35,750 --> 00:03:39,190
theory that Hardware in JavaScript are

00:03:37,489 --> 00:03:43,040
actually like a really nice match

00:03:39,190 --> 00:03:44,569
because javascript is event-driven and

00:03:43,040 --> 00:03:46,549
hardware as if essentially event-driven

00:03:44,569 --> 00:03:48,379
as well right we want to know when a

00:03:46,549 --> 00:03:50,959
value changed of a sensor we want to

00:03:48,379 --> 00:03:52,970
know when a button has been pressed or

00:03:50,959 --> 00:03:55,190
similar and that's something that we do

00:03:52,970 --> 00:03:58,010
in JavaScript all the time we have

00:03:55,190 --> 00:04:00,229
classes that trigger events we have John

00:03:58,010 --> 00:04:02,750
and ami events like we know how to work

00:04:00,229 --> 00:04:05,269
with events if we if we know how to use

00:04:02,750 --> 00:04:06,769
JavaScript so it's sort of a nice match

00:04:05,269 --> 00:04:08,840
from that perspective already and we

00:04:06,769 --> 00:04:12,319
will see that later that actually coming

00:04:08,840 --> 00:04:14,720
into play and just like anyone who ever

00:04:12,319 --> 00:04:16,340
wanted to do some hardware hacking I had

00:04:14,720 --> 00:04:19,070
a bunch of hardware at home without ever

00:04:16,340 --> 00:04:20,900
using it so I had a couple of options

00:04:19,070 --> 00:04:24,050
actually doing that with JavaScript as

00:04:20,900 --> 00:04:26,570
well the first option was Esprit no so

00:04:24,050 --> 00:04:29,930
as pre no is a project that allows you

00:04:26,570 --> 00:04:31,970
to run JavaScript on an esp8266

00:04:29,930 --> 00:04:34,070
that's a super tiny microcontroller that

00:04:31,970 --> 00:04:36,770
you can get that has Wi-Fi built in that

00:04:34,070 --> 00:04:39,380
you can get for roughly two bugs on the

00:04:36,770 --> 00:04:41,180
internet and it's extremely tiny the

00:04:39,380 --> 00:04:44,060
problem is by itself you can't just come

00:04:41,180 --> 00:04:45,259
like plug it into USB or something you

00:04:44,060 --> 00:04:48,050
would actually need to have something

00:04:45,259 --> 00:04:51,229
like a note MCU development board for

00:04:48,050 --> 00:04:52,759
that to easily flash it but a screen

00:04:51,229 --> 00:04:56,240
also has their own devices which are

00:04:52,759 --> 00:04:58,250
these Esprit no Pico that I actually had

00:04:56,240 --> 00:04:59,930
at home the problem was that thing

00:04:58,250 --> 00:05:01,940
doesn't have Wi-Fi and the solution to

00:04:59,930 --> 00:05:06,080
get Wi-Fi for that thing is to solder an

00:05:01,940 --> 00:05:09,050
esp8266 on top of that which sounds a

00:05:06,080 --> 00:05:10,550
bit weird it is a bit weird but I also

00:05:09,050 --> 00:05:13,479
didn't want to bother kind of like

00:05:10,550 --> 00:05:16,310
shouldering this on on a Friday evening

00:05:13,479 --> 00:05:17,630
and also it's a really nice web IDE that

00:05:16,310 --> 00:05:21,050
allows you to kind of write the

00:05:17,630 --> 00:05:23,240
JavaScript there and then the other

00:05:21,050 --> 00:05:25,340
option was the tehsil so Tesla is an

00:05:23,240 --> 00:05:28,550
open source hardware project that

00:05:25,340 --> 00:05:30,500
currently is the tehsil - and the nice

00:05:28,550 --> 00:05:32,509
thing here is that it has sort of

00:05:30,500 --> 00:05:34,340
everything that you need for quick

00:05:32,509 --> 00:05:36,530
prototyping already on the board so it

00:05:34,340 --> 00:05:38,720
has Wi-Fi as Ethernet it has real USB

00:05:36,530 --> 00:05:40,250
ports that you can use to connect

00:05:38,720 --> 00:05:43,340
something like a webcam or something

00:05:40,250 --> 00:05:44,990
it has analog and digital pins so you

00:05:43,340 --> 00:05:46,970
can measure pretty much anything you

00:05:44,990 --> 00:05:49,430
want and you can set values easily and

00:05:46,970 --> 00:05:53,720
the coolest thing though is that it runs

00:05:49,430 --> 00:05:55,849
the full node.js so that means we can

00:05:53,720 --> 00:05:57,409
leverage the existing NPM ecosystem if

00:05:55,849 --> 00:05:59,270
we want to build something and that's

00:05:57,409 --> 00:06:01,070
really cool because compared to Esprit

00:05:59,270 --> 00:06:02,750
know for example we aren't limited to

00:06:01,070 --> 00:06:05,680
have the modules that are being provided

00:06:02,750 --> 00:06:08,690
but we can actually like just consume

00:06:05,680 --> 00:06:11,599
anything that we want and I'm using that

00:06:08,690 --> 00:06:14,060
later as well and then the last

00:06:11,599 --> 00:06:16,010
alternative was actually Johnny 5 and

00:06:14,060 --> 00:06:17,570
Johnny 5 contrary to the other two

00:06:16,010 --> 00:06:20,659
projects isn't actually related to any

00:06:17,570 --> 00:06:24,380
hardware instead it is actually a note

00:06:20,659 --> 00:06:25,669
module that kind of allows you to

00:06:24,380 --> 00:06:27,260
interact with different pieces of

00:06:25,669 --> 00:06:29,090
hardware so initially this was with

00:06:27,260 --> 00:06:32,599
Arduinos by the Fermata

00:06:29,090 --> 00:06:34,370
firmware from auto protocol but you can

00:06:32,599 --> 00:06:37,760
also connect this to all sorts of other

00:06:34,370 --> 00:06:40,820
Hardware hardware microcontrollers like

00:06:37,760 --> 00:06:42,979
for example the particle photon or or

00:06:40,820 --> 00:06:43,490
similar and this means that we can again

00:06:42,979 --> 00:06:46,130
sort of

00:06:43,490 --> 00:06:47,630
use the full power of node however with

00:06:46,130 --> 00:06:49,639
depending on the system that we're

00:06:47,630 --> 00:06:51,229
running this on we can't actually

00:06:49,639 --> 00:06:53,960
execute the node code on the

00:06:51,229 --> 00:06:55,520
microcontroller meaning that if we would

00:06:53,960 --> 00:06:56,870
try to run this for example own in our

00:06:55,520 --> 00:06:59,270
Jurina we would actually have to connect

00:06:56,870 --> 00:07:01,069
it to a host system that can run node

00:06:59,270 --> 00:07:02,720
meaning we would have to connect it to a

00:07:01,069 --> 00:07:04,819
Raspberry Pi you would have to have a

00:07:02,720 --> 00:07:06,979
tether to your computer or similar

00:07:04,819 --> 00:07:08,330
things which wasn't really suitable for

00:07:06,979 --> 00:07:10,639
this because we didn't want to have

00:07:08,330 --> 00:07:12,229
something directly connected to the

00:07:10,639 --> 00:07:14,690
coffee machine like an additional

00:07:12,229 --> 00:07:17,449
computer right it should sort of be an

00:07:14,690 --> 00:07:20,960
independent closed up system the nice

00:07:17,449 --> 00:07:22,580
thing is there is a io plug in for the

00:07:20,960 --> 00:07:24,259
tehsil so that means we can use the

00:07:22,580 --> 00:07:26,690
johnny-five library and all the perks of

00:07:24,259 --> 00:07:28,580
it and while running it on the tehsil

00:07:26,690 --> 00:07:30,319
and later if we don't want to use the

00:07:28,580 --> 00:07:32,960
Tesla anymore we just need to change a

00:07:30,319 --> 00:07:35,449
few lines of code and as a result we can

00:07:32,960 --> 00:07:37,240
just point it on any other platform that

00:07:35,449 --> 00:07:39,110
is supported by johnny-five

00:07:37,240 --> 00:07:41,120
all right now let's come to the

00:07:39,110 --> 00:07:42,620
interesting part and that's how did we

00:07:41,120 --> 00:07:44,509
actually hack this and the first

00:07:42,620 --> 00:07:47,000
disclaimer is neither me or my flatmate

00:07:44,509 --> 00:07:49,520
are electrical engineers I gave it a

00:07:47,000 --> 00:07:51,139
stab in University for two semesters and

00:07:49,520 --> 00:07:52,639
then drop that and pretty much with

00:07:51,139 --> 00:07:55,460
dropping the courses I dropped my

00:07:52,639 --> 00:07:57,469
knowledge which you'll see later

00:07:55,460 --> 00:08:00,530
so we approach this in a very scientific

00:07:57,469 --> 00:08:02,750
manner we took the most valuable tool

00:08:00,530 --> 00:08:03,979
most expensive tool that and that you

00:08:02,750 --> 00:08:06,740
can have for hardware hacking a

00:08:03,979 --> 00:08:08,000
screwdriver and we opened this open the

00:08:06,740 --> 00:08:10,810
Machine and just picked a look at it

00:08:08,000 --> 00:08:13,639
it's a bit dark here but will still work

00:08:10,810 --> 00:08:15,590
and we found some interesting pieces and

00:08:13,639 --> 00:08:17,690
the interesting pieces were sort of in

00:08:15,590 --> 00:08:20,449
that corner and there were three

00:08:17,690 --> 00:08:25,690
different pieces these ones a

00:08:20,449 --> 00:08:27,860
microcontroller a control plate and an

00:08:25,690 --> 00:08:29,599
interesting cable and it's interesting

00:08:27,860 --> 00:08:31,849
because that was just like an actual

00:08:29,599 --> 00:08:33,409
plugged in cable they connected the

00:08:31,849 --> 00:08:36,320
microcontroller which is basically the

00:08:33,409 --> 00:08:38,779
brain of the of the coffee machine with

00:08:36,320 --> 00:08:41,270
the buttons that work on a kind of power

00:08:38,779 --> 00:08:43,070
way to inter interact with it and that

00:08:41,270 --> 00:08:45,430
meant that since it's a pluggable cable

00:08:43,070 --> 00:08:48,260
we can just take the control plate out

00:08:45,430 --> 00:08:51,920
and take a look at it oh so that's how

00:08:48,260 --> 00:08:54,579
it looked like and then our idea was

00:08:51,920 --> 00:08:56,750
that if we would kind of

00:08:54,579 --> 00:08:57,430
reverse-engineer the protocol that just

00:08:56,750 --> 00:09:00,470
transfer

00:08:57,430 --> 00:09:02,600
transferred via this cable we can sort

00:09:00,470 --> 00:09:05,540
of spoof the control plate and instead

00:09:02,600 --> 00:09:07,370
use our Tesla to send in the command so

00:09:05,540 --> 00:09:09,230
in order to have reverse-engineer the

00:09:07,370 --> 00:09:11,120
protocol we just jammed a bunch of

00:09:09,230 --> 00:09:14,270
jumper wires into that cable it's sort

00:09:11,120 --> 00:09:17,570
of fit it fits up to today so sort of

00:09:14,270 --> 00:09:20,560
works and then we kind of connected the

00:09:17,570 --> 00:09:25,310
other side to the tehsil to figure out

00:09:20,560 --> 00:09:27,230
or like connect one side to the control

00:09:25,310 --> 00:09:29,660
plate and the other side to the Tesla to

00:09:27,230 --> 00:09:31,160
figure out what's the protocol there so

00:09:29,660 --> 00:09:32,900
what do we know just by looking at the

00:09:31,160 --> 00:09:35,780
board we knew that there were eight

00:09:32,900 --> 00:09:38,270
cables or pins there were six switches

00:09:35,780 --> 00:09:40,610
and there were seven LEDs so we made

00:09:38,270 --> 00:09:43,460
some assumptions at least one cable had

00:09:40,610 --> 00:09:51,310
to be power or if we look at it probably

00:09:43,460 --> 00:09:55,460
gonna be the right one and so it's cool

00:09:51,310 --> 00:09:57,860
and we needed at least three pins plus

00:09:55,460 --> 00:10:00,710
power to kind of have an idea around the

00:09:57,860 --> 00:10:04,640
buttons just based on like a binary

00:10:00,710 --> 00:10:07,670
protocol and three pins plus power R for

00:10:04,640 --> 00:10:09,590
the LEDs and then what's the H cable for

00:10:07,670 --> 00:10:13,340
well we don't know but we'll figure it

00:10:09,590 --> 00:10:16,730
out so again we kind of started with an

00:10:13,340 --> 00:10:18,800
actual naive approach and we wired up

00:10:16,730 --> 00:10:20,300
the first pin to 3.3 volts because we

00:10:18,800 --> 00:10:23,840
had three point three and five volts on

00:10:20,300 --> 00:10:26,150
the machine we figured shall work and

00:10:23,840 --> 00:10:29,600
then connected all the other pins to on

00:10:26,150 --> 00:10:32,780
the tehsil and set them to analog mode

00:10:29,600 --> 00:10:35,540
so that's the two and then basically we

00:10:32,780 --> 00:10:37,970
wrote the small script that would

00:10:35,540 --> 00:10:40,700
require the johnny-five helper library

00:10:37,970 --> 00:10:42,920
and it would require the Tesla i/o

00:10:40,700 --> 00:10:44,720
plug-in to kind of talk to it we

00:10:42,920 --> 00:10:46,730
initialized the board and then once the

00:10:44,720 --> 00:10:49,070
block was ready we created instances for

00:10:46,730 --> 00:10:50,630
the different pins in analog mode and

00:10:49,070 --> 00:10:52,810
injected them into the johnny-five R

00:10:50,630 --> 00:10:56,060
Apple so that we could read the values

00:10:52,810 --> 00:10:58,700
and then we started like just pressing

00:10:56,060 --> 00:11:00,890
buttons and seeing what happened we saw

00:10:58,700 --> 00:11:03,800
that three LEDs lit up but they didn't

00:11:00,890 --> 00:11:05,780
let up fully bright so we figured it

00:11:03,800 --> 00:11:07,340
might just not be enough voltage so

00:11:05,780 --> 00:11:08,900
again scientific or the scientific

00:11:07,340 --> 00:11:10,610
approach if you have 3.3 volts and 5

00:11:08,900 --> 00:11:11,329
volts what do you do you connect the 5

00:11:10,610 --> 00:11:14,059
volt and see

00:11:11,329 --> 00:11:15,739
works they lit up more bright and it

00:11:14,059 --> 00:11:19,989
seemed kind of right so we're like

00:11:15,739 --> 00:11:24,230
alright work I know very scientific

00:11:19,989 --> 00:11:25,790
and then the other thing the the problem

00:11:24,230 --> 00:11:27,290
though was that these analog values were

00:11:25,790 --> 00:11:30,379
fluctuating a lot so we couldn't

00:11:27,290 --> 00:11:32,059
actually figure out if this was because

00:11:30,379 --> 00:11:33,619
we pressed a button or whether this was

00:11:32,059 --> 00:11:35,779
just because analog values are

00:11:33,619 --> 00:11:38,269
fluctuating by nature um so we're like

00:11:35,779 --> 00:11:40,819
yeah that's our grain so let's switch

00:11:38,269 --> 00:11:43,040
this to digital mode so we just had to

00:11:40,819 --> 00:11:44,749
switch it back to the default mode and

00:11:43,040 --> 00:11:47,029
this sort of helped us because suddenly

00:11:44,749 --> 00:11:49,459
we were able to both on the one hand

00:11:47,029 --> 00:11:52,549
better careful manipulate these values

00:11:49,459 --> 00:11:54,920
by setting stuff on purpose to high

00:11:52,549 --> 00:11:56,809
voltage or low voltage and similarly we

00:11:54,920 --> 00:11:59,269
were able to reach better values which

00:11:56,809 --> 00:12:01,339
was just high or low and based on that

00:11:59,269 --> 00:12:04,339
we could figure out nan pins two to

00:12:01,339 --> 00:12:06,709
eight were two three seven and eight

00:12:04,339 --> 00:12:09,589
those four were actually reacting on

00:12:06,709 --> 00:12:11,239
button presses in some manner so the

00:12:09,589 --> 00:12:14,360
cool thing is that johnny-five actually

00:12:11,239 --> 00:12:16,069
has a class called button that you can

00:12:14,360 --> 00:12:18,049
just initialize with the pin that you

00:12:16,069 --> 00:12:19,850
connected it to and then you can

00:12:18,049 --> 00:12:21,949
suddenly listen on the events like press

00:12:19,850 --> 00:12:24,049
and release so this is really where the

00:12:21,949 --> 00:12:25,939
power of JavaScript comes in because we

00:12:24,049 --> 00:12:27,649
don't suddenly have to start looping and

00:12:25,939 --> 00:12:29,480
figuring out if something changed we

00:12:27,649 --> 00:12:31,160
just know like either like alerting you

00:12:29,480 --> 00:12:33,649
if it's pressed or alert me when it's

00:12:31,160 --> 00:12:35,419
released it's very easy and based on

00:12:33,649 --> 00:12:38,929
this approach and kind of randomly

00:12:35,419 --> 00:12:40,459
setting stuff to high or low we started

00:12:38,929 --> 00:12:42,649
taking notes and try different things

00:12:40,459 --> 00:12:45,730
and we took more notes and we thought we

00:12:42,649 --> 00:12:48,319
knew it and we were onto something

00:12:45,730 --> 00:12:51,019
mainly that we knew that pin 1 was power

00:12:48,319 --> 00:12:52,730
because hey at least three LEDs lit up

00:12:51,019 --> 00:12:54,980
so we don't know if we broke the others

00:12:52,730 --> 00:12:58,249
already or not but three lit up so

00:12:54,980 --> 00:13:01,040
that's definitely power pins 4 to 6 were

00:12:58,249 --> 00:13:02,689
able to turn these 3 LEDs on or off

00:13:01,040 --> 00:13:05,689
depending on whether we set the value to

00:13:02,689 --> 00:13:07,970
a high or low and pin 7 to 8 would

00:13:05,689 --> 00:13:11,689
always react on button presses and then

00:13:07,970 --> 00:13:14,269
pins 2 and 3 were able to turn off on

00:13:11,689 --> 00:13:17,749
and off groups of buttons so if you

00:13:14,269 --> 00:13:19,339
would said pin 2 to high you could

00:13:17,749 --> 00:13:22,529
control these two buttons they would

00:13:19,339 --> 00:13:25,230
suddenly work or if you would said pin

00:13:22,529 --> 00:13:26,970
was it been three - hi you would get

00:13:25,230 --> 00:13:28,709
these two to work but they would always

00:13:26,970 --> 00:13:31,410
trigger seven and eight when you would

00:13:28,709 --> 00:13:32,759
press them so that's not really helpful

00:13:31,410 --> 00:13:34,829
because like if we can only tell you

00:13:32,759 --> 00:13:36,660
that hey one of three buttons was

00:13:34,829 --> 00:13:38,519
pressed how can we tell the coffee

00:13:36,660 --> 00:13:41,639
machine the other way around like hey

00:13:38,519 --> 00:13:43,439
press this button so we have to go back

00:13:41,639 --> 00:13:45,480
to the drawing board quite literally at

00:13:43,439 --> 00:13:48,720
this point it was I think like four I am

00:13:45,480 --> 00:13:50,519
in in the night and what we did is we

00:13:48,720 --> 00:13:51,480
took a picture of the control plate this

00:13:50,519 --> 00:13:53,189
was the first time we actually took a

00:13:51,480 --> 00:13:56,129
picture and the control plate is only

00:13:53,189 --> 00:13:59,279
this big so we're before always like

00:13:56,129 --> 00:14:00,600
kind of like looking at it and then we

00:13:59,279 --> 00:14:02,610
went quite literally to the drawing

00:14:00,600 --> 00:14:04,860
board by using an open-source tool

00:14:02,610 --> 00:14:07,649
called Fritzing which is a tool that

00:14:04,860 --> 00:14:09,800
allows you to draw circuits or schemas

00:14:07,649 --> 00:14:13,139
or circuits and so we turned this thing

00:14:09,800 --> 00:14:16,649
into this thing and I know it's very

00:14:13,139 --> 00:14:19,949
cleaned up and it's super useful but

00:14:16,649 --> 00:14:21,779
basically what we did is we kind of went

00:14:19,949 --> 00:14:23,819
along these lines that you can see on

00:14:21,779 --> 00:14:26,639
the board and we always measure its arm

00:14:23,819 --> 00:14:27,990
the resistance between two points and if

00:14:26,639 --> 00:14:29,519
it was zero that meant that it was

00:14:27,990 --> 00:14:33,509
indeed connected so we didn't screw up

00:14:29,519 --> 00:14:35,399
the past and then based on that we

00:14:33,509 --> 00:14:37,050
created this diagram the only thing we

00:14:35,399 --> 00:14:39,389
dropped was everything that looked like

00:14:37,050 --> 00:14:42,120
a resistor because it kind of didn't

00:14:39,389 --> 00:14:45,389
alter the behavior of what we wanted to

00:14:42,120 --> 00:14:47,430
achieve and that gave us progress

00:14:45,389 --> 00:14:49,529
because suddenly we realized that one

00:14:47,430 --> 00:14:51,509
two and three were all power and not

00:14:49,529 --> 00:14:54,540
just one and that explain why the LEDs

00:14:51,509 --> 00:14:56,490
weren't all lighting up four to six were

00:14:54,540 --> 00:14:56,850
able to control these LEDs so that makes

00:14:56,490 --> 00:14:59,339
sense

00:14:56,850 --> 00:15:00,930
basically because LEDs only allow you to

00:14:59,339 --> 00:15:02,250
let the currents flow into one direction

00:15:00,930 --> 00:15:06,059
so if you flip it the other way they

00:15:02,250 --> 00:15:09,449
can't go out and then seven and eight

00:15:06,059 --> 00:15:12,149
were buttons but that again brings us to

00:15:09,449 --> 00:15:13,769
the same problem we just get like we can

00:15:12,149 --> 00:15:16,019
just split it up to two groups but we

00:15:13,769 --> 00:15:18,749
can't actually like say which button was

00:15:16,019 --> 00:15:20,850
pressed until wick she took a closer

00:15:18,749 --> 00:15:23,910
look at the board again and these three

00:15:20,850 --> 00:15:26,009
things actually have d6 d4 and d3 being

00:15:23,910 --> 00:15:29,370
next to them and that's because their

00:15:26,009 --> 00:15:31,920
diets so if you don't know what diets

00:15:29,370 --> 00:15:33,629
our diets are just like LEDs just that

00:15:31,920 --> 00:15:35,850
they don't emit light but they serve the

00:15:33,629 --> 00:15:36,030
characteristic that Karen can only flow

00:15:35,850 --> 00:15:38,490
in

00:15:36,030 --> 00:15:40,260
one direction and that's useful

00:15:38,490 --> 00:15:42,810
information because we could redraw our

00:15:40,260 --> 00:15:44,700
diagram we dropped all the LEDs because

00:15:42,810 --> 00:15:47,400
we knew now how we can control all of

00:15:44,700 --> 00:15:50,340
these and we just read drew and cleaned

00:15:47,400 --> 00:15:52,350
up this get the circuit for the switches

00:15:50,340 --> 00:15:54,750
using the diets and then that allowed us

00:15:52,350 --> 00:15:56,430
to kind of follow follow the flow a bit

00:15:54,750 --> 00:15:58,860
more and understand a bit more what's

00:15:56,430 --> 00:16:00,930
actually going on and suddenly all make

00:15:58,860 --> 00:16:03,740
sense basically was mappings between

00:16:00,930 --> 00:16:07,890
different the different power pins and

00:16:03,740 --> 00:16:09,660
the switches that however also meant

00:16:07,890 --> 00:16:12,690
that making this a digital protocol

00:16:09,660 --> 00:16:14,490
isn't really convenient because we would

00:16:12,690 --> 00:16:18,000
kind of need to be on the same cat

00:16:14,490 --> 00:16:20,580
rhythm that the coffee machine has but

00:16:18,000 --> 00:16:23,790
luckily my flatmate was smart enough to

00:16:20,580 --> 00:16:26,430
say before hey we should probably look

00:16:23,790 --> 00:16:27,990
at this thing called relays and if you

00:16:26,430 --> 00:16:30,960
don't know what relays are relays are

00:16:27,990 --> 00:16:32,670
basically a way for you to have a switch

00:16:30,960 --> 00:16:34,800
that you can digitally control like you

00:16:32,670 --> 00:16:36,930
can turn it on and off and you can just

00:16:34,800 --> 00:16:39,360
like put wires into it and then

00:16:36,930 --> 00:16:40,740
depending on what value you said you can

00:16:39,360 --> 00:16:43,350
either open the circuit or close the

00:16:40,740 --> 00:16:45,840
circuit so what we did is we sort of

00:16:43,350 --> 00:16:49,980
wired up the same thing we have here or

00:16:45,840 --> 00:16:51,600
here just that we use the relays for it

00:16:49,980 --> 00:16:53,790
and we only have four relays so we use

00:16:51,600 --> 00:16:57,810
three of them for the core functionality

00:16:53,790 --> 00:17:00,060
which was on off espresso or a normal

00:16:57,810 --> 00:17:02,760
coffee and we kind of mimicked the

00:17:00,060 --> 00:17:07,050
switches with that so this was our

00:17:02,760 --> 00:17:08,790
initial setup this thing the dark part

00:17:07,050 --> 00:17:11,640
is the relays because we didn't have

00:17:08,790 --> 00:17:14,070
enough jumper wires we had to actually

00:17:11,640 --> 00:17:16,770
flip it and squash it into the

00:17:14,070 --> 00:17:19,350
breadboard by now we have jumper wires

00:17:16,770 --> 00:17:21,360
enough jumper wires so that work looks a

00:17:19,350 --> 00:17:23,610
bit more cleaned up but that was our

00:17:21,360 --> 00:17:26,600
initial test setup and then we wrote

00:17:23,610 --> 00:17:30,090
some demo code which was basically

00:17:26,600 --> 00:17:32,010
initializing three relays and then we

00:17:30,090 --> 00:17:34,560
closed them we injected them into the

00:17:32,010 --> 00:17:36,900
wrap hole and then we could interact

00:17:34,560 --> 00:17:40,140
with them in the repple so we started

00:17:36,900 --> 00:17:42,930
off the script at 6:00 a.m. the Sun was

00:17:40,140 --> 00:17:46,500
already up again which kind of told us

00:17:42,930 --> 00:17:49,039
wrap this thing up and you can see here

00:17:46,500 --> 00:17:50,929
once we run grande

00:17:49,039 --> 00:17:53,480
in a second

00:17:50,929 --> 00:17:54,889
it's too dark waters running there we

00:17:53,480 --> 00:17:56,840
didn't try it with coffee because we

00:17:54,889 --> 00:18:00,529
didn't want to like risk it and waste

00:17:56,840 --> 00:18:02,389
coffee so we were just like basically

00:18:00,529 --> 00:18:05,809
always like taking the water and then

00:18:02,389 --> 00:18:09,289
pouring it back into the machine to for

00:18:05,809 --> 00:18:10,549
test purposes but yeah so it was early

00:18:09,289 --> 00:18:12,769
in the morning we wrap this thing up

00:18:10,549 --> 00:18:15,139
basically we use the fact that this is

00:18:12,769 --> 00:18:17,059
where the control buttons used to be and

00:18:15,139 --> 00:18:19,309
we took them out right so there was a

00:18:17,059 --> 00:18:20,929
hole so we just put the cable through it

00:18:19,309 --> 00:18:22,789
so we didn't have to mash all of that

00:18:20,929 --> 00:18:26,690
stuff into the casing and put a sticker

00:18:22,789 --> 00:18:30,110
on top of it and that's how we called it

00:18:26,690 --> 00:18:32,840
a day on that night however I said I

00:18:30,110 --> 00:18:36,200
have an IOT coffee machine this is by no

00:18:32,840 --> 00:18:37,999
means an IOT coffee machine because you

00:18:36,200 --> 00:18:40,309
have to connect it to my computer you

00:18:37,999 --> 00:18:42,019
have to run the JavaScript code and then

00:18:40,309 --> 00:18:43,580
you can use it in the repple of the

00:18:42,019 --> 00:18:45,679
JavaScript to control the coffee machine

00:18:43,580 --> 00:18:48,529
that wasn't what we wanted to do and

00:18:45,679 --> 00:18:50,299
this is where one of my fav all-time

00:18:48,529 --> 00:18:52,429
favorite unfortunately only proposed

00:18:50,299 --> 00:18:58,399
HTTP status code comes into play and

00:18:52,429 --> 00:19:01,129
that's 418 I'm a teapot I'm how many of

00:18:58,399 --> 00:19:03,740
you know where this one comes from all

00:19:01,129 --> 00:19:08,299
right a few people so there's the ITF

00:19:03,740 --> 00:19:11,240
RFC - 3 - 4 which is 4 from 1998 and

00:19:08,299 --> 00:19:13,100
it's called the H it proposes the htc

00:19:11,240 --> 00:19:14,720
PCP if you're not good with your

00:19:13,100 --> 00:19:17,480
abbreviations that's the hypertext

00:19:14,720 --> 00:19:20,149
coffeepot control protocol and that was

00:19:17,480 --> 00:19:22,940
recommended by the ITF as an April

00:19:20,149 --> 00:19:26,570
Fool's on April 1st so it was that's why

00:19:22,940 --> 00:19:27,769
it's still a proposed status code but I

00:19:26,570 --> 00:19:29,960
thought I'm gonna give you a quick

00:19:27,769 --> 00:19:32,330
insight and in what it actually is about

00:19:29,960 --> 00:19:33,710
so it's built on top of HTTP which is

00:19:32,330 --> 00:19:38,299
nice because that means I can implement

00:19:33,710 --> 00:19:40,129
it it adds a brew method which acts

00:19:38,299 --> 00:19:43,100
according to the spec just like the post

00:19:40,129 --> 00:19:45,169
method the thing is it they explicitly

00:19:43,100 --> 00:19:47,480
call out this is not limited to coffee

00:19:45,169 --> 00:19:50,480
you could implement a beer brewing

00:19:47,480 --> 00:19:53,929
protocol and use this brew method it

00:19:50,480 --> 00:19:57,559
also alters the safe header option to

00:19:53,929 --> 00:19:59,330
allow you to define if user is awake

00:19:57,559 --> 00:20:01,239
to kind of make sure that nobody

00:19:59,330 --> 00:20:03,190
consumes too much coffee

00:20:01,239 --> 00:20:04,749
and it adds the except additions header

00:20:03,190 --> 00:20:08,080
which allows you to ask for things like

00:20:04,749 --> 00:20:10,029
milk it suggests the HTTP status code

00:20:08,080 --> 00:20:13,539
for 18 in case you're trying to talk to

00:20:10,029 --> 00:20:15,759
a teapot instead of a coffeepot and

00:20:13,539 --> 00:20:17,830
obviously we need a new your eyes scheme

00:20:15,759 --> 00:20:20,289
so there's the coffee your eye scheme as

00:20:17,830 --> 00:20:24,249
well and many other things is a great

00:20:20,289 --> 00:20:27,789
read this is the except additions field

00:20:24,249 --> 00:20:31,179
header definition interesting parts

00:20:27,789 --> 00:20:33,339
about this first of all it kind of new

00:20:31,179 --> 00:20:36,549
non-dairy milk and stuff like that was

00:20:33,339 --> 00:20:40,570
definitely on their radar the other

00:20:36,549 --> 00:20:42,759
thing is spice type and sweetener type

00:20:40,570 --> 00:20:45,070
are actually not defined here as what

00:20:42,759 --> 00:20:48,159
the valid values are I think this was

00:20:45,070 --> 00:20:52,869
kind of future proofing for Starbucks to

00:20:48,159 --> 00:20:55,929
introduce the pumpkin spice latte but

00:20:52,869 --> 00:20:58,659
the more funny thing is this part so

00:20:55,929 --> 00:21:01,089
this is the UI scheme for coffee and

00:20:58,659 --> 00:21:03,369
it's actually internationalized so you

00:21:01,089 --> 00:21:06,039
can see here various languages I'm

00:21:03,369 --> 00:21:09,039
German my attention was immediately

00:21:06,039 --> 00:21:10,929
caught here percent for be FA that's not

00:21:09,039 --> 00:21:13,450
how we spell coffee

00:21:10,929 --> 00:21:16,419
the thing is in Germany was you spelled

00:21:13,450 --> 00:21:18,879
with a capital K and the capital letter

00:21:16,419 --> 00:21:22,479
had to be escaped so that's why you use

00:21:18,879 --> 00:21:26,259
the person for B in order to escape the

00:21:22,479 --> 00:21:27,909
capsule okay so that was how this came

00:21:26,259 --> 00:21:30,700
to be because the other sort of made

00:21:27,909 --> 00:21:33,669
sense but like I can write cafe without

00:21:30,700 --> 00:21:35,139
like using like special characters the

00:21:33,669 --> 00:21:37,779
other thing is it has a pod designator

00:21:35,139 --> 00:21:39,249
so you can talk to multiple pods with

00:21:37,779 --> 00:21:43,599
the same protocol if they're under the

00:21:39,249 --> 00:21:44,979
same host so obviously having an IOT

00:21:43,599 --> 00:21:49,509
coffee machine I had to implement this

00:21:44,979 --> 00:21:54,330
and it's actually working so this is

00:21:49,509 --> 00:21:56,619
where we come to the to the demo part so

00:21:54,330 --> 00:21:58,450
because the internet is sort of flaky I

00:21:56,619 --> 00:21:59,979
actually need to restart this so

00:21:58,450 --> 00:22:01,509
technically you could run this like

00:21:59,979 --> 00:22:04,570
independently and this could just like

00:22:01,509 --> 00:22:06,129
run forever but first of all sometimes

00:22:04,570 --> 00:22:08,499
of the connection crashes I have to

00:22:06,129 --> 00:22:10,509
restart it and I didn't implement the

00:22:08,499 --> 00:22:11,960
restart logic yet so I figured I'm just

00:22:10,509 --> 00:22:17,149
going to keep it running like this

00:22:11,960 --> 00:22:20,269
oh sorry there we go

00:22:17,149 --> 00:22:21,669
so I'm deploying the code right now and

00:22:20,269 --> 00:22:26,379
in the meantime I can show you the code

00:22:21,669 --> 00:22:29,570
so this is the so this is the web server

00:22:26,379 --> 00:22:32,299
it pretty much responsible normal HTTP

00:22:29,570 --> 00:22:34,610
server once it's spawned up the server

00:22:32,299 --> 00:22:36,049
it is a tool called local tunnel to

00:22:34,610 --> 00:22:39,830
actually have a like externally

00:22:36,049 --> 00:22:41,749
available URL that we can use and then

00:22:39,830 --> 00:22:43,669
it initializes the coffee machine and

00:22:41,749 --> 00:22:45,830
then when once it's ready like it just

00:22:43,669 --> 00:22:48,139
prints that obviously I check for if

00:22:45,830 --> 00:22:51,409
it's a teapot just in case like I messed

00:22:48,139 --> 00:22:52,850
something up and a bunch of other things

00:22:51,409 --> 00:22:55,519
like here I'm checking for the brew

00:22:52,850 --> 00:22:57,980
protocol all the important things I

00:22:55,519 --> 00:22:59,720
actually had to alter that your I scheme

00:22:57,980 --> 00:23:01,249
a bit which I'm gonna show in a second I

00:22:59,720 --> 00:23:03,700
checked for authorization because I

00:23:01,249 --> 00:23:06,080
don't want you to control my coffee I

00:23:03,700 --> 00:23:07,789
check for the correct headers I had to

00:23:06,080 --> 00:23:10,669
add another one and that's for using

00:23:07,789 --> 00:23:14,899
Alexa I checked for the except additions

00:23:10,669 --> 00:23:17,450
and yeah so basically the reason why I

00:23:14,899 --> 00:23:22,039
had to alter the scheme was that I'm

00:23:17,450 --> 00:23:24,249
using an Alexa skill here via EFT and it

00:23:22,039 --> 00:23:26,499
doesn't provide for whatever reason

00:23:24,249 --> 00:23:30,139
application coffee pod command as a

00:23:26,499 --> 00:23:31,730
valid content type here so I was a bit

00:23:30,139 --> 00:23:33,830
upset there all right I heard it

00:23:31,730 --> 00:23:36,740
clicking here so that means the thing is

00:23:33,830 --> 00:23:38,720
on let's see so this was just a normal

00:23:36,740 --> 00:23:41,450
get request to pods ero to see if the

00:23:38,720 --> 00:23:45,679
coffee machine is on or not and it is so

00:23:41,450 --> 00:23:48,289
we can go and code so I basically I said

00:23:45,679 --> 00:23:51,110
I altered the your ice scheme a bit and

00:23:48,289 --> 00:23:52,700
the basic thing that I added is a SUP

00:23:51,110 --> 00:23:54,320
resource called espresso because I don't

00:23:52,700 --> 00:23:56,269
have multiple pots but I have different

00:23:54,320 --> 00:23:58,309
flavors or like different types of

00:23:56,269 --> 00:24:01,369
coffee and added this authentication

00:23:58,309 --> 00:24:03,559
token so all we need to do here is we

00:24:01,369 --> 00:24:06,950
just need to quickly do an HTTP POST

00:24:03,559 --> 00:24:11,840
request because god doesn't have a brew

00:24:06,950 --> 00:24:13,220
method again not really future-proof and

00:24:11,840 --> 00:24:16,249
then we just need to set the correct

00:24:13,220 --> 00:24:21,369
headers here obviously so that content

00:24:16,249 --> 00:24:21,369
type application

00:24:22,210 --> 00:24:29,140
command and there are only two valid

00:24:25,120 --> 00:24:31,360
values for this one is start which is

00:24:29,140 --> 00:24:35,880
the one that we're interested in and I'm

00:24:31,360 --> 00:24:40,480
just gonna console.log enjoy your

00:24:35,880 --> 00:24:45,690
putting emoji in there cool so that's

00:24:40,480 --> 00:24:49,240
all I need hopefully so let's run this

00:24:45,690 --> 00:24:59,820
and if everything worked well let's see

00:24:49,240 --> 00:25:04,450
come on come on no process out of memory

00:24:59,820 --> 00:25:06,490
that's very ironic all right so we still

00:25:04,450 --> 00:25:08,590
got three minutes so we still go at the

00:25:06,490 --> 00:25:11,380
time so I'm gonna show you in the

00:25:08,590 --> 00:25:12,730
meantime how they actual like because so

00:25:11,380 --> 00:25:14,830
far only showed you the webserver

00:25:12,730 --> 00:25:16,150
the actual way I'm interacting it's just

00:25:14,830 --> 00:25:19,060
like the demo script that I showed

00:25:16,150 --> 00:25:22,150
earlier so I'm actually just creating

00:25:19,060 --> 00:25:25,140
here some relays one once already and

00:25:22,150 --> 00:25:27,430
then in order to press the buttons I

00:25:25,140 --> 00:25:29,680
have a press button function you know

00:25:27,430 --> 00:25:32,350
all that does is it opens the relay and

00:25:29,680 --> 00:25:35,080
then after 500 milliseconds it closes

00:25:32,350 --> 00:25:37,600
the relay and the reason for that is

00:25:35,080 --> 00:25:39,490
that the coffee machine has this custom

00:25:37,600 --> 00:25:41,230
behavior that if you keep the button

00:25:39,490 --> 00:25:44,140
pressed for longer than a like very

00:25:41,230 --> 00:25:46,990
short time and then release it it will

00:25:44,140 --> 00:25:49,540
actually just make coffee while you keep

00:25:46,990 --> 00:25:51,100
it pressed while if you just press it

00:25:49,540 --> 00:25:53,260
shortly it will do the right amount of

00:25:51,100 --> 00:25:56,920
water and coffee that you actually

00:25:53,260 --> 00:25:59,440
requested for that type so that's that's

00:25:56,920 --> 00:26:01,180
how I how I did that part the other

00:25:59,440 --> 00:26:04,090
thing is you might see if you're sitting

00:26:01,180 --> 00:26:08,170
close these LEDs so right now the is on

00:26:04,090 --> 00:26:11,500
star kind of thing is very faked because

00:26:08,170 --> 00:26:12,970
it's sort of harder to measure these

00:26:11,500 --> 00:26:15,330
values so we didn't have the right tools

00:26:12,970 --> 00:26:21,430
to do that when we initially hacked this

00:26:15,330 --> 00:26:23,590
all right so this clicked again coffee

00:26:21,430 --> 00:26:26,670
is the coffee machine is running come on

00:26:23,590 --> 00:26:26,670
don't run out of memory

00:26:26,690 --> 00:26:32,840
yeah there we go finally coffee worked

00:26:40,820 --> 00:26:47,850
alright so let me jump back to my slides

00:26:45,169 --> 00:26:49,860
alright so this is what we have got so

00:26:47,850 --> 00:26:52,830
far we didn't have time recently to or

00:26:49,860 --> 00:26:56,700
work further on this you can find the

00:26:52,830 --> 00:26:58,109
code on on my github including the

00:26:56,700 --> 00:27:00,840
script that triggers it and things like

00:26:58,109 --> 00:27:02,519
that and schematics of the wire up and

00:27:00,840 --> 00:27:04,350
things like that so if you want to check

00:27:02,519 --> 00:27:07,470
that out let's talk about what I learned

00:27:04,350 --> 00:27:08,940
a lot doing this obviously I should have

00:27:07,470 --> 00:27:12,419
learned something when I'm wasting my

00:27:08,940 --> 00:27:15,299
time with things so first of all reverse

00:27:12,419 --> 00:27:17,549
engineering is fun like actually being

00:27:15,299 --> 00:27:19,320
able to take a look at stuff and trying

00:27:17,549 --> 00:27:21,809
to figure out how it works it's just so

00:27:19,320 --> 00:27:24,389
much fun and most companies work

00:27:21,809 --> 00:27:26,669
nowadays hard to not allow you to do it

00:27:24,389 --> 00:27:27,960
but if you have something especially

00:27:26,669 --> 00:27:29,850
that you can spare we had two coffee

00:27:27,960 --> 00:27:33,539
machines no worries there was no risk

00:27:29,850 --> 00:27:35,159
involved here then like peeking under

00:27:33,539 --> 00:27:37,440
the hood is a lot of fun so if you know

00:27:35,159 --> 00:27:39,299
that your your something broke for

00:27:37,440 --> 00:27:42,450
example just take a look under under the

00:27:39,299 --> 00:27:44,100
hood maybe you can even fix it reverse

00:27:42,450 --> 00:27:46,980
engineering is very frustrating

00:27:44,100 --> 00:27:50,309
we broke at least one or two LEDs on the

00:27:46,980 --> 00:27:52,590
actual control plate and the problem is

00:27:50,309 --> 00:27:55,580
contrary to software development if you

00:27:52,590 --> 00:27:58,739
break something there's no get revert

00:27:55,580 --> 00:28:01,289
meaning on a Saturday morning you can't

00:27:58,739 --> 00:28:03,269
just be like yeah it's 5:00 a.m. I'm

00:28:01,289 --> 00:28:06,389
just gonna like get a new resistor

00:28:03,269 --> 00:28:08,909
because you burn through them all so

00:28:06,389 --> 00:28:10,679
like replacing stuff at 5:00 a.m. is

00:28:08,909 --> 00:28:12,090
hard or like generally like you can't

00:28:10,679 --> 00:28:14,759
just download something new from the

00:28:12,090 --> 00:28:15,989
internet so you always keep that in mind

00:28:14,759 --> 00:28:18,749
and have some backup stuff when you're

00:28:15,989 --> 00:28:20,369
trying to hack something javascript and

00:28:18,749 --> 00:28:23,159
heart will work incredibly well together

00:28:20,369 --> 00:28:25,289
especially if you're a beginner like

00:28:23,159 --> 00:28:27,570
because it just enables you to kind of

00:28:25,289 --> 00:28:30,059
like understand things way nice and

00:28:27,570 --> 00:28:33,119
right like understandable event-driven

00:28:30,059 --> 00:28:34,859
code tesla too is great is a great

00:28:33,119 --> 00:28:37,230
project that you should totally support

00:28:34,859 --> 00:28:39,539
it's a great way to get started with

00:28:37,230 --> 00:28:40,050
hardware and JavaScript just because you

00:28:39,539 --> 00:28:41,790
can just

00:28:40,050 --> 00:28:44,790
under coat there you can push it there

00:28:41,790 --> 00:28:47,100
they have great documentation on it and

00:28:44,790 --> 00:28:48,420
all the folks are like just working on

00:28:47,100 --> 00:28:51,270
this and their free time so there's no

00:28:48,420 --> 00:28:53,700
company behind this Johnny Five is super

00:28:51,270 --> 00:28:56,370
useful to kick-ass module that allows

00:28:53,700 --> 00:28:58,290
you to easily get into hardware because

00:28:56,370 --> 00:29:00,060
it has a class for pretty much anything

00:28:58,290 --> 00:29:03,180
that you need there's a hardware

00:29:00,060 --> 00:29:04,860
component so that's super useful and it

00:29:03,180 --> 00:29:07,110
allows you to write portable code so if

00:29:04,860 --> 00:29:08,610
we decide we want to use something else

00:29:07,110 --> 00:29:10,620
the test off or something else we can

00:29:08,610 --> 00:29:12,750
just swap that out for some other piece

00:29:10,620 --> 00:29:16,980
of hardware and keep that keep the hack

00:29:12,750 --> 00:29:18,750
writing so what's next I need to figure

00:29:16,980 --> 00:29:22,080
out a way to programmatically determine

00:29:18,750 --> 00:29:23,880
the state that's mainly due to down to

00:29:22,080 --> 00:29:26,310
me buying the right component to measure

00:29:23,880 --> 00:29:28,710
the voltage of a different circuit and

00:29:26,310 --> 00:29:31,830
then add more relays so we can use

00:29:28,710 --> 00:29:34,260
finally all six buttons of the machine

00:29:31,830 --> 00:29:36,120
and then I'm always up for suggestions

00:29:34,260 --> 00:29:37,860
so I heard of like people suggesting I

00:29:36,120 --> 00:29:39,960
should have an RFID scanner to figure

00:29:37,860 --> 00:29:41,520
out if there is like a coffee mark

00:29:39,960 --> 00:29:43,440
underneath it we still have to figure

00:29:41,520 --> 00:29:46,890
out how to swap these capsules that it

00:29:43,440 --> 00:29:49,140
uses so I'm open I'm open for creative

00:29:46,890 --> 00:29:51,450
suggestions there if you want to read up

00:29:49,140 --> 00:29:55,350
this whole thing again I published on

00:29:51,450 --> 00:29:57,870
April first this year suitably a blog

00:29:55,350 --> 00:29:59,190
post about the whole hack and you can

00:29:57,870 --> 00:30:01,250
check it out on this URL I'm going to

00:29:59,190 --> 00:30:04,860
tweet tweet about it in a second as well

00:30:01,250 --> 00:30:06,840
and then I put up the slides on speaker

00:30:04,860 --> 00:30:09,030
deck so you can follow this URL again

00:30:06,840 --> 00:30:11,460
I'm going to tweet about that and with

00:30:09,030 --> 00:30:13,140
that I'm pretty much on time so I would

00:30:11,460 --> 00:30:14,250
like to thank you all and if you have

00:30:13,140 --> 00:30:16,130
any questions I'll be around for the

00:30:14,250 --> 00:30:21,259
rest of the day

00:30:16,130 --> 00:30:21,259

YouTube URL: https://www.youtube.com/watch?v=8mXlnj0m2s4


