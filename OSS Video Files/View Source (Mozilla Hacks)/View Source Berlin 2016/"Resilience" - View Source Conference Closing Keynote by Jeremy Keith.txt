Title: "Resilience" - View Source Conference Closing Keynote by Jeremy Keith
Publication date: 2016-10-03
Playlist: View Source Berlin 2016
Description: 
	Web browsers have become so powerful that developers are now treating them as if they were a runtime environment as predictable as any other. But the truth is that we still need to deal with many unknown factors that torpedo our assumptions. The web is where Postel’s Law meets Murphy’s Law, so we can’t treat web development as if it were just another flavour of software. Instead we must work with the grain of the web. 

View Source Berlin 12-14 September, 2016

Jeremy Keith lives in Brighton, England where he makes websites with the splendid design agency Clearleft. You may know him from such books as DOM Scripting, Bulletproof Ajax, and HTML5 For Web Designers. Jeremy spends most of his time goofing off on the internet, documenting his time-wasting on adactio.com, where he has been writing for fifteen years.
Captions: 
	00:00:07,530 --> 00:00:13,010
so I kind of want to bring it back round

00:00:10,430 --> 00:00:17,450
you what Hadleigh

00:00:13,010 --> 00:00:19,730
at the start of the day when she was

00:00:17,450 --> 00:00:23,210
kind of talking about when the web was

00:00:19,730 --> 00:00:25,070
born all right it's what 25 years ago

00:00:23,210 --> 00:00:27,099
now Tim berners-lee created the world

00:00:25,070 --> 00:00:29,570
wide web I have to point out by the way

00:00:27,099 --> 00:00:31,520
this is the World Wide Web when it only

00:00:29,570 --> 00:00:34,940
exists on one computer but he still

00:00:31,520 --> 00:00:37,960
called it the world wide web and you you

00:00:34,940 --> 00:00:40,220
have to admire the confidence in that

00:00:37,960 --> 00:00:41,629
and like Hadley was saying that you know

00:00:40,220 --> 00:00:43,850
the environment in which to buy booze

00:00:41,629 --> 00:00:46,070
was born was you know maybe different to

00:00:43,850 --> 00:00:48,140
the one which it's evolved today it was

00:00:46,070 --> 00:00:50,870
born in this environment CERN CERN is

00:00:48,140 --> 00:00:52,580
just an amazing place right underneath

00:00:50,870 --> 00:00:55,400
the the border of Switzerland and France

00:00:52,580 --> 00:00:57,290
you've got this giant machine Large

00:00:55,400 --> 00:01:00,290
Hadron Collider the largest machine ever

00:00:57,290 --> 00:01:02,030
built by man recreating conditions from

00:01:00,290 --> 00:01:03,979
the start of the universe hurting these

00:01:02,030 --> 00:01:06,950
photons to get it it's just an amazing

00:01:03,979 --> 00:01:08,450
place and people from all over the world

00:01:06,950 --> 00:01:10,880
are there and they're collaborating and

00:01:08,450 --> 00:01:12,770
there isn't much of a hierarchy system

00:01:10,880 --> 00:01:14,150
at CERN right you got Nobel

00:01:12,770 --> 00:01:15,619
prize-winning physicists you got

00:01:14,150 --> 00:01:16,700
students on summer internships and

00:01:15,619 --> 00:01:19,250
they're collaborating together in these

00:01:16,700 --> 00:01:21,590
experiments and when it comes to data

00:01:19,250 --> 00:01:23,780
formats and storing data and

00:01:21,590 --> 00:01:25,460
communicating information you don't get

00:01:23,780 --> 00:01:27,110
to dictate to these people oh you have

00:01:25,460 --> 00:01:28,910
to use this operating system or you have

00:01:27,110 --> 00:01:30,560
to use this particular format people

00:01:28,910 --> 00:01:32,210
will use whatever they want and this was

00:01:30,560 --> 00:01:34,130
the issue that Tim berners-lee was

00:01:32,210 --> 00:01:36,170
trying to tackle right managing all this

00:01:34,130 --> 00:01:38,290
data and he settled on using a hypertext

00:01:36,170 --> 00:01:40,040
system now he had previously

00:01:38,290 --> 00:01:42,500
experimented with a hypertext system

00:01:40,040 --> 00:01:44,270
before about ten years previously at a

00:01:42,500 --> 00:01:46,310
system called inquire he was named after

00:01:44,270 --> 00:01:48,590
this Victorian book of manners called

00:01:46,310 --> 00:01:49,730
inquire within upon everything which I

00:01:48,590 --> 00:01:51,950
also thought to be a great name for the

00:01:49,730 --> 00:01:53,810
World Wide Web inquire didn't work out

00:01:51,950 --> 00:01:55,610
too well but it took a second stab at it

00:01:53,810 --> 00:01:58,640
while he was at CERN and he submitted

00:01:55,610 --> 00:02:00,080
this paper to his supervisor Mike send

00:01:58,640 --> 00:02:02,270
off and it you know it doesn't have the

00:02:00,080 --> 00:02:05,210
best title rights bit boring information

00:02:02,270 --> 00:02:06,830
management a proposal but Mike central

00:02:05,210 --> 00:02:08,239
must have seen something in this

00:02:06,830 --> 00:02:11,900
proposal because he scrawled across the

00:02:08,239 --> 00:02:13,190
top vague but exciting and so Tim

00:02:11,900 --> 00:02:14,989
berners-lee gets to go ahead and he

00:02:13,190 --> 00:02:16,310
creates the world wide web and one of

00:02:14,989 --> 00:02:19,280
the things he realized right from the

00:02:16,310 --> 00:02:20,540
start was you know it it couldn't be

00:02:19,280 --> 00:02:22,760
hard to get started but it had to be

00:02:20,540 --> 00:02:24,439
familiar to people and I've been making

00:02:22,760 --> 00:02:25,730
it as simple as possible I mean it's

00:02:24,439 --> 00:02:27,230
built on top of the Internet

00:02:25,730 --> 00:02:29,150
and it's kind of part of the ethos of

00:02:27,230 --> 00:02:30,590
the Internet to write that it's really

00:02:29,150 --> 00:02:32,629
really simple if you know the network

00:02:30,590 --> 00:02:34,370
doesn't care about the contents of the

00:02:32,629 --> 00:02:36,080
packets that it's switching around it's

00:02:34,370 --> 00:02:38,780
just trying to get packets from A to B

00:02:36,080 --> 00:02:41,120
right it's a dumb network and that

00:02:38,780 --> 00:02:42,530
design but I'm not being smart it turns

00:02:41,120 --> 00:02:44,780
out to be the secret sauce of the

00:02:42,530 --> 00:02:46,370
internet and I think that you know Tim

00:02:44,780 --> 00:02:48,500
berners-lee took that on board with the

00:02:46,370 --> 00:02:51,019
building blocks of the World Wide Web

00:02:48,500 --> 00:02:53,480
right HTTP is the protocol sitting on

00:02:51,019 --> 00:02:55,760
top of TCP IP you got URLs as

00:02:53,480 --> 00:02:58,340
identifiers built on top of DNS system

00:02:55,760 --> 00:03:00,079
right and HTML and all of them they're

00:02:58,340 --> 00:03:02,530
okay none of them are great they're not

00:03:00,079 --> 00:03:05,870
the best formats are not the best

00:03:02,530 --> 00:03:07,459
protocols but they're simple enough and

00:03:05,870 --> 00:03:10,030
yet just powerful enough that people

00:03:07,459 --> 00:03:12,260
could get started quickly when HTML

00:03:10,030 --> 00:03:14,870
classic example at the beginning there

00:03:12,260 --> 00:03:17,000
was never a version one of HTML there

00:03:14,870 --> 00:03:18,620
was just this document called HTML tags

00:03:17,000 --> 00:03:21,319
presumably written by Tim berners-lee

00:03:18,620 --> 00:03:24,590
that documented the entirety of HTML

00:03:21,319 --> 00:03:26,450
which was 21 elements and even those 21

00:03:24,590 --> 00:03:29,150
elements Tim berners-lee didn't invent

00:03:26,450 --> 00:03:31,609
he just borrowed them wholesale from the

00:03:29,150 --> 00:03:33,950
version of sgml that was already being

00:03:31,609 --> 00:03:35,810
used by the scientists at CERN so it was

00:03:33,950 --> 00:03:38,180
familiar right he understood that to get

00:03:35,810 --> 00:03:39,889
people using a technology you know nudge

00:03:38,180 --> 00:03:41,530
their behavior rather than trying to get

00:03:39,889 --> 00:03:44,209
them to change their behavior completely

00:03:41,530 --> 00:03:48,169
now here we are all these years later

00:03:44,209 --> 00:03:51,290
and html5 has got 121 elements at last

00:03:48,169 --> 00:03:53,660
count and how is this even possible that

00:03:51,290 --> 00:03:56,510
it's still the same format right it's

00:03:53,660 --> 00:03:59,599
still HTML here it's grown by a hundred

00:03:56,510 --> 00:04:01,609
elements over more than two decades and

00:03:59,599 --> 00:04:02,720
yet it's still HTML this kind of blows

00:04:01,609 --> 00:04:04,880
my mind because if you know anything

00:04:02,720 --> 00:04:06,859
about computer formats this is very

00:04:04,880 --> 00:04:09,230
long-lived if you try to take a word

00:04:06,859 --> 00:04:11,180
processing document from 20 or 25 years

00:04:09,230 --> 00:04:13,489
ago and run it today you know you're

00:04:11,180 --> 00:04:15,620
going to have a bad time and yet you can

00:04:13,489 --> 00:04:18,049
take the very first website and look at

00:04:15,620 --> 00:04:21,530
it in a modern browser that's kind of

00:04:18,049 --> 00:04:23,000
amazing I think the reason why HTML has

00:04:21,530 --> 00:04:25,880
been able to grow and the secret to the

00:04:23,000 --> 00:04:28,849
longevity of HTML is down to a design

00:04:25,880 --> 00:04:31,220
decision in how its parsed so let's say

00:04:28,849 --> 00:04:32,630
you give a browser an HTML element right

00:04:31,220 --> 00:04:34,130
you've got an opening tag it'll might be

00:04:32,630 --> 00:04:35,719
some attributes on there maybe not

00:04:34,130 --> 00:04:38,030
you've got some content you got to

00:04:35,719 --> 00:04:39,920
closing tag now

00:04:38,030 --> 00:04:41,690
the content in between the opening

00:04:39,920 --> 00:04:43,070
closing tags gets rendered and maybe

00:04:41,690 --> 00:04:44,360
something extra will happen depending on

00:04:43,070 --> 00:04:46,730
the element in question whether it's

00:04:44,360 --> 00:04:48,230
some user agent styling maybe in the

00:04:46,730 --> 00:04:50,450
case of form elements images links

00:04:48,230 --> 00:04:52,430
there's some particular behavior but the

00:04:50,450 --> 00:04:53,660
main thing is the given browser an

00:04:52,430 --> 00:04:54,860
element like this and it displays the

00:04:53,660 --> 00:04:57,830
content in between the opening and

00:04:54,860 --> 00:04:59,060
closing tags okay you all know this but

00:04:57,830 --> 00:05:00,800
here's where it gets interesting is if

00:04:59,060 --> 00:05:02,830
you give a browser an element it doesn't

00:05:00,800 --> 00:05:05,600
understand the element it doesn't exist

00:05:02,830 --> 00:05:07,760
so it still renders the content in

00:05:05,600 --> 00:05:09,170
between the opening and closing tags it

00:05:07,760 --> 00:05:11,900
just ignores the tags and renders the

00:05:09,170 --> 00:05:15,350
contents see why this is interesting is

00:05:11,900 --> 00:05:18,560
what the browser does not do the browser

00:05:15,350 --> 00:05:20,840
does not throw an error to the user the

00:05:18,560 --> 00:05:23,600
browser does not stop parsing the HTML

00:05:20,840 --> 00:05:25,670
at this point and refuse to parse any

00:05:23,600 --> 00:05:27,530
further it just skips the tags it

00:05:25,670 --> 00:05:30,440
doesn't understand renders the content

00:05:27,530 --> 00:05:33,080
and carries on so very very lacks loose

00:05:30,440 --> 00:05:35,810
error handling and that's exactly how

00:05:33,080 --> 00:05:38,240
we've been able to add extra elements to

00:05:35,810 --> 00:05:40,010
HTML / x we know exactly how old the

00:05:38,240 --> 00:05:41,570
browser is going to behave you'll just

00:05:40,010 --> 00:05:43,820
render the content and ignore the tags

00:05:41,570 --> 00:05:45,710
they don't understand we can use this to

00:05:43,820 --> 00:05:47,210
our advantage right if we know that

00:05:45,710 --> 00:05:48,590
older browsers are going to render the

00:05:47,210 --> 00:05:50,480
content in between the opening and

00:05:48,590 --> 00:05:52,460
closing tags then let's say okay well

00:05:50,480 --> 00:05:54,170
newer browsers don't render that content

00:05:52,460 --> 00:05:55,670
and that's where we can put the fallback

00:05:54,170 --> 00:05:57,680
content for the older browsers like

00:05:55,670 --> 00:05:59,690
that's how can this works and that's not

00:05:57,680 --> 00:06:00,980
an accident you know when canvas was

00:05:59,690 --> 00:06:03,410
first invented it was a proprietary

00:06:00,980 --> 00:06:05,390
element created by Apple other browser

00:06:03,410 --> 00:06:07,220
makers saw it my ooh that's nice we'll

00:06:05,390 --> 00:06:08,900
have that and it got standardized and

00:06:07,220 --> 00:06:11,030
when I got standardized the closing tag

00:06:08,900 --> 00:06:12,530
was added specifically so that we could

00:06:11,030 --> 00:06:15,140
do this specifically so that we could

00:06:12,530 --> 00:06:17,030
have fallback content for older browsers

00:06:15,140 --> 00:06:20,060
so it's a deliberate design decision

00:06:17,030 --> 00:06:22,250
that HTML has this loose error handling

00:06:20,060 --> 00:06:25,490
and it's a similar situation with with

00:06:22,250 --> 00:06:27,470
CSS now if you stop and think about all

00:06:25,490 --> 00:06:29,200
of the websites out there using CSS

00:06:27,470 --> 00:06:32,300
which is basically all of them now right

00:06:29,200 --> 00:06:33,650
how different they look you know the

00:06:32,300 --> 00:06:35,930
different designs of different styles

00:06:33,650 --> 00:06:38,540
and then think it all actually comes

00:06:35,930 --> 00:06:41,750
down to this one pattern you got a

00:06:38,540 --> 00:06:43,850
selector property the value that's it

00:06:41,750 --> 00:06:45,560
that's all the CSS that's ever existed

00:06:43,850 --> 00:06:47,540
all the CSS that's ever been written I

00:06:45,560 --> 00:06:49,490
kind of find you know kind of beautiful

00:06:47,540 --> 00:06:50,270
that it comes down to such a simple

00:06:49,490 --> 00:06:51,500
pattern yeah we got these special

00:06:50,270 --> 00:06:52,910
characters curly brace

00:06:51,500 --> 00:06:54,650
citizen stuff for the machines to parse

00:06:52,910 --> 00:06:56,720
this but basically this is it did you

00:06:54,650 --> 00:06:58,160
you this is CSS of course the tricky

00:06:56,720 --> 00:06:59,570
part is knowing the vocabulary of the

00:06:58,160 --> 00:07:01,070
selectors and the vocabulary of the

00:06:59,570 --> 00:07:03,020
properties and the vocabulary the values

00:07:01,070 --> 00:07:04,700
but the underlying pattern is really

00:07:03,020 --> 00:07:06,890
simple and if you give a browser a

00:07:04,700 --> 00:07:08,780
selector it doesn't understand well it

00:07:06,890 --> 00:07:10,490
just skips over the curly braces right

00:07:08,780 --> 00:07:13,300
it just doesn't match that selector it

00:07:10,490 --> 00:07:16,370
does not throw an error it does not stop

00:07:13,300 --> 00:07:17,630
parsing the CSS file at this point give

00:07:16,370 --> 00:07:19,430
it a property it doesn't understand it

00:07:17,630 --> 00:07:20,750
just keeps the next line if the value

00:07:19,430 --> 00:07:22,730
doesn't stand just skips over what it

00:07:20,750 --> 00:07:25,310
doesn't understand and so we've been

00:07:22,730 --> 00:07:28,160
able to add to CSS over time right add

00:07:25,310 --> 00:07:31,430
more selectors more properties more

00:07:28,160 --> 00:07:34,340
values but when I think about you know

00:07:31,430 --> 00:07:37,160
how CSS has changed in the last say five

00:07:34,340 --> 00:07:38,450
years I'd say you know the biggest

00:07:37,160 --> 00:07:40,340
change it's probably will this to them

00:07:38,450 --> 00:07:42,710
one is the fact that we use things like

00:07:40,340 --> 00:07:44,540
pre processes and pros processors things

00:07:42,710 --> 00:07:46,370
like lass and sass who's using something

00:07:44,540 --> 00:07:49,970
like SAS some kind of pre-processing

00:07:46,370 --> 00:07:51,980
right most people writing CSS and the

00:07:49,970 --> 00:07:54,380
other thing is that we have these you

00:07:51,980 --> 00:07:56,450
know systems of how we structure our

00:07:54,380 --> 00:07:59,660
class names things like object-oriented

00:07:56,450 --> 00:08:01,070
CSS and smacks and bam and all the other

00:07:59,660 --> 00:08:02,630
ones out there who's using some kind of

00:08:01,070 --> 00:08:04,940
naming system like this like BAM bersin

00:08:02,630 --> 00:08:08,030
right quite a few see what I find

00:08:04,940 --> 00:08:10,160
interesting about both of these is that

00:08:08,030 --> 00:08:13,130
in neither case did we developers

00:08:10,160 --> 00:08:14,660
authors have to go lobbying standards

00:08:13,130 --> 00:08:16,540
bodies and browser makers saying oh

00:08:14,660 --> 00:08:19,040
please implement this into the spec

00:08:16,540 --> 00:08:20,450
right we were able to just do it in the

00:08:19,040 --> 00:08:22,370
case of pre processes because it sits in

00:08:20,450 --> 00:08:24,470
our own machine and the case of these

00:08:22,370 --> 00:08:25,400
kind of systems of naming things is

00:08:24,470 --> 00:08:28,160
because we're really just talking about

00:08:25,400 --> 00:08:30,740
selectors right how we how we named

00:08:28,160 --> 00:08:31,760
classes I find that interesting because

00:08:30,740 --> 00:08:33,950
even though we've only been doing this

00:08:31,760 --> 00:08:35,450
for maybe the last five years selectors

00:08:33,950 --> 00:08:37,219
have been around since the start so you

00:08:35,450 --> 00:08:40,490
know there's no reason why we couldn't

00:08:37,219 --> 00:08:42,409
have been writing bem 15 years ago it's

00:08:40,490 --> 00:08:44,870
like it was it was there hidden in plain

00:08:42,409 --> 00:08:46,550
sight right in front of our face and we

00:08:44,870 --> 00:08:50,020
didn't see it that's something I want to

00:08:46,550 --> 00:08:52,970
want to come back to so CSS and HTML

00:08:50,020 --> 00:08:54,680
have grown over time in a sort of

00:08:52,970 --> 00:08:57,500
safeway a backwards compatible way

00:08:54,680 --> 00:08:59,540
because they have this loose error

00:08:57,500 --> 00:09:02,270
handling and to me I think that the way

00:08:59,540 --> 00:09:04,510
the browser's treat CSS and HTML is an

00:09:02,270 --> 00:09:06,610
example of the robustness principle

00:09:04,510 --> 00:09:08,920
also called pastels law that you'd be

00:09:06,610 --> 00:09:11,020
conservative in what you send you'd be

00:09:08,920 --> 00:09:12,880
liberal than what you accept now jon

00:09:11,020 --> 00:09:14,530
postel he worked on on the internet on

00:09:12,880 --> 00:09:16,680
the DNS system and he was talking about

00:09:14,530 --> 00:09:19,000
pack packet switching right that'd be

00:09:16,680 --> 00:09:20,050
conservative in what you said if you're

00:09:19,000 --> 00:09:22,030
going to send out a packet make sure

00:09:20,050 --> 00:09:23,680
it's a well-formed packet but if you

00:09:22,030 --> 00:09:24,550
receive a packet and it's badly for what

00:09:23,680 --> 00:09:26,560
you still understand what you're

00:09:24,550 --> 00:09:27,940
supposed to do with it well just do that

00:09:26,560 --> 00:09:30,010
don't you don't be a dick about it right

00:09:27,940 --> 00:09:32,200
don't say I refuse to pass on that

00:09:30,010 --> 00:09:33,670
packet be liberal and what you accept

00:09:32,200 --> 00:09:36,040
and you might think this is a very

00:09:33,670 --> 00:09:38,110
technical kind of law that's robustness

00:09:36,040 --> 00:09:40,120
principle but I see it all the time I

00:09:38,110 --> 00:09:42,370
see in the world of the design and user

00:09:40,120 --> 00:09:45,190
experience let's say you're putting a

00:09:42,370 --> 00:09:48,190
form on the web well classic you know

00:09:45,190 --> 00:09:49,990
first rule is what God uses few form

00:09:48,190 --> 00:09:51,220
fields as possible right don't make it

00:09:49,990 --> 00:09:53,080
really well make it as short as you can

00:09:51,220 --> 00:09:55,210
in other words you know be conservative

00:09:53,080 --> 00:09:57,220
in what you send but then when the user

00:09:55,210 --> 00:09:59,080
is filling out the form don't make them

00:09:57,220 --> 00:10:00,610
format their telephone number a certain

00:09:59,080 --> 00:10:03,100
way or the credit card number which

00:10:00,610 --> 00:10:05,800
spaces or without spaces be liberal in

00:10:03,100 --> 00:10:07,060
what you accept so pastels law I kind of

00:10:05,800 --> 00:10:10,060
see it all over the place and I

00:10:07,060 --> 00:10:13,690
certainly see it in in CSS and HTML now

00:10:10,060 --> 00:10:16,630
I think that one of the reasons why CSS

00:10:13,690 --> 00:10:18,580
HTML can afford to be so liberal with

00:10:16,630 --> 00:10:21,190
their error handling is because they are

00:10:18,580 --> 00:10:22,960
declarative languages right so with CSS

00:10:21,190 --> 00:10:24,850
and HTML you do not tell the computer

00:10:22,960 --> 00:10:26,290
lines line exactly what it's supposed to

00:10:24,850 --> 00:10:27,430
render to the screen it's more like

00:10:26,290 --> 00:10:29,740
you're declaring what you want this is

00:10:27,430 --> 00:10:31,570
my content these are the Styles I want

00:10:29,740 --> 00:10:34,810
and you leave it up to the browser to do

00:10:31,570 --> 00:10:36,550
the rendering right that's different to

00:10:34,810 --> 00:10:38,320
an imperative language like in the

00:10:36,550 --> 00:10:40,120
browser we have JavaScript and Java

00:10:38,320 --> 00:10:41,560
Script is imperative where you have to

00:10:40,120 --> 00:10:43,690
tell the browser exactly what you wanted

00:10:41,560 --> 00:10:45,970
to do right now of course you get so

00:10:43,690 --> 00:10:47,530
much more power with an imperative

00:10:45,970 --> 00:10:49,240
language because you have that control

00:10:47,530 --> 00:10:52,060
much more power than you get with a

00:10:49,240 --> 00:10:53,500
declarative language but the declarative

00:10:52,060 --> 00:10:55,510
language is well a they tend to be a bit

00:10:53,500 --> 00:10:57,550
easier to learn right because they're

00:10:55,510 --> 00:11:00,370
declarative and be they can afford this

00:10:57,550 --> 00:11:02,080
lacks error handling you can't really do

00:11:00,370 --> 00:11:03,790
that with an imperative language right

00:11:02,080 --> 00:11:05,920
it wouldn't be helpful if you're trying

00:11:03,790 --> 00:11:08,020
to program in java script and there's an

00:11:05,920 --> 00:11:10,680
error and browsers like don't worry

00:11:08,020 --> 00:11:12,670
about it you know that that's not useful

00:11:10,680 --> 00:11:15,010
but what this does mean is that because

00:11:12,670 --> 00:11:16,570
of the loose error handling this is

00:11:15,010 --> 00:11:17,560
broad sweeping statement but i would say

00:11:16,570 --> 00:11:19,540
that the clarity of Langley

00:11:17,560 --> 00:11:21,460
like CSS and HTML tend to be more

00:11:19,540 --> 00:11:23,110
resilient precisely because they're

00:11:21,460 --> 00:11:25,029
loose with error handling whereas an

00:11:23,110 --> 00:11:26,529
imperative language like javascript in

00:11:25,029 --> 00:11:28,660
the browser even though it gives you so

00:11:26,529 --> 00:11:30,430
much more power is inherently more

00:11:28,660 --> 00:11:32,200
fragile because it's error handling

00:11:30,430 --> 00:11:34,060
model is different if there's an error

00:11:32,200 --> 00:11:35,770
in your JavaScript or you give you the

00:11:34,060 --> 00:11:38,230
browser some JavaScript that doesn't

00:11:35,770 --> 00:11:41,320
understand it will throw an error and it

00:11:38,230 --> 00:11:43,510
will stop parsing the javascript file at

00:11:41,320 --> 00:11:46,960
that point and refuse to parse any

00:11:43,510 --> 00:11:49,690
further now interestingly about ten

00:11:46,960 --> 00:11:54,820
years ago we almost got the worst of

00:11:49,690 --> 00:11:57,070
both worlds trigger warning XHTML 2 so

00:11:54,820 --> 00:11:59,860
this is when the w3c had decided L hTML

00:11:57,070 --> 00:12:02,770
is dead XML is everything so we're going

00:11:59,860 --> 00:12:04,870
to reformulate HTML as XML right now to

00:12:02,770 --> 00:12:06,310
begin with the XHTML one that was fine

00:12:04,870 --> 00:12:08,830
because we were really just taking the

00:12:06,310 --> 00:12:10,660
syntax of XML which was you know all

00:12:08,830 --> 00:12:12,580
your attribute attributes must be quoted

00:12:10,660 --> 00:12:15,100
in lowercase your tag names must be

00:12:12,580 --> 00:12:16,180
lowercase right because in HTML it

00:12:15,100 --> 00:12:18,279
doesn't matter uppercase lowercase

00:12:16,180 --> 00:12:20,740
quoted unquoted browsers don't care

00:12:18,279 --> 00:12:22,330
they're liberal and what they accept so

00:12:20,740 --> 00:12:24,130
it was actually kind of nice when we

00:12:22,330 --> 00:12:26,170
switched over to XHTML one because it

00:12:24,130 --> 00:12:29,260
kind of it was enforcing a kind of a

00:12:26,170 --> 00:12:31,030
coding style in HTML XHTML too was a

00:12:29,260 --> 00:12:34,240
different beast because instead of just

00:12:31,030 --> 00:12:36,339
borrowing the syntax style of XML it was

00:12:34,240 --> 00:12:38,380
also going to borrow the error handling

00:12:36,339 --> 00:12:40,450
model of XML and the error handling

00:12:38,380 --> 00:12:43,390
model of XML is this if there is a

00:12:40,450 --> 00:12:45,820
single error in the XML document do not

00:12:43,390 --> 00:12:49,780
parse the document right so if there's

00:12:45,820 --> 00:12:52,030
one unencoded ampersand in your XHTML to

00:12:49,780 --> 00:12:54,880
page you get the yellow screen of death

00:12:52,030 --> 00:12:55,750
right now this of course is ridiculous

00:12:54,880 --> 00:12:57,790
that you would ever put something like

00:12:55,750 --> 00:13:00,730
this on the public web in front of users

00:12:57,790 --> 00:13:02,530
where was so fragile right and we

00:13:00,730 --> 00:13:04,150
developers and designers we roundly

00:13:02,530 --> 00:13:06,370
rejected it we like know there was this

00:13:04,150 --> 00:13:09,400
rebellion we got html5 so we could keep

00:13:06,370 --> 00:13:13,180
going with HTML we rejected this

00:13:09,400 --> 00:13:17,589
draconian error handling model and yet

00:13:13,180 --> 00:13:20,260
here we are 10 years later and suddenly

00:13:17,589 --> 00:13:22,600
it's like no I'm going to render text to

00:13:20,260 --> 00:13:24,600
a screen using the most fragile layer

00:13:22,600 --> 00:13:27,690
the stack what could possibly go wrong

00:13:24,600 --> 00:13:30,339
somehow we've decided now it's ok to

00:13:27,690 --> 00:13:31,899
make sure that you know that the

00:13:30,339 --> 00:13:33,910
that the piece of the stack with the

00:13:31,899 --> 00:13:36,329
most fragile error handling is one we

00:13:33,910 --> 00:13:39,220
were relying on for everything I

00:13:36,329 --> 00:13:41,199
remember a few years ago the page for

00:13:39,220 --> 00:13:43,749
downloading google chrome had a

00:13:41,199 --> 00:13:45,970
javascript error in it and nobody could

00:13:43,749 --> 00:13:47,709
download google chrome i figures the

00:13:45,970 --> 00:13:50,259
link to download google chrome wasn't a

00:13:47,709 --> 00:13:52,059
proper link to a URL it was using the

00:13:50,259 --> 00:13:53,829
JavaScript pseudo protocol so it's like

00:13:52,059 --> 00:13:56,379
taking the fragile layer of the stack

00:13:53,829 --> 00:13:58,120
and pushing that down into the

00:13:56,379 --> 00:13:59,589
imperative layer or the declarative

00:13:58,120 --> 00:14:02,019
layer it's like again the worst of both

00:13:59,589 --> 00:14:04,870
worlds now this brings up another law

00:14:02,019 --> 00:14:08,050
that I think on the web is as important

00:14:04,870 --> 00:14:11,110
as poss tells law and that's Murphy's

00:14:08,050 --> 00:14:12,670
Law Murphy was a real person he was

00:14:11,110 --> 00:14:14,230
aerospace engineer and because of this

00:14:12,670 --> 00:14:16,870
attitude nobody died on his watch

00:14:14,230 --> 00:14:18,879
anything that can go wrong will go wrong

00:14:16,870 --> 00:14:20,139
it's an uncomfortable truth but it's

00:14:18,879 --> 00:14:22,389
something I think we should accept on

00:14:20,139 --> 00:14:23,980
the web right and what especially comes

00:14:22,389 --> 00:14:26,290
to something with a fragile error

00:14:23,980 --> 00:14:27,939
handling model like JavaScript Stewart

00:14:26,290 --> 00:14:29,259
language put together this kind of list

00:14:27,939 --> 00:14:30,910
of all the things that could possibly go

00:14:29,259 --> 00:14:33,519
wrong with JavaScript and some of its on

00:14:30,910 --> 00:14:34,689
the client some with some network some

00:14:33,519 --> 00:14:36,129
which on the server but they're just

00:14:34,689 --> 00:14:37,899
things out of your control you can write

00:14:36,129 --> 00:14:39,939
the most perfect JavaScript and

00:14:37,899 --> 00:14:42,189
something can still go wrong something

00:14:39,939 --> 00:14:44,649
can go wrong with your HTML and CSS to

00:14:42,189 --> 00:14:45,939
but because of the error handling model

00:14:44,649 --> 00:14:49,499
it doesn't matter as much it's more

00:14:45,939 --> 00:14:52,480
likely to recover you know it's like

00:14:49,499 --> 00:14:53,860
it's like when curry other industries

00:14:52,480 --> 00:14:54,639
you know prepare for the worst right the

00:14:53,860 --> 00:14:56,199
imagine what's the worse could happen

00:14:54,639 --> 00:14:58,179
and they test for that you know I'm car

00:14:56,199 --> 00:14:59,949
manufacturers strapping in crash test

00:14:58,179 --> 00:15:01,329
dummies and smashing against walls at

00:14:59,949 --> 00:15:03,819
high speed could you imagine if one day

00:15:01,329 --> 00:15:04,959
they said yeah actually no you know

00:15:03,819 --> 00:15:06,519
we've been thinking about this and we're

00:15:04,959 --> 00:15:07,749
not going to strap crash test dummies

00:15:06,519 --> 00:15:09,550
into cars and smush room against the

00:15:07,749 --> 00:15:11,259
wall with high speed because we realized

00:15:09,550 --> 00:15:13,149
that actually these cars are going to be

00:15:11,259 --> 00:15:15,519
driven by people not crash-test dummies

00:15:13,149 --> 00:15:17,649
also we anticipate these cards will be

00:15:15,519 --> 00:15:20,199
driven on roads rather than smashed into

00:15:17,649 --> 00:15:21,790
walls at high speed well yes of course

00:15:20,199 --> 00:15:23,920
we all hope that that's what's going to

00:15:21,790 --> 00:15:26,259
happen but you know you got to hope for

00:15:23,920 --> 00:15:27,819
the best but prepare for the worst my

00:15:26,259 --> 00:15:29,709
friend Trent Walton talked about exactly

00:15:27,819 --> 00:15:32,139
this he said like cars designed to

00:15:29,709 --> 00:15:34,720
perform an extreme heat or an icy roads

00:15:32,139 --> 00:15:37,240
websites should be built to face the

00:15:34,720 --> 00:15:39,069
reality of the web's inherent

00:15:37,240 --> 00:15:41,290
variability this is what links to web

00:15:39,069 --> 00:15:42,550
different to other media the reality of

00:15:41,290 --> 00:15:45,420
the web's in

00:15:42,550 --> 00:15:48,040
current variability we need to face it

00:15:45,420 --> 00:15:50,980
okay this sounds very gloom and doom

00:15:48,040 --> 00:15:52,600
right they're coming today uh well no

00:15:50,980 --> 00:15:54,760
matter what we do you know we're doomed

00:15:52,600 --> 00:15:56,920
don't use JavaScript that's not what I'm

00:15:54,760 --> 00:15:58,600
saying I'm not saying that far from it

00:15:56,920 --> 00:16:01,290
I'm saying it's about how we use these

00:15:58,600 --> 00:16:04,120
technologies and I give you a solution

00:16:01,290 --> 00:16:06,459
it's a three-step program to building

00:16:04,120 --> 00:16:08,130
websites that means we can do in a more

00:16:06,459 --> 00:16:10,570
resilient way and here's how it works

00:16:08,130 --> 00:16:12,010
first of all identify the core

00:16:10,570 --> 00:16:14,050
functionality of what it is you're

00:16:12,010 --> 00:16:15,579
building just the core functionality not

00:16:14,050 --> 00:16:17,470
everything just a core functionality

00:16:15,579 --> 00:16:18,940
then you build that you make that

00:16:17,470 --> 00:16:20,980
functionality available using the

00:16:18,940 --> 00:16:24,120
simplest possible technology not the

00:16:20,980 --> 00:16:26,709
best technology the simplest technology

00:16:24,120 --> 00:16:29,350
then you enhance and that's where the

00:16:26,709 --> 00:16:31,200
fun is right at the third step so let's

00:16:29,350 --> 00:16:33,670
talk through this three-step process

00:16:31,200 --> 00:16:35,829
identifying the core functionality this

00:16:33,670 --> 00:16:37,570
is kind of like setting your baseline of

00:16:35,829 --> 00:16:38,560
what you you know you need people to be

00:16:37,570 --> 00:16:39,730
able to accomplish on your site where

00:16:38,560 --> 00:16:42,760
you want everybody to be able to do on

00:16:39,730 --> 00:16:44,470
your on your website so let's say you're

00:16:42,760 --> 00:16:45,850
a news provider what's the core

00:16:44,470 --> 00:16:48,190
functionality well it's right there

00:16:45,850 --> 00:16:49,959
right providing the news not mentioning

00:16:48,190 --> 00:16:51,520
any technologies yet we're just talking

00:16:49,959 --> 00:16:53,350
about the functionality providing the

00:16:51,520 --> 00:16:55,060
news that's the core functionality let's

00:16:53,350 --> 00:16:57,040
say you're a social network where people

00:16:55,060 --> 00:16:59,020
can send and receive messages from all

00:16:57,040 --> 00:17:00,959
over the world well I don't say that's

00:16:59,020 --> 00:17:03,370
the core functionality the ability to

00:17:00,959 --> 00:17:05,050
send messages the ability to receive

00:17:03,370 --> 00:17:07,839
messages again we're not discussing

00:17:05,050 --> 00:17:09,610
technology yet if you got a photo

00:17:07,839 --> 00:17:11,620
sharing site while the clues in the name

00:17:09,610 --> 00:17:13,179
the ability to share photographs again i

00:17:11,620 --> 00:17:14,919
want to see photographs i want to share

00:17:13,179 --> 00:17:16,809
photographs and let's say you've got

00:17:14,919 --> 00:17:18,419
this online collaborative tool where

00:17:16,809 --> 00:17:20,350
people can write and edit and share

00:17:18,419 --> 00:17:22,919
there we go those that's the core

00:17:20,350 --> 00:17:25,780
function right writing editing sharing

00:17:22,919 --> 00:17:27,189
okay we've established the core

00:17:25,780 --> 00:17:28,449
functionality now how do we make that

00:17:27,189 --> 00:17:30,130
functionality available using the

00:17:28,449 --> 00:17:32,950
simplest not the best the simplest

00:17:30,130 --> 00:17:35,500
possible technology well in the case of

00:17:32,950 --> 00:17:37,330
putting the news online i'd say HTML

00:17:35,500 --> 00:17:39,910
right on markup that news in an HTML

00:17:37,330 --> 00:17:41,290
document now technically actually i

00:17:39,910 --> 00:17:43,090
would say the simplest possible

00:17:41,290 --> 00:17:46,300
technology would be a plain text file

00:17:43,090 --> 00:17:49,720
but I'll allow myself you know some HTML

00:17:46,300 --> 00:17:51,910
in this case done okay I need to be able

00:17:49,720 --> 00:17:53,140
to see messages on the social network

00:17:51,910 --> 00:17:55,540
probably in a reverse chronological

00:17:53,140 --> 00:17:56,320
order okay that's we've got a list for

00:17:55,540 --> 00:17:59,019
and I need to be able to

00:17:56,320 --> 00:18:01,690
send a message to the server so a form

00:17:59,019 --> 00:18:03,519
field input type equals text send it to

00:18:01,690 --> 00:18:05,769
the server full page refreshes there we

00:18:03,519 --> 00:18:07,330
go in the case of photo sharing app it's

00:18:05,769 --> 00:18:09,700
very similar that reverse chronological

00:18:07,330 --> 00:18:12,190
list now probably contains images rather

00:18:09,700 --> 00:18:13,389
than just text and the form filled this

00:18:12,190 --> 00:18:15,100
time is a little different instead of

00:18:13,389 --> 00:18:17,019
input type of text needs to be input

00:18:15,100 --> 00:18:19,960
type those files so I can send an image

00:18:17,019 --> 00:18:21,669
to the server and in the case of that

00:18:19,960 --> 00:18:24,340
collaborative writing tool where you can

00:18:21,669 --> 00:18:27,250
write and edit and share the text area

00:18:24,340 --> 00:18:29,169
all right now if you stopped at this

00:18:27,250 --> 00:18:31,509
point yeah I wouldn't hold my breath

00:18:29,169 --> 00:18:34,000
waiting for the IPO well it this way

00:18:31,509 --> 00:18:36,700
it's technically what you've built works

00:18:34,000 --> 00:18:38,769
but it kind of sucks right the UX is

00:18:36,700 --> 00:18:41,830
terrible you know full page refreshes

00:18:38,769 --> 00:18:43,629
for everything it's not fun to use but

00:18:41,830 --> 00:18:44,980
it is accessible to everyone because

00:18:43,629 --> 00:18:47,289
you've built it with the simplest

00:18:44,980 --> 00:18:50,649
possible technology now that you've done

00:18:47,289 --> 00:18:52,750
that not even lay this baseline oh the

00:18:50,649 --> 00:18:55,870
fun you'll have at step three were you

00:18:52,750 --> 00:18:58,299
enhance so in the case of this newspaper

00:18:55,870 --> 00:19:01,000
article of put it online as HTML I'll

00:18:58,299 --> 00:19:02,440
lay it out on wider screens it might be

00:19:01,000 --> 00:19:03,789
weird to think of layout as an

00:19:02,440 --> 00:19:05,259
enhancement but if you think about

00:19:03,789 --> 00:19:07,360
responsive design and particularly

00:19:05,259 --> 00:19:09,279
mobile first responsive design well

00:19:07,360 --> 00:19:10,960
that's exactly what layout is right if

00:19:09,279 --> 00:19:12,399
your regular style then inside your

00:19:10,960 --> 00:19:14,440
media queries you got the styles for

00:19:12,399 --> 00:19:16,750
larger screens layout as an enhancement

00:19:14,440 --> 00:19:18,850
when I say something is an enhancement

00:19:16,750 --> 00:19:21,909
please don't misinterpret that as me

00:19:18,850 --> 00:19:23,139
saying it's just an enhancement the

00:19:21,909 --> 00:19:24,639
enhancements are what matter the

00:19:23,139 --> 00:19:26,679
enhancements what differentiate you from

00:19:24,639 --> 00:19:27,909
the competition right so we kind of

00:19:26,679 --> 00:19:29,590
layout and we can have beautiful

00:19:27,909 --> 00:19:31,419
typography like we heard about her there

00:19:29,590 --> 00:19:34,509
from Helen right with Ron faced with web

00:19:31,419 --> 00:19:37,450
fonts when done responsibly we can make

00:19:34,509 --> 00:19:38,649
it beautiful in that social networking

00:19:37,450 --> 00:19:40,629
like I said it's full page refreshes

00:19:38,649 --> 00:19:44,529
it's not a great experience well let's

00:19:40,629 --> 00:19:46,240
use Ajax so that when I post to the

00:19:44,529 --> 00:19:47,710
service don't have to have a full page

00:19:46,240 --> 00:19:50,019
request in fact let's make it so that

00:19:47,710 --> 00:19:51,429
when messages arrive I don't have to

00:19:50,019 --> 00:19:53,200
have a full page request right and can

00:19:51,429 --> 00:19:54,370
you something like web sockets maybe

00:19:53,200 --> 00:19:56,289
it's not supported in every browser

00:19:54,370 --> 00:19:57,669
doesn't matter because the core

00:19:56,289 --> 00:19:59,230
functionality is available for everyone

00:19:57,669 --> 00:20:01,149
no matter what kind of browser to have

00:19:59,230 --> 00:20:03,490
right everything from here on in is an

00:20:01,149 --> 00:20:04,870
enhancement now for this photo sharing

00:20:03,490 --> 00:20:07,779
site will use all the previous things

00:20:04,870 --> 00:20:09,760
you've said right layout font face Ajax

00:20:07,779 --> 00:20:10,340
web sockets let's have some more fun

00:20:09,760 --> 00:20:13,460
lets you something

00:20:10,340 --> 00:20:15,110
like the file API right we can get that

00:20:13,460 --> 00:20:17,270
image into the browser and I do fun

00:20:15,110 --> 00:20:19,929
stuff like put CSS filters put a sweet

00:20:17,270 --> 00:20:22,220
sepia tone on that photograph right

00:20:19,929 --> 00:20:24,230
again maybe it's not supported in every

00:20:22,220 --> 00:20:25,909
browser that's okay the core

00:20:24,230 --> 00:20:28,669
functionality is supported in every

00:20:25,909 --> 00:20:29,809
browser and in the case of this online

00:20:28,669 --> 00:20:32,690
writing to everything you've said so far

00:20:29,809 --> 00:20:34,940
right the Ajax and the and the web

00:20:32,690 --> 00:20:36,289
sockets and the layout and the web fonts

00:20:34,940 --> 00:20:38,059
all that stuff but you know let's use

00:20:36,289 --> 00:20:39,200
some sort of local storage and boy if

00:20:38,059 --> 00:20:41,150
you got a lot of choices when it comes

00:20:39,200 --> 00:20:43,309
to local storage right to make sure that

00:20:41,150 --> 00:20:44,990
the data isn't reliant on that network

00:20:43,309 --> 00:20:47,960
connection and of course we can have

00:20:44,990 --> 00:20:49,760
service workers beautiful beautiful

00:20:47,960 --> 00:20:51,110
service workers you're going to be

00:20:49,760 --> 00:20:52,580
hearing a lot about service workers

00:20:51,110 --> 00:20:54,890
tomorrow there's a whole discussion on

00:20:52,580 --> 00:20:56,659
progressive web apps right call it what

00:20:54,890 --> 00:20:58,309
you want it's about service workers it's

00:20:56,659 --> 00:21:00,350
probably the web technology i'm most

00:20:58,309 --> 00:21:02,929
excited about right now because we can

00:21:00,350 --> 00:21:05,899
effectively make the network itself an

00:21:02,929 --> 00:21:07,010
enhancement right this is true

00:21:05,899 --> 00:21:08,480
resilience when you're creating

00:21:07,010 --> 00:21:10,520
something on the web that once you use

00:21:08,480 --> 00:21:14,390
its visited it still carries on working

00:21:10,520 --> 00:21:17,679
even if the network is flaky so powerful

00:21:14,390 --> 00:21:19,820
so you see with this three-step process

00:21:17,679 --> 00:21:21,230
you get to have your cake and eat it too

00:21:19,820 --> 00:21:22,730
I want to put an end to this false

00:21:21,230 --> 00:21:24,919
dichotomy that you can either have

00:21:22,730 --> 00:21:26,990
something simple that works everywhere

00:21:24,919 --> 00:21:28,789
or you can have some rich immersive

00:21:26,990 --> 00:21:30,919
experience for the latest and greatest

00:21:28,789 --> 00:21:33,679
browsers now I'm saying you can have

00:21:30,919 --> 00:21:36,049
both you can have both if you build in

00:21:33,679 --> 00:21:38,179
this order don't jump to step 3 now what

00:21:36,049 --> 00:21:39,830
I like about this three-step process is

00:21:38,179 --> 00:21:41,539
its kind of scale-free it works at

00:21:39,830 --> 00:21:43,220
different scales I've only been talking

00:21:41,539 --> 00:21:44,840
about the whole system right the whole

00:21:43,220 --> 00:21:46,309
service you're building but you can

00:21:44,840 --> 00:21:48,380
imagine doing this at the level of a

00:21:46,309 --> 00:21:51,110
single URL right what's the core

00:21:48,380 --> 00:21:52,909
functionality of this URL how do I make

00:21:51,110 --> 00:21:54,289
that core functionality available with

00:21:52,909 --> 00:21:55,669
the simplest possible technology and

00:21:54,289 --> 00:21:57,529
then how do i enhance what's the fun

00:21:55,669 --> 00:21:58,669
stuff I can do go further you could

00:21:57,529 --> 00:22:00,830
imagine doing this at the level of a

00:21:58,669 --> 00:22:02,690
component a module what's its core

00:22:00,830 --> 00:22:04,279
functionality what's the simplest

00:22:02,690 --> 00:22:07,130
possible technology to enable that and

00:22:04,279 --> 00:22:08,899
then how do i enhance up from there so

00:22:07,130 --> 00:22:10,399
the way I think about this about

00:22:08,899 --> 00:22:12,559
spending a little time and steps one and

00:22:10,399 --> 00:22:14,149
two before Jemm to step three is you

00:22:12,559 --> 00:22:16,159
know we heard earlier on today about all

00:22:14,149 --> 00:22:18,559
the dangers with frameworks you end up

00:22:16,159 --> 00:22:21,799
inheriting technical debt right well I

00:22:18,559 --> 00:22:22,730
think of this is technical credit what

00:22:21,799 --> 00:22:23,620
you're getting here is you're getting

00:22:22,730 --> 00:22:25,270
permission to kind

00:22:23,620 --> 00:22:27,250
go crazy at step three and there's a bit

00:22:25,270 --> 00:22:28,270
of a myth about this approach that oh if

00:22:27,250 --> 00:22:29,920
you're thinking about how it's going to

00:22:28,270 --> 00:22:31,450
work in older browsers that means you're

00:22:29,920 --> 00:22:34,120
spending all your time in older browsers

00:22:31,450 --> 00:22:35,800
no it's the exact opposite because I

00:22:34,120 --> 00:22:37,270
spent some time making sure you know

00:22:35,800 --> 00:22:39,370
this full page requests that still work

00:22:37,270 --> 00:22:41,290
client server and then I go and enhance

00:22:39,370 --> 00:22:43,780
with all the cool javascript stuff I've

00:22:41,290 --> 00:22:45,790
got carte blanche to go crazy with the

00:22:43,780 --> 00:22:48,280
latest and greatest api's it's kind of

00:22:45,790 --> 00:22:50,200
the only responsible way to start using

00:22:48,280 --> 00:22:52,150
this stuff today doesn't matter if I'm

00:22:50,200 --> 00:22:54,130
can i use there's only one column of

00:22:52,150 --> 00:22:56,470
green you can still start using this

00:22:54,130 --> 00:22:57,640
stuff so far from me saying that you

00:22:56,470 --> 00:22:59,650
know i'm here to spread doom and gloom

00:22:57,640 --> 00:23:02,590
so you can't use this so you can't use

00:22:59,650 --> 00:23:04,600
that i'm saying you can go crazy as long

00:23:02,590 --> 00:23:07,210
as it step 3 right that you've already

00:23:04,600 --> 00:23:12,610
built a technical credit of steps one

00:23:07,210 --> 00:23:16,059
and two but i don't see sites excuse me

00:23:12,610 --> 00:23:19,660
web apps being built this way and I

00:23:16,059 --> 00:23:20,770
worry well why is that and I can't help

00:23:19,660 --> 00:23:23,470
but come to the conclusion that the

00:23:20,770 --> 00:23:26,500
reason is that we collectively have kind

00:23:23,470 --> 00:23:27,940
of come to believe that developer

00:23:26,500 --> 00:23:29,800
convenience is what's most important

00:23:27,940 --> 00:23:31,330
when it comes to evaluating technologies

00:23:29,800 --> 00:23:33,429
how is this going to make my life easier

00:23:31,330 --> 00:23:35,080
now don't get me wrong I'm a big fan of

00:23:33,429 --> 00:23:36,520
developer convenience as a developer

00:23:35,080 --> 00:23:39,730
right I want my life to be as easy as

00:23:36,520 --> 00:23:42,340
possible but not at the expense of user

00:23:39,730 --> 00:23:46,510
needs that's got to come first it isn't

00:23:42,340 --> 00:23:49,720
about us it's about them you know if I

00:23:46,510 --> 00:23:51,970
have a problem I'm given the choice of

00:23:49,720 --> 00:23:54,250
making it my problem or making it the

00:23:51,970 --> 00:23:57,340
users problem i'll make it my problem

00:23:54,250 --> 00:23:58,809
every time because that's my job so i

00:23:57,340 --> 00:24:01,870
get paid that's why they call it work

00:23:58,809 --> 00:24:03,550
right and yet I find that we

00:24:01,870 --> 00:24:05,380
collectively we're always complaining

00:24:03,550 --> 00:24:08,230
about what we don't have like make my

00:24:05,380 --> 00:24:10,300
life easier right 20 years ago was like

00:24:08,230 --> 00:24:12,340
oh the web will be so much better when

00:24:10,300 --> 00:24:14,650
we've more than 200 16 colors true story

00:24:12,340 --> 00:24:16,780
216 colors right the weather is so much

00:24:14,650 --> 00:24:18,370
better once we have you know web fonts

00:24:16,780 --> 00:24:19,900
the nothingness these system fonts were

00:24:18,370 --> 00:24:21,550
stuck with things will be so much better

00:24:19,900 --> 00:24:24,010
when people will finally upgrade from

00:24:21,550 --> 00:24:26,770
Netscape for if those internet explorer

00:24:24,010 --> 00:24:28,360
6 users we just upgrade everything will

00:24:26,770 --> 00:24:30,640
be fine if people just get off windows

00:24:28,360 --> 00:24:32,679
XP then the web can move for if those

00:24:30,640 --> 00:24:35,410
android 2.1 every years would just

00:24:32,679 --> 00:24:36,679
upgrade right there's always something

00:24:35,410 --> 00:24:40,789
where

00:24:36,679 --> 00:24:43,369
were happy my friend Frank he he wrote

00:24:40,789 --> 00:24:46,129
this essay called there is a horse in

00:24:43,369 --> 00:24:48,950
the apple store and in this he describes

00:24:46,129 --> 00:24:52,820
the true situation of the horse in the

00:24:48,950 --> 00:24:54,049
apple store tiny horse he describes the

00:24:52,820 --> 00:24:56,480
horse in the apple store and he also

00:24:54,049 --> 00:24:59,059
describes the reaction or complete lack

00:24:56,480 --> 00:25:01,929
thereof by all the people in the apple

00:24:59,059 --> 00:25:06,769
store looking at the new shiny stuff

00:25:01,929 --> 00:25:08,690
there's a horse in the apple store and

00:25:06,769 --> 00:25:10,429
he's taken to calling this kind of stuff

00:25:08,690 --> 00:25:12,289
you know stuff that's right in front of

00:25:10,429 --> 00:25:14,330
us that's amazing it's a miracle and we

00:25:12,289 --> 00:25:17,570
don't even recognize me only this year

00:25:14,330 --> 00:25:20,149
he calls on tiny ponies and I think the

00:25:17,570 --> 00:25:22,999
world wide web is a tiny pony alright

00:25:20,149 --> 00:25:24,409
it's an amazing thing that we take for

00:25:22,999 --> 00:25:27,019
granted we're always comparing it to

00:25:24,409 --> 00:25:29,210
other things cd-roms flash now native

00:25:27,019 --> 00:25:30,710
and seeing what you know what those what

00:25:29,210 --> 00:25:32,929
those things can do that we can't do

00:25:30,710 --> 00:25:35,330
without realizing what only the web can

00:25:32,929 --> 00:25:38,539
do right the greatest distribution

00:25:35,330 --> 00:25:40,429
platform ever now with URLs not only can

00:25:38,539 --> 00:25:42,559
you put something up there now you can

00:25:40,429 --> 00:25:45,470
make it last over time you can

00:25:42,559 --> 00:25:47,899
contribute to the next generation right

00:25:45,470 --> 00:25:49,369
that with URLs we can extend the reach

00:25:47,899 --> 00:25:51,320
of our networks for future generations

00:25:49,369 --> 00:25:54,320
we can extend the reach of the

00:25:51,320 --> 00:25:55,669
collective knowledge of our species you

00:25:54,320 --> 00:25:57,259
know it's a heavy responsibility but I

00:25:55,669 --> 00:25:59,929
kind of think we need to be good

00:25:57,259 --> 00:26:03,230
ancestors building on the web so let's

00:25:59,929 --> 00:26:07,299
leave behind a web that lasts a web

00:26:03,230 --> 00:26:07,299

YouTube URL: https://www.youtube.com/watch?v=W7wj7EDrSko


