Title: "Progressive Web Apps is the new Ajax" - View Source Conference talk by Chris Wilson
Publication date: 2016-10-03
Playlist: View Source Berlin 2016
Description: 
	This is a transformative moment for the web. The revolution that is happening now is no less revolutionary than what happened a decade ago with Ajax - we can finally build reliable, fast and engaging apps on web technologies. In this talk, I'll dive into the what, why and how of Progressive Web Apps - describe what a "Progressive Web App" really is, show the opportunities in building them, and point you on your way to becoming a Progressive Web App developer. 

View Source Berlin 12-14 September, 2016

Chris Wilson is Developer Advocate on the Web team at Google. He started helping build the web in 1993 when he co-authored the original Windows version of the NCSA Mosaic browser. He then spent fifteen years at Microsoft working on Internet Explorer, and then joined Google in 2010. He has a particular interest in enabling awesome user experiences and hacking on audio and MIDI in the web platform, and is a long-time participant in various web standards working groups. He chairs the Web Platform Incubation Group at the W3C, and also sits on the W3C Advisory Board.
Captions: 
	00:00:06,660 --> 00:00:12,490
so good morning as Posh said I have been

00:00:10,690 --> 00:00:15,549
working on the web platform for a really

00:00:12,490 --> 00:00:18,160
long time in fact this is me at my very

00:00:15,549 --> 00:00:21,430
first web conference ever this is the

00:00:18,160 --> 00:00:23,260
web wizards conference in 1993 and I

00:00:21,430 --> 00:00:26,170
bring this up not because of the awesome

00:00:23,260 --> 00:00:28,720
hair do but because I've been at this a

00:00:26,170 --> 00:00:31,000
really long time and I have to say this

00:00:28,720 --> 00:00:33,940
is one of the most exciting times in the

00:00:31,000 --> 00:00:35,770
development of the web we're finally at

00:00:33,940 --> 00:00:38,260
a place where the web platform can be

00:00:35,770 --> 00:00:40,000
used to build really awesome seamlessly

00:00:38,260 --> 00:00:43,270
engaging applications which is something

00:00:40,000 --> 00:00:45,550
I've wanted for years decades and this

00:00:43,270 --> 00:00:47,739
is really no less revolutionary than

00:00:45,550 --> 00:00:49,989
what happened in around two thousand

00:00:47,739 --> 00:00:54,010
five when the pattern of the Ajax

00:00:49,989 --> 00:00:56,079
transform the web from static pages into

00:00:54,010 --> 00:00:58,870
dynamic interactive experiences when we

00:00:56,079 --> 00:01:01,059
the expectation of user experience went

00:00:58,870 --> 00:01:04,449
from clicking on the side of a map and

00:01:01,059 --> 00:01:08,020
mapquest waiting 30 seconds or so to get

00:01:04,449 --> 00:01:10,270
a new tile downloaded to Google Maps

00:01:08,020 --> 00:01:11,619
live panning zooming that kind of stuff

00:01:10,270 --> 00:01:14,560
you didn't have to spend 30 minutes

00:01:11,619 --> 00:01:16,479
installing native software you didn't

00:01:14,560 --> 00:01:18,969
have to live with this horrible click

00:01:16,479 --> 00:01:20,380
and wait experience but this has really

00:01:18,969 --> 00:01:23,409
been a lot more successful in the

00:01:20,380 --> 00:01:25,569
desktop web then the mobile web so raise

00:01:23,409 --> 00:01:28,119
your hand if you've used maps doesn't

00:01:25,569 --> 00:01:31,389
have to be google maps on your desktop

00:01:28,119 --> 00:01:34,539
like on the web pretty much everybody

00:01:31,389 --> 00:01:37,869
right now how many of you have gone to

00:01:34,539 --> 00:01:41,829
the web to get a map from map software

00:01:37,869 --> 00:01:45,279
on the web on your mobile device rather

00:01:41,829 --> 00:01:47,109
than the native application yeah not

00:01:45,279 --> 00:01:50,979
very many there's always a few by the

00:01:47,109 --> 00:01:53,169
way you're a special Group but most

00:01:50,979 --> 00:01:54,939
folks use a map application on their

00:01:53,169 --> 00:01:57,549
phone right and this is important

00:01:54,939 --> 00:01:59,889
because mobile is what's the bottom of

00:01:57,549 --> 00:02:01,840
this revolution the explosion of

00:01:59,889 --> 00:02:03,969
computing usage and mobile right after

00:02:01,840 --> 00:02:06,999
the explosion of the web is changing the

00:02:03,969 --> 00:02:08,979
computing landscape yet again a year or

00:02:06,999 --> 00:02:12,099
two ago depending on whose staffs you

00:02:08,979 --> 00:02:14,260
use mobile computing use outstripped

00:02:12,099 --> 00:02:16,240
desktop computing use we're using mobile

00:02:14,260 --> 00:02:18,620
devices more for computing than we are

00:02:16,240 --> 00:02:21,950
traditional desktops and laptops

00:02:18,620 --> 00:02:23,989
and on mobile users tend to spend most

00:02:21,950 --> 00:02:26,030
of their time in native applications

00:02:23,989 --> 00:02:28,730
rather than the web this is changing a

00:02:26,030 --> 00:02:30,860
bit but as of last year only thirteen

00:02:28,730 --> 00:02:33,440
percent of users time on their mobile

00:02:30,860 --> 00:02:35,620
devices was on the mobile web versus

00:02:33,440 --> 00:02:38,540
eighty-seven percent spent in apps and

00:02:35,620 --> 00:02:40,370
apps are more predictable like they have

00:02:38,540 --> 00:02:42,340
some great reengagement features they

00:02:40,370 --> 00:02:46,040
give you notifications home screen icons

00:02:42,340 --> 00:02:47,989
all kinds of neat stuff and it kind of

00:02:46,040 --> 00:02:50,410
seems like I could just stop here say go

00:02:47,989 --> 00:02:54,290
build native apps and we could be done

00:02:50,410 --> 00:02:56,209
but there's a flip side to this first of

00:02:54,290 --> 00:02:58,879
all app usage is highly highly

00:02:56,209 --> 00:03:01,910
concentrated so users tend to only use a

00:02:58,879 --> 00:03:04,190
few applications it's kind of a winner

00:03:01,910 --> 00:03:07,190
take all situation because based on user

00:03:04,190 --> 00:03:09,349
studies people see native apps is kind

00:03:07,190 --> 00:03:11,690
of a big commitment in time and space

00:03:09,349 --> 00:03:14,750
and costs like maintaining the

00:03:11,690 --> 00:03:16,940
application on their device native apps

00:03:14,750 --> 00:03:20,090
are engaging but only a few of them are

00:03:16,940 --> 00:03:21,530
worth installing and I'm sure you

00:03:20,090 --> 00:03:24,530
probably heard according to a recent

00:03:21,530 --> 00:03:27,260
study the average user is installing

00:03:24,530 --> 00:03:29,299
zero new applications per month zero

00:03:27,260 --> 00:03:30,470
they're not getting anything new they're

00:03:29,299 --> 00:03:33,709
just sticking with the apps that they

00:03:30,470 --> 00:03:36,260
have by contrast mobile users according

00:03:33,709 --> 00:03:38,780
to our own data they visit over a

00:03:36,260 --> 00:03:41,120
hundred websites per month so more than

00:03:38,780 --> 00:03:43,220
a hundred apps hundred websites per

00:03:41,120 --> 00:03:45,889
month that you're visiting and this is

00:03:43,220 --> 00:03:48,349
really to me the power of URLs and the

00:03:45,889 --> 00:03:49,819
ephemerality of the web is you can meet

00:03:48,349 --> 00:03:54,470
these one-off needs you can get

00:03:49,819 --> 00:03:55,519
additional stuff much more easily one

00:03:54,470 --> 00:03:58,310
way to think of the different stream

00:03:55,519 --> 00:04:00,739
native and web has always been the

00:03:58,310 --> 00:04:02,840
capability access like native apps have

00:04:00,739 --> 00:04:04,430
the ability to start up reliably when

00:04:02,840 --> 00:04:06,980
you hit their icon they boot up quickly

00:04:04,430 --> 00:04:08,480
they tend to work offline they can send

00:04:06,980 --> 00:04:10,699
notifications they can hook into

00:04:08,480 --> 00:04:13,819
Bluetooth devices and microphones and

00:04:10,699 --> 00:04:15,829
cameras and stuff like that but if we

00:04:13,819 --> 00:04:18,769
can add that set of capabilities to the

00:04:15,829 --> 00:04:19,910
web fulfill those set of expectations we

00:04:18,769 --> 00:04:22,010
can have the best of both of those

00:04:19,910 --> 00:04:24,080
worlds and this is really what

00:04:22,010 --> 00:04:26,690
progressive web apps as a term is

00:04:24,080 --> 00:04:28,849
supposed to represent a user experience

00:04:26,690 --> 00:04:30,830
that's good enough that's integrated

00:04:28,849 --> 00:04:31,900
enough to earn a place on the user's

00:04:30,830 --> 00:04:34,660
home screen and

00:04:31,900 --> 00:04:38,199
the notification tray but without losing

00:04:34,660 --> 00:04:41,800
that reach and that ephemerality to get

00:04:38,199 --> 00:04:43,960
there and if you don't remember anything

00:04:41,800 --> 00:04:45,780
else that I say today this is the one

00:04:43,960 --> 00:04:47,979
thing that I want you to walk away with

00:04:45,780 --> 00:04:49,810
progressive web apps are really just a

00:04:47,979 --> 00:04:51,970
whole new level of caring about your end

00:04:49,810 --> 00:04:53,889
to end user experience they're not about

00:04:51,970 --> 00:04:56,650
a set of technology they're not about

00:04:53,889 --> 00:04:58,090
you know a specific piece that you have

00:04:56,650 --> 00:05:00,669
to implement and there are those pieces

00:04:58,090 --> 00:05:03,639
too but the core is just caring about

00:05:00,669 --> 00:05:06,729
end-to-end how does he user experience

00:05:03,639 --> 00:05:09,340
your application this by the way is an

00:05:06,729 --> 00:05:12,280
echo of something that Ben Galbraith

00:05:09,340 --> 00:05:14,110
said a decade ago in 2006 I think I

00:05:12,280 --> 00:05:16,660
finally I finally figured out which

00:05:14,110 --> 00:05:19,389
conference he had set it at and he said

00:05:16,660 --> 00:05:20,949
about ajax ajax isn't about technology

00:05:19,389 --> 00:05:23,770
it's about caring about your user

00:05:20,949 --> 00:05:25,810
experience and that resonated with me so

00:05:23,770 --> 00:05:27,910
well I remembered it a decade later and

00:05:25,810 --> 00:05:31,900
I'm not just sucking up because I report

00:05:27,910 --> 00:05:35,080
to him now but in order to get those

00:05:31,900 --> 00:05:37,240
user experiences in order to to build

00:05:35,080 --> 00:05:38,830
that new level we need to improve

00:05:37,240 --> 00:05:41,710
applications that are built on the web

00:05:38,830 --> 00:05:43,660
on three main fronts first of all web

00:05:41,710 --> 00:05:46,900
apps really need to be much more

00:05:43,660 --> 00:05:49,960
reliable because we've become used to

00:05:46,900 --> 00:05:51,849
always being online right so when we see

00:05:49,960 --> 00:05:54,099
this cute little creature the downer

00:05:51,849 --> 00:05:55,900
sore by the way I'm making down a sore

00:05:54,099 --> 00:05:58,960
thing go tell everybody else it's the

00:05:55,900 --> 00:06:01,690
dinosaur it's a disaster right like it

00:05:58,960 --> 00:06:03,729
destroys your web app experience because

00:06:01,690 --> 00:06:05,919
offline just doesn't really work on the

00:06:03,729 --> 00:06:08,349
web who here is opened up a web browser

00:06:05,919 --> 00:06:10,270
to use a web application when they

00:06:08,349 --> 00:06:14,289
absolutely no they do not have a network

00:06:10,270 --> 00:06:16,720
connection that is way more than usual

00:06:14,289 --> 00:06:19,270
and it's still like five percent of the

00:06:16,720 --> 00:06:21,039
audience may be like that's that's

00:06:19,270 --> 00:06:23,380
horrible that's not a good offline

00:06:21,039 --> 00:06:25,300
platform if only five percent of the

00:06:23,380 --> 00:06:28,750
people actually expect it to do anything

00:06:25,300 --> 00:06:31,810
and the worst part is that it's mobile

00:06:28,750 --> 00:06:33,159
devices don't even that like they don't

00:06:31,810 --> 00:06:34,659
even necessarily have a network

00:06:33,159 --> 00:06:36,760
connection or not have a network

00:06:34,659 --> 00:06:39,460
connection they exist in this kind of

00:06:36,760 --> 00:06:41,560
schrödinger's cat state of cell network

00:06:39,460 --> 00:06:42,710
connectivity even when it looks like you

00:06:41,560 --> 00:06:45,500
have a connection you

00:06:42,710 --> 00:06:48,140
not sometimes when it looks like you

00:06:45,500 --> 00:06:50,090
don't have a connection you do and it's

00:06:48,140 --> 00:06:52,100
not just no connection that causes a

00:06:50,090 --> 00:06:55,130
problem slow connections intermittent

00:06:52,100 --> 00:06:57,770
connections all kinds of states affect

00:06:55,130 --> 00:07:03,070
users at least as bad as just flat-out

00:06:57,770 --> 00:07:05,180
not having a connection but mobile apps

00:07:03,070 --> 00:07:08,000
mobile apps don't ever show us the

00:07:05,180 --> 00:07:11,120
dinosaur right nothing on my home screen

00:07:08,000 --> 00:07:12,830
except for chrome ever shows me the

00:07:11,120 --> 00:07:14,960
equivalent the direct equivalent of a

00:07:12,830 --> 00:07:16,520
dinosaur sometimes they say hey there's

00:07:14,960 --> 00:07:18,140
no network I can't do anything more than

00:07:16,520 --> 00:07:20,720
this so I can't do whatever you try to

00:07:18,140 --> 00:07:23,330
do but they don't just flat-out not work

00:07:20,720 --> 00:07:25,880
and in order for web apps to earn a

00:07:23,330 --> 00:07:27,410
place on users home screens we need to

00:07:25,880 --> 00:07:35,060
make them reliable even though the

00:07:27,410 --> 00:07:36,980
network isn't now secondly user

00:07:35,060 --> 00:07:38,930
experiences need to be fast and I'm not

00:07:36,980 --> 00:07:40,820
going to say a whole lot about this but

00:07:38,930 --> 00:07:43,220
users don't expect genki scrolling they

00:07:40,820 --> 00:07:44,900
don't expect slow loading the web has

00:07:43,220 --> 00:07:46,330
had a bad name for performance I think

00:07:44,900 --> 00:07:48,860
we've addressed a lot of that

00:07:46,330 --> 00:07:51,830
particularly on mobile in the browsers

00:07:48,860 --> 00:07:53,990
but this is a continuing journey we need

00:07:51,830 --> 00:07:57,110
to keep making faster and better

00:07:53,990 --> 00:08:00,320
applications and this also underscores

00:07:57,110 --> 00:08:02,480
reliability because you may have heard

00:08:00,320 --> 00:08:05,060
the saying time as money well this is

00:08:02,480 --> 00:08:07,490
definitely true for web users studies

00:08:05,060 --> 00:08:11,510
have shown up to forty percent of users

00:08:07,490 --> 00:08:15,920
abandon a site after three seconds of it

00:08:11,510 --> 00:08:17,570
not loading three seconds like I make a

00:08:15,920 --> 00:08:19,070
joke about kids today but this is

00:08:17,570 --> 00:08:21,220
totally me right if something doesn't

00:08:19,070 --> 00:08:23,870
load I bailout go find a different site

00:08:21,220 --> 00:08:26,840
so loading a web app has to be invisible

00:08:23,870 --> 00:08:30,050
it has to feel instantaneous as part of

00:08:26,840 --> 00:08:32,600
that process and then finally of course

00:08:30,050 --> 00:08:35,930
great user experiences have to engage

00:08:32,600 --> 00:08:38,270
users and when I say engaging it's kind

00:08:35,930 --> 00:08:40,520
of a weird term think of this is

00:08:38,270 --> 00:08:42,890
offering an integrated experience the

00:08:40,520 --> 00:08:46,430
app should feel like it belongs on the

00:08:42,890 --> 00:08:49,040
device not belongs inside a tab inside a

00:08:46,430 --> 00:08:50,510
browser application on the device but

00:08:49,040 --> 00:08:51,800
actually on the device it should just

00:08:50,510 --> 00:08:54,710
feel like part of the computing

00:08:51,800 --> 00:08:56,630
experience so they need to feel

00:08:54,710 --> 00:08:58,700
immersive they need to have a

00:08:56,630 --> 00:09:01,010
for place on the home screen they need

00:08:58,700 --> 00:09:03,220
to reengage users right they need to be

00:09:01,010 --> 00:09:05,420
able to notify users on mobile devices

00:09:03,220 --> 00:09:07,970
notifications are now just a fundamental

00:09:05,420 --> 00:09:10,190
part of turning a monthly active user

00:09:07,970 --> 00:09:12,080
into a daily active user like they

00:09:10,190 --> 00:09:17,150
really unlock reengagement and a bunch

00:09:12,080 --> 00:09:19,730
of other use cases so I want to talk I

00:09:17,150 --> 00:09:21,620
want to walk through what a good

00:09:19,730 --> 00:09:23,870
experience built as a progressive web

00:09:21,620 --> 00:09:26,570
app can look like and what it means so

00:09:23,870 --> 00:09:28,700
this is a progressive web app that the

00:09:26,570 --> 00:09:30,190
Washington Post is built you can go load

00:09:28,700 --> 00:09:34,790
this right now on your mobile device

00:09:30,190 --> 00:09:36,710
WaPo calm / pwa and at first it just

00:09:34,790 --> 00:09:41,060
loads like any other site right it loads

00:09:36,710 --> 00:09:42,740
in a tab in the browser and it's a

00:09:41,060 --> 00:09:44,990
well-designed mobile experience had

00:09:42,740 --> 00:09:46,580
smooth scrolling responsive design all

00:09:44,990 --> 00:09:48,050
the rest but silently it's doing a

00:09:46,580 --> 00:09:50,870
little bit of magic it's installing a

00:09:48,050 --> 00:09:54,680
service worker and it has a manifest so

00:09:50,870 --> 00:09:56,930
after you use it for a while or if you

00:09:54,680 --> 00:09:58,670
revisit it multiple times you get this

00:09:56,930 --> 00:10:00,200
you get an add to homescreen prompt it

00:09:58,670 --> 00:10:02,390
says you know this isn't a banner that

00:10:00,200 --> 00:10:05,870
the Washington Post offers this is

00:10:02,390 --> 00:10:07,940
actually chrome saying hey user you're

00:10:05,870 --> 00:10:10,010
using the site a lot maybe you want to

00:10:07,940 --> 00:10:13,580
add it to your home screen so if you tap

00:10:10,010 --> 00:10:15,050
the accept button then you the browser

00:10:13,580 --> 00:10:16,520
lets you know it's added it to your home

00:10:15,050 --> 00:10:18,800
screen if you go back to your home

00:10:16,520 --> 00:10:23,390
screen you get an icon you tap on the

00:10:18,800 --> 00:10:25,280
icon and now when it loads you get a

00:10:23,390 --> 00:10:27,350
more immersive experience we don't start

00:10:25,280 --> 00:10:29,570
with the flesh of white and a blank

00:10:27,350 --> 00:10:31,790
browser window with the neuro bar we

00:10:29,570 --> 00:10:33,950
actually give you the apps splash screen

00:10:31,790 --> 00:10:34,880
and I'm not pumping up splash screens

00:10:33,950 --> 00:10:37,100
because I don't think they're awesome

00:10:34,880 --> 00:10:38,570
but it means you're at least in control

00:10:37,100 --> 00:10:40,040
of that experience you can give it a

00:10:38,570 --> 00:10:41,630
black screen if you want you can have it

00:10:40,040 --> 00:10:45,110
white you can have it your theme color

00:10:41,630 --> 00:10:48,050
whatever and then it runs full screen

00:10:45,110 --> 00:10:49,730
without an earl bar and this is where

00:10:48,050 --> 00:10:51,470
I'm really happy Jeremy's already left

00:10:49,730 --> 00:10:54,170
because he can't you know heckle me from

00:10:51,470 --> 00:10:56,660
the crowd about Earl's but the idea is

00:10:54,170 --> 00:10:58,850
not to hide URLs it's that the web

00:10:56,660 --> 00:11:03,050
developer should be in control of what

00:10:58,850 --> 00:11:04,910
the users experience is it now the cool

00:11:03,050 --> 00:11:06,410
thing too is that this is kind of not

00:11:04,910 --> 00:11:08,630
really the browser anymore at all

00:11:06,410 --> 00:11:09,930
because if you tap to get to the task

00:11:08,630 --> 00:11:13,320
switcher on Andrew

00:11:09,930 --> 00:11:15,000
this app is top-level right it shows up

00:11:13,320 --> 00:11:17,100
just like any other application it

00:11:15,000 --> 00:11:19,649
doesn't show up as a tab inside Chrome

00:11:17,100 --> 00:11:23,670
it just shows up as an app like any

00:11:19,649 --> 00:11:26,279
other app now by the way in this

00:11:23,670 --> 00:11:29,510
application the Washington Post managed

00:11:26,279 --> 00:11:32,880
to get their load time from a cold start

00:11:29,510 --> 00:11:36,330
second load obviously down to under 80

00:11:32,880 --> 00:11:38,220
milliseconds to first page like this is

00:11:36,330 --> 00:11:40,260
amazing there newsroom their executives

00:11:38,220 --> 00:11:41,940
they were super excited by this they're

00:11:40,260 --> 00:11:44,130
actively evolving this to become their

00:11:41,940 --> 00:11:47,970
core mobile experience across the board

00:11:44,130 --> 00:11:50,399
it's still a demo at this point but this

00:11:47,970 --> 00:11:52,260
experience is reliable it actually does

00:11:50,399 --> 00:11:54,930
work when offline like I've loaded this

00:11:52,260 --> 00:11:57,120
on my phone when it's offline and yes

00:11:54,930 --> 00:11:59,760
the news headlines are old but they they

00:11:57,120 --> 00:12:04,589
work they show me stuff and it loads up

00:11:59,760 --> 00:12:06,990
instantly so when you think about what

00:12:04,589 --> 00:12:08,370
you need to do what you can do to do

00:12:06,990 --> 00:12:10,649
this sort of experience you know to

00:12:08,370 --> 00:12:13,350
improve experiences in your own projects

00:12:10,649 --> 00:12:15,690
I want you to walk away understanding

00:12:13,350 --> 00:12:17,430
the new set of api's understanding

00:12:15,690 --> 00:12:19,589
service worker that kind of thing but I

00:12:17,430 --> 00:12:22,050
want to underscore the key point here

00:12:19,589 --> 00:12:24,630
which is this isn't about this

00:12:22,050 --> 00:12:27,180
technology necessarily just like with

00:12:24,630 --> 00:12:30,120
Ajax the first step is examining your

00:12:27,180 --> 00:12:31,920
end to end user experience and you know

00:12:30,120 --> 00:12:34,680
examine your performance your simplicity

00:12:31,920 --> 00:12:37,740
your responsiveness both to user input

00:12:34,680 --> 00:12:39,810
and to device environments and as Jeremy

00:12:37,740 --> 00:12:42,360
said yesterday identify the core

00:12:39,810 --> 00:12:44,850
functionality and make it available

00:12:42,360 --> 00:12:46,740
using the simplest technology like this

00:12:44,850 --> 00:12:48,810
is going to get you so far along the

00:12:46,740 --> 00:12:53,670
path to building a great progressive web

00:12:48,810 --> 00:12:57,240
app so to start by the way you need

00:12:53,670 --> 00:12:59,310
security you need to need HTTPS you need

00:12:57,240 --> 00:13:01,170
to securely serve everything you you

00:12:59,310 --> 00:13:04,380
produce make sure you have the green

00:13:01,170 --> 00:13:06,180
lock icon this is kind of table stakes

00:13:04,380 --> 00:13:09,329
for the web now like this is the new

00:13:06,180 --> 00:13:12,779
normal is HTTPS more and more powerful

00:13:09,329 --> 00:13:16,079
api's are requiring HTTPS requiring to

00:13:12,779 --> 00:13:17,640
secure domains a lot of old AP is that

00:13:16,079 --> 00:13:20,579
were powerful that we really should have

00:13:17,640 --> 00:13:22,170
required it for before now do require it

00:13:20,579 --> 00:13:25,350
like geolocation for

00:13:22,170 --> 00:13:30,000
sample or get user media requires a

00:13:25,350 --> 00:13:31,410
secure domain now in the past this is

00:13:30,000 --> 00:13:33,470
seemed kind of daunting to a lot of

00:13:31,410 --> 00:13:35,700
developers primarily for two reasons

00:13:33,470 --> 00:13:38,279
getting a certificate and serving it

00:13:35,700 --> 00:13:39,990
could be expensive and a lot of

00:13:38,279 --> 00:13:42,810
developers feared that they would lose

00:13:39,990 --> 00:13:47,880
their their search ranking as their URLs

00:13:42,810 --> 00:13:51,389
changed from HTTP to HTTPS so on secure

00:13:47,880 --> 00:13:53,279
on certificates SSL mate has been

00:13:51,389 --> 00:13:55,620
offering certificates for years now for

00:13:53,279 --> 00:13:57,230
like 16 dollars this shouldn't break the

00:13:55,620 --> 00:14:00,180
bank even if you have multiple certs

00:13:57,230 --> 00:14:02,220
let's encrypt offers free certificates

00:14:00,180 --> 00:14:06,930
so really you don't have a huge excuse

00:14:02,220 --> 00:14:09,000
there yeah both of these offer automated

00:14:06,930 --> 00:14:10,170
to command line tools by the way you can

00:14:09,000 --> 00:14:12,870
make sure your certs aren't going to

00:14:10,170 --> 00:14:17,100
expire on you that kind of stuff and as

00:14:12,870 --> 00:14:19,889
for search ranking between using 301

00:14:17,100 --> 00:14:22,170
redirects and canonical canonical links

00:14:19,889 --> 00:14:23,699
in your docs you really shouldn't have a

00:14:22,170 --> 00:14:25,680
problem with this we have a bunch of

00:14:23,699 --> 00:14:26,699
guidance though to make sure that this

00:14:25,680 --> 00:14:28,649
isn't going to affect your search

00:14:26,699 --> 00:14:31,079
ranking we've published all these best

00:14:28,649 --> 00:14:32,790
practices there are a couple other

00:14:31,079 --> 00:14:35,000
things you should probably do too so I'm

00:14:32,790 --> 00:14:37,470
not going to go into all of them here so

00:14:35,000 --> 00:14:38,820
once you've built a secure domain once

00:14:37,470 --> 00:14:40,860
you're offering everything securely

00:14:38,820 --> 00:14:44,490
you're ready to build a service worker

00:14:40,860 --> 00:14:46,740
now who here understands what service

00:14:44,490 --> 00:14:49,649
workers are have a pretty good idea how

00:14:46,740 --> 00:14:52,529
to build with them how to use them okay

00:14:49,649 --> 00:14:54,660
cool this is my fork point I actually

00:14:52,529 --> 00:14:56,699
have a little note in myself fork point

00:14:54,660 --> 00:14:59,519
tells me that I am going to have to keep

00:14:56,699 --> 00:15:02,279
talking just as fast in order to finish

00:14:59,519 --> 00:15:04,589
in half an hour because I can't skip

00:15:02,279 --> 00:15:07,769
anything so the traditional web model

00:15:04,589 --> 00:15:10,500
has been this when you type in a URL you

00:15:07,769 --> 00:15:12,779
select a bookmark whatever the browser

00:15:10,500 --> 00:15:14,579
goes to the network to fetch the page

00:15:12,779 --> 00:15:16,170
and I'm going to skate past the HTTP

00:15:14,579 --> 00:15:18,930
cache because it's really part of the

00:15:16,170 --> 00:15:21,029
network in this case if the network's

00:15:18,930 --> 00:15:23,310
down you get the downer sore we can't

00:15:21,029 --> 00:15:26,160
load anything but you don't necessarily

00:15:23,310 --> 00:15:29,310
need to traverse the network every time

00:15:26,160 --> 00:15:31,319
to ask for a resource instead if you

00:15:29,310 --> 00:15:33,300
have a serviceworker the serviceworker

00:15:31,319 --> 00:15:35,550
is a JavaScript file that the web

00:15:33,300 --> 00:15:38,339
developer rights and it's basically

00:15:35,550 --> 00:15:41,970
proxy server that sits between your code

00:15:38,339 --> 00:15:43,680
running on the client and the network so

00:15:41,970 --> 00:15:46,230
when a page registers a service worker

00:15:43,680 --> 00:15:48,899
it also adds a set of event handlers to

00:15:46,230 --> 00:15:51,240
do things like event handle when you try

00:15:48,899 --> 00:15:54,300
to fetch something and the service

00:15:51,240 --> 00:15:57,810
worker can also manage caches of data

00:15:54,300 --> 00:15:59,700
caches of files or resources and you can

00:15:57,810 --> 00:16:02,160
decide when you get a request when you

00:15:59,700 --> 00:16:03,510
handle in a fetch event what to do with

00:16:02,160 --> 00:16:05,490
that like you can serve it from the cash

00:16:03,510 --> 00:16:06,930
you can serve it from the network you

00:16:05,490 --> 00:16:08,850
can do whatever and because it's

00:16:06,930 --> 00:16:11,640
event-based the service worker isn't

00:16:08,850 --> 00:16:13,170
running all the time it doesn't need to

00:16:11,640 --> 00:16:16,410
be in memory unless it's actively

00:16:13,170 --> 00:16:18,360
handling one of those events in fact I

00:16:16,410 --> 00:16:20,700
want to want to underscore that again

00:16:18,360 --> 00:16:23,360
say it again because the service worker

00:16:20,700 --> 00:16:25,860
doesn't consume any system processing

00:16:23,360 --> 00:16:28,140
unless it's being woken up to handle an

00:16:25,860 --> 00:16:30,630
event so even if the browser is closed

00:16:28,140 --> 00:16:33,089
by the way the operating system can wake

00:16:30,630 --> 00:16:35,910
up a service worker to handle an event

00:16:33,089 --> 00:16:37,920
and we'll get into that when you talk

00:16:35,910 --> 00:16:40,140
about notifications little but we're no

00:16:37,920 --> 00:16:43,380
longer limited to this model where in

00:16:40,140 --> 00:16:45,959
order for the app to be at all useful it

00:16:43,380 --> 00:16:47,940
has to be loaded in a tab actively right

00:16:45,959 --> 00:16:49,860
now and this is important because you

00:16:47,940 --> 00:16:52,050
now have an app like life cycle for the

00:16:49,860 --> 00:16:54,720
web you can install resources you can

00:16:52,050 --> 00:16:56,339
handle requests even if the user doesn't

00:16:54,720 --> 00:17:00,930
necessarily have you loaded right at

00:16:56,339 --> 00:17:03,270
that time so when a service workers

00:17:00,930 --> 00:17:05,640
first registered it fires an install

00:17:03,270 --> 00:17:07,140
event this install event is important

00:17:05,640 --> 00:17:09,030
because this is where you get to do

00:17:07,140 --> 00:17:11,939
stuff up front you can prefetch

00:17:09,030 --> 00:17:13,559
resources you can cash them locally you

00:17:11,939 --> 00:17:15,480
basically have a fully scriptable

00:17:13,559 --> 00:17:17,819
install you can do whatever you want in

00:17:15,480 --> 00:17:20,760
within some some boundaries of course

00:17:17,819 --> 00:17:24,120
within this install process much like a

00:17:20,760 --> 00:17:25,709
native app can once the service worker

00:17:24,120 --> 00:17:28,319
has been activated and it's actually

00:17:25,709 --> 00:17:30,090
servicing requests you're the one in

00:17:28,319 --> 00:17:32,400
control of how to respond to fetch

00:17:30,090 --> 00:17:34,140
events you can inspect Network requests

00:17:32,400 --> 00:17:35,700
before responding to them you can

00:17:34,140 --> 00:17:37,320
rewrite them you can pass them directly

00:17:35,700 --> 00:17:39,900
off to the cash you can pass them off to

00:17:37,320 --> 00:17:42,090
the network you can even synthesize your

00:17:39,900 --> 00:17:44,220
own responses you can replace every

00:17:42,090 --> 00:17:46,330
resource requests with cat pictures if

00:17:44,220 --> 00:17:48,190
you want totally up to you

00:17:46,330 --> 00:17:50,260
but all of this is completely

00:17:48,190 --> 00:17:51,669
transparent to the user and more

00:17:50,260 --> 00:17:53,620
importantly to the client web

00:17:51,669 --> 00:17:55,990
application like this is a separate bit

00:17:53,620 --> 00:18:00,070
of code that sits between the client web

00:17:55,990 --> 00:18:01,899
app and the network and you can really

00:18:00,070 --> 00:18:03,820
build a well-constructed service worker

00:18:01,899 --> 00:18:06,760
is just a super smart caching system

00:18:03,820 --> 00:18:08,500
that understands how your app works it's

00:18:06,760 --> 00:18:11,230
a progressive enhancement of the network

00:18:08,500 --> 00:18:16,990
and choosing smarter ways to respond to

00:18:11,230 --> 00:18:19,059
requests now when I say that this is a

00:18:16,990 --> 00:18:21,010
progressive enhancement I want to be

00:18:19,059 --> 00:18:24,279
clear the first time you load the page

00:18:21,010 --> 00:18:26,470
the service worker isn't there like the

00:18:24,279 --> 00:18:29,230
service worker gets loaded by your page

00:18:26,470 --> 00:18:31,480
so the first time you load up your your

00:18:29,230 --> 00:18:33,100
site your app whatever it's still going

00:18:31,480 --> 00:18:36,460
to be loading from the network you load

00:18:33,100 --> 00:18:38,080
index dot HTML and it loads up and it

00:18:36,460 --> 00:18:39,429
sees all the resources and in and fires

00:18:38,080 --> 00:18:41,470
off the request for those resources

00:18:39,429 --> 00:18:44,049
normally over the network just like it

00:18:41,470 --> 00:18:46,360
always would and at the same time it's

00:18:44,049 --> 00:18:47,919
installing the service worker so the

00:18:46,360 --> 00:18:50,769
service worker comes into play on

00:18:47,919 --> 00:18:56,080
subsequent requests subsequent loads of

00:18:50,769 --> 00:18:57,460
the page not the first load so let's

00:18:56,080 --> 00:18:59,289
take a look at what this actually looks

00:18:57,460 --> 00:19:01,990
like so you get a feel for how difficult

00:18:59,289 --> 00:19:03,610
or not difficult this is the first step

00:19:01,990 --> 00:19:05,049
like i said is registering a service

00:19:03,610 --> 00:19:07,360
worker and of course the first step to

00:19:05,049 --> 00:19:08,710
that is put in a bit of logic then make

00:19:07,360 --> 00:19:11,590
sure you actually support service

00:19:08,710 --> 00:19:13,389
workers before you do this and then if

00:19:11,590 --> 00:19:16,210
you do support service workers in the

00:19:13,389 --> 00:19:17,980
browser then you simply register by

00:19:16,210 --> 00:19:20,139
calling navigator dot serviceworker dot

00:19:17,980 --> 00:19:21,399
register with a reference to the

00:19:20,139 --> 00:19:24,460
location of your serviceworker

00:19:21,399 --> 00:19:26,740
javascript file now the location is

00:19:24,460 --> 00:19:28,570
actually important it has to be in the

00:19:26,740 --> 00:19:32,519
root of whatever domain you want it to

00:19:28,570 --> 00:19:35,200
cover so if you can't put it in /j s /

00:19:32,519 --> 00:19:37,539
unless you only want it to come into

00:19:35,200 --> 00:19:40,179
play for stuff inside your j/s directory

00:19:37,539 --> 00:19:45,070
like this is why it's / serviceworker

00:19:40,179 --> 00:19:47,529
j/s a lot of the time next we need to

00:19:45,070 --> 00:19:48,789
handle the install event like I said

00:19:47,529 --> 00:19:51,720
this is fired when the serviceworker

00:19:48,789 --> 00:19:53,950
javascript file is parsed and loaded

00:19:51,720 --> 00:19:56,889
this is where you get to prefetch

00:19:53,950 --> 00:19:59,040
resources cash them locally do whatever

00:19:56,889 --> 00:20:02,070
kind of scriptable setup you want to do

00:19:59,040 --> 00:20:05,070
so the easiest way to do this or one

00:20:02,070 --> 00:20:07,380
common thing to do is open up a cache

00:20:05,070 --> 00:20:09,750
object cache is also a new API it's

00:20:07,380 --> 00:20:13,080
designed specifically for storing Earl

00:20:09,750 --> 00:20:14,760
accessible resources you give it a name

00:20:13,080 --> 00:20:17,250
whatever name you want this is how you

00:20:14,760 --> 00:20:20,730
can reference or how you can keep

00:20:17,250 --> 00:20:25,200
multiple caches inversion them and then

00:20:20,730 --> 00:20:28,080
use cash all sorry Cassie at all to add

00:20:25,200 --> 00:20:29,580
any resources that you want and get them

00:20:28,080 --> 00:20:32,130
into the store them in the browser cache

00:20:29,580 --> 00:20:32,880
go download them over the network and by

00:20:32,130 --> 00:20:37,320
the way if this were a real

00:20:32,880 --> 00:20:40,200
implementation we would want to we would

00:20:37,320 --> 00:20:42,510
want to catch any exceptions here like

00:20:40,200 --> 00:20:45,240
if these files don't get loaded bad

00:20:42,510 --> 00:20:46,860
stuff happens in this code example so

00:20:45,240 --> 00:20:50,820
don't just go put this into production

00:20:46,860 --> 00:20:52,320
today but at this point it's like now we

00:20:50,820 --> 00:20:54,960
have a cache we have all of our local

00:20:52,320 --> 00:20:57,600
files although the files we need for our

00:20:54,960 --> 00:20:59,970
web application are now loaded but if

00:20:57,600 --> 00:21:02,070
you were to go offline you're still

00:20:59,970 --> 00:21:04,410
going to get the downer sore because

00:21:02,070 --> 00:21:06,120
we've done a lot to precache everything

00:21:04,410 --> 00:21:08,190
but we didn't handle the network event

00:21:06,120 --> 00:21:10,620
we didn't handle the fetch event to say

00:21:08,190 --> 00:21:11,700
hey get that stuff out of the cash it's

00:21:10,620 --> 00:21:14,430
still going to hit the network the

00:21:11,700 --> 00:21:17,630
default handler for fetch is still go to

00:21:14,430 --> 00:21:20,970
the network just like always so instead

00:21:17,630 --> 00:21:22,530
inside your serviceworker again you add

00:21:20,970 --> 00:21:25,110
an event listener for the fetch event

00:21:22,530 --> 00:21:27,960
and when a network request is made from

00:21:25,110 --> 00:21:29,790
the web page from anywhere in that

00:21:27,960 --> 00:21:33,480
domain the serviceworker wakes up and

00:21:29,790 --> 00:21:35,070
the special event gets triggered so in

00:21:33,480 --> 00:21:37,440
this case the easiest thing to do since

00:21:35,070 --> 00:21:39,510
we have a cache that some stuff is in we

00:21:37,440 --> 00:21:41,850
check to see if it's in the cache if it

00:21:39,510 --> 00:21:44,790
is in the cash return that if it's not

00:21:41,850 --> 00:21:46,650
in the cache pass it on to the regular

00:21:44,790 --> 00:21:50,730
fetch like pass it off to the network

00:21:46,650 --> 00:21:53,820
effectively so now we have a reliable

00:21:50,730 --> 00:21:55,440
experience loads almost instantly our

00:21:53,820 --> 00:21:56,850
apps going to work whether or online or

00:21:55,440 --> 00:21:58,950
offline or at least it's going to get

00:21:56,850 --> 00:22:01,740
all its resource requests whether we're

00:21:58,950 --> 00:22:03,600
online or offline and it's really it's

00:22:01,740 --> 00:22:07,560
really fast because it's coming straight

00:22:03,600 --> 00:22:09,180
out of the cash our last step is once

00:22:07,560 --> 00:22:11,460
we're activated we actually send a

00:22:09,180 --> 00:22:13,250
message back to the page to say hey the

00:22:11,460 --> 00:22:15,840
service worker is ready to go

00:22:13,250 --> 00:22:18,180
there's a deeper topic around how you

00:22:15,840 --> 00:22:20,310
can swap these service workers in and

00:22:18,180 --> 00:22:22,800
out and how they version I don't want to

00:22:20,310 --> 00:22:24,090
get into that right now though so but

00:22:22,800 --> 00:22:26,880
this is helpful because you can actually

00:22:24,090 --> 00:22:29,460
indicate now in the main page in your

00:22:26,880 --> 00:22:31,290
user experience you can say hey I'm

00:22:29,460 --> 00:22:33,120
offline ready like I've stored stuff

00:22:31,290 --> 00:22:35,370
you're ready to go like you have

00:22:33,120 --> 00:22:38,040
communication between these two between

00:22:35,370 --> 00:22:41,250
the service worker and it's cash and the

00:22:38,040 --> 00:22:44,100
local client and the important thing

00:22:41,250 --> 00:22:46,170
here is to understand that you're in

00:22:44,100 --> 00:22:48,300
control of how you respond to network

00:22:46,170 --> 00:22:50,400
requests you get to decide what gets

00:22:48,300 --> 00:22:52,980
cached how it gets cached if it gets

00:22:50,400 --> 00:22:55,890
cached and how its return to the user

00:22:52,980 --> 00:22:57,810
you can change anything in this you get

00:22:55,890 --> 00:23:00,120
to hand design the caching strategies

00:22:57,810 --> 00:23:02,400
for each and every resource depending on

00:23:00,120 --> 00:23:03,960
what you want it to do you can have the

00:23:02,400 --> 00:23:06,450
cash in the network race to see which

00:23:03,960 --> 00:23:08,220
one's fastest turns out sometimes the

00:23:06,450 --> 00:23:10,290
network is actually faster than the cash

00:23:08,220 --> 00:23:15,720
depending on what device your cash is on

00:23:10,290 --> 00:23:17,460
and how slow it is on that topic my

00:23:15,720 --> 00:23:21,240
colleague Jake Archibald wrote a great

00:23:17,460 --> 00:23:22,770
offline cookbook a year or two ago that

00:23:21,240 --> 00:23:24,540
covers a lot of these things it gives

00:23:22,770 --> 00:23:26,760
you some ideas of how to implement each

00:23:24,540 --> 00:23:28,590
one of them has sample code this is a

00:23:26,760 --> 00:23:32,760
great resource to go back to and look at

00:23:28,590 --> 00:23:34,860
for ideas on how to do this so once you

00:23:32,760 --> 00:23:35,970
have a service worker and once you've

00:23:34,860 --> 00:23:37,650
figured out how to make your appt

00:23:35,970 --> 00:23:40,290
reliable so it can still work offline

00:23:37,650 --> 00:23:43,860
it's cached its core resources all that

00:23:40,290 --> 00:23:46,140
kind of stuff now you can unlock a bunch

00:23:43,860 --> 00:23:48,150
of user engagement features and when I

00:23:46,140 --> 00:23:50,250
say user engagement again means a whole

00:23:48,150 --> 00:23:53,100
bunch of things in the very first one of

00:23:50,250 --> 00:23:54,960
these is the home screen this is the

00:23:53,100 --> 00:23:56,310
center of a mobile users world right

00:23:54,960 --> 00:23:58,650
like everybody looks at their home

00:23:56,310 --> 00:24:02,130
screen all the time to run applications

00:23:58,650 --> 00:24:04,050
and we've been able to add websites to

00:24:02,130 --> 00:24:06,570
the home screen on Android and iOS for

00:24:04,050 --> 00:24:10,800
quite a while but the user experience

00:24:06,570 --> 00:24:14,550
has not been so incredibly great the way

00:24:10,800 --> 00:24:15,720
to add this was pretty painful users had

00:24:14,550 --> 00:24:19,410
to know about the add to home screen

00:24:15,720 --> 00:24:22,920
menu item inside the hamburger menu in

00:24:19,410 --> 00:24:25,290
android chrome and oh by the way on some

00:24:22,920 --> 00:24:26,940
devices like my Nexus 5 hit

00:24:25,290 --> 00:24:30,050
they wrapped who was below the fold you

00:24:26,940 --> 00:24:32,160
had to scroll the menu up to find it

00:24:30,050 --> 00:24:35,100
unless you're on the homepage of an

00:24:32,160 --> 00:24:37,290
application when you hit this it would

00:24:35,100 --> 00:24:38,760
always go to that place there was a

00:24:37,290 --> 00:24:40,890
month or two in there right after I'd

00:24:38,760 --> 00:24:43,880
made a home screen icon for facebook

00:24:40,890 --> 00:24:46,140
before I realized that I'd actually

00:24:43,880 --> 00:24:48,840
added to the home screen a particular

00:24:46,140 --> 00:24:50,130
conversation particular post and every

00:24:48,840 --> 00:24:52,610
time i would go to what i thought was

00:24:50,130 --> 00:24:57,180
facebook i would go to this post instead

00:24:52,610 --> 00:24:58,650
and then of course finally nobody really

00:24:57,180 --> 00:25:00,870
expected that these would work offline

00:24:58,650 --> 00:25:02,970
like there wasn't this expectation that

00:25:00,870 --> 00:25:05,820
it was going to work just because it was

00:25:02,970 --> 00:25:07,830
on the home screen which really kind of

00:25:05,820 --> 00:25:10,380
devalued the home screen right you

00:25:07,830 --> 00:25:12,090
suddenly had some apps some icons on the

00:25:10,380 --> 00:25:14,970
home screen that would work some that

00:25:12,090 --> 00:25:17,280
wouldn't so yeah from a user perspective

00:25:14,970 --> 00:25:19,440
this was totally fine you know this is

00:25:17,280 --> 00:25:22,920
great but we wanted to do better than

00:25:19,440 --> 00:25:25,980
this so now we have a web app manifest

00:25:22,920 --> 00:25:28,830
and this is a JSON file that gives the

00:25:25,980 --> 00:25:32,670
web developer the ability to control how

00:25:28,830 --> 00:25:34,500
your app appears to users in the places

00:25:32,670 --> 00:25:36,960
that usually expect to see apps like the

00:25:34,500 --> 00:25:39,390
home screen you can direct how this your

00:25:36,960 --> 00:25:41,120
app is going to launch what it's going

00:25:39,390 --> 00:25:44,940
to look like in various representations

00:25:41,120 --> 00:25:47,580
like you can control the presence on the

00:25:44,940 --> 00:25:49,590
android home screen what short name it

00:25:47,580 --> 00:25:53,190
gets which icons are used at various

00:25:49,590 --> 00:25:56,310
resolutions you can reflect refine the

00:25:53,190 --> 00:25:59,400
splash screen to be to be whatever you

00:25:56,310 --> 00:26:01,560
want it to be you can also define where

00:25:59,400 --> 00:26:03,900
you're like the core of your application

00:26:01,560 --> 00:26:06,780
fee when you tap on this icon always go

00:26:03,900 --> 00:26:08,430
to this URL not you know something that

00:26:06,780 --> 00:26:11,040
the user had loaded at some point in

00:26:08,430 --> 00:26:13,050
time you can launch in full screen you

00:26:11,040 --> 00:26:15,780
can control the default orientation I

00:26:13,050 --> 00:26:18,270
have a web audio web MIDI synthesizer

00:26:15,780 --> 00:26:20,040
app and it always wants to be in

00:26:18,270 --> 00:26:22,860
landscape because it needs to stick an

00:26:20,040 --> 00:26:28,790
on-screen keyboard on so I can enforce

00:26:22,860 --> 00:26:31,470
that and then also partly due to our

00:26:28,790 --> 00:26:33,180
switching within task with switcher in

00:26:31,470 --> 00:26:35,490
Android you can define theme colors

00:26:33,180 --> 00:26:37,620
because that's the app bar color that

00:26:35,490 --> 00:26:38,360
represents your app you can control

00:26:37,620 --> 00:26:40,520
these things that

00:26:38,360 --> 00:26:43,520
like the interaction between the OS and

00:26:40,520 --> 00:26:45,920
the app that the user is used to so

00:26:43,520 --> 00:26:48,500
manifests are supported by chrome on

00:26:45,920 --> 00:26:50,900
Android Firefox Opera Microsoft has

00:26:48,500 --> 00:26:53,030
indicated support for them unfortunately

00:26:50,900 --> 00:26:54,680
Safari on iOS you still need use

00:26:53,030 --> 00:26:56,560
traditional meta tags but you can get a

00:26:54,680 --> 00:26:59,750
lot of the same controls that way and

00:26:56,560 --> 00:27:00,950
then this was great but we still needed

00:26:59,750 --> 00:27:04,550
to deal with the fact that this was

00:27:00,950 --> 00:27:06,320
buried in a menu item so we decided hey

00:27:04,550 --> 00:27:08,180
what if we automatically prompted the

00:27:06,320 --> 00:27:11,660
user to install if we know these apps

00:27:08,180 --> 00:27:14,480
are really reliable and we know the

00:27:11,660 --> 00:27:16,190
users already interacting with them we

00:27:14,480 --> 00:27:17,480
could just load them automatically we

00:27:16,190 --> 00:27:18,710
could prompt the user and say hey do you

00:27:17,480 --> 00:27:21,290
want to put this on to your home screen

00:27:18,710 --> 00:27:23,840
we don't want this to be spammy and this

00:27:21,290 --> 00:27:25,100
is the biggest concern so we want to

00:27:23,840 --> 00:27:27,470
make sure that the user is really

00:27:25,100 --> 00:27:29,390
engaged with the app we also require

00:27:27,470 --> 00:27:32,200
offline support because we don't want to

00:27:29,390 --> 00:27:34,910
devalue what home screen icons mean and

00:27:32,200 --> 00:27:36,140
we require that there's a manifest that

00:27:34,910 --> 00:27:38,410
way we can get a consistent user

00:27:36,140 --> 00:27:41,360
experience but if you have these things

00:27:38,410 --> 00:27:43,550
then we have a heuristic that says hey

00:27:41,360 --> 00:27:46,340
the user after using this app for a

00:27:43,550 --> 00:27:48,700
while will automatically get this prompt

00:27:46,340 --> 00:27:51,110
to say add it to your home screen and

00:27:48,700 --> 00:27:54,410
this means we have these requirements

00:27:51,110 --> 00:27:56,420
are the the promise of progressive web

00:27:54,410 --> 00:27:59,570
apps that you're going to have a great

00:27:56,420 --> 00:28:01,220
reliable offline capable experience you

00:27:59,570 --> 00:28:02,750
want to say offline capable obviously

00:28:01,220 --> 00:28:05,000
doesn't mean everything's going to work

00:28:02,750 --> 00:28:07,370
because sometimes you do need the

00:28:05,000 --> 00:28:09,620
network that's what it's there for but

00:28:07,370 --> 00:28:13,400
at least you know the app itself will be

00:28:09,620 --> 00:28:15,950
able to load and then once we have this

00:28:13,400 --> 00:28:18,530
we can actually offer push notifications

00:28:15,950 --> 00:28:20,420
to we can reengage the user once they've

00:28:18,530 --> 00:28:22,250
been engaged and this of course is

00:28:20,420 --> 00:28:24,290
another permission like the user has to

00:28:22,250 --> 00:28:26,450
say yes it's okay to send me

00:28:24,290 --> 00:28:28,520
notifications but this is now available

00:28:26,450 --> 00:28:31,250
to web applications as well as native

00:28:28,520 --> 00:28:33,230
apps and this is a critical critically

00:28:31,250 --> 00:28:35,450
important thing because if you have an

00:28:33,230 --> 00:28:38,180
engaged user you can re-engage them

00:28:35,450 --> 00:28:41,090
regularly even when the browser isn't

00:28:38,180 --> 00:28:43,760
open this is the biggest coolest thing

00:28:41,090 --> 00:28:46,490
about push notifications is that they

00:28:43,760 --> 00:28:47,810
run even when the browser isn't open now

00:28:46,490 --> 00:28:50,090
this isn't just a chrome thing again

00:28:47,810 --> 00:28:51,860
Microsoft is working on in firefox opera

00:28:50,090 --> 00:28:54,320
Samsung browser supports them

00:28:51,860 --> 00:28:57,140
no clear indication from Apple yet but

00:28:54,320 --> 00:29:01,010
you know fingers crossed and this really

00:28:57,140 --> 00:29:03,410
does help re-engage users jumia who's a

00:29:01,010 --> 00:29:05,360
leading e-commerce website in Africa

00:29:03,410 --> 00:29:08,240
they used to have nearly a quarter of

00:29:05,360 --> 00:29:10,820
all shopping carts abandoned every day

00:29:08,240 --> 00:29:13,220
on their mobile site they were trying to

00:29:10,820 --> 00:29:15,080
send email reminders but getting people

00:29:13,220 --> 00:29:17,330
to give you them their email address of

00:29:15,080 --> 00:29:19,070
course is kind of a challenge and email

00:29:17,330 --> 00:29:20,900
open rates are pretty low I don't know

00:29:19,070 --> 00:29:22,940
about you I get tons of email from

00:29:20,900 --> 00:29:25,460
retailers that I just delete without

00:29:22,940 --> 00:29:26,900
ever opening even ones even retailers

00:29:25,460 --> 00:29:29,600
that I actually do buy stuff from

00:29:26,900 --> 00:29:32,000
regularly so they began sending push

00:29:29,600 --> 00:29:34,429
notifications to users who had abandoned

00:29:32,000 --> 00:29:36,559
their carts and this delivered a

00:29:34,429 --> 00:29:39,169
thirty-eight percent open rate which may

00:29:36,559 --> 00:29:40,850
not sound like it's very high but this

00:29:39,169 --> 00:29:42,950
is nine times more than they were

00:29:40,850 --> 00:29:44,960
getting before like conversion rates

00:29:42,950 --> 00:29:47,030
from push notifications were out

00:29:44,960 --> 00:29:51,020
stripping their native apps ability to

00:29:47,030 --> 00:29:53,150
reengage users to and to add push

00:29:51,020 --> 00:29:55,370
notifications again this is also built

00:29:53,150 --> 00:29:56,960
on service worker because service

00:29:55,370 --> 00:29:59,240
workers can do more than just handle

00:29:56,960 --> 00:30:02,360
network requests they can reply to other

00:29:59,240 --> 00:30:05,030
requests like a push message sent from

00:30:02,360 --> 00:30:07,970
outside the browser into your

00:30:05,030 --> 00:30:10,070
serviceworker so push is awesome I'm not

00:30:07,970 --> 00:30:12,620
going to go into it anymore other than

00:30:10,070 --> 00:30:14,299
to say if your app scenarios seem like

00:30:12,620 --> 00:30:17,540
they align with it it's a really really

00:30:14,299 --> 00:30:20,390
cool technology to investigate so to

00:30:17,540 --> 00:30:22,220
recap build on HTTPS if you're not

00:30:20,390 --> 00:30:24,980
building on HTTPS already if your

00:30:22,220 --> 00:30:27,559
service isn't offered securely go do it

00:30:24,980 --> 00:30:29,809
because this is the new normal add a

00:30:27,559 --> 00:30:32,179
serviceworker engage your users by

00:30:29,809 --> 00:30:33,830
adding a web app manifest signal that

00:30:32,179 --> 00:30:37,610
you actually are building a great app

00:30:33,830 --> 00:30:40,400
and you know this is also what happened

00:30:37,610 --> 00:30:42,140
with Aliexpress which is Ali expresses

00:30:40,400 --> 00:30:45,530
like one of the largest e-commerce

00:30:42,140 --> 00:30:47,299
players globally they're based out of

00:30:45,530 --> 00:30:50,809
China but in that market they have a

00:30:47,299 --> 00:30:52,640
huge huge market share and they shipped

00:30:50,809 --> 00:30:54,260
a progressive web app and with within

00:30:52,640 --> 00:30:56,650
days they saw seventy-four percent

00:30:54,260 --> 00:30:59,450
increase in time spent on the app and

00:30:56,650 --> 00:31:01,910
twice as many pages visited as they had

00:30:59,450 --> 00:31:03,530
before and the number that really

00:31:01,910 --> 00:31:05,100
matters to them of course is not how

00:31:03,530 --> 00:31:08,220
much people are visiting their site

00:31:05,100 --> 00:31:10,140
but whether users actually converted

00:31:08,220 --> 00:31:13,169
whether they spent money on their site

00:31:10,140 --> 00:31:16,500
and conversions went up across the board

00:31:13,169 --> 00:31:18,480
but the most surprising thing was that

00:31:16,500 --> 00:31:21,480
since most of these progressive web app

00:31:18,480 --> 00:31:22,679
features don't work on iOS Safari you

00:31:21,480 --> 00:31:24,539
wouldn't think that it would help much

00:31:22,679 --> 00:31:27,419
but they actually saw an eighty-two

00:31:24,539 --> 00:31:29,610
percent increase on conversions on iOS

00:31:27,419 --> 00:31:31,950
alone even though the serviceworker

00:31:29,610 --> 00:31:34,049
didn't work and the engagement stuff

00:31:31,950 --> 00:31:36,390
wasn't really working this seemed a

00:31:34,049 --> 00:31:38,429
little crazy but again progressive web

00:31:36,390 --> 00:31:40,440
apps are about being progressive it's

00:31:38,429 --> 00:31:42,690
about focusing on that experience first

00:31:40,440 --> 00:31:45,000
and that actually is what they did they

00:31:42,690 --> 00:31:46,530
built a great application and then just

00:31:45,000 --> 00:31:48,950
happen to have the serviceworker and

00:31:46,530 --> 00:31:51,330
engagement pieces to make it even better

00:31:48,950 --> 00:31:53,400
so even though some of our early

00:31:51,330 --> 00:31:55,890
examples weren't progressive across

00:31:53,400 --> 00:31:58,530
browsers devices etc progressive web

00:31:55,890 --> 00:32:01,470
apps really need to be they can be they

00:31:58,530 --> 00:32:03,630
should be and that is a core component

00:32:01,470 --> 00:32:06,240
like focusing on this end end user

00:32:03,630 --> 00:32:08,460
experience will have a dramatic impact

00:32:06,240 --> 00:32:10,830
on your business even with users who

00:32:08,460 --> 00:32:14,220
can't can't experience the full power of

00:32:10,830 --> 00:32:16,860
progressive web apps so focus on the

00:32:14,220 --> 00:32:19,500
user not the technology even though the

00:32:16,860 --> 00:32:22,049
technology is pretty cool and with that

00:32:19,500 --> 00:32:23,400
I want to offer you to go build

00:32:22,049 --> 00:32:25,950
progressive web apps we're going to have

00:32:23,400 --> 00:32:27,750
a discussion panel later this afternoon

00:32:25,950 --> 00:32:31,070
I believe happy to answer questions

00:32:27,750 --> 00:32:31,070

YouTube URL: https://www.youtube.com/watch?v=EErueQdEXMA


