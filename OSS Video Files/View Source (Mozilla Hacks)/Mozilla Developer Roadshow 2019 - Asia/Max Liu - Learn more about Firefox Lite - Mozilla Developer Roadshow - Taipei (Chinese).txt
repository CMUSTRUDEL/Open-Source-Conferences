Title: Max Liu - Learn more about Firefox Lite - Mozilla Developer Roadshow - Taipei (Chinese)
Publication date: 2020-01-21
Playlist: Mozilla Developer Roadshow 2019 - Asia
Description: 
	(Presented in Chinese; includes English subtitles) Max Liu, Mozilla Engineering Manager for Emerging Markets, describes Mozilla's activities in creating Firefox Lite.
Captions: 
	00:00:04,560 --> 00:00:06,080
Hello everyone

00:00:07,180 --> 00:00:09,700
I'm so glad to see all of you here today

00:00:09,880 --> 00:00:14,220
Like what our Taipei VP, Stan

00:00:14,220 --> 00:00:15,260
mentioned just now

00:00:16,260 --> 00:00:17,600
in Southeast Asia,

00:00:17,680 --> 00:00:18,700
we need

00:00:18,700 --> 00:00:22,300
a lot of user data, or rather, to collect user data

00:00:22,640 --> 00:00:25,100
to help our product

00:00:25,140 --> 00:00:27,240
make the best decisions and implement strategies 

00:00:27,360 --> 00:00:30,040
In processes as such, I'm sure many have heard of

00:00:30,220 --> 00:00:33,140
our partners right in front here.

00:00:33,140 --> 00:00:34,300
Firstly, let's introduce

00:00:34,300 --> 00:00:37,060
the main topic with many things revolve around

00:00:37,060 --> 00:00:38,980
and that is privacy security

00:00:38,980 --> 00:00:41,600
That's one of Mozilla's core essence

00:00:41,600 --> 00:00:44,540
But then, how do we

00:00:44,540 --> 00:00:46,695
collect user data

00:00:46,695 --> 00:00:48,515
and at the same time, ensure that

00:00:48,515 --> 00:00:50,075
users' privacy are well protected?

00:00:50,075 --> 00:00:52,655
Our core topic for the discussion today,

00:00:52,660 --> 00:00:54,400
which is, how do we

00:00:54,460 --> 00:00:57,700
collect user data

00:00:58,000 --> 00:01:01,080
and how do we decide what and which data to collect

00:01:01,085 --> 00:01:03,795
and following that, how are those data collected used?

00:01:05,940 --> 00:01:08,380
Before collecting data,

00:01:08,380 --> 00:01:09,920
we need to ask ourselves ten questions.

00:01:09,940 --> 00:01:11,400
These ten questions,

00:01:11,600 --> 00:01:14,460
such as, why do we need to collect these data?

00:01:14,640 --> 00:01:17,635
or, where would we use these data collected?

00:01:17,635 --> 00:01:20,455
or, are there any feasible alternatives

00:01:20,455 --> 00:01:22,905
to collect these data?

00:01:22,905 --> 00:01:25,680
In addition, will the existing methods

00:01:25,680 --> 00:01:27,400
be sufficient to collect such data?

00:01:27,400 --> 00:01:28,600
Do we need to evaluate the possibilities

00:01:28,600 --> 00:01:31,115
of using alternative methods

00:01:31,115 --> 00:01:33,695
to obtain these data?

00:01:33,700 --> 00:01:36,600
Will these processes bring about other privacy issues?

00:01:36,940 --> 00:01:40,840
Thereafter, upon listing all the data needed

00:01:40,840 --> 00:01:42,760
they will roughly be categorised

00:01:42,760 --> 00:01:45,620
into four types of data that we set

00:01:45,620 --> 00:01:47,120
At the same time, these types also mean or demonstrate

00:01:47,125 --> 00:01:50,000
the prediction of whether these data can be collected or not

00:01:50,005 --> 00:01:52,935
We'll talk about these four types in a bit

00:01:52,935 --> 00:01:54,805
they basically can represent what kind of data,

00:01:55,585 --> 00:01:58,725
and for some data, upon collection,

00:01:58,725 --> 00:02:01,555
how long will we store it for,

00:02:01,555 --> 00:02:03,565
as for some data, we only need it for awhile,

00:02:03,565 --> 00:02:06,520
but for some data, we would love to keep them for longer periods

00:02:06,520 --> 00:02:09,360
to observe the change in those data

00:02:09,380 --> 00:02:13,060
Therefore, we need to identify how long we have to store these data for

00:02:13,060 --> 00:02:14,780
Following this,

00:02:14,780 --> 00:02:17,200
these data, from where do we hope

00:02:17,200 --> 00:02:19,280
to collect these data from?

00:02:19,720 --> 00:02:21,380
and from these users,

00:02:21,580 --> 00:02:24,480
do they have the ability to decide

00:02:24,620 --> 00:02:28,160
if they do not wish to be part of the data collection

00:02:28,160 --> 00:02:29,980
And lastly, how do we use

00:02:29,980 --> 00:02:31,560
or analyse these data

00:02:31,680 --> 00:02:32,380
and

00:02:32,380 --> 00:02:33,660
will we 

00:02:33,660 --> 00:02:36,140
give these data to other partners

00:02:36,160 --> 00:02:37,360
to share

00:02:37,420 --> 00:02:40,780
These ten questions will then constitute

00:02:40,780 --> 00:02:45,440
a centre to protect Mozilla's core essence; privacy

00:02:47,380 --> 00:02:49,480
We mentioned that users' data

00:02:49,620 --> 00:02:51,120
can be categorised into four main types

00:02:51,120 --> 00:02:53,460
The very first, as you can see

00:02:53,460 --> 00:02:55,100
technical data

00:02:55,100 --> 00:02:58,700
These are installed by users into their mobiles

00:02:58,700 --> 00:03:00,140
or computers

00:03:00,140 --> 00:03:02,140
These computer equipment or CPU

00:03:02,140 --> 00:03:04,160
will sometimes help us to realise

00:03:04,160 --> 00:03:07,420
the problems that user face in our product

00:03:07,780 --> 00:03:09,140
and the versions of our product

00:03:09,280 --> 00:03:10,300
which is Firefox

00:03:10,420 --> 00:03:12,420
This program version that we installed

00:03:12,420 --> 00:03:13,740
it can help us

00:03:13,740 --> 00:03:16,820
differentiate, let's just say that an issue happened today

00:03:16,820 --> 00:03:19,460
which version had the bigger portion of issues?

00:03:19,460 --> 00:03:22,200
These data, predicts our option,

00:03:22,240 --> 00:03:24,360
our hope to collect these data

00:03:24,360 --> 00:03:27,280
because these data has no way to

00:03:27,280 --> 00:03:27,840
know who you are,

00:03:27,840 --> 00:03:29,500
and where your location is

00:03:29,500 --> 00:03:30,720
Therefore, these data

00:03:30,720 --> 00:03:33,380
can help us, and improve our users

00:03:33,380 --> 00:03:36,140
The second type of data is interaction data

00:03:37,280 --> 00:03:38,360
These data include

00:03:38,360 --> 00:03:39,280
the way users

00:03:39,280 --> 00:03:41,940
use Firefox.

00:03:42,040 --> 00:03:44,280
For instance, if today a user

00:03:44,280 --> 00:03:45,620
clicks on "Back", this button here,

00:03:45,620 --> 00:03:48,560
or when he clicks on context menu

00:03:48,560 --> 00:03:51,875
right clicks on this interface, we would see a dropdown list.

00:03:51,880 --> 00:03:54,840
Now what's operating in this list

00:03:54,840 --> 00:03:57,320
actually implies if the design of our list

00:03:57,320 --> 00:03:59,020
can really help the user.

00:03:59,160 --> 00:04:01,020
Therefore, such interactive data

00:04:01,140 --> 00:04:03,120
would be scattered to the user interface

00:04:03,740 --> 00:04:05,560
of many users, where they can see it

00:04:05,880 --> 00:04:08,820
Data like these, we would usually opt for collection

00:04:08,820 --> 00:04:10,680
but the user can choose

00:04:10,680 --> 00:04:12,800
if he does not want to be part of the data collection

00:04:12,920 --> 00:04:15,040
He can choose

00:04:15,040 --> 00:04:16,140
to turn it off.

00:04:16,880 --> 00:04:19,940
In the third type, because Firefox

00:04:19,940 --> 00:04:25,100
is an open source web platform

00:04:25,140 --> 00:04:27,160
and on such platforms,

00:04:27,160 --> 00:04:29,080
we'll face a lot of compatibility issues.

00:04:29,220 --> 00:04:30,800
Because of such compatibility issues,

00:04:30,800 --> 00:04:33,460
sometimes to find and remove errors

00:04:33,460 --> 00:04:35,480
and to find these webpages or sites,

00:04:35,620 --> 00:04:38,120
or design related issues,

00:04:38,300 --> 00:04:41,300
or even if it's our engine's issues,

00:04:41,900 --> 00:04:43,920
we have to, under some circumstances,

00:04:44,080 --> 00:04:47,120
collect users' data

00:04:47,125 --> 00:04:48,965
based on the information related to the sites visited.

00:04:49,320 --> 00:04:52,300
Because these information are highly

00:04:52,300 --> 00:04:55,940
related to content users' are interested in,

00:04:56,080 --> 00:04:58,160
and not just

00:04:58,160 --> 00:05:00,600
on the interface, or simply related to Firefox only

00:05:00,600 --> 00:05:03,200
so to a certain extent,

00:05:03,200 --> 00:05:05,900
it would infringe on a user's privacy.

00:05:06,500 --> 00:05:08,500
For information as such, we will

00:05:08,500 --> 00:05:10,180
opt out of collection

00:05:10,260 --> 00:05:13,680
and only when, for instance, if Firefox faces an issue today,

00:05:13,780 --> 00:05:16,760
causing it to crash, and we will have

00:05:16,760 --> 00:05:18,540
a dialog box popping out to say

00:05:18,720 --> 00:05:21,615
"would you like to send a report on the current website

00:05:21,620 --> 00:05:24,520
for us to further analyse?"

00:05:24,540 --> 00:05:26,780
Like that, only under circumstances

00:05:26,780 --> 00:05:29,775
where a user agrees, will we then collect

00:05:29,775 --> 00:05:31,705
the information regarding the site, how does it look like.

00:05:32,175 --> 00:05:35,065
And at the last, the fourth type,

00:05:35,065 --> 00:05:38,225
which is highly sensitive data

00:05:38,225 --> 00:05:40,840
where these data can possibly

00:05:40,840 --> 00:05:43,240
be directly used to find out your identity

00:05:43,380 --> 00:05:47,020
because it might possibly be an email address from a Firefox account

00:05:47,020 --> 00:05:49,180
Under these circumstances, it's usually to

00:05:49,380 --> 00:05:52,740
enable us to further assist the users.

00:05:52,740 --> 00:05:54,700
When they use a Firefox account

00:05:54,700 --> 00:05:56,100
and face any issues

00:05:56,100 --> 00:05:59,120
we will need to know their email address

00:05:59,120 --> 00:06:01,680
and then only can we tackle

00:06:01,680 --> 00:06:04,800
or provide advanced, personalised assistance.

00:06:04,800 --> 00:06:07,420
So under these circumstances, we will set

00:06:07,420 --> 00:06:10,200
this fourth type of data, as the highest level.

00:06:11,280 --> 00:06:13,855
As we mentioned

00:06:13,860 --> 00:06:15,120
the ten questions and four types of data,

00:06:15,200 --> 00:06:16,640
next, we will begin

00:06:16,640 --> 00:06:18,920
writing codes, embedding

00:06:19,100 --> 00:06:20,500
pins, or rather, probes.

00:06:20,760 --> 00:06:23,380
Of course not yet.

00:06:23,380 --> 00:06:24,860
All we did just now,

00:06:24,860 --> 00:06:27,575
at the beginning, was to take these questions

00:06:27,575 --> 00:06:30,735
and categorised them. But next,

00:06:30,740 --> 00:06:33,900
after sorting out these questions,

00:06:33,900 --> 00:06:36,200
we have to pass them on to our Data Peer.

00:06:36,205 --> 00:06:38,795
At Mozilla, we have our data sorting

00:06:38,795 --> 00:06:42,065
personnel, they will help us review

00:06:42,075 --> 00:06:44,995
and see if these questions have been properly answered,

00:06:45,000 --> 00:06:48,080
and if we don't characterise these questions clearly,

00:06:48,280 --> 00:06:51,000
they'd be our very important first line of defence.

00:06:51,120 --> 00:06:54,060
They will review the contents of our questions,

00:06:54,080 --> 00:06:56,780
and after reviewing,

00:06:56,780 --> 00:06:58,940
if there's really anything related to

00:06:58,940 --> 00:07:01,080
issues regarding users' privacy,

00:07:01,080 --> 00:07:04,060
they will have to convey this to

00:07:04,060 --> 00:07:05,880
different teams within Mozilla to reconfirm

00:07:05,940 --> 00:07:09,040
if these parts have any privacy or legal related issues tied to them

00:07:09,080 --> 00:07:11,480
and where we have to make adjustments to

00:07:11,480 --> 00:07:12,740
the accuracy of the data we collect.

00:07:12,740 --> 00:07:15,895
And after all these problems have been solved,

00:07:15,895 --> 00:07:18,895
we will take these ten questions

00:07:18,895 --> 00:07:21,285
and the four types of data and turn it into

00:07:21,285 --> 00:07:24,235
a different format, which is

00:07:24,460 --> 00:07:27,160
data spec In data spec,

00:07:27,160 --> 00:07:28,800
we'll be clear to define

00:07:28,880 --> 00:07:31,960
what the data can do, or to check the database,

00:07:31,960 --> 00:07:35,005
and what the data's ID would be.

00:07:35,005 --> 00:07:37,840
As this part is mainly our BI team's responsibility,

00:07:37,840 --> 00:07:40,660
so that they can help us

00:07:40,680 --> 00:07:42,040
write queries.

00:07:42,040 --> 00:07:43,720
So in this part,

00:07:43,720 --> 00:07:46,320
we need to reflect this process, from its original issue

00:07:46,320 --> 00:07:49,360
to the product, which is actual and in real-life

00:07:49,360 --> 00:07:51,400
Operationally, for every pin we embed,

00:07:51,640 --> 00:07:53,320
it refers to events

00:07:54,680 --> 00:07:58,240
and after we change it to specs

00:07:58,500 --> 00:07:59,975
then only can we

00:07:59,975 --> 00:08:03,315
start coding, and put all these items in.

00:08:03,315 --> 00:08:04,315
Certainly,

00:08:04,455 --> 00:08:07,345
it won't be sufficient to just implant

00:08:07,345 --> 00:08:10,320
all these probes into the code

00:08:10,320 --> 00:08:12,540
because at Mozilla

00:08:12,540 --> 00:08:14,840
we hope that all our information

00:08:14,840 --> 00:08:17,740
are open, so that users know

00:08:17,800 --> 00:08:19,840
that their willingness to be part of

00:08:19,960 --> 00:08:21,560
to change plans like that,

00:08:21,580 --> 00:08:24,615
just what are they contributing to.

00:08:24,620 --> 00:08:27,835
For programs like these, the actual operations on app versions

00:08:27,840 --> 00:08:29,840
and its documentations

00:08:29,840 --> 00:08:32,300
will usually have differences.

00:08:32,300 --> 00:08:33,540
This is also where we mentioned that

00:08:33,540 --> 00:08:35,540
very often, whenever we are

00:08:35,540 --> 00:08:37,360
coding

00:08:37,400 --> 00:08:40,220
we'll usually need to update these two items with differences

00:08:40,400 --> 00:08:41,680
They usually are

00:08:43,560 --> 00:08:45,135
and here

00:08:45,135 --> 00:08:47,445
as we mainly code mobile applications

00:08:47,445 --> 00:08:50,355
we basically use Java

00:08:50,355 --> 00:08:53,335
and using Java's annotation processor we process our source code.

00:08:53,335 --> 00:08:56,135
Every time

00:08:56,135 --> 00:08:59,285
we write a new program, we hope to add a pin

00:08:59,285 --> 00:09:02,195
whenever it's doing something or in idle state,

00:09:02,200 --> 00:09:05,160
and using a model like this, we take the necessary information

00:09:05,160 --> 00:09:07,800
write them all in the annotation function

00:09:07,800 --> 00:09:10,240
Like that, 

00:09:10,240 --> 00:09:12,185
when program codes are being produced,

00:09:12,185 --> 00:09:13,915
it will automatically take these results

00:09:13,920 --> 00:09:16,880
and reflect them on a document. And this document,

00:09:16,880 --> 00:09:20,160
will be available in our source code.

00:09:20,160 --> 00:09:22,520
So that the user can

00:09:22,520 --> 00:09:24,980
evolve by versions, in the existing code

00:09:25,000 --> 00:09:26,980
and be aware of the latest updates

00:09:26,980 --> 00:09:30,460
of what data is being collected from the app.

00:09:30,700 --> 00:09:33,880
Because of such data collection processes,

00:09:34,440 --> 00:09:37,100
between versions or major updates,

00:09:37,100 --> 00:09:40,180
the evolution of these versions, we can even

00:09:40,180 --> 00:09:42,620
differentiate them,

00:09:42,620 --> 00:09:44,840
we can list out a huge database

00:09:44,840 --> 00:09:45,820
to tell us

00:09:45,920 --> 00:09:48,220
which version from the past till present

00:09:48,220 --> 00:09:49,880
just which data that

00:09:49,900 --> 00:09:51,340
has been collected before

00:09:51,480 --> 00:09:53,660
and we make a directory like this

00:09:53,660 --> 00:09:54,600
to tell users,

00:09:54,600 --> 00:09:57,855
if you want to find out what kind of information are available

00:09:57,855 --> 00:10:00,225
you can also find it inside the website.

00:10:02,095 --> 00:10:05,595
Of course, Mozilla does hope that most data are open

00:10:05,645 --> 00:10:08,645
So it's not just simply searching like that,

00:10:08,645 --> 00:10:10,920
we also have public data report

00:10:10,920 --> 00:10:13,380
where you'll find very interesting things in there

00:10:13,380 --> 00:10:16,500
and it allows users and developers

00:10:16,580 --> 00:10:19,200
to see if there's anything there that can help

00:10:19,200 --> 00:10:20,920
our product improve.

00:10:21,540 --> 00:10:24,880
That's my sharing for today

00:10:24,880 --> 00:10:26,740
that includes the methods on

00:10:26,740 --> 00:10:28,900
how do we handle users' data

00:10:28,900 --> 00:10:30,780
and ensure their privacy.

00:10:30,940 --> 00:10:32,760
And here's all the links to information mentioned

00:10:34,375 --> 00:10:35,375
Alright

00:10:35,455 --> 00:10:36,455

YouTube URL: https://www.youtube.com/watch?v=88QMKL987B4


