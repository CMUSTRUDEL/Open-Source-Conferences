Title: Hui Jing Chen -  Demystify Modern CSS Layouts with DevTools - View Source 2019
Publication date: 2019-11-26
Playlist: View Source 2019 - Amsterdam
Description: 
	#viewsourceconf #huijingchen #CSSLayout #CSS #devtools #firefoxdevtools
Flexbox, Grid and Box alignment properties are powerful and versatile new additions to our web development toolkit. However, they may be slightly confusing to wrap your head around if you do not completely understand how browsers interpret the CSS values you assign. Although we tend to associate DevTools with debugging, Firefox DevTools comes with features that can help visualise how these properties work, and better understand what's going on as the viewport size changes.
Captions: 
	00:00:07,160 --> 00:00:12,300
any of you which is great it's it's

00:00:10,679 --> 00:00:15,000
really way to be packmaster them again

00:00:12,300 --> 00:00:17,460
without the heatwave because I rely on

00:00:15,000 --> 00:00:19,800
Stevens the weather was the worst there

00:00:17,460 --> 00:00:21,539
was I'd still be here and I'm happy to

00:00:19,800 --> 00:00:23,220
be with all of you my name is Fuji and

00:00:21,539 --> 00:00:25,830
they are going to go through some of the

00:00:23,220 --> 00:00:28,439
newer CS as they are techniques but with

00:00:25,830 --> 00:00:30,119
no tools I don't know about you but I

00:00:28,439 --> 00:00:31,320
think the dev tools or something that

00:00:30,119 --> 00:00:33,420
you don't even vote when things went

00:00:31,320 --> 00:00:35,460
wrong you know at the beginning to me

00:00:33,420 --> 00:00:37,860
but over the past two years Drive

00:00:35,460 --> 00:00:40,350
acceptances transform it is much more

00:00:37,860 --> 00:00:42,780
than just that because I use might be as

00:00:40,350 --> 00:00:45,360
my main plaza also experience this

00:00:42,780 --> 00:00:47,640
firsthand as an end user so I'm gonna

00:00:45,360 --> 00:00:49,710
become covering a couple things

00:00:47,640 --> 00:00:52,620
today's and I also be talking about raw

00:00:49,710 --> 00:00:53,789
so I am sorry in the past is

00:00:52,620 --> 00:00:56,699
content-based

00:00:53,789 --> 00:00:58,770
signing so the concept of automatic

00:00:56,699 --> 00:01:00,480
sizing has always existed I mean

00:00:58,770 --> 00:01:02,699
browsers have always managed to figure

00:01:00,480 --> 00:01:04,619
out how much space content should take

00:01:02,699 --> 00:01:07,260
up without any intervention from us

00:01:04,619 --> 00:01:10,409
content we just focus which kind of just

00:01:07,260 --> 00:01:12,510
reflow without overlapping but there is

00:01:10,409 --> 00:01:14,670
a relatively new CSS specification known

00:01:12,510 --> 00:01:17,340
as the CSS intrinsic and extrinsic

00:01:14,670 --> 00:01:20,189
sizing module level 3 which allows the

00:01:17,340 --> 00:01:22,590
option of assigning automatic widths to

00:01:20,189 --> 00:01:25,140
the elements on a page so width and

00:01:22,590 --> 00:01:27,600
height cannot agree additional keyword

00:01:25,140 --> 00:01:30,360
values or main content max content and

00:01:27,600 --> 00:01:32,729
fit content now main content is the

00:01:30,360 --> 00:01:35,430
smallest size that our box intake which

00:01:32,729 --> 00:01:38,640
doesn't need to order so any NY content

00:01:35,430 --> 00:01:40,100
will wake multiple words why breaking

00:01:38,640 --> 00:01:42,290
might be something that

00:01:40,100 --> 00:01:44,450
don't give a second thought to but

00:01:42,290 --> 00:01:46,729
there's a whole new us depending on the

00:01:44,450 --> 00:01:50,000
language being used now many languages

00:01:46,729 --> 00:01:52,700
like English or Dutch that be vibrates

00:01:50,000 --> 00:01:55,100
occur at word balance where spaces or

00:01:52,700 --> 00:01:57,830
punctuation are used to explicitly

00:01:55,100 --> 00:01:59,840
separate words brother's body for

00:01:57,830 --> 00:02:01,759
another brick works so we look at the

00:01:59,840 --> 00:02:04,160
first box you'd see that the word

00:02:01,759 --> 00:02:06,860
content plus the full stop at the end is

00:02:04,160 --> 00:02:08,750
treated a single unbreakable entity and

00:02:06,860 --> 00:02:11,750
that ends up being the width of that

00:02:08,750 --> 00:02:13,670
first box but for languages that use

00:02:11,750 --> 00:02:14,239
home characters because over Chinese or

00:02:13,670 --> 00:02:17,510
Japanese

00:02:14,239 --> 00:02:19,489
the bridge is per character most of the

00:02:17,510 --> 00:02:21,650
time but not always because there are

00:02:19,489 --> 00:02:25,010
rules about certain characters that are

00:02:21,650 --> 00:02:26,810
not not start and alive now these alien

00:02:25,010 --> 00:02:30,050
scripts also use something known as the

00:02:26,810 --> 00:02:33,010
full width punctuation so if I would say

00:02:30,050 --> 00:02:33,010
that one here

00:02:35,560 --> 00:02:41,780
so therefore with commas here you notice

00:02:38,690 --> 00:02:44,330
that the box now two characters what and

00:02:41,780 --> 00:02:46,730
that has a big whiff of that box now we

00:02:44,330 --> 00:02:49,400
also have some Southeast Asian scripts

00:02:46,730 --> 00:02:50,600
by PI which are written without spaces

00:02:49,400 --> 00:02:52,970
between words

00:02:50,600 --> 00:02:54,830
so text is wrapped at simple boundaries

00:02:52,970 --> 00:02:56,239
in addition to where language and this

00:02:54,830 --> 00:02:59,390
is a good time to bring your attention

00:02:56,239 --> 00:03:01,400
to the max content set of examples so I

00:02:59,390 --> 00:03:03,860
only personally know one person in the

00:03:01,400 --> 00:03:05,510
audience who can be by for the rest of

00:03:03,860 --> 00:03:09,360
us I think if you don't meet that you

00:03:05,510 --> 00:03:12,840
wouldn't be able to know where the line

00:03:09,360 --> 00:03:14,730
the next content is the butcher side you

00:03:12,840 --> 00:03:16,769
so I'm gonna give an axis when there's a

00:03:14,730 --> 00:03:18,569
lot of space and content we'll try to

00:03:16,769 --> 00:03:21,480
take up as much space as required to

00:03:18,569 --> 00:03:23,670
make itself in a single line so in the

00:03:21,480 --> 00:03:26,400
first sentence the word primal is the

00:03:23,670 --> 00:03:28,769
longest in this sentence so if you go

00:03:26,400 --> 00:03:31,319
back here you'll notice that for the

00:03:28,769 --> 00:03:33,989
main content the width of the box is the

00:03:31,319 --> 00:03:35,549
width of the word right so you can't

00:03:33,989 --> 00:03:38,519
read it but the browser knows exactly

00:03:35,549 --> 00:03:40,590
where to split line victims and

00:03:38,519 --> 00:03:44,129
unfortunately is not a supported value

00:03:40,590 --> 00:03:46,500
at this point for women hi all three

00:03:44,129 --> 00:03:49,140
keywords asked for that when used in the

00:03:46,500 --> 00:03:51,239
context of formatting there so fit

00:03:49,140 --> 00:03:54,239
content is not a fixed value by the

00:03:51,239 --> 00:03:56,099
previous two key words it is a range it

00:03:54,239 --> 00:03:58,049
is a range between the main content size

00:03:56,099 --> 00:04:00,420
and the max content size or length

00:03:58,049 --> 00:04:02,849
percentage defined in the fifth content

00:04:00,420 --> 00:04:05,609
function whichever is smaller I'm sorry

00:04:02,849 --> 00:04:09,180
now about worse it's easier to see that

00:04:05,609 --> 00:04:14,510
look at the code so this is how it's

00:04:09,180 --> 00:04:19,799
being demonstrated in the browser no

00:04:14,510 --> 00:04:21,750
anymore so you can see this set of three

00:04:19,799 --> 00:04:24,590
columns their size main content max

00:04:21,750 --> 00:04:25,800
content and fit content 300 pixels

00:04:24,590 --> 00:04:28,349
respectively

00:04:25,800 --> 00:04:32,310
so the max content size of this runner

00:04:28,349 --> 00:04:34,740
text is about 480 pixels now when I

00:04:32,310 --> 00:04:37,650
resize the browser you notice that the

00:04:34,740 --> 00:04:40,470
fifth content column starts chick-chick

00:04:37,650 --> 00:04:44,430
keep drinking tricky trick and hit min

00:04:40,470 --> 00:04:47,190
content and that stops there but it

00:04:44,430 --> 00:04:49,229
starts to grow with more space it will

00:04:47,190 --> 00:04:51,210
stop it was over 300 pixels because

00:04:49,229 --> 00:04:53,460
that's the value has been put into the

00:04:51,210 --> 00:04:55,500
fifth content function now if we change

00:04:53,460 --> 00:04:57,980
the cat value something a bit longer

00:04:55,500 --> 00:05:01,160
then

00:04:57,980 --> 00:05:03,860
as I said 500 if there's no space it

00:05:01,160 --> 00:05:06,050
will keep going it will not hit 500 it

00:05:03,860 --> 00:05:07,820
will stop at the next content lives and

00:05:06,050 --> 00:05:09,470
that's what I was trying to describe in

00:05:07,820 --> 00:05:12,500
words which is clearly very hard to

00:05:09,470 --> 00:05:15,170
understand so hopefully this makes it a

00:05:12,500 --> 00:05:17,180
bit clearer next thing you wanna flash

00:05:15,170 --> 00:05:20,300
box where nobody knows the exact size of

00:05:17,180 --> 00:05:22,730
anything I hopefully after I go through

00:05:20,300 --> 00:05:25,280
this bit it becomes a bit more clear so

00:05:22,730 --> 00:05:27,170
this box was the first they are model

00:05:25,280 --> 00:05:29,210
that was specifically designed for

00:05:27,170 --> 00:05:30,950
building where they are so it's not a

00:05:29,210 --> 00:05:32,690
lot more powerful than some of the

00:05:30,950 --> 00:05:35,210
previous techniques that we used to have

00:05:32,690 --> 00:05:37,130
this allows the browser to take over

00:05:35,210 --> 00:05:39,230
sizing based on the amount of available

00:05:37,130 --> 00:05:42,110
space which can be confusing at first

00:05:39,230 --> 00:05:46,460
because the end result may not be where

00:05:42,110 --> 00:05:48,500
you specify and CSS as for now Firefox

00:05:46,460 --> 00:05:51,290
is the only browser with a flex box

00:05:48,500 --> 00:05:53,240
inspector so we can sort total this if

00:05:51,290 --> 00:05:57,530
you go you can click on the tab in the

00:05:53,240 --> 00:06:01,250
inspector section panel click this

00:05:57,530 --> 00:06:03,800
pretty blue if you don't like green I

00:06:01,250 --> 00:06:06,890
agree the default is you can change the

00:06:03,800 --> 00:06:09,710
overlay the overlay actually shows you

00:06:06,890 --> 00:06:13,190
the outline of each of the Flex events

00:06:09,710 --> 00:06:17,000
and any free space and so this texture

00:06:13,190 --> 00:06:19,160
style thing additional admission include

00:06:17,000 --> 00:06:21,410
the Flex direction in this case Dubrow

00:06:19,160 --> 00:06:24,140
show you the rap sizes in this case it's

00:06:21,410 --> 00:06:26,420
Noah but most importantly it shows you

00:06:24,140 --> 00:06:28,400
what the browser does to your text item

00:06:26,420 --> 00:06:30,980
when it resizes it and we'll talk about

00:06:28,400 --> 00:06:32,990
this a bit more in the later examples

00:06:30,980 --> 00:06:34,520
one of my really cool effects work with

00:06:32,990 --> 00:06:37,840
the amount of control it gives us of the

00:06:34,520 --> 00:06:37,840
distribution of free space

00:06:39,289 --> 00:06:43,999
like the amount free space available in

00:06:41,629 --> 00:06:46,939
our content provider and starting with

00:06:43,999 --> 00:06:49,099
of the website so the exact algorithm is

00:06:46,939 --> 00:06:50,930
so complicated but it's outlined in the

00:06:49,099 --> 00:06:52,819
specification if you're interested and

00:06:50,930 --> 00:06:55,339
the key are you to figuring our

00:06:52,819 --> 00:06:57,860
platforms it's understanding exactly how

00:06:55,339 --> 00:07:00,860
the Flex basis property works because

00:06:57,860 --> 00:07:03,169
they put a value of 100 pixels as a red

00:07:00,860 --> 00:07:05,779
faces to explain them I think

00:07:03,169 --> 00:07:07,939
intuitively most people would expect you

00:07:05,779 --> 00:07:10,399
know expect to see about 400 pixels

00:07:07,939 --> 00:07:13,009
because we're very used to be in full

00:07:10,399 --> 00:07:15,889
control of analyzing instructions but

00:07:13,009 --> 00:07:17,629
flex basis is actually the starting

00:07:15,889 --> 00:07:19,759
point from which the cipher boxes

00:07:17,629 --> 00:07:22,999
company so the key word here it is

00:07:19,759 --> 00:07:25,610
starting point because if you are not

00:07:22,999 --> 00:07:28,430
invited to grow or shrink both are the

00:07:25,610 --> 00:07:30,439
wrong size may not be a hundred pixels

00:07:28,430 --> 00:07:32,569
so sometimes you may encounter encounter

00:07:30,439 --> 00:07:35,360
a scenario where the same flex values

00:07:32,569 --> 00:07:37,309
give you different and results visually

00:07:35,360 --> 00:07:39,439
so if we look at the second set of

00:07:37,309 --> 00:07:42,289
content I have two flex containers with

00:07:39,439 --> 00:07:44,990
three flex Pentateuch and the first

00:07:42,289 --> 00:07:46,999
items have exactly the same content we

00:07:44,990 --> 00:07:51,379
just have much longer content for the

00:07:46,999 --> 00:07:54,019
second set both only have display flex

00:07:51,379 --> 00:07:56,269
set on the container and nothing set on

00:07:54,019 --> 00:07:57,979
the children so it's totally possible to

00:07:56,269 --> 00:08:01,669
change the different flex values in the

00:07:57,979 --> 00:08:05,599
children but by default they are 0 1 and

00:08:01,669 --> 00:08:08,269
bottom so a flat no value of 0 means

00:08:05,599 --> 00:08:10,490
that items are not going to grow beyond

00:08:08,269 --> 00:08:13,759
their starting with so in this case is a

00:08:10,490 --> 00:08:15,919
lot of space in fact there's extra space

00:08:13,759 --> 00:08:17,479
but the next item will not grow to fill

00:08:15,919 --> 00:08:19,849
up the space because you taught the

00:08:17,479 --> 00:08:23,240
browser the pressure is 0 so don't grow

00:08:19,849 --> 00:08:25,360
but with a flex shift value 1 it means

00:08:23,240 --> 00:08:28,580
that the moment it isn't enough space

00:08:25,360 --> 00:08:30,110
was gonna start taking space away from

00:08:28,580 --> 00:08:32,659
the fixed site up so when I start to

00:08:30,110 --> 00:08:34,970
shrink when I heard about this point the

00:08:32,659 --> 00:08:37,550
second set of content has already

00:08:34,970 --> 00:08:39,470
to share so when you hit somewhere here

00:08:37,550 --> 00:08:41,240
and you look at your next item you'll

00:08:39,470 --> 00:08:43,130
notice that even though the second

00:08:41,240 --> 00:08:46,010
column has exactly the same content it

00:08:43,130 --> 00:08:48,740
so many size differently because the

00:08:46,010 --> 00:08:52,280
adjacent flat items do impact the sizing

00:08:48,740 --> 00:08:55,430
of all sex items within a flex container

00:08:52,280 --> 00:08:58,520
now the Flex basis is auto this

00:08:55,430 --> 00:09:00,740
typically is equivalent to a max content

00:08:58,520 --> 00:09:02,960
week when there is no explicit with

00:09:00,740 --> 00:09:05,540
setting the Flex item meaning when both

00:09:02,960 --> 00:09:08,180
the width of the VEX item and the Flex

00:09:05,540 --> 00:09:10,280
basis is set to auto the model is going

00:09:08,180 --> 00:09:12,140
to use the content size as the starting

00:09:10,280 --> 00:09:13,940
point and this is reflected in the

00:09:12,140 --> 00:09:17,330
flexor constructor so if you see here it

00:09:13,940 --> 00:09:19,490
says content side by 118 there's no sub

00:09:17,330 --> 00:09:23,480
pixel a few semesters abandoned because

00:09:19,490 --> 00:09:25,850
words match but it's various and

00:09:23,480 --> 00:09:29,750
explicit will set on a flex item so

00:09:25,850 --> 00:09:34,030
let's do this I shall highlight this so

00:09:29,750 --> 00:09:38,380
let's set around them with let's say 200

00:09:34,030 --> 00:09:41,660
200 pixels so once you set up with

00:09:38,380 --> 00:09:44,810
explicit with the Flex item that becomes

00:09:41,660 --> 00:09:47,630
the selling point so it's it's really

00:09:44,810 --> 00:09:49,790
been 98 because waterboxx so when one

00:09:47,630 --> 00:09:51,020
pixel waters it's 200 the mother does

00:09:49,790 --> 00:09:55,610
not very well

00:09:51,020 --> 00:09:57,580
FYI but when there is an explicit flex

00:09:55,610 --> 00:10:04,600
basis however

00:09:57,580 --> 00:10:07,720
here well 300 with an explicit threat

00:10:04,600 --> 00:10:10,420
spaces value even though there is width

00:10:07,720 --> 00:10:12,340
on your flex item the Flex basis values

00:10:10,420 --> 00:10:15,010
didn't trumpet and then that ends up

00:10:12,340 --> 00:10:17,910
being the starting with of your ex item

00:10:15,010 --> 00:10:21,370
so if if you realize that sitting with

00:10:17,910 --> 00:10:24,190
doesn't give you the with that one maybe

00:10:21,370 --> 00:10:26,590
check the Flex basis value the natural

00:10:24,190 --> 00:10:29,920
rubber is the difference between having

00:10:26,590 --> 00:10:32,530
a flex basis of auto and a basis of zero

00:10:29,920 --> 00:10:34,180
so again we have two sets of three items

00:10:32,530 --> 00:10:36,430
but this one with exactly the same

00:10:34,180 --> 00:10:38,920
content now all the items have a

00:10:36,430 --> 00:10:40,390
extremely valuable one so they will also

00:10:38,920 --> 00:10:44,160
get same way when there is an enough

00:10:40,390 --> 00:10:48,040
space but there is very flex programs so

00:10:44,160 --> 00:10:50,020
the legs are 1 2 and 0 respectively to

00:10:48,040 --> 00:10:51,820
demonstrate how free space gets add to

00:10:50,020 --> 00:10:53,800
your Flex items when there is excess in

00:10:51,820 --> 00:10:56,830
space so a pulsar

00:10:53,800 --> 00:10:58,780
so the first set users photo as X basis

00:10:56,830 --> 00:11:04,540
which means the starter list for each

00:10:58,780 --> 00:11:06,250
item is its player here so you can see

00:11:04,540 --> 00:11:10,750
that these starting sighs but when a

00:11:06,250 --> 00:11:14,850
14-6 but the inspector also tells you

00:11:10,750 --> 00:11:17,410
how much your vex item has to roll so

00:11:14,850 --> 00:11:19,600
the available free space in this

00:11:17,410 --> 00:11:20,260
scenario is actually the total width of

00:11:19,600 --> 00:11:22,540
the container

00:11:20,260 --> 00:11:24,940
- always for the contents of the three

00:11:22,540 --> 00:11:26,590
flex items so this bit here if you can

00:11:24,940 --> 00:11:28,480
notice my cursor on this bit here and

00:11:26,590 --> 00:11:31,360
this bit here that seemed a free space

00:11:28,480 --> 00:11:33,790
that the browser is working with so the

00:11:31,360 --> 00:11:36,880
first for the first item you see that it

00:11:33,790 --> 00:11:41,290
has grown about 136 and for the second

00:11:36,880 --> 00:11:44,260
one it's going about 272 so basically it

00:11:41,290 --> 00:11:46,120
grew double the size but the final size

00:11:44,260 --> 00:11:48,190
of the first item is not half that of

00:11:46,120 --> 00:11:50,740
the second one because of the content

00:11:48,190 --> 00:11:53,170
the existence of the content with if you

00:11:50,740 --> 00:11:55,300
had wanted a scenario where your one

00:11:53,170 --> 00:11:58,780
item is exactly double of another one

00:11:55,300 --> 00:12:00,430
you will want a flex basis of 0 if you

00:11:58,780 --> 00:12:02,500
look at the second set of content I'm

00:12:00,430 --> 00:12:05,530
gonna hire it when you sell that basis

00:12:02,500 --> 00:12:08,410
of 0 the content size is negated so in

00:12:05,530 --> 00:12:10,390
the second scenario the total amount of

00:12:08,410 --> 00:12:12,610
free space available is the total width

00:12:10,390 --> 00:12:14,620
of the container - a min width of the

00:12:12,610 --> 00:12:16,510
third item because there's no free space

00:12:14,620 --> 00:12:18,580
there everything else in the two columns

00:12:16,510 --> 00:12:21,900
that's our two wraps so if you look at

00:12:18,580 --> 00:12:25,000
this common size 0 so the item is gonna

00:12:21,900 --> 00:12:28,960
318 pixels and the second one is double

00:12:25,000 --> 00:12:31,390
about about 760 so that's the difference

00:12:28,960 --> 00:12:32,650
between 0 and on top and given the use

00:12:31,390 --> 00:12:34,090
case for the design that you're building

00:12:32,650 --> 00:12:37,240
for it is definitely something that you

00:12:34,090 --> 00:12:39,310
want to keep in mind another thing is

00:12:37,240 --> 00:12:41,530
the ability to use box alignment

00:12:39,310 --> 00:12:43,360
properties so with inspector again

00:12:41,530 --> 00:12:45,700
allows us to visualize the free space

00:12:43,360 --> 00:12:50,920
how the free space is distributed so if

00:12:45,700 --> 00:12:53,260
I so these are meant to more originally

00:12:50,920 --> 00:12:55,690
meant to be used across all the levels

00:12:53,260 --> 00:12:58,300
but for now only applies to sex box and

00:12:55,690 --> 00:12:59,920
way and there are couple value set when

00:12:58,300 --> 00:13:02,620
it used to kind of distribute free space

00:12:59,920 --> 00:13:05,230
in these context so nice thing I like

00:13:02,620 --> 00:13:06,600
about their tools is opening so that if

00:13:05,230 --> 00:13:08,220
you can't remember

00:13:06,600 --> 00:13:10,380
your skin's kind of just flipped through

00:13:08,220 --> 00:13:11,430
and see like channel changing and see

00:13:10,380 --> 00:13:14,370
which one fits you the best

00:13:11,430 --> 00:13:16,529
but the flicks the Joseph I content

00:13:14,370 --> 00:13:18,899
property essentially allows you to

00:13:16,529 --> 00:13:21,000
adjust for items along the main axis

00:13:18,899 --> 00:13:23,190
which is the direction that oil flex

00:13:21,000 --> 00:13:25,860
items are data so you can kind of move

00:13:23,190 --> 00:13:28,110
your flex items within the container you

00:13:25,860 --> 00:13:31,620
can also distribute the space between

00:13:28,110 --> 00:13:35,069
the VEX items within the container now

00:13:31,620 --> 00:13:39,259
you can change the direction of flow so

00:13:35,069 --> 00:13:39,259
if I change the sex direction to column

00:13:39,890 --> 00:13:43,149
[Music]

00:13:44,520 --> 00:13:50,860
the main axis has now been flipped so

00:13:48,340 --> 00:13:52,330
the different content probably still

00:13:50,860 --> 00:13:55,060
applies along the main axis it shows

00:13:52,330 --> 00:13:56,400
that neither the direction is a vertical

00:13:55,060 --> 00:14:00,250
top-to-bottom constant

00:13:56,400 --> 00:14:04,630
please axis is perpendicular to the main

00:14:00,250 --> 00:14:06,850
axis so first and I never stretched

00:14:04,630 --> 00:14:09,670
along the cross axis to the full height

00:14:06,850 --> 00:14:12,330
of the Flex I'm the moment you apply a

00:14:09,670 --> 00:14:14,950
display sex on a parent container so

00:14:12,330 --> 00:14:16,810
however if you apply any of the self

00:14:14,950 --> 00:14:20,110
alignment properties for example I put

00:14:16,810 --> 00:14:22,360
an airline items here the others would

00:14:20,110 --> 00:14:25,120
have shrink back to their original heads

00:14:22,360 --> 00:14:28,030
this behavior also applies to bit items

00:14:25,120 --> 00:14:30,910
so if you do a self diamond 15 on your

00:14:28,030 --> 00:14:32,380
container you will also end up having

00:14:30,910 --> 00:14:34,930
grid cells that shrink to fit the

00:14:32,380 --> 00:14:37,780
content now a very interesting value for

00:14:34,930 --> 00:14:39,340
line items is actually baseline because

00:14:37,780 --> 00:14:41,710
if you have a situation like this where

00:14:39,340 --> 00:14:43,900
I have a very high scoring position

00:14:41,710 --> 00:14:46,030
different font sizes and the text within

00:14:43,900 --> 00:14:48,370
each item is so unrelated you can sort

00:14:46,030 --> 00:14:52,390
of run all the way back together to make

00:14:48,370 --> 00:14:57,000
it more easier to be in a way the last

00:14:52,390 --> 00:15:02,290
thing for flex box in properties is

00:14:57,000 --> 00:15:06,580
align content so say you have container

00:15:02,290 --> 00:15:17,560
that is taller than the height of your

00:15:06,580 --> 00:15:19,210
tallest anyway using the online content

00:15:17,560 --> 00:15:20,890
forward here actually allows you to pack

00:15:19,210 --> 00:15:23,290
your items together and move it along

00:15:20,890 --> 00:15:25,210
the entire container is the higher your

00:15:23,290 --> 00:15:28,290
container is way longer than the height

00:15:25,210 --> 00:15:28,290
of your items

00:15:31,880 --> 00:15:35,779
and regardless whether you use bit

00:15:34,220 --> 00:15:37,639
introduction or you're just trying out

00:15:35,779 --> 00:15:39,259
for the first time the grid inspector

00:15:37,639 --> 00:15:43,100
tools in Firefox can really help when it

00:15:39,259 --> 00:15:45,019
comes to just tryna the basic usage of

00:15:43,100 --> 00:15:47,209
they are great items is setting the

00:15:45,019 --> 00:15:49,690
track sizes or new rows and columns so

00:15:47,209 --> 00:15:56,750
let's just take a look at the syntax you

00:15:49,690 --> 00:15:58,459
apply display grid and this this is an

00:15:56,750 --> 00:15:59,870
exit I'm really fond of because it's

00:15:58,459 --> 00:16:01,610
kind of general so if you see three

00:15:59,870 --> 00:16:03,500
values in the between the columns is in

00:16:01,610 --> 00:16:05,920
three columns and then if you see two

00:16:03,500 --> 00:16:09,230
values in the mid term atrocity two rows

00:16:05,920 --> 00:16:11,269
the most the browser will automatically

00:16:09,230 --> 00:16:13,130
place your items into the grid using a

00:16:11,269 --> 00:16:14,060
very well thought through algorithm

00:16:13,130 --> 00:16:16,250
which is defined in the specification

00:16:14,060 --> 00:16:18,680
but things being placed one after

00:16:16,250 --> 00:16:20,660
another is behavior that most of us are

00:16:18,680 --> 00:16:22,730
saying you familiar with already what's

00:16:20,660 --> 00:16:25,550
special about it is how simple it is to

00:16:22,730 --> 00:16:27,470
manually place items in both dimensions

00:16:25,550 --> 00:16:30,259
and is my favorite analogy for this is

00:16:27,470 --> 00:16:32,569
placing pieces on a chess board this is

00:16:30,259 --> 00:16:37,490
normal that is what it is so here we

00:16:32,569 --> 00:16:41,149
have a fairly small 3x3 grid and the

00:16:37,490 --> 00:16:43,970
position of the grid line comes in here

00:16:41,149 --> 00:16:45,620
these be pawns it kind of works like XY

00:16:43,970 --> 00:16:47,600
coordinates on a Cartesian plane right

00:16:45,620 --> 00:16:49,040
so for example if I wanted this one to

00:16:47,600 --> 00:16:50,899
be smack in the middle I would use a

00:16:49,040 --> 00:16:52,699
critical value of two and a good

00:16:50,899 --> 00:16:54,800
combining of two so this is where I

00:16:52,699 --> 00:16:56,389
think my numbers turn on this having the

00:16:54,800 --> 00:16:58,730
right numbers from the grid inspector

00:16:56,389 --> 00:17:00,290
tool is very helpful because for the

00:16:58,730 --> 00:17:02,000
most part if you doing like a full page

00:17:00,290 --> 00:17:03,920
layout or more complicated there you're

00:17:02,000 --> 00:17:06,790
going to be having maybe upwards of 20

00:17:03,920 --> 00:17:10,480
columns you know just sit there and

00:17:06,790 --> 00:17:12,280
one two 24 and then place your goodbye

00:17:10,480 --> 00:17:14,560
there you want to see it exactly where

00:17:12,280 --> 00:17:16,890
your position is and then put your item

00:17:14,560 --> 00:17:18,940
where it is so this is a pretty useful

00:17:16,890 --> 00:17:20,290
aspect of the great inspector tool

00:17:18,940 --> 00:17:22,480
another thing that's really useful

00:17:20,290 --> 00:17:24,940
another syntax that I particularly like

00:17:22,480 --> 00:17:27,040
our grid is grid template areas which

00:17:24,940 --> 00:17:29,260
allow you to name the neighbors in which

00:17:27,040 --> 00:17:31,150
you want your elements to be so this

00:17:29,260 --> 00:17:33,070
syntax is pretty nice because it's

00:17:31,150 --> 00:17:36,100
structurally similar to what we see

00:17:33,070 --> 00:17:38,110
you've ended on the page now I you can't

00:17:36,100 --> 00:17:39,940
really see it because in dev tools kind

00:17:38,110 --> 00:17:42,550
of squished together but in your code

00:17:39,940 --> 00:17:45,070
editor with minimal space form you can

00:17:42,550 --> 00:17:48,790
kind of lay it out I see now each line

00:17:45,070 --> 00:17:51,220
that is surrounded by quotes represents

00:17:48,790 --> 00:17:53,950
a great bro well each value inside the

00:17:51,220 --> 00:17:55,630
line makes up the width so every line

00:17:53,950 --> 00:17:58,930
must have the same number of columns

00:17:55,630 --> 00:18:00,550
otherwise this whole thing is mute so

00:17:58,930 --> 00:18:03,250
you can't change you there without

00:18:00,550 --> 00:18:07,270
having to touch the code for individual

00:18:03,250 --> 00:18:11,140
items you only have to modify the code

00:18:07,270 --> 00:18:13,930
of your grid container so here for

00:18:11,140 --> 00:18:17,290
example if I think both shouldn't pick

00:18:13,930 --> 00:18:19,540
up form itself what we can do is we can

00:18:17,290 --> 00:18:27,430
just modify all the parent container

00:18:19,540 --> 00:18:29,800
here and so just by modifying the code

00:18:27,430 --> 00:18:32,380
on the grid template areas I can change

00:18:29,800 --> 00:18:34,770
the size of the green item and I think

00:18:32,380 --> 00:18:36,480
this is very handy for that's how more

00:18:34,770 --> 00:18:39,660
example say you have something like this

00:18:36,480 --> 00:18:41,340
where it's and there's been an era of

00:18:39,660 --> 00:18:44,430
things like a title content navigation

00:18:41,340 --> 00:18:48,090
etc when the viewport changes I can

00:18:44,430 --> 00:18:50,250
reposition the elements to fit to build

00:18:48,090 --> 00:18:53,340
a layer that fits better given the

00:18:50,250 --> 00:18:55,440
amount of space and instead of going to

00:18:53,340 --> 00:18:58,050
each individual item in adjusting the

00:18:55,440 --> 00:19:00,600
positions there I'll just slip it back

00:18:58,050 --> 00:19:02,460
so you can see all the changes are

00:19:00,600 --> 00:19:06,300
isolated to the code on the grid

00:19:02,460 --> 00:19:08,160
container and the smallest with your eye

00:19:06,300 --> 00:19:10,470
only with any way is to just get rid of

00:19:08,160 --> 00:19:12,630
it so I think the template areas is

00:19:10,470 --> 00:19:14,670
pretty good when you're doing full page

00:19:12,630 --> 00:19:16,680
layouts especially for more editorial

00:19:14,670 --> 00:19:20,010
design and you can actually use the good

00:19:16,680 --> 00:19:22,820
inspector to see how your your items

00:19:20,010 --> 00:19:27,000
sound to their respective idioms between

00:19:22,820 --> 00:19:28,410
another thing about lately is this is a

00:19:27,000 --> 00:19:32,250
new feature that Firefox start

00:19:28,410 --> 00:19:35,190
supporting c66 I think and it's the

00:19:32,250 --> 00:19:36,810
ability to manage with rows and clubs so

00:19:35,190 --> 00:19:40,170
this always been into the specification

00:19:36,810 --> 00:19:42,330
but it took a long time sometimes for

00:19:40,170 --> 00:19:44,060
brands to implement this feature now

00:19:42,330 --> 00:19:46,890
when you see something like this

00:19:44,060 --> 00:19:50,430
intuitively you think that the grid item

00:19:46,890 --> 00:19:52,310
is moving across trucks but that is not

00:19:50,430 --> 00:19:54,900
the case at all and only when you

00:19:52,310 --> 00:19:57,300
inspect it using the grid inspector tool

00:19:54,900 --> 00:20:00,780
things become a little clearer turning

00:19:57,300 --> 00:20:03,570
on in actual fact this example contains

00:20:00,780 --> 00:20:05,610
a big container of two rows and two

00:20:03,570 --> 00:20:07,590
columns with one with item in it and

00:20:05,610 --> 00:20:10,620
what the transition is what the

00:20:07,590 --> 00:20:12,519
animation keyframes are inflating is the

00:20:10,620 --> 00:20:14,830
different column and row sizes

00:20:12,519 --> 00:20:16,479
there I said explicitly and the greatest

00:20:14,830 --> 00:20:18,489
alignment has been set to the bottom

00:20:16,479 --> 00:20:20,619
right corner of the Witsell and so it's

00:20:18,489 --> 00:20:22,359
kind of a full animation across trucks

00:20:20,619 --> 00:20:24,700
so this we are having the corresponding

00:20:22,359 --> 00:20:26,889
death to support for a new CSS feature

00:20:24,700 --> 00:20:29,019
really helped in my understanding of how

00:20:26,889 --> 00:20:30,609
things worked under the hood because

00:20:29,019 --> 00:20:33,549
sometimes I get the question of which

00:20:30,609 --> 00:20:35,919
they are not oh is better by flexbox or

00:20:33,549 --> 00:20:38,139
with and to me nuts the wrong question

00:20:35,919 --> 00:20:39,279
to ask so if you can recall earlier when

00:20:38,139 --> 00:20:41,019
I talked about the box alignment

00:20:39,279 --> 00:20:43,330
properties I mentioned that using self

00:20:41,019 --> 00:20:46,119
alignment properties would sort of make

00:20:43,330 --> 00:20:51,070
your content to shrink to fit so if we

00:20:46,119 --> 00:20:55,989
have a design like this you have very

00:20:51,070 --> 00:20:58,599
thick that bit lines that are along your

00:20:55,989 --> 00:21:04,059
content does not necessarily fill up the

00:20:58,599 --> 00:21:06,219
entire of itself so if I say just like

00:21:04,059 --> 00:21:08,289
this one for example it is actually a

00:21:06,219 --> 00:21:10,749
good item but it's also a text container

00:21:08,289 --> 00:21:14,049
and this is necessary because if I did

00:21:10,749 --> 00:21:16,690
not make this a flex flex container

00:21:14,049 --> 00:21:19,299
let's just remove this and then I try to

00:21:16,690 --> 00:21:21,999
do that effect using just both alignment

00:21:19,299 --> 00:21:23,950
properties on the grid itself say if you

00:21:21,999 --> 00:21:27,099
think you'd use like something like a

00:21:23,950 --> 00:21:29,919
lion self center it doesn't work at all

00:21:27,099 --> 00:21:32,589
because the content shrinks to fit so

00:21:29,919 --> 00:21:34,839
it's perfectly acceptable to me to use a

00:21:32,589 --> 00:21:36,339
combination of built-in flex it's

00:21:34,839 --> 00:21:39,039
perfectly acceptable to make a bit out

00:21:36,339 --> 00:21:40,869
of the Flex container so it's not about

00:21:39,039 --> 00:21:43,509
flex box or great

00:21:40,869 --> 00:21:45,399
it's about platform and and I think

00:21:43,509 --> 00:21:47,769
that's the way our CSS works

00:21:45,399 --> 00:21:51,700
it's about combinations of different CSS

00:21:47,769 --> 00:21:53,829
that really make the power of CSS shine

00:21:51,700 --> 00:21:57,159
through now one last thing I wanna cover

00:21:53,829 --> 00:21:58,869
is flexible sizing I haven't been able

00:21:57,159 --> 00:22:01,029
to think of a better name for this but I

00:21:58,869 --> 00:22:04,479
am flexible sizing a very intriguing

00:22:01,029 --> 00:22:06,450
aspect of modern CSS nails because

00:22:04,479 --> 00:22:08,549
previously we've always used red

00:22:06,450 --> 00:22:11,700
percent interest or even the new ones

00:22:08,549 --> 00:22:13,379
our viewport units the issue of those is

00:22:11,700 --> 00:22:16,859
that they make all of your elements

00:22:13,379 --> 00:22:19,230
change in size at the same rate now good

00:22:16,859 --> 00:22:21,389
introduce or something known as our unit

00:22:19,230 --> 00:22:23,609
it also reduces the mid map function

00:22:21,389 --> 00:22:26,730
we've got other intrinsic sizing values

00:22:23,609 --> 00:22:29,309
like fit content Auto and with all these

00:22:26,730 --> 00:22:32,429
we have have something now known as

00:22:29,309 --> 00:22:36,359
variable rates of change I'll explain

00:22:32,429 --> 00:22:38,279
this soon and all these sizing units are

00:22:36,359 --> 00:22:41,609
fully supported in a grid format in

00:22:38,279 --> 00:22:47,970
context so all these boxes all these

00:22:41,609 --> 00:22:49,710
examples are actually just grids so in

00:22:47,970 --> 00:22:51,450
case you didn't know the alternative top

00:22:49,710 --> 00:22:53,460
right off for this particular talk was

00:22:51,450 --> 00:23:00,450
you mean you don't resize the browser on

00:22:53,460 --> 00:23:04,559
2005 today and this this so the first

00:23:00,450 --> 00:23:06,330
thing that I compare is our units so

00:23:04,559 --> 00:23:10,109
there's a handy that you're here green

00:23:06,330 --> 00:23:12,539
forever blue photo and represent a

00:23:10,109 --> 00:23:14,460
fraction of narrower space in the grid

00:23:12,539 --> 00:23:16,830
container so whenever there is any extra

00:23:14,460 --> 00:23:19,379
space it will always go to an end of our

00:23:16,830 --> 00:23:21,389
size color but in all of the first two

00:23:19,379 --> 00:23:25,320
have space finger away when there isn't

00:23:21,389 --> 00:23:27,090
in our space now although it's kind of

00:23:25,320 --> 00:23:29,249
similar and in that it will take up as

00:23:27,090 --> 00:23:32,220
much space as necessary without breaking

00:23:29,249 --> 00:23:34,830
lines it's a bit of it behaves Miramax

00:23:32,220 --> 00:23:36,809
content but you know SVG because it will

00:23:34,830 --> 00:23:39,570
shrink when there isn't enough space so

00:23:36,809 --> 00:23:42,139
that's how they behave individually but

00:23:39,570 --> 00:23:45,960
when used together you'll notice that

00:23:42,139 --> 00:23:48,539
also will cut itself and the max content

00:23:45,960 --> 00:23:51,509
with no matter how the viewport bus fare

00:23:48,539 --> 00:23:54,059
when there isn't enough space and space

00:23:51,509 --> 00:23:56,279
will get taken away from the fr you can

00:23:54,059 --> 00:23:58,710
wait anyway it will continue to take

00:23:56,279 --> 00:24:00,960
away space from the aircar meaning that

00:23:58,710 --> 00:24:03,040
the water column will hold its met with

00:24:00,960 --> 00:24:05,590
until there's absolutely no

00:24:03,040 --> 00:24:07,450
left before it had been in itself start

00:24:05,590 --> 00:24:10,600
shrinking of course everyone ends up at

00:24:07,450 --> 00:24:12,550
the minimum size eventually but in a

00:24:10,600 --> 00:24:14,800
sense you can notice how Auto is

00:24:12,550 --> 00:24:18,430
behaving differently from a car already

00:24:14,800 --> 00:24:20,950
the next step of that one compare is fit

00:24:18,430 --> 00:24:23,620
content and min max because they behave

00:24:20,950 --> 00:24:25,930
quite similar like they're both a range

00:24:23,620 --> 00:24:28,450
of values with a maximum and minimum

00:24:25,930 --> 00:24:30,790
limit so min max takes two arguments the

00:24:28,450 --> 00:24:34,000
first one is the entire second one

00:24:30,790 --> 00:24:37,210
maximum we've already so if you look at

00:24:34,000 --> 00:24:44,920
example 5 when driven inner space we

00:24:37,210 --> 00:24:48,550
already mentioned contents and auto-ship

00:24:44,920 --> 00:24:52,690
and hit their minimum size at exactly

00:24:48,550 --> 00:24:55,840
the same time that's all nice and good

00:24:52,690 --> 00:24:58,300
the example sets is slightly more

00:24:55,840 --> 00:25:03,400
interesting because that's with min max

00:24:58,300 --> 00:25:06,070
auto in then fit content so the one the

00:25:03,400 --> 00:25:08,410
columns grow and shrink are different

00:25:06,070 --> 00:25:11,830
for all three so again a lot of grocery

00:25:08,410 --> 00:25:14,770
sizing also starts off with all the free

00:25:11,830 --> 00:25:16,780
space when there's plenty high so it's

00:25:14,770 --> 00:25:20,350
also the first two giving up when the

00:25:16,780 --> 00:25:23,260
space gets taken away so so it's the one

00:25:20,350 --> 00:25:27,210
that starts to shrink more but the

00:25:23,260 --> 00:25:31,090
moment it hits its max content size here

00:25:27,210 --> 00:25:33,010
it stops shrinking space instead gets

00:25:31,090 --> 00:25:36,370
taken away from min Max who just be a

00:25:33,010 --> 00:25:41,860
yellow basically get taken away from me

00:25:36,370 --> 00:25:43,600
max until a point where all three start

00:25:41,860 --> 00:25:46,690
to shrink again I don't know exactly

00:25:43,600 --> 00:25:49,029
when that point is but it is the point

00:25:46,690 --> 00:25:52,149
allows all three of these columns that

00:25:49,029 --> 00:25:56,440
hit the minimum size and exactly the

00:25:52,149 --> 00:25:58,869
same time so in a growth scenario with

00:25:56,440 --> 00:26:00,999
there's lots of space fit content will

00:25:58,869 --> 00:26:03,820
grow but it will get a cap and its

00:26:00,999 --> 00:26:07,659
maximum maximum size and then after that

00:26:03,820 --> 00:26:09,669
you'll notice that although gross also

00:26:07,659 --> 00:26:12,009
will grow until it hits the max content

00:26:09,669 --> 00:26:15,759
size and then you will stop the space

00:26:12,009 --> 00:26:18,729
then gets given to the min max column

00:26:15,759 --> 00:26:21,940
until it hits the maximum size of 400

00:26:18,729 --> 00:26:24,700
before Auto continues to grow so this is

00:26:21,940 --> 00:26:27,639
what I mean when this variable bits of

00:26:24,700 --> 00:26:29,950
science changing my column sizes keeps

00:26:27,639 --> 00:26:31,479
on wait for each other and I think this

00:26:29,950 --> 00:26:33,609
opens up a lot more options for

00:26:31,479 --> 00:26:35,619
editorial design that adapt well to a

00:26:33,609 --> 00:26:37,239
greater range from viewport sizes so

00:26:35,619 --> 00:26:39,820
take this example it's actually two

00:26:37,239 --> 00:26:41,950
layers and very very similar and wide

00:26:39,820 --> 00:26:44,109
range the first one the top one this is

00:26:41,950 --> 00:26:45,970
size with percentages and the issue

00:26:44,109 --> 00:26:49,029
becomes apparent when the viewport size

00:26:45,970 --> 00:26:51,909
gets smaller because everything reduces

00:26:49,029 --> 00:26:54,489
at the symmetry so at some point you'll

00:26:51,909 --> 00:26:57,970
notice you probably ended up having to a

00:26:54,489 --> 00:26:59,619
media query to some VJ percentages as a

00:26:57,970 --> 00:27:01,570
small viewport because it doesn't really

00:26:59,619 --> 00:27:05,200
work very well anymore image is too

00:27:01,570 --> 00:27:06,970
small together but if you look we want

00:27:05,200 --> 00:27:10,479
that size with variable sizing it's a

00:27:06,970 --> 00:27:12,489
lot more robust across a lot a wide

00:27:10,479 --> 00:27:14,769
range of viewports and I think that's

00:27:12,489 --> 00:27:18,450
pretty interesting it's a good it's a

00:27:14,769 --> 00:27:22,330
very good property to make useless and

00:27:18,450 --> 00:27:24,669
in addition to that it also allows us to

00:27:22,330 --> 00:27:27,190
do things like say over that a lot more

00:27:24,669 --> 00:27:29,349
easily and that also opens up a lot more

00:27:27,190 --> 00:27:31,570
interesting combinations with other not

00:27:29,349 --> 00:27:33,530
necessarily they I believe in CSS but

00:27:31,570 --> 00:27:35,570
things like they're not things my

00:27:33,530 --> 00:27:37,670
our clip Musk's to do a lot more

00:27:35,570 --> 00:27:40,700
interesting things with them so this is

00:27:37,670 --> 00:27:43,370
a very very good example of how to use

00:27:40,700 --> 00:27:45,740
blend modes to overlap equipment for

00:27:43,370 --> 00:27:47,690
more artistic effects across different

00:27:45,740 --> 00:27:50,150
viewports so depending on how the

00:27:47,690 --> 00:27:53,000
viewport changes that is different and

00:27:50,150 --> 00:27:54,530
this is not happy overlap because in the

00:27:53,000 --> 00:27:56,120
problem that you saw that maybe use

00:27:54,530 --> 00:27:58,790
negative margins and things never fit

00:27:56,120 --> 00:28:01,700
this is terribly responsive you ask me

00:27:58,790 --> 00:28:03,680
and I think that even though individual

00:28:01,700 --> 00:28:05,330
cs4 these are pretty good it is when

00:28:03,680 --> 00:28:08,720
they are combined together in creative

00:28:05,330 --> 00:28:10,910
ways to be magic can happen so this is

00:28:08,720 --> 00:28:13,940
his evolving and becoming wrong about

00:28:10,910 --> 00:28:16,010
many of the older they are tricks like

00:28:13,940 --> 00:28:18,140
NASA HTML table for example they are

00:28:16,010 --> 00:28:20,270
honestly not really necessary anymore

00:28:18,140 --> 00:28:22,550
but with our properties that was

00:28:20,270 --> 00:28:25,100
specifically designed to suit the

00:28:22,550 --> 00:28:27,080
dynamic nature of the web they are new

00:28:25,100 --> 00:28:28,970
concepts to be learned and I realized

00:28:27,080 --> 00:28:31,010
that deafness can be an avenue to

00:28:28,970 --> 00:28:33,620
encourage developers to start trying out

00:28:31,010 --> 00:28:35,510
new CSS features but regarding guidance

00:28:33,620 --> 00:28:37,700
as part of the debugging process

00:28:35,510 --> 00:28:39,140
my first or very quick for me when I saw

00:28:37,700 --> 00:28:41,150
how the browser coupling to the size of

00:28:39,140 --> 00:28:43,370
my items the grid inspector very easily

00:28:41,150 --> 00:28:45,650
to experiment with more complicated size

00:28:43,370 --> 00:28:47,780
because the features like names like

00:28:45,650 --> 00:28:50,600
right numbers supporting of multiple

00:28:47,780 --> 00:28:52,790
overlays even little UI details like

00:28:50,600 --> 00:28:55,930
repositioning line number tagging into

00:28:52,790 --> 00:28:57,890
windows should be new features with

00:28:55,930 --> 00:29:00,910
corresponding tough to support is

00:28:57,890 --> 00:29:04,220
honestly one of my favorite things and

00:29:00,910 --> 00:29:06,230
so I would like to end off by saying

00:29:04,220 --> 00:29:08,260
that if you have been in defense about

00:29:06,230 --> 00:29:11,260
trying out these new features because

00:29:08,260 --> 00:29:11,260
complicated

00:29:13,940 --> 00:29:17,019

YouTube URL: https://www.youtube.com/watch?v=22ejQuAmZqo


