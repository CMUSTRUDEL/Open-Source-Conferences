Title: Paul Irish and Elizabeth Sweeny - Demystifying Speed Tooling - View Source 2019
Publication date: 2019-11-26
Playlist: View Source 2019 - Amsterdam
Description: 
	#paulirish #elizabethsweeny #performance #speedtooling 

This talk will provide an overview on how to effectively assess and optimize site performance using a slew of industry grade tooling. Learn how to methodically diagnose, benchmark (against both lab and field metrics), and monitor your site speed using these tools.
Captions: 
	00:00:00,000 --> 00:00:04,140
[Applause]

00:00:01,020 --> 00:00:04,140
[Music]

00:00:11,460 --> 00:00:14,569
[Music]

00:00:16,310 --> 00:00:21,960
I'm also Sweeney and I work and thank

00:00:18,960 --> 00:00:24,240
you for the Elizabeth and I work on web

00:00:21,960 --> 00:00:28,859
developer insights products as a product

00:00:24,240 --> 00:00:30,900
minute all right so so we're not here

00:00:28,859 --> 00:00:32,700
just to talk about best practices for

00:00:30,900 --> 00:00:35,719
the sake of it performance matters

00:00:32,700 --> 00:00:38,700
because if a sites are profitable sites

00:00:35,719 --> 00:00:41,489
but same time you know it can be

00:00:38,700 --> 00:00:43,980
difficult to know where to start and

00:00:41,489 --> 00:00:46,469
there's a lot of things that can torpedo

00:00:43,980 --> 00:00:48,840
your ability to make science fast and

00:00:46,469 --> 00:00:57,510
that's why we came up with a blueprint

00:00:48,840 --> 00:01:00,239
for your team's performance success a

00:00:57,510 --> 00:01:05,850
house of a very mature kind of

00:01:00,239 --> 00:01:08,640
performance focused team so we split

00:01:05,850 --> 00:01:11,280
into these free sections of defiance

00:01:08,640 --> 00:01:15,299
blueprint and inside three sections of

00:01:11,280 --> 00:01:17,490
our 15 recommended actions we start from

00:01:15,299 --> 00:01:19,860
the basics we scale up to just what is

00:01:17,490 --> 00:01:22,979
it considered a very mature performance

00:01:19,860 --> 00:01:24,600
culture so let's make sure that we all

00:01:22,979 --> 00:01:27,150
start on even footing these are kind of

00:01:24,600 --> 00:01:28,860
the table stinks of performance the

00:01:27,150 --> 00:01:32,630
things that absolutely everybody should

00:01:28,860 --> 00:01:32,630
feel comfortable with is a baseline and

00:01:33,729 --> 00:01:37,580
so we want to do this with you know

00:01:36,170 --> 00:01:39,979
starting with just the current status of

00:01:37,580 --> 00:01:42,439
the page and are we doing well or doing

00:01:39,979 --> 00:01:44,659
poorly and you can get this kind of with

00:01:42,439 --> 00:01:47,540
just a snapshot using the in PageSpeed

00:01:44,659 --> 00:01:49,100
insights web you can write an any URL

00:01:47,540 --> 00:01:50,690
for the tool and we'll provide you with

00:01:49,100 --> 00:01:52,310
both the lab and the field data

00:01:50,690 --> 00:01:54,049
necessary and to benchmark your pages

00:01:52,310 --> 00:01:57,890
speed now let's take a minute to break

00:01:54,049 --> 00:01:59,600
down the components of this report first

00:01:57,890 --> 00:02:01,159
you see the spore gauge at the top so

00:01:59,600 --> 00:02:02,930
this is a high level indication of how

00:02:01,159 --> 00:02:04,670
your page is doing and it's the same

00:02:02,930 --> 00:02:06,200
score you'd find in my house it's

00:02:04,670 --> 00:02:08,810
calculated with weighted performance

00:02:06,200 --> 00:02:11,120
metrics no my house measures things like

00:02:08,810 --> 00:02:13,760
first content and time to interactive

00:02:11,120 --> 00:02:16,190
and what's really special about the psi

00:02:13,760 --> 00:02:19,130
tool is that it does provide the lab and

00:02:16,190 --> 00:02:20,630
field in one place and the field data is

00:02:19,130 --> 00:02:23,420
sourced from the chrome user experience

00:02:20,630 --> 00:02:25,580
report or klux the lab data including

00:02:23,420 --> 00:02:27,319
the performance data metrics as well as

00:02:25,580 --> 00:02:28,910
the opportunities and the Diagnostics

00:02:27,319 --> 00:02:30,890
that you see directly beneath it those

00:02:28,910 --> 00:02:33,380
are all sorts from lighthouse but the

00:02:30,890 --> 00:02:36,560
report is run on your servers instead of

00:02:33,380 --> 00:02:37,489
your local machine and we know that it

00:02:36,560 --> 00:02:40,880
can be one of the most frustrating

00:02:37,489 --> 00:02:43,970
things building performance measurement

00:02:40,880 --> 00:02:45,980
into critical work streams and its core

00:02:43,970 --> 00:02:48,260
variants and things are difficult if the

00:02:45,980 --> 00:02:50,720
feedback you're getting tool seems to

00:02:48,260 --> 00:02:52,850
very unexpectedly it's difficult to

00:02:50,720 --> 00:02:54,230
benchmark and take action so some of the

00:02:52,850 --> 00:02:56,510
reasons are simple like runtime

00:02:54,230 --> 00:02:59,030
conditions of the tool itself but a

00:02:56,510 --> 00:03:03,370
great lot of new problems are actually

00:02:59,030 --> 00:03:03,370
from differences in the page itself

00:03:03,700 --> 00:03:09,260
so once we've kind of gotten this sense

00:03:06,950 --> 00:03:12,220
and benchmark kind of how things are in

00:03:09,260 --> 00:03:12,220
sites

00:03:12,520 --> 00:03:18,770
it's faster the dev tools are failing

00:03:15,680 --> 00:03:21,670
except for this there and we can work

00:03:18,770 --> 00:03:26,570
with you know the basics in localhost

00:03:21,670 --> 00:03:29,080
environment so we have land up stair and

00:03:26,570 --> 00:03:31,850
run in Thunder mobile emulation or not

00:03:29,080 --> 00:03:33,760
make whatever changes next thing that

00:03:31,850 --> 00:03:39,709
we'll pull out now actually that

00:03:33,760 --> 00:03:43,790
happened just two ago is now local

00:03:39,709 --> 00:03:48,440
overrides finally works alongside the on

00:03:43,790 --> 00:03:52,459
film court didn't is really so now you

00:03:48,440 --> 00:03:54,290
can go in and make changes using mobile

00:03:52,459 --> 00:03:57,770
rods say for instance adding a link rel

00:03:54,290 --> 00:04:00,440
preload header or you know delete the

00:03:57,770 --> 00:04:05,709
web fonts just to see what happens and

00:04:00,440 --> 00:04:08,360
then run it again and if you're not

00:04:05,709 --> 00:04:13,280
riots just google it there's probably a

00:04:08,360 --> 00:04:15,310
video from chaos on it it's really just

00:04:13,280 --> 00:04:17,989
like make any changes to any web page

00:04:15,310 --> 00:04:20,359
any with any production page and then

00:04:17,989 --> 00:04:26,840
change to persist based on your possible

00:04:20,359 --> 00:04:30,140
super cool one new Murphy Chur from my

00:04:26,840 --> 00:04:33,590
house call stack packs so basically this

00:04:30,140 --> 00:04:36,830
is a feature that enables us to include

00:04:33,590 --> 00:04:40,340
specific recommendations for your stack

00:04:36,830 --> 00:04:43,070
so any Java frameworks or like your your

00:04:40,340 --> 00:04:46,700
CMS or whatever platform you're running

00:04:43,070 --> 00:04:48,100
my house can detect those things and

00:04:46,700 --> 00:04:51,280
then we

00:04:48,100 --> 00:04:54,280
adding additional messages are relevant

00:04:51,280 --> 00:04:57,280
so what we're doing is we're working

00:04:54,280 --> 00:04:59,470
with the community to make sure that

00:04:57,280 --> 00:05:01,780
like the experts are involved and

00:04:59,470 --> 00:05:13,660
helping us guide users to what makes

00:05:01,780 --> 00:05:19,440
sense it's done various things so the

00:05:13,660 --> 00:05:23,020
first you can see here WordPress

00:05:19,440 --> 00:05:29,170
specific advice run lighthouse with any

00:05:23,020 --> 00:05:32,410
wordpress site disease now angular and

00:05:29,170 --> 00:05:33,430
react and Shopify so definitely check it

00:05:32,410 --> 00:05:35,230
out and if you're interested in

00:05:33,430 --> 00:05:36,940
contributing making sure that there's

00:05:35,230 --> 00:05:40,360
support for a particular thing that you

00:05:36,940 --> 00:05:41,980
work on just google my past get up

00:05:40,360 --> 00:05:48,640
there's a repo and it's pretty straight

00:05:41,980 --> 00:05:50,800
forward actually these okay so we're on

00:05:48,640 --> 00:05:53,320
action 3 and it's great to be able to

00:05:50,800 --> 00:05:55,240
get a snapshot of your field data and

00:05:53,320 --> 00:05:57,490
PSI but you want to see how your site

00:05:55,240 --> 00:05:59,830
has actually evolved over time and as

00:05:57,490 --> 00:06:01,930
you mentioned briefly before the chrome

00:05:59,830 --> 00:06:03,760
user experience report provides user

00:06:01,930 --> 00:06:05,800
experience metrics for how real-world

00:06:03,760 --> 00:06:08,650
users are actually experiencing the site

00:06:05,800 --> 00:06:11,110
in the wild and it's data set that's

00:06:08,650 --> 00:06:12,250
powered by and your actual users and the

00:06:11,110 --> 00:06:14,970
metrics collect that are aggregated

00:06:12,250 --> 00:06:17,980
anonymously from users who have opted in

00:06:14,970 --> 00:06:19,660
the dashboard itself allows you to

00:06:17,980 --> 00:06:21,130
better understand how an Orangeman

00:06:19,660 --> 00:06:23,260
performance to the orange and

00:06:21,130 --> 00:06:25,540
performance tables so it's bent out of

00:06:23,260 --> 00:06:27,460
studio and automatically syncs with the

00:06:25,540 --> 00:06:29,070
latest data set so you can easily tweak

00:06:27,460 --> 00:06:32,020
things and share it with your team

00:06:29,070 --> 00:06:33,430
you're seeing FCP right now but you can

00:06:32,020 --> 00:06:33,889
easily drill down into other field

00:06:33,430 --> 00:06:36,259
metric

00:06:33,889 --> 00:06:38,300
as well as breakdown into you know

00:06:36,259 --> 00:06:43,669
things like proportion of device usage

00:06:38,300 --> 00:06:45,770
or network connection tips but you need

00:06:43,669 --> 00:06:47,860
to quantify your users experience and it

00:06:45,770 --> 00:06:52,219
takes a village of metrics to do so

00:06:47,860 --> 00:06:54,319
again as we just heard because it isn't

00:06:52,219 --> 00:06:56,960
just a single moment in time there are

00:06:54,319 --> 00:06:58,789
load of metrics ranging from early to

00:06:56,960 --> 00:07:02,180
late and users load experience as well

00:06:58,789 --> 00:07:04,879
as a nativity main thread across both

00:07:02,180 --> 00:07:08,029
lab and field so having a lab and field

00:07:04,879 --> 00:07:10,069
story to complement each other is really

00:07:08,029 --> 00:07:12,680
critical you need to be able to debug

00:07:10,069 --> 00:07:14,539
and see how things are going to react in

00:07:12,680 --> 00:07:16,189
the real world try to predict but you

00:07:14,539 --> 00:07:18,819
also need that actual sign how much

00:07:16,189 --> 00:07:21,050
things are actually being experienced

00:07:18,819 --> 00:07:22,550
across the board between the lab in the

00:07:21,050 --> 00:07:24,289
field we want to make sure that were

00:07:22,550 --> 00:07:27,560
actually representing that users

00:07:24,289 --> 00:07:29,900
experience so our set of metrics evolves

00:07:27,560 --> 00:07:31,729
as we get better and better grasp of how

00:07:29,900 --> 00:07:32,990
to accurately represent that experience

00:07:31,729 --> 00:07:34,430
and so Paul is going to be sharing some

00:07:32,990 --> 00:07:41,680
the newest ones that have been built

00:07:34,430 --> 00:07:44,820
okay talk about three metrics we're

00:07:41,680 --> 00:07:48,010
and leading-edge metrics so first one

00:07:44,820 --> 00:07:53,400
this is about layout stability now one's

00:07:48,010 --> 00:07:57,330
called out instability words are hard

00:07:53,400 --> 00:08:01,650
yeah so its measured primarily by

00:07:57,330 --> 00:08:06,040
cumulative layout shift where shift is

00:08:01,650 --> 00:08:08,919
also like representing instability so

00:08:06,040 --> 00:08:12,760
this captures kind of what you think

00:08:08,919 --> 00:08:15,370
which is the open page inside the

00:08:12,760 --> 00:08:17,110
viewport if they move around we're

00:08:15,370 --> 00:08:20,350
trying to capture like how big they were

00:08:17,110 --> 00:08:23,020
and how much they moved and really going

00:08:20,350 --> 00:08:26,560
after the situation like this where this

00:08:23,020 --> 00:08:30,400
amazingly adorable website where you get

00:08:26,560 --> 00:08:33,980
to cute click on cats in for instance

00:08:30,400 --> 00:08:37,070
you are talking to cute cats and then a

00:08:33,980 --> 00:08:37,070
[Music]

00:08:37,320 --> 00:08:45,250
have announced itself by entering into

00:08:41,650 --> 00:08:47,910
the viewport and push the cat down and

00:08:45,250 --> 00:08:50,230
you know as payments no one likes that

00:08:47,910 --> 00:08:54,360
Coolio just trying to turn this

00:08:50,230 --> 00:08:54,360
annoyance into and qualify and we know

00:08:55,650 --> 00:09:04,839
we're just kind of in full paint LCAP so

00:09:01,650 --> 00:09:07,959
yeah so we have three frames here the

00:09:04,839 --> 00:09:09,730
second one is our first payments so also

00:09:07,959 --> 00:09:11,410
our first content helping you know the

00:09:09,730 --> 00:09:16,870
first test that shows up that counts

00:09:11,410 --> 00:09:19,120
right but basically not loaded they're a

00:09:16,870 --> 00:09:21,220
lot of times - as far as user perception

00:09:19,120 --> 00:09:24,399
concerned it's really really the big

00:09:21,220 --> 00:09:26,350
content that's in viewport loads in that

00:09:24,399 --> 00:09:27,639
really just feels like okay it's pretty

00:09:26,350 --> 00:09:29,829
much they're like the probably other

00:09:27,639 --> 00:09:31,329
little pieces here and there that are

00:09:29,829 --> 00:09:36,329
coming in but that's usually the big

00:09:31,329 --> 00:09:39,639
thing so learning is going after that

00:09:36,329 --> 00:09:41,740
looking at the largest image or where

00:09:39,639 --> 00:09:45,910
it's taxed on page and went in behind

00:09:41,740 --> 00:09:48,459
action renders yeah there's a whole just

00:09:45,910 --> 00:09:50,259
Google Alerts campaign getting up

00:09:48,459 --> 00:09:52,449
there's a really nice explainer it gets

00:09:50,259 --> 00:10:04,089
into the nitty-gritty of how you define

00:09:52,449 --> 00:10:10,420
content hole just how this is probably

00:10:04,089 --> 00:10:11,889
the newest of the three so to get into

00:10:10,420 --> 00:10:16,449
it we really need to talk a little bit

00:10:11,889 --> 00:10:19,600
about input and main threat so let's say

00:10:16,449 --> 00:10:26,800
we have you know main threat and we have

00:10:19,600 --> 00:10:28,360
a page and I am talking and well the

00:10:26,800 --> 00:10:30,459
main thread we have to run the event

00:10:28,360 --> 00:10:33,189
handler might our camera with the camera

00:10:30,459 --> 00:10:34,899
that JavaScript we're not done we will

00:10:33,189 --> 00:10:39,009
be able to reconcile be able to layout

00:10:34,899 --> 00:10:42,279
and paint right so that's just the

00:10:39,009 --> 00:10:44,259
normal flow let's say that there is

00:10:42,279 --> 00:10:49,480
tasks on the main thread

00:10:44,259 --> 00:10:54,279
I see button click on it but the page is

00:10:49,480 --> 00:10:56,139
doing something and two seconds so I tap

00:10:54,279 --> 00:10:58,520
and it's busy doing something at the

00:10:56,139 --> 00:11:00,770
same time so what happens well

00:10:58,520 --> 00:11:01,880
have to wait a single fret so we just

00:11:00,770 --> 00:11:05,709
gotta have to wait for that to finish

00:11:01,880 --> 00:11:09,350
and then we just do the everything else

00:11:05,709 --> 00:11:13,190
it's at that time there that we call

00:11:09,350 --> 00:11:15,740
input delay the time between when the

00:11:13,190 --> 00:11:17,649
tap happened on the screen and when we

00:11:15,740 --> 00:11:20,690
started running the event handlers

00:11:17,649 --> 00:11:23,029
noting the delay so first input delay is

00:11:20,690 --> 00:11:24,410
just that time the first time that

00:11:23,029 --> 00:11:31,790
happened to the first time burst into

00:11:24,410 --> 00:11:33,110
the page so let's take this idea but

00:11:31,790 --> 00:11:36,470
first thing we're going to remove the

00:11:33,110 --> 00:11:37,279
input entirely and we just go look at

00:11:36,470 --> 00:11:39,110
that task

00:11:37,279 --> 00:11:48,230
the tap is hanging out on the main

00:11:39,110 --> 00:11:52,250
thread you know doing the so let's kind

00:11:48,230 --> 00:11:54,560
of time scale we have a long path and so

00:11:52,250 --> 00:11:56,930
basically what we're looking at is the

00:11:54,560 --> 00:12:00,339
longer the task is the more kind of risk

00:11:56,930 --> 00:12:03,260
it introduces to the user experience

00:12:00,339 --> 00:12:07,089
that's you know 30 milliseconds no big

00:12:03,260 --> 00:12:10,130
deal but obviously a two-second task

00:12:07,089 --> 00:12:12,170
that everyone get every single time

00:12:10,130 --> 00:12:14,240
that's paid on the phone it's a good

00:12:12,170 --> 00:12:15,380
chance that when they click on try and

00:12:14,240 --> 00:12:18,740
interact with the page they're gonna be

00:12:15,380 --> 00:12:21,140
delayed by task right so it introduces a

00:12:18,740 --> 00:12:24,320
lot of risk so the way that we can look

00:12:21,140 --> 00:12:26,089
at this is that the first 50

00:12:24,320 --> 00:12:29,360
milliseconds of a task are kind of like

00:12:26,089 --> 00:12:32,899
free like good and find everything after

00:12:29,360 --> 00:12:36,130
that is this child and so we call this

00:12:32,899 --> 00:12:36,130
blocking time

00:12:38,839 --> 00:12:45,139
so what we can do is we can take a full

00:12:41,509 --> 00:12:51,980
timeline these are just some time domain

00:12:45,139 --> 00:12:53,990
prep and if we basically consider the

00:12:51,980 --> 00:12:58,059
first 50ml second stream and then cast

00:12:53,990 --> 00:13:01,180
that time to those so in total we have

00:12:58,059 --> 00:13:05,180
270 milliseconds of main thread

00:13:01,180 --> 00:13:08,120
costs but then 60 milliseconds of that

00:13:05,180 --> 00:13:11,600
is considered blocking so our total

00:13:08,120 --> 00:13:13,629
bucking time actually is just all those

00:13:11,600 --> 00:13:16,040
in-between first patent for paint and

00:13:13,629 --> 00:13:20,930
TDI and so what we're really trying to

00:13:16,040 --> 00:13:23,029
do here is just capture how much risk to

00:13:20,930 --> 00:13:26,209
the user experience all along tasks on

00:13:23,029 --> 00:13:29,240
page are introducing you can also

00:13:26,209 --> 00:13:32,180
imagine the exact same work we can do

00:13:29,240 --> 00:13:36,529
270 milliseconds of work just chunked up

00:13:32,180 --> 00:13:38,809
into tasks that are 50 milliseconds and

00:13:36,529 --> 00:13:42,470
smaller so it's not necessarily about

00:13:38,809 --> 00:13:46,100
doing less work it's doing it in smaller

00:13:42,470 --> 00:13:50,689
chunks of course if if the JavaScript

00:13:46,100 --> 00:13:54,559
work well I'd be good too so that covers

00:13:50,689 --> 00:13:57,829
the metrics these metrics are mill in

00:13:54,559 --> 00:13:59,149
different places in the lab obviously we

00:13:57,829 --> 00:14:01,009
kind of have control complete control

00:13:59,149 --> 00:14:02,480
over the browser full instrumentation so

00:14:01,009 --> 00:14:03,829
we can capture a lot of these over the

00:14:02,480 --> 00:14:05,120
exception of first input delay which

00:14:03,829 --> 00:14:08,420
really only makes fantastic this wheel

00:14:05,120 --> 00:14:11,809
but in the field it's kind of we have

00:14:08,420 --> 00:14:14,889
from your report you can get the data

00:14:11,809 --> 00:14:20,149
through that for various metrics there

00:14:14,889 --> 00:14:22,670
and then so this is kind of shorthand

00:14:20,149 --> 00:14:24,559
basically the false observer and

00:14:22,670 --> 00:14:27,649
different engine types I did what went

00:14:24,559 --> 00:14:28,130
out that internet to the finest kinda

00:14:27,649 --> 00:14:31,149
pain

00:14:28,130 --> 00:14:35,319
event layout shift down at the bottom

00:14:31,149 --> 00:14:38,990
those are not reduced in like the last

00:14:35,319 --> 00:14:43,009
class they're pretty meal even belonged

00:14:38,990 --> 00:14:45,800
asked us had just started shipping about

00:14:43,009 --> 00:14:52,579
a year ago event and layout shift

00:14:45,800 --> 00:14:54,529
actually start shipping in chrome 77 so

00:14:52,579 --> 00:15:01,130
before we go further I want to take a

00:14:54,529 --> 00:15:03,170
brief respite and examine tools so we're

00:15:01,130 --> 00:15:04,699
talking about a few tools and they make

00:15:03,170 --> 00:15:07,279
sense in different situations but I just

00:15:04,699 --> 00:15:09,050
want to clarify the one thing is that

00:15:07,279 --> 00:15:11,540
they're all based on the same core

00:15:09,050 --> 00:15:12,440
engine so most lab tools are powered by

00:15:11,540 --> 00:15:15,500
lighthouse

00:15:12,440 --> 00:15:18,500
well web / KPIs and chrome usage

00:15:15,500 --> 00:15:20,209
statistics power all field data so it's

00:15:18,500 --> 00:15:29,660
all kind of coming from the same source

00:15:20,209 --> 00:15:31,339
of waste alright so here we're getting

00:15:29,660 --> 00:15:33,160
Plumbing's and the more professional

00:15:31,339 --> 00:15:36,170
techniques

00:15:33,160 --> 00:15:37,670
yeah and so I'm gonna take this pause my

00:15:36,170 --> 00:15:38,839
regularly scheduled programming things

00:15:37,670 --> 00:15:43,100
you don't want to do to your speaker

00:15:38,839 --> 00:15:44,990
right here to two things one how awesome

00:15:43,100 --> 00:15:52,310
was that explanation a really

00:15:44,990 --> 00:15:55,550
complicated metric was my speaker has

00:15:52,310 --> 00:15:58,730
changed and it was it was handy the

00:15:55,550 --> 00:16:00,139
performance variance panda and I'm sure

00:15:58,730 --> 00:16:01,330
it was all very confusing why there was

00:16:00,139 --> 00:16:04,220
a

00:16:01,330 --> 00:16:05,630
yeah but but he's he's there when your

00:16:04,220 --> 00:16:10,090
score variance changes to make

00:16:05,630 --> 00:16:10,090
everything feel better so I just had the

00:16:12,430 --> 00:16:17,600
regular stuff so we're at the point

00:16:15,710 --> 00:16:19,700
where you actually need to make sure

00:16:17,600 --> 00:16:21,560
that you have organizational buy-in to

00:16:19,700 --> 00:16:25,730
implement this blueprint that we're

00:16:21,560 --> 00:16:27,530
talking about and this is because

00:16:25,730 --> 00:16:29,120
ultimately there's nothing more annoying

00:16:27,530 --> 00:16:31,100
or difficult than trying to layer

00:16:29,120 --> 00:16:33,110
performance on top of a fundamentally

00:16:31,100 --> 00:16:35,060
non-performance site but unfortunately

00:16:33,110 --> 00:16:38,060
this can be seen very typically in how

00:16:35,060 --> 00:16:40,370
organizations design their web apps so

00:16:38,060 --> 00:16:42,020
performance is an afterthought often it

00:16:40,370 --> 00:16:43,790
only becomes a priority in the heat of

00:16:42,020 --> 00:16:46,370
an emergency you know these are

00:16:43,790 --> 00:16:49,250
complaining businesses money and panic

00:16:46,370 --> 00:16:51,620
ensues performance at the end of the day

00:16:49,250 --> 00:16:53,600
is about solving business problems and

00:16:51,620 --> 00:16:55,220
understanding that the conversations we

00:16:53,600 --> 00:16:57,590
need to increase conversions and lower

00:16:55,220 --> 00:16:59,930
our LCP are fundamentally the same

00:16:57,590 --> 00:17:01,940
conversations can help to get both

00:16:59,930 --> 00:17:03,640
business and engineering excited about

00:17:01,940 --> 00:17:06,110
solving problems that lend themselves

00:17:03,640 --> 00:17:09,110
towards increasing quality for your

00:17:06,110 --> 00:17:11,420
users and ensuring that all stakeholders

00:17:09,110 --> 00:17:13,640
have the same incentives and are all on

00:17:11,420 --> 00:17:15,980
the same page about what results in high

00:17:13,640 --> 00:17:19,070
ROI allows for developers to have the

00:17:15,980 --> 00:17:21,470
time and space to focus on will result

00:17:19,070 --> 00:17:23,900
in overall success for the business and

00:17:21,470 --> 00:17:26,209
underlying the foundations of any

00:17:23,900 --> 00:17:29,420
incentive structure our feedback loops

00:17:26,209 --> 00:17:32,000
so we want to make sure that you know

00:17:29,420 --> 00:17:32,910
developers are armed with the data field

00:17:32,000 --> 00:17:36,750
and lab

00:17:32,910 --> 00:17:38,700
Cerie to make the correlation clear and

00:17:36,750 --> 00:17:41,040
that's where some of the the tools can

00:17:38,700 --> 00:17:43,440
come to play but at the end of the day

00:17:41,040 --> 00:17:47,100
if these fail you know all the ways you

00:17:43,440 --> 00:17:48,870
can always help too so what's great is

00:17:47,100 --> 00:17:50,940
that by step six were comfortable with

00:17:48,870 --> 00:17:52,620
what we want to be measuring you know

00:17:50,940 --> 00:17:54,750
what speed mattress we want to be

00:17:52,620 --> 00:17:57,420
tracking in the lab and the field and

00:17:54,750 --> 00:17:58,650
what tools to use to do so but we still

00:17:57,420 --> 00:18:01,890
haven't defined success

00:17:58,650 --> 00:18:03,720
so my DT is seven seconds is that good I

00:18:01,890 --> 00:18:05,850
don't know because we haven't set goals

00:18:03,720 --> 00:18:08,880
and this is where performance budgets

00:18:05,850 --> 00:18:10,950
come in and you are in control and able

00:18:08,880 --> 00:18:13,200
to define what budget you want to set

00:18:10,950 --> 00:18:14,970
based on your team needs and your goals

00:18:13,200 --> 00:18:16,710
but at the end of the day when you're

00:18:14,970 --> 00:18:19,170
setting kind of reasonably aggressive

00:18:16,710 --> 00:18:21,390
budgets it really does help to set you

00:18:19,170 --> 00:18:23,040
up for success particularly when you

00:18:21,390 --> 00:18:25,230
know new features are introduced team

00:18:23,040 --> 00:18:27,360
grows and your you know bandwidth gets

00:18:25,230 --> 00:18:29,520
devoured by day to day stuff pretty fast

00:18:27,360 --> 00:18:31,620
so there are three kinds of budgets that

00:18:29,520 --> 00:18:34,080
you can set you know including resource

00:18:31,620 --> 00:18:36,870
quantity milestone or metric budgets as

00:18:34,080 --> 00:18:38,340
well as score and all of these can can

00:18:36,870 --> 00:18:41,700
be effective in conjunction with

00:18:38,340 --> 00:18:43,560
whatever LAN has now supports your

00:18:41,700 --> 00:18:45,480
resource quantity budgets within the

00:18:43,560 --> 00:18:47,970
report UI itself just to make it easier

00:18:45,480 --> 00:18:49,470
so that your team and thematically how

00:18:47,970 --> 00:18:51,510
well you are actually performing against

00:18:49,470 --> 00:18:52,860
the goals that you set and to get

00:18:51,510 --> 00:18:55,590
started you just define about as well

00:18:52,860 --> 00:18:58,320
this example set a budget of 125

00:18:55,590 --> 00:19:01,530
kilowatts for all scripts 54 stylesheets

00:18:58,320 --> 00:19:03,390
and 35 Network requests total then you

00:19:01,530 --> 00:19:05,610
use your budget in lighthouse buy and

00:19:03,390 --> 00:19:07,590
passing the budget path flag followed by

00:19:05,610 --> 00:19:10,310
the path to your budget file in order to

00:19:07,590 --> 00:19:12,390
calculate whenever a category

00:19:10,310 --> 00:19:13,860
if you're not sure where to start and

00:19:12,390 --> 00:19:15,540
you can check out our colleague Katie

00:19:13,860 --> 00:19:17,850
and Phineas's performance budget

00:19:15,540 --> 00:19:20,160
calculator it just gives you a sense of

00:19:17,850 --> 00:19:21,540
what a reasonable default budget might

00:19:20,160 --> 00:19:24,420
be for you and your team based on your

00:19:21,540 --> 00:19:26,580
industry in your goals all right

00:19:24,420 --> 00:19:29,490
so about here is probably might make

00:19:26,580 --> 00:19:34,040
sense to bust out the profilers and you

00:19:29,490 --> 00:19:37,380
won't go into the performance pay levels

00:19:34,040 --> 00:19:39,240
so there's kind of two things that you

00:19:37,380 --> 00:19:42,330
do at this point

00:19:39,240 --> 00:19:44,340
use fail to diagnose with honey elope

00:19:42,330 --> 00:19:46,140
that's a lot of kind of looking at the

00:19:44,340 --> 00:19:48,870
network requests that are community I

00:19:46,140 --> 00:19:49,980
mean their activity in the paints and

00:19:48,870 --> 00:19:52,650
what's actually showing up in the

00:19:49,980 --> 00:19:54,180
screenshots to the user and

00:19:52,650 --> 00:19:56,640
understanding kind of the flow of those

00:19:54,180 --> 00:19:59,670
things a lot of times we start kind of

00:19:56,640 --> 00:20:00,990
from the success of each screenshot and

00:19:59,670 --> 00:20:03,030
you're like okay that's the screenshot

00:20:00,990 --> 00:20:04,560
that I want what happened before it and

00:20:03,030 --> 00:20:08,670
how can I make all those things take

00:20:04,560 --> 00:20:11,370
less time the other thing that we do for

00:20:08,670 --> 00:20:12,750
Phil is understand what is happening on

00:20:11,370 --> 00:20:15,330
the main thread that's a lot of time

00:20:12,750 --> 00:20:16,710
looking at call stacks what script it is

00:20:15,330 --> 00:20:18,990
who it is maybe it's from an iframe

00:20:16,710 --> 00:20:21,450
third party just kind of understanding

00:20:18,990 --> 00:20:24,360
and breaking it down into what is taking

00:20:21,450 --> 00:20:28,590
out time and often there honestly it's a

00:20:24,360 --> 00:20:30,630
matter more like deferring things more

00:20:28,590 --> 00:20:33,280
than like doing a micro optimizations

00:20:30,630 --> 00:20:37,010
which uniform

00:20:33,280 --> 00:20:38,720
and so you know as much as we'd like to

00:20:37,010 --> 00:20:40,760
sit in front of dev tools all day

00:20:38,720 --> 00:20:42,740
running lighthouse over and over again

00:20:40,760 --> 00:20:44,480
to make sure there are good question

00:20:42,740 --> 00:20:47,750
regressions because that kind of sounds

00:20:44,480 --> 00:20:50,270
fun but we really need to make sure that

00:20:47,750 --> 00:20:52,130
we are automated so that we can actually

00:20:50,270 --> 00:20:54,680
scale and that's where production

00:20:52,130 --> 00:20:56,090
monitoring comes in so there are a lot

00:20:54,680 --> 00:20:57,410
of third-party production monitoring

00:20:56,090 --> 00:20:59,330
solutions that are built on top of

00:20:57,410 --> 00:21:00,530
lighthouses engine and as Paul mentioned

00:20:59,330 --> 00:21:02,450
earlier a lot of the web performance

00:21:00,530 --> 00:21:05,960
tools that you see are based on the same

00:21:02,450 --> 00:21:07,850
core technologies and data and I really

00:21:05,960 --> 00:21:11,030
like that production monitoring can be

00:21:07,850 --> 00:21:13,040
done with PageSpeed insights API you're

00:21:11,030 --> 00:21:15,620
able to run lighthouse and track your

00:21:13,040 --> 00:21:17,870
pages performance scores over time as

00:21:15,620 --> 00:21:20,420
well as other auto categories you know

00:21:17,870 --> 00:21:22,970
across the board it runs by default with

00:21:20,420 --> 00:21:24,980
just desktop and in performance but you

00:21:22,970 --> 00:21:27,590
can expand it to all categories and you

00:21:24,980 --> 00:21:31,760
can get crushed field data from the API

00:21:27,590 --> 00:21:33,530
as well all right at this point probably

00:21:31,760 --> 00:21:34,760
need a little bit more details on the

00:21:33,530 --> 00:21:36,650
user behavior that's happening on the

00:21:34,760 --> 00:21:39,530
site itself there's a lot of great

00:21:36,650 --> 00:21:44,470
solutions here I want to call out one it

00:21:39,530 --> 00:21:44,470
is a Google solution but it's

00:21:44,820 --> 00:21:51,450
and I think future lies it's it's really

00:21:48,570 --> 00:21:54,659
nice since I hope we see other solutions

00:21:51,450 --> 00:21:57,120
also provides my face so far because

00:21:54,659 --> 00:22:01,470
that's new performance monitoring for my

00:21:57,120 --> 00:22:02,940
maps in there you see a bunch of key

00:22:01,470 --> 00:22:05,669
performance metrics that you usually

00:22:02,940 --> 00:22:08,700
don't see coming from you know jump

00:22:05,669 --> 00:22:11,700
analytics provider so first pane first

00:22:08,700 --> 00:22:12,809
continental paint ford input delay or

00:22:11,700 --> 00:22:14,850
all there and the thing that I don't

00:22:12,809 --> 00:22:16,320
like thing that I love about this is

00:22:14,850 --> 00:22:18,539
that you get the full distribution from

00:22:16,320 --> 00:22:21,570
all your users so the ones that were on

00:22:18,539 --> 00:22:24,720
desktop on fiber and the ones that were

00:22:21,570 --> 00:22:27,539
on a slow phone a really poor flaky

00:22:24,720 --> 00:22:29,730
network connection so you get the full

00:22:27,539 --> 00:22:31,860
distribution coming out the meeting to

00:22:29,730 --> 00:22:33,870
not the average the average is just the

00:22:31,860 --> 00:22:37,519
worst possible number to summarize from

00:22:33,870 --> 00:22:39,750
data with he had so much so like I just

00:22:37,519 --> 00:22:41,789
keep sending emails to be the one who

00:22:39,750 --> 00:22:43,730
lets people be like stop doing what

00:22:41,789 --> 00:22:47,670
you're doing

00:22:43,730 --> 00:22:50,010
anyways so really like this stuff you

00:22:47,670 --> 00:22:52,110
can also dig into specific metrics see

00:22:50,010 --> 00:22:55,890
how they change over time pivot the data

00:22:52,110 --> 00:22:56,550
and based on different variables so it's

00:22:55,890 --> 00:22:58,410
cool

00:22:56,550 --> 00:22:59,640
and we're going to see similar things

00:22:58,410 --> 00:23:04,590
like I said before I'm the medical

00:22:59,640 --> 00:23:06,780
ability slide the amount of new kind of

00:23:04,590 --> 00:23:09,840
signals that you can collect from the

00:23:06,780 --> 00:23:13,140
page in the paper javascript has really

00:23:09,840 --> 00:23:14,520
grown quite a lot in the last year so it

00:23:13,140 --> 00:23:16,710
means that we can now have a much more

00:23:14,520 --> 00:23:19,080
complete picture more than just content

00:23:16,710 --> 00:23:23,010
load unload but really understand what's

00:23:19,080 --> 00:23:24,930
happening for you yeah so now we're at

00:23:23,010 --> 00:23:27,630
the point where we know how and where to

00:23:24,930 --> 00:23:29,600
collect all the field and lab data both

00:23:27,630 --> 00:23:32,280
in aggregate as well as on a page level

00:23:29,600 --> 00:23:34,470
and how you performed over time again at

00:23:32,280 --> 00:23:36,210
your benchmarks so that's great but we

00:23:34,470 --> 00:23:38,010
don't want to know how you're doing in

00:23:36,210 --> 00:23:40,440
relation to your competition right okay

00:23:38,010 --> 00:23:41,730
it might have been well so here we

00:23:40,440 --> 00:23:42,510
recommend that you leverage the full

00:23:41,730 --> 00:23:45,060
power aprox

00:23:42,510 --> 00:23:48,480
but with bigquery in order to really

00:23:45,060 --> 00:23:50,250
kind of dig deeper into the doses now

00:23:48,480 --> 00:23:52,350
you know not only can you compare

00:23:50,250 --> 00:23:54,270
against one competitor's website but you

00:23:52,350 --> 00:23:56,070
can also compare all competitors across

00:23:54,270 --> 00:24:00,420
the board and within the industry that

00:23:56,070 --> 00:24:02,070
you plan you can visit our top github to

00:24:00,420 --> 00:24:03,360
discover kind of useful recipes for

00:24:02,070 --> 00:24:05,100
extracting these insights so you don't

00:24:03,360 --> 00:24:06,570
have to write the scripts yourself and

00:24:05,100 --> 00:24:09,510
if you have a core recipe that you'd

00:24:06,570 --> 00:24:12,720
like to share please yeah groups tackle

00:24:09,510 --> 00:24:13,020
it just like butter like little snippets

00:24:12,720 --> 00:24:17,640
and

00:24:13,020 --> 00:24:19,920
recipes like a software project in

00:24:17,640 --> 00:24:22,050
itself just like these are good ways and

00:24:19,920 --> 00:24:24,450
good starting queries to work with the

00:24:22,050 --> 00:24:28,050
project another thing that we plan for

00:24:24,450 --> 00:24:30,180
is that there's a third party API that

00:24:28,050 --> 00:24:33,150
was like launched like two or three

00:24:30,180 --> 00:24:36,450
weeks ago it's called crux run that's

00:24:33,150 --> 00:24:38,640
domain so someone else built it

00:24:36,450 --> 00:24:41,640
basically it's exposing just a restful

00:24:38,640 --> 00:24:44,070
api that has pretty much the same

00:24:41,640 --> 00:24:45,960
computer support data in it

00:24:44,070 --> 00:24:47,820
so if you want it over the same table

00:24:45,960 --> 00:24:51,780
we're going api not to run bigquery

00:24:47,820 --> 00:24:53,220
pretty good solution so you have your

00:24:51,780 --> 00:24:54,900
foundation and now you have your

00:24:53,220 --> 00:24:57,150
plumbing but there's something missing

00:24:54,900 --> 00:25:00,360
because i can take a shower but i can't

00:24:57,150 --> 00:25:01,500
turn the lights on so now it's for the

00:25:00,360 --> 00:25:07,350
stuff that will really light up your

00:25:01,500 --> 00:25:08,670
world I can't help myself so this part

00:25:07,350 --> 00:25:10,290
of the blueprint for performance success

00:25:08,670 --> 00:25:11,940
is one of the most valuable things that

00:25:10,290 --> 00:25:13,620
you can do so it's being able to

00:25:11,940 --> 00:25:17,250
actually correlate your speed metrics

00:25:13,620 --> 00:25:19,620
with key business indicators and you

00:25:17,250 --> 00:25:21,480
know you want to be able to understand

00:25:19,620 --> 00:25:23,580
and correlate the speed with which your

00:25:21,480 --> 00:25:25,680
users interact with your site as well as

00:25:23,580 --> 00:25:27,870
your conversion your bounce engagement

00:25:25,680 --> 00:25:31,230
rates it's all just kind of a cool thing

00:25:27,870 --> 00:25:32,100
and there are a few steps to get started

00:25:31,230 --> 00:25:34,440
with this we're just going to show two

00:25:32,100 --> 00:25:37,080
right now the first is choosing a

00:25:34,440 --> 00:25:39,450
representative page to track for pages

00:25:37,080 --> 00:25:41,760
to track over time between your business

00:25:39,450 --> 00:25:43,770
and performance metrics with that in

00:25:41,760 --> 00:25:46,530
place you can then reasonably evaluate

00:25:43,770 --> 00:25:48,560
the correlations over time and this will

00:25:46,530 --> 00:25:51,030
eventually allow you to do things like

00:25:48,560 --> 00:25:54,330
estimate the impact of a new feature on

00:25:51,030 --> 00:25:56,010
revenue prior to deployment and quote

00:25:54,330 --> 00:25:58,580
the cost and future implementation

00:25:56,010 --> 00:26:01,580
during design itself which is valuable

00:25:58,580 --> 00:26:01,580
okay

00:26:02,360 --> 00:26:07,640
that all third parties on your site are

00:26:04,309 --> 00:26:09,919
causing a lot of pain so we need to

00:26:07,640 --> 00:26:13,159
start there's two really nice tools that

00:26:09,919 --> 00:26:14,659
are all call out here request map I can

00:26:13,159 --> 00:26:16,370
give you is really great visualization

00:26:14,659 --> 00:26:18,080
of the third prize I engage their

00:26:16,370 --> 00:26:22,429
network costs and their dependencies

00:26:18,080 --> 00:26:26,000
with this nice fancy graph it actually

00:26:22,429 --> 00:26:29,659
just takes you taste a web page web page

00:26:26,000 --> 00:26:31,730
test URL for what to rest map they look

00:26:29,659 --> 00:26:34,549
at in detail around establishment it's

00:26:31,730 --> 00:26:37,130
like super great and if you're

00:26:34,549 --> 00:26:38,510
interested in the web scale impact of

00:26:37,130 --> 00:26:40,669
their party its check out third-party

00:26:38,510 --> 00:26:43,760
web so this was actually built one of

00:26:40,669 --> 00:26:46,850
the four labs engineers chemicals it

00:26:43,760 --> 00:26:48,620
sometimes is the runtime cost of third

00:26:46,850 --> 00:26:49,549
parties across the web so it's really

00:26:48,620 --> 00:26:52,899
helpful for comparing different

00:26:49,549 --> 00:26:52,899
competitors like say for instance

00:26:55,090 --> 00:27:03,139
companies that create that thing you can

00:26:58,700 --> 00:27:12,110
compare what their main thread' impact

00:27:03,139 --> 00:27:14,539
is so they can pick the other people

00:27:12,110 --> 00:27:18,440
thing is all open source even the

00:27:14,539 --> 00:27:20,600
mapping of domain name to entity and

00:27:18,440 --> 00:27:22,460
company as open source and so a few

00:27:20,600 --> 00:27:25,669
projects where you really just want to

00:27:22,460 --> 00:27:30,630
be able to make that broker connect

00:27:25,669 --> 00:27:35,660
domain names to just China

00:27:30,630 --> 00:27:38,160
and it's pretty cool ultimately saw me

00:27:35,660 --> 00:27:40,820
working and improving your credit

00:27:38,160 --> 00:27:43,620
situation requires working at that team

00:27:40,820 --> 00:27:45,240
so in its case you what kind of bring

00:27:43,620 --> 00:27:47,580
together representatives from the press

00:27:45,240 --> 00:27:52,200
the company you know folks from

00:27:47,580 --> 00:27:55,830
marketing it and a new tax the page that

00:27:52,200 --> 00:27:58,440
revenue and the best conversion or

00:27:55,830 --> 00:28:00,690
understand conversion but it actually

00:27:58,440 --> 00:28:02,909
negatively impacts conversion but bring

00:28:00,690 --> 00:28:05,760
them together establish the shared goal

00:28:02,909 --> 00:28:06,960
we want faster web pages from that point

00:28:05,760 --> 00:28:08,820
you can then review all the third

00:28:06,960 --> 00:28:11,429
product that's together understand the

00:28:08,820 --> 00:28:13,820
impact determine what's required it's a

00:28:11,429 --> 00:28:17,970
great article about this

00:28:13,820 --> 00:28:22,620
Gareth club that how they did this until

00:28:17,970 --> 00:28:25,679
the telegraph action thirteen your site

00:28:22,620 --> 00:28:27,210
is not like other sites you may want to

00:28:25,679 --> 00:28:31,169
define for success in a way that's

00:28:27,210 --> 00:28:35,240
custom to you and that's cool too so for

00:28:31,169 --> 00:28:38,130
instance our cat clicking site

00:28:35,240 --> 00:28:41,520
everything art so what's what success

00:28:38,130 --> 00:28:43,530
there well we want the picture of a cat

00:28:41,520 --> 00:28:45,360
just right in front of user as fast as

00:28:43,530 --> 00:28:48,710
we can so we can create a custom metric

00:28:45,360 --> 00:28:51,000
for that when you use element time so

00:28:48,710 --> 00:28:54,059
all the time I'm actually just shipped

00:28:51,000 --> 00:28:59,820
in chrome 77 to do is you have that

00:28:54,059 --> 00:29:03,490
attribute into your HTML image and then

00:28:59,820 --> 00:29:07,510
fold observer the important one

00:29:03,490 --> 00:29:09,580
in entertainment you will and entries

00:29:07,510 --> 00:29:13,000
for anything that you have to add in

00:29:09,580 --> 00:29:16,480
your HTML and it represents when that

00:29:13,000 --> 00:29:19,090
thing was painted so yeah so that's our

00:29:16,480 --> 00:29:25,120
time to first cap I don't think so this

00:29:19,090 --> 00:29:27,399
yeah one time and our time to end a

00:29:25,120 --> 00:29:30,370
presentation is getting getting close so

00:29:27,399 --> 00:29:32,140
I'm gonna move past your wanting to

00:29:30,370 --> 00:29:33,220
measure your custom kpi's but you don't

00:29:32,140 --> 00:29:34,840
want to build your own infrastructure

00:29:33,220 --> 00:29:38,740
that's where the lighthouse plug-ins

00:29:34,840 --> 00:29:40,510
come in and edit for a lighthouse plugin

00:29:38,740 --> 00:29:41,710
isn't node module and it implements a

00:29:40,510 --> 00:29:43,750
set of checks that will be run by

00:29:41,710 --> 00:29:46,600
lighthouse and added to the report as a

00:29:43,750 --> 00:29:48,220
new core category so ultimately it's in

00:29:46,600 --> 00:29:50,440
relationship to set packs as a

00:29:48,220 --> 00:29:52,419
complementary feature static packs

00:29:50,440 --> 00:29:54,789
you're just mapping strings and

00:29:52,419 --> 00:29:56,470
guidelines to existing lighthouse audits

00:29:54,789 --> 00:29:59,830
with the plugins you're creating new

00:29:56,470 --> 00:30:04,799
sets of audits on your own yeah it took

00:29:59,830 --> 00:30:04,799
the recipe guidance appearance in this

00:30:05,549 --> 00:30:16,000
new audits off of anything based off of

00:30:09,309 --> 00:30:19,000
the data I recall all right so see I if

00:30:16,000 --> 00:30:22,390
I the last frontier here you want to

00:30:19,000 --> 00:30:24,820
know for each new poor request if if

00:30:22,390 --> 00:30:26,649
improves my performance if my entity is

00:30:24,820 --> 00:30:28,570
slower and faster and you want to know

00:30:26,649 --> 00:30:31,779
that yeah in development before you were

00:30:28,570 --> 00:30:35,500
disappointed so understand especially in

00:30:31,779 --> 00:30:37,000
a CI that scenario is important but it's

00:30:35,500 --> 00:30:39,429
been really hard

00:30:37,000 --> 00:30:42,460
to have to be able to ask but a lot of

00:30:39,429 --> 00:30:46,530
its artists but it's the most effective

00:30:42,460 --> 00:30:48,820
ways to defend against regressions so

00:30:46,530 --> 00:30:51,640
I'm going to skip away this is a great

00:30:48,820 --> 00:30:53,500
story about how the Wikipedia defconn

00:30:51,640 --> 00:30:55,409
actually was using field data and

00:30:53,500 --> 00:30:58,240
therefore when setup was in sight speed

00:30:55,409 --> 00:31:01,570
to basically understand what's happening

00:30:58,240 --> 00:31:03,940
to their first first first kind of pain

00:31:01,570 --> 00:31:07,630
metrics and actually they were able to

00:31:03,940 --> 00:31:13,539
identify a change in the implementation

00:31:07,630 --> 00:31:15,130
of SCP in chrome we switched the lab

00:31:13,539 --> 00:31:16,450
browser and the drops and then we

00:31:15,130 --> 00:31:18,240
switched it back and came back up so

00:31:16,450 --> 00:31:24,820
it's definitely the browser it's not us

00:31:18,240 --> 00:31:29,200
and it's led to a nice conversation but

00:31:24,820 --> 00:31:32,260
it's how this kind of insight into your

00:31:29,200 --> 00:31:34,480
thoughts is a really key thing there's

00:31:32,260 --> 00:31:50,710
been a few things that we've been

00:31:34,480 --> 00:31:58,059
working on here so yeah okay I wanna run

00:31:50,710 --> 00:32:02,760
lighthouse and see okay what changed if

00:31:58,059 --> 00:32:07,299
it's early and we see more about this

00:32:02,760 --> 00:32:16,090
about November yeah it's good bad okay

00:32:07,299 --> 00:32:18,130
that's it so yeah good okay so these are

00:32:16,090 --> 00:32:20,559
the 15 steps that we've gone over that

00:32:18,130 --> 00:32:23,680
encompass the blueprint but we can do

00:32:20,559 --> 00:32:25,090
one better and actually look at

00:32:23,680 --> 00:32:26,890
tools that are associated with each step

00:32:25,090 --> 00:32:30,640
so we know it could be difficult to know

00:32:26,890 --> 00:32:31,840
when to use what and where and as Paul

00:32:30,640 --> 00:32:34,180
said earlier everything what kind of

00:32:31,840 --> 00:32:35,770
both on the same foundation but we hope

00:32:34,180 --> 00:32:37,930
that this toolbox can be seen as kind of

00:32:35,770 --> 00:32:40,690
everything that you need or this

00:32:37,930 --> 00:32:42,040
blueprint here are the links we shared

00:32:40,690 --> 00:32:47,860
just for ease of reference the slides

00:32:42,040 --> 00:32:49,630
also be made available and the last

00:32:47,860 --> 00:32:52,270
slide is just our call to action which

00:32:49,630 --> 00:32:54,010
is we do want you know this blueprint to

00:32:52,270 --> 00:32:56,620
be implemented but do you know we are

00:32:54,010 --> 00:32:59,490
available with resources and right so we

00:32:56,620 --> 00:32:59,490
want to be there

00:33:03,550 --> 00:33:07,440

YouTube URL: https://www.youtube.com/watch?v=BjfYb8YiK1M


