Title: View Source 2018 - Bryan Hughes - Johnny Five and the Rise of JavaScript Hardware
Publication date: 2018-10-31
Playlist: View Source 2018 - London
Description: 
	Johnny-Five was created 6 years ago and in the process kickstarted the JavaScript robotics movement and JavaScript based IoT. J5, as we call it, has been around ever since the rise of modern IoT, and the project has a lot to teach us. 

JavaScript and J5 brings a lot to the table for hardware. The asynchronous nature of JavaScript fits perfectly with real-world sensors, and the digital UI origins of JavaScript dovetail nicely with the physical UI of hardware. Most importantly, we focused the project on non-experts and we cultivated a welcoming, inclusive community. 

Knowing these lessons and more are critical going forward if we hope to create open and ethical IoT ecosystem.
Captions: 
	00:00:00,230 --> 00:00:05,940
let's say my name is Bryan Hughes I'm a

00:00:03,449 --> 00:00:07,740
cloud developer advocate at Microsoft

00:00:05,940 --> 00:00:09,719
they say the same thing as a Technical

00:00:07,740 --> 00:00:11,969
Evangelist I switch roles very recently

00:00:09,719 --> 00:00:14,490
didn't quite get that updated you can

00:00:11,969 --> 00:00:16,680
find me everywhere online at neveress on

00:00:14,490 --> 00:00:18,570
Twitter github places like that and I've

00:00:16,680 --> 00:00:20,279
started doing something with my talks I

00:00:18,570 --> 00:00:21,840
have a landing page with my talk it's

00:00:20,279 --> 00:00:23,789
got slides links to other useful

00:00:21,840 --> 00:00:25,710
information and things like that which

00:00:23,789 --> 00:00:27,420
is that this URL here and this URL will

00:00:25,710 --> 00:00:28,949
also be on of the other side so don't

00:00:27,420 --> 00:00:31,439
worry about writing that down quickly so

00:00:28,949 --> 00:00:33,450
today I'm gonna talk about a Johnny

00:00:31,439 --> 00:00:34,829
fight which is an open-source nodejs

00:00:33,450 --> 00:00:36,809
robotics platform that i've been a

00:00:34,829 --> 00:00:39,180
contributor on for about five four years

00:00:36,809 --> 00:00:41,399
now and we're gonna talk about the rise

00:00:39,180 --> 00:00:42,090
of javascript hardware and also the rise

00:00:41,399 --> 00:00:44,100
of IOT

00:00:42,090 --> 00:00:46,350
to things that kind of coincide a little

00:00:44,100 --> 00:00:48,180
bit first when we talk about like

00:00:46,350 --> 00:00:49,440
robotics working with hardware things

00:00:48,180 --> 00:00:52,559
like that a question that a lot of

00:00:49,440 --> 00:00:54,510
people tend to ask is why JavaScript now

00:00:52,559 --> 00:00:55,680
this is often a derisive question you

00:00:54,510 --> 00:00:56,969
know I think we're all kind of used to

00:00:55,680 --> 00:00:59,190
everyone saying like why would anyone

00:00:56,969 --> 00:01:00,840
use JavaScript but I think it's actually

00:00:59,190 --> 00:01:02,100
a little legitimate question yeah we

00:01:00,840 --> 00:01:04,680
should always really kind of question

00:01:02,100 --> 00:01:06,210
our technical choices and I think there

00:01:04,680 --> 00:01:08,790
actually are some really legitimate

00:01:06,210 --> 00:01:11,310
reasons though and the first of which is

00:01:08,790 --> 00:01:13,229
that hardware is inherently asynchronous

00:01:11,310 --> 00:01:15,299
so if we think about hardware we're

00:01:13,229 --> 00:01:17,490
talking about motor sensors buttons

00:01:15,299 --> 00:01:18,990
things like this this is kind of almost

00:01:17,490 --> 00:01:23,009
like the original UI

00:01:18,990 --> 00:01:24,479
it may not be a 2d matrix of lights like

00:01:23,009 --> 00:01:26,549
we kind of typically think of with the

00:01:24,479 --> 00:01:29,460
web but it is absolutely still a UI and

00:01:26,549 --> 00:01:31,470
so the time between actions you know so

00:01:29,460 --> 00:01:34,170
impressing a button or a sensor reading

00:01:31,470 --> 00:01:36,840
data it can be you know seconds minutes

00:01:34,170 --> 00:01:38,700
hours days sometimes even weeks or

00:01:36,840 --> 00:01:40,439
months and having to write software

00:01:38,700 --> 00:01:42,509
that's constantly polling and checking

00:01:40,439 --> 00:01:44,820
just doesn't work we you want a really

00:01:42,509 --> 00:01:46,290
good asynchronous model to talk to

00:01:44,820 --> 00:01:47,670
hardware and this is something that

00:01:46,290 --> 00:01:49,409
JavaScript has been doing pretty much

00:01:47,670 --> 00:01:51,869
different its inception javascript does

00:01:49,409 --> 00:01:53,310
asynchronous really really well and so

00:01:51,869 --> 00:01:57,149
this makes it a really natural fit in

00:01:53,310 --> 00:01:58,950
this regard also there is a low barrier

00:01:57,149 --> 00:02:00,659
to entry with JavaScript you know the

00:01:58,950 --> 00:02:02,490
language itself is pretty easy to pick

00:02:00,659 --> 00:02:04,799
up it's not the only easy to pick up

00:02:02,490 --> 00:02:06,270
language of course but it's you know

00:02:04,799 --> 00:02:08,190
definitely out there I think another

00:02:06,270 --> 00:02:09,750
thing that makes javascript have a

00:02:08,190 --> 00:02:11,970
really low barrier to entry isn't

00:02:09,750 --> 00:02:14,100
necessarily the language but the web

00:02:11,970 --> 00:02:16,770
behind it you know javascript in the

00:02:14,100 --> 00:02:19,080
are married together and I think in a

00:02:16,770 --> 00:02:21,750
really good way you know the web is as a

00:02:19,080 --> 00:02:23,100
platform is pretty easy to get started

00:02:21,750 --> 00:02:25,920
with you know it's a lot easier to get

00:02:23,100 --> 00:02:28,140
started writing you HTML and java

00:02:25,920 --> 00:02:30,570
scripts then it is using you know

00:02:28,140 --> 00:02:32,370
c-sharp and WPF or some of the other

00:02:30,570 --> 00:02:34,140
frameworks out there and we tend to see

00:02:32,370 --> 00:02:36,510
this across the ecosystem like even if

00:02:34,140 --> 00:02:38,400
you're not necessarily doing web itself

00:02:36,510 --> 00:02:40,350
there's a bit of an expectation with

00:02:38,400 --> 00:02:43,650
everything in JavaScript that's going to

00:02:40,350 --> 00:02:45,000
be about as easy to use as Lev and so we

00:02:43,650 --> 00:02:46,530
can kind of bring this barrier to entry

00:02:45,000 --> 00:02:49,170
in both the language and just the

00:02:46,530 --> 00:02:50,640
expectations and community to IOT as

00:02:49,170 --> 00:02:52,830
well and that makes it just a lot easier

00:02:50,640 --> 00:02:54,750
to use and lower lower barriers to entry

00:02:52,830 --> 00:02:59,220
means more developers creating really

00:02:54,750 --> 00:03:00,570
cool things and finally in JavaScript I

00:02:59,220 --> 00:03:02,400
think javascript is the most diverse

00:03:00,570 --> 00:03:04,560
community out there of all the various

00:03:02,400 --> 00:03:06,360
programming languages and when we have a

00:03:04,560 --> 00:03:07,590
more de Bourgh a diverse community we

00:03:06,360 --> 00:03:08,880
get a lot more innovation you know

00:03:07,590 --> 00:03:10,380
they've been numerous studies that have

00:03:08,880 --> 00:03:12,150
proven this over the years hopefully you

00:03:10,380 --> 00:03:13,380
don't need to tell all of you that but

00:03:12,150 --> 00:03:15,630
this is something that we now know is

00:03:13,380 --> 00:03:17,490
just intrinsically true you know the

00:03:15,630 --> 00:03:19,080
research has proven this out and by

00:03:17,490 --> 00:03:21,840
bringing the more diverse community of

00:03:19,080 --> 00:03:23,520
JavaScript to IOT we can actually start

00:03:21,840 --> 00:03:28,440
creating more interesting products that

00:03:23,520 --> 00:03:30,030
cater to more markets so what is 95 you

00:03:28,440 --> 00:03:31,920
know so johnny-five is an open source

00:03:30,030 --> 00:03:34,470
library for nodejs it allows us to talk

00:03:31,920 --> 00:03:37,650
to hardware that's kind of the what of

00:03:34,470 --> 00:03:40,050
it and that doesn't really get the full

00:03:37,650 --> 00:03:42,000
feel of johnny-five so the way I like to

00:03:40,050 --> 00:03:44,460
describe it is that johnny-five

00:03:42,000 --> 00:03:48,330
is like the jquery of hardware in a good

00:03:44,460 --> 00:03:50,310
way I mean we're all a bit derisive of

00:03:48,330 --> 00:03:51,750
jQuery these days it's not something we

00:03:50,310 --> 00:03:53,040
really use or need anymore

00:03:51,750 --> 00:03:54,480
but you know jQuery is an older project

00:03:53,040 --> 00:03:57,060
and something I think we tend to forget

00:03:54,480 --> 00:03:59,400
is that when a jQuery came around back

00:03:57,060 --> 00:04:00,510
in the 2000s you know the web world was

00:03:59,400 --> 00:04:03,090
pretty different

00:04:00,510 --> 00:04:05,940
you know we had Firefox Internet

00:04:03,090 --> 00:04:07,020
Explorer kind of duking it out but they

00:04:05,940 --> 00:04:08,280
were kind of different of course there's

00:04:07,020 --> 00:04:09,510
also this whole new browser called

00:04:08,280 --> 00:04:11,610
chrome that was kind of coming around

00:04:09,510 --> 00:04:13,380
and if you wanted to write your web app

00:04:11,610 --> 00:04:15,630
that you know both looked and behaved

00:04:13,380 --> 00:04:17,220
the same across all these platforms but

00:04:15,630 --> 00:04:18,870
took quite a bit of work you know we

00:04:17,220 --> 00:04:20,460
tended to have to write a lot of

00:04:18,870 --> 00:04:22,440
different code paths for each of the

00:04:20,460 --> 00:04:25,560
different browsers and that was

00:04:22,440 --> 00:04:26,910
difficult and so jQuery came along in

00:04:25,560 --> 00:04:28,020
addition to providing some higher-level

00:04:26,910 --> 00:04:30,539
API so

00:04:28,020 --> 00:04:32,699
easier to use it also papered over all

00:04:30,539 --> 00:04:33,720
of these differences and it made us so

00:04:32,699 --> 00:04:35,669
known that we just have the right to

00:04:33,720 --> 00:04:37,440
jQuery and jQuery took care of all those

00:04:35,669 --> 00:04:39,210
details of making sure it looked and

00:04:37,440 --> 00:04:40,860
worked at the same across browsers you

00:04:39,210 --> 00:04:42,449
know a pretty good extent it's not

00:04:40,860 --> 00:04:45,240
perfect but it made it significantly

00:04:42,449 --> 00:04:47,009
easier and this is what johnny-five does

00:04:45,240 --> 00:04:48,659
there are a lot of different

00:04:47,009 --> 00:04:50,610
microcontrollers out there we can use

00:04:48,659 --> 00:04:53,370
you know we can talk about reser a PI's

00:04:50,610 --> 00:04:55,889
or arduino z' or MX chips or esp8266

00:04:53,370 --> 00:04:57,509
--is and I mean I could keep listing

00:04:55,889 --> 00:04:59,220
this all day and make an entire talk of

00:04:57,509 --> 00:05:00,930
that yeah boring talk so I'm not going

00:04:59,220 --> 00:05:03,630
to do that but there's so many different

00:05:00,930 --> 00:05:05,909
devices and they all have like different

00:05:03,630 --> 00:05:08,190
api's and styles of working with them

00:05:05,909 --> 00:05:09,810
and how we code for them and they're not

00:05:08,190 --> 00:05:12,090
the same there's no uniformity across

00:05:09,810 --> 00:05:14,250
them and so what johnny-five does is it

00:05:12,090 --> 00:05:16,050
provides a uniform interface to talking

00:05:14,250 --> 00:05:17,849
to a whole bunch of different types of

00:05:16,050 --> 00:05:19,650
hardware so that now we have this

00:05:17,849 --> 00:05:21,389
uniform interface that's portable across

00:05:19,650 --> 00:05:22,590
platforms I mean if we don't want

00:05:21,389 --> 00:05:24,569
support multiple controllers you know we

00:05:22,590 --> 00:05:28,229
only have to learn the API once between

00:05:24,569 --> 00:05:30,150
one project to another so let's look at

00:05:28,229 --> 00:05:31,889
some code of course when we're talking

00:05:30,150 --> 00:05:34,020
about ain't learning anything new we

00:05:31,889 --> 00:05:36,150
want to talk about hello world now think

00:05:34,020 --> 00:05:38,009
about hardware is we don't have a screen

00:05:36,150 --> 00:05:40,199
so we can't print you know a string of

00:05:38,009 --> 00:05:41,550
text so we can't do an actual hello

00:05:40,199 --> 00:05:42,870
world you know there's no screens

00:05:41,550 --> 00:05:45,599
there's no buffers or anything like that

00:05:42,870 --> 00:05:47,729
so instead what we do is we get an LED

00:05:45,599 --> 00:05:49,319
you know just a single little light and

00:05:47,729 --> 00:05:51,180
we get it to blink on and off this is

00:05:49,319 --> 00:05:52,110
the most simple hardware we can do and

00:05:51,180 --> 00:05:54,509
in johnny-five

00:05:52,110 --> 00:05:56,969
this right here is the code necessary to

00:05:54,509 --> 00:05:58,860
do it so on this first line we're going

00:05:56,969 --> 00:06:00,240
to import johnny-five into our space you

00:05:58,860 --> 00:06:01,830
know if you're using the new ES module

00:06:00,240 --> 00:06:03,360
syntax you know you can do the same

00:06:01,830 --> 00:06:05,340
thing just with the actual import

00:06:03,360 --> 00:06:08,250
keyword and I'm going to create a new

00:06:05,340 --> 00:06:11,460
board instance and so in this case this

00:06:08,250 --> 00:06:12,539
board object represents the actual

00:06:11,460 --> 00:06:13,830
device that we're running on it

00:06:12,539 --> 00:06:15,719
represents you know the Raspberry Pi

00:06:13,830 --> 00:06:18,150
hardware or the Arduino hardware or

00:06:15,719 --> 00:06:20,580
whatever device we're on now whenever we

00:06:18,150 --> 00:06:21,840
make this connection it actually takes a

00:06:20,580 --> 00:06:23,099
little bit of initialization work

00:06:21,840 --> 00:06:25,740
especially depending on how we're using

00:06:23,099 --> 00:06:28,199
it my cool thing about johnny-five that

00:06:25,740 --> 00:06:30,479
it's always had is the ability to talk

00:06:28,199 --> 00:06:32,550
to work with a microcontroller remotely

00:06:30,479 --> 00:06:33,509
and we have this concept now of the edge

00:06:32,550 --> 00:06:35,310
if you've heard about like edge

00:06:33,509 --> 00:06:36,659
computing you know this big new buzzword

00:06:35,310 --> 00:06:40,020
Johnny Phi has been doing that for like

00:06:36,659 --> 00:06:41,220
six years by the way and so sometimes it

00:06:40,020 --> 00:06:43,320
has to establish this can

00:06:41,220 --> 00:06:45,750
it takes a while so we have to wait for

00:06:43,320 --> 00:06:48,210
the board object to emit this ready

00:06:45,750 --> 00:06:50,280
event that we see on line three and once

00:06:48,210 --> 00:06:51,840
this ready event has been emitted then

00:06:50,280 --> 00:06:53,490
that means we are ready to start talking

00:06:51,840 --> 00:06:55,560
to Hardware so what we want to get an

00:06:53,490 --> 00:06:57,240
LED to blink so the first thing we do is

00:06:55,560 --> 00:07:00,060
we're gonna create an LED instance that

00:06:57,240 --> 00:07:01,650
we see on line four and so we're going

00:07:00,060 --> 00:07:04,320
to call this constructor or passing a

00:07:01,650 --> 00:07:06,960
single argument as the number five and

00:07:04,320 --> 00:07:08,910
what this represents is the pen that the

00:07:06,960 --> 00:07:10,200
LED is connected to if you've ever

00:07:08,910 --> 00:07:11,760
looked at a microcontroller you'll

00:07:10,200 --> 00:07:13,470
probably notice there's a whole bunch of

00:07:11,760 --> 00:07:15,660
pins these little metal things sticking

00:07:13,470 --> 00:07:17,760
up and we can connect Hardware to just

00:07:15,660 --> 00:07:19,350
about any of them so we can connect a

00:07:17,760 --> 00:07:21,660
bunch of different LEDs all at the same

00:07:19,350 --> 00:07:23,670
time if we wanted to so we just passing

00:07:21,660 --> 00:07:25,650
this pin number to specify which one

00:07:23,670 --> 00:07:27,060
we're talking about and then once we

00:07:25,650 --> 00:07:29,550
have that instance we can then call

00:07:27,060 --> 00:07:31,620
methods on it such as in this case blink

00:07:29,550 --> 00:07:34,050
we call the blink method that's going to

00:07:31,620 --> 00:07:36,300
turn the LED on and off about ten times

00:07:34,050 --> 00:07:37,680
a second we can control rate its course

00:07:36,300 --> 00:07:40,350
a bunch of other methods and things like

00:07:37,680 --> 00:07:42,510
that but with these six lines of code we

00:07:40,350 --> 00:07:44,880
can get an LED to blink which is really

00:07:42,510 --> 00:07:47,040
cool and the first time I saw this I

00:07:44,880 --> 00:07:49,560
first saw this code in about 2013 I was

00:07:47,040 --> 00:07:51,300
kind of blown away because I have a

00:07:49,560 --> 00:07:53,550
background in electrical engineering and

00:07:51,300 --> 00:07:56,940
I've been doing Hardware since about

00:07:53,550 --> 00:07:58,800
2002 or so before the Arduino even and

00:07:56,940 --> 00:08:00,630
so yeah I did this exact same hardware

00:07:58,800 --> 00:08:03,360
setup but before any of this stuff

00:08:00,630 --> 00:08:05,100
existed and it was not a fifteen-minute

00:08:03,360 --> 00:08:07,590
project in six lines of code like we see

00:08:05,100 --> 00:08:09,240
here it took me a couple of days I had

00:08:07,590 --> 00:08:11,970
to read through data sheets I had to do

00:08:09,240 --> 00:08:13,830
all this low level math and assembly and

00:08:11,970 --> 00:08:15,540
so seeing that you know we could do it

00:08:13,830 --> 00:08:17,580
this way and I remember back to spending

00:08:15,540 --> 00:08:19,650
days doing this before when I was

00:08:17,580 --> 00:08:21,990
younger I kind of cringed a little bit I

00:08:19,650 --> 00:08:24,090
was like oh my gosh where was this when

00:08:21,990 --> 00:08:25,530
I was in college so like this is

00:08:24,090 --> 00:08:29,640
actually pretty dramatic even if it

00:08:25,530 --> 00:08:31,080
looks you know simple but of course this

00:08:29,640 --> 00:08:33,719
is just hello world and this of course

00:08:31,080 --> 00:08:35,640
is an output so what about inputs well

00:08:33,719 --> 00:08:37,169
the most simple input that we have in

00:08:35,640 --> 00:08:38,669
hardware is a button you know we can

00:08:37,169 --> 00:08:40,440
think of like a button on a keyboard for

00:08:38,669 --> 00:08:42,990
example something we pressed and we let

00:08:40,440 --> 00:08:44,219
go and it releases so in this case this

00:08:42,990 --> 00:08:46,230
is where we started up talking about

00:08:44,219 --> 00:08:48,030
asynchronous code so you have the same

00:08:46,230 --> 00:08:49,470
initialization we had before those same

00:08:48,030 --> 00:08:51,300
three lines and we will see those same

00:08:49,470 --> 00:08:53,120
three lines in every piece of code that

00:08:51,300 --> 00:08:54,499
we're gonna show today

00:08:53,120 --> 00:08:56,149
and then the first thing we do once the

00:08:54,499 --> 00:08:58,819
board is ready is we create a button

00:08:56,149 --> 00:09:00,199
instance and this looks very similar to

00:08:58,819 --> 00:09:01,970
the led constructor

00:09:00,199 --> 00:09:03,920
you know we're passing in a number which

00:09:01,970 --> 00:09:05,870
again represents the pen that the button

00:09:03,920 --> 00:09:07,129
is connected to you know if you wanted

00:09:05,870 --> 00:09:08,660
to you could actually use an Arduino

00:09:07,129 --> 00:09:10,279
connect a whole bunch of buttons write a

00:09:08,660 --> 00:09:12,110
little bit code that talks MIDI and make

00:09:10,279 --> 00:09:13,670
your own MIDI controller if you felt

00:09:12,110 --> 00:09:15,499
like it

00:09:13,670 --> 00:09:17,149
and so we specify the width on and then

00:09:15,499 --> 00:09:19,249
we just listen for events you know the

00:09:17,149 --> 00:09:21,680
web kind of model in this example we're

00:09:19,249 --> 00:09:23,569
listening to two events one is hold

00:09:21,680 --> 00:09:25,999
which we can think of like long press on

00:09:23,569 --> 00:09:28,910
Android and the other is release and

00:09:25,999 --> 00:09:31,309
these were just like the html5 Dom or at

00:09:28,910 --> 00:09:32,779
with HTML Dom button events and that was

00:09:31,309 --> 00:09:35,269
kind of designed intentionally so with

00:09:32,779 --> 00:09:37,220
this code we can now respond to a user

00:09:35,269 --> 00:09:40,069
pressing like a physical button in our

00:09:37,220 --> 00:09:41,749
device if we pair the LED and the button

00:09:40,069 --> 00:09:43,879
together we can actually create basic

00:09:41,749 --> 00:09:46,639
hardware a bit like basic robots that

00:09:43,879 --> 00:09:48,350
can actually do real-world things but we

00:09:46,639 --> 00:09:50,389
want to do usually more complex things

00:09:48,350 --> 00:09:52,490
so oftentimes with IOT especially where

00:09:50,389 --> 00:09:53,930
IOT is going these days we have it

00:09:52,490 --> 00:09:55,819
because we want to know something about

00:09:53,930 --> 00:09:58,129
the world you want to use it to you know

00:09:55,819 --> 00:10:00,470
automate industrial systems or you know

00:09:58,129 --> 00:10:01,699
all sorts of other things and so with

00:10:00,470 --> 00:10:05,059
this this is where we start getting into

00:10:01,699 --> 00:10:06,410
sensors and so in this example we're

00:10:05,059 --> 00:10:09,290
going to be reading data from a

00:10:06,410 --> 00:10:10,220
temperature sensor and now there's a lot

00:10:09,290 --> 00:10:11,720
of different types of temperature

00:10:10,220 --> 00:10:13,610
sensors out there you know this is what

00:10:11,720 --> 00:10:15,800
we're getting a little more complex this

00:10:13,610 --> 00:10:17,569
is no longer just on and off but there's

00:10:15,800 --> 00:10:19,970
actual data associated with it and there

00:10:17,569 --> 00:10:21,410
can even be configuration and so there's

00:10:19,970 --> 00:10:22,999
a bunch of different sensors that do

00:10:21,410 --> 00:10:25,040
that they use they all have different

00:10:22,999 --> 00:10:26,319
data formats associated with them and

00:10:25,040 --> 00:10:28,790
sometimes they even have different

00:10:26,319 --> 00:10:31,069
communication mechanisms too like it's

00:10:28,790 --> 00:10:32,689
kind of complex whistle johnny-five

00:10:31,069 --> 00:10:35,720
again we're trying to take this sort of

00:10:32,689 --> 00:10:37,339
web idea forward you initialize like we

00:10:35,720 --> 00:10:39,499
have before we created a new thermometer

00:10:37,339 --> 00:10:41,360
instance and then we have to find where

00:10:39,499 --> 00:10:43,189
we see controller we're passing in a

00:10:41,360 --> 00:10:45,410
value that says okay I'm creating a

00:10:43,189 --> 00:10:47,629
temperature sensor and it's this

00:10:45,410 --> 00:10:50,209
specific type in this case what's called

00:10:47,629 --> 00:10:51,649
an MC p9 808 that's just a model number

00:10:50,209 --> 00:10:53,269
you can look it up if you really care to

00:10:51,649 --> 00:10:55,009
know details and then johnny-five

00:10:53,269 --> 00:10:57,050
handles the rest johnny-five says oh I

00:10:55,009 --> 00:10:58,639
know that type of sensor it uses this

00:10:57,050 --> 00:11:01,309
kind of communication protocol it has

00:10:58,639 --> 00:11:03,470
these data formats now interpret it for

00:11:01,309 --> 00:11:05,540
you and normalize it so then we just

00:11:03,470 --> 00:11:06,590
have to listen to these data events

00:11:05,540 --> 00:11:08,570
which are emitted

00:11:06,590 --> 00:11:10,880
time the temperature changes and then

00:11:08,570 --> 00:11:12,140
aside to this data event we can then

00:11:10,880 --> 00:11:15,830
take a look at the temperature in

00:11:12,140 --> 00:11:17,240
Celsius Fahrenheit for Kelvin and so we

00:11:15,830 --> 00:11:18,950
can take this and we can pair it with

00:11:17,240 --> 00:11:20,030
you know buttons and LEDs like we saw

00:11:18,950 --> 00:11:22,820
before and now we're starting to create

00:11:20,030 --> 00:11:27,050
you know more complex IOT solutions but

00:11:22,820 --> 00:11:28,490
still with very minimal code like

00:11:27,050 --> 00:11:30,560
sensors are an input we also wanna look

00:11:28,490 --> 00:11:31,910
at more complex output so a lot of times

00:11:30,560 --> 00:11:33,320
we'll want to control motors you know

00:11:31,910 --> 00:11:35,990
again we especially see this in

00:11:33,320 --> 00:11:37,340
industrial applications and there's two

00:11:35,990 --> 00:11:39,380
ways to do that in johnny-five

00:11:37,340 --> 00:11:41,300
there is the motor singular class and

00:11:39,380 --> 00:11:44,660
then the motors plural class like we see

00:11:41,300 --> 00:11:46,550
here the motors plural class basically

00:11:44,660 --> 00:11:48,050
allows us to orchestrate multiple motors

00:11:46,550 --> 00:11:50,630
together it's tied to throw something a

00:11:48,050 --> 00:11:52,520
little fancier in this code example so

00:11:50,630 --> 00:11:54,140
what we have here is we are attaching

00:11:52,520 --> 00:11:55,580
three we're going to talk to three

00:11:54,140 --> 00:11:56,030
different motors and control them at

00:11:55,580 --> 00:11:58,970
once

00:11:56,030 --> 00:12:01,460
now motors are high power devices

00:11:58,970 --> 00:12:03,190
ultimately they take a lot of energy in

00:12:01,460 --> 00:12:05,390
order to cause them to turn

00:12:03,190 --> 00:12:06,320
microcontrollers by contests are very

00:12:05,390 --> 00:12:07,760
low-power

00:12:06,320 --> 00:12:09,920
you can't actually control a motor

00:12:07,760 --> 00:12:11,390
directly from a microcontroller they

00:12:09,920 --> 00:12:12,830
just don't talk to each other so you

00:12:11,390 --> 00:12:14,810
have to have some kind of interface

00:12:12,830 --> 00:12:16,010
circuitry in the middle and they make

00:12:14,810 --> 00:12:17,750
little controller boards so you just

00:12:16,010 --> 00:12:20,150
kind of drop it in and plug the wires

00:12:17,750 --> 00:12:21,530
into them but again like the temperature

00:12:20,150 --> 00:12:23,120
sensor there's a whole bunch of

00:12:21,530 --> 00:12:25,160
different types that talk in different

00:12:23,120 --> 00:12:28,460
ways and so johnny-five

00:12:25,160 --> 00:12:30,170
again normalizes those and so in this

00:12:28,460 --> 00:12:32,350
case we have three different types of

00:12:30,170 --> 00:12:35,150
motors connected in different places

00:12:32,350 --> 00:12:37,990
actually there are two and I realized I

00:12:35,150 --> 00:12:40,760
actually duplicated my code my apologies

00:12:37,990 --> 00:12:43,160
so we have two motors forget that third

00:12:40,760 --> 00:12:44,900
one and so we have our controller which

00:12:43,160 --> 00:12:46,970
is kind of more advanced we talked to it

00:12:44,900 --> 00:12:50,030
using some communication protocols that

00:12:46,970 --> 00:12:52,610
are established using what's called a PC

00:12:50,030 --> 00:12:53,960
a nine six eight five again it's a model

00:12:52,610 --> 00:12:56,510
number look it up if you care to know

00:12:53,960 --> 00:12:57,920
details and the other uses a more basic

00:12:56,510 --> 00:12:59,630
kind of controller where we use three

00:12:57,920 --> 00:13:02,420
different pens in the special

00:12:59,630 --> 00:13:03,760
configuration and this is all abstracted

00:13:02,420 --> 00:13:06,080
away and johnny-five

00:13:03,760 --> 00:13:07,520
again in college i had to write all the

00:13:06,080 --> 00:13:09,500
code to talk to those three pins

00:13:07,520 --> 00:13:11,450
manually and i had to know what they did

00:13:09,500 --> 00:13:13,460
where's what johnny-five all you have to

00:13:11,450 --> 00:13:15,950
know is like oh i connect a to a B to B

00:13:13,460 --> 00:13:17,720
C to C and then once that's done we can

00:13:15,950 --> 00:13:19,430
control these as a group we can call

00:13:17,720 --> 00:13:20,060
motor stop forward that will cause all

00:13:19,430 --> 00:13:21,980
of them

00:13:20,060 --> 00:13:24,410
to spin at once but then we can also

00:13:21,980 --> 00:13:25,070
dress motors individually and so that

00:13:24,410 --> 00:13:28,010
way we can kind of get some

00:13:25,070 --> 00:13:30,020
orchestration and that makes me think a

00:13:28,010 --> 00:13:32,510
lot of going back to jQuery and whenever

00:13:30,020 --> 00:13:36,140
we would do a query get like multiple

00:13:32,510 --> 00:13:37,550
Dom elements and then make changes to

00:13:36,140 --> 00:13:39,110
multiple Dom elements all at once you

00:13:37,550 --> 00:13:42,260
know jQuery had the ability to do batch

00:13:39,110 --> 00:13:43,790
operations and we see that here as well

00:13:42,260 --> 00:13:46,250
and by the way these comparisons to

00:13:43,790 --> 00:13:48,140
jQuery are not just a coincidence and

00:13:46,250 --> 00:13:49,940
the original author who first created

00:13:48,140 --> 00:13:51,950
Johnny fives guy named Rick Waldron and

00:13:49,940 --> 00:13:53,510
before he did Johnny Five he actually

00:13:51,950 --> 00:13:55,700
worked on jQuery one was a part of the

00:13:53,510 --> 00:13:56,990
jQuery foundation so that's kind of some

00:13:55,700 --> 00:13:58,780
of that lineage we see coming through

00:13:56,990 --> 00:14:01,280
and I think it worked out really well

00:13:58,780 --> 00:14:03,110
now this is still fairly basic

00:14:01,280 --> 00:14:04,790
coordination and sometimes we need to do

00:14:03,110 --> 00:14:06,770
more advanced coordination between

00:14:04,790 --> 00:14:08,180
multiple motors and so something at

00:14:06,770 --> 00:14:10,970
Johnny Five has that's actually pretty

00:14:08,180 --> 00:14:13,010
unique in the world of hardware is an

00:14:10,970 --> 00:14:15,230
animation class we have the ability to

00:14:13,010 --> 00:14:17,150
actually specify animations but these

00:14:15,230 --> 00:14:18,860
are for motors instead of Dom elements

00:14:17,150 --> 00:14:21,410
so in this case we're going to create

00:14:18,860 --> 00:14:24,620
three servos a servos of a special type

00:14:21,410 --> 00:14:26,510
of motor that instead of spinning at a

00:14:24,620 --> 00:14:28,880
certain speed you set it to a position

00:14:26,510 --> 00:14:30,890
you and it's radial so you set a

00:14:28,880 --> 00:14:33,590
position in degrees typically between 0

00:14:30,890 --> 00:14:36,080
and 180 degrees so if you think of like

00:14:33,590 --> 00:14:38,090
say a remote-control car for example a

00:14:36,080 --> 00:14:40,670
servo motor is what is used to adjust

00:14:38,090 --> 00:14:42,500
the steering on it so in this case we're

00:14:40,670 --> 00:14:44,510
going to use three servos this kid for

00:14:42,500 --> 00:14:46,610
example will be a complicated like

00:14:44,510 --> 00:14:48,230
assembly arm where you know we have an

00:14:46,610 --> 00:14:49,970
arm that moves around and when we do it

00:14:48,230 --> 00:14:53,690
we have to do this complex like

00:14:49,970 --> 00:14:55,580
association between multiple motors so

00:14:53,690 --> 00:14:58,340
we create our servo instances on these

00:14:55,580 --> 00:15:00,260
three pins and then we create an

00:14:58,340 --> 00:15:01,790
animation object that is tied to those

00:15:00,260 --> 00:15:04,040
servos and once they have this animation

00:15:01,790 --> 00:15:06,770
object we can start queuing in

00:15:04,040 --> 00:15:08,900
animations in animations in jaw and

00:15:06,770 --> 00:15:10,730
johnny-five are a keyframe based which

00:15:08,900 --> 00:15:12,620
is pretty similar to CSS keyframe

00:15:10,730 --> 00:15:13,940
animations if you've seen those if

00:15:12,620 --> 00:15:16,340
you're not familiar with keyframes it's

00:15:13,940 --> 00:15:18,260
concept that originally came from 2d

00:15:16,340 --> 00:15:19,820
movie animations I believe it was first

00:15:18,260 --> 00:15:22,160
created by Walt Disney in the early days

00:15:19,820 --> 00:15:24,080
of the studio and the basic concept is

00:15:22,160 --> 00:15:26,600
you say I want to have this complex

00:15:24,080 --> 00:15:27,920
scene that is changing over time but I

00:15:26,600 --> 00:15:29,270
don't want to define all of them I'm

00:15:27,920 --> 00:15:31,040
just gonna define like what are the key

00:15:29,270 --> 00:15:33,350
points to it and then let someone else

00:15:31,040 --> 00:15:34,240
go in and fill in all the details the

00:15:33,350 --> 00:15:35,830
days of Walt Disney

00:15:34,240 --> 00:15:37,330
this is what they would use what's

00:15:35,830 --> 00:15:38,980
called Inbetweeners these are like the

00:15:37,330 --> 00:15:40,480
low paid interns that would go in and

00:15:38,980 --> 00:15:41,890
draw the frames and the high paid

00:15:40,480 --> 00:15:44,230
animators would create just the key

00:15:41,890 --> 00:15:46,060
frames now in the software role we can

00:15:44,230 --> 00:15:48,700
actually do that interpolation between

00:15:46,060 --> 00:15:49,959
the frames and software and so with

00:15:48,700 --> 00:15:51,670
johnny-five what we're doing in this

00:15:49,959 --> 00:15:54,370
example is we say we have an animation

00:15:51,670 --> 00:15:56,320
that's gonna last for two seconds

00:15:54,370 --> 00:15:58,240
we have cue points which is we're

00:15:56,320 --> 00:16:00,940
basically saying alright at these points

00:15:58,240 --> 00:16:03,190
along this two seconds I want to define

00:16:00,940 --> 00:16:05,860
where I want the motors to be and this

00:16:03,190 --> 00:16:09,760
is in the fraction so in case 0 0.5 and

00:16:05,860 --> 00:16:11,740
1 translates to 0 1 and 2 seconds and

00:16:09,760 --> 00:16:13,480
then we define our actual keyframes and

00:16:11,740 --> 00:16:15,430
so an HQ frame we're specifying where we

00:16:13,480 --> 00:16:17,200
want the servo motor to be in terms of

00:16:15,430 --> 00:16:21,160
degrees because again these are radial

00:16:17,200 --> 00:16:22,660
between 0 and 180 and so we have in this

00:16:21,160 --> 00:16:25,510
example here as all three of these

00:16:22,660 --> 00:16:27,250
servos are gonna start all the way at 0

00:16:25,510 --> 00:16:29,140
degrees and go all the way to 180

00:16:27,250 --> 00:16:29,980
degrees but they're gonna do it at

00:16:29,140 --> 00:16:32,470
different rates

00:16:29,980 --> 00:16:34,959
this first servo is gonna start off

00:16:32,470 --> 00:16:36,640
really fast and as soon as slow down so

00:16:34,959 --> 00:16:38,980
this is essentially an ease out

00:16:36,640 --> 00:16:40,089
operation if you're used to using CSS

00:16:38,980 --> 00:16:43,060
animations where you see ease-in

00:16:40,089 --> 00:16:44,620
ease-out even out the second one is

00:16:43,060 --> 00:16:47,890
perfectly linear so it's gonna be a

00:16:44,620 --> 00:16:49,510
constant speed from start to end and the

00:16:47,890 --> 00:16:51,100
third one is gonna start off really slow

00:16:49,510 --> 00:16:53,649
and then it's gonna speed up so we've

00:16:51,100 --> 00:16:55,149
basically done in ease in and with this

00:16:53,649 --> 00:16:58,720
we can coordinator love these together

00:16:55,149 --> 00:16:59,860
and do really complicated animations and

00:16:58,720 --> 00:17:01,660
that's just really fun and I've seen

00:16:59,860 --> 00:17:04,150
some really cool demos with this such as

00:17:01,660 --> 00:17:06,160
like spider robots that can walk around

00:17:04,150 --> 00:17:07,929
which are fairly complex coordination

00:17:06,160 --> 00:17:10,809
between a bunch of motors and all sorts

00:17:07,929 --> 00:17:13,059
of other stuff now every example that I

00:17:10,809 --> 00:17:14,949
have shown you so far uses stuff built

00:17:13,059 --> 00:17:16,689
into johnny-five itself but you know

00:17:14,949 --> 00:17:18,010
johnny-five doesn't support everything

00:17:16,689 --> 00:17:19,959
there's a whole bunch of other things

00:17:18,010 --> 00:17:22,030
out there and so there are plugins and

00:17:19,959 --> 00:17:24,610
external modules for it probably the

00:17:22,030 --> 00:17:27,100
biggest one is for working with LCD

00:17:24,610 --> 00:17:29,350
displays so in this case we are

00:17:27,100 --> 00:17:31,390
importing another module called allege

00:17:29,350 --> 00:17:33,400
is you use a by the way created by a

00:17:31,390 --> 00:17:36,220
SUSE Hinton who's really awesome

00:17:33,400 --> 00:17:39,160
colleague of mine and so with this we're

00:17:36,220 --> 00:17:40,690
importing alleged a s and Johnny v and

00:17:39,160 --> 00:17:42,370
we also import a font we'll see why here

00:17:40,690 --> 00:17:43,720
in just a minute then after that we

00:17:42,370 --> 00:17:45,520
create our board as normal listed for

00:17:43,720 --> 00:17:47,950
the radio vent and then below that we

00:17:45,520 --> 00:17:48,370
initialize the LCD in this we're just

00:17:47,950 --> 00:17:50,320
giving

00:17:48,370 --> 00:17:52,120
some things about the LCD we say with

00:17:50,320 --> 00:17:54,430
the width and height of the LCD is in

00:17:52,120 --> 00:17:56,290
terms of pixels and then we're giving an

00:17:54,430 --> 00:18:00,010
address and this just has to do with how

00:17:56,290 --> 00:18:02,020
we talk to LCDs so LCDs typically work

00:18:00,010 --> 00:18:04,300
on a communication protocol called I

00:18:02,020 --> 00:18:06,340
squared C or insert integrated circuit

00:18:04,300 --> 00:18:09,730
and I squared C you could think of it a

00:18:06,340 --> 00:18:12,250
lot like USB except much lower power and

00:18:09,730 --> 00:18:13,600
also a lot slower as a result and a lot

00:18:12,250 --> 00:18:16,150
simpler which is really good for these

00:18:13,600 --> 00:18:17,380
tiny microcontrollers but it's like USB

00:18:16,150 --> 00:18:19,570
in that you can have multiple devices

00:18:17,380 --> 00:18:21,550
connected to a single I squared C port

00:18:19,570 --> 00:18:24,760
and so we give this address basically

00:18:21,550 --> 00:18:27,280
say which device we want to talk to so

00:18:24,760 --> 00:18:28,929
then we create our OLED instance anyhow

00:18:27,280 --> 00:18:30,610
we're passing in board which is our

00:18:28,929 --> 00:18:32,200
johnny-five instance you know and that's

00:18:30,610 --> 00:18:34,059
because johnny-five is actually backing

00:18:32,200 --> 00:18:34,510
Eligius and does a lot of the heavy

00:18:34,059 --> 00:18:36,540
lifting

00:18:34,510 --> 00:18:39,730
there are passing in a few other things

00:18:36,540 --> 00:18:41,950
then after that we can do kind of

00:18:39,730 --> 00:18:44,500
typical like graphics buffer type

00:18:41,950 --> 00:18:46,750
operations so we start by clearing our

00:18:44,500 --> 00:18:48,160
display then we can set a cursor which

00:18:46,750 --> 00:18:50,620
says that alright we want to do the next

00:18:48,160 --> 00:18:52,360
operation at this location and then

00:18:50,620 --> 00:18:54,070
we're going to write our string and

00:18:52,360 --> 00:18:55,780
there's a variety of options there I

00:18:54,070 --> 00:18:57,130
won't quite go through all of them but

00:18:55,780 --> 00:18:59,590
this is where we say you know what font

00:18:57,130 --> 00:19:01,630
we want to use for our string of course

00:18:59,590 --> 00:19:02,260
the string itself we could say the color

00:19:01,630 --> 00:19:03,820
of it

00:19:02,260 --> 00:19:06,910
these are monochrome display so colors

00:19:03,820 --> 00:19:09,100
are 0 or 1 you know on or off and then

00:19:06,910 --> 00:19:10,990
also things like word spacing line wraps

00:19:09,100 --> 00:19:12,940
stuff like that and then once we're done

00:19:10,990 --> 00:19:14,860
we call update which will actually send

00:19:12,940 --> 00:19:16,900
the in-memory graphics buffer to the

00:19:14,860 --> 00:19:18,550
display itself and if you wanted to you

00:19:16,900 --> 00:19:20,080
could even set this up in a loop and you

00:19:18,550 --> 00:19:22,270
can have sort of a game loop to do game

00:19:20,080 --> 00:19:25,780
style graphics on an LCD if you felt

00:19:22,270 --> 00:19:27,130
like it which is pretty cool and so I

00:19:25,780 --> 00:19:28,750
mentioned earlier that johnny-five

00:19:27,130 --> 00:19:30,429
is like the jquery of hard roll well

00:19:28,750 --> 00:19:33,190
this is all the hardware that occurence

00:19:30,429 --> 00:19:35,170
on it's quite a few devices out there

00:19:33,190 --> 00:19:36,970
and like I think this has been one of

00:19:35,170 --> 00:19:38,320
the big a power of johnny-five

00:19:36,970 --> 00:19:40,090
it was like ads you know the

00:19:38,320 --> 00:19:42,309
microcontroller world moves on you know

00:19:40,090 --> 00:19:43,960
new device has come out old devices fall

00:19:42,309 --> 00:19:45,670
out of favor and johnny-five makes it

00:19:43,960 --> 00:19:48,130
easy to sort of keep track with all of

00:19:45,670 --> 00:19:49,990
these and I'm not going to talk about

00:19:48,130 --> 00:19:51,250
how to use all these well give one as an

00:19:49,990 --> 00:19:53,320
example and that is working with the

00:19:51,250 --> 00:19:56,110
Raspberry Pi now I say the Raspberry Pi

00:19:53,320 --> 00:19:58,120
for two reasons the first is that it

00:19:56,110 --> 00:19:59,710
accounts for about 25% of all

00:19:58,120 --> 00:20:02,500
johnny-five usage you know people really

00:19:59,710 --> 00:20:04,270
like the Raspberry Pi and also it's

00:20:02,500 --> 00:20:06,550
I wrote it I'm totally just being self

00:20:04,270 --> 00:20:10,270
this year so I've been maintaining raspy

00:20:06,550 --> 00:20:12,010
IO for about four years now and so with

00:20:10,270 --> 00:20:13,870
this this is our LED example we saw in

00:20:12,010 --> 00:20:15,700
the first page it looks really similar

00:20:13,870 --> 00:20:18,460
but there's just a couple extra bits to

00:20:15,700 --> 00:20:20,140
it so the first thing is on line two you

00:20:18,460 --> 00:20:22,420
notice that we are also importing the

00:20:20,140 --> 00:20:24,940
raspy IO module in addition to Johnny

00:20:22,420 --> 00:20:26,260
Five and then on that next line we're in

00:20:24,940 --> 00:20:28,450
San Shi an ER board like we did before

00:20:26,260 --> 00:20:30,460
but now we're passing some options to it

00:20:28,450 --> 00:20:33,250
and the key thing is we're passing in an

00:20:30,460 --> 00:20:35,950
i/o property and with this we can then

00:20:33,250 --> 00:20:37,510
pass in a new recipe instance and that

00:20:35,950 --> 00:20:39,730
is telling Johnny Five to talk to the

00:20:37,510 --> 00:20:42,190
hardware on the Raspberry Pi and set up

00:20:39,730 --> 00:20:43,690
an Arduino which is the default and we

00:20:42,190 --> 00:20:46,810
wanted to make this explicit well for

00:20:43,690 --> 00:20:48,250
two reasons one is that a lot of people

00:20:46,810 --> 00:20:49,660
especially when I first created razz

00:20:48,250 --> 00:20:51,760
video we're actually using a Raspberry

00:20:49,660 --> 00:20:53,920
Pi to control in Arduino that was

00:20:51,760 --> 00:20:56,290
connected to it and so we actually had

00:20:53,920 --> 00:20:58,270
code for about literally six hours that

00:20:56,290 --> 00:21:00,190
had a auto-detected the Raspberry Pi and

00:20:58,270 --> 00:21:01,900
would switch to that and we broke a

00:21:00,190 --> 00:21:04,090
whole bunch of people's code so we had

00:21:01,900 --> 00:21:05,470
to roll that back really quickly but now

00:21:04,090 --> 00:21:06,730
this is also we can do this because the

00:21:05,470 --> 00:21:08,110
cool thing about Johnny five is like I

00:21:06,730 --> 00:21:10,060
mentioned it can do edge computing

00:21:08,110 --> 00:21:12,550
Johnny five can actually control

00:21:10,060 --> 00:21:15,370
multiple microcontrollers at the same

00:21:12,550 --> 00:21:17,140
time so you can connect like for Arduino

00:21:15,370 --> 00:21:19,480
to your laptop and have Johnny five

00:21:17,140 --> 00:21:21,490
control all four at the same time in the

00:21:19,480 --> 00:21:23,170
same code base so having this little

00:21:21,490 --> 00:21:25,750
extra explicit step is part of what

00:21:23,170 --> 00:21:27,130
enables that it's really cool but so

00:21:25,750 --> 00:21:28,990
that's you know the next big difference

00:21:27,130 --> 00:21:31,900
and then finally in our code the code is

00:21:28,990 --> 00:21:33,220
basically identical the only change is

00:21:31,900 --> 00:21:34,990
that instead of passing in the number

00:21:33,220 --> 00:21:38,230
five where I'm now passing in a string

00:21:34,990 --> 00:21:40,660
GPIO four and we do this basically

00:21:38,230 --> 00:21:41,920
because the pen naming scheme and just

00:21:40,660 --> 00:21:43,540
the pen scheme on the rest of your pie

00:21:41,920 --> 00:21:45,310
is quite a bit more complex than the

00:21:43,540 --> 00:21:46,870
Arduino so you had to do some stuff like

00:21:45,310 --> 00:21:48,610
that if you want to learn more about

00:21:46,870 --> 00:21:51,370
that I can tell you some horror stories

00:21:48,610 --> 00:21:52,840
later of course if we're creating any

00:21:51,370 --> 00:21:54,490
kind of like production level

00:21:52,840 --> 00:21:56,170
application we wouldn't be defining this

00:21:54,490 --> 00:21:57,520
pin number right in code you know just

00:21:56,170 --> 00:21:59,890
like we want to find any sort of like

00:21:57,520 --> 00:22:01,360
magic variable or constant string

00:21:59,890 --> 00:22:03,010
writing code we will put it in a

00:22:01,360 --> 00:22:04,840
configuration file or an environment

00:22:03,010 --> 00:22:06,160
variable if you do that you know then

00:22:04,840 --> 00:22:09,160
the code is actually identical except

00:22:06,160 --> 00:22:11,140
for the initialization and so like

00:22:09,160 --> 00:22:13,030
that's basically what Johnny five looks

00:22:11,140 --> 00:22:14,350
like and it's been really successful and

00:22:13,030 --> 00:22:16,000
I think the key reason has been

00:22:14,350 --> 00:22:18,340
successful is because of

00:22:16,000 --> 00:22:19,810
unity and to me community and

00:22:18,340 --> 00:22:22,240
open-source are somewhat synonymous

00:22:19,810 --> 00:22:23,710
terms or at least for successful open

00:22:22,240 --> 00:22:25,270
source you know Johnny Five has

00:22:23,710 --> 00:22:27,070
succeeded because it is an open-source

00:22:25,270 --> 00:22:31,420
project and because we've really

00:22:27,070 --> 00:22:32,860
embraced and cultivated community and if

00:22:31,420 --> 00:22:34,270
we look at where we are today in the

00:22:32,860 --> 00:22:36,520
software industry software is

00:22:34,270 --> 00:22:37,930
fundamentally built on open source it

00:22:36,520 --> 00:22:40,840
kind of doesn't matter what you're doing

00:22:37,930 --> 00:22:42,910
almost all software that we use and that

00:22:40,840 --> 00:22:44,710
we create there is open source in there

00:22:42,910 --> 00:22:46,060
somewhere you know we can say at this

00:22:44,710 --> 00:22:48,160
point that open source is one the

00:22:46,060 --> 00:22:50,890
software development cycle which i think

00:22:48,160 --> 00:22:52,030
is fantastic you know I'm a huge

00:22:50,890 --> 00:22:53,410
proponent of open source I don't think I

00:22:52,030 --> 00:22:54,760
have to sell a view on that we're at a

00:22:53,410 --> 00:22:57,550
conference put on by an open source

00:22:54,760 --> 00:22:59,200
company but you know some people still

00:22:57,550 --> 00:23:00,610
take a little umbrage to this but this

00:22:59,200 --> 00:23:01,720
is really important because one of the

00:23:00,610 --> 00:23:03,640
things about open source that's

00:23:01,720 --> 00:23:05,980
different is it's not just a difference

00:23:03,640 --> 00:23:07,780
in legal license there is that but I

00:23:05,980 --> 00:23:10,150
actually think that's just like nuts and

00:23:07,780 --> 00:23:12,250
bolts I think the real thing that Open

00:23:10,150 --> 00:23:14,440
Source changed compared to closed source

00:23:12,250 --> 00:23:16,930
is that now software is not being

00:23:14,440 --> 00:23:19,690
created by a single entity it's being

00:23:16,930 --> 00:23:22,270
created by a federation by multiple

00:23:19,690 --> 00:23:24,040
people often with conflicting goals and

00:23:22,270 --> 00:23:25,570
needs and desires and so when we're

00:23:24,040 --> 00:23:27,610
building open-source you know at least

00:23:25,570 --> 00:23:28,990
at its best we're actually listening to

00:23:27,610 --> 00:23:31,240
a whole bunch of different viewpoints

00:23:28,990 --> 00:23:32,650
and we're all in the room and there's no

00:23:31,240 --> 00:23:34,240
one that can just say well this is how

00:23:32,650 --> 00:23:35,590
it is we all have to listen to each

00:23:34,240 --> 00:23:37,210
other and you know we all kind of have

00:23:35,590 --> 00:23:38,860
to get along and you know what's

00:23:37,210 --> 00:23:41,290
interesting is the way this is developed

00:23:38,860 --> 00:23:44,410
is that these days Enterprise is built

00:23:41,290 --> 00:23:45,640
on open source some more than others of

00:23:44,410 --> 00:23:48,070
course menu I can certainly say at

00:23:45,640 --> 00:23:49,360
Microsoft we use open source everywhere

00:23:48,070 --> 00:23:51,340
you know Microsoft is now the number one

00:23:49,360 --> 00:23:54,130
contributor on github that's because we

00:23:51,340 --> 00:23:56,350
realize that open source is the present

00:23:54,130 --> 00:23:58,000
and future of software you know if you

00:23:56,350 --> 00:24:00,010
look at a sure all I which is our cloud

00:23:58,000 --> 00:24:02,650
provider all of our SDKs are open source

00:24:00,010 --> 00:24:05,020
in this we see this everywhere and it's

00:24:02,650 --> 00:24:07,150
smart business these days to base what

00:24:05,020 --> 00:24:08,230
you're doing on open source and it's not

00:24:07,150 --> 00:24:09,730
just because it's software that's

00:24:08,230 --> 00:24:11,440
available it's not a leech and kind of

00:24:09,730 --> 00:24:14,050
thing when I say enterprise is built on

00:24:11,440 --> 00:24:16,270
open source to do it best means to be a

00:24:14,050 --> 00:24:18,430
part of the community not just to take

00:24:16,270 --> 00:24:20,440
the code and use it but to also give

00:24:18,430 --> 00:24:21,700
back which is something that we do I

00:24:20,440 --> 00:24:22,720
think pretty well we have contributors

00:24:21,700 --> 00:24:24,370
on the Linux kernel you know I

00:24:22,720 --> 00:24:26,500
contribute to johnny-five is a very tiny

00:24:24,370 --> 00:24:28,270
example in everything else because when

00:24:26,500 --> 00:24:29,020
we do that Enterprise becomes a part of

00:24:28,270 --> 00:24:31,210
the commute

00:24:29,020 --> 00:24:33,730
and adds the needs of enterprise users

00:24:31,210 --> 00:24:35,890
to this conversation of what we're

00:24:33,730 --> 00:24:38,290
building and if we can get enterprise as

00:24:35,890 --> 00:24:40,360
well as you know indie developers and

00:24:38,290 --> 00:24:42,250
startups and you know hobbyists and

00:24:40,360 --> 00:24:45,730
everyone together that's how we can

00:24:42,250 --> 00:24:47,350
build more well-rounded software it's at

00:24:45,730 --> 00:24:49,780
the end of the day open source is built

00:24:47,350 --> 00:24:52,090
by people right it's about individuals

00:24:49,780 --> 00:24:53,110
and communities and at its best open

00:24:52,090 --> 00:24:55,180
source is bringing together

00:24:53,110 --> 00:24:57,820
all kinds of different viewpoints you

00:24:55,180 --> 00:24:59,830
know we're getting more diverse voices

00:24:57,820 --> 00:25:01,960
in and by doing so we make better soccer

00:24:59,830 --> 00:25:04,330
because like I said earlier the more

00:25:01,960 --> 00:25:06,310
diverse our teams are the better quality

00:25:04,330 --> 00:25:07,330
products we build and also anyone we're

00:25:06,310 --> 00:25:10,360
building soft we're going to build the

00:25:07,330 --> 00:25:12,220
best software that we can so I kind of

00:25:10,360 --> 00:25:14,770
watch Stan talking again back to Johnny

00:25:12,220 --> 00:25:16,090
Five with the people of Johnny Five so

00:25:14,770 --> 00:25:17,800
Johnny Five is the best open source

00:25:16,090 --> 00:25:19,540
community that I've been involved with

00:25:17,800 --> 00:25:22,120
to date and part of that comes from

00:25:19,540 --> 00:25:23,920
Johnny Five being targeted mostly

00:25:22,120 --> 00:25:25,600
towards beginners you know we're trying

00:25:23,920 --> 00:25:28,390
to get a whole bunch of people involved

00:25:25,600 --> 00:25:30,400
in robotics who previously couldn't

00:25:28,390 --> 00:25:31,660
because they didn't know assembly and

00:25:30,400 --> 00:25:33,940
how to read data sheets and all of that

00:25:31,660 --> 00:25:36,040
kind of stuff and it really works like

00:25:33,940 --> 00:25:39,070
I've actually run Johnny five workshops

00:25:36,040 --> 00:25:41,110
for preteens and kids and they loved it

00:25:39,070 --> 00:25:42,940
and they were able to code so we're

00:25:41,110 --> 00:25:45,280
getting all kinds of people into it and

00:25:42,940 --> 00:25:48,010
we're just a really welcoming and

00:25:45,280 --> 00:25:49,600
diverse audience one of the most diverse

00:25:48,010 --> 00:25:52,390
open-source projects I've worked on you

00:25:49,600 --> 00:25:54,700
know as just one axis in one example I

00:25:52,390 --> 00:25:56,830
am far from the only queer person that's

00:25:54,700 --> 00:25:58,030
actually involved in this project I mean

00:25:56,830 --> 00:25:59,170
we have really good diversity among

00:25:58,030 --> 00:26:00,820
other axes as well

00:25:59,170 --> 00:26:02,710
we're not perfect of course we're always

00:26:00,820 --> 00:26:04,810
growing but I think that diversity of

00:26:02,710 --> 00:26:06,640
voices and opinions is what has really

00:26:04,810 --> 00:26:08,380
helped drive the project forward and

00:26:06,640 --> 00:26:10,570
gotten into some really interesting

00:26:08,380 --> 00:26:12,670
areas we wouldn't necessarily thought

00:26:10,570 --> 00:26:14,200
about either and so if we can bring

00:26:12,670 --> 00:26:16,360
community together you know we can bring

00:26:14,200 --> 00:26:17,830
this into IOT and like I think IOT is

00:26:16,360 --> 00:26:20,320
coming along at a really interesting

00:26:17,830 --> 00:26:22,870
time in software you know open-source is

00:26:20,320 --> 00:26:25,000
one everyone knows this so like IOT is

00:26:22,870 --> 00:26:26,560
also being built on open source and

00:26:25,000 --> 00:26:28,450
we're also talking about community and

00:26:26,560 --> 00:26:30,460
we're getting a lot better at building

00:26:28,450 --> 00:26:32,740
communities and software we have a long

00:26:30,460 --> 00:26:34,360
ways to go of course but you know I'm

00:26:32,740 --> 00:26:37,270
more optimistic about where we are now

00:26:34,360 --> 00:26:40,180
then five years ago versus 10 vs. 15 in

00:26:37,270 --> 00:26:42,220
IOT coming along now versus 15 years ago

00:26:40,180 --> 00:26:44,710
means that we should Italy

00:26:42,220 --> 00:26:46,780
hopefully build better products for more

00:26:44,710 --> 00:26:48,880
people because at the end of the

00:26:46,780 --> 00:26:52,030
software is always about people soccer

00:26:48,880 --> 00:26:53,740
is built by people for people with that

00:26:52,030 --> 00:26:57,480
I want to thank you all for listening

00:26:53,740 --> 00:26:57,480

YouTube URL: https://www.youtube.com/watch?v=tJV-qb8a4y8


