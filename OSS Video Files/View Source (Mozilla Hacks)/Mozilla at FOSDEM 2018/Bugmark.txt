Title: Bugmark
Publication date: 2018-02-28
Playlist: Mozilla at FOSDEM 2018
Description: 
	A futures market for software bugs and tasks, on the blockchain. 

Presented by Don Marti at FOSDEM. 



These talks have been recorded at FOSDEM (https://fosdem.org/) This work is licensed under the Creative Commons Attribution 2.0 Belgium Licence. To view a copy of this licence, visit:

https://creativecommons.org/licenses/by/2.0/be/deed.en
Captions: 
	00:00:05,140 --> 00:00:12,080
all right I am going to have some fairly

00:00:09,770 --> 00:00:14,690
fine-grained stuff up here on the screen

00:00:12,080 --> 00:00:16,670
so if you're in the back and you want to

00:00:14,690 --> 00:00:21,800
see what's going on you might want to

00:00:16,670 --> 00:00:24,470
move up this talk will be completely off

00:00:21,800 --> 00:00:30,580
message nothing in here is officially

00:00:24,470 --> 00:00:34,070
representing the interests or financial

00:00:30,580 --> 00:00:35,630
positions of Mozilla in any way and of

00:00:34,070 --> 00:00:37,670
course since every time you make a

00:00:35,630 --> 00:00:41,930
PowerPoint Edward Tufte kills a kitten

00:00:37,670 --> 00:00:44,230
this is done with some JavaScript

00:00:41,930 --> 00:00:48,020
instead of a proper presentation package

00:00:44,230 --> 00:00:51,649
alright so the part of Mozilla that I'm

00:00:48,020 --> 00:00:55,100
with is Mozilla open innovation and we

00:00:51,649 --> 00:00:57,530
work on making open collaboration on the

00:00:55,100 --> 00:01:00,559
internet work better and three of the

00:00:57,530 --> 00:01:04,010
big problems that were concerned with in

00:01:00,559 --> 00:01:08,270
open source software our bias bugs and

00:01:04,010 --> 00:01:12,380
burnout so low quality software turns

00:01:08,270 --> 00:01:18,080
out to cost about 1.1 trillion dollars

00:01:12,380 --> 00:01:22,579
of worldwide this is bad and you can

00:01:18,080 --> 00:01:24,380
think of it as a market failure why is

00:01:22,579 --> 00:01:27,680
there market failure in software I mean

00:01:24,380 --> 00:01:31,040
users prefer software to be released at

00:01:27,680 --> 00:01:34,640
a high level of quality right developers

00:01:31,040 --> 00:01:37,729
also prefer to release software at a

00:01:34,640 --> 00:01:41,090
high level of quality but given the

00:01:37,729 --> 00:01:43,820
presence of firms in the software market

00:01:41,090 --> 00:01:46,850
all of which are trying to build Network

00:01:43,820 --> 00:01:50,659
effects for particular projects these

00:01:46,850 --> 00:01:53,000
firms are incentivized to release

00:01:50,659 --> 00:01:54,710
software at a low level of quality in

00:01:53,000 --> 00:01:58,549
order to get things out there quickly in

00:01:54,710 --> 00:02:01,250
order to build Network effect so why do

00:01:58,549 --> 00:02:06,740
we have connections between users and

00:02:01,250 --> 00:02:11,000
firms and between firms and pure

00:02:06,740 --> 00:02:13,700
production markets why out of the three

00:02:11,000 --> 00:02:14,780
ways of organizing productive human

00:02:13,700 --> 00:02:16,700
activity

00:02:14,780 --> 00:02:20,950
either command-and-control within a firm

00:02:16,700 --> 00:02:23,569
or transactions in the market or

00:02:20,950 --> 00:02:26,420
cooperation in pure production like an

00:02:23,569 --> 00:02:29,900
open-source project why don't we have a

00:02:26,420 --> 00:02:35,120
direct connection between peer

00:02:29,900 --> 00:02:37,459
production and markets and this market

00:02:35,120 --> 00:02:41,630
failure is only going to get bigger we

00:02:37,459 --> 00:02:43,100
know that people who make $200 phones

00:02:41,630 --> 00:02:46,400
have trouble keeping them up-to-date

00:02:43,100 --> 00:02:49,989
with the security updates can you keep a

00:02:46,400 --> 00:02:52,430
$20 toaster up to date given software

00:02:49,989 --> 00:02:58,370
development collaboration and quality

00:02:52,430 --> 00:03:02,330
the way it is a related problem is the

00:02:58,370 --> 00:03:06,260
market for information about security

00:03:02,330 --> 00:03:09,160
defects even for extremely wealthy

00:03:06,260 --> 00:03:13,850
companies such as Apple and Microsoft

00:03:09,160 --> 00:03:18,200
the market price of vulnerabilities on

00:03:13,850 --> 00:03:22,790
the black market is much higher than

00:03:18,200 --> 00:03:26,750
those vendors can pay as part of a bug

00:03:22,790 --> 00:03:29,120
bounty program that's for the best

00:03:26,750 --> 00:03:33,920
funded bug bounty programs out there for

00:03:29,120 --> 00:03:36,320
other companies that don't have the

00:03:33,920 --> 00:03:39,489
ability to pay competitive with

00:03:36,320 --> 00:03:43,280
state-sponsored or organized crime

00:03:39,489 --> 00:03:51,370
buyers for those defects there's just no

00:03:43,280 --> 00:03:51,370
contest all right so what is bug mark

00:03:52,660 --> 00:03:58,930
this is the station that I stayed close

00:03:56,800 --> 00:04:01,720
to in Berlin it's actually a station

00:03:58,930 --> 00:04:05,970
called hackescher markt which means

00:04:01,720 --> 00:04:12,100
hacks market Hakka is the proper name

00:04:05,970 --> 00:04:18,600
but bud mark is a futures market that

00:04:12,100 --> 00:04:20,739
trades on bugs in a bug tracker this is

00:04:18,600 --> 00:04:25,390
something that we're doing research on

00:04:20,739 --> 00:04:28,690
right now and our hypothesis is Garak

00:04:25,390 --> 00:04:31,060
wave your hand Garak doing research on

00:04:28,690 --> 00:04:34,330
this as well at university of nebraska

00:04:31,060 --> 00:04:38,680
part of the bug mark team our hypothesis

00:04:34,330 --> 00:04:42,270
is that using a market will result in

00:04:38,680 --> 00:04:46,770
new kinds of incentivization and

00:04:42,270 --> 00:04:50,640
information discover and most important

00:04:46,770 --> 00:04:55,600
anyone with an interest in the software

00:04:50,640 --> 00:04:59,010
can trade in the market the goals are to

00:04:55,600 --> 00:05:01,330
design a new system that will

00:04:59,010 --> 00:05:04,600
incentivize people to share information

00:05:01,330 --> 00:05:09,640
and incentivize people to perform

00:05:04,600 --> 00:05:13,690
software tasks it will also enable peer

00:05:09,640 --> 00:05:17,280
production projects to use price signals

00:05:13,690 --> 00:05:20,740
to help determine user's priorities and

00:05:17,280 --> 00:05:22,750
efficiently allocate resources across

00:05:20,740 --> 00:05:24,700
project remember that problem with

00:05:22,750 --> 00:05:28,540
having firms in the middle if you've got

00:05:24,700 --> 00:05:31,060
a say a software-as-a-service company

00:05:28,540 --> 00:05:34,510
that has a choice between two features

00:05:31,060 --> 00:05:36,580
one of which is going to produce $500

00:05:34,510 --> 00:05:39,400
worth of value for 1,000 existing

00:05:36,580 --> 00:05:42,370
customers but one of them is going to

00:05:39,400 --> 00:05:44,410
help them get two new thousand dollar

00:05:42,370 --> 00:05:48,300
customers they're gonna go for the

00:05:44,410 --> 00:05:52,480
future that brings in new customers

00:05:48,300 --> 00:05:55,150
rather than creating additional consumer

00:05:52,480 --> 00:05:58,530
surplus for the existing customers so

00:05:55,150 --> 00:06:01,389
there's all kinds of really

00:05:58,530 --> 00:06:03,460
really interesting to an economist kind

00:06:01,389 --> 00:06:06,430
of market failure stuff going on here in

00:06:03,460 --> 00:06:10,169
software and so that's why we have this

00:06:06,430 --> 00:06:10,169
thing in the research phase

00:06:10,710 --> 00:06:19,750
first of all real simple scenario a user

00:06:15,400 --> 00:06:23,590
can propose a contract developer can

00:06:19,750 --> 00:06:28,150
accept the contract do some work the

00:06:23,590 --> 00:06:31,630
user closes out of their position at a

00:06:28,150 --> 00:06:34,030
loss developer close us out at a profit

00:06:31,630 --> 00:06:36,659
and the user gets their feature let's go

00:06:34,030 --> 00:06:36,659
through it step by step

00:06:43,010 --> 00:06:51,350
all right so here's Adam Adam is a user

00:06:47,150 --> 00:06:54,650
of a particular software package he's

00:06:51,350 --> 00:06:57,350
found a bug he doesn't know how to fix

00:06:54,650 --> 00:07:00,010
it himself but is interested in paying

00:06:57,350 --> 00:07:00,010
to get it fixed

00:07:01,780 --> 00:07:10,670
first of all Adam finds his bug in the

00:07:07,430 --> 00:07:12,590
issue tracker and if there's no such bug

00:07:10,670 --> 00:07:15,250
in the issue tracker then Adam can go

00:07:12,590 --> 00:07:15,250
ahead and create it

00:07:15,580 --> 00:07:25,490
next Adam offers to pay for the bug fix

00:07:20,990 --> 00:07:29,240
by creating an offer to own the fixed

00:07:25,490 --> 00:07:34,280
side of a smart contract pays off in two

00:07:29,240 --> 00:07:39,830
weeks at a value of $200 Adam is

00:07:34,280 --> 00:07:42,290
offering to put up $160 if that bug is

00:07:39,830 --> 00:07:45,950
fixed he'll lose his hundred sixty

00:07:42,290 --> 00:07:49,100
dollars if the bug goes unfixed he'll

00:07:45,950 --> 00:07:53,560
get his original one sixty back plus 40

00:07:49,100 --> 00:07:53,560
more if this contract is formed

00:07:54,610 --> 00:08:04,930
now a developer nears bath she sees the

00:07:59,289 --> 00:08:07,349
offer with the total value of $200 she

00:08:04,930 --> 00:08:11,530
decides that she can fix this fund and

00:08:07,349 --> 00:08:14,439
she decides to buy the fixed side of the

00:08:11,530 --> 00:08:23,009
same futures contract so she's putting

00:08:14,439 --> 00:08:27,129
in $40 this this contract will pay off

00:08:23,009 --> 00:08:30,000
$200 to bath in the event that that bug

00:08:27,129 --> 00:08:33,310
is fixed she'll get her original 40 back

00:08:30,000 --> 00:08:38,709
plus the 160 that was put in by out so

00:08:33,310 --> 00:08:42,510
total value 200 Adam put up 160 that's

00:08:38,709 --> 00:08:46,480
put up for it all right

00:08:42,510 --> 00:08:48,190
Beth is working Adam is waiting Adam

00:08:46,480 --> 00:08:54,010
sees that this contract has been formed

00:08:48,190 --> 00:08:54,490
there are two possible outcomes first

00:08:54,010 --> 00:08:57,610
outcome

00:08:54,490 --> 00:09:00,279
Beth has fixed the bug the project

00:08:57,610 --> 00:09:06,070
maintainer has resolved that bug has

00:09:00,279 --> 00:09:10,000
closed fixed the contract matures Beth

00:09:06,070 --> 00:09:16,390
gets the entire $200 Adam gets nothing

00:09:10,000 --> 00:09:21,940
but he's got his bug fixed the

00:09:16,390 --> 00:09:25,360
alternative the bug stays open Beth does

00:09:21,940 --> 00:09:29,440
not get her money the 40 she put up goes

00:09:25,360 --> 00:09:33,910
to Adam along with him getting his 160

00:09:29,440 --> 00:09:34,589
back Adam collects the entire 200 all

00:09:33,910 --> 00:09:39,690
right

00:09:34,589 --> 00:09:43,810
boring right didn't I just describe an

00:09:39,690 --> 00:09:46,630
open source bounty and haven't companies

00:09:43,810 --> 00:09:49,630
been putting hey let's pay people to fix

00:09:46,630 --> 00:09:51,880
bugs bounty systems on open source

00:09:49,630 --> 00:09:53,560
projects for 20 years now how many

00:09:51,880 --> 00:09:57,760
people have used an open source bounty

00:09:53,560 --> 00:10:01,600
system okay they're not super popular

00:09:57,760 --> 00:10:04,380
and we have some interesting hypotheses

00:10:01,600 --> 00:10:09,770
as to why people don't do

00:10:04,380 --> 00:10:14,160
open-source bounties this is my favorite

00:10:09,770 --> 00:10:19,830
imagine I find a bug in a web

00:10:14,160 --> 00:10:21,480
application and it needs some work done

00:10:19,830 --> 00:10:25,830
on JavaScript and it needs some work

00:10:21,480 --> 00:10:28,680
done on CSS I put up a bounty now a

00:10:25,830 --> 00:10:31,230
JavaScript developer might work on the

00:10:28,680 --> 00:10:34,590
thing nail the JavaScript part gets

00:10:31,230 --> 00:10:35,790
stuck on the CSS but he's not going to

00:10:34,590 --> 00:10:37,830
say anything because he's trying to

00:10:35,790 --> 00:10:39,630
claim the entire bounty meanwhile

00:10:37,830 --> 00:10:41,700
somebody else fixes the CSS they get

00:10:39,630 --> 00:10:45,240
stuck on the JavaScript again they're

00:10:41,700 --> 00:10:48,000
trying to claim the bounty so that extra

00:10:45,240 --> 00:10:52,490
overhead the overhead on top of open

00:10:48,000 --> 00:10:56,180
source of contending for that bounty

00:10:52,490 --> 00:11:00,270
causes some possible productive

00:10:56,180 --> 00:11:02,910
cooperation not to happen in Bally

00:11:00,270 --> 00:11:04,740
systems there's the extra transaction

00:11:02,910 --> 00:11:07,800
costs above and beyond resolving the

00:11:04,740 --> 00:11:09,990
task of allocating the bounty to the

00:11:07,800 --> 00:11:11,880
appropriate fixer either you have people

00:11:09,990 --> 00:11:13,410
claiming bounties and then resolving it

00:11:11,880 --> 00:11:15,300
or you have people contending for

00:11:13,410 --> 00:11:23,010
bounties it's not it's it's not

00:11:15,300 --> 00:11:26,850
automatic with bug futures the contract

00:11:23,010 --> 00:11:30,440
ownership is decoupled from who reported

00:11:26,850 --> 00:11:34,140
the bug or who the bug is assigned to

00:11:30,440 --> 00:11:38,430
anybody can have a piece of any bug

00:11:34,140 --> 00:11:43,610
which incentivizes doing task sharing

00:11:38,430 --> 00:11:46,380
and incentivizes meta info like

00:11:43,610 --> 00:11:48,860
reproducing above translating a bug

00:11:46,380 --> 00:11:51,720
report from one language to another

00:11:48,860 --> 00:11:54,150
assigning a bug to the correct subsystem

00:11:51,720 --> 00:11:56,400
doing a code review on a bug all that

00:11:54,150 --> 00:12:00,300
meta tasks all those meta tasks are

00:11:56,400 --> 00:12:02,820
things that can be incentivized by who

00:12:00,300 --> 00:12:05,490
owns what pieces of what futures

00:12:02,820 --> 00:12:09,420
contract so in the case of the

00:12:05,490 --> 00:12:12,780
JavaScript CSS example I would propose a

00:12:09,420 --> 00:12:14,670
smart contract JavaScript developer buys

00:12:12,780 --> 00:12:16,840
the other side works on it for a while

00:12:14,670 --> 00:12:20,470
realizes hey I'm stuck on CSS

00:12:16,840 --> 00:12:22,600
but that JavaScript developer can write

00:12:20,470 --> 00:12:24,940
a really good commit message say look

00:12:22,600 --> 00:12:26,920
look what this JavaScript does it fixes

00:12:24,940 --> 00:12:29,530
like 50% of this bug you're gonna want

00:12:26,920 --> 00:12:32,140
to buy out my my side of it CSS

00:12:29,530 --> 00:12:35,680
developer comes along they can buy the

00:12:32,140 --> 00:12:39,850
partially they can they can buy out that

00:12:35,680 --> 00:12:40,330
that fixed side of the contract finish

00:12:39,850 --> 00:12:44,460
it

00:12:40,330 --> 00:12:48,580
commit to work both developers have

00:12:44,460 --> 00:12:51,490
earned a profit on their part of the

00:12:48,580 --> 00:12:53,920
work the bug is signing II is never the

00:12:51,490 --> 00:12:55,750
same as the contract or the bug assignee

00:12:53,920 --> 00:12:57,400
does not necessarily have to be the same

00:12:55,750 --> 00:13:00,520
as the contract owner it's never

00:12:57,400 --> 00:13:03,970
enforced that the owner of either side

00:13:00,520 --> 00:13:10,110
of the contract is the original reporter

00:13:03,970 --> 00:13:14,350
or the assignee we also have the

00:13:10,110 --> 00:13:16,990
interesting use case of predicting

00:13:14,350 --> 00:13:20,290
discovery of bugs by category of

00:13:16,990 --> 00:13:22,960
vulnerability so if you see a particular

00:13:20,290 --> 00:13:24,760
project that you believe thanks to

00:13:22,960 --> 00:13:26,140
running some static analysis tool or

00:13:24,760 --> 00:13:28,690
some other knowledge that you might have

00:13:26,140 --> 00:13:30,940
that a particular category of bug is

00:13:28,690 --> 00:13:33,130
likely to be found you can trade

00:13:30,940 --> 00:13:35,710
directly on that prediction and the

00:13:33,130 --> 00:13:37,810
market prices of these predictions can

00:13:35,710 --> 00:13:41,320
provide a signal to the people who are

00:13:37,810 --> 00:13:45,570
in a position to fix these issues to

00:13:41,320 --> 00:13:45,570
come back and do the appropriate work

00:13:46,820 --> 00:13:52,700
there's a company called QB that's doing

00:13:49,520 --> 00:13:56,240
a tool called QB mind for resolving

00:13:52,700 --> 00:14:00,110
true/false questions and we're working

00:13:56,240 --> 00:14:01,760
with them on a micro site so join the

00:14:00,110 --> 00:14:04,120
bug marking out its mailing list if

00:14:01,760 --> 00:14:06,440
you're interested in getting a

00:14:04,120 --> 00:14:11,270
announcement when that microsite is up

00:14:06,440 --> 00:14:13,300
should be next with software quality

00:14:11,270 --> 00:14:15,770
problem why are we dealing with this now

00:14:13,300 --> 00:14:16,880
well go back and read everything when

00:14:15,770 --> 00:14:21,200
Norton has ever written

00:14:16,880 --> 00:14:23,210
of course the we've been conditioned to

00:14:21,200 --> 00:14:25,660
believe that software rots as fast as

00:14:23,210 --> 00:14:28,910
fruit clearly that's not sustainable

00:14:25,660 --> 00:14:30,770
clearly we have a market failure but was

00:14:28,910 --> 00:14:33,980
an open source originally supposed to

00:14:30,770 --> 00:14:39,740
fix all this anybody read the fuzz

00:14:33,980 --> 00:14:41,570
revisited paper from the 90s this was a

00:14:39,740 --> 00:14:44,360
really interesting study it said that

00:14:41,570 --> 00:14:46,160
fifteen to forty three percent of the

00:14:44,360 --> 00:14:50,990
standard UNIX tools that were shipped

00:14:46,160 --> 00:14:54,020
with UNIX versions from Sun IBM SGI

00:14:50,990 --> 00:14:55,640
digital and next fifteen to forty three

00:14:54,020 --> 00:14:58,610
percent of them which would just crash

00:14:55,640 --> 00:15:01,070
on random input the versions that were

00:14:58,610 --> 00:15:06,320
bundled with Linux derived from the new

00:15:01,070 --> 00:15:09,080
tools nine percent if you took vanilla

00:15:06,320 --> 00:15:10,700
canned new tools six percent thought

00:15:09,080 --> 00:15:15,970
we're really onto something with open

00:15:10,700 --> 00:15:18,290
source by 2004 though every browser

00:15:15,970 --> 00:15:22,310
every major browser but Internet

00:15:18,290 --> 00:15:25,700
Explorer failed a fuzz test and of

00:15:22,310 --> 00:15:29,990
course we've got bugs out there that

00:15:25,700 --> 00:15:32,380
have logos and the s in IOT stands for

00:15:29,990 --> 00:15:32,380
security

00:15:35,730 --> 00:15:40,470
we're the open-source haters of the 90s

00:15:37,799 --> 00:15:42,509
right I don't think they were I think

00:15:40,470 --> 00:15:46,799
we've got some elementary market

00:15:42,509 --> 00:15:47,819
failures that we can fix but I do think

00:15:46,799 --> 00:15:50,220
the clock is ticking

00:15:47,819 --> 00:15:53,790
I do think regulation is coming here's

00:15:50,220 --> 00:15:55,679
Bruce Schneier saying that availability

00:15:53,790 --> 00:15:58,970
and integrity threats are important as

00:15:55,679 --> 00:15:58,970
real risks to life and property

00:15:59,989 --> 00:16:05,419
zeyneb to fakie in the new york times

00:16:02,639 --> 00:16:08,249
zeynep to fakie is the writer who

00:16:05,419 --> 00:16:10,529
predicted all the mental manipulation of

00:16:08,249 --> 00:16:13,410
Facebook and she predicted that stuff

00:16:10,529 --> 00:16:16,850
back in at the time of the 2012 election

00:16:13,410 --> 00:16:20,609
so definitely worth paying attention to

00:16:16,850 --> 00:16:22,470
when she says it is time to consider

00:16:20,609 --> 00:16:25,319
whether the current regulatory setup

00:16:22,470 --> 00:16:27,480
which allows almost all which allows all

00:16:25,319 --> 00:16:29,369
software vendors to externalize the cost

00:16:27,480 --> 00:16:32,160
of all defects and problems to their

00:16:29,369 --> 00:16:36,419
customers with zero liability needs

00:16:32,160 --> 00:16:38,129
reexamination there's going to be a

00:16:36,419 --> 00:16:40,109
crackdown on the software business and

00:16:38,129 --> 00:16:41,730
we're going to either get over regulated

00:16:40,109 --> 00:16:47,249
or we're gonna have to fix our own

00:16:41,730 --> 00:16:49,169
market failures the good news is we've

00:16:47,249 --> 00:16:51,359
got people trying to fix the problem at

00:16:49,169 --> 00:16:54,239
several different levels people are

00:16:51,359 --> 00:16:57,779
trying to make better languages that

00:16:54,239 --> 00:17:00,179
catch things at development time rather

00:16:57,779 --> 00:17:02,100
than run time people are trying to fix

00:17:00,179 --> 00:17:03,569
practices by building healthy and

00:17:02,100 --> 00:17:06,329
productive open-source communities

00:17:03,569 --> 00:17:10,169
getting the right people in more eyes on

00:17:06,329 --> 00:17:13,760
problems and people are working on

00:17:10,169 --> 00:17:13,760
incentives building better markets

00:17:17,780 --> 00:17:23,569
for keeping contributors that's another

00:17:20,660 --> 00:17:26,900
place where we can do better with better

00:17:23,569 --> 00:17:32,210
markets when people quit open source why

00:17:26,900 --> 00:17:34,340
do they leave well it depends on what

00:17:32,210 --> 00:17:35,840
group of people you're talking about and

00:17:34,340 --> 00:17:38,240
what motivation they had to get into

00:17:35,840 --> 00:17:40,310
open source to begin with the

00:17:38,240 --> 00:17:42,230
independence people who are contributing

00:17:40,310 --> 00:17:43,850
because of the recognition they feel for

00:17:42,230 --> 00:17:47,810
their work they're gonna leave because

00:17:43,850 --> 00:17:51,440
of more appealing outside work leaders

00:17:47,810 --> 00:17:53,120
they might leave lead be could leave

00:17:51,440 --> 00:17:56,000
open source because of lack of financial

00:17:53,120 --> 00:17:58,100
support for attending events fixers

00:17:56,000 --> 00:18:01,820
again better non open source work

00:17:58,100 --> 00:18:06,460
opportunities citizens these are the

00:18:01,820 --> 00:18:06,460
true believers they're they're not as

00:18:06,880 --> 00:18:13,130
motivated by the financial rewards but a

00:18:10,700 --> 00:18:16,520
lot of people leave open source for

00:18:13,130 --> 00:18:19,880
start-up jobs where we really need

00:18:16,520 --> 00:18:23,750
people retained in projects and working

00:18:19,880 --> 00:18:25,970
on core fixes all right now for time

00:18:23,750 --> 00:18:28,250
time for what what you all came for the

00:18:25,970 --> 00:18:30,620
actual live demo again if you want to

00:18:28,250 --> 00:18:34,690
move down and get a better look then

00:18:30,620 --> 00:18:34,690
please do so

00:18:41,200 --> 00:18:46,660
all right so bug mark is an online

00:18:43,720 --> 00:18:49,750
market for tradable software issues in

00:18:46,660 --> 00:18:53,830
this demo we'll be working with issue

00:18:49,750 --> 00:18:55,990
tracker data from github and bug mark

00:18:53,830 --> 00:18:57,790
will give the project manager project

00:18:55,990 --> 00:19:00,430
managers and end-users a way to

00:18:57,790 --> 00:19:04,930
incentivize work and it gives developers

00:19:00,430 --> 00:19:07,720
a way to get paid for their efforts all

00:19:04,930 --> 00:19:10,600
right I'm gonna do bug mark from the

00:19:07,720 --> 00:19:13,840
point of view of two users right now so

00:19:10,600 --> 00:19:18,100
in the first example the first example

00:19:13,840 --> 00:19:19,780
user is Jane the technical writer who

00:19:18,100 --> 00:19:22,150
wants to get paid for experience and

00:19:19,780 --> 00:19:30,850
effort and I'm going to take a look at

00:19:22,150 --> 00:19:33,970
issues all right so find issues here's

00:19:30,850 --> 00:19:38,650
one only show match this offer button on

00:19:33,970 --> 00:19:46,620
offer detail page web development bug

00:19:38,650 --> 00:19:53,580
that I can decide to fix all right and

00:19:46,620 --> 00:19:53,580
I'm going to say contribute to fix

00:20:04,440 --> 00:20:07,850
I'm gonna log in as Jane

00:20:51,520 --> 00:21:02,190
Garriga my on the right page here am I

00:20:55,270 --> 00:21:02,190
on the right page here bye

00:21:05,020 --> 00:21:08,970
for Jane I want to buy fix though right

00:21:12,000 --> 00:21:19,620
jain's the developer yeah all right so

00:21:17,310 --> 00:21:29,780
Jane Jane is going to decide to buy the

00:21:19,620 --> 00:21:29,780
fixed side of issue 119 and yep

00:21:32,750 --> 00:21:35,409
yep

00:21:37,630 --> 00:21:46,530
all right and so this is the interface

00:21:42,460 --> 00:21:50,140
that lets James spell out the the terms

00:21:46,530 --> 00:21:52,600
on which he wants to get paid for this

00:21:50,140 --> 00:21:56,799
contract and I warned you about sitting

00:21:52,600 --> 00:22:00,730
in the back and Jane is saying I will

00:21:56,799 --> 00:22:03,610
deposit ten tokens toward issue 119

00:22:00,730 --> 00:22:07,330
being fixed on February 4th and will

00:22:03,610 --> 00:22:10,630
require a profit of 90 tokens and this

00:22:07,330 --> 00:22:14,620
will set the unfix market price at 0.9

00:22:10,630 --> 00:22:17,320
and return a total of 100 tokens so Jane

00:22:14,620 --> 00:22:22,049
is putting up sort of earnest money of

00:22:17,320 --> 00:22:25,720
ten in order to earn a profit of ninety

00:22:22,049 --> 00:22:29,650
if she fixes this issue so Jane's gonna

00:22:25,720 --> 00:22:34,140
hit create offer and there's now an open

00:22:29,650 --> 00:22:37,150
offer on that issue

00:22:34,140 --> 00:22:44,220
all right and Jane is going to log out

00:22:37,150 --> 00:22:47,320
and come back in later all right so now

00:22:44,220 --> 00:22:49,240
I'm gonna come in as Jo it's a project

00:22:47,320 --> 00:22:53,110
manager who wants to incentivize a a

00:22:49,240 --> 00:22:59,799
software fix so Jo's gonna look at the

00:22:53,110 --> 00:23:04,450
issues and that first one is high

00:22:59,799 --> 00:23:07,900
priority and as Jo I want to invest in

00:23:04,450 --> 00:23:11,110
seeing this fixed as soon as possible so

00:23:07,900 --> 00:23:13,450
I'm going to hit invest in fix and you

00:23:11,110 --> 00:23:16,510
can see there are two buttons because

00:23:13,450 --> 00:23:19,140
there's already a developer on the other

00:23:16,510 --> 00:23:23,200
side of this interested in working on it

00:23:19,140 --> 00:23:26,159
Joe is gonna hit invest in fix and now

00:23:23,200 --> 00:23:26,159
Jo has to log in

00:23:33,410 --> 00:23:40,180
all right now Joe is going to say

00:23:44,420 --> 00:23:52,400
looking at off looking at issue 119 and

00:23:49,630 --> 00:23:54,440
Joe sees that there's the existing open

00:23:52,400 --> 00:23:57,980
offer from the developer with a total

00:23:54,440 --> 00:24:01,010
volume of 100 and you can see that this

00:23:57,980 --> 00:24:02,630
one says says fixed somebody's already

00:24:01,010 --> 00:24:06,170
offering to take the fixed side of this

00:24:02,630 --> 00:24:09,830
one so Joe you can just match this one

00:24:06,170 --> 00:24:12,770
if if if I wanted to I could go in and

00:24:09,830 --> 00:24:15,110
propose a complete offer on the other

00:24:12,770 --> 00:24:16,490
side filling in the whole form but in

00:24:15,110 --> 00:24:20,120
this case I'm just gonna match the offer

00:24:16,490 --> 00:24:22,940
that's already there all right and so it

00:24:20,120 --> 00:24:26,030
says I will deposit 90 tokens tortoise

00:24:22,940 --> 00:24:28,220
you 119 being fixed on and there's the

00:24:26,030 --> 00:24:32,720
date and will require a profit of 10

00:24:28,220 --> 00:24:35,750
tokens so Joe he's gonna match the offer

00:24:32,720 --> 00:24:41,060
form the contract and up here it says

00:24:35,750 --> 00:24:45,670
new contract is created all right and so

00:24:41,060 --> 00:24:45,670
Joe is going to log out

00:25:06,250 --> 00:25:13,210
okay so this is not something you would

00:25:09,370 --> 00:25:16,750
see as a traitor this is just me as the

00:25:13,210 --> 00:25:19,990
demo administrator moving the clock

00:25:16,750 --> 00:25:24,990
forward eight days all right

00:25:19,990 --> 00:25:28,000
so prepare to travel in time all right

00:25:24,990 --> 00:25:35,950
now we can see at the bottom it says

00:25:28,000 --> 00:25:38,250
demo time so all right so here we are in

00:25:35,950 --> 00:25:38,250
the future

00:25:49,720 --> 00:25:53,429
and Jane is going to come in

00:25:59,470 --> 00:26:04,260
after logout test one logging us Jane

00:26:44,010 --> 00:26:54,030
and James oh it is now seven o'clock

00:26:48,720 --> 00:27:00,590
Jane and so Jane's side of the contract

00:26:54,030 --> 00:27:00,590
is paid off and

00:27:03,800 --> 00:27:09,770
let me go back to James infer page yes

00:27:07,550 --> 00:27:15,020
okay here it is

00:27:09,770 --> 00:27:18,730
Kahn 23 value 100 resolved and fixed all

00:27:15,020 --> 00:27:18,730
right any questions

00:27:18,860 --> 00:27:22,060
oh yes over there

00:27:49,460 --> 00:27:52,210
okay

00:27:59,780 --> 00:28:08,810
okay so the question is why would a

00:28:04,760 --> 00:28:11,750
developer want to do this if the person

00:28:08,810 --> 00:28:18,170
reporting the bug can refuse to accept

00:28:11,750 --> 00:28:21,140
the fix are just not accepted in the

00:28:18,170 --> 00:28:25,340
given period of time the answer is that

00:28:21,140 --> 00:28:28,370
the bugs are not resolved by the

00:28:25,340 --> 00:28:33,200
individual developer or by the reporter

00:28:28,370 --> 00:28:36,080
of the bug the bugs are resolved by the

00:28:33,200 --> 00:28:37,430
project maintainer the same way that the

00:28:36,080 --> 00:28:39,800
project maintainer would resolve

00:28:37,430 --> 00:28:42,020
anyone's contributions so it's entirely

00:28:39,800 --> 00:28:47,690
possible that the developer who fixes

00:28:42,020 --> 00:28:49,430
the bug is the maintainer so that leads

00:28:47,690 --> 00:28:51,260
to the flip side of the question which

00:28:49,430 --> 00:28:54,070
is hey wait a minute

00:28:51,260 --> 00:28:59,660
why wouldn't the maintainer cheat and

00:28:54,070 --> 00:29:02,000
the maintainer say check in a bogus

00:28:59,660 --> 00:29:05,300
fixins and close something is fixed and

00:29:02,000 --> 00:29:10,700
then take the users money the answer is

00:29:05,300 --> 00:29:15,010
that the system depends on a trustworthy

00:29:10,700 --> 00:29:17,420
maintainer who's going to keep the bugs

00:29:15,010 --> 00:29:21,110
who's going to keep all the metadata on

00:29:17,420 --> 00:29:23,060
the bugs correct they may all all all

00:29:21,110 --> 00:29:27,190
the resolutions depend on the maintainer

00:29:23,060 --> 00:29:27,190
x' closing of the votes

00:29:30,160 --> 00:29:38,360
yes yes the get coin project is a great

00:29:33,620 --> 00:29:42,020
example of a of an open-source bounty

00:29:38,360 --> 00:29:44,870
system and I like open-source bounding

00:29:42,020 --> 00:29:50,720
systems I see them as having the

00:29:44,870 --> 00:29:55,430
problems of transaction costs and and

00:29:50,720 --> 00:29:57,770
and cordon and insufficient coordination

00:29:55,430 --> 00:30:01,790
among developers I think it is possible

00:29:57,770 --> 00:30:04,610
to do an open-source bounty system that

00:30:01,790 --> 00:30:12,050
integrates with a futures market as well

00:30:04,610 --> 00:30:15,260
though the this is this is the demo in

00:30:12,050 --> 00:30:22,090
play money mode the actual blockchain is

00:30:15,260 --> 00:30:22,090
coming in the February March

00:30:28,090 --> 00:30:33,220
it'll be on the ethereum blockchain the

00:30:31,000 --> 00:30:36,779
etherion blockchain lets us run the type

00:30:33,220 --> 00:30:36,779
of smart contracts that we're doing here

00:31:23,600 --> 00:31:26,170
yeah

00:31:38,510 --> 00:31:45,140
well we we expect that people will be

00:31:41,360 --> 00:31:50,660
able to split up issues and trade issues

00:31:45,140 --> 00:31:53,150
at intermediate points between the

00:31:50,660 --> 00:31:55,220
starting and ending price so it's

00:31:53,150 --> 00:32:00,049
entirely possible that a maintainer or

00:31:55,220 --> 00:32:03,559
code reviewer might buy the fixed side

00:32:00,049 --> 00:32:06,559
of the contract before resolving it or

00:32:03,559 --> 00:32:08,330
it's possible that someone could own one

00:32:06,559 --> 00:32:11,360
of the contracts for a short time in

00:32:08,330 --> 00:32:14,200
order to write a failing test what we we

00:32:11,360 --> 00:32:18,320
don't we don't know which particular

00:32:14,200 --> 00:32:21,799
trading patterns are likely to be

00:32:18,320 --> 00:32:24,440
helpful what we do have is we just had

00:32:21,799 --> 00:32:26,570
an agreement to work with one of the

00:32:24,440 --> 00:32:29,360
major mounting systems providers one of

00:32:26,570 --> 00:32:32,330
the one of the open source bounding

00:32:29,360 --> 00:32:34,820
system that that's been up there for I

00:32:32,330 --> 00:32:36,919
think eight years now we're gonna be

00:32:34,820 --> 00:32:40,700
able to compare their history data

00:32:36,919 --> 00:32:42,380
against market data and see what kind of

00:32:40,700 --> 00:32:44,570
patterns people are able to take

00:32:42,380 --> 00:32:46,669
advantage with take advantage of with

00:32:44,570 --> 00:32:51,260
one system that they hadn't been able to

00:32:46,669 --> 00:32:53,470
do with the other okay yes question in

00:32:51,260 --> 00:32:53,470
the back

00:33:14,590 --> 00:33:18,970
okay the question is do you have to add

00:33:16,990 --> 00:33:23,080
the project to bug mark or can you just

00:33:18,970 --> 00:33:25,720
trade on it we realized that bug mark

00:33:23,080 --> 00:33:28,509
depends on project maintainer x' closing

00:33:25,720 --> 00:33:30,850
issues fairly and so we never want to

00:33:28,509 --> 00:33:34,659
get into the end of the situation where

00:33:30,850 --> 00:33:41,249
we're trading on a project without the

00:33:34,659 --> 00:33:47,049
awareness of the maintainer okay okay so

00:33:41,249 --> 00:33:50,230
in in bug mark the project maintainer is

00:33:47,049 --> 00:33:52,240
always going to have to sign up that

00:33:50,230 --> 00:33:55,299
project for bug mark we're not we're not

00:33:52,240 --> 00:33:57,309
just going to trade on things without

00:33:55,299 --> 00:33:59,529
the maintainer being involved and yes

00:33:57,309 --> 00:34:02,619
maintainer x' do have a lot of choices

00:33:59,529 --> 00:34:05,070
of incentivization systems that they can

00:34:02,619 --> 00:34:05,070
hook up to

00:34:08,200 --> 00:34:13,190
oh yes

00:34:10,349 --> 00:34:13,190
second

00:34:20,400 --> 00:34:26,220
they're quite okay the question is does

00:34:23,670 --> 00:34:29,550
the maintainer become a bottleneck the

00:34:26,220 --> 00:34:33,780
answer is yes if a project has a

00:34:29,550 --> 00:34:36,300
maintainer who's not reliably closing

00:34:33,780 --> 00:34:38,340
things in in a timeframe that would

00:34:36,300 --> 00:34:41,060
resolve that contract then that's going

00:34:38,340 --> 00:34:44,840
to make people extremely unlikely to

00:34:41,060 --> 00:34:47,130
want to trade on that and that's where

00:34:44,840 --> 00:34:49,770
open-source metrics like the Chaos

00:34:47,130 --> 00:34:52,410
project from Linux Foundation will help

00:34:49,770 --> 00:34:56,610
their there are situations where you can

00:34:52,410 --> 00:34:58,470
look at how responsive a project is how

00:34:56,610 --> 00:35:00,540
likely bugs are to be closed within a

00:34:58,470 --> 00:35:03,000
certain period of time and you can use

00:35:00,540 --> 00:35:05,610
that open-source metrics data to help

00:35:03,000 --> 00:35:08,550
decide a whether or not you want to

00:35:05,610 --> 00:35:11,370
participate in that market and B whether

00:35:08,550 --> 00:35:13,550
how far out you want to set the maturity

00:35:11,370 --> 00:35:13,550
date

00:35:28,740 --> 00:35:33,309
okay all right I think we're getting

00:35:31,569 --> 00:35:34,130
kicked out so thank you all very much

00:35:33,309 --> 00:35:40,400
for coming

00:35:34,130 --> 00:35:42,650
[Applause]

00:35:40,400 --> 00:35:44,920
and let me just switch back to my info

00:35:42,650 --> 00:35:44,920
there

00:35:49,390 --> 00:35:51,450
you

00:36:04,120 --> 00:36:06,180

YouTube URL: https://www.youtube.com/watch?v=8VwFyYE-KX4


