Title: Firefox: How to ship quality software
Publication date: 2018-02-23
Playlist: Mozilla at FOSDEM 2018
Description: 
	8000 new patches, a release every 6 weeks, how Mozilla does it?
Firefox: How to ship quality software
8000 new patches, a release every 6 weeks, how Mozilla does it?

Presented by Sylvestre Ledru.

First presented at FOSDEM, Feb 3, 2018. (https://fosdem.org/2018/schedule/event/mozilla_how_ship_quality_software/)

These talks have been recorded at FOSDEM (https://fosdem.org/) This work is licensed under the Creative Commons Attribution 2.0 Belgium Licence. To view a copy of this licence, visit:
https://creativecommons.org/licenses/by/2.0/be/deed.en
Captions: 
	00:00:04,830 --> 00:00:09,000
so if I'm not the first for the first

00:00:07,260 --> 00:00:11,550
French accent that you are going to hear

00:00:09,000 --> 00:00:13,290
today and not the last also so I'm

00:00:11,550 --> 00:00:14,940
French my name is Sylvester I'm in

00:00:13,290 --> 00:00:17,250
charge of the release management team at

00:00:14,940 --> 00:00:19,650
Nadia's so basically we are in south of

00:00:17,250 --> 00:00:23,730
making sure that Firefox shipping a

00:00:19,650 --> 00:00:26,160
great quality so before so before this

00:00:23,730 --> 00:00:28,860
guy I had some time off and I was doing

00:00:26,160 --> 00:00:30,899
that stuff so scuba diving so diver in

00:00:28,860 --> 00:00:33,180
the media is in the room by the way so

00:00:30,899 --> 00:00:34,920
Ivan I was doing that and I was also

00:00:33,180 --> 00:00:36,690
doing that stuff so this one is his I

00:00:34,920 --> 00:00:38,309
climb the Mont Blanc a few years ago and

00:00:36,690 --> 00:00:41,430
the mountain that you see is called

00:00:38,309 --> 00:00:43,800
mobile and attack you it's 800 meters

00:00:41,430 --> 00:00:45,390
wall that you climb at around 2:00 in

00:00:43,800 --> 00:00:47,640
the middle of the night is to TRADOC

00:00:45,390 --> 00:00:50,429
ano your life and you have a balance and

00:00:47,640 --> 00:00:51,629
people die every year over there so the

00:00:50,429 --> 00:00:54,089
point I want to make here is that

00:00:51,629 --> 00:00:56,519
Firefox is basically that so we we work

00:00:54,089 --> 00:00:59,519
with a shitload of developer we do a lot

00:00:56,519 --> 00:01:02,699
of thing in parallel so I will show you

00:00:59,519 --> 00:01:04,170
what we did with quantum floor the next

00:01:02,699 --> 00:01:06,180
speaker is going to tell you how we did

00:01:04,170 --> 00:01:07,950
that with performance my team is taking

00:01:06,180 --> 00:01:10,020
everything and we make sure that we ship

00:01:07,950 --> 00:01:11,940
Firefox in a great quality so it feel

00:01:10,020 --> 00:01:14,550
like climbing this mountain every six

00:01:11,940 --> 00:01:16,230
weeks that is a lot of fun so I first

00:01:14,550 --> 00:01:18,000
I'm going to tell you what is Firefox in

00:01:16,230 --> 00:01:20,550
terms of code and scale and what we do

00:01:18,000 --> 00:01:22,350
and and this kind of thing so first we

00:01:20,550 --> 00:01:24,540
make a release every six to eight weeks

00:01:22,350 --> 00:01:26,190
so in the past it was every six weeks so

00:01:24,540 --> 00:01:27,750
we had to work doing Christmas and so on

00:01:26,190 --> 00:01:29,070
and we say okay we are going not do

00:01:27,750 --> 00:01:31,680
going to do that anymore so we decided

00:01:29,070 --> 00:01:34,890
to move to a flexible schedule so now we

00:01:31,680 --> 00:01:38,100
ship with two months basically so it's a

00:01:34,890 --> 00:01:41,490
crazy rhythm like in the last year we

00:01:38,100 --> 00:01:43,890
hit seven major releases including the

00:01:41,490 --> 00:01:46,850
one that I've just presented and we ship

00:01:43,890 --> 00:01:49,440
26 minor releases

00:01:46,850 --> 00:01:53,040
it's probably one of the bigger software

00:01:49,440 --> 00:01:54,930
ever ever created by mankind it has some

00:01:53,040 --> 00:01:59,730
legacy and some technical technical

00:01:54,930 --> 00:02:01,440
check that we we unknowns well 20 years

00:01:59,730 --> 00:02:03,330
ago and escape announced that they were

00:02:01,440 --> 00:02:06,630
going to open another product we are

00:02:03,330 --> 00:02:09,119
still based on that product since the

00:02:06,630 --> 00:02:13,020
start well since we have the VCS history

00:02:09,119 --> 00:02:15,200
we made almost 400,000 commits by five

00:02:13,020 --> 00:02:17,819
more than five thousand developers

00:02:15,200 --> 00:02:21,390
eighteen million later card and we did

00:02:17,819 --> 00:02:23,069
60,000 commits last year's and by more

00:02:21,390 --> 00:02:26,069
than a thousand people so this cake is

00:02:23,069 --> 00:02:28,079
huge we have a lot of languages so the

00:02:26,069 --> 00:02:30,000
first one is obviously C++ we have

00:02:28,079 --> 00:02:32,280
service speed we use HTML also in the

00:02:30,000 --> 00:02:35,010
whole product and on the the last line

00:02:32,280 --> 00:02:38,310
that you see the spy this button sorry

00:02:35,010 --> 00:02:41,879
this button here does anyone knows what

00:02:38,310 --> 00:02:43,650
it is it's a big spike yeah exactly we

00:02:41,879 --> 00:02:45,870
are starting to hit pressed and it's

00:02:43,650 --> 00:02:46,379
amazing and you should not use C++ you

00:02:45,870 --> 00:02:48,900
should rest

00:02:46,379 --> 00:02:50,609
you should you right it's way better we

00:02:48,900 --> 00:02:53,670
have also somewhere else some assembly

00:02:50,609 --> 00:02:55,500
some GS we have some bash for ms-dos

00:02:53,670 --> 00:02:59,310
bash speed this kind of stuff so we have

00:02:55,500 --> 00:03:01,680
a lot of languages in our product and to

00:02:59,310 --> 00:03:04,950
give you a scale this is the number of

00:03:01,680 --> 00:03:08,069
patches which landed in every nightly

00:03:04,950 --> 00:03:12,109
cycle so again six to eight weeks for

00:03:08,069 --> 00:03:15,720
the last ten releases so 58 release had

00:03:12,109 --> 00:03:17,760
10,000 patches so remember not less than

00:03:15,720 --> 00:03:19,709
two months so the reason is crazy

00:03:17,760 --> 00:03:22,410
we have a lot of languages lot of

00:03:19,709 --> 00:03:25,799
Technology lot of new feature fixing bug

00:03:22,410 --> 00:03:28,349
introducing new bugs fixing performance

00:03:25,799 --> 00:03:30,620
regression introducing new performance

00:03:28,349 --> 00:03:34,019
regression so we do that all the time

00:03:30,620 --> 00:03:37,349
and we have a few tests so that is a the

00:03:34,019 --> 00:03:38,909
number you are among the first one to

00:03:37,349 --> 00:03:40,079
saw them I think most of my colleagues

00:03:38,909 --> 00:03:41,909
they don't know those number because

00:03:40,079 --> 00:03:45,629
they have been extracted a few hours ago

00:03:41,909 --> 00:03:50,099
so every time I push a new commit in

00:03:45,629 --> 00:03:52,049
Firefox it is 1500 hour of real machines

00:03:50,099 --> 00:03:53,849
that we do from my perspective it's

00:03:52,049 --> 00:03:55,260
about eight hours something like that to

00:03:53,849 --> 00:03:57,030
have the final result and know that I

00:03:55,260 --> 00:04:00,000
didn't break anything but we do that for

00:03:57,030 --> 00:04:02,400
pretty much every commit and in November

00:04:00,000 --> 00:04:04,949
we use November because people other

00:04:02,400 --> 00:04:06,209
people went on holidays during winter so

00:04:04,949 --> 00:04:10,139
that is the latest

00:04:06,209 --> 00:04:12,840
full moons that we have we had 300 euros

00:04:10,139 --> 00:04:14,760
of machine time so imagine the scale so

00:04:12,840 --> 00:04:17,400
imagine that the border that you are

00:04:14,760 --> 00:04:19,320
using so scale it's every month like

00:04:17,400 --> 00:04:22,169
that basically and it's increasing and

00:04:19,320 --> 00:04:24,870
increasing every year and every month so

00:04:22,169 --> 00:04:27,290
we use a lot of resources and even is

00:04:24,870 --> 00:04:30,470
that we we are still shipping with some

00:04:27,290 --> 00:04:33,050
sometimes so how we do that so we have

00:04:30,470 --> 00:04:34,520
basically was this three kind of QA so

00:04:33,050 --> 00:04:36,920
the first one is that we catch issue

00:04:34,520 --> 00:04:40,550
during the development phase then we

00:04:36,920 --> 00:04:45,320
have CI automated test test suite and so

00:04:40,550 --> 00:04:47,780
on and we have humans basically so I'm

00:04:45,320 --> 00:04:50,210
going to start with a with a nice part

00:04:47,780 --> 00:04:52,280
of the humans so parodies testing so the

00:04:50,210 --> 00:04:53,750
web is a crazy platform I I'm sure that

00:04:52,280 --> 00:04:56,840
you are all aware of that but it's

00:04:53,750 --> 00:04:59,090
always nice to remember that HTML you

00:04:56,840 --> 00:05:00,530
can do you can make plenty of HTML

00:04:59,090 --> 00:05:01,970
mistakes but at the end you will still

00:05:00,530 --> 00:05:03,680
have a web page if you do that with the

00:05:01,970 --> 00:05:05,870
purpose your compiler is going to insult

00:05:03,680 --> 00:05:07,670
you if you do that with worst the first

00:05:05,870 --> 00:05:10,550
line that you write you are going to be

00:05:07,670 --> 00:05:13,130
happy when it compiled CSS is the same

00:05:10,550 --> 00:05:15,890
it's hard to understand I have to ask

00:05:13,130 --> 00:05:17,630
colleague who knows everything about CSS

00:05:15,890 --> 00:05:21,920
at Mozilla to help me with some websites

00:05:17,630 --> 00:05:24,380
sometime javascript we all know the

00:05:21,920 --> 00:05:27,380
advantages and drawback of Java speed I

00:05:24,380 --> 00:05:30,590
won't about this language too much

00:05:27,380 --> 00:05:33,740
we are also managing a lot of image

00:05:30,590 --> 00:05:35,630
format video format network is crazy we

00:05:33,740 --> 00:05:38,300
are we are maintaining for operating

00:05:35,630 --> 00:05:41,480
systems with different architecture so

00:05:38,300 --> 00:05:44,600
it's the matrix of combination of every

00:05:41,480 --> 00:05:46,580
case that we have is impossible to test

00:05:44,600 --> 00:05:48,530
automatically so we you need you need

00:05:46,580 --> 00:05:51,950
humans at the end to test and to give us

00:05:48,530 --> 00:05:54,590
feedback so from in my team we manage

00:05:51,950 --> 00:05:56,210
the train model so we have I won't go

00:05:54,590 --> 00:05:57,980
into details I went at fault them like

00:05:56,210 --> 00:05:59,720
four years ago we were three years ago

00:05:57,980 --> 00:06:01,460
and I did a keynote on that so it's an

00:05:59,720 --> 00:06:03,230
hour I can talk like for four hours

00:06:01,460 --> 00:06:05,300
about that topics if you want but I

00:06:03,230 --> 00:06:07,100
won't so we have a train model we we are

00:06:05,300 --> 00:06:08,690
stuff landing in nightly we six-week we

00:06:07,100 --> 00:06:11,360
create beta and second we move that to

00:06:08,690 --> 00:06:13,790
release and we we take patches from

00:06:11,360 --> 00:06:17,840
central to beta to read it it's very

00:06:13,790 --> 00:06:20,300
difficult so we rely a lot on the user

00:06:17,840 --> 00:06:22,790
on the privileged channels so we have

00:06:20,300 --> 00:06:25,130
nicely we are doing also some experiment

00:06:22,790 --> 00:06:26,810
so sometimes in na'vi we arguing another

00:06:25,130 --> 00:06:28,400
channel we are going to send to some

00:06:26,810 --> 00:06:30,110
user in your feature and we are going to

00:06:28,400 --> 00:06:31,940
disable it it is what we did with

00:06:30,110 --> 00:06:34,190
dialogue that zone is presented before

00:06:31,940 --> 00:06:37,000
we enabled that to 10% of the population

00:06:34,190 --> 00:06:39,520
on nightly at the beginnings and we

00:06:37,000 --> 00:06:40,930
Sundberg we move to 50 then to 100 and

00:06:39,520 --> 00:06:43,420
we did the same for beta and then we did

00:06:40,930 --> 00:06:46,900
the same for we did so he FS it really

00:06:43,420 --> 00:06:49,030
helps us to catch a lot of issue now we

00:06:46,900 --> 00:06:50,890
have 290 per days in the past we were

00:06:49,030 --> 00:06:52,990
doing only one now we have so many

00:06:50,890 --> 00:06:54,940
commits and we have a lot of people in

00:06:52,990 --> 00:06:57,130
Europe so we prefer to have an IV also

00:06:54,940 --> 00:06:58,360
for European in the morning we don't

00:06:57,130 --> 00:07:02,230
have to wait until this windy afternoon

00:06:58,360 --> 00:07:04,660
every day and we do we have a lot of

00:07:02,230 --> 00:07:07,060
user or nightly so the native population

00:07:04,660 --> 00:07:09,190
a lot of company would kill just watch

00:07:07,060 --> 00:07:10,360
this user base so on beta it's even

00:07:09,190 --> 00:07:12,730
bigger we have millions and

00:07:10,360 --> 00:07:16,180
non-religious web bigger so it's crazy

00:07:12,730 --> 00:07:18,580
the scalar and the number of users here

00:07:16,180 --> 00:07:20,740
again you and I could talk to you about

00:07:18,580 --> 00:07:23,680
that for an hour about how we do manual

00:07:20,740 --> 00:07:25,660
QA so we have people who are testing the

00:07:23,680 --> 00:07:27,220
future I I know how they work and it's

00:07:25,660 --> 00:07:28,630
very impressive the kind of issues that

00:07:27,220 --> 00:07:29,890
we can find like if you click there and

00:07:28,630 --> 00:07:31,660
there and there and there you are going

00:07:29,890 --> 00:07:34,390
to add this bug and they have some

00:07:31,660 --> 00:07:36,250
amazing step to reproduce and we are

00:07:34,390 --> 00:07:38,260
using those wizard who decided the

00:07:36,250 --> 00:07:40,690
feature is ready to move on to the next

00:07:38,260 --> 00:07:43,810
train we do that all the time

00:07:40,690 --> 00:07:47,500
last year of Pascal presented at FOSDEM

00:07:43,810 --> 00:07:50,560
is his proposal about nicely and and to

00:07:47,500 --> 00:07:52,240
reboot the nike community I'm very happy

00:07:50,560 --> 00:07:55,930
to see that it was a success we doubled

00:07:52,240 --> 00:07:59,050
an IT population we reported almost 1200

00:07:55,930 --> 00:08:00,970
bugs and then so Twitter account which

00:07:59,050 --> 00:08:04,300
is a good metric on how people react

00:08:00,970 --> 00:08:09,580
what you are doing jump to a huge number

00:08:04,300 --> 00:08:10,990
so we it was very very helpful in 57 to

00:08:09,580 --> 00:08:14,740
make sure that we ship a great quality

00:08:10,990 --> 00:08:16,300
product we have a sauce on a bunch of

00:08:14,740 --> 00:08:18,610
people who are helping us with sumo

00:08:16,300 --> 00:08:20,919
social support media to gather feedback

00:08:18,610 --> 00:08:22,930
from user so I'm going to show you some

00:08:20,919 --> 00:08:24,910
of the stuff that we have to discover

00:08:22,930 --> 00:08:27,700
new issues like new crashes and these

00:08:24,910 --> 00:08:30,880
kind of things but in some cases like

00:08:27,700 --> 00:08:33,460
crappy graphic card and some antivirus

00:08:30,880 --> 00:08:36,490
issue sometimes we have like my firefox

00:08:33,460 --> 00:08:38,409
initial rank page and and we don't have

00:08:36,490 --> 00:08:40,060
any telemetry to identify that we don't

00:08:38,409 --> 00:08:42,430
have automation so we rely on user

00:08:40,060 --> 00:08:43,900
feedback and those people from the sumo

00:08:42,430 --> 00:08:46,480
teams are going to collect that feedback

00:08:43,900 --> 00:08:48,580
and bring that to us and say okay what

00:08:46,480 --> 00:08:49,830
should we do and in most of the cases

00:08:48,580 --> 00:08:51,810
they are able to pin

00:08:49,830 --> 00:08:54,450
exactly okay Jeff gasps perky Russian

00:08:51,810 --> 00:08:55,710
eggs and it is causing that issue I'm

00:08:54,450 --> 00:08:58,350
mentioning this one because we add that

00:08:55,710 --> 00:09:00,860
in 58 and it what one more time because

00:08:58,350 --> 00:09:03,420
of an energy virus

00:09:00,860 --> 00:09:06,930
we have also web combat

00:09:03,420 --> 00:09:09,570
so again rely on the community to report

00:09:06,930 --> 00:09:12,180
somebody like Firefox on Android is

00:09:09,570 --> 00:09:14,070
broken for Twitter I when I press this

00:09:12,180 --> 00:09:16,110
key and I go in this place I'm going to

00:09:14,070 --> 00:09:19,800
have twice this time later it is at back

00:09:16,110 --> 00:09:21,980
here so we reach out to web site to web

00:09:19,800 --> 00:09:26,340
developer and so on to fix the issue

00:09:21,980 --> 00:09:28,530
it's JavaScript or CSS or HTML I'd say

00:09:26,340 --> 00:09:31,920
it's very complex oh yeah we have a team

00:09:28,530 --> 00:09:35,370
we're doing that so now I'm going to

00:09:31,920 --> 00:09:38,820
move to one of my hobby I'm also

00:09:35,370 --> 00:09:41,190
involved in Chang so I'm a compiler guy

00:09:38,820 --> 00:09:42,930
I was complaining about C++ but and I'm

00:09:41,190 --> 00:09:46,980
involved in the C++ compiler myself

00:09:42,930 --> 00:09:48,600
though C++ and C are very like very hard

00:09:46,980 --> 00:09:51,000
languages so at Medea we have some

00:09:48,600 --> 00:09:52,950
amazing engineers and sometimes they say

00:09:51,000 --> 00:09:55,500
forget in the memory or they forget and

00:09:52,950 --> 00:09:57,060
you check and this kind of stuff in the

00:09:55,500 --> 00:09:58,470
data that's why we are developing right

00:09:57,060 --> 00:10:00,240
by the way so if you don't know about

00:09:58,470 --> 00:10:03,840
first we should try it and we play C++

00:10:00,240 --> 00:10:06,780
well so we detect we so we to mitigate

00:10:03,840 --> 00:10:10,410
that we developed and we deployed some

00:10:06,780 --> 00:10:13,770
tools to identify issue this one is an

00:10:10,410 --> 00:10:17,550
actual bug that I fixed in in NSS so

00:10:13,770 --> 00:10:20,040
which is used by Chrome Java Firefox

00:10:17,550 --> 00:10:21,900
reddit and a bunch of companies so they

00:10:20,040 --> 00:10:24,270
introduced a new argument and someone

00:10:21,900 --> 00:10:27,150
just forgot the comma here so it is

00:10:24,270 --> 00:10:28,290
totally stunned I see as what she is

00:10:27,150 --> 00:10:30,480
going to tell you is that they are going

00:10:28,290 --> 00:10:32,040
to concatenate the two string for human

00:10:30,480 --> 00:10:33,660
you know that it is stupid but for

00:10:32,040 --> 00:10:37,320
computer it makes sense so it is this

00:10:33,660 --> 00:10:40,080
kind of issue that we are finding the

00:10:37,320 --> 00:10:42,530
curl so we fixed most of them and we

00:10:40,080 --> 00:10:46,510
have automation to catch them it's a

00:10:42,530 --> 00:10:49,510
there are stupid languages so

00:10:46,510 --> 00:10:52,029
so we are also catching issue in our API

00:10:49,510 --> 00:10:54,820
how our base code is huge so we have

00:10:52,029 --> 00:10:56,589
some some tools which are going to check

00:10:54,820 --> 00:10:59,079
that you are not shooting yourself in

00:10:56,589 --> 00:11:02,829
the foot and we are also trying to limit

00:10:59,079 --> 00:11:04,510
the kata legacy as C++ 1114 introduce

00:11:02,829 --> 00:11:06,760
some new cool feature to simplify the

00:11:04,510 --> 00:11:08,470
code so we are warning to the developer

00:11:06,760 --> 00:11:12,130
thing okay you should write that this

00:11:08,470 --> 00:11:14,110
way instead of this way so in terms of

00:11:12,130 --> 00:11:15,730
tools so we are using clang analyzer

00:11:14,110 --> 00:11:18,910
which has been as father I know

00:11:15,730 --> 00:11:21,160
developed initially by Apple we have our

00:11:18,910 --> 00:11:22,300
own shaker which are also based on thing

00:11:21,160 --> 00:11:25,810
on lip lang

00:11:22,300 --> 00:11:29,470
so in that case we are we are taking

00:11:25,810 --> 00:11:32,139
some security hue values hoc API best

00:11:29,470 --> 00:11:34,029
practices and we are also using client

00:11:32,139 --> 00:11:35,889
ID and if you do see process I recommend

00:11:34,029 --> 00:11:37,930
that you use that tools as part of the

00:11:35,889 --> 00:11:40,480
see I think that is amazing and it is

00:11:37,930 --> 00:11:42,880
telling use and best practices coding

00:11:40,480 --> 00:11:44,860
style performance issue a great thing

00:11:42,880 --> 00:11:47,139
your code automatically from all version

00:11:44,860 --> 00:11:50,829
of C++ to the new one so we are

00:11:47,139 --> 00:11:52,089
contributing to those project and at the

00:11:50,829 --> 00:11:54,550
end when the code length we have also

00:11:52,089 --> 00:11:56,589
Coverity so that it's very expensive but

00:11:54,550 --> 00:11:59,430
they have a free version tour for free

00:11:56,589 --> 00:12:03,130
and open-source software so that is

00:11:59,430 --> 00:12:04,360
basically where we are at so here I know

00:12:03,130 --> 00:12:05,560
that someone is going to ask me the

00:12:04,360 --> 00:12:08,589
questions I'm going to answer before

00:12:05,560 --> 00:12:09,970
it's because of neither file which was

00:12:08,589 --> 00:12:11,829
was everywhere in the base code and

00:12:09,970 --> 00:12:12,430
cover Italy was thinking that it was the

00:12:11,829 --> 00:12:14,500
same issue

00:12:12,430 --> 00:12:17,199
it was duplicating the issue so that's

00:12:14,500 --> 00:12:19,089
why we have sometimes a big spike but we

00:12:17,199 --> 00:12:21,519
have been fixing slowly and slowly the

00:12:19,089 --> 00:12:22,750
backlog some of them were security hue

00:12:21,519 --> 00:12:26,380
some of them we have performance issues

00:12:22,750 --> 00:12:28,529
memory issue and so on so it is an a

00:12:26,380 --> 00:12:31,329
work that we are doing a lot and

00:12:28,529 --> 00:12:34,180
fortunately rust is fixing a bunch of

00:12:31,329 --> 00:12:36,499
those issue like an initializing

00:12:34,180 --> 00:12:40,009
available and threading issue and

00:12:36,499 --> 00:12:42,079
kind of things we have also as I said

00:12:40,009 --> 00:12:46,969
before we have a lot of languages in our

00:12:42,079 --> 00:12:48,859
product so we have now some linters of

00:12:46,969 --> 00:12:50,869
static analyzer depending on the way you

00:12:48,859 --> 00:12:53,479
want to call them for JavaScript or

00:12:50,869 --> 00:12:56,179
Python or Java for bash and for typos

00:12:53,479 --> 00:12:58,009
and what we did is that we introduced

00:12:56,179 --> 00:13:00,079
them as part of the review process at

00:12:58,009 --> 00:13:03,199
Medea so here it's a it's a custom

00:13:00,079 --> 00:13:05,689
checker from yes lint that recommends

00:13:03,199 --> 00:13:08,809
you to use another class object instead

00:13:05,689 --> 00:13:10,489
of the other one and we do that for

00:13:08,809 --> 00:13:14,089
every commit and for every commit we do

00:13:10,489 --> 00:13:17,299
C++ Java Script Python not yet Java but

00:13:14,089 --> 00:13:19,009
bash and Tycho takes about 12 minutes

00:13:17,299 --> 00:13:23,179
runs everything and we do that first one

00:13:19,009 --> 00:13:25,279
for every curve it so now I'm going to

00:13:23,179 --> 00:13:26,689
talk some about some things that most of

00:13:25,279 --> 00:13:28,969
you are already familiar with is

00:13:26,689 --> 00:13:31,699
crashing a disease so in Firefox when we

00:13:28,969 --> 00:13:33,439
do eat a crash you are going to have a

00:13:31,699 --> 00:13:34,819
window in the past was breaking your

00:13:33,439 --> 00:13:37,219
browser now it's just breaking your tab

00:13:34,819 --> 00:13:39,949
and if you click on send please do it

00:13:37,219 --> 00:13:41,899
it's very helpful for us we have a lot

00:13:39,949 --> 00:13:44,509
of automation which are going to use

00:13:41,899 --> 00:13:46,339
those data to identify what are the

00:13:44,509 --> 00:13:47,989
priority developer should work on so

00:13:46,339 --> 00:13:49,609
we're going to send the stuff to a

00:13:47,989 --> 00:13:51,799
platform we are doing some voodoo magic

00:13:49,609 --> 00:13:53,479
so basically just having the signature

00:13:51,799 --> 00:13:57,829
to make sure that we know that is the

00:13:53,479 --> 00:13:59,259
same issue at the end and and then we we

00:13:57,829 --> 00:14:02,539
have been working for the last two years

00:13:59,259 --> 00:14:05,179
oh so functions I will know that it is a

00:14:02,539 --> 00:14:09,199
detective and he is trying to find who's

00:14:05,179 --> 00:14:11,359
to fix to fix his study investigation so

00:14:09,199 --> 00:14:13,879
what we did is it was a stupid idea and

00:14:11,359 --> 00:14:16,039
as far as I know and not not any not

00:14:13,879 --> 00:14:18,259
many big project are doing that so we

00:14:16,039 --> 00:14:21,159
look at every new crash that we

00:14:18,259 --> 00:14:23,749
identified in in saco our platform we

00:14:21,159 --> 00:14:25,939
are going to extract a backtrack we have

00:14:23,749 --> 00:14:28,609
that from our tooling and then we are

00:14:25,939 --> 00:14:31,429
going to look at service a recent VCS

00:14:28,609 --> 00:14:32,989
history so mercurial orgeat and we are

00:14:31,429 --> 00:14:35,989
going to look at every patches which

00:14:32,989 --> 00:14:38,899
arrived and which line or which file and

00:14:35,989 --> 00:14:41,389
we sign the touch so at that moment we

00:14:38,899 --> 00:14:44,119
are going to match the two and see okay

00:14:41,389 --> 00:14:47,720
this patch we change it yesterday it's

00:14:44,119 --> 00:14:48,860
touching exactly the same file as which

00:14:47,720 --> 00:14:51,710
is mentioning the new

00:14:48,860 --> 00:14:54,110
so we have been able to report more than

00:14:51,710 --> 00:14:55,550
200 drugs and I don't know if you

00:14:54,110 --> 00:14:57,680
realize with the huge because usually

00:14:55,550 --> 00:14:59,420
this kind of bugs are going to be fixed

00:14:57,680 --> 00:15:01,040
only out better in widdy's when they

00:14:59,420 --> 00:15:03,980
impacted a lot of user but now we are

00:15:01,040 --> 00:15:05,570
able to fix them within 24 hours so it's

00:15:03,980 --> 00:15:07,130
huge and if you have big project

00:15:05,570 --> 00:15:10,130
discretion Alice's I recommend that you

00:15:07,130 --> 00:15:12,380
spend time doing that is and everything

00:15:10,130 --> 00:15:17,720
is open source we can we use it please

00:15:12,380 --> 00:15:19,250
contribute same as I know it is the

00:15:17,720 --> 00:15:21,440
first time that someone did that on the

00:15:19,250 --> 00:15:24,260
scale of Firefox we have code coverage I

00:15:21,440 --> 00:15:27,110
know that sound it sounds as pretty easy

00:15:24,260 --> 00:15:30,590
but on the scale of Firefox it's huge

00:15:27,110 --> 00:15:32,870
and and we you if you want it to do some

00:15:30,590 --> 00:15:34,220
JavaScript code coverage it was pretty

00:15:32,870 --> 00:15:36,200
hard you have to use some java

00:15:34,220 --> 00:15:39,380
application which will not maintain and

00:15:36,200 --> 00:15:41,470
so on so we we introduced the support in

00:15:39,380 --> 00:15:44,270
the in spider monkey like two years ago

00:15:41,470 --> 00:15:46,550
to do that Google announced at a few

00:15:44,270 --> 00:15:48,530
weeks ago for them and we had also to

00:15:46,550 --> 00:15:51,050
introduce the support of code covariance

00:15:48,530 --> 00:15:54,740
or s compiler and we had to patch GCC

00:15:51,050 --> 00:15:56,870
LLVM compiler RT and we had to develop a

00:15:54,740 --> 00:15:59,600
new tool will place alcove which was a

00:15:56,870 --> 00:16:01,310
perl script and it was taking 24 hours

00:15:59,600 --> 00:16:03,740
and obviously because we want to do that

00:16:01,310 --> 00:16:06,050
every day it doesn't scale so some guy

00:16:03,740 --> 00:16:07,550
in my team who is in the room will

00:16:06,050 --> 00:16:12,320
develop certain rest and it's taking

00:16:07,550 --> 00:16:13,820
five minutes so and once we once again

00:16:12,320 --> 00:16:16,100
it's open source it's not specific to

00:16:13,820 --> 00:16:19,160
Firefox so you can reuse it so in term

00:16:16,100 --> 00:16:22,670
of result we realize that C++ it's about

00:16:19,160 --> 00:16:24,950
55% code coverage so that means that 45%

00:16:22,670 --> 00:16:27,140
of the code in Firefox is not

00:16:24,950 --> 00:16:29,390
automatically tested so we have some

00:16:27,140 --> 00:16:31,130
sort of Easter's that we compile and we

00:16:29,390 --> 00:16:33,470
ship but we are not using them like some

00:16:31,130 --> 00:16:36,800
old codec or some libraries but it's

00:16:33,470 --> 00:16:39,440
still pretty bad percentage but in

00:16:36,800 --> 00:16:42,050
JavaScript a percentage is bi so in

00:16:39,440 --> 00:16:45,290
terms of comparison LLVM clang general

00:16:42,050 --> 00:16:48,710
DBS or code coverage is 80% but it's way

00:16:45,290 --> 00:16:50,839
easier to to test the compiler and web

00:16:48,710 --> 00:16:53,310
browser

00:16:50,839 --> 00:16:57,480
plus a side effect we also developed a

00:16:53,310 --> 00:16:58,050
tool tweed 95 which file have zero code

00:16:57,480 --> 00:17:00,600
coverage

00:16:58,050 --> 00:17:03,149
so either way it's a bird so either it's

00:17:00,600 --> 00:17:05,370
dead good or you don't have any test so

00:17:03,149 --> 00:17:07,230
you should do something about that so we

00:17:05,370 --> 00:17:10,439
we started that not a long time ago and

00:17:07,230 --> 00:17:13,079
we already remove 60 file and which I we

00:17:10,439 --> 00:17:14,730
were like ok so I'll use less but very

00:17:13,079 --> 00:17:18,780
still as you can see on the right hand

00:17:14,730 --> 00:17:20,910
side like graphics library we have a lot

00:17:18,780 --> 00:17:22,800
of files which are not listed many of

00:17:20,910 --> 00:17:25,050
them up because of subpart C code that

00:17:22,800 --> 00:17:26,880
we embed and we are not using it so we

00:17:25,050 --> 00:17:30,020
should investigate how to at least

00:17:26,880 --> 00:17:32,010
remove them from the pale-faced

00:17:30,020 --> 00:17:36,090
everything that I explained is also to

00:17:32,010 --> 00:17:38,160
limit in code legacy and the technical

00:17:36,090 --> 00:17:39,870
depth every small step is going to

00:17:38,160 --> 00:17:42,870
improve quality of the product as yeah

00:17:39,870 --> 00:17:44,520
it may seem trivial but if you if you

00:17:42,870 --> 00:17:46,530
consider that Firefox has been living

00:17:44,520 --> 00:17:48,630
for like 30 years with Netscape before

00:17:46,530 --> 00:17:50,580
and we hope that it's going to be the

00:17:48,630 --> 00:17:52,440
same time from the future you have to

00:17:50,580 --> 00:17:57,059
limit the introduction of dead code and

00:17:52,440 --> 00:17:59,160
stupid bugs and programming mistakes so

00:17:57,059 --> 00:18:00,900
I will go I'm mentioning that quickly

00:17:59,160 --> 00:18:02,610
I'm not a specialist in fuzzing we have

00:18:00,900 --> 00:18:05,490
a team dedicated to that so I'm using

00:18:02,610 --> 00:18:07,230
here it's a Sofer thing for people for

00:18:05,490 --> 00:18:09,120
my family is just basically sending

00:18:07,230 --> 00:18:11,040
stupid seeing stupid things to the

00:18:09,120 --> 00:18:14,070
compiler or to the JavaScript engine or

00:18:11,040 --> 00:18:15,870
to some API and finding bugs so for the

00:18:14,070 --> 00:18:18,780
last two years we discovered 600

00:18:15,870 --> 00:18:20,250
security issue thanks to that again if

00:18:18,780 --> 00:18:21,780
you are software developer and you are

00:18:20,250 --> 00:18:25,080
not using threading and you can use it

00:18:21,780 --> 00:18:27,870
you should investigate we have also some

00:18:25,080 --> 00:18:30,840
other best practices so we are compiling

00:18:27,870 --> 00:18:33,660
20 with clanked rank every day and we

00:18:30,840 --> 00:18:38,309
are using it to compile Firefox because

00:18:33,660 --> 00:18:40,020
new new new warnings and new checks are

00:18:38,309 --> 00:18:42,090
being introduced on a daily basis into

00:18:40,020 --> 00:18:45,630
compiler it is fixed shining some issue

00:18:42,090 --> 00:18:48,900
sometimes like shading but in many cases

00:18:45,630 --> 00:18:51,660
it has value and we also report bugs in

00:18:48,900 --> 00:18:53,730
the compiler so on here like six books

00:18:51,660 --> 00:18:54,660
or seven books that we reported on GCC

00:18:53,730 --> 00:18:56,940
and

00:18:54,660 --> 00:19:01,280
so we are also helping the community and

00:18:56,940 --> 00:19:01,280
also compiler it's a win-win situation

00:19:01,760 --> 00:19:07,620
we have automation also so we have a

00:19:04,230 --> 00:19:10,200
crazy CI yeah so when you are media

00:19:07,620 --> 00:19:13,020
developer and you do Firefox you are

00:19:10,200 --> 00:19:16,410
very familiar with this web interface so

00:19:13,020 --> 00:19:20,400
every letter mean a test fit all subsets

00:19:16,410 --> 00:19:23,700
of the test suite every black element is

00:19:20,400 --> 00:19:25,980
a platform basically so you have we have

00:19:23,700 --> 00:19:28,560
optimized Android no not tonight Android

00:19:25,980 --> 00:19:30,510
we have Linux optimized we have Linux PC

00:19:28,560 --> 00:19:32,580
o we have Linux debug we have that for

00:19:30,510 --> 00:19:36,000
Windows with different platform and so

00:19:32,580 --> 00:19:38,900
on so if it if this explains the 1500

00:19:36,000 --> 00:19:42,060
hours so it is we are doing that all day

00:19:38,900 --> 00:19:43,860
so we have also some here it's hard to

00:19:42,060 --> 00:19:45,960
see but here it's orange here it's

00:19:43,860 --> 00:19:47,760
reddish orange it's intermittent issue

00:19:45,960 --> 00:19:49,590
because we have so many multi-threading

00:19:47,760 --> 00:19:52,590
things in some cases we have which

00:19:49,590 --> 00:19:54,270
workers once every 1000 run for example

00:19:52,590 --> 00:19:56,820
so we have our engine we have people who

00:19:54,270 --> 00:19:59,160
are going to flag that went been usually

00:19:56,820 --> 00:20:02,780
you never not always sometime in so no

00:19:59,160 --> 00:20:06,360
range we don't so this is a scale of

00:20:02,780 --> 00:20:09,030
immediacy ID we do that at every commit

00:20:06,360 --> 00:20:11,160
and we have a developer we have the

00:20:09,030 --> 00:20:14,100
capability to trigger okay I just want

00:20:11,160 --> 00:20:16,860
this test suite on windows 32-bit

00:20:14,100 --> 00:20:18,300
optimized we have this capability and we

00:20:16,860 --> 00:20:20,370
use that a lot because we know that it

00:20:18,300 --> 00:20:25,500
is costing a bunch of money to the

00:20:20,370 --> 00:20:27,810
company despite all that so I show you

00:20:25,500 --> 00:20:29,520
everything that we are doing when I make

00:20:27,810 --> 00:20:31,020
the slide or like okay we are still

00:20:29,520 --> 00:20:33,510
shipping with plenty of issue but

00:20:31,020 --> 00:20:36,540
someone making did some stat and we

00:20:33,510 --> 00:20:40,290
realize that like our biggest issues the

00:20:36,540 --> 00:20:43,230
red stuff is antivirus so antivirus can

00:20:40,290 --> 00:20:45,150
be also malware or security or security

00:20:43,230 --> 00:20:46,740
software but we are fighting all the

00:20:45,150 --> 00:20:49,110
time because we don't want hold that

00:20:46,740 --> 00:20:51,210
it's the same so the blue stuff at the

00:20:49,110 --> 00:20:53,700
bottom is a hardware vendor driver

00:20:51,210 --> 00:20:55,980
understand graphics drivers so it is

00:20:53,700 --> 00:20:58,560
really the biggest issue that we are we

00:20:55,980 --> 00:21:00,240
have a huge test fit we have a lot of

00:20:58,560 --> 00:21:01,020
people testing the software we have a

00:21:00,240 --> 00:21:04,020
lot of tooling

00:21:01,020 --> 00:21:05,590
but really what is costing us a lot of

00:21:04,020 --> 00:21:07,929
time and a lot of money

00:21:05,590 --> 00:21:10,330
third party application who are trying

00:21:07,929 --> 00:21:11,980
to improve the life of our user but

00:21:10,330 --> 00:21:14,350
actually they are not yeah I is a

00:21:11,980 --> 00:21:17,320
crushing fire slowing down or showing a

00:21:14,350 --> 00:21:18,669
blank page like a shop and we are facing

00:21:17,320 --> 00:21:21,120
that all the time so it's the same with

00:21:18,669 --> 00:21:23,590
from i from google announced a similar

00:21:21,120 --> 00:21:25,960
initiative a few months ago and are

00:21:23,590 --> 00:21:27,700
fighting that if you have Firefox or

00:21:25,960 --> 00:21:30,130
Chrome are crashing on Windows usually

00:21:27,700 --> 00:21:31,270
windows it's probably not our fault it's

00:21:30,130 --> 00:21:33,549
probably not Google search is probably

00:21:31,270 --> 00:21:35,440
because of your crappy antivirus and

00:21:33,549 --> 00:21:37,960
there are we doing some nasty thing like

00:21:35,440 --> 00:21:39,850
security software's are going to plug

00:21:37,960 --> 00:21:41,890
into our DLL and they are going to

00:21:39,850 --> 00:21:43,990
gather a lot of information on what you

00:21:41,890 --> 00:21:45,539
are doing in your web browser and in

00:21:43,990 --> 00:21:47,470
case we change the brainy we layout

00:21:45,539 --> 00:21:49,270
security software doesn't know where to

00:21:47,470 --> 00:21:51,610
plug and it's going to crash my office

00:21:49,270 --> 00:21:53,679
so from the user perspective like oh but

00:21:51,610 --> 00:21:55,059
the other still ship the new release ah

00:21:53,679 --> 00:21:56,950
stupid about my Filofax

00:21:55,059 --> 00:22:01,990
it's not our fault in the user

00:21:56,950 --> 00:22:03,460
perspective it is and we are also we as

00:22:01,990 --> 00:22:07,809
I say widths impossible to test

00:22:03,460 --> 00:22:10,029
everything and the web ecosystem so

00:22:07,809 --> 00:22:12,760
sometimes we ship with fabrication one

00:22:10,029 --> 00:22:15,610
of them was East I wrote the CSS server

00:22:12,760 --> 00:22:17,799
CSS rendering engine we bought the web

00:22:15,610 --> 00:22:19,809
version of our club I promise we didn't

00:22:17,799 --> 00:22:21,340
do that on purpose but we are we are

00:22:19,809 --> 00:22:23,380
trying to fix that we already have a

00:22:21,340 --> 00:22:24,970
patch and so on but it is really the

00:22:23,380 --> 00:22:30,520
complexity of what is shipping a web

00:22:24,970 --> 00:22:33,250
browser so I know it took fast I'm done

00:22:30,520 --> 00:22:35,830
and I like to thank the people who did

00:22:33,250 --> 00:22:38,350
the stats for me I asked a buzzard a lot

00:22:35,830 --> 00:22:42,580
of people three of them are in the room

00:22:38,350 --> 00:22:44,350
and we are I'm using also the audience

00:22:42,580 --> 00:22:46,480
who say that we have twin terms the team

00:22:44,350 --> 00:22:48,039
want to work on static analyzer coz one

00:22:46,480 --> 00:22:51,520
the other one to work on code coverage

00:22:48,039 --> 00:22:55,289
so join us and if you want to contribute

00:22:51,520 --> 00:22:55,289
feel free to reach out to me

00:23:03,680 --> 00:23:05,950

YouTube URL: https://www.youtube.com/watch?v=SIUdVgARxzM


