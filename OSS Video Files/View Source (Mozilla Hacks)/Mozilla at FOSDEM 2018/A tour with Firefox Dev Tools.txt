Title: A tour with Firefox Dev Tools
Publication date: 2018-02-23
Playlist: Mozilla at FOSDEM 2018
Description: 
	Presented by Julien Wajsberg and Nicolas Chevobbe. 

First presented at FOSDEM, Feb 3, 2018. (https://fosdem.org/2018/schedule/event/mozilla_tour_firefox_developer_tools/)

These talks have been recorded at FOSDEM (https://fosdem.org/) This work is licensed under the Creative Commons Attribution 2.0 Belgium Licence. To view a copy of this licence, visit:
https://creativecommons.org/licenses/by/2.0/be/deed.en
Captions: 
	00:00:31,770 --> 00:00:38,800
thank you

00:00:33,070 --> 00:00:42,010
do you hear me well yeah okay so hello

00:00:38,800 --> 00:00:44,530
everyone I'm Nick Rashad a member of the

00:00:42,010 --> 00:00:46,510
Firefox dev tools camp and I'm working

00:00:44,530 --> 00:00:48,879
on the console for about two years now

00:00:46,510 --> 00:00:51,520
and a bit less than a year as Mozilla

00:00:48,879 --> 00:00:53,530
employee so today I will talk to you

00:00:51,520 --> 00:00:58,540
about what the Firefox dev tools and

00:00:53,530 --> 00:01:00,730
what we added in 2017 so the dev tools

00:00:58,540 --> 00:01:02,830
team is were so small about 15 people

00:01:00,730 --> 00:01:06,220
spread across the world and North

00:01:02,830 --> 00:01:11,950
America and what we have been up to in

00:01:06,220 --> 00:01:15,130
last year so basically a lot and I will

00:01:11,950 --> 00:01:17,440
try to not just have a dumb list of new

00:01:15,130 --> 00:01:21,880
features and that will make you fall

00:01:17,440 --> 00:01:26,110
asleep at this hour so we have this

00:01:21,880 --> 00:01:28,540
website we use to send contributors who

00:01:26,110 --> 00:01:31,119
when they want to work on the dev tools

00:01:28,540 --> 00:01:33,070
it show you the list of the bugs we have

00:01:31,119 --> 00:01:36,820
on the dev tools and you can filter them

00:01:33,070 --> 00:01:38,979
by tools and pick it this is a good

00:01:36,820 --> 00:01:42,430
first back to work on and or if they are

00:01:38,979 --> 00:01:45,340
month or to work on this bug so there

00:01:42,430 --> 00:01:47,619
are a few issues on this side which I

00:01:45,340 --> 00:01:49,600
want to fix using the Firefox dev tools

00:01:47,619 --> 00:01:53,109
and so at the same time I will show you

00:01:49,600 --> 00:01:54,820
feature we added last year so let's

00:01:53,109 --> 00:01:57,280
start with the design of this site using

00:01:54,820 --> 00:01:59,409
the inspector first thing you notice

00:01:57,280 --> 00:02:02,289
when you expect the inspector when you

00:01:59,409 --> 00:02:04,359
open the inspector is the new colors so

00:02:02,289 --> 00:02:07,299
it's a bit hard to spot here but we

00:02:04,359 --> 00:02:10,600
added a new photon design system which

00:02:07,299 --> 00:02:13,590
is the design system Firefox use for

00:02:10,600 --> 00:02:17,370
Firefox UI

00:02:13,590 --> 00:02:20,880
so the first issue I have is on this

00:02:17,370 --> 00:02:25,349
page I have a list of another length and

00:02:20,880 --> 00:02:27,810
I do have some space between my light

00:02:25,349 --> 00:02:31,230
and I don't know why because I didn't

00:02:27,810 --> 00:02:33,900
have any padding or margin and so when

00:02:31,230 --> 00:02:35,940
you open the inspector you can see that

00:02:33,900 --> 00:02:39,810
there is a little button with the dots

00:02:35,940 --> 00:02:45,959
inside which means it's a white space on

00:02:39,810 --> 00:02:47,100
the text node which takes 3.54 pixel so

00:02:45,959 --> 00:02:48,870
it might be interesting when you're

00:02:47,100 --> 00:02:52,019
designing something to know what there

00:02:48,870 --> 00:02:54,180
is some space between elements and if

00:02:52,019 --> 00:02:56,220
you want to know why there are white

00:02:54,180 --> 00:02:58,830
space no basically it's the way you

00:02:56,220 --> 00:03:03,260
holster your HTML code you can read

00:02:58,830 --> 00:03:03,260
Patrick bracelets first about it

00:03:03,410 --> 00:03:09,209
another thing that bother me here is the

00:03:05,849 --> 00:03:11,459
look of the animation so you can see the

00:03:09,209 --> 00:03:14,400
Firefox logo spinning when we are

00:03:11,459 --> 00:03:18,180
searching for this uploads we are

00:03:14,400 --> 00:03:23,519
rotating it and it's a bit linear and so

00:03:18,180 --> 00:03:25,290
maybe we can do things better so to work

00:03:23,519 --> 00:03:28,350
on the animation first I need to trigger

00:03:25,290 --> 00:03:31,260
it so I can do this in the UI by just

00:03:28,350 --> 00:03:35,940
trying to select the tool and see the

00:03:31,260 --> 00:03:38,630
logos thing but it's a bit separate

00:03:35,940 --> 00:03:41,880
limited things when the bugs are coming

00:03:38,630 --> 00:03:44,489
the animation stopped so I need to find

00:03:41,880 --> 00:03:49,040
a way to add the loading class to the

00:03:44,489 --> 00:03:51,810
body which triggers the animation so

00:03:49,040 --> 00:03:53,880
there is a button in the world view

00:03:51,810 --> 00:03:56,400
which is really hard to spot here but

00:03:53,880 --> 00:03:58,680
it's the dodge CLS button and when you

00:03:56,400 --> 00:04:00,989
click on it you will have an input where

00:03:58,680 --> 00:04:03,030
you can add a class and then it put it

00:04:00,989 --> 00:04:06,209
in a toggle with a checkbox behind it

00:04:03,030 --> 00:04:07,709
and you can toggle it and see the

00:04:06,209 --> 00:04:08,820
different stages in loading and not

00:04:07,709 --> 00:04:13,840
loading

00:04:08,820 --> 00:04:15,940
and this is not just limited to only one

00:04:13,840 --> 00:04:18,209
plus you have you can have multiple one

00:04:15,940 --> 00:04:22,090
so this page will have a dartboard and

00:04:18,209 --> 00:04:24,130
by doing that you can see how the dark

00:04:22,090 --> 00:04:28,660
and light board looks like with the

00:04:24,130 --> 00:04:31,810
animation or not so let's go back to the

00:04:28,660 --> 00:04:34,060
animation I made some changes tweaking

00:04:31,810 --> 00:04:36,610
the rules and now I have two properties

00:04:34,060 --> 00:04:39,460
animated which is transform scale and

00:04:36,610 --> 00:04:41,020
opacity with different easing so you can

00:04:39,460 --> 00:04:42,970
see the curves looks differently because

00:04:41,020 --> 00:04:46,450
they don't have the same easing function

00:04:42,970 --> 00:04:49,150
and I can hover those curves to see the

00:04:46,450 --> 00:04:52,090
animation properties or I can hover a

00:04:49,150 --> 00:04:55,060
specific key frame so you see low so the

00:04:52,090 --> 00:04:57,010
little circles in the bottom if you

00:04:55,060 --> 00:05:00,790
hover them you can see the property at

00:04:57,010 --> 00:05:02,650
this given time in the animation so the

00:05:00,790 --> 00:05:06,100
animation looks fine to me now let's

00:05:02,650 --> 00:05:08,290
move to something else another issue I

00:05:06,100 --> 00:05:10,660
see on this page it could be better for

00:05:08,290 --> 00:05:12,730
first site contributors we used to send

00:05:10,660 --> 00:05:15,760
people here and say ok find the backpack

00:05:12,730 --> 00:05:19,180
it's a bit weird we have some links at

00:05:15,760 --> 00:05:21,760
the top to say ok how to install Firefox

00:05:19,180 --> 00:05:25,690
and build it like that but it could be

00:05:21,760 --> 00:05:28,260
better so maybe you can try to have a

00:05:25,690 --> 00:05:31,210
landing page for assign contributors and

00:05:28,260 --> 00:05:34,780
so they have a better sense of what the

00:05:31,210 --> 00:05:38,050
page is about so here I just build an

00:05:34,780 --> 00:05:40,060
unstyled a landing page and we are going

00:05:38,050 --> 00:05:43,510
to set up some rules using the inspector

00:05:40,060 --> 00:05:46,420
to make it better so first we want to

00:05:43,510 --> 00:05:48,280
have a nice branded gradient color so I

00:05:46,420 --> 00:05:50,620
have this CSS custom properties which

00:05:48,280 --> 00:05:54,980
are extracted from the photon design

00:05:50,620 --> 00:05:57,980
system see - - blue 50 and so on

00:05:54,980 --> 00:06:00,170
so I can go to the world view in type

00:05:57,980 --> 00:06:03,620
like right hand like linear or gradient

00:06:00,170 --> 00:06:06,770
and parentheses in then - - and it will

00:06:03,620 --> 00:06:08,570
ultimately give me a list of all the

00:06:06,770 --> 00:06:12,020
different variables I set in my page

00:06:08,570 --> 00:06:14,840
which is quite nice and then I can hover

00:06:12,020 --> 00:06:17,090
a specific variable in my review to see

00:06:14,840 --> 00:06:22,610
what its value is so here I can note

00:06:17,090 --> 00:06:24,890
that - - white is white very helpful for

00:06:22,610 --> 00:06:27,470
more branded look I wanted to use the

00:06:24,890 --> 00:06:29,300
Zilla found on this page so Zilla is the

00:06:27,470 --> 00:06:32,180
phone that is used on the new mozilla

00:06:29,300 --> 00:06:34,220
logo and something that landed just a

00:06:32,180 --> 00:06:36,350
few weeks ago in the inspector is that

00:06:34,220 --> 00:06:39,020
the font that is being used on a given

00:06:36,350 --> 00:06:40,820
element is underlined so here we can see

00:06:39,020 --> 00:06:42,620
the Zillah Zillah flat font is

00:06:40,820 --> 00:06:45,860
underlined which means it's the font you

00:06:42,620 --> 00:06:47,750
are being served and its really nice so

00:06:45,860 --> 00:06:49,820
you can spot if you are missing the font

00:06:47,750 --> 00:06:53,540
if it's not installed on your computer

00:06:49,820 --> 00:06:56,920
or if the remote font wasn't able to

00:06:53,540 --> 00:06:56,920
being downloaded for example

00:07:00,590 --> 00:07:04,700
which makes me think you can go to the

00:07:02,450 --> 00:07:07,970
font panel and check the font properties

00:07:04,700 --> 00:07:10,340
and you can even enter a custom text to

00:07:07,970 --> 00:07:14,060
see what the font looks like like here I

00:07:10,340 --> 00:07:16,400
just put Firefox files for good and so

00:07:14,060 --> 00:07:18,350
this is the first is system font which

00:07:16,400 --> 00:07:20,750
means a phone that is installed on my

00:07:18,350 --> 00:07:23,060
computer but if you have a remote found

00:07:20,750 --> 00:07:28,760
you can see over properties like the

00:07:23,060 --> 00:07:30,860
font face declaration so now let's get

00:07:28,760 --> 00:07:33,770
to the bigger part of the inspector this

00:07:30,860 --> 00:07:35,990
year CSS grid is a set of new properties

00:07:33,770 --> 00:07:38,630
that lets you declare the out in a much

00:07:35,990 --> 00:07:39,830
simpler way that we used to if you are

00:07:38,630 --> 00:07:41,120
not familiar with which you can check

00:07:39,830 --> 00:07:43,610
the work of Jane Simons

00:07:41,120 --> 00:07:46,550
Rachel Andrews and whispers just name a

00:07:43,610 --> 00:07:48,979
few who put terrific results online to

00:07:46,550 --> 00:07:54,470
learn CSS grids and by the way a whole

00:07:48,979 --> 00:07:56,389
my slider that builds using CSS grid so

00:07:54,470 --> 00:07:59,570
I want to use it as well for my landing

00:07:56,389 --> 00:08:04,100
page so let's put display grid on the

00:07:59,570 --> 00:08:07,130
container and then you can see there's a

00:08:04,100 --> 00:08:08,900
little button next to it how you salt it

00:08:07,130 --> 00:08:11,510
and when it's click it shows the

00:08:08,900 --> 00:08:13,850
boundaries of my grid elements it's how

00:08:11,510 --> 00:08:17,090
to spot now but then I can change the

00:08:13,850 --> 00:08:19,100
color of this boundaries and put it a

00:08:17,090 --> 00:08:23,630
white for example so it might be more

00:08:19,100 --> 00:08:26,060
noticeable yeah not so much but we can

00:08:23,630 --> 00:08:29,020
see some lines and it's all about the

00:08:26,060 --> 00:08:29,020
boundaries of your grid

00:08:29,680 --> 00:08:34,100
then I'm going to share a little secret

00:08:32,060 --> 00:08:36,800
with you we are working on the waite for

00:08:34,100 --> 00:08:39,920
three panels at the same time on the

00:08:36,800 --> 00:08:42,230
inspector this way you can see and set

00:08:39,920 --> 00:08:44,000
things even more easily so here opened

00:08:42,230 --> 00:08:46,460
the third panel and I can see both my

00:08:44,000 --> 00:08:49,400
walls where I will put my grid

00:08:46,460 --> 00:08:56,300
properties and the layout panel where

00:08:49,400 --> 00:08:58,520
the actual layout of my grid is so I can

00:08:56,300 --> 00:09:02,720
declare a simple template of four

00:08:58,520 --> 00:09:06,170
columns so it's grid - template

00:09:02,720 --> 00:09:09,050
- columns and then some syntax you do

00:09:06,170 --> 00:09:11,660
not have to learn now but then you can

00:09:09,050 --> 00:09:14,900
see both the content and the layout

00:09:11,660 --> 00:09:17,480
panel our updated in real time and in

00:09:14,900 --> 00:09:19,640
the layout panel I can over those

00:09:17,480 --> 00:09:21,560
columns and it's highlighted directing

00:09:19,640 --> 00:09:26,420
the content page as well so you can spot

00:09:21,560 --> 00:09:28,790
where your things or and then I can just

00:09:26,420 --> 00:09:34,070
play with my element and place them in

00:09:28,790 --> 00:09:35,690
the grid so you see the little kind of

00:09:34,070 --> 00:09:39,950
button on the content page

00:09:35,690 --> 00:09:42,170
it's the column and lines number so when

00:09:39,950 --> 00:09:44,270
I'm on an element I can then place it

00:09:42,170 --> 00:09:47,480
using those line as references for

00:09:44,270 --> 00:09:50,270
example my title I put it starting at

00:09:47,480 --> 00:09:53,900
the first column and ending at the minus

00:09:50,270 --> 00:09:55,790
one colon which is the last one and I

00:09:53,900 --> 00:09:58,520
can do the same with the other element

00:09:55,790 --> 00:10:01,520
so the logo I just put it in the second

00:09:58,520 --> 00:10:06,980
column which is now is good

00:10:01,520 --> 00:10:09,380
and the link that's on the right at the

00:10:06,980 --> 00:10:12,339
bottom so it's nice and then I just

00:10:09,380 --> 00:10:15,339
paste something I saw on internet for

00:10:12,339 --> 00:10:18,790
using flexbox property that is looking

00:10:15,339 --> 00:10:21,100
nice and if you are like me and our

00:10:18,790 --> 00:10:23,170
computer flexbox we are also working on

00:10:21,100 --> 00:10:26,999
a flexible inspector so you might be

00:10:23,170 --> 00:10:26,999
able to see it during this year

00:10:27,779 --> 00:10:33,879
one last nice trick in the good

00:10:30,579 --> 00:10:36,339
inspector in my CSS I declare some areas

00:10:33,879 --> 00:10:39,579
so I can name areas instead of dealing

00:10:36,339 --> 00:10:42,189
with line and color numbers and so there

00:10:39,579 --> 00:10:45,399
is a little check box in the UI to

00:10:42,189 --> 00:10:47,079
display area names and when clicked you

00:10:45,399 --> 00:10:49,749
can see the names are diverging the

00:10:47,079 --> 00:10:58,209
contact page and you can see which cells

00:10:49,749 --> 00:11:00,899
as which name so things are going pretty

00:10:58,209 --> 00:11:03,730
good I think but we can do even better

00:11:00,899 --> 00:11:05,470
so there's an experiment all properties

00:11:03,730 --> 00:11:08,410
called shape outside which lets you

00:11:05,470 --> 00:11:10,660
define non boxy shape for content to

00:11:08,410 --> 00:11:14,139
float against so basically here I have a

00:11:10,660 --> 00:11:19,959
float div with the shape outside set to

00:11:14,139 --> 00:11:25,209
circle through it and if I click it it

00:11:19,959 --> 00:11:27,309
will show me the the shape the stokehole

00:11:25,209 --> 00:11:30,759
shape and then I can move it so the

00:11:27,309 --> 00:11:33,279
video is over but there is a circle and

00:11:30,759 --> 00:11:35,439
I can move it around or grow it and you

00:11:33,279 --> 00:11:40,319
see the content flowing at the same time

00:11:35,439 --> 00:11:40,319
as I manipulate this circle this

00:11:40,720 --> 00:11:46,160
and the other type of shape like

00:11:43,790 --> 00:11:49,010
polygons and we do have a shape editor

00:11:46,160 --> 00:11:52,460
as well so you can add points and move

00:11:49,010 --> 00:11:54,640
them and see the content flow across the

00:11:52,460 --> 00:11:54,640
screen

00:11:55,750 --> 00:12:03,850
okay so I think we have a good landing

00:11:58,180 --> 00:12:05,589
page now so what's next I heard there

00:12:03,850 --> 00:12:08,949
was a small library and it's called

00:12:05,589 --> 00:12:12,310
react make very small company so I want

00:12:08,949 --> 00:12:13,899
to try it out on the face and because we

00:12:12,310 --> 00:12:17,680
are building something with JavaScript I

00:12:13,899 --> 00:12:19,779
think we have to use the debugger so

00:12:17,680 --> 00:12:22,089
let's here we shipped a new debugger hi

00:12:19,779 --> 00:12:24,100
using reaction Redux which allow us to

00:12:22,089 --> 00:12:25,990
iterate quickly and also have lots of

00:12:24,100 --> 00:12:31,269
contribution because people are used to

00:12:25,990 --> 00:12:33,639
reduce those technologies so something

00:12:31,269 --> 00:12:37,720
in my page isn't working hand I can't

00:12:33,639 --> 00:12:41,860
have the loading for some reason and I

00:12:37,720 --> 00:12:44,019
don't know why so I open the debugger

00:12:41,860 --> 00:12:46,389
and maybe just because I don't know what

00:12:44,019 --> 00:12:49,240
to look after and there is a little

00:12:46,389 --> 00:12:53,019
button to the question mark when clicked

00:12:49,240 --> 00:12:55,329
show me the shortcuts on the app and it

00:12:53,019 --> 00:12:57,699
tells me I can do command P to search

00:12:55,329 --> 00:12:59,949
for files ok let's do that but then I

00:12:57,699 --> 00:13:02,259
remember I don't know which file to look

00:12:59,949 --> 00:13:04,240
at so maybe let's try something else I

00:13:02,259 --> 00:13:06,100
know something is wrong we have an input

00:13:04,240 --> 00:13:09,100
because it's when I click the input that

00:13:06,100 --> 00:13:11,470
something must be loading and so I tried

00:13:09,100 --> 00:13:14,649
to search the entire project for input

00:13:11,470 --> 00:13:16,720
and I got this nice view of all the

00:13:14,649 --> 00:13:19,870
input iteration like in sublime or in

00:13:16,720 --> 00:13:22,889
years code but there is multiple of them

00:13:19,870 --> 00:13:26,019
and I don't know which one to choose

00:13:22,889 --> 00:13:28,240
so another way to see what's happening

00:13:26,019 --> 00:13:32,050
for events is to look at the inspector

00:13:28,240 --> 00:13:35,350
and spot the even the walls on nodes so

00:13:32,050 --> 00:13:39,250
here I choose I inspect the input and I

00:13:35,350 --> 00:13:42,700
see a little icon and one click I can

00:13:39,250 --> 00:13:44,530
see there is multiple even

00:13:42,700 --> 00:13:46,570
to it like and the one I'm looking for

00:13:44,530 --> 00:13:50,620
is unchanged and I can then jump to the

00:13:46,570 --> 00:13:51,280
debugger using that okay I'm now in the

00:13:50,620 --> 00:13:53,950
debugger

00:13:51,280 --> 00:13:56,610
that's called looking at the right file

00:13:53,950 --> 00:14:00,790
or maybe not in the screenshot but I am

00:13:56,610 --> 00:14:02,770
and I can feel nice sourcetree we used

00:14:00,790 --> 00:14:04,480
to have on your list of scripts in the

00:14:02,770 --> 00:14:08,020
old debugger which was really hard to

00:14:04,480 --> 00:14:10,210
navigate now it's really nice free and

00:14:08,020 --> 00:14:12,280
you can even see that we are using

00:14:10,210 --> 00:14:14,920
source map and we have the big bundle

00:14:12,280 --> 00:14:17,590
file but everything is shown in the web

00:14:14,920 --> 00:14:19,480
pack to show the original files and

00:14:17,590 --> 00:14:22,570
original path so I can navigate like I

00:14:19,480 --> 00:14:25,810
do in my editor for example and you can

00:14:22,570 --> 00:14:28,180
also collapse things and expand and

00:14:25,810 --> 00:14:29,670
director with all that click it will

00:14:28,180 --> 00:14:34,840
expand the whole directory

00:14:29,670 --> 00:14:37,090
it's pretty nice and now that I'm in

00:14:34,840 --> 00:14:40,090
this file I can have a look at the

00:14:37,090 --> 00:14:42,550
outline view so in the left I can see

00:14:40,090 --> 00:14:45,130
there is a class this component sidebar

00:14:42,550 --> 00:14:47,470
and a list of function and when I click

00:14:45,130 --> 00:14:49,960
on a function I can navigate to it in

00:14:47,470 --> 00:14:52,930
the debugger which is called to just

00:14:49,960 --> 00:14:55,030
navigate for a file this one is pretty

00:14:52,930 --> 00:14:57,900
small but you can have huge file and

00:14:55,030 --> 00:14:57,900
it's very own health

00:14:58,230 --> 00:15:04,980
by the way maybe hard to notice from

00:15:00,990 --> 00:15:08,850
your but do you see how nice the code

00:15:04,980 --> 00:15:12,350
looks like I use JSX it's all

00:15:08,850 --> 00:15:15,630
highlighted and nice filling very crisp

00:15:12,350 --> 00:15:18,060
it also work on typescript CoffeeScript

00:15:15,630 --> 00:15:23,639
and even C files we used to highlight

00:15:18,060 --> 00:15:26,399
everything basically and when working

00:15:23,639 --> 00:15:29,430
with source map eyes I can just jump to

00:15:26,399 --> 00:15:32,160
the generated location so I can look how

00:15:29,430 --> 00:15:37,010
my code is being developed generated in

00:15:32,160 --> 00:15:37,010
this huge file of more than 20,000 lines

00:15:37,300 --> 00:15:42,370
okay back to the faulty function so I

00:15:39,700 --> 00:15:44,800
set up a breakpoint in it I selected a

00:15:42,370 --> 00:15:47,140
tool and now well paused in the debugger

00:15:44,800 --> 00:15:49,630
and I can see the stack trace on the

00:15:47,140 --> 00:15:53,110
right which is quite nice because all

00:15:49,630 --> 00:15:55,570
the reacts calls are grouped into a

00:15:53,110 --> 00:15:58,060
single items and I can expand it if I

00:15:55,570 --> 00:15:59,410
need to see reacting channels but most

00:15:58,060 --> 00:16:02,080
of the time I don't care about what

00:15:59,410 --> 00:16:04,480
react is doing so they are nicely group

00:16:02,080 --> 00:16:07,240
it's not only for react to do it for

00:16:04,480 --> 00:16:09,490
readings as well and immutable and other

00:16:07,240 --> 00:16:11,640
libraries with support like maybe 20 of

00:16:09,490 --> 00:16:11,640
them

00:16:13,970 --> 00:16:19,850
another nice thing is that even if I

00:16:15,830 --> 00:16:22,730
mean in an original file and the even

00:16:19,850 --> 00:16:25,100
variable has been renamed to e I can

00:16:22,730 --> 00:16:27,140
still evaluate even in the watched

00:16:25,100 --> 00:16:29,690
expression and access properties on is

00:16:27,140 --> 00:16:33,700
so I'm not restricting restricted by

00:16:29,690 --> 00:16:33,700
saucepot having Rene in my file

00:16:38,560 --> 00:16:44,170
so basically when you when you debug

00:16:41,980 --> 00:16:47,709
something it involves a lot of clicking

00:16:44,170 --> 00:16:50,439
on step in step out step over button to

00:16:47,709 --> 00:16:52,810
get to the actual point where you see

00:16:50,439 --> 00:16:55,300
the line you're interested in and it

00:16:52,810 --> 00:16:58,089
might be cumbersome so now you can click

00:16:55,300 --> 00:17:01,089
on the gutter on the line you interested

00:16:58,089 --> 00:17:03,399
to go to when you are paused and select

00:17:01,089 --> 00:17:06,010
continue to hear so it will jump to

00:17:03,399 --> 00:17:13,150
directly to the expression you want you

00:17:06,010 --> 00:17:15,730
to go to if it's in the right path so I

00:17:13,150 --> 00:17:17,980
know what was the problem on my function

00:17:15,730 --> 00:17:20,559
basically it was the this isn't defined

00:17:17,980 --> 00:17:24,010
and it's because we are asked you to

00:17:20,559 --> 00:17:26,500
bind all your methods so it can works

00:17:24,010 --> 00:17:30,190
properly with events so here

00:17:26,500 --> 00:17:34,179
I just found my method in a constructor

00:17:30,190 --> 00:17:36,700
and do you notice what happened just

00:17:34,179 --> 00:17:40,480
like I reloaded and breakpoint wasn't

00:17:36,700 --> 00:17:42,940
9:14 and when I go on line 18 and I did

00:17:40,480 --> 00:17:44,200
not do anything for that so that's

00:17:42,940 --> 00:17:46,840
because we have something in the

00:17:44,200 --> 00:17:49,360
debugger called ESET breakpoint so bring

00:17:46,840 --> 00:17:56,679
point is not located anymore just on a

00:17:49,360 --> 00:17:59,950
simple file plus line number it's sorry

00:17:56,679 --> 00:18:03,570
it's reference also by an AC location

00:17:59,950 --> 00:18:06,070
which means here in this case it's the

00:18:03,570 --> 00:18:08,980
variable the search burg variable

00:18:06,070 --> 00:18:11,830
assignment in the on component change

00:18:08,980 --> 00:18:15,010
method so when you reload we try to spot

00:18:11,830 --> 00:18:15,880
that very specific instruction and not

00:18:15,010 --> 00:18:17,919
just a line number

00:18:15,880 --> 00:18:20,289
it's very nice so when you iterate over

00:18:17,919 --> 00:18:22,809
your code and try to fix bug you don't

00:18:20,289 --> 00:18:24,530
have to deal your breakpoint on or see

00:18:22,809 --> 00:18:26,780
the breakpoint being on

00:18:24,530 --> 00:18:31,340
to tell you one place and pause when you

00:18:26,780 --> 00:18:33,020
don't want it to pause and I try to

00:18:31,340 --> 00:18:35,330
integrate wise I'm on this website man I

00:18:33,020 --> 00:18:37,130
I fell short of IDs so I just put a nice

00:18:35,330 --> 00:18:40,280
picture of see for me not Fibonacci

00:18:37,130 --> 00:18:43,340
function running in the browser and it's

00:18:40,280 --> 00:18:46,670
nice and highlighted and you can even

00:18:43,340 --> 00:18:48,770
pause on it we also have a rest support

00:18:46,670 --> 00:18:54,020
I think but we don't have a lighter for

00:18:48,770 --> 00:18:57,520
now so didn't show so finally fix my

00:18:54,020 --> 00:18:57,520
react bug great

00:18:58,980 --> 00:19:04,950
so one thing that I want to fix now is

00:19:00,900 --> 00:19:08,940
the contributor so on the right you can

00:19:04,950 --> 00:19:11,790
see there is a list of people this is

00:19:08,940 --> 00:19:14,400
the list of people who fix the bird on

00:19:11,790 --> 00:19:18,210
Bugzilla during the last 30 days

00:19:14,400 --> 00:19:20,580
well not on the staff but we also have

00:19:18,210 --> 00:19:22,410
code which are not on the

00:19:20,580 --> 00:19:24,510
mozilla-central repo we do have

00:19:22,410 --> 00:19:27,270
repository on github and or the dev

00:19:24,510 --> 00:19:30,000
tools HTML organization so maybe it will

00:19:27,270 --> 00:19:34,680
be nice to see contributors to this

00:19:30,000 --> 00:19:37,260
report show up here also so I made a

00:19:34,680 --> 00:19:39,330
call to the github API to get all the

00:19:37,260 --> 00:19:42,030
repos we have for the dev tools HTML

00:19:39,330 --> 00:19:44,310
organization and I get something back

00:19:42,030 --> 00:19:49,290
but I don't really know how to operate

00:19:44,310 --> 00:19:51,660
from this point so let's see what we can

00:19:49,290 --> 00:19:55,560
do with the console to better understand

00:19:51,660 --> 00:19:57,600
what I can do with this data this year

00:19:55,560 --> 00:19:59,550
we also shipped a new console virtually

00:19:57,600 --> 00:20:03,690
no design so you can really focus on the

00:19:59,550 --> 00:20:05,610
Lord yep sorry and it has the same

00:20:03,690 --> 00:20:08,490
colors as the rest of GT of course which

00:20:05,610 --> 00:20:11,040
are pretty nice you can also see that

00:20:08,490 --> 00:20:14,250
the perfect load option has been moved

00:20:11,040 --> 00:20:15,780
to the UI so if you click it when you

00:20:14,250 --> 00:20:18,290
reload the page you want see your loads

00:20:15,780 --> 00:20:18,290
disappear

00:20:18,610 --> 00:20:23,290
so previously had filtered of the wrong

00:20:21,370 --> 00:20:26,530
messages I don't really know why but and

00:20:23,290 --> 00:20:29,380
you can see the UI did I it helped me

00:20:26,530 --> 00:20:33,310
that some messages were hidden and there

00:20:29,380 --> 00:20:35,650
was a UI like a button I can click and

00:20:33,310 --> 00:20:39,250
which will reset the filters the default

00:20:35,650 --> 00:20:42,640
state which could have been helpful when

00:20:39,250 --> 00:20:44,200
digging my react bug because here I see

00:20:42,640 --> 00:20:47,820
an error message taking me to the

00:20:44,200 --> 00:20:51,520
correct chaotic file so all the tag ways

00:20:47,820 --> 00:20:54,160
and there's even a long molding which

00:20:51,520 --> 00:20:58,050
will take me to the MDM pages so I can

00:20:54,160 --> 00:21:01,210
have better sense about the liberal pace

00:20:58,050 --> 00:21:03,670
and since we are in the console I can

00:21:01,210 --> 00:21:05,710
see I added red X logo to my page so

00:21:03,670 --> 00:21:08,650
basically when you're using video exits

00:21:05,710 --> 00:21:12,460
its pounds all the action and you fire

00:21:08,650 --> 00:21:14,410
and in a nice way and it looks nice and

00:21:12,460 --> 00:21:16,930
it's because of two things we added in

00:21:14,410 --> 00:21:18,670
the console last year which is consult

00:21:16,930 --> 00:21:20,710
that group and they were already

00:21:18,670 --> 00:21:22,810
supported but you couldn't collapse a

00:21:20,710 --> 00:21:25,330
group which was making them almost

00:21:22,810 --> 00:21:27,970
useless now you can expand and collect

00:21:25,330 --> 00:21:30,280
them as you wish and the followers to

00:21:27,970 --> 00:21:33,520
support control that group collapsed as

00:21:30,280 --> 00:21:36,250
well which makes which creates a group

00:21:33,520 --> 00:21:40,260
that sorted collapsed by default like

00:21:36,250 --> 00:21:40,260
the big group you can see in the image

00:21:40,850 --> 00:21:45,940
the second thing we added was style

00:21:43,429 --> 00:21:48,799
comes out that group so we hopefully had

00:21:45,940 --> 00:21:51,529
tile consult that clog but not for group

00:21:48,799 --> 00:21:54,919
this is now fixed and if you don't know

00:21:51,529 --> 00:21:58,009
tile console dot log it's a nice little

00:21:54,919 --> 00:22:00,380
thing that lets you take part of your

00:21:58,009 --> 00:22:04,009
messages like style ports of limousines

00:22:00,380 --> 00:22:06,980
and using theater properties so here we

00:22:04,009 --> 00:22:09,919
have control o'clock person C hello

00:22:06,980 --> 00:22:13,639
person C war and color red and Prabhu

00:22:09,919 --> 00:22:17,509
and basically it will output red hello

00:22:13,639 --> 00:22:20,419
and a blue world which it's nice and you

00:22:17,509 --> 00:22:22,639
can build fun little helpers like I did

00:22:20,419 --> 00:22:27,620
have a rental laws in your console

00:22:22,639 --> 00:22:29,299
because we all would all need this so I

00:22:27,620 --> 00:22:31,159
meant the call to the github API to get

00:22:29,299 --> 00:22:33,649
all the repos on the dev tools edge team

00:22:31,159 --> 00:22:35,840
at all I post the debugger when the

00:22:33,649 --> 00:22:39,039
acceptor call was over so I can expect

00:22:35,840 --> 00:22:41,179
what was returned to me in the trigger

00:22:39,039 --> 00:22:43,100
the first thing you may noticed is that

00:22:41,179 --> 00:22:47,600
you can affect the object directly in

00:22:43,100 --> 00:22:49,700
the output so yeah like chrome does but

00:22:47,600 --> 00:22:52,370
we are also working on the console side

00:22:49,700 --> 00:22:54,350
bar so you can pin an object to the

00:22:52,370 --> 00:22:58,090
right and still see your messaging

00:22:54,350 --> 00:22:58,090
coming into the console

00:22:58,750 --> 00:23:04,840
so the results I get from this API call

00:23:02,380 --> 00:23:06,760
is pretty big so maybe I want to try to

00:23:04,840 --> 00:23:08,770
use console that table on it basically

00:23:06,760 --> 00:23:11,830
comes a lot table put a nice little

00:23:08,770 --> 00:23:16,000
table on the output if you are using it

00:23:11,830 --> 00:23:20,470
on large object or an array map set and

00:23:16,000 --> 00:23:24,880
it shows in a nice way but this is still

00:23:20,470 --> 00:23:26,620
not ideal for my needs and usually what

00:23:24,880 --> 00:23:29,260
I do when I have to deal with large

00:23:26,620 --> 00:23:31,809
amount of JSON data I just copy it and

00:23:29,260 --> 00:23:36,340
then displayed in my editor so you can

00:23:31,809 --> 00:23:38,559
copy an object right into the console by

00:23:36,340 --> 00:23:41,320
doing right-click on an object and then

00:23:38,559 --> 00:23:42,610
copy object it will try to JSON string

00:23:41,320 --> 00:23:46,679
divided it if it hands

00:23:42,610 --> 00:23:50,169
there are not proto or two like that and

00:23:46,679 --> 00:23:52,690
then you can paste it where we want very

00:23:50,169 --> 00:23:55,870
helpful and since we are talking about

00:23:52,690 --> 00:23:58,750
some API function you can see a recap of

00:23:55,870 --> 00:24:00,669
all the api's we have so you know

00:23:58,750 --> 00:24:03,090
probably consult that code but there's

00:24:00,669 --> 00:24:05,380
also consult that Eric and so that one

00:24:03,090 --> 00:24:06,909
info a console that debug they are

00:24:05,380 --> 00:24:10,620
different level of log that you can

00:24:06,909 --> 00:24:13,600
filter in the console output and then we

00:24:10,620 --> 00:24:21,280
there is consult that dear of an object

00:24:13,600 --> 00:24:23,740
it will auto expand the object and will

00:24:21,280 --> 00:24:25,960
tell you how much time was spent between

00:24:23,740 --> 00:24:30,309
those two calls so you can measure the

00:24:25,960 --> 00:24:33,539
function call how much time a console a

00:24:30,309 --> 00:24:33,539
function call was

00:24:33,630 --> 00:24:39,549
control account where output an

00:24:37,059 --> 00:24:41,440
implemented counter each time it is

00:24:39,549 --> 00:24:42,789
called so it might be helpful in a

00:24:41,440 --> 00:24:45,850
console to know how much time it is

00:24:42,789 --> 00:24:47,350
called control that Arthur takes in a

00:24:45,850 --> 00:24:49,270
version and then a message and willows

00:24:47,350 --> 00:24:51,640
only I would put something into the

00:24:49,270 --> 00:24:56,440
console if the assertion is fault like

00:24:51,640 --> 00:25:01,030
basically a test and console out here

00:24:56,440 --> 00:25:03,039
just clear the output and and yeah I

00:25:01,030 --> 00:25:04,809
have some little tricks that might be

00:25:03,039 --> 00:25:06,970
helpful so when you are in the console

00:25:04,809 --> 00:25:09,280
input you can type inspect on the

00:25:06,970 --> 00:25:11,740
variable and it's basically an IDs for

00:25:09,280 --> 00:25:14,080
console that a bit shorter you can

00:25:11,740 --> 00:25:16,870
calculate multiple parts of a message

00:25:14,080 --> 00:25:19,960
like console dot log a the variable a

00:25:16,870 --> 00:25:23,470
comma B variable D so you will have a

00:25:19,960 --> 00:25:27,700
interval in its value or you can use the

00:25:23,470 --> 00:25:30,820
es6 shorthand which is you declaring a

00:25:27,700 --> 00:25:33,850
small object to have a and D properties

00:25:30,820 --> 00:25:37,390
and en D values which may which is very

00:25:33,850 --> 00:25:40,600
helpful just but which viable is which

00:25:37,390 --> 00:25:42,340
one and you can use conditional break

00:25:40,600 --> 00:25:44,440
console dot log in conditional

00:25:42,340 --> 00:25:46,840
breakpoint in this program so if you

00:25:44,440 --> 00:25:49,150
right-click in a gutter on the debugger

00:25:46,840 --> 00:25:52,059
in that conditional breakpoint and type

00:25:49,150 --> 00:25:54,070
console dot log your variable in it the

00:25:52,059 --> 00:25:56,559
console log will be executed but since

00:25:54,070 --> 00:25:58,510
it returns undefined it won't pause the

00:25:56,559 --> 00:26:00,039
debugger so if you don't have access to

00:25:58,510 --> 00:26:02,860
resource for example or if you don't

00:26:00,039 --> 00:26:04,720
want to add another console log you can

00:26:02,860 --> 00:26:08,049
do it in the debugger and we till it

00:26:04,720 --> 00:26:11,559
will show up in your console but it

00:26:08,049 --> 00:26:12,940
won't positive Berger ok one last thing

00:26:11,559 --> 00:26:15,159
I wanted to show you in the console is

00:26:12,940 --> 00:26:17,559
that we can display network or network

00:26:15,159 --> 00:26:20,700
logs as well so you have to enable the

00:26:17,559 --> 00:26:22,840
filter the xhr or request filters and

00:26:20,700 --> 00:26:24,940
basically we shout the same components

00:26:22,840 --> 00:26:26,830
with the net monitor so you should have

00:26:24,940 --> 00:26:27,920
a consistent experience between those

00:26:26,830 --> 00:26:30,770
two tools

00:26:27,920 --> 00:26:32,900
and and here in the console you can even

00:26:30,770 --> 00:26:36,560
click on the status code so here you can

00:26:32,900 --> 00:26:39,320
see a green 200 status code and if you

00:26:36,560 --> 00:26:43,700
click on it it will navigate you to the

00:26:39,320 --> 00:26:48,830
mgn page with the 200 code and explain

00:26:43,700 --> 00:26:50,930
you what it is ok so I saw the excel

00:26:48,830 --> 00:26:54,670
file called github and let's switch to

00:26:50,930 --> 00:26:54,670
the net we totally inspected

00:26:59,070 --> 00:27:04,350
the net monitor was also rewritten in

00:27:01,950 --> 00:27:06,180
react and redux and have this nice

00:27:04,350 --> 00:27:08,340
photon colors there were some

00:27:06,180 --> 00:27:10,680
improvements in the UI so you can

00:27:08,340 --> 00:27:15,060
directly perceive log and disable the

00:27:10,680 --> 00:27:17,190
catch right into the net monitor when

00:27:15,060 --> 00:27:20,730
you click on a network country you get

00:27:17,190 --> 00:27:23,100
tools panel do we call the details panel

00:27:20,730 --> 00:27:25,200
where you can inspect more deeply a

00:27:23,100 --> 00:27:27,600
network hole so here you can see all the

00:27:25,200 --> 00:27:30,510
regret and response headers and you can

00:27:27,600 --> 00:27:33,150
even click the question mark icon behind

00:27:30,510 --> 00:27:35,190
them if they are found and it will take

00:27:33,150 --> 00:27:38,600
you to an MDM page explain you what the

00:27:35,190 --> 00:27:43,650
header is which is really really helpful

00:27:38,600 --> 00:27:46,740
you can also go to the stock price panel

00:27:43,650 --> 00:27:50,340
which shows you the stack trace that led

00:27:46,740 --> 00:27:53,730
to this call so if you have a fetched

00:27:50,340 --> 00:27:55,980
call that do network call you can trace

00:27:53,730 --> 00:28:01,950
it and it's nicely source map and here

00:27:55,980 --> 00:28:03,660
the tag price I can see my accent and I

00:28:01,950 --> 00:28:09,420
know I can have a look at that if I want

00:28:03,660 --> 00:28:10,920
to see why the call was triggered and in

00:28:09,420 --> 00:28:12,540
the network I show already found

00:28:10,920 --> 00:28:15,030
something

00:28:12,540 --> 00:28:17,490
the log that we are looking for you can

00:28:15,030 --> 00:28:20,310
pause the net monitor so you won't show

00:28:17,490 --> 00:28:23,130
up it won't show you any more networked

00:28:20,310 --> 00:28:25,260
blogs happening the network Clause will

00:28:23,130 --> 00:28:26,730
still happen the browser will still make

00:28:25,260 --> 00:28:29,580
the networkers but they won't show up in

00:28:26,730 --> 00:28:34,290
the UI so you can concentrate on what we

00:28:29,580 --> 00:28:36,690
are looking for so here on to inspect my

00:28:34,290 --> 00:28:39,420
data call but maybe have a huge list of

00:28:36,690 --> 00:28:41,790
requests I don't know how to spot it so

00:28:39,420 --> 00:28:44,340
what I can do is use the filter input to

00:28:41,790 --> 00:28:47,850
filter in the specific domain so if I

00:28:44,340 --> 00:28:50,590
type demand column you can see already

00:28:47,850 --> 00:28:52,240
auto completely we

00:28:50,590 --> 00:28:54,669
two domains like the different domains I

00:28:52,240 --> 00:28:58,929
have in my load which I did have that

00:28:54,669 --> 00:29:01,630
Carmen Bugzilla dot-com that all and I

00:28:58,929 --> 00:29:03,520
canceled also filter by negative filter

00:29:01,630 --> 00:29:06,940
so I can type

00:29:03,520 --> 00:29:09,100
- domain column and this might be

00:29:06,940 --> 00:29:11,980
helpful for tracking third parties

00:29:09,100 --> 00:29:14,289
called I keep you on the news site and

00:29:11,980 --> 00:29:19,510
want to see all those nasty add trackers

00:29:14,289 --> 00:29:21,309
you can easily be negative domain and

00:29:19,510 --> 00:29:23,289
you still have issues ending much once

00:29:21,309 --> 00:29:26,320
you can combine multiple filters like I

00:29:23,289 --> 00:29:28,299
want the github.com domain calls and

00:29:26,320 --> 00:29:35,710
made by fetch for example so you can

00:29:28,299 --> 00:29:38,020
type cause fetch so I found what I was

00:29:35,710 --> 00:29:42,010
looking for and I can check the

00:29:38,020 --> 00:29:44,950
parameters of these networks so you can

00:29:42,010 --> 00:29:50,559
see that repeated parameters are nicely

00:29:44,950 --> 00:29:53,919
group so here they are group under a

00:29:50,559 --> 00:29:56,649
single nodes which is quite handy and

00:29:53,919 --> 00:29:59,380
the most important thing for me is the

00:29:56,649 --> 00:30:02,020
response panel since the rhythm has a

00:29:59,380 --> 00:30:04,090
proper content type header I can

00:30:02,020 --> 00:30:08,049
directly inspect it as in the console

00:30:04,090 --> 00:30:12,360
which is very helpful and winces I

00:30:08,049 --> 00:30:14,649
wonder how many ripples the Mozilla

00:30:12,360 --> 00:30:17,890
organization and indeed have had so I

00:30:14,649 --> 00:30:21,970
used the edit and recent features which

00:30:17,890 --> 00:30:24,909
allow you to modify the URLs and the

00:30:21,970 --> 00:30:27,309
parameters and resend a new request so

00:30:24,909 --> 00:30:29,770
we have just changed the depth of HTML

00:30:27,309 --> 00:30:32,610
organization to the Mozilla one and I

00:30:29,770 --> 00:30:36,000
was able to see all the

00:30:32,610 --> 00:30:37,679
repos on github which looks interesting

00:30:36,000 --> 00:30:39,860
but there are quite a few of them so

00:30:37,679 --> 00:30:42,480
let's open the requests in a new tab as

00:30:39,860 --> 00:30:45,179
you can do that by clicking on a low

00:30:42,480 --> 00:30:49,620
country and clicking on the open a new

00:30:45,179 --> 00:30:50,580
tab and it takes us to the JSON new

00:30:49,620 --> 00:30:52,580
world

00:30:50,580 --> 00:31:00,779
this view is activated when you try to

00:30:52,580 --> 00:31:02,970
inspect a page with content type JSON

00:31:00,779 --> 00:31:06,120
content basically it should have the

00:31:02,970 --> 00:31:09,870
same fields to define in your there full

00:31:06,120 --> 00:31:12,840
setting so you don't you don't strain

00:31:09,870 --> 00:31:14,750
your eyes if you are used to a dark

00:31:12,840 --> 00:31:17,909
scene background

00:31:14,750 --> 00:31:20,370
the nice thing especially when dealing

00:31:17,909 --> 00:31:22,169
with github API is it since that things

00:31:20,370 --> 00:31:24,840
are automatically automatically

00:31:22,169 --> 00:31:27,480
transformed into act for HTML links I

00:31:24,840 --> 00:31:34,169
can navigate through endpoints so here I

00:31:27,480 --> 00:31:38,070
can and see what's about yeah that's it

00:31:34,169 --> 00:31:39,690
well almost so I want to highlight a few

00:31:38,070 --> 00:31:41,520
things out we are not made by The

00:31:39,690 --> 00:31:44,490
Devil's team but that can help

00:31:41,520 --> 00:31:46,350
developers swings their jobs first is

00:31:44,490 --> 00:31:49,830
web extension supports Daniel e talk

00:31:46,350 --> 00:31:51,899
about it the web extension team did a

00:31:49,830 --> 00:31:56,880
great work and most of the Chrome

00:31:51,899 --> 00:31:59,429
extension in the dev tools work also in

00:31:56,880 --> 00:32:01,649
the Firefox dev tools so you can have

00:31:59,429 --> 00:32:04,950
react all readers or angular dev tools

00:32:01,649 --> 00:32:08,760
right into Firefox basically for free so

00:32:04,950 --> 00:32:11,760
is the website I was switching for to

00:32:08,760 --> 00:32:13,679
react with the reactive tools the second

00:32:11,760 --> 00:32:16,049
thing is Firefox screenshot and then he

00:32:13,679 --> 00:32:19,110
talked about it also it's baked in

00:32:16,049 --> 00:32:22,320
Firefox and you can copy things directly

00:32:19,110 --> 00:32:25,440
the image drive into your clipboard and

00:32:22,320 --> 00:32:28,100
then paste it into slag or sketch so you

00:32:25,440 --> 00:32:32,809
don't have a huge number of temporary

00:32:28,100 --> 00:32:35,299
on your desktop and the last thing it's

00:32:32,809 --> 00:32:37,820
multi icon containers it can be very

00:32:35,299 --> 00:32:40,130
handy for developers because if you want

00:32:37,820 --> 00:32:41,660
to inspect multiple roles on your given

00:32:40,130 --> 00:32:43,250
web application you don't have to log

00:32:41,660 --> 00:32:44,780
out and log in again with a different

00:32:43,250 --> 00:32:47,990
user and you can have multiple

00:32:44,780 --> 00:32:49,970
containers for for example a simple user

00:32:47,990 --> 00:32:51,740
role and an admin role and stuff like

00:32:49,970 --> 00:32:55,070
that running in the same browser side to

00:32:51,740 --> 00:32:58,070
side support for so this time it's

00:32:55,070 --> 00:32:59,530
really it thanks a lot listening to me

00:32:58,070 --> 00:33:01,730
while being angry I know it's difficult

00:32:59,530 --> 00:33:03,980
please come in see us today

00:33:01,730 --> 00:33:06,230
tell us about your bugs on the dev tools

00:33:03,980 --> 00:33:08,299
or your IDs lots of things were added

00:33:06,230 --> 00:33:12,409
because some contributors some people

00:33:08,299 --> 00:33:15,710
went to a stay it will be rad if - - we

00:33:12,409 --> 00:33:19,450
don't know what all the the different

00:33:15,710 --> 00:33:22,220
cases you are experiencing every day are

00:33:19,450 --> 00:33:27,100
so you can also reach us and Mozilla IRC

00:33:22,220 --> 00:33:27,100
unstack and just goes on Twitter thanks

00:33:34,430 --> 00:33:40,220
does anyone have some questions or

00:33:37,350 --> 00:33:40,220
requests

00:33:50,790 --> 00:33:53,660
the pigeon may go

00:33:53,970 --> 00:33:58,350
open this morning there are books

00:34:06,940 --> 00:34:09,940
yes

00:34:12,699 --> 00:34:18,480
[Music]

00:34:15,480 --> 00:34:18,480
certificates

00:34:19,600 --> 00:34:24,300
what yes

00:34:24,460 --> 00:34:33,000
I want to clean it but how is where is

00:34:29,200 --> 00:34:33,000
my my mouse

00:34:34,740 --> 00:34:37,580
yes

00:34:47,610 --> 00:34:52,649
perfect

00:34:49,649 --> 00:34:55,579
with them

00:34:52,649 --> 00:34:55,579
I will set

00:35:13,050 --> 00:35:18,730
[Applause]

00:35:16,270 --> 00:35:22,320
yeah I think so young I think we can

00:35:18,730 --> 00:35:22,320
stop marrying maybe now

00:35:27,560 --> 00:35:30,659
[Applause]

00:35:52,609 --> 00:36:02,900
okay thank you I'm down maybe try I'll

00:36:00,380 --> 00:36:10,969
give you one more second

00:36:02,900 --> 00:36:10,969
[Applause]

00:36:22,260 --> 00:36:28,510
hello I'm Maria Peter - hey at lunchtime

00:36:25,270 --> 00:36:32,500
it's probably hard on you focus too much

00:36:28,510 --> 00:36:34,750
but hey hello today we talk about with

00:36:32,500 --> 00:36:36,030
you about 12 that HTML which is a

00:36:34,750 --> 00:36:42,550
profiler

00:36:36,030 --> 00:36:51,900
what Saturday I need to speak less loud

00:36:42,550 --> 00:36:56,140
maybe okay yeah is it better

00:36:51,900 --> 00:36:58,180
is it better okay so I talked about the

00:36:56,140 --> 00:37:02,110
gecko pro fighter that's prefer that is

00:36:58,180 --> 00:37:11,850
inside Firefox we'll get into in more

00:37:02,110 --> 00:37:11,850
detail so me where is my data okay maybe

00:37:13,390 --> 00:37:17,920
okay you don't have any information

00:37:15,130 --> 00:37:20,289
about me that's okay so that's me with

00:37:17,920 --> 00:37:22,089
school lessees IMing medidas for one

00:37:20,289 --> 00:37:25,420
year for five years and I work on the

00:37:22,089 --> 00:37:27,369
profile for one year probably adjusted

00:37:25,420 --> 00:37:31,420
to the French accent already with

00:37:27,369 --> 00:37:33,400
Nicolas so today I'll explain you to you

00:37:31,420 --> 00:37:36,489
but see the sampling profiler so that's

00:37:33,400 --> 00:37:38,170
what the professor is and we dive into a

00:37:36,489 --> 00:37:40,359
bit into details but what is what our

00:37:38,170 --> 00:37:43,329
culture is what is a timeline what are

00:37:40,359 --> 00:37:47,769
markers and maybe we have some time we

00:37:43,329 --> 00:37:50,920
can try to analyze some profiles so for

00:37:47,769 --> 00:37:53,380
after sampling profiler sampling

00:37:50,920 --> 00:37:55,839
profiler is something inside fire felt

00:37:53,380 --> 00:37:57,999
that stops you Firefox every

00:37:55,839 --> 00:37:59,589
milliseconds or the Inca bodies you can

00:37:57,999 --> 00:38:01,660
configure it but when we determine by

00:37:59,589 --> 00:38:05,109
default and look at the stack the stack

00:38:01,660 --> 00:38:08,859
is the old order of function that that

00:38:05,109 --> 00:38:11,499
we're code to at this specific moment in

00:38:08,859 --> 00:38:15,339
time so we do that for every thread and

00:38:11,499 --> 00:38:20,470
every processes and then we can capture

00:38:15,339 --> 00:38:23,289
all this measurement to merge it into a

00:38:20,470 --> 00:38:25,480
profile that we can analyze and we merge

00:38:23,289 --> 00:38:29,259
the stacks into a code tree so that's

00:38:25,480 --> 00:38:31,539
that a little bit of of jargon worlds

00:38:29,259 --> 00:38:34,529
that we complete technical world that we

00:38:31,539 --> 00:38:38,259
use but that are important to understand

00:38:34,529 --> 00:38:41,230
so maybe a quick example for you here

00:38:38,259 --> 00:38:42,849
you can see there is the function a at

00:38:41,230 --> 00:38:45,759
the end that we call directly the

00:38:42,849 --> 00:38:48,519
function a at the top called be the

00:38:45,759 --> 00:38:51,849
function be called C the function C

00:38:48,519 --> 00:38:54,400
could call do walk and do work the very

00:38:51,849 --> 00:38:58,089
useful world that is a loop that takes a

00:38:54,400 --> 00:39:01,029
very long time just for the example so

00:38:58,089 --> 00:39:03,069
what happens is that every millisecond

00:39:01,029 --> 00:39:05,950
we look at the stack can you see that

00:39:03,069 --> 00:39:07,930
that quality yes we look at the stat so

00:39:05,950 --> 00:39:10,989
here every millisecond is the same stack

00:39:07,930 --> 00:39:12,910
because it is a simple example and the

00:39:10,989 --> 00:39:15,549
first millisecond we have air that could

00:39:12,910 --> 00:39:18,069
be I could see that call to work and the

00:39:15,549 --> 00:39:19,010
same for everything so for every minutes

00:39:18,069 --> 00:39:23,869
ago

00:39:19,010 --> 00:39:27,680
and we melt that into a code tree so the

00:39:23,869 --> 00:39:30,650
code tree say that a BC due up and we

00:39:27,680 --> 00:39:32,380
can see on the right that you are time

00:39:30,650 --> 00:39:35,330
that is spent inside this function so

00:39:32,380 --> 00:39:38,780
running time is a time spent in this

00:39:35,330 --> 00:39:42,650
function and self time is the time spent

00:39:38,780 --> 00:39:44,359
by this function so we can say ABC and C

00:39:42,650 --> 00:39:45,619
do nothing actually they just called you

00:39:44,359 --> 00:39:48,350
up so that's why the running time is

00:39:45,619 --> 00:39:51,320
zero millisecond but where they spend

00:39:48,350 --> 00:39:53,810
time inside of this function so we spend

00:39:51,320 --> 00:39:56,630
six millisecond in in them but the last

00:39:53,810 --> 00:39:58,369
one do work there itself

00:39:56,630 --> 00:40:02,470
save time is six milliseconds it means

00:39:58,369 --> 00:40:02,470
that the actual work is happening there

00:40:02,859 --> 00:40:08,840
in the profiler it looks like it so on

00:40:06,980 --> 00:40:10,760
the top you have the time line here

00:40:08,840 --> 00:40:15,290
there is not much they don't need one

00:40:10,760 --> 00:40:19,609
stack but you can see a tree that's how

00:40:15,290 --> 00:40:22,700
we display the code tree and so the

00:40:19,609 --> 00:40:25,430
first line is the actual HTML file

00:40:22,700 --> 00:40:27,200
because it's where everything starts

00:40:25,430 --> 00:40:31,070
right on the web we start on the global

00:40:27,200 --> 00:40:32,869
scope we call a then which could be

00:40:31,070 --> 00:40:34,850
which could see which could do work and

00:40:32,869 --> 00:40:37,640
on the left you see the actual time that

00:40:34,850 --> 00:40:40,250
was that happened on when I run it so it

00:40:37,640 --> 00:40:43,190
was 94 milliseconds here and you can see

00:40:40,250 --> 00:40:46,630
that do walk for do up the self is 94

00:40:43,190 --> 00:40:46,630
but audio does it's 12

00:40:46,640 --> 00:40:50,840
so that was a very very simple example

00:40:48,650 --> 00:40:57,140
so what happens if we take another

00:40:50,840 --> 00:40:59,150
example so here I have a ABC C it has a

00:40:57,140 --> 00:41:03,010
loop that could do nothing and do

00:40:59,150 --> 00:41:06,290
nothing at all it does nothing all right

00:41:03,010 --> 00:41:10,220
so what happens here every millisecond

00:41:06,290 --> 00:41:14,570
we will we look at what the stack is so

00:41:10,220 --> 00:41:16,400
it's a b c do nothing okay but actually

00:41:14,570 --> 00:41:18,890
in the country we don't see do nothing

00:41:16,400 --> 00:41:21,080
what happens here what happened is that

00:41:18,890 --> 00:41:23,000
because with somewhere only every

00:41:21,080 --> 00:41:24,520
millisecond actually when we could do

00:41:23,000 --> 00:41:26,680
nothing it's between this middle

00:41:24,520 --> 00:41:28,960
seconds the actual work is actually in C

00:41:26,680 --> 00:41:31,330
because that's where the loop is so

00:41:28,960 --> 00:41:34,990
that's that's a fundamental prevent with

00:41:31,330 --> 00:41:37,720
with with a sampling profiler we miss

00:41:34,990 --> 00:41:39,280
data sometimes you get to coach way and

00:41:37,720 --> 00:41:42,010
you see okay I don't see this function

00:41:39,280 --> 00:41:44,590
why because it just happens very briefly

00:41:42,010 --> 00:41:46,900
even if you could eat a lot if you if

00:41:44,590 --> 00:41:49,570
you do nothing in it or if it takes very

00:41:46,900 --> 00:41:52,120
less than one millisecond you may unite

00:41:49,570 --> 00:41:54,040
miss it miss it and that's something

00:41:52,120 --> 00:41:57,970
that you need to keep in mind when you

00:41:54,040 --> 00:42:01,030
analyze a profile but still there is

00:41:57,970 --> 00:42:05,910
something slightly different here I'm

00:42:01,030 --> 00:42:08,950
going work both in C and in do walk okay

00:42:05,910 --> 00:42:14,500
so we will get the same thing at the

00:42:08,950 --> 00:42:16,960
same country but the running time don't

00:42:14,500 --> 00:42:18,040
let another stem so in reality what

00:42:16,960 --> 00:42:20,410
happen here

00:42:18,040 --> 00:42:24,340
proxy the step time was maybe one or two

00:42:20,410 --> 00:42:26,620
milliseconds we still spend some time in

00:42:24,340 --> 00:42:28,840
in that function but the most time is

00:42:26,620 --> 00:42:30,910
actually doing do walk but we we

00:42:28,840 --> 00:42:33,430
actually have the same country as in the

00:42:30,910 --> 00:42:37,030
first example even if the code was

00:42:33,430 --> 00:42:38,860
slightly different the difference was

00:42:37,030 --> 00:42:41,680
that the walk was called several times

00:42:38,860 --> 00:42:44,200
okay but we still see it only once

00:42:41,680 --> 00:42:46,650
because what we do is we merge the call

00:42:44,200 --> 00:42:50,230
stack it's not because you see a

00:42:46,650 --> 00:42:52,720
function once that it's been called once

00:42:50,230 --> 00:42:55,390
it's been it can decode a lot of times

00:42:52,720 --> 00:42:57,850
what happens is you get the same core

00:42:55,390 --> 00:43:03,100
stack so we merge that in one call stack

00:42:57,850 --> 00:43:06,850
so that it's easier to analyze you

00:43:03,100 --> 00:43:08,590
follow me it's okay it's yeah it's very

00:43:06,850 --> 00:43:13,060
it's very simple in this interesting

00:43:08,590 --> 00:43:15,250
time very complex so more complex code

00:43:13,060 --> 00:43:17,650
now don't pay attention to the

00:43:15,250 --> 00:43:19,510
highlighted line yet it will be for

00:43:17,650 --> 00:43:21,780
later it's more complex it just more

00:43:19,510 --> 00:43:24,370
function coding more functions and

00:43:21,780 --> 00:43:27,750
what's especially interesting here is

00:43:24,370 --> 00:43:27,750
that the function f

00:43:27,940 --> 00:43:32,980
I think function f yeah the knife is

00:43:31,450 --> 00:43:35,319
called in two different places

00:43:32,980 --> 00:43:37,359
it's called in C at the top it's a cool

00:43:35,319 --> 00:43:42,730
it's a also cutting edge at the bottom

00:43:37,359 --> 00:43:46,329
and F itself called G okay and F and G

00:43:42,730 --> 00:43:48,789
both have very expensive loops and E as

00:43:46,329 --> 00:43:50,049
well so that the goal is to show you

00:43:48,789 --> 00:43:52,240
what happens when you go to some

00:43:50,049 --> 00:43:55,450
functions in in different ways with a

00:43:52,240 --> 00:43:59,710
different course stack actually so we

00:43:55,450 --> 00:44:01,329
have in so it's very short yeah but you

00:43:59,710 --> 00:44:02,770
get the idea of three samples every

00:44:01,329 --> 00:44:08,109
millisecond so every time a different

00:44:02,770 --> 00:44:10,839
course tag first time ABCDE I can can

00:44:08,109 --> 00:44:14,920
come back here I could be because she

00:44:10,839 --> 00:44:19,660
first C equals D first decodes e and

00:44:14,920 --> 00:44:24,280
then C would call F so that's what we

00:44:19,660 --> 00:44:30,299
see here second stack is a B C F G okay

00:44:24,280 --> 00:44:35,230
and the third stack we have is a B H F G

00:44:30,299 --> 00:44:37,450
because we call a H edge could F and F

00:44:35,230 --> 00:44:43,230
chord G so we have three different

00:44:37,450 --> 00:44:47,250
stacks okay because that's what good

00:44:43,230 --> 00:44:49,050
and so what we do is we again we merge

00:44:47,250 --> 00:44:53,460
the steps together but of course here we

00:44:49,050 --> 00:44:56,369
have a more complex trees because yeah

00:44:53,460 --> 00:44:58,589
because that's how good it is so to make

00:44:56,369 --> 00:45:04,170
sense of this code we get the code field

00:44:58,589 --> 00:45:06,030
on the right and in the perf tool we get

00:45:04,170 --> 00:45:11,130
something like that we have the century

00:45:06,030 --> 00:45:12,300
in in a tree like structure and it was

00:45:11,130 --> 00:45:16,619
something interesting so we'll remember

00:45:12,300 --> 00:45:19,740
the highlighted line it was F and you

00:45:16,619 --> 00:45:22,410
can see that F has a set time of 66

00:45:19,740 --> 00:45:28,200
meters Ignacio while it's running time

00:45:22,410 --> 00:45:31,530
is 155 it's meat we spent half of the

00:45:28,200 --> 00:45:33,540
time in F also doing something and then

00:45:31,530 --> 00:45:37,890
we spend half of the time coding

00:45:33,540 --> 00:45:39,180
something else that does other work so

00:45:37,890 --> 00:45:42,329
yeah that's that's basically what the

00:45:39,180 --> 00:45:46,470
culture is is a representation of how

00:45:42,329 --> 00:45:52,079
you code runs and in a way that makes it

00:45:46,470 --> 00:45:53,910
easier to analyze so unless it's already

00:45:52,079 --> 00:45:55,589
around actually it's already ordered in

00:45:53,910 --> 00:46:00,119
the order of the function that takes the

00:45:55,589 --> 00:46:03,450
most time you can see on the running

00:46:00,119 --> 00:46:08,910
time left it's roughly ordered already

00:46:03,450 --> 00:46:13,109
so so when you see your line of a that

00:46:08,910 --> 00:46:15,420
code what what do we have here we could

00:46:13,109 --> 00:46:17,609
see an edge see we spend the most time

00:46:15,420 --> 00:46:19,770
in C and then in H it doesn't mean we

00:46:17,609 --> 00:46:22,920
could see first and then H it just means

00:46:19,770 --> 00:46:25,829
that C was more important so we have a

00:46:22,920 --> 00:46:29,790
tree that is already ordered in the in

00:46:25,829 --> 00:46:31,170
by the time respecting functions and we

00:46:29,790 --> 00:46:33,060
have another tool to help with that

00:46:31,170 --> 00:46:36,569
because here it's ordered from the top

00:46:33,060 --> 00:46:40,079
but we can also invert in what means we

00:46:36,569 --> 00:46:43,050
look from the bottom of the stack here

00:46:40,079 --> 00:46:44,970
we see that G is actually the function

00:46:43,050 --> 00:46:48,240
where we spend the most time we spend

00:46:44,970 --> 00:46:50,819
138 milliseconds on G itself but G if

00:46:48,240 --> 00:46:51,940
you remember here G is caught in two

00:46:50,819 --> 00:46:54,610
different two

00:46:51,940 --> 00:46:55,960
different places is could you have it in

00:46:54,610 --> 00:46:57,970
the middle in here and you have it at

00:46:55,960 --> 00:46:59,530
the bottom it couldn t do two different

00:46:57,970 --> 00:47:03,310
places so it's difficult from this view

00:46:59,530 --> 00:47:05,560
to see what is the most the most

00:47:03,310 --> 00:47:07,780
expensive function but once we look it

00:47:05,560 --> 00:47:09,790
from the other side and we merge it

00:47:07,780 --> 00:47:11,380
differently we can see that that

00:47:09,790 --> 00:47:12,970
actually we spend the most time energy

00:47:11,380 --> 00:47:17,110
it doesn't mean we spend the most time

00:47:12,970 --> 00:47:19,630
in G once can be different times but

00:47:17,110 --> 00:47:21,250
that's probably a place where you would

00:47:19,630 --> 00:47:22,600
like to optimize your code because

00:47:21,250 --> 00:47:28,060
that's the place where we spend a lot of

00:47:22,600 --> 00:47:30,070
time that's why it's some also a bit of

00:47:28,060 --> 00:47:31,930
not it's sometimes difficult to analyze

00:47:30,070 --> 00:47:34,870
the profile for some code that you don't

00:47:31,930 --> 00:47:37,360
know like if you run it on Twitter you

00:47:34,870 --> 00:47:40,090
will get some code that is of obviously

00:47:37,360 --> 00:47:41,350
obfuscated obfuscated and it's difficult

00:47:40,090 --> 00:47:42,910
to make a sense of the code if you don't

00:47:41,350 --> 00:47:45,340
know the source code so it is better if

00:47:42,910 --> 00:47:46,600
you walk it on knew of god that well you

00:47:45,340 --> 00:47:49,780
have the source code you can look it

00:47:46,600 --> 00:47:51,280
because because it just shows you

00:47:49,780 --> 00:47:52,660
measurement it doesn't show you how the

00:47:51,280 --> 00:47:55,750
code is actually code for that you need

00:47:52,660 --> 00:47:56,740
to use a debugger or think like that now

00:47:55,750 --> 00:47:59,740
if you know your source code that's

00:47:56,740 --> 00:48:07,510
where you that's useful to analyze your

00:47:59,740 --> 00:48:11,200
own source code okay so finish with the

00:48:07,510 --> 00:48:13,410
country go to cook I can stay little bit

00:48:11,200 --> 00:48:19,660
on that how much time do I do you have

00:48:13,410 --> 00:48:21,340
seven minutes maybe okay rocky there are

00:48:19,660 --> 00:48:23,290
most not tools in the country that we

00:48:21,340 --> 00:48:25,360
can do I want to eat into Nadi test

00:48:23,290 --> 00:48:27,640
today you can merge function together

00:48:25,360 --> 00:48:30,250
you can you can each have a recursion

00:48:27,640 --> 00:48:33,610
you can merge the recursion to only one

00:48:30,250 --> 00:48:38,140
line so you useful thing that you can do

00:48:33,610 --> 00:48:39,610
with this that I won't show up now the

00:48:38,140 --> 00:48:43,200
time line so the time line I will show

00:48:39,610 --> 00:48:45,750
you an example maybe of real time line

00:48:43,200 --> 00:48:50,070
how is it it's the

00:48:45,750 --> 00:48:54,970
train over here on the third line yeah

00:48:50,070 --> 00:48:56,260
and we may be zooming it's okay so

00:48:54,970 --> 00:48:58,150
what's important to know with this time

00:48:56,260 --> 00:49:00,940
line because it's easy to think that

00:48:58,150 --> 00:49:03,520
okay maybe the CPU usage or the memory

00:49:00,940 --> 00:49:04,960
usage or I don't know the FPS it's not

00:49:03,520 --> 00:49:07,690
like that at all it just it just

00:49:04,960 --> 00:49:10,510
represents the stack it means that if

00:49:07,690 --> 00:49:12,760
it's flat the stack doesn't change the

00:49:10,510 --> 00:49:16,570
stack again the the order of function

00:49:12,760 --> 00:49:18,010
you call but if you have change changes

00:49:16,570 --> 00:49:20,020
in this time line it means that

00:49:18,010 --> 00:49:22,570
something happens so that's where it's

00:49:20,020 --> 00:49:23,980
important to to focus when there are

00:49:22,570 --> 00:49:26,440
changes actually because that's where

00:49:23,980 --> 00:49:28,600
something happens when you have the long

00:49:26,440 --> 00:49:31,000
flat things it means also that you have

00:49:28,600 --> 00:49:33,280
you can have of one function that takes

00:49:31,000 --> 00:49:36,900
a long time so both are important

00:49:33,280 --> 00:49:40,170
actually okay so that's the timeline

00:49:36,900 --> 00:49:40,170
where is my

00:49:42,360 --> 00:49:46,890
mackeral mackeral is something

00:49:43,950 --> 00:49:49,170
interesting too so as I explained

00:49:46,890 --> 00:49:49,770
earlier the Cooper Douglas sampling

00:49:49,170 --> 00:49:54,450
profiler

00:49:49,770 --> 00:49:57,360
but the mackerels helps helps overcome

00:49:54,450 --> 00:50:00,510
the limitations of this because you will

00:49:57,360 --> 00:50:02,790
instrument your own code

00:50:00,510 --> 00:50:04,350
so in gecko we do that in c++ of course

00:50:02,790 --> 00:50:05,850
but you can do it in your JavaScript

00:50:04,350 --> 00:50:08,130
code with performance at mark and

00:50:05,850 --> 00:50:10,440
performance of measure and we'll see

00:50:08,130 --> 00:50:11,700
that in the profiler and actually I'll

00:50:10,440 --> 00:50:15,720
tell you what I showed you in the

00:50:11,700 --> 00:50:18,150
example it's a it's a react thing in the

00:50:15,720 --> 00:50:20,070
react development weapon after x16 I

00:50:18,150 --> 00:50:22,980
think in write 15 you need the perf

00:50:20,070 --> 00:50:25,550
add-on you will get the lot of markers

00:50:22,980 --> 00:50:29,580
to show you how all your components are

00:50:25,550 --> 00:50:31,380
our render so here we see so the first

00:50:29,580 --> 00:50:34,410
time is connected something because I we

00:50:31,380 --> 00:50:36,750
use readers and then there is the actual

00:50:34,410 --> 00:50:38,850
component so you see the rendering how

00:50:36,750 --> 00:50:40,200
it works and I think in rack 16 it 7

00:50:38,850 --> 00:50:41,550
better and I'm pretty sure that in other

00:50:40,200 --> 00:50:44,010
frameworks you have similar things

00:50:41,550 --> 00:50:47,700
that's all but I don't know I don't know

00:50:44,010 --> 00:50:50,480
the order of it yeah so it it gives you

00:50:47,700 --> 00:50:53,850
a sense of what happens in your program

00:50:50,480 --> 00:50:55,260
because again you know it and gives you

00:50:53,850 --> 00:50:58,170
a sense how much time it takes to do

00:50:55,260 --> 00:51:01,440
something so our for example here for

00:50:58,170 --> 00:51:04,290
the first one you are manager it's a lot

00:51:01,440 --> 00:51:06,840
of time because of course it runs out or

00:51:04,290 --> 00:51:09,270
it's only children but it shows you

00:51:06,840 --> 00:51:09,840
point you to the right thing to optimize

00:51:09,270 --> 00:51:14,460
in your code

00:51:09,840 --> 00:51:16,770
that's the important thing and in gecko

00:51:14,460 --> 00:51:19,260
we instrumented also the right places so

00:51:16,770 --> 00:51:22,110
we know reflows when our reflow that's

00:51:19,260 --> 00:51:24,600
very important to optimize it so we know

00:51:22,110 --> 00:51:26,160
went around garbage collector that's

00:51:24,600 --> 00:51:30,330
something that can really slow down your

00:51:26,160 --> 00:51:34,260
code is there are a lot of heat there

00:51:30,330 --> 00:51:37,560
are the millions of course I shouldn't

00:51:34,260 --> 00:51:39,660
forget that and we also generate special

00:51:37,560 --> 00:51:43,410
markers to show where whether ever

00:51:39,660 --> 00:51:45,570
floopy stuck at one point for example if

00:51:43,410 --> 00:51:48,930
I come back to my example here there is

00:51:45,570 --> 00:51:50,400
a big red line here that helps me spot

00:51:48,930 --> 00:51:51,960
wherever they want loop was not working

00:51:50,400 --> 00:51:54,580
so

00:51:51,960 --> 00:51:55,510
that's why I came back to the fool my

00:51:54,580 --> 00:51:59,620
food profile okay

00:51:55,510 --> 00:52:01,330
and I can look here for example a zoom

00:51:59,620 --> 00:52:03,670
on it and I can't really see what

00:52:01,330 --> 00:52:05,590
happened during this time we're able to

00:52:03,670 --> 00:52:06,880
compute Easter usually if they're going

00:52:05,590 --> 00:52:10,240
to be stuck because you do too much

00:52:06,880 --> 00:52:12,040
JavaScript are you reflow your urethra

00:52:10,240 --> 00:52:15,610
is too big because you have to do is

00:52:12,040 --> 00:52:17,470
complex or you have tables or I don't

00:52:15,610 --> 00:52:19,420
know if there are lots of different

00:52:17,470 --> 00:52:22,540
possibilities for your application to be

00:52:19,420 --> 00:52:23,500
slow and but that better to focus exit

00:52:22,540 --> 00:52:26,980
yawns all right

00:52:23,500 --> 00:52:29,140
total ready so what's good with

00:52:26,980 --> 00:52:31,030
mukherjee that you never miss them it's

00:52:29,140 --> 00:52:32,860
not like a simply thing it's just that

00:52:31,030 --> 00:52:34,390
if you put a marker you would get it in

00:52:32,860 --> 00:52:36,100
the profile even if you don't simple at

00:52:34,390 --> 00:52:38,650
the right place so that's that's why

00:52:36,100 --> 00:52:44,800
it's it's complimentary to to the Cole

00:52:38,650 --> 00:52:46,960
tree so maybe now because we ending wind

00:52:44,800 --> 00:52:48,190
only at the end how do you use it

00:52:46,960 --> 00:52:50,920
yourself so there are actually two

00:52:48,190 --> 00:52:52,270
solutions first solution is the most

00:52:50,920 --> 00:52:54,670
reported one because it's not the one we

00:52:52,270 --> 00:52:57,790
use the most at Mozilla there is a

00:52:54,670 --> 00:53:01,450
website called perf HTML at i/o / of

00:52:57,790 --> 00:53:04,240
that - HTML at i/o where you can insert

00:53:01,450 --> 00:53:05,530
an add-on and from this I don't you so

00:53:04,240 --> 00:53:08,800
you will have an icon it's a web

00:53:05,530 --> 00:53:10,390
extension right and the web excedrin

00:53:08,800 --> 00:53:12,430
what it's very important it means that

00:53:10,390 --> 00:53:14,800
we have that to do an API to control the

00:53:12,430 --> 00:53:17,380
Gecko profiler it means you can do web

00:53:14,800 --> 00:53:20,980
extensions to control the Gecko profiler

00:53:17,380 --> 00:53:22,540
actually but that's an aside and so you

00:53:20,980 --> 00:53:25,810
can record and capture from the saddle

00:53:22,540 --> 00:53:28,900
and the second solution is because we

00:53:25,810 --> 00:53:30,970
just integrated the new performance

00:53:28,900 --> 00:53:32,890
panel that can enable from the settings

00:53:30,970 --> 00:53:36,670
of the dev tools you can recall the idea

00:53:32,890 --> 00:53:39,570
from the dev tools so I think there are

00:53:36,670 --> 00:53:42,040
things that we don't do exactly the same

00:53:39,570 --> 00:53:44,290
so the first solution we you will get on

00:53:42,040 --> 00:53:46,240
always a full experience but with the

00:53:44,290 --> 00:53:49,680
second thing you can also do things if

00:53:46,240 --> 00:53:49,680
you don't want to install another or no

00:53:50,700 --> 00:53:54,780
I can show you some more on their

00:53:52,650 --> 00:54:00,920
Eddie's um I think two minutes

00:53:54,780 --> 00:54:05,940
maybe one okay this one may be okay

00:54:00,920 --> 00:54:10,980
you won't my oh is it okay there

00:54:05,940 --> 00:54:14,910
that's an example a an example of well

00:54:10,980 --> 00:54:19,470
you have Android dibs okay and we will

00:54:14,910 --> 00:54:24,180
meet it then so let's see so I have my

00:54:19,470 --> 00:54:28,380
ad on here I will start it I click on

00:54:24,180 --> 00:54:29,490
this to do some work hmm it's not

00:54:28,380 --> 00:54:31,430
responsive very much

00:54:29,490 --> 00:54:36,680
probably because some work is happening

00:54:31,430 --> 00:54:36,680
hmm it's low right let's capture

00:54:39,840 --> 00:54:43,100
drivings our profile

00:54:45,100 --> 00:54:49,590
come on

00:54:47,850 --> 00:54:54,930
so whether the right moment that things

00:54:49,590 --> 00:54:56,970
don't work right okay if there so we

00:54:54,930 --> 00:54:58,890
symbolic eating it means we try to make

00:54:56,970 --> 00:55:01,980
a sense from the memory address we have

00:54:58,890 --> 00:55:06,300
and we translate that into two functions

00:55:01,980 --> 00:55:08,010
and method so what interests me though

00:55:06,300 --> 00:55:09,480
because at the end is when we capture so

00:55:08,010 --> 00:55:16,200
well that's very interesting so let's

00:55:09,480 --> 00:55:19,620
focus on this Oh big red thing in my

00:55:16,200 --> 00:55:22,320
content I will show it what's happens

00:55:19,620 --> 00:55:25,440
here what do you think happens we focus

00:55:22,320 --> 00:55:28,460
on this thing a little more maybe look

00:55:25,440 --> 00:55:28,460
at the mark of terror

00:55:28,490 --> 00:55:38,450
Steve's refroze order water flows here

00:55:35,000 --> 00:55:38,450
maybe the country

00:55:40,599 --> 00:55:48,099
look at JavaScript maybe we look at

00:55:42,579 --> 00:55:49,660
JavaScript only okay JavaScript only hmm

00:55:48,099 --> 00:55:52,179
there is it function generator that

00:55:49,660 --> 00:55:54,809
takes some some time but muted Dom

00:55:52,179 --> 00:55:57,880
itself takes like hundred precent okay

00:55:54,809 --> 00:56:04,929
that's a lot and when I look at the full

00:55:57,880 --> 00:56:06,579
thing so I'm here so what that's that's

00:56:04,929 --> 00:56:07,959
what does so easy with this is that it's

00:56:06,579 --> 00:56:09,309
very targeted to be co-developed but at

00:56:07,959 --> 00:56:11,949
the moment it's not very easy for web

00:56:09,309 --> 00:56:13,089
developers so you need to use it a

00:56:11,949 --> 00:56:14,559
little bit to understand what's

00:56:13,089 --> 00:56:18,489
important and what's not important for

00:56:14,559 --> 00:56:20,380
you and but we plan to to collapse

00:56:18,489 --> 00:56:25,989
better the simple first part so that web

00:56:20,380 --> 00:56:28,119
developers can see it better again I'll

00:56:25,989 --> 00:56:29,469
see here get bounding contract that's

00:56:28,119 --> 00:56:31,809
when I was looking for because I knew it

00:56:29,469 --> 00:56:33,369
further but there is get bounding client

00:56:31,809 --> 00:56:36,279
right that is probably triggering a

00:56:33,369 --> 00:56:43,919
reflow so what let me I can we can look

00:56:36,279 --> 00:56:43,919
at the code whereas easy okay

00:56:44,310 --> 00:56:47,810
let's look at the debugger

00:56:55,320 --> 00:56:58,730
you don't see much she lights

00:57:01,190 --> 00:57:05,359
hmm indeed indeed we weren't cutting it

00:57:03,710 --> 00:57:08,150
budding client right after after

00:57:05,359 --> 00:57:10,970
changing after changing something so

00:57:08,150 --> 00:57:12,799
it's not very good so so it was a very

00:57:10,970 --> 00:57:16,250
simple example I knew what I was looking

00:57:12,799 --> 00:57:18,140
for it was easy but it's not always easy

00:57:16,250 --> 00:57:22,789
to analyze profiles it takes some time

00:57:18,140 --> 00:57:29,720
to me that this is very small but high

00:57:22,789 --> 00:57:31,339
up I gave you the I gave you some some

00:57:29,720 --> 00:57:34,670
that you wanted to to try it now for

00:57:31,339 --> 00:57:36,880
Queen and Jaime if you want some some

00:57:34,670 --> 00:57:39,440
more explanation and some more demos

00:57:36,880 --> 00:57:42,910
talk to my coworkers extract you are and

00:57:39,440 --> 00:57:42,910
thank you for your attention

00:57:47,700 --> 00:57:49,760

YouTube URL: https://www.youtube.com/watch?v=sBlERejeofc


