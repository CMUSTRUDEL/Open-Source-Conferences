Title: FINOS APAC Open Source in Fintech Meetup | MAR 21
Publication date: 2021-04-11
Playlist: OS in Fintech Meetups
Description: 
	At our most recent FINOS APAC Open Source in Fintech Meetup, Symphony's Yong Sheng Tan, Developer Relations Technical Lead talked on the recently contributed open source Symphony BDK for Java. José Pozo, VP of Core Development at Genesis presented on low code application platforms (LCAP) for Financial Markets.

This video is from a live virtual meetup conducted in Sydney, Australia on 24 March 2021.

TALK 1 - SYMPHONY BDK FOR JAVA
Symphony recently contributed its latest version of the Symphony Bot Developer Kit. BDK 2.0 is a library of tools and intelligent API bindings that provides an ultra simplified configuration and authentication setup, intuitive message and room management, customizable message templating, and a new activities API that makes it easy to facilitate bot workflows in Symphony.
GitHub Repo: https://github.com/finos/symphony-bdk-java

SYMPHONY SPEAKER BIO
Yong Sheng Tan, Developer Relations Technical Lead, Symphony
Yong Sheng Tan is a financial technology professional excited about delivering solutions that drive efficiency from increased automation, systems collaboration, or workflow re-engineering. Yong has a technical background in software development across web, mobile and desktop solutions as well as a deep appreciation of enterprise architecture and cloud infrastructure. Yong's adept at managing software delivery lifecycles using the Agile methodology and believes firmly in elevating business value as an outcome to improve business-technology synergy.


TALK 2 - OPEN SOURCE TECHNOLOGY TO BUILD AN CONSTANTLY EVOLVE A LOW CODE APPLICATION PLATFORM
Genesis will be presenting how they used a variety of Open Source technologies to build a Low Code Application Platform (LCAP) for Financial Markets and cover some key Open Source technologies used within the system. They will also talk about some of their future plans for using Open Source technologies including FINOS initiatives that help drive standards and re-use across our industry, such as Financial Objects and FDC3.
 
GENESIS SPEAKER BIO
José Pozo, VP of Core Development at Genesis
Jose graduated with a MSc in Computation Software Techniques in Engineering from the University of Cranfield, and a MSc in Computer Engineering from University of Lleida in Spain as well as 1st class honours degree in Computer Systems Engineering from the same university.

Jose is a first-class computer scientist, with over 5 years’ experience developing high performance, highly scalable solutions and is the chief architect at genesis. Prior to joining genesis, Jose worked for Misys in London focussed on GPU software development.

Jose currently leads the core development team and has overall responsibility for all Core development within genesis.

YOUR APAC HOST - ANDREW KING
Andrew King, Principal Consultant at Suite2Go
Andrew King has worked for multiple financial services technology companies in London and Australia over the past 16 years simplifying complex problems and creating best of breed solutions across both the sell and buy sides of the market. Business Development roles with IHS Markit, Symphony, Droit, Duco, Cosaic and ipushpull have provided Andrew with insight into internal and external workflow pain points and the technology solutions available to create greater operational efficiency. https://www.linkedin.com/in/andrewking1

YOUR FINOS HOST - JAMES MCLEOD
James is the Director of Community at FINOS and wholeheartedly believes the transformation of Financial Services can only be fulfilled if Open Source is embraced under the three pillars of Contribution, Consumption and Community.

James has a twenty year career in software engineering having worked for telecommunication startups, the gaming industry, digital streaming platforms and financial services. Prior to joining FINOS James worked at Lloyds Banking Group where he focused on building engineering communities for Lloyds Bank, Halifax, Bank of Scotland, Scottish Widows and other LBG banks. While at Lloyds Banking Group, James also drove the adoption of Inner Source and Open Source partly through the creation of engineering guilds providing in-person and remote educational sessions and large hackathon events. James also spent a number of years consulting on software engineering projects for RBS, NatWest and Barclays. 

As a member of the FINOS team, James' ambition is to bring his extensive experience building communities to grow Financial Services into a powerhouse of Open Source. James is a true open source advocate and founded the “React London - Bring Your Own Project” meetup to provide an interactive forum for ReactJS and Javascript developers to come together. In the last two years it has grown to a membership of over 1500 individuals.

►►Visit here for more FINOS Events https://finos.org/hosted-events

►►Visit the FINOS website https://finos.org/ and Get Involved https://finos.org/get-involved)
Captions: 
	                              [Music]                               thank you james                               uh and welcome everyone to the                               second apac finos meetup                               um delighted to have you with us today                               and                               really appreciate you you joining us uh                               for this                               uh event and and community building uh                                activity                                for for finos um                                i'm gonna do uh some introductions i'm                                gonna run through the agenda for the                                call today                                and uh my role really is as as                                mc for the uh for the call um                                i'll introduce myself and then hand over                                to uh to to my colleagues                                uh who have uh kindly agreed to uh to                                speak with us today                                um so just a bit about me my name is                                andrew king                                um i am                                uh an individual supporter of finos so i                                have                                volunteered to to help build the                                community here in apac                                i'm based in australia but i've had                                various roles globally with financial                                technology firms throughout my career                                started off uh in my career in financial                                services                                in toronto i've also worked in in london                                and and now here in australia um my                                background                                the majority of my time was with a                                company called ihs                                market i've also worked                                for symphony who are participating on                                this call                                and and currently i am working to help                                a number of different financial                                technology firms with their business                                development strategy                                here in australia so firms like do co                                and dua cosaic                                where i sent the invitations from as                                well as i push pull                                so quite a varied exposure to the                                financial technology landscape                                and you know really                                excited to see how we can grow                                not only those businesses uh throughout                                the apac region                                um but also help uh the                                the conversation around open source and                                uh and finance is obviously a very                                important um                                vehicle for that conversation uh it's                                the purpose of the call today                                and obviously we're here today to uh to                                introduce you                                to the finos organization and the                                purpose of the organization                                um but also to two of the the major um                                uh proponents and and                                uh and and uh participants in the finos                                uh                                group uh which are symphony and genesis                                um so without much further ado i'm going                                to                                let you know the agenda for the the call                                today                                um and and who's going to be speaking uh                                through                                over the next uh                                                       um so first up we have james macleod                                uh james uh is the director of community                                at finos he's waving uh and he is based                                in london uh so he's gonna give an                                introduction to finos                                um it's its purpose and uh and some                                background                                um james isn't going to hand over to                                yong sheng                                tan who is a singapore-based uh                                former colleague of mine uh and who is                                the technical lead for symphony's                                developer relations in apec                                our third speaker is jose pozo                                jose is the vp of core development at                                genesis                                like james he's also based in the uk                                and he is going to give a talk                                about the genesis low code application                                platform                                um so a few little uh housekeeping items                                we will have time for some q a uh we'd                                ask you to hold your questions to the                                 end                                 uh or if you want to submit them through                                 the q a box that's also great and we'll                                 read those out                                 at the end um the call and the session                                 is being recorded uh we will make the                                 recording available but definitely be                                 aware that                                 that is uh that is taking place um and                                 without much                                 more from me uh i'm gonna hand over                                 to james uh from from finos                                 so james welcome hi thank you very much                                 andrew                                 um and it's an absolute pleasure to be                                 here this evening um with everybody                                 within the apac region um i'm james                                 macleod                                 finnos director of community um                                 and i'm your host for today so i'm the                                 person who's um looking at all of the                                 various different q and a questions etc                                 on the                                 the end of um uh the webinar and so if                                 you've got any questions they're going                                 to come in to me                                 and then i'll relay them to andrew and                                 the team                                 and i'm here today to talk to you                                 about finos uh what finos is and what we                                 do                                 and how you can get involved                                 um for those who are new to finnos um                                 finos is a independent non-profit                                 membership                                 organization whose purpose is to                                 accelerate                                 collaboration and innovation in                                 financial services                                 um and finos is actually um a project                                 within the linux foundation                                 um and so if um you are aware of um                                 projects like kubernetes or if you                                 uh use um node.js um                                 you're probably aware of the linux                                 foundation                                 and all of our um sibling um projects                                 within the linux foundation                                 um and finos is the vertical within the                                 linux foundation that looks after                                 financial services                                 and so we provide a mechanism for                                 keeping                                 um projects and collaborators and our                                 members safe                                 um within that regulated environment um                                 and we are a non-profit which means that                                 um we are here to serve our community                                 um and we're also here to serve our                                 members as well and so                                 you know as part of the linux foundation                                 we are here for                                 um firms and also participants within                                 the wider open source community                                 members are actually vast um and diverse                                 as well                                 and as you can see on this side um we                                 have a lot of banks                                 um technology companies and engineering                                 companies as well                                 as part of um the um finnos                                 community our membership ranges from big                                 banks                                 that you will have heard of so such as                                 city                                 deutsche bank goldman sachs all the way                                 through to hsbc                                 capital one um ubs and                                 morgan stanley to name just a few um                                 through to a lot of technology companies                                 that you will have heard of as well and                                 so                                 um because we're an open source um                                 foundation github                                 um are members of the foundation if                                 you're aware of github and                                 you know the community that forms around                                 open source but equally we also have                                 um gitlab as well um plus                                 we have um associate members like air                                 and                                 um interwork and lines is the um in the                                 source                                 commons have recently just joined as                                 associate members                                 um an open uk as well uh alongside                                 um consultancies such as accenturing as                                 you can see and also                                 the the members that we have on the call                                 not to forget symphony and genesis tea                                 um which we're very pleased to introduce                                 to you today                                 um and so as you can see we have a real                                 diverse um set of engineering talent                                 within our community                                 and we bring all of this together in                                 order to bring some                                 really interesting and diverse projects                                 um and events                                 um as part of the foundation                                 now the reason that i'm here today is to                                 um talk to you about                                 why um finos exists um                                 and uh how open sourcing finance                                 uh enables the industry um and so                                 people on the call will be where be                                 aware of ci cd                                 and devops and cloud um and also                                 development and how                                 all of the various different open source                                 tools that actually exist                                 within the industry come together um in                                 order to                                 allow us to accelerate our engineering                                 at pace                                 um now as you can see on this slide                                 there's a vast amount of tools that are                                 available to engineers and                                 organizations to use and the                                 acceleration                                 of digital transformation within uh                                 financial services wouldn't be possible                                 if it wasn't for these open source tools                                 that um teams can actually leverage                                 uh now within financial services                                 as you're probably aware um a lot of the                                 bigger banks                                 used to be um very kind of industrial in                                 the way the                                 um projects and technology                                 um teams were run um they would hand                                 their deliverables through a very                                 industrial revolution way of                                 developing um which is now changing um                                 into something which is a lot more um                                 agile and lean                                 and feature team oriented oriented um                                 and so this slide um describes how those                                 industrial teams or central teams the                                 delivery                                 um uh tickets would go through in order                                 to get um                                 done um have now come together into more                                 lean individual feature teams that                                 deliver                                 features faster by bringing the teams                                 together                                 um including open source which is a                                 great you know continuous                                 um agile way of working                                 however what we've um found within                                 industry is that um                                 across all of the various different                                 financial players so the big banks                                 a lot of the um digital transformation                                 is still happening within those                                 lean teams and so although                                 the individual feature teams are                                 delivering fast for their individual                                 projects that they're delivering                                 there's still room for improvement and                                 so there's still                                 ways and means in which we can create                                 even more efficiency                                 by taking all of these silo teams that                                 are delivering fast                                 individually and bringing them together                                 you know across the globe and so                                 not only do we um improve digital                                 transformation on the ground                                 but we can actually continue to improve                                 digital                                 transformation across all of the                                 different financial services companies                                 and fintech companies that are also                                 working in this way                                 and so therefore we actually create a                                 faster industry of more joined up                                 teams and more joined up collaboration                                 um so finos                                 is actually the mechanism in which we do                                 that                                 um finos um is a open source community                                 um that brings all of these various                                 different teams together                                 um and unites everybody within                                 uh financial services across                                 the open source landscape and as you can                                 see here we                                 unite everybody through um github                                 and we bring everybody together across                                 the globe including the apac region                                 and also within europe and also across                                 the us                                 as well in order to collaborate through                                 both                                 um open source delivery through code um                                 events and meetups such as this one                                 and various other events and blogs etc                                 um as you would expect of a foundation                                 that likes to                                 bring the financial services together um                                 in a safe and trusted                                 um mechanism uh                                 and so with that within um finos                                 we have various different projects um                                 that across                                 the the industry and the landscape um                                 such as                                 um legend which is actually being                                 contributed by goldman sachs                                 um perspective which is being um                                 contributed by jp morgan                                 we also have cloud service certification                                 which is you know joining together                                 of cloud services through infrastructure                                 as code and bdd testing um                                 the brings you know uh certified cloud                                 policies together with those um                                 various um different um uh                                 infrastructures code scripts                                 um and we also have standards projects                                 as well such as                                 fdc                                                               foundation                                 now all of these different projects so                                 these are just                                 um a subset of the projects that we have                                 um but the actual teams that are inside                                 the projects are teams from the                                 financial services                                 services industry and so if you um visit                                 the finos organization on github and                                 look within these projects you will                                 notice                                 um banking engineers i'm collaborating                                 and contributing equally                                 amongst the open source community and                                 you can also leverage these projects for                                 your own use                                 under an apache license as well                                 so to give you kind of like a um an                                 overview of the types of                                 um projects that we have so                                 perspective as i mentioned before and                                 also warts                                 fall under data visualization we                                 also have data modelling projects um                                 such as legend                                 as mentioned before but also morgan                                 stanley's                                 morpher under cloud we have                                 cloud service certification but we also                                 have a special interest group called um                                 devops mutualization                                 um that kind of spans into cloud and so                                 you know the                                 um borders between those projects and                                 the special interest groups are blurred                                 and                                 you tend to find um the same um                                 contributors come into                                 those two initiatives as well then we                                 also have                                 interoperability um such as fdc                                        is the standard that i mentioned before                                 that describes                                 um financial objects and how you can                                 actually share those across the                                 financial desktop                                 but we also have plexus as well which is                                 um a deutsche bank contribution into the                                 foundation                                 um and both on plexus and also warts                                 have been contributed and                                 are contributed into by deutsche bank um                                 engineers                                 we also have um data related                                 um projects too so it's not just um                                 libraries and software that you can                                 download                                 you know and clone and contribute into                                 but we also have                                 um projects that are related to data and                                 data modeling                                 um so both um data hub and data helix                                 um exist in order to simulate data                                 and provide a test environment for you                                 to                                 synthesize data for your development                                 teams                                 so they are data synthesis um projects                                 um and legend exists in order to model                                 um                                 financial objects both using the                                 uh legend um infrastructure um                                 plus also as legend working groups that                                 come together to describe                                 um how those various different models                                 you know should exist                                 and how they should be described within                                 the                                 legend data modeling platform itself                                 so the finnos community welcomes                                 everybody to join                                 um no matter you know the region uh                                 where you are so we very much welcome                                 contribution                                 um from the apac region as well and so                                 the question to ask is are you ready to                                 join the finnos open source community                                 um and so if you are and you would like                                 to get involved um                                 it's very uh straightforward and easy so                                 we asked people um to come to                                 um the philos organization on github or                                 finnos.org to                                 evaluate our materials and also evaluate                                 you know                                 software and code and anything else that                                 we have to                                 to offer and then consume you know those                                 and test them and use them and utilize                                 them                                 um also participating in our events                                 such as the event that we're at today is                                 a great way to get involved                                 and then ultimately in your own time and                                 at your own pace                                 you can start contributing into the into                                 the project as well                                 and then ultimately um finnos likes to                                 uh enable people's careers um so if you                                 would like to lead a finnos project                                 you can do that as well so my voice is                                 going to be husky give me a second                                 thank you very much and so with that                                 um i'd like to hand back to andrew who i                                 believe is going to                                 introduce our next um presenter                                 thanks james sound like sounds like we                                 were just about to run out of your your                                 voice there                                 so so just in time um                                 that's right now i really appreciate the                                 uh the introduction and overview                                 of finos i hope that gives everyone a                                 good sense of uh                                 the objectives of the uh of the uh                                 community and what we're gonna do now                                 and and what i'd like to do is is thank                                 our two presenters that are coming up                                 who have uh very much volunteered to be                                 front and center on this meet up and and                                 present uh                                 ways that their firms are participating                                 in the                                 in the open source environment um first                                 speaker is                                 from symphony so pyeongchang i'm going                                 to hand over straight to you and                                 give you the floor thank you andrew                                 if you could stop sharing your screen                                 okay thank you                                 is my screen up                                 yep perfect all right so uh thank you                                 james and andrew for the introduction                                 and                                 uh thank you thanos for having me today                                 so uh my name is yong chang and i                                 am the technical lead for the developer                                 relations team here at symphony                                 and uh today we're i'm gonna talk to you                                 a little bit about our                                 bot developer kit as well as its                                 migration into the                                 finos ecosystem so today's agenda will                                 be fairly high level                                 i'll talk a little bit about myself                                 followed by symphony if you're not too                                 familiar with us                                 we'll talk about bots and why they                                 matter how to start building them with                                 the bdk                                 or bot developer kit                                                   bringing bdk                                 into finos and how you can get started                                 with bdk                                 followed by a really short demo on the                                 actual mechanics of uh bringing up a bot                                 and we'll have q a right at the end of                                 this session so feel free to                                 write your questions in the q a box and                                 we'll get to them                                 at the end so a little bit about me i                                 am born and raised and still based in                                 singapore i've spent                                 most of my career in finance in banking                                 where i started                                 and then in asset management before                                 landing in symphony so i've been through                                 a couple of roles                                 from operations to market risk to                                 sales and trading analytics and then                                 through equities collaboration                                 technology and                                 that's how i ended up at symphony so                                 i've i've been through working on                                 back-end                                 front-end projects so pretty much full                                 stack and then on                                 the data front as well and                                 infrastructure is something of an                                 interest                                 for me so within symphony what i do with                                 developer relations is most of my time                                 is spent on advocacy so                                 events like these as well as reaching                                 out to the developer community                                 we do learning so uh the content for our                                 structured                                 certification program that you'll hear                                 me talk about later we do events so like                                 hackathons meetups so and so forth                                 i also do a bit of maintenance on the                                 documentation that our developers read                                 as well as some internal automation                                 projects that keep our team running                                 i also have great passion for coffee                                 photography running keyboards so                                 hit me up if you want to know about                                 those or you can email me at                                 young.com symphony.com or linkedin                                 through there                                 so if you don't already know about                                 symphony i'll give you a very brief                                 introduction so                                 symphony is the leading secure scalable                                 collaboration                                 platform for financial services so we                                 pride ourselves in our top                                 and class data security and compliance                                 capabilities                                 this enables cross-company collaboration                                 and we are the largest trusted community                                 as a result of                                 all these capabilities and so our open                                 architecture enables our customers and                                 partners to build things like                                 automations and integrations                                 and these are not for fun so the idea is                                 that people can use these to build                                 solutions                                 that address industry and market                                 challenges so                                 end of the day you have fit for purpose                                 workflows that work across the industry                                 and that's what symphony is so how do                                 you get started actually building these                                 automations we start with the concept of                                 bots and we see bots as the connective                                 tissue within your organization                                 what that means is you have your own                                 internal systems and data resources                                 and these are on the left here so you                                 could have a database an nlp engine                                 research distribution and whatnot and                                 all these little disparate systems                                 within your organizations exist as they                                 are today                                 and you could have about orchestrated                                 workflows that make use                                 of these data resources or performance                                 action and so on and so forth                                 and you can use uh symphony apis that                                 are open                                 to do things like manage rooms send                                 messages look up the symphony directory                                 and have all of these orchestrated by                                 this single bot that will serve                                 a certain function so we see this as                                 incredibly powerful                                 and the way that workflows should be                                 bring should be brought forward                                 and so how do you get started building                                 bots uh this comes to our bot developer                                 kit                                 and the bdk                                                         evolution                                 of previous sdks that were traditionally                                 focused on                                 our rest api bindings so one rest call                                 is bound to a line of code for example                                 and uh there was a previous version of                                 the bot developer kit the                                              that                                 in an opinionated stack but i think some                                 people weren't very                                 on board with parts of that architecture                                 so what we've done through                                 events and feedback is we've rebuilt                                 this from scratch                                 collaboratively built with our community                                 on the key principles of simplicity                                 as well as modularity so with that                                 we built an ecosystem of modules                                 basically so it's not just one                                 project it's a bunch of different                                 projects split across three layers                                 there's the core layer                                 the advanced layer and the integration                                 layer and within these three layers                                 there are different modules                                 that fit into the picture all of them                                 built upon the foundation of our same                                 open api stack so things like                                 configuration authentication                                 and uh the actual api calls we don't                                 want you to do that manually we have                                 the bot developer kit do that for you                                 and on top of that there are further                                 abstractions                                 so if you're binding like a command                                 handler how do you how do you handle                                 a conversation view so we have the                                 activities api to abstract that                                 for you so you don't have to write that                                 from scratch and then                                 integration layer basically binds uh                                 frameworks like springboot so that                                 springboard developers feel                                 like they're developing using a native                                 language and it feels                                 uh very normal for them to to develop in                                 the bdk                                                            modules are maintained by symphony                                 they are well documented they are well                                 supported and they continue                                 to have feature requests and so on and                                 so forth                                 but the idea of this new ecosystem is                                 such that there will be modules that can                                 coexist                                 that are outside of the rematch of                                 symphony and we see these modules as                                 being built by                                 community efforts and why this is                                 important is because                                 there are some aspects of workflows that                                 are not                                 symfony won't be privy to so if you're                                 building a very specific                                 technical integration with a product or                                 if you have a specific                                 business use case that you like to do                                 that will be something that you can                                 maintain                                 and these will be modules that can be                                 loaded along with the bot developer kit                                                                     and they will coexist very nicely                                 and so this brings us to the move to                                 finos so                                 uh the the bdk                                                     officially moved in middle of last month                                 and although this is just                                 a simple move of a repository this is                                 the culmination of                                 months of work between the symphony                                 engineering team as well as finos                                 in terms of working out the different                                 aspects of how                                 projects should be incubated within                                 finos the legality the processes                                 the best practices of maintenance and so                                 on and so forth                                 so we were we were quite happy to move                                 all this                                 over so finos as james has mentioned                                 earlier has a very large                                 ecosystem a very very large group of                                 different banks and financial                                 institutions                                 so we we feel like this is a good place                                 for us to put something like this where                                 our interests                                 align in terms of expanding the                                 ecosystem                                 uh building out community projects where                                 it makes sense and having them be reused                                 across                                 the financial services industry so our                                 vision remains the same                                 it should be an ecosystem of these                                 projects and you could have specific                                 modules that address certain domains uh                                 it could be trading it could be                                 settlement it could be any any sort of                                 business workflow it could be technical                                 integrations with nlp engines and so on                                 it could be product integrations if you                                 are a product company or vendor                                 and so this is just the start of                                 symfony's involvement we also have                                 more projects in the pipeline so                                 currently it's the bbk                                              there is also the python that is in beta                                 now as well as                                 a net version that will come at the end                                 of the year these will also be                                 contributed to finos                                 as well as other more advanced tools                                 like our ui toolkit for                                 loading extension apps so these are ui                                 based applications instead of                                 bots so how you get started with bdk                                     so at symfony what we have done is                                 create a completely                                 structured learning program at                                 learn.symphony.com this is where you                                 will get free                                 training and certification so you'll go                                 through a self-paced                                 and a self-led program where you will                                 watch videos that will describe                                 concepts as well as a live demos for how                                 to get started coding bots                                 and a certification exam to prove that                                 you know you have understood all that                                 as part of this program you also get                                 free access to a developer sandbox                                 so i'll show that in a bit and all that                                 you need basically to get started with                                 your bots                                 is have our bot generator which creates                                 projects for you                                 and uh you can get started running this                                 simple command called yo symphony                                        at the end of the day                                 all you need is an idea uh the training                                 from our certification center                                 and you have your bot so let's get                                 started with a demo                                 so as i said all you need is a very                                 simple                                 command so what i'm going to first do is                                 create a project                                 with that command so i'll just type yo                                 symphony                                     this is going to give me a number of                                 questions to answer                                 so uh i will have my sandbox                                 so this is something that you'll get                                 free of charge if you enter our                                 certification program i will have                                 credentials that are part of that                                 program as well i will be creating a bot                                 today                                 in java with no framework using maven                                 and i'll just leave the rest as defaults                                 so it's gonna hit to create an rsa key                                 pair and                                 do an initial compile and we are done so                                 we can now open that project in our                                 favorite ide                                 so i'll give you a very quick run                                 through of what that looks like                                 so when the project is imported into                                 your ide you have                                 a complete project scaffold running                                 already and this                                 includes things like a defined                                 configuration file so that's the same                                 details we entered earlier and this                                 includes the rsa key pair so what you'll                                 do is take                                 the public key and give it to your                                 product administrator uh in the interest                                 of time i've already uploaded                                 one earlier so i'll be getting rid of                                 the generated one                                 and putting mine in and if you open the                                 main                                 class you'll see that it's a very simple                                 class that just has a bunch of different                                 command handlers already defined so                                 basically we can just go ahead and run                                 the project                                 and what that will do is it will launch                                 the application                                 it will start doing the authentication                                 process it will start                                 creating a data feed which is how events                                 are handled in symfony                                 and basically your bot is up in a matter                                 of seconds                                 and so now that your bot is running                                 let's go have a look at what that looks                                 like                                 so this is the developer sandbox called                                 develop two                                 and so we'll look for our bot here i                                 named it finos meetupbot                                 and so my bot is there so in my code i                                 have a                                 very simple gif command handler just so                                 i                                 all i need to do is go here and type                                 shift                                 and see if the bot responds and                                 there you go so there you have it in a                                 matter of seconds i have a complete                                 project generated                                 a bot running and the bot basically                                 responds to                                 commands that i send and so you can do                                 things like have                                 text messages structured forms and so on                                 i'm not going to dive                                 too deep into how to actually build up                                 the rest of these things but basically                                 with the bdk                                 the full arsenal of symphonies open apis                                 are at your disposal                                 and you can learn all of those things at                                 our learning                                 website as well as get your free                                 certification                                 so uh yeah that's all i have for you                                 today                                 uh thank you for your time and i think                                 the                                 questions will get to them later so feel                                 free to reach out to me at                                 this email address or my team at                                 developer.relations symphony.com                                 and i'll hand over to our next speaker                                 who is jose                                 thank you thanks yong                                 shang that was great really really                                 informative and                                 very impressive so i appreciate that                                 you're right we've got some questions                                 but we'll save those to the end if                                 that's okay                                 um and uh as you said uh next is                                 jose pozo jose thank you so much for                                 joining us i know it's an early morning                                 for you in london                                 um looking forward to hearing more about                                 genesis i know you guys don't have a                                 presence in apec                                 yet but that may change in the in the                                 near future and                                 uh also congratulate you on your uh                                 very recent uh funding round and maybe                                 you could say a few words about that                                 that's uh that's very exciting news for                                 the uh                                 for the future of your your company um                                 jose                                 i'll hand over to you and um you've got                                 the floor                                 thank you andrew yes so yeah                                 thank you so much about um you know the                                 congratulations they                                 uh we worked really hard to get this                                 seriously funding                                 it was uh amazing for us i've been with                                 genesis since the beginning                                 so pretty much since the first line of                                 code was written                                 and honestly it's been a journey so i'm                                 really happy to be here and talk about                                 it                                 um i'll start sharing my screen                                 let me know if you can see it                                 yup can see it perfectly okay perfect                                 right so uh thanks joan shank for your                                 presentation that was really really                                 interesting we we in genesis we                                 partnered with symphony not so long ago                                 i think it was november                                 and we have already started building                                 bots and                                 we do all sorts of sorts of really                                 interesting things actually we                                 we can control all of our cloud                                 instances from symfony                                 by using commands and our integration                                 with the genesis environment manager                                 and honestly it's a great thing i mean                                 our sales guys can bring up demo                                 instances                                 you can stop them and start them                                 whenever they want a very very useful                                 tool                                 so yeah looking forward to more                                 integration with symphony                                 uh now my name is jose poser and i'm                                 going to talk about                                 how do you use open source technology in                                 genesis                                 and why do we think it's it's a great                                 thing for                                 a local application platform but really                                 any application                                 so um i'll start by talking a bit about                                 myself                                 um i have about                                                          in developing high performance and                                 distributed applications                                 but really my focus on financial                                 services                                 i started about eight years ago i joined                                 the company called                                 mysis which is now called finastra i                                 believe                                 and i started working on a domain                                 specific language based in groovy                                 which would generate c code which runs                                 on gpus and                                 and this was very very useful because it                                 allowed                                 business analysts to code risk scenarios                                 using monte carlo simulations                                 that would run uh hundreds of times                                 quicker than just a cpu simulation                                 um my interest for high performance                                 and basically enabling other users                                 translated into                                 what genesis is today right we want to                                 have something                                 that enables people without lots of                                 knowledge to create their own                                 applications and                                 they are high performance robust and                                 reliable                                 so the agenda for today                                 is for items uh starting with the                                 genesis vision and history                                 the challenges of using open source not                                 everything is is a                                 an easy path every time the lessons                                 learned                                 and some examples so                                 starting with the genesis vision and                                 history                                 we wanted to be the the leading local                                 application platform provider in the                                 capital markets                                 and we thought it was a great moment to                                 do this the reasons for it is the                                 microservices started to being                                 something commonplace across the                                 industry but not so much within the                                 financial services industry                                 so it was a great opportunity to bring                                 them in                                 open source was also not something very                                 common in the financial services                                 industry either                                 it was a lot more about proprietary                                 solutions that are certified and all                                 they did in all these different things                                 rather than just relying on open source                                 technology                                 cloud services same story most of uh                                 banks and investment banks they would                                 have their own                                 internal cloud or they would have their                                 own on-premise servers but they were not                                 relying on cloud services so much                                 so everything seemed like a great                                 opportunity to jump in                                 with a new platform that takes advantage                                 of all these new trends in technology                                 and really great really                                 great technologies that financial                                 industry is not using yet                                 so we started focusing on technology r d                                 first we wanted to have a great                                 foundation for our framework                                 before we actually go to market and                                 start selling to clients                                 and we spent several years working on it                                 um                                 i could explain all this but my                                 colleague ray uh created a great brave                                 video                                  that now james is going to display for                                  you well it will be a lot more clearer                                  than if i tried to                                  so um change with you please uh share                                  with us i'll stop sharing my screen now                                  my name is ray chi and i'm head of                                  solutions delivery at genesis global                                  so what is an lcap lcap stands for low                                  code application platform                                  low code is pretty self-explanatory you                                  can build                                  and deliver solutions exactly as you                                  need them with much less coding effort                                  less code means faster delivery of                                  enterprise ready systems at lower cost                                  the application platform is the                                  comprehensive set of services and                                  components                                  that provide a lot of the capabilities                                  that you need for a system straight out                                  of the box                                  which greatly accelerates solution                                  delivery                                  they're enterprise ready and proven so                                  what is the genesis lcap and why is it                                  different                                  there are a number of lcaps available                                  but not all                                  lcaps are the same they may all have a                                  number of common attributes or                                  capabilities                                  however be quite distinct in their                                  intricacies of microservices                                  business components and tools the                                  genesis lcap is the financial markets                                  native                                  lcap that is built bottom up                                  specifically to service the requirements                                  and challenges of financial markets                                  most lcaps offer some tools to support                                  the development process that is required                                  after all there is still some coding                                  effort so having optimized dev tools                                  accelerates the development process they                                  offer a selection                                  of reusable functional components that                                  perform actions that support the                                  business process that you're trying to                                  implement                                  you get non-functional components for                                  all fundamental system requirements                                  like security scalability resilience                                  robustness failover                                  all systems need these capabilities but                                  with lcap they come straight out of the                                  box                                  and then you have a whole range of tools                                  to support the entire life cycle                                  from requirements and planning the                                  integrated development environment                                  managing the code managing the builds                                  managing the deployments managing the                                  environments                                  all the way through to operating the                                  production system                                  and managing and evolving the system                                  going forward                                  taken together all of those capabilities                                  comprise a low code application platform                                  the genesis difference is unlike most                                  lcaps which have evolved from generic                                  business process and workflow tools                                  genesis has been specifically designed                                  for creating and solving                                  complex high performance financial                                  services solutions                                  the entire platform has been designed                                  and architected                                  with financial services in mind so it is                                  capable of delivering the simple                                  business process management workflows                                  through to the high complex                                  low latency high throughput requirements                                  of real-time data distribution                                  in risk and trading                                  right so that was a good summary about                                  what an lcap is                                  but obviously being head of core                                  development of genesis                                  means i focus on the server-side                                  platform development                                  and i'd like to share with you a video                                  of                                  how you can define data schemas and you                                  can quickly bring up an application                                  displaying real-time data on grids                                  so i have another short video for it um                                  james will you please show it                                  thank you                                  my name is jose and i am the head of                                  core development at genesis                                  let me show you how quickly we can                                  create a genesis data server component                                  which is able to provide real-time                                  information to a simple trade plotter                                  first of all we need to define some                                  relevant fields for the trade table                                  like id quantity symbol and price                                  as you can see the gpal definition helps                                  me by providing suggestions and auto                                  completions                                  and moreover it's able to find mistakes                                  automatically                                  as an example i will not be able to                                  assign a text value to a numeric field                                  additionally i can access the full                                  documentation of this gpal definition                                  and see sample configuration so i can                                  quickly learn on the go                                  now that the trade fields are defined it                                  is time to create the trade table                                  we are now using the gpal definition for                                  tables and the user experience changes                                  accordingly                                  as you can see the gpl system is telling                                  me that i need to define a primary key                                  to define a table so i will go ahead and                                  do that                                  each trade entity will be identified by                                  its id field                                  so this is the ideal candidate for the                                  primary key                                  but now i have another error showing me                                  that the id field is not part of this                                  table definition                                  so let us add it as well notice how the                                  fields i defined previously are                                  available in this scope                                  so you can reference and reference them                                  quickly it is important to remark that                                  these fields could be defined in                                  separate components                                  and automatically imported without                                  having to declare them first                                  so now we have a tray table defined in                                  our system and we need to expose a                                  real-time field of information to the                                  front end                                  in order to do this i need to create the                                  genesis data server                                  gpal definition as this is a server                                  component definition                                  i can now reference the table i have                                  just created in the previous step                                  and that's it this basic definition is                                  enough                                  to provide trade entities from our                                  backend to our graphical interface                                  however query definitions are rich in                                  functionality                                  and have many customization options as                                  an example                                  i will add a filter on this query so we                                  will only show trades with high enough                                  notional values                                  right thank you thank you for that so i                                  hope um that explained a little bit                                  uh how we do things in genesis what is a                                  bit of a low code application platform                                  we have easy ways to define data schemas                                  easy ways to define                                  uh data grids you can see in real time                                  etc                                  but how do we achieve all this so that's                                  what we're going to talk about                                  now let me share my screen again                                  there you go right                                  so open source technology challenges                                  there's a bit of history here um but                                  first of all                                  the challenges really so there are so                                  many open source technologies available                                  and so many databases network libraries                                  it's just so much right there's a huge                                  and amazing ecosystem um                                  it's very very difficult to choose which                                  technology suits your project best                                  so when you start from scratch and you                                  want to create a new application                                  you might choose a database layer                                  thinking that one is the best and the                                  most suitable for the project but then                                  over time requirements might change and                                  therefore your database is not so                                  suitable                                  anymore you need to change it so you've                                  technically chosen the wrong technology                                  for the use case but you couldn't know                                  ahead of time                                  now you need to spend quite a lot of                                  time changing it                                  and that's not great um                                  obviously better technology also comes                                  after time                                  and therefore you would like to upgrade                                  but sometimes it's not so easy your                                  technology is too coupled                                  to that library or database                                  and the investment is too high so                                  how can you move forward make sure you                                  can take advantage of open source                                  without spending too much money on it                                  and without making sure you're too                                  tightly coupled to                                  a certain solution well                                  this is a lesson we learn over time and                                  starting with our genesis database layer                                  we started using some database layer                                  called foundation db                                  it was a great great amazing technology                                  um it was built to be some sort of                                  replacement of google spanner which                                  powers the google search engine so                                  incredibly                                  scalable and fast unfortunately was                                  property technology                                  unfortunately and unfortunately in a way                                  we'll get there                                  but basically what happened is it was                                  acquired by apple                                  um apple saw the opportunity to buy                                  great technology                                  at a very good price um and they decided                                  to use it to power the whole global                                  icloud infrastructure                                  now the genesis framework and platform                                  at the time was built around foundation                                  db                                  and this presented a big issue right we                                  cannot use the technology anymore has                                  been bought out                                  so fortunately apple released it as an                                  open source                                  database layer a few years later                                  although it was too late for us                                  but it didn't matter and it didn't                                  matter because at this point we realize                                  we cannot rely on property technology                                  anymore                                  or not solely solely on it right our                                  approach to open source change                                  completely                                  and what did we decide to do                                  well probability technologies pose high                                  risk                                  we learned our lesson very early in our                                  journey and that's                                  a good thing it means we need to provide                                  an abstraction layer for each core part                                  of the system                                  whether it's a database layer or a                                  pop-up mechanism whatever it is we need                                  to have an abstraction layer we cannot                                  just rely directly on                                  a third-party technology especially if                                  it's proprietary                                  so starting with the database                                  abstraction layer                                  uh we decided to harness the power and                                  efficiency of particular database layers                                  like                                  aerospike amazing database layer uh                                  very high performance foundation db same                                  different                                  use cases but amazing no sequel database                                  layer                                  postgres you know                                                        of                                  being the greatest open source                                  relational database                                  etc you can use all those within the                                  database genesis database abstraction                                  layer                                  now it is not just the only place we use                                  database subtraction                                  so we use open source there are three                                  different areas                                  where we use open source very very                                  strongly one of them is event processing                                  the second one is event notification                                  message bus                                  and the third one is the database layers                                  already discussed                                  in terms of event processing we chose                                  reactive extensions                                  this is an amazing abstraction around                                  low-level threading synchronization                                  threat safety                                  it basically allows you to process                                  events without having to care about all                                  those sorts of things                                  and not just in one language but many                                  many different languages                                  so the same concept you learn for rxjs                                  in javascript you can apply to rx java                                  in in java world                                  or you can apply to.net in rx                                  um this is great for us as a developer                                  and also as a platform provider because                                  if you need to use                                  anything in your front implementation                                  related to event processing                                  you're probably going to be familiar                                  with it because it's a commonplace                                  tool it's available in many many                                  different products                                  and it's also used in many different                                  types of solutions so not just database                                  apis                                  but also front-end platforms like                                  angular or libraries                                  our event and notification message bus                                  was also abstracted so we can use                                  different                                  open source solutions with it so xeromq                                  was our initial messaging buzz                                  um we find like it's a great solution                                  for parts up mechanism                                  it has some downsides so with building                                  cloud infrastructure as multicast                                  multicast messages are not available in                                  our cloud providers                                  therefore we easily swap for aeron                                  an errand is built for performance                                  highest throughput and most predictable                                  messaging with                                  using simple binary encoding also                                  aligned with fix                                  so fixed has standards with uh simple                                  binary encoding as well                                  so really really a great fit for our                                  financial services platform                                  and again we could only do this because                                  we rely on open source solutions and we                                  rely on                                  making sure that we can move forward                                  and use any technology we can with our                                  abstraction layers                                  we can also use property solutions like                                  solas                                  but that's not really relevant for this                                  channel                                  then database layer                                  non-time series so we use other                                  technologies from time series but as i                                  mentioned before                                  foundation to be horizontally scalable                                  multi-record asset guarantees                                  focus on reliable inconsistency so cp                                  mode                                  an error spike similarly focus on                                  performance and availability rather than                                  multi-record asset guarantees postgres                                  again who doesn't know passwords amazing                                  database                                  now the great thing about having these                                  databases on our site                                  is that the same solution the same                                  product using the platform                                  can be used in these three different                                  databases without changing the code base                                  you just need to switch the database                                  settings right                                  so if you want to create a high                                  performance reconciliation                                  tool that is able to process millions                                  and millions                                  of records per second you probably                                  choose aerospike                                  but if you want to have just a few                                  thousand records a day and then                                  an easier way of creating this data                                  using a relational database                                  you would use postgres and that's fine                                  whatever you need you can choose and you                                  can pick and choose and that's a great                                  thing                                  to make sure every single solution fits                                  our clients                                  now the importance of the fitness                                  community is that                                  leveraging open source is                                  really the way to go not just because                                  it's ready available and it's everybody                                  can fix it and everybody can                                  use it it's just because everybody can                                  contribute to make a better future into                                  accelerate development                                  we don't want to reinvent the wheel                                  every time we want to make sure we use                                  the best tools at hand                                  now we contribute to a variety of                                  cross-industry open source initiatives                                  so we've we've done                                  pull requests for aerospike um issues                                  with farming clients also for something                                  like quick fix so it's a                                  it's an open source fix gateway                                  implementation so we do contribute and                                  we also contribute to fitness                                  initiatives so                                  we have in integration with fdc                                       financial objects all those different                                  things                                  um now that's all i had to say                                  um things they say well                                  and if you have any questions i'll be                                  happy to answer them in the game final                                  thank you                                  that's great jose thank you so much um                                  really really appreciate that it was                                  incredibly insightful into the                                  into the genesis platform um just want                                  to                                  before we launch into q a uh once again                                  thank                                  all of our speakers uh james                                  jose and yong chang uh really appreciate                                  you                                  bringing finos and and your experiences                                  with finance to the                                  apac community uh it's a growing                                  community and um                                  you know we we hope to see and events                                  like this                                  uh help help that uh community flourish                                  so                                  um we'll look uh we'll look to the next                                  one                                  uh and and we'll let you know when that                                  is uh when that is coming now we do                                  definitely have some questions uh first                                  one                                  is from ethan from cosaic                                  for yongsheng and ethan's asked will the                                  bdk                                                             so thanks edan for the question uh the                                  way that we have                                  uh structured our prioritization process                                  is just based on demand                                  so java was first because most of our                                  customers                                  are primarily on java and python.net are                                  just in descending order of demand so                                  unfortunately                                  node.js doesn't have that level of                                  demand that we see right now                                  it i see it picking up but you know not                                  in a production setting there are                                  pockets of customers using it but                                  unfortunately it's not quite there yet                                  so                                  it's it will be there eventually but                                  after uh                                  python and net come to general                                  availability so yeah                                  stay tuned and thanks for your question                                  great thanks hyeongshang jose a question                                  for you                                  anonymously um this one seems quite                                  technical to me but                                  um how do you control database schema                                  changes across the different database                                  back ends right so                                  that's a great question um so if you                                  notice in                                  in the um in my video that we've shown                                  before                                  i define a very simple database female                                  with some fields and then a trait table                                  and this is what we call our gpal                                  dictionary file so the genesis platform                                  abstraction layer                                  dictionary files uh and this is like an                                  abstraction                                  it's a it's a schema abstraction that is                                  valid for every single database and the                                  way this works is                                  we have a tool called remap so it can                                  verify the current schema in our                                  database layer against the changes in                                  the                                  dictionary files and then it can apply                                  the changes in the data model so                                  obviously the data model for aerospike                                  it will be completely different than                                  foundation to be these two databases                                  have different apis they don't have                                  relational database                                  they don't have any sequel apis so the                                  apis look completely different                                  data model looks completely different                                  they're schema-less but nonetheless                                  we have our translation layer so every                                  time you call remap it's able to                                  understand this abstraction schema                                  and do the appropriate changes in the                                  relevant background you're using                                  that's great thank you james i i can                                  tell you're itching to ask a question or                                  two                                  so um i'll give you a chance to do that                                  yeah absolutely uh before i actually ask                                  my question i was looking at um alex's                                  um question that he just put in                                  the q a panel um alex if you can just                                  validate who your question is for                                  um that'll be awesome um but in the                                  meantime i'll ask my question if that's                                  okay andrew                                  um so yongshang this is this one's to                                  you                                  so clearly through the demo that you                                  gave of um the symphony bbk for java                                  um it actually accelerates uh                                  engineering                                  can you tell us you know how much                                  acceleration the project actually gives                                  to anybody                                  you know who wants to develop in that                                  area compared to                                  not using the bdk for example                                  so if you as we see a lot of customers                                  uh                                  broadly divided into two camps one of                                  them they've                                  traditionally used our osdks so that's                                  the supported kind of                                  format and the other side of things                                  they chose to write it from scratch so                                  there's a risk that                                  things break because as a sas provider                                  we roll out                                  new features new endpoints and                                  things change on a pretty rapid basis                                  well rapid for financial services                                  and we find that the when you start to                                  maintain these things on your own                                  issues start to crop up really soon                                  especially when you put them in                                  production                                  and you don't have enough resources to                                  maintain them so the bdk                                                a way for us to simplify that approach                                  by dividing                                  the modules down into different parts                                  where we have the core structure                                  that is much easier to maintain and that                                  part will not change often and then                                  we'll have                                  different abstractions that you can then                                  use to accelerate different things like                                  building                                  a command handler so if you do do a                                  command handle by scratch                                  yourself uh by hand today the old sdks                                  it might take you an hour maybe two with                                  the new                                  uh structure it takes you five seconds                                  so there are different                                  abstractions that we create because we                                  know that there are more common                                  problems to solve and so we deliberately                                  build those into things that are just                                  native and out of the box so it enables                                  you to                                  really accelerate the initial part                                  really really quickly                                  that's amazing thank you                                  um i think we've got time for one more                                  question which has come                                  through for jose um jose the question is                                  from alex lawrence how do you                                  model business validations across                                  different entities in the system                                  that's a good question it's quite a long                                  one to answer as well                                  i'll do my best so right one minute                                  additions                                  uh business validations um we                                  do have different ways of handling                                  validation so                                  starting from um an entity perspective                                  and i know you ask about                                  across different entities but starting                                  from an entity perspective when you                                  define your trade table                                  you can define certain attributes like                                  um                                  if some viewers are nullable or not                                  notable you define their field type you                                  define all these different things                                  and then you can automatically translate                                  those into metadata resources                                  that are exposed to the front end so                                  when the front end let's say needs to                                  insert a new trade you will know exactly                                  all the                                  types for each field uh all the                                  non-notable null level                                  all those things if they're mandatory                                  they're optional because perhaps you                                  have some default values                                  um everything is exposed to the front                                  end and the front end can                                  even automatically inflate the dialog so                                  that's                                  pretty pretty nice to use now if you                                  want to use different entities we have                                  different approaches one of them is to                                  use an event handler                                  which will allow you to do validation                                  across multiple entities                                  or also the state machine which is                                  something                                  we want to talk more about very soon we                                  need to create some material and some                                  videos for it but basically it allows                                  you to define                                  states state changes across entities                                  with certain validation and this can be                                  reused                                  across the whole system so it's almost                                  like a state model definition                                  with let's say an order workflow the                                  order life cycle new order                                  assign order amend order cancel order                                  all these different things all the                                  different                                  requirements to change the state from                                  one to another all those different                                  things can be handled with a                                  very nice to use modeling tool we're                                  working on                                  and we're always constantly improving um                                  and yeah that's pretty much it thanks                                  for the question that's a really good                                  one                                  thanks so much jose i think we're we're                                  now officially out of time                                  um look once again thanks to all the                                  speakers                                  thanks also to all the participants um                                  this                                  is all kind of meaningless without you                                  so                                  we really appreciate you taking the time                                  out to uh to come and learn                                  about finos about symphony and about                                  genesis this afternoon                                  um look forward to seeing you at the                                  next meet up and um                                  thanks again everyone take care                                  thank you everybody all the best                                  thank you bye                                  [Music]                                  you
YouTube URL: https://www.youtube.com/watch?v=QYqwKG8CpR0


