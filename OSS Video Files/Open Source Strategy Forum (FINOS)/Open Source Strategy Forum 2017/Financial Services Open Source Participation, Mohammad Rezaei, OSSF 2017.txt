Title: Financial Services Open Source Participation, Mohammad Rezaei, OSSF 2017
Publication date: 2018-01-09
Playlist: Open Source Strategy Forum 2017
Description: 
	As presented by Mohammad Rezaei, Technology Fellow in the Platforms business unit at Goldman Sachs, at the Open Source Strategy Forum 2017.
Captions: 
	00:00:05,960 --> 00:00:11,730
thank you for coming especially for the

00:00:08,100 --> 00:00:13,260
last session of the day at 4:30 p.m. I'm

00:00:11,730 --> 00:00:15,450
gonna be talking about open sourcing

00:00:13,260 --> 00:00:16,980
your enterprise I've been involved with

00:00:15,450 --> 00:00:19,860
open source effort at Goldman Sachs for

00:00:16,980 --> 00:00:23,189
a long time for at least six seven years

00:00:19,860 --> 00:00:25,740
now and during that time we've taken an

00:00:23,189 --> 00:00:28,650
enterprise that was essentially friendly

00:00:25,740 --> 00:00:30,240
to consumption and we've we've moved

00:00:28,650 --> 00:00:31,800
that forward to a place where we're not

00:00:30,240 --> 00:00:34,020
only finally to consumption but we're

00:00:31,800 --> 00:00:36,480
also very friendly to contribution and

00:00:34,020 --> 00:00:40,739
ownership and today what I want to do

00:00:36,480 --> 00:00:42,350
for you is walk you through why that's

00:00:40,739 --> 00:00:46,020
actually good for the organization and

00:00:42,350 --> 00:00:48,180
then give you the recipes we've honed

00:00:46,020 --> 00:00:50,280
over the years that have been successful

00:00:48,180 --> 00:00:52,710
for us that you may be able to implement

00:00:50,280 --> 00:00:55,890
in your organization's to be able to do

00:00:52,710 --> 00:00:57,840
the same thing and at the end I'll give

00:00:55,890 --> 00:01:00,329
you a set of questions you have to ask

00:00:57,840 --> 00:01:03,359
yourself to see how far you've gone

00:01:00,329 --> 00:01:05,460
along the openness scale how successful

00:01:03,359 --> 00:01:11,580
have you been in making your enterprise

00:01:05,460 --> 00:01:13,259
open-source friendly so I always like to

00:01:11,580 --> 00:01:14,520
start with saying that there's three

00:01:13,259 --> 00:01:16,170
things you can do with open source you

00:01:14,520 --> 00:01:17,520
can consume open source you can

00:01:16,170 --> 00:01:20,220
contribute to open source and you can

00:01:17,520 --> 00:01:21,630
own open source and it's perfectly all

00:01:20,220 --> 00:01:24,240
right if you start on the consumption

00:01:21,630 --> 00:01:27,210
end because a lot of the value

00:01:24,240 --> 00:01:29,790
proposition comes from that but don't

00:01:27,210 --> 00:01:33,360
mistake the fact that not contributing

00:01:29,790 --> 00:01:34,920
and not on not owning don't fully give

00:01:33,360 --> 00:01:36,630
you the benefits of our source and

00:01:34,920 --> 00:01:41,310
that's what you have to really realize

00:01:36,630 --> 00:01:42,780
to push those efforts forward you've

00:01:41,310 --> 00:01:44,700
heard about the benefits of open source

00:01:42,780 --> 00:01:46,380
all day long today so I'm trying not to

00:01:44,700 --> 00:01:48,750
harp too much on these but I'll try to

00:01:46,380 --> 00:01:51,299
point out the bits we're contributing

00:01:48,750 --> 00:01:54,060
and owning make a big difference for you

00:01:51,299 --> 00:01:56,159
so when it comes to reducing costs

00:01:54,060 --> 00:01:58,700
there's the obvious okay somebody else

00:01:56,159 --> 00:02:01,680
heard this code I can use it that's nice

00:01:58,700 --> 00:02:04,020
but what happens if somebody has wrote a

00:02:01,680 --> 00:02:06,990
piece of code and they had 95% of what

00:02:04,020 --> 00:02:09,600
you needed and ended in 5% more if you

00:02:06,990 --> 00:02:11,820
can't contribute then you have a problem

00:02:09,600 --> 00:02:16,440
because you either end up writing all of

00:02:11,820 --> 00:02:18,120
it or you end up taking that code inside

00:02:16,440 --> 00:02:21,180
and forking it which is

00:02:18,120 --> 00:02:22,800
also costly so one of the benefits of

00:02:21,180 --> 00:02:25,440
contributing would be that you can

00:02:22,800 --> 00:02:29,099
actually do that 5% extra and get where

00:02:25,440 --> 00:02:31,050
you want to be there is one other aspect

00:02:29,099 --> 00:02:33,989
that we've probably not heard too much

00:02:31,050 --> 00:02:37,739
about today which is the the legal cost

00:02:33,989 --> 00:02:40,530
of of consuming open source if you have

00:02:37,739 --> 00:02:42,150
a program where you know what licenses

00:02:40,530 --> 00:02:44,879
you like and what license you don't like

00:02:42,150 --> 00:02:48,540
it's actually really easy to consume

00:02:44,879 --> 00:02:50,970
open source I've been in contract

00:02:48,540 --> 00:02:53,940
negotiations with software vendors where

00:02:50,970 --> 00:02:56,280
the legal team and and some of the teams

00:02:53,940 --> 00:02:58,920
at the firm had to go through every word

00:02:56,280 --> 00:03:01,260
of the contract and negotiate that back

00:02:58,920 --> 00:03:03,120
with the vendor because there were

00:03:01,260 --> 00:03:06,299
things we didn't agree on and that's a

00:03:03,120 --> 00:03:08,489
very costly time-consuming process that

00:03:06,299 --> 00:03:10,410
is one process you don't have to do if

00:03:08,489 --> 00:03:17,340
you're happy with taking an open-source

00:03:10,410 --> 00:03:20,489
license of course there is a benefit of

00:03:17,340 --> 00:03:22,889
higher quality code this also is

00:03:20,489 --> 00:03:25,170
important when it comes to ownership and

00:03:22,889 --> 00:03:27,840
contribution because if you put your own

00:03:25,170 --> 00:03:28,980
code out there you get the same benefits

00:03:27,840 --> 00:03:30,329
because other people are going to be

00:03:28,980 --> 00:03:31,350
looking at your code that potentially

00:03:30,329 --> 00:03:33,989
would have been wouldn't have been doing

00:03:31,350 --> 00:03:36,090
it so this is not just code you're

00:03:33,989 --> 00:03:37,470
consuming that's higher quality but your

00:03:36,090 --> 00:03:40,010
own code that you put out there is

00:03:37,470 --> 00:03:40,010
higher quality

00:03:43,989 --> 00:03:47,920
every time I interview a new potential

00:03:47,200 --> 00:03:51,400
employee

00:03:47,920 --> 00:03:53,349
it's amazing how excited they get when I

00:03:51,400 --> 00:03:55,180
tell them we have this great program at

00:03:53,349 --> 00:03:58,450
goldman sachs where you can write code

00:03:55,180 --> 00:04:00,549
and contributor to open source it's it's

00:03:58,450 --> 00:04:01,239
the shift has been dramatic in the last

00:04:00,549 --> 00:04:02,650
10 years

00:04:01,239 --> 00:04:05,650
every student coming out of a university

00:04:02,650 --> 00:04:07,120
has a github account map and they expect

00:04:05,650 --> 00:04:09,670
to be able to do this and if they go to

00:04:07,120 --> 00:04:12,549
a firm where that is not a possibility

00:04:09,670 --> 00:04:15,819
it's not as good a story for them so

00:04:12,549 --> 00:04:17,739
that's that's a big draw for having open

00:04:15,819 --> 00:04:23,800
source as something that that people can

00:04:17,739 --> 00:04:25,750
do as a par their regular work when I'm

00:04:23,800 --> 00:04:27,520
writing a piece of code and I try to

00:04:25,750 --> 00:04:29,860
understand what is this particular piece

00:04:27,520 --> 00:04:31,570
of code ooh it's also really important

00:04:29,860 --> 00:04:34,139
for me to be able to look at the source

00:04:31,570 --> 00:04:37,509
for that because that is the ultimate

00:04:34,139 --> 00:04:38,919
answer to what does this code do if I

00:04:37,509 --> 00:04:40,120
have to just look at documentation

00:04:38,919 --> 00:04:42,220
that's for example you would get with

00:04:40,120 --> 00:04:43,270
vendor software I'd have to rely on the

00:04:42,220 --> 00:04:44,410
fact that the documentation is

00:04:43,270 --> 00:04:47,169
up-to-date and correct

00:04:44,410 --> 00:04:49,300
and my parsing of the English language

00:04:47,169 --> 00:04:51,010
in that documentation is exactly what

00:04:49,300 --> 00:04:52,570
the developer meant which is not

00:04:51,010 --> 00:04:53,919
necessarily you know the same

00:04:52,570 --> 00:04:56,409
translation that everybody has in their

00:04:53,919 --> 00:04:58,150
head but if I can go into that piece of

00:04:56,409 --> 00:04:59,800
code and put a breakpoint in it and

00:04:58,150 --> 00:05:02,229
understand how it works that really

00:04:59,800 --> 00:05:03,760
empowers me as a developer to interact

00:05:02,229 --> 00:05:05,979
with that piece of code and that's

00:05:03,760 --> 00:05:09,520
something that is a huge benefit of

00:05:05,979 --> 00:05:13,750
using using open source finally by

00:05:09,520 --> 00:05:15,729
contributing and owning open source you

00:05:13,750 --> 00:05:18,280
can have a seat at the table you can be

00:05:15,729 --> 00:05:19,840
in organisations where new things are

00:05:18,280 --> 00:05:22,210
coming out and be able to voice your

00:05:19,840 --> 00:05:24,130
concerns because you're a respected

00:05:22,210 --> 00:05:26,699
member of the community because your

00:05:24,130 --> 00:05:26,699
track record

00:05:29,090 --> 00:05:34,409
there of course risks associated to

00:05:31,560 --> 00:05:36,360
using anything the things you have to

00:05:34,409 --> 00:05:40,139
worry about are licensing compatibility

00:05:36,360 --> 00:05:41,789
and potential litigation the alleviation

00:05:40,139 --> 00:05:44,580
aspect is actually quite interesting

00:05:41,789 --> 00:05:46,139
what we found is litigation happens

00:05:44,580 --> 00:05:49,590
whether you're using open source or not

00:05:46,139 --> 00:05:54,449
and it's a it's a essentially a constant

00:05:49,590 --> 00:05:57,599
tax on on the ecosystem obviously you

00:05:54,449 --> 00:06:00,770
have to have good code review to prevent

00:05:57,599 --> 00:06:03,539
things like malicious code contribution

00:06:00,770 --> 00:06:05,849
and as we've heard many many times today

00:06:03,539 --> 00:06:06,629
you have to worry about the security and

00:06:05,849 --> 00:06:07,979
vulnerability of

00:06:06,629 --> 00:06:14,699
any piece of code you use whether it's

00:06:07,979 --> 00:06:16,379
vendor software or open source finally

00:06:14,699 --> 00:06:19,379
you have to worry about a bit of culture

00:06:16,379 --> 00:06:21,539
clash sometimes you may be in a bigger

00:06:19,379 --> 00:06:23,400
ignition way you know the culture says

00:06:21,539 --> 00:06:25,620
you can only use the software if you

00:06:23,400 --> 00:06:27,000
have a support contract right and that

00:06:25,620 --> 00:06:29,250
can be that can be a big hurdle for

00:06:27,000 --> 00:06:30,990
people using open source because most

00:06:29,250 --> 00:06:34,889
open source out there is not something

00:06:30,990 --> 00:06:36,449
that you find is be you know backed by a

00:06:34,889 --> 00:06:38,370
commercial entity that that gives you a

00:06:36,449 --> 00:06:40,380
support contract so you have to get

00:06:38,370 --> 00:06:41,969
through those culture differences

00:06:40,380 --> 00:06:43,740
because that that'll get you to a place

00:06:41,969 --> 00:06:47,639
where you can use this stuff much more

00:06:43,740 --> 00:06:49,050
readily and then you know there's

00:06:47,639 --> 00:06:50,880
there's the old stuff I used to hear

00:06:49,050 --> 00:06:52,500
this stuff more you know back 10-15

00:06:50,880 --> 00:06:54,750
years ago where people would say Oh

00:06:52,500 --> 00:06:58,139
open-source is not as good a quality as

00:06:54,750 --> 00:07:00,300
as commercial software or well you know

00:06:58,139 --> 00:07:02,090
we're using product X and everything has

00:07:00,300 --> 00:07:04,409
to be certified to use with product X

00:07:02,090 --> 00:07:05,969
thankfully those those kinds of culture

00:07:04,409 --> 00:07:13,199
clashes have become less and less over

00:07:05,969 --> 00:07:15,719
time looking for that motivation if you

00:07:13,199 --> 00:07:17,340
ask people do you want to be in a in a

00:07:15,719 --> 00:07:20,219
place where your employees are

00:07:17,340 --> 00:07:22,830
contributing to open source the answer

00:07:20,219 --> 00:07:25,319
is always yes but they're not always in

00:07:22,830 --> 00:07:28,229
a place where that's possible so if you

00:07:25,319 --> 00:07:31,050
look at the portion of the people who

00:07:28,229 --> 00:07:32,610
are actually contributing that portion

00:07:31,050 --> 00:07:35,310
is actually going up and if you look at

00:07:32,610 --> 00:07:39,089
the numbers they went from 50 to 63 to

00:07:35,310 --> 00:07:41,310
65 from 2014 to 2016 and 2017 numbers

00:07:39,089 --> 00:07:41,660
came up and I was like 66% so it seems

00:07:41,310 --> 00:07:44,590
to be

00:07:41,660 --> 00:07:44,590
selling off someone right

00:07:51,430 --> 00:07:56,690
so Facebook asked their employees were

00:07:55,190 --> 00:07:59,390
you aware of the open-source software

00:07:56,690 --> 00:08:01,640
program at Facebook and the ones that

00:07:59,390 --> 00:08:03,350
answered some of them said yes and that

00:08:01,640 --> 00:08:06,110
was one of the reasons I came to work

00:08:03,350 --> 00:08:09,950
phrase work so that sort of notion that

00:08:06,110 --> 00:08:13,520
you can retain and get better developers

00:08:09,950 --> 00:08:17,060
is born from actual observation of

00:08:13,520 --> 00:08:18,200
bigger companies and again if you ask

00:08:17,060 --> 00:08:20,000
companies out there do you want to make

00:08:18,200 --> 00:08:24,350
it easier for people to contribute the

00:08:20,000 --> 00:08:26,480
answer is almost always yes okay so now

00:08:24,350 --> 00:08:29,450
we get to the part where I'm going to

00:08:26,480 --> 00:08:31,010
tell you some of the recipes we use to

00:08:29,450 --> 00:08:32,660
make this stuff easier so I'm gonna give

00:08:31,010 --> 00:08:34,280
you a consumption recipe I'm going to

00:08:32,660 --> 00:08:38,660
give you a contribution recipe and I'm

00:08:34,280 --> 00:08:40,010
gonna give you an ownership recipe one

00:08:38,660 --> 00:08:42,380
of the most important things in all of

00:08:40,010 --> 00:08:43,940
this is that you have to have air

00:08:42,380 --> 00:08:45,350
support and what do I mean by that I

00:08:43,940 --> 00:08:46,910
mean at the highest levels of the

00:08:45,350 --> 00:08:49,160
organization people have to be

00:08:46,910 --> 00:08:51,770
supportive of what you're doing so that

00:08:49,160 --> 00:08:54,200
is one of your first tasks sell the

00:08:51,770 --> 00:08:56,710
benefits so that you get support from

00:08:54,200 --> 00:09:01,130
the highest levels and that'll allow you

00:08:56,710 --> 00:09:03,680
to push this forward from a content from

00:09:01,130 --> 00:09:04,970
a consumption perspective you definitely

00:09:03,680 --> 00:09:09,200
need to have a license policy in place

00:09:04,970 --> 00:09:11,720
and to make the consumption really

00:09:09,200 --> 00:09:14,000
frictionless you have to have an

00:09:11,720 --> 00:09:15,350
automated check here that there

00:09:14,000 --> 00:09:18,680
shouldn't be people sitting in the

00:09:15,350 --> 00:09:21,530
middle to do these checks to allow your

00:09:18,680 --> 00:09:23,540
organization to rapidly use any kind of

00:09:21,530 --> 00:09:27,470
open source they need that is policy

00:09:23,540 --> 00:09:29,720
compliant so on that particular notion

00:09:27,470 --> 00:09:32,450
what you should do is you should mirror

00:09:29,720 --> 00:09:34,520
and filter well-known repositories like

00:09:32,450 --> 00:09:36,980
maven and NPM and NuGet and so on and so

00:09:34,520 --> 00:09:39,130
forth inside your organization where the

00:09:36,980 --> 00:09:45,260
filtering happens based on your policy

00:09:39,130 --> 00:09:46,670
automatically you always find that you

00:09:45,260 --> 00:09:48,680
know things that are that are not in

00:09:46,670 --> 00:09:51,050
maven or MPN and so on and so forth so

00:09:48,680 --> 00:09:54,260
you will need to also have an automated

00:09:51,050 --> 00:09:57,530
way of getting the other parts of

00:09:54,260 --> 00:09:59,060
open-source into the firm it doesn't

00:09:57,530 --> 00:10:00,890
have to be nearly as automated because

00:09:59,060 --> 00:10:01,680
they tend you know most of this African

00:10:00,890 --> 00:10:03,300
today

00:10:01,680 --> 00:10:06,360
through your posit or E's but you still

00:10:03,300 --> 00:10:08,430
happen to have that in place and it

00:10:06,360 --> 00:10:10,320
really makes sense to think about paid

00:10:08,430 --> 00:10:15,710
support for this type of consumption

00:10:10,320 --> 00:10:18,570
that is automated on a large scale

00:10:15,710 --> 00:10:20,640
finally one thing that makes a big

00:10:18,570 --> 00:10:23,700
difference in the comfort level of the

00:10:20,640 --> 00:10:27,270
organization is if you can put processes

00:10:23,700 --> 00:10:29,100
in place that do post use compliance so

00:10:27,270 --> 00:10:32,640
for example can you add a pieces offer

00:10:29,100 --> 00:10:35,880
into your build system that says ok in

00:10:32,640 --> 00:10:37,440
this particular build these 12 libraries

00:10:35,880 --> 00:10:38,670
were use and these are the licenses that

00:10:37,440 --> 00:10:40,140
were used and we can record that

00:10:38,670 --> 00:10:42,680
somewhere and be happy that we've seen

00:10:40,140 --> 00:10:42,680
that right

00:10:46,680 --> 00:10:51,210
to understand contribution ownership I

00:10:49,220 --> 00:10:53,820
really like to break this down into

00:10:51,210 --> 00:10:56,310
three different aspects which is the

00:10:53,820 --> 00:10:59,960
legal aspect the social aspect and a

00:10:56,310 --> 00:11:02,460
technical aspect and it's funny because

00:10:59,960 --> 00:11:05,279
understanding these at the level where

00:11:02,460 --> 00:11:06,930
you can be a good contributor makes it

00:11:05,279 --> 00:11:08,850
possible for you to also be a good

00:11:06,930 --> 00:11:10,830
consumer so if you're just thinking

00:11:08,850 --> 00:11:15,270
about consumption these are still things

00:11:10,830 --> 00:11:17,730
you should think about alright so the

00:11:15,270 --> 00:11:19,649
contribution recipe again the number one

00:11:17,730 --> 00:11:21,870
thing is sell the benefits make sure you

00:11:19,649 --> 00:11:23,510
have air support right the highest

00:11:21,870 --> 00:11:29,940
people in the organization should be

00:11:23,510 --> 00:11:31,520
behind you when you try to do this the

00:11:29,940 --> 00:11:35,070
second thing you have to think about is

00:11:31,520 --> 00:11:37,830
you want to make this thing fast and

00:11:35,070 --> 00:11:39,899
efficient and to do that you should

00:11:37,830 --> 00:11:43,020
really tease out the different aspects

00:11:39,899 --> 00:11:45,930
of it so that the final part which is

00:11:43,020 --> 00:11:48,180
writing code can be done quickly and the

00:11:45,930 --> 00:11:49,980
way we did that is we said okay instead

00:11:48,180 --> 00:11:51,510
of saying that I'm gonna do this

00:11:49,980 --> 00:11:52,950
contribution it has to go this huge

00:11:51,510 --> 00:11:55,290
workflow and I'm gonna do a second kind

00:11:52,950 --> 00:11:56,810
of mission that has huge workflow why

00:11:55,290 --> 00:11:59,730
don't we find places in this workflow

00:11:56,810 --> 00:12:01,980
that we can reduce the one-time activity

00:11:59,730 --> 00:12:04,350
and once we've done that

00:12:01,980 --> 00:12:07,650
the final workflow for producing code is

00:12:04,350 --> 00:12:10,589
much smaller and to do that we establish

00:12:07,650 --> 00:12:14,160
training for people so now people get

00:12:10,589 --> 00:12:17,040
trained once we established a registry

00:12:14,160 --> 00:12:18,270
of people and projects so now projects

00:12:17,040 --> 00:12:22,890
get vetted only once

00:12:18,270 --> 00:12:24,240
and finally we established a way for

00:12:22,890 --> 00:12:28,380
code to get reviewed really quickly

00:12:24,240 --> 00:12:31,050
because we said when when we do the code

00:12:28,380 --> 00:12:33,839
review two puts push something out what

00:12:31,050 --> 00:12:35,579
is really important is the IP here so

00:12:33,839 --> 00:12:39,350
the code review is going to be just

00:12:35,579 --> 00:12:42,570
about IP we expect the open-source

00:12:39,350 --> 00:12:44,850
ecosystem itself to do everything else

00:12:42,570 --> 00:12:46,440
open source systems do which is take

00:12:44,850 --> 00:12:48,209
care of quality take care of security

00:12:46,440 --> 00:12:50,790
and take care of all this other stuff

00:12:48,209 --> 00:12:53,610
that's important but that should happen

00:12:50,790 --> 00:12:54,959
in the open at the project level it

00:12:53,610 --> 00:12:57,480
shouldn't be something that that I

00:12:54,959 --> 00:13:00,180
should be concerned with from a respect

00:12:57,480 --> 00:13:03,570
pushing my code out so by reducing these

00:13:00,180 --> 00:13:05,720
these steps to the to the essentials we

00:13:03,570 --> 00:13:08,070
were able to make that particular recipe

00:13:05,720 --> 00:13:09,990
really efficient because we did things

00:13:08,070 --> 00:13:11,880
one once for particular things that

00:13:09,990 --> 00:13:13,170
required it just once and the things

00:13:11,880 --> 00:13:16,490
that happen all the time like writing

00:13:13,170 --> 00:13:19,680
code can be done very quickly and

00:13:16,490 --> 00:13:22,829
finally it's important that you support

00:13:19,680 --> 00:13:25,350
both people writing code on their own

00:13:22,829 --> 00:13:27,060
devices and people writing code on your

00:13:25,350 --> 00:13:28,889
machines that work because that's

00:13:27,060 --> 00:13:30,930
actually kind of a litmus test test to

00:13:28,889 --> 00:13:37,620
say are you really open are you doing

00:13:30,930 --> 00:13:40,680
this in a way that is actually open all

00:13:37,620 --> 00:13:42,480
right from a legal perspective you do

00:13:40,680 --> 00:13:44,730
have to review your employment

00:13:42,480 --> 00:13:46,139
agreements and the copyright law and the

00:13:44,730 --> 00:13:47,490
funny thing about copyright law is that

00:13:46,139 --> 00:13:48,839
you know it's actually different in

00:13:47,490 --> 00:13:51,209
different jurisdictions so you have to

00:13:48,839 --> 00:13:53,209
talk to the lawyers you know you know in

00:13:51,209 --> 00:13:55,709
all places where you do business

00:13:53,209 --> 00:13:59,490
you then have to explain these rules to

00:13:55,709 --> 00:14:01,470
your employees because they don't always

00:13:59,490 --> 00:14:05,399
understand what it is they sign when

00:14:01,470 --> 00:14:08,850
they started working for you finally

00:14:05,399 --> 00:14:11,610
there's a bit of misunderstanding

00:14:08,850 --> 00:14:14,339
generally ran open source which is open

00:14:11,610 --> 00:14:16,500
source licenses are really about

00:14:14,339 --> 00:14:18,870
consuming open source but there's also

00:14:16,500 --> 00:14:20,699
another legal aspect which is what are

00:14:18,870 --> 00:14:22,860
the set of rules that you have to follow

00:14:20,699 --> 00:14:25,740
to contribute and those two things are

00:14:22,860 --> 00:14:28,190
not always the same thing there's

00:14:25,740 --> 00:14:30,420
roughly four legal frameworks for

00:14:28,190 --> 00:14:32,819
contribution which is copyright

00:14:30,420 --> 00:14:35,579
assignment which happens still but not

00:14:32,819 --> 00:14:37,440
as popular contribution agreements which

00:14:35,579 --> 00:14:39,449
are very popular today and then you see

00:14:37,440 --> 00:14:42,540
them with apache and google and you know

00:14:39,449 --> 00:14:44,190
a bunch of bunch of other places ankles

00:14:42,540 --> 00:14:47,040
out where this is sort of the most

00:14:44,190 --> 00:14:48,810
equitable one where the license of the

00:14:47,040 --> 00:14:52,260
consumption is also the licenses for

00:14:48,810 --> 00:14:54,449
contribution so in equals out and then

00:14:52,260 --> 00:14:57,079
finally in equals that with a developer

00:14:54,449 --> 00:14:57,079
certificate of origin

00:14:59,440 --> 00:15:04,899
alright so the social aspect we we

00:15:01,750 --> 00:15:06,790
talked about earlier there are some

00:15:04,899 --> 00:15:08,980
important social pillars of open source

00:15:06,790 --> 00:15:11,860
and and the reason we put this up front

00:15:08,980 --> 00:15:15,610
and center is because you have to

00:15:11,860 --> 00:15:19,810
organize yourself and your programs in a

00:15:15,610 --> 00:15:25,300
way that respects these particular sets

00:15:19,810 --> 00:15:27,639
of social attributes so collaboration

00:15:25,300 --> 00:15:30,189
open exchange are a really important

00:15:27,639 --> 00:15:32,800
part of open source you can't do open

00:15:30,189 --> 00:15:35,110
source where you tell your developer as

00:15:32,800 --> 00:15:37,720
well you can't talk to anybody about

00:15:35,110 --> 00:15:41,259
about this stuff that doesn't that's not

00:15:37,720 --> 00:15:44,560
open meritocracy you have to be in a

00:15:41,259 --> 00:15:46,480
place where if you have committees on a

00:15:44,560 --> 00:15:48,459
project because they're experts on that

00:15:46,480 --> 00:15:50,589
particular project they don't

00:15:48,459 --> 00:15:52,990
necessarily have to be your employees

00:15:50,589 --> 00:15:55,899
people not not inside your organization

00:15:52,990 --> 00:15:58,259
can be experts at in particular things

00:15:55,899 --> 00:16:00,339
and you have to be open to that idea

00:15:58,259 --> 00:16:01,540
transparency freedom to tinker these are

00:16:00,339 --> 00:16:03,850
all important things you have to think

00:16:01,540 --> 00:16:05,529
about for example if you're writing code

00:16:03,850 --> 00:16:06,519
inside your firm and dumping it out

00:16:05,529 --> 00:16:09,699
every now and then

00:16:06,519 --> 00:16:11,230
that's not transparent right these are

00:16:09,699 --> 00:16:12,339
the types of things you have to think

00:16:11,230 --> 00:16:17,019
through to make sure you're doing

00:16:12,339 --> 00:16:20,339
openness correctly and several other

00:16:17,019 --> 00:16:22,990
things including good citizenship which

00:16:20,339 --> 00:16:25,689
gets me to my last point which is you

00:16:22,990 --> 00:16:27,670
gotta respect the local rules every

00:16:25,689 --> 00:16:29,800
project that on the Internet has a set

00:16:27,670 --> 00:16:31,420
of rules potentially that you have to

00:16:29,800 --> 00:16:33,399
understand to be able to contribute to

00:16:31,420 --> 00:16:35,889
them properly right and they're not

00:16:33,399 --> 00:16:37,839
always the same rule so make sure you

00:16:35,889 --> 00:16:40,600
understand what their local rules are

00:16:37,839 --> 00:16:42,040
and you make sure your developers

00:16:40,600 --> 00:16:45,939
understand that they have to follow

00:16:42,040 --> 00:16:48,100
those particular local rules all right

00:16:45,939 --> 00:16:50,189
as part of the contribution recipe this

00:16:48,100 --> 00:16:54,750
is actually the mechanical way in which

00:16:50,189 --> 00:16:54,750
we do our contribution today

00:16:56,649 --> 00:17:02,570
the way this works is normally all you

00:16:59,570 --> 00:17:04,160
do on github is you fork a project then

00:17:02,570 --> 00:17:06,050
you write some you clone that project if

00:17:04,160 --> 00:17:07,640
you write some code you push that to

00:17:06,050 --> 00:17:10,370
fort github and you ask for a pull

00:17:07,640 --> 00:17:12,170
request what we've done I know there's a

00:17:10,370 --> 00:17:14,000
lot of boxes on here but what we've

00:17:12,170 --> 00:17:15,740
really done we've added just one extra

00:17:14,000 --> 00:17:19,939
step in there which is that internal

00:17:15,740 --> 00:17:21,740
Fork by creating that internal Fork what

00:17:19,939 --> 00:17:23,839
we can do is we can ask our developers

00:17:21,740 --> 00:17:26,740
who are writing code on the firm's

00:17:23,839 --> 00:17:29,900
computers to push their code into that

00:17:26,740 --> 00:17:31,190
internal Fork have an IP review again

00:17:29,900 --> 00:17:32,600
this is an IP review that's not a

00:17:31,190 --> 00:17:36,620
quality or it's not a security review

00:17:32,600 --> 00:17:38,780
this is just an IP review and then have

00:17:36,620 --> 00:17:43,730
that reviewed code be pushed outside

00:17:38,780 --> 00:17:46,490
right so this is a mechanical recipe of

00:17:43,730 --> 00:17:49,190
us how you can arrange you know your

00:17:46,490 --> 00:17:50,690
firewalls your your review system and so

00:17:49,190 --> 00:17:53,240
on and so forth in such a way that

00:17:50,690 --> 00:17:57,230
pushing code outside the firm is

00:17:53,240 --> 00:17:59,210
actually a very standardized way of

00:17:57,230 --> 00:18:00,890
doing vents and there's no friction you

00:17:59,210 --> 00:18:03,350
don't have to you know sit in front of a

00:18:00,890 --> 00:18:06,110
five-percent panel to discuss what this

00:18:03,350 --> 00:18:15,529
code is doing in etc etc right it's just

00:18:06,110 --> 00:18:19,559
mechanical okay so

00:18:15,529 --> 00:18:22,709
three steps to contribute you train your

00:18:19,559 --> 00:18:25,109
people that happens once and in the

00:18:22,709 --> 00:18:28,519
training make sure you go through the

00:18:25,109 --> 00:18:31,949
social legal and technical aspects of of

00:18:28,519 --> 00:18:34,169
contributing to open source you approve

00:18:31,949 --> 00:18:36,179
projects that only happens once per

00:18:34,169 --> 00:18:37,109
project right so if two different people

00:18:36,179 --> 00:18:38,820
are going to contribute to the same

00:18:37,109 --> 00:18:41,999
project they don't have to approve that

00:18:38,820 --> 00:18:44,699
project twice and finally you write code

00:18:41,999 --> 00:18:47,309
and you make sure that their code right

00:18:44,699 --> 00:18:56,119
Code portion of the workflow is as

00:18:47,309 --> 00:18:59,969
minimal as it can be all right ownership

00:18:56,119 --> 00:19:01,169
again first things first you sell the

00:18:59,969 --> 00:19:03,989
benefits you make sure you have air

00:19:01,169 --> 00:19:09,019
support you have to have people at the

00:19:03,989 --> 00:19:09,019
top level be behind you when you do this

00:19:09,289 --> 00:19:14,579
to the ownership cart correctly you make

00:19:12,839 --> 00:19:16,229
sure you have an approval process that's

00:19:14,579 --> 00:19:17,849
written down and everybody can follow

00:19:16,229 --> 00:19:20,999
the same thing it doesn't matter it

00:19:17,849 --> 00:19:22,979
shouldn't be bespoke you make sure that

00:19:20,999 --> 00:19:24,539
you establish a proper outside presence

00:19:22,979 --> 00:19:30,829
so for example in an organization on

00:19:24,539 --> 00:19:34,079
github and then establish guidelines for

00:19:30,829 --> 00:19:36,479
what it means to respond to issues and

00:19:34,079 --> 00:19:38,249
and and questions and Bart's right

00:19:36,479 --> 00:19:40,199
that's really really important from a

00:19:38,249 --> 00:19:42,089
community perspective if you put a

00:19:40,199 --> 00:19:44,940
project out there and people you know

00:19:42,089 --> 00:19:46,499
have an issue with it and you don't

00:19:44,940 --> 00:19:48,059
respond to them that really creates a

00:19:46,499 --> 00:19:49,619
very bad impression so that's an

00:19:48,059 --> 00:19:54,089
important thing to establish and put up

00:19:49,619 --> 00:19:56,219
front and finally to really be open you

00:19:54,089 --> 00:19:58,440
must have a contribution model if you

00:19:56,219 --> 00:19:59,999
put code out there then that only your

00:19:58,440 --> 00:20:05,309
employees can edit that's not really

00:19:59,999 --> 00:20:08,790
open so here are some check points for

00:20:05,309 --> 00:20:12,450
ownership ownership have

00:20:08,790 --> 00:20:15,000
a community standard talks about things

00:20:12,450 --> 00:20:17,790
like what we find acceptable socially

00:20:15,000 --> 00:20:20,250
when we interact you know on on github

00:20:17,790 --> 00:20:26,270
or any other forum and it's really

00:20:20,250 --> 00:20:29,490
important for example we standardize on

00:20:26,270 --> 00:20:31,560
we standardize on on it on one of the

00:20:29,490 --> 00:20:34,500
the standards that's out there that's

00:20:31,560 --> 00:20:35,610
used by 30,000 projects on github so if

00:20:34,500 --> 00:20:37,470
you can find something that that's

00:20:35,610 --> 00:20:41,940
amenable to you that's a good place to

00:20:37,470 --> 00:20:44,250
start I can't emphasize this enough you

00:20:41,940 --> 00:20:45,960
must make sure that you work your work

00:20:44,250 --> 00:20:48,420
is in the open right

00:20:45,960 --> 00:20:50,310
don't create private workflows that

00:20:48,420 --> 00:20:55,140
other people can't see that's that's not

00:20:50,310 --> 00:20:57,780
being open adopting a uniform license is

00:20:55,140 --> 00:21:01,740
a good way to put your organization on

00:20:57,780 --> 00:21:03,420
the map it makes people understand that

00:21:01,740 --> 00:21:05,910
you've thought this this stuff through

00:21:03,420 --> 00:21:07,830
you know what you're doing and the

00:21:05,910 --> 00:21:12,180
expectation is uniform across all the

00:21:07,830 --> 00:21:16,530
projects that you have the contribution

00:21:12,180 --> 00:21:18,660
model will allow your users to finally

00:21:16,530 --> 00:21:21,150
come back and say hey I've been using

00:21:18,660 --> 00:21:23,490
this it's great but I need this bug

00:21:21,150 --> 00:21:25,920
fixed or I need to have this does this

00:21:23,490 --> 00:21:29,000
thing enhanced can I do that myself and

00:21:25,920 --> 00:21:31,320
that's a really big part of being open

00:21:29,000 --> 00:21:33,630
establish some code consistency rules

00:21:31,320 --> 00:21:35,760
because that'll allow your your project

00:21:33,630 --> 00:21:37,500
to actually have lower friction when it

00:21:35,760 --> 00:21:39,380
comes to things like code reviews if

00:21:37,500 --> 00:21:41,760
somebody gives you a piece of code and

00:21:39,380 --> 00:21:44,250
you go tell them well this doesn't look

00:21:41,760 --> 00:21:47,400
right that doesn't feel as good as

00:21:44,250 --> 00:21:48,900
saying I looked at your piece of code

00:21:47,400 --> 00:21:50,970
and it's not consistent with this rule

00:21:48,900 --> 00:21:55,860
that's written down here please make

00:21:50,970 --> 00:22:00,530
sure it's the same and finally treat the

00:21:55,860 --> 00:22:03,110
community with respect all right

00:22:00,530 --> 00:22:04,250
in the next couple of minutes I'm gonna

00:22:03,110 --> 00:22:07,180
give you some questions you should ask

00:22:04,250 --> 00:22:10,370
yourself as to how open you are right

00:22:07,180 --> 00:22:11,480
after you've done all this stuff what is

00:22:10,370 --> 00:22:13,310
going to be your answer to these

00:22:11,480 --> 00:22:15,730
questions determines how open you are

00:22:13,310 --> 00:22:19,880
with respect to your organization's

00:22:15,730 --> 00:22:21,950
could participation in open source so

00:22:19,880 --> 00:22:24,310
from a consumption perspective ask

00:22:21,950 --> 00:22:26,900
yourself how long does it take between

00:22:24,310 --> 00:22:28,790
deciding to use an open source product

00:22:26,900 --> 00:22:30,230
and the actual years right

00:22:28,790 --> 00:22:31,970
how long did it take between the

00:22:30,230 --> 00:22:34,640
developer said I really would like to

00:22:31,970 --> 00:22:39,590
use this and they started writing code

00:22:34,640 --> 00:22:41,480
that used that piece of code right how

00:22:39,590 --> 00:22:43,100
easy is it for somebody to evaluate a

00:22:41,480 --> 00:22:44,960
piece of open source software for years

00:22:43,100 --> 00:22:46,760
right this is pre decision so you

00:22:44,960 --> 00:22:49,100
haven't made the decision to use it but

00:22:46,760 --> 00:22:51,320
how easy is it to get your hands on that

00:22:49,100 --> 00:22:53,840
piece of software feel it around say

00:22:51,320 --> 00:22:58,160
yeah your name right sometimes that can

00:22:53,840 --> 00:23:01,280
be really difficult how easy is it to

00:22:58,160 --> 00:23:04,220
keep things up to date do I have to go

00:23:01,280 --> 00:23:07,010
through a you know full 17 forms again

00:23:04,220 --> 00:23:08,540
to get get a new version or is it just

00:23:07,010 --> 00:23:13,010
natural for me to get the next version

00:23:08,540 --> 00:23:15,560
without any any friction how many manual

00:23:13,010 --> 00:23:22,550
accruals does it take to use a piece of

00:23:15,560 --> 00:23:24,020
open-source software if you contributing

00:23:22,550 --> 00:23:26,990
to open source I just have a couple

00:23:24,020 --> 00:23:30,650
questions for you how long does it take

00:23:26,990 --> 00:23:35,690
between having a patch and having it

00:23:30,650 --> 00:23:38,150
accepted I can tell you the figures went

00:23:35,690 --> 00:23:43,640
from months at Goldman Sachs before we

00:23:38,150 --> 00:23:46,790
had a program in place two days how many

00:23:43,640 --> 00:23:51,670
man approvals do you have to have to go

00:23:46,790 --> 00:23:51,670
from a patch to an acceptance

00:23:52,800 --> 00:23:57,360
and this is my final slide these are the

00:23:56,160 --> 00:23:59,600
questions you should ask yourself if you

00:23:57,360 --> 00:24:02,400
own a piece of open-source software

00:23:59,600 --> 00:24:06,210
where is the ultimate source for this

00:24:02,400 --> 00:24:07,980
software I have seen places where the

00:24:06,210 --> 00:24:10,200
source is actually kept in-house and

00:24:07,980 --> 00:24:12,450
occasionally it's dumped outside and

00:24:10,200 --> 00:24:13,950
that creates a really bad impression for

00:24:12,450 --> 00:24:16,680
one thing because it doesn't allow a

00:24:13,950 --> 00:24:21,270
contribution but that's a litmus test

00:24:16,680 --> 00:24:23,370
where do you keep the source are you

00:24:21,270 --> 00:24:26,130
discussing and making decisions out in

00:24:23,370 --> 00:24:27,780
the in public or you just you know email

00:24:26,130 --> 00:24:29,610
around your own firm and making making

00:24:27,780 --> 00:24:36,210
choices that nobody else has any

00:24:29,610 --> 00:24:38,910
transparency oh how big and how wide is

00:24:36,210 --> 00:24:40,620
the community that's around the P so

00:24:38,910 --> 00:24:42,090
open sourced you've put out there that's

00:24:40,620 --> 00:24:45,300
actually one of the hardest things to

00:24:42,090 --> 00:24:49,350
get right building a community is very

00:24:45,300 --> 00:24:50,520
very hard what happens if you have a

00:24:49,350 --> 00:24:53,010
committer on a piece of open-source

00:24:50,520 --> 00:24:54,690
software and they leave the company do

00:24:53,010 --> 00:24:56,550
they lose their rights because they left

00:24:54,690 --> 00:24:57,870
the company or do they retain them

00:24:56,550 --> 00:25:02,820
because they're an expert in what their

00:24:57,870 --> 00:25:05,730
their join and what's your average

00:25:02,820 --> 00:25:07,670
response time to an issue that's out in

00:25:05,730 --> 00:25:11,550
the open

00:25:07,670 --> 00:25:14,070
thank you for listening in the next four

00:25:11,550 --> 00:25:18,560
minutes we would be happy to answer some

00:25:14,070 --> 00:25:18,560
questions yes

00:25:22,710 --> 00:25:27,990
so the question was what do we do for

00:25:24,970 --> 00:25:31,470
the identity that's used for

00:25:27,990 --> 00:25:35,440
contribution on github and the answer is

00:25:31,470 --> 00:25:37,270
we allow you to use your own account but

00:25:35,440 --> 00:25:42,910
we expect you to have the the goldman

00:25:37,270 --> 00:25:45,010
sachs email on that account we didn't or

00:25:42,910 --> 00:25:48,480
affiliation but but not publicly not

00:25:45,010 --> 00:25:48,480
necessarily publicly yeah

00:26:02,929 --> 00:26:10,490
hello do you guys have an incentive

00:26:06,809 --> 00:26:16,830
structure for contributing any open code

00:26:10,490 --> 00:26:18,539
any rules around that so there certainly

00:26:16,830 --> 00:26:21,830
nothing formal but it's the kind of

00:26:18,539 --> 00:26:24,330
thing where you do get visibility and I

00:26:21,830 --> 00:26:26,039
would say the incentive structures are

00:26:24,330 --> 00:26:28,259
actually built into the system

00:26:26,039 --> 00:26:31,710
I often this is one thing I tell people

00:26:28,259 --> 00:26:32,850
in in our training which is why would

00:26:31,710 --> 00:26:34,350
you want to put yourself through this

00:26:32,850 --> 00:26:36,869
training and why would you want to

00:26:34,350 --> 00:26:39,899
contribute to open source as a employee

00:26:36,869 --> 00:26:41,249
of a firm and the answer is sure the

00:26:39,899 --> 00:26:43,470
copyright on that piece of code is

00:26:41,249 --> 00:26:46,110
goldman-sachs but you are the author

00:26:43,470 --> 00:26:48,210
that becomes part of your digital resume

00:26:46,110 --> 00:26:51,240
right this is something you can point to

00:26:48,210 --> 00:26:59,669
and say hey I did this right so I think

00:26:51,240 --> 00:27:01,619
the incentives are actually built him we

00:26:59,669 --> 00:27:05,970
have two minutes left so any other

00:27:01,619 --> 00:27:08,659
questions from oh no hearing none yeah

00:27:05,970 --> 00:27:08,659
Bueller

00:27:11,309 --> 00:27:16,160
once

00:27:13,850 --> 00:27:18,740
package that you relieved is out there

00:27:16,160 --> 00:27:22,340
and live lives its own life right and it

00:27:18,740 --> 00:27:25,460
goes forward and maybe an absolution and

00:27:22,340 --> 00:27:26,870
how do you keep consistency between what

00:27:25,460 --> 00:27:29,870
you actually implemented in your

00:27:26,870 --> 00:27:31,370
production systems and what's going on

00:27:29,870 --> 00:27:35,180
you know the packaged living in its own

00:27:31,370 --> 00:27:37,130
life and the open source community the

00:27:35,180 --> 00:27:42,530
api's change you know the

00:27:37,130 --> 00:27:44,750
compatibilities changed so keeping up to

00:27:42,530 --> 00:27:48,110
date with versions is a difficult

00:27:44,750 --> 00:27:49,910
problem for everybody right and I don't

00:27:48,110 --> 00:27:54,200
think the answer changes at all if your

00:27:49,910 --> 00:27:57,500
own on that pieces offer or not you have

00:27:54,200 --> 00:27:59,600
to balance the cost of you know being on

00:27:57,500 --> 00:28:01,640
a new version versus potential problems

00:27:59,600 --> 00:28:04,190
that you have on the old stuff most

00:28:01,640 --> 00:28:06,170
importantly security right so that's the

00:28:04,190 --> 00:28:07,820
kind of thing we look at is it is it

00:28:06,170 --> 00:28:10,160
important we do this because of security

00:28:07,820 --> 00:28:11,540
for example or is it commercial not to

00:28:10,160 --> 00:28:17,630
do it because yeah we've got other

00:28:11,540 --> 00:28:20,330
things today okay any other questions

00:28:17,630 --> 00:28:24,260
you have a minute left it's art it would

00:28:20,330 --> 00:28:27,830
be so granular yes ma'am one minute 30

00:28:24,260 --> 00:28:31,100
seconds left 45 seconds 40

00:28:27,830 --> 00:28:33,350
and in the open-source environment how

00:28:31,100 --> 00:28:36,740
do you ensure the functional testing

00:28:33,350 --> 00:28:41,950
coverage is high the the what functional

00:28:36,740 --> 00:28:41,950
testing functional testing so-so

00:28:44,920 --> 00:28:52,820
for a piece of software that we own as

00:28:47,180 --> 00:28:54,350
open-source we have we have a set of

00:28:52,820 --> 00:28:55,880
rules that say you know you have to have

00:28:54,350 --> 00:28:58,340
tests with this software and so on and

00:28:55,880 --> 00:29:01,520
so forth which means at the point where

00:28:58,340 --> 00:29:03,560
somebody's doing a pull request if that

00:29:01,520 --> 00:29:04,910
particular new functionality or bug fix

00:29:03,560 --> 00:29:07,040
or whatever it doesn't have the required

00:29:04,910 --> 00:29:10,780
tests we ask them to write those tests

00:29:07,040 --> 00:29:10,780
before we merge the pull request and

00:29:16,280 --> 00:29:20,810
so in your slides earlier you showed the

00:29:19,040 --> 00:29:22,250
contribution process that someone from

00:29:20,810 --> 00:29:24,560
the firm has to go to contribute code

00:29:22,250 --> 00:29:25,970
out to get up or bring an end in a

00:29:24,560 --> 00:29:27,380
perfect world what does that look like

00:29:25,970 --> 00:29:32,030
and how long does it take you to get to

00:29:27,380 --> 00:29:33,560
that perfect world in what sir in a

00:29:32,030 --> 00:29:35,300
perfect world where the process can be

00:29:33,560 --> 00:29:38,600
exactly what you want it to be not what

00:29:35,300 --> 00:29:40,460
Security wants it to be so the one thing

00:29:38,600 --> 00:29:45,770
that's essentially time-consuming is

00:29:40,460 --> 00:29:48,560
that as the review right and I would say

00:29:45,770 --> 00:29:50,570
the typical time frame for a small patch

00:29:48,560 --> 00:29:52,370
or whatever is about a day right it's

00:29:50,570 --> 00:29:55,520
just a you know somebody has to look at

00:29:52,370 --> 00:29:57,490
it and and so it's it's much much faster

00:29:55,520 --> 00:30:03,440
than it used to be which was literally

00:29:57,490 --> 00:30:04,880
weeks if not months the IP review that's

00:30:03,440 --> 00:30:06,200
actually kind of hard because you know

00:30:04,880 --> 00:30:07,910
we have people who look at things like

00:30:06,200 --> 00:30:09,380
did you accidentally put somebody's

00:30:07,910 --> 00:30:11,390
passport in there do you have some

00:30:09,380 --> 00:30:13,040
personally identifiable information and

00:30:11,390 --> 00:30:15,200
there that sort of stuff that's that's

00:30:13,040 --> 00:30:16,520
actually very hard to to to automate if

00:30:15,200 --> 00:30:18,890
you have any ideas on how to do that

00:30:16,520 --> 00:30:21,110
it'd be great but I haven't seen any

00:30:18,890 --> 00:30:23,380
software or any any attempt at doing

00:30:21,110 --> 00:30:23,380
that

00:30:31,230 --> 00:30:33,290

YouTube URL: https://www.youtube.com/watch?v=sZ2vAKc7V94


