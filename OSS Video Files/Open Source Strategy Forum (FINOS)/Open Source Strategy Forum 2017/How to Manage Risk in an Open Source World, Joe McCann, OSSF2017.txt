Title: How to Manage Risk in an Open Source World, Joe McCann, OSSF2017
Publication date: 2018-01-02
Playlist: Open Source Strategy Forum 2017
Description: 
	As presented by Joe McCann, Founder and CEO of NodeSource, at the Open Source Strategy Forum 2017.
Captions: 
	00:00:04,680 --> 00:00:10,210
I'm Joe McCann CEO and founder of notes

00:00:07,660 --> 00:00:13,780
source and today I'll be talking with

00:00:10,210 --> 00:00:16,029
you about the hidden costs of free

00:00:13,780 --> 00:00:19,779
software and how to manage the risks

00:00:16,029 --> 00:00:22,690
around open source but first quick plug

00:00:19,779 --> 00:00:24,970
on our company we are node source the

00:00:22,690 --> 00:00:26,500
nodejs company we've been around for a

00:00:24,970 --> 00:00:28,869
little less than four years we are

00:00:26,500 --> 00:00:30,070
explicitly focused on nodejs the

00:00:28,869 --> 00:00:33,160
enterprise if you're not familiar with

00:00:30,070 --> 00:00:35,290
node it is the fastest growing open

00:00:33,160 --> 00:00:37,809
source project on earth in terms of

00:00:35,290 --> 00:00:40,390
users by the end of this year according

00:00:37,809 --> 00:00:42,040
to the Linux Foundation nearly half of

00:00:40,390 --> 00:00:45,339
all software developers on earth will be

00:00:42,040 --> 00:00:47,409
using node which means it's very likely

00:00:45,339 --> 00:00:49,979
that folks here or in your

00:00:47,409 --> 00:00:52,510
organization's are also using nodejs

00:00:49,979 --> 00:00:55,210
I've been involved with node since the

00:00:52,510 --> 00:00:57,699
very beginning in late 2009 and in open

00:00:55,210 --> 00:00:59,769
source for many years before that so I'm

00:00:57,699 --> 00:01:04,089
in a unique position to talk a little

00:00:59,769 --> 00:01:09,219
bit about the sort of benefits and also

00:01:04,089 --> 00:01:11,109
the risks around open source and for

00:01:09,219 --> 00:01:14,770
years I've been trying to figure out a

00:01:11,109 --> 00:01:17,049
way of describing what open source is

00:01:14,770 --> 00:01:19,210
and frankly why somebody would pay for

00:01:17,049 --> 00:01:19,929
something when it's free and I keep

00:01:19,210 --> 00:01:23,039
trying to think through different

00:01:19,929 --> 00:01:25,270
analogies and what are the ways that

00:01:23,039 --> 00:01:28,149
make sense to people that aren't

00:01:25,270 --> 00:01:33,850
necessarily in technology and I it

00:01:28,149 --> 00:01:38,439
dawned on me you have to start off with

00:01:33,850 --> 00:01:40,090
an adorable picture of a puppy so why am

00:01:38,439 --> 00:01:44,289
i showing you an adorable picture of a

00:01:40,090 --> 00:01:50,200
puppy well this is what open source is

00:01:44,289 --> 00:01:52,509
like someone hands you a free puppy for

00:01:50,200 --> 00:01:54,909
the for a second maybe a few seconds

00:01:52,509 --> 00:01:58,810
maybe a minute you're like oh my god

00:01:54,909 --> 00:02:01,119
this puppy it's so adorable it's it's

00:01:58,810 --> 00:02:03,909
Nick at that puppy smell it's super soft

00:02:01,119 --> 00:02:06,759
this little whimpers right for just a

00:02:03,909 --> 00:02:12,640
few seconds that's that feeling alright

00:02:06,759 --> 00:02:14,290
and then you're like wait a second I got

00:02:12,640 --> 00:02:17,230
to take care of this thing

00:02:14,290 --> 00:02:20,920
right that's what open source is like

00:02:17,230 --> 00:02:23,950
it's amazing at the beginning and then

00:02:20,920 --> 00:02:26,379
you've got to take care of it right so

00:02:23,950 --> 00:02:28,450
for a puppy there's a handful of things

00:02:26,379 --> 00:02:31,569
that you have to do you've got to feed

00:02:28,450 --> 00:02:34,750
it and groom it train it take it on

00:02:31,569 --> 00:02:36,310
walks these types of things right that's

00:02:34,750 --> 00:02:38,920
the same sort of thing that you've got

00:02:36,310 --> 00:02:41,650
to do with open source once you've sort

00:02:38,920 --> 00:02:42,489
of got past that initial honeymoon phase

00:02:41,650 --> 00:02:45,760
if you will

00:02:42,489 --> 00:02:47,560
you've got to secure it you've got to

00:02:45,760 --> 00:02:50,290
have folks that can support it whether

00:02:47,560 --> 00:02:53,680
it's internal external it's external you

00:02:50,290 --> 00:02:56,079
have to educate your folks internally on

00:02:53,680 --> 00:02:59,470
the technology or the infrastructure

00:02:56,079 --> 00:03:01,989
itself and then also you have to make

00:02:59,470 --> 00:03:05,500
sure that you can trust that open source

00:03:01,989 --> 00:03:08,530
technology and also verify that it is in

00:03:05,500 --> 00:03:12,459
fact doing what it says it's going to do

00:03:08,530 --> 00:03:14,230
and so getting to getting through this

00:03:12,459 --> 00:03:17,739
task list might seem a little daunting

00:03:14,230 --> 00:03:19,150
but given the spirit of being inside of

00:03:17,739 --> 00:03:21,849
a large bank right now let's talk about

00:03:19,150 --> 00:03:24,160
the rewards to pose the risk first so

00:03:21,849 --> 00:03:26,199
I'm sure you've probably heard a number

00:03:24,160 --> 00:03:26,980
of times today the various benefits of

00:03:26,199 --> 00:03:29,620
open source

00:03:26,980 --> 00:03:31,269
I want to click into a few of these so

00:03:29,620 --> 00:03:33,549
that it makes sense on how to manage the

00:03:31,269 --> 00:03:36,819
risk around them first it's around

00:03:33,549 --> 00:03:40,269
security so we've heard this myth a lot

00:03:36,819 --> 00:03:43,150
that open source software must be more

00:03:40,269 --> 00:03:45,609
insecure than proprietary closed source

00:03:43,150 --> 00:03:49,269
software I would argue that all software

00:03:45,609 --> 00:03:51,400
is actually insecure but the way that

00:03:49,269 --> 00:03:53,440
you manage the risk around the security

00:03:51,400 --> 00:03:55,959
of that I think is what's most important

00:03:53,440 --> 00:03:58,409
and one of the benefits to open source

00:03:55,959 --> 00:04:01,750
technology is that there's this

00:03:58,409 --> 00:04:04,150
continuous peer review that happens with

00:04:01,750 --> 00:04:08,139
the source code of open source tech and

00:04:04,150 --> 00:04:12,430
in addition to that I'd argue that the

00:04:08,139 --> 00:04:15,400
you know Linux and nodejs and you know

00:04:12,430 --> 00:04:18,099
Cassandra database etc have hundreds if

00:04:15,400 --> 00:04:21,159
not thousands of sets of eyes on the

00:04:18,099 --> 00:04:24,070
source code itself so there's arguably

00:04:21,159 --> 00:04:27,210
infinitely more eyes looking at the

00:04:24,070 --> 00:04:30,300
source code identifying vulnerabilities

00:04:27,210 --> 00:04:33,000
performance issues etc versus you know

00:04:30,300 --> 00:04:34,920
one team you know a lot of folks have an

00:04:33,000 --> 00:04:37,740
internal service provider inside their

00:04:34,920 --> 00:04:39,090
organization to provide tech and

00:04:37,740 --> 00:04:40,980
infrastructure to other teams

00:04:39,090 --> 00:04:42,810
well the open-source community is much

00:04:40,980 --> 00:04:45,020
broader than that one team that you

00:04:42,810 --> 00:04:50,490
probably have at your organization and

00:04:45,020 --> 00:04:53,220
then finally there is a risk around just

00:04:50,490 --> 00:04:55,140
using a closed source vendor for closed

00:04:53,220 --> 00:04:57,300
source proprietary software when it

00:04:55,140 --> 00:05:00,110
comes to actual vulnerabilities you're

00:04:57,300 --> 00:05:02,340
now reliant on them to give you a patch

00:05:00,110 --> 00:05:06,810
whereas in the open source world these

00:05:02,340 --> 00:05:09,870
patches tend to come a lot faster next

00:05:06,810 --> 00:05:12,210
up the talent quotient around open

00:05:09,870 --> 00:05:15,210
source technologies you know I was I was

00:05:12,210 --> 00:05:16,740
speaking with a very large animation

00:05:15,210 --> 00:05:20,220
studio out of Hollywood a couple years

00:05:16,740 --> 00:05:22,020
ago and they said to me Joe we feel like

00:05:20,220 --> 00:05:24,990
we're kind of boxed in I said well what

00:05:22,020 --> 00:05:27,840
do you mean well we've built our entire

00:05:24,990 --> 00:05:29,810
business on this proprietary stack this

00:05:27,840 --> 00:05:32,340
proprietary programming language and

00:05:29,810 --> 00:05:35,400
folks are retiring and moving on and

00:05:32,340 --> 00:05:38,580
well we can't hire anybody what are we

00:05:35,400 --> 00:05:40,140
gonna do and I suggested they start

00:05:38,580 --> 00:05:42,390
thinking about adopting and integrating

00:05:40,140 --> 00:05:44,880
open source technologies into their

00:05:42,390 --> 00:05:48,150
organization and the reason is these

00:05:44,880 --> 00:05:50,370
skills are transferable every company

00:05:48,150 --> 00:05:52,920
today is now a technology company which

00:05:50,370 --> 00:05:55,200
means the war for talent around software

00:05:52,920 --> 00:05:58,110
development architects etc is at the

00:05:55,200 --> 00:05:59,340
highest it's ever been is someone going

00:05:58,110 --> 00:06:01,800
to want to go to a place where they

00:05:59,340 --> 00:06:04,590
could only know the technology at that

00:06:01,800 --> 00:06:08,190
particular location know secondarily

00:06:04,590 --> 00:06:10,350
there's a large pool of talent around

00:06:08,190 --> 00:06:12,990
open source that you can verify their

00:06:10,350 --> 00:06:15,720
skills by their activity and open source

00:06:12,990 --> 00:06:19,130
you know one of the biggest benefits to

00:06:15,720 --> 00:06:21,780
the sort of github native set of

00:06:19,130 --> 00:06:24,270
developers today is that it's very

00:06:21,780 --> 00:06:25,260
transparent and collaborative on the

00:06:24,270 --> 00:06:27,450
types of projects that they're

00:06:25,260 --> 00:06:29,640
interested in and how they actually do

00:06:27,450 --> 00:06:32,370
their work and then finally I think

00:06:29,640 --> 00:06:35,910
another benefit that you get from open

00:06:32,370 --> 00:06:37,830
source is this this access to really

00:06:35,910 --> 00:06:40,230
creative thinkers non-traditional

00:06:37,830 --> 00:06:43,560
computer science majors so to speak

00:06:40,230 --> 00:06:46,080
are arguably influential in open source

00:06:43,560 --> 00:06:50,030
tech and the support and and sort of

00:06:46,080 --> 00:06:50,030
progression of open source technologies

00:06:50,120 --> 00:06:55,590
this is the piece I think everybody can

00:06:52,650 --> 00:06:57,690
really get behind saving money with open

00:06:55,590 --> 00:06:59,730
source you know the traditional per seat

00:06:57,690 --> 00:07:03,240
license for open source technology drops

00:06:59,730 --> 00:07:05,070
to zero there is no cost associated with

00:07:03,240 --> 00:07:08,730
using it on a per seed license

00:07:05,070 --> 00:07:10,500
moreover you don't see any vendor

00:07:08,730 --> 00:07:12,180
lock-in with an open source technology

00:07:10,500 --> 00:07:15,410
now there's nuance to all of these I

00:07:12,180 --> 00:07:18,000
understand that but as opposed to an

00:07:15,410 --> 00:07:19,410
unnamed massive software company that

00:07:18,000 --> 00:07:21,630
I'm sure a lot of you are familiar with

00:07:19,410 --> 00:07:23,190
there are ways of locking you in that

00:07:21,630 --> 00:07:26,970
can be very detrimental whether it's

00:07:23,190 --> 00:07:28,830
through legal SL A's etc and then I

00:07:26,970 --> 00:07:30,270
think one of the most interesting things

00:07:28,830 --> 00:07:32,850
around cost savings when it comes to

00:07:30,270 --> 00:07:35,430
open source is that reduced total cost

00:07:32,850 --> 00:07:37,890
of ownership the fact that the open

00:07:35,430 --> 00:07:39,540
source technology is spread across so

00:07:37,890 --> 00:07:42,780
many people and so many collaborators

00:07:39,540 --> 00:07:44,550
means you get access to talent for next

00:07:42,780 --> 00:07:46,680
to nothing if not actually free and in

00:07:44,550 --> 00:07:50,510
fact I think it was earlier this year

00:07:46,680 --> 00:07:54,870
the Linux Foundation estimated that if

00:07:50,510 --> 00:07:57,570
you were today going to support building

00:07:54,870 --> 00:07:59,850
the Fedora 9 Linux distribution to use

00:07:57,570 --> 00:08:03,540
inside your organization it would cost

00:07:59,850 --> 00:08:06,690
almost eleven billion dollars let me

00:08:03,540 --> 00:08:09,000
repeat that eleven billion dollars this

00:08:06,690 --> 00:08:10,740
shared total cost of ownership is across

00:08:09,000 --> 00:08:14,090
many people today because of the

00:08:10,740 --> 00:08:17,370
benefits of things like open source

00:08:14,090 --> 00:08:20,550
next up accelerating time to market if

00:08:17,370 --> 00:08:24,930
you haven't heard the buzzword today yet

00:08:20,550 --> 00:08:27,270
digital transformation here we go every

00:08:24,930 --> 00:08:29,400
company that we seem to talk to has a

00:08:27,270 --> 00:08:31,560
digital transformation strategy of sorts

00:08:29,400 --> 00:08:34,200
and the challenge is is how do we move

00:08:31,560 --> 00:08:35,640
fast but we can't move fast and break

00:08:34,200 --> 00:08:37,410
things like Facebook does we have to

00:08:35,640 --> 00:08:39,570
move fast and keep the lights on and

00:08:37,410 --> 00:08:41,990
stay compliant and maintain our security

00:08:39,570 --> 00:08:45,540
well open-source is a path to

00:08:41,990 --> 00:08:48,150
accelerating your digital transformation

00:08:45,540 --> 00:08:49,740
efforts for one there's no license

00:08:48,150 --> 00:08:51,480
restrictions on who can use it so you

00:08:49,740 --> 00:08:52,460
could have multiple people using open

00:08:51,480 --> 00:08:54,920
source technology

00:08:52,460 --> 00:08:57,320
number two there's no restrictions on

00:08:54,920 --> 00:08:59,000
the source code with a big asterisk here

00:08:57,320 --> 00:09:00,680
depending on the license of the open

00:08:59,000 --> 00:09:02,990
source technology itself but there's

00:09:00,680 --> 00:09:04,399
many use cases that this technology can

00:09:02,990 --> 00:09:06,710
be applied to as opposed to very

00:09:04,399 --> 00:09:10,220
specific and limited use cases and close

00:09:06,710 --> 00:09:12,560
source of proprietary and finally open

00:09:10,220 --> 00:09:14,899
source technology is really well-suited

00:09:12,560 --> 00:09:17,029
for experimentation and rapid

00:09:14,899 --> 00:09:20,029
prototyping to get things to market

00:09:17,029 --> 00:09:22,040
faster or to ditch them altogether as

00:09:20,029 --> 00:09:25,730
opposed to using you know some sort of

00:09:22,040 --> 00:09:27,860
heavy proprietary stack that you really

00:09:25,730 --> 00:09:29,600
have to invest in financially and from

00:09:27,860 --> 00:09:30,980
an education standpoint only to turn out

00:09:29,600 --> 00:09:33,560
that it's the wrong tool for the job

00:09:30,980 --> 00:09:35,600
open-source is is pretty fluid in that

00:09:33,560 --> 00:09:37,790
way and I think this brings it to

00:09:35,600 --> 00:09:40,399
another point that that I want to hammer

00:09:37,790 --> 00:09:42,529
home around open-source itself over the

00:09:40,399 --> 00:09:45,080
past decade or so certainly past couple

00:09:42,529 --> 00:09:46,310
of decades with folks like Salesforce

00:09:45,080 --> 00:09:49,130
the way that we've delivered

00:09:46,310 --> 00:09:49,760
applications has changed to software

00:09:49,130 --> 00:09:52,459
as-a-service

00:09:49,760 --> 00:09:54,890
well with open-source it's just a new

00:09:52,459 --> 00:09:58,400
way of delivering infrastructure right

00:09:54,890 --> 00:10:01,250
today we deliver software via SAS and

00:09:58,400 --> 00:10:02,900
today we deliver infrastructure or even

00:10:01,250 --> 00:10:05,360
application infrastructure through

00:10:02,900 --> 00:10:07,459
open-source it's simply a distribution

00:10:05,360 --> 00:10:11,300
mechanism for new forms of

00:10:07,459 --> 00:10:14,390
infrastructure and technology but it's

00:10:11,300 --> 00:10:19,760
not all rosy there are risks associated

00:10:14,390 --> 00:10:23,839
with using open-source technology like

00:10:19,760 --> 00:10:28,430
these brand risk compliance risk PII

00:10:23,839 --> 00:10:30,709
exposure just operational risk and in

00:10:28,430 --> 00:10:32,270
you know last but not least revenue risk

00:10:30,709 --> 00:10:34,820
and I'm going to go over a handful of

00:10:32,270 --> 00:10:36,800
examples that hopefully some of you are

00:10:34,820 --> 00:10:38,600
familiar with and if not it should

00:10:36,800 --> 00:10:41,740
really open your eyes to type of risks

00:10:38,600 --> 00:10:45,320
that come with using open source not in

00:10:41,740 --> 00:10:47,510
usage sake but using it without the

00:10:45,320 --> 00:10:49,550
proper set of tools and best practices

00:10:47,510 --> 00:10:51,680
around how to manage that risk so first

00:10:49,550 --> 00:10:54,290
and foremost it was a bug that came out

00:10:51,680 --> 00:10:57,290
a couple years ago and open SSL called

00:10:54,290 --> 00:10:59,300
heartbleed this was a dead simple way

00:10:57,290 --> 00:11:02,089
for people to steal data directly from

00:10:59,300 --> 00:11:05,029
your users moreover more

00:11:02,089 --> 00:11:09,680
two-thirds of all web servers on the

00:11:05,029 --> 00:11:12,410
planet were impacted this is how big an

00:11:09,680 --> 00:11:14,839
issue it is around the support or the

00:11:12,410 --> 00:11:16,970
commercial support of open source

00:11:14,839 --> 00:11:18,829
technologies like open SSL they in fact

00:11:16,970 --> 00:11:21,230
had very few developers working it out

00:11:18,829 --> 00:11:23,360
on the time and had to have some sort of

00:11:21,230 --> 00:11:25,009
emergency resources applied to the

00:11:23,360 --> 00:11:28,730
project to get a patch in place to be

00:11:25,009 --> 00:11:30,410
distributed out something that's near

00:11:28,730 --> 00:11:33,860
and dear to our heart at node source is

00:11:30,410 --> 00:11:35,899
NPM NPM stands for node package manager

00:11:33,860 --> 00:11:39,949
if you're familiar with Java that's

00:11:35,899 --> 00:11:43,249
that's maven or nougat and dotnet NPM is

00:11:39,949 --> 00:11:45,589
this massive ecosystem of node modules

00:11:43,249 --> 00:11:47,870
or packages that developers can use to

00:11:45,589 --> 00:11:51,550
build their applications however in

00:11:47,870 --> 00:11:54,980
March of last year and a disgruntled

00:11:51,550 --> 00:11:56,769
author of a package decided you know

00:11:54,980 --> 00:11:59,480
what I'm just gonna take my package off

00:11:56,769 --> 00:12:01,399
the registry it's not going to unpublish

00:11:59,480 --> 00:12:03,529
it unfortunately

00:12:01,399 --> 00:12:05,959
this tiny little package was a

00:12:03,529 --> 00:12:09,230
dependency on thousands of other

00:12:05,959 --> 00:12:11,870
packages inside NPM and it caused

00:12:09,230 --> 00:12:13,910
widespread disruption and outages and

00:12:11,870 --> 00:12:16,699
breaking builds left and right because

00:12:13,910 --> 00:12:21,679
so many other projects were dependent

00:12:16,699 --> 00:12:23,480
upon this 127 line code package this

00:12:21,679 --> 00:12:26,929
operational risk is difficult to

00:12:23,480 --> 00:12:29,660
identify when you're relying on the wild

00:12:26,929 --> 00:12:35,529
wild west of the open source ecosystem

00:12:29,660 --> 00:12:39,199
that is NPM today now this is a unique

00:12:35,529 --> 00:12:40,730
way of sort of labeling this wrist is

00:12:39,199 --> 00:12:42,679
hidden or embedded risk and what do I

00:12:40,730 --> 00:12:44,809
mean by that I don't mean embedded in

00:12:42,679 --> 00:12:46,129
terms of embedded software what I mean

00:12:44,809 --> 00:12:48,019
is that you have an open source

00:12:46,129 --> 00:12:50,389
technology or an open source framework

00:12:48,019 --> 00:12:53,480
that relies on other open source

00:12:50,389 --> 00:12:56,209
technologies or frameworks that sort of

00:12:53,480 --> 00:12:58,069
injects some hidden risk into using it

00:12:56,209 --> 00:13:01,610
so for example there's this project

00:12:58,069 --> 00:13:03,639
called electron that is an open source

00:13:01,610 --> 00:13:07,459
framework for building native desktop

00:13:03,639 --> 00:13:10,879
applications with web technologies under

00:13:07,459 --> 00:13:13,579
the hood it's powered by nodejs and it's

00:13:10,879 --> 00:13:15,470
also powered by chromium now chromium is

00:13:13,579 --> 00:13:19,340
the open source project that goo

00:13:15,470 --> 00:13:21,230
goal funds and is what more or less

00:13:19,340 --> 00:13:23,380
creates Google Chrome the web browser

00:13:21,230 --> 00:13:26,630
now what's the problem here

00:13:23,380 --> 00:13:28,550
Google Chrome has an auto update feature

00:13:26,630 --> 00:13:31,340
there are security vulnerabilities

00:13:28,550 --> 00:13:34,240
discovered and patched seemingly every

00:13:31,340 --> 00:13:37,190
day with Google Chrome but you as a user

00:13:34,240 --> 00:13:41,570
it's opaque to you why because the app

00:13:37,190 --> 00:13:43,790
is auto updating however electron has a

00:13:41,570 --> 00:13:45,890
dependency on chromium and so when you

00:13:43,790 --> 00:13:47,660
package together an electron app and you

00:13:45,890 --> 00:13:47,990
send it out and people download it and

00:13:47,660 --> 00:13:50,810
run it

00:13:47,990 --> 00:13:52,430
there's no auto update feature well now

00:13:50,810 --> 00:13:54,650
if there was a security vulnerability

00:13:52,430 --> 00:13:56,030
exposed in chromium that was patched in

00:13:54,650 --> 00:13:59,660
Google Chrome because it was the auto

00:13:56,030 --> 00:14:01,520
update feature that still exists in your

00:13:59,660 --> 00:14:04,700
electron apps these are the type of

00:14:01,520 --> 00:14:06,860
risks that are hidden from folks using

00:14:04,700 --> 00:14:08,570
these new open source technologies that

00:14:06,860 --> 00:14:12,260
have these hard core dependencies on

00:14:08,570 --> 00:14:15,160
other projects that are massive in scale

00:14:12,260 --> 00:14:17,720
and nature and frankly in footprint

00:14:15,160 --> 00:14:20,660
Google actually spends about a billion

00:14:17,720 --> 00:14:23,470
dollars a year just on the chromium

00:14:20,660 --> 00:14:26,450
project with over 500 engineers however

00:14:23,470 --> 00:14:31,850
electron doesn't necessarily imply that

00:14:26,450 --> 00:14:33,950
you get all that security relief and how

00:14:31,850 --> 00:14:36,500
could I not talk at a bank without

00:14:33,950 --> 00:14:38,780
mentioning crypto currencies back in May

00:14:36,500 --> 00:14:40,670
coin base this is a now I think a

00:14:38,780 --> 00:14:43,490
unicorn status startup out of the Bay

00:14:40,670 --> 00:14:46,550
Area they are more of less you know a

00:14:43,490 --> 00:14:48,680
wallet slash exchange for buying and

00:14:46,550 --> 00:14:51,650
selling Bitcoin theorem and litecoin at

00:14:48,680 --> 00:14:55,480
this point but back in May they saw a

00:14:51,650 --> 00:14:58,460
massive spike in traffic and it caused a

00:14:55,480 --> 00:15:00,260
significant amount of downtime what's

00:14:58,460 --> 00:15:03,620
the risk here well you know ten years

00:15:00,260 --> 00:15:05,780
ago I remember back my ad agency days we

00:15:03,620 --> 00:15:08,080
used to think oh if the website crashes

00:15:05,780 --> 00:15:10,970
it's a huge success it's so much traffic

00:15:08,080 --> 00:15:13,490
that's not the case anymore now there's

00:15:10,970 --> 00:15:15,590
a huge brand and reputation already to

00:15:13,490 --> 00:15:18,260
mention potential revenue risk

00:15:15,590 --> 00:15:20,870
associated with with this downtime with

00:15:18,260 --> 00:15:24,290
coinbase for example they had this huge

00:15:20,870 --> 00:15:25,370
spike in traffic because of the the

00:15:24,290 --> 00:15:26,930
price fluctuations that were happening

00:15:25,370 --> 00:15:27,500
in with Bitcoin and aetherium at the

00:15:26,930 --> 00:15:29,870
time

00:15:27,500 --> 00:15:32,090
and this highlighted area here showcases

00:15:29,870 --> 00:15:33,950
how how much traffic was coming in on

00:15:32,090 --> 00:15:35,690
their primary load balancer that wasn't

00:15:33,950 --> 00:15:38,380
the problem the problem was their

00:15:35,690 --> 00:15:41,540
MongoDB instances now coinbase

00:15:38,380 --> 00:15:44,180
theoretically isn't our experts in

00:15:41,540 --> 00:15:46,670
cryptocurrencies which is also debatable

00:15:44,180 --> 00:15:48,290
as anybody an expert in that but they're

00:15:46,670 --> 00:15:51,440
not experts in MongoDB they might be

00:15:48,290 --> 00:15:53,360
really good at scaling databases but

00:15:51,440 --> 00:15:55,880
they're not the best at it and so what

00:15:53,360 --> 00:15:58,040
they ended up having to do was call in

00:15:55,880 --> 00:15:59,780
the experts right but the problem with

00:15:58,040 --> 00:16:01,550
that is that you're reacting to the

00:15:59,780 --> 00:16:03,830
situation as opposed to being proactive

00:16:01,550 --> 00:16:06,830
and how you can actually support your

00:16:03,830 --> 00:16:10,220
open source infrastructure needs last

00:16:06,830 --> 00:16:14,120
but not least yes we have to go there we

00:16:10,220 --> 00:16:16,040
have to talk about Equifax I'm sure

00:16:14,120 --> 00:16:17,900
everyone in this room or at least half

00:16:16,040 --> 00:16:20,030
of this room is impacted by the breach

00:16:17,900 --> 00:16:23,360
that came out back in in September and

00:16:20,030 --> 00:16:27,020
the the saddest part about this is that

00:16:23,360 --> 00:16:29,810
it was completely avoidable see Equifax

00:16:27,020 --> 00:16:31,850
use an open source java web framework

00:16:29,810 --> 00:16:34,339
called apache struts that had a

00:16:31,850 --> 00:16:37,070
vulnerability in it that wasn't a

00:16:34,339 --> 00:16:39,260
problem the patch was actually released

00:16:37,070 --> 00:16:41,990
back in March of earlier this year

00:16:39,260 --> 00:16:45,860
the problem was it wasn't passed at

00:16:41,990 --> 00:16:47,300
Equifax why well there's a number of

00:16:45,860 --> 00:16:48,500
reasons and I'm sure we could throw some

00:16:47,300 --> 00:16:49,850
people under the bus but I'm not going

00:16:48,500 --> 00:16:51,620
to do that I think the point is is that

00:16:49,850 --> 00:16:53,480
Equifax isn't in the business of

00:16:51,620 --> 00:16:55,850
managing and maintaining application

00:16:53,480 --> 00:16:58,700
infrastructure like Apache shruts that's

00:16:55,850 --> 00:17:01,180
the job of an open source vendor now

00:16:58,700 --> 00:17:03,740
this was the result

00:17:01,180 --> 00:17:06,800
Equifax had a 16 billion dollar market

00:17:03,740 --> 00:17:08,900
cap and within six trading days after

00:17:06,800 --> 00:17:11,390
the breach five billion dollars of

00:17:08,900 --> 00:17:14,030
market cap had evaporated now granted I

00:17:11,390 --> 00:17:15,589
think it's trading up near 107 108 as it

00:17:14,030 --> 00:17:17,990
stands today they made back some of that

00:17:15,589 --> 00:17:21,110
ground but the brand and reputational

00:17:17,990 --> 00:17:24,380
risk for someone that's evaluating your

00:17:21,110 --> 00:17:27,170
credibility is extremely tarnished at

00:17:24,380 --> 00:17:28,459
this point how could they have solved

00:17:27,170 --> 00:17:30,380
for something like this how could they

00:17:28,459 --> 00:17:33,370
have potentially prevented something

00:17:30,380 --> 00:17:35,420
like this and been more proactive a

00:17:33,370 --> 00:17:38,600
quarter-million-dollar vendor support

00:17:35,420 --> 00:17:40,910
contract this is part and parcel to the

00:17:38,600 --> 00:17:42,410
majority of open-source vendors today

00:17:40,910 --> 00:17:44,690
is that they provide insurance they

00:17:42,410 --> 00:17:47,270
provide expertise they provide the

00:17:44,690 --> 00:17:50,960
support for something that inherently

00:17:47,270 --> 00:17:52,880
does not have support open-source is is

00:17:50,960 --> 00:17:54,680
great because it's collaborative and

00:17:52,880 --> 00:17:56,240
there's a community behind it that also

00:17:54,680 --> 00:17:59,030
means that that no one is accountable

00:17:56,240 --> 00:18:02,390
well how do you have a throat to choke

00:17:59,030 --> 00:18:04,160
or someone to rely on when you're using

00:18:02,390 --> 00:18:06,380
open-source technology that's where

00:18:04,160 --> 00:18:08,630
something like a support contract can

00:18:06,380 --> 00:18:12,380
come into place and is a perfect segue

00:18:08,630 --> 00:18:15,110
into our best practices so you know I'm

00:18:12,380 --> 00:18:17,630
not trying to scare everyone here into

00:18:15,110 --> 00:18:18,770
not using open-source I'm trying to get

00:18:17,630 --> 00:18:21,530
people to understand that there are

00:18:18,770 --> 00:18:24,770
risks around using any technology but

00:18:21,530 --> 00:18:26,630
specifically around open source and a

00:18:24,770 --> 00:18:29,530
handful of best practices to help

00:18:26,630 --> 00:18:31,970
mitigate some of this start with an

00:18:29,530 --> 00:18:34,820
enterprise-grade vendor support contract

00:18:31,970 --> 00:18:36,920
you know we are the nodejs company at

00:18:34,820 --> 00:18:39,110
node source we would love to be you know

00:18:36,920 --> 00:18:41,360
the vendor for any and all people here

00:18:39,110 --> 00:18:42,770
but your other open source technologies

00:18:41,360 --> 00:18:45,440
will also need some sort of support

00:18:42,770 --> 00:18:47,810
associated with it and folks like Red

00:18:45,440 --> 00:18:49,400
Hat and IBM and others can provide these

00:18:47,810 --> 00:18:50,750
types of things at a larger scale as

00:18:49,400 --> 00:18:53,390
opposed to something as specific as what

00:18:50,750 --> 00:18:55,280
we do and if you don't still believe

00:18:53,390 --> 00:18:56,810
that it's good enough for you it's good

00:18:55,280 --> 00:18:57,830
enough for the United States Department

00:18:56,810 --> 00:19:01,190
of Defense

00:18:57,830 --> 00:19:04,340
they have explicitly outlined that no

00:19:01,190 --> 00:19:05,930
matter what the software it project is

00:19:04,340 --> 00:19:07,610
or the software that's being used for

00:19:05,930 --> 00:19:11,210
specific projects or missions as they

00:19:07,610 --> 00:19:13,720
call it there is an absolute requirement

00:19:11,210 --> 00:19:16,700
for either commercial or government

00:19:13,720 --> 00:19:18,740
program office support this is a

00:19:16,700 --> 00:19:20,630
no-brainer to folks like the Department

00:19:18,740 --> 00:19:24,440
of Defense it should be a no-brainer for

00:19:20,630 --> 00:19:26,690
the fortune 500 next up is best-in-class

00:19:24,440 --> 00:19:28,400
tooling okay you say wait what do you

00:19:26,690 --> 00:19:30,380
mean I thought I thought open-source was

00:19:28,400 --> 00:19:32,150
really good it's really fast safe

00:19:30,380 --> 00:19:34,040
there's a lot of people looking at it a

00:19:32,150 --> 00:19:35,030
lot of contributors that's right but

00:19:34,040 --> 00:19:38,840
this is the question you should ask

00:19:35,030 --> 00:19:41,270
yourself you can run the open-source

00:19:38,840 --> 00:19:43,730
version of something in production but

00:19:41,270 --> 00:19:45,830
should you and I think that's the

00:19:43,730 --> 00:19:47,630
question that gets left out in a lot of

00:19:45,830 --> 00:19:50,180
cases when people started to think about

00:19:47,630 --> 00:19:52,400
well maybe I should pay for a commercial

00:19:50,180 --> 00:19:54,059
version of MongoDB for example or

00:19:52,400 --> 00:19:56,279
node.js for example

00:19:54,059 --> 00:19:57,690
and this is you know the thing that is

00:19:56,279 --> 00:19:59,820
near and dear to my heart at node source

00:19:57,690 --> 00:20:02,279
because this is what we specialize in we

00:19:59,820 --> 00:20:03,840
actually do provide those types of tools

00:20:02,279 --> 00:20:07,200
around mission-critical applications

00:20:03,840 --> 00:20:10,259
right our customers span from folks like

00:20:07,200 --> 00:20:12,899
PayPal to MasterCard to Conde Nast and

00:20:10,259 --> 00:20:14,159
the reason is is that they're relying on

00:20:12,899 --> 00:20:16,710
node for mission-critical applications

00:20:14,159 --> 00:20:19,649
and the open source technology itself is

00:20:16,710 --> 00:20:21,929
good but it's not great for production

00:20:19,649 --> 00:20:24,659
use cases so we've launched this product

00:20:21,929 --> 00:20:26,339
called and solid which is effectively no

00:20:24,659 --> 00:20:28,229
js' on steroids it's how you can think

00:20:26,339 --> 00:20:30,179
about it it's the operational and secure

00:20:28,229 --> 00:20:33,479
way of running node and production and

00:20:30,179 --> 00:20:35,039
you say well how different are you and

00:20:33,479 --> 00:20:38,940
why should I pay for something like that

00:20:35,039 --> 00:20:42,029
here's why the left-hand side is a set

00:20:38,940 --> 00:20:45,989
of features that only a few show up in

00:20:42,029 --> 00:20:47,820
the open source project and so it our

00:20:45,989 --> 00:20:49,830
product has all of these features and

00:20:47,820 --> 00:20:51,989
capabilities baked into it because this

00:20:49,830 --> 00:20:54,239
is what it's designed for it's not

00:20:51,989 --> 00:20:55,909
designed necessarily for internal

00:20:54,239 --> 00:20:59,369
applications or a small proof-of-concept

00:20:55,909 --> 00:21:01,019
it's designed for mission-critical and

00:20:59,369 --> 00:21:04,049
operational excellence when you're using

00:21:01,019 --> 00:21:05,429
node in production the same sort of

00:21:04,049 --> 00:21:07,710
thing exists on the package managers

00:21:05,429 --> 00:21:09,929
side so I talked about NPM earlier and

00:21:07,710 --> 00:21:11,609
how it caused widespread outages and

00:21:09,929 --> 00:21:13,799
there was operational and revenue risk

00:21:11,609 --> 00:21:16,799
associated with that we've solved that

00:21:13,799 --> 00:21:19,889
problem as well with this tool certified

00:21:16,799 --> 00:21:21,960
modules will actually secure and and

00:21:19,889 --> 00:21:23,519
also help you be more compliant with the

00:21:21,960 --> 00:21:26,279
packages that you're using we've

00:21:23,519 --> 00:21:28,739
effectively reduced if not completely

00:21:26,279 --> 00:21:31,139
eliminated the risk associated with

00:21:28,739 --> 00:21:33,299
using untrusted third-party JavaScript

00:21:31,139 --> 00:21:35,759
this is a tool that enables you to sleep

00:21:33,299 --> 00:21:37,950
well at night that enables your teams to

00:21:35,759 --> 00:21:40,259
keep humming along without actually

00:21:37,950 --> 00:21:42,330
pulling in insecure packages without

00:21:40,259 --> 00:21:46,139
pulling in packages that don't have a

00:21:42,330 --> 00:21:48,599
license and just for reference 30% of

00:21:46,139 --> 00:21:50,190
those packages in NPM today either don't

00:21:48,599 --> 00:21:52,440
have a license or don't have a

00:21:50,190 --> 00:21:55,229
permissive open-source license which

00:21:52,440 --> 00:21:57,179
means you're likely breaking some sort

00:21:55,229 --> 00:21:59,119
of compliance and you don't even know

00:21:57,179 --> 00:22:04,080
that it exists today

00:21:59,119 --> 00:22:06,190
next up shadow IT sounds scary it's not

00:22:04,080 --> 00:22:08,720
as scary as it sounds

00:22:06,190 --> 00:22:11,060
today with open-source technology and

00:22:08,720 --> 00:22:13,190
the way that developers are learning to

00:22:11,060 --> 00:22:16,880
build applications whether it's you know

00:22:13,190 --> 00:22:18,500
in school or you know as a consultant or

00:22:16,880 --> 00:22:21,440
a contractor or freelancer or just

00:22:18,500 --> 00:22:24,020
figuring stuff out they're all using

00:22:21,440 --> 00:22:26,240
open source technologies they're going

00:22:24,020 --> 00:22:29,840
to find a way to bring that into your IT

00:22:26,240 --> 00:22:33,020
organization so trying to stop that I

00:22:29,840 --> 00:22:35,390
think is a fleeting exercise I think you

00:22:33,020 --> 00:22:39,770
have to have a strategy around how to

00:22:35,390 --> 00:22:42,590
expect it and manage around that next up

00:22:39,770 --> 00:22:44,960
is an adequate disclosure policy what

00:22:42,590 --> 00:22:47,330
does this mean well I'll give you an

00:22:44,960 --> 00:22:51,110
example let's say you have a website

00:22:47,330 --> 00:22:53,300
which literally everybody does and some

00:22:51,110 --> 00:22:56,660
white hat hacker that's that's the good

00:22:53,300 --> 00:22:58,940
guy or gal finds a vulnerability how do

00:22:56,660 --> 00:23:00,470
they disclose that to you how do they

00:22:58,940 --> 00:23:02,480
give you that information so that you

00:23:00,470 --> 00:23:05,200
can actually go fix it but before

00:23:02,480 --> 00:23:09,140
somebody exposes it in a nefarious way

00:23:05,200 --> 00:23:11,140
excuse me there's an a new project it's

00:23:09,140 --> 00:23:14,600
in alpha so take it with a grain of salt

00:23:11,140 --> 00:23:17,030
called security txt and what this is

00:23:14,600 --> 00:23:19,880
it's basically a security dot txt file

00:23:17,030 --> 00:23:23,090
that you put in the root of your web

00:23:19,880 --> 00:23:25,010
servers directory meaning anybody can go

00:23:23,090 --> 00:23:27,020
and look at this file and it will show

00:23:25,010 --> 00:23:30,860
an email address or some sort of contact

00:23:27,020 --> 00:23:32,930
information for how to disclose issues

00:23:30,860 --> 00:23:36,950
or vulnerabilities on any of your web

00:23:32,930 --> 00:23:40,040
sites or web assets last but not least

00:23:36,950 --> 00:23:42,830
and I see this trend happening in the

00:23:40,040 --> 00:23:45,140
banking sector specifically is to reduce

00:23:42,830 --> 00:23:46,910
your proprietary tech footprint it

00:23:45,140 --> 00:23:49,070
doesn't mean go away entirely

00:23:46,910 --> 00:23:52,310
it means start to think about shifting

00:23:49,070 --> 00:23:54,020
away from specialized to something

00:23:52,310 --> 00:23:56,180
that's standardized and that is things

00:23:54,020 --> 00:23:57,800
like open standards such as web

00:23:56,180 --> 00:23:59,720
technology so I'll give you another

00:23:57,800 --> 00:24:01,880
example I know I kind of probably scared

00:23:59,720 --> 00:24:03,320
a few of you with Elektron earlier but

00:24:01,880 --> 00:24:05,540
this is something we're seeing at

00:24:03,320 --> 00:24:07,970
seemingly every bank and I know our

00:24:05,540 --> 00:24:10,190
friends at open fin are are very much

00:24:07,970 --> 00:24:13,100
focused on this as well there's this

00:24:10,190 --> 00:24:14,960
shift away from the proprietary

00:24:13,100 --> 00:24:17,930
specialized windows presentation

00:24:14,960 --> 00:24:18,640
foundation or WPF stack for building

00:24:17,930 --> 00:24:20,590
native

00:24:18,640 --> 00:24:22,270
Windows apps and moving towards things

00:24:20,590 --> 00:24:24,760
like electron why would you do that

00:24:22,270 --> 00:24:27,250
because this the standardized approach

00:24:24,760 --> 00:24:29,590
using web technologies gives your

00:24:27,250 --> 00:24:32,440
developers access to all the latest

00:24:29,590 --> 00:24:35,770
greatest and modern frameworks and

00:24:32,440 --> 00:24:39,820
toolkits and and best practices whereas

00:24:35,770 --> 00:24:42,400
with a very specialized dotnet c-sharp

00:24:39,820 --> 00:24:44,440
zamel stack it's pretty limited not only

00:24:42,400 --> 00:24:46,270
in terms of your talent pool but in the

00:24:44,440 --> 00:24:48,940
types of benefits that you can get from

00:24:46,270 --> 00:24:53,260
that because it's such a specific siloed

00:24:48,940 --> 00:25:00,160
section so with that I want to thank you

00:24:53,260 --> 00:25:02,110
all very much for attending do we do

00:25:00,160 --> 00:25:10,630
cool no yeah

00:25:02,110 --> 00:25:13,480
questions questions questions just minds

00:25:10,630 --> 00:25:16,840
are blown yes no questions literally no

00:25:13,480 --> 00:25:19,470
questions come on somebody's gonna Chuck

00:25:16,840 --> 00:25:19,470
you have a question

00:25:24,590 --> 00:25:27,710
[Music]

00:25:37,410 --> 00:25:42,900
yeah so the question is is how do you

00:25:39,750 --> 00:25:45,120
demonstrate the value verse for open

00:25:42,900 --> 00:25:48,660
source technology relative to say

00:25:45,120 --> 00:25:50,460
off-the-shelf offerings right you know a

00:25:48,660 --> 00:25:52,740
lot of this has to do with some of the

00:25:50,460 --> 00:25:55,680
bigger business drivers in the business

00:25:52,740 --> 00:25:59,240
itself so if I think the wrong approach

00:25:55,680 --> 00:26:01,920
is sort of fighting about the technical

00:25:59,240 --> 00:26:03,720
superiority of one technology versus

00:26:01,920 --> 00:26:06,000
another you will always lose that debate

00:26:03,720 --> 00:26:07,710
always because nobody's ever right and

00:26:06,000 --> 00:26:08,820
everybody's right at the same time so I

00:26:07,710 --> 00:26:09,960
don't think going the technological

00:26:08,820 --> 00:26:11,490
route is the right route I think the

00:26:09,960 --> 00:26:13,890
right route is the business value

00:26:11,490 --> 00:26:15,750
drivers so one of the examples I use is

00:26:13,890 --> 00:26:16,410
for things like why organizations adopt

00:26:15,750 --> 00:26:18,720
nodejs

00:26:16,410 --> 00:26:20,820
is well you can hire and retain talent

00:26:18,720 --> 00:26:23,850
because developers love to use node

00:26:20,820 --> 00:26:26,130
there's cost savings because no js' has

00:26:23,850 --> 00:26:27,510
a unique asynchronous i/o model which

00:26:26,130 --> 00:26:31,170
allows you to reduce your infrastructure

00:26:27,510 --> 00:26:33,270
footprint you can actually get time to

00:26:31,170 --> 00:26:35,280
market faster because you can have say a

00:26:33,270 --> 00:26:38,090
fully functioning web server in five

00:26:35,280 --> 00:26:40,920
lines of JavaScript as opposed to

00:26:38,090 --> 00:26:43,590
configuring Apache configuring JBoss

00:26:40,920 --> 00:26:46,470
spinning up all of your job of stuff so

00:26:43,590 --> 00:26:47,670
the speed is a big benefit as well so I

00:26:46,470 --> 00:26:50,400
think the point that I'm trying to make

00:26:47,670 --> 00:26:52,740
is that focusing on what are the the

00:26:50,400 --> 00:26:55,500
business value drivers relative to the

00:26:52,740 --> 00:26:56,880
technological or product aspect goes a

00:26:55,500 --> 00:26:58,980
lot further for helping people

00:26:56,880 --> 00:27:00,510
understand why it makes sense to adopt

00:26:58,980 --> 00:27:05,850
an open-source technology versus

00:27:00,510 --> 00:27:10,400
something off the shelf any other

00:27:05,850 --> 00:27:10,400
questions yes

00:27:18,660 --> 00:27:23,800
good question so the question is is in

00:27:21,490 --> 00:27:25,750
banking where what business units

00:27:23,800 --> 00:27:28,990
specifically are we seeing the fastest

00:27:25,750 --> 00:27:32,140
adoption of open source technologies who

00:27:28,990 --> 00:27:34,090
all of them you know there are certainly

00:27:32,140 --> 00:27:36,910
you know every bank is different and

00:27:34,090 --> 00:27:39,310
every bank is the smartest right so each

00:27:36,910 --> 00:27:40,780
Bank will have say certain lines of

00:27:39,310 --> 00:27:42,270
business that have legacy applications

00:27:40,780 --> 00:27:44,530
that are just never going to get touched

00:27:42,270 --> 00:27:45,760
but then you have other folks that are I

00:27:44,530 --> 00:27:47,290
think a little more technologically

00:27:45,760 --> 00:27:49,390
progressive because they have pressure

00:27:47,290 --> 00:27:50,620
on them from internal customers so if

00:27:49,390 --> 00:27:53,020
you think about the front office for

00:27:50,620 --> 00:27:55,210
example beating up on your developers

00:27:53,020 --> 00:27:56,920
say I need this new you know graphing

00:27:55,210 --> 00:28:00,940
application for our Forex desk

00:27:56,920 --> 00:28:02,980
immediately or whatever right at the end

00:28:00,940 --> 00:28:06,040
of the day a developer has to do her job

00:28:02,980 --> 00:28:07,810
and and if she has access to open source

00:28:06,040 --> 00:28:10,690
technologies that enable her to do her

00:28:07,810 --> 00:28:12,550
job faster and more effectively you'll

00:28:10,690 --> 00:28:14,410
start to see the footprint grow there I

00:28:12,550 --> 00:28:18,010
think the other thing though is is that

00:28:14,410 --> 00:28:20,860
I mentioned this earlier is certain

00:28:18,010 --> 00:28:23,620
lines of business have relied on their

00:28:20,860 --> 00:28:25,570
proprietary stacks for so long and and

00:28:23,620 --> 00:28:28,150
likely will I'm sure many of the banks

00:28:25,570 --> 00:28:30,780
in here have their own secret sauce but

00:28:28,150 --> 00:28:33,430
augmenting that going forward with say

00:28:30,780 --> 00:28:34,690
how do I build a platform out of all

00:28:33,430 --> 00:28:37,180
this technology that we have internally

00:28:34,690 --> 00:28:38,590
and and can expose that to our clients

00:28:37,180 --> 00:28:41,350
whether they're retail or institutional

00:28:38,590 --> 00:28:43,240
or just developers this is coming from

00:28:41,350 --> 00:28:45,460
you know seemingly everywhere across the

00:28:43,240 --> 00:28:48,130
board finally I will say a couple banks

00:28:45,460 --> 00:28:50,650
that we talked to do have folks that are

00:28:48,130 --> 00:28:53,050
explicitly focused on the digital

00:28:50,650 --> 00:28:55,360
transformation aspect and they are

00:28:53,050 --> 00:28:57,520
responsible for more or less determining

00:28:55,360 --> 00:29:00,100
the emerging technologies that they will

00:28:57,520 --> 00:29:08,250
end up using across multiple lines of

00:29:00,100 --> 00:29:08,250
business any other questions

00:29:10,039 --> 00:29:13,759
all right thank you very much

00:29:21,760 --> 00:29:23,820

YouTube URL: https://www.youtube.com/watch?v=ibeGoZ2TEFI


