Title: Linking Dev, Data and Operations with Open Metadata - Mandy Chessell, IBM
Publication date: 2020-12-22
Playlist: FINOS Open Source Strategy Forum 2020
Description: 
	Linking Dev, Data and Operations with Open Metadata - Mandy Chessell, IBM
Captions: 
	00:00:06,240 --> 00:00:08,480
hello

00:00:06,720 --> 00:00:10,000
my name's randy chessel and i'm the

00:00:08,480 --> 00:00:13,280
speaker for today's

00:00:10,000 --> 00:00:14,400
presentation um on a project called odpi

00:00:13,280 --> 00:00:15,839
algeria

00:00:14,400 --> 00:00:17,600
so what we're gonna do is we're going to

00:00:15,839 --> 00:00:20,880
look at how

00:00:17,600 --> 00:00:21,920
um the technology um provided by odpi

00:00:20,880 --> 00:00:23,920
algeria

00:00:21,920 --> 00:00:25,199
helps organizations become more

00:00:23,920 --> 00:00:28,320
integrated

00:00:25,199 --> 00:00:30,000
and better governed so let's start with

00:00:28,320 --> 00:00:32,320
an example

00:00:30,000 --> 00:00:35,040
of the type of problem that we're trying

00:00:32,320 --> 00:00:35,040
to solve here

00:00:35,360 --> 00:00:40,719
so for many organizations particularly

00:00:38,239 --> 00:00:42,559
those in regulated industries

00:00:40,719 --> 00:00:45,280
i find it very helpful to capture the

00:00:42,559 --> 00:00:48,559
vocabulary that they use in the business

00:00:45,280 --> 00:00:50,879
and the data that is associated with it

00:00:48,559 --> 00:00:52,640
so what do we mean by vocabulary we mean

00:00:50,879 --> 00:00:54,559
the words that are used

00:00:52,640 --> 00:00:56,399
to talk about what's going on in the

00:00:54,559 --> 00:00:59,920
business so such as

00:00:56,399 --> 00:01:03,120
customer and customer order

00:00:59,920 --> 00:01:05,600
and invoice so all of the terminology

00:01:03,120 --> 00:01:07,280
um we you know if we can understand

00:01:05,600 --> 00:01:10,320
exactly what that means

00:01:07,280 --> 00:01:12,560
and how these terms relate then we

00:01:10,320 --> 00:01:14,720
understand the language of the business

00:01:12,560 --> 00:01:17,600
and typically that language has

00:01:14,720 --> 00:01:18,159
data associated with it so for example

00:01:17,600 --> 00:01:20,799
if you

00:01:18,159 --> 00:01:21,200
are supporting customers then you often

00:01:20,799 --> 00:01:22,960
keep

00:01:21,200 --> 00:01:24,320
records about customers and you

00:01:22,960 --> 00:01:26,479
associate those

00:01:24,320 --> 00:01:28,000
that information with particular orders

00:01:26,479 --> 00:01:31,119
that they're making or

00:01:28,000 --> 00:01:32,880
invoices that they're paying for so that

00:01:31,119 --> 00:01:34,479
vocabulary gives you a very clear

00:01:32,880 --> 00:01:36,479
idea of the type of data that you're

00:01:34,479 --> 00:01:38,720
going to be working with

00:01:36,479 --> 00:01:40,400
now um because this is written in the

00:01:38,720 --> 00:01:43,759
language of the business

00:01:40,400 --> 00:01:47,119
experts from the business can attach

00:01:43,759 --> 00:01:49,200
um extra knowledge about how data of

00:01:47,119 --> 00:01:50,960
that type should be managed so

00:01:49,200 --> 00:01:53,600
for example it might be that uh when we

00:01:50,960 --> 00:01:55,600
look at credit card information that's

00:01:53,600 --> 00:01:57,600
um there's a certain set of regulations

00:01:55,600 --> 00:02:00,399
around managing that type of data

00:01:57,600 --> 00:02:02,960
and um and and and definitions about

00:02:00,399 --> 00:02:06,159
what can be stored and what has to be

00:02:02,960 --> 00:02:06,719
um gathered from the uh the credit card

00:02:06,159 --> 00:02:08,319
owner

00:02:06,719 --> 00:02:09,840
each time they make a purchase for

00:02:08,319 --> 00:02:14,080
example so

00:02:09,840 --> 00:02:17,200
we can attach the rules and regulations

00:02:14,080 --> 00:02:18,879
and classifications of

00:02:17,200 --> 00:02:20,480
particular types of data to that

00:02:18,879 --> 00:02:21,920
vocabulary

00:02:20,480 --> 00:02:23,200
and there's certain advantages to that

00:02:21,920 --> 00:02:24,160
it creates a conversation in the

00:02:23,200 --> 00:02:26,239
business about how

00:02:24,160 --> 00:02:27,280
data should be managed and that helps

00:02:26,239 --> 00:02:30,400
the ite

00:02:27,280 --> 00:02:32,000
team in terms of capturing requirements

00:02:30,400 --> 00:02:33,120
around the way that they have to manage

00:02:32,000 --> 00:02:36,000
data

00:02:33,120 --> 00:02:38,239
but we can do so much more once we have

00:02:36,000 --> 00:02:41,760
this encoding of

00:02:38,239 --> 00:02:44,239
a particular businesses vocabulary

00:02:41,760 --> 00:02:46,319
now think of a developer working on

00:02:44,239 --> 00:02:48,000
building a new application and so

00:02:46,319 --> 00:02:49,920
they're probably going to build

00:02:48,000 --> 00:02:52,000
an api maybe they're going to build a

00:02:49,920 --> 00:02:53,680
database with a particular schema

00:02:52,000 --> 00:02:57,599
structure

00:02:53,680 --> 00:02:59,840
from the vocabulary we can generate um

00:02:57,599 --> 00:03:00,879
schema structures so this is basically a

00:02:59,840 --> 00:03:04,159
description of

00:03:00,879 --> 00:03:07,680
how the fields what type of fields and

00:03:04,159 --> 00:03:08,400
how they're arranged um we can actually

00:03:07,680 --> 00:03:10,640
build that

00:03:08,400 --> 00:03:12,319
from the vocabulary and if that's

00:03:10,640 --> 00:03:14,159
integrated into the developers tool you

00:03:12,319 --> 00:03:17,120
imagine them creating an api

00:03:14,159 --> 00:03:18,239
called create customer for example if

00:03:17,120 --> 00:03:19,760
they can se

00:03:18,239 --> 00:03:22,560
from their tool if they can say give me

00:03:19,760 --> 00:03:25,840
the schema for um a customer

00:03:22,560 --> 00:03:29,440
um then uh and sort of

00:03:25,840 --> 00:03:30,879
and that's embedded into their new api

00:03:29,440 --> 00:03:32,319
this gives them tremendous advantage

00:03:30,879 --> 00:03:33,840
firstly they haven't had to type all

00:03:32,319 --> 00:03:34,720
those fields in and that could be quite

00:03:33,840 --> 00:03:37,519
a lot

00:03:34,720 --> 00:03:38,480
um secondly they they are sure that

00:03:37,519 --> 00:03:41,040
they've got it right

00:03:38,480 --> 00:03:43,200
um because it's it's come from the

00:03:41,040 --> 00:03:45,200
vocabulary

00:03:43,200 --> 00:03:48,319
and so they're happier they reduce their

00:03:45,200 --> 00:03:50,239
rework and their work is much faster

00:03:48,319 --> 00:03:51,760
um now imagine that they've they've

00:03:50,239 --> 00:03:54,080
built their api

00:03:51,760 --> 00:03:55,599
um and they've built a database to sit

00:03:54,080 --> 00:03:57,519
behind it

00:03:55,599 --> 00:03:59,519
and it's all finished and tested and

00:03:57,519 --> 00:04:01,840
it's now moving into the devops pipeline

00:03:59,519 --> 00:04:04,720
to go through the final set of testing

00:04:01,840 --> 00:04:07,280
in order to bring it into production now

00:04:04,720 --> 00:04:08,720
because it's been built with schemas

00:04:07,280 --> 00:04:09,920
that have been derived from the

00:04:08,720 --> 00:04:11,840
vocabulary

00:04:09,920 --> 00:04:13,120
um these schemas actually can have

00:04:11,840 --> 00:04:16,160
markers in them

00:04:13,120 --> 00:04:17,280
that can then be read by any subsequent

00:04:16,160 --> 00:04:21,280
processing

00:04:17,280 --> 00:04:23,840
so as that piece of new system this

00:04:21,280 --> 00:04:25,280
new service comes uh goes through the

00:04:23,840 --> 00:04:28,240
devops pipeline

00:04:25,280 --> 00:04:29,759
then it can the devops the logic in the

00:04:28,240 --> 00:04:31,600
devops pipeline can look at these

00:04:29,759 --> 00:04:33,360
markers and say oh wait a minute

00:04:31,600 --> 00:04:34,560
there's sensitive personal data that's

00:04:33,360 --> 00:04:35,600
going through this particular

00:04:34,560 --> 00:04:38,720
application

00:04:35,600 --> 00:04:41,280
we need to do some extra testing the uh

00:04:38,720 --> 00:04:42,800
the whole service now needs to be put

00:04:41,280 --> 00:04:45,840
onto

00:04:42,800 --> 00:04:47,759
a particular secured gateway

00:04:45,840 --> 00:04:49,120
and the database needs to be encrypted

00:04:47,759 --> 00:04:52,160
so

00:04:49,120 --> 00:04:55,199
all those rules about how the uh

00:04:52,160 --> 00:04:56,560
the new service has to be deployed can

00:04:55,199 --> 00:04:58,880
be

00:04:56,560 --> 00:05:00,960
enacted by the devops pipeline because

00:04:58,880 --> 00:05:03,360
it can see what type of data

00:05:00,960 --> 00:05:05,199
is being supported by that particular

00:05:03,360 --> 00:05:08,560
service

00:05:05,199 --> 00:05:11,919
so we've by linking these tools together

00:05:08,560 --> 00:05:13,039
we have uh speeded up the process of

00:05:11,919 --> 00:05:14,720
building the new server so the

00:05:13,039 --> 00:05:16,639
developers working faster

00:05:14,720 --> 00:05:17,840
and the devops pipeline is able to

00:05:16,639 --> 00:05:20,800
ensure

00:05:17,840 --> 00:05:22,560
proper um deployment of the service into

00:05:20,800 --> 00:05:25,919
production

00:05:22,560 --> 00:05:28,960
now i think now time passes and

00:05:25,919 --> 00:05:30,479
um the application is running very

00:05:28,960 --> 00:05:33,759
successfully

00:05:30,479 --> 00:05:35,280
it is uh generating interesting data

00:05:33,759 --> 00:05:36,880
and the business thinks well we can

00:05:35,280 --> 00:05:38,000
probably serve our customers better if

00:05:36,880 --> 00:05:41,440
we know a little bit more about

00:05:38,000 --> 00:05:42,160
them so data scientist is commissioned

00:05:41,440 --> 00:05:44,240
to

00:05:42,160 --> 00:05:46,960
do some analysis on the customer data to

00:05:44,240 --> 00:05:48,479
see if there are any trends or

00:05:46,960 --> 00:05:50,960
different types of insight that they can

00:05:48,479 --> 00:05:52,080
get from that from that applications

00:05:50,960 --> 00:05:53,840
data

00:05:52,080 --> 00:05:55,360
now of course within that data there's

00:05:53,840 --> 00:05:56,560
obviously interesting things to look at

00:05:55,360 --> 00:05:59,199
but there's also

00:05:56,560 --> 00:06:00,639
uh personal data that is really probably

00:05:59,199 --> 00:06:03,039
of no interest

00:06:00,639 --> 00:06:04,479
or um you know to this particular type

00:06:03,039 --> 00:06:07,520
of analysis

00:06:04,479 --> 00:06:10,720
and because that application came from

00:06:07,520 --> 00:06:12,880
a sort of marked up schema um

00:06:10,720 --> 00:06:14,880
and is catalogued as a process as a part

00:06:12,880 --> 00:06:16,960
of the devops pipeline

00:06:14,880 --> 00:06:18,639
delivery it's very easy for the data

00:06:16,960 --> 00:06:21,039
scientists to locate

00:06:18,639 --> 00:06:22,960
where the data is the catalog tells them

00:06:21,039 --> 00:06:24,400
exactly what's in that data so they're

00:06:22,960 --> 00:06:27,759
not having to sort of

00:06:24,400 --> 00:06:28,560
ask people or try to guess what's in the

00:06:27,759 --> 00:06:30,720
data

00:06:28,560 --> 00:06:32,560
but also as a copy of that data is

00:06:30,720 --> 00:06:34,880
brought into the data science tool so

00:06:32,560 --> 00:06:37,039
that they can experiment with it

00:06:34,880 --> 00:06:39,039
additional governance rules stripping

00:06:37,039 --> 00:06:40,800
out things that are inappropriate for

00:06:39,039 --> 00:06:42,639
that type of analysis

00:06:40,800 --> 00:06:44,000
can happen automatically because we

00:06:42,639 --> 00:06:47,360
understand uh

00:06:44,000 --> 00:06:49,120
the data so and and this sort of story

00:06:47,360 --> 00:06:51,680
can go on the more and more

00:06:49,120 --> 00:06:53,120
we connect tools together and take

00:06:51,680 --> 00:06:55,599
advantage of

00:06:53,120 --> 00:06:57,120
the knowledge that's been encoded by um

00:06:55,599 --> 00:06:59,599
by experts

00:06:57,120 --> 00:07:01,680
or by people who are um you know sort of

00:06:59,599 --> 00:07:03,520
working and and focusing on particular

00:07:01,680 --> 00:07:05,840
aspects of the system

00:07:03,520 --> 00:07:07,680
the higher the value that the business

00:07:05,840 --> 00:07:10,000
gets from

00:07:07,680 --> 00:07:11,039
gets forgets from the work that people

00:07:10,000 --> 00:07:15,280
are doing

00:07:11,039 --> 00:07:18,479
now and so this is the role of

00:07:15,280 --> 00:07:21,599
odpi algeria or just algeria um

00:07:18,479 --> 00:07:24,560
that that that we're focused on

00:07:21,599 --> 00:07:26,080
in this open source project so it's it's

00:07:24,560 --> 00:07:29,199
all about enabling

00:07:26,080 --> 00:07:31,520
that flow of knowledge between people

00:07:29,199 --> 00:07:33,120
processes tools engines whatever you

00:07:31,520 --> 00:07:35,919
want to talk about them

00:07:33,120 --> 00:07:37,919
and and it's particularly important when

00:07:35,919 --> 00:07:39,840
a business wants to be agile

00:07:37,919 --> 00:07:42,479
it needs to to change the way it's

00:07:39,840 --> 00:07:45,120
working it needs to

00:07:42,479 --> 00:07:46,000
embrace new types of technology and it

00:07:45,120 --> 00:07:49,520
wants

00:07:46,000 --> 00:07:51,440
its um staff to be as sort of

00:07:49,520 --> 00:07:52,800
enabled as possible particularly when it

00:07:51,440 --> 00:07:54,800
comes to data

00:07:52,800 --> 00:07:58,240
so it's extremely important to

00:07:54,800 --> 00:08:00,720
businesses uh in today's world

00:07:58,240 --> 00:08:01,440
now if you've been around a long time um

00:08:00,720 --> 00:08:02,879
which uh

00:08:01,440 --> 00:08:04,800
in this industry which i have you're

00:08:02,879 --> 00:08:06,960
probably going but haven't there been a

00:08:04,800 --> 00:08:09,120
lot of attempts to do this type of

00:08:06,960 --> 00:08:10,800
uh work in the past and you'd be

00:08:09,120 --> 00:08:14,240
completely correct

00:08:10,800 --> 00:08:15,680
we actually this is such a an important

00:08:14,240 --> 00:08:18,400
piece of capability

00:08:15,680 --> 00:08:21,120
that we have done a lot of things over

00:08:18,400 --> 00:08:24,000
the years to try and make this happen

00:08:21,120 --> 00:08:26,000
um but now we're at a point where um

00:08:24,000 --> 00:08:29,280
open source is very widely

00:08:26,000 --> 00:08:29,759
accepted it's widely deployed and

00:08:29,280 --> 00:08:32,159
there's an

00:08:29,759 --> 00:08:33,919
awful lot of recognition that sort of

00:08:32,159 --> 00:08:36,880
core infrastructure

00:08:33,919 --> 00:08:38,399
should be open and shared and used

00:08:36,880 --> 00:08:40,959
across multiple vendors

00:08:38,399 --> 00:08:43,120
and so we're at a perfect time to to

00:08:40,959 --> 00:08:45,760
take this type of idea

00:08:43,120 --> 00:08:47,440
and through open source um and open

00:08:45,760 --> 00:08:50,480
governance of that open source

00:08:47,440 --> 00:08:52,880
uh project move uh move the whole

00:08:50,480 --> 00:08:54,880
um sort of process forward so that we

00:08:52,880 --> 00:08:57,680
can get to a point where

00:08:54,880 --> 00:08:59,839
that ability to flow metadata between

00:08:57,680 --> 00:09:03,440
different tools is

00:08:59,839 --> 00:09:05,600
uh it becomes an industry standard

00:09:03,440 --> 00:09:08,320
so what's different about algeria is

00:09:05,600 --> 00:09:10,720
that we focus very much on being open

00:09:08,320 --> 00:09:12,480
not just in the code itself and and the

00:09:10,720 --> 00:09:14,640
way the code operates

00:09:12,480 --> 00:09:16,560
but in the way that we operate to make

00:09:14,640 --> 00:09:18,480
sure that many people have a say in how

00:09:16,560 --> 00:09:21,040
it's developing

00:09:18,480 --> 00:09:21,519
and and also to think about the fact

00:09:21,040 --> 00:09:24,399
that

00:09:21,519 --> 00:09:25,839
there are many ways and places and

00:09:24,399 --> 00:09:28,000
environments that we need this

00:09:25,839 --> 00:09:30,240
technology to work in

00:09:28,000 --> 00:09:32,320
and that there may be multiple vendors

00:09:30,240 --> 00:09:33,839
involved of different sizes as well as

00:09:32,320 --> 00:09:35,680
the open source projects

00:09:33,839 --> 00:09:38,000
so we need to make it fair so it's not

00:09:35,680 --> 00:09:40,080
just enough that the technology is open

00:09:38,000 --> 00:09:41,360
but the way we work is open and that the

00:09:40,080 --> 00:09:44,880
architecture

00:09:41,360 --> 00:09:48,399
allows um you know multiple

00:09:44,880 --> 00:09:51,839
participants to deliver value to the

00:09:48,399 --> 00:09:53,760
organization running the software

00:09:51,839 --> 00:09:55,519
the other thing is that it's a very big

00:09:53,760 --> 00:09:58,720
problem and so

00:09:55,519 --> 00:10:01,200
as a team we work in a very iterative

00:09:58,720 --> 00:10:03,839
way looking at the problem holistically

00:10:01,200 --> 00:10:07,200
working through different use cases

00:10:03,839 --> 00:10:09,120
and making sure that everything we do is

00:10:07,200 --> 00:10:09,920
very visible so that people can provide

00:10:09,120 --> 00:10:11,760
feedback

00:10:09,920 --> 00:10:14,000
at all stages of the design and

00:10:11,760 --> 00:10:15,360
development and the result has been very

00:10:14,000 --> 00:10:18,640
positive

00:10:15,360 --> 00:10:20,720
in that we have uh managed to

00:10:18,640 --> 00:10:22,000
create some some quite interesting

00:10:20,720 --> 00:10:24,240
innovations

00:10:22,000 --> 00:10:26,240
in this space as we break down the

00:10:24,240 --> 00:10:27,200
traditional silos between different

00:10:26,240 --> 00:10:29,200
tools

00:10:27,200 --> 00:10:30,320
uh and i'm going to show you a number of

00:10:29,200 --> 00:10:33,040
these uh

00:10:30,320 --> 00:10:34,800
in the time that we have uh left in this

00:10:33,040 --> 00:10:37,839
session

00:10:34,800 --> 00:10:41,360
so the very first part of this is

00:10:37,839 --> 00:10:42,000
that um we're not planning on creating a

00:10:41,360 --> 00:10:45,519
new

00:10:42,000 --> 00:10:47,440
mega database of metadata each of the

00:10:45,519 --> 00:10:49,200
tools continues to use their own

00:10:47,440 --> 00:10:51,200
metadata repository

00:10:49,200 --> 00:10:54,800
but we provide the ability for them to

00:10:51,200 --> 00:10:56,959
exchange metadata in a peer-to-peer way

00:10:54,800 --> 00:10:58,880
and we recognize that this may be

00:10:56,959 --> 00:11:02,320
deployed into an environment where

00:10:58,880 --> 00:11:04,800
if there's not a very large it

00:11:02,320 --> 00:11:06,800
team that can sort of run this so it's

00:11:04,800 --> 00:11:10,959
designed to be

00:11:06,800 --> 00:11:14,079
self-configuring and

00:11:10,959 --> 00:11:16,240
and allow each tool to deliver its

00:11:14,079 --> 00:11:18,320
maximum value

00:11:16,240 --> 00:11:20,000
while making up the difference between

00:11:18,320 --> 00:11:22,000
you know any deficiencies

00:11:20,000 --> 00:11:26,000
that a particular tool may have in terms

00:11:22,000 --> 00:11:28,720
of its its ability to work with metadata

00:11:26,000 --> 00:11:30,160
now on a picture like that it all looks

00:11:28,720 --> 00:11:32,079
very simple but

00:11:30,160 --> 00:11:34,079
actually there's an awful lot of devil

00:11:32,079 --> 00:11:36,399
in the detail in that

00:11:34,079 --> 00:11:38,560
uh different tools use support a

00:11:36,399 --> 00:11:41,200
different subset of information

00:11:38,560 --> 00:11:42,320
and there are huge mismatches in the

00:11:41,200 --> 00:11:45,680
granularity

00:11:42,320 --> 00:11:47,760
the terminology used the ability to

00:11:45,680 --> 00:11:49,760
maintain and manage the integrity of the

00:11:47,760 --> 00:11:51,839
metadata as we exchange it

00:11:49,760 --> 00:11:53,839
and of course using different they're

00:11:51,839 --> 00:11:56,560
all using different technologies

00:11:53,839 --> 00:11:58,480
so we need to make sure that um that

00:11:56,560 --> 00:12:00,480
algeria is able to fill the gaps

00:11:58,480 --> 00:12:03,519
wherever is needed

00:12:00,480 --> 00:12:05,680
um and so what we have is

00:12:03,519 --> 00:12:07,519
we've built a common language for

00:12:05,680 --> 00:12:09,440
metadata so these are the

00:12:07,519 --> 00:12:11,120
the types of metadata that we need to

00:12:09,440 --> 00:12:14,079
exchange

00:12:11,120 --> 00:12:17,279
and the definition of the structures the

00:12:14,079 --> 00:12:20,399
protocols to do that exchange

00:12:17,279 --> 00:12:22,839
but also to provide a lot of the

00:12:20,399 --> 00:12:24,160
sort of core middleware type

00:12:22,839 --> 00:12:26,639
implementation

00:12:24,160 --> 00:12:28,399
that makes it as easy as possible for a

00:12:26,639 --> 00:12:30,560
particular piece of technology to be

00:12:28,399 --> 00:12:33,200
integrated into the ecosystem

00:12:30,560 --> 00:12:33,920
because we want to make this as easy as

00:12:33,200 --> 00:12:36,639
possible

00:12:33,920 --> 00:12:39,839
for a particular technology to be part

00:12:36,639 --> 00:12:39,839
of the bigger ecosystem

00:12:39,920 --> 00:12:43,680
so if we looked at this from the outside

00:12:42,000 --> 00:12:46,000
um you would see that

00:12:43,680 --> 00:12:46,000
um

00:12:46,800 --> 00:12:51,279
exeria is the sort of the blue cloud in

00:12:49,680 --> 00:12:54,320
the middle

00:12:51,279 --> 00:12:57,200
and it is providing linkage for each

00:12:54,320 --> 00:13:00,880
tool so each tool connects into a geria

00:12:57,200 --> 00:13:03,040
uh through a connector and is able to

00:13:00,880 --> 00:13:06,079
send and receive metadata

00:13:03,040 --> 00:13:08,240
and then exeria takes what's coming and

00:13:06,079 --> 00:13:08,880
distributes it to the places that that

00:13:08,240 --> 00:13:12,240
needs it

00:13:08,880 --> 00:13:13,200
so for each tool the effort is just one

00:13:12,240 --> 00:13:15,440
connector

00:13:13,200 --> 00:13:16,560
to translate in and out of the open

00:13:15,440 --> 00:13:19,839
metadata type

00:13:16,560 --> 00:13:22,880
system types and interfaces

00:13:19,839 --> 00:13:26,000
and then everything that they need um

00:13:22,880 --> 00:13:27,760
is then brought to them by algeria

00:13:26,000 --> 00:13:30,560
now it looks again it looks nice on

00:13:27,760 --> 00:13:33,040
these this is this simple picture but

00:13:30,560 --> 00:13:34,639
the environment that it's going into is

00:13:33,040 --> 00:13:37,839
highly diverse

00:13:34,639 --> 00:13:39,519
so we have um so you know you can

00:13:37,839 --> 00:13:41,040
imagine there'll be multiple it will be

00:13:39,519 --> 00:13:42,800
technology running on multiple different

00:13:41,040 --> 00:13:47,360
types of clouds

00:13:42,800 --> 00:13:49,600
in on premise data centers

00:13:47,360 --> 00:13:50,880
right out into the internet of things

00:13:49,600 --> 00:13:52,160
right you know right out into the

00:13:50,880 --> 00:13:55,199
environment

00:13:52,160 --> 00:13:55,839
and all of these software components are

00:13:55,199 --> 00:13:59,040
and

00:13:55,839 --> 00:13:59,760
are exchanging data and performing

00:13:59,040 --> 00:14:02,800
processing

00:13:59,760 --> 00:14:06,399
on data in this distributed manner

00:14:02,800 --> 00:14:08,800
so for a juria to be successful

00:14:06,399 --> 00:14:11,199
it needs to be where the data and the

00:14:08,800 --> 00:14:13,120
processing is so algeria in this picture

00:14:11,199 --> 00:14:15,600
is the orange

00:14:13,120 --> 00:14:17,360
and you can see we have pushed it to all

00:14:15,600 --> 00:14:19,839
of the key places

00:14:17,360 --> 00:14:22,560
and then where it where it's located it

00:14:19,839 --> 00:14:25,839
actually communicates with itself

00:14:22,560 --> 00:14:27,199
we also support the fact that nowadays

00:14:25,839 --> 00:14:28,720
businesses share

00:14:27,199 --> 00:14:30,560
data and they might not want to connect

00:14:28,720 --> 00:14:31,680
their metadata repositories and their

00:14:30,560 --> 00:14:34,639
tools together

00:14:31,680 --> 00:14:36,399
so there's an import export format for

00:14:34,639 --> 00:14:39,440
metadata to allow

00:14:36,399 --> 00:14:41,120
a business partner to share data and

00:14:39,440 --> 00:14:43,519
the metadata that goes with it which

00:14:41,120 --> 00:14:44,079
could be the classifications terms and

00:14:43,519 --> 00:14:46,959
conditions

00:14:44,079 --> 00:14:47,600
associated with the data along with all

00:14:46,959 --> 00:14:49,440
those

00:14:47,600 --> 00:14:51,199
vocabulary descriptions and things like

00:14:49,440 --> 00:14:52,880
that so

00:14:51,199 --> 00:14:55,199
not only is there sort of a live

00:14:52,880 --> 00:14:57,839
exchange of metadata for within

00:14:55,199 --> 00:14:59,760
the organization but also an import

00:14:57,839 --> 00:15:02,160
export to allow

00:14:59,760 --> 00:15:04,480
metadata to flow between business

00:15:02,160 --> 00:15:08,800
partners and sort of disconnected

00:15:04,480 --> 00:15:11,440
mechanism here's another picture

00:15:08,800 --> 00:15:12,320
so uh here we're starting to show the

00:15:11,440 --> 00:15:14,800
fact that

00:15:12,320 --> 00:15:16,000
yes the exeria is deployed into lots of

00:15:14,800 --> 00:15:17,519
different environments and that's

00:15:16,000 --> 00:15:20,959
represented by the green

00:15:17,519 --> 00:15:24,000
clouds and nigeria itself um

00:15:20,959 --> 00:15:26,399
is uh consists of a platform for hosting

00:15:24,000 --> 00:15:28,160
the connectors so each of the blue boxes

00:15:26,399 --> 00:15:30,240
in this picture shows the algeria

00:15:28,160 --> 00:15:32,240
platform sitting in each of the

00:15:30,240 --> 00:15:33,519
the different environments and of course

00:15:32,240 --> 00:15:35,839
the blue arrows

00:15:33,519 --> 00:15:37,920
show the fact that exeria is doing the

00:15:35,839 --> 00:15:41,279
exchange between itself

00:15:37,920 --> 00:15:44,000
and the uh sort of yellowy orangy arrows

00:15:41,279 --> 00:15:45,600
are the exchange between that the

00:15:44,000 --> 00:15:47,600
connectors are managing

00:15:45,600 --> 00:15:50,240
to the specific technologies that are

00:15:47,600 --> 00:15:52,959
being uh that are being used

00:15:50,240 --> 00:15:54,880
and i keep using the word connector and

00:15:52,959 --> 00:15:55,759
the base of a juria is a connected

00:15:54,880 --> 00:15:59,040
framework

00:15:55,759 --> 00:16:00,959
that allows us to integrate our run time

00:15:59,040 --> 00:16:04,399
into different platforms

00:16:00,959 --> 00:16:05,920
um and also to allow connectors to

00:16:04,399 --> 00:16:07,600
third-party technologies to be

00:16:05,920 --> 00:16:10,000
integrated into the

00:16:07,600 --> 00:16:10,720
um into the algeria servers so that's

00:16:10,000 --> 00:16:12,880
how that's how

00:16:10,720 --> 00:16:14,079
how we basically plug things into

00:16:12,880 --> 00:16:16,639
algeria

00:16:14,079 --> 00:16:18,079
but also um applications can use our

00:16:16,639 --> 00:16:19,920
connector framework to connect to

00:16:18,079 --> 00:16:21,199
different types of data resources or

00:16:19,920 --> 00:16:23,680
services

00:16:21,199 --> 00:16:25,759
with a um additional method on there

00:16:23,680 --> 00:16:26,480
that allows them to access the metadata

00:16:25,759 --> 00:16:29,360
that's

00:16:26,480 --> 00:16:30,880
equivalent to the data or service that

00:16:29,360 --> 00:16:34,320
they're accessing so

00:16:30,880 --> 00:16:36,160
applications can use metadata directly

00:16:34,320 --> 00:16:40,320
through the connector framework

00:16:36,160 --> 00:16:41,440
um as opposed to having a geria push

00:16:40,320 --> 00:16:45,279
metadata

00:16:41,440 --> 00:16:45,279
into the applications as needed

00:16:45,440 --> 00:16:49,279
now from that picture we talked about

00:16:48,240 --> 00:16:52,480
you know that there are

00:16:49,279 --> 00:16:54,959
these um connectors and they run uh they

00:16:52,480 --> 00:16:56,480
run on the platform but actually

00:16:54,959 --> 00:16:58,320
the connectors and the different types

00:16:56,480 --> 00:17:01,519
of connectors running what we call a

00:16:58,320 --> 00:17:04,480
server so a server is a configured

00:17:01,519 --> 00:17:05,839
um sort of virtual run time that sits on

00:17:04,480 --> 00:17:08,000
top of the platform

00:17:05,839 --> 00:17:09,679
so a platform can support multiple

00:17:08,000 --> 00:17:11,439
servers at any one time

00:17:09,679 --> 00:17:12,720
and there are different types of servers

00:17:11,439 --> 00:17:14,000
that perform

00:17:12,720 --> 00:17:16,319
uh the support different types of

00:17:14,000 --> 00:17:18,559
connectors and perform a particular role

00:17:16,319 --> 00:17:21,280
in the ecosystem

00:17:18,559 --> 00:17:23,679
in the center we have um the metadata

00:17:21,280 --> 00:17:27,360
repositories so there are tools that

00:17:23,679 --> 00:17:29,120
that their job is to maintain a database

00:17:27,360 --> 00:17:30,559
of metadata

00:17:29,120 --> 00:17:32,960
and maybe there are other governance

00:17:30,559 --> 00:17:34,720
services around it and catalog

00:17:32,960 --> 00:17:36,000
search apis that sort of thing you'd

00:17:34,720 --> 00:17:38,160
expect with it

00:17:36,000 --> 00:17:40,799
and so the first thing we need to do is

00:17:38,160 --> 00:17:43,600
to take those rich sources of metadata

00:17:40,799 --> 00:17:45,120
and get those to be exchanged between

00:17:43,600 --> 00:17:46,160
the different the different metadata

00:17:45,120 --> 00:17:47,840
repositories

00:17:46,160 --> 00:17:50,320
and this is what we call the integrated

00:17:47,840 --> 00:17:54,720
metadata part of the solution it's

00:17:50,320 --> 00:17:56,640
it's the core um of of what's going on

00:17:54,720 --> 00:17:58,559
then there are lots of other tools that

00:17:56,640 --> 00:18:00,000
really they use metadata but it's not

00:17:58,559 --> 00:18:04,559
their main job so you think

00:18:00,000 --> 00:18:06,559
of um a sort of data processing engine

00:18:04,559 --> 00:18:08,240
a database a database of course has a

00:18:06,559 --> 00:18:09,039
lot of metadata and it has a schema in

00:18:08,240 --> 00:18:12,080
it

00:18:09,039 --> 00:18:13,120
but its real job is storing data so uh

00:18:12,080 --> 00:18:15,360
we need to connect

00:18:13,120 --> 00:18:17,360
it and exchange metadata with all these

00:18:15,360 --> 00:18:20,320
tools that use metadata

00:18:17,360 --> 00:18:21,280
um but it's a simpler integration

00:18:20,320 --> 00:18:24,480
because

00:18:21,280 --> 00:18:26,320
as i say these see these tools treat

00:18:24,480 --> 00:18:28,480
metadata as a means to an end rather

00:18:26,320 --> 00:18:30,240
than their main job so this is where the

00:18:28,480 --> 00:18:32,240
governance servers come in

00:18:30,240 --> 00:18:34,320
um and what we think what we're saying

00:18:32,240 --> 00:18:37,919
is that the central core is like

00:18:34,320 --> 00:18:40,640
the core not knowledge base for metadata

00:18:37,919 --> 00:18:42,720
and then we need uh to actively exchange

00:18:40,640 --> 00:18:43,360
metadata with the tools that are using

00:18:42,720 --> 00:18:45,360
it

00:18:43,360 --> 00:18:46,960
so that not only can we gather knowledge

00:18:45,360 --> 00:18:48,000
about the different resources that are

00:18:46,960 --> 00:18:49,679
being created

00:18:48,000 --> 00:18:51,600
but we can push metadata out to

00:18:49,679 --> 00:18:53,600
configure those technologies

00:18:51,600 --> 00:18:56,559
so that they are operating in a

00:18:53,600 --> 00:18:58,880
consistent and compliant manner

00:18:56,559 --> 00:19:00,880
from by using the metadata in the in

00:18:58,880 --> 00:19:02,799
this way

00:19:00,880 --> 00:19:05,280
finally we need to bring people into the

00:19:02,799 --> 00:19:08,160
story um and so we have the

00:19:05,280 --> 00:19:09,280
the uh the sort of the view services

00:19:08,160 --> 00:19:11,120
that allow this

00:19:09,280 --> 00:19:13,679
all of this integrated technology to be

00:19:11,120 --> 00:19:15,440
brought together into a solution

00:19:13,679 --> 00:19:17,200
and so these are services that are

00:19:15,440 --> 00:19:20,240
designed for

00:19:17,200 --> 00:19:22,799
user interfaces and um

00:19:20,240 --> 00:19:24,480
they're very much focused on enabling

00:19:22,799 --> 00:19:28,640
humans to be part of the

00:19:24,480 --> 00:19:30,400
bigger ecosystem although um

00:19:28,640 --> 00:19:32,400
it's it's important to remember that

00:19:30,400 --> 00:19:34,480
actually most of the

00:19:32,400 --> 00:19:36,240
user interfaces that people will deal

00:19:34,480 --> 00:19:37,520
with in this ecosystem actually come

00:19:36,240 --> 00:19:39,360
from the tools

00:19:37,520 --> 00:19:41,840
that are integrated through integrated

00:19:39,360 --> 00:19:41,840
governance

00:19:42,720 --> 00:19:47,760
this is just another picture showing

00:19:44,960 --> 00:19:50,799
those different types of

00:19:47,760 --> 00:19:52,799
of servers and how they are sort of

00:19:50,799 --> 00:19:55,200
grouped and um

00:19:52,799 --> 00:19:58,080
organized in in our internal

00:19:55,200 --> 00:19:58,080
architecture

00:19:58,240 --> 00:20:02,960
and this picture here is talking about

00:20:00,960 --> 00:20:06,080
different deployment approaches

00:20:02,960 --> 00:20:08,480
between the servers and the platforms so

00:20:06,080 --> 00:20:09,919
as i said before algeria has to run in a

00:20:08,480 --> 00:20:13,120
wide variety of

00:20:09,919 --> 00:20:15,200
um environments so this core platform

00:20:13,120 --> 00:20:16,320
that is deployed in into into a

00:20:15,200 --> 00:20:17,760
particular environment

00:20:16,320 --> 00:20:19,679
can run on something as small as a

00:20:17,760 --> 00:20:21,840
raspberry pi or

00:20:19,679 --> 00:20:23,679
it can be scaled across a large

00:20:21,840 --> 00:20:26,799
kubernetes cluster

00:20:23,679 --> 00:20:29,280
um allowing uh sort of rolling updates

00:20:26,799 --> 00:20:30,799
and high availability through that type

00:20:29,280 --> 00:20:33,039
of clustering

00:20:30,799 --> 00:20:34,320
the platform itself allows multiple

00:20:33,039 --> 00:20:36,640
servers to run

00:20:34,320 --> 00:20:37,919
so you could run all all the different

00:20:36,640 --> 00:20:40,159
types of servers you need for your

00:20:37,919 --> 00:20:42,480
organization on a single platform

00:20:40,159 --> 00:20:44,080
or it might be that your software is a

00:20:42,480 --> 00:20:46,080
service type vendor

00:20:44,080 --> 00:20:48,559
and you want to run a different server

00:20:46,080 --> 00:20:49,039
for each of your customers and they will

00:20:48,559 --> 00:20:52,799
sit

00:20:49,039 --> 00:20:55,039
as virtual um services on the platform

00:20:52,799 --> 00:20:56,240
um honestly on a single platform or on

00:20:55,039 --> 00:20:58,640
this sort of

00:20:56,240 --> 00:21:00,400
highly scalable kubernetes style so

00:20:58,640 --> 00:21:02,000
there's a lot of flexibility in the way

00:21:00,400 --> 00:21:05,280
that you can deploy

00:21:02,000 --> 00:21:06,240
the platform and as a result in the way

00:21:05,280 --> 00:21:08,080
that you can

00:21:06,240 --> 00:21:11,679
configure and set up the integration

00:21:08,080 --> 00:21:11,679
environment you need for your tools

00:21:13,440 --> 00:21:17,039
now let's start looking about how this

00:21:15,679 --> 00:21:18,559
what's going on behind the scenes

00:21:17,039 --> 00:21:21,039
because i've talked about the fact that

00:21:18,559 --> 00:21:21,600
metadata is being exchanged and it's all

00:21:21,039 --> 00:21:23,520
um

00:21:21,600 --> 00:21:24,960
sort of all slightly different in each

00:21:23,520 --> 00:21:27,679
tool so

00:21:24,960 --> 00:21:28,240
um very that core piece i talked about

00:21:27,679 --> 00:21:29,919
the

00:21:28,240 --> 00:21:31,520
integrated metadata the exchange of

00:21:29,919 --> 00:21:34,080
metadata between

00:21:31,520 --> 00:21:34,640
metadata repositories that happens in

00:21:34,080 --> 00:21:36,880
that

00:21:34,640 --> 00:21:39,039
cohort to that collection that

00:21:36,880 --> 00:21:41,919
peer-to-peer exchange

00:21:39,039 --> 00:21:43,440
that is at the heart of egypt's

00:21:41,919 --> 00:21:45,760
integration

00:21:43,440 --> 00:21:46,799
and so different tools can connect into

00:21:45,760 --> 00:21:49,840
the cohort

00:21:46,799 --> 00:21:52,640
and they have then got visibility

00:21:49,840 --> 00:21:54,080
security allowing um for all of the

00:21:52,640 --> 00:21:56,640
metadata in

00:21:54,080 --> 00:21:58,320
all of the peers or the members of the

00:21:56,640 --> 00:21:59,919
same cohort

00:21:58,320 --> 00:22:02,480
and it's also possible particularly

00:21:59,919 --> 00:22:03,440
where you have um particular servers

00:22:02,480 --> 00:22:05,360
that are

00:22:03,440 --> 00:22:06,480
wanting to serve sort of in you know

00:22:05,360 --> 00:22:09,280
multiple

00:22:06,480 --> 00:22:11,600
groups you know sort of corporate level

00:22:09,280 --> 00:22:13,520
services they can join multiple cohorts

00:22:11,600 --> 00:22:16,799
and then we'll see the superset of the

00:22:13,520 --> 00:22:18,640
metadata from the cohorts that they join

00:22:16,799 --> 00:22:19,840
and what's happening under the covers is

00:22:18,640 --> 00:22:23,600
um

00:22:19,840 --> 00:22:26,720
the the whole cohort is configured

00:22:23,600 --> 00:22:28,880
automatically so here we've got a

00:22:26,720 --> 00:22:29,600
metadata server server one in shown in

00:22:28,880 --> 00:22:31,760
pink

00:22:29,600 --> 00:22:33,440
and it wants to join the cohort so it

00:22:31,760 --> 00:22:36,080
puts a registration document

00:22:33,440 --> 00:22:37,760
into a kafka topic in which we call the

00:22:36,080 --> 00:22:41,120
rmrs topic

00:22:37,760 --> 00:22:42,080
then um here's a second server joining

00:22:41,120 --> 00:22:44,640
server 2 the blue

00:22:42,080 --> 00:22:45,280
server and it puts its registration

00:22:44,640 --> 00:22:47,280
document

00:22:45,280 --> 00:22:49,039
uh into the topic and they both receive

00:22:47,280 --> 00:22:52,320
the others and they have

00:22:49,039 --> 00:22:54,080
a negotiated exchange and what they're

00:22:52,320 --> 00:22:56,240
exchanging is knowledge of the types of

00:22:54,080 --> 00:22:57,919
metadata they each support

00:22:56,240 --> 00:22:59,840
where they're located in the network so

00:22:57,919 --> 00:23:02,320
they can call one another

00:22:59,840 --> 00:23:04,240
and just making sure that they are

00:23:02,320 --> 00:23:06,000
compatible compatible to exchange

00:23:04,240 --> 00:23:08,320
metadata

00:23:06,000 --> 00:23:09,679
once that's complete uh they're able to

00:23:08,320 --> 00:23:12,240
then call one another so

00:23:09,679 --> 00:23:13,520
they can issue um they can combine

00:23:12,240 --> 00:23:15,760
metadata from

00:23:13,520 --> 00:23:17,280
the other server and their own metadata

00:23:15,760 --> 00:23:19,520
so here we see

00:23:17,280 --> 00:23:21,039
pink metadata appearing in server two

00:23:19,520 --> 00:23:24,080
and blue metadata appearing

00:23:21,039 --> 00:23:25,760
in server one and and this

00:23:24,080 --> 00:23:29,120
you might leave it at this but you can

00:23:25,760 --> 00:23:32,559
also set it up so that in the background

00:23:29,120 --> 00:23:34,840
certain types of metadata are replicated

00:23:32,559 --> 00:23:36,320
um to create copies in different

00:23:34,840 --> 00:23:39,360
repositories and this

00:23:36,320 --> 00:23:41,039
is useful to to increase availability or

00:23:39,360 --> 00:23:43,279
if you have a server that's not able to

00:23:41,039 --> 00:23:45,039
do federated queries and needs to have

00:23:43,279 --> 00:23:47,200
all the metadata it's offering to its

00:23:45,039 --> 00:23:51,520
users in its own database

00:23:47,200 --> 00:23:54,799
so exeria will combine the use of

00:23:51,520 --> 00:23:56,640
federated or distributed queries with

00:23:54,799 --> 00:23:58,799
the ability to do replication in the

00:23:56,640 --> 00:24:01,840
background

00:23:58,799 --> 00:24:03,520
the way we store metadata is actually we

00:24:01,840 --> 00:24:07,200
break it down into

00:24:03,520 --> 00:24:10,400
small nuggets of of information

00:24:07,200 --> 00:24:14,400
that is each owned by a single server

00:24:10,400 --> 00:24:16,799
so we have the notion of entities

00:24:14,400 --> 00:24:18,640
as information about a thing

00:24:16,799 --> 00:24:21,440
relationships between entities

00:24:18,640 --> 00:24:23,200
uh showing how they're tied together um

00:24:21,440 --> 00:24:25,360
and classifications which are

00:24:23,200 --> 00:24:27,200
the way to actually augment a particular

00:24:25,360 --> 00:24:29,919
definition so we can say

00:24:27,200 --> 00:24:30,720
here's the definition of um a credit

00:24:29,919 --> 00:24:32,400
card number

00:24:30,720 --> 00:24:34,640
and we can add a classification to say

00:24:32,400 --> 00:24:36,240
this credit card number is sensitive

00:24:34,640 --> 00:24:37,919
or we could add a classification to say

00:24:36,240 --> 00:24:39,200
this credit card information has to be

00:24:37,919 --> 00:24:41,919
kept for seven years

00:24:39,200 --> 00:24:43,120
so that's the role of the classification

00:24:41,919 --> 00:24:47,200
and what's going on in the

00:24:43,120 --> 00:24:49,919
on under the covers so to speak is

00:24:47,200 --> 00:24:51,520
that we are shuffling stuff around so

00:24:49,919 --> 00:24:53,760
that we can link it together

00:24:51,520 --> 00:24:56,400
so we might have for example here we've

00:24:53,760 --> 00:24:57,600
got a description of a database column

00:24:56,400 --> 00:25:00,720
in one server

00:24:57,600 --> 00:25:01,679
and a description of a glossary term or

00:25:00,720 --> 00:25:04,000
a sort of

00:25:01,679 --> 00:25:05,360
vocabulary definition in another and we

00:25:04,000 --> 00:25:07,440
want to link them together

00:25:05,360 --> 00:25:08,799
so it could be that we shuffled went the

00:25:07,440 --> 00:25:11,360
wrong way

00:25:08,799 --> 00:25:12,320
it could be that we shuffle the glossary

00:25:11,360 --> 00:25:15,520
term

00:25:12,320 --> 00:25:16,960
into server one and connect it there um

00:25:15,520 --> 00:25:18,559
or it might be that server one doesn't

00:25:16,960 --> 00:25:20,400
support glossary terms and server two

00:25:18,559 --> 00:25:22,159
doesn't support database columns

00:25:20,400 --> 00:25:23,840
in which case we can bring in a third

00:25:22,159 --> 00:25:25,919
server into the cohort

00:25:23,840 --> 00:25:27,360
um and make the connection there and it

00:25:25,919 --> 00:25:30,720
actually doesn't matter

00:25:27,360 --> 00:25:32,480
which we do when we issue a query we

00:25:30,720 --> 00:25:35,520
will get all three pieces back together

00:25:32,480 --> 00:25:38,080
as if they were stored in one repository

00:25:35,520 --> 00:25:40,080
and this means that we can augment the

00:25:38,080 --> 00:25:42,080
capabilities of the tools and

00:25:40,080 --> 00:25:43,279
engines that are connecting to the

00:25:42,080 --> 00:25:46,559
cohorts

00:25:43,279 --> 00:25:48,720
with additional governance function that

00:25:46,559 --> 00:25:50,400
none of them support because we are able

00:25:48,720 --> 00:25:54,640
to store that metadata

00:25:50,400 --> 00:25:54,640
in in a nigeria repository

00:25:55,360 --> 00:25:59,200
in looking at the needs of many

00:25:57,200 --> 00:26:01,440
companies in terms of

00:25:59,200 --> 00:26:02,559
supporting the regulations and their

00:26:01,440 --> 00:26:05,360
needs for

00:26:02,559 --> 00:26:06,720
uh did completely digital operation uh

00:26:05,360 --> 00:26:10,960
we've come up with um

00:26:06,720 --> 00:26:14,000
a broad range of metadata that is um

00:26:10,960 --> 00:26:14,880
that that is needed and it's about 500

00:26:14,000 --> 00:26:17,200
different types

00:26:14,880 --> 00:26:18,640
um i'm sure over time this is going to

00:26:17,200 --> 00:26:21,440
grow but this is our

00:26:18,640 --> 00:26:22,240
effective starter set and they link

00:26:21,440 --> 00:26:26,159
together

00:26:22,240 --> 00:26:29,120
um to allow you to go from

00:26:26,159 --> 00:26:29,600
sort of regulatory requirements through

00:26:29,120 --> 00:26:32,080
to

00:26:29,600 --> 00:26:33,760
specific implementations and the current

00:26:32,080 --> 00:26:35,279
state of those implementations who's

00:26:33,760 --> 00:26:38,159
working with it and

00:26:35,279 --> 00:26:39,600
how it's being used in the organization

00:26:38,159 --> 00:26:42,000
this also includes

00:26:39,600 --> 00:26:44,080
lineage which is very important to many

00:26:42,000 --> 00:26:48,000
organizations

00:26:44,080 --> 00:26:49,919
and that whole set of types

00:26:48,000 --> 00:26:51,120
can be exchanged across the cohort but

00:26:49,919 --> 00:26:53,679
also we provide

00:26:51,120 --> 00:26:56,240
higher level interfaces to make it

00:26:53,679 --> 00:27:00,480
easier for different types of tools

00:26:56,240 --> 00:27:02,400
to connect into into the ecosystem

00:27:00,480 --> 00:27:04,080
and here you can see these white boxes

00:27:02,400 --> 00:27:07,120
represent the different types of

00:27:04,080 --> 00:27:09,600
apis that we have and the name of them

00:27:07,120 --> 00:27:11,840
gives you an idea of the type of

00:27:09,600 --> 00:27:14,400
focus the type of metadata that flows

00:27:11,840 --> 00:27:16,320
across those interfaces

00:27:14,400 --> 00:27:18,799
and then we need to integrate with tools

00:27:16,320 --> 00:27:20,399
this is the governance service um

00:27:18,799 --> 00:27:22,320
we need to integrate with tools that

00:27:20,399 --> 00:27:24,799
have different types of capabilities so

00:27:22,320 --> 00:27:27,360
some might like a database typically

00:27:24,799 --> 00:27:28,720
and you we can call it and we can poll

00:27:27,360 --> 00:27:29,600
it and we can pull the schemas and

00:27:28,720 --> 00:27:32,000
monitor the

00:27:29,600 --> 00:27:34,080
changing schemas within it other types

00:27:32,000 --> 00:27:35,440
of technology create events when things

00:27:34,080 --> 00:27:37,120
change and we can listen for those

00:27:35,440 --> 00:27:41,120
events and use them so

00:27:37,120 --> 00:27:43,760
we support a variety of different

00:27:41,120 --> 00:27:44,159
integration patterns and then they can

00:27:43,760 --> 00:27:46,559
be

00:27:44,159 --> 00:27:48,720
built up to allow us to not only

00:27:46,559 --> 00:27:50,240
automatically extract metadata from the

00:27:48,720 --> 00:27:53,039
different types of tools

00:27:50,240 --> 00:27:54,159
but push metadata to other technologies

00:27:53,039 --> 00:27:57,520
to allow

00:27:54,159 --> 00:27:59,120
that technology to be configured for

00:27:57,520 --> 00:28:00,799
different types of scenarios so here

00:27:59,120 --> 00:28:03,120
we're building

00:28:00,799 --> 00:28:04,960
views over data as it's captured and

00:28:03,120 --> 00:28:08,000
brought into a particular

00:28:04,960 --> 00:28:10,000
data lake uh to allow um

00:28:08,000 --> 00:28:12,799
the virtualization engine to act as an

00:28:10,000 --> 00:28:15,919
access point where additional security

00:28:12,799 --> 00:28:16,799
can be applied to the user to the calls

00:28:15,919 --> 00:28:20,720
from

00:28:16,799 --> 00:28:23,120
users over alpha data lake um

00:28:20,720 --> 00:28:24,000
there's also quite a focus on user

00:28:23,120 --> 00:28:25,919
interfaces

00:28:24,000 --> 00:28:28,000
in uh in nigeria at the moment

00:28:25,919 --> 00:28:31,120
particularly allowing people

00:28:28,000 --> 00:28:33,120
to connect to repository and explore

00:28:31,120 --> 00:28:35,039
the content to look at the types that

00:28:33,120 --> 00:28:37,039
are supported in each server

00:28:35,039 --> 00:28:40,399
and how the servers are connected

00:28:37,039 --> 00:28:43,520
together in the in the ecosystem

00:28:40,399 --> 00:28:45,120
um and um the vendors

00:28:43,520 --> 00:28:47,120
we're working with we're working with a

00:28:45,120 --> 00:28:48,000
lot of household names when it comes to

00:28:47,120 --> 00:28:50,480
vendors

00:28:48,000 --> 00:28:51,600
are looking at it um from their own

00:28:50,480 --> 00:28:53,279
internal perspective

00:28:51,600 --> 00:28:55,440
linking together different versions of

00:28:53,279 --> 00:28:56,960
their products or where multiple

00:28:55,440 --> 00:28:58,640
versions of their products are deployed

00:28:56,960 --> 00:29:01,600
across an enterprise

00:28:58,640 --> 00:29:03,440
or making taking advantage of the

00:29:01,600 --> 00:29:05,520
integration with different technologies

00:29:03,440 --> 00:29:07,600
that algeria provides

00:29:05,520 --> 00:29:08,640
or expanding the amount of metadata that

00:29:07,600 --> 00:29:10,640
they can access to

00:29:08,640 --> 00:29:12,720
so there's there's a huge range of

00:29:10,640 --> 00:29:14,799
opportunities that

00:29:12,720 --> 00:29:16,240
the digeria can provide to a particular

00:29:14,799 --> 00:29:20,080
vendor and to

00:29:16,240 --> 00:29:23,760
open source projects in general

00:29:20,080 --> 00:29:26,799
the way we operate is we have

00:29:23,760 --> 00:29:28,159
a very modular architecture and we've

00:29:26,799 --> 00:29:28,880
been which we've been working through

00:29:28,159 --> 00:29:32,159
building up

00:29:28,880 --> 00:29:32,159
increasingly um

00:29:32,320 --> 00:29:36,559
more sophisticated apis to enable the

00:29:35,440 --> 00:29:39,279
integration

00:29:36,559 --> 00:29:41,600
and as i said before we're very open in

00:29:39,279 --> 00:29:43,360
terms of how we operate so you'll see

00:29:41,600 --> 00:29:44,720
if you look at our git repository there

00:29:43,360 --> 00:29:46,640
are some things that are released

00:29:44,720 --> 00:29:49,120
functions and other things that

00:29:46,640 --> 00:29:51,440
are actually still in progress and at

00:29:49,120 --> 00:29:54,240
different levels of of development

00:29:51,440 --> 00:29:55,360
so the way we work is each month we

00:29:54,240 --> 00:29:58,399
create a release

00:29:55,360 --> 00:30:00,799
and that has uh whatever's ready uh is

00:29:58,399 --> 00:30:03,120
is then incorporated in the release

00:30:00,799 --> 00:30:04,000
um and from here you can see the green

00:30:03,120 --> 00:30:07,279
areas are

00:30:04,000 --> 00:30:08,720
the released and sort of tech preview

00:30:07,279 --> 00:30:10,799
type

00:30:08,720 --> 00:30:12,559
function orange means that there's

00:30:10,799 --> 00:30:15,440
active development work going on

00:30:12,559 --> 00:30:17,679
red means that it's uh it's still in

00:30:15,440 --> 00:30:19,679
negotiation so it's pretty much a paper

00:30:17,679 --> 00:30:23,279
exercise at this point as to what's

00:30:19,679 --> 00:30:26,799
in that particular function um

00:30:23,279 --> 00:30:28,240
and um let's see what we got oh yes this

00:30:26,799 --> 00:30:30,080
picture here is just showing roughly

00:30:28,240 --> 00:30:32,240
where we're focused on as you can see

00:30:30,080 --> 00:30:33,520
a good focus on integration user

00:30:32,240 --> 00:30:36,159
interfaces

00:30:33,520 --> 00:30:38,240
and looking at expanding the capability

00:30:36,159 --> 00:30:40,159
the ability to capture

00:30:38,240 --> 00:30:42,559
lineage and those controlled

00:30:40,159 --> 00:30:46,320
vocabularies

00:30:42,559 --> 00:30:47,520
so what we get from nigeria ageriosa

00:30:46,320 --> 00:30:51,120
open source

00:30:47,520 --> 00:30:52,399
distributed ability to connect together

00:30:51,120 --> 00:30:54,880
different tools and allow an

00:30:52,399 --> 00:30:58,240
organization to be far more agile

00:30:54,880 --> 00:30:59,279
and build and share knowledge far more

00:30:58,240 --> 00:31:01,440
effectively

00:30:59,279 --> 00:31:02,880
even though they use tools from lots of

00:31:01,440 --> 00:31:04,399
different vendors and open source

00:31:02,880 --> 00:31:07,760
projects

00:31:04,399 --> 00:31:18,080
so thank you so much for listening and

00:31:07,760 --> 00:31:18,080

YouTube URL: https://www.youtube.com/watch?v=C6D8FuIwsK4


