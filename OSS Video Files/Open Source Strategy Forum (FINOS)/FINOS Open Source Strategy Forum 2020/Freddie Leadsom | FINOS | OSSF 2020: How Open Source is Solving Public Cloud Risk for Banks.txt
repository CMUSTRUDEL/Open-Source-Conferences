Title: Freddie Leadsom | FINOS | OSSF 2020: How Open Source is Solving Public Cloud Risk for Banks
Publication date: 2020-12-22
Playlist: FINOS Open Source Strategy Forum 2020
Description: 
	Freddie Leadsom | FINOS | OSSF 2020: How Open Source is Solving Public Cloud Risk for Banks | FINOS OSSF 2020

Freddie Leadsom, Analyst, Engineer, Accounting Technology, Deutsche Bank

How Open Source is Solving Public Cloud Risk for Banks - OSSF 2020

To keep up with the pace of change and computational acceleration across Technologically involved industries, many companies have adopted the Public Cloud to exponentially increase their scalability, flexibility and cost efficiency. Banks are no exception, but coupled with the challenges of regulation and stability within Financial Services, the world’s largest Financial Institutions have an enormous task ahead to adopt an infrastructure model that allows them to keep up with the smallest and nimblest of Tech companies.

Deutsche Bank have been working with The Fintech OpenSource Foundation for around 18 months on a project to multilaterally accelerate the transformation of banking Infrastructure from self hosted to Public Cloud technology. Some of the largest investment banks in the world including JP Morgan and Deutsche bank as well as Red Hat, Microsoft and a consortium of tech pioneers have come together to demonstrate that banks can be included in the Public Cloud revolution, and provide solutions that will extend the concept to more of the Financial Industry.

-=-=-=-=-

This video is from the FINOS / Linux Foundation Open Source Strategy Forum (OSSF) Virtual 2020. 

►►For free access to all 2020 videos from the conference - please register HERE: https://events.linuxfoundation.org/open-source-strategy-forum/register/
 
►► More information HERE: https://events.linuxfoundation.org/open-source-strategy-forum/
►► 2020 Schedule HERE: https://events.linuxfoundation.org/open-source-strategy-forum/program/schedule/

Learn more about FINOS and how we deliver the power of open source to financial services:
►► FINOS: https://www.finos.org/
Captions: 
	00:00:01,730 --> 00:00:07,190
[Music]

00:00:07,440 --> 00:00:11,519
okay

00:00:08,720 --> 00:00:12,000
so hopefully this is working hi everyone

00:00:11,519 --> 00:00:15,120
um

00:00:12,000 --> 00:00:17,199
i'm freddie so i am a engineer at

00:00:15,120 --> 00:00:17,600
deutsche bank and i'm going to talk you

00:00:17,199 --> 00:00:19,439
through

00:00:17,600 --> 00:00:21,039
a project that we've been working on

00:00:19,439 --> 00:00:24,320
with finos

00:00:21,039 --> 00:00:26,960
for about 18 months now called the cloud

00:00:24,320 --> 00:00:30,400
service certification project

00:00:26,960 --> 00:00:34,239
so i'll quickly introduce myself

00:00:30,400 --> 00:00:36,640
so i work in p l technology at deutsche

00:00:34,239 --> 00:00:38,079
i've been with the bank for about two

00:00:36,640 --> 00:00:38,559
years and i've been working on this

00:00:38,079 --> 00:00:41,760
project

00:00:38,559 --> 00:00:44,320
for about 18 months pretty much since we

00:00:41,760 --> 00:00:46,079
first got involved with it so i'm going

00:00:44,320 --> 00:00:49,039
to talk you through

00:00:46,079 --> 00:00:49,920
cloud service certification the idea

00:00:49,039 --> 00:00:52,239
behind

00:00:49,920 --> 00:00:52,960
the cloud service certification project

00:00:52,239 --> 00:00:56,640
is

00:00:52,960 --> 00:00:58,640
that all major banks

00:00:56,640 --> 00:01:00,719
pretty much are trying to adopt public

00:00:58,640 --> 00:01:03,840
cloud one way or another

00:01:00,719 --> 00:01:06,560
and uh the way they're doing that um

00:01:03,840 --> 00:01:07,600
is by going through each service and

00:01:06,560 --> 00:01:11,680
working out

00:01:07,600 --> 00:01:15,360
what risks they need to calculate and

00:01:11,680 --> 00:01:17,759
and what their settings need to say

00:01:15,360 --> 00:01:19,119
on their um cloud services so if you're

00:01:17,759 --> 00:01:22,000
trying to create a

00:01:19,119 --> 00:01:22,799
um if you're trying to put bank data in

00:01:22,000 --> 00:01:25,600
a postgres

00:01:22,799 --> 00:01:27,360
database on the cloud for example you

00:01:25,600 --> 00:01:30,079
would need to

00:01:27,360 --> 00:01:31,759
have certain settings enabled like maybe

00:01:30,079 --> 00:01:34,000
encryption at rest or encryption in

00:01:31,759 --> 00:01:37,040
transit

00:01:34,000 --> 00:01:37,759
the ramifications of that is that as a

00:01:37,040 --> 00:01:40,320
bank

00:01:37,759 --> 00:01:41,759
if you're trying to adopt public cloud

00:01:40,320 --> 00:01:45,520
developers in banks

00:01:41,759 --> 00:01:47,280
are generally used to only being able to

00:01:45,520 --> 00:01:51,280
create things that are compliant

00:01:47,280 --> 00:01:53,680
and secure so if i'm a

00:01:51,280 --> 00:01:55,200
so i'm a developer at the bank and i

00:01:53,680 --> 00:01:58,000
don't go into

00:01:55,200 --> 00:01:59,040
deutsche bank's policy documents and

00:01:58,000 --> 00:02:02,399
make sure that

00:01:59,040 --> 00:02:05,280
i can do what i'm about to do before i

00:02:02,399 --> 00:02:07,439
deploy to openshift internally for

00:02:05,280 --> 00:02:10,319
example

00:02:07,439 --> 00:02:10,959
i just do it and the reason i can do

00:02:10,319 --> 00:02:14,160
that

00:02:10,959 --> 00:02:16,400
is because i know that anything

00:02:14,160 --> 00:02:17,280
i'm able to do within deutsche bank's

00:02:16,400 --> 00:02:19,840
network

00:02:17,280 --> 00:02:22,319
is compliant and secure and complies

00:02:19,840 --> 00:02:24,879
with the bank's risk appetite

00:02:22,319 --> 00:02:26,959
that is often taken for granted by

00:02:24,879 --> 00:02:28,560
people who work in banks

00:02:26,959 --> 00:02:31,599
but there's a huge amount of work that

00:02:28,560 --> 00:02:33,599
goes into enabling that to be the case

00:02:31,599 --> 00:02:35,440
and making it easy for developers to

00:02:33,599 --> 00:02:37,680
focus on solving their problems rather

00:02:35,440 --> 00:02:39,680
than constantly thinking about

00:02:37,680 --> 00:02:42,000
am i missing a regulation here and there

00:02:39,680 --> 00:02:43,040
and of course the reality is that even

00:02:42,000 --> 00:02:45,519
if

00:02:43,040 --> 00:02:47,440
even if banks did require developers to

00:02:45,519 --> 00:02:50,319
go and look at those policies

00:02:47,440 --> 00:02:51,200
that wouldn't be a workable way forward

00:02:50,319 --> 00:02:54,000
because

00:02:51,200 --> 00:02:56,000
um there's just too much to think about

00:02:54,000 --> 00:03:00,000
you know deutsche are operating in

00:02:56,000 --> 00:03:02,879
around 80 countries and we've got

00:03:00,000 --> 00:03:03,680
nearly 100 000 staff and and some banks

00:03:02,879 --> 00:03:05,760
are bigger

00:03:03,680 --> 00:03:07,599
and so you know that that's that's not

00:03:05,760 --> 00:03:09,040
really workable to say to a developer

00:03:07,599 --> 00:03:11,040
every time you want to do anything you

00:03:09,040 --> 00:03:14,000
have to go and check those policies so

00:03:11,040 --> 00:03:14,879
we've got to maintain that ability for

00:03:14,000 --> 00:03:17,360
anything to ha

00:03:14,879 --> 00:03:18,879
anything that happens internally is

00:03:17,360 --> 00:03:21,760
compliant and secure

00:03:18,879 --> 00:03:24,000
by nature so how do we maintain that

00:03:21,760 --> 00:03:25,040
while we're adopting public cloud

00:03:24,000 --> 00:03:27,440
that's what the cloud service

00:03:25,040 --> 00:03:30,640
certification project aims to

00:03:27,440 --> 00:03:33,599
aims to achieve so

00:03:30,640 --> 00:03:34,560
a quick introduction to the project the

00:03:33,599 --> 00:03:37,120
collaborators

00:03:34,560 --> 00:03:37,680
um to the cloud service certification

00:03:37,120 --> 00:03:40,080
project

00:03:37,680 --> 00:03:41,200
are mainly have mainly been deutsche and

00:03:40,080 --> 00:03:43,840
jp morgan

00:03:41,200 --> 00:03:45,680
um up until a few months ago really

00:03:43,840 --> 00:03:46,640
finos has been leading the project and

00:03:45,680 --> 00:03:49,040
finnos

00:03:46,640 --> 00:03:49,840
as many of you will know is a linux

00:03:49,040 --> 00:03:52,959
foundation

00:03:49,840 --> 00:03:56,159
member um joining this year

00:03:52,959 --> 00:03:57,200
and so the finnos team have kind of

00:03:56,159 --> 00:04:00,640
guided

00:03:57,200 --> 00:04:03,200
deutsche and jpm to lead this project

00:04:00,640 --> 00:04:04,319
um we've had a lot more collaborators

00:04:03,200 --> 00:04:07,599
getting involved

00:04:04,319 --> 00:04:09,760
over the last uh well during 2020 really

00:04:07,599 --> 00:04:11,920
we've now got morgan stanley we've had

00:04:09,760 --> 00:04:13,680
ubs involvement we've had a lot of help

00:04:11,920 --> 00:04:15,280
from red hat

00:04:13,680 --> 00:04:16,880
and then the cloud providers themselves

00:04:15,280 --> 00:04:20,239
microsoft and google

00:04:16,880 --> 00:04:21,519
and various other companies we've had cs

00:04:20,239 --> 00:04:24,800
we've had

00:04:21,519 --> 00:04:25,759
city hub and um and consulting companies

00:04:24,800 --> 00:04:29,280
that are helping us

00:04:25,759 --> 00:04:29,840
to kind of work out the most efficient

00:04:29,280 --> 00:04:32,560
way of

00:04:29,840 --> 00:04:35,600
of collaborating and uh solve some of

00:04:32,560 --> 00:04:37,520
the technical challenges with us

00:04:35,600 --> 00:04:39,360
so that's that's the collaborators do it

00:04:37,520 --> 00:04:41,199
um and and there's sort of

00:04:39,360 --> 00:04:43,199
banks are in and out on this project and

00:04:41,199 --> 00:04:44,960
we're we're really pushing this because

00:04:43,199 --> 00:04:46,960
we've we've kind of seen that

00:04:44,960 --> 00:04:49,759
this could be a really really valuable

00:04:46,960 --> 00:04:49,759
asset for us

00:04:50,000 --> 00:04:54,479
so the project purpose um

00:04:53,360 --> 00:04:56,000
the mission of the cloud service

00:04:54,479 --> 00:04:57,520
certification working group is to

00:04:56,000 --> 00:04:59,360
accelerate the development deployment

00:04:57,520 --> 00:05:01,039
and adoption of a common set of controls

00:04:59,360 --> 00:05:03,759
and tests for cloud services

00:05:01,039 --> 00:05:04,800
you can see that on the screen and so

00:05:03,759 --> 00:05:07,039
that that

00:05:04,800 --> 00:05:08,320
the long and the short of that is that

00:05:07,039 --> 00:05:10,720
we want

00:05:08,320 --> 00:05:11,840
adoption of public cloud for banks to be

00:05:10,720 --> 00:05:14,800
very easy

00:05:11,840 --> 00:05:17,199
and we've recognized that there's no

00:05:14,800 --> 00:05:20,320
intellectual property for banks

00:05:17,199 --> 00:05:21,280
in the ability to adopt public cloud

00:05:20,320 --> 00:05:24,080
right so

00:05:21,280 --> 00:05:26,080
um you know our rip does not sit in our

00:05:24,080 --> 00:05:28,080
ability to adopt public cloud

00:05:26,080 --> 00:05:29,680
all banks are trying to achieve the same

00:05:28,080 --> 00:05:31,759
thing um

00:05:29,680 --> 00:05:33,840
a lot of banks are trying to comply with

00:05:31,759 --> 00:05:36,639
the same regulations so

00:05:33,840 --> 00:05:37,199
rather than reinventing the wheel and

00:05:36,639 --> 00:05:39,039
kind of

00:05:37,199 --> 00:05:40,960
over and over again all of us coming to

00:05:39,039 --> 00:05:42,000
the same conclusions about the same

00:05:40,960 --> 00:05:44,800
services

00:05:42,000 --> 00:05:45,600
um we we're just collaborating and and

00:05:44,800 --> 00:05:49,520
doing that work

00:05:45,600 --> 00:05:51,680
centrally um so why is this

00:05:49,520 --> 00:05:53,759
why is this necessary well the majority

00:05:51,680 --> 00:05:55,919
of cloud security incidents

00:05:53,759 --> 00:05:57,199
are due to human error so you can read

00:05:55,919 --> 00:05:59,680
the quote on the screen

00:05:57,199 --> 00:06:00,240
and capital one is a really good example

00:05:59,680 --> 00:06:02,160
of this

00:06:00,240 --> 00:06:03,520
um apologies if anyone from capital

00:06:02,160 --> 00:06:06,800
one's on the call

00:06:03,520 --> 00:06:10,319
but last year capital one

00:06:06,800 --> 00:06:11,840
had a breach in public cloud

00:06:10,319 --> 00:06:13,759
so they put some data in the public

00:06:11,840 --> 00:06:17,759
cloud in an aws

00:06:13,759 --> 00:06:21,120
um i think it was an easy two bucket and

00:06:17,759 --> 00:06:24,400
that data was compromised that data

00:06:21,120 --> 00:06:26,960
however was not hacked in the

00:06:24,400 --> 00:06:27,440
in the sort of brute force sense of the

00:06:26,960 --> 00:06:30,400
word

00:06:27,440 --> 00:06:31,759
so um it was a it was a misconfigured

00:06:30,400 --> 00:06:34,160
container

00:06:31,759 --> 00:06:35,360
and so where does the blame sit so this

00:06:34,160 --> 00:06:38,000
was one of the first

00:06:35,360 --> 00:06:39,840
um the first problems of its kind and

00:06:38,000 --> 00:06:41,440
this was a really interesting case study

00:06:39,840 --> 00:06:42,400
for those of us that work in financial

00:06:41,440 --> 00:06:45,919
services

00:06:42,400 --> 00:06:48,080
because what it says is um okay so it

00:06:45,919 --> 00:06:50,240
wasn't aws's fault because the container

00:06:48,080 --> 00:06:53,440
did exactly what it was supposed to do

00:06:50,240 --> 00:06:56,800
was it capital one's fault well

00:06:53,440 --> 00:07:00,000
maybe but um that that it was

00:06:56,800 --> 00:07:02,319
it was a case of not having um

00:07:00,000 --> 00:07:03,759
i guess tested the the different

00:07:02,319 --> 00:07:06,240
settings in aws

00:07:03,759 --> 00:07:08,000
and of course that um that those

00:07:06,240 --> 00:07:08,960
switches are not owned by capital one

00:07:08,000 --> 00:07:11,520
themselves and

00:07:08,960 --> 00:07:12,720
you know these these cloud services are

00:07:11,520 --> 00:07:15,840
uh a complex

00:07:12,720 --> 00:07:17,360
and there's a lot of um

00:07:15,840 --> 00:07:19,520
there's a lot of switches there's a lot

00:07:17,360 --> 00:07:21,360
of settings that you can apply to all

00:07:19,520 --> 00:07:22,960
the different services particularly when

00:07:21,360 --> 00:07:25,680
you're working

00:07:22,960 --> 00:07:26,800
across different cloud providers google

00:07:25,680 --> 00:07:30,800
as your

00:07:26,800 --> 00:07:34,319
aws ali cloud et cetera ibm

00:07:30,800 --> 00:07:36,240
oracle and uh the the result of that was

00:07:34,319 --> 00:07:37,520
the us bank shares slid nearly six

00:07:36,240 --> 00:07:38,960
percent um

00:07:37,520 --> 00:07:41,039
and and there was a hack affecting over

00:07:38,960 --> 00:07:42,160
100 million customers which is you know

00:07:41,039 --> 00:07:45,840
that's that's what we're all trying to

00:07:42,160 --> 00:07:45,840
avoid really

00:07:46,160 --> 00:07:50,000
so from the bank's point of view what

00:07:48,479 --> 00:07:53,440
this project provides

00:07:50,000 --> 00:07:55,919
is much stronger controls

00:07:53,440 --> 00:07:57,120
proof of compliance so we will be able

00:07:55,919 --> 00:08:00,800
to

00:07:57,120 --> 00:08:04,720
prove to regulators to audit

00:08:00,800 --> 00:08:07,120
and internally that what we're running

00:08:04,720 --> 00:08:10,000
in the public cloud is compliant because

00:08:07,120 --> 00:08:11,840
we'll have tests that show us that

00:08:10,000 --> 00:08:13,520
genuine multi-cloud so a lot of banks

00:08:11,840 --> 00:08:16,080
are talking about multi-cloud

00:08:13,520 --> 00:08:17,599
um that's kind of not a reality for for

00:08:16,080 --> 00:08:18,479
a lot of banks it's sort of one or the

00:08:17,599 --> 00:08:21,599
other because

00:08:18,479 --> 00:08:23,520
of the overhead of adopting an

00:08:21,599 --> 00:08:24,000
individual set of services you know if

00:08:23,520 --> 00:08:27,919
you

00:08:24,000 --> 00:08:31,680
if you decide as a bank to adopt um

00:08:27,919 --> 00:08:32,640
gcp for example then you have to train

00:08:31,680 --> 00:08:36,240
your people

00:08:32,640 --> 00:08:39,200
in how gcp works you have to

00:08:36,240 --> 00:08:40,000
know what is available in gcp and you

00:08:39,200 --> 00:08:44,320
have to make

00:08:40,000 --> 00:08:47,680
those risk appetite decisions about

00:08:44,320 --> 00:08:48,959
whether what your requirements are for

00:08:47,680 --> 00:08:52,000
the containers that you're

00:08:48,959 --> 00:08:54,160
you're spinning up in gcp

00:08:52,000 --> 00:08:55,519
this project will also provide very fast

00:08:54,160 --> 00:08:57,440
switching between

00:08:55,519 --> 00:08:58,880
cloud providers um and that can be

00:08:57,440 --> 00:09:01,120
beneficial where

00:08:58,880 --> 00:09:02,000
um you know banks want to diversify

00:09:01,120 --> 00:09:03,760
across

00:09:02,000 --> 00:09:06,240
providers rather than having all their

00:09:03,760 --> 00:09:08,320
eggs in one basket as it were

00:09:06,240 --> 00:09:10,480
and it also provides the the engineering

00:09:08,320 --> 00:09:12,080
culture um which is a huge

00:09:10,480 --> 00:09:13,920
challenge for banks i think trying to

00:09:12,080 --> 00:09:15,920
build you know huge numbers of

00:09:13,920 --> 00:09:18,399
technologists and trying to operate

00:09:15,920 --> 00:09:20,160
like uh in that in that kind of famous

00:09:18,399 --> 00:09:22,320
tech startup culture

00:09:20,160 --> 00:09:24,880
that the public cloud providers and you

00:09:22,320 --> 00:09:26,959
know big tech firms do so well

00:09:24,880 --> 00:09:28,959
and uh you know working really closely

00:09:26,959 --> 00:09:31,040
with those companies on this project

00:09:28,959 --> 00:09:33,360
provides a huge engineering culture

00:09:31,040 --> 00:09:36,160
benefit to the banks as well

00:09:33,360 --> 00:09:37,760
from the tech contributors point of view

00:09:36,160 --> 00:09:39,440
it's access to the financial services

00:09:37,760 --> 00:09:41,200
industry which is you know one of the

00:09:39,440 --> 00:09:42,480
oldest and most powerful industries in

00:09:41,200 --> 00:09:44,959
the world

00:09:42,480 --> 00:09:47,040
and an incredibly difficult industry to

00:09:44,959 --> 00:09:50,399
get into and understand

00:09:47,040 --> 00:09:52,480
as an outsider and so you know my next

00:09:50,399 --> 00:09:55,519
point a more in-depth understanding

00:09:52,480 --> 00:09:57,200
the the the cloud providers particularly

00:09:55,519 --> 00:09:58,640
are really keen to understand the

00:09:57,200 --> 00:10:00,560
challenges faced by

00:09:58,640 --> 00:10:02,240
financial services providers because so

00:10:00,560 --> 00:10:03,920
many of their customers just don't have

00:10:02,240 --> 00:10:05,760
those kind of challenges particularly

00:10:03,920 --> 00:10:07,920
when you're a bank operating

00:10:05,760 --> 00:10:10,079
you know globally across regulatory

00:10:07,920 --> 00:10:11,680
jurisdictions

00:10:10,079 --> 00:10:13,279
and it also gives them influence over

00:10:11,680 --> 00:10:14,560
the public cloud choice so

00:10:13,279 --> 00:10:16,560
you know working with us on these

00:10:14,560 --> 00:10:17,760
projects allows the public cloud

00:10:16,560 --> 00:10:20,640
providers to show

00:10:17,760 --> 00:10:21,120
the the power of their platforms and and

00:10:20,640 --> 00:10:24,800
what's

00:10:21,120 --> 00:10:24,800
what's available what they can offer us

00:10:25,279 --> 00:10:31,120
so how exactly does this work so

00:10:28,560 --> 00:10:33,519
for each service we will go through this

00:10:31,120 --> 00:10:36,640
workflow that you can see on screen

00:10:33,519 --> 00:10:39,839
so uh it will pick a service like

00:10:36,640 --> 00:10:40,560
postgres for example yeah microsoft

00:10:39,839 --> 00:10:43,600
azure has a

00:10:40,560 --> 00:10:46,160
has a postgres database um

00:10:43,600 --> 00:10:47,680
ingrained in it so first we'll we'll

00:10:46,160 --> 00:10:49,279
build a policy document

00:10:47,680 --> 00:10:52,399
we call that a service approval

00:10:49,279 --> 00:10:55,760
accelerator and that is defining

00:10:52,399 --> 00:10:58,800
the parameters of our risk appetite for

00:10:55,760 --> 00:11:02,000
that service so that's talking about

00:10:58,800 --> 00:11:05,360
what is compulsory what is optional

00:11:02,000 --> 00:11:05,760
and um and how should those constraints

00:11:05,360 --> 00:11:09,519
look

00:11:05,760 --> 00:11:12,560
on public cloud so what should we um

00:11:09,519 --> 00:11:14,480
you know for a database for example do

00:11:12,560 --> 00:11:16,079
we need encryption at rest do we need

00:11:14,480 --> 00:11:19,279
encryption in transit

00:11:16,079 --> 00:11:20,399
um what what which ip address ranges can

00:11:19,279 --> 00:11:22,160
we expose

00:11:20,399 --> 00:11:24,000
and what are the options there as well

00:11:22,160 --> 00:11:24,959
so the service approval accelerator not

00:11:24,000 --> 00:11:26,880
only says

00:11:24,959 --> 00:11:28,800
okay all banks have to comply with this

00:11:26,880 --> 00:11:31,040
or or we don't need to care about these

00:11:28,800 --> 00:11:32,720
but it actually also says

00:11:31,040 --> 00:11:34,560
so there's some options here depending

00:11:32,720 --> 00:11:35,440
on what kind of data you're putting in

00:11:34,560 --> 00:11:37,200
the cloud

00:11:35,440 --> 00:11:39,120
and from a financial services point of

00:11:37,200 --> 00:11:41,200
view that's really valuable because

00:11:39,120 --> 00:11:42,240
of course the cloud providers themselves

00:11:41,200 --> 00:11:45,200
could tell us

00:11:42,240 --> 00:11:46,480
um it could tell us what options there

00:11:45,200 --> 00:11:47,920
are but they're not going to be able to

00:11:46,480 --> 00:11:49,920
give us the kind of

00:11:47,920 --> 00:11:51,839
insight from a financial services point

00:11:49,920 --> 00:11:55,279
of view as to okay

00:11:51,839 --> 00:11:57,040
this might be required by x regulator or

00:11:55,279 --> 00:12:00,079
there might be a knock-on effect of a

00:11:57,040 --> 00:12:01,680
certain of a certain setting

00:12:00,079 --> 00:12:03,519
so once we've defined that service

00:12:01,680 --> 00:12:04,399
approval accelerator that that policy

00:12:03,519 --> 00:12:07,680
document

00:12:04,399 --> 00:12:10,480
we then move on to creating bdd

00:12:07,680 --> 00:12:11,279
test scenarios so we want we really want

00:12:10,480 --> 00:12:13,920
this to be

00:12:11,279 --> 00:12:15,920
easily accessible easily readable and as

00:12:13,920 --> 00:12:18,000
new developers out there will know

00:12:15,920 --> 00:12:18,959
um you know gurken files give and when

00:12:18,000 --> 00:12:22,480
then cases

00:12:18,959 --> 00:12:24,000
are really really structured easy to

00:12:22,480 --> 00:12:27,120
understand way of writing

00:12:24,000 --> 00:12:28,959
tests at the top level and a really good

00:12:27,120 --> 00:12:29,600
way of writing of mapping tests onto

00:12:28,959 --> 00:12:31,040
requirements

00:12:29,600 --> 00:12:32,639
we've defined those requirements in the

00:12:31,040 --> 00:12:35,360
policy document we're now mapping them

00:12:32,639 --> 00:12:37,120
onto those bdd test scenarios

00:12:35,360 --> 00:12:39,040
so we've written our bdd test scenarios

00:12:37,120 --> 00:12:41,120
our gurken feature files

00:12:39,040 --> 00:12:42,160
we then map that further onto policy as

00:12:41,120 --> 00:12:44,079
code

00:12:42,160 --> 00:12:45,600
and that can be terraform uh we're

00:12:44,079 --> 00:12:49,760
currently having a discussion

00:12:45,600 --> 00:12:53,440
over um terraform versus

00:12:49,760 --> 00:12:56,160
uh a couple of other providers

00:12:53,440 --> 00:12:57,200
and that that policy is code will allow

00:12:56,160 --> 00:13:00,800
us to

00:12:57,200 --> 00:13:02,320
um spin up uh actually spin up the

00:13:00,800 --> 00:13:05,360
containers themselves

00:13:02,320 --> 00:13:06,959
using the um compliances code that

00:13:05,360 --> 00:13:08,800
that's in our repository

00:13:06,959 --> 00:13:10,720
so if you're a bank and you're wanting

00:13:08,800 --> 00:13:12,079
to create a postgres database and you

00:13:10,720 --> 00:13:14,000
want to comply with

00:13:12,079 --> 00:13:15,760
certain settings you can download these

00:13:14,000 --> 00:13:16,639
terraform scripts and spin it up and you

00:13:15,760 --> 00:13:18,639
know that they're

00:13:16,639 --> 00:13:20,079
thoroughly tested and you've got the bdd

00:13:18,639 --> 00:13:22,639
scenarios and you've got the

00:13:20,079 --> 00:13:24,000
policy document to explain exactly what

00:13:22,639 --> 00:13:27,040
regulations you're

00:13:24,000 --> 00:13:28,399
you're complying with and finally you've

00:13:27,040 --> 00:13:32,000
got your test fixtures

00:13:28,399 --> 00:13:34,720
so um those are kind of back testing

00:13:32,000 --> 00:13:35,120
on the bdd and on your terraform scripts

00:13:34,720 --> 00:13:37,760
to

00:13:35,120 --> 00:13:39,440
ensure that once you've created your um

00:13:37,760 --> 00:13:40,720
once you've created your containers

00:13:39,440 --> 00:13:42,480
those are indeed doing what they're

00:13:40,720 --> 00:13:45,360
supposed to do uh and

00:13:42,480 --> 00:13:45,920
you know you can kind of test that the

00:13:45,360 --> 00:13:49,839
um

00:13:45,920 --> 00:13:49,839
that the behavior is as it's expected

00:13:50,800 --> 00:13:54,959
so let's go and look at some code so

00:13:52,320 --> 00:13:56,560
i'll flip over to our github repository

00:13:54,959 --> 00:13:58,560
and this is just illustrating at the

00:13:56,560 --> 00:14:00,320
moment we've got google kubernetes

00:13:58,560 --> 00:14:02,880
engine is a work in progress

00:14:00,320 --> 00:14:04,639
postgres on azure deutsche has just uh

00:14:02,880 --> 00:14:06,320
contributed their

00:14:04,639 --> 00:14:07,839
service approval accelerator for that

00:14:06,320 --> 00:14:11,920
and amazon redshift was

00:14:07,839 --> 00:14:13,600
um contributed by jp morgan previously

00:14:11,920 --> 00:14:16,079
so this is the cloud service

00:14:13,600 --> 00:14:18,240
certification main project

00:14:16,079 --> 00:14:19,920
it's open anyone can join it and if

00:14:18,240 --> 00:14:21,680
developers would like to get involved

00:14:19,920 --> 00:14:24,399
then then please do drop me a message

00:14:21,680 --> 00:14:25,760
afterwards let me know

00:14:24,399 --> 00:14:27,440
so we've got a project wiki which

00:14:25,760 --> 00:14:28,160
explains a little bit more about it i'll

00:14:27,440 --> 00:14:29,519
show you the

00:14:28,160 --> 00:14:30,959
service approval accelerator for

00:14:29,519 --> 00:14:32,079
postgres because i think that's a really

00:14:30,959 --> 00:14:35,680
good

00:14:32,079 --> 00:14:37,519
place to start so the format is a

00:14:35,680 --> 00:14:38,880
markdown file we want all of it to stay

00:14:37,519 --> 00:14:39,440
in this github so that we've got a

00:14:38,880 --> 00:14:41,839
single

00:14:39,440 --> 00:14:43,440
single place to access the whole project

00:14:41,839 --> 00:14:45,199
and so that as i say

00:14:43,440 --> 00:14:46,880
it's as accessible as possible it's as

00:14:45,199 --> 00:14:48,720
easy to understand

00:14:46,880 --> 00:14:50,720
and really lots of different financial

00:14:48,720 --> 00:14:52,160
services institutions can access this

00:14:50,720 --> 00:14:54,240
information

00:14:52,160 --> 00:14:57,040
so if i flick through a couple of these

00:14:54,240 --> 00:14:58,320
um identity and access management for

00:14:57,040 --> 00:15:00,320
example

00:14:58,320 --> 00:15:03,360
if we look at authorization we're saying

00:15:00,320 --> 00:15:05,600
that it's recommended to only assign

00:15:03,360 --> 00:15:06,399
active directory azure active directory

00:15:05,600 --> 00:15:08,480
groups

00:15:06,399 --> 00:15:10,480
within postgres and not create

00:15:08,480 --> 00:15:11,600
individual users within postgres itself

00:15:10,480 --> 00:15:13,279
so

00:15:11,600 --> 00:15:15,199
what we're saying is that you'd have an

00:15:13,279 --> 00:15:16,480
active directory as your active

00:15:15,199 --> 00:15:19,920
directory instance

00:15:16,480 --> 00:15:22,000
um honors you and those roles

00:15:19,920 --> 00:15:23,440
are used to define the access to your

00:15:22,000 --> 00:15:27,199
database

00:15:23,440 --> 00:15:29,199
so that's an example of a specific

00:15:27,199 --> 00:15:30,240
you know we're saying this is the the

00:15:29,199 --> 00:15:32,639
way we think

00:15:30,240 --> 00:15:33,600
you're going to have best control over

00:15:32,639 --> 00:15:36,959
your

00:15:33,600 --> 00:15:39,360
authorization to your postgres database

00:15:36,959 --> 00:15:41,279
so if i flick down to another one we've

00:15:39,360 --> 00:15:43,839
got encryption at rest

00:15:41,279 --> 00:15:45,440
so we want encryption at rest it's

00:15:43,839 --> 00:15:46,720
required for data governance and

00:15:45,440 --> 00:15:49,120
compliance efforts

00:15:46,720 --> 00:15:52,320
we've cited a few government and

00:15:49,120 --> 00:15:55,199
industry regulations hipaa pci

00:15:52,320 --> 00:15:56,639
fedramp laying out specific safeguards

00:15:55,199 --> 00:15:59,279
regarding data protection

00:15:56,639 --> 00:16:01,279
and encryption requirements um and we're

00:15:59,279 --> 00:16:03,440
also saying that we want that data

00:16:01,279 --> 00:16:07,120
encryption to be using customer managed

00:16:03,440 --> 00:16:09,279
keys um so azure allows you to bring

00:16:07,120 --> 00:16:10,079
your own key by ok for data protection

00:16:09,279 --> 00:16:12,720
at rest

00:16:10,079 --> 00:16:14,320
and that allows you to actually hold the

00:16:12,720 --> 00:16:16,079
keys yourself rather than having the

00:16:14,320 --> 00:16:19,440
keys stored in

00:16:16,079 --> 00:16:20,959
as your as your key store so you can

00:16:19,440 --> 00:16:22,240
flick through this service approval

00:16:20,959 --> 00:16:25,120
accelerator and you can see

00:16:22,240 --> 00:16:27,440
plenty of um there's lots of examples so

00:16:25,120 --> 00:16:28,720
ip firewall rules we're onto network

00:16:27,440 --> 00:16:31,279
security now

00:16:28,720 --> 00:16:32,959
um and we're saying that if you want to

00:16:31,279 --> 00:16:34,800
create your network on azure

00:16:32,959 --> 00:16:36,880
then we've got some recommendations for

00:16:34,800 --> 00:16:39,759
how you could build that

00:16:36,880 --> 00:16:40,880
creating proxies to allow you to access

00:16:39,759 --> 00:16:43,839
your

00:16:40,880 --> 00:16:45,199
company network from azure obviously not

00:16:43,839 --> 00:16:47,680
opening your

00:16:45,199 --> 00:16:49,120
public ip addresses to the outside world

00:16:47,680 --> 00:16:52,480
so you only want to be able to access

00:16:49,120 --> 00:16:53,680
that from within your company network

00:16:52,480 --> 00:16:55,839
so that's the service approval

00:16:53,680 --> 00:16:57,839
accelerator i'll show you

00:16:55,839 --> 00:16:59,360
an example quick example of a bit of

00:16:57,839 --> 00:17:02,240
code so we've got some we've got some

00:16:59,360 --> 00:17:06,240
pull requests open here

00:17:02,240 --> 00:17:09,199
and kubernetes we have um

00:17:06,240 --> 00:17:13,280
let me find the right one we've got some

00:17:09,199 --> 00:17:13,280
terraform scripts being contributed as

00:17:16,839 --> 00:17:19,839
well

00:17:25,520 --> 00:17:31,200
this is really slope apologies

00:17:29,840 --> 00:17:34,880
okay here we go so we've got some

00:17:31,200 --> 00:17:34,880
kubernetes scripts here

00:17:35,120 --> 00:17:39,039
and here's the service approval

00:17:36,880 --> 00:17:39,919
accelerator for our google kubernetes

00:17:39,039 --> 00:17:42,240
engine

00:17:39,919 --> 00:17:43,919
um that's our markdown file and then we

00:17:42,240 --> 00:17:45,919
go in here and you can see

00:17:43,919 --> 00:17:48,000
we've got some terraform scripts so if i

00:17:45,919 --> 00:17:49,440
open up the main terraform script

00:17:48,000 --> 00:17:51,840
you can see we're creating google

00:17:49,440 --> 00:17:54,480
compute network compute firewall

00:17:51,840 --> 00:17:55,520
uh right the way down to the kubernetes

00:17:54,480 --> 00:17:58,080
cluster here

00:17:55,520 --> 00:17:59,520
and that's using the settings that we've

00:17:58,080 --> 00:18:02,799
recommended in our server

00:17:59,520 --> 00:18:04,080
service approval accelerator so that's

00:18:02,799 --> 00:18:05,919
how we recommend

00:18:04,080 --> 00:18:07,760
um we're gonna we're gonna go forward

00:18:05,919 --> 00:18:10,320
we're really trying to start with

00:18:07,760 --> 00:18:11,440
the code and so we're going from the

00:18:10,320 --> 00:18:13,120
ground up and where

00:18:11,440 --> 00:18:14,480
this project is saying let's just pick a

00:18:13,120 --> 00:18:17,120
service and

00:18:14,480 --> 00:18:18,880
any of the companies involved in this

00:18:17,120 --> 00:18:19,600
project can pick a service and go ahead

00:18:18,880 --> 00:18:22,000
and

00:18:19,600 --> 00:18:23,919
you know start start building um

00:18:22,000 --> 00:18:26,240
defining a service approval accelerator

00:18:23,919 --> 00:18:28,320
that's then discussed by the group

00:18:26,240 --> 00:18:30,160
and then that that information is

00:18:28,320 --> 00:18:31,360
contributed to the repository via pull

00:18:30,160 --> 00:18:33,440
requests

00:18:31,360 --> 00:18:34,640
uh so for deutsche that's linked up to

00:18:33,440 --> 00:18:36,880
our internal

00:18:34,640 --> 00:18:39,280
um bitbucket repository and we can push

00:18:36,880 --> 00:18:40,880
that over a proxy to the outside world

00:18:39,280 --> 00:18:42,400
for some companies it's not that

00:18:40,880 --> 00:18:43,919
difficult

00:18:42,400 --> 00:18:45,919
but yeah if you'd like to get involved

00:18:43,919 --> 00:18:48,160
then please do let me know

00:18:45,919 --> 00:18:49,919
we really welcome individuals and

00:18:48,160 --> 00:18:51,120
organizations to get involved in this

00:18:49,919 --> 00:18:53,200
project

00:18:51,120 --> 00:18:55,039
whether you're wanting to contribute

00:18:53,200 --> 00:18:56,880
terraform whether you're

00:18:55,039 --> 00:18:58,080
more on the cloud side or indeed just

00:18:56,880 --> 00:19:00,000
wanting to get involved in the

00:18:58,080 --> 00:19:01,760
discussions around the risk appetites

00:19:00,000 --> 00:19:04,559
and service approval accelerators

00:19:01,760 --> 00:19:06,000
that would be really valuable to us so

00:19:04,559 --> 00:19:07,679
i'm going to open it up for questions

00:19:06,000 --> 00:19:09,039
and thank you very much for listening i

00:19:07,679 --> 00:19:18,240
hope you have a really good

00:19:09,039 --> 00:19:18,240

YouTube URL: https://www.youtube.com/watch?v=T4S3_zB3eZQ


